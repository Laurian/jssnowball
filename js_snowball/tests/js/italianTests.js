QUnit.test('italian', function(){
	var Stem = snowballFactory.newStemmer('italian').stem;
	deepEqual( Stem("a"), "a" );
	deepEqual( Stem("à"), "à" );
	deepEqual( Stem("aa"), "aa" );
	deepEqual( Stem("aalst"), "aalst" );
	deepEqual( Stem("ab"), "ab" );
	deepEqual( Stem("abakoumova"), "abakoumov" );
	deepEqual( Stem("abano"), "aban" );
	deepEqual( Stem("abate"), "abat" );
	deepEqual( Stem("abati"), "abat" );
	deepEqual( Stem("abbacinare"), "abbacin" );
	deepEqual( Stem("abbacinati"), "abbacin" );
	deepEqual( Stem("abbadia"), "abbad" );
	deepEqual( Stem("abbado"), "abbad" );
	deepEqual( Stem("abbagliaron"), "abbagliaron" );
	deepEqual( Stem("abbagliato"), "abbagl" );
	deepEqual( Stem("abbaia"), "abbai" );
	deepEqual( Stem("abbaiano"), "abbai" );
	deepEqual( Stem("abbaiar"), "abbai" );
	deepEqual( Stem("abbaini"), "abbain" );
	deepEqual( Stem("abbandona"), "abbandon" );
	deepEqual( Stem("abbandonando"), "abbandon" );
	deepEqual( Stem("abbandonano"), "abbandon" );
	deepEqual( Stem("abbandonar"), "abbandon" );
	deepEqual( Stem("abbandonare"), "abbandon" );
	deepEqual( Stem("abbandonarla"), "abbandon" );
	deepEqual( Stem("abbandonarlo"), "abbandon" );
	deepEqual( Stem("abbandonarsi"), "abbandon" );
	deepEqual( Stem("abbandonarvi"), "abbandon" );
	deepEqual( Stem("abbandonasse"), "abbandon" );
	deepEqual( Stem("abbandonata"), "abbandon" );
	deepEqual( Stem("abbandonate"), "abbandon" );
	deepEqual( Stem("abbandonati"), "abbandon" );
	deepEqual( Stem("abbandonato"), "abbandon" );
	deepEqual( Stem("abbandonava"), "abbandon" );
	deepEqual( Stem("abbandonerà"), "abbandon" );
	deepEqual( Stem("abbandoneranno"), "abbandon" );
	deepEqual( Stem("abbandonerò"), "abbandon" );
	deepEqual( Stem("abbandono"), "abband" );
	deepEqual( Stem("abbandonò"), "abbandon" );
	deepEqual( Stem("abbaruffato"), "abbaruff" );
	deepEqual( Stem("abbassamento"), "abbass" );
	deepEqual( Stem("abbassando"), "abbass" );
	deepEqual( Stem("abbassandola"), "abbass" );
	deepEqual( Stem("abbassandole"), "abbass" );
	deepEqual( Stem("abbassar"), "abbass" );
	deepEqual( Stem("abbassare"), "abbass" );
	deepEqual( Stem("abbassarono"), "abbass" );
	deepEqual( Stem("abbassarsi"), "abbass" );
	deepEqual( Stem("abbassassero"), "abbass" );
	deepEqual( Stem("abbassato"), "abbass" );
	deepEqual( Stem("abbassava"), "abbass" );
	deepEqual( Stem("abbassi"), "abbass" );
	deepEqual( Stem("abbassò"), "abbass" );
	deepEqual( Stem("abbastanza"), "abbast" );
	deepEqual( Stem("abbatté"), "abbatt" );
	deepEqual( Stem("abbattendo"), "abbatt" );
	deepEqual( Stem("abbattere"), "abbatt" );
	deepEqual( Stem("abbattersi"), "abbatt" );
	deepEqual( Stem("abbattesse"), "abbattess" );
	deepEqual( Stem("abbatteva"), "abbatt" );
	deepEqual( Stem("abbattevamo"), "abbatt" );
	deepEqual( Stem("abbattevano"), "abbatt" );
	deepEqual( Stem("abbattimento"), "abbatt" );
	deepEqual( Stem("abbattuta"), "abbatt" );
	deepEqual( Stem("abbattuti"), "abbatt" );
	deepEqual( Stem("abbattuto"), "abbatt" );
	deepEqual( Stem("abbellita"), "abbell" );
	deepEqual( Stem("abbenché"), "abbenc" );
	deepEqual( Stem("abbi"), "abbi" );
	deepEqual( Stem("abbia"), "abbi" );
	deepEqual( Stem("abbiam"), "abbiam" );
	deepEqual( Stem("abbiamo"), "abbiam" );
	deepEqual( Stem("abbian"), "abbian" );
	deepEqual( Stem("abbiano"), "abbi" );
	deepEqual( Stem("abbiate"), "abbi" );
	deepEqual( Stem("abbiccì"), "abbicc" );
	deepEqual( Stem("abbietti"), "abbiett" );
	deepEqual( Stem("abbigliamento"), "abbigl" );
	deepEqual( Stem("abbinamento"), "abbin" );
	deepEqual( Stem("abbinano"), "abbin" );
	deepEqual( Stem("abbinata"), "abbin" );
	deepEqual( Stem("abbinato"), "abbin" );
	deepEqual( Stem("abboccamenti"), "abbocc" );
	deepEqual( Stem("abboccamento"), "abbocc" );
	deepEqual( Stem("abbominata"), "abbomin" );
	deepEqual( Stem("abbominazione"), "abbomin" );
	deepEqual( Stem("abbominevole"), "abbominevol" );
	deepEqual( Stem("abbominevoli"), "abbominevol" );
	deepEqual( Stem("abbominio"), "abbomin" );
	deepEqual( Stem("abbonati"), "abbon" );
	deepEqual( Stem("abbonato"), "abbon" );
	deepEqual( Stem("abbonda"), "abbond" );
	deepEqual( Stem("abbondano"), "abbond" );
	deepEqual( Stem("abbondante"), "abbond" );
	deepEqual( Stem("abbondantemente"), "abbondant" );
	deepEqual( Stem("abbondanti"), "abbond" );
	deepEqual( Stem("abbondanza"), "abbond" );
	deepEqual( Stem("abbondare"), "abbond" );
	deepEqual( Stem("abbondio"), "abbond" );
	deepEqual( Stem("abbonire"), "abbon" );
	deepEqual( Stem("abbordarne"), "abbord" );
	deepEqual( Stem("abbordo"), "abbord" );
	deepEqual( Stem("abborracciata"), "abborracc" );
	deepEqual( Stem("abborrimento"), "abborr" );
	deepEqual( Stem("abborrito"), "abborr" );
	deepEqual( Stem("abbott"), "abbott" );
	deepEqual( Stem("abbozzata"), "abbozz" );
	deepEqual( Stem("abbozzato"), "abbozz" );
	deepEqual( Stem("abbracci"), "abbracc" );
	deepEqual( Stem("abbraccia"), "abbracc" );
	deepEqual( Stem("abbracciamenti"), "abbracc" );
	deepEqual( Stem("abbracciar"), "abbracc" );
	deepEqual( Stem("abbracciare"), "abbracc" );
	deepEqual( Stem("abbracciarne"), "abbracc" );
	deepEqual( Stem("abbracciaron"), "abbracciaron" );
	deepEqual( Stem("abbracciata"), "abbracc" );
	deepEqual( Stem("abbracciate"), "abbracc" );
	deepEqual( Stem("abbracciati"), "abbracc" );
	deepEqual( Stem("abbracciato"), "abbracc" );
	deepEqual( Stem("abbracciavano"), "abbracc" );
	deepEqual( Stem("abbraccio"), "abbracc" );
	deepEqual( Stem("abbracciò"), "abbracc" );
	deepEqual( Stem("abbreviarli"), "abbrev" );
	deepEqual( Stem("abbreviata"), "abbrev" );
	deepEqual( Stem("abbreviati"), "abbrev" );
	deepEqual( Stem("abbronzate"), "abbronz" );
	deepEqual( Stem("abbronzati"), "abbronz" );
	deepEqual( Stem("abbruciacchiato"), "abbruciacc" );
	deepEqual( Stem("abbruciacchiavano"), "abbruciacc" );
	deepEqual( Stem("abbrunati"), "abbrun" );
	deepEqual( Stem("abbuffata"), "abbuff" );
	deepEqual( Stem("abburattavan"), "abburattavan" );
	deepEqual( Stem("abc"), "abc" );
	deepEqual( Stem("abdel"), "abdel" );
	deepEqual( Stem("abdic"), "abdic" );
	deepEqual( Stem("abdica"), "abdic" );
	deepEqual( Stem("abdul"), "abdul" );
	deepEqual( Stem("abeille"), "abeill" );
	deepEqual( Stem("abel"), "abel" );
	deepEqual( Stem("aberdeen"), "aberdeen" );
	deepEqual( Stem("abergele"), "abergel" );
	deepEqual( Stem("abete"), "abet" );
	deepEqual( Stem("abietto"), "abiett" );
	deepEqual( Stem("abile"), "abil" );
	deepEqual( Stem("abili"), "abil" );
	deepEqual( Stem("abilità"), "abil" );
	deepEqual( Stem("abilitante"), "abilit" );
	deepEqual( Stem("abilitate"), "abilit" );
	deepEqual( Stem("abilitazione"), "abilit" );
	deepEqual( Stem("abiliterà"), "abilit" );
	deepEqual( Stem("abisso"), "abiss" );
	deepEqual( Stem("abita"), "abit" );
	deepEqual( Stem("abitacolo"), "abitacol" );
	deepEqual( Stem("abitante"), "abit" );
	deepEqual( Stem("abitanti"), "abit" );
	deepEqual( Stem("abitare"), "abit" );
	deepEqual( Stem("abitata"), "abit" );
	deepEqual( Stem("abitate"), "abit" );
	deepEqual( Stem("abitati"), "abit" );
	deepEqual( Stem("abitato"), "abit" );
	deepEqual( Stem("abitator"), "abitator" );
	deepEqual( Stem("abitatori"), "abit" );
	deepEqual( Stem("abitava"), "abit" );
	deepEqual( Stem("abitavano"), "abit" );
	deepEqual( Stem("abitazione"), "abit" );
	deepEqual( Stem("abitazioni"), "abit" );
	deepEqual( Stem("abiti"), "abit" );
	deepEqual( Stem("abito"), "abit" );
	deepEqual( Stem("abituale"), "abitual" );
	deepEqual( Stem("abituali"), "abitual" );
	deepEqual( Stem("abitualmente"), "abitual" );
	deepEqual( Stem("abituarci"), "abitu" );
	deepEqual( Stem("abituato"), "abitu" );
	deepEqual( Stem("abitudine"), "abitudin" );
	deepEqual( Stem("abitudini"), "abitudin" );
	deepEqual( Stem("abituro"), "abitur" );
	deepEqual( Stem("ablandarlos"), "ablandarlos" );
	deepEqual( Stem("abolendo"), "abol" );
	deepEqual( Stem("abolire"), "abol" );
	deepEqual( Stem("abolirli"), "abol" );
	deepEqual( Stem("abolisce"), "abol" );
	deepEqual( Stem("abolita"), "abol" );
	deepEqual( Stem("abolizione"), "abolizion" );
	deepEqual( Stem("aborto"), "abort" );
	deepEqual( Stem("abruzzesi"), "abruzzes" );
	deepEqual( Stem("abruzzo"), "abruzz" );
	deepEqual( Stem("abulia"), "abul" );
	deepEqual( Stem("abusare"), "abus" );
	deepEqual( Stem("abuso"), "abus" );
	deepEqual( Stem("ac"), "ac" );
	deepEqual( Stem("accada"), "accad" );
	deepEqual( Stem("accadde"), "accadd" );
	deepEqual( Stem("accaddero"), "accadder" );
	deepEqual( Stem("accade"), "accad" );
	deepEqual( Stem("accademia"), "accadem" );
	deepEqual( Stem("accademica"), "accadem" );
	deepEqual( Stem("accademicamente"), "accadem" );
	deepEqual( Stem("accademici"), "accadem" );
	deepEqual( Stem("accademico"), "accadem" );
	deepEqual( Stem("accademie"), "accadem" );
	deepEqual( Stem("accadendo"), "accad" );
	deepEqual( Stem("accader"), "accader" );
	deepEqual( Stem("accaderà"), "accad" );
	deepEqual( Stem("accadere"), "accad" );
	deepEqual( Stem("accadesse"), "accadess" );
	deepEqual( Stem("accadeva"), "accad" );
	deepEqual( Stem("accadevan"), "accadevan" );
	deepEqual( Stem("accadon"), "accadon" );
	deepEqual( Stem("accadono"), "accad" );
	deepEqual( Stem("accaduta"), "accad" );
	deepEqual( Stem("accadute"), "accad" );
	deepEqual( Stem("accaduto"), "accad" );
	deepEqual( Stem("accalappino"), "accalappin" );
	deepEqual( Stem("accame"), "accam" );
	deepEqual( Stem("accampamento"), "accamp" );
	deepEqual( Stem("accampati"), "accamp" );
	deepEqual( Stem("accando"), "accand" );
	deepEqual( Stem("accanimento"), "accan" );
	deepEqual( Stem("accanite"), "accan" );
	deepEqual( Stem("accanito"), "accan" );
	deepEqual( Stem("accanto"), "accant" );
	deepEqual( Stem("accantonamenti"), "accanton" );
	deepEqual( Stem("accantonamento"), "accanton" );
	deepEqual( Stem("accantonando"), "accanton" );
	deepEqual( Stem("accarezza"), "accarezz" );
	deepEqual( Stem("accarezzando"), "accarezz" );
	deepEqual( Stem("accarezzandolo"), "accarezz" );
	deepEqual( Stem("accarezzar"), "accarezz" );
	deepEqual( Stem("accarezzare"), "accarezz" );
	deepEqual( Stem("accarezzarla"), "accarezz" );
	deepEqual( Stem("accarezzarlo"), "accarezz" );
	deepEqual( Stem("accarezzato"), "accarezz" );
	deepEqual( Stem("accarezzavan"), "accarezzavan" );
	deepEqual( Stem("accarezzò"), "accarezz" );
	deepEqual( Stem("accartocciava"), "accartocc" );
	deepEqual( Stem("accasato"), "accas" );
	deepEqual( Stem("accatastata"), "accatast" );
	deepEqual( Stem("accattabrighe"), "accattabrig" );
	deepEqual( Stem("accattando"), "accatt" );
	deepEqual( Stem("accattar"), "accatt" );
	deepEqual( Stem("accattarlo"), "accatt" );
	deepEqual( Stem("accattato"), "accatt" );
	deepEqual( Stem("accattivanti"), "accattiv" );
	deepEqual( Stem("accatto"), "accatt" );
	deepEqual( Stem("accattoni"), "accatton" );
	deepEqual( Stem("accavallata"), "accavall" );
	deepEqual( Stem("acccordi"), "acccord" );
	deepEqual( Stem("accecato"), "accec" );
	deepEqual( Stem("accedatis"), "accedatis" );
	deepEqual( Stem("accedere"), "acced" );
	deepEqual( Stem("accelera"), "acceler" );
	deepEqual( Stem("accelerando"), "acceler" );
	deepEqual( Stem("accelerare"), "acceler" );
	deepEqual( Stem("accelerato"), "acceler" );
	deepEqual( Stem("acceleratore"), "acceler" );
	deepEqual( Stem("accelerazione"), "acceler" );
	deepEqual( Stem("accellerare"), "acceller" );
	deepEqual( Stem("accenda"), "accend" );
	deepEqual( Stem("accende"), "accend" );
	deepEqual( Stem("accendere"), "accend" );
	deepEqual( Stem("accenna"), "accenn" );
	deepEqual( Stem("accennando"), "accenn" );
	deepEqual( Stem("accennano"), "accenn" );
	deepEqual( Stem("accennar"), "accenn" );
	deepEqual( Stem("accennare"), "accenn" );
	deepEqual( Stem("accennarla"), "accenn" );
	deepEqual( Stem("accennarono"), "accenn" );
	deepEqual( Stem("accennate"), "accenn" );
	deepEqual( Stem("accennati"), "accenn" );
	deepEqual( Stem("accennato"), "accenn" );
	deepEqual( Stem("accennava"), "accenn" );
	deepEqual( Stem("accennavano"), "accenn" );
	deepEqual( Stem("accenneremo"), "accenn" );
	deepEqual( Stem("accennerò"), "accenn" );
	deepEqual( Stem("accenno"), "accenn" );
	deepEqual( Stem("accennò"), "accenn" );
	deepEqual( Stem("accenti"), "accent" );
	deepEqual( Stem("accento"), "accent" );
	deepEqual( Stem("accentrato"), "accentr" );
	deepEqual( Stem("accentua"), "accentu" );
	deepEqual( Stem("accentuandone"), "accentu" );
	deepEqual( Stem("accentuano"), "accentu" );
	deepEqual( Stem("accerchiati"), "accerc" );
	deepEqual( Stem("accertamenti"), "accert" );
	deepEqual( Stem("accertamento"), "accert" );
	deepEqual( Stem("accertare"), "accert" );
	deepEqual( Stem("accertarmi"), "accert" );
	deepEqual( Stem("accertarsi"), "accert" );
	deepEqual( Stem("accertate"), "accert" );
	deepEqual( Stem("accertato"), "accert" );
	deepEqual( Stem("accertò"), "accert" );
	deepEqual( Stem("accesa"), "acces" );
	deepEqual( Stem("accese"), "acces" );
	deepEqual( Stem("accesi"), "acces" );
	deepEqual( Stem("acceso"), "acces" );
	deepEqual( Stem("accessi"), "access" );
	deepEqual( Stem("accessibili"), "access" );
	deepEqual( Stem("accesso"), "access" );
	deepEqual( Stem("accessòri"), "accessòr" );
	deepEqual( Stem("accessorie"), "accessor" );
	deepEqual( Stem("accetta"), "accett" );
	deepEqual( Stem("accettabile"), "accett" );
	deepEqual( Stem("accettabili"), "accett" );
	deepEqual( Stem("accettando"), "accett" );
	deepEqual( Stem("accettano"), "accett" );
	deepEqual( Stem("accettare"), "accett" );
	deepEqual( Stem("accettarle"), "accett" );
	deepEqual( Stem("accettaron"), "accettaron" );
	deepEqual( Stem("accettarsi"), "accett" );
	deepEqual( Stem("accettasse"), "accett" );
	deepEqual( Stem("accettata"), "accett" );
	deepEqual( Stem("accettate"), "accett" );
	deepEqual( Stem("accettati"), "accett" );
	deepEqual( Stem("accettato"), "accett" );
	deepEqual( Stem("accettava"), "accett" );
	deepEqual( Stem("accettazione"), "accett" );
	deepEqual( Stem("accette"), "accett" );
	deepEqual( Stem("accetterà"), "accett" );
	deepEqual( Stem("accetteresti"), "accett" );
	deepEqual( Stem("accetterò"), "accett" );
	deepEqual( Stem("accetti"), "accett" );
	deepEqual( Stem("accetto"), "accett" );
	deepEqual( Stem("accettò"), "accett" );
	deepEqual( Stem("accezione"), "accezion" );
	deepEqual( Stem("acchetare"), "acchet" );
	deepEqual( Stem("acchiappar"), "acchiapp" );
	deepEqual( Stem("acchiappare"), "acchiapp" );
	deepEqual( Stem("acchiapparlo"), "acchiapp" );
	deepEqual( Stem("acchiappato"), "acchiapp" );
	deepEqual( Stem("acchiappatolo"), "acchiappatol" );
	deepEqual( Stem("acciai"), "accia" );
	deepEqual( Stem("acciarino"), "acciarin" );
	deepEqual( Stem("accidentale"), "accidental" );
	deepEqual( Stem("accidentalmente"), "accidental" );
	deepEqual( Stem("accidente"), "accident" );
	deepEqual( Stem("accidenti"), "accident" );
	deepEqual( Stem("accieca"), "acciec" );
	deepEqual( Stem("accigliato"), "accigl" );
	deepEqual( Stem("accingo"), "accing" );
	deepEqual( Stem("acciò"), "acci" );
	deepEqual( Stem("acciocché"), "acciocc" );
	deepEqual( Stem("accipigliato"), "accipigl" );
	deepEqual( Stem("acciuffa"), "acciuff" );
	deepEqual( Stem("acciughe"), "acciug" );
	deepEqual( Stem("acclamazione"), "acclam" );
	deepEqual( Stem("acclamazioni"), "acclam" );
	deepEqual( Stem("accluder"), "accluder" );
	deepEqual( Stem("accluderla"), "acclud" );
	deepEqual( Stem("accoglie"), "accogl" );
	deepEqual( Stem("accogliendo"), "accogl" );
	deepEqual( Stem("accoglienza"), "accoglient" );
	deepEqual( Stem("accoglienze"), "accoglient" );
	deepEqual( Stem("accogliere"), "accogl" );
	deepEqual( Stem("accoglierli"), "accogl" );
	deepEqual( Stem("accogliervi"), "accogl" );
	deepEqual( Stem("accoglieva"), "accogl" );
	deepEqual( Stem("accoglimento"), "accogl" );
	deepEqual( Stem("accolse"), "accols" );
	deepEqual( Stem("accolta"), "accolt" );
	deepEqual( Stem("accoltellamento"), "accoltell" );
	deepEqual( Stem("accoltellarlo"), "accoltell" );
	deepEqual( Stem("accoltellata"), "accoltell" );
	deepEqual( Stem("accolti"), "accolt" );
	deepEqual( Stem("accolto"), "accolt" );
	deepEqual( Stem("accomiatò"), "accomiat" );
	deepEqual( Stem("accommiatò"), "accommiat" );
	deepEqual( Stem("accomoda"), "accomod" );
	deepEqual( Stem("accomodamento"), "accomod" );
	deepEqual( Stem("accomodando"), "accomod" );
	deepEqual( Stem("accomodandosi"), "accomod" );
	deepEqual( Stem("accomodano"), "accomod" );
	deepEqual( Stem("accomodar"), "accomod" );
	deepEqual( Stem("accomodarcisi"), "accomodarcis" );
	deepEqual( Stem("accomodare"), "accomod" );
	deepEqual( Stem("accomodarla"), "accomod" );
	deepEqual( Stem("accomodarmi"), "accomod" );
	deepEqual( Stem("accomodarsi"), "accomod" );
	deepEqual( Stem("accomodata"), "accomod" );
	deepEqual( Stem("accomodate"), "accomod" );
	deepEqual( Stem("accomodati"), "accomod" );
	deepEqual( Stem("accomodato"), "accomod" );
	deepEqual( Stem("accomodava"), "accomod" );
	deepEqual( Stem("accomodavano"), "accomod" );
	deepEqual( Stem("accomoderemo"), "accomod" );
	deepEqual( Stem("accomoderò"), "accomod" );
	deepEqual( Stem("accomodo"), "accomod" );
	deepEqual( Stem("accomodò"), "accomod" );
	deepEqual( Stem("accompagna"), "accompagn" );
	deepEqual( Stem("accompagnamento"), "accompagn" );
	deepEqual( Stem("accompagnando"), "accompagn" );
	deepEqual( Stem("accompagnandolo"), "accompagn" );
	deepEqual( Stem("accompagnano"), "accompagn" );
	deepEqual( Stem("accompagnar"), "accompagn" );
	deepEqual( Stem("accompagnare"), "accompagn" );
	deepEqual( Stem("accompagnarla"), "accompagn" );
	deepEqual( Stem("accompagnarlo"), "accompagn" );
	deepEqual( Stem("accompagnaron"), "accompagnaron" );
	deepEqual( Stem("accompagnata"), "accompagn" );
	deepEqual( Stem("accompagnate"), "accompagn" );
	deepEqual( Stem("accompagnati"), "accompagn" );
	deepEqual( Stem("accompagnato"), "accompagn" );
	deepEqual( Stem("accompagnatolo"), "accompagnatol" );
	deepEqual( Stem("accompagnava"), "accompagn" );
	deepEqual( Stem("accompagnavano"), "accompagn" );
	deepEqual( Stem("accompagnerete"), "accompagn" );
	deepEqual( Stem("accompagnerò"), "accompagn" );
	deepEqual( Stem("accompagni"), "accompagn" );
	deepEqual( Stem("accompagnò"), "accompagn" );
	deepEqual( Stem("acconcio"), "acconc" );
	deepEqual( Stem("acconsente"), "acconsent" );
	deepEqual( Stem("acconsentì"), "acconsent" );
	deepEqual( Stem("acconsentire"), "acconsent" );
	deepEqual( Stem("acconsentirò"), "acconsent" );
	deepEqual( Stem("accontentarsi"), "accontent" );
	deepEqual( Stem("accoppia"), "accopp" );
	deepEqual( Stem("accoppiamento"), "accopp" );
	deepEqual( Stem("accoppiata"), "accopp" );
	deepEqual( Stem("accora"), "accor" );
	deepEqual( Stem("accoramento"), "accor" );
	deepEqual( Stem("accorando"), "accor" );
	deepEqual( Stem("accorata"), "accor" );
	deepEqual( Stem("accorciato"), "accorc" );
	deepEqual( Stem("accorda"), "accord" );
	deepEqual( Stem("accordarlo"), "accord" );
	deepEqual( Stem("accordarsi"), "accord" );
	deepEqual( Stem("accordasse"), "accord" );
	deepEqual( Stem("accordate"), "accord" );
	deepEqual( Stem("accordato"), "accord" );
	deepEqual( Stem("accordava"), "accord" );
	deepEqual( Stem("accorderebbero"), "accord" );
	deepEqual( Stem("accordi"), "accord" );
	deepEqual( Stem("accordo"), "accord" );
	deepEqual( Stem("accorga"), "accorg" );
	deepEqual( Stem("accorge"), "accorg" );
	deepEqual( Stem("accorgendosi"), "accorg" );
	deepEqual( Stem("accorgerà"), "accorg" );
	deepEqual( Stem("accorgere"), "accorg" );
	deepEqual( Stem("accorgermi"), "accorg" );
	deepEqual( Stem("accorgersene"), "accorg" );
	deepEqual( Stem("accorgersi"), "accorg" );
	deepEqual( Stem("accorgesse"), "accorgess" );
	deepEqual( Stem("accorgeva"), "accorg" );
	deepEqual( Stem("accorgevan"), "accorgevan" );
	deepEqual( Stem("accorgo"), "accorg" );
	deepEqual( Stem("accorgono"), "accorg" );
	deepEqual( Stem("accorpa"), "accorp" );
	deepEqual( Stem("accorpamento"), "accorp" );
	deepEqual( Stem("accorpando"), "accorp" );
	deepEqual( Stem("accorre"), "accorr" );
	deepEqual( Stem("accorrere"), "accorr" );
	deepEqual( Stem("accorresse"), "accorress" );
	deepEqual( Stem("accorreva"), "accorr" );
	deepEqual( Stem("accorrevano"), "accorr" );
	deepEqual( Stem("accorrono"), "accorr" );
	deepEqual( Stem("accorse"), "accors" );
	deepEqual( Stem("accorsero"), "accorser" );
	deepEqual( Stem("accorso"), "accors" );
	deepEqual( Stem("accortamente"), "accort" );
	deepEqual( Stem("accorti"), "accort" );
	deepEqual( Stem("accorto"), "accort" );
	deepEqual( Stem("accortosi"), "accort" );
	deepEqual( Stem("accosta"), "accost" );
	deepEqual( Stem("accostamento"), "accost" );
	deepEqual( Stem("accostandosi"), "accost" );
	deepEqual( Stem("accostare"), "accost" );
	deepEqual( Stem("accostarglisi"), "accostarglis" );
	deepEqual( Stem("accostarsele"), "accostarsel" );
	deepEqual( Stem("accostarsi"), "accost" );
	deepEqual( Stem("accostate"), "accost" );
	deepEqual( Stem("accostatevi"), "accostat" );
	deepEqual( Stem("accostati"), "accost" );
	deepEqual( Stem("accostato"), "accost" );
	deepEqual( Stem("accostatosi"), "accostat" );
	deepEqual( Stem("accostava"), "accost" );
	deepEqual( Stem("accosto"), "accost" );
	deepEqual( Stem("accostò"), "accost" );
	deepEqual( Stem("accostumato"), "accostum" );
	deepEqual( Stem("accovacciati"), "accovacc" );
	deepEqual( Stem("accozzaglia"), "accozzagl" );
	deepEqual( Stem("accozzando"), "accozz" );
	deepEqual( Stem("accozzar"), "accozz" );
	deepEqual( Stem("accozzarsi"), "accozz" );
	deepEqual( Stem("accozzati"), "accozz" );
	deepEqual( Stem("accrebbe"), "accrebb" );
	deepEqual( Stem("accreditamento"), "accredit" );
	deepEqual( Stem("accreditati"), "accredit" );
	deepEqual( Stem("accrediti"), "accred" );
	deepEqual( Stem("accresce"), "accresc" );
	deepEqual( Stem("accrescendo"), "accresc" );
	deepEqual( Stem("accrescer"), "accrescer" );
	deepEqual( Stem("accrescere"), "accresc" );
	deepEqual( Stem("accrescerebbe"), "accresc" );
	deepEqual( Stem("accrescerle"), "accresc" );
	deepEqual( Stem("accrescerlo"), "accresc" );
	deepEqual( Stem("accresceva"), "accresc" );
	deepEqual( Stem("accrescevano"), "accresc" );
	deepEqual( Stem("accresciuta"), "accresc" );
	deepEqual( Stem("accucciata"), "accucc" );
	deepEqual( Stem("accudire"), "accud" );
	deepEqual( Stem("accumulando"), "accumul" );
	deepEqual( Stem("accumulato"), "accumul" );
	deepEqual( Stem("accurata"), "accur" );
	deepEqual( Stem("accusa"), "accus" );
	deepEqual( Stem("accusando"), "accus" );
	deepEqual( Stem("accusandole"), "accus" );
	deepEqual( Stem("accusandolo"), "accus" );
	deepEqual( Stem("accusar"), "accus" );
	deepEqual( Stem("accusare"), "accus" );
	deepEqual( Stem("accusata"), "accus" );
	deepEqual( Stem("accusate"), "accus" );
	deepEqual( Stem("accusati"), "accus" );
	deepEqual( Stem("accusato"), "accus" );
	deepEqual( Stem("accusatore"), "accus" );
	deepEqual( Stem("accusava"), "accus" );
	deepEqual( Stem("accusavan"), "accusavan" );
	deepEqual( Stem("accusavano"), "accus" );
	deepEqual( Stem("accuse"), "accus" );
	deepEqual( Stem("accusò"), "accus" );
	deepEqual( Stem("acerba"), "acerb" );
	deepEqual( Stem("acerbi"), "acerb" );
	deepEqual( Stem("acerra"), "acerr" );
	deepEqual( Stem("aceti"), "acet" );
	deepEqual( Stem("aceto"), "acet" );
	deepEqual( Stem("acetoselle"), "acetosell" );
	deepEqual( Stem("acevedo"), "aceved" );
	deepEqual( Stem("achille"), "achill" );
	deepEqual( Stem("achillini"), "achillin" );
	deepEqual( Stem("acidi"), "acid" );
	deepEqual( Stem("acireale"), "acireal" );
	deepEqual( Stem("acklin"), "acklin" );
	deepEqual( Stem("acli"), "acli" );
	deepEqual( Stem("acnur"), "acnur" );
	deepEqual( Stem("acogliere"), "acogl" );
	deepEqual( Stem("acopi"), "acop" );
	deepEqual( Stem("acoteias"), "acoteias" );
	deepEqual( Stem("acq"), "acq" );
	deepEqual( Stem("acqua"), "acqua" );
	deepEqual( Stem("acquarone"), "acquaron" );
	deepEqual( Stem("acquatico"), "acquat" );
	deepEqual( Stem("acquattato"), "acquatt" );
	deepEqual( Stem("acque"), "acque" );
	deepEqual( Stem("acquea"), "acque" );
	deepEqual( Stem("acquedotti"), "acquedott" );
	deepEqual( Stem("acquerugiola"), "acquerugiol" );
	deepEqual( Stem("acqui"), "acqui" );
	deepEqual( Stem("acquieta"), "acquiet" );
	deepEqual( Stem("acquietamento"), "acquiet" );
	deepEqual( Stem("acquietando"), "acquiet" );
	deepEqual( Stem("acquietandosele"), "acquietandosel" );
	deepEqual( Stem("acquietante"), "acquiet" );
	deepEqual( Stem("acquietare"), "acquiet" );
	deepEqual( Stem("acquietarla"), "acquiet" );
	deepEqual( Stem("acquietarle"), "acquiet" );
	deepEqual( Stem("acquietarlo"), "acquiet" );
	deepEqual( Stem("acquietarono"), "acquiet" );
	deepEqual( Stem("acquietasse"), "acquiet" );
	deepEqual( Stem("acquietati"), "acquiet" );
	deepEqual( Stem("acquietava"), "acquiet" );
	deepEqual( Stem("acquietò"), "acquiet" );
	deepEqual( Stem("acquirente"), "acquirent" );
	deepEqual( Stem("acquirenti"), "acquirent" );
	deepEqual( Stem("acquisire"), "acquis" );
	deepEqual( Stem("acquisirlo"), "acquis" );
	deepEqual( Stem("acquisite"), "acquis" );
	deepEqual( Stem("acquisito"), "acquis" );
	deepEqual( Stem("acquisizione"), "acquisizion" );
	deepEqual( Stem("acquisizioni"), "acquisizion" );
	deepEqual( Stem("acquista"), "acquist" );
	deepEqual( Stem("acquistandosi"), "acquist" );
	deepEqual( Stem("acquistar"), "acquist" );
	deepEqual( Stem("acquistare"), "acquist" );
	deepEqual( Stem("acquistarne"), "acquist" );
	deepEqual( Stem("acquistarsi"), "acquist" );
	deepEqual( Stem("acquistata"), "acquist" );
	deepEqual( Stem("acquistato"), "acquist" );
	deepEqual( Stem("acquistavano"), "acquist" );
	deepEqual( Stem("acquisterà"), "acquist" );
	deepEqual( Stem("acquisteranno"), "acquist" );
	deepEqual( Stem("acquisti"), "acquist" );
	deepEqual( Stem("acquisto"), "acquist" );
	deepEqual( Stem("acquistò"), "acquist" );
	deepEqual( Stem("acquitrinosa"), "acquitrin" );
	deepEqual( Stem("acquolina"), "acquolin" );
	deepEqual( Stem("act"), "act" );
	deepEqual( Stem("action"), "action" );
	deepEqual( Stem("acuta"), "acut" );
	deepEqual( Stem("acutamente"), "acut" );
	deepEqual( Stem("acute"), "acut" );
	deepEqual( Stem("acuti"), "acut" );
	deepEqual( Stem("acuto"), "acut" );
	deepEqual( Stem("ad"), "ad" );
	deepEqual( Stem("adagino"), "adagin" );
	deepEqual( Stem("adagio"), "adag" );
	deepEqual( Stem("adam"), "adam" );
	deepEqual( Stem("adamo"), "adam" );
	deepEqual( Stem("adani"), "adan" );
	deepEqual( Stem("adatta"), "adatt" );
	deepEqual( Stem("adattandole"), "adatt" );
	deepEqual( Stem("adattarla"), "adatt" );
	deepEqual( Stem("adattarsi"), "adatt" );
	deepEqual( Stem("adattata"), "adatt" );
	deepEqual( Stem("adattate"), "adatt" );
	deepEqual( Stem("adattati"), "adatt" );
	deepEqual( Stem("adattato"), "adatt" );
	deepEqual( Stem("adattava"), "adatt" );
	deepEqual( Stem("adattavano"), "adatt" );
	deepEqual( Stem("adatti"), "adatt" );
	deepEqual( Stem("adda"), "adda" );
	deepEqual( Stem("addati"), "addat" );
	deepEqual( Stem("addebitate"), "addebit" );
	deepEqual( Stem("addebito"), "addeb" );
	deepEqual( Stem("addensa"), "addens" );
	deepEqual( Stem("addensasse"), "addens" );
	deepEqual( Stem("addensata"), "addens" );
	deepEqual( Stem("addenseranno"), "addens" );
	deepEqual( Stem("addenta"), "addent" );
	deepEqual( Stem("addestramento"), "addestr" );
	deepEqual( Stem("addestrati"), "addestr" );
	deepEqual( Stem("addetta"), "addett" );
	deepEqual( Stem("addette"), "addett" );
	deepEqual( Stem("addetti"), "addett" );
	deepEqual( Stem("addetto"), "addett" );
	deepEqual( Stem("addietro"), "addietr" );
	deepEqual( Stem("addii"), "addi" );
	deepEqual( Stem("addio"), "addi" );
	deepEqual( Stem("addirittura"), "addirittur" );
	deepEqual( Stem("additò"), "addit" );
	deepEqual( Stem("addivenire"), "addiven" );
	deepEqual( Stem("addizionali"), "addizional" );
	deepEqual( Stem("addobbate"), "addobb" );
	deepEqual( Stem("addobbi"), "addobb" );
	deepEqual( Stem("addolorata"), "addolor" );
	deepEqual( Stem("addolorati"), "addolor" );
	deepEqual( Stem("addolorato"), "addolor" );
	deepEqual( Stem("addome"), "addom" );
	deepEqual( Stem("addormentarlo"), "addorment" );
	deepEqual( Stem("addormentata"), "addorment" );
	deepEqual( Stem("addormentati"), "addorment" );
	deepEqual( Stem("addormentato"), "addorment" );
	deepEqual( Stem("addormentò"), "addorment" );
	deepEqual( Stem("addossando"), "addoss" );
	deepEqual( Stem("addossare"), "addoss" );
	deepEqual( Stem("addossarvi"), "addoss" );
	deepEqual( Stem("addosso"), "addoss" );
	deepEqual( Stem("addottrinato"), "addottrin" );
	deepEqual( Stem("adduce"), "adduc" );
	deepEqual( Stem("adducevate"), "adduc" );
	deepEqual( Stem("addurre"), "addurr" );
	deepEqual( Stem("addusse"), "adduss" );
	deepEqual( Stem("addussero"), "addusser" );
	deepEqual( Stem("adeguamento"), "adegu" );
	deepEqual( Stem("adeguandosi"), "adegu" );
	deepEqual( Stem("adeguarsi"), "adegu" );
	deepEqual( Stem("adeguata"), "adegu" );
	deepEqual( Stem("adeguatamente"), "adeguat" );
	deepEqual( Stem("adeguate"), "adegu" );
	deepEqual( Stem("adeguatezza"), "adeguatezz" );
	deepEqual( Stem("adeguato"), "adegu" );
	deepEqual( Stem("adeguatò"), "adeguat" );
	deepEqual( Stem("adeguerà"), "adegu" );
	deepEqual( Stem("adelaide"), "adelaid" );
	deepEqual( Stem("adelante"), "adel" );
	deepEqual( Stem("adelboden"), "adelboden" );
	deepEqual( Stem("adempiendo"), "ademp" );
	deepEqual( Stem("adempiere"), "ademp" );
	deepEqual( Stem("adempimenti"), "ademp" );
	deepEqual( Stem("adempimento"), "ademp" );
	deepEqual( Stem("adempir"), "ademp" );
	deepEqual( Stem("adempire"), "ademp" );
	deepEqual( Stem("adempirlo"), "ademp" );
	deepEqual( Stem("adempita"), "ademp" );
	deepEqual( Stem("adempite"), "ademp" );
	deepEqual( Stem("adempito"), "ademp" );
	deepEqual( Stem("adeo"), "ade" );
	deepEqual( Stem("adepa"), "adep" );
	deepEqual( Stem("adepti"), "adept" );
	deepEqual( Stem("aderendo"), "ader" );
	deepEqual( Stem("aderente"), "aderent" );
	deepEqual( Stem("aderenti"), "aderent" );
	deepEqual( Stem("aderenze"), "aderent" );
	deepEqual( Stem("aderiranno"), "ader" );
	deepEqual( Stem("aderito"), "ader" );
	deepEqual( Stem("adesca"), "adesc" );
	deepEqual( Stem("adesione"), "adesion" );
	deepEqual( Stem("adesioni"), "adesion" );
	deepEqual( Stem("adesso"), "adess" );
	deepEqual( Stem("adi"), "adi" );
	deepEqual( Stem("adiacenti"), "adiacent" );
	deepEqual( Stem("adiacenze"), "adiacent" );
	deepEqual( Stem("adiconsum"), "adiconsum" );
	deepEqual( Stem("adige"), "adig" );
	deepEqual( Stem("adiranno"), "adirann" );
	deepEqual( Stem("adirarsi"), "adir" );
	deepEqual( Stem("adirato"), "adir" );
	deepEqual( Stem("adito"), "adit" );
	deepEqual( Stem("adocchiò"), "adocc" );
	deepEqual( Stem("adolescente"), "adolescent" );
	deepEqual( Stem("adolescenza"), "adolescent" );
	deepEqual( Stem("adolf"), "adolf" );
	deepEqual( Stem("adolfo"), "adolf" );
	deepEqual( Stem("adombrano"), "adombr" );
	deepEqual( Stem("adombrato"), "adombr" );
	deepEqual( Stem("adoperar"), "adoper" );
	deepEqual( Stem("adoperarsi"), "adoper" );
	deepEqual( Stem("adoperate"), "adoper" );
	deepEqual( Stem("adoperati"), "adoper" );
	deepEqual( Stem("adoperato"), "adoper" );
	deepEqual( Stem("adoperavano"), "adoper" );
	deepEqual( Stem("adopererà"), "adoper" );
	deepEqual( Stem("adoprano"), "adopr" );
	deepEqual( Stem("adoprar"), "adopr" );
	deepEqual( Stem("adoprare"), "adopr" );
	deepEqual( Stem("adoprarla"), "adopr" );
	deepEqual( Stem("adoprarlo"), "adopr" );
	deepEqual( Stem("adoprarsi"), "adopr" );
	deepEqual( Stem("adoprata"), "adopr" );
	deepEqual( Stem("adoprati"), "adopr" );
	deepEqual( Stem("adoprato"), "adopr" );
	deepEqual( Stem("adoprava"), "adopr" );
	deepEqual( Stem("adopravano"), "adopr" );
	deepEqual( Stem("adoprerebbe"), "adopr" );
	deepEqual( Stem("adorando"), "ador" );
	deepEqual( Stem("adorare"), "ador" );
	deepEqual( Stem("adorazione"), "ador" );
	deepEqual( Stem("adorna"), "adorn" );
	deepEqual( Stem("adornata"), "adorn" );
	deepEqual( Stem("adottabili"), "adott" );
	deepEqual( Stem("adottano"), "adott" );
	deepEqual( Stem("adottare"), "adott" );
	deepEqual( Stem("adottarli"), "adott" );
	deepEqual( Stem("adottata"), "adott" );
	deepEqual( Stem("adottati"), "adott" );
	deepEqual( Stem("adottato"), "adott" );
	deepEqual( Stem("adottivo"), "adott" );
	deepEqual( Stem("adozione"), "adozion" );
	deepEqual( Stem("adrian"), "adrian" );
	deepEqual( Stem("adriana"), "adrian" );
	deepEqual( Stem("adriano"), "adri" );
	deepEqual( Stem("adriatic"), "adriatic" );
	deepEqual( Stem("adriatica"), "adriat" );
	deepEqual( Stem("adriatiche"), "adriat" );
	deepEqual( Stem("adriatico"), "adriat" );
	deepEqual( Stem("adris"), "adris" );
	deepEqual( Stem("adspergine"), "adspergin" );
	deepEqual( Stem("adspersisset"), "adspersisset" );
	deepEqual( Stem("adulatori"), "adul" );
	deepEqual( Stem("adulta"), "adult" );
	deepEqual( Stem("adulterio"), "adulter" );
	deepEqual( Stem("adulti"), "adult" );
	deepEqual( Stem("adunanza"), "adun" );
	deepEqual( Stem("adunate"), "adun" );
	deepEqual( Stem("adunco"), "adunc" );
	deepEqual( Stem("adunque"), "adunqu" );
	deepEqual( Stem("aduste"), "adust" );
	deepEqual( Stem("advances"), "advances" );
	deepEqual( Stem("adwa"), "adwa" );
	deepEqual( Stem("ae"), "ae" );
	deepEqual( Stem("aedes"), "aedes" );
	deepEqual( Stem("aedium"), "aedium" );
	deepEqual( Stem("aequo"), "aequ" );
	deepEqual( Stem("aerea"), "aere" );
	deepEqual( Stem("aeree"), "aere" );
	deepEqual( Stem("aerei"), "aere" );
	deepEqual( Stem("aereo"), "aere" );
	deepEqual( Stem("aeromobili"), "aeromobil" );
	deepEqual( Stem("aeronautica"), "aeronaut" );
	deepEqual( Stem("aeronautico"), "aeronaut" );
	deepEqual( Stem("aeroporto"), "aeroport" );
	deepEqual( Stem("aeroportuale"), "aeroportual" );
	deepEqual( Stem("aerosol"), "aerosol" );
	deepEqual( Stem("afa"), "afa" );
	deepEqual( Stem("affaccendarsi"), "affaccend" );
	deepEqual( Stem("affaccendata"), "affaccend" );
	deepEqual( Stem("affaccendato"), "affaccend" );
	deepEqual( Stem("affaccendava"), "affaccend" );
	deepEqual( Stem("affaccendò"), "affaccend" );
	deepEqual( Stem("affacchinarsi"), "affacchin" );
	deepEqual( Stem("affaccia"), "affacc" );
	deepEqual( Stem("affacciandosi"), "affacc" );
	deepEqual( Stem("affacciare"), "affacc" );
	deepEqual( Stem("affacciaron"), "affacciaron" );
	deepEqual( Stem("affacciarsi"), "affacc" );
	deepEqual( Stem("affacciassero"), "affacc" );
	deepEqual( Stem("affacciata"), "affacc" );
	deepEqual( Stem("affacciati"), "affacc" );
	deepEqual( Stem("affacciato"), "affacc" );
	deepEqual( Stem("affacciatosi"), "affacciat" );
	deepEqual( Stem("affacciava"), "affacc" );
	deepEqual( Stem("affacciavano"), "affacc" );
	deepEqual( Stem("affacciò"), "affacc" );
	deepEqual( Stem("affacendato"), "affacend" );
	deepEqual( Stem("affamata"), "affam" );
	deepEqual( Stem("affamati"), "affam" );
	deepEqual( Stem("affamato"), "affam" );
	deepEqual( Stem("affamatore"), "affam" );
	deepEqual( Stem("affamatori"), "affam" );
	deepEqual( Stem("affannarsi"), "affann" );
	deepEqual( Stem("affannata"), "affann" );
	deepEqual( Stem("affannato"), "affann" );
	deepEqual( Stem("affannava"), "affann" );
	deepEqual( Stem("affanno"), "affann" );
	deepEqual( Stem("affannosa"), "affann" );
	deepEqual( Stem("affannosamente"), "affann" );
	deepEqual( Stem("affannose"), "affann" );
	deepEqual( Stem("affannoso"), "affann" );
	deepEqual( Stem("affar"), "affar" );
	deepEqual( Stem("affaracci"), "affaracc" );
	deepEqual( Stem("affare"), "affar" );
	deepEqual( Stem("affari"), "affar" );
	deepEqual( Stem("affaristica"), "affarist" );
	deepEqual( Stem("affascinante"), "affascin" );
	deepEqual( Stem("affascinanti"), "affascin" );
	deepEqual( Stem("affaticandoci"), "affatic" );
	deepEqual( Stem("affaticarsi"), "affatic" );
	deepEqual( Stem("affaticasse"), "affatic" );
	deepEqual( Stem("affaticata"), "affatic" );
	deepEqual( Stem("affaticati"), "affatic" );
	deepEqual( Stem("affaticato"), "affatic" );
	deepEqual( Stem("affatto"), "affatt" );
	deepEqual( Stem("afferma"), "afferm" );
	deepEqual( Stem("affermando"), "afferm" );
	deepEqual( Stem("affermano"), "afferm" );
	deepEqual( Stem("affermare"), "afferm" );
	deepEqual( Stem("affermarsi"), "afferm" );
	deepEqual( Stem("affermata"), "afferm" );
	deepEqual( Stem("affermative"), "afferm" );
	deepEqual( Stem("affermativo"), "afferm" );
	deepEqual( Stem("affermato"), "afferm" );
	deepEqual( Stem("affermazione"), "afferm" );
	deepEqual( Stem("affermazioni"), "afferm" );
	deepEqual( Stem("affermo"), "afferm" );
	deepEqual( Stem("affermò"), "afferm" );
	deepEqual( Stem("afferra"), "afferr" );
	deepEqual( Stem("afferrando"), "afferr" );
	deepEqual( Stem("afferrandogli"), "afferr" );
	deepEqual( Stem("afferrandola"), "afferr" );
	deepEqual( Stem("afferrandolo"), "afferr" );
	deepEqual( Stem("afferrano"), "afferr" );
	deepEqual( Stem("afferrar"), "afferr" );
	deepEqual( Stem("afferrarlo"), "afferr" );
	deepEqual( Stem("afferrata"), "afferr" );
	deepEqual( Stem("afferrati"), "afferr" );
	deepEqual( Stem("afferrato"), "afferr" );
	deepEqual( Stem("afferrò"), "afferr" );
	deepEqual( Stem("affettata"), "affett" );
	deepEqual( Stem("affettato"), "affett" );
	deepEqual( Stem("affetti"), "affett" );
	deepEqual( Stem("affettivo"), "affett" );
	deepEqual( Stem("affetto"), "affett" );
	deepEqual( Stem("affettuosa"), "affettu" );
	deepEqual( Stem("affettuosamente"), "affettu" );
	deepEqual( Stem("affettuose"), "affettu" );
	deepEqual( Stem("affettuosi"), "affettu" );
	deepEqual( Stem("affettuoso"), "affettu" );
	deepEqual( Stem("affezionata"), "affezion" );
	deepEqual( Stem("affezionato"), "affezion" );
	deepEqual( Stem("affezione"), "affezion" );
	deepEqual( Stem("affezioni"), "affezion" );
	deepEqual( Stem("affianca"), "affianc" );
	deepEqual( Stem("affiancare"), "affianc" );
	deepEqual( Stem("affiancato"), "affianc" );
	deepEqual( Stem("affiancherà"), "affianc" );
	deepEqual( Stem("affiancheranno"), "affianc" );
	deepEqual( Stem("affianchi"), "affianc" );
	deepEqual( Stem("affibiargli"), "affib" );
	deepEqual( Stem("affichè"), "affic" );
	deepEqual( Stem("affida"), "affid" );
	deepEqual( Stem("affidabile"), "affid" );
	deepEqual( Stem("affidabili"), "affid" );
	deepEqual( Stem("affidabilità"), "affid" );
	deepEqual( Stem("affidamento"), "affid" );
	deepEqual( Stem("affidano"), "affid" );
	deepEqual( Stem("affidare"), "affid" );
	deepEqual( Stem("affidargli"), "affid" );
	deepEqual( Stem("affidata"), "affid" );
	deepEqual( Stem("affidate"), "affid" );
	deepEqual( Stem("affidati"), "affid" );
	deepEqual( Stem("affidato"), "affid" );
	deepEqual( Stem("affidatomi"), "affidatom" );
	deepEqual( Stem("affievoliscano"), "affievol" );
	deepEqual( Stem("affievolisse"), "affievoliss" );
	deepEqual( Stem("affilate"), "affil" );
	deepEqual( Stem("affinamento"), "affin" );
	deepEqual( Stem("affinché"), "affinc" );
	deepEqual( Stem("affinchè"), "affinc" );
	deepEqual( Stem("affine"), "affin" );
	deepEqual( Stem("affini"), "affin" );
	deepEqual( Stem("affinis"), "affinis" );
	deepEqual( Stem("affissa"), "affiss" );
	deepEqual( Stem("affissi"), "affiss" );
	deepEqual( Stem("affissione"), "affission" );
	deepEqual( Stem("affissioni"), "affission" );
	deepEqual( Stem("affisso"), "affiss" );
	deepEqual( Stem("affittata"), "affitt" );
	deepEqual( Stem("affittate"), "affitt" );
	deepEqual( Stem("affittato"), "affitt" );
	deepEqual( Stem("affitti"), "affitt" );
	deepEqual( Stem("affitto"), "affitt" );
	deepEqual( Stem("affittuari"), "affittuar" );
	deepEqual( Stem("affittuario"), "affittuar" );
	deepEqual( Stem("afflato"), "afflat" );
	deepEqual( Stem("affliggervi"), "affligg" );
	deepEqual( Stem("afflisse"), "affliss" );
	deepEqual( Stem("afflitta"), "afflitt" );
	deepEqual( Stem("afflitte"), "afflitt" );
	deepEqual( Stem("afflitti"), "afflitt" );
	deepEqual( Stem("afflitto"), "afflitt" );
	deepEqual( Stem("afflizione"), "afflizion" );
	deepEqual( Stem("afflizioni"), "afflizion" );
	deepEqual( Stem("affluiscono"), "afflu" );
	deepEqual( Stem("affluiti"), "afflu" );
	deepEqual( Stem("afflusso"), "affluss" );
	deepEqual( Stem("affoga"), "affog" );
	deepEqual( Stem("affogare"), "affog" );
	deepEqual( Stem("affolla"), "affoll" );
	deepEqual( Stem("affollamento"), "affoll" );
	deepEqual( Stem("affollano"), "affoll" );
	deepEqual( Stem("affollare"), "affoll" );
	deepEqual( Stem("affollarsi"), "affoll" );
	deepEqual( Stem("affollata"), "affoll" );
	deepEqual( Stem("affollati"), "affoll" );
	deepEqual( Stem("affollato"), "affoll" );
	deepEqual( Stem("affonda"), "affond" );
	deepEqual( Stem("affondando"), "affond" );
	deepEqual( Stem("affondare"), "affond" );
	deepEqual( Stem("affondata"), "affond" );
	deepEqual( Stem("affondate"), "affond" );
	deepEqual( Stem("affondato"), "affond" );
	deepEqual( Stem("affondo"), "affond" );
	deepEqual( Stem("affossati"), "affoss" );
	deepEqual( Stem("affresco"), "affresc" );
	deepEqual( Stem("affretta"), "affrett" );
	deepEqual( Stem("affrettar"), "affrett" );
	deepEqual( Stem("affrettare"), "affrett" );
	deepEqual( Stem("affrettato"), "affrett" );
	deepEqual( Stem("affrettava"), "affrett" );
	deepEqual( Stem("affrettò"), "affrett" );
	deepEqual( Stem("affronta"), "affront" );
	deepEqual( Stem("affrontando"), "affront" );
	deepEqual( Stem("affrontano"), "affront" );
	deepEqual( Stem("affrontar"), "affront" );
	deepEqual( Stem("affrontare"), "affront" );
	deepEqual( Stem("affrontarla"), "affront" );
	deepEqual( Stem("affrontarlo"), "affront" );
	deepEqual( Stem("affrontarsi"), "affront" );
	deepEqual( Stem("affrontata"), "affront" );
	deepEqual( Stem("affrontate"), "affront" );
	deepEqual( Stem("affrontati"), "affront" );
	deepEqual( Stem("affrontato"), "affront" );
	deepEqual( Stem("affronterai"), "affront" );
	deepEqual( Stem("affronteranno"), "affront" );
	deepEqual( Stem("affronteremo"), "affront" );
	deepEqual( Stem("affronto"), "affront" );
	deepEqual( Stem("affumicate"), "affumic" );
	deepEqual( Stem("afghana"), "afghan" );
	deepEqual( Stem("afghane"), "afghan" );
	deepEqual( Stem("afghani"), "afghan" );
	deepEqual( Stem("afghanistan"), "afghanistan" );
	deepEqual( Stem("aflare"), "aflar" );
	deepEqual( Stem("afp"), "afp" );
	deepEqual( Stem("africa"), "afric" );
	deepEqual( Stem("africano"), "afric" );
	deepEqual( Stem("afrique"), "afriqu" );
	deepEqual( Stem("ag"), "ag" );
	deepEqual( Stem("aga"), "aga" );
	deepEqual( Stem("agapov"), "agapov" );
	deepEqual( Stem("agassi"), "agass" );
	deepEqual( Stem("agata"), "agat" );
	deepEqual( Stem("agazzi"), "agazz" );
	deepEqual( Stem("agci"), "agci" );
	deepEqual( Stem("age"), "age" );
	deepEqual( Stem("agenda"), "agend" );
	deepEqual( Stem("agennli"), "agennl" );
	deepEqual( Stem("agensud"), "agensud" );
	deepEqual( Stem("agente"), "agent" );
	deepEqual( Stem("agenti"), "agent" );
	deepEqual( Stem("agenzia"), "agenz" );
	deepEqual( Stem("agenzie"), "agenz" );
	deepEqual( Stem("agevolare"), "agevol" );
	deepEqual( Stem("agevolata"), "agevol" );
	deepEqual( Stem("agevolato"), "agevol" );
	deepEqual( Stem("agevolazione"), "agevol" );
	deepEqual( Stem("agevolazioni"), "agevol" );
	deepEqual( Stem("agevole"), "agevol" );
	deepEqual( Stem("agevolezze"), "agevolezz" );
	deepEqual( Stem("agevoli"), "agevol" );
	deepEqual( Stem("agganciare"), "agganc" );
	deepEqual( Stem("aggettivo"), "aggett" );
	deepEqual( Stem("agghiacciante"), "agghiacc" );
	deepEqual( Stem("agginte"), "aggint" );
	deepEqual( Stem("aggiorna"), "aggiorn" );
	deepEqual( Stem("aggiornamenti"), "aggiorn" );
	deepEqual( Stem("aggiornamento"), "aggiorn" );
	deepEqual( Stem("aggiornata"), "aggiorn" );
	deepEqual( Stem("aggira"), "aggir" );
	deepEqual( Stem("aggirano"), "aggir" );
	deepEqual( Stem("aggirarsi"), "aggir" );
	deepEqual( Stem("aggirava"), "aggir" );
	deepEqual( Stem("aggiudicato"), "aggiudic" );
	deepEqual( Stem("aggiunga"), "aggiung" );
	deepEqual( Stem("aggiunge"), "aggiung" );
	deepEqual( Stem("aggiungendo"), "aggiung" );
	deepEqual( Stem("aggiunger"), "aggiunger" );
	deepEqual( Stem("aggiungeranno"), "aggiung" );
	deepEqual( Stem("aggiungere"), "aggiung" );
	deepEqual( Stem("aggiungervi"), "aggiung" );
	deepEqual( Stem("aggiungeva"), "aggiung" );
	deepEqual( Stem("aggiungevano"), "aggiung" );
	deepEqual( Stem("aggiungiamo"), "aggiung" );
	deepEqual( Stem("aggiungono"), "aggiung" );
	deepEqual( Stem("aggiunse"), "aggiuns" );
	deepEqual( Stem("aggiunsero"), "aggiunser" );
	deepEqual( Stem("aggiunsi"), "aggiuns" );
	deepEqual( Stem("aggiunta"), "aggiunt" );
	deepEqual( Stem("aggiunte"), "aggiunt" );
	deepEqual( Stem("aggiunti"), "aggiunt" );
	deepEqual( Stem("aggiuntive"), "aggiunt" );
	deepEqual( Stem("aggiuntivi"), "aggiunt" );
	deepEqual( Stem("aggiunto"), "aggiunt" );
	deepEqual( Stem("aggiuntovi"), "aggiuntov" );
	deepEqual( Stem("aggiustamenti"), "aggiust" );
	deepEqual( Stem("aggiustamento"), "aggiust" );
	deepEqual( Stem("aggiutto"), "aggiutt" );
	deepEqual( Stem("aggranchiate"), "aggranc" );
	deepEqual( Stem("aggrapparsi"), "aggrapp" );
	deepEqual( Stem("aggravando"), "aggrav" );
	deepEqual( Stem("aggravare"), "aggrav" );
	deepEqual( Stem("aggravarsi"), "aggrav" );
	deepEqual( Stem("aggravata"), "aggrav" );
	deepEqual( Stem("aggravatissima"), "aggravatissim" );
	deepEqual( Stem("aggravato"), "aggrav" );
	deepEqual( Stem("aggraverebbe"), "aggrav" );
	deepEqual( Stem("aggredisce"), "aggred" );
	deepEqual( Stem("aggredita"), "aggred" );
	deepEqual( Stem("aggrediti"), "aggred" );
	deepEqual( Stem("aggredito"), "aggred" );
	deepEqual( Stem("aggregare"), "aggreg" );
	deepEqual( Stem("aggregazione"), "aggreg" );
	deepEqual( Stem("aggregazioni"), "aggreg" );
	deepEqual( Stem("aggregherà"), "aggreg" );
	deepEqual( Stem("aggregrazione"), "aggregr" );
	deepEqual( Stem("aggressione"), "aggression" );
	deepEqual( Stem("aggressioni"), "aggression" );
	deepEqual( Stem("aggressivi"), "aggress" );
	deepEqual( Stem("aggressività"), "aggress" );
	deepEqual( Stem("aggressivo"), "aggress" );
	deepEqual( Stem("aggrinzando"), "aggrinz" );
	deepEqual( Stem("aggrottando"), "aggrott" );
	deepEqual( Stem("aggrottate"), "aggrott" );
	deepEqual( Stem("aggruppano"), "aggrupp" );
	deepEqual( Stem("aggruppati"), "aggrupp" );
	deepEqual( Stem("agguanta"), "agguant" );
	deepEqual( Stem("agguantati"), "agguant" );
	deepEqual( Stem("agguantò"), "agguant" );
	deepEqual( Stem("agguati"), "aggu" );
	deepEqual( Stem("agguato"), "aggu" );
	deepEqual( Stem("agguerrita"), "agguerr" );
	deepEqual( Stem("aghini"), "aghin" );
	deepEqual( Stem("agi"), "agi" );
	deepEqual( Stem("agiata"), "agi" );
	deepEqual( Stem("agiatezza"), "agiatezz" );
	deepEqual( Stem("agiati"), "agi" );
	deepEqual( Stem("agiato"), "agi" );
	deepEqual( Stem("agile"), "agil" );
	deepEqual( Stem("agio"), "agi" );
	deepEqual( Stem("agiranno"), "agirann" );
	deepEqual( Stem("agire"), "agir" );
	deepEqual( Stem("agiremo"), "agirem" );
	deepEqual( Stem("agisca"), "agisc" );
	deepEqual( Stem("agisce"), "agisc" );
	deepEqual( Stem("agita"), "agit" );
	deepEqual( Stem("agitarlo"), "agit" );
	deepEqual( Stem("agitata"), "agit" );
	deepEqual( Stem("agitate"), "agit" );
	deepEqual( Stem("agitati"), "agit" );
	deepEqual( Stem("agitato"), "agit" );
	deepEqual( Stem("agitava"), "agit" );
	deepEqual( Stem("agitazion"), "agitazion" );
	deepEqual( Stem("agitazione"), "agit" );
	deepEqual( Stem("agitazioni"), "agit" );
	deepEqual( Stem("agito"), "agit" );
	deepEqual( Stem("agiutto"), "agiutt" );
	deepEqual( Stem("agl"), "agl" );
	deepEqual( Stem("agli"), "agli" );
	deepEqual( Stem("agnalli"), "agnall" );
	deepEqual( Stem("agnelli"), "agnell" );
	deepEqual( Stem("agnello"), "agnell" );
	deepEqual( Stem("agnes"), "agnes" );
	deepEqual( Stem("agnese"), "agnes" );
	deepEqual( Stem("ago"), "ago" );
	deepEqual( Stem("agonia"), "agon" );
	deepEqual( Stem("agonismo"), "agon" );
	deepEqual( Stem("agonistica"), "agonist" );
	deepEqual( Stem("agonizzante"), "agonizz" );
	deepEqual( Stem("agos"), "agos" );
	deepEqual( Stem("agostina"), "agostin" );
	deepEqual( Stem("agostini"), "agostin" );
	deepEqual( Stem("agostino"), "agostin" );
	deepEqual( Stem("agosto"), "agost" );
	deepEqual( Stem("agr"), "agr" );
	deepEqual( Stem("agra"), "agra" );
	deepEqual( Stem("agrario"), "agrar" );
	deepEqual( Stem("agreement"), "agreement" );
	deepEqual( Stem("agren"), "agren" );
	deepEqual( Stem("agric"), "agric" );
	deepEqual( Stem("agricola"), "agricol" );
	deepEqual( Stem("agricole"), "agricol" );
	deepEqual( Stem("agricoli"), "agricol" );
	deepEqual( Stem("agricolo"), "agricol" );
	deepEqual( Stem("agricoltori"), "agricoltor" );
	deepEqual( Stem("agricoltura"), "agricoltur" );
	deepEqual( Stem("agrifoglio"), "agrifogl" );
	deepEqual( Stem("agrifutura"), "agrifutur" );
	deepEqual( Stem("agrigento"), "agrigent" );
	deepEqual( Stem("agro"), "agro" );
	deepEqual( Stem("aguanta"), "aguant" );
	deepEqual( Stem("aguas"), "aguas" );
	deepEqual( Stem("aguayo"), "aguay" );
	deepEqual( Stem("aguzzando"), "aguzz" );
	deepEqual( Stem("aguzzano"), "aguzz" );
	deepEqual( Stem("aguzzava"), "aguzz" );
	deepEqual( Stem("aguzzino"), "aguzzin" );
	deepEqual( Stem("ah"), "ah" );
	deepEqual( Stem("ahata"), "ahat" );
	deepEqual( Stem("ahi"), "ahi" );
	deepEqual( Stem("ahimè"), "ahim" );
	deepEqual( Stem("ahmed"), "ahmed" );
	deepEqual( Stem("ahn"), "ahn" );
	deepEqual( Stem("ahronot"), "ahronot" );
	deepEqual( Stem("ai"), "ai" );
	deepEqual( Stem("aia"), "aia" );
	deepEqual( Stem("aidid"), "aidid" );
	deepEqual( Stem("aids"), "aids" );
	deepEqual( Stem("aie"), "aie" );
	deepEqual( Stem("aiebant"), "aiebant" );
	deepEqual( Stem("aimee"), "aime" );
	deepEqual( Stem("aimone"), "aimon" );
	deepEqual( Stem("air"), "air" );
	deepEqual( Stem("aires"), "aires" );
	deepEqual( Stem("ais"), "ais" );
	deepEqual( Stem("aiuta"), "aiut" );
	deepEqual( Stem("aiutando"), "aiut" );
	deepEqual( Stem("aiutante"), "aiut" );
	deepEqual( Stem("aiutanti"), "aiut" );
	deepEqual( Stem("aiutar"), "aiut" );
	deepEqual( Stem("aiutarci"), "aiut" );
	deepEqual( Stem("aiutare"), "aiut" );
	deepEqual( Stem("aiutarla"), "aiut" );
	deepEqual( Stem("aiutarli"), "aiut" );
	deepEqual( Stem("aiutarlo"), "aiut" );
	deepEqual( Stem("aiutarmi"), "aiut" );
	deepEqual( Stem("aiutarono"), "aiut" );
	deepEqual( Stem("aiutarsi"), "aiut" );
	deepEqual( Stem("aiutarvi"), "aiut" );
	deepEqual( Stem("aiutasse"), "aiut" );
	deepEqual( Stem("aiutassero"), "aiut" );
	deepEqual( Stem("aiutata"), "aiut" );
	deepEqual( Stem("aiutate"), "aiut" );
	deepEqual( Stem("aiutateci"), "aiutatec" );
	deepEqual( Stem("aiutatemi"), "aiutatem" );
	deepEqual( Stem("aiutati"), "aiut" );
	deepEqual( Stem("aiutato"), "aiut" );
	deepEqual( Stem("aiutava"), "aiut" );
	deepEqual( Stem("aiuterà"), "aiut" );
	deepEqual( Stem("aiuti"), "aiut" );
	deepEqual( Stem("aiutino"), "aiutin" );
	deepEqual( Stem("aiuto"), "aiut" );
	deepEqual( Stem("aiutò"), "aiut" );
	deepEqual( Stem("aix"), "aix" );
	deepEqual( Stem("aizzargli"), "aizz" );
	deepEqual( Stem("aizzasse"), "aizz" );
	deepEqual( Stem("aizzata"), "aizz" );
	deepEqual( Stem("aizzatori"), "aizzator" );
	deepEqual( Stem("aizzava"), "aizz" );
	deepEqual( Stem("ajaccio"), "ajacc" );
	deepEqual( Stem("ajello"), "ajell" );
	deepEqual( Stem("akbar"), "akbar" );
	deepEqual( Stem("al"), "al" );
	deepEqual( Stem("ala"), "ala" );
	deepEqual( Stem("alabarde"), "alabard" );
	deepEqual( Stem("alabardieri"), "alabardier" );
	deepEqual( Stem("alacce"), "alacc" );
	deepEqual( Stem("alacrità"), "alacr" );
	deepEqual( Stem("alain"), "alain" );
	deepEqual( Stem("alam"), "alam" );
	deepEqual( Stem("alan"), "alan" );
	deepEqual( Stem("alard"), "alard" );
	deepEqual( Stem("alba"), "alba" );
	deepEqual( Stem("albafeira"), "albafeir" );
	deepEqual( Stem("albagìa"), "albagì" );
	deepEqual( Stem("albanese"), "albanes" );
	deepEqual( Stem("albanesè"), "albanes" );
	deepEqual( Stem("albanesi"), "albanes" );
	deepEqual( Stem("albania"), "alban" );
	deepEqual( Stem("albano"), "alban" );
	deepEqual( Stem("albanova"), "albanov" );
	deepEqual( Stem("albeggiare"), "albegg" );
	deepEqual( Stem("alberga"), "alberg" );
	deepEqual( Stem("albergato"), "alberg" );
	deepEqual( Stem("alberghi"), "alberg" );
	deepEqual( Stem("alberghiero"), "alberghier" );
	deepEqual( Stem("albergo"), "alberg" );
	deepEqual( Stem("alberi"), "alber" );
	deepEqual( Stem("albero"), "alber" );
	deepEqual( Stem("alberoni"), "alberon" );
	deepEqual( Stem("albertini"), "albertin" );
	deepEqual( Stem("alberto"), "albert" );
	deepEqual( Stem("albino"), "albin" );
	deepEqual( Stem("albo"), "albo" );
	deepEqual( Stem("album"), "album" );
	deepEqual( Stem("alcabizio"), "alcabiz" );
	deepEqual( Stem("alcatel"), "alcatel" );
	deepEqual( Stem("alce"), "alce" );
	deepEqual( Stem("alcide"), "alcid" );
	deepEqual( Stem("alcun"), "alcun" );
	deepEqual( Stem("alcuna"), "alcun" );
	deepEqual( Stem("alcune"), "alcun" );
	deepEqual( Stem("alcuni"), "alcun" );
	deepEqual( Stem("alcuno"), "alcun" );
	deepEqual( Stem("aldair"), "alda" );
	deepEqual( Stem("aldebaran"), "aldebaran" );
	deepEqual( Stem("aldilà"), "aldil" );
	deepEqual( Stem("aldo"), "aldo" );
	deepEqual( Stem("aldy"), "aldy" );
	deepEqual( Stem("ale"), "ale" );
	deepEqual( Stem("aleksadr"), "aleksadr" );
	deepEqual( Stem("aleksander"), "aleksander" );
	deepEqual( Stem("aleksandra"), "aleksandr" );
	deepEqual( Stem("alema"), "alem" );
	deepEqual( Stem("alemanna"), "alemann" );
	deepEqual( Stem("alemanne"), "alemann" );
	deepEqual( Stem("alemanni"), "alemann" );
	deepEqual( Stem("alemanno"), "alemann" );
	deepEqual( Stem("alessandra"), "alessandr" );
	deepEqual( Stem("alessandria"), "alessandr" );
	deepEqual( Stem("alessandrini"), "alessandrin" );
	deepEqual( Stem("alessandro"), "alessandr" );
	deepEqual( Stem("alessio"), "aless" );
	deepEqual( Stem("alexander"), "alexander" );
	deepEqual( Stem("alexandra"), "alexandr" );
	deepEqual( Stem("alexeyev"), "alexeyev" );
	deepEqual( Stem("alfa"), "alfa" );
	deepEqual( Stem("alfabeto"), "alfabet" );
	deepEqual( Stem("alfiere"), "alfi" );
	deepEqual( Stem("alfieri"), "alfier" );
	deepEqual( Stem("alfiero"), "alfier" );
	deepEqual( Stem("alfine"), "alfin" );
	deepEqual( Stem("alfonsi"), "alfons" );
	deepEqual( Stem("alfonso"), "alfons" );
	deepEqual( Stem("alfonzo"), "alfonz" );
	deepEqual( Stem("alfredo"), "alfred" );
	deepEqual( Stem("alga"), "alga" );
	deepEqual( Stem("algeri"), "alger" );
	deepEqual( Stem("algeria"), "alger" );
	deepEqual( Stem("algerina"), "algerin" );
	deepEqual( Stem("algerine"), "algerin" );
	deepEqual( Stem("algerini"), "algerin" );
	deepEqual( Stem("algerino"), "algerin" );
	deepEqual( Stem("algerstedt"), "algerstedt" );
	deepEqual( Stem("alghe"), "alghe" );
	deepEqual( Stem("alghero"), "algher" );
	deepEqual( Stem("algunos"), "algunos" );
	deepEqual( Stem("ali"), "ali" );
	deepEqual( Stem("alias"), "alias" );
	deepEqual( Stem("alienare"), "alien" );
	deepEqual( Stem("alienazione"), "alien" );
	deepEqual( Stem("alieni"), "alien" );
	deepEqual( Stem("alieno"), "alien" );
	deepEqual( Stem("alienò"), "alien" );
	deepEqual( Stem("aliis"), "aliis" );
	deepEqual( Stem("alimentano"), "aliment" );
	deepEqual( Stem("alimentare"), "aliment" );
	deepEqual( Stem("alimentari"), "alimentar" );
	deepEqual( Stem("alimentata"), "aliment" );
	deepEqual( Stem("alimentato"), "aliment" );
	deepEqual( Stem("alimentazione"), "aliment" );
	deepEqual( Stem("alimenti"), "aliment" );
	deepEqual( Stem("alimento"), "aliment" );
	deepEqual( Stem("aliquota"), "aliquot" );
	deepEqual( Stem("aliquote"), "aliquot" );
	deepEqual( Stem("alitalia"), "alital" );
	deepEqual( Stem("aliti"), "alit" );
	deepEqual( Stem("alito"), "alit" );
	deepEqual( Stem("alive"), "aliv" );
	deepEqual( Stem("alkan"), "alkan" );
	deepEqual( Stem("alkhan"), "alkhan" );
	deepEqual( Stem("all"), "all" );
	deepEqual( Stem("alla"), "alla" );
	deepEqual( Stem("allacciamenti"), "allacc" );
	deepEqual( Stem("allacciate"), "allacc" );
	deepEqual( Stem("allacciò"), "allacc" );
	deepEqual( Stem("allagava"), "allag" );
	deepEqual( Stem("allan"), "allan" );
	deepEqual( Stem("allargamento"), "allarg" );
	deepEqual( Stem("allargando"), "allarg" );
	deepEqual( Stem("allargar"), "allarg" );
	deepEqual( Stem("allargare"), "allarg" );
	deepEqual( Stem("allargarne"), "allarg" );
	deepEqual( Stem("allargate"), "allarg" );
	deepEqual( Stem("allargati"), "allarg" );
	deepEqual( Stem("allargato"), "allarg" );
	deepEqual( Stem("allargava"), "allarg" );
	deepEqual( Stem("allarmante"), "allarm" );
	deepEqual( Stem("allarmata"), "allarm" );
	deepEqual( Stem("allarmati"), "allarm" );
	deepEqual( Stem("allarme"), "allarm" );
	deepEqual( Stem("allattarne"), "allatt" );
	deepEqual( Stem("alle"), "alle" );
	deepEqual( Stem("alleanza"), "alleanz" );
	deepEqual( Stem("alleanze"), "alleanz" );
	deepEqual( Stem("alleare"), "alle" );
	deepEqual( Stem("allearmi"), "alle" );
	deepEqual( Stem("allearono"), "alle" );
	deepEqual( Stem("allearsi"), "alle" );
	deepEqual( Stem("alleati"), "alle" );
	deepEqual( Stem("alleato"), "alle" );
	deepEqual( Stem("allegava"), "alleg" );
	deepEqual( Stem("allegazioni"), "alleg" );
	deepEqual( Stem("alleggerimento"), "allegger" );
	deepEqual( Stem("alleggerire"), "allegger" );
	deepEqual( Stem("alleggiamento"), "allegg" );
	deepEqual( Stem("alleghe"), "alleg" );
	deepEqual( Stem("allegò"), "alleg" );
	deepEqual( Stem("allegra"), "allegr" );
	deepEqual( Stem("allegramente"), "allegr" );
	deepEqual( Stem("allegre"), "allegr" );
	deepEqual( Stem("allegrezza"), "allegrezz" );
	deepEqual( Stem("allegrezze"), "allegrezz" );
	deepEqual( Stem("allegri"), "allegr" );
	deepEqual( Stem("allegria"), "allegr" );
	deepEqual( Stem("allegro"), "allegr" );
	deepEqual( Stem("allenamenti"), "allen" );
	deepEqual( Stem("allenamento"), "allen" );
	deepEqual( Stem("allenarmi"), "allen" );
	deepEqual( Stem("allenate"), "allen" );
	deepEqual( Stem("allenato"), "allen" );
	deepEqual( Stem("allenatore"), "allen" );
	deepEqual( Stem("allenatori"), "allen" );
	deepEqual( Stem("allende"), "allend" );
	deepEqual( Stem("allenta"), "allent" );
	deepEqual( Stem("allentare"), "allent" );
	deepEqual( Stem("allentata"), "allent" );
	deepEqual( Stem("allentate"), "allent" );
	deepEqual( Stem("allentato"), "allent" );
	deepEqual( Stem("allentò"), "allent" );
	deepEqual( Stem("allerta"), "allert" );
	deepEqual( Stem("allestendo"), "allest" );
	deepEqual( Stem("allestimento"), "allest" );
	deepEqual( Stem("allestir"), "allest" );
	deepEqual( Stem("allestire"), "allest" );
	deepEqual( Stem("allestita"), "allest" );
	deepEqual( Stem("allestite"), "allest" );
	deepEqual( Stem("allestito"), "allest" );
	deepEqual( Stem("allettamenti"), "allett" );
	deepEqual( Stem("allettarla"), "allett" );
	deepEqual( Stem("allettato"), "allett" );
	deepEqual( Stem("allevamento"), "allev" );
	deepEqual( Stem("allevarli"), "allev" );
	deepEqual( Stem("allevata"), "allev" );
	deepEqual( Stem("allevato"), "allev" );
	deepEqual( Stem("alleviare"), "allev" );
	deepEqual( Stem("alli"), "alli" );
	deepEqual( Stem("allieva"), "alli" );
	deepEqual( Stem("allieve"), "alliev" );
	deepEqual( Stem("allievi"), "alli" );
	deepEqual( Stem("allievo"), "alli" );
	deepEqual( Stem("allison"), "allison" );
	deepEqual( Stem("allla"), "allla" );
	deepEqual( Stem("allo"), "allo" );
	deepEqual( Stem("allocuzione"), "allocu" );
	deepEqual( Stem("allogata"), "allog" );
	deepEqual( Stem("allogate"), "allog" );
	deepEqual( Stem("alloggi"), "allogg" );
	deepEqual( Stem("alloggiamenti"), "allogg" );
	deepEqual( Stem("alloggiar"), "allogg" );
	deepEqual( Stem("alloggiare"), "allogg" );
	deepEqual( Stem("alloggiata"), "allogg" );
	deepEqual( Stem("alloggiate"), "allogg" );
	deepEqual( Stem("alloggiati"), "allogg" );
	deepEqual( Stem("alloggiato"), "allogg" );
	deepEqual( Stem("alloggiava"), "allogg" );
	deepEqual( Stem("alloggiavano"), "allogg" );
	deepEqual( Stem("alloggio"), "allogg" );
	deepEqual( Stem("allontana"), "allontan" );
	deepEqual( Stem("allontanando"), "allontan" );
	deepEqual( Stem("allontanandoli"), "allontan" );
	deepEqual( Stem("allontanandosi"), "allontan" );
	deepEqual( Stem("allontanar"), "allontan" );
	deepEqual( Stem("allontanare"), "allontan" );
	deepEqual( Stem("allontanarlo"), "allontan" );
	deepEqual( Stem("allontanarne"), "allontan" );
	deepEqual( Stem("allontanarono"), "allontan" );
	deepEqual( Stem("allontanarsi"), "allontan" );
	deepEqual( Stem("allontanasse"), "allontan" );
	deepEqual( Stem("allontanata"), "allontan" );
	deepEqual( Stem("allontanati"), "allontan" );
	deepEqual( Stem("allontanato"), "allontan" );
	deepEqual( Stem("allontanava"), "allontan" );
	deepEqual( Stem("allontanavano"), "allontan" );
	deepEqual( Stem("allontani"), "allontan" );
	deepEqual( Stem("allontanò"), "allontan" );
	deepEqual( Stem("allor"), "allor" );
	deepEqual( Stem("allora"), "allor" );
	deepEqual( Stem("allorché"), "allorc" );
	deepEqual( Stem("allori"), "allor" );
	deepEqual( Stem("allucinante"), "allucin" );
	deepEqual( Stem("allucinanti"), "allucin" );
	deepEqual( Stem("alluminio"), "allumin" );
	deepEqual( Stem("allunga"), "allung" );
	deepEqual( Stem("allungando"), "allung" );
	deepEqual( Stem("allungar"), "allung" );
	deepEqual( Stem("allungare"), "allung" );
	deepEqual( Stem("allungate"), "allung" );
	deepEqual( Stem("allungato"), "allung" );
	deepEqual( Stem("allungava"), "allung" );
	deepEqual( Stem("allungò"), "allung" );
	deepEqual( Stem("allusione"), "allusion" );
	deepEqual( Stem("allusiva"), "allus" );
	deepEqual( Stem("alluvionate"), "alluvion" );
	deepEqual( Stem("alluvionati"), "alluvion" );
	deepEqual( Stem("alma"), "alma" );
	deepEqual( Stem("almanaccar"), "almanacc" );
	deepEqual( Stem("almanaccare"), "almanacc" );
	deepEqual( Stem("almanacchi"), "almanacc" );
	deepEqual( Stem("almaral"), "almaral" );
	deepEqual( Stem("almen"), "almen" );
	deepEqual( Stem("almeno"), "almen" );
	deepEqual( Stem("alo"), "alo" );
	deepEqual( Stem("aloisi"), "alois" );
	deepEqual( Stem("alone"), "alon" );
	deepEqual( Stem("alpestre"), "alpestr" );
	deepEqual( Stem("alpi"), "alpi" );
	deepEqual( Stem("alpigiano"), "alpig" );
	deepEqual( Stem("alpine"), "alpin" );
	deepEqual( Stem("alpinimo"), "alpinim" );
	deepEqual( Stem("alpino"), "alpin" );
	deepEqual( Stem("alquanti"), "alquant" );
	deepEqual( Stem("alquanto"), "alquant" );
	deepEqual( Stem("alsthom"), "alsthom" );
	deepEqual( Stem("alt"), "alt" );
	deepEqual( Stem("alta"), "alta" );
	deepEqual( Stem("altafini"), "altafin" );
	deepEqual( Stem("altalenante"), "altalen" );
	deepEqual( Stem("altamente"), "alt" );
	deepEqual( Stem("altamirano"), "altamir" );
	deepEqual( Stem("altar"), "altar" );
	deepEqual( Stem("altare"), "altar" );
	deepEqual( Stem("alte"), "alte" );
	deepEqual( Stem("alter"), "alter" );
	deepEqual( Stem("altera"), "alter" );
	deepEqual( Stem("alterando"), "alter" );
	deepEqual( Stem("alterarsi"), "alter" );
	deepEqual( Stem("alterata"), "alter" );
	deepEqual( Stem("alterate"), "alter" );
	deepEqual( Stem("alterati"), "alter" );
	deepEqual( Stem("alterato"), "alter" );
	deepEqual( Stem("alteravan"), "alteravan" );
	deepEqual( Stem("alterazione"), "alter" );
	deepEqual( Stem("alterigia"), "alterig" );
	deepEqual( Stem("alternando"), "altern" );
	deepEqual( Stem("alternanza"), "altern" );
	deepEqual( Stem("alternate"), "altern" );
	deepEqual( Stem("alternati"), "altern" );
	deepEqual( Stem("alternativa"), "altern" );
	deepEqual( Stem("alternativamente"), "altern" );
	deepEqual( Stem("alternative"), "altern" );
	deepEqual( Stem("alternativi"), "altern" );
	deepEqual( Stem("alternativo"), "altern" );
	deepEqual( Stem("altero"), "alter" );
	deepEqual( Stem("altezza"), "altezz" );
	deepEqual( Stem("alti"), "alti" );
	deepEqual( Stem("altissimi"), "altissim" );
	deepEqual( Stem("altissimo"), "altissim" );
	deepEqual( Stem("alto"), "alto" );
	deepEqual( Stem("altoatesina"), "altoatesin" );
	deepEqual( Stem("altoatesine"), "altoatesin" );
	deepEqual( Stem("altoatesini"), "altoatesin" );
	deepEqual( Stem("altoatesino"), "altoatesin" );
	deepEqual( Stem("altoparlanti"), "altoparl" );
	deepEqual( Stem("altopiano"), "altop" );
	deepEqual( Stem("altos"), "altos" );
	deepEqual( Stem("altr"), "altr" );
	deepEqual( Stem("altra"), "altra" );
	deepEqual( Stem("altre"), "altre" );
	deepEqual( Stem("altresì"), "altres" );
	deepEqual( Stem("altrettali"), "altrettal" );
	deepEqual( Stem("altrettanta"), "altrettant" );
	deepEqual( Stem("altrettante"), "altrett" );
	deepEqual( Stem("altrettanti"), "altrett" );
	deepEqual( Stem("altrettanto"), "altrettant" );
	deepEqual( Stem("altri"), "altri" );
	deepEqual( Stem("altrì"), "altrì" );
	deepEqual( Stem("altrimenti"), "altriment" );
	deepEqual( Stem("altringer"), "altringer" );
	deepEqual( Stem("altro"), "altro" );
	deepEqual( Stem("altrò"), "altrò" );
	deepEqual( Stem("altroieri"), "altroier" );
	deepEqual( Stem("altrove"), "altrov" );
	deepEqual( Stem("altrui"), "altru" );
	deepEqual( Stem("alture"), "altur" );
	deepEqual( Stem("alumix"), "alumix" );
	deepEqual( Stem("alunne"), "alunn" );
	deepEqual( Stem("alunni"), "alunn" );
	deepEqual( Stem("alveare"), "alve" );
	deepEqual( Stem("alvin"), "alvin" );
	deepEqual( Stem("alza"), "alza" );
	deepEqual( Stem("alzan"), "alzan" );
	deepEqual( Stem("alzando"), "alzand" );
	deepEqual( Stem("alzandogli"), "alzandogl" );
	deepEqual( Stem("alzandosi"), "alzand" );
	deepEqual( Stem("alzano"), "alzan" );
	deepEqual( Stem("alzar"), "alzar" );
	deepEqual( Stem("alzare"), "alzar" );
	deepEqual( Stem("alzargli"), "alzargl" );
	deepEqual( Stem("alzarla"), "alzarl" );
	deepEqual( Stem("alzarsi"), "alzars" );
	deepEqual( Stem("alzasse"), "alzass" );
	deepEqual( Stem("alzata"), "alzat" );
	deepEqual( Stem("alzate"), "alzat" );
	deepEqual( Stem("alzatevi"), "alzat" );
	deepEqual( Stem("alzati"), "alzat" );
	deepEqual( Stem("alzato"), "alzat" );
	deepEqual( Stem("alzatosi"), "alzat" );
	deepEqual( Stem("alzava"), "alzav" );
	deepEqual( Stem("alzavano"), "alzav" );
	deepEqual( Stem("alzi"), "alzi" );
	deepEqual( Stem("alzo"), "alzo" );
	deepEqual( Stem("alzò"), "alzò" );
	deepEqual( Stem("am"), "am" );
	deepEqual( Stem("ama"), "ama" );
	deepEqual( Stem("amabile"), "amabil" );
	deepEqual( Stem("amabili"), "amabil" );
	deepEqual( Stem("amano"), "aman" );
	deepEqual( Stem("amante"), "amant" );
	deepEqual( Stem("amanti"), "amant" );
	deepEqual( Stem("amar"), "amar" );
	deepEqual( Stem("amara"), "amar" );
	deepEqual( Stem("amaramente"), "amar" );
	deepEqual( Stem("amaranti"), "amar" );
	deepEqual( Stem("amare"), "amar" );
	deepEqual( Stem("amareggiata"), "amaregg" );
	deepEqual( Stem("amareggiati"), "amaregg" );
	deepEqual( Stem("amareggiato"), "amaregg" );
	deepEqual( Stem("amarezza"), "amarezz" );
	deepEqual( Stem("amari"), "amar" );
	deepEqual( Stem("amaritudine"), "amaritudin" );
	deepEqual( Stem("amarli"), "amarl" );
	deepEqual( Stem("amaro"), "amar" );
	deepEqual( Stem("amarò"), "amar" );
	deepEqual( Stem("amaru"), "amaru" );
	deepEqual( Stem("amata"), "amat" );
	deepEqual( Stem("amateli"), "amatel" );
	deepEqual( Stem("amatevi"), "amat" );
	deepEqual( Stem("amati"), "amat" );
	deepEqual( Stem("amato"), "amat" );
	deepEqual( Stem("amatore"), "amator" );
	deepEqual( Stem("amatori"), "amator" );
	deepEqual( Stem("amatorio"), "amator" );
	deepEqual( Stem("amava"), "amav" );
	deepEqual( Stem("amavano"), "amav" );
	deepEqual( Stem("amavate"), "amav" );
	deepEqual( Stem("amazzonia"), "amazzon" );
	deepEqual( Stem("amazzonica"), "amazzon" );
	deepEqual( Stem("ambasce"), "ambasc" );
	deepEqual( Stem("ambasciata"), "ambasc" );
	deepEqual( Stem("ambasciator"), "ambasciator" );
	deepEqual( Stem("ambasciatore"), "ambasc" );
	deepEqual( Stem("ambasciatrice"), "ambasc" );
	deepEqual( Stem("ambedue"), "ambedu" );
	deepEqual( Stem("ambientale"), "ambiental" );
	deepEqual( Stem("ambientali"), "ambiental" );
	deepEqual( Stem("ambientalista"), "ambiental" );
	deepEqual( Stem("ambientata"), "ambient" );
	deepEqual( Stem("ambientato"), "ambient" );
	deepEqual( Stem("ambientazioni"), "ambient" );
	deepEqual( Stem("ambiente"), "ambient" );
	deepEqual( Stem("ambienti"), "ambient" );
	deepEqual( Stem("ambiete"), "ambi" );
	deepEqual( Stem("ambiguo"), "ambigu" );
	deepEqual( Stem("ambita"), "ambit" );
	deepEqual( Stem("ambito"), "ambit" );
	deepEqual( Stem("ambizione"), "ambizion" );
	deepEqual( Stem("ambizioni"), "ambizion" );
	deepEqual( Stem("ambiziosa"), "ambiz" );
	deepEqual( Stem("ambiziose"), "ambiz" );
	deepEqual( Stem("ambro"), "ambro" );
	deepEqual( Stem("ambrogio"), "ambrog" );
	deepEqual( Stem("ambros"), "ambros" );
	deepEqual( Stem("ambrosetti"), "ambrosett" );
	deepEqual( Stem("ambrosia"), "ambros" );
	deepEqual( Stem("ambrosiana"), "ambrosian" );
	deepEqual( Stem("ambrosio"), "ambros" );
	deepEqual( Stem("ambroveneto"), "ambrovenet" );
	deepEqual( Stem("ambulanti"), "ambul" );
	deepEqual( Stem("ambulanze"), "ambul" );
	deepEqual( Stem("ambulatori"), "ambul" );
	deepEqual( Stem("amedeo"), "amede" );
	deepEqual( Stem("amendola"), "amendol" );
	deepEqual( Stem("amene"), "amen" );
	deepEqual( Stem("amenità"), "amen" );
	deepEqual( Stem("ameno"), "amen" );
	deepEqual( Stem("amer"), "amer" );
	deepEqual( Stem("america"), "amer" );
	deepEqual( Stem("american"), "american" );
	deepEqual( Stem("americana"), "american" );
	deepEqual( Stem("americanbond"), "americanbond" );
	deepEqual( Stem("americane"), "american" );
	deepEqual( Stem("americani"), "american" );
	deepEqual( Stem("americano"), "americ" );
	deepEqual( Stem("americas"), "americas" );
	deepEqual( Stem("amerigo"), "amerig" );
	deepEqual( Stem("amerini"), "amerin" );
	deepEqual( Stem("ametrano"), "ametr" );
	deepEqual( Stem("ami"), "ami" );
	deepEqual( Stem("amianto"), "amiant" );
	deepEqual( Stem("amica"), "amic" );
	deepEqual( Stem("amiche"), "amic" );
	deepEqual( Stem("amichevole"), "amichevol" );
	deepEqual( Stem("amici"), "amic" );
	deepEqual( Stem("amicizia"), "amiciz" );
	deepEqual( Stem("amicizie"), "amiciz" );
	deepEqual( Stem("amico"), "amic" );
	deepEqual( Stem("amiram"), "amiram" );
	deepEqual( Stem("amm"), "amm" );
	deepEqual( Stem("ammaccar"), "ammacc" );
	deepEqual( Stem("ammaccate"), "ammacc" );
	deepEqual( Stem("ammaccati"), "ammacc" );
	deepEqual( Stem("ammaccato"), "ammacc" );
	deepEqual( Stem("ammaestramento"), "ammaestr" );
	deepEqual( Stem("ammaestrata"), "ammaestr" );
	deepEqual( Stem("ammaestrato"), "ammaestr" );
	deepEqual( Stem("ammainato"), "ammain" );
	deepEqual( Stem("ammalare"), "ammal" );
	deepEqual( Stem("ammalarono"), "ammal" );
	deepEqual( Stem("ammalarsi"), "ammal" );
	deepEqual( Stem("ammalata"), "ammal" );
	deepEqual( Stem("ammalate"), "ammal" );
	deepEqual( Stem("ammalati"), "ammal" );
	deepEqual( Stem("ammalato"), "ammal" );
	deepEqual( Stem("ammalavano"), "ammal" );
	deepEqual( Stem("ammalazzati"), "ammalazz" );
	deepEqual( Stem("ammaliziati"), "ammaliz" );
	deepEqual( Stem("ammalò"), "ammal" );
	deepEqual( Stem("amman"), "amman" );
	deepEqual( Stem("ammansare"), "ammans" );
	deepEqual( Stem("ammansato"), "ammans" );
	deepEqual( Stem("ammassa"), "ammass" );
	deepEqual( Stem("ammasso"), "ammass" );
	deepEqual( Stem("ammazza"), "ammazz" );
	deepEqual( Stem("ammazzar"), "ammazz" );
	deepEqual( Stem("ammazzare"), "ammazz" );
	deepEqual( Stem("ammazzarvi"), "ammazz" );
	deepEqual( Stem("ammazzassero"), "ammazz" );
	deepEqual( Stem("ammazzati"), "ammazz" );
	deepEqual( Stem("ammazzato"), "ammazz" );
	deepEqual( Stem("ammazzeranno"), "ammazz" );
	deepEqual( Stem("ammazzerebbe"), "ammazz" );
	deepEqual( Stem("ammazzi"), "ammazz" );
	deepEqual( Stem("ammazzo"), "ammazz" );
	deepEqual( Stem("ammazzò"), "ammazz" );
	deepEqual( Stem("ammessa"), "ammess" );
	deepEqual( Stem("ammesse"), "ammess" );
	deepEqual( Stem("ammessi"), "ammess" );
	deepEqual( Stem("ammesso"), "ammess" );
	deepEqual( Stem("ammette"), "ammett" );
	deepEqual( Stem("ammettere"), "ammett" );
	deepEqual( Stem("amministrarli"), "amministr" );
	deepEqual( Stem("amministrativa"), "amministr" );
	deepEqual( Stem("amministrative"), "amministr" );
	deepEqual( Stem("amministrativi"), "amministr" );
	deepEqual( Stem("amministrativo"), "amministr" );
	deepEqual( Stem("amministrato"), "amministr" );
	deepEqual( Stem("amministratore"), "amministr" );
	deepEqual( Stem("amministratori"), "amministr" );
	deepEqual( Stem("amministrazione"), "amministr" );
	deepEqual( Stem("amministrazioni"), "amministr" );
	deepEqual( Stem("amministriamo"), "amministr" );
	deepEqual( Stem("amministrtiva"), "amministrt" );
	deepEqual( Stem("ammira"), "ammir" );
	deepEqual( Stem("ammirabile"), "ammir" );
	deepEqual( Stem("ammiraglio"), "ammiragl" );
	deepEqual( Stem("ammirare"), "ammir" );
	deepEqual( Stem("ammirati"), "ammir" );
	deepEqual( Stem("ammirato"), "ammir" );
	deepEqual( Stem("ammirava"), "ammir" );
	deepEqual( Stem("ammirazione"), "ammir" );
	deepEqual( Stem("ammirevole"), "ammirevol" );
	deepEqual( Stem("ammissione"), "ammission" );
	deepEqual( Stem("ammodernata"), "ammodern" );
	deepEqual( Stem("ammonisce"), "ammon" );
	deepEqual( Stem("ammoniscono"), "ammon" );
	deepEqual( Stem("ammonissero"), "ammon" );
	deepEqual( Stem("ammoniti"), "ammon" );
	deepEqual( Stem("ammonito"), "ammon" );
	deepEqual( Stem("ammoniva"), "ammon" );
	deepEqual( Stem("ammonizione"), "ammonizion" );
	deepEqual( Stem("ammonizioni"), "ammonizion" );
	deepEqual( Stem("ammontare"), "ammont" );
	deepEqual( Stem("ammontari"), "ammontar" );
	deepEqual( Stem("ammontata"), "ammont" );
	deepEqual( Stem("ammontate"), "ammont" );
	deepEqual( Stem("ammontati"), "ammont" );
	deepEqual( Stem("ammontato"), "ammont" );
	deepEqual( Stem("ammontavano"), "ammont" );
	deepEqual( Stem("ammonticchiati"), "ammonticc" );
	deepEqual( Stem("ammorbato"), "ammorb" );
	deepEqual( Stem("ammorbidire"), "ammorbid" );
	deepEqual( Stem("ammorbidirè"), "ammorbidir" );
	deepEqual( Stem("ammortire"), "ammort" );
	deepEqual( Stem("ammortito"), "ammort" );
	deepEqual( Stem("ammortizzatore"), "ammortizz" );
	deepEqual( Stem("ammortizzatori"), "ammortizz" );
	deepEqual( Stem("ammucchiate"), "ammucc" );
	deepEqual( Stem("ammutolisce"), "ammutol" );
	deepEqual( Stem("ammutolisco"), "ammutol" );
	deepEqual( Stem("amnistia"), "amnist" );
	deepEqual( Stem("amnon"), "amnon" );
	deepEqual( Stem("amo"), "amo" );
	deepEqual( Stem("amodeo"), "amode" );
	deepEqual( Stem("amor"), "amor" );
	deepEqual( Stem("amore"), "amor" );
	deepEqual( Stem("amorevole"), "amorevol" );
	deepEqual( Stem("amorevolezza"), "amorevolezz" );
	deepEqual( Stem("amorevoli"), "amorevol" );
	deepEqual( Stem("amorevolmente"), "amorevol" );
	deepEqual( Stem("amori"), "amor" );
	deepEqual( Stem("amorore"), "amoror" );
	deepEqual( Stem("amoroso"), "amor" );
	deepEqual( Stem("amoruso"), "amorus" );
	deepEqual( Stem("amos"), "amos" );
	deepEqual( Stem("amparo"), "ampar" );
	deepEqual( Stem("ampezzo"), "ampezz" );
	deepEqual( Stem("ampi"), "ampi" );
	deepEqual( Stem("ampia"), "ampi" );
	deepEqual( Stem("ampiamente"), "ampi" );
	deepEqual( Stem("ampie"), "ampi" );
	deepEqual( Stem("ampiezza"), "ampiezz" );
	deepEqual( Stem("ampio"), "ampi" );
	deepEqual( Stem("amplia"), "ampli" );
	deepEqual( Stem("ampliando"), "ampli" );
	deepEqual( Stem("ampliare"), "ampli" );
	deepEqual( Stem("ampliata"), "ampli" );
	deepEqual( Stem("amplificata"), "amplific" );
	deepEqual( Stem("amplificato"), "amplific" );
	deepEqual( Stem("amplissimi"), "amplissim" );
	deepEqual( Stem("ampolla"), "ampoll" );
	deepEqual( Stem("ampollosamente"), "ampoll" );
	deepEqual( Stem("ampollose"), "ampoll" );
	deepEqual( Stem("amr"), "amr" );
	deepEqual( Stem("amsterdam"), "amsterdam" );
	deepEqual( Stem("amy"), "amy" );
	deepEqual( Stem("an"), "an" );
	deepEqual( Stem("anac"), "anac" );
	deepEqual( Stem("anadolu"), "anadolu" );
	deepEqual( Stem("anafilattico"), "anafilatt" );
	deepEqual( Stem("anagrafe"), "anagraf" );
	deepEqual( Stem("analisi"), "analis" );
	deepEqual( Stem("analisti"), "anal" );
	deepEqual( Stem("analitica"), "analit" );
	deepEqual( Stem("analizza"), "analizz" );
	deepEqual( Stem("analizzando"), "analizz" );
	deepEqual( Stem("analoga"), "analog" );
	deepEqual( Stem("analoghe"), "analog" );
	deepEqual( Stem("analoghi"), "analog" );
	deepEqual( Stem("analogia"), "analog" );
	deepEqual( Stem("analogie"), "analog" );
	deepEqual( Stem("analogo"), "analog" );
	deepEqual( Stem("anas"), "anas" );
	deepEqual( Stem("anastasia"), "anastas" );
	deepEqual( Stem("anatema"), "anatem" );
	deepEqual( Stem("anatemi"), "anatem" );
	deepEqual( Stem("anatoli"), "anatol" );
	deepEqual( Stem("anatoly"), "anatoly" );
	deepEqual( Stem("anav"), "anav" );
	deepEqual( Stem("anca"), "anca" );
	deepEqual( Stem("anch"), "anch" );
	deepEqual( Stem("anche"), "anche" );
	deepEqual( Stem("anco"), "anco" );
	deepEqual( Stem("ancona"), "ancon" );
	deepEqual( Stem("ancor"), "ancor" );
	deepEqual( Stem("ancora"), "ancor" );
	deepEqual( Stem("ancorata"), "ancor" );
	deepEqual( Stem("ancorato"), "ancor" );
	deepEqual( Stem("ancorché"), "ancorc" );
	deepEqual( Stem("ancudine"), "ancudin" );
	deepEqual( Stem("and"), "and" );
	deepEqual( Stem("andamenti"), "andament" );
	deepEqual( Stem("andamento"), "andament" );
	deepEqual( Stem("andando"), "andand" );
	deepEqual( Stem("andandogli"), "andandogl" );
	deepEqual( Stem("andandole"), "andandol" );
	deepEqual( Stem("andandomi"), "andandom" );
	deepEqual( Stem("andandosene"), "andandosen" );
	deepEqual( Stem("andar"), "andar" );
	deepEqual( Stem("andarci"), "andarc" );
	deepEqual( Stem("andare"), "andar" );
	deepEqual( Stem("andargli"), "andargl" );
	deepEqual( Stem("andarle"), "andarl" );
	deepEqual( Stem("andarlo"), "andarl" );
	deepEqual( Stem("andarmene"), "andarmen" );
	deepEqual( Stem("andarmi"), "andarm" );
	deepEqual( Stem("andarne"), "andarn" );
	deepEqual( Stem("andaron"), "andaron" );
	deepEqual( Stem("andarono"), "andar" );
	deepEqual( Stem("andarsene"), "andarsen" );
	deepEqual( Stem("andarsi"), "andars" );
	deepEqual( Stem("andarvene"), "andarven" );
	deepEqual( Stem("andarvisi"), "andarvis" );
	deepEqual( Stem("andasse"), "andass" );
	deepEqual( Stem("andasser"), "andasser" );
	deepEqual( Stem("andassero"), "andasser" );
	deepEqual( Stem("andassi"), "andass" );
	deepEqual( Stem("andassimo"), "andassim" );
	deepEqual( Stem("andata"), "andat" );
	deepEqual( Stem("andatale"), "andatal" );
	deepEqual( Stem("andate"), "andat" );
	deepEqual( Stem("andati"), "andat" );
	deepEqual( Stem("andato"), "andat" );
	deepEqual( Stem("andatura"), "andatur" );
	deepEqual( Stem("andava"), "andav" );
	deepEqual( Stem("andavamo"), "andavam" );
	deepEqual( Stem("andavan"), "andavan" );
	deepEqual( Stem("andavano"), "andav" );
	deepEqual( Stem("andavi"), "andav" );
	deepEqual( Stem("andavo"), "andav" );
	deepEqual( Stem("andazzo"), "andazz" );
	deepEqual( Stem("anderà"), "ander" );
	deepEqual( Stem("anderanno"), "anderann" );
	deepEqual( Stem("anderebbe"), "anderebb" );
	deepEqual( Stem("anderebbero"), "anderebber" );
	deepEqual( Stem("anderemo"), "anderem" );
	deepEqual( Stem("anderete"), "ander" );
	deepEqual( Stem("anderlecht"), "anderlecht" );
	deepEqual( Stem("anderò"), "ander" );
	deepEqual( Stem("anderson"), "anderson" );
	deepEqual( Stem("andersson"), "andersson" );
	deepEqual( Stem("andiam"), "andiam" );
	deepEqual( Stem("andiamo"), "andiam" );
	deepEqual( Stem("andirivieni"), "andirivien" );
	deepEqual( Stem("andito"), "andit" );
	deepEqual( Stem("ando"), "ando" );
	deepEqual( Stem("andò"), "andò" );
	deepEqual( Stem("andrà"), "andrà" );
	deepEqual( Stem("andranno"), "andrann" );
	deepEqual( Stem("andre"), "andre" );
	deepEqual( Stem("andrè"), "andrè" );
	deepEqual( Stem("andrea"), "andre" );
	deepEqual( Stem("andreas"), "andreas" );
	deepEqual( Stem("andreatta"), "andreatt" );
	deepEqual( Stem("andrebbe"), "andrebb" );
	deepEqual( Stem("andrei"), "andre" );
	deepEqual( Stem("andremo"), "andrem" );
	deepEqual( Stem("andreoli"), "andreol" );
	deepEqual( Stem("andreotti"), "andreott" );
	deepEqual( Stem("andres"), "andres" );
	deepEqual( Stem("andrew"), "andrew" );
	deepEqual( Stem("andrey"), "andrey" );
	deepEqual( Stem("andria"), "andri" );
	deepEqual( Stem("andrija"), "andrij" );
	deepEqual( Stem("andrino"), "andrin" );
	deepEqual( Stem("andrò"), "andrò" );
	deepEqual( Stem("andromeda"), "andromed" );
	deepEqual( Stem("androne"), "andron" );
	deepEqual( Stem("andronico"), "andron" );
	deepEqual( Stem("anelli"), "anell" );
	deepEqual( Stem("anello"), "anell" );
	deepEqual( Stem("anellò"), "anell" );
	deepEqual( Stem("anfia"), "anfi" );
	deepEqual( Stem("anfibi"), "anfib" );
	deepEqual( Stem("anfibia"), "anfib" );
	deepEqual( Stem("anfibio"), "anfib" );
	deepEqual( Stem("angela"), "angel" );
	deepEqual( Stem("angeles"), "angeles" );
	deepEqual( Stem("angeliche"), "angel" );
	deepEqual( Stem("angelini"), "angelin" );
	deepEqual( Stem("angelis"), "angelis" );
	deepEqual( Stem("angelo"), "angel" );
	deepEqual( Stem("angelus"), "angelus" );
	deepEqual( Stem("angesia"), "anges" );
	deepEqual( Stem("angheria"), "angher" );
	deepEqual( Stem("angherie"), "angher" );
	deepEqual( Stem("angioli"), "angiol" );
	deepEqual( Stem("angiolo"), "angiol" );
	deepEqual( Stem("anglicana"), "anglican" );
	deepEqual( Stem("anglo"), "anglo" );
	deepEqual( Stem("angloma"), "anglom" );
	deepEqual( Stem("angola"), "angol" );
	deepEqual( Stem("angolana"), "angolan" );
	deepEqual( Stem("angoli"), "angol" );
	deepEqual( Stem("angolo"), "angol" );
	deepEqual( Stem("angosce"), "angosc" );
	deepEqual( Stem("angoscia"), "angosc" );
	deepEqual( Stem("angosciosa"), "angosc" );
	deepEqual( Stem("angosciosamente"), "angosc" );
	deepEqual( Stem("angosciose"), "angosc" );
	deepEqual( Stem("angoscioso"), "angosc" );
	deepEqual( Stem("angrisani"), "angrisan" );
	deepEqual( Stem("angusta"), "angust" );
	deepEqual( Stem("angustia"), "angust" );
	deepEqual( Stem("angustiarsi"), "angust" );
	deepEqual( Stem("angustiate"), "angust" );
	deepEqual( Stem("angustiati"), "angust" );
	deepEqual( Stem("angustiato"), "angust" );
	deepEqual( Stem("angustie"), "angust" );
	deepEqual( Stem("angustiosa"), "angust" );
	deepEqual( Stem("angusto"), "angust" );
	deepEqual( Stem("anhalt"), "anhalt" );
	deepEqual( Stem("anidride"), "anidrid" );
	deepEqual( Stem("anima"), "anim" );
	deepEqual( Stem("animale"), "animal" );
	deepEqual( Stem("animali"), "animal" );
	deepEqual( Stem("animalium"), "animalium" );
	deepEqual( Stem("animando"), "anim" );
	deepEqual( Stem("animare"), "anim" );
	deepEqual( Stem("animarla"), "anim" );
	deepEqual( Stem("animarsi"), "anim" );
	deepEqual( Stem("animarvi"), "anim" );
	deepEqual( Stem("animata"), "anim" );
	deepEqual( Stem("animate"), "anim" );
	deepEqual( Stem("animati"), "anim" );
	deepEqual( Stem("animato"), "anim" );
	deepEqual( Stem("animava"), "anim" );
	deepEqual( Stem("animazione"), "anim" );
	deepEqual( Stem("anime"), "anim" );
	deepEqual( Stem("animi"), "anim" );
	deepEqual( Stem("animo"), "anim" );
	deepEqual( Stem("animosa"), "anim" );
	deepEqual( Stem("animosità"), "animos" );
	deepEqual( Stem("animoso"), "anim" );
	deepEqual( Stem("ankara"), "ankar" );
	deepEqual( Stem("anna"), "anna" );
	deepEqual( Stem("annacquarne"), "annacqu" );
	deepEqual( Stem("annaffiata"), "annaff" );
	deepEqual( Stem("annali"), "annal" );
	deepEqual( Stem("annaspare"), "annasp" );
	deepEqual( Stem("annata"), "annat" );
	deepEqual( Stem("annate"), "annat" );
	deepEqual( Stem("anne"), "anne" );
	deepEqual( Stem("annebbia"), "annebb" );
	deepEqual( Stem("annebbiare"), "annebb" );
	deepEqual( Stem("annebbiava"), "annebb" );
	deepEqual( Stem("annegazione"), "anneg" );
	deepEqual( Stem("annelore"), "annelor" );
	deepEqual( Stem("annerite"), "anner" );
	deepEqual( Stem("annessa"), "anness" );
	deepEqual( Stem("annessi"), "anness" );
	deepEqual( Stem("annesso"), "anness" );
	deepEqual( Stem("anni"), "anni" );
	deepEqual( Stem("annibale"), "annibal" );
	deepEqual( Stem("annichilata"), "annichil" );
	deepEqual( Stem("annidati"), "annid" );
	deepEqual( Stem("annientarli"), "annient" );
	deepEqual( Stem("anniversari"), "anniversar" );
	deepEqual( Stem("anniversario"), "anniversar" );
	deepEqual( Stem("anniversary"), "anniversary" );
	deepEqual( Stem("annni"), "annni" );
	deepEqual( Stem("anno"), "anno" );
	deepEqual( Stem("annodò"), "annod" );
	deepEqual( Stem("annoiarsi"), "annoi" );
	deepEqual( Stem("annoiarvi"), "annoi" );
	deepEqual( Stem("annoiassero"), "annoi" );
	deepEqual( Stem("annoiati"), "annoi" );
	deepEqual( Stem("annoiato"), "annoi" );
	deepEqual( Stem("annoiava"), "annoi" );
	deepEqual( Stem("annona"), "annon" );
	deepEqual( Stem("annone"), "annon" );
	deepEqual( Stem("annoni"), "annon" );
	deepEqual( Stem("annosa"), "annos" );
	deepEqual( Stem("annotata"), "annot" );
	deepEqual( Stem("annotato"), "annot" );
	deepEqual( Stem("annottar"), "annott" );
	deepEqual( Stem("annovera"), "annover" );
	deepEqual( Stem("annoverare"), "annover" );
	deepEqual( Stem("annua"), "annu" );
	deepEqual( Stem("annuale"), "annual" );
	deepEqual( Stem("annuali"), "annual" );
	deepEqual( Stem("annualmente"), "annual" );
	deepEqual( Stem("annui"), "annu" );
	deepEqual( Stem("annullamento"), "annull" );
	deepEqual( Stem("annullando"), "annull" );
	deepEqual( Stem("annullare"), "annull" );
	deepEqual( Stem("annullata"), "annull" );
	deepEqual( Stem("annullato"), "annull" );
	deepEqual( Stem("annuncia"), "annunc" );
	deepEqual( Stem("annunciando"), "annunc" );
	deepEqual( Stem("annunciano"), "annunc" );
	deepEqual( Stem("annunciare"), "annunc" );
	deepEqual( Stem("annunciarla"), "annunc" );
	deepEqual( Stem("annunciata"), "annunc" );
	deepEqual( Stem("annunciati"), "annunc" );
	deepEqual( Stem("annunciato"), "annunc" );
	deepEqual( Stem("annunciavano"), "annunc" );
	deepEqual( Stem("annuncio"), "annunc" );
	deepEqual( Stem("annunzia"), "annunz" );
	deepEqual( Stem("annunziando"), "annunz" );
	deepEqual( Stem("annunziano"), "annunz" );
	deepEqual( Stem("annunziar"), "annunz" );
	deepEqual( Stem("annunziare"), "annunz" );
	deepEqual( Stem("annunziarle"), "annunz" );
	deepEqual( Stem("annunziarono"), "annunz" );
	deepEqual( Stem("annunziarsi"), "annunz" );
	deepEqual( Stem("annunziata"), "annunz" );
	deepEqual( Stem("annunziate"), "annunz" );
	deepEqual( Stem("annunziato"), "annunz" );
	deepEqual( Stem("annunziatori"), "annunz" );
	deepEqual( Stem("annunziava"), "annunz" );
	deepEqual( Stem("annunzio"), "annunz" );
	deepEqual( Stem("annunziò"), "annunz" );
	deepEqual( Stem("annuo"), "annu" );
	deepEqual( Stem("anomale"), "anomal" );
	deepEqual( Stem("anomalia"), "anomal" );
	deepEqual( Stem("anonimato"), "anonim" );
	deepEqual( Stem("anonimo"), "anonim" );
	deepEqual( Stem("anoressia"), "anoress" );
	deepEqual( Stem("anoressici"), "anoress" );
	deepEqual( Stem("anouk"), "anouk" );
	deepEqual( Stem("anp"), "anp" );
	deepEqual( Stem("anpac"), "anpac" );
	deepEqual( Stem("anpav"), "anpav" );
	deepEqual( Stem("anpcat"), "anpcat" );
	deepEqual( Stem("ansa"), "ansa" );
	deepEqual( Stem("ansaldo"), "ansald" );
	deepEqual( Stem("ansante"), "ansant" );
	deepEqual( Stem("ansanti"), "ansant" );
	deepEqual( Stem("anselmi"), "anselm" );
	deepEqual( Stem("anselmo"), "anselm" );
	deepEqual( Stem("ansett"), "ansett" );
	deepEqual( Stem("ansia"), "ansi" );
	deepEqual( Stem("ansietà"), "ansiet" );
	deepEqual( Stem("ansiosa"), "ansios" );
	deepEqual( Stem("ansiosamente"), "ansios" );
	deepEqual( Stem("ansioso"), "ansios" );
	deepEqual( Stem("antagonisti"), "antagon" );
	deepEqual( Stem("antares"), "antares" );
	deepEqual( Stem("antartide"), "antartid" );
	deepEqual( Stem("ante"), "ante" );
	deepEqual( Stem("antecedente"), "antecedent" );
	deepEqual( Stem("antecedenti"), "antecedent" );
	deepEqual( Stem("antenato"), "anten" );
	deepEqual( Stem("antenne"), "antenn" );
	deepEqual( Stem("anteponeva"), "antepon" );
	deepEqual( Stem("anteporre"), "anteporr" );
	deepEqual( Stem("anteprima"), "anteprim" );
	deepEqual( Stem("antequam"), "antequam" );
	deepEqual( Stem("anterselva"), "anterselv" );
	deepEqual( Stem("anthony"), "anthony" );
	deepEqual( Stem("anti"), "anti" );
	deepEqual( Stem("antiallergico"), "antiallerg" );
	deepEqual( Stem("antiberlusconi"), "antiberluscon" );
	deepEqual( Stem("antibiotici"), "antibiot" );
	deepEqual( Stem("antibiotico"), "antibiot" );
	deepEqual( Stem("antica"), "antic" );
	deepEqual( Stem("anticaglie"), "anticagl" );
	deepEqual( Stem("anticamera"), "anticamer" );
	deepEqual( Stem("anticamere"), "anticam" );
	deepEqual( Stem("antiche"), "antic" );
	deepEqual( Stem("antichi"), "antic" );
	deepEqual( Stem("antichità"), "antic" );
	deepEqual( Stem("anticipa"), "anticip" );
	deepEqual( Stem("anticipare"), "anticip" );
	deepEqual( Stem("anticiparlo"), "anticip" );
	deepEqual( Stem("anticipata"), "anticip" );
	deepEqual( Stem("anticipatamente"), "anticipat" );
	deepEqual( Stem("anticipate"), "anticip" );
	deepEqual( Stem("anticipato"), "anticip" );
	deepEqual( Stem("anticipatore"), "anticip" );
	deepEqual( Stem("anticipazione"), "anticip" );
	deepEqual( Stem("anticipazioni"), "anticip" );
	deepEqual( Stem("anticipi"), "anticip" );
	deepEqual( Stem("anticipo"), "anticip" );
	deepEqual( Stem("antico"), "antic" );
	deepEqual( Stem("anticomunismo"), "anticomun" );
	deepEqual( Stem("anticristi"), "anticr" );
	deepEqual( Stem("antidemocratico"), "antidemocrat" );
	deepEqual( Stem("antidemocrazia"), "antidemocraz" );
	deepEqual( Stem("antifascismo"), "antifasc" );
	deepEqual( Stem("antifurto"), "antifurt" );
	deepEqual( Stem("antille"), "antill" );
	deepEqual( Stem("antimafia"), "antimaf" );
	deepEqual( Stem("antimo"), "antim" );
	deepEqual( Stem("antipatia"), "antipat" );
	deepEqual( Stem("antiperipatetica"), "antiperipatet" );
	deepEqual( Stem("antipodi"), "antipod" );
	deepEqual( Stem("antiproiettile"), "antiproiettil" );
	deepEqual( Stem("antistante"), "antist" );
	deepEqual( Stem("antitbc"), "antitbc" );
	deepEqual( Stem("antitetica"), "antitet" );
	deepEqual( Stem("antitetico"), "antitet" );
	deepEqual( Stem("antitrust"), "antitrust" );
	deepEqual( Stem("antivedendo"), "antived" );
	deepEqual( Stem("antognoni"), "antognon" );
	deepEqual( Stem("antologie"), "antolog" );
	deepEqual( Stem("antona"), "anton" );
	deepEqual( Stem("antonella"), "antonell" );
	deepEqual( Stem("antonelli"), "antonell" );
	deepEqual( Stem("antoni"), "anton" );
	deepEqual( Stem("antonina"), "antonin" );
	deepEqual( Stem("antonio"), "anton" );
	deepEqual( Stem("antonioli"), "antoniol" );
	deepEqual( Stem("antonomasia"), "antonomas" );
	deepEqual( Stem("antonov"), "antonov" );
	deepEqual( Stem("antonucci"), "antonucc" );
	deepEqual( Stem("antraci"), "antrac" );
	deepEqual( Stem("antti"), "antti" );
	deepEqual( Stem("anulare"), "anul" );
	deepEqual( Stem("anversa"), "anvers" );
	deepEqual( Stem("anya"), "anya" );
	deepEqual( Stem("anzi"), "anzi" );
	deepEqual( Stem("anziana"), "anzian" );
	deepEqual( Stem("anziane"), "anzian" );
	deepEqual( Stem("anziani"), "anzian" );
	deepEqual( Stem("anzianità"), "anzian" );
	deepEqual( Stem("anziano"), "anzi" );
	deepEqual( Stem("anzichè"), "anzic" );
	deepEqual( Stem("anzio"), "anzi" );
	deepEqual( Stem("anzitutto"), "anzitutt" );
	deepEqual( Stem("aosta"), "aost" );
	deepEqual( Stem("aouita"), "aou" );
	deepEqual( Stem("ap"), "ap" );
	deepEqual( Stem("aparecido"), "aparecid" );
	deepEqual( Stem("apartheid"), "apartheid" );
	deepEqual( Stem("aperta"), "apert" );
	deepEqual( Stem("apertamente"), "apert" );
	deepEqual( Stem("aperte"), "apert" );
	deepEqual( Stem("apertè"), "apert" );
	deepEqual( Stem("aperti"), "apert" );
	deepEqual( Stem("aperto"), "apert" );
	deepEqual( Stem("apertura"), "apertur" );
	deepEqual( Stem("aperture"), "apertur" );
	deepEqual( Stem("apolloni"), "apollon" );
	deepEqual( Stem("apologeta"), "apologet" );
	deepEqual( Stem("apologia"), "apolog" );
	deepEqual( Stem("apologie"), "apolog" );
	deepEqual( Stem("apostrofe"), "apostrof" );
	deepEqual( Stem("appagarlo"), "appag" );
	deepEqual( Stem("appagato"), "appag" );
	deepEqual( Stem("appagava"), "appag" );
	deepEqual( Stem("appagherò"), "appag" );
	deepEqual( Stem("appaiono"), "appai" );
	deepEqual( Stem("appaltato"), "appalt" );
	deepEqual( Stem("appaltatore"), "appalt" );
	deepEqual( Stem("appaltatrici"), "appalt" );
	deepEqual( Stem("appalto"), "appalt" );
	deepEqual( Stem("appaluditissimi"), "appaluditissim" );
	deepEqual( Stem("appannamento"), "appann" );
	deepEqual( Stem("appannarsi"), "appann" );
	deepEqual( Stem("appannò"), "appann" );
	deepEqual( Stem("apparato"), "appar" );
	deepEqual( Stem("appare"), "appar" );
	deepEqual( Stem("apparecchi"), "apparecc" );
	deepEqual( Stem("apparecchiar"), "apparecc" );
	deepEqual( Stem("apparecchiare"), "apparecc" );
	deepEqual( Stem("apparecchiata"), "apparecc" );
	deepEqual( Stem("apparecchiate"), "apparecc" );
	deepEqual( Stem("apparecchiati"), "apparecc" );
	deepEqual( Stem("apparecchiato"), "apparecc" );
	deepEqual( Stem("apparecchio"), "apparecc" );
	deepEqual( Stem("apparecchiò"), "apparecc" );
	deepEqual( Stem("apparendogli"), "appar" );
	deepEqual( Stem("apparente"), "apparent" );
	deepEqual( Stem("apparentemente"), "apparent" );
	deepEqual( Stem("apparenti"), "apparent" );
	deepEqual( Stem("apparenza"), "apparent" );
	deepEqual( Stem("apparenze"), "apparent" );
	deepEqual( Stem("apparir"), "appar" );
	deepEqual( Stem("apparire"), "appar" );
	deepEqual( Stem("apparisca"), "appar" );
	deepEqual( Stem("apparisse"), "appariss" );
	deepEqual( Stem("apparitore"), "apparitor" );
	deepEqual( Stem("apparitori"), "apparitor" );
	deepEqual( Stem("appariva"), "appar" );
	deepEqual( Stem("apparivano"), "appar" );
	deepEqual( Stem("apparizione"), "apparizion" );
	deepEqual( Stem("apparizioni"), "apparizion" );
	deepEqual( Stem("apparsa"), "appars" );
	deepEqual( Stem("apparse"), "appars" );
	deepEqual( Stem("apparsi"), "appars" );
	deepEqual( Stem("apparso"), "appars" );
	deepEqual( Stem("appartamenti"), "appart" );
	deepEqual( Stem("appartamento"), "appart" );
	deepEqual( Stem("appartato"), "appart" );
	deepEqual( Stem("appartenente"), "appartenent" );
	deepEqual( Stem("appartenenti"), "appartenent" );
	deepEqual( Stem("appartenenza"), "appartenent" );
	deepEqual( Stem("appartenenze"), "appartenent" );
	deepEqual( Stem("appartenere"), "apparten" );
	deepEqual( Stem("apparteneva"), "apparten" );
	deepEqual( Stem("appartenevano"), "apparten" );
	deepEqual( Stem("appartengano"), "apparteng" );
	deepEqual( Stem("appartengono"), "apparteng" );
	deepEqual( Stem("appartiene"), "appartien" );
	deepEqual( Stem("apparve"), "apparv" );
	deepEqual( Stem("apparvero"), "apparver" );
	deepEqual( Stem("appassionante"), "appassion" );
	deepEqual( Stem("appassionata"), "appassion" );
	deepEqual( Stem("appassionate"), "appassion" );
	deepEqual( Stem("appassionati"), "appassion" );
	deepEqual( Stem("appassionato"), "appassion" );
	deepEqual( Stem("appassite"), "appass" );
	deepEqual( Stem("appedonatò"), "appedonat" );
	deepEqual( Stem("appellativi"), "appell" );
	deepEqual( Stem("appellativo"), "appell" );
	deepEqual( Stem("appelli"), "appell" );
	deepEqual( Stem("appello"), "appell" );
	deepEqual( Stem("appena"), "appen" );
	deepEqual( Stem("appenderlo"), "append" );
	deepEqual( Stem("appesantita"), "appesant" );
	deepEqual( Stem("appesi"), "appes" );
	deepEqual( Stem("appeso"), "appes" );
	deepEqual( Stem("appestati"), "appest" );
	deepEqual( Stem("appetito"), "appet" );
	deepEqual( Stem("appezzamenti"), "appezz" );
	deepEqual( Stem("appiattarsi"), "appiatt" );
	deepEqual( Stem("appiattirsi"), "appiatt" );
	deepEqual( Stem("appiattisce"), "appiatt" );
	deepEqual( Stem("appiccicati"), "appiccic" );
	deepEqual( Stem("appiè"), "appi" );
	deepEqual( Stem("appl"), "appl" );
	deepEqual( Stem("applaude"), "applaud" );
	deepEqual( Stem("applaudendo"), "applaud" );
	deepEqual( Stem("applaudire"), "applaud" );
	deepEqual( Stem("applauditi"), "applaud" );
	deepEqual( Stem("applauditissimo"), "applauditissim" );
	deepEqual( Stem("applaudito"), "applaud" );
	deepEqual( Stem("applaudivano"), "applaud" );
	deepEqual( Stem("applausi"), "applaus" );
	deepEqual( Stem("applauso"), "applaus" );
	deepEqual( Stem("apple"), "apple" );
	deepEqual( Stem("applicabile"), "applic" );
	deepEqual( Stem("applicabilità"), "applic" );
	deepEqual( Stem("applicandosi"), "applic" );
	deepEqual( Stem("applicare"), "applic" );
	deepEqual( Stem("applicargli"), "applic" );
	deepEqual( Stem("applicarvelo"), "applic" );
	deepEqual( Stem("applicata"), "applic" );
	deepEqual( Stem("applicate"), "applic" );
	deepEqual( Stem("applicati"), "applic" );
	deepEqual( Stem("applicativi"), "applic" );
	deepEqual( Stem("applicativo"), "applic" );
	deepEqual( Stem("applicava"), "applic" );
	deepEqual( Stem("applicazione"), "applic" );
	deepEqual( Stem("applicazioni"), "applic" );
	deepEqual( Stem("applichi"), "applic" );
	deepEqual( Stem("appluso"), "applus" );
	deepEqual( Stem("appoggi"), "appogg" );
	deepEqual( Stem("appoggia"), "appogg" );
	deepEqual( Stem("appoggiando"), "appogg" );
	deepEqual( Stem("appoggiano"), "appogg" );
	deepEqual( Stem("appoggiar"), "appogg" );
	deepEqual( Stem("appoggiare"), "appogg" );
	deepEqual( Stem("appoggiarla"), "appogg" );
	deepEqual( Stem("appoggiarlo"), "appogg" );
	deepEqual( Stem("appoggiata"), "appogg" );
	deepEqual( Stem("appoggiate"), "appogg" );
	deepEqual( Stem("appoggiati"), "appogg" );
	deepEqual( Stem("appoggiato"), "appogg" );
	deepEqual( Stem("appoggino"), "appoggin" );
	deepEqual( Stem("appoggio"), "appogg" );
	deepEqual( Stem("appoggiò"), "appogg" );
	deepEqual( Stem("apporti"), "apport" );
	deepEqual( Stem("apporto"), "apport" );
	deepEqual( Stem("appositamente"), "apposit" );
	deepEqual( Stem("apposite"), "appos" );
	deepEqual( Stem("appositi"), "appos" );
	deepEqual( Stem("apposito"), "appos" );
	deepEqual( Stem("apposta"), "appost" );
	deepEqual( Stem("appostarlo"), "appost" );
	deepEqual( Stem("appostatamente"), "appostat" );
	deepEqual( Stem("appostati"), "appost" );
	deepEqual( Stem("appostato"), "appost" );
	deepEqual( Stem("apposti"), "appost" );
	deepEqual( Stem("appprovato"), "appprov" );
	deepEqual( Stem("apprende"), "apprend" );
	deepEqual( Stem("apprendere"), "apprend" );
	deepEqual( Stem("apprendesse"), "apprendess" );
	deepEqual( Stem("apprendisti"), "apprend" );
	deepEqual( Stem("apprensione"), "apprension" );
	deepEqual( Stem("apprensioni"), "apprension" );
	deepEqual( Stem("appresa"), "appres" );
	deepEqual( Stem("appreso"), "appres" );
	deepEqual( Stem("appresta"), "apprest" );
	deepEqual( Stem("apprestati"), "apprest" );
	deepEqual( Stem("apprezzamento"), "apprezz" );
	deepEqual( Stem("apprezzato"), "apprezz" );
	deepEqual( Stem("approccio"), "approcc" );
	deepEqual( Stem("approda"), "approd" );
	deepEqual( Stem("approdati"), "approd" );
	deepEqual( Stem("approderà"), "approd" );
	deepEqual( Stem("approderemo"), "approd" );
	deepEqual( Stem("approdi"), "approd" );
	deepEqual( Stem("approdò"), "approd" );
	deepEqual( Stem("approfittando"), "approfitt" );
	deepEqual( Stem("approfittandosi"), "approfitt" );
	deepEqual( Stem("approfittare"), "approfitt" );
	deepEqual( Stem("approfittarne"), "approfitt" );
	deepEqual( Stem("approfittato"), "approfitt" );
	deepEqual( Stem("approfittava"), "approfitt" );
	deepEqual( Stem("approfittavano"), "approfitt" );
	deepEqual( Stem("approfondimento"), "approfond" );
	deepEqual( Stem("approfondire"), "approfond" );
	deepEqual( Stem("approfondisce"), "approfond" );
	deepEqual( Stem("approfondita"), "approfond" );
	deepEqual( Stem("approfondito"), "approfond" );
	deepEqual( Stem("approntate"), "appront" );
	deepEqual( Stem("appropriandosi"), "appropr" );
	deepEqual( Stem("appropriato"), "appropr" );
	deepEqual( Stem("approssimativamente"), "approssim" );
	deepEqual( Stem("approssimativi"), "approssim" );
	deepEqual( Stem("approssimazioni"), "approssim" );
	deepEqual( Stem("approva"), "approv" );
	deepEqual( Stem("approvando"), "approv" );
	deepEqual( Stem("approvar"), "approv" );
	deepEqual( Stem("approvare"), "approv" );
	deepEqual( Stem("approvarle"), "approv" );
	deepEqual( Stem("approvata"), "approv" );
	deepEqual( Stem("approvato"), "approv" );
	deepEqual( Stem("approvava"), "approv" );
	deepEqual( Stem("approvazione"), "approv" );
	deepEqual( Stem("approvazioni"), "approv" );
	deepEqual( Stem("approvò"), "approv" );
	deepEqual( Stem("approvviggionamento"), "approvviggion" );
	deepEqual( Stem("approvvigionamenti"), "approvvigion" );
	deepEqual( Stem("appunta"), "appunt" );
	deepEqual( Stem("appuntamenti"), "appunt" );
	deepEqual( Stem("appuntamento"), "appunt" );
	deepEqual( Stem("appuntata"), "appunt" );
	deepEqual( Stem("appuntate"), "appunt" );
	deepEqual( Stem("appuntato"), "appunt" );
	deepEqual( Stem("appuntellano"), "appuntell" );
	deepEqual( Stem("appuntellarsi"), "appuntell" );
	deepEqual( Stem("appuntellata"), "appuntell" );
	deepEqual( Stem("appuntellati"), "appuntell" );
	deepEqual( Stem("appuntellato"), "appuntell" );
	deepEqual( Stem("appuntellavano"), "appuntell" );
	deepEqual( Stem("appuntellò"), "appuntell" );
	deepEqual( Stem("appunti"), "appunt" );
	deepEqual( Stem("appuntino"), "appuntin" );
	deepEqual( Stem("appunto"), "appunt" );
	deepEqual( Stem("apra"), "apra" );
	deepEqual( Stem("aprano"), "apran" );
	deepEqual( Stem("apre"), "apre" );
	deepEqual( Stem("aprendo"), "aprend" );
	deepEqual( Stem("aprendosi"), "aprend" );
	deepEqual( Stem("apri"), "apri" );
	deepEqual( Stem("aprì"), "aprì" );
	deepEqual( Stem("apribottiglie"), "apribottigl" );
	deepEqual( Stem("aprile"), "april" );
	deepEqual( Stem("aprir"), "aprir" );
	deepEqual( Stem("aprirà"), "aprir" );
	deepEqual( Stem("aprire"), "aprir" );
	deepEqual( Stem("aprirsene"), "aprirsen" );
	deepEqual( Stem("aprirsi"), "aprirs" );
	deepEqual( Stem("aprirvi"), "aprirv" );
	deepEqual( Stem("aprisse"), "apriss" );
	deepEqual( Stem("aprissero"), "aprisser" );
	deepEqual( Stem("aprite"), "aprit" );
	deepEqual( Stem("apriva"), "apriv" );
	deepEqual( Stem("aprivano"), "apriv" );
	deepEqual( Stem("aprono"), "apron" );
	deepEqual( Stem("aprte"), "aprte" );
	deepEqual( Stem("apuano"), "apu" );
	deepEqual( Stem("apud"), "apud" );
	deepEqual( Stem("aq"), "aq" );
	deepEqual( Stem("aqui"), "aqui" );
	deepEqual( Stem("aquila"), "aquil" );
	deepEqual( Stem("ar"), "ar" );
	deepEqual( Stem("arà"), "arà" );
	deepEqual( Stem("arab"), "arab" );
	deepEqual( Stem("arabe"), "arab" );
	deepEqual( Stem("arabi"), "arab" );
	deepEqual( Stem("arabia"), "arab" );
	deepEqual( Stem("arabica"), "arab" );
	deepEqual( Stem("arabo"), "arab" );
	deepEqual( Stem("arafat"), "arafat" );
	deepEqual( Stem("aragon"), "aragon" );
	deepEqual( Stem("aragosta"), "aragost" );
	deepEqual( Stem("aran"), "aran" );
	deepEqual( Stem("arancia"), "aranc" );
	deepEqual( Stem("arangino"), "arangin" );
	deepEqual( Stem("arbiter"), "arbiter" );
	deepEqual( Stem("arbitrali"), "arbitral" );
	deepEqual( Stem("arbitramur"), "arbitramur" );
	deepEqual( Stem("arbitraria"), "arbitrar" );
	deepEqual( Stem("arbitrario"), "arbitrar" );
	deepEqual( Stem("arbitri"), "arbitr" );
	deepEqual( Stem("arbitrio"), "arbitr" );
	deepEqual( Stem("arbitro"), "arbitr" );
	deepEqual( Stem("arca"), "arca" );
	deepEqual( Stem("arcaica"), "arcaic" );
	deepEqual( Stem("arcais"), "arcais" );
	deepEqual( Stem("arce"), "arce" );
	deepEqual( Stem("archeologia"), "archeolog" );
	deepEqual( Stem("archeologica"), "archeolog" );
	deepEqual( Stem("archeologici"), "archeolog" );
	deepEqual( Stem("archeologico"), "archeolog" );
	deepEqual( Stem("archetto"), "archett" );
	deepEqual( Stem("archi"), "archi" );
	deepEqual( Stem("archibusi"), "archibus" );
	deepEqual( Stem("archimede"), "archimed" );
	deepEqual( Stem("architettato"), "architett" );
	deepEqual( Stem("architettura"), "architettur" );
	deepEqual( Stem("archivi"), "archiv" );
	deepEqual( Stem("archivio"), "archiv" );
	deepEqual( Stem("arci"), "arci" );
	deepEqual( Stem("arcidiacono"), "arcidiac" );
	deepEqual( Stem("arcigni"), "arcign" );
	deepEqual( Stem("arcione"), "arcion" );
	deepEqual( Stem("arciospedale"), "arciospedal" );
	deepEqual( Stem("arcipelago"), "arcipelag" );
	deepEqual( Stem("arciprete"), "arcipr" );
	deepEqual( Stem("arcivescovado"), "arcivescovad" );
	deepEqual( Stem("arcivescovile"), "arcivescovil" );
	deepEqual( Stem("arcivescovo"), "arcivescov" );
	deepEqual( Stem("arco"), "arco" );
	deepEqual( Stem("arcobaleno"), "arcobalen" );
	deepEqual( Stem("arcore"), "arcor" );
	deepEqual( Stem("ard"), "ard" );
	deepEqual( Stem("ardant"), "ardant" );
	deepEqual( Stem("ardente"), "ardent" );
	deepEqual( Stem("ardentemente"), "ardent" );
	deepEqual( Stem("ardenti"), "ardent" );
	deepEqual( Stem("ardeva"), "ardev" );
	deepEqual( Stem("ardirà"), "ardir" );
	deepEqual( Stem("ardire"), "ardir" );
	deepEqual( Stem("ardiresti"), "ardirest" );
	deepEqual( Stem("ardisca"), "ardisc" );
	deepEqual( Stem("ardisce"), "ardisc" );
	deepEqual( Stem("ardiscono"), "ardisc" );
	deepEqual( Stem("ardisse"), "ardiss" );
	deepEqual( Stem("ardita"), "ardit" );
	deepEqual( Stem("arditi"), "ardit" );
	deepEqual( Stem("ardito"), "ardit" );
	deepEqual( Stem("ardiva"), "ardiv" );
	deepEqual( Stem("ardor"), "ardor" );
	deepEqual( Stem("ardore"), "ardor" );
	deepEqual( Stem("ardori"), "ardor" );
	deepEqual( Stem("ardua"), "ardu" );
	deepEqual( Stem("arduo"), "ardu" );
	deepEqual( Stem("area"), "are" );
	deepEqual( Stem("aree"), "are" );
	deepEqual( Stem("arena"), "aren" );
	deepEqual( Stem("arendo"), "arend" );
	deepEqual( Stem("aretina"), "aretin" );
	deepEqual( Stem("arezzo"), "arezz" );
	deepEqual( Stem("argani"), "argan" );
	deepEqual( Stem("argante"), "argant" );
	deepEqual( Stem("argentei"), "argente" );
	deepEqual( Stem("argenteria"), "argenter" );
	deepEqual( Stem("argentina"), "argentin" );
	deepEqual( Stem("argentine"), "argentin" );
	deepEqual( Stem("argentini"), "argentin" );
	deepEqual( Stem("argentino"), "argentin" );
	deepEqual( Stem("argento"), "argent" );
	deepEqual( Stem("argilla"), "argill" );
	deepEqual( Stem("arginare"), "argin" );
	deepEqual( Stem("argine"), "argin" );
	deepEqual( Stem("argo"), "argo" );
	deepEqual( Stem("argomentando"), "argoment" );
	deepEqual( Stem("argomentare"), "argoment" );
	deepEqual( Stem("argomentarlo"), "argoment" );
	deepEqual( Stem("argomentato"), "argoment" );
	deepEqual( Stem("argomenti"), "argoment" );
	deepEqual( Stem("argomento"), "argoment" );
	deepEqual( Stem("argomentò"), "argoment" );
	deepEqual( Stem("argun"), "argun" );
	deepEqual( Stem("arguto"), "argut" );
	deepEqual( Stem("aria"), "ari" );
	deepEqual( Stem("ariani"), "arian" );
	deepEqual( Stem("ariano"), "ari" );
	deepEqual( Stem("arias"), "arias" );
	deepEqual( Stem("arida"), "arid" );
	deepEqual( Stem("aridi"), "arid" );
	deepEqual( Stem("arido"), "arid" );
	deepEqual( Stem("arietando"), "ariet" );
	deepEqual( Stem("ariete"), "ari" );
	deepEqual( Stem("ariglieria"), "ariglier" );
	deepEqual( Stem("aringa"), "aring" );
	deepEqual( Stem("ariston"), "ariston" );
	deepEqual( Stem("aristotile"), "aristotil" );
	deepEqual( Stem("aritmetica"), "aritmet" );
	deepEqual( Stem("arivare"), "ariv" );
	deepEqual( Stem("arix"), "arix" );
	deepEqual( Stem("arlacchi"), "arlacc" );
	deepEqual( Stem("arlati"), "arlat" );
	deepEqual( Stem("arlecchino"), "arlecchin" );
	deepEqual( Stem("arma"), "arma" );
	deepEqual( Stem("armacollo"), "armacoll" );
	deepEqual( Stem("armadi"), "armad" );
	deepEqual( Stem("armadio"), "armad" );
	deepEqual( Stem("armamentario"), "armamentar" );
	deepEqual( Stem("armamenti"), "armament" );
	deepEqual( Stem("armamento"), "armament" );
	deepEqual( Stem("armando"), "armand" );
	deepEqual( Stem("armani"), "arman" );
	deepEqual( Stem("armano"), "arman" );
	deepEqual( Stem("armare"), "armar" );
	deepEqual( Stem("armata"), "armat" );
	deepEqual( Stem("armate"), "armat" );
	deepEqual( Stem("armati"), "armat" );
	deepEqual( Stem("armato"), "armat" );
	deepEqual( Stem("armatore"), "armator" );
	deepEqual( Stem("armatoriale"), "armatorial" );
	deepEqual( Stem("armatura"), "armatur" );
	deepEqual( Stem("arme"), "arme" );
	deepEqual( Stem("armena"), "armen" );
	deepEqual( Stem("armeria"), "armer" );
	deepEqual( Stem("armi"), "armi" );
	deepEqual( Stem("armin"), "armin" );
	deepEqual( Stem("armistizio"), "armistiz" );
	deepEqual( Stem("armonia"), "armon" );
	deepEqual( Stem("armonizzare"), "armonizz" );
	deepEqual( Stem("armonizzazione"), "armonizz" );
	deepEqual( Stem("armstrong"), "armstrong" );
	deepEqual( Stem("arnaro"), "arnar" );
	deepEqual( Stem("arnese"), "arnes" );
	deepEqual( Stem("arnesi"), "arnes" );
	deepEqual( Stem("aroldo"), "arold" );
	deepEqual( Stem("arrabattarsi"), "arrabatt" );
	deepEqual( Stem("arrabbiata"), "arrabb" );
	deepEqual( Stem("arrabbiatamente"), "arrabbiat" );
	deepEqual( Stem("arrabbiato"), "arrabb" );
	deepEqual( Stem("arrampicandosi"), "arrampic" );
	deepEqual( Stem("arrampicarci"), "arrampic" );
	deepEqual( Stem("arrampicarsi"), "arrampic" );
	deepEqual( Stem("arrampicati"), "arrampic" );
	deepEqual( Stem("arrampicavano"), "arrampic" );
	deepEqual( Stem("arrantolata"), "arrantol" );
	deepEqual( Stem("arrantolato"), "arrantol" );
	deepEqual( Stem("arrapinavo"), "arrapin" );
	deepEqual( Stem("arrenato"), "arren" );
	deepEqual( Stem("arrende"), "arrend" );
	deepEqual( Stem("arrendere"), "arrend" );
	deepEqual( Stem("arrendersi"), "arrend" );
	deepEqual( Stem("arrendessero"), "arrend" );
	deepEqual( Stem("arrendo"), "arrend" );
	deepEqual( Stem("arrestar"), "arrest" );
	deepEqual( Stem("arrestare"), "arrest" );
	deepEqual( Stem("arrestata"), "arrest" );
	deepEqual( Stem("arrestate"), "arrest" );
	deepEqual( Stem("arrestati"), "arrest" );
	deepEqual( Stem("arrestato"), "arrest" );
	deepEqual( Stem("arrestatori"), "arrest" );
	deepEqual( Stem("arresti"), "arrest" );
	deepEqual( Stem("arrestino"), "arrestin" );
	deepEqual( Stem("arresto"), "arrest" );
	deepEqual( Stem("arretra"), "arretr" );
	deepEqual( Stem("arretramento"), "arretr" );
	deepEqual( Stem("arretrato"), "arretr" );
	deepEqual( Stem("arretrava"), "arretr" );
	deepEqual( Stem("arricchimento"), "arricc" );
	deepEqual( Stem("arricchir"), "arricc" );
	deepEqual( Stem("arricchisce"), "arricc" );
	deepEqual( Stem("arricchito"), "arricc" );
	deepEqual( Stem("arricciar"), "arricc" );
	deepEqual( Stem("arricciare"), "arricc" );
	deepEqual( Stem("arricciati"), "arricc" );
	deepEqual( Stem("arricciato"), "arricc" );
	deepEqual( Stem("arride"), "arrid" );
	deepEqual( Stem("arrigo"), "arrig" );
	deepEqual( Stem("arringa"), "arring" );
	deepEqual( Stem("arringo"), "arring" );
	deepEqual( Stem("arrischia"), "arrisc" );
	deepEqual( Stem("arrischiar"), "arrisc" );
	deepEqual( Stem("arrischiare"), "arrisc" );
	deepEqual( Stem("arrischiarsi"), "arrisc" );
	deepEqual( Stem("arrischiata"), "arrisc" );
	deepEqual( Stem("arrischiati"), "arrisc" );
	deepEqual( Stem("arrischiato"), "arrisc" );
	deepEqual( Stem("arrischiava"), "arrisc" );
	deepEqual( Stem("arriva"), "arriv" );
	deepEqual( Stem("arrivai"), "arriva" );
	deepEqual( Stem("arrivando"), "arriv" );
	deepEqual( Stem("arrivandogli"), "arriv" );
	deepEqual( Stem("arrivano"), "arriv" );
	deepEqual( Stem("arrivar"), "arriv" );
	deepEqual( Stem("arrivarci"), "arriv" );
	deepEqual( Stem("arrivare"), "arriv" );
	deepEqual( Stem("arrivaron"), "arrivaron" );
	deepEqual( Stem("arrivarono"), "arriv" );
	deepEqual( Stem("arrivarsi"), "arriv" );
	deepEqual( Stem("arrivasse"), "arriv" );
	deepEqual( Stem("arrivassero"), "arriv" );
	deepEqual( Stem("arrivata"), "arriv" );
	deepEqual( Stem("arrivate"), "arriv" );
	deepEqual( Stem("arrivati"), "arriv" );
	deepEqual( Stem("arrivato"), "arriv" );
	deepEqual( Stem("arrivatoci"), "arrivatoc" );
	deepEqual( Stem("arrivava"), "arriv" );
	deepEqual( Stem("arrivavan"), "arrivavan" );
	deepEqual( Stem("arrivavano"), "arriv" );
	deepEqual( Stem("arrivederci"), "arrived" );
	deepEqual( Stem("arriverà"), "arriv" );
	deepEqual( Stem("arriveranno"), "arriv" );
	deepEqual( Stem("arriverebbe"), "arriv" );
	deepEqual( Stem("arriverete"), "arriv" );
	deepEqual( Stem("arriverò"), "arriv" );
	deepEqual( Stem("arrivi"), "arriv" );
	deepEqual( Stem("arriviamo"), "arriv" );
	deepEqual( Stem("arrivino"), "arrivin" );
	deepEqual( Stem("arrivo"), "arriv" );
	deepEqual( Stem("arrivò"), "arriv" );
	deepEqual( Stem("arrocca"), "arrocc" );
	deepEqual( Stem("arroccata"), "arrocc" );
	deepEqual( Stem("arrogante"), "arrog" );
	deepEqual( Stem("arroganza"), "arrog" );
	deepEqual( Stem("arrolati"), "arrol" );
	deepEqual( Stem("arrolato"), "arrol" );
	deepEqual( Stem("arrossamento"), "arross" );
	deepEqual( Stem("arrossendo"), "arross" );
	deepEqual( Stem("arrossì"), "arross" );
	deepEqual( Stem("arrossire"), "arross" );
	deepEqual( Stem("arrossirne"), "arross" );
	deepEqual( Stem("arrostire"), "arrost" );
	deepEqual( Stem("arrosto"), "arrost" );
	deepEqual( Stem("arrotar"), "arrot" );
	deepEqual( Stem("arrovellava"), "arrovell" );
	deepEqual( Stem("arrovesciarsi"), "arrovesc" );
	deepEqual( Stem("arrovesciata"), "arrovesc" );
	deepEqual( Stem("arrovesciate"), "arrovesc" );
	deepEqual( Stem("arrovesciato"), "arrovesc" );
	deepEqual( Stem("arruffando"), "arruff" );
	deepEqual( Stem("arruffata"), "arruff" );
	deepEqual( Stem("arruffate"), "arruff" );
	deepEqual( Stem("arruffati"), "arruff" );
	deepEqual( Stem("arruffato"), "arruff" );
	deepEqual( Stem("arruolamento"), "arruol" );
	deepEqual( Stem("arsione"), "arsion" );
	deepEqual( Stem("art"), "art" );
	deepEqual( Stem("artagnan"), "artagnan" );
	deepEqual( Stem("arte"), "arte" );
	deepEqual( Stem("artefice"), "artef" );
	deepEqual( Stem("artefici"), "artef" );
	deepEqual( Stem("artemis"), "artemis" );
	deepEqual( Stem("arteriosclerosi"), "arterioscler" );
	deepEqual( Stem("arti"), "arti" );
	deepEqual( Stem("artica"), "artic" );
	deepEqual( Stem("articola"), "articol" );
	deepEqual( Stem("articolano"), "articol" );
	deepEqual( Stem("articolar"), "articol" );
	deepEqual( Stem("articolata"), "articol" );
	deepEqual( Stem("articolati"), "articol" );
	deepEqual( Stem("articolato"), "articol" );
	deepEqual( Stem("articolazione"), "articol" );
	deepEqual( Stem("articolerà"), "articol" );
	deepEqual( Stem("articoli"), "articol" );
	deepEqual( Stem("articolo"), "articol" );
	deepEqual( Stem("articolò"), "articol" );
	deepEqual( Stem("artificiale"), "artificial" );
	deepEqual( Stem("artifizi"), "artifiz" );
	deepEqual( Stem("artifiziale"), "artifizial" );
	deepEqual( Stem("artifizio"), "artifiz" );
	deepEqual( Stem("artigianato"), "artigian" );
	deepEqual( Stem("artigiane"), "artigian" );
	deepEqual( Stem("artigianello"), "artigianell" );
	deepEqual( Stem("artigiani"), "artigian" );
	deepEqual( Stem("artigiano"), "artig" );
	deepEqual( Stem("artigli"), "artigl" );
	deepEqual( Stem("artiglieria"), "artiglier" );
	deepEqual( Stem("artista"), "artist" );
	deepEqual( Stem("artisti"), "artist" );
	deepEqual( Stem("artistici"), "artist" );
	deepEqual( Stem("artistico"), "artist" );
	deepEqual( Stem("artium"), "artium" );
	deepEqual( Stem("artoni"), "arton" );
	deepEqual( Stem("arturo"), "artur" );
	deepEqual( Stem("arvor"), "arvor" );
	deepEqual( Stem("as"), "as" );
	deepEqual( Stem("ascella"), "ascell" );
	deepEqual( Stem("ascendere"), "ascend" );
	deepEqual( Stem("ascesa"), "asces" );
	deepEqual( Stem("asciugandosi"), "asciug" );
	deepEqual( Stem("asciugare"), "asciug" );
	deepEqual( Stem("asciugata"), "asciug" );
	deepEqual( Stem("asciugate"), "asciug" );
	deepEqual( Stem("asciugava"), "asciug" );
	deepEqual( Stem("asciughi"), "asciug" );
	deepEqual( Stem("asciugò"), "asciug" );
	deepEqual( Stem("asciutta"), "asciutt" );
	deepEqual( Stem("asciutto"), "asciutt" );
	deepEqual( Stem("ascoli"), "ascol" );
	deepEqual( Stem("ascolta"), "ascolt" );
	deepEqual( Stem("ascoltan"), "ascoltan" );
	deepEqual( Stem("ascoltano"), "ascolt" );
	deepEqual( Stem("ascoltanti"), "ascolt" );
	deepEqual( Stem("ascoltar"), "ascolt" );
	deepEqual( Stem("ascoltare"), "ascolt" );
	deepEqual( Stem("ascoltarli"), "ascolt" );
	deepEqual( Stem("ascoltarmi"), "ascolt" );
	deepEqual( Stem("ascoltata"), "ascolt" );
	deepEqual( Stem("ascoltate"), "ascolt" );
	deepEqual( Stem("ascoltatemi"), "ascoltatem" );
	deepEqual( Stem("ascoltati"), "ascolt" );
	deepEqual( Stem("ascoltato"), "ascolt" );
	deepEqual( Stem("ascoltatore"), "ascolt" );
	deepEqual( Stem("ascoltatori"), "ascolt" );
	deepEqual( Stem("ascoltatrice"), "ascolt" );
	deepEqual( Stem("ascoltava"), "ascolt" );
	deepEqual( Stem("ascolti"), "ascolt" );
	deepEqual( Stem("ascoltiamo"), "ascolt" );
	deepEqual( Stem("ascolto"), "ascolt" );
	deepEqual( Stem("ascoltò"), "ascolt" );
	deepEqual( Stem("ascritta"), "ascritt" );
	deepEqual( Stem("asher"), "asher" );
	deepEqual( Stem("asi"), "asi" );
	deepEqual( Stem("asia"), "asi" );
	deepEqual( Stem("asiago"), "asiag" );
	deepEqual( Stem("asiatici"), "asiat" );
	deepEqual( Stem("asili"), "asil" );
	deepEqual( Stem("asilo"), "asil" );
	deepEqual( Stem("asinelli"), "asinell" );
	deepEqual( Stem("asino"), "asin" );
	deepEqual( Stem("aslan"), "aslan" );
	deepEqual( Stem("aspetta"), "aspett" );
	deepEqual( Stem("aspettami"), "aspettam" );
	deepEqual( Stem("aspettan"), "aspettan" );
	deepEqual( Stem("aspettando"), "aspett" );
	deepEqual( Stem("aspettandola"), "aspett" );
	deepEqual( Stem("aspettano"), "aspett" );
	deepEqual( Stem("aspettar"), "aspett" );
	deepEqual( Stem("aspettare"), "aspett" );
	deepEqual( Stem("aspettarla"), "aspett" );
	deepEqual( Stem("aspettarli"), "aspett" );
	deepEqual( Stem("aspettarlo"), "aspett" );
	deepEqual( Stem("aspettarmi"), "aspett" );
	deepEqual( Stem("aspettarsi"), "aspett" );
	deepEqual( Stem("aspettarvi"), "aspett" );
	deepEqual( Stem("aspettasse"), "aspett" );
	deepEqual( Stem("aspettata"), "aspett" );
	deepEqual( Stem("aspettate"), "aspett" );
	deepEqual( Stem("aspettatemi"), "aspettatem" );
	deepEqual( Stem("aspettati"), "aspett" );
	deepEqual( Stem("aspettativa"), "aspett" );
	deepEqual( Stem("aspettative"), "aspett" );
	deepEqual( Stem("aspettato"), "aspett" );
	deepEqual( Stem("aspettava"), "aspett" );
	deepEqual( Stem("aspettavamo"), "aspett" );
	deepEqual( Stem("aspettavan"), "aspettavan" );
	deepEqual( Stem("aspettavano"), "aspett" );
	deepEqual( Stem("aspettavo"), "aspett" );
	deepEqual( Stem("aspettazione"), "aspett" );
	deepEqual( Stem("aspetterà"), "aspett" );
	deepEqual( Stem("aspetteranno"), "aspett" );
	deepEqual( Stem("aspetterebbe"), "aspett" );
	deepEqual( Stem("aspetterò"), "aspett" );
	deepEqual( Stem("aspetti"), "aspett" );
	deepEqual( Stem("aspettiamo"), "aspett" );
	deepEqual( Stem("aspetto"), "aspett" );
	deepEqual( Stem("aspira"), "aspir" );
	deepEqual( Stem("aspirano"), "aspir" );
	deepEqual( Stem("aspiranti"), "aspir" );
	deepEqual( Stem("aspirare"), "aspir" );
	deepEqual( Stem("aspirato"), "aspir" );
	deepEqual( Stem("aspirazioni"), "aspir" );
	deepEqual( Stem("aspo"), "aspo" );
	deepEqual( Stem("aspra"), "aspra" );
	deepEqual( Stem("aspramente"), "aspr" );
	deepEqual( Stem("aspre"), "aspre" );
	deepEqual( Stem("asprilla"), "asprill" );
	deepEqual( Stem("aspro"), "aspro" );
	deepEqual( Stem("ass"), "ass" );
	deepEqual( Stem("assaggi"), "assagg" );
	deepEqual( Stem("assaggiarlo"), "assagg" );
	deepEqual( Stem("assaggiarne"), "assagg" );
	deepEqual( Stem("assaggiate"), "assagg" );
	deepEqual( Stem("assai"), "assa" );
	deepEqual( Stem("assalirono"), "assal" );
	deepEqual( Stem("assalita"), "assal" );
	deepEqual( Stem("assaliti"), "assal" );
	deepEqual( Stem("assalito"), "assal" );
	deepEqual( Stem("assalitori"), "assalitor" );
	deepEqual( Stem("assalti"), "assalt" );
	deepEqual( Stem("assalto"), "assalt" );
	deepEqual( Stem("assaporando"), "assapor" );
	deepEqual( Stem("assaporare"), "assapor" );
	deepEqual( Stem("assaporato"), "assapor" );
	deepEqual( Stem("assassinà"), "assassin" );
	deepEqual( Stem("assassinare"), "assassin" );
	deepEqual( Stem("assassinata"), "assassin" );
	deepEqual( Stem("assassinato"), "assassin" );
	deepEqual( Stem("assassini"), "assassin" );
	deepEqual( Stem("assassinio"), "assassin" );
	deepEqual( Stem("assassino"), "assassin" );
	deepEqual( Stem("asse"), "asse" );
	deepEqual( Stem("assecondare"), "assecond" );
	deepEqual( Stem("assedia"), "assed" );
	deepEqual( Stem("assediata"), "assed" );
	deepEqual( Stem("assediati"), "assed" );
	deepEqual( Stem("assediato"), "assed" );
	deepEqual( Stem("assediava"), "assed" );
	deepEqual( Stem("assediavano"), "assed" );
	deepEqual( Stem("assedio"), "assed" );
	deepEqual( Stem("assegna"), "assegn" );
	deepEqual( Stem("assegnamento"), "assegn" );
	deepEqual( Stem("assegnandone"), "assegn" );
	deepEqual( Stem("assegnar"), "assegn" );
	deepEqual( Stem("assegnare"), "assegn" );
	deepEqual( Stem("assegnarne"), "assegn" );
	deepEqual( Stem("assegnata"), "assegn" );
	deepEqual( Stem("assegnataci"), "assegnatac" );
	deepEqual( Stem("assegnatagli"), "assegnatagl" );
	deepEqual( Stem("assegnate"), "assegn" );
	deepEqual( Stem("assegnati"), "assegn" );
	deepEqual( Stem("assegnatigli"), "assegnatigl" );
	deepEqual( Stem("assegnato"), "assegn" );
	deepEqual( Stem("assegnazioni"), "assegn" );
	deepEqual( Stem("assegni"), "assegn" );
	deepEqual( Stem("assegno"), "assegn" );
	deepEqual( Stem("assegnò"), "assegn" );
	deepEqual( Stem("assembela"), "assembel" );
	deepEqual( Stem("assemble"), "assembl" );
	deepEqual( Stem("assemblea"), "assemble" );
	deepEqual( Stem("assemblee"), "assemble" );
	deepEqual( Stem("assennatezza"), "assennatezz" );
	deepEqual( Stem("assennato"), "assenn" );
	deepEqual( Stem("assenso"), "assens" );
	deepEqual( Stem("assente"), "assent" );
	deepEqual( Stem("assenteismo"), "assent" );
	deepEqual( Stem("assenteista"), "assent" );
	deepEqual( Stem("assenteisti"), "assent" );
	deepEqual( Stem("assenti"), "assent" );
	deepEqual( Stem("assentimur"), "assentimur" );
	deepEqual( Stem("assenza"), "assenz" );
	deepEqual( Stem("assenze"), "assenz" );
	deepEqual( Stem("assenzio"), "assenz" );
	deepEqual( Stem("asserire"), "asser" );
	deepEqual( Stem("asserite"), "asser" );
	deepEqual( Stem("assertore"), "assertor" );
	deepEqual( Stem("assessore"), "assessor" );
	deepEqual( Stem("assessori"), "assessor" );
	deepEqual( Stem("assestamento"), "assest" );
	deepEqual( Stem("assestarci"), "assest" );
	deepEqual( Stem("assestarsi"), "assest" );
	deepEqual( Stem("assestato"), "assest" );
	deepEqual( Stem("assetato"), "asset" );
	deepEqual( Stem("assettandosi"), "assett" );
	deepEqual( Stem("assetti"), "assett" );
	deepEqual( Stem("assetto"), "assett" );
	deepEqual( Stem("assicura"), "assicur" );
	deepEqual( Stem("assicurandosi"), "assicur" );
	deepEqual( Stem("assicurano"), "assicur" );
	deepEqual( Stem("assicurar"), "assicur" );
	deepEqual( Stem("assicurarci"), "assicur" );
	deepEqual( Stem("assicurare"), "assicur" );
	deepEqual( Stem("assicurarle"), "assicur" );
	deepEqual( Stem("assicurarne"), "assicur" );
	deepEqual( Stem("assicurarsene"), "assicur" );
	deepEqual( Stem("assicurasse"), "assicur" );
	deepEqual( Stem("assicurata"), "assicur" );
	deepEqual( Stem("assicurati"), "assicur" );
	deepEqual( Stem("assicurativa"), "assicur" );
	deepEqual( Stem("assicurative"), "assicur" );
	deepEqual( Stem("assicurativi"), "assicur" );
	deepEqual( Stem("assicurato"), "assicur" );
	deepEqual( Stem("assicurava"), "assicur" );
	deepEqual( Stem("assicuravano"), "assicur" );
	deepEqual( Stem("assicuraz"), "assicuraz" );
	deepEqual( Stem("assicurazione"), "assicur" );
	deepEqual( Stem("assicurazioni"), "assicur" );
	deepEqual( Stem("assicuri"), "assicur" );
	deepEqual( Stem("assicurò"), "assicur" );
	deepEqual( Stem("assidua"), "assidu" );
	deepEqual( Stem("assiduamente"), "assidu" );
	deepEqual( Stem("assieme"), "assiem" );
	deepEqual( Stem("assillava"), "assill" );
	deepEqual( Stem("assiri"), "assir" );
	deepEqual( Stem("assise"), "assis" );
	deepEqual( Stem("assisi"), "assis" );
	deepEqual( Stem("assist"), "assist" );
	deepEqual( Stem("assista"), "assist" );
	deepEqual( Stem("assiste"), "assist" );
	deepEqual( Stem("assistendo"), "assist" );
	deepEqual( Stem("assistente"), "assistent" );
	deepEqual( Stem("assistenti"), "assistent" );
	deepEqual( Stem("assistenza"), "assistent" );
	deepEqual( Stem("assistenziale"), "assistenzial" );
	deepEqual( Stem("assistenzialismo"), "assistenzial" );
	deepEqual( Stem("assisterà"), "assist" );
	deepEqual( Stem("assistere"), "assist" );
	deepEqual( Stem("assistesse"), "assistess" );
	deepEqual( Stem("assistette"), "assistett" );
	deepEqual( Stem("assistevano"), "assist" );
	deepEqual( Stem("assistita"), "assist" );
	deepEqual( Stem("assistiti"), "assist" );
	deepEqual( Stem("assistito"), "assist" );
	deepEqual( Stem("assitalia"), "assital" );
	deepEqual( Stem("assito"), "assit" );
	deepEqual( Stem("asso"), "asso" );
	deepEqual( Stem("assocalor"), "assocalor" );
	deepEqual( Stem("associare"), "assoc" );
	deepEqual( Stem("associata"), "assoc" );
	deepEqual( Stem("associate"), "assoc" );
	deepEqual( Stem("associated"), "associated" );
	deepEqual( Stem("associato"), "assoc" );
	deepEqual( Stem("associazione"), "assoc" );
	deepEqual( Stem("associazioni"), "assoc" );
	deepEqual( Stem("associazionismo"), "associazion" );
	deepEqual( Stem("assoenergia"), "assoenerg" );
	deepEqual( Stem("assoggettato"), "assoggett" );
	deepEqual( Stem("assoggettavano"), "assoggett" );
	deepEqual( Stem("assolda"), "assold" );
	deepEqual( Stem("assoldati"), "assold" );
	deepEqual( Stem("assoldato"), "assold" );
	deepEqual( Stem("assolti"), "assolt" );
	deepEqual( Stem("assolto"), "assolt" );
	deepEqual( Stem("assoluta"), "assol" );
	deepEqual( Stem("assolutamente"), "assolut" );
	deepEqual( Stem("assolute"), "assol" );
	deepEqual( Stem("assoluti"), "assol" );
	deepEqual( Stem("assolutizzante"), "assolutizz" );
	deepEqual( Stem("assoluto"), "assol" );
	deepEqual( Stem("assolutoria"), "assolutor" );
	deepEqual( Stem("assoluzione"), "assolu" );
	deepEqual( Stem("assolvere"), "assolv" );
	deepEqual( Stem("assomiglia"), "assomigl" );
	deepEqual( Stem("assomigliano"), "assomigl" );
	deepEqual( Stem("assomigliarsi"), "assomigl" );
	deepEqual( Stem("assonautiche"), "assonaut" );
	deepEqual( Stem("assopegno"), "assopegn" );
	deepEqual( Stem("assopirono"), "assop" );
	deepEqual( Stem("assopita"), "assop" );
	deepEqual( Stem("assorbimento"), "assorb" );
	deepEqual( Stem("assorbire"), "assorb" );
	deepEqual( Stem("assorbito"), "assorb" );
	deepEqual( Stem("assordante"), "assord" );
	deepEqual( Stem("assortiti"), "assort" );
	deepEqual( Stem("assorto"), "assort" );
	deepEqual( Stem("assottigliar"), "assottigl" );
	deepEqual( Stem("assottigliato"), "assottigl" );
	deepEqual( Stem("assuma"), "assum" );
	deepEqual( Stem("assumano"), "assum" );
	deepEqual( Stem("assume"), "assum" );
	deepEqual( Stem("assumerà"), "assum" );
	deepEqual( Stem("assumere"), "assum" );
	deepEqual( Stem("assumesse"), "assumess" );
	deepEqual( Stem("assumeva"), "assum" );
	deepEqual( Stem("assumono"), "assum" );
	deepEqual( Stem("assunse"), "assuns" );
	deepEqual( Stem("assunsero"), "assunser" );
	deepEqual( Stem("assunta"), "assunt" );
	deepEqual( Stem("assunte"), "assunt" );
	deepEqual( Stem("assunti"), "assunt" );
	deepEqual( Stem("assunto"), "assunt" );
	deepEqual( Stem("assunzione"), "assunzion" );
	deepEqual( Stem("assunzioni"), "assunzion" );
	deepEqual( Stem("assurdo"), "assurd" );
	deepEqual( Stem("asta"), "asta" );
	deepEqual( Stem("astanti"), "astant" );
	deepEqual( Stem("aste"), "aste" );
	deepEqual( Stem("astenere"), "asten" );
	deepEqual( Stem("astenesse"), "asteness" );
	deepEqual( Stem("astenevano"), "asten" );
	deepEqual( Stem("astensione"), "astension" );
	deepEqual( Stem("astenuta"), "asten" );
	deepEqual( Stem("astenuti"), "asten" );
	deepEqual( Stem("aster"), "aster" );
	deepEqual( Stem("asterischi"), "asterisc" );
	deepEqual( Stem("asterrà"), "asterr" );
	deepEqual( Stem("asterràdal"), "asterràdal" );
	deepEqual( Stem("asthom"), "asthom" );
	deepEqual( Stem("asti"), "asti" );
	deepEqual( Stem("astigiano"), "astig" );
	deepEqual( Stem("astina"), "astin" );
	deepEqual( Stem("astinenza"), "astinent" );
	deepEqual( Stem("astio"), "asti" );
	deepEqual( Stem("astioso"), "astios" );
	deepEqual( Stem("astragalo"), "astragal" );
	deepEqual( Stem("astratto"), "astratt" );
	deepEqual( Stem("astrazione"), "astrazion" );
	deepEqual( Stem("astrea"), "astre" );
	deepEqual( Stem("astri"), "astri" );
	deepEqual( Stem("astro"), "astro" );
	deepEqual( Stem("astrologi"), "astrolog" );
	deepEqual( Stem("astrologia"), "astrolog" );
	deepEqual( Stem("astuti"), "astut" );
	deepEqual( Stem("astuzia"), "astuz" );
	deepEqual( Stem("astuzie"), "astuz" );
	deepEqual( Stem("at"), "at" );
	deepEqual( Stem("ata"), "ata" );
	deepEqual( Stem("atalanta"), "atalant" );
	deepEqual( Stem("atanasio"), "atanas" );
	deepEqual( Stem("atene"), "aten" );
	deepEqual( Stem("ateneo"), "atene" );
	deepEqual( Stem("ati"), "ati" );
	deepEqual( Stem("atl"), "atl" );
	deepEqual( Stem("atlanta"), "atlant" );
	deepEqual( Stem("atlante"), "atlant" );
	deepEqual( Stem("atlantica"), "atlant" );
	deepEqual( Stem("atleta"), "atlet" );
	deepEqual( Stem("atleti"), "atlet" );
	deepEqual( Stem("atletica"), "atlet" );
	deepEqual( Stem("atletico"), "atlet" );
	deepEqual( Stem("atm"), "atm" );
	deepEqual( Stem("atmosfera"), "atmosfer" );
	deepEqual( Stem("atomica"), "atom" );
	deepEqual( Stem("atonica"), "aton" );
	deepEqual( Stem("atou"), "atou" );
	deepEqual( Stem("atp"), "atp" );
	deepEqual( Stem("atqui"), "atqui" );
	deepEqual( Stem("atrio"), "atri" );
	deepEqual( Stem("atroce"), "atroc" );
	deepEqual( Stem("atroci"), "atroc" );
	deepEqual( Stem("atrocissimi"), "atrocissim" );
	deepEqual( Stem("atrocità"), "atroc" );
	deepEqual( Stem("atta"), "atta" );
	deepEqual( Stem("attacante"), "attac" );
	deepEqual( Stem("attacca"), "attacc" );
	deepEqual( Stem("attaccamento"), "attacc" );
	deepEqual( Stem("attaccando"), "attacc" );
	deepEqual( Stem("attaccandoci"), "attacc" );
	deepEqual( Stem("attaccandosi"), "attacc" );
	deepEqual( Stem("attaccante"), "attacc" );
	deepEqual( Stem("attaccanti"), "attacc" );
	deepEqual( Stem("attaccar"), "attacc" );
	deepEqual( Stem("attaccarci"), "attacc" );
	deepEqual( Stem("attaccare"), "attacc" );
	deepEqual( Stem("attaccarlo"), "attacc" );
	deepEqual( Stem("attaccarmi"), "attacc" );
	deepEqual( Stem("attaccarono"), "attacc" );
	deepEqual( Stem("attaccarsi"), "attacc" );
	deepEqual( Stem("attaccasse"), "attacc" );
	deepEqual( Stem("attaccata"), "attacc" );
	deepEqual( Stem("attaccate"), "attacc" );
	deepEqual( Stem("attaccati"), "attacc" );
	deepEqual( Stem("attaccato"), "attacc" );
	deepEqual( Stem("attaccava"), "attacc" );
	deepEqual( Stem("attacchi"), "attacc" );
	deepEqual( Stem("attacco"), "attacc" );
	deepEqual( Stem("attaccò"), "attacc" );
	deepEqual( Stem("attarda"), "attard" );
	deepEqual( Stem("atte"), "atte" );
	deepEqual( Stem("attecchire"), "attecc" );
	deepEqual( Stem("atteggiamenti"), "attegg" );
	deepEqual( Stem("atteggiamento"), "attegg" );
	deepEqual( Stem("atteggiandosi"), "attegg" );
	deepEqual( Stem("atteggiato"), "attegg" );
	deepEqual( Stem("atteggiò"), "attegg" );
	deepEqual( Stem("attempata"), "attemp" );
	deepEqual( Stem("attempate"), "attemp" );
	deepEqual( Stem("attendati"), "attend" );
	deepEqual( Stem("attende"), "attend" );
	deepEqual( Stem("attendendo"), "attend" );
	deepEqual( Stem("attendere"), "attend" );
	deepEqual( Stem("attenderla"), "attend" );
	deepEqual( Stem("attenderli"), "attend" );
	deepEqual( Stem("attenderlo"), "attend" );
	deepEqual( Stem("attendessero"), "attend" );
	deepEqual( Stem("attendeva"), "attend" );
	deepEqual( Stem("attendevamo"), "attend" );
	deepEqual( Stem("attendevano"), "attend" );
	deepEqual( Stem("attendiamo"), "attend" );
	deepEqual( Stem("attendibile"), "attend" );
	deepEqual( Stem("attendibili"), "attend" );
	deepEqual( Stem("attendono"), "attend" );
	deepEqual( Stem("attenersi"), "atten" );
	deepEqual( Stem("attenta"), "attent" );
	deepEqual( Stem("attentamente"), "attent" );
	deepEqual( Stem("attentar"), "attent" );
	deepEqual( Stem("attentasse"), "attent" );
	deepEqual( Stem("attentati"), "attent" );
	deepEqual( Stem("attentato"), "attent" );
	deepEqual( Stem("attentatore"), "attent" );
	deepEqual( Stem("attentava"), "attent" );
	deepEqual( Stem("attente"), "attent" );
	deepEqual( Stem("attenti"), "attent" );
	deepEqual( Stem("attento"), "attent" );
	deepEqual( Stem("attenuare"), "attenu" );
	deepEqual( Stem("attenuato"), "attenu" );
	deepEqual( Stem("attenzion"), "attenzion" );
	deepEqual( Stem("attenzione"), "attenzion" );
	deepEqual( Stem("attenzioni"), "attenzion" );
	deepEqual( Stem("atterra"), "atterr" );
	deepEqual( Stem("atterraggio"), "atterragg" );
	deepEqual( Stem("atterramento"), "atterr" );
	deepEqual( Stem("atterrano"), "atterr" );
	deepEqual( Stem("atterrata"), "atterr" );
	deepEqual( Stem("atterrato"), "atterr" );
	deepEqual( Stem("atterrava"), "atterr" );
	deepEqual( Stem("atterrerà"), "atterr" );
	deepEqual( Stem("atterrire"), "atterr" );
	deepEqual( Stem("atterrita"), "atterr" );
	deepEqual( Stem("atterrito"), "atterr" );
	deepEqual( Stem("atterriva"), "atterr" );
	deepEqual( Stem("attesa"), "attes" );
	deepEqual( Stem("attese"), "attes" );
	deepEqual( Stem("attesi"), "attes" );
	deepEqual( Stem("attesissimo"), "attesissim" );
	deepEqual( Stem("atteso"), "attes" );
	deepEqual( Stem("attesoché"), "attesoc" );
	deepEqual( Stem("attesta"), "attest" );
	deepEqual( Stem("attestandosi"), "attest" );
	deepEqual( Stem("attestar"), "attest" );
	deepEqual( Stem("attestare"), "attest" );
	deepEqual( Stem("attestarsi"), "attest" );
	deepEqual( Stem("attestata"), "attest" );
	deepEqual( Stem("attestate"), "attest" );
	deepEqual( Stem("attestati"), "attest" );
	deepEqual( Stem("attestato"), "attest" );
	deepEqual( Stem("attestava"), "attest" );
	deepEqual( Stem("attestazione"), "attest" );
	deepEqual( Stem("attesti"), "attest" );
	deepEqual( Stem("atti"), "atti" );
	deepEqual( Stem("attiene"), "attien" );
	deepEqual( Stem("attiguo"), "attigu" );
	deepEqual( Stem("attilio"), "attil" );
	deepEqual( Stem("attillata"), "attill" );
	deepEqual( Stem("attillati"), "attill" );
	deepEqual( Stem("attillatissimi"), "attillatissim" );
	deepEqual( Stem("attimi"), "attim" );
	deepEqual( Stem("attimo"), "attim" );
	deepEqual( Stem("attinenze"), "attinent" );
	deepEqual( Stem("attingendo"), "atting" );
	deepEqual( Stem("attingere"), "atting" );
	deepEqual( Stem("attinta"), "attint" );
	deepEqual( Stem("attinte"), "attint" );
	deepEqual( Stem("attioni"), "attion" );
	deepEqual( Stem("attira"), "attir" );
	deepEqual( Stem("attirare"), "attir" );
	deepEqual( Stem("attirarla"), "attir" );
	deepEqual( Stem("attirarne"), "attir" );
	deepEqual( Stem("attirarsi"), "attir" );
	deepEqual( Stem("attirata"), "attir" );
	deepEqual( Stem("attirate"), "attir" );
	deepEqual( Stem("attirati"), "attir" );
	deepEqual( Stem("attirato"), "attir" );
	deepEqual( Stem("attirava"), "attir" );
	deepEqual( Stem("attirerebbe"), "attir" );
	deepEqual( Stem("attiriamo"), "attir" );
	deepEqual( Stem("attirò"), "attir" );
	deepEqual( Stem("attitudine"), "attitudin" );
	deepEqual( Stem("attiv"), "attiv" );
	deepEqual( Stem("attiva"), "attiv" );
	deepEqual( Stem("attivare"), "attiv" );
	deepEqual( Stem("attive"), "attiv" );
	deepEqual( Stem("attivi"), "attiv" );
	deepEqual( Stem("attivita"), "attiv" );
	deepEqual( Stem("attività"), "attiv" );
	deepEqual( Stem("attivo"), "attiv" );
	deepEqual( Stem("atto"), "atto" );
	deepEqual( Stem("attonita"), "atton" );
	deepEqual( Stem("attonito"), "atton" );
	deepEqual( Stem("attore"), "attor" );
	deepEqual( Stem("attori"), "attor" );
	deepEqual( Stem("attorniato"), "attorn" );
	deepEqual( Stem("attorno"), "attorn" );
	deepEqual( Stem("attortigliata"), "attortigl" );
	deepEqual( Stem("attraente"), "attraent" );
	deepEqual( Stem("attraeva"), "attra" );
	deepEqual( Stem("attrasse"), "attrass" );
	deepEqual( Stem("attrattiva"), "attratt" );
	deepEqual( Stem("attratto"), "attratt" );
	deepEqual( Stem("attraversa"), "attravers" );
	deepEqual( Stem("attraversando"), "attravers" );
	deepEqual( Stem("attraversar"), "attravers" );
	deepEqual( Stem("attraversare"), "attravers" );
	deepEqual( Stem("attraversarli"), "attravers" );
	deepEqual( Stem("attraversarlo"), "attravers" );
	deepEqual( Stem("attraversaron"), "attraversaron" );
	deepEqual( Stem("attraversata"), "attravers" );
	deepEqual( Stem("attraversati"), "attravers" );
	deepEqual( Stem("attraversato"), "attravers" );
	deepEqual( Stem("attraversatolo"), "attraversatol" );
	deepEqual( Stem("attraversava"), "attravers" );
	deepEqual( Stem("attraverserà"), "attravers" );
	deepEqual( Stem("attraversino"), "attraversin" );
	deepEqual( Stem("attraverso"), "attravers" );
	deepEqual( Stem("attraversò"), "attravers" );
	deepEqual( Stem("attrezzandosi"), "attrezz" );
	deepEqual( Stem("attrezzata"), "attrezz" );
	deepEqual( Stem("attrezzate"), "attrezz" );
	deepEqual( Stem("attrezzato"), "attrezz" );
	deepEqual( Stem("attrezzature"), "attrezzatur" );
	deepEqual( Stem("attrezzi"), "attrezz" );
	deepEqual( Stem("attribuendo"), "attribu" );
	deepEqual( Stem("attribuibile"), "attribu" );
	deepEqual( Stem("attribuir"), "attribu" );
	deepEqual( Stem("attribuire"), "attribu" );
	deepEqual( Stem("attribuirla"), "attribu" );
	deepEqual( Stem("attribuirlo"), "attribu" );
	deepEqual( Stem("attribuirne"), "attribu" );
	deepEqual( Stem("attribuisce"), "attribu" );
	deepEqual( Stem("attribuiscono"), "attribu" );
	deepEqual( Stem("attribuisse"), "attribuiss" );
	deepEqual( Stem("attribuita"), "attribu" );
	deepEqual( Stem("attribuitami"), "attribuitam" );
	deepEqual( Stem("attribuite"), "attribu" );
	deepEqual( Stem("attribuiti"), "attribu" );
	deepEqual( Stem("attribuito"), "attribu" );
	deepEqual( Stem("attribuiva"), "attribu" );
	deepEqual( Stem("attribuivano"), "attribu" );
	deepEqual( Stem("attribuzione"), "attribu" );
	deepEqual( Stem("attribuzioni"), "attribu" );
	deepEqual( Stem("attrice"), "attric" );
	deepEqual( Stem("attuale"), "attual" );
	deepEqual( Stem("attualente"), "attualent" );
	deepEqual( Stem("attuali"), "attual" );
	deepEqual( Stem("attualita"), "attual" );
	deepEqual( Stem("attualità"), "attual" );
	deepEqual( Stem("attualmente"), "attual" );
	deepEqual( Stem("attuando"), "attu" );
	deepEqual( Stem("attuare"), "attu" );
	deepEqual( Stem("attuarlo"), "attu" );
	deepEqual( Stem("attuata"), "attu" );
	deepEqual( Stem("attuati"), "attu" );
	deepEqual( Stem("attuato"), "attu" );
	deepEqual( Stem("attuazione"), "attuazion" );
	deepEqual( Stem("atzori"), "atzor" );
	deepEqual( Stem("auckland"), "auckland" );
	deepEqual( Stem("audacia"), "audac" );
	deepEqual( Stem("audio"), "aud" );
	deepEqual( Stem("audiovisivo"), "audiovis" );
	deepEqual( Stem("auditor"), "auditor" );
	deepEqual( Stem("auditore"), "auditor" );
	deepEqual( Stem("audizione"), "audizion" );
	deepEqual( Stem("auferatis"), "auferatis" );
	deepEqual( Stem("aug"), "aug" );
	deepEqual( Stem("auge"), "aug" );
	deepEqual( Stem("augello"), "augell" );
	deepEqual( Stem("augura"), "augur" );
	deepEqual( Stem("augurarono"), "augur" );
	deepEqual( Stem("augurata"), "augur" );
	deepEqual( Stem("augurate"), "augur" );
	deepEqual( Stem("augurato"), "augur" );
	deepEqual( Stem("auguri"), "augur" );
	deepEqual( Stem("augùri"), "augùr" );
	deepEqual( Stem("auguriamo"), "augur" );
	deepEqual( Stem("augurio"), "augur" );
	deepEqual( Stem("auguro"), "augur" );
	deepEqual( Stem("augusta"), "august" );
	deepEqual( Stem("auguste"), "august" );
	deepEqual( Stem("augusto"), "august" );
	deepEqual( Stem("aula"), "aul" );
	deepEqual( Stem("auletta"), "aulett" );
	deepEqual( Stem("aumentabili"), "aument" );
	deepEqual( Stem("aumentando"), "aument" );
	deepEqual( Stem("aumentare"), "aument" );
	deepEqual( Stem("aumentata"), "aument" );
	deepEqual( Stem("aumentate"), "aument" );
	deepEqual( Stem("aumentati"), "aument" );
	deepEqual( Stem("aumentato"), "aument" );
	deepEqual( Stem("aumenterà"), "aument" );
	deepEqual( Stem("aumenti"), "aument" );
	deepEqual( Stem("aumentino"), "aumentin" );
	deepEqual( Stem("aumento"), "aument" );
	deepEqual( Stem("aurelio"), "aurel" );
	deepEqual( Stem("aureo"), "aure" );
	deepEqual( Stem("aureola"), "aureol" );
	deepEqual( Stem("auricolare"), "auricol" );
	deepEqual( Stem("auriol"), "auriol" );
	deepEqual( Stem("aurora"), "auror" );
	deepEqual( Stem("aus"), "aus" );
	deepEqual( Stem("auschwitz"), "auschwitz" );
	deepEqual( Stem("aushwitz"), "aushwitz" );
	deepEqual( Stem("ausilia"), "ausil" );
	deepEqual( Stem("ausiliare"), "ausil" );
	deepEqual( Stem("ausiliari"), "ausiliar" );
	deepEqual( Stem("ausiliarie"), "ausiliar" );
	deepEqual( Stem("ausiliario"), "ausiliar" );
	deepEqual( Stem("auspica"), "auspic" );
	deepEqual( Stem("auspicabile"), "auspic" );
	deepEqual( Stem("auspicato"), "auspic" );
	deepEqual( Stem("auspicava"), "auspic" );
	deepEqual( Stem("auspicio"), "auspic" );
	deepEqual( Stem("austera"), "auster" );
	deepEqual( Stem("austero"), "auster" );
	deepEqual( Stem("australia"), "austral" );
	deepEqual( Stem("australian"), "australian" );
	deepEqual( Stem("australiana"), "australian" );
	deepEqual( Stem("australiane"), "australian" );
	deepEqual( Stem("australiani"), "australian" );
	deepEqual( Stem("australiano"), "austral" );
	deepEqual( Stem("austria"), "austr" );
	deepEqual( Stem("austriaca"), "austriac" );
	deepEqual( Stem("austriaci"), "austriac" );
	deepEqual( Stem("austriaco"), "austriac" );
	deepEqual( Stem("aut"), "aut" );
	deepEqual( Stem("autentica"), "autent" );
	deepEqual( Stem("autenticamente"), "autent" );
	deepEqual( Stem("autentici"), "autent" );
	deepEqual( Stem("autenticità"), "autent" );
	deepEqual( Stem("autentico"), "autent" );
	deepEqual( Stem("authority"), "authority" );
	deepEqual( Stem("autista"), "autist" );
	deepEqual( Stem("autisti"), "autist" );
	deepEqual( Stem("auto"), "aut" );
	deepEqual( Stem("autobianchi"), "autobianc" );
	deepEqual( Stem("autobotte"), "autobott" );
	deepEqual( Stem("autobus"), "autobus" );
	deepEqual( Stem("autocandidatura"), "autocandidatur" );
	deepEqual( Stem("autocarri"), "autocarr" );
	deepEqual( Stem("autocarro"), "autocarr" );
	deepEqual( Stem("autocelebrazione"), "autocelebr" );
	deepEqual( Stem("autocertificato"), "autocertific" );
	deepEqual( Stem("autodissoluzione"), "autodissolu" );
	deepEqual( Stem("autodistruttiva"), "autodistrutt" );
	deepEqual( Stem("autodistruzione"), "autodistru" );
	deepEqual( Stem("autoferrotranvieri"), "autoferrotranvier" );
	deepEqual( Stem("autogol"), "autogol" );
	deepEqual( Stem("autografo"), "autograf" );
	deepEqual( Stem("automaticamente"), "automat" );
	deepEqual( Stem("automatici"), "automat" );
	deepEqual( Stem("automatizzati"), "automatizz" );
	deepEqual( Stem("automatizzato"), "automatizz" );
	deepEqual( Stem("automazione"), "autom" );
	deepEqual( Stem("automobile"), "automobil" );
	deepEqual( Stem("automobili"), "automobil" );
	deepEqual( Stem("automobilismo"), "automobil" );
	deepEqual( Stem("automobilista"), "automobil" );
	deepEqual( Stem("automobilisti"), "automobil" );
	deepEqual( Stem("automobilistica"), "automobilist" );
	deepEqual( Stem("automobilistiche"), "automobilist" );
	deepEqual( Stem("automobilistico"), "automobilist" );
	deepEqual( Stem("automoveis"), "automoveis" );
	deepEqual( Stem("autonoma"), "autonom" );
	deepEqual( Stem("autonomamente"), "autonom" );
	deepEqual( Stem("autonome"), "autonom" );
	deepEqual( Stem("autonomi"), "autonom" );
	deepEqual( Stem("autonomia"), "autonom" );
	deepEqual( Stem("autonomie"), "autonom" );
	deepEqual( Stem("autonomista"), "autonom" );
	deepEqual( Stem("autonomistà"), "autonom" );
	deepEqual( Stem("autonomisti"), "autonom" );
	deepEqual( Stem("autonomo"), "autonom" );
	deepEqual( Stem("autopergamena"), "autopergamen" );
	deepEqual( Stem("autoproclamatasi"), "autoproclamatas" );
	deepEqual( Stem("autoproduttori"), "autoproduttor" );
	deepEqual( Stem("autopsia"), "autops" );
	deepEqual( Stem("autoptico"), "autopt" );
	deepEqual( Stem("autor"), "autor" );
	deepEqual( Stem("autore"), "autor" );
	deepEqual( Stem("autoregolamentazione"), "autoregolament" );
	deepEqual( Stem("autorete"), "autor" );
	deepEqual( Stem("autorevole"), "autorevol" );
	deepEqual( Stem("autorevolezza"), "autorevolezz" );
	deepEqual( Stem("autorevoli"), "autorevol" );
	deepEqual( Stem("autori"), "autor" );
	deepEqual( Stem("autorimessa"), "autorimess" );
	deepEqual( Stem("autorita"), "autor" );
	deepEqual( Stem("autorità"), "autor" );
	deepEqual( Stem("autoritaria"), "autoritar" );
	deepEqual( Stem("autoritario"), "autoritar" );
	deepEqual( Stem("autorizzata"), "autorizz" );
	deepEqual( Stem("autorizzativo"), "autorizz" );
	deepEqual( Stem("autorizzato"), "autorizz" );
	deepEqual( Stem("autorizzatorie"), "autorizzator" );
	deepEqual( Stem("autorizzazione"), "autorizz" );
	deepEqual( Stem("autorizzazioni"), "autorizz" );
	deepEqual( Stem("autoscuole"), "autoscuol" );
	deepEqual( Stem("autosospesa"), "autosospes" );
	deepEqual( Stem("autostr"), "autostr" );
	deepEqual( Stem("autostrada"), "autostrad" );
	deepEqual( Stem("autostradale"), "autostradal" );
	deepEqual( Stem("autostradali"), "autostradal" );
	deepEqual( Stem("autostrade"), "autostrad" );
	deepEqual( Stem("autoveicoli"), "autoveicol" );
	deepEqual( Stem("autovettura"), "autovettur" );
	deepEqual( Stem("autovetture"), "autovettur" );
	deepEqual( Stem("autrice"), "autric" );
	deepEqual( Stem("autunnale"), "autunnal" );
	deepEqual( Stem("autunnali"), "autunnal" );
	deepEqual( Stem("autunno"), "autunn" );
	deepEqual( Stem("auuenuto"), "auuen" );
	deepEqual( Stem("auxerre"), "auxerr" );
	deepEqual( Stem("av"), "av" );
	deepEqual( Stem("avallato"), "avall" );
	deepEqual( Stem("avana"), "avan" );
	deepEqual( Stem("avances"), "avances" );
	deepEqual( Stem("avanguardia"), "avanguard" );
	deepEqual( Stem("avanti"), "avant" );
	deepEqual( Stem("avanza"), "avanz" );
	deepEqual( Stem("avanzando"), "avanz" );
	deepEqual( Stem("avanzandosi"), "avanz" );
	deepEqual( Stem("avanzare"), "avanz" );
	deepEqual( Stem("avanzarsi"), "avanz" );
	deepEqual( Stem("avanzata"), "avanz" );
	deepEqual( Stem("avanzate"), "avanz" );
	deepEqual( Stem("avanzati"), "avanz" );
	deepEqual( Stem("avanzato"), "avanz" );
	deepEqual( Stem("avanzava"), "avanz" );
	deepEqual( Stem("avanzerà"), "avanz" );
	deepEqual( Stem("avanzerebbe"), "avanz" );
	deepEqual( Stem("avanzi"), "avanz" );
	deepEqual( Stem("avanzini"), "avanzin" );
	deepEqual( Stem("avanzo"), "avanz" );
	deepEqual( Stem("avanzò"), "avanz" );
	deepEqual( Stem("avara"), "avar" );
	deepEqual( Stem("avaria"), "avar" );
	deepEqual( Stem("avarizia"), "avariz" );
	deepEqual( Stem("avaro"), "avar" );
	deepEqual( Stem("ave"), "ave" );
	deepEqual( Stem("avea"), "ave" );
	deepEqual( Stem("avean"), "avean" );
	deepEqual( Stem("avellino"), "avellin" );
	deepEqual( Stem("avendo"), "avend" );
	deepEqual( Stem("avendocelo"), "avendocel" );
	deepEqual( Stem("avendola"), "avendol" );
	deepEqual( Stem("avendolo"), "avendol" );
	deepEqual( Stem("avendone"), "avendon" );
	deepEqual( Stem("avene"), "aven" );
	deepEqual( Stem("aventi"), "avent" );
	deepEqual( Stem("aver"), "aver" );
	deepEqual( Stem("averci"), "averc" );
	deepEqual( Stem("avere"), "aver" );
	deepEqual( Stem("avergli"), "avergl" );
	deepEqual( Stem("avergliene"), "averglien" );
	deepEqual( Stem("averla"), "averl" );
	deepEqual( Stem("averle"), "averl" );
	deepEqual( Stem("averli"), "averl" );
	deepEqual( Stem("averlo"), "averl" );
	deepEqual( Stem("avermi"), "averm" );
	deepEqual( Stem("avermo"), "averm" );
	deepEqual( Stem("averne"), "avern" );
	deepEqual( Stem("averselo"), "aversel" );
	deepEqual( Stem("avervi"), "averv" );
	deepEqual( Stem("avesse"), "avess" );
	deepEqual( Stem("avesser"), "avesser" );
	deepEqual( Stem("avessero"), "avesser" );
	deepEqual( Stem("avessi"), "avess" );
	deepEqual( Stem("avessimo"), "avessim" );
	deepEqual( Stem("aveste"), "avest" );
	deepEqual( Stem("avete"), "avet" );
	deepEqual( Stem("aveva"), "avev" );
	deepEqual( Stem("avevam"), "avevam" );
	deepEqual( Stem("avevamo"), "avevam" );
	deepEqual( Stem("avevan"), "avevan" );
	deepEqual( Stem("avevano"), "avev" );
	deepEqual( Stem("avevate"), "avev" );
	deepEqual( Stem("avevi"), "avev" );
	deepEqual( Stem("avevo"), "avev" );
	deepEqual( Stem("avezzano"), "avezz" );
	deepEqual( Stem("avi"), "avi" );
	deepEqual( Stem("aviazione"), "aviazion" );
	deepEqual( Stem("avidamente"), "avid" );
	deepEqual( Stem("avidi"), "avid" );
	deepEqual( Stem("avidità"), "avid" );
	deepEqual( Stem("avignone"), "avignon" );
	deepEqual( Stem("avir"), "avir" );
	deepEqual( Stem("avis"), "avis" );
	deepEqual( Stem("aviv"), "aviv" );
	deepEqual( Stem("avo"), "avo" );
	deepEqual( Stem("avocando"), "avoc" );
	deepEqual( Stem("avola"), "avol" );
	deepEqual( Stem("avoltoi"), "avolto" );
	deepEqual( Stem("avrà"), "avrà" );
	deepEqual( Stem("avrai"), "avra" );
	deepEqual( Stem("avràil"), "avràil" );
	deepEqual( Stem("avranno"), "avrann" );
	deepEqual( Stem("avrebbe"), "avrebb" );
	deepEqual( Stem("avrebber"), "avrebber" );
	deepEqual( Stem("avrebbero"), "avrebber" );
	deepEqual( Stem("avrei"), "avre" );
	deepEqual( Stem("avrem"), "avrem" );
	deepEqual( Stem("avremmo"), "avremm" );
	deepEqual( Stem("avremo"), "avrem" );
	deepEqual( Stem("avreste"), "avrest" );
	deepEqual( Stem("avresti"), "avrest" );
	deepEqual( Stem("avrete"), "avret" );
	deepEqual( Stem("avrò"), "avrò" );
	deepEqual( Stem("avturkhanov"), "avturkhanov" );
	deepEqual( Stem("avuta"), "avut" );
	deepEqual( Stem("avute"), "avut" );
	deepEqual( Stem("avuti"), "avut" );
	deepEqual( Stem("avuto"), "avut" );
	deepEqual( Stem("avutolo"), "avutol" );
	deepEqual( Stem("avv"), "avv" );
	deepEqual( Stem("avvale"), "avval" );
	deepEqual( Stem("avvalersi"), "avval" );
	deepEqual( Stem("avvantaggerebbero"), "avvantagg" );
	deepEqual( Stem("avvantaggiati"), "avvantagg" );
	deepEqual( Stem("avveda"), "avved" );
	deepEqual( Stem("avvede"), "avved" );
	deepEqual( Stem("avvedendosi"), "avved" );
	deepEqual( Stem("avvedersene"), "avved" );
	deepEqual( Stem("avvedesse"), "avvedess" );
	deepEqual( Stem("avvedeva"), "avved" );
	deepEqual( Stem("avvedutezza"), "avvedutezz" );
	deepEqual( Stem("avveduto"), "avved" );
	deepEqual( Stem("avvelenata"), "avvelen" );
	deepEqual( Stem("avvelenava"), "avvelen" );
	deepEqual( Stem("avvenendo"), "avven" );
	deepEqual( Stem("avvenenza"), "avvenent" );
	deepEqual( Stem("avvenga"), "avveng" );
	deepEqual( Stem("avvenimenti"), "avven" );
	deepEqual( Stem("avvenimento"), "avven" );
	deepEqual( Stem("avvenire"), "avven" );
	deepEqual( Stem("avvenirè"), "avvenir" );
	deepEqual( Stem("avvenisse"), "avveniss" );
	deepEqual( Stem("avveniva"), "avven" );
	deepEqual( Stem("avvenne"), "avvenn" );
	deepEqual( Stem("avventa"), "avvent" );
	deepEqual( Stem("avventarono"), "avvent" );
	deepEqual( Stem("avventarsi"), "avvent" );
	deepEqual( Stem("avventò"), "avvent" );
	deepEqual( Stem("avventore"), "avventor" );
	deepEqual( Stem("avventori"), "avventor" );
	deepEqual( Stem("avventura"), "avventur" );
	deepEqual( Stem("avventure"), "avventur" );
	deepEqual( Stem("avventuriera"), "avventurier" );
	deepEqual( Stem("avventurieri"), "avventurier" );
	deepEqual( Stem("avventurosa"), "avventur" );
	deepEqual( Stem("avvenuta"), "avven" );
	deepEqual( Stem("avvenute"), "avven" );
	deepEqual( Stem("avvenuti"), "avven" );
	deepEqual( Stem("avvenuto"), "avven" );
	deepEqual( Stem("avverata"), "avver" );
	deepEqual( Stem("avverate"), "avver" );
	deepEqual( Stem("avveri"), "avver" );
	deepEqual( Stem("avverrà"), "avverr" );
	deepEqual( Stem("avversa"), "avvers" );
	deepEqual( Stem("avversari"), "avversar" );
	deepEqual( Stem("avversaria"), "avversar" );
	deepEqual( Stem("avversarie"), "avversar" );
	deepEqual( Stem("avversario"), "avversar" );
	deepEqual( Stem("avversati"), "avvers" );
	deepEqual( Stem("avverse"), "avvers" );
	deepEqual( Stem("avversione"), "avversion" );
	deepEqual( Stem("avversità"), "avvers" );
	deepEqual( Stem("avverso"), "avvers" );
	deepEqual( Stem("avverta"), "avvert" );
	deepEqual( Stem("avverte"), "avvert" );
	deepEqual( Stem("avvertendo"), "avvert" );
	deepEqual( Stem("avvertì"), "avvert" );
	deepEqual( Stem("avvertimenti"), "avvert" );
	deepEqual( Stem("avvertimento"), "avvert" );
	deepEqual( Stem("avvertio"), "avvert" );
	deepEqual( Stem("avvertir"), "avvert" );
	deepEqual( Stem("avvertire"), "avvert" );
	deepEqual( Stem("avvertirla"), "avvert" );
	deepEqual( Stem("avvertirlo"), "avvert" );
	deepEqual( Stem("avvertirono"), "avvert" );
	deepEqual( Stem("avvertisse"), "avvertiss" );
	deepEqual( Stem("avvertita"), "avvert" );
	deepEqual( Stem("avvertite"), "avvert" );
	deepEqual( Stem("avvertiti"), "avvert" );
	deepEqual( Stem("avvertito"), "avvert" );
	deepEqual( Stem("avvezza"), "avvezz" );
	deepEqual( Stem("avvezzare"), "avvezz" );
	deepEqual( Stem("avvezzarsi"), "avvezz" );
	deepEqual( Stem("avvezzata"), "avvezz" );
	deepEqual( Stem("avvezzato"), "avvezz" );
	deepEqual( Stem("avvezzi"), "avvezz" );
	deepEqual( Stem("avvezzin"), "avvezzin" );
	deepEqual( Stem("avvezzo"), "avvezz" );
	deepEqual( Stem("avvia"), "avvi" );
	deepEqual( Stem("avviamento"), "avvi" );
	deepEqual( Stem("avviando"), "avvi" );
	deepEqual( Stem("avviandosi"), "avvi" );
	deepEqual( Stem("avviano"), "avvi" );
	deepEqual( Stem("avviare"), "avvi" );
	deepEqual( Stem("avviaron"), "avviaron" );
	deepEqual( Stem("avviarono"), "avvi" );
	deepEqual( Stem("avviarsi"), "avvi" );
	deepEqual( Stem("avviarvi"), "avvi" );
	deepEqual( Stem("avviasse"), "avvi" );
	deepEqual( Stem("avviata"), "avvi" );
	deepEqual( Stem("avviate"), "avvi" );
	deepEqual( Stem("avviati"), "avvi" );
	deepEqual( Stem("avviato"), "avvi" );
	deepEqual( Stem("avviava"), "avvi" );
	deepEqual( Stem("avviavan"), "avviavan" );
	deepEqual( Stem("avviavano"), "avvi" );
	deepEqual( Stem("avvicendamenti"), "avvicend" );
	deepEqual( Stem("avvicina"), "avvicin" );
	deepEqual( Stem("avvicinamento"), "avvicin" );
	deepEqual( Stem("avvicinando"), "avvicin" );
	deepEqual( Stem("avvicinandosegli"), "avvicinandosegl" );
	deepEqual( Stem("avvicinandosele"), "avvicinandosel" );
	deepEqual( Stem("avvicinandosi"), "avvicin" );
	deepEqual( Stem("avvicinano"), "avvicin" );
	deepEqual( Stem("avvicinare"), "avvicin" );
	deepEqual( Stem("avvicinarono"), "avvicin" );
	deepEqual( Stem("avvicinarsi"), "avvicin" );
	deepEqual( Stem("avvicinasse"), "avvicin" );
	deepEqual( Stem("avvicinata"), "avvicin" );
	deepEqual( Stem("avvicinati"), "avvicin" );
	deepEqual( Stem("avvicinato"), "avvicin" );
	deepEqual( Stem("avvicinatosele"), "avvicinatosel" );
	deepEqual( Stem("avvicinatosi"), "avvicinat" );
	deepEqual( Stem("avvicinava"), "avvicin" );
	deepEqual( Stem("avvicinavano"), "avvicin" );
	deepEqual( Stem("avvicinino"), "avvicinin" );
	deepEqual( Stem("avvicinò"), "avvicin" );
	deepEqual( Stem("avvide"), "avvid" );
	deepEqual( Stem("avviene"), "avvien" );
	deepEqual( Stem("avvierà"), "avvi" );
	deepEqual( Stem("avvieranno"), "avvi" );
	deepEqual( Stem("avvilimento"), "avvil" );
	deepEqual( Stem("avvilisse"), "avviliss" );
	deepEqual( Stem("avvilita"), "avvil" );
	deepEqual( Stem("avvilito"), "avvil" );
	deepEqual( Stem("avviluppata"), "avvilupp" );
	deepEqual( Stem("avviluppate"), "avvilupp" );
	deepEqual( Stem("avvio"), "avvi" );
	deepEqual( Stem("avviò"), "avvi" );
	deepEqual( Stem("avvisa"), "avvis" );
	deepEqual( Stem("avvisaglie"), "avvisagl" );
	deepEqual( Stem("avvisar"), "avvis" );
	deepEqual( Stem("avvisarmi"), "avvis" );
	deepEqual( Stem("avvisatemi"), "avvisatem" );
	deepEqual( Stem("avvisato"), "avvis" );
	deepEqual( Stem("avvisi"), "avvis" );
	deepEqual( Stem("avviso"), "avvis" );
	deepEqual( Stem("avvisò"), "avvis" );
	deepEqual( Stem("avvista"), "avvist" );
	deepEqual( Stem("avvistati"), "avvist" );
	deepEqual( Stem("avvisti"), "avvist" );
	deepEqual( Stem("avvisto"), "avvist" );
	deepEqual( Stem("avvitano"), "avvit" );
	deepEqual( Stem("avviticchiata"), "avviticc" );
	deepEqual( Stem("avvocati"), "avvoc" );
	deepEqual( Stem("avvocato"), "avvoc" );
	deepEqual( Stem("avvocatura"), "avvocatur" );
	deepEqual( Stem("avvolgeva"), "avvolg" );
	deepEqual( Stem("avvolse"), "avvols" );
	deepEqual( Stem("avvolta"), "avvolt" );
	deepEqual( Stem("avvoltati"), "avvolt" );
	deepEqual( Stem("avvolto"), "avvolt" );
	deepEqual( Stem("axel"), "axel" );
	deepEqual( Stem("axo"), "axo" );
	deepEqual( Stem("ayamonte"), "ayamont" );
	deepEqual( Stem("ayatollah"), "ayatollah" );
	deepEqual( Stem("ayub"), "ayub" );
	deepEqual( Stem("az"), "az" );
	deepEqual( Stem("azarashvili"), "azarashvil" );
	deepEqual( Stem("azeglio"), "azegl" );
	deepEqual( Stem("azerbaigian"), "azerbaigian" );
	deepEqual( Stem("azienda"), "azi" );
	deepEqual( Stem("aziendale"), "aziendal" );
	deepEqual( Stem("aziendali"), "aziendal" );
	deepEqual( Stem("aziendalistico"), "aziendalist" );
	deepEqual( Stem("aziende"), "azi" );
	deepEqual( Stem("azimut"), "azimut" );
	deepEqual( Stem("azion"), "azion" );
	deepEqual( Stem("azionari"), "azionar" );
	deepEqual( Stem("azionariato"), "azionar" );
	deepEqual( Stem("azionarie"), "azionar" );
	deepEqual( Stem("azionario"), "azionar" );
	deepEqual( Stem("azione"), "azion" );
	deepEqual( Stem("azioni"), "azion" );
	deepEqual( Stem("azionista"), "azion" );
	deepEqual( Stem("azionisti"), "azion" );
	deepEqual( Stem("azov"), "azov" );
	deepEqual( Stem("azteca"), "aztec" );
	deepEqual( Stem("azzano"), "azzan" );
	deepEqual( Stem("azzardo"), "azzard" );
	deepEqual( Stem("azzaretti"), "azzarett" );
	deepEqual( Stem("azzecca"), "azzecc" );
	deepEqual( Stem("azzeccare"), "azzecc" );
	deepEqual( Stem("azzerato"), "azzer" );
	deepEqual( Stem("azzurra"), "azzurr" );
	deepEqual( Stem("azzurre"), "azzurr" );
	deepEqual( Stem("azzurri"), "azzurr" );
	deepEqual( Stem("azzurro"), "azzurr" );
	deepEqual( Stem("b"), "b" );
	deepEqual( Stem("baackman"), "baackman" );
	deepEqual( Stem("bab"), "bab" );
	deepEqual( Stem("babbini"), "babbin" );
	deepEqual( Stem("babbo"), "babb" );
	deepEqual( Stem("babilonese"), "babilones" );
	deepEqual( Stem("babilonia"), "babilon" );
	deepEqual( Stem("baccani"), "baccan" );
	deepEqual( Stem("baccano"), "bacc" );
	deepEqual( Stem("bacche"), "bacc" );
	deepEqual( Stem("bacchetta"), "bacchett" );
	deepEqual( Stem("bacchettare"), "bacchett" );
	deepEqual( Stem("bacchettato"), "bacchett" );
	deepEqual( Stem("bacchiarle"), "bacc" );
	deepEqual( Stem("bacci"), "bacc" );
	deepEqual( Stem("bacco"), "bacc" );
	deepEqual( Stem("bacheca"), "bachec" );
	deepEqual( Stem("bacheche"), "bachec" );
	deepEqual( Stem("baciare"), "bac" );
	deepEqual( Stem("baciasse"), "bac" );
	deepEqual( Stem("baciata"), "bac" );
	deepEqual( Stem("baciati"), "bac" );
	deepEqual( Stem("baciatolo"), "baciatol" );
	deepEqual( Stem("baciava"), "bac" );
	deepEqual( Stem("baciavano"), "bac" );
	deepEqual( Stem("bacilli"), "bacill" );
	deepEqual( Stem("bacio"), "bac" );
	deepEqual( Stem("bacioni"), "bacion" );
	deepEqual( Stem("back"), "back" );
	deepEqual( Stem("backlund"), "backlund" );
	deepEqual( Stem("backman"), "backman" );
	deepEqual( Stem("baco"), "bac" );
	deepEqual( Stem("bada"), "bad" );
	deepEqual( Stem("badando"), "bad" );
	deepEqual( Stem("badar"), "bad" );
	deepEqual( Stem("badare"), "bad" );
	deepEqual( Stem("badasse"), "bad" );
	deepEqual( Stem("badate"), "bad" );
	deepEqual( Stem("badato"), "bad" );
	deepEqual( Stem("badava"), "bad" );
	deepEqual( Stem("badavan"), "badavan" );
	deepEqual( Stem("badessa"), "badess" );
	deepEqual( Stem("badesse"), "badess" );
	deepEqual( Stem("badi"), "bad" );
	deepEqual( Stem("badò"), "bad" );
	deepEqual( Stem("baffi"), "baff" );
	deepEqual( Stem("baffie"), "baff" );
	deepEqual( Stem("bagagli"), "bagagl" );
	deepEqual( Stem("bagaglino"), "bagaglin" );
	deepEqual( Stem("bagattella"), "bagattell" );
	deepEqual( Stem("baggiana"), "baggian" );
	deepEqual( Stem("baggianata"), "baggian" );
	deepEqual( Stem("baggianate"), "baggian" );
	deepEqual( Stem("baggiani"), "baggian" );
	deepEqual( Stem("baggiano"), "bagg" );
	deepEqual( Stem("baggino"), "baggin" );
	deepEqual( Stem("baggio"), "bagg" );
	deepEqual( Stem("baghdad"), "baghdad" );
	deepEqual( Stem("baglieri"), "baglier" );
	deepEqual( Stem("bagm"), "bagm" );
	deepEqual( Stem("bagna"), "bagn" );
	deepEqual( Stem("bagnar"), "bagn" );
	deepEqual( Stem("bagnato"), "bagn" );
	deepEqual( Stem("bagnerebbe"), "bagn" );
	deepEqual( Stem("bagno"), "bagn" );
	deepEqual( Stem("bagnoli"), "bagnol" );
	deepEqual( Stem("bahrain"), "bahrain" );
	deepEqual( Stem("baia"), "bai" );
	deepEqual( Stem("baiano"), "bai" );
	deepEqual( Stem("baigest"), "baigest" );
	deepEqual( Stem("bain"), "bain" );
	deepEqual( Stem("bakirkov"), "bakirkov" );
	deepEqual( Stem("bal"), "bal" );
	deepEqual( Stem("balabbio"), "balabb" );
	deepEqual( Stem("balbettando"), "balbett" );
	deepEqual( Stem("balbettar"), "balbett" );
	deepEqual( Stem("balbettò"), "balbett" );
	deepEqual( Stem("balbo"), "balb" );
	deepEqual( Stem("balcani"), "balcan" );
	deepEqual( Stem("balcanica"), "balcan" );
	deepEqual( Stem("balcaria"), "balcar" );
	deepEqual( Stem("baldacchino"), "baldacchin" );
	deepEqual( Stem("baldanza"), "baldanz" );
	deepEqual( Stem("baldanzosa"), "baldanz" );
	deepEqual( Stem("baldassarri"), "baldassarr" );
	deepEqual( Stem("baldi"), "bald" );
	deepEqual( Stem("baldieri"), "baldier" );
	deepEqual( Stem("baldini"), "baldin" );
	deepEqual( Stem("balenar"), "balen" );
	deepEqual( Stem("balenato"), "balen" );
	deepEqual( Stem("baleno"), "balen" );
	deepEqual( Stem("balenò"), "balen" );
	deepEqual( Stem("balere"), "bal" );
	deepEqual( Stem("balia"), "bal" );
	deepEqual( Stem("balìa"), "balì" );
	deepEqual( Stem("balie"), "bal" );
	deepEqual( Stem("balilla"), "balill" );
	deepEqual( Stem("balladur"), "balladur" );
	deepEqual( Stem("ballar"), "ball" );
	deepEqual( Stem("ballard"), "ballard" );
	deepEqual( Stem("ballare"), "ball" );
	deepEqual( Stem("ballate"), "ball" );
	deepEqual( Stem("ballavano"), "ball" );
	deepEqual( Stem("balle"), "ball" );
	deepEqual( Stem("ballen"), "ballen" );
	deepEqual( Stem("balleri"), "baller" );
	deepEqual( Stem("ballerina"), "ballerin" );
	deepEqual( Stem("ballerini"), "ballerin" );
	deepEqual( Stem("ballerino"), "ballerin" );
	deepEqual( Stem("balletta"), "ballett" );
	deepEqual( Stem("balletto"), "ballett" );
	deepEqual( Stem("ballo"), "ball" );
	deepEqual( Stem("ballotta"), "ballott" );
	deepEqual( Stem("ballottaggio"), "ballottagg" );
	deepEqual( Stem("baloccandosi"), "balocc" );
	deepEqual( Stem("balocchi"), "balocc" );
	deepEqual( Stem("balocco"), "balocc" );
	deepEqual( Stem("balordo"), "balord" );
	deepEqual( Stem("balsam"), "balsam" );
	deepEqual( Stem("balsamo"), "balsam" );
	deepEqual( Stem("baltimora"), "baltimor" );
	deepEqual( Stem("baluardi"), "baluard" );
	deepEqual( Stem("baluardo"), "baluard" );
	deepEqual( Stem("balzando"), "balz" );
	deepEqual( Stem("balzano"), "balz" );
	deepEqual( Stem("balzare"), "balz" );
	deepEqual( Stem("balzato"), "balz" );
	deepEqual( Stem("balze"), "balz" );
	deepEqual( Stem("balzellare"), "balzell" );
	deepEqual( Stem("balzello"), "balzell" );
	deepEqual( Stem("balzelloni"), "balzellon" );
	deepEqual( Stem("balzi"), "balz" );
	deepEqual( Stem("balzo"), "balz" );
	deepEqual( Stem("balzò"), "balz" );
	deepEqual( Stem("bam"), "bam" );
	deepEqual( Stem("bambina"), "bambin" );
	deepEqual( Stem("bambine"), "bambin" );
	deepEqual( Stem("bambinelli"), "bambinell" );
	deepEqual( Stem("bambinetta"), "bambinett" );
	deepEqual( Stem("bambinette"), "bambinett" );
	deepEqual( Stem("bambini"), "bambin" );
	deepEqual( Stem("bambino"), "bambin" );
	deepEqual( Stem("bambole"), "bambol" );
	deepEqual( Stem("bampi"), "bamp" );
	deepEqual( Stem("bampo"), "bamp" );
	deepEqual( Stem("ban"), "ban" );
	deepEqual( Stem("banana"), "banan" );
	deepEqual( Stem("banane"), "banan" );
	deepEqual( Stem("bananè"), "banan" );
	deepEqual( Stem("banca"), "banc" );
	deepEqual( Stem("bancari"), "bancar" );
	deepEqual( Stem("bancaria"), "bancar" );
	deepEqual( Stem("bancarie"), "bancar" );
	deepEqual( Stem("bancario"), "bancar" );
	deepEqual( Stem("bancarotta"), "bancarott" );
	deepEqual( Stem("banche"), "banc" );
	deepEqual( Stem("banchelli"), "banchell" );
	deepEqual( Stem("banchetto"), "banchett" );
	deepEqual( Stem("banchi"), "banc" );
	deepEqual( Stem("banchina"), "banchin" );
	deepEqual( Stem("banco"), "banc" );
	deepEqual( Stem("bancone"), "bancon" );
	deepEqual( Stem("banconote"), "banconot" );
	deepEqual( Stem("band"), "band" );
	deepEqual( Stem("banda"), "band" );
	deepEqual( Stem("bande"), "band" );
	deepEqual( Stem("bandera"), "bander" );
	deepEqual( Stem("bandi"), "band" );
	deepEqual( Stem("bandiera"), "bandier" );
	deepEqual( Stem("bandiere"), "band" );
	deepEqual( Stem("bandierina"), "bandierin" );
	deepEqual( Stem("bandierine"), "bandierin" );
	deepEqual( Stem("bandita"), "band" );
	deepEqual( Stem("banditi"), "band" );
	deepEqual( Stem("bandito"), "band" );
	deepEqual( Stem("bandiva"), "band" );
	deepEqual( Stem("bando"), "band" );
	deepEqual( Stem("bandolo"), "bandol" );
	deepEqual( Stem("bang"), "bang" );
	deepEqual( Stem("bangalore"), "bangalor" );
	deepEqual( Stem("bangkok"), "bangkok" );
	deepEqual( Stem("bangladesh"), "bangladesh" );
	deepEqual( Stem("bank"), "bank" );
	deepEqual( Stem("banker"), "banker" );
	deepEqual( Stem("banking"), "banking" );
	deepEqual( Stem("bankitalia"), "bankital" );
	deepEqual( Stem("banzato"), "banz" );
	deepEqual( Stem("baptiste"), "baptist" );
	deepEqual( Stem("bar"), "bar" );
	deepEqual( Stem("bara"), "bar" );
	deepEqual( Stem("barabba"), "barabb" );
	deepEqual( Stem("baracca"), "baracc" );
	deepEqual( Stem("baracche"), "baracc" );
	deepEqual( Stem("baraldi"), "barald" );
	deepEqual( Stem("baramathi"), "baramath" );
	deepEqual( Stem("baraòs"), "baraòs" );
	deepEqual( Stem("baratro"), "baratr" );
	deepEqual( Stem("barattando"), "baratt" );
	deepEqual( Stem("barattano"), "baratt" );
	deepEqual( Stem("barattare"), "baratt" );
	deepEqual( Stem("barattata"), "baratt" );
	deepEqual( Stem("barattate"), "baratt" );
	deepEqual( Stem("barattava"), "baratt" );
	deepEqual( Stem("barattavan"), "barattavan" );
	deepEqual( Stem("baratterei"), "baratt" );
	deepEqual( Stem("barattoli"), "barattol" );
	deepEqual( Stem("barba"), "barb" );
	deepEqual( Stem("barbaccia"), "barbacc" );
	deepEqual( Stem("barbados"), "barbados" );
	deepEqual( Stem("barbara"), "barbar" );
	deepEqual( Stem("barbaramente"), "barbar" );
	deepEqual( Stem("barbaria"), "barbar" );
	deepEqual( Stem("barbaricino"), "barbaricin" );
	deepEqual( Stem("barbarie"), "barbar" );
	deepEqual( Stem("barbaro"), "barbar" );
	deepEqual( Stem("barbarossa"), "barbaross" );
	deepEqual( Stem("barbasso"), "barbass" );
	deepEqual( Stem("barbe"), "barb" );
	deepEqual( Stem("barber"), "barber" );
	deepEqual( Stem("barberini"), "barberin" );
	deepEqual( Stem("barbetta"), "barbett" );
	deepEqual( Stem("barbieri"), "barbier" );
	deepEqual( Stem("barbiero"), "barbier" );
	deepEqual( Stem("barbone"), "barbon" );
	deepEqual( Stem("barbour"), "barbour" );
	deepEqual( Stem("barca"), "barc" );
	deepEqual( Stem("barcaioli"), "barcaiol" );
	deepEqual( Stem("barcaiolo"), "barcaiol" );
	deepEqual( Stem("barcellona"), "barcellon" );
	deepEqual( Stem("barche"), "barc" );
	deepEqual( Stem("barchetta"), "barchett" );
	deepEqual( Stem("barclay"), "barclay" );
	deepEqual( Stem("barco"), "barc" );
	deepEqual( Stem("barcollando"), "barcoll" );
	deepEqual( Stem("barcollò"), "barcoll" );
	deepEqual( Stem("bardature"), "bardatur" );
	deepEqual( Stem("barella"), "barell" );
	deepEqual( Stem("barese"), "bares" );
	deepEqual( Stem("baresi"), "bares" );
	deepEqual( Stem("bargello"), "bargell" );
	deepEqual( Stem("bari"), "bar" );
	deepEqual( Stem("baricentro"), "baricentr" );
	deepEqual( Stem("barili"), "baril" );
	deepEqual( Stem("barletta"), "barlett" );
	deepEqual( Stem("barlume"), "barlum" );
	deepEqual( Stem("barnabas"), "barnabas" );
	deepEqual( Stem("barocciaio"), "barocciai" );
	deepEqual( Stem("baroccio"), "barocc" );
	deepEqual( Stem("barocco"), "barocc" );
	deepEqual( Stem("barollo"), "baroll" );
	deepEqual( Stem("baronchelli"), "baronchell" );
	deepEqual( Stem("baroni"), "baron" );
	deepEqual( Stem("barricata"), "barric" );
	deepEqual( Stem("barriera"), "barrier" );
	deepEqual( Stem("barrington"), "barrington" );
	deepEqual( Stem("barroccio"), "barrocc" );
	deepEqual( Stem("barsio"), "bars" );
	deepEqual( Stem("bart"), "bart" );
	deepEqual( Stem("bartholomew"), "bartholomew" );
	deepEqual( Stem("bartolomeo"), "bartolome" );
	deepEqual( Stem("bartolommeo"), "bartolomme" );
	deepEqual( Stem("baruch"), "baruc" );
	deepEqual( Stem("baruffe"), "baruff" );
	deepEqual( Stem("barzaghi"), "barzag" );
	deepEqual( Stem("basata"), "bas" );
	deepEqual( Stem("basato"), "bas" );
	deepEqual( Stem("base"), "bas" );
	deepEqual( Stem("basel"), "basel" );
	deepEqual( Stem("baselga"), "baselg" );
	deepEqual( Stem("basi"), "bas" );
	deepEqual( Stem("basilari"), "basilar" );
	deepEqual( Stem("basile"), "basil" );
	deepEqual( Stem("basilea"), "basile" );
	deepEqual( Stem("basilicata"), "basilic" );
	deepEqual( Stem("basinger"), "basinger" );
	deepEqual( Stem("basisce"), "bas" );
	deepEqual( Stem("basket"), "basket" );
	deepEqual( Stem("bassa"), "bass" );
	deepEqual( Stem("bassani"), "bassan" );
	deepEqual( Stem("bassanini"), "bassanin" );
	deepEqual( Stem("bassano"), "bass" );
	deepEqual( Stem("basse"), "bass" );
	deepEqual( Stem("bassetti"), "bassett" );
	deepEqual( Stem("bassi"), "bass" );
	deepEqual( Stem("bassifondi"), "bassifond" );
	deepEqual( Stem("bassissimi"), "bassissim" );
	deepEqual( Stem("basso"), "bass" );
	deepEqual( Stem("bassolino"), "bassolin" );
	deepEqual( Stem("basta"), "bast" );
	deepEqual( Stem("bastando"), "bast" );
	deepEqual( Stem("bastandoci"), "bast" );
	deepEqual( Stem("bastandogli"), "bast" );
	deepEqual( Stem("bastano"), "bast" );
	deepEqual( Stem("bastante"), "bastant" );
	deepEqual( Stem("bastantemente"), "bastant" );
	deepEqual( Stem("bastanti"), "bastant" );
	deepEqual( Stem("bastar"), "bast" );
	deepEqual( Stem("bastare"), "bast" );
	deepEqual( Stem("bastasse"), "bast" );
	deepEqual( Stem("bastassero"), "bast" );
	deepEqual( Stem("bastata"), "bast" );
	deepEqual( Stem("bastate"), "bast" );
	deepEqual( Stem("bastati"), "bast" );
	deepEqual( Stem("bastato"), "bast" );
	deepEqual( Stem("bastava"), "bast" );
	deepEqual( Stem("basten"), "basten" );
	deepEqual( Stem("basterà"), "bast" );
	deepEqual( Stem("basterebbe"), "bast" );
	deepEqual( Stem("basti"), "bast" );
	deepEqual( Stem("bastia"), "bast" );
	deepEqual( Stem("bastimento"), "bast" );
	deepEqual( Stem("bastioni"), "bastion" );
	deepEqual( Stem("basto"), "bast" );
	deepEqual( Stem("bastò"), "bast" );
	deepEqual( Stem("bastogi"), "bastog" );
	deepEqual( Stem("bastonabile"), "baston" );
	deepEqual( Stem("bastonabilissimo"), "bastonabilissim" );
	deepEqual( Stem("bastonate"), "baston" );
	deepEqual( Stem("bastonato"), "baston" );
	deepEqual( Stem("bastoncino"), "bastoncin" );
	deepEqual( Stem("bastone"), "baston" );
	deepEqual( Stem("bastoni"), "baston" );
	deepEqual( Stem("bastono"), "bast" );
	deepEqual( Stem("bataglione"), "bataglion" );
	deepEqual( Stem("batistuta"), "batist" );
	deepEqual( Stem("batman"), "batman" );
	deepEqual( Stem("battaggia"), "battagg" );
	deepEqual( Stem("battaglia"), "battagl" );
	deepEqual( Stem("battaglià"), "battagl" );
	deepEqual( Stem("battaglie"), "battagl" );
	deepEqual( Stem("battaglione"), "battaglion" );
	deepEqual( Stem("battaglioni"), "battaglion" );
	deepEqual( Stem("batte"), "batt" );
	deepEqual( Stem("battello"), "battell" );
	deepEqual( Stem("battendo"), "batt" );
	deepEqual( Stem("battendolo"), "batt" );
	deepEqual( Stem("battente"), "battent" );
	deepEqual( Stem("battenti"), "battent" );
	deepEqual( Stem("batter"), "batter" );
	deepEqual( Stem("batterà"), "batt" );
	deepEqual( Stem("batterci"), "batt" );
	deepEqual( Stem("battere"), "batt" );
	deepEqual( Stem("battermi"), "batt" );
	deepEqual( Stem("batterono"), "batt" );
	deepEqual( Stem("battersi"), "batt" );
	deepEqual( Stem("battesimo"), "battesim" );
	deepEqual( Stem("batteva"), "batt" );
	deepEqual( Stem("battezzata"), "battezz" );
	deepEqual( Stem("battezzato"), "battezz" );
	deepEqual( Stem("battiamo"), "batt" );
	deepEqual( Stem("battiato"), "batt" );
	deepEqual( Stem("batticuore"), "batticuor" );
	deepEqual( Stem("battigia"), "battig" );
	deepEqual( Stem("battimani"), "battiman" );
	deepEqual( Stem("battipagliese"), "battipaglies" );
	deepEqual( Stem("battista"), "battist" );
	deepEqual( Stem("battistini"), "battistin" );
	deepEqual( Stem("battistrada"), "battistrad" );
	deepEqual( Stem("batto"), "batt" );
	deepEqual( Stem("battuta"), "batt" );
	deepEqual( Stem("battute"), "batt" );
	deepEqual( Stem("battuto"), "batt" );
	deepEqual( Stem("battutta"), "battutt" );
	deepEqual( Stem("batuffoletto"), "batuffolett" );
	deepEqual( Stem("baudo"), "baud" );
	deepEqual( Stem("baumann"), "baumann" );
	deepEqual( Stem("bava"), "bav" );
	deepEqual( Stem("bavarese"), "bavares" );
	deepEqual( Stem("bavero"), "baver" );
	deepEqual( Stem("baviera"), "bavier" );
	deepEqual( Stem("bay"), "bay" );
	deepEqual( Stem("bayer"), "bayer" );
	deepEqual( Stem("bayerwerk"), "bayerwerk" );
	deepEqual( Stem("bazza"), "bazz" );
	deepEqual( Stem("bazzecole"), "bazzecol" );
	deepEqual( Stem("bazzicate"), "bazzic" );
	deepEqual( Stem("bazzicava"), "bazzic" );
	deepEqual( Stem("bazzicherebbero"), "bazzic" );
	deepEqual( Stem("bb"), "bb" );
	deepEqual( Stem("bbc"), "bbc" );
	deepEqual( Stem("bc"), "bc" );
	deepEqual( Stem("bca"), "bca" );
	deepEqual( Stem("bco"), "bco" );
	deepEqual( Stem("bd"), "bd" );
	deepEqual( Stem("beach"), "beac" );
	deepEqual( Stem("beata"), "beat" );
	deepEqual( Stem("beatificazione"), "beatif" );
	deepEqual( Stem("beatle"), "beatl" );
	deepEqual( Stem("beato"), "beat" );
	deepEqual( Stem("beatrice"), "beatric" );
	deepEqual( Stem("beautiful"), "beautiful" );
	deepEqual( Stem("bebè"), "beb" );
	deepEqual( Stem("bec"), "bec" );
	deepEqual( Stem("beccare"), "becc" );
	deepEqual( Stem("beccarsi"), "becc" );
	deepEqual( Stem("beccatò"), "beccat" );
	deepEqual( Stem("becchini"), "becchin" );
	deepEqual( Stem("becchino"), "becchin" );
	deepEqual( Stem("becchio"), "becc" );
	deepEqual( Stem("becco"), "becc" );
	deepEqual( Stem("becker"), "becker" );
	deepEqual( Stem("beffa"), "beff" );
	deepEqual( Stem("beffardi"), "beffard" );
	deepEqual( Stem("beffe"), "beff" );
	deepEqual( Stem("beghetto"), "beghett" );
	deepEqual( Stem("beghin"), "beghin" );
	deepEqual( Stem("begli"), "begl" );
	deepEqual( Stem("beha"), "beh" );
	deepEqual( Stem("bei"), "bei" );
	deepEqual( Stem("beirut"), "beirut" );
	deepEqual( Stem("beit"), "beit" );
	deepEqual( Stem("bel"), "bel" );
	deepEqual( Stem("belar"), "bel" );
	deepEqual( Stem("belare"), "bel" );
	deepEqual( Stem("belati"), "bel" );
	deepEqual( Stem("belfiori"), "belfior" );
	deepEqual( Stem("belga"), "belg" );
	deepEqual( Stem("belgio"), "belg" );
	deepEqual( Stem("belgrado"), "belgrad" );
	deepEqual( Stem("beliaiev"), "beliaiev" );
	deepEqual( Stem("bell"), "bell" );
	deepEqual( Stem("bella"), "bell" );
	deepEqual( Stem("bellano"), "bell" );
	deepEqual( Stem("bellarditta"), "bellarditt" );
	deepEqual( Stem("belle"), "bell" );
	deepEqual( Stem("bellerio"), "beller" );
	deepEqual( Stem("bellezza"), "bellezz" );
	deepEqual( Stem("bellezze"), "bellezz" );
	deepEqual( Stem("belli"), "bell" );
	deepEqual( Stem("bellici"), "bellic" );
	deepEqual( Stem("belligerante"), "belliger" );
	deepEqual( Stem("belligeranza"), "belliger" );
	deepEqual( Stem("bellissima"), "bellissim" );
	deepEqual( Stem("bellissime"), "bellissim" );
	deepEqual( Stem("bellissimo"), "bellissim" );
	deepEqual( Stem("bello"), "bell" );
	deepEqual( Stem("bellucci"), "bellucc" );
	deepEqual( Stem("bellunese"), "bellunes" );
	deepEqual( Stem("belluno"), "bellun" );
	deepEqual( Stem("belmondo"), "belmond" );
	deepEqual( Stem("belson"), "belson" );
	deepEqual( Stem("beltrami"), "beltram" );
	deepEqual( Stem("belzebù"), "belzebù" );
	deepEqual( Stem("bempensante"), "bempens" );
	deepEqual( Stem("ben"), "ben" );
	deepEqual( Stem("benaivedes"), "benaivedes" );
	deepEqual( Stem("benarrivo"), "benarr" );
	deepEqual( Stem("benaugurante"), "benaugur" );
	deepEqual( Stem("benavides"), "benavides" );
	deepEqual( Stem("benché"), "benc" );
	deepEqual( Stem("benchè"), "benc" );
	deepEqual( Stem("benda"), "bend" );
	deepEqual( Stem("bene"), "ben" );
	deepEqual( Stem("benedett"), "benedett" );
	deepEqual( Stem("benedetta"), "benedett" );
	deepEqual( Stem("benedette"), "benedett" );
	deepEqual( Stem("benedetti"), "benedett" );
	deepEqual( Stem("benedetto"), "benedett" );
	deepEqual( Stem("benedica"), "bened" );
	deepEqual( Stem("benedice"), "bened" );
	deepEqual( Stem("benedicilo"), "benedicil" );
	deepEqual( Stem("benedico"), "bened" );
	deepEqual( Stem("benedir"), "bened" );
	deepEqual( Stem("benedirà"), "bened" );
	deepEqual( Stem("benedire"), "bened" );
	deepEqual( Stem("benedisse"), "benediss" );
	deepEqual( Stem("benedizione"), "benedizion" );
	deepEqual( Stem("benedizioni"), "benedizion" );
	deepEqual( Stem("benefattore"), "benefattor" );
	deepEqual( Stem("benefattori"), "benefattor" );
	deepEqual( Stem("benefattrice"), "benefattr" );
	deepEqual( Stem("benefica"), "benef" );
	deepEqual( Stem("beneficare"), "benefic" );
	deepEqual( Stem("beneficati"), "benefic" );
	deepEqual( Stem("beneficenza"), "beneficent" );
	deepEqual( Stem("beneficenze"), "beneficent" );
	deepEqual( Stem("benefici"), "benef" );
	deepEqual( Stem("beneficiari"), "beneficiar" );
	deepEqual( Stem("beneficiato"), "benefic" );
	deepEqual( Stem("beneficienza"), "beneficient" );
	deepEqual( Stem("beneficio"), "benefic" );
	deepEqual( Stem("benefico"), "benef" );
	deepEqual( Stem("benefitio"), "benefit" );
	deepEqual( Stem("benefizio"), "benefiz" );
	deepEqual( Stem("benemeriti"), "benemer" );
	deepEqual( Stem("benemerito"), "benemer" );
	deepEqual( Stem("benestanti"), "benest" );
	deepEqual( Stem("benetti"), "benett" );
	deepEqual( Stem("benetton"), "benetton" );
	deepEqual( Stem("benevento"), "benevent" );
	deepEqual( Stem("benevolenza"), "benevolent" );
	deepEqual( Stem("benevoli"), "benevol" );
	deepEqual( Stem("benevolo"), "benevol" );
	deepEqual( Stem("beni"), "ben" );
	deepEqual( Stem("beniamino"), "beniamin" );
	deepEqual( Stem("benigna"), "benign" );
	deepEqual( Stem("benignità"), "benign" );
	deepEqual( Stem("benissimo"), "benissim" );
	deepEqual( Stem("benni"), "benn" );
	deepEqual( Stem("benny"), "benny" );
	deepEqual( Stem("benone"), "benon" );
	deepEqual( Stem("benservito"), "benserv" );
	deepEqual( Stem("bensì"), "bens" );
	deepEqual( Stem("benvenuta"), "benven" );
	deepEqual( Stem("benvenuto"), "benven" );
	deepEqual( Stem("benzina"), "benzin" );
	deepEqual( Stem("beppe"), "bepp" );
	deepEqual( Stem("berbera"), "berber" );
	deepEqual( Stem("berberovic"), "berberovic" );
	deepEqual( Stem("bere"), "ber" );
	deepEqual( Stem("berenger"), "berenger" );
	deepEqual( Stem("beretta"), "berett" );
	deepEqual( Stem("bergamasca"), "bergamasc" );
	deepEqual( Stem("bergamasche"), "bergamasc" );
	deepEqual( Stem("bergamaschi"), "bergamasc" );
	deepEqual( Stem("bergamasco"), "bergamasc" );
	deepEqual( Stem("bergamascone"), "bergamascon" );
	deepEqual( Stem("bergamo"), "bergam" );
	deepEqual( Stem("bergkamp"), "bergkamp" );
	deepEqual( Stem("bergodi"), "bergod" );
	deepEqual( Stem("bergomi"), "bergom" );
	deepEqual( Stem("berhanu"), "berhanu" );
	deepEqual( Stem("berisha"), "berish" );
	deepEqual( Stem("berlanda"), "berland" );
	deepEqual( Stem("berlenghi"), "berleng" );
	deepEqual( Stem("berlinga"), "berling" );
	deepEqual( Stem("berlinghe"), "berling" );
	deepEqual( Stem("berlinguer"), "berlinguer" );
	deepEqual( Stem("berlino"), "berlin" );
	deepEqual( Stem("berluscaz"), "berluscaz" );
	deepEqual( Stem("berlusconi"), "berluscon" );
	deepEqual( Stem("berlusconì"), "berluscon" );
	deepEqual( Stem("berlusconiani"), "berlusconian" );
	deepEqual( Stem("berlusconiano"), "berluscon" );
	deepEqual( Stem("berluskaiser"), "berluskaiser" );
	deepEqual( Stem("bermuda"), "bermud" );
	deepEqual( Stem("bernabè"), "bernab" );
	deepEqual( Stem("bernard"), "bernard" );
	deepEqual( Stem("bernardelli"), "bernardell" );
	deepEqual( Stem("bernardi"), "bernard" );
	deepEqual( Stem("bernardini"), "bernardin" );
	deepEqual( Stem("bernardo"), "bernard" );
	deepEqual( Stem("bernassola"), "bernassol" );
	deepEqual( Stem("bernoccolo"), "bernoccol" );
	deepEqual( Stem("berretta"), "berrett" );
	deepEqual( Stem("berretti"), "berrett" );
	deepEqual( Stem("berrettine"), "berrettin" );
	deepEqual( Stem("berretto"), "berrett" );
	deepEqual( Stem("bersagliando"), "bersagl" );
	deepEqual( Stem("bersaglio"), "bersagl" );
	deepEqual( Stem("bersagliò"), "bersagl" );
	deepEqual( Stem("bersani"), "bersan" );
	deepEqual( Stem("berselli"), "bersell" );
	deepEqual( Stem("bertarelli"), "bertarell" );
	deepEqual( Stem("bertelli"), "bertell" );
	deepEqual( Stem("berti"), "bert" );
	deepEqual( Stem("bertinotti"), "bertinott" );
	deepEqual( Stem("berto"), "bert" );
	deepEqual( Stem("bertolucci"), "bertolucc" );
	deepEqual( Stem("beruri"), "berur" );
	deepEqual( Stem("besà"), "bes" );
	deepEqual( Stem("beschin"), "beschin" );
	deepEqual( Stem("beso"), "bes" );
	deepEqual( Stem("best"), "best" );
	deepEqual( Stem("bestemmia"), "bestemm" );
	deepEqual( Stem("bestemmiando"), "bestemm" );
	deepEqual( Stem("bestemmiato"), "bestemm" );
	deepEqual( Stem("bestemmiavano"), "bestemm" );
	deepEqual( Stem("bestemmie"), "bestemm" );
	deepEqual( Stem("bestia"), "best" );
	deepEqual( Stem("bestiale"), "bestial" );
	deepEqual( Stem("bestiame"), "bestiam" );
	deepEqual( Stem("bestie"), "best" );
	deepEqual( Stem("bestione"), "bestion" );
	deepEqual( Stem("betis"), "betis" );
	deepEqual( Stem("bettin"), "bettin" );
	deepEqual( Stem("bettina"), "bettin" );
	deepEqual( Stem("bettino"), "bettin" );
	deepEqual( Stem("bettinò"), "bettin" );
	deepEqual( Stem("bettiol"), "bettiol" );
	deepEqual( Stem("bettola"), "bettol" );
	deepEqual( Stem("bettole"), "bettol" );
	deepEqual( Stem("betty"), "betty" );
	deepEqual( Stem("bevanda"), "bevand" );
	deepEqual( Stem("bevande"), "bevand" );
	deepEqual( Stem("beve"), "bev" );
	deepEqual( Stem("beveren"), "beveren" );
	deepEqual( Stem("beverly"), "beverly" );
	deepEqual( Stem("bevette"), "bevett" );
	deepEqual( Stem("bevi"), "bev" );
	deepEqual( Stem("bevitore"), "bevitor" );
	deepEqual( Stem("bevono"), "bev" );
	deepEqual( Stem("bevuta"), "bev" );
	deepEqual( Stem("bevuto"), "bev" );
	deepEqual( Stem("bf"), "bf" );
	deepEqual( Stem("bg"), "bg" );
	deepEqual( Stem("bharatiya"), "bharatiy" );
	deepEqual( Stem("bi"), "bi" );
	deepEqual( Stem("bia"), "bia" );
	deepEqual( Stem("biagio"), "biag" );
	deepEqual( Stem("biagioni"), "biagion" );
	deepEqual( Stem("biamonte"), "biamont" );
	deepEqual( Stem("bianca"), "bianc" );
	deepEqual( Stem("biancacci"), "biancacc" );
	deepEqual( Stem("biancaneve"), "biancanev" );
	deepEqual( Stem("biancastra"), "biancastr" );
	deepEqual( Stem("biancastre"), "biancastr" );
	deepEqual( Stem("biancastri"), "biancastr" );
	deepEqual( Stem("biancazzurri"), "biancazzurr" );
	deepEqual( Stem("bianche"), "bianc" );
	deepEqual( Stem("biancheggianti"), "bianchegg" );
	deepEqual( Stem("biancheria"), "biancher" );
	deepEqual( Stem("bianchezza"), "bianchezz" );
	deepEqual( Stem("bianchi"), "bianc" );
	deepEqual( Stem("bianchini"), "bianchin" );
	deepEqual( Stem("bianchissima"), "bianchissim" );
	deepEqual( Stem("bianchissime"), "bianchissim" );
	deepEqual( Stem("bianchissimo"), "bianchissim" );
	deepEqual( Stem("bianco"), "bianc" );
	deepEqual( Stem("biancò"), "bianc" );
	deepEqual( Stem("bianconera"), "bianconer" );
	deepEqual( Stem("bianconeri"), "bianconer" );
	deepEqual( Stem("bianconero"), "bianconer" );
	deepEqual( Stem("biar"), "biar" );
	deepEqual( Stem("biascicato"), "biascic" );
	deepEqual( Stem("biasimata"), "biasim" );
	deepEqual( Stem("biasimevole"), "biasimevol" );
	deepEqual( Stem("biasimo"), "biasim" );
	deepEqual( Stem("biathlon"), "biathlon" );
	deepEqual( Stem("biava"), "biav" );
	deepEqual( Stem("biblioteca"), "bibliotec" );
	deepEqual( Stem("bibliotecari"), "bibliotecar" );
	deepEqual( Stem("bibliotecario"), "bibliotecar" );
	deepEqual( Stem("biblioteche"), "bibliotec" );
	deepEqual( Stem("bic"), "bic" );
	deepEqual( Stem("bicamerale"), "bicameral" );
	deepEqual( Stem("bicchier"), "bicchier" );
	deepEqual( Stem("bicchiere"), "bicc" );
	deepEqual( Stem("bicchieri"), "bicchier" );
	deepEqual( Stem("bicchierino"), "bicchierin" );
	deepEqual( Stem("bicicletta"), "biciclett" );
	deepEqual( Stem("bicocca"), "bicocc" );
	deepEqual( Stem("bidonville"), "bidonvill" );
	deepEqual( Stem("bieche"), "biec" );
	deepEqual( Stem("bieco"), "biec" );
	deepEqual( Stem("biedenkopf"), "biedenkopf" );
	deepEqual( Stem("biella"), "biell" );
	deepEqual( Stem("bielorussa"), "bieloruss" );
	deepEqual( Stem("bielorussia"), "bieloruss" );
	deepEqual( Stem("bien"), "bien" );
	deepEqual( Stem("biennale"), "biennal" );
	deepEqual( Stem("biennio"), "bienn" );
	deepEqual( Stem("bierhoff"), "bierhoff" );
	deepEqual( Stem("biffi"), "biff" );
	deepEqual( Stem("big"), "big" );
	deepEqual( Stem("bigia"), "big" );
	deepEqual( Stem("bigica"), "bigic" );
	deepEqual( Stem("bigio"), "big" );
	deepEqual( Stem("bigiognolo"), "bigiognol" );
	deepEqual( Stem("biglietti"), "bigliett" );
	deepEqual( Stem("biglietto"), "bigliett" );
	deepEqual( Stem("bignardi"), "bignard" );
	deepEqual( Stem("bigon"), "bigon" );
	deepEqual( Stem("biguzzi"), "biguzz" );
	deepEqual( Stem("bihac"), "bihac" );
	deepEqual( Stem("bikini"), "bikin" );
	deepEqual( Stem("bil"), "bil" );
	deepEqual( Stem("bilan"), "bilan" );
	deepEqual( Stem("bilance"), "bilanc" );
	deepEqual( Stem("bilanci"), "bilanc" );
	deepEqual( Stem("bilancia"), "bilanc" );
	deepEqual( Stem("bilanciato"), "bilanc" );
	deepEqual( Stem("bilanciavano"), "bilanc" );
	deepEqual( Stem("bilancino"), "bilancin" );
	deepEqual( Stem("bilancio"), "bilanc" );
	deepEqual( Stem("bilaterali"), "bilateral" );
	deepEqual( Stem("bilboa"), "bilbo" );
	deepEqual( Stem("bild"), "bild" );
	deepEqual( Stem("biliardo"), "biliard" );
	deepEqual( Stem("bill"), "bill" );
	deepEqual( Stem("billio"), "bill" );
	deepEqual( Stem("billy"), "billy" );
	deepEqual( Stem("bim"), "bim" );
	deepEqual( Stem("bimba"), "bimb" );
	deepEqual( Stem("bimbi"), "bimb" );
	deepEqual( Stem("bimbo"), "bimb" );
	deepEqual( Stem("binaghi"), "binag" );
	deepEqual( Stem("binari"), "binar" );
	deepEqual( Stem("binario"), "binar" );
	deepEqual( Stem("binda"), "bind" );
	deepEqual( Stem("bindi"), "bind" );
	deepEqual( Stem("binelli"), "binell" );
	deepEqual( Stem("binotto"), "binott" );
	deepEqual( Stem("bioetica"), "bioetic" );
	deepEqual( Stem("biografi"), "biograf" );
	deepEqual( Stem("biografia"), "biograf" );
	deepEqual( Stem("biologia"), "biolog" );
	deepEqual( Stem("biologica"), "biolog" );
	deepEqual( Stem("biologo"), "biolog" );
	deepEqual( Stem("biomedica"), "biomed" );
	deepEqual( Stem("bionda"), "biond" );
	deepEqual( Stem("biondi"), "biond" );
	deepEqual( Stem("biondino"), "biondin" );
	deepEqual( Stem("biondo"), "biond" );
	deepEqual( Stem("bione"), "bion" );
	deepEqual( Stem("biosfere"), "biosf" );
	deepEqual( Stem("bipolare"), "bipol" );
	deepEqual( Stem("bipolarismo"), "bipolar" );
	deepEqual( Stem("bipolarismò"), "bipolarism" );
	deepEqual( Stem("bipolarizza"), "bipolarizz" );
	deepEqual( Stem("bipolarizzazione"), "bipolarizz" );
	deepEqual( Stem("birago"), "birag" );
	deepEqual( Stem("birba"), "birb" );
	deepEqual( Stem("birbante"), "birbant" );
	deepEqual( Stem("birbanti"), "birbant" );
	deepEqual( Stem("birberia"), "birber" );
	deepEqual( Stem("birbone"), "birbon" );
	deepEqual( Stem("birboneggiando"), "birbonegg" );
	deepEqual( Stem("birboni"), "birbon" );
	deepEqual( Stem("birilli"), "birill" );
	deepEqual( Stem("birkenau"), "birkenau" );
	deepEqual( Stem("birmania"), "birman" );
	deepEqual( Stem("birmano"), "birm" );
	deepEqual( Stem("biron"), "biron" );
	deepEqual( Stem("birreria"), "birrer" );
	deepEqual( Stem("birri"), "birr" );
	deepEqual( Stem("birro"), "birr" );
	deepEqual( Stem("bis"), "bis" );
	deepEqual( Stem("bisacce"), "bisacc" );
	deepEqual( Stem("bisaccia"), "bisacc" );
	deepEqual( Stem("bisbetica"), "bisbet" );
	deepEqual( Stem("bisbetiche"), "bisbet" );
	deepEqual( Stem("bisbetici"), "bisbet" );
	deepEqual( Stem("bisbigli"), "bisbigl" );
	deepEqual( Stem("bisbigliar"), "bisbigl" );
	deepEqual( Stem("bisbigliare"), "bisbigl" );
	deepEqual( Stem("bisbigliava"), "bisbigl" );
	deepEqual( Stem("bisbiglio"), "bisbigl" );
	deepEqual( Stem("bisbiglìo"), "bisbiglì" );
	deepEqual( Stem("bisbigliò"), "bisbigl" );
	deepEqual( Stem("bisbocce"), "bisbocc" );
	deepEqual( Stem("bisca"), "bisc" );
	deepEqual( Stem("biscardi"), "biscard" );
	deepEqual( Stem("bisceglie"), "biscegl" );
	deepEqual( Stem("biscione"), "biscion" );
	deepEqual( Stem("bisdosso"), "bisdoss" );
	deepEqual( Stem("bisessuale"), "bisessual" );
	deepEqual( Stem("bisogna"), "bisogn" );
	deepEqual( Stem("bisognare"), "bisogn" );
	deepEqual( Stem("bisognasse"), "bisogn" );
	deepEqual( Stem("bisognati"), "bisogn" );
	deepEqual( Stem("bisognato"), "bisogn" );
	deepEqual( Stem("bisognaua"), "bisognau" );
	deepEqual( Stem("bisognava"), "bisogn" );
	deepEqual( Stem("bisognerà"), "bisogn" );
	deepEqual( Stem("bisognerebbe"), "bisogn" );
	deepEqual( Stem("bisognevole"), "bisognevol" );
	deepEqual( Stem("bisogni"), "bisogn" );
	deepEqual( Stem("bisogno"), "bisogn" );
	deepEqual( Stem("bisognò"), "bisogn" );
	deepEqual( Stem("bisognosa"), "bisogn" );
	deepEqual( Stem("bisognose"), "bisogn" );
	deepEqual( Stem("bisognosi"), "bisogn" );
	deepEqual( Stem("bisoli"), "bisol" );
	deepEqual( Stem("bisopgna"), "bisopgn" );
	deepEqual( Stem("bissau"), "bissau" );
	deepEqual( Stem("bisset"), "bisset" );
	deepEqual( Stem("bisticciar"), "bisticc" );
	deepEqual( Stem("bistrattava"), "bistratt" );
	deepEqual( Stem("bitetto"), "bitett" );
	deepEqual( Stem("bitonto"), "bitont" );
	deepEqual( Stem("bitume"), "bitum" );
	deepEqual( Stem("bituminosa"), "bitumin" );
	deepEqual( Stem("bixio"), "bix" );
	deepEqual( Stem("bizantinismi"), "bizantin" );
	deepEqual( Stem("bizioli"), "biziol" );
	deepEqual( Stem("bizzarre"), "bizzarr" );
	deepEqual( Stem("bizzarri"), "bizzarr" );
	deepEqual( Stem("bizzarria"), "bizzarr" );
	deepEqual( Stem("bizzarro"), "bizzarr" );
	deepEqual( Stem("bizzeffe"), "bizzeff" );
	deepEqual( Stem("bjorndalen"), "bjorndalen" );
	deepEqual( Stem("bka"), "bka" );
	deepEqual( Stem("bl"), "bl" );
	deepEqual( Stem("black"), "black" );
	deepEqual( Stem("blair"), "bla" );
	deepEqual( Stem("blasfemi"), "blasfem" );
	deepEqual( Stem("blasonata"), "blason" );
	deepEqual( Stem("blaterando"), "blater" );
	deepEqual( Stem("blaugrana"), "blaugran" );
	deepEqual( Stem("blida"), "blid" );
	deepEqual( Stem("blindata"), "blind" );
	deepEqual( Stem("blindate"), "blind" );
	deepEqual( Stem("blocca"), "blocc" );
	deepEqual( Stem("bloccando"), "blocc" );
	deepEqual( Stem("bloccare"), "blocc" );
	deepEqual( Stem("bloccata"), "blocc" );
	deepEqual( Stem("bloccato"), "blocc" );
	deepEqual( Stem("bloccherebbe"), "blocc" );
	deepEqual( Stem("blocchi"), "blocc" );
	deepEqual( Stem("blocco"), "blocc" );
	deepEqual( Stem("blomqvist"), "blomqvist" );
	deepEqual( Stem("bloom"), "bloom" );
	deepEqual( Stem("blu"), "blu" );
	deepEqual( Stem("blù"), "blù" );
	deepEqual( Stem("blucerchiata"), "blucerc" );
	deepEqual( Stem("blucerchiati"), "blucerc" );
	deepEqual( Stem("blucerchiato"), "blucerc" );
	deepEqual( Stem("blue"), "blu" );
	deepEqual( Stem("blz"), "blz" );
	deepEqual( Stem("bm"), "bm" );
	deepEqual( Stem("bn"), "bn" );
	deepEqual( Stem("bna"), "bna" );
	deepEqual( Stem("bnl"), "bnl" );
	deepEqual( Stem("bo"), "bo" );
	deepEqual( Stem("boa"), "boa" );
	deepEqual( Stem("boardman"), "boardman" );
	deepEqual( Stem("boards"), "boards" );
	deepEqual( Stem("boati"), "boat" );
	deepEqual( Stem("boato"), "boat" );
	deepEqual( Stem("bob"), "bob" );
	deepEqual( Stem("boban"), "boban" );
	deepEqual( Stem("bobbi"), "bobb" );
	deepEqual( Stem("bobbie"), "bobb" );
	deepEqual( Stem("bobbio"), "bobb" );
	deepEqual( Stem("bobek"), "bobek" );
	deepEqual( Stem("bobo"), "bob" );
	deepEqual( Stem("bobò"), "bob" );
	deepEqual( Stem("boca"), "boc" );
	deepEqual( Stem("bocca"), "bocc" );
	deepEqual( Stem("boccacce"), "boccacc" );
	deepEqual( Stem("boccale"), "boccal" );
	deepEqual( Stem("boccalini"), "boccalin" );
	deepEqual( Stem("boccetta"), "boccett" );
	deepEqual( Stem("bocche"), "bocc" );
	deepEqual( Stem("bocchino"), "bocchin" );
	deepEqual( Stem("boccia"), "bocc" );
	deepEqual( Stem("bocciare"), "bocc" );
	deepEqual( Stem("bocciata"), "bocc" );
	deepEqual( Stem("bocciato"), "bocc" );
	deepEqual( Stem("bocciatura"), "bocciatur" );
	deepEqual( Stem("boccone"), "boccon" );
	deepEqual( Stem("bocconi"), "boccon" );
	deepEqual( Stem("bodelwyddan"), "bodelwyddan" );
	deepEqual( Stem("bodino"), "bodin" );
	deepEqual( Stem("bodrato"), "bodr" );
	deepEqual( Stem("boeing"), "boeing" );
	deepEqual( Stem("boero"), "boer" );
	deepEqual( Stem("bof"), "bof" );
	deepEqual( Stem("bog"), "bog" );
	deepEqual( Stem("boghossian"), "boghossian" );
	deepEqual( Stem("bognanco"), "bognanc" );
	deepEqual( Stem("bogo"), "bog" );
	deepEqual( Stem("bogotà"), "bogot" );
	deepEqual( Stem("boia"), "boi" );
	deepEqual( Stem("boiano"), "boi" );
	deepEqual( Stem("boicottaggio"), "boicottagg" );
	deepEqual( Stem("boicottare"), "boicott" );
	deepEqual( Stem("boksic"), "boksic" );
	deepEqual( Stem("bolgona"), "bolgon" );
	deepEqual( Stem("bolivia"), "boliv" );
	deepEqual( Stem("bolla"), "boll" );
	deepEqual( Stem("bollate"), "boll" );
	deepEqual( Stem("bolle"), "boll" );
	deepEqual( Stem("bollettino"), "bollettin" );
	deepEqual( Stem("bolli"), "boll" );
	deepEqual( Stem("bolliva"), "boll" );
	deepEqual( Stem("bollo"), "boll" );
	deepEqual( Stem("bollor"), "bollor" );
	deepEqual( Stem("bollore"), "bollor" );
	deepEqual( Stem("bologna"), "bologn" );
	deepEqual( Stem("bolognese"), "bolognes" );
	deepEqual( Stem("bolognino"), "bolognin" );
	deepEqual( Stem("bolongaro"), "bolongar" );
	deepEqual( Stem("bolshoi"), "bolsho" );
	deepEqual( Stem("bolzano"), "bolz" );
	deepEqual( Stem("bomba"), "bomb" );
	deepEqual( Stem("bombardamenti"), "bombard" );
	deepEqual( Stem("bombardamento"), "bombard" );
	deepEqual( Stem("bombardare"), "bombard" );
	deepEqual( Stem("bombardato"), "bombard" );
	deepEqual( Stem("bombardieri"), "bombardier" );
	deepEqual( Stem("bombay"), "bombay" );
	deepEqual( Stem("bombe"), "bomb" );
	deepEqual( Stem("bombole"), "bombol" );
	deepEqual( Stem("bombolette"), "bombolett" );
	deepEqual( Stem("bommarito"), "bommar" );
	deepEqual( Stem("bon"), "bon" );
	deepEqual( Stem("bonacci"), "bonacc" );
	deepEqual( Stem("bonacina"), "bonacin" );
	deepEqual( Stem("bonafini"), "bonafin" );
	deepEqual( Stem("bonaiuti"), "bonai" );
	deepEqual( Stem("bonaldi"), "bonald" );
	deepEqual( Stem("bonaparte"), "bonapart" );
	deepEqual( Stem("bonariamente"), "bonar" );
	deepEqual( Stem("bonarietà"), "bonariet" );
	deepEqual( Stem("bonario"), "bonar" );
	deepEqual( Stem("bonati"), "bon" );
	deepEqual( Stem("bonaventura"), "bonaventur" );
	deepEqual( Stem("boncompagni"), "boncompagn" );
	deepEqual( Stem("bond"), "bond" );
	deepEqual( Stem("bonds"), "bonds" );
	deepEqual( Stem("bonfrisco"), "bonfr" );
	deepEqual( Stem("bongiorno"), "bongiorn" );
	deepEqual( Stem("bonham"), "bonham" );
	deepEqual( Stem("bonifica"), "bonif" );
	deepEqual( Stem("bonifiche"), "bonif" );
	deepEqual( Stem("bonino"), "bonin" );
	deepEqual( Stem("bonissima"), "bonissim" );
	deepEqual( Stem("bonissimo"), "bonissim" );
	deepEqual( Stem("bonn"), "bonn" );
	deepEqual( Stem("bonnaire"), "bonn" );
	deepEqual( Stem("bonnard"), "bonnard" );
	deepEqual( Stem("bonometti"), "bonomett" );
	deepEqual( Stem("bonomi"), "bonom" );
	deepEqual( Stem("bonsia"), "bons" );
	deepEqual( Stem("bontà"), "bont" );
	deepEqual( Stem("bor"), "bor" );
	deepEqual( Stem("borbonici"), "borbon" );
	deepEqual( Stem("borbottando"), "borbott" );
	deepEqual( Stem("borbottar"), "borbott" );
	deepEqual( Stem("borbottare"), "borbott" );
	deepEqual( Stem("borbottava"), "borbott" );
	deepEqual( Stem("borchie"), "borc" );
	deepEqual( Stem("bordate"), "bord" );
	deepEqual( Stem("bordeaux"), "bordeaux" );
	deepEqual( Stem("bordo"), "bord" );
	deepEqual( Stem("bordocampo"), "bordocamp" );
	deepEqual( Stem("bordon"), "bordon" );
	deepEqual( Stem("bordone"), "bordon" );
	deepEqual( Stem("bordoni"), "bordon" );
	deepEqual( Stem("borghese"), "borghes" );
	deepEqual( Stem("borghesia"), "borghes" );
	deepEqual( Stem("borghetto"), "borghett" );
	deepEqual( Stem("borghezio"), "borghez" );
	deepEqual( Stem("borghi"), "borg" );
	deepEqual( Stem("borgna"), "borgn" );
	deepEqual( Stem("borgo"), "borg" );
	deepEqual( Stem("borgosesia"), "borgoses" );
	deepEqual( Stem("boria"), "bor" );
	deepEqual( Stem("borioso"), "borios" );
	deepEqual( Stem("boris"), "boris" );
	deepEqual( Stem("borraccina"), "borraccin" );
	deepEqual( Stem("borrelli"), "borrell" );
	deepEqual( Stem("borriello"), "borriell" );
	deepEqual( Stem("borrini"), "borrin" );
	deepEqual( Stem("borromeo"), "borrome" );
	deepEqual( Stem("borsa"), "bors" );
	deepEqual( Stem("borse"), "bors" );
	deepEqual( Stem("borsistico"), "borsist" );
	deepEqual( Stem("borsitalia"), "borsital" );
	deepEqual( Stem("bortolazzi"), "bortolazz" );
	deepEqual( Stem("bortolo"), "bortol" );
	deepEqual( Stem("bortone"), "borton" );
	deepEqual( Stem("bosaglia"), "bosagl" );
	deepEqual( Stem("bosanksa"), "bosanks" );
	deepEqual( Stem("bosanska"), "bosansk" );
	deepEqual( Stem("bosaso"), "bosas" );
	deepEqual( Stem("bosca"), "bosc" );
	deepEqual( Stem("boschetto"), "boschett" );
	deepEqual( Stem("boschi"), "bosc" );
	deepEqual( Stem("bosco"), "bosc" );
	deepEqual( Stem("boscolo"), "boscol" );
	deepEqual( Stem("boscosa"), "boscos" );
	deepEqual( Stem("bosetti"), "bosett" );
	deepEqual( Stem("bosi"), "bos" );
	deepEqual( Stem("boskovic"), "boskovic" );
	deepEqual( Stem("bosnia"), "bosn" );
	deepEqual( Stem("bosniaca"), "bosniac" );
	deepEqual( Stem("bosniache"), "bosniac" );
	deepEqual( Stem("bosniaci"), "bosniac" );
	deepEqual( Stem("bosniaco"), "bosniac" );
	deepEqual( Stem("boso"), "bos" );
	deepEqual( Stem("boss"), "boss" );
	deepEqual( Stem("bossi"), "boss" );
	deepEqual( Stem("bossiana"), "bossian" );
	deepEqual( Stem("bossiha"), "bossih" );
	deepEqual( Stem("bossolo"), "bossol" );
	deepEqual( Stem("boston"), "boston" );
	deepEqual( Stem("bot"), "bot" );
	deepEqual( Stem("botero"), "boter" );
	deepEqual( Stem("botta"), "bott" );
	deepEqual( Stem("botte"), "bott" );
	deepEqual( Stem("bottega"), "botteg" );
	deepEqual( Stem("botteghe"), "botteg" );
	deepEqual( Stem("botti"), "bott" );
	deepEqual( Stem("botticella"), "botticell" );
	deepEqual( Stem("botticelli"), "botticell" );
	deepEqual( Stem("botticina"), "botticin" );
	deepEqual( Stem("botticine"), "botticin" );
	deepEqual( Stem("bottiglie"), "bottigl" );
	deepEqual( Stem("bottino"), "bottin" );
	deepEqual( Stem("botton"), "botton" );
	deepEqual( Stem("bottoni"), "botton" );
	deepEqual( Stem("boulevard"), "boulevard" );
	deepEqual( Stem("bouliere"), "boul" );
	deepEqual( Stem("boutros"), "boutros" );
	deepEqual( Stem("bovo"), "bov" );
	deepEqual( Stem("box"), "box" );
	deepEqual( Stem("boyle"), "boyl" );
	deepEqual( Stem("boys"), "boys" );
	deepEqual( Stem("bozza"), "bozz" );
	deepEqual( Stem("bpd"), "bpd" );
	deepEqual( Stem("br"), "br" );
	deepEqual( Stem("bra"), "bra" );
	deepEqual( Stem("bracaloni"), "bracalon" );
	deepEqual( Stem("bracardi"), "bracard" );
	deepEqual( Stem("braccano"), "bracc" );
	deepEqual( Stem("bracchi"), "bracc" );
	deepEqual( Stem("braccia"), "bracc" );
	deepEqual( Stem("bracciali"), "braccial" );
	deepEqual( Stem("bracciante"), "bracciant" );
	deepEqual( Stem("braccianti"), "bracciant" );
	deepEqual( Stem("bracciate"), "bracc" );
	deepEqual( Stem("bracciere"), "bracc" );
	deepEqual( Stem("braccio"), "bracc" );
	deepEqual( Stem("braccioli"), "bracciol" );
	deepEqual( Stem("bracciolo"), "bracciol" );
	deepEqual( Stem("braccj"), "braccj" );
	deepEqual( Stem("brace"), "brac" );
	deepEqual( Stem("brache"), "brac" );
	deepEqual( Stem("brad"), "brad" );
	deepEqual( Stem("braglia"), "bragl" );
	deepEqual( Stem("bramato"), "bram" );
	deepEqual( Stem("bramava"), "bram" );
	deepEqual( Stem("brambati"), "bramb" );
	deepEqual( Stem("brambilla"), "brambill" );
	deepEqual( Stem("bramerei"), "bram" );
	deepEqual( Stem("bramieri"), "bramier" );
	deepEqual( Stem("bramosi"), "bramos" );
	deepEqual( Stem("branca"), "branc" );
	deepEqual( Stem("branchi"), "branc" );
	deepEqual( Stem("branco"), "branc" );
	deepEqual( Stem("brandeburgo"), "brandeburg" );
	deepEqual( Stem("brandendo"), "brand" );
	deepEqual( Stem("brandisce"), "brand" );
	deepEqual( Stem("brandita"), "brand" );
	deepEqual( Stem("brani"), "bran" );
	deepEqual( Stem("brano"), "bran" );
	deepEqual( Stem("braschi"), "brasc" );
	deepEqual( Stem("brasile"), "brasil" );
	deepEqual( Stem("brasilia"), "brasil" );
	deepEqual( Stem("brasiliana"), "brasilian" );
	deepEqual( Stem("brasiliano"), "brasil" );
	deepEqual( Stem("brasseur"), "brasseur" );
	deepEqual( Stem("brassuer"), "brassuer" );
	deepEqual( Stem("bratislava"), "bratisl" );
	deepEqual( Stem("brav"), "brav" );
	deepEqual( Stem("brava"), "brav" );
	deepEqual( Stem("bravacci"), "bravacc" );
	deepEqual( Stem("bravaccio"), "bravacc" );
	deepEqual( Stem("bravamente"), "brav" );
	deepEqual( Stem("bravate"), "brav" );
	deepEqual( Stem("brave"), "brav" );
	deepEqual( Stem("braveria"), "braver" );
	deepEqual( Stem("braverìa"), "braverì" );
	deepEqual( Stem("braverie"), "braver" );
	deepEqual( Stem("bravi"), "brav" );
	deepEqual( Stem("bravissim"), "bravissim" );
	deepEqual( Stem("bravissima"), "bravissim" );
	deepEqual( Stem("bravissimo"), "bravissim" );
	deepEqual( Stem("bravo"), "brav" );
	deepEqual( Stem("bravura"), "bravur" );
	deepEqual( Stem("breccia"), "brecc" );
	deepEqual( Stem("breda"), "bred" );
	deepEqual( Stem("breefing"), "breefing" );
	deepEqual( Stem("brega"), "breg" );
	deepEqual( Stem("brema"), "brem" );
	deepEqual( Stem("brenta"), "brent" );
	deepEqual( Stem("brescello"), "brescell" );
	deepEqual( Stem("brescia"), "bresc" );
	deepEqual( Stem("bresciana"), "brescian" );
	deepEqual( Stem("bresciani"), "brescian" );
	deepEqual( Stem("bresciano"), "bresc" );
	deepEqual( Stem("breslavia"), "breslav" );
	deepEqual( Stem("bressan"), "bressan" );
	deepEqual( Stem("bretagna"), "bretagn" );
	deepEqual( Stem("breve"), "brev" );
	deepEqual( Stem("brevemente"), "brevement" );
	deepEqual( Stem("brevettarono"), "brevett" );
	deepEqual( Stem("brevettato"), "brevett" );
	deepEqual( Stem("brevi"), "brev" );
	deepEqual( Stem("breviario"), "breviar" );
	deepEqual( Stem("brevissimi"), "brevissim" );
	deepEqual( Stem("brevissimo"), "brevissim" );
	deepEqual( Stem("brevità"), "brevit" );
	deepEqual( Stem("breviun"), "breviun" );
	deepEqual( Stem("breweries"), "breweries" );
	deepEqual( Stem("brezhnev"), "brezhnev" );
	deepEqual( Stem("brezza"), "brezz" );
	deepEqual( Stem("brezzolina"), "brezzolin" );
	deepEqual( Stem("bri"), "bri" );
	deepEqual( Stem("brian"), "brian" );
	deepEqual( Stem("briantea"), "briante" );
	deepEqual( Stem("brianza"), "brianz" );
	deepEqual( Stem("briareo"), "briare" );
	deepEqual( Stem("bricconate"), "briccon" );
	deepEqual( Stem("bricconeria"), "bricconer" );
	deepEqual( Stem("bricconerie"), "bricconer" );
	deepEqual( Stem("briciole"), "briciol" );
	deepEqual( Stem("bridge"), "bridg" );
	deepEqual( Stem("briefing"), "briefing" );
	deepEqual( Stem("briga"), "brig" );
	deepEqual( Stem("brigata"), "brig" );
	deepEqual( Stem("brigate"), "brig" );
	deepEqual( Stem("brigatella"), "brigatell" );
	deepEqual( Stem("brigatista"), "brigat" );
	deepEqual( Stem("brighe"), "brig" );
	deepEqual( Stem("briglia"), "brigl" );
	deepEqual( Stem("brignano"), "brign" );
	deepEqual( Stem("brignone"), "brignon" );
	deepEqual( Stem("brilla"), "brill" );
	deepEqual( Stem("brillante"), "brillant" );
	deepEqual( Stem("brillanti"), "brillant" );
	deepEqual( Stem("brillare"), "brill" );
	deepEqual( Stem("brillato"), "brill" );
	deepEqual( Stem("brillavan"), "brillavan" );
	deepEqual( Stem("brina"), "brin" );
	deepEqual( Stem("brindato"), "brind" );
	deepEqual( Stem("brindisi"), "brindis" );
	deepEqual( Stem("brinner"), "brinner" );
	deepEqual( Stem("brio"), "bri" );
	deepEqual( Stem("brioschi"), "briosc" );
	deepEqual( Stem("brisbane"), "brisban" );
	deepEqual( Stem("britannica"), "britann" );
	deepEqual( Stem("britanniche"), "britann" );
	deepEqual( Stem("britannici"), "britann" );
	deepEqual( Stem("britannico"), "britann" );
	deepEqual( Stem("britannnico"), "britannn" );
	deepEqual( Stem("british"), "british" );
	deepEqual( Stem("brividi"), "brivid" );
	deepEqual( Stem("brivido"), "brivid" );
	deepEqual( Stem("brivio"), "briv" );
	deepEqual( Stem("brm"), "brm" );
	deepEqual( Stem("brn"), "brn" );
	deepEqual( Stem("broadway"), "broadway" );
	deepEqual( Stem("broccato"), "brocc" );
	deepEqual( Stem("brochard"), "brochard" );
	deepEqual( Stem("brodo"), "brod" );
	deepEqual( Stem("broggi"), "brogg" );
	deepEqual( Stem("brogioni"), "brogion" );
	deepEqual( Stem("brontolando"), "brontol" );
	deepEqual( Stem("brontolare"), "brontol" );
	deepEqual( Stem("brontolava"), "brontol" );
	deepEqual( Stem("brontolavano"), "brontol" );
	deepEqual( Stem("brontolìo"), "brontolì" );
	deepEqual( Stem("bronx"), "bronx" );
	deepEqual( Stem("bronzo"), "bronz" );
	deepEqual( Stem("brooke"), "brook" );
	deepEqual( Stem("brooklyn"), "brooklyn" );
	deepEqual( Stem("bruce"), "bruc" );
	deepEqual( Stem("brucerebbe"), "bruc" );
	deepEqual( Stem("brucerete"), "bruc" );
	deepEqual( Stem("brucia"), "bruc" );
	deepEqual( Stem("bruciar"), "bruc" );
	deepEqual( Stem("bruciare"), "bruc" );
	deepEqual( Stem("bruciata"), "bruc" );
	deepEqual( Stem("bruciati"), "bruc" );
	deepEqual( Stem("bruciato"), "bruc" );
	deepEqual( Stem("bruciatore"), "bruciator" );
	deepEqual( Stem("bruciavan"), "bruciavan" );
	deepEqual( Stem("bruciavano"), "bruc" );
	deepEqual( Stem("bruciò"), "bruc" );
	deepEqual( Stem("bruciore"), "brucior" );
	deepEqual( Stem("bruges"), "bruges" );
	deepEqual( Stem("brulica"), "brulic" );
	deepEqual( Stem("brulicar"), "brulic" );
	deepEqual( Stem("brulicava"), "brulic" );
	deepEqual( Stem("brulicavano"), "brulic" );
	deepEqual( Stem("brulichìo"), "brulichì" );
	deepEqual( Stem("bruna"), "brun" );
	deepEqual( Stem("brune"), "brun" );
	deepEqual( Stem("brunico"), "brunic" );
	deepEqual( Stem("brunner"), "brunner" );
	deepEqual( Stem("bruno"), "brun" );
	deepEqual( Stem("brusca"), "brusc" );
	deepEqual( Stem("bruscamente"), "brusc" );
	deepEqual( Stem("brusche"), "brusc" );
	deepEqual( Stem("brusco"), "brusc" );
	deepEqual( Stem("brutale"), "brutal" );
	deepEqual( Stem("brutalmente"), "brutal" );
	deepEqual( Stem("bruto"), "brut" );
	deepEqual( Stem("brutta"), "brutt" );
	deepEqual( Stem("bruttamente"), "brutt" );
	deepEqual( Stem("brutte"), "brutt" );
	deepEqual( Stem("brutti"), "brutt" );
	deepEqual( Stem("brutto"), "brutt" );
	deepEqual( Stem("bruxelles"), "bruxelles" );
	deepEqual( Stem("bs"), "bs" );
	deepEqual( Stem("bsa"), "bsa" );
	deepEqual( Stem("btp"), "btp" );
	deepEqual( Stem("bu"), "bu" );
	deepEqual( Stem("bubbole"), "bubbol" );
	deepEqual( Stem("bubbone"), "bubbon" );
	deepEqual( Stem("bubboni"), "bubbon" );
	deepEqual( Stem("bubolz"), "bubolz" );
	deepEqual( Stem("buca"), "buc" );
	deepEqual( Stem("bucarest"), "bucarest" );
	deepEqual( Stem("bucaro"), "bucar" );
	deepEqual( Stem("bucatino"), "bucatin" );
	deepEqual( Stem("bucato"), "buc" );
	deepEqual( Stem("bucce"), "bucc" );
	deepEqual( Stem("bucci"), "bucc" );
	deepEqual( Stem("bucciarelli"), "bucciarell" );
	deepEqual( Stem("buche"), "buch" );
	deepEqual( Stem("buchenwald"), "buchenwald" );
	deepEqual( Stem("buchi"), "buch" );
	deepEqual( Stem("buco"), "buc" );
	deepEqual( Stem("bucò"), "buc" );
	deepEqual( Stem("budapest"), "budapest" );
	deepEqual( Stem("budermes"), "budermes" );
	deepEqual( Stem("buduau"), "buduau" );
	deepEqual( Stem("bue"), "bue" );
	deepEqual( Stem("buenos"), "buenos" );
	deepEqual( Stem("bufera"), "bufer" );
	deepEqual( Stem("bufere"), "buf" );
	deepEqual( Stem("buffa"), "buff" );
	deepEqual( Stem("buffet"), "buffet" );
	deepEqual( Stem("buffetteria"), "buffetter" );
	deepEqual( Stem("buffone"), "buffon" );
	deepEqual( Stem("buffoneria"), "buffoner" );
	deepEqual( Stem("buffoni"), "buffon" );
	deepEqual( Stem("bugatti"), "bugatt" );
	deepEqual( Stem("bugia"), "bug" );
	deepEqual( Stem("bugiarda"), "bugiard" );
	deepEqual( Stem("bugiardo"), "bugiard" );
	deepEqual( Stem("bugiardona"), "bugiardon" );
	deepEqual( Stem("bugie"), "bug" );
	deepEqual( Stem("bugigattoli"), "bugigattol" );
	deepEqual( Stem("bugigattolo"), "bugigattol" );
	deepEqual( Stem("buglione"), "buglion" );
	deepEqual( Stem("bugno"), "bugn" );
	deepEqual( Stem("bui"), "bui" );
	deepEqual( Stem("building"), "building" );
	deepEqual( Stem("buio"), "bui" );
	deepEqual( Stem("bulgara"), "bulgar" );
	deepEqual( Stem("bulgarelli"), "bulgarell" );
	deepEqual( Stem("bulgaria"), "bulgar" );
	deepEqual( Stem("bull"), "bull" );
	deepEqual( Stem("bulletta"), "bullett" );
	deepEqual( Stem("bullette"), "bullett" );
	deepEqual( Stem("bum"), "bum" );
	deepEqual( Stem("bundesbank"), "bundesbank" );
	deepEqual( Stem("bundesgerichtshof"), "bundesgerichtshof" );
	deepEqual( Stem("bunkers"), "bunkers" );
	deepEqual( Stem("bunny"), "bunny" );
	deepEqual( Stem("buon"), "buon" );
	deepEqual( Stem("buona"), "buon" );
	deepEqual( Stem("buone"), "buon" );
	deepEqual( Stem("buoni"), "buon" );
	deepEqual( Stem("buono"), "buon" );
	deepEqual( Stem("buontà"), "buont" );
	deepEqual( Stem("burattello"), "burattell" );
	deepEqual( Stem("burattinaio"), "burattinai" );
	deepEqual( Stem("burberi"), "burber" );
	deepEqual( Stem("burbero"), "burber" );
	deepEqual( Stem("burgenland"), "burgenland" );
	deepEqual( Stem("burgeto"), "burget" );
	deepEqual( Stem("burgo"), "burg" );
	deepEqual( Stem("burhanuddin"), "burhanuddin" );
	deepEqual( Stem("burkina"), "burkin" );
	deepEqual( Stem("burla"), "burl" );
	deepEqual( Stem("burlato"), "burl" );
	deepEqual( Stem("burlesco"), "burlesc" );
	deepEqual( Stem("burns"), "burns" );
	deepEqual( Stem("burocratiche"), "burocrat" );
	deepEqual( Stem("burocratico"), "burocrat" );
	deepEqual( Stem("burocrazia"), "burocraz" );
	deepEqual( Stem("burrasca"), "burrasc" );
	deepEqual( Stem("burrasche"), "burrasc" );
	deepEqual( Stem("burrascosa"), "burrasc" );
	deepEqual( Stem("burro"), "burr" );
	deepEqual( Stem("burrone"), "burron" );
	deepEqual( Stem("burroni"), "burron" );
	deepEqual( Stem("bus"), "bus" );
	deepEqual( Stem("buscar"), "busc" );
	deepEqual( Stem("buscarsi"), "busc" );
	deepEqual( Stem("buscarti"), "busc" );
	deepEqual( Stem("buscato"), "busc" );
	deepEqual( Stem("buscherei"), "busc" );
	deepEqual( Stem("bush"), "bush" );
	deepEqual( Stem("busilis"), "busilis" );
	deepEqual( Stem("business"), "business" );
	deepEqual( Stem("buso"), "bus" );
	deepEqual( Stem("busquets"), "busquets" );
	deepEqual( Stem("bussano"), "buss" );
	deepEqual( Stem("bussasse"), "buss" );
	deepEqual( Stem("busse"), "buss" );
	deepEqual( Stem("bussola"), "bussol" );
	deepEqual( Stem("bussolotti"), "bussolott" );
	deepEqual( Stem("bustine"), "bustin" );
	deepEqual( Stem("busto"), "bust" );
	deepEqual( Stem("butta"), "butt" );
	deepEqual( Stem("buttan"), "buttan" );
	deepEqual( Stem("buttando"), "butt" );
	deepEqual( Stem("buttandosegli"), "buttandosegl" );
	deepEqual( Stem("buttandosi"), "butt" );
	deepEqual( Stem("buttane"), "buttan" );
	deepEqual( Stem("buttar"), "butt" );
	deepEqual( Stem("buttare"), "butt" );
	deepEqual( Stem("buttarglielo"), "butt" );
	deepEqual( Stem("buttarle"), "butt" );
	deepEqual( Stem("buttarono"), "butt" );
	deepEqual( Stem("buttarsi"), "butt" );
	deepEqual( Stem("buttasse"), "butt" );
	deepEqual( Stem("buttassi"), "butt" );
	deepEqual( Stem("buttata"), "butt" );
	deepEqual( Stem("buttate"), "butt" );
	deepEqual( Stem("buttati"), "butt" );
	deepEqual( Stem("buttato"), "butt" );
	deepEqual( Stem("butterei"), "butt" );
	deepEqual( Stem("butterò"), "butt" );
	deepEqual( Stem("butti"), "butt" );
	deepEqual( Stem("buttiglione"), "buttiglion" );
	deepEqual( Stem("butto"), "butt" );
	deepEqual( Stem("buttò"), "butt" );
	deepEqual( Stem("buy"), "buy" );
	deepEqual( Stem("bvb"), "bvb" );
	deepEqual( Stem("c"), "c" );
	deepEqual( Stem("ca"), "ca" );
	deepEqual( Stem("cab"), "cab" );
	deepEqual( Stem("cabala"), "cabal" );
	deepEqual( Stem("cabale"), "cabal" );
	deepEqual( Stem("cabardino"), "cabardin" );
	deepEqual( Stem("cabina"), "cabin" );
	deepEqual( Stem("cabinati"), "cabin" );
	deepEqual( Stem("cabine"), "cabin" );
	deepEqual( Stem("cablata"), "cabl" );
	deepEqual( Stem("cabotaggio"), "cabotagg" );
	deepEqual( Stem("cabrini"), "cabrin" );
	deepEqual( Stem("cac"), "cac" );
	deepEqual( Stem("cacce"), "cacc" );
	deepEqual( Stem("caccia"), "cacc" );
	deepEqual( Stem("cacciabombardieri"), "cacciabombardier" );
	deepEqual( Stem("cacciamine"), "cacciamin" );
	deepEqual( Stem("caccian"), "caccian" );
	deepEqual( Stem("cacciando"), "cacc" );
	deepEqual( Stem("cacciandosi"), "cacc" );
	deepEqual( Stem("cacciare"), "cacc" );
	deepEqual( Stem("cacciari"), "cacciar" );
	deepEqual( Stem("cacciarli"), "cacc" );
	deepEqual( Stem("cacciarlo"), "cacc" );
	deepEqual( Stem("cacciarsi"), "cacc" );
	deepEqual( Stem("cacciassero"), "cacc" );
	deepEqual( Stem("cacciata"), "cacc" );
	deepEqual( Stem("cacciate"), "cacc" );
	deepEqual( Stem("cacciati"), "cacc" );
	deepEqual( Stem("cacciato"), "cacc" );
	deepEqual( Stem("cacciatore"), "cacciator" );
	deepEqual( Stem("cacciatovisi"), "cacciatovis" );
	deepEqual( Stem("cacciava"), "cacc" );
	deepEqual( Stem("cacciavano"), "cacc" );
	deepEqual( Stem("cacciavite"), "cacciav" );
	deepEqual( Stem("cacciò"), "cacc" );
	deepEqual( Stem("cadaueri"), "cadauer" );
	deepEqual( Stem("cadavere"), "cadav" );
	deepEqual( Stem("cadaveri"), "cadaver" );
	deepEqual( Stem("cadde"), "cadd" );
	deepEqual( Stem("caddero"), "cadder" );
	deepEqual( Stem("cade"), "cad" );
	deepEqual( Stem("cadente"), "cadent" );
	deepEqual( Stem("cadeo"), "cade" );
	deepEqual( Stem("cader"), "cader" );
	deepEqual( Stem("cadere"), "cad" );
	deepEqual( Stem("cadete"), "cad" );
	deepEqual( Stem("cadetti"), "cadett" );
	deepEqual( Stem("cadetto"), "cadett" );
	deepEqual( Stem("cadeva"), "cad" );
	deepEqual( Stem("cadevan"), "cadevan" );
	deepEqual( Stem("cadevano"), "cad" );
	deepEqual( Stem("cadono"), "cad" );
	deepEqual( Stem("cadrebbe"), "cadrebb" );
	deepEqual( Stem("cadsand"), "cadsand" );
	deepEqual( Stem("caduta"), "cad" );
	deepEqual( Stem("cadute"), "cad" );
	deepEqual( Stem("caduti"), "cad" );
	deepEqual( Stem("caduto"), "cad" );
	deepEqual( Stem("caen"), "caen" );
	deepEqual( Stem("caf"), "caf" );
	deepEqual( Stem("cafè"), "caf" );
	deepEqual( Stem("caffaro"), "caffar" );
	deepEqual( Stem("caffe"), "caff" );
	deepEqual( Stem("caffè"), "caff" );
	deepEqual( Stem("caffeina"), "caffein" );
	deepEqual( Stem("caffo"), "caff" );
	deepEqual( Stem("cafiero"), "cafier" );
	deepEqual( Stem("cagion"), "cagion" );
	deepEqual( Stem("cagionarono"), "cagion" );
	deepEqual( Stem("cagionata"), "cagion" );
	deepEqual( Stem("cagionati"), "cagion" );
	deepEqual( Stem("cagionava"), "cagion" );
	deepEqual( Stem("cagione"), "cagion" );
	deepEqual( Stem("cagioni"), "cagion" );
	deepEqual( Stem("cagionò"), "cagion" );
	deepEqual( Stem("cagiva"), "cag" );
	deepEqual( Stem("cagliari"), "cagliar" );
	deepEqual( Stem("cagliaritana"), "cagliaritan" );
	deepEqual( Stem("cagnaccio"), "cagnacc" );
	deepEqual( Stem("cagnesco"), "cagnesc" );
	deepEqual( Stem("cagni"), "cagn" );
	deepEqual( Stem("cagnolini"), "cagnolin" );
	deepEqual( Stem("caiazzo"), "caiazz" );
	deepEqual( Stem("cain"), "cain" );
	deepEqual( Stem("caini"), "cain" );
	deepEqual( Stem("caio"), "cai" );
	deepEqual( Stem("cairo"), "cair" );
	deepEqual( Stem("caiyun"), "caiyun" );
	deepEqual( Stem("cala"), "cal" );
	deepEqual( Stem("calà"), "cal" );
	deepEqual( Stem("calabria"), "calabr" );
	deepEqual( Stem("calamaio"), "calamai" );
	deepEqual( Stem("calamità"), "calam" );
	deepEqual( Stem("calano"), "cal" );
	deepEqual( Stem("calante"), "calant" );
	deepEqual( Stem("calar"), "cal" );
	deepEqual( Stem("calare"), "cal" );
	deepEqual( Stem("calarlo"), "cal" );
	deepEqual( Stem("calata"), "cal" );
	deepEqual( Stem("calate"), "cal" );
	deepEqual( Stem("calatemi"), "calatem" );
	deepEqual( Stem("calati"), "cal" );
	deepEqual( Stem("calato"), "cal" );
	deepEqual( Stem("calca"), "calc" );
	deepEqual( Stem("calcagni"), "calcagn" );
	deepEqual( Stem("calce"), "calc" );
	deepEqual( Stem("calcestruzzi"), "calcestruzz" );
	deepEqual( Stem("calche"), "calc" );
	deepEqual( Stem("calci"), "calc" );
	deepEqual( Stem("calciare"), "calc" );
	deepEqual( Stem("calciasse"), "calc" );
	deepEqual( Stem("calciato"), "calc" );
	deepEqual( Stem("calciatore"), "calciator" );
	deepEqual( Stem("calciatori"), "calciator" );
	deepEqual( Stem("calcio"), "calc" );
	deepEqual( Stem("calciò"), "calc" );
	deepEqual( Stem("calcistica"), "calcist" );
	deepEqual( Stem("calcistiche"), "calcist" );
	deepEqual( Stem("calcium"), "calcium" );
	deepEqual( Stem("calcolar"), "calcol" );
	deepEqual( Stem("calcolare"), "calcol" );
	deepEqual( Stem("calcolata"), "calcol" );
	deepEqual( Stem("calcolate"), "calcol" );
	deepEqual( Stem("calcolato"), "calcol" );
	deepEqual( Stem("calcolava"), "calcol" );
	deepEqual( Stem("calcoli"), "calcol" );
	deepEqual( Stem("calcolo"), "calcol" );
	deepEqual( Stem("calcutta"), "calcutt" );
	deepEqual( Stem("calda"), "cald" );
	deepEqual( Stem("caldaia"), "caldai" );
	deepEqual( Stem("caldaie"), "caldai" );
	deepEqual( Stem("caldamente"), "cald" );
	deepEqual( Stem("caldarola"), "caldarol" );
	deepEqual( Stem("calde"), "cald" );
	deepEqual( Stem("caldea"), "calde" );
	deepEqual( Stem("calderan"), "calderan" );
	deepEqual( Stem("calderisi"), "calderis" );
	deepEqual( Stem("calderotto"), "calderott" );
	deepEqual( Stem("caldo"), "cald" );
	deepEqual( Stem("caleffi"), "caleff" );
	deepEqual( Stem("calendari"), "calendar" );
	deepEqual( Stem("calendario"), "calendar" );
	deepEqual( Stem("calesse"), "caless" );
	deepEqual( Stem("calessino"), "calessin" );
	deepEqual( Stem("calgary"), "calgary" );
	deepEqual( Stem("cali"), "cal" );
	deepEqual( Stem("calibro"), "calibr" );
	deepEqual( Stem("calice"), "calic" );
	deepEqual( Stem("calici"), "calic" );
	deepEqual( Stem("california"), "californ" );
	deepEqual( Stem("calleri"), "caller" );
	deepEqual( Stem("calma"), "calm" );
	deepEqual( Stem("calmare"), "calm" );
	deepEqual( Stem("calo"), "cal" );
	deepEqual( Stem("calò"), "cal" );
	deepEqual( Stem("calodi"), "calod" );
	deepEqual( Stem("calore"), "calor" );
	deepEqual( Stem("calori"), "calor" );
	deepEqual( Stem("calorosa"), "calor" );
	deepEqual( Stem("caloroso"), "calor" );
	deepEqual( Stem("calp"), "calp" );
	deepEqual( Stem("calpestando"), "calpest" );
	deepEqual( Stem("calpestarlo"), "calpest" );
	deepEqual( Stem("calpestato"), "calpest" );
	deepEqual( Stem("calpestava"), "calpest" );
	deepEqual( Stem("calpestìo"), "calpestì" );
	deepEqual( Stem("caltagirone"), "caltagiron" );
	deepEqual( Stem("caltanissetta"), "caltanissett" );
	deepEqual( Stem("calunnia"), "calunn" );
	deepEqual( Stem("calunniato"), "calunn" );
	deepEqual( Stem("calvi"), "calv" );
	deepEqual( Stem("calvino"), "calvin" );
	deepEqual( Stem("calvisano"), "calvis" );
	deepEqual( Stem("calvo"), "calv" );
	deepEqual( Stem("calzature"), "calzatur" );
	deepEqual( Stem("calzaturif"), "calzaturif" );
	deepEqual( Stem("calzaturificio"), "calzaturific" );
	deepEqual( Stem("calze"), "calz" );
	deepEqual( Stem("calzia"), "calz" );
	deepEqual( Stem("calzoni"), "calzon" );
	deepEqual( Stem("cam"), "cam" );
	deepEqual( Stem("camar"), "cam" );
	deepEqual( Stem("cambi"), "camb" );
	deepEqual( Stem("cambia"), "camb" );
	deepEqual( Stem("cambiamenti"), "camb" );
	deepEqual( Stem("cambiamento"), "camb" );
	deepEqual( Stem("cambiamo"), "camb" );
	deepEqual( Stem("cambiando"), "camb" );
	deepEqual( Stem("cambiandosi"), "camb" );
	deepEqual( Stem("cambiano"), "camb" );
	deepEqual( Stem("cambiar"), "camb" );
	deepEqual( Stem("cambiare"), "camb" );
	deepEqual( Stem("cambiari"), "cambiar" );
	deepEqual( Stem("cambiarsi"), "camb" );
	deepEqual( Stem("cambiasse"), "camb" );
	deepEqual( Stem("cambiata"), "camb" );
	deepEqual( Stem("cambiate"), "camb" );
	deepEqual( Stem("cambiati"), "camb" );
	deepEqual( Stem("cambiato"), "camb" );
	deepEqual( Stem("cambiava"), "camb" );
	deepEqual( Stem("cambiavano"), "camb" );
	deepEqual( Stem("cambierà"), "camb" );
	deepEqual( Stem("cambierò"), "camb" );
	deepEqual( Stem("cambio"), "camb" );
	deepEqual( Stem("cambiò"), "camb" );
	deepEqual( Stem("cambisti"), "cambist" );
	deepEqual( Stem("cameleonte"), "cameleont" );
	deepEqual( Stem("camera"), "camer" );
	deepEqual( Stem("camerali"), "cameral" );
	deepEqual( Stem("cameramam"), "cameramam" );
	deepEqual( Stem("cameraman"), "cameraman" );
	deepEqual( Stem("cameramen"), "cameramen" );
	deepEqual( Stem("camerata"), "camer" );
	deepEqual( Stem("camere"), "cam" );
	deepEqual( Stem("cameriera"), "camerier" );
	deepEqual( Stem("cameriere"), "camer" );
	deepEqual( Stem("cameriero"), "camerier" );
	deepEqual( Stem("cameroun"), "cameroun" );
	deepEqual( Stem("camfin"), "camfin" );
	deepEqual( Stem("camice"), "camic" );
	deepEqual( Stem("camici"), "camic" );
	deepEqual( Stem("camicia"), "camic" );
	deepEqual( Stem("camicie"), "camic" );
	deepEqual( Stem("camion"), "camion" );
	deepEqual( Stem("camionette"), "camionett" );
	deepEqual( Stem("cammarata"), "cammar" );
	deepEqual( Stem("cammera"), "cammer" );
	deepEqual( Stem("cammin"), "cammin" );
	deepEqual( Stem("cammina"), "cammin" );
	deepEqual( Stem("camminando"), "cammin" );
	deepEqual( Stem("camminano"), "cammin" );
	deepEqual( Stem("camminar"), "cammin" );
	deepEqual( Stem("camminare"), "cammin" );
	deepEqual( Stem("camminarono"), "cammin" );
	deepEqual( Stem("camminasse"), "cammin" );
	deepEqual( Stem("camminata"), "cammin" );
	deepEqual( Stem("camminato"), "cammin" );
	deepEqual( Stem("camminava"), "cammin" );
	deepEqual( Stem("camminavan"), "camminavan" );
	deepEqual( Stem("camminavano"), "cammin" );
	deepEqual( Stem("cammino"), "cammin" );
	deepEqual( Stem("camminò"), "cammin" );
	deepEqual( Stem("camorra"), "camorr" );
	deepEqual( Stem("camorristici"), "camorrist" );
	deepEqual( Stem("campa"), "camp" );
	deepEqual( Stem("campagna"), "campagn" );
	deepEqual( Stem("campagne"), "campagn" );
	deepEqual( Stem("campale"), "campal" );
	deepEqual( Stem("campana"), "campan" );
	deepEqual( Stem("campane"), "campan" );
	deepEqual( Stem("campanelle"), "campanell" );
	deepEqual( Stem("campanelli"), "campanell" );
	deepEqual( Stem("campanello"), "campanell" );
	deepEqual( Stem("campanette"), "campanett" );
	deepEqual( Stem("campani"), "campan" );
	deepEqual( Stem("campania"), "campan" );
	deepEqual( Stem("campanile"), "campanil" );
	deepEqual( Stem("campanili"), "campanil" );
	deepEqual( Stem("campanilistici"), "campanilist" );
	deepEqual( Stem("campar"), "camp" );
	deepEqual( Stem("campare"), "camp" );
	deepEqual( Stem("campati"), "camp" );
	deepEqual( Stem("campeggia"), "campegg" );
	deepEqual( Stem("campeggiava"), "campegg" );
	deepEqual( Stem("camperai"), "camp" );
	deepEqual( Stem("camperebbe"), "camp" );
	deepEqual( Stem("camperemo"), "camp" );
	deepEqual( Stem("campestre"), "campestr" );
	deepEqual( Stem("campi"), "camp" );
	deepEqual( Stem("campiamo"), "camp" );
	deepEqual( Stem("campicelli"), "campicell" );
	deepEqual( Stem("campicello"), "campicell" );
	deepEqual( Stem("campienza"), "campienz" );
	deepEqual( Stem("campilongo"), "campilong" );
	deepEqual( Stem("campionati"), "campion" );
	deepEqual( Stem("campionato"), "campion" );
	deepEqual( Stem("campione"), "campion" );
	deepEqual( Stem("campioni"), "campion" );
	deepEqual( Stem("campo"), "camp" );
	deepEqual( Stem("campobasso"), "campobass" );
	deepEqual( Stem("campolo"), "campol" );
	deepEqual( Stem("can"), "can" );
	deepEqual( Stem("canada"), "canad" );
	deepEqual( Stem("canadese"), "canades" );
	deepEqual( Stem("canadesi"), "canades" );
	deepEqual( Stem("canaglia"), "canagl" );
	deepEqual( Stem("canale"), "canal" );
	deepEqual( Stem("canali"), "canal" );
	deepEqual( Stem("canalizzazioni"), "canalizz" );
	deepEqual( Stem("cancellar"), "cancell" );
	deepEqual( Stem("cancellare"), "cancell" );
	deepEqual( Stem("cancellata"), "cancell" );
	deepEqual( Stem("cancellati"), "cancell" );
	deepEqual( Stem("cancellato"), "cancell" );
	deepEqual( Stem("cancellazione"), "cancell" );
	deepEqual( Stem("cancellazioni"), "cancell" );
	deepEqual( Stem("cancelli"), "cancell" );
	deepEqual( Stem("cancellierato"), "cancellier" );
	deepEqual( Stem("cancelliere"), "cancell" );
	deepEqual( Stem("cancello"), "cancell" );
	deepEqual( Stem("canchero"), "cancher" );
	deepEqual( Stem("cancro"), "cancr" );
	deepEqual( Stem("candela"), "candel" );
	deepEqual( Stem("candele"), "candel" );
	deepEqual( Stem("candidare"), "candid" );
	deepEqual( Stem("candidarsi"), "candid" );
	deepEqual( Stem("candidati"), "candid" );
	deepEqual( Stem("candidato"), "candid" );
	deepEqual( Stem("candidatura"), "candidatur" );
	deepEqual( Stem("candidature"), "candidatur" );
	deepEqual( Stem("candide"), "candid" );
	deepEqual( Stem("candor"), "candor" );
	deepEqual( Stem("candore"), "candor" );
	deepEqual( Stem("candy"), "candy" );
	deepEqual( Stem("cane"), "can" );
	deepEqual( Stem("canè"), "can" );
	deepEqual( Stem("canelli"), "canell" );
	deepEqual( Stem("cangiò"), "cang" );
	deepEqual( Stem("cani"), "can" );
	deepEqual( Stem("canins"), "canins" );
	deepEqual( Stem("canio"), "can" );
	deepEqual( Stem("canizie"), "caniz" );
	deepEqual( Stem("canmore"), "canmor" );
	deepEqual( Stem("canna"), "cann" );
	deepEqual( Stem("cannavaro"), "cannavar" );
	deepEqual( Stem("canne"), "cann" );
	deepEqual( Stem("cannes"), "cannes" );
	deepEqual( Stem("cannistrà"), "cannistr" );
	deepEqual( Stem("cannoncini"), "cannoncin" );
	deepEqual( Stem("cannoncino"), "cannoncin" );
	deepEqual( Stem("cannoniere"), "cannon" );
	deepEqual( Stem("canoe"), "cano" );
	deepEqual( Stem("canoni"), "canon" );
	deepEqual( Stem("canonica"), "canon" );
	deepEqual( Stem("canonici"), "canon" );
	deepEqual( Stem("canonico"), "canon" );
	deepEqual( Stem("canovaccio"), "canovacc" );
	deepEqual( Stem("canta"), "cant" );
	deepEqual( Stem("cantambanchi"), "cantambanc" );
	deepEqual( Stem("cantando"), "cant" );
	deepEqual( Stem("cantante"), "cantant" );
	deepEqual( Stem("cantanti"), "cantant" );
	deepEqual( Stem("cantar"), "cant" );
	deepEqual( Stem("cantare"), "cant" );
	deepEqual( Stem("cantarotti"), "cantarott" );
	deepEqual( Stem("cantarutti"), "cantarutt" );
	deepEqual( Stem("cantautrice"), "cantautr" );
	deepEqual( Stem("cantava"), "cant" );
	deepEqual( Stem("cantavano"), "cant" );
	deepEqual( Stem("canterelli"), "canterell" );
	deepEqual( Stem("canti"), "cant" );
	deepEqual( Stem("cantiere"), "cant" );
	deepEqual( Stem("cantieri"), "cantier" );
	deepEqual( Stem("cantieristica"), "cantierist" );
	deepEqual( Stem("cantilena"), "cantilen" );
	deepEqual( Stem("cantina"), "cantin" );
	deepEqual( Stem("canto"), "cant" );
	deepEqual( Stem("cantona"), "canton" );
	deepEqual( Stem("cantonata"), "canton" );
	deepEqual( Stem("cantonate"), "canton" );
	deepEqual( Stem("cantoni"), "canton" );
	deepEqual( Stem("cantù"), "cantù" );
	deepEqual( Stem("cantucci"), "cantucc" );
	deepEqual( Stem("cantuccino"), "cantuccin" );
	deepEqual( Stem("cantuccio"), "cantucc" );
	deepEqual( Stem("canuti"), "can" );
	deepEqual( Stem("canyon"), "canyon" );
	deepEqual( Stem("canzanella"), "canzanell" );
	deepEqual( Stem("canzonaccia"), "canzonacc" );
	deepEqual( Stem("canzonare"), "canzon" );
	deepEqual( Stem("canzonarlo"), "canzon" );
	deepEqual( Stem("canzonatoria"), "canzonator" );
	deepEqual( Stem("canzonatorie"), "canzonator" );
	deepEqual( Stem("canzonatorio"), "canzonator" );
	deepEqual( Stem("canzonature"), "canzonatur" );
	deepEqual( Stem("canzone"), "canzon" );
	deepEqual( Stem("canzoni"), "canzon" );
	deepEqual( Stem("canzonieri"), "canzonier" );
	deepEqual( Stem("cao"), "cao" );
	deepEqual( Stem("caos"), "caos" );
	deepEqual( Stem("cap"), "cap" );
	deepEqual( Stem("capa"), "cap" );
	deepEqual( Stem("capace"), "capac" );
	deepEqual( Stem("capaci"), "capac" );
	deepEqual( Stem("capacità"), "capac" );
	deepEqual( Stem("capacitata"), "capacit" );
	deepEqual( Stem("capaciterà"), "capacit" );
	deepEqual( Stem("capanna"), "capann" );
	deepEqual( Stem("capanne"), "capann" );
	deepEqual( Stem("capannuccia"), "capannucc" );
	deepEqual( Stem("caparbietà"), "caparbiet" );
	deepEqual( Stem("caparbio"), "caparb" );
	deepEqual( Stem("caparra"), "caparr" );
	deepEqual( Stem("caparrare"), "caparr" );
	deepEqual( Stem("capecchi"), "capecc" );
	deepEqual( Stem("capeggiata"), "capegg" );
	deepEqual( Stem("capelli"), "capell" );
	deepEqual( Stem("capello"), "capell" );
	deepEqual( Stem("capezzale"), "capezzal" );
	deepEqual( Stem("capi"), "cap" );
	deepEqual( Stem("capì"), "cap" );
	deepEqual( Stem("capigliatura"), "capigliatur" );
	deepEqual( Stem("capigliature"), "capigliatur" );
	deepEqual( Stem("capigruppo"), "capigrupp" );
	deepEqual( Stem("capillare"), "capill" );
	deepEqual( Stem("capir"), "cap" );
	deepEqual( Stem("capirà"), "cap" );
	deepEqual( Stem("capiranno"), "cap" );
	deepEqual( Stem("capire"), "cap" );
	deepEqual( Stem("capirlo"), "cap" );
	deepEqual( Stem("capisaldi"), "capisald" );
	deepEqual( Stem("capisce"), "cap" );
	deepEqual( Stem("capisco"), "cap" );
	deepEqual( Stem("capiscon"), "capiscon" );
	deepEqual( Stem("capiscono"), "cap" );
	deepEqual( Stem("capita"), "cap" );
	deepEqual( Stem("capital"), "capital" );
	deepEqual( Stem("capitalcredit"), "capitalcredit" );
	deepEqual( Stem("capitale"), "capital" );
	deepEqual( Stem("capitalfit"), "capitalfit" );
	deepEqual( Stem("capitalfondo"), "capitalfond" );
	deepEqual( Stem("capitalgest"), "capitalgest" );
	deepEqual( Stem("capitali"), "capital" );
	deepEqual( Stem("capitalismo"), "capital" );
	deepEqual( Stem("capitalizzare"), "capitalizz" );
	deepEqual( Stem("capitalizzazione"), "capitalizz" );
	deepEqual( Stem("capitalras"), "capitalras" );
	deepEqual( Stem("capitan"), "capitan" );
	deepEqual( Stem("capitanei"), "capitane" );
	deepEqual( Stem("capitaneria"), "capitaner" );
	deepEqual( Stem("capitanerie"), "capitaner" );
	deepEqual( Stem("capitani"), "capitan" );
	deepEqual( Stem("capitano"), "capit" );
	deepEqual( Stem("capitanucci"), "capitanucc" );
	deepEqual( Stem("capitar"), "capit" );
	deepEqual( Stem("capitare"), "capit" );
	deepEqual( Stem("capitarono"), "capit" );
	deepEqual( Stem("capitasse"), "capit" );
	deepEqual( Stem("capitata"), "capit" );
	deepEqual( Stem("capitate"), "capit" );
	deepEqual( Stem("capitati"), "capit" );
	deepEqual( Stem("capitato"), "capit" );
	deepEqual( Stem("capitava"), "capit" );
	deepEqual( Stem("capite"), "cap" );
	deepEqual( Stem("capiti"), "cap" );
	deepEqual( Stem("capito"), "cap" );
	deepEqual( Stem("capitò"), "capit" );
	deepEqual( Stem("capitoli"), "capitol" );
	deepEqual( Stem("capitolo"), "capitol" );
	deepEqual( Stem("capitombolo"), "capitombol" );
	deepEqual( Stem("capitorno"), "capitorn" );
	deepEqual( Stem("capiva"), "cap" );
	deepEqual( Stem("capivano"), "cap" );
	deepEqual( Stem("capo"), "cap" );
	deepEqual( Stem("capò"), "cap" );
	deepEqual( Stem("capobanda"), "capoband" );
	deepEqual( Stem("capocannoniere"), "capocannon" );
	deepEqual( Stem("capocchie"), "capocc" );
	deepEqual( Stem("capocomici"), "capocom" );
	deepEqual( Stem("capocordata"), "capocord" );
	deepEqual( Stem("capodanno"), "capodann" );
	deepEqual( Stem("capogruppo"), "capogrupp" );
	deepEqual( Stem("capolavoro"), "capolavor" );
	deepEqual( Stem("capolinea"), "capoline" );
	deepEqual( Stem("capolini"), "capolin" );
	deepEqual( Stem("capolino"), "capolin" );
	deepEqual( Stem("capoluogo"), "capoluog" );
	deepEqual( Stem("capopolo"), "capopol" );
	deepEqual( Stem("caporalaccio"), "caporalacc" );
	deepEqual( Stem("caporedattori"), "caporedattor" );
	deepEqual( Stem("capovolgimento"), "capovolg" );
	deepEqual( Stem("capovolti"), "capovolt" );
	deepEqual( Stem("cappa"), "capp" );
	deepEqual( Stem("cappe"), "capp" );
	deepEqual( Stem("cappella"), "cappell" );
	deepEqual( Stem("cappellaccio"), "cappellacc" );
	deepEqual( Stem("cappellano"), "cappell" );
	deepEqual( Stem("cappelletti"), "cappellett" );
	deepEqual( Stem("cappelli"), "cappell" );
	deepEqual( Stem("cappellini"), "cappellin" );
	deepEqual( Stem("cappello"), "cappell" );
	deepEqual( Stem("cappellotto"), "cappellott" );
	deepEqual( Stem("cappioli"), "cappiol" );
	deepEqual( Stem("cappone"), "cappon" );
	deepEqual( Stem("capponi"), "cappon" );
	deepEqual( Stem("cappucci"), "cappucc" );
	deepEqual( Stem("cappuccinesca"), "cappuccinesc" );
	deepEqual( Stem("cappuccinesco"), "cappuccinesc" );
	deepEqual( Stem("cappuccini"), "cappuccin" );
	deepEqual( Stem("cappuccino"), "cappuccin" );
	deepEqual( Stem("cappuccio"), "cappucc" );
	deepEqual( Stem("capra"), "capr" );
	deepEqual( Stem("capre"), "capr" );
	deepEqual( Stem("capricci"), "capricc" );
	deepEqual( Stem("capriccio"), "capricc" );
	deepEqual( Stem("capricciose"), "capricc" );
	deepEqual( Stem("caprioglio"), "capriogl" );
	deepEqual( Stem("captata"), "capt" );
	deepEqual( Stem("capucines"), "capucines" );
	deepEqual( Stem("caputi"), "cap" );
	deepEqual( Stem("car"), "car" );
	deepEqual( Stem("cara"), "car" );
	deepEqual( Stem("carabina"), "carabin" );
	deepEqual( Stem("carabinieri"), "carabinier" );
	deepEqual( Stem("caracas"), "caracas" );
	deepEqual( Stem("caramel"), "caramel" );
	deepEqual( Stem("caramente"), "car" );
	deepEqual( Stem("carati"), "car" );
	deepEqual( Stem("carattere"), "caratt" );
	deepEqual( Stem("caratteri"), "caratter" );
	deepEqual( Stem("caratteriale"), "caratterial" );
	deepEqual( Stem("caratteriali"), "caratterial" );
	deepEqual( Stem("caratteristiche"), "caratterist" );
	deepEqual( Stem("caratterizza"), "caratterizz" );
	deepEqual( Stem("caratterizzata"), "caratterizz" );
	deepEqual( Stem("caratterizzate"), "caratterizz" );
	deepEqual( Stem("caratterizzati"), "caratterizz" );
	deepEqual( Stem("caratterizzato"), "caratterizz" );
	deepEqual( Stem("caravale"), "caraval" );
	deepEqual( Stem("carbide"), "carbid" );
	deepEqual( Stem("carbon"), "carbon" );
	deepEqual( Stem("carbonara"), "carbonar" );
	deepEqual( Stem("carbone"), "carbon" );
	deepEqual( Stem("carboni"), "carbon" );
	deepEqual( Stem("carbonica"), "carbon" );
	deepEqual( Stem("carbonio"), "carbon" );
	deepEqual( Stem("carbotrade"), "carbotrad" );
	deepEqual( Stem("carburante"), "carbur" );
	deepEqual( Stem("carburanti"), "carbur" );
	deepEqual( Stem("carcerazione"), "carcer" );
	deepEqual( Stem("carcere"), "carc" );
	deepEqual( Stem("carceri"), "carcer" );
	deepEqual( Stem("carceriera"), "carcerier" );
	deepEqual( Stem("cardano"), "card" );
	deepEqual( Stem("cardarelli"), "cardarell" );
	deepEqual( Stem("cardenas"), "cardenas" );
	deepEqual( Stem("cardi"), "card" );
	deepEqual( Stem("cardia"), "card" );
	deepEqual( Stem("cardiaca"), "cardiac" );
	deepEqual( Stem("cardiache"), "cardiac" );
	deepEqual( Stem("cardiaci"), "cardiac" );
	deepEqual( Stem("cardillo"), "cardill" );
	deepEqual( Stem("cardinal"), "cardinal" );
	deepEqual( Stem("cardinale"), "cardinal" );
	deepEqual( Stem("cardinali"), "cardinal" );
	deepEqual( Stem("cardine"), "cardin" );
	deepEqual( Stem("cardini"), "cardin" );
	deepEqual( Stem("cardiopatia"), "cardiopat" );
	deepEqual( Stem("cardolus"), "cardolus" );
	deepEqual( Stem("care"), "car" );
	deepEqual( Stem("carente"), "carent" );
	deepEqual( Stem("carenze"), "carenz" );
	deepEqual( Stem("carestia"), "carest" );
	deepEqual( Stem("carestie"), "carest" );
	deepEqual( Stem("carezze"), "carezz" );
	deepEqual( Stem("carezzevole"), "carezzevol" );
	deepEqual( Stem("cari"), "car" );
	deepEqual( Stem("cariatide"), "cariatid" );
	deepEqual( Stem("caribe"), "carib" );
	deepEqual( Stem("carica"), "caric" );
	deepEqual( Stem("carical"), "carical" );
	deepEqual( Stem("carican"), "carican" );
	deepEqual( Stem("caricare"), "caric" );
	deepEqual( Stem("caricaron"), "caricaron" );
	deepEqual( Stem("caricati"), "caric" );
	deepEqual( Stem("caricato"), "caric" );
	deepEqual( Stem("caricatura"), "caricatur" );
	deepEqual( Stem("cariche"), "caric" );
	deepEqual( Stem("carichi"), "caric" );
	deepEqual( Stem("carico"), "caric" );
	deepEqual( Stem("caricola"), "caricol" );
	deepEqual( Stem("cariddi"), "caridd" );
	deepEqual( Stem("carifondo"), "carifond" );
	deepEqual( Stem("carige"), "carig" );
	deepEqual( Stem("cariparma"), "cariparm" );
	deepEqual( Stem("cariplo"), "caripl" );
	deepEqual( Stem("carisbo"), "carisb" );
	deepEqual( Stem("carismatico"), "carismat" );
	deepEqual( Stem("carissimi"), "carissim" );
	deepEqual( Stem("carissimo"), "carissim" );
	deepEqual( Stem("carità"), "carit" );
	deepEqual( Stem("caritas"), "caritas" );
	deepEqual( Stem("caritatevole"), "caritatevol" );
	deepEqual( Stem("carla"), "carl" );
	deepEqual( Stem("carlandrea"), "carlandre" );
	deepEqual( Stem("carlo"), "carl" );
	deepEqual( Stem("carlona"), "carlon" );
	deepEqual( Stem("carlos"), "carlos" );
	deepEqual( Stem("carlotto"), "carlott" );
	deepEqual( Stem("carlucci"), "carlucc" );
	deepEqual( Stem("carmela"), "carmel" );
	deepEqual( Stem("carmelo"), "carmel" );
	deepEqual( Stem("carmen"), "carmen" );
	deepEqual( Stem("carmine"), "carmin" );
	deepEqual( Stem("carnascialesche"), "carnascialesc" );
	deepEqual( Stem("carnasciali"), "carnascial" );
	deepEqual( Stem("carne"), "carn" );
	deepEqual( Stem("carneade"), "carnead" );
	deepEqual( Stem("carnemolla"), "carnemoll" );
	deepEqual( Stem("carnet"), "carnet" );
	deepEqual( Stem("carnevale"), "carneval" );
	deepEqual( Stem("carni"), "carn" );
	deepEqual( Stem("carnica"), "carnic" );
	deepEqual( Stem("carnificine"), "carnificin" );
	deepEqual( Stem("carnpanelli"), "carnpanell" );
	deepEqual( Stem("caro"), "car" );
	deepEqual( Stem("caroccio"), "carocc" );
	deepEqual( Stem("carosi"), "caros" );
	deepEqual( Stem("carovana"), "carovan" );
	deepEqual( Stem("carpi"), "carp" );
	deepEqual( Stem("carpio"), "carp" );
	deepEqual( Stem("carpon"), "carpon" );
	deepEqual( Stem("carpone"), "carpon" );
	deepEqual( Stem("carponi"), "carpon" );
	deepEqual( Stem("carrara"), "carrar" );
	deepEqual( Stem("carrarese"), "carrares" );
	deepEqual( Stem("carraro"), "carrar" );
	deepEqual( Stem("carrera"), "carrer" );
	deepEqual( Stem("carretta"), "carrett" );
	deepEqual( Stem("carri"), "carr" );
	deepEqual( Stem("carriera"), "carrier" );
	deepEqual( Stem("carriere"), "carr" );
	deepEqual( Stem("carrierismo"), "carrier" );
	deepEqual( Stem("carro"), "carr" );
	deepEqual( Stem("carrobi"), "carrob" );
	deepEqual( Stem("carrobio"), "carrob" );
	deepEqual( Stem("carroccio"), "carrocc" );
	deepEqual( Stem("carrocio"), "carroc" );
	deepEqual( Stem("carroll"), "carroll" );
	deepEqual( Stem("carrozza"), "carrozz" );
	deepEqual( Stem("carrozzata"), "carrozz" );
	deepEqual( Stem("carrozze"), "carrozz" );
	deepEqual( Stem("carrozzine"), "carrozzin" );
	deepEqual( Stem("carruba"), "carrub" );
	deepEqual( Stem("carrucole"), "carrucol" );
	deepEqual( Stem("cart"), "cart" );
	deepEqual( Stem("carta"), "cart" );
	deepEqual( Stem("cartagine"), "cartagin" );
	deepEqual( Stem("cartapesta"), "cartapest" );
	deepEqual( Stem("cartapestai"), "cartapesta" );
	deepEqual( Stem("cartarie"), "cartar" );
	deepEqual( Stem("carte"), "cart" );
	deepEqual( Stem("carteggio"), "cartegg" );
	deepEqual( Stem("cartelli"), "cartell" );
	deepEqual( Stem("cartellini"), "cartellin" );
	deepEqual( Stem("cartello"), "cartell" );
	deepEqual( Stem("cartellone"), "cartellon" );
	deepEqual( Stem("carter"), "carter" );
	deepEqual( Stem("cartht"), "cartht" );
	deepEqual( Stem("cartina"), "cartin" );
	deepEqual( Stem("cartografia"), "cartograf" );
	deepEqual( Stem("cartone"), "carton" );
	deepEqual( Stem("cartoni"), "carton" );
	deepEqual( Stem("carulli"), "carull" );
	deepEqual( Stem("cas"), "cas" );
	deepEqual( Stem("casa"), "cas" );
	deepEqual( Stem("casacca"), "casacc" );
	deepEqual( Stem("casaccia"), "casacc" );
	deepEqual( Stem("casadei"), "casade" );
	deepEqual( Stem("casal"), "casal" );
	deepEqual( Stem("casale"), "casal" );
	deepEqual( Stem("casalecchio"), "casalecc" );
	deepEqual( Stem("casali"), "casal" );
	deepEqual( Stem("casalinga"), "casaling" );
	deepEqual( Stem("casalnuovo"), "casalnuov" );
	deepEqual( Stem("casanovà"), "casanov" );
	deepEqual( Stem("casarano"), "casar" );
	deepEqual( Stem("casas"), "casas" );
	deepEqual( Stem("casasco"), "casasc" );
	deepEqual( Stem("casati"), "cas" );
	deepEqual( Stem("casato"), "cas" );
	deepEqual( Stem("casazza"), "casazz" );
	deepEqual( Stem("casca"), "casc" );
	deepEqual( Stem("cascan"), "cascan" );
	deepEqual( Stem("cascano"), "casc" );
	deepEqual( Stem("cascante"), "cascant" );
	deepEqual( Stem("cascanti"), "cascant" );
	deepEqual( Stem("cascare"), "casc" );
	deepEqual( Stem("cascata"), "casc" );
	deepEqual( Stem("cascati"), "casc" );
	deepEqual( Stem("cascavano"), "casc" );
	deepEqual( Stem("caschi"), "casc" );
	deepEqual( Stem("cascia"), "casc" );
	deepEqual( Stem("cascina"), "cascin" );
	deepEqual( Stem("cascine"), "cascin" );
	deepEqual( Stem("cascinotto"), "cascinott" );
	deepEqual( Stem("cascò"), "casc" );
	deepEqual( Stem("cascone"), "cascon" );
	deepEqual( Stem("case"), "cas" );
	deepEqual( Stem("caselecchio"), "caselecc" );
	deepEqual( Stem("casella"), "casell" );
	deepEqual( Stem("caselli"), "casell" );
	deepEqual( Stem("caserma"), "caserm" );
	deepEqual( Stem("casermettè"), "casermett" );
	deepEqual( Stem("casermizzazione"), "casermizz" );
	deepEqual( Stem("caserta"), "casert" );
	deepEqual( Stem("casertano"), "casert" );
	deepEqual( Stem("casetta"), "casett" );
	deepEqual( Stem("cash"), "cash" );
	deepEqual( Stem("casi"), "cas" );
	deepEqual( Stem("casillo"), "casill" );
	deepEqual( Stem("casini"), "casin" );
	deepEqual( Stem("casino"), "casin" );
	deepEqual( Stem("casinò"), "casin" );
	deepEqual( Stem("casipole"), "casipol" );
	deepEqual( Stem("casiraghi"), "casirag" );
	deepEqual( Stem("caso"), "cas" );
	deepEqual( Stem("casolare"), "casol" );
	deepEqual( Stem("casomai"), "casoma" );
	deepEqual( Stem("casonato"), "cason" );
	deepEqual( Stem("casoria"), "casor" );
	deepEqual( Stem("casotto"), "casott" );
	deepEqual( Stem("caspio"), "casp" );
	deepEqual( Stem("cassa"), "cass" );
	deepEqual( Stem("cassaforte"), "cassafort" );
	deepEqual( Stem("cassano"), "cass" );
	deepEqual( Stem("cassavetes"), "cassavetes" );
	deepEqual( Stem("cassazione"), "cassazion" );
	deepEqual( Stem("casse"), "cass" );
	deepEqual( Stem("casseforti"), "cassefort" );
	deepEqual( Stem("cassetta"), "cassett" );
	deepEqual( Stem("cassidy"), "cassidy" );
	deepEqual( Stem("cassiere"), "cass" );
	deepEqual( Stem("cassintegrati"), "cassintegr" );
	deepEqual( Stem("cassintegrazione"), "cassintegr" );
	deepEqual( Stem("cassone"), "casson" );
	deepEqual( Stem("cassoni"), "casson" );
	deepEqual( Stem("cast"), "cast" );
	deepEqual( Stem("castagna"), "castagn" );
	deepEqual( Stem("castagne"), "castagn" );
	deepEqual( Stem("castagneri"), "castagner" );
	deepEqual( Stem("castagneto"), "castagnet" );
	deepEqual( Stem("castagnetti"), "castagnett" );
	deepEqual( Stem("castanova"), "castanov" );
	deepEqual( Stem("castel"), "castel" );
	deepEqual( Stem("castellaccio"), "castellacc" );
	deepEqual( Stem("castellano"), "castell" );
	deepEqual( Stem("castellari"), "castellar" );
	deepEqual( Stem("castelli"), "castell" );
	deepEqual( Stem("castellini"), "castellin" );
	deepEqual( Stem("castello"), "castell" );
	deepEqual( Stem("castelnovo"), "castelnov" );
	deepEqual( Stem("castelvetrano"), "castelvetr" );
	deepEqual( Stem("castiglia"), "castigl" );
	deepEqual( Stem("castiglione"), "castiglion" );
	deepEqual( Stem("castro"), "castr" );
	deepEqual( Stem("castrovillari"), "castrovillar" );
	deepEqual( Stem("castruci"), "castruc" );
	deepEqual( Stem("casuale"), "casual" );
	deepEqual( Stem("casualmente"), "casual" );
	deepEqual( Stem("casucce"), "casucc" );
	deepEqual( Stem("casuccia"), "casucc" );
	deepEqual( Stem("casupole"), "casupol" );
	deepEqual( Stem("cat"), "cat" );
	deepEqual( Stem("cataldo"), "catald" );
	deepEqual( Stem("catalina"), "catalin" );
	deepEqual( Stem("catalogare"), "catalog" );
	deepEqual( Stem("catamarani"), "catamaran" );
	deepEqual( Stem("catanese"), "catanes" );
	deepEqual( Stem("catania"), "catan" );
	deepEqual( Stem("catanzaresi"), "catanzares" );
	deepEqual( Stem("catanzaro"), "catanzar" );
	deepEqual( Stem("catarinussi"), "catarinuss" );
	deepEqual( Stem("catastrofe"), "catastrof" );
	deepEqual( Stem("categoria"), "categor" );
	deepEqual( Stem("categoricamente"), "categor" );
	deepEqual( Stem("categorico"), "categor" );
	deepEqual( Stem("categorie"), "categor" );
	deepEqual( Stem("catelli"), "catell" );
	deepEqual( Stem("catena"), "caten" );
	deepEqual( Stem("catenacciara"), "catenacciar" );
	deepEqual( Stem("catenaccio"), "catenacc" );
	deepEqual( Stem("catene"), "caten" );
	deepEqual( Stem("caterina"), "caterin" );
	deepEqual( Stem("catherine"), "catherin" );
	deepEqual( Stem("catholic"), "catholic" );
	deepEqual( Stem("catilina"), "catilin" );
	deepEqual( Stem("cattaneo"), "cattane" );
	deepEqual( Stem("cattedra"), "cattedr" );
	deepEqual( Stem("cattedrale"), "cattedral" );
	deepEqual( Stem("cattedre"), "cattedr" );
	deepEqual( Stem("cattiva"), "catt" );
	deepEqual( Stem("cattivacci"), "cattivacc" );
	deepEqual( Stem("cattivarvi"), "cattiv" );
	deepEqual( Stem("cattive"), "cattiv" );
	deepEqual( Stem("cattivello"), "cattivell" );
	deepEqual( Stem("cattiveria"), "cattiver" );
	deepEqual( Stem("cattiverie"), "cattiver" );
	deepEqual( Stem("cattivi"), "catt" );
	deepEqual( Stem("cattività"), "cattiv" );
	deepEqual( Stem("cattivo"), "catt" );
	deepEqual( Stem("cattolica"), "cattol" );
	deepEqual( Stem("cattolicesimo"), "cattolicesim" );
	deepEqual( Stem("cattolici"), "cattol" );
	deepEqual( Stem("cattolico"), "cattol" );
	deepEqual( Stem("cattura"), "cattur" );
	deepEqual( Stem("catturaccia"), "catturacc" );
	deepEqual( Stem("catturando"), "cattur" );
	deepEqual( Stem("catturare"), "cattur" );
	deepEqual( Stem("catturati"), "cattur" );
	deepEqual( Stem("catturato"), "cattur" );
	deepEqual( Stem("catture"), "cattur" );
	deepEqual( Stem("catwoman"), "catwoman" );
	deepEqual( Stem("cauare"), "cau" );
	deepEqual( Stem("caucasica"), "caucas" );
	deepEqual( Stem("caucaso"), "caucas" );
	deepEqual( Stem("causa"), "caus" );
	deepEqual( Stem("causale"), "causal" );
	deepEqual( Stem("causando"), "caus" );
	deepEqual( Stem("causare"), "caus" );
	deepEqual( Stem("causarne"), "caus" );
	deepEqual( Stem("causata"), "caus" );
	deepEqual( Stem("causate"), "caus" );
	deepEqual( Stem("causato"), "caus" );
	deepEqual( Stem("cause"), "caus" );
	deepEqual( Stem("cauta"), "caut" );
	deepEqual( Stem("cautela"), "cautel" );
	deepEqual( Stem("cautelare"), "cautel" );
	deepEqual( Stem("cautelativamente"), "cautel" );
	deepEqual( Stem("cautele"), "cautel" );
	deepEqual( Stem("cauto"), "caut" );
	deepEqual( Stem("cav"), "cav" );
	deepEqual( Stem("cava"), "cav" );
	deepEqual( Stem("cavadenti"), "cavadent" );
	deepEqual( Stem("cavagna"), "cavagn" );
	deepEqual( Stem("cavalcanti"), "cavalc" );
	deepEqual( Stem("cavalcatore"), "cavalc" );
	deepEqual( Stem("cavalcatura"), "cavalcatur" );
	deepEqual( Stem("cavalcature"), "cavalcatur" );
	deepEqual( Stem("cavalcava"), "cavalc" );
	deepEqual( Stem("cavalcavia"), "cavalcav" );
	deepEqual( Stem("cavalcioni"), "cavalcion" );
	deepEqual( Stem("cavalier"), "cavalier" );
	deepEqual( Stem("cavaliere"), "caval" );
	deepEqual( Stem("cavalieri"), "cavalier" );
	deepEqual( Stem("cavallaccio"), "cavallacc" );
	deepEqual( Stem("cavalleresca"), "cavalleresc" );
	deepEqual( Stem("cavallereschi"), "cavalleresc" );
	deepEqual( Stem("cavalleria"), "cavaller" );
	deepEqual( Stem("cavalli"), "cavall" );
	deepEqual( Stem("cavallina"), "cavallin" );
	deepEqual( Stem("cavallo"), "cavall" );
	deepEqual( Stem("cavalloni"), "cavallon" );
	deepEqual( Stem("cavando"), "cav" );
	deepEqual( Stem("cavar"), "cav" );
	deepEqual( Stem("cavare"), "cav" );
	deepEqual( Stem("cavarli"), "cav" );
	deepEqual( Stem("cavarmi"), "cav" );
	deepEqual( Stem("cavarne"), "cav" );
	deepEqual( Stem("cavarsene"), "cav" );
	deepEqual( Stem("cavarsi"), "cav" );
	deepEqual( Stem("cavarvi"), "cav" );
	deepEqual( Stem("cavata"), "cav" );
	deepEqual( Stem("cavatappi"), "cavatapp" );
	deepEqual( Stem("cavate"), "cav" );
	deepEqual( Stem("cavaterra"), "cavaterr" );
	deepEqual( Stem("cavatevi"), "cavat" );
	deepEqual( Stem("cavatio"), "cavat" );
	deepEqual( Stem("cavato"), "cav" );
	deepEqual( Stem("cavatogli"), "cavatogl" );
	deepEqual( Stem("caverebbe"), "cav" );
	deepEqual( Stem("cavereste"), "cav" );
	deepEqual( Stem("caverne"), "cav" );
	deepEqual( Stem("caverzan"), "caverzan" );
	deepEqual( Stem("cavi"), "cav" );
	deepEqual( Stem("cavicchio"), "cavicc" );
	deepEqual( Stem("caviglia"), "cavigl" );
	deepEqual( Stem("cavo"), "cav" );
	deepEqual( Stem("cavò"), "cav" );
	deepEqual( Stem("cavolo"), "cavol" );
	deepEqual( Stem("cazin"), "cazin" );
	deepEqual( Stem("cb"), "cb" );
	deepEqual( Stem("cbm"), "cbm" );
	deepEqual( Stem("cc"), "cc" );
	deepEqual( Stem("ccb"), "ccb" );
	deepEqual( Stem("ccd"), "ccd" );
	deepEqual( Stem("cconcordata"), "cconcord" );
	deepEqual( Stem("cct"), "cct" );
	deepEqual( Stem("cd"), "cd" );
	deepEqual( Stem("cda"), "cda" );
	deepEqual( Stem("cdc"), "cdc" );
	deepEqual( Stem("cdi"), "cdi" );
	deepEqual( Stem("cdr"), "cdr" );
	deepEqual( Stem("cdu"), "cdu" );
	deepEqual( Stem("ce"), "ce" );
	deepEqual( Stem("ceca"), "cec" );
	deepEqual( Stem("cecchi"), "cecc" );
	deepEqual( Stem("cecchini"), "cecchin" );
	deepEqual( Stem("cecena"), "cecen" );
	deepEqual( Stem("cecene"), "cecen" );
	deepEqual( Stem("ceceni"), "cecen" );
	deepEqual( Stem("cecenia"), "cecen" );
	deepEqual( Stem("ceceno"), "cecen" );
	deepEqual( Stem("cecere"), "cec" );
	deepEqual( Stem("ceche"), "cech" );
	deepEqual( Stem("cechi"), "cech" );
	deepEqual( Stem("cecilia"), "cecil" );
	deepEqual( Stem("cecina"), "cecin" );
	deepEqual( Stem("cecino"), "cecin" );
	deepEqual( Stem("cecità"), "cecit" );
	deepEqual( Stem("ceco"), "cec" );
	deepEqual( Stem("cedant"), "cedant" );
	deepEqual( Stem("cede"), "ced" );
	deepEqual( Stem("cedé"), "ced" );
	deepEqual( Stem("cedendo"), "ced" );
	deepEqual( Stem("ceder"), "ceder" );
	deepEqual( Stem("cedere"), "ced" );
	deepEqual( Stem("cederlo"), "ced" );
	deepEqual( Stem("cedette"), "cedett" );
	deepEqual( Stem("cedimento"), "ced" );
	deepEqual( Stem("cedola"), "cedol" );
	deepEqual( Stem("cedono"), "ced" );
	deepEqual( Stem("ceduto"), "ced" );
	deepEqual( Stem("cefa"), "cef" );
	deepEqual( Stem("ceffo"), "ceff" );
	deepEqual( Stem("cei"), "cei" );
	deepEqual( Stem("ceko"), "cek" );
	deepEqual( Stem("celate"), "cel" );
	deepEqual( Stem("celeberrima"), "celeberrim" );
	deepEqual( Stem("celeberrimo"), "celeberrim" );
	deepEqual( Stem("celebra"), "celebr" );
	deepEqual( Stem("celebrano"), "celebr" );
	deepEqual( Stem("celebranti"), "celebr" );
	deepEqual( Stem("celebrar"), "celebr" );
	deepEqual( Stem("celebrare"), "celebr" );
	deepEqual( Stem("celebrata"), "celebr" );
	deepEqual( Stem("celebrato"), "celebr" );
	deepEqual( Stem("celebrazione"), "celebr" );
	deepEqual( Stem("celebrazioni"), "celebr" );
	deepEqual( Stem("celebre"), "celebr" );
	deepEqual( Stem("celebrerà"), "celebr" );
	deepEqual( Stem("celebreranno"), "celebr" );
	deepEqual( Stem("celebri"), "celebr" );
	deepEqual( Stem("celebrità"), "celebr" );
	deepEqual( Stem("celeri"), "celer" );
	deepEqual( Stem("celerità"), "celer" );
	deepEqual( Stem("celesti"), "celest" );
	deepEqual( Stem("celia"), "cel" );
	deepEqual( Stem("celibe"), "celib" );
	deepEqual( Stem("celica"), "celic" );
	deepEqual( Stem("celie"), "cel" );
	deepEqual( Stem("cella"), "cell" );
	deepEqual( Stem("cellette"), "cellett" );
	deepEqual( Stem("cellulare"), "cellul" );
	deepEqual( Stem("cellulari"), "cellular" );
	deepEqual( Stem("celtic"), "celtic" );
	deepEqual( Stem("cem"), "cem" );
	deepEqual( Stem("cement"), "cement" );
	deepEqual( Stem("cementeria"), "cementer" );
	deepEqual( Stem("cementerie"), "cementer" );
	deepEqual( Stem("cementi"), "cement" );
	deepEqual( Stem("cementir"), "cement" );
	deepEqual( Stem("cena"), "cen" );
	deepEqual( Stem("cenato"), "cen" );
	deepEqual( Stem("cenci"), "cenc" );
	deepEqual( Stem("cencio"), "cenc" );
	deepEqual( Stem("cenciose"), "cencios" );
	deepEqual( Stem("cencioso"), "cencios" );
	deepEqual( Stem("cene"), "cen" );
	deepEqual( Stem("cenere"), "cen" );
	deepEqual( Stem("ceneri"), "cener" );
	deepEqual( Stem("cenerognola"), "cenerognol" );
	deepEqual( Stem("cenni"), "cenn" );
	deepEqual( Stem("cenno"), "cenn" );
	deepEqual( Stem("cenò"), "cen" );
	deepEqual( Stem("censis"), "censis" );
	deepEqual( Stem("censore"), "censor" );
	deepEqual( Stem("censui"), "censu" );
	deepEqual( Stem("censura"), "censur" );
	deepEqual( Stem("censurando"), "censur" );
	deepEqual( Stem("censure"), "censur" );
	deepEqual( Stem("cent"), "cent" );
	deepEqual( Stem("centenari"), "centenar" );
	deepEqual( Stem("centenario"), "centenar" );
	deepEqual( Stem("center"), "center" );
	deepEqual( Stem("centese"), "centes" );
	deepEqual( Stem("centesimi"), "centesim" );
	deepEqual( Stem("centesimo"), "centesim" );
	deepEqual( Stem("centi"), "cent" );
	deepEqual( Stem("centimetri"), "centimetr" );
	deepEqual( Stem("centimetro"), "centimetr" );
	deepEqual( Stem("centinaia"), "centinai" );
	deepEqual( Stem("centinaio"), "centinai" );
	deepEqual( Stem("cento"), "cent" );
	deepEqual( Stem("centocinquemila"), "centocinquemil" );
	deepEqual( Stem("centofanti"), "centof" );
	deepEqual( Stem("centomila"), "centomil" );
	deepEqual( Stem("central"), "central" );
	deepEqual( Stem("centrale"), "central" );
	deepEqual( Stem("centrali"), "central" );
	deepEqual( Stem("centralismo"), "central" );
	deepEqual( Stem("centralista"), "central" );
	deepEqual( Stem("centralità"), "central" );
	deepEqual( Stem("centralizzata"), "centralizz" );
	deepEqual( Stem("centralizzate"), "centralizz" );
	deepEqual( Stem("centralizzati"), "centralizz" );
	deepEqual( Stem("centralizzato"), "centralizz" );
	deepEqual( Stem("centralizzazione"), "centralizz" );
	deepEqual( Stem("centrata"), "centr" );
	deepEqual( Stem("centrato"), "centr" );
	deepEqual( Stem("centravanti"), "centrav" );
	deepEqual( Stem("centre"), "centr" );
	deepEqual( Stem("centreremo"), "centr" );
	deepEqual( Stem("centri"), "centr" );
	deepEqual( Stem("centrista"), "centrist" );
	deepEqual( Stem("centro"), "centr" );
	deepEqual( Stem("centrò"), "centr" );
	deepEqual( Stem("centrob"), "centrob" );
	deepEqual( Stem("centrocampista"), "centrocamp" );
	deepEqual( Stem("centrocampo"), "centrocamp" );
	deepEqual( Stem("centrodestra"), "centrodestr" );
	deepEqual( Stem("centrosinistra"), "centrosinistr" );
	deepEqual( Stem("cents"), "cents" );
	deepEqual( Stem("cera"), "cer" );
	deepEqual( Stem("ceramiche"), "ceram" );
	deepEqual( Stem("ceramicola"), "ceramicol" );
	deepEqual( Stem("cerbone"), "cerbon" );
	deepEqual( Stem("cerbottane"), "cerbottan" );
	deepEqual( Stem("cerca"), "cerc" );
	deepEqual( Stem("cercala"), "cercal" );
	deepEqual( Stem("cercan"), "cercan" );
	deepEqual( Stem("cercando"), "cerc" );
	deepEqual( Stem("cercano"), "cerc" );
	deepEqual( Stem("cercar"), "cerc" );
	deepEqual( Stem("cercare"), "cerc" );
	deepEqual( Stem("cercargli"), "cerc" );
	deepEqual( Stem("cercarla"), "cerc" );
	deepEqual( Stem("cercarlo"), "cerc" );
	deepEqual( Stem("cercarmi"), "cerc" );
	deepEqual( Stem("cercarne"), "cerc" );
	deepEqual( Stem("cercartela"), "cerc" );
	deepEqual( Stem("cercarvi"), "cerc" );
	deepEqual( Stem("cercasse"), "cerc" );
	deepEqual( Stem("cercassi"), "cerc" );
	deepEqual( Stem("cercata"), "cerc" );
	deepEqual( Stem("cercate"), "cerc" );
	deepEqual( Stem("cercatele"), "cercatel" );
	deepEqual( Stem("cercato"), "cerc" );
	deepEqual( Stem("cercatore"), "cercator" );
	deepEqual( Stem("cercava"), "cerc" );
	deepEqual( Stem("cercavan"), "cercavan" );
	deepEqual( Stem("cercavano"), "cerc" );
	deepEqual( Stem("cercavi"), "cerc" );
	deepEqual( Stem("cercavo"), "cerc" );
	deepEqual( Stem("cercherà"), "cerc" );
	deepEqual( Stem("cercheranno"), "cerc" );
	deepEqual( Stem("cercherebbe"), "cerc" );
	deepEqual( Stem("cercherò"), "cerc" );
	deepEqual( Stem("cerchi"), "cerc" );
	deepEqual( Stem("cerchiamo"), "cerc" );
	deepEqual( Stem("cerchiata"), "cerc" );
	deepEqual( Stem("cerchio"), "cerc" );
	deepEqual( Stem("cerciello"), "cerciell" );
	deepEqual( Stem("cercielo"), "cerciel" );
	deepEqual( Stem("cercle"), "cercl" );
	deepEqual( Stem("cerco"), "cerc" );
	deepEqual( Stem("cercò"), "cerc" );
	deepEqual( Stem("cercolavoro"), "cercolavor" );
	deepEqual( Stem("cereali"), "cereal" );
	deepEqual( Stem("cerealicoli"), "cerealicol" );
	deepEqual( Stem("ceredi"), "cered" );
	deepEqual( Stem("ceri"), "cer" );
	deepEqual( Stem("cerimonia"), "cerimon" );
	deepEqual( Stem("cerimoniale"), "cerimonial" );
	deepEqual( Stem("cerimonie"), "cerimon" );
	deepEqual( Stem("cerimoniosa"), "cerimon" );
	deepEqual( Stem("cerimonioso"), "cerimon" );
	deepEqual( Stem("cerioli"), "ceriol" );
	deepEqual( Stem("cernebantur"), "cernebantur" );
	deepEqual( Stem("cerniere"), "cern" );
	deepEqual( Stem("cernobbio"), "cernobb" );
	deepEqual( Stem("cernomyrdin"), "cernomyrdin" );
	deepEqual( Stem("cernoriecie"), "cernoriec" );
	deepEqual( Stem("cernusco"), "cernusc" );
	deepEqual( Stem("ceronè"), "ceron" );
	deepEqual( Stem("ceroni"), "ceron" );
	deepEqual( Stem("cerri"), "cerr" );
	deepEqual( Stem("cert"), "cert" );
	deepEqual( Stem("certa"), "cert" );
	deepEqual( Stem("certà"), "cert" );
	deepEqual( Stem("certamente"), "cert" );
	deepEqual( Stem("certe"), "cert" );
	deepEqual( Stem("certezza"), "certezz" );
	deepEqual( Stem("certezze"), "certezz" );
	deepEqual( Stem("certi"), "cert" );
	deepEqual( Stem("certificato"), "certific" );
	deepEqual( Stem("certificazione"), "certif" );
	deepEqual( Stem("certissimamente"), "certissim" );
	deepEqual( Stem("certiusque"), "certiusqu" );
	deepEqual( Stem("certo"), "cert" );
	deepEqual( Stem("certuni"), "certun" );
	deepEqual( Stem("ceruleo"), "cerule" );
	deepEqual( Stem("ceruzzi"), "ceruzz" );
	deepEqual( Stem("cervellacci"), "cervellacc" );
	deepEqual( Stem("cervelli"), "cervell" );
	deepEqual( Stem("cervellino"), "cervellin" );
	deepEqual( Stem("cervello"), "cervell" );
	deepEqual( Stem("cervellò"), "cervell" );
	deepEqual( Stem("cervone"), "cervon" );
	deepEqual( Stem("cerziorato"), "cerzior" );
	deepEqual( Stem("cesalpino"), "cesalpin" );
	deepEqual( Stem("cesar"), "ces" );
	deepEqual( Stem("cesare"), "ces" );
	deepEqual( Stem("cesari"), "cesar" );
	deepEqual( Stem("cesen"), "cesen" );
	deepEqual( Stem("cesena"), "cesen" );
	deepEqual( Stem("cespugli"), "cespugl" );
	deepEqual( Stem("cespuglio"), "cespugl" );
	deepEqual( Stem("cessa"), "cess" );
	deepEqual( Stem("cessan"), "cessan" );
	deepEqual( Stem("cessar"), "cess" );
	deepEqual( Stem("cessare"), "cess" );
	deepEqual( Stem("cessaron"), "cessaron" );
	deepEqual( Stem("cessarono"), "cess" );
	deepEqual( Stem("cessasse"), "cess" );
	deepEqual( Stem("cessata"), "cess" );
	deepEqual( Stem("cessate"), "cess" );
	deepEqual( Stem("cessati"), "cess" );
	deepEqual( Stem("cessato"), "cess" );
	deepEqual( Stem("cessava"), "cess" );
	deepEqual( Stem("cessavano"), "cess" );
	deepEqual( Stem("cessazione"), "cessazion" );
	deepEqual( Stem("cesserebbe"), "cess" );
	deepEqual( Stem("cessione"), "cession" );
	deepEqual( Stem("cessò"), "cess" );
	deepEqual( Stem("cetacei"), "cetace" );
	deepEqual( Stem("ceteris"), "ceteris" );
	deepEqual( Stem("ceti"), "cet" );
	deepEqual( Stem("ceto"), "cet" );
	deepEqual( Stem("cfi"), "cfi" );
	deepEqual( Stem("cgia"), "cgi" );
	deepEqual( Stem("cgie"), "cgi" );
	deepEqual( Stem("cgil"), "cgil" );
	deepEqual( Stem("ch"), "ch" );
	deepEqual( Stem("cha"), "cha" );
	deepEqual( Stem("challenge"), "challeng" );
	deepEqual( Stem("chamot"), "chamot" );
	deepEqual( Stem("champagne"), "champagn" );
	deepEqual( Stem("chang"), "chang" );
	deepEqual( Stem("chanony"), "chanony" );
	deepEqual( Stem("chantal"), "chantal" );
	deepEqual( Stem("charasiab"), "charasiab" );
	deepEqual( Stem("chariello"), "chariell" );
	deepEqual( Stem("charleroi"), "charlero" );
	deepEqual( Stem("charles"), "charles" );
	deepEqual( Stem("charron"), "charron" );
	deepEqual( Stem("che"), "che" );
	deepEqual( Stem("ché"), "chè" );
	deepEqual( Stem("chè"), "chè" );
	deepEqual( Stem("check"), "check" );
	deepEqual( Stem("cheltenham"), "cheltenham" );
	deepEqual( Stem("cheriche"), "cheric" );
	deepEqual( Stem("chermisi"), "chermis" );
	deepEqual( Stem("cheta"), "chet" );
	deepEqual( Stem("chetamente"), "chet" );
	deepEqual( Stem("chetare"), "chet" );
	deepEqual( Stem("chetaron"), "chetaron" );
	deepEqual( Stem("chetatevi"), "chetat" );
	deepEqual( Stem("chetava"), "chet" );
	deepEqual( Stem("cheti"), "chet" );
	deepEqual( Stem("cheto"), "chet" );
	deepEqual( Stem("chi"), "chi" );
	deepEqual( Stem("chiacchere"), "chiacc" );
	deepEqual( Stem("chiacchierando"), "chiacchier" );
	deepEqual( Stem("chiacchierar"), "chiacchier" );
	deepEqual( Stem("chiacchierare"), "chiacchier" );
	deepEqual( Stem("chiacchierata"), "chiacchier" );
	deepEqual( Stem("chiacchierato"), "chiacchier" );
	deepEqual( Stem("chiacchiere"), "chiacc" );
	deepEqual( Stem("chiacchierina"), "chiacchierin" );
	deepEqual( Stem("chiacchierìo"), "chiacchierì" );
	deepEqual( Stem("chiacchierone"), "chiacchieron" );
	deepEqual( Stem("chiama"), "chiam" );
	deepEqual( Stem("chiamala"), "chiamal" );
	deepEqual( Stem("chiaman"), "chiaman" );
	deepEqual( Stem("chiamando"), "chiam" );
	deepEqual( Stem("chiamandoli"), "chiam" );
	deepEqual( Stem("chiamandolo"), "chiam" );
	deepEqual( Stem("chiamano"), "chiam" );
	deepEqual( Stem("chiamar"), "chiam" );
	deepEqual( Stem("chiamare"), "chiam" );
	deepEqual( Stem("chiamarli"), "chiam" );
	deepEqual( Stem("chiamarlo"), "chiam" );
	deepEqual( Stem("chiamarsi"), "chiam" );
	deepEqual( Stem("chiamasse"), "chiam" );
	deepEqual( Stem("chiamaste"), "chiamast" );
	deepEqual( Stem("chiamata"), "chiam" );
	deepEqual( Stem("chiamate"), "chiam" );
	deepEqual( Stem("chiamatemi"), "chiamatem" );
	deepEqual( Stem("chiamati"), "chiam" );
	deepEqual( Stem("chiamato"), "chiam" );
	deepEqual( Stem("chiamava"), "chiam" );
	deepEqual( Stem("chiamavan"), "chiamavan" );
	deepEqual( Stem("chiamavano"), "chiam" );
	deepEqual( Stem("chiamavo"), "chiam" );
	deepEqual( Stem("chiamerà"), "chiam" );
	deepEqual( Stem("chiamerò"), "chiam" );
	deepEqual( Stem("chiami"), "chiam" );
	deepEqual( Stem("chiamo"), "chiam" );
	deepEqual( Stem("chiamò"), "chiam" );
	deepEqual( Stem("chiana"), "chian" );
	deepEqual( Stem("chianciano"), "chianc" );
	deepEqual( Stem("chiapas"), "chiapas" );
	deepEqual( Stem("chiapparlo"), "chiapp" );
	deepEqual( Stem("chiappuzzo"), "chiappuzz" );
	deepEqual( Stem("chiara"), "chiar" );
	deepEqual( Stem("chiaramente"), "chiar" );
	deepEqual( Stem("chiare"), "chi" );
	deepEqual( Stem("chiarezza"), "chiarezz" );
	deepEqual( Stem("chiari"), "chiar" );
	deepEqual( Stem("chiariello"), "chiariell" );
	deepEqual( Stem("chiarificazione"), "chiarif" );
	deepEqual( Stem("chiarimenti"), "chiar" );
	deepEqual( Stem("chiarimento"), "chiar" );
	deepEqual( Stem("chiarirci"), "chiar" );
	deepEqual( Stem("chiarire"), "chiar" );
	deepEqual( Stem("chiarirsi"), "chiar" );
	deepEqual( Stem("chiarisce"), "chiar" );
	deepEqual( Stem("chiariscono"), "chiar" );
	deepEqual( Stem("chiarissimi"), "chiarissim" );
	deepEqual( Stem("chiarito"), "chiar" );
	deepEqual( Stem("chiaro"), "chiar" );
	deepEqual( Stem("chiarore"), "chiaror" );
	deepEqual( Stem("chiasso"), "chiass" );
	deepEqual( Stem("chiatta"), "chiatt" );
	deepEqual( Stem("chiavari"), "chiavar" );
	deepEqual( Stem("chiave"), "chiav" );
	deepEqual( Stem("chiavenna"), "chiavenn" );
	deepEqual( Stem("chiavi"), "chi" );
	deepEqual( Stem("chicago"), "chicag" );
	deepEqual( Stem("chicche"), "chicc" );
	deepEqual( Stem("chicchera"), "chiccher" );
	deepEqual( Stem("chicchi"), "chicc" );
	deepEqual( Stem("chidambaram"), "chidambaram" );
	deepEqual( Stem("chieda"), "chied" );
	deepEqual( Stem("chiede"), "chied" );
	deepEqual( Stem("chiedendo"), "chied" );
	deepEqual( Stem("chieder"), "chieder" );
	deepEqual( Stem("chiederà"), "chied" );
	deepEqual( Stem("chiederanno"), "chied" );
	deepEqual( Stem("chiedere"), "chied" );
	deepEqual( Stem("chiederebbe"), "chied" );
	deepEqual( Stem("chiederemo"), "chied" );
	deepEqual( Stem("chiedergli"), "chied" );
	deepEqual( Stem("chiederglielo"), "chied" );
	deepEqual( Stem("chiedergliene"), "chied" );
	deepEqual( Stem("chiederlo"), "chied" );
	deepEqual( Stem("chiederne"), "chied" );
	deepEqual( Stem("chiederò"), "chied" );
	deepEqual( Stem("chiederti"), "chied" );
	deepEqual( Stem("chiedesse"), "chiedess" );
	deepEqual( Stem("chiedessero"), "chied" );
	deepEqual( Stem("chiedessimo"), "chiedessim" );
	deepEqual( Stem("chiedete"), "chied" );
	deepEqual( Stem("chiedeva"), "chied" );
	deepEqual( Stem("chiedevan"), "chiedevan" );
	deepEqual( Stem("chiedevano"), "chied" );
	deepEqual( Stem("chiedevate"), "chied" );
	deepEqual( Stem("chiedevi"), "chied" );
	deepEqual( Stem("chiedevo"), "chied" );
	deepEqual( Stem("chiedi"), "chied" );
	deepEqual( Stem("chiediamo"), "chied" );
	deepEqual( Stem("chiediate"), "chied" );
	deepEqual( Stem("chiedo"), "chied" );
	deepEqual( Stem("chiedono"), "chied" );
	deepEqual( Stem("chiesa"), "chies" );
	deepEqual( Stem("chiese"), "chies" );
	deepEqual( Stem("chiesi"), "chies" );
	deepEqual( Stem("chiesta"), "chiest" );
	deepEqual( Stem("chiesti"), "chiest" );
	deepEqual( Stem("chiesto"), "chiest" );
	deepEqual( Stem("chieti"), "chiet" );
	deepEqual( Stem("chievo"), "chi" );
	deepEqual( Stem("chigi"), "chig" );
	deepEqual( Stem("chiklis"), "chiklis" );
	deepEqual( Stem("chili"), "chil" );
	deepEqual( Stem("chilo"), "chil" );
	deepEqual( Stem("chilogrammi"), "chilogramm" );
	deepEqual( Stem("chilometeri"), "chilometer" );
	deepEqual( Stem("chilometri"), "chilometr" );
	deepEqual( Stem("chilometro"), "chilometr" );
	deepEqual( Stem("chilowattora"), "chilowattor" );
	deepEqual( Stem("chimenti"), "chiment" );
	deepEqual( Stem("chimera"), "chimer" );
	deepEqual( Stem("chimiche"), "chimic" );
	deepEqual( Stem("chimico"), "chimic" );
	deepEqual( Stem("chimienti"), "chimient" );
	deepEqual( Stem("china"), "chin" );
	deepEqual( Stem("chinando"), "chin" );
	deepEqual( Stem("chinandola"), "chin" );
	deepEqual( Stem("chinandosi"), "chin" );
	deepEqual( Stem("chinare"), "chin" );
	deepEqual( Stem("chinarsi"), "chin" );
	deepEqual( Stem("chinàs"), "chinàs" );
	deepEqual( Stem("chinata"), "chin" );
	deepEqual( Stem("chinati"), "chin" );
	deepEqual( Stem("chinato"), "chin" );
	deepEqual( Stem("chinava"), "chin" );
	deepEqual( Stem("chinavano"), "chin" );
	deepEqual( Stem("chino"), "chin" );
	deepEqual( Stem("chinò"), "chin" );
	deepEqual( Stem("chioccar"), "chiocc" );
	deepEqual( Stem("chiocciola"), "chiocciol" );
	deepEqual( Stem("chiodi"), "chiod" );
	deepEqual( Stem("chiodo"), "chiod" );
	deepEqual( Stem("chioma"), "chiom" );
	deepEqual( Stem("chiomati"), "chiom" );
	deepEqual( Stem("chiome"), "chiom" );
	deepEqual( Stem("chiostro"), "chiostr" );
	deepEqual( Stem("chip"), "chip" );
	deepEqual( Stem("chips"), "chips" );
	deepEqual( Stem("chirurghi"), "chirurg" );
	deepEqual( Stem("chirurgia"), "chirurg" );
	deepEqual( Stem("chirurgico"), "chirurg" );
	deepEqual( Stem("chirurgo"), "chirurg" );
	deepEqual( Stem("chissà"), "chiss" );
	deepEqual( Stem("chiti"), "chit" );
	deepEqual( Stem("chiude"), "chiud" );
	deepEqual( Stem("chiudendo"), "chiud" );
	deepEqual( Stem("chiudendosi"), "chiud" );
	deepEqual( Stem("chiuder"), "chiuder" );
	deepEqual( Stem("chiuderanno"), "chiud" );
	deepEqual( Stem("chiudere"), "chiud" );
	deepEqual( Stem("chiuderle"), "chiud" );
	deepEqual( Stem("chiuderlo"), "chiud" );
	deepEqual( Stem("chiudermi"), "chiud" );
	deepEqual( Stem("chiuderne"), "chiud" );
	deepEqual( Stem("chiudersi"), "chiud" );
	deepEqual( Stem("chiudete"), "chiud" );
	deepEqual( Stem("chiudeva"), "chiud" );
	deepEqual( Stem("chiudevano"), "chiud" );
	deepEqual( Stem("chiudiamo"), "chiud" );
	deepEqual( Stem("chiudono"), "chiud" );
	deepEqual( Stem("chiunque"), "chiunqu" );
	deepEqual( Stem("chiusa"), "chius" );
	deepEqual( Stem("chiuse"), "chius" );
	deepEqual( Stem("chiusi"), "chius" );
	deepEqual( Stem("chiuso"), "chius" );
	deepEqual( Stem("chiusura"), "chiusur" );
	deepEqual( Stem("chiusure"), "chiusur" );
	deepEqual( Stem("cho"), "cho" );
	deepEqual( Stem("choc"), "choc" );
	deepEqual( Stem("choiaravalle"), "choiaravall" );
	deepEqual( Stem("chr"), "chr" );
	deepEqual( Stem("chris"), "chris" );
	deepEqual( Stem("christiane"), "christian" );
	deepEqual( Stem("christine"), "christin" );
	deepEqual( Stem("christoph"), "christoph" );
	deepEqual( Stem("christopher"), "christopher" );
	deepEqual( Stem("chronistae"), "chronista" );
	deepEqual( Stem("chul"), "chul" );
	deepEqual( Stem("ci"), "ci" );
	deepEqual( Stem("cia"), "cia" );
	deepEqual( Stem("ciabatta"), "ciabatt" );
	deepEqual( Stem("ciak"), "ciak" );
	deepEqual( Stem("cialtroni"), "cialtron" );
	deepEqual( Stem("ciambella"), "ciambell" );
	deepEqual( Stem("ciampi"), "ciamp" );
	deepEqual( Stem("ciampino"), "ciampin" );
	deepEqual( Stem("ciance"), "cianc" );
	deepEqual( Stem("ciao"), "cia" );
	deepEqual( Stem("ciarlano"), "ciarl" );
	deepEqual( Stem("ciarlare"), "ciarl" );
	deepEqual( Stem("ciarlato"), "ciarl" );
	deepEqual( Stem("ciarle"), "ciarl" );
	deepEqual( Stem("ciarlerà"), "ciarl" );
	deepEqual( Stem("ciarlerebbe"), "ciarl" );
	deepEqual( Stem("ciarlone"), "ciarlon" );
	deepEqual( Stem("ciarloni"), "ciarlon" );
	deepEqual( Stem("ciarpume"), "ciarpum" );
	deepEqual( Stem("ciascheduna"), "ciaschedun" );
	deepEqual( Stem("ciascheduno"), "ciaschedun" );
	deepEqual( Stem("ciascun"), "ciascun" );
	deepEqual( Stem("ciascuna"), "ciascun" );
	deepEqual( Stem("ciascuno"), "ciascun" );
	deepEqual( Stem("cibi"), "cib" );
	deepEqual( Stem("cibiemme"), "cibiemm" );
	deepEqual( Stem("cibo"), "cib" );
	deepEqual( Stem("cicalar"), "cical" );
	deepEqual( Stem("cicalare"), "cical" );
	deepEqual( Stem("cicalìo"), "cicalì" );
	deepEqual( Stem("cicalone"), "cicalon" );
	deepEqual( Stem("cicaloni"), "cicalon" );
	deepEqual( Stem("ciccio"), "cicc" );
	deepEqual( Stem("ciclismo"), "ciclism" );
	deepEqual( Stem("ciclista"), "ciclist" );
	deepEqual( Stem("ciclo"), "cicl" );
	deepEqual( Stem("ciclomotore"), "ciclomotor" );
	deepEqual( Stem("cieca"), "ciec" );
	deepEqual( Stem("cieco"), "ciec" );
	deepEqual( Stem("ciel"), "ciel" );
	deepEqual( Stem("cielo"), "ciel" );
	deepEqual( Stem("cifra"), "cifr" );
	deepEqual( Stem("cifre"), "cifr" );
	deepEqual( Stem("ciga"), "cig" );
	deepEqual( Stem("cigli"), "cigl" );
	deepEqual( Stem("ciglia"), "cigl" );
	deepEqual( Stem("ciglio"), "cigl" );
	deepEqual( Stem("ciglione"), "ciglion" );
	deepEqual( Stem("ciglioni"), "ciglion" );
	deepEqual( Stem("cigna"), "cign" );
	deepEqual( Stem("cigne"), "cign" );
	deepEqual( Stem("cigolìo"), "cigolì" );
	deepEqual( Stem("cigs"), "cigs" );
	deepEqual( Stem("cii"), "cii" );
	deepEqual( Stem("cila"), "cil" );
	deepEqual( Stem("cile"), "cil" );
	deepEqual( Stem("cilena"), "cilen" );
	deepEqual( Stem("ciliegi"), "cilieg" );
	deepEqual( Stem("cilizio"), "ciliz" );
	deepEqual( Stem("cima"), "cim" );
	deepEqual( Stem("cime"), "cim" );
	deepEqual( Stem("cimento"), "ciment" );
	deepEqual( Stem("ciments"), "ciments" );
	deepEqual( Stem("cimitero"), "cimiter" );
	deepEqual( Stem("cina"), "cin" );
	deepEqual( Stem("cinema"), "cinem" );
	deepEqual( Stem("cinematografica"), "cinematograf" );
	deepEqual( Stem("cinematografico"), "cinematograf" );
	deepEqual( Stem("cinematografo"), "cinematograf" );
	deepEqual( Stem("cinematografò"), "cinematograf" );
	deepEqual( Stem("cineoperatore"), "cineoper" );
	deepEqual( Stem("cinese"), "cines" );
	deepEqual( Stem("cingeva"), "cing" );
	deepEqual( Stem("cingoli"), "cingol" );
	deepEqual( Stem("cinicamente"), "cinic" );
	deepEqual( Stem("cinofile"), "cinofil" );
	deepEqual( Stem("cinquant"), "cinquant" );
	deepEqual( Stem("cinquanta"), "cinquant" );
	deepEqual( Stem("cinquantamila"), "cinquantamil" );
	deepEqual( Stem("cinquantatre"), "cinquantatr" );
	deepEqual( Stem("cinquantenario"), "cinquantenar" );
	deepEqual( Stem("cinquantesima"), "cinquantesim" );
	deepEqual( Stem("cinquantesimo"), "cinquantesim" );
	deepEqual( Stem("cinque"), "cinqu" );
	deepEqual( Stem("cinquecento"), "cinquecent" );
	deepEqual( Stem("cinquemila"), "cinquemil" );
	deepEqual( Stem("cinse"), "cins" );
	deepEqual( Stem("cinta"), "cint" );
	deepEqual( Stem("cinti"), "cint" );
	deepEqual( Stem("cinto"), "cint" );
	deepEqual( Stem("cintola"), "cintol" );
	deepEqual( Stem("cintura"), "cintur" );
	deepEqual( Stem("ciò"), "ciò" );
	deepEqual( Stem("cioccarelli"), "cioccarell" );
	deepEqual( Stem("ciocche"), "ciocc" );
	deepEqual( Stem("ciocchetti"), "ciocchett" );
	deepEqual( Stem("ciocchettina"), "ciocchettin" );
	deepEqual( Stem("cioccolata"), "cioccol" );
	deepEqual( Stem("cioccolato"), "cioccol" );
	deepEqual( Stem("cioè"), "cio" );
	deepEqual( Stem("cioffarelli"), "cioffarell" );
	deepEqual( Stem("ciondolar"), "ciondol" );
	deepEqual( Stem("ciondoloni"), "ciondolon" );
	deepEqual( Stem("ciotola"), "ciotol" );
	deepEqual( Stem("ciotole"), "ciotol" );
	deepEqual( Stem("ciottoli"), "ciottol" );
	deepEqual( Stem("ciottoloni"), "ciottolon" );
	deepEqual( Stem("cipe"), "cip" );
	deepEqual( Stem("cipiglio"), "cipigl" );
	deepEqual( Stem("cipro"), "cipr" );
	deepEqual( Stem("cir"), "cir" );
	deepEqual( Stem("circa"), "circ" );
	deepEqual( Stem("circati"), "circ" );
	deepEqual( Stem("circo"), "circ" );
	deepEqual( Stem("circola"), "circol" );
	deepEqual( Stem("circolare"), "circol" );
	deepEqual( Stem("circolari"), "circolar" );
	deepEqual( Stem("circolata"), "circol" );
	deepEqual( Stem("circolate"), "circol" );
	deepEqual( Stem("circolazione"), "circol" );
	deepEqual( Stem("circoli"), "circol" );
	deepEqual( Stem("circolo"), "circol" );
	deepEqual( Stem("circonda"), "circond" );
	deepEqual( Stem("circondare"), "circond" );
	deepEqual( Stem("circondata"), "circond" );
	deepEqual( Stem("circondati"), "circond" );
	deepEqual( Stem("circondato"), "circond" );
	deepEqual( Stem("circondava"), "circond" );
	deepEqual( Stem("circondavano"), "circond" );
	deepEqual( Stem("circonvallazione"), "circonvall" );
	deepEqual( Stem("circonvicini"), "circonvicin" );
	deepEqual( Stem("circonvicino"), "circonvicin" );
	deepEqual( Stem("circoscritta"), "circoscritt" );
	deepEqual( Stem("circoscritte"), "circoscritt" );
	deepEqual( Stem("circospetti"), "circospett" );
	deepEqual( Stem("circospezione"), "circospezion" );
	deepEqual( Stem("circostante"), "circost" );
	deepEqual( Stem("circostanti"), "circost" );
	deepEqual( Stem("circostanza"), "circost" );
	deepEqual( Stem("circostanze"), "circost" );
	deepEqual( Stem("circostanziare"), "circostanz" );
	deepEqual( Stem("circostanziati"), "circostanz" );
	deepEqual( Stem("circuiti"), "circu" );
	deepEqual( Stem("circuito"), "circu" );
	deepEqual( Stem("ciriaco"), "ciriac" );
	deepEqual( Stem("cirio"), "cir" );
	deepEqual( Stem("cirm"), "cirm" );
	deepEqual( Stem("ciro"), "cir" );
	deepEqual( Stem("ciruzzi"), "ciruzz" );
	deepEqual( Stem("cis"), "cis" );
	deepEqual( Stem("cisal"), "cisal" );
	deepEqual( Stem("cisalpino"), "cisalpin" );
	deepEqual( Stem("cises"), "cises" );
	deepEqual( Stem("cisgiordania"), "cisgiordan" );
	deepEqual( Stem("cisl"), "cisl" );
	deepEqual( Stem("cisnal"), "cisnal" );
	deepEqual( Stem("cisp"), "cisp" );
	deepEqual( Stem("cisterne"), "cist" );
	deepEqual( Stem("cita"), "cit" );
	deepEqual( Stem("citando"), "cit" );
	deepEqual( Stem("citano"), "cit" );
	deepEqual( Stem("citare"), "cit" );
	deepEqual( Stem("citarne"), "cit" );
	deepEqual( Stem("citata"), "cit" );
	deepEqual( Stem("citati"), "cit" );
	deepEqual( Stem("citato"), "cit" );
	deepEqual( Stem("citavano"), "cit" );
	deepEqual( Stem("citazioni"), "citazion" );
	deepEqual( Stem("citeremo"), "cit" );
	deepEqual( Stem("citiamo"), "cit" );
	deepEqual( Stem("cito"), "cit" );
	deepEqual( Stem("citta"), "citt" );
	deepEqual( Stem("città"), "citt" );
	deepEqual( Stem("cittadella"), "cittadell" );
	deepEqual( Stem("cittàdi"), "cittàd" );
	deepEqual( Stem("cittadina"), "cittadin" );
	deepEqual( Stem("cittadinanza"), "cittadin" );
	deepEqual( Stem("cittadine"), "cittadin" );
	deepEqual( Stem("cittadini"), "cittadin" );
	deepEqual( Stem("cittadino"), "cittadin" );
	deepEqual( Stem("cittadinò"), "cittadin" );
	deepEqual( Stem("citterio"), "citter" );
	deepEqual( Stem("city"), "city" );
	deepEqual( Stem("ciudad"), "ciudad" );
	deepEqual( Stem("ciuffetti"), "ciuffett" );
	deepEqual( Stem("ciuffetto"), "ciuffett" );
	deepEqual( Stem("ciuffi"), "ciuff" );
	deepEqual( Stem("ciuffo"), "ciuff" );
	deepEqual( Stem("ciurma"), "ciurm" );
	deepEqual( Stem("cives"), "cives" );
	deepEqual( Stem("civetta"), "civett" );
	deepEqual( Stem("civici"), "civic" );
	deepEqual( Stem("civile"), "civil" );
	deepEqual( Stem("civili"), "civil" );
	deepEqual( Stem("civilità"), "civil" );
	deepEqual( Stem("civiltà"), "civilt" );
	deepEqual( Stem("civirani"), "civiran" );
	deepEqual( Stem("civitavecchia"), "civitavecc" );
	deepEqual( Stem("cla"), "cla" );
	deepEqual( Stem("claes"), "claes" );
	deepEqual( Stem("claire"), "cla" );
	deepEqual( Stem("clam"), "clam" );
	deepEqual( Stem("clamore"), "clamor" );
	deepEqual( Stem("clamori"), "clamor" );
	deepEqual( Stem("clamorosa"), "clamor" );
	deepEqual( Stem("clamorosi"), "clamor" );
	deepEqual( Stem("clamoroso"), "clamor" );
	deepEqual( Stem("clan"), "clan" );
	deepEqual( Stem("clandestina"), "clandestin" );
	deepEqual( Stem("clandestinamente"), "clandestin" );
	deepEqual( Stem("clandestino"), "clandestin" );
	deepEqual( Stem("clarin"), "clarin" );
	deepEqual( Stem("clark"), "clark" );
	deepEqual( Stem("classe"), "class" );
	deepEqual( Stem("classi"), "class" );
	deepEqual( Stem("classica"), "classic" );
	deepEqual( Stem("classici"), "classic" );
	deepEqual( Stem("classico"), "classic" );
	deepEqual( Stem("classifica"), "classif" );
	deepEqual( Stem("classificate"), "classific" );
	deepEqual( Stem("classificati"), "classific" );
	deepEqual( Stem("classificato"), "classific" );
	deepEqual( Stem("classifiche"), "classif" );
	deepEqual( Stem("claude"), "claud" );
	deepEqual( Stem("claudia"), "claud" );
	deepEqual( Stem("claudio"), "claud" );
	deepEqual( Stem("claus"), "claus" );
	deepEqual( Stem("claustrale"), "claustral" );
	deepEqual( Stem("clausura"), "clausur" );
	deepEqual( Stem("cle"), "cle" );
	deepEqual( Stem("clemente"), "clement" );
	deepEqual( Stem("clemenza"), "clemenz" );
	deepEqual( Stem("clerici"), "cleric" );
	deepEqual( Stem("clerico"), "cleric" );
	deepEqual( Stem("clericofascisti"), "clericofasc" );
	deepEqual( Stem("clero"), "cler" );
	deepEqual( Stem("clf"), "clf" );
	deepEqual( Stem("cliam"), "cliam" );
	deepEqual( Stem("cliente"), "client" );
	deepEqual( Stem("clientela"), "clientel" );
	deepEqual( Stem("clienti"), "client" );
	deepEqual( Stem("cliff"), "cliff" );
	deepEqual( Stem("clima"), "clim" );
	deepEqual( Stem("climaticamente"), "climat" );
	deepEqual( Stem("climatiche"), "climat" );
	deepEqual( Stem("climatologia"), "climatolog" );
	deepEqual( Stem("climi"), "clim" );
	deepEqual( Stem("clinica"), "clinic" );
	deepEqual( Stem("cliniche"), "clinic" );
	deepEqual( Stem("clinico"), "clinic" );
	deepEqual( Stem("clinton"), "clinton" );
	deepEqual( Stem("cll"), "cll" );
	deepEqual( Stem("cln"), "cln" );
	deepEqual( Stem("clò"), "clò" );
	deepEqual( Stem("clodio"), "clod" );
	deepEqual( Stem("clou"), "clou" );
	deepEqual( Stem("clr"), "clr" );
	deepEqual( Stem("club"), "club" );
	deepEqual( Stem("clusone"), "cluson" );
	deepEqual( Stem("clwyd"), "clwyd" );
	deepEqual( Stem("cmos"), "cmos" );
	deepEqual( Stem("cn"), "cn" );
	deepEqual( Stem("cna"), "cna" );
	deepEqual( Stem("cnt"), "cnt" );
	deepEqual( Stem("co"), "co" );
	deepEqual( Stem("coalizaione"), "coalizaion" );
	deepEqual( Stem("coalizione"), "coalizion" );
	deepEqual( Stem("coalizioni"), "coalizion" );
	deepEqual( Stem("coatta"), "coatt" );
	deepEqual( Stem("cob"), "cob" );
	deepEqual( Stem("coblenza"), "coblenz" );
	deepEqual( Stem("cobra"), "cobr" );
	deepEqual( Stem("cocaina"), "cocain" );
	deepEqual( Stem("cocche"), "cocc" );
	deepEqual( Stem("cocchiere"), "cocc" );
	deepEqual( Stem("cocci"), "cocc" );
	deepEqual( Stem("coccia"), "cocc" );
	deepEqual( Stem("coceva"), "coc" );
	deepEqual( Stem("cochin"), "cochin" );
	deepEqual( Stem("cocuzzoli"), "cocuzzol" );
	deepEqual( Stem("cocuzzolo"), "cocuzzol" );
	deepEqual( Stem("coda"), "cod" );
	deepEqual( Stem("codarde"), "codard" );
	deepEqual( Stem("codazzo"), "codazz" );
	deepEqual( Stem("code"), "cod" );
	deepEqual( Stem("codesta"), "codest" );
	deepEqual( Stem("codeste"), "codest" );
	deepEqual( Stem("codesti"), "codest" );
	deepEqual( Stem("codesto"), "codest" );
	deepEqual( Stem("codice"), "codic" );
	deepEqual( Stem("codignoni"), "codignon" );
	deepEqual( Stem("coe"), "coe" );
	deepEqual( Stem("coefficiente"), "coefficient" );
	deepEqual( Stem("coelestium"), "coelestium" );
	deepEqual( Stem("coerente"), "coerent" );
	deepEqual( Stem("coerentemente"), "coerent" );
	deepEqual( Stem("coerenti"), "coerent" );
	deepEqual( Stem("coerenza"), "coerenz" );
	deepEqual( Stem("coetaneo"), "coetane" );
	deepEqual( Stem("coevi"), "coev" );
	deepEqual( Stem("coferenze"), "coferent" );
	deepEqual( Stem("cofferati"), "coffer" );
	deepEqual( Stem("cofide"), "cofid" );
	deepEqual( Stem("cogenerazione"), "cogener" );
	deepEqual( Stem("coglie"), "cogl" );
	deepEqual( Stem("coglierà"), "cogl" );
	deepEqual( Stem("coglierci"), "cogl" );
	deepEqual( Stem("cogliere"), "cogl" );
	deepEqual( Stem("coglierne"), "cogl" );
	deepEqual( Stem("cognati"), "cogn" );
	deepEqual( Stem("cognatio"), "cognat" );
	deepEqual( Stem("cogne"), "cogn" );
	deepEqual( Stem("cognetex"), "cognetex" );
	deepEqual( Stem("cognizion"), "cognizion" );
	deepEqual( Stem("cognizione"), "cognizion" );
	deepEqual( Stem("cognizioni"), "cognizion" );
	deepEqual( Stem("cognome"), "cognom" );
	deepEqual( Stem("coi"), "coi" );
	deepEqual( Stem("coim"), "coim" );
	deepEqual( Stem("coincide"), "coincid" );
	deepEqual( Stem("coincidenza"), "coincident" );
	deepEqual( Stem("coinciso"), "coincis" );
	deepEqual( Stem("coinvolge"), "coinvolg" );
	deepEqual( Stem("coinvolgerà"), "coinvolg" );
	deepEqual( Stem("coinvolgere"), "coinvolg" );
	deepEqual( Stem("coinvolgimento"), "coinvolg" );
	deepEqual( Stem("coinvolgono"), "coinvolg" );
	deepEqual( Stem("coinvolta"), "coinvolt" );
	deepEqual( Stem("coinvolte"), "coinvolt" );
	deepEqual( Stem("coinvolti"), "coinvolt" );
	deepEqual( Stem("coinvolto"), "coinvolt" );
	deepEqual( Stem("coiro"), "coir" );
	deepEqual( Stem("cois"), "cois" );
	deepEqual( Stem("col"), "col" );
	deepEqual( Stem("colà"), "col" );
	deepEqual( Stem("colabrodo"), "colabrod" );
	deepEqual( Stem("colaiacomo"), "colaiacom" );
	deepEqual( Stem("colalucci"), "colalucc" );
	deepEqual( Stem("colazione"), "colazion" );
	deepEqual( Stem("colbò"), "colb" );
	deepEqual( Stem("colei"), "cole" );
	deepEqual( Stem("colendissimo"), "colendissim" );
	deepEqual( Stem("coleridge"), "coleridg" );
	deepEqual( Stem("colgono"), "colg" );
	deepEqual( Stem("colico"), "colic" );
	deepEqual( Stem("coll"), "coll" );
	deepEqual( Stem("colla"), "coll" );
	deepEqual( Stem("collabora"), "collabor" );
	deepEqual( Stem("collaborando"), "collabor" );
	deepEqual( Stem("collaborare"), "collabor" );
	deepEqual( Stem("collaborato"), "collabor" );
	deepEqual( Stem("collaboratore"), "collabor" );
	deepEqual( Stem("collaboratori"), "collabor" );
	deepEqual( Stem("collaboratrici"), "collabor" );
	deepEqual( Stem("collaborazione"), "collabor" );
	deepEqual( Stem("collaborazioni"), "collabor" );
	deepEqual( Stem("collalto"), "collalt" );
	deepEqual( Stem("collana"), "collan" );
	deepEqual( Stem("collant"), "collant" );
	deepEqual( Stem("collare"), "coll" );
	deepEqual( Stem("collaudo"), "collaud" );
	deepEqual( Stem("colle"), "coll" );
	deepEqual( Stem("colleferro"), "colleferr" );
	deepEqual( Stem("collega"), "colleg" );
	deepEqual( Stem("collegà"), "colleg" );
	deepEqual( Stem("collegabile"), "colleg" );
	deepEqual( Stem("collegamenti"), "colleg" );
	deepEqual( Stem("collegamento"), "colleg" );
	deepEqual( Stem("collegare"), "colleg" );
	deepEqual( Stem("collegata"), "colleg" );
	deepEqual( Stem("collegate"), "colleg" );
	deepEqual( Stem("collegati"), "colleg" );
	deepEqual( Stem("collegato"), "colleg" );
	deepEqual( Stem("collegava"), "colleg" );
	deepEqual( Stem("college"), "colleg" );
	deepEqual( Stem("colleggiale"), "colleggial" );
	deepEqual( Stem("colleggialità"), "colleggial" );
	deepEqual( Stem("collegherà"), "colleg" );
	deepEqual( Stem("colleghi"), "colleg" );
	deepEqual( Stem("collegi"), "colleg" );
	deepEqual( Stem("collegiale"), "collegial" );
	deepEqual( Stem("collegialità"), "collegial" );
	deepEqual( Stem("collegio"), "colleg" );
	deepEqual( Stem("collera"), "coller" );
	deepEqual( Stem("collerico"), "coller" );
	deepEqual( Stem("collettiva"), "collett" );
	deepEqual( Stem("collettività"), "collett" );
	deepEqual( Stem("collettivo"), "collett" );
	deepEqual( Stem("collezionato"), "collezion" );
	deepEqual( Stem("collezionava"), "collezion" );
	deepEqual( Stem("collezione"), "collezion" );
	deepEqual( Stem("collezioni"), "collezion" );
	deepEqual( Stem("colli"), "coll" );
	deepEqual( Stem("colline"), "collin" );
	deepEqual( Stem("collinetta"), "collinett" );
	deepEqual( Stem("collisione"), "collision" );
	deepEqual( Stem("collo"), "coll" );
	deepEqual( Stem("colloca"), "colloc" );
	deepEqual( Stem("collocamenti"), "colloc" );
	deepEqual( Stem("collocamento"), "colloc" );
	deepEqual( Stem("collocandolo"), "colloc" );
	deepEqual( Stem("collocare"), "colloc" );
	deepEqual( Stem("collocarla"), "colloc" );
	deepEqual( Stem("collocarsi"), "colloc" );
	deepEqual( Stem("collocarvi"), "colloc" );
	deepEqual( Stem("collocata"), "colloc" );
	deepEqual( Stem("collocatasi"), "collocatas" );
	deepEqual( Stem("collocate"), "colloc" );
	deepEqual( Stem("collocato"), "colloc" );
	deepEqual( Stem("collocazione"), "colloc" );
	deepEqual( Stem("collocazioni"), "colloc" );
	deepEqual( Stem("collocherebbe"), "colloc" );
	deepEqual( Stem("collochi"), "colloc" );
	deepEqual( Stem("colloqui"), "colloqu" );
	deepEqual( Stem("colloquio"), "colloqu" );
	deepEqual( Stem("colloredo"), "collored" );
	deepEqual( Stem("collusione"), "collusion" );
	deepEqual( Stem("colluttazioni"), "collutt" );
	deepEqual( Stem("colma"), "colm" );
	deepEqual( Stem("colmare"), "colm" );
	deepEqual( Stem("colmata"), "colm" );
	deepEqual( Stem("colme"), "colm" );
	deepEqual( Stem("colmi"), "colm" );
	deepEqual( Stem("colmo"), "colm" );
	deepEqual( Stem("colò"), "col" );
	deepEqual( Stem("colombe"), "colomb" );
	deepEqual( Stem("colombia"), "colomb" );
	deepEqual( Stem("colombiana"), "colombian" );
	deepEqual( Stem("colombiano"), "colomb" );
	deepEqual( Stem("colombo"), "colomb" );
	deepEqual( Stem("colombotti"), "colombott" );
	deepEqual( Stem("colonello"), "colonell" );
	deepEqual( Stem("coloniale"), "colonial" );
	deepEqual( Stem("colonna"), "colonn" );
	deepEqual( Stem("colonne"), "colonn" );
	deepEqual( Stem("colonnello"), "colonnell" );
	deepEqual( Stem("colonnese"), "colonnes" );
	deepEqual( Stem("colono"), "col" );
	deepEqual( Stem("color"), "color" );
	deepEqual( Stem("colorati"), "color" );
	deepEqual( Stem("colore"), "color" );
	deepEqual( Stem("colori"), "color" );
	deepEqual( Stem("colorito"), "color" );
	deepEqual( Stem("colorivano"), "color" );
	deepEqual( Stem("coloro"), "color" );
	deepEqual( Stem("colossi"), "coloss" );
	deepEqual( Stem("colosso"), "coloss" );
	deepEqual( Stem("colpa"), "colp" );
	deepEqual( Stem("colpe"), "colp" );
	deepEqual( Stem("colpendo"), "colp" );
	deepEqual( Stem("colpevol"), "colpevol" );
	deepEqual( Stem("colpevole"), "colpevol" );
	deepEqual( Stem("colpevolè"), "colpevol" );
	deepEqual( Stem("colpevolezza"), "colpevolezz" );
	deepEqual( Stem("colpevoli"), "colpevol" );
	deepEqual( Stem("colpevolizzare"), "colpevolizz" );
	deepEqual( Stem("colpi"), "colp" );
	deepEqual( Stem("colpì"), "colp" );
	deepEqual( Stem("colpisce"), "colp" );
	deepEqual( Stem("colpiscono"), "colp" );
	deepEqual( Stem("colpisse"), "colpiss" );
	deepEqual( Stem("colpita"), "colp" );
	deepEqual( Stem("colpite"), "colp" );
	deepEqual( Stem("colpiti"), "colp" );
	deepEqual( Stem("colpito"), "colp" );
	deepEqual( Stem("colpo"), "colp" );
	deepEqual( Stem("colse"), "cols" );
	deepEqual( Stem("colsero"), "colser" );
	deepEqual( Stem("colta"), "colt" );
	deepEqual( Stem("coltellacci"), "coltellacc" );
	deepEqual( Stem("coltellaccio"), "coltellacc" );
	deepEqual( Stem("coltellata"), "coltell" );
	deepEqual( Stem("coltellate"), "coltell" );
	deepEqual( Stem("coltelli"), "coltell" );
	deepEqual( Stem("coltello"), "coltell" );
	deepEqual( Stem("colti"), "colt" );
	deepEqual( Stem("coltivando"), "coltiv" );
	deepEqual( Stem("coltivare"), "coltiv" );
	deepEqual( Stem("coltivasse"), "coltiv" );
	deepEqual( Stem("coltivata"), "coltiv" );
	deepEqual( Stem("coltivate"), "colt" );
	deepEqual( Stem("coltivati"), "coltiv" );
	deepEqual( Stem("coltivato"), "coltiv" );
	deepEqual( Stem("coltivava"), "coltiv" );
	deepEqual( Stem("coltivazioni"), "coltiv" );
	deepEqual( Stem("colto"), "colt" );
	deepEqual( Stem("coltura"), "coltur" );
	deepEqual( Stem("colui"), "colu" );
	deepEqual( Stem("columbia"), "columb" );
	deepEqual( Stem("com"), "com" );
	deepEqual( Stem("comanda"), "comand" );
	deepEqual( Stem("comandamenti"), "comand" );
	deepEqual( Stem("comandami"), "comandam" );
	deepEqual( Stem("comandan"), "comandan" );
	deepEqual( Stem("comandane"), "comandan" );
	deepEqual( Stem("comandano"), "comand" );
	deepEqual( Stem("comandante"), "comand" );
	deepEqual( Stem("comandanti"), "comand" );
	deepEqual( Stem("comandar"), "comand" );
	deepEqual( Stem("comandare"), "comand" );
	deepEqual( Stem("comandargli"), "comand" );
	deepEqual( Stem("comandarle"), "comand" );
	deepEqual( Stem("comandarne"), "comand" );
	deepEqual( Stem("comandasse"), "comand" );
	deepEqual( Stem("comandassi"), "comand" );
	deepEqual( Stem("comandata"), "comand" );
	deepEqual( Stem("comandato"), "comand" );
	deepEqual( Stem("comandava"), "comand" );
	deepEqual( Stem("comanderai"), "comand" );
	deepEqual( Stem("comanderò"), "comand" );
	deepEqual( Stem("comandi"), "comand" );
	deepEqual( Stem("comando"), "com" );
	deepEqual( Stem("comandò"), "comand" );
	deepEqual( Stem("comar"), "com" );
	deepEqual( Stem("comare"), "com" );
	deepEqual( Stem("comari"), "comar" );
	deepEqual( Stem("comaschi"), "comasc" );
	deepEqual( Stem("comasco"), "comasc" );
	deepEqual( Stem("comau"), "comau" );
	deepEqual( Stem("combaciano"), "combac" );
	deepEqual( Stem("combatta"), "combatt" );
	deepEqual( Stem("combattendo"), "combatt" );
	deepEqual( Stem("combattente"), "combattent" );
	deepEqual( Stem("combattenti"), "combattent" );
	deepEqual( Stem("combatter"), "combatter" );
	deepEqual( Stem("combattere"), "combatt" );
	deepEqual( Stem("combattesse"), "combattess" );
	deepEqual( Stem("combatteva"), "combatt" );
	deepEqual( Stem("combattiemnti"), "combattiemnt" );
	deepEqual( Stem("combattimenti"), "combatt" );
	deepEqual( Stem("combattimento"), "combatt" );
	deepEqual( Stem("combattono"), "combatt" );
	deepEqual( Stem("combattuta"), "combatt" );
	deepEqual( Stem("combinata"), "combin" );
	deepEqual( Stem("combinazione"), "combin" );
	deepEqual( Stem("combinazioni"), "combin" );
	deepEqual( Stem("combineranno"), "combin" );
	deepEqual( Stem("combò"), "comb" );
	deepEqual( Stem("combustibile"), "combust" );
	deepEqual( Stem("combustibili"), "combust" );
	deepEqual( Stem("come"), "com" );
	deepEqual( Stem("comedy"), "comedy" );
	deepEqual( Stem("comencini"), "comencin" );
	deepEqual( Stem("comense"), "comens" );
	deepEqual( Stem("comentitiasque"), "comentitiasqu" );
	deepEqual( Stem("comercio"), "comerc" );
	deepEqual( Stem("cometa"), "comet" );
	deepEqual( Stem("comi"), "com" );
	deepEqual( Stem("comiche"), "comic" );
	deepEqual( Stem("comici"), "comic" );
	deepEqual( Stem("comico"), "comic" );
	deepEqual( Stem("comignoli"), "comignol" );
	deepEqual( Stem("comillas"), "comillas" );
	deepEqual( Stem("comincerà"), "cominc" );
	deepEqual( Stem("comincerann"), "comincerann" );
	deepEqual( Stem("cominceranno"), "cominc" );
	deepEqual( Stem("comincerei"), "cominc" );
	deepEqual( Stem("cominci"), "cominc" );
	deepEqual( Stem("comincia"), "cominc" );
	deepEqual( Stem("cominciamo"), "cominc" );
	deepEqual( Stem("cominciando"), "cominc" );
	deepEqual( Stem("cominciano"), "cominc" );
	deepEqual( Stem("cominciar"), "cominc" );
	deepEqual( Stem("cominciare"), "cominc" );
	deepEqual( Stem("cominciarono"), "cominc" );
	deepEqual( Stem("cominciasse"), "cominc" );
	deepEqual( Stem("cominciata"), "cominc" );
	deepEqual( Stem("cominciate"), "cominc" );
	deepEqual( Stem("cominciati"), "cominc" );
	deepEqual( Stem("cominciato"), "cominc" );
	deepEqual( Stem("cominciava"), "cominc" );
	deepEqual( Stem("cominciavan"), "cominciavan" );
	deepEqual( Stem("cominciavano"), "cominc" );
	deepEqual( Stem("cominciavo"), "cominc" );
	deepEqual( Stem("comincin"), "comincin" );
	deepEqual( Stem("comincio"), "cominc" );
	deepEqual( Stem("cominciò"), "cominc" );
	deepEqual( Stem("cominica"), "comin" );
	deepEqual( Stem("comino"), "comin" );
	deepEqual( Stem("comit"), "comit" );
	deepEqual( Stem("comitati"), "comit" );
	deepEqual( Stem("comitato"), "comit" );
	deepEqual( Stem("comites"), "comites" );
	deepEqual( Stem("comitiva"), "comit" );
	deepEqual( Stem("comitive"), "comit" );
	deepEqual( Stem("comizio"), "comiz" );
	deepEqual( Stem("comma"), "comm" );
	deepEqual( Stem("commando"), "comm" );
	deepEqual( Stem("commedia"), "commed" );
	deepEqual( Stem("commemorano"), "commemor" );
	deepEqual( Stem("commemorare"), "commemor" );
	deepEqual( Stem("commemorazione"), "commemor" );
	deepEqual( Stem("commemorazioni"), "commemor" );
	deepEqual( Stem("commensale"), "commensal" );
	deepEqual( Stem("commensali"), "commensal" );
	deepEqual( Stem("comment"), "comment" );
	deepEqual( Stem("commenta"), "comment" );
	deepEqual( Stem("commentando"), "comment" );
	deepEqual( Stem("commentare"), "comment" );
	deepEqual( Stem("commentate"), "comment" );
	deepEqual( Stem("commentati"), "comment" );
	deepEqual( Stem("commentato"), "comment" );
	deepEqual( Stem("commentatori"), "comment" );
	deepEqual( Stem("commenti"), "comment" );
	deepEqual( Stem("commento"), "comment" );
	deepEqual( Stem("commerci"), "comm" );
	deepEqual( Stem("commerciabile"), "commerc" );
	deepEqual( Stem("commerciale"), "commercial" );
	deepEqual( Stem("commerciali"), "commercial" );
	deepEqual( Stem("commercialisti"), "commercial" );
	deepEqual( Stem("commercializzazione"), "commercializz" );
	deepEqual( Stem("commerciano"), "commerc" );
	deepEqual( Stem("commerciante"), "commerc" );
	deepEqual( Stem("commercianti"), "commerc" );
	deepEqual( Stem("commercio"), "commerc" );
	deepEqual( Stem("commerzbank"), "commerzbank" );
	deepEqual( Stem("commessa"), "commess" );
	deepEqual( Stem("commesse"), "commess" );
	deepEqual( Stem("commessi"), "commess" );
	deepEqual( Stem("commesso"), "commess" );
	deepEqual( Stem("commestibili"), "commest" );
	deepEqual( Stem("commette"), "commett" );
	deepEqual( Stem("commetter"), "commetter" );
	deepEqual( Stem("commettere"), "commett" );
	deepEqual( Stem("commetterne"), "commett" );
	deepEqual( Stem("commettesse"), "commettess" );
	deepEqual( Stem("commetteva"), "commett" );
	deepEqual( Stem("commettevano"), "commett" );
	deepEqual( Stem("commettiamo"), "commett" );
	deepEqual( Stem("commettono"), "commett" );
	deepEqual( Stem("commiato"), "comm" );
	deepEqual( Stem("commilitoni"), "commiliton" );
	deepEqual( Stem("comminare"), "commin" );
	deepEqual( Stem("comminazioni"), "commin" );
	deepEqual( Stem("commisario"), "commisar" );
	deepEqual( Stem("commisione"), "commision" );
	deepEqual( Stem("commisisone"), "commisison" );
	deepEqual( Stem("commissari"), "commissar" );
	deepEqual( Stem("commissariale"), "commissarial" );
	deepEqual( Stem("commissariamento"), "commissar" );
	deepEqual( Stem("commissariati"), "commissar" );
	deepEqual( Stem("commissariato"), "commissar" );
	deepEqual( Stem("commissario"), "commissar" );
	deepEqual( Stem("commission"), "commission" );
	deepEqual( Stem("commissiona"), "commission" );
	deepEqual( Stem("commissionata"), "commission" );
	deepEqual( Stem("commissionato"), "commission" );
	deepEqual( Stem("commissione"), "commission" );
	deepEqual( Stem("commissioni"), "commission" );
	deepEqual( Stem("commistione"), "commistion" );
	deepEqual( Stem("commossa"), "commoss" );
	deepEqual( Stem("commosse"), "commoss" );
	deepEqual( Stem("commossi"), "commoss" );
	deepEqual( Stem("commosso"), "commoss" );
	deepEqual( Stem("commovere"), "commov" );
	deepEqual( Stem("commoversi"), "commov" );
	deepEqual( Stem("commozione"), "commozion" );
	deepEqual( Stem("commozioni"), "commozion" );
	deepEqual( Stem("commutazione"), "commut" );
	deepEqual( Stem("como"), "com" );
	deepEqual( Stem("comoda"), "comod" );
	deepEqual( Stem("comodamente"), "comod" );
	deepEqual( Stem("comodi"), "comod" );
	deepEqual( Stem("comodità"), "comod" );
	deepEqual( Stem("comodo"), "comod" );
	deepEqual( Stem("comp"), "comp" );
	deepEqual( Stem("compadrone"), "compadron" );
	deepEqual( Stem("compagna"), "compagn" );
	deepEqual( Stem("compagne"), "compagn" );
	deepEqual( Stem("compagni"), "compagn" );
	deepEqual( Stem("compagnia"), "compagn" );
	deepEqual( Stem("compagnie"), "compagn" );
	deepEqual( Stem("compagno"), "compagn" );
	deepEqual( Stem("compagnone"), "compagnon" );
	deepEqual( Stem("compagnoni"), "compagnon" );
	deepEqual( Stem("companatico"), "companat" );
	deepEqual( Stem("compania"), "compan" );
	deepEqual( Stem("company"), "company" );
	deepEqual( Stem("compare"), "comp" );
	deepEqual( Stem("comparendo"), "compar" );
	deepEqual( Stem("comparir"), "compar" );
	deepEqual( Stem("comparire"), "compar" );
	deepEqual( Stem("comparirle"), "compar" );
	deepEqual( Stem("comparirvi"), "compar" );
	deepEqual( Stem("comparisce"), "compar" );
	deepEqual( Stem("compariscono"), "compar" );
	deepEqual( Stem("compariva"), "compar" );
	deepEqual( Stem("comparivan"), "comparivan" );
	deepEqual( Stem("comparivano"), "compar" );
	deepEqual( Stem("comparsa"), "compars" );
	deepEqual( Stem("comparse"), "compars" );
	deepEqual( Stem("comparso"), "compars" );
	deepEqual( Stem("comparti"), "comp" );
	deepEqual( Stem("compartimenti"), "compart" );
	deepEqual( Stem("compartimento"), "compart" );
	deepEqual( Stem("comparto"), "compart" );
	deepEqual( Stem("comparve"), "comparv" );
	deepEqual( Stem("compassion"), "compassion" );
	deepEqual( Stem("compassione"), "compassion" );
	deepEqual( Stem("compassionevole"), "compassionevol" );
	deepEqual( Stem("compassionevoli"), "compassionevol" );
	deepEqual( Stem("compatibile"), "compat" );
	deepEqual( Stem("compatibili"), "compat" );
	deepEqual( Stem("compatibilità"), "compatibil" );
	deepEqual( Stem("compatibilmente"), "compatibil" );
	deepEqual( Stem("compatire"), "compat" );
	deepEqual( Stem("compatirlo"), "compat" );
	deepEqual( Stem("compatirsi"), "compat" );
	deepEqual( Stem("compatisco"), "compat" );
	deepEqual( Stem("compatitemi"), "compatitem" );
	deepEqual( Stem("compatriotti"), "compatriott" );
	deepEqual( Stem("compatta"), "compatt" );
	deepEqual( Stem("compattezza"), "compattezz" );
	deepEqual( Stem("compatti"), "compatt" );
	deepEqual( Stem("compegnie"), "compegn" );
	deepEqual( Stem("compendio"), "compend" );
	deepEqual( Stem("compensar"), "compens" );
	deepEqual( Stem("compensarla"), "compens" );
	deepEqual( Stem("compensativo"), "compens" );
	deepEqual( Stem("compensava"), "compens" );
	deepEqual( Stem("compensazione"), "compens" );
	deepEqual( Stem("compenso"), "compens" );
	deepEqual( Stem("comperare"), "comper" );
	deepEqual( Stem("compertum"), "compertum" );
	deepEqual( Stem("compete"), "comp" );
	deepEqual( Stem("competente"), "competent" );
	deepEqual( Stem("competenti"), "competent" );
	deepEqual( Stem("competenza"), "competent" );
	deepEqual( Stem("competenze"), "competent" );
	deepEqual( Stem("competer"), "competer" );
	deepEqual( Stem("competere"), "compet" );
	deepEqual( Stem("competesse"), "competess" );
	deepEqual( Stem("competitito"), "competit" );
	deepEqual( Stem("competitiva"), "competit" );
	deepEqual( Stem("competitività"), "competit" );
	deepEqual( Stem("competitivo"), "competit" );
	deepEqual( Stem("competizione"), "competizion" );
	deepEqual( Stem("competizioni"), "competizion" );
	deepEqual( Stem("compiace"), "compiac" );
	deepEqual( Stem("compiacendosi"), "compiac" );
	deepEqual( Stem("compiacenza"), "compiacent" );
	deepEqual( Stem("compiacenze"), "compiacent" );
	deepEqual( Stem("compiacere"), "compiac" );
	deepEqual( Stem("compiacerla"), "compiac" );
	deepEqual( Stem("compiaceva"), "compiac" );
	deepEqual( Stem("compiacimento"), "compiac" );
	deepEqual( Stem("compiacque"), "compiacqu" );
	deepEqual( Stem("compiangere"), "compiang" );
	deepEqual( Stem("compiere"), "comp" );
	deepEqual( Stem("compilata"), "compil" );
	deepEqual( Stem("compilati"), "compil" );
	deepEqual( Stem("compilaua"), "compilau" );
	deepEqual( Stem("compilazione"), "compil" );
	deepEqual( Stem("compimento"), "comp" );
	deepEqual( Stem("compir"), "comp" );
	deepEqual( Stem("compirà"), "comp" );
	deepEqual( Stem("compire"), "comp" );
	deepEqual( Stem("compisca"), "comp" );
	deepEqual( Stem("compita"), "comp" );
	deepEqual( Stem("compitezza"), "compitezz" );
	deepEqual( Stem("compiti"), "comp" );
	deepEqual( Stem("compito"), "comp" );
	deepEqual( Stem("compiuta"), "comp" );
	deepEqual( Stem("compiutamente"), "compiut" );
	deepEqual( Stem("compiuti"), "comp" );
	deepEqual( Stem("compiuto"), "comp" );
	deepEqual( Stem("complatamente"), "complat" );
	deepEqual( Stem("compleanno"), "compleann" );
	deepEqual( Stem("complementare"), "complement" );
	deepEqual( Stem("complessa"), "compless" );
	deepEqual( Stem("complesse"), "compless" );
	deepEqual( Stem("complessi"), "compless" );
	deepEqual( Stem("complessione"), "complession" );
	deepEqual( Stem("complessità"), "compless" );
	deepEqual( Stem("complessiva"), "compless" );
	deepEqual( Stem("complessivamente"), "compless" );
	deepEqual( Stem("complessive"), "compless" );
	deepEqual( Stem("complessivo"), "compless" );
	deepEqual( Stem("complesso"), "compless" );
	deepEqual( Stem("completa"), "complet" );
	deepEqual( Stem("completamente"), "complet" );
	deepEqual( Stem("completamento"), "complet" );
	deepEqual( Stem("completare"), "complet" );
	deepEqual( Stem("completarla"), "complet" );
	deepEqual( Stem("completata"), "complet" );
	deepEqual( Stem("completato"), "complet" );
	deepEqual( Stem("completavano"), "complet" );
	deepEqual( Stem("completo"), "complet" );
	deepEqual( Stem("complica"), "complic" );
	deepEqual( Stem("complicata"), "complic" );
	deepEqual( Stem("complicate"), "complic" );
	deepEqual( Stem("complice"), "complic" );
	deepEqual( Stem("complici"), "complic" );
	deepEqual( Stem("complicibus"), "complicibus" );
	deepEqual( Stem("complicità"), "complic" );
	deepEqual( Stem("complimentare"), "compliment" );
	deepEqual( Stem("complimentavan"), "complimentavan" );
	deepEqual( Stem("complimenti"), "compl" );
	deepEqual( Stem("complimento"), "compl" );
	deepEqual( Stem("complotto"), "complott" );
	deepEqual( Stem("complures"), "complures" );
	deepEqual( Stem("compone"), "compon" );
	deepEqual( Stem("componente"), "component" );
	deepEqual( Stem("componenti"), "component" );
	deepEqual( Stem("componesse"), "componess" );
	deepEqual( Stem("componeva"), "compon" );
	deepEqual( Stem("componevano"), "compon" );
	deepEqual( Stem("compongono"), "compong" );
	deepEqual( Stem("componi"), "compon" );
	deepEqual( Stem("comporne"), "comporn" );
	deepEqual( Stem("comporranno"), "comporrann" );
	deepEqual( Stem("comporre"), "comporr" );
	deepEqual( Stem("comporta"), "comport" );
	deepEqual( Stem("comportamenti"), "comport" );
	deepEqual( Stem("comportamento"), "comport" );
	deepEqual( Stem("comportanmento"), "comportanment" );
	deepEqual( Stem("comportare"), "comport" );
	deepEqual( Stem("comportassero"), "comport" );
	deepEqual( Stem("comportato"), "comport" );
	deepEqual( Stem("comporti"), "comport" );
	deepEqual( Stem("comportino"), "comportin" );
	deepEqual( Stem("compose"), "compos" );
	deepEqual( Stem("composizione"), "composizion" );
	deepEqual( Stem("composta"), "compost" );
	deepEqual( Stem("composte"), "compost" );
	deepEqual( Stem("compostezza"), "compostezz" );
	deepEqual( Stem("composti"), "compost" );
	deepEqual( Stem("composto"), "compost" );
	deepEqual( Stem("compra"), "compr" );
	deepEqual( Stem("comprando"), "compr" );
	deepEqual( Stem("comprandosi"), "compr" );
	deepEqual( Stem("comprar"), "compr" );
	deepEqual( Stem("comprare"), "compr" );
	deepEqual( Stem("comprarle"), "compr" );
	deepEqual( Stem("comprarli"), "compr" );
	deepEqual( Stem("comprarlo"), "compr" );
	deepEqual( Stem("comprarne"), "compr" );
	deepEqual( Stem("comprarsi"), "compr" );
	deepEqual( Stem("comprassero"), "compr" );
	deepEqual( Stem("comprate"), "compr" );
	deepEqual( Stem("comprato"), "compr" );
	deepEqual( Stem("compratore"), "comprator" );
	deepEqual( Stem("compratori"), "comprator" );
	deepEqual( Stem("compravano"), "compr" );
	deepEqual( Stem("compre"), "compr" );
	deepEqual( Stem("comprenda"), "compr" );
	deepEqual( Stem("comprende"), "compr" );
	deepEqual( Stem("comprenderà"), "comprend" );
	deepEqual( Stem("comprendere"), "comprend" );
	deepEqual( Stem("comprendiamo"), "comprend" );
	deepEqual( Stem("comprendo"), "compr" );
	deepEqual( Stem("comprendono"), "comprend" );
	deepEqual( Stem("comprensione"), "comprension" );
	deepEqual( Stem("comprensiva"), "comprens" );
	deepEqual( Stem("comprensivi"), "comprens" );
	deepEqual( Stem("comprerà"), "compr" );
	deepEqual( Stem("comprerebbero"), "compr" );
	deepEqual( Stem("compresa"), "compres" );
	deepEqual( Stem("comprese"), "compres" );
	deepEqual( Stem("compresero"), "compreser" );
	deepEqual( Stem("compresi"), "compres" );
	deepEqual( Stem("compreso"), "compres" );
	deepEqual( Stem("compressa"), "compress" );
	deepEqual( Stem("compresse"), "compress" );
	deepEqual( Stem("compresso"), "compress" );
	deepEqual( Stem("compri"), "compr" );
	deepEqual( Stem("comprimere"), "comprim" );
	deepEqual( Stem("compromesse"), "compromess" );
	deepEqual( Stem("compromesso"), "compromess" );
	deepEqual( Stem("comprometere"), "compromet" );
	deepEqual( Stem("compromettere"), "compromett" );
	deepEqual( Stem("compromettersi"), "compromett" );
	deepEqual( Stem("compromissione"), "compromission" );
	deepEqual( Stem("comptetitive"), "comptetit" );
	deepEqual( Stem("compunta"), "compunt" );
	deepEqual( Stem("compunto"), "compunt" );
	deepEqual( Stem("compunzione"), "compunzion" );
	deepEqual( Stem("computer"), "computer" );
	deepEqual( Stem("comu"), "comu" );
	deepEqual( Stem("comunale"), "comunal" );
	deepEqual( Stem("comunali"), "comunal" );
	deepEqual( Stem("comune"), "comun" );
	deepEqual( Stem("comunemente"), "comun" );
	deepEqual( Stem("comuni"), "comun" );
	deepEqual( Stem("comunica"), "comun" );
	deepEqual( Stem("comunicare"), "comunic" );
	deepEqual( Stem("comunicargli"), "comunic" );
	deepEqual( Stem("comunicarle"), "comunic" );
	deepEqual( Stem("comunicata"), "comunic" );
	deepEqual( Stem("comunicate"), "comunic" );
	deepEqual( Stem("comunicati"), "comunic" );
	deepEqual( Stem("comunicatigli"), "comunicatigl" );
	deepEqual( Stem("comunicativo"), "comun" );
	deepEqual( Stem("comunicato"), "comunic" );
	deepEqual( Stem("comunicavano"), "comunic" );
	deepEqual( Stem("comunicazione"), "comun" );
	deepEqual( Stem("comunicazioni"), "comun" );
	deepEqual( Stem("comunicò"), "comunic" );
	deepEqual( Stem("comunismo"), "comun" );
	deepEqual( Stem("comunista"), "comun" );
	deepEqual( Stem("comuniste"), "comun" );
	deepEqual( Stem("comunisti"), "comun" );
	deepEqual( Stem("comunità"), "comun" );
	deepEqual( Stem("comunitari"), "comunitar" );
	deepEqual( Stem("comunitaria"), "comunitar" );
	deepEqual( Stem("comunitarie"), "comunitar" );
	deepEqual( Stem("comunitario"), "comunitar" );
	deepEqual( Stem("comunque"), "comunqu" );
	deepEqual( Stem("comuntiario"), "comuntiar" );
	deepEqual( Stem("comuque"), "comuqu" );
	deepEqual( Stem("con"), "con" );
	deepEqual( Stem("conai"), "cona" );
	deepEqual( Stem("conakry"), "conakry" );
	deepEqual( Stem("conan"), "conan" );
	deepEqual( Stem("conca"), "conc" );
	deepEqual( Stem("concatenata"), "concaten" );
	deepEqual( Stem("concatenazione"), "concaten" );
	deepEqual( Stem("concede"), "conced" );
	deepEqual( Stem("concedendo"), "conced" );
	deepEqual( Stem("conceder"), "conceder" );
	deepEqual( Stem("concederà"), "conced" );
	deepEqual( Stem("concedere"), "conced" );
	deepEqual( Stem("concedergli"), "conced" );
	deepEqual( Stem("concedete"), "conced" );
	deepEqual( Stem("concedetegli"), "concedetegl" );
	deepEqual( Stem("concedo"), "conced" );
	deepEqual( Stem("concento"), "concent" );
	deepEqual( Stem("concentramenti"), "concentr" );
	deepEqual( Stem("concentramento"), "concentr" );
	deepEqual( Stem("concentrandosi"), "concentr" );
	deepEqual( Stem("concentrano"), "concentr" );
	deepEqual( Stem("concentrarci"), "concentr" );
	deepEqual( Stem("concentrare"), "concentr" );
	deepEqual( Stem("concentrarsi"), "concentr" );
	deepEqual( Stem("concentrata"), "concentr" );
	deepEqual( Stem("concentrate"), "concentr" );
	deepEqual( Stem("concentratè"), "concentrat" );
	deepEqual( Stem("concentrati"), "concentr" );
	deepEqual( Stem("concentrazione"), "concentr" );
	deepEqual( Stem("concentrazioni"), "concentr" );
	deepEqual( Stem("concenzione"), "concenzion" );
	deepEqual( Stem("concepire"), "concep" );
	deepEqual( Stem("concepirsi"), "concep" );
	deepEqual( Stem("concepita"), "concep" );
	deepEqual( Stem("concepite"), "concep" );
	deepEqual( Stem("concepiva"), "concep" );
	deepEqual( Stem("concerne"), "conc" );
	deepEqual( Stem("concernente"), "concernent" );
	deepEqual( Stem("concernenti"), "concernent" );
	deepEqual( Stem("concertar"), "concert" );
	deepEqual( Stem("concertare"), "concert" );
	deepEqual( Stem("concertaron"), "concertaron" );
	deepEqual( Stem("concertarono"), "concert" );
	deepEqual( Stem("concertarsi"), "concert" );
	deepEqual( Stem("concertata"), "concert" );
	deepEqual( Stem("concertato"), "concert" );
	deepEqual( Stem("concerti"), "conc" );
	deepEqual( Stem("concerto"), "concert" );
	deepEqual( Stem("concertò"), "concert" );
	deepEqual( Stem("concessa"), "concess" );
	deepEqual( Stem("concesse"), "concess" );
	deepEqual( Stem("concessi"), "concess" );
	deepEqual( Stem("concessionari"), "concessionar" );
	deepEqual( Stem("concessionarie"), "concessionar" );
	deepEqual( Stem("concessionario"), "concessionar" );
	deepEqual( Stem("concessione"), "concession" );
	deepEqual( Stem("concessioni"), "concession" );
	deepEqual( Stem("concesso"), "concess" );
	deepEqual( Stem("concetti"), "concett" );
	deepEqual( Stem("concettini"), "concettin" );
	deepEqual( Stem("concetto"), "concett" );
	deepEqual( Stem("concezione"), "concezion" );
	deepEqual( Stem("conchiglie"), "conchigl" );
	deepEqual( Stem("conchiude"), "conchiud" );
	deepEqual( Stem("conchiudere"), "conchiud" );
	deepEqual( Stem("concian"), "concian" );
	deepEqual( Stem("conciato"), "conc" );
	deepEqual( Stem("concigliarglieli"), "concigl" );
	deepEqual( Stem("conciliare"), "concil" );
	deepEqual( Stem("conciliari"), "conciliar" );
	deepEqual( Stem("conciliava"), "concil" );
	deepEqual( Stem("conciliazionè"), "conciliazion" );
	deepEqual( Stem("concio"), "conc" );
	deepEqual( Stem("conciò"), "conc" );
	deepEqual( Stem("conciso"), "concis" );
	deepEqual( Stem("concitarsi"), "concit" );
	deepEqual( Stem("concitata"), "concit" );
	deepEqual( Stem("concitato"), "concit" );
	deepEqual( Stem("concittadina"), "concittadin" );
	deepEqual( Stem("conclamati"), "conclam" );
	deepEqual( Stem("conclavi"), "concl" );
	deepEqual( Stem("concluda"), "conclud" );
	deepEqual( Stem("conclude"), "conclud" );
	deepEqual( Stem("concludendo"), "conclud" );
	deepEqual( Stem("concludenti"), "concludent" );
	deepEqual( Stem("concluder"), "concluder" );
	deepEqual( Stem("concluderà"), "conclud" );
	deepEqual( Stem("concludere"), "conclud" );
	deepEqual( Stem("concludeva"), "conclud" );
	deepEqual( Stem("concludon"), "concludon" );
	deepEqual( Stem("concludono"), "conclud" );
	deepEqual( Stem("conclusa"), "conclus" );
	deepEqual( Stem("conclusasi"), "conclusas" );
	deepEqual( Stem("concluse"), "conclus" );
	deepEqual( Stem("conclusero"), "concluser" );
	deepEqual( Stem("conclusesi"), "concluses" );
	deepEqual( Stem("conclusi"), "conclus" );
	deepEqual( Stem("conclusione"), "conclusion" );
	deepEqual( Stem("conclusioni"), "conclusion" );
	deepEqual( Stem("conclusisi"), "conclusis" );
	deepEqual( Stem("conclusiva"), "conclus" );
	deepEqual( Stem("conclusivo"), "conclus" );
	deepEqual( Stem("concluso"), "conclus" );
	deepEqual( Stem("concomitanza"), "concomit" );
	deepEqual( Stem("concordando"), "concord" );
	deepEqual( Stem("concordano"), "concord" );
	deepEqual( Stem("concordare"), "concord" );
	deepEqual( Stem("concordata"), "concord" );
	deepEqual( Stem("concordate"), "concord" );
	deepEqual( Stem("concordati"), "concord" );
	deepEqual( Stem("concordato"), "concord" );
	deepEqual( Stem("concordi"), "concord" );
	deepEqual( Stem("concordiamo"), "concord" );
	deepEqual( Stem("concorrendo"), "concorr" );
	deepEqual( Stem("concorrente"), "concorrent" );
	deepEqual( Stem("concorrenti"), "concorrent" );
	deepEqual( Stem("concorrenza"), "concorrent" );
	deepEqual( Stem("concorrenziale"), "concorrenzial" );
	deepEqual( Stem("concorrenzialità"), "concorrenzial" );
	deepEqual( Stem("concorrere"), "concorr" );
	deepEqual( Stem("concorreva"), "concorr" );
	deepEqual( Stem("concorsero"), "concorser" );
	deepEqual( Stem("concorsi"), "concors" );
	deepEqual( Stem("concorso"), "concors" );
	deepEqual( Stem("concorsuale"), "concorsual" );
	deepEqual( Stem("concreta"), "concret" );
	deepEqual( Stem("concretament"), "concretament" );
	deepEqual( Stem("concretamente"), "concret" );
	deepEqual( Stem("concrete"), "concr" );
	deepEqual( Stem("concreti"), "concret" );
	deepEqual( Stem("concretizzare"), "concretizz" );
	deepEqual( Stem("concretizzato"), "concretizz" );
	deepEqual( Stem("concretizzazione"), "concretizz" );
	deepEqual( Stem("concretizzerà"), "concretizz" );
	deepEqual( Stem("concreto"), "concret" );
	deepEqual( Stem("concussione"), "concussion" );
	deepEqual( Stem("concussioni"), "concussion" );
	deepEqual( Stem("cond"), "cond" );
	deepEqual( Stem("condanna"), "condann" );
	deepEqual( Stem("condannare"), "condann" );
	deepEqual( Stem("condannarmi"), "condann" );
	deepEqual( Stem("condannata"), "condann" );
	deepEqual( Stem("condannati"), "condann" );
	deepEqual( Stem("condannato"), "condann" );
	deepEqual( Stem("condanne"), "condann" );
	deepEqual( Stem("condannerebbe"), "condann" );
	deepEqual( Stem("conde"), "cond" );
	deepEqual( Stem("condé"), "cond" );
	deepEqual( Stem("condensato"), "condens" );
	deepEqual( Stem("condicio"), "condic" );
	deepEqual( Stem("condiciò"), "condic" );
	deepEqual( Stem("condirettore"), "condirettor" );
	deepEqual( Stem("condiscendente"), "condiscendent" );
	deepEqual( Stem("condiscendenza"), "condiscendent" );
	deepEqual( Stem("condiscendere"), "condiscend" );
	deepEqual( Stem("condita"), "cond" );
	deepEqual( Stem("condite"), "cond" );
	deepEqual( Stem("conditi"), "cond" );
	deepEqual( Stem("conditio"), "condit" );
	deepEqual( Stem("condivide"), "condivid" );
	deepEqual( Stem("condivideranno"), "condivid" );
	deepEqual( Stem("condivido"), "condivid" );
	deepEqual( Stem("condivisa"), "condivis" );
	deepEqual( Stem("condivise"), "condivis" );
	deepEqual( Stem("condiviso"), "condivis" );
	deepEqual( Stem("condizion"), "condizion" );
	deepEqual( Stem("condiziona"), "condizion" );
	deepEqual( Stem("condizionante"), "condizion" );
	deepEqual( Stem("condizionare"), "condizion" );
	deepEqual( Stem("condizionarla"), "condizion" );
	deepEqual( Stem("condizionata"), "condizion" );
	deepEqual( Stem("condizionati"), "condizion" );
	deepEqual( Stem("condizionato"), "condizion" );
	deepEqual( Stem("condizione"), "condizion" );
	deepEqual( Stem("condizioni"), "condizion" );
	deepEqual( Stem("condoglianze"), "condogl" );
	deepEqual( Stem("condolersi"), "condol" );
	deepEqual( Stem("condoluto"), "condol" );
	deepEqual( Stem("condominio"), "condomin" );
	deepEqual( Stem("condono"), "cond" );
	deepEqual( Stem("condor"), "condor" );
	deepEqual( Stem("condotta"), "condott" );
	deepEqual( Stem("condotte"), "condott" );
	deepEqual( Stem("condotti"), "condott" );
	deepEqual( Stem("condottiere"), "condott" );
	deepEqual( Stem("condottieri"), "condottier" );
	deepEqual( Stem("condottiero"), "condottier" );
	deepEqual( Stem("condotto"), "condott" );
	deepEqual( Stem("conduca"), "conduc" );
	deepEqual( Stem("conduce"), "conduc" );
	deepEqual( Stem("conducendo"), "conduc" );
	deepEqual( Stem("conducendosi"), "conduc" );
	deepEqual( Stem("conducesse"), "conducess" );
	deepEqual( Stem("conducete"), "conduc" );
	deepEqual( Stem("conduceva"), "conduc" );
	deepEqual( Stem("conducevan"), "conducevan" );
	deepEqual( Stem("conducimi"), "conducim" );
	deepEqual( Stem("conduco"), "conduc" );
	deepEqual( Stem("conducono"), "conduc" );
	deepEqual( Stem("condur"), "condur" );
	deepEqual( Stem("condurla"), "condurl" );
	deepEqual( Stem("condurli"), "condurl" );
	deepEqual( Stem("condurlo"), "condurl" );
	deepEqual( Stem("condurmi"), "condurm" );
	deepEqual( Stem("condurne"), "condurn" );
	deepEqual( Stem("condurrà"), "condurr" );
	deepEqual( Stem("condurrai"), "condurra" );
	deepEqual( Stem("condurre"), "condurr" );
	deepEqual( Stem("condurrebbero"), "condurrebber" );
	deepEqual( Stem("condurremo"), "condurrem" );
	deepEqual( Stem("condurrò"), "condurr" );
	deepEqual( Stem("condursi"), "condurs" );
	deepEqual( Stem("condurvi"), "condurv" );
	deepEqual( Stem("condusse"), "conduss" );
	deepEqual( Stem("conduttore"), "conduttor" );
	deepEqual( Stem("conduttori"), "conduttor" );
	deepEqual( Stem("conduzione"), "conduzion" );
	deepEqual( Stem("conegliano"), "conegl" );
	deepEqual( Stem("conf"), "conf" );
	deepEqual( Stem("confapi"), "confap" );
	deepEqual( Stem("confartigianato"), "confartigian" );
	deepEqual( Stem("confcooperative"), "confcooper" );
	deepEqual( Stem("confederale"), "confederal" );
	deepEqual( Stem("confederali"), "confederal" );
	deepEqual( Stem("confederalismo"), "confederal" );
	deepEqual( Stem("confederazione"), "confeder" );
	deepEqual( Stem("confedilizia"), "confediliz" );
	deepEqual( Stem("conferenza"), "conferent" );
	deepEqual( Stem("conferenze"), "conferent" );
	deepEqual( Stem("conferì"), "confer" );
	deepEqual( Stem("conferimento"), "confer" );
	deepEqual( Stem("conferire"), "confer" );
	deepEqual( Stem("conferito"), "confer" );
	deepEqual( Stem("conferitogli"), "conferitogl" );
	deepEqual( Stem("conferma"), "conferm" );
	deepEqual( Stem("confermando"), "conferm" );
	deepEqual( Stem("confermandosi"), "conferm" );
	deepEqual( Stem("confermano"), "conferm" );
	deepEqual( Stem("confermare"), "conferm" );
	deepEqual( Stem("confermarla"), "conferm" );
	deepEqual( Stem("confermarlo"), "conferm" );
	deepEqual( Stem("confermarsi"), "conferm" );
	deepEqual( Stem("confermata"), "conferm" );
	deepEqual( Stem("confermati"), "conferm" );
	deepEqual( Stem("confermato"), "conferm" );
	deepEqual( Stem("confermava"), "conferm" );
	deepEqual( Stem("conferme"), "conferm" );
	deepEqual( Stem("confermerà"), "conferm" );
	deepEqual( Stem("confermi"), "conf" );
	deepEqual( Stem("confermo"), "conferm" );
	deepEqual( Stem("confermò"), "conferm" );
	deepEqual( Stem("confessa"), "confess" );
	deepEqual( Stem("confessar"), "confess" );
	deepEqual( Stem("confessare"), "confess" );
	deepEqual( Stem("confessarla"), "confess" );
	deepEqual( Stem("confessarle"), "confess" );
	deepEqual( Stem("confessarmi"), "confess" );
	deepEqual( Stem("confessarsi"), "confess" );
	deepEqual( Stem("confessata"), "confess" );
	deepEqual( Stem("confessato"), "confess" );
	deepEqual( Stem("confessava"), "confess" );
	deepEqual( Stem("confessi"), "confess" );
	deepEqual( Stem("confessiate"), "confess" );
	deepEqual( Stem("confessione"), "confession" );
	deepEqual( Stem("confessioni"), "confession" );
	deepEqual( Stem("confesso"), "confess" );
	deepEqual( Stem("confessore"), "confessor" );
	deepEqual( Stem("confessori"), "confessor" );
	deepEqual( Stem("confetti"), "confett" );
	deepEqual( Stem("confezionamento"), "confezion" );
	deepEqual( Stem("confezionano"), "confezion" );
	deepEqual( Stem("confezioni"), "confezion" );
	deepEqual( Stem("conficcata"), "conficc" );
	deepEqual( Stem("conficique"), "conficiqu" );
	deepEqual( Stem("confida"), "confid" );
	deepEqual( Stem("confidano"), "confid" );
	deepEqual( Stem("confidare"), "confid" );
	deepEqual( Stem("confidarsi"), "confid" );
	deepEqual( Stem("confidarvi"), "confid" );
	deepEqual( Stem("confidate"), "confid" );
	deepEqual( Stem("confidati"), "confid" );
	deepEqual( Stem("confidato"), "confid" );
	deepEqual( Stem("confidavano"), "confid" );
	deepEqual( Stem("confidente"), "confident" );
	deepEqual( Stem("confidenti"), "confident" );
	deepEqual( Stem("confidenza"), "confident" );
	deepEqual( Stem("confidenze"), "confident" );
	deepEqual( Stem("confidi"), "confid" );
	deepEqual( Stem("confido"), "confid" );
	deepEqual( Stem("configurare"), "configur" );
	deepEqual( Stem("configurerebbe"), "configur" );
	deepEqual( Stem("confina"), "confin" );
	deepEqual( Stem("confinante"), "confin" );
	deepEqual( Stem("confinanti"), "confin" );
	deepEqual( Stem("confinarie"), "confinar" );
	deepEqual( Stem("confinata"), "confin" );
	deepEqual( Stem("confinate"), "confin" );
	deepEqual( Stem("confindustria"), "confindustr" );
	deepEqual( Stem("confine"), "confin" );
	deepEqual( Stem("confini"), "confin" );
	deepEqual( Stem("confirmata"), "confirm" );
	deepEqual( Stem("confisca"), "conf" );
	deepEqual( Stem("conflitti"), "conflitt" );
	deepEqual( Stem("conflitto"), "conflitt" );
	deepEqual( Stem("conflittualità"), "conflittual" );
	deepEqual( Stem("confluente"), "confluent" );
	deepEqual( Stem("confluenza"), "confluenz" );
	deepEqual( Stem("confluiscano"), "conflu" );
	deepEqual( Stem("confluiti"), "conflu" );
	deepEqual( Stem("confonde"), "confond" );
	deepEqual( Stem("confondendo"), "confond" );
	deepEqual( Stem("confonder"), "confonder" );
	deepEqual( Stem("confondere"), "confond" );
	deepEqual( Stem("confondergli"), "confond" );
	deepEqual( Stem("confondermi"), "confond" );
	deepEqual( Stem("confondersi"), "confond" );
	deepEqual( Stem("confondessimo"), "confondessim" );
	deepEqual( Stem("confondeva"), "confond" );
	deepEqual( Stem("confondevano"), "confond" );
	deepEqual( Stem("confondono"), "confond" );
	deepEqual( Stem("conformarci"), "conform" );
	deepEqual( Stem("conformarsi"), "conform" );
	deepEqual( Stem("conforme"), "conform" );
	deepEqual( Stem("conformemente"), "conform" );
	deepEqual( Stem("conformi"), "conform" );
	deepEqual( Stem("conformità"), "conform" );
	deepEqual( Stem("confortando"), "confort" );
	deepEqual( Stem("confortante"), "confort" );
	deepEqual( Stem("confortarla"), "confort" );
	deepEqual( Stem("confortava"), "confort" );
	deepEqual( Stem("conforti"), "confort" );
	deepEqual( Stem("conforto"), "confort" );
	deepEqual( Stem("confratelli"), "confratell" );
	deepEqual( Stem("confratello"), "confratell" );
	deepEqual( Stem("confraternite"), "confratern" );
	deepEqual( Stem("confrontando"), "confront" );
	deepEqual( Stem("confrontano"), "confront" );
	deepEqual( Stem("confrontare"), "confront" );
	deepEqual( Stem("confrontarsi"), "confront" );
	deepEqual( Stem("confrontata"), "confront" );
	deepEqual( Stem("confronti"), "confront" );
	deepEqual( Stem("confrontino"), "confrontin" );
	deepEqual( Stem("confronto"), "confront" );
	deepEqual( Stem("confrontò"), "confront" );
	deepEqual( Stem("confsal"), "confsal" );
	deepEqual( Stem("confusa"), "confus" );
	deepEqual( Stem("confusamente"), "confus" );
	deepEqual( Stem("confuse"), "confus" );
	deepEqual( Stem("confusetto"), "confusett" );
	deepEqual( Stem("confusi"), "confus" );
	deepEqual( Stem("confusion"), "confusion" );
	deepEqual( Stem("confusionaria"), "confusionar" );
	deepEqual( Stem("confusione"), "confusion" );
	deepEqual( Stem("confusioni"), "confusion" );
	deepEqual( Stem("confuso"), "confus" );
	deepEqual( Stem("congedandolo"), "conged" );
	deepEqual( Stem("congedare"), "conged" );
	deepEqual( Stem("congedava"), "conged" );
	deepEqual( Stem("congedi"), "conged" );
	deepEqual( Stem("congedo"), "conged" );
	deepEqual( Stem("congegnate"), "congegn" );
	deepEqual( Stem("congegni"), "congegn" );
	deepEqual( Stem("congelando"), "congel" );
	deepEqual( Stem("congelare"), "congel" );
	deepEqual( Stem("congestione"), "congestion" );
	deepEqual( Stem("congettura"), "congettur" );
	deepEqual( Stem("congetturali"), "congettural" );
	deepEqual( Stem("congetturando"), "congettur" );
	deepEqual( Stem("congetturarlo"), "congettur" );
	deepEqual( Stem("congetturato"), "congettur" );
	deepEqual( Stem("congetture"), "congettur" );
	deepEqual( Stem("congetturò"), "congettur" );
	deepEqual( Stem("congiontione"), "congiontion" );
	deepEqual( Stem("congiunge"), "congiung" );
	deepEqual( Stem("congiuntamente"), "congiunt" );
	deepEqual( Stem("congiunte"), "congiunt" );
	deepEqual( Stem("congiunti"), "congiunt" );
	deepEqual( Stem("congiunto"), "congiunt" );
	deepEqual( Stem("congiuntura"), "congiuntur" );
	deepEqual( Stem("congiunturale"), "congiuntural" );
	deepEqual( Stem("congiunzione"), "congiunzion" );
	deepEqual( Stem("congiunzioni"), "congiunzion" );
	deepEqual( Stem("congiura"), "congiur" );
	deepEqual( Stem("congiurare"), "congiur" );
	deepEqual( Stem("congiurata"), "congiur" );
	deepEqual( Stem("congiurate"), "congiur" );
	deepEqual( Stem("congolese"), "congoles" );
	deepEqual( Stem("congratularsi"), "congratul" );
	deepEqual( Stem("congratulato"), "congratul" );
	deepEqual( Stem("congratulava"), "congratul" );
	deepEqual( Stem("congratulazione"), "congratul" );
	deepEqual( Stem("congratulazioni"), "congratul" );
	deepEqual( Stem("congratulò"), "congratul" );
	deepEqual( Stem("congregati"), "congreg" );
	deepEqual( Stem("congressi"), "congress" );
	deepEqual( Stem("congressista"), "congress" );
	deepEqual( Stem("congressisti"), "congress" );
	deepEqual( Stem("congresso"), "congress" );
	deepEqual( Stem("congressuale"), "congressual" );
	deepEqual( Stem("congressuali"), "congressual" );
	deepEqual( Stem("congrui"), "congru" );
	deepEqual( Stem("congruo"), "congru" );
	deepEqual( Stem("coni"), "con" );
	deepEqual( Stem("coniate"), "con" );
	deepEqual( Stem("coniato"), "con" );
	deepEqual( Stem("coniglietta"), "conigliett" );
	deepEqual( Stem("conigliette"), "conigliett" );
	deepEqual( Stem("coninori"), "coninor" );
	deepEqual( Stem("conio"), "con" );
	deepEqual( Stem("coniugare"), "coniug" );
	deepEqual( Stem("coniugi"), "coniug" );
	deepEqual( Stem("conna"), "conn" );
	deepEqual( Stem("connazionale"), "connazional" );
	deepEqual( Stem("connazionali"), "connazional" );
	deepEqual( Stem("connecticut"), "connecticut" );
	deepEqual( Stem("connery"), "connery" );
	deepEqual( Stem("connessi"), "conness" );
	deepEqual( Stem("connessione"), "connession" );
	deepEqual( Stem("connesso"), "conness" );
	deepEqual( Stem("connettere"), "connett" );
	deepEqual( Stem("connettesse"), "connettess" );
	deepEqual( Stem("connivenza"), "connivent" );
	deepEqual( Stem("connotazione"), "connot" );
	deepEqual( Stem("cono"), "con" );
	deepEqual( Stem("conobbe"), "conobb" );
	deepEqual( Stem("conosca"), "conosc" );
	deepEqual( Stem("conosce"), "conosc" );
	deepEqual( Stem("conoscendo"), "conosc" );
	deepEqual( Stem("conoscente"), "conoscent" );
	deepEqual( Stem("conoscenti"), "conoscent" );
	deepEqual( Stem("conoscenza"), "conoscent" );
	deepEqual( Stem("conoscenze"), "conoscent" );
	deepEqual( Stem("conoscer"), "conoscer" );
	deepEqual( Stem("conoscerà"), "conosc" );
	deepEqual( Stem("conosceranno"), "conosc" );
	deepEqual( Stem("conoscere"), "conosc" );
	deepEqual( Stem("conoscerlo"), "conosc" );
	deepEqual( Stem("conoscerò"), "conosc" );
	deepEqual( Stem("conoscersi"), "conosc" );
	deepEqual( Stem("conoscervi"), "conosc" );
	deepEqual( Stem("conoscesse"), "conoscess" );
	deepEqual( Stem("conoscessero"), "conosc" );
	deepEqual( Stem("conoscessi"), "conoscess" );
	deepEqual( Stem("conoscete"), "conosc" );
	deepEqual( Stem("conosceva"), "conosc" );
	deepEqual( Stem("conoscevan"), "conoscevan" );
	deepEqual( Stem("conoscevano"), "conosc" );
	deepEqual( Stem("conosci"), "conosc" );
	deepEqual( Stem("conosciamo"), "conosc" );
	deepEqual( Stem("conoscitiva"), "conoscit" );
	deepEqual( Stem("conosciuta"), "conosc" );
	deepEqual( Stem("conosciute"), "conosc" );
	deepEqual( Stem("conosciuti"), "conosc" );
	deepEqual( Stem("conosciuto"), "conosc" );
	deepEqual( Stem("conosco"), "conosc" );
	deepEqual( Stem("conoscono"), "conosc" );
	deepEqual( Stem("conquista"), "conquist" );
	deepEqual( Stem("conquistando"), "conquist" );
	deepEqual( Stem("conquistare"), "conquist" );
	deepEqual( Stem("conquistarsi"), "conquist" );
	deepEqual( Stem("conquistata"), "conquist" );
	deepEqual( Stem("conquistati"), "conquist" );
	deepEqual( Stem("conquistato"), "conquist" );
	deepEqual( Stem("conquistatore"), "conquist" );
	deepEqual( Stem("conquistatori"), "conquist" );
	deepEqual( Stem("conquiste"), "conquist" );
	deepEqual( Stem("conquisteremo"), "conquist" );
	deepEqual( Stem("conquisti"), "conquist" );
	deepEqual( Stem("conquistino"), "conquistin" );
	deepEqual( Stem("consacrata"), "consacr" );
	deepEqual( Stem("consacrazione"), "consacr" );
	deepEqual( Stem("consapevole"), "consapevol" );
	deepEqual( Stem("consapevolezza"), "consapevolezz" );
	deepEqual( Stem("consapevolmente"), "consapevol" );
	deepEqual( Stem("consci"), "consc" );
	deepEqual( Stem("consecutiva"), "consecut" );
	deepEqual( Stem("consecutive"), "consecut" );
	deepEqual( Stem("consecutivi"), "consecut" );
	deepEqual( Stem("consecutivo"), "consecut" );
	deepEqual( Stem("consegna"), "consegn" );
	deepEqual( Stem("consegnando"), "consegn" );
	deepEqual( Stem("consegnano"), "consegn" );
	deepEqual( Stem("consegnar"), "consegn" );
	deepEqual( Stem("consegnare"), "consegn" );
	deepEqual( Stem("consegnarle"), "consegn" );
	deepEqual( Stem("consegnarlo"), "consegn" );
	deepEqual( Stem("consegnata"), "consegn" );
	deepEqual( Stem("consegnate"), "consegn" );
	deepEqual( Stem("consegnati"), "consegn" );
	deepEqual( Stem("consegnato"), "consegn" );
	deepEqual( Stem("consegnerò"), "consegn" );
	deepEqual( Stem("consegnò"), "consegn" );
	deepEqual( Stem("consegnuenza"), "consegnuent" );
	deepEqual( Stem("conseguente"), "conseguent" );
	deepEqual( Stem("conseguentemente"), "conseguent" );
	deepEqual( Stem("conseguenza"), "conseguent" );
	deepEqual( Stem("conseguenze"), "conseguent" );
	deepEqual( Stem("conseguimento"), "consegu" );
	deepEqual( Stem("conseguire"), "consegu" );
	deepEqual( Stem("conseguiti"), "consegu" );
	deepEqual( Stem("conseguito"), "consegu" );
	deepEqual( Stem("consensi"), "consens" );
	deepEqual( Stem("consenso"), "consens" );
	deepEqual( Stem("consenta"), "consent" );
	deepEqual( Stem("consentanei"), "consentane" );
	deepEqual( Stem("consentaneo"), "consentane" );
	deepEqual( Stem("consentano"), "consent" );
	deepEqual( Stem("consente"), "consent" );
	deepEqual( Stem("consentirà"), "consent" );
	deepEqual( Stem("consentiranno"), "consent" );
	deepEqual( Stem("consentire"), "consent" );
	deepEqual( Stem("consentirebbe"), "consent" );
	deepEqual( Stem("consentita"), "consent" );
	deepEqual( Stem("consentiti"), "consent" );
	deepEqual( Stem("consentito"), "consent" );
	deepEqual( Stem("consentivano"), "consent" );
	deepEqual( Stem("consentono"), "consent" );
	deepEqual( Stem("conserte"), "consert" );
	deepEqual( Stem("conserva"), "conserv" );
	deepEqual( Stem("conservano"), "conserv" );
	deepEqual( Stem("conservar"), "conserv" );
	deepEqual( Stem("conservare"), "conserv" );
	deepEqual( Stem("conservarla"), "conserv" );
	deepEqual( Stem("conservarle"), "conserv" );
	deepEqual( Stem("conservarsi"), "conserv" );
	deepEqual( Stem("conservata"), "conserv" );
	deepEqual( Stem("conservate"), "conserv" );
	deepEqual( Stem("conservati"), "conserv" );
	deepEqual( Stem("conservative"), "conserv" );
	deepEqual( Stem("conservato"), "conserv" );
	deepEqual( Stem("conservatore"), "conserv" );
	deepEqual( Stem("conservatori"), "conserv" );
	deepEqual( Stem("conservatoria"), "conservator" );
	deepEqual( Stem("conservatrice"), "conserv" );
	deepEqual( Stem("conservazione"), "conserv" );
	deepEqual( Stem("conservi"), "cons" );
	deepEqual( Stem("conservò"), "conserv" );
	deepEqual( Stem("consessi"), "consess" );
	deepEqual( Stem("considera"), "consider" );
	deepEqual( Stem("considerabile"), "consider" );
	deepEqual( Stem("considerabili"), "consider" );
	deepEqual( Stem("considerando"), "consider" );
	deepEqual( Stem("considerano"), "consider" );
	deepEqual( Stem("considerar"), "consider" );
	deepEqual( Stem("considerare"), "consider" );
	deepEqual( Stem("considerarli"), "consider" );
	deepEqual( Stem("considerarono"), "consider" );
	deepEqual( Stem("considerarsi"), "consider" );
	deepEqual( Stem("considerata"), "consider" );
	deepEqual( Stem("considerate"), "consider" );
	deepEqual( Stem("considerati"), "consider" );
	deepEqual( Stem("considerato"), "consider" );
	deepEqual( Stem("consideravan"), "consideravan" );
	deepEqual( Stem("considerazion"), "considerazion" );
	deepEqual( Stem("considerazione"), "consider" );
	deepEqual( Stem("considerazioni"), "consider" );
	deepEqual( Stem("considerevole"), "considerevol" );
	deepEqual( Stem("consideri"), "consider" );
	deepEqual( Stem("consideriamo"), "consider" );
	deepEqual( Stem("considerino"), "considerin" );
	deepEqual( Stem("considero"), "consider" );
	deepEqual( Stem("consigli"), "consigl" );
	deepEqual( Stem("consiglia"), "consigl" );
	deepEqual( Stem("consigliano"), "consigl" );
	deepEqual( Stem("consigliare"), "consigl" );
	deepEqual( Stem("consigliarmi"), "consigl" );
	deepEqual( Stem("consigliaron"), "consigliaron" );
	deepEqual( Stem("consigliata"), "consigl" );
	deepEqual( Stem("consigliati"), "consigl" );
	deepEqual( Stem("consigliato"), "consigl" );
	deepEqual( Stem("consigliava"), "consigl" );
	deepEqual( Stem("consigliera"), "consiglier" );
	deepEqual( Stem("consigliere"), "consigl" );
	deepEqual( Stem("consiglieri"), "consiglier" );
	deepEqual( Stem("consiglio"), "consigl" );
	deepEqual( Stem("consigliò"), "consigl" );
	deepEqual( Stem("consigliori"), "consiglior" );
	deepEqual( Stem("consimili"), "consimil" );
	deepEqual( Stem("consiste"), "consist" );
	deepEqual( Stem("consistente"), "consistent" );
	deepEqual( Stem("consistenti"), "consistent" );
	deepEqual( Stem("consistenza"), "consistent" );
	deepEqual( Stem("consisteva"), "consist" );
	deepEqual( Stem("consistevano"), "consist" );
	deepEqual( Stem("conso"), "cons" );
	deepEqual( Stem("consob"), "consob" );
	deepEqual( Stem("consociativi"), "consoc" );
	deepEqual( Stem("consociativo"), "consoc" );
	deepEqual( Stem("consolando"), "consol" );
	deepEqual( Stem("consolante"), "consol" );
	deepEqual( Stem("consolarci"), "consol" );
	deepEqual( Stem("consolare"), "consol" );
	deepEqual( Stem("consolarlo"), "consol" );
	deepEqual( Stem("consolarti"), "consol" );
	deepEqual( Stem("consolata"), "consol" );
	deepEqual( Stem("consolatela"), "consolatel" );
	deepEqual( Stem("consolatevi"), "consolat" );
	deepEqual( Stem("consolatione"), "consolation" );
	deepEqual( Stem("consolazione"), "consol" );
	deepEqual( Stem("consolazioni"), "consol" );
	deepEqual( Stem("console"), "consol" );
	deepEqual( Stem("consolidamento"), "consolid" );
	deepEqual( Stem("consolidandosi"), "consolid" );
	deepEqual( Stem("consolidata"), "consolid" );
	deepEqual( Stem("consolidati"), "consolid" );
	deepEqual( Stem("consolidato"), "consolid" );
	deepEqual( Stem("consolle"), "consoll" );
	deepEqual( Stem("consolò"), "consol" );
	deepEqual( Stem("consonanti"), "conson" );
	deepEqual( Stem("consonanza"), "conson" );
	deepEqual( Stem("consone"), "conson" );
	deepEqual( Stem("consono"), "cons" );
	deepEqual( Stem("consorte"), "consort" );
	deepEqual( Stem("consorti"), "consort" );
	deepEqual( Stem("consorzi"), "consorz" );
	deepEqual( Stem("consorzio"), "consorz" );
	deepEqual( Stem("constatare"), "constat" );
	deepEqual( Stem("constatarlo"), "constat" );
	deepEqual( Stem("constatazione"), "constat" );
	deepEqual( Stem("consterà"), "const" );
	deepEqual( Stem("consuenze"), "consuenz" );
	deepEqual( Stem("consueta"), "consuet" );
	deepEqual( Stem("consueti"), "consuet" );
	deepEqual( Stem("consueto"), "consuet" );
	deepEqual( Stem("consuetudine"), "consuetudin" );
	deepEqual( Stem("consuetudini"), "consuetudin" );
	deepEqual( Stem("consulenti"), "consulent" );
	deepEqual( Stem("consulenza"), "consulent" );
	deepEqual( Stem("consulenze"), "consulent" );
	deepEqual( Stem("consulta"), "consult" );
	deepEqual( Stem("consultar"), "consult" );
	deepEqual( Stem("consultare"), "consult" );
	deepEqual( Stem("consultarlo"), "consult" );
	deepEqual( Stem("consultata"), "consult" );
	deepEqual( Stem("consultati"), "consult" );
	deepEqual( Stem("consultato"), "consult" );
	deepEqual( Stem("consultazione"), "consult" );
	deepEqual( Stem("consultazioni"), "consult" );
	deepEqual( Stem("consulte"), "consult" );
	deepEqual( Stem("consultivo"), "consult" );
	deepEqual( Stem("consulto"), "consult" );
	deepEqual( Stem("consuma"), "consum" );
	deepEqual( Stem("consumano"), "consum" );
	deepEqual( Stem("consumare"), "consum" );
	deepEqual( Stem("consumata"), "consum" );
	deepEqual( Stem("consumate"), "consum" );
	deepEqual( Stem("consumati"), "consum" );
	deepEqual( Stem("consumato"), "consum" );
	deepEqual( Stem("consumatore"), "consum" );
	deepEqual( Stem("consumatori"), "consum" );
	deepEqual( Stem("consumavano"), "consum" );
	deepEqual( Stem("consumazioni"), "consum" );
	deepEqual( Stem("consumerà"), "consum" );
	deepEqual( Stem("consumi"), "consum" );
	deepEqual( Stem("consumo"), "consum" );
	deepEqual( Stem("consunta"), "consunt" );
	deepEqual( Stem("consunte"), "consunt" );
	deepEqual( Stem("cont"), "cont" );
	deepEqual( Stem("conta"), "cont" );
	deepEqual( Stem("contabile"), "contabil" );
	deepEqual( Stem("contadina"), "contadin" );
	deepEqual( Stem("contadine"), "contadin" );
	deepEqual( Stem("contadinesca"), "contadinesc" );
	deepEqual( Stem("contadini"), "contadin" );
	deepEqual( Stem("contadino"), "contadin" );
	deepEqual( Stem("contadinotta"), "contadinott" );
	deepEqual( Stem("contado"), "contad" );
	deepEqual( Stem("contaggioso"), "contagg" );
	deepEqual( Stem("contagi"), "contag" );
	deepEqual( Stem("contagiata"), "contag" );
	deepEqual( Stem("contagio"), "contag" );
	deepEqual( Stem("contagiosa"), "contag" );
	deepEqual( Stem("contagiosi"), "contag" );
	deepEqual( Stem("contagioso"), "contag" );
	deepEqual( Stem("containers"), "containers" );
	deepEqual( Stem("contaminata"), "contamin" );
	deepEqual( Stem("contan"), "contan" );
	deepEqual( Stem("contando"), "cont" );
	deepEqual( Stem("contano"), "cont" );
	deepEqual( Stem("contante"), "contant" );
	deepEqual( Stem("contanti"), "contant" );
	deepEqual( Stem("contar"), "cont" );
	deepEqual( Stem("contare"), "cont" );
	deepEqual( Stem("contarlo"), "cont" );
	deepEqual( Stem("contarsi"), "cont" );
	deepEqual( Stem("contarvi"), "cont" );
	deepEqual( Stem("contasse"), "cont" );
	deepEqual( Stem("contata"), "cont" );
	deepEqual( Stem("contate"), "cont" );
	deepEqual( Stem("contato"), "cont" );
	deepEqual( Stem("contattare"), "contatt" );
	deepEqual( Stem("contattarla"), "contatt" );
	deepEqual( Stem("contattato"), "contatt" );
	deepEqual( Stem("contatti"), "contatt" );
	deepEqual( Stem("contatto"), "contatt" );
	deepEqual( Stem("contava"), "cont" );
	deepEqual( Stem("conte"), "cont" );
	deepEqual( Stem("contea"), "conte" );
	deepEqual( Stem("contegno"), "contegn" );
	deepEqual( Stem("contegnosa"), "contegn" );
	deepEqual( Stem("contegnoso"), "contegn" );
	deepEqual( Stem("contemplando"), "contempl" );
	deepEqual( Stem("contemplar"), "contempl" );
	deepEqual( Stem("contemplare"), "contempl" );
	deepEqual( Stem("contemplarlo"), "contempl" );
	deepEqual( Stem("contemplate"), "contempl" );
	deepEqual( Stem("contemplativa"), "contempl" );
	deepEqual( Stem("contemplato"), "contempl" );
	deepEqual( Stem("contemplazione"), "contempl" );
	deepEqual( Stem("contemplazioni"), "contempl" );
	deepEqual( Stem("contempo"), "contemp" );
	deepEqual( Stem("contemporanea"), "contemporane" );
	deepEqual( Stem("contemporaneamente"), "contemporan" );
	deepEqual( Stem("contemporanee"), "contemporane" );
	deepEqual( Stem("contemporanei"), "contemporane" );
	deepEqual( Stem("contemporaneità"), "contemporan" );
	deepEqual( Stem("contemporaneo"), "contemporane" );
	deepEqual( Stem("contendenti"), "contendent" );
	deepEqual( Stem("contendevano"), "contend" );
	deepEqual( Stem("contenente"), "contenent" );
	deepEqual( Stem("contener"), "contener" );
	deepEqual( Stem("contenere"), "conten" );
	deepEqual( Stem("contenerla"), "conten" );
	deepEqual( Stem("contenersi"), "conten" );
	deepEqual( Stem("conteneva"), "conten" );
	deepEqual( Stem("contenga"), "conteng" );
	deepEqual( Stem("contengono"), "conteng" );
	deepEqual( Stem("contenimento"), "conten" );
	deepEqual( Stem("contenitore"), "contenitor" );
	deepEqual( Stem("contenitori"), "contenitor" );
	deepEqual( Stem("contenta"), "content" );
	deepEqual( Stem("contentare"), "content" );
	deepEqual( Stem("contentarli"), "content" );
	deepEqual( Stem("contentarlo"), "content" );
	deepEqual( Stem("contentassi"), "content" );
	deepEqual( Stem("contentato"), "content" );
	deepEqual( Stem("contentava"), "content" );
	deepEqual( Stem("contentavano"), "content" );
	deepEqual( Stem("contente"), "content" );
	deepEqual( Stem("contentezza"), "contentezz" );
	deepEqual( Stem("contenti"), "content" );
	deepEqual( Stem("contentino"), "contentin" );
	deepEqual( Stem("contentissimo"), "contentissim" );
	deepEqual( Stem("contento"), "content" );
	deepEqual( Stem("contentò"), "content" );
	deepEqual( Stem("contenuta"), "conten" );
	deepEqual( Stem("contenute"), "conten" );
	deepEqual( Stem("contenuti"), "conten" );
	deepEqual( Stem("contenuto"), "conten" );
	deepEqual( Stem("contenzioso"), "contenz" );
	deepEqual( Stem("conterà"), "cont" );
	deepEqual( Stem("conterrà"), "conterr" );
	deepEqual( Stem("conterranei"), "conterrane" );
	deepEqual( Stem("contesa"), "contes" );
	deepEqual( Stem("contese"), "contes" );
	deepEqual( Stem("contesta"), "contest" );
	deepEqual( Stem("contestabile"), "contest" );
	deepEqual( Stem("contestando"), "contest" );
	deepEqual( Stem("contestano"), "contest" );
	deepEqual( Stem("contestare"), "contest" );
	deepEqual( Stem("contestata"), "contest" );
	deepEqual( Stem("contestati"), "contest" );
	deepEqual( Stem("contestato"), "contest" );
	deepEqual( Stem("contestatori"), "contest" );
	deepEqual( Stem("contestatrici"), "contest" );
	deepEqual( Stem("contestava"), "contest" );
	deepEqual( Stem("contestazione"), "contest" );
	deepEqual( Stem("contestazioni"), "contest" );
	deepEqual( Stem("contesto"), "contest" );
	deepEqual( Stem("contestualmente"), "contestual" );
	deepEqual( Stem("conti"), "cont" );
	deepEqual( Stem("contiamo"), "cont" );
	deepEqual( Stem("conticello"), "conticell" );
	deepEqual( Stem("conticino"), "conticin" );
	deepEqual( Stem("contiene"), "contien" );
	deepEqual( Stem("contigua"), "contigu" );
	deepEqual( Stem("contigui"), "contigu" );
	deepEqual( Stem("contiguità"), "contigu" );
	deepEqual( Stem("contiguo"), "contigu" );
	deepEqual( Stem("continentale"), "continental" );
	deepEqual( Stem("continente"), "continent" );
	deepEqual( Stem("continenti"), "continent" );
	deepEqual( Stem("contingente"), "contingent" );
	deepEqual( Stem("contingenti"), "contingent" );
	deepEqual( Stem("continua"), "continu" );
	deepEqual( Stem("continuamente"), "continu" );
	deepEqual( Stem("continuando"), "continu" );
	deepEqual( Stem("continuano"), "continu" );
	deepEqual( Stem("continuar"), "continu" );
	deepEqual( Stem("continuare"), "continu" );
	deepEqual( Stem("continuarla"), "continu" );
	deepEqual( Stem("continuaron"), "continuaron" );
	deepEqual( Stem("continuarono"), "continu" );
	deepEqual( Stem("continuassero"), "continu" );
	deepEqual( Stem("continuata"), "continu" );
	deepEqual( Stem("continuato"), "continu" );
	deepEqual( Stem("continuava"), "continu" );
	deepEqual( Stem("continuavano"), "continu" );
	deepEqual( Stem("continuazione"), "continu" );
	deepEqual( Stem("continue"), "continu" );
	deepEqual( Stem("continuerà"), "continu" );
	deepEqual( Stem("continueranno"), "continu" );
	deepEqual( Stem("continuerebbe"), "continu" );
	deepEqual( Stem("continueremo"), "continu" );
	deepEqual( Stem("continuerò"), "continu" );
	deepEqual( Stem("continui"), "continu" );
	deepEqual( Stem("continuiamo"), "continuiam" );
	deepEqual( Stem("continuità"), "continu" );
	deepEqual( Stem("continuo"), "continu" );
	deepEqual( Stem("continuò"), "continu" );
	deepEqual( Stem("conto"), "cont" );
	deepEqual( Stem("contò"), "cont" );
	deepEqual( Stem("contornandosi"), "contorn" );
	deepEqual( Stem("contorni"), "contorn" );
	deepEqual( Stem("contorno"), "contorn" );
	deepEqual( Stem("contorte"), "contort" );
	deepEqual( Stem("contovivo"), "contov" );
	deepEqual( Stem("contr"), "contr" );
	deepEqual( Stem("contra"), "contr" );
	deepEqual( Stem("contrabbandieri"), "contrabbandier" );
	deepEqual( Stem("contraccambiare"), "contraccamb" );
	deepEqual( Stem("contraccambiava"), "contraccamb" );
	deepEqual( Stem("contraccambio"), "contraccamb" );
	deepEqual( Stem("contraccettivi"), "contraccett" );
	deepEqual( Stem("contrada"), "contrad" );
	deepEqual( Stem("contraddette"), "contraddett" );
	deepEqual( Stem("contraddica"), "contradd" );
	deepEqual( Stem("contraddice"), "contradd" );
	deepEqual( Stem("contraddicesse"), "contraddicess" );
	deepEqual( Stem("contraddire"), "contradd" );
	deepEqual( Stem("contraddirgli"), "contradd" );
	deepEqual( Stem("contraddirlo"), "contradd" );
	deepEqual( Stem("contraddittori"), "contraddittor" );
	deepEqual( Stem("contraddittorie"), "contraddittor" );
	deepEqual( Stem("contraddittorio"), "contraddittor" );
	deepEqual( Stem("contraddizione"), "contraddizion" );
	deepEqual( Stem("contraddizioni"), "contraddizion" );
	deepEqual( Stem("contraddote"), "contraddot" );
	deepEqual( Stem("contrae"), "contra" );
	deepEqual( Stem("contraendo"), "contr" );
	deepEqual( Stem("contraenti"), "contraent" );
	deepEqual( Stem("contraesse"), "contraess" );
	deepEqual( Stem("contraeva"), "contr" );
	deepEqual( Stem("contraffaceva"), "contraffac" );
	deepEqual( Stem("contraffacienti"), "contraffacient" );
	deepEqual( Stem("contraffanno"), "contraffann" );
	deepEqual( Stem("contrafforti"), "contraffort" );
	deepEqual( Stem("contrammina"), "contrammin" );
	deepEqual( Stem("contrappesare"), "contrappes" );
	deepEqual( Stem("contrappesato"), "contrappes" );
	deepEqual( Stem("contrappeso"), "contrappes" );
	deepEqual( Stem("contrappone"), "contrappon" );
	deepEqual( Stem("contrapponevan"), "contrapponevan" );
	deepEqual( Stem("contrapporci"), "contrapporc" );
	deepEqual( Stem("contrapporre"), "contrapporr" );
	deepEqual( Stem("contrapposizione"), "contrapposizion" );
	deepEqual( Stem("contrapposizioni"), "contrapposizion" );
	deepEqual( Stem("contrapposta"), "contrappost" );
	deepEqual( Stem("contrapposti"), "contrappost" );
	deepEqual( Stem("contrapposto"), "contrappost" );
	deepEqual( Stem("contrari"), "contrar" );
	deepEqual( Stem("contraria"), "contrar" );
	deepEqual( Stem("contrariamente"), "contrar" );
	deepEqual( Stem("contrarie"), "contrar" );
	deepEqual( Stem("contrarietà"), "contrariet" );
	deepEqual( Stem("contrario"), "contrar" );
	deepEqual( Stem("contrassegni"), "contrassegn" );
	deepEqual( Stem("contrassegno"), "contrassegn" );
	deepEqual( Stem("contrastando"), "contrast" );
	deepEqual( Stem("contrastanti"), "contrast" );
	deepEqual( Stem("contrastar"), "contrast" );
	deepEqual( Stem("contrastare"), "contrast" );
	deepEqual( Stem("contrastata"), "contrast" );
	deepEqual( Stem("contrastate"), "contrast" );
	deepEqual( Stem("contrastati"), "contrast" );
	deepEqual( Stem("contrastato"), "contrast" );
	deepEqual( Stem("contrastavano"), "contrast" );
	deepEqual( Stem("contrasti"), "contrast" );
	deepEqual( Stem("contrasto"), "contrast" );
	deepEqual( Stem("contratta"), "contratt" );
	deepEqual( Stem("contrattacco"), "contrattacc" );
	deepEqual( Stem("contrattazione"), "contratt" );
	deepEqual( Stem("contrattazioni"), "contratt" );
	deepEqual( Stem("contratte"), "contratt" );
	deepEqual( Stem("contrattempi"), "contrattemp" );
	deepEqual( Stem("contratti"), "contratt" );
	deepEqual( Stem("contratto"), "contratt" );
	deepEqual( Stem("contrattuale"), "contrattual" );
	deepEqual( Stem("contrattuali"), "contrattual" );
	deepEqual( Stem("contravvenire"), "contravven" );
	deepEqual( Stem("contravventori"), "contravventor" );
	deepEqual( Stem("contravviene"), "contravvien" );
	deepEqual( Stem("contrazione"), "contrazion" );
	deepEqual( Stem("contrazioni"), "contrazion" );
	deepEqual( Stem("contribuenti"), "contribuent" );
	deepEqual( Stem("contribuirà"), "contribu" );
	deepEqual( Stem("contribuire"), "contribu" );
	deepEqual( Stem("contribuiscano"), "contribu" );
	deepEqual( Stem("contribuisce"), "contribu" );
	deepEqual( Stem("contribuito"), "contribu" );
	deepEqual( Stem("contribuiva"), "contribu" );
	deepEqual( Stem("contribuivan"), "contribuivan" );
	deepEqual( Stem("contributi"), "contrib" );
	deepEqual( Stem("contributive"), "contribut" );
	deepEqual( Stem("contributo"), "contrib" );
	deepEqual( Stem("contrista"), "contrist" );
	deepEqual( Stem("contristar"), "contrist" );
	deepEqual( Stem("contristare"), "contrist" );
	deepEqual( Stem("contristata"), "contrist" );
	deepEqual( Stem("contristato"), "contrist" );
	deepEqual( Stem("contrita"), "contr" );
	deepEqual( Stem("contro"), "contr" );
	deepEqual( Stem("contrò"), "contr" );
	deepEqual( Stem("controbalzo"), "controbalz" );
	deepEqual( Stem("controcanto"), "controcant" );
	deepEqual( Stem("controcorrente"), "controcorrent" );
	deepEqual( Stem("controdomande"), "controdomand" );
	deepEqual( Stem("controlla"), "controll" );
	deepEqual( Stem("controllano"), "controll" );
	deepEqual( Stem("controllare"), "controll" );
	deepEqual( Stem("controllarlo"), "controll" );
	deepEqual( Stem("controllata"), "controll" );
	deepEqual( Stem("controllate"), "controll" );
	deepEqual( Stem("controllato"), "controll" );
	deepEqual( Stem("controllava"), "controll" );
	deepEqual( Stem("controllavano"), "controll" );
	deepEqual( Stem("controllerano"), "controller" );
	deepEqual( Stem("controlli"), "controll" );
	deepEqual( Stem("controllo"), "controll" );
	deepEqual( Stem("controllori"), "controllor" );
	deepEqual( Stem("controparte"), "contropart" );
	deepEqual( Stem("contropiede"), "contropied" );
	deepEqual( Stem("controtempo"), "controtemp" );
	deepEqual( Stem("controtendenza"), "controtendent" );
	deepEqual( Stem("controverifiche"), "controverif" );
	deepEqual( Stem("controversa"), "controvers" );
	deepEqual( Stem("controverse"), "controvers" );
	deepEqual( Stem("controversi"), "controv" );
	deepEqual( Stem("controversie"), "controvers" );
	deepEqual( Stem("controverso"), "controvers" );
	deepEqual( Stem("controvoglia"), "controvogl" );
	deepEqual( Stem("conttato"), "contt" );
	deepEqual( Stem("contumacia"), "contumac" );
	deepEqual( Stem("conturbata"), "conturb" );
	deepEqual( Stem("conturbato"), "conturb" );
	deepEqual( Stem("contusione"), "contusion" );
	deepEqual( Stem("conueniente"), "conuenient" );
	deepEqual( Stem("convalescente"), "convalescent" );
	deepEqual( Stem("convalescenti"), "convalescent" );
	deepEqual( Stem("convalescenza"), "convalescent" );
	deepEqual( Stem("convalidato"), "convalid" );
	deepEqual( Stem("convalide"), "convalid" );
	deepEqual( Stem("convegno"), "convegn" );
	deepEqual( Stem("convenendo"), "conven" );
	deepEqual( Stem("convenevole"), "convenevol" );
	deepEqual( Stem("convenevolmente"), "convenevol" );
	deepEqual( Stem("convenga"), "conveng" );
	deepEqual( Stem("convengo"), "conveng" );
	deepEqual( Stem("convengono"), "conveng" );
	deepEqual( Stem("conveniente"), "convenient" );
	deepEqual( Stem("convenienti"), "convenient" );
	deepEqual( Stem("convenienza"), "convenient" );
	deepEqual( Stem("convenire"), "conven" );
	deepEqual( Stem("convenisse"), "conveniss" );
	deepEqual( Stem("conveniva"), "conven" );
	deepEqual( Stem("convenivano"), "conven" );
	deepEqual( Stem("convenne"), "convenn" );
	deepEqual( Stem("conventi"), "convent" );
	deepEqual( Stem("convention"), "convention" );
	deepEqual( Stem("convento"), "convent" );
	deepEqual( Stem("convenuta"), "conven" );
	deepEqual( Stem("convenuti"), "conven" );
	deepEqual( Stem("convenuto"), "conven" );
	deepEqual( Stem("convenzionale"), "convenzional" );
	deepEqual( Stem("convenzionali"), "convenzional" );
	deepEqual( Stem("convenzione"), "convenzion" );
	deepEqual( Stem("convenzioni"), "convenzion" );
	deepEqual( Stem("convergenza"), "convergent" );
	deepEqual( Stem("convergenze"), "convergent" );
	deepEqual( Stem("converrà"), "converr" );
	deepEqual( Stem("conversa"), "convers" );
	deepEqual( Stem("conversando"), "convers" );
	deepEqual( Stem("conversato"), "convers" );
	deepEqual( Stem("conversazione"), "convers" );
	deepEqual( Stem("conversazioni"), "convers" );
	deepEqual( Stem("converse"), "convers" );
	deepEqual( Stem("conversione"), "conversion" );
	deepEqual( Stem("convert"), "convert" );
	deepEqual( Stem("convertibilità"), "convertibil" );
	deepEqual( Stem("convertirono"), "convert" );
	deepEqual( Stem("convertito"), "convert" );
	deepEqual( Stem("convertono"), "convert" );
	deepEqual( Stem("convesso"), "convess" );
	deepEqual( Stem("convien"), "convien" );
	deepEqual( Stem("conviene"), "convien" );
	deepEqual( Stem("convincano"), "convinc" );
	deepEqual( Stem("convincente"), "convincent" );
	deepEqual( Stem("convincer"), "convincer" );
	deepEqual( Stem("convincere"), "convinc" );
	deepEqual( Stem("convincerla"), "convinc" );
	deepEqual( Stem("convincerli"), "convinc" );
	deepEqual( Stem("convincerlo"), "convinc" );
	deepEqual( Stem("convincimento"), "convinc" );
	deepEqual( Stem("convinta"), "convint" );
	deepEqual( Stem("convinti"), "convint" );
	deepEqual( Stem("convinto"), "convint" );
	deepEqual( Stem("convinzione"), "convinzion" );
	deepEqual( Stem("convinzioni"), "convinzion" );
	deepEqual( Stem("convitante"), "convit" );
	deepEqual( Stem("convitati"), "convit" );
	deepEqual( Stem("convitato"), "convit" );
	deepEqual( Stem("convito"), "conv" );
	deepEqual( Stem("convivere"), "conviv" );
	deepEqual( Stem("conviviali"), "convivial" );
	deepEqual( Stem("convivio"), "conviv" );
	deepEqual( Stem("convivono"), "conviv" );
	deepEqual( Stem("convoca"), "convoc" );
	deepEqual( Stem("convocare"), "convoc" );
	deepEqual( Stem("convocata"), "convoc" );
	deepEqual( Stem("convocate"), "convoc" );
	deepEqual( Stem("convocati"), "convoc" );
	deepEqual( Stem("convocato"), "convoc" );
	deepEqual( Stem("convocazione"), "convoc" );
	deepEqual( Stem("convocazioni"), "convoc" );
	deepEqual( Stem("convogli"), "convogl" );
	deepEqual( Stem("convoglio"), "convogl" );
	deepEqual( Stem("convulsa"), "convuls" );
	deepEqual( Stem("convulsiva"), "convuls" );
	deepEqual( Stem("coodinatori"), "coodin" );
	deepEqual( Stem("cooiperazione"), "cooiper" );
	deepEqual( Stem("cooman"), "cooman" );
	deepEqual( Stem("coonestare"), "coonest" );
	deepEqual( Stem("coop"), "coop" );
	deepEqual( Stem("cooperare"), "cooper" );
	deepEqual( Stem("cooperativa"), "cooper" );
	deepEqual( Stem("cooperative"), "cooper" );
	deepEqual( Stem("cooperativo"), "cooper" );
	deepEqual( Stem("cooperato"), "cooper" );
	deepEqual( Stem("cooperatore"), "cooper" );
	deepEqual( Stem("cooperazione"), "cooper" );
	deepEqual( Stem("cooperò"), "coop" );
	deepEqual( Stem("coopi"), "coop" );
	deepEqual( Stem("coopinvest"), "coopinvest" );
	deepEqual( Stem("cooprend"), "cooprend" );
	deepEqual( Stem("cooptazione"), "cooptazion" );
	deepEqual( Stem("coordina"), "coordin" );
	deepEqual( Stem("coordinamento"), "coordin" );
	deepEqual( Stem("coordinando"), "coordin" );
	deepEqual( Stem("coordinare"), "coordin" );
	deepEqual( Stem("coordinata"), "coordin" );
	deepEqual( Stem("coordinate"), "coordin" );
	deepEqual( Stem("coordinati"), "coordin" );
	deepEqual( Stem("coordinatore"), "coordin" );
	deepEqual( Stem("coordinatori"), "coordin" );
	deepEqual( Stem("coordinazione"), "coordin" );
	deepEqual( Stem("copenaghen"), "copenaghen" );
	deepEqual( Stem("coperatura"), "coperatur" );
	deepEqual( Stem("coperchi"), "coperc" );
	deepEqual( Stem("coperta"), "copert" );
	deepEqual( Stem("copertamente"), "copert" );
	deepEqual( Stem("coperte"), "copert" );
	deepEqual( Stem("coperti"), "cop" );
	deepEqual( Stem("copertina"), "copertin" );
	deepEqual( Stem("coperto"), "copert" );
	deepEqual( Stem("copertura"), "copertur" );
	deepEqual( Stem("coperturà"), "copertur" );
	deepEqual( Stem("copia"), "cop" );
	deepEqual( Stem("copiare"), "cop" );
	deepEqual( Stem("copiator"), "copiator" );
	deepEqual( Stem("copie"), "cop" );
	deepEqual( Stem("copiò"), "cop" );
	deepEqual( Stem("copione"), "copion" );
	deepEqual( Stem("coppa"), "copp" );
	deepEqual( Stem("coppia"), "copp" );
	deepEqual( Stem("coppie"), "copp" );
	deepEqual( Stem("coppola"), "coppol" );
	deepEqual( Stem("coprano"), "copr" );
	deepEqual( Stem("copre"), "copr" );
	deepEqual( Stem("coprete"), "copr" );
	deepEqual( Stem("coprì"), "copr" );
	deepEqual( Stem("coprire"), "copr" );
	deepEqual( Stem("copriremo"), "copr" );
	deepEqual( Stem("copriva"), "copr" );
	deepEqual( Stem("coproduzione"), "coprodu" );
	deepEqual( Stem("coprono"), "copr" );
	deepEqual( Stem("cor"), "cor" );
	deepEqual( Stem("coraggio"), "coragg" );
	deepEqual( Stem("coraggiosa"), "coragg" );
	deepEqual( Stem("coraggiose"), "coragg" );
	deepEqual( Stem("coraggiosi"), "coragg" );
	deepEqual( Stem("coraggioso"), "coragg" );
	deepEqual( Stem("corale"), "coral" );
	deepEqual( Stem("corato"), "cor" );
	deepEqual( Stem("corazza"), "corazz" );
	deepEqual( Stem("corazzati"), "corazz" );
	deepEqual( Stem("corbelleria"), "corbeller" );
	deepEqual( Stem("corbellerie"), "corbeller" );
	deepEqual( Stem("corbucci"), "corbucc" );
	deepEqual( Stem("corcione"), "corcion" );
	deepEqual( Stem("corda"), "cord" );
	deepEqual( Stem("cordate"), "cord" );
	deepEqual( Stem("corde"), "cord" );
	deepEqual( Stem("cordellina"), "cordellin" );
	deepEqual( Stem("cordiale"), "cordial" );
	deepEqual( Stem("cordialità"), "cordial" );
	deepEqual( Stem("cordialmente"), "cordial" );
	deepEqual( Stem("cordicella"), "cordicell" );
	deepEqual( Stem("cordigliera"), "cordiglier" );
	deepEqual( Stem("cordoglio"), "cordogl" );
	deepEqual( Stem("cordone"), "cordon" );
	deepEqual( Stem("cordova"), "cordov" );
	deepEqual( Stem("cordusio"), "cordus" );
	deepEqual( Stem("core"), "cor" );
	deepEqual( Stem("coreano"), "cor" );
	deepEqual( Stem("coreografie"), "coreograf" );
	deepEqual( Stem("coretto"), "corett" );
	deepEqual( Stem("cori"), "cor" );
	deepEqual( Stem("corini"), "corin" );
	deepEqual( Stem("corino"), "corin" );
	deepEqual( Stem("corleone"), "corleon" );
	deepEqual( Stem("corna"), "corn" );
	deepEqual( Stem("cornacchia"), "cornacc" );
	deepEqual( Stem("cornacchie"), "cornacc" );
	deepEqual( Stem("cornacchini"), "cornacchin" );
	deepEqual( Stem("corner"), "corner" );
	deepEqual( Stem("cornia"), "corn" );
	deepEqual( Stem("cornice"), "cornic" );
	deepEqual( Stem("corno"), "corn" );
	deepEqual( Stem("coro"), "cor" );
	deepEqual( Stem("corona"), "coron" );
	deepEqual( Stem("coronar"), "coron" );
	deepEqual( Stem("coronarici"), "coronar" );
	deepEqual( Stem("coronato"), "coron" );
	deepEqual( Stem("corone"), "coron" );
	deepEqual( Stem("corp"), "corp" );
	deepEqual( Stem("corpaccio"), "corpacc" );
	deepEqual( Stem("corpi"), "corp" );
	deepEqual( Stem("corpo"), "corp" );
	deepEqual( Stem("corporale"), "corporal" );
	deepEqual( Stem("corporali"), "corporal" );
	deepEqual( Stem("corporate"), "corpor" );
	deepEqual( Stem("corporation"), "corporation" );
	deepEqual( Stem("corporazione"), "corpor" );
	deepEqual( Stem("corr"), "corr" );
	deepEqual( Stem("corra"), "corr" );
	deepEqual( Stem("corradini"), "corradin" );
	deepEqual( Stem("corrado"), "corrad" );
	deepEqual( Stem("corre"), "corr" );
	deepEqual( Stem("corredata"), "corred" );
	deepEqual( Stem("corredate"), "corred" );
	deepEqual( Stem("corredato"), "corred" );
	deepEqual( Stem("corredo"), "corred" );
	deepEqual( Stem("corregga"), "corregg" );
	deepEqual( Stem("corregge"), "corregg" );
	deepEqual( Stem("correggendole"), "corregg" );
	deepEqual( Stem("correggere"), "corregg" );
	deepEqual( Stem("correggimi"), "correggim" );
	deepEqual( Stem("correndo"), "corr" );
	deepEqual( Stem("corrente"), "corrent" );
	deepEqual( Stem("correnti"), "corrent" );
	deepEqual( Stem("correr"), "correr" );
	deepEqual( Stem("correranno"), "corr" );
	deepEqual( Stem("correre"), "corr" );
	deepEqual( Stem("correrebber"), "correrebber" );
	deepEqual( Stem("corrergli"), "corr" );
	deepEqual( Stem("correrò"), "corr" );
	deepEqual( Stem("corresponsione"), "corresponsion" );
	deepEqual( Stem("corresse"), "corress" );
	deepEqual( Stem("correte"), "corr" );
	deepEqual( Stem("corretta"), "corrett" );
	deepEqual( Stem("corretteza"), "correttez" );
	deepEqual( Stem("correttezza"), "correttezz" );
	deepEqual( Stem("corretti"), "corrett" );
	deepEqual( Stem("correttissimo"), "correttissim" );
	deepEqual( Stem("correttiva"), "corrett" );
	deepEqual( Stem("corretto"), "corrett" );
	deepEqual( Stem("correttrice"), "correttr" );
	deepEqual( Stem("correva"), "corr" );
	deepEqual( Stem("correvan"), "correvan" );
	deepEqual( Stem("correvano"), "corr" );
	deepEqual( Stem("correzione"), "correzion" );
	deepEqual( Stem("correzioni"), "correzion" );
	deepEqual( Stem("corridoi"), "corrido" );
	deepEqual( Stem("corridoio"), "corridoi" );
	deepEqual( Stem("corriere"), "corr" );
	deepEqual( Stem("corrierè"), "corrier" );
	deepEqual( Stem("corrisopondono"), "corrisopond" );
	deepEqual( Stem("corrispettivo"), "corrispett" );
	deepEqual( Stem("corrisponda"), "corrispond" );
	deepEqual( Stem("corrisponde"), "corrispond" );
	deepEqual( Stem("corrispondendo"), "corrispond" );
	deepEqual( Stem("corrispondente"), "corrispondent" );
	deepEqual( Stem("corrispondenti"), "corrispondent" );
	deepEqual( Stem("corrispondenza"), "corrispondent" );
	deepEqual( Stem("corrispondenze"), "corrispondent" );
	deepEqual( Stem("corrispondere"), "corrispond" );
	deepEqual( Stem("corrispondeva"), "corrispond" );
	deepEqual( Stem("corrispondono"), "corrispond" );
	deepEqual( Stem("corrisposero"), "corrisposer" );
	deepEqual( Stem("corrisposta"), "corrispost" );
	deepEqual( Stem("corrisposto"), "corrispost" );
	deepEqual( Stem("corro"), "corr" );
	deepEqual( Stem("corrompevano"), "corromp" );
	deepEqual( Stem("corron"), "corron" );
	deepEqual( Stem("corrono"), "corr" );
	deepEqual( Stem("corrotti"), "corrott" );
	deepEqual( Stem("corrusco"), "corrusc" );
	deepEqual( Stem("corruttivi"), "corrutt" );
	deepEqual( Stem("corruzione"), "corruzion" );
	deepEqual( Stem("corrwezione"), "corrwezion" );
	deepEqual( Stem("corsa"), "cors" );
	deepEqual( Stem("corse"), "cors" );
	deepEqual( Stem("corserelle"), "corserell" );
	deepEqual( Stem("corsero"), "corser" );
	deepEqual( Stem("corsi"), "cors" );
	deepEqual( Stem("corsia"), "cors" );
	deepEqual( Stem("corsìa"), "corsì" );
	deepEqual( Stem("corsica"), "corsic" );
	deepEqual( Stem("corsini"), "corsin" );
	deepEqual( Stem("corsivo"), "cors" );
	deepEqual( Stem("corso"), "cors" );
	deepEqual( Stem("corta"), "cort" );
	deepEqual( Stem("corte"), "cort" );
	deepEqual( Stem("cortecce"), "cortecc" );
	deepEqual( Stem("corteggiata"), "cortegg" );
	deepEqual( Stem("corteggiato"), "cortegg" );
	deepEqual( Stem("corteggio"), "cortegg" );
	deepEqual( Stem("cortenuova"), "cortenuov" );
	deepEqual( Stem("corteo"), "corte" );
	deepEqual( Stem("cortese"), "cortes" );
	deepEqual( Stem("cortesemente"), "cortes" );
	deepEqual( Stem("cortesia"), "cortes" );
	deepEqual( Stem("corti"), "cort" );
	deepEqual( Stem("cortigianelli"), "cortigianell" );
	deepEqual( Stem("cortigiani"), "cortigian" );
	deepEqual( Stem("cortile"), "cortil" );
	deepEqual( Stem("cortiletto"), "cortilett" );
	deepEqual( Stem("cortili"), "cortil" );
	deepEqual( Stem("cortina"), "cortin" );
	deepEqual( Stem("corto"), "cort" );
	deepEqual( Stem("corvaccio"), "corvacc" );
	deepEqual( Stem("corvetta"), "corvett" );
	deepEqual( Stem("corvi"), "corv" );
	deepEqual( Stem("corvo"), "corv" );
	deepEqual( Stem("cos"), "cos" );
	deepEqual( Stem("cosa"), "cos" );
	deepEqual( Stem("cosce"), "cosc" );
	deepEqual( Stem("cosche"), "cosc" );
	deepEqual( Stem("coscia"), "cosc" );
	deepEqual( Stem("cosciali"), "coscial" );
	deepEqual( Stem("coscienti"), "coscient" );
	deepEqual( Stem("coscienza"), "coscienz" );
	deepEqual( Stem("cose"), "cos" );
	deepEqual( Stem("cosenza"), "cosenz" );
	deepEqual( Stem("cosette"), "cosett" );
	deepEqual( Stem("cosi"), "cos" );
	deepEqual( Stem("così"), "cos" );
	deepEqual( Stem("cosiddetta"), "cosiddett" );
	deepEqual( Stem("cosiddette"), "cosiddett" );
	deepEqual( Stem("cosiddetti"), "cosiddett" );
	deepEqual( Stem("cosiddetto"), "cosiddett" );
	deepEqual( Stem("cosimi"), "cosim" );
	deepEqual( Stem("cosimo"), "cosim" );
	deepEqual( Stem("cospetto"), "cospett" );
	deepEqual( Stem("cospicua"), "cospicu" );
	deepEqual( Stem("cospicue"), "cospicu" );
	deepEqual( Stem("cospicui"), "cospicu" );
	deepEqual( Stem("cospicuo"), "cospicu" );
	deepEqual( Stem("cospiravano"), "cospir" );
	deepEqual( Stem("cossato"), "coss" );
	deepEqual( Stem("cossiga"), "cossig" );
	deepEqual( Stem("cossutta"), "cossutt" );
	deepEqual( Stem("costa"), "cost" );
	deepEqual( Stem("costacurta"), "costacurt" );
	deepEqual( Stem("costante"), "costant" );
	deepEqual( Stem("costantemente"), "costant" );
	deepEqual( Stem("costanti"), "costant" );
	deepEqual( Stem("costantino"), "costantin" );
	deepEqual( Stem("costanza"), "costanz" );
	deepEqual( Stem("costanzo"), "costanz" );
	deepEqual( Stem("costare"), "cost" );
	deepEqual( Stem("costarica"), "costar" );
	deepEqual( Stem("costaricano"), "costaric" );
	deepEqual( Stem("costaron"), "costaron" );
	deepEqual( Stem("costasse"), "cost" );
	deepEqual( Stem("costata"), "cost" );
	deepEqual( Stem("costato"), "cost" );
	deepEqual( Stem("coste"), "cost" );
	deepEqual( Stem("costeggia"), "costegg" );
	deepEqual( Stem("costeggiando"), "costegg" );
	deepEqual( Stem("costeggiare"), "costegg" );
	deepEqual( Stem("costeggiarla"), "costegg" );
	deepEqual( Stem("costeggiate"), "costegg" );
	deepEqual( Stem("costeggiava"), "costegg" );
	deepEqual( Stem("costei"), "coste" );
	deepEqual( Stem("costerebbe"), "cost" );
	deepEqual( Stem("costernata"), "costern" );
	deepEqual( Stem("costernati"), "costern" );
	deepEqual( Stem("costernazione"), "costern" );
	deepEqual( Stem("costi"), "cost" );
	deepEqual( Stem("costì"), "cost" );
	deepEqual( Stem("costiera"), "costier" );
	deepEqual( Stem("costiere"), "cost" );
	deepEqual( Stem("costiero"), "costier" );
	deepEqual( Stem("costituendo"), "costitu" );
	deepEqual( Stem("costituente"), "costituent" );
	deepEqual( Stem("costituirà"), "costitu" );
	deepEqual( Stem("costituiranno"), "costitu" );
	deepEqual( Stem("costituire"), "costitu" );
	deepEqual( Stem("costituirsi"), "costitu" );
	deepEqual( Stem("costituisca"), "costitu" );
	deepEqual( Stem("costituisce"), "costitu" );
	deepEqual( Stem("costituiscono"), "costitu" );
	deepEqual( Stem("costituisse"), "costituiss" );
	deepEqual( Stem("costituita"), "costitu" );
	deepEqual( Stem("costituite"), "costitu" );
	deepEqual( Stem("costituiti"), "costitu" );
	deepEqual( Stem("costituitisi"), "costituitis" );
	deepEqual( Stem("costituito"), "costitu" );
	deepEqual( Stem("costitutiva"), "costitut" );
	deepEqual( Stem("costitutivi"), "costitut" );
	deepEqual( Stem("costituzionale"), "costituzional" );
	deepEqual( Stem("costituzionali"), "costituzional" );
	deepEqual( Stem("costituzionalisti"), "costituzional" );
	deepEqual( Stem("costituzione"), "costitu" );
	deepEqual( Stem("costo"), "cost" );
	deepEqual( Stem("costò"), "cost" );
	deepEqual( Stem("costola"), "costol" );
	deepEqual( Stem("costole"), "costol" );
	deepEqual( Stem("costoro"), "costor" );
	deepEqual( Stem("costosa"), "costos" );
	deepEqual( Stem("costosi"), "costos" );
	deepEqual( Stem("costretta"), "costrett" );
	deepEqual( Stem("costrette"), "costrett" );
	deepEqual( Stem("costretti"), "costrett" );
	deepEqual( Stem("costretto"), "costrett" );
	deepEqual( Stem("costringe"), "costring" );
	deepEqual( Stem("costringendo"), "costring" );
	deepEqual( Stem("costringendoci"), "costring" );
	deepEqual( Stem("costringerà"), "costring" );
	deepEqual( Stem("costringerci"), "costring" );
	deepEqual( Stem("costringere"), "costring" );
	deepEqual( Stem("costringerli"), "costring" );
	deepEqual( Stem("costringerlo"), "costring" );
	deepEqual( Stem("costringevano"), "costring" );
	deepEqual( Stem("costringono"), "costring" );
	deepEqual( Stem("costrinse"), "costrins" );
	deepEqual( Stem("costruiranno"), "costru" );
	deepEqual( Stem("costruire"), "costru" );
	deepEqual( Stem("costruirlo"), "costru" );
	deepEqual( Stem("costruita"), "costru" );
	deepEqual( Stem("costruito"), "costru" );
	deepEqual( Stem("costrutte"), "costrutt" );
	deepEqual( Stem("costruttiva"), "costrutt" );
	deepEqual( Stem("costruttivo"), "costrutt" );
	deepEqual( Stem("costrutto"), "costrutt" );
	deepEqual( Stem("costruttori"), "costruttor" );
	deepEqual( Stem("costruzione"), "costruzion" );
	deepEqual( Stem("costruzioni"), "costruzion" );
	deepEqual( Stem("costui"), "costu" );
	deepEqual( Stem("costumato"), "costum" );
	deepEqual( Stem("costumavan"), "costumavan" );
	deepEqual( Stem("costume"), "costum" );
	deepEqual( Stem("costumi"), "costum" );
	deepEqual( Stem("cosv"), "cosv" );
	deepEqual( Stem("cosworth"), "cosworth" );
	deepEqual( Stem("cot"), "cot" );
	deepEqual( Stem("cotale"), "cotal" );
	deepEqual( Stem("cotillon"), "cotillon" );
	deepEqual( Stem("cotone"), "coton" );
	deepEqual( Stem("cotta"), "cott" );
	deepEqual( Stem("council"), "council" );
	deepEqual( Stem("coupon"), "coupon" );
	deepEqual( Stem("courier"), "courier" );
	deepEqual( Stem("courmaosta"), "courmaost" );
	deepEqual( Stem("courmayeur"), "courmayeur" );
	deepEqual( Stem("couto"), "cout" );
	deepEqual( Stem("cova"), "cov" );
	deepEqual( Stem("covando"), "cov" );
	deepEqual( Stem("covano"), "cov" );
	deepEqual( Stem("covasse"), "cov" );
	deepEqual( Stem("coventry"), "coventry" );
	deepEqual( Stem("covile"), "covil" );
	deepEqual( Stem("covili"), "covil" );
	deepEqual( Stem("covo"), "cov" );
	deepEqual( Stem("coyote"), "coyot" );
	deepEqual( Stem("cozzar"), "cozz" );
	deepEqual( Stem("cozzare"), "cozz" );
	deepEqual( Stem("cozzava"), "cozz" );
	deepEqual( Stem("cozzi"), "cozz" );
	deepEqual( Stem("cozzo"), "cozz" );
	deepEqual( Stem("cp"), "cp" );
	deepEqual( Stem("cpl"), "cpl" );
	deepEqual( Stem("cr"), "cr" );
	deepEqual( Stem("cra"), "cra" );
	deepEqual( Stem("crack"), "crack" );
	deepEqual( Stem("cravatte"), "cravatt" );
	deepEqual( Stem("cravero"), "craver" );
	deepEqual( Stem("craxi"), "crax" );
	deepEqual( Stem("crea"), "cre" );
	deepEqual( Stem("creando"), "cre" );
	deepEqual( Stem("creano"), "cre" );
	deepEqual( Stem("creanza"), "creanz" );
	deepEqual( Stem("creanze"), "creanz" );
	deepEqual( Stem("creare"), "cre" );
	deepEqual( Stem("creasse"), "cre" );
	deepEqual( Stem("creata"), "cre" );
	deepEqual( Stem("creatasi"), "creatas" );
	deepEqual( Stem("create"), "cre" );
	deepEqual( Stem("creati"), "cre" );
	deepEqual( Stem("creato"), "cre" );
	deepEqual( Stem("creatore"), "creator" );
	deepEqual( Stem("creatori"), "creator" );
	deepEqual( Stem("creatura"), "creatur" );
	deepEqual( Stem("creature"), "creatur" );
	deepEqual( Stem("creaturina"), "creaturin" );
	deepEqual( Stem("creazione"), "creazion" );
	deepEqual( Stem("crebbe"), "crebb" );
	deepEqual( Stem("crebbero"), "crebber" );
	deepEqual( Stem("cred"), "cred" );
	deepEqual( Stem("creda"), "cred" );
	deepEqual( Stem("credano"), "cred" );
	deepEqual( Stem("crede"), "cred" );
	deepEqual( Stem("credé"), "cred" );
	deepEqual( Stem("credendo"), "cred" );
	deepEqual( Stem("credenti"), "credent" );
	deepEqual( Stem("credenza"), "credenz" );
	deepEqual( Stem("creder"), "creder" );
	deepEqual( Stem("crederanno"), "cred" );
	deepEqual( Stem("crederci"), "cred" );
	deepEqual( Stem("credere"), "cred" );
	deepEqual( Stem("crederebbe"), "cred" );
	deepEqual( Stem("crederei"), "cred" );
	deepEqual( Stem("credereste"), "cred" );
	deepEqual( Stem("crederlo"), "cred" );
	deepEqual( Stem("crederne"), "cred" );
	deepEqual( Stem("crederti"), "cred" );
	deepEqual( Stem("credesse"), "credess" );
	deepEqual( Stem("credessero"), "cred" );
	deepEqual( Stem("credeste"), "credest" );
	deepEqual( Stem("credete"), "cred" );
	deepEqual( Stem("credette"), "credett" );
	deepEqual( Stem("credeva"), "cred" );
	deepEqual( Stem("credevan"), "credevan" );
	deepEqual( Stem("credevano"), "cred" );
	deepEqual( Stem("credevo"), "cred" );
	deepEqual( Stem("credi"), "cred" );
	deepEqual( Stem("crediam"), "crediam" );
	deepEqual( Stem("crediamo"), "cred" );
	deepEqual( Stem("crediate"), "cred" );
	deepEqual( Stem("credibile"), "credibil" );
	deepEqual( Stem("credibili"), "credibil" );
	deepEqual( Stem("credibilità"), "credibil" );
	deepEqual( Stem("crediop"), "crediop" );
	deepEqual( Stem("credit"), "credit" );
	deepEqual( Stem("creditanstalt"), "creditanstalt" );
	deepEqual( Stem("crediti"), "cred" );
	deepEqual( Stem("creditizie"), "creditiz" );
	deepEqual( Stem("creditizio"), "creditiz" );
	deepEqual( Stem("credito"), "cred" );
	deepEqual( Stem("creditore"), "creditor" );
	deepEqual( Stem("creditori"), "creditor" );
	deepEqual( Stem("creditwest"), "creditwest" );
	deepEqual( Stem("credo"), "cred" );
	deepEqual( Stem("credono"), "cred" );
	deepEqual( Stem("credula"), "credul" );
	deepEqual( Stem("credulità"), "credul" );
	deepEqual( Stem("creduta"), "cred" );
	deepEqual( Stem("credute"), "cred" );
	deepEqual( Stem("creduto"), "cred" );
	deepEqual( Stem("creeranno"), "cre" );
	deepEqual( Stem("crei"), "cre" );
	deepEqual( Stem("creino"), "crein" );
	deepEqual( Stem("crema"), "crem" );
	deepEqual( Stem("cremapergo"), "cremaperg" );
	deepEqual( Stem("cremlino"), "cremlin" );
	deepEqual( Stem("cremona"), "cremon" );
	deepEqual( Stem("cremonese"), "cremones" );
	deepEqual( Stem("creò"), "cre" );
	deepEqual( Stem("crepacci"), "crepacc" );
	deepEqual( Stem("crepacore"), "crepacor" );
	deepEqual( Stem("crepacuore"), "crepacuor" );
	deepEqual( Stem("crepaldi"), "crepald" );
	deepEqual( Stem("crepava"), "crep" );
	deepEqual( Stem("crepi"), "crep" );
	deepEqual( Stem("crepuscolo"), "crepuscol" );
	deepEqual( Stem("crerdibili"), "crerdibil" );
	deepEqual( Stem("cresc"), "cresc" );
	deepEqual( Stem("cresce"), "cresc" );
	deepEqual( Stem("crescendo"), "cresc" );
	deepEqual( Stem("crescente"), "crescent" );
	deepEqual( Stem("crescenti"), "crescent" );
	deepEqual( Stem("crescer"), "crescer" );
	deepEqual( Stem("crescerà"), "cresc" );
	deepEqual( Stem("crescere"), "cresc" );
	deepEqual( Stem("crescesse"), "crescess" );
	deepEqual( Stem("cresceva"), "cresc" );
	deepEqual( Stem("crescita"), "cresc" );
	deepEqual( Stem("cresciuta"), "cresc" );
	deepEqual( Stem("cresciute"), "cresc" );
	deepEqual( Stem("cresciuti"), "cresc" );
	deepEqual( Stem("cresciuto"), "cresc" );
	deepEqual( Stem("crescono"), "cresc" );
	deepEqual( Stem("cresece"), "cresec" );
	deepEqual( Stem("crespe"), "cresp" );
	deepEqual( Stem("cresta"), "crest" );
	deepEqual( Stem("creta"), "cret" );
	deepEqual( Stem("cretina"), "cretin" );
	deepEqual( Stem("crevalcore"), "crevalcor" );
	deepEqual( Stem("crimen"), "crimen" );
	deepEqual( Stem("criminale"), "criminal" );
	deepEqual( Stem("criminalè"), "criminal" );
	deepEqual( Stem("criminali"), "criminal" );
	deepEqual( Stem("criminalità"), "criminal" );
	deepEqual( Stem("criminalizzare"), "criminalizz" );
	deepEqual( Stem("criminalpol"), "criminalpol" );
	deepEqual( Stem("crimine"), "crimin" );
	deepEqual( Stem("crimini"), "crimin" );
	deepEqual( Stem("criniera"), "crinier" );
	deepEqual( Stem("criniti"), "crin" );
	deepEqual( Stem("crippa"), "cripp" );
	deepEqual( Stem("crisi"), "cris" );
	deepEqual( Stem("cristalli"), "cristall" );
	deepEqual( Stem("cristallini"), "cristallin" );
	deepEqual( Stem("cristallo"), "cristall" );
	deepEqual( Stem("cristiana"), "cristian" );
	deepEqual( Stem("cristiane"), "cristian" );
	deepEqual( Stem("cristianesimo"), "cristianesim" );
	deepEqual( Stem("cristiani"), "cristian" );
	deepEqual( Stem("cristianissimo"), "cristianissim" );
	deepEqual( Stem("cristianità"), "cristian" );
	deepEqual( Stem("cristiano"), "crist" );
	deepEqual( Stem("cristina"), "cristin" );
	deepEqual( Stem("cristo"), "crist" );
	deepEqual( Stem("cristobal"), "cristobal" );
	deepEqual( Stem("cristoforo"), "cristofor" );
	deepEqual( Stem("criteri"), "criter" );
	deepEqual( Stem("criterio"), "criter" );
	deepEqual( Stem("critica"), "critic" );
	deepEqual( Stem("criticando"), "critic" );
	deepEqual( Stem("criticar"), "critic" );
	deepEqual( Stem("criticare"), "critic" );
	deepEqual( Stem("criticarlo"), "critic" );
	deepEqual( Stem("criticata"), "critic" );
	deepEqual( Stem("criticato"), "critic" );
	deepEqual( Stem("critiche"), "critic" );
	deepEqual( Stem("critichi"), "critic" );
	deepEqual( Stem("critici"), "critic" );
	deepEqual( Stem("critico"), "critic" );
	deepEqual( Stem("crivellata"), "crivell" );
	deepEqual( Stem("cro"), "cro" );
	deepEqual( Stem("croata"), "cro" );
	deepEqual( Stem("croati"), "cro" );
	deepEqual( Stem("croato"), "cro" );
	deepEqual( Stem("croazia"), "croaz" );
	deepEqual( Stem("croc"), "croc" );
	deepEqual( Stem("crocchi"), "crocc" );
	deepEqual( Stem("crocchia"), "crocc" );
	deepEqual( Stem("crocchio"), "crocc" );
	deepEqual( Stem("croce"), "croc" );
	deepEqual( Stem("croci"), "croc" );
	deepEqual( Stem("crociata"), "croc" );
	deepEqual( Stem("crociate"), "croc" );
	deepEqual( Stem("crocicchi"), "crocicc" );
	deepEqual( Stem("crocicchio"), "crocicc" );
	deepEqual( Stem("crociera"), "crocier" );
	deepEqual( Stem("crociere"), "croc" );
	deepEqual( Stem("crocieristico"), "crocierist" );
	deepEqual( Stem("crocifero"), "crocifer" );
	deepEqual( Stem("crocifisso"), "crocifiss" );
	deepEqual( Stem("crollare"), "croll" );
	deepEqual( Stem("crollava"), "croll" );
	deepEqual( Stem("crollera"), "croller" );
	deepEqual( Stem("crollo"), "croll" );
	deepEqual( Stem("cromosomi"), "cromosom" );
	deepEqual( Stem("cronaca"), "cronac" );
	deepEqual( Stem("cronache"), "cronac" );
	deepEqual( Stem("cronica"), "cronic" );
	deepEqual( Stem("cronico"), "cronic" );
	deepEqual( Stem("cronista"), "cronist" );
	deepEqual( Stem("cronisti"), "cronist" );
	deepEqual( Stem("crono"), "cron" );
	deepEqual( Stem("cronologico"), "cronolog" );
	deepEqual( Stem("cronometro"), "cronometr" );
	deepEqual( Stem("cronoscalata"), "cronoscal" );
	deepEqual( Stem("cross"), "cross" );
	deepEqual( Stem("crossato"), "cross" );
	deepEqual( Stem("croupier"), "croupier" );
	deepEqual( Stem("crrr"), "crrr" );
	deepEqual( Stem("crs"), "crs" );
	deepEqual( Stem("crt"), "crt" );
	deepEqual( Stem("cruccio"), "crucc" );
	deepEqual( Stem("cruciale"), "crucial" );
	deepEqual( Stem("cruciali"), "crucial" );
	deepEqual( Stem("crucis"), "crucis" );
	deepEqual( Stem("crude"), "crud" );
	deepEqual( Stem("crudel"), "crudel" );
	deepEqual( Stem("crudele"), "crudel" );
	deepEqual( Stem("crudeli"), "crudel" );
	deepEqual( Stem("crudelmente"), "crudel" );
	deepEqual( Stem("crudeltà"), "crudelt" );
	deepEqual( Stem("cruijff"), "cruijff" );
	deepEqual( Stem("cruiser"), "cruiser" );
	deepEqual( Stem("crusca"), "crusc" );
	deepEqual( Stem("cruscotto"), "cruscott" );
	deepEqual( Stem("cruyff"), "cruyff" );
	deepEqual( Stem("cruz"), "cruz" );
	deepEqual( Stem("crystal"), "crystal" );
	deepEqual( Stem("cs"), "cs" );
	deepEqual( Stem("csi"), "csi" );
	deepEqual( Stem("csil"), "csil" );
	deepEqual( Stem("csm"), "csm" );
	deepEqual( Stem("csp"), "csp" );
	deepEqual( Stem("css"), "css" );
	deepEqual( Stem("ct"), "ct" );
	deepEqual( Stem("cte"), "cte" );
	deepEqual( Stem("cto"), "cto" );
	deepEqual( Stem("ctz"), "ctz" );
	deepEqual( Stem("ctznon"), "ctznon" );
	deepEqual( Stem("cuahutemoc"), "cuahutemoc" );
	deepEqual( Stem("cuauhtemoc"), "cuauhtemoc" );
	deepEqual( Stem("cubi"), "cub" );
	deepEqual( Stem("cucca"), "cucc" );
	deepEqual( Stem("cuccagna"), "cuccagn" );
	deepEqual( Stem("cucchiaiata"), "cucchiai" );
	deepEqual( Stem("cucchiaio"), "cucchiai" );
	deepEqual( Stem("cuccia"), "cucc" );
	deepEqual( Stem("cucendo"), "cuc" );
	deepEqual( Stem("cucina"), "cucin" );
	deepEqual( Stem("cucinieri"), "cucinier" );
	deepEqual( Stem("cucire"), "cuc" );
	deepEqual( Stem("cucirini"), "cucirin" );
	deepEqual( Stem("cuciti"), "cuc" );
	deepEqual( Stem("cuciva"), "cuc" );
	deepEqual( Stem("cugina"), "cugin" );
	deepEqual( Stem("cugini"), "cugin" );
	deepEqual( Stem("cugino"), "cugin" );
	deepEqual( Stem("cuginò"), "cugin" );
	deepEqual( Stem("cui"), "cui" );
	deepEqual( Stem("cuicchi"), "cuicc" );
	deepEqual( Stem("cukor"), "cukor" );
	deepEqual( Stem("culminata"), "culmin" );
	deepEqual( Stem("culmine"), "culmin" );
	deepEqual( Stem("culmineranno"), "culmin" );
	deepEqual( Stem("culpable"), "culpabl" );
	deepEqual( Stem("culto"), "cult" );
	deepEqual( Stem("cultura"), "cultur" );
	deepEqual( Stem("culturale"), "cultural" );
	deepEqual( Stem("culturali"), "cultural" );
	deepEqual( Stem("culturalmente"), "cultural" );
	deepEqual( Stem("culture"), "cultur" );
	deepEqual( Stem("cultus"), "cultus" );
	deepEqual( Stem("cumuli"), "cumul" );
	deepEqual( Stem("cumulo"), "cumul" );
	deepEqual( Stem("cuneo"), "cune" );
	deepEqual( Stem("cuocere"), "cuoc" );
	deepEqual( Stem("cuoco"), "cuoc" );
	deepEqual( Stem("cuoia"), "cuoi" );
	deepEqual( Stem("cuoio"), "cuoi" );
	deepEqual( Stem("cuor"), "cuor" );
	deepEqual( Stem("cuore"), "cuor" );
	deepEqual( Stem("cuorè"), "cuor" );
	deepEqual( Stem("cuori"), "cuor" );
	deepEqual( Stem("cupa"), "cup" );
	deepEqual( Stem("cupi"), "cup" );
	deepEqual( Stem("cupidigia"), "cupidig" );
	deepEqual( Stem("cupo"), "cup" );
	deepEqual( Stem("cupola"), "cupol" );
	deepEqual( Stem("cupole"), "cupol" );
	deepEqual( Stem("cura"), "cur" );
	deepEqual( Stem("curan"), "curan" );
	deepEqual( Stem("curando"), "cur" );
	deepEqual( Stem("curarci"), "cur" );
	deepEqual( Stem("curare"), "cur" );
	deepEqual( Stem("curarè"), "curar" );
	deepEqual( Stem("curarsi"), "cur" );
	deepEqual( Stem("curas"), "curas" );
	deepEqual( Stem("curasse"), "cur" );
	deepEqual( Stem("curati"), "cur" );
	deepEqual( Stem("curato"), "cur" );
	deepEqual( Stem("curatore"), "curator" );
	deepEqual( Stem("curatori"), "curator" );
	deepEqual( Stem("curava"), "cur" );
	deepEqual( Stem("curavano"), "cur" );
	deepEqual( Stem("cure"), "cur" );
	deepEqual( Stem("curerebbe"), "cur" );
	deepEqual( Stem("curi"), "cur" );
	deepEqual( Stem("curia"), "cur" );
	deepEqual( Stem("curiosa"), "curios" );
	deepEqual( Stem("curiose"), "curios" );
	deepEqual( Stem("curiosi"), "curios" );
	deepEqual( Stem("curiosita"), "curios" );
	deepEqual( Stem("curiosità"), "curios" );
	deepEqual( Stem("curioso"), "curios" );
	deepEqual( Stem("curo"), "cur" );
	deepEqual( Stem("curò"), "cur" );
	deepEqual( Stem("curti"), "curt" );
	deepEqual( Stem("curtis"), "curtis" );
	deepEqual( Stem("curva"), "curv" );
	deepEqual( Stem("curve"), "curv" );
	deepEqual( Stem("curvi"), "curv" );
	deepEqual( Stem("curviamo"), "curv" );
	deepEqual( Stem("curvo"), "curv" );
	deepEqual( Stem("cus"), "cus" );
	deepEqual( Stem("cusani"), "cusan" );
	deepEqual( Stem("cusin"), "cusin" );
	deepEqual( Stem("custode"), "custod" );
	deepEqual( Stem("custodia"), "custod" );
	deepEqual( Stem("custodirà"), "custod" );
	deepEqual( Stem("custodire"), "custod" );
	deepEqual( Stem("custodirla"), "custod" );
	deepEqual( Stem("custodite"), "custod" );
	deepEqual( Stem("cut"), "cut" );
	deepEqual( Stem("cuthbert"), "cuthbert" );
	deepEqual( Stem("cutigliano"), "cutigl" );
	deepEqual( Stem("cutrufo"), "cutruf" );
	deepEqual( Stem("cutter"), "cutter" );
	deepEqual( Stem("cv"), "cv" );
	deepEqual( Stem("cyanamide"), "cyanamid" );
	deepEqual( Stem("cynthia"), "cynthi" );
	deepEqual( Stem("czudaj"), "czudaj" );
	deepEqual( Stem("d"), "d" );
	deepEqual( Stem("da"), "da" );
	deepEqual( Stem("dà"), "dà" );
	deepEqual( Stem("dabben"), "dabben" );
	deepEqual( Stem("dabbene"), "dabben" );
	deepEqual( Stem("dabrecan"), "dabrecan" );
	deepEqual( Stem("dacca"), "dacc" );
	deepEqual( Stem("dadi"), "dad" );
	deepEqual( Stem("daghe"), "dagh" );
	deepEqual( Stem("dagl"), "dagl" );
	deepEqual( Stem("dagli"), "dagl" );
	deepEqual( Stem("dàgli"), "dàgl" );
	deepEqual( Stem("dai"), "dai" );
	deepEqual( Stem("daily"), "daily" );
	deepEqual( Stem("daisuke"), "daisuk" );
	deepEqual( Stem("dajal"), "dajal" );
	deepEqual( Stem("dal"), "dal" );
	deepEqual( Stem("dall"), "dall" );
	deepEqual( Stem("dalla"), "dall" );
	deepEqual( Stem("dallas"), "dallas" );
	deepEqual( Stem("dalle"), "dall" );
	deepEqual( Stem("dàlli"), "dàll" );
	deepEqual( Stem("dallo"), "dall" );
	deepEqual( Stem("dalmine"), "dalmin" );
	deepEqual( Stem("dam"), "dam" );
	deepEqual( Stem("dama"), "dam" );
	deepEqual( Stem("dame"), "dam" );
	deepEqual( Stem("damia"), "dam" );
	deepEqual( Stem("damiani"), "damian" );
	deepEqual( Stem("damiano"), "dam" );
	deepEqual( Stem("dammelo"), "dammel" );
	deepEqual( Stem("dammi"), "damm" );
	deepEqual( Stem("dan"), "dan" );
	deepEqual( Stem("danaos"), "danaos" );
	deepEqual( Stem("danari"), "danar" );
	deepEqual( Stem("danaro"), "danar" );
	deepEqual( Stem("dance"), "danc" );
	deepEqual( Stem("dancer"), "dancer" );
	deepEqual( Stem("dando"), "dand" );
	deepEqual( Stem("dandogli"), "dandogl" );
	deepEqual( Stem("dandola"), "dandol" );
	deepEqual( Stem("dandole"), "dandol" );
	deepEqual( Stem("dandomi"), "dandom" );
	deepEqual( Stem("dandosi"), "dandos" );
	deepEqual( Stem("danero"), "daner" );
	deepEqual( Stem("danese"), "danes" );
	deepEqual( Stem("dani"), "dan" );
	deepEqual( Stem("daniel"), "daniel" );
	deepEqual( Stem("daniela"), "daniel" );
	deepEqual( Stem("daniele"), "daniel" );
	deepEqual( Stem("danieli"), "daniel" );
	deepEqual( Stem("danilo"), "danil" );
	deepEqual( Stem("danimarca"), "danimarc" );
	deepEqual( Stem("dannata"), "dann" );
	deepEqual( Stem("dannato"), "dann" );
	deepEqual( Stem("danneggia"), "dannegg" );
	deepEqual( Stem("danneggiano"), "dannegg" );
	deepEqual( Stem("danneggiare"), "dannegg" );
	deepEqual( Stem("danneggiata"), "dannegg" );
	deepEqual( Stem("danneggiate"), "dannegg" );
	deepEqual( Stem("danneggiati"), "dannegg" );
	deepEqual( Stem("danneggiato"), "dannegg" );
	deepEqual( Stem("danni"), "dann" );
	deepEqual( Stem("danno"), "dann" );
	deepEqual( Stem("dànno"), "dànn" );
	deepEqual( Stem("dannosa"), "dannos" );
	deepEqual( Stem("dannoso"), "dannos" );
	deepEqual( Stem("dante"), "dant" );
	deepEqual( Stem("danubio"), "danub" );
	deepEqual( Stem("danyon"), "danyon" );
	deepEqual( Stem("danza"), "danz" );
	deepEqual( Stem("danzanti"), "danzant" );
	deepEqual( Stem("dappiè"), "dapp" );
	deepEqual( Stem("dappocaggine"), "dappocaggin" );
	deepEqual( Stem("dapprima"), "dapprim" );
	deepEqual( Stem("dar"), "dar" );
	deepEqual( Stem("darà"), "dar" );
	deepEqual( Stem("daranno"), "darann" );
	deepEqual( Stem("dare"), "dar" );
	deepEqual( Stem("darebbe"), "darebb" );
	deepEqual( Stem("darei"), "dare" );
	deepEqual( Stem("daremmo"), "dar" );
	deepEqual( Stem("daremo"), "darem" );
	deepEqual( Stem("darete"), "dar" );
	deepEqual( Stem("dargli"), "dargl" );
	deepEqual( Stem("dargliele"), "dargliel" );
	deepEqual( Stem("dargliene"), "darglien" );
	deepEqual( Stem("daria"), "dar" );
	deepEqual( Stem("dario"), "dar" );
	deepEqual( Stem("darla"), "darl" );
	deepEqual( Stem("darle"), "darl" );
	deepEqual( Stem("darlo"), "darl" );
	deepEqual( Stem("darmene"), "darmen" );
	deepEqual( Stem("darmi"), "darm" );
	deepEqual( Stem("darne"), "darn" );
	deepEqual( Stem("darò"), "dar" );
	deepEqual( Stem("darsene"), "darsen" );
	deepEqual( Stem("darsi"), "dars" );
	deepEqual( Stem("darti"), "dart" );
	deepEqual( Stem("darvi"), "darv" );
	deepEqual( Stem("daryl"), "daryl" );
	deepEqual( Stem("data"), "dat" );
	deepEqual( Stem("datagli"), "datagl" );
	deepEqual( Stem("dataria"), "datar" );
	deepEqual( Stem("date"), "dat" );
	deepEqual( Stem("datè"), "dat" );
	deepEqual( Stem("dateci"), "datec" );
	deepEqual( Stem("dategli"), "dategl" );
	deepEqual( Stem("datemele"), "datemel" );
	deepEqual( Stem("datemi"), "datem" );
	deepEqual( Stem("dati"), "dat" );
	deepEqual( Stem("dato"), "dat" );
	deepEqual( Stem("datogli"), "datogl" );
	deepEqual( Stem("datori"), "dator" );
	deepEqual( Stem("datoriali"), "datorial" );
	deepEqual( Stem("datrice"), "datric" );
	deepEqual( Stem("dava"), "dav" );
	deepEqual( Stem("davan"), "davan" );
	deepEqual( Stem("davano"), "dav" );
	deepEqual( Stem("davanti"), "davant" );
	deepEqual( Stem("davanzale"), "davanzal" );
	deepEqual( Stem("davanzali"), "davanzal" );
	deepEqual( Stem("david"), "david" );
	deepEqual( Stem("davide"), "david" );
	deepEqual( Stem("davidson"), "davidson" );
	deepEqual( Stem("davigo"), "davig" );
	deepEqual( Stem("davitashvili"), "davitashvil" );
	deepEqual( Stem("davo"), "dav" );
	deepEqual( Stem("davvero"), "davver" );
	deepEqual( Stem("dawson"), "dawson" );
	deepEqual( Stem("dax"), "dax" );
	deepEqual( Stem("day"), "day" );
	deepEqual( Stem("daya"), "day" );
	deepEqual( Stem("dayal"), "dayal" );
	deepEqual( Stem("dazi"), "daz" );
	deepEqual( Stem("dc"), "dc" );
	deepEqual( Stem("dd"), "dd" );
	deepEqual( Stem("ddla"), "ddla" );
	deepEqual( Stem("de"), "de" );
	deepEqual( Stem("deaglio"), "deagl" );
	deepEqual( Stem("deal"), "deal" );
	deepEqual( Stem("deb"), "deb" );
	deepEqual( Stem("debba"), "debb" );
	deepEqual( Stem("debbano"), "debb" );
	deepEqual( Stem("debbie"), "debb" );
	deepEqual( Stem("debbo"), "debb" );
	deepEqual( Stem("debbono"), "debb" );
	deepEqual( Stem("deben"), "deben" );
	deepEqual( Stem("debita"), "deb" );
	deepEqual( Stem("debite"), "deb" );
	deepEqual( Stem("debiti"), "deb" );
	deepEqual( Stem("debito"), "deb" );
	deepEqual( Stem("debitore"), "debitor" );
	deepEqual( Stem("debitoria"), "debitor" );
	deepEqual( Stem("debitrice"), "debitr" );
	deepEqual( Stem("debituccio"), "debitucc" );
	deepEqual( Stem("debol"), "debol" );
	deepEqual( Stem("debole"), "debol" );
	deepEqual( Stem("debolezza"), "debolezz" );
	deepEqual( Stem("debolezze"), "debolezz" );
	deepEqual( Stem("deboli"), "debol" );
	deepEqual( Stem("debolmente"), "debol" );
	deepEqual( Stem("deborah"), "deborah" );
	deepEqual( Stem("debuerat"), "debuerat" );
	deepEqual( Stem("dec"), "dec" );
	deepEqual( Stem("decade"), "decad" );
	deepEqual( Stem("decadenza"), "decadent" );
	deepEqual( Stem("decadere"), "decad" );
	deepEqual( Stem("decadis"), "decadis" );
	deepEqual( Stem("decalogo"), "decalog" );
	deepEqual( Stem("deceduta"), "deced" );
	deepEqual( Stem("deceduto"), "deced" );
	deepEqual( Stem("decembre"), "decembr" );
	deepEqual( Stem("decennale"), "decennal" );
	deepEqual( Stem("decenni"), "decenn" );
	deepEqual( Stem("decente"), "decent" );
	deepEqual( Stem("decentramento"), "decentr" );
	deepEqual( Stem("decentrata"), "decentr" );
	deepEqual( Stem("decentrato"), "decentr" );
	deepEqual( Stem("decesso"), "decess" );
	deepEqual( Stem("decide"), "decid" );
	deepEqual( Stem("decidendo"), "decid" );
	deepEqual( Stem("decider"), "decider" );
	deepEqual( Stem("deciderà"), "decid" );
	deepEqual( Stem("decidere"), "decid" );
	deepEqual( Stem("decidersi"), "decid" );
	deepEqual( Stem("decidesse"), "decidess" );
	deepEqual( Stem("decidessimo"), "decidessim" );
	deepEqual( Stem("decideva"), "decid" );
	deepEqual( Stem("decidevano"), "decid" );
	deepEqual( Stem("decidono"), "decid" );
	deepEqual( Stem("decifrare"), "decifr" );
	deepEqual( Stem("decima"), "decim" );
	deepEqual( Stem("decimata"), "decim" );
	deepEqual( Stem("decimato"), "decim" );
	deepEqual( Stem("decimo"), "decim" );
	deepEqual( Stem("decina"), "decin" );
	deepEqual( Stem("decine"), "decin" );
	deepEqual( Stem("decisa"), "decis" );
	deepEqual( Stem("decisamente"), "decis" );
	deepEqual( Stem("decise"), "decis" );
	deepEqual( Stem("decisi"), "decis" );
	deepEqual( Stem("decisionali"), "decisional" );
	deepEqual( Stem("decisione"), "decision" );
	deepEqual( Stem("decisioni"), "decision" );
	deepEqual( Stem("decisiva"), "decis" );
	deepEqual( Stem("decisivi"), "decis" );
	deepEqual( Stem("decisivo"), "decis" );
	deepEqual( Stem("deciso"), "decis" );
	deepEqual( Stem("deckert"), "deckert" );
	deepEqual( Stem("declamava"), "declam" );
	deepEqual( Stem("declamazioni"), "declam" );
	deepEqual( Stem("declino"), "declin" );
	deepEqual( Stem("decolla"), "decoll" );
	deepEqual( Stem("decollano"), "decoll" );
	deepEqual( Stem("decollarono"), "decoll" );
	deepEqual( Stem("decollati"), "decoll" );
	deepEqual( Stem("decoro"), "decor" );
	deepEqual( Stem("decorosa"), "decor" );
	deepEqual( Stem("decoroso"), "decor" );
	deepEqual( Stem("decremento"), "decrement" );
	deepEqual( Stem("decrepite"), "decrep" );
	deepEqual( Stem("decretare"), "decret" );
	deepEqual( Stem("decretate"), "decret" );
	deepEqual( Stem("decretati"), "decret" );
	deepEqual( Stem("decretato"), "decret" );
	deepEqual( Stem("decretazione"), "decret" );
	deepEqual( Stem("decreti"), "decret" );
	deepEqual( Stem("decreto"), "decret" );
	deepEqual( Stem("decsioni"), "decsion" );
	deepEqual( Stem("decurioni"), "decurion" );
	deepEqual( Stem("dedica"), "dedic" );
	deepEqual( Stem("dedicano"), "dedic" );
	deepEqual( Stem("dedicarsi"), "dedic" );
	deepEqual( Stem("dedicata"), "dedic" );
	deepEqual( Stem("dedicate"), "dedic" );
	deepEqual( Stem("dedicati"), "dedic" );
	deepEqual( Stem("dedicato"), "dedic" );
	deepEqual( Stem("dedicatosi"), "dedicat" );
	deepEqual( Stem("dedicava"), "dedic" );
	deepEqual( Stem("dedicò"), "dedic" );
	deepEqual( Stem("dedizione"), "dedizion" );
	deepEqual( Stem("dedotti"), "dedott" );
	deepEqual( Stem("deduciamo"), "deduc" );
	deepEqual( Stem("deducibilità"), "deducibil" );
	deepEqual( Stem("deduttivo"), "dedutt" );
	deepEqual( Stem("def"), "def" );
	deepEqual( Stem("defence"), "defenc" );
	deepEqual( Stem("deferente"), "deferent" );
	deepEqual( Stem("deferenza"), "deferent" );
	deepEqual( Stem("deferimento"), "defer" );
	deepEqual( Stem("deffinire"), "deffin" );
	deepEqual( Stem("defformità"), "defform" );
	deepEqual( Stem("deficit"), "deficit" );
	deepEqual( Stem("deficitari"), "deficitar" );
	deepEqual( Stem("defilata"), "defil" );
	deepEqual( Stem("definendo"), "defin" );
	deepEqual( Stem("definendola"), "defin" );
	deepEqual( Stem("definendoli"), "defin" );
	deepEqual( Stem("definendolo"), "defin" );
	deepEqual( Stem("definendosi"), "defin" );
	deepEqual( Stem("definire"), "defin" );
	deepEqual( Stem("definisca"), "defin" );
	deepEqual( Stem("definisce"), "defin" );
	deepEqual( Stem("definisco"), "defin" );
	deepEqual( Stem("definiscono"), "defin" );
	deepEqual( Stem("definita"), "defin" );
	deepEqual( Stem("definite"), "defin" );
	deepEqual( Stem("definiti"), "defin" );
	deepEqual( Stem("definitiva"), "definit" );
	deepEqual( Stem("definitivamente"), "definit" );
	deepEqual( Stem("definitive"), "definit" );
	deepEqual( Stem("definitivi"), "definit" );
	deepEqual( Stem("definitivo"), "definit" );
	deepEqual( Stem("definito"), "defin" );
	deepEqual( Stem("definizione"), "definizion" );
	deepEqual( Stem("definizioni"), "definizion" );
	deepEqual( Stem("definzione"), "definzion" );
	deepEqual( Stem("deflagrata"), "deflagr" );
	deepEqual( Stem("deflagrazione"), "deflagr" );
	deepEqual( Stem("deflusso"), "defluss" );
	deepEqual( Stem("deformandone"), "deform" );
	deepEqual( Stem("deformare"), "deform" );
	deepEqual( Stem("deforme"), "deform" );
	deepEqual( Stem("deformi"), "deform" );
	deepEqual( Stem("defunto"), "defunt" );
	deepEqual( Stem("degenerazione"), "degener" );
	deepEqual( Stem("degl"), "degl" );
	deepEqual( Stem("degli"), "degl" );
	deepEqual( Stem("degna"), "degn" );
	deepEqual( Stem("degnamente"), "degn" );
	deepEqual( Stem("degnazione"), "degnazion" );
	deepEqual( Stem("degne"), "degn" );
	deepEqual( Stem("degni"), "degn" );
	deepEqual( Stem("degnino"), "degnin" );
	deepEqual( Stem("degno"), "degn" );
	deepEqual( Stem("degradando"), "degrad" );
	deepEqual( Stem("degradati"), "degrad" );
	deepEqual( Stem("degrado"), "degrad" );
	deepEqual( Stem("dei"), "dei" );
	deepEqual( Stem("deì"), "deì" );
	deepEqual( Stem("deiezione"), "deiezion" );
	deepEqual( Stem("deisel"), "deisel" );
	deepEqual( Stem("deja"), "dej" );
	deepEqual( Stem("del"), "del" );
	deepEqual( Stem("dela"), "del" );
	deepEqual( Stem("delatore"), "delator" );
	deepEqual( Stem("dele"), "del" );
	deepEqual( Stem("delecour"), "delecour" );
	deepEqual( Stem("delega"), "deleg" );
	deepEqual( Stem("delegati"), "deleg" );
	deepEqual( Stem("delegato"), "deleg" );
	deepEqual( Stem("delegazione"), "deleg" );
	deepEqual( Stem("delegazioni"), "deleg" );
	deepEqual( Stem("delel"), "delel" );
	deepEqual( Stem("deleplanke"), "deleplank" );
	deepEqual( Stem("delhi"), "delh" );
	deepEqual( Stem("delhì"), "delh" );
	deepEqual( Stem("delibera"), "deliber" );
	deepEqual( Stem("deliberare"), "deliber" );
	deepEqual( Stem("deliberatamente"), "deliberat" );
	deepEqual( Stem("deliberati"), "deliber" );
	deepEqual( Stem("deliberato"), "deliber" );
	deepEqual( Stem("deliberava"), "deliber" );
	deepEqual( Stem("deliberazione"), "deliber" );
	deepEqual( Stem("deliberazioni"), "deliber" );
	deepEqual( Stem("delibere"), "delib" );
	deepEqual( Stem("deliberò"), "delib" );
	deepEqual( Stem("delic"), "delic" );
	deepEqual( Stem("delicata"), "delic" );
	deepEqual( Stem("delicate"), "delic" );
	deepEqual( Stem("delicati"), "delic" );
	deepEqual( Stem("delicatissimi"), "delicatissim" );
	deepEqual( Stem("delicato"), "delic" );
	deepEqual( Stem("delimitazione"), "delimit" );
	deepEqual( Stem("delineare"), "delin" );
	deepEqual( Stem("delinearsi"), "delin" );
	deepEqual( Stem("delineata"), "delin" );
	deepEqual( Stem("delineati"), "delin" );
	deepEqual( Stem("delineato"), "delin" );
	deepEqual( Stem("delinquenti"), "delinquent" );
	deepEqual( Stem("delinquere"), "delinqu" );
	deepEqual( Stem("deliranti"), "delir" );
	deepEqual( Stem("delirio"), "delir" );
	deepEqual( Stem("delitti"), "delitt" );
	deepEqual( Stem("delitto"), "delitt" );
	deepEqual( Stem("delizie"), "deliz" );
	deepEqual( Stem("delizioso"), "deliz" );
	deepEqual( Stem("dell"), "dell" );
	deepEqual( Stem("della"), "dell" );
	deepEqual( Stem("dellaq"), "dellaq" );
	deepEqual( Stem("dellas"), "dellas" );
	deepEqual( Stem("delle"), "dell" );
	deepEqual( Stem("delli"), "dell" );
	deepEqual( Stem("dellla"), "delll" );
	deepEqual( Stem("dello"), "dell" );
	deepEqual( Stem("dellòassistenza"), "dellòassistent" );
	deepEqual( Stem("delo"), "del" );
	deepEqual( Stem("delon"), "delon" );
	deepEqual( Stem("delrio"), "delr" );
	deepEqual( Stem("delta"), "delt" );
	deepEqual( Stem("deltalat"), "deltalat" );
	deepEqual( Stem("deludente"), "deludent" );
	deepEqual( Stem("delusa"), "delus" );
	deepEqual( Stem("deluse"), "delus" );
	deepEqual( Stem("delusione"), "delusion" );
	deepEqual( Stem("deluso"), "delus" );
	deepEqual( Stem("delvecchio"), "delvecc" );
	deepEqual( Stem("demagogia"), "demagog" );
	deepEqual( Stem("demagogo"), "demagog" );
	deepEqual( Stem("demandando"), "demand" );
	deepEqual( Stem("demandare"), "demand" );
	deepEqual( Stem("demaniale"), "demanial" );
	deepEqual( Stem("demaniali"), "demanial" );
	deepEqual( Stem("demarcazione"), "demarc" );
	deepEqual( Stem("demattè"), "dematt" );
	deepEqual( Stem("demeritato"), "demerit" );
	deepEqual( Stem("demi"), "dem" );
	deepEqual( Stem("demma"), "demm" );
	deepEqual( Stem("democratica"), "democrat" );
	deepEqual( Stem("democraticamente"), "democrat" );
	deepEqual( Stem("democratiche"), "democrat" );
	deepEqual( Stem("democratici"), "democrat" );
	deepEqual( Stem("democratico"), "democrat" );
	deepEqual( Stem("democratizzazione"), "democratizz" );
	deepEqual( Stem("democrazia"), "democraz" );
	deepEqual( Stem("democrazià"), "democraz" );
	deepEqual( Stem("democrazie"), "democraz" );
	deepEqual( Stem("democristiana"), "democristian" );
	deepEqual( Stem("democristiani"), "democristian" );
	deepEqual( Stem("democristiano"), "democrist" );
	deepEqual( Stem("demolendo"), "demol" );
	deepEqual( Stem("demolire"), "demol" );
	deepEqual( Stem("demoni"), "demon" );
	deepEqual( Stem("demòni"), "demòn" );
	deepEqual( Stem("demonio"), "demon" );
	deepEqual( Stem("demy"), "demy" );
	deepEqual( Stem("denaro"), "denar" );
	deepEqual( Stem("deneuve"), "deneuv" );
	deepEqual( Stem("denigratoria"), "denigrator" );
	deepEqual( Stem("dennis"), "dennis" );
	deepEqual( Stem("denominandole"), "denomin" );
	deepEqual( Stem("denominata"), "denomin" );
	deepEqual( Stem("denominati"), "denomin" );
	deepEqual( Stem("denominato"), "denomin" );
	deepEqual( Stem("denominazione"), "denomin" );
	deepEqual( Stem("denotavano"), "denot" );
	deepEqual( Stem("densa"), "dens" );
	deepEqual( Stem("dense"), "dens" );
	deepEqual( Stem("denso"), "dens" );
	deepEqual( Stem("dente"), "dent" );
	deepEqual( Stem("denti"), "dent" );
	deepEqual( Stem("dentista"), "dentist" );
	deepEqual( Stem("dentro"), "dentr" );
	deepEqual( Stem("denuncia"), "denunc" );
	deepEqual( Stem("denunciando"), "denunc" );
	deepEqual( Stem("denunciare"), "denunc" );
	deepEqual( Stem("denunciarli"), "denunc" );
	deepEqual( Stem("denunciarlo"), "denunc" );
	deepEqual( Stem("denunciata"), "denunc" );
	deepEqual( Stem("denunciati"), "denunc" );
	deepEqual( Stem("denunciato"), "denunc" );
	deepEqual( Stem("denunciet"), "denunciet" );
	deepEqual( Stem("denunziare"), "denunz" );
	deepEqual( Stem("denunziavan"), "denunziavan" );
	deepEqual( Stem("denunzie"), "denunz" );
	deepEqual( Stem("deo"), "deo" );
	deepEqual( Stem("deon"), "deon" );
	deepEqual( Stem("deontologicamente"), "deontolog" );
	deepEqual( Stem("depardieu"), "depardieu" );
	deepEqual( Stem("deplora"), "deplor" );
	deepEqual( Stem("deplorabile"), "deplor" );
	deepEqual( Stem("deplorabili"), "deplor" );
	deepEqual( Stem("deplorata"), "deplor" );
	deepEqual( Stem("deplorati"), "deplor" );
	deepEqual( Stem("deplorava"), "deplor" );
	deepEqual( Stem("depon"), "depon" );
	deepEqual( Stem("depone"), "depon" );
	deepEqual( Stem("deponevano"), "depon" );
	deepEqual( Stem("deponga"), "depong" );
	deepEqual( Stem("deporre"), "deporr" );
	deepEqual( Stem("deportare"), "deport" );
	deepEqual( Stem("deportazione"), "deport" );
	deepEqual( Stem("depose"), "depos" );
	deepEqual( Stem("depositar"), "deposit" );
	deepEqual( Stem("depositare"), "deposit" );
	deepEqual( Stem("depositari"), "depositar" );
	deepEqual( Stem("depositerà"), "deposit" );
	deepEqual( Stem("depositi"), "depos" );
	deepEqual( Stem("deposito"), "depos" );
	deepEqual( Stem("deposizione"), "deposizion" );
	deepEqual( Stem("deposta"), "depost" );
	deepEqual( Stem("deposto"), "depost" );
	deepEqual( Stem("deprendo"), "depr" );
	deepEqual( Stem("depressa"), "depress" );
	deepEqual( Stem("depresse"), "depress" );
	deepEqual( Stem("depressive"), "depress" );
	deepEqual( Stem("depurato"), "depur" );
	deepEqual( Stem("depurazione"), "depur" );
	deepEqual( Stem("deputata"), "deput" );
	deepEqual( Stem("deputati"), "deput" );
	deepEqual( Stem("deputato"), "deput" );
	deepEqual( Stem("der"), "der" );
	deepEqual( Stem("derby"), "derby" );
	deepEqual( Stem("derelitte"), "derelitt" );
	deepEqual( Stem("derelitti"), "derelitt" );
	deepEqual( Stem("deride"), "derid" );
	deepEqual( Stem("deriderle"), "derid" );
	deepEqual( Stem("deridevan"), "deridevan" );
	deepEqual( Stem("deridono"), "derid" );
	deepEqual( Stem("derisa"), "deris" );
	deepEqual( Stem("deriso"), "deris" );
	deepEqual( Stem("deriva"), "der" );
	deepEqual( Stem("derivano"), "der" );
	deepEqual( Stem("derivante"), "deriv" );
	deepEqual( Stem("derivanti"), "deriv" );
	deepEqual( Stem("derivati"), "deriv" );
	deepEqual( Stem("deriverà"), "deriv" );
	deepEqual( Stem("derivi"), "der" );
	deepEqual( Stem("deroga"), "derog" );
	deepEqual( Stem("derogando"), "derog" );
	deepEqual( Stem("derrata"), "derr" );
	deepEqual( Stem("derrate"), "derr" );
	deepEqual( Stem("derubata"), "derub" );
	deepEqual( Stem("des"), "des" );
	deepEqual( Stem("desailly"), "desailly" );
	deepEqual( Stem("desario"), "desar" );
	deepEqual( Stem("deschamps"), "deschamps" );
	deepEqual( Stem("desconsuelo"), "desconsuel" );
	deepEqual( Stem("descrisse"), "descriss" );
	deepEqual( Stem("descritta"), "descritt" );
	deepEqual( Stem("descritte"), "descritt" );
	deepEqual( Stem("descritti"), "descritt" );
	deepEqual( Stem("descritto"), "descritt" );
	deepEqual( Stem("descriuendo"), "descriu" );
	deepEqual( Stem("descrive"), "descriv" );
	deepEqual( Stem("descrivendo"), "descriv" );
	deepEqual( Stem("descriver"), "descriver" );
	deepEqual( Stem("descrivere"), "descriv" );
	deepEqual( Stem("descriveremo"), "descriv" );
	deepEqual( Stem("descriverle"), "descriv" );
	deepEqual( Stem("descriverlo"), "descriv" );
	deepEqual( Stem("descriveva"), "descriv" );
	deepEqual( Stem("descrizion"), "descrizion" );
	deepEqual( Stem("descrizione"), "descrizion" );
	deepEqual( Stem("descrizioni"), "descrizion" );
	deepEqual( Stem("deserta"), "desert" );
	deepEqual( Stem("deserte"), "desert" );
	deepEqual( Stem("deserti"), "des" );
	deepEqual( Stem("deserto"), "desert" );
	deepEqual( Stem("desfosses"), "desfosses" );
	deepEqual( Stem("desidera"), "desider" );
	deepEqual( Stem("desiderabile"), "desider" );
	deepEqual( Stem("desideran"), "desideran" );
	deepEqual( Stem("desiderar"), "desider" );
	deepEqual( Stem("desiderare"), "desider" );
	deepEqual( Stem("desiderarla"), "desider" );
	deepEqual( Stem("desiderarlo"), "desider" );
	deepEqual( Stem("desiderarsi"), "desider" );
	deepEqual( Stem("desiderasse"), "desider" );
	deepEqual( Stem("desiderata"), "desider" );
	deepEqual( Stem("desiderate"), "desider" );
	deepEqual( Stem("desiderati"), "desider" );
	deepEqual( Stem("desideratissimo"), "desideratissim" );
	deepEqual( Stem("desiderato"), "desider" );
	deepEqual( Stem("desiderava"), "desider" );
	deepEqual( Stem("desideravamo"), "desider" );
	deepEqual( Stem("desidererete"), "desider" );
	deepEqual( Stem("desideri"), "desider" );
	deepEqual( Stem("desidèri"), "desidèr" );
	deepEqual( Stem("desideriamo"), "desider" );
	deepEqual( Stem("desideriate"), "desider" );
	deepEqual( Stem("desiderio"), "desider" );
	deepEqual( Stem("desidero"), "desider" );
	deepEqual( Stem("desiderò"), "desid" );
	deepEqual( Stem("desiderosa"), "desider" );
	deepEqual( Stem("desideroso"), "desider" );
	deepEqual( Stem("designati"), "design" );
	deepEqual( Stem("designato"), "design" );
	deepEqual( Stem("designazioni"), "design" );
	deepEqual( Stem("desinando"), "desin" );
	deepEqual( Stem("desinare"), "desin" );
	deepEqual( Stem("desinarono"), "desin" );
	deepEqual( Stem("desinato"), "desin" );
	deepEqual( Stem("desinava"), "desin" );
	deepEqual( Stem("desinò"), "desin" );
	deepEqual( Stem("desolata"), "desol" );
	deepEqual( Stem("desolate"), "desol" );
	deepEqual( Stem("desolati"), "desol" );
	deepEqual( Stem("desolato"), "desol" );
	deepEqual( Stem("desolazione"), "desol" );
	deepEqual( Stem("despeinada"), "despeinad" );
	deepEqual( Stem("desse"), "dess" );
	deepEqual( Stem("dessero"), "desser" );
	deepEqual( Stem("desta"), "dest" );
	deepEqual( Stem("destare"), "dest" );
	deepEqual( Stem("destarsi"), "dest" );
	deepEqual( Stem("destasse"), "dest" );
	deepEqual( Stem("destava"), "dest" );
	deepEqual( Stem("destavano"), "dest" );
	deepEqual( Stem("desti"), "dest" );
	deepEqual( Stem("destinando"), "destin" );
	deepEqual( Stem("destinano"), "destin" );
	deepEqual( Stem("destinare"), "destin" );
	deepEqual( Stem("destinata"), "destin" );
	deepEqual( Stem("destinatari"), "destinatar" );
	deepEqual( Stem("destinate"), "destin" );
	deepEqual( Stem("destinati"), "destin" );
	deepEqual( Stem("destinato"), "destin" );
	deepEqual( Stem("destinazione"), "destin" );
	deepEqual( Stem("destini"), "destin" );
	deepEqual( Stem("destino"), "destin" );
	deepEqual( Stem("destituito"), "destitu" );
	deepEqual( Stem("desto"), "dest" );
	deepEqual( Stem("destò"), "dest" );
	deepEqual( Stem("destra"), "destr" );
	deepEqual( Stem("destramente"), "destr" );
	deepEqual( Stem("destre"), "destr" );
	deepEqual( Stem("destrezza"), "destrezz" );
	deepEqual( Stem("destri"), "destr" );
	deepEqual( Stem("destro"), "destr" );
	deepEqual( Stem("detective"), "detect" );
	deepEqual( Stem("detenere"), "deten" );
	deepEqual( Stem("deteneva"), "deten" );
	deepEqual( Stem("deteniamo"), "deten" );
	deepEqual( Stem("detentore"), "detentor" );
	deepEqual( Stem("detenuta"), "deten" );
	deepEqual( Stem("detenute"), "deten" );
	deepEqual( Stem("detenuti"), "deten" );
	deepEqual( Stem("detenuto"), "deten" );
	deepEqual( Stem("detenzione"), "detenzion" );
	deepEqual( Stem("deterioramento"), "deterior" );
	deepEqual( Stem("determianre"), "determianr" );
	deepEqual( Stem("determina"), "determin" );
	deepEqual( Stem("determinante"), "determin" );
	deepEqual( Stem("determinanti"), "determin" );
	deepEqual( Stem("determinare"), "determin" );
	deepEqual( Stem("determinata"), "determin" );
	deepEqual( Stem("determinate"), "determin" );
	deepEqual( Stem("determinati"), "determin" );
	deepEqual( Stem("determinato"), "determin" );
	deepEqual( Stem("determinazione"), "determin" );
	deepEqual( Stem("determinerà"), "determin" );
	deepEqual( Stem("determini"), "determin" );
	deepEqual( Stem("detersivo"), "deters" );
	deepEqual( Stem("detestabile"), "detest" );
	deepEqual( Stem("detestare"), "detest" );
	deepEqual( Stem("detestino"), "detestin" );
	deepEqual( Stem("detiene"), "detien" );
	deepEqual( Stem("detonatori"), "deton" );
	deepEqual( Stem("detta"), "dett" );
	deepEqual( Stem("dettagli"), "dettagl" );
	deepEqual( Stem("dettagliate"), "dettagl" );
	deepEqual( Stem("dettagliato"), "dettagl" );
	deepEqual( Stem("dettaglio"), "dettagl" );
	deepEqual( Stem("dettando"), "dett" );
	deepEqual( Stem("dettata"), "dett" );
	deepEqual( Stem("dettate"), "dett" );
	deepEqual( Stem("dette"), "dett" );
	deepEqual( Stem("detti"), "dett" );
	deepEqual( Stem("detto"), "dett" );
	deepEqual( Stem("dettò"), "dett" );
	deepEqual( Stem("dettogli"), "dettogl" );
	deepEqual( Stem("dettolo"), "dettol" );
	deepEqual( Stem("deutsche"), "deutsc" );
	deepEqual( Stem("dev"), "dev" );
	deepEqual( Stem("deva"), "dev" );
	deepEqual( Stem("devan"), "devan" );
	deepEqual( Stem("devastano"), "devast" );
	deepEqual( Stem("devastante"), "devast" );
	deepEqual( Stem("devastato"), "devast" );
	deepEqual( Stem("devastazion"), "devastazion" );
	deepEqual( Stem("deve"), "dev" );
	deepEqual( Stem("devi"), "dev" );
	deepEqual( Stem("deviare"), "dev" );
	deepEqual( Stem("deviata"), "dev" );
	deepEqual( Stem("deviato"), "dev" );
	deepEqual( Stem("deviazione"), "deviazion" );
	deepEqual( Stem("devils"), "devils" );
	deepEqual( Stem("devo"), "dev" );
	deepEqual( Stem("devon"), "devon" );
	deepEqual( Stem("devono"), "dev" );
	deepEqual( Stem("devozione"), "devozion" );
	deepEqual( Stem("dexterae"), "dextera" );
	deepEqual( Stem("df"), "df" );
	deepEqual( Stem("dg"), "dg" );
	deepEqual( Stem("dges"), "dges" );
	deepEqual( Stem("dgl"), "dgl" );
	deepEqual( Stem("dhahran"), "dhahran" );
	deepEqual( Stem("dhaka"), "dhak" );
	deepEqual( Stem("dhzuna"), "dhzun" );
	deepEqual( Stem("di"), "di" );
	deepEqual( Stem("dì"), "dì" );
	deepEqual( Stem("dia"), "dia" );
	deepEqual( Stem("diabetici"), "diabet" );
	deepEqual( Stem("diabolica"), "diabol" );
	deepEqual( Stem("diaboliche"), "diabol" );
	deepEqual( Stem("diabolici"), "diabol" );
	deepEqual( Stem("diafano"), "diaf" );
	deepEqual( Stem("diagnosticata"), "diagnostic" );
	deepEqual( Stem("diagonale"), "diagonal" );
	deepEqual( Stem("diahann"), "diahann" );
	deepEqual( Stem("dialetto"), "dialett" );
	deepEqual( Stem("dializzati"), "dializz" );
	deepEqual( Stem("dialogare"), "dialog" );
	deepEqual( Stem("dialogo"), "dialog" );
	deepEqual( Stem("diametro"), "diametr" );
	deepEqual( Stem("diamine"), "diamin" );
	deepEqual( Stem("diamo"), "diam" );
	deepEqual( Stem("diamogli"), "diamogl" );
	deepEqual( Stem("diana"), "dian" );
	deepEqual( Stem("diane"), "dian" );
	deepEqual( Stem("diano"), "dian" );
	deepEqual( Stem("diari"), "diar" );
	deepEqual( Stem("diatribe"), "diatrib" );
	deepEqual( Stem("diavoleria"), "diavoler" );
	deepEqual( Stem("diavolerie"), "diavoler" );
	deepEqual( Stem("diavoletto"), "diavolett" );
	deepEqual( Stem("diavoli"), "diavol" );
	deepEqual( Stem("diavolo"), "diavol" );
	deepEqual( Stem("dibattano"), "dibatt" );
	deepEqual( Stem("dibatte"), "dibatt" );
	deepEqual( Stem("dibattendo"), "dibatt" );
	deepEqual( Stem("dibattendosi"), "dibatt" );
	deepEqual( Stem("dibatterà"), "dibatt" );
	deepEqual( Stem("dibattere"), "dibatt" );
	deepEqual( Stem("dibattersi"), "dibatt" );
	deepEqual( Stem("dibatteva"), "dibatt" );
	deepEqual( Stem("dibattimentale"), "dibattimental" );
	deepEqual( Stem("dibattimento"), "dibatt" );
	deepEqual( Stem("dibattito"), "dibatt" );
	deepEqual( Stem("dibattuta"), "dibatt" );
	deepEqual( Stem("dic"), "dic" );
	deepEqual( Stem("dica"), "dic" );
	deepEqual( Stem("dican"), "dican" );
	deepEqual( Stem("dicano"), "dic" );
	deepEqual( Stem("dicara"), "dicar" );
	deepEqual( Stem("dicastero"), "dicaster" );
	deepEqual( Stem("dice"), "dic" );
	deepEqual( Stem("dicembre"), "dicembr" );
	deepEqual( Stem("dicendo"), "dic" );
	deepEqual( Stem("dicendogli"), "dic" );
	deepEqual( Stem("dicendole"), "dic" );
	deepEqual( Stem("dicendolo"), "dic" );
	deepEqual( Stem("dicesse"), "dicess" );
	deepEqual( Stem("dicessero"), "dic" );
	deepEqual( Stem("dicessi"), "dicess" );
	deepEqual( Stem("diceste"), "dicest" );
	deepEqual( Stem("diceua"), "diceu" );
	deepEqual( Stem("diceva"), "dic" );
	deepEqual( Stem("dicevan"), "dicevan" );
	deepEqual( Stem("dicevano"), "dic" );
	deepEqual( Stem("dicevate"), "dic" );
	deepEqual( Stem("dicevo"), "dic" );
	deepEqual( Stem("dichairata"), "dichair" );
	deepEqual( Stem("dichiara"), "dichiar" );
	deepEqual( Stem("dichiarando"), "dichiar" );
	deepEqual( Stem("dichiarare"), "dichiar" );
	deepEqual( Stem("dichiararsi"), "dichiar" );
	deepEqual( Stem("dichiarasse"), "dichiar" );
	deepEqual( Stem("dichiarata"), "dichiar" );
	deepEqual( Stem("dichiarate"), "dichiar" );
	deepEqual( Stem("dichiarati"), "dichiar" );
	deepEqual( Stem("dichiarato"), "dichiar" );
	deepEqual( Stem("dichiarava"), "dichiar" );
	deepEqual( Stem("dichiarazione"), "dichiar" );
	deepEqual( Stem("dichiarazioni"), "dichiar" );
	deepEqual( Stem("dichiari"), "dichiar" );
	deepEqual( Stem("dichiaro"), "dichiar" );
	deepEqual( Stem("dichiarò"), "dichiar" );
	deepEqual( Stem("dichiazioni"), "dichiazion" );
	deepEqual( Stem("dici"), "dic" );
	deepEqual( Stem("diciam"), "diciam" );
	deepEqual( Stem("diciamo"), "dic" );
	deepEqual( Stem("diciamolo"), "diciamol" );
	deepEqual( Stem("diciannovenne"), "diciannovenn" );
	deepEqual( Stem("diciassettenne"), "diciassettenn" );
	deepEqual( Stem("diciottenne"), "diciottenn" );
	deepEqual( Stem("diciotto"), "diciott" );
	deepEqual( Stem("dicitore"), "dicitor" );
	deepEqual( Stem("dicitura"), "dicitur" );
	deepEqual( Stem("dico"), "dic" );
	deepEqual( Stem("dicon"), "dicon" );
	deepEqual( Stem("dicono"), "dic" );
	deepEqual( Stem("dicotomia"), "dicotom" );
	deepEqual( Stem("didier"), "didier" );
	deepEqual( Stem("die"), "die" );
	deepEqual( Stem("dié"), "diè" );
	deepEqual( Stem("dieci"), "diec" );
	deepEqual( Stem("diecimila"), "diecimil" );
	deepEqual( Stem("diede"), "died" );
	deepEqual( Stem("diedero"), "dieder" );
	deepEqual( Stem("diego"), "dieg" );
	deepEqual( Stem("dieta"), "diet" );
	deepEqual( Stem("dieter"), "dieter" );
	deepEqual( Stem("dietologi"), "dietolog" );
	deepEqual( Stem("dietologo"), "dietolog" );
	deepEqual( Stem("dietro"), "dietr" );
	deepEqual( Stem("dietrologie"), "dietrolog" );
	deepEqual( Stem("difatti"), "difatt" );
	deepEqual( Stem("difendano"), "difend" );
	deepEqual( Stem("difende"), "dif" );
	deepEqual( Stem("difendendo"), "difend" );
	deepEqual( Stem("difenderanno"), "difend" );
	deepEqual( Stem("difendere"), "difend" );
	deepEqual( Stem("difenderla"), "difend" );
	deepEqual( Stem("difenderle"), "difend" );
	deepEqual( Stem("difenderlo"), "difend" );
	deepEqual( Stem("difendermi"), "difend" );
	deepEqual( Stem("difendersi"), "difend" );
	deepEqual( Stem("difendeva"), "difend" );
	deepEqual( Stem("difendono"), "difend" );
	deepEqual( Stem("difensiva"), "difens" );
	deepEqual( Stem("difensive"), "difens" );
	deepEqual( Stem("difensivo"), "difens" );
	deepEqual( Stem("difensore"), "difensor" );
	deepEqual( Stem("difensori"), "difensor" );
	deepEqual( Stem("difesa"), "difes" );
	deepEqual( Stem("difese"), "difes" );
	deepEqual( Stem("difesi"), "difes" );
	deepEqual( Stem("difeso"), "difes" );
	deepEqual( Stem("difetta"), "difett" );
	deepEqual( Stem("difetti"), "difett" );
	deepEqual( Stem("difetto"), "difett" );
	deepEqual( Stem("difettosi"), "difett" );
	deepEqual( Stem("difettucci"), "difettucc" );
	deepEqual( Stem("diffamato"), "diffam" );
	deepEqual( Stem("diffamazione"), "diffam" );
	deepEqual( Stem("differenti"), "different" );
	deepEqual( Stem("differenza"), "different" );
	deepEqual( Stem("differenze"), "different" );
	deepEqual( Stem("differenzia"), "differenz" );
	deepEqual( Stem("differenziale"), "differenzial" );
	deepEqual( Stem("differenziate"), "differenz" );
	deepEqual( Stem("differenziato"), "differenz" );
	deepEqual( Stem("differenziazione"), "differenz" );
	deepEqual( Stem("differire"), "differ" );
	deepEqual( Stem("differiscono"), "differ" );
	deepEqual( Stem("differito"), "differ" );
	deepEqual( Stem("difficile"), "difficil" );
	deepEqual( Stem("difficili"), "difficil" );
	deepEqual( Stem("difficilmente"), "difficil" );
	deepEqual( Stem("difficolta"), "difficolt" );
	deepEqual( Stem("difficoltà"), "difficolt" );
	deepEqual( Stem("difficoltoso"), "difficolt" );
	deepEqual( Stem("diffidare"), "diffid" );
	deepEqual( Stem("diffidati"), "diffid" );
	deepEqual( Stem("diffide"), "diffid" );
	deepEqual( Stem("diffidenti"), "diffident" );
	deepEqual( Stem("diffidenza"), "diffident" );
	deepEqual( Stem("diffinisce"), "diffin" );
	deepEqual( Stem("diffonde"), "diffond" );
	deepEqual( Stem("diffondere"), "diffond" );
	deepEqual( Stem("diffondersi"), "diffond" );
	deepEqual( Stem("diffondeva"), "diffond" );
	deepEqual( Stem("diffusa"), "diffus" );
	deepEqual( Stem("diffuse"), "diffus" );
	deepEqual( Stem("diffusi"), "diffus" );
	deepEqual( Stem("diffusione"), "diffusion" );
	deepEqual( Stem("diffuso"), "diffus" );
	deepEqual( Stem("difronte"), "difront" );
	deepEqual( Stem("dig"), "dig" );
	deepEqual( Stem("diga"), "dig" );
	deepEqual( Stem("digestione"), "digestion" );
	deepEqual( Stem("diggiuna"), "diggiun" );
	deepEqual( Stem("diggy"), "diggy" );
	deepEqual( Stem("digitale"), "digital" );
	deepEqual( Stem("digiuno"), "digiun" );
	deepEqual( Stem("digli"), "digl" );
	deepEqual( Stem("dignità"), "dignit" );
	deepEqual( Stem("dignitari"), "dignitar" );
	deepEqual( Stem("dignitoso"), "dignit" );
	deepEqual( Stem("digo"), "dig" );
	deepEqual( Stem("digos"), "digos" );
	deepEqual( Stem("digrignando"), "digrign" );
	deepEqual( Stem("digrignar"), "digrign" );
	deepEqual( Stem("diht"), "diht" );
	deepEqual( Stem("diktat"), "diktat" );
	deepEqual( Stem("dil"), "dil" );
	deepEqual( Stem("dilaniata"), "dilan" );
	deepEqual( Stem("dilata"), "dil" );
	deepEqual( Stem("dilatandovisi"), "dilatandovis" );
	deepEqual( Stem("dilatato"), "dilat" );
	deepEqual( Stem("dilavate"), "dil" );
	deepEqual( Stem("dilavato"), "dilav" );
	deepEqual( Stem("dilazione"), "dilazion" );
	deepEqual( Stem("dilazioni"), "dilazion" );
	deepEqual( Stem("dileguando"), "dilegu" );
	deepEqual( Stem("dileguandosi"), "dilegu" );
	deepEqual( Stem("dileguata"), "dilegu" );
	deepEqual( Stem("dileguate"), "dilegu" );
	deepEqual( Stem("dileguati"), "dilegu" );
	deepEqual( Stem("dileguavano"), "dilegu" );
	deepEqual( Stem("dilemma"), "dilemm" );
	deepEqual( Stem("diletta"), "dilett" );
	deepEqual( Stem("dilettante"), "dilett" );
	deepEqual( Stem("dilettanti"), "dilett" );
	deepEqual( Stem("dilettava"), "dilett" );
	deepEqual( Stem("dilettevole"), "dilettevol" );
	deepEqual( Stem("diligente"), "diligent" );
	deepEqual( Stem("diligentemente"), "diligent" );
	deepEqual( Stem("diligenter"), "diligenter" );
	deepEqual( Stem("diligentia"), "diligent" );
	deepEqual( Stem("diligentissimamente"), "diligentissim" );
	deepEqual( Stem("diligenza"), "diligent" );
	deepEqual( Stem("diligenze"), "diligent" );
	deepEqual( Stem("dille"), "dill" );
	deepEqual( Stem("dilucidare"), "dilucid" );
	deepEqual( Stem("diluire"), "dilu" );
	deepEqual( Stem("diluviavano"), "diluv" );
	deepEqual( Stem("diluvio"), "diluv" );
	deepEqual( Stem("dimagrante"), "dimagr" );
	deepEqual( Stem("dimenando"), "dimen" );
	deepEqual( Stem("dimenare"), "dimen" );
	deepEqual( Stem("dimenarsi"), "dimen" );
	deepEqual( Stem("dimenasse"), "dimen" );
	deepEqual( Stem("dimenava"), "dimen" );
	deepEqual( Stem("dimenò"), "dimen" );
	deepEqual( Stem("dimensione"), "dimension" );
	deepEqual( Stem("dimensioni"), "dimension" );
	deepEqual( Stem("dimentica"), "diment" );
	deepEqual( Stem("dimenticando"), "dimentic" );
	deepEqual( Stem("dimenticanza"), "dimentic" );
	deepEqual( Stem("dimenticare"), "dimentic" );
	deepEqual( Stem("dimenticarla"), "dimentic" );
	deepEqual( Stem("dimenticarli"), "dimentic" );
	deepEqual( Stem("dimenticarmi"), "dimentic" );
	deepEqual( Stem("dimenticarsi"), "dimentic" );
	deepEqual( Stem("dimenticarvi"), "dimentic" );
	deepEqual( Stem("dimenticasse"), "dimentic" );
	deepEqual( Stem("dimenticata"), "dimentic" );
	deepEqual( Stem("dimenticate"), "dimentic" );
	deepEqual( Stem("dimenticatevi"), "dimenticat" );
	deepEqual( Stem("dimenticati"), "dimentic" );
	deepEqual( Stem("dimenticato"), "dimentic" );
	deepEqual( Stem("dimenticava"), "dimentic" );
	deepEqual( Stem("dimenticavo"), "dimentic" );
	deepEqual( Stem("dimenticherebbe"), "dimentic" );
	deepEqual( Stem("dimentichi"), "diment" );
	deepEqual( Stem("dimentichiamo"), "dimentic" );
	deepEqual( Stem("dimenticò"), "dimentic" );
	deepEqual( Stem("dimessa"), "dimess" );
	deepEqual( Stem("dimesso"), "dimess" );
	deepEqual( Stem("dimestichezza"), "dimestichezz" );
	deepEqual( Stem("dimette"), "dimett" );
	deepEqual( Stem("dimettendosi"), "dimett" );
	deepEqual( Stem("dimetterà"), "dimett" );
	deepEqual( Stem("dimettersi"), "dimett" );
	deepEqual( Stem("dimezzamento"), "dimezz" );
	deepEqual( Stem("dimezzato"), "dimezz" );
	deepEqual( Stem("diminuire"), "diminu" );
	deepEqual( Stem("diminuisce"), "diminu" );
	deepEqual( Stem("diminuissero"), "diminu" );
	deepEqual( Stem("diminuita"), "diminu" );
	deepEqual( Stem("diminuite"), "diminu" );
	deepEqual( Stem("diminuiti"), "diminu" );
	deepEqual( Stem("diminuivano"), "diminu" );
	deepEqual( Stem("diminuzione"), "diminu" );
	deepEqual( Stem("dimissionario"), "dimissionar" );
	deepEqual( Stem("dimissioni"), "dimission" );
	deepEqual( Stem("dimitri"), "dimitr" );
	deepEqual( Stem("dimmi"), "dimm" );
	deepEqual( Stem("dimodoche"), "dimodoc" );
	deepEqual( Stem("dimodoché"), "dimodoc" );
	deepEqual( Stem("dimora"), "dimor" );
	deepEqual( Stem("dimorar"), "dimor" );
	deepEqual( Stem("dimorare"), "dimor" );
	deepEqual( Stem("dimorato"), "dimor" );
	deepEqual( Stem("dimororno"), "dimororn" );
	deepEqual( Stem("dimostra"), "dimostr" );
	deepEqual( Stem("dimostran"), "dimostran" );
	deepEqual( Stem("dimostrando"), "dimostr" );
	deepEqual( Stem("dimostrano"), "dimostr" );
	deepEqual( Stem("dimostrar"), "dimostr" );
	deepEqual( Stem("dimostrare"), "dimostr" );
	deepEqual( Stem("dimostrargli"), "dimostr" );
	deepEqual( Stem("dimostrata"), "dimostr" );
	deepEqual( Stem("dimostrato"), "dimostr" );
	deepEqual( Stem("dimostrava"), "dimostr" );
	deepEqual( Stem("dimostrazione"), "dimostr" );
	deepEqual( Stem("dimostrazioni"), "dimostr" );
	deepEqual( Stem("dimostrino"), "dimostrin" );
	deepEqual( Stem("dimostrò"), "dimostr" );
	deepEqual( Stem("din"), "din" );
	deepEqual( Stem("dina"), "din" );
	deepEqual( Stem("dinacci"), "dinacc" );
	deepEqual( Stem("dinamica"), "dinam" );
	deepEqual( Stem("dinamiche"), "dinam" );
	deepEqual( Stem("dinamico"), "dinam" );
	deepEqual( Stem("dinamismo"), "dinam" );
	deepEqual( Stem("dinamitardo"), "dinamitard" );
	deepEqual( Stem("dinanzi"), "dinanz" );
	deepEqual( Stem("dinastia"), "dinast" );
	deepEqual( Stem("dinelli"), "dinell" );
	deepEqual( Stem("dini"), "din" );
	deepEqual( Stem("dinka"), "dink" );
	deepEqual( Stem("dinnanzi"), "dinnanz" );
	deepEqual( Stem("dino"), "din" );
	deepEqual( Stem("dintorni"), "dintorn" );
	deepEqual( Stem("dio"), "dio" );
	deepEqual( Stem("diocesane"), "diocesan" );
	deepEqual( Stem("diocesani"), "diocesan" );
	deepEqual( Stem("diocesi"), "dioces" );
	deepEqual( Stem("diogene"), "diogen" );
	deepEqual( Stem("dione"), "dion" );
	deepEqual( Stem("dionigi"), "dionig" );
	deepEqual( Stem("dios"), "dios" );
	deepEqual( Stem("dipaneranno"), "dipan" );
	deepEqual( Stem("dipartimenti"), "dipart" );
	deepEqual( Stem("dipartimento"), "dipart" );
	deepEqual( Stem("dipende"), "dip" );
	deepEqual( Stem("dipendente"), "dipendent" );
	deepEqual( Stem("dipendenti"), "dipendent" );
	deepEqual( Stem("dipendenza"), "dipendent" );
	deepEqual( Stem("dipendenze"), "dipendent" );
	deepEqual( Stem("dipenderà"), "dipend" );
	deepEqual( Stem("dipendere"), "dipend" );
	deepEqual( Stem("dipenderebbero"), "dipend" );
	deepEqual( Stem("dipendesse"), "dipendess" );
	deepEqual( Stem("dipendeva"), "dipend" );
	deepEqual( Stem("dipendevano"), "dipend" );
	deepEqual( Stem("dipendiamo"), "dipend" );
	deepEqual( Stem("dipinge"), "diping" );
	deepEqual( Stem("dipinger"), "dipinger" );
	deepEqual( Stem("dipingere"), "diping" );
	deepEqual( Stem("dipingerlo"), "diping" );
	deepEqual( Stem("dipingeva"), "diping" );
	deepEqual( Stem("dipingevan"), "dipingevan" );
	deepEqual( Stem("dipingono"), "diping" );
	deepEqual( Stem("dipinta"), "dipint" );
	deepEqual( Stem("dipintavi"), "dipint" );
	deepEqual( Stem("dipinte"), "dipint" );
	deepEqual( Stem("dipinto"), "dipint" );
	deepEqual( Stem("dipintogli"), "dipintogl" );
	deepEqual( Stem("diploma"), "diplom" );
	deepEqual( Stem("diplomatica"), "diplomat" );
	deepEqual( Stem("diplomatiche"), "diplomat" );
	deepEqual( Stem("diplomatici"), "diplomat" );
	deepEqual( Stem("diplomatico"), "diplomat" );
	deepEqual( Stem("diplomazia"), "diplomaz" );
	deepEqual( Stem("diplomazie"), "diplomaz" );
	deepEqual( Stem("diportista"), "diport" );
	deepEqual( Stem("diporto"), "diport" );
	deepEqual( Stem("dipresso"), "dipress" );
	deepEqual( Stem("dir"), "dir" );
	deepEqual( Stem("dirà"), "dir" );
	deepEqual( Stem("diradar"), "dirad" );
	deepEqual( Stem("diradata"), "dirad" );
	deepEqual( Stem("diramando"), "diram" );
	deepEqual( Stem("diramarsi"), "diram" );
	deepEqual( Stem("diramata"), "diram" );
	deepEqual( Stem("diramate"), "diram" );
	deepEqual( Stem("diramato"), "diram" );
	deepEqual( Stem("diranno"), "dirann" );
	deepEqual( Stem("dirci"), "dirc" );
	deepEqual( Stem("dire"), "dir" );
	deepEqual( Stem("direbbe"), "direbb" );
	deepEqual( Stem("direbbeciò"), "direbbec" );
	deepEqual( Stem("directa"), "direct" );
	deepEqual( Stem("director"), "director" );
	deepEqual( Stem("direi"), "dire" );
	deepEqual( Stem("diremo"), "direm" );
	deepEqual( Stem("direte"), "dir" );
	deepEqual( Stem("diretta"), "dirett" );
	deepEqual( Stem("direttamente"), "dirett" );
	deepEqual( Stem("direttaq"), "direttaq" );
	deepEqual( Stem("dirette"), "dirett" );
	deepEqual( Stem("diretti"), "dirett" );
	deepEqual( Stem("direttissima"), "direttissim" );
	deepEqual( Stem("direttiva"), "dirett" );
	deepEqual( Stem("direttive"), "dirett" );
	deepEqual( Stem("direttivo"), "dirett" );
	deepEqual( Stem("diretto"), "dirett" );
	deepEqual( Stem("direttore"), "direttor" );
	deepEqual( Stem("direttori"), "direttor" );
	deepEqual( Stem("direttrici"), "direttr" );
	deepEqual( Stem("direzione"), "direzion" );
	deepEqual( Stem("direzioni"), "direzion" );
	deepEqual( Stem("dirgli"), "dirgl" );
	deepEqual( Stem("diricciar"), "diricc" );
	deepEqual( Stem("dirige"), "dirig" );
	deepEqual( Stem("dirigente"), "dirigent" );
	deepEqual( Stem("dirigenti"), "dirigent" );
	deepEqual( Stem("dirigenza"), "dirigent" );
	deepEqual( Stem("dirigenziali"), "dirigenzial" );
	deepEqual( Stem("dirigere"), "dirig" );
	deepEqual( Stem("dirigerlo"), "dirig" );
	deepEqual( Stem("dirigeva"), "dirig" );
	deepEqual( Stem("dirigevano"), "dirig" );
	deepEqual( Stem("dirigista"), "dirig" );
	deepEqual( Stem("dirigistica"), "dirigist" );
	deepEqual( Stem("dirigono"), "dirig" );
	deepEqual( Stem("dirimenti"), "dir" );
	deepEqual( Stem("dirimpetto"), "dirimpett" );
	deepEqual( Stem("diritta"), "diritt" );
	deepEqual( Stem("diritte"), "diritt" );
	deepEqual( Stem("diritti"), "diritt" );
	deepEqual( Stem("diritto"), "diritt" );
	deepEqual( Stem("dirittona"), "diritton" );
	deepEqual( Stem("dirittone"), "diritton" );
	deepEqual( Stem("dirizza"), "dirizz" );
	deepEqual( Stem("dirizzando"), "dirizz" );
	deepEqual( Stem("dirizzatura"), "dirizzatur" );
	deepEqual( Stem("dirla"), "dirl" );
	deepEqual( Stem("dirle"), "dirl" );
	deepEqual( Stem("dirlo"), "dirl" );
	deepEqual( Stem("dirmela"), "dirmel" );
	deepEqual( Stem("dirmele"), "dirmel" );
	deepEqual( Stem("dirmi"), "dirm" );
	deepEqual( Stem("dirne"), "dirn" );
	deepEqual( Stem("dirò"), "dir" );
	deepEqual( Stem("diroccata"), "dirocc" );
	deepEqual( Stem("diroccato"), "dirocc" );
	deepEqual( Stem("diroccavano"), "dirocc" );
	deepEqual( Stem("dirottamente"), "dirott" );
	deepEqual( Stem("dirotto"), "dirott" );
	deepEqual( Stem("dirsi"), "dirs" );
	deepEqual( Stem("dirtela"), "dirtel" );
	deepEqual( Stem("dirti"), "dirt" );
	deepEqual( Stem("dirupi"), "dirup" );
	deepEqual( Stem("dirupo"), "dirup" );
	deepEqual( Stem("dirvelo"), "dirvel" );
	deepEqual( Stem("dirvene"), "dirven" );
	deepEqual( Stem("dirvi"), "dirv" );
	deepEqual( Stem("disabbelliscono"), "disabbell" );
	deepEqual( Stem("disabitata"), "disabit" );
	deepEqual( Stem("disabitate"), "disabit" );
	deepEqual( Stem("disabitato"), "disabit" );
	deepEqual( Stem("disaccordo"), "disaccord" );
	deepEqual( Stem("disaggregare"), "disaggreg" );
	deepEqual( Stem("disagi"), "disag" );
	deepEqual( Stem("disagiata"), "disag" );
	deepEqual( Stem("disagiati"), "disag" );
	deepEqual( Stem("disagio"), "disag" );
	deepEqual( Stem("disanimati"), "disanim" );
	deepEqual( Stem("disanimato"), "disanim" );
	deepEqual( Stem("disapprovare"), "disapprov" );
	deepEqual( Stem("disapprovazione"), "disapprov" );
	deepEqual( Stem("disappunto"), "disappunt" );
	deepEqual( Stem("disarcionato"), "disarcion" );
	deepEqual( Stem("disarma"), "disarm" );
	deepEqual( Stem("disarmare"), "disarm" );
	deepEqual( Stem("disarmata"), "disarm" );
	deepEqual( Stem("disarmate"), "disarm" );
	deepEqual( Stem("disarmato"), "disarm" );
	deepEqual( Stem("disarmonia"), "disarmon" );
	deepEqual( Stem("disastro"), "disastr" );
	deepEqual( Stem("disastrosa"), "disastr" );
	deepEqual( Stem("disastrosi"), "disastr" );
	deepEqual( Stem("disastroso"), "disastr" );
	deepEqual( Stem("disattenta"), "disattent" );
	deepEqual( Stem("disattento"), "disattent" );
	deepEqual( Stem("disattivando"), "disattiv" );
	deepEqual( Stem("disavanzi"), "disavanz" );
	deepEqual( Stem("disavventura"), "disavventur" );
	deepEqual( Stem("discacciar"), "discacc" );
	deepEqual( Stem("discacciarle"), "discacc" );
	deepEqual( Stem("discacciarlo"), "discacc" );
	deepEqual( Stem("discariche"), "discar" );
	deepEqual( Stem("discende"), "disc" );
	deepEqual( Stem("discerna"), "discern" );
	deepEqual( Stem("discesa"), "disces" );
	deepEqual( Stem("discesero"), "disceser" );
	deepEqual( Stem("discettando"), "discett" );
	deepEqual( Stem("dischetto"), "dischett" );
	deepEqual( Stem("disciolto"), "disciolt" );
	deepEqual( Stem("disciplina"), "disciplin" );
	deepEqual( Stem("disciplinare"), "disciplin" );
	deepEqual( Stem("disciplinari"), "disciplinar" );
	deepEqual( Stem("disco"), "disc" );
	deepEqual( Stem("discografici"), "discograf" );
	deepEqual( Stem("discordanti"), "discord" );
	deepEqual( Stem("discordi"), "discord" );
	deepEqual( Stem("discordie"), "discord" );
	deepEqual( Stem("discorre"), "discorr" );
	deepEqual( Stem("discorrendo"), "discorr" );
	deepEqual( Stem("discorrere"), "discorr" );
	deepEqual( Stem("discorreremo"), "discorr" );
	deepEqual( Stem("discorrerne"), "discorr" );
	deepEqual( Stem("discorrerti"), "discorr" );
	deepEqual( Stem("discorreva"), "discorr" );
	deepEqual( Stem("discorrevan"), "discorrevan" );
	deepEqual( Stem("discorrevo"), "discorr" );
	deepEqual( Stem("discorsi"), "discors" );
	deepEqual( Stem("discorso"), "discors" );
	deepEqual( Stem("discoste"), "discost" );
	deepEqual( Stem("discosto"), "discost" );
	deepEqual( Stem("discostò"), "discost" );
	deepEqual( Stem("discovery"), "discovery" );
	deepEqual( Stem("discreta"), "discret" );
	deepEqual( Stem("discrete"), "discr" );
	deepEqual( Stem("discreti"), "discret" );
	deepEqual( Stem("discreto"), "discret" );
	deepEqual( Stem("discrezion"), "discrezion" );
	deepEqual( Stem("discrezione"), "discrezion" );
	deepEqual( Stem("discriminata"), "discrimin" );
	deepEqual( Stem("discriminato"), "discrimin" );
	deepEqual( Stem("discriminazione"), "discrimin" );
	deepEqual( Stem("discriminazioni"), "discrimin" );
	deepEqual( Stem("discuetrà"), "discuetr" );
	deepEqual( Stem("discussa"), "discuss" );
	deepEqual( Stem("discusse"), "discuss" );
	deepEqual( Stem("discussi"), "discuss" );
	deepEqual( Stem("discussione"), "discussion" );
	deepEqual( Stem("discussioni"), "discussion" );
	deepEqual( Stem("discusso"), "discuss" );
	deepEqual( Stem("discute"), "disc" );
	deepEqual( Stem("discutendo"), "discut" );
	deepEqual( Stem("discuter"), "discuter" );
	deepEqual( Stem("discuterà"), "discut" );
	deepEqual( Stem("discuteranno"), "discut" );
	deepEqual( Stem("discutere"), "discut" );
	deepEqual( Stem("discutibile"), "discut" );
	deepEqual( Stem("disdirebbero"), "disd" );
	deepEqual( Stem("disdirsi"), "disd" );
	deepEqual( Stem("disegna"), "disegn" );
	deepEqual( Stem("disegnare"), "disegn" );
	deepEqual( Stem("disegnarè"), "disegnar" );
	deepEqual( Stem("disegnata"), "disegn" );
	deepEqual( Stem("disegnato"), "disegn" );
	deepEqual( Stem("disegnava"), "disegn" );
	deepEqual( Stem("disegni"), "disegn" );
	deepEqual( Stem("disegno"), "disegn" );
	deepEqual( Stem("disegnò"), "disegn" );
	deepEqual( Stem("disequilibrata"), "disequilibr" );
	deepEqual( Stem("diserta"), "disert" );
	deepEqual( Stem("disfaceva"), "disfac" );
	deepEqual( Stem("disfar"), "disf" );
	deepEqual( Stem("disfare"), "disf" );
	deepEqual( Stem("disfarsi"), "disf" );
	deepEqual( Stem("disfatta"), "disfatt" );
	deepEqual( Stem("disfatte"), "disfatt" );
	deepEqual( Stem("disfatto"), "disfatt" );
	deepEqual( Stem("disgiunte"), "disgiunt" );
	deepEqual( Stem("disgrazia"), "disgraz" );
	deepEqual( Stem("disgraziati"), "disgraz" );
	deepEqual( Stem("disgraziato"), "disgraz" );
	deepEqual( Stem("disgrazie"), "disgraz" );
	deepEqual( Stem("disgreganti"), "disgreg" );
	deepEqual( Stem("disgregare"), "disgreg" );
	deepEqual( Stem("disgustati"), "disgust" );
	deepEqual( Stem("disgustato"), "disgust" );
	deepEqual( Stem("disgusti"), "disgust" );
	deepEqual( Stem("disgusto"), "disgust" );
	deepEqual( Stem("disgustosa"), "disgust" );
	deepEqual( Stem("disgustoso"), "disgust" );
	deepEqual( Stem("disillusione"), "disillu" );
	deepEqual( Stem("disimbrogliato"), "disimbrogl" );
	deepEqual( Stem("disimpegnarsene"), "disimpegn" );
	deepEqual( Stem("disimpegni"), "disimpegn" );
	deepEqual( Stem("disimpegno"), "disimpegn" );
	deepEqual( Stem("disingannato"), "disingann" );
	deepEqual( Stem("disingannò"), "disingann" );
	deepEqual( Stem("disinquinamento"), "disinquin" );
	deepEqual( Stem("disinteressato"), "disinteress" );
	deepEqual( Stem("disinteresse"), "disinteress" );
	deepEqual( Stem("disinvolta"), "disinvolt" );
	deepEqual( Stem("disinvolti"), "disinvolt" );
	deepEqual( Stem("disinvolto"), "disinvolt" );
	deepEqual( Stem("disinvoltura"), "disinvoltur" );
	deepEqual( Stem("dislocare"), "disloc" );
	deepEqual( Stem("dislocati"), "disloc" );
	deepEqual( Stem("dislocazione"), "disloc" );
	deepEqual( Stem("dismessa"), "dismess" );
	deepEqual( Stem("dismissione"), "dismission" );
	deepEqual( Stem("dismissioni"), "dismission" );
	deepEqual( Stem("disoccupato"), "disoccup" );
	deepEqual( Stem("disoccupazione"), "disoccup" );
	deepEqual( Stem("disonorare"), "disonor" );
	deepEqual( Stem("disordinare"), "disordin" );
	deepEqual( Stem("disordinata"), "disordin" );
	deepEqual( Stem("disordinati"), "disordin" );
	deepEqual( Stem("disordinato"), "disordin" );
	deepEqual( Stem("disordinava"), "disordin" );
	deepEqual( Stem("disordine"), "disordin" );
	deepEqual( Stem("disordini"), "disordin" );
	deepEqual( Stem("disorientamento"), "disorient" );
	deepEqual( Stem("disotterrare"), "disotterr" );
	deepEqual( Stem("dispacci"), "dispacc" );
	deepEqual( Stem("dispacciamento"), "dispacc" );
	deepEqual( Stem("dispaccio"), "dispacc" );
	deepEqual( Stem("disparati"), "dispar" );
	deepEqual( Stem("disparere"), "dispar" );
	deepEqual( Stem("disparità"), "dispar" );
	deepEqual( Stem("disparitas"), "disparitas" );
	deepEqual( Stem("disparte"), "dispart" );
	deepEqual( Stem("disparve"), "disparv" );
	deepEqual( Stem("dispendio"), "dispend" );
	deepEqual( Stem("dispensa"), "dispens" );
	deepEqual( Stem("dispensando"), "dispens" );
	deepEqual( Stem("dispensarvi"), "dispens" );
	deepEqual( Stem("dispensasse"), "dispens" );
	deepEqual( Stem("dispensati"), "dispens" );
	deepEqual( Stem("dispensatore"), "dispens" );
	deepEqual( Stem("dispensavano"), "dispens" );
	deepEqual( Stem("dispense"), "dispens" );
	deepEqual( Stem("dispensi"), "dispens" );
	deepEqual( Stem("disperando"), "disper" );
	deepEqual( Stem("disperata"), "disper" );
	deepEqual( Stem("disperatamente"), "disperat" );
	deepEqual( Stem("disperate"), "disper" );
	deepEqual( Stem("disperati"), "disper" );
	deepEqual( Stem("disperato"), "disper" );
	deepEqual( Stem("disperazione"), "disper" );
	deepEqual( Stem("disperdere"), "disperd" );
	deepEqual( Stem("disperdersi"), "disperd" );
	deepEqual( Stem("disperdesse"), "disperdess" );
	deepEqual( Stem("dispersa"), "dispers" );
	deepEqual( Stem("disperse"), "dispers" );
	deepEqual( Stem("dispersi"), "disp" );
	deepEqual( Stem("disperso"), "dispers" );
	deepEqual( Stem("dispetti"), "dispett" );
	deepEqual( Stem("dispetto"), "dispett" );
	deepEqual( Stem("dispettoso"), "dispett" );
	deepEqual( Stem("dispiaccia"), "dispiacc" );
	deepEqual( Stem("dispiace"), "dispiac" );
	deepEqual( Stem("dispiacerà"), "dispiac" );
	deepEqual( Stem("dispiacere"), "dispiac" );
	deepEqual( Stem("dispiacerebbe"), "dispiac" );
	deepEqual( Stem("dispiacergli"), "dispiac" );
	deepEqual( Stem("dispiaceri"), "dispiacer" );
	deepEqual( Stem("dispiacesse"), "dispiacess" );
	deepEqual( Stem("dispiaceva"), "dispiac" );
	deepEqual( Stem("dispiacevole"), "dispiacevol" );
	deepEqual( Stem("dispiaciuta"), "dispiac" );
	deepEqual( Stem("dispiaciuto"), "dispiac" );
	deepEqual( Stem("dispiacque"), "dispiacqu" );
	deepEqual( Stem("dispiegamenti"), "dispieg" );
	deepEqual( Stem("dispiegato"), "dispieg" );
	deepEqual( Stem("dispone"), "dispon" );
	deepEqual( Stem("disponendoli"), "dispon" );
	deepEqual( Stem("disponendosi"), "dispon" );
	deepEqual( Stem("disponesse"), "disponess" );
	deepEqual( Stem("disponeva"), "dispon" );
	deepEqual( Stem("disponga"), "dispong" );
	deepEqual( Stem("dispongono"), "dispong" );
	deepEqual( Stem("disponi"), "dispon" );
	deepEqual( Stem("disponibile"), "dispon" );
	deepEqual( Stem("disponibili"), "dispon" );
	deepEqual( Stem("disponibilità"), "disponibil" );
	deepEqual( Stem("disponible"), "disponibl" );
	deepEqual( Stem("disporle"), "disporl" );
	deepEqual( Stem("disporli"), "disporl" );
	deepEqual( Stem("disporrà"), "disporr" );
	deepEqual( Stem("disporre"), "disporr" );
	deepEqual( Stem("disporsi"), "dispors" );
	deepEqual( Stem("disporvi"), "disporv" );
	deepEqual( Stem("dispose"), "dispos" );
	deepEqual( Stem("disposero"), "disposer" );
	deepEqual( Stem("dispositivi"), "disposit" );
	deepEqual( Stem("dispositivo"), "disposit" );
	deepEqual( Stem("disposizion"), "disposizion" );
	deepEqual( Stem("disposizione"), "disposizion" );
	deepEqual( Stem("disposizioni"), "disposizion" );
	deepEqual( Stem("disposta"), "dispost" );
	deepEqual( Stem("disposte"), "dispost" );
	deepEqual( Stem("disposti"), "dispost" );
	deepEqual( Stem("dispostivo"), "dispost" );
	deepEqual( Stem("disposto"), "dispost" );
	deepEqual( Stem("disprezzato"), "disprezz" );
	deepEqual( Stem("disprezzo"), "disprezz" );
	deepEqual( Stem("disputa"), "disp" );
	deepEqual( Stem("disputassero"), "disput" );
	deepEqual( Stem("disputata"), "disput" );
	deepEqual( Stem("disputate"), "disput" );
	deepEqual( Stem("disputati"), "disput" );
	deepEqual( Stem("disputato"), "disput" );
	deepEqual( Stem("disputava"), "disput" );
	deepEqual( Stem("dispute"), "disp" );
	deepEqual( Stem("disputerà"), "disput" );
	deepEqual( Stem("disputeranno"), "disput" );
	deepEqual( Stem("disquisizioni"), "disquisizion" );
	deepEqual( Stem("dissapunto"), "dissapunt" );
	deepEqual( Stem("disse"), "diss" );
	deepEqual( Stem("disselciato"), "disselc" );
	deepEqual( Stem("disseminato"), "dissemin" );
	deepEqual( Stem("dissensi"), "dissens" );
	deepEqual( Stem("dissenso"), "dissens" );
	deepEqual( Stem("disseppellire"), "disseppell" );
	deepEqual( Stem("disser"), "disser" );
	deepEqual( Stem("dissero"), "disser" );
	deepEqual( Stem("dissertazioni"), "dissert" );
	deepEqual( Stem("dissestato"), "dissest" );
	deepEqual( Stem("dissesto"), "dissest" );
	deepEqual( Stem("dissi"), "diss" );
	deepEqual( Stem("dissidente"), "dissident" );
	deepEqual( Stem("dissidenti"), "dissident" );
	deepEqual( Stem("dissidenza"), "dissident" );
	deepEqual( Stem("dissidio"), "dissid" );
	deepEqual( Stem("dissimulando"), "dissimul" );
	deepEqual( Stem("dissimulare"), "dissimul" );
	deepEqual( Stem("dissimulata"), "dissimul" );
	deepEqual( Stem("dissimulate"), "dissimul" );
	deepEqual( Stem("dissimulazione"), "dissimul" );
	deepEqual( Stem("dissipare"), "dissip" );
	deepEqual( Stem("dissipata"), "dissip" );
	deepEqual( Stem("dissipato"), "dissip" );
	deepEqual( Stem("dissipò"), "dissip" );
	deepEqual( Stem("dissodava"), "dissod" );
	deepEqual( Stem("dissolvere"), "dissolv" );
	deepEqual( Stem("dissolverebbe"), "dissolv" );
	deepEqual( Stem("dissuaderlo"), "dissuad" );
	deepEqual( Stem("dista"), "dist" );
	deepEqual( Stem("distaccarsi"), "distacc" );
	deepEqual( Stem("distaccata"), "distacc" );
	deepEqual( Stem("distacchi"), "distacc" );
	deepEqual( Stem("distacco"), "distacc" );
	deepEqual( Stem("distante"), "distant" );
	deepEqual( Stem("distanti"), "distant" );
	deepEqual( Stem("distanza"), "distanz" );
	deepEqual( Stem("distanze"), "distanz" );
	deepEqual( Stem("distendere"), "distend" );
	deepEqual( Stem("distendersi"), "distend" );
	deepEqual( Stem("distesa"), "distes" );
	deepEqual( Stem("distesi"), "distes" );
	deepEqual( Stem("disteso"), "distes" );
	deepEqual( Stem("distillati"), "distill" );
	deepEqual( Stem("distingue"), "distingu" );
	deepEqual( Stem("distinguendosi"), "distingu" );
	deepEqual( Stem("distinguer"), "distinguer" );
	deepEqual( Stem("distinguere"), "distingu" );
	deepEqual( Stem("distingueva"), "distingu" );
	deepEqual( Stem("distinguevano"), "distingu" );
	deepEqual( Stem("distinguo"), "distingu" );
	deepEqual( Stem("distinse"), "distins" );
	deepEqual( Stem("distinta"), "distint" );
	deepEqual( Stem("distintamente"), "distint" );
	deepEqual( Stem("distinte"), "distint" );
	deepEqual( Stem("distinti"), "distint" );
	deepEqual( Stem("distintivi"), "distint" );
	deepEqual( Stem("distintivo"), "distint" );
	deepEqual( Stem("distinto"), "distint" );
	deepEqual( Stem("distinzion"), "distinzion" );
	deepEqual( Stem("distinzione"), "distinzion" );
	deepEqual( Stem("distinzioni"), "distinzion" );
	deepEqual( Stem("distizioni"), "distizion" );
	deepEqual( Stem("distorcono"), "distorc" );
	deepEqual( Stem("distorsione"), "distorsion" );
	deepEqual( Stem("distorsioni"), "distorsion" );
	deepEqual( Stem("distorta"), "distort" );
	deepEqual( Stem("distraendola"), "distr" );
	deepEqual( Stem("distrar"), "distr" );
	deepEqual( Stem("distrarre"), "distrarr" );
	deepEqual( Stem("distratta"), "distratt" );
	deepEqual( Stem("distratto"), "distratt" );
	deepEqual( Stem("distrazione"), "distrazion" );
	deepEqual( Stem("distrazioni"), "distrazion" );
	deepEqual( Stem("distretti"), "distrett" );
	deepEqual( Stem("distretto"), "distrett" );
	deepEqual( Stem("distrettuale"), "distrettual" );
	deepEqual( Stem("distribuì"), "distribu" );
	deepEqual( Stem("distribuirà"), "distribu" );
	deepEqual( Stem("distribuire"), "distribu" );
	deepEqual( Stem("distribuirle"), "distribu" );
	deepEqual( Stem("distribuirsi"), "distribu" );
	deepEqual( Stem("distribuisce"), "distribu" );
	deepEqual( Stem("distribuisse"), "distribuiss" );
	deepEqual( Stem("distribuita"), "distribu" );
	deepEqual( Stem("distribuite"), "distribu" );
	deepEqual( Stem("distribuiti"), "distribu" );
	deepEqual( Stem("distribuito"), "distribu" );
	deepEqual( Stem("distribuiva"), "distribu" );
	deepEqual( Stem("distribuivan"), "distribuivan" );
	deepEqual( Stem("distribuivano"), "distribu" );
	deepEqual( Stem("distributore"), "distributor" );
	deepEqual( Stem("distributori"), "distributor" );
	deepEqual( Stem("distributrici"), "distributr" );
	deepEqual( Stem("distribuzione"), "distribu" );
	deepEqual( Stem("distrigare"), "distrig" );
	deepEqual( Stem("distrigarsi"), "distrig" );
	deepEqual( Stem("distrugge"), "distrugg" );
	deepEqual( Stem("distrugger"), "distrugger" );
	deepEqual( Stem("distruggerà"), "distrugg" );
	deepEqual( Stem("distruggersi"), "distrugg" );
	deepEqual( Stem("distruggevano"), "distrugg" );
	deepEqual( Stem("distrusse"), "distruss" );
	deepEqual( Stem("distrutta"), "distrutt" );
	deepEqual( Stem("distrutti"), "distrutt" );
	deepEqual( Stem("distruttiva"), "distrutt" );
	deepEqual( Stem("distruttive"), "distrutt" );
	deepEqual( Stem("distrutto"), "distrutt" );
	deepEqual( Stem("distruzion"), "distruzion" );
	deepEqual( Stem("distruzione"), "distruzion" );
	deepEqual( Stem("disturbar"), "disturb" );
	deepEqual( Stem("disturbare"), "disturb" );
	deepEqual( Stem("disturbarla"), "disturb" );
	deepEqual( Stem("disturbarlo"), "disturb" );
	deepEqual( Stem("disturbata"), "disturb" );
	deepEqual( Stem("disturbate"), "disturb" );
	deepEqual( Stem("disturbato"), "disturb" );
	deepEqual( Stem("disturbo"), "disturb" );
	deepEqual( Stem("disubbidire"), "disubbid" );
	deepEqual( Stem("disuguale"), "disugual" );
	deepEqual( Stem("disuguali"), "disugual" );
	deepEqual( Stem("disumana"), "disuman" );
	deepEqual( Stem("disuso"), "disus" );
	deepEqual( Stem("disviare"), "disv" );
	deepEqual( Stem("dita"), "dit" );
	deepEqual( Stem("ditacci"), "ditacc" );
	deepEqual( Stem("dite"), "dit" );
	deepEqual( Stem("ditegli"), "ditegl" );
	deepEqual( Stem("ditele"), "ditel" );
	deepEqual( Stem("ditemelo"), "ditemel" );
	deepEqual( Stem("ditemi"), "ditem" );
	deepEqual( Stem("dito"), "dit" );
	deepEqual( Stem("ditta"), "ditt" );
	deepEqual( Stem("dittatore"), "dittator" );
	deepEqual( Stem("dittatori"), "dittator" );
	deepEqual( Stem("dittatura"), "dittatur" );
	deepEqual( Stem("ditte"), "ditt" );
	deepEqual( Stem("div"), "div" );
	deepEqual( Stem("diva"), "div" );
	deepEqual( Stem("divani"), "divan" );
	deepEqual( Stem("divaricate"), "divaric" );
	deepEqual( Stem("dive"), "div" );
	deepEqual( Stem("divelto"), "divelt" );
	deepEqual( Stem("divenendo"), "diven" );
	deepEqual( Stem("divenendogli"), "diven" );
	deepEqual( Stem("divengano"), "diveng" );
	deepEqual( Stem("divengon"), "divengon" );
	deepEqual( Stem("divenir"), "diven" );
	deepEqual( Stem("divenire"), "diven" );
	deepEqual( Stem("divenirgli"), "diven" );
	deepEqual( Stem("divenirlo"), "diven" );
	deepEqual( Stem("diveniva"), "diven" );
	deepEqual( Stem("divenivan"), "divenivan" );
	deepEqual( Stem("divenivano"), "diven" );
	deepEqual( Stem("divenne"), "divenn" );
	deepEqual( Stem("divennero"), "divenner" );
	deepEqual( Stem("diventa"), "divent" );
	deepEqual( Stem("diventando"), "divent" );
	deepEqual( Stem("diventano"), "divent" );
	deepEqual( Stem("diventar"), "divent" );
	deepEqual( Stem("diventare"), "divent" );
	deepEqual( Stem("diventarne"), "divent" );
	deepEqual( Stem("diventaron"), "diventaron" );
	deepEqual( Stem("diventata"), "divent" );
	deepEqual( Stem("diventate"), "divent" );
	deepEqual( Stem("diventati"), "divent" );
	deepEqual( Stem("diventato"), "divent" );
	deepEqual( Stem("diventava"), "divent" );
	deepEqual( Stem("diventavan"), "diventavan" );
	deepEqual( Stem("diventerà"), "divent" );
	deepEqual( Stem("diventeranno"), "divent" );
	deepEqual( Stem("diventi"), "divent" );
	deepEqual( Stem("diventiamo"), "divent" );
	deepEqual( Stem("diventin"), "diventin" );
	deepEqual( Stem("diventino"), "diventin" );
	deepEqual( Stem("diventò"), "divent" );
	deepEqual( Stem("divenuta"), "diven" );
	deepEqual( Stem("divenute"), "diven" );
	deepEqual( Stem("divenuti"), "diven" );
	deepEqual( Stem("divenuto"), "diven" );
	deepEqual( Stem("diverbio"), "diverb" );
	deepEqual( Stem("divergenti"), "divergent" );
	deepEqual( Stem("divergenze"), "divergent" );
	deepEqual( Stem("diversa"), "divers" );
	deepEqual( Stem("diversamente"), "divers" );
	deepEqual( Stem("diverse"), "divers" );
	deepEqual( Stem("diversi"), "div" );
	deepEqual( Stem("diversì"), "divers" );
	deepEqual( Stem("diversificata"), "diversific" );
	deepEqual( Stem("diversificazione"), "diversif" );
	deepEqual( Stem("diversione"), "diversion" );
	deepEqual( Stem("diversità"), "divers" );
	deepEqual( Stem("diverso"), "divers" );
	deepEqual( Stem("divertente"), "divertent" );
	deepEqual( Stem("divertenti"), "divertent" );
	deepEqual( Stem("divertimenti"), "divert" );
	deepEqual( Stem("divertimento"), "divert" );
	deepEqual( Stem("divertire"), "divert" );
	deepEqual( Stem("divertirti"), "divert" );
	deepEqual( Stem("divertiti"), "divert" );
	deepEqual( Stem("divertito"), "divert" );
	deepEqual( Stem("divertivano"), "divert" );
	deepEqual( Stem("diverto"), "divert" );
	deepEqual( Stem("divertono"), "divert" );
	deepEqual( Stem("divezzarlo"), "divezz" );
	deepEqual( Stem("divezzarsene"), "divezz" );
	deepEqual( Stem("divezzati"), "divezz" );
	deepEqual( Stem("diviato"), "div" );
	deepEqual( Stem("divide"), "divid" );
	deepEqual( Stem("dividendo"), "divid" );
	deepEqual( Stem("dividendosi"), "divid" );
	deepEqual( Stem("divider"), "divider" );
	deepEqual( Stem("dividere"), "divid" );
	deepEqual( Stem("dividersi"), "divid" );
	deepEqual( Stem("divideva"), "divid" );
	deepEqual( Stem("dividevano"), "divid" );
	deepEqual( Stem("dividon"), "dividon" );
	deepEqual( Stem("divien"), "divien" );
	deepEqual( Stem("diviene"), "divien" );
	deepEqual( Stem("divieto"), "diviet" );
	deepEqual( Stem("divincola"), "divincol" );
	deepEqual( Stem("divincolandosi"), "divincol" );
	deepEqual( Stem("divincolasse"), "divincol" );
	deepEqual( Stem("divini"), "divin" );
	deepEqual( Stem("divisa"), "divis" );
	deepEqual( Stem("divise"), "divis" );
	deepEqual( Stem("divisero"), "diviser" );
	deepEqual( Stem("divisi"), "divis" );
	deepEqual( Stem("divisione"), "division" );
	deepEqual( Stem("divisioni"), "division" );
	deepEqual( Stem("divismo"), "divism" );
	deepEqual( Stem("diviso"), "divis" );
	deepEqual( Stem("divo"), "div" );
	deepEqual( Stem("divora"), "divor" );
	deepEqual( Stem("divorar"), "divor" );
	deepEqual( Stem("divorata"), "divor" );
	deepEqual( Stem("divorati"), "divor" );
	deepEqual( Stem("divorato"), "divor" );
	deepEqual( Stem("divorziare"), "divorz" );
	deepEqual( Stem("divorziato"), "divorz" );
	deepEqual( Stem("divorzio"), "divorz" );
	deepEqual( Stem("divorziò"), "divorz" );
	deepEqual( Stem("divoti"), "divot" );
	deepEqual( Stem("divozione"), "divozion" );
	deepEqual( Stem("divozioni"), "divozion" );
	deepEqual( Stem("divulgare"), "divulg" );
	deepEqual( Stem("divulgazione"), "divulg" );
	deepEqual( Stem("diw"), "diw" );
	deepEqual( Stem("dizione"), "dizion" );
	deepEqual( Stem("dj"), "dj" );
	deepEqual( Stem("dl"), "dl" );
	deepEqual( Stem("dli"), "dli" );
	deepEqual( Stem("dlscendere"), "dlscend" );
	deepEqual( Stem("dm"), "dm" );
	deepEqual( Stem("dmf"), "dmf" );
	deepEqual( Stem("dn"), "dn" );
	deepEqual( Stem("do"), "do" );
	deepEqual( Stem("dobbiam"), "dobbiam" );
	deepEqual( Stem("dobbiamo"), "dobb" );
	deepEqual( Stem("doc"), "doc" );
	deepEqual( Stem("docente"), "docent" );
	deepEqual( Stem("docenti"), "docent" );
	deepEqual( Stem("docilità"), "docil" );
	deepEqual( Stem("doctor"), "doctor" );
	deepEqual( Stem("documenta"), "document" );
	deepEqual( Stem("documentari"), "documentar" );
	deepEqual( Stem("documentario"), "documentar" );
	deepEqual( Stem("documentarista"), "documentar" );
	deepEqual( Stem("documentazione"), "document" );
	deepEqual( Stem("documenti"), "document" );
	deepEqual( Stem("documento"), "document" );
	deepEqual( Stem("dodici"), "dodic" );
	deepEqual( Stem("dodo"), "dod" );
	deepEqual( Stem("dog"), "dog" );
	deepEqual( Stem("doga"), "dog" );
	deepEqual( Stem("doganali"), "doganal" );
	deepEqual( Stem("doge"), "dog" );
	deepEqual( Stem("doglia"), "dogl" );
	deepEqual( Stem("dogma"), "dogm" );
	deepEqual( Stem("dolce"), "dolc" );
	deepEqual( Stem("dolcemente"), "dolcement" );
	deepEqual( Stem("dolcezza"), "dolcezz" );
	deepEqual( Stem("dolcezze"), "dolcezz" );
	deepEqual( Stem("dolci"), "dolc" );
	deepEqual( Stem("dole"), "dol" );
	deepEqual( Stem("dolente"), "dolent" );
	deepEqual( Stem("dolenti"), "dolent" );
	deepEqual( Stem("dolesse"), "doless" );
	deepEqual( Stem("doll"), "doll" );
	deepEqual( Stem("dollari"), "dollar" );
	deepEqual( Stem("dollaro"), "dollar" );
	deepEqual( Stem("dolomiti"), "dolom" );
	deepEqual( Stem("dolor"), "dolor" );
	deepEqual( Stem("dolore"), "dolor" );
	deepEqual( Stem("dolori"), "dolor" );
	deepEqual( Stem("dolorosa"), "dolor" );
	deepEqual( Stem("dolorosamente"), "dolor" );
	deepEqual( Stem("dolorose"), "dolor" );
	deepEqual( Stem("dolorosi"), "dolor" );
	deepEqual( Stem("doloroso"), "dolor" );
	deepEqual( Stem("doman"), "doman" );
	deepEqual( Stem("domanda"), "domand" );
	deepEqual( Stem("domandando"), "domand" );
	deepEqual( Stem("domandandogli"), "domand" );
	deepEqual( Stem("domandandosi"), "domand" );
	deepEqual( Stem("domandar"), "domand" );
	deepEqual( Stem("domandare"), "domand" );
	deepEqual( Stem("domandargli"), "domand" );
	deepEqual( Stem("domandarmi"), "domand" );
	deepEqual( Stem("domandarne"), "domand" );
	deepEqual( Stem("domandarono"), "domand" );
	deepEqual( Stem("domandasse"), "domand" );
	deepEqual( Stem("domandate"), "domand" );
	deepEqual( Stem("domandatene"), "domandaten" );
	deepEqual( Stem("domandato"), "domand" );
	deepEqual( Stem("domandava"), "domand" );
	deepEqual( Stem("domandavo"), "domand" );
	deepEqual( Stem("domande"), "domand" );
	deepEqual( Stem("domanderà"), "domand" );
	deepEqual( Stem("domandi"), "domand" );
	deepEqual( Stem("domando"), "dom" );
	deepEqual( Stem("domandò"), "domand" );
	deepEqual( Stem("domani"), "doman" );
	deepEqual( Stem("domata"), "dom" );
	deepEqual( Stem("domate"), "dom" );
	deepEqual( Stem("domati"), "dom" );
	deepEqual( Stem("domattina"), "domattin" );
	deepEqual( Stem("domeneddio"), "domenedd" );
	deepEqual( Stem("domenica"), "domen" );
	deepEqual( Stem("domenicale"), "domenical" );
	deepEqual( Stem("domenicali"), "domenical" );
	deepEqual( Stem("domeniche"), "domen" );
	deepEqual( Stem("domenico"), "domen" );
	deepEqual( Stem("domestica"), "domest" );
	deepEqual( Stem("domestiche"), "domest" );
	deepEqual( Stem("domestico"), "domest" );
	deepEqual( Stem("domicilio"), "domicil" );
	deepEqual( Stem("domificazione"), "domif" );
	deepEqual( Stem("domina"), "domin" );
	deepEqual( Stem("dominante"), "domin" );
	deepEqual( Stem("dominanti"), "domin" );
	deepEqual( Stem("dominarle"), "domin" );
	deepEqual( Stem("dominasse"), "domin" );
	deepEqual( Stem("dominata"), "domin" );
	deepEqual( Stem("dominato"), "domin" );
	deepEqual( Stem("dominatrice"), "domin" );
	deepEqual( Stem("dominava"), "domin" );
	deepEqual( Stem("domingo"), "doming" );
	deepEqual( Stem("domini"), "domin" );
	deepEqual( Stem("dominik"), "dominik" );
	deepEqual( Stem("dominio"), "domin" );
	deepEqual( Stem("dominion"), "dominion" );
	deepEqual( Stem("domiziana"), "domizian" );
	deepEqual( Stem("domum"), "domum" );
	deepEqual( Stem("don"), "don" );
	deepEqual( Stem("dona"), "don" );
	deepEqual( Stem("donà"), "don" );
	deepEqual( Stem("donadoni"), "donadon" );
	deepEqual( Stem("donald"), "donald" );
	deepEqual( Stem("donare"), "don" );
	deepEqual( Stem("donat"), "donat" );
	deepEqual( Stem("donatella"), "donatell" );
	deepEqual( Stem("donati"), "don" );
	deepEqual( Stem("donato"), "don" );
	deepEqual( Stem("donatori"), "donator" );
	deepEqual( Stem("donazione"), "donazion" );
	deepEqual( Stem("donazioni"), "donazion" );
	deepEqual( Stem("dond"), "dond" );
	deepEqual( Stem("donde"), "dond" );
	deepEqual( Stem("dondolasse"), "dondol" );
	deepEqual( Stem("donelli"), "donell" );
	deepEqual( Stem("dongwu"), "dongwu" );
	deepEqual( Stem("doni"), "don" );
	deepEqual( Stem("donna"), "donn" );
	deepEqual( Stem("donne"), "donn" );
	deepEqual( Stem("donnicciola"), "donnicciol" );
	deepEqual( Stem("dono"), "don" );
	deepEqual( Stem("donzelle"), "donzell" );
	deepEqual( Stem("doo"), "doo" );
	deepEqual( Stem("doping"), "doping" );
	deepEqual( Stem("dopo"), "dop" );
	deepEqual( Stem("dopodomani"), "dopodoman" );
	deepEqual( Stem("dopopartita"), "dopopart" );
	deepEqual( Stem("doppia"), "dopp" );
	deepEqual( Stem("doppiamente"), "dopp" );
	deepEqual( Stem("doppiata"), "dopp" );
	deepEqual( Stem("doppiato"), "dopp" );
	deepEqual( Stem("doppie"), "dopp" );
	deepEqual( Stem("doppio"), "dopp" );
	deepEqual( Stem("dor"), "dor" );
	deepEqual( Stem("dorantes"), "dorantes" );
	deepEqual( Stem("dorgali"), "dorgal" );
	deepEqual( Stem("doriano"), "dor" );
	deepEqual( Stem("dorma"), "dorm" );
	deepEqual( Stem("dorme"), "dorm" );
	deepEqual( Stem("dormì"), "dorm" );
	deepEqual( Stem("dormir"), "dorm" );
	deepEqual( Stem("dormirai"), "dorm" );
	deepEqual( Stem("dormire"), "dorm" );
	deepEqual( Stem("dormita"), "dorm" );
	deepEqual( Stem("dormitina"), "dormitin" );
	deepEqual( Stem("dormito"), "dorm" );
	deepEqual( Stem("dormitòri"), "dormitòr" );
	deepEqual( Stem("dormitorio"), "dormitor" );
	deepEqual( Stem("dormiva"), "dorm" );
	deepEqual( Stem("dormivano"), "dorm" );
	deepEqual( Stem("dornbusch"), "dornbusc" );
	deepEqual( Stem("dornbush"), "dornbush" );
	deepEqual( Stem("dorso"), "dors" );
	deepEqual( Stem("dose"), "dos" );
	deepEqual( Stem("dossetti"), "dossett" );
	deepEqual( Stem("dossier"), "dossier" );
	deepEqual( Stem("dotarsi"), "dot" );
	deepEqual( Stem("dotata"), "dot" );
	deepEqual( Stem("dotate"), "dot" );
	deepEqual( Stem("dotato"), "dot" );
	deepEqual( Stem("dotazione"), "dotazion" );
	deepEqual( Stem("dote"), "dot" );
	deepEqual( Stem("doti"), "dot" );
	deepEqual( Stem("dotò"), "dot" );
	deepEqual( Stem("dott"), "dott" );
	deepEqual( Stem("dotta"), "dott" );
	deepEqual( Stem("dotti"), "dott" );
	deepEqual( Stem("dotto"), "dott" );
	deepEqual( Stem("dottor"), "dottor" );
	deepEqual( Stem("dottore"), "dottor" );
	deepEqual( Stem("dottoressa"), "dottoress" );
	deepEqual( Stem("dottori"), "dottor" );
	deepEqual( Stem("dottrina"), "dottrin" );
	deepEqual( Stem("dottrinalmente"), "dottrinal" );
	deepEqual( Stem("dottrine"), "dottrin" );
	deepEqual( Stem("douadi"), "douad" );
	deepEqual( Stem("doue"), "dou" );
	deepEqual( Stem("doueua"), "doueu" );
	deepEqual( Stem("douglas"), "douglas" );
	deepEqual( Stem("dourebbe"), "dourebb" );
	deepEqual( Stem("dov"), "dov" );
	deepEqual( Stem("dove"), "dov" );
	deepEqual( Stem("dové"), "dov" );
	deepEqual( Stem("dovendo"), "dov" );
	deepEqual( Stem("dover"), "dover" );
	deepEqual( Stem("doverci"), "dov" );
	deepEqual( Stem("dovere"), "dov" );
	deepEqual( Stem("doveri"), "dover" );
	deepEqual( Stem("doverlo"), "dov" );
	deepEqual( Stem("dovermene"), "dov" );
	deepEqual( Stem("doveroso"), "dover" );
	deepEqual( Stem("doversi"), "dov" );
	deepEqual( Stem("dovesse"), "dovess" );
	deepEqual( Stem("dovessero"), "dov" );
	deepEqual( Stem("dovessi"), "dovess" );
	deepEqual( Stem("dovessimo"), "dovessim" );
	deepEqual( Stem("dovete"), "dov" );
	deepEqual( Stem("dovette"), "dovett" );
	deepEqual( Stem("dovettero"), "dovetter" );
	deepEqual( Stem("doveva"), "dov" );
	deepEqual( Stem("dovevamo"), "dov" );
	deepEqual( Stem("dovevan"), "dovevan" );
	deepEqual( Stem("dovevano"), "dov" );
	deepEqual( Stem("dovevi"), "dov" );
	deepEqual( Stem("dovevo"), "dov" );
	deepEqual( Stem("doviziosi"), "doviz" );
	deepEqual( Stem("dovizioso"), "doviz" );
	deepEqual( Stem("dovrà"), "dovr" );
	deepEqual( Stem("dovranno"), "dovrann" );
	deepEqual( Stem("dovrebb"), "dovrebb" );
	deepEqual( Stem("dovrebbbe"), "dovrebbb" );
	deepEqual( Stem("dovrebbe"), "dovrebb" );
	deepEqual( Stem("dovrebbero"), "dovrebber" );
	deepEqual( Stem("dovrei"), "dovre" );
	deepEqual( Stem("dovrem"), "dovrem" );
	deepEqual( Stem("dovremmo"), "dovr" );
	deepEqual( Stem("dovremo"), "dovrem" );
	deepEqual( Stem("dovrete"), "dovr" );
	deepEqual( Stem("dovunque"), "dovunqu" );
	deepEqual( Stem("dovuta"), "dov" );
	deepEqual( Stem("dovute"), "dov" );
	deepEqual( Stem("dovuti"), "dov" );
	deepEqual( Stem("dovuto"), "dov" );
	deepEqual( Stem("dow"), "dow" );
	deepEqual( Stem("down"), "down" );
	deepEqual( Stem("dozio"), "doz" );
	deepEqual( Stem("dozzina"), "dozzin" );
	deepEqual( Stem("dozzinale"), "dozzinal" );
	deepEqual( Stem("dp"), "dp" );
	deepEqual( Stem("dpr"), "dpr" );
	deepEqual( Stem("dps"), "dps" );
	deepEqual( Stem("dra"), "dra" );
	deepEqual( Stem("dracma"), "dracm" );
	deepEqual( Stem("dragaggio"), "dragagg" );
	deepEqual( Stem("dragon"), "dragon" );
	deepEqual( Stem("drake"), "drak" );
	deepEqual( Stem("dramma"), "dramm" );
	deepEqual( Stem("drammatica"), "drammat" );
	deepEqual( Stem("drammatici"), "drammat" );
	deepEqual( Stem("drammatico"), "drammat" );
	deepEqual( Stem("drancy"), "drancy" );
	deepEqual( Stem("drappello"), "drappell" );
	deepEqual( Stem("drappi"), "drapp" );
	deepEqual( Stem("drastica"), "drastic" );
	deepEqual( Stem("drastiche"), "drastic" );
	deepEqual( Stem("drastico"), "drastic" );
	deepEqual( Stem("dratshev"), "dratshev" );
	deepEqual( Stem("dresda"), "dresd" );
	deepEqual( Stem("dribbling"), "dribbling" );
	deepEqual( Stem("dritta"), "dritt" );
	deepEqual( Stem("driver"), "driver" );
	deepEqual( Stem("drnovsek"), "drnovsek" );
	deepEqual( Stem("droga"), "drog" );
	deepEqual( Stem("drogà"), "drog" );
	deepEqual( Stem("drusi"), "drus" );
	deepEqual( Stem("druso"), "drus" );
	deepEqual( Stem("dua"), "dua" );
	deepEqual( Stem("dubai"), "duba" );
	deepEqual( Stem("dubbi"), "dubb" );
	deepEqual( Stem("dubbia"), "dubb" );
	deepEqual( Stem("dubbiezza"), "dubbiezz" );
	deepEqual( Stem("dubbio"), "dubb" );
	deepEqual( Stem("dubbiosa"), "dubbios" );
	deepEqual( Stem("dubbiosamente"), "dubbios" );
	deepEqual( Stem("dubbiosi"), "dubbios" );
	deepEqual( Stem("dubita"), "dub" );
	deepEqual( Stem("dubitare"), "dubit" );
	deepEqual( Stem("dubitarne"), "dubit" );
	deepEqual( Stem("dubitasse"), "dubit" );
	deepEqual( Stem("dubitate"), "dubit" );
	deepEqual( Stem("dubitativa"), "dubit" );
	deepEqual( Stem("dubiti"), "dub" );
	deepEqual( Stem("dubito"), "dub" );
	deepEqual( Stem("dublino"), "dublin" );
	deepEqual( Stem("duca"), "duc" );
	deepEqual( Stem("ducati"), "duc" );
	deepEqual( Stem("ducato"), "duc" );
	deepEqual( Stem("ducatone"), "ducaton" );
	deepEqual( Stem("ducatoni"), "ducaton" );
	deepEqual( Stem("duce"), "duc" );
	deepEqual( Stem("duchessa"), "duchess" );
	deepEqual( Stem("duchovny"), "duchovny" );
	deepEqual( Stem("dudaiev"), "dudaiev" );
	deepEqual( Stem("dudikoff"), "dudikoff" );
	deepEqual( Stem("dudley"), "dudley" );
	deepEqual( Stem("due"), "due" );
	deepEqual( Stem("duelli"), "duell" );
	deepEqual( Stem("duello"), "duell" );
	deepEqual( Stem("duemila"), "duemil" );
	deepEqual( Stem("dugent"), "dugent" );
	deepEqual( Stem("dugento"), "dugent" );
	deepEqual( Stem("dugnano"), "dugn" );
	deepEqual( Stem("duna"), "dun" );
	deepEqual( Stem("dundee"), "dunde" );
	deepEqual( Stem("dunkerque"), "dunkerqu" );
	deepEqual( Stem("dunque"), "dunqu" );
	deepEqual( Stem("dununcia"), "dununc" );
	deepEqual( Stem("duodecim"), "duodecim" );
	deepEqual( Stem("duomo"), "duom" );
	deepEqual( Stem("duplicato"), "duplic" );
	deepEqual( Stem("duplice"), "duplic" );
	deepEqual( Stem("duque"), "duqu" );
	deepEqual( Stem("dur"), "dur" );
	deepEqual( Stem("dura"), "dur" );
	deepEqual( Stem("duramente"), "dur" );
	deepEqual( Stem("duran"), "duran" );
	deepEqual( Stem("durant"), "durant" );
	deepEqual( Stem("durante"), "durant" );
	deepEqual( Stem("durar"), "dur" );
	deepEqual( Stem("durare"), "dur" );
	deepEqual( Stem("durassero"), "dur" );
	deepEqual( Stem("durata"), "dur" );
	deepEqual( Stem("durato"), "dur" );
	deepEqual( Stem("duratro"), "duratr" );
	deepEqual( Stem("duraturo"), "duratur" );
	deepEqual( Stem("durava"), "dur" );
	deepEqual( Stem("durbano"), "durb" );
	deepEqual( Stem("dure"), "dur" );
	deepEqual( Stem("durerà"), "dur" );
	deepEqual( Stem("durezza"), "durezz" );
	deepEqual( Stem("duri"), "dur" );
	deepEqual( Stem("durissima"), "durissim" );
	deepEqual( Stem("durissime"), "durissim" );
	deepEqual( Stem("durissimi"), "durissim" );
	deepEqual( Stem("durissimo"), "durissim" );
	deepEqual( Stem("durlindane"), "durlindan" );
	deepEqual( Stem("duro"), "dur" );
	deepEqual( Stem("durò"), "dur" );
	deepEqual( Stem("dustin"), "dustin" );
	deepEqual( Stem("duttile"), "duttil" );
	deepEqual( Stem("dwayne"), "dwayn" );
	deepEqual( Stem("dyaln"), "dyaln" );
	deepEqual( Stem("dyken"), "dyken" );
	deepEqual( Stem("dylan"), "dylan" );
	deepEqual( Stem("dzhuna"), "dzhun" );
	deepEqual( Stem("e"), "e" );
	deepEqual( Stem("è"), "è" );
	deepEqual( Stem("eadem"), "eadem" );
	deepEqual( Stem("eam"), "eam" );
	deepEqual( Stem("eass"), "eass" );
	deepEqual( Stem("east"), "east" );
	deepEqual( Stem("easy"), "easy" );
	deepEqual( Stem("ebbe"), "ebbe" );
	deepEqual( Stem("ebbene"), "ebben" );
	deepEqual( Stem("ebber"), "ebber" );
	deepEqual( Stem("ebbero"), "ebber" );
	deepEqual( Stem("ebbi"), "ebbi" );
	deepEqual( Stem("ebbrezza"), "ebbrezz" );
	deepEqual( Stem("ebraica"), "ebraic" );
	deepEqual( Stem("ebraiche"), "ebraic" );
	deepEqual( Stem("ebraico"), "ebraic" );
	deepEqual( Stem("ebrei"), "ebre" );
	deepEqual( Stem("ebreo"), "ebre" );
	deepEqual( Stem("ec"), "ec" );
	deepEqual( Stem("ecc"), "ecc" );
	deepEqual( Stem("eccedere"), "ecced" );
	deepEqual( Stem("ecceduto"), "ecced" );
	deepEqual( Stem("eccell"), "eccell" );
	deepEqual( Stem("eccellente"), "eccellent" );
	deepEqual( Stem("eccellenti"), "eccellent" );
	deepEqual( Stem("eccellentì"), "eccellent" );
	deepEqual( Stem("eccellentiss"), "eccellentiss" );
	deepEqual( Stem("eccellentissimo"), "eccellentissim" );
	deepEqual( Stem("eccellenza"), "eccellent" );
	deepEqual( Stem("eccentrico"), "eccentr" );
	deepEqual( Stem("eccessi"), "eccess" );
	deepEqual( Stem("eccessiva"), "eccess" );
	deepEqual( Stem("eccessivamente"), "eccess" );
	deepEqual( Stem("eccessivi"), "eccess" );
	deepEqual( Stem("eccessivo"), "eccess" );
	deepEqual( Stem("eccesso"), "eccess" );
	deepEqual( Stem("eccetera"), "ecceter" );
	deepEqual( Stem("eccettuarne"), "eccettu" );
	deepEqual( Stem("eccettuate"), "eccettu" );
	deepEqual( Stem("eccezionale"), "eccezional" );
	deepEqual( Stem("eccezione"), "eccezion" );
	deepEqual( Stem("eccezioni"), "eccezion" );
	deepEqual( Stem("ecchimosi"), "ecchim" );
	deepEqual( Stem("eccidio"), "eccid" );
	deepEqual( Stem("eccitando"), "eccit" );
	deepEqual( Stem("eccitar"), "eccit" );
	deepEqual( Stem("eccitare"), "eccit" );
	deepEqual( Stem("eccitarono"), "eccit" );
	deepEqual( Stem("eccitato"), "eccit" );
	deepEqual( Stem("eccitava"), "eccit" );
	deepEqual( Stem("ecclesiali"), "ecclesial" );
	deepEqual( Stem("ecclesiastiche"), "ecclesiast" );
	deepEqual( Stem("ecclesiastici"), "ecclesiast" );
	deepEqual( Stem("ecclesiastico"), "ecclesiast" );
	deepEqual( Stem("ecco"), "ecco" );
	deepEqual( Stem("eccoli"), "eccol" );
	deepEqual( Stem("eccolo"), "eccol" );
	deepEqual( Stem("eccome"), "eccom" );
	deepEqual( Stem("eccomi"), "eccom" );
	deepEqual( Stem("eccone"), "eccon" );
	deepEqual( Stem("echeverry"), "echeverry" );
	deepEqual( Stem("echotel"), "echotel" );
	deepEqual( Stem("eclissavano"), "ecliss" );
	deepEqual( Stem("eco"), "eco" );
	deepEqual( Stem("ecologia"), "ecolog" );
	deepEqual( Stem("ecologica"), "ecolog" );
	deepEqual( Stem("ecologico"), "ecolog" );
	deepEqual( Stem("ecolsicilia"), "ecolsicil" );
	deepEqual( Stem("econogica"), "econog" );
	deepEqual( Stem("economia"), "econom" );
	deepEqual( Stem("economic"), "economic" );
	deepEqual( Stem("economica"), "econom" );
	deepEqual( Stem("economiche"), "econom" );
	deepEqual( Stem("economici"), "econom" );
	deepEqual( Stem("economico"), "econom" );
	deepEqual( Stem("economie"), "econom" );
	deepEqual( Stem("economista"), "econom" );
	deepEqual( Stem("economisti"), "econom" );
	deepEqual( Stem("ecosistema"), "ecosistem" );
	deepEqual( Stem("ecu"), "ecu" );
	deepEqual( Stem("ecuador"), "ecuador" );
	deepEqual( Stem("ecuadoriana"), "ecuadorian" );
	deepEqual( Stem("ecuadoriane"), "ecuadorian" );
	deepEqual( Stem("ecuadoriano"), "ecuador" );
	deepEqual( Stem("ed"), "ed" );
	deepEqual( Stem("eddie"), "eddi" );
	deepEqual( Stem("edelman"), "edelman" );
	deepEqual( Stem("eden"), "eden" );
	deepEqual( Stem("edf"), "edf" );
	deepEqual( Stem("edgar"), "edgar" );
	deepEqual( Stem("edicola"), "edicol" );
	deepEqual( Stem("edidit"), "edidit" );
	deepEqual( Stem("edif"), "edif" );
	deepEqual( Stem("edificare"), "edific" );
	deepEqual( Stem("edificato"), "edific" );
	deepEqual( Stem("edificazione"), "edif" );
	deepEqual( Stem("edifici"), "edif" );
	deepEqual( Stem("edificio"), "edific" );
	deepEqual( Stem("edifizi"), "edifiz" );
	deepEqual( Stem("edifizio"), "edifiz" );
	deepEqual( Stem("edilberto"), "edilbert" );
	deepEqual( Stem("edilizie"), "ediliz" );
	deepEqual( Stem("edilizio"), "ediliz" );
	deepEqual( Stem("ediliziò"), "ediliz" );
	deepEqual( Stem("edison"), "edison" );
	deepEqual( Stem("edit"), "edit" );
	deepEqual( Stem("edita"), "edit" );
	deepEqual( Stem("editi"), "edit" );
	deepEqual( Stem("editore"), "editor" );
	deepEqual( Stem("editori"), "editor" );
	deepEqual( Stem("editoria"), "editor" );
	deepEqual( Stem("editoriale"), "editorial" );
	deepEqual( Stem("editoriali"), "editorial" );
	deepEqual( Stem("editorialisti"), "editorial" );
	deepEqual( Stem("editrice"), "editr" );
	deepEqual( Stem("editti"), "editt" );
	deepEqual( Stem("editto"), "editt" );
	deepEqual( Stem("edizione"), "edizion" );
	deepEqual( Stem("edizioni"), "edizion" );
	deepEqual( Stem("edmondo"), "edmond" );
	deepEqual( Stem("edo"), "edo" );
	deepEqual( Stem("edoardo"), "edoard" );
	deepEqual( Stem("edouard"), "edouard" );
	deepEqual( Stem("eduardo"), "eduard" );
	deepEqual( Stem("educande"), "educand" );
	deepEqual( Stem("educare"), "educ" );
	deepEqual( Stem("educata"), "educ" );
	deepEqual( Stem("educati"), "educ" );
	deepEqual( Stem("educatissimi"), "educatissim" );
	deepEqual( Stem("educatrici"), "educ" );
	deepEqual( Stem("educazione"), "educ" );
	deepEqual( Stem("edward"), "edward" );
	deepEqual( Stem("efe"), "efe" );
	deepEqual( Stem("efettuato"), "efettu" );
	deepEqual( Stem("effe"), "effe" );
	deepEqual( Stem("effetti"), "effett" );
	deepEqual( Stem("effettiva"), "effett" );
	deepEqual( Stem("effettivamente"), "effett" );
	deepEqual( Stem("effettive"), "effett" );
	deepEqual( Stem("effettivo"), "effett" );
	deepEqual( Stem("effetto"), "effett" );
	deepEqual( Stem("effettuare"), "effettu" );
	deepEqual( Stem("effettuata"), "effettu" );
	deepEqual( Stem("effettuato"), "effettu" );
	deepEqual( Stem("effettuava"), "effettu" );
	deepEqual( Stem("efficace"), "efficac" );
	deepEqual( Stem("efficacemente"), "efficac" );
	deepEqual( Stem("efficaci"), "efficac" );
	deepEqual( Stem("efficacia"), "efficac" );
	deepEqual( Stem("efficiente"), "efficient" );
	deepEqual( Stem("efficienza"), "efficient" );
	deepEqual( Stem("effusione"), "effusion" );
	deepEqual( Stem("efib"), "efib" );
	deepEqual( Stem("efibanca"), "efibanc" );
	deepEqual( Stem("efim"), "efim" );
	deepEqual( Stem("efletto"), "eflett" );
	deepEqual( Stem("egalitè"), "egalit" );
	deepEqual( Stem("egeli"), "egel" );
	deepEqual( Stem("egemonia"), "egemon" );
	deepEqual( Stem("egerton"), "egerton" );
	deepEqual( Stem("egidio"), "egid" );
	deepEqual( Stem("egitto"), "egitt" );
	deepEqual( Stem("egiziana"), "egizian" );
	deepEqual( Stem("egiziane"), "egizian" );
	deepEqual( Stem("egli"), "egli" );
	deepEqual( Stem("ego"), "ego" );
	deepEqual( Stem("egregiamente"), "egreg" );
	deepEqual( Stem("egregii"), "egreg" );
	deepEqual( Stem("egregio"), "egreg" );
	deepEqual( Stem("eguaglianza"), "eguagl" );
	deepEqual( Stem("egualmente"), "egual" );
	deepEqual( Stem("eh"), "eh" );
	deepEqual( Stem("ehi"), "ehi" );
	deepEqual( Stem("ehlermann"), "ehlermann" );
	deepEqual( Stem("ehm"), "ehm" );
	deepEqual( Stem("ei"), "ei" );
	deepEqual( Stem("eib"), "eib" );
	deepEqual( Stem("eielo"), "eiel" );
	deepEqual( Stem("eil"), "eil" );
	deepEqual( Stem("einar"), "ein" );
	deepEqual( Stem("eisendle"), "eisendl" );
	deepEqual( Stem("ekeren"), "ekeren" );
	deepEqual( Stem("el"), "el" );
	deepEqual( Stem("elaborare"), "elabor" );
	deepEqual( Stem("elaborassero"), "elabor" );
	deepEqual( Stem("elaborata"), "elabor" );
	deepEqual( Stem("elaborate"), "elabor" );
	deepEqual( Stem("elaborati"), "elabor" );
	deepEqual( Stem("elaborato"), "elabor" );
	deepEqual( Stem("elaborazione"), "elabor" );
	deepEqual( Stem("elba"), "elba" );
	deepEqual( Stem("eldrege"), "eldreg" );
	deepEqual( Stem("eleanor"), "eleanor" );
	deepEqual( Stem("elecricitè"), "elecricit" );
	deepEqual( Stem("electrabel"), "electrabel" );
	deepEqual( Stem("electric"), "electric" );
	deepEqual( Stem("electricitè"), "electricit" );
	deepEqual( Stem("electricity"), "electricity" );
	deepEqual( Stem("elegante"), "eleg" );
	deepEqual( Stem("eleganza"), "eleg" );
	deepEqual( Stem("eleganze"), "eleg" );
	deepEqual( Stem("eleggerà"), "elegg" );
	deepEqual( Stem("eleggere"), "elegg" );
	deepEqual( Stem("elektrizitatswerke"), "elektrizitatswerk" );
	deepEqual( Stem("elelemnti"), "elelemnt" );
	deepEqual( Stem("elementare"), "element" );
	deepEqual( Stem("elementari"), "elementar" );
	deepEqual( Stem("elementi"), "element" );
	deepEqual( Stem("elemento"), "element" );
	deepEqual( Stem("elemosina"), "elemosin" );
	deepEqual( Stem("elemosine"), "elemosin" );
	deepEqual( Stem("elena"), "elen" );
	deepEqual( Stem("elencato"), "elenc" );
	deepEqual( Stem("elenchi"), "elenc" );
	deepEqual( Stem("elenco"), "elenc" );
	deepEqual( Stem("eleonora"), "eleonor" );
	deepEqual( Stem("elesse"), "eless" );
	deepEqual( Stem("eletrica"), "eletr" );
	deepEqual( Stem("eletta"), "elett" );
	deepEqual( Stem("elette"), "elett" );
	deepEqual( Stem("eletti"), "elett" );
	deepEqual( Stem("elettivi"), "elett" );
	deepEqual( Stem("elettivo"), "elett" );
	deepEqual( Stem("eletto"), "elett" );
	deepEqual( Stem("elettorale"), "elettoral" );
	deepEqual( Stem("elettorali"), "elettoral" );
	deepEqual( Stem("elettoralmente"), "elettoral" );
	deepEqual( Stem("elettorato"), "elettor" );
	deepEqual( Stem("elettore"), "elettor" );
	deepEqual( Stem("elettori"), "elettor" );
	deepEqual( Stem("elettrica"), "elettr" );
	deepEqual( Stem("elettriche"), "elettr" );
	deepEqual( Stem("elettrici"), "elettr" );
	deepEqual( Stem("elettricità"), "elettr" );
	deepEqual( Stem("elettrico"), "elettr" );
	deepEqual( Stem("elettrimmobiliare"), "elettrimmobil" );
	deepEqual( Stem("elettrizza"), "elettrizz" );
	deepEqual( Stem("elettromagnetica"), "elettromagnet" );
	deepEqual( Stem("elettronica"), "elettron" );
	deepEqual( Stem("elettrotecniche"), "elettrotecn" );
	deepEqual( Stem("elevata"), "elev" );
	deepEqual( Stem("elevate"), "elev" );
	deepEqual( Stem("elevati"), "elev" );
	deepEqual( Stem("elevato"), "elev" );
	deepEqual( Stem("elevava"), "elev" );
	deepEqual( Stem("elezione"), "elezion" );
	deepEqual( Stem("elezioni"), "elezion" );
	deepEqual( Stem("elia"), "eli" );
	deepEqual( Stem("elicotteri"), "elicotter" );
	deepEqual( Stem("elicottero"), "elicotter" );
	deepEqual( Stem("elimina"), "elimin" );
	deepEqual( Stem("eliminando"), "elimin" );
	deepEqual( Stem("eliminare"), "elimin" );
	deepEqual( Stem("eliminato"), "elimin" );
	deepEqual( Stem("eliminazione"), "elimin" );
	deepEqual( Stem("eliminerebbe"), "elimin" );
	deepEqual( Stem("elio"), "eli" );
	deepEqual( Stem("eliogabalo"), "eliogabal" );
	deepEqual( Stem("elisa"), "elis" );
	deepEqual( Stem("elisabetta"), "elisabett" );
	deepEqual( Stem("elkraft"), "elkraft" );
	deepEqual( Stem("ella"), "ella" );
	deepEqual( Stem("ellero"), "eller" );
	deepEqual( Stem("ellsworth"), "ellsworth" );
	deepEqual( Stem("elmento"), "elment" );
	deepEqual( Stem("elmo"), "elmo" );
	deepEqual( Stem("elogi"), "elog" );
	deepEqual( Stem("elogiare"), "elog" );
	deepEqual( Stem("elogio"), "elog" );
	deepEqual( Stem("eloquente"), "eloquent" );
	deepEqual( Stem("eloquenza"), "eloquent" );
	deepEqual( Stem("elsa"), "elsa" );
	deepEqual( Stem("elsam"), "elsam" );
	deepEqual( Stem("eluder"), "eluder" );
	deepEqual( Stem("eludere"), "elud" );
	deepEqual( Stem("eluderli"), "elud" );
	deepEqual( Stem("elvio"), "elvi" );
	deepEqual( Stem("em"), "em" );
	deepEqual( Stem("emanato"), "eman" );
	deepEqual( Stem("emanazione"), "eman" );
	deepEqual( Stem("emanazioni"), "eman" );
	deepEqual( Stem("emanò"), "eman" );
	deepEqual( Stem("emanrsi"), "emanrs" );
	deepEqual( Stem("emanuele"), "emanuel" );
	deepEqual( Stem("emarginazione"), "emargin" );
	deepEqual( Stem("embargo"), "embarg" );
	deepEqual( Stem("emblematicamente"), "emblemat" );
	deepEqual( Stem("emblematico"), "emblemat" );
	deepEqual( Stem("embrione"), "embrion" );
	deepEqual( Stem("emc"), "emc" );
	deepEqual( Stem("emden"), "emden" );
	deepEqual( Stem("eme"), "eme" );
	deepEqual( Stem("emenda"), "emend" );
	deepEqual( Stem("emendamenti"), "emend" );
	deepEqual( Stem("emendamento"), "emend" );
	deepEqual( Stem("emerg"), "emerg" );
	deepEqual( Stem("emerge"), "emerg" );
	deepEqual( Stem("emergenti"), "emergent" );
	deepEqual( Stem("emergenza"), "emergent" );
	deepEqual( Stem("emergenze"), "emergent" );
	deepEqual( Stem("emergere"), "emerg" );
	deepEqual( Stem("emerging"), "emerging" );
	deepEqual( Stem("emergono"), "emerg" );
	deepEqual( Stem("emerse"), "emers" );
	deepEqual( Stem("emersi"), "emers" );
	deepEqual( Stem("emerso"), "emers" );
	deepEqual( Stem("emessa"), "emess" );
	deepEqual( Stem("emessi"), "emess" );
	deepEqual( Stem("emesso"), "emess" );
	deepEqual( Stem("emettere"), "emett" );
	deepEqual( Stem("emi"), "emi" );
	deepEqual( Stem("emiel"), "emiel" );
	deepEqual( Stem("emigrazione"), "emigr" );
	deepEqual( Stem("emil"), "emil" );
	deepEqual( Stem("emilia"), "emil" );
	deepEqual( Stem("emiliane"), "emilian" );
	deepEqual( Stem("emiliani"), "emilian" );
	deepEqual( Stem("emiliano"), "emil" );
	deepEqual( Stem("emilio"), "emil" );
	deepEqual( Stem("eminenza"), "eminent" );
	deepEqual( Stem("emirati"), "emir" );
	deepEqual( Stem("emissario"), "emissar" );
	deepEqual( Stem("emissione"), "emission" );
	deepEqual( Stem("emittente"), "emittent" );
	deepEqual( Stem("emittenti"), "emittent" );
	deepEqual( Stem("emma"), "emma" );
	deepEqual( Stem("emolumenti"), "emolument" );
	deepEqual( Stem("emorragia"), "emorrag" );
	deepEqual( Stem("emotiva"), "emot" );
	deepEqual( Stem("emotive"), "emot" );
	deepEqual( Stem("emotivo"), "emot" );
	deepEqual( Stem("emozionante"), "emozion" );
	deepEqual( Stem("emozione"), "emozion" );
	deepEqual( Stem("emozioni"), "emozion" );
	deepEqual( Stem("empì"), "empì" );
	deepEqual( Stem("empiendo"), "empi" );
	deepEqual( Stem("empietà"), "empiet" );
	deepEqual( Stem("empio"), "empi" );
	deepEqual( Stem("empire"), "empir" );
	deepEqual( Stem("empireo"), "empire" );
	deepEqual( Stem("empoli"), "empol" );
	deepEqual( Stem("emulazione"), "emul" );
	deepEqual( Stem("en"), "en" );
	deepEqual( Stem("encicliche"), "encicl" );
	deepEqual( Stem("enclave"), "enclav" );
	deepEqual( Stem("endesa"), "endes" );
	deepEqual( Stem("endoume"), "endoum" );
	deepEqual( Stem("enea"), "ene" );
	deepEqual( Stem("enel"), "enel" );
	deepEqual( Stem("energetica"), "energet" );
	deepEqual( Stem("energetiche"), "energet" );
	deepEqual( Stem("energetici"), "energet" );
	deepEqual( Stem("energetico"), "energet" );
	deepEqual( Stem("energia"), "energ" );
	deepEqual( Stem("energico"), "energ" );
	deepEqual( Stem("energie"), "energ" );
	deepEqual( Stem("energy"), "energy" );
	deepEqual( Stem("enfant"), "enfant" );
	deepEqual( Stem("enfasi"), "enfas" );
	deepEqual( Stem("enfiate"), "enfi" );
	deepEqual( Stem("englaro"), "englar" );
	deepEqual( Stem("eni"), "eni" );
	deepEqual( Stem("enichem"), "enichem" );
	deepEqual( Stem("enimma"), "enimm" );
	deepEqual( Stem("enna"), "enna" );
	deepEqual( Stem("enne"), "enne" );
	deepEqual( Stem("ennesima"), "ennesim" );
	deepEqual( Stem("ennesimo"), "ennesim" );
	deepEqual( Stem("enorme"), "enorm" );
	deepEqual( Stem("enormi"), "enorm" );
	deepEqual( Stem("enormità"), "enorm" );
	deepEqual( Stem("enpacl"), "enpacl" );
	deepEqual( Stem("enrico"), "enric" );
	deepEqual( Stem("enriquez"), "enriquez" );
	deepEqual( Stem("ente"), "ente" );
	deepEqual( Stem("entelechia"), "entelec" );
	deepEqual( Stem("enterprise"), "enterpris" );
	deepEqual( Stem("enti"), "enti" );
	deepEqual( Stem("entità"), "entit" );
	deepEqual( Stem("entra"), "entra" );
	deepEqual( Stem("entraci"), "entrac" );
	deepEqual( Stem("entrambe"), "entramb" );
	deepEqual( Stem("entrambi"), "entramb" );
	deepEqual( Stem("entran"), "entran" );
	deepEqual( Stem("entrando"), "entrand" );
	deepEqual( Stem("entrandovi"), "entrandov" );
	deepEqual( Stem("entrano"), "entran" );
	deepEqual( Stem("entrar"), "entrar" );
	deepEqual( Stem("entrarci"), "entrarc" );
	deepEqual( Stem("entrare"), "entrar" );
	deepEqual( Stem("entrargli"), "entrargl" );
	deepEqual( Stem("entraron"), "entraron" );
	deepEqual( Stem("entrarono"), "entrar" );
	deepEqual( Stem("entrarvi"), "entrarv" );
	deepEqual( Stem("entrasse"), "entrass" );
	deepEqual( Stem("entrassero"), "entrasser" );
	deepEqual( Stem("entrata"), "entrat" );
	deepEqual( Stem("entrate"), "entrat" );
	deepEqual( Stem("entrati"), "entrat" );
	deepEqual( Stem("entrato"), "entrat" );
	deepEqual( Stem("entratovi"), "entratov" );
	deepEqual( Stem("entratura"), "entratur" );
	deepEqual( Stem("entrature"), "entratur" );
	deepEqual( Stem("entrava"), "entrav" );
	deepEqual( Stem("entravan"), "entravan" );
	deepEqual( Stem("entravano"), "entrav" );
	deepEqual( Stem("entrerà"), "entrer" );
	deepEqual( Stem("entreranno"), "entrerann" );
	deepEqual( Stem("entri"), "entri" );
	deepEqual( Stem("entriamo"), "entriam" );
	deepEqual( Stem("entrischen"), "entrischen" );
	deepEqual( Stem("entro"), "entro" );
	deepEqual( Stem("entrò"), "entrò" );
	deepEqual( Stem("entusiasma"), "entusiasm" );
	deepEqual( Stem("entusiasmi"), "entusiasm" );
	deepEqual( Stem("entusiasmo"), "entusiasm" );
	deepEqual( Stem("entusiasta"), "entusiast" );
	deepEqual( Stem("entusiasti"), "entusiast" );
	deepEqual( Stem("entusiastici"), "entusiast" );
	deepEqual( Stem("entusiastico"), "entusiast" );
	deepEqual( Stem("enumerati"), "enumer" );
	deepEqual( Stem("enumerazion"), "enumerazion" );
	deepEqual( Stem("enunciati"), "enunc" );
	deepEqual( Stem("enunciato"), "enunc" );
	deepEqual( Stem("enunciazione"), "enunc" );
	deepEqual( Stem("envireg"), "envireg" );
	deepEqual( Stem("enzo"), "enzo" );
	deepEqual( Stem("eologiato"), "eolog" );
	deepEqual( Stem("ep"), "ep" );
	deepEqual( Stem("epatite"), "epat" );
	deepEqual( Stem("ephraim"), "ephraim" );
	deepEqual( Stem("epicentro"), "epicentr" );
	deepEqual( Stem("epidemica"), "epidem" );
	deepEqual( Stem("episcopale"), "episcopal" );
	deepEqual( Stem("episcopali"), "episcopal" );
	deepEqual( Stem("episodi"), "episod" );
	deepEqual( Stem("episodio"), "episod" );
	deepEqual( Stem("epiteti"), "epitet" );
	deepEqual( Stem("epiteto"), "epitet" );
	deepEqual( Stem("epoca"), "epoc" );
	deepEqual( Stem("epoche"), "epoc" );
	deepEqual( Stem("eppure"), "eppur" );
	deepEqual( Stem("epreoccupano"), "epreoccup" );
	deepEqual( Stem("epresto"), "eprest" );
	deepEqual( Stem("epta"), "epta" );
	deepEqual( Stem("eptabond"), "eptabond" );
	deepEqual( Stem("eptacapital"), "eptacapital" );
	deepEqual( Stem("eptainternational"), "eptainternational" );
	deepEqual( Stem("eptamoney"), "eptamoney" );
	deepEqual( Stem("epulone"), "epulon" );
	deepEqual( Stem("eq"), "eq" );
	deepEqual( Stem("equilibrarsi"), "equilibr" );
	deepEqual( Stem("equilibrato"), "equilibr" );
	deepEqual( Stem("equilibrio"), "equilibr" );
	deepEqual( Stem("equipaggi"), "equipagg" );
	deepEqual( Stem("equipaggio"), "equipagg" );
	deepEqual( Stem("equiparare"), "equipar" );
	deepEqual( Stem("equiparazione"), "equipar" );
	deepEqual( Stem("equità"), "equit" );
	deepEqual( Stem("equitazione"), "equit" );
	deepEqual( Stem("equity"), "equity" );
	deepEqual( Stem("equivale"), "equival" );
	deepEqual( Stem("equivalente"), "equivalent" );
	deepEqual( Stem("equivalentè"), "equivalent" );
	deepEqual( Stem("equivaleva"), "equival" );
	deepEqual( Stem("equivoci"), "equivoc" );
	deepEqual( Stem("equivoco"), "equivoc" );
	deepEqual( Stem("equo"), "equo" );
	deepEqual( Stem("er"), "er" );
	deepEqual( Stem("era"), "era" );
	deepEqual( Stem("eran"), "eran" );
	deepEqual( Stem("eranio"), "eran" );
	deepEqual( Stem("erano"), "eran" );
	deepEqual( Stem("erant"), "erant" );
	deepEqual( Stem("erario"), "erar" );
	deepEqual( Stem("eravamo"), "eravam" );
	deepEqual( Stem("eravate"), "erav" );
	deepEqual( Stem("erba"), "erba" );
	deepEqual( Stem("erbacce"), "erbacc" );
	deepEqual( Stem("erbaccia"), "erbacc" );
	deepEqual( Stem("erbe"), "erbe" );
	deepEqual( Stem("erboso"), "erbos" );
	deepEqual( Stem("ercole"), "ercol" );
	deepEqual( Stem("ercoli"), "ercol" );
	deepEqual( Stem("erede"), "ered" );
	deepEqual( Stem("eredità"), "ered" );
	deepEqual( Stem("ereditare"), "eredit" );
	deepEqual( Stem("ereditaria"), "ereditar" );
	deepEqual( Stem("ereditato"), "eredit" );
	deepEqual( Stem("eremita"), "erem" );
	deepEqual( Stem("eresse"), "eress" );
	deepEqual( Stem("eretico"), "eret" );
	deepEqual( Stem("eretta"), "erett" );
	deepEqual( Stem("eretto"), "erett" );
	deepEqual( Stem("ergastolo"), "ergastol" );
	deepEqual( Stem("erge"), "erge" );
	deepEqual( Stem("ergife"), "ergif" );
	deepEqual( Stem("ergo"), "ergo" );
	deepEqual( Stem("eric"), "eric" );
	deepEqual( Stem("ericsson"), "ericsson" );
	deepEqual( Stem("eridania"), "eridan" );
	deepEqual( Stem("erigere"), "erig" );
	deepEqual( Stem("erik"), "erik" );
	deepEqual( Stem("erikkson"), "erikkson" );
	deepEqual( Stem("eriksson"), "eriksson" );
	deepEqual( Stem("erlanger"), "erlanger" );
	deepEqual( Stem("ermellini"), "ermellin" );
	deepEqual( Stem("ermetismo"), "ermet" );
	deepEqual( Stem("erminio"), "ermin" );
	deepEqual( Stem("ernesto"), "ernest" );
	deepEqual( Stem("ero"), "ero" );
	deepEqual( Stem("eroe"), "ero" );
	deepEqual( Stem("erogabile"), "erog" );
	deepEqual( Stem("erogati"), "erog" );
	deepEqual( Stem("erogato"), "erog" );
	deepEqual( Stem("erogatrice"), "erog" );
	deepEqual( Stem("erogazione"), "erog" );
	deepEqual( Stem("eroi"), "ero" );
	deepEqual( Stem("eroica"), "eroic" );
	deepEqual( Stem("eroico"), "eroic" );
	deepEqual( Stem("eroina"), "eroin" );
	deepEqual( Stem("eroismo"), "eroism" );
	deepEqual( Stem("erotici"), "erot" );
	deepEqual( Stem("err"), "err" );
	deepEqual( Stem("erranti"), "errant" );
	deepEqual( Stem("errato"), "errat" );
	deepEqual( Stem("erravano"), "errav" );
	deepEqual( Stem("errol"), "errol" );
	deepEqual( Stem("error"), "error" );
	deepEqual( Stem("errore"), "error" );
	deepEqual( Stem("errori"), "error" );
	deepEqual( Stem("erta"), "erta" );
	deepEqual( Stem("erte"), "erte" );
	deepEqual( Stem("erto"), "erto" );
	deepEqual( Stem("eruditamente"), "erudit" );
	deepEqual( Stem("erudite"), "erud" );
	deepEqual( Stem("erudito"), "erud" );
	deepEqual( Stem("erudizione"), "erudizion" );
	deepEqual( Stem("erzegovina"), "erzegovin" );
	deepEqual( Stem("es"), "es" );
	deepEqual( Stem("esacerbata"), "esacerb" );
	deepEqual( Stem("esacerbato"), "esacerb" );
	deepEqual( Stem("esacerbava"), "esacerb" );
	deepEqual( Stem("esacerbazione"), "esacerb" );
	deepEqual( Stem("esagerare"), "esager" );
	deepEqual( Stem("esagerata"), "esager" );
	deepEqual( Stem("esagerate"), "esager" );
	deepEqual( Stem("esagerato"), "esager" );
	deepEqual( Stem("esalano"), "esal" );
	deepEqual( Stem("esalava"), "esal" );
	deepEqual( Stem("esalazione"), "esal" );
	deepEqual( Stem("esalta"), "esalt" );
	deepEqual( Stem("esaltando"), "esalt" );
	deepEqual( Stem("esaltanti"), "esalt" );
	deepEqual( Stem("esaltare"), "esalt" );
	deepEqual( Stem("esaltati"), "esalt" );
	deepEqual( Stem("esaltato"), "esalt" );
	deepEqual( Stem("esaltavano"), "esalt" );
	deepEqual( Stem("esaltazione"), "esalt" );
	deepEqual( Stem("esame"), "esam" );
	deepEqual( Stem("esami"), "esam" );
	deepEqual( Stem("esamina"), "esamin" );
	deepEqual( Stem("esaminando"), "esamin" );
	deepEqual( Stem("esaminandole"), "esamin" );
	deepEqual( Stem("esaminar"), "esamin" );
	deepEqual( Stem("esaminare"), "esamin" );
	deepEqual( Stem("esaminarla"), "esamin" );
	deepEqual( Stem("esaminarle"), "esamin" );
	deepEqual( Stem("esaminata"), "esamin" );
	deepEqual( Stem("esaminate"), "esamin" );
	deepEqual( Stem("esaminati"), "esamin" );
	deepEqual( Stem("esaminato"), "esamin" );
	deepEqual( Stem("esaminator"), "esaminator" );
	deepEqual( Stem("esaminatore"), "esamin" );
	deepEqual( Stem("esaminava"), "esamin" );
	deepEqual( Stem("esaminerà"), "esamin" );
	deepEqual( Stem("esamineranno"), "esamin" );
	deepEqual( Stem("esamionando"), "esamion" );
	deepEqual( Stem("esantemi"), "esantem" );
	deepEqual( Stem("esasperata"), "esasper" );
	deepEqual( Stem("esasperati"), "esasper" );
	deepEqual( Stem("esasperato"), "esasper" );
	deepEqual( Stem("esasperazione"), "esasper" );
	deepEqual( Stem("esatta"), "esatt" );
	deepEqual( Stem("esattamente"), "esatt" );
	deepEqual( Stem("esatte"), "esatt" );
	deepEqual( Stem("esattezza"), "esattezz" );
	deepEqual( Stem("esattori"), "esattor" );
	deepEqual( Stem("esaudisce"), "esaud" );
	deepEqual( Stem("esaudita"), "esaud" );
	deepEqual( Stem("esauditela"), "esauditel" );
	deepEqual( Stem("esaudito"), "esaud" );
	deepEqual( Stem("esaurita"), "esaur" );
	deepEqual( Stem("esauritasi"), "esauritas" );
	deepEqual( Stem("esaurito"), "esaur" );
	deepEqual( Stem("esausta"), "esaust" );
	deepEqual( Stem("esausti"), "esaust" );
	deepEqual( Stem("esaustivo"), "esaust" );
	deepEqual( Stem("esausto"), "esaust" );
	deepEqual( Stem("esca"), "esca" );
	deepEqual( Stem("escalation"), "escalation" );
	deepEqual( Stem("escamotage"), "escamotag" );
	deepEqual( Stem("esce"), "esce" );
	deepEqual( Stem("esci"), "esci" );
	deepEqual( Stem("escimi"), "escim" );
	deepEqual( Stem("escl"), "escl" );
	deepEqual( Stem("esclama"), "esclam" );
	deepEqual( Stem("esclamando"), "esclam" );
	deepEqual( Stem("esclamare"), "esclam" );
	deepEqual( Stem("esclamarono"), "esclam" );
	deepEqual( Stem("esclamativi"), "esclam" );
	deepEqual( Stem("esclamato"), "esclam" );
	deepEqual( Stem("esclamava"), "esclam" );
	deepEqual( Stem("esclamavano"), "esclam" );
	deepEqual( Stem("esclamazione"), "esclam" );
	deepEqual( Stem("esclamazioni"), "esclam" );
	deepEqual( Stem("esclamò"), "esclam" );
	deepEqual( Stem("escluda"), "esclud" );
	deepEqual( Stem("esclude"), "esclud" );
	deepEqual( Stem("escludendo"), "esclud" );
	deepEqual( Stem("escludere"), "esclud" );
	deepEqual( Stem("escluderlo"), "esclud" );
	deepEqual( Stem("escludo"), "esclud" );
	deepEqual( Stem("escludono"), "esclud" );
	deepEqual( Stem("esclusa"), "esclus" );
	deepEqual( Stem("esclusà"), "esclus" );
	deepEqual( Stem("escluse"), "esclus" );
	deepEqual( Stem("esclusi"), "esclus" );
	deepEqual( Stem("esclusione"), "esclusion" );
	deepEqual( Stem("esclusiva"), "esclus" );
	deepEqual( Stem("esclusivamente"), "esclus" );
	deepEqual( Stem("esclusivo"), "esclus" );
	deepEqual( Stem("escluso"), "esclus" );
	deepEqual( Stem("esco"), "esco" );
	deepEqual( Stem("escogitata"), "escogit" );
	deepEqual( Stem("escono"), "escon" );
	deepEqual( Stem("escort"), "escort" );
	deepEqual( Stem("escudo"), "escud" );
	deepEqual( Stem("escuriale"), "escurial" );
	deepEqual( Stem("escursionisti"), "escursion" );
	deepEqual( Stem("esecrata"), "esecr" );
	deepEqual( Stem("esecrazione"), "esecr" );
	deepEqual( Stem("esecutiva"), "esecut" );
	deepEqual( Stem("esecutivi"), "esecut" );
	deepEqual( Stem("esecutivo"), "esecut" );
	deepEqual( Stem("esecutori"), "esecutor" );
	deepEqual( Stem("esecuzione"), "esecu" );
	deepEqual( Stem("eseguendo"), "esegu" );
	deepEqual( Stem("eseguì"), "esegu" );
	deepEqual( Stem("eseguir"), "esegu" );
	deepEqual( Stem("eseguire"), "esegu" );
	deepEqual( Stem("eseguirli"), "esegu" );
	deepEqual( Stem("eseguirlo"), "esegu" );
	deepEqual( Stem("eseguirsi"), "esegu" );
	deepEqual( Stem("eseguisce"), "esegu" );
	deepEqual( Stem("eseguita"), "esegu" );
	deepEqual( Stem("eseguite"), "esegu" );
	deepEqual( Stem("eseguiti"), "esegu" );
	deepEqual( Stem("eseguito"), "esegu" );
	deepEqual( Stem("eseguiva"), "esegu" );
	deepEqual( Stem("esempi"), "esemp" );
	deepEqual( Stem("esempio"), "esemp" );
	deepEqual( Stem("esemplare"), "esempl" );
	deepEqual( Stem("esenti"), "esent" );
	deepEqual( Stem("esenzione"), "esenzion" );
	deepEqual( Stem("esenzioni"), "esenzion" );
	deepEqual( Stem("esequie"), "esequ" );
	deepEqual( Stem("esercita"), "eserc" );
	deepEqual( Stem("esercitano"), "esercit" );
	deepEqual( Stem("esercitar"), "esercit" );
	deepEqual( Stem("esercitare"), "esercit" );
	deepEqual( Stem("esercitarne"), "esercit" );
	deepEqual( Stem("esercitarsi"), "esercit" );
	deepEqual( Stem("esercitata"), "esercit" );
	deepEqual( Stem("esercitate"), "esercit" );
	deepEqual( Stem("esercitato"), "esercit" );
	deepEqual( Stem("esercitava"), "esercit" );
	deepEqual( Stem("eserciteranno"), "esercit" );
	deepEqual( Stem("esercito"), "eserc" );
	deepEqual( Stem("esercitò"), "esercit" );
	deepEqual( Stem("esercizi"), "eserciz" );
	deepEqual( Stem("esercizio"), "eserciz" );
	deepEqual( Stem("esibì"), "esib" );
	deepEqual( Stem("esibire"), "esib" );
	deepEqual( Stem("esibirgli"), "esib" );
	deepEqual( Stem("esibiti"), "esib" );
	deepEqual( Stem("esibito"), "esib" );
	deepEqual( Stem("esibizione"), "esibizion" );
	deepEqual( Stem("esibizioni"), "esibizion" );
	deepEqual( Stem("esige"), "esig" );
	deepEqual( Stem("esigenza"), "esigent" );
	deepEqual( Stem("esigenze"), "esigent" );
	deepEqual( Stem("esigere"), "esig" );
	deepEqual( Stem("esigo"), "esig" );
	deepEqual( Stem("esigua"), "esigu" );
	deepEqual( Stem("esiguo"), "esigu" );
	deepEqual( Stem("esimersi"), "esim" );
	deepEqual( Stem("esimo"), "esim" );
	deepEqual( Stem("esista"), "esist" );
	deepEqual( Stem("esistano"), "esist" );
	deepEqual( Stem("esiste"), "esist" );
	deepEqual( Stem("esistente"), "esistent" );
	deepEqual( Stem("esistenti"), "esistent" );
	deepEqual( Stem("esistenza"), "esistent" );
	deepEqual( Stem("esistenziale"), "esistenzial" );
	deepEqual( Stem("esisterà"), "esist" );
	deepEqual( Stem("esistere"), "esist" );
	deepEqual( Stem("esisteva"), "esist" );
	deepEqual( Stem("esistevano"), "esist" );
	deepEqual( Stem("esistiti"), "esist" );
	deepEqual( Stem("esistono"), "esist" );
	deepEqual( Stem("esita"), "esit" );
	deepEqual( Stem("esitando"), "esit" );
	deepEqual( Stem("esitanti"), "esit" );
	deepEqual( Stem("esitare"), "esit" );
	deepEqual( Stem("esitato"), "esit" );
	deepEqual( Stem("esitava"), "esit" );
	deepEqual( Stem("esitazione"), "esit" );
	deepEqual( Stem("esitazioni"), "esit" );
	deepEqual( Stem("esite"), "esit" );
	deepEqual( Stem("esiterò"), "esit" );
	deepEqual( Stem("esiti"), "esit" );
	deepEqual( Stem("esito"), "esit" );
	deepEqual( Stem("esitò"), "esit" );
	deepEqual( Stem("eslam"), "eslam" );
	deepEqual( Stem("esorbitanti"), "esorbit" );
	deepEqual( Stem("esorcizzarla"), "esorcizz" );
	deepEqual( Stem("esordio"), "esord" );
	deepEqual( Stem("esordisce"), "esord" );
	deepEqual( Stem("esordito"), "esord" );
	deepEqual( Stem("esorta"), "esort" );
	deepEqual( Stem("esortarla"), "esort" );
	deepEqual( Stem("esortato"), "esort" );
	deepEqual( Stem("esortava"), "esort" );
	deepEqual( Stem("esortazione"), "esort" );
	deepEqual( Stem("esortazioni"), "esort" );
	deepEqual( Stem("esortino"), "esortin" );
	deepEqual( Stem("èsottratta"), "èsottratt" );
	deepEqual( Stem("espandendo"), "espand" );
	deepEqual( Stem("espanola"), "espanol" );
	deepEqual( Stem("espansione"), "espansion" );
	deepEqual( Stem("espediente"), "espedient" );
	deepEqual( Stem("espedienti"), "espedient" );
	deepEqual( Stem("espelle"), "espell" );
	deepEqual( Stem("espellere"), "espell" );
	deepEqual( Stem("esperienza"), "esperient" );
	deepEqual( Stem("esperienze"), "esperient" );
	deepEqual( Stem("esperimentar"), "esperiment" );
	deepEqual( Stem("esperimentata"), "esperiment" );
	deepEqual( Stem("esperimenti"), "esper" );
	deepEqual( Stem("esperimento"), "esper" );
	deepEqual( Stem("esperire"), "esper" );
	deepEqual( Stem("esperta"), "espert" );
	deepEqual( Stem("esperti"), "espert" );
	deepEqual( Stem("esperto"), "espert" );
	deepEqual( Stem("espiare"), "espi" );
	deepEqual( Stem("espiarla"), "espi" );
	deepEqual( Stem("espiarlo"), "espi" );
	deepEqual( Stem("espiazione"), "espiazion" );
	deepEqual( Stem("espletamento"), "esplet" );
	deepEqual( Stem("esplicitamente"), "esplicit" );
	deepEqual( Stem("esplicitato"), "esplicit" );
	deepEqual( Stem("esplicite"), "esplic" );
	deepEqual( Stem("esplicito"), "esplic" );
	deepEqual( Stem("esplode"), "esplod" );
	deepEqual( Stem("esplodere"), "esplod" );
	deepEqual( Stem("esplodono"), "esplod" );
	deepEqual( Stem("esplorando"), "esplor" );
	deepEqual( Stem("esplorare"), "esplor" );
	deepEqual( Stem("esplorati"), "esplor" );
	deepEqual( Stem("esploratori"), "esplor" );
	deepEqual( Stem("esplorazione"), "esplor" );
	deepEqual( Stem("esplorazioni"), "esplor" );
	deepEqual( Stem("esplorerà"), "esplor" );
	deepEqual( Stem("esplosa"), "esplos" );
	deepEqual( Stem("esplose"), "esplos" );
	deepEqual( Stem("esplosione"), "esplosion" );
	deepEqual( Stem("esplosioni"), "esplosion" );
	deepEqual( Stem("esplosive"), "esplos" );
	deepEqual( Stem("esplosivi"), "esplos" );
	deepEqual( Stem("esplosivo"), "esplos" );
	deepEqual( Stem("esploso"), "esplos" );
	deepEqual( Stem("esplusioni"), "esplusion" );
	deepEqual( Stem("espone"), "espon" );
	deepEqual( Stem("esponendo"), "espon" );
	deepEqual( Stem("esponente"), "esponent" );
	deepEqual( Stem("esponenti"), "esponent" );
	deepEqual( Stem("esponenziale"), "esponenzial" );
	deepEqual( Stem("esponevan"), "esponevan" );
	deepEqual( Stem("espongano"), "espong" );
	deepEqual( Stem("espongono"), "espong" );
	deepEqual( Stem("espoo"), "espo" );
	deepEqual( Stem("esporgli"), "esporgl" );
	deepEqual( Stem("esporle"), "esporl" );
	deepEqual( Stem("esporlo"), "esporl" );
	deepEqual( Stem("esporrà"), "esporr" );
	deepEqual( Stem("esporranno"), "esporrann" );
	deepEqual( Stem("esporre"), "esporr" );
	deepEqual( Stem("esportare"), "esport" );
	deepEqual( Stem("esportate"), "esport" );
	deepEqual( Stem("esportativa"), "esport" );
	deepEqual( Stem("esportatore"), "esport" );
	deepEqual( Stem("esportazione"), "esport" );
	deepEqual( Stem("esportazioni"), "esport" );
	deepEqual( Stem("espose"), "espos" );
	deepEqual( Stem("espositivi"), "esposit" );
	deepEqual( Stem("espositivo"), "esposit" );
	deepEqual( Stem("esposito"), "espos" );
	deepEqual( Stem("espositori"), "espositor" );
	deepEqual( Stem("esposizione"), "esposizion" );
	deepEqual( Stem("esposizioni"), "esposizion" );
	deepEqual( Stem("esposta"), "espost" );
	deepEqual( Stem("esposti"), "espost" );
	deepEqual( Stem("esposto"), "espost" );
	deepEqual( Stem("espressa"), "espress" );
	deepEqual( Stem("espressamente"), "espress" );
	deepEqual( Stem("espresse"), "espress" );
	deepEqual( Stem("espressi"), "espress" );
	deepEqual( Stem("espressione"), "espression" );
	deepEqual( Stem("espressioni"), "espression" );
	deepEqual( Stem("espressiva"), "espress" );
	deepEqual( Stem("espressive"), "espress" );
	deepEqual( Stem("espresso"), "espress" );
	deepEqual( Stem("esprima"), "esprim" );
	deepEqual( Stem("esprime"), "esprim" );
	deepEqual( Stem("esprimendo"), "esprim" );
	deepEqual( Stem("esprimer"), "esprimer" );
	deepEqual( Stem("esprimerà"), "esprim" );
	deepEqual( Stem("esprimerci"), "esprim" );
	deepEqual( Stem("esprimere"), "esprim" );
	deepEqual( Stem("esprimersi"), "esprim" );
	deepEqual( Stem("esprimeva"), "esprim" );
	deepEqual( Stem("esprimevan"), "esprimevan" );
	deepEqual( Stem("esprimevano"), "esprim" );
	deepEqual( Stem("esprimiamo"), "esprim" );
	deepEqual( Stem("esprimono"), "esprim" );
	deepEqual( Stem("espropriando"), "espropr" );
	deepEqual( Stem("espropriare"), "espropr" );
	deepEqual( Stem("espropriò"), "espropr" );
	deepEqual( Stem("espugnarlo"), "espugn" );
	deepEqual( Stem("espulsi"), "espuls" );
	deepEqual( Stem("espulsione"), "espulsion" );
	deepEqual( Stem("espulsioni"), "espulsion" );
	deepEqual( Stem("espulso"), "espuls" );
	deepEqual( Stem("essa"), "essa" );
	deepEqual( Stem("esse"), "esse" );
	deepEqual( Stem("essendo"), "essend" );
	deepEqual( Stem("essendoci"), "essendoc" );
	deepEqual( Stem("essendosegli"), "essendosegl" );
	deepEqual( Stem("essendosi"), "essend" );
	deepEqual( Stem("essendovi"), "essendov" );
	deepEqual( Stem("essent"), "essent" );
	deepEqual( Stem("essenza"), "essenz" );
	deepEqual( Stem("essenziale"), "essenzial" );
	deepEqual( Stem("essenziali"), "essenzial" );
	deepEqual( Stem("essenzialissima"), "essenzialissim" );
	deepEqual( Stem("essenzialissimo"), "essenzialissim" );
	deepEqual( Stem("esser"), "esser" );
	deepEqual( Stem("esserci"), "esserc" );
	deepEqual( Stem("essere"), "esser" );
	deepEqual( Stem("essergli"), "essergl" );
	deepEqual( Stem("esseri"), "esser" );
	deepEqual( Stem("esserlo"), "esserl" );
	deepEqual( Stem("esserne"), "essern" );
	deepEqual( Stem("essersi"), "essers" );
	deepEqual( Stem("essi"), "essi" );
	deepEqual( Stem("esso"), "esso" );
	deepEqual( Stem("est"), "est" );
	deepEqual( Stem("està"), "està" );
	deepEqual( Stem("establishment"), "establishment" );
	deepEqual( Stem("estamos"), "estamos" );
	deepEqual( Stem("estàmos"), "estàmos" );
	deepEqual( Stem("estasi"), "estas" );
	deepEqual( Stem("estate"), "estat" );
	deepEqual( Stem("estatè"), "estat" );
	deepEqual( Stem("estatica"), "estat" );
	deepEqual( Stem("estatici"), "estat" );
	deepEqual( Stem("estatico"), "estat" );
	deepEqual( Stem("èstato"), "èstat" );
	deepEqual( Stem("este"), "este" );
	deepEqual( Stem("esteban"), "esteban" );
	deepEqual( Stem("estemporanee"), "estemporane" );
	deepEqual( Stem("estenda"), "estend" );
	deepEqual( Stem("estende"), "estend" );
	deepEqual( Stem("estendendo"), "estend" );
	deepEqual( Stem("estenderanno"), "estend" );
	deepEqual( Stem("estendere"), "estend" );
	deepEqual( Stem("estendersi"), "estend" );
	deepEqual( Stem("estendono"), "estend" );
	deepEqual( Stem("estensione"), "estension" );
	deepEqual( Stem("estensore"), "estensor" );
	deepEqual( Stem("estenssoro"), "estenssor" );
	deepEqual( Stem("estenuati"), "estenu" );
	deepEqual( Stem("estenuazione"), "estenu" );
	deepEqual( Stem("estera"), "ester" );
	deepEqual( Stem("estere"), "ester" );
	deepEqual( Stem("esteri"), "ester" );
	deepEqual( Stem("esterino"), "esterin" );
	deepEqual( Stem("esteriore"), "esterior" );
	deepEqual( Stem("esterminio"), "estermin" );
	deepEqual( Stem("esterna"), "estern" );
	deepEqual( Stem("esternato"), "estern" );
	deepEqual( Stem("esternazione"), "estern" );
	deepEqual( Stem("esterne"), "estern" );
	deepEqual( Stem("esterni"), "estern" );
	deepEqual( Stem("esterno"), "estern" );
	deepEqual( Stem("estero"), "ester" );
	deepEqual( Stem("estesa"), "estes" );
	deepEqual( Stem("estese"), "estes" );
	deepEqual( Stem("estesi"), "estes" );
	deepEqual( Stem("esteso"), "estes" );
	deepEqual( Stem("estetica"), "estet" );
	deepEqual( Stem("esti"), "esti" );
	deepEqual( Stem("estingue"), "estingu" );
	deepEqual( Stem("estinguersi"), "estingu" );
	deepEqual( Stem("estinta"), "estint" );
	deepEqual( Stem("estinzione"), "estinzion" );
	deepEqual( Stem("estirpali"), "estirpal" );
	deepEqual( Stem("estirpare"), "estirp" );
	deepEqual( Stem("estirparlo"), "estirp" );
	deepEqual( Stem("esto"), "esto" );
	deepEqual( Stem("estorsione"), "estorsion" );
	deepEqual( Stem("estorte"), "estort" );
	deepEqual( Stem("estrada"), "estrad" );
	deepEqual( Stem("estradati"), "estrad" );
	deepEqual( Stem("estradizione"), "estradizion" );
	deepEqual( Stem("estranea"), "estrane" );
	deepEqual( Stem("estranee"), "estrane" );
	deepEqual( Stem("estranei"), "estrane" );
	deepEqual( Stem("estraneità"), "estran" );
	deepEqual( Stem("estraneo"), "estrane" );
	deepEqual( Stem("estrarre"), "estrarr" );
	deepEqual( Stem("estratti"), "estratt" );
	deepEqual( Stem("estratto"), "estratt" );
	deepEqual( Stem("estrazione"), "estrazion" );
	deepEqual( Stem("estrazioni"), "estrazion" );
	deepEqual( Stem("estrema"), "estrem" );
	deepEqual( Stem("estremamente"), "estrem" );
	deepEqual( Stem("estremi"), "estrem" );
	deepEqual( Stem("estremismo"), "estrem" );
	deepEqual( Stem("estremisti"), "estrem" );
	deepEqual( Stem("estremistiche"), "estremist" );
	deepEqual( Stem("estremità"), "estrem" );
	deepEqual( Stem("estremo"), "estrem" );
	deepEqual( Stem("estrenuamente"), "estrenu" );
	deepEqual( Stem("estromessa"), "estromess" );
	deepEqual( Stem("esuli"), "esul" );
	deepEqual( Stem("esultante"), "esult" );
	deepEqual( Stem("esultarono"), "esult" );
	deepEqual( Stem("et"), "et" );
	deepEqual( Stem("età"), "età" );
	deepEqual( Stem("etampes"), "etampes" );
	deepEqual( Stem("etc"), "etc" );
	deepEqual( Stem("etere"), "eter" );
	deepEqual( Stem("eterna"), "etern" );
	deepEqual( Stem("eterne"), "etern" );
	deepEqual( Stem("eternità"), "etern" );
	deepEqual( Stem("eteroclite"), "eterocl" );
	deepEqual( Stem("eterosessuali"), "eterosessual" );
	deepEqual( Stem("etica"), "etic" );
	deepEqual( Stem("etichette"), "etichett" );
	deepEqual( Stem("etici"), "etic" );
	deepEqual( Stem("etico"), "etic" );
	deepEqual( Stem("etienne"), "etienn" );
	deepEqual( Stem("etiopico"), "etiop" );
	deepEqual( Stem("etnei"), "etne" );
	deepEqual( Stem("etnia"), "etni" );
	deepEqual( Stem("etnico"), "etnic" );
	deepEqual( Stem("ètornato"), "ètorn" );
	deepEqual( Stem("etro"), "etro" );
	deepEqual( Stem("etruschi"), "etrusc" );
	deepEqual( Stem("ettari"), "ettar" );
	deepEqual( Stem("ette"), "ette" );
	deepEqual( Stem("ettore"), "ettor" );
	deepEqual( Stem("eufemismo"), "eufem" );
	deepEqual( Stem("euforia"), "eufor" );
	deepEqual( Stem("eufrate"), "eufr" );
	deepEqual( Stem("eugene"), "eugen" );
	deepEqual( Stem("eugenio"), "eugen" );
	deepEqual( Stem("èun"), "èun" );
	deepEqual( Stem("eurisko"), "eurisk" );
	deepEqual( Stem("eurispes"), "eurispes" );
	deepEqual( Stem("euro"), "eur" );
	deepEqual( Stem("euroazioni"), "euroazion" );
	deepEqual( Stem("eurobond"), "eurobond" );
	deepEqual( Stem("euromobiliare"), "euromobil" );
	deepEqual( Stem("euromoney"), "euromoney" );
	deepEqual( Stem("euronew"), "euronew" );
	deepEqual( Stem("euronews"), "euronews" );
	deepEqual( Stem("europa"), "europ" );
	deepEqual( Stem("europarlamentare"), "europarlament" );
	deepEqual( Stem("europe"), "europ" );
	deepEqual( Stem("europea"), "europe" );
	deepEqual( Stem("europee"), "europe" );
	deepEqual( Stem("europei"), "europe" );
	deepEqual( Stem("europeo"), "europe" );
	deepEqual( Stem("europeò"), "europe" );
	deepEqual( Stem("euroscetticismo"), "euroscettic" );
	deepEqual( Stem("eurotunnel"), "eurotunnel" );
	deepEqual( Stem("eusebio"), "euseb" );
	deepEqual( Stem("eva"), "eva" );
	deepEqual( Stem("evacuare"), "evacu" );
	deepEqual( Stem("evacuato"), "evacu" );
	deepEqual( Stem("evacuazione"), "evacu" );
	deepEqual( Stem("evangelica"), "evangel" );
	deepEqual( Stem("evangeliche"), "evangel" );
	deepEqual( Stem("evangelici"), "evangel" );
	deepEqual( Stem("evangelisti"), "evangel" );
	deepEqual( Stem("evani"), "evan" );
	deepEqual( Stem("evaporare"), "evapor" );
	deepEqual( Stem("eventi"), "event" );
	deepEqual( Stem("evento"), "event" );
	deepEqual( Stem("eventuale"), "eventual" );
	deepEqual( Stem("eventuali"), "eventual" );
	deepEqual( Stem("eventualmente"), "eventual" );
	deepEqual( Stem("evenutale"), "evenutal" );
	deepEqual( Stem("evidente"), "evident" );
	deepEqual( Stem("evidentemente"), "evident" );
	deepEqual( Stem("evidenti"), "evident" );
	deepEqual( Stem("evidenza"), "evident" );
	deepEqual( Stem("evidenzia"), "evidenz" );
	deepEqual( Stem("evidenziano"), "evidenz" );
	deepEqual( Stem("evidenziati"), "evidenz" );
	deepEqual( Stem("evidenziato"), "evidenz" );
	deepEqual( Stem("evita"), "evit" );
	deepEqual( Stem("evitabile"), "evit" );
	deepEqual( Stem("evitando"), "evit" );
	deepEqual( Stem("evitar"), "evit" );
	deepEqual( Stem("evitare"), "evit" );
	deepEqual( Stem("evitata"), "evit" );
	deepEqual( Stem("eviti"), "evit" );
	deepEqual( Stem("evo"), "evo" );
	deepEqual( Stem("evolution"), "evolution" );
	deepEqual( Stem("evolutivà"), "evolutiv" );
	deepEqual( Stem("evolutivo"), "evolut" );
	deepEqual( Stem("evoluzione"), "evolu" );
	deepEqual( Stem("evoluzioni"), "evolu" );
	deepEqual( Stem("evolversi"), "evolv" );
	deepEqual( Stem("evviva"), "evviv" );
	deepEqual( Stem("ex"), "ex" );
	deepEqual( Stem("exa"), "exa" );
	deepEqual( Stem("excelencia"), "excelenc" );
	deepEqual( Stem("excelsi"), "excels" );
	deepEqual( Stem("executive"), "execut" );
	deepEqual( Stem("exercicio"), "exercic" );
	deepEqual( Stem("exploit"), "exploit" );
	deepEqual( Stem("expo"), "expo" );
	deepEqual( Stem("export"), "export" );
	deepEqual( Stem("express"), "express" );
	deepEqual( Stem("exres"), "exres" );
	deepEqual( Stem("extra"), "extra" );
	deepEqual( Stem("extracomunitari"), "extracomunitar" );
	deepEqual( Stem("extracomunitarie"), "extracomunitar" );
	deepEqual( Stem("extracomunitario"), "extracomunitar" );
	deepEqual( Stem("extrader"), "extrader" );
	deepEqual( Stem("extraterrestre"), "extraterrestr" );
	deepEqual( Stem("extraurbano"), "extraurb" );
	deepEqual( Stem("extrema"), "extrem" );
	deepEqual( Stem("extremis"), "extremis" );
	deepEqual( Stem("exw"), "exw" );
	deepEqual( Stem("ezio"), "ezi" );
	deepEqual( Stem("ezln"), "ezln" );
	deepEqual( Stem("f"), "f" );
	deepEqual( Stem("fa"), "fa" );
	deepEqual( Stem("faa"), "faa" );
	deepEqual( Stem("fabbr"), "fabbr" );
	deepEqual( Stem("fabbri"), "fabbr" );
	deepEqual( Stem("fabbrica"), "fabbric" );
	deepEqual( Stem("fabbricare"), "fabbric" );
	deepEqual( Stem("fabbricatevelo"), "fabbricatevel" );
	deepEqual( Stem("fabbricazine"), "fabbricazin" );
	deepEqual( Stem("fabbricazione"), "fabbric" );
	deepEqual( Stem("fabbriche"), "fabbric" );
	deepEqual( Stem("fabbro"), "fabbr" );
	deepEqual( Stem("fabian"), "fabian" );
	deepEqual( Stem("fabianelli"), "fabianell" );
	deepEqual( Stem("fabio"), "fab" );
	deepEqual( Stem("fabrica"), "fabric" );
	deepEqual( Stem("fabrizio"), "fabriz" );
	deepEqual( Stem("fac"), "fac" );
	deepEqual( Stem("facce"), "facc" );
	deepEqual( Stem("faccenda"), "facc" );
	deepEqual( Stem("faccende"), "facc" );
	deepEqual( Stem("faccendiere"), "faccend" );
	deepEqual( Stem("faccendole"), "facc" );
	deepEqual( Stem("faccendoni"), "faccendon" );
	deepEqual( Stem("facchini"), "facchin" );
	deepEqual( Stem("faccia"), "facc" );
	deepEqual( Stem("facciale"), "faccial" );
	deepEqual( Stem("facciam"), "facciam" );
	deepEqual( Stem("facciamo"), "facc" );
	deepEqual( Stem("faccian"), "faccian" );
	deepEqual( Stem("facciano"), "facc" );
	deepEqual( Stem("facciata"), "facc" );
	deepEqual( Stem("facciate"), "facc" );
	deepEqual( Stem("faccio"), "facc" );
	deepEqual( Stem("facciole"), "facciol" );
	deepEqual( Stem("facendo"), "fac" );
	deepEqual( Stem("facendoci"), "fac" );
	deepEqual( Stem("facendogli"), "fac" );
	deepEqual( Stem("facendoglielo"), "fac" );
	deepEqual( Stem("facendola"), "fac" );
	deepEqual( Stem("facendole"), "fac" );
	deepEqual( Stem("facendolo"), "fac" );
	deepEqual( Stem("facendone"), "fac" );
	deepEqual( Stem("facendosegli"), "facendosegl" );
	deepEqual( Stem("facendoselo"), "facendosel" );
	deepEqual( Stem("facendosene"), "fac" );
	deepEqual( Stem("facendosi"), "fac" );
	deepEqual( Stem("facendovi"), "fac" );
	deepEqual( Stem("facente"), "facent" );
	deepEqual( Stem("facesse"), "facess" );
	deepEqual( Stem("facesser"), "facesser" );
	deepEqual( Stem("facessero"), "fac" );
	deepEqual( Stem("facessi"), "facess" );
	deepEqual( Stem("faceste"), "facest" );
	deepEqual( Stem("faceva"), "fac" );
	deepEqual( Stem("facevam"), "facevam" );
	deepEqual( Stem("facevan"), "facevan" );
	deepEqual( Stem("facevano"), "fac" );
	deepEqual( Stem("facevo"), "fac" );
	deepEqual( Stem("facile"), "facil" );
	deepEqual( Stem("facili"), "facil" );
	deepEqual( Stem("facilissima"), "facilissim" );
	deepEqual( Stem("facilità"), "facil" );
	deepEqual( Stem("facilitando"), "facilit" );
	deepEqual( Stem("facilitar"), "facilit" );
	deepEqual( Stem("facilitare"), "facilit" );
	deepEqual( Stem("facilitato"), "facilit" );
	deepEqual( Stem("faciliterà"), "facilit" );
	deepEqual( Stem("facilmente"), "facil" );
	deepEqual( Stem("facinorosi"), "facinor" );
	deepEqual( Stem("facinoroso"), "facinor" );
	deepEqual( Stem("facoltà"), "facolt" );
	deepEqual( Stem("facoltosissimi"), "facoltosissim" );
	deepEqual( Stem("facta"), "fact" );
	deepEqual( Stem("factory"), "factory" );
	deepEqual( Stem("factotum"), "factotum" );
	deepEqual( Stem("faema"), "faem" );
	deepEqual( Stem("faenza"), "faenz" );
	deepEqual( Stem("faggio"), "fagg" );
	deepEqual( Stem("fagocitati"), "fagocit" );
	deepEqual( Stem("fagotti"), "fagott" );
	deepEqual( Stem("fagottino"), "fagottin" );
	deepEqual( Stem("fagotto"), "fagott" );
	deepEqual( Stem("fai"), "fai" );
	deepEqual( Stem("faida"), "faid" );
	deepEqual( Stem("faine"), "fain" );
	deepEqual( Stem("fair"), "fair" );
	deepEqual( Stem("fakt"), "fakt" );
	deepEqual( Stem("fal"), "fal" );
	deepEqual( Stem("falce"), "falc" );
	deepEqual( Stem("falck"), "falck" );
	deepEqual( Stem("falco"), "falc" );
	deepEqual( Stem("falcone"), "falcon" );
	deepEqual( Stem("falda"), "fald" );
	deepEqual( Stem("falde"), "fald" );
	deepEqual( Stem("faldelle"), "faldell" );
	deepEqual( Stem("falkirk"), "falkirk" );
	deepEqual( Stem("falkland"), "falkland" );
	deepEqual( Stem("fallato"), "fall" );
	deepEqual( Stem("falle"), "fall" );
	deepEqual( Stem("fallemente"), "fallement" );
	deepEqual( Stem("fallimentare"), "falliment" );
	deepEqual( Stem("fallimenti"), "fall" );
	deepEqual( Stem("fallimento"), "fall" );
	deepEqual( Stem("fallirà"), "fall" );
	deepEqual( Stem("fallisce"), "fall" );
	deepEqual( Stem("fallita"), "fall" );
	deepEqual( Stem("fallito"), "fall" );
	deepEqual( Stem("fallo"), "fall" );
	deepEqual( Stem("falloso"), "fallos" );
	deepEqual( Stem("falò"), "fal" );
	deepEqual( Stem("falsa"), "fals" );
	deepEqual( Stem("falsamente"), "fals" );
	deepEqual( Stem("false"), "fals" );
	deepEqual( Stem("falsi"), "fals" );
	deepEqual( Stem("falsificazione"), "falsif" );
	deepEqual( Stem("falsificazioni"), "falsif" );
	deepEqual( Stem("falsifichi"), "falsif" );
	deepEqual( Stem("falso"), "fals" );
	deepEqual( Stem("fama"), "fam" );
	deepEqual( Stem("fame"), "fam" );
	deepEqual( Stem("famigerato"), "famiger" );
	deepEqual( Stem("famiglia"), "famigl" );
	deepEqual( Stem("famigliare"), "famigl" );
	deepEqual( Stem("famigliari"), "famigliar" );
	deepEqual( Stem("famigliarità"), "famigliar" );
	deepEqual( Stem("famigliarizzarsi"), "famigliarizz" );
	deepEqual( Stem("famigliarmente"), "famigliar" );
	deepEqual( Stem("famiglie"), "famigl" );
	deepEqual( Stem("famigliola"), "famigliol" );
	deepEqual( Stem("familiare"), "famil" );
	deepEqual( Stem("familiari"), "familiar" );
	deepEqual( Stem("familiarità"), "familiar" );
	deepEqual( Stem("family"), "family" );
	deepEqual( Stem("fammi"), "famm" );
	deepEqual( Stem("famosa"), "famos" );
	deepEqual( Stem("famosi"), "famos" );
	deepEqual( Stem("famosissimo"), "famosissim" );
	deepEqual( Stem("famoso"), "famos" );
	deepEqual( Stem("fan"), "fan" );
	deepEqual( Stem("fanatica"), "fanat" );
	deepEqual( Stem("fanatico"), "fanat" );
	deepEqual( Stem("fanatismo"), "fanat" );
	deepEqual( Stem("fanciulla"), "fanciull" );
	deepEqual( Stem("fanciulle"), "fanciull" );
	deepEqual( Stem("fanciulletta"), "fanciullett" );
	deepEqual( Stem("fanciullezza"), "fanciullezz" );
	deepEqual( Stem("fanciulli"), "fanciull" );
	deepEqual( Stem("fanciullina"), "fanciullin" );
	deepEqual( Stem("fanciulline"), "fanciullin" );
	deepEqual( Stem("fanciullo"), "fanciull" );
	deepEqual( Stem("fandonia"), "fandon" );
	deepEqual( Stem("fandonie"), "fandon" );
	deepEqual( Stem("fango"), "fang" );
	deepEqual( Stem("fangosa"), "fangos" );
	deepEqual( Stem("fanno"), "fann" );
	deepEqual( Stem("fanny"), "fanny" );
	deepEqual( Stem("fano"), "fan" );
	deepEqual( Stem("fans"), "fans" );
	deepEqual( Stem("fantascienza"), "fantascient" );
	deepEqual( Stem("fantasia"), "fantas" );
	deepEqual( Stem("fantasie"), "fantas" );
	deepEqual( Stem("fantasime"), "fantasim" );
	deepEqual( Stem("fantasma"), "fantasm" );
	deepEqual( Stem("fantasmi"), "fantasm" );
	deepEqual( Stem("fantastica"), "fantast" );
	deepEqual( Stem("fantasticaggini"), "fantasticaggin" );
	deepEqual( Stem("fantasticar"), "fantastic" );
	deepEqual( Stem("fantasticare"), "fantastic" );
	deepEqual( Stem("fantastico"), "fantast" );
	deepEqual( Stem("fante"), "fant" );
	deepEqual( Stem("fanteria"), "fanter" );
	deepEqual( Stem("fanti"), "fant" );
	deepEqual( Stem("fantoni"), "fanton" );
	deepEqual( Stem("fantozzi"), "fantozz" );
	deepEqual( Stem("fao"), "fao" );
	deepEqual( Stem("far"), "far" );
	deepEqual( Stem("fara"), "far" );
	deepEqual( Stem("farà"), "far" );
	deepEqual( Stem("farah"), "farah" );
	deepEqual( Stem("farai"), "fara" );
	deepEqual( Stem("faranno"), "farann" );
	deepEqual( Stem("faraone"), "faraon" );
	deepEqual( Stem("farassino"), "farassin" );
	deepEqual( Stem("farcele"), "farcel" );
	deepEqual( Stem("farci"), "farc" );
	deepEqual( Stem("fare"), "far" );
	deepEqual( Stem("farebbe"), "farebb" );
	deepEqual( Stem("farebbero"), "farebber" );
	deepEqual( Stem("farebbne"), "farebbn" );
	deepEqual( Stem("farei"), "fare" );
	deepEqual( Stem("faremmo"), "far" );
	deepEqual( Stem("faremo"), "farem" );
	deepEqual( Stem("fareste"), "farest" );
	deepEqual( Stem("faresti"), "farest" );
	deepEqual( Stem("farete"), "far" );
	deepEqual( Stem("farfalla"), "farfall" );
	deepEqual( Stem("farfalle"), "farfall" );
	deepEqual( Stem("fargli"), "fargl" );
	deepEqual( Stem("fargliela"), "fargliel" );
	deepEqual( Stem("fargliele"), "fargliel" );
	deepEqual( Stem("fargliene"), "farglien" );
	deepEqual( Stem("farina"), "farin" );
	deepEqual( Stem("farinacei"), "farinace" );
	deepEqual( Stem("farinaioli"), "farinaiol" );
	deepEqual( Stem("farine"), "farin" );
	deepEqual( Stem("farinella"), "farinell" );
	deepEqual( Stem("farinelli"), "farinell" );
	deepEqual( Stem("farisei"), "farise" );
	deepEqual( Stem("farla"), "farl" );
	deepEqual( Stem("farle"), "farl" );
	deepEqual( Stem("farli"), "farl" );
	deepEqual( Stem("farlo"), "farl" );
	deepEqual( Stem("farmaceutica"), "farmaceut" );
	deepEqual( Stem("farmaci"), "farmac" );
	deepEqual( Stem("farmacie"), "farmac" );
	deepEqual( Stem("farmaco"), "farmac" );
	deepEqual( Stem("farmela"), "farmel" );
	deepEqual( Stem("farmelo"), "farmel" );
	deepEqual( Stem("farmene"), "farmen" );
	deepEqual( Stem("farmi"), "farm" );
	deepEqual( Stem("farncese"), "farnces" );
	deepEqual( Stem("farne"), "farn" );
	deepEqual( Stem("farnesina"), "farnesin" );
	deepEqual( Stem("farneti"), "farnet" );
	deepEqual( Stem("faro"), "far" );
	deepEqual( Stem("farò"), "far" );
	deepEqual( Stem("faron"), "faron" );
	deepEqual( Stem("farraginose"), "farragin" );
	deepEqual( Stem("farris"), "farris" );
	deepEqual( Stem("farsene"), "farsen" );
	deepEqual( Stem("farsetti"), "farsett" );
	deepEqual( Stem("farsetto"), "farsett" );
	deepEqual( Stem("farsi"), "fars" );
	deepEqual( Stem("farti"), "fart" );
	deepEqual( Stem("faruk"), "faruk" );
	deepEqual( Stem("farvela"), "farvel" );
	deepEqual( Stem("farvelo"), "farvel" );
	deepEqual( Stem("farvene"), "farven" );
	deepEqual( Stem("farvi"), "farv" );
	deepEqual( Stem("fasano"), "fas" );
	deepEqual( Stem("fasce"), "fasc" );
	deepEqual( Stem("fascia"), "fasc" );
	deepEqual( Stem("fascicolo"), "fascicol" );
	deepEqual( Stem("fascino"), "fascin" );
	deepEqual( Stem("fascio"), "fasc" );
	deepEqual( Stem("fascismo"), "fascism" );
	deepEqual( Stem("fascista"), "fascist" );
	deepEqual( Stem("fascisti"), "fascist" );
	deepEqual( Stem("fase"), "fas" );
	deepEqual( Stem("fasi"), "fas" );
	deepEqual( Stem("faso"), "fas" );
	deepEqual( Stem("fassa"), "fass" );
	deepEqual( Stem("fassbinder"), "fassbinder" );
	deepEqual( Stem("fast"), "fast" );
	deepEqual( Stem("fasti"), "fast" );
	deepEqual( Stem("fastidio"), "fastid" );
	deepEqual( Stem("fastidiosa"), "fastid" );
	deepEqual( Stem("fastidiosi"), "fastid" );
	deepEqual( Stem("fastidioso"), "fastid" );
	deepEqual( Stem("fastidiuccio"), "fastidiucc" );
	deepEqual( Stem("fasto"), "fast" );
	deepEqual( Stem("fasulli"), "fasull" );
	deepEqual( Stem("fatale"), "fatal" );
	deepEqual( Stem("fatali"), "fatal" );
	deepEqual( Stem("fatalista"), "fatal" );
	deepEqual( Stem("fatalisti"), "fatal" );
	deepEqual( Stem("fate"), "fat" );
	deepEqual( Stem("fategli"), "fategl" );
	deepEqual( Stem("fatele"), "fatel" );
	deepEqual( Stem("fateli"), "fatel" );
	deepEqual( Stem("fatelo"), "fatel" );
	deepEqual( Stem("fatemi"), "fatem" );
	deepEqual( Stem("fatevi"), "fat" );
	deepEqual( Stem("fatica"), "fatic" );
	deepEqual( Stem("faticato"), "fatic" );
	deepEqual( Stem("fatiche"), "fatic" );
	deepEqual( Stem("faticosa"), "fatic" );
	deepEqual( Stem("faticose"), "fatic" );
	deepEqual( Stem("faticoso"), "fatic" );
	deepEqual( Stem("fatima"), "fatim" );
	deepEqual( Stem("fatma"), "fatm" );
	deepEqual( Stem("fatt"), "fatt" );
	deepEqual( Stem("fatta"), "fatt" );
	deepEqual( Stem("fattaccio"), "fattacc" );
	deepEqual( Stem("fattagli"), "fattagl" );
	deepEqual( Stem("fattasi"), "fattas" );
	deepEqual( Stem("fatte"), "fatt" );
	deepEqual( Stem("fattempo"), "fattemp" );
	deepEqual( Stem("fatti"), "fatt" );
	deepEqual( Stem("fattibile"), "fattibil" );
	deepEqual( Stem("fattizia"), "fattiz" );
	deepEqual( Stem("fatto"), "fatt" );
	deepEqual( Stem("fattore"), "fattor" );
	deepEqual( Stem("fattoressa"), "fattoress" );
	deepEqual( Stem("fattori"), "fattor" );
	deepEqual( Stem("fattosi"), "fattos" );
	deepEqual( Stem("fattura"), "fattur" );
	deepEqual( Stem("fatturato"), "fattur" );
	deepEqual( Stem("fatwà"), "fatw" );
	deepEqual( Stem("fausto"), "faust" );
	deepEqual( Stem("fautori"), "fautor" );
	deepEqual( Stem("fautrice"), "fautric" );
	deepEqual( Stem("favalli"), "favall" );
	deepEqual( Stem("faverio"), "faver" );
	deepEqual( Stem("favero"), "faver" );
	deepEqual( Stem("favi"), "fav" );
	deepEqual( Stem("favilla"), "favill" );
	deepEqual( Stem("favo"), "fav" );
	deepEqual( Stem("favole"), "favol" );
	deepEqual( Stem("favoloso"), "favol" );
	deepEqual( Stem("favor"), "favor" );
	deepEqual( Stem("favore"), "favor" );
	deepEqual( Stem("favoreggiamento"), "favoregg" );
	deepEqual( Stem("favorendo"), "favor" );
	deepEqual( Stem("favorevole"), "favorevol" );
	deepEqual( Stem("favorevoli"), "favorevol" );
	deepEqual( Stem("favorevolmente"), "favorevol" );
	deepEqual( Stem("favorirà"), "favor" );
	deepEqual( Stem("favorire"), "favor" );
	deepEqual( Stem("favorirete"), "favor" );
	deepEqual( Stem("favorirlo"), "favor" );
	deepEqual( Stem("favorisce"), "favor" );
	deepEqual( Stem("favorissero"), "favor" );
	deepEqual( Stem("favorita"), "favor" );
	deepEqual( Stem("favoriti"), "favor" );
	deepEqual( Stem("favorito"), "favor" );
	deepEqual( Stem("favre"), "favr" );
	deepEqual( Stem("favrè"), "favr" );
	deepEqual( Stem("favuzza"), "favuzz" );
	deepEqual( Stem("fax"), "fax" );
	deepEqual( Stem("fazio"), "faz" );
	deepEqual( Stem("fazione"), "fazion" );
	deepEqual( Stem("fazioni"), "fazion" );
	deepEqual( Stem("fazzoletti"), "fazzolett" );
	deepEqual( Stem("fazzoletto"), "fazzolett" );
	deepEqual( Stem("fazzuoli"), "fazzuol" );
	deepEqual( Stem("fb"), "fb" );
	deepEqual( Stem("fbb"), "fbb" );
	deepEqual( Stem("fc"), "fc" );
	deepEqual( Stem("fcc"), "fcc" );
	deepEqual( Stem("fdg"), "fdg" );
	deepEqual( Stem("fe"), "fe" );
	deepEqual( Stem("feb"), "feb" );
	deepEqual( Stem("febbario"), "febbar" );
	deepEqual( Stem("febbraio"), "febbrai" );
	deepEqual( Stem("febbre"), "febbr" );
	deepEqual( Stem("febbri"), "febbr" );
	deepEqual( Stem("febbriciattole"), "febbriciattol" );
	deepEqual( Stem("febbricitante"), "febbricit" );
	deepEqual( Stem("febbrone"), "febbron" );
	deepEqual( Stem("febraio"), "febrai" );
	deepEqual( Stem("fece"), "fec" );
	deepEqual( Stem("fecer"), "fecer" );
	deepEqual( Stem("fecero"), "fecer" );
	deepEqual( Stem("feci"), "fec" );
	deepEqual( Stem("feciale"), "fecial" );
	deepEqual( Stem("feciali"), "fecial" );
	deepEqual( Stem("fecondazione"), "fecond" );
	deepEqual( Stem("feconde"), "fecond" );
	deepEqual( Stem("fed"), "fed" );
	deepEqual( Stem("fedayn"), "fedayn" );
	deepEqual( Stem("fede"), "fed" );
	deepEqual( Stem("fedel"), "fedel" );
	deepEqual( Stem("fedele"), "fedel" );
	deepEqual( Stem("fedeli"), "fedel" );
	deepEqual( Stem("fedelissimi"), "fedelissim" );
	deepEqual( Stem("fedelmente"), "fedel" );
	deepEqual( Stem("fedeltà"), "fedelt" );
	deepEqual( Stem("federal"), "federal" );
	deepEqual( Stem("federale"), "federal" );
	deepEqual( Stem("federalè"), "federal" );
	deepEqual( Stem("federali"), "federal" );
	deepEqual( Stem("federalismo"), "federal" );
	deepEqual( Stem("federalista"), "federal" );
	deepEqual( Stem("federaliste"), "federal" );
	deepEqual( Stem("federalisti"), "federal" );
	deepEqual( Stem("federativi"), "feder" );
	deepEqual( Stem("federativo"), "feder" );
	deepEqual( Stem("federazione"), "feder" );
	deepEqual( Stem("federcalcio"), "federcalc" );
	deepEqual( Stem("federconsorzi"), "federconsorz" );
	deepEqual( Stem("federcoopesca"), "federcoopesc" );
	deepEqual( Stem("federica"), "feder" );
	deepEqual( Stem("federici"), "feder" );
	deepEqual( Stem("federico"), "feder" );
	deepEqual( Stem("federigo"), "federig" );
	deepEqual( Stem("federmar"), "federm" );
	deepEqual( Stem("federmeccanica"), "federmeccan" );
	deepEqual( Stem("federpesca"), "federpesc" );
	deepEqual( Stem("federtrasporti"), "federtrasport" );
	deepEqual( Stem("fedi"), "fed" );
	deepEqual( Stem("fedrale"), "fedral" );
	deepEqual( Stem("fedralismo"), "fedral" );
	deepEqual( Stem("felci"), "felc" );
	deepEqual( Stem("felice"), "felic" );
	deepEqual( Stem("felicè"), "felic" );
	deepEqual( Stem("felicemente"), "felic" );
	deepEqual( Stem("felici"), "felic" );
	deepEqual( Stem("felicità"), "felic" );
	deepEqual( Stem("fellini"), "fellin" );
	deepEqual( Stem("fellonesco"), "fellonesc" );
	deepEqual( Stem("feltri"), "feltr" );
	deepEqual( Stem("fem"), "fem" );
	deepEqual( Stem("femmine"), "femmin" );
	deepEqual( Stem("femminile"), "femminil" );
	deepEqual( Stem("femminili"), "femminil" );
	deepEqual( Stem("femmminili"), "femmminil" );
	deepEqual( Stem("fendendo"), "fend" );
	deepEqual( Stem("fendeva"), "fend" );
	deepEqual( Stem("fenice"), "fenic" );
	deepEqual( Stem("fenile"), "fenil" );
	deepEqual( Stem("fenit"), "fenit" );
	deepEqual( Stem("fenomeni"), "fenomen" );
	deepEqual( Stem("fenomeno"), "fenomen" );
	deepEqual( Stem("fenwick"), "fenwick" );
	deepEqual( Stem("fercolo"), "fercol" );
	deepEqual( Stem("ferdinando"), "ferdin" );
	deepEqual( Stem("ferenc"), "ferenc" );
	deepEqual( Stem("ferendo"), "fer" );
	deepEqual( Stem("ferentes"), "ferentes" );
	deepEqual( Stem("feretro"), "feretr" );
	deepEqual( Stem("ferfin"), "ferfin" );
	deepEqual( Stem("ferì"), "fer" );
	deepEqual( Stem("feria"), "fer" );
	deepEqual( Stem("ferimento"), "fer" );
	deepEqual( Stem("ferire"), "fer" );
	deepEqual( Stem("ferita"), "fer" );
	deepEqual( Stem("ferite"), "fer" );
	deepEqual( Stem("feriti"), "fer" );
	deepEqual( Stem("ferito"), "fer" );
	deepEqual( Stem("feritoia"), "feritoi" );
	deepEqual( Stem("feritoie"), "feritoi" );
	deepEqual( Stem("feritore"), "feritor" );
	deepEqual( Stem("ferma"), "ferm" );
	deepEqual( Stem("fermali"), "fermal" );
	deepEqual( Stem("fermamente"), "ferm" );
	deepEqual( Stem("fermana"), "ferman" );
	deepEqual( Stem("fermandola"), "ferm" );
	deepEqual( Stem("fermandosegli"), "fermandosegl" );
	deepEqual( Stem("fermandosi"), "ferm" );
	deepEqual( Stem("fermanelli"), "fermanell" );
	deepEqual( Stem("fermano"), "ferm" );
	deepEqual( Stem("fermar"), "ferm" );
	deepEqual( Stem("fermarci"), "ferm" );
	deepEqual( Stem("fermare"), "ferm" );
	deepEqual( Stem("fermarlo"), "ferm" );
	deepEqual( Stem("fermarmi"), "ferm" );
	deepEqual( Stem("fermaron"), "fermaron" );
	deepEqual( Stem("fermarono"), "ferm" );
	deepEqual( Stem("fermarsi"), "ferm" );
	deepEqual( Stem("fermarvi"), "ferm" );
	deepEqual( Stem("fermasse"), "ferm" );
	deepEqual( Stem("fermassero"), "ferm" );
	deepEqual( Stem("fermata"), "ferm" );
	deepEqual( Stem("fermate"), "ferm" );
	deepEqual( Stem("fermati"), "ferm" );
	deepEqual( Stem("fermatina"), "fermatin" );
	deepEqual( Stem("fermatine"), "fermatin" );
	deepEqual( Stem("fermato"), "ferm" );
	deepEqual( Stem("fermatosi"), "fermat" );
	deepEqual( Stem("fermava"), "ferm" );
	deepEqual( Stem("fermavano"), "ferm" );
	deepEqual( Stem("ferme"), "ferm" );
	deepEqual( Stem("fermerà"), "ferm" );
	deepEqual( Stem("fermeremo"), "ferm" );
	deepEqual( Stem("fermerò"), "ferm" );
	deepEqual( Stem("fermezza"), "fermezz" );
	deepEqual( Stem("fermi"), "ferm" );
	deepEqual( Stem("fermiamo"), "ferm" );
	deepEqual( Stem("fermissimamente"), "fermissim" );
	deepEqual( Stem("fermissimo"), "fermissim" );
	deepEqual( Stem("fermo"), "ferm" );
	deepEqual( Stem("fermò"), "ferm" );
	deepEqual( Stem("fernanda"), "fernand" );
	deepEqual( Stem("fernandez"), "fernandez" );
	deepEqual( Stem("fernando"), "fern" );
	deepEqual( Stem("feroce"), "feroc" );
	deepEqual( Stem("ferocemente"), "feroc" );
	deepEqual( Stem("ferocia"), "feroc" );
	deepEqual( Stem("ferrante"), "ferrant" );
	deepEqual( Stem("ferrara"), "ferrar" );
	deepEqual( Stem("ferrarese"), "ferrares" );
	deepEqual( Stem("ferraresi"), "ferrares" );
	deepEqual( Stem("ferrari"), "ferrar" );
	deepEqual( Stem("ferraris"), "ferraris" );
	deepEqual( Stem("ferrati"), "ferr" );
	deepEqual( Stem("ferrea"), "ferre" );
	deepEqual( Stem("ferreira"), "ferreir" );
	deepEqual( Stem("ferreo"), "ferre" );
	deepEqual( Stem("ferrer"), "ferrer" );
	deepEqual( Stem("ferrero"), "ferrer" );
	deepEqual( Stem("ferri"), "ferr" );
	deepEqual( Stem("ferrigno"), "ferrign" );
	deepEqual( Stem("ferro"), "ferr" );
	deepEqual( Stem("ferron"), "ferron" );
	deepEqual( Stem("ferroni"), "ferron" );
	deepEqual( Stem("ferroso"), "ferros" );
	deepEqual( Stem("ferrovia"), "ferrov" );
	deepEqual( Stem("ferroviari"), "ferroviar" );
	deepEqual( Stem("ferroviaria"), "ferroviar" );
	deepEqual( Stem("ferroviarie"), "ferroviar" );
	deepEqual( Stem("ferroviario"), "ferroviar" );
	deepEqual( Stem("ferrovie"), "ferrov" );
	deepEqual( Stem("ferruzzi"), "ferruzz" );
	deepEqual( Stem("fervidamente"), "fervid" );
	deepEqual( Stem("fervore"), "fervor" );
	deepEqual( Stem("fessa"), "fess" );
	deepEqual( Stem("fessi"), "fess" );
	deepEqual( Stem("fesso"), "fess" );
	deepEqual( Stem("fessolino"), "fessolin" );
	deepEqual( Stem("fessure"), "fessur" );
	deepEqual( Stem("festa"), "fest" );
	deepEqual( Stem("feste"), "fest" );
	deepEqual( Stem("festeggerà"), "festegg" );
	deepEqual( Stem("festeggia"), "festegg" );
	deepEqual( Stem("festeggiamenti"), "festegg" );
	deepEqual( Stem("festeggiare"), "festegg" );
	deepEqual( Stem("festeggiata"), "festegg" );
	deepEqual( Stem("festeggiatissimo"), "festeggiatissim" );
	deepEqual( Stem("festini"), "festin" );
	deepEqual( Stem("festiva"), "fest" );
	deepEqual( Stem("festival"), "festival" );
	deepEqual( Stem("fetente"), "fetent" );
	deepEqual( Stem("fetor"), "fetor" );
	deepEqual( Stem("fetta"), "fett" );
	deepEqual( Stem("fette"), "fett" );
	deepEqual( Stem("feudatarii"), "feudatar" );
	deepEqual( Stem("feudatario"), "feudatar" );
	deepEqual( Stem("feudi"), "feud" );
	deepEqual( Stem("feudo"), "feud" );
	deepEqual( Stem("ff"), "ff" );
	deepEqual( Stem("fg"), "fg" );
	deepEqual( Stem("fi"), "fi" );
	deepEqual( Stem("fiaba"), "fiab" );
	deepEqual( Stem("fiabe"), "fiab" );
	deepEqual( Stem("fiacca"), "fiacc" );
	deepEqual( Stem("fiaccate"), "fiacc" );
	deepEqual( Stem("fiacchezza"), "fiacchezz" );
	deepEqual( Stem("fiacchi"), "fiacc" );
	deepEqual( Stem("fiacco"), "fiacc" );
	deepEqual( Stem("fiaccole"), "fiaccol" );
	deepEqual( Stem("fialdini"), "fialdin" );
	deepEqual( Stem("fiamma"), "fiamm" );
	deepEqual( Stem("fiammà"), "fiamm" );
	deepEqual( Stem("fiammata"), "fiamm" );
	deepEqual( Stem("fiammate"), "fiamm" );
	deepEqual( Stem("fiamme"), "fiamm" );
	deepEqual( Stem("fiancheggiata"), "fianchegg" );
	deepEqual( Stem("fiancheggiate"), "fianchegg" );
	deepEqual( Stem("fianchi"), "fianc" );
	deepEqual( Stem("fianco"), "fianc" );
	deepEqual( Stem("fiandra"), "fiandr" );
	deepEqual( Stem("fiandre"), "fiandr" );
	deepEqual( Stem("fiar"), "fiar" );
	deepEqual( Stem("fiaschetti"), "fiaschett" );
	deepEqual( Stem("fiaschetto"), "fiaschett" );
	deepEqual( Stem("fiaschi"), "fiasc" );
	deepEqual( Stem("fiasco"), "fiasc" );
	deepEqual( Stem("fiat"), "fiat" );
	deepEqual( Stem("fiata"), "fiat" );
	deepEqual( Stem("fiatar"), "fiat" );
	deepEqual( Stem("fiatare"), "fiat" );
	deepEqual( Stem("fiatava"), "fiat" );
	deepEqual( Stem("fiaterebbe"), "fiat" );
	deepEqual( Stem("fiato"), "fiat" );
	deepEqual( Stem("fiatò"), "fiat" );
	deepEqual( Stem("fibra"), "fibr" );
	deepEqual( Stem("fibre"), "fibr" );
	deepEqual( Stem("ficca"), "ficc" );
	deepEqual( Stem("ficcadenti"), "ficcadent" );
	deepEqual( Stem("ficcan"), "ficcan" );
	deepEqual( Stem("ficcandogli"), "ficc" );
	deepEqual( Stem("ficcandosi"), "ficc" );
	deepEqual( Stem("ficcare"), "ficc" );
	deepEqual( Stem("ficcata"), "ficc" );
	deepEqual( Stem("ficcati"), "ficc" );
	deepEqual( Stem("ficcò"), "ficc" );
	deepEqual( Stem("fiches"), "fiches" );
	deepEqual( Stem("fichi"), "fich" );
	deepEqual( Stem("fico"), "fic" );
	deepEqual( Stem("fictas"), "fictas" );
	deepEqual( Stem("fida"), "fid" );
	deepEqual( Stem("fidando"), "fid" );
	deepEqual( Stem("fidanzata"), "fidanz" );
	deepEqual( Stem("fidanzato"), "fidanz" );
	deepEqual( Stem("fidare"), "fid" );
	deepEqual( Stem("fidarmi"), "fid" );
	deepEqual( Stem("fidarsi"), "fid" );
	deepEqual( Stem("fidarvi"), "fid" );
	deepEqual( Stem("fidata"), "fid" );
	deepEqual( Stem("fidate"), "fid" );
	deepEqual( Stem("fidatevi"), "fidat" );
	deepEqual( Stem("fidati"), "fid" );
	deepEqual( Stem("fidatissimo"), "fidatissim" );
	deepEqual( Stem("fidato"), "fid" );
	deepEqual( Stem("fidecommisso"), "fidecommiss" );
	deepEqual( Stem("fidei"), "fide" );
	deepEqual( Stem("fideuram"), "fideuram" );
	deepEqual( Stem("fidi"), "fid" );
	deepEqual( Stem("fidiamo"), "fid" );
	deepEqual( Stem("fidis"), "fidis" );
	deepEqual( Stem("fido"), "fid" );
	deepEqual( Stem("fidone"), "fidon" );
	deepEqual( Stem("fiducia"), "fiduc" );
	deepEqual( Stem("fiducià"), "fiduc" );
	deepEqual( Stem("fiduciario"), "fiduciar" );
	deepEqual( Stem("fiele"), "fiel" );
	deepEqual( Stem("fieno"), "fien" );
	deepEqual( Stem("fiera"), "fier" );
	deepEqual( Stem("fieramente"), "fier" );
	deepEqual( Stem("fiere"), "fier" );
	deepEqual( Stem("fierezza"), "fierezz" );
	deepEqual( Stem("fieri"), "fier" );
	deepEqual( Stem("fieristica"), "fierist" );
	deepEqual( Stem("fieristiche"), "fierist" );
	deepEqual( Stem("fieristico"), "fierist" );
	deepEqual( Stem("fiesole"), "fiesol" );
	deepEqual( Stem("figli"), "figl" );
	deepEqual( Stem("figlia"), "figl" );
	deepEqual( Stem("figlie"), "figl" );
	deepEqual( Stem("figlio"), "figl" );
	deepEqual( Stem("figliolanza"), "figliol" );
	deepEqual( Stem("figlioletta"), "figliolett" );
	deepEqual( Stem("figlioletto"), "figliolett" );
	deepEqual( Stem("figliuol"), "figliuol" );
	deepEqual( Stem("figliuola"), "figliuol" );
	deepEqual( Stem("figliuoli"), "figliuol" );
	deepEqual( Stem("figliuolo"), "figliuol" );
	deepEqual( Stem("fignolo"), "fignol" );
	deepEqual( Stem("figueroa"), "figuero" );
	deepEqual( Stem("figura"), "figur" );
	deepEqual( Stem("figuracce"), "figuracc" );
	deepEqual( Stem("figurando"), "figur" );
	deepEqual( Stem("figurano"), "figur" );
	deepEqual( Stem("figurare"), "figur" );
	deepEqual( Stem("figurarsi"), "figur" );
	deepEqual( Stem("figuratevi"), "figurat" );
	deepEqual( Stem("figurati"), "figur" );
	deepEqual( Stem("figurato"), "figur" );
	deepEqual( Stem("figurava"), "figur" );
	deepEqual( Stem("figuravano"), "figur" );
	deepEqual( Stem("figure"), "figur" );
	deepEqual( Stem("figureranno"), "figur" );
	deepEqual( Stem("figuri"), "figur" );
	deepEqual( Stem("figuriamoci"), "figuriamoc" );
	deepEqual( Stem("figurine"), "figurin" );
	deepEqual( Stem("figuro"), "figur" );
	deepEqual( Stem("figurò"), "figur" );
	deepEqual( Stem("fikret"), "fikret" );
	deepEqual( Stem("fil"), "fil" );
	deepEqual( Stem("fila"), "fil" );
	deepEqual( Stem("filadelfia"), "filadelf" );
	deepEqual( Stem("filanda"), "filand" );
	deepEqual( Stem("filari"), "filar" );
	deepEqual( Stem("filarmonica"), "filarmon" );
	deepEqual( Stem("filastrocca"), "filastrocc" );
	deepEqual( Stem("filaticcio"), "filaticc" );
	deepEqual( Stem("filato"), "fil" );
	deepEqual( Stem("filatoio"), "filatoi" );
	deepEqual( Stem("filatore"), "filator" );
	deepEqual( Stem("filatura"), "filatur" );
	deepEqual( Stem("file"), "fil" );
	deepEqual( Stem("files"), "files" );
	deepEqual( Stem("fili"), "fil" );
	deepEqual( Stem("filiali"), "filial" );
	deepEqual( Stem("filicano"), "filic" );
	deepEqual( Stem("filigrana"), "filigran" );
	deepEqual( Stem("filipovic"), "filipovic" );
	deepEqual( Stem("filippi"), "filipp" );
	deepEqual( Stem("filippine"), "filippin" );
	deepEqual( Stem("filippini"), "filippin" );
	deepEqual( Stem("filippo"), "filipp" );
	deepEqual( Stem("film"), "film" );
	deepEqual( Stem("filmato"), "film" );
	deepEqual( Stem("filmissimi"), "filmissim" );
	deepEqual( Stem("filmtv"), "filmtv" );
	deepEqual( Stem("filo"), "fil" );
	deepEqual( Stem("filobus"), "filobus" );
	deepEqual( Stem("filone"), "filon" );
	deepEqual( Stem("filoni"), "filon" );
	deepEqual( Stem("filoserbo"), "filoserb" );
	deepEqual( Stem("filosofi"), "filosof" );
	deepEqual( Stem("filosofia"), "filosof" );
	deepEqual( Stem("filosofo"), "filosof" );
	deepEqual( Stem("filt"), "filt" );
	deepEqual( Stem("fim"), "fim" );
	deepEqual( Stem("fimpar"), "fimp" );
	deepEqual( Stem("fin"), "fin" );
	deepEqual( Stem("finale"), "final" );
	deepEqual( Stem("finali"), "final" );
	deepEqual( Stem("finaliste"), "final" );
	deepEqual( Stem("finalisti"), "final" );
	deepEqual( Stem("finalità"), "final" );
	deepEqual( Stem("finalizzata"), "finalizz" );
	deepEqual( Stem("finalizzati"), "finalizz" );
	deepEqual( Stem("finalizzato"), "finalizz" );
	deepEqual( Stem("finalmente"), "final" );
	deepEqual( Stem("finan"), "finan" );
	deepEqual( Stem("finance"), "financ" );
	deepEqual( Stem("financing"), "financing" );
	deepEqual( Stem("finansur"), "finansur" );
	deepEqual( Stem("finanz"), "finanz" );
	deepEqual( Stem("finanza"), "finanz" );
	deepEqual( Stem("finanze"), "finanz" );
	deepEqual( Stem("finanzia"), "finanz" );
	deepEqual( Stem("finanziamenti"), "finanz" );
	deepEqual( Stem("finanziamento"), "finanz" );
	deepEqual( Stem("finanziando"), "finanz" );
	deepEqual( Stem("finanziare"), "finanz" );
	deepEqual( Stem("finanziari"), "finanziar" );
	deepEqual( Stem("finanziaria"), "finanziar" );
	deepEqual( Stem("finanziarie"), "finanziar" );
	deepEqual( Stem("finanziario"), "finanziar" );
	deepEqual( Stem("finanziarla"), "finanz" );
	deepEqual( Stem("finanziati"), "finanz" );
	deepEqual( Stem("finanziato"), "finanz" );
	deepEqual( Stem("finanziatori"), "finanz" );
	deepEqual( Stem("finanziemnti"), "finanziemnt" );
	deepEqual( Stem("finanziere"), "finanz" );
	deepEqual( Stem("finarte"), "finart" );
	deepEqual( Stem("fincantieri"), "fincantier" );
	deepEqual( Stem("fincasa"), "fincas" );
	deepEqual( Stem("finch"), "finc" );
	deepEqual( Stem("finché"), "finc" );
	deepEqual( Stem("finchè"), "finc" );
	deepEqual( Stem("fine"), "fin" );
	deepEqual( Stem("finendo"), "fin" );
	deepEqual( Stem("finestra"), "finestr" );
	deepEqual( Stem("finestre"), "finestr" );
	deepEqual( Stem("finestrina"), "finestrin" );
	deepEqual( Stem("finestrino"), "finestrin" );
	deepEqual( Stem("finezze"), "finezz" );
	deepEqual( Stem("fingendo"), "fing" );
	deepEqual( Stem("fingendosi"), "fing" );
	deepEqual( Stem("fini"), "fin" );
	deepEqual( Stem("finì"), "fin" );
	deepEqual( Stem("finiamola"), "finiamol" );
	deepEqual( Stem("fininvest"), "fininvest" );
	deepEqual( Stem("finir"), "fin" );
	deepEqual( Stem("finirà"), "fin" );
	deepEqual( Stem("finire"), "fin" );
	deepEqual( Stem("finirebbe"), "fin" );
	deepEqual( Stem("finirebbero"), "fin" );
	deepEqual( Stem("finiremmo"), "fin" );
	deepEqual( Stem("finirla"), "fin" );
	deepEqual( Stem("finirlo"), "fin" );
	deepEqual( Stem("finirò"), "fin" );
	deepEqual( Stem("finirono"), "fin" );
	deepEqual( Stem("finirsi"), "fin" );
	deepEqual( Stem("finisca"), "fin" );
	deepEqual( Stem("finiscano"), "fin" );
	deepEqual( Stem("finisce"), "fin" );
	deepEqual( Stem("finisco"), "fin" );
	deepEqual( Stem("finiscono"), "fin" );
	deepEqual( Stem("finisse"), "finiss" );
	deepEqual( Stem("finissimo"), "finissim" );
	deepEqual( Stem("finita"), "fin" );
	deepEqual( Stem("finite"), "fin" );
	deepEqual( Stem("finitela"), "finitel" );
	deepEqual( Stem("finitezza"), "finitezz" );
	deepEqual( Stem("finiti"), "fin" );
	deepEqual( Stem("finito"), "fin" );
	deepEqual( Stem("finiva"), "fin" );
	deepEqual( Stem("finivan"), "finivan" );
	deepEqual( Stem("finivano"), "fin" );
	deepEqual( Stem("finlandese"), "finlandes" );
	deepEqual( Stem("finlandia"), "finland" );
	deepEqual( Stem("finmare"), "finm" );
	deepEqual( Stem("finmark"), "finmark" );
	deepEqual( Stem("finmeccanica"), "finmeccan" );
	deepEqual( Stem("fino"), "fin" );
	deepEqual( Stem("finora"), "finor" );
	deepEqual( Stem("finrex"), "finrex" );
	deepEqual( Stem("finse"), "fins" );
	deepEqual( Stem("finsur"), "finsur" );
	deepEqual( Stem("finta"), "fint" );
	deepEqual( Stem("finti"), "fint" );
	deepEqual( Stem("finto"), "fint" );
	deepEqual( Stem("finzi"), "finz" );
	deepEqual( Stem("finzioni"), "finzion" );
	deepEqual( Stem("fio"), "fio" );
	deepEqual( Stem("fioca"), "fioc" );
	deepEqual( Stem("fioccano"), "fiocc" );
	deepEqual( Stem("fioccavan"), "fioccavan" );
	deepEqual( Stem("fiocchi"), "fiocc" );
	deepEqual( Stem("fiochi"), "fioc" );
	deepEqual( Stem("fioco"), "fioc" );
	deepEqual( Stem("fiom"), "fiom" );
	deepEqual( Stem("fionda"), "fiond" );
	deepEqual( Stem("fior"), "fior" );
	deepEqual( Stem("fiore"), "fior" );
	deepEqual( Stem("fiorella"), "fiorell" );
	deepEqual( Stem("fiorellini"), "fiorellin" );
	deepEqual( Stem("fiorellino"), "fiorellin" );
	deepEqual( Stem("fiorello"), "fiorell" );
	deepEqual( Stem("fiorentina"), "fiorentin" );
	deepEqual( Stem("fiorentino"), "fiorentin" );
	deepEqual( Stem("fiorenzuola"), "fiorenzuol" );
	deepEqual( Stem("fioretto"), "fiorett" );
	deepEqual( Stem("fiori"), "fior" );
	deepEqual( Stem("fiorì"), "fior" );
	deepEqual( Stem("fiorino"), "fiorin" );
	deepEqual( Stem("fiorita"), "fior" );
	deepEqual( Stem("fiotto"), "fiott" );
	deepEqual( Stem("fir"), "fir" );
	deepEqual( Stem("firenze"), "firenz" );
	deepEqual( Stem("firicano"), "firic" );
	deepEqual( Stem("firma"), "firm" );
	deepEqual( Stem("firmare"), "firm" );
	deepEqual( Stem("firmata"), "firm" );
	deepEqual( Stem("firmatari"), "firmatar" );
	deepEqual( Stem("firmatario"), "firmatar" );
	deepEqual( Stem("firmatati"), "firmat" );
	deepEqual( Stem("firmate"), "firm" );
	deepEqual( Stem("firmato"), "firm" );
	deepEqual( Stem("firme"), "firm" );
	deepEqual( Stem("firmeranno"), "firm" );
	deepEqual( Stem("firmiamo"), "firm" );
	deepEqual( Stem("firrincieli"), "firrinciel" );
	deepEqual( Stem("fis"), "fis" );
	deepEqual( Stem("fisafs"), "fisafs" );
	deepEqual( Stem("fisarmonica"), "fisarmon" );
	deepEqual( Stem("fiscale"), "fiscal" );
	deepEqual( Stem("fiscali"), "fiscal" );
	deepEqual( Stem("fiscalità"), "fiscal" );
	deepEqual( Stem("fiscambi"), "fiscamb" );
	deepEqual( Stem("fischi"), "fisc" );
	deepEqual( Stem("fischiando"), "fisc" );
	deepEqual( Stem("fischiare"), "fisc" );
	deepEqual( Stem("fischiate"), "fisc" );
	deepEqual( Stem("fischiato"), "fisc" );
	deepEqual( Stem("fischietti"), "fischiett" );
	deepEqual( Stem("fischio"), "fisc" );
	deepEqual( Stem("fischìo"), "fischì" );
	deepEqual( Stem("fischler"), "fischler" );
	deepEqual( Stem("fisco"), "fisc" );
	deepEqual( Stem("fisher"), "fisher" );
	deepEqual( Stem("fisia"), "fis" );
	deepEqual( Stem("fisica"), "fisic" );
	deepEqual( Stem("fisicamente"), "fisic" );
	deepEqual( Stem("fisiche"), "fisic" );
	deepEqual( Stem("fisichella"), "fisichell" );
	deepEqual( Stem("fisici"), "fisic" );
	deepEqual( Stem("fisico"), "fisic" );
	deepEqual( Stem("fisionomia"), "fisionom" );
	deepEqual( Stem("fisionomici"), "fisionom" );
	deepEqual( Stem("fisonomia"), "fisonom" );
	deepEqual( Stem("fissa"), "fiss" );
	deepEqual( Stem("fissan"), "fissan" );
	deepEqual( Stem("fissando"), "fiss" );
	deepEqual( Stem("fissandolo"), "fiss" );
	deepEqual( Stem("fissar"), "fiss" );
	deepEqual( Stem("fissare"), "fiss" );
	deepEqual( Stem("fissarlo"), "fiss" );
	deepEqual( Stem("fissata"), "fiss" );
	deepEqual( Stem("fissate"), "fiss" );
	deepEqual( Stem("fissati"), "fiss" );
	deepEqual( Stem("fissato"), "fiss" );
	deepEqual( Stem("fissava"), "fiss" );
	deepEqual( Stem("fissavano"), "fiss" );
	deepEqual( Stem("fissazione"), "fissazion" );
	deepEqual( Stem("fisse"), "fiss" );
	deepEqual( Stem("fisserà"), "fiss" );
	deepEqual( Stem("fissi"), "fiss" );
	deepEqual( Stem("fisso"), "fiss" );
	deepEqual( Stem("fissò"), "fiss" );
	deepEqual( Stem("fissore"), "fissor" );
	deepEqual( Stem("fit"), "fit" );
	deepEqual( Stem("fitta"), "fitt" );
	deepEqual( Stem("fitte"), "fitt" );
	deepEqual( Stem("fitti"), "fitt" );
	deepEqual( Stem("fittiziamente"), "fittiz" );
	deepEqual( Stem("fitto"), "fitt" );
	deepEqual( Stem("fitzgerald"), "fitzgerald" );
	deepEqual( Stem("fiuggi"), "fiugg" );
	deepEqual( Stem("fiume"), "fium" );
	deepEqual( Stem("fiumi"), "fium" );
	deepEqual( Stem("fiumicino"), "fiumicin" );
	deepEqual( Stem("fiuta"), "fiut" );
	deepEqual( Stem("fiutano"), "fiut" );
	deepEqual( Stem("fiutare"), "fiut" );
	deepEqual( Stem("fixing"), "fixing" );
	deepEqual( Stem("flachi"), "flac" );
	deepEqual( Stem("flagella"), "flagell" );
	deepEqual( Stem("flagelli"), "flagell" );
	deepEqual( Stem("flagello"), "flagell" );
	deepEqual( Stem("flamment"), "flamment" );
	deepEqual( Stem("flash"), "flash" );
	deepEqual( Stem("flavi"), "flav" );
	deepEqual( Stem("flavia"), "flav" );
	deepEqual( Stem("flavio"), "flav" );
	deepEqual( Stem("flego"), "fleg" );
	deepEqual( Stem("flegreo"), "flegre" );
	deepEqual( Stem("flemma"), "flemm" );
	deepEqual( Stem("flessibile"), "flessibil" );
	deepEqual( Stem("flessibili"), "flessibil" );
	deepEqual( Stem("flessibilità"), "flessibil" );
	deepEqual( Stem("flessione"), "flession" );
	deepEqual( Stem("flessori"), "flessor" );
	deepEqual( Stem("flinn"), "flinn" );
	deepEqual( Stem("flores"), "flores" );
	deepEqual( Stem("floriancic"), "floriancic" );
	deepEqual( Stem("florida"), "florid" );
	deepEqual( Stem("floridezza"), "floridezz" );
	deepEqual( Stem("floridissima"), "floridissim" );
	deepEqual( Stem("florio"), "flor" );
	deepEqual( Stem("floscia"), "flosc" );
	deepEqual( Stem("floscio"), "flosc" );
	deepEqual( Stem("flot"), "flot" );
	deepEqual( Stem("flotta"), "flott" );
	deepEqual( Stem("flussi"), "fluss" );
	deepEqual( Stem("flutti"), "flutt" );
	deepEqual( Stem("fluttuante"), "fluttuant" );
	deepEqual( Stem("fluttuazione"), "fluttuazion" );
	deepEqual( Stem("fluttuazioni"), "fluttuazion" );
	deepEqual( Stem("fly"), "fly" );
	deepEqual( Stem("flynn"), "flynn" );
	deepEqual( Stem("fmi"), "fmi" );
	deepEqual( Stem("fn"), "fn" );
	deepEqual( Stem("fnle"), "fnle" );
	deepEqual( Stem("fnsi"), "fnsi" );
	deepEqual( Stem("fo"), "fo" );
	deepEqual( Stem("foccillo"), "foccill" );
	deepEqual( Stem("fochi"), "foch" );
	deepEqual( Stem("foci"), "foc" );
	deepEqual( Stem("focolaio"), "focolai" );
	deepEqual( Stem("focolare"), "focol" );
	deepEqual( Stem("focosa"), "focos" );
	deepEqual( Stem("foday"), "foday" );
	deepEqual( Stem("fodera"), "foder" );
	deepEqual( Stem("fodero"), "foder" );
	deepEqual( Stem("foga"), "fog" );
	deepEqual( Stem("foggia"), "fogg" );
	deepEqual( Stem("fogli"), "fogl" );
	deepEqual( Stem("foglia"), "fogl" );
	deepEqual( Stem("fogliame"), "fogliam" );
	deepEqual( Stem("foglie"), "fogl" );
	deepEqual( Stem("foglio"), "fogl" );
	deepEqual( Stem("foglioni"), "foglion" );
	deepEqual( Stem("fogna"), "fogn" );
	deepEqual( Stem("fogne"), "fogn" );
	deepEqual( Stem("foiano"), "foi" );
	deepEqual( Stem("folclore"), "folclor" );
	deepEqual( Stem("folgaria"), "folgar" );
	deepEqual( Stem("folkloristico"), "folklorist" );
	deepEqual( Stem("folla"), "foll" );
	deepEqual( Stem("follà"), "foll" );
	deepEqual( Stem("folle"), "foll" );
	deepEqual( Stem("folli"), "foll" );
	deepEqual( Stem("follia"), "foll" );
	deepEqual( Stem("folloni"), "follon" );
	deepEqual( Stem("folta"), "folt" );
	deepEqual( Stem("folte"), "folt" );
	deepEqual( Stem("folti"), "folt" );
	deepEqual( Stem("folto"), "folt" );
	deepEqual( Stem("fomentar"), "foment" );
	deepEqual( Stem("fond"), "fond" );
	deepEqual( Stem("fonda"), "fond" );
	deepEqual( Stem("fondaccio"), "fondacc" );
	deepEqual( Stem("fondachi"), "fondac" );
	deepEqual( Stem("fondaco"), "fondac" );
	deepEqual( Stem("fondali"), "fondal" );
	deepEqual( Stem("fondamentale"), "fondamental" );
	deepEqual( Stem("fondamentali"), "fondamental" );
	deepEqual( Stem("fondamentalismo"), "fondamental" );
	deepEqual( Stem("fondamenti"), "fond" );
	deepEqual( Stem("fondamento"), "fond" );
	deepEqual( Stem("fondandosi"), "fond" );
	deepEqual( Stem("fondanti"), "fondant" );
	deepEqual( Stem("fondare"), "fond" );
	deepEqual( Stem("fondarle"), "fond" );
	deepEqual( Stem("fondata"), "fond" );
	deepEqual( Stem("fondate"), "fond" );
	deepEqual( Stem("fondatezza"), "fondatezz" );
	deepEqual( Stem("fondativo"), "fondat" );
	deepEqual( Stem("fondato"), "fond" );
	deepEqual( Stem("fondatore"), "fondator" );
	deepEqual( Stem("fondatori"), "fondator" );
	deepEqual( Stem("fondattivo"), "fondatt" );
	deepEqual( Stem("fondazione"), "fondazion" );
	deepEqual( Stem("fondazioni"), "fondazion" );
	deepEqual( Stem("fondersel"), "fondersel" );
	deepEqual( Stem("fondi"), "fond" );
	deepEqual( Stem("fondiaria"), "fondiar" );
	deepEqual( Stem("fondiario"), "fondiar" );
	deepEqual( Stem("fondicri"), "fondicr" );
	deepEqual( Stem("fondimpiego"), "fondimpieg" );
	deepEqual( Stem("fondinvest"), "fondinvest" );
	deepEqual( Stem("fondo"), "fond" );
	deepEqual( Stem("fondoforte"), "fondofort" );
	deepEqual( Stem("fondosviluppo"), "fondosvilupp" );
	deepEqual( Stem("fondriest"), "fondriest" );
	deepEqual( Stem("fonseca"), "fonsec" );
	deepEqual( Stem("fonspa"), "fonsp" );
	deepEqual( Stem("fontan"), "fontan" );
	deepEqual( Stem("fontana"), "fontan" );
	deepEqual( Stem("fontanella"), "fontanell" );
	deepEqual( Stem("fonte"), "font" );
	deepEqual( Stem("fonti"), "font" );
	deepEqual( Stem("fontolan"), "fontolan" );
	deepEqual( Stem("food"), "food" );
	deepEqual( Stem("football"), "football" );
	deepEqual( Stem("for"), "for" );
	deepEqual( Stem("foraggieri"), "foraggier" );
	deepEqual( Stem("foratura"), "foratur" );
	deepEqual( Stem("forbici"), "forbic" );
	deepEqual( Stem("forbite"), "forb" );
	deepEqual( Stem("forca"), "forc" );
	deepEqual( Stem("force"), "forc" );
	deepEqual( Stem("forche"), "forc" );
	deepEqual( Stem("forchetta"), "forchett" );
	deepEqual( Stem("forchette"), "forchett" );
	deepEqual( Stem("forcing"), "forcing" );
	deepEqual( Stem("ford"), "ford" );
	deepEqual( Stem("foreign"), "foreign" );
	deepEqual( Stem("forense"), "forens" );
	deepEqual( Stem("foresta"), "forest" );
	deepEqual( Stem("forestale"), "forestal" );
	deepEqual( Stem("forestali"), "forestal" );
	deepEqual( Stem("foreste"), "forest" );
	deepEqual( Stem("forestiera"), "forestier" );
	deepEqual( Stem("forestieri"), "forestier" );
	deepEqual( Stem("forestiero"), "forestier" );
	deepEqual( Stem("forfettario"), "forfettar" );
	deepEqual( Stem("forieri"), "forier" );
	deepEqual( Stem("forlani"), "forlan" );
	deepEqual( Stem("forli"), "forl" );
	deepEqual( Stem("forlì"), "forl" );
	deepEqual( Stem("forma"), "form" );
	deepEqual( Stem("formaggi"), "formagg" );
	deepEqual( Stem("formale"), "formal" );
	deepEqual( Stem("formali"), "formal" );
	deepEqual( Stem("formalità"), "formal" );
	deepEqual( Stem("formalizzata"), "formalizz" );
	deepEqual( Stem("formalizzato"), "formalizz" );
	deepEqual( Stem("formalizzazione"), "formalizz" );
	deepEqual( Stem("formalizzeranno"), "formalizz" );
	deepEqual( Stem("formalmente"), "formal" );
	deepEqual( Stem("formam"), "formam" );
	deepEqual( Stem("forman"), "forman" );
	deepEqual( Stem("formando"), "form" );
	deepEqual( Stem("formano"), "form" );
	deepEqual( Stem("formar"), "form" );
	deepEqual( Stem("formare"), "form" );
	deepEqual( Stem("formarla"), "form" );
	deepEqual( Stem("formarne"), "form" );
	deepEqual( Stem("formarono"), "form" );
	deepEqual( Stem("formarsi"), "form" );
	deepEqual( Stem("formata"), "form" );
	deepEqual( Stem("formati"), "form" );
	deepEqual( Stem("formatisi"), "formatis" );
	deepEqual( Stem("formativo"), "format" );
	deepEqual( Stem("formato"), "form" );
	deepEqual( Stem("formava"), "form" );
	deepEqual( Stem("formavano"), "form" );
	deepEqual( Stem("formazione"), "formazion" );
	deepEqual( Stem("formazioni"), "formazion" );
	deepEqual( Stem("forme"), "form" );
	deepEqual( Stem("formentini"), "formentin" );
	deepEqual( Stem("formeranno"), "form" );
	deepEqual( Stem("formi"), "form" );
	deepEqual( Stem("formia"), "form" );
	deepEqual( Stem("formicolaio"), "formicolai" );
	deepEqual( Stem("formicolavan"), "formicolavan" );
	deepEqual( Stem("formicolavano"), "formicol" );
	deepEqual( Stem("formidabile"), "formid" );
	deepEqual( Stem("formigoni"), "formigon" );
	deepEqual( Stem("formò"), "form" );
	deepEqual( Stem("formola"), "formol" );
	deepEqual( Stem("formole"), "formol" );
	deepEqual( Stem("formula"), "formul" );
	deepEqual( Stem("formulare"), "formul" );
	deepEqual( Stem("formulata"), "formul" );
	deepEqual( Stem("formulate"), "formul" );
	deepEqual( Stem("formulati"), "formul" );
	deepEqual( Stem("formulato"), "formul" );
	deepEqual( Stem("formulazione"), "formul" );
	deepEqual( Stem("fornai"), "forna" );
	deepEqual( Stem("fornaio"), "fornai" );
	deepEqual( Stem("fornari"), "fornar" );
	deepEqual( Stem("fornario"), "fornar" );
	deepEqual( Stem("fornello"), "fornell" );
	deepEqual( Stem("forni"), "forn" );
	deepEqual( Stem("fornì"), "forn" );
	deepEqual( Stem("fornir"), "forn" );
	deepEqual( Stem("fornirà"), "forn" );
	deepEqual( Stem("fornire"), "forn" );
	deepEqual( Stem("fornisca"), "forn" );
	deepEqual( Stem("fornisce"), "forn" );
	deepEqual( Stem("fornita"), "forn" );
	deepEqual( Stem("fornite"), "forn" );
	deepEqual( Stem("forniti"), "forn" );
	deepEqual( Stem("fornitissimo"), "fornitissim" );
	deepEqual( Stem("fornito"), "forn" );
	deepEqual( Stem("fornitore"), "fornitor" );
	deepEqual( Stem("fornitura"), "fornitur" );
	deepEqual( Stem("forniture"), "fornitur" );
	deepEqual( Stem("forno"), "forn" );
	deepEqual( Stem("fornte"), "fornt" );
	deepEqual( Stem("forrest"), "forrest" );
	deepEqual( Stem("forrester"), "forrester" );
	deepEqual( Stem("fors"), "fors" );
	deepEqual( Stem("forse"), "fors" );
	deepEqual( Stem("forsennati"), "forsenn" );
	deepEqual( Stem("forster"), "forster" );
	deepEqual( Stem("forte"), "fort" );
	deepEqual( Stem("fortemente"), "fortement" );
	deepEqual( Stem("fortezza"), "fortezz" );
	deepEqual( Stem("fortezze"), "fortezz" );
	deepEqual( Stem("forti"), "fort" );
	deepEqual( Stem("fortificato"), "fortific" );
	deepEqual( Stem("fortissimo"), "fortissim" );
	deepEqual( Stem("fortuite"), "fortu" );
	deepEqual( Stem("fortuiti"), "fortu" );
	deepEqual( Stem("fortuna"), "fortun" );
	deepEqual( Stem("fortunamente"), "fortun" );
	deepEqual( Stem("fortunata"), "fortun" );
	deepEqual( Stem("fortunatamente"), "fortunat" );
	deepEqual( Stem("fortunati"), "fortun" );
	deepEqual( Stem("fortunato"), "fortun" );
	deepEqual( Stem("fortune"), "fortun" );
	deepEqual( Stem("fortunosamente"), "fortun" );
	deepEqual( Stem("fortunoso"), "fortun" );
	deepEqual( Stem("forum"), "forum" );
	deepEqual( Stem("forusciti"), "forusc" );
	deepEqual( Stem("foruscito"), "forusc" );
	deepEqual( Stem("forza"), "forz" );
	deepEqual( Stem("forzare"), "forz" );
	deepEqual( Stem("forzassero"), "forz" );
	deepEqual( Stem("forzata"), "forz" );
	deepEqual( Stem("forzatamente"), "forzat" );
	deepEqual( Stem("forzati"), "forz" );
	deepEqual( Stem("forzato"), "forz" );
	deepEqual( Stem("forzature"), "forzatur" );
	deepEqual( Stem("forze"), "forz" );
	deepEqual( Stem("forziste"), "forzist" );
	deepEqual( Stem("forzò"), "forz" );
	deepEqual( Stem("forzute"), "forz" );
	deepEqual( Stem("fosca"), "fosc" );
	deepEqual( Stem("fosche"), "fosc" );
	deepEqual( Stem("fosco"), "fosc" );
	deepEqual( Stem("foss"), "foss" );
	deepEqual( Stem("fossa"), "foss" );
	deepEqual( Stem("fossatello"), "fossatell" );
	deepEqual( Stem("fossati"), "foss" );
	deepEqual( Stem("fossato"), "foss" );
	deepEqual( Stem("fosse"), "foss" );
	deepEqual( Stem("fosser"), "fosser" );
	deepEqual( Stem("fossero"), "fosser" );
	deepEqual( Stem("fossi"), "foss" );
	deepEqual( Stem("fossili"), "fossil" );
	deepEqual( Stem("fossimo"), "fossim" );
	deepEqual( Stem("fosso"), "foss" );
	deepEqual( Stem("foste"), "fost" );
	deepEqual( Stem("foster"), "foster" );
	deepEqual( Stem("foto"), "fot" );
	deepEqual( Stem("fotografi"), "fotograf" );
	deepEqual( Stem("fotografia"), "fotograf" );
	deepEqual( Stem("fotografica"), "fotograf" );
	deepEqual( Stem("fotografie"), "fotograf" );
	deepEqual( Stem("fotografo"), "fotograf" );
	deepEqual( Stem("foulard"), "foulard" );
	deepEqual( Stem("fpi"), "fpi" );
	deepEqual( Stem("fra"), "fra" );
	deepEqual( Stem("fracanzani"), "fracanzan" );
	deepEqual( Stem("fracassarsi"), "fracass" );
	deepEqual( Stem("fracassi"), "frac" );
	deepEqual( Stem("fracasso"), "fracass" );
	deepEqual( Stem("fradicio"), "fradic" );
	deepEqual( Stem("fradiciume"), "fradicium" );
	deepEqual( Stem("fragassi"), "frag" );
	deepEqual( Stem("fragile"), "fragil" );
	deepEqual( Stem("fragilità"), "fragil" );
	deepEqual( Stem("fragorosi"), "fragor" );
	deepEqual( Stem("fragranza"), "fragranz" );
	deepEqual( Stem("fragranze"), "fragranz" );
	deepEqual( Stem("fraintesa"), "fraintes" );
	deepEqual( Stem("framatome"), "framatom" );
	deepEqual( Stem("framatone"), "framaton" );
	deepEqual( Stem("frammentarie"), "frammentar" );
	deepEqual( Stem("frammenti"), "framment" );
	deepEqual( Stem("frammento"), "framment" );
	deepEqual( Stem("frammentò"), "framment" );
	deepEqual( Stem("frammischiate"), "frammisc" );
	deepEqual( Stem("frammischiava"), "frammisc" );
	deepEqual( Stem("franca"), "franc" );
	deepEqual( Stem("francais"), "francais" );
	deepEqual( Stem("francamente"), "franc" );
	deepEqual( Stem("france"), "franc" );
	deepEqual( Stem("frances"), "frances" );
	deepEqual( Stem("francesca"), "francesc" );
	deepEqual( Stem("franceschetti"), "franceschett" );
	deepEqual( Stem("francesco"), "francesc" );
	deepEqual( Stem("francesconi"), "francescon" );
	deepEqual( Stem("francese"), "frances" );
	deepEqual( Stem("francesi"), "frances" );
	deepEqual( Stem("franche"), "franc" );
	deepEqual( Stem("franchezza"), "franchezz" );
	deepEqual( Stem("franchi"), "franc" );
	deepEqual( Stem("franchini"), "franchin" );
	deepEqual( Stem("francia"), "franc" );
	deepEqual( Stem("francica"), "francic" );
	deepEqual( Stem("franciica"), "franciic" );
	deepEqual( Stem("francisco"), "franc" );
	deepEqual( Stem("franciscus"), "franciscus" );
	deepEqual( Stem("francisque"), "francisqu" );
	deepEqual( Stem("franck"), "franck" );
	deepEqual( Stem("franco"), "franc" );
	deepEqual( Stem("francobolli"), "francoboll" );
	deepEqual( Stem("francoforte"), "francofort" );
	deepEqual( Stem("francois"), "francois" );
	deepEqual( Stem("frange"), "frang" );
	deepEqual( Stem("frangente"), "frangent" );
	deepEqual( Stem("frangenti"), "frangent" );
	deepEqual( Stem("frangersi"), "frang" );
	deepEqual( Stem("frangia"), "frang" );
	deepEqual( Stem("franjo"), "franj" );
	deepEqual( Stem("frank"), "frank" );
	deepEqual( Stem("franke"), "frank" );
	deepEqual( Stem("frankenstein"), "frankenstein" );
	deepEqual( Stem("frankfurter"), "frankfurter" );
	deepEqual( Stem("frankie"), "frank" );
	deepEqual( Stem("franois"), "franois" );
	deepEqual( Stem("frantende"), "frant" );
	deepEqual( Stem("franteso"), "frantes" );
	deepEqual( Stem("frantumi"), "frantum" );
	deepEqual( Stem("franz"), "franz" );
	deepEqual( Stem("franzone"), "franzon" );
	deepEqual( Stem("franzoni"), "franzon" );
	deepEqual( Stem("frapposti"), "frappost" );
	deepEqual( Stem("frasca"), "frasc" );
	deepEqual( Stem("frascati"), "frasc" );
	deepEqual( Stem("frase"), "fras" );
	deepEqual( Stem("frasi"), "fras" );
	deepEqual( Stem("frassica"), "frassic" );
	deepEqual( Stem("frastagliata"), "frastagl" );
	deepEqual( Stem("frastono"), "frast" );
	deepEqual( Stem("frastornato"), "frastorn" );
	deepEqual( Stem("frate"), "frat" );
	deepEqual( Stem("fratel"), "fratel" );
	deepEqual( Stem("fratellanza"), "fratell" );
	deepEqual( Stem("fratelli"), "fratell" );
	deepEqual( Stem("fratellini"), "fratellin" );
	deepEqual( Stem("fratellino"), "fratellin" );
	deepEqual( Stem("fratello"), "fratell" );
	deepEqual( Stem("fraterie"), "frater" );
	deepEqual( Stem("fraterno"), "fratern" );
	deepEqual( Stem("frati"), "frat" );
	deepEqual( Stem("fraticello"), "fraticell" );
	deepEqual( Stem("fratini"), "fratin" );
	deepEqual( Stem("fratricida"), "fratricid" );
	deepEqual( Stem("frattanto"), "frattant" );
	deepEqual( Stem("frattempo"), "frattemp" );
	deepEqual( Stem("frattini"), "frattin" );
	deepEqual( Stem("frattura"), "frattur" );
	deepEqual( Stem("fratture"), "frattur" );
	deepEqual( Stem("fraudisque"), "fraudisqu" );
	deepEqual( Stem("fraudolenta"), "fraudolent" );
	deepEqual( Stem("fraudum"), "fraudum" );
	deepEqual( Stem("frauenkirsche"), "frauenkirsc" );
	deepEqual( Stem("fraz"), "fraz" );
	deepEqual( Stem("frazionamento"), "frazion" );
	deepEqual( Stem("frazione"), "frazion" );
	deepEqual( Stem("fre"), "fre" );
	deepEqual( Stem("frears"), "frears" );
	deepEqual( Stem("fredda"), "fredd" );
	deepEqual( Stem("freddamente"), "fredd" );
	deepEqual( Stem("freddato"), "fredd" );
	deepEqual( Stem("fredde"), "fredd" );
	deepEqual( Stem("freddi"), "fredd" );
	deepEqual( Stem("freddie"), "fredd" );
	deepEqual( Stem("freddo"), "fredd" );
	deepEqual( Stem("frederic"), "frederic" );
	deepEqual( Stem("fredericks"), "fredericks" );
	deepEqual( Stem("freeport"), "freeport" );
	deepEqual( Stem("freetown"), "freetown" );
	deepEqual( Stem("freeway"), "freeway" );
	deepEqual( Stem("fregata"), "freg" );
	deepEqual( Stem("fregate"), "freg" );
	deepEqual( Stem("fregatina"), "fregatin" );
	deepEqual( Stem("fregato"), "freg" );
	deepEqual( Stem("fregava"), "freg" );
	deepEqual( Stem("fremendo"), "frem" );
	deepEqual( Stem("fremente"), "frement" );
	deepEqual( Stem("fremevano"), "frem" );
	deepEqual( Stem("fremito"), "frem" );
	deepEqual( Stem("frenare"), "fren" );
	deepEqual( Stem("frenata"), "fren" );
	deepEqual( Stem("frenato"), "fren" );
	deepEqual( Stem("frenesia"), "frenes" );
	deepEqual( Stem("frenetici"), "frenet" );
	deepEqual( Stem("frenetico"), "frenet" );
	deepEqual( Stem("freni"), "fren" );
	deepEqual( Stem("freno"), "fren" );
	deepEqual( Stem("frequenta"), "frequent" );
	deepEqual( Stem("frequentare"), "frequent" );
	deepEqual( Stem("frequentarli"), "frequent" );
	deepEqual( Stem("frequentata"), "frequent" );
	deepEqual( Stem("frequentatori"), "frequent" );
	deepEqual( Stem("frequentava"), "frequent" );
	deepEqual( Stem("frequentavano"), "frequent" );
	deepEqual( Stem("frequente"), "frequent" );
	deepEqual( Stem("frequentemente"), "frequent" );
	deepEqual( Stem("frequenti"), "frequent" );
	deepEqual( Stem("frequentissime"), "frequentissim" );
	deepEqual( Stem("frequenza"), "frequenz" );
	deepEqual( Stem("fresca"), "fresc" );
	deepEqual( Stem("fresche"), "fresc" );
	deepEqual( Stem("freschi"), "fresc" );
	deepEqual( Stem("fresco"), "fresc" );
	deepEqual( Stem("frescolino"), "frescolin" );
	deepEqual( Stem("fresi"), "fres" );
	deepEqual( Stem("fretta"), "frett" );
	deepEqual( Stem("frette"), "frett" );
	deepEqual( Stem("frettolosi"), "frettol" );
	deepEqual( Stem("frettoloso"), "frettol" );
	deepEqual( Stem("fretus"), "fretus" );
	deepEqual( Stem("frias"), "frias" );
	deepEqual( Stem("frisani"), "frisan" );
	deepEqual( Stem("frittata"), "fritt" );
	deepEqual( Stem("friulana"), "friulan" );
	deepEqual( Stem("friulano"), "friul" );
	deepEqual( Stem("friuli"), "friul" );
	deepEqual( Stem("frivolezza"), "frivolezz" );
	deepEqual( Stem("frivolezze"), "frivolezz" );
	deepEqual( Stem("frizzante"), "frizzant" );
	deepEqual( Stem("frizzavano"), "frizz" );
	deepEqual( Stem("frode"), "frod" );
	deepEqual( Stem("fronda"), "frond" );
	deepEqual( Stem("fronde"), "frond" );
	deepEqual( Stem("frontale"), "frontal" );
	deepEqual( Stem("fronte"), "front" );
	deepEqual( Stem("fronteggiare"), "frontegg" );
	deepEqual( Stem("fronteggiato"), "frontegg" );
	deepEqual( Stem("fronteggiavano"), "frontegg" );
	deepEqual( Stem("fronti"), "front" );
	deepEqual( Stem("frontiera"), "frontier" );
	deepEqual( Stem("frontiere"), "front" );
	deepEqual( Stem("fronzuti"), "fronz" );
	deepEqual( Stem("frosinone"), "frosinon" );
	deepEqual( Stem("frottole"), "frottol" );
	deepEqual( Stem("froze"), "froz" );
	deepEqual( Stem("frugale"), "frugal" );
	deepEqual( Stem("frugamenti"), "frug" );
	deepEqual( Stem("frugando"), "frug" );
	deepEqual( Stem("frugar"), "frug" );
	deepEqual( Stem("frugare"), "frug" );
	deepEqual( Stem("frugato"), "frug" );
	deepEqual( Stem("frugavan"), "frugavan" );
	deepEqual( Stem("frugavano"), "frug" );
	deepEqual( Stem("frughi"), "frug" );
	deepEqual( Stem("frugo"), "frug" );
	deepEqual( Stem("frugò"), "frug" );
	deepEqual( Stem("fruit"), "fruit" );
	deepEqual( Stem("frullone"), "frullon" );
	deepEqual( Stem("frulloni"), "frullon" );
	deepEqual( Stem("fruscìo"), "fruscì" );
	deepEqual( Stem("frusta"), "frust" );
	deepEqual( Stem("frustata"), "frust" );
	deepEqual( Stem("frustate"), "frust" );
	deepEqual( Stem("fruste"), "frust" );
	deepEqual( Stem("frutta"), "frutt" );
	deepEqual( Stem("fruttare"), "frutt" );
	deepEqual( Stem("frutte"), "frutt" );
	deepEqual( Stem("frutterebbe"), "frutt" );
	deepEqual( Stem("frutti"), "frutt" );
	deepEqual( Stem("frutto"), "frutt" );
	deepEqual( Stem("fs"), "fs" );
	deepEqual( Stem("ft"), "ft" );
	deepEqual( Stem("ftosi"), "ftos" );
	deepEqual( Stem("fu"), "fu" );
	deepEqual( Stem("fuan"), "fuan" );
	deepEqual( Stem("fucilata"), "fucil" );
	deepEqual( Stem("fucile"), "fucil" );
	deepEqual( Stem("fucili"), "fucil" );
	deepEqual( Stem("fuedo"), "fued" );
	deepEqual( Stem("fuentes"), "fuentes" );
	deepEqual( Stem("fuera"), "fuer" );
	deepEqual( Stem("fuerit"), "fuerit" );
	deepEqual( Stem("fuga"), "fug" );
	deepEqual( Stem("fugace"), "fugac" );
	deepEqual( Stem("fugare"), "fug" );
	deepEqual( Stem("fugato"), "fug" );
	deepEqual( Stem("fuggendo"), "fugg" );
	deepEqual( Stem("fuggì"), "fugg" );
	deepEqual( Stem("fuggiaschi"), "fuggiasc" );
	deepEqual( Stem("fuggir"), "fugg" );
	deepEqual( Stem("fuggire"), "fugg" );
	deepEqual( Stem("fuggiron"), "fuggiron" );
	deepEqual( Stem("fuggita"), "fugg" );
	deepEqual( Stem("fuggiti"), "fugg" );
	deepEqual( Stem("fuggitive"), "fuggit" );
	deepEqual( Stem("fuggitivi"), "fuggit" );
	deepEqual( Stem("fuggitivo"), "fuggit" );
	deepEqual( Stem("fuggito"), "fugg" );
	deepEqual( Stem("fuggiva"), "fugg" );
	deepEqual( Stem("fughe"), "fugh" );
	deepEqual( Stem("fui"), "fui" );
	deepEqual( Stem("fuisse"), "fuiss" );
	deepEqual( Stem("fuit"), "fuit" );
	deepEqual( Stem("fujimori"), "fujimor" );
	deepEqual( Stem("fulbright"), "fulbright" );
	deepEqual( Stem("fulcro"), "fulcr" );
	deepEqual( Stem("fulminato"), "fulmin" );
	deepEqual( Stem("fulmini"), "fulmin" );
	deepEqual( Stem("fuma"), "fum" );
	deepEqual( Stem("fumagalli"), "fumagall" );
	deepEqual( Stem("fumi"), "fum" );
	deepEqual( Stem("fummo"), "fumm" );
	deepEqual( Stem("fumo"), "fum" );
	deepEqual( Stem("funari"), "funar" );
	deepEqual( Stem("fund"), "fund" );
	deepEqual( Stem("fune"), "fun" );
	deepEqual( Stem("funebre"), "funebr" );
	deepEqual( Stem("funebri"), "funebr" );
	deepEqual( Stem("funerale"), "funeral" );
	deepEqual( Stem("funerali"), "funeral" );
	deepEqual( Stem("funesta"), "funest" );
	deepEqual( Stem("funeste"), "funest" );
	deepEqual( Stem("funesti"), "funest" );
	deepEqual( Stem("funesto"), "funest" );
	deepEqual( Stem("funzion"), "funzion" );
	deepEqual( Stem("funziona"), "funzion" );
	deepEqual( Stem("funzionale"), "funzional" );
	deepEqual( Stem("funzionamento"), "funzion" );
	deepEqual( Stem("funzionante"), "funzion" );
	deepEqual( Stem("funzionare"), "funzion" );
	deepEqual( Stem("funzionari"), "funzionar" );
	deepEqual( Stem("funzionaria"), "funzionar" );
	deepEqual( Stem("funzionario"), "funzionar" );
	deepEqual( Stem("funzione"), "funzion" );
	deepEqual( Stem("funzionerà"), "funzion" );
	deepEqual( Stem("funzioni"), "funzion" );
	deepEqual( Stem("fuochi"), "fuoc" );
	deepEqual( Stem("fuoco"), "fuoc" );
	deepEqual( Stem("fuor"), "fuor" );
	deepEqual( Stem("fuorché"), "fuorc" );
	deepEqual( Stem("fuori"), "fuor" );
	deepEqual( Stem("fuoriclasse"), "fuoricl" );
	deepEqual( Stem("fuorigioco"), "fuorigioc" );
	deepEqual( Stem("fuorilegge"), "fuorilegg" );
	deepEqual( Stem("fuoriscita"), "fuorisc" );
	deepEqual( Stem("fuoristrada"), "fuoristrad" );
	deepEqual( Stem("fuoriuscita"), "fuoriusc" );
	deepEqual( Stem("fuoriusciti"), "fuoriusc" );
	deepEqual( Stem("fuoriuscito"), "fuoriusc" );
	deepEqual( Stem("furano"), "fur" );
	deepEqual( Stem("furberie"), "furber" );
	deepEqual( Stem("furbetta"), "furbett" );
	deepEqual( Stem("furbi"), "furb" );
	deepEqual( Stem("furbo"), "furb" );
	deepEqual( Stem("furfante"), "furfant" );
	deepEqual( Stem("furfanti"), "furfant" );
	deepEqual( Stem("furfantone"), "furfanton" );
	deepEqual( Stem("furfantoni"), "furfanton" );
	deepEqual( Stem("furia"), "fur" );
	deepEqual( Stem("furibonda"), "furibond" );
	deepEqual( Stem("furibondi"), "furibond" );
	deepEqual( Stem("furie"), "fur" );
	deepEqual( Stem("furiosa"), "furios" );
	deepEqual( Stem("furiosi"), "furios" );
	deepEqual( Stem("furioso"), "furios" );
	deepEqual( Stem("furon"), "furon" );
	deepEqual( Stem("furoncoli"), "furoncol" );
	deepEqual( Stem("furono"), "fur" );
	deepEqual( Stem("furor"), "furor" );
	deepEqual( Stem("furore"), "furor" );
	deepEqual( Stem("furstenberg"), "furstenberg" );
	deepEqual( Stem("furtivamente"), "furtiv" );
	deepEqual( Stem("furto"), "furt" );
	deepEqual( Stem("fuscagni"), "fuscagn" );
	deepEqual( Stem("fuscelli"), "fuscell" );
	deepEqual( Stem("fusco"), "fusc" );
	deepEqual( Stem("fuseaux"), "fuseaux" );
	deepEqual( Stem("fusella"), "fusell" );
	deepEqual( Stem("fuser"), "fuser" );
	deepEqual( Stem("fusione"), "fusion" );
	deepEqual( Stem("fusioni"), "fusion" );
	deepEqual( Stem("fuso"), "fus" );
	deepEqual( Stem("fustagnai"), "fustagna" );
	deepEqual( Stem("fustini"), "fustin" );
	deepEqual( Stem("futre"), "futr" );
	deepEqual( Stem("futura"), "futur" );
	deepEqual( Stem("future"), "futur" );
	deepEqual( Stem("futuri"), "futur" );
	deepEqual( Stem("futuro"), "futur" );
	deepEqual( Stem("futurò"), "futur" );
	deepEqual( Stem("fv"), "fv" );
	deepEqual( Stem("g"), "g" );
	deepEqual( Stem("gabbi"), "gabb" );
	deepEqual( Stem("gabbia"), "gabb" );
	deepEqual( Stem("gabelliere"), "gabell" );
	deepEqual( Stem("gabellieri"), "gabellier" );
	deepEqual( Stem("gabellini"), "gabellin" );
	deepEqual( Stem("gabetti"), "gabett" );
	deepEqual( Stem("gabinetto"), "gabinett" );
	deepEqual( Stem("gabino"), "gabin" );
	deepEqual( Stem("gabon"), "gabon" );
	deepEqual( Stem("gabriel"), "gabriel" );
	deepEqual( Stem("gabriela"), "gabriel" );
	deepEqual( Stem("gabriele"), "gabriel" );
	deepEqual( Stem("gabrieli"), "gabriel" );
	deepEqual( Stem("gabriella"), "gabriell" );
	deepEqual( Stem("gadget"), "gadget" );
	deepEqual( Stem("gaetano"), "gaet" );
	deepEqual( Stem("gaffe"), "gaff" );
	deepEqual( Stem("gaffes"), "gaffes" );
	deepEqual( Stem("gaffiante"), "gaffiant" );
	deepEqual( Stem("gag"), "gag" );
	deepEqual( Stem("gagliarda"), "gagliard" );
	deepEqual( Stem("gagliarde"), "gagliard" );
	deepEqual( Stem("gagliardi"), "gagliard" );
	deepEqual( Stem("gaiana"), "gaian" );
	deepEqual( Stem("gaic"), "gaic" );
	deepEqual( Stem("gaio"), "gai" );
	deepEqual( Stem("gal"), "gal" );
	deepEqual( Stem("gala"), "gal" );
	deepEqual( Stem("galagoal"), "galagoal" );
	deepEqual( Stem("galante"), "galant" );
	deepEqual( Stem("galanteria"), "galanter" );
	deepEqual( Stem("galanterie"), "galanter" );
	deepEqual( Stem("galantuomini"), "galantuomin" );
	deepEqual( Stem("galantuomo"), "galantuom" );
	deepEqual( Stem("galassia"), "galass" );
	deepEqual( Stem("galasso"), "galass" );
	deepEqual( Stem("galateo"), "galate" );
	deepEqual( Stem("galderisi"), "galderis" );
	deepEqual( Stem("galdino"), "galdin" );
	deepEqual( Stem("gale"), "gal" );
	deepEqual( Stem("galea"), "gale" );
	deepEqual( Stem("galeone"), "galeon" );
	deepEqual( Stem("galeotte"), "galeott" );
	deepEqual( Stem("galera"), "galer" );
	deepEqual( Stem("galia"), "gal" );
	deepEqual( Stem("galicia"), "galic" );
	deepEqual( Stem("galilei"), "galile" );
	deepEqual( Stem("galileo"), "galile" );
	deepEqual( Stem("galioto"), "galiot" );
	deepEqual( Stem("galla"), "gall" );
	deepEqual( Stem("gallarate"), "gallar" );
	deepEqual( Stem("gallarini"), "gallarin" );
	deepEqual( Stem("galleggia"), "gallegg" );
	deepEqual( Stem("galleggiante"), "gallegg" );
	deepEqual( Stem("galleggiare"), "gallegg" );
	deepEqual( Stem("gallegos"), "gallegos" );
	deepEqual( Stem("galleria"), "galler" );
	deepEqual( Stem("galles"), "galles" );
	deepEqual( Stem("gallese"), "galles" );
	deepEqual( Stem("galletti"), "gallett" );
	deepEqual( Stem("galli"), "gall" );
	deepEqual( Stem("galline"), "gallin" );
	deepEqual( Stem("gallipoli"), "gallipol" );
	deepEqual( Stem("gallo"), "gall" );
	deepEqual( Stem("gallotta"), "gallott" );
	deepEqual( Stem("galoppo"), "galopp" );
	deepEqual( Stem("galoppò"), "galopp" );
	deepEqual( Stem("galvanizzando"), "galvanizz" );
	deepEqual( Stem("gama"), "gam" );
	deepEqual( Stem("gamba"), "gamb" );
	deepEqual( Stem("gambale"), "gambal" );
	deepEqual( Stem("gambe"), "gamb" );
	deepEqual( Stem("gamberini"), "gamberin" );
	deepEqual( Stem("gambiere"), "gamb" );
	deepEqual( Stem("gambini"), "gambin" );
	deepEqual( Stem("gambino"), "gambin" );
	deepEqual( Stem("game"), "gam" );
	deepEqual( Stem("gamma"), "gamm" );
	deepEqual( Stem("ganascino"), "ganascin" );
	deepEqual( Stem("gand"), "gand" );
	deepEqual( Stem("gande"), "gand" );
	deepEqual( Stem("gandhi"), "gandh" );
	deepEqual( Stem("gandini"), "gandin" );
	deepEqual( Stem("gangheri"), "gangher" );
	deepEqual( Stem("ganz"), "ganz" );
	deepEqual( Stem("gap"), "gap" );
	deepEqual( Stem("gar"), "gar" );
	deepEqual( Stem("gara"), "gar" );
	deepEqual( Stem("garage"), "garag" );
	deepEqual( Stem("garante"), "garant" );
	deepEqual( Stem("garanti"), "garant" );
	deepEqual( Stem("garantire"), "garant" );
	deepEqual( Stem("garantirebbe"), "garant" );
	deepEqual( Stem("garantiremo"), "garant" );
	deepEqual( Stem("garantirlo"), "garant" );
	deepEqual( Stem("garantisce"), "garant" );
	deepEqual( Stem("garantita"), "garant" );
	deepEqual( Stem("garantiti"), "garant" );
	deepEqual( Stem("garantito"), "garant" );
	deepEqual( Stem("garanzia"), "garanz" );
	deepEqual( Stem("garanzie"), "garanz" );
	deepEqual( Stem("garavaglia"), "garavagl" );
	deepEqual( Stem("garbata"), "garb" );
	deepEqual( Stem("garbatamente"), "garbat" );
	deepEqual( Stem("garbo"), "garb" );
	deepEqual( Stem("garboli"), "garbol" );
	deepEqual( Stem("garbugli"), "garbugl" );
	deepEqual( Stem("garbuglio"), "garbugl" );
	deepEqual( Stem("garcia"), "garc" );
	deepEqual( Stem("garda"), "gard" );
	deepEqual( Stem("garde"), "gard" );
	deepEqual( Stem("gardena"), "garden" );
	deepEqual( Stem("gardini"), "gardin" );
	deepEqual( Stem("gardone"), "gardon" );
	deepEqual( Stem("gardonese"), "gardones" );
	deepEqual( Stem("gare"), "gar" );
	deepEqual( Stem("gareggiando"), "garegg" );
	deepEqual( Stem("gareggiato"), "garegg" );
	deepEqual( Stem("gareggiavano"), "garegg" );
	deepEqual( Stem("gargani"), "gargan" );
	deepEqual( Stem("gargiulo"), "gargiul" );
	deepEqual( Stem("garibaldi"), "garibald" );
	deepEqual( Stem("garibaldì"), "garibald" );
	deepEqual( Stem("garibaldini"), "garibaldin" );
	deepEqual( Stem("garner"), "garner" );
	deepEqual( Stem("garnett"), "garnett" );
	deepEqual( Stem("garnier"), "garnier" );
	deepEqual( Stem("garofalo"), "garofal" );
	deepEqual( Stem("garrison"), "garrison" );
	deepEqual( Stem("garzoncello"), "garzoncell" );
	deepEqual( Stem("garzone"), "garzon" );
	deepEqual( Stem("garzoni"), "garzon" );
	deepEqual( Stem("gas"), "gas" );
	deepEqual( Stem("gasdotto"), "gasdott" );
	deepEqual( Stem("gaspare"), "gasp" );
	deepEqual( Stem("gasparini"), "gasparin" );
	deepEqual( Stem("gasparo"), "gaspar" );
	deepEqual( Stem("gasparri"), "gasparr" );
	deepEqual( Stem("gasperi"), "gasper" );
	deepEqual( Stem("gasperis"), "gasperis" );
	deepEqual( Stem("gassi"), "gass" );
	deepEqual( Stem("gastiga"), "gastig" );
	deepEqual( Stem("gastigamatti"), "gastigamatt" );
	deepEqual( Stem("gastigarli"), "gastig" );
	deepEqual( Stem("gastigati"), "gastig" );
	deepEqual( Stem("gastigato"), "gastig" );
	deepEqual( Stem("gastighi"), "gastig" );
	deepEqual( Stem("gastigo"), "gastig" );
	deepEqual( Stem("gatta"), "gatt" );
	deepEqual( Stem("gattai"), "gatta" );
	deepEqual( Stem("gatti"), "gatt" );
	deepEqual( Stem("gatto"), "gatt" );
	deepEqual( Stem("gattoni"), "gatton" );
	deepEqual( Stem("gattuso"), "gattus" );
	deepEqual( Stem("gaudagnano"), "gaudagn" );
	deepEqual( Stem("gaudenzi"), "gaudenz" );
	deepEqual( Stem("gaudio"), "gaud" );
	deepEqual( Stem("gautieri"), "gautier" );
	deepEqual( Stem("gava"), "gav" );
	deepEqual( Stem("gavci"), "gavc" );
	deepEqual( Stem("gaviglio"), "gavigl" );
	deepEqual( Stem("gavino"), "gavin" );
	deepEqual( Stem("gay"), "gay" );
	deepEqual( Stem("gayet"), "gayet" );
	deepEqual( Stem("gaz"), "gaz" );
	deepEqual( Stem("gaza"), "gaz" );
	deepEqual( Stem("gazebo"), "gazeb" );
	deepEqual( Stem("gazebò"), "gazeb" );
	deepEqual( Stem("gazeta"), "gazet" );
	deepEqual( Stem("gazzetta"), "gazzett" );
	deepEqual( Stem("gb"), "gb" );
	deepEqual( Stem("gbr"), "gbr" );
	deepEqual( Stem("gc"), "gc" );
	deepEqual( Stem("gcos"), "gcos" );
	deepEqual( Stem("gdf"), "gdf" );
	deepEqual( Stem("ge"), "ge" );
	deepEqual( Stem("gec"), "gec" );
	deepEqual( Stem("geis"), "geis" );
	deepEqual( Stem("geldolf"), "geldolf" );
	deepEqual( Stem("gelfi"), "gelf" );
	deepEqual( Stem("gelida"), "gelid" );
	deepEqual( Stem("gelli"), "gell" );
	deepEqual( Stem("gelosa"), "gelos" );
	deepEqual( Stem("gelosamente"), "gelos" );
	deepEqual( Stem("gelosia"), "gelos" );
	deepEqual( Stem("geloso"), "gelos" );
	deepEqual( Stem("gelsi"), "gels" );
	deepEqual( Stem("gelso"), "gels" );
	deepEqual( Stem("gelsomini"), "gelsomin" );
	deepEqual( Stem("gem"), "gem" );
	deepEqual( Stem("geme"), "gem" );
	deepEqual( Stem("gemelle"), "gemell" );
	deepEqual( Stem("gemevano"), "gem" );
	deepEqual( Stem("gemina"), "gemin" );
	deepEqual( Stem("gemiti"), "gem" );
	deepEqual( Stem("gemma"), "gemm" );
	deepEqual( Stem("gemonio"), "gemon" );
	deepEqual( Stem("gen"), "gen" );
	deepEqual( Stem("gena"), "gen" );
	deepEqual( Stem("genarale"), "genaral" );
	deepEqual( Stem("genca"), "genc" );
	deepEqual( Stem("genco"), "genc" );
	deepEqual( Stem("general"), "general" );
	deepEqual( Stem("generale"), "general" );
	deepEqual( Stem("generalfond"), "generalfond" );
	deepEqual( Stem("generali"), "general" );
	deepEqual( Stem("generalita"), "general" );
	deepEqual( Stem("generaliter"), "generaliter" );
	deepEqual( Stem("generalizzata"), "generalizz" );
	deepEqual( Stem("generalmente"), "general" );
	deepEqual( Stem("generata"), "gener" );
	deepEqual( Stem("generation"), "generation" );
	deepEqual( Stem("generatori"), "gener" );
	deepEqual( Stem("generazione"), "gener" );
	deepEqual( Stem("generazioni"), "gener" );
	deepEqual( Stem("genercomit"), "genercomit" );
	deepEqual( Stem("genere"), "gen" );
	deepEqual( Stem("generecomit"), "generecomit" );
	deepEqual( Stem("generi"), "gener" );
	deepEqual( Stem("generiche"), "gener" );
	deepEqual( Stem("generico"), "gener" );
	deepEqual( Stem("genero"), "gener" );
	deepEqual( Stem("generosa"), "gener" );
	deepEqual( Stem("generosamente"), "gener" );
	deepEqual( Stem("generosi"), "gener" );
	deepEqual( Stem("generoso"), "gener" );
	deepEqual( Stem("gengive"), "gengiv" );
	deepEqual( Stem("genìa"), "genì" );
	deepEqual( Stem("geniali"), "genial" );
	deepEqual( Stem("genina"), "genin" );
	deepEqual( Stem("genio"), "gen" );
	deepEqual( Stem("genitori"), "genitor" );
	deepEqual( Stem("geniturarum"), "geniturarum" );
	deepEqual( Stem("gennaio"), "gennai" );
	deepEqual( Stem("gennaro"), "gennar" );
	deepEqual( Stem("genoa"), "geno" );
	deepEqual( Stem("genoana"), "genoan" );
	deepEqual( Stem("genoani"), "genoan" );
	deepEqual( Stem("genoano"), "gen" );
	deepEqual( Stem("genocidio"), "genocid" );
	deepEqual( Stem("genova"), "genov" );
	deepEqual( Stem("genovese"), "genoves" );
	deepEqual( Stem("gente"), "gent" );
	deepEqual( Stem("gentè"), "gent" );
	deepEqual( Stem("genti"), "gent" );
	deepEqual( Stem("gentil"), "gentil" );
	deepEqual( Stem("gentildonna"), "gentildonn" );
	deepEqual( Stem("gentile"), "gentil" );
	deepEqual( Stem("gentilezza"), "gentilezz" );
	deepEqual( Stem("gentilezze"), "gentilezz" );
	deepEqual( Stem("gentili"), "gentil" );
	deepEqual( Stem("gentilini"), "gentilin" );
	deepEqual( Stem("gentilmente"), "gentil" );
	deepEqual( Stem("gentiluomini"), "gentiluomin" );
	deepEqual( Stem("gentiluomo"), "gentiluom" );
	deepEqual( Stem("gentium"), "gentium" );
	deepEqual( Stem("gentlemen"), "gentlemen" );
	deepEqual( Stem("genuflessi"), "genufless" );
	deepEqual( Stem("genuinamente"), "genuin" );
	deepEqual( Stem("genuini"), "genuin" );
	deepEqual( Stem("geodes"), "geodes" );
	deepEqual( Stem("geofisico"), "geofis" );
	deepEqual( Stem("geografica"), "geograf" );
	deepEqual( Stem("geografiche"), "geograf" );
	deepEqual( Stem("geologi"), "geolog" );
	deepEqual( Stem("george"), "georg" );
	deepEqual( Stem("georgetown"), "georgetown" );
	deepEqual( Stem("georgia"), "georg" );
	deepEqual( Stem("georgiana"), "georgian" );
	deepEqual( Stem("gepi"), "gep" );
	deepEqual( Stem("gepobond"), "gepobond" );
	deepEqual( Stem("gepocapital"), "gepocapital" );
	deepEqual( Stem("geporeinvest"), "geporeinvest" );
	deepEqual( Stem("geporend"), "geporend" );
	deepEqual( Stem("gepoworld"), "gepoworld" );
	deepEqual( Stem("ger"), "ger" );
	deepEqual( Stem("gera"), "ger" );
	deepEqual( Stem("gerarchia"), "gerarc" );
	deepEqual( Stem("gerardo"), "gerard" );
	deepEqual( Stem("gergo"), "gerg" );
	deepEqual( Stem("gerico"), "geric" );
	deepEqual( Stem("gerla"), "gerl" );
	deepEqual( Stem("gerle"), "gerl" );
	deepEqual( Stem("gerletta"), "gerlett" );
	deepEqual( Stem("germani"), "german" );
	deepEqual( Stem("germania"), "german" );
	deepEqual( Stem("germany"), "germany" );
	deepEqual( Stem("germe"), "germ" );
	deepEqual( Stem("germi"), "germ" );
	deepEqual( Stem("germogliare"), "germogl" );
	deepEqual( Stem("gerolamo"), "gerolam" );
	deepEqual( Stem("gerold"), "gerold" );
	deepEqual( Stem("gerry"), "gerry" );
	deepEqual( Stem("gerson"), "gerson" );
	deepEqual( Stem("gertrude"), "gertrud" );
	deepEqual( Stem("gertrudina"), "gertrudin" );
	deepEqual( Stem("gerusalemme"), "gerusalemm" );
	deepEqual( Stem("gervaso"), "gervas" );
	deepEqual( Stem("gesfimi"), "gesfim" );
	deepEqual( Stem("gestapo"), "gestap" );
	deepEqual( Stem("gestendo"), "gest" );
	deepEqual( Stem("gesti"), "gest" );
	deepEqual( Stem("gesticredit"), "gesticredit" );
	deepEqual( Stem("gestielle"), "gestiell" );
	deepEqual( Stem("gestifom"), "gestifom" );
	deepEqual( Stem("gestifondi"), "gestifond" );
	deepEqual( Stem("gestiob"), "gestiob" );
	deepEqual( Stem("gestionali"), "gestional" );
	deepEqual( Stem("gestione"), "gestion" );
	deepEqual( Stem("gestirà"), "gest" );
	deepEqual( Stem("gestiras"), "gestiras" );
	deepEqual( Stem("gestire"), "gest" );
	deepEqual( Stem("gestisce"), "gest" );
	deepEqual( Stem("gestiscono"), "gest" );
	deepEqual( Stem("gestite"), "gest" );
	deepEqual( Stem("gestito"), "gest" );
	deepEqual( Stem("gestnord"), "gestnord" );
	deepEqual( Stem("gesto"), "gest" );
	deepEqual( Stem("gestore"), "gestor" );
	deepEqual( Stem("gestuale"), "gestual" );
	deepEqual( Stem("gesù"), "gesù" );
	deepEqual( Stem("getta"), "gett" );
	deepEqual( Stem("gettando"), "gett" );
	deepEqual( Stem("gettandole"), "gett" );
	deepEqual( Stem("gettar"), "gett" );
	deepEqual( Stem("gettare"), "gett" );
	deepEqual( Stem("gettarono"), "gett" );
	deepEqual( Stem("gettarsele"), "gettarsel" );
	deepEqual( Stem("gettarsi"), "gett" );
	deepEqual( Stem("gettasser"), "gettasser" );
	deepEqual( Stem("gettata"), "gett" );
	deepEqual( Stem("gettate"), "gett" );
	deepEqual( Stem("gettato"), "gett" );
	deepEqual( Stem("getters"), "getters" );
	deepEqual( Stem("getti"), "gett" );
	deepEqual( Stem("gettito"), "gett" );
	deepEqual( Stem("getto"), "gett" );
	deepEqual( Stem("gettò"), "gett" );
	deepEqual( Stem("gewiss"), "gewiss" );
	deepEqual( Stem("gg"), "gg" );
	deepEqual( Stem("gh"), "gh" );
	deepEqual( Stem("ghafoor"), "ghafoor" );
	deepEqual( Stem("ghali"), "ghal" );
	deepEqual( Stem("ghennadi"), "ghennad" );
	deepEqual( Stem("ghermito"), "gherm" );
	deepEqual( Stem("gheroni"), "gheron" );
	deepEqual( Stem("ghetto"), "ghett" );
	deepEqual( Stem("ghezzi"), "ghezz" );
	deepEqual( Stem("ghiacci"), "ghiacc" );
	deepEqual( Stem("ghiaccio"), "ghiacc" );
	deepEqual( Stem("ghiaia"), "ghiai" );
	deepEqual( Stem("ghiaie"), "ghiai" );
	deepEqual( Stem("ghigno"), "ghign" );
	deepEqual( Stem("ghirardelli"), "ghirardell" );
	deepEqual( Stem("ghoober"), "ghoober" );
	deepEqual( Stem("gi"), "gi" );
	deepEqual( Stem("già"), "già" );
	deepEqual( Stem("giacarta"), "giacart" );
	deepEqual( Stem("giacché"), "giacc" );
	deepEqual( Stem("giacciono"), "giacc" );
	deepEqual( Stem("giace"), "giac" );
	deepEqual( Stem("giacere"), "giac" );
	deepEqual( Stem("giaceva"), "giac" );
	deepEqual( Stem("giacevano"), "giac" );
	deepEqual( Stem("giacimenti"), "giac" );
	deepEqual( Stem("giacimento"), "giac" );
	deepEqual( Stem("giacobbo"), "giacobb" );
	deepEqual( Stem("giacomel"), "giacomel" );
	deepEqual( Stem("giacomelli"), "giacomell" );
	deepEqual( Stem("giacomin"), "giacomin" );
	deepEqual( Stem("giacomo"), "giacom" );
	deepEqual( Stem("gialappàs"), "gialappàs" );
	deepEqual( Stem("gialla"), "giall" );
	deepEqual( Stem("gialle"), "giall" );
	deepEqual( Stem("gialli"), "giall" );
	deepEqual( Stem("giallo"), "giall" );
	deepEqual( Stem("gialloblù"), "gialloblù" );
	deepEqual( Stem("giallognola"), "giallognol" );
	deepEqual( Stem("giallorossa"), "gialloross" );
	deepEqual( Stem("giallorosso"), "gialloross" );
	deepEqual( Stem("giamai"), "giama" );
	deepEqual( Stem("giamaica"), "giamaic" );
	deepEqual( Stem("giambra"), "giambr" );
	deepEqual( Stem("giammai"), "giamma" );
	deepEqual( Stem("giampaolo"), "giampaol" );
	deepEqual( Stem("giampiero"), "giampier" );
	deepEqual( Stem("gian"), "gian" );
	deepEqual( Stem("giancarlo"), "gianc" );
	deepEqual( Stem("gianfranco"), "gianfranc" );
	deepEqual( Stem("giangiacomo"), "giangiacom" );
	deepEqual( Stem("gianluca"), "gianluc" );
	deepEqual( Stem("gianluigi"), "gianluig" );
	deepEqual( Stem("giannantonio"), "giannanton" );
	deepEqual( Stem("giannatale"), "giannatal" );
	deepEqual( Stem("giannetti"), "giannett" );
	deepEqual( Stem("gianni"), "giann" );
	deepEqual( Stem("giannini"), "giannin" );
	deepEqual( Stem("giannino"), "giannin" );
	deepEqual( Stem("giannuzzi"), "giannuzz" );
	deepEqual( Stem("gianpaolo"), "gianpaol" );
	deepEqual( Stem("giappone"), "giappon" );
	deepEqual( Stem("giapponese"), "giappones" );
	deepEqual( Stem("giapponesi"), "giappones" );
	deepEqual( Stem("giapppone"), "giapppon" );
	deepEqual( Stem("giarda"), "giard" );
	deepEqual( Stem("giardin"), "giardin" );
	deepEqual( Stem("giardinetto"), "giardinett" );
	deepEqual( Stem("giardini"), "giardin" );
	deepEqual( Stem("giardiniere"), "giardin" );
	deepEqual( Stem("giardino"), "giardin" );
	deepEqual( Stem("gifim"), "gifim" );
	deepEqual( Stem("gigante"), "gigant" );
	deepEqual( Stem("gigantesca"), "gigantesc" );
	deepEqual( Stem("gigantesco"), "gigantesc" );
	deepEqual( Stem("giganti"), "gigant" );
	deepEqual( Stem("gigi"), "gig" );
	deepEqual( Stem("gigli"), "gigl" );
	deepEqual( Stem("giglio"), "gigl" );
	deepEqual( Stem("gil"), "gil" );
	deepEqual( Stem("gilardini"), "gilardin" );
	deepEqual( Stem("gillian"), "gillian" );
	deepEqual( Stem("gilly"), "gilly" );
	deepEqual( Stem("gim"), "gim" );
	deepEqual( Stem("gin"), "gin" );
	deepEqual( Stem("gina"), "gin" );
	deepEqual( Stem("ginevra"), "ginevr" );
	deepEqual( Stem("ginn"), "ginn" );
	deepEqual( Stem("ginnastica"), "ginnast" );
	deepEqual( Stem("gino"), "gin" );
	deepEqual( Stem("ginocchia"), "ginocc" );
	deepEqual( Stem("ginocchio"), "ginocc" );
	deepEqual( Stem("ginocchioni"), "ginocchion" );
	deepEqual( Stem("gioca"), "gioc" );
	deepEqual( Stem("giocando"), "gioc" );
	deepEqual( Stem("giocano"), "gioc" );
	deepEqual( Stem("giocare"), "gioc" );
	deepEqual( Stem("giocata"), "gioc" );
	deepEqual( Stem("giocate"), "gioc" );
	deepEqual( Stem("giocato"), "gioc" );
	deepEqual( Stem("giocator"), "giocator" );
	deepEqual( Stem("giocatore"), "giocator" );
	deepEqual( Stem("giocatori"), "giocator" );
	deepEqual( Stem("giocatrici"), "giocatric" );
	deepEqual( Stem("giocava"), "gioc" );
	deepEqual( Stem("giocavan"), "giocavan" );
	deepEqual( Stem("giocavano"), "gioc" );
	deepEqual( Stem("giocherà"), "gioc" );
	deepEqual( Stem("giocheresti"), "gioc" );
	deepEqual( Stem("giochetto"), "giochett" );
	deepEqual( Stem("giochi"), "gioc" );
	deepEqual( Stem("gioco"), "gioc" );
	deepEqual( Stem("giocolieri"), "giocolier" );
	deepEqual( Stem("giocondi"), "giocond" );
	deepEqual( Stem("giocondità"), "giocond" );
	deepEqual( Stem("giocondo"), "giocond" );
	deepEqual( Stem("giocoso"), "giocos" );
	deepEqual( Stem("giogaia"), "giogai" );
	deepEqual( Stem("gioghi"), "giog" );
	deepEqual( Stem("giogo"), "giog" );
	deepEqual( Stem("gioia"), "gioi" );
	deepEqual( Stem("gioià"), "gioi" );
	deepEqual( Stem("gioie"), "gioi" );
	deepEqual( Stem("gioiello"), "gioiell" );
	deepEqual( Stem("gioiosa"), "gioios" );
	deepEqual( Stem("giokhar"), "giokh" );
	deepEqual( Stem("giombini"), "giombin" );
	deepEqual( Stem("gionata"), "gion" );
	deepEqual( Stem("gionate"), "gion" );
	deepEqual( Stem("giordania"), "giordan" );
	deepEqual( Stem("giordano"), "giord" );
	deepEqual( Stem("gioregio"), "gioreg" );
	deepEqual( Stem("giorgio"), "giorg" );
	deepEqual( Stem("giorgione"), "giorgion" );
	deepEqual( Stem("giornale"), "giornal" );
	deepEqual( Stem("giornalè"), "giornal" );
	deepEqual( Stem("giornali"), "giornal" );
	deepEqual( Stem("giornaliera"), "giornalier" );
	deepEqual( Stem("giornaliere"), "giornal" );
	deepEqual( Stem("giornaliero"), "giornalier" );
	deepEqual( Stem("giornalismo"), "giornal" );
	deepEqual( Stem("giornalista"), "giornal" );
	deepEqual( Stem("giornaliste"), "giornal" );
	deepEqual( Stem("giornalisti"), "giornal" );
	deepEqual( Stem("giornalistica"), "giornalist" );
	deepEqual( Stem("giornalisticamente"), "giornalist" );
	deepEqual( Stem("giornalistici"), "giornalist" );
	deepEqual( Stem("giornalistico"), "giornalist" );
	deepEqual( Stem("giornalisticò"), "giornalistic" );
	deepEqual( Stem("giornalmente"), "giornal" );
	deepEqual( Stem("giornalsti"), "giornalst" );
	deepEqual( Stem("giornata"), "giorn" );
	deepEqual( Stem("giornate"), "giorn" );
	deepEqual( Stem("giorni"), "giorn" );
	deepEqual( Stem("giorno"), "giorn" );
	deepEqual( Stem("giosafat"), "giosafat" );
	deepEqual( Stem("giova"), "giov" );
	deepEqual( Stem("giovacchini"), "giovacchin" );
	deepEqual( Stem("giovamento"), "giov" );
	deepEqual( Stem("giovanbatista"), "giovanbat" );
	deepEqual( Stem("giovanbattista"), "giovanbatt" );
	deepEqual( Stem("giovane"), "giovan" );
	deepEqual( Stem("giovanetto"), "giovanett" );
	deepEqual( Stem("giovani"), "giovan" );
	deepEqual( Stem("giovanile"), "giovanil" );
	deepEqual( Stem("giovanili"), "giovanil" );
	deepEqual( Stem("giovanni"), "giovann" );
	deepEqual( Stem("giovanotto"), "giovanott" );
	deepEqual( Stem("giovasse"), "giov" );
	deepEqual( Stem("giovato"), "giov" );
	deepEqual( Stem("giove"), "giov" );
	deepEqual( Stem("giovedì"), "gioved" );
	deepEqual( Stem("gioventù"), "gioventù" );
	deepEqual( Stem("gioverebbero"), "giov" );
	deepEqual( Stem("giovia"), "giov" );
	deepEqual( Stem("gioviale"), "giovial" );
	deepEqual( Stem("gioviali"), "giovial" );
	deepEqual( Stem("giovinastri"), "giovinastr" );
	deepEqual( Stem("giovine"), "giovin" );
	deepEqual( Stem("giovinetta"), "giovinett" );
	deepEqual( Stem("giovinette"), "giovinett" );
	deepEqual( Stem("giovinetti"), "giovinett" );
	deepEqual( Stem("giovinetto"), "giovinett" );
	deepEqual( Stem("giovinezza"), "giovinezz" );
	deepEqual( Stem("giovinissimo"), "giovinissim" );
	deepEqual( Stem("giovinotto"), "giovinott" );
	deepEqual( Stem("gip"), "gip" );
	deepEqual( Stem("gipo"), "gip" );
	deepEqual( Stem("gira"), "gir" );
	deepEqual( Stem("giraldi"), "girald" );
	deepEqual( Stem("giran"), "giran" );
	deepEqual( Stem("girando"), "gir" );
	deepEqual( Stem("girandolar"), "girandol" );
	deepEqual( Stem("girandoli"), "gir" );
	deepEqual( Stem("girar"), "gir" );
	deepEqual( Stem("girare"), "gir" );
	deepEqual( Stem("girata"), "gir" );
	deepEqual( Stem("girati"), "gir" );
	deepEqual( Stem("giratina"), "giratin" );
	deepEqual( Stem("girato"), "gir" );
	deepEqual( Stem("girava"), "gir" );
	deepEqual( Stem("giravano"), "gir" );
	deepEqual( Stem("giravolta"), "giravolt" );
	deepEqual( Stem("giravolte"), "giravolt" );
	deepEqual( Stem("giri"), "gir" );
	deepEqual( Stem("girigogolo"), "girigogol" );
	deepEqual( Stem("giro"), "gir" );
	deepEqual( Stem("girò"), "gir" );
	deepEqual( Stem("girolama"), "girolam" );
	deepEqual( Stem("girolamo"), "girolam" );
	deepEqual( Stem("girone"), "giron" );
	deepEqual( Stem("gisutizia"), "gisutiz" );
	deepEqual( Stem("gita"), "git" );
	deepEqual( Stem("gitonga"), "gitong" );
	deepEqual( Stem("giu"), "giu" );
	deepEqual( Stem("giù"), "giù" );
	deepEqual( Stem("giubbotti"), "giubbott" );
	deepEqual( Stem("giubbotto"), "giubbott" );
	deepEqual( Stem("giubileo"), "giubile" );
	deepEqual( Stem("giubilo"), "giubil" );
	deepEqual( Stem("giucas"), "giucas" );
	deepEqual( Stem("giuda"), "giud" );
	deepEqual( Stem("giudei"), "giude" );
	deepEqual( Stem("giudeo"), "giude" );
	deepEqual( Stem("giudica"), "giudic" );
	deepEqual( Stem("giudicano"), "giudic" );
	deepEqual( Stem("giudicante"), "giudic" );
	deepEqual( Stem("giudicar"), "giudic" );
	deepEqual( Stem("giudicare"), "giudic" );
	deepEqual( Stem("giudicasse"), "giudic" );
	deepEqual( Stem("giudicata"), "giudic" );
	deepEqual( Stem("giudicate"), "giudic" );
	deepEqual( Stem("giudicati"), "giudic" );
	deepEqual( Stem("giudicato"), "giudic" );
	deepEqual( Stem("giudice"), "giudic" );
	deepEqual( Stem("giudici"), "giudic" );
	deepEqual( Stem("giudicò"), "giudic" );
	deepEqual( Stem("giudizi"), "giudiz" );
	deepEqual( Stem("giudiziale"), "giudizial" );
	deepEqual( Stem("giudiziari"), "giudiziar" );
	deepEqual( Stem("giudiziaria"), "giudiziar" );
	deepEqual( Stem("giudiziarie"), "giudiziar" );
	deepEqual( Stem("giudiziario"), "giudiziar" );
	deepEqual( Stem("giudizio"), "giudiz" );
	deepEqual( Stem("giudizioaria"), "giudizioar" );
	deepEqual( Stem("giudizioso"), "giudiz" );
	deepEqual( Stem("giuerra"), "giuerr" );
	deepEqual( Stem("giugni"), "giugn" );
	deepEqual( Stem("giugno"), "giugn" );
	deepEqual( Stem("giulia"), "giul" );
	deepEqual( Stem("giuliana"), "giulian" );
	deepEqual( Stem("giuliani"), "giulian" );
	deepEqual( Stem("giuliano"), "giul" );
	deepEqual( Stem("giulianova"), "giulianov" );
	deepEqual( Stem("giulietta"), "giuliett" );
	deepEqual( Stem("giulietti"), "giuliett" );
	deepEqual( Stem("giulio"), "giul" );
	deepEqual( Stem("giulivo"), "giul" );
	deepEqual( Stem("giunga"), "giung" );
	deepEqual( Stem("giunge"), "giung" );
	deepEqual( Stem("giungendo"), "giung" );
	deepEqual( Stem("giungere"), "giung" );
	deepEqual( Stem("giungla"), "giungl" );
	deepEqual( Stem("giungono"), "giung" );
	deepEqual( Stem("giunse"), "giuns" );
	deepEqual( Stem("giunsero"), "giunser" );
	deepEqual( Stem("giunta"), "giunt" );
	deepEqual( Stem("giuntarono"), "giunt" );
	deepEqual( Stem("giunte"), "giunt" );
	deepEqual( Stem("giunti"), "giunt" );
	deepEqual( Stem("giunto"), "giunt" );
	deepEqual( Stem("giuoco"), "giuoc" );
	deepEqual( Stem("giura"), "giur" );
	deepEqual( Stem("giuramenti"), "giur" );
	deepEqual( Stem("giuramento"), "giur" );
	deepEqual( Stem("giurando"), "giur" );
	deepEqual( Stem("giurare"), "giur" );
	deepEqual( Stem("giurata"), "giur" );
	deepEqual( Stem("giurate"), "giur" );
	deepEqual( Stem("giurati"), "giur" );
	deepEqual( Stem("giurato"), "giur" );
	deepEqual( Stem("giureconsulto"), "giureconsult" );
	deepEqual( Stem("giuria"), "giur" );
	deepEqual( Stem("giuriamo"), "giur" );
	deepEqual( Stem("giuridica"), "giurid" );
	deepEqual( Stem("giuridiche"), "giurid" );
	deepEqual( Stem("giuridici"), "giurid" );
	deepEqual( Stem("giuridico"), "giurid" );
	deepEqual( Stem("giurisdizione"), "giurisdizion" );
	deepEqual( Stem("giurisperiti"), "giurisper" );
	deepEqual( Stem("giurisprudenza"), "giurisprudent" );
	deepEqual( Stem("giuro"), "giur" );
	deepEqual( Stem("giuseppa"), "giusepp" );
	deepEqual( Stem("giuseppe"), "giusepp" );
	deepEqual( Stem("giuseppina"), "giuseppin" );
	deepEqual( Stem("giussano"), "giuss" );
	deepEqual( Stem("giusta"), "giust" );
	deepEqual( Stem("giustamente"), "giust" );
	deepEqual( Stem("giuste"), "giust" );
	deepEqual( Stem("giusti"), "giust" );
	deepEqual( Stem("giustificare"), "giustific" );
	deepEqual( Stem("giustificarlo"), "giustific" );
	deepEqual( Stem("giustificarne"), "giustific" );
	deepEqual( Stem("giustificata"), "giustific" );
	deepEqual( Stem("giustificati"), "giustific" );
	deepEqual( Stem("giustificato"), "giustific" );
	deepEqual( Stem("giustificazione"), "giustif" );
	deepEqual( Stem("giustificherò"), "giustific" );
	deepEqual( Stem("giustiniani"), "giustinian" );
	deepEqual( Stem("giustizia"), "giustiz" );
	deepEqual( Stem("giustizialismo"), "giustizial" );
	deepEqual( Stem("giustizie"), "giustiz" );
	deepEqual( Stem("giustiziere"), "giustiz" );
	deepEqual( Stem("giusto"), "giust" );
	deepEqual( Stem("giustzia"), "giustz" );
	deepEqual( Stem("gl"), "gl" );
	deepEqual( Stem("glan"), "glan" );
	deepEqual( Stem("glasgow"), "glasgow" );
	deepEqual( Stem("glbale"), "glbal" );
	deepEqual( Stem("glenn"), "glenn" );
	deepEqual( Stem("gli"), "gli" );
	deepEqual( Stem("gliel"), "gliel" );
	deepEqual( Stem("gliela"), "gliel" );
	deepEqual( Stem("gliele"), "gliel" );
	deepEqual( Stem("glieli"), "gliel" );
	deepEqual( Stem("glielo"), "gliel" );
	deepEqual( Stem("glien"), "glien" );
	deepEqual( Stem("gliene"), "glien" );
	deepEqual( Stem("glissato"), "gliss" );
	deepEqual( Stem("global"), "global" );
	deepEqual( Stem("globale"), "global" );
	deepEqual( Stem("globalizzazione"), "globalizz" );
	deepEqual( Stem("globarend"), "globarend" );
	deepEqual( Stem("globefish"), "globefish" );
	deepEqual( Stem("globi"), "glob" );
	deepEqual( Stem("globo"), "glob" );
	deepEqual( Stem("gloria"), "glor" );
	deepEqual( Stem("glorificato"), "glorific" );
	deepEqual( Stem("gloriosa"), "glorios" );
	deepEqual( Stem("gloriose"), "glorios" );
	deepEqual( Stem("glorioso"), "glorios" );
	deepEqual( Stem("gloucester"), "gloucester" );
	deepEqual( Stem("gmbh"), "gmbh" );
	deepEqual( Stem("gmr"), "gmr" );
	deepEqual( Stem("gmt"), "gmt" );
	deepEqual( Stem("gn"), "gn" );
	deepEqual( Stem("gnl"), "gnl" );
	deepEqual( Stem("gnutti"), "gnutt" );
	deepEqual( Stem("gocciola"), "gocciol" );
	deepEqual( Stem("gocciolanti"), "gocciol" );
	deepEqual( Stem("gocciole"), "gocciol" );
	deepEqual( Stem("gocciolino"), "gocciolin" );
	deepEqual( Stem("gocciolo"), "gocciol" );
	deepEqual( Stem("goccioloni"), "gocciolon" );
	deepEqual( Stem("goda"), "god" );
	deepEqual( Stem("godard"), "godard" );
	deepEqual( Stem("goder"), "goder" );
	deepEqual( Stem("godere"), "god" );
	deepEqual( Stem("goderebbe"), "god" );
	deepEqual( Stem("goderla"), "god" );
	deepEqual( Stem("godersela"), "godersel" );
	deepEqual( Stem("godersi"), "god" );
	deepEqual( Stem("godesse"), "godess" );
	deepEqual( Stem("godeva"), "god" );
	deepEqual( Stem("godfrey"), "godfrey" );
	deepEqual( Stem("godiamola"), "godiamol" );
	deepEqual( Stem("godimenti"), "god" );
	deepEqual( Stem("godo"), "god" );
	deepEqual( Stem("godono"), "god" );
	deepEqual( Stem("godrei"), "godre" );
	deepEqual( Stem("godute"), "god" );
	deepEqual( Stem("goduti"), "god" );
	deepEqual( Stem("goduto"), "god" );
	deepEqual( Stem("goebbels"), "goebbels" );
	deepEqual( Stem("goetschi"), "goetsc" );
	deepEqual( Stem("goffa"), "goff" );
	deepEqual( Stem("goffaggine"), "goffaggin" );
	deepEqual( Stem("goffamente"), "goff" );
	deepEqual( Stem("gol"), "gol" );
	deepEqual( Stem("gola"), "gol" );
	deepEqual( Stem("golden"), "golden" );
	deepEqual( Stem("goldman"), "goldman" );
	deepEqual( Stem("goldstein"), "goldstein" );
	deepEqual( Stem("gole"), "gol" );
	deepEqual( Stem("goleador"), "goleador" );
	deepEqual( Stem("golfi"), "golf" );
	deepEqual( Stem("golfo"), "golf" );
	deepEqual( Stem("golia"), "gol" );
	deepEqual( Stem("golino"), "golin" );
	deepEqual( Stem("golpe"), "golp" );
	deepEqual( Stem("gomez"), "gomez" );
	deepEqual( Stem("gomita"), "gom" );
	deepEqual( Stem("gomitata"), "gomit" );
	deepEqual( Stem("gomitate"), "gomit" );
	deepEqual( Stem("gomiti"), "gom" );
	deepEqual( Stem("gomito"), "gom" );
	deepEqual( Stem("gomitolo"), "gomitol" );
	deepEqual( Stem("gommapiuma"), "gommapium" );
	deepEqual( Stem("gomme"), "gomm" );
	deepEqual( Stem("gommoni"), "gommon" );
	deepEqual( Stem("goncharenko"), "goncharenk" );
	deepEqual( Stem("gonfaloni"), "gonfalon" );
	deepEqual( Stem("gonfi"), "gonf" );
	deepEqual( Stem("gonfiar"), "gonf" );
	deepEqual( Stem("gonfiarono"), "gonf" );
	deepEqual( Stem("gonfiata"), "gonf" );
	deepEqual( Stem("gonfiato"), "gonf" );
	deepEqual( Stem("gonfiava"), "gonf" );
	deepEqual( Stem("gonfiavan"), "gonfiavan" );
	deepEqual( Stem("gonfie"), "gonf" );
	deepEqual( Stem("gonfio"), "gonf" );
	deepEqual( Stem("gongola"), "gongol" );
	deepEqual( Stem("gongolante"), "gongol" );
	deepEqual( Stem("gonnella"), "gonnell" );
	deepEqual( Stem("gonzaga"), "gonzag" );
	deepEqual( Stem("gonzalo"), "gonzal" );
	deepEqual( Stem("gora"), "gor" );
	deepEqual( Stem("goran"), "goran" );
	deepEqual( Stem("gorbaciov"), "gorbaciov" );
	deepEqual( Stem("gordon"), "gordon" );
	deepEqual( Stem("gorgiere"), "gorg" );
	deepEqual( Stem("gorgoglia"), "gorgogl" );
	deepEqual( Stem("gorgoglìo"), "gorgoglì" );
	deepEqual( Stem("gorgonzola"), "gorgonzol" );
	deepEqual( Stem("gori"), "gor" );
	deepEqual( Stem("gorini"), "gorin" );
	deepEqual( Stem("gortari"), "gortar" );
	deepEqual( Stem("gosset"), "gosset" );
	deepEqual( Stem("gote"), "got" );
	deepEqual( Stem("gottardo"), "gottard" );
	deepEqual( Stem("gouernatore"), "gouern" );
	deepEqual( Stem("gourmelon"), "gourmelon" );
	deepEqual( Stem("governabili"), "govern" );
	deepEqual( Stem("governabilità"), "govern" );
	deepEqual( Stem("governante"), "govern" );
	deepEqual( Stem("governanti"), "govern" );
	deepEqual( Stem("governare"), "govern" );
	deepEqual( Stem("governarli"), "govern" );
	deepEqual( Stem("governarsi"), "govern" );
	deepEqual( Stem("governati"), "govern" );
	deepEqual( Stem("governativa"), "govern" );
	deepEqual( Stem("governative"), "govern" );
	deepEqual( Stem("governativi"), "govern" );
	deepEqual( Stem("governativo"), "govern" );
	deepEqual( Stem("governatorato"), "governator" );
	deepEqual( Stem("governatore"), "govern" );
	deepEqual( Stem("governatori"), "govern" );
	deepEqual( Stem("governavano"), "govern" );
	deepEqual( Stem("governi"), "govern" );
	deepEqual( Stem("governo"), "govern" );
	deepEqual( Stem("gozzini"), "gozzin" );
	deepEqual( Stem("gozzo"), "gozz" );
	deepEqual( Stem("gozzovigliando"), "gozzovigl" );
	deepEqual( Stem("gp"), "gp" );
	deepEqual( Stem("gr"), "gr" );
	deepEqual( Stem("grabbi"), "grabb" );
	deepEqual( Stem("grabowsky"), "grabowsky" );
	deepEqual( Stem("graciov"), "graciov" );
	deepEqual( Stem("gradazioni"), "gradazion" );
	deepEqual( Stem("gradevolmente"), "gradevol" );
	deepEqual( Stem("gradi"), "grad" );
	deepEqual( Stem("gradinata"), "gradin" );
	deepEqual( Stem("gradinate"), "gradin" );
	deepEqual( Stem("gradini"), "gradin" );
	deepEqual( Stem("gradino"), "gradin" );
	deepEqual( Stem("gradisca"), "grad" );
	deepEqual( Stem("gradisce"), "grad" );
	deepEqual( Stem("gradita"), "grad" );
	deepEqual( Stem("gradito"), "grad" );
	deepEqual( Stem("grado"), "grad" );
	deepEqual( Stem("graduale"), "gradual" );
	deepEqual( Stem("gradualmente"), "gradual" );
	deepEqual( Stem("graduato"), "gradu" );
	deepEqual( Stem("graduatorie"), "graduator" );
	deepEqual( Stem("graffiato"), "graff" );
	deepEqual( Stem("grafica"), "grafic" );
	deepEqual( Stem("grafici"), "grafic" );
	deepEqual( Stem("graham"), "graham" );
	deepEqual( Stem("gramigne"), "gramign" );
	deepEqual( Stem("grammatica"), "grammat" );
	deepEqual( Stem("grammi"), "gramm" );
	deepEqual( Stem("gramola"), "gramol" );
	deepEqual( Stem("gran"), "gran" );
	deepEqual( Stem("granadà"), "granad" );
	deepEqual( Stem("granaglie"), "granagl" );
	deepEqual( Stem("granai"), "grana" );
	deepEqual( Stem("granaio"), "granai" );
	deepEqual( Stem("granata"), "gran" );
	deepEqual( Stem("granati"), "gran" );
	deepEqual( Stem("grand"), "grand" );
	deepEqual( Stem("grande"), "grand" );
	deepEqual( Stem("grandeggiava"), "grandegg" );
	deepEqual( Stem("grandezza"), "grandezz" );
	deepEqual( Stem("grandezze"), "grandezz" );
	deepEqual( Stem("grandi"), "grand" );
	deepEqual( Stem("grandinato"), "grandin" );
	deepEqual( Stem("grandine"), "grandin" );
	deepEqual( Stem("grandini"), "grandin" );
	deepEqual( Stem("grandiosa"), "grandios" );
	deepEqual( Stem("grandiosi"), "grandios" );
	deepEqual( Stem("grandissima"), "grandissim" );
	deepEqual( Stem("grandissime"), "grandissim" );
	deepEqual( Stem("grane"), "gran" );
	deepEqual( Stem("granelli"), "granell" );
	deepEqual( Stem("granello"), "granell" );
	deepEqual( Stem("granferry"), "granferry" );
	deepEqual( Stem("granger"), "granger" );
	deepEqual( Stem("grani"), "gran" );
	deepEqual( Stem("grano"), "gran" );
	deepEqual( Stem("granocchia"), "granocc" );
	deepEqual( Stem("grappa"), "grapp" );
	deepEqual( Stem("grappoli"), "grappol" );
	deepEqual( Stem("grasce"), "grasc" );
	deepEqual( Stem("grassadonia"), "grassadon" );
	deepEqual( Stem("grassetto"), "grassett" );
	deepEqual( Stem("grassi"), "grass" );
	deepEqual( Stem("grassoccia"), "grassocc" );
	deepEqual( Stem("grassotto"), "grassott" );
	deepEqual( Stem("grata"), "grat" );
	deepEqual( Stem("grate"), "grat" );
	deepEqual( Stem("grati"), "grat" );
	deepEqual( Stem("gratias"), "gratias" );
	deepEqual( Stem("graticcio"), "graticc" );
	deepEqual( Stem("gratificata"), "gratific" );
	deepEqual( Stem("gratis"), "gratis" );
	deepEqual( Stem("gratitudine"), "gratitudin" );
	deepEqual( Stem("grato"), "grat" );
	deepEqual( Stem("gratuita"), "gratu" );
	deepEqual( Stem("gratuitamente"), "gratuit" );
	deepEqual( Stem("gratuiti"), "gratu" );
	deepEqual( Stem("grave"), "grav" );
	deepEqual( Stem("gravemente"), "gravement" );
	deepEqual( Stem("gravezza"), "gravezz" );
	deepEqual( Stem("gravezze"), "gravezz" );
	deepEqual( Stem("gravi"), "grav" );
	deepEqual( Stem("gravide"), "gravid" );
	deepEqual( Stem("graviores"), "graviores" );
	deepEqual( Stem("gravissime"), "gravissim" );
	deepEqual( Stem("gravissimo"), "gravissim" );
	deepEqual( Stem("gravità"), "gravit" );
	deepEqual( Stem("gravitato"), "gravit" );
	deepEqual( Stem("gravosa"), "gravos" );
	deepEqual( Stem("gravoso"), "gravos" );
	deepEqual( Stem("grazia"), "graz" );
	deepEqual( Stem("graziato"), "graz" );
	deepEqual( Stem("grazie"), "graz" );
	deepEqual( Stem("graziosa"), "grazios" );
	deepEqual( Stem("grazioso"), "grazios" );
	deepEqual( Stem("grazzini"), "grazzin" );
	deepEqual( Stem("greca"), "grec" );
	deepEqual( Stem("grecia"), "grec" );
	deepEqual( Stem("greco"), "grec" );
	deepEqual( Stem("green"), "green" );
	deepEqual( Stem("greenspan"), "greenspan" );
	deepEqual( Stem("gregge"), "gregg" );
	deepEqual( Stem("greggio"), "gregg" );
	deepEqual( Stem("gregorio"), "gregor" );
	deepEqual( Stem("gregucci"), "gregucc" );
	deepEqual( Stem("grembiule"), "grembiul" );
	deepEqual( Stem("gremisce"), "grem" );
	deepEqual( Stem("gremita"), "grem" );
	deepEqual( Stem("gremite"), "grem" );
	deepEqual( Stem("gremiti"), "grem" );
	deepEqual( Stem("gremito"), "grem" );
	deepEqual( Stem("gremlin"), "gremlin" );
	deepEqual( Stem("greppi"), "grepp" );
	deepEqual( Stem("greppia"), "grepp" );
	deepEqual( Stem("gretta"), "grett" );
	deepEqual( Stem("gretto"), "grett" );
	deepEqual( Stem("grevino"), "grevin" );
	deepEqual( Stem("grid"), "grid" );
	deepEqual( Stem("grida"), "grid" );
	deepEqual( Stem("gridando"), "grid" );
	deepEqual( Stem("gridano"), "grid" );
	deepEqual( Stem("gridar"), "grid" );
	deepEqual( Stem("gridare"), "grid" );
	deepEqual( Stem("gridargli"), "grid" );
	deepEqual( Stem("gridaron"), "gridaron" );
	deepEqual( Stem("gridarono"), "grid" );
	deepEqual( Stem("gridasse"), "grid" );
	deepEqual( Stem("gridassero"), "grid" );
	deepEqual( Stem("gridato"), "grid" );
	deepEqual( Stem("gridatogli"), "gridatogl" );
	deepEqual( Stem("gridava"), "grid" );
	deepEqual( Stem("gridavano"), "grid" );
	deepEqual( Stem("gride"), "grid" );
	deepEqual( Stem("gridi"), "grid" );
	deepEqual( Stem("grido"), "grid" );
	deepEqual( Stem("gridò"), "grid" );
	deepEqual( Stem("grifagni"), "grifagn" );
	deepEqual( Stem("grifocapital"), "grifocapital" );
	deepEqual( Stem("grifocash"), "grifocash" );
	deepEqual( Stem("griforend"), "griforend" );
	deepEqual( Stem("grigi"), "grig" );
	deepEqual( Stem("grigia"), "grig" );
	deepEqual( Stem("grigioni"), "grigion" );
	deepEqual( Stem("grigiore"), "grigior" );
	deepEqual( Stem("grignapoco"), "grignapoc" );
	deepEqual( Stem("grilla"), "grill" );
	deepEqual( Stem("grilli"), "grill" );
	deepEqual( Stem("grillo"), "grill" );
	deepEqual( Stem("grimaldi"), "grimald" );
	deepEqual( Stem("grimaudo"), "grimaud" );
	deepEqual( Stem("grinavi"), "grin" );
	deepEqual( Stem("grinfie"), "grinf" );
	deepEqual( Stem("grinta"), "grint" );
	deepEqual( Stem("grintoso"), "grintos" );
	deepEqual( Stem("grinze"), "grinz" );
	deepEqual( Stem("grinzose"), "grinzos" );
	deepEqual( Stem("griso"), "gris" );
	deepEqual( Stem("grist"), "grist" );
	deepEqual( Stem("grlic"), "grlic" );
	deepEqual( Stem("grondaia"), "grondai" );
	deepEqual( Stem("grondanti"), "grondant" );
	deepEqual( Stem("groppino"), "groppin" );
	deepEqual( Stem("grossa"), "gross" );
	deepEqual( Stem("grosse"), "gross" );
	deepEqual( Stem("grosseto"), "grosset" );
	deepEqual( Stem("grossi"), "gross" );
	deepEqual( Stem("grosso"), "gross" );
	deepEqual( Stem("grossolana"), "grossolan" );
	deepEqual( Stem("grossolane"), "grossolan" );
	deepEqual( Stem("grotta"), "grott" );
	deepEqual( Stem("grotte"), "grott" );
	deepEqual( Stem("group"), "group" );
	deepEqual( Stem("grozny"), "grozny" );
	deepEqual( Stem("gruber"), "gruber" );
	deepEqual( Stem("grucce"), "grucc" );
	deepEqual( Stem("grupo"), "grup" );
	deepEqual( Stem("gruppetto"), "gruppett" );
	deepEqual( Stem("gruppi"), "grupp" );
	deepEqual( Stem("gruppo"), "grupp" );
	deepEqual( Stem("gruppoo"), "gruppo" );
	deepEqual( Stem("grupppo"), "gruppp" );
	deepEqual( Stem("grz"), "grz" );
	deepEqual( Stem("gsm"), "gsm" );
	deepEqual( Stem("gt"), "gt" );
	deepEqual( Stem("gua"), "gua" );
	deepEqual( Stem("guadagna"), "guadagn" );
	deepEqual( Stem("guadagnar"), "guadagn" );
	deepEqual( Stem("guadagnare"), "guadagn" );
	deepEqual( Stem("guadagnati"), "guadagn" );
	deepEqual( Stem("guadagnato"), "guadagn" );
	deepEqual( Stem("guadagni"), "guadagn" );
	deepEqual( Stem("guadagno"), "guadagn" );
	deepEqual( Stem("guadagnò"), "guadagn" );
	deepEqual( Stem("guadalupa"), "guadalup" );
	deepEqual( Stem("guadalupe"), "guadalup" );
	deepEqual( Stem("guadare"), "guad" );
	deepEqual( Stem("guado"), "guad" );
	deepEqual( Stem("guai"), "gua" );
	deepEqual( Stem("guaio"), "guai" );
	deepEqual( Stem("gualchiere"), "gualc" );
	deepEqual( Stem("gualco"), "gualc" );
	deepEqual( Stem("gualdo"), "guald" );
	deepEqual( Stem("guance"), "guanc" );
	deepEqual( Stem("guancia"), "guanc" );
	deepEqual( Stem("guanciali"), "guancial" );
	deepEqual( Stem("guancialino"), "guancialin" );
	deepEqual( Stem("guanti"), "guant" );
	deepEqual( Stem("guantiere"), "guant" );
	deepEqual( Stem("guarda"), "guard" );
	deepEqual( Stem("guardalinee"), "guardaline" );
	deepEqual( Stem("guardando"), "guard" );
	deepEqual( Stem("guardandogli"), "guard" );
	deepEqual( Stem("guardandola"), "guard" );
	deepEqual( Stem("guardandolo"), "guard" );
	deepEqual( Stem("guardandosi"), "guard" );
	deepEqual( Stem("guardano"), "guard" );
	deepEqual( Stem("guardaos"), "guardaos" );
	deepEqual( Stem("guardar"), "guard" );
	deepEqual( Stem("guardarci"), "guard" );
	deepEqual( Stem("guardare"), "guard" );
	deepEqual( Stem("guardargli"), "guard" );
	deepEqual( Stem("guardarla"), "guard" );
	deepEqual( Stem("guardarle"), "guard" );
	deepEqual( Stem("guardarlo"), "guard" );
	deepEqual( Stem("guardarobi"), "guardarob" );
	deepEqual( Stem("guardaron"), "guardaron" );
	deepEqual( Stem("guardarono"), "guard" );
	deepEqual( Stem("guardarsene"), "guard" );
	deepEqual( Stem("guardarsi"), "guard" );
	deepEqual( Stem("guardarvi"), "guard" );
	deepEqual( Stem("guardasigilli"), "guardasigill" );
	deepEqual( Stem("guardasse"), "guard" );
	deepEqual( Stem("guardata"), "guard" );
	deepEqual( Stem("guardate"), "guard" );
	deepEqual( Stem("guardatemi"), "guardatem" );
	deepEqual( Stem("guardati"), "guard" );
	deepEqual( Stem("guardato"), "guard" );
	deepEqual( Stem("guardatura"), "guardatur" );
	deepEqual( Stem("guardava"), "guard" );
	deepEqual( Stem("guardavan"), "guardavan" );
	deepEqual( Stem("guardavano"), "guard" );
	deepEqual( Stem("guarderò"), "guard" );
	deepEqual( Stem("guardi"), "guard" );
	deepEqual( Stem("guardia"), "guard" );
	deepEqual( Stem("guardiana"), "guardian" );
	deepEqual( Stem("guardiani"), "guardian" );
	deepEqual( Stem("guardiano"), "guard" );
	deepEqual( Stem("guardie"), "guard" );
	deepEqual( Stem("guardinga"), "guarding" );
	deepEqual( Stem("guardinghi"), "guarding" );
	deepEqual( Stem("guardò"), "guard" );
	deepEqual( Stem("guarì"), "guar" );
	deepEqual( Stem("guaribili"), "guaribil" );
	deepEqual( Stem("guarigione"), "guarigion" );
	deepEqual( Stem("guarini"), "guarin" );
	deepEqual( Stem("guarino"), "guarin" );
	deepEqual( Stem("guarire"), "guar" );
	deepEqual( Stem("guarisce"), "guar" );
	deepEqual( Stem("guarisco"), "guar" );
	deepEqual( Stem("guarita"), "guar" );
	deepEqual( Stem("guariti"), "guar" );
	deepEqual( Stem("guarito"), "guar" );
	deepEqual( Stem("guaritori"), "guaritor" );
	deepEqual( Stem("guaritrice"), "guaritr" );
	deepEqual( Stem("guarivano"), "guar" );
	deepEqual( Stem("guarnigione"), "guarnigion" );
	deepEqual( Stem("guarnita"), "guarn" );
	deepEqual( Stem("guarniti"), "guarn" );
	deepEqual( Stem("guarracino"), "guarracin" );
	deepEqual( Stem("guasta"), "guast" );
	deepEqual( Stem("guastalla"), "guastall" );
	deepEqual( Stem("guastamestieri"), "guastamestier" );
	deepEqual( Stem("guastan"), "guastan" );
	deepEqual( Stem("guastar"), "guast" );
	deepEqual( Stem("guastare"), "guast" );
	deepEqual( Stem("guastarli"), "guast" );
	deepEqual( Stem("guastarmi"), "guast" );
	deepEqual( Stem("guastate"), "guast" );
	deepEqual( Stem("guastatori"), "guastator" );
	deepEqual( Stem("guastava"), "guast" );
	deepEqual( Stem("guasterebbe"), "guast" );
	deepEqual( Stem("guasti"), "guast" );
	deepEqual( Stem("guasto"), "guast" );
	deepEqual( Stem("guastò"), "guast" );
	deepEqual( Stem("guatemala"), "guatemal" );
	deepEqual( Stem("guatemalteco"), "guatemaltec" );
	deepEqual( Stem("guazza"), "guazz" );
	deepEqual( Stem("guazzabugli"), "guazzabugl" );
	deepEqual( Stem("guazzabuglio"), "guazzabugl" );
	deepEqual( Stem("guazzo"), "guazz" );
	deepEqual( Stem("gubbio"), "gubb" );
	deepEqual( Stem("guenter"), "guenter" );
	deepEqual( Stem("guenther"), "guenther" );
	deepEqual( Stem("guera"), "guer" );
	deepEqual( Stem("guerra"), "guerr" );
	deepEqual( Stem("guerre"), "guerr" );
	deepEqual( Stem("guerrero"), "guerrer" );
	deepEqual( Stem("guerreschi"), "guerresc" );
	deepEqual( Stem("guerresco"), "guerresc" );
	deepEqual( Stem("guerricciole"), "guerricciol" );
	deepEqual( Stem("guerriera"), "guerrier" );
	deepEqual( Stem("guerriere"), "guerr" );
	deepEqual( Stem("guerrieri"), "guerrier" );
	deepEqual( Stem("guerriero"), "guerrier" );
	deepEqual( Stem("guerrierò"), "guerr" );
	deepEqual( Stem("guerriglia"), "guerrigl" );
	deepEqual( Stem("guerriglieri"), "guerriglier" );
	deepEqual( Stem("guerriglierìpag"), "guerriglierìpag" );
	deepEqual( Stem("guerrigliero"), "guerriglier" );
	deepEqual( Stem("guerrin"), "guerrin" );
	deepEqual( Stem("guest"), "guest" );
	deepEqual( Stem("guglielmo"), "guglielm" );
	deepEqual( Stem("guglielmucci"), "guglielmucc" );
	deepEqual( Stem("guglieri"), "guglier" );
	deepEqual( Stem("guida"), "guid" );
	deepEqual( Stem("guidar"), "guid" );
	deepEqual( Stem("guidare"), "guid" );
	deepEqual( Stem("guidarle"), "guid" );
	deepEqual( Stem("guidata"), "guid" );
	deepEqual( Stem("guidati"), "guid" );
	deepEqual( Stem("guidato"), "guid" );
	deepEqual( Stem("guidava"), "guid" );
	deepEqual( Stem("guidavano"), "guid" );
	deepEqual( Stem("guiderà"), "guid" );
	deepEqual( Stem("guideranno"), "guid" );
	deepEqual( Stem("guiderebbe"), "guid" );
	deepEqual( Stem("guiderei"), "guid" );
	deepEqual( Stem("guiderete"), "guid" );
	deepEqual( Stem("guido"), "guid" );
	deepEqual( Stem("guillen"), "guillen" );
	deepEqual( Stem("guillermo"), "guillerm" );
	deepEqual( Stem("guinea"), "guine" );
	deepEqual( Stem("guisa"), "guis" );
	deepEqual( Stem("guiso"), "guis" );
	deepEqual( Stem("guizzi"), "guizz" );
	deepEqual( Stem("guizzo"), "guizz" );
	deepEqual( Stem("gulbuddin"), "gulbuddin" );
	deepEqual( Stem("gullit"), "gullit" );
	deepEqual( Stem("gullotta"), "gullott" );
	deepEqual( Stem("gump"), "gump" );
	deepEqual( Stem("gurra"), "gurr" );
	deepEqual( Stem("guru"), "guru" );
	deepEqual( Stem("gus"), "gus" );
	deepEqual( Stem("gustare"), "gust" );
	deepEqual( Stem("gustarla"), "gust" );
	deepEqual( Stem("gustato"), "gust" );
	deepEqual( Stem("gustavo"), "gust" );
	deepEqual( Stem("gusto"), "gust" );
	deepEqual( Stem("gustò"), "gust" );
	deepEqual( Stem("gustosa"), "gustos" );
	deepEqual( Stem("gutemberg"), "gutemberg" );
	deepEqual( Stem("gutierrez"), "gutierrez" );
	deepEqual( Stem("guy"), "guy" );
	deepEqual( Stem("guyana"), "guyan" );
	deepEqual( Stem("guzman"), "guzman" );
	deepEqual( Stem("gymnuoto"), "gymnuot" );
	deepEqual( Stem("gyver"), "gyver" );
	deepEqual( Stem("h"), "h" );
	deepEqual( Stem("ha"), "ha" );
	deepEqual( Stem("haapakosti"), "haapakost" );
	deepEqual( Stem("haaretz"), "haaretz" );
	deepEqual( Stem("habbiamo"), "habb" );
	deepEqual( Stem("hackett"), "hackett" );
	deepEqual( Stem("haddad"), "haddad" );
	deepEqual( Stem("hadi"), "had" );
	deepEqual( Stem("haec"), "haec" );
	deepEqual( Stem("hai"), "hai" );
	deepEqual( Stem("haifa"), "haif" );
	deepEqual( Stem("haiti"), "hait" );
	deepEqual( Stem("haley"), "haley" );
	deepEqual( Stem("halifax"), "halifax" );
	deepEqual( Stem("hallara"), "hallar" );
	deepEqual( Stem("halloween"), "halloween" );
	deepEqual( Stem("hamac"), "hamac" );
	deepEqual( Stem("hamas"), "hamas" );
	deepEqual( Stem("hamburgher"), "hamburgher" );
	deepEqual( Stem("hammallà"), "hammall" );
	deepEqual( Stem("hammamet"), "hammamet" );
	deepEqual( Stem("hammaquà"), "hammaqu" );
	deepEqual( Stem("hammed"), "hammed" );
	deepEqual( Stem("hampel"), "hampel" );
	deepEqual( Stem("han"), "han" );
	deepEqual( Stem("hanak"), "hanak" );
	deepEqual( Stem("handicap"), "handicap" );
	deepEqual( Stem("handicappati"), "handicapp" );
	deepEqual( Stem("handicappato"), "handicapp" );
	deepEqual( Stem("hann"), "hann" );
	deepEqual( Stem("hanna"), "hann" );
	deepEqual( Stem("hannah"), "hannah" );
	deepEqual( Stem("hanno"), "hann" );
	deepEqual( Stem("hanoi"), "hano" );
	deepEqual( Stem("hans"), "hans" );
	deepEqual( Stem("harald"), "harald" );
	deepEqual( Stem("harare"), "har" );
	deepEqual( Stem("harbour"), "harbour" );
	deepEqual( Stem("harigà"), "harig" );
	deepEqual( Stem("haris"), "haris" );
	deepEqual( Stem("harjanne"), "harjann" );
	deepEqual( Stem("haro"), "har" );
	deepEqual( Stem("harrison"), "harrison" );
	deepEqual( Stem("hashemi"), "hashem" );
	deepEqual( Stem("hauendo"), "hau" );
	deepEqual( Stem("hauer"), "hauer" );
	deepEqual( Stem("hauere"), "hau" );
	deepEqual( Stem("hauesse"), "hauess" );
	deepEqual( Stem("hauessimo"), "hauessim" );
	deepEqual( Stem("haueuano"), "haueu" );
	deepEqual( Stem("haustam"), "haustam" );
	deepEqual( Stem("hauuto"), "hau" );
	deepEqual( Stem("havre"), "havr" );
	deepEqual( Stem("hawaii"), "hawai" );
	deepEqual( Stem("hays"), "hays" );
	deepEqual( Stem("hazzard"), "hazzard" );
	deepEqual( Stem("heads"), "heads" );
	deepEqual( Stem("hearts"), "hearts" );
	deepEqual( Stem("hebron"), "hebron" );
	deepEqual( Stem("heimat"), "heimat" );
	deepEqual( Stem("hekmatyar"), "hekmaty" );
	deepEqual( Stem("held"), "held" );
	deepEqual( Stem("helen"), "helen" );
	deepEqual( Stem("helena"), "helen" );
	deepEqual( Stem("helgenberger"), "helgenberger" );
	deepEqual( Stem("helmut"), "helmut" );
	deepEqual( Stem("helsinki"), "helsink" );
	deepEqual( Stem("hemmings"), "hemmings" );
	deepEqual( Stem("heniz"), "heniz" );
	deepEqual( Stem("henrik"), "henrik" );
	deepEqual( Stem("henry"), "henry" );
	deepEqual( Stem("hepburn"), "hepburn" );
	deepEqual( Stem("herald"), "herald" );
	deepEqual( Stem("herba"), "herb" );
	deepEqual( Stem("heroe"), "hero" );
	deepEqual( Stem("heroi"), "hero" );
	deepEqual( Stem("herrera"), "herrer" );
	deepEqual( Stem("hervè"), "herv" );
	deepEqual( Stem("herzog"), "herzog" );
	deepEqual( Stem("hezb"), "hezb" );
	deepEqual( Stem("hibernian"), "hibernian" );
	deepEqual( Stem("highlander"), "highlander" );
	deepEqual( Stem("hillman"), "hillman" );
	deepEqual( Stem("hillo"), "hill" );
	deepEqual( Stem("hills"), "hills" );
	deepEqual( Stem("hiroyuki"), "hiroyuk" );
	deepEqual( Stem("his"), "his" );
	deepEqual( Stem("hispano"), "hisp" );
	deepEqual( Stem("hist"), "hist" );
	deepEqual( Stem("historia"), "histor" );
	deepEqual( Stem("historiae"), "historia" );
	deepEqual( Stem("hitler"), "hitler" );
	deepEqual( Stem("hlena"), "hlen" );
	deepEqual( Stem("ho"), "ho" );
	deepEqual( Stem("hoc"), "hoc" );
	deepEqual( Stem("hockey"), "hockey" );
	deepEqual( Stem("hoffman"), "hoffman" );
	deepEqual( Stem("hold"), "hold" );
	deepEqual( Stem("holding"), "holding" );
	deepEqual( Stem("holly"), "holly" );
	deepEqual( Stem("hollywood"), "hollywood" );
	deepEqual( Stem("hollywoodiano"), "hollywood" );
	deepEqual( Stem("holm"), "holm" );
	deepEqual( Stem("homefront"), "homefront" );
	deepEqual( Stem("homer"), "homer" );
	deepEqual( Stem("honesta"), "honest" );
	deepEqual( Stem("honestas"), "honestas" );
	deepEqual( Stem("hong"), "hong" );
	deepEqual( Stem("honolulu"), "honolulu" );
	deepEqual( Stem("hood"), "hood" );
	deepEqual( Stem("hooker"), "hooker" );
	deepEqual( Stem("horrori"), "horror" );
	deepEqual( Stem("horst"), "horst" );
	deepEqual( Stem("horthy"), "horthy" );
	deepEqual( Stem("hospital"), "hospital" );
	deepEqual( Stem("hossack"), "hossack" );
	deepEqual( Stem("hostess"), "hostess" );
	deepEqual( Stem("hostibus"), "hostibus" );
	deepEqual( Stem("hot"), "hot" );
	deepEqual( Stem("hotel"), "hotel" );
	deepEqual( Stem("house"), "hous" );
	deepEqual( Stem("houston"), "houston" );
	deepEqual( Stem("hrovatin"), "hrovatin" );
	deepEqual( Stem("hrw"), "hrw" );
	deepEqual( Stem("hubbard"), "hubbard" );
	deepEqual( Stem("huber"), "huber" );
	deepEqual( Stem("hubert"), "hubert" );
	deepEqual( Stem("hugo"), "hug" );
	deepEqual( Stem("hullweck"), "hullweck" );
	deepEqual( Stem("human"), "human" );
	deepEqual( Stem("humana"), "human" );
	deepEqual( Stem("hunt"), "hunt" );
	deepEqual( Stem("huomini"), "huomin" );
	deepEqual( Stem("hursk"), "hursk" );
	deepEqual( Stem("hussein"), "hussein" );
	deepEqual( Stem("hutchence"), "hutchenc" );
	deepEqual( Stem("huygens"), "huygens" );
	deepEqual( Stem("hydro"), "hydro" );
	deepEqual( Stem("hynojosa"), "hynojos" );
	deepEqual( Stem("i"), "i" );
	deepEqual( Stem("ì"), "ì" );
	deepEqual( Stem("ia"), "ia" );
	deepEqual( Stem("iaaf"), "iaaf" );
	deepEqual( Stem("iacchetti"), "iacchett" );
	deepEqual( Stem("iachini"), "iachin" );
	deepEqual( Stem("iacobelli"), "iacobell" );
	deepEqual( Stem("ian"), "ian" );
	deepEqual( Stem("ianì"), "ian" );
	deepEqual( Stem("ianuae"), "ianua" );
	deepEqual( Stem("ibarra"), "ibarr" );
	deepEqual( Stem("ibbs"), "ibbs" );
	deepEqual( Stem("ibca"), "ibca" );
	deepEqual( Stem("iberdrola"), "iberdrol" );
	deepEqual( Stem("ibf"), "ibf" );
	deepEqual( Stem("ibm"), "ibm" );
	deepEqual( Stem("ic"), "ic" );
	deepEqual( Stem("icastico"), "icast" );
	deepEqual( Stem("iccri"), "iccri" );
	deepEqual( Stem("ici"), "ici" );
	deepEqual( Stem("iconografica"), "iconograf" );
	deepEqual( Stem("icordate"), "icord" );
	deepEqual( Stem("icq"), "icq" );
	deepEqual( Stem("idagine"), "idagin" );
	deepEqual( Stem("iddio"), "iddi" );
	deepEqual( Stem("idea"), "ide" );
	deepEqual( Stem("ideale"), "ideal" );
	deepEqual( Stem("idealè"), "ideal" );
	deepEqual( Stem("ideali"), "ideal" );
	deepEqual( Stem("idealità"), "ideal" );
	deepEqual( Stem("ideatore"), "ideator" );
	deepEqual( Stem("ideatori"), "ideator" );
	deepEqual( Stem("idee"), "ide" );
	deepEqual( Stem("ideli"), "idel" );
	deepEqual( Stem("identica"), "ident" );
	deepEqual( Stem("identico"), "ident" );
	deepEqual( Stem("identificando"), "identific" );
	deepEqual( Stem("identificare"), "identific" );
	deepEqual( Stem("identificate"), "identific" );
	deepEqual( Stem("identificati"), "identific" );
	deepEqual( Stem("identificato"), "identific" );
	deepEqual( Stem("identikit"), "identikit" );
	deepEqual( Stem("identità"), "ident" );
	deepEqual( Stem("ideò"), "ide" );
	deepEqual( Stem("ideologia"), "ideolog" );
	deepEqual( Stem("ideologiche"), "ideolog" );
	deepEqual( Stem("ideologo"), "ideolog" );
	deepEqual( Stem("idilliache"), "idilliac" );
	deepEqual( Stem("idiotismi"), "idiot" );
	deepEqual( Stem("idiozia"), "idioz" );
	deepEqual( Stem("idoena"), "idoen" );
	deepEqual( Stem("idolatrava"), "idolatr" );
	deepEqual( Stem("idoli"), "idol" );
	deepEqual( Stem("idolo"), "idol" );
	deepEqual( Stem("idonee"), "idone" );
	deepEqual( Stem("idoneo"), "idone" );
	deepEqual( Stem("idorelettrici"), "idorelettr" );
	deepEqual( Stem("idra"), "idra" );
	deepEqual( Stem("idriche"), "idric" );
	deepEqual( Stem("idrico"), "idric" );
	deepEqual( Stem("idrocarburi"), "idrocarbur" );
	deepEqual( Stem("idroelettrica"), "idroelettr" );
	deepEqual( Stem("idroelettriche"), "idroelettr" );
	deepEqual( Stem("idroelettrici"), "idroelettr" );
	deepEqual( Stem("idrofobo"), "idrofob" );
	deepEqual( Stem("idwa"), "idwa" );
	deepEqual( Stem("ielo"), "iel" );
	deepEqual( Stem("ielpo"), "ielp" );
	deepEqual( Stem("ieltsin"), "ieltsin" );
	deepEqual( Stem("ier"), "ier" );
	deepEqual( Stem("ierardi"), "ierard" );
	deepEqual( Stem("ieri"), "ier" );
	deepEqual( Stem("ierlaltro"), "ierlaltr" );
	deepEqual( Stem("ierreversibile"), "ierrevers" );
	deepEqual( Stem("ievghenia"), "ievghen" );
	deepEqual( Stem("ifi"), "ifi" );
	deepEqual( Stem("ifil"), "ifil" );
	deepEqual( Stem("ifis"), "ifis" );
	deepEqual( Stem("ig"), "ig" );
	deepEqual( Stem("igea"), "ige" );
	deepEqual( Stem("ignara"), "ignar" );
	deepEqual( Stem("ignari"), "ignar" );
	deepEqual( Stem("ignazio"), "ignaz" );
	deepEqual( Stem("ignea"), "igne" );
	deepEqual( Stem("ignobile"), "ignobil" );
	deepEqual( Stem("ignora"), "ignor" );
	deepEqual( Stem("ignorando"), "ignor" );
	deepEqual( Stem("ignorantaggine"), "ignorantaggin" );
	deepEqual( Stem("ignorante"), "ignor" );
	deepEqual( Stem("ignoranti"), "ignor" );
	deepEqual( Stem("ignoranza"), "ignor" );
	deepEqual( Stem("ignorate"), "ignor" );
	deepEqual( Stem("ignorati"), "ignor" );
	deepEqual( Stem("ignorato"), "ignor" );
	deepEqual( Stem("ignorava"), "ignor" );
	deepEqual( Stem("ignote"), "ignot" );
	deepEqual( Stem("ignoti"), "ignot" );
	deepEqual( Stem("ignotum"), "ignotum" );
	deepEqual( Stem("ignudi"), "ignud" );
	deepEqual( Stem("igor"), "igor" );
	deepEqual( Stem("igpa"), "igpa" );
	deepEqual( Stem("ih"), "ih" );
	deepEqual( Stem("ii"), "ii" );
	deepEqual( Stem("iii"), "iii" );
	deepEqual( Stem("il"), "il" );
	deepEqual( Stem("ilari"), "ilar" );
	deepEqual( Stem("ilaria"), "ilar" );
	deepEqual( Stem("ilarità"), "ilar" );
	deepEqual( Stem("ilcorpo"), "ilcorp" );
	deepEqual( Stem("ilgoverno"), "ilgovern" );
	deepEqual( Stem("iliade"), "iliad" );
	deepEqual( Stem("ilic"), "ilic" );
	deepEqual( Stem("ilidza"), "ilidz" );
	deepEqual( Stem("ilirià"), "ilir" );
	deepEqual( Stem("ilitare"), "ilit" );
	deepEqual( Stem("illanguidire"), "illanguid" );
	deepEqual( Stem("illazioni"), "illazion" );
	deepEqual( Stem("illecita"), "illec" );
	deepEqual( Stem("illeciti"), "illec" );
	deepEqual( Stem("illecito"), "illec" );
	deepEqual( Stem("illegali"), "illegal" );
	deepEqual( Stem("illegalmente"), "illegal" );
	deepEqual( Stem("illegittima"), "illegittim" );
	deepEqual( Stem("illegittimo"), "illegittim" );
	deepEqual( Stem("illesi"), "illes" );
	deepEqual( Stem("illeso"), "illes" );
	deepEqual( Stem("illetterati"), "illetter" );
	deepEqual( Stem("illimitata"), "illimit" );
	deepEqual( Stem("illimitatamente"), "illimitat" );
	deepEqual( Stem("illimitato"), "illimit" );
	deepEqual( Stem("illius"), "illius" );
	deepEqual( Stem("illuderci"), "illud" );
	deepEqual( Stem("illumina"), "illumin" );
	deepEqual( Stem("illuminare"), "illumin" );
	deepEqual( Stem("illuminato"), "illumin" );
	deepEqual( Stem("illuminazione"), "illumin" );
	deepEqual( Stem("illuminò"), "illumin" );
	deepEqual( Stem("illusione"), "illusion" );
	deepEqual( Stem("illusorio"), "illusor" );
	deepEqual( Stem("illustra"), "illustr" );
	deepEqual( Stem("illustrare"), "illustr" );
	deepEqual( Stem("illustrata"), "illustr" );
	deepEqual( Stem("illustrate"), "illustr" );
	deepEqual( Stem("illustrato"), "illustr" );
	deepEqual( Stem("illustrazione"), "illustr" );
	deepEqual( Stem("illustre"), "illustr" );
	deepEqual( Stem("illustrerà"), "illustr" );
	deepEqual( Stem("illustreranno"), "illustr" );
	deepEqual( Stem("illustri"), "illustr" );
	deepEqual( Stem("illustrissima"), "illustrissim" );
	deepEqual( Stem("illustrissimo"), "illustrissim" );
	deepEqual( Stem("ilor"), "ilor" );
	deepEqual( Stem("ilva"), "ilva" );
	deepEqual( Stem("imam"), "imam" );
	deepEqual( Stem("imbacuccarla"), "imbacucc" );
	deepEqual( Stem("imbalsamando"), "imbalsam" );
	deepEqual( Stem("imbarazzante"), "imbarazz" );
	deepEqual( Stem("imbarazzato"), "imbarazz" );
	deepEqual( Stem("imbarazzo"), "imbarazz" );
	deepEqual( Stem("imbarcano"), "imbarc" );
	deepEqual( Stem("imbarcarci"), "imbarc" );
	deepEqual( Stem("imbarcarmi"), "imbarc" );
	deepEqual( Stem("imbarcarsi"), "imbarc" );
	deepEqual( Stem("imbarcati"), "imbarc" );
	deepEqual( Stem("imbarcato"), "imbarc" );
	deepEqual( Stem("imbarcazioni"), "imbarc" );
	deepEqual( Stem("imbasciata"), "imbasc" );
	deepEqual( Stem("imbasciate"), "imbasc" );
	deepEqual( Stem("imbatte"), "imbatt" );
	deepEqual( Stem("imbattuto"), "imbatt" );
	deepEqual( Stem("imbelle"), "imbell" );
	deepEqual( Stem("imbestialì"), "imbestial" );
	deepEqual( Stem("imbiancatura"), "imbiancatur" );
	deepEqual( Stem("imbiondire"), "imbiond" );
	deepEqual( Stem("imboccar"), "imbocc" );
	deepEqual( Stem("imboccare"), "imbocc" );
	deepEqual( Stem("imboccata"), "imbocc" );
	deepEqual( Stem("imboccato"), "imbocc" );
	deepEqual( Stem("imboccatura"), "imboccatur" );
	deepEqual( Stem("imbocchi"), "imbocc" );
	deepEqual( Stem("imborglione"), "imborglion" );
	deepEqual( Stem("imboscarsi"), "imbosc" );
	deepEqual( Stem("imboscata"), "imbosc" );
	deepEqual( Stem("imbrattare"), "imbratt" );
	deepEqual( Stem("imbrattate"), "imbratt" );
	deepEqual( Stem("imbrattati"), "imbratt" );
	deepEqual( Stem("imbrattava"), "imbratt" );
	deepEqual( Stem("imbrogli"), "imbrogl" );
	deepEqual( Stem("imbroglian"), "imbroglian" );
	deepEqual( Stem("imbrogliando"), "imbrogl" );
	deepEqual( Stem("imbrogliar"), "imbrogl" );
	deepEqual( Stem("imbrogliare"), "imbrogl" );
	deepEqual( Stem("imbrogliarle"), "imbrogl" );
	deepEqual( Stem("imbrogliata"), "imbrogl" );
	deepEqual( Stem("imbrogliate"), "imbrogl" );
	deepEqual( Stem("imbrogliati"), "imbrogl" );
	deepEqual( Stem("imbrogliato"), "imbrogl" );
	deepEqual( Stem("imbrogliava"), "imbrogl" );
	deepEqual( Stem("imbroglio"), "imbrogl" );
	deepEqual( Stem("imbroglione"), "imbroglion" );
	deepEqual( Stem("imbrunire"), "imbrun" );
	deepEqual( Stem("imemdiato"), "imemd" );
	deepEqual( Stem("imerese"), "imeres" );
	deepEqual( Stem("imi"), "imi" );
	deepEqual( Stem("imibond"), "imibond" );
	deepEqual( Stem("imicapital"), "imicapital" );
	deepEqual( Stem("imieast"), "imieast" );
	deepEqual( Stem("imieurope"), "imieurop" );
	deepEqual( Stem("imindustria"), "imindustr" );
	deepEqual( Stem("imirend"), "imirend" );
	deepEqual( Stem("imitare"), "imit" );
	deepEqual( Stem("imitava"), "imit" );
	deepEqual( Stem("imitazione"), "imit" );
	deepEqual( Stem("imiwest"), "imiwest" );
	deepEqual( Stem("imm"), "imm" );
	deepEqual( Stem("immagazzinare"), "immagazzin" );
	deepEqual( Stem("immagina"), "immagin" );
	deepEqual( Stem("immaginandosi"), "immagin" );
	deepEqual( Stem("immaginano"), "immagin" );
	deepEqual( Stem("immaginar"), "immagin" );
	deepEqual( Stem("immaginare"), "immagin" );
	deepEqual( Stem("immaginari"), "immaginar" );
	deepEqual( Stem("immaginaria"), "immaginar" );
	deepEqual( Stem("immaginarne"), "immagin" );
	deepEqual( Stem("immaginarsela"), "immaginarsel" );
	deepEqual( Stem("immaginarselo"), "immaginarsel" );
	deepEqual( Stem("immaginarsi"), "immagin" );
	deepEqual( Stem("immaginarvi"), "immagin" );
	deepEqual( Stem("immaginata"), "immagin" );
	deepEqual( Stem("immaginate"), "immagin" );
	deepEqual( Stem("immaginatevi"), "immaginat" );
	deepEqual( Stem("immaginativa"), "immagin" );
	deepEqual( Stem("immaginato"), "immagin" );
	deepEqual( Stem("immaginava"), "immagin" );
	deepEqual( Stem("immaginazion"), "immaginazion" );
	deepEqual( Stem("immaginazione"), "immagin" );
	deepEqual( Stem("immaginazioni"), "immagin" );
	deepEqual( Stem("immagine"), "immagin" );
	deepEqual( Stem("immaginè"), "immagin" );
	deepEqual( Stem("immaginerebbe"), "immagin" );
	deepEqual( Stem("immagini"), "immagin" );
	deepEqual( Stem("immagino"), "immagin" );
	deepEqual( Stem("immaginò"), "immagin" );
	deepEqual( Stem("immaginosa"), "immagin" );
	deepEqual( Stem("immantinente"), "immantinent" );
	deepEqual( Stem("immatricolate"), "immatricol" );
	deepEqual( Stem("immatricolato"), "immatricol" );
	deepEqual( Stem("immatricolazioni"), "immatricol" );
	deepEqual( Stem("immaturità"), "immatur" );
	deepEqual( Stem("immedesimata"), "immedesim" );
	deepEqual( Stem("immediata"), "immed" );
	deepEqual( Stem("immediatamente"), "immediat" );
	deepEqual( Stem("immediate"), "immed" );
	deepEqual( Stem("immediatezza"), "immediatezz" );
	deepEqual( Stem("immediati"), "immed" );
	deepEqual( Stem("immediato"), "immed" );
	deepEqual( Stem("immemorabile"), "immemor" );
	deepEqual( Stem("immensa"), "immens" );
	deepEqual( Stem("immenso"), "immens" );
	deepEqual( Stem("immeritato"), "immerit" );
	deepEqual( Stem("immerso"), "immers" );
	deepEqual( Stem("immettere"), "immett" );
	deepEqual( Stem("immigrati"), "immigr" );
	deepEqual( Stem("immigratorie"), "immigrator" );
	deepEqual( Stem("immigrazione"), "immigr" );
	deepEqual( Stem("imminente"), "imminent" );
	deepEqual( Stem("imminenza"), "imminent" );
	deepEqual( Stem("immissione"), "immission" );
	deepEqual( Stem("immobile"), "immobil" );
	deepEqual( Stem("immobili"), "immobil" );
	deepEqual( Stem("immobiliare"), "immobil" );
	deepEqual( Stem("immobiliari"), "immobiliar" );
	deepEqual( Stem("immobilismo"), "immobil" );
	deepEqual( Stem("immobilità"), "immobil" );
	deepEqual( Stem("immobilizzarlo"), "immobilizz" );
	deepEqual( Stem("immobilizzato"), "immobilizz" );
	deepEqual( Stem("immolato"), "immol" );
	deepEqual( Stem("immondizia"), "immondiz" );
	deepEqual( Stem("immondizie"), "immondiz" );
	deepEqual( Stem("immondo"), "immond" );
	deepEqual( Stem("immortale"), "immortal" );
	deepEqual( Stem("immota"), "immot" );
	deepEqual( Stem("immoto"), "immot" );
	deepEqual( Stem("immune"), "immun" );
	deepEqual( Stem("immuni"), "immun" );
	deepEqual( Stem("immunità"), "immun" );
	deepEqual( Stem("immutate"), "immut" );
	deepEqual( Stem("immutato"), "immut" );
	deepEqual( Stem("imola"), "imol" );
	deepEqual( Stem("impacciata"), "impacc" );
	deepEqual( Stem("impadronirà"), "impadron" );
	deepEqual( Stem("impadroniron"), "impadroniron" );
	deepEqual( Stem("impadronirsene"), "impadron" );
	deepEqual( Stem("impallidì"), "impallid" );
	deepEqual( Stem("impaniata"), "impan" );
	deepEqual( Stem("impannata"), "impann" );
	deepEqual( Stem("impannate"), "impann" );
	deepEqual( Stem("impara"), "impar" );
	deepEqual( Stem("imparando"), "impar" );
	deepEqual( Stem("imparassero"), "impar" );
	deepEqual( Stem("imparassimo"), "impar" );
	deepEqual( Stem("imparate"), "impar" );
	deepEqual( Stem("imparati"), "impar" );
	deepEqual( Stem("imparato"), "impar" );
	deepEqual( Stem("impari"), "impar" );
	deepEqual( Stem("imparò"), "impar" );
	deepEqual( Stem("imparzialità"), "imparzial" );
	deepEqual( Stem("impasse"), "impass" );
	deepEqual( Stem("impassibile"), "impass" );
	deepEqual( Stem("impastocchiarvi"), "impastocc" );
	deepEqual( Stem("impastocchiate"), "impastocc" );
	deepEqual( Stem("impattarla"), "impatt" );
	deepEqual( Stem("impatto"), "impatt" );
	deepEqual( Stem("impaurirla"), "impaur" );
	deepEqual( Stem("impaziente"), "impazient" );
	deepEqual( Stem("impazientisce"), "impazient" );
	deepEqual( Stem("impazientito"), "impazient" );
	deepEqual( Stem("impazienza"), "impazient" );
	deepEqual( Stem("impazzano"), "impazz" );
	deepEqual( Stem("impazzata"), "impazz" );
	deepEqual( Stem("impedendo"), "imped" );
	deepEqual( Stem("impedendogli"), "imped" );
	deepEqual( Stem("impedimenti"), "imped" );
	deepEqual( Stem("impedimento"), "imped" );
	deepEqual( Stem("impedir"), "imped" );
	deepEqual( Stem("impedire"), "imped" );
	deepEqual( Stem("impedirebbe"), "imped" );
	deepEqual( Stem("impedirgli"), "imped" );
	deepEqual( Stem("impedirla"), "imped" );
	deepEqual( Stem("impedirle"), "imped" );
	deepEqual( Stem("impedirlo"), "imped" );
	deepEqual( Stem("impedirne"), "imped" );
	deepEqual( Stem("impedirtela"), "imped" );
	deepEqual( Stem("impedisca"), "imped" );
	deepEqual( Stem("impedisce"), "imped" );
	deepEqual( Stem("impediscono"), "imped" );
	deepEqual( Stem("impedisse"), "impediss" );
	deepEqual( Stem("impedissero"), "imped" );
	deepEqual( Stem("impedito"), "imped" );
	deepEqual( Stem("impediva"), "imped" );
	deepEqual( Stem("impedivano"), "imped" );
	deepEqual( Stem("impegna"), "impegn" );
	deepEqual( Stem("impegnando"), "impegn" );
	deepEqual( Stem("impegnandosi"), "impegn" );
	deepEqual( Stem("impegnano"), "impegn" );
	deepEqual( Stem("impegnare"), "impegn" );
	deepEqual( Stem("impegnarmi"), "impegn" );
	deepEqual( Stem("impegnarsi"), "impegn" );
	deepEqual( Stem("impegnasse"), "impegn" );
	deepEqual( Stem("impegnassero"), "impegn" );
	deepEqual( Stem("impegnata"), "impegn" );
	deepEqual( Stem("impegnate"), "impegn" );
	deepEqual( Stem("impegnati"), "impegn" );
	deepEqual( Stem("impegnative"), "impegn" );
	deepEqual( Stem("impegnato"), "impegn" );
	deepEqual( Stem("impegnavano"), "impegn" );
	deepEqual( Stem("impegneranno"), "impegn" );
	deepEqual( Stem("impegni"), "impegn" );
	deepEqual( Stem("impegnino"), "impegnin" );
	deepEqual( Stem("impegno"), "impegn" );
	deepEqual( Stem("impegnò"), "impegn" );
	deepEqual( Stem("impenetrabile"), "impenetr" );
	deepEqual( Stem("impennarsi"), "impenn" );
	deepEqual( Stem("impennata"), "impenn" );
	deepEqual( Stem("impensabile"), "impens" );
	deepEqual( Stem("impensata"), "impens" );
	deepEqual( Stem("impensati"), "impens" );
	deepEqual( Stem("impensato"), "impens" );
	deepEqual( Stem("imperativo"), "imper" );
	deepEqual( Stem("imperator"), "imperator" );
	deepEqual( Stem("imperatore"), "imper" );
	deepEqual( Stem("impercettibile"), "impercett" );
	deepEqual( Stem("imperciocché"), "imperciocc" );
	deepEqual( Stem("imperdonabile"), "imperdon" );
	deepEqual( Stem("imperfetta"), "imperfett" );
	deepEqual( Stem("imperfettione"), "imperfettion" );
	deepEqual( Stem("imperfetto"), "imperfett" );
	deepEqual( Stem("imperfezion"), "imperfezion" );
	deepEqual( Stem("imperia"), "imper" );
	deepEqual( Stem("imperiale"), "imperial" );
	deepEqual( Stem("imperiese"), "imperies" );
	deepEqual( Stem("imperiosa"), "imper" );
	deepEqual( Stem("imperiose"), "imper" );
	deepEqual( Stem("imperioso"), "imper" );
	deepEqual( Stem("impero"), "imper" );
	deepEqual( Stem("imperscrutabile"), "imperscrut" );
	deepEqual( Stem("imperterrito"), "imperterr" );
	deepEqual( Stem("impertinenze"), "impertinent" );
	deepEqual( Stem("imperturbabile"), "imperturb" );
	deepEqual( Stem("imperturbata"), "imperturb" );
	deepEqual( Stem("imperversar"), "impervers" );
	deepEqual( Stem("imperversato"), "impervers" );
	deepEqual( Stem("impeto"), "impet" );
	deepEqual( Stem("impetrata"), "impetr" );
	deepEqual( Stem("impetuosa"), "impetu" );
	deepEqual( Stem("impetuosamente"), "impetu" );
	deepEqual( Stem("impetuosi"), "impetu" );
	deepEqual( Stem("impetuoso"), "impetu" );
	deepEqual( Stem("imphal"), "imphal" );
	deepEqual( Stem("impianti"), "impiant" );
	deepEqual( Stem("impianto"), "impiant" );
	deepEqual( Stem("impiastramento"), "impiastr" );
	deepEqual( Stem("impiastro"), "impiastr" );
	deepEqual( Stem("impiccar"), "impicc" );
	deepEqual( Stem("impiccarli"), "impicc" );
	deepEqual( Stem("impiccati"), "impicc" );
	deepEqual( Stem("impiccato"), "impicc" );
	deepEqual( Stem("impiccheranno"), "impicc" );
	deepEqual( Stem("impicci"), "impicc" );
	deepEqual( Stem("impicciano"), "impicc" );
	deepEqual( Stem("impicciare"), "impicc" );
	deepEqual( Stem("impicciarmene"), "impicc" );
	deepEqual( Stem("impicciarsi"), "impicc" );
	deepEqual( Stem("impicciata"), "impicc" );
	deepEqual( Stem("impicciate"), "impicc" );
	deepEqual( Stem("impicciati"), "impicc" );
	deepEqual( Stem("impicciato"), "impicc" );
	deepEqual( Stem("impicciavan"), "impicciavan" );
	deepEqual( Stem("impiccio"), "impicc" );
	deepEqual( Stem("impiccione"), "impiccion" );
	deepEqual( Stem("impiega"), "impieg" );
	deepEqual( Stem("impiegar"), "impieg" );
	deepEqual( Stem("impiegarci"), "impieg" );
	deepEqual( Stem("impiegare"), "impieg" );
	deepEqual( Stem("impiegarle"), "impieg" );
	deepEqual( Stem("impiegarli"), "impieg" );
	deepEqual( Stem("impiegarne"), "impieg" );
	deepEqual( Stem("impiegarono"), "impieg" );
	deepEqual( Stem("impiegarsi"), "impieg" );
	deepEqual( Stem("impiegata"), "impieg" );
	deepEqual( Stem("impiegate"), "impieg" );
	deepEqual( Stem("impiegati"), "impieg" );
	deepEqual( Stem("impiegato"), "impieg" );
	deepEqual( Stem("impiegatovi"), "impiegatov" );
	deepEqual( Stem("impiegherebbero"), "impieg" );
	deepEqual( Stem("impieghi"), "impieg" );
	deepEqual( Stem("impieghiamo"), "impieg" );
	deepEqual( Stem("impiego"), "impieg" );
	deepEqual( Stem("impigrito"), "impigr" );
	deepEqual( Stem("impiparsi"), "impip" );
	deepEqual( Stem("impipo"), "impip" );
	deepEqual( Stem("implacabile"), "implac" );
	deepEqual( Stem("implica"), "implic" );
	deepEqual( Stem("implicata"), "implic" );
	deepEqual( Stem("implicati"), "implic" );
	deepEqual( Stem("implicato"), "implic" );
	deepEqual( Stem("implici"), "implic" );
	deepEqual( Stem("implicitamente"), "implicit" );
	deepEqual( Stem("implorando"), "implor" );
	deepEqual( Stem("implorar"), "implor" );
	deepEqual( Stem("implorare"), "implor" );
	deepEqual( Stem("implorata"), "implor" );
	deepEqual( Stem("implorato"), "implor" );
	deepEqual( Stem("implorava"), "implor" );
	deepEqual( Stem("imploravan"), "imploravan" );
	deepEqual( Stem("imploravano"), "implor" );
	deepEqual( Stem("implori"), "implor" );
	deepEqual( Stem("imploriate"), "implor" );
	deepEqual( Stem("impone"), "impon" );
	deepEqual( Stem("imponendogli"), "impon" );
	deepEqual( Stem("imponendosi"), "impon" );
	deepEqual( Stem("imponente"), "imponent" );
	deepEqual( Stem("imponesse"), "imponess" );
	deepEqual( Stem("imponeva"), "impon" );
	deepEqual( Stem("imponevano"), "impon" );
	deepEqual( Stem("imponga"), "impong" );
	deepEqual( Stem("imponibile"), "impon" );
	deepEqual( Stem("impor"), "impor" );
	deepEqual( Stem("imporre"), "imporr" );
	deepEqual( Stem("import"), "import" );
	deepEqual( Stem("importa"), "import" );
	deepEqual( Stem("importabili"), "import" );
	deepEqual( Stem("importante"), "import" );
	deepEqual( Stem("importanti"), "import" );
	deepEqual( Stem("importantissimi"), "importantissim" );
	deepEqual( Stem("importantissimo"), "importantissim" );
	deepEqual( Stem("importanza"), "import" );
	deepEqual( Stem("importarne"), "import" );
	deepEqual( Stem("importasse"), "import" );
	deepEqual( Stem("importata"), "import" );
	deepEqual( Stem("importati"), "import" );
	deepEqual( Stem("importatore"), "import" );
	deepEqual( Stem("importatori"), "import" );
	deepEqual( Stem("importava"), "import" );
	deepEqual( Stem("importazione"), "import" );
	deepEqual( Stem("importazioni"), "import" );
	deepEqual( Stem("importo"), "import" );
	deepEqual( Stem("importuna"), "importun" );
	deepEqual( Stem("impose"), "impos" );
	deepEqual( Stem("impositiva"), "imposit" );
	deepEqual( Stem("imposizion"), "imposizion" );
	deepEqual( Stem("imposizione"), "imposizion" );
	deepEqual( Stem("imposizioni"), "imposizion" );
	deepEqual( Stem("impossessa"), "impossess" );
	deepEqual( Stem("impossessati"), "impossess" );
	deepEqual( Stem("impossessava"), "impossess" );
	deepEqual( Stem("impossibile"), "imposs" );
	deepEqual( Stem("impossibili"), "imposs" );
	deepEqual( Stem("impossibilità"), "impossibil" );
	deepEqual( Stem("imposta"), "impost" );
	deepEqual( Stem("impostale"), "impostal" );
	deepEqual( Stem("impostate"), "impost" );
	deepEqual( Stem("impostato"), "impost" );
	deepEqual( Stem("impostazione"), "impost" );
	deepEqual( Stem("imposte"), "impost" );
	deepEqual( Stem("impostesi"), "impostes" );
	deepEqual( Stem("imposti"), "impost" );
	deepEqual( Stem("imposto"), "impost" );
	deepEqual( Stem("impostore"), "impostor" );
	deepEqual( Stem("impostori"), "impostor" );
	deepEqual( Stem("impostura"), "impostur" );
	deepEqual( Stem("impotenza"), "impotent" );
	deepEqual( Stem("impoverimento"), "impover" );
	deepEqual( Stem("imprecando"), "imprec" );
	deepEqual( Stem("imprecazione"), "imprec" );
	deepEqual( Stem("imprecazioni"), "imprec" );
	deepEqual( Stem("imprecisi"), "imprecis" );
	deepEqual( Stem("impreditore"), "impreditor" );
	deepEqual( Stem("impregilo"), "impregil" );
	deepEqual( Stem("imprendibile"), "imprend" );
	deepEqual( Stem("imprenditore"), "imprenditor" );
	deepEqual( Stem("imprenditori"), "imprenditor" );
	deepEqual( Stem("imprenditoria"), "imprenditor" );
	deepEqual( Stem("imprenditoriale"), "imprenditorial" );
	deepEqual( Stem("imprenditoriali"), "imprenditorial" );
	deepEqual( Stem("imprenditorialità"), "imprenditorial" );
	deepEqual( Stem("imprenditrice"), "imprenditr" );
	deepEqual( Stem("impresa"), "impres" );
	deepEqual( Stem("impresari"), "impresar" );
	deepEqual( Stem("imprese"), "impres" );
	deepEqual( Stem("impresse"), "impress" );
	deepEqual( Stem("impressionante"), "impression" );
	deepEqual( Stem("impressionati"), "impression" );
	deepEqual( Stem("impressione"), "impression" );
	deepEqual( Stem("impressioni"), "impression" );
	deepEqual( Stem("impressissetve"), "impressissetv" );
	deepEqual( Stem("impresso"), "impress" );
	deepEqual( Stem("imprestati"), "imprest" );
	deepEqual( Stem("imprestiti"), "imprest" );
	deepEqual( Stem("imprevedibile"), "impreved" );
	deepEqual( Stem("impreveduta"), "impreved" );
	deepEqual( Stem("impreveduto"), "impreved" );
	deepEqual( Stem("imprevista"), "imprev" );
	deepEqual( Stem("impreziosito"), "imprezios" );
	deepEqual( Stem("imprimatur"), "imprimatur" );
	deepEqual( Stem("imprimere"), "imprim" );
	deepEqual( Stem("imprimeva"), "imprim" );
	deepEqual( Stem("improduttive"), "improdutt" );
	deepEqual( Stem("improperi"), "improper" );
	deepEqual( Stem("improperio"), "improper" );
	deepEqual( Stem("improponibile"), "impropon" );
	deepEqual( Stem("improponibili"), "impropon" );
	deepEqual( Stem("impropriamente"), "impropr" );
	deepEqual( Stem("improvvida"), "improvvid" );
	deepEqual( Stem("improvvisa"), "improvvis" );
	deepEqual( Stem("improvvisamente"), "improvvis" );
	deepEqual( Stem("improvvisi"), "improvvis" );
	deepEqual( Stem("improvviso"), "improvvis" );
	deepEqual( Stem("imprudente"), "imprudent" );
	deepEqual( Stem("impugnando"), "impugn" );
	deepEqual( Stem("impugnare"), "impugn" );
	deepEqual( Stem("impugnati"), "impugn" );
	deepEqual( Stem("impugnato"), "impugn" );
	deepEqual( Stem("impugnatori"), "impugn" );
	deepEqual( Stem("impugnatura"), "impugnatur" );
	deepEqual( Stem("impulso"), "impuls" );
	deepEqual( Stem("impunemente"), "impun" );
	deepEqual( Stem("impunità"), "impun" );
	deepEqual( Stem("impunito"), "impun" );
	deepEqual( Stem("impuntano"), "impunt" );
	deepEqual( Stem("imputata"), "imput" );
	deepEqual( Stem("imputati"), "imput" );
	deepEqual( Stem("imputato"), "imput" );
	deepEqual( Stem("imputazione"), "imput" );
	deepEqual( Stem("imr"), "imr" );
	deepEqual( Stem("in"), "in" );
	deepEqual( Stem("ina"), "ina" );
	deepEqual( Stem("inabile"), "inabil" );
	deepEqual( Stem("inabili"), "inabil" );
	deepEqual( Stem("inabilità"), "inabil" );
	deepEqual( Stem("inaccettabile"), "inaccett" );
	deepEqual( Stem("inaccettabili"), "inaccett" );
	deepEqual( Stem("inadeguatezza"), "inadeguatezz" );
	deepEqual( Stem("inaequaliterque"), "inaequaliterqu" );
	deepEqual( Stem("inail"), "inail" );
	deepEqual( Stem("inalberar"), "inalber" );
	deepEqual( Stem("inalberò"), "inalb" );
	deepEqual( Stem("inalterabile"), "inalter" );
	deepEqual( Stem("inalterato"), "inalter" );
	deepEqual( Stem("inamidate"), "inamid" );
	deepEqual( Stem("inammissibile"), "inammiss" );
	deepEqual( Stem("inanimata"), "inanim" );
	deepEqual( Stem("inappellabile"), "inappell" );
	deepEqual( Stem("inarcare"), "inarc" );
	deepEqual( Stem("inarticolato"), "inarticol" );
	deepEqual( Stem("inaspettata"), "inaspett" );
	deepEqual( Stem("inaspettatamente"), "inaspettat" );
	deepEqual( Stem("inaspettate"), "inaspett" );
	deepEqual( Stem("inaspettati"), "inaspett" );
	deepEqual( Stem("inaspettato"), "inaspett" );
	deepEqual( Stem("inasprimento"), "inaspr" );
	deepEqual( Stem("inasprissero"), "inaspr" );
	deepEqual( Stem("inattuato"), "inattu" );
	deepEqual( Stem("inaudita"), "inaud" );
	deepEqual( Stem("inaugura"), "inaugur" );
	deepEqual( Stem("inaugurare"), "inaugur" );
	deepEqual( Stem("inaugurata"), "inaugur" );
	deepEqual( Stem("inaugurate"), "inaugur" );
	deepEqual( Stem("inaugurati"), "inaugur" );
	deepEqual( Stem("inaugurato"), "inaugur" );
	deepEqual( Stem("inaugurazione"), "inaugur" );
	deepEqual( Stem("inaugurerà"), "inaugur" );
	deepEqual( Stem("inazione"), "inazion" );
	deepEqual( Stem("incagli"), "incagl" );
	deepEqual( Stem("incagliata"), "incagl" );
	deepEqual( Stem("incaglio"), "incagl" );
	deepEqual( Stem("incalza"), "incalz" );
	deepEqual( Stem("incalzante"), "incalz" );
	deepEqual( Stem("incalzanti"), "incalz" );
	deepEqual( Stem("incalzare"), "incalz" );
	deepEqual( Stem("incalzati"), "incalz" );
	deepEqual( Stem("incammina"), "incammin" );
	deepEqual( Stem("incamminaron"), "incamminaron" );
	deepEqual( Stem("incamminarono"), "incammin" );
	deepEqual( Stem("incamminata"), "incammin" );
	deepEqual( Stem("incamminati"), "incammin" );
	deepEqual( Stem("incamminato"), "incammin" );
	deepEqual( Stem("incamminavano"), "incammin" );
	deepEqual( Stem("incamminò"), "incammin" );
	deepEqual( Stem("incanalare"), "incanal" );
	deepEqual( Stem("incanalarla"), "incanal" );
	deepEqual( Stem("incannar"), "incann" );
	deepEqual( Stem("incantare"), "incant" );
	deepEqual( Stem("incantarla"), "incant" );
	deepEqual( Stem("incantata"), "incant" );
	deepEqual( Stem("incantati"), "incant" );
	deepEqual( Stem("incantato"), "incant" );
	deepEqual( Stem("incanti"), "incant" );
	deepEqual( Stem("incanto"), "incant" );
	deepEqual( Stem("incapace"), "incapac" );
	deepEqual( Stem("incapaci"), "incapac" );
	deepEqual( Stem("incappati"), "incapp" );
	deepEqual( Stem("incappucciando"), "incappucc" );
	deepEqual( Stem("incappucciati"), "incappucc" );
	deepEqual( Stem("incappucciato"), "incappucc" );
	deepEqual( Stem("incaprettatò"), "incaprettat" );
	deepEqual( Stem("incapricciata"), "incapricc" );
	deepEqual( Stem("incaricandosi"), "incaric" );
	deepEqual( Stem("incaricarsi"), "incaric" );
	deepEqual( Stem("incaricati"), "incaric" );
	deepEqual( Stem("incaricato"), "incaric" );
	deepEqual( Stem("incarichi"), "incar" );
	deepEqual( Stem("incarico"), "incar" );
	deepEqual( Stem("incarnate"), "incarn" );
	deepEqual( Stem("incarnazione"), "incarn" );
	deepEqual( Stem("incassando"), "incass" );
	deepEqual( Stem("incassarne"), "incass" );
	deepEqual( Stem("incassi"), "incass" );
	deepEqual( Stem("incasso"), "incass" );
	deepEqual( Stem("incastravano"), "incastr" );
	deepEqual( Stem("incatasciato"), "incatasc" );
	deepEqual( Stem("incatenano"), "incaten" );
	deepEqual( Stem("incatenato"), "incaten" );
	deepEqual( Stem("incauta"), "inca" );
	deepEqual( Stem("incavati"), "incav" );
	deepEqual( Stem("incendi"), "incend" );
	deepEqual( Stem("incendiarie"), "incendiar" );
	deepEqual( Stem("incendiata"), "incend" );
	deepEqual( Stem("incendiati"), "incend" );
	deepEqual( Stem("incendio"), "incend" );
	deepEqual( Stem("incensi"), "incens" );
	deepEqual( Stem("incentivi"), "incent" );
	deepEqual( Stem("incentrata"), "incentr" );
	deepEqual( Stem("incentrato"), "incentr" );
	deepEqual( Stem("inceppare"), "incepp" );
	deepEqual( Stem("incerata"), "incer" );
	deepEqual( Stem("incerta"), "incert" );
	deepEqual( Stem("incerte"), "incert" );
	deepEqual( Stem("incertezza"), "incertezz" );
	deepEqual( Stem("incertezze"), "incertezz" );
	deepEqual( Stem("incerti"), "incert" );
	deepEqual( Stem("incerto"), "incert" );
	deepEqual( Stem("incessante"), "incess" );
	deepEqual( Stem("incessanti"), "incess" );
	deepEqual( Stem("incetta"), "incett" );
	deepEqual( Stem("incettatori"), "incett" );
	deepEqual( Stem("inchiesta"), "inchiest" );
	deepEqual( Stem("inchieste"), "inchiest" );
	deepEqual( Stem("inchinandosi"), "inchin" );
	deepEqual( Stem("inchinarono"), "inchin" );
	deepEqual( Stem("inchinato"), "inchin" );
	deepEqual( Stem("inchinatolo"), "inchinatol" );
	deepEqual( Stem("inchinavano"), "inchin" );
	deepEqual( Stem("inchini"), "inchin" );
	deepEqual( Stem("inchino"), "inchin" );
	deepEqual( Stem("inchinò"), "inchin" );
	deepEqual( Stem("inchiodano"), "inchiod" );
	deepEqual( Stem("inchiodar"), "inchiod" );
	deepEqual( Stem("inchiodati"), "inchiod" );
	deepEqual( Stem("inchiodato"), "inchiod" );
	deepEqual( Stem("inchiodò"), "inchiod" );
	deepEqual( Stem("inchiona"), "inchion" );
	deepEqual( Stem("inchiostri"), "inchiostr" );
	deepEqual( Stem("inchiostro"), "inchiostr" );
	deepEqual( Stem("inciamparci"), "inciamp" );
	deepEqual( Stem("inciampava"), "inciamp" );
	deepEqual( Stem("inciampi"), "inciamp" );
	deepEqual( Stem("inciampo"), "inciamp" );
	deepEqual( Stem("incidente"), "incident" );
	deepEqual( Stem("incidentemente"), "incident" );
	deepEqual( Stem("incidenti"), "incident" );
	deepEqual( Stem("incidere"), "incid" );
	deepEqual( Stem("incinta"), "incint" );
	deepEqual( Stem("incintamento"), "incint" );
	deepEqual( Stem("incirca"), "incirc" );
	deepEqual( Stem("incise"), "incis" );
	deepEqual( Stem("incisiva"), "incis" );
	deepEqual( Stem("incita"), "incit" );
	deepEqual( Stem("incitamenti"), "incit" );
	deepEqual( Stem("incitamento"), "incit" );
	deepEqual( Stem("incitare"), "incit" );
	deepEqual( Stem("incivile"), "incivil" );
	deepEqual( Stem("inclinando"), "inclin" );
	deepEqual( Stem("inclinano"), "inclin" );
	deepEqual( Stem("inclinar"), "inclin" );
	deepEqual( Stem("inclinata"), "inclin" );
	deepEqual( Stem("inclinati"), "inclin" );
	deepEqual( Stem("inclinato"), "inclin" );
	deepEqual( Stem("inclinazione"), "inclin" );
	deepEqual( Stem("inclinazioni"), "inclin" );
	deepEqual( Stem("incline"), "inclin" );
	deepEqual( Stem("incliniamo"), "inclin" );
	deepEqual( Stem("inclita"), "inclit" );
	deepEqual( Stem("incluso"), "inclus" );
	deepEqual( Stem("incocciati"), "incocc" );
	deepEqual( Stem("incognita"), "incogn" );
	deepEqual( Stem("incollati"), "incoll" );
	deepEqual( Stem("incollato"), "incoll" );
	deepEqual( Stem("incolpati"), "incolp" );
	deepEqual( Stem("incolpava"), "incolp" );
	deepEqual( Stem("incolpevole"), "incolpevol" );
	deepEqual( Stem("incolpevoli"), "incolpevol" );
	deepEqual( Stem("incolta"), "incolt" );
	deepEqual( Stem("incolti"), "incolt" );
	deepEqual( Stem("incolumità"), "incolum" );
	deepEqual( Stem("incombente"), "incombent" );
	deepEqual( Stem("incombenza"), "incombent" );
	deepEqual( Stem("incominciare"), "incominc" );
	deepEqual( Stem("incominciata"), "incominc" );
	deepEqual( Stem("incominciati"), "incominc" );
	deepEqual( Stem("incominciava"), "incominc" );
	deepEqual( Stem("incomoda"), "incomod" );
	deepEqual( Stem("incomodare"), "incomod" );
	deepEqual( Stem("incomodarla"), "incomod" );
	deepEqual( Stem("incomodarsi"), "incomod" );
	deepEqual( Stem("incomodasse"), "incomod" );
	deepEqual( Stem("incomodata"), "incomod" );
	deepEqual( Stem("incomodate"), "incomod" );
	deepEqual( Stem("incomodato"), "incomod" );
	deepEqual( Stem("incomodi"), "incomod" );
	deepEqual( Stem("incomodiate"), "incomod" );
	deepEqual( Stem("incomodo"), "incomod" );
	deepEqual( Stem("incomparabile"), "incompar" );
	deepEqual( Stem("incompatibile"), "incompat" );
	deepEqual( Stem("incompatibilità"), "incompatibil" );
	deepEqual( Stem("incompetente"), "incompetent" );
	deepEqual( Stem("incomprensibile"), "incomprens" );
	deepEqual( Stem("incomprensioni"), "incomprension" );
	deepEqual( Stem("incomunicabile"), "incomunic" );
	deepEqual( Stem("incomunicabili"), "incomunic" );
	deepEqual( Stem("inconcludente"), "inconcludent" );
	deepEqual( Stem("inconcludenti"), "inconcludent" );
	deepEqual( Stem("incondizionato"), "incondizion" );
	deepEqual( Stem("incongruenze"), "incongruent" );
	deepEqual( Stem("incongruità"), "incongru" );
	deepEqual( Stem("inconsiderato"), "inconsider" );
	deepEqual( Stem("incontaminata"), "incontamin" );
	deepEqual( Stem("incontanente"), "incontanent" );
	deepEqual( Stem("inconterà"), "incont" );
	deepEqual( Stem("incontra"), "incontr" );
	deepEqual( Stem("incontrando"), "incontr" );
	deepEqual( Stem("incontrandola"), "incontr" );
	deepEqual( Stem("incontrandolo"), "incontr" );
	deepEqual( Stem("incontrano"), "incontr" );
	deepEqual( Stem("incontrar"), "incontr" );
	deepEqual( Stem("incontrare"), "incontr" );
	deepEqual( Stem("incontrarlo"), "incontr" );
	deepEqual( Stem("incontrarmi"), "incontr" );
	deepEqual( Stem("incontrarne"), "incontr" );
	deepEqual( Stem("incontrarono"), "incontr" );
	deepEqual( Stem("incontrarsi"), "incontr" );
	deepEqual( Stem("incontrasse"), "incontr" );
	deepEqual( Stem("incontrassero"), "incontr" );
	deepEqual( Stem("incontrassimo"), "incontr" );
	deepEqual( Stem("incontrastata"), "incontrast" );
	deepEqual( Stem("incontrate"), "incontr" );
	deepEqual( Stem("incontrati"), "incontr" );
	deepEqual( Stem("incontrato"), "incontr" );
	deepEqual( Stem("incontrava"), "incontr" );
	deepEqual( Stem("incontravamo"), "incontr" );
	deepEqual( Stem("incontravano"), "incontr" );
	deepEqual( Stem("incontrerà"), "incontr" );
	deepEqual( Stem("incontreranno"), "incontr" );
	deepEqual( Stem("incontrerebbe"), "incontr" );
	deepEqual( Stem("incontri"), "incontr" );
	deepEqual( Stem("incontriamo"), "incontr" );
	deepEqual( Stem("incontrino"), "incontrin" );
	deepEqual( Stem("incontro"), "incontr" );
	deepEqual( Stem("incontrò"), "incontr" );
	deepEqual( Stem("incontrollate"), "incontroll" );
	deepEqual( Stem("incontrollato"), "incontroll" );
	deepEqual( Stem("inconveniente"), "inconvenient" );
	deepEqual( Stem("inconvenienti"), "inconvenient" );
	deepEqual( Stem("incoraggiamenti"), "incoragg" );
	deepEqual( Stem("incoraggianti"), "incoragg" );
	deepEqual( Stem("incoraggiare"), "incoragg" );
	deepEqual( Stem("incoraggiasse"), "incoragg" );
	deepEqual( Stem("incoraggiti"), "incoragg" );
	deepEqual( Stem("incoraggito"), "incoragg" );
	deepEqual( Stem("incorporazioni"), "incorpor" );
	deepEqual( Stem("incorra"), "incorr" );
	deepEqual( Stem("incorrere"), "incorr" );
	deepEqual( Stem("incorrerebbero"), "incorr" );
	deepEqual( Stem("incostituzionalità"), "incostituzional" );
	deepEqual( Stem("incredibile"), "incred" );
	deepEqual( Stem("incredibilmente"), "incredibil" );
	deepEqual( Stem("incredule"), "incredul" );
	deepEqual( Stem("increduli"), "incredul" );
	deepEqual( Stem("incrementando"), "increment" );
	deepEqual( Stem("incrementi"), "increment" );
	deepEqual( Stem("incremento"), "increment" );
	deepEqual( Stem("increspata"), "incresp" );
	deepEqual( Stem("incriminata"), "incrimin" );
	deepEqual( Stem("incriminazione"), "incrimin" );
	deepEqual( Stem("incrina"), "incrin" );
	deepEqual( Stem("incrocian"), "incrocian" );
	deepEqual( Stem("incrociando"), "incroc" );
	deepEqual( Stem("incrociare"), "incroc" );
	deepEqual( Stem("incrociate"), "incroc" );
	deepEqual( Stem("incrociato"), "incroc" );
	deepEqual( Stem("incrociatore"), "incroc" );
	deepEqual( Stem("incrocicchiato"), "incrocicc" );
	deepEqual( Stem("incrocio"), "incroc" );
	deepEqual( Stem("incrociò"), "incroc" );
	deepEqual( Stem("incrollabile"), "incroll" );
	deepEqual( Stem("incubi"), "incub" );
	deepEqual( Stem("incubo"), "incub" );
	deepEqual( Stem("incudine"), "incudin" );
	deepEqual( Stem("inculcandogliela"), "inculc" );
	deepEqual( Stem("incunea"), "incune" );
	deepEqual( Stem("incurabile"), "incur" );
	deepEqual( Stem("incursione"), "incursion" );
	deepEqual( Stem("incursioni"), "incursion" );
	deepEqual( Stem("incursori"), "incursor" );
	deepEqual( Stem("incurvato"), "incurv" );
	deepEqual( Stem("incusso"), "incuss" );
	deepEqual( Stem("incutere"), "incut" );
	deepEqual( Stem("incutessero"), "incut" );
	deepEqual( Stem("ind"), "ind" );
	deepEqual( Stem("indaga"), "indag" );
	deepEqual( Stem("indagando"), "indag" );
	deepEqual( Stem("indagare"), "indag" );
	deepEqual( Stem("indagate"), "indag" );
	deepEqual( Stem("indagati"), "indag" );
	deepEqual( Stem("indagato"), "indag" );
	deepEqual( Stem("indagine"), "indagin" );
	deepEqual( Stem("indagini"), "indagin" );
	deepEqual( Stem("indarno"), "indarn" );
	deepEqual( Stem("indebita"), "indeb" );
	deepEqual( Stem("indebolirsi"), "indebol" );
	deepEqual( Stem("indebolita"), "indebol" );
	deepEqual( Stem("indecente"), "indecent" );
	deepEqual( Stem("indecentè"), "indecent" );
	deepEqual( Stem("indecenti"), "indecent" );
	deepEqual( Stem("indecisione"), "indecision" );
	deepEqual( Stem("indecorosa"), "indecor" );
	deepEqual( Stem("indefinibile"), "indefin" );
	deepEqual( Stem("indefinite"), "indefin" );
	deepEqual( Stem("indefinito"), "indefin" );
	deepEqual( Stem("indegna"), "indegn" );
	deepEqual( Stem("indegnamente"), "indegn" );
	deepEqual( Stem("indegnazione"), "indegn" );
	deepEqual( Stem("indegne"), "indegn" );
	deepEqual( Stem("indegni"), "indegn" );
	deepEqual( Stem("indegno"), "indegn" );
	deepEqual( Stem("indemoniato"), "indemon" );
	deepEqual( Stem("indenne"), "indenn" );
	deepEqual( Stem("indennità"), "indenn" );
	deepEqual( Stem("indennizzi"), "indennizz" );
	deepEqual( Stem("indescrivibile"), "indescriv" );
	deepEqual( Stem("indeterminata"), "indetermin" );
	deepEqual( Stem("indeterminatamente"), "indeterminat" );
	deepEqual( Stem("indeterminato"), "indetermin" );
	deepEqual( Stem("indetta"), "indett" );
	deepEqual( Stem("indette"), "indett" );
	deepEqual( Stem("indetto"), "indett" );
	deepEqual( Stem("indi"), "indi" );
	deepEqual( Stem("india"), "indi" );
	deepEqual( Stem("indià"), "indi" );
	deepEqual( Stem("indian"), "indian" );
	deepEqual( Stem("indiana"), "indian" );
	deepEqual( Stem("indiane"), "indian" );
	deepEqual( Stem("indiani"), "indian" );
	deepEqual( Stem("indiano"), "indi" );
	deepEqual( Stem("indiavolati"), "indiavol" );
	deepEqual( Stem("indica"), "indic" );
	deepEqual( Stem("indicando"), "indic" );
	deepEqual( Stem("indicandogli"), "indic" );
	deepEqual( Stem("indicano"), "indic" );
	deepEqual( Stem("indicar"), "indic" );
	deepEqual( Stem("indicare"), "indic" );
	deepEqual( Stem("indicarla"), "indic" );
	deepEqual( Stem("indicarne"), "indic" );
	deepEqual( Stem("indicarono"), "indic" );
	deepEqual( Stem("indicasse"), "indic" );
	deepEqual( Stem("indicata"), "indic" );
	deepEqual( Stem("indicate"), "indic" );
	deepEqual( Stem("indicati"), "indic" );
	deepEqual( Stem("indicative"), "indic" );
	deepEqual( Stem("indicativo"), "indic" );
	deepEqual( Stem("indicato"), "indic" );
	deepEqual( Stem("indicatore"), "indic" );
	deepEqual( Stem("indicatori"), "indic" );
	deepEqual( Stem("indicators"), "indicators" );
	deepEqual( Stem("indicava"), "indic" );
	deepEqual( Stem("indicavano"), "indic" );
	deepEqual( Stem("indicazione"), "indic" );
	deepEqual( Stem("indicazioni"), "indic" );
	deepEqual( Stem("indice"), "indic" );
	deepEqual( Stem("indicherebbero"), "indic" );
	deepEqual( Stem("indici"), "indic" );
	deepEqual( Stem("indicibile"), "indic" );
	deepEqual( Stem("indicio"), "indic" );
	deepEqual( Stem("indicizzati"), "indicizz" );
	deepEqual( Stem("indicò"), "indic" );
	deepEqual( Stem("indietro"), "indietr" );
	deepEqual( Stem("indifferente"), "indifferent" );
	deepEqual( Stem("indifferenti"), "indifferent" );
	deepEqual( Stem("indifferenza"), "indifferent" );
	deepEqual( Stem("indigena"), "indigen" );
	deepEqual( Stem("indigene"), "indigen" );
	deepEqual( Stem("indigeni"), "indigen" );
	deepEqual( Stem("indigeno"), "indigen" );
	deepEqual( Stem("indigenti"), "indigent" );
	deepEqual( Stem("indigenza"), "indigent" );
	deepEqual( Stem("indignata"), "indign" );
	deepEqual( Stem("indignati"), "indign" );
	deepEqual( Stem("indignazione"), "indign" );
	deepEqual( Stem("indimenticabile"), "indimentic" );
	deepEqual( Stem("indimenticabili"), "indimentic" );
	deepEqual( Stem("indios"), "indios" );
	deepEqual( Stem("indipendenstista"), "indipendenst" );
	deepEqual( Stem("indipendente"), "indipendent" );
	deepEqual( Stem("indipendentemente"), "indipendent" );
	deepEqual( Stem("indipendenti"), "indipendent" );
	deepEqual( Stem("indipendentismo"), "indipendent" );
	deepEqual( Stem("indipendentista"), "indipendent" );
	deepEqual( Stem("indipendentistà"), "indipendent" );
	deepEqual( Stem("indipendentisti"), "indipendent" );
	deepEqual( Stem("indipendentistì"), "indipendent" );
	deepEqual( Stem("indipendenza"), "indipendent" );
	deepEqual( Stem("indipendetista"), "indipendet" );
	deepEqual( Stem("indiretta"), "indirett" );
	deepEqual( Stem("indirettamente"), "indirett" );
	deepEqual( Stem("indirette"), "indirett" );
	deepEqual( Stem("indirizzare"), "indirizz" );
	deepEqual( Stem("indirizzata"), "indirizz" );
	deepEqual( Stem("indirizzate"), "indirizz" );
	deepEqual( Stem("indirizzati"), "indirizz" );
	deepEqual( Stem("indirizzato"), "indirizz" );
	deepEqual( Stem("indirizzava"), "indirizz" );
	deepEqual( Stem("indirizzi"), "indirizz" );
	deepEqual( Stem("indirizzo"), "indirizz" );
	deepEqual( Stem("indisciplinata"), "indisciplin" );
	deepEqual( Stem("indiscreta"), "indiscret" );
	deepEqual( Stem("indiscreti"), "indiscret" );
	deepEqual( Stem("indiscrezione"), "indiscrezion" );
	deepEqual( Stem("indiscrezioni"), "indiscrezion" );
	deepEqual( Stem("indiscriminati"), "indiscrimin" );
	deepEqual( Stem("indiscusso"), "indiscuss" );
	deepEqual( Stem("indispensabile"), "indispens" );
	deepEqual( Stem("indispensabili"), "indispens" );
	deepEqual( Stem("indispettita"), "indispett" );
	deepEqual( Stem("indispettito"), "indispett" );
	deepEqual( Stem("indispettiva"), "indispett" );
	deepEqual( Stem("indisponibile"), "indispon" );
	deepEqual( Stem("indisponibili"), "indispon" );
	deepEqual( Stem("indisponibilità"), "indisponibil" );
	deepEqual( Stem("indistintamente"), "indistint" );
	deepEqual( Stem("indistinto"), "indistint" );
	deepEqual( Stem("individua"), "individu" );
	deepEqual( Stem("individuale"), "individual" );
	deepEqual( Stem("individuali"), "individual" );
	deepEqual( Stem("individualità"), "individual" );
	deepEqual( Stem("individualmente"), "individual" );
	deepEqual( Stem("individuando"), "individu" );
	deepEqual( Stem("individuano"), "individu" );
	deepEqual( Stem("individuare"), "individu" );
	deepEqual( Stem("individuata"), "individu" );
	deepEqual( Stem("individuate"), "individu" );
	deepEqual( Stem("individuati"), "individu" );
	deepEqual( Stem("individuato"), "individu" );
	deepEqual( Stem("individuazione"), "individu" );
	deepEqual( Stem("individui"), "individu" );
	deepEqual( Stem("individuo"), "individu" );
	deepEqual( Stem("indizi"), "indiz" );
	deepEqual( Stem("indizio"), "indiz" );
	deepEqual( Stem("indizj"), "indizj" );
	deepEqual( Stem("indocile"), "indocil" );
	deepEqual( Stem("indocilità"), "indocil" );
	deepEqual( Stem("indole"), "indol" );
	deepEqual( Stem("indolenziti"), "indolenz" );
	deepEqual( Stem("indomabile"), "indom" );
	deepEqual( Stem("indomani"), "indoman" );
	deepEqual( Stem("indonesia"), "indones" );
	deepEqual( Stem("indoor"), "indoor" );
	deepEqual( Stem("indossando"), "indoss" );
	deepEqual( Stem("indossato"), "indoss" );
	deepEqual( Stem("indossava"), "indoss" );
	deepEqual( Stem("indossavano"), "indoss" );
	deepEqual( Stem("indosso"), "indoss" );
	deepEqual( Stem("indotto"), "indott" );
	deepEqual( Stem("indovinala"), "indovinal" );
	deepEqual( Stem("indovinar"), "indovin" );
	deepEqual( Stem("indovinare"), "indovin" );
	deepEqual( Stem("indovinarla"), "indovin" );
	deepEqual( Stem("indovinarsi"), "indovin" );
	deepEqual( Stem("indovinasse"), "indovin" );
	deepEqual( Stem("indovinate"), "indovin" );
	deepEqual( Stem("indovinato"), "indovin" );
	deepEqual( Stem("indovinava"), "indovin" );
	deepEqual( Stem("indovinerà"), "indovin" );
	deepEqual( Stem("indovinò"), "indovin" );
	deepEqual( Stem("indro"), "indro" );
	deepEqual( Stem("indù"), "indù" );
	deepEqual( Stem("indubbiamente"), "indubb" );
	deepEqual( Stem("indubbio"), "indubb" );
	deepEqual( Stem("indubitabilmente"), "indubitabil" );
	deepEqual( Stem("induce"), "induc" );
	deepEqual( Stem("induceva"), "induc" );
	deepEqual( Stem("inducono"), "induc" );
	deepEqual( Stem("indugi"), "indug" );
	deepEqual( Stem("indugiare"), "indug" );
	deepEqual( Stem("indugiasse"), "indug" );
	deepEqual( Stem("indugiava"), "indug" );
	deepEqual( Stem("indulgente"), "indulgent" );
	deepEqual( Stem("indulto"), "indult" );
	deepEqual( Stem("indumenti"), "indument" );
	deepEqual( Stem("indur"), "indur" );
	deepEqual( Stem("indurati"), "indur" );
	deepEqual( Stem("indurato"), "indur" );
	deepEqual( Stem("indurito"), "indur" );
	deepEqual( Stem("indurla"), "indurl" );
	deepEqual( Stem("indurrà"), "indurr" );
	deepEqual( Stem("indurre"), "indurr" );
	deepEqual( Stem("industr"), "industr" );
	deepEqual( Stem("industria"), "industr" );
	deepEqual( Stem("industriale"), "industrial" );
	deepEqual( Stem("industriali"), "industrial" );
	deepEqual( Stem("industrializzate"), "industrializz" );
	deepEqual( Stem("industrializzati"), "industrializz" );
	deepEqual( Stem("industrializzato"), "industrializz" );
	deepEqual( Stem("industriarsi"), "industr" );
	deepEqual( Stem("industrie"), "industr" );
	deepEqual( Stem("industries"), "industries" );
	deepEqual( Stem("induttivo"), "indutt" );
	deepEqual( Stem("induzione"), "induzion" );
	deepEqual( Stem("induzioni"), "induzion" );
	deepEqual( Stem("inebriato"), "inebr" );
	deepEqual( Stem("ineccepibile"), "ineccep" );
	deepEqual( Stem("inedita"), "ined" );
	deepEqual( Stem("inedite"), "ined" );
	deepEqual( Stem("inediti"), "ined" );
	deepEqual( Stem("inedito"), "ined" );
	deepEqual( Stem("ineffabile"), "ineff" );
	deepEqual( Stem("inefficaci"), "inefficac" );
	deepEqual( Stem("inefficacia"), "inefficac" );
	deepEqual( Stem("inefficienza"), "inefficient" );
	deepEqual( Stem("ineguali"), "inegual" );
	deepEqual( Stem("ineludibile"), "inelud" );
	deepEqual( Stem("ineludibili"), "inelud" );
	deepEqual( Stem("ineluttabile"), "inelutt" );
	deepEqual( Stem("ineluttabilità"), "inelutt" );
	deepEqual( Stem("inequivoco"), "inequivoc" );
	deepEqual( Stem("inermi"), "inerm" );
	deepEqual( Stem("inerte"), "inert" );
	deepEqual( Stem("inerzia"), "inerz" );
	deepEqual( Stem("inesatta"), "inesatt" );
	deepEqual( Stem("inesausta"), "inesaust" );
	deepEqual( Stem("ineseguiti"), "inesegu" );
	deepEqual( Stem("inesigibili"), "inesig" );
	deepEqual( Stem("inesistenti"), "inesistent" );
	deepEqual( Stem("inesorabilmente"), "inesorabil" );
	deepEqual( Stem("inesperta"), "inespert" );
	deepEqual( Stem("inesperte"), "inespert" );
	deepEqual( Stem("inesperto"), "inespert" );
	deepEqual( Stem("inesplicabile"), "inesplic" );
	deepEqual( Stem("inesplicabili"), "inesplic" );
	deepEqual( Stem("inesplorato"), "inesplor" );
	deepEqual( Stem("inespugnabile"), "inespugn" );
	deepEqual( Stem("inevitabile"), "inevit" );
	deepEqual( Stem("inevitabili"), "inevit" );
	deepEqual( Stem("inevitabilmente"), "inevitabil" );
	deepEqual( Stem("inf"), "inf" );
	deepEqual( Stem("infallibilmente"), "infallibil" );
	deepEqual( Stem("infame"), "infam" );
	deepEqual( Stem("infami"), "infam" );
	deepEqual( Stem("infamia"), "infam" );
	deepEqual( Stem("infamità"), "infam" );
	deepEqual( Stem("infangare"), "infang" );
	deepEqual( Stem("infangata"), "infang" );
	deepEqual( Stem("infangato"), "infang" );
	deepEqual( Stem("infante"), "infant" );
	deepEqual( Stem("infanti"), "infant" );
	deepEqual( Stem("infantile"), "infantil" );
	deepEqual( Stem("infanzia"), "infanz" );
	deepEqual( Stem("infarinarne"), "infarin" );
	deepEqual( Stem("infarinati"), "infarin" );
	deepEqual( Stem("infarto"), "infart" );
	deepEqual( Stem("infastidir"), "infastid" );
	deepEqual( Stem("infastidito"), "infastid" );
	deepEqual( Stem("infaticabile"), "infatic" );
	deepEqual( Stem("infatti"), "infatt" );
	deepEqual( Stem("infauste"), "infaust" );
	deepEqual( Stem("infausto"), "infaust" );
	deepEqual( Stem("infedeltà"), "infedelt" );
	deepEqual( Stem("infelice"), "infel" );
	deepEqual( Stem("infelicemente"), "infelic" );
	deepEqual( Stem("infelici"), "infel" );
	deepEqual( Stem("infelicissima"), "infelicissim" );
	deepEqual( Stem("inferiore"), "inferior" );
	deepEqual( Stem("inferiori"), "inferior" );
	deepEqual( Stem("infermeria"), "infermer" );
	deepEqual( Stem("infermi"), "inferm" );
	deepEqual( Stem("infermiera"), "infermier" );
	deepEqual( Stem("infermiere"), "inferm" );
	deepEqual( Stem("infermieri"), "infermier" );
	deepEqual( Stem("infermità"), "inferm" );
	deepEqual( Stem("infermo"), "inferm" );
	deepEqual( Stem("infernale"), "infernal" );
	deepEqual( Stem("inferno"), "infern" );
	deepEqual( Stem("inferriata"), "inferr" );
	deepEqual( Stem("inferriate"), "inferr" );
	deepEqual( Stem("inferta"), "infert" );
	deepEqual( Stem("infervorati"), "infervor" );
	deepEqual( Stem("infervorato"), "infervor" );
	deepEqual( Stem("infestano"), "infest" );
	deepEqual( Stem("infestar"), "infest" );
	deepEqual( Stem("infetta"), "infett" );
	deepEqual( Stem("infettamento"), "infett" );
	deepEqual( Stem("infettati"), "infett" );
	deepEqual( Stem("infettato"), "infett" );
	deepEqual( Stem("infette"), "infett" );
	deepEqual( Stem("infetti"), "infett" );
	deepEqual( Stem("infezione"), "infezion" );
	deepEqual( Stem("infiammata"), "infiamm" );
	deepEqual( Stem("infiammati"), "infiamm" );
	deepEqual( Stem("infiammato"), "infiamm" );
	deepEqual( Stem("infiammavano"), "infiamm" );
	deepEqual( Stem("inficiate"), "infic" );
	deepEqual( Stem("infido"), "infid" );
	deepEqual( Stem("infierire"), "infier" );
	deepEqual( Stem("infilata"), "infil" );
	deepEqual( Stem("infilato"), "infil" );
	deepEqual( Stem("infilavo"), "infil" );
	deepEqual( Stem("infilzan"), "infilzan" );
	deepEqual( Stem("infilzata"), "infilz" );
	deepEqual( Stem("infimi"), "infim" );
	deepEqual( Stem("infimo"), "infim" );
	deepEqual( Stem("infine"), "infin" );
	deepEqual( Stem("infinita"), "infin" );
	deepEqual( Stem("infinite"), "infin" );
	deepEqual( Stem("infinocchiar"), "infinocc" );
	deepEqual( Stem("infinocchiata"), "infinocc" );
	deepEqual( Stem("inflazione"), "inflazion" );
	deepEqual( Stem("inflazionistica"), "inflazionist" );
	deepEqual( Stem("inflazionistiche"), "inflazionist" );
	deepEqual( Stem("inflazionistico"), "inflazionist" );
	deepEqual( Stem("inflessibile"), "infless" );
	deepEqual( Stem("infliggendo"), "infligg" );
	deepEqual( Stem("infliggere"), "infligg" );
	deepEqual( Stem("inflitto"), "inflitt" );
	deepEqual( Stem("influenza"), "influenz" );
	deepEqual( Stem("influenzale"), "influenzal" );
	deepEqual( Stem("influenzate"), "influenz" );
	deepEqual( Stem("influenzato"), "influenz" );
	deepEqual( Stem("influenze"), "influenz" );
	deepEqual( Stem("influito"), "influ" );
	deepEqual( Stem("influssi"), "influss" );
	deepEqual( Stem("influsso"), "influss" );
	deepEqual( Stem("infocata"), "infoc" );
	deepEqual( Stem("infocati"), "infoc" );
	deepEqual( Stem("infocato"), "infoc" );
	deepEqual( Stem("infoltito"), "infolt" );
	deepEqual( Stem("infomazione"), "infom" );
	deepEqual( Stem("infondate"), "infond" );
	deepEqual( Stem("infondato"), "infond" );
	deepEqual( Stem("infonde"), "infond" );
	deepEqual( Stem("infondere"), "infond" );
	deepEqual( Stem("infondergli"), "infond" );
	deepEqual( Stem("inforamzioni"), "inforamzion" );
	deepEqual( Stem("informa"), "inform" );
	deepEqual( Stem("informale"), "informal" );
	deepEqual( Stem("informali"), "informal" );
	deepEqual( Stem("informando"), "inform" );
	deepEqual( Stem("informar"), "inform" );
	deepEqual( Stem("informare"), "inform" );
	deepEqual( Stem("informarlo"), "inform" );
	deepEqual( Stem("informaron"), "informaron" );
	deepEqual( Stem("informarono"), "inform" );
	deepEqual( Stem("informarsene"), "inform" );
	deepEqual( Stem("informarsi"), "inform" );
	deepEqual( Stem("informasse"), "inform" );
	deepEqual( Stem("informata"), "inform" );
	deepEqual( Stem("informati"), "inform" );
	deepEqual( Stem("informatica"), "informat" );
	deepEqual( Stem("informatici"), "informat" );
	deepEqual( Stem("informatico"), "informat" );
	deepEqual( Stem("informationes"), "informationes" );
	deepEqual( Stem("informativi"), "inform" );
	deepEqual( Stem("informativo"), "inform" );
	deepEqual( Stem("informato"), "inform" );
	deepEqual( Stem("informatore"), "inform" );
	deepEqual( Stem("informazione"), "inform" );
	deepEqual( Stem("informazioni"), "inform" );
	deepEqual( Stem("informe"), "inform" );
	deepEqual( Stem("informerete"), "inform" );
	deepEqual( Stem("informerò"), "inform" );
	deepEqual( Stem("informò"), "inform" );
	deepEqual( Stem("infornare"), "inforn" );
	deepEqual( Stem("infortunati"), "infortun" );
	deepEqual( Stem("infortunato"), "infortun" );
	deepEqual( Stem("infortuni"), "infortun" );
	deepEqual( Stem("infortunio"), "infortun" );
	deepEqual( Stem("infossati"), "infoss" );
	deepEqual( Stem("infrange"), "infrang" );
	deepEqual( Stem("infrangere"), "infrang" );
	deepEqual( Stem("infranse"), "infrans" );
	deepEqual( Stem("infrastrutturazione"), "infrastruttur" );
	deepEqual( Stem("infrastrutture"), "infrastruttur" );
	deepEqual( Stem("infrazioni"), "infrazion" );
	deepEqual( Stem("infuriare"), "infur" );
	deepEqual( Stem("infuriati"), "infur" );
	deepEqual( Stem("infuriato"), "infur" );
	deepEqual( Stem("infuriava"), "infur" );
	deepEqual( Stem("infuriò"), "infur" );
	deepEqual( Stem("ing"), "ing" );
	deepEqual( Stem("ingaggi"), "ingagg" );
	deepEqual( Stem("ingaggiati"), "ingagg" );
	deepEqual( Stem("ingaggiato"), "ingagg" );
	deepEqual( Stem("ingannano"), "ingann" );
	deepEqual( Stem("ingannare"), "ingann" );
	deepEqual( Stem("ingannarlo"), "ingann" );
	deepEqual( Stem("ingannata"), "ingann" );
	deepEqual( Stem("ingannava"), "ingann" );
	deepEqual( Stem("ingannerebbe"), "ingann" );
	deepEqual( Stem("inganni"), "ingann" );
	deepEqual( Stem("inganno"), "ingann" );
	deepEqual( Stem("ingarbugliata"), "ingarbugl" );
	deepEqual( Stem("ingegna"), "ingegn" );
	deepEqual( Stem("ingegnandosi"), "ingegn" );
	deepEqual( Stem("ingegnano"), "ingegn" );
	deepEqual( Stem("ingegnarsi"), "ingegn" );
	deepEqual( Stem("ingegnati"), "ingegn" );
	deepEqual( Stem("ingegnato"), "ingegn" );
	deepEqual( Stem("ingegnava"), "ingegn" );
	deepEqual( Stem("ingegnavano"), "ingegn" );
	deepEqual( Stem("ingegneremo"), "ingegn" );
	deepEqual( Stem("ingegneria"), "ingegner" );
	deepEqual( Stem("ingegni"), "ingegn" );
	deepEqual( Stem("ingegno"), "ingegn" );
	deepEqual( Stem("ingegnosa"), "ingegn" );
	deepEqual( Stem("ingegnoso"), "ingegn" );
	deepEqual( Stem("ingelosisce"), "ingelos" );
	deepEqual( Stem("ingemar"), "ingem" );
	deepEqual( Stem("ingenita"), "ingen" );
	deepEqual( Stem("ingenti"), "ingent" );
	deepEqual( Stem("ingenuità"), "ingenu" );
	deepEqual( Stem("ingenuo"), "ingenu" );
	deepEqual( Stem("ingerenza"), "ingerent" );
	deepEqual( Stem("ingerirvisi"), "ingerirvis" );
	deepEqual( Stem("ingerito"), "inger" );
	deepEqual( Stem("ingessare"), "ingess" );
	deepEqual( Stem("ingessatura"), "ingessatur" );
	deepEqual( Stem("inghilterra"), "inghilterr" );
	deepEqual( Stem("inghiottisce"), "inghiott" );
	deepEqual( Stem("inghiottiti"), "inghiott" );
	deepEqual( Stem("inghippi"), "inghipp" );
	deepEqual( Stem("inginocchiarsi"), "inginocc" );
	deepEqual( Stem("inginocchiato"), "inginocc" );
	deepEqual( Stem("inginocchiò"), "inginocc" );
	deepEqual( Stem("inginocchioni"), "inginocchion" );
	deepEqual( Stem("ingiù"), "ingiù" );
	deepEqual( Stem("ingiuria"), "ingiur" );
	deepEqual( Stem("ingiuriose"), "ingiur" );
	deepEqual( Stem("ingiuriosi"), "ingiur" );
	deepEqual( Stem("ingiusta"), "ingiust" );
	deepEqual( Stem("ingiustamente"), "ingiust" );
	deepEqual( Stem("ingiuste"), "ingiust" );
	deepEqual( Stem("ingiustificata"), "ingiustific" );
	deepEqual( Stem("ingiustificato"), "ingiustific" );
	deepEqual( Stem("ingiustizia"), "ingiustiz" );
	deepEqual( Stem("ingiusto"), "ingiust" );
	deepEqual( Stem("inglese"), "ingles" );
	deepEqual( Stem("inglesi"), "ingles" );
	deepEqual( Stem("ingloriosa"), "inglor" );
	deepEqual( Stem("ingoiando"), "ingoi" );
	deepEqual( Stem("ingoiarsi"), "ingoi" );
	deepEqual( Stem("ingoiata"), "ingoi" );
	deepEqual( Stem("ingoiati"), "ingoi" );
	deepEqual( Stem("ingolfa"), "ingolf" );
	deepEqual( Stem("ingolfato"), "ingolf" );
	deepEqual( Stem("ingolfava"), "ingolf" );
	deepEqual( Stem("ingolstadt"), "ingolstadt" );
	deepEqual( Stem("ingombrava"), "ingombr" );
	deepEqual( Stem("ingombri"), "ingombr" );
	deepEqual( Stem("ingombro"), "ingombr" );
	deepEqual( Stem("ingordi"), "ingord" );
	deepEqual( Stem("ingozzarne"), "ingozz" );
	deepEqual( Stem("ingrandire"), "ingrand" );
	deepEqual( Stem("ingrandirsi"), "ingrand" );
	deepEqual( Stem("ingrandita"), "ingrand" );
	deepEqual( Stem("ingrandivano"), "ingrand" );
	deepEqual( Stem("ingrassare"), "ingrass" );
	deepEqual( Stem("ingrassia"), "ingrass" );
	deepEqual( Stem("ingratitudine"), "ingratitudin" );
	deepEqual( Stem("ingred"), "ingred" );
	deepEqual( Stem("ingredienti"), "ingredient" );
	deepEqual( Stem("ingressi"), "ingress" );
	deepEqual( Stem("ingresso"), "ingress" );
	deepEqual( Stem("ingrossa"), "ingross" );
	deepEqual( Stem("ingrossava"), "ingross" );
	deepEqual( Stem("ingrosso"), "ingross" );
	deepEqual( Stem("ingrossò"), "ingross" );
	deepEqual( Stem("inguscezia"), "inguscez" );
	deepEqual( Stem("inhabilità"), "inhabil" );
	deepEqual( Stem("inibisce"), "inib" );
	deepEqual( Stem("inibizione"), "inibizion" );
	deepEqual( Stem("iniezione"), "iniezion" );
	deepEqual( Stem("inimicizia"), "inimiciz" );
	deepEqual( Stem("inimicizie"), "inimiciz" );
	deepEqual( Stem("ininterrotta"), "ininterrott" );
	deepEqual( Stem("iniqua"), "iniqu" );
	deepEqual( Stem("inique"), "iniqu" );
	deepEqual( Stem("iniqui"), "iniqu" );
	deepEqual( Stem("iniquità"), "iniqu" );
	deepEqual( Stem("iniquo"), "iniqu" );
	deepEqual( Stem("inizia"), "iniz" );
	deepEqual( Stem("iniziale"), "inizial" );
	deepEqual( Stem("iniziali"), "inizial" );
	deepEqual( Stem("inizialmente"), "inizial" );
	deepEqual( Stem("iniziano"), "iniz" );
	deepEqual( Stem("iniziare"), "iniz" );
	deepEqual( Stem("iniziata"), "iniz" );
	deepEqual( Stem("iniziativa"), "iniz" );
	deepEqual( Stem("iniziative"), "iniz" );
	deepEqual( Stem("iniziato"), "iniz" );
	deepEqual( Stem("iniziazione"), "iniz" );
	deepEqual( Stem("inizierà"), "iniz" );
	deepEqual( Stem("inizierebbe"), "iniz" );
	deepEqual( Stem("inizio"), "iniz" );
	deepEqual( Stem("innaffia"), "innaff" );
	deepEqual( Stem("innaffiato"), "innaff" );
	deepEqual( Stem("innalzamento"), "innalz" );
	deepEqual( Stem("innalzata"), "innalz" );
	deepEqual( Stem("innalzato"), "innalz" );
	deepEqual( Stem("innamora"), "innamor" );
	deepEqual( Stem("innamorano"), "innamor" );
	deepEqual( Stem("innamorarsi"), "innamor" );
	deepEqual( Stem("innamorata"), "innamor" );
	deepEqual( Stem("innamorati"), "innamor" );
	deepEqual( Stem("innamorato"), "innamor" );
	deepEqual( Stem("innanzi"), "innanz" );
	deepEqual( Stem("innanzitutto"), "innanzitutt" );
	deepEqual( Stem("innata"), "innat" );
	deepEqual( Stem("innegabile"), "inneg" );
	deepEqual( Stem("inneggianti"), "innegg" );
	deepEqual( Stem("inneggiavano"), "innegg" );
	deepEqual( Stem("innesca"), "innesc" );
	deepEqual( Stem("innesti"), "innest" );
	deepEqual( Stem("inni"), "inni" );
	deepEqual( Stem("innocente"), "innocent" );
	deepEqual( Stem("innocenti"), "innocent" );
	deepEqual( Stem("innocentina"), "innocentin" );
	deepEqual( Stem("innocenza"), "innocent" );
	deepEqual( Stem("innominabili"), "innomin" );
	deepEqual( Stem("innominato"), "innomin" );
	deepEqual( Stem("innovata"), "innov" );
	deepEqual( Stem("innovativi"), "innov" );
	deepEqual( Stem("innovativo"), "innov" );
	deepEqual( Stem("innovatore"), "innov" );
	deepEqual( Stem("innovazione"), "innov" );
	deepEqual( Stem("inocntro"), "inocntr" );
	deepEqual( Stem("inoffensivi"), "inoffens" );
	deepEqual( Stem("inoffensivo"), "inoffens" );
	deepEqual( Stem("inoltra"), "inoltr" );
	deepEqual( Stem("inoltrandosi"), "inoltr" );
	deepEqual( Stem("inoltrarvisi"), "inoltrarvis" );
	deepEqual( Stem("inoltrata"), "inoltr" );
	deepEqual( Stem("inoltrato"), "inoltr" );
	deepEqual( Stem("inoltrava"), "inoltr" );
	deepEqual( Stem("inoltre"), "inoltr" );
	deepEqual( Stem("inoltrò"), "inoltr" );
	deepEqual( Stem("inondato"), "inond" );
	deepEqual( Stem("inopportuna"), "inopportun" );
	deepEqual( Stem("inopportuno"), "inopportun" );
	deepEqual( Stem("inorriditi"), "inorrid" );
	deepEqual( Stem("inorridito"), "inorrid" );
	deepEqual( Stem("inorridiva"), "inorrid" );
	deepEqual( Stem("inorridivano"), "inorrid" );
	deepEqual( Stem("inospitale"), "inospital" );
	deepEqual( Stem("inosservata"), "inosserv" );
	deepEqual( Stem("inosservati"), "inosserv" );
	deepEqual( Stem("inosservato"), "inosserv" );
	deepEqual( Stem("inpgi"), "inpgi" );
	deepEqual( Stem("inps"), "inps" );
	deepEqual( Stem("input"), "input" );
	deepEqual( Stem("inquadrato"), "inquadr" );
	deepEqual( Stem("inquadrava"), "inquadr" );
	deepEqual( Stem("inqualificabile"), "inqualific" );
	deepEqual( Stem("inquieta"), "inquiet" );
	deepEqual( Stem("inquietante"), "inquiet" );
	deepEqual( Stem("inquietanti"), "inquiet" );
	deepEqual( Stem("inquietarla"), "inquiet" );
	deepEqual( Stem("inquietarsene"), "inquiet" );
	deepEqual( Stem("inquietarti"), "inquiet" );
	deepEqual( Stem("inquietata"), "inquiet" );
	deepEqual( Stem("inquietava"), "inquiet" );
	deepEqual( Stem("inquieti"), "inquiet" );
	deepEqual( Stem("inquieto"), "inquiet" );
	deepEqual( Stem("inquietudine"), "inquietudin" );
	deepEqual( Stem("inquietudini"), "inquietudin" );
	deepEqual( Stem("inquilini"), "inquilin" );
	deepEqual( Stem("inquilino"), "inquilin" );
	deepEqual( Stem("inquinamento"), "inquin" );
	deepEqual( Stem("inquinanti"), "inquin" );
	deepEqual( Stem("inquinasse"), "inquin" );
	deepEqual( Stem("inquini"), "inquin" );
	deepEqual( Stem("inquirenti"), "inquirent" );
	deepEqual( Stem("inquisisca"), "inquis" );
	deepEqual( Stem("inquisiti"), "inquis" );
	deepEqual( Stem("inquisizione"), "inquisizion" );
	deepEqual( Stem("inquisizioni"), "inquisizion" );
	deepEqual( Stem("insabbiati"), "insabb" );
	deepEqual( Stem("insaccato"), "insacc" );
	deepEqual( Stem("insaccava"), "insacc" );
	deepEqual( Stem("insaccò"), "insacc" );
	deepEqual( Stem("insalvatichiti"), "insalvatic" );
	deepEqual( Stem("insalvatichito"), "insalvatic" );
	deepEqual( Stem("insanguinate"), "insanguin" );
	deepEqual( Stem("insanguinati"), "insanguin" );
	deepEqual( Stem("insanguinato"), "insanguin" );
	deepEqual( Stem("insaputa"), "insap" );
	deepEqual( Stem("inscenare"), "inscen" );
	deepEqual( Stem("insediamenti"), "insed" );
	deepEqual( Stem("insediamento"), "insed" );
	deepEqual( Stem("insediarsi"), "insed" );
	deepEqual( Stem("insediati"), "insed" );
	deepEqual( Stem("insediato"), "insed" );
	deepEqual( Stem("insegna"), "insegn" );
	deepEqual( Stem("insegnamento"), "insegn" );
	deepEqual( Stem("insegnanmento"), "insegnanment" );
	deepEqual( Stem("insegnano"), "insegn" );
	deepEqual( Stem("insegnante"), "insegn" );
	deepEqual( Stem("insegnanti"), "insegn" );
	deepEqual( Stem("insegnar"), "insegn" );
	deepEqual( Stem("insegnare"), "insegn" );
	deepEqual( Stem("insegnargli"), "insegn" );
	deepEqual( Stem("insegnargliela"), "insegn" );
	deepEqual( Stem("insegnarle"), "insegn" );
	deepEqual( Stem("insegnarmi"), "insegn" );
	deepEqual( Stem("insegnata"), "insegn" );
	deepEqual( Stem("insegnate"), "insegn" );
	deepEqual( Stem("insegnati"), "insegn" );
	deepEqual( Stem("insegnato"), "insegn" );
	deepEqual( Stem("insegnava"), "insegn" );
	deepEqual( Stem("insegnavan"), "insegnavan" );
	deepEqual( Stem("insegne"), "insegn" );
	deepEqual( Stem("insegnerà"), "insegn" );
	deepEqual( Stem("insegnerò"), "insegn" );
	deepEqual( Stem("insegni"), "insegn" );
	deepEqual( Stem("insegno"), "insegn" );
	deepEqual( Stem("insegnò"), "insegn" );
	deepEqual( Stem("insegue"), "insegu" );
	deepEqual( Stem("inseguì"), "insegu" );
	deepEqual( Stem("inseguimenti"), "insegu" );
	deepEqual( Stem("inseguimento"), "insegu" );
	deepEqual( Stem("inseguire"), "insegu" );
	deepEqual( Stem("inseguita"), "insegu" );
	deepEqual( Stem("inseguitemi"), "inseguitem" );
	deepEqual( Stem("inseguito"), "insegu" );
	deepEqual( Stem("inseguitori"), "inseguitor" );
	deepEqual( Stem("inseguiva"), "insegu" );
	deepEqual( Stem("insensata"), "insens" );
	deepEqual( Stem("insensatezza"), "insensatezz" );
	deepEqual( Stem("insensati"), "insens" );
	deepEqual( Stem("insensato"), "insens" );
	deepEqual( Stem("insensibilità"), "insensibil" );
	deepEqual( Stem("inseparabili"), "insepar" );
	deepEqual( Stem("insepolti"), "insepolt" );
	deepEqual( Stem("inserendo"), "inser" );
	deepEqual( Stem("inserimento"), "inser" );
	deepEqual( Stem("inserire"), "inser" );
	deepEqual( Stem("inserirsi"), "inser" );
	deepEqual( Stem("inserisce"), "inser" );
	deepEqual( Stem("inseriscono"), "inser" );
	deepEqual( Stem("inserita"), "inser" );
	deepEqual( Stem("inserite"), "inser" );
	deepEqual( Stem("inseriti"), "inser" );
	deepEqual( Stem("inserito"), "inser" );
	deepEqual( Stem("insicurezze"), "insicurezz" );
	deepEqual( Stem("insicuro"), "insicur" );
	deepEqual( Stem("insidia"), "insid" );
	deepEqual( Stem("insidiare"), "insid" );
	deepEqual( Stem("insidiati"), "insid" );
	deepEqual( Stem("insidie"), "insid" );
	deepEqual( Stem("insidiosi"), "insid" );
	deepEqual( Stem("insiem"), "insiem" );
	deepEqual( Stem("insieme"), "insiem" );
	deepEqual( Stem("insigne"), "insign" );
	deepEqual( Stem("insigni"), "insign" );
	deepEqual( Stem("insinuando"), "insinu" );
	deepEqual( Stem("insinuare"), "insinu" );
	deepEqual( Stem("insinuargli"), "insinu" );
	deepEqual( Stem("insinuazione"), "insinu" );
	deepEqual( Stem("insinuazioni"), "insinu" );
	deepEqual( Stem("insipienza"), "insipient" );
	deepEqual( Stem("insiste"), "insist" );
	deepEqual( Stem("insistendo"), "insist" );
	deepEqual( Stem("insistente"), "insistent" );
	deepEqual( Stem("insistenti"), "insistent" );
	deepEqual( Stem("insistenza"), "insistent" );
	deepEqual( Stem("insistenze"), "insistent" );
	deepEqual( Stem("insistere"), "insist" );
	deepEqual( Stem("insistette"), "insistett" );
	deepEqual( Stem("insisteva"), "insist" );
	deepEqual( Stem("insistito"), "insist" );
	deepEqual( Stem("insita"), "insit" );
	deepEqual( Stem("insite"), "insit" );
	deepEqual( Stem("insoddisfacente"), "insoddisfacent" );
	deepEqual( Stem("insoddisfatto"), "insoddisfatt" );
	deepEqual( Stem("insolente"), "insolent" );
	deepEqual( Stem("insolenza"), "insolent" );
	deepEqual( Stem("insolita"), "insol" );
	deepEqual( Stem("insoliti"), "insol" );
	deepEqual( Stem("insolito"), "insol" );
	deepEqual( Stem("insolvente"), "insolvent" );
	deepEqual( Stem("insoma"), "insom" );
	deepEqual( Stem("insomma"), "insomm" );
	deepEqual( Stem("insonne"), "insonn" );
	deepEqual( Stem("insopportabile"), "insopport" );
	deepEqual( Stem("insopportabili"), "insopport" );
	deepEqual( Stem("insopportabilità"), "insopport" );
	deepEqual( Stem("insopprimibile"), "insopprim" );
	deepEqual( Stem("insorgere"), "insorg" );
	deepEqual( Stem("insorgevano"), "insorg" );
	deepEqual( Stem("insormontabili"), "insormont" );
	deepEqual( Stem("insospettì"), "insospett" );
	deepEqual( Stem("insospettito"), "insospett" );
	deepEqual( Stem("insostenibile"), "insosten" );
	deepEqual( Stem("insostituibile"), "insostitu" );
	deepEqual( Stem("insperato"), "insper" );
	deepEqual( Stem("inspiegabili"), "inspieg" );
	deepEqual( Stem("inspiegabilmente"), "inspiegabil" );
	deepEqual( Stem("instabile"), "instabil" );
	deepEqual( Stem("installando"), "install" );
	deepEqual( Stem("installare"), "install" );
	deepEqual( Stem("installata"), "install" );
	deepEqual( Stem("installate"), "install" );
	deepEqual( Stem("installato"), "install" );
	deepEqual( Stem("installazione"), "install" );
	deepEqual( Stem("instancabile"), "instanc" );
	deepEqual( Stem("instaurare"), "instaur" );
	deepEqual( Stem("instaurati"), "instaur" );
	deepEqual( Stem("instauratosi"), "instaurat" );
	deepEqual( Stem("institute"), "instit" );
	deepEqual( Stem("insuccessi"), "insuccess" );
	deepEqual( Stem("insuccesso"), "insuccess" );
	deepEqual( Stem("insufficiente"), "insufficient" );
	deepEqual( Stem("insufficienti"), "insufficient" );
	deepEqual( Stem("insufficienza"), "insufficient" );
	deepEqual( Stem("insulino"), "insulin" );
	deepEqual( Stem("insulso"), "insuls" );
	deepEqual( Stem("insultare"), "insult" );
	deepEqual( Stem("insultata"), "insult" );
	deepEqual( Stem("insultati"), "insult" );
	deepEqual( Stem("insultato"), "insult" );
	deepEqual( Stem("insulti"), "insult" );
	deepEqual( Stem("insulto"), "insult" );
	deepEqual( Stem("insuperabile"), "insuper" );
	deepEqual( Stem("insuperabili"), "insuper" );
	deepEqual( Stem("insurrezione"), "insurrezion" );
	deepEqual( Stem("int"), "int" );
	deepEqual( Stem("intaccando"), "intacc" );
	deepEqual( Stem("intaccati"), "intacc" );
	deepEqual( Stem("intaccato"), "intacc" );
	deepEqual( Stem("intagliata"), "intagl" );
	deepEqual( Stem("intanto"), "intant" );
	deepEqual( Stem("intarlate"), "intarl" );
	deepEqual( Stem("intarlato"), "intarl" );
	deepEqual( Stem("intasate"), "intas" );
	deepEqual( Stem("intasavano"), "intas" );
	deepEqual( Stem("intasca"), "intasc" );
	deepEqual( Stem("intascavano"), "intasc" );
	deepEqual( Stem("intatta"), "intatt" );
	deepEqual( Stem("intatti"), "intatt" );
	deepEqual( Stem("integrale"), "integral" );
	deepEqual( Stem("integralismo"), "integral" );
	deepEqual( Stem("integralisti"), "integral" );
	deepEqual( Stem("integralmete"), "integralm" );
	deepEqual( Stem("integrante"), "integr" );
	deepEqual( Stem("integrare"), "integr" );
	deepEqual( Stem("integrata"), "integr" );
	deepEqual( Stem("integrate"), "integr" );
	deepEqual( Stem("integrative"), "integr" );
	deepEqual( Stem("integrativi"), "integr" );
	deepEqual( Stem("integrazione"), "integr" );
	deepEqual( Stem("intel"), "intel" );
	deepEqual( Stem("intelettuali"), "intelettual" );
	deepEqual( Stem("intelletti"), "intellett" );
	deepEqual( Stem("intelletto"), "intellett" );
	deepEqual( Stem("intellettuali"), "intellettual" );
	deepEqual( Stem("intelligence"), "intelligenc" );
	deepEqual( Stem("intelligenza"), "intelligent" );
	deepEqual( Stem("intemperanza"), "intemper" );
	deepEqual( Stem("intemperie"), "intemper" );
	deepEqual( Stem("intempestiva"), "intempest" );
	deepEqual( Stem("intenda"), "intend" );
	deepEqual( Stem("intendano"), "intend" );
	deepEqual( Stem("intende"), "intend" );
	deepEqual( Stem("intendendo"), "intend" );
	deepEqual( Stem("intender"), "intender" );
	deepEqual( Stem("intenderà"), "intend" );
	deepEqual( Stem("intenderanno"), "intend" );
	deepEqual( Stem("intenderci"), "intend" );
	deepEqual( Stem("intendere"), "intend" );
	deepEqual( Stem("intenderebbe"), "intend" );
	deepEqual( Stem("intenderle"), "intend" );
	deepEqual( Stem("intenderli"), "intend" );
	deepEqual( Stem("intendermi"), "intend" );
	deepEqual( Stem("intendersi"), "intend" );
	deepEqual( Stem("intendesse"), "intendess" );
	deepEqual( Stem("intendeste"), "intendest" );
	deepEqual( Stem("intendete"), "intend" );
	deepEqual( Stem("intendetela"), "intendetel" );
	deepEqual( Stem("intendeva"), "intend" );
	deepEqual( Stem("intendevano"), "intend" );
	deepEqual( Stem("intendi"), "intend" );
	deepEqual( Stem("intendiamo"), "intend" );
	deepEqual( Stem("intendiamoci"), "intendiamoc" );
	deepEqual( Stem("intendimento"), "intend" );
	deepEqual( Stem("intendo"), "intend" );
	deepEqual( Stem("intendon"), "intendon" );
	deepEqual( Stem("intendono"), "intend" );
	deepEqual( Stem("intenerire"), "intener" );
	deepEqual( Stem("intenerita"), "intener" );
	deepEqual( Stem("intenerito"), "intener" );
	deepEqual( Stem("intensa"), "intens" );
	deepEqual( Stem("intensamente"), "intens" );
	deepEqual( Stem("intensi"), "intens" );
	deepEqual( Stem("intensificano"), "intensific" );
	deepEqual( Stem("intensificarsi"), "intensific" );
	deepEqual( Stem("intensificazione"), "intensif" );
	deepEqual( Stem("intensità"), "intens" );
	deepEqual( Stem("intenso"), "intens" );
	deepEqual( Stem("intenta"), "intent" );
	deepEqual( Stem("intento"), "intent" );
	deepEqual( Stem("intenzion"), "intenzion" );
	deepEqual( Stem("intenzionati"), "intenzion" );
	deepEqual( Stem("intenzionato"), "intenzion" );
	deepEqual( Stem("intenzione"), "intenzion" );
	deepEqual( Stem("intenzioni"), "intenzion" );
	deepEqual( Stem("intepretata"), "intepret" );
	deepEqual( Stem("inter"), "inter" );
	deepEqual( Stem("intera"), "inter" );
	deepEqual( Stem("interamente"), "inter" );
	deepEqual( Stem("interamericana"), "interamerican" );
	deepEqual( Stem("interaziendale"), "interaziendal" );
	deepEqual( Stem("interb"), "interb" );
	deepEqual( Stem("interbanca"), "interbanc" );
	deepEqual( Stem("interbancaria"), "interbancar" );
	deepEqual( Stem("intercedeva"), "interced" );
	deepEqual( Stem("intercession"), "intercession" );
	deepEqual( Stem("intercessione"), "intercession" );
	deepEqual( Stem("intercettazione"), "intercett" );
	deepEqual( Stem("intercettazioni"), "intercett" );
	deepEqual( Stem("intercolunni"), "intercolunn" );
	deepEqual( Stem("intercomunali"), "intercomunal" );
	deepEqual( Stem("intercomuncali"), "intercomuncal" );
	deepEqual( Stem("interconnessa"), "interconness" );
	deepEqual( Stem("interconnesse"), "interconness" );
	deepEqual( Stem("interdire"), "interd" );
	deepEqual( Stem("intere"), "inter" );
	deepEqual( Stem("interessa"), "interess" );
	deepEqual( Stem("interessando"), "interess" );
	deepEqual( Stem("interessano"), "interess" );
	deepEqual( Stem("interessante"), "interess" );
	deepEqual( Stem("interessanti"), "interess" );
	deepEqual( Stem("interessasse"), "interess" );
	deepEqual( Stem("interessata"), "interess" );
	deepEqual( Stem("interessate"), "interess" );
	deepEqual( Stem("interessati"), "interess" );
	deepEqual( Stem("interessatissimo"), "interessatissim" );
	deepEqual( Stem("interessato"), "interess" );
	deepEqual( Stem("interessava"), "interess" );
	deepEqual( Stem("interesse"), "interess" );
	deepEqual( Stem("interesserà"), "interess" );
	deepEqual( Stem("interessi"), "interess" );
	deepEqual( Stem("interfax"), "interfax" );
	deepEqual( Stem("interferire"), "interfer" );
	deepEqual( Stem("intergovernativa"), "intergovern" );
	deepEqual( Stem("interi"), "inter" );
	deepEqual( Stem("interiezione"), "interiezion" );
	deepEqual( Stem("interinale"), "interinal" );
	deepEqual( Stem("interiore"), "interior" );
	deepEqual( Stem("interista"), "inter" );
	deepEqual( Stem("interisti"), "inter" );
	deepEqual( Stem("interlocutore"), "interlocutor" );
	deepEqual( Stem("interlocutori"), "interlocutor" );
	deepEqual( Stem("interlocutoria"), "interlocutor" );
	deepEqual( Stem("interlocuzione"), "interlocu" );
	deepEqual( Stem("intermedi"), "intermed" );
	deepEqual( Stem("intermediari"), "intermediar" );
	deepEqual( Stem("intermediario"), "intermediar" );
	deepEqual( Stem("intermezi"), "intermez" );
	deepEqual( Stem("interminate"), "intermin" );
	deepEqual( Stem("intermissione"), "intermission" );
	deepEqual( Stem("intermittenti"), "intermittent" );
	deepEqual( Stem("intermobiliare"), "intermobil" );
	deepEqual( Stem("intermoney"), "intermoney" );
	deepEqual( Stem("intern"), "intern" );
	deepEqual( Stem("interna"), "intern" );
	deepEqual( Stem("internandosi"), "intern" );
	deepEqual( Stem("internarsi"), "intern" );
	deepEqual( Stem("internatì"), "internat" );
	deepEqual( Stem("internato"), "intern" );
	deepEqual( Stem("internaz"), "internaz" );
	deepEqual( Stem("internazion"), "internazion" );
	deepEqual( Stem("internazionale"), "internazional" );
	deepEqual( Stem("internazionalè"), "internazional" );
	deepEqual( Stem("internazionali"), "internazional" );
	deepEqual( Stem("internazionalismo"), "internazional" );
	deepEqual( Stem("interne"), "intern" );
	deepEqual( Stem("internet"), "internet" );
	deepEqual( Stem("interni"), "intern" );
	deepEqual( Stem("interno"), "intern" );
	deepEqual( Stem("intero"), "inter" );
	deepEqual( Stem("interotto"), "interott" );
	deepEqual( Stem("interpella"), "interpell" );
	deepEqual( Stem("interpellata"), "interpell" );
	deepEqual( Stem("interpellati"), "interpell" );
	deepEqual( Stem("interpellato"), "interpell" );
	deepEqual( Stem("interplanetari"), "interplanetar" );
	deepEqual( Stem("interpreta"), "interpret" );
	deepEqual( Stem("interpretando"), "interpret" );
	deepEqual( Stem("interpretano"), "interpret" );
	deepEqual( Stem("interpretar"), "interpret" );
	deepEqual( Stem("interpretare"), "interpret" );
	deepEqual( Stem("interpretate"), "interpret" );
	deepEqual( Stem("interpretati"), "interpret" );
	deepEqual( Stem("interpretativi"), "interpret" );
	deepEqual( Stem("interpretato"), "interpret" );
	deepEqual( Stem("interpretazione"), "interpret" );
	deepEqual( Stem("interpretazioni"), "interpret" );
	deepEqual( Stem("interprete"), "interpr" );
	deepEqual( Stem("interpreterà"), "interpret" );
	deepEqual( Stem("interpreti"), "interpret" );
	deepEqual( Stem("interroga"), "interrog" );
	deepEqual( Stem("interrogando"), "interrog" );
	deepEqual( Stem("interrogante"), "interrog" );
	deepEqual( Stem("interrogare"), "interrog" );
	deepEqual( Stem("interrogarla"), "interrog" );
	deepEqual( Stem("interrogarsi"), "interrog" );
	deepEqual( Stem("interrogata"), "interrog" );
	deepEqual( Stem("interrogate"), "interrog" );
	deepEqual( Stem("interrogati"), "interrog" );
	deepEqual( Stem("interrogativi"), "interrog" );
	deepEqual( Stem("interrogativo"), "interrog" );
	deepEqual( Stem("interrogato"), "interrog" );
	deepEqual( Stem("interrogatore"), "interrog" );
	deepEqual( Stem("interrogatori"), "interrog" );
	deepEqual( Stem("interrogatòri"), "interrogatòr" );
	deepEqual( Stem("interrogatorio"), "interrogator" );
	deepEqual( Stem("interrogava"), "interrog" );
	deepEqual( Stem("interrogavano"), "interrog" );
	deepEqual( Stem("interrogazione"), "interrog" );
	deepEqual( Stem("interrogazioni"), "interrog" );
	deepEqual( Stem("interrogò"), "interrog" );
	deepEqual( Stem("interrompendo"), "interromp" );
	deepEqual( Stem("interrompendolo"), "interromp" );
	deepEqual( Stem("interrompere"), "interromp" );
	deepEqual( Stem("interrompeva"), "interromp" );
	deepEqual( Stem("interrotta"), "interrott" );
	deepEqual( Stem("interrotte"), "interrott" );
	deepEqual( Stem("interrotti"), "interrott" );
	deepEqual( Stem("interrotto"), "interrott" );
	deepEqual( Stem("interruppe"), "interrupp" );
	deepEqual( Stem("interruppero"), "interrupper" );
	deepEqual( Stem("interruzione"), "interru" );
	deepEqual( Stem("interruzioni"), "interru" );
	deepEqual( Stem("interscambio"), "interscamb" );
	deepEqual( Stem("intersind"), "intersind" );
	deepEqual( Stem("intersos"), "intersos" );
	deepEqual( Stem("interssi"), "interss" );
	deepEqual( Stem("interurbani"), "interurban" );
	deepEqual( Stem("intervallare"), "intervall" );
	deepEqual( Stem("intervalli"), "intervall" );
	deepEqual( Stem("intervallo"), "intervall" );
	deepEqual( Stem("intervenendo"), "interven" );
	deepEqual( Stem("intervenga"), "interveng" );
	deepEqual( Stem("intervenire"), "interven" );
	deepEqual( Stem("intervenirvi"), "interven" );
	deepEqual( Stem("interventi"), "intervent" );
	deepEqual( Stem("intervento"), "intervent" );
	deepEqual( Stem("intervenuta"), "interven" );
	deepEqual( Stem("intervenute"), "interven" );
	deepEqual( Stem("intervenuti"), "interven" );
	deepEqual( Stem("intervenuto"), "interven" );
	deepEqual( Stem("interverrà"), "interverr" );
	deepEqual( Stem("interverranno"), "interverrann" );
	deepEqual( Stem("interviene"), "intervien" );
	deepEqual( Stem("intervista"), "interv" );
	deepEqual( Stem("intervistando"), "intervist" );
	deepEqual( Stem("intervistarlo"), "intervist" );
	deepEqual( Stem("intervistati"), "intervist" );
	deepEqual( Stem("intervistato"), "intervist" );
	deepEqual( Stem("interviste"), "interv" );
	deepEqual( Stem("intesa"), "intes" );
	deepEqual( Stem("intese"), "intes" );
	deepEqual( Stem("inteso"), "intes" );
	deepEqual( Stem("intestata"), "intest" );
	deepEqual( Stem("intestato"), "intest" );
	deepEqual( Stem("intima"), "intim" );
	deepEqual( Stem("intimar"), "intim" );
	deepEqual( Stem("intimargli"), "intim" );
	deepEqual( Stem("intimarono"), "intim" );
	deepEqual( Stem("intimarvi"), "intim" );
	deepEqual( Stem("intimate"), "intim" );
	deepEqual( Stem("intimato"), "intim" );
	deepEqual( Stem("intimatogli"), "intimatogl" );
	deepEqual( Stem("intimava"), "intim" );
	deepEqual( Stem("intimavan"), "intimavan" );
	deepEqual( Stem("intimazione"), "intim" );
	deepEqual( Stem("intimazioni"), "intim" );
	deepEqual( Stem("intimi"), "intim" );
	deepEqual( Stem("intimità"), "intim" );
	deepEqual( Stem("intimo"), "intim" );
	deepEqual( Stem("intimò"), "intim" );
	deepEqual( Stem("intirizzir"), "intirizz" );
	deepEqual( Stem("intirizzito"), "intirizz" );
	deepEqual( Stem("intitolato"), "intitol" );
	deepEqual( Stem("intollerabile"), "intoller" );
	deepEqual( Stem("intollerabili"), "intoller" );
	deepEqual( Stem("intolleranza"), "intoller" );
	deepEqual( Stem("intonacati"), "intonac" );
	deepEqual( Stem("intonar"), "inton" );
	deepEqual( Stem("intonare"), "inton" );
	deepEqual( Stem("intonato"), "inton" );
	deepEqual( Stem("intonazione"), "inton" );
	deepEqual( Stem("intonò"), "inton" );
	deepEqual( Stem("intoppi"), "intopp" );
	deepEqual( Stem("intoppo"), "intopp" );
	deepEqual( Stem("intorbidando"), "intorbid" );
	deepEqual( Stem("intorbidarla"), "intorbid" );
	deepEqual( Stem("intorbidarsi"), "intorbid" );
	deepEqual( Stem("intormentite"), "intorment" );
	deepEqual( Stem("intorno"), "intorn" );
	deepEqual( Stem("intossicazione"), "intoss" );
	deepEqual( Stem("intra"), "intra" );
	deepEqual( Stem("intralciano"), "intralc" );
	deepEqual( Stem("intralciarono"), "intralc" );
	deepEqual( Stem("intralciata"), "intralc" );
	deepEqual( Stem("intralciate"), "intralc" );
	deepEqual( Stem("intralciati"), "intralc" );
	deepEqual( Stem("intralciato"), "intralc" );
	deepEqual( Stem("intransigente"), "intransigent" );
	deepEqual( Stem("intransigenti"), "intransigent" );
	deepEqual( Stem("intraprendenti"), "intraprendent" );
	deepEqual( Stem("intraprendenza"), "intraprendent" );
	deepEqual( Stem("intraprender"), "intraprender" );
	deepEqual( Stem("intraprendere"), "intraprend" );
	deepEqual( Stem("intrapresa"), "intrapres" );
	deepEqual( Stem("intraprese"), "intrapres" );
	deepEqual( Stem("intrapreso"), "intrapres" );
	deepEqual( Stem("intrattabili"), "intratt" );
	deepEqual( Stem("intrattenersi"), "intratten" );
	deepEqual( Stem("intrattenuta"), "intratten" );
	deepEqual( Stem("intrattenuto"), "intratten" );
	deepEqual( Stem("intrecciate"), "intrecc" );
	deepEqual( Stem("intrecciati"), "intrecc" );
	deepEqual( Stem("intreccio"), "intrecc" );
	deepEqual( Stem("intreodurre"), "intreodurr" );
	deepEqual( Stem("intrepidezza"), "intrepidezz" );
	deepEqual( Stem("intrepidi"), "intrepid" );
	deepEqual( Stem("intrepido"), "intrepid" );
	deepEqual( Stem("intridere"), "intrid" );
	deepEqual( Stem("intriga"), "intrig" );
	deepEqual( Stem("intrigando"), "intrig" );
	deepEqual( Stem("intrigato"), "intrig" );
	deepEqual( Stem("intrighi"), "intrig" );
	deepEqual( Stem("intrigo"), "intrig" );
	deepEqual( Stem("intrinsichezza"), "intrinsichezz" );
	deepEqual( Stem("intrise"), "intris" );
	deepEqual( Stem("intro"), "intro" );
	deepEqual( Stem("introbbio"), "introbb" );
	deepEqual( Stem("introdotta"), "introdott" );
	deepEqual( Stem("introdotte"), "introdott" );
	deepEqual( Stem("introdotti"), "introdott" );
	deepEqual( Stem("introdotto"), "introdott" );
	deepEqual( Stem("introduca"), "introduc" );
	deepEqual( Stem("introduce"), "introduc" );
	deepEqual( Stem("introducendo"), "introduc" );
	deepEqual( Stem("introducendone"), "introduc" );
	deepEqual( Stem("introduceva"), "introduc" );
	deepEqual( Stem("introducevano"), "introduc" );
	deepEqual( Stem("introdurle"), "introdurl" );
	deepEqual( Stem("introdurlo"), "introdurl" );
	deepEqual( Stem("introdurre"), "introdurr" );
	deepEqual( Stem("introdursi"), "introdurs" );
	deepEqual( Stem("introdurvi"), "introdurv" );
	deepEqual( Stem("introdusse"), "introduss" );
	deepEqual( Stem("introduttiva"), "introdutt" );
	deepEqual( Stem("introduzione"), "introdu" );
	deepEqual( Stem("intromesso"), "intromess" );
	deepEqual( Stem("intromette"), "intromett" );
	deepEqual( Stem("intromettermi"), "intromett" );
	deepEqual( Stem("intromettersi"), "intromett" );
	deepEqual( Stem("intrometteva"), "intromett" );
	deepEqual( Stem("intuisce"), "intu" );
	deepEqual( Stem("intuito"), "intu" );
	deepEqual( Stem("inuguale"), "inugual" );
	deepEqual( Stem("inuguali"), "inugual" );
	deepEqual( Stem("inumiditi"), "inumid" );
	deepEqual( Stem("inusuale"), "inusual" );
	deepEqual( Stem("inutile"), "inutil" );
	deepEqual( Stem("inutili"), "inutil" );
	deepEqual( Stem("inutilmente"), "inutil" );
	deepEqual( Stem("invadere"), "invad" );
	deepEqual( Stem("invadeva"), "invad" );
	deepEqual( Stem("invaghito"), "invag" );
	deepEqual( Stem("invalicabile"), "invalic" );
	deepEqual( Stem("invalida"), "invalid" );
	deepEqual( Stem("invalidità"), "invalid" );
	deepEqual( Stem("invanisce"), "invan" );
	deepEqual( Stem("invano"), "invan" );
	deepEqual( Stem("invariate"), "invar" );
	deepEqual( Stem("invariati"), "invar" );
	deepEqual( Stem("invariato"), "invar" );
	deepEqual( Stem("invase"), "invas" );
	deepEqual( Stem("invasero"), "invaser" );
	deepEqual( Stem("invasi"), "invas" );
	deepEqual( Stem("invasion"), "invasion" );
	deepEqual( Stem("invasione"), "invasion" );
	deepEqual( Stem("invaso"), "invas" );
	deepEqual( Stem("invasore"), "invasor" );
	deepEqual( Stem("invasori"), "invasor" );
	deepEqual( Stem("invecchiare"), "invecc" );
	deepEqual( Stem("invecchiati"), "invecc" );
	deepEqual( Stem("invecchiato"), "invecc" );
	deepEqual( Stem("invece"), "invec" );
	deepEqual( Stem("inveire"), "inve" );
	deepEqual( Stem("inveisce"), "inve" );
	deepEqual( Stem("inveito"), "inve" );
	deepEqual( Stem("invelenita"), "invelen" );
	deepEqual( Stem("inventano"), "invent" );
	deepEqual( Stem("inventare"), "invent" );
	deepEqual( Stem("inventarsi"), "invent" );
	deepEqual( Stem("inventata"), "invent" );
	deepEqual( Stem("inventate"), "invent" );
	deepEqual( Stem("inventi"), "invent" );
	deepEqual( Stem("inventus"), "inventus" );
	deepEqual( Stem("invenzione"), "invenzion" );
	deepEqual( Stem("invenzioni"), "invenzion" );
	deepEqual( Stem("inverigo"), "inverig" );
	deepEqual( Stem("invernale"), "invernal" );
	deepEqual( Stem("invernali"), "invernal" );
	deepEqual( Stem("inverni"), "invern" );
	deepEqual( Stem("invernizzi"), "invernizz" );
	deepEqual( Stem("inverno"), "invern" );
	deepEqual( Stem("inversione"), "inversion" );
	deepEqual( Stem("inverta"), "invert" );
	deepEqual( Stem("invertite"), "invert" );
	deepEqual( Stem("investa"), "invest" );
	deepEqual( Stem("investe"), "invest" );
	deepEqual( Stem("investendo"), "invest" );
	deepEqual( Stem("investigativa"), "investig" );
	deepEqual( Stem("investigative"), "investig" );
	deepEqual( Stem("investigatori"), "investig" );
	deepEqual( Stem("investigazione"), "investig" );
	deepEqual( Stem("investigazioni"), "investig" );
	deepEqual( Stem("investimenti"), "invest" );
	deepEqual( Stem("investimento"), "invest" );
	deepEqual( Stem("investimese"), "investimes" );
	deepEqual( Stem("investire"), "invest" );
	deepEqual( Stem("investisse"), "investiss" );
	deepEqual( Stem("investiti"), "invest" );
	deepEqual( Stem("investito"), "invest" );
	deepEqual( Stem("investitori"), "investitor" );
	deepEqual( Stem("investitura"), "investitur" );
	deepEqual( Stem("investiva"), "invest" );
	deepEqual( Stem("investment"), "investment" );
	deepEqual( Stem("inveterate"), "inveter" );
	deepEqual( Stem("inveterato"), "inveter" );
	deepEqual( Stem("invettiva"), "invett" );
	deepEqual( Stem("invevitabile"), "invevit" );
	deepEqual( Stem("invia"), "invi" );
	deepEqual( Stem("inviando"), "invi" );
	deepEqual( Stem("inviare"), "invi" );
	deepEqual( Stem("inviata"), "invi" );
	deepEqual( Stem("inviatagli"), "inviatagl" );
	deepEqual( Stem("inviate"), "invi" );
	deepEqual( Stem("inviati"), "invi" );
	deepEqual( Stem("inviatì"), "inviat" );
	deepEqual( Stem("inviato"), "invi" );
	deepEqual( Stem("invicta"), "invict" );
	deepEqual( Stem("invidia"), "invid" );
	deepEqual( Stem("invidiabile"), "invid" );
	deepEqual( Stem("invidiabili"), "invid" );
	deepEqual( Stem("invidiando"), "invid" );
	deepEqual( Stem("invidiandole"), "invid" );
	deepEqual( Stem("invidiata"), "invid" );
	deepEqual( Stem("invidiava"), "invid" );
	deepEqual( Stem("invidie"), "invid" );
	deepEqual( Stem("invidioso"), "invid" );
	deepEqual( Stem("invigilare"), "invigil" );
	deepEqual( Stem("invigilavano"), "invigil" );
	deepEqual( Stem("invii"), "invi" );
	deepEqual( Stem("invincibilmente"), "invincibil" );
	deepEqual( Stem("invio"), "invi" );
	deepEqual( Stem("inviolabile"), "inviol" );
	deepEqual( Stem("inviolato"), "inviol" );
	deepEqual( Stem("invischiato"), "invisc" );
	deepEqual( Stem("invisibile"), "invis" );
	deepEqual( Stem("invisibilè"), "invisibil" );
	deepEqual( Stem("invisibili"), "invis" );
	deepEqual( Stem("invita"), "invit" );
	deepEqual( Stem("invitando"), "invit" );
	deepEqual( Stem("invitante"), "invit" );
	deepEqual( Stem("invitare"), "invit" );
	deepEqual( Stem("invitarla"), "invit" );
	deepEqual( Stem("invitarlo"), "invit" );
	deepEqual( Stem("invitarono"), "invit" );
	deepEqual( Stem("invitata"), "invit" );
	deepEqual( Stem("invitati"), "invit" );
	deepEqual( Stem("invitato"), "invit" );
	deepEqual( Stem("invitava"), "invit" );
	deepEqual( Stem("inviti"), "invit" );
	deepEqual( Stem("invito"), "invit" );
	deepEqual( Stem("invitò"), "invit" );
	deepEqual( Stem("invitta"), "invitt" );
	deepEqual( Stem("invoca"), "invoc" );
	deepEqual( Stem("invocano"), "invoc" );
	deepEqual( Stem("invocar"), "invoc" );
	deepEqual( Stem("invocare"), "invoc" );
	deepEqual( Stem("invocato"), "invoc" );
	deepEqual( Stem("invocazione"), "invoc" );
	deepEqual( Stem("invochiamo"), "invoc" );
	deepEqual( Stem("invogliati"), "invogl" );
	deepEqual( Stem("invogliava"), "invogl" );
	deepEqual( Stem("involandosi"), "invol" );
	deepEqual( Stem("involontaria"), "involontar" );
	deepEqual( Stem("involontariamente"), "involontar" );
	deepEqual( Stem("involta"), "involt" );
	deepEqual( Stem("involtati"), "involt" );
	deepEqual( Stem("involtato"), "involt" );
	deepEqual( Stem("involte"), "involt" );
	deepEqual( Stem("involtino"), "involtin" );
	deepEqual( Stem("involto"), "involt" );
	deepEqual( Stem("involuzione"), "involu" );
	deepEqual( Stem("inxs"), "inxs" );
	deepEqual( Stem("inzaccherassero"), "inzaccher" );
	deepEqual( Stem("inzaghi"), "inzag" );
	deepEqual( Stem("inziativa"), "inziat" );
	deepEqual( Stem("inziative"), "inziat" );
	deepEqual( Stem("inzio"), "inzi" );
	deepEqual( Stem("inzuppata"), "inzupp" );
	deepEqual( Stem("inzuppate"), "inzupp" );
	deepEqual( Stem("inzuppato"), "inzupp" );
	deepEqual( Stem("io"), "io" );
	deepEqual( Stem("ioniche"), "ionic" );
	deepEqual( Stem("ionici"), "ionic" );
	deepEqual( Stem("ionio"), "ion" );
	deepEqual( Stem("ionta"), "iont" );
	deepEqual( Stem("iosa"), "ios" );
	deepEqual( Stem("iourt"), "iourt" );
	deepEqual( Stem("iper"), "iper" );
	deepEqual( Stem("ipertrofia"), "ipertrof" );
	deepEqual( Stem("ipi"), "ipi" );
	deepEqual( Stem("ipnotico"), "ipnot" );
	deepEqual( Stem("ipocrisia"), "ipocris" );
	deepEqual( Stem("ipocrita"), "ipocr" );
	deepEqual( Stem("ipocrite"), "ipocr" );
	deepEqual( Stem("ipofisi"), "ipofis" );
	deepEqual( Stem("ipotesi"), "ipotes" );
	deepEqual( Stem("ipotizza"), "ipotizz" );
	deepEqual( Stem("ipotizzare"), "ipotizz" );
	deepEqual( Stem("ipotizzato"), "ipotizz" );
	deepEqual( Stem("ipotizzava"), "ipotizz" );
	deepEqual( Stem("ippiche"), "ippic" );
	deepEqual( Stem("ipsa"), "ipsa" );
	deepEqual( Stem("ipsilon"), "ipsilon" );
	deepEqual( Stem("ir"), "ir" );
	deepEqual( Stem("ira"), "ira" );
	deepEqual( Stem("irachena"), "irachen" );
	deepEqual( Stem("iracheno"), "irachen" );
	deepEqual( Stem("iraconda"), "iracond" );
	deepEqual( Stem("iracondo"), "iracond" );
	deepEqual( Stem("iran"), "iran" );
	deepEqual( Stem("iraniana"), "iranian" );
	deepEqual( Stem("iraniano"), "iran" );
	deepEqual( Stem("iraq"), "iraq" );
	deepEqual( Stem("ire"), "ire" );
	deepEqual( Stem("irene"), "iren" );
	deepEqual( Stem("irfis"), "irfis" );
	deepEqual( Stem("iri"), "iri" );
	deepEqual( Stem("irina"), "irin" );
	deepEqual( Stem("irlanda"), "irland" );
	deepEqual( Stem("irlandese"), "irlandes" );
	deepEqual( Stem("irna"), "irna" );
	deepEqual( Stem("irnà"), "irnà" );
	deepEqual( Stem("ironia"), "iron" );
	deepEqual( Stem("ironicamente"), "iron" );
	deepEqual( Stem("ironico"), "iron" );
	deepEqual( Stem("irpef"), "irpef" );
	deepEqual( Stem("irpeg"), "irpeg" );
	deepEqual( Stem("irpino"), "irpin" );
	deepEqual( Stem("irragionevole"), "irragionevol" );
	deepEqual( Stem("irrazionali"), "irrazional" );
	deepEqual( Stem("irrefragabile"), "irrefrag" );
	deepEqual( Stem("irregolare"), "irregol" );
	deepEqual( Stem("irregolari"), "irregolar" );
	deepEqual( Stem("irregolarità"), "irregolar" );
	deepEqual( Stem("irremovibile"), "irremov" );
	deepEqual( Stem("irreparabile"), "irrepar" );
	deepEqual( Stem("irreprensibile"), "irreprens" );
	deepEqual( Stem("irresistibile"), "irresist" );
	deepEqual( Stem("irresolutezza"), "irresolutezz" );
	deepEqual( Stem("irresoluto"), "irresol" );
	deepEqual( Stem("irresoluzione"), "irresolu" );
	deepEqual( Stem("irrespirabili"), "irrespir" );
	deepEqual( Stem("irresponsabile"), "irrespons" );
	deepEqual( Stem("irresponsabili"), "irrespons" );
	deepEqual( Stem("irresponsabilità"), "irrespons" );
	deepEqual( Stem("irreversibile"), "irrevers" );
	deepEqual( Stem("irreversibilmente"), "irreversibil" );
	deepEqual( Stem("irrevocabile"), "irrevoc" );
	deepEqual( Stem("irrevocabilmente"), "irrevocabil" );
	deepEqual( Stem("irriducibili"), "irriduc" );
	deepEqual( Stem("irrigate"), "irrig" );
	deepEqual( Stem("irrilevante"), "irrilev" );
	deepEqual( Stem("irrisa"), "irris" );
	deepEqual( Stem("irrisolti"), "irrisolt" );
	deepEqual( Stem("irritante"), "irrit" );
	deepEqual( Stem("irritarsi"), "irrit" );
	deepEqual( Stem("irritata"), "irrit" );
	deepEqual( Stem("irritati"), "irrit" );
	deepEqual( Stem("irritato"), "irrit" );
	deepEqual( Stem("irrituale"), "irritual" );
	deepEqual( Stem("irritualità"), "irritual" );
	deepEqual( Stem("irrogate"), "irrog" );
	deepEqual( Stem("irruenza"), "irruenz" );
	deepEqual( Stem("irruzione"), "irruzion" );
	deepEqual( Stem("irsute"), "irsut" );
	deepEqual( Stem("irti"), "irti" );
	deepEqual( Stem("isabel"), "isabel" );
	deepEqual( Stem("isaia"), "isai" );
	deepEqual( Stem("isalmici"), "isalm" );
	deepEqual( Stem("isbaglio"), "isbagl" );
	deepEqual( Stem("isbieco"), "isbiec" );
	deepEqual( Stem("isbrigarsi"), "isbrig" );
	deepEqual( Stem("iscacci"), "iscacc" );
	deepEqual( Stem("iscacciar"), "iscacc" );
	deepEqual( Stem("iscandolo"), "iscandol" );
	deepEqual( Stem("iscansar"), "iscans" );
	deepEqual( Stem("iscansare"), "iscans" );
	deepEqual( Stem("iscansarli"), "iscans" );
	deepEqual( Stem("iscapitarci"), "iscapit" );
	deepEqual( Stem("iscapolarsene"), "iscapol" );
	deepEqual( Stem("iscappasse"), "iscapp" );
	deepEqual( Stem("iscapperà"), "iscapp" );
	deepEqual( Stem("isceglier"), "isceglier" );
	deepEqual( Stem("ischerno"), "ischern" );
	deepEqual( Stem("ischerzo"), "ischerz" );
	deepEqual( Stem("ischia"), "ischi" );
	deepEqual( Stem("ischiamazzi"), "ischiamazz" );
	deepEqual( Stem("ischiera"), "ischier" );
	deepEqual( Stem("ischiuma"), "ischium" );
	deepEqual( Stem("isconficcarla"), "isconficc" );
	deepEqual( Stem("iscontare"), "iscont" );
	deepEqual( Stem("isconto"), "iscont" );
	deepEqual( Stem("iscoprire"), "iscopr" );
	deepEqual( Stem("iscoprite"), "iscopr" );
	deepEqual( Stem("iscorgendo"), "iscorg" );
	deepEqual( Stem("iscritta"), "iscritt" );
	deepEqual( Stem("iscritte"), "iscritt" );
	deepEqual( Stem("iscritti"), "iscritt" );
	deepEqual( Stem("iscritto"), "iscritt" );
	deepEqual( Stem("iscrivendo"), "iscriv" );
	deepEqual( Stem("iscriver"), "iscriver" );
	deepEqual( Stem("iscriversi"), "iscriv" );
	deepEqual( Stem("iscrizioni"), "iscrizion" );
	deepEqual( Stem("iscusa"), "iscus" );
	deepEqual( Stem("ise"), "ise" );
	deepEqual( Stem("isefi"), "isef" );
	deepEqual( Stem("isfogarsi"), "isfog" );
	deepEqual( Stem("isfoggiar"), "isfogg" );
	deepEqual( Stem("isgarbatezze"), "isgarbatezz" );
	deepEqual( Stem("isgravarsi"), "isgrav" );
	deepEqual( Stem("isguardi"), "isguard" );
	deepEqual( Stem("isguardo"), "isguard" );
	deepEqual( Stem("isgusciar"), "isgusc" );
	deepEqual( Stem("isla"), "isla" );
	deepEqual( Stem("islam"), "islam" );
	deepEqual( Stem("islamabad"), "islamabad" );
	deepEqual( Stem("islami"), "islam" );
	deepEqual( Stem("islamica"), "islam" );
	deepEqual( Stem("islamicà"), "islamic" );
	deepEqual( Stem("islamici"), "islam" );
	deepEqual( Stem("islamico"), "islam" );
	deepEqual( Stem("islamiya"), "islamiy" );
	deepEqual( Stem("islanciarsi"), "islanc" );
	deepEqual( Stem("island"), "island" );
	deepEqual( Stem("ismanie"), "isman" );
	deepEqual( Stem("ismarrita"), "ismarr" );
	deepEqual( Stem("ismettere"), "ismett" );
	deepEqual( Stem("ismovere"), "ismov" );
	deepEqual( Stem("isola"), "isol" );
	deepEqual( Stem("isolamento"), "isol" );
	deepEqual( Stem("isolare"), "isol" );
	deepEqual( Stem("isolata"), "isol" );
	deepEqual( Stem("isolato"), "isol" );
	deepEqual( Stem("isole"), "isol" );
	deepEqual( Stem("ispalla"), "ispall" );
	deepEqual( Stem("ispaventi"), "ispavent" );
	deepEqual( Stem("ispavento"), "ispavent" );
	deepEqual( Stem("ispecie"), "ispec" );
	deepEqual( Stem("ispegnerla"), "ispegn" );
	deepEqual( Stem("ispenderli"), "ispend" );
	deepEqual( Stem("ispesare"), "ispes" );
	deepEqual( Stem("ispettorato"), "ispettor" );
	deepEqual( Stem("ispettore"), "ispettor" );
	deepEqual( Stem("ispettori"), "ispettor" );
	deepEqual( Stem("ispezionato"), "ispezion" );
	deepEqual( Stem("ispianate"), "ispian" );
	deepEqual( Stem("ispiar"), "ispi" );
	deepEqual( Stem("ispidi"), "ispid" );
	deepEqual( Stem("ispiegarlo"), "ispieg" );
	deepEqual( Stem("ispinger"), "ispinger" );
	deepEqual( Stem("ispingerla"), "isping" );
	deepEqual( Stem("ispira"), "ispir" );
	deepEqual( Stem("ispirandogli"), "ispir" );
	deepEqual( Stem("ispirandosi"), "ispir" );
	deepEqual( Stem("ispirano"), "ispir" );
	deepEqual( Stem("ispirasse"), "ispir" );
	deepEqual( Stem("ispirata"), "ispir" );
	deepEqual( Stem("ispirato"), "ispir" );
	deepEqual( Stem("ispiratore"), "ispir" );
	deepEqual( Stem("ispiratori"), "ispir" );
	deepEqual( Stem("ispirazione"), "ispir" );
	deepEqual( Stem("ispirazioni"), "ispir" );
	deepEqual( Stem("isporca"), "isporc" );
	deepEqual( Stem("israele"), "israel" );
	deepEqual( Stem("israeliana"), "israelian" );
	deepEqual( Stem("israeliane"), "israelian" );
	deepEqual( Stem("israeliani"), "israelian" );
	deepEqual( Stem("israeliano"), "israel" );
	deepEqual( Stem("ist"), "ist" );
	deepEqual( Stem("istà"), "istà" );
	deepEqual( Stem("istaccarsi"), "istacc" );
	deepEqual( Stem("istai"), "ista" );
	deepEqual( Stem("istallata"), "istall" );
	deepEqual( Stem("istallato"), "istall" );
	deepEqual( Stem("istampa"), "istamp" );
	deepEqual( Stem("istanbul"), "istanbul" );
	deepEqual( Stem("istantanea"), "istantane" );
	deepEqual( Stem("istantaneo"), "istantane" );
	deepEqual( Stem("istante"), "istant" );
	deepEqual( Stem("istanti"), "istant" );
	deepEqual( Stem("istanza"), "istanz" );
	deepEqual( Stem("istanze"), "istanz" );
	deepEqual( Stem("istar"), "istar" );
	deepEqual( Stem("istare"), "istar" );
	deepEqual( Stem("istareste"), "istarest" );
	deepEqual( Stem("istat"), "istat" );
	deepEqual( Stem("istate"), "istat" );
	deepEqual( Stem("istato"), "istat" );
	deepEqual( Stem("istava"), "istav" );
	deepEqual( Stem("isteriliscono"), "isteril" );
	deepEqual( Stem("istessa"), "istess" );
	deepEqual( Stem("istesso"), "istess" );
	deepEqual( Stem("istette"), "istett" );
	deepEqual( Stem("istia"), "isti" );
	deepEqual( Stem("istigatori"), "istig" );
	deepEqual( Stem("istigazione"), "istig" );
	deepEqual( Stem("istile"), "istil" );
	deepEqual( Stem("istillar"), "istill" );
	deepEqual( Stem("istinti"), "istint" );
	deepEqual( Stem("istintiva"), "istint" );
	deepEqual( Stem("istinto"), "istint" );
	deepEqual( Stem("istitituito"), "istititu" );
	deepEqual( Stem("istituiranno"), "istitu" );
	deepEqual( Stem("istituire"), "istitu" );
	deepEqual( Stem("istituisse"), "istituiss" );
	deepEqual( Stem("istituito"), "istitu" );
	deepEqual( Stem("istituti"), "istit" );
	deepEqual( Stem("istituto"), "istit" );
	deepEqual( Stem("istitutori"), "istitutor" );
	deepEqual( Stem("istituzionale"), "istituzional" );
	deepEqual( Stem("istituzionali"), "istituzional" );
	deepEqual( Stem("istituzione"), "istitu" );
	deepEqual( Stem("istituzioni"), "istitu" );
	deepEqual( Stem("istizza"), "istizz" );
	deepEqual( Stem("istoriando"), "istor" );
	deepEqual( Stem("istoriografo"), "istoriograf" );
	deepEqual( Stem("istornar"), "istorn" );
	deepEqual( Stem("istrada"), "istrad" );
	deepEqual( Stem("istradamento"), "istrad" );
	deepEqual( Stem("istrade"), "istrad" );
	deepEqual( Stem("istrane"), "istran" );
	deepEqual( Stem("istrascinarlo"), "istrascin" );
	deepEqual( Stem("istrepito"), "istrep" );
	deepEqual( Stem("istria"), "istri" );
	deepEqual( Stem("istriana"), "istrian" );
	deepEqual( Stem("istrida"), "istrid" );
	deepEqual( Stem("istro"), "istro" );
	deepEqual( Stem("istruirsi"), "istru" );
	deepEqual( Stem("istruita"), "istru" );
	deepEqual( Stem("istruiti"), "istru" );
	deepEqual( Stem("istruiva"), "istru" );
	deepEqual( Stem("istrumento"), "istrument" );
	deepEqual( Stem("istruttore"), "istruttor" );
	deepEqual( Stem("istruttoria"), "istruttor" );
	deepEqual( Stem("istruttorio"), "istruttor" );
	deepEqual( Stem("istruzione"), "istruzion" );
	deepEqual( Stem("istruzioni"), "istruzion" );
	deepEqual( Stem("istudiare"), "istud" );
	deepEqual( Stem("istudiarvi"), "istud" );
	deepEqual( Stem("isvap"), "isvap" );
	deepEqual( Stem("isvegliarsi"), "isvegl" );
	deepEqual( Stem("isventura"), "isventur" );
	deepEqual( Stem("isvim"), "isvim" );
	deepEqual( Stem("it"), "it" );
	deepEqual( Stem("ita"), "ita" );
	deepEqual( Stem("ital"), "ital" );
	deepEqual( Stem("italc"), "italc" );
	deepEqual( Stem("italcem"), "italcem" );
	deepEqual( Stem("italcementi"), "italcement" );
	deepEqual( Stem("italgas"), "italgas" );
	deepEqual( Stem("italia"), "ital" );
	deepEqual( Stem("italiana"), "italian" );
	deepEqual( Stem("italiane"), "italian" );
	deepEqual( Stem("italiani"), "italian" );
	deepEqual( Stem("italiano"), "ital" );
	deepEqual( Stem("italimpianti"), "italimp" );
	deepEqual( Stem("italm"), "italm" );
	deepEqual( Stem("italmob"), "italmob" );
	deepEqual( Stem("italmobil"), "italmobil" );
	deepEqual( Stem("italmobiliare"), "italmobil" );
	deepEqual( Stem("italmoney"), "italmoney" );
	deepEqual( Stem("italo"), "ital" );
	deepEqual( Stem("italy"), "italy" );
	deepEqual( Stem("itar"), "itar" );
	deepEqual( Stem("itat"), "itat" );
	deepEqual( Stem("itc"), "itc" );
	deepEqual( Stem("itdalia"), "itdal" );
	deepEqual( Stem("iter"), "iter" );
	deepEqual( Stem("itinerari"), "itinerar" );
	deepEqual( Stem("itinerario"), "itinerar" );
	deepEqual( Stem("itmr"), "itmr" );
	deepEqual( Stem("itn"), "itn" );
	deepEqual( Stem("ito"), "ito" );
	deepEqual( Stem("itoh"), "itoh" );
	deepEqual( Stem("ittica"), "ittic" );
	deepEqual( Stem("ittiche"), "ittic" );
	deepEqual( Stem("ittici"), "ittic" );
	deepEqual( Stem("itumkalinsk"), "itumkalinsk" );
	deepEqual( Stem("iu"), "iu" );
	deepEqual( Stem("iualiano"), "iual" );
	deepEqual( Stem("iugoslavia"), "iugoslav" );
	deepEqual( Stem("iui"), "iui" );
	deepEqual( Stem("iuri"), "iur" );
	deepEqual( Stem("iurt"), "iurt" );
	deepEqual( Stem("iurtovsk"), "iurtovsk" );
	deepEqual( Stem("iv"), "iv" );
	deepEqual( Stem("iva"), "iva" );
	deepEqual( Stem("ivan"), "ivan" );
	deepEqual( Stem("ivana"), "ivan" );
	deepEqual( Stem("ivano"), "ivan" );
	deepEqual( Stem("ivi"), "ivi" );
	deepEqual( Stem("ivimus"), "ivimus" );
	deepEqual( Stem("ivo"), "ivo" );
	deepEqual( Stem("ivory"), "ivory" );
	deepEqual( Stem("ix"), "ix" );
	deepEqual( Stem("izar"), "izar" );
	deepEqual( Stem("izudin"), "izudin" );
	deepEqual( Stem("j"), "j" );
	deepEqual( Stem("jack"), "jack" );
	deepEqual( Stem("jackson"), "jackson" );
	deepEqual( Stem("jacob"), "jacob" );
	deepEqual( Stem("jacobsen"), "jacobsen" );
	deepEqual( Stem("jacqueline"), "jacquelin" );
	deepEqual( Stem("jahan"), "jahan" );
	deepEqual( Stem("jaime"), "jaim" );
	deepEqual( Stem("jamaa"), "jama" );
	deepEqual( Stem("jamaat"), "jamaat" );
	deepEqual( Stem("james"), "james" );
	deepEqual( Stem("jammin"), "jammin" );
	deepEqual( Stem("jan"), "jan" );
	deepEqual( Stem("janata"), "jan" );
	deepEqual( Stem("janeiro"), "janeir" );
	deepEqual( Stem("janet"), "janet" );
	deepEqual( Stem("janez"), "janez" );
	deepEqual( Stem("janni"), "jann" );
	deepEqual( Stem("janowski"), "janowsk" );
	deepEqual( Stem("jansson"), "jansson" );
	deepEqual( Stem("jaqueline"), "jaquelin" );
	deepEqual( Stem("jarni"), "jarn" );
	deepEqual( Stem("javier"), "javier" );
	deepEqual( Stem("jean"), "jean" );
	deepEqual( Stem("jeanne"), "jeann" );
	deepEqual( Stem("jechna"), "jechn" );
	deepEqual( Stem("jeep"), "jeep" );
	deepEqual( Stem("jeff"), "jeff" );
	deepEqual( Stem("jefferson"), "jefferson" );
	deepEqual( Stem("jeleesa"), "jelees" );
	deepEqual( Stem("jemis"), "jemis" );
	deepEqual( Stem("jennifer"), "jennifer" );
	deepEqual( Stem("jenny"), "jenny" );
	deepEqual( Stem("jens"), "jens" );
	deepEqual( Stem("jerry"), "jerry" );
	deepEqual( Stem("jervolino"), "jervolin" );
	deepEqual( Stem("jessica"), "jessic" );
	deepEqual( Stem("jet"), "jet" );
	deepEqual( Stem("jfk"), "jfk" );
	deepEqual( Stem("ji"), "ji" );
	deepEqual( Stem("jiahua"), "jiahu" );
	deepEqual( Stem("jibril"), "jibril" );
	deepEqual( Stem("jihad"), "jihad" );
	deepEqual( Stem("jijel"), "jijel" );
	deepEqual( Stem("jill"), "jill" );
	deepEqual( Stem("jim"), "jim" );
	deepEqual( Stem("jimenez"), "jimenez" );
	deepEqual( Stem("jimmy"), "jimmy" );
	deepEqual( Stem("joachim"), "joachim" );
	deepEqual( Stem("joaquin"), "joaquin" );
	deepEqual( Stem("jocelyn"), "jocelyn" );
	deepEqual( Stem("joe"), "joe" );
	deepEqual( Stem("johan"), "johan" );
	deepEqual( Stem("johann"), "johann" );
	deepEqual( Stem("johannesburg"), "johannesburg" );
	deepEqual( Stem("john"), "john" );
	deepEqual( Stem("johnson"), "johnson" );
	deepEqual( Stem("joint"), "joint" );
	deepEqual( Stem("jolly"), "jolly" );
	deepEqual( Stem("joly"), "joly" );
	deepEqual( Stem("jon"), "jon" );
	deepEqual( Stem("jonas"), "jonas" );
	deepEqual( Stem("jonathan"), "jonathan" );
	deepEqual( Stem("jones"), "jones" );
	deepEqual( Stem("jonk"), "jonk" );
	deepEqual( Stem("jorge"), "jorg" );
	deepEqual( Stem("jose"), "jos" );
	deepEqual( Stem("josè"), "jos" );
	deepEqual( Stem("josef"), "josef" );
	deepEqual( Stem("joseph"), "joseph" );
	deepEqual( Stem("josephi"), "joseph" );
	deepEqual( Stem("jospin"), "jospin" );
	deepEqual( Stem("jr"), "jr" );
	deepEqual( Stem("juan"), "juan" );
	deepEqual( Stem("jugoslavia"), "jugoslav" );
	deepEqual( Stem("jugovic"), "jugovic" );
	deepEqual( Stem("juha"), "juh" );
	deepEqual( Stem("juicio"), "juic" );
	deepEqual( Stem("julia"), "jul" );
	deepEqual( Stem("julian"), "julian" );
	deepEqual( Stem("julie"), "jul" );
	deepEqual( Stem("julieth"), "julieth" );
	deepEqual( Stem("junior"), "junior" );
	deepEqual( Stem("juniores"), "juniores" );
	deepEqual( Stem("juppè"), "jupp" );
	deepEqual( Stem("jure"), "jur" );
	deepEqual( Stem("juta"), "jut" );
	deepEqual( Stem("juve"), "juv" );
	deepEqual( Stem("juventini"), "juventin" );
	deepEqual( Stem("juventus"), "juventus" );
	deepEqual( Stem("k"), "k" );
	deepEqual( Stem("kabariti"), "kabar" );
	deepEqual( Stem("kabul"), "kabul" );
	deepEqual( Stem("kaddoumi"), "kaddoum" );
	deepEqual( Stem("kaelon"), "kaelon" );
	deepEqual( Stem("kakrabar"), "kakrab" );
	deepEqual( Stem("kalà"), "kal" );
	deepEqual( Stem("kalashikov"), "kalashikov" );
	deepEqual( Stem("kalpakkam"), "kalpakkam" );
	deepEqual( Stem("kambia"), "kamb" );
	deepEqual( Stem("kamikazè"), "kamikaz" );
	deepEqual( Stem("kanchanaburi"), "kanchanabur" );
	deepEqual( Stem("kankkunen"), "kankkunen" );
	deepEqual( Stem("kaos"), "kaos" );
	deepEqual( Stem("karachi"), "karac" );
	deepEqual( Stem("karadzic"), "karadzic" );
	deepEqual( Stem("karaoke"), "karaok" );
	deepEqual( Stem("karel"), "karel" );
	deepEqual( Stem("karim"), "karim" );
	deepEqual( Stem("karlsruhe"), "karlsruh" );
	deepEqual( Stem("karlstad"), "karlstad" );
	deepEqual( Stem("kashmir"), "kashm" );
	deepEqual( Stem("kashoggi"), "kashogg" );
	deepEqual( Stem("kastros"), "kastros" );
	deepEqual( Stem("kawashima"), "kawashim" );
	deepEqual( Stem("kazakhstan"), "kazakhstan" );
	deepEqual( Stem("kelly"), "kelly" );
	deepEqual( Stem("kenderson"), "kenderson" );
	deepEqual( Stem("kenia"), "ken" );
	deepEqual( Stem("keniota"), "keniot" );
	deepEqual( Stem("kennedy"), "kennedy" );
	deepEqual( Stem("kenneth"), "kenneth" );
	deepEqual( Stem("kent"), "kent" );
	deepEqual( Stem("kenya"), "keny" );
	deepEqual( Stem("kenyano"), "keny" );
	deepEqual( Stem("kevin"), "kevin" );
	deepEqual( Stem("kfe"), "kfe" );
	deepEqual( Stem("kgb"), "kgb" );
	deepEqual( Stem("khamenei"), "khamene" );
	deepEqual( Stem("khan"), "khan" );
	deepEqual( Stem("khessibia"), "khessib" );
	deepEqual( Stem("khomeini"), "khomein" );
	deepEqual( Stem("khursheed"), "khursheed" );
	deepEqual( Stem("kieslowski"), "kieslowsk" );
	deepEqual( Stem("kiev"), "kiev" );
	deepEqual( Stem("killer"), "killer" );
	deepEqual( Stem("kilmarnock"), "kilmarnock" );
	deepEqual( Stem("kim"), "kim" );
	deepEqual( Stem("king"), "king" );
	deepEqual( Stem("kinnock"), "kinnock" );
	deepEqual( Stem("kioko"), "kiok" );
	deepEqual( Stem("kipkemboi"), "kipkembo" );
	deepEqual( Stem("kipling"), "kipling" );
	deepEqual( Stem("kiptanui"), "kiptanu" );
	deepEqual( Stem("kirsch"), "kirsc" );
	deepEqual( Stem("kisimaio"), "kisimai" );
	deepEqual( Stem("kiwan"), "kiwan" );
	deepEqual( Stem("kladusa"), "kladus" );
	deepEqual( Stem("klaus"), "klaus" );
	deepEqual( Stem("kluge"), "klug" );
	deepEqual( Stem("km"), "km" );
	deepEqual( Stem("ko"), "ko" );
	deepEqual( Stem("kobe"), "kob" );
	deepEqual( Stem("koeman"), "koeman" );
	deepEqual( Stem("kohl"), "kohl" );
	deepEqual( Stem("kohler"), "kohler" );
	deepEqual( Stem("koijam"), "koijam" );
	deepEqual( Stem("kola"), "kol" );
	deepEqual( Stem("koll"), "koll" );
	deepEqual( Stem("kolyvanov"), "kolyvanov" );
	deepEqual( Stem("kong"), "kong" );
	deepEqual( Stem("konishev"), "konishev" );
	deepEqual( Stem("korda"), "kord" );
	deepEqual( Stem("korzhakov"), "korzhakov" );
	deepEqual( Stem("kosarev"), "kosarev" );
	deepEqual( Stem("kosevo"), "kos" );
	deepEqual( Stem("kotov"), "kotov" );
	deepEqual( Stem("kovac"), "kovac" );
	deepEqual( Stem("kowanko"), "kowank" );
	deepEqual( Stem("kozminski"), "kozminsk" );
	deepEqual( Stem("kraftnat"), "kraftnat" );
	deepEqual( Stem("krajina"), "krajin" );
	deepEqual( Stem("krajna"), "krajn" );
	deepEqual( Stem("krasnov"), "krasnov" );
	deepEqual( Stem("kreek"), "kreek" );
	deepEqual( Stem("kris"), "kris" );
	deepEqual( Stem("krsko"), "krsko" );
	deepEqual( Stem("kruja"), "kruj" );
	deepEqual( Stem("krupa"), "krup" );
	deepEqual( Stem("kruz"), "kruz" );
	deepEqual( Stem("krzystof"), "krzystof" );
	deepEqual( Stem("kuala"), "kual" );
	deepEqual( Stem("kulikov"), "kulikov" );
	deepEqual( Stem("kung"), "kung" );
	deepEqual( Stem("kupra"), "kupr" );
	deepEqual( Stem("kurt"), "kurt" );
	deepEqual( Stem("kuwait"), "kuwait" );
	deepEqual( Stem("kvashnin"), "kvashnin" );
	deepEqual( Stem("kw"), "kw" );
	deepEqual( Stem("kwh"), "kwh" );
	deepEqual( Stem("l"), "l" );
	deepEqual( Stem("la"), "la" );
	deepEqual( Stem("là"), "là" );
	deepEqual( Stem("labbra"), "labbr" );
	deepEqual( Stem("labbro"), "labbr" );
	deepEqual( Stem("laberinto"), "laberint" );
	deepEqual( Stem("labirinti"), "labirint" );
	deepEqual( Stem("laboratorio"), "laborator" );
	deepEqual( Stem("labra"), "labr" );
	deepEqual( Stem("laburista"), "labur" );
	deepEqual( Stem("laburisti"), "labur" );
	deepEqual( Stem("lacandona"), "lacandon" );
	deepEqual( Stem("laccio"), "lacc" );
	deepEqual( Stem("lacerati"), "lacer" );
	deepEqual( Stem("lacerazioni"), "lacer" );
	deepEqual( Stem("lacere"), "lac" );
	deepEqual( Stem("laceri"), "lacer" );
	deepEqual( Stem("laconico"), "lacon" );
	deepEqual( Stem("lacqua"), "lacqu" );
	deepEqual( Stem("lacrimando"), "lacrim" );
	deepEqual( Stem("lacrime"), "lacrim" );
	deepEqual( Stem("lacrimogeni"), "lacrimogen" );
	deepEqual( Stem("lacrimoso"), "lacrim" );
	deepEqual( Stem("ladri"), "ladr" );
	deepEqual( Stem("ladro"), "ladr" );
	deepEqual( Stem("ladrona"), "ladron" );
	deepEqual( Stem("ladrone"), "ladron" );
	deepEqual( Stem("ladroni"), "ladron" );
	deepEqual( Stem("laender"), "laender" );
	deepEqual( Stem("laerzio"), "laerz" );
	deepEqual( Stem("lafert"), "lafert" );
	deepEqual( Stem("lagat"), "lagat" );
	deepEqual( Stem("lagest"), "lagest" );
	deepEqual( Stem("laggiu"), "laggiu" );
	deepEqual( Stem("laggiù"), "laggiù" );
	deepEqual( Stem("lagnandosi"), "lagn" );
	deepEqual( Stem("lagnarsene"), "lagn" );
	deepEqual( Stem("lagnarsi"), "lagn" );
	deepEqual( Stem("lago"), "lag" );
	deepEqual( Stem("lagostena"), "lagosten" );
	deepEqual( Stem("lagrima"), "lagrim" );
	deepEqual( Stem("lagrimoso"), "lagrim" );
	deepEqual( Stem("laicale"), "laical" );
	deepEqual( Stem("laiche"), "laic" );
	deepEqual( Stem("laici"), "laic" );
	deepEqual( Stem("laicità"), "laicit" );
	deepEqual( Stem("laico"), "laic" );
	deepEqual( Stem("laido"), "laid" );
	deepEqual( Stem("lake"), "lak" );
	deepEqual( Stem("lalas"), "lalas" );
	deepEqual( Stem("lama"), "lam" );
	deepEqual( Stem("lamacchi"), "lamacc" );
	deepEqual( Stem("lamana"), "laman" );
	deepEqual( Stem("lamanda"), "lamand" );
	deepEqual( Stem("lambert"), "lambert" );
	deepEqual( Stem("lamberto"), "lambert" );
	deepEqual( Stem("lambiccarsi"), "lambicc" );
	deepEqual( Stem("lambro"), "lambr" );
	deepEqual( Stem("lame"), "lam" );
	deepEqual( Stem("lamentandosi"), "lament" );
	deepEqual( Stem("lamentarci"), "lament" );
	deepEqual( Stem("lamentarsi"), "lament" );
	deepEqual( Stem("lamentassero"), "lament" );
	deepEqual( Stem("lamentato"), "lament" );
	deepEqual( Stem("lamentava"), "lament" );
	deepEqual( Stem("lamentazioni"), "lament" );
	deepEqual( Stem("lamentevole"), "lamentevol" );
	deepEqual( Stem("lamenti"), "lament" );
	deepEqual( Stem("lamento"), "lament" );
	deepEqual( Stem("lamet"), "lamet" );
	deepEqual( Stem("lamezia"), "lamez" );
	deepEqual( Stem("lamia"), "lam" );
	deepEqual( Stem("lamine"), "lamin" );
	deepEqual( Stem("lamorte"), "lamort" );
	deepEqual( Stem("lampada"), "lampad" );
	deepEqual( Stem("lampade"), "lampad" );
	deepEqual( Stem("lampante"), "lampant" );
	deepEqual( Stem("lampanti"), "lampant" );
	deepEqual( Stem("lampeggiar"), "lampegg" );
	deepEqual( Stem("lampeggiare"), "lampegg" );
	deepEqual( Stem("lampi"), "lamp" );
	deepEqual( Stem("lampo"), "lamp" );
	deepEqual( Stem("lampone"), "lampon" );
	deepEqual( Stem("lampugnano"), "lampugn" );
	deepEqual( Stem("lana"), "lan" );
	deepEqual( Stem("lancaster"), "lancaster" );
	deepEqual( Stem("lance"), "lanc" );
	deepEqual( Stem("lancer"), "lancer" );
	deepEqual( Stem("lanci"), "lanc" );
	deepEqual( Stem("lancia"), "lanc" );
	deepEqual( Stem("lanciai"), "lancia" );
	deepEqual( Stem("lanciamo"), "lanc" );
	deepEqual( Stem("lanciando"), "lanc" );
	deepEqual( Stem("lanciano"), "lanc" );
	deepEqual( Stem("lanciare"), "lanc" );
	deepEqual( Stem("lanciarsi"), "lanc" );
	deepEqual( Stem("lanciata"), "lanc" );
	deepEqual( Stem("lanciate"), "lanc" );
	deepEqual( Stem("lanciati"), "lanc" );
	deepEqual( Stem("lanciato"), "lanc" );
	deepEqual( Stem("lanciava"), "lanc" );
	deepEqual( Stem("lancio"), "lanc" );
	deepEqual( Stem("lancuba"), "lancub" );
	deepEqual( Stem("land"), "land" );
	deepEqual( Stem("landing"), "landing" );
	deepEqual( Stem("landshut"), "landshut" );
	deepEqual( Stem("langen"), "langen" );
	deepEqual( Stem("languente"), "languent" );
	deepEqual( Stem("languenti"), "languent" );
	deepEqual( Stem("languida"), "languid" );
	deepEqual( Stem("languidamente"), "languid" );
	deepEqual( Stem("languidezza"), "languidezz" );
	deepEqual( Stem("languire"), "langu" );
	deepEqual( Stem("languiva"), "langu" );
	deepEqual( Stem("languivano"), "langu" );
	deepEqual( Stem("languor"), "languor" );
	deepEqual( Stem("languore"), "languor" );
	deepEqual( Stem("lanna"), "lann" );
	deepEqual( Stem("lanose"), "lanos" );
	deepEqual( Stem("lanterna"), "lantern" );
	deepEqual( Stem("lanternino"), "lanternin" );
	deepEqual( Stem("lanzichenecchi"), "lanzichenecc" );
	deepEqual( Stem("lanzichenecco"), "lanzichenecc" );
	deepEqual( Stem("lapadura"), "lapadur" );
	deepEqual( Stem("lapazio"), "lapaz" );
	deepEqual( Stem("lapide"), "lapid" );
	deepEqual( Stem("lapidum"), "lapidum" );
	deepEqual( Stem("laq"), "laq" );
	deepEqual( Stem("lara"), "lar" );
	deepEqual( Stem("larache"), "larac" );
	deepEqual( Stem("larga"), "larg" );
	deepEqual( Stem("largamente"), "larg" );
	deepEqual( Stem("larghe"), "larg" );
	deepEqual( Stem("larghezza"), "larghezz" );
	deepEqual( Stem("larghi"), "larg" );
	deepEqual( Stem("larghissima"), "larghissim" );
	deepEqual( Stem("largo"), "larg" );
	deepEqual( Stem("lariana"), "larian" );
	deepEqual( Stem("lariani"), "larian" );
	deepEqual( Stem("larim"), "larim" );
	deepEqual( Stem("larnaca"), "larnac" );
	deepEqual( Stem("lars"), "lars" );
	deepEqual( Stem("larva"), "larv" );
	deepEqual( Stem("las"), "las" );
	deepEqual( Stem("lasalandra"), "lasalandr" );
	deepEqual( Stem("lascerà"), "lasc" );
	deepEqual( Stem("lascerai"), "lasc" );
	deepEqual( Stem("lascerebbe"), "lasc" );
	deepEqual( Stem("lasceremo"), "lasc" );
	deepEqual( Stem("lascerete"), "lasc" );
	deepEqual( Stem("lascerò"), "lasc" );
	deepEqual( Stem("lasci"), "lasc" );
	deepEqual( Stem("lascia"), "lasc" );
	deepEqual( Stem("lasciai"), "lascia" );
	deepEqual( Stem("lasciala"), "lascial" );
	deepEqual( Stem("lasciale"), "lascial" );
	deepEqual( Stem("lasciam"), "lasciam" );
	deepEqual( Stem("lasciamo"), "lasc" );
	deepEqual( Stem("lasciamoli"), "lasciamol" );
	deepEqual( Stem("lascian"), "lascian" );
	deepEqual( Stem("lasciando"), "lasc" );
	deepEqual( Stem("lasciandogli"), "lasc" );
	deepEqual( Stem("lasciandola"), "lasc" );
	deepEqual( Stem("lasciandole"), "lasc" );
	deepEqual( Stem("lasciandolo"), "lasc" );
	deepEqual( Stem("lasciandosi"), "lasc" );
	deepEqual( Stem("lasciandovela"), "lasc" );
	deepEqual( Stem("lasciano"), "lasc" );
	deepEqual( Stem("lasciar"), "lasc" );
	deepEqual( Stem("lasciarci"), "lasc" );
	deepEqual( Stem("lasciare"), "lasc" );
	deepEqual( Stem("lasciargli"), "lasc" );
	deepEqual( Stem("lasciarla"), "lasc" );
	deepEqual( Stem("lasciarle"), "lasc" );
	deepEqual( Stem("lasciarli"), "lasc" );
	deepEqual( Stem("lasciarlo"), "lasc" );
	deepEqual( Stem("lasciarmi"), "lasc" );
	deepEqual( Stem("lasciarne"), "lasc" );
	deepEqual( Stem("lasciaron"), "lasciaron" );
	deepEqual( Stem("lasciarono"), "lasc" );
	deepEqual( Stem("lasciarsi"), "lasc" );
	deepEqual( Stem("lasciarvi"), "lasc" );
	deepEqual( Stem("lasciasse"), "lasc" );
	deepEqual( Stem("lasciassero"), "lasc" );
	deepEqual( Stem("lasciassi"), "lasc" );
	deepEqual( Stem("lasciassimo"), "lasc" );
	deepEqual( Stem("lasciata"), "lasc" );
	deepEqual( Stem("lasciate"), "lasc" );
	deepEqual( Stem("lasciatela"), "lasciatel" );
	deepEqual( Stem("lasciateli"), "lasciatel" );
	deepEqual( Stem("lasciatelo"), "lasciatel" );
	deepEqual( Stem("lasciatemi"), "lasciatem" );
	deepEqual( Stem("lasciatevi"), "lasciat" );
	deepEqual( Stem("lasciati"), "lasc" );
	deepEqual( Stem("lasciato"), "lasc" );
	deepEqual( Stem("lasciatolo"), "lasciatol" );
	deepEqual( Stem("lasciatovi"), "lasciatov" );
	deepEqual( Stem("lasciava"), "lasc" );
	deepEqual( Stem("lasciavan"), "lasciavan" );
	deepEqual( Stem("lasciavano"), "lasc" );
	deepEqual( Stem("lascifareame"), "lascifaream" );
	deepEqual( Stem("lascin"), "lascin" );
	deepEqual( Stem("lascino"), "lascin" );
	deepEqual( Stem("lascio"), "lasc" );
	deepEqual( Stem("lasciò"), "lasc" );
	deepEqual( Stem("lasciorno"), "lasciorn" );
	deepEqual( Stem("lascito"), "lasc" );
	deepEqual( Stem("lasorella"), "lasorell" );
	deepEqual( Stem("lassandro"), "lassandr" );
	deepEqual( Stem("lasso"), "lass" );
	deepEqual( Stem("lassu"), "lassu" );
	deepEqual( Stem("lassù"), "lassù" );
	deepEqual( Stem("last"), "last" );
	deepEqual( Stem("lastre"), "lastr" );
	deepEqual( Stem("lastrico"), "lastric" );
	deepEqual( Stem("latente"), "latent" );
	deepEqual( Stem("laterale"), "lateral" );
	deepEqual( Stem("lateralmente"), "lateral" );
	deepEqual( Stem("lateranensi"), "lateranens" );
	deepEqual( Stem("laterano"), "later" );
	deepEqual( Stem("lati"), "lat" );
	deepEqual( Stem("latifondi"), "latifond" );
	deepEqual( Stem("latifondisti"), "latifond" );
	deepEqual( Stem("latimore"), "latimor" );
	deepEqual( Stem("latina"), "latin" );
	deepEqual( Stem("latine"), "latin" );
	deepEqual( Stem("latini"), "latin" );
	deepEqual( Stem("latino"), "latin" );
	deepEqual( Stem("latinoamericane"), "latinoamerican" );
	deepEqual( Stem("latinoamericano"), "latinoameric" );
	deepEqual( Stem("latinorum"), "latinorum" );
	deepEqual( Stem("latinucci"), "latinucc" );
	deepEqual( Stem("latisana"), "latisan" );
	deepEqual( Stem("latitava"), "latit" );
	deepEqual( Stem("lato"), "lat" );
	deepEqual( Stem("latore"), "lator" );
	deepEqual( Stem("latronico"), "latron" );
	deepEqual( Stem("lattante"), "lattant" );
	deepEqual( Stem("latte"), "latt" );
	deepEqual( Stem("laura"), "laur" );
	deepEqual( Stem("laureati"), "laur" );
	deepEqual( Stem("laureato"), "laur" );
	deepEqual( Stem("laurent"), "laurent" );
	deepEqual( Stem("laurentii"), "laurent" );
	deepEqual( Stem("lauro"), "laur" );
	deepEqual( Stem("lautezza"), "lautezz" );
	deepEqual( Stem("lav"), "lav" );
	deepEqual( Stem("lava"), "lav" );
	deepEqual( Stem("lavandai"), "lavanda" );
	deepEqual( Stem("lavano"), "lav" );
	deepEqual( Stem("lavardera"), "lavarder" );
	deepEqual( Stem("lavare"), "lav" );
	deepEqual( Stem("lavasse"), "lav" );
	deepEqual( Stem("lavata"), "lav" );
	deepEqual( Stem("lavato"), "lav" );
	deepEqual( Stem("laverò"), "lav" );
	deepEqual( Stem("lavo"), "lav" );
	deepEqual( Stem("lavora"), "lavor" );
	deepEqual( Stem("lavorando"), "lavor" );
	deepEqual( Stem("lavorano"), "lavor" );
	deepEqual( Stem("lavorante"), "lavor" );
	deepEqual( Stem("lavoranti"), "lavor" );
	deepEqual( Stem("lavorar"), "lavor" );
	deepEqual( Stem("lavorare"), "lavor" );
	deepEqual( Stem("lavorata"), "lavor" );
	deepEqual( Stem("lavorate"), "lavor" );
	deepEqual( Stem("lavorati"), "lavor" );
	deepEqual( Stem("lavorativa"), "lavor" );
	deepEqual( Stem("lavorato"), "lavor" );
	deepEqual( Stem("lavoratore"), "lavor" );
	deepEqual( Stem("lavoratori"), "lavor" );
	deepEqual( Stem("lavoratrori"), "lavoratror" );
	deepEqual( Stem("lavorava"), "lavor" );
	deepEqual( Stem("lavoravano"), "lavor" );
	deepEqual( Stem("lavoravi"), "lavor" );
	deepEqual( Stem("lavorazione"), "lavor" );
	deepEqual( Stem("lavori"), "lavor" );
	deepEqual( Stem("lavorino"), "lavorin" );
	deepEqual( Stem("lavorio"), "lavor" );
	deepEqual( Stem("lavoro"), "lavor" );
	deepEqual( Stem("lavorò"), "lavor" );
	deepEqual( Stem("lazeretto"), "lazerett" );
	deepEqual( Stem("laziale"), "lazial" );
	deepEqual( Stem("lazio"), "laz" );
	deepEqual( Stem("lazzarini"), "lazzarin" );
	deepEqual( Stem("lazzati"), "lazz" );
	deepEqual( Stem("lazzeretti"), "lazzerett" );
	deepEqual( Stem("lazzeretto"), "lazzerett" );
	deepEqual( Stem("lbiro"), "lbir" );
	deepEqual( Stem("lc"), "lc" );
	deepEqual( Stem("ld"), "ld" );
	deepEqual( Stem("le"), "le" );
	deepEqual( Stem("leader"), "leader" );
	deepEqual( Stem("leadership"), "leadership" );
	deepEqual( Stem("leaf"), "leaf" );
	deepEqual( Stem("leale"), "leal" );
	deepEqual( Stem("lealmente"), "lealment" );
	deepEqual( Stem("lealtà"), "lealt" );
	deepEqual( Stem("leante"), "leant" );
	deepEqual( Stem("lebrazione"), "lebrazion" );
	deepEqual( Stem("leca"), "lec" );
	deepEqual( Stem("leccar"), "lecc" );
	deepEqual( Stem("leccate"), "lecc" );
	deepEqual( Stem("lecce"), "lecc" );
	deepEqual( Stem("leccese"), "lecces" );
	deepEqual( Stem("lecco"), "lecc" );
	deepEqual( Stem("lecita"), "lec" );
	deepEqual( Stem("leciti"), "lec" );
	deepEqual( Stem("lecito"), "lec" );
	deepEqual( Stem("lectures"), "lectures" );
	deepEqual( Stem("lede"), "led" );
	deepEqual( Stem("ledere"), "led" );
	deepEqual( Stem("ledo"), "led" );
	deepEqual( Stem("leffe"), "leff" );
	deepEqual( Stem("lega"), "leg" );
	deepEqual( Stem("legà"), "leg" );
	deepEqual( Stem("legale"), "legal" );
	deepEqual( Stem("legali"), "legal" );
	deepEqual( Stem("legalità"), "legal" );
	deepEqual( Stem("legame"), "legam" );
	deepEqual( Stem("legami"), "legam" );
	deepEqual( Stem("legano"), "leg" );
	deepEqual( Stem("legare"), "leg" );
	deepEqual( Stem("legata"), "leg" );
	deepEqual( Stem("legate"), "leg" );
	deepEqual( Stem("legatevi"), "legat" );
	deepEqual( Stem("legati"), "leg" );
	deepEqual( Stem("legato"), "leg" );
	deepEqual( Stem("legatolo"), "legatol" );
	deepEqual( Stem("legatura"), "legatur" );
	deepEqual( Stem("leggano"), "legg" );
	deepEqual( Stem("legge"), "legg" );
	deepEqual( Stem("leggendario"), "leggendar" );
	deepEqual( Stem("legger"), "legger" );
	deepEqual( Stem("leggera"), "legger" );
	deepEqual( Stem("leggeranno"), "legg" );
	deepEqual( Stem("leggere"), "legg" );
	deepEqual( Stem("leggerebbe"), "legg" );
	deepEqual( Stem("leggerezza"), "leggerezz" );
	deepEqual( Stem("leggergli"), "legg" );
	deepEqual( Stem("leggeri"), "legger" );
	deepEqual( Stem("leggerissimo"), "leggerissim" );
	deepEqual( Stem("leggerla"), "legg" );
	deepEqual( Stem("leggerle"), "legg" );
	deepEqual( Stem("leggermente"), "legger" );
	deepEqual( Stem("leggero"), "legger" );
	deepEqual( Stem("leggesse"), "leggess" );
	deepEqual( Stem("leggeva"), "legg" );
	deepEqual( Stem("leggi"), "legg" );
	deepEqual( Stem("leggier"), "leggier" );
	deepEqual( Stem("leggiera"), "leggier" );
	deepEqual( Stem("leggieri"), "leggier" );
	deepEqual( Stem("leggiero"), "leggier" );
	deepEqual( Stem("leggina"), "leggin" );
	deepEqual( Stem("leggìo"), "leggì" );
	deepEqual( Stem("leggo"), "legg" );
	deepEqual( Stem("leghe"), "legh" );
	deepEqual( Stem("leghissimi"), "leghissim" );
	deepEqual( Stem("leghista"), "leghist" );
	deepEqual( Stem("leghiste"), "leghist" );
	deepEqual( Stem("leghisti"), "leghist" );
	deepEqual( Stem("leghsiti"), "leghs" );
	deepEqual( Stem("legilative"), "legil" );
	deepEqual( Stem("legis"), "legis" );
	deepEqual( Stem("legislativa"), "legisl" );
	deepEqual( Stem("legislative"), "legisl" );
	deepEqual( Stem("legislativi"), "legisl" );
	deepEqual( Stem("legislativo"), "legisl" );
	deepEqual( Stem("legislatore"), "legisl" );
	deepEqual( Stem("legislatura"), "legislatur" );
	deepEqual( Stem("legislature"), "legislatur" );
	deepEqual( Stem("legislazione"), "legisl" );
	deepEqual( Stem("legisti"), "legist" );
	deepEqual( Stem("legittima"), "legittim" );
	deepEqual( Stem("legittimamente"), "legittim" );
	deepEqual( Stem("legittimare"), "legittim" );
	deepEqual( Stem("legittimatasi"), "legittimatas" );
	deepEqual( Stem("legittimazione"), "legittim" );
	deepEqual( Stem("legittime"), "legittim" );
	deepEqual( Stem("legittimità"), "legittim" );
	deepEqual( Stem("legittimo"), "legittim" );
	deepEqual( Stem("legna"), "legn" );
	deepEqual( Stem("legnaiolo"), "legnaiol" );
	deepEqual( Stem("legname"), "legnam" );
	deepEqual( Stem("legnano"), "legn" );
	deepEqual( Stem("legnetti"), "legnett" );
	deepEqual( Stem("legni"), "legn" );
	deepEqual( Stem("legno"), "legn" );
	deepEqual( Stem("legò"), "leg" );
	deepEqual( Stem("lehmann"), "lehmann" );
	deepEqual( Stem("lehnigk"), "lehnigk" );
	deepEqual( Stem("lei"), "lei" );
	deepEqual( Stem("leibnitz"), "leibnitz" );
	deepEqual( Stem("leicestershire"), "leicestersh" );
	deepEqual( Stem("leit"), "leit" );
	deepEqual( Stem("leitgeb"), "leitgeb" );
	deepEqual( Stem("leitner"), "leitner" );
	deepEqual( Stem("lembo"), "lemb" );
	deepEqual( Stem("lemme"), "lemm" );
	deepEqual( Stem("len"), "len" );
	deepEqual( Stem("lena"), "len" );
	deepEqual( Stem("leni"), "len" );
	deepEqual( Stem("leninista"), "lenin" );
	deepEqual( Stem("lens"), "lens" );
	deepEqual( Stem("lenta"), "lent" );
	deepEqual( Stem("lentamente"), "lent" );
	deepEqual( Stem("lentezza"), "lentezz" );
	deepEqual( Stem("lenti"), "lent" );
	deepEqual( Stem("lentissimi"), "lentissim" );
	deepEqual( Stem("lentissimo"), "lentissim" );
	deepEqual( Stem("lento"), "lent" );
	deepEqual( Stem("leny"), "leny" );
	deepEqual( Stem("lenzoli"), "lenzol" );
	deepEqual( Stem("lenzolo"), "lenzol" );
	deepEqual( Stem("leo"), "leo" );
	deepEqual( Stem("leoluca"), "leoluc" );
	deepEqual( Stem("leon"), "leon" );
	deepEqual( Stem("leonardo"), "leonard" );
	deepEqual( Stem("leone"), "leon" );
	deepEqual( Stem("leoni"), "leon" );
	deepEqual( Stem("leonid"), "leonid" );
	deepEqual( Stem("leopoldo"), "leopold" );
	deepEqual( Stem("lepre"), "lepr" );
	deepEqual( Stem("lercia"), "lerc" );
	deepEqual( Stem("les"), "les" );
	deepEqual( Stem("lesioni"), "lesion" );
	deepEqual( Stem("lesiva"), "les" );
	deepEqual( Stem("lesive"), "lesiv" );
	deepEqual( Stem("lesse"), "less" );
	deepEqual( Stem("lessicale"), "lessical" );
	deepEqual( Stem("lesta"), "lest" );
	deepEqual( Stem("lesti"), "lest" );
	deepEqual( Stem("lesto"), "lest" );
	deepEqual( Stem("let"), "let" );
	deepEqual( Stem("letargo"), "letarg" );
	deepEqual( Stem("letizia"), "letiz" );
	deepEqual( Stem("letta"), "lett" );
	deepEqual( Stem("lette"), "lett" );
	deepEqual( Stem("lettear"), "lett" );
	deepEqual( Stem("letten"), "letten" );
	deepEqual( Stem("lettera"), "letter" );
	deepEqual( Stem("letteralmente"), "letteral" );
	deepEqual( Stem("letteraria"), "letterar" );
	deepEqual( Stem("letterario"), "letterar" );
	deepEqual( Stem("letterati"), "letter" );
	deepEqual( Stem("letterato"), "letter" );
	deepEqual( Stem("letteratone"), "letteraton" );
	deepEqual( Stem("letteratura"), "letteratur" );
	deepEqual( Stem("lettere"), "lett" );
	deepEqual( Stem("letteriello"), "letteriell" );
	deepEqual( Stem("letti"), "lett" );
	deepEqual( Stem("lettiga"), "lettig" );
	deepEqual( Stem("lettighieri"), "lettighier" );
	deepEqual( Stem("lettighiero"), "lettighier" );
	deepEqual( Stem("letto"), "lett" );
	deepEqual( Stem("lettonia"), "letton" );
	deepEqual( Stem("lettore"), "lettor" );
	deepEqual( Stem("lettori"), "lettor" );
	deepEqual( Stem("lettovi"), "lettov" );
	deepEqual( Stem("lettuccio"), "lettucc" );
	deepEqual( Stem("lettura"), "lettur" );
	deepEqual( Stem("leuca"), "leuc" );
	deepEqual( Stem("leuci"), "leuc" );
	deepEqual( Stem("leva"), "lev" );
	deepEqual( Stem("levami"), "levam" );
	deepEqual( Stem("levando"), "lev" );
	deepEqual( Stem("levandosi"), "lev" );
	deepEqual( Stem("levanta"), "levant" );
	deepEqual( Stem("levante"), "levant" );
	deepEqual( Stem("levantese"), "levantes" );
	deepEqual( Stem("levar"), "lev" );
	deepEqual( Stem("levare"), "lev" );
	deepEqual( Stem("levargli"), "lev" );
	deepEqual( Stem("levarla"), "lev" );
	deepEqual( Stem("levarle"), "lev" );
	deepEqual( Stem("levarli"), "lev" );
	deepEqual( Stem("levarlo"), "lev" );
	deepEqual( Stem("levarmi"), "lev" );
	deepEqual( Stem("levarne"), "lev" );
	deepEqual( Stem("levarnela"), "levarnel" );
	deepEqual( Stem("levaron"), "levaron" );
	deepEqual( Stem("levarsi"), "lev" );
	deepEqual( Stem("levarti"), "lev" );
	deepEqual( Stem("levarvi"), "lev" );
	deepEqual( Stem("levata"), "lev" );
	deepEqual( Stem("levatasi"), "levatas" );
	deepEqual( Stem("levate"), "lev" );
	deepEqual( Stem("levatevelo"), "levatevel" );
	deepEqual( Stem("levatevi"), "levat" );
	deepEqual( Stem("levati"), "lev" );
	deepEqual( Stem("levato"), "lev" );
	deepEqual( Stem("levatosi"), "levat" );
	deepEqual( Stem("levava"), "lev" );
	deepEqual( Stem("levavano"), "lev" );
	deepEqual( Stem("leverebbe"), "lev" );
	deepEqual( Stem("leverkusen"), "leverkusen" );
	deepEqual( Stem("levi"), "lev" );
	deepEqual( Stem("levin"), "levin" );
	deepEqual( Stem("levino"), "levin" );
	deepEqual( Stem("levo"), "lev" );
	deepEqual( Stem("levò"), "lev" );
	deepEqual( Stem("levy"), "levy" );
	deepEqual( Stem("lewis"), "lewis" );
	deepEqual( Stem("lex"), "lex" );
	deepEqual( Stem("lezione"), "lezion" );
	deepEqual( Stem("leziosaggine"), "leziosaggin" );
	deepEqual( Stem("lezioso"), "lezios" );
	deepEqual( Stem("lg"), "lg" );
	deepEqual( Stem("lh"), "lh" );
	deepEqual( Stem("li"), "li" );
	deepEqual( Stem("lì"), "lì" );
	deepEqual( Stem("liatti"), "liatt" );
	deepEqual( Stem("lib"), "lib" );
	deepEqual( Stem("libano"), "lib" );
	deepEqual( Stem("libbra"), "libbr" );
	deepEqual( Stem("libelli"), "libell" );
	deepEqual( Stem("libera"), "liber" );
	deepEqual( Stem("liberaci"), "liberac" );
	deepEqual( Stem("liberal"), "liberal" );
	deepEqual( Stem("liberaldemocratica"), "liberaldemocrat" );
	deepEqual( Stem("liberaldemocratico"), "liberaldemocrat" );
	deepEqual( Stem("liberale"), "liberal" );
	deepEqual( Stem("liberali"), "liberal" );
	deepEqual( Stem("liberalismo"), "liberal" );
	deepEqual( Stem("liberalità"), "liberal" );
	deepEqual( Stem("liberalizzato"), "liberalizz" );
	deepEqual( Stem("liberalizzazione"), "liberalizz" );
	deepEqual( Stem("liberamente"), "liber" );
	deepEqual( Stem("liberandovi"), "liber" );
	deepEqual( Stem("liberar"), "liber" );
	deepEqual( Stem("liberarasi"), "liberaras" );
	deepEqual( Stem("liberare"), "liber" );
	deepEqual( Stem("liberarla"), "liber" );
	deepEqual( Stem("liberarle"), "liber" );
	deepEqual( Stem("liberarono"), "liber" );
	deepEqual( Stem("liberarsene"), "liber" );
	deepEqual( Stem("liberarsi"), "liber" );
	deepEqual( Stem("liberarvi"), "liber" );
	deepEqual( Stem("liberata"), "liber" );
	deepEqual( Stem("liberati"), "liber" );
	deepEqual( Stem("liberato"), "liber" );
	deepEqual( Stem("liberatore"), "liber" );
	deepEqual( Stem("liberatori"), "liber" );
	deepEqual( Stem("liberatorio"), "liberator" );
	deepEqual( Stem("liberavamo"), "liber" );
	deepEqual( Stem("liberazione"), "liber" );
	deepEqual( Stem("libere"), "lib" );
	deepEqual( Stem("libererò"), "liber" );
	deepEqual( Stem("liberi"), "liber" );
	deepEqual( Stem("liberiamocene"), "liberiamocen" );
	deepEqual( Stem("liberismo"), "liber" );
	deepEqual( Stem("liberissimi"), "liberissim" );
	deepEqual( Stem("liberista"), "liber" );
	deepEqual( Stem("liberiste"), "liber" );
	deepEqual( Stem("liberisti"), "liber" );
	deepEqual( Stem("libero"), "liber" );
	deepEqual( Stem("liberò"), "lib" );
	deepEqual( Stem("libertà"), "libert" );
	deepEqual( Stem("libertaria"), "libertar" );
	deepEqual( Stem("libertas"), "libertas" );
	deepEqual( Stem("liberte"), "libert" );
	deepEqual( Stem("libertè"), "libert" );
	deepEqual( Stem("libertinaggio"), "libertinagg" );
	deepEqual( Stem("libia"), "lib" );
	deepEqual( Stem("libico"), "libic" );
	deepEqual( Stem("libra"), "libr" );
	deepEqual( Stem("libracci"), "libracc" );
	deepEqual( Stem("libraccio"), "libracc" );
	deepEqual( Stem("librato"), "libr" );
	deepEqual( Stem("libreria"), "librer" );
	deepEqual( Stem("librettò"), "librett" );
	deepEqual( Stem("libri"), "libr" );
	deepEqual( Stem("libriccin"), "libriccin" );
	deepEqual( Stem("libriccino"), "libriccin" );
	deepEqual( Stem("libricciolo"), "libricciol" );
	deepEqual( Stem("libro"), "libr" );
	deepEqual( Stem("licenza"), "licenz" );
	deepEqual( Stem("licenziamenti"), "licenz" );
	deepEqual( Stem("licenziamento"), "licenz" );
	deepEqual( Stem("licenziar"), "licenz" );
	deepEqual( Stem("licenziare"), "licenz" );
	deepEqual( Stem("licenziaron"), "licenziaron" );
	deepEqual( Stem("licenziati"), "licenz" );
	deepEqual( Stem("licenziò"), "licenz" );
	deepEqual( Stem("liceo"), "lice" );
	deepEqual( Stem("licia"), "lic" );
	deepEqual( Stem("licta"), "lict" );
	deepEqual( Stem("lid"), "lid" );
	deepEqual( Stem("lidia"), "lid" );
	deepEqual( Stem("lido"), "lid" );
	deepEqual( Stem("lieberman"), "lieberman" );
	deepEqual( Stem("liegi"), "lieg" );
	deepEqual( Stem("lierse"), "liers" );
	deepEqual( Stem("lieta"), "liet" );
	deepEqual( Stem("lietamente"), "liet" );
	deepEqual( Stem("liete"), "liet" );
	deepEqual( Stem("lieto"), "liet" );
	deepEqual( Stem("lieve"), "liev" );
	deepEqual( Stem("lievemente"), "lievement" );
	deepEqual( Stem("lievi"), "liev" );
	deepEqual( Stem("lievitare"), "lievit" );
	deepEqual( Stem("lif"), "lif" );
	deepEqual( Stem("liga"), "lig" );
	deepEqual( Stem("ligamen"), "ligamen" );
	deepEqual( Stem("ligi"), "lig" );
	deepEqual( Stem("lignano"), "lign" );
	deepEqual( Stem("ligne"), "lign" );
	deepEqual( Stem("ligonchio"), "ligonc" );
	deepEqual( Stem("liguori"), "liguor" );
	deepEqual( Stem("ligure"), "ligur" );
	deepEqual( Stem("liguri"), "ligur" );
	deepEqual( Stem("liguria"), "ligur" );
	deepEqual( Stem("lilia"), "lil" );
	deepEqual( Stem("liliano"), "lil" );
	deepEqual( Stem("lilla"), "lill" );
	deepEqual( Stem("lillehammer"), "lillehammer" );
	deepEqual( Stem("lilli"), "lill" );
	deepEqual( Stem("lima"), "lim" );
	deepEqual( Stem("limatura"), "limatur" );
	deepEqual( Stem("limbruno"), "limbrun" );
	deepEqual( Stem("limita"), "lim" );
	deepEqual( Stem("limitando"), "limit" );
	deepEqual( Stem("limitano"), "limit" );
	deepEqual( Stem("limitare"), "limit" );
	deepEqual( Stem("limitarsi"), "limit" );
	deepEqual( Stem("limitata"), "limit" );
	deepEqual( Stem("limitate"), "limit" );
	deepEqual( Stem("limitative"), "limit" );
	deepEqual( Stem("limitativo"), "limit" );
	deepEqual( Stem("limitato"), "limit" );
	deepEqual( Stem("limitavano"), "limit" );
	deepEqual( Stem("limitazione"), "limit" );
	deepEqual( Stem("limitazioni"), "limit" );
	deepEqual( Stem("limite"), "lim" );
	deepEqual( Stem("limiterà"), "limit" );
	deepEqual( Stem("limiti"), "lim" );
	deepEqual( Stem("limitiamo"), "limit" );
	deepEqual( Stem("limits"), "limits" );
	deepEqual( Stem("limpido"), "limpid" );
	deepEqual( Stem("lina"), "lin" );
	deepEqual( Stem("linciaggio"), "linciagg" );
	deepEqual( Stem("linciati"), "linc" );
	deepEqual( Stem("line"), "lin" );
	deepEqual( Stem("linea"), "line" );
	deepEqual( Stem("lineamenti"), "lin" );
	deepEqual( Stem("linee"), "line" );
	deepEqual( Stem("lingua"), "lingu" );
	deepEqual( Stem("linguaggio"), "linguagg" );
	deepEqual( Stem("lingue"), "lingu" );
	deepEqual( Stem("linificio"), "linific" );
	deepEqual( Stem("link"), "link" );
	deepEqual( Stem("lino"), "lin" );
	deepEqual( Stem("lion"), "lion" );
	deepEqual( Stem("lione"), "lion" );
	deepEqual( Stem("lionel"), "lionel" );
	deepEqual( Stem("lipkin"), "lipkin" );
	deepEqual( Stem("lippi"), "lipp" );
	deepEqual( Stem("liquefatto"), "liquefatt" );
	deepEqual( Stem("liquida"), "liquid" );
	deepEqual( Stem("liquidare"), "liquid" );
	deepEqual( Stem("liquidata"), "liquid" );
	deepEqual( Stem("liquidati"), "liquid" );
	deepEqual( Stem("liquidato"), "liquid" );
	deepEqual( Stem("liquidatore"), "liquid" );
	deepEqual( Stem("liquidazione"), "liquid" );
	deepEqual( Stem("liquidazioni"), "liquid" );
	deepEqual( Stem("liquide"), "liquid" );
	deepEqual( Stem("liquidità"), "liquid" );
	deepEqual( Stem("liquido"), "liquid" );
	deepEqual( Stem("liquor"), "liquor" );
	deepEqual( Stem("lira"), "lir" );
	deepEqual( Stem("lire"), "lir" );
	deepEqual( Stem("lirichè"), "liric" );
	deepEqual( Stem("lirici"), "liric" );
	deepEqual( Stem("lisa"), "lis" );
	deepEqual( Stem("lisbona"), "lisbon" );
	deepEqual( Stem("lisca"), "lisc" );
	deepEqual( Stem("liscate"), "lisc" );
	deepEqual( Stem("lisce"), "lisc" );
	deepEqual( Stem("liscia"), "lisc" );
	deepEqual( Stem("liscio"), "lisc" );
	deepEqual( Stem("lisciò"), "lisc" );
	deepEqual( Stem("lise"), "lis" );
	deepEqual( Stem("lista"), "list" );
	deepEqual( Stem("liste"), "list" );
	deepEqual( Stem("listino"), "listin" );
	deepEqual( Stem("lità"), "lit" );
	deepEqual( Stem("lite"), "lit" );
	deepEqual( Stem("litiga"), "litig" );
	deepEqual( Stem("litiganti"), "litig" );
	deepEqual( Stem("litigar"), "litig" );
	deepEqual( Stem("litigi"), "litig" );
	deepEqual( Stem("litorale"), "litoral" );
	deepEqual( Stem("litorali"), "litoral" );
	deepEqual( Stem("littorio"), "littor" );
	deepEqual( Stem("litwinski"), "litwinsk" );
	deepEqual( Stem("liuto"), "liut" );
	deepEqual( Stem("live"), "liv" );
	deepEqual( Stem("livelli"), "livell" );
	deepEqual( Stem("livello"), "livell" );
	deepEqual( Stem("livide"), "livid" );
	deepEqual( Stem("lividi"), "livid" );
	deepEqual( Stem("livido"), "livid" );
	deepEqual( Stem("livingston"), "livingston" );
	deepEqual( Stem("livio"), "liv" );
	deepEqual( Stem("livornese"), "livornes" );
	deepEqual( Stem("livorno"), "livorn" );
	deepEqual( Stem("livrea"), "livre" );
	deepEqual( Stem("livree"), "livre" );
	deepEqual( Stem("liz"), "liz" );
	deepEqual( Stem("liza"), "liz" );
	deepEqual( Stem("lizza"), "lizz" );
	deepEqual( Stem("lllustriss"), "lllustriss" );
	deepEqual( Stem("lloyd"), "lloyd" );
	deepEqual( Stem("lloyds"), "lloyds" );
	deepEqual( Stem("lmi"), "lmi" );
	deepEqual( Stem("ln"), "ln" );
	deepEqual( Stem("lo"), "lo" );
	deepEqual( Stem("loader"), "loader" );
	deepEqual( Stem("lob"), "lob" );
	deepEqual( Stem("lobby"), "lobby" );
	deepEqual( Stem("lobotomia"), "lobotom" );
	deepEqual( Stem("locale"), "local" );
	deepEqual( Stem("locali"), "local" );
	deepEqual( Stem("località"), "local" );
	deepEqual( Stem("localizzazione"), "localizz" );
	deepEqual( Stem("locanda"), "locand" );
	deepEqual( Stem("locati"), "loc" );
	deepEqual( Stem("locché"), "locc" );
	deepEqual( Stem("lockerbie"), "lockerb" );
	deepEqual( Stem("locomotiva"), "locomot" );
	deepEqual( Stem("lodar"), "lod" );
	deepEqual( Stem("lodare"), "lod" );
	deepEqual( Stem("lodarlo"), "lod" );
	deepEqual( Stem("lodarsi"), "lod" );
	deepEqual( Stem("lodata"), "lod" );
	deepEqual( Stem("lodato"), "lod" );
	deepEqual( Stem("lodava"), "lod" );
	deepEqual( Stem("lode"), "lod" );
	deepEqual( Stem("loderemo"), "lod" );
	deepEqual( Stem("lodevoli"), "lodevol" );
	deepEqual( Stem("lodevolmente"), "lodevol" );
	deepEqual( Stem("lodi"), "lod" );
	deepEqual( Stem("lodigiani"), "lodigian" );
	deepEqual( Stem("lodo"), "lod" );
	deepEqual( Stem("lodò"), "lod" );
	deepEqual( Stem("lodovico"), "lodov" );
	deepEqual( Stem("logar"), "log" );
	deepEqual( Stem("loggia"), "logg" );
	deepEqual( Stem("loggiato"), "logg" );
	deepEqual( Stem("logica"), "logic" );
	deepEqual( Stem("logiche"), "logic" );
	deepEqual( Stem("logico"), "logic" );
	deepEqual( Stem("loginov"), "loginov" );
	deepEqual( Stem("logisitici"), "logisit" );
	deepEqual( Stem("logistica"), "logist" );
	deepEqual( Stem("logistiche"), "logist" );
	deepEqual( Stem("logli"), "logl" );
	deepEqual( Stem("loglio"), "logl" );
	deepEqual( Stem("logo"), "log" );
	deepEqual( Stem("logorato"), "logor" );
	deepEqual( Stem("logori"), "logor" );
	deepEqual( Stem("logoro"), "logor" );
	deepEqual( Stem("logrono"), "logr" );
	deepEqual( Stem("lollis"), "lollis" );
	deepEqual( Stem("lollobrigida"), "lollobrigid" );
	deepEqual( Stem("lombarda"), "lombard" );
	deepEqual( Stem("lombarde"), "lombard" );
	deepEqual( Stem("lombardi"), "lombard" );
	deepEqual( Stem("lombardia"), "lombard" );
	deepEqual( Stem("lombardini"), "lombardin" );
	deepEqual( Stem("lombardo"), "lombard" );
	deepEqual( Stem("lombardona"), "lombardon" );
	deepEqual( Stem("lomi"), "lom" );
	deepEqual( Stem("lommel"), "lommel" );
	deepEqual( Stem("londinese"), "londines" );
	deepEqual( Stem("londinesi"), "londines" );
	deepEqual( Stem("londra"), "londr" );
	deepEqual( Stem("longar"), "long" );
	deepEqual( Stem("longhi"), "long" );
	deepEqual( Stem("longiano"), "long" );
	deepEqual( Stem("longo"), "long" );
	deepEqual( Stem("lontana"), "lontan" );
	deepEqual( Stem("lontananza"), "lontan" );
	deepEqual( Stem("lontane"), "lontan" );
	deepEqual( Stem("lontanetto"), "lontanett" );
	deepEqual( Stem("lontani"), "lontan" );
	deepEqual( Stem("lontano"), "lont" );
	deepEqual( Stem("lontante"), "lontant" );
	deepEqual( Stem("look"), "look" );
	deepEqual( Stem("loose"), "loos" );
	deepEqual( Stem("lopez"), "lopez" );
	deepEqual( Stem("lor"), "lor" );
	deepEqual( Stem("lorda"), "lord" );
	deepEqual( Stem("lordate"), "lord" );
	deepEqual( Stem("lordi"), "lord" );
	deepEqual( Stem("lordo"), "lord" );
	deepEqual( Stem("lords"), "lords" );
	deepEqual( Stem("loredana"), "loredan" );
	deepEqual( Stem("lorena"), "loren" );
	deepEqual( Stem("lorenzini"), "lorenzin" );
	deepEqual( Stem("lorenzo"), "lorenz" );
	deepEqual( Stem("loreto"), "loret" );
	deepEqual( Stem("lori"), "lor" );
	deepEqual( Stem("lorieri"), "lorier" );
	deepEqual( Stem("loro"), "lor" );
	deepEqual( Stem("los"), "los" );
	deepEqual( Stem("losa"), "los" );
	deepEqual( Stem("losanna"), "losann" );
	deepEqual( Stem("losche"), "losc" );
	deepEqual( Stem("loseto"), "loset" );
	deepEqual( Stem("lotta"), "lott" );
	deepEqual( Stem("lottà"), "lott" );
	deepEqual( Stem("lottare"), "lott" );
	deepEqual( Stem("lotte"), "lott" );
	deepEqual( Stem("lotteria"), "lotter" );
	deepEqual( Stem("lotti"), "lott" );
	deepEqual( Stem("lottizzazione"), "lottizz" );
	deepEqual( Stem("lotto"), "lott" );
	deepEqual( Stem("louis"), "louis" );
	deepEqual( Stem("lourdes"), "lourdes" );
	deepEqual( Stem("lovato"), "lov" );
	deepEqual( Stem("lovely"), "lovely" );
	deepEqual( Stem("lp"), "lp" );
	deepEqual( Stem("lq"), "lq" );
	deepEqual( Stem("lr"), "lr" );
	deepEqual( Stem("lt"), "lt" );
	deepEqual( Stem("lu"), "lu" );
	deepEqual( Stem("luanda"), "luand" );
	deepEqual( Stem("luc"), "luc" );
	deepEqual( Stem("luca"), "luc" );
	deepEqual( Stem("lucar"), "luc" );
	deepEqual( Stem("lucarelli"), "lucarell" );
	deepEqual( Stem("lucca"), "lucc" );
	deepEqual( Stem("lucchese"), "lucches" );
	deepEqual( Stem("lucchetta"), "lucchett" );
	deepEqual( Stem("lucchetti"), "lucchett" );
	deepEqual( Stem("lucchi"), "lucc" );
	deepEqual( Stem("lucchini"), "lucchin" );
	deepEqual( Stem("lucci"), "lucc" );
	deepEqual( Stem("luccicante"), "luccic" );
	deepEqual( Stem("luccicanti"), "luccic" );
	deepEqual( Stem("luccicare"), "luccic" );
	deepEqual( Stem("lucciole"), "lucciol" );
	deepEqual( Stem("luce"), "luc" );
	deepEqual( Stem("lucente"), "lucent" );
	deepEqual( Stem("lucenti"), "lucent" );
	deepEqual( Stem("lucerna"), "lucern" );
	deepEqual( Stem("lucerne"), "luc" );
	deepEqual( Stem("luchetti"), "luchett" );
	deepEqual( Stem("luchino"), "luchin" );
	deepEqual( Stem("luci"), "luc" );
	deepEqual( Stem("lucia"), "luc" );
	deepEqual( Stem("luciana"), "lucian" );
	deepEqual( Stem("luciano"), "luc" );
	deepEqual( Stem("lucida"), "lucid" );
	deepEqual( Stem("lucidi"), "lucid" );
	deepEqual( Stem("lucido"), "lucid" );
	deepEqual( Stem("lucignolo"), "lucignol" );
	deepEqual( Stem("lucilla"), "lucill" );
	deepEqual( Stem("lucio"), "luc" );
	deepEqual( Stem("lucrezia"), "lucrez" );
	deepEqual( Stem("lucrosa"), "lucros" );
	deepEqual( Stem("lueders"), "lueders" );
	deepEqual( Stem("lufthansa"), "lufthans" );
	deepEqual( Stem("luglio"), "lugl" );
	deepEqual( Stem("lugo"), "lug" );
	deepEqual( Stem("lugubre"), "lugubr" );
	deepEqual( Stem("lui"), "lui" );
	deepEqual( Stem("luigi"), "luig" );
	deepEqual( Stem("luigiterzo"), "luigiterz" );
	deepEqual( Stem("luino"), "luin" );
	deepEqual( Stem("luisa"), "luis" );
	deepEqual( Stem("luisito"), "luis" );
	deepEqual( Stem("luiso"), "luis" );
	deepEqual( Stem("lumbard"), "lumbard" );
	deepEqual( Stem("lume"), "lum" );
	deepEqual( Stem("lumeggiando"), "lumegg" );
	deepEqual( Stem("lumeggiavano"), "lumegg" );
	deepEqual( Stem("lumezzane"), "lumezzan" );
	deepEqual( Stem("lumi"), "lum" );
	deepEqual( Stem("lumicino"), "lumicin" );
	deepEqual( Stem("lumiere"), "lum" );
	deepEqual( Stem("lumpur"), "lumpur" );
	deepEqual( Stem("luna"), "lun" );
	deepEqual( Stem("lunà"), "lun" );
	deepEqual( Stem("lunarè"), "lunar" );
	deepEqual( Stem("lunario"), "lunar" );
	deepEqual( Stem("lunedì"), "luned" );
	deepEqual( Stem("lunedìa"), "lunedì" );
	deepEqual( Stem("lunedìper"), "lunedìper" );
	deepEqual( Stem("lunette"), "lunett" );
	deepEqual( Stem("lunga"), "lung" );
	deepEqual( Stem("lungagnata"), "lungagn" );
	deepEqual( Stem("lungamente"), "lung" );
	deepEqual( Stem("lunghe"), "lung" );
	deepEqual( Stem("lunghettamente"), "lunghett" );
	deepEqual( Stem("lunghezza"), "lunghezz" );
	deepEqual( Stem("lunghi"), "lung" );
	deepEqual( Stem("lunghigna"), "lunghign" );
	deepEqual( Stem("lunghissimi"), "lunghissim" );
	deepEqual( Stem("lunghissimo"), "lunghissim" );
	deepEqual( Stem("lungi"), "lung" );
	deepEqual( Stem("lungimirante"), "lungimir" );
	deepEqual( Stem("lungimiranza"), "lungimir" );
	deepEqual( Stem("lungo"), "lung" );
	deepEqual( Stem("lunini"), "lunin" );
	deepEqual( Stem("luochi"), "luoc" );
	deepEqual( Stem("luoghi"), "luog" );
	deepEqual( Stem("luogo"), "luog" );
	deepEqual( Stem("luogotenente"), "luogotenent" );
	deepEqual( Stem("luogotenenti"), "luogotenent" );
	deepEqual( Stem("luohang"), "luohang" );
	deepEqual( Stem("lupi"), "lup" );
	deepEqual( Stem("lupo"), "lup" );
	deepEqual( Stem("lupu"), "lupu" );
	deepEqual( Stem("lusinga"), "lusing" );
	deepEqual( Stem("lusingano"), "lusing" );
	deepEqual( Stem("lusingare"), "lusing" );
	deepEqual( Stem("lusinghe"), "lusing" );
	deepEqual( Stem("lussemburgo"), "lussemburg" );
	deepEqual( Stem("lusso"), "luss" );
	deepEqual( Stem("lustrata"), "lustr" );
	deepEqual( Stem("lustre"), "lustr" );
	deepEqual( Stem("lustri"), "lustr" );
	deepEqual( Stem("luterani"), "luteran" );
	deepEqual( Stem("lutti"), "lutt" );
	deepEqual( Stem("lutto"), "lutt" );
	deepEqual( Stem("luttuose"), "luttuos" );
	deepEqual( Stem("luxor"), "luxor" );
	deepEqual( Stem("lvtp"), "lvtp" );
	deepEqual( Stem("lwaxana"), "lwaxan" );
	deepEqual( Stem("lydia"), "lydi" );
	deepEqual( Stem("lyles"), "lyles" );
	deepEqual( Stem("lynch"), "lynch" );
	deepEqual( Stem("lyonnais"), "lyonnais" );
	deepEqual( Stem("lz"), "lz" );
	deepEqual( Stem("m"), "m" );
	deepEqual( Stem("ma"), "ma" );
	deepEqual( Stem("maa"), "maa" );
	deepEqual( Stem("maastricht"), "maastricht" );
	deepEqual( Stem("mab"), "mab" );
	deepEqual( Stem("mac"), "mac" );
	deepEqual( Stem("macabre"), "macabr" );
	deepEqual( Stem("macario"), "macar" );
	deepEqual( Stem("macbeth"), "macbeth" );
	deepEqual( Stem("macchi"), "macc" );
	deepEqual( Stem("macchia"), "macc" );
	deepEqual( Stem("macchiata"), "macc" );
	deepEqual( Stem("macchie"), "macc" );
	deepEqual( Stem("macchina"), "macchin" );
	deepEqual( Stem("macchinar"), "macchin" );
	deepEqual( Stem("macchinari"), "macchinar" );
	deepEqual( Stem("macchinava"), "macchin" );
	deepEqual( Stem("macchine"), "macchin" );
	deepEqual( Stem("macchinisti"), "macchin" );
	deepEqual( Stem("macellaio"), "macellai" );
	deepEqual( Stem("macellari"), "macellar" );
	deepEqual( Stem("maceratese"), "macerates" );
	deepEqual( Stem("macerazioni"), "macer" );
	deepEqual( Stem("macerie"), "macer" );
	deepEqual( Stem("machete"), "mach" );
	deepEqual( Stem("machines"), "machines" );
	deepEqual( Stem("macigni"), "macign" );
	deepEqual( Stem("macilenti"), "macilent" );
	deepEqual( Stem("macilento"), "macilent" );
	deepEqual( Stem("maclaine"), "maclain" );
	deepEqual( Stem("macro"), "macr" );
	deepEqual( Stem("macroregione"), "macroregion" );
	deepEqual( Stem("maculae"), "macula" );
	deepEqual( Stem("madama"), "madam" );
	deepEqual( Stem("maddalena"), "maddalen" );
	deepEqual( Stem("made"), "mad" );
	deepEqual( Stem("madhi"), "madh" );
	deepEqual( Stem("madia"), "mad" );
	deepEqual( Stem("madie"), "mad" );
	deepEqual( Stem("madigan"), "madigan" );
	deepEqual( Stem("madonna"), "madonn" );
	deepEqual( Stem("madonnina"), "madonnin" );
	deepEqual( Stem("madre"), "madr" );
	deepEqual( Stem("madri"), "madr" );
	deepEqual( Stem("madrid"), "madrid" );
	deepEqual( Stem("madrina"), "madrin" );
	deepEqual( Stem("maestà"), "maest" );
	deepEqual( Stem("maestosa"), "maestos" );
	deepEqual( Stem("maestose"), "maestos" );
	deepEqual( Stem("maestoso"), "maestos" );
	deepEqual( Stem("maestra"), "maestr" );
	deepEqual( Stem("maestranze"), "maestranz" );
	deepEqual( Stem("maestri"), "maestr" );
	deepEqual( Stem("maestria"), "maestr" );
	deepEqual( Stem("maestro"), "maestr" );
	deepEqual( Stem("maffei"), "maffe" );
	deepEqual( Stem("mafia"), "maf" );
	deepEqual( Stem("mafie"), "maf" );
	deepEqual( Stem("mafiosa"), "mafios" );
	deepEqual( Stem("mafiose"), "mafios" );
	deepEqual( Stem("mafiosi"), "mafios" );
	deepEqual( Stem("mafioso"), "mafios" );
	deepEqual( Stem("mag"), "mag" );
	deepEqual( Stem("magagna"), "magagn" );
	deepEqual( Stem("magagne"), "magagn" );
	deepEqual( Stem("magali"), "magal" );
	deepEqual( Stem("magari"), "magar" );
	deepEqual( Stem("magazzini"), "magazzin" );
	deepEqual( Stem("magazzino"), "magazzin" );
	deepEqual( Stem("magdalena"), "magdalen" );
	deepEqual( Stem("magellano"), "magell" );
	deepEqual( Stem("magestad"), "magestad" );
	deepEqual( Stem("maggianico"), "maggian" );
	deepEqual( Stem("maggie"), "magg" );
	deepEqual( Stem("maggio"), "magg" );
	deepEqual( Stem("maggior"), "maggior" );
	deepEqual( Stem("maggioranza"), "maggior" );
	deepEqual( Stem("maggioratorio"), "maggiorator" );
	deepEqual( Stem("maggiorazioni"), "maggior" );
	deepEqual( Stem("maggiore"), "maggior" );
	deepEqual( Stem("maggiori"), "maggior" );
	deepEqual( Stem("maggioritaria"), "maggioritar" );
	deepEqual( Stem("maggioritarie"), "maggioritar" );
	deepEqual( Stem("maggioritario"), "maggioritar" );
	deepEqual( Stem("maggiormente"), "maggior" );
	deepEqual( Stem("maggioroanza"), "maggior" );
	deepEqual( Stem("maghagha"), "maghag" );
	deepEqual( Stem("maghi"), "magh" );
	deepEqual( Stem("magi"), "mag" );
	deepEqual( Stem("magia"), "mag" );
	deepEqual( Stem("magiari"), "magiar" );
	deepEqual( Stem("magiaro"), "magiar" );
	deepEqual( Stem("magica"), "magic" );
	deepEqual( Stem("magiche"), "magic" );
	deepEqual( Stem("magistero"), "magister" );
	deepEqual( Stem("magistrale"), "magistral" );
	deepEqual( Stem("magistrati"), "magistr" );
	deepEqual( Stem("magistrato"), "magistr" );
	deepEqual( Stem("magistratura"), "magistratur" );
	deepEqual( Stem("maglia"), "magl" );
	deepEqual( Stem("magliani"), "maglian" );
	deepEqual( Stem("maglie"), "magl" );
	deepEqual( Stem("magna"), "magn" );
	deepEqual( Stem("magnam"), "magnam" );
	deepEqual( Stem("magnani"), "magnan" );
	deepEqual( Stem("magnanima"), "magnanim" );
	deepEqual( Stem("magnetico"), "magnet" );
	deepEqual( Stem("magni"), "magn" );
	deepEqual( Stem("magnifica"), "magnif" );
	deepEqual( Stem("magnificamente"), "magnif" );
	deepEqual( Stem("magnificenza"), "magnificent" );
	deepEqual( Stem("magnifiche"), "magnif" );
	deepEqual( Stem("magnifico"), "magnif" );
	deepEqual( Stem("magnitudo"), "magnitud" );
	deepEqual( Stem("magno"), "magn" );
	deepEqual( Stem("magona"), "magon" );
	deepEqual( Stem("magoni"), "magon" );
	deepEqual( Stem("magonza"), "magonz" );
	deepEqual( Stem("magra"), "magr" );
	deepEqual( Stem("magre"), "magr" );
	deepEqual( Stem("mahal"), "mahal" );
	deepEqual( Stem("maharashtra"), "maharashtr" );
	deepEqual( Stem("mahatma"), "mahatm" );
	deepEqual( Stem("mai"), "mai" );
	deepEqual( Stem("maidan"), "maidan" );
	deepEqual( Stem("maiellaro"), "maiellar" );
	deepEqual( Stem("mail"), "mail" );
	deepEqual( Stem("maini"), "main" );
	deepEqual( Stem("maiocchi"), "maiocc" );
	deepEqual( Stem("maiolica"), "maiol" );
	deepEqual( Stem("maiorca"), "maiorc" );
	deepEqual( Stem("maja"), "maj" );
	deepEqual( Stem("major"), "major" );
	deepEqual( Stem("makeni"), "maken" );
	deepEqual( Stem("makinen"), "makinen" );
	deepEqual( Stem("mal"), "mal" );
	deepEqual( Stem("mala"), "mal" );
	deepEqual( Stem("malafede"), "malafed" );
	deepEqual( Stem("malaffare"), "malaff" );
	deepEqual( Stem("malagevole"), "malagevol" );
	deepEqual( Stem("malagevoli"), "malagevol" );
	deepEqual( Stem("malamente"), "mal" );
	deepEqual( Stem("malan"), "malan" );
	deepEqual( Stem("malandrinaccio"), "malandrinacc" );
	deepEqual( Stem("malandrini"), "malandrin" );
	deepEqual( Stem("malandrino"), "malandrin" );
	deepEqual( Stem("malannaggia"), "malannagg" );
	deepEqual( Stem("malanno"), "malann" );
	deepEqual( Stem("malanotte"), "malanott" );
	deepEqual( Stem("malapianta"), "malapiant" );
	deepEqual( Stem("malasorte"), "malasort" );
	deepEqual( Stem("malate"), "mal" );
	deepEqual( Stem("malatestas"), "malatestas" );
	deepEqual( Stem("malatesti"), "malatest" );
	deepEqual( Stem("malati"), "mal" );
	deepEqual( Stem("malato"), "mal" );
	deepEqual( Stem("malattia"), "malatt" );
	deepEqual( Stem("malattie"), "malatt" );
	deepEqual( Stem("malaugurio"), "malaugur" );
	deepEqual( Stem("malavita"), "malav" );
	deepEqual( Stem("malcapitati"), "malcapit" );
	deepEqual( Stem("malcolm"), "malcolm" );
	deepEqual( Stem("malconci"), "malconc" );
	deepEqual( Stem("malconcio"), "malconc" );
	deepEqual( Stem("malcontenta"), "malcontent" );
	deepEqual( Stem("malcontenti"), "malcontent" );
	deepEqual( Stem("malcontento"), "malcontent" );
	deepEqual( Stem("maldestramente"), "maldestr" );
	deepEqual( Stem("maldestro"), "maldestr" );
	deepEqual( Stem("maldini"), "maldin" );
	deepEqual( Stem("male"), "mal" );
	deepEqual( Stem("malebolge"), "malebolg" );
	deepEqual( Stem("maledetta"), "maledett" );
	deepEqual( Stem("maledette"), "maledett" );
	deepEqual( Stem("maledetti"), "maledett" );
	deepEqual( Stem("maledetto"), "maledett" );
	deepEqual( Stem("maledicevano"), "maledic" );
	deepEqual( Stem("maledicono"), "maledic" );
	deepEqual( Stem("maledizione"), "maledizion" );
	deepEqual( Stem("maleeva"), "mal" );
	deepEqual( Stem("malefatte"), "malefatt" );
	deepEqual( Stem("malefica"), "malef" );
	deepEqual( Stem("malefiche"), "malef" );
	deepEqual( Stem("maleficio"), "malefic" );
	deepEqual( Stem("malefizio"), "malefiz" );
	deepEqual( Stem("malfa"), "malf" );
	deepEqual( Stem("malformazioni"), "malform" );
	deepEqual( Stem("malfunzionamento"), "malfunzion" );
	deepEqual( Stem("malgeri"), "malger" );
	deepEqual( Stem("malgieri"), "malgier" );
	deepEqual( Stem("malgrado"), "malgrad" );
	deepEqual( Stem("mali"), "mal" );
	deepEqual( Stem("maliardi"), "maliard" );
	deepEqual( Stem("malìe"), "malì" );
	deepEqual( Stem("maligna"), "malign" );
	deepEqual( Stem("maligne"), "malign" );
	deepEqual( Stem("maligni"), "malign" );
	deepEqual( Stem("maligno"), "malign" );
	deepEqual( Stem("malinconia"), "malincon" );
	deepEqual( Stem("malinconica"), "malincon" );
	deepEqual( Stem("malinconiche"), "malincon" );
	deepEqual( Stem("malinconici"), "malincon" );
	deepEqual( Stem("malinconie"), "malincon" );
	deepEqual( Stem("malincorpo"), "malincorp" );
	deepEqual( Stem("malincuore"), "malincuor" );
	deepEqual( Stem("malines"), "malines" );
	deepEqual( Stem("malissimo"), "malissim" );
	deepEqual( Stem("malitia"), "malit" );
	deepEqual( Stem("malivai"), "maliva" );
	deepEqual( Stem("malizia"), "maliz" );
	deepEqual( Stem("malizie"), "maliz" );
	deepEqual( Stem("maliziosa"), "maliz" );
	deepEqual( Stem("malizioso"), "maliz" );
	deepEqual( Stem("mallevadore"), "mallevador" );
	deepEqual( Stem("malmenata"), "malmen" );
	deepEqual( Stem("malmenati"), "malmen" );
	deepEqual( Stem("malmenato"), "malmen" );
	deepEqual( Stem("malora"), "malor" );
	deepEqual( Stem("malore"), "malor" );
	deepEqual( Stem("malpica"), "malpic" );
	deepEqual( Stem("malsicuro"), "malsicur" );
	deepEqual( Stem("malsupportati"), "malsupport" );
	deepEqual( Stem("malta"), "malt" );
	deepEqual( Stem("maltagliati"), "maltagl" );
	deepEqual( Stem("maltesi"), "maltes" );
	deepEqual( Stem("maltolto"), "maltolt" );
	deepEqual( Stem("maltrattamenti"), "maltratt" );
	deepEqual( Stem("maltrattarla"), "maltratt" );
	deepEqual( Stem("maltrattata"), "maltratt" );
	deepEqual( Stem("maltrattavan"), "maltrattavan" );
	deepEqual( Stem("malum"), "malum" );
	deepEqual( Stem("malumori"), "malumor" );
	deepEqual( Stem("malusci"), "malusc" );
	deepEqual( Stem("malvaggità"), "malvagg" );
	deepEqual( Stem("malvagi"), "malvag" );
	deepEqual( Stem("malvagio"), "malvag" );
	deepEqual( Stem("malvagità"), "malvag" );
	deepEqual( Stem("malvestitito"), "malvestit" );
	deepEqual( Stem("malvestito"), "malvest" );
	deepEqual( Stem("malvezzi"), "malvezz" );
	deepEqual( Stem("malvinas"), "malvinas" );
	deepEqual( Stem("malvivente"), "malvivent" );
	deepEqual( Stem("malviventi"), "malvivent" );
	deepEqual( Stem("malvolentieri"), "malvolentier" );
	deepEqual( Stem("mamma"), "mamm" );
	deepEqual( Stem("mammella"), "mammell" );
	deepEqual( Stem("mammì"), "mamm" );
	deepEqual( Stem("man"), "man" );
	deepEqual( Stem("manacaparù"), "manacaparù" );
	deepEqual( Stem("manacce"), "manacc" );
	deepEqual( Stem("manaccia"), "manacc" );
	deepEqual( Stem("management"), "management" );
	deepEqual( Stem("manager"), "manager" );
	deepEqual( Stem("manageriali"), "managerial" );
	deepEqual( Stem("manantes"), "manantes" );
	deepEqual( Stem("manata"), "man" );
	deepEqual( Stem("manate"), "man" );
	deepEqual( Stem("manaus"), "manaus" );
	deepEqual( Stem("manca"), "manc" );
	deepEqual( Stem("mancamenti"), "manc" );
	deepEqual( Stem("mancamento"), "manc" );
	deepEqual( Stem("mancandogli"), "manc" );
	deepEqual( Stem("mancano"), "manc" );
	deepEqual( Stem("mancante"), "mancant" );
	deepEqual( Stem("mancanza"), "mancanz" );
	deepEqual( Stem("mancar"), "manc" );
	deepEqual( Stem("mancare"), "manc" );
	deepEqual( Stem("mancargli"), "manc" );
	deepEqual( Stem("mancarmi"), "manc" );
	deepEqual( Stem("mancaron"), "mancaron" );
	deepEqual( Stem("mancarono"), "manc" );
	deepEqual( Stem("mancarvi"), "manc" );
	deepEqual( Stem("mancasse"), "manc" );
	deepEqual( Stem("mancassero"), "manc" );
	deepEqual( Stem("mancata"), "manc" );
	deepEqual( Stem("mancate"), "manc" );
	deepEqual( Stem("mancati"), "manc" );
	deepEqual( Stem("mancato"), "manc" );
	deepEqual( Stem("mancava"), "manc" );
	deepEqual( Stem("mancavan"), "mancavan" );
	deepEqual( Stem("mancavano"), "manc" );
	deepEqual( Stem("mancera"), "mancer" );
	deepEqual( Stem("manche"), "manc" );
	deepEqual( Stem("mancherà"), "manc" );
	deepEqual( Stem("mancheranno"), "manc" );
	deepEqual( Stem("mancherebbe"), "manc" );
	deepEqual( Stem("mancherete"), "manc" );
	deepEqual( Stem("mancherò"), "manc" );
	deepEqual( Stem("manches"), "manches" );
	deepEqual( Stem("manchester"), "manchester" );
	deepEqual( Stem("manchi"), "manc" );
	deepEqual( Stem("manchino"), "manchin" );
	deepEqual( Stem("mancia"), "manc" );
	deepEqual( Stem("manciata"), "manc" );
	deepEqual( Stem("mancina"), "mancin" );
	deepEqual( Stem("mancine"), "mancin" );
	deepEqual( Stem("mancini"), "mancin" );
	deepEqual( Stem("mancino"), "mancin" );
	deepEqual( Stem("mancò"), "manc" );
	deepEqual( Stem("manconi"), "mancon" );
	deepEqual( Stem("mancuso"), "mancus" );
	deepEqual( Stem("manda"), "mand" );
	deepEqual( Stem("mandalari"), "mandalar" );
	deepEqual( Stem("mandan"), "mandan" );
	deepEqual( Stem("mandando"), "mand" );
	deepEqual( Stem("mandante"), "mandant" );
	deepEqual( Stem("mandar"), "mand" );
	deepEqual( Stem("mandare"), "mand" );
	deepEqual( Stem("mandarla"), "mand" );
	deepEqual( Stem("mandarli"), "mand" );
	deepEqual( Stem("mandarlo"), "mand" );
	deepEqual( Stem("mandarono"), "mand" );
	deepEqual( Stem("mandasse"), "mand" );
	deepEqual( Stem("mandassi"), "mand" );
	deepEqual( Stem("mandata"), "mand" );
	deepEqual( Stem("mandate"), "mand" );
	deepEqual( Stem("mandateglieli"), "mandategliel" );
	deepEqual( Stem("mandati"), "mand" );
	deepEqual( Stem("mandato"), "mand" );
	deepEqual( Stem("mandava"), "mand" );
	deepEqual( Stem("mandavamo"), "mand" );
	deepEqual( Stem("mandavan"), "mandavan" );
	deepEqual( Stem("mandavano"), "mand" );
	deepEqual( Stem("mandela"), "mandel" );
	deepEqual( Stem("mandelli"), "mandell" );
	deepEqual( Stem("manderà"), "mand" );
	deepEqual( Stem("manderai"), "mand" );
	deepEqual( Stem("manderebbe"), "mand" );
	deepEqual( Stem("manderemo"), "mand" );
	deepEqual( Stem("manderò"), "mand" );
	deepEqual( Stem("mandi"), "mand" );
	deepEqual( Stem("mandiate"), "mand" );
	deepEqual( Stem("mando"), "mand" );
	deepEqual( Stem("mandò"), "mand" );
	deepEqual( Stem("mandorlo"), "mandorl" );
	deepEqual( Stem("mandra"), "mandr" );
	deepEqual( Stem("maneggi"), "manegg" );
	deepEqual( Stem("maneggiare"), "manegg" );
	deepEqual( Stem("maneggiarlo"), "manegg" );
	deepEqual( Stem("maneggiarne"), "manegg" );
	deepEqual( Stem("maneggio"), "manegg" );
	deepEqual( Stem("maneggj"), "maneggj" );
	deepEqual( Stem("manero"), "maner" );
	deepEqual( Stem("manette"), "manett" );
	deepEqual( Stem("manetti"), "manett" );
	deepEqual( Stem("manfred"), "manfred" );
	deepEqual( Stem("manganiello"), "manganiell" );
	deepEqual( Stem("mangeranno"), "mang" );
	deepEqual( Stem("mangeremo"), "mang" );
	deepEqual( Stem("mangerò"), "mang" );
	deepEqual( Stem("mangi"), "mang" );
	deepEqual( Stem("mangia"), "mang" );
	deepEqual( Stem("mangian"), "mangian" );
	deepEqual( Stem("mangiando"), "mang" );
	deepEqual( Stem("mangiano"), "mang" );
	deepEqual( Stem("mangiar"), "mang" );
	deepEqual( Stem("mangiare"), "mang" );
	deepEqual( Stem("mangiarne"), "mang" );
	deepEqual( Stem("mangiasse"), "mang" );
	deepEqual( Stem("mangiate"), "mang" );
	deepEqual( Stem("mangiatina"), "mangiatin" );
	deepEqual( Stem("mangiato"), "mang" );
	deepEqual( Stem("mangiatore"), "mangiator" );
	deepEqual( Stem("mangiavano"), "mang" );
	deepEqual( Stem("mangiò"), "mang" );
	deepEqual( Stem("mangone"), "mangon" );
	deepEqual( Stem("mani"), "man" );
	deepEqual( Stem("manica"), "manic" );
	deepEqual( Stem("maniche"), "manic" );
	deepEqual( Stem("manichi"), "manic" );
	deepEqual( Stem("manichini"), "manichin" );
	deepEqual( Stem("manichino"), "manichin" );
	deepEqual( Stem("manico"), "manic" );
	deepEqual( Stem("manicone"), "manicon" );
	deepEqual( Stem("maniera"), "manier" );
	deepEqual( Stem("manieraccia"), "manieracc" );
	deepEqual( Stem("maniere"), "man" );
	deepEqual( Stem("maniero"), "manier" );
	deepEqual( Stem("manierosa"), "manier" );
	deepEqual( Stem("manieroso"), "manier" );
	deepEqual( Stem("manif"), "manif" );
	deepEqual( Stem("manifattura"), "manifattur" );
	deepEqual( Stem("manifatturiera"), "manifatturier" );
	deepEqual( Stem("manifesta"), "manifest" );
	deepEqual( Stem("manifestamente"), "manifest" );
	deepEqual( Stem("manifestano"), "manifest" );
	deepEqual( Stem("manifestanti"), "manifest" );
	deepEqual( Stem("manifestare"), "manifest" );
	deepEqual( Stem("manifestarsi"), "manifest" );
	deepEqual( Stem("manifestata"), "manifest" );
	deepEqual( Stem("manifestate"), "manifest" );
	deepEqual( Stem("manifestato"), "manifest" );
	deepEqual( Stem("manifestava"), "manifest" );
	deepEqual( Stem("manifestazione"), "manifest" );
	deepEqual( Stem("manifestazioni"), "manifest" );
	deepEqual( Stem("manifeste"), "manifest" );
	deepEqual( Stem("manifesti"), "manifest" );
	deepEqual( Stem("manifestini"), "manifestin" );
	deepEqual( Stem("manifesto"), "manifest" );
	deepEqual( Stem("manifestò"), "manifest" );
	deepEqual( Stem("manighetti"), "manighett" );
	deepEqual( Stem("maniglia"), "manigl" );
	deepEqual( Stem("manigoldi"), "manigold" );
	deepEqual( Stem("manigoldo"), "manigold" );
	deepEqual( Stem("manila"), "manil" );
	deepEqual( Stem("manina"), "manin" );
	deepEqual( Stem("manipolare"), "manipol" );
	deepEqual( Stem("manipolazione"), "manipol" );
	deepEqual( Stem("manipur"), "manipur" );
	deepEqual( Stem("manitur"), "manitur" );
	deepEqual( Stem("manna"), "mann" );
	deepEqual( Stem("mannini"), "mannin" );
	deepEqual( Stem("mano"), "man" );
	deepEqual( Stem("manomettere"), "manomett" );
	deepEqual( Stem("manos"), "manos" );
	deepEqual( Stem("manoscritte"), "manoscritt" );
	deepEqual( Stem("manoscritti"), "manoscritt" );
	deepEqual( Stem("manoscritto"), "manoscritt" );
	deepEqual( Stem("manovra"), "manovr" );
	deepEqual( Stem("manovre"), "manovr" );
	deepEqual( Stem("manovrina"), "manovrin" );
	deepEqual( Stem("mansarda"), "mansard" );
	deepEqual( Stem("mansueta"), "mansuet" );
	deepEqual( Stem("mansuetudine"), "mansuetudin" );
	deepEqual( Stem("mantello"), "mantell" );
	deepEqual( Stem("mantenendo"), "manten" );
	deepEqual( Stem("mantener"), "mantener" );
	deepEqual( Stem("mantenere"), "manten" );
	deepEqual( Stem("mantenergli"), "manten" );
	deepEqual( Stem("mantenerhe"), "mantenerh" );
	deepEqual( Stem("mantenerla"), "manten" );
	deepEqual( Stem("mantenerlo"), "manten" );
	deepEqual( Stem("mantenerne"), "manten" );
	deepEqual( Stem("mantenervi"), "manten" );
	deepEqual( Stem("mantenesse"), "manteness" );
	deepEqual( Stem("mantenete"), "manten" );
	deepEqual( Stem("mantenevano"), "manten" );
	deepEqual( Stem("mantenga"), "manteng" );
	deepEqual( Stem("mantenimento"), "manten" );
	deepEqual( Stem("mantenne"), "mantenn" );
	deepEqual( Stem("mantenuta"), "manten" );
	deepEqual( Stem("mantenute"), "manten" );
	deepEqual( Stem("mantenuti"), "manten" );
	deepEqual( Stem("mantenuto"), "manten" );
	deepEqual( Stem("manterrà"), "manterr" );
	deepEqual( Stem("mantiene"), "mantien" );
	deepEqual( Stem("manto"), "mant" );
	deepEqual( Stem("mantova"), "mantov" );
	deepEqual( Stem("mantovana"), "mantovan" );
	deepEqual( Stem("mantovani"), "mantovan" );
	deepEqual( Stem("mantovano"), "mantov" );
	deepEqual( Stem("manu"), "manu" );
	deepEqual( Stem("manuale"), "manual" );
	deepEqual( Stem("manuela"), "manuel" );
	deepEqual( Stem("manufatta"), "manufatt" );
	deepEqual( Stem("manutenzione"), "manutenzion" );
	deepEqual( Stem("manzi"), "manz" );
	deepEqual( Stem("manzo"), "manz" );
	deepEqual( Stem("manzoni"), "manzon" );
	deepEqual( Stem("mappa"), "mapp" );
	deepEqual( Stem("mar"), "mar" );
	deepEqual( Stem("maradona"), "maradon" );
	deepEqual( Stem("maran"), "maran" );
	deepEqual( Stem("marangon"), "marangon" );
	deepEqual( Stem("marangoni"), "marangon" );
	deepEqual( Stem("marano"), "mar" );
	deepEqual( Stem("marassi"), "mar" );
	deepEqual( Stem("maratona"), "maraton" );
	deepEqual( Stem("maratoneti"), "maratonet" );
	deepEqual( Stem("maraviglia"), "maravigl" );
	deepEqual( Stem("maravigliare"), "maravigl" );
	deepEqual( Stem("maravigliassero"), "maravigl" );
	deepEqual( Stem("maravigliata"), "maravigl" );
	deepEqual( Stem("maravigliate"), "maravigl" );
	deepEqual( Stem("maravigliati"), "maravigl" );
	deepEqual( Stem("maravigliato"), "maravigl" );
	deepEqual( Stem("maravigliava"), "maravigl" );
	deepEqual( Stem("maraviglie"), "maravigl" );
	deepEqual( Stem("maraviglierei"), "maravigl" );
	deepEqual( Stem("maraviglio"), "maravigl" );
	deepEqual( Stem("maravigliosi"), "maravigl" );
	deepEqual( Stem("marc"), "marc" );
	deepEqual( Stem("marca"), "marc" );
	deepEqual( Stem("marcao"), "marca" );
	deepEqual( Stem("marcatori"), "marcator" );
	deepEqual( Stem("marcatura"), "marcatur" );
	deepEqual( Stem("marce"), "marc" );
	deepEqual( Stem("marcellino"), "marcellin" );
	deepEqual( Stem("marcello"), "marcell" );
	deepEqual( Stem("marcelo"), "marcel" );
	deepEqual( Stem("marche"), "marc" );
	deepEqual( Stem("marchegiani"), "marchegian" );
	deepEqual( Stem("marchese"), "marches" );
	deepEqual( Stem("marchi"), "marc" );
	deepEqual( Stem("marchigiana"), "marchigian" );
	deepEqual( Stem("marchigiani"), "marchigian" );
	deepEqual( Stem("marchingegno"), "marchingegn" );
	deepEqual( Stem("marchio"), "marc" );
	deepEqual( Stem("marchioro"), "marchior" );
	deepEqual( Stem("marcia"), "marc" );
	deepEqual( Stem("marciagranparadiso"), "marciagranparadis" );
	deepEqual( Stem("marcialonga"), "marcialong" );
	deepEqual( Stem("marciare"), "marc" );
	deepEqual( Stem("marcio"), "marc" );
	deepEqual( Stem("marciose"), "marcios" );
	deepEqual( Stem("marco"), "marc" );
	deepEqual( Stem("marcolin"), "marcolin" );
	deepEqual( Stem("marcon"), "marcon" );
	deepEqual( Stem("marconi"), "marcon" );
	deepEqual( Stem("marcos"), "marcos" );
	deepEqual( Stem("marcus"), "marcus" );
	deepEqual( Stem("mare"), "mar" );
	deepEqual( Stem("marea"), "mare" );
	deepEqual( Stem("marechiaro"), "marechiar" );
	deepEqual( Stem("mareggini"), "mareggin" );
	deepEqual( Stem("maremoto"), "maremot" );
	deepEqual( Stem("marenco"), "marenc" );
	deepEqual( Stem("marengo"), "mareng" );
	deepEqual( Stem("maresca"), "maresc" );
	deepEqual( Stem("margaret"), "margaret" );
	deepEqual( Stem("margarethe"), "margareth" );
	deepEqual( Stem("marghera"), "margher" );
	deepEqual( Stem("margherita"), "margher" );
	deepEqual( Stem("marginale"), "marginal" );
	deepEqual( Stem("marginalmente"), "marginal" );
	deepEqual( Stem("margine"), "margin" );
	deepEqual( Stem("margini"), "margin" );
	deepEqual( Stem("margiotta"), "margiott" );
	deepEqual( Stem("mari"), "mar" );
	deepEqual( Stem("maria"), "mar" );
	deepEqual( Stem("mariangela"), "mariangel" );
	deepEqual( Stem("mariani"), "marian" );
	deepEqual( Stem("marianna"), "mariann" );
	deepEqual( Stem("marianopoli"), "marianopol" );
	deepEqual( Stem("maribor"), "maribor" );
	deepEqual( Stem("marie"), "mar" );
	deepEqual( Stem("mariella"), "mariell" );
	deepEqual( Stem("marina"), "marin" );
	deepEqual( Stem("marinai"), "marina" );
	deepEqual( Stem("marine"), "marin" );
	deepEqual( Stem("marinerie"), "mariner" );
	deepEqual( Stem("marines"), "marines" );
	deepEqual( Stem("marini"), "marin" );
	deepEqual( Stem("marino"), "marin" );
	deepEqual( Stem("mario"), "mar" );
	deepEqual( Stem("mariolina"), "mariolin" );
	deepEqual( Stem("mariolo"), "mariol" );
	deepEqual( Stem("mariotto"), "mariott" );
	deepEqual( Stem("maritar"), "marit" );
	deepEqual( Stem("maritarci"), "marit" );
	deepEqual( Stem("maritare"), "marit" );
	deepEqual( Stem("maritarli"), "marit" );
	deepEqual( Stem("maritarmi"), "marit" );
	deepEqual( Stem("maritarsi"), "marit" );
	deepEqual( Stem("maritarvi"), "marit" );
	deepEqual( Stem("maritata"), "marit" );
	deepEqual( Stem("maritate"), "marit" );
	deepEqual( Stem("maritati"), "marit" );
	deepEqual( Stem("mariti"), "mar" );
	deepEqual( Stem("maritima"), "maritim" );
	deepEqual( Stem("marito"), "mar" );
	deepEqual( Stem("marittima"), "marittim" );
	deepEqual( Stem("marittime"), "marittim" );
	deepEqual( Stem("marittimi"), "marittim" );
	deepEqual( Stem("marittimo"), "marittim" );
	deepEqual( Stem("mark"), "mark" );
	deepEqual( Stem("markent"), "markent" );
	deepEqual( Stem("market"), "market" );
	deepEqual( Stem("markets"), "markets" );
	deepEqual( Stem("markin"), "markin" );
	deepEqual( Stem("markov"), "markov" );
	deepEqual( Stem("marmaglia"), "marmagl" );
	deepEqual( Stem("marmi"), "marm" );
	deepEqual( Stem("marmo"), "marm" );
	deepEqual( Stem("marocchi"), "marocc" );
	deepEqual( Stem("marocchino"), "marocchin" );
	deepEqual( Stem("marocco"), "marocc" );
	deepEqual( Stem("maroni"), "maron" );
	deepEqual( Stem("maronianì"), "maronian" );
	deepEqual( Stem("maroniavrebbe"), "maroniavrebb" );
	deepEqual( Stem("marpol"), "marpol" );
	deepEqual( Stem("marques"), "marques" );
	deepEqual( Stem("marra"), "marr" );
	deepEqual( Stem("marruche"), "marruc" );
	deepEqual( Stem("marsala"), "marsal" );
	deepEqual( Stem("marshall"), "marshall" );
	deepEqual( Stem("marsica"), "marsic" );
	deepEqual( Stem("marsiglia"), "marsigl" );
	deepEqual( Stem("marsili"), "marsil" );
	deepEqual( Stem("marta"), "mart" );
	deepEqual( Stem("martaban"), "martaban" );
	deepEqual( Stem("martedi"), "marted" );
	deepEqual( Stem("martedì"), "marted" );
	deepEqual( Stem("martella"), "martell" );
	deepEqual( Stem("martellandole"), "martell" );
	deepEqual( Stem("martellar"), "martell" );
	deepEqual( Stem("martelli"), "martell" );
	deepEqual( Stem("martello"), "martell" );
	deepEqual( Stem("martens"), "martens" );
	deepEqual( Stem("martigues"), "martigues" );
	deepEqual( Stem("martin"), "martin" );
	deepEqual( Stem("martinazzoli"), "martinazzol" );
	deepEqual( Stem("martino"), "martin" );
	deepEqual( Stem("martire"), "mart" );
	deepEqual( Stem("martiri"), "martir" );
	deepEqual( Stem("martirio"), "martir" );
	deepEqual( Stem("martirizzano"), "martirizz" );
	deepEqual( Stem("martirizzare"), "martirizz" );
	deepEqual( Stem("martirizzava"), "martirizz" );
	deepEqual( Stem("martoriato"), "martor" );
	deepEqual( Stem("martuffello"), "martuffell" );
	deepEqual( Stem("marvasi"), "marvas" );
	deepEqual( Stem("marx"), "marx" );
	deepEqual( Stem("marxista"), "marxist" );
	deepEqual( Stem("marzo"), "marz" );
	deepEqual( Stem("marzotto"), "marzott" );
	deepEqual( Stem("mas"), "mas" );
	deepEqual( Stem("mascalzone"), "mascalzon" );
	deepEqual( Stem("mascalzoni"), "mascalzon" );
	deepEqual( Stem("mascara"), "mascar" );
	deepEqual( Stem("maschera"), "mascher" );
	deepEqual( Stem("mascherati"), "mascher" );
	deepEqual( Stem("mascherato"), "mascher" );
	deepEqual( Stem("mascherava"), "mascher" );
	deepEqual( Stem("maschere"), "masc" );
	deepEqual( Stem("maschi"), "masc" );
	deepEqual( Stem("maschia"), "masc" );
	deepEqual( Stem("maschie"), "masc" );
	deepEqual( Stem("maschile"), "maschil" );
	deepEqual( Stem("maschili"), "maschil" );
	deepEqual( Stem("maserati"), "maser" );
	deepEqual( Stem("masetti"), "masett" );
	deepEqual( Stem("masi"), "mas" );
	deepEqual( Stem("masiero"), "masier" );
	deepEqual( Stem("masitto"), "masitt" );
	deepEqual( Stem("maskadov"), "maskadov" );
	deepEqual( Stem("maske"), "mask" );
	deepEqual( Stem("maskhadov"), "maskhadov" );
	deepEqual( Stem("masnada"), "masnad" );
	deepEqual( Stem("masnadieri"), "masnadier" );
	deepEqual( Stem("masnadiero"), "masnadier" );
	deepEqual( Stem("masone"), "mason" );
	deepEqual( Stem("maspero"), "masper" );
	deepEqual( Stem("mass"), "mass" );
	deepEqual( Stem("massa"), "mass" );
	deepEqual( Stem("massachusetts"), "massachusetts" );
	deepEqual( Stem("massaggi"), "massagg" );
	deepEqual( Stem("massaio"), "massai" );
	deepEqual( Stem("massaro"), "massar" );
	deepEqual( Stem("masse"), "mass" );
	deepEqual( Stem("masserizie"), "masseriz" );
	deepEqual( Stem("massese"), "masses" );
	deepEqual( Stem("massi"), "mass" );
	deepEqual( Stem("massicce"), "massicc" );
	deepEqual( Stem("massicci"), "massicc" );
	deepEqual( Stem("massiccia"), "massicc" );
	deepEqual( Stem("massiccio"), "massicc" );
	deepEqual( Stem("massima"), "massim" );
	deepEqual( Stem("massimale"), "massimal" );
	deepEqual( Stem("massimali"), "massimal" );
	deepEqual( Stem("massimalismo"), "massimal" );
	deepEqual( Stem("massime"), "massim" );
	deepEqual( Stem("massimi"), "massim" );
	deepEqual( Stem("massimo"), "massim" );
	deepEqual( Stem("masso"), "mass" );
	deepEqual( Stem("massoneria"), "massoner" );
	deepEqual( Stem("massonico"), "masson" );
	deepEqual( Stem("mastella"), "mastell" );
	deepEqual( Stem("master"), "master" );
	deepEqual( Stem("masters"), "masters" );
	deepEqual( Stem("masticando"), "mastic" );
	deepEqual( Stem("masticarla"), "mastic" );
	deepEqual( Stem("masticarsi"), "mastic" );
	deepEqual( Stem("mastini"), "mastin" );
	deepEqual( Stem("mastroianni"), "mastroiann" );
	deepEqual( Stem("mastrota"), "mastrot" );
	deepEqual( Stem("matadori"), "matador" );
	deepEqual( Stem("matasse"), "mat" );
	deepEqual( Stem("match"), "matc" );
	deepEqual( Stem("matematico"), "matemat" );
	deepEqual( Stem("matematicò"), "matematic" );
	deepEqual( Stem("matera"), "mater" );
	deepEqual( Stem("materassa"), "materass" );
	deepEqual( Stem("materassina"), "materassin" );
	deepEqual( Stem("materassine"), "materassin" );
	deepEqual( Stem("materazzi"), "materazz" );
	deepEqual( Stem("materia"), "mater" );
	deepEqual( Stem("materiale"), "material" );
	deepEqual( Stem("materialè"), "material" );
	deepEqual( Stem("materiali"), "material" );
	deepEqual( Stem("materialmente"), "material" );
	deepEqual( Stem("materialone"), "materialon" );
	deepEqual( Stem("materie"), "mater" );
	deepEqual( Stem("materna"), "matern" );
	deepEqual( Stem("maternità"), "matern" );
	deepEqual( Stem("materno"), "matern" );
	deepEqual( Stem("mathieu"), "mathieu" );
	deepEqual( Stem("matita"), "mat" );
	deepEqual( Stem("matlala"), "matlal" );
	deepEqual( Stem("matrice"), "matric" );
	deepEqual( Stem("matricolato"), "matricol" );
	deepEqual( Stem("matrimoni"), "matrimon" );
	deepEqual( Stem("matrimoniale"), "matrimonial" );
	deepEqual( Stem("matrimoniali"), "matrimonial" );
	deepEqual( Stem("matrimonii"), "matrimon" );
	deepEqual( Stem("matrimonio"), "matrimon" );
	deepEqual( Stem("matrimonium"), "matrimonium" );
	deepEqual( Stem("matrona"), "matron" );
	deepEqual( Stem("mattana"), "mattan" );
	deepEqual( Stem("mattarella"), "mattarell" );
	deepEqual( Stem("matteo"), "matte" );
	deepEqual( Stem("matteoli"), "matteol" );
	deepEqual( Stem("matteotti"), "matteott" );
	deepEqual( Stem("matterello"), "matterell" );
	deepEqual( Stem("matteucci"), "matteucc" );
	deepEqual( Stem("matti"), "matt" );
	deepEqual( Stem("mattina"), "mattin" );
	deepEqual( Stem("mattinata"), "mattin" );
	deepEqual( Stem("mattino"), "mattin" );
	deepEqual( Stem("mattioli"), "mattiol" );
	deepEqual( Stem("matto"), "matt" );
	deepEqual( Stem("mattone"), "matton" );
	deepEqual( Stem("mattoni"), "matton" );
	deepEqual( Stem("mattutine"), "mattutin" );
	deepEqual( Stem("matun"), "matun" );
	deepEqual( Stem("matura"), "matur" );
	deepEqual( Stem("maturando"), "matur" );
	deepEqual( Stem("maturare"), "matur" );
	deepEqual( Stem("maturato"), "matur" );
	deepEqual( Stem("maturazione"), "matur" );
	deepEqual( Stem("mature"), "matur" );
	deepEqual( Stem("maturerà"), "matur" );
	deepEqual( Stem("maturi"), "matur" );
	deepEqual( Stem("maturo"), "matur" );
	deepEqual( Stem("mauritania"), "mauritan" );
	deepEqual( Stem("maurizio"), "mauriz" );
	deepEqual( Stem("mauro"), "maur" );
	deepEqual( Stem("mausoleo"), "mausole" );
	deepEqual( Stem("max"), "max" );
	deepEqual( Stem("maxialleanza"), "maxiall" );
	deepEqual( Stem("maxima"), "maxim" );
	deepEqual( Stem("maximum"), "maximum" );
	deepEqual( Stem("maxiordine"), "maxiordin" );
	deepEqual( Stem("maxischermo"), "maxischerm" );
	deepEqual( Stem("maya"), "may" );
	deepEqual( Stem("mayer"), "mayer" );
	deepEqual( Stem("mayock"), "mayock" );
	deepEqual( Stem("mays"), "mays" );
	deepEqual( Stem("mazenta"), "mazent" );
	deepEqual( Stem("mazzanti"), "mazzant" );
	deepEqual( Stem("mazzantini"), "mazzantin" );
	deepEqual( Stem("mazzeo"), "mazze" );
	deepEqual( Stem("mazzetti"), "mazzett" );
	deepEqual( Stem("mazzetto"), "mazzett" );
	deepEqual( Stem("mazzo"), "mazz" );
	deepEqual( Stem("mazzola"), "mazzol" );
	deepEqual( Stem("mazzone"), "mazzon" );
	deepEqual( Stem("mb"), "mb" );
	deepEqual( Stem("mc"), "mc" );
	deepEqual( Stem("mccartney"), "mccartney" );
	deepEqual( Stem("mcquinn"), "mcquinn" );
	deepEqual( Stem("mdp"), "mdp" );
	deepEqual( Stem("me"), "me" );
	deepEqual( Stem("mea"), "mea" );
	deepEqual( Stem("meana"), "mean" );
	deepEqual( Stem("meazza"), "meazz" );
	deepEqual( Stem("mecca"), "mecc" );
	deepEqual( Stem("meccaniche"), "meccan" );
	deepEqual( Stem("meccanici"), "meccan" );
	deepEqual( Stem("meccanico"), "meccan" );
	deepEqual( Stem("meccanismi"), "meccan" );
	deepEqual( Stem("meccanismo"), "meccan" );
	deepEqual( Stem("meccanizzate"), "meccanizz" );
	deepEqual( Stem("meco"), "mec" );
	deepEqual( Stem("med"), "med" );
	deepEqual( Stem("meda"), "med" );
	deepEqual( Stem("medaglia"), "medagl" );
	deepEqual( Stem("medaglie"), "medagl" );
	deepEqual( Stem("medail"), "medail" );
	deepEqual( Stem("medesim"), "medesim" );
	deepEqual( Stem("medesima"), "medesim" );
	deepEqual( Stem("medesime"), "medesim" );
	deepEqual( Stem("medesimi"), "medesim" );
	deepEqual( Stem("medesimo"), "medesim" );
	deepEqual( Stem("medesmo"), "medesm" );
	deepEqual( Stem("medi"), "med" );
	deepEqual( Stem("media"), "med" );
	deepEqual( Stem("mediante"), "mediant" );
	deepEqual( Stem("mediare"), "med" );
	deepEqual( Stem("mediatori"), "mediator" );
	deepEqual( Stem("mediatrice"), "mediatric" );
	deepEqual( Stem("mediazione"), "mediazion" );
	deepEqual( Stem("medica"), "medic" );
	deepEqual( Stem("medicare"), "medic" );
	deepEqual( Stem("medicati"), "medic" );
	deepEqual( Stem("mediceo"), "medice" );
	deepEqual( Stem("medici"), "medic" );
	deepEqual( Stem("medicina"), "medicin" );
	deepEqual( Stem("medicinale"), "medicinal" );
	deepEqual( Stem("medicinali"), "medicinal" );
	deepEqual( Stem("medicine"), "medicin" );
	deepEqual( Stem("medico"), "medic" );
	deepEqual( Stem("medie"), "med" );
	deepEqual( Stem("medio"), "med" );
	deepEqual( Stem("mediob"), "mediob" );
	deepEqual( Stem("mediobanca"), "mediobanc" );
	deepEqual( Stem("mediocre"), "mediocr" );
	deepEqual( Stem("mediocredito"), "mediocred" );
	deepEqual( Stem("mediocremente"), "mediocr" );
	deepEqual( Stem("mediocri"), "mediocr" );
	deepEqual( Stem("mediocrità"), "mediocr" );
	deepEqual( Stem("mediolani"), "mediolan" );
	deepEqual( Stem("mediologica"), "mediolog" );
	deepEqual( Stem("mediomassimi"), "mediomassim" );
	deepEqual( Stem("mediorientali"), "medioriental" );
	deepEqual( Stem("medita"), "med" );
	deepEqual( Stem("meditando"), "medit" );
	deepEqual( Stem("meditano"), "medit" );
	deepEqual( Stem("meditare"), "medit" );
	deepEqual( Stem("meditata"), "medit" );
	deepEqual( Stem("meditava"), "medit" );
	deepEqual( Stem("meditazione"), "medit" );
	deepEqual( Stem("mediteraneo"), "mediterane" );
	deepEqual( Stem("mediterranea"), "mediterrane" );
	deepEqual( Stem("mediterranee"), "mediterrane" );
	deepEqual( Stem("mediterraneo"), "mediterrane" );
	deepEqual( Stem("meditettanean"), "meditettanean" );
	deepEqual( Stem("meeting"), "meeting" );
	deepEqual( Stem("mega"), "meg" );
	deepEqual( Stem("megabyte"), "megabyt" );
	deepEqual( Stem("megabytè"), "megabyt" );
	deepEqual( Stem("megaschermo"), "megascherm" );
	deepEqual( Stem("megawatt"), "megawatt" );
	deepEqual( Stem("meglio"), "megl" );
	deepEqual( Stem("mejor"), "mejor" );
	deepEqual( Stem("mela"), "mel" );
	deepEqual( Stem("melander"), "melander" );
	deepEqual( Stem("melania"), "melan" );
	deepEqual( Stem("melato"), "mel" );
	deepEqual( Stem("melba"), "melb" );
	deepEqual( Stem("melchiori"), "melchior" );
	deepEqual( Stem("mele"), "mel" );
	deepEqual( Stem("melfi"), "melf" );
	deepEqual( Stem("melito"), "mel" );
	deepEqual( Stem("melletta"), "mellett" );
	deepEqual( Stem("melli"), "mell" );
	deepEqual( Stem("melosi"), "melos" );
	deepEqual( Stem("meluzzi"), "meluzz" );
	deepEqual( Stem("melzer"), "melzer" );
	deepEqual( Stem("membra"), "membr" );
	deepEqual( Stem("membri"), "membr" );
	deepEqual( Stem("membro"), "membr" );
	deepEqual( Stem("memorabile"), "memor" );
	deepEqual( Stem("memorabili"), "memor" );
	deepEqual( Stem("memorandum"), "memorandum" );
	deepEqual( Stem("memoria"), "memor" );
	deepEqual( Stem("memoriale"), "memorial" );
	deepEqual( Stem("memorie"), "memor" );
	deepEqual( Stem("men"), "men" );
	deepEqual( Stem("mena"), "men" );
	deepEqual( Stem("menadito"), "menad" );
	deepEqual( Stem("menando"), "men" );
	deepEqual( Stem("menano"), "men" );
	deepEqual( Stem("menar"), "men" );
	deepEqual( Stem("menare"), "men" );
	deepEqual( Stem("menassero"), "men" );
	deepEqual( Stem("menateci"), "menatec" );
	deepEqual( Stem("menati"), "men" );
	deepEqual( Stem("menato"), "men" );
	deepEqual( Stem("menava"), "men" );
	deepEqual( Stem("menavano"), "men" );
	deepEqual( Stem("menconi"), "mencon" );
	deepEqual( Stem("mendicarne"), "mendic" );
	deepEqual( Stem("mendicati"), "mendic" );
	deepEqual( Stem("mendichi"), "mendic" );
	deepEqual( Stem("mendico"), "mendic" );
	deepEqual( Stem("mendozza"), "mendozz" );
	deepEqual( Stem("menegatti"), "menegatt" );
	deepEqual( Stem("menegon"), "menegon" );
	deepEqual( Stem("mengacci"), "mengacc" );
	deepEqual( Stem("meni"), "men" );
	deepEqual( Stem("menia"), "men" );
	deepEqual( Stem("menico"), "menic" );
	deepEqual( Stem("meno"), "men" );
	deepEqual( Stem("menò"), "men" );
	deepEqual( Stem("menomamente"), "menom" );
	deepEqual( Stem("mensa"), "mens" );
	deepEqual( Stem("mense"), "mens" );
	deepEqual( Stem("mensile"), "mensil" );
	deepEqual( Stem("mensili"), "mensil" );
	deepEqual( Stem("mensuale"), "mensual" );
	deepEqual( Stem("menta"), "ment" );
	deepEqual( Stem("mentale"), "mental" );
	deepEqual( Stem("mentali"), "mental" );
	deepEqual( Stem("mentalità"), "mental" );
	deepEqual( Stem("mentalmente"), "mental" );
	deepEqual( Stem("mentana"), "mentan" );
	deepEqual( Stem("mente"), "ment" );
	deepEqual( Stem("menti"), "ment" );
	deepEqual( Stem("mentire"), "ment" );
	deepEqual( Stem("mentite"), "ment" );
	deepEqual( Stem("mentito"), "ment" );
	deepEqual( Stem("mentitore"), "mentitor" );
	deepEqual( Stem("mento"), "ment" );
	deepEqual( Stem("mentovare"), "mentov" );
	deepEqual( Stem("mentre"), "mentr" );
	deepEqual( Stem("menù"), "menù" );
	deepEqual( Stem("menziona"), "menzion" );
	deepEqual( Stem("menzionata"), "menzion" );
	deepEqual( Stem("menzione"), "menzion" );
	deepEqual( Stem("menzogna"), "menzogn" );
	deepEqual( Stem("menzogne"), "menzogn" );
	deepEqual( Stem("mer"), "mer" );
	deepEqual( Stem("mera"), "mer" );
	deepEqual( Stem("meramente"), "mer" );
	deepEqual( Stem("meraviglia"), "meravigl" );
	deepEqual( Stem("meravigliosa"), "meravigl" );
	deepEqual( Stem("mercante"), "mercant" );
	deepEqual( Stem("mercantessa"), "mercantess" );
	deepEqual( Stem("mercanti"), "mercant" );
	deepEqual( Stem("mercantile"), "mercantil" );
	deepEqual( Stem("mercanzia"), "mercanz" );
	deepEqual( Stem("mercanzie"), "mercanz" );
	deepEqual( Stem("mercati"), "merc" );
	deepEqual( Stem("mercatino"), "mercatin" );
	deepEqual( Stem("mercato"), "merc" );
	deepEqual( Stem("merce"), "merc" );
	deepEqual( Stem("mercè"), "merc" );
	deepEqual( Stem("merchant"), "merchant" );
	deepEqual( Stem("merci"), "merc" );
	deepEqual( Stem("mercificassero"), "mercific" );
	deepEqual( Stem("merckx"), "merckx" );
	deepEqual( Stem("mercoled"), "mercoled" );
	deepEqual( Stem("mercoledi"), "mercoled" );
	deepEqual( Stem("mercoledì"), "mercoled" );
	deepEqual( Stem("mercosur"), "mercosur" );
	deepEqual( Stem("merenda"), "mer" );
	deepEqual( Stem("merid"), "merid" );
	deepEqual( Stem("meridionale"), "meridional" );
	deepEqual( Stem("meridionali"), "meridional" );
	deepEqual( Stem("meridione"), "meridion" );
	deepEqual( Stem("merino"), "merin" );
	deepEqual( Stem("merita"), "mer" );
	deepEqual( Stem("meritano"), "merit" );
	deepEqual( Stem("meritare"), "merit" );
	deepEqual( Stem("meritarlo"), "merit" );
	deepEqual( Stem("meritata"), "merit" );
	deepEqual( Stem("meritatamente"), "meritat" );
	deepEqual( Stem("meritato"), "merit" );
	deepEqual( Stem("meritava"), "merit" );
	deepEqual( Stem("meritavano"), "merit" );
	deepEqual( Stem("meriterebbe"), "merit" );
	deepEqual( Stem("meritevole"), "meritevol" );
	deepEqual( Stem("meriti"), "mer" );
	deepEqual( Stem("merito"), "mer" );
	deepEqual( Stem("meritoria"), "meritor" );
	deepEqual( Stem("merka"), "merk" );
	deepEqual( Stem("merlene"), "merlen" );
	deepEqual( Stem("merli"), "merl" );
	deepEqual( Stem("merlo"), "merl" );
	deepEqual( Stem("merloni"), "merlon" );
	deepEqual( Stem("merlotti"), "merlott" );
	deepEqual( Stem("merluzzi"), "merluzz" );
	deepEqual( Stem("mero"), "mer" );
	deepEqual( Stem("merode"), "merod" );
	deepEqual( Stem("merone"), "meron" );
	deepEqual( Stem("merrill"), "merrill" );
	deepEqual( Stem("merval"), "merval" );
	deepEqual( Stem("mes"), "mes" );
	deepEqual( Stem("mescé"), "mesc" );
	deepEqual( Stem("mescendo"), "mesc" );
	deepEqual( Stem("mescendosi"), "mesc" );
	deepEqual( Stem("mescere"), "mesc" );
	deepEqual( Stem("mesceva"), "mesc" );
	deepEqual( Stem("meschina"), "meschin" );
	deepEqual( Stem("meschine"), "meschin" );
	deepEqual( Stem("meschinello"), "meschinell" );
	deepEqual( Stem("meschini"), "meschin" );
	deepEqual( Stem("meschino"), "meschin" );
	deepEqual( Stem("mescola"), "mescol" );
	deepEqual( Stem("mescolando"), "mescol" );
	deepEqual( Stem("mescolano"), "mescol" );
	deepEqual( Stem("mescolarsi"), "mescol" );
	deepEqual( Stem("mescolate"), "mescol" );
	deepEqual( Stem("mescolati"), "mescol" );
	deepEqual( Stem("mescolato"), "mescol" );
	deepEqual( Stem("mescolava"), "mescol" );
	deepEqual( Stem("mescuglio"), "mescugl" );
	deepEqual( Stem("mese"), "mes" );
	deepEqual( Stem("mesi"), "mes" );
	deepEqual( Stem("messa"), "mess" );
	deepEqual( Stem("messaggera"), "messagger" );
	deepEqual( Stem("messaggero"), "messagger" );
	deepEqual( Stem("messaggi"), "messagg" );
	deepEqual( Stem("messaggiero"), "messaggier" );
	deepEqual( Stem("messaggio"), "messagg" );
	deepEqual( Stem("messale"), "messal" );
	deepEqual( Stem("messe"), "mess" );
	deepEqual( Stem("messele"), "messel" );
	deepEqual( Stem("messer"), "messer" );
	deepEqual( Stem("messere"), "mess" );
	deepEqual( Stem("messi"), "mess" );
	deepEqual( Stem("messicana"), "messican" );
	deepEqual( Stem("messicane"), "messican" );
	deepEqual( Stem("messicani"), "messican" );
	deepEqual( Stem("messicano"), "messic" );
	deepEqual( Stem("messico"), "messic" );
	deepEqual( Stem("messina"), "messin" );
	deepEqual( Stem("messo"), "mess" );
	deepEqual( Stem("messori"), "messor" );
	deepEqual( Stem("messosi"), "messos" );
	deepEqual( Stem("mesta"), "mest" );
	deepEqual( Stem("mesti"), "mest" );
	deepEqual( Stem("mestiere"), "mest" );
	deepEqual( Stem("mestieri"), "mestier" );
	deepEqual( Stem("mestizia"), "mestiz" );
	deepEqual( Stem("mesto"), "mest" );
	deepEqual( Stem("mestolo"), "mestol" );
	deepEqual( Stem("meta"), "met" );
	deepEqual( Stem("metà"), "met" );
	deepEqual( Stem("metafisica"), "metafis" );
	deepEqual( Stem("metafisiche"), "metafis" );
	deepEqual( Stem("metafisico"), "metafis" );
	deepEqual( Stem("metafora"), "metafor" );
	deepEqual( Stem("metafore"), "metafor" );
	deepEqual( Stem("metall"), "metall" );
	deepEqual( Stem("metalli"), "metall" );
	deepEqual( Stem("metallo"), "metall" );
	deepEqual( Stem("metallurgiche"), "metallurg" );
	deepEqual( Stem("metallurgici"), "metallurg" );
	deepEqual( Stem("metallurgico"), "metallurg" );
	deepEqual( Stem("metalmeccanica"), "metalmeccan" );
	deepEqual( Stem("metalmeccaniche"), "metalmeccan" );
	deepEqual( Stem("metalmeccanici"), "metalmeccan" );
	deepEqual( Stem("metalmeccanico"), "metalmeccan" );
	deepEqual( Stem("metamorfosi"), "metamorf" );
	deepEqual( Stem("metaniere"), "metan" );
	deepEqual( Stem("metano"), "met" );
	deepEqual( Stem("metanopoli"), "metanopol" );
	deepEqual( Stem("metastasio"), "metastas" );
	deepEqual( Stem("meteo"), "mete" );
	deepEqual( Stem("meteorite"), "meteor" );
	deepEqual( Stem("meteorologia"), "meteorolog" );
	deepEqual( Stem("metereologia"), "metereolog" );
	deepEqual( Stem("meteria"), "meter" );
	deepEqual( Stem("meticolosamente"), "meticol" );
	deepEqual( Stem("metodi"), "metod" );
	deepEqual( Stem("metodo"), "metod" );
	deepEqual( Stem("metri"), "metr" );
	deepEqual( Stem("metro"), "metr" );
	deepEqual( Stem("metrò"), "metr" );
	deepEqual( Stem("metropolitana"), "metropolitan" );
	deepEqual( Stem("metta"), "mett" );
	deepEqual( Stem("mettano"), "mett" );
	deepEqual( Stem("mette"), "mett" );
	deepEqual( Stem("mettendo"), "mett" );
	deepEqual( Stem("mettendoci"), "mett" );
	deepEqual( Stem("mettendole"), "mett" );
	deepEqual( Stem("mettendosi"), "mett" );
	deepEqual( Stem("mettendovi"), "mett" );
	deepEqual( Stem("metter"), "metter" );
	deepEqual( Stem("metterà"), "mett" );
	deepEqual( Stem("metteranno"), "mett" );
	deepEqual( Stem("metterci"), "mett" );
	deepEqual( Stem("mettercisi"), "mettercis" );
	deepEqual( Stem("mettere"), "mett" );
	deepEqual( Stem("metterebbe"), "mett" );
	deepEqual( Stem("metteremo"), "mett" );
	deepEqual( Stem("metterete"), "mett" );
	deepEqual( Stem("mettergli"), "mett" );
	deepEqual( Stem("metterla"), "mett" );
	deepEqual( Stem("metterle"), "mett" );
	deepEqual( Stem("metterli"), "mett" );
	deepEqual( Stem("metterlo"), "mett" );
	deepEqual( Stem("mettermi"), "mett" );
	deepEqual( Stem("mettermici"), "metterm" );
	deepEqual( Stem("metterne"), "mett" );
	deepEqual( Stem("metterò"), "mett" );
	deepEqual( Stem("mettersela"), "mettersel" );
	deepEqual( Stem("mettersele"), "mettersel" );
	deepEqual( Stem("metterseli"), "mettersel" );
	deepEqual( Stem("mettersi"), "mett" );
	deepEqual( Stem("metterti"), "mett" );
	deepEqual( Stem("mettervi"), "mett" );
	deepEqual( Stem("mettesse"), "mettess" );
	deepEqual( Stem("mettessero"), "mett" );
	deepEqual( Stem("mettessimo"), "mettessim" );
	deepEqual( Stem("metteva"), "mett" );
	deepEqual( Stem("mettevan"), "mettevan" );
	deepEqual( Stem("mettevano"), "mett" );
	deepEqual( Stem("metti"), "mett" );
	deepEqual( Stem("mettiamo"), "mett" );
	deepEqual( Stem("mettila"), "mettil" );
	deepEqual( Stem("mettimale"), "mettimal" );
	deepEqual( Stem("metto"), "mett" );
	deepEqual( Stem("metton"), "metton" );
	deepEqual( Stem("mettono"), "mett" );
	deepEqual( Stem("metz"), "metz" );
	deepEqual( Stem("mexicana"), "mexican" );
	deepEqual( Stem("meyer"), "meyer" );
	deepEqual( Stem("mezz"), "mezz" );
	deepEqual( Stem("mezza"), "mezz" );
	deepEqual( Stem("mezzaluna"), "mezzalun" );
	deepEqual( Stem("mezzani"), "mezzan" );
	deepEqual( Stem("mezzanotte"), "mezzanott" );
	deepEqual( Stem("mezze"), "mezz" );
	deepEqual( Stem("mezzetta"), "mezzett" );
	deepEqual( Stem("mezzi"), "mezz" );
	deepEqual( Stem("mezzo"), "mezz" );
	deepEqual( Stem("mezzogiorno"), "mezzogiorn" );
	deepEqual( Stem("mficamente"), "mfic" );
	deepEqual( Stem("mg"), "mg" );
	deepEqual( Stem("mi"), "mi" );
	deepEqual( Stem("mia"), "mia" );
	deepEqual( Stem("miami"), "miam" );
	deepEqual( Stem("mib"), "mib" );
	deepEqual( Stem("mibtel"), "mibtel" );
	deepEqual( Stem("miccichè"), "miccic" );
	deepEqual( Stem("miceli"), "micel" );
	deepEqual( Stem("michael"), "michael" );
	deepEqual( Stem("michalkov"), "michalkov" );
	deepEqual( Stem("michel"), "michel" );
	deepEqual( Stem("michela"), "michel" );
	deepEqual( Stem("michelaccio"), "michelacc" );
	deepEqual( Stem("michele"), "michel" );
	deepEqual( Stem("micheletti"), "michelett" );
	deepEqual( Stem("michelle"), "michell" );
	deepEqual( Stem("michetti"), "michett" );
	deepEqual( Stem("micidiale"), "micidial" );
	deepEqual( Stem("micillo"), "micill" );
	deepEqual( Stem("microfono"), "microf" );
	deepEqual( Stem("micromagie"), "micromag" );
	deepEqual( Stem("microprocessori"), "microprocessor" );
	deepEqual( Stem("microsoft"), "microsoft" );
	deepEqual( Stem("mida"), "mid" );
	deepEqual( Stem("middle"), "middl" );
	deepEqual( Stem("midei"), "mide" );
	deepEqual( Stem("midget"), "midget" );
	deepEqual( Stem("mie"), "mie" );
	deepEqual( Stem("miei"), "mie" );
	deepEqual( Stem("mieli"), "miel" );
	deepEqual( Stem("miert"), "miert" );
	deepEqual( Stem("miete"), "miet" );
	deepEqual( Stem("mietere"), "miet" );
	deepEqual( Stem("mig"), "mig" );
	deepEqual( Stem("miglia"), "migl" );
	deepEqual( Stem("migliaia"), "migliai" );
	deepEqual( Stem("migliaio"), "migliai" );
	deepEqual( Stem("miglietta"), "migliett" );
	deepEqual( Stem("miglio"), "migl" );
	deepEqual( Stem("miglior"), "miglior" );
	deepEqual( Stem("migliora"), "miglior" );
	deepEqual( Stem("miglioramento"), "miglior" );
	deepEqual( Stem("migliorando"), "miglior" );
	deepEqual( Stem("migliorano"), "miglior" );
	deepEqual( Stem("migliorare"), "miglior" );
	deepEqual( Stem("migliorata"), "miglior" );
	deepEqual( Stem("migliorati"), "miglior" );
	deepEqual( Stem("migliorato"), "miglior" );
	deepEqual( Stem("migliore"), "miglior" );
	deepEqual( Stem("migliorerà"), "miglior" );
	deepEqual( Stem("migliori"), "miglior" );
	deepEqual( Stem("migo"), "mig" );
	deepEqual( Stem("miguel"), "miguel" );
	deepEqual( Stem("mih"), "mih" );
	deepEqual( Stem("mihajlovic"), "mihajlovic" );
	deepEqual( Stem("mike"), "mik" );
	deepEqual( Stem("mikhail"), "mikhail" );
	deepEqual( Stem("mikhalkov"), "mikhalkov" );
	deepEqual( Stem("miklos"), "miklos" );
	deepEqual( Stem("mil"), "mil" );
	deepEqual( Stem("mila"), "mil" );
	deepEqual( Stem("milan"), "milan" );
	deepEqual( Stem("milanese"), "milanes" );
	deepEqual( Stem("milanesi"), "milanes" );
	deepEqual( Stem("milani"), "milan" );
	deepEqual( Stem("milanista"), "milan" );
	deepEqual( Stem("milanisti"), "milan" );
	deepEqual( Stem("milano"), "mil" );
	deepEqual( Stem("milardi"), "milard" );
	deepEqual( Stem("milian"), "milian" );
	deepEqual( Stem("miliardarie"), "miliardar" );
	deepEqual( Stem("miliardi"), "miliard" );
	deepEqual( Stem("miliardo"), "miliard" );
	deepEqual( Stem("milion"), "milion" );
	deepEqual( Stem("milione"), "milion" );
	deepEqual( Stem("milioni"), "milion" );
	deepEqual( Stem("militante"), "milit" );
	deepEqual( Stem("militanti"), "milit" );
	deepEqual( Stem("militanza"), "milit" );
	deepEqual( Stem("militare"), "milit" );
	deepEqual( Stem("militari"), "militar" );
	deepEqual( Stem("militeck"), "militeck" );
	deepEqual( Stem("milizia"), "miliz" );
	deepEqual( Stem("miliziani"), "milizian" );
	deepEqual( Stem("milizie"), "miliz" );
	deepEqual( Stem("mill"), "mill" );
	deepEqual( Stem("millantato"), "millant" );
	deepEqual( Stem("millanteria"), "millanter" );
	deepEqual( Stem("mille"), "mill" );
	deepEqual( Stem("millennio"), "millenn" );
	deepEqual( Stem("miller"), "miller" );
	deepEqual( Stem("milo"), "mil" );
	deepEqual( Stem("mimì"), "mim" );
	deepEqual( Stem("mimmo"), "mimm" );
	deepEqual( Stem("mimouni"), "mimoun" );
	deepEqual( Stem("mimun"), "mimun" );
	deepEqual( Stem("mina"), "min" );
	deepEqual( Stem("minacce"), "minacc" );
	deepEqual( Stem("minaccevole"), "minaccevol" );
	deepEqual( Stem("minacci"), "minacc" );
	deepEqual( Stem("minaccia"), "minacc" );
	deepEqual( Stem("minacciando"), "minacc" );
	deepEqual( Stem("minacciare"), "minacc" );
	deepEqual( Stem("minacciarono"), "minacc" );
	deepEqual( Stem("minacciata"), "minacc" );
	deepEqual( Stem("minacciate"), "minacc" );
	deepEqual( Stem("minacciati"), "minacc" );
	deepEqual( Stem("minacciato"), "minacc" );
	deepEqual( Stem("minacciava"), "minacc" );
	deepEqual( Stem("minacciavano"), "minacc" );
	deepEqual( Stem("minacciosa"), "minacc" );
	deepEqual( Stem("minacciose"), "minacc" );
	deepEqual( Stem("minacciosi"), "minacc" );
	deepEqual( Stem("minaccioso"), "minacc" );
	deepEqual( Stem("minaciati"), "minac" );
	deepEqual( Stem("minafra"), "minafr" );
	deepEqual( Stem("minar"), "min" );
	deepEqual( Stem("minata"), "min" );
	deepEqual( Stem("minaudo"), "minaud" );
	deepEqual( Stem("mindy"), "mindy" );
	deepEqual( Stem("mine"), "min" );
	deepEqual( Stem("minerali"), "mineral" );
	deepEqual( Stem("minerarie"), "minerar" );
	deepEqual( Stem("minestra"), "minestr" );
	deepEqual( Stem("mingherlino"), "mingherlin" );
	deepEqual( Stem("mini"), "min" );
	deepEqual( Stem("miniati"), "min" );
	deepEqual( Stem("minibar"), "minib" );
	deepEqual( Stem("minicucci"), "minicucc" );
	deepEqual( Stem("minigonna"), "minigonn" );
	deepEqual( Stem("minima"), "minim" );
	deepEqual( Stem("minimamente"), "minim" );
	deepEqual( Stem("minime"), "minim" );
	deepEqual( Stem("minimi"), "minim" );
	deepEqual( Stem("minimizzare"), "minimizz" );
	deepEqual( Stem("minimizzato"), "minimizz" );
	deepEqual( Stem("minimo"), "minim" );
	deepEqual( Stem("minimò"), "minim" );
	deepEqual( Stem("miniserie"), "miniser" );
	deepEqual( Stem("ministeo"), "ministe" );
	deepEqual( Stem("ministeri"), "minister" );
	deepEqual( Stem("ministeriale"), "ministerial" );
	deepEqual( Stem("ministeriali"), "ministerial" );
	deepEqual( Stem("ministero"), "minister" );
	deepEqual( Stem("ministra"), "ministr" );
	deepEqual( Stem("ministri"), "ministr" );
	deepEqual( Stem("ministro"), "ministr" );
	deepEqual( Stem("minnelli"), "minnell" );
	deepEqual( Stem("mino"), "min" );
	deepEqual( Stem("minor"), "minor" );
	deepEqual( Stem("minoranza"), "minor" );
	deepEqual( Stem("minoranze"), "minor" );
	deepEqual( Stem("minore"), "minor" );
	deepEqual( Stem("minorenni"), "minorenn" );
	deepEqual( Stem("minori"), "minor" );
	deepEqual( Stem("minotti"), "minott" );
	deepEqual( Stem("minusvalenze"), "minusvalent" );
	deepEqual( Stem("minuta"), "min" );
	deepEqual( Stem("minutamente"), "minut" );
	deepEqual( Stem("minute"), "min" );
	deepEqual( Stem("minuti"), "min" );
	deepEqual( Stem("minutka"), "minutk" );
	deepEqual( Stem("minuto"), "min" );
	deepEqual( Stem("minutò"), "minut" );
	deepEqual( Stem("minuzie"), "minuz" );
	deepEqual( Stem("minya"), "miny" );
	deepEqual( Stem("minzolini"), "minzolin" );
	deepEqual( Stem("minzoliniana"), "minzolinian" );
	deepEqual( Stem("mio"), "mio" );
	deepEqual( Stem("mira"), "mir" );
	deepEqual( Stem("mirabelli"), "mirabell" );
	deepEqual( Stem("mirabil"), "mirabil" );
	deepEqual( Stem("mirabile"), "mirabil" );
	deepEqual( Stem("mirabili"), "mirabil" );
	deepEqual( Stem("mirabilmente"), "mirabil" );
	deepEqual( Stem("miracoli"), "miracol" );
	deepEqual( Stem("miracolo"), "miracol" );
	deepEqual( Stem("miracolosa"), "miracol" );
	deepEqual( Stem("miracolosamente"), "miracol" );
	deepEqual( Stem("miracolosi"), "miracol" );
	deepEqual( Stem("miraggio"), "miragg" );
	deepEqual( Stem("mirallegri"), "mirallegr" );
	deepEqual( Stem("miran"), "miran" );
	deepEqual( Stem("miranda"), "mirand" );
	deepEqual( Stem("mirano"), "mir" );
	deepEqual( Stem("mirar"), "mir" );
	deepEqual( Stem("mirare"), "mir" );
	deepEqual( Stem("mirata"), "mir" );
	deepEqual( Stem("mirato"), "mir" );
	deepEqual( Stem("mirava"), "mir" );
	deepEqual( Stem("mire"), "mir" );
	deepEqual( Stem("miridionali"), "miridional" );
	deepEqual( Stem("mirino"), "mirin" );
	deepEqual( Stem("mirko"), "mirk" );
	deepEqual( Stem("miroglio"), "mirogl" );
	deepEqual( Stem("mirror"), "mirror" );
	deepEqual( Stem("mis"), "mis" );
	deepEqual( Stem("miscele"), "miscel" );
	deepEqual( Stem("mischia"), "misc" );
	deepEqual( Stem("mischiando"), "misc" );
	deepEqual( Stem("mischiarsi"), "misc" );
	deepEqual( Stem("mischiati"), "misc" );
	deepEqual( Stem("mischiato"), "misc" );
	deepEqual( Stem("mischiava"), "misc" );
	deepEqual( Stem("miscredenza"), "miscredent" );
	deepEqual( Stem("miscuglio"), "miscugl" );
	deepEqual( Stem("mise"), "mis" );
	deepEqual( Stem("misera"), "miser" );
	deepEqual( Stem("miserabil"), "miserabil" );
	deepEqual( Stem("miserabile"), "miser" );
	deepEqual( Stem("miserabili"), "miser" );
	deepEqual( Stem("miserabilmente"), "miserabil" );
	deepEqual( Stem("miserere"), "miser" );
	deepEqual( Stem("miseri"), "miser" );
	deepEqual( Stem("miseria"), "miser" );
	deepEqual( Stem("misericordia"), "misericord" );
	deepEqual( Stem("misericordie"), "misericord" );
	deepEqual( Stem("misericordiosa"), "misericord" );
	deepEqual( Stem("misericordioso"), "misericord" );
	deepEqual( Stem("miserie"), "miser" );
	deepEqual( Stem("misero"), "miser" );
	deepEqual( Stem("misfatti"), "misfatt" );
	deepEqual( Stem("miss"), "miss" );
	deepEqual( Stem("misserville"), "misservill" );
	deepEqual( Stem("missilistica"), "missilist" );
	deepEqual( Stem("missino"), "missin" );
	deepEqual( Stem("missionaria"), "missionar" );
	deepEqual( Stem("missionarie"), "missionar" );
	deepEqual( Stem("missionario"), "missionar" );
	deepEqual( Stem("missione"), "mission" );
	deepEqual( Stem("missioni"), "mission" );
	deepEqual( Stem("mississipi"), "mississip" );
	deepEqual( Stem("missiva"), "miss" );
	deepEqual( Stem("mista"), "mist" );
	deepEqual( Stem("miste"), "mist" );
	deepEqual( Stem("misteri"), "mister" );
	deepEqual( Stem("misteriori"), "misterior" );
	deepEqual( Stem("misteriosa"), "mister" );
	deepEqual( Stem("misteriosamente"), "mister" );
	deepEqual( Stem("misteriose"), "mister" );
	deepEqual( Stem("misteriosi"), "mister" );
	deepEqual( Stem("misterioso"), "mister" );
	deepEqual( Stem("mistero"), "mister" );
	deepEqual( Stem("mistica"), "mistic" );
	deepEqual( Stem("misto"), "mist" );
	deepEqual( Stem("mistretta"), "mistrett" );
	deepEqual( Stem("mistura"), "mistur" );
	deepEqual( Stem("misura"), "misur" );
	deepEqual( Stem("misurar"), "misur" );
	deepEqual( Stem("misurare"), "misur" );
	deepEqual( Stem("misurarlo"), "misur" );
	deepEqual( Stem("misurarsi"), "misur" );
	deepEqual( Stem("misurata"), "misur" );
	deepEqual( Stem("misurati"), "misur" );
	deepEqual( Stem("misurato"), "misur" );
	deepEqual( Stem("misuratore"), "misur" );
	deepEqual( Stem("misurava"), "misur" );
	deepEqual( Stem("misure"), "misur" );
	deepEqual( Stem("mit"), "mit" );
	deepEqual( Stem("mita"), "mit" );
	deepEqual( Stem("mitica"), "mitic" );
	deepEqual( Stem("mitigata"), "mitig" );
	deepEqual( Stem("mitigato"), "mitig" );
	deepEqual( Stem("mitigava"), "mitig" );
	deepEqual( Stem("mitizzata"), "mitizz" );
	deepEqual( Stem("mito"), "mit" );
	deepEqual( Stem("mitra"), "mitr" );
	deepEqual( Stem("mitragliatrice"), "mitragl" );
	deepEqual( Stem("mitrato"), "mitr" );
	deepEqual( Stem("mitsubishi"), "mitsubish" );
	deepEqual( Stem("mittel"), "mittel" );
	deepEqual( Stem("mittmensch"), "mittmensc" );
	deepEqual( Stem("miu"), "miu" );
	deepEqual( Stem("miura"), "miur" );
	deepEqual( Stem("miz"), "miz" );
	deepEqual( Stem("ml"), "ml" );
	deepEqual( Stem("mll"), "mll" );
	deepEqual( Stem("mm"), "mm" );
	deepEqual( Stem("mmw"), "mmw" );
	deepEqual( Stem("mmx"), "mmx" );
	deepEqual( Stem("mn"), "mn" );
	deepEqual( Stem("mo"), "mo" );
	deepEqual( Stem("mò"), "mò" );
	deepEqual( Stem("mob"), "mob" );
	deepEqual( Stem("mobi"), "mob" );
	deepEqual( Stem("mobil"), "mobil" );
	deepEqual( Stem("mobile"), "mobil" );
	deepEqual( Stem("mobili"), "mobil" );
	deepEqual( Stem("mobilificio"), "mobilific" );
	deepEqual( Stem("mobilità"), "mobil" );
	deepEqual( Stem("mobilitare"), "mobilit" );
	deepEqual( Stem("mobilitati"), "mobilit" );
	deepEqual( Stem("mobilitato"), "mobilit" );
	deepEqual( Stem("mobilitazione"), "mobilit" );
	deepEqual( Stem("moccolo"), "moccol" );
	deepEqual( Stem("mod"), "mod" );
	deepEqual( Stem("moda"), "mod" );
	deepEqual( Stem("modadiscio"), "modadisc" );
	deepEqual( Stem("modalità"), "modal" );
	deepEqual( Stem("mode"), "mod" );
	deepEqual( Stem("modella"), "modell" );
	deepEqual( Stem("modelli"), "modell" );
	deepEqual( Stem("modello"), "modell" );
	deepEqual( Stem("modena"), "moden" );
	deepEqual( Stem("modenese"), "modenes" );
	deepEqual( Stem("moderare"), "moder" );
	deepEqual( Stem("moderarle"), "moder" );
	deepEqual( Stem("moderata"), "moder" );
	deepEqual( Stem("moderate"), "moder" );
	deepEqual( Stem("moderati"), "moder" );
	deepEqual( Stem("moderatismo"), "moderat" );
	deepEqual( Stem("moderato"), "moder" );
	deepEqual( Stem("moderatore"), "moder" );
	deepEqual( Stem("moderazione"), "moder" );
	deepEqual( Stem("moderna"), "modern" );
	deepEqual( Stem("moderni"), "modern" );
	deepEqual( Stem("modernità"), "modern" );
	deepEqual( Stem("moderno"), "modern" );
	deepEqual( Stem("modesta"), "modest" );
	deepEqual( Stem("modestamente"), "modest" );
	deepEqual( Stem("modeste"), "modest" );
	deepEqual( Stem("modesti"), "modest" );
	deepEqual( Stem("modestia"), "modest" );
	deepEqual( Stem("modesto"), "modest" );
	deepEqual( Stem("modhumangal"), "modhumangal" );
	deepEqual( Stem("modi"), "mod" );
	deepEqual( Stem("modica"), "modic" );
	deepEqual( Stem("modifica"), "modif" );
	deepEqual( Stem("modificando"), "modific" );
	deepEqual( Stem("modificare"), "modific" );
	deepEqual( Stem("modificata"), "modific" );
	deepEqual( Stem("modificate"), "modific" );
	deepEqual( Stem("modificato"), "modific" );
	deepEqual( Stem("modifiche"), "modif" );
	deepEqual( Stem("modo"), "mod" );
	deepEqual( Stem("modulare"), "modul" );
	deepEqual( Stem("moduli"), "modul" );
	deepEqual( Stem("moeller"), "moeller" );
	deepEqual( Stem("mogadisciani"), "mogadiscian" );
	deepEqual( Stem("mogadiscio"), "mogadisc" );
	deepEqual( Stem("moggio"), "mogg" );
	deepEqual( Stem("mogli"), "mogl" );
	deepEqual( Stem("moglie"), "mogl" );
	deepEqual( Stem("mohammed"), "mohammed" );
	deepEqual( Stem("mohawk"), "mohawk" );
	deepEqual( Stem("mohovke"), "mohovk" );
	deepEqual( Stem("mohtashemi"), "mohtashem" );
	deepEqual( Stem("moia"), "moi" );
	deepEqual( Stem("moiano"), "moi" );
	deepEqual( Stem("moine"), "moin" );
	deepEqual( Stem("moio"), "moi" );
	deepEqual( Stem("moioli"), "moiol" );
	deepEqual( Stem("moion"), "moion" );
	deepEqual( Stem("moiono"), "moi" );
	deepEqual( Stem("mole"), "mol" );
	deepEqual( Stem("molesta"), "molest" );
	deepEqual( Stem("molestar"), "molest" );
	deepEqual( Stem("molestare"), "molest" );
	deepEqual( Stem("molestato"), "molest" );
	deepEqual( Stem("molesti"), "molest" );
	deepEqual( Stem("molestie"), "molest" );
	deepEqual( Stem("molfetta"), "molfett" );
	deepEqual( Stem("molinari"), "molinar" );
	deepEqual( Stem("molino"), "molin" );
	deepEqual( Stem("molla"), "moll" );
	deepEqual( Stem("mollare"), "moll" );
	deepEqual( Stem("molle"), "moll" );
	deepEqual( Stem("mollemente"), "mollement" );
	deepEqual( Stem("molli"), "moll" );
	deepEqual( Stem("mollo"), "moll" );
	deepEqual( Stem("molt"), "molt" );
	deepEqual( Stem("molta"), "molt" );
	deepEqual( Stem("molte"), "molt" );
	deepEqual( Stem("molteno"), "molten" );
	deepEqual( Stem("molteplici"), "moltepl" );
	deepEqual( Stem("molti"), "molt" );
	deepEqual( Stem("moltiplicando"), "moltiplic" );
	deepEqual( Stem("moltiplicano"), "moltiplic" );
	deepEqual( Stem("moltiplicare"), "moltiplic" );
	deepEqual( Stem("moltiplicarsi"), "moltiplic" );
	deepEqual( Stem("moltiplicava"), "moltiplic" );
	deepEqual( Stem("moltiplicazione"), "moltipl" );
	deepEqual( Stem("moltiplice"), "moltipl" );
	deepEqual( Stem("moltiplici"), "moltipl" );
	deepEqual( Stem("moltissime"), "moltissim" );
	deepEqual( Stem("moltissimi"), "moltissim" );
	deepEqual( Stem("moltissimo"), "moltissim" );
	deepEqual( Stem("moltitudine"), "moltitudin" );
	deepEqual( Stem("molto"), "molt" );
	deepEqual( Stem("mombasa"), "mombas" );
	deepEqual( Stem("momentanea"), "momentane" );
	deepEqual( Stem("momentaneamente"), "momentan" );
	deepEqual( Stem("momentaneo"), "momentane" );
	deepEqual( Stem("momentano"), "moment" );
	deepEqual( Stem("momenti"), "moment" );
	deepEqual( Stem("momentino"), "momentin" );
	deepEqual( Stem("momento"), "moment" );
	deepEqual( Stem("monaca"), "monac" );
	deepEqual( Stem("monacanda"), "monacand" );
	deepEqual( Stem("monacande"), "monacand" );
	deepEqual( Stem("monache"), "monac" );
	deepEqual( Stem("monaci"), "monac" );
	deepEqual( Stem("monaco"), "monac" );
	deepEqual( Stem("monarca"), "monarc" );
	deepEqual( Stem("monasteri"), "monaster" );
	deepEqual( Stem("monastero"), "monaster" );
	deepEqual( Stem("monate"), "mon" );
	deepEqual( Stem("monathlich"), "monathlic" );
	deepEqual( Stem("monatti"), "monatt" );
	deepEqual( Stem("monatto"), "monatt" );
	deepEqual( Stem("monattuccio"), "monattucc" );
	deepEqual( Stem("moncassin"), "moncassin" );
	deepEqual( Stem("monche"), "monc" );
	deepEqual( Stem("moncone"), "moncon" );
	deepEqual( Stem("monda"), "mond" );
	deepEqual( Stem("mondadori"), "mondador" );
	deepEqual( Stem("mondana"), "mondan" );
	deepEqual( Stem("mondani"), "mondan" );
	deepEqual( Stem("mondè"), "mond" );
	deepEqual( Stem("mondella"), "mondell" );
	deepEqual( Stem("mondi"), "mond" );
	deepEqual( Stem("mondiale"), "mondial" );
	deepEqual( Stem("mondialfondo"), "mondialfond" );
	deepEqual( Stem("mondiali"), "mondial" );
	deepEqual( Stem("mondini"), "mondin" );
	deepEqual( Stem("mondo"), "mond" );
	deepEqual( Stem("mondò"), "mond" );
	deepEqual( Stem("mondonico"), "mondon" );
	deepEqual( Stem("mondovì"), "mondov" );
	deepEqual( Stem("monere"), "mon" );
	deepEqual( Stem("moneta"), "monet" );
	deepEqual( Stem("monetaria"), "monetar" );
	deepEqual( Stem("monetario"), "monetar" );
	deepEqual( Stem("monete"), "mon" );
	deepEqual( Stem("moneterio"), "moneter" );
	deepEqual( Stem("money"), "money" );
	deepEqual( Stem("moneytime"), "moneytim" );
	deepEqual( Stem("monfalcone"), "monfalcon" );
	deepEqual( Stem("monferrato"), "monferr" );
	deepEqual( Stem("monica"), "monic" );
	deepEqual( Stem("monito"), "mon" );
	deepEqual( Stem("monitor"), "monitor" );
	deepEqual( Stem("monitoraggio"), "monitoragg" );
	deepEqual( Stem("monitorare"), "monitor" );
	deepEqual( Stem("monizione"), "monizion" );
	deepEqual( Stem("monoblocco"), "monoblocc" );
	deepEqual( Stem("monolith"), "monolith" );
	deepEqual( Stem("monologo"), "monolog" );
	deepEqual( Stem("monopattino"), "monopattin" );
	deepEqual( Stem("monopoli"), "monopol" );
	deepEqual( Stem("monopolio"), "monopol" );
	deepEqual( Stem("monopolismo"), "monopol" );
	deepEqual( Stem("monopolisti"), "monopol" );
	deepEqual( Stem("monopolistico"), "monopolist" );
	deepEqual( Stem("monorchio"), "monorc" );
	deepEqual( Stem("monos"), "monos" );
	deepEqual( Stem("monosillabo"), "monosillab" );
	deepEqual( Stem("monotona"), "monoton" );
	deepEqual( Stem("mons"), "mons" );
	deepEqual( Stem("monsignor"), "monsignor" );
	deepEqual( Stem("monsignore"), "monsignor" );
	deepEqual( Stem("monsignori"), "monsignor" );
	deepEqual( Stem("mont"), "mont" );
	deepEqual( Stem("monta"), "mont" );
	deepEqual( Stem("montagna"), "montagn" );
	deepEqual( Stem("montagnani"), "montagnan" );
	deepEqual( Stem("montagne"), "montagn" );
	deepEqual( Stem("montalbano"), "montalb" );
	deepEqual( Stem("montalto"), "montalt" );
	deepEqual( Stem("montanara"), "montanar" );
	deepEqual( Stem("montanare"), "montan" );
	deepEqual( Stem("montanari"), "montanar" );
	deepEqual( Stem("montanaro"), "montanar" );
	deepEqual( Stem("montanarolo"), "montanarol" );
	deepEqual( Stem("montanelli"), "montanell" );
	deepEqual( Stem("montante"), "montant" );
	deepEqual( Stem("montare"), "mont" );
	deepEqual( Stem("montarono"), "mont" );
	deepEqual( Stem("montasse"), "mont" );
	deepEqual( Stem("montato"), "mont" );
	deepEqual( Stem("monte"), "mont" );
	deepEqual( Stem("montecarlo"), "montec" );
	deepEqual( Stem("montecitorio"), "montecitor" );
	deepEqual( Stem("montecuccoli"), "montecuccol" );
	deepEqual( Stem("montedison"), "montedison" );
	deepEqual( Stem("montefibre"), "montefibr" );
	deepEqual( Stem("montefiorino"), "montefiorin" );
	deepEqual( Stem("montepremi"), "monteprem" );
	deepEqual( Stem("montero"), "monter" );
	deepEqual( Stem("montervarchi"), "montervarc" );
	deepEqual( Stem("montesano"), "montes" );
	deepEqual( Stem("montevarchi"), "montevarc" );
	deepEqual( Stem("montevideo"), "montevide" );
	deepEqual( Stem("monti"), "mont" );
	deepEqual( Stem("monticone"), "monticon" );
	deepEqual( Stem("montino"), "montin" );
	deepEqual( Stem("montò"), "mont" );
	deepEqual( Stem("montpellier"), "montpellier" );
	deepEqual( Stem("montreal"), "montreal" );
	deepEqual( Stem("monumento"), "monument" );
	deepEqual( Stem("monza"), "monz" );
	deepEqual( Stem("moon"), "moon" );
	deepEqual( Stem("moore"), "moor" );
	deepEqual( Stem("mora"), "mor" );
	deepEqual( Stem("morale"), "moral" );
	deepEqual( Stem("morali"), "moral" );
	deepEqual( Stem("moralista"), "moral" );
	deepEqual( Stem("moratti"), "moratt" );
	deepEqual( Stem("morbidà"), "morbid" );
	deepEqual( Stem("morbidò"), "morbid" );
	deepEqual( Stem("morbo"), "morb" );
	deepEqual( Stem("morbos"), "morbos" );
	deepEqual( Stem("morbus"), "morbus" );
	deepEqual( Stem("mord"), "mord" );
	deepEqual( Stem("mordere"), "mord" );
	deepEqual( Stem("morderle"), "mord" );
	deepEqual( Stem("mordevano"), "mord" );
	deepEqual( Stem("moreau"), "moreau" );
	deepEqual( Stem("morendo"), "mor" );
	deepEqual( Stem("moreno"), "moren" );
	deepEqual( Stem("moretti"), "morett" );
	deepEqual( Stem("moretto"), "morett" );
	deepEqual( Stem("morfeo"), "morfe" );
	deepEqual( Stem("morfologia"), "morfolog" );
	deepEqual( Stem("morgan"), "morgan" );
	deepEqual( Stem("mori"), "mor" );
	deepEqual( Stem("morì"), "mor" );
	deepEqual( Stem("morìa"), "morì" );
	deepEqual( Stem("moribondi"), "moribond" );
	deepEqual( Stem("moribondo"), "moribond" );
	deepEqual( Stem("moriero"), "morier" );
	deepEqual( Stem("morir"), "mor" );
	deepEqual( Stem("morirà"), "mor" );
	deepEqual( Stem("morire"), "mor" );
	deepEqual( Stem("moriron"), "moriron" );
	deepEqual( Stem("morirono"), "mor" );
	deepEqual( Stem("morisse"), "moriss" );
	deepEqual( Stem("moriva"), "mor" );
	deepEqual( Stem("morivano"), "mor" );
	deepEqual( Stem("mormoracchiare"), "mormoracc" );
	deepEqual( Stem("mormorando"), "mormor" );
	deepEqual( Stem("mormorava"), "mormor" );
	deepEqual( Stem("mormorazione"), "mormor" );
	deepEqual( Stem("mormorazioni"), "mormor" );
	deepEqual( Stem("mormorìo"), "mormorì" );
	deepEqual( Stem("moro"), "mor" );
	deepEqual( Stem("morosa"), "moros" );
	deepEqual( Stem("morris"), "morris" );
	deepEqual( Stem("morsa"), "mors" );
	deepEqual( Stem("morse"), "mors" );
	deepEqual( Stem("morsi"), "mors" );
	deepEqual( Stem("morso"), "mors" );
	deepEqual( Stem("morta"), "mort" );
	deepEqual( Stem("mortagli"), "mortagl" );
	deepEqual( Stem("mortale"), "mortal" );
	deepEqual( Stem("mortales"), "mortales" );
	deepEqual( Stem("mortali"), "mortal" );
	deepEqual( Stem("mortalità"), "mortal" );
	deepEqual( Stem("morte"), "mort" );
	deepEqual( Stem("mortem"), "mortem" );
	deepEqual( Stem("morti"), "mort" );
	deepEqual( Stem("morticina"), "morticin" );
	deepEqual( Stem("mortiferi"), "mortifer" );
	deepEqual( Stem("mortificata"), "mortific" );
	deepEqual( Stem("mortificati"), "mortific" );
	deepEqual( Stem("mortificato"), "mortific" );
	deepEqual( Stem("morto"), "mort" );
	deepEqual( Stem("mortorio"), "mortor" );
	deepEqual( Stem("mosca"), "mosc" );
	deepEqual( Stem("moscà"), "mosc" );
	deepEqual( Stem("moscatelli"), "moscatell" );
	deepEqual( Stem("mosche"), "mosc" );
	deepEqual( Stem("moschea"), "mosche" );
	deepEqual( Stem("moschetti"), "moschett" );
	deepEqual( Stem("moschettieri"), "moschettier" );
	deepEqual( Stem("moschetto"), "moschett" );
	deepEqual( Stem("mosconi"), "moscon" );
	deepEqual( Stem("moscovita"), "moscov" );
	deepEqual( Stem("moser"), "moser" );
	deepEqual( Stem("moses"), "moses" );
	deepEqual( Stem("moshe"), "mosh" );
	deepEqual( Stem("mossa"), "moss" );
	deepEqual( Stem("mosse"), "moss" );
	deepEqual( Stem("mossero"), "mosser" );
	deepEqual( Stem("mossi"), "moss" );
	deepEqual( Stem("mosso"), "moss" );
	deepEqual( Stem("mostacci"), "mostacc" );
	deepEqual( Stem("mostar"), "most" );
	deepEqual( Stem("mostra"), "mostr" );
	deepEqual( Stem("mostrando"), "mostr" );
	deepEqual( Stem("mostrandosi"), "mostr" );
	deepEqual( Stem("mostrano"), "mostr" );
	deepEqual( Stem("mostrar"), "mostr" );
	deepEqual( Stem("mostrare"), "mostr" );
	deepEqual( Stem("mostraron"), "mostraron" );
	deepEqual( Stem("mostrarsi"), "mostr" );
	deepEqual( Stem("mostrasse"), "mostr" );
	deepEqual( Stem("mostrata"), "mostr" );
	deepEqual( Stem("mostrati"), "mostr" );
	deepEqual( Stem("mostrato"), "mostr" );
	deepEqual( Stem("mostratone"), "mostraton" );
	deepEqual( Stem("mostrava"), "mostr" );
	deepEqual( Stem("mostravan"), "mostravan" );
	deepEqual( Stem("mostravano"), "mostr" );
	deepEqual( Stem("mostre"), "mostr" );
	deepEqual( Stem("mostri"), "mostr" );
	deepEqual( Stem("mostriciattolo"), "mostriciattol" );
	deepEqual( Stem("mostro"), "mostr" );
	deepEqual( Stem("mostrò"), "mostr" );
	deepEqual( Stem("mostruose"), "mostruos" );
	deepEqual( Stem("mostruosità"), "mostruos" );
	deepEqual( Stem("mostruoso"), "mostruos" );
	deepEqual( Stem("mota"), "mot" );
	deepEqual( Stem("motherwell"), "motherwell" );
	deepEqual( Stem("moti"), "mot" );
	deepEqual( Stem("motiv"), "motiv" );
	deepEqual( Stem("motivandole"), "motiv" );
	deepEqual( Stem("motivar"), "motiv" );
	deepEqual( Stem("motivasse"), "motiv" );
	deepEqual( Stem("motivato"), "motiv" );
	deepEqual( Stem("motivazione"), "motiv" );
	deepEqual( Stem("motivazioni"), "motiv" );
	deepEqual( Stem("motivi"), "mot" );
	deepEqual( Stem("motivo"), "mot" );
	deepEqual( Stem("motivò"), "motiv" );
	deepEqual( Stem("moto"), "mot" );
	deepEqual( Stem("motonave"), "motonav" );
	deepEqual( Stem("motor"), "motor" );
	deepEqual( Stem("motore"), "motor" );
	deepEqual( Stem("motoretta"), "motorett" );
	deepEqual( Stem("motori"), "motor" );
	deepEqual( Stem("motorino"), "motorin" );
	deepEqual( Stem("motorizzazione"), "motorizz" );
	deepEqual( Stem("motosa"), "motos" );
	deepEqual( Stem("motoscafi"), "motoscaf" );
	deepEqual( Stem("motoseghe"), "motoseg" );
	deepEqual( Stem("motta"), "mott" );
	deepEqual( Stem("motti"), "mott" );
	deepEqual( Stem("motuum"), "motuum" );
	deepEqual( Stem("mouillot"), "mouillot" );
	deepEqual( Stem("moussali"), "moussal" );
	deepEqual( Stem("mova"), "mov" );
	deepEqual( Stem("movan"), "movan" );
	deepEqual( Stem("move"), "mov" );
	deepEqual( Stem("movendole"), "mov" );
	deepEqual( Stem("movendosi"), "mov" );
	deepEqual( Stem("movente"), "movent" );
	deepEqual( Stem("mover"), "mover" );
	deepEqual( Stem("movere"), "mov" );
	deepEqual( Stem("moverebbe"), "mov" );
	deepEqual( Stem("movermi"), "mov" );
	deepEqual( Stem("moverò"), "mov" );
	deepEqual( Stem("moversene"), "mov" );
	deepEqual( Stem("moversi"), "mov" );
	deepEqual( Stem("moverti"), "mov" );
	deepEqual( Stem("movesse"), "movess" );
	deepEqual( Stem("moveva"), "mov" );
	deepEqual( Stem("movimentati"), "moviment" );
	deepEqual( Stem("movimentato"), "moviment" );
	deepEqual( Stem("movimentazione"), "moviment" );
	deepEqual( Stem("movimenti"), "mov" );
	deepEqual( Stem("movimento"), "mov" );
	deepEqual( Stem("movinemto"), "movinemt" );
	deepEqual( Stem("movladi"), "movlad" );
	deepEqual( Stem("movon"), "movon" );
	deepEqual( Stem("movono"), "mov" );
	deepEqual( Stem("mowbray"), "mowbray" );
	deepEqual( Stem("mozione"), "mozion" );
	deepEqual( Stem("mozioni"), "mozion" );
	deepEqual( Stem("mozzi"), "mozz" );
	deepEqual( Stem("mozzicone"), "mozzicon" );
	deepEqual( Stem("mr"), "mr" );
	deepEqual( Stem("mrc"), "mrc" );
	deepEqual( Stem("mri"), "mri" );
	deepEqual( Stem("ms"), "ms" );
	deepEqual( Stem("msc"), "msc" );
	deepEqual( Stem("msi"), "msi" );
	deepEqual( Stem("mu"), "mu" );
	deepEqual( Stem("mucchi"), "mucc" );
	deepEqual( Stem("mucchietto"), "mucchiett" );
	deepEqual( Stem("mucchio"), "mucc" );
	deepEqual( Stem("mudler"), "mudler" );
	deepEqual( Stem("mugghiava"), "mugg" );
	deepEqual( Stem("muggito"), "mugg" );
	deepEqual( Stem("mughal"), "mughal" );
	deepEqual( Stem("mugolìo"), "mugolì" );
	deepEqual( Stem("mukerjee"), "mukerje" );
	deepEqual( Stem("mukherjee"), "mukherje" );
	deepEqual( Stem("mula"), "mul" );
	deepEqual( Stem("mulder"), "mulder" );
	deepEqual( Stem("mule"), "mul" );
	deepEqual( Stem("mulè"), "mul" );
	deepEqual( Stem("mulinare"), "mulin" );
	deepEqual( Stem("mulinello"), "mulinell" );
	deepEqual( Stem("mulini"), "mulin" );
	deepEqual( Stem("mulo"), "mul" );
	deepEqual( Stem("multa"), "mult" );
	deepEqual( Stem("multe"), "mult" );
	deepEqual( Stem("multiazioni"), "multiazion" );
	deepEqual( Stem("multifariam"), "multifariam" );
	deepEqual( Stem("multifondo"), "multifond" );
	deepEqual( Stem("multimediale"), "multimedial" );
	deepEqual( Stem("multinazionale"), "multinazional" );
	deepEqual( Stem("multinazionali"), "multinazional" );
	deepEqual( Stem("multiproprietà"), "multipropriet" );
	deepEqual( Stem("multiras"), "multiras" );
	deepEqual( Stem("multiuso"), "multius" );
	deepEqual( Stem("munda"), "mund" );
	deepEqual( Stem("mundis"), "mundis" );
	deepEqual( Stem("mungere"), "mung" );
	deepEqual( Stem("municipale"), "municipal" );
	deepEqual( Stem("municipali"), "municipal" );
	deepEqual( Stem("municipalizzate"), "municipalizz" );
	deepEqual( Stem("munificenza"), "munificent" );
	deepEqual( Stem("muniti"), "mun" );
	deepEqual( Stem("munizione"), "munizion" );
	deepEqual( Stem("munoz"), "munoz" );
	deepEqual( Stem("muoia"), "muoi" );
	deepEqual( Stem("muoiono"), "muoi" );
	deepEqual( Stem("muore"), "muor" );
	deepEqual( Stem("muove"), "muov" );
	deepEqual( Stem("muovendo"), "muov" );
	deepEqual( Stem("muovere"), "muov" );
	deepEqual( Stem("muoverò"), "muov" );
	deepEqual( Stem("muoversi"), "muov" );
	deepEqual( Stem("muovono"), "muov" );
	deepEqual( Stem("mura"), "mur" );
	deepEqual( Stem("muraglia"), "muragl" );
	deepEqual( Stem("muraglie"), "muragl" );
	deepEqual( Stem("murati"), "mur" );
	deepEqual( Stem("murato"), "mur" );
	deepEqual( Stem("muratori"), "murator" );
	deepEqual( Stem("murettino"), "murettin" );
	deepEqual( Stem("murgita"), "murg" );
	deepEqual( Stem("muri"), "mur" );
	deepEqual( Stem("muriccioli"), "muricciol" );
	deepEqual( Stem("muricciolo"), "muricciol" );
	deepEqual( Stem("murmansk"), "murmansk" );
	deepEqual( Stem("muro"), "mur" );
	deepEqual( Stem("murphy"), "murphy" );
	deepEqual( Stem("musa"), "mus" );
	deepEqual( Stem("muscardini"), "muscardin" );
	deepEqual( Stem("muscoloso"), "muscol" );
	deepEqual( Stem("muse"), "mus" );
	deepEqual( Stem("museeuv"), "museeuv" );
	deepEqual( Stem("museo"), "muse" );
	deepEqual( Stem("museum"), "museum" );
	deepEqual( Stem("musher"), "musher" );
	deepEqual( Stem("musi"), "mus" );
	deepEqual( Stem("music"), "music" );
	deepEqual( Stem("musica"), "music" );
	deepEqual( Stem("musical"), "musical" );
	deepEqual( Stem("musicale"), "musical" );
	deepEqual( Stem("musicali"), "musical" );
	deepEqual( Stem("musiche"), "music" );
	deepEqual( Stem("musicista"), "music" );
	deepEqual( Stem("musicisti"), "music" );
	deepEqual( Stem("muso"), "mus" );
	deepEqual( Stem("mussi"), "muss" );
	deepEqual( Stem("mussolenghe"), "mussoleng" );
	deepEqual( Stem("mussolente"), "mussolent" );
	deepEqual( Stem("mussolini"), "mussolin" );
	deepEqual( Stem("mustacchi"), "mustacc" );
	deepEqual( Stem("mustigarufi"), "mustigaruf" );
	deepEqual( Stem("musulmana"), "musulman" );
	deepEqual( Stem("musulmani"), "musulman" );
	deepEqual( Stem("musulmano"), "musulm" );
	deepEqual( Stem("musumeci"), "musumec" );
	deepEqual( Stem("musure"), "musur" );
	deepEqual( Stem("muta"), "mut" );
	deepEqual( Stem("mutabile"), "mutabil" );
	deepEqual( Stem("mutabili"), "mutabil" );
	deepEqual( Stem("mutande"), "mutand" );
	deepEqual( Stem("mutandosi"), "mut" );
	deepEqual( Stem("mutano"), "mut" );
	deepEqual( Stem("mutar"), "mut" );
	deepEqual( Stem("mutare"), "mut" );
	deepEqual( Stem("mutarsi"), "mut" );
	deepEqual( Stem("mutasse"), "mut" );
	deepEqual( Stem("mutata"), "mut" );
	deepEqual( Stem("mutate"), "mut" );
	deepEqual( Stem("mutati"), "mut" );
	deepEqual( Stem("mutatio"), "mutat" );
	deepEqual( Stem("mutato"), "mut" );
	deepEqual( Stem("mutazione"), "mutazion" );
	deepEqual( Stem("mutazioni"), "mutazion" );
	deepEqual( Stem("mute"), "mut" );
	deepEqual( Stem("muterò"), "mut" );
	deepEqual( Stem("muti"), "mut" );
	deepEqual( Stem("mutilata"), "mutil" );
	deepEqual( Stem("mutilate"), "mutil" );
	deepEqual( Stem("muto"), "mut" );
	deepEqual( Stem("mutò"), "mut" );
	deepEqual( Stem("mutria"), "mutr" );
	deepEqual( Stem("mutua"), "mutu" );
	deepEqual( Stem("mutualisti"), "mutual" );
	deepEqual( Stem("mutualistici"), "mutualist" );
	deepEqual( Stem("mutuati"), "mutu" );
	deepEqual( Stem("mutui"), "mutu" );
	deepEqual( Stem("muzio"), "muz" );
	deepEqual( Stem("muzzi"), "muzz" );
	deepEqual( Stem("mv"), "mv" );
	deepEqual( Stem("mw"), "mw" );
	deepEqual( Stem("my"), "my" );
	deepEqual( Stem("myanma"), "myanm" );
	deepEqual( Stem("myra"), "myra" );
	deepEqual( Stem("mz"), "mz" );
	deepEqual( Stem("n"), "n" );
	deepEqual( Stem("na"), "na" );
	deepEqual( Stem("naas"), "naas" );
	deepEqual( Stem("nababbo"), "nababb" );
	deepEqual( Stem("nabi"), "nab" );
	deepEqual( Stem("nabil"), "nabil" );
	deepEqual( Stem("nabila"), "nabil" );
	deepEqual( Stem("nacht"), "nacht" );
	deepEqual( Stem("nacque"), "nacqu" );
	deepEqual( Stem("nacquero"), "nacquer" );
	deepEqual( Stem("nadal"), "nadal" );
	deepEqual( Stem("nadtierechni"), "nadtierechn" );
	deepEqual( Stem("nagisa"), "nagis" );
	deepEqual( Stem("nagracapital"), "nagracapital" );
	deepEqual( Stem("nagrarend"), "nagrarend" );
	deepEqual( Stem("nai"), "nai" );
	deepEqual( Stem("naionale"), "naional" );
	deepEqual( Stem("nairobi"), "nairob" );
	deepEqual( Stem("naizonale"), "naizonal" );
	deepEqual( Stem("naji"), "naj" );
	deepEqual( Stem("nalcik"), "nalcik" );
	deepEqual( Stem("namibia"), "namib" );
	deepEqual( Stem("namik"), "namik" );
	deepEqual( Stem("nan"), "nan" );
	deepEqual( Stem("nando"), "nand" );
	deepEqual( Stem("nani"), "nan" );
	deepEqual( Stem("nania"), "nan" );
	deepEqual( Stem("nanni"), "nann" );
	deepEqual( Stem("nantes"), "nantes" );
	deepEqual( Stem("nantucket"), "nantucket" );
	deepEqual( Stem("napoletana"), "napoletan" );
	deepEqual( Stem("napoletane"), "napoletan" );
	deepEqual( Stem("napoletano"), "napolet" );
	deepEqual( Stem("napoli"), "napol" );
	deepEqual( Stem("napolitano"), "napolit" );
	deepEqual( Stem("nappa"), "napp" );
	deepEqual( Stem("nappi"), "napp" );
	deepEqual( Stem("narasimha"), "narasimh" );
	deepEqual( Stem("narcotraffico"), "narcotraff" );
	deepEqual( Stem("nardi"), "nard" );
	deepEqual( Stem("nardini"), "nardin" );
	deepEqual( Stem("narmak"), "narmak" );
	deepEqual( Stem("narora"), "naror" );
	deepEqual( Stem("narra"), "narr" );
	deepEqual( Stem("narratione"), "narration" );
	deepEqual( Stem("narratore"), "narrator" );
	deepEqual( Stem("narrazione"), "narrazion" );
	deepEqual( Stem("nasce"), "nasc" );
	deepEqual( Stem("nascente"), "nascent" );
	deepEqual( Stem("nascer"), "nascer" );
	deepEqual( Stem("nascerà"), "nasc" );
	deepEqual( Stem("nascere"), "nasc" );
	deepEqual( Stem("nascerebbe"), "nasc" );
	deepEqual( Stem("nascesse"), "nascess" );
	deepEqual( Stem("nasceste"), "nascest" );
	deepEqual( Stem("nasceva"), "nasc" );
	deepEqual( Stem("nascevan"), "nascevan" );
	deepEqual( Stem("nascita"), "nasc" );
	deepEqual( Stem("nascite"), "nasc" );
	deepEqual( Stem("nasconde"), "nascond" );
	deepEqual( Stem("nascondendo"), "nascond" );
	deepEqual( Stem("nasconder"), "nasconder" );
	deepEqual( Stem("nasconderci"), "nascond" );
	deepEqual( Stem("nascondere"), "nascond" );
	deepEqual( Stem("nasconderla"), "nascond" );
	deepEqual( Stem("nasconderlo"), "nascond" );
	deepEqual( Stem("nascondersi"), "nascond" );
	deepEqual( Stem("nascondeva"), "nascond" );
	deepEqual( Stem("nascondevano"), "nascond" );
	deepEqual( Stem("nascondevo"), "nascond" );
	deepEqual( Stem("nascondigli"), "nascondigl" );
	deepEqual( Stem("nascondiglio"), "nascondigl" );
	deepEqual( Stem("nascondimento"), "nascond" );
	deepEqual( Stem("nascondono"), "nascond" );
	deepEqual( Stem("nascono"), "nasc" );
	deepEqual( Stem("nascose"), "nascos" );
	deepEqual( Stem("nascosero"), "nascoser" );
	deepEqual( Stem("nascosta"), "nascost" );
	deepEqual( Stem("nascostamente"), "nascost" );
	deepEqual( Stem("nascoste"), "nascost" );
	deepEqual( Stem("nascosti"), "nascost" );
	deepEqual( Stem("nascosto"), "nascost" );
	deepEqual( Stem("naso"), "nas" );
	deepEqual( Stem("nasrin"), "nasrin" );
	deepEqual( Stem("nassau"), "nassau" );
	deepEqual( Stem("nastri"), "nastr" );
	deepEqual( Stem("nastro"), "nastr" );
	deepEqual( Stem("nata"), "nat" );
	deepEqual( Stem("natale"), "natal" );
	deepEqual( Stem("natali"), "natal" );
	deepEqual( Stem("natalizie"), "nataliz" );
	deepEqual( Stem("natanti"), "natant" );
	deepEqual( Stem("nate"), "nat" );
	deepEqual( Stem("nathalie"), "nathal" );
	deepEqual( Stem("nathan"), "nathan" );
	deepEqual( Stem("nathion"), "nathion" );
	deepEqual( Stem("nati"), "nat" );
	deepEqual( Stem("natìa"), "natì" );
	deepEqual( Stem("national"), "national" );
	deepEqual( Stem("nativa"), "nat" );
	deepEqual( Stem("nativi"), "nat" );
	deepEqual( Stem("nativo"), "nat" );
	deepEqual( Stem("nato"), "nat" );
	deepEqual( Stem("natura"), "natur" );
	deepEqual( Stem("natural"), "natural" );
	deepEqual( Stem("naturale"), "natural" );
	deepEqual( Stem("naturali"), "natural" );
	deepEqual( Stem("naturalisti"), "natural" );
	deepEqual( Stem("naturalizzato"), "naturalizz" );
	deepEqual( Stem("naturalmente"), "natural" );
	deepEqual( Stem("naufraga"), "naufrag" );
	deepEqual( Stem("naufragata"), "naufrag" );
	deepEqual( Stem("naufragati"), "naufrag" );
	deepEqual( Stem("naufragio"), "naufrag" );
	deepEqual( Stem("naufrago"), "naufrag" );
	deepEqual( Stem("naursk"), "naursk" );
	deepEqual( Stem("nautica"), "nautic" );
	deepEqual( Stem("nautiche"), "nautic" );
	deepEqual( Stem("nautico"), "nautic" );
	deepEqual( Stem("nav"), "nav" );
	deepEqual( Stem("nava"), "nav" );
	deepEqual( Stem("navale"), "naval" );
	deepEqual( Stem("navali"), "naval" );
	deepEqual( Stem("navarra"), "navarr" );
	deepEqual( Stem("navarrini"), "navarrin" );
	deepEqual( Stem("navarro"), "navarr" );
	deepEqual( Stem("nave"), "nav" );
	deepEqual( Stem("navetta"), "navett" );
	deepEqual( Stem("navette"), "navett" );
	deepEqual( Stem("navi"), "nav" );
	deepEqual( Stem("navigante"), "navig" );
	deepEqual( Stem("navigare"), "navig" );
	deepEqual( Stem("navigatore"), "navig" );
	deepEqual( Stem("navigazione"), "navig" );
	deepEqual( Stem("navigli"), "navigl" );
	deepEqual( Stem("naviglio"), "navigl" );
	deepEqual( Stem("naz"), "naz" );
	deepEqual( Stem("nazareno"), "nazaren" );
	deepEqual( Stem("nazifasciste"), "nazifasc" );
	deepEqual( Stem("nazional"), "nazional" );
	deepEqual( Stem("nazionaldemocratico"), "nazionaldemocrat" );
	deepEqual( Stem("nazionale"), "nazional" );
	deepEqual( Stem("nazionali"), "nazional" );
	deepEqual( Stem("nazionalisti"), "nazional" );
	deepEqual( Stem("nazionalità"), "nazional" );
	deepEqual( Stem("nazionalizzato"), "nazionalizz" );
	deepEqual( Stem("nazione"), "nazion" );
	deepEqual( Stem("nazioni"), "nazion" );
	deepEqual( Stem("nazismo"), "nazism" );
	deepEqual( Stem("nazista"), "nazist" );
	deepEqual( Stem("naziste"), "nazist" );
	deepEqual( Stem("nazisti"), "nazist" );
	deepEqual( Stem("nazistoidi"), "nazistoid" );
	deepEqual( Stem("nazzari"), "nazzar" );
	deepEqual( Stem("nba"), "nba" );
	deepEqual( Stem("nbaction"), "nbaction" );
	deepEqual( Stem("nc"), "nc" );
	deepEqual( Stem("ndr"), "ndr" );
	deepEqual( Stem("ne"), "ne" );
	deepEqual( Stem("né"), "nè" );
	deepEqual( Stem("nè"), "nè" );
	deepEqual( Stem("neanche"), "neanc" );
	deepEqual( Stem("neazelandese"), "neazelandes" );
	deepEqual( Stem("nebbia"), "nebb" );
	deepEqual( Stem("nebbie"), "nebb" );
	deepEqual( Stem("nebbione"), "nebbion" );
	deepEqual( Stem("nec"), "nec" );
	deepEqual( Stem("necchi"), "necc" );
	deepEqual( Stem("necesidades"), "necesidades" );
	deepEqual( Stem("necessari"), "necessar" );
	deepEqual( Stem("necessaria"), "necessar" );
	deepEqual( Stem("necessariamente"), "necessar" );
	deepEqual( Stem("necessarie"), "necessar" );
	deepEqual( Stem("necessario"), "necessar" );
	deepEqual( Stem("necesserario"), "necesserar" );
	deepEqual( Stem("necessita"), "necess" );
	deepEqual( Stem("necessità"), "necess" );
	deepEqual( Stem("necroforo"), "necrofor" );
	deepEqual( Stem("necwessari"), "necwessar" );
	deepEqual( Stem("ned"), "ned" );
	deepEqual( Stem("nedo"), "ned" );
	deepEqual( Stem("nèforse"), "nèfors" );
	deepEqual( Stem("nega"), "neg" );
	deepEqual( Stem("negando"), "neg" );
	deepEqual( Stem("negano"), "neg" );
	deepEqual( Stem("negar"), "neg" );
	deepEqual( Stem("negare"), "neg" );
	deepEqual( Stem("negarla"), "neg" );
	deepEqual( Stem("negarlo"), "neg" );
	deepEqual( Stem("negasse"), "neg" );
	deepEqual( Stem("negata"), "neg" );
	deepEqual( Stem("negativa"), "negat" );
	deepEqual( Stem("negativamente"), "negat" );
	deepEqual( Stem("negative"), "negat" );
	deepEqual( Stem("negativi"), "negat" );
	deepEqual( Stem("negativo"), "negat" );
	deepEqual( Stem("negato"), "neg" );
	deepEqual( Stem("negavano"), "neg" );
	deepEqual( Stem("negheranno"), "negh" );
	deepEqual( Stem("neghino"), "neghin" );
	deepEqual( Stem("negl"), "negl" );
	deepEqual( Stem("negletta"), "neglett" );
	deepEqual( Stem("negletto"), "neglett" );
	deepEqual( Stem("negli"), "negl" );
	deepEqual( Stem("negligenza"), "negligent" );
	deepEqual( Stem("negozi"), "negoz" );
	deepEqual( Stem("negozia"), "negoz" );
	deepEqual( Stem("negoziare"), "negoz" );
	deepEqual( Stem("negoziata"), "negoz" );
	deepEqual( Stem("negoziati"), "negoz" );
	deepEqual( Stem("negoziato"), "negoz" );
	deepEqual( Stem("negoziatore"), "negoz" );
	deepEqual( Stem("negoziazione"), "negoz" );
	deepEqual( Stem("negozio"), "negoz" );
	deepEqual( Stem("negri"), "negr" );
	deepEqual( Stem("negrì"), "negr" );
	deepEqual( Stem("negritos"), "negritos" );
	deepEqual( Stem("negro"), "negr" );
	deepEqual( Stem("nei"), "nei" );
	deepEqual( Stem("neil"), "neil" );
	deepEqual( Stem("nel"), "nel" );
	deepEqual( Stem("nell"), "nell" );
	deepEqual( Stem("nella"), "nell" );
	deepEqual( Stem("nelle"), "nell" );
	deepEqual( Stem("nelli"), "nell" );
	deepEqual( Stem("nello"), "nell" );
	deepEqual( Stem("nelson"), "nelson" );
	deepEqual( Stem("nematullah"), "nematullah" );
	deepEqual( Stem("nemetria"), "nemetr" );
	deepEqual( Stem("nemica"), "nemic" );
	deepEqual( Stem("nemiche"), "nemic" );
	deepEqual( Stem("nemici"), "nemic" );
	deepEqual( Stem("nemicì"), "nemic" );
	deepEqual( Stem("nemico"), "nemic" );
	deepEqual( Stem("nemicò"), "nemic" );
	deepEqual( Stem("nemmen"), "nemmen" );
	deepEqual( Stem("nemmeno"), "nemmen" );
	deepEqual( Stem("neo"), "neo" );
	deepEqual( Stem("neoborboni"), "neoborbon" );
	deepEqual( Stem("neoborbonici"), "neoborbon" );
	deepEqual( Stem("neoborbonico"), "neoborbon" );
	deepEqual( Stem("neofascista"), "neofasc" );
	deepEqual( Stem("neofita"), "neof" );
	deepEqual( Stem("neogollisti"), "neogoll" );
	deepEqual( Stem("neomin"), "neomin" );
	deepEqual( Stem("neonata"), "neon" );
	deepEqual( Stem("neonati"), "neon" );
	deepEqual( Stem("neonazista"), "neonaz" );
	deepEqual( Stem("neonazisti"), "neonaz" );
	deepEqual( Stem("neoprotestante"), "neoprotest" );
	deepEqual( Stem("neoprotestantesimo"), "neoprotestantesim" );
	deepEqual( Stem("neppur"), "neppur" );
	deepEqual( Stem("neppure"), "neppur" );
	deepEqual( Stem("ner"), "ner" );
	deepEqual( Stem("nera"), "ner" );
	deepEqual( Stem("nerazzurra"), "nerazzurr" );
	deepEqual( Stem("nerazzurri"), "nerazzurr" );
	deepEqual( Stem("nerazzurro"), "nerazzurr" );
	deepEqual( Stem("nerborute"), "nerbor" );
	deepEqual( Stem("nerboruto"), "nerbor" );
	deepEqual( Stem("nere"), "ner" );
	deepEqual( Stem("neri"), "ner" );
	deepEqual( Stem("nero"), "ner" );
	deepEqual( Stem("nervi"), "nerv" );
	deepEqual( Stem("nervosismo"), "nervos" );
	deepEqual( Stem("nervoso"), "nervos" );
	deepEqual( Stem("nessun"), "nessun" );
	deepEqual( Stem("nessuna"), "nessun" );
	deepEqual( Stem("nessuno"), "nessun" );
	deepEqual( Stem("nessunò"), "nessun" );
	deepEqual( Stem("netta"), "nett" );
	deepEqual( Stem("nettamente"), "nett" );
	deepEqual( Stem("nettaq"), "nettaq" );
	deepEqual( Stem("nette"), "nett" );
	deepEqual( Stem("netti"), "nett" );
	deepEqual( Stem("netto"), "nett" );
	deepEqual( Stem("network"), "network" );
	deepEqual( Stem("netzraim"), "netzraim" );
	deepEqual( Stem("neue"), "neu" );
	deepEqual( Stem("neutrale"), "neutral" );
	deepEqual( Stem("neutralità"), "neutral" );
	deepEqual( Stem("neutralizzando"), "neutralizz" );
	deepEqual( Stem("neutrone"), "neutron" );
	deepEqual( Stem("nev"), "nev" );
	deepEqual( Stem("neve"), "nev" );
	deepEqual( Stem("nevers"), "nevers" );
	deepEqual( Stem("nevralgica"), "nevralg" );
	deepEqual( Stem("new"), "new" );
	deepEqual( Stem("news"), "news" );
	deepEqual( Stem("newsletter"), "newsletter" );
	deepEqual( Stem("newton"), "newton" );
	deepEqual( Stem("next"), "next" );
	deepEqual( Stem("nf"), "nf" );
	deepEqual( Stem("ngc"), "ngc" );
	deepEqual( Stem("ngrato"), "ngrat" );
	deepEqual( Stem("nibbio"), "nibb" );
	deepEqual( Stem("nic"), "nic" );
	deepEqual( Stem("nicaragua"), "nicaragu" );
	deepEqual( Stem("nicchia"), "nicc" );
	deepEqual( Stem("nice"), "nic" );
	deepEqual( Stem("nicholas"), "nicholas" );
	deepEqual( Stem("nick"), "nick" );
	deepEqual( Stem("nicky"), "nicky" );
	deepEqual( Stem("nicola"), "nicol" );
	deepEqual( Stem("nicolay"), "nicolay" );
	deepEqual( Stem("nicole"), "nicol" );
	deepEqual( Stem("nicosia"), "nicos" );
	deepEqual( Stem("nidiata"), "nid" );
	deepEqual( Stem("nido"), "nid" );
	deepEqual( Stem("nieman"), "nieman" );
	deepEqual( Stem("niemann"), "niemann" );
	deepEqual( Stem("niemczak"), "niemczak" );
	deepEqual( Stem("nient"), "nient" );
	deepEqual( Stem("niente"), "nient" );
	deepEqual( Stem("nientemeno"), "nientemen" );
	deepEqual( Stem("niger"), "niger" );
	deepEqual( Stem("nigeria"), "niger" );
	deepEqual( Stem("night"), "night" );
	deepEqual( Stem("nigricanti"), "nigric" );
	deepEqual( Stem("niguarda"), "niguard" );
	deepEqual( Stem("nikita"), "nik" );
	deepEqual( Stem("nikkei"), "nikke" );
	deepEqual( Stem("nikolaievic"), "nikolaievic" );
	deepEqual( Stem("nimis"), "nimis" );
	deepEqual( Stem("nina"), "nin" );
	deepEqual( Stem("ninistro"), "ninistr" );
	deepEqual( Stem("ninnandolo"), "ninn" );
	deepEqual( Stem("nino"), "nin" );
	deepEqual( Stem("nipar"), "nip" );
	deepEqual( Stem("nipote"), "nipot" );
	deepEqual( Stem("nipoti"), "nipot" );
	deepEqual( Stem("nipotino"), "nipotin" );
	deepEqual( Stem("nippo"), "nipp" );
	deepEqual( Stem("nippon"), "nippon" );
	deepEqual( Stem("niro"), "nir" );
	deepEqual( Stem("niven"), "niven" );
	deepEqual( Stem("nivers"), "nivers" );
	deepEqual( Stem("nizza"), "nizz" );
	deepEqual( Stem("nizzazione"), "nizzazion" );
	deepEqual( Stem("nizzola"), "nizzol" );
	deepEqual( Stem("nnnn"), "nnnn" );
	deepEqual( Stem("no"), "no" );
	deepEqual( Stem("nò"), "nò" );
	deepEqual( Stem("nobel"), "nobel" );
	deepEqual( Stem("noberto"), "nobert" );
	deepEqual( Stem("nobil"), "nobil" );
	deepEqual( Stem("nobile"), "nobil" );
	deepEqual( Stem("nobilè"), "nobil" );
	deepEqual( Stem("nobili"), "nobil" );
	deepEqual( Stem("nobilissimo"), "nobilissim" );
	deepEqual( Stem("nobilmente"), "nobil" );
	deepEqual( Stem("nobiltà"), "nobilt" );
	deepEqual( Stem("nocca"), "nocc" );
	deepEqual( Stem("nocchiuto"), "nocc" );
	deepEqual( Stem("noccioli"), "nocciol" );
	deepEqual( Stem("noce"), "noc" );
	deepEqual( Stem("nocerina"), "nocerin" );
	deepEqual( Stem("noceto"), "nocet" );
	deepEqual( Stem("noci"), "noc" );
	deepEqual( Stem("nocive"), "nociv" );
	deepEqual( Stem("noderoso"), "noder" );
	deepEqual( Stem("nodi"), "nod" );
	deepEqual( Stem("nodo"), "nod" );
	deepEqual( Stem("noè"), "noè" );
	deepEqual( Stem("noel"), "noel" );
	deepEqual( Stem("noi"), "noi" );
	deepEqual( Stem("noì"), "noì" );
	deepEqual( Stem("noia"), "noi" );
	deepEqual( Stem("noie"), "noi" );
	deepEqual( Stem("noiosa"), "noios" );
	deepEqual( Stem("noiose"), "noios" );
	deepEqual( Stem("noiosi"), "noios" );
	deepEqual( Stem("noioso"), "noios" );
	deepEqual( Stem("noir"), "noir" );
	deepEqual( Stem("nokia"), "nok" );
	deepEqual( Stem("nola"), "nol" );
	deepEqual( Stem("noleggia"), "nolegg" );
	deepEqual( Stem("noleggiato"), "nolegg" );
	deepEqual( Stem("nomaccio"), "nomacc" );
	deepEqual( Stem("nome"), "nom" );
	deepEqual( Stem("nomè"), "nom" );
	deepEqual( Stem("nomenclatura"), "nomenclatur" );
	deepEqual( Stem("nomi"), "nom" );
	deepEqual( Stem("nomina"), "nomin" );
	deepEqual( Stem("nominale"), "nominal" );
	deepEqual( Stem("nominar"), "nomin" );
	deepEqual( Stem("nominare"), "nomin" );
	deepEqual( Stem("nominarla"), "nomin" );
	deepEqual( Stem("nominarlo"), "nomin" );
	deepEqual( Stem("nominarmi"), "nomin" );
	deepEqual( Stem("nominata"), "nomin" );
	deepEqual( Stem("nominate"), "nomin" );
	deepEqual( Stem("nominati"), "nomin" );
	deepEqual( Stem("nominato"), "nomin" );
	deepEqual( Stem("nominava"), "nomin" );
	deepEqual( Stem("nomine"), "nomin" );
	deepEqual( Stem("nomini"), "nomin" );
	deepEqual( Stem("nominiamo"), "nomin" );
	deepEqual( Stem("nominitive"), "nominit" );
	deepEqual( Stem("nomino"), "nomin" );
	deepEqual( Stem("nominò"), "nomin" );
	deepEqual( Stem("nomisma"), "nomism" );
	deepEqual( Stem("non"), "non" );
	deepEqual( Stem("nonchè"), "nonc" );
	deepEqual( Stem("noncurante"), "noncur" );
	deepEqual( Stem("noncuranza"), "noncur" );
	deepEqual( Stem("nondimeno"), "nondimen" );
	deepEqual( Stem("nones"), "nones" );
	deepEqual( Stem("nonfa"), "nonf" );
	deepEqual( Stem("noni"), "non" );
	deepEqual( Stem("nonna"), "nonn" );
	deepEqual( Stem("nonni"), "nonn" );
	deepEqual( Stem("nonno"), "nonn" );
	deepEqual( Stem("nonosolomoda"), "nonosolomod" );
	deepEqual( Stem("nonostante"), "nonost" );
	deepEqual( Stem("nonsolomoda"), "nonsolomod" );
	deepEqual( Stem("norberto"), "norbert" );
	deepEqual( Stem("nord"), "nord" );
	deepEqual( Stem("nordafricanò"), "nordafrican" );
	deepEqual( Stem("nordamerica"), "nordamer" );
	deepEqual( Stem("nordcapital"), "nordcapital" );
	deepEqual( Stem("nordfondo"), "nordfond" );
	deepEqual( Stem("nordica"), "nordic" );
	deepEqual( Stem("nordio"), "nord" );
	deepEqual( Stem("nordiste"), "nordist" );
	deepEqual( Stem("norditalia"), "nordital" );
	deepEqual( Stem("nordmix"), "nordmix" );
	deepEqual( Stem("norge"), "norg" );
	deepEqual( Stem("norma"), "norm" );
	deepEqual( Stem("normale"), "normal" );
	deepEqual( Stem("normali"), "normal" );
	deepEqual( Stem("normalità"), "normal" );
	deepEqual( Stem("normalizzazione"), "normalizz" );
	deepEqual( Stem("normalmente"), "normal" );
	deepEqual( Stem("normativa"), "normat" );
	deepEqual( Stem("normative"), "normat" );
	deepEqual( Stem("norme"), "norm" );
	deepEqual( Stem("norsk"), "norsk" );
	deepEqual( Stem("north"), "north" );
	deepEqual( Stem("norvegese"), "norveges" );
	deepEqual( Stem("norvegesi"), "norveges" );
	deepEqual( Stem("norvegia"), "norveg" );
	deepEqual( Stem("nos"), "nos" );
	deepEqual( Stem("noseda"), "nosed" );
	deepEqual( Stem("nostir"), "nost" );
	deepEqual( Stem("nostra"), "nostr" );
	deepEqual( Stem("nostre"), "nostr" );
	deepEqual( Stem("nostri"), "nostr" );
	deepEqual( Stem("nostro"), "nostr" );
	deepEqual( Stem("nota"), "not" );
	deepEqual( Stem("notabile"), "notabil" );
	deepEqual( Stem("notabili"), "notabil" );
	deepEqual( Stem("notabilmente"), "notabil" );
	deepEqual( Stem("notaio"), "notai" );
	deepEqual( Stem("notando"), "not" );
	deepEqual( Stem("notano"), "not" );
	deepEqual( Stem("notar"), "not" );
	deepEqual( Stem("notare"), "not" );
	deepEqual( Stem("notari"), "notar" );
	deepEqual( Stem("notarile"), "notaril" );
	deepEqual( Stem("notaristefano"), "notaristef" );
	deepEqual( Stem("notarne"), "not" );
	deepEqual( Stem("notaro"), "notar" );
	deepEqual( Stem("notate"), "not" );
	deepEqual( Stem("notati"), "not" );
	deepEqual( Stem("notato"), "not" );
	deepEqual( Stem("notava"), "not" );
	deepEqual( Stem("notavan"), "notavan" );
	deepEqual( Stem("notazioni"), "notazion" );
	deepEqual( Stem("note"), "not" );
	deepEqual( Stem("notevole"), "notevol" );
	deepEqual( Stem("notevoli"), "notevol" );
	deepEqual( Stem("notevolmente"), "notevol" );
	deepEqual( Stem("noti"), "not" );
	deepEqual( Stem("noticina"), "noticin" );
	deepEqual( Stem("notificato"), "notific" );
	deepEqual( Stem("notissimo"), "notissim" );
	deepEqual( Stem("notitia"), "notit" );
	deepEqual( Stem("notize"), "notiz" );
	deepEqual( Stem("notizia"), "notiz" );
	deepEqual( Stem("notizià"), "notiz" );
	deepEqual( Stem("notiziari"), "notiziar" );
	deepEqual( Stem("notiziario"), "notiziar" );
	deepEqual( Stem("notizie"), "notiz" );
	deepEqual( Stem("noto"), "not" );
	deepEqual( Stem("notorietà"), "notoriet" );
	deepEqual( Stem("notre"), "notr" );
	deepEqual( Stem("notta"), "nott" );
	deepEqual( Stem("nottata"), "nott" );
	deepEqual( Stem("notte"), "nott" );
	deepEqual( Stem("notti"), "nott" );
	deepEqual( Stem("nottingham"), "nottingham" );
	deepEqual( Stem("notturna"), "notturn" );
	deepEqual( Stem("notturno"), "notturn" );
	deepEqual( Stem("nov"), "nov" );
	deepEqual( Stem("novamente"), "nov" );
	deepEqual( Stem("novanta"), "novant" );
	deepEqual( Stem("novantacinque"), "novantacinqu" );
	deepEqual( Stem("novantanove"), "novantanov" );
	deepEqual( Stem("novantasei"), "novantase" );
	deepEqual( Stem("novara"), "novar" );
	deepEqual( Stem("novatore"), "novator" );
	deepEqual( Stem("nove"), "nov" );
	deepEqual( Stem("novelle"), "novell" );
	deepEqual( Stem("novellisti"), "novell" );
	deepEqual( Stem("novembre"), "novembr" );
	deepEqual( Stem("novi"), "nov" );
	deepEqual( Stem("noville"), "novill" );
	deepEqual( Stem("novità"), "novit" );
	deepEqual( Stem("novizi"), "noviz" );
	deepEqual( Stem("noviziato"), "noviz" );
	deepEqual( Stem("novizio"), "noviz" );
	deepEqual( Stem("novoie"), "novoi" );
	deepEqual( Stem("nozhai"), "nozha" );
	deepEqual( Stem("nozione"), "nozion" );
	deepEqual( Stem("nozioni"), "nozion" );
	deepEqual( Stem("nozze"), "nozz" );
	deepEqual( Stem("np"), "np" );
	deepEqual( Stem("npa"), "npa" );
	deepEqual( Stem("npd"), "npd" );
	deepEqual( Stem("nr"), "nr" );
	deepEqual( Stem("ns"), "ns" );
	deepEqual( Stem("nsentire"), "nsent" );
	deepEqual( Stem("nt"), "nt" );
	deepEqual( Stem("ntv"), "ntv" );
	deepEqual( Stem("nu"), "nu" );
	deepEqual( Stem("nubi"), "nub" );
	deepEqual( Stem("nuca"), "nuc" );
	deepEqual( Stem("nuciari"), "nuciar" );
	deepEqual( Stem("nuclear"), "nucl" );
	deepEqual( Stem("nucleare"), "nucl" );
	deepEqual( Stem("nucleari"), "nuclear" );
	deepEqual( Stem("nucleo"), "nucle" );
	deepEqual( Stem("nuda"), "nud" );
	deepEqual( Stem("nude"), "nud" );
	deepEqual( Stem("nudi"), "nud" );
	deepEqual( Stem("nudità"), "nudit" );
	deepEqual( Stem("nudrita"), "nudr" );
	deepEqual( Stem("nuestro"), "nuestr" );
	deepEqual( Stem("nugolo"), "nugol" );
	deepEqual( Stem("nuits"), "nuits" );
	deepEqual( Stem("null"), "null" );
	deepEqual( Stem("nulla"), "null" );
	deepEqual( Stem("nulladimeno"), "nulladimen" );
	deepEqual( Stem("nulle"), "null" );
	deepEqual( Stem("nulli"), "null" );
	deepEqual( Stem("nullità"), "nullit" );
	deepEqual( Stem("numbatkaime"), "numbatkaim" );
	deepEqual( Stem("numerazione"), "numer" );
	deepEqual( Stem("numeri"), "numer" );
	deepEqual( Stem("numerica"), "numer" );
	deepEqual( Stem("numero"), "numer" );
	deepEqual( Stem("numerosa"), "numer" );
	deepEqual( Stem("numerose"), "numer" );
	deepEqual( Stem("numerosi"), "numer" );
	deepEqual( Stem("numerosissimi"), "numerosissim" );
	deepEqual( Stem("nunzio"), "nunz" );
	deepEqual( Stem("nuocciano"), "nuocc" );
	deepEqual( Stem("nuocere"), "nuoc" );
	deepEqual( Stem("nuora"), "nuor" );
	deepEqual( Stem("nuore"), "nuor" );
	deepEqual( Stem("nuoro"), "nuor" );
	deepEqual( Stem("nuotando"), "nuot" );
	deepEqual( Stem("nuoto"), "nuot" );
	deepEqual( Stem("nuov"), "nuov" );
	deepEqual( Stem("nuova"), "nuov" );
	deepEqual( Stem("nuovamente"), "nuov" );
	deepEqual( Stem("nuove"), "nuov" );
	deepEqual( Stem("nuovi"), "nuov" );
	deepEqual( Stem("nuovo"), "nuov" );
	deepEqual( Stem("nutre"), "nutr" );
	deepEqual( Stem("nutrienti"), "nutrient" );
	deepEqual( Stem("nutrirsi"), "nutr" );
	deepEqual( Stem("nutrito"), "nutr" );
	deepEqual( Stem("nutrono"), "nutr" );
	deepEqual( Stem("nuvola"), "nuvol" );
	deepEqual( Stem("nuvolaglia"), "nuvolagl" );
	deepEqual( Stem("nuvole"), "nuvol" );
	deepEqual( Stem("nuvoli"), "nuvol" );
	deepEqual( Stem("nuvolo"), "nuvol" );
	deepEqual( Stem("nuvoloni"), "nuvolon" );
	deepEqual( Stem("nuvolosità"), "nuvolos" );
	deepEqual( Stem("nuvoloso"), "nuvol" );
	deepEqual( Stem("nuziale"), "nuzial" );
	deepEqual( Stem("nv"), "nv" );
	deepEqual( Stem("nwl"), "nwl" );
	deepEqual( Stem("o"), "o" );
	deepEqual( Stem("oasi"), "oas" );
	deepEqual( Stem("oaxaca"), "oaxac" );
	deepEqual( Stem("obb"), "obb" );
	deepEqual( Stem("obbedienza"), "obbedient" );
	deepEqual( Stem("obbedita"), "obbed" );
	deepEqual( Stem("obbiettivi"), "obbiett" );
	deepEqual( Stem("obbiettivo"), "obbiett" );
	deepEqual( Stem("obbl"), "obbl" );
	deepEqual( Stem("obblig"), "obblig" );
	deepEqual( Stem("obbliga"), "obblig" );
	deepEqual( Stem("obbligandosi"), "obblig" );
	deepEqual( Stem("obbligante"), "obblig" );
	deepEqual( Stem("obbligare"), "obblig" );
	deepEqual( Stem("obbligarla"), "obblig" );
	deepEqual( Stem("obbligasse"), "obblig" );
	deepEqual( Stem("obbligata"), "obblig" );
	deepEqual( Stem("obbligati"), "obblig" );
	deepEqual( Stem("obbligatissimo"), "obbligatissim" );
	deepEqual( Stem("obbligato"), "obblig" );
	deepEqual( Stem("obbligatoria"), "obbligator" );
	deepEqual( Stem("obbligatoriamente"), "obbligator" );
	deepEqual( Stem("obbligatorio"), "obbligator" );
	deepEqual( Stem("obbligavano"), "obblig" );
	deepEqual( Stem("obbligaz"), "obbligaz" );
	deepEqual( Stem("obbligazionar"), "obbligazion" );
	deepEqual( Stem("obbligazionari"), "obbligazionar" );
	deepEqual( Stem("obbligazionario"), "obbligazionar" );
	deepEqual( Stem("obbligazione"), "obblig" );
	deepEqual( Stem("obbligazioni"), "obblig" );
	deepEqual( Stem("obblighi"), "obblig" );
	deepEqual( Stem("obbligo"), "obblig" );
	deepEqual( Stem("obertwart"), "obertwart" );
	deepEqual( Stem("obesi"), "obes" );
	deepEqual( Stem("obesità"), "obes" );
	deepEqual( Stem("obiettivi"), "obiett" );
	deepEqual( Stem("obiettività"), "obiett" );
	deepEqual( Stem("obiettivo"), "obiett" );
	deepEqual( Stem("obiettori"), "obiettor" );
	deepEqual( Stem("obiezion"), "obiezion" );
	deepEqual( Stem("obiezione"), "obiezion" );
	deepEqual( Stem("obiezioni"), "obiezion" );
	deepEqual( Stem("oblazione"), "oblazion" );
	deepEqual( Stem("oblio"), "obli" );
	deepEqual( Stem("oblìo"), "oblì" );
	deepEqual( Stem("obliquo"), "obliqu" );
	deepEqual( Stem("oblivione"), "oblivion" );
	deepEqual( Stem("observer"), "observer" );
	deepEqual( Stem("obsta"), "obsta" );
	deepEqual( Stem("oca"), "oca" );
	deepEqual( Stem("occasion"), "occasion" );
	deepEqual( Stem("occasionale"), "occasional" );
	deepEqual( Stem("occasionali"), "occasional" );
	deepEqual( Stem("occasione"), "occasion" );
	deepEqual( Stem("occasioni"), "occasion" );
	deepEqual( Stem("occelli"), "occell" );
	deepEqual( Stem("occhetto"), "occhett" );
	deepEqual( Stem("occhi"), "occhi" );
	deepEqual( Stem("occhiacci"), "occhiacc" );
	deepEqual( Stem("occhiaie"), "occhiai" );
	deepEqual( Stem("occhiali"), "occhial" );
	deepEqual( Stem("occhiata"), "occhi" );
	deepEqual( Stem("occhiate"), "occhi" );
	deepEqual( Stem("occhiatina"), "occhiatin" );
	deepEqual( Stem("occhiello"), "occhiell" );
	deepEqual( Stem("occhietti"), "occhiett" );
	deepEqual( Stem("occhij"), "occhij" );
	deepEqual( Stem("occhio"), "occhi" );
	deepEqual( Stem("occhioni"), "occhion" );
	deepEqual( Stem("occidentale"), "occidental" );
	deepEqual( Stem("occidentali"), "occidental" );
	deepEqual( Stem("occidente"), "occident" );
	deepEqual( Stem("occorre"), "occorr" );
	deepEqual( Stem("occorrente"), "occorrent" );
	deepEqual( Stem("occorrenti"), "occorrent" );
	deepEqual( Stem("occorrenza"), "occorrent" );
	deepEqual( Stem("occorrenze"), "occorrent" );
	deepEqual( Stem("occorrerà"), "occorr" );
	deepEqual( Stem("occorrere"), "occorr" );
	deepEqual( Stem("occorrerebbe"), "occorr" );
	deepEqual( Stem("occorresse"), "occorress" );
	deepEqual( Stem("occorreva"), "occorr" );
	deepEqual( Stem("occorrevano"), "occorr" );
	deepEqual( Stem("occorron"), "occorron" );
	deepEqual( Stem("occorrono"), "occorr" );
	deepEqual( Stem("occorsi"), "occors" );
	deepEqual( Stem("occorso"), "occors" );
	deepEqual( Stem("occorsogli"), "occorsogl" );
	deepEqual( Stem("occulta"), "occult" );
	deepEqual( Stem("occulte"), "occult" );
	deepEqual( Stem("occulto"), "occult" );
	deepEqual( Stem("occupa"), "occup" );
	deepEqual( Stem("occupando"), "occup" );
	deepEqual( Stem("occupano"), "occup" );
	deepEqual( Stem("occupante"), "occup" );
	deepEqual( Stem("occupanti"), "occup" );
	deepEqual( Stem("occupar"), "occup" );
	deepEqual( Stem("occupare"), "occup" );
	deepEqual( Stem("occuparli"), "occup" );
	deepEqual( Stem("occuparlo"), "occup" );
	deepEqual( Stem("occuparmi"), "occup" );
	deepEqual( Stem("occuparono"), "occup" );
	deepEqual( Stem("occuparsi"), "occup" );
	deepEqual( Stem("occupasse"), "occup" );
	deepEqual( Stem("occupata"), "occup" );
	deepEqual( Stem("occupate"), "occup" );
	deepEqual( Stem("occupati"), "occup" );
	deepEqual( Stem("occupato"), "occup" );
	deepEqual( Stem("occupava"), "occup" );
	deepEqual( Stem("occupavan"), "occupavan" );
	deepEqual( Stem("occupazionale"), "occupazional" );
	deepEqual( Stem("occupazionali"), "occupazional" );
	deepEqual( Stem("occupazione"), "occup" );
	deepEqual( Stem("occupazionè"), "occupazion" );
	deepEqual( Stem("occupazioni"), "occup" );
	deepEqual( Stem("occuperà"), "occup" );
	deepEqual( Stem("occupò"), "occup" );
	deepEqual( Stem("ocean"), "ocean" );
	deepEqual( Stem("oceaniche"), "ocean" );
	deepEqual( Stem("oceano"), "oce" );
	deepEqual( Stem("oche"), "oche" );
	deepEqual( Stem("òconnor"), "òconnor" );
	deepEqual( Stem("ocosingo"), "ocosing" );
	deepEqual( Stem("ocp"), "ocp" );
	deepEqual( Stem("oculari"), "ocular" );
	deepEqual( Stem("od"), "od" );
	deepEqual( Stem("odan"), "odan" );
	deepEqual( Stem("oder"), "oder" );
	deepEqual( Stem("odessa"), "odess" );
	deepEqual( Stem("odi"), "odi" );
	deepEqual( Stem("odiare"), "odi" );
	deepEqual( Stem("odiata"), "odi" );
	deepEqual( Stem("odiati"), "odi" );
	deepEqual( Stem("odiato"), "odi" );
	deepEqual( Stem("odiava"), "odi" );
	deepEqual( Stem("odiavo"), "odi" );
	deepEqual( Stem("odierna"), "odiern" );
	deepEqual( Stem("odierne"), "odi" );
	deepEqual( Stem("odierni"), "odiern" );
	deepEqual( Stem("odierno"), "odiern" );
	deepEqual( Stem("odio"), "odi" );
	deepEqual( Stem("odiosa"), "odios" );
	deepEqual( Stem("odiose"), "odios" );
	deepEqual( Stem("odiosi"), "odios" );
	deepEqual( Stem("odiosissimo"), "odiosissim" );
	deepEqual( Stem("odiosità"), "odios" );
	deepEqual( Stem("odioso"), "odios" );
	deepEqual( Stem("odore"), "odor" );
	deepEqual( Stem("odori"), "odor" );
	deepEqual( Stem("odorose"), "odor" );
	deepEqual( Stem("of"), "of" );
	deepEqual( Stem("off"), "off" );
	deepEqual( Stem("offende"), "offend" );
	deepEqual( Stem("offendendo"), "offend" );
	deepEqual( Stem("offender"), "offender" );
	deepEqual( Stem("offendere"), "offend" );
	deepEqual( Stem("offenderle"), "offend" );
	deepEqual( Stem("offensiva"), "offens" );
	deepEqual( Stem("offensive"), "offens" );
	deepEqual( Stem("offensivo"), "offens" );
	deepEqual( Stem("offensori"), "offensor" );
	deepEqual( Stem("offer"), "offer" );
	deepEqual( Stem("offerse"), "offers" );
	deepEqual( Stem("offerta"), "offert" );
	deepEqual( Stem("offerte"), "offert" );
	deepEqual( Stem("offerti"), "offert" );
	deepEqual( Stem("offerto"), "offert" );
	deepEqual( Stem("offesa"), "offes" );
	deepEqual( Stem("offese"), "offes" );
	deepEqual( Stem("offesi"), "offes" );
	deepEqual( Stem("offeso"), "offes" );
	deepEqual( Stem("office"), "offic" );
	deepEqual( Stem("officiale"), "official" );
	deepEqual( Stem("officina"), "officin" );
	deepEqual( Stem("officine"), "officin" );
	deepEqual( Stem("offra"), "offra" );
	deepEqual( Stem("offre"), "offre" );
	deepEqual( Stem("offrendo"), "offrend" );
	deepEqual( Stem("offrì"), "offrì" );
	deepEqual( Stem("offrir"), "offrir" );
	deepEqual( Stem("offrirà"), "offrir" );
	deepEqual( Stem("offrire"), "offrir" );
	deepEqual( Stem("offrirgli"), "offrirgl" );
	deepEqual( Stem("offrirle"), "offrirl" );
	deepEqual( Stem("offrirvi"), "offrirv" );
	deepEqual( Stem("offriva"), "offriv" );
	deepEqual( Stem("offrivan"), "offrivan" );
	deepEqual( Stem("offrivano"), "offriv" );
	deepEqual( Stem("offrivo"), "offriv" );
	deepEqual( Stem("offrono"), "offron" );
	deepEqual( Stem("offuscata"), "offusc" );
	deepEqual( Stem("oggetti"), "oggett" );
	deepEqual( Stem("oggettistica"), "oggettist" );
	deepEqual( Stem("oggettive"), "oggett" );
	deepEqual( Stem("oggettivo"), "oggett" );
	deepEqual( Stem("oggetto"), "oggett" );
	deepEqual( Stem("oggi"), "oggi" );
	deepEqual( Stem("oggigiorno"), "oggigiorn" );
	deepEqual( Stem("ogn"), "ogn" );
	deepEqual( Stem("ogni"), "ogni" );
	deepEqual( Stem("ogniuno"), "ogniun" );
	deepEqual( Stem("ognun"), "ognun" );
	deepEqual( Stem("ognuna"), "ognun" );
	deepEqual( Stem("ognuno"), "ognun" );
	deepEqual( Stem("oh"), "oh" );
	deepEqual( Stem("ohe"), "ohe" );
	deepEqual( Stem("ohi"), "ohi" );
	deepEqual( Stem("ohimè"), "ohim" );
	deepEqual( Stem("oibò"), "oib" );
	deepEqual( Stem("oil"), "oil" );
	deepEqual( Stem("ok"), "ok" );
	deepEqual( Stem("olà"), "olà" );
	deepEqual( Stem("olaf"), "olaf" );
	deepEqual( Stem("olanda"), "oland" );
	deepEqual( Stem("olandese"), "olandes" );
	deepEqual( Stem("olandesi"), "olandes" );
	deepEqual( Stem("olbia"), "olbi" );
	deepEqual( Stem("olcese"), "olces" );
	deepEqual( Stem("ole"), "ole" );
	deepEqual( Stem("oleg"), "oleg" );
	deepEqual( Stem("oleodotto"), "oleodott" );
	deepEqual( Stem("olevano"), "olev" );
	deepEqual( Stem("olidata"), "olid" );
	deepEqual( Stem("oligarchia"), "oligarc" );
	deepEqual( Stem("oligarchie"), "oligarc" );
	deepEqual( Stem("oligopolio"), "oligopol" );
	deepEqual( Stem("olimpiadi"), "olimpiad" );
	deepEqual( Stem("olimpica"), "olimp" );
	deepEqual( Stem("olimpici"), "olimp" );
	deepEqual( Stem("olimpico"), "olimp" );
	deepEqual( Stem("olio"), "oli" );
	deepEqual( Stem("oliseh"), "oliseh" );
	deepEqual( Stem("oliva"), "oliv" );
	deepEqual( Stem("olivares"), "olivares" );
	deepEqual( Stem("olive"), "oliv" );
	deepEqual( Stem("oliveira"), "oliveir" );
	deepEqual( Stem("olivelli"), "olivell" );
	deepEqual( Stem("olivetti"), "olivett" );
	deepEqual( Stem("oliviero"), "olivier" );
	deepEqual( Stem("olmi"), "olmi" );
	deepEqual( Stem("olocausto"), "olocaust" );
	deepEqual( Stem("oloferne"), "olof" );
	deepEqual( Stem("olona"), "olon" );
	deepEqual( Stem("olp"), "olp" );
	deepEqual( Stem("oltraggio"), "oltragg" );
	deepEqual( Stem("oltre"), "oltre" );
	deepEqual( Stem("oltrechè"), "oltrec" );
	deepEqual( Stem("oltremodo"), "oltremod" );
	deepEqual( Stem("oltreoceano"), "oltreoc" );
	deepEqual( Stem("oltrepassare"), "oltrepass" );
	deepEqual( Stem("oltrepassava"), "oltrepass" );
	deepEqual( Stem("oltrepassò"), "oltrepass" );
	deepEqual( Stem("oltretutto"), "oltretutt" );
	deepEqual( Stem("oltreutto"), "oltreutt" );
	deepEqual( Stem("om"), "om" );
	deepEqual( Stem("omacci"), "omacc" );
	deepEqual( Stem("omaggi"), "omagg" );
	deepEqual( Stem("omaggio"), "omagg" );
	deepEqual( Stem("omar"), "omar" );
	deepEqual( Stem("ombra"), "ombra" );
	deepEqual( Stem("ombre"), "ombre" );
	deepEqual( Stem("ombrelli"), "ombrell" );
	deepEqual( Stem("ombrello"), "ombrell" );
	deepEqual( Stem("ombretta"), "ombrett" );
	deepEqual( Stem("ombrosa"), "ombros" );
	deepEqual( Stem("ombroso"), "ombros" );
	deepEqual( Stem("omelia"), "omel" );
	deepEqual( Stem("omero"), "omer" );
	deepEqual( Stem("omessi"), "omess" );
	deepEqual( Stem("omesso"), "omess" );
	deepEqual( Stem("ometteremo"), "omett" );
	deepEqual( Stem("omiciattolo"), "omiciattol" );
	deepEqual( Stem("omicida"), "omicid" );
	deepEqual( Stem("omicide"), "omicid" );
	deepEqual( Stem("omicidi"), "omicid" );
	deepEqual( Stem("omicidii"), "omicid" );
	deepEqual( Stem("omicidio"), "omicid" );
	deepEqual( Stem("omino"), "omin" );
	deepEqual( Stem("omnia"), "omni" );
	deepEqual( Stem("omnitel"), "omnitel" );
	deepEqual( Stem("omogenee"), "omogene" );
	deepEqual( Stem("omogenei"), "omogene" );
	deepEqual( Stem("omologato"), "omolog" );
	deepEqual( Stem("omologazione"), "omolog" );
	deepEqual( Stem("omologo"), "omolog" );
	deepEqual( Stem("omonime"), "omonim" );
	deepEqual( Stem("omonimo"), "omonim" );
	deepEqual( Stem("omosessuali"), "omosessual" );
	deepEqual( Stem("omosessualità"), "omosessual" );
	deepEqual( Stem("on"), "on" );
	deepEqual( Stem("once"), "once" );
	deepEqual( Stem("oncia"), "onci" );
	deepEqual( Stem("ond"), "ond" );
	deepEqual( Stem("onda"), "onda" );
	deepEqual( Stem("ondata"), "ondat" );
	deepEqual( Stem("ondate"), "ondat" );
	deepEqual( Stem("onde"), "onde" );
	deepEqual( Stem("ondeggiamento"), "ondegg" );
	deepEqual( Stem("ondeggiar"), "ondegg" );
	deepEqual( Stem("ondeggiare"), "ondegg" );
	deepEqual( Stem("ondoso"), "ondos" );
	deepEqual( Stem("onerose"), "oner" );
	deepEqual( Stem("onesta"), "onest" );
	deepEqual( Stem("onestamente"), "onest" );
	deepEqual( Stem("oneste"), "onest" );
	deepEqual( Stem("onesti"), "onest" );
	deepEqual( Stem("onesto"), "onest" );
	deepEqual( Stem("ong"), "ong" );
	deepEqual( Stem("onninamente"), "onnin" );
	deepEqual( Stem("onnipresente"), "onnipresent" );
	deepEqual( Stem("onofrio"), "onofr" );
	deepEqual( Stem("onor"), "onor" );
	deepEqual( Stem("onora"), "onor" );
	deepEqual( Stem("onorare"), "onor" );
	deepEqual( Stem("onoraria"), "onorar" );
	deepEqual( Stem("onorario"), "onorar" );
	deepEqual( Stem("onorarli"), "onor" );
	deepEqual( Stem("onorata"), "onor" );
	deepEqual( Stem("onorati"), "onor" );
	deepEqual( Stem("onorato"), "onor" );
	deepEqual( Stem("onore"), "onor" );
	deepEqual( Stem("onorè"), "onor" );
	deepEqual( Stem("onorevole"), "onorevol" );
	deepEqual( Stem("onori"), "onor" );
	deepEqual( Stem("onorò"), "onor" );
	deepEqual( Stem("onta"), "onta" );
	deepEqual( Stem("ontrola"), "ontrol" );
	deepEqual( Stem("onu"), "onu" );
	deepEqual( Stem("opa"), "opa" );
	deepEqual( Stem("opec"), "opec" );
	deepEqual( Stem("opel"), "opel" );
	deepEqual( Stem("open"), "open" );
	deepEqual( Stem("opera"), "oper" );
	deepEqual( Stem("operai"), "opera" );
	deepEqual( Stem("operaio"), "operai" );
	deepEqual( Stem("operando"), "oper" );
	deepEqual( Stem("operano"), "oper" );
	deepEqual( Stem("operante"), "oper" );
	deepEqual( Stem("operanti"), "oper" );
	deepEqual( Stem("operare"), "oper" );
	deepEqual( Stem("operata"), "oper" );
	deepEqual( Stem("operationi"), "operation" );
	deepEqual( Stem("operativa"), "oper" );
	deepEqual( Stem("operative"), "oper" );
	deepEqual( Stem("operativi"), "oper" );
	deepEqual( Stem("operativo"), "oper" );
	deepEqual( Stem("operativò"), "operativ" );
	deepEqual( Stem("operato"), "oper" );
	deepEqual( Stem("operatore"), "oper" );
	deepEqual( Stem("operatori"), "oper" );
	deepEqual( Stem("operava"), "oper" );
	deepEqual( Stem("operavano"), "oper" );
	deepEqual( Stem("operazione"), "oper" );
	deepEqual( Stem("operazioni"), "oper" );
	deepEqual( Stem("opere"), "oper" );
	deepEqual( Stem("opererà"), "oper" );
	deepEqual( Stem("operetta"), "operett" );
	deepEqual( Stem("operi"), "oper" );
	deepEqual( Stem("operosa"), "oper" );
	deepEqual( Stem("operose"), "oper" );
	deepEqual( Stem("opet"), "opet" );
	deepEqual( Stem("opinion"), "opinion" );
	deepEqual( Stem("opinione"), "opinion" );
	deepEqual( Stem("opinioni"), "opinion" );
	deepEqual( Stem("oplà"), "oplà" );
	deepEqual( Stem("oppone"), "oppon" );
	deepEqual( Stem("opponendo"), "oppon" );
	deepEqual( Stem("opponeva"), "oppon" );
	deepEqual( Stem("opponevo"), "oppon" );
	deepEqual( Stem("oppongono"), "oppong" );
	deepEqual( Stem("opponiamo"), "oppon" );
	deepEqual( Stem("opporci"), "opporc" );
	deepEqual( Stem("opporrà"), "opporr" );
	deepEqual( Stem("opporre"), "opporr" );
	deepEqual( Stem("opporremo"), "opporrem" );
	deepEqual( Stem("opporsi"), "oppors" );
	deepEqual( Stem("opportuna"), "opportun" );
	deepEqual( Stem("opportunamente"), "opportun" );
	deepEqual( Stem("opportune"), "opportun" );
	deepEqual( Stem("opportuni"), "opportun" );
	deepEqual( Stem("opportunismo"), "opportun" );
	deepEqual( Stem("opportunità"), "opportun" );
	deepEqual( Stem("opportuno"), "opportun" );
	deepEqual( Stem("oppositore"), "oppositor" );
	deepEqual( Stem("oppositori"), "oppositor" );
	deepEqual( Stem("opposizione"), "opposizion" );
	deepEqual( Stem("opposizone"), "opposizon" );
	deepEqual( Stem("opposta"), "oppost" );
	deepEqual( Stem("opposte"), "oppost" );
	deepEqual( Stem("opposti"), "oppost" );
	deepEqual( Stem("opposto"), "oppost" );
	deepEqual( Stem("oppressa"), "oppress" );
	deepEqual( Stem("oppressi"), "oppress" );
	deepEqual( Stem("oppressione"), "oppression" );
	deepEqual( Stem("oppressioni"), "oppression" );
	deepEqual( Stem("oppresso"), "oppress" );
	deepEqual( Stem("oppressore"), "oppressor" );
	deepEqual( Stem("opprima"), "opprim" );
	deepEqual( Stem("opprime"), "opprim" );
	deepEqual( Stem("opprimente"), "oppriment" );
	deepEqual( Stem("opprimer"), "opprimer" );
	deepEqual( Stem("opprimono"), "opprim" );
	deepEqual( Stem("oppure"), "oppur" );
	deepEqual( Stem("optare"), "optar" );
	deepEqual( Stem("opulenza"), "opulent" );
	deepEqual( Stem("opus"), "opus" );
	deepEqual( Stem("opuscolo"), "opuscol" );
	deepEqual( Stem("opzioni"), "opzion" );
	deepEqual( Stem("or"), "or" );
	deepEqual( Stem("ora"), "ora" );
	deepEqual( Stem("orafi"), "oraf" );
	deepEqual( Stem("orafo"), "oraf" );
	deepEqual( Stem("orale"), "oral" );
	deepEqual( Stem("oramai"), "orama" );
	deepEqual( Stem("orari"), "orar" );
	deepEqual( Stem("orario"), "orar" );
	deepEqual( Stem("oratore"), "orator" );
	deepEqual( Stem("oratori"), "orator" );
	deepEqual( Stem("oratorio"), "orator" );
	deepEqual( Stem("orazion"), "orazion" );
	deepEqual( Stem("orazione"), "orazion" );
	deepEqual( Stem("orazioni"), "orazion" );
	deepEqual( Stem("orbetello"), "orbetell" );
	deepEqual( Stem("orchestra"), "orchestr" );
	deepEqual( Stem("orchestrine"), "orchestrin" );
	deepEqual( Stem("orco"), "orco" );
	deepEqual( Stem("ord"), "ord" );
	deepEqual( Stem("orden"), "orden" );
	deepEqual( Stem("ordigni"), "ordign" );
	deepEqual( Stem("ordigno"), "ordign" );
	deepEqual( Stem("ordin"), "ordin" );
	deepEqual( Stem("ordina"), "ordin" );
	deepEqual( Stem("ordinamento"), "ordin" );
	deepEqual( Stem("ordinando"), "ordin" );
	deepEqual( Stem("ordinanza"), "ordin" );
	deepEqual( Stem("ordinanze"), "ordin" );
	deepEqual( Stem("ordinare"), "ordin" );
	deepEqual( Stem("ordinari"), "ordinar" );
	deepEqual( Stem("ordinaria"), "ordinar" );
	deepEqual( Stem("ordinariamente"), "ordinar" );
	deepEqual( Stem("ordinarie"), "ordinar" );
	deepEqual( Stem("ordinarii"), "ordinar" );
	deepEqual( Stem("ordinario"), "ordinar" );
	deepEqual( Stem("ordinata"), "ordin" );
	deepEqual( Stem("ordinatamente"), "ordinat" );
	deepEqual( Stem("ordinati"), "ordin" );
	deepEqual( Stem("ordinato"), "ordin" );
	deepEqual( Stem("ordinava"), "ordin" );
	deepEqual( Stem("ordinazioni"), "ordin" );
	deepEqual( Stem("ordine"), "ordin" );
	deepEqual( Stem("ordini"), "ordin" );
	deepEqual( Stem("ordinò"), "ordin" );
	deepEqual( Stem("ordir"), "ordir" );
	deepEqual( Stem("ordita"), "ordit" );
	deepEqual( Stem("ordite"), "ordit" );
	deepEqual( Stem("ordo"), "ordo" );
	deepEqual( Stem("ore"), "ore" );
	deepEqual( Stem("orè"), "orè" );
	deepEqual( Stem("orecchi"), "orecc" );
	deepEqual( Stem("orecchie"), "orecc" );
	deepEqual( Stem("orecchino"), "orecchin" );
	deepEqual( Stem("orecchio"), "orecc" );
	deepEqual( Stem("oreficeria"), "oreficer" );
	deepEqual( Stem("oreste"), "orest" );
	deepEqual( Stem("orga"), "orga" );
	deepEqual( Stem("organ"), "organ" );
	deepEqual( Stem("organi"), "organ" );
	deepEqual( Stem("organica"), "organ" );
	deepEqual( Stem("organiche"), "organ" );
	deepEqual( Stem("organici"), "organ" );
	deepEqual( Stem("organico"), "organ" );
	deepEqual( Stem("organigramma"), "organigramm" );
	deepEqual( Stem("organismi"), "organ" );
	deepEqual( Stem("organismo"), "organ" );
	deepEqual( Stem("organizzando"), "organizz" );
	deepEqual( Stem("organizzano"), "organizz" );
	deepEqual( Stem("organizzare"), "organizz" );
	deepEqual( Stem("organizzarsi"), "organizz" );
	deepEqual( Stem("organizzata"), "organizz" );
	deepEqual( Stem("organizzate"), "organizz" );
	deepEqual( Stem("organizzati"), "organizz" );
	deepEqual( Stem("organizzativa"), "organizz" );
	deepEqual( Stem("organizzative"), "organizz" );
	deepEqual( Stem("organizzativi"), "organizz" );
	deepEqual( Stem("organizzativo"), "organizz" );
	deepEqual( Stem("organizzato"), "organizz" );
	deepEqual( Stem("organizzatori"), "organizz" );
	deepEqual( Stem("organizzatrice"), "organizz" );
	deepEqual( Stem("organizzavano"), "organizz" );
	deepEqual( Stem("organizzazione"), "organizz" );
	deepEqual( Stem("organizzazioni"), "organizz" );
	deepEqual( Stem("organizziamo"), "organizz" );
	deepEqual( Stem("organo"), "organ" );
	deepEqual( Stem("orgasmo"), "orgasm" );
	deepEqual( Stem("orgini"), "orgin" );
	deepEqual( Stem("orgoglio"), "orgogl" );
	deepEqual( Stem("orgogliosa"), "orgogl" );
	deepEqual( Stem("orgogliosi"), "orgogl" );
	deepEqual( Stem("ori"), "ori" );
	deepEqual( Stem("oricalchi"), "oricalc" );
	deepEqual( Stem("orien"), "orien" );
	deepEqual( Stem("orientale"), "oriental" );
	deepEqual( Stem("orientali"), "oriental" );
	deepEqual( Stem("orientamenti"), "orient" );
	deepEqual( Stem("orientamento"), "orient" );
	deepEqual( Stem("orientarsi"), "orient" );
	deepEqual( Stem("oriente"), "orient" );
	deepEqual( Stem("orienteranno"), "orient" );
	deepEqual( Stem("orietta"), "oriett" );
	deepEqual( Stem("original"), "original" );
	deepEqual( Stem("originale"), "original" );
	deepEqual( Stem("originali"), "original" );
	deepEqual( Stem("originare"), "origin" );
	deepEqual( Stem("originari"), "originar" );
	deepEqual( Stem("originaria"), "originar" );
	deepEqual( Stem("originariamente"), "originar" );
	deepEqual( Stem("originarie"), "originar" );
	deepEqual( Stem("originario"), "originar" );
	deepEqual( Stem("originarono"), "origin" );
	deepEqual( Stem("origine"), "origin" );
	deepEqual( Stem("origini"), "origin" );
	deepEqual( Stem("oriz"), "oriz" );
	deepEqual( Stem("orizzontale"), "orizzontal" );
	deepEqual( Stem("orizzontalmente"), "orizzontal" );
	deepEqual( Stem("orizzonte"), "orizzont" );
	deepEqual( Stem("orlandi"), "orland" );
	deepEqual( Stem("orlandini"), "orlandin" );
	deepEqual( Stem("orlando"), "orland" );
	deepEqual( Stem("orlate"), "orlat" );
	deepEqual( Stem("orlati"), "orlat" );
	deepEqual( Stem("orli"), "orli" );
	deepEqual( Stem("orlo"), "orlo" );
	deepEqual( Stem("ormai"), "orma" );
	deepEqual( Stem("ormal"), "ormal" );
	deepEqual( Stem("ormeggiati"), "ormegg" );
	deepEqual( Stem("ormeggio"), "ormegg" );
	deepEqual( Stem("orna"), "orna" );
	deepEqual( Stem("ornamenti"), "ornament" );
	deepEqual( Stem("ornamento"), "ornament" );
	deepEqual( Stem("ornate"), "ornat" );
	deepEqual( Stem("ornato"), "ornat" );
	deepEqual( Stem("oro"), "oro" );
	deepEqual( Stem("orologi"), "orolog" );
	deepEqual( Stem("orologio"), "orolog" );
	deepEqual( Stem("oronzo"), "oronz" );
	deepEqual( Stem("oroscopo"), "oroscop" );
	deepEqual( Stem("orr"), "orr" );
	deepEqual( Stem("orrenda"), "orrend" );
	deepEqual( Stem("orrendo"), "orrend" );
	deepEqual( Stem("orribil"), "orribil" );
	deepEqual( Stem("orribile"), "orribil" );
	deepEqual( Stem("orribili"), "orribil" );
	deepEqual( Stem("orridi"), "orrid" );
	deepEqual( Stem("orrore"), "orror" );
	deepEqual( Stem("orrori"), "orror" );
	deepEqual( Stem("orsi"), "orsi" );
	deepEqual( Stem("orsono"), "orson" );
	deepEqual( Stem("orsù"), "orsù" );
	deepEqual( Stem("orti"), "orti" );
	deepEqual( Stem("orticello"), "orticell" );
	deepEqual( Stem("ortiche"), "ortic" );
	deepEqual( Stem("ortino"), "ortin" );
	deepEqual( Stem("orto"), "orto" );
	deepEqual( Stem("ortodossa"), "ortodoss" );
	deepEqual( Stem("ortodossia"), "ortodoss" );
	deepEqual( Stem("ortofrutta"), "ortofrutt" );
	deepEqual( Stem("ortografia"), "ortograf" );
	deepEqual( Stem("osaka"), "osak" );
	deepEqual( Stem("osama"), "osam" );
	deepEqual( Stem("osando"), "osand" );
	deepEqual( Stem("osannante"), "osann" );
	deepEqual( Stem("osannato"), "osann" );
	deepEqual( Stem("osar"), "osar" );
	deepEqual( Stem("osato"), "osat" );
	deepEqual( Stem("osava"), "osav" );
	deepEqual( Stem("osavan"), "osavan" );
	deepEqual( Stem("oscar"), "oscar" );
	deepEqual( Stem("oscene"), "oscen" );
	deepEqual( Stem("oscenità"), "oscen" );
	deepEqual( Stem("oscilla"), "oscill" );
	deepEqual( Stem("oscillava"), "oscill" );
	deepEqual( Stem("oscillazioni"), "oscill" );
	deepEqual( Stem("oscura"), "oscur" );
	deepEqual( Stem("oscuramento"), "oscur" );
	deepEqual( Stem("oscurare"), "oscur" );
	deepEqual( Stem("oscurarsi"), "oscur" );
	deepEqual( Stem("oscure"), "oscur" );
	deepEqual( Stem("oscuri"), "oscur" );
	deepEqual( Stem("oscurità"), "oscur" );
	deepEqual( Stem("oscuro"), "oscur" );
	deepEqual( Stem("osè"), "osè" );
	deepEqual( Stem("oshima"), "oshim" );
	deepEqual( Stem("osio"), "osi" );
	deepEqual( Stem("oslo"), "oslo" );
	deepEqual( Stem("osnabruecker"), "osnabruecker" );
	deepEqual( Stem("osò"), "osò" );
	deepEqual( Stem("ospedale"), "ospedal" );
	deepEqual( Stem("ospedaliere"), "ospedal" );
	deepEqual( Stem("ospedaliero"), "ospedalier" );
	deepEqual( Stem("ospedalizzazione"), "ospedalizz" );
	deepEqual( Stem("ospita"), "ospit" );
	deepEqual( Stem("ospitale"), "ospital" );
	deepEqual( Stem("ospitaletto"), "ospitalett" );
	deepEqual( Stem("ospitalità"), "ospital" );
	deepEqual( Stem("ospitare"), "ospit" );
	deepEqual( Stem("ospitarono"), "ospit" );
	deepEqual( Stem("ospitazione"), "ospit" );
	deepEqual( Stem("ospite"), "ospit" );
	deepEqual( Stem("ospiti"), "ospit" );
	deepEqual( Stem("ospizi"), "ospiz" );
	deepEqual( Stem("ospizio"), "ospiz" );
	deepEqual( Stem("ossa"), "ossa" );
	deepEqual( Stem("ossatura"), "ossatur" );
	deepEqual( Stem("ossequiata"), "ossequ" );
	deepEqual( Stem("ossequio"), "ossequ" );
	deepEqual( Stem("ossequioso"), "ossequ" );
	deepEqual( Stem("osseravto"), "osseravt" );
	deepEqual( Stem("osserva"), "osserv" );
	deepEqual( Stem("osservabile"), "osserv" );
	deepEqual( Stem("osservando"), "osserv" );
	deepEqual( Stem("osservanza"), "osserv" );
	deepEqual( Stem("osservaotri"), "osservaotr" );
	deepEqual( Stem("osservar"), "osserv" );
	deepEqual( Stem("osservare"), "osserv" );
	deepEqual( Stem("osservarli"), "osserv" );
	deepEqual( Stem("osservarsi"), "osserv" );
	deepEqual( Stem("osservata"), "osserv" );
	deepEqual( Stem("osservate"), "osserv" );
	deepEqual( Stem("osservati"), "osserv" );
	deepEqual( Stem("osservato"), "osserv" );
	deepEqual( Stem("osservatore"), "osserv" );
	deepEqual( Stem("osservatori"), "osserv" );
	deepEqual( Stem("osservatorio"), "osservator" );
	deepEqual( Stem("osservava"), "osserv" );
	deepEqual( Stem("osservazione"), "osserv" );
	deepEqual( Stem("osservazioni"), "osserv" );
	deepEqual( Stem("osservò"), "osserv" );
	deepEqual( Stem("ossessiva"), "ossess" );
	deepEqual( Stem("ossessivo"), "ossess" );
	deepEqual( Stem("ossia"), "ossi" );
	deepEqual( Stem("ossido"), "ossid" );
	deepEqual( Stem("ossigeno"), "ossigen" );
	deepEqual( Stem("osso"), "osso" );
	deepEqual( Stem("osta"), "osta" );
	deepEqual( Stem("ostacolare"), "ostacol" );
	deepEqual( Stem("ostacolato"), "ostacol" );
	deepEqual( Stem("ostacoli"), "ostacol" );
	deepEqual( Stem("ostacolo"), "ostacol" );
	deepEqual( Stem("ostaggio"), "ostagg" );
	deepEqual( Stem("ostante"), "ostant" );
	deepEqual( Stem("ostavano"), "ostav" );
	deepEqual( Stem("oste"), "oste" );
	deepEqual( Stem("ostenda"), "ostend" );
	deepEqual( Stem("ostentata"), "ostent" );
	deepEqual( Stem("ostentavano"), "ostent" );
	deepEqual( Stem("osteria"), "oster" );
	deepEqual( Stem("osterie"), "oster" );
	deepEqual( Stem("ostessa"), "ostess" );
	deepEqual( Stem("osti"), "osti" );
	deepEqual( Stem("ostia"), "osti" );
	deepEqual( Stem("ostiaque"), "ostiaqu" );
	deepEqual( Stem("ostile"), "ostil" );
	deepEqual( Stem("ostilita"), "ostil" );
	deepEqual( Stem("ostilità"), "ostil" );
	deepEqual( Stem("ostina"), "ostin" );
	deepEqual( Stem("ostinarsi"), "ostin" );
	deepEqual( Stem("ostinata"), "ostin" );
	deepEqual( Stem("ostinatamente"), "ostinat" );
	deepEqual( Stem("ostinate"), "ostin" );
	deepEqual( Stem("ostinati"), "ostin" );
	deepEqual( Stem("ostinato"), "ostin" );
	deepEqual( Stem("ostinava"), "ostin" );
	deepEqual( Stem("ostinazione"), "ostin" );
	deepEqual( Stem("ostini"), "ostin" );
	deepEqual( Stem("ostruzionismo"), "ostruzion" );
	deepEqual( Stem("osvaldo"), "osvald" );
	deepEqual( Stem("ot"), "ot" );
	deepEqual( Stem("ota"), "ota" );
	deepEqual( Stem("ott"), "ott" );
	deepEqual( Stem("ottangolare"), "ottangol" );
	deepEqual( Stem("ottanta"), "ottant" );
	deepEqual( Stem("ottantotto"), "ottantott" );
	deepEqual( Stem("ottava"), "ottav" );
	deepEqual( Stem("ottavio"), "ottav" );
	deepEqual( Stem("ottenemmo"), "otten" );
	deepEqual( Stem("ottenendo"), "otten" );
	deepEqual( Stem("ottenendone"), "otten" );
	deepEqual( Stem("ottener"), "ottener" );
	deepEqual( Stem("ottenere"), "otten" );
	deepEqual( Stem("ottenerla"), "otten" );
	deepEqual( Stem("ottenerlo"), "otten" );
	deepEqual( Stem("ottenerne"), "otten" );
	deepEqual( Stem("ottenervi"), "otten" );
	deepEqual( Stem("ottenesse"), "otteness" );
	deepEqual( Stem("otteneva"), "otten" );
	deepEqual( Stem("ottengo"), "otteng" );
	deepEqual( Stem("ottengono"), "otteng" );
	deepEqual( Stem("ottenne"), "ottenn" );
	deepEqual( Stem("ottenuta"), "otten" );
	deepEqual( Stem("ottenute"), "otten" );
	deepEqual( Stem("ottenuti"), "otten" );
	deepEqual( Stem("ottenuto"), "otten" );
	deepEqual( Stem("otterrà"), "otterr" );
	deepEqual( Stem("otterrebbe"), "otterrebb" );
	deepEqual( Stem("ottey"), "ottey" );
	deepEqual( Stem("ottica"), "ottic" );
	deepEqual( Stem("ottiene"), "ottien" );
	deepEqual( Stem("ottima"), "ottim" );
	deepEqual( Stem("ottimale"), "ottimal" );
	deepEqual( Stem("ottime"), "ottim" );
	deepEqual( Stem("ottimi"), "ottim" );
	deepEqual( Stem("ottimismo"), "ottim" );
	deepEqual( Stem("ottimista"), "ottim" );
	deepEqual( Stem("ottimisti"), "ottim" );
	deepEqual( Stem("ottimizzazione"), "ottimizz" );
	deepEqual( Stem("ottimo"), "ottim" );
	deepEqual( Stem("ottiva"), "ottiv" );
	deepEqual( Stem("otto"), "otto" );
	deepEqual( Stem("ottobre"), "ottobr" );
	deepEqual( Stem("ottocento"), "ottocent" );
	deepEqual( Stem("ottone"), "otton" );
	deepEqual( Stem("ottorino"), "ottorin" );
	deepEqual( Stem("ottuagenario"), "ottuagenar" );
	deepEqual( Stem("ottusi"), "ottus" );
	deepEqual( Stem("oualche"), "oualc" );
	deepEqual( Stem("ouand"), "ouand" );
	deepEqual( Stem("ouando"), "ouand" );
	deepEqual( Stem("ouel"), "ouel" );
	deepEqual( Stem("out"), "out" );
	deepEqual( Stem("outcold"), "outcold" );
	deepEqual( Stem("ouuero"), "ouuer" );
	deepEqual( Stem("ov"), "ov" );
	deepEqual( Stem("ova"), "ova" );
	deepEqual( Stem("ovazione"), "ovazion" );
	deepEqual( Stem("ovazioni"), "ovazion" );
	deepEqual( Stem("ove"), "ove" );
	deepEqual( Stem("ovest"), "ovest" );
	deepEqual( Stem("ovidio"), "ovid" );
	deepEqual( Stem("ovunque"), "ovunqu" );
	deepEqual( Stem("ovvero"), "ovver" );
	deepEqual( Stem("ovviamente"), "ovvi" );
	deepEqual( Stem("ovviare"), "ovvi" );
	deepEqual( Stem("ovvio"), "ovvi" );
	deepEqual( Stem("owen"), "owen" );
	deepEqual( Stem("owens"), "owens" );
	deepEqual( Stem("ox"), "ox" );
	deepEqual( Stem("ozio"), "ozi" );
	deepEqual( Stem("oziosa"), "ozios" );
	deepEqual( Stem("oziosamente"), "ozios" );
	deepEqual( Stem("ozioso"), "ozios" );
	deepEqual( Stem("ozzie"), "ozzi" );
	deepEqual( Stem("p"), "p" );
	deepEqual( Stem("pa"), "pa" );
	deepEqual( Stem("pablo"), "pabl" );
	deepEqual( Stem("pacatamente"), "pacat" );
	deepEqual( Stem("pacatezza"), "pacatezz" );
	deepEqual( Stem("pacato"), "pac" );
	deepEqual( Stem("pacchetto"), "pacchett" );
	deepEqual( Stem("pacchia"), "pacc" );
	deepEqual( Stem("pace"), "pac" );
	deepEqual( Stem("pachistane"), "pachistan" );
	deepEqual( Stem("paci"), "pac" );
	deepEqual( Stem("pacific"), "pacific" );
	deepEqual( Stem("pacifica"), "pacif" );
	deepEqual( Stem("pacificamente"), "pacif" );
	deepEqual( Stem("pacificazione"), "pacif" );
	deepEqual( Stem("pacifici"), "pacif" );
	deepEqual( Stem("pacifico"), "pacif" );
	deepEqual( Stem("pacifisti"), "pacif" );
	deepEqual( Stem("paciotti"), "paciott" );
	deepEqual( Stem("pacoski"), "pacosk" );
	deepEqual( Stem("padaglione"), "padaglion" );
	deepEqual( Stem("padalino"), "padalin" );
	deepEqual( Stem("padano"), "pad" );
	deepEqual( Stem("paderno"), "padern" );
	deepEqual( Stem("padero"), "pader" );
	deepEqual( Stem("padiglione"), "padiglion" );
	deepEqual( Stem("padiglioni"), "padiglion" );
	deepEqual( Stem("padova"), "padov" );
	deepEqual( Stem("padovano"), "padov" );
	deepEqual( Stem("padre"), "padr" );
	deepEqual( Stem("padreterno"), "padretern" );
	deepEqual( Stem("padri"), "padr" );
	deepEqual( Stem("padron"), "padron" );
	deepEqual( Stem("padrona"), "padron" );
	deepEqual( Stem("padrone"), "padron" );
	deepEqual( Stem("padroni"), "padron" );
	deepEqual( Stem("pae"), "pae" );
	deepEqual( Stem("paesani"), "paesan" );
	deepEqual( Stem("paese"), "paes" );
	deepEqual( Stem("paesè"), "paes" );
	deepEqual( Stem("paesello"), "paesell" );
	deepEqual( Stem("paesetti"), "paesett" );
	deepEqual( Stem("paesetto"), "paesett" );
	deepEqual( Stem("paesi"), "paes" );
	deepEqual( Stem("paesistiche"), "paesist" );
	deepEqual( Stem("paf"), "paf" );
	deepEqual( Stem("pag"), "pag" );
	deepEqual( Stem("paga"), "pag" );
	deepEqual( Stem("pagamenti"), "pag" );
	deepEqual( Stem("pagamento"), "pag" );
	deepEqual( Stem("pagando"), "pag" );
	deepEqual( Stem("pagandolo"), "pag" );
	deepEqual( Stem("pagani"), "pagan" );
	deepEqual( Stem("paganin"), "paganin" );
	deepEqual( Stem("paganini"), "paganin" );
	deepEqual( Stem("pagano"), "pag" );
	deepEqual( Stem("paganoni"), "paganon" );
	deepEqual( Stem("paganti"), "pagant" );
	deepEqual( Stem("pagar"), "pag" );
	deepEqual( Stem("pagare"), "pag" );
	deepEqual( Stem("pagarglielo"), "pag" );
	deepEqual( Stem("pagarle"), "pag" );
	deepEqual( Stem("pagarlo"), "pag" );
	deepEqual( Stem("pagarono"), "pag" );
	deepEqual( Stem("pagarsi"), "pag" );
	deepEqual( Stem("pagata"), "pag" );
	deepEqual( Stem("pagate"), "pag" );
	deepEqual( Stem("pagatelo"), "pagatel" );
	deepEqual( Stem("pagato"), "pag" );
	deepEqual( Stem("pagatrice"), "pagatric" );
	deepEqual( Stem("pagava"), "pag" );
	deepEqual( Stem("pagelle"), "pagell" );
	deepEqual( Stem("paggi"), "pagg" );
	deepEqual( Stem("paggio"), "pagg" );
	deepEqual( Stem("paghe"), "pagh" );
	deepEqual( Stem("pagherà"), "pagh" );
	deepEqual( Stem("pagherai"), "pagh" );
	deepEqual( Stem("pagherei"), "pagh" );
	deepEqual( Stem("pagherò"), "pagh" );
	deepEqual( Stem("paghi"), "pagh" );
	deepEqual( Stem("paghiate"), "pagh" );
	deepEqual( Stem("paghino"), "paghin" );
	deepEqual( Stem("pagina"), "pagin" );
	deepEqual( Stem("pagine"), "pagin" );
	deepEqual( Stem("paglia"), "pagl" );
	deepEqual( Stem("pagliaccetti"), "pagliaccett" );
	deepEqual( Stem("pagliaio"), "pagliai" );
	deepEqual( Stem("pagliarini"), "pagliarin" );
	deepEqual( Stem("pagliuca"), "pagliuc" );
	deepEqual( Stem("pagliucola"), "pagliucol" );
	deepEqual( Stem("pago"), "pag" );
	deepEqual( Stem("pagò"), "pag" );
	deepEqual( Stem("paia"), "pai" );
	deepEqual( Stem("paio"), "pai" );
	deepEqual( Stem("paiolo"), "paiol" );
	deepEqual( Stem("paion"), "paion" );
	deepEqual( Stem("paiono"), "pai" );
	deepEqual( Stem("paissan"), "paissan" );
	deepEqual( Stem("pakistan"), "pakistan" );
	deepEqual( Stem("pakistani"), "pakistan" );
	deepEqual( Stem("pala"), "pal" );
	deepEqual( Stem("palace"), "palac" );
	deepEqual( Stem("paladina"), "paladin" );
	deepEqual( Stem("palafreni"), "palafren" );
	deepEqual( Stem("palafreniere"), "palafren" );
	deepEqual( Stem("palam"), "palam" );
	deepEqual( Stem("palatrussardi"), "palatrussard" );
	deepEqual( Stem("palatrussarsi"), "palatruss" );
	deepEqual( Stem("palazzetto"), "palazzett" );
	deepEqual( Stem("palazzi"), "palazz" );
	deepEqual( Stem("palazzina"), "palazzin" );
	deepEqual( Stem("palazzo"), "palazz" );
	deepEqual( Stem("palazzolo"), "palazzol" );
	deepEqual( Stem("palazzotto"), "palazzott" );
	deepEqual( Stem("palchetto"), "palchett" );
	deepEqual( Stem("palchi"), "palc" );
	deepEqual( Stem("palco"), "palc" );
	deepEqual( Stem("pale"), "pal" );
	deepEqual( Stem("palermo"), "palerm" );
	deepEqual( Stem("palesar"), "pales" );
	deepEqual( Stem("palesare"), "pales" );
	deepEqual( Stem("palese"), "pales" );
	deepEqual( Stem("palesi"), "pales" );
	deepEqual( Stem("palestinà"), "palestin" );
	deepEqual( Stem("palestinese"), "palestines" );
	deepEqual( Stem("palestinesi"), "palestines" );
	deepEqual( Stem("paletto"), "palett" );
	deepEqual( Stem("pali"), "pal" );
	deepEqual( Stem("palieri"), "palier" );
	deepEqual( Stem("palio"), "pal" );
	deepEqual( Stem("palizzolo"), "palizzol" );
	deepEqual( Stem("palla"), "pall" );
	deepEqual( Stem("pallacanestro"), "pallacanestr" );
	deepEqual( Stem("palladini"), "palladin" );
	deepEqual( Stem("pallavolando"), "pallavol" );
	deepEqual( Stem("pallavolo"), "pallavol" );
	deepEqual( Stem("palle"), "pall" );
	deepEqual( Stem("pallhuber"), "pallhuber" );
	deepEqual( Stem("pallida"), "pallid" );
	deepEqual( Stem("pallidi"), "pallid" );
	deepEqual( Stem("pallidissime"), "pallidissim" );
	deepEqual( Stem("pallido"), "pallid" );
	deepEqual( Stem("pallini"), "pallin" );
	deepEqual( Stem("pallone"), "pallon" );
	deepEqual( Stem("pallonetto"), "pallonett" );
	deepEqual( Stem("pallore"), "pallor" );
	deepEqual( Stem("pallottola"), "pallottol" );
	deepEqual( Stem("palm"), "palm" );
	deepEqual( Stem("palma"), "palm" );
	deepEqual( Stem("palme"), "palm" );
	deepEqual( Stem("palmer"), "palmer" );
	deepEqual( Stem("palmieri"), "palmier" );
	deepEqual( Stem("palmisani"), "palmisan" );
	deepEqual( Stem("palmisano"), "palmis" );
	deepEqual( Stem("palmo"), "palm" );
	deepEqual( Stem("palo"), "pal" );
	deepEqual( Stem("palombelli"), "palombell" );
	deepEqual( Stem("palpa"), "palp" );
	deepEqual( Stem("palpava"), "palp" );
	deepEqual( Stem("palpebre"), "palpebr" );
	deepEqual( Stem("palpitazion"), "palpitazion" );
	deepEqual( Stem("palpitazioni"), "palpit" );
	deepEqual( Stem("palude"), "palud" );
	deepEqual( Stem("paludi"), "palud" );
	deepEqual( Stem("paly"), "paly" );
	deepEqual( Stem("pamela"), "pamel" );
	deepEqual( Stem("pampani"), "pampan" );
	deepEqual( Stem("pan"), "pan" );
	deepEqual( Stem("panca"), "panc" );
	deepEqual( Stem("pancaro"), "pancar" );
	deepEqual( Stem("pance"), "panc" );
	deepEqual( Stem("pancev"), "pancev" );
	deepEqual( Stem("panche"), "panc" );
	deepEqual( Stem("panchetti"), "panchett" );
	deepEqual( Stem("panchetto"), "panchett" );
	deepEqual( Stem("panchina"), "panchin" );
	deepEqual( Stem("panchine"), "panchin" );
	deepEqual( Stem("pancho"), "panc" );
	deepEqual( Stem("pancia"), "panc" );
	deepEqual( Stem("pancione"), "pancion" );
	deepEqual( Stem("pandolfo"), "pandolf" );
	deepEqual( Stem("pane"), "pan" );
	deepEqual( Stem("panegirico"), "panegir" );
	deepEqual( Stem("panetta"), "panett" );
	deepEqual( Stem("panfido"), "panfid" );
	deepEqual( Stem("panfilo"), "panfil" );
	deepEqual( Stem("pani"), "pan" );
	deepEqual( Stem("panicastrelle"), "panicastrell" );
	deepEqual( Stem("panico"), "panic" );
	deepEqual( Stem("panicucci"), "panicucc" );
	deepEqual( Stem("paniera"), "panier" );
	deepEqual( Stem("paniere"), "pan" );
	deepEqual( Stem("pannè"), "pann" );
	deepEqual( Stem("pannella"), "pannell" );
	deepEqual( Stem("panni"), "pann" );
	deepEqual( Stem("panno"), "pann" );
	deepEqual( Stem("pannocchiette"), "pannocchiett" );
	deepEqual( Stem("panorama"), "panoram" );
	deepEqual( Stem("panoramà"), "panoram" );
	deepEqual( Stem("panorma"), "panorm" );
	deepEqual( Stem("pantedesca"), "pantedesc" );
	deepEqual( Stem("panucci"), "panucc" );
	deepEqual( Stem("paola"), "paol" );
	deepEqual( Stem("paoli"), "paol" );
	deepEqual( Stem("paolin"), "paolin" );
	deepEqual( Stem("paolo"), "paol" );
	deepEqual( Stem("paonazze"), "paonazz" );
	deepEqual( Stem("paonazzo"), "paonazz" );
	deepEqual( Stem("paone"), "paon" );
	deepEqual( Stem("papa"), "pap" );
	deepEqual( Stem("papà"), "pap" );
	deepEqual( Stem("papais"), "papais" );
	deepEqual( Stem("papalina"), "papalin" );
	deepEqual( Stem("papeete"), "pap" );
	deepEqual( Stem("papino"), "papin" );
	deepEqual( Stem("pappagorgia"), "pappagorg" );
	deepEqual( Stem("par"), "par" );
	deepEqual( Stem("para"), "par" );
	deepEqual( Stem("paracadute"), "paracad" );
	deepEqual( Stem("paracadutisti"), "paracadut" );
	deepEqual( Stem("paradigma"), "paradigm" );
	deepEqual( Stem("paradise"), "paradis" );
	deepEqual( Stem("paradisi"), "paradis" );
	deepEqual( Stem("paradisiaci"), "paradisiac" );
	deepEqual( Stem("paradiso"), "paradis" );
	deepEqual( Stem("paradossale"), "paradossal" );
	deepEqual( Stem("paragon"), "paragon" );
	deepEqual( Stem("paragonare"), "paragon" );
	deepEqual( Stem("paragonarlo"), "paragon" );
	deepEqual( Stem("paragonata"), "paragon" );
	deepEqual( Stem("paragonato"), "paragon" );
	deepEqual( Stem("paragonava"), "paragon" );
	deepEqual( Stem("paragone"), "paragon" );
	deepEqual( Stem("paragonerebbe"), "paragon" );
	deepEqual( Stem("paragoni"), "paragon" );
	deepEqual( Stem("paragrafo"), "paragraf" );
	deepEqual( Stem("paralizzeranno"), "paralizz" );
	deepEqual( Stem("parallelo"), "parallel" );
	deepEqual( Stem("paramatti"), "paramatt" );
	deepEqual( Stem("parametri"), "parametr" );
	deepEqual( Stem("paramygina"), "paramygin" );
	deepEqual( Stem("parapetto"), "parapett" );
	deepEqual( Stem("parapiglia"), "parapigl" );
	deepEqual( Stem("parare"), "par" );
	deepEqual( Stem("parassiti"), "parass" );
	deepEqual( Stem("parastato"), "parast" );
	deepEqual( Stem("parat"), "parat" );
	deepEqual( Stem("parata"), "par" );
	deepEqual( Stem("parate"), "par" );
	deepEqual( Stem("parati"), "par" );
	deepEqual( Stem("parato"), "par" );
	deepEqual( Stem("parava"), "par" );
	deepEqual( Stem("paravano"), "par" );
	deepEqual( Stem("paravento"), "paravent" );
	deepEqual( Stem("parca"), "parc" );
	deepEqual( Stem("parcere"), "parc" );
	deepEqual( Stem("parche"), "parc" );
	deepEqual( Stem("parcheggiata"), "parchegg" );
	deepEqual( Stem("parcheggiate"), "parchegg" );
	deepEqual( Stem("parcheggiava"), "parchegg" );
	deepEqual( Stem("parcheggio"), "parchegg" );
	deepEqual( Stem("parchi"), "parc" );
	deepEqual( Stem("parco"), "parc" );
	deepEqual( Stem("pare"), "par" );
	deepEqual( Stem("parè"), "par" );
	deepEqual( Stem("parecchi"), "parecc" );
	deepEqual( Stem("pareggia"), "paregg" );
	deepEqual( Stem("pareggiare"), "paregg" );
	deepEqual( Stem("pareggiato"), "paregg" );
	deepEqual( Stem("pareggio"), "paregg" );
	deepEqual( Stem("parendo"), "par" );
	deepEqual( Stem("parendoci"), "par" );
	deepEqual( Stem("parendogli"), "par" );
	deepEqual( Stem("parentado"), "parentad" );
	deepEqual( Stem("parente"), "parent" );
	deepEqual( Stem("parentela"), "parentel" );
	deepEqual( Stem("parentele"), "parentel" );
	deepEqual( Stem("parenti"), "parent" );
	deepEqual( Stem("pareo"), "pare" );
	deepEqual( Stem("parer"), "parer" );
	deepEqual( Stem("parere"), "par" );
	deepEqual( Stem("parergli"), "par" );
	deepEqual( Stem("pareri"), "parer" );
	deepEqual( Stem("paresse"), "paress" );
	deepEqual( Stem("paressero"), "par" );
	deepEqual( Stem("parete"), "par" );
	deepEqual( Stem("pareti"), "paret" );
	deepEqual( Stem("pareva"), "par" );
	deepEqual( Stem("parevan"), "parevan" );
	deepEqual( Stem("parevano"), "par" );
	deepEqual( Stem("pari"), "par" );
	deepEqual( Stem("paribas"), "paribas" );
	deepEqual( Stem("paribus"), "paribus" );
	deepEqual( Stem("paride"), "parid" );
	deepEqual( Stem("parieti"), "pariet" );
	deepEqual( Stem("parigi"), "parig" );
	deepEqual( Stem("parigina"), "parigin" );
	deepEqual( Stem("parigino"), "parigin" );
	deepEqual( Stem("parimente"), "pariment" );
	deepEqual( Stem("parimenti"), "par" );
	deepEqual( Stem("parini"), "parin" );
	deepEqual( Stem("paris"), "paris" );
	deepEqual( Stem("parisi"), "paris" );
	deepEqual( Stem("parità"), "parit" );
	deepEqual( Stem("parks"), "parks" );
	deepEqual( Stem("parla"), "parl" );
	deepEqual( Stem("parlamentare"), "parlament" );
	deepEqual( Stem("parlamentari"), "parlamentar" );
	deepEqual( Stem("parlamenti"), "parl" );
	deepEqual( Stem("parlamentini"), "parlamentin" );
	deepEqual( Stem("parlamento"), "parl" );
	deepEqual( Stem("parlan"), "parlan" );
	deepEqual( Stem("parlando"), "parl" );
	deepEqual( Stem("parlandone"), "parl" );
	deepEqual( Stem("parlano"), "parl" );
	deepEqual( Stem("parlante"), "parlant" );
	deepEqual( Stem("parlantina"), "parlantin" );
	deepEqual( Stem("parlar"), "parl" );
	deepEqual( Stem("parlare"), "parl" );
	deepEqual( Stem("parlargli"), "parl" );
	deepEqual( Stem("parlargliene"), "parl" );
	deepEqual( Stem("parlarle"), "parl" );
	deepEqual( Stem("parlarne"), "parl" );
	deepEqual( Stem("parlaron"), "parlaron" );
	deepEqual( Stem("parlarono"), "parl" );
	deepEqual( Stem("parlarvene"), "parl" );
	deepEqual( Stem("parlarvi"), "parl" );
	deepEqual( Stem("parlasse"), "parl" );
	deepEqual( Stem("parlata"), "parl" );
	deepEqual( Stem("parlate"), "parl" );
	deepEqual( Stem("parlati"), "parl" );
	deepEqual( Stem("parlato"), "parl" );
	deepEqual( Stem("parlatori"), "parlator" );
	deepEqual( Stem("parlatorio"), "parlator" );
	deepEqual( Stem("parlava"), "parl" );
	deepEqual( Stem("parlavan"), "parlavan" );
	deepEqual( Stem("parlavano"), "parl" );
	deepEqual( Stem("parlavate"), "parl" );
	deepEqual( Stem("parlerà"), "parl" );
	deepEqual( Stem("parlerebbe"), "parl" );
	deepEqual( Stem("parleremo"), "parl" );
	deepEqual( Stem("parlerò"), "parl" );
	deepEqual( Stem("parli"), "parl" );
	deepEqual( Stem("parliam"), "parliam" );
	deepEqual( Stem("parliamo"), "parl" );
	deepEqual( Stem("parlino"), "parlin" );
	deepEqual( Stem("parlo"), "parl" );
	deepEqual( Stem("parlò"), "parl" );
	deepEqual( Stem("parlovel"), "parlovel" );
	deepEqual( Stem("parlto"), "parlt" );
	deepEqual( Stem("parma"), "parm" );
	deepEqual( Stem("parmalat"), "parmalat" );
	deepEqual( Stem("parmander"), "parmander" );
	deepEqual( Stem("parmigiani"), "parmigian" );
	deepEqual( Stem("parola"), "parol" );
	deepEqual( Stem("parolacce"), "parolacc" );
	deepEqual( Stem("parolaccia"), "parolacc" );
	deepEqual( Stem("parole"), "parol" );
	deepEqual( Stem("parolina"), "parolin" );
	deepEqual( Stem("paroline"), "parolin" );
	deepEqual( Stem("parotidi"), "parotid" );
	deepEqual( Stem("parpagliole"), "parpagliol" );
	deepEqual( Stem("parquet"), "parquet" );
	deepEqual( Stem("parrà"), "parr" );
	deepEqual( Stem("parrebbe"), "parrebb" );
	deepEqual( Stem("parrebbero"), "parrebber" );
	deepEqual( Stem("parrocchia"), "parrocc" );
	deepEqual( Stem("parrocchiale"), "parrocchial" );
	deepEqual( Stem("parrocchiana"), "parrocchian" );
	deepEqual( Stem("parrocchie"), "parrocc" );
	deepEqual( Stem("parrochi"), "parroc" );
	deepEqual( Stem("parroci"), "parroc" );
	deepEqual( Stem("parroco"), "parroc" );
	deepEqual( Stem("parrucca"), "parrucc" );
	deepEqual( Stem("parsa"), "pars" );
	deepEqual( Stem("parse"), "pars" );
	deepEqual( Stem("parsi"), "pars" );
	deepEqual( Stem("parso"), "pars" );
	deepEqual( Stem("parsons"), "parsons" );
	deepEqual( Stem("part"), "part" );
	deepEqual( Stem("parta"), "part" );
	deepEqual( Stem("parte"), "part" );
	deepEqual( Stem("partecip"), "partecip" );
	deepEqual( Stem("partecipa"), "partecip" );
	deepEqual( Stem("partecipano"), "partecip" );
	deepEqual( Stem("partecipanti"), "partecip" );
	deepEqual( Stem("partecipare"), "partecip" );
	deepEqual( Stem("parteciparenno"), "parteciparenn" );
	deepEqual( Stem("partecipato"), "partecip" );
	deepEqual( Stem("partecipava"), "partecip" );
	deepEqual( Stem("partecipavano"), "partecip" );
	deepEqual( Stem("partecipaz"), "partecipaz" );
	deepEqual( Stem("partecipazione"), "partecip" );
	deepEqual( Stem("partecipazioni"), "partecip" );
	deepEqual( Stem("partecipe"), "partecip" );
	deepEqual( Stem("parteciperà"), "partecip" );
	deepEqual( Stem("parteciperanno"), "partecip" );
	deepEqual( Stem("partecipi"), "partecip" );
	deepEqual( Stem("partecipò"), "partecip" );
	deepEqual( Stem("partendo"), "part" );
	deepEqual( Stem("partenopeo"), "partenope" );
	deepEqual( Stem("partenza"), "partenz" );
	deepEqual( Stem("partenze"), "partenz" );
	deepEqual( Stem("parterre"), "parterr" );
	deepEqual( Stem("partes"), "partes" );
	deepEqual( Stem("parti"), "part" );
	deepEqual( Stem("partì"), "part" );
	deepEqual( Stem("partiali"), "partial" );
	deepEqual( Stem("partiamo"), "part" );
	deepEqual( Stem("partiate"), "part" );
	deepEqual( Stem("partick"), "partick" );
	deepEqual( Stem("particolar"), "particol" );
	deepEqual( Stem("particolare"), "particol" );
	deepEqual( Stem("particolareggiati"), "particolaregg" );
	deepEqual( Stem("particolari"), "particolar" );
	deepEqual( Stem("particolarità"), "particolar" );
	deepEqual( Stem("particolarmente"), "particolar" );
	deepEqual( Stem("partigiane"), "partigian" );
	deepEqual( Stem("partigiani"), "partigian" );
	deepEqual( Stem("partigiano"), "partig" );
	deepEqual( Stem("partir"), "part" );
	deepEqual( Stem("partirà"), "part" );
	deepEqual( Stem("partiranno"), "part" );
	deepEqual( Stem("partire"), "part" );
	deepEqual( Stem("partirebbe"), "part" );
	deepEqual( Stem("partiremo"), "part" );
	deepEqual( Stem("partirono"), "part" );
	deepEqual( Stem("partisse"), "partiss" );
	deepEqual( Stem("partita"), "part" );
	deepEqual( Stem("partite"), "part" );
	deepEqual( Stem("partiti"), "part" );
	deepEqual( Stem("partitica"), "partit" );
	deepEqual( Stem("partitici"), "partit" );
	deepEqual( Stem("partitico"), "partit" );
	deepEqual( Stem("partitie"), "partit" );
	deepEqual( Stem("partito"), "part" );
	deepEqual( Stem("partitocratica"), "partitocrat" );
	deepEqual( Stem("partitocrazia"), "partitocraz" );
	deepEqual( Stem("partiva"), "part" );
	deepEqual( Stem("partivano"), "part" );
	deepEqual( Stem("partner"), "partner" );
	deepEqual( Stem("partners"), "partners" );
	deepEqual( Stem("parto"), "part" );
	deepEqual( Stem("partono"), "part" );
	deepEqual( Stem("partorienti"), "partorient" );
	deepEqual( Stem("partorire"), "partor" );
	deepEqual( Stem("party"), "party" );
	deepEqual( Stem("paruta"), "par" );
	deepEqual( Stem("parve"), "parv" );
	deepEqual( Stem("parver"), "parver" );
	deepEqual( Stem("parvero"), "parver" );
	deepEqual( Stem("parziale"), "parzial" );
	deepEqual( Stem("parzialità"), "parzial" );
	deepEqual( Stem("parzialmente"), "parzial" );
	deepEqual( Stem("pascenti"), "pascent" );
	deepEqual( Stem("pascolava"), "pascol" );
	deepEqual( Stem("pascolo"), "pascol" );
	deepEqual( Stem("pascucci"), "pascucc" );
	deepEqual( Stem("paseo"), "pase" );
	deepEqual( Stem("pashkina"), "pashkin" );
	deepEqual( Stem("pasionarià"), "pasionar" );
	deepEqual( Stem("pasqua"), "pasqu" );
	deepEqual( Stem("pasquale"), "pasqual" );
	deepEqual( Stem("pasquero"), "pasquer" );
	deepEqual( Stem("passa"), "pass" );
	deepEqual( Stem("passaggio"), "passagg" );
	deepEqual( Stem("passagio"), "passag" );
	deepEqual( Stem("passalacqua"), "passalacqu" );
	deepEqual( Stem("passamontagna"), "passamontagn" );
	deepEqual( Stem("passan"), "passan" );
	deepEqual( Stem("passando"), "pass" );
	deepEqual( Stem("passani"), "passan" );
	deepEqual( Stem("passano"), "pass" );
	deepEqual( Stem("passaporti"), "passaport" );
	deepEqual( Stem("passaporto"), "passaport" );
	deepEqual( Stem("passar"), "pass" );
	deepEqual( Stem("passare"), "pass" );
	deepEqual( Stem("passarella"), "passarell" );
	deepEqual( Stem("passarla"), "pass" );
	deepEqual( Stem("passarli"), "pass" );
	deepEqual( Stem("passarlo"), "pass" );
	deepEqual( Stem("passarne"), "pass" );
	deepEqual( Stem("passaron"), "passaron" );
	deepEqual( Stem("passarono"), "pass" );
	deepEqual( Stem("passarsi"), "pass" );
	deepEqual( Stem("passarvela"), "pass" );
	deepEqual( Stem("passarvi"), "pass" );
	deepEqual( Stem("passasse"), "pass" );
	deepEqual( Stem("passassero"), "pass" );
	deepEqual( Stem("passata"), "pass" );
	deepEqual( Stem("passate"), "pass" );
	deepEqual( Stem("passategli"), "passategl" );
	deepEqual( Stem("passatempi"), "passatemp" );
	deepEqual( Stem("passatempo"), "passatemp" );
	deepEqual( Stem("passati"), "pass" );
	deepEqual( Stem("passato"), "pass" );
	deepEqual( Stem("passatò"), "passat" );
	deepEqual( Stem("passava"), "pass" );
	deepEqual( Stem("passavan"), "passavan" );
	deepEqual( Stem("passavano"), "pass" );
	deepEqual( Stem("passe"), "pass" );
	deepEqual( Stem("passeggeri"), "passegger" );
	deepEqual( Stem("passeggiando"), "passegg" );
	deepEqual( Stem("passeggiare"), "passegg" );
	deepEqual( Stem("passeggiata"), "passegg" );
	deepEqual( Stem("passeggiate"), "passegg" );
	deepEqual( Stem("passeggiato"), "passegg" );
	deepEqual( Stem("passeggiera"), "passeggier" );
	deepEqual( Stem("passeggiere"), "passegg" );
	deepEqual( Stem("passeggieri"), "passeggier" );
	deepEqual( Stem("passeggiero"), "passeggier" );
	deepEqual( Stem("passerà"), "pass" );
	deepEqual( Stem("passeranno"), "pass" );
	deepEqual( Stem("passere"), "pass" );
	deepEqual( Stem("passerebbe"), "pass" );
	deepEqual( Stem("passerella"), "passerell" );
	deepEqual( Stem("passeremo"), "pass" );
	deepEqual( Stem("passi"), "pass" );
	deepEqual( Stem("passiamo"), "pass" );
	deepEqual( Stem("passibili"), "passibil" );
	deepEqual( Stem("passim"), "passim" );
	deepEqual( Stem("passini"), "passin" );
	deepEqual( Stem("passion"), "passion" );
	deepEqual( Stem("passione"), "passion" );
	deepEqual( Stem("passioni"), "passion" );
	deepEqual( Stem("passiva"), "pass" );
	deepEqual( Stem("passivi"), "pass" );
	deepEqual( Stem("passivo"), "pass" );
	deepEqual( Stem("passler"), "passler" );
	deepEqual( Stem("passo"), "pass" );
	deepEqual( Stem("passò"), "pass" );
	deepEqual( Stem("pasta"), "past" );
	deepEqual( Stem("pastari"), "pastar" );
	deepEqual( Stem("pastaria"), "pastar" );
	deepEqual( Stem("paste"), "past" );
	deepEqual( Stem("pasticche"), "pasticc" );
	deepEqual( Stem("pasticci"), "pasticc" );
	deepEqual( Stem("pasticcio"), "pasticc" );
	deepEqual( Stem("pastiglia"), "pastigl" );
	deepEqual( Stem("pastiglie"), "pastigl" );
	deepEqual( Stem("pastine"), "pastin" );
	deepEqual( Stem("pasto"), "past" );
	deepEqual( Stem("pastocchia"), "pastocc" );
	deepEqual( Stem("pastorale"), "pastoral" );
	deepEqual( Stem("pastorali"), "pastoral" );
	deepEqual( Stem("pastore"), "pastor" );
	deepEqual( Stem("pastori"), "pastor" );
	deepEqual( Stem("pastorizia"), "pastoriz" );
	deepEqual( Stem("pasturo"), "pastur" );
	deepEqual( Stem("pat"), "pat" );
	deepEqual( Stem("patatà"), "patat" );
	deepEqual( Stem("patate"), "pat" );
	deepEqual( Stem("patavina"), "patavin" );
	deepEqual( Stem("patente"), "patent" );
	deepEqual( Stem("patenti"), "patent" );
	deepEqual( Stem("paterna"), "patern" );
	deepEqual( Stem("paterni"), "patern" );
	deepEqual( Stem("paternita"), "patern" );
	deepEqual( Stem("paternità"), "patern" );
	deepEqual( Stem("paterniti"), "patern" );
	deepEqual( Stem("paternostri"), "paternostr" );
	deepEqual( Stem("paterson"), "paterson" );
	deepEqual( Stem("patetica"), "patet" );
	deepEqual( Stem("patimenti"), "pat" );
	deepEqual( Stem("patimento"), "pat" );
	deepEqual( Stem("patina"), "patin" );
	deepEqual( Stem("patinate"), "patin" );
	deepEqual( Stem("patir"), "pat" );
	deepEqual( Stem("patire"), "pat" );
	deepEqual( Stem("patirebbero"), "pat" );
	deepEqual( Stem("patiscan"), "patiscan" );
	deepEqual( Stem("patisce"), "pat" );
	deepEqual( Stem("patisco"), "pat" );
	deepEqual( Stem("patiscono"), "pat" );
	deepEqual( Stem("patiti"), "pat" );
	deepEqual( Stem("patito"), "pat" );
	deepEqual( Stem("pativa"), "pat" );
	deepEqual( Stem("patologia"), "patolog" );
	deepEqual( Stem("patologie"), "patolog" );
	deepEqual( Stem("patria"), "patr" );
	deepEqual( Stem("patriae"), "patria" );
	deepEqual( Stem("patriarchi"), "patriarc" );
	deepEqual( Stem("patrick"), "patrick" );
	deepEqual( Stem("patrimoni"), "patrimon" );
	deepEqual( Stem("patrimonio"), "patrimon" );
	deepEqual( Stem("patrizia"), "patriz" );
	deepEqual( Stem("patrocinio"), "patrocin" );
	deepEqual( Stem("patrona"), "patron" );
	deepEqual( Stem("patteggiamento"), "pattegg" );
	deepEqual( Stem("patti"), "patt" );
	deepEqual( Stem("pattinaggio"), "pattinagg" );
	deepEqual( Stem("pattino"), "pattin" );
	deepEqual( Stem("patto"), "patt" );
	deepEqual( Stem("pattuglia"), "pattugl" );
	deepEqual( Stem("pattugliamento"), "pattugl" );
	deepEqual( Stem("pattuita"), "pattu" );
	deepEqual( Stem("paul"), "paul" );
	deepEqual( Stem("paula"), "paul" );
	deepEqual( Stem("paulo"), "paul" );
	deepEqual( Stem("paura"), "paur" );
	deepEqual( Stem("pauraccia"), "pauracc" );
	deepEqual( Stem("paure"), "paur" );
	deepEqual( Stem("paurosa"), "pauros" );
	deepEqual( Stem("pauroso"), "pauros" );
	deepEqual( Stem("pausa"), "paus" );
	deepEqual( Stem("pav"), "pav" );
	deepEqual( Stem("pavan"), "pavan" );
	deepEqual( Stem("pavel"), "pavel" );
	deepEqual( Stem("pavia"), "pav" );
	deepEqual( Stem("paviato"), "pav" );
	deepEqual( Stem("pavimento"), "pav" );
	deepEqual( Stem("pavone"), "pavon" );
	deepEqual( Stem("paxton"), "paxton" );
	deepEqual( Stem("paziente"), "pazient" );
	deepEqual( Stem("pazienti"), "pazient" );
	deepEqual( Stem("pazienza"), "pazienz" );
	deepEqual( Stem("pazzaglia"), "pazzagl" );
	deepEqual( Stem("pazzamente"), "pazz" );
	deepEqual( Stem("pazzia"), "pazz" );
	deepEqual( Stem("pazzie"), "pazz" );
	deepEqual( Stem("pazzo"), "pazz" );
	deepEqual( Stem("pb"), "pb" );
	deepEqual( Stem("pci"), "pci" );
	deepEqual( Stem("pcm"), "pcm" );
	deepEqual( Stem("pdg"), "pdg" );
	deepEqual( Stem("pdl"), "pdl" );
	deepEqual( Stem("pds"), "pds" );
	deepEqual( Stem("pe"), "pe" );
	deepEqual( Stem("pearl"), "pearl" );
	deepEqual( Stem("pecca"), "pecc" );
	deepEqual( Stem("peccatacci"), "peccatacc" );
	deepEqual( Stem("peccati"), "pecc" );
	deepEqual( Stem("peccato"), "pecc" );
	deepEqual( Stem("pecchia"), "pecc" );
	deepEqual( Stem("pechino"), "pechin" );
	deepEqual( Stem("pecora"), "pecor" );
	deepEqual( Stem("pecoraro"), "pecorar" );
	deepEqual( Stem("pecore"), "pecor" );
	deepEqual( Stem("pecorella"), "pecorell" );
	deepEqual( Stem("pecorelle"), "pecorell" );
	deepEqual( Stem("peculato"), "pecul" );
	deepEqual( Stem("peculiari"), "peculiar" );
	deepEqual( Stem("peculiarità"), "peculiar" );
	deepEqual( Stem("pecuniaria"), "pecuniar" );
	deepEqual( Stem("pecuniarie"), "pecuniar" );
	deepEqual( Stem("pedagogia"), "pedagog" );
	deepEqual( Stem("pedata"), "ped" );
	deepEqual( Stem("pedate"), "ped" );
	deepEqual( Stem("pedestre"), "pedestr" );
	deepEqual( Stem("pedestri"), "pedestr" );
	deepEqual( Stem("pediatrico"), "pediatr" );
	deepEqual( Stem("pedonato"), "pedon" );
	deepEqual( Stem("pedone"), "pedon" );
	deepEqual( Stem("pedoni"), "pedon" );
	deepEqual( Stem("pedrazzi"), "pedrazz" );
	deepEqual( Stem("pedro"), "pedr" );
	deepEqual( Stem("pedroni"), "pedron" );
	deepEqual( Stem("peggi"), "pegg" );
	deepEqual( Stem("peggio"), "pegg" );
	deepEqual( Stem("peggior"), "peggior" );
	deepEqual( Stem("peggiora"), "peggior" );
	deepEqual( Stem("peggioramento"), "peggior" );
	deepEqual( Stem("peggiorar"), "peggior" );
	deepEqual( Stem("peggiorata"), "peggior" );
	deepEqual( Stem("peggiore"), "peggior" );
	deepEqual( Stem("peggiori"), "peggior" );
	deepEqual( Stem("pegno"), "pegn" );
	deepEqual( Stem("pela"), "pel" );
	deepEqual( Stem("pelata"), "pel" );
	deepEqual( Stem("pelato"), "pel" );
	deepEqual( Stem("pelè"), "pel" );
	deepEqual( Stem("peli"), "pel" );
	deepEqual( Stem("pelle"), "pell" );
	deepEqual( Stem("pellegrinaggio"), "pellegrinagg" );
	deepEqual( Stem("pellegrini"), "pellegrin" );
	deepEqual( Stem("pellegrino"), "pellegrin" );
	deepEqual( Stem("pellemberg"), "pellemberg" );
	deepEqual( Stem("pellicanò"), "pellican" );
	deepEqual( Stem("pelliccia"), "pellicc" );
	deepEqual( Stem("pellicola"), "pellicol" );
	deepEqual( Stem("pelo"), "pel" );
	deepEqual( Stem("pelosa"), "pelos" );
	deepEqual( Stem("pen"), "pen" );
	deepEqual( Stem("pena"), "pen" );
	deepEqual( Stem("penale"), "penal" );
	deepEqual( Stem("penali"), "penal" );
	deepEqual( Stem("penalista"), "penal" );
	deepEqual( Stem("penalità"), "penal" );
	deepEqual( Stem("penalizzato"), "penalizz" );
	deepEqual( Stem("penalizzazione"), "penalizz" );
	deepEqual( Stem("penare"), "pen" );
	deepEqual( Stem("penarono"), "pen" );
	deepEqual( Stem("penasa"), "penas" );
	deepEqual( Stem("penato"), "pen" );
	deepEqual( Stem("pence"), "penc" );
	deepEqual( Stem("pendente"), "pendent" );
	deepEqual( Stem("pendenti"), "pendent" );
	deepEqual( Stem("pendere"), "pend" );
	deepEqual( Stem("pendeva"), "pend" );
	deepEqual( Stem("pendevano"), "pend" );
	deepEqual( Stem("pendìi"), "pendì" );
	deepEqual( Stem("pendìo"), "pendì" );
	deepEqual( Stem("pendolari"), "pendolar" );
	deepEqual( Stem("pendoni"), "pendon" );
	deepEqual( Stem("pene"), "pen" );
	deepEqual( Stem("penetrando"), "penetr" );
	deepEqual( Stem("penetrano"), "penetr" );
	deepEqual( Stem("penetrante"), "penetr" );
	deepEqual( Stem("penetrantissimo"), "penetrantissim" );
	deepEqual( Stem("penetrar"), "penetr" );
	deepEqual( Stem("penetrare"), "penetr" );
	deepEqual( Stem("penetrati"), "penetr" );
	deepEqual( Stem("penetrato"), "penetr" );
	deepEqual( Stem("penetrazione"), "penetr" );
	deepEqual( Stem("penetrò"), "penetr" );
	deepEqual( Stem("penisola"), "penisol" );
	deepEqual( Stem("penitente"), "penitent" );
	deepEqual( Stem("penitenza"), "penitent" );
	deepEqual( Stem("penitenze"), "penitent" );
	deepEqual( Stem("penitenziari"), "penitenziar" );
	deepEqual( Stem("penitenziaria"), "penitenziar" );
	deepEqual( Stem("penitenziario"), "penitenziar" );
	deepEqual( Stem("penitenziere"), "penitenz" );
	deepEqual( Stem("penna"), "penn" );
	deepEqual( Stem("pennacchi"), "pennacc" );
	deepEqual( Stem("pennacchioli"), "pennacchiol" );
	deepEqual( Stem("pennarelli"), "pennarell" );
	deepEqual( Stem("penne"), "penn" );
	deepEqual( Stem("pennelli"), "pennell" );
	deepEqual( Stem("pennello"), "pennell" );
	deepEqual( Stem("pennivendolo"), "penniv" );
	deepEqual( Stem("pennuto"), "penn" );
	deepEqual( Stem("penò"), "pen" );
	deepEqual( Stem("penosa"), "penos" );
	deepEqual( Stem("penosi"), "penos" );
	deepEqual( Stem("penoso"), "penos" );
	deepEqual( Stem("pensa"), "pens" );
	deepEqual( Stem("pensabile"), "pensabil" );
	deepEqual( Stem("pensaci"), "pensac" );
	deepEqual( Stem("pensai"), "pensa" );
	deepEqual( Stem("pensando"), "pens" );
	deepEqual( Stem("pensandoci"), "pens" );
	deepEqual( Stem("pensano"), "pens" );
	deepEqual( Stem("pensar"), "pens" );
	deepEqual( Stem("pensarà"), "pensar" );
	deepEqual( Stem("pensarci"), "pens" );
	deepEqual( Stem("pensare"), "pens" );
	deepEqual( Stem("pensarne"), "pens" );
	deepEqual( Stem("pensaron"), "pensaron" );
	deepEqual( Stem("pensarono"), "pens" );
	deepEqual( Stem("pensasse"), "pens" );
	deepEqual( Stem("pensassero"), "pens" );
	deepEqual( Stem("pensassi"), "pens" );
	deepEqual( Stem("pensata"), "pens" );
	deepEqual( Stem("pensate"), "pens" );
	deepEqual( Stem("pensateci"), "pensatec" );
	deepEqual( Stem("pensato"), "pens" );
	deepEqual( Stem("pensatoci"), "pensatoc" );
	deepEqual( Stem("pensava"), "pens" );
	deepEqual( Stem("pensavan"), "pensavan" );
	deepEqual( Stem("pensavano"), "pens" );
	deepEqual( Stem("pensavo"), "pens" );
	deepEqual( Stem("penserà"), "pens" );
	deepEqual( Stem("penseranno"), "pens" );
	deepEqual( Stem("penserebbe"), "pens" );
	deepEqual( Stem("penserò"), "pens" );
	deepEqual( Stem("pensi"), "pens" );
	deepEqual( Stem("pensiam"), "pensiam" );
	deepEqual( Stem("pensiamo"), "pens" );
	deepEqual( Stem("pensiate"), "pens" );
	deepEqual( Stem("pensier"), "pensier" );
	deepEqual( Stem("pensieri"), "pensier" );
	deepEqual( Stem("pensierino"), "pensierin" );
	deepEqual( Stem("pensiero"), "pensier" );
	deepEqual( Stem("pensierosa"), "pensier" );
	deepEqual( Stem("pensierosi"), "pensier" );
	deepEqual( Stem("pensieroso"), "pensier" );
	deepEqual( Stem("pensino"), "pensin" );
	deepEqual( Stem("pensionati"), "pension" );
	deepEqual( Stem("pensionatì"), "pensionat" );
	deepEqual( Stem("pensionato"), "pension" );
	deepEqual( Stem("pensione"), "pension" );
	deepEqual( Stem("pensioni"), "pension" );
	deepEqual( Stem("penso"), "pens" );
	deepEqual( Stem("pensò"), "pens" );
	deepEqual( Stem("penta"), "pent" );
	deepEqual( Stem("pentecoste"), "pentecost" );
	deepEqual( Stem("pentì"), "pent" );
	deepEqual( Stem("pentimenti"), "pent" );
	deepEqual( Stem("pentimento"), "pent" );
	deepEqual( Stem("pentimentuccio"), "pentimentucc" );
	deepEqual( Stem("pentirà"), "pent" );
	deepEqual( Stem("pentirsi"), "pent" );
	deepEqual( Stem("pentita"), "pent" );
	deepEqual( Stem("pentito"), "pent" );
	deepEqual( Stem("pentiva"), "pent" );
	deepEqual( Stem("pento"), "pent" );
	deepEqual( Stem("pentola"), "pentol" );
	deepEqual( Stem("pentolaccia"), "pentolacc" );
	deepEqual( Stem("pentole"), "pentol" );
	deepEqual( Stem("pentolino"), "pentolin" );
	deepEqual( Stem("penuria"), "penur" );
	deepEqual( Stem("penzoloni"), "penzolon" );
	deepEqual( Stem("peo"), "peo" );
	deepEqual( Stem("peoplè"), "peopl" );
	deepEqual( Stem("pepe"), "pep" );
	deepEqual( Stem("peppe"), "pepp" );
	deepEqual( Stem("peppino"), "peppin" );
	deepEqual( Stem("peqin"), "peqin" );
	deepEqual( Stem("per"), "per" );
	deepEqual( Stem("pera"), "per" );
	deepEqual( Stem("peraboni"), "perabon" );
	deepEqual( Stem("peraltro"), "peraltr" );
	deepEqual( Stem("percentuale"), "percentual" );
	deepEqual( Stem("percentuali"), "percentual" );
	deepEqual( Stem("percepiamo"), "percep" );
	deepEqual( Stem("percepiranno"), "percep" );
	deepEqual( Stem("percepire"), "percep" );
	deepEqual( Stem("percepisce"), "percep" );
	deepEqual( Stem("perche"), "perc" );
	deepEqual( Stem("perché"), "perc" );
	deepEqual( Stem("perchè"), "perc" );
	deepEqual( Stem("perciò"), "perc" );
	deepEqual( Stem("percorrere"), "percorr" );
	deepEqual( Stem("percorribile"), "percorr" );
	deepEqual( Stem("percorsa"), "percors" );
	deepEqual( Stem("percorsi"), "percors" );
	deepEqual( Stem("percorso"), "percors" );
	deepEqual( Stem("percosse"), "percoss" );
	deepEqual( Stem("percotere"), "percot" );
	deepEqual( Stem("perda"), "perd" );
	deepEqual( Stem("perde"), "perd" );
	deepEqual( Stem("perdendo"), "perd" );
	deepEqual( Stem("perdendosi"), "perd" );
	deepEqual( Stem("perder"), "perder" );
	deepEqual( Stem("perderà"), "perd" );
	deepEqual( Stem("perdere"), "perd" );
	deepEqual( Stem("perderla"), "perd" );
	deepEqual( Stem("perderli"), "perd" );
	deepEqual( Stem("perdersi"), "perd" );
	deepEqual( Stem("perderti"), "perd" );
	deepEqual( Stem("perdete"), "perd" );
	deepEqual( Stem("perdeva"), "perd" );
	deepEqual( Stem("perdevan"), "perdevan" );
	deepEqual( Stem("perdevano"), "perd" );
	deepEqual( Stem("perdiam"), "perdiam" );
	deepEqual( Stem("perdita"), "perd" );
	deepEqual( Stem("perdite"), "perd" );
	deepEqual( Stem("perditè"), "perdit" );
	deepEqual( Stem("perdona"), "perdon" );
	deepEqual( Stem("perdonami"), "perdonam" );
	deepEqual( Stem("perdonare"), "perdon" );
	deepEqual( Stem("perdonarvi"), "perdon" );
	deepEqual( Stem("perdonata"), "perdon" );
	deepEqual( Stem("perdonateci"), "perdonatec" );
	deepEqual( Stem("perdonatemi"), "perdonatem" );
	deepEqual( Stem("perdonato"), "perdon" );
	deepEqual( Stem("perdonavano"), "perdon" );
	deepEqual( Stem("perdone"), "perdon" );
	deepEqual( Stem("perdonerà"), "perdon" );
	deepEqual( Stem("perdoni"), "perdon" );
	deepEqual( Stem("perdonino"), "perdonin" );
	deepEqual( Stem("perdono"), "perd" );
	deepEqual( Stem("perdurante"), "perdur" );
	deepEqual( Stem("perduta"), "perd" );
	deepEqual( Stem("perdute"), "perd" );
	deepEqual( Stem("perduti"), "perd" );
	deepEqual( Stem("perduto"), "perd" );
	deepEqual( Stem("perenne"), "perenn" );
	deepEqual( Stem("perentoria"), "perentor" );
	deepEqual( Stem("peres"), "peres" );
	deepEqual( Stem("perfetta"), "perfett" );
	deepEqual( Stem("perfettamente"), "perfett" );
	deepEqual( Stem("perfette"), "perfett" );
	deepEqual( Stem("perfetti"), "perfett" );
	deepEqual( Stem("perfetto"), "perfett" );
	deepEqual( Stem("perfezionabile"), "perfezion" );
	deepEqual( Stem("perfezionamento"), "perfezion" );
	deepEqual( Stem("perfezionare"), "perfezion" );
	deepEqual( Stem("perfezionata"), "perfezion" );
	deepEqual( Stem("perfezione"), "perfezion" );
	deepEqual( Stem("perfida"), "perfid" );
	deepEqual( Stem("perfidia"), "perfid" );
	deepEqual( Stem("perfino"), "perfin" );
	deepEqual( Stem("performance"), "performanc" );
	deepEqual( Stem("pericolassero"), "pericol" );
	deepEqual( Stem("pericoli"), "pericol" );
	deepEqual( Stem("pericolo"), "pericol" );
	deepEqual( Stem("pericolosa"), "pericol" );
	deepEqual( Stem("pericolosamente"), "pericol" );
	deepEqual( Stem("pericolose"), "pericol" );
	deepEqual( Stem("pericolosi"), "pericol" );
	deepEqual( Stem("pericolosità"), "pericolos" );
	deepEqual( Stem("pericoloso"), "pericol" );
	deepEqual( Stem("perierat"), "perierat" );
	deepEqual( Stem("periferia"), "perifer" );
	deepEqual( Stem("periferici"), "perifer" );
	deepEqual( Stem("perifrasi"), "perifras" );
	deepEqual( Stem("perimetri"), "perimetr" );
	deepEqual( Stem("perimetro"), "perimetr" );
	deepEqual( Stem("periodi"), "period" );
	deepEqual( Stem("periodica"), "period" );
	deepEqual( Stem("periodicamente"), "period" );
	deepEqual( Stem("periodiche"), "period" );
	deepEqual( Stem("periodici"), "period" );
	deepEqual( Stem("periodico"), "period" );
	deepEqual( Stem("periodo"), "period" );
	deepEqual( Stem("peripatetico"), "peripatet" );
	deepEqual( Stem("perirono"), "per" );
	deepEqual( Stem("perita"), "per" );
	deepEqual( Stem("perite"), "per" );
	deepEqual( Stem("periti"), "per" );
	deepEqual( Stem("perito"), "per" );
	deepEqual( Stem("periva"), "per" );
	deepEqual( Stem("perizia"), "periz" );
	deepEqual( Stem("perla"), "perl" );
	deepEqual( Stem("perle"), "perl" );
	deepEqual( Stem("perlier"), "perlier" );
	deepEqual( Stem("perlomeno"), "perlomen" );
	deepEqual( Stem("perlopiù"), "perlopiù" );
	deepEqual( Stem("perlustrare"), "perlustr" );
	deepEqual( Stem("perlustrata"), "perlustr" );
	deepEqual( Stem("perlustravamo"), "perlustr" );
	deepEqual( Stem("perlustrazione"), "perlustr" );
	deepEqual( Stem("perlustreranno"), "perlustr" );
	deepEqual( Stem("permalosa"), "permal" );
	deepEqual( Stem("permane"), "perman" );
	deepEqual( Stem("permanente"), "permanent" );
	deepEqual( Stem("permanentemente"), "permanent" );
	deepEqual( Stem("permanenza"), "permanent" );
	deepEqual( Stem("permanenze"), "permanent" );
	deepEqual( Stem("permangono"), "permang" );
	deepEqual( Stem("permessa"), "permess" );
	deepEqual( Stem("permessi"), "permess" );
	deepEqual( Stem("permesso"), "permess" );
	deepEqual( Stem("permetta"), "permett" );
	deepEqual( Stem("permette"), "permett" );
	deepEqual( Stem("permettendogli"), "permett" );
	deepEqual( Stem("permetterà"), "permett" );
	deepEqual( Stem("permetteranno"), "permett" );
	deepEqual( Stem("permettere"), "permett" );
	deepEqual( Stem("permettessero"), "permett" );
	deepEqual( Stem("permettetemi"), "permettetem" );
	deepEqual( Stem("permetteva"), "permett" );
	deepEqual( Stem("permettevano"), "permett" );
	deepEqual( Stem("permise"), "permis" );
	deepEqual( Stem("permissiva"), "permiss" );
	deepEqual( Stem("permitieren"), "permitieren" );
	deepEqual( Stem("perniciosa"), "pernic" );
	deepEqual( Stem("pernizioso"), "perniz" );
	deepEqual( Stem("pero"), "per" );
	deepEqual( Stem("però"), "per" );
	deepEqual( Stem("perocché"), "perocc" );
	deepEqual( Stem("peron"), "peron" );
	deepEqual( Stem("perone"), "peron" );
	deepEqual( Stem("peronista"), "peron" );
	deepEqual( Stem("perorare"), "peror" );
	deepEqual( Stem("perpendicolo"), "perpendicol" );
	deepEqual( Stem("perpetrata"), "perpetr" );
	deepEqual( Stem("perpetua"), "perpetu" );
	deepEqual( Stem("perpetui"), "perpetu" );
	deepEqual( Stem("perpetuo"), "perpetu" );
	deepEqual( Stem("perplessita"), "perpless" );
	deepEqual( Stem("perplessità"), "perpless" );
	deepEqual( Stem("perplesso"), "perpless" );
	deepEqual( Stem("perpretato"), "perpret" );
	deepEqual( Stem("perri"), "perr" );
	deepEqual( Stem("perrini"), "perrin" );
	deepEqual( Stem("perrone"), "perron" );
	deepEqual( Stem("perrotta"), "perrott" );
	deepEqual( Stem("persa"), "pers" );
	deepEqual( Stem("perse"), "pers" );
	deepEqual( Stem("persecutore"), "persecutor" );
	deepEqual( Stem("persecutori"), "persecutor" );
	deepEqual( Stem("persecuzione"), "persecu" );
	deepEqual( Stem("persecuzioni"), "persecu" );
	deepEqual( Stem("persegue"), "persegu" );
	deepEqual( Stem("perseguimento"), "persegu" );
	deepEqual( Stem("perseguire"), "persegu" );
	deepEqual( Stem("perseguita"), "persegu" );
	deepEqual( Stem("perseguitarla"), "perseguit" );
	deepEqual( Stem("perseguitarlo"), "perseguit" );
	deepEqual( Stem("perseguitata"), "perseguit" );
	deepEqual( Stem("perseguitato"), "perseguit" );
	deepEqual( Stem("perseverante"), "persever" );
	deepEqual( Stem("perseveranza"), "persever" );
	deepEqual( Stem("perseverare"), "persever" );
	deepEqual( Stem("persi"), "pers" );
	deepEqual( Stem("persiana"), "persian" );
	deepEqual( Stem("persino"), "persin" );
	deepEqual( Stem("persister"), "persister" );
	deepEqual( Stem("persisteva"), "persist" );
	deepEqual( Stem("perso"), "pers" );
	deepEqual( Stem("persona"), "person" );
	deepEqual( Stem("personaggi"), "personagg" );
	deepEqual( Stem("personaggio"), "personagg" );
	deepEqual( Stem("personaggj"), "personaggj" );
	deepEqual( Stem("personal"), "personal" );
	deepEqual( Stem("personaldollaro"), "personaldollar" );
	deepEqual( Stem("personale"), "personal" );
	deepEqual( Stem("personalfondo"), "personalfond" );
	deepEqual( Stem("personali"), "personal" );
	deepEqual( Stem("personalità"), "personal" );
	deepEqual( Stem("personalmarco"), "personalmarc" );
	deepEqual( Stem("personalmente"), "personal" );
	deepEqual( Stem("persone"), "person" );
	deepEqual( Stem("perspicacia"), "perspicac" );
	deepEqual( Stem("persuade"), "persuad" );
	deepEqual( Stem("persuader"), "persuader" );
	deepEqual( Stem("persuadere"), "persuad" );
	deepEqual( Stem("persuaderli"), "persuad" );
	deepEqual( Stem("persuaderlo"), "persuad" );
	deepEqual( Stem("persuadersi"), "persuad" );
	deepEqual( Stem("persuasa"), "persuas" );
	deepEqual( Stem("persuase"), "persuas" );
	deepEqual( Stem("persuasi"), "persuas" );
	deepEqual( Stem("persuasion"), "persuasion" );
	deepEqual( Stem("persuasione"), "persuasion" );
	deepEqual( Stem("persuasissimo"), "persuasissim" );
	deepEqual( Stem("persuaso"), "persuas" );
	deepEqual( Stem("pertanto"), "pertant" );
	deepEqual( Stem("perth"), "perth" );
	deepEqual( Stem("perticaro"), "perticar" );
	deepEqual( Stem("pertiche"), "pertic" );
	deepEqual( Stem("pertinacia"), "pertinac" );
	deepEqual( Stem("pertinenza"), "pertinent" );
	deepEqual( Stem("pertugio"), "pertug" );
	deepEqual( Stem("perturbatori"), "perturb" );
	deepEqual( Stem("perturbazione"), "perturb" );
	deepEqual( Stem("perturbazioni"), "perturb" );
	deepEqual( Stem("perù"), "perù" );
	deepEqual( Stem("perugia"), "perug" );
	deepEqual( Stem("peruviana"), "peruvian" );
	deepEqual( Stem("peruviane"), "peruvian" );
	deepEqual( Stem("peruviani"), "peruvian" );
	deepEqual( Stem("peruviano"), "peruv" );
	deepEqual( Stem("peruzzi"), "peruzz" );
	deepEqual( Stem("pervade"), "pervad" );
	deepEqual( Stem("pervenire"), "perven" );
	deepEqual( Stem("pervenivano"), "perven" );
	deepEqual( Stem("pervenne"), "pervenn" );
	deepEqual( Stem("pervenuta"), "perven" );
	deepEqual( Stem("pervenuti"), "perven" );
	deepEqual( Stem("pervenuto"), "perven" );
	deepEqual( Stem("perversa"), "pervers" );
	deepEqual( Stem("perversità"), "pervers" );
	deepEqual( Stem("perverso"), "pervers" );
	deepEqual( Stem("pervertimento"), "pervert" );
	deepEqual( Stem("pesa"), "pes" );
	deepEqual( Stem("pesano"), "pes" );
	deepEqual( Stem("pesante"), "pesant" );
	deepEqual( Stem("pesanti"), "pesant" );
	deepEqual( Stem("pesar"), "pes" );
	deepEqual( Stem("pesarese"), "pesares" );
	deepEqual( Stem("pesaro"), "pesar" );
	deepEqual( Stem("pesasse"), "pes" );
	deepEqual( Stem("pesate"), "pes" );
	deepEqual( Stem("pesato"), "pes" );
	deepEqual( Stem("pesavan"), "pesavan" );
	deepEqual( Stem("pesavano"), "pes" );
	deepEqual( Stem("pesca"), "pesc" );
	deepEqual( Stem("pescar"), "pesc" );
	deepEqual( Stem("pescara"), "pescar" );
	deepEqual( Stem("pescare"), "pesc" );
	deepEqual( Stem("pescarenico"), "pescaren" );
	deepEqual( Stem("pescate"), "pesc" );
	deepEqual( Stem("pescato"), "pesc" );
	deepEqual( Stem("pescatore"), "pescator" );
	deepEqual( Stem("pescatori"), "pescator" );
	deepEqual( Stem("pescavan"), "pescavan" );
	deepEqual( Stem("pesce"), "pesc" );
	deepEqual( Stem("pesche"), "pesc" );
	deepEqual( Stem("pescheria"), "pescher" );
	deepEqual( Stem("peschi"), "pesc" );
	deepEqual( Stem("peschiera"), "peschier" );
	deepEqual( Stem("pesci"), "pesc" );
	deepEqual( Stem("pesciaiolo"), "pesciaiol" );
	deepEqual( Stem("pesciolino"), "pesciolin" );
	deepEqual( Stem("pesco"), "pesc" );
	deepEqual( Stem("pesenti"), "pesent" );
	deepEqual( Stem("peserà"), "pes" );
	deepEqual( Stem("peseta"), "peset" );
	deepEqual( Stem("pesetas"), "pesetas" );
	deepEqual( Stem("peshawar"), "peshaw" );
	deepEqual( Stem("pesi"), "pes" );
	deepEqual( Stem("peso"), "pes" );
	deepEqual( Stem("pesos"), "pesos" );
	deepEqual( Stem("pessima"), "pessim" );
	deepEqual( Stem("pessime"), "pessim" );
	deepEqual( Stem("pessimismo"), "pessim" );
	deepEqual( Stem("pessimo"), "pessim" );
	deepEqual( Stem("pessotto"), "pessott" );
	deepEqual( Stem("pesta"), "pest" );
	deepEqual( Stem("pestaggi"), "pestagg" );
	deepEqual( Stem("pestaggio"), "pestagg" );
	deepEqual( Stem("pestato"), "pest" );
	deepEqual( Stem("pestava"), "pest" );
	deepEqual( Stem("peste"), "pest" );
	deepEqual( Stem("pestiferi"), "pestifer" );
	deepEqual( Stem("pestilenti"), "pestilent" );
	deepEqual( Stem("pestilentia"), "pestilent" );
	deepEqual( Stem("pestilenza"), "pestilent" );
	deepEqual( Stem("pestilenze"), "pestilent" );
	deepEqual( Stem("pestilenziale"), "pestilenzial" );
	deepEqual( Stem("pestilenziali"), "pestilenzial" );
	deepEqual( Stem("pet"), "pet" );
	deepEqual( Stem("pete"), "pet" );
	deepEqual( Stem("petecchiale"), "petecchial" );
	deepEqual( Stem("peter"), "peter" );
	deepEqual( Stem("petito"), "pet" );
	deepEqual( Stem("petr"), "petr" );
	deepEqual( Stem("petra"), "petr" );
	deepEqual( Stem("petricca"), "petricc" );
	deepEqual( Stem("petris"), "petris" );
	deepEqual( Stem("petro"), "petr" );
	deepEqual( Stem("petrobras"), "petrobras" );
	deepEqual( Stem("petrolchimico"), "petrolchim" );
	deepEqual( Stem("petroleum"), "petroleum" );
	deepEqual( Stem("petrolifera"), "petrolifer" );
	deepEqual( Stem("petroliferi"), "petrolifer" );
	deepEqual( Stem("petrolifero"), "petrolifer" );
	deepEqual( Stem("petrolio"), "petrol" );
	deepEqual( Stem("petrone"), "petron" );
	deepEqual( Stem("pettegole"), "pettegol" );
	deepEqual( Stem("pettegolezzi"), "pettegolezz" );
	deepEqual( Stem("pettegolezzo"), "pettegolezz" );
	deepEqual( Stem("pettegolo"), "pettegol" );
	deepEqual( Stem("petti"), "pett" );
	deepEqual( Stem("pettinare"), "pettin" );
	deepEqual( Stem("pettinata"), "pettin" );
	deepEqual( Stem("pettine"), "pettin" );
	deepEqual( Stem("pettinelli"), "pettinell" );
	deepEqual( Stem("petto"), "pett" );
	deepEqual( Stem("pettoruto"), "pettor" );
	deepEqual( Stem("petulante"), "petul" );
	deepEqual( Stem("petulanti"), "petul" );
	deepEqual( Stem("petulanza"), "petul" );
	deepEqual( Stem("pezze"), "pezz" );
	deepEqual( Stem("pezzente"), "pezzent" );
	deepEqual( Stem("pezzetta"), "pezzett" );
	deepEqual( Stem("pezzetti"), "pezzett" );
	deepEqual( Stem("pezzetto"), "pezzett" );
	deepEqual( Stem("pezzi"), "pezz" );
	deepEqual( Stem("pezzo"), "pezz" );
	deepEqual( Stem("pezzò"), "pezz" );
	deepEqual( Stem("pfennig"), "pfennig" );
	deepEqual( Stem("pfennigs"), "pfennigs" );
	deepEqual( Stem("ph"), "ph" );
	deepEqual( Stem("pharmachem"), "pharmachem" );
	deepEqual( Stem("phenixfund"), "phenixfund" );
	deepEqual( Stem("philips"), "philips" );
	deepEqual( Stem("phillips"), "phillips" );
	deepEqual( Stem("phoenix"), "phoenix" );
	deepEqual( Stem("phone"), "phon" );
	deepEqual( Stem("phyllis"), "phyllis" );
	deepEqual( Stem("pi"), "pi" );
	deepEqual( Stem("pia"), "pia" );
	deepEqual( Stem("piaccia"), "piacc" );
	deepEqual( Stem("piacciono"), "piacc" );
	deepEqual( Stem("piace"), "piac" );
	deepEqual( Stem("piacendogli"), "piac" );
	deepEqual( Stem("piacentine"), "piacentin" );
	deepEqual( Stem("piacentini"), "piacentin" );
	deepEqual( Stem("piacenza"), "piacenz" );
	deepEqual( Stem("piacer"), "piacer" );
	deepEqual( Stem("piacerà"), "piac" );
	deepEqual( Stem("piacere"), "piac" );
	deepEqual( Stem("piacerebbe"), "piac" );
	deepEqual( Stem("piaceri"), "piacer" );
	deepEqual( Stem("piacesse"), "piacess" );
	deepEqual( Stem("piaceva"), "piac" );
	deepEqual( Stem("piacevan"), "piacevan" );
	deepEqual( Stem("piacevolezza"), "piacevolezz" );
	deepEqual( Stem("piacevolezze"), "piacevolezz" );
	deepEqual( Stem("piacevolmente"), "piacevol" );
	deepEqual( Stem("piaciuto"), "piac" );
	deepEqual( Stem("piacque"), "piacqu" );
	deepEqual( Stem("piaga"), "piag" );
	deepEqual( Stem("piaghe"), "piag" );
	deepEqual( Stem("pian"), "pian" );
	deepEqual( Stem("piane"), "pian" );
	deepEqual( Stem("pianelle"), "pianell" );
	deepEqual( Stem("pianerottolo"), "pianerottol" );
	deepEqual( Stem("pianeta"), "pianet" );
	deepEqual( Stem("pianeti"), "pianet" );
	deepEqual( Stem("piange"), "piang" );
	deepEqual( Stem("piangendo"), "piang" );
	deepEqual( Stem("piangente"), "piangent" );
	deepEqual( Stem("piangenti"), "piangent" );
	deepEqual( Stem("pianger"), "pianger" );
	deepEqual( Stem("piangere"), "piang" );
	deepEqual( Stem("piangerete"), "piang" );
	deepEqual( Stem("piangerò"), "piang" );
	deepEqual( Stem("piangesse"), "piangess" );
	deepEqual( Stem("piangeva"), "piang" );
	deepEqual( Stem("piangevan"), "piangevan" );
	deepEqual( Stem("piangiamo"), "piang" );
	deepEqual( Stem("piani"), "pian" );
	deepEqual( Stem("pianificare"), "pianific" );
	deepEqual( Stem("pianificazione"), "pianif" );
	deepEqual( Stem("pianissimo"), "pianissim" );
	deepEqual( Stem("piano"), "pian" );
	deepEqual( Stem("pianoforte"), "pianofort" );
	deepEqual( Stem("pianse"), "pians" );
	deepEqual( Stem("pianta"), "piant" );
	deepEqual( Stem("piantan"), "piantan" );
	deepEqual( Stem("piantandogli"), "piant" );
	deepEqual( Stem("piantandole"), "piant" );
	deepEqual( Stem("piantandosi"), "piant" );
	deepEqual( Stem("piantaron"), "piantaron" );
	deepEqual( Stem("piantarsi"), "piant" );
	deepEqual( Stem("piantate"), "piant" );
	deepEqual( Stem("piantato"), "piant" );
	deepEqual( Stem("piantatosi"), "piantat" );
	deepEqual( Stem("piantava"), "piant" );
	deepEqual( Stem("piante"), "piant" );
	deepEqual( Stem("pianti"), "piant" );
	deepEqual( Stem("pianto"), "piant" );
	deepEqual( Stem("piantò"), "piant" );
	deepEqual( Stem("pianura"), "pianur" );
	deepEqual( Stem("pianure"), "pianur" );
	deepEqual( Stem("piastrine"), "piastrin" );
	deepEqual( Stem("piatta"), "piatt" );
	deepEqual( Stem("piattaforma"), "piattaform" );
	deepEqual( Stem("piattaforme"), "piattaform" );
	deepEqual( Stem("piatti"), "piatt" );
	deepEqual( Stem("piatto"), "piatt" );
	deepEqual( Stem("piazza"), "piazz" );
	deepEqual( Stem("piazzale"), "piazzal" );
	deepEqual( Stem("piazzamento"), "piazz" );
	deepEqual( Stem("piazzando"), "piazz" );
	deepEqual( Stem("piazzata"), "piazz" );
	deepEqual( Stem("piazzati"), "piazz" );
	deepEqual( Stem("piazzato"), "piazz" );
	deepEqual( Stem("piazze"), "piazz" );
	deepEqual( Stem("piazzetta"), "piazzett" );
	deepEqual( Stem("piazzette"), "piazzett" );
	deepEqual( Stem("pic"), "pic" );
	deepEqual( Stem("picard"), "picard" );
	deepEqual( Stem("picasso"), "picass" );
	deepEqual( Stem("picca"), "picc" );
	deepEqual( Stem("piccava"), "picc" );
	deepEqual( Stem("picche"), "picc" );
	deepEqual( Stem("picchetto"), "picchett" );
	deepEqual( Stem("picchi"), "picc" );
	deepEqual( Stem("picchia"), "picc" );
	deepEqual( Stem("picchiando"), "picc" );
	deepEqual( Stem("picchiar"), "picc" );
	deepEqual( Stem("picchiare"), "picc" );
	deepEqual( Stem("picchiarono"), "picc" );
	deepEqual( Stem("picchiarsi"), "picc" );
	deepEqual( Stem("picchiate"), "picc" );
	deepEqual( Stem("picchiava"), "picc" );
	deepEqual( Stem("picchietto"), "picchiett" );
	deepEqual( Stem("picchio"), "picc" );
	deepEqual( Stem("picchiò"), "picc" );
	deepEqual( Stem("piccini"), "piccin" );
	deepEqual( Stem("piccinin"), "piccinin" );
	deepEqual( Stem("piccinini"), "piccinin" );
	deepEqual( Stem("piccino"), "piccin" );
	deepEqual( Stem("picco"), "picc" );
	deepEqual( Stem("piccol"), "piccol" );
	deepEqual( Stem("piccola"), "piccol" );
	deepEqual( Stem("piccole"), "piccol" );
	deepEqual( Stem("piccoli"), "piccol" );
	deepEqual( Stem("piccolillo"), "piccolill" );
	deepEqual( Stem("piccolissimo"), "piccolissim" );
	deepEqual( Stem("piccolo"), "piccol" );
	deepEqual( Stem("piceno"), "picen" );
	deepEqual( Stem("pick"), "pick" );
	deepEqual( Stem("picozzi"), "picozz" );
	deepEqual( Stem("pidgeon"), "pidgeon" );
	deepEqual( Stem("pidiessino"), "pidiessin" );
	deepEqual( Stem("pido"), "pid" );
	deepEqual( Stem("piduisti"), "piduist" );
	deepEqual( Stem("pie"), "pie" );
	deepEqual( Stem("piè"), "piè" );
	deepEqual( Stem("piede"), "pied" );
	deepEqual( Stem("piedestallo"), "piedestall" );
	deepEqual( Stem("piedi"), "pied" );
	deepEqual( Stem("piedra"), "piedr" );
	deepEqual( Stem("piega"), "pieg" );
	deepEqual( Stem("piegando"), "pieg" );
	deepEqual( Stem("piegare"), "pieg" );
	deepEqual( Stem("piegata"), "pieg" );
	deepEqual( Stem("piegate"), "pieg" );
	deepEqual( Stem("piegato"), "pieg" );
	deepEqual( Stem("pieghe"), "pieg" );
	deepEqual( Stem("piegò"), "pieg" );
	deepEqual( Stem("piemont"), "piemont" );
	deepEqual( Stem("piemonte"), "piemont" );
	deepEqual( Stem("piemontese"), "piemontes" );
	deepEqual( Stem("piemontesi"), "piemontes" );
	deepEqual( Stem("piena"), "pien" );
	deepEqual( Stem("pienamente"), "pien" );
	deepEqual( Stem("piene"), "pien" );
	deepEqual( Stem("pienezza"), "pienezz" );
	deepEqual( Stem("pieni"), "pien" );
	deepEqual( Stem("pieno"), "pien" );
	deepEqual( Stem("pienone"), "pienon" );
	deepEqual( Stem("pienotta"), "pienott" );
	deepEqual( Stem("pier"), "pier" );
	deepEqual( Stem("piera"), "pier" );
	deepEqual( Stem("pieralberto"), "pieralbert" );
	deepEqual( Stem("piercamillo"), "piercamill" );
	deepEqual( Stem("piercarlo"), "pierc" );
	deepEqual( Stem("pierferdinando"), "pierferdin" );
	deepEqual( Stem("pierguido"), "pierguid" );
	deepEqual( Stem("pierini"), "pierin" );
	deepEqual( Stem("pierluigi"), "pierluig" );
	deepEqual( Stem("piero"), "pier" );
	deepEqual( Stem("pierobon"), "pierobon" );
	deepEqual( Stem("pieroni"), "pieron" );
	deepEqual( Stem("pierpaolo"), "pierpaol" );
	deepEqual( Stem("pierre"), "pierr" );
	deepEqual( Stem("pietà"), "piet" );
	deepEqual( Stem("pietanza"), "pietanz" );
	deepEqual( Stem("pietanze"), "pietanz" );
	deepEqual( Stem("pietosa"), "pietos" );
	deepEqual( Stem("pietosamente"), "pietos" );
	deepEqual( Stem("pietose"), "pietos" );
	deepEqual( Stem("pietosi"), "pietos" );
	deepEqual( Stem("pietra"), "pietr" );
	deepEqual( Stem("pietrangeli"), "pietrangel" );
	deepEqual( Stem("pietre"), "pietr" );
	deepEqual( Stem("pietro"), "pietr" );
	deepEqual( Stem("pietroburgo"), "pietroburg" );
	deepEqual( Stem("pieve"), "piev" );
	deepEqual( Stem("pigia"), "pig" );
	deepEqual( Stem("pigiando"), "pig" );
	deepEqual( Stem("pigiare"), "pig" );
	deepEqual( Stem("pigiasse"), "pig" );
	deepEqual( Stem("pigìo"), "pigì" );
	deepEqual( Stem("pigionali"), "pigional" );
	deepEqual( Stem("piglia"), "pigl" );
	deepEqual( Stem("piglian"), "piglian" );
	deepEqual( Stem("pigliano"), "pigl" );
	deepEqual( Stem("pigliare"), "pigl" );
	deepEqual( Stem("pigliarne"), "pigl" );
	deepEqual( Stem("pigliate"), "pigl" );
	deepEqual( Stem("pigliatelo"), "pigliatel" );
	deepEqual( Stem("pigliava"), "pigl" );
	deepEqual( Stem("piglino"), "piglin" );
	deepEqual( Stem("piglio"), "pigl" );
	deepEqual( Stem("pignone"), "pignon" );
	deepEqual( Stem("pigri"), "pigr" );
	deepEqual( Stem("pigrizia"), "pigriz" );
	deepEqual( Stem("pil"), "pil" );
	deepEqual( Stem("pilastri"), "pilastr" );
	deepEqual( Stem("pilastro"), "pilastr" );
	deepEqual( Stem("pilato"), "pil" );
	deepEqual( Stem("pile"), "pil" );
	deepEqual( Stem("pillitteri"), "pillitter" );
	deepEqual( Stem("pillole"), "pillol" );
	deepEqual( Stem("piloni"), "pilon" );
	deepEqual( Stem("pilota"), "pilot" );
	deepEqual( Stem("pilotando"), "pilot" );
	deepEqual( Stem("pilotato"), "pilot" );
	deepEqual( Stem("piloti"), "pilot" );
	deepEqual( Stem("pin"), "pin" );
	deepEqual( Stem("pina"), "pin" );
	deepEqual( Stem("pinato"), "pin" );
	deepEqual( Stem("pindo"), "pind" );
	deepEqual( Stem("pinè"), "pin" );
	deepEqual( Stem("pinerolo"), "pinerol" );
	deepEqual( Stem("pinetagrande"), "pinetagrand" );
	deepEqual( Stem("pingitore"), "pingitor" );
	deepEqual( Stem("pininfarina"), "pininfarin" );
	deepEqual( Stem("pink"), "pink" );
	deepEqual( Stem("pinna"), "pinn" );
	deepEqual( Stem("pino"), "pin" );
	deepEqual( Stem("pinocchio"), "pinocc" );
	deepEqual( Stem("pinza"), "pinz" );
	deepEqual( Stem("pinzochere"), "pinzoc" );
	deepEqual( Stem("pio"), "pio" );
	deepEqual( Stem("piogge"), "piogg" );
	deepEqual( Stem("pioggia"), "piogg" );
	deepEqual( Stem("pioli"), "piol" );
	deepEqual( Stem("piombava"), "piomb" );
	deepEqual( Stem("piombino"), "piombin" );
	deepEqual( Stem("pionieri"), "pionier" );
	deepEqual( Stem("pionieristica"), "pionierist" );
	deepEqual( Stem("pioppo"), "piopp" );
	deepEqual( Stem("piovanelli"), "piovanell" );
	deepEqual( Stem("piovani"), "piovan" );
	deepEqual( Stem("piove"), "piov" );
	deepEqual( Stem("pioveva"), "piov" );
	deepEqual( Stem("piovigginare"), "pioviggin" );
	deepEqual( Stem("piovosa"), "piovos" );
	deepEqual( Stem("piovra"), "piovr" );
	deepEqual( Stem("piovute"), "piov" );
	deepEqual( Stem("piovutole"), "piovutol" );
	deepEqual( Stem("piper"), "piper" );
	deepEqual( Stem("pippo"), "pipp" );
	deepEqual( Stem("pir"), "pir" );
	deepEqual( Stem("pira"), "pir" );
	deepEqual( Stem("pirelli"), "pirell" );
	deepEqual( Stem("pirri"), "pirr" );
	deepEqual( Stem("pisa"), "pis" );
	deepEqual( Stem("pisano"), "pis" );
	deepEqual( Stem("pista"), "pist" );
	deepEqual( Stem("pistà"), "pist" );
	deepEqual( Stem("pistarino"), "pistarin" );
	deepEqual( Stem("piste"), "pist" );
	deepEqual( Stem("pistella"), "pistell" );
	deepEqual( Stem("pistoia"), "pistoi" );
	deepEqual( Stem("pistoiese"), "pistoies" );
	deepEqual( Stem("pistola"), "pistol" );
	deepEqual( Stem("pistole"), "pistol" );
	deepEqual( Stem("pitaffio"), "pitaff" );
	deepEqual( Stem("pitagora"), "pitagor" );
	deepEqual( Stem("pitocco"), "pitocc" );
	deepEqual( Stem("pittalis"), "pittalis" );
	deepEqual( Stem("pittore"), "pittor" );
	deepEqual( Stem("pittura"), "pittur" );
	deepEqual( Stem("piu"), "piu" );
	deepEqual( Stem("più"), "più" );
	deepEqual( Stem("piume"), "pium" );
	deepEqual( Stem("piuttosto"), "piuttost" );
	deepEqual( Stem("piùttosto"), "piùttost" );
	deepEqual( Stem("pivetta"), "pivett" );
	deepEqual( Stem("pivetti"), "pivett" );
	deepEqual( Stem("pizzi"), "pizz" );
	deepEqual( Stem("pizzicara"), "pizzicar" );
	deepEqual( Stem("pizzicavan"), "pizzicavan" );
	deepEqual( Stem("pizzico"), "pizzic" );
	deepEqual( Stem("pizzo"), "pizz" );
	deepEqual( Stem("placet"), "placet" );
	deepEqual( Stem("placida"), "placid" );
	deepEqual( Stem("placidamente"), "placid" );
	deepEqual( Stem("placide"), "placid" );
	deepEqual( Stem("placido"), "placid" );
	deepEqual( Stem("planisferio"), "planisfer" );
	deepEqual( Stem("plantarum"), "plantarum" );
	deepEqual( Stem("plast"), "plast" );
	deepEqual( Stem("plastica"), "plastic" );
	deepEqual( Stem("platea"), "plate" );
	deepEqual( Stem("plateà"), "plate" );
	deepEqual( Stem("platonus"), "platonus" );
	deepEqual( Stem("platt"), "platt" );
	deepEqual( Stem("plaudenti"), "plaudent" );
	deepEqual( Stem("plausibile"), "plausibil" );
	deepEqual( Stem("plauso"), "plaus" );
	deepEqual( Stem("play"), "play" );
	deepEqual( Stem("playboy"), "playboy" );
	deepEqual( Stem("plebe"), "pleb" );
	deepEqual( Stem("plebei"), "plebe" );
	deepEqual( Stem("plebeo"), "plebe" );
	deepEqual( Stem("plebiscitaria"), "plebiscitar" );
	deepEqual( Stem("plebiscitarie"), "plebiscitar" );
	deepEqual( Stem("plenaria"), "plenar" );
	deepEqual( Stem("plerosque"), "plerosqu" );
	deepEqual( Stem("pli"), "pli" );
	deepEqual( Stem("plico"), "plic" );
	deepEqual( Stem("plinio"), "plin" );
	deepEqual( Stem("pluksna"), "pluksn" );
	deepEqual( Stem("pluralismo"), "plural" );
	deepEqual( Stem("pluralità"), "plural" );
	deepEqual( Stem("pluriaggravato"), "pluriaggrav" );
	deepEqual( Stem("plurifondo"), "plurifond" );
	deepEqual( Stem("plurinquisito"), "plurinquis" );
	deepEqual( Stem("pm"), "pm" );
	deepEqual( Stem("po"), "po" );
	deepEqual( Stem("pò"), "pò" );
	deepEqual( Stem("poarte"), "poart" );
	deepEqual( Stem("poca"), "poc" );
	deepEqual( Stem("poche"), "poch" );
	deepEqual( Stem("pochi"), "poch" );
	deepEqual( Stem("pochino"), "pochin" );
	deepEqual( Stem("pochissime"), "pochissim" );
	deepEqual( Stem("pochissimi"), "pochissim" );
	deepEqual( Stem("pochissimo"), "pochissim" );
	deepEqual( Stem("poco"), "poc" );
	deepEqual( Stem("podere"), "pod" );
	deepEqual( Stem("poderetto"), "poderett" );
	deepEqual( Stem("poderi"), "poder" );
	deepEqual( Stem("poderose"), "poder" );
	deepEqual( Stem("poderoso"), "poder" );
	deepEqual( Stem("podestà"), "podest" );
	deepEqual( Stem("podio"), "pod" );
	deepEqual( Stem("podistica"), "podist" );
	deepEqual( Stem("poelman"), "poelman" );
	deepEqual( Stem("poema"), "poem" );
	deepEqual( Stem("poesia"), "poes" );
	deepEqual( Stem("poesie"), "poes" );
	deepEqual( Stem("poeta"), "poet" );
	deepEqual( Stem("poeti"), "poet" );
	deepEqual( Stem("poetica"), "poetic" );
	deepEqual( Stem("poetico"), "poetic" );
	deepEqual( Stem("poggetto"), "poggett" );
	deepEqual( Stem("poggi"), "pogg" );
	deepEqual( Stem("poggiano"), "pogg" );
	deepEqual( Stem("poggibonsi"), "poggibons" );
	deepEqual( Stem("poggio"), "pogg" );
	deepEqual( Stem("poggioli"), "poggiol" );
	deepEqual( Stem("poh"), "poh" );
	deepEqual( Stem("poi"), "poi" );
	deepEqual( Stem("poich"), "poic" );
	deepEqual( Stem("poiché"), "poic" );
	deepEqual( Stem("poichè"), "poic" );
	deepEqual( Stem("point"), "point" );
	deepEqual( Stem("poivre"), "poivr" );
	deepEqual( Stem("pol"), "pol" );
	deepEqual( Stem("polacche"), "polacc" );
	deepEqual( Stem("polacco"), "polacc" );
	deepEqual( Stem("polare"), "pol" );
	deepEqual( Stem("polarizzi"), "polarizz" );
	deepEqual( Stem("polemica"), "polem" );
	deepEqual( Stem("polemiche"), "polem" );
	deepEqual( Stem("polemichette"), "polemichett" );
	deepEqual( Stem("polemico"), "polem" );
	deepEqual( Stem("polemizza"), "polemizz" );
	deepEqual( Stem("polemizzano"), "polemizz" );
	deepEqual( Stem("polemizzato"), "polemizz" );
	deepEqual( Stem("polenta"), "polent" );
	deepEqual( Stem("polfer"), "polfer" );
	deepEqual( Stem("poli"), "pol" );
	deepEqual( Stem("poliambulatori"), "poliambul" );
	deepEqual( Stem("policano"), "polic" );
	deepEqual( Stem("policombustibile"), "policombust" );
	deepEqual( Stem("polidori"), "polidor" );
	deepEqual( Stem("poligrafici"), "poligraf" );
	deepEqual( Stem("polimeri"), "polimer" );
	deepEqual( Stem("polinesia"), "polines" );
	deepEqual( Stem("poliomelitici"), "poliomelit" );
	deepEqual( Stem("politano"), "polit" );
	deepEqual( Stem("politica"), "polit" );
	deepEqual( Stem("politicà"), "politic" );
	deepEqual( Stem("political"), "political" );
	deepEqual( Stem("politicamente"), "polit" );
	deepEqual( Stem("politiche"), "polit" );
	deepEqual( Stem("politici"), "polit" );
	deepEqual( Stem("politicì"), "politic" );
	deepEqual( Stem("politico"), "polit" );
	deepEqual( Stem("politicò"), "politic" );
	deepEqual( Stem("politicone"), "politicon" );
	deepEqual( Stem("politiconi"), "politicon" );
	deepEqual( Stem("politilene"), "politilen" );
	deepEqual( Stem("polizia"), "poliz" );
	deepEqual( Stem("poliziesco"), "poliziesc" );
	deepEqual( Stem("poliziotta"), "poliziott" );
	deepEqual( Stem("poliziotti"), "poliziott" );
	deepEqual( Stem("poliziotto"), "poliziott" );
	deepEqual( Stem("polizza"), "polizz" );
	deepEqual( Stem("polizze"), "polizz" );
	deepEqual( Stem("pollaio"), "pollai" );
	deepEqual( Stem("polli"), "poll" );
	deepEqual( Stem("pollice"), "pollic" );
	deepEqual( Stem("polmoni"), "polmon" );
	deepEqual( Stem("polo"), "pol" );
	deepEqual( Stem("polonia"), "polon" );
	deepEqual( Stem("polpette"), "polpett" );
	deepEqual( Stem("polsi"), "pols" );
	deepEqual( Stem("polso"), "pols" );
	deepEqual( Stem("poltiglia"), "poltigl" );
	deepEqual( Stem("poltrona"), "poltron" );
	deepEqual( Stem("poltrone"), "poltron" );
	deepEqual( Stem("poltroni"), "poltron" );
	deepEqual( Stem("polvere"), "polv" );
	deepEqual( Stem("polveri"), "polver" );
	deepEqual( Stem("polveriera"), "polverier" );
	deepEqual( Stem("polverino"), "polverin" );
	deepEqual( Stem("polverìo"), "polverì" );
	deepEqual( Stem("polverosi"), "polver" );
	deepEqual( Stem("polziia"), "polzii" );
	deepEqual( Stem("pomeridiana"), "pomeridian" );
	deepEqual( Stem("pomeridiano"), "pomerid" );
	deepEqual( Stem("pomeriggio"), "pomerigg" );
	deepEqual( Stem("pomo"), "pom" );
	deepEqual( Stem("pompa"), "pomp" );
	deepEqual( Stem("pompe"), "pomp" );
	deepEqual( Stem("pomposamente"), "pompos" );
	deepEqual( Stem("pomposi"), "pompos" );
	deepEqual( Stem("ponchio"), "ponc" );
	deepEqual( Stem("ponderata"), "ponder" );
	deepEqual( Stem("ponderato"), "ponder" );
	deepEqual( Stem("pone"), "pon" );
	deepEqual( Stem("ponevano"), "pon" );
	deepEqual( Stem("poniamo"), "pon" );
	deepEqual( Stem("ponsacco"), "ponsacc" );
	deepEqual( Stem("ponte"), "pont" );
	deepEqual( Stem("pontedera"), "ponteder" );
	deepEqual( Stem("pontefice"), "pontef" );
	deepEqual( Stem("ponti"), "pont" );
	deepEqual( Stem("pontida"), "pontid" );
	deepEqual( Stem("pontieri"), "pontier" );
	deepEqual( Stem("pontificali"), "pontifical" );
	deepEqual( Stem("pontificato"), "pontific" );
	deepEqual( Stem("pontile"), "pontil" );
	deepEqual( Stem("ponto"), "pont" );
	deepEqual( Stem("pontone"), "ponton" );
	deepEqual( Stem("ponzio"), "ponz" );
	deepEqual( Stem("pool"), "pool" );
	deepEqual( Stem("pop"), "pop" );
	deepEqual( Stem("popolana"), "popolan" );
	deepEqual( Stem("popolano"), "popol" );
	deepEqual( Stem("popolanò"), "popolan" );
	deepEqual( Stem("popolare"), "popol" );
	deepEqual( Stem("popolari"), "popolar" );
	deepEqual( Stem("popolarità"), "popolar" );
	deepEqual( Stem("popolato"), "popol" );
	deepEqual( Stem("popolazion"), "popolazion" );
	deepEqual( Stem("popolazione"), "popol" );
	deepEqual( Stem("popoli"), "popol" );
	deepEqual( Stem("popolo"), "popol" );
	deepEqual( Stem("popolò"), "popol" );
	deepEqual( Stem("poposta"), "popost" );
	deepEqual( Stem("poppa"), "popp" );
	deepEqual( Stem("poppard"), "poppard" );
	deepEqual( Stem("poppe"), "popp" );
	deepEqual( Stem("poppea"), "poppe" );
	deepEqual( Stem("populi"), "popul" );
	deepEqual( Stem("populismo"), "popul" );
	deepEqual( Stem("populista"), "popul" );
	deepEqual( Stem("por"), "por" );
	deepEqual( Stem("porcellini"), "porcellin" );
	deepEqual( Stem("porcheria"), "porcher" );
	deepEqual( Stem("porcherie"), "porcher" );
	deepEqual( Stem("porci"), "porc" );
	deepEqual( Stem("pordenone"), "pordenon" );
	deepEqual( Stem("pordenonesi"), "pordenones" );
	deepEqual( Stem("porfirio"), "porfir" );
	deepEqual( Stem("porge"), "porg" );
	deepEqual( Stem("porgevano"), "porg" );
	deepEqual( Stem("porla"), "porl" );
	deepEqual( Stem("pornografiche"), "pornograf" );
	deepEqual( Stem("porpora"), "porpor" );
	deepEqual( Stem("porporato"), "porpor" );
	deepEqual( Stem("porporine"), "porporin" );
	deepEqual( Stem("porporini"), "porporin" );
	deepEqual( Stem("porrà"), "porr" );
	deepEqual( Stem("porre"), "porr" );
	deepEqual( Stem("porrini"), "porrin" );
	deepEqual( Stem("porse"), "pors" );
	deepEqual( Stem("port"), "port" );
	deepEqual( Stem("porta"), "port" );
	deepEqual( Stem("portabandiera"), "portabandier" );
	deepEqual( Stem("portafoglio"), "portafogl" );
	deepEqual( Stem("portale"), "portal" );
	deepEqual( Stem("portamenti"), "port" );
	deepEqual( Stem("portamento"), "port" );
	deepEqual( Stem("portan"), "portan" );
	deepEqual( Stem("portando"), "port" );
	deepEqual( Stem("portandosi"), "port" );
	deepEqual( Stem("portandovi"), "port" );
	deepEqual( Stem("portano"), "port" );
	deepEqual( Stem("portantini"), "portantin" );
	deepEqual( Stem("portar"), "port" );
	deepEqual( Stem("portarci"), "port" );
	deepEqual( Stem("portare"), "port" );
	deepEqual( Stem("portargli"), "port" );
	deepEqual( Stem("portarla"), "port" );
	deepEqual( Stem("portarle"), "port" );
	deepEqual( Stem("portarli"), "port" );
	deepEqual( Stem("portarlo"), "port" );
	deepEqual( Stem("portarne"), "port" );
	deepEqual( Stem("portaron"), "portaron" );
	deepEqual( Stem("portarono"), "port" );
	deepEqual( Stem("portarsi"), "port" );
	deepEqual( Stem("portarvi"), "port" );
	deepEqual( Stem("portasse"), "port" );
	deepEqual( Stem("portassero"), "port" );
	deepEqual( Stem("portata"), "port" );
	deepEqual( Stem("portate"), "port" );
	deepEqual( Stem("portateglieli"), "portategliel" );
	deepEqual( Stem("portati"), "port" );
	deepEqual( Stem("portatile"), "portatil" );
	deepEqual( Stem("portato"), "port" );
	deepEqual( Stem("portator"), "portator" );
	deepEqual( Stem("portatore"), "portator" );
	deepEqual( Stem("portatori"), "portator" );
	deepEqual( Stem("portatovi"), "portatov" );
	deepEqual( Stem("portatrice"), "portatric" );
	deepEqual( Stem("portatrici"), "portatric" );
	deepEqual( Stem("portava"), "port" );
	deepEqual( Stem("portavan"), "portavan" );
	deepEqual( Stem("portavano"), "port" );
	deepEqual( Stem("portavce"), "portavc" );
	deepEqual( Stem("portavoce"), "portavoc" );
	deepEqual( Stem("porte"), "port" );
	deepEqual( Stem("portento"), "portent" );
	deepEqual( Stem("portentosa"), "portent" );
	deepEqual( Stem("porterà"), "port" );
	deepEqual( Stem("porteranno"), "port" );
	deepEqual( Stem("porterebbe"), "port" );
	deepEqual( Stem("porterò"), "port" );
	deepEqual( Stem("portfolio"), "portfol" );
	deepEqual( Stem("porti"), "port" );
	deepEqual( Stem("portiam"), "portiam" );
	deepEqual( Stem("portiamo"), "port" );
	deepEqual( Stem("portici"), "portic" );
	deepEqual( Stem("portico"), "portic" );
	deepEqual( Stem("portiera"), "portier" );
	deepEqual( Stem("portiere"), "port" );
	deepEqual( Stem("portieri"), "portier" );
	deepEqual( Stem("portinaio"), "portinai" );
	deepEqual( Stem("portino"), "portin" );
	deepEqual( Stem("portito"), "port" );
	deepEqual( Stem("porto"), "port" );
	deepEqual( Stem("portò"), "port" );
	deepEqual( Stem("portogallo"), "portogall" );
	deepEqual( Stem("portone"), "porton" );
	deepEqual( Stem("portuale"), "portual" );
	deepEqual( Stem("portuali"), "portual" );
	deepEqual( Stem("portualità"), "portual" );
	deepEqual( Stem("portugal"), "portugal" );
	deepEqual( Stem("porzione"), "porzion" );
	deepEqual( Stem("posa"), "pos" );
	deepEqual( Stem("posada"), "posad" );
	deepEqual( Stem("posando"), "pos" );
	deepEqual( Stem("posar"), "pos" );
	deepEqual( Stem("posarci"), "pos" );
	deepEqual( Stem("posare"), "pos" );
	deepEqual( Stem("posarlo"), "pos" );
	deepEqual( Stem("posarsi"), "pos" );
	deepEqual( Stem("posata"), "pos" );
	deepEqual( Stem("posate"), "pos" );
	deepEqual( Stem("posati"), "pos" );
	deepEqual( Stem("posato"), "pos" );
	deepEqual( Stem("posava"), "pos" );
	deepEqual( Stem("posavano"), "pos" );
	deepEqual( Stem("poscia"), "posc" );
	deepEqual( Stem("pose"), "pos" );
	deepEqual( Stem("posero"), "poser" );
	deepEqual( Stem("posibilità"), "posibil" );
	deepEqual( Stem("positiva"), "posit" );
	deepEqual( Stem("positivamente"), "posit" );
	deepEqual( Stem("positive"), "posit" );
	deepEqual( Stem("positivi"), "posit" );
	deepEqual( Stem("positivo"), "posit" );
	deepEqual( Stem("positura"), "positur" );
	deepEqual( Stem("posizini"), "posizin" );
	deepEqual( Stem("posizione"), "posizion" );
	deepEqual( Stem("posizioni"), "posizion" );
	deepEqual( Stem("posò"), "pos" );
	deepEqual( Stem("posposte"), "pospost" );
	deepEqual( Stem("possa"), "poss" );
	deepEqual( Stem("possan"), "possan" );
	deepEqual( Stem("possano"), "poss" );
	deepEqual( Stem("possedendo"), "possed" );
	deepEqual( Stem("possedere"), "possed" );
	deepEqual( Stem("possedessi"), "possedess" );
	deepEqual( Stem("possedeva"), "possed" );
	deepEqual( Stem("posseduta"), "possed" );
	deepEqual( Stem("possegga"), "possegg" );
	deepEqual( Stem("possesso"), "possess" );
	deepEqual( Stem("possessore"), "possessor" );
	deepEqual( Stem("possessori"), "possessor" );
	deepEqual( Stem("possiam"), "possiam" );
	deepEqual( Stem("possiamo"), "poss" );
	deepEqual( Stem("possiate"), "poss" );
	deepEqual( Stem("possibile"), "possibil" );
	deepEqual( Stem("possibili"), "possibil" );
	deepEqual( Stem("possibilie"), "possibil" );
	deepEqual( Stem("possibilisti"), "possibil" );
	deepEqual( Stem("possibilita"), "possibil" );
	deepEqual( Stem("possibilità"), "possibil" );
	deepEqual( Stem("possiblità"), "possibl" );
	deepEqual( Stem("possiede"), "possied" );
	deepEqual( Stem("posso"), "poss" );
	deepEqual( Stem("posson"), "posson" );
	deepEqual( Stem("possono"), "poss" );
	deepEqual( Stem("post"), "post" );
	deepEqual( Stem("posta"), "post" );
	deepEqual( Stem("postali"), "postal" );
	deepEqual( Stem("postandosi"), "post" );
	deepEqual( Stem("postare"), "post" );
	deepEqual( Stem("postarono"), "post" );
	deepEqual( Stem("postarsi"), "post" );
	deepEqual( Stem("postazione"), "postazion" );
	deepEqual( Stem("postazioni"), "postazion" );
	deepEqual( Stem("poste"), "post" );
	deepEqual( Stem("postelegrafonici"), "postelegrafon" );
	deepEqual( Stem("posteri"), "poster" );
	deepEqual( Stem("posteriore"), "posterior" );
	deepEqual( Stem("posteriori"), "posterior" );
	deepEqual( Stem("posterità"), "poster" );
	deepEqual( Stem("posti"), "post" );
	deepEqual( Stem("postì"), "post" );
	deepEqual( Stem("posticipo"), "posticip" );
	deepEqual( Stem("postiglione"), "postiglion" );
	deepEqual( Stem("posto"), "post" );
	deepEqual( Stem("postò"), "post" );
	deepEqual( Stem("potanno"), "potann" );
	deepEqual( Stem("potata"), "pot" );
	deepEqual( Stem("pote"), "pot" );
	deepEqual( Stem("poté"), "pot" );
	deepEqual( Stem("potendo"), "pot" );
	deepEqual( Stem("potendolo"), "pot" );
	deepEqual( Stem("potentati"), "potent" );
	deepEqual( Stem("potente"), "potent" );
	deepEqual( Stem("potenti"), "potent" );
	deepEqual( Stem("potenza"), "potenz" );
	deepEqual( Stem("potenze"), "potenz" );
	deepEqual( Stem("potenziale"), "potenzial" );
	deepEqual( Stem("potenziali"), "potenzial" );
	deepEqual( Stem("potenzialità"), "potenzial" );
	deepEqual( Stem("potenziamento"), "potenz" );
	deepEqual( Stem("potenziando"), "potenz" );
	deepEqual( Stem("poter"), "poter" );
	deepEqual( Stem("poterci"), "pot" );
	deepEqual( Stem("potere"), "pot" );
	deepEqual( Stem("potergli"), "pot" );
	deepEqual( Stem("poteri"), "poter" );
	deepEqual( Stem("poterit"), "poterit" );
	deepEqual( Stem("poterla"), "pot" );
	deepEqual( Stem("poterle"), "pot" );
	deepEqual( Stem("poterli"), "pot" );
	deepEqual( Stem("poterlo"), "pot" );
	deepEqual( Stem("poterne"), "pot" );
	deepEqual( Stem("poterono"), "pot" );
	deepEqual( Stem("potersene"), "pot" );
	deepEqual( Stem("potersi"), "pot" );
	deepEqual( Stem("potervi"), "pot" );
	deepEqual( Stem("potesse"), "potess" );
	deepEqual( Stem("potesser"), "potesser" );
	deepEqual( Stem("potessero"), "pot" );
	deepEqual( Stem("potessi"), "potess" );
	deepEqual( Stem("potessimo"), "potessim" );
	deepEqual( Stem("potestà"), "potest" );
	deepEqual( Stem("poteste"), "potest" );
	deepEqual( Stem("potete"), "pot" );
	deepEqual( Stem("poteua"), "poteu" );
	deepEqual( Stem("poteva"), "pot" );
	deepEqual( Stem("potevamo"), "pot" );
	deepEqual( Stem("potevan"), "potevan" );
	deepEqual( Stem("potevano"), "pot" );
	deepEqual( Stem("potevate"), "pot" );
	deepEqual( Stem("potevi"), "pot" );
	deepEqual( Stem("potevo"), "pot" );
	deepEqual( Stem("poti"), "pot" );
	deepEqual( Stem("potrà"), "potr" );
	deepEqual( Stem("potrai"), "potra" );
	deepEqual( Stem("potranno"), "potrann" );
	deepEqual( Stem("potrebb"), "potrebb" );
	deepEqual( Stem("potrebbe"), "potrebb" );
	deepEqual( Stem("potrebber"), "potrebber" );
	deepEqual( Stem("potrebbero"), "potrebber" );
	deepEqual( Stem("potrei"), "potre" );
	deepEqual( Stem("potremmo"), "potr" );
	deepEqual( Stem("potremo"), "potrem" );
	deepEqual( Stem("potreste"), "potrest" );
	deepEqual( Stem("potresti"), "potrest" );
	deepEqual( Stem("potrete"), "potr" );
	deepEqual( Stem("potrò"), "potr" );
	deepEqual( Stem("poturo"), "potur" );
	deepEqual( Stem("potuta"), "pot" );
	deepEqual( Stem("potute"), "pot" );
	deepEqual( Stem("potuti"), "pot" );
	deepEqual( Stem("potuto"), "pot" );
	deepEqual( Stem("poueri"), "pouer" );
	deepEqual( Stem("poule"), "poul" );
	deepEqual( Stem("pover"), "pover" );
	deepEqual( Stem("povera"), "pover" );
	deepEqual( Stem("poveraccio"), "poveracc" );
	deepEqual( Stem("povere"), "pov" );
	deepEqual( Stem("poverella"), "poverell" );
	deepEqual( Stem("poverelli"), "poverell" );
	deepEqual( Stem("poveretta"), "poverett" );
	deepEqual( Stem("poverette"), "poverett" );
	deepEqual( Stem("poveretti"), "poverett" );
	deepEqual( Stem("poveretto"), "poverett" );
	deepEqual( Stem("poveri"), "pover" );
	deepEqual( Stem("poverina"), "poverin" );
	deepEqual( Stem("poverine"), "poverin" );
	deepEqual( Stem("poverini"), "poverin" );
	deepEqual( Stem("poverino"), "poverin" );
	deepEqual( Stem("poverissimi"), "poverissim" );
	deepEqual( Stem("povero"), "pover" );
	deepEqual( Stem("povertà"), "povert" );
	deepEqual( Stem("power"), "power" );
	deepEqual( Stem("powergen"), "powergen" );
	deepEqual( Stem("pozze"), "pozz" );
	deepEqual( Stem("pozzi"), "pozz" );
	deepEqual( Stem("pozzo"), "pozz" );
	deepEqual( Stem("pozzobonelli"), "pozzobonell" );
	deepEqual( Stem("pp"), "pp" );
	deepEqual( Stem("ppi"), "ppi" );
	deepEqual( Stem("pr"), "pr" );
	deepEqual( Stem("praderio"), "prader" );
	deepEqual( Stem("praedicti"), "praedict" );
	deepEqual( Stem("praga"), "prag" );
	deepEqual( Stem("pragati"), "prag" );
	deepEqual( Stem("pragmatici"), "pragmat" );
	deepEqual( Stem("pralboino"), "pralboin" );
	deepEqual( Stem("prammatica"), "prammat" );
	deepEqual( Stem("pranab"), "pranab" );
	deepEqual( Stem("prandi"), "prand" );
	deepEqual( Stem("prandini"), "prandin" );
	deepEqual( Stem("pranzare"), "pranz" );
	deepEqual( Stem("pranzi"), "pranz" );
	deepEqual( Stem("pranzo"), "pranz" );
	deepEqual( Stem("prassede"), "prassed" );
	deepEqual( Stem("prassi"), "prass" );
	deepEqual( Stem("prati"), "prat" );
	deepEqual( Stem("pratica"), "pratic" );
	deepEqual( Stem("praticabile"), "pratic" );
	deepEqual( Stem("praticamente"), "pratic" );
	deepEqual( Stem("praticare"), "pratic" );
	deepEqual( Stem("praticate"), "pratic" );
	deepEqual( Stem("praticato"), "pratic" );
	deepEqual( Stem("pratiche"), "pratic" );
	deepEqual( Stem("pratichi"), "pratic" );
	deepEqual( Stem("pratico"), "pratic" );
	deepEqual( Stem("praticò"), "pratic" );
	deepEqual( Stem("prato"), "prat" );
	deepEqual( Stem("prava"), "prav" );
	deepEqual( Stem("prc"), "prc" );
	deepEqual( Stem("prd"), "prd" );
	deepEqual( Stem("pre"), "pre" );
	deepEqual( Stem("preamboli"), "preambol" );
	deepEqual( Stem("preannuncia"), "preannunc" );
	deepEqual( Stem("preannunciano"), "preannunc" );
	deepEqual( Stem("preannunciata"), "preannunc" );
	deepEqual( Stem("preannunciate"), "preannunc" );
	deepEqual( Stem("preannunciato"), "preannunc" );
	deepEqual( Stem("prec"), "prec" );
	deepEqual( Stem("precaria"), "precar" );
	deepEqual( Stem("precarietà"), "precariet" );
	deepEqual( Stem("precauzionale"), "precauzional" );
	deepEqual( Stem("precauzionali"), "precauzional" );
	deepEqual( Stem("precauzione"), "precauzion" );
	deepEqual( Stem("precauzioni"), "precauzion" );
	deepEqual( Stem("precede"), "preced" );
	deepEqual( Stem("precedendo"), "preced" );
	deepEqual( Stem("precedendolo"), "preced" );
	deepEqual( Stem("precedente"), "precedent" );
	deepEqual( Stem("precedentemente"), "precedent" );
	deepEqual( Stem("precedenti"), "precedent" );
	deepEqual( Stem("precedenza"), "precedent" );
	deepEqual( Stem("precedere"), "preced" );
	deepEqual( Stem("precedette"), "precedett" );
	deepEqual( Stem("precedeuto"), "preced" );
	deepEqual( Stem("precedeva"), "preced" );
	deepEqual( Stem("preceduta"), "preced" );
	deepEqual( Stem("precedute"), "preced" );
	deepEqual( Stem("preceduti"), "preced" );
	deepEqual( Stem("preceduto"), "preced" );
	deepEqual( Stem("precetti"), "precett" );
	deepEqual( Stem("precetto"), "precett" );
	deepEqual( Stem("preci"), "prec" );
	deepEqual( Stem("preciasto"), "preciast" );
	deepEqual( Stem("precipita"), "precip" );
	deepEqual( Stem("precipitando"), "precipit" );
	deepEqual( Stem("precipitare"), "precipit" );
	deepEqual( Stem("precipitarono"), "precipit" );
	deepEqual( Stem("precipitata"), "precipit" );
	deepEqual( Stem("precipitate"), "precipit" );
	deepEqual( Stem("precipitati"), "precipit" );
	deepEqual( Stem("precipitato"), "precipit" );
	deepEqual( Stem("precipitazione"), "precipit" );
	deepEqual( Stem("precipitazioni"), "precipit" );
	deepEqual( Stem("precipitò"), "precipit" );
	deepEqual( Stem("precipitosa"), "precipit" );
	deepEqual( Stem("precipitosamente"), "precipit" );
	deepEqual( Stem("precipitoso"), "precipit" );
	deepEqual( Stem("precipizi"), "precipiz" );
	deepEqual( Stem("precipizio"), "precipiz" );
	deepEqual( Stem("precisa"), "precis" );
	deepEqual( Stem("precisamente"), "precis" );
	deepEqual( Stem("precisando"), "precis" );
	deepEqual( Stem("precisare"), "precis" );
	deepEqual( Stem("precisato"), "precis" );
	deepEqual( Stem("precisazione"), "precis" );
	deepEqual( Stem("precisazioni"), "precis" );
	deepEqual( Stem("precise"), "precis" );
	deepEqual( Stem("preciserò"), "precis" );
	deepEqual( Stem("precisione"), "precision" );
	deepEqual( Stem("preciso"), "precis" );
	deepEqual( Stem("precistato"), "precist" );
	deepEqual( Stem("preclusioni"), "preclusion" );
	deepEqual( Stem("precocemente"), "precoc" );
	deepEqual( Stem("preconcette"), "preconcett" );
	deepEqual( Stem("preconcetti"), "preconcett" );
	deepEqual( Stem("precongresso"), "precongress" );
	deepEqual( Stem("precongressuale"), "precongressual" );
	deepEqual( Stem("precorrendo"), "precorr" );
	deepEqual( Stem("precorreva"), "precorr" );
	deepEqual( Stem("precorse"), "precors" );
	deepEqual( Stem("preda"), "pred" );
	deepEqual( Stem("predator"), "predator" );
	deepEqual( Stem("predazzo"), "predazz" );
	deepEqual( Stem("prede"), "pred" );
	deepEqual( Stem("predecessore"), "predecessor" );
	deepEqual( Stem("predecessori"), "predecessor" );
	deepEqual( Stem("predellino"), "predellin" );
	deepEqual( Stem("predetta"), "predett" );
	deepEqual( Stem("predica"), "predic" );
	deepEqual( Stem("predicando"), "predic" );
	deepEqual( Stem("predicano"), "predic" );
	deepEqual( Stem("predicare"), "predic" );
	deepEqual( Stem("predicargli"), "predic" );
	deepEqual( Stem("predicate"), "predic" );
	deepEqual( Stem("predicato"), "predic" );
	deepEqual( Stem("predicatore"), "predic" );
	deepEqual( Stem("predicatrice"), "predic" );
	deepEqual( Stem("predicava"), "predic" );
	deepEqual( Stem("prediche"), "predic" );
	deepEqual( Stem("predicherà"), "predic" );
	deepEqual( Stem("predieri"), "predier" );
	deepEqual( Stem("prediletta"), "predilett" );
	deepEqual( Stem("prediletto"), "predilett" );
	deepEqual( Stem("predisponendo"), "predispon" );
	deepEqual( Stem("predisposta"), "predispost" );
	deepEqual( Stem("predisposto"), "predispost" );
	deepEqual( Stem("predizione"), "predizion" );
	deepEqual( Stem("predizioni"), "predizion" );
	deepEqual( Stem("predominante"), "predomin" );
	deepEqual( Stem("predominanti"), "predomin" );
	deepEqual( Stem("predominare"), "predomin" );
	deepEqual( Stem("predominati"), "predomin" );
	deepEqual( Stem("predominato"), "predomin" );
	deepEqual( Stem("predominava"), "predomin" );
	deepEqual( Stem("predomini"), "predomin" );
	deepEqual( Stem("preelettorale"), "preelettoral" );
	deepEqual( Stem("preferenza"), "preferent" );
	deepEqual( Stem("preferenze"), "preferent" );
	deepEqual( Stem("preferibile"), "prefer" );
	deepEqual( Stem("preferisce"), "prefer" );
	deepEqual( Stem("preferita"), "prefer" );
	deepEqual( Stem("preferito"), "prefer" );
	deepEqual( Stem("preferiva"), "prefer" );
	deepEqual( Stem("prefetto"), "prefett" );
	deepEqual( Stem("prefetture"), "prefettur" );
	deepEqual( Stem("prefigge"), "prefigg" );
	deepEqual( Stem("prefigura"), "prefigur" );
	deepEqual( Stem("prefigurata"), "prefigur" );
	deepEqual( Stem("prefissate"), "prefiss" );
	deepEqual( Stem("prefisso"), "prefiss" );
	deepEqual( Stem("prega"), "preg" );
	deepEqual( Stem("pregai"), "prega" );
	deepEqual( Stem("pregando"), "preg" );
	deepEqual( Stem("pregano"), "preg" );
	deepEqual( Stem("pregar"), "preg" );
	deepEqual( Stem("pregare"), "preg" );
	deepEqual( Stem("pregarla"), "preg" );
	deepEqual( Stem("pregarlo"), "preg" );
	deepEqual( Stem("pregassi"), "preg" );
	deepEqual( Stem("pregata"), "preg" );
	deepEqual( Stem("pregate"), "preg" );
	deepEqual( Stem("pregatelo"), "pregatel" );
	deepEqual( Stem("pregati"), "preg" );
	deepEqual( Stem("pregato"), "preg" );
	deepEqual( Stem("pregava"), "preg" );
	deepEqual( Stem("pregevole"), "pregevol" );
	deepEqual( Stem("pregherei"), "preg" );
	deepEqual( Stem("pregheremo"), "preg" );
	deepEqual( Stem("pregherete"), "preg" );
	deepEqual( Stem("pregherò"), "preg" );
	deepEqual( Stem("preghi"), "preg" );
	deepEqual( Stem("preghiamo"), "preg" );
	deepEqual( Stem("preghiera"), "preghier" );
	deepEqual( Stem("preghiere"), "preg" );
	deepEqual( Stem("preghin"), "preghin" );
	deepEqual( Stem("preghino"), "preghin" );
	deepEqual( Stem("pregiudicare"), "pregiudic" );
	deepEqual( Stem("pregiudicati"), "pregiudic" );
	deepEqual( Stem("pregiudicato"), "pregiudic" );
	deepEqual( Stem("pregiudizi"), "pregiudiz" );
	deepEqual( Stem("pregiudiziale"), "pregiudizial" );
	deepEqual( Stem("pregiudiziali"), "pregiudizial" );
	deepEqual( Stem("pregiudizio"), "pregiudiz" );
	deepEqual( Stem("pregni"), "pregn" );
	deepEqual( Stem("prego"), "preg" );
	deepEqual( Stem("pregò"), "preg" );
	deepEqual( Stem("pregressi"), "pregress" );
	deepEqual( Stem("preintesa"), "preintes" );
	deepEqual( Stem("prelati"), "prel" );
	deepEqual( Stem("prelato"), "prel" );
	deepEqual( Stem("prelevare"), "prelev" );
	deepEqual( Stem("prelevarla"), "prelev" );
	deepEqual( Stem("prelevata"), "prelev" );
	deepEqual( Stem("prelevato"), "prelev" );
	deepEqual( Stem("prelievi"), "prel" );
	deepEqual( Stem("prelievo"), "prel" );
	deepEqual( Stem("preliminare"), "prelimin" );
	deepEqual( Stem("preliminari"), "preliminar" );
	deepEqual( Stem("preliminarmente"), "preliminar" );
	deepEqual( Stem("premafin"), "premafin" );
	deepEqual( Stem("premano"), "prem" );
	deepEqual( Stem("preme"), "prem" );
	deepEqual( Stem("premeditato"), "premedit" );
	deepEqual( Stem("prementi"), "prement" );
	deepEqual( Stem("premere"), "prem" );
	deepEqual( Stem("premessa"), "premess" );
	deepEqual( Stem("premesse"), "premess" );
	deepEqual( Stem("premesso"), "premess" );
	deepEqual( Stem("premette"), "premett" );
	deepEqual( Stem("premettere"), "premett" );
	deepEqual( Stem("premeva"), "prem" );
	deepEqual( Stem("premevano"), "prem" );
	deepEqual( Stem("premi"), "prem" );
	deepEqual( Stem("premia"), "prem" );
	deepEqual( Stem("premier"), "premier" );
	deepEqual( Stem("preminente"), "preminent" );
	deepEqual( Stem("preminenza"), "preminent" );
	deepEqual( Stem("premio"), "prem" );
	deepEqual( Stem("premon"), "premon" );
	deepEqual( Stem("premuda"), "premud" );
	deepEqual( Stem("premunire"), "premun" );
	deepEqual( Stem("premuniti"), "premun" );
	deepEqual( Stem("premura"), "premur" );
	deepEqual( Stem("premure"), "premur" );
	deepEqual( Stem("premurosa"), "premur" );
	deepEqual( Stem("premurosamente"), "premur" );
	deepEqual( Stem("premurose"), "premur" );
	deepEqual( Stem("premurosi"), "premur" );
	deepEqual( Stem("premuroso"), "premur" );
	deepEqual( Stem("prencipi"), "prencip" );
	deepEqual( Stem("prenda"), "prend" );
	deepEqual( Stem("prendano"), "prend" );
	deepEqual( Stem("prende"), "prend" );
	deepEqual( Stem("prendendo"), "prend" );
	deepEqual( Stem("prendendogli"), "prend" );
	deepEqual( Stem("prendendola"), "prend" );
	deepEqual( Stem("prendendole"), "prend" );
	deepEqual( Stem("prendendolo"), "prend" );
	deepEqual( Stem("prendendone"), "prend" );
	deepEqual( Stem("prendendosela"), "prendendosel" );
	deepEqual( Stem("prender"), "prender" );
	deepEqual( Stem("prenderà"), "prend" );
	deepEqual( Stem("prenderanno"), "prend" );
	deepEqual( Stem("prendere"), "prend" );
	deepEqual( Stem("prenderemo"), "prend" );
	deepEqual( Stem("prendergli"), "prend" );
	deepEqual( Stem("prenderla"), "prend" );
	deepEqual( Stem("prenderle"), "prend" );
	deepEqual( Stem("prenderli"), "prend" );
	deepEqual( Stem("prenderlo"), "prend" );
	deepEqual( Stem("prendermelo"), "prend" );
	deepEqual( Stem("prendermi"), "prend" );
	deepEqual( Stem("prenderne"), "prend" );
	deepEqual( Stem("prenderò"), "prend" );
	deepEqual( Stem("prendersela"), "prendersel" );
	deepEqual( Stem("prenderselo"), "prendersel" );
	deepEqual( Stem("prendersene"), "prend" );
	deepEqual( Stem("prendersi"), "prend" );
	deepEqual( Stem("prendervi"), "prend" );
	deepEqual( Stem("prendesse"), "prendess" );
	deepEqual( Stem("prendessero"), "prend" );
	deepEqual( Stem("prendete"), "prend" );
	deepEqual( Stem("prendetele"), "prendetel" );
	deepEqual( Stem("prendeva"), "prend" );
	deepEqual( Stem("prendevan"), "prendevan" );
	deepEqual( Stem("prendevano"), "prend" );
	deepEqual( Stem("prendevo"), "prend" );
	deepEqual( Stem("prendi"), "prend" );
	deepEqual( Stem("prendiamo"), "prend" );
	deepEqual( Stem("prendiate"), "prend" );
	deepEqual( Stem("prenditore"), "prenditor" );
	deepEqual( Stem("prendo"), "prend" );
	deepEqual( Stem("prendon"), "prendon" );
	deepEqual( Stem("prendono"), "prend" );
	deepEqual( Stem("prenotarsi"), "prenot" );
	deepEqual( Stem("prenotazione"), "prenot" );
	deepEqual( Stem("prenotazioni"), "prenot" );
	deepEqual( Stem("preoccupa"), "preoccup" );
	deepEqual( Stem("preoccupante"), "preoccup" );
	deepEqual( Stem("preoccupare"), "preoccup" );
	deepEqual( Stem("preoccuparsi"), "preoccup" );
	deepEqual( Stem("preoccupata"), "preoccup" );
	deepEqual( Stem("preoccupatevi"), "preoccupat" );
	deepEqual( Stem("preoccupati"), "preoccup" );
	deepEqual( Stem("preoccupatissimo"), "preoccupatissim" );
	deepEqual( Stem("preoccupato"), "preoccup" );
	deepEqual( Stem("preoccupazione"), "preoccup" );
	deepEqual( Stem("preoccupazionè"), "preoccupazion" );
	deepEqual( Stem("preoccupazioni"), "preoccup" );
	deepEqual( Stem("prepara"), "prepar" );
	deepEqual( Stem("preparando"), "prepar" );
	deepEqual( Stem("preparano"), "prepar" );
	deepEqual( Stem("preparar"), "prepar" );
	deepEqual( Stem("preparare"), "prepar" );
	deepEqual( Stem("prepararne"), "prepar" );
	deepEqual( Stem("prepararsi"), "prepar" );
	deepEqual( Stem("prepararvi"), "prepar" );
	deepEqual( Stem("preparasse"), "prepar" );
	deepEqual( Stem("preparata"), "prepar" );
	deepEqual( Stem("preparate"), "prepar" );
	deepEqual( Stem("preparati"), "prepar" );
	deepEqual( Stem("preparativi"), "prepar" );
	deepEqual( Stem("preparato"), "prepar" );
	deepEqual( Stem("preparatorie"), "preparator" );
	deepEqual( Stem("preparazione"), "prepar" );
	deepEqual( Stem("prepensinamenti"), "prepensin" );
	deepEqual( Stem("prepensionamenti"), "prepension" );
	deepEqual( Stem("prepensionamento"), "prepension" );
	deepEqual( Stem("preposte"), "prepost" );
	deepEqual( Stem("prepotente"), "prepotent" );
	deepEqual( Stem("prepotenti"), "prepotent" );
	deepEqual( Stem("prepotenza"), "prepotent" );
	deepEqual( Stem("prepotenze"), "prepotent" );
	deepEqual( Stem("prerogativa"), "prerog" );
	deepEqual( Stem("presa"), "pres" );
	deepEqual( Stem("presagire"), "presag" );
	deepEqual( Stem("prescelta"), "prescelt" );
	deepEqual( Stem("prescelto"), "prescelt" );
	deepEqual( Stem("prescinde"), "prescind" );
	deepEqual( Stem("prescindendo"), "prescind" );
	deepEqual( Stem("prescindere"), "prescind" );
	deepEqual( Stem("prescrisse"), "prescriss" );
	deepEqual( Stem("prescritta"), "prescritt" );
	deepEqual( Stem("prescritte"), "prescritt" );
	deepEqual( Stem("prescritti"), "prescritt" );
	deepEqual( Stem("prescritto"), "prescritt" );
	deepEqual( Stem("prescrive"), "prescriv" );
	deepEqual( Stem("prescriver"), "prescriver" );
	deepEqual( Stem("prescriverò"), "prescriv" );
	deepEqual( Stem("prescriveva"), "prescriv" );
	deepEqual( Stem("prescrivono"), "prescriv" );
	deepEqual( Stem("prescrizione"), "prescrizion" );
	deepEqual( Stem("prescrizioni"), "prescrizion" );
	deepEqual( Stem("prese"), "pres" );
	deepEqual( Stem("presenta"), "present" );
	deepEqual( Stem("presentando"), "present" );
	deepEqual( Stem("presentandosegli"), "presentandosegl" );
	deepEqual( Stem("presentandosi"), "present" );
	deepEqual( Stem("presentano"), "present" );
	deepEqual( Stem("presentar"), "present" );
	deepEqual( Stem("presentarci"), "present" );
	deepEqual( Stem("presentare"), "present" );
	deepEqual( Stem("presentarla"), "present" );
	deepEqual( Stem("presentarlo"), "present" );
	deepEqual( Stem("presentaron"), "presentaron" );
	deepEqual( Stem("presentarsi"), "present" );
	deepEqual( Stem("presentasse"), "present" );
	deepEqual( Stem("presentassero"), "present" );
	deepEqual( Stem("presentassi"), "present" );
	deepEqual( Stem("presentata"), "present" );
	deepEqual( Stem("presentate"), "present" );
	deepEqual( Stem("presentati"), "present" );
	deepEqual( Stem("presentatigli"), "presentatigl" );
	deepEqual( Stem("presentato"), "present" );
	deepEqual( Stem("presentatore"), "present" );
	deepEqual( Stem("presentatori"), "present" );
	deepEqual( Stem("presentatrice"), "present" );
	deepEqual( Stem("presentava"), "present" );
	deepEqual( Stem("presentavano"), "present" );
	deepEqual( Stem("presentazione"), "present" );
	deepEqual( Stem("presente"), "present" );
	deepEqual( Stem("presenterà"), "present" );
	deepEqual( Stem("presenteranno"), "present" );
	deepEqual( Stem("presenteremo"), "present" );
	deepEqual( Stem("presentes"), "presentes" );
	deepEqual( Stem("presenti"), "present" );
	deepEqual( Stem("presentiamo"), "present" );
	deepEqual( Stem("presentimenti"), "present" );
	deepEqual( Stem("presentimento"), "present" );
	deepEqual( Stem("presentino"), "presentin" );
	deepEqual( Stem("presentire"), "present" );
	deepEqual( Stem("presentò"), "present" );
	deepEqual( Stem("presentuoso"), "presentu" );
	deepEqual( Stem("presenza"), "presenz" );
	deepEqual( Stem("presenze"), "presenz" );
	deepEqual( Stem("preser"), "preser" );
	deepEqual( Stem("presero"), "preser" );
	deepEqual( Stem("preservar"), "preserv" );
	deepEqual( Stem("preservata"), "preserv" );
	deepEqual( Stem("preservato"), "preserv" );
	deepEqual( Stem("preservava"), "preserv" );
	deepEqual( Stem("preservi"), "pres" );
	deepEqual( Stem("presi"), "pres" );
	deepEqual( Stem("preside"), "presid" );
	deepEqual( Stem("presidente"), "president" );
	deepEqual( Stem("presidenti"), "president" );
	deepEqual( Stem("presidenza"), "president" );
	deepEqual( Stem("presidenziale"), "presidenzial" );
	deepEqual( Stem("presidenziali"), "presidenzial" );
	deepEqual( Stem("presidetne"), "presidetn" );
	deepEqual( Stem("presidi"), "presid" );
	deepEqual( Stem("presiedono"), "presied" );
	deepEqual( Stem("presieduta"), "presied" );
	deepEqual( Stem("presieduto"), "presied" );
	deepEqual( Stem("preso"), "pres" );
	deepEqual( Stem("presolo"), "presol" );
	deepEqual( Stem("presontuosa"), "presontu" );
	deepEqual( Stem("press"), "press" );
	deepEqual( Stem("pressante"), "pressant" );
	deepEqual( Stem("pressanti"), "pressant" );
	deepEqual( Stem("pressappochismo"), "pressappoc" );
	deepEqual( Stem("pressava"), "press" );
	deepEqual( Stem("pressi"), "press" );
	deepEqual( Stem("pressing"), "pressing" );
	deepEqual( Stem("pressione"), "pression" );
	deepEqual( Stem("pressioni"), "pression" );
	deepEqual( Stem("presso"), "press" );
	deepEqual( Stem("pressocchè"), "pressocc" );
	deepEqual( Stem("prestando"), "prest" );
	deepEqual( Stem("prestano"), "prest" );
	deepEqual( Stem("prestar"), "prest" );
	deepEqual( Stem("prestare"), "prest" );
	deepEqual( Stem("prestargli"), "prest" );
	deepEqual( Stem("prestasse"), "prest" );
	deepEqual( Stem("prestata"), "prest" );
	deepEqual( Stem("prestati"), "prest" );
	deepEqual( Stem("prestato"), "prest" );
	deepEqual( Stem("prestava"), "prest" );
	deepEqual( Stem("prestavano"), "prest" );
	deepEqual( Stem("prestazione"), "prestazion" );
	deepEqual( Stem("prestazioni"), "prestazion" );
	deepEqual( Stem("prestesto"), "prestest" );
	deepEqual( Stem("prestigio"), "prestig" );
	deepEqual( Stem("prestigioso"), "prestig" );
	deepEqual( Stem("prestin"), "prestin" );
	deepEqual( Stem("prestissimo"), "prestissim" );
	deepEqual( Stem("prestiti"), "prest" );
	deepEqual( Stem("prestito"), "prest" );
	deepEqual( Stem("presto"), "prest" );
	deepEqual( Stem("preston"), "preston" );
	deepEqual( Stem("presumere"), "presum" );
	deepEqual( Stem("presumibilmente"), "presumibil" );
	deepEqual( Stem("presumono"), "presum" );
	deepEqual( Stem("presunta"), "presunt" );
	deepEqual( Stem("presunte"), "presunt" );
	deepEqual( Stem("presunti"), "presunt" );
	deepEqual( Stem("presunto"), "presunt" );
	deepEqual( Stem("presunzione"), "presunzion" );
	deepEqual( Stem("presupposti"), "presuppost" );
	deepEqual( Stem("presupposto"), "presuppost" );
	deepEqual( Stem("presutti"), "presutt" );
	deepEqual( Stem("prete"), "pret" );
	deepEqual( Stem("pretende"), "pret" );
	deepEqual( Stem("pretender"), "pretender" );
	deepEqual( Stem("pretendere"), "pretend" );
	deepEqual( Stem("pretendesse"), "pretendess" );
	deepEqual( Stem("pretendete"), "pretend" );
	deepEqual( Stem("pretendeva"), "pretend" );
	deepEqual( Stem("pretendevano"), "pretend" );
	deepEqual( Stem("pretendi"), "pret" );
	deepEqual( Stem("pretendiam"), "pretendiam" );
	deepEqual( Stem("pretendiamo"), "pretend" );
	deepEqual( Stem("pretendo"), "pret" );
	deepEqual( Stem("pretendono"), "pretend" );
	deepEqual( Stem("pretensione"), "pretension" );
	deepEqual( Stem("pretensioni"), "pretension" );
	deepEqual( Stem("pretesa"), "pretes" );
	deepEqual( Stem("preteso"), "pretes" );
	deepEqual( Stem("pretesti"), "pretest" );
	deepEqual( Stem("pretesto"), "pretest" );
	deepEqual( Stem("preti"), "pret" );
	deepEqual( Stem("pretore"), "pretor" );
	deepEqual( Stem("pretoria"), "pretor" );
	deepEqual( Stem("pretoriana"), "pretorian" );
	deepEqual( Stem("pretta"), "prett" );
	deepEqual( Stem("pretto"), "prett" );
	deepEqual( Stem("preussenelektra"), "preussenelektr" );
	deepEqual( Stem("prevalente"), "prevalent" );
	deepEqual( Stem("prevalentemente"), "prevalent" );
	deepEqual( Stem("prevalenti"), "prevalent" );
	deepEqual( Stem("prevalenza"), "prevalent" );
	deepEqual( Stem("prevalere"), "preval" );
	deepEqual( Stem("prevaleva"), "preval" );
	deepEqual( Stem("prevalga"), "prevalg" );
	deepEqual( Stem("prevalgono"), "prevalg" );
	deepEqual( Stem("prevalsa"), "prevals" );
	deepEqual( Stem("prevalse"), "prevals" );
	deepEqual( Stem("prevalso"), "prevals" );
	deepEqual( Stem("prevaricante"), "prevaric" );
	deepEqual( Stem("prevaricazione"), "prevar" );
	deepEqual( Stem("preveda"), "preved" );
	deepEqual( Stem("prevede"), "preved" );
	deepEqual( Stem("preveder"), "preveder" );
	deepEqual( Stem("prevederà"), "preved" );
	deepEqual( Stem("prevedere"), "preved" );
	deepEqual( Stem("prevederebbe"), "preved" );
	deepEqual( Stem("prevedeva"), "preved" );
	deepEqual( Stem("prevedevano"), "preved" );
	deepEqual( Stem("prevediamo"), "preved" );
	deepEqual( Stem("prevedibile"), "preved" );
	deepEqual( Stem("prevedibili"), "preved" );
	deepEqual( Stem("prevedo"), "preved" );
	deepEqual( Stem("prevedono"), "preved" );
	deepEqual( Stem("prevenir"), "preven" );
	deepEqual( Stem("prevenire"), "preven" );
	deepEqual( Stem("prevenirle"), "preven" );
	deepEqual( Stem("prevenne"), "prevenn" );
	deepEqual( Stem("preventiva"), "prevent" );
	deepEqual( Stem("preventivo"), "prevent" );
	deepEqual( Stem("prevenuto"), "preven" );
	deepEqual( Stem("prevenzione"), "prevenzion" );
	deepEqual( Stem("previdente"), "prevident" );
	deepEqual( Stem("previdenza"), "prevident" );
	deepEqual( Stem("previdenzà"), "previdenz" );
	deepEqual( Stem("previdenze"), "prevident" );
	deepEqual( Stem("previdenziale"), "previdenzial" );
	deepEqual( Stem("previdenziali"), "previdenzial" );
	deepEqual( Stem("previsione"), "prevision" );
	deepEqual( Stem("previsioni"), "prevision" );
	deepEqual( Stem("prevista"), "previst" );
	deepEqual( Stem("previste"), "previst" );
	deepEqual( Stem("previsti"), "previst" );
	deepEqual( Stem("previsto"), "previst" );
	deepEqual( Stem("previti"), "prev" );
	deepEqual( Stem("prevot"), "prevot" );
	deepEqual( Stem("preziosa"), "prezios" );
	deepEqual( Stem("preziose"), "prezios" );
	deepEqual( Stem("preziosi"), "prezios" );
	deepEqual( Stem("preziosissimi"), "preziosissim" );
	deepEqual( Stem("prezioso"), "prezios" );
	deepEqual( Stem("prezzi"), "prezz" );
	deepEqual( Stem("prezzo"), "prezz" );
	deepEqual( Stem("pri"), "pri" );
	deepEqual( Stem("prigione"), "prigion" );
	deepEqual( Stem("prigioni"), "prigion" );
	deepEqual( Stem("prigionia"), "prigion" );
	deepEqual( Stem("prigioniera"), "prigionier" );
	deepEqual( Stem("prigioniere"), "prigion" );
	deepEqual( Stem("prigionieri"), "prigionier" );
	deepEqual( Stem("prigioniero"), "prigionier" );
	deepEqual( Stem("prim"), "prim" );
	deepEqual( Stem("prima"), "prim" );
	deepEqual( Stem("primaluna"), "primalun" );
	deepEqual( Stem("primari"), "primar" );
	deepEqual( Stem("primaria"), "primar" );
	deepEqual( Stem("primarie"), "primar" );
	deepEqual( Stem("primario"), "primar" );
	deepEqual( Stem("primary"), "primary" );
	deepEqual( Stem("primati"), "prim" );
	deepEqual( Stem("primaticce"), "primaticc" );
	deepEqual( Stem("primatista"), "primat" );
	deepEqual( Stem("primato"), "prim" );
	deepEqual( Stem("primavera"), "primaver" );
	deepEqual( Stem("primaverile"), "primaveril" );
	deepEqual( Stem("prime"), "prim" );
	deepEqual( Stem("primebond"), "primebond" );
	deepEqual( Stem("primecapital"), "primecapital" );
	deepEqual( Stem("primecash"), "primecash" );
	deepEqual( Stem("primeclub"), "primeclub" );
	deepEqual( Stem("primeggiare"), "primegg" );
	deepEqual( Stem("primerend"), "primerend" );
	deepEqual( Stem("primi"), "prim" );
	deepEqual( Stem("primissimi"), "primissim" );
	deepEqual( Stem("primitiva"), "primit" );
	deepEqual( Stem("primitivi"), "primit" );
	deepEqual( Stem("primo"), "prim" );
	deepEqual( Stem("primogenito"), "primogen" );
	deepEqual( Stem("primordine"), "primordin" );
	deepEqual( Stem("prina"), "prin" );
	deepEqual( Stem("principale"), "principal" );
	deepEqual( Stem("principali"), "principal" );
	deepEqual( Stem("principalissimo"), "principalissim" );
	deepEqual( Stem("principalmente"), "principal" );
	deepEqual( Stem("principato"), "princip" );
	deepEqual( Stem("principe"), "princip" );
	deepEqual( Stem("principessa"), "principess" );
	deepEqual( Stem("principi"), "princip" );
	deepEqual( Stem("princìpi"), "princìp" );
	deepEqual( Stem("principia"), "princip" );
	deepEqual( Stem("principiamo"), "princip" );
	deepEqual( Stem("principian"), "principian" );
	deepEqual( Stem("principiano"), "princip" );
	deepEqual( Stem("principiare"), "princip" );
	deepEqual( Stem("principiarono"), "princip" );
	deepEqual( Stem("principiata"), "princip" );
	deepEqual( Stem("principiato"), "princip" );
	deepEqual( Stem("principiava"), "princip" );
	deepEqual( Stem("principiavano"), "princip" );
	deepEqual( Stem("principiis"), "principiis" );
	deepEqual( Stem("principino"), "principin" );
	deepEqual( Stem("principio"), "princip" );
	deepEqual( Stem("principiò"), "princip" );
	deepEqual( Stem("principo"), "princip" );
	deepEqual( Stem("prioncipali"), "prioncipal" );
	deepEqual( Stem("prioprio"), "priopr" );
	deepEqual( Stem("priorache"), "priorac" );
	deepEqual( Stem("priori"), "prior" );
	deepEqual( Stem("priorità"), "priorit" );
	deepEqual( Stem("prioritariamente"), "prioritar" );
	deepEqual( Stem("prioritario"), "prioritar" );
	deepEqual( Stem("priv"), "priv" );
	deepEqual( Stem("priva"), "priv" );
	deepEqual( Stem("privacy"), "privacy" );
	deepEqual( Stem("privalova"), "privalov" );
	deepEqual( Stem("privare"), "priv" );
	deepEqual( Stem("privarlo"), "priv" );
	deepEqual( Stem("privarsene"), "priv" );
	deepEqual( Stem("privata"), "priv" );
	deepEqual( Stem("private"), "priv" );
	deepEqual( Stem("privati"), "priv" );
	deepEqual( Stem("privatisticò"), "privatistic" );
	deepEqual( Stem("privatizzare"), "privatizz" );
	deepEqual( Stem("privatizzata"), "privatizz" );
	deepEqual( Stem("privatizzato"), "privatizz" );
	deepEqual( Stem("privatizzaz"), "privatizzaz" );
	deepEqual( Stem("privatizzazione"), "privatizz" );
	deepEqual( Stem("privatizzazioni"), "privatizz" );
	deepEqual( Stem("privato"), "priv" );
	deepEqual( Stem("privazione"), "privazion" );
	deepEqual( Stem("privazioni"), "privazion" );
	deepEqual( Stem("privi"), "priv" );
	deepEqual( Stem("privilegi"), "privileg" );
	deepEqual( Stem("privilegia"), "privileg" );
	deepEqual( Stem("privilegiare"), "privileg" );
	deepEqual( Stem("privilegiata"), "privileg" );
	deepEqual( Stem("privilegiati"), "privileg" );
	deepEqual( Stem("privilegiato"), "privileg" );
	deepEqual( Stem("privilegio"), "privileg" );
	deepEqual( Stem("privo"), "priv" );
	deepEqual( Stem("pro"), "pro" );
	deepEqual( Stem("probabile"), "probabil" );
	deepEqual( Stem("probabili"), "probabil" );
	deepEqual( Stem("probabilità"), "probabil" );
	deepEqual( Stem("probabilmente"), "probabil" );
	deepEqual( Stem("probema"), "probem" );
	deepEqual( Stem("problema"), "problem" );
	deepEqual( Stem("problematica"), "problemat" );
	deepEqual( Stem("problemi"), "problem" );
	deepEqual( Stem("procacciar"), "procacc" );
	deepEqual( Stem("procacciargli"), "procacc" );
	deepEqual( Stem("procacciarsi"), "procacc" );
	deepEqual( Stem("proceda"), "proced" );
	deepEqual( Stem("proceddure"), "proceddur" );
	deepEqual( Stem("procede"), "proced" );
	deepEqual( Stem("procedendo"), "proced" );
	deepEqual( Stem("procederà"), "proced" );
	deepEqual( Stem("procedere"), "proced" );
	deepEqual( Stem("procediemnto"), "procediemnt" );
	deepEqual( Stem("procedimenti"), "proced" );
	deepEqual( Stem("procedimento"), "proced" );
	deepEqual( Stem("procedono"), "proced" );
	deepEqual( Stem("procedura"), "procedur" );
	deepEqual( Stem("procedurale"), "procedural" );
	deepEqual( Stem("procedure"), "procedur" );
	deepEqual( Stem("proceduta"), "proced" );
	deepEqual( Stem("proceduto"), "proced" );
	deepEqual( Stem("procellosa"), "procell" );
	deepEqual( Stem("procelloso"), "procell" );
	deepEqual( Stem("processando"), "process" );
	deepEqual( Stem("processate"), "process" );
	deepEqual( Stem("processati"), "process" );
	deepEqual( Stem("processato"), "process" );
	deepEqual( Stem("processi"), "process" );
	deepEqual( Stem("processione"), "procession" );
	deepEqual( Stem("processioni"), "procession" );
	deepEqual( Stem("processo"), "process" );
	deepEqual( Stem("processuale"), "processual" );
	deepEqual( Stem("processuali"), "processual" );
	deepEqual( Stem("procinto"), "procint" );
	deepEqual( Stem("proclamata"), "proclam" );
	deepEqual( Stem("proclamati"), "proclam" );
	deepEqual( Stem("proclamato"), "proclam" );
	deepEqual( Stem("procrazione"), "procrazion" );
	deepEqual( Stem("procrear"), "procr" );
	deepEqual( Stem("procura"), "procur" );
	deepEqual( Stem("procurando"), "procur" );
	deepEqual( Stem("procurar"), "procur" );
	deepEqual( Stem("procurare"), "procur" );
	deepEqual( Stem("procurarsi"), "procur" );
	deepEqual( Stem("procurarti"), "procur" );
	deepEqual( Stem("procuraste"), "procurast" );
	deepEqual( Stem("procurato"), "procur" );
	deepEqual( Stem("procuratore"), "procur" );
	deepEqual( Stem("procurava"), "procur" );
	deepEqual( Stem("procuravano"), "procur" );
	deepEqual( Stem("procure"), "procur" );
	deepEqual( Stem("procurerò"), "procur" );
	deepEqual( Stem("procurò"), "procur" );
	deepEqual( Stem("prod"), "prod" );
	deepEqual( Stem("proda"), "prod" );
	deepEqual( Stem("prode"), "prod" );
	deepEqual( Stem("prodezza"), "prodezz" );
	deepEqual( Stem("prodezze"), "prodezz" );
	deepEqual( Stem("prodi"), "prod" );
	deepEqual( Stem("prodì"), "prod" );
	deepEqual( Stem("prodigalità"), "prodigal" );
	deepEqual( Stem("prodigate"), "prodig" );
	deepEqual( Stem("prodige"), "prodig" );
	deepEqual( Stem("prodigi"), "prodig" );
	deepEqual( Stem("prodigio"), "prodig" );
	deepEqual( Stem("prodigioso"), "prodig" );
	deepEqual( Stem("prodigo"), "prodig" );
	deepEqual( Stem("proditorio"), "proditor" );
	deepEqual( Stem("prodotta"), "prodott" );
	deepEqual( Stem("prodotti"), "prodott" );
	deepEqual( Stem("prodotto"), "prodott" );
	deepEqual( Stem("produce"), "produc" );
	deepEqual( Stem("producendo"), "produc" );
	deepEqual( Stem("produceva"), "produc" );
	deepEqual( Stem("producevan"), "producevan" );
	deepEqual( Stem("producevano"), "produc" );
	deepEqual( Stem("producono"), "produc" );
	deepEqual( Stem("produr"), "produr" );
	deepEqual( Stem("produrla"), "produrl" );
	deepEqual( Stem("produrrà"), "produrr" );
	deepEqual( Stem("produrre"), "produrr" );
	deepEqual( Stem("produrrebbe"), "produrrebb" );
	deepEqual( Stem("produsse"), "produss" );
	deepEqual( Stem("produssero"), "produsser" );
	deepEqual( Stem("produttiva"), "produtt" );
	deepEqual( Stem("produttive"), "produtt" );
	deepEqual( Stem("produttivi"), "produtt" );
	deepEqual( Stem("produttività"), "produtt" );
	deepEqual( Stem("produttivo"), "produtt" );
	deepEqual( Stem("produttore"), "produttor" );
	deepEqual( Stem("produttori"), "produttor" );
	deepEqual( Stem("produttrice"), "produttr" );
	deepEqual( Stem("produttrici"), "produttr" );
	deepEqual( Stem("produzione"), "produzion" );
	deepEqual( Stem("produzioni"), "produzion" );
	deepEqual( Stem("produziuone"), "produziuon" );
	deepEqual( Stem("proemio"), "proem" );
	deepEqual( Stem("prof"), "prof" );
	deepEqual( Stem("profana"), "profan" );
	deepEqual( Stem("profane"), "profan" );
	deepEqual( Stem("profano"), "prof" );
	deepEqual( Stem("proferendo"), "profer" );
	deepEqual( Stem("proferì"), "profer" );
	deepEqual( Stem("proferir"), "profer" );
	deepEqual( Stem("proferire"), "profer" );
	deepEqual( Stem("proferirle"), "profer" );
	deepEqual( Stem("proferisco"), "profer" );
	deepEqual( Stem("proferisse"), "proferiss" );
	deepEqual( Stem("proferita"), "profer" );
	deepEqual( Stem("proferite"), "profer" );
	deepEqual( Stem("proferito"), "profer" );
	deepEqual( Stem("proferiva"), "profer" );
	deepEqual( Stem("professato"), "profess" );
	deepEqual( Stem("professi"), "profess" );
	deepEqual( Stem("professionale"), "professional" );
	deepEqual( Stem("professionali"), "professional" );
	deepEqual( Stem("professionalità"), "professional" );
	deepEqual( Stem("professione"), "profession" );
	deepEqual( Stem("professioni"), "profession" );
	deepEqual( Stem("professionismo"), "profession" );
	deepEqual( Stem("professionista"), "profession" );
	deepEqual( Stem("professionisti"), "profession" );
	deepEqual( Stem("professionistico"), "professionist" );
	deepEqual( Stem("professo"), "profess" );
	deepEqual( Stem("professor"), "professor" );
	deepEqual( Stem("professore"), "professor" );
	deepEqual( Stem("professoressa"), "professoress" );
	deepEqual( Stem("professori"), "professor" );
	deepEqual( Stem("professorì"), "professor" );
	deepEqual( Stem("profeta"), "profet" );
	deepEqual( Stem("profeticà"), "profetic" );
	deepEqual( Stem("profezia"), "profez" );
	deepEqual( Stem("profezie"), "profez" );
	deepEqual( Stem("proficuo"), "proficu" );
	deepEqual( Stem("profili"), "profil" );
	deepEqual( Stem("profilo"), "profil" );
	deepEqual( Stem("profit"), "profit" );
	deepEqual( Stem("profittarne"), "profitt" );
	deepEqual( Stem("profittevole"), "profittevol" );
	deepEqual( Stem("profitti"), "profitt" );
	deepEqual( Stem("profitto"), "profitt" );
	deepEqual( Stem("profittò"), "profitt" );
	deepEqual( Stem("profonda"), "profond" );
	deepEqual( Stem("profondamente"), "profond" );
	deepEqual( Stem("profonde"), "profond" );
	deepEqual( Stem("profondere"), "profond" );
	deepEqual( Stem("profondi"), "profond" );
	deepEqual( Stem("profondità"), "profond" );
	deepEqual( Stem("profondo"), "profond" );
	deepEqual( Stem("profughi"), "profug" );
	deepEqual( Stem("profumati"), "profum" );
	deepEqual( Stem("profumi"), "profum" );
	deepEqual( Stem("profumo"), "profum" );
	deepEqual( Stem("profundis"), "profundis" );
	deepEqual( Stem("profuno"), "profun" );
	deepEqual( Stem("profuso"), "profus" );
	deepEqual( Stem("progessiste"), "progess" );
	deepEqual( Stem("progettazione"), "progett" );
	deepEqual( Stem("progetti"), "progett" );
	deepEqual( Stem("progetto"), "progett" );
	deepEqual( Stem("prognosi"), "prognos" );
	deepEqual( Stem("programma"), "programm" );
	deepEqual( Stem("programmatica"), "programmat" );
	deepEqual( Stem("programmatiche"), "programmat" );
	deepEqual( Stem("programmatici"), "programmat" );
	deepEqual( Stem("programmatico"), "programmat" );
	deepEqual( Stem("programmato"), "programm" );
	deepEqual( Stem("programmazione"), "programm" );
	deepEqual( Stem("programmi"), "programm" );
	deepEqual( Stem("progressi"), "progress" );
	deepEqual( Stem("progressione"), "progression" );
	deepEqual( Stem("progressismo"), "progress" );
	deepEqual( Stem("progressista"), "progress" );
	deepEqual( Stem("progressiste"), "progress" );
	deepEqual( Stem("progressisti"), "progress" );
	deepEqual( Stem("progressita"), "progress" );
	deepEqual( Stem("progressiva"), "progress" );
	deepEqual( Stem("progressivamente"), "progress" );
	deepEqual( Stem("progressivamenti"), "progressiv" );
	deepEqual( Stem("progressivo"), "progress" );
	deepEqual( Stem("progresso"), "progress" );
	deepEqual( Stem("proibì"), "proib" );
	deepEqual( Stem("proibire"), "proib" );
	deepEqual( Stem("proibirvelo"), "proib" );
	deepEqual( Stem("proibisca"), "proib" );
	deepEqual( Stem("proibisse"), "proibiss" );
	deepEqual( Stem("proibite"), "proib" );
	deepEqual( Stem("proibito"), "proib" );
	deepEqual( Stem("proibiva"), "proib" );
	deepEqual( Stem("proiettare"), "proiett" );
	deepEqual( Stem("proietti"), "proiett" );
	deepEqual( Stem("proiettile"), "proiettil" );
	deepEqual( Stem("proiettili"), "proiettil" );
	deepEqual( Stem("proiezione"), "proiezion" );
	deepEqual( Stem("project"), "project" );
	deepEqual( Stem("prole"), "prol" );
	deepEqual( Stem("prolisse"), "proliss" );
	deepEqual( Stem("prolissità"), "proliss" );
	deepEqual( Stem("prolungamento"), "prolung" );
	deepEqual( Stem("prolungano"), "prolung" );
	deepEqual( Stem("prolungar"), "prolung" );
	deepEqual( Stem("prolungare"), "prolung" );
	deepEqual( Stem("prolungata"), "prolung" );
	deepEqual( Stem("prolungate"), "prolung" );
	deepEqual( Stem("prolungato"), "prolung" );
	deepEqual( Stem("prolungò"), "prolung" );
	deepEqual( Stem("promessa"), "promess" );
	deepEqual( Stem("promessà"), "promess" );
	deepEqual( Stem("promesse"), "promess" );
	deepEqual( Stem("promessi"), "promess" );
	deepEqual( Stem("promesso"), "promess" );
	deepEqual( Stem("promette"), "promett" );
	deepEqual( Stem("promettendo"), "promett" );
	deepEqual( Stem("promettendogli"), "promett" );
	deepEqual( Stem("promettendosi"), "promett" );
	deepEqual( Stem("prometter"), "prometter" );
	deepEqual( Stem("promettere"), "promett" );
	deepEqual( Stem("promettergli"), "promett" );
	deepEqual( Stem("prometterlo"), "promett" );
	deepEqual( Stem("promettermi"), "promett" );
	deepEqual( Stem("promettersi"), "promett" );
	deepEqual( Stem("promettete"), "promett" );
	deepEqual( Stem("promettetele"), "promettetel" );
	deepEqual( Stem("promettetemi"), "promettetem" );
	deepEqual( Stem("prometteva"), "promett" );
	deepEqual( Stem("prometti"), "promett" );
	deepEqual( Stem("prometto"), "promett" );
	deepEqual( Stem("promettono"), "promett" );
	deepEqual( Stem("promiscua"), "promiscu" );
	deepEqual( Stem("promise"), "promis" );
	deepEqual( Stem("promontorio"), "promontor" );
	deepEqual( Stem("promossa"), "promoss" );
	deepEqual( Stem("promosso"), "promoss" );
	deepEqual( Stem("promotor"), "promotor" );
	deepEqual( Stem("promotore"), "promotor" );
	deepEqual( Stem("promotori"), "promotor" );
	deepEqual( Stem("promotrice"), "promotr" );
	deepEqual( Stem("promovere"), "promov" );
	deepEqual( Stem("promovono"), "promov" );
	deepEqual( Stem("promozionali"), "promozional" );
	deepEqual( Stem("promozione"), "promozion" );
	deepEqual( Stem("promuove"), "promuov" );
	deepEqual( Stem("promuovere"), "promuov" );
	deepEqual( Stem("pronosticargliele"), "pronostic" );
	deepEqual( Stem("pronosticata"), "pronostic" );
	deepEqual( Stem("pronosticava"), "pronostic" );
	deepEqual( Stem("pronostici"), "pronost" );
	deepEqual( Stem("pronosticò"), "pronostic" );
	deepEqual( Stem("pronta"), "pront" );
	deepEqual( Stem("prontamente"), "pront" );
	deepEqual( Stem("pronte"), "pront" );
	deepEqual( Stem("prontezza"), "prontezz" );
	deepEqual( Stem("pronti"), "pront" );
	deepEqual( Stem("pronto"), "pront" );
	deepEqual( Stem("pronuncerà"), "pronunc" );
	deepEqual( Stem("pronuncia"), "pronunc" );
	deepEqual( Stem("pronunciamento"), "pronunc" );
	deepEqual( Stem("pronunciare"), "pronunc" );
	deepEqual( Stem("pronunciarsi"), "pronunc" );
	deepEqual( Stem("pronunciata"), "pronunc" );
	deepEqual( Stem("pronunciate"), "pronunc" );
	deepEqual( Stem("pronunciato"), "pronunc" );
	deepEqual( Stem("pronunzia"), "pronunz" );
	deepEqual( Stem("pronunziano"), "pronunz" );
	deepEqual( Stem("pronunziare"), "pronunz" );
	deepEqual( Stem("pronunziarle"), "pronunz" );
	deepEqual( Stem("pronunziato"), "pronunz" );
	deepEqual( Stem("pronunzio"), "pronunz" );
	deepEqual( Stem("pronunziò"), "pronunz" );
	deepEqual( Stem("propaga"), "propag" );
	deepEqual( Stem("propagamento"), "propag" );
	deepEqual( Stem("propaganda"), "propagand" );
	deepEqual( Stem("propagare"), "propag" );
	deepEqual( Stem("propagarla"), "propag" );
	deepEqual( Stem("propagarsi"), "propag" );
	deepEqual( Stem("propagasse"), "propag" );
	deepEqual( Stem("propagata"), "propag" );
	deepEqual( Stem("propagazione"), "propag" );
	deepEqual( Stem("propaghino"), "propaghin" );
	deepEqual( Stem("propalate"), "propal" );
	deepEqual( Stem("propende"), "prop" );
	deepEqual( Stem("propensi"), "propens" );
	deepEqual( Stem("propensione"), "propension" );
	deepEqual( Stem("propini"), "propin" );
	deepEqual( Stem("propio"), "prop" );
	deepEqual( Stem("propizio"), "propiz" );
	deepEqual( Stem("propone"), "propon" );
	deepEqual( Stem("proponendo"), "propon" );
	deepEqual( Stem("proponendosi"), "propon" );
	deepEqual( Stem("proponenti"), "proponent" );
	deepEqual( Stem("proponeva"), "propon" );
	deepEqual( Stem("proponevano"), "propon" );
	deepEqual( Stem("proponga"), "propong" );
	deepEqual( Stem("propongo"), "propong" );
	deepEqual( Stem("propongono"), "propong" );
	deepEqual( Stem("proponiam"), "proponiam" );
	deepEqual( Stem("proponiamo"), "propon" );
	deepEqual( Stem("proponimenti"), "propon" );
	deepEqual( Stem("proponimento"), "propon" );
	deepEqual( Stem("propor"), "propor" );
	deepEqual( Stem("proporgli"), "proporgl" );
	deepEqual( Stem("proporle"), "proporl" );
	deepEqual( Stem("proporli"), "proporl" );
	deepEqual( Stem("proporrà"), "proporr" );
	deepEqual( Stem("proporre"), "proporr" );
	deepEqual( Stem("proporsi"), "propors" );
	deepEqual( Stem("proporzion"), "proporzion" );
	deepEqual( Stem("proporzionale"), "proporzional" );
	deepEqual( Stem("proporzionali"), "proporzional" );
	deepEqual( Stem("proporzionalmente"), "proporzional" );
	deepEqual( Stem("proporzionare"), "proporzion" );
	deepEqual( Stem("proporzionata"), "proporzion" );
	deepEqual( Stem("proporzionati"), "proporzion" );
	deepEqual( Stem("proporzionato"), "proporzion" );
	deepEqual( Stem("proporzione"), "proporzion" );
	deepEqual( Stem("proporzioni"), "proporzion" );
	deepEqual( Stem("propose"), "propos" );
	deepEqual( Stem("proposero"), "proposer" );
	deepEqual( Stem("proposito"), "propos" );
	deepEqual( Stem("proposizione"), "proposizion" );
	deepEqual( Stem("proposizioni"), "proposizion" );
	deepEqual( Stem("proposta"), "propost" );
	deepEqual( Stem("proposte"), "propost" );
	deepEqual( Stem("proposti"), "propost" );
	deepEqual( Stem("proposto"), "propost" );
	deepEqual( Stem("propp"), "propp" );
	deepEqual( Stem("propri"), "propr" );
	deepEqual( Stem("propria"), "propr" );
	deepEqual( Stem("propriamente"), "propr" );
	deepEqual( Stem("proprie"), "propr" );
	deepEqual( Stem("proprieta"), "propriet" );
	deepEqual( Stem("proprietà"), "propriet" );
	deepEqual( Stem("proprietàdelle"), "proprietàdell" );
	deepEqual( Stem("proprietari"), "proprietar" );
	deepEqual( Stem("proprietarie"), "proprietar" );
	deepEqual( Stem("proprietario"), "proprietar" );
	deepEqual( Stem("proprio"), "propr" );
	deepEqual( Stem("proprosito"), "propros" );
	deepEqual( Stem("propugna"), "propugn" );
	deepEqual( Stem("propugnano"), "propugn" );
	deepEqual( Stem("prora"), "pror" );
	deepEqual( Stem("prorietà"), "proriet" );
	deepEqual( Stem("proroga"), "prorog" );
	deepEqual( Stem("prorogata"), "prorog" );
	deepEqual( Stem("prorogato"), "prorog" );
	deepEqual( Stem("prorompeva"), "proromp" );
	deepEqual( Stem("prorpio"), "prorp" );
	deepEqual( Stem("proruppe"), "prorupp" );
	deepEqual( Stem("proruppero"), "prorupper" );
	deepEqual( Stem("prosa"), "pros" );
	deepEqual( Stem("prosapia"), "prosap" );
	deepEqual( Stem("proscenio"), "proscen" );
	deepEqual( Stem("prosecuzione"), "prosecu" );
	deepEqual( Stem("prosegue"), "prosegu" );
	deepEqual( Stem("proseguendo"), "prosegu" );
	deepEqual( Stem("proseguì"), "prosegu" );
	deepEqual( Stem("proseguirà"), "prosegu" );
	deepEqual( Stem("proseguiranno"), "prosegu" );
	deepEqual( Stem("proseguire"), "prosegu" );
	deepEqual( Stem("proseguita"), "prosegu" );
	deepEqual( Stem("proseguite"), "prosegu" );
	deepEqual( Stem("proseguiti"), "prosegu" );
	deepEqual( Stem("proseguito"), "prosegu" );
	deepEqual( Stem("proseguiva"), "prosegu" );
	deepEqual( Stem("proseguono"), "prosegu" );
	deepEqual( Stem("prosopopea"), "prosopope" );
	deepEqual( Stem("prosperità"), "prosper" );
	deepEqual( Stem("prospero"), "prosper" );
	deepEqual( Stem("prosperosi"), "prosper" );
	deepEqual( Stem("prosperoso"), "prosper" );
	deepEqual( Stem("prospetta"), "prospett" );
	deepEqual( Stem("prospettata"), "prospett" );
	deepEqual( Stem("prospettati"), "prospett" );
	deepEqual( Stem("prospettato"), "prospett" );
	deepEqual( Stem("prospettava"), "prospett" );
	deepEqual( Stem("prospetti"), "prospett" );
	deepEqual( Stem("prospettiva"), "prospett" );
	deepEqual( Stem("prospettive"), "prospett" );
	deepEqual( Stem("prospetto"), "prospett" );
	deepEqual( Stem("prossima"), "prossim" );
	deepEqual( Stem("prossimamente"), "prossim" );
	deepEqual( Stem("prossime"), "prossim" );
	deepEqual( Stem("prossimi"), "prossim" );
	deepEqual( Stem("prossimo"), "prossim" );
	deepEqual( Stem("prostituta"), "prostit" );
	deepEqual( Stem("protagonista"), "protagon" );
	deepEqual( Stem("protagonisti"), "protagon" );
	deepEqual( Stem("protegge"), "protegg" );
	deepEqual( Stem("proteggendosi"), "protegg" );
	deepEqual( Stem("proteggerci"), "protegg" );
	deepEqual( Stem("proteggere"), "protegg" );
	deepEqual( Stem("proteggerla"), "protegg" );
	deepEqual( Stem("proteggerlo"), "protegg" );
	deepEqual( Stem("proteggeva"), "protegg" );
	deepEqual( Stem("proteggo"), "protegg" );
	deepEqual( Stem("proteo"), "prote" );
	deepEqual( Stem("protesa"), "protes" );
	deepEqual( Stem("protesta"), "protest" );
	deepEqual( Stem("protestandogli"), "protest" );
	deepEqual( Stem("protestante"), "protest" );
	deepEqual( Stem("protestantè"), "protestant" );
	deepEqual( Stem("protestanti"), "protest" );
	deepEqual( Stem("protestare"), "protest" );
	deepEqual( Stem("protestato"), "protest" );
	deepEqual( Stem("protestava"), "protest" );
	deepEqual( Stem("protestavano"), "protest" );
	deepEqual( Stem("proteste"), "protest" );
	deepEqual( Stem("protetta"), "protett" );
	deepEqual( Stem("protetti"), "protett" );
	deepEqual( Stem("protettor"), "protettor" );
	deepEqual( Stem("protettore"), "protettor" );
	deepEqual( Stem("protettrice"), "protettr" );
	deepEqual( Stem("protezione"), "protezion" );
	deepEqual( Stem("protezioni"), "protezion" );
	deepEqual( Stem("protocollari"), "protocollar" );
	deepEqual( Stem("protocollo"), "protocoll" );
	deepEqual( Stem("protofisico"), "protofis" );
	deepEqual( Stem("protrae"), "protra" );
	deepEqual( Stem("protrarrà"), "protrarr" );
	deepEqual( Stem("protrarsi"), "protr" );
	deepEqual( Stem("protti"), "prott" );
	deepEqual( Stem("protuberanza"), "protuber" );
	deepEqual( Stem("proueeré"), "proueer" );
	deepEqual( Stem("prouisione"), "prouision" );
	deepEqual( Stem("prova"), "prov" );
	deepEqual( Stem("provando"), "prov" );
	deepEqual( Stem("provano"), "prov" );
	deepEqual( Stem("provar"), "prov" );
	deepEqual( Stem("provarci"), "prov" );
	deepEqual( Stem("provare"), "prov" );
	deepEqual( Stem("provarla"), "prov" );
	deepEqual( Stem("provarne"), "prov" );
	deepEqual( Stem("provarsi"), "prov" );
	deepEqual( Stem("provasse"), "prov" );
	deepEqual( Stem("provata"), "prov" );
	deepEqual( Stem("provate"), "prov" );
	deepEqual( Stem("provati"), "prov" );
	deepEqual( Stem("provato"), "prov" );
	deepEqual( Stem("provava"), "prov" );
	deepEqual( Stem("provavano"), "prov" );
	deepEqual( Stem("prove"), "prov" );
	deepEqual( Stem("provence"), "provenc" );
	deepEqual( Stem("provengono"), "proveng" );
	deepEqual( Stem("proveniente"), "provenient" );
	deepEqual( Stem("provenienti"), "provenient" );
	deepEqual( Stem("provenienza"), "provenient" );
	deepEqual( Stem("provenienze"), "provenient" );
	deepEqual( Stem("provera"), "prover" );
	deepEqual( Stem("proverà"), "prov" );
	deepEqual( Stem("proverai"), "prov" );
	deepEqual( Stem("proverbi"), "proverb" );
	deepEqual( Stem("proverbio"), "proverb" );
	deepEqual( Stem("proveremo"), "prov" );
	deepEqual( Stem("proverete"), "prov" );
	deepEqual( Stem("provetto"), "provett" );
	deepEqual( Stem("providence"), "providenc" );
	deepEqual( Stem("providencia"), "providenc" );
	deepEqual( Stem("province"), "provinc" );
	deepEqual( Stem("provincia"), "provinc" );
	deepEqual( Stem("provinciale"), "provincial" );
	deepEqual( Stem("provinciali"), "provincial" );
	deepEqual( Stem("provincie"), "provinc" );
	deepEqual( Stem("provo"), "prov" );
	deepEqual( Stem("provò"), "prov" );
	deepEqual( Stem("provocando"), "provoc" );
	deepEqual( Stem("provocano"), "provoc" );
	deepEqual( Stem("provocare"), "provoc" );
	deepEqual( Stem("provocarli"), "provoc" );
	deepEqual( Stem("provocarlo"), "provoc" );
	deepEqual( Stem("provocata"), "provoc" );
	deepEqual( Stem("provocativo"), "provoc" );
	deepEqual( Stem("provocato"), "provoc" );
	deepEqual( Stem("provocatori"), "provoc" );
	deepEqual( Stem("provocatorie"), "provocator" );
	deepEqual( Stem("provocatorio"), "provocator" );
	deepEqual( Stem("provocazione"), "provoc" );
	deepEqual( Stem("provocherà"), "provoc" );
	deepEqual( Stem("provocherai"), "provoc" );
	deepEqual( Stem("provocò"), "provoc" );
	deepEqual( Stem("provv"), "provv" );
	deepEqual( Stem("provveda"), "provved" );
	deepEqual( Stem("provveder"), "provveder" );
	deepEqual( Stem("provvederà"), "provved" );
	deepEqual( Stem("provvedere"), "provved" );
	deepEqual( Stem("provvederla"), "provved" );
	deepEqual( Stem("provvedeva"), "provved" );
	deepEqual( Stem("provvedimenti"), "provved" );
	deepEqual( Stem("provvedimento"), "provved" );
	deepEqual( Stem("provvedute"), "provved" );
	deepEqual( Stem("provveduti"), "provved" );
	deepEqual( Stem("provveduto"), "provved" );
	deepEqual( Stem("provvidenza"), "provvident" );
	deepEqual( Stem("provvisione"), "provvision" );
	deepEqual( Stem("provvisioni"), "provvision" );
	deepEqual( Stem("provvisori"), "provvisor" );
	deepEqual( Stem("provvisorio"), "provvisor" );
	deepEqual( Stem("provvisti"), "provvist" );
	deepEqual( Stem("provvisto"), "provvist" );
	deepEqual( Stem("prozie"), "proz" );
	deepEqual( Stem("prudente"), "prudent" );
	deepEqual( Stem("prudenti"), "prudent" );
	deepEqual( Stem("prudentium"), "prudentium" );
	deepEqual( Stem("prudenza"), "prudenz" );
	deepEqual( Stem("prudenziale"), "prudenzial" );
	deepEqual( Stem("prunaio"), "prunai" );
	deepEqual( Stem("pruni"), "prun" );
	deepEqual( Stem("prurito"), "prur" );
	deepEqual( Stem("prusis"), "prusis" );
	deepEqual( Stem("ps"), "ps" );
	deepEqual( Stem("pscritto"), "pscritt" );
	deepEqual( Stem("psi"), "psi" );
	deepEqual( Stem("psiche"), "psic" );
	deepEqual( Stem("psichico"), "psichic" );
	deepEqual( Stem("psico"), "psic" );
	deepEqual( Stem("psicosi"), "psicos" );
	deepEqual( Stem("pst"), "pst" );
	deepEqual( Stem("psu"), "psu" );
	deepEqual( Stem("pt"), "pt" );
	deepEqual( Stem("pu"), "pu" );
	deepEqual( Stem("pubbicato"), "pubbic" );
	deepEqual( Stem("pubblica"), "pubblic" );
	deepEqual( Stem("pubblicamente"), "pubblic" );
	deepEqual( Stem("pubblicando"), "pubblic" );
	deepEqual( Stem("pubblicar"), "pubblic" );
	deepEqual( Stem("pubblicare"), "pubblic" );
	deepEqual( Stem("pubblicasse"), "pubblic" );
	deepEqual( Stem("pubblicata"), "pubblic" );
	deepEqual( Stem("pubblicatao"), "pubblicata" );
	deepEqual( Stem("pubblicate"), "pubblic" );
	deepEqual( Stem("pubblicati"), "pubblic" );
	deepEqual( Stem("pubblicato"), "pubblic" );
	deepEqual( Stem("pubblicavano"), "pubblic" );
	deepEqual( Stem("pubblicazione"), "pubblic" );
	deepEqual( Stem("pubblicazioni"), "pubblic" );
	deepEqual( Stem("pubbliche"), "pubblic" );
	deepEqual( Stem("pubblichi"), "pubblic" );
	deepEqual( Stem("pubblici"), "pubblic" );
	deepEqual( Stem("pubblicità"), "pubblic" );
	deepEqual( Stem("pubblicitari"), "pubblicitar" );
	deepEqual( Stem("pubblicitaria"), "pubblicitar" );
	deepEqual( Stem("pubblicitarie"), "pubblicitar" );
	deepEqual( Stem("pubblicizza"), "pubblicizz" );
	deepEqual( Stem("pubblicizzati"), "pubblicizz" );
	deepEqual( Stem("pubblico"), "pubblic" );
	deepEqual( Stem("pubblicò"), "pubblic" );
	deepEqual( Stem("pubertà"), "pubert" );
	deepEqual( Stem("publbico"), "publbic" );
	deepEqual( Stem("publicata"), "public" );
	deepEqual( Stem("publico"), "public" );
	deepEqual( Stem("publio"), "publ" );
	deepEqual( Stem("puc"), "puc" );
	deepEqual( Stem("puche"), "puch" );
	deepEqual( Stem("pudore"), "pudor" );
	deepEqual( Stem("pudori"), "pudor" );
	deepEqual( Stem("pueblo"), "puebl" );
	deepEqual( Stem("puedes"), "puedes" );
	deepEqual( Stem("puerizia"), "pueriz" );
	deepEqual( Stem("pug"), "pug" );
	deepEqual( Stem("pugilato"), "pugil" );
	deepEqual( Stem("puglia"), "pugl" );
	deepEqual( Stem("puglià"), "pugl" );
	deepEqual( Stem("pugliese"), "puglies" );
	deepEqual( Stem("pugliesi"), "puglies" );
	deepEqual( Stem("pugnalata"), "pugnal" );
	deepEqual( Stem("pugnalate"), "pugnal" );
	deepEqual( Stem("pugnale"), "pugnal" );
	deepEqual( Stem("pugnali"), "pugnal" );
	deepEqual( Stem("pugni"), "pugn" );
	deepEqual( Stem("pugnitopo"), "pugnitop" );
	deepEqual( Stem("pugno"), "pugn" );
	deepEqual( Stem("pulce"), "pulc" );
	deepEqual( Stem("pulcin"), "pulcin" );
	deepEqual( Stem("pulcinella"), "pulcinell" );
	deepEqual( Stem("pulcini"), "pulcin" );
	deepEqual( Stem("pulcino"), "pulcin" );
	deepEqual( Stem("pulejo"), "pulej" );
	deepEqual( Stem("puliè"), "pul" );
	deepEqual( Stem("pulita"), "pul" );
	deepEqual( Stem("pulite"), "pul" );
	deepEqual( Stem("pulitè"), "pulit" );
	deepEqual( Stem("pulito"), "pul" );
	deepEqual( Stem("pulizia"), "puliz" );
	deepEqual( Stem("pullman"), "pullman" );
	deepEqual( Stem("pullmann"), "pullmann" );
	deepEqual( Stem("pulmino"), "pulmin" );
	deepEqual( Stem("pulpiti"), "pulp" );
	deepEqual( Stem("pulpito"), "pulp" );
	deepEqual( Stem("puma"), "pum" );
	deepEqual( Stem("punge"), "pung" );
	deepEqual( Stem("pungente"), "pungent" );
	deepEqual( Stem("pungenti"), "pungent" );
	deepEqual( Stem("pungolo"), "pungol" );
	deepEqual( Stem("punire"), "pun" );
	deepEqual( Stem("punirlo"), "pun" );
	deepEqual( Stem("puniti"), "pun" );
	deepEqual( Stem("punitore"), "punitor" );
	deepEqual( Stem("puniva"), "pun" );
	deepEqual( Stem("punizione"), "punizion" );
	deepEqual( Stem("punt"), "punt" );
	deepEqual( Stem("punta"), "punt" );
	deepEqual( Stem("puntando"), "punt" );
	deepEqual( Stem("puntano"), "punt" );
	deepEqual( Stem("puntare"), "punt" );
	deepEqual( Stem("puntarglisi"), "puntarglis" );
	deepEqual( Stem("puntata"), "punt" );
	deepEqual( Stem("puntate"), "punt" );
	deepEqual( Stem("puntati"), "punt" );
	deepEqual( Stem("puntato"), "punt" );
	deepEqual( Stem("puntava"), "punt" );
	deepEqual( Stem("punte"), "punt" );
	deepEqual( Stem("punteggio"), "puntegg" );
	deepEqual( Stem("puntelli"), "puntell" );
	deepEqual( Stem("punterà"), "punt" );
	deepEqual( Stem("punti"), "punt" );
	deepEqual( Stem("puntiamo"), "punt" );
	deepEqual( Stem("puntigli"), "puntigl" );
	deepEqual( Stem("puntiglio"), "puntigl" );
	deepEqual( Stem("puntiglioso"), "puntigl" );
	deepEqual( Stem("puntino"), "puntin" );
	deepEqual( Stem("punto"), "punt" );
	deepEqual( Stem("puntuale"), "puntual" );
	deepEqual( Stem("puntuali"), "puntual" );
	deepEqual( Stem("puntualità"), "puntual" );
	deepEqual( Stem("puntualizza"), "puntualizz" );
	deepEqual( Stem("puntualizzato"), "puntualizz" );
	deepEqual( Stem("puntualizzazione"), "puntualizz" );
	deepEqual( Stem("puntualizzazioni"), "puntualizz" );
	deepEqual( Stem("puntualmente"), "puntual" );
	deepEqual( Stem("puntura"), "puntur" );
	deepEqual( Stem("punzione"), "punzion" );
	deepEqual( Stem("punzone"), "punzon" );
	deepEqual( Stem("punzoni"), "punzon" );
	deepEqual( Stem("puo"), "puo" );
	deepEqual( Stem("può"), "può" );
	deepEqual( Stem("puoco"), "puoc" );
	deepEqual( Stem("puoi"), "puo" );
	deepEqual( Stem("puoiché"), "puoic" );
	deepEqual( Stem("pupazzi"), "pupazz" );
	deepEqual( Stem("pupilla"), "pupill" );
	deepEqual( Stem("pupille"), "pupill" );
	deepEqual( Stem("pupillo"), "pupill" );
	deepEqual( Stem("pur"), "pur" );
	deepEqual( Stem("pura"), "pur" );
	deepEqual( Stem("puramente"), "pur" );
	deepEqual( Stem("purché"), "purc" );
	deepEqual( Stem("pure"), "pur" );
	deepEqual( Stem("purgare"), "purg" );
	deepEqual( Stem("purgatorio"), "purgator" );
	deepEqual( Stem("purghe"), "purg" );
	deepEqual( Stem("puri"), "pur" );
	deepEqual( Stem("purissime"), "purissim" );
	deepEqual( Stem("purissimi"), "purissim" );
	deepEqual( Stem("puritanesimo"), "puritanesim" );
	deepEqual( Stem("puro"), "pur" );
	deepEqual( Stem("purtroppo"), "purtropp" );
	deepEqual( Stem("purus"), "purus" );
	deepEqual( Stem("pusceddu"), "pusceddu" );
	deepEqual( Stem("pusillanime"), "pusillanim" );
	deepEqual( Stem("pusillanimità"), "pusillanim" );
	deepEqual( Stem("pusterla"), "pust" );
	deepEqual( Stem("putignanese"), "putignanes" );
	deepEqual( Stem("putignano"), "putign" );
	deepEqual( Stem("putrefatti"), "putrefatt" );
	deepEqual( Stem("putrida"), "putrid" );
	deepEqual( Stem("puttemans"), "puttemans" );
	deepEqual( Stem("puzzar"), "puzz" );
	deepEqual( Stem("puzzava"), "puzz" );
	deepEqual( Stem("puzzo"), "puzz" );
	deepEqual( Stem("pvs"), "pvs" );
	deepEqual( Stem("pyc"), "pyc" );
	deepEqual( Stem("pz"), "pz" );
	deepEqual( Stem("q"), "q" );
	deepEqual( Stem("qa"), "qa" );
	deepEqual( Stem("qatar"), "qat" );
	deepEqual( Stem("qbxb"), "qbxb" );
	deepEqual( Stem("qn"), "qn" );
	deepEqual( Stem("qu"), "qu" );
	deepEqual( Stem("qua"), "qua" );
	deepEqual( Stem("quaderno"), "quadern" );
	deepEqual( Stem("quadraro"), "quadrar" );
	deepEqual( Stem("quadrata"), "quadr" );
	deepEqual( Stem("quadrati"), "quadr" );
	deepEqual( Stem("quadrato"), "quadr" );
	deepEqual( Stem("quadri"), "quadr" );
	deepEqual( Stem("quadriennio"), "quadrienn" );
	deepEqual( Stem("quadrifoglio"), "quadrifogl" );
	deepEqual( Stem("quadrilatero"), "quadrilater" );
	deepEqual( Stem("quadrimotori"), "quadrimotor" );
	deepEqual( Stem("quadro"), "quadr" );
	deepEqual( Stem("quae"), "qua" );
	deepEqual( Stem("quaggiù"), "quaggiù" );
	deepEqual( Stem("quaid"), "quaid" );
	deepEqual( Stem("qual"), "qual" );
	deepEqual( Stem("qualche"), "qualc" );
	deepEqual( Stem("qualchedun"), "qualchedun" );
	deepEqual( Stem("qualcheduna"), "qualchedun" );
	deepEqual( Stem("qualcheduno"), "qualchedun" );
	deepEqual( Stem("qualcosa"), "qualcos" );
	deepEqual( Stem("qualcosina"), "qualcosin" );
	deepEqual( Stem("qualcuno"), "qualcun" );
	deepEqual( Stem("quale"), "qual" );
	deepEqual( Stem("quali"), "qual" );
	deepEqual( Stem("qualifica"), "qualif" );
	deepEqual( Stem("qualificanti"), "qualific" );
	deepEqual( Stem("qualificar"), "qualific" );
	deepEqual( Stem("qualificare"), "qualific" );
	deepEqual( Stem("qualificata"), "qualific" );
	deepEqual( Stem("qualificati"), "qualific" );
	deepEqual( Stem("qualificato"), "qualific" );
	deepEqual( Stem("qualificava"), "qualific" );
	deepEqual( Stem("qualita"), "qual" );
	deepEqual( Stem("qualità"), "qualit" );
	deepEqual( Stem("qualitate"), "qualit" );
	deepEqual( Stem("qualitativamente"), "qualit" );
	deepEqual( Stem("qualla"), "quall" );
	deepEqual( Stem("qualmente"), "qualment" );
	deepEqual( Stem("qualora"), "qualor" );
	deepEqual( Stem("qualsiasi"), "qualsias" );
	deepEqual( Stem("qualsisia"), "qualsis" );
	deepEqual( Stem("qualsiuoglia"), "qualsiuogl" );
	deepEqual( Stem("qualsivoglia"), "qualsivogl" );
	deepEqual( Stem("qualunque"), "qualunqu" );
	deepEqual( Stem("qualunquismo"), "qualunqu" );
	deepEqual( Stem("qualunquista"), "qualunqu" );
	deepEqual( Stem("quand"), "quand" );
	deepEqual( Stem("quando"), "quand" );
	deepEqual( Stem("quant"), "quant" );
	deepEqual( Stem("quanta"), "quant" );
	deepEqual( Stem("quante"), "quant" );
	deepEqual( Stem("quanti"), "quant" );
	deepEqual( Stem("quantificavano"), "quantific" );
	deepEqual( Stem("quantità"), "quantit" );
	deepEqual( Stem("quantitativi"), "quantit" );
	deepEqual( Stem("quantitativo"), "quantit" );
	deepEqual( Stem("quanto"), "quant" );
	deepEqual( Stem("quantunque"), "quantunqu" );
	deepEqual( Stem("quarant"), "quarant" );
	deepEqual( Stem("quaranta"), "quarant" );
	deepEqual( Stem("quarantene"), "quaranten" );
	deepEqual( Stem("quarantenni"), "quarantenn" );
	deepEqual( Stem("quarantina"), "quarantin" );
	deepEqual( Stem("quaresima"), "quaresim" );
	deepEqual( Stem("quaresimale"), "quaresimal" );
	deepEqual( Stem("quarta"), "quart" );
	deepEqual( Stem("quartetto"), "quartett" );
	deepEqual( Stem("quarti"), "quart" );
	deepEqual( Stem("quartier"), "quartier" );
	deepEqual( Stem("quartiere"), "quart" );
	deepEqual( Stem("quartieri"), "quartier" );
	deepEqual( Stem("quarto"), "quart" );
	deepEqual( Stem("quartuccio"), "quartucc" );
	deepEqual( Stem("quarum"), "quarum" );
	deepEqual( Stem("quasdro"), "quasdr" );
	deepEqual( Stem("quasi"), "quas" );
	deepEqual( Stem("quassù"), "quassù" );
	deepEqual( Stem("quatti"), "quatt" );
	deepEqual( Stem("quatto"), "quatt" );
	deepEqual( Stem("quattordicenne"), "quattordicenn" );
	deepEqual( Stem("quattordicesima"), "quattordicesim" );
	deepEqual( Stem("quattordici"), "quattord" );
	deepEqual( Stem("quattordicimila"), "quattordicimil" );
	deepEqual( Stem("quattr"), "quattr" );
	deepEqual( Stem("quattrinelli"), "quattrinell" );
	deepEqual( Stem("quattrini"), "quattrin" );
	deepEqual( Stem("quattrino"), "quattrin" );
	deepEqual( Stem("quattro"), "quattr" );
	deepEqual( Stem("quattrocento"), "quattrocent" );
	deepEqual( Stem("quattromila"), "quattromil" );
	deepEqual( Stem("quayle"), "quayl" );
	deepEqual( Stem("que"), "que" );
	deepEqual( Stem("quegl"), "quegl" );
	deepEqual( Stem("quegli"), "quegl" );
	deepEqual( Stem("quei"), "que" );
	deepEqual( Stem("queire"), "que" );
	deepEqual( Stem("quel"), "quel" );
	deepEqual( Stem("quell"), "quell" );
	deepEqual( Stem("quella"), "quell" );
	deepEqual( Stem("quelle"), "quell" );
	deepEqual( Stem("quelli"), "quell" );
	deepEqual( Stem("quello"), "quell" );
	deepEqual( Stem("quellò"), "quell" );
	deepEqual( Stem("querce"), "querc" );
	deepEqual( Stem("quercia"), "querc" );
	deepEqual( Stem("quercioli"), "querciol" );
	deepEqual( Stem("querela"), "querel" );
	deepEqual( Stem("querelarsi"), "querel" );
	deepEqual( Stem("querele"), "querel" );
	deepEqual( Stem("querelle"), "querell" );
	deepEqual( Stem("quesiti"), "ques" );
	deepEqual( Stem("quest"), "quest" );
	deepEqual( Stem("questa"), "quest" );
	deepEqual( Stem("queste"), "quest" );
	deepEqual( Stem("questi"), "quest" );
	deepEqual( Stem("questionare"), "question" );
	deepEqual( Stem("questione"), "question" );
	deepEqual( Stem("questioni"), "question" );
	deepEqual( Stem("questo"), "quest" );
	deepEqual( Stem("questore"), "questor" );
	deepEqual( Stem("questura"), "questur" );
	deepEqual( Stem("questure"), "questur" );
	deepEqual( Stem("qui"), "qui" );
	deepEqual( Stem("quicktime"), "quicktim" );
	deepEqual( Stem("quid"), "quid" );
	deepEqual( Stem("quidem"), "quidem" );
	deepEqual( Stem("quidquid"), "quidquid" );
	deepEqual( Stem("quieta"), "quiet" );
	deepEqual( Stem("quietamente"), "quiet" );
	deepEqual( Stem("quietatevi"), "quietat" );
	deepEqual( Stem("quiete"), "qui" );
	deepEqual( Stem("quieti"), "quiet" );
	deepEqual( Stem("quieto"), "quiet" );
	deepEqual( Stem("quin"), "quin" );
	deepEqual( Stem("quindi"), "quind" );
	deepEqual( Stem("quindici"), "quindic" );
	deepEqual( Stem("quindicina"), "quindicin" );
	deepEqual( Stem("quindicinale"), "quindicinal" );
	deepEqual( Stem("quinta"), "quint" );
	deepEqual( Stem("quinte"), "quint" );
	deepEqual( Stem("quinti"), "quint" );
	deepEqual( Stem("quintin"), "quintin" );
	deepEqual( Stem("quinto"), "quint" );
	deepEqual( Stem("quique"), "quiqu" );
	deepEqual( Stem("quirinale"), "quirinal" );
	deepEqual( Stem("quis"), "quis" );
	deepEqual( Stem("quito"), "quit" );
	deepEqual( Stem("quivi"), "quiv" );
	deepEqual( Stem("quiz"), "quiz" );
	deepEqual( Stem("qundici"), "qundic" );
	deepEqual( Stem("quo"), "quo" );
	deepEqual( Stem("quod"), "quod" );
	deepEqual( Stem("quoque"), "quoqu" );
	deepEqual( Stem("quota"), "quot" );
	deepEqual( Stem("quotata"), "quot" );
	deepEqual( Stem("quotati"), "quot" );
	deepEqual( Stem("quotato"), "quot" );
	deepEqual( Stem("quotazione"), "quotazion" );
	deepEqual( Stem("quotazioni"), "quotazion" );
	deepEqual( Stem("quote"), "quot" );
	deepEqual( Stem("quotidiana"), "quotidian" );
	deepEqual( Stem("quotidianamente"), "quotidian" );
	deepEqual( Stem("quotidiani"), "quotidian" );
	deepEqual( Stem("quotidianiche"), "quotidian" );
	deepEqual( Stem("quotidiano"), "quotid" );
	deepEqual( Stem("qutub"), "qutub" );
	deepEqual( Stem("quyivalenti"), "quyivalent" );
	deepEqual( Stem("r"), "r" );
	deepEqual( Stem("ra"), "ra" );
	deepEqual( Stem("raadstroem"), "raadstroem" );
	deepEqual( Stem("rab"), "rab" );
	deepEqual( Stem("rabai"), "raba" );
	deepEqual( Stem("rabbani"), "rabban" );
	deepEqual( Stem("rabbattuto"), "rabbatt" );
	deepEqual( Stem("rabbi"), "rabb" );
	deepEqual( Stem("rabbia"), "rabb" );
	deepEqual( Stem("rabbie"), "rabb" );
	deepEqual( Stem("rabbiosa"), "rabbios" );
	deepEqual( Stem("rabbiosamente"), "rabbios" );
	deepEqual( Stem("rabbiosi"), "rabbios" );
	deepEqual( Stem("rabbioso"), "rabbios" );
	deepEqual( Stem("rabbrividì"), "rabbrivid" );
	deepEqual( Stem("rabbrividire"), "rabbrivid" );
	deepEqual( Stem("rabbrividiti"), "rabbrivid" );
	deepEqual( Stem("rabbuffato"), "rabbuff" );
	deepEqual( Stem("rabbuffi"), "rabbuff" );
	deepEqual( Stem("rabbuiando"), "rabbui" );
	deepEqual( Stem("rabbuiandosi"), "rabbui" );
	deepEqual( Stem("rabescate"), "rabesc" );
	deepEqual( Stem("rabin"), "rabin" );
	deepEqual( Stem("racalbuto"), "racalb" );
	deepEqual( Stem("raccapezzandosi"), "raccapezz" );
	deepEqual( Stem("raccapezzar"), "raccapezz" );
	deepEqual( Stem("raccapezzare"), "raccapezz" );
	deepEqual( Stem("raccapezzarsi"), "raccapezz" );
	deepEqual( Stem("raccapezzò"), "raccapezz" );
	deepEqual( Stem("raccapriccianti"), "raccapricc" );
	deepEqual( Stem("raccapriccio"), "raccapricc" );
	deepEqual( Stem("raccattare"), "raccatt" );
	deepEqual( Stem("raccattarle"), "raccatt" );
	deepEqual( Stem("raccattava"), "raccatt" );
	deepEqual( Stem("racchiuse"), "racchius" );
	deepEqual( Stem("racchiuso"), "racchius" );
	deepEqual( Stem("raccoglie"), "raccogl" );
	deepEqual( Stem("raccogliendo"), "raccogl" );
	deepEqual( Stem("raccoglier"), "raccoglier" );
	deepEqual( Stem("raccoglierà"), "raccogl" );
	deepEqual( Stem("raccogliere"), "raccogl" );
	deepEqual( Stem("raccoglierli"), "raccogl" );
	deepEqual( Stem("raccoglierlo"), "raccogl" );
	deepEqual( Stem("raccoglieva"), "raccogl" );
	deepEqual( Stem("raccoglievan"), "raccoglievan" );
	deepEqual( Stem("raccoglievano"), "raccogl" );
	deepEqual( Stem("raccoglimento"), "raccogl" );
	deepEqual( Stem("raccolgono"), "raccolg" );
	deepEqual( Stem("raccolse"), "raccols" );
	deepEqual( Stem("raccolta"), "raccolt" );
	deepEqual( Stem("raccolte"), "raccolt" );
	deepEqual( Stem("raccolti"), "raccolt" );
	deepEqual( Stem("raccolto"), "raccolt" );
	deepEqual( Stem("raccomandandosi"), "raccomand" );
	deepEqual( Stem("raccomandare"), "raccomand" );
	deepEqual( Stem("raccomandasse"), "raccomand" );
	deepEqual( Stem("raccomandata"), "raccomand" );
	deepEqual( Stem("raccomandate"), "raccomand" );
	deepEqual( Stem("raccomandatemi"), "raccomandatem" );
	deepEqual( Stem("raccomandati"), "raccomand" );
	deepEqual( Stem("raccomandato"), "raccomand" );
	deepEqual( Stem("raccomandava"), "raccomand" );
	deepEqual( Stem("raccomandavano"), "raccomand" );
	deepEqual( Stem("raccomandazione"), "raccomand" );
	deepEqual( Stem("raccomandazioni"), "raccomand" );
	deepEqual( Stem("raccomanderò"), "raccomand" );
	deepEqual( Stem("raccomando"), "raccom" );
	deepEqual( Stem("raccomandò"), "raccomand" );
	deepEqual( Stem("raccomodar"), "raccomod" );
	deepEqual( Stem("raccomodare"), "raccomod" );
	deepEqual( Stem("raccomodarla"), "raccomod" );
	deepEqual( Stem("raccomodarlo"), "raccomod" );
	deepEqual( Stem("raccomodata"), "raccomod" );
	deepEqual( Stem("raccomodava"), "raccomod" );
	deepEqual( Stem("raccomodò"), "raccomod" );
	deepEqual( Stem("racconta"), "raccont" );
	deepEqual( Stem("raccontai"), "racconta" );
	deepEqual( Stem("raccontan"), "raccontan" );
	deepEqual( Stem("raccontando"), "raccont" );
	deepEqual( Stem("raccontano"), "raccont" );
	deepEqual( Stem("raccontar"), "raccont" );
	deepEqual( Stem("raccontare"), "raccont" );
	deepEqual( Stem("raccontargli"), "raccont" );
	deepEqual( Stem("raccontarglieli"), "raccont" );
	deepEqual( Stem("raccontargliene"), "raccont" );
	deepEqual( Stem("raccontarlo"), "raccont" );
	deepEqual( Stem("raccontarne"), "raccont" );
	deepEqual( Stem("raccontarsi"), "raccont" );
	deepEqual( Stem("raccontartene"), "raccont" );
	deepEqual( Stem("raccontasse"), "raccont" );
	deepEqual( Stem("raccontata"), "raccont" );
	deepEqual( Stem("raccontategli"), "raccontategl" );
	deepEqual( Stem("raccontatele"), "raccontatel" );
	deepEqual( Stem("raccontatemelo"), "raccontatemel" );
	deepEqual( Stem("raccontatemi"), "raccontatem" );
	deepEqual( Stem("raccontati"), "raccont" );
	deepEqual( Stem("raccontato"), "raccont" );
	deepEqual( Stem("raccontava"), "raccont" );
	deepEqual( Stem("raccontavan"), "raccontavan" );
	deepEqual( Stem("raccontavano"), "raccont" );
	deepEqual( Stem("racconterebbe"), "raccont" );
	deepEqual( Stem("racconteremo"), "raccont" );
	deepEqual( Stem("racconterò"), "raccont" );
	deepEqual( Stem("racconti"), "raccont" );
	deepEqual( Stem("raccontiamo"), "raccont" );
	deepEqual( Stem("racconto"), "raccont" );
	deepEqual( Stem("raccontò"), "raccont" );
	deepEqual( Stem("raccordare"), "raccord" );
	deepEqual( Stem("raccorderà"), "raccord" );
	deepEqual( Stem("raccordo"), "raccord" );
	deepEqual( Stem("raccostando"), "raccost" );
	deepEqual( Stem("raccostò"), "raccost" );
	deepEqual( Stem("raccozzò"), "raccozz" );
	deepEqual( Stem("rachenko"), "rachenk" );
	deepEqual( Stem("rachid"), "rachid" );
	deepEqual( Stem("rachini"), "rachin" );
	deepEqual( Stem("racing"), "racing" );
	deepEqual( Stem("racquisto"), "racquist" );
	deepEqual( Stem("rada"), "rad" );
	deepEqual( Stem("radchenko"), "radchenk" );
	deepEqual( Stem("raddirizzar"), "raddirizz" );
	deepEqual( Stem("raddirizzare"), "raddirizz" );
	deepEqual( Stem("raddirizzati"), "raddirizz" );
	deepEqual( Stem("raddolcendo"), "raddolc" );
	deepEqual( Stem("raddolcì"), "raddolc" );
	deepEqual( Stem("raddolcirà"), "raddolc" );
	deepEqual( Stem("raddolcisce"), "raddolc" );
	deepEqual( Stem("raddolcita"), "raddolc" );
	deepEqual( Stem("raddolcito"), "raddolc" );
	deepEqual( Stem("raddoppi"), "raddopp" );
	deepEqual( Stem("raddoppiar"), "raddopp" );
	deepEqual( Stem("raddoppiare"), "raddopp" );
	deepEqual( Stem("raddoppiato"), "raddopp" );
	deepEqual( Stem("raddoppio"), "raddopp" );
	deepEqual( Stem("rade"), "rad" );
	deepEqual( Stem("radendo"), "rad" );
	deepEqual( Stem("raderle"), "rad" );
	deepEqual( Stem("radezza"), "radezz" );
	deepEqual( Stem("radhabinod"), "radhabinod" );
	deepEqual( Stem("radi"), "rad" );
	deepEqual( Stem("radical"), "radical" );
	deepEqual( Stem("radicale"), "radical" );
	deepEqual( Stem("radicali"), "radical" );
	deepEqual( Stem("radicamento"), "radic" );
	deepEqual( Stem("radicata"), "radic" );
	deepEqual( Stem("radicate"), "radic" );
	deepEqual( Stem("radicchielle"), "radicchiell" );
	deepEqual( Stem("radice"), "radic" );
	deepEqual( Stem("radici"), "radic" );
	deepEqual( Stem("radicioni"), "radicion" );
	deepEqual( Stem("radio"), "rad" );
	deepEqual( Stem("radiò"), "rad" );
	deepEqual( Stem("radiocronaca"), "radiocronac" );
	deepEqual( Stem("radiofonia"), "radiofon" );
	deepEqual( Stem("radiofonica"), "radiofon" );
	deepEqual( Stem("radiofonici"), "radiofon" );
	deepEqual( Stem("radiografia"), "radiograf" );
	deepEqual( Stem("radiografico"), "radiograf" );
	deepEqual( Stem("radiotelevisiva"), "radiotelevis" );
	deepEqual( Stem("radiotelevisive"), "radiotelevis" );
	deepEqual( Stem("radiotelevisivi"), "radiotelevis" );
	deepEqual( Stem("radiotelevisivo"), "radiotelevis" );
	deepEqual( Stem("raditelevisive"), "raditelevis" );
	deepEqual( Stem("rado"), "rad" );
	deepEqual( Stem("radovan"), "radovan" );
	deepEqual( Stem("radstrom"), "radstrom" );
	deepEqual( Stem("radunando"), "radun" );
	deepEqual( Stem("radunanza"), "radun" );
	deepEqual( Stem("radunar"), "radun" );
	deepEqual( Stem("radunarglisi"), "radunarglis" );
	deepEqual( Stem("radunarono"), "radun" );
	deepEqual( Stem("radunarsi"), "radun" );
	deepEqual( Stem("radunarvi"), "radun" );
	deepEqual( Stem("radunata"), "radun" );
	deepEqual( Stem("radunate"), "radun" );
	deepEqual( Stem("radunati"), "radun" );
	deepEqual( Stem("radunavano"), "radun" );
	deepEqual( Stem("raduno"), "radun" );
	deepEqual( Stem("radunò"), "radun" );
	deepEqual( Stem("rafael"), "rafael" );
	deepEqual( Stem("raffa"), "raff" );
	deepEqual( Stem("raffaele"), "raffael" );
	deepEqual( Stem("raffh"), "raffh" );
	deepEqual( Stem("raffica"), "raffic" );
	deepEqual( Stem("raffiche"), "raffic" );
	deepEqual( Stem("raffigura"), "raffigur" );
	deepEqual( Stem("raffigurante"), "raffigur" );
	deepEqual( Stem("raffigurar"), "raffigur" );
	deepEqual( Stem("raffigurata"), "raffigur" );
	deepEqual( Stem("raffigurato"), "raffigur" );
	deepEqual( Stem("raffigurazione"), "raffigur" );
	deepEqual( Stem("raffin"), "raffin" );
	deepEqual( Stem("raffinate"), "raffin" );
	deepEqual( Stem("raffinatori"), "raffin" );
	deepEqual( Stem("raffinerie"), "raffiner" );
	deepEqual( Stem("rafforzamento"), "rafforz" );
	deepEqual( Stem("rafforzando"), "rafforz" );
	deepEqual( Stem("rafforzare"), "rafforz" );
	deepEqual( Stem("rafforzati"), "rafforz" );
	deepEqual( Stem("rafforzato"), "rafforz" );
	deepEqual( Stem("rafforzerebbe"), "rafforz" );
	deepEqual( Stem("raffreddamento"), "raffredd" );
	deepEqual( Stem("raffreddore"), "raffreddor" );
	deepEqual( Stem("rafsanjani"), "rafsanjan" );
	deepEqual( Stem("ragazza"), "ragazz" );
	deepEqual( Stem("ragazzacci"), "ragazzacc" );
	deepEqual( Stem("ragazzaccio"), "ragazzacc" );
	deepEqual( Stem("ragazzate"), "ragazz" );
	deepEqual( Stem("ragazze"), "ragazz" );
	deepEqual( Stem("ragazzetti"), "ragazzett" );
	deepEqual( Stem("ragazzetto"), "ragazzett" );
	deepEqual( Stem("ragazzi"), "ragazz" );
	deepEqual( Stem("ragazzia"), "ragazz" );
	deepEqual( Stem("ragazzina"), "ragazzin" );
	deepEqual( Stem("ragazzini"), "ragazzin" );
	deepEqual( Stem("ragazzo"), "ragazz" );
	deepEqual( Stem("ragazzone"), "ragazzon" );
	deepEqual( Stem("ragazzotto"), "ragazzott" );
	deepEqual( Stem("raggi"), "ragg" );
	deepEqual( Stem("raggiante"), "raggiant" );
	deepEqual( Stem("raggio"), "ragg" );
	deepEqual( Stem("raggiri"), "raggir" );
	deepEqual( Stem("raggiunga"), "raggiung" );
	deepEqual( Stem("raggiunge"), "raggiung" );
	deepEqual( Stem("raggiungendo"), "raggiung" );
	deepEqual( Stem("raggiunger"), "raggiunger" );
	deepEqual( Stem("raggiungerà"), "raggiung" );
	deepEqual( Stem("raggiungere"), "raggiung" );
	deepEqual( Stem("raggiungerli"), "raggiung" );
	deepEqual( Stem("raggiungerlo"), "raggiung" );
	deepEqual( Stem("raggiungono"), "raggiung" );
	deepEqual( Stem("raggiunse"), "raggiuns" );
	deepEqual( Stem("raggiunta"), "raggiunt" );
	deepEqual( Stem("raggiunte"), "raggiunt" );
	deepEqual( Stem("raggiunti"), "raggiunt" );
	deepEqual( Stem("raggiunto"), "raggiunt" );
	deepEqual( Stem("raggomitolata"), "raggomitol" );
	deepEqual( Stem("raggrinzando"), "raggrinz" );
	deepEqual( Stem("raggrinzarle"), "raggrinz" );
	deepEqual( Stem("raggrinzata"), "raggrinz" );
	deepEqual( Stem("raggrinzato"), "raggrinz" );
	deepEqual( Stem("raggrinzava"), "raggrinz" );
	deepEqual( Stem("raggrinzò"), "raggrinz" );
	deepEqual( Stem("raggrumate"), "raggrum" );
	deepEqual( Stem("raggruppamenti"), "raggrupp" );
	deepEqual( Stem("raggruppamento"), "raggrupp" );
	deepEqual( Stem("ragguagli"), "ragguagl" );
	deepEqual( Stem("ragguagliata"), "ragguagl" );
	deepEqual( Stem("ragguaglio"), "ragguagl" );
	deepEqual( Stem("ragion"), "ragion" );
	deepEqual( Stem("ragionamenti"), "ragion" );
	deepEqual( Stem("ragionamento"), "ragion" );
	deepEqual( Stem("ragionando"), "ragion" );
	deepEqual( Stem("ragionar"), "ragion" );
	deepEqual( Stem("ragionare"), "ragion" );
	deepEqual( Stem("ragionava"), "ragion" );
	deepEqual( Stem("ragione"), "ragion" );
	deepEqual( Stem("ragioneria"), "ragioner" );
	deepEqual( Stem("ragionevole"), "ragionevol" );
	deepEqual( Stem("ragionevolezza"), "ragionevolezz" );
	deepEqual( Stem("ragionevoli"), "ragionevol" );
	deepEqual( Stem("ragionevolmente"), "ragionevol" );
	deepEqual( Stem("ragioni"), "ragion" );
	deepEqual( Stem("ragioniere"), "ragion" );
	deepEqual( Stem("ragnateli"), "ragnatel" );
	deepEqual( Stem("ragno"), "ragn" );
	deepEqual( Stem("ragnotti"), "ragnott" );
	deepEqual( Stem("ragusa"), "ragus" );
	deepEqual( Stem("rai"), "rai" );
	deepEqual( Stem("raico"), "raic" );
	deepEqual( Stem("raidue"), "raidu" );
	deepEqual( Stem("raimondo"), "raimond" );
	deepEqual( Stem("raiola"), "raiol" );
	deepEqual( Stem("rais"), "rais" );
	deepEqual( Stem("raitre"), "raitr" );
	deepEqual( Stem("raiuno"), "raiun" );
	deepEqual( Stem("rajasthan"), "rajasthan" );
	deepEqual( Stem("rajko"), "rajk" );
	deepEqual( Stem("rakkarndee"), "rakkarnde" );
	deepEqual( Stem("rallegra"), "rallegr" );
	deepEqual( Stem("rallegrarsi"), "rallegr" );
	deepEqual( Stem("rallegratevi"), "rallegrat" );
	deepEqual( Stem("rallegrati"), "rallegr" );
	deepEqual( Stem("rallegrato"), "rallegr" );
	deepEqual( Stem("rallegrava"), "rallegr" );
	deepEqual( Stem("rallegravano"), "rallegr" );
	deepEqual( Stem("rallegriamo"), "rallegr" );
	deepEqual( Stem("rallegro"), "rallegr" );
	deepEqual( Stem("rallegrò"), "rallegr" );
	deepEqual( Stem("rallenta"), "rallent" );
	deepEqual( Stem("rallentamento"), "rallent" );
	deepEqual( Stem("rallentando"), "rallent" );
	deepEqual( Stem("rallentare"), "rallent" );
	deepEqual( Stem("rallentarono"), "rallent" );
	deepEqual( Stem("rallentarsi"), "rallent" );
	deepEqual( Stem("rallentavano"), "rallent" );
	deepEqual( Stem("rallentò"), "rallent" );
	deepEqual( Stem("rally"), "rally" );
	deepEqual( Stem("ram"), "ram" );
	deepEqual( Stem("ramadan"), "ramadan" );
	deepEqual( Stem("rambaldo"), "rambald" );
	deepEqual( Stem("rambaudi"), "rambaud" );
	deepEqual( Stem("rametti"), "ramett" );
	deepEqual( Stem("rami"), "ram" );
	deepEqual( Stem("ramificano"), "ramific" );
	deepEqual( Stem("raminga"), "raming" );
	deepEqual( Stem("ramingo"), "raming" );
	deepEqual( Stem("ramione"), "ramion" );
	deepEqual( Stem("ramiro"), "ramir" );
	deepEqual( Stem("rammarica"), "rammar" );
	deepEqual( Stem("rammaricarsi"), "rammaric" );
	deepEqual( Stem("rammaricato"), "rammaric" );
	deepEqual( Stem("rammaricava"), "rammaric" );
	deepEqual( Stem("rammarichìo"), "rammarichì" );
	deepEqual( Stem("rammarico"), "rammar" );
	deepEqual( Stem("rammatico"), "rammat" );
	deepEqual( Stem("rammentandosi"), "ramment" );
	deepEqual( Stem("rammentar"), "ramment" );
	deepEqual( Stem("rammentarsi"), "ramment" );
	deepEqual( Stem("rammentasse"), "ramment" );
	deepEqual( Stem("rammentate"), "ramment" );
	deepEqual( Stem("rammentava"), "ramment" );
	deepEqual( Stem("rammentavan"), "rammentavan" );
	deepEqual( Stem("rammentavano"), "ramment" );
	deepEqual( Stem("rammenti"), "ramment" );
	deepEqual( Stem("rammentò"), "ramment" );
	deepEqual( Stem("ramo"), "ram" );
	deepEqual( Stem("ramon"), "ramon" );
	deepEqual( Stem("rampolli"), "rampoll" );
	deepEqual( Stem("rampulla"), "rampull" );
	deepEqual( Stem("ramzi"), "ramz" );
	deepEqual( Stem("rancore"), "rancor" );
	deepEqual( Stem("rancori"), "rancor" );
	deepEqual( Stem("randello"), "randell" );
	deepEqual( Stem("randy"), "randy" );
	deepEqual( Stem("rangers"), "rangers" );
	deepEqual( Stem("ranieri"), "ranier" );
	deepEqual( Stem("rannicchiarsi"), "rannicc" );
	deepEqual( Stem("rannicchiata"), "rannicc" );
	deepEqual( Stem("rannicchiati"), "rannicc" );
	deepEqual( Stem("rannicchiato"), "rannicc" );
	deepEqual( Stem("rannicchiò"), "rannicc" );
	deepEqual( Stem("rannuvolata"), "rannuvol" );
	deepEqual( Stem("rannuvolato"), "rannuvol" );
	deepEqual( Stem("rao"), "rao" );
	deepEqual( Stem("rap"), "rap" );
	deepEqual( Stem("rapatè"), "rapat" );
	deepEqual( Stem("rapid"), "rapid" );
	deepEqual( Stem("rapida"), "rapid" );
	deepEqual( Stem("rapidamente"), "rapid" );
	deepEqual( Stem("rapidi"), "rapid" );
	deepEqual( Stem("rapidissima"), "rapidissim" );
	deepEqual( Stem("rapidità"), "rapid" );
	deepEqual( Stem("rapido"), "rapid" );
	deepEqual( Stem("rapimenti"), "rap" );
	deepEqual( Stem("rapimento"), "rap" );
	deepEqual( Stem("rapina"), "rapin" );
	deepEqual( Stem("rapinate"), "rapin" );
	deepEqual( Stem("rapinatori"), "rapin" );
	deepEqual( Stem("rapine"), "rapin" );
	deepEqual( Stem("rapisce"), "rap" );
	deepEqual( Stem("rapiscono"), "rap" );
	deepEqual( Stem("rapita"), "rap" );
	deepEqual( Stem("rapite"), "rap" );
	deepEqual( Stem("rapito"), "rap" );
	deepEqual( Stem("rapitori"), "rapitor" );
	deepEqual( Stem("rapportare"), "rapport" );
	deepEqual( Stem("rapportarono"), "rapport" );
	deepEqual( Stem("rapportata"), "rapport" );
	deepEqual( Stem("rapportato"), "rapport" );
	deepEqual( Stem("rapporti"), "rapport" );
	deepEqual( Stem("rapporto"), "rapport" );
	deepEqual( Stem("rapportò"), "rapport" );
	deepEqual( Stem("rappporti"), "rappport" );
	deepEqual( Stem("rappresaglia"), "rappresagl" );
	deepEqual( Stem("rappresenta"), "rappresent" );
	deepEqual( Stem("rappresentando"), "rappresent" );
	deepEqual( Stem("rappresentano"), "rappresent" );
	deepEqual( Stem("rappresentante"), "rappresent" );
	deepEqual( Stem("rappresentanti"), "rappresent" );
	deepEqual( Stem("rappresentanza"), "rappresent" );
	deepEqual( Stem("rappresentanze"), "rappresent" );
	deepEqual( Stem("rappresentar"), "rappresent" );
	deepEqual( Stem("rappresentare"), "rappresent" );
	deepEqual( Stem("rappresentarle"), "rappresent" );
	deepEqual( Stem("rappresentassero"), "rappresent" );
	deepEqual( Stem("rappresentata"), "rappresent" );
	deepEqual( Stem("rappresentate"), "rappresent" );
	deepEqual( Stem("rappresentati"), "rappresent" );
	deepEqual( Stem("rappresentative"), "rappresent" );
	deepEqual( Stem("rappresentativo"), "rappresent" );
	deepEqual( Stem("rappresentato"), "rappresent" );
	deepEqual( Stem("rappresentava"), "rappresent" );
	deepEqual( Stem("rappresentavan"), "rappresentavan" );
	deepEqual( Stem("rappresentazione"), "rappresent" );
	deepEqual( Stem("rappresenti"), "rappresent" );
	deepEqual( Stem("rappresento"), "rappresent" );
	deepEqual( Stem("rappresentò"), "rappresent" );
	deepEqual( Stem("rappresntanti"), "rappresnt" );
	deepEqual( Stem("raprpesenta"), "raprpesent" );
	deepEqual( Stem("rapto"), "rapt" );
	deepEqual( Stem("raptus"), "raptus" );
	deepEqual( Stem("rara"), "rar" );
	deepEqual( Stem("rare"), "rar" );
	deepEqual( Stem("rari"), "rar" );
	deepEqual( Stem("rarità"), "rarit" );
	deepEqual( Stem("raro"), "rar" );
	deepEqual( Stem("ras"), "ras" );
	deepEqual( Stem("rasa"), "ras" );
	deepEqual( Stem("rasentando"), "rasent" );
	deepEqual( Stem("rasentare"), "rasent" );
	deepEqual( Stem("rasente"), "rasent" );
	deepEqual( Stem("rashid"), "rashid" );
	deepEqual( Stem("rasi"), "ras" );
	deepEqual( Stem("rasim"), "rasim" );
	deepEqual( Stem("raso"), "ras" );
	deepEqual( Stem("rasoterra"), "rasoterr" );
	deepEqual( Stem("rasotterra"), "rasotterr" );
	deepEqual( Stem("rasputin"), "rasputin" );
	deepEqual( Stem("rassegna"), "rassegn" );
	deepEqual( Stem("rassegnarci"), "rassegn" );
	deepEqual( Stem("rassegnarsi"), "rassegn" );
	deepEqual( Stem("rassegnasse"), "rassegn" );
	deepEqual( Stem("rassegnata"), "rassegn" );
	deepEqual( Stem("rassegnate"), "rassegn" );
	deepEqual( Stem("rassegnatevi"), "rassegnat" );
	deepEqual( Stem("rassegnati"), "rassegn" );
	deepEqual( Stem("rassegnato"), "rassegn" );
	deepEqual( Stem("rassegnazione"), "rassegn" );
	deepEqual( Stem("rassegnerò"), "rassegn" );
	deepEqual( Stem("rassegno"), "rassegn" );
	deepEqual( Stem("rasserenamentò"), "rasserenament" );
	deepEqual( Stem("rasserenato"), "rasseren" );
	deepEqual( Stem("rassettar"), "rassett" );
	deepEqual( Stem("rassicurando"), "rassicur" );
	deepEqual( Stem("rassicurandolo"), "rassicur" );
	deepEqual( Stem("rassicurante"), "rassicur" );
	deepEqual( Stem("rassicuranti"), "rassicur" );
	deepEqual( Stem("rassicurare"), "rassicur" );
	deepEqual( Stem("rassicurarlo"), "rassicur" );
	deepEqual( Stem("rassicurato"), "rassicur" );
	deepEqual( Stem("rassicurava"), "rassicur" );
	deepEqual( Stem("rassomigliavan"), "rassomigliavan" );
	deepEqual( Stem("rastelli"), "rastell" );
	deepEqual( Stem("rastrelli"), "rastrell" );
	deepEqual( Stem("rata"), "rat" );
	deepEqual( Stem("ratajczak"), "ratajczak" );
	deepEqual( Stem("ratè"), "rat" );
	deepEqual( Stem("ratifica"), "ratif" );
	deepEqual( Stem("ratificata"), "ratific" );
	deepEqual( Stem("ratificato"), "ratific" );
	deepEqual( Stem("ratificazione"), "ratif" );
	deepEqual( Stem("ratificherà"), "ratific" );
	deepEqual( Stem("rating"), "rating" );
	deepEqual( Stem("ratio"), "rat" );
	deepEqual( Stem("ratiò"), "rat" );
	deepEqual( Stem("rattenendo"), "ratten" );
	deepEqual( Stem("rattenere"), "ratten" );
	deepEqual( Stem("rattenerne"), "ratten" );
	deepEqual( Stem("rattenuta"), "ratten" );
	deepEqual( Stem("rattenute"), "ratten" );
	deepEqual( Stem("rattenuto"), "ratten" );
	deepEqual( Stem("ratti"), "ratt" );
	deepEqual( Stem("rattoppare"), "rattopp" );
	deepEqual( Stem("rattopparle"), "rattopp" );
	deepEqual( Stem("rattrista"), "rattrist" );
	deepEqual( Stem("rattristato"), "rattrist" );
	deepEqual( Stem("rattristava"), "rattrist" );
	deepEqual( Stem("rauti"), "raut" );
	deepEqual( Stem("ravanelli"), "ravanell" );
	deepEqual( Stem("ravasi"), "ravas" );
	deepEqual( Stem("raveggioli"), "raveggiol" );
	deepEqual( Stem("ravenna"), "ravenn" );
	deepEqual( Stem("ravennate"), "ravenn" );
	deepEqual( Stem("ravveda"), "ravved" );
	deepEqual( Stem("ravvedere"), "ravved" );
	deepEqual( Stem("ravvedeva"), "ravved" );
	deepEqual( Stem("ravvedimento"), "ravved" );
	deepEqual( Stem("ravveduta"), "ravved" );
	deepEqual( Stem("ravviare"), "ravv" );
	deepEqual( Stem("ravviarla"), "ravv" );
	deepEqual( Stem("ravvicinata"), "ravvicin" );
	deepEqual( Stem("ravvicinato"), "ravvicin" );
	deepEqual( Stem("ravvicinava"), "ravvicin" );
	deepEqual( Stem("ravvicinavano"), "ravvicin" );
	deepEqual( Stem("ravvicinerebbero"), "ravvicin" );
	deepEqual( Stem("ravvisarsi"), "ravvis" );
	deepEqual( Stem("ravvisato"), "ravvis" );
	deepEqual( Stem("ravvivasse"), "ravviv" );
	deepEqual( Stem("ravvolgevan"), "ravvolgevan" );
	deepEqual( Stem("ravvolse"), "ravvols" );
	deepEqual( Stem("ravvolte"), "ravvolt" );
	deepEqual( Stem("ravvolto"), "ravvolt" );
	deepEqual( Stem("raymond"), "raymond" );
	deepEqual( Stem("rayton"), "rayton" );
	deepEqual( Stem("razionalizzare"), "razionalizz" );
	deepEqual( Stem("razza"), "razz" );
	deepEqual( Stem("razziali"), "razzial" );
	deepEqual( Stem("razzismo"), "razzism" );
	deepEqual( Stem("razzisti"), "razzist" );
	deepEqual( Stem("razzo"), "razz" );
	deepEqual( Stem("rb"), "rb" );
	deepEqual( Stem("rc"), "rc" );
	deepEqual( Stem("rdb"), "rdb" );
	deepEqual( Stem("rdt"), "rdt" );
	deepEqual( Stem("re"), "re" );
	deepEqual( Stem("rea"), "rea" );
	deepEqual( Stem("reagan"), "reagan" );
	deepEqual( Stem("reagì"), "reag" );
	deepEqual( Stem("reagire"), "reag" );
	deepEqual( Stem("reagisce"), "reag" );
	deepEqual( Stem("reagiscono"), "reag" );
	deepEqual( Stem("reagito"), "reag" );
	deepEqual( Stem("real"), "real" );
	deepEqual( Stem("reale"), "real" );
	deepEqual( Stem("realè"), "real" );
	deepEqual( Stem("reali"), "real" );
	deepEqual( Stem("realistico"), "realist" );
	deepEqual( Stem("realizza"), "realizz" );
	deepEqual( Stem("realizzando"), "realizz" );
	deepEqual( Stem("realizzano"), "realizz" );
	deepEqual( Stem("realizzare"), "realizz" );
	deepEqual( Stem("realizzarli"), "realizz" );
	deepEqual( Stem("realizzarsi"), "realizz" );
	deepEqual( Stem("realizzassero"), "realizz" );
	deepEqual( Stem("realizzata"), "realizz" );
	deepEqual( Stem("realizzate"), "realizz" );
	deepEqual( Stem("realizzati"), "realizz" );
	deepEqual( Stem("realizzativa"), "realizz" );
	deepEqual( Stem("realizzato"), "realizz" );
	deepEqual( Stem("realizzazione"), "realizz" );
	deepEqual( Stem("realizzerà"), "realizz" );
	deepEqual( Stem("realizzi"), "realizz" );
	deepEqual( Stem("realizzino"), "realizzin" );
	deepEqual( Stem("realmente"), "realment" );
	deepEqual( Stem("realtà"), "realt" );
	deepEqual( Stem("reati"), "reat" );
	deepEqual( Stem("reato"), "reat" );
	deepEqual( Stem("reattore"), "reattor" );
	deepEqual( Stem("reattori"), "reattor" );
	deepEqual( Stem("reazionaria"), "reazionar" );
	deepEqual( Stem("reazione"), "reazion" );
	deepEqual( Stem("reazioni"), "reazion" );
	deepEqual( Stem("rebbekka"), "rebbekk" );
	deepEqual( Stem("rebecchi"), "rebecc" );
	deepEqual( Stem("rebecchini"), "rebecchin" );
	deepEqual( Stem("rebekka"), "rebekk" );
	deepEqual( Stem("rebellin"), "rebellin" );
	deepEqual( Stem("rec"), "rec" );
	deepEqual( Stem("reca"), "rec" );
	deepEqual( Stem("recandosi"), "rec" );
	deepEqual( Stem("recano"), "rec" );
	deepEqual( Stem("recante"), "recant" );
	deepEqual( Stem("recapitare"), "recapit" );
	deepEqual( Stem("recapitarla"), "recapit" );
	deepEqual( Stem("recapito"), "recap" );
	deepEqual( Stem("recarsi"), "rec" );
	deepEqual( Stem("recasse"), "rec" );
	deepEqual( Stem("recati"), "rec" );
	deepEqual( Stem("recato"), "rec" );
	deepEqual( Stem("recava"), "rec" );
	deepEqual( Stem("recchia"), "recc" );
	deepEqual( Stem("recente"), "recent" );
	deepEqual( Stem("recentemente"), "recent" );
	deepEqual( Stem("recenti"), "recent" );
	deepEqual( Stem("recentissime"), "recentissim" );
	deepEqual( Stem("recentissimo"), "recentissim" );
	deepEqual( Stem("recepisce"), "recep" );
	deepEqual( Stem("recessione"), "recession" );
	deepEqual( Stem("recessiva"), "recess" );
	deepEqual( Stem("recherà"), "rech" );
	deepEqual( Stem("recidiva"), "recid" );
	deepEqual( Stem("recinto"), "recint" );
	deepEqual( Stem("recinzione"), "recinzion" );
	deepEqual( Stem("recinzioni"), "recinzion" );
	deepEqual( Stem("reciproca"), "reciproc" );
	deepEqual( Stem("reciprocamente"), "reciproc" );
	deepEqual( Stem("reciproche"), "reciproc" );
	deepEqual( Stem("reciproci"), "reciproc" );
	deepEqual( Stem("recita"), "rec" );
	deepEqual( Stem("recitar"), "recit" );
	deepEqual( Stem("recitarle"), "recit" );
	deepEqual( Stem("recitarono"), "recit" );
	deepEqual( Stem("recitata"), "recit" );
	deepEqual( Stem("recitato"), "recit" );
	deepEqual( Stem("recitava"), "recit" );
	deepEqual( Stem("recitò"), "recit" );
	deepEqual( Stem("reclamare"), "reclam" );
	deepEqual( Stem("reclamo"), "reclam" );
	deepEqual( Stem("reclusione"), "reclusion" );
	deepEqual( Stem("reclutamento"), "reclut" );
	deepEqual( Stem("reconditi"), "recond" );
	deepEqual( Stem("reconocer"), "reconocer" );
	deepEqual( Stem("record"), "record" );
	deepEqual( Stem("recordati"), "record" );
	deepEqual( Stem("recordo"), "record" );
	deepEqual( Stem("recrimina"), "recrimin" );
	deepEqual( Stem("recriminare"), "recrimin" );
	deepEqual( Stem("recriminazioni"), "recrimin" );
	deepEqual( Stem("recrimini"), "recrimin" );
	deepEqual( Stem("recrudescenzà"), "recrudescenz" );
	deepEqual( Stem("recupera"), "recuper" );
	deepEqual( Stem("recuperando"), "recuper" );
	deepEqual( Stem("recuperare"), "recuper" );
	deepEqual( Stem("recuperata"), "recuper" );
	deepEqual( Stem("recuperate"), "recuper" );
	deepEqual( Stem("recuperato"), "recuper" );
	deepEqual( Stem("recupereranno"), "recuper" );
	deepEqual( Stem("recupero"), "recuper" );
	deepEqual( Stem("red"), "red" );
	deepEqual( Stem("redatti"), "redatt" );
	deepEqual( Stem("redattore"), "redattor" );
	deepEqual( Stem("redattori"), "redattor" );
	deepEqual( Stem("redazionali"), "redazional" );
	deepEqual( Stem("redazione"), "redazion" );
	deepEqual( Stem("redd"), "redd" );
	deepEqual( Stem("redditi"), "redd" );
	deepEqual( Stem("redditività"), "reddit" );
	deepEqual( Stem("redditizio"), "redditiz" );
	deepEqual( Stem("reddito"), "redd" );
	deepEqual( Stem("redditosette"), "redditosett" );
	deepEqual( Stem("redenzione"), "redenzion" );
	deepEqual( Stem("redesa"), "redes" );
	deepEqual( Stem("redigono"), "redig" );
	deepEqual( Stem("redimibile"), "redim" );
	deepEqual( Stem("redini"), "redin" );
	deepEqual( Stem("redistribuzione"), "redistribu" );
	deepEqual( Stem("reduce"), "reduc" );
	deepEqual( Stem("reduci"), "reduc" );
	deepEqual( Stem("referatis"), "referatis" );
	deepEqual( Stem("referendum"), "referendum" );
	deepEqual( Stem("referenti"), "referent" );
	deepEqual( Stem("refezione"), "refezion" );
	deepEqual( Stem("reforma"), "reform" );
	deepEqual( Stem("refrigerio"), "refriger" );
	deepEqual( Stem("refrontolo"), "refrontol" );
	deepEqual( Stem("regala"), "regal" );
	deepEqual( Stem("regalando"), "regal" );
	deepEqual( Stem("regalar"), "regal" );
	deepEqual( Stem("regalare"), "regal" );
	deepEqual( Stem("regalata"), "regal" );
	deepEqual( Stem("regalato"), "regal" );
	deepEqual( Stem("regali"), "regal" );
	deepEqual( Stem("regalia"), "regal" );
	deepEqual( Stem("regalo"), "regal" );
	deepEqual( Stem("regge"), "regg" );
	deepEqual( Stem("reggendolo"), "regg" );
	deepEqual( Stem("regger"), "regger" );
	deepEqual( Stem("reggere"), "regg" );
	deepEqual( Stem("reggersi"), "regg" );
	deepEqual( Stem("reggesse"), "reggess" );
	deepEqual( Stem("reggeva"), "regg" );
	deepEqual( Stem("reggiana"), "reggian" );
	deepEqual( Stem("reggiano"), "regg" );
	deepEqual( Stem("reggimenti"), "regg" );
	deepEqual( Stem("reggimento"), "regg" );
	deepEqual( Stem("reggina"), "reggin" );
	deepEqual( Stem("reggio"), "regg" );
	deepEqual( Stem("regia"), "reg" );
	deepEqual( Stem("regii"), "reg" );
	deepEqual( Stem("regime"), "regim" );
	deepEqual( Stem("regimi"), "regim" );
	deepEqual( Stem("regina"), "regin" );
	deepEqual( Stem("reginald"), "reginald" );
	deepEqual( Stem("regine"), "regin" );
	deepEqual( Stem("reginetta"), "reginett" );
	deepEqual( Stem("regio"), "reg" );
	deepEqual( Stem("regional"), "regional" );
	deepEqual( Stem("regionale"), "regional" );
	deepEqual( Stem("regionali"), "regional" );
	deepEqual( Stem("regionalista"), "regional" );
	deepEqual( Stem("regione"), "region" );
	deepEqual( Stem("regioni"), "region" );
	deepEqual( Stem("regisseure"), "regisseur" );
	deepEqual( Stem("regissuere"), "regissu" );
	deepEqual( Stem("regista"), "regist" );
	deepEqual( Stem("registi"), "regist" );
	deepEqual( Stem("registra"), "registr" );
	deepEqual( Stem("registrano"), "registr" );
	deepEqual( Stem("registrare"), "registr" );
	deepEqual( Stem("registrata"), "registr" );
	deepEqual( Stem("registrate"), "registr" );
	deepEqual( Stem("registrati"), "registr" );
	deepEqual( Stem("registratisi"), "registratis" );
	deepEqual( Stem("registrato"), "registr" );
	deepEqual( Stem("registrava"), "registr" );
	deepEqual( Stem("registrazione"), "registr" );
	deepEqual( Stem("registrazioni"), "registr" );
	deepEqual( Stem("registri"), "registr" );
	deepEqual( Stem("registro"), "registr" );
	deepEqual( Stem("regna"), "regn" );
	deepEqual( Stem("regnante"), "regnant" );
	deepEqual( Stem("regnar"), "regn" );
	deepEqual( Stem("regnare"), "regn" );
	deepEqual( Stem("regnasse"), "regn" );
	deepEqual( Stem("regnato"), "regn" );
	deepEqual( Stem("regnava"), "regn" );
	deepEqual( Stem("regni"), "regn" );
	deepEqual( Stem("regno"), "regn" );
	deepEqual( Stem("regola"), "regol" );
	deepEqual( Stem("regolamentare"), "regolament" );
	deepEqual( Stem("regolamentazione"), "regolament" );
	deepEqual( Stem("regolamenti"), "regol" );
	deepEqual( Stem("regolamento"), "regol" );
	deepEqual( Stem("regolano"), "regol" );
	deepEqual( Stem("regolare"), "regol" );
	deepEqual( Stem("regolari"), "regolar" );
	deepEqual( Stem("regolarità"), "regolar" );
	deepEqual( Stem("regolarmente"), "regolar" );
	deepEqual( Stem("regolarsi"), "regol" );
	deepEqual( Stem("regolata"), "regol" );
	deepEqual( Stem("regolati"), "regol" );
	deepEqual( Stem("regolato"), "regol" );
	deepEqual( Stem("regolatore"), "regol" );
	deepEqual( Stem("regolatori"), "regol" );
	deepEqual( Stem("regolava"), "regol" );
	deepEqual( Stem("regolavan"), "regolavan" );
	deepEqual( Stem("regolavano"), "regol" );
	deepEqual( Stem("regolazione"), "regol" );
	deepEqual( Stem("regole"), "regol" );
	deepEqual( Stem("regresso"), "regress" );
	deepEqual( Stem("regulation"), "regulation" );
	deepEqual( Stem("rei"), "rei" );
	deepEqual( Stem("reigoni"), "reigon" );
	deepEqual( Stem("reimbarco"), "reimbarc" );
	deepEqual( Stem("reimpiego"), "reimpieg" );
	deepEqual( Stem("reincarnazione"), "reincarn" );
	deepEqual( Stem("reinelt"), "reinelt" );
	deepEqual( Stem("reinterpeta"), "reinterpet" );
	deepEqual( Stem("reinterpretata"), "reinterpret" );
	deepEqual( Stem("reinterpretato"), "reinterpret" );
	deepEqual( Stem("reintrodurre"), "reintrodurr" );
	deepEqual( Stem("reitera"), "reiter" );
	deepEqual( Stem("reiterato"), "reiter" );
	deepEqual( Stem("reiterazione"), "reiter" );
	deepEqual( Stem("reitz"), "reitz" );
	deepEqual( Stem("rejna"), "rejn" );
	deepEqual( Stem("relatione"), "relation" );
	deepEqual( Stem("relations"), "relations" );
	deepEqual( Stem("relativa"), "relat" );
	deepEqual( Stem("relativamente"), "relat" );
	deepEqual( Stem("relative"), "relat" );
	deepEqual( Stem("relativi"), "relat" );
	deepEqual( Stem("relativismo"), "relativ" );
	deepEqual( Stem("relativo"), "relat" );
	deepEqual( Stem("relato"), "rel" );
	deepEqual( Stem("relatore"), "relator" );
	deepEqual( Stem("relatori"), "relator" );
	deepEqual( Stem("relazione"), "relazion" );
	deepEqual( Stem("relazioni"), "relazion" );
	deepEqual( Stem("relegati"), "releg" );
	deepEqual( Stem("relegatione"), "relegation" );
	deepEqual( Stem("religione"), "religion" );
	deepEqual( Stem("religioni"), "religion" );
	deepEqual( Stem("religiosa"), "relig" );
	deepEqual( Stem("religiose"), "relig" );
	deepEqual( Stem("religiosi"), "relig" );
	deepEqual( Stem("religioso"), "relig" );
	deepEqual( Stem("reliquia"), "reliqu" );
	deepEqual( Stem("reliquie"), "reliqu" );
	deepEqual( Stem("relitti"), "relitt" );
	deepEqual( Stem("relizane"), "relizan" );
	deepEqual( Stem("rem"), "rem" );
	deepEqual( Stem("remando"), "rem" );
	deepEqual( Stem("remi"), "rem" );
	deepEqual( Stem("remigio"), "remig" );
	deepEqual( Stem("remissione"), "remission" );
	deepEqual( Stem("remo"), "rem" );
	deepEqual( Stem("remora"), "remor" );
	deepEqual( Stem("remote"), "remot" );
	deepEqual( Stem("renali"), "renal" );
	deepEqual( Stem("renano"), "ren" );
	deepEqual( Stem("renato"), "ren" );
	deepEqual( Stem("renault"), "renault" );
	deepEqual( Stem("renda"), "rend" );
	deepEqual( Stem("rende"), "rend" );
	deepEqual( Stem("rendé"), "rend" );
	deepEqual( Stem("rendendo"), "rend" );
	deepEqual( Stem("rendendogli"), "rend" );
	deepEqual( Stem("rendendoli"), "rend" );
	deepEqual( Stem("render"), "render" );
	deepEqual( Stem("renderà"), "rend" );
	deepEqual( Stem("renderai"), "rend" );
	deepEqual( Stem("renderci"), "rend" );
	deepEqual( Stem("rendere"), "rend" );
	deepEqual( Stem("renderebbe"), "rend" );
	deepEqual( Stem("rendergli"), "rend" );
	deepEqual( Stem("renderla"), "rend" );
	deepEqual( Stem("renderle"), "rend" );
	deepEqual( Stem("renderli"), "rend" );
	deepEqual( Stem("renderlo"), "rend" );
	deepEqual( Stem("rendermi"), "rend" );
	deepEqual( Stem("renderò"), "rend" );
	deepEqual( Stem("rendersi"), "rend" );
	deepEqual( Stem("rendervi"), "rend" );
	deepEqual( Stem("rendetelo"), "rendetel" );
	deepEqual( Stem("rendette"), "rendett" );
	deepEqual( Stem("rendeva"), "rend" );
	deepEqual( Stem("rendevan"), "rendevan" );
	deepEqual( Stem("rendevano"), "rend" );
	deepEqual( Stem("rendi"), "rend" );
	deepEqual( Stem("rendiam"), "rendiam" );
	deepEqual( Stem("rendiamo"), "rend" );
	deepEqual( Stem("rendicredit"), "rendicredit" );
	deepEqual( Stem("rendifit"), "rendifit" );
	deepEqual( Stem("rendifondo"), "rendifond" );
	deepEqual( Stem("rendimenti"), "rend" );
	deepEqual( Stem("rendimento"), "rend" );
	deepEqual( Stem("rendiras"), "rendiras" );
	deepEqual( Stem("rendita"), "rend" );
	deepEqual( Stem("rendite"), "rend" );
	deepEqual( Stem("rendono"), "rend" );
	deepEqual( Stem("rene"), "ren" );
	deepEqual( Stem("renè"), "ren" );
	deepEqual( Stem("renitenti"), "renitent" );
	deepEqual( Stem("rennes"), "rennes" );
	deepEqual( Stem("reno"), "ren" );
	deepEqual( Stem("renzo"), "renz" );
	deepEqual( Stem("reo"), "reo" );
	deepEqual( Stem("reogresso"), "reogress" );
	deepEqual( Stem("rep"), "rep" );
	deepEqual( Stem("reparti"), "rep" );
	deepEqual( Stem("reparto"), "repart" );
	deepEqual( Stem("repentaglio"), "repentagl" );
	deepEqual( Stem("repentina"), "repentin" );
	deepEqual( Stem("repentine"), "repentin" );
	deepEqual( Stem("repentino"), "repentin" );
	deepEqual( Stem("reperire"), "reper" );
	deepEqual( Stem("repertum"), "repertum" );
	deepEqual( Stem("replica"), "replic" );
	deepEqual( Stem("replicando"), "replic" );
	deepEqual( Stem("replicar"), "replic" );
	deepEqual( Stem("replicare"), "replic" );
	deepEqual( Stem("replicatamente"), "replicat" );
	deepEqual( Stem("replicato"), "replic" );
	deepEqual( Stem("replicava"), "replic" );
	deepEqual( Stem("replicò"), "replic" );
	deepEqual( Stem("reponsabili"), "repons" );
	deepEqual( Stem("reporter"), "reporter" );
	deepEqual( Stem("repressione"), "repression" );
	deepEqual( Stem("repressiva"), "repress" );
	deepEqual( Stem("repressivi"), "repress" );
	deepEqual( Stem("represso"), "repress" );
	deepEqual( Stem("reprimere"), "reprim" );
	deepEqual( Stem("repubblica"), "repubbl" );
	deepEqual( Stem("repubblicà"), "repubblic" );
	deepEqual( Stem("repubblicana"), "repubblican" );
	deepEqual( Stem("repubblicani"), "repubblican" );
	deepEqual( Stem("repubblicano"), "repubblic" );
	deepEqual( Stem("repubbliche"), "repubbl" );
	deepEqual( Stem("reputazione"), "reput" );
	deepEqual( Stem("requie"), "requ" );
	deepEqual( Stem("requisiti"), "requis" );
	deepEqual( Stem("requisitoria"), "requisitor" );
	deepEqual( Stem("rerum"), "rerum" );
	deepEqual( Stem("resa"), "res" );
	deepEqual( Stem("rese"), "res" );
	deepEqual( Stem("resegone"), "resegon" );
	deepEqual( Stem("resero"), "reser" );
	deepEqual( Stem("reserve"), "reserv" );
	deepEqual( Stem("reservè"), "reserv" );
	deepEqual( Stem("reshetnikova"), "reshetnikov" );
	deepEqual( Stem("resi"), "res" );
	deepEqual( Stem("residente"), "resident" );
	deepEqual( Stem("residenti"), "resident" );
	deepEqual( Stem("residenziale"), "residenzial" );
	deepEqual( Stem("residui"), "residu" );
	deepEqual( Stem("residuo"), "residu" );
	deepEqual( Stem("resistenti"), "resistent" );
	deepEqual( Stem("resistenza"), "resistent" );
	deepEqual( Stem("resistenze"), "resistent" );
	deepEqual( Stem("resistere"), "resist" );
	deepEqual( Stem("resistergli"), "resist" );
	deepEqual( Stem("resistette"), "resistett" );
	deepEqual( Stem("resistevano"), "resist" );
	deepEqual( Stem("resisti"), "resist" );
	deepEqual( Stem("resistire"), "resist" );
	deepEqual( Stem("resistito"), "resist" );
	deepEqual( Stem("reso"), "res" );
	deepEqual( Stem("resoconto"), "resocont" );
	deepEqual( Stem("resogli"), "resogl" );
	deepEqual( Stem("resosi"), "resos" );
	deepEqual( Stem("respinge"), "resping" );
	deepEqual( Stem("respingendoli"), "resping" );
	deepEqual( Stem("respinger"), "respinger" );
	deepEqual( Stem("respingere"), "resping" );
	deepEqual( Stem("respinsero"), "respinser" );
	deepEqual( Stem("respinta"), "respint" );
	deepEqual( Stem("respinti"), "respint" );
	deepEqual( Stem("respinto"), "respint" );
	deepEqual( Stem("respira"), "respir" );
	deepEqual( Stem("respirare"), "respir" );
	deepEqual( Stem("respirarono"), "respir" );
	deepEqual( Stem("respirata"), "respir" );
	deepEqual( Stem("respiratoria"), "respirator" );
	deepEqual( Stem("respirava"), "respir" );
	deepEqual( Stem("respirazione"), "respir" );
	deepEqual( Stem("respiri"), "respir" );
	deepEqual( Stem("respiro"), "respir" );
	deepEqual( Stem("respirò"), "resp" );
	deepEqual( Stem("respironi"), "respiron" );
	deepEqual( Stem("responsabile"), "respons" );
	deepEqual( Stem("responsabili"), "respons" );
	deepEqual( Stem("responsabilità"), "respons" );
	deepEqual( Stem("responsabilmente"), "responsabil" );
	deepEqual( Stem("responsbili"), "responsbil" );
	deepEqual( Stem("responso"), "respons" );
	deepEqual( Stem("resposabili"), "respos" );
	deepEqual( Stem("ressa"), "ress" );
	deepEqual( Stem("resta"), "rest" );
	deepEqual( Stem("restando"), "rest" );
	deepEqual( Stem("restandogli"), "rest" );
	deepEqual( Stem("restano"), "rest" );
	deepEqual( Stem("restante"), "restant" );
	deepEqual( Stem("restanti"), "restant" );
	deepEqual( Stem("restar"), "rest" );
	deepEqual( Stem("restare"), "rest" );
	deepEqual( Stem("restaron"), "restaron" );
	deepEqual( Stem("restarsene"), "rest" );
	deepEqual( Stem("restassero"), "rest" );
	deepEqual( Stem("restata"), "rest" );
	deepEqual( Stem("restate"), "rest" );
	deepEqual( Stem("restati"), "rest" );
	deepEqual( Stem("restato"), "rest" );
	deepEqual( Stem("restaurare"), "restaur" );
	deepEqual( Stem("restaurato"), "restaur" );
	deepEqual( Stem("restauro"), "restaur" );
	deepEqual( Stem("restava"), "rest" );
	deepEqual( Stem("restavano"), "rest" );
	deepEqual( Stem("resterà"), "rest" );
	deepEqual( Stem("resterebbe"), "rest" );
	deepEqual( Stem("resterebbero"), "rest" );
	deepEqual( Stem("resterei"), "rest" );
	deepEqual( Stem("resteremo"), "rest" );
	deepEqual( Stem("resti"), "rest" );
	deepEqual( Stem("restiam"), "restiam" );
	deepEqual( Stem("resticciolo"), "resticciol" );
	deepEqual( Stem("restino"), "restin" );
	deepEqual( Stem("restìo"), "restì" );
	deepEqual( Stem("restituendola"), "restitu" );
	deepEqual( Stem("restituì"), "restitu" );
	deepEqual( Stem("restituir"), "restitu" );
	deepEqual( Stem("restituire"), "restitu" );
	deepEqual( Stem("restituirglielo"), "restitu" );
	deepEqual( Stem("restituita"), "restitu" );
	deepEqual( Stem("restituite"), "restitu" );
	deepEqual( Stem("restituiti"), "restitu" );
	deepEqual( Stem("restituito"), "restitu" );
	deepEqual( Stem("restitutione"), "restitution" );
	deepEqual( Stem("restituzione"), "restitu" );
	deepEqual( Stem("resto"), "rest" );
	deepEqual( Stem("restò"), "rest" );
	deepEqual( Stem("restrittivo"), "restritt" );
	deepEqual( Stem("restrizioni"), "restrizion" );
	deepEqual( Stem("restyling"), "restyling" );
	deepEqual( Stem("resurrezione"), "resurrezion" );
	deepEqual( Stem("resuscitare"), "resuscit" );
	deepEqual( Stem("resuscitati"), "resuscit" );
	deepEqual( Stem("resuscitato"), "resuscit" );
	deepEqual( Stem("retagna"), "retagn" );
	deepEqual( Stem("retail"), "retail" );
	deepEqual( Stem("retata"), "ret" );
	deepEqual( Stem("retate"), "ret" );
	deepEqual( Stem("rete"), "ret" );
	deepEqual( Stem("retè"), "ret" );
	deepEqual( Stem("retequattro"), "retequattr" );
	deepEqual( Stem("reti"), "ret" );
	deepEqual( Stem("reticella"), "reticell" );
	deepEqual( Stem("reticelle"), "reticell" );
	deepEqual( Stem("reticente"), "reticent" );
	deepEqual( Stem("reticentè"), "reticent" );
	deepEqual( Stem("reticenze"), "reticent" );
	deepEqual( Stem("reto"), "ret" );
	deepEqual( Stem("retorica"), "retor" );
	deepEqual( Stem("retributivi"), "retribut" );
	deepEqual( Stem("retributivo"), "retribut" );
	deepEqual( Stem("retribuzione"), "retribu" );
	deepEqual( Stem("retribuzioni"), "retribu" );
	deepEqual( Stem("retrocessione"), "retrocession" );
	deepEqual( Stem("retroguardia"), "retroguard" );
	deepEqual( Stem("retroscena"), "retroscen" );
	deepEqual( Stem("retrospettiva"), "retrospett" );
	deepEqual( Stem("retrostante"), "retrost" );
	deepEqual( Stem("retta"), "rett" );
	deepEqual( Stem("rettifica"), "rettif" );
	deepEqual( Stem("rettificare"), "rettific" );
	deepEqual( Stem("rettificazioni"), "rettif" );
	deepEqual( Stem("retto"), "rett" );
	deepEqual( Stem("rettori"), "rettor" );
	deepEqual( Stem("rettorica"), "rettor" );
	deepEqual( Stem("reuter"), "reuter" );
	deepEqual( Stem("reverenda"), "rever" );
	deepEqual( Stem("reverendissima"), "reverendissim" );
	deepEqual( Stem("reverendo"), "rever" );
	deepEqual( Stem("reversibilità"), "reversibil" );
	deepEqual( Stem("revisione"), "revision" );
	deepEqual( Stem("revisionismo"), "revision" );
	deepEqual( Stem("revisone"), "revison" );
	deepEqual( Stem("revoca"), "revoc" );
	deepEqual( Stem("revocabile"), "revoc" );
	deepEqual( Stem("revocare"), "revoc" );
	deepEqual( Stem("revocati"), "revoc" );
	deepEqual( Stem("revocato"), "revoc" );
	deepEqual( Stem("rey"), "rey" );
	deepEqual( Stem("reynolds"), "reynolds" );
	deepEqual( Stem("rezza"), "rezz" );
	deepEqual( Stem("rf"), "rf" );
	deepEqual( Stem("rg"), "rg" );
	deepEqual( Stem("rh"), "rh" );
	deepEqual( Stem("rheinisch"), "rheinisc" );
	deepEqual( Stem("rhetel"), "rhetel" );
	deepEqual( Stem("rhodes"), "rhodes" );
	deepEqual( Stem("riabbassando"), "riabbass" );
	deepEqual( Stem("riabbassandoli"), "riabbass" );
	deepEqual( Stem("riabbracciar"), "riabbracc" );
	deepEqual( Stem("riabbracciare"), "riabbracc" );
	deepEqual( Stem("riabilitazione"), "riabilit" );
	deepEqual( Stem("riaccendano"), "riaccend" );
	deepEqual( Stem("riaccendersi"), "riaccend" );
	deepEqual( Stem("riaccentrare"), "riaccentr" );
	deepEqual( Stem("riaccesa"), "riacces" );
	deepEqual( Stem("riacceso"), "riacces" );
	deepEqual( Stem("riaccostati"), "riaccost" );
	deepEqual( Stem("riaccostò"), "riaccost" );
	deepEqual( Stem("riacquistar"), "riacquist" );
	deepEqual( Stem("riacquistare"), "riacquist" );
	deepEqual( Stem("riacquistate"), "riacquist" );
	deepEqual( Stem("riafferma"), "riafferm" );
	deepEqual( Stem("riaffermato"), "riafferm" );
	deepEqual( Stem("riaffermazione"), "riafferm" );
	deepEqual( Stem("riafferrare"), "riafferr" );
	deepEqual( Stem("riaffiora"), "riaffior" );
	deepEqual( Stem("riagganciare"), "riagganc" );
	deepEqual( Stem("riaggregare"), "riaggreg" );
	deepEqual( Stem("riallineamento"), "riallin" );
	deepEqual( Stem("rialto"), "rialt" );
	deepEqual( Stem("rialzare"), "rialz" );
	deepEqual( Stem("rialzata"), "rialz" );
	deepEqual( Stem("rialzi"), "rialz" );
	deepEqual( Stem("rialzo"), "rialz" );
	deepEqual( Stem("riandare"), "riand" );
	deepEqual( Stem("riandava"), "riand" );
	deepEqual( Stem("rianimata"), "rianim" );
	deepEqual( Stem("rianimate"), "rianim" );
	deepEqual( Stem("rianimati"), "rianim" );
	deepEqual( Stem("rianimato"), "rianim" );
	deepEqual( Stem("rianimazione"), "rianim" );
	deepEqual( Stem("riaperta"), "riapert" );
	deepEqual( Stem("riaperti"), "riap" );
	deepEqual( Stem("riaperto"), "riapert" );
	deepEqual( Stem("riapertura"), "riapertur" );
	deepEqual( Stem("riappropiarsi"), "riapprop" );
	deepEqual( Stem("riappropriarsi"), "riappropr" );
	deepEqual( Stem("riappuntella"), "riappuntell" );
	deepEqual( Stem("riappuntellati"), "riappuntell" );
	deepEqual( Stem("riapra"), "riapr" );
	deepEqual( Stem("riapriranno"), "riapr" );
	deepEqual( Stem("riassetto"), "riassett" );
	deepEqual( Stem("riassicurate"), "riassicur" );
	deepEqual( Stem("riassicurazioni"), "riassicur" );
	deepEqual( Stem("riattaccò"), "riattacc" );
	deepEqual( Stem("riattarla"), "riatt" );
	deepEqual( Stem("riattizzando"), "riattizz" );
	deepEqual( Stem("riavendoli"), "riav" );
	deepEqual( Stem("riaver"), "riaver" );
	deepEqual( Stem("riaversi"), "riav" );
	deepEqual( Stem("riaveva"), "riav" );
	deepEqual( Stem("riavute"), "riav" );
	deepEqual( Stem("riavuto"), "riav" );
	deepEqual( Stem("riavutosi"), "riavut" );
	deepEqual( Stem("riavviare"), "riavv" );
	deepEqual( Stem("riavvicina"), "riavvicin" );
	deepEqual( Stem("riavvicinamento"), "riavvicin" );
	deepEqual( Stem("ribadendo"), "ribad" );
	deepEqual( Stem("ribadisce"), "ribad" );
	deepEqual( Stem("ribadisco"), "ribad" );
	deepEqual( Stem("ribadiscono"), "ribad" );
	deepEqual( Stem("ribadita"), "ribad" );
	deepEqual( Stem("ribadito"), "ribad" );
	deepEqual( Stem("ribadiva"), "ribad" );
	deepEqual( Stem("ribalda"), "ribald" );
	deepEqual( Stem("ribalderia"), "ribalder" );
	deepEqual( Stem("ribalderie"), "ribalder" );
	deepEqual( Stem("ribaldi"), "ribald" );
	deepEqual( Stem("ribaldo"), "ribald" );
	deepEqual( Stem("ribalta"), "ribalt" );
	deepEqual( Stem("ribaltato"), "ribalt" );
	deepEqual( Stem("ribaltone"), "ribalton" );
	deepEqual( Stem("ribasso"), "ribass" );
	deepEqual( Stem("ribattendo"), "ribatt" );
	deepEqual( Stem("ribatter"), "ribatter" );
	deepEqual( Stem("ribattere"), "ribatt" );
	deepEqual( Stem("ribatterle"), "ribatt" );
	deepEqual( Stem("ribattete"), "ribatt" );
	deepEqual( Stem("ribattezzato"), "ribattezz" );
	deepEqual( Stem("ribattono"), "ribatt" );
	deepEqual( Stem("ribattuta"), "ribatt" );
	deepEqual( Stem("ribattuto"), "ribatt" );
	deepEqual( Stem("ribattutto"), "ribattutt" );
	deepEqual( Stem("ribella"), "ribell" );
	deepEqual( Stem("ribellata"), "ribell" );
	deepEqual( Stem("ribelle"), "ribell" );
	deepEqual( Stem("ribelli"), "ribell" );
	deepEqual( Stem("ribellione"), "ribellion" );
	deepEqual( Stem("ribellioni"), "ribellion" );
	deepEqual( Stem("ribenedetti"), "ribenedett" );
	deepEqual( Stem("ribolle"), "riboll" );
	deepEqual( Stem("ribollimento"), "riboll" );
	deepEqual( Stem("ribollivano"), "riboll" );
	deepEqual( Stem("ribrezzo"), "ribrezz" );
	deepEqual( Stem("ributtanti"), "ributt" );
	deepEqual( Stem("rica"), "ric" );
	deepEqual( Stem("ricadde"), "ricadd" );
	deepEqual( Stem("ricade"), "ricad" );
	deepEqual( Stem("ricadere"), "ricad" );
	deepEqual( Stem("ricadeva"), "ricad" );
	deepEqual( Stem("ricadevano"), "ricad" );
	deepEqual( Stem("ricadrebbe"), "ricadrebb" );
	deepEqual( Stem("ricaduto"), "ricad" );
	deepEqual( Stem("ricalcandone"), "ricalc" );
	deepEqual( Stem("ricalcare"), "ricalc" );
	deepEqual( Stem("ricalcitrante"), "ricalcitr" );
	deepEqual( Stem("ricalcitrare"), "ricalcitr" );
	deepEqual( Stem("ricalcitrato"), "ricalcitr" );
	deepEqual( Stem("ricambi"), "ricamb" );
	deepEqual( Stem("ricambio"), "ricamb" );
	deepEqual( Stem("ricami"), "ricam" );
	deepEqual( Stem("ricamo"), "ricam" );
	deepEqual( Stem("ricandidato"), "ricandid" );
	deepEqual( Stem("ricantar"), "ricant" );
	deepEqual( Stem("ricapitalizzare"), "ricapitalizz" );
	deepEqual( Stem("ricapitalizzazione"), "ricapitalizz" );
	deepEqual( Stem("ricapitare"), "ricapit" );
	deepEqual( Stem("ricapito"), "ricap" );
	deepEqual( Stem("ricapitolò"), "ricapitol" );
	deepEqual( Stem("ricarvarla"), "ricarv" );
	deepEqual( Stem("ricattarsi"), "ricatt" );
	deepEqual( Stem("ricatto"), "ricatt" );
	deepEqual( Stem("ricava"), "ric" );
	deepEqual( Stem("ricavar"), "ricav" );
	deepEqual( Stem("ricavare"), "ricav" );
	deepEqual( Stem("ricavato"), "ricav" );
	deepEqual( Stem("ricavava"), "ricav" );
	deepEqual( Stem("ricavi"), "ric" );
	deepEqual( Stem("ricca"), "ricc" );
	deepEqual( Stem("riccardo"), "riccard" );
	deepEqual( Stem("ricche"), "ricc" );
	deepEqual( Stem("ricchezza"), "ricchezz" );
	deepEqual( Stem("ricchezze"), "ricchezz" );
	deepEqual( Stem("ricchi"), "ricc" );
	deepEqual( Stem("ricchissimo"), "ricchissim" );
	deepEqual( Stem("ricci"), "ricc" );
	deepEqual( Stem("ricciardi"), "ricciard" );
	deepEqual( Stem("riccio"), "ricc" );
	deepEqual( Stem("riccione"), "riccion" );
	deepEqual( Stem("ricco"), "ricc" );
	deepEqual( Stem("ricentralizzazione"), "ricentralizz" );
	deepEqual( Stem("ricerca"), "ricerc" );
	deepEqual( Stem("ricercando"), "ricerc" );
	deepEqual( Stem("ricercare"), "ricerc" );
	deepEqual( Stem("ricercata"), "ricerc" );
	deepEqual( Stem("ricercate"), "ricerc" );
	deepEqual( Stem("ricercati"), "ricerc" );
	deepEqual( Stem("ricercato"), "ricerc" );
	deepEqual( Stem("ricercatori"), "ricerc" );
	deepEqual( Stem("ricerche"), "ricerc" );
	deepEqual( Stem("ricercò"), "ricerc" );
	deepEqual( Stem("ricettato"), "ricett" );
	deepEqual( Stem("ricettatore"), "ricett" );
	deepEqual( Stem("ricettazione"), "ricett" );
	deepEqual( Stem("ricette"), "ricett" );
	deepEqual( Stem("ricevano"), "ric" );
	deepEqual( Stem("riceve"), "ricev" );
	deepEqual( Stem("ricevé"), "ricev" );
	deepEqual( Stem("ricevemmo"), "ricev" );
	deepEqual( Stem("ricevendo"), "ricev" );
	deepEqual( Stem("ricevendone"), "ricev" );
	deepEqual( Stem("ricever"), "ricever" );
	deepEqual( Stem("riceverà"), "ricev" );
	deepEqual( Stem("riceveranno"), "ricev" );
	deepEqual( Stem("ricevere"), "ricev" );
	deepEqual( Stem("riceverla"), "ricev" );
	deepEqual( Stem("riceverle"), "ricev" );
	deepEqual( Stem("riceverli"), "ricev" );
	deepEqual( Stem("riceverlo"), "ricev" );
	deepEqual( Stem("ricevette"), "ricevett" );
	deepEqual( Stem("ricevettero"), "ricevetter" );
	deepEqual( Stem("riceveva"), "ricev" );
	deepEqual( Stem("ricevevano"), "ricev" );
	deepEqual( Stem("ricevimenti"), "ricev" );
	deepEqual( Stem("ricevimento"), "ricev" );
	deepEqual( Stem("ricevono"), "ricev" );
	deepEqual( Stem("ricevuta"), "ricev" );
	deepEqual( Stem("ricevute"), "ricev" );
	deepEqual( Stem("ricevuti"), "ricev" );
	deepEqual( Stem("ricevuto"), "ricev" );
	deepEqual( Stem("ricezione"), "ricezion" );
	deepEqual( Stem("richard"), "richard" );
	deepEqual( Stem("riche"), "rich" );
	deepEqual( Stem("richelieu"), "richelieu" );
	deepEqual( Stem("richeter"), "richeter" );
	deepEqual( Stem("richiama"), "richiam" );
	deepEqual( Stem("richiamando"), "richiam" );
	deepEqual( Stem("richiamandosi"), "richiam" );
	deepEqual( Stem("richiamano"), "richiam" );
	deepEqual( Stem("richiamare"), "richiam" );
	deepEqual( Stem("richiamarmi"), "richiam" );
	deepEqual( Stem("richiamarsi"), "richiam" );
	deepEqual( Stem("richiamata"), "richiam" );
	deepEqual( Stem("richiamati"), "richiam" );
	deepEqual( Stem("richiamato"), "richiam" );
	deepEqual( Stem("richiamatolo"), "richiamatol" );
	deepEqual( Stem("richiamava"), "richiam" );
	deepEqual( Stem("richiamavano"), "richiam" );
	deepEqual( Stem("richiamerebbe"), "richiam" );
	deepEqual( Stem("richiami"), "richiam" );
	deepEqual( Stem("richiamiamo"), "richiam" );
	deepEqual( Stem("richiamo"), "rich" );
	deepEqual( Stem("richiamò"), "richiam" );
	deepEqual( Stem("richiede"), "richied" );
	deepEqual( Stem("richiedendo"), "richied" );
	deepEqual( Stem("richieder"), "richieder" );
	deepEqual( Stem("richiedere"), "richied" );
	deepEqual( Stem("richiedergli"), "richied" );
	deepEqual( Stem("richiederlo"), "richied" );
	deepEqual( Stem("richiedesse"), "richiedess" );
	deepEqual( Stem("richiedessero"), "richied" );
	deepEqual( Stem("richiedeva"), "richied" );
	deepEqual( Stem("richiedevano"), "richied" );
	deepEqual( Stem("richiedon"), "richiedon" );
	deepEqual( Stem("richiedono"), "richied" );
	deepEqual( Stem("richiese"), "richies" );
	deepEqual( Stem("richiesta"), "richiest" );
	deepEqual( Stem("richieste"), "richiest" );
	deepEqual( Stem("richiesti"), "richiest" );
	deepEqual( Stem("richiesto"), "richiest" );
	deepEqual( Stem("richiudere"), "richiud" );
	deepEqual( Stem("richiudeva"), "richiud" );
	deepEqual( Stem("richiusa"), "richius" );
	deepEqual( Stem("richiuse"), "richius" );
	deepEqual( Stem("richter"), "richter" );
	deepEqual( Stem("riciclaggio"), "riciclagg" );
	deepEqual( Stem("ricilaggio"), "ricilagg" );
	deepEqual( Stem("riciliù"), "riciliù" );
	deepEqual( Stem("rick"), "rick" );
	deepEqual( Stem("ricognitrice"), "ricognitr" );
	deepEqual( Stem("ricognizione"), "ricognizion" );
	deepEqual( Stem("ricognizioni"), "ricognizion" );
	deepEqual( Stem("ricognizone"), "ricognizon" );
	deepEqual( Stem("ricollegare"), "ricolleg" );
	deepEqual( Stem("ricolmò"), "ricolm" );
	deepEqual( Stem("ricomincerà"), "ricominc" );
	deepEqual( Stem("ricomincerebbe"), "ricominc" );
	deepEqual( Stem("ricomincia"), "ricominc" );
	deepEqual( Stem("ricominciando"), "ricominc" );
	deepEqual( Stem("ricominciar"), "ricominc" );
	deepEqual( Stem("ricominciarono"), "ricominc" );
	deepEqual( Stem("ricominciato"), "ricominc" );
	deepEqual( Stem("ricominciava"), "ricominc" );
	deepEqual( Stem("ricominciò"), "ricominc" );
	deepEqual( Stem("ricomparendo"), "ricompar" );
	deepEqual( Stem("ricomparire"), "ricompar" );
	deepEqual( Stem("ricomparirvi"), "ricompar" );
	deepEqual( Stem("ricompariva"), "ricompar" );
	deepEqual( Stem("ricomparve"), "ricomparv" );
	deepEqual( Stem("ricomparvero"), "ricomparver" );
	deepEqual( Stem("ricompensa"), "ricompens" );
	deepEqual( Stem("ricompensare"), "ricompens" );
	deepEqual( Stem("ricompenserà"), "ricompens" );
	deepEqual( Stem("ricompensi"), "ricompens" );
	deepEqual( Stem("ricompone"), "ricompon" );
	deepEqual( Stem("ricomponeva"), "ricompon" );
	deepEqual( Stem("ricomporre"), "ricomporr" );
	deepEqual( Stem("ricomposizione"), "ricomposizion" );
	deepEqual( Stem("ricomposte"), "ricompost" );
	deepEqual( Stem("ricomposto"), "ricompost" );
	deepEqual( Stem("ricompriamo"), "ricompr" );
	deepEqual( Stem("riconcilia"), "riconcil" );
	deepEqual( Stem("riconciliar"), "riconcil" );
	deepEqual( Stem("riconciliazione"), "riconcil" );
	deepEqual( Stem("ricondotta"), "ricondott" );
	deepEqual( Stem("riconducendo"), "riconduc" );
	deepEqual( Stem("ricondur"), "ricondur" );
	deepEqual( Stem("ricondurre"), "ricondurr" );
	deepEqual( Stem("riconfermato"), "riconferm" );
	deepEqual( Stem("riconfortati"), "riconfort" );
	deepEqual( Stem("riconobbe"), "riconobb" );
	deepEqual( Stem("riconosca"), "riconosc" );
	deepEqual( Stem("riconosce"), "riconosc" );
	deepEqual( Stem("riconoscendo"), "riconosc" );
	deepEqual( Stem("riconoscendosi"), "riconosc" );
	deepEqual( Stem("riconoscente"), "riconoscent" );
	deepEqual( Stem("riconoscenza"), "riconoscent" );
	deepEqual( Stem("riconoscere"), "riconosc" );
	deepEqual( Stem("riconoscerla"), "riconosc" );
	deepEqual( Stem("riconoscerli"), "riconosc" );
	deepEqual( Stem("riconoscerne"), "riconosc" );
	deepEqual( Stem("riconoscersi"), "riconosc" );
	deepEqual( Stem("riconoscesse"), "riconoscess" );
	deepEqual( Stem("riconoscessero"), "riconosc" );
	deepEqual( Stem("riconosceva"), "riconosc" );
	deepEqual( Stem("riconosci"), "riconosc" );
	deepEqual( Stem("riconosciate"), "riconosc" );
	deepEqual( Stem("riconoscimento"), "riconosc" );
	deepEqual( Stem("riconosciuta"), "riconosc" );
	deepEqual( Stem("riconosciute"), "riconosc" );
	deepEqual( Stem("riconosciuti"), "riconosc" );
	deepEqual( Stem("riconosciuto"), "riconosc" );
	deepEqual( Stem("riconosco"), "riconosc" );
	deepEqual( Stem("riconoscono"), "riconosc" );
	deepEqual( Stem("riconquista"), "riconqu" );
	deepEqual( Stem("riconquistato"), "riconquist" );
	deepEqual( Stem("riconscibili"), "riconsc" );
	deepEqual( Stem("riconsegnarla"), "riconsegn" );
	deepEqual( Stem("riconversione"), "riconversion" );
	deepEqual( Stem("riconvocare"), "riconvoc" );
	deepEqual( Stem("ricoperta"), "ricopert" );
	deepEqual( Stem("ricoperte"), "ricopert" );
	deepEqual( Stem("ricoperti"), "ricop" );
	deepEqual( Stem("ricoperto"), "ricopert" );
	deepEqual( Stem("ricopre"), "ricopr" );
	deepEqual( Stem("ricoprendo"), "ricopr" );
	deepEqual( Stem("ricoprire"), "ricopr" );
	deepEqual( Stem("ricopriva"), "ricopr" );
	deepEqual( Stem("ricopro"), "ricopr" );
	deepEqual( Stem("ricoprono"), "ricopr" );
	deepEqual( Stem("ricorda"), "ricord" );
	deepEqual( Stem("ricordalo"), "ricordal" );
	deepEqual( Stem("ricordan"), "ricordan" );
	deepEqual( Stem("ricordando"), "ricord" );
	deepEqual( Stem("ricordano"), "ricord" );
	deepEqual( Stem("ricordare"), "ricord" );
	deepEqual( Stem("ricordarlo"), "ricord" );
	deepEqual( Stem("ricordarsi"), "ricord" );
	deepEqual( Stem("ricordata"), "ricord" );
	deepEqual( Stem("ricordate"), "ricord" );
	deepEqual( Stem("ricordatevelo"), "ricordatevel" );
	deepEqual( Stem("ricordatevi"), "ricordat" );
	deepEqual( Stem("ricordati"), "ricord" );
	deepEqual( Stem("ricordato"), "ricord" );
	deepEqual( Stem("ricordava"), "ricord" );
	deepEqual( Stem("ricordavan"), "ricordavan" );
	deepEqual( Stem("ricordavano"), "ricord" );
	deepEqual( Stem("ricorderà"), "ricord" );
	deepEqual( Stem("ricorderanno"), "ricord" );
	deepEqual( Stem("ricorderesti"), "ricord" );
	deepEqual( Stem("ricorderete"), "ricord" );
	deepEqual( Stem("ricordi"), "ricord" );
	deepEqual( Stem("ricordiamo"), "ricord" );
	deepEqual( Stem("ricordino"), "ricordin" );
	deepEqual( Stem("ricordo"), "ricord" );
	deepEqual( Stem("ricordò"), "ricord" );
	deepEqual( Stem("ricorra"), "ricorr" );
	deepEqual( Stem("ricorre"), "ricorr" );
	deepEqual( Stem("ricorreggere"), "ricorregg" );
	deepEqual( Stem("ricorrendo"), "ricorr" );
	deepEqual( Stem("ricorrenti"), "ricorrent" );
	deepEqual( Stem("ricorrenza"), "ricorrent" );
	deepEqual( Stem("ricorrer"), "ricorrer" );
	deepEqual( Stem("ricorrerà"), "ricorr" );
	deepEqual( Stem("ricorrere"), "ricorr" );
	deepEqual( Stem("ricorreva"), "ricorr" );
	deepEqual( Stem("ricorrevano"), "ricorr" );
	deepEqual( Stem("ricorrono"), "ricorr" );
	deepEqual( Stem("ricorse"), "ricors" );
	deepEqual( Stem("ricorsi"), "ricors" );
	deepEqual( Stem("ricorso"), "ricors" );
	deepEqual( Stem("ricostituire"), "ricostitu" );
	deepEqual( Stem("ricostituzione"), "ricostitu" );
	deepEqual( Stem("ricostruire"), "ricostru" );
	deepEqual( Stem("ricostruirla"), "ricostru" );
	deepEqual( Stem("ricostruzione"), "ricostru" );
	deepEqual( Stem("ricoverarci"), "ricover" );
	deepEqual( Stem("ricoverare"), "ricover" );
	deepEqual( Stem("ricoverarlo"), "ricover" );
	deepEqual( Stem("ricoverarono"), "ricover" );
	deepEqual( Stem("ricoverarsi"), "ricover" );
	deepEqual( Stem("ricoverarvi"), "ricover" );
	deepEqual( Stem("ricoverata"), "ricover" );
	deepEqual( Stem("ricoverate"), "ricover" );
	deepEqual( Stem("ricoverati"), "ricover" );
	deepEqual( Stem("ricoverato"), "ricover" );
	deepEqual( Stem("ricovero"), "ricover" );
	deepEqual( Stem("ricrea"), "ricre" );
	deepEqual( Stem("ricreano"), "ricr" );
	deepEqual( Stem("ricreare"), "ricr" );
	deepEqual( Stem("ricrearsi"), "ricr" );
	deepEqual( Stem("ricreatrice"), "ricreatric" );
	deepEqual( Stem("ricucire"), "ricuc" );
	deepEqual( Stem("ricucito"), "ricuc" );
	deepEqual( Stem("ricuperare"), "ricuper" );
	deepEqual( Stem("ricuperata"), "ricuper" );
	deepEqual( Stem("ricupero"), "ricuper" );
	deepEqual( Stem("ricurvo"), "ricurv" );
	deepEqual( Stem("ricusando"), "ricus" );
	deepEqual( Stem("ricusano"), "ricus" );
	deepEqual( Stem("ricusasse"), "ricus" );
	deepEqual( Stem("ricusava"), "ricus" );
	deepEqual( Stem("ricusino"), "ricusin" );
	deepEqual( Stem("ricusò"), "ricus" );
	deepEqual( Stem("ridar"), "rid" );
	deepEqual( Stem("ridare"), "rid" );
	deepEqual( Stem("ridato"), "rid" );
	deepEqual( Stem("ride"), "rid" );
	deepEqual( Stem("ridefinirne"), "ridefin" );
	deepEqual( Stem("ridefinita"), "ridefin" );
	deepEqual( Stem("ridefinizione"), "ridefinizion" );
	deepEqual( Stem("ridendo"), "rid" );
	deepEqual( Stem("ridente"), "rident" );
	deepEqual( Stem("ridenti"), "rident" );
	deepEqual( Stem("rider"), "rider" );
	deepEqual( Stem("ridere"), "rid" );
	deepEqual( Stem("riderei"), "rid" );
	deepEqual( Stem("ridersene"), "rid" );
	deepEqual( Stem("ridersi"), "rid" );
	deepEqual( Stem("ridesse"), "ridess" );
	deepEqual( Stem("ridesta"), "ridest" );
	deepEqual( Stem("ridestato"), "ridest" );
	deepEqual( Stem("ridestavano"), "ridest" );
	deepEqual( Stem("rideva"), "rid" );
	deepEqual( Stem("ridevano"), "rid" );
	deepEqual( Stem("ridge"), "ridg" );
	deepEqual( Stem("ridia"), "rid" );
	deepEqual( Stem("ridice"), "ridic" );
	deepEqual( Stem("ridicola"), "ridicol" );
	deepEqual( Stem("ridicoli"), "ridicol" );
	deepEqual( Stem("ridicolizzare"), "ridicolizz" );
	deepEqual( Stem("ridicolo"), "ridicol" );
	deepEqual( Stem("ridimensionamenti"), "ridimension" );
	deepEqual( Stem("ridimensionamento"), "ridimension" );
	deepEqual( Stem("ridimensionare"), "ridimension" );
	deepEqual( Stem("ridimensionati"), "ridimension" );
	deepEqual( Stem("ridimensionato"), "ridimension" );
	deepEqual( Stem("ridir"), "rid" );
	deepEqual( Stem("ridire"), "rid" );
	deepEqual( Stem("ridiscuta"), "ridisc" );
	deepEqual( Stem("ridisegnare"), "ridisegn" );
	deepEqual( Stem("ridisegnati"), "ridisegn" );
	deepEqual( Stem("ridispiegamentò"), "ridispiegament" );
	deepEqual( Stem("ridiventare"), "ridivent" );
	deepEqual( Stem("rido"), "rid" );
	deepEqual( Stem("ridonasse"), "ridon" );
	deepEqual( Stem("ridono"), "rid" );
	deepEqual( Stem("ridosso"), "ridoss" );
	deepEqual( Stem("ridotta"), "ridott" );
	deepEqual( Stem("ridotte"), "ridott" );
	deepEqual( Stem("ridotti"), "ridott" );
	deepEqual( Stem("ridotto"), "ridott" );
	deepEqual( Stem("riduce"), "riduc" );
	deepEqual( Stem("riducendo"), "riduc" );
	deepEqual( Stem("riducendola"), "riduc" );
	deepEqual( Stem("riducono"), "riduc" );
	deepEqual( Stem("ridurci"), "ridurc" );
	deepEqual( Stem("ridurgli"), "ridurgl" );
	deepEqual( Stem("ridurli"), "ridurl" );
	deepEqual( Stem("ridurlo"), "ridurl" );
	deepEqual( Stem("ridurre"), "ridurr" );
	deepEqual( Stem("ridurrebbe"), "ridurrebb" );
	deepEqual( Stem("ridusse"), "riduss" );
	deepEqual( Stem("riduzione"), "riduzion" );
	deepEqual( Stem("riduzioni"), "riduzion" );
	deepEqual( Stem("riebbe"), "riebb" );
	deepEqual( Stem("rieccitando"), "rieccit" );
	deepEqual( Stem("riecheggia"), "riechegg" );
	deepEqual( Stem("riedizione"), "riedizion" );
	deepEqual( Stem("rieducativa"), "rieduc" );
	deepEqual( Stem("riefensthal"), "riefensthal" );
	deepEqual( Stem("rielaborati"), "rielabor" );
	deepEqual( Stem("rieletti"), "rielett" );
	deepEqual( Stem("riello"), "riell" );
	deepEqual( Stem("riempì"), "riemp" );
	deepEqual( Stem("riempie"), "riemp" );
	deepEqual( Stem("riempiendo"), "riemp" );
	deepEqual( Stem("riempiono"), "riemp" );
	deepEqual( Stem("riempirli"), "riemp" );
	deepEqual( Stem("riempiron"), "riempiron" );
	deepEqual( Stem("riempirsi"), "riemp" );
	deepEqual( Stem("riempitane"), "riempitan" );
	deepEqual( Stem("riempito"), "riemp" );
	deepEqual( Stem("riempivano"), "riemp" );
	deepEqual( Stem("rientra"), "rientr" );
	deepEqual( Stem("rientrano"), "rientr" );
	deepEqual( Stem("rientrante"), "rientrant" );
	deepEqual( Stem("rientrare"), "rientr" );
	deepEqual( Stem("rientrata"), "rientr" );
	deepEqual( Stem("rientrato"), "rientr" );
	deepEqual( Stem("rientrerà"), "rientr" );
	deepEqual( Stem("rientreranno"), "rientr" );
	deepEqual( Stem("rientrerebbero"), "rientr" );
	deepEqual( Stem("rientri"), "rientr" );
	deepEqual( Stem("rientrino"), "rientrin" );
	deepEqual( Stem("rientro"), "rientr" );
	deepEqual( Stem("rientrò"), "rientr" );
	deepEqual( Stem("riequilibrando"), "riequilibr" );
	deepEqual( Stem("riequilibrio"), "riequilibr" );
	deepEqual( Stem("riesame"), "riesam" );
	deepEqual( Stem("riesami"), "riesam" );
	deepEqual( Stem("riesaminata"), "riesamin" );
	deepEqual( Stem("riesca"), "riesc" );
	deepEqual( Stem("riescan"), "riescan" );
	deepEqual( Stem("riesce"), "riesc" );
	deepEqual( Stem("riesci"), "riesc" );
	deepEqual( Stem("riesco"), "riesc" );
	deepEqual( Stem("riesumazione"), "riesum" );
	deepEqual( Stem("rieter"), "rieter" );
	deepEqual( Stem("rieti"), "riet" );
	deepEqual( Stem("rietrano"), "rietr" );
	deepEqual( Stem("rievocare"), "rievoc" );
	deepEqual( Stem("rievocato"), "rievoc" );
	deepEqual( Stem("rievocazione"), "rievoc" );
	deepEqual( Stem("rif"), "rif" );
	deepEqual( Stem("rifà"), "rif" );
	deepEqual( Stem("rifacendo"), "rifac" );
	deepEqual( Stem("rifar"), "rif" );
	deepEqual( Stem("rifarà"), "rifar" );
	deepEqual( Stem("rifare"), "rif" );
	deepEqual( Stem("rifarle"), "rif" );
	deepEqual( Stem("rifarne"), "rif" );
	deepEqual( Stem("rifarsi"), "rif" );
	deepEqual( Stem("rifatti"), "rifatt" );
	deepEqual( Stem("rifatto"), "rifatt" );
	deepEqual( Stem("riferendo"), "rifer" );
	deepEqual( Stem("riferendosi"), "rifer" );
	deepEqual( Stem("riferì"), "rifer" );
	deepEqual( Stem("riferimenti"), "rifer" );
	deepEqual( Stem("riferimento"), "rifer" );
	deepEqual( Stem("riferir"), "rifer" );
	deepEqual( Stem("riferire"), "rifer" );
	deepEqual( Stem("riferiremo"), "rifer" );
	deepEqual( Stem("riferirli"), "rifer" );
	deepEqual( Stem("riferirlo"), "rifer" );
	deepEqual( Stem("riferirò"), "rifer" );
	deepEqual( Stem("riferisca"), "rifer" );
	deepEqual( Stem("riferisce"), "rifer" );
	deepEqual( Stem("riferisco"), "rifer" );
	deepEqual( Stem("riferiscono"), "rifer" );
	deepEqual( Stem("riferita"), "rifer" );
	deepEqual( Stem("riferite"), "rifer" );
	deepEqual( Stem("riferiti"), "rifer" );
	deepEqual( Stem("riferito"), "rifer" );
	deepEqual( Stem("riferiva"), "rifer" );
	deepEqual( Stem("rifiatare"), "rifiat" );
	deepEqual( Stem("rifinanziata"), "rifinanz" );
	deepEqual( Stem("rifinanziato"), "rifinanz" );
	deepEqual( Stem("rifinito"), "rifin" );
	deepEqual( Stem("rifiuta"), "rif" );
	deepEqual( Stem("rifiutando"), "rifiut" );
	deepEqual( Stem("rifiutano"), "rifiut" );
	deepEqual( Stem("rifiutar"), "rifiut" );
	deepEqual( Stem("rifiutare"), "rifiut" );
	deepEqual( Stem("rifiutaste"), "rifiutast" );
	deepEqual( Stem("rifiutate"), "rifiut" );
	deepEqual( Stem("rifiutati"), "rifiut" );
	deepEqual( Stem("rifiutato"), "rifiut" );
	deepEqual( Stem("rifiutava"), "rifiut" );
	deepEqual( Stem("rifiuti"), "rif" );
	deepEqual( Stem("rifiutiamo"), "rifiut" );
	deepEqual( Stem("rifiuto"), "rif" );
	deepEqual( Stem("rifiutò"), "rifiut" );
	deepEqual( Stem("riflessi"), "rifless" );
	deepEqual( Stem("riflessione"), "riflession" );
	deepEqual( Stem("riflessioni"), "riflession" );
	deepEqual( Stem("riflessività"), "rifless" );
	deepEqual( Stem("riflesso"), "rifless" );
	deepEqual( Stem("riflette"), "riflett" );
	deepEqual( Stem("riflettendo"), "riflett" );
	deepEqual( Stem("riflettere"), "riflett" );
	deepEqual( Stem("rifletterò"), "riflett" );
	deepEqual( Stem("riflettersi"), "riflett" );
	deepEqual( Stem("rifletteva"), "riflett" );
	deepEqual( Stem("riflettono"), "riflett" );
	deepEqual( Stem("riflettori"), "riflettor" );
	deepEqual( Stem("rifondazione"), "rifond" );
	deepEqual( Stem("riforma"), "riform" );
	deepEqual( Stem("riformare"), "riform" );
	deepEqual( Stem("riformata"), "riform" );
	deepEqual( Stem("riformato"), "riform" );
	deepEqual( Stem("riformatore"), "riform" );
	deepEqual( Stem("riformatori"), "riform" );
	deepEqual( Stem("riformatrici"), "riform" );
	deepEqual( Stem("riforme"), "riform" );
	deepEqual( Stem("riformismo"), "riform" );
	deepEqual( Stem("rifornire"), "riforn" );
	deepEqual( Stem("rifuggì"), "rifugg" );
	deepEqual( Stem("rifugiare"), "rifug" );
	deepEqual( Stem("rifugiarsi"), "rifug" );
	deepEqual( Stem("rifugiassero"), "rifug" );
	deepEqual( Stem("rifugiata"), "rifug" );
	deepEqual( Stem("rifugiati"), "rifug" );
	deepEqual( Stem("rifugiativisi"), "rifugiativis" );
	deepEqual( Stem("rifugiato"), "rifug" );
	deepEqual( Stem("rifugiava"), "rifug" );
	deepEqual( Stem("rifugiavano"), "rifug" );
	deepEqual( Stem("rifugino"), "rifugin" );
	deepEqual( Stem("rifugio"), "rifug" );
	deepEqual( Stem("riga"), "rig" );
	deepEqual( Stem("rigagnoli"), "rigagnol" );
	deepEqual( Stem("rigagnolo"), "rigagnol" );
	deepEqual( Stem("rigar"), "rig" );
	deepEqual( Stem("rigaurda"), "rigaurd" );
	deepEqual( Stem("rigettando"), "rigett" );
	deepEqual( Stem("rigetto"), "rigett" );
	deepEqual( Stem("rigettò"), "rigett" );
	deepEqual( Stem("righe"), "righ" );
	deepEqual( Stem("rights"), "rights" );
	deepEqual( Stem("rigida"), "rigid" );
	deepEqual( Stem("rigidamente"), "rigid" );
	deepEqual( Stem("rigide"), "rigid" );
	deepEqual( Stem("rigidi"), "rigid" );
	deepEqual( Stem("rigidità"), "rigid" );
	deepEqual( Stem("rigido"), "rigid" );
	deepEqual( Stem("rigira"), "rigir" );
	deepEqual( Stem("rigirato"), "rigir" );
	deepEqual( Stem("rigiri"), "rigir" );
	deepEqual( Stem("rigirìo"), "rigirì" );
	deepEqual( Stem("rigogliosa"), "rigogl" );
	deepEqual( Stem("rigogliose"), "rigogl" );
	deepEqual( Stem("rigoglioso"), "rigogl" );
	deepEqual( Stem("rigor"), "rigor" );
	deepEqual( Stem("rigore"), "rigor" );
	deepEqual( Stem("rigorosa"), "rigor" );
	deepEqual( Stem("rigorosamente"), "rigor" );
	deepEqual( Stem("rigorosi"), "rigor" );
	deepEqual( Stem("rigoroso"), "rigor" );
	deepEqual( Stem("rigovernare"), "rigovern" );
	deepEqual( Stem("rigridando"), "rigrid" );
	deepEqual( Stem("riguadagnar"), "riguadagn" );
	deepEqual( Stem("riguarda"), "riguard" );
	deepEqual( Stem("riguardano"), "riguard" );
	deepEqual( Stem("riguardante"), "riguard" );
	deepEqual( Stem("riguardanti"), "riguard" );
	deepEqual( Stem("riguardar"), "riguard" );
	deepEqual( Stem("riguardarsi"), "riguard" );
	deepEqual( Stem("riguardasse"), "riguard" );
	deepEqual( Stem("riguardata"), "riguard" );
	deepEqual( Stem("riguardato"), "riguard" );
	deepEqual( Stem("riguardava"), "riguard" );
	deepEqual( Stem("riguardavan"), "riguardavan" );
	deepEqual( Stem("riguardavano"), "riguard" );
	deepEqual( Stem("riguardavate"), "riguard" );
	deepEqual( Stem("riguarderà"), "riguard" );
	deepEqual( Stem("riguarderanno"), "riguard" );
	deepEqual( Stem("riguardi"), "riguard" );
	deepEqual( Stem("riguardo"), "riguard" );
	deepEqual( Stem("riker"), "riker" );
	deepEqual( Stem("rilanci"), "rilanc" );
	deepEqual( Stem("rilancia"), "rilanc" );
	deepEqual( Stem("rilanciano"), "rilanc" );
	deepEqual( Stem("rilanciare"), "rilanc" );
	deepEqual( Stem("rilanciata"), "rilanc" );
	deepEqual( Stem("rilancio"), "rilanc" );
	deepEqual( Stem("rilasciamento"), "rilasc" );
	deepEqual( Stem("rilasciando"), "rilasc" );
	deepEqual( Stem("rilasciare"), "rilasc" );
	deepEqual( Stem("rilasciarlo"), "rilasc" );
	deepEqual( Stem("rilasciaron"), "rilasciaron" );
	deepEqual( Stem("rilasciarvi"), "rilasc" );
	deepEqual( Stem("rilasciasse"), "rilasc" );
	deepEqual( Stem("rilasciata"), "rilasc" );
	deepEqual( Stem("rilasciate"), "rilasc" );
	deepEqual( Stem("rilasciati"), "rilasc" );
	deepEqual( Stem("rilasciato"), "rilasc" );
	deepEqual( Stem("rilascio"), "rilasc" );
	deepEqual( Stem("rilassato"), "rilass" );
	deepEqual( Stem("rilazo"), "rilaz" );
	deepEqual( Stem("rileggere"), "rilegg" );
	deepEqual( Stem("rilegittimazione"), "rilegittim" );
	deepEqual( Stem("rilento"), "rilent" );
	deepEqual( Stem("rilesse"), "riless" );
	deepEqual( Stem("rileva"), "ril" );
	deepEqual( Stem("rilevando"), "rilev" );
	deepEqual( Stem("rilevante"), "rilev" );
	deepEqual( Stem("rilevanti"), "rilev" );
	deepEqual( Stem("rilevar"), "rilev" );
	deepEqual( Stem("rilevare"), "rilev" );
	deepEqual( Stem("rilevata"), "rilev" );
	deepEqual( Stem("rilevate"), "ril" );
	deepEqual( Stem("rilevati"), "rilev" );
	deepEqual( Stem("rilevato"), "rilev" );
	deepEqual( Stem("rilevazione"), "rilev" );
	deepEqual( Stem("rilievo"), "ril" );
	deepEqual( Stem("rilisciarsi"), "rilisc" );
	deepEqual( Stem("rilla"), "rill" );
	deepEqual( Stem("riluttanza"), "rilutt" );
	deepEqual( Stem("rima"), "rim" );
	deepEqual( Stem("riman"), "riman" );
	deepEqual( Stem("rimandando"), "rimand" );
	deepEqual( Stem("rimandarlo"), "rimand" );
	deepEqual( Stem("rimandato"), "rimand" );
	deepEqual( Stem("rimanderebbe"), "rimand" );
	deepEqual( Stem("rimane"), "riman" );
	deepEqual( Stem("rimaneggiate"), "rimanegg" );
	deepEqual( Stem("rimanendo"), "riman" );
	deepEqual( Stem("rimanenete"), "rimanen" );
	deepEqual( Stem("rimanente"), "rimanent" );
	deepEqual( Stem("rimanenti"), "rimanent" );
	deepEqual( Stem("rimaner"), "rimaner" );
	deepEqual( Stem("rimanere"), "riman" );
	deepEqual( Stem("rimanersi"), "riman" );
	deepEqual( Stem("rimanervi"), "riman" );
	deepEqual( Stem("rimanesse"), "rimaness" );
	deepEqual( Stem("rimanessero"), "riman" );
	deepEqual( Stem("rimaneva"), "riman" );
	deepEqual( Stem("rimanevano"), "riman" );
	deepEqual( Stem("rimanga"), "rimang" );
	deepEqual( Stem("rimango"), "rimang" );
	deepEqual( Stem("rimangon"), "rimangon" );
	deepEqual( Stem("rimangono"), "rimang" );
	deepEqual( Stem("rimaranno"), "rimarann" );
	deepEqual( Stem("rimarca"), "rimarc" );
	deepEqual( Stem("rimarchevole"), "rimarchevol" );
	deepEqual( Stem("rimarrà"), "rimarr" );
	deepEqual( Stem("rimarranno"), "rimarrann" );
	deepEqual( Stem("rimarrebbe"), "rimarrebb" );
	deepEqual( Stem("rimarrei"), "rimarre" );
	deepEqual( Stem("rimase"), "rimas" );
	deepEqual( Stem("rimaser"), "rimaser" );
	deepEqual( Stem("rimasero"), "rimaser" );
	deepEqual( Stem("rimasta"), "rimast" );
	deepEqual( Stem("rimaste"), "rimast" );
	deepEqual( Stem("rimasti"), "rimast" );
	deepEqual( Stem("rimasticava"), "rimastic" );
	deepEqual( Stem("rimasto"), "rimast" );
	deepEqual( Stem("rimasugli"), "rimasugl" );
	deepEqual( Stem("rimasuglio"), "rimasugl" );
	deepEqual( Stem("rimbalzata"), "rimbalz" );
	deepEqual( Stem("rimbalzello"), "rimbalzell" );
	deepEqual( Stem("rimbambito"), "rimbamb" );
	deepEqual( Stem("rimbecillivano"), "rimbecill" );
	deepEqual( Stem("rimboccatura"), "rimboccatur" );
	deepEqual( Stem("rimbomba"), "rimbomb" );
	deepEqual( Stem("rimbombando"), "rimbomb" );
	deepEqual( Stem("rimbombar"), "rimbomb" );
	deepEqual( Stem("rimbombare"), "rimbomb" );
	deepEqual( Stem("rimbombo"), "rimbomb" );
	deepEqual( Stem("rimborsati"), "rimbors" );
	deepEqual( Stem("rimborsi"), "rimbors" );
	deepEqual( Stem("rimborso"), "rimbors" );
	deepEqual( Stem("rimbuca"), "rimbuc" );
	deepEqual( Stem("rimedi"), "rimed" );
	deepEqual( Stem("rimediare"), "rimed" );
	deepEqual( Stem("rimedii"), "rimed" );
	deepEqual( Stem("rimedio"), "rimed" );
	deepEqual( Stem("rimembranza"), "rimembr" );
	deepEqual( Stem("rimembranze"), "rimembr" );
	deepEqual( Stem("rimenare"), "rimen" );
	deepEqual( Stem("rimepire"), "rimep" );
	deepEqual( Stem("rimescendo"), "rimesc" );
	deepEqual( Stem("rimescolandole"), "rimescol" );
	deepEqual( Stem("rimescolare"), "rimescol" );
	deepEqual( Stem("rimescolarsi"), "rimescol" );
	deepEqual( Stem("rimessa"), "rimess" );
	deepEqual( Stem("rimessasi"), "rimessas" );
	deepEqual( Stem("rimesse"), "rimess" );
	deepEqual( Stem("rimessi"), "rimess" );
	deepEqual( Stem("rimessiticci"), "rimessiticc" );
	deepEqual( Stem("rimesso"), "rimess" );
	deepEqual( Stem("rimestar"), "rimest" );
	deepEqual( Stem("rimestare"), "rimest" );
	deepEqual( Stem("rimestarle"), "rimest" );
	deepEqual( Stem("rimesti"), "rimest" );
	deepEqual( Stem("rimetta"), "rimett" );
	deepEqual( Stem("rimette"), "rimett" );
	deepEqual( Stem("rimettendo"), "rimett" );
	deepEqual( Stem("rimettendosi"), "rimett" );
	deepEqual( Stem("rimetterci"), "rimett" );
	deepEqual( Stem("rimettere"), "rimett" );
	deepEqual( Stem("rimetterebbe"), "rimett" );
	deepEqual( Stem("rimetterle"), "rimett" );
	deepEqual( Stem("rimetterlo"), "rimett" );
	deepEqual( Stem("rimettermi"), "rimett" );
	deepEqual( Stem("rimettersi"), "rimett" );
	deepEqual( Stem("rimettervene"), "rimett" );
	deepEqual( Stem("rimettesse"), "rimettess" );
	deepEqual( Stem("rimettetevi"), "rimettet" );
	deepEqual( Stem("rimetteva"), "rimett" );
	deepEqual( Stem("rimettiamola"), "rimettiamol" );
	deepEqual( Stem("rimettono"), "rimett" );
	deepEqual( Stem("rimini"), "rimin" );
	deepEqual( Stem("rimischiavano"), "rimisc" );
	deepEqual( Stem("rimise"), "rimis" );
	deepEqual( Stem("rimmel"), "rimmel" );
	deepEqual( Stem("rimodellato"), "rimodell" );
	deepEqual( Stem("rimondi"), "rimond" );
	deepEqual( Stem("rimontare"), "rimont" );
	deepEqual( Stem("rimorchiatori"), "rimorc" );
	deepEqual( Stem("rimordendogli"), "rimord" );
	deepEqual( Stem("rimorsi"), "rimors" );
	deepEqual( Stem("rimorso"), "rimors" );
	deepEqual( Stem("rimosse"), "rimoss" );
	deepEqual( Stem("rimossi"), "rimoss" );
	deepEqual( Stem("rimosso"), "rimoss" );
	deepEqual( Stem("rimostranza"), "rimostr" );
	deepEqual( Stem("rimostranze"), "rimostr" );
	deepEqual( Stem("rimpallato"), "rimpall" );
	deepEqual( Stem("rimpatriata"), "rimpatr" );
	deepEqual( Stem("rimpatrio"), "rimpatr" );
	deepEqual( Stem("rimpetto"), "rimpett" );
	deepEqual( Stem("rimpiango"), "rimpiang" );
	deepEqual( Stem("rimpiatta"), "rimpiatt" );
	deepEqual( Stem("rimpiattando"), "rimpiatt" );
	deepEqual( Stem("rimpiattato"), "rimpiatt" );
	deepEqual( Stem("rimpiazzato"), "rimpiazz" );
	deepEqual( Stem("rimpingua"), "rimpingu" );
	deepEqual( Stem("rimprovera"), "rimprover" );
	deepEqual( Stem("rimproverare"), "rimprover" );
	deepEqual( Stem("rimproverate"), "rimprover" );
	deepEqual( Stem("rimproveratemi"), "rimproveratem" );
	deepEqual( Stem("rimproverato"), "rimprover" );
	deepEqual( Stem("rimproveri"), "rimprover" );
	deepEqual( Stem("rimprovero"), "rimprover" );
	deepEqual( Stem("rimuovendo"), "rimuov" );
	deepEqual( Stem("rimuoverle"), "rimuov" );
	deepEqual( Stem("rin"), "rin" );
	deepEqual( Stem("rinaldo"), "rinald" );
	deepEqual( Stem("rinasce"), "rinasc" );
	deepEqual( Stem("rinascente"), "rinascent" );
	deepEqual( Stem("rinascenti"), "rinascent" );
	deepEqual( Stem("rinascere"), "rinasc" );
	deepEqual( Stem("rinascesse"), "rinascess" );
	deepEqual( Stem("rinasceva"), "rinasc" );
	deepEqual( Stem("rinascimento"), "rinasc" );
	deepEqual( Stem("rinascita"), "rinasc" );
	deepEqual( Stem("rincamminandosi"), "rincammin" );
	deepEqual( Stem("rincamminarono"), "rincammin" );
	deepEqual( Stem("rincamminarsi"), "rincammin" );
	deepEqual( Stem("rincamminino"), "rincamminin" );
	deepEqual( Stem("rincamminò"), "rincammin" );
	deepEqual( Stem("rincantucciata"), "rincantucc" );
	deepEqual( Stem("rincantucciato"), "rincantucc" );
	deepEqual( Stem("rincarare"), "rincar" );
	deepEqual( Stem("rincari"), "rincar" );
	deepEqual( Stem("rincaro"), "rincar" );
	deepEqual( Stem("rinchiusa"), "rinchius" );
	deepEqual( Stem("rinchiuse"), "rinchius" );
	deepEqual( Stem("rinchiusi"), "rinchius" );
	deepEqual( Stem("rinchiuso"), "rinchius" );
	deepEqual( Stem("rincivilito"), "rincivil" );
	deepEqual( Stem("rincomincia"), "rincominc" );
	deepEqual( Stem("rincon"), "rincon" );
	deepEqual( Stem("rincoraggita"), "rincoragg" );
	deepEqual( Stem("rincorare"), "rincor" );
	deepEqual( Stem("rincorato"), "rincor" );
	deepEqual( Stem("rincorò"), "rincor" );
	deepEqual( Stem("rincorrono"), "rincorr" );
	deepEqual( Stem("rincorsa"), "rincors" );
	deepEqual( Stem("rincorse"), "rincors" );
	deepEqual( Stem("rinfaccia"), "rinfacc" );
	deepEqual( Stem("rinfacciamenti"), "rinfacc" );
	deepEqual( Stem("rinforzar"), "rinforz" );
	deepEqual( Stem("rinforzare"), "rinforz" );
	deepEqual( Stem("rinforzate"), "rinforz" );
	deepEqual( Stem("rinforzi"), "rinforz" );
	deepEqual( Stem("rinforzo"), "rinforz" );
	deepEqual( Stem("rinfrancare"), "rinfranc" );
	deepEqual( Stem("rinfrancata"), "rinfranc" );
	deepEqual( Stem("rinfrancato"), "rinfranc" );
	deepEqual( Stem("rinfrescare"), "rinfresc" );
	deepEqual( Stem("rinfrescata"), "rinfresc" );
	deepEqual( Stem("rinfrescato"), "rinfresc" );
	deepEqual( Stem("rinfreschi"), "rinfresc" );
	deepEqual( Stem("rinfusa"), "rinfus" );
	deepEqual( Stem("rinfuse"), "rinfus" );
	deepEqual( Stem("ring"), "ring" );
	deepEqual( Stem("ringalluzziti"), "ringalluzz" );
	deepEqual( Stem("ringiovanito"), "ringiovan" );
	deepEqual( Stem("ringiovinire"), "ringiovin" );
	deepEqual( Stem("ringrazi"), "ringraz" );
	deepEqual( Stem("ringrazia"), "ringraz" );
	deepEqual( Stem("ringraziamenti"), "ringraz" );
	deepEqual( Stem("ringraziamento"), "ringraz" );
	deepEqual( Stem("ringraziamo"), "ringraz" );
	deepEqual( Stem("ringraziando"), "ringraz" );
	deepEqual( Stem("ringraziandolo"), "ringraz" );
	deepEqual( Stem("ringraziandosi"), "ringraz" );
	deepEqual( Stem("ringraziar"), "ringraz" );
	deepEqual( Stem("ringraziare"), "ringraz" );
	deepEqual( Stem("ringraziarla"), "ringraz" );
	deepEqual( Stem("ringraziarlo"), "ringraz" );
	deepEqual( Stem("ringraziate"), "ringraz" );
	deepEqual( Stem("ringraziato"), "ringraz" );
	deepEqual( Stem("ringraziava"), "ringraz" );
	deepEqual( Stem("ringrazio"), "ringraz" );
	deepEqual( Stem("ringraziò"), "ringraz" );
	deepEqual( Stem("rinino"), "rinin" );
	deepEqual( Stem("rinnegare"), "rinneg" );
	deepEqual( Stem("rinnegato"), "rinneg" );
	deepEqual( Stem("rinnova"), "rinnov" );
	deepEqual( Stem("rinnovabili"), "rinnov" );
	deepEqual( Stem("rinnovamento"), "rinnov" );
	deepEqual( Stem("rinnovano"), "rinnov" );
	deepEqual( Stem("rinnovare"), "rinnov" );
	deepEqual( Stem("rinnovarlo"), "rinnov" );
	deepEqual( Stem("rinnovarono"), "rinnov" );
	deepEqual( Stem("rinnovarsi"), "rinnov" );
	deepEqual( Stem("rinnovata"), "rinnov" );
	deepEqual( Stem("rinnovati"), "rinnov" );
	deepEqual( Stem("rinnovato"), "rinnov" );
	deepEqual( Stem("rinnovava"), "rinnov" );
	deepEqual( Stem("rinnovavano"), "rinnov" );
	deepEqual( Stem("rinnovo"), "rinnov" );
	deepEqual( Stem("rinnovò"), "rinnov" );
	deepEqual( Stem("rino"), "rin" );
	deepEqual( Stem("rinomanza"), "rinom" );
	deepEqual( Stem("rintanarsi"), "rintan" );
	deepEqual( Stem("rintanato"), "rintan" );
	deepEqual( Stem("rintocchi"), "rintocc" );
	deepEqual( Stem("rintoppasse"), "rintopp" );
	deepEqual( Stem("rintraccia"), "rintracc" );
	deepEqual( Stem("rintracciare"), "rintracc" );
	deepEqual( Stem("rintracciato"), "rintracc" );
	deepEqual( Stem("rintrona"), "rintron" );
	deepEqual( Stem("rintuzzare"), "rintuzz" );
	deepEqual( Stem("rinuncia"), "rinunc" );
	deepEqual( Stem("rinunciando"), "rinunc" );
	deepEqual( Stem("rinunciare"), "rinunc" );
	deepEqual( Stem("rinunciato"), "rinunc" );
	deepEqual( Stem("rinunciava"), "rinunc" );
	deepEqual( Stem("rinunziare"), "rinunz" );
	deepEqual( Stem("rinunziato"), "rinunz" );
	deepEqual( Stem("rinunzio"), "rinunz" );
	deepEqual( Stem("rinvenire"), "rinven" );
	deepEqual( Stem("rinvenne"), "rinvenn" );
	deepEqual( Stem("rinvenuta"), "rinven" );
	deepEqual( Stem("rinvenuto"), "rinven" );
	deepEqual( Stem("rinverdiranno"), "rinverd" );
	deepEqual( Stem("rinverdire"), "rinverd" );
	deepEqual( Stem("rinverdite"), "rinverd" );
	deepEqual( Stem("rinviare"), "rinv" );
	deepEqual( Stem("rinviata"), "rinv" );
	deepEqual( Stem("rinviati"), "rinv" );
	deepEqual( Stem("rinviato"), "rinv" );
	deepEqual( Stem("rinvigorisce"), "rinvigor" );
	deepEqual( Stem("rinvigorita"), "rinvigor" );
	deepEqual( Stem("rinvii"), "rinv" );
	deepEqual( Stem("rinviliare"), "rinvil" );
	deepEqual( Stem("rinvio"), "rinv" );
	deepEqual( Stem("rinvoltati"), "rinvolt" );
	deepEqual( Stem("rio"), "rio" );
	deepEqual( Stem("riofferti"), "rioff" );
	deepEqual( Stem("riondino"), "riondin" );
	deepEqual( Stem("riordino"), "riordin" );
	deepEqual( Stem("riorganizzare"), "riorganizz" );
	deepEqual( Stem("riorganizzazione"), "riorganizz" );
	deepEqual( Stem("ripa"), "rip" );
	deepEqual( Stem("ripaga"), "ripag" );
	deepEqual( Stem("ripam"), "ripam" );
	deepEqual( Stem("ripamonti"), "ripamont" );
	deepEqual( Stem("ripamontii"), "ripamont" );
	deepEqual( Stem("ripara"), "ripar" );
	deepEqual( Stem("riparabile"), "ripar" );
	deepEqual( Stem("riparabili"), "ripar" );
	deepEqual( Stem("riparar"), "ripar" );
	deepEqual( Stem("riparare"), "ripar" );
	deepEqual( Stem("ripararsi"), "ripar" );
	deepEqual( Stem("riparati"), "ripar" );
	deepEqual( Stem("riparato"), "ripar" );
	deepEqual( Stem("riparazione"), "ripar" );
	deepEqual( Stem("riparazioni"), "ripar" );
	deepEqual( Stem("riparerà"), "ripar" );
	deepEqual( Stem("ripari"), "ripar" );
	deepEqual( Stem("riparlava"), "riparl" );
	deepEqual( Stem("riparo"), "ripar" );
	deepEqual( Stem("riparte"), "ripart" );
	deepEqual( Stem("ripartendo"), "ripart" );
	deepEqual( Stem("ripartimentale"), "ripartimental" );
	deepEqual( Stem("ripartirà"), "ripart" );
	deepEqual( Stem("ripartire"), "ripart" );
	deepEqual( Stem("ripartirono"), "ripart" );
	deepEqual( Stem("ripartiti"), "ripart" );
	deepEqual( Stem("ripartito"), "ripart" );
	deepEqual( Stem("ripartizione"), "ripartizion" );
	deepEqual( Stem("ripassando"), "ripass" );
	deepEqual( Stem("ripassavano"), "ripass" );
	deepEqual( Stem("ripasso"), "ripass" );
	deepEqual( Stem("ripassò"), "ripass" );
	deepEqual( Stem("ripensa"), "ripens" );
	deepEqual( Stem("ripensamento"), "ripens" );
	deepEqual( Stem("ripensando"), "ripens" );
	deepEqual( Stem("ripensarne"), "ripens" );
	deepEqual( Stem("ripensava"), "ripens" );
	deepEqual( Stem("ripentimenti"), "ripent" );
	deepEqual( Stem("ripercorso"), "ripercors" );
	deepEqual( Stem("ripercuotersi"), "ripercuot" );
	deepEqual( Stem("ripercussioni"), "ripercussion" );
	deepEqual( Stem("riperdere"), "riperd" );
	deepEqual( Stem("ripescherebbero"), "ripesc" );
	deepEqual( Stem("ripete"), "rip" );
	deepEqual( Stem("ripeté"), "ripet" );
	deepEqual( Stem("ripetendo"), "ripet" );
	deepEqual( Stem("ripeter"), "ripeter" );
	deepEqual( Stem("ripetere"), "ripet" );
	deepEqual( Stem("ripeteremo"), "ripet" );
	deepEqual( Stem("ripetergli"), "ripet" );
	deepEqual( Stem("ripeterle"), "ripet" );
	deepEqual( Stem("ripeteron"), "ripeteron" );
	deepEqual( Stem("ripetersi"), "ripet" );
	deepEqual( Stem("ripeteva"), "ripet" );
	deepEqual( Stem("ripetevan"), "ripetevan" );
	deepEqual( Stem("ripetevano"), "ripet" );
	deepEqual( Stem("ripetizione"), "ripetizion" );
	deepEqual( Stem("ripeto"), "ripet" );
	deepEqual( Stem("ripetono"), "ripet" );
	deepEqual( Stem("ripetuta"), "ripet" );
	deepEqual( Stem("ripetutamente"), "ripetut" );
	deepEqual( Stem("ripetute"), "ripet" );
	deepEqual( Stem("ripetuti"), "ripet" );
	deepEqual( Stem("ripetuto"), "ripet" );
	deepEqual( Stem("ripiano"), "rip" );
	deepEqual( Stem("ripiantano"), "ripiant" );
	deepEqual( Stem("ripicchia"), "ripicc" );
	deepEqual( Stem("ripide"), "ripid" );
	deepEqual( Stem("ripidi"), "ripid" );
	deepEqual( Stem("ripiegati"), "ripieg" );
	deepEqual( Stem("ripiegava"), "ripieg" );
	deepEqual( Stem("ripieghi"), "ripieg" );
	deepEqual( Stem("ripiego"), "ripieg" );
	deepEqual( Stem("ripieni"), "ripien" );
	deepEqual( Stem("ripieno"), "ripien" );
	deepEqual( Stem("ripigia"), "ripig" );
	deepEqual( Stem("ripigliar"), "ripigl" );
	deepEqual( Stem("ripigliava"), "ripigl" );
	deepEqual( Stem("ripigliò"), "ripigl" );
	deepEqual( Stem("ripiombò"), "ripiomb" );
	deepEqual( Stem("riponendole"), "ripon" );
	deepEqual( Stem("riponeteli"), "riponetel" );
	deepEqual( Stem("riponeva"), "ripon" );
	deepEqual( Stem("ripongo"), "ripong" );
	deepEqual( Stem("riporlo"), "riporl" );
	deepEqual( Stem("riporre"), "riporr" );
	deepEqual( Stem("riporta"), "riport" );
	deepEqual( Stem("riportando"), "riport" );
	deepEqual( Stem("riportano"), "riport" );
	deepEqual( Stem("riportare"), "riport" );
	deepEqual( Stem("riportarli"), "riport" );
	deepEqual( Stem("riportarlo"), "riport" );
	deepEqual( Stem("riportarono"), "riport" );
	deepEqual( Stem("riportata"), "riport" );
	deepEqual( Stem("riportate"), "riport" );
	deepEqual( Stem("riportati"), "riport" );
	deepEqual( Stem("riportato"), "riport" );
	deepEqual( Stem("riporterà"), "riport" );
	deepEqual( Stem("riportò"), "riport" );
	deepEqual( Stem("riposa"), "ripos" );
	deepEqual( Stem("riposar"), "ripos" );
	deepEqual( Stem("riposare"), "ripos" );
	deepEqual( Stem("riposarlo"), "ripos" );
	deepEqual( Stem("riposarono"), "ripos" );
	deepEqual( Stem("riposarsi"), "ripos" );
	deepEqual( Stem("riposarti"), "ripos" );
	deepEqual( Stem("riposata"), "ripos" );
	deepEqual( Stem("riposate"), "ripos" );
	deepEqual( Stem("riposato"), "ripos" );
	deepEqual( Stem("ripose"), "ripos" );
	deepEqual( Stem("riposo"), "ripos" );
	deepEqual( Stem("riposta"), "ripost" );
	deepEqual( Stem("riposte"), "ripost" );
	deepEqual( Stem("riposto"), "ripost" );
	deepEqual( Stem("ripregar"), "ripreg" );
	deepEqual( Stem("riprenda"), "ripr" );
	deepEqual( Stem("riprende"), "ripr" );
	deepEqual( Stem("riprendendo"), "riprend" );
	deepEqual( Stem("riprendendola"), "riprend" );
	deepEqual( Stem("riprender"), "riprender" );
	deepEqual( Stem("riprenderà"), "riprend" );
	deepEqual( Stem("riprenderanno"), "riprend" );
	deepEqual( Stem("riprendere"), "riprend" );
	deepEqual( Stem("riprenderle"), "riprend" );
	deepEqual( Stem("riprenderli"), "riprend" );
	deepEqual( Stem("riprenderlo"), "riprend" );
	deepEqual( Stem("riprendersi"), "riprend" );
	deepEqual( Stem("riprendervi"), "riprend" );
	deepEqual( Stem("riprendeva"), "riprend" );
	deepEqual( Stem("riprendiamo"), "riprend" );
	deepEqual( Stem("riprendono"), "riprend" );
	deepEqual( Stem("ripresa"), "ripres" );
	deepEqual( Stem("riprese"), "ripres" );
	deepEqual( Stem("ripresentarsi"), "ripresent" );
	deepEqual( Stem("ripresero"), "ripreser" );
	deepEqual( Stem("ripresi"), "ripres" );
	deepEqual( Stem("ripreso"), "ripres" );
	deepEqual( Stem("riprincipiare"), "riprincip" );
	deepEqual( Stem("ripristinare"), "ripristin" );
	deepEqual( Stem("ripristinate"), "ripristin" );
	deepEqual( Stem("ripristinato"), "ripristin" );
	deepEqual( Stem("riprodotto"), "riprodott" );
	deepEqual( Stem("riprodurla"), "riprodurl" );
	deepEqual( Stem("ripropone"), "ripropon" );
	deepEqual( Stem("ripropongo"), "ripropong" );
	deepEqual( Stem("riproposta"), "ripropost" );
	deepEqual( Stem("riproposto"), "ripropost" );
	deepEqual( Stem("riprovarci"), "riprov" );
	deepEqual( Stem("ripubblicare"), "ripubblic" );
	deepEqual( Stem("ripubblicate"), "ripubblic" );
	deepEqual( Stem("ripugnanza"), "ripugn" );
	deepEqual( Stem("ripugnanze"), "ripugn" );
	deepEqual( Stem("ripulire"), "ripul" );
	deepEqual( Stem("ripulita"), "ripul" );
	deepEqual( Stem("ripulse"), "ripuls" );
	deepEqual( Stem("riputate"), "riput" );
	deepEqual( Stem("riputati"), "riput" );
	deepEqual( Stem("riputatissime"), "riputatissim" );
	deepEqual( Stem("riputato"), "riput" );
	deepEqual( Stem("riputazion"), "riputazion" );
	deepEqual( Stem("riputazione"), "riput" );
	deepEqual( Stem("riputazioni"), "riput" );
	deepEqual( Stem("riqualificazione"), "riqualif" );
	deepEqual( Stem("rirnprovero"), "rirnprover" );
	deepEqual( Stem("ris"), "ris" );
	deepEqual( Stem("risa"), "ris" );
	deepEqual( Stem("risale"), "risal" );
	deepEqual( Stem("risalgono"), "risalg" );
	deepEqual( Stem("risalire"), "risal" );
	deepEqual( Stem("risalite"), "risal" );
	deepEqual( Stem("risalito"), "risal" );
	deepEqual( Stem("risaliva"), "risal" );
	deepEqual( Stem("risaltando"), "risalt" );
	deepEqual( Stem("risaltare"), "risalt" );
	deepEqual( Stem("risalto"), "risalt" );
	deepEqual( Stem("risanamento"), "risan" );
	deepEqual( Stem("risanare"), "risan" );
	deepEqual( Stem("risaper"), "risaper" );
	deepEqual( Stem("risapere"), "risap" );
	deepEqual( Stem("risaputa"), "risap" );
	deepEqual( Stem("risaputo"), "risap" );
	deepEqual( Stem("risarcimento"), "risarc" );
	deepEqual( Stem("risarcire"), "risarc" );
	deepEqual( Stem("risarcirlo"), "risarc" );
	deepEqual( Stem("risate"), "ris" );
	deepEqual( Stem("riscaldamento"), "riscald" );
	deepEqual( Stem("riscaldare"), "riscald" );
	deepEqual( Stem("riscaldarsi"), "riscald" );
	deepEqual( Stem("riscaldata"), "riscald" );
	deepEqual( Stem("riscaldati"), "riscald" );
	deepEqual( Stem("riscaldato"), "riscald" );
	deepEqual( Stem("riscatta"), "riscatt" );
	deepEqual( Stem("riscattati"), "riscatt" );
	deepEqual( Stem("riscattavano"), "riscatt" );
	deepEqual( Stem("riscatto"), "riscatt" );
	deepEqual( Stem("rischi"), "risc" );
	deepEqual( Stem("rischia"), "risc" );
	deepEqual( Stem("rischiano"), "risc" );
	deepEqual( Stem("rischiarato"), "rischiar" );
	deepEqual( Stem("rischiare"), "risc" );
	deepEqual( Stem("rischiato"), "risc" );
	deepEqual( Stem("rischierebbero"), "risc" );
	deepEqual( Stem("rischio"), "risc" );
	deepEqual( Stem("rischiosa"), "rischios" );
	deepEqual( Stem("rischiose"), "rischios" );
	deepEqual( Stem("rischiosità"), "rischios" );
	deepEqual( Stem("rischioso"), "rischios" );
	deepEqual( Stem("riscontra"), "riscontr" );
	deepEqual( Stem("riscontrandole"), "riscontr" );
	deepEqual( Stem("riscontrandosi"), "riscontr" );
	deepEqual( Stem("riscontrano"), "riscontr" );
	deepEqual( Stem("riscontrata"), "riscontr" );
	deepEqual( Stem("riscontrati"), "riscontr" );
	deepEqual( Stem("riscontrato"), "riscontr" );
	deepEqual( Stem("riscontri"), "riscontr" );
	deepEqual( Stem("riscontro"), "riscontr" );
	deepEqual( Stem("riscoprire"), "riscopr" );
	deepEqual( Stem("riscossa"), "riscoss" );
	deepEqual( Stem("riscosse"), "riscoss" );
	deepEqual( Stem("riscosso"), "riscoss" );
	deepEqual( Stem("riscossone"), "riscosson" );
	deepEqual( Stem("riscotendosi"), "riscot" );
	deepEqual( Stem("riscoter"), "riscoter" );
	deepEqual( Stem("riscotere"), "riscot" );
	deepEqual( Stem("riscoteva"), "riscot" );
	deepEqual( Stem("riscotono"), "riscot" );
	deepEqual( Stem("riscrivere"), "riscriv" );
	deepEqual( Stem("riscuotere"), "riscuot" );
	deepEqual( Stem("riscuotono"), "riscuot" );
	deepEqual( Stem("risente"), "risent" );
	deepEqual( Stem("risentì"), "risent" );
	deepEqual( Stem("risentimento"), "risent" );
	deepEqual( Stem("risentire"), "risent" );
	deepEqual( Stem("risentirsi"), "risent" );
	deepEqual( Stem("risentita"), "risent" );
	deepEqual( Stem("risentite"), "risent" );
	deepEqual( Stem("risentiti"), "risent" );
	deepEqual( Stem("risentito"), "risent" );
	deepEqual( Stem("riseppe"), "risepp" );
	deepEqual( Stem("riseppero"), "risepper" );
	deepEqual( Stem("riserbata"), "riserb" );
	deepEqual( Stem("riserbo"), "riserb" );
	deepEqual( Stem("riserva"), "riserv" );
	deepEqual( Stem("riservassero"), "riserv" );
	deepEqual( Stem("riservata"), "riserv" );
	deepEqual( Stem("riservate"), "riserv" );
	deepEqual( Stem("riservati"), "riserv" );
	deepEqual( Stem("riservato"), "riserv" );
	deepEqual( Stem("riserve"), "riserv" );
	deepEqual( Stem("riservisti"), "riserv" );
	deepEqual( Stem("risiamo"), "ris" );
	deepEqual( Stem("risica"), "risic" );
	deepEqual( Stem("risicar"), "risic" );
	deepEqual( Stem("risicare"), "risic" );
	deepEqual( Stem("risiedeva"), "risied" );
	deepEqual( Stem("risk"), "risk" );
	deepEqual( Stem("riso"), "ris" );
	deepEqual( Stem("risolta"), "risolt" );
	deepEqual( Stem("risolte"), "risolt" );
	deepEqual( Stem("risolto"), "risolt" );
	deepEqual( Stem("risoluta"), "risol" );
	deepEqual( Stem("risolutamente"), "risolut" );
	deepEqual( Stem("risolute"), "risol" );
	deepEqual( Stem("risolutezza"), "risolutezz" );
	deepEqual( Stem("risoluti"), "risol" );
	deepEqual( Stem("risolutive"), "risolut" );
	deepEqual( Stem("risolutivo"), "risolut" );
	deepEqual( Stem("risoluto"), "risol" );
	deepEqual( Stem("risoluzione"), "risolu" );
	deepEqual( Stem("risoluzioni"), "risolu" );
	deepEqual( Stem("risolva"), "risolv" );
	deepEqual( Stem("risolve"), "risolv" );
	deepEqual( Stem("risolvendo"), "risolv" );
	deepEqual( Stem("risolver"), "risolver" );
	deepEqual( Stem("risolverà"), "risolv" );
	deepEqual( Stem("risolvere"), "risolv" );
	deepEqual( Stem("risolversi"), "risolv" );
	deepEqual( Stem("risolvesse"), "risolvess" );
	deepEqual( Stem("risolvete"), "risolv" );
	deepEqual( Stem("risolvette"), "risolvett" );
	deepEqual( Stem("risolvettero"), "risolvetter" );
	deepEqual( Stem("risolveva"), "risolv" );
	deepEqual( Stem("risolvimento"), "risolv" );
	deepEqual( Stem("risolvon"), "risolvon" );
	deepEqual( Stem("risonanti"), "rison" );
	deepEqual( Stem("risonare"), "rison" );
	deepEqual( Stem("risonava"), "rison" );
	deepEqual( Stem("risone"), "rison" );
	deepEqual( Stem("risonò"), "rison" );
	deepEqual( Stem("risorgimento"), "risorg" );
	deepEqual( Stem("risorsa"), "risors" );
	deepEqual( Stem("risorse"), "risors" );
	deepEqual( Stem("risorsero"), "risorser" );
	deepEqual( Stem("risospirato"), "risospir" );
	deepEqual( Stem("risp"), "risp" );
	deepEqual( Stem("rispamio"), "rispam" );
	deepEqual( Stem("risparmi"), "risp" );
	deepEqual( Stem("risparmiando"), "risparm" );
	deepEqual( Stem("risparmiare"), "risparm" );
	deepEqual( Stem("risparmiarselo"), "risparmiarsel" );
	deepEqual( Stem("risparmiati"), "risparm" );
	deepEqual( Stem("risparmiato"), "risparm" );
	deepEqual( Stem("risparmiatori"), "risparm" );
	deepEqual( Stem("risparmiava"), "risparm" );
	deepEqual( Stem("risparmio"), "risparm" );
	deepEqual( Stem("risparmiò"), "risparm" );
	deepEqual( Stem("rispaventarsi"), "rispavent" );
	deepEqual( Stem("rispecchia"), "rispecc" );
	deepEqual( Stem("rispetta"), "rispett" );
	deepEqual( Stem("rispettabile"), "rispett" );
	deepEqual( Stem("rispettabili"), "rispett" );
	deepEqual( Stem("rispettabilità"), "rispett" );
	deepEqual( Stem("rispettando"), "rispett" );
	deepEqual( Stem("rispettarci"), "rispett" );
	deepEqual( Stem("rispettare"), "rispett" );
	deepEqual( Stem("rispettata"), "rispett" );
	deepEqual( Stem("rispettate"), "rispett" );
	deepEqual( Stem("rispettati"), "rispett" );
	deepEqual( Stem("rispettato"), "rispett" );
	deepEqual( Stem("rispetti"), "rispett" );
	deepEqual( Stem("rispettiamo"), "rispett" );
	deepEqual( Stem("rispettivamente"), "rispett" );
	deepEqual( Stem("rispettive"), "rispett" );
	deepEqual( Stem("rispettivi"), "rispett" );
	deepEqual( Stem("rispetto"), "rispett" );
	deepEqual( Stem("rispettosa"), "rispett" );
	deepEqual( Stem("rispettosamente"), "rispett" );
	deepEqual( Stem("rispettose"), "rispett" );
	deepEqual( Stem("rispettoso"), "rispett" );
	deepEqual( Stem("rispinge"), "risping" );
	deepEqual( Stem("rispingendo"), "risping" );
	deepEqual( Stem("rispingendola"), "risping" );
	deepEqual( Stem("rispingerla"), "risping" );
	deepEqual( Stem("rispingerne"), "risping" );
	deepEqual( Stem("rispinse"), "rispins" );
	deepEqual( Stem("rispinte"), "rispint" );
	deepEqual( Stem("risplenda"), "rispl" );
	deepEqual( Stem("rispoli"), "rispol" );
	deepEqual( Stem("rispolverano"), "rispolver" );
	deepEqual( Stem("rispolverare"), "rispolver" );
	deepEqual( Stem("risponda"), "rispond" );
	deepEqual( Stem("risponde"), "rispond" );
	deepEqual( Stem("rispondendo"), "rispond" );
	deepEqual( Stem("rispondenti"), "rispondent" );
	deepEqual( Stem("risponder"), "risponder" );
	deepEqual( Stem("rispondere"), "rispond" );
	deepEqual( Stem("risponderebbe"), "rispond" );
	deepEqual( Stem("risponderebbero"), "rispond" );
	deepEqual( Stem("risponderete"), "rispond" );
	deepEqual( Stem("rispondergli"), "rispond" );
	deepEqual( Stem("risponderne"), "rispond" );
	deepEqual( Stem("rispondesse"), "rispondess" );
	deepEqual( Stem("rispondete"), "rispond" );
	deepEqual( Stem("rispondeva"), "rispond" );
	deepEqual( Stem("rispondevan"), "rispondevan" );
	deepEqual( Stem("rispondevano"), "rispond" );
	deepEqual( Stem("rispondi"), "rispond" );
	deepEqual( Stem("risposarsi"), "rispos" );
	deepEqual( Stem("rispose"), "rispos" );
	deepEqual( Stem("risposer"), "risposer" );
	deepEqual( Stem("risposero"), "risposer" );
	deepEqual( Stem("risposi"), "rispos" );
	deepEqual( Stem("risposta"), "rispost" );
	deepEqual( Stem("risposte"), "rispost" );
	deepEqual( Stem("risposto"), "rispost" );
	deepEqual( Stem("rispostogli"), "rispostogl" );
	deepEqual( Stem("rispostole"), "rispostol" );
	deepEqual( Stem("rissa"), "riss" );
	deepEqual( Stem("risse"), "riss" );
	deepEqual( Stem("rissoso"), "rissos" );
	deepEqual( Stem("ristabilendo"), "ristabil" );
	deepEqual( Stem("ristabilire"), "ristabil" );
	deepEqual( Stem("ristabilisca"), "ristabil" );
	deepEqual( Stem("ristagnare"), "ristagn" );
	deepEqual( Stem("ristagno"), "ristagn" );
	deepEqual( Stem("ristorante"), "ristor" );
	deepEqual( Stem("ristorar"), "ristor" );
	deepEqual( Stem("ristorarla"), "ristor" );
	deepEqual( Stem("ristorarsi"), "ristor" );
	deepEqual( Stem("ristorarvi"), "ristor" );
	deepEqual( Stem("ristorativa"), "ristor" );
	deepEqual( Stem("ristorativi"), "ristor" );
	deepEqual( Stem("ristorativo"), "ristor" );
	deepEqual( Stem("ristori"), "ristor" );
	deepEqual( Stem("ristoro"), "ristor" );
	deepEqual( Stem("ristretta"), "ristrett" );
	deepEqual( Stem("ristrettezza"), "ristrettezz" );
	deepEqual( Stem("ristretti"), "ristrett" );
	deepEqual( Stem("ristretto"), "ristrett" );
	deepEqual( Stem("ristringendosi"), "ristring" );
	deepEqual( Stem("ristringerne"), "ristring" );
	deepEqual( Stem("ristringersi"), "ristring" );
	deepEqual( Stem("ristringessero"), "ristring" );
	deepEqual( Stem("ristringeva"), "ristring" );
	deepEqual( Stem("ristrinse"), "ristrins" );
	deepEqual( Stem("ristrinsero"), "ristrinser" );
	deepEqual( Stem("ristrutturazione"), "ristruttur" );
	deepEqual( Stem("risucchiarci"), "risucc" );
	deepEqual( Stem("risulata"), "risul" );
	deepEqual( Stem("risulta"), "risult" );
	deepEqual( Stem("risultando"), "risult" );
	deepEqual( Stem("risultano"), "risult" );
	deepEqual( Stem("risultante"), "risult" );
	deepEqual( Stem("risultare"), "risult" );
	deepEqual( Stem("risultargli"), "risult" );
	deepEqual( Stem("risultate"), "risult" );
	deepEqual( Stem("risultati"), "risult" );
	deepEqual( Stem("risultato"), "risult" );
	deepEqual( Stem("risultava"), "risult" );
	deepEqual( Stem("risulterebbe"), "risult" );
	deepEqual( Stem("risulti"), "risult" );
	deepEqual( Stem("risuscitatolo"), "risuscitatol" );
	deepEqual( Stem("risveglia"), "risvegl" );
	deepEqual( Stem("risvegliando"), "risvegl" );
	deepEqual( Stem("risvegliasse"), "risvegl" );
	deepEqual( Stem("risvegliata"), "risvegl" );
	deepEqual( Stem("risvegliato"), "risvegl" );
	deepEqual( Stem("risvegliava"), "risvegl" );
	deepEqual( Stem("risvegliavano"), "risvegl" );
	deepEqual( Stem("risveglino"), "risveglin" );
	deepEqual( Stem("risvegliò"), "risvegl" );
	deepEqual( Stem("rita"), "rit" );
	deepEqual( Stem("ritagli"), "ritagl" );
	deepEqual( Stem("ritaglio"), "ritagl" );
	deepEqual( Stem("ritarda"), "ritard" );
	deepEqual( Stem("ritardando"), "ritard" );
	deepEqual( Stem("ritardarla"), "ritard" );
	deepEqual( Stem("ritardata"), "ritard" );
	deepEqual( Stem("ritardato"), "ritard" );
	deepEqual( Stem("ritardi"), "ritard" );
	deepEqual( Stem("ritardo"), "ritard" );
	deepEqual( Stem("ritchie"), "ritc" );
	deepEqual( Stem("ritegno"), "ritegn" );
	deepEqual( Stem("ritenendo"), "riten" );
	deepEqual( Stem("ritenere"), "riten" );
	deepEqual( Stem("ritenessero"), "riten" );
	deepEqual( Stem("ritenete"), "riten" );
	deepEqual( Stem("riteneva"), "riten" );
	deepEqual( Stem("ritenga"), "riteng" );
	deepEqual( Stem("ritengo"), "riteng" );
	deepEqual( Stem("ritengono"), "riteng" );
	deepEqual( Stem("riteniamo"), "riten" );
	deepEqual( Stem("ritenne"), "ritenn" );
	deepEqual( Stem("ritentare"), "ritent" );
	deepEqual( Stem("ritenuta"), "riten" );
	deepEqual( Stem("ritenute"), "riten" );
	deepEqual( Stem("ritenuti"), "riten" );
	deepEqual( Stem("ritenuto"), "riten" );
	deepEqual( Stem("riti"), "rit" );
	deepEqual( Stem("ritiene"), "ritien" );
	deepEqual( Stem("ritira"), "ritir" );
	deepEqual( Stem("ritirando"), "ritir" );
	deepEqual( Stem("ritirandosi"), "ritir" );
	deepEqual( Stem("ritirano"), "ritir" );
	deepEqual( Stem("ritirar"), "ritir" );
	deepEqual( Stem("ritirare"), "ritir" );
	deepEqual( Stem("ritirarmi"), "ritir" );
	deepEqual( Stem("ritirarsene"), "ritir" );
	deepEqual( Stem("ritirarsi"), "ritir" );
	deepEqual( Stem("ritirassero"), "ritir" );
	deepEqual( Stem("ritirata"), "ritir" );
	deepEqual( Stem("ritirate"), "ritir" );
	deepEqual( Stem("ritiratevi"), "ritirat" );
	deepEqual( Stem("ritirati"), "ritir" );
	deepEqual( Stem("ritiratisi"), "ritiratis" );
	deepEqual( Stem("ritirato"), "ritir" );
	deepEqual( Stem("ritiratosi"), "ritirat" );
	deepEqual( Stem("ritirava"), "ritir" );
	deepEqual( Stem("ritiravan"), "ritiravan" );
	deepEqual( Stem("ritiri"), "ritir" );
	deepEqual( Stem("ritirino"), "ritirin" );
	deepEqual( Stem("ritiro"), "ritir" );
	deepEqual( Stem("ritirò"), "rit" );
	deepEqual( Stem("ritmicamente"), "ritmic" );
	deepEqual( Stem("ritmo"), "ritm" );
	deepEqual( Stem("rito"), "rit" );
	deepEqual( Stem("ritoccando"), "ritocc" );
	deepEqual( Stem("ritoccato"), "ritocc" );
	deepEqual( Stem("ritocco"), "ritocc" );
	deepEqual( Stem("ritorna"), "ritorn" );
	deepEqual( Stem("ritornan"), "ritornan" );
	deepEqual( Stem("ritornandoci"), "ritorn" );
	deepEqual( Stem("ritornar"), "ritorn" );
	deepEqual( Stem("ritornare"), "ritorn" );
	deepEqual( Stem("ritornarono"), "ritorn" );
	deepEqual( Stem("ritornatele"), "ritornatel" );
	deepEqual( Stem("ritornato"), "ritorn" );
	deepEqual( Stem("ritornava"), "ritorn" );
	deepEqual( Stem("ritorneremo"), "ritorn" );
	deepEqual( Stem("ritorni"), "ritorn" );
	deepEqual( Stem("ritorniamo"), "ritorn" );
	deepEqual( Stem("ritorno"), "ritorn" );
	deepEqual( Stem("ritornò"), "ritorn" );
	deepEqual( Stem("ritorte"), "ritort" );
	deepEqual( Stem("ritrae"), "ritra" );
	deepEqual( Stem("ritraggono"), "ritragg" );
	deepEqual( Stem("ritrarne"), "ritr" );
	deepEqual( Stem("ritrarre"), "ritrarr" );
	deepEqual( Stem("ritratta"), "ritratt" );
	deepEqual( Stem("ritrattazione"), "ritratt" );
	deepEqual( Stem("ritratti"), "ritratt" );
	deepEqual( Stem("ritratto"), "ritratt" );
	deepEqual( Stem("ritrosia"), "ritros" );
	deepEqual( Stem("ritrouauano"), "ritrouau" );
	deepEqual( Stem("ritrova"), "ritrov" );
	deepEqual( Stem("ritrovamenti"), "ritrov" );
	deepEqual( Stem("ritrovamento"), "ritrov" );
	deepEqual( Stem("ritrovar"), "ritrov" );
	deepEqual( Stem("ritrovare"), "ritrov" );
	deepEqual( Stem("ritrovarsi"), "ritrov" );
	deepEqual( Stem("ritrovarvi"), "ritrov" );
	deepEqual( Stem("ritrovata"), "ritrov" );
	deepEqual( Stem("ritrovate"), "ritrov" );
	deepEqual( Stem("ritrovati"), "ritrov" );
	deepEqual( Stem("ritrovato"), "ritrov" );
	deepEqual( Stem("ritroverà"), "ritrov" );
	deepEqual( Stem("ritrovi"), "ritrov" );
	deepEqual( Stem("ritrovo"), "ritrov" );
	deepEqual( Stem("ritta"), "ritt" );
	deepEqual( Stem("ritte"), "ritt" );
	deepEqual( Stem("ritti"), "ritt" );
	deepEqual( Stem("ritto"), "ritt" );
	deepEqual( Stem("rituale"), "ritual" );
	deepEqual( Stem("rituffavano"), "rituff" );
	deepEqual( Stem("riunendosi"), "riun" );
	deepEqual( Stem("riunì"), "riun" );
	deepEqual( Stem("riuniamo"), "riun" );
	deepEqual( Stem("riunione"), "riunion" );
	deepEqual( Stem("riunioni"), "riunion" );
	deepEqual( Stem("riunirà"), "riun" );
	deepEqual( Stem("riuniranno"), "riun" );
	deepEqual( Stem("riunirci"), "riun" );
	deepEqual( Stem("riuniremo"), "riun" );
	deepEqual( Stem("riunirono"), "riun" );
	deepEqual( Stem("riunirsi"), "riun" );
	deepEqual( Stem("riunisca"), "riun" );
	deepEqual( Stem("riunisce"), "riun" );
	deepEqual( Stem("riuniscono"), "riun" );
	deepEqual( Stem("riunita"), "riun" );
	deepEqual( Stem("riunite"), "riun" );
	deepEqual( Stem("riuniti"), "riun" );
	deepEqual( Stem("riunito"), "riun" );
	deepEqual( Stem("riunitosi"), "riunit" );
	deepEqual( Stem("riunivano"), "riun" );
	deepEqual( Stem("riuscendo"), "riusc" );
	deepEqual( Stem("riuscendogli"), "riusc" );
	deepEqual( Stem("riuscì"), "riusc" );
	deepEqual( Stem("riusciamo"), "riusc" );
	deepEqual( Stem("riuscir"), "riusc" );
	deepEqual( Stem("riuscirà"), "riusc" );
	deepEqual( Stem("riuscire"), "riusc" );
	deepEqual( Stem("riuscirebbe"), "riusc" );
	deepEqual( Stem("riuscirete"), "riusc" );
	deepEqual( Stem("riuscirono"), "riusc" );
	deepEqual( Stem("riuscirvi"), "riusc" );
	deepEqual( Stem("riuscisse"), "riusciss" );
	deepEqual( Stem("riuscissero"), "riusc" );
	deepEqual( Stem("riuscita"), "riusc" );
	deepEqual( Stem("riuscite"), "riusc" );
	deepEqual( Stem("riusciti"), "riusc" );
	deepEqual( Stem("riuscito"), "riusc" );
	deepEqual( Stem("riusciva"), "riusc" );
	deepEqual( Stem("riuscivamo"), "riusc" );
	deepEqual( Stem("riuscivan"), "riuscivan" );
	deepEqual( Stem("riuscivano"), "riusc" );
	deepEqual( Stem("riva"), "riv" );
	deepEqual( Stem("rivale"), "rival" );
	deepEqual( Stem("rivali"), "rival" );
	deepEqual( Stem("rivalità"), "rival" );
	deepEqual( Stem("rivalutare"), "rivalut" );
	deepEqual( Stem("rivalutata"), "rivalut" );
	deepEqual( Stem("rivangare"), "rivang" );
	deepEqual( Stem("rive"), "riv" );
	deepEqual( Stem("riveda"), "rived" );
	deepEqual( Stem("rivede"), "rived" );
	deepEqual( Stem("riveder"), "riveder" );
	deepEqual( Stem("rivederci"), "rived" );
	deepEqual( Stem("rivedere"), "rived" );
	deepEqual( Stem("rivederli"), "rived" );
	deepEqual( Stem("rivedersi"), "rived" );
	deepEqual( Stem("rivediamo"), "rived" );
	deepEqual( Stem("rivedrà"), "rivedr" );
	deepEqual( Stem("rivedremo"), "rivedrem" );
	deepEqual( Stem("rivedrete"), "rivedr" );
	deepEqual( Stem("rivela"), "rivel" );
	deepEqual( Stem("rivelano"), "rivel" );
	deepEqual( Stem("rivelare"), "rivel" );
	deepEqual( Stem("rivelarne"), "rivel" );
	deepEqual( Stem("rivelarono"), "rivel" );
	deepEqual( Stem("rivelata"), "rivel" );
	deepEqual( Stem("rivelato"), "rivel" );
	deepEqual( Stem("rivelazione"), "rivel" );
	deepEqual( Stem("rivelazioni"), "rivel" );
	deepEqual( Stem("rivelazionì"), "rivelazion" );
	deepEqual( Stem("rivelò"), "rivel" );
	deepEqual( Stem("rivendicando"), "rivendic" );
	deepEqual( Stem("rivendicano"), "rivendic" );
	deepEqual( Stem("rivendicare"), "rivendic" );
	deepEqual( Stem("rivendicato"), "rivendic" );
	deepEqual( Stem("rivendicazione"), "rivend" );
	deepEqual( Stem("rivendicazioni"), "rivend" );
	deepEqual( Stem("river"), "river" );
	deepEqual( Stem("rivera"), "river" );
	deepEqual( Stem("riverente"), "riverent" );
	deepEqual( Stem("riverentemente"), "riverent" );
	deepEqual( Stem("riverenza"), "riverent" );
	deepEqual( Stem("riverenze"), "riverent" );
	deepEqual( Stem("riverirlo"), "river" );
	deepEqual( Stem("riverisce"), "river" );
	deepEqual( Stem("riverisco"), "river" );
	deepEqual( Stem("riverita"), "river" );
	deepEqual( Stem("riverito"), "river" );
	deepEqual( Stem("riverniciati"), "rivernic" );
	deepEqual( Stem("riversa"), "rivers" );
	deepEqual( Stem("riversare"), "rivers" );
	deepEqual( Stem("riversata"), "rivers" );
	deepEqual( Stem("riversate"), "rivers" );
	deepEqual( Stem("riverso"), "rivers" );
	deepEqual( Stem("rivestì"), "rivest" );
	deepEqual( Stem("rivestirsi"), "rivest" );
	deepEqual( Stem("rivestita"), "rivest" );
	deepEqual( Stem("rivestito"), "rivest" );
	deepEqual( Stem("rivestivano"), "rivest" );
	deepEqual( Stem("rivide"), "rivid" );
	deepEqual( Stem("riviera"), "rivier" );
	deepEqual( Stem("rivieraschi"), "rivierasc" );
	deepEqual( Stem("rivisitazione"), "rivisit" );
	deepEqual( Stem("rivista"), "rivist" );
	deepEqual( Stem("riviste"), "rivist" );
	deepEqual( Stem("rivisto"), "rivist" );
	deepEqual( Stem("rivitalizzare"), "rivitalizz" );
	deepEqual( Stem("rivitalizzazione"), "rivitalizz" );
	deepEqual( Stem("rivivere"), "riviv" );
	deepEqual( Stem("rivocarlo"), "rivoc" );
	deepEqual( Stem("rivola"), "rivol" );
	deepEqual( Stem("rivolge"), "rivolg" );
	deepEqual( Stem("rivolgendo"), "rivolg" );
	deepEqual( Stem("rivolgendosi"), "rivolg" );
	deepEqual( Stem("rivolgere"), "rivolg" );
	deepEqual( Stem("rivolgerebbe"), "rivolg" );
	deepEqual( Stem("rivolgerle"), "rivolg" );
	deepEqual( Stem("rivolgerlo"), "rivolg" );
	deepEqual( Stem("rivolgermi"), "rivolg" );
	deepEqual( Stem("rivolgerò"), "rivolg" );
	deepEqual( Stem("rivolgersi"), "rivolg" );
	deepEqual( Stem("rivolgessero"), "rivolg" );
	deepEqual( Stem("rivolgeva"), "rivolg" );
	deepEqual( Stem("rivolgono"), "rivolg" );
	deepEqual( Stem("rivolse"), "rivols" );
	deepEqual( Stem("rivolsero"), "rivolser" );
	deepEqual( Stem("rivolta"), "rivolt" );
	deepEqual( Stem("rivoltandosi"), "rivolt" );
	deepEqual( Stem("rivoltano"), "rivolt" );
	deepEqual( Stem("rivoltare"), "rivolt" );
	deepEqual( Stem("rivoltarsi"), "rivolt" );
	deepEqual( Stem("rivoltate"), "rivolt" );
	deepEqual( Stem("rivoltati"), "rivolt" );
	deepEqual( Stem("rivoltava"), "rivolt" );
	deepEqual( Stem("rivolte"), "rivolt" );
	deepEqual( Stem("rivoltegli"), "rivoltegl" );
	deepEqual( Stem("rivolterebbero"), "rivolt" );
	deepEqual( Stem("rivolti"), "rivolt" );
	deepEqual( Stem("rivoltiamo"), "rivolt" );
	deepEqual( Stem("rivoltigli"), "rivoltigl" );
	deepEqual( Stem("rivolto"), "rivolt" );
	deepEqual( Stem("rivoltò"), "rivolt" );
	deepEqual( Stem("rivoluzionari"), "rivoluzionar" );
	deepEqual( Stem("rivoluzionaria"), "rivoluzionar" );
	deepEqual( Stem("rivoluzionario"), "rivoluzionar" );
	deepEqual( Stem("rivoluzione"), "rivolu" );
	deepEqual( Stem("rivoluzioni"), "rivolu" );
	deepEqual( Stem("rivotandolo"), "rivot" );
	deepEqual( Stem("riz"), "riz" );
	deepEqual( Stem("rizza"), "rizz" );
	deepEqual( Stem("rizzandosi"), "rizz" );
	deepEqual( Stem("rizzano"), "rizz" );
	deepEqual( Stem("rizzar"), "rizz" );
	deepEqual( Stem("rizzata"), "rizz" );
	deepEqual( Stem("rizzate"), "rizz" );
	deepEqual( Stem("rizzatosi"), "rizzat" );
	deepEqual( Stem("rizzi"), "rizz" );
	deepEqual( Stem("rizzitelli"), "rizzitell" );
	deepEqual( Stem("rizzo"), "rizz" );
	deepEqual( Stem("rizzò"), "rizz" );
	deepEqual( Stem("rizzoli"), "rizzol" );
	deepEqual( Stem("rl"), "rl" );
	deepEqual( Stem("rm"), "rm" );
	deepEqual( Stem("rmzi"), "rmzi" );
	deepEqual( Stem("rnc"), "rnc" );
	deepEqual( Stem("roba"), "rob" );
	deepEqual( Stem("robbe"), "robb" );
	deepEqual( Stem("robben"), "robben" );
	deepEqual( Stem("robbie"), "robb" );
	deepEqual( Stem("robe"), "rob" );
	deepEqual( Stem("robert"), "robert" );
	deepEqual( Stem("roberto"), "robert" );
	deepEqual( Stem("robertson"), "robertson" );
	deepEqual( Stem("robin"), "robin" );
	deepEqual( Stem("robinson"), "robinson" );
	deepEqual( Stem("robocop"), "robocop" );
	deepEqual( Stem("robusta"), "robust" );
	deepEqual( Stem("robustezza"), "robustezz" );
	deepEqual( Stem("robusti"), "robust" );
	deepEqual( Stem("roca"), "roc" );
	deepEqual( Stem("rocambolesche"), "rocambolesc" );
	deepEqual( Stem("rocca"), "rocc" );
	deepEqual( Stem("roccaforte"), "roccafort" );
	deepEqual( Stem("roccatrici"), "roccatric" );
	deepEqual( Stem("roccella"), "roccell" );
	deepEqual( Stem("rocchetta"), "rocchett" );
	deepEqual( Stem("rocchi"), "rocc" );
	deepEqual( Stem("roccia"), "rocc" );
	deepEqual( Stem("rocco"), "rocc" );
	deepEqual( Stem("rock"), "rock" );
	deepEqual( Stem("rocroi"), "rocro" );
	deepEqual( Stem("rod"), "rod" );
	deepEqual( Stem("rode"), "rod" );
	deepEqual( Stem("rodendosi"), "rod" );
	deepEqual( Stem("rodere"), "rod" );
	deepEqual( Stem("rodersi"), "rod" );
	deepEqual( Stem("rodeva"), "rod" );
	deepEqual( Stem("rodhes"), "rodhes" );
	deepEqual( Stem("rodi"), "rod" );
	deepEqual( Stem("rodimento"), "rod" );
	deepEqual( Stem("rodìo"), "rodì" );
	deepEqual( Stem("rodman"), "rodman" );
	deepEqual( Stem("rodney"), "rodney" );
	deepEqual( Stem("rodomonte"), "rodomont" );
	deepEqual( Stem("rodotà"), "rodot" );
	deepEqual( Stem("rodrigo"), "rodrig" );
	deepEqual( Stem("rodriguez"), "rodriguez" );
	deepEqual( Stem("rodriquez"), "rodriquez" );
	deepEqual( Stem("roger"), "roger" );
	deepEqual( Stem("rogeriò"), "roger" );
	deepEqual( Stem("rogers"), "rogers" );
	deepEqual( Stem("rognoni"), "rognon" );
	deepEqual( Stem("roidi"), "roid" );
	deepEqual( Stem("rolando"), "rol" );
	deepEqual( Stem("roll"), "roll" );
	deepEqual( Stem("rolls"), "rolls" );
	deepEqual( Stem("rolo"), "rol" );
	deepEqual( Stem("rolò"), "rol" );
	deepEqual( Stem("roloamerica"), "roloamer" );
	deepEqual( Stem("rolobonds"), "rolobonds" );
	deepEqual( Stem("roloeuropa"), "roloeurop" );
	deepEqual( Stem("rologest"), "rologest" );
	deepEqual( Stem("rolointernational"), "rolointernational" );
	deepEqual( Stem("roloitalia"), "roloital" );
	deepEqual( Stem("rolomix"), "rolomix" );
	deepEqual( Stem("rolomoney"), "rolomoney" );
	deepEqual( Stem("rolooriente"), "roloorient" );
	deepEqual( Stem("rom"), "rom" );
	deepEqual( Stem("roma"), "rom" );
	deepEqual( Stem("romà"), "rom" );
	deepEqual( Stem("romagest"), "romagest" );
	deepEqual( Stem("romagna"), "romagn" );
	deepEqual( Stem("romagnolo"), "romagnol" );
	deepEqual( Stem("roman"), "roman" );
	deepEqual( Stem("romana"), "roman" );
	deepEqual( Stem("romanello"), "romanell" );
	deepEqual( Stem("romani"), "roman" );
	deepEqual( Stem("romanista"), "roman" );
	deepEqual( Stem("romanisti"), "roman" );
	deepEqual( Stem("romano"), "rom" );
	deepEqual( Stem("romanò"), "roman" );
	deepEqual( Stem("romantica"), "romant" );
	deepEqual( Stem("romanticismo"), "romantic" );
	deepEqual( Stem("romantico"), "romant" );
	deepEqual( Stem("romanzo"), "romanz" );
	deepEqual( Stem("rombo"), "romb" );
	deepEqual( Stem("romei"), "rome" );
	deepEqual( Stem("romena"), "romen" );
	deepEqual( Stem("romeo"), "rome" );
	deepEqual( Stem("romero"), "romer" );
	deepEqual( Stem("rominger"), "rominger" );
	deepEqual( Stem("romiti"), "rom" );
	deepEqual( Stem("romito"), "rom" );
	deepEqual( Stem("romolo"), "romol" );
	deepEqual( Stem("rompa"), "romp" );
	deepEqual( Stem("rompe"), "romp" );
	deepEqual( Stem("rompendo"), "romp" );
	deepEqual( Stem("romper"), "romper" );
	deepEqual( Stem("rompere"), "romp" );
	deepEqual( Stem("romperla"), "romp" );
	deepEqual( Stem("rompevano"), "romp" );
	deepEqual( Stem("rompicollo"), "rompicoll" );
	deepEqual( Stem("rompono"), "romp" );
	deepEqual( Stem("ron"), "ron" );
	deepEqual( Stem("ronald"), "ronald" );
	deepEqual( Stem("roncato"), "ronc" );
	deepEqual( Stem("ronchi"), "ronc" );
	deepEqual( Stem("ronco"), "ronc" );
	deepEqual( Stem("roncole"), "roncol" );
	deepEqual( Stem("roncone"), "roncon" );
	deepEqual( Stem("ronda"), "rond" );
	deepEqual( Stem("rondine"), "rondin" );
	deepEqual( Stem("ronzando"), "ronz" );
	deepEqual( Stem("ronzarle"), "ronz" );
	deepEqual( Stem("ronzasse"), "ronz" );
	deepEqual( Stem("ronzatori"), "ronzator" );
	deepEqual( Stem("ronzavano"), "ronz" );
	deepEqual( Stem("ronzìo"), "ronzì" );
	deepEqual( Stem("ronzlo"), "ronzl" );
	deepEqual( Stem("roque"), "roqu" );
	deepEqual( Stem("rosa"), "ros" );
	deepEqual( Stem("rosanna"), "rosann" );
	deepEqual( Stem("rosano"), "ros" );
	deepEqual( Stem("rosaria"), "rosar" );
	deepEqual( Stem("rosario"), "rosar" );
	deepEqual( Stem("rosaro"), "rosar" );
	deepEqual( Stem("rosati"), "ros" );
	deepEqual( Stem("roscia"), "rosc" );
	deepEqual( Stem("rose"), "ros" );
	deepEqual( Stem("roseo"), "rose" );
	deepEqual( Stem("rosi"), "ros" );
	deepEqual( Stem("rosica"), "rosic" );
	deepEqual( Stem("rosicchiata"), "rosicc" );
	deepEqual( Stem("rosie"), "ros" );
	deepEqual( Stem("rosmarino"), "rosmarin" );
	deepEqual( Stem("roso"), "ros" );
	deepEqual( Stem("rosolava"), "rosol" );
	deepEqual( Stem("rosone"), "roson" );
	deepEqual( Stem("rospi"), "rosp" );
	deepEqual( Stem("rospo"), "rosp" );
	deepEqual( Stem("rossa"), "ross" );
	deepEqual( Stem("rosse"), "ross" );
	deepEqual( Stem("rossè"), "ross" );
	deepEqual( Stem("rosseggiante"), "rossegg" );
	deepEqual( Stem("rosseggianti"), "rossegg" );
	deepEqual( Stem("rossetti"), "rossett" );
	deepEqual( Stem("rossetto"), "rossett" );
	deepEqual( Stem("rossi"), "ross" );
	deepEqual( Stem("rossiccia"), "rossicc" );
	deepEqual( Stem("rossini"), "rossin" );
	deepEqual( Stem("rossito"), "ross" );
	deepEqual( Stem("rosso"), "ross" );
	deepEqual( Stem("rossoblu"), "rossoblu" );
	deepEqual( Stem("rossoblù"), "rossoblù" );
	deepEqual( Stem("rossonera"), "rossoner" );
	deepEqual( Stem("rossoneri"), "rossoner" );
	deepEqual( Stem("rossore"), "rossor" );
	deepEqual( Stem("rosy"), "rosy" );
	deepEqual( Stem("rota"), "rot" );
	deepEqual( Stem("rotaie"), "rotai" );
	deepEqual( Stem("rotante"), "rotant" );
	deepEqual( Stem("rotazione"), "rotazion" );
	deepEqual( Stem("rote"), "rot" );
	deepEqual( Stem("roteando"), "rot" );
	deepEqual( Stem("rotella"), "rotell" );
	deepEqual( Stem("roth"), "roth" );
	deepEqual( Stem("rotocalco"), "rotocalc" );
	deepEqual( Stem("rotoli"), "rotol" );
	deepEqual( Stem("rotolo"), "rotol" );
	deepEqual( Stem("rotonda"), "rotond" );
	deepEqual( Stem("rotondi"), "rotond" );
	deepEqual( Stem("rotondo"), "rotond" );
	deepEqual( Stem("rotta"), "rott" );
	deepEqual( Stem("rottame"), "rottam" );
	deepEqual( Stem("rottami"), "rottam" );
	deepEqual( Stem("rotte"), "rott" );
	deepEqual( Stem("rotterdam"), "rotterdam" );
	deepEqual( Stem("rotti"), "rott" );
	deepEqual( Stem("rotto"), "rott" );
	deepEqual( Stem("rottura"), "rottur" );
	deepEqual( Stem("roulettes"), "roulettes" );
	deepEqual( Stem("roundtree"), "roundtre" );
	deepEqual( Stem("rouse"), "rous" );
	deepEqual( Stem("routine"), "routin" );
	deepEqual( Stem("rover"), "rover" );
	deepEqual( Stem("rovescia"), "rovesc" );
	deepEqual( Stem("rovesciano"), "rovesc" );
	deepEqual( Stem("rovesciar"), "rovesc" );
	deepEqual( Stem("rovesciarla"), "rovesc" );
	deepEqual( Stem("rovesciata"), "rovesc" );
	deepEqual( Stem("rovesciavano"), "rovesc" );
	deepEqual( Stem("rovescio"), "rovesc" );
	deepEqual( Stem("rovesciò"), "rovesc" );
	deepEqual( Stem("rovigo"), "rovig" );
	deepEqual( Stem("rovina"), "rovin" );
	deepEqual( Stem("rovinan"), "rovinan" );
	deepEqual( Stem("rovinando"), "rovin" );
	deepEqual( Stem("rovinar"), "rovin" );
	deepEqual( Stem("rovinare"), "rovin" );
	deepEqual( Stem("rovinarmi"), "rovin" );
	deepEqual( Stem("rovinarsi"), "rovin" );
	deepEqual( Stem("rovinarvi"), "rovin" );
	deepEqual( Stem("rovinata"), "rovin" );
	deepEqual( Stem("rovinato"), "rovin" );
	deepEqual( Stem("rovinavano"), "rovin" );
	deepEqual( Stem("rovine"), "rovin" );
	deepEqual( Stem("rovistando"), "rovist" );
	deepEqual( Stem("rovo"), "rov" );
	deepEqual( Stem("rowland"), "rowland" );
	deepEqual( Stem("royal"), "royal" );
	deepEqual( Stem("royce"), "royc" );
	deepEqual( Stem("rozza"), "rozz" );
	deepEqual( Stem("rozzi"), "rozz" );
	deepEqual( Stem("rozzo"), "rozz" );
	deepEqual( Stem("rp"), "rp" );
	deepEqual( Stem("rpesidente"), "rpesident" );
	deepEqual( Stem("rpt"), "rpt" );
	deepEqual( Stem("rr"), "rr" );
	deepEqual( Stem("rs"), "rs" );
	deepEqual( Stem("rsu"), "rsu" );
	deepEqual( Stem("ruba"), "rub" );
	deepEqual( Stem("rubamenti"), "rub" );
	deepEqual( Stem("rubar"), "rub" );
	deepEqual( Stem("rubare"), "rub" );
	deepEqual( Stem("rubarle"), "rub" );
	deepEqual( Stem("rubarsela"), "rubarsel" );
	deepEqual( Stem("rubarselo"), "rubarsel" );
	deepEqual( Stem("rubarsi"), "rub" );
	deepEqual( Stem("rubassi"), "rub" );
	deepEqual( Stem("rubate"), "rub" );
	deepEqual( Stem("rubati"), "rub" );
	deepEqual( Stem("rubato"), "rub" );
	deepEqual( Stem("rubavano"), "rub" );
	deepEqual( Stem("rubello"), "rubell" );
	deepEqual( Stem("ruberie"), "ruber" );
	deepEqual( Stem("rubi"), "rub" );
	deepEqual( Stem("rubiconda"), "rubicond" );
	deepEqual( Stem("rubicondo"), "rubicond" );
	deepEqual( Stem("rubiera"), "rubier" );
	deepEqual( Stem("rubin"), "rubin" );
	deepEqual( Stem("rubino"), "rubin" );
	deepEqual( Stem("rubli"), "rubl" );
	deepEqual( Stem("rubra"), "rubr" );
	deepEqual( Stem("rubrica"), "rubric" );
	deepEqual( Stem("rubriche"), "rubric" );
	deepEqual( Stem("rude"), "rud" );
	deepEqual( Stem("rudi"), "rud" );
	deepEqual( Stem("rudyard"), "rudyard" );
	deepEqual( Stem("ruf"), "ruf" );
	deepEqual( Stem("ruffa"), "ruff" );
	deepEqual( Stem("ruffino"), "ruffin" );
	deepEqual( Stem("ruffo"), "ruff" );
	deepEqual( Stem("ruffoni"), "ruffon" );
	deepEqual( Stem("rugby"), "rugby" );
	deepEqual( Stem("ruggenti"), "ruggent" );
	deepEqual( Stem("ruggero"), "rugger" );
	deepEqual( Stem("ruggine"), "ruggin" );
	deepEqual( Stem("ruggito"), "rugg" );
	deepEqual( Stem("rughe"), "rugh" );
	deepEqual( Stem("rugiada"), "rugiad" );
	deepEqual( Stem("rugosa"), "rugos" );
	deepEqual( Stem("ruhpolding"), "ruhpolding" );
	deepEqual( Stem("rui"), "rui" );
	deepEqual( Stem("ruiz"), "ruiz" );
	deepEqual( Stem("rumbelows"), "rumbelows" );
	deepEqual( Stem("ruminando"), "rumin" );
	deepEqual( Stem("ruminarci"), "rumin" );
	deepEqual( Stem("ruminava"), "rumin" );
	deepEqual( Stem("ruminò"), "rumin" );
	deepEqual( Stem("rumor"), "rumor" );
	deepEqual( Stem("rumore"), "rumor" );
	deepEqual( Stem("rumoreggiamento"), "rumoregg" );
	deepEqual( Stem("rumoreggiando"), "rumoregg" );
	deepEqual( Stem("rumori"), "rumor" );
	deepEqual( Stem("rumorosa"), "rumor" );
	deepEqual( Stem("rumorosamente"), "rumor" );
	deepEqual( Stem("rumoroso"), "rumor" );
	deepEqual( Stem("rundschaù"), "rundschaù" );
	deepEqual( Stem("ruolettes"), "ruolettes" );
	deepEqual( Stem("ruoli"), "ruol" );
	deepEqual( Stem("ruolo"), "ruol" );
	deepEqual( Stem("ruota"), "ruot" );
	deepEqual( Stem("ruote"), "ruot" );
	deepEqual( Stem("ruotolo"), "ruotol" );
	deepEqual( Stem("rupi"), "rup" );
	deepEqual( Stem("ruppe"), "rupp" );
	deepEqual( Stem("ruprechtskirche"), "ruprechtskirc" );
	deepEqual( Stem("rurali"), "rural" );
	deepEqual( Stem("rus"), "rus" );
	deepEqual( Stem("ruscello"), "ruscell" );
	deepEqual( Stem("rushdi"), "rushd" );
	deepEqual( Stem("rushdie"), "rushd" );
	deepEqual( Stem("rushdiè"), "rushd" );
	deepEqual( Stem("ruspi"), "rusp" );
	deepEqual( Stem("russa"), "russ" );
	deepEqual( Stem("russare"), "russ" );
	deepEqual( Stem("russava"), "russ" );
	deepEqual( Stem("russe"), "russ" );
	deepEqual( Stem("russi"), "russ" );
	deepEqual( Stem("russia"), "russ" );
	deepEqual( Stem("russie"), "russ" );
	deepEqual( Stem("russo"), "russ" );
	deepEqual( Stem("rustica"), "rustic" );
	deepEqual( Stem("rustichezza"), "rustichezz" );
	deepEqual( Stem("ruta"), "rut" );
	deepEqual( Stem("rutelli"), "rutell" );
	deepEqual( Stem("rutilante"), "rutil" );
	deepEqual( Stem("ruvida"), "ruvid" );
	deepEqual( Stem("ruvidamente"), "ruvid" );
	deepEqual( Stem("ruvide"), "ruvid" );
	deepEqual( Stem("ruvido"), "ruvid" );
	deepEqual( Stem("ruz"), "ruz" );
	deepEqual( Stem("ruzzo"), "ruzz" );
	deepEqual( Stem("ruzzolare"), "ruzzol" );
	deepEqual( Stem("ruzzolarono"), "ruzzol" );
	deepEqual( Stem("rv"), "rv" );
	deepEqual( Stem("rwdm"), "rwdm" );
	deepEqual( Stem("rwe"), "rwe" );
	deepEqual( Stem("ryryryryryryryryryryryryryryryryryryryryr"), "ryryryryryryryryryryryryryryryryryryryryr" );
	deepEqual( Stem("ryryryryryryryryryryryryryryryryryryryryryry"), "ryryryryryryryryryryryryryryryryryryryryryry" );
	deepEqual( Stem("s"), "s" );
	deepEqual( Stem("sa"), "sa" );
	deepEqual( Stem("saab"), "saab" );
	deepEqual( Stem("saad"), "saad" );
	deepEqual( Stem("saada"), "saad" );
	deepEqual( Stem("sabatini"), "sabatin" );
	deepEqual( Stem("sabato"), "sab" );
	deepEqual( Stem("sabau"), "sabau" );
	deepEqual( Stem("sabbia"), "sabb" );
	deepEqual( Stem("sabe"), "sab" );
	deepEqual( Stem("sabotare"), "sabot" );
	deepEqual( Stem("sabrina"), "sabrin" );
	deepEqual( Stem("sacca"), "sacc" );
	deepEqual( Stem("saccenteria"), "saccenter" );
	deepEqual( Stem("saccheggiare"), "sacchegg" );
	deepEqual( Stem("saccheggiato"), "sacchegg" );
	deepEqual( Stem("saccheggiatori"), "sacchegg" );
	deepEqual( Stem("saccheggio"), "sacchegg" );
	deepEqual( Stem("sacchetti"), "sacchett" );
	deepEqual( Stem("sacchi"), "sacc" );
	deepEqual( Stem("sacco"), "sacc" );
	deepEqual( Stem("saccone"), "saccon" );
	deepEqual( Stem("sacconi"), "saccon" );
	deepEqual( Stem("sace"), "sac" );
	deepEqual( Stem("sacerdote"), "sacerdot" );
	deepEqual( Stem("sacerdoti"), "sacerdot" );
	deepEqual( Stem("sacerdozio"), "sacerdoz" );
	deepEqual( Stem("sack"), "sack" );
	deepEqual( Stem("sacra"), "sacr" );
	deepEqual( Stem("sacrificare"), "sacrific" );
	deepEqual( Stem("sacrificarsi"), "sacrific" );
	deepEqual( Stem("sacrificata"), "sacrific" );
	deepEqual( Stem("sacrificati"), "sacrific" );
	deepEqual( Stem("sacrificato"), "sacrific" );
	deepEqual( Stem("sacrifici"), "sacrif" );
	deepEqual( Stem("sacrificio"), "sacrific" );
	deepEqual( Stem("sacrifizio"), "sacrifiz" );
	deepEqual( Stem("sacrilega"), "sacrileg" );
	deepEqual( Stem("sacrilegio"), "sacrileg" );
	deepEqual( Stem("sacro"), "sacr" );
	deepEqual( Stem("sacrosante"), "sacros" );
	deepEqual( Stem("sacrosanto"), "sacrosant" );
	deepEqual( Stem("sacully"), "sacully" );
	deepEqual( Stem("saddam"), "saddam" );
	deepEqual( Stem("saes"), "saes" );
	deepEqual( Stem("saf"), "saf" );
	deepEqual( Stem("saffa"), "saff" );
	deepEqual( Stem("safilo"), "safil" );
	deepEqual( Stem("safr"), "safr" );
	deepEqual( Stem("saga"), "sag" );
	deepEqual( Stem("sagacità"), "sagac" );
	deepEqual( Stem("saggezza"), "saggezz" );
	deepEqual( Stem("saggia"), "sagg" );
	deepEqual( Stem("saggina"), "saggin" );
	deepEqual( Stem("saggio"), "sagg" );
	deepEqual( Stem("sagra"), "sagr" );
	deepEqual( Stem("sagrare"), "sagr" );
	deepEqual( Stem("sagrava"), "sagr" );
	deepEqual( Stem("sagrestano"), "sagrest" );
	deepEqual( Stem("sagrestia"), "sagrest" );
	deepEqual( Stem("sagrifizi"), "sagrifiz" );
	deepEqual( Stem("sagrifizio"), "sagrifiz" );
	deepEqual( Stem("sai"), "sai" );
	deepEqual( Stem("saiag"), "saiag" );
	deepEqual( Stem("said"), "said" );
	deepEqual( Stem("sailor"), "sailor" );
	deepEqual( Stem("saima"), "saim" );
	deepEqual( Stem("saint"), "saint" );
	deepEqual( Stem("sainz"), "sainz" );
	deepEqual( Stem("saio"), "sai" );
	deepEqual( Stem("saipem"), "saipem" );
	deepEqual( Stem("sal"), "sal" );
	deepEqual( Stem("sala"), "sal" );
	deepEqual( Stem("salam"), "salam" );
	deepEqual( Stem("salamandra"), "salamandr" );
	deepEqual( Stem("salamon"), "salamon" );
	deepEqual( Stem("salamone"), "salamon" );
	deepEqual( Stem("salari"), "salar" );
	deepEqual( Stem("salariale"), "salarial" );
	deepEqual( Stem("salariali"), "salarial" );
	deepEqual( Stem("salario"), "salar" );
	deepEqual( Stem("salda"), "sald" );
	deepEqual( Stem("saldana"), "saldan" );
	deepEqual( Stem("saldar"), "sald" );
	deepEqual( Stem("saldare"), "sald" );
	deepEqual( Stem("saldarle"), "sald" );
	deepEqual( Stem("saldate"), "sald" );
	deepEqual( Stem("saldato"), "sald" );
	deepEqual( Stem("saldi"), "sald" );
	deepEqual( Stem("saldo"), "sald" );
	deepEqual( Stem("saldò"), "sald" );
	deepEqual( Stem("sale"), "sal" );
	deepEqual( Stem("salemi"), "salem" );
	deepEqual( Stem("salendo"), "sal" );
	deepEqual( Stem("salernitana"), "salernitan" );
	deepEqual( Stem("salernitani"), "salernitan" );
	deepEqual( Stem("salernitano"), "salernit" );
	deepEqual( Stem("salerno"), "salern" );
	deepEqual( Stem("salesiana"), "salesian" );
	deepEqual( Stem("salezzari"), "salezzar" );
	deepEqual( Stem("salgon"), "salgon" );
	deepEqual( Stem("salgono"), "salg" );
	deepEqual( Stem("sali"), "sal" );
	deepEqual( Stem("salì"), "sal" );
	deepEqual( Stem("salinas"), "salinas" );
	deepEqual( Stem("salingen"), "salingen" );
	deepEqual( Stem("salio"), "sal" );
	deepEqual( Stem("salir"), "sal" );
	deepEqual( Stem("salire"), "sal" );
	deepEqual( Stem("salirete"), "sal" );
	deepEqual( Stem("salirono"), "sal" );
	deepEqual( Stem("salirvi"), "sal" );
	deepEqual( Stem("saliscendi"), "salisc" );
	deepEqual( Stem("salisse"), "saliss" );
	deepEqual( Stem("salita"), "sal" );
	deepEqual( Stem("salite"), "sal" );
	deepEqual( Stem("saliti"), "sal" );
	deepEqual( Stem("salito"), "sal" );
	deepEqual( Stem("saliva"), "sal" );
	deepEqual( Stem("salivo"), "sal" );
	deepEqual( Stem("salma"), "salm" );
	deepEqual( Stem("salman"), "salman" );
	deepEqual( Stem("salmo"), "salm" );
	deepEqual( Stem("salmone"), "salmon" );
	deepEqual( Stem("salomone"), "salomon" );
	deepEqual( Stem("salone"), "salon" );
	deepEqual( Stem("saloni"), "salon" );
	deepEqual( Stem("salotti"), "salott" );
	deepEqual( Stem("salottino"), "salottin" );
	deepEqual( Stem("salotto"), "salott" );
	deepEqual( Stem("salsano"), "sals" );
	deepEqual( Stem("salt"), "salt" );
	deepEqual( Stem("salta"), "salt" );
	deepEqual( Stem("saltando"), "salt" );
	deepEqual( Stem("saltanto"), "saltant" );
	deepEqual( Stem("saltar"), "salt" );
	deepEqual( Stem("saltare"), "salt" );
	deepEqual( Stem("saltata"), "salt" );
	deepEqual( Stem("saltato"), "salt" );
	deepEqual( Stem("saltava"), "salt" );
	deepEqual( Stem("saltellante"), "saltell" );
	deepEqual( Stem("saltellava"), "saltell" );
	deepEqual( Stem("saltello"), "saltell" );
	deepEqual( Stem("saltelloni"), "saltellon" );
	deepEqual( Stem("salterà"), "salt" );
	deepEqual( Stem("salterello"), "salterell" );
	deepEqual( Stem("salti"), "salt" );
	deepEqual( Stem("salto"), "salt" );
	deepEqual( Stem("saltò"), "salt" );
	deepEqual( Stem("saltuaria"), "saltuar" );
	deepEqual( Stem("salubre"), "salubr" );
	deepEqual( Stem("saluta"), "sal" );
	deepEqual( Stem("salutala"), "salutal" );
	deepEqual( Stem("salutando"), "salut" );
	deepEqual( Stem("salutar"), "salut" );
	deepEqual( Stem("salutare"), "salut" );
	deepEqual( Stem("salutari"), "salutar" );
	deepEqual( Stem("salutasse"), "salut" );
	deepEqual( Stem("salutata"), "salut" );
	deepEqual( Stem("salutati"), "salut" );
	deepEqual( Stem("salutatili"), "salutatil" );
	deepEqual( Stem("salutato"), "salut" );
	deepEqual( Stem("salutavan"), "salutavan" );
	deepEqual( Stem("salute"), "sal" );
	deepEqual( Stem("salutevole"), "salutevol" );
	deepEqual( Stem("saluti"), "sal" );
	deepEqual( Stem("salutiamo"), "salut" );
	deepEqual( Stem("saluto"), "sal" );
	deepEqual( Stem("salutò"), "salut" );
	deepEqual( Stem("salva"), "salv" );
	deepEqual( Stem("salvadanaio"), "salvadanai" );
	deepEqual( Stem("salvaguardando"), "salvaguard" );
	deepEqual( Stem("salvaguardare"), "salvaguard" );
	deepEqual( Stem("salvaguardia"), "salvaguard" );
	deepEqual( Stem("salvamento"), "salv" );
	deepEqual( Stem("salvando"), "salv" );
	deepEqual( Stem("salvar"), "salv" );
	deepEqual( Stem("salvarci"), "salv" );
	deepEqual( Stem("salvare"), "salv" );
	deepEqual( Stem("salvarla"), "salv" );
	deepEqual( Stem("salvarlo"), "salv" );
	deepEqual( Stem("salvarne"), "salv" );
	deepEqual( Stem("salvarsi"), "salv" );
	deepEqual( Stem("salvarti"), "salv" );
	deepEqual( Stem("salvata"), "salv" );
	deepEqual( Stem("salvataggio"), "salvatagg" );
	deepEqual( Stem("salvatelo"), "salvatel" );
	deepEqual( Stem("salvatica"), "salvat" );
	deepEqual( Stem("salvatiche"), "salvat" );
	deepEqual( Stem("salvatichezza"), "salvatichezz" );
	deepEqual( Stem("salvatico"), "salvat" );
	deepEqual( Stem("salvato"), "salv" );
	deepEqual( Stem("salvatore"), "salvator" );
	deepEqual( Stem("salvatori"), "salvator" );
	deepEqual( Stem("salvatrice"), "salvatric" );
	deepEqual( Stem("salvavano"), "salv" );
	deepEqual( Stem("salvazion"), "salvazion" );
	deepEqual( Stem("salvazione"), "salvazion" );
	deepEqual( Stem("salve"), "salv" );
	deepEqual( Stem("salvemini"), "salvemin" );
	deepEqual( Stem("salverà"), "salv" );
	deepEqual( Stem("salvezza"), "salvezz" );
	deepEqual( Stem("salvezzà"), "salvezz" );
	deepEqual( Stem("salvi"), "salv" );
	deepEqual( Stem("salviamo"), "salv" );
	deepEqual( Stem("salvo"), "salv" );
	deepEqual( Stem("salvocondotto"), "salvocondott" );
	deepEqual( Stem("saly"), "saly" );
	deepEqual( Stem("sam"), "sam" );
	deepEqual( Stem("sambuca"), "sambuc" );
	deepEqual( Stem("sammy"), "sammy" );
	deepEqual( Stem("samp"), "samp" );
	deepEqual( Stem("sampdoria"), "sampdor" );
	deepEqual( Stem("sampdoriana"), "sampdorian" );
	deepEqual( Stem("sampdoriani"), "sampdorian" );
	deepEqual( Stem("samuel"), "samuel" );
	deepEqual( Stem("samuele"), "samuel" );
	deepEqual( Stem("samurai"), "samura" );
	deepEqual( Stem("san"), "san" );
	deepEqual( Stem("sana"), "san" );
	deepEqual( Stem("sanandola"), "san" );
	deepEqual( Stem("sanare"), "san" );
	deepEqual( Stem("sanatoria"), "sanator" );
	deepEqual( Stem("sanchez"), "sanchez" );
	deepEqual( Stem("sancire"), "sanc" );
	deepEqual( Stem("sancisce"), "sanc" );
	deepEqual( Stem("sancita"), "sanc" );
	deepEqual( Stem("sancito"), "sanc" );
	deepEqual( Stem("sandali"), "sandal" );
	deepEqual( Stem("sande"), "sand" );
	deepEqual( Stem("sanders"), "sanders" );
	deepEqual( Stem("sandi"), "sand" );
	deepEqual( Stem("sandis"), "sandis" );
	deepEqual( Stem("sandpiper"), "sandpiper" );
	deepEqual( Stem("sandra"), "sandr" );
	deepEqual( Stem("sandreani"), "sandrean" );
	deepEqual( Stem("sandrelli"), "sandrell" );
	deepEqual( Stem("sandrine"), "sandrin" );
	deepEqual( Stem("sandro"), "sandr" );
	deepEqual( Stem("sands"), "sands" );
	deepEqual( Stem("sane"), "san" );
	deepEqual( Stem("sangiorgi"), "sangiorg" );
	deepEqual( Stem("sangiuseppese"), "sangiuseppes" );
	deepEqual( Stem("sangro"), "sangr" );
	deepEqual( Stem("sangue"), "sangu" );
	deepEqual( Stem("sanguigne"), "sanguign" );
	deepEqual( Stem("sanguigni"), "sanguign" );
	deepEqual( Stem("sanguinosa"), "sanguin" );
	deepEqual( Stem("sanguinose"), "sanguin" );
	deepEqual( Stem("sanguinosi"), "sanguin" );
	deepEqual( Stem("sani"), "san" );
	deepEqual( Stem("saniem"), "saniem" );
	deepEqual( Stem("sanità"), "sanit" );
	deepEqual( Stem("sanitari"), "sanitar" );
	deepEqual( Stem("sanitaria"), "sanitar" );
	deepEqual( Stem("sanitarie"), "sanitar" );
	deepEqual( Stem("sanitario"), "sanitar" );
	deepEqual( Stem("sankoh"), "sankoh" );
	deepEqual( Stem("sanna"), "sann" );
	deepEqual( Stem("sanno"), "sann" );
	deepEqual( Stem("sano"), "san" );
	deepEqual( Stem("sanpaolo"), "sanpaol" );
	deepEqual( Stem("sanremo"), "sanrem" );
	deepEqual( Stem("sanrocchino"), "sanrocchin" );
	deepEqual( Stem("sansa"), "sans" );
	deepEqual( Stem("sansepolcro"), "sansepolcr" );
	deepEqual( Stem("sansovino"), "sansovin" );
	deepEqual( Stem("sant"), "sant" );
	deepEqual( Stem("santa"), "sant" );
	deepEqual( Stem("santafè"), "santaf" );
	deepEqual( Stem("santagada"), "santagad" );
	deepEqual( Stem("santamente"), "sant" );
	deepEqual( Stem("santander"), "santander" );
	deepEqual( Stem("santaniello"), "santaniell" );
	deepEqual( Stem("santarelli"), "santarell" );
	deepEqual( Stem("santavaleria"), "santavaler" );
	deepEqual( Stem("sante"), "sant" );
	deepEqual( Stem("santer"), "santer" );
	deepEqual( Stem("santerella"), "santerell" );
	deepEqual( Stem("santerini"), "santerin" );
	deepEqual( Stem("santi"), "sant" );
	deepEqual( Stem("santiago"), "santiag" );
	deepEqual( Stem("santificato"), "santific" );
	deepEqual( Stem("santificava"), "santific" );
	deepEqual( Stem("santini"), "santin" );
	deepEqual( Stem("santino"), "santin" );
	deepEqual( Stem("santis"), "santis" );
	deepEqual( Stem("santissima"), "santissim" );
	deepEqual( Stem("santità"), "santit" );
	deepEqual( Stem("santo"), "sant" );
	deepEqual( Stem("santona"), "santon" );
	deepEqual( Stem("santoro"), "santor" );
	deepEqual( Stem("santos"), "santos" );
	deepEqual( Stem("santuari"), "santuar" );
	deepEqual( Stem("sanzionate"), "sanzion" );
	deepEqual( Stem("sanzione"), "sanzion" );
	deepEqual( Stem("sanzioni"), "sanzion" );
	deepEqual( Stem("sapendo"), "sap" );
	deepEqual( Stem("sapendolo"), "sap" );
	deepEqual( Stem("saper"), "saper" );
	deepEqual( Stem("sapere"), "sap" );
	deepEqual( Stem("saperla"), "sap" );
	deepEqual( Stem("saperle"), "sap" );
	deepEqual( Stem("saperli"), "sap" );
	deepEqual( Stem("saperlo"), "sap" );
	deepEqual( Stem("saperne"), "sap" );
	deepEqual( Stem("sapersi"), "sap" );
	deepEqual( Stem("sapesse"), "sapess" );
	deepEqual( Stem("sapesser"), "sapesser" );
	deepEqual( Stem("sapessero"), "sap" );
	deepEqual( Stem("sapessi"), "sapess" );
	deepEqual( Stem("sapessimo"), "sapessim" );
	deepEqual( Stem("sapeste"), "sapest" );
	deepEqual( Stem("sapete"), "sap" );
	deepEqual( Stem("sapeva"), "sap" );
	deepEqual( Stem("sapevamo"), "sap" );
	deepEqual( Stem("sapevan"), "sapevan" );
	deepEqual( Stem("sapevano"), "sap" );
	deepEqual( Stem("sapevate"), "sap" );
	deepEqual( Stem("sapevo"), "sap" );
	deepEqual( Stem("sapiente"), "sapient" );
	deepEqual( Stem("sapienza"), "sapienz" );
	deepEqual( Stem("sapore"), "sapor" );
	deepEqual( Stem("saporita"), "sapor" );
	deepEqual( Stem("sappi"), "sapp" );
	deepEqual( Stem("sappia"), "sapp" );
	deepEqual( Stem("sappiam"), "sappiam" );
	deepEqual( Stem("sappiamo"), "sapp" );
	deepEqual( Stem("sappiano"), "sapp" );
	deepEqual( Stem("sappiate"), "sapp" );
	deepEqual( Stem("sapporo"), "sappor" );
	deepEqual( Stem("saprà"), "sapr" );
	deepEqual( Stem("saprai"), "sapra" );
	deepEqual( Stem("sapranno"), "saprann" );
	deepEqual( Stem("saprebbe"), "saprebb" );
	deepEqual( Stem("saprebbero"), "saprebber" );
	deepEqual( Stem("saprei"), "sapre" );
	deepEqual( Stem("sapremmo"), "sapr" );
	deepEqual( Stem("sapreste"), "saprest" );
	deepEqual( Stem("saprete"), "sapr" );
	deepEqual( Stem("saprò"), "sapr" );
	deepEqual( Stem("saputa"), "sap" );
	deepEqual( Stem("sapute"), "sap" );
	deepEqual( Stem("saputi"), "sap" );
	deepEqual( Stem("saputo"), "sap" );
	deepEqual( Stem("sara"), "sar" );
	deepEqual( Stem("sarà"), "sar" );
	deepEqual( Stem("sarabanda"), "saraband" );
	deepEqual( Stem("saraceno"), "saracen" );
	deepEqual( Stem("saracino"), "saracin" );
	deepEqual( Stem("saràcircondata"), "saràcircond" );
	deepEqual( Stem("sarai"), "sara" );
	deepEqual( Stem("sarajevo"), "saraj" );
	deepEqual( Stem("saran"), "saran" );
	deepEqual( Stem("saranno"), "sarann" );
	deepEqual( Stem("sarcinelli"), "sarcinell" );
	deepEqual( Stem("sardar"), "sard" );
	deepEqual( Stem("sardegna"), "sardegn" );
	deepEqual( Stem("sardi"), "sard" );
	deepEqual( Stem("sardini"), "sardin" );
	deepEqual( Stem("sardonico"), "sardon" );
	deepEqual( Stem("sarebbe"), "sarebb" );
	deepEqual( Stem("sarebber"), "sarebber" );
	deepEqual( Stem("sarebbero"), "sarebber" );
	deepEqual( Stem("sarei"), "sare" );
	deepEqual( Stem("saremmo"), "sar" );
	deepEqual( Stem("saremo"), "sarem" );
	deepEqual( Stem("sareste"), "sarest" );
	deepEqual( Stem("saresti"), "sarest" );
	deepEqual( Stem("sarete"), "sar" );
	deepEqual( Stem("sarid"), "sarid" );
	deepEqual( Stem("sarò"), "sar" );
	deepEqual( Stem("saronno"), "saronn" );
	deepEqual( Stem("sarriò"), "sarr" );
	deepEqual( Stem("sarsina"), "sarsin" );
	deepEqual( Stem("sarto"), "sart" );
	deepEqual( Stem("sartor"), "sartor" );
	deepEqual( Stem("sasib"), "sasib" );
	deepEqual( Stem("sassari"), "sassar" );
	deepEqual( Stem("sassate"), "sass" );
	deepEqual( Stem("sassi"), "sass" );
	deepEqual( Stem("sasso"), "sass" );
	deepEqual( Stem("sassonia"), "sasson" );
	deepEqual( Stem("sassosa"), "sassos" );
	deepEqual( Stem("sassoso"), "sassos" );
	deepEqual( Stem("sat"), "sat" );
	deepEqual( Stem("satana"), "satan" );
	deepEqual( Stem("satanasso"), "satanass" );
	deepEqual( Stem("satanici"), "satan" );
	deepEqual( Stem("satanico"), "satan" );
	deepEqual( Stem("satellitari"), "satellitar" );
	deepEqual( Stem("satellite"), "satell" );
	deepEqual( Stem("satelliti"), "satell" );
	deepEqual( Stem("sathya"), "sathy" );
	deepEqual( Stem("satira"), "satir" );
	deepEqual( Stem("satirico"), "satir" );
	deepEqual( Stem("satolla"), "satoll" );
	deepEqual( Stem("satollar"), "satoll" );
	deepEqual( Stem("satriano"), "satr" );
	deepEqual( Stem("sattanino"), "sattanin" );
	deepEqual( Stem("sattar"), "satt" );
	deepEqual( Stem("sature"), "satur" );
	deepEqual( Stem("saturno"), "saturn" );
	deepEqual( Stem("saudita"), "saud" );
	deepEqual( Stem("saurer"), "saurer" );
	deepEqual( Stem("saurini"), "saurin" );
	deepEqual( Stem("saveriane"), "saverian" );
	deepEqual( Stem("savi"), "sav" );
	deepEqual( Stem("savia"), "sav" );
	deepEqual( Stem("savicevic"), "savicevic" );
	deepEqual( Stem("savieriane"), "savierian" );
	deepEqual( Stem("saviezza"), "saviezz" );
	deepEqual( Stem("savimbi"), "savimb" );
	deepEqual( Stem("savin"), "savin" );
	deepEqual( Stem("savio"), "sav" );
	deepEqual( Stem("savoia"), "savoi" );
	deepEqual( Stem("savona"), "savon" );
	deepEqual( Stem("savonese"), "savones" );
	deepEqual( Stem("saxa"), "sax" );
	deepEqual( Stem("saxarubra"), "saxarubr" );
	deepEqual( Stem("say"), "say" );
	deepEqual( Stem("saziarsi"), "saz" );
	deepEqual( Stem("saziata"), "saz" );
	deepEqual( Stem("sb"), "sb" );
	deepEqual( Stem("sbadatamente"), "sbadat" );
	deepEqual( Stem("sbadigli"), "sbadigl" );
	deepEqual( Stem("sbaglia"), "sbagl" );
	deepEqual( Stem("sbagliar"), "sbagl" );
	deepEqual( Stem("sbagliare"), "sbagl" );
	deepEqual( Stem("sbagliata"), "sbagl" );
	deepEqual( Stem("sbagliate"), "sbagl" );
	deepEqual( Stem("sbagliato"), "sbagl" );
	deepEqual( Stem("sbagliavano"), "sbagl" );
	deepEqual( Stem("sbaglio"), "sbagl" );
	deepEqual( Stem("sbalordimento"), "sbalord" );
	deepEqual( Stem("sbalordita"), "sbalord" );
	deepEqual( Stem("sbalorditi"), "sbalord" );
	deepEqual( Stem("sbalordito"), "sbalord" );
	deepEqual( Stem("sbalordiva"), "sbalord" );
	deepEqual( Stem("sbalordivano"), "sbalord" );
	deepEqual( Stem("sbalzato"), "sbalz" );
	deepEqual( Stem("sbandamento"), "sband" );
	deepEqual( Stem("sbandano"), "sband" );
	deepEqual( Stem("sbandare"), "sband" );
	deepEqual( Stem("sbandarono"), "sband" );
	deepEqual( Stem("sbandarsi"), "sband" );
	deepEqual( Stem("sbandata"), "sband" );
	deepEqual( Stem("sbandati"), "sband" );
	deepEqual( Stem("sbandava"), "sband" );
	deepEqual( Stem("sbandierarli"), "sbandier" );
	deepEqual( Stem("sbarazzarsi"), "sbarazz" );
	deepEqual( Stem("sbarbando"), "sbarb" );
	deepEqual( Stem("sbarbato"), "sbarb" );
	deepEqual( Stem("sbarcare"), "sbarc" );
	deepEqual( Stem("sbarcato"), "sbarc" );
	deepEqual( Stem("sbarcheranno"), "sbarc" );
	deepEqual( Stem("sbarcheremo"), "sbarc" );
	deepEqual( Stem("sbarco"), "sbarc" );
	deepEqual( Stem("sbarra"), "sbarr" );
	deepEqual( Stem("sbarramento"), "sbarr" );
	deepEqual( Stem("sbarrati"), "sbarr" );
	deepEqual( Stem("sbarrato"), "sbarr" );
	deepEqual( Stem("sbattendone"), "sbatt" );
	deepEqual( Stem("sbattuta"), "sbatt" );
	deepEqual( Stem("sbattuto"), "sbatt" );
	deepEqual( Stem("sbiadito"), "sbiad" );
	deepEqual( Stem("sbieco"), "sbiec" );
	deepEqual( Stem("sbigottita"), "sbigott" );
	deepEqual( Stem("sbigottite"), "sbigott" );
	deepEqual( Stem("sbigottito"), "sbigott" );
	deepEqual( Stem("sbilanciata"), "sbilanc" );
	deepEqual( Stem("sbirciando"), "sbirc" );
	deepEqual( Stem("sbirraglia"), "sbirragl" );
	deepEqual( Stem("sbizzarrire"), "sbizzarr" );
	deepEqual( Stem("sblocca"), "sblocc" );
	deepEqual( Stem("sbloccare"), "sblocc" );
	deepEqual( Stem("sbloccati"), "sblocc" );
	deepEqual( Stem("sblocco"), "sblocc" );
	deepEqual( Stem("sboccan"), "sboccan" );
	deepEqual( Stem("sboccano"), "sbocc" );
	deepEqual( Stem("sboccare"), "sbocc" );
	deepEqual( Stem("sboccarono"), "sbocc" );
	deepEqual( Stem("sboccarvi"), "sbocc" );
	deepEqual( Stem("sboccati"), "sbocc" );
	deepEqual( Stem("sboccato"), "sbocc" );
	deepEqual( Stem("sboccavano"), "sbocc" );
	deepEqual( Stem("sbocchi"), "sbocc" );
	deepEqual( Stem("sbocciato"), "sbocc" );
	deepEqual( Stem("sbocco"), "sbocc" );
	deepEqual( Stem("sbocconcellando"), "sbocconcell" );
	deepEqual( Stem("sborsavan"), "sborsavan" );
	deepEqual( Stem("sbracia"), "sbrac" );
	deepEqual( Stem("sbrancassero"), "sbranc" );
	deepEqual( Stem("sbrancati"), "sbranc" );
	deepEqual( Stem("sbrattare"), "sbratt" );
	deepEqual( Stem("sbrigarlo"), "sbrig" );
	deepEqual( Stem("sbrigarsi"), "sbrig" );
	deepEqual( Stem("sbrigarvi"), "sbrig" );
	deepEqual( Stem("sbrigatevi"), "sbrigat" );
	deepEqual( Stem("sbrigati"), "sbrig" );
	deepEqual( Stem("sbrigativi"), "sbrigat" );
	deepEqual( Stem("sbrigato"), "sbrig" );
	deepEqual( Stem("sbrigava"), "sbrig" );
	deepEqual( Stem("sbrigò"), "sbrig" );
	deepEqual( Stem("sbucar"), "sbuc" );
	deepEqual( Stem("sbucati"), "sbuc" );
	deepEqual( Stem("sbudellarsi"), "sbudell" );
	deepEqual( Stem("sbuffando"), "sbuff" );
	deepEqual( Stem("scabrosa"), "scabros" );
	deepEqual( Stem("scabrosi"), "scabros" );
	deepEqual( Stem("scabroso"), "scabros" );
	deepEqual( Stem("scacchi"), "scacc" );
	deepEqual( Stem("scacchiera"), "scacchier" );
	deepEqual( Stem("scacchistico"), "scacchist" );
	deepEqual( Stem("scacciar"), "scacc" );
	deepEqual( Stem("scacciare"), "scacc" );
	deepEqual( Stem("scacciarlo"), "scacc" );
	deepEqual( Stem("scacco"), "scacc" );
	deepEqual( Stem("scade"), "scad" );
	deepEqual( Stem("scadendo"), "scad" );
	deepEqual( Stem("scadenti"), "scadent" );
	deepEqual( Stem("scadenza"), "scadenz" );
	deepEqual( Stem("scadenze"), "scadenz" );
	deepEqual( Stem("scadere"), "scad" );
	deepEqual( Stem("scaduta"), "scad" );
	deepEqual( Stem("scaduto"), "scad" );
	deepEqual( Stem("scaffale"), "scaffal" );
	deepEqual( Stem("scaffali"), "scaffal" );
	deepEqual( Stem("scaglia"), "scagl" );
	deepEqual( Stem("scagliandogli"), "scagl" );
	deepEqual( Stem("scagliati"), "scagl" );
	deepEqual( Stem("scagliato"), "scagl" );
	deepEqual( Stem("scagliò"), "scagl" );
	deepEqual( Stem("scala"), "scal" );
	deepEqual( Stem("scalabrelli"), "scalabrell" );
	deepEqual( Stem("scalar"), "scal" );
	deepEqual( Stem("scalata"), "scal" );
	deepEqual( Stem("scalato"), "scal" );
	deepEqual( Stem("scalcinate"), "scalcin" );
	deepEqual( Stem("scalcinatura"), "scalcinatur" );
	deepEqual( Stem("scalcinavano"), "scalcin" );
	deepEqual( Stem("scalda"), "scald" );
	deepEqual( Stem("scaldata"), "scald" );
	deepEqual( Stem("scaldato"), "scald" );
	deepEqual( Stem("scale"), "scal" );
	deepEqual( Stem("scalensis"), "scalensis" );
	deepEqual( Stem("scaletta"), "scalett" );
	deepEqual( Stem("scalfari"), "scalfar" );
	deepEqual( Stem("scalfaro"), "scalfar" );
	deepEqual( Stem("scali"), "scal" );
	deepEqual( Stem("scalia"), "scal" );
	deepEqual( Stem("scalini"), "scalin" );
	deepEqual( Stem("scalino"), "scalin" );
	deepEqual( Stem("scalmanarsi"), "scalman" );
	deepEqual( Stem("scalo"), "scal" );
	deepEqual( Stem("scalpiccìo"), "scalpiccì" );
	deepEqual( Stem("scalpo"), "scalp" );
	deepEqual( Stem("scaltre"), "scaltr" );
	deepEqual( Stem("scaltro"), "scaltr" );
	deepEqual( Stem("scalzacane"), "scalzacan" );
	deepEqual( Stem("scalzacani"), "scalzacan" );
	deepEqual( Stem("scalzar"), "scalz" );
	deepEqual( Stem("scalze"), "scalz" );
	deepEqual( Stem("scalzi"), "scalz" );
	deepEqual( Stem("scalzo"), "scalz" );
	deepEqual( Stem("scambi"), "scamb" );
	deepEqual( Stem("scambiandole"), "scamb" );
	deepEqual( Stem("scambiandosi"), "scamb" );
	deepEqual( Stem("scambiare"), "scamb" );
	deepEqual( Stem("scambiate"), "scamb" );
	deepEqual( Stem("scambiati"), "scamb" );
	deepEqual( Stem("scambiato"), "scamb" );
	deepEqual( Stem("scambievolmente"), "scambievol" );
	deepEqual( Stem("scambio"), "scamb" );
	deepEqual( Stem("scampaforca"), "scampaforc" );
	deepEqual( Stem("scampanare"), "scampan" );
	deepEqual( Stem("scampanava"), "scampan" );
	deepEqual( Stem("scampanìo"), "scampanì" );
	deepEqual( Stem("scampata"), "scamp" );
	deepEqual( Stem("scampati"), "scamp" );
	deepEqual( Stem("scampo"), "scamp" );
	deepEqual( Stem("scandal"), "scandal" );
	deepEqual( Stem("scandalo"), "scandal" );
	deepEqual( Stem("scandalosa"), "scandal" );
	deepEqual( Stem("scandaloso"), "scandal" );
	deepEqual( Stem("scandendo"), "scand" );
	deepEqual( Stem("scandinavi"), "scandin" );
	deepEqual( Stem("scandisce"), "scand" );
	deepEqual( Stem("scandito"), "scand" );
	deepEqual( Stem("scandoli"), "scandol" );
	deepEqual( Stem("scandolo"), "scandol" );
	deepEqual( Stem("scanio"), "scan" );
	deepEqual( Stem("scannare"), "scann" );
	deepEqual( Stem("scansar"), "scans" );
	deepEqual( Stem("scansare"), "scans" );
	deepEqual( Stem("scansarle"), "scans" );
	deepEqual( Stem("scansarli"), "scans" );
	deepEqual( Stem("scansarne"), "scans" );
	deepEqual( Stem("scansata"), "scans" );
	deepEqual( Stem("scansate"), "scans" );
	deepEqual( Stem("scansato"), "scans" );
	deepEqual( Stem("scansava"), "scans" );
	deepEqual( Stem("scansc"), "scansc" );
	deepEqual( Stem("scantonarono"), "scanton" );
	deepEqual( Stem("scapataggini"), "scapataggin" );
	deepEqual( Stem("scapestrati"), "scapestr" );
	deepEqual( Stem("scapestrato"), "scapestr" );
	deepEqual( Stem("scapezzati"), "scapezz" );
	deepEqual( Stem("scapitare"), "scapit" );
	deepEqual( Stem("scapolo"), "scapol" );
	deepEqual( Stem("scappa"), "scapp" );
	deepEqual( Stem("scappando"), "scapp" );
	deepEqual( Stem("scappano"), "scapp" );
	deepEqual( Stem("scappar"), "scapp" );
	deepEqual( Stem("scappare"), "scapp" );
	deepEqual( Stem("scappargli"), "scapp" );
	deepEqual( Stem("scapparon"), "scapparon" );
	deepEqual( Stem("scapparono"), "scapp" );
	deepEqual( Stem("scappassero"), "scapp" );
	deepEqual( Stem("scappata"), "scapp" );
	deepEqual( Stem("scappatale"), "scappatal" );
	deepEqual( Stem("scappate"), "scapp" );
	deepEqual( Stem("scappatella"), "scappatell" );
	deepEqual( Stem("scappati"), "scapp" );
	deepEqual( Stem("scappatina"), "scappatin" );
	deepEqual( Stem("scappato"), "scapp" );
	deepEqual( Stem("scappatuccia"), "scappatucc" );
	deepEqual( Stem("scappava"), "scapp" );
	deepEqual( Stem("scappavano"), "scapp" );
	deepEqual( Stem("scappellata"), "scappell" );
	deepEqual( Stem("scappellate"), "scappell" );
	deepEqual( Stem("scappellotto"), "scappellott" );
	deepEqual( Stem("scapperà"), "scapp" );
	deepEqual( Stem("scappi"), "scapp" );
	deepEqual( Stem("scappò"), "scapp" );
	deepEqual( Stem("scarabocchiando"), "scarabocc" );
	deepEqual( Stem("scarabocchiati"), "scarabocc" );
	deepEqual( Stem("scarabocchio"), "scarabocc" );
	deepEqual( Stem("scaramuccia"), "scaramucc" );
	deepEqual( Stem("scaramuzza"), "scaramuzz" );
	deepEqual( Stem("scaraventare"), "scaravent" );
	deepEqual( Stem("scaraventato"), "scaravent" );
	deepEqual( Stem("scarchilli"), "scarchill" );
	deepEqual( Stem("scarfaro"), "scarfar" );
	deepEqual( Stem("scarica"), "scaric" );
	deepEqual( Stem("scaricare"), "scaric" );
	deepEqual( Stem("scaricarsi"), "scaric" );
	deepEqual( Stem("scarichi"), "scaric" );
	deepEqual( Stem("scarico"), "scaric" );
	deepEqual( Stem("scarlatta"), "scarlatt" );
	deepEqual( Stem("scarlatte"), "scarlatt" );
	deepEqual( Stem("scarlino"), "scarlin" );
	deepEqual( Stem("scarna"), "scarn" );
	deepEqual( Stem("scarne"), "scarn" );
	deepEqual( Stem("scarniti"), "scarn" );
	deepEqual( Stem("scarno"), "scarn" );
	deepEqual( Stem("scarpe"), "scarp" );
	deepEqual( Stem("scarpelli"), "scarpell" );
	deepEqual( Stem("scarpette"), "scarpett" );
	deepEqual( Stem("scarponi"), "scarpon" );
	deepEqual( Stem("scarpuzzi"), "scarpuzz" );
	deepEqual( Stem("scarsa"), "scars" );
	deepEqual( Stem("scarsamente"), "scars" );
	deepEqual( Stem("scarse"), "scars" );
	deepEqual( Stem("scarseggia"), "scarsegg" );
	deepEqual( Stem("scarsezza"), "scarsezz" );
	deepEqual( Stem("scarsi"), "scars" );
	deepEqual( Stem("scarsità"), "scarsit" );
	deepEqual( Stem("scarso"), "scars" );
	deepEqual( Stem("scartabellando"), "scartabell" );
	deepEqual( Stem("scartafaccio"), "scartafacc" );
	deepEqual( Stem("scarto"), "scart" );
	deepEqual( Stem("scassinar"), "scassin" );
	deepEqual( Stem("scatenamenti"), "scaten" );
	deepEqual( Stem("scatenando"), "scaten" );
	deepEqual( Stem("scatenare"), "scaten" );
	deepEqual( Stem("scatenata"), "scaten" );
	deepEqual( Stem("scatenate"), "scaten" );
	deepEqual( Stem("scatenato"), "scaten" );
	deepEqual( Stem("scatenerebbe"), "scaten" );
	deepEqual( Stem("scateni"), "scaten" );
	deepEqual( Stem("scatola"), "scatol" );
	deepEqual( Stem("scatole"), "scatol" );
	deepEqual( Stem("scatolino"), "scatolin" );
	deepEqual( Stem("scatta"), "scatt" );
	deepEqual( Stem("scattare"), "scatt" );
	deepEqual( Stem("scattate"), "scatt" );
	deepEqual( Stem("scattati"), "scatt" );
	deepEqual( Stem("scattato"), "scatt" );
	deepEqual( Stem("scatteranno"), "scatt" );
	deepEqual( Stem("scatterebbe"), "scatt" );
	deepEqual( Stem("scatto"), "scatt" );
	deepEqual( Stem("scaturire"), "scatur" );
	deepEqual( Stem("scaturisca"), "scatur" );
	deepEqual( Stem("scaturita"), "scatur" );
	deepEqual( Stem("scaturito"), "scatur" );
	deepEqual( Stem("scavalcando"), "scavalc" );
	deepEqual( Stem("scavar"), "scav" );
	deepEqual( Stem("scavare"), "scav" );
	deepEqual( Stem("scavata"), "scav" );
	deepEqual( Stem("scavato"), "scav" );
	deepEqual( Stem("scavo"), "scav" );
	deepEqual( Stem("scavolini"), "scavolin" );
	deepEqual( Stem("scegliamo"), "scegl" );
	deepEqual( Stem("sceglie"), "scegl" );
	deepEqual( Stem("scegliendo"), "scegl" );
	deepEqual( Stem("scegliendolo"), "scegl" );
	deepEqual( Stem("scegliendomi"), "scegl" );
	deepEqual( Stem("sceglieranno"), "scegl" );
	deepEqual( Stem("scegliere"), "scegl" );
	deepEqual( Stem("scegliersi"), "scegl" );
	deepEqual( Stem("scegliete"), "scegl" );
	deepEqual( Stem("sceleraggini"), "sceleraggin" );
	deepEqual( Stem("scelerata"), "sceler" );
	deepEqual( Stem("scelerato"), "sceler" );
	deepEqual( Stem("scelga"), "scelg" );
	deepEqual( Stem("scelgano"), "scelg" );
	deepEqual( Stem("scelgono"), "scelg" );
	deepEqual( Stem("scellerata"), "sceller" );
	deepEqual( Stem("scelleratamente"), "scellerat" );
	deepEqual( Stem("scellerate"), "sceller" );
	deepEqual( Stem("scelleratezza"), "scelleratezz" );
	deepEqual( Stem("scelleratezze"), "scelleratezz" );
	deepEqual( Stem("scellerati"), "sceller" );
	deepEqual( Stem("scellerato"), "sceller" );
	deepEqual( Stem("scellino"), "scellin" );
	deepEqual( Stem("scelse"), "scels" );
	deepEqual( Stem("scelsero"), "scelser" );
	deepEqual( Stem("scelta"), "scelt" );
	deepEqual( Stem("scelte"), "scelt" );
	deepEqual( Stem("scelti"), "scelt" );
	deepEqual( Stem("scelto"), "scelt" );
	deepEqual( Stem("scema"), "scem" );
	deepEqual( Stem("scemando"), "scem" );
	deepEqual( Stem("scemare"), "scem" );
	deepEqual( Stem("scemata"), "scem" );
	deepEqual( Stem("scemati"), "scem" );
	deepEqual( Stem("scemato"), "scem" );
	deepEqual( Stem("scemo"), "scem" );
	deepEqual( Stem("scempiato"), "scemp" );
	deepEqual( Stem("scempio"), "scemp" );
	deepEqual( Stem("scena"), "scen" );
	deepEqual( Stem("scenario"), "scenar" );
	deepEqual( Stem("scenata"), "scen" );
	deepEqual( Stem("scende"), "scend" );
	deepEqual( Stem("scendendo"), "scend" );
	deepEqual( Stem("scender"), "scender" );
	deepEqual( Stem("scenderà"), "scend" );
	deepEqual( Stem("scenderanno"), "scend" );
	deepEqual( Stem("scendere"), "scend" );
	deepEqual( Stem("scendesse"), "scendess" );
	deepEqual( Stem("scendeva"), "scend" );
	deepEqual( Stem("scendevano"), "scend" );
	deepEqual( Stem("scendon"), "scendon" );
	deepEqual( Stem("scendono"), "scend" );
	deepEqual( Stem("scene"), "scen" );
	deepEqual( Stem("sceneggiata"), "scenegg" );
	deepEqual( Stem("sceneggiati"), "scenegg" );
	deepEqual( Stem("sceneggiato"), "scenegg" );
	deepEqual( Stem("scenografia"), "scenograf" );
	deepEqual( Stem("scerso"), "scers" );
	deepEqual( Stem("scesa"), "sces" );
	deepEqual( Stem("scese"), "sces" );
	deepEqual( Stem("scesero"), "sceser" );
	deepEqual( Stem("scesi"), "sces" );
	deepEqual( Stem("sceso"), "sces" );
	deepEqual( Stem("scetticismo"), "scettic" );
	deepEqual( Stem("scettico"), "scettic" );
	deepEqual( Stem("scettro"), "scettr" );
	deepEqual( Stem("schaefer"), "schaefer" );
	deepEqual( Stem("scheda"), "sched" );
	deepEqual( Stem("schede"), "sched" );
	deepEqual( Stem("schedina"), "schedin" );
	deepEqual( Stem("schegge"), "schegg" );
	deepEqual( Stem("scheggiati"), "schegg" );
	deepEqual( Stem("scheggiato"), "schegg" );
	deepEqual( Stem("scheletri"), "scheletr" );
	deepEqual( Stem("scheletro"), "scheletr" );
	deepEqual( Stem("schema"), "schem" );
	deepEqual( Stem("schemi"), "schem" );
	deepEqual( Stem("schenardi"), "schenard" );
	deepEqual( Stem("schenchio"), "schenc" );
	deepEqual( Stem("scherma"), "scherm" );
	deepEqual( Stem("schermaglie"), "schermagl" );
	deepEqual( Stem("schermendo"), "scherm" );
	deepEqual( Stem("schermi"), "scherm" );
	deepEqual( Stem("schermirsi"), "scherm" );
	deepEqual( Stem("schermito"), "scherm" );
	deepEqual( Stem("schermiva"), "scherm" );
	deepEqual( Stem("schermo"), "scherm" );
	deepEqual( Stem("scherni"), "schern" );
	deepEqual( Stem("schernire"), "schern" );
	deepEqual( Stem("schernito"), "schern" );
	deepEqual( Stem("scherno"), "schern" );
	deepEqual( Stem("scherrer"), "scherrer" );
	deepEqual( Stem("scherza"), "scherz" );
	deepEqual( Stem("scherzando"), "scherz" );
	deepEqual( Stem("scherzare"), "scherz" );
	deepEqual( Stem("scherzavamo"), "scherz" );
	deepEqual( Stem("scherzevole"), "scherzevol" );
	deepEqual( Stem("scherzi"), "scherz" );
	deepEqual( Stem("scherzo"), "scherz" );
	deepEqual( Stem("schiacciar"), "schiacc" );
	deepEqual( Stem("schiacciata"), "schiacc" );
	deepEqual( Stem("schiacciato"), "schiacc" );
	deepEqual( Stem("schiaffi"), "schiaff" );
	deepEqual( Stem("schiamazzano"), "schiamazz" );
	deepEqual( Stem("schiamazzare"), "schiamazz" );
	deepEqual( Stem("schiamazzi"), "schiamazz" );
	deepEqual( Stem("schiamazzo"), "schiamazz" );
	deepEqual( Stem("schiantati"), "schiant" );
	deepEqual( Stem("schianto"), "schiant" );
	deepEqual( Stem("schiapexw"), "schiapexw" );
	deepEqual( Stem("schiapparelli"), "schiapparell" );
	deepEqual( Stem("schiarimenti"), "schiar" );
	deepEqual( Stem("schiarimento"), "schiar" );
	deepEqual( Stem("schiarire"), "schiar" );
	deepEqual( Stem("schiava"), "schi" );
	deepEqual( Stem("schiavo"), "schi" );
	deepEqual( Stem("schiena"), "schien" );
	deepEqual( Stem("schiene"), "schien" );
	deepEqual( Stem("schiera"), "schier" );
	deepEqual( Stem("schieramenti"), "schier" );
	deepEqual( Stem("schieramento"), "schier" );
	deepEqual( Stem("schieramentò"), "schierament" );
	deepEqual( Stem("schierando"), "schier" );
	deepEqual( Stem("schierarci"), "schier" );
	deepEqual( Stem("schierarsi"), "schier" );
	deepEqual( Stem("schierata"), "schier" );
	deepEqual( Stem("schierate"), "schier" );
	deepEqual( Stem("schierati"), "schier" );
	deepEqual( Stem("schierato"), "schier" );
	deepEqual( Stem("schierava"), "schier" );
	deepEqual( Stem("schiere"), "schi" );
	deepEqual( Stem("schietta"), "schiett" );
	deepEqual( Stem("schiettamente"), "schiett" );
	deepEqual( Stem("schiettezza"), "schiettezz" );
	deepEqual( Stem("schietto"), "schiett" );
	deepEqual( Stem("schifo"), "schif" );
	deepEqual( Stem("schifosi"), "schifos" );
	deepEqual( Stem("schinardi"), "schinard" );
	deepEqual( Stem("schio"), "schi" );
	deepEqual( Stem("schiodato"), "schiod" );
	deepEqual( Stem("schioppettata"), "schioppett" );
	deepEqual( Stem("schioppettate"), "schioppett" );
	deepEqual( Stem("schioppi"), "schiopp" );
	deepEqual( Stem("schioppo"), "schiopp" );
	deepEqual( Stem("schip"), "schip" );
	deepEqual( Stem("schiribizzo"), "schiribizz" );
	deepEqual( Stem("schisano"), "schis" );
	deepEqual( Stem("schiuma"), "schium" );
	deepEqual( Stem("schivafatiche"), "schivafat" );
	deepEqual( Stem("schivar"), "schiv" );
	deepEqual( Stem("schivare"), "schiv" );
	deepEqual( Stem("schivarli"), "schiv" );
	deepEqual( Stem("schizza"), "schizz" );
	deepEqual( Stem("schizzi"), "schizz" );
	deepEqual( Stem("schizzinosa"), "schizzin" );
	deepEqual( Stem("schizzinoso"), "schizzin" );
	deepEqual( Stem("schizzo"), "schizz" );
	deepEqual( Stem("schloendorff"), "schloendorff" );
	deepEqual( Stem("schmid"), "schmid" );
	deepEqual( Stem("schmidt"), "schmidt" );
	deepEqual( Stem("schott"), "schott" );
	deepEqual( Stem("schroeder"), "schroeder" );
	deepEqual( Stem("schuster"), "schuster" );
	deepEqual( Stem("schwarz"), "schwarz" );
	deepEqual( Stem("schwingsackl"), "schwingsackl" );
	deepEqual( Stem("sci"), "sci" );
	deepEqual( Stem("sciabola"), "sciabol" );
	deepEqual( Stem("sciabole"), "sciabol" );
	deepEqual( Stem("sciacallaggi"), "sciacallagg" );
	deepEqual( Stem("sciacallaggio"), "sciacallagg" );
	deepEqual( Stem("sciacalle"), "sciacall" );
	deepEqual( Stem("sciacca"), "sciacc" );
	deepEqual( Stem("sciagura"), "sciagur" );
	deepEqual( Stem("sciagurata"), "sciagur" );
	deepEqual( Stem("sciagurate"), "sciagur" );
	deepEqual( Stem("sciagurati"), "sciagur" );
	deepEqual( Stem("sciagurato"), "sciagur" );
	deepEqual( Stem("sciagure"), "sciagur" );
	deepEqual( Stem("scialacquava"), "scialacqu" );
	deepEqual( Stem("scialacquìo"), "scialacquì" );
	deepEqual( Stem("scialmente"), "scialment" );
	deepEqual( Stem("sciame"), "sciam" );
	deepEqual( Stem("sciarelli"), "sciarell" );
	deepEqual( Stem("sciarpa"), "sciarp" );
	deepEqual( Stem("sciarpe"), "sciarp" );
	deepEqual( Stem("sciascia"), "sciasc" );
	deepEqual( Stem("sciatore"), "sciator" );
	deepEqual( Stem("sciatori"), "sciator" );
	deepEqual( Stem("scientifica"), "scientif" );
	deepEqual( Stem("scientificamente"), "scientif" );
	deepEqual( Stem("scientifici"), "scientif" );
	deepEqual( Stem("scientology"), "scientology" );
	deepEqual( Stem("scienza"), "scienz" );
	deepEqual( Stem("scienze"), "scienz" );
	deepEqual( Stem("scienziata"), "scienz" );
	deepEqual( Stem("scienziato"), "scienz" );
	deepEqual( Stem("scietà"), "sciet" );
	deepEqual( Stem("sciiti"), "sci" );
	deepEqual( Stem("scilinguagnolo"), "scilinguagnol" );
	deepEqual( Stem("scilla"), "scill" );
	deepEqual( Stem("scimmiè"), "scimm" );
	deepEqual( Stem("scimone"), "scimon" );
	deepEqual( Stem("scintillavan"), "scintillavan" );
	deepEqual( Stem("sciocca"), "sciocc" );
	deepEqual( Stem("scioccata"), "sciocc" );
	deepEqual( Stem("sciocche"), "sciocc" );
	deepEqual( Stem("sciocchezza"), "sciocchezz" );
	deepEqual( Stem("sciocchezze"), "sciocchezz" );
	deepEqual( Stem("sciocchi"), "sciocc" );
	deepEqual( Stem("sciocco"), "sciocc" );
	deepEqual( Stem("sciocconi"), "scioccon" );
	deepEqual( Stem("scioglie"), "sciogl" );
	deepEqual( Stem("sciogliendo"), "sciogl" );
	deepEqual( Stem("sciogliendosi"), "sciogl" );
	deepEqual( Stem("scioglier"), "scioglier" );
	deepEqual( Stem("sciogliere"), "sciogl" );
	deepEqual( Stem("sciogliervi"), "sciogl" );
	deepEqual( Stem("scioglieva"), "sciogl" );
	deepEqual( Stem("scioglimento"), "sciogl" );
	deepEqual( Stem("sciolse"), "sciols" );
	deepEqual( Stem("sciolta"), "sciolt" );
	deepEqual( Stem("sciolte"), "sciolt" );
	deepEqual( Stem("scioltì"), "sciolt" );
	deepEqual( Stem("sciolto"), "sciolt" );
	deepEqual( Stem("scioperanti"), "scioper" );
	deepEqual( Stem("sciopererà"), "scioper" );
	deepEqual( Stem("scioperi"), "scioper" );
	deepEqual( Stem("sciopero"), "scioper" );
	deepEqual( Stem("sciorinata"), "sciorin" );
	deepEqual( Stem("scipione"), "scipion" );
	deepEqual( Stem("scirè"), "scir" );
	deepEqual( Stem("scissione"), "scission" );
	deepEqual( Stem("sciupata"), "sciup" );
	deepEqual( Stem("sciupinìo"), "sciupinì" );
	deepEqual( Stem("sciupone"), "sciupon" );
	deepEqual( Stem("scivolamento"), "scivol" );
	deepEqual( Stem("scivolando"), "scivol" );
	deepEqual( Stem("scivolare"), "scivol" );
	deepEqual( Stem("scivoloso"), "scivol" );
	deepEqual( Stem("scoccassero"), "scocc" );
	deepEqual( Stem("scoccava"), "scocc" );
	deepEqual( Stem("scocco"), "scocc" );
	deepEqual( Stem("scoccò"), "scocc" );
	deepEqual( Stem("scodella"), "scodell" );
	deepEqual( Stem("scodellando"), "scodell" );
	deepEqual( Stem("scodellare"), "scodell" );
	deepEqual( Stem("scodellata"), "scodell" );
	deepEqual( Stem("scodelle"), "scodell" );
	deepEqual( Stem("scodelletta"), "scodellett" );
	deepEqual( Stem("scodellò"), "scodell" );
	deepEqual( Stem("scoglio"), "scogl" );
	deepEqual( Stem("scognamiglio"), "scognamigl" );
	deepEqual( Stem("scognamigliò"), "scognamigl" );
	deepEqual( Stem("scola"), "scol" );
	deepEqual( Stem("scolari"), "scolar" );
	deepEqual( Stem("scolastica"), "scolast" );
	deepEqual( Stem("scolastici"), "scolast" );
	deepEqual( Stem("scolastico"), "scolast" );
	deepEqual( Stem("scollegarsi"), "scolleg" );
	deepEqual( Stem("scollegata"), "scolleg" );
	deepEqual( Stem("scollo"), "scoll" );
	deepEqual( Stem("scolorita"), "scolor" );
	deepEqual( Stem("scolorito"), "scolor" );
	deepEqual( Stem("scolpiva"), "scolp" );
	deepEqual( Stem("scombaciati"), "scombac" );
	deepEqual( Stem("scombussolamento"), "scombussol" );
	deepEqual( Stem("scommessa"), "scommess" );
	deepEqual( Stem("scommesse"), "scommess" );
	deepEqual( Stem("scommettere"), "scommett" );
	deepEqual( Stem("scommetterei"), "scommett" );
	deepEqual( Stem("scommettiamo"), "scommett" );
	deepEqual( Stem("scommettono"), "scommett" );
	deepEqual( Stem("scomodano"), "scomod" );
	deepEqual( Stem("scomodarsi"), "scomod" );
	deepEqual( Stem("scomodato"), "scomod" );
	deepEqual( Stem("scomodo"), "scomod" );
	deepEqual( Stem("scompaginarsi"), "scompagin" );
	deepEqual( Stem("scompagnati"), "scompagn" );
	deepEqual( Stem("scompagnato"), "scompagn" );
	deepEqual( Stem("scomparendo"), "scompar" );
	deepEqual( Stem("scomparir"), "scompar" );
	deepEqual( Stem("scomparire"), "scompar" );
	deepEqual( Stem("scompariva"), "scompar" );
	deepEqual( Stem("scomparsa"), "scompars" );
	deepEqual( Stem("scomparsi"), "scomp" );
	deepEqual( Stem("scomparso"), "scompars" );
	deepEqual( Stem("scomparve"), "scomparv" );
	deepEqual( Stem("scompigli"), "scompigl" );
	deepEqual( Stem("scompigliano"), "scompigl" );
	deepEqual( Stem("scompigliata"), "scompigl" );
	deepEqual( Stem("scompigliati"), "scompigl" );
	deepEqual( Stem("scompiglio"), "scompigl" );
	deepEqual( Stem("scompiglìo"), "scompiglì" );
	deepEqual( Stem("scompor"), "scompor" );
	deepEqual( Stem("scomporre"), "scomporr" );
	deepEqual( Stem("scomporsi"), "scompors" );
	deepEqual( Stem("scomposizione"), "scomposizion" );
	deepEqual( Stem("scomposta"), "scompost" );
	deepEqual( Stem("scomposte"), "scompost" );
	deepEqual( Stem("scomposti"), "scompost" );
	deepEqual( Stem("scomposto"), "scompost" );
	deepEqual( Stem("scomunica"), "scomun" );
	deepEqual( Stem("scomunicata"), "scomunic" );
	deepEqual( Stem("scomunicate"), "scomunic" );
	deepEqual( Stem("sconce"), "sconc" );
	deepEqual( Stem("sconcerta"), "sconcert" );
	deepEqual( Stem("sconcertante"), "sconcert" );
	deepEqual( Stem("sconcertata"), "sconcert" );
	deepEqual( Stem("sconcertati"), "sconcert" );
	deepEqual( Stem("sconcertato"), "sconcert" );
	deepEqual( Stem("sconcia"), "sconc" );
	deepEqual( Stem("sconcio"), "sconc" );
	deepEqual( Stem("sconficca"), "sconficc" );
	deepEqual( Stem("sconficcare"), "sconficc" );
	deepEqual( Stem("sconficcata"), "sconficc" );
	deepEqual( Stem("sconficcati"), "sconficc" );
	deepEqual( Stem("sconficcato"), "sconficc" );
	deepEqual( Stem("sconfigge"), "sconfigg" );
	deepEqual( Stem("sconfiggeremo"), "sconfigg" );
	deepEqual( Stem("sconfiggerlo"), "sconfigg" );
	deepEqual( Stem("sconfitta"), "sconfitt" );
	deepEqual( Stem("sconfitte"), "sconfitt" );
	deepEqual( Stem("sconfitti"), "sconfitt" );
	deepEqual( Stem("sconfitto"), "sconfitt" );
	deepEqual( Stem("sconforto"), "sconfort" );
	deepEqual( Stem("scongiura"), "scongiur" );
	deepEqual( Stem("scongiurando"), "scongiur" );
	deepEqual( Stem("scongiurare"), "scongiur" );
	deepEqual( Stem("scongiuro"), "scongiur" );
	deepEqual( Stem("sconnesse"), "sconness" );
	deepEqual( Stem("sconnesso"), "sconness" );
	deepEqual( Stem("sconoscenza"), "sconoscent" );
	deepEqual( Stem("sconosciuta"), "sconosc" );
	deepEqual( Stem("sconosciute"), "sconosc" );
	deepEqual( Stem("sconosciuti"), "sconosc" );
	deepEqual( Stem("sconosciuto"), "sconosc" );
	deepEqual( Stem("sconquasso"), "sconquass" );
	deepEqual( Stem("sconsacrati"), "sconsacr" );
	deepEqual( Stem("sconsiglia"), "sconsigl" );
	deepEqual( Stem("sconsolato"), "sconsol" );
	deepEqual( Stem("scontan"), "scontan" );
	deepEqual( Stem("scontare"), "scont" );
	deepEqual( Stem("scontato"), "scont" );
	deepEqual( Stem("scontenta"), "scontent" );
	deepEqual( Stem("scontento"), "scontent" );
	deepEqual( Stem("sconto"), "scont" );
	deepEqual( Stem("scontri"), "scontr" );
	deepEqual( Stem("scontrini"), "scontrin" );
	deepEqual( Stem("scontro"), "scontr" );
	deepEqual( Stem("sconvolge"), "sconvolg" );
	deepEqual( Stem("sconvolgimento"), "sconvolg" );
	deepEqual( Stem("sconvolta"), "sconvolt" );
	deepEqual( Stem("sconvolto"), "sconvolt" );
	deepEqual( Stem("sconziano"), "sconz" );
	deepEqual( Stem("scooby"), "scooby" );
	deepEqual( Stem("scopa"), "scop" );
	deepEqual( Stem("scope"), "scop" );
	deepEqual( Stem("scopelliti"), "scopell" );
	deepEqual( Stem("scoperta"), "scopert" );
	deepEqual( Stem("scoperte"), "scopert" );
	deepEqual( Stem("scoperti"), "scop" );
	deepEqual( Stem("scoperto"), "scopert" );
	deepEqual( Stem("scopi"), "scop" );
	deepEqual( Stem("scopo"), "scop" );
	deepEqual( Stem("scoppiano"), "scopp" );
	deepEqual( Stem("scoppiasse"), "scopp" );
	deepEqual( Stem("scoppiata"), "scopp" );
	deepEqual( Stem("scoppiati"), "scopp" );
	deepEqual( Stem("scoppiato"), "scopp" );
	deepEqual( Stem("scoppiava"), "scopp" );
	deepEqual( Stem("scoppiavano"), "scopp" );
	deepEqual( Stem("scoppietta"), "scoppiett" );
	deepEqual( Stem("scoppiettìo"), "scoppiettì" );
	deepEqual( Stem("scoppio"), "scopp" );
	deepEqual( Stem("scoppiò"), "scopp" );
	deepEqual( Stem("scopre"), "scopr" );
	deepEqual( Stem("scoprendo"), "scopr" );
	deepEqual( Stem("scoprendolo"), "scopr" );
	deepEqual( Stem("scoprendosegli"), "scoprendosegl" );
	deepEqual( Stem("scoprì"), "scopr" );
	deepEqual( Stem("scoprir"), "scopr" );
	deepEqual( Stem("scoprirci"), "scopr" );
	deepEqual( Stem("scoprire"), "scopr" );
	deepEqual( Stem("scopriremo"), "scopr" );
	deepEqual( Stem("scoprirlo"), "scopr" );
	deepEqual( Stem("scoprirne"), "scopr" );
	deepEqual( Stem("scoprisse"), "scopriss" );
	deepEqual( Stem("scopritore"), "scopritor" );
	deepEqual( Stem("scoraggito"), "scoragg" );
	deepEqual( Stem("scorcia"), "scorc" );
	deepEqual( Stem("scorciatoia"), "scorciatoi" );
	deepEqual( Stem("scordato"), "scord" );
	deepEqual( Stem("scorgendo"), "scorg" );
	deepEqual( Stem("scorgendogli"), "scorg" );
	deepEqual( Stem("scorgere"), "scorg" );
	deepEqual( Stem("scorgeva"), "scorg" );
	deepEqual( Stem("scorporata"), "scorpor" );
	deepEqual( Stem("scorporo"), "scorpor" );
	deepEqual( Stem("scorre"), "scorr" );
	deepEqual( Stem("scorrendola"), "scorr" );
	deepEqual( Stem("scorrer"), "scorrer" );
	deepEqual( Stem("scorrere"), "scorr" );
	deepEqual( Stem("scorretta"), "scorrett" );
	deepEqual( Stem("scorrettezze"), "scorrettezz" );
	deepEqual( Stem("scorretti"), "scorrett" );
	deepEqual( Stem("scorretto"), "scorrett" );
	deepEqual( Stem("scorreva"), "scorr" );
	deepEqual( Stem("scorrevano"), "scorr" );
	deepEqual( Stem("scorrono"), "scorr" );
	deepEqual( Stem("scorsa"), "scors" );
	deepEqual( Stem("scorse"), "scors" );
	deepEqual( Stem("scorsero"), "scorser" );
	deepEqual( Stem("scorsese"), "scorses" );
	deepEqual( Stem("scorsi"), "scors" );
	deepEqual( Stem("scorso"), "scors" );
	deepEqual( Stem("scorta"), "scort" );
	deepEqual( Stem("scortando"), "scort" );
	deepEqual( Stem("scortare"), "scort" );
	deepEqual( Stem("scortarla"), "scort" );
	deepEqual( Stem("scortata"), "scort" );
	deepEqual( Stem("scortate"), "scort" );
	deepEqual( Stem("scortati"), "scort" );
	deepEqual( Stem("scortato"), "scort" );
	deepEqual( Stem("scorte"), "scort" );
	deepEqual( Stem("scoscendendo"), "scoscend" );
	deepEqual( Stem("scossa"), "scoss" );
	deepEqual( Stem("scosse"), "scoss" );
	deepEqual( Stem("scossi"), "scoss" );
	deepEqual( Stem("scosso"), "scoss" );
	deepEqual( Stem("scostandosi"), "scost" );
	deepEqual( Stem("scostare"), "scost" );
	deepEqual( Stem("scostò"), "scost" );
	deepEqual( Stem("scotendo"), "scot" );
	deepEqual( Stem("scoteva"), "scot" );
	deepEqual( Stem("scott"), "scott" );
	deepEqual( Stem("scotta"), "scott" );
	deepEqual( Stem("scottandogli"), "scott" );
	deepEqual( Stem("scottanti"), "scottant" );
	deepEqual( Stem("scottava"), "scott" );
	deepEqual( Stem("scotti"), "scott" );
	deepEqual( Stem("scottish"), "scottish" );
	deepEqual( Stem("scovar"), "scov" );
	deepEqual( Stem("scovare"), "scov" );
	deepEqual( Stem("scozia"), "scoz" );
	deepEqual( Stem("screditare"), "scredit" );
	deepEqual( Stem("screen"), "screen" );
	deepEqual( Stem("scrematura"), "scrematur" );
	deepEqual( Stem("scribi"), "scrib" );
	deepEqual( Stem("scricchiolasse"), "scricchiol" );
	deepEqual( Stem("scrigno"), "scrign" );
	deepEqual( Stem("scrisse"), "scriss" );
	deepEqual( Stem("scritta"), "scritt" );
	deepEqual( Stem("scritte"), "scritt" );
	deepEqual( Stem("scritti"), "scritt" );
	deepEqual( Stem("scritto"), "scritt" );
	deepEqual( Stem("scrittore"), "scrittor" );
	deepEqual( Stem("scrittori"), "scrittor" );
	deepEqual( Stem("scrittrice"), "scrittric" );
	deepEqual( Stem("scrittura"), "scrittur" );
	deepEqual( Stem("scriuve"), "scriuv" );
	deepEqual( Stem("scrivano"), "scriv" );
	deepEqual( Stem("scrive"), "scriv" );
	deepEqual( Stem("scrivendo"), "scriv" );
	deepEqual( Stem("scrivente"), "scrivent" );
	deepEqual( Stem("scriver"), "scriver" );
	deepEqual( Stem("scrivere"), "scriv" );
	deepEqual( Stem("scriverebbe"), "scriv" );
	deepEqual( Stem("scriverne"), "scriv" );
	deepEqual( Stem("scrivesse"), "scrivess" );
	deepEqual( Stem("scrivete"), "scriv" );
	deepEqual( Stem("scriveva"), "scriv" );
	deepEqual( Stem("scrivevano"), "scriv" );
	deepEqual( Stem("scriviamo"), "scriv" );
	deepEqual( Stem("scrivono"), "scriv" );
	deepEqual( Stem("scrl"), "scrl" );
	deepEqual( Stem("scrosciante"), "scrosciant" );
	deepEqual( Stem("scrosciar"), "scrosc" );
	deepEqual( Stem("scroscio"), "scrosc" );
	deepEqual( Stem("scrostate"), "scrost" );
	deepEqual( Stem("scrupoli"), "scrupol" );
	deepEqual( Stem("scrupolo"), "scrupol" );
	deepEqual( Stem("scrupolosa"), "scrupol" );
	deepEqual( Stem("scrutinio"), "scrutin" );
	deepEqual( Stem("scuderi"), "scuder" );
	deepEqual( Stem("scuderie"), "scuder" );
	deepEqual( Stem("scudetto"), "scudett" );
	deepEqual( Stem("scudi"), "scud" );
	deepEqual( Stem("scudieri"), "scudier" );
	deepEqual( Stem("scudisciate"), "scudisc" );
	deepEqual( Stem("scudo"), "scud" );
	deepEqual( Stem("sculaccia"), "sculacc" );
	deepEqual( Stem("scully"), "scully" );
	deepEqual( Stem("scultori"), "scultor" );
	deepEqual( Stem("sculture"), "scultur" );
	deepEqual( Stem("scuola"), "scuol" );
	deepEqual( Stem("scuole"), "scuol" );
	deepEqual( Stem("scure"), "scur" );
	deepEqual( Stem("scuri"), "scur" );
	deepEqual( Stem("scusa"), "scus" );
	deepEqual( Stem("scusandosi"), "scus" );
	deepEqual( Stem("scusar"), "scus" );
	deepEqual( Stem("scusare"), "scus" );
	deepEqual( Stem("scusarla"), "scus" );
	deepEqual( Stem("scusarne"), "scus" );
	deepEqual( Stem("scusarsi"), "scus" );
	deepEqual( Stem("scusarvi"), "scus" );
	deepEqual( Stem("scusasse"), "scus" );
	deepEqual( Stem("scusate"), "scus" );
	deepEqual( Stem("scusava"), "scus" );
	deepEqual( Stem("scuse"), "scus" );
	deepEqual( Stem("scuserà"), "scus" );
	deepEqual( Stem("scusi"), "scus" );
	deepEqual( Stem("sdegnarsi"), "sdegn" );
	deepEqual( Stem("sdegnata"), "sdegn" );
	deepEqual( Stem("sdegnate"), "sdegn" );
	deepEqual( Stem("sdegnati"), "sdegn" );
	deepEqual( Stem("sdegni"), "sdegn" );
	deepEqual( Stem("sdegno"), "sdegn" );
	deepEqual( Stem("sdegnosa"), "sdegnos" );
	deepEqual( Stem("sdegnosi"), "sdegnos" );
	deepEqual( Stem("sdraiarsi"), "sdrai" );
	deepEqual( Stem("sdraiata"), "sdrai" );
	deepEqual( Stem("sdraiate"), "sdrai" );
	deepEqual( Stem("sdraiati"), "sdrai" );
	deepEqual( Stem("sdraiò"), "sdrai" );
	deepEqual( Stem("sdrucciolar"), "sdrucciol" );
	deepEqual( Stem("sdrucciolare"), "sdrucciol" );
	deepEqual( Stem("sdrucciolava"), "sdrucciol" );
	deepEqual( Stem("sdrucciolò"), "sdrucciol" );
	deepEqual( Stem("se"), "se" );
	deepEqual( Stem("sé"), "sè" );
	deepEqual( Stem("sè"), "sè" );
	deepEqual( Stem("seagull"), "seagull" );
	deepEqual( Stem("sean"), "sean" );
	deepEqual( Stem("seattle"), "seattl" );
	deepEqual( Stem("sebastian"), "sebastian" );
	deepEqual( Stem("sebastiani"), "sebastian" );
	deepEqual( Stem("sebastiano"), "sebast" );
	deepEqual( Stem("sebben"), "sebben" );
	deepEqual( Stem("sebbene"), "sebben" );
	deepEqual( Stem("secca"), "secc" );
	deepEqual( Stem("seccano"), "secc" );
	deepEqual( Stem("seccare"), "secc" );
	deepEqual( Stem("seccarvi"), "secc" );
	deepEqual( Stem("seccata"), "secc" );
	deepEqual( Stem("seccatore"), "seccator" );
	deepEqual( Stem("seccatori"), "seccator" );
	deepEqual( Stem("seccatura"), "seccatur" );
	deepEqual( Stem("secche"), "secc" );
	deepEqual( Stem("seccherebbe"), "secc" );
	deepEqual( Stem("secchi"), "secc" );
	deepEqual( Stem("secchie"), "secc" );
	deepEqual( Stem("secchio"), "secc" );
	deepEqual( Stem("secco"), "secc" );
	deepEqual( Stem("secentista"), "secent" );
	deepEqual( Stem("secessione"), "secession" );
	deepEqual( Stem("secessionismo"), "secession" );
	deepEqual( Stem("secessionista"), "secession" );
	deepEqual( Stem("secessionisti"), "secession" );
	deepEqual( Stem("secit"), "secit" );
	deepEqual( Stem("seco"), "sec" );
	deepEqual( Stem("secolare"), "secol" );
	deepEqual( Stem("secolaresca"), "secolaresc" );
	deepEqual( Stem("secolari"), "secolar" );
	deepEqual( Stem("secoli"), "secol" );
	deepEqual( Stem("secolo"), "secol" );
	deepEqual( Stem("second"), "second" );
	deepEqual( Stem("seconda"), "second" );
	deepEqual( Stem("secondando"), "second" );
	deepEqual( Stem("secondar"), "second" );
	deepEqual( Stem("secondare"), "second" );
	deepEqual( Stem("secondaria"), "secondar" );
	deepEqual( Stem("secondariamente"), "secondar" );
	deepEqual( Stem("secondario"), "secondar" );
	deepEqual( Stem("secondarlo"), "second" );
	deepEqual( Stem("secondato"), "second" );
	deepEqual( Stem("secondava"), "second" );
	deepEqual( Stem("secondavano"), "second" );
	deepEqual( Stem("secondi"), "second" );
	deepEqual( Stem("secondo"), "second" );
	deepEqual( Stem("secret"), "secret" );
	deepEqual( Stem("security"), "security" );
	deepEqual( Stem("sed"), "sed" );
	deepEqual( Stem("sedare"), "sed" );
	deepEqual( Stem("sedata"), "sed" );
	deepEqual( Stem("sedate"), "sed" );
	deepEqual( Stem("sedativi"), "sedat" );
	deepEqual( Stem("sedava"), "sed" );
	deepEqual( Stem("sede"), "sed" );
	deepEqual( Stem("sedendo"), "sed" );
	deepEqual( Stem("sedente"), "sedent" );
	deepEqual( Stem("seder"), "seder" );
	deepEqual( Stem("sedere"), "sed" );
	deepEqual( Stem("sederi"), "seder" );
	deepEqual( Stem("sedersi"), "sed" );
	deepEqual( Stem("sedette"), "sedett" );
	deepEqual( Stem("sedeva"), "sed" );
	deepEqual( Stem("sedevano"), "sed" );
	deepEqual( Stem("sedi"), "sed" );
	deepEqual( Stem("sedia"), "sed" );
	deepEqual( Stem("sedicente"), "sedicent" );
	deepEqual( Stem("sedicenti"), "sedicent" );
	deepEqual( Stem("sedicesimo"), "sedicesim" );
	deepEqual( Stem("sedici"), "sedic" );
	deepEqual( Stem("sedie"), "sed" );
	deepEqual( Stem("sedile"), "sedil" );
	deepEqual( Stem("sedili"), "sedil" );
	deepEqual( Stem("sedizione"), "sedizion" );
	deepEqual( Stem("sediziose"), "sediz" );
	deepEqual( Stem("sedizioso"), "sediz" );
	deepEqual( Stem("seducenti"), "seducent" );
	deepEqual( Stem("sedurre"), "sedurr" );
	deepEqual( Stem("seduta"), "sed" );
	deepEqual( Stem("sedute"), "sed" );
	deepEqual( Stem("seduti"), "sed" );
	deepEqual( Stem("seduto"), "sed" );
	deepEqual( Stem("seduttore"), "seduttor" );
	deepEqual( Stem("seduttrice"), "seduttr" );
	deepEqual( Stem("sefinale"), "sefinal" );
	deepEqual( Stem("sega"), "seg" );
	deepEqual( Stem("segata"), "seg" );
	deepEqual( Stem("segatura"), "segatur" );
	deepEqual( Stem("seggi"), "segg" );
	deepEqual( Stem("seggio"), "segg" );
	deepEqual( Stem("seggiola"), "seggiol" );
	deepEqual( Stem("seggiolaccia"), "seggiolacc" );
	deepEqual( Stem("seggiole"), "seggiol" );
	deepEqual( Stem("seggiolino"), "seggiolin" );
	deepEqual( Stem("seggiolone"), "seggiolon" );
	deepEqual( Stem("segmento"), "segment" );
	deepEqual( Stem("segna"), "segn" );
	deepEqual( Stem("segnala"), "segnal" );
	deepEqual( Stem("segnalano"), "segnal" );
	deepEqual( Stem("segnalare"), "segnal" );
	deepEqual( Stem("segnalata"), "segnal" );
	deepEqual( Stem("segnalate"), "segnal" );
	deepEqual( Stem("segnalati"), "segnal" );
	deepEqual( Stem("segnalato"), "segnal" );
	deepEqual( Stem("segnalazione"), "segnal" );
	deepEqual( Stem("segnalazioni"), "segnal" );
	deepEqual( Stem("segnale"), "segnal" );
	deepEqual( Stem("segnali"), "segnal" );
	deepEqual( Stem("segnaliamo"), "segnal" );
	deepEqual( Stem("segnando"), "segn" );
	deepEqual( Stem("segnare"), "segn" );
	deepEqual( Stem("segnata"), "segn" );
	deepEqual( Stem("segnatamente"), "segnat" );
	deepEqual( Stem("segnate"), "segn" );
	deepEqual( Stem("segnati"), "segn" );
	deepEqual( Stem("segnato"), "segn" );
	deepEqual( Stem("segnava"), "segn" );
	deepEqual( Stem("segnavano"), "segn" );
	deepEqual( Stem("segni"), "segn" );
	deepEqual( Stem("segno"), "segn" );
	deepEqual( Stem("segnò"), "segn" );
	deepEqual( Stem("segrate"), "segr" );
	deepEqual( Stem("segregare"), "segreg" );
	deepEqual( Stem("segregasse"), "segreg" );
	deepEqual( Stem("segreta"), "segret" );
	deepEqual( Stem("segretamente"), "segret" );
	deepEqual( Stem("segretari"), "segretar" );
	deepEqual( Stem("segretaria"), "segretar" );
	deepEqual( Stem("segretariesco"), "segretariesc" );
	deepEqual( Stem("segretario"), "segretar" );
	deepEqual( Stem("segrete"), "segr" );
	deepEqual( Stem("segreteria"), "segreter" );
	deepEqual( Stem("segreterià"), "segreter" );
	deepEqual( Stem("segreterie"), "segreter" );
	deepEqual( Stem("segreterio"), "segreter" );
	deepEqual( Stem("segretezza"), "segretezz" );
	deepEqual( Stem("segreti"), "segret" );
	deepEqual( Stem("segretissimo"), "segretissim" );
	deepEqual( Stem("segreto"), "segret" );
	deepEqual( Stem("segretò"), "segret" );
	deepEqual( Stem("segua"), "segu" );
	deepEqual( Stem("seguaci"), "seguac" );
	deepEqual( Stem("seguano"), "segu" );
	deepEqual( Stem("segue"), "segu" );
	deepEqual( Stem("seguendo"), "segu" );
	deepEqual( Stem("seguente"), "seguent" );
	deepEqual( Stem("seguenti"), "seguent" );
	deepEqual( Stem("segugi"), "segug" );
	deepEqual( Stem("seguì"), "segu" );
	deepEqual( Stem("seguirà"), "segu" );
	deepEqual( Stem("seguiranno"), "segu" );
	deepEqual( Stem("seguire"), "segu" );
	deepEqual( Stem("seguirebbe"), "segu" );
	deepEqual( Stem("seguirebbero"), "segu" );
	deepEqual( Stem("seguiremo"), "segu" );
	deepEqual( Stem("seguirli"), "segu" );
	deepEqual( Stem("seguirne"), "segu" );
	deepEqual( Stem("seguirò"), "segu" );
	deepEqual( Stem("seguiron"), "seguiron" );
	deepEqual( Stem("seguirono"), "segu" );
	deepEqual( Stem("seguisse"), "seguiss" );
	deepEqual( Stem("seguissero"), "segu" );
	deepEqual( Stem("seguita"), "segu" );
	deepEqual( Stem("seguitando"), "seguit" );
	deepEqual( Stem("seguitandolo"), "seguit" );
	deepEqual( Stem("seguitata"), "seguit" );
	deepEqual( Stem("seguitava"), "seguit" );
	deepEqual( Stem("seguitavano"), "seguit" );
	deepEqual( Stem("seguite"), "segu" );
	deepEqual( Stem("seguiti"), "segu" );
	deepEqual( Stem("seguito"), "segu" );
	deepEqual( Stem("seguitò"), "seguit" );
	deepEqual( Stem("seguiva"), "segu" );
	deepEqual( Stem("seguivano"), "segu" );
	deepEqual( Stem("seguo"), "segu" );
	deepEqual( Stem("seguono"), "segu" );
	deepEqual( Stem("sei"), "sei" );
	deepEqual( Stem("seicento"), "seicent" );
	deepEqual( Stem("seie"), "sei" );
	deepEqual( Stem("seimila"), "seimil" );
	deepEqual( Stem("sel"), "sel" );
	deepEqual( Stem("selciato"), "selc" );
	deepEqual( Stem("select"), "select" );
	deepEqual( Stem("selettiva"), "selett" );
	deepEqual( Stem("selettivi"), "selett" );
	deepEqual( Stem("selettività"), "selett" );
	deepEqual( Stem("selezionato"), "selezion" );
	deepEqual( Stem("selezione"), "selezion" );
	deepEqual( Stem("sella"), "sell" );
	deepEqual( Stem("sellare"), "sell" );
	deepEqual( Stem("seluatiche"), "seluat" );
	deepEqual( Stem("selva"), "selv" );
	deepEqual( Stem("selvagge"), "selvagg" );
	deepEqual( Stem("selvaggia"), "selvagg" );
	deepEqual( Stem("selvaggio"), "selvagg" );
	deepEqual( Stem("sembehun"), "sembehun" );
	deepEqual( Stem("sembiante"), "sembiant" );
	deepEqual( Stem("sembianti"), "sembiant" );
	deepEqual( Stem("sembianza"), "sembianz" );
	deepEqual( Stem("sembra"), "sembr" );
	deepEqual( Stem("sembrano"), "sembr" );
	deepEqual( Stem("sembrare"), "sembr" );
	deepEqual( Stem("sembrasse"), "sembr" );
	deepEqual( Stem("sembrate"), "sembr" );
	deepEqual( Stem("sembrati"), "sembr" );
	deepEqual( Stem("sembrato"), "sembr" );
	deepEqual( Stem("sembrava"), "sembr" );
	deepEqual( Stem("sembrerebbe"), "sembr" );
	deepEqual( Stem("sembrerebbero"), "sembr" );
	deepEqual( Stem("sembri"), "sembr" );
	deepEqual( Stem("seme"), "sem" );
	deepEqual( Stem("sementa"), "sement" );
	deepEqual( Stem("semente"), "sement" );
	deepEqual( Stem("semenza"), "semenz" );
	deepEqual( Stem("semestrali"), "semestral" );
	deepEqual( Stem("semestre"), "semestr" );
	deepEqual( Stem("semi"), "sem" );
	deepEqual( Stem("semicieco"), "semiciec" );
	deepEqual( Stem("semicircolo"), "semicircol" );
	deepEqual( Stem("semideserto"), "semidesert" );
	deepEqual( Stem("semidistrutto"), "semidistrutt" );
	deepEqual( Stem("semifinale"), "semifinal" );
	deepEqual( Stem("semifinali"), "semifinal" );
	deepEqual( Stem("semilibertà"), "semilibert" );
	deepEqual( Stem("seminano"), "semin" );
	deepEqual( Stem("seminar"), "semin" );
	deepEqual( Stem("seminare"), "semin" );
	deepEqual( Stem("seminario"), "seminar" );
	deepEqual( Stem("seminata"), "semin" );
	deepEqual( Stem("seminate"), "semin" );
	deepEqual( Stem("seminati"), "semin" );
	deepEqual( Stem("seminato"), "semin" );
	deepEqual( Stem("seminava"), "semin" );
	deepEqual( Stem("seminavano"), "semin" );
	deepEqual( Stem("seminìo"), "seminì" );
	deepEqual( Stem("semitono"), "semit" );
	deepEqual( Stem("semivivo"), "semiv" );
	deepEqual( Stem("semmai"), "semma" );
	deepEqual( Stem("semplice"), "semplic" );
	deepEqual( Stem("semplicemente"), "semplic" );
	deepEqual( Stem("semplici"), "semplic" );
	deepEqual( Stem("sempliciotto"), "sempliciott" );
	deepEqual( Stem("semplicità"), "semplic" );
	deepEqual( Stem("semplificare"), "semplific" );
	deepEqual( Stem("semplificazione"), "semplif" );
	deepEqual( Stem("sempre"), "sempr" );
	deepEqual( Stem("sempronio"), "sempron" );
	deepEqual( Stem("sen"), "sen" );
	deepEqual( Stem("senato"), "sen" );
	deepEqual( Stem("senatore"), "senator" );
	deepEqual( Stem("senatori"), "senator" );
	deepEqual( Stem("senatur"), "senatur" );
	deepEqual( Stem("senectus"), "senectus" );
	deepEqual( Stem("senegal"), "senegal" );
	deepEqual( Stem("senegalese"), "senegales" );
	deepEqual( Stem("senese"), "senes" );
	deepEqual( Stem("seni"), "sen" );
	deepEqual( Stem("seniga"), "senig" );
	deepEqual( Stem("senile"), "senil" );
	deepEqual( Stem("senno"), "senn" );
	deepEqual( Stem("sennò"), "senn" );
	deepEqual( Stem("seno"), "sen" );
	deepEqual( Stem("senonchè"), "senonc" );
	deepEqual( Stem("señor"), "señor" );
	deepEqual( Stem("sensazione"), "sensazion" );
	deepEqual( Stem("sensazioni"), "sensazion" );
	deepEqual( Stem("sensi"), "sens" );
	deepEqual( Stem("sensibile"), "sensibil" );
	deepEqual( Stem("sensibilità"), "sensibil" );
	deepEqual( Stem("sensibilmente"), "sensibil" );
	deepEqual( Stem("sensini"), "sensin" );
	deepEqual( Stem("sensitiva"), "sensit" );
	deepEqual( Stem("sensitivo"), "sensit" );
	deepEqual( Stem("senso"), "sens" );
	deepEqual( Stem("senta"), "sent" );
	deepEqual( Stem("sentan"), "sentan" );
	deepEqual( Stem("sentano"), "sent" );
	deepEqual( Stem("sente"), "sent" );
	deepEqual( Stem("sentendo"), "sent" );
	deepEqual( Stem("sentendolo"), "sent" );
	deepEqual( Stem("sentendosi"), "sent" );
	deepEqual( Stem("sententiam"), "sententiam" );
	deepEqual( Stem("sentenza"), "sentenz" );
	deepEqual( Stem("sentenze"), "sentenz" );
	deepEqual( Stem("sentenziare"), "sentenz" );
	deepEqual( Stem("sentenziato"), "sentenz" );
	deepEqual( Stem("sentenzio"), "sentenz" );
	deepEqual( Stem("senti"), "sent" );
	deepEqual( Stem("sentì"), "sent" );
	deepEqual( Stem("sentiamo"), "sent" );
	deepEqual( Stem("sentieri"), "sentier" );
	deepEqual( Stem("sentiero"), "sentier" );
	deepEqual( Stem("sentimentale"), "sentimental" );
	deepEqual( Stem("sentimentalmente"), "sentimental" );
	deepEqual( Stem("sentimenti"), "sent" );
	deepEqual( Stem("sentimento"), "sent" );
	deepEqual( Stem("sentinella"), "sentinell" );
	deepEqual( Stem("sentinelle"), "sentinell" );
	deepEqual( Stem("sentir"), "sent" );
	deepEqual( Stem("sentirà"), "sent" );
	deepEqual( Stem("sentirai"), "sent" );
	deepEqual( Stem("sentiranno"), "sent" );
	deepEqual( Stem("sentire"), "sent" );
	deepEqual( Stem("sentiremo"), "sent" );
	deepEqual( Stem("sentirete"), "sent" );
	deepEqual( Stem("sentirla"), "sent" );
	deepEqual( Stem("sentirle"), "sent" );
	deepEqual( Stem("sentirlo"), "sent" );
	deepEqual( Stem("sentirmi"), "sent" );
	deepEqual( Stem("sentirne"), "sent" );
	deepEqual( Stem("sentirò"), "sent" );
	deepEqual( Stem("sentiron"), "sentiron" );
	deepEqual( Stem("sentirono"), "sent" );
	deepEqual( Stem("sentirsi"), "sent" );
	deepEqual( Stem("sentirvi"), "sent" );
	deepEqual( Stem("sentisse"), "sentiss" );
	deepEqual( Stem("sentissi"), "sentiss" );
	deepEqual( Stem("sentita"), "sent" );
	deepEqual( Stem("sentite"), "sent" );
	deepEqual( Stem("sentiti"), "sent" );
	deepEqual( Stem("sentito"), "sent" );
	deepEqual( Stem("sentiva"), "sent" );
	deepEqual( Stem("sentivan"), "sentivan" );
	deepEqual( Stem("sentivano"), "sent" );
	deepEqual( Stem("sento"), "sent" );
	deepEqual( Stem("senton"), "senton" );
	deepEqual( Stem("sentono"), "sent" );
	deepEqual( Stem("senz"), "senz" );
	deepEqual( Stem("senza"), "senz" );
	deepEqual( Stem("separa"), "separ" );
	deepEqual( Stem("separando"), "separ" );
	deepEqual( Stem("separandosi"), "separ" );
	deepEqual( Stem("separano"), "separ" );
	deepEqual( Stem("separar"), "separ" );
	deepEqual( Stem("separare"), "separ" );
	deepEqual( Stem("separarlo"), "separ" );
	deepEqual( Stem("separarono"), "separ" );
	deepEqual( Stem("separarsi"), "separ" );
	deepEqual( Stem("separata"), "separ" );
	deepEqual( Stem("separatamente"), "separat" );
	deepEqual( Stem("separate"), "separ" );
	deepEqual( Stem("separati"), "separ" );
	deepEqual( Stem("separatista"), "separat" );
	deepEqual( Stem("separatiste"), "separat" );
	deepEqual( Stem("separatisti"), "separat" );
	deepEqual( Stem("separato"), "separ" );
	deepEqual( Stem("separatone"), "separaton" );
	deepEqual( Stem("separava"), "separ" );
	deepEqual( Stem("separavan"), "separavan" );
	deepEqual( Stem("separazione"), "separ" );
	deepEqual( Stem("separazioni"), "separ" );
	deepEqual( Stem("sepolta"), "sepolt" );
	deepEqual( Stem("sepolte"), "sepolt" );
	deepEqual( Stem("sepolti"), "sepolt" );
	deepEqual( Stem("sepolto"), "sepolt" );
	deepEqual( Stem("seppe"), "sepp" );
	deepEqual( Stem("seppellirsi"), "seppell" );
	deepEqual( Stem("seppero"), "sepper" );
	deepEqual( Stem("seppi"), "sepp" );
	deepEqual( Stem("seppo"), "sepp" );
	deepEqual( Stem("seppur"), "seppur" );
	deepEqual( Stem("seq"), "seq" );
	deepEqual( Stem("sequestra"), "sequestr" );
	deepEqual( Stem("sequestrare"), "sequestr" );
	deepEqual( Stem("sequestrata"), "sequestr" );
	deepEqual( Stem("sequestrate"), "sequestr" );
	deepEqual( Stem("sequestrati"), "sequestr" );
	deepEqual( Stem("sequestrato"), "sequestr" );
	deepEqual( Stem("sequestri"), "sequestr" );
	deepEqual( Stem("sequestro"), "sequestr" );
	deepEqual( Stem("sera"), "ser" );
	deepEqual( Stem("serafino"), "serafin" );
	deepEqual( Stem("seraing"), "seraing" );
	deepEqual( Stem("serata"), "ser" );
	deepEqual( Stem("serato"), "ser" );
	deepEqual( Stem("serba"), "serb" );
	deepEqual( Stem("serbando"), "serb" );
	deepEqual( Stem("serbano"), "serb" );
	deepEqual( Stem("serbarceli"), "serb" );
	deepEqual( Stem("serbarsi"), "serb" );
	deepEqual( Stem("serbate"), "serb" );
	deepEqual( Stem("serbateli"), "serbatel" );
	deepEqual( Stem("serbatelo"), "serbatel" );
	deepEqual( Stem("serbatoio"), "serbatoi" );
	deepEqual( Stem("serbava"), "serb" );
	deepEqual( Stem("serbavano"), "serb" );
	deepEqual( Stem("serbe"), "serb" );
	deepEqual( Stem("serbi"), "serb" );
	deepEqual( Stem("serbo"), "serb" );
	deepEqual( Stem("serbò"), "serb" );
	deepEqual( Stem("serena"), "seren" );
	deepEqual( Stem("serenissimo"), "serenissim" );
	deepEqual( Stem("serenità"), "seren" );
	deepEqual( Stem("sereno"), "seren" );
	deepEqual( Stem("serfi"), "serf" );
	deepEqual( Stem("sergente"), "sergent" );
	deepEqual( Stem("sergi"), "serg" );
	deepEqual( Stem("sergio"), "serg" );
	deepEqual( Stem("sergno"), "sergn" );
	deepEqual( Stem("seri"), "ser" );
	deepEqual( Stem("seria"), "ser" );
	deepEqual( Stem("serial"), "serial" );
	deepEqual( Stem("seriamente"), "ser" );
	deepEqual( Stem("serie"), "ser" );
	deepEqual( Stem("series"), "series" );
	deepEqual( Stem("serietà"), "seriet" );
	deepEqual( Stem("serio"), "ser" );
	deepEqual( Stem("serissimo"), "serissim" );
	deepEqual( Stem("serizi"), "seriz" );
	deepEqual( Stem("serono"), "ser" );
	deepEqual( Stem("serpe"), "serp" );
	deepEqual( Stem("serpeggiamento"), "serpegg" );
	deepEqual( Stem("serpeggiando"), "serpegg" );
	deepEqual( Stem("serpeggiante"), "serpegg" );
	deepEqual( Stem("serpeggianti"), "serpegg" );
	deepEqual( Stem("serpeggiare"), "serpegg" );
	deepEqual( Stem("serpellini"), "serpellin" );
	deepEqual( Stem("serpendo"), "serp" );
	deepEqual( Stem("serpenti"), "serpent" );
	deepEqual( Stem("serpi"), "serp" );
	deepEqual( Stem("serra"), "serr" );
	deepEqual( Stem("serrata"), "serr" );
	deepEqual( Stem("serrati"), "serr" );
	deepEqual( Stem("serratissimo"), "serratissim" );
	deepEqual( Stem("serrato"), "serr" );
	deepEqual( Stem("serratura"), "serratur" );
	deepEqual( Stem("serre"), "serr" );
	deepEqual( Stem("serri"), "serr" );
	deepEqual( Stem("serrra"), "serrr" );
	deepEqual( Stem("serva"), "serv" );
	deepEqual( Stem("servano"), "serv" );
	deepEqual( Stem("serve"), "serv" );
	deepEqual( Stem("servello"), "servell" );
	deepEqual( Stem("servendolo"), "serv" );
	deepEqual( Stem("servendosene"), "serv" );
	deepEqual( Stem("serventi"), "servent" );
	deepEqual( Stem("servetta"), "servett" );
	deepEqual( Stem("servi"), "serv" );
	deepEqual( Stem("servì"), "serv" );
	deepEqual( Stem("serviamo"), "serv" );
	deepEqual( Stem("servicio"), "servic" );
	deepEqual( Stem("servile"), "servil" );
	deepEqual( Stem("servilismo"), "servil" );
	deepEqual( Stem("servir"), "serv" );
	deepEqual( Stem("servirà"), "serv" );
	deepEqual( Stem("serviranno"), "serv" );
	deepEqual( Stem("servire"), "serv" );
	deepEqual( Stem("servirebbe"), "serv" );
	deepEqual( Stem("servirgli"), "serv" );
	deepEqual( Stem("servirla"), "serv" );
	deepEqual( Stem("servirli"), "serv" );
	deepEqual( Stem("servirlo"), "serv" );
	deepEqual( Stem("servirò"), "serv" );
	deepEqual( Stem("serviron"), "serviron" );
	deepEqual( Stem("servirono"), "serv" );
	deepEqual( Stem("servirsene"), "serv" );
	deepEqual( Stem("servirsi"), "serv" );
	deepEqual( Stem("servirvi"), "serv" );
	deepEqual( Stem("servisse"), "serviss" );
	deepEqual( Stem("servita"), "serv" );
	deepEqual( Stem("servite"), "serv" );
	deepEqual( Stem("serviti"), "serv" );
	deepEqual( Stem("servito"), "serv" );
	deepEqual( Stem("servitor"), "servitor" );
	deepEqual( Stem("servitore"), "servitor" );
	deepEqual( Stem("servitori"), "servitor" );
	deepEqual( Stem("servitù"), "servitù" );
	deepEqual( Stem("serviva"), "serv" );
	deepEqual( Stem("servivano"), "serv" );
	deepEqual( Stem("servizi"), "serviz" );
	deepEqual( Stem("servizietto"), "serviziett" );
	deepEqual( Stem("servizio"), "serviz" );
	deepEqual( Stem("servo"), "serv" );
	deepEqual( Stem("servodio"), "servod" );
	deepEqual( Stem("servono"), "serv" );
	deepEqual( Stem("sesani"), "sesan" );
	deepEqual( Stem("sesia"), "ses" );
	deepEqual( Stem("sessant"), "sessant" );
	deepEqual( Stem("sessanta"), "sessant" );
	deepEqual( Stem("sessantaquattro"), "sessantaquattr" );
	deepEqual( Stem("sessantina"), "sessantin" );
	deepEqual( Stem("sessi"), "sess" );
	deepEqual( Stem("sessione"), "session" );
	deepEqual( Stem("sesso"), "sess" );
	deepEqual( Stem("sessuale"), "sessual" );
	deepEqual( Stem("sessuali"), "sessual" );
	deepEqual( Stem("sessualmente"), "sessual" );
	deepEqual( Stem("sesta"), "sest" );
	deepEqual( Stem("sesto"), "sest" );
	deepEqual( Stem("sestri"), "sestr" );
	deepEqual( Stem("set"), "set" );
	deepEqual( Stem("seta"), "set" );
	deepEqual( Stem("setacciamente"), "setacc" );
	deepEqual( Stem("setacciando"), "setacc" );
	deepEqual( Stem("sete"), "set" );
	deepEqual( Stem("setien"), "setien" );
	deepEqual( Stem("sett"), "sett" );
	deepEqual( Stem("settala"), "settal" );
	deepEqual( Stem("settant"), "settant" );
	deepEqual( Stem("settantina"), "settantin" );
	deepEqual( Stem("settaria"), "settar" );
	deepEqual( Stem("sette"), "sett" );
	deepEqual( Stem("settembre"), "settembr" );
	deepEqual( Stem("settentrionale"), "settentrional" );
	deepEqual( Stem("settentrionali"), "settentrional" );
	deepEqual( Stem("settentrione"), "settentrion" );
	deepEqual( Stem("settima"), "settim" );
	deepEqual( Stem("settimana"), "settiman" );
	deepEqual( Stem("settimanale"), "settimanal" );
	deepEqual( Stem("settimanali"), "settimanal" );
	deepEqual( Stem("settimane"), "settiman" );
	deepEqual( Stem("settime"), "settim" );
	deepEqual( Stem("settimo"), "settim" );
	deepEqual( Stem("settore"), "settor" );
	deepEqual( Stem("settori"), "settor" );
	deepEqual( Stem("settoriale"), "settorial" );
	deepEqual( Stem("settoriali"), "settorial" );
	deepEqual( Stem("seul"), "seul" );
	deepEqual( Stem("sevendosi"), "sev" );
	deepEqual( Stem("severa"), "sever" );
	deepEqual( Stem("severamente"), "sever" );
	deepEqual( Stem("severe"), "sev" );
	deepEqual( Stem("severi"), "sever" );
	deepEqual( Stem("severissime"), "severissim" );
	deepEqual( Stem("severissimi"), "severissim" );
	deepEqual( Stem("severo"), "sever" );
	deepEqual( Stem("sevitie"), "sevit" );
	deepEqual( Stem("sex"), "sex" );
	deepEqual( Stem("sexi"), "sex" );
	deepEqual( Stem("seyed"), "seyed" );
	deepEqual( Stem("seymandi"), "seymand" );
	deepEqual( Stem("sezione"), "sezion" );
	deepEqual( Stem("sezioni"), "sezion" );
	deepEqual( Stem("sf"), "sf" );
	deepEqual( Stem("sfaccendati"), "sfaccend" );
	deepEqual( Stem("sfacciata"), "sfacc" );
	deepEqual( Stem("sfacciataggine"), "sfacciataggin" );
	deepEqual( Stem("sfacciato"), "sfacc" );
	deepEqual( Stem("sfama"), "sfam" );
	deepEqual( Stem("sfarzosa"), "sfarzos" );
	deepEqual( Stem("sfarzosamente"), "sfarzos" );
	deepEqual( Stem("sfarzose"), "sfarzos" );
	deepEqual( Stem("sfarzosi"), "sfarzos" );
	deepEqual( Stem("sfera"), "sfer" );
	deepEqual( Stem("sferra"), "sferr" );
	deepEqual( Stem("sferrare"), "sferr" );
	deepEqual( Stem("sferrato"), "sferr" );
	deepEqual( Stem("sferzando"), "sferz" );
	deepEqual( Stem("sfida"), "sfid" );
	deepEqual( Stem("sfidante"), "sfidant" );
	deepEqual( Stem("sfidare"), "sfid" );
	deepEqual( Stem("sfide"), "sfid" );
	deepEqual( Stem("sfiducia"), "sfiduc" );
	deepEqual( Stem("sfigurata"), "sfigur" );
	deepEqual( Stem("sfilare"), "sfil" );
	deepEqual( Stem("sfilarono"), "sfil" );
	deepEqual( Stem("sfilata"), "sfil" );
	deepEqual( Stem("sfilati"), "sfil" );
	deepEqual( Stem("sfilato"), "sfil" );
	deepEqual( Stem("sfinimento"), "sfin" );
	deepEqual( Stem("sfiorando"), "sfior" );
	deepEqual( Stem("sfiorare"), "sfior" );
	deepEqual( Stem("sfiorava"), "sfior" );
	deepEqual( Stem("sfiorita"), "sfior" );
	deepEqual( Stem("sfociano"), "sfoc" );
	deepEqual( Stem("sfociare"), "sfoc" );
	deepEqual( Stem("sfociato"), "sfoc" );
	deepEqual( Stem("sfoderando"), "sfoder" );
	deepEqual( Stem("sfoderate"), "sfoder" );
	deepEqual( Stem("sfoderò"), "sfod" );
	deepEqual( Stem("sfogar"), "sfog" );
	deepEqual( Stem("sfogare"), "sfog" );
	deepEqual( Stem("sfogarsi"), "sfog" );
	deepEqual( Stem("sfogava"), "sfog" );
	deepEqual( Stem("sfoggi"), "sfogg" );
	deepEqual( Stem("sfoggia"), "sfogg" );
	deepEqual( Stem("sfoghi"), "sfog" );
	deepEqual( Stem("sfogo"), "sfog" );
	deepEqual( Stem("sfolgorati"), "sfolgor" );
	deepEqual( Stem("sfolgoravano"), "sfolgor" );
	deepEqual( Stem("sfollati"), "sfoll" );
	deepEqual( Stem("sfonda"), "sfond" );
	deepEqual( Stem("sfondarla"), "sfond" );
	deepEqual( Stem("sfondata"), "sfond" );
	deepEqual( Stem("sfondati"), "sfond" );
	deepEqual( Stem("sfondo"), "sfond" );
	deepEqual( Stem("sforacchiate"), "sforacc" );
	deepEqual( Stem("sforare"), "sfor" );
	deepEqual( Stem("sformato"), "sform" );
	deepEqual( Stem("sfornare"), "sforn" );
	deepEqual( Stem("sfortuna"), "sfortun" );
	deepEqual( Stem("sfortunata"), "sfortun" );
	deepEqual( Stem("sfortunato"), "sfortun" );
	deepEqual( Stem("sforzai"), "sforza" );
	deepEqual( Stem("sforzarsi"), "sforz" );
	deepEqual( Stem("sforzasser"), "sforzasser" );
	deepEqual( Stem("sforzati"), "sforz" );
	deepEqual( Stem("sforzava"), "sforz" );
	deepEqual( Stem("sforzesco"), "sforzesc" );
	deepEqual( Stem("sforzi"), "sforz" );
	deepEqual( Stem("sforzo"), "sforz" );
	deepEqual( Stem("sfottò"), "sfott" );
	deepEqual( Stem("sfrattar"), "sfratt" );
	deepEqual( Stem("sfrattasse"), "sfratt" );
	deepEqual( Stem("sfrattata"), "sfratt" );
	deepEqual( Stem("sfrattati"), "sfratt" );
	deepEqual( Stem("sfrattato"), "sfratt" );
	deepEqual( Stem("sfratto"), "sfratt" );
	deepEqual( Stem("sfrecciato"), "sfrecc" );
	deepEqual( Stem("sfregiati"), "sfreg" );
	deepEqual( Stem("sfregiato"), "sfreg" );
	deepEqual( Stem("sfregio"), "sfreg" );
	deepEqual( Stem("sfrenata"), "sfren" );
	deepEqual( Stem("sfrenatezza"), "sfrenatezz" );
	deepEqual( Stem("sfrondati"), "sfrond" );
	deepEqual( Stem("sfrontatezza"), "sfrontatezz" );
	deepEqual( Stem("sfruttando"), "sfrutt" );
	deepEqual( Stem("sfruttare"), "sfrutt" );
	deepEqual( Stem("sfruttato"), "sfrutt" );
	deepEqual( Stem("sfruttatrici"), "sfruttatric" );
	deepEqual( Stem("sfugge"), "sfugg" );
	deepEqual( Stem("sfuggì"), "sfugg" );
	deepEqual( Stem("sfuggir"), "sfugg" );
	deepEqual( Stem("sfuggirci"), "sfugg" );
	deepEqual( Stem("sfuggire"), "sfugg" );
	deepEqual( Stem("sfuggisse"), "sfuggiss" );
	deepEqual( Stem("sfuggita"), "sfugg" );
	deepEqual( Stem("sfuggite"), "sfugg" );
	deepEqual( Stem("sfuggito"), "sfugg" );
	deepEqual( Stem("sfuggono"), "sfugg" );
	deepEqual( Stem("sfumando"), "sfum" );
	deepEqual( Stem("sfumato"), "sfum" );
	deepEqual( Stem("sfumature"), "sfumatur" );
	deepEqual( Stem("sfumavano"), "sfum" );
	deepEqual( Stem("sg"), "sg" );
	deepEqual( Stem("sgambetto"), "sgambett" );
	deepEqual( Stem("sgangheratamente"), "sgangherat" );
	deepEqual( Stem("sgangherate"), "sgangher" );
	deepEqual( Stem("sgangherati"), "sgangher" );
	deepEqual( Stem("sgangherato"), "sgangher" );
	deepEqual( Stem("sgarbata"), "sgarb" );
	deepEqual( Stem("sgarbatamente"), "sgarbat" );
	deepEqual( Stem("sgarbatezze"), "sgarbatezz" );
	deepEqual( Stem("sgarbato"), "sgarb" );
	deepEqual( Stem("sgarbi"), "sgarb" );
	deepEqual( Stem("sgarbossa"), "sgarboss" );
	deepEqual( Stem("sgherri"), "sgherr" );
	deepEqual( Stem("sgherro"), "sgherr" );
	deepEqual( Stem("sghignazzando"), "sghignazz" );
	deepEqual( Stem("sghignazzava"), "sghignazz" );
	deepEqual( Stem("sgomberare"), "sgomber" );
	deepEqual( Stem("sgombero"), "sgomber" );
	deepEqual( Stem("sgombra"), "sgombr" );
	deepEqual( Stem("sgombrare"), "sgombr" );
	deepEqual( Stem("sgombrate"), "sgombr" );
	deepEqual( Stem("sgombro"), "sgombr" );
	deepEqual( Stem("sgomentata"), "sgoment" );
	deepEqual( Stem("sgomentate"), "sgoment" );
	deepEqual( Stem("sgomentati"), "sgoment" );
	deepEqual( Stem("sgomenti"), "sgoment" );
	deepEqual( Stem("sgomento"), "sgoment" );
	deepEqual( Stem("sgomitolandosi"), "sgomitol" );
	deepEqual( Stem("sgozzata"), "sgozz" );
	deepEqual( Stem("sgradevole"), "sgradevol" );
	deepEqual( Stem("sgraffiatura"), "sgraffiatur" );
	deepEqual( Stem("sgraffignato"), "sgraffign" );
	deepEqual( Stem("sgranchì"), "sgranc" );
	deepEqual( Stem("sgranchirsi"), "sgranc" );
	deepEqual( Stem("sgranocchiato"), "sgranocc" );
	deepEqual( Stem("sgretolavano"), "sgretol" );
	deepEqual( Stem("sgridata"), "sgrid" );
	deepEqual( Stem("sgrò"), "sgrò" );
	deepEqual( Stem("sgruppò"), "sgrupp" );
	deepEqual( Stem("sguaiata"), "sguai" );
	deepEqual( Stem("sguaiato"), "sguai" );
	deepEqual( Stem("sgualcita"), "sgualc" );
	deepEqual( Stem("sguardi"), "sguard" );
	deepEqual( Stem("sguardo"), "sguard" );
	deepEqual( Stem("sguattero"), "sguatter" );
	deepEqual( Stem("sguazzar"), "sguazz" );
	deepEqual( Stem("sguazzava"), "sguazz" );
	deepEqual( Stem("sguazzi"), "sguazz" );
	deepEqual( Stem("sguizza"), "sguizz" );
	deepEqual( Stem("sgusciavano"), "sgusc" );
	deepEqual( Stem("sh"), "sh" );
	deepEqual( Stem("shaath"), "shaath" );
	deepEqual( Stem("shadchin"), "shadchin" );
	deepEqual( Stem("shafranik"), "shafranik" );
	deepEqual( Stem("shah"), "shah" );
	deepEqual( Stem("shahak"), "shahak" );
	deepEqual( Stem("shali"), "shal" );
	deepEqual( Stem("shalimar"), "shalim" );
	deepEqual( Stem("shankar"), "shank" );
	deepEqual( Stem("share"), "shar" );
	deepEqual( Stem("sharma"), "sharm" );
	deepEqual( Stem("shatoievsk"), "shatoievsk" );
	deepEqual( Stem("sheen"), "sheen" );
	deepEqual( Stem("sheffield"), "sheffield" );
	deepEqual( Stem("sheila"), "sheil" );
	deepEqual( Stem("shelley"), "shelley" );
	deepEqual( Stem("sheridan"), "sheridan" );
	deepEqual( Stem("sherman"), "sherman" );
	deepEqual( Stem("shield"), "shield" );
	deepEqual( Stem("shiff"), "shiff" );
	deepEqual( Stem("shimer"), "shimer" );
	deepEqual( Stem("shimon"), "shimon" );
	deepEqual( Stem("shinji"), "shinj" );
	deepEqual( Stem("ship"), "ship" );
	deepEqual( Stem("shipping"), "shipping" );
	deepEqual( Stem("shirley"), "shirley" );
	deepEqual( Stem("shiro"), "shir" );
	deepEqual( Stem("shiskin"), "shiskin" );
	deepEqual( Stem("shore"), "shor" );
	deepEqual( Stem("shos"), "shos" );
	deepEqual( Stem("show"), "show" );
	deepEqual( Stem("shqipetarè"), "shqipetar" );
	deepEqual( Stem("shropshire"), "shropsh" );
	deepEqual( Stem("shuar"), "shu" );
	deepEqual( Stem("shurà"), "shur" );
	deepEqual( Stem("shuster"), "shuster" );
	deepEqual( Stem("shygulla"), "shygull" );
	deepEqual( Stem("si"), "si" );
	deepEqual( Stem("sì"), "sì" );
	deepEqual( Stem("sia"), "sia" );
	deepEqual( Stem("siaca"), "siac" );
	deepEqual( Stem("siam"), "siam" );
	deepEqual( Stem("siamo"), "siam" );
	deepEqual( Stem("sian"), "sian" );
	deepEqual( Stem("siano"), "sian" );
	deepEqual( Stem("siate"), "siat" );
	deepEqual( Stem("siatelo"), "siatel" );
	deepEqual( Stem("siberiano"), "siber" );
	deepEqual( Stem("sic"), "sic" );
	deepEqual( Stem("sicari"), "sicar" );
	deepEqual( Stem("sicché"), "sicc" );
	deepEqual( Stem("sicchè"), "sicc" );
	deepEqual( Stem("siccità"), "siccit" );
	deepEqual( Stem("siccome"), "siccom" );
	deepEqual( Stem("sichuan"), "sichuan" );
	deepEqual( Stem("sicignano"), "sicign" );
	deepEqual( Stem("sicilcassa"), "sicilcass" );
	deepEqual( Stem("sicilia"), "sicil" );
	deepEqual( Stem("siciliana"), "sicilian" );
	deepEqual( Stem("siciliane"), "sicilian" );
	deepEqual( Stem("siciliani"), "sicilian" );
	deepEqual( Stem("siciliano"), "sicil" );
	deepEqual( Stem("sicilie"), "sicil" );
	deepEqual( Stem("sicu"), "sicu" );
	deepEqual( Stem("sicuerezza"), "sicuerezz" );
	deepEqual( Stem("sicura"), "sicur" );
	deepEqual( Stem("sicuramente"), "sicur" );
	deepEqual( Stem("sicure"), "sicur" );
	deepEqual( Stem("sicurezza"), "sicurezz" );
	deepEqual( Stem("sicuri"), "sicur" );
	deepEqual( Stem("sicuro"), "sicur" );
	deepEqual( Stem("sicurtà"), "sicurt" );
	deepEqual( Stem("sicurvita"), "sicurv" );
	deepEqual( Stem("sicuti"), "sic" );
	deepEqual( Stem("siderurgia"), "siderurg" );
	deepEqual( Stem("siderurgica"), "siderurg" );
	deepEqual( Stem("sidney"), "sidney" );
	deepEqual( Stem("sidrome"), "sidrom" );
	deepEqual( Stem("siede"), "sied" );
	deepEqual( Stem("siele"), "siel" );
	deepEqual( Stem("siena"), "sien" );
	deepEqual( Stem("sieno"), "sien" );
	deepEqual( Stem("siepe"), "siep" );
	deepEqual( Stem("siepi"), "siep" );
	deepEqual( Stem("sierra"), "sierr" );
	deepEqual( Stem("siés"), "siès" );
	deepEqual( Stem("siete"), "siet" );
	deepEqual( Stem("siffatta"), "siffatt" );
	deepEqual( Stem("sifir"), "sif" );
	deepEqual( Stem("sig"), "sig" );
	deepEqual( Stem("sigarette"), "sigarett" );
	deepEqual( Stem("sigillati"), "sigill" );
	deepEqual( Stem("sigillava"), "sigill" );
	deepEqual( Stem("sigilli"), "sigill" );
	deepEqual( Stem("siglando"), "sigl" );
	deepEqual( Stem("siglata"), "sigl" );
	deepEqual( Stem("siglati"), "sigl" );
	deepEqual( Stem("siglato"), "sigl" );
	deepEqual( Stem("significa"), "signif" );
	deepEqual( Stem("significando"), "signific" );
	deepEqual( Stem("significano"), "signific" );
	deepEqual( Stem("significante"), "signific" );
	deepEqual( Stem("significar"), "signific" );
	deepEqual( Stem("significare"), "signific" );
	deepEqual( Stem("significasse"), "signific" );
	deepEqual( Stem("significassero"), "signific" );
	deepEqual( Stem("significativa"), "signif" );
	deepEqual( Stem("significativamente"), "signific" );
	deepEqual( Stem("significativi"), "signif" );
	deepEqual( Stem("significativo"), "signif" );
	deepEqual( Stem("significato"), "signific" );
	deepEqual( Stem("significava"), "signific" );
	deepEqual( Stem("significavano"), "signific" );
	deepEqual( Stem("significazione"), "signif" );
	deepEqual( Stem("significhi"), "signif" );
	deepEqual( Stem("signor"), "signor" );
	deepEqual( Stem("signora"), "signor" );
	deepEqual( Stem("signore"), "signor" );
	deepEqual( Stem("signorelli"), "signorell" );
	deepEqual( Stem("signorello"), "signorell" );
	deepEqual( Stem("signori"), "signor" );
	deepEqual( Stem("signoria"), "signor" );
	deepEqual( Stem("signorile"), "signoril" );
	deepEqual( Stem("signorili"), "signoril" );
	deepEqual( Stem("signorina"), "signorin" );
	deepEqual( Stem("signorini"), "signorin" );
	deepEqual( Stem("signorino"), "signorin" );
	deepEqual( Stem("signorona"), "signoron" );
	deepEqual( Stem("signoroni"), "signoron" );
	deepEqual( Stem("sigonella"), "sigonell" );
	deepEqual( Stem("sigrid"), "sigrid" );
	deepEqual( Stem("sii"), "sii" );
	deepEqual( Stem("sij"), "sij" );
	deepEqual( Stem("sijno"), "sijn" );
	deepEqual( Stem("sil"), "sil" );
	deepEqual( Stem("silajdzic"), "silajdzic" );
	deepEqual( Stem("silajzdic"), "silajzdic" );
	deepEqual( Stem("silenzi"), "silenz" );
	deepEqual( Stem("silenzio"), "silenz" );
	deepEqual( Stem("silenziosa"), "silenz" );
	deepEqual( Stem("silenziosi"), "silenz" );
	deepEqual( Stem("silenzioso"), "silenz" );
	deepEqual( Stem("siljdzic"), "siljdzic" );
	deepEqual( Stem("sillaba"), "sillab" );
	deepEqual( Stem("sillabe"), "sillab" );
	deepEqual( Stem("sillogismo"), "sillog" );
	deepEqual( Stem("sils"), "sils" );
	deepEqual( Stem("silvan"), "silvan" );
	deepEqual( Stem("silvano"), "silv" );
	deepEqual( Stem("silvestro"), "silvestr" );
	deepEqual( Stem("silvetri"), "silvetr" );
	deepEqual( Stem("silvi"), "silv" );
	deepEqual( Stem("silvia"), "silv" );
	deepEqual( Stem("silvio"), "silv" );
	deepEqual( Stem("simbionte"), "simbiont" );
	deepEqual( Stem("simboli"), "simbol" );
	deepEqual( Stem("simbolica"), "simbol" );
	deepEqual( Stem("simbolicamente"), "simbol" );
	deepEqual( Stem("simbolici"), "simbol" );
	deepEqual( Stem("simbolo"), "simbol" );
	deepEqual( Stem("simi"), "sim" );
	deepEqual( Stem("simil"), "simil" );
	deepEqual( Stem("simile"), "simil" );
	deepEqual( Stem("simili"), "simil" );
	deepEqual( Stem("similitudine"), "similitudin" );
	deepEqual( Stem("similitudini"), "similitudin" );
	deepEqual( Stem("similmente"), "simil" );
	deepEqual( Stem("simint"), "simint" );
	deepEqual( Stem("simmetria"), "simmetr" );
	deepEqual( Stem("simmetrica"), "simmetr" );
	deepEqual( Stem("simod"), "simod" );
	deepEqual( Stem("simon"), "simon" );
	deepEqual( Stem("simona"), "simon" );
	deepEqual( Stem("simone"), "simon" );
	deepEqual( Stem("simonetta"), "simonett" );
	deepEqual( Stem("simoni"), "simon" );
	deepEqual( Stem("simpatia"), "simpat" );
	deepEqual( Stem("simpatie"), "simpat" );
	deepEqual( Stem("simpson"), "simpson" );
	deepEqual( Stem("simulando"), "simul" );
	deepEqual( Stem("simulazione"), "simul" );
	deepEqual( Stem("simutenkov"), "simutenkov" );
	deepEqual( Stem("sin"), "sin" );
	deepEqual( Stem("sinatur"), "sinatur" );
	deepEqual( Stem("sincera"), "sincer" );
	deepEqual( Stem("sinceramente"), "sincer" );
	deepEqual( Stem("sincerarmi"), "sincer" );
	deepEqual( Stem("sincerarsi"), "sincer" );
	deepEqual( Stem("sincerato"), "sincer" );
	deepEqual( Stem("sincerità"), "sincer" );
	deepEqual( Stem("sincero"), "sincer" );
	deepEqual( Stem("sindacale"), "sindacal" );
	deepEqual( Stem("sindacali"), "sindacal" );
	deepEqual( Stem("sindacalista"), "sindacal" );
	deepEqual( Stem("sindacalisti"), "sindacal" );
	deepEqual( Stem("sindacati"), "sindac" );
	deepEqual( Stem("sindacato"), "sindac" );
	deepEqual( Stem("sindaci"), "sindac" );
	deepEqual( Stem("sindaco"), "sindac" );
	deepEqual( Stem("sindrome"), "sindrom" );
	deepEqual( Stem("sinergie"), "sinerg" );
	deepEqual( Stem("singapore"), "singapor" );
	deepEqual( Stem("singh"), "sing" );
	deepEqual( Stem("singhiozzando"), "singhiozz" );
	deepEqual( Stem("singhiozzare"), "singhiozz" );
	deepEqual( Stem("singhiozzi"), "singhiozz" );
	deepEqual( Stem("singhiozzìo"), "singhiozzì" );
	deepEqual( Stem("single"), "singl" );
	deepEqual( Stem("singola"), "singol" );
	deepEqual( Stem("singolar"), "singol" );
	deepEqual( Stem("singolare"), "singol" );
	deepEqual( Stem("singolari"), "singolar" );
	deepEqual( Stem("singolarità"), "singolar" );
	deepEqual( Stem("singolarmente"), "singolar" );
	deepEqual( Stem("singole"), "singol" );
	deepEqual( Stem("singoli"), "singol" );
	deepEqual( Stem("singolo"), "singol" );
	deepEqual( Stem("singrai"), "singra" );
	deepEqual( Stem("sinigaglia"), "sinigagl" );
	deepEqual( Stem("sinistra"), "sinistr" );
	deepEqual( Stem("sinistrà"), "sinistr" );
	deepEqual( Stem("sinistre"), "sinistr" );
	deepEqual( Stem("sinistri"), "sinistr" );
	deepEqual( Stem("sinistro"), "sinistr" );
	deepEqual( Stem("sinistrosità"), "sinistros" );
	deepEqual( Stem("siniustra"), "siniustr" );
	deepEqual( Stem("sino"), "sin" );
	deepEqual( Stem("sinodale"), "sinodal" );
	deepEqual( Stem("sinonimo"), "sinonim" );
	deepEqual( Stem("sinora"), "sinor" );
	deepEqual( Stem("sinotrans"), "sinotrans" );
	deepEqual( Stem("sint"), "sint" );
	deepEqual( Stem("sintesi"), "sintes" );
	deepEqual( Stem("sintetizza"), "sintetizz" );
	deepEqual( Stem("sintetizzati"), "sintetizz" );
	deepEqual( Stem("sintetizzato"), "sintetizz" );
	deepEqual( Stem("sintomi"), "sintom" );
	deepEqual( Stem("sintomo"), "sintom" );
	deepEqual( Stem("sintonia"), "sinton" );
	deepEqual( Stem("sipario"), "sipar" );
	deepEqual( Stem("sir"), "sir" );
	deepEqual( Stem("sirac"), "sirac" );
	deepEqual( Stem("siracus"), "siracus" );
	deepEqual( Stem("siracusa"), "siracus" );
	deepEqual( Stem("sirene"), "siren" );
	deepEqual( Stem("siria"), "sir" );
	deepEqual( Stem("siro"), "sir" );
	deepEqual( Stem("sirone"), "siron" );
	deepEqual( Stem("sirti"), "sirt" );
	deepEqual( Stem("sis"), "sis" );
	deepEqual( Stem("sisa"), "sis" );
	deepEqual( Stem("sisde"), "sisd" );
	deepEqual( Stem("sisley"), "sisley" );
	deepEqual( Stem("sisma"), "sism" );
	deepEqual( Stem("sismica"), "sismic" );
	deepEqual( Stem("sismici"), "sismic" );
	deepEqual( Stem("sismologica"), "sismolog" );
	deepEqual( Stem("sisport"), "sisport" );
	deepEqual( Stem("sistema"), "sistem" );
	deepEqual( Stem("sistemà"), "sistem" );
	deepEqual( Stem("sistemarle"), "sistem" );
	deepEqual( Stem("sistemati"), "sistem" );
	deepEqual( Stem("sistemazione"), "sistem" );
	deepEqual( Stem("sistemi"), "sistem" );
	deepEqual( Stem("sistina"), "sistin" );
	deepEqual( Stem("sistma"), "sistm" );
	deepEqual( Stem("sisto"), "sist" );
	deepEqual( Stem("sitemi"), "sitem" );
	deepEqual( Stem("siti"), "sit" );
	deepEqual( Stem("sito"), "sit" );
	deepEqual( Stem("sitto"), "sitt" );
	deepEqual( Stem("situa"), "situ" );
	deepEqual( Stem("situarsi"), "situ" );
	deepEqual( Stem("situata"), "situ" );
	deepEqual( Stem("situation"), "situation" );
	deepEqual( Stem("situato"), "situ" );
	deepEqual( Stem("situazione"), "situazion" );
	deepEqual( Stem("situazionè"), "situazion" );
	deepEqual( Stem("situazioni"), "situazion" );
	deepEqual( Stem("situerebbe"), "situ" );
	deepEqual( Stem("siulp"), "siulp" );
	deepEqual( Stem("siviglia"), "sivigl" );
	deepEqual( Stem("sixto"), "sixt" );
	deepEqual( Stem("ski"), "ski" );
	deepEqual( Stem("skin"), "skin" );
	deepEqual( Stem("skinhead"), "skinhead" );
	deepEqual( Stem("skofic"), "skofic" );
	deepEqual( Stem("skuhravy"), "skuhravy" );
	deepEqual( Stem("sl"), "sl" );
	deepEqual( Stem("sla"), "sla" );
	deepEqual( Stem("slalom"), "slalom" );
	deepEqual( Stem("slam"), "slam" );
	deepEqual( Stem("slancia"), "slanc" );
	deepEqual( Stem("slanciano"), "slanc" );
	deepEqual( Stem("slanciarono"), "slanc" );
	deepEqual( Stem("slanciarsi"), "slanc" );
	deepEqual( Stem("slancio"), "slanc" );
	deepEqual( Stem("slanciò"), "slanc" );
	deepEqual( Stem("sledog"), "sledog" );
	deepEqual( Stem("slegati"), "sleg" );
	deepEqual( Stem("slegò"), "sleg" );
	deepEqual( Stem("slip"), "slip" );
	deepEqual( Stem("slittare"), "slitt" );
	deepEqual( Stem("slitterebbe"), "slitt" );
	deepEqual( Stem("slogan"), "slogan" );
	deepEqual( Stem("slovacchia"), "slovacc" );
	deepEqual( Stem("slovenia"), "sloven" );
	deepEqual( Stem("sloveno"), "sloven" );
	deepEqual( Stem("sly"), "sly" );
	deepEqual( Stem("smalia"), "smal" );
	deepEqual( Stem("smallville"), "smallvill" );
	deepEqual( Stem("smaltir"), "smalt" );
	deepEqual( Stem("smaltire"), "smalt" );
	deepEqual( Stem("smaltita"), "smalt" );
	deepEqual( Stem("smanacciando"), "smanacc" );
	deepEqual( Stem("smanacciata"), "smanacc" );
	deepEqual( Stem("smania"), "sman" );
	deepEqual( Stem("smanie"), "sman" );
	deepEqual( Stem("smaniosi"), "smanios" );
	deepEqual( Stem("smanioso"), "smanios" );
	deepEqual( Stem("smantellamento"), "smantell" );
	deepEqual( Stem("smantellare"), "smantell" );
	deepEqual( Stem("smantellato"), "smantell" );
	deepEqual( Stem("smarcato"), "smarc" );
	deepEqual( Stem("smarrimenti"), "smarr" );
	deepEqual( Stem("smarrimento"), "smarr" );
	deepEqual( Stem("smarrire"), "smarr" );
	deepEqual( Stem("smarrita"), "smarr" );
	deepEqual( Stem("smarriti"), "smarr" );
	deepEqual( Stem("smarrito"), "smarr" );
	deepEqual( Stem("smarriva"), "smarr" );
	deepEqual( Stem("sme"), "sme" );
	deepEqual( Stem("smembramento"), "smembr" );
	deepEqual( Stem("smembrare"), "smembr" );
	deepEqual( Stem("smembrato"), "smembr" );
	deepEqual( Stem("smentendo"), "sment" );
	deepEqual( Stem("smentire"), "sment" );
	deepEqual( Stem("smentisce"), "sment" );
	deepEqual( Stem("smentiscono"), "sment" );
	deepEqual( Stem("smentita"), "sment" );
	deepEqual( Stem("smentito"), "sment" );
	deepEqual( Stem("smentiva"), "sment" );
	deepEqual( Stem("smeralda"), "smerald" );
	deepEqual( Stem("smesse"), "smess" );
	deepEqual( Stem("smette"), "smett" );
	deepEqual( Stem("smetter"), "smetter" );
	deepEqual( Stem("smettere"), "smett" );
	deepEqual( Stem("smettessero"), "smett" );
	deepEqual( Stem("smettete"), "smett" );
	deepEqual( Stem("smetton"), "smetton" );
	deepEqual( Stem("smi"), "smi" );
	deepEqual( Stem("smile"), "smil" );
	deepEqual( Stem("smistamento"), "smist" );
	deepEqual( Stem("smisurato"), "smisur" );
	deepEqual( Stem("smith"), "smith" );
	deepEqual( Stem("smits"), "smits" );
	deepEqual( Stem("smm"), "smm" );
	deepEqual( Stem("smonta"), "smont" );
	deepEqual( Stem("smontando"), "smont" );
	deepEqual( Stem("smontarlo"), "smont" );
	deepEqual( Stem("smontarono"), "smont" );
	deepEqual( Stem("smontata"), "smont" );
	deepEqual( Stem("smontati"), "smont" );
	deepEqual( Stem("smontato"), "smont" );
	deepEqual( Stem("smonterebbe"), "smont" );
	deepEqual( Stem("smontò"), "smont" );
	deepEqual( Stem("smorbare"), "smorb" );
	deepEqual( Stem("smorto"), "smort" );
	deepEqual( Stem("smorza"), "smorz" );
	deepEqual( Stem("smorzare"), "smorz" );
	deepEqual( Stem("smossa"), "smoss" );
	deepEqual( Stem("smosso"), "smoss" );
	deepEqual( Stem("smovere"), "smov" );
	deepEqual( Stem("smoverlo"), "smov" );
	deepEqual( Stem("smozzicata"), "smozzic" );
	deepEqual( Stem("smozzicate"), "smozzic" );
	deepEqual( Stem("smozzicato"), "smozzic" );
	deepEqual( Stem("smunta"), "smunt" );
	deepEqual( Stem("smunti"), "smunt" );
	deepEqual( Stem("smunto"), "smunt" );
	deepEqual( Stem("smurare"), "smur" );
	deepEqual( Stem("smuravano"), "smur" );
	deepEqual( Stem("snam"), "snam" );
	deepEqual( Stem("snaturare"), "snatur" );
	deepEqual( Stem("sneh"), "sneh" );
	deepEqual( Stem("snelle"), "snell" );
	deepEqual( Stem("snellisca"), "snell" );
	deepEqual( Stem("snia"), "sni" );
	deepEqual( Stem("snidata"), "snid" );
	deepEqual( Stem("snob"), "snob" );
	deepEqual( Stem("so"), "so" );
	deepEqual( Stem("soastenuto"), "soasten" );
	deepEqual( Stem("soave"), "soav" );
	deepEqual( Stem("soavemente"), "soavement" );
	deepEqual( Stem("soavi"), "soav" );
	deepEqual( Stem("soavissimo"), "soavissim" );
	deepEqual( Stem("soavità"), "soavit" );
	deepEqual( Stem("sobborgo"), "sobborg" );
	deepEqual( Stem("soc"), "soc" );
	deepEqual( Stem("socchiude"), "socchiud" );
	deepEqual( Stem("socchiusa"), "socchius" );
	deepEqual( Stem("socchiuso"), "socchius" );
	deepEqual( Stem("soccombente"), "soccombent" );
	deepEqual( Stem("soccombere"), "soccomb" );
	deepEqual( Stem("soccorrer"), "soccorrer" );
	deepEqual( Stem("soccorrere"), "soccorr" );
	deepEqual( Stem("soccorrerlo"), "soccorr" );
	deepEqual( Stem("soccorrersi"), "soccorr" );
	deepEqual( Stem("soccorresse"), "soccorress" );
	deepEqual( Stem("soccorretemi"), "soccorretem" );
	deepEqual( Stem("soccorreva"), "soccorr" );
	deepEqual( Stem("soccorrevoli"), "soccorrevol" );
	deepEqual( Stem("soccorritori"), "soccorritor" );
	deepEqual( Stem("soccorsa"), "soccors" );
	deepEqual( Stem("soccorsi"), "soccors" );
	deepEqual( Stem("soccorso"), "soccors" );
	deepEqual( Stem("sochaux"), "sochaux" );
	deepEqual( Stem("soci"), "soc" );
	deepEqual( Stem("socialdemocratici"), "socialdemocrat" );
	deepEqual( Stem("sociale"), "social" );
	deepEqual( Stem("sociali"), "social" );
	deepEqual( Stem("socialismo"), "social" );
	deepEqual( Stem("socialista"), "social" );
	deepEqual( Stem("socialistà"), "social" );
	deepEqual( Stem("socialisti"), "social" );
	deepEqual( Stem("socialità"), "social" );
	deepEqual( Stem("socializzazione"), "socializz" );
	deepEqual( Stem("socialmente"), "social" );
	deepEqual( Stem("societa"), "societ" );
	deepEqual( Stem("società"), "societ" );
	deepEqual( Stem("societario"), "societar" );
	deepEqual( Stem("society"), "society" );
	deepEqual( Stem("socievole"), "socievol" );
	deepEqual( Stem("socio"), "soc" );
	deepEqual( Stem("socioeconomiche"), "socioeconom" );
	deepEqual( Stem("sociologo"), "sociolog" );
	deepEqual( Stem("soda"), "sod" );
	deepEqual( Stem("sodaglia"), "sodagl" );
	deepEqual( Stem("sodalizio"), "sodaliz" );
	deepEqual( Stem("sodano"), "sod" );
	deepEqual( Stem("soddisfacente"), "soddisfacent" );
	deepEqual( Stem("soddisfare"), "soddisf" );
	deepEqual( Stem("soddisfarla"), "soddisf" );
	deepEqual( Stem("soddisfarli"), "soddisf" );
	deepEqual( Stem("soddisfarlo"), "soddisf" );
	deepEqual( Stem("soddisfatta"), "soddisfatt" );
	deepEqual( Stem("soddisfatti"), "soddisfatt" );
	deepEqual( Stem("soddisfattissimo"), "soddisfattissim" );
	deepEqual( Stem("soddisfatto"), "soddisfatt" );
	deepEqual( Stem("soddisfazione"), "soddisf" );
	deepEqual( Stem("soddisfazioni"), "soddisf" );
	deepEqual( Stem("soddisfece"), "soddisfec" );
	deepEqual( Stem("soddisfi"), "soddisf" );
	deepEqual( Stem("sodetta"), "sodett" );
	deepEqual( Stem("sodo"), "sod" );
	deepEqual( Stem("sofferente"), "sofferent" );
	deepEqual( Stem("sofferenza"), "sofferent" );
	deepEqual( Stem("sofferenze"), "sofferent" );
	deepEqual( Stem("sofferma"), "sofferm" );
	deepEqual( Stem("soffermandosi"), "sofferm" );
	deepEqual( Stem("soffermasse"), "sofferm" );
	deepEqual( Stem("soffermata"), "sofferm" );
	deepEqual( Stem("soffermato"), "sofferm" );
	deepEqual( Stem("soffermava"), "sofferm" );
	deepEqual( Stem("sofferta"), "soffert" );
	deepEqual( Stem("sofferte"), "soffert" );
	deepEqual( Stem("sofferti"), "soff" );
	deepEqual( Stem("sofferto"), "soffert" );
	deepEqual( Stem("soffi"), "soff" );
	deepEqual( Stem("soffian"), "soffian" );
	deepEqual( Stem("soffiando"), "soff" );
	deepEqual( Stem("soffiare"), "soff" );
	deepEqual( Stem("soffici"), "soffic" );
	deepEqual( Stem("soffio"), "soff" );
	deepEqual( Stem("soffiò"), "soff" );
	deepEqual( Stem("soffitta"), "soffitt" );
	deepEqual( Stem("soffocare"), "soffoc" );
	deepEqual( Stem("soffogargli"), "soffog" );
	deepEqual( Stem("soffogarglielo"), "soffog" );
	deepEqual( Stem("soffogarla"), "soffog" );
	deepEqual( Stem("soffogarlo"), "soffog" );
	deepEqual( Stem("soffogata"), "soffog" );
	deepEqual( Stem("soffogati"), "soffog" );
	deepEqual( Stem("soffogato"), "soffog" );
	deepEqual( Stem("soffogava"), "soffog" );
	deepEqual( Stem("soffogavano"), "soffog" );
	deepEqual( Stem("soffre"), "soffr" );
	deepEqual( Stem("soffrir"), "soffr" );
	deepEqual( Stem("soffrire"), "soffr" );
	deepEqual( Stem("soffriva"), "soffr" );
	deepEqual( Stem("soffrivano"), "soffr" );
	deepEqual( Stem("soffrono"), "soffr" );
	deepEqual( Stem("soffusa"), "soffus" );
	deepEqual( Stem("sofia"), "sof" );
	deepEqual( Stem("sofibond"), "sofibond" );
	deepEqual( Stem("sofisticate"), "sofistic" );
	deepEqual( Stem("sofisticati"), "sofistic" );
	deepEqual( Stem("sofisticatissime"), "sofisticatissim" );
	deepEqual( Stem("software"), "softw" );
	deepEqual( Stem("sogeafit"), "sogeafit" );
	deepEqual( Stem("sogefi"), "sogef" );
	deepEqual( Stem("sogesfit"), "sogesfit" );
	deepEqual( Stem("soggetta"), "soggett" );
	deepEqual( Stem("soggette"), "soggett" );
	deepEqual( Stem("soggetti"), "soggett" );
	deepEqual( Stem("soggettività"), "soggett" );
	deepEqual( Stem("soggetto"), "soggett" );
	deepEqual( Stem("sogghignando"), "sogghign" );
	deepEqual( Stem("sogghigni"), "sogghign" );
	deepEqual( Stem("sogghigno"), "sogghign" );
	deepEqual( Stem("soggiogata"), "soggiog" );
	deepEqual( Stem("soggiogate"), "soggiog" );
	deepEqual( Stem("soggiogato"), "soggiog" );
	deepEqual( Stem("soggiogava"), "soggiog" );
	deepEqual( Stem("soggiornato"), "soggiorn" );
	deepEqual( Stem("soggiorni"), "soggiorn" );
	deepEqual( Stem("soggiorno"), "soggiorn" );
	deepEqual( Stem("soggiunge"), "soggiung" );
	deepEqual( Stem("soggiunger"), "soggiunger" );
	deepEqual( Stem("soggiungeva"), "soggiung" );
	deepEqual( Stem("soggiunse"), "soggiuns" );
	deepEqual( Stem("soggolo"), "soggol" );
	deepEqual( Stem("sogguardata"), "sogguard" );
	deepEqual( Stem("sogguardava"), "sogguard" );
	deepEqual( Stem("soglia"), "sogl" );
	deepEqual( Stem("sogliano"), "sogl" );
	deepEqual( Stem("soglion"), "soglion" );
	deepEqual( Stem("sognare"), "sogn" );
	deepEqual( Stem("sognassi"), "sogn" );
	deepEqual( Stem("sognate"), "sogn" );
	deepEqual( Stem("sognato"), "sogn" );
	deepEqual( Stem("sognava"), "sogn" );
	deepEqual( Stem("sogni"), "sogn" );
	deepEqual( Stem("sogno"), "sogn" );
	deepEqual( Stem("sognò"), "sogn" );
	deepEqual( Stem("soir"), "soir" );
	deepEqual( Stem("sol"), "sol" );
	deepEqual( Stem("sola"), "sol" );
	deepEqual( Stem("solamente"), "sol" );
	deepEqual( Stem("solange"), "solang" );
	deepEqual( Stem("solare"), "sol" );
	deepEqual( Stem("solazzi"), "solazz" );
	deepEqual( Stem("solbiatese"), "solbiates" );
	deepEqual( Stem("solcata"), "solc" );
	deepEqual( Stem("solco"), "solc" );
	deepEqual( Stem("soldatacci"), "soldatacc" );
	deepEqual( Stem("soldatesca"), "soldatesc" );
	deepEqual( Stem("soldati"), "sold" );
	deepEqual( Stem("soldato"), "sold" );
	deepEqual( Stem("soldi"), "sold" );
	deepEqual( Stem("soldo"), "sold" );
	deepEqual( Stem("sole"), "sol" );
	deepEqual( Stem("solecismi"), "solec" );
	deepEqual( Stem("solenne"), "solenn" );
	deepEqual( Stem("solennemente"), "solenn" );
	deepEqual( Stem("solenni"), "solenn" );
	deepEqual( Stem("solennità"), "solenn" );
	deepEqual( Stem("soleva"), "sol" );
	deepEqual( Stem("solevano"), "sol" );
	deepEqual( Stem("soli"), "sol" );
	deepEqual( Stem("solidali"), "solidal" );
	deepEqual( Stem("solidarieta"), "solidariet" );
	deepEqual( Stem("solidarietà"), "solidariet" );
	deepEqual( Stem("solidarismo"), "solidar" );
	deepEqual( Stem("solide"), "solid" );
	deepEqual( Stem("solidificato"), "solidific" );
	deepEqual( Stem("solido"), "solid" );
	deepEqual( Stem("solimeno"), "solimen" );
	deepEqual( Stem("solimoes"), "solimoes" );
	deepEqual( Stem("solinas"), "solinas" );
	deepEqual( Stem("solistà"), "solist" );
	deepEqual( Stem("solisti"), "solist" );
	deepEqual( Stem("solita"), "sol" );
	deepEqual( Stem("solitamente"), "solit" );
	deepEqual( Stem("solitari"), "solitar" );
	deepEqual( Stem("solitaria"), "solitar" );
	deepEqual( Stem("solitario"), "solitar" );
	deepEqual( Stem("solite"), "sol" );
	deepEqual( Stem("soliti"), "sol" );
	deepEqual( Stem("solito"), "sol" );
	deepEqual( Stem("solitudine"), "solitudin" );
	deepEqual( Stem("sollecita"), "sollec" );
	deepEqual( Stem("sollecitandoli"), "sollecit" );
	deepEqual( Stem("sollecitare"), "sollecit" );
	deepEqual( Stem("sollecitarono"), "sollecit" );
	deepEqual( Stem("sollecitata"), "sollecit" );
	deepEqual( Stem("sollecitato"), "sollecit" );
	deepEqual( Stem("sollecitatori"), "sollecit" );
	deepEqual( Stem("sollecitava"), "sollecit" );
	deepEqual( Stem("sollecitazione"), "sollecit" );
	deepEqual( Stem("sollecitazioni"), "sollecit" );
	deepEqual( Stem("sollecito"), "sollec" );
	deepEqual( Stem("sollecitudine"), "sollecitudin" );
	deepEqual( Stem("solleuarsi"), "solleu" );
	deepEqual( Stem("solleva"), "soll" );
	deepEqual( Stem("sollevando"), "sollev" );
	deepEqual( Stem("sollevano"), "soll" );
	deepEqual( Stem("sollevar"), "sollev" );
	deepEqual( Stem("sollevare"), "sollev" );
	deepEqual( Stem("sollevarle"), "sollev" );
	deepEqual( Stem("sollevarvi"), "sollev" );
	deepEqual( Stem("sollevata"), "sollev" );
	deepEqual( Stem("sollevate"), "soll" );
	deepEqual( Stem("sollevati"), "sollev" );
	deepEqual( Stem("sollevato"), "sollev" );
	deepEqual( Stem("sollevava"), "sollev" );
	deepEqual( Stem("sollevavano"), "sollev" );
	deepEqual( Stem("sollevazione"), "sollev" );
	deepEqual( Stem("sollevazioni"), "sollev" );
	deepEqual( Stem("solleverà"), "sollev" );
	deepEqual( Stem("sollevò"), "sollev" );
	deepEqual( Stem("sollievo"), "soll" );
	deepEqual( Stem("solo"), "sol" );
	deepEqual( Stem("soltanto"), "soltant" );
	deepEqual( Stem("soltato"), "solt" );
	deepEqual( Stem("soluzione"), "soluzion" );
	deepEqual( Stem("soluzioni"), "soluzion" );
	deepEqual( Stem("solvibilità"), "solvibil" );
	deepEqual( Stem("somaglia"), "somagl" );
	deepEqual( Stem("somal"), "somal" );
	deepEqual( Stem("somala"), "somal" );
	deepEqual( Stem("somale"), "somal" );
	deepEqual( Stem("somalfruit"), "somalfruit" );
	deepEqual( Stem("somali"), "somal" );
	deepEqual( Stem("somalia"), "somal" );
	deepEqual( Stem("somalo"), "somal" );
	deepEqual( Stem("somaschi"), "somasc" );
	deepEqual( Stem("some"), "som" );
	deepEqual( Stem("somiglia"), "somigl" );
	deepEqual( Stem("somigliante"), "somigl" );
	deepEqual( Stem("somiglianti"), "somigl" );
	deepEqual( Stem("somigliantissimi"), "somigliantissim" );
	deepEqual( Stem("somiglianza"), "somigl" );
	deepEqual( Stem("somigliare"), "somigl" );
	deepEqual( Stem("somlia"), "soml" );
	deepEqual( Stem("somma"), "somm" );
	deepEqual( Stem("sommamente"), "somm" );
	deepEqual( Stem("sommando"), "somm" );
	deepEqual( Stem("sommari"), "sommar" );
	deepEqual( Stem("sommaria"), "sommar" );
	deepEqual( Stem("sommariamente"), "sommar" );
	deepEqual( Stem("sommario"), "sommar" );
	deepEqual( Stem("sommato"), "somm" );
	deepEqual( Stem("somme"), "somm" );
	deepEqual( Stem("sommersi"), "somm" );
	deepEqual( Stem("sommerso"), "sommers" );
	deepEqual( Stem("sommessa"), "sommess" );
	deepEqual( Stem("sommessamente"), "sommess" );
	deepEqual( Stem("sommesse"), "sommess" );
	deepEqual( Stem("sommesso"), "sommess" );
	deepEqual( Stem("sommi"), "somm" );
	deepEqual( Stem("somministra"), "somministr" );
	deepEqual( Stem("somministrarcene"), "somministr" );
	deepEqual( Stem("somministrare"), "somministr" );
	deepEqual( Stem("sommissione"), "sommission" );
	deepEqual( Stem("sommissioni"), "sommission" );
	deepEqual( Stem("sommità"), "sommit" );
	deepEqual( Stem("sommossa"), "sommoss" );
	deepEqual( Stem("son"), "son" );
	deepEqual( Stem("sonare"), "son" );
	deepEqual( Stem("sonata"), "son" );
	deepEqual( Stem("sonato"), "son" );
	deepEqual( Stem("sonator"), "sonator" );
	deepEqual( Stem("sonava"), "son" );
	deepEqual( Stem("sonda"), "sond" );
	deepEqual( Stem("sondaggi"), "sondagg" );
	deepEqual( Stem("sondaggio"), "sondagg" );
	deepEqual( Stem("sondalo"), "sondal" );
	deepEqual( Stem("sondel"), "sondel" );
	deepEqual( Stem("sondrio"), "sondr" );
	deepEqual( Stem("sonerà"), "son" );
	deepEqual( Stem("sonetti"), "sonett" );
	deepEqual( Stem("sonetto"), "sonett" );
	deepEqual( Stem("sonia"), "son" );
	deepEqual( Stem("sonni"), "sonn" );
	deepEqual( Stem("sonnifero"), "sonnifer" );
	deepEqual( Stem("sonno"), "sonn" );
	deepEqual( Stem("sonnolenta"), "sonnolent" );
	deepEqual( Stem("sonnolento"), "sonnolent" );
	deepEqual( Stem("sonntag"), "sonntag" );
	deepEqual( Stem("sono"), "son" );
	deepEqual( Stem("sonò"), "son" );
	deepEqual( Stem("sonora"), "sonor" );
	deepEqual( Stem("sonoramente"), "sonor" );
	deepEqual( Stem("sonore"), "sonor" );
	deepEqual( Stem("sonori"), "sonor" );
	deepEqual( Stem("sonorità"), "sonor" );
	deepEqual( Stem("sonoro"), "sonor" );
	deepEqual( Stem("sopaf"), "sopaf" );
	deepEqual( Stem("sopire"), "sop" );
	deepEqual( Stem("sopita"), "sop" );
	deepEqual( Stem("sopiti"), "sop" );
	deepEqual( Stem("sopito"), "sop" );
	deepEqual( Stem("sopiva"), "sop" );
	deepEqual( Stem("soppiatto"), "soppiatt" );
	deepEqual( Stem("sopporta"), "sopport" );
	deepEqual( Stem("sopportabile"), "sopport" );
	deepEqual( Stem("sopportare"), "sopport" );
	deepEqual( Stem("sopportatela"), "sopportatel" );
	deepEqual( Stem("sopportato"), "sopport" );
	deepEqual( Stem("sopportava"), "sopport" );
	deepEqual( Stem("sopportavano"), "sopport" );
	deepEqual( Stem("sopportiamo"), "sopport" );
	deepEqual( Stem("soppressa"), "soppress" );
	deepEqual( Stem("soppressione"), "soppression" );
	deepEqual( Stem("soppresso"), "soppress" );
	deepEqual( Stem("sopprimendo"), "sopprim" );
	deepEqual( Stem("sopprimere"), "sopprim" );
	deepEqual( Stem("sopra"), "sopr" );
	deepEqual( Stem("soprabbondanti"), "soprabbond" );
	deepEqual( Stem("sopraccigli"), "sopraccigl" );
	deepEqual( Stem("sopracciglio"), "sopraccigl" );
	deepEqual( Stem("sopraccitata"), "sopraccit" );
	deepEqual( Stem("sopraccitato"), "sopraccit" );
	deepEqual( Stem("sopraddetti"), "sopraddett" );
	deepEqual( Stem("sopraffatta"), "sopraffatt" );
	deepEqual( Stem("sopraffatte"), "sopraffatt" );
	deepEqual( Stem("sopraffatti"), "sopraffatt" );
	deepEqual( Stem("sopraffatto"), "sopraffatt" );
	deepEqual( Stem("sopraffino"), "sopraffin" );
	deepEqual( Stem("sopraggiungere"), "sopraggiung" );
	deepEqual( Stem("sopraggiungevano"), "sopraggiung" );
	deepEqual( Stem("sopraggiunse"), "sopraggiuns" );
	deepEqual( Stem("sopraggiunte"), "sopraggiunt" );
	deepEqual( Stem("sopralluogo"), "sopralluog" );
	deepEqual( Stem("soprammercato"), "soprammerc" );
	deepEqual( Stem("soprannome"), "soprannom" );
	deepEqual( Stem("soprannominato"), "soprannomin" );
	deepEqual( Stem("soprappensiero"), "soprappensier" );
	deepEqual( Stem("soprarrivati"), "soprarriv" );
	deepEqual( Stem("soprarrivato"), "soprarriv" );
	deepEqual( Stem("soprassalto"), "soprassalt" );
	deepEqual( Stem("soprattutto"), "soprattutt" );
	deepEqual( Stem("sopravanzare"), "sopravanz" );
	deepEqual( Stem("sopravanzava"), "sopravanz" );
	deepEqual( Stem("sopravvalutata"), "sopravvalut" );
	deepEqual( Stem("sopravvento"), "sopravvent" );
	deepEqual( Stem("sopravvenuto"), "sopravven" );
	deepEqual( Stem("sopravvissuta"), "sopravviss" );
	deepEqual( Stem("sopravvissuti"), "sopravviss" );
	deepEqual( Stem("sopravvissuto"), "sopravviss" );
	deepEqual( Stem("sopravvivenza"), "sopravvivent" );
	deepEqual( Stem("sopravvivere"), "sopravviv" );
	deepEqual( Stem("sopravvivono"), "sopravviv" );
	deepEqual( Stem("soprintendenti"), "soprintendent" );
	deepEqual( Stem("soprintendenza"), "soprintendent" );
	deepEqual( Stem("soprintendenze"), "soprintendent" );
	deepEqual( Stem("soprintendere"), "soprintend" );
	deepEqual( Stem("soprintendevano"), "soprintend" );
	deepEqual( Stem("soprusi"), "soprus" );
	deepEqual( Stem("sopruso"), "soprus" );
	deepEqual( Stem("soqquadro"), "soqquadr" );
	deepEqual( Stem("sor"), "sor" );
	deepEqual( Stem("sora"), "sor" );
	deepEqual( Stem("soranzo"), "soranz" );
	deepEqual( Stem("sorbello"), "sorbell" );
	deepEqual( Stem("sorbir"), "sorb" );
	deepEqual( Stem("sorda"), "sord" );
	deepEqual( Stem("sordamente"), "sord" );
	deepEqual( Stem("sordina"), "sordin" );
	deepEqual( Stem("sordo"), "sord" );
	deepEqual( Stem("sorella"), "sorell" );
	deepEqual( Stem("sorelle"), "sorell" );
	deepEqual( Stem("sorellina"), "sorellin" );
	deepEqual( Stem("sorge"), "sorg" );
	deepEqual( Stem("sorgente"), "sorgent" );
	deepEqual( Stem("sorgenti"), "sorgent" );
	deepEqual( Stem("sorger"), "sorger" );
	deepEqual( Stem("sorgere"), "sorg" );
	deepEqual( Stem("sorgerete"), "sorg" );
	deepEqual( Stem("sorgesse"), "sorgess" );
	deepEqual( Stem("sorgeva"), "sorg" );
	deepEqual( Stem("sorgevano"), "sorg" );
	deepEqual( Stem("sorgon"), "sorgon" );
	deepEqual( Stem("sorin"), "sorin" );
	deepEqual( Stem("sormontate"), "sormont" );
	deepEqual( Stem("soros"), "soros" );
	deepEqual( Stem("sorpassava"), "sorpass" );
	deepEqual( Stem("sorpasso"), "sorpass" );
	deepEqual( Stem("sorprende"), "sorpr" );
	deepEqual( Stem("sorprendendo"), "sorprend" );
	deepEqual( Stem("sorprender"), "sorprender" );
	deepEqual( Stem("sorprendere"), "sorprend" );
	deepEqual( Stem("sorprenderlo"), "sorprend" );
	deepEqual( Stem("sorprendermi"), "sorprend" );
	deepEqual( Stem("sorpresa"), "sorpres" );
	deepEqual( Stem("sorprese"), "sorpres" );
	deepEqual( Stem("sorpresi"), "sorpres" );
	deepEqual( Stem("sorpreso"), "sorpres" );
	deepEqual( Stem("sorreggendo"), "sorregg" );
	deepEqual( Stem("sorreggeva"), "sorregg" );
	deepEqual( Stem("sorretta"), "sorrett" );
	deepEqual( Stem("sorretto"), "sorrett" );
	deepEqual( Stem("sorridendo"), "sorrid" );
	deepEqual( Stem("sorridente"), "sorrident" );
	deepEqual( Stem("sorridenti"), "sorrident" );
	deepEqual( Stem("sorridere"), "sorrid" );
	deepEqual( Stem("sorrideva"), "sorrid" );
	deepEqual( Stem("sorridi"), "sorrid" );
	deepEqual( Stem("sorrise"), "sorris" );
	deepEqual( Stem("sorrisi"), "sorris" );
	deepEqual( Stem("sorriso"), "sorris" );
	deepEqual( Stem("sorsi"), "sors" );
	deepEqual( Stem("sorso"), "sors" );
	deepEqual( Stem("sorta"), "sort" );
	deepEqual( Stem("sorte"), "sort" );
	deepEqual( Stem("sorti"), "sort" );
	deepEqual( Stem("sortite"), "sort" );
	deepEqual( Stem("sortito"), "sort" );
	deepEqual( Stem("sorto"), "sort" );
	deepEqual( Stem("sorveglianza"), "sorvegl" );
	deepEqual( Stem("sorvegliare"), "sorvegl" );
	deepEqual( Stem("sorvegliato"), "sorvegl" );
	deepEqual( Stem("sorvegliava"), "sorvegl" );
	deepEqual( Stem("sorveglieranno"), "sorvegl" );
	deepEqual( Stem("sorvolato"), "sorvol" );
	deepEqual( Stem("sos"), "sos" );
	deepEqual( Stem("sosa"), "sos" );
	deepEqual( Stem("sosia"), "sos" );
	deepEqual( Stem("soskoviets"), "soskoviets" );
	deepEqual( Stem("sospende"), "sosp" );
	deepEqual( Stem("sospender"), "sospender" );
	deepEqual( Stem("sospendere"), "sospend" );
	deepEqual( Stem("sospendesse"), "sospendess" );
	deepEqual( Stem("sospendeva"), "sospend" );
	deepEqual( Stem("sospension"), "sospension" );
	deepEqual( Stem("sospensione"), "sospension" );
	deepEqual( Stem("sospensioni"), "sospension" );
	deepEqual( Stem("sospensiva"), "sospens" );
	deepEqual( Stem("sospesa"), "sospes" );
	deepEqual( Stem("sospese"), "sospes" );
	deepEqual( Stem("sospesero"), "sospeser" );
	deepEqual( Stem("sospesi"), "sospes" );
	deepEqual( Stem("sospeso"), "sospes" );
	deepEqual( Stem("sospetta"), "sospett" );
	deepEqual( Stem("sospettando"), "sospett" );
	deepEqual( Stem("sospettar"), "sospett" );
	deepEqual( Stem("sospettarci"), "sospett" );
	deepEqual( Stem("sospettare"), "sospett" );
	deepEqual( Stem("sospettate"), "sospett" );
	deepEqual( Stem("sospettava"), "sospett" );
	deepEqual( Stem("sospette"), "sospett" );
	deepEqual( Stem("sospetti"), "sospett" );
	deepEqual( Stem("sospettiamo"), "sospett" );
	deepEqual( Stem("sospetto"), "sospett" );
	deepEqual( Stem("sospettosa"), "sospett" );
	deepEqual( Stem("sospettosamente"), "sospett" );
	deepEqual( Stem("sospettosi"), "sospett" );
	deepEqual( Stem("sospettoso"), "sospett" );
	deepEqual( Stem("sospinse"), "sospins" );
	deepEqual( Stem("sospirando"), "sospir" );
	deepEqual( Stem("sospirar"), "sospir" );
	deepEqual( Stem("sospirare"), "sospir" );
	deepEqual( Stem("sospirata"), "sospir" );
	deepEqual( Stem("sospirato"), "sospir" );
	deepEqual( Stem("sospirava"), "sospir" );
	deepEqual( Stem("sospiri"), "sospir" );
	deepEqual( Stem("sospiro"), "sospir" );
	deepEqual( Stem("sospirò"), "sosp" );
	deepEqual( Stem("sosta"), "sost" );
	deepEqual( Stem("sostantivo"), "sostant" );
	deepEqual( Stem("sostanza"), "sostanz" );
	deepEqual( Stem("sostanze"), "sostanz" );
	deepEqual( Stem("sostanziale"), "sostanzial" );
	deepEqual( Stem("sostanzialmente"), "sostanzial" );
	deepEqual( Stem("sostanzioso"), "sostanz" );
	deepEqual( Stem("sostato"), "sost" );
	deepEqual( Stem("sostegno"), "sostegn" );
	deepEqual( Stem("sostenendo"), "sosten" );
	deepEqual( Stem("sostener"), "sostener" );
	deepEqual( Stem("sostenere"), "sosten" );
	deepEqual( Stem("sostenerla"), "sosten" );
	deepEqual( Stem("sostenerlo"), "sosten" );
	deepEqual( Stem("sostenerne"), "sosten" );
	deepEqual( Stem("sostenete"), "sosten" );
	deepEqual( Stem("sosteneva"), "sosten" );
	deepEqual( Stem("sostenevano"), "sosten" );
	deepEqual( Stem("sostenevo"), "sosten" );
	deepEqual( Stem("sostenga"), "sosteng" );
	deepEqual( Stem("sostengano"), "sosteng" );
	deepEqual( Stem("sostengo"), "sosteng" );
	deepEqual( Stem("sostengono"), "sosteng" );
	deepEqual( Stem("sostenibili"), "sosten" );
	deepEqual( Stem("sostenitore"), "sostenitor" );
	deepEqual( Stem("sostenitori"), "sostenitor" );
	deepEqual( Stem("sostenitrice"), "sostenitr" );
	deepEqual( Stem("sostenne"), "sostenn" );
	deepEqual( Stem("sostennero"), "sostenner" );
	deepEqual( Stem("sostenuta"), "sosten" );
	deepEqual( Stem("sostenute"), "sosten" );
	deepEqual( Stem("sostenuti"), "sosten" );
	deepEqual( Stem("sostenuto"), "sosten" );
	deepEqual( Stem("sosterrà"), "sosterr" );
	deepEqual( Stem("sostiene"), "sostien" );
	deepEqual( Stem("sostituendo"), "sostitu" );
	deepEqual( Stem("sostituì"), "sostitu" );
	deepEqual( Stem("sostituir"), "sostitu" );
	deepEqual( Stem("sostituire"), "sostitu" );
	deepEqual( Stem("sostituirlo"), "sostitu" );
	deepEqual( Stem("sostituirsi"), "sostitu" );
	deepEqual( Stem("sostituisca"), "sostitu" );
	deepEqual( Stem("sostituita"), "sostitu" );
	deepEqual( Stem("sostituito"), "sostitu" );
	deepEqual( Stem("sostituiva"), "sostitu" );
	deepEqual( Stem("sostituti"), "sostit" );
	deepEqual( Stem("sostituto"), "sostit" );
	deepEqual( Stem("sostituzione"), "sostitu" );
	deepEqual( Stem("sostiuisca"), "sostiu" );
	deepEqual( Stem("sott"), "sott" );
	deepEqual( Stem("sottana"), "sottan" );
	deepEqual( Stem("sottentrando"), "sottentr" );
	deepEqual( Stem("sotterfugi"), "sotterfug" );
	deepEqual( Stem("sotterfugio"), "sotterfug" );
	deepEqual( Stem("sotterranea"), "sotterrane" );
	deepEqual( Stem("sotterraneo"), "sotterrane" );
	deepEqual( Stem("sotterrare"), "sotterr" );
	deepEqual( Stem("sotterrarli"), "sotterr" );
	deepEqual( Stem("sotterrate"), "sotterr" );
	deepEqual( Stem("sottigliezze"), "sottigliezz" );
	deepEqual( Stem("sottil"), "sottil" );
	deepEqual( Stem("sottile"), "sottil" );
	deepEqual( Stem("sottili"), "sottil" );
	deepEqual( Stem("sottilissimo"), "sottilissim" );
	deepEqual( Stem("sottilmente"), "sottil" );
	deepEqual( Stem("sottintesa"), "sottintes" );
	deepEqual( Stem("sottintese"), "sottintes" );
	deepEqual( Stem("sotto"), "sott" );
	deepEqual( Stem("sottocoppa"), "sottocopp" );
	deepEqual( Stem("sottolinea"), "sottoline" );
	deepEqual( Stem("sottolineando"), "sottolin" );
	deepEqual( Stem("sottolineano"), "sottolin" );
	deepEqual( Stem("sottolineare"), "sottolin" );
	deepEqual( Stem("sottolineato"), "sottolin" );
	deepEqual( Stem("sottolineatura"), "sottolineatur" );
	deepEqual( Stem("sottolineava"), "sottolin" );
	deepEqual( Stem("sottomaestro"), "sottomaestr" );
	deepEqual( Stem("sottomarina"), "sottomarin" );
	deepEqual( Stem("sottomarino"), "sottomarin" );
	deepEqual( Stem("sottomesso"), "sottomess" );
	deepEqual( Stem("sottomettere"), "sottomett" );
	deepEqual( Stem("sottoponendo"), "sottopon" );
	deepEqual( Stem("sottoporre"), "sottoporr" );
	deepEqual( Stem("sottoposta"), "sottopost" );
	deepEqual( Stem("sottoposte"), "sottopost" );
	deepEqual( Stem("sottoposti"), "sottopost" );
	deepEqual( Stem("sottoposto"), "sottopost" );
	deepEqual( Stem("sottoscala"), "sottoscal" );
	deepEqual( Stem("sottoscritta"), "sottoscritt" );
	deepEqual( Stem("sottoscritti"), "sottoscritt" );
	deepEqual( Stem("sottoscritto"), "sottoscritt" );
	deepEqual( Stem("sottoscrittore"), "sottoscrittor" );
	deepEqual( Stem("sottoscrivere"), "sottoscriv" );
	deepEqual( Stem("sottoscrizione"), "sottoscrizion" );
	deepEqual( Stem("sottoscrizioni"), "sottoscrizion" );
	deepEqual( Stem("sottosegretari"), "sottosegretar" );
	deepEqual( Stem("sottosegretario"), "sottosegretar" );
	deepEqual( Stem("sottosegretariop"), "sottosegretariop" );
	deepEqual( Stem("sottosopra"), "sottosopr" );
	deepEqual( Stem("sottostimato"), "sottostim" );
	deepEqual( Stem("sottosuolo"), "sottosuol" );
	deepEqual( Stem("sottotitolo"), "sottotitol" );
	deepEqual( Stem("sottotono"), "sottot" );
	deepEqual( Stem("sottovalutare"), "sottovalut" );
	deepEqual( Stem("sottovalutata"), "sottovalut" );
	deepEqual( Stem("sottovaluti"), "sottoval" );
	deepEqual( Stem("sottovoce"), "sottovoc" );
	deepEqual( Stem("sottraesse"), "sottraess" );
	deepEqual( Stem("sottraevano"), "sottr" );
	deepEqual( Stem("sottrar"), "sottr" );
	deepEqual( Stem("sottrarci"), "sottr" );
	deepEqual( Stem("sottrarre"), "sottrarr" );
	deepEqual( Stem("sottrarsi"), "sottr" );
	deepEqual( Stem("sottratta"), "sottratt" );
	deepEqual( Stem("sottrattà"), "sottratt" );
	deepEqual( Stem("sottratti"), "sottratt" );
	deepEqual( Stem("sottrazione"), "sottrazion" );
	deepEqual( Stem("sottrazioni"), "sottrazion" );
	deepEqual( Stem("sottrici"), "sottric" );
	deepEqual( Stem("sottufficiali"), "sottufficial" );
	deepEqual( Stem("sottuficiali"), "sottuficial" );
	deepEqual( Stem("sousa"), "sous" );
	deepEqual( Stem("souzhou"), "souzhou" );
	deepEqual( Stem("sovente"), "sovent" );
	deepEqual( Stem("soverato"), "sover" );
	deepEqual( Stem("soverchiare"), "soverc" );
	deepEqual( Stem("soverchiarsi"), "soverc" );
	deepEqual( Stem("soverchiasse"), "soverc" );
	deepEqual( Stem("soverchiatore"), "soverc" );
	deepEqual( Stem("soverchiatori"), "soverc" );
	deepEqual( Stem("soverchieria"), "soverchier" );
	deepEqual( Stem("soverchierie"), "soverchier" );
	deepEqual( Stem("sovietica"), "soviet" );
	deepEqual( Stem("sovietiche"), "soviet" );
	deepEqual( Stem("sovietici"), "soviet" );
	deepEqual( Stem("sovietico"), "soviet" );
	deepEqual( Stem("sovrani"), "sovran" );
	deepEqual( Stem("sovranità"), "sovran" );
	deepEqual( Stem("sovrano"), "sovr" );
	deepEqual( Stem("sovrappopolazione"), "sovrappopol" );
	deepEqual( Stem("sovrapporre"), "sovrapporr" );
	deepEqual( Stem("sovrapposti"), "sovrappost" );
	deepEqual( Stem("sovrapproduzioni"), "sovrapprodu" );
	deepEqual( Stem("sovraregionali"), "sovraregional" );
	deepEqual( Stem("sovrastanti"), "sovrast" );
	deepEqual( Stem("sovrastata"), "sovrast" );
	deepEqual( Stem("sovrastato"), "sovrast" );
	deepEqual( Stem("sovrastava"), "sovrast" );
	deepEqual( Stem("sovrintendente"), "sovrintendent" );
	deepEqual( Stem("sovrintendevano"), "sovrintend" );
	deepEqual( Stem("sovrumana"), "sovruman" );
	deepEqual( Stem("sovvenne"), "sovvenn" );
	deepEqual( Stem("sovvenzione"), "sovvenzion" );
	deepEqual( Stem("sovvenzioni"), "sovvenzion" );
	deepEqual( Stem("sozzi"), "sozz" );
	deepEqual( Stem("sozzo"), "sozz" );
	deepEqual( Stem("sp"), "sp" );
	deepEqual( Stem("spa"), "spa" );
	deepEqual( Stem("spaak"), "spaak" );
	deepEqual( Stem("spaccare"), "spacc" );
	deepEqual( Stem("spaccati"), "spacc" );
	deepEqual( Stem("spaccatura"), "spaccatur" );
	deepEqual( Stem("spaccature"), "spaccatur" );
	deepEqual( Stem("spaccia"), "spacc" );
	deepEqual( Stem("spacciar"), "spacc" );
	deepEqual( Stem("spacciavano"), "spacc" );
	deepEqual( Stem("spaccone"), "spaccon" );
	deepEqual( Stem("spada"), "spad" );
	deepEqual( Stem("spadafora"), "spadafor" );
	deepEqual( Stem("spadaio"), "spadai" );
	deepEqual( Stem("spade"), "spad" );
	deepEqual( Stem("spadone"), "spadon" );
	deepEqual( Stem("spadoni"), "spadon" );
	deepEqual( Stem("spaggiari"), "spaggiar" );
	deepEqual( Stem("spagna"), "spagn" );
	deepEqual( Stem("spagnola"), "spagnol" );
	deepEqual( Stem("spagnolescamente"), "spagnolesc" );
	deepEqual( Stem("spagnoli"), "spagnol" );
	deepEqual( Stem("spagnolo"), "spagnol" );
	deepEqual( Stem("spagnulo"), "spagnul" );
	deepEqual( Stem("spago"), "spag" );
	deepEqual( Stem("spal"), "spal" );
	deepEqual( Stem("spalanca"), "spalanc" );
	deepEqual( Stem("spalancan"), "spalancan" );
	deepEqual( Stem("spalancando"), "spalanc" );
	deepEqual( Stem("spalancarsi"), "spalanc" );
	deepEqual( Stem("spalancata"), "spalanc" );
	deepEqual( Stem("spalancate"), "spalanc" );
	deepEqual( Stem("spalancati"), "spalanc" );
	deepEqual( Stem("spalancato"), "spalanc" );
	deepEqual( Stem("spalancava"), "spalanc" );
	deepEqual( Stem("spalancò"), "spalanc" );
	deepEqual( Stem("spalla"), "spall" );
	deepEqual( Stem("spalle"), "spall" );
	deepEqual( Stem("spalleggiano"), "spallegg" );
	deepEqual( Stem("spalleggiati"), "spallegg" );
	deepEqual( Stem("spalliera"), "spallier" );
	deepEqual( Stem("spallone"), "spallon" );
	deepEqual( Stem("spalti"), "spalt" );
	deepEqual( Stem("spander"), "spander" );
	deepEqual( Stem("spandersi"), "spand" );
	deepEqual( Stem("spandeva"), "spand" );
	deepEqual( Stem("spandevano"), "spand" );
	deepEqual( Stem("spandino"), "spandin" );
	deepEqual( Stem("spanu"), "spanu" );
	deepEqual( Stem("spaolo"), "spaol" );
	deepEqual( Stem("sparando"), "spar" );
	deepEqual( Stem("sparare"), "spar" );
	deepEqual( Stem("sparata"), "spar" );
	deepEqual( Stem("sparato"), "spar" );
	deepEqual( Stem("sparatogli"), "sparatogl" );
	deepEqual( Stem("sparatoria"), "sparator" );
	deepEqual( Stem("sparatorie"), "sparator" );
	deepEqual( Stem("sparava"), "spar" );
	deepEqual( Stem("sparecchiare"), "sparecc" );
	deepEqual( Stem("sparecchiato"), "sparecc" );
	deepEqual( Stem("sparge"), "sparg" );
	deepEqual( Stem("sparger"), "sparger" );
	deepEqual( Stem("spargerà"), "sparg" );
	deepEqual( Stem("spargere"), "sparg" );
	deepEqual( Stem("spargersi"), "sparg" );
	deepEqual( Stem("spargeva"), "sparg" );
	deepEqual( Stem("spargimento"), "sparg" );
	deepEqual( Stem("spargono"), "sparg" );
	deepEqual( Stem("spari"), "spar" );
	deepEqual( Stem("sparir"), "spar" );
	deepEqual( Stem("spariranno"), "spar" );
	deepEqual( Stem("sparire"), "spar" );
	deepEqual( Stem("sparisce"), "spar" );
	deepEqual( Stem("spariscono"), "spar" );
	deepEqual( Stem("sparite"), "spar" );
	deepEqual( Stem("spariti"), "spar" );
	deepEqual( Stem("sparito"), "spar" );
	deepEqual( Stem("spariva"), "spar" );
	deepEqual( Stem("sparizione"), "sparizion" );
	deepEqual( Stem("sparò"), "spar" );
	deepEqual( Stem("sparpagliati"), "sparpagl" );
	deepEqual( Stem("sparpagliato"), "sparpagl" );
	deepEqual( Stem("sparpagliò"), "sparpagl" );
	deepEqual( Stem("sparsa"), "spars" );
	deepEqual( Stem("sparsavi"), "spars" );
	deepEqual( Stem("sparse"), "spars" );
	deepEqual( Stem("sparsero"), "sparser" );
	deepEqual( Stem("sparsi"), "spars" );
	deepEqual( Stem("sparsim"), "sparsim" );
	deepEqual( Stem("sparso"), "spars" );
	deepEqual( Stem("spartire"), "spart" );
	deepEqual( Stem("spartiti"), "spart" );
	deepEqual( Stem("spartitoria"), "spartitor" );
	deepEqual( Stem("spartizione"), "spartizion" );
	deepEqual( Stem("spasimi"), "spasim" );
	deepEqual( Stem("spasimo"), "spasim" );
	deepEqual( Stem("spassi"), "spass" );
	deepEqual( Stem("spassionato"), "spassion" );
	deepEqual( Stem("spasso"), "spass" );
	deepEqual( Stem("spatari"), "spatar" );
	deepEqual( Stem("spatio"), "spat" );
	deepEqual( Stem("spatriarsi"), "spatr" );
	deepEqual( Stem("spaulding"), "spaulding" );
	deepEqual( Stem("spauracchi"), "spauracc" );
	deepEqual( Stem("spauracchio"), "spauracc" );
	deepEqual( Stem("spauriti"), "spaur" );
	deepEqual( Stem("spaventare"), "spavent" );
	deepEqual( Stem("spaventarsi"), "spavent" );
	deepEqual( Stem("spaventata"), "spavent" );
	deepEqual( Stem("spaventati"), "spavent" );
	deepEqual( Stem("spaventato"), "spavent" );
	deepEqual( Stem("spaventava"), "spavent" );
	deepEqual( Stem("spaventevole"), "spaventevol" );
	deepEqual( Stem("spaventi"), "spavent" );
	deepEqual( Stem("spavento"), "spavent" );
	deepEqual( Stem("spaventò"), "spavent" );
	deepEqual( Stem("spaventosa"), "spavent" );
	deepEqual( Stem("spaventosamente"), "spavent" );
	deepEqual( Stem("spaventosi"), "spavent" );
	deepEqual( Stem("spaventoso"), "spavent" );
	deepEqual( Stem("spazi"), "spaz" );
	deepEqual( Stem("spazia"), "spaz" );
	deepEqual( Stem("spaziale"), "spazial" );
	deepEqual( Stem("spazio"), "spaz" );
	deepEqual( Stem("spaziose"), "spazios" );
	deepEqual( Stem("spazza"), "spazz" );
	deepEqual( Stem("spazzando"), "spazz" );
	deepEqual( Stem("spazzar"), "spazz" );
	deepEqual( Stem("spazzarla"), "spazz" );
	deepEqual( Stem("spazzato"), "spazz" );
	deepEqual( Stem("spc"), "spc" );
	deepEqual( Stem("spd"), "spd" );
	deepEqual( Stem("spe"), "spe" );
	deepEqual( Stem("speaker"), "speaker" );
	deepEqual( Stem("specchi"), "specc" );
	deepEqual( Stem("specchia"), "specc" );
	deepEqual( Stem("specchiava"), "specc" );
	deepEqual( Stem("specchio"), "specc" );
	deepEqual( Stem("speci"), "spec" );
	deepEqual( Stem("special"), "special" );
	deepEqual( Stem("speciale"), "special" );
	deepEqual( Stem("speciali"), "special" );
	deepEqual( Stem("specialista"), "special" );
	deepEqual( Stem("specialisti"), "special" );
	deepEqual( Stem("specialistiche"), "specialist" );
	deepEqual( Stem("specialità"), "special" );
	deepEqual( Stem("specializzata"), "specializz" );
	deepEqual( Stem("specializzato"), "specializz" );
	deepEqual( Stem("specializzazione"), "specializz" );
	deepEqual( Stem("specializzazioni"), "specializz" );
	deepEqual( Stem("specialmente"), "special" );
	deepEqual( Stem("specie"), "spec" );
	deepEqual( Stem("specifica"), "specif" );
	deepEqual( Stem("specificamente"), "specif" );
	deepEqual( Stem("specificando"), "specific" );
	deepEqual( Stem("specificare"), "specific" );
	deepEqual( Stem("specificata"), "specific" );
	deepEqual( Stem("specificatamente"), "specificat" );
	deepEqual( Stem("specificati"), "specific" );
	deepEqual( Stem("specificato"), "specific" );
	deepEqual( Stem("specificavano"), "specific" );
	deepEqual( Stem("specifiche"), "specif" );
	deepEqual( Stem("specifici"), "specif" );
	deepEqual( Stem("specificità"), "specif" );
	deepEqual( Stem("specifico"), "specif" );
	deepEqual( Stem("speculare"), "specul" );
	deepEqual( Stem("speculari"), "specular" );
	deepEqual( Stem("speculativo"), "specul" );
	deepEqual( Stem("speculatori"), "specul" );
	deepEqual( Stem("speculazione"), "specul" );
	deepEqual( Stem("speculazioni"), "specul" );
	deepEqual( Stem("spedale"), "spedal" );
	deepEqual( Stem("spedì"), "sped" );
	deepEqual( Stem("spedir"), "sped" );
	deepEqual( Stem("spedire"), "sped" );
	deepEqual( Stem("spedirlo"), "sped" );
	deepEqual( Stem("spediron"), "spediron" );
	deepEqual( Stem("spedirono"), "sped" );
	deepEqual( Stem("spedisca"), "sped" );
	deepEqual( Stem("spediscono"), "sped" );
	deepEqual( Stem("spedisse"), "spediss" );
	deepEqual( Stem("spedita"), "sped" );
	deepEqual( Stem("speditamente"), "spedit" );
	deepEqual( Stem("speditane"), "speditan" );
	deepEqual( Stem("spediti"), "sped" );
	deepEqual( Stem("speditivo"), "spedit" );
	deepEqual( Stem("spedito"), "sped" );
	deepEqual( Stem("spedizione"), "spedizion" );
	deepEqual( Stem("spedizioni"), "spedizion" );
	deepEqual( Stem("speed"), "speed" );
	deepEqual( Stem("spegnendo"), "spegn" );
	deepEqual( Stem("spegner"), "spegner" );
	deepEqual( Stem("spegnere"), "spegn" );
	deepEqual( Stem("spegnersi"), "spegn" );
	deepEqual( Stem("spegnervi"), "spegn" );
	deepEqual( Stem("spegnesse"), "spegness" );
	deepEqual( Stem("spegnimento"), "spegn" );
	deepEqual( Stem("speice"), "speic" );
	deepEqual( Stem("spelacchiata"), "spelacc" );
	deepEqual( Stem("spelacchiati"), "spelacc" );
	deepEqual( Stem("spendendo"), "spend" );
	deepEqual( Stem("spender"), "spender" );
	deepEqual( Stem("spendere"), "spend" );
	deepEqual( Stem("spenderebbe"), "spend" );
	deepEqual( Stem("spenderli"), "spend" );
	deepEqual( Stem("spenderlo"), "spend" );
	deepEqual( Stem("spenderò"), "spend" );
	deepEqual( Stem("spendevano"), "spend" );
	deepEqual( Stem("spendiamo"), "spend" );
	deepEqual( Stem("spennacchiati"), "spennacc" );
	deepEqual( Stem("spennacchiato"), "spennacc" );
	deepEqual( Stem("spensierata"), "spensier" );
	deepEqual( Stem("spensierato"), "spensier" );
	deepEqual( Stem("spenta"), "spent" );
	deepEqual( Stem("spenti"), "spent" );
	deepEqual( Stem("spento"), "spent" );
	deepEqual( Stem("spenzolata"), "spenzol" );
	deepEqual( Stem("spenzolate"), "spenzol" );
	deepEqual( Stem("spenzolava"), "spenzol" );
	deepEqual( Stem("spenzolavano"), "spenzol" );
	deepEqual( Stem("spera"), "sper" );
	deepEqual( Stem("sperando"), "sper" );
	deepEqual( Stem("sperano"), "sper" );
	deepEqual( Stem("speranza"), "speranz" );
	deepEqual( Stem("speranze"), "speranz" );
	deepEqual( Stem("sperar"), "sper" );
	deepEqual( Stem("sperare"), "sper" );
	deepEqual( Stem("sperarlo"), "sper" );
	deepEqual( Stem("sperasse"), "sper" );
	deepEqual( Stem("sperati"), "sper" );
	deepEqual( Stem("sperato"), "sper" );
	deepEqual( Stem("sperava"), "sper" );
	deepEqual( Stem("speravo"), "sper" );
	deepEqual( Stem("sperdute"), "sperd" );
	deepEqual( Stem("speriamo"), "sper" );
	deepEqual( Stem("spericolata"), "spericol" );
	deepEqual( Stem("sperimentale"), "sperimental" );
	deepEqual( Stem("sperimentati"), "speriment" );
	deepEqual( Stem("sperimentato"), "speriment" );
	deepEqual( Stem("spero"), "sper" );
	deepEqual( Stem("speroni"), "speron" );
	deepEqual( Stem("sperperìo"), "sperperì" );
	deepEqual( Stem("sperpero"), "sperper" );
	deepEqual( Stem("sperticate"), "spertic" );
	deepEqual( Stem("spesa"), "spes" );
	deepEqual( Stem("spese"), "spes" );
	deepEqual( Stem("spesi"), "spes" );
	deepEqual( Stem("speso"), "spes" );
	deepEqual( Stem("spesso"), "spess" );
	deepEqual( Stem("spetta"), "spett" );
	deepEqual( Stem("spettabili"), "spettabil" );
	deepEqual( Stem("spettacolare"), "spettacol" );
	deepEqual( Stem("spettacolarizzazione"), "spettacolarizz" );
	deepEqual( Stem("spettacoli"), "spettacol" );
	deepEqual( Stem("spettacolo"), "spettacol" );
	deepEqual( Stem("spettante"), "spettant" );
	deepEqual( Stem("spettatore"), "spettator" );
	deepEqual( Stem("spettatori"), "spettator" );
	deepEqual( Stem("spetterà"), "spett" );
	deepEqual( Stem("spettro"), "spettr" );
	deepEqual( Stem("spezia"), "spez" );
	deepEqual( Stem("speziale"), "spezial" );
	deepEqual( Stem("spezzano"), "spezz" );
	deepEqual( Stem("spezzare"), "spezz" );
	deepEqual( Stem("spezzarlo"), "spezz" );
	deepEqual( Stem("spezzate"), "spezz" );
	deepEqual( Stem("spezzato"), "spezz" );
	deepEqual( Stem("spezzerò"), "spezz" );
	deepEqual( Stem("spezzone"), "spezzon" );
	deepEqual( Stem("spezzoni"), "spezzon" );
	deepEqual( Stem("spia"), "spi" );
	deepEqual( Stem("spiacevole"), "spiacevol" );
	deepEqual( Stem("spiacevoli"), "spiacevol" );
	deepEqual( Stem("spiagge"), "spiagg" );
	deepEqual( Stem("spiaggia"), "spiagg" );
	deepEqual( Stem("spianando"), "spian" );
	deepEqual( Stem("spianargli"), "spian" );
	deepEqual( Stem("spianarsi"), "spian" );
	deepEqual( Stem("spianata"), "spian" );
	deepEqual( Stem("spianate"), "spian" );
	deepEqual( Stem("spianati"), "spian" );
	deepEqual( Stem("spianato"), "spian" );
	deepEqual( Stem("spianava"), "spian" );
	deepEqual( Stem("spiando"), "spi" );
	deepEqual( Stem("spianti"), "spiant" );
	deepEqual( Stem("spiare"), "spi" );
	deepEqual( Stem("spiattellar"), "spiattell" );
	deepEqual( Stem("spiattellargli"), "spiattell" );
	deepEqual( Stem("spiattellato"), "spiattell" );
	deepEqual( Stem("spiava"), "spi" );
	deepEqual( Stem("spiazzare"), "spiazz" );
	deepEqual( Stem("spiazzo"), "spiazz" );
	deepEqual( Stem("spicca"), "spicc" );
	deepEqual( Stem("spiccando"), "spicc" );
	deepEqual( Stem("spiccata"), "spicc" );
	deepEqual( Stem("spiccato"), "spicc" );
	deepEqual( Stem("spiccava"), "spicc" );
	deepEqual( Stem("spiccavano"), "spicc" );
	deepEqual( Stem("spicci"), "spicc" );
	deepEqual( Stem("spicciar"), "spicc" );
	deepEqual( Stem("spicciare"), "spicc" );
	deepEqual( Stem("spicciarmi"), "spicc" );
	deepEqual( Stem("spicciarsi"), "spicc" );
	deepEqual( Stem("spicciarti"), "spicc" );
	deepEqual( Stem("spicciatevi"), "spicciat" );
	deepEqual( Stem("spicciato"), "spicc" );
	deepEqual( Stem("spicciola"), "spicciol" );
	deepEqual( Stem("spicciolare"), "spicciol" );
	deepEqual( Stem("spicciolata"), "spicciol" );
	deepEqual( Stem("spicciolati"), "spicciol" );
	deepEqual( Stem("spicco"), "spicc" );
	deepEqual( Stem("spiccò"), "spicc" );
	deepEqual( Stem("spie"), "spi" );
	deepEqual( Stem("spiega"), "spieg" );
	deepEqual( Stem("spiegando"), "spieg" );
	deepEqual( Stem("spiegandosi"), "spieg" );
	deepEqual( Stem("spiegano"), "spieg" );
	deepEqual( Stem("spiegar"), "spieg" );
	deepEqual( Stem("spiegare"), "spieg" );
	deepEqual( Stem("spiegargli"), "spieg" );
	deepEqual( Stem("spiegarlo"), "spieg" );
	deepEqual( Stem("spiegarsi"), "spieg" );
	deepEqual( Stem("spiegarvi"), "spieg" );
	deepEqual( Stem("spiegasse"), "spieg" );
	deepEqual( Stem("spiegata"), "spieg" );
	deepEqual( Stem("spiegatemi"), "spiegatem" );
	deepEqual( Stem("spiegato"), "spieg" );
	deepEqual( Stem("spiegava"), "spieg" );
	deepEqual( Stem("spiegazion"), "spiegazion" );
	deepEqual( Stem("spiegazione"), "spiegazion" );
	deepEqual( Stem("spiegazioni"), "spiegazion" );
	deepEqual( Stem("spiegel"), "spiegel" );
	deepEqual( Stem("spieghi"), "spieg" );
	deepEqual( Stem("spiegò"), "spieg" );
	deepEqual( Stem("spielberg"), "spielberg" );
	deepEqual( Stem("spierebbe"), "spi" );
	deepEqual( Stem("spietata"), "spiet" );
	deepEqual( Stem("spietati"), "spiet" );
	deepEqual( Stem("spigadoro"), "spigador" );
	deepEqual( Stem("spighe"), "spig" );
	deepEqual( Stem("spighette"), "spighett" );
	deepEqual( Stem("spillare"), "spill" );
	deepEqual( Stem("spilli"), "spill" );
	deepEqual( Stem("spillo"), "spill" );
	deepEqual( Stem("spillò"), "spill" );
	deepEqual( Stem("spilluzzicando"), "spilluzzic" );
	deepEqual( Stem("spina"), "spin" );
	deepEqual( Stem("spindler"), "spindler" );
	deepEqual( Stem("spine"), "spin" );
	deepEqual( Stem("spinelli"), "spinell" );
	deepEqual( Stem("spinge"), "sping" );
	deepEqual( Stem("spingendo"), "sping" );
	deepEqual( Stem("spingendole"), "sping" );
	deepEqual( Stem("spingendoli"), "sping" );
	deepEqual( Stem("spingendolo"), "sping" );
	deepEqual( Stem("spinger"), "spinger" );
	deepEqual( Stem("spingerà"), "sping" );
	deepEqual( Stem("spingere"), "sping" );
	deepEqual( Stem("spingerebbe"), "sping" );
	deepEqual( Stem("spingerli"), "sping" );
	deepEqual( Stem("spingeva"), "sping" );
	deepEqual( Stem("spingevan"), "spingevan" );
	deepEqual( Stem("spingon"), "spingon" );
	deepEqual( Stem("spingono"), "sping" );
	deepEqual( Stem("spini"), "spin" );
	deepEqual( Stem("spinola"), "spinol" );
	deepEqual( Stem("spinosa"), "spinos" );
	deepEqual( Stem("spinose"), "spinos" );
	deepEqual( Stem("spinse"), "spins" );
	deepEqual( Stem("spinsero"), "spinser" );
	deepEqual( Stem("spinta"), "spint" );
	deepEqual( Stem("spinte"), "spint" );
	deepEqual( Stem("spinti"), "spint" );
	deepEqual( Stem("spinto"), "spint" );
	deepEqual( Stem("spintonato"), "spinton" );
	deepEqual( Stem("spionaggio"), "spionagg" );
	deepEqual( Stem("spione"), "spion" );
	deepEqual( Stem("spiovuto"), "spiov" );
	deepEqual( Stem("spiraglio"), "spiragl" );
	deepEqual( Stem("spirale"), "spiral" );
	deepEqual( Stem("spirate"), "spir" );
	deepEqual( Stem("spirato"), "spir" );
	deepEqual( Stem("spirava"), "spir" );
	deepEqual( Stem("spiravano"), "spir" );
	deepEqual( Stem("spire"), "spir" );
	deepEqual( Stem("spiritati"), "spirit" );
	deepEqual( Stem("spiritato"), "spirit" );
	deepEqual( Stem("spiriti"), "spir" );
	deepEqual( Stem("spirito"), "spir" );
	deepEqual( Stem("spiritose"), "spirit" );
	deepEqual( Stem("spirituale"), "spiritual" );
	deepEqual( Stem("spirituali"), "spiritual" );
	deepEqual( Stem("spiritualità"), "spiritual" );
	deepEqual( Stem("spirò"), "spir" );
	deepEqual( Stem("spizzico"), "spizzic" );
	deepEqual( Stem("splendida"), "splendid" );
	deepEqual( Stem("splendidezza"), "splendidezz" );
	deepEqual( Stem("splendidi"), "splendid" );
	deepEqual( Stem("splendido"), "splendid" );
	deepEqual( Stem("splendore"), "splendor" );
	deepEqual( Stem("spm"), "spm" );
	deepEqual( Stem("spoglia"), "spogl" );
	deepEqual( Stem("spogliarello"), "spogliarell" );
	deepEqual( Stem("spogliarmi"), "spogl" );
	deepEqual( Stem("spogliata"), "spogl" );
	deepEqual( Stem("spogliate"), "spogl" );
	deepEqual( Stem("spogliatevi"), "spogliat" );
	deepEqual( Stem("spogliati"), "spogl" );
	deepEqual( Stem("spogliato"), "spogl" );
	deepEqual( Stem("spogliatoi"), "spogliato" );
	deepEqual( Stem("spogliatolo"), "spogliatol" );
	deepEqual( Stem("spogliatosi"), "spogliat" );
	deepEqual( Stem("spogliava"), "spogl" );
	deepEqual( Stem("spogliavano"), "spogl" );
	deepEqual( Stem("spoglie"), "spogl" );
	deepEqual( Stem("spoldi"), "spold" );
	deepEqual( Stem("spoleto"), "spolet" );
	deepEqual( Stem("spolverò"), "spolv" );
	deepEqual( Stem("sponda"), "spond" );
	deepEqual( Stem("sponde"), "spond" );
	deepEqual( Stem("spongia"), "spong" );
	deepEqual( Stem("sponsorizzato"), "sponsorizz" );
	deepEqual( Stem("spontanea"), "spontane" );
	deepEqual( Stem("spontaneamente"), "spontan" );
	deepEqual( Stem("spontanei"), "spontane" );
	deepEqual( Stem("spontaneo"), "spontane" );
	deepEqual( Stem("spopolar"), "spopol" );
	deepEqual( Stem("spopolò"), "spopol" );
	deepEqual( Stem("sporchi"), "sporc" );
	deepEqual( Stem("sporchizie"), "sporchiz" );
	deepEqual( Stem("sporco"), "sporc" );
	deepEqual( Stem("sporge"), "sporg" );
	deepEqual( Stem("sporgente"), "sporgent" );
	deepEqual( Stem("sporgenti"), "sporgent" );
	deepEqual( Stem("sporgere"), "sporg" );
	deepEqual( Stem("sporgersi"), "sporg" );
	deepEqual( Stem("sporgevan"), "sporgevan" );
	deepEqual( Stem("sport"), "sport" );
	deepEqual( Stem("sporta"), "sport" );
	deepEqual( Stem("sportelli"), "sportell" );
	deepEqual( Stem("sportellino"), "sportellin" );
	deepEqual( Stem("sportello"), "sportell" );
	deepEqual( Stem("sporting"), "sporting" );
	deepEqual( Stem("sportiva"), "sport" );
	deepEqual( Stem("sportive"), "sportiv" );
	deepEqual( Stem("sportivi"), "sport" );
	deepEqual( Stem("sportività"), "sportiv" );
	deepEqual( Stem("sportivo"), "sport" );
	deepEqual( Stem("sposa"), "spos" );
	deepEqual( Stem("sposalizio"), "sposaliz" );
	deepEqual( Stem("sposare"), "spos" );
	deepEqual( Stem("sposarlo"), "spos" );
	deepEqual( Stem("sposarsi"), "spos" );
	deepEqual( Stem("sposata"), "spos" );
	deepEqual( Stem("sposato"), "spos" );
	deepEqual( Stem("spose"), "spos" );
	deepEqual( Stem("sposi"), "spos" );
	deepEqual( Stem("sposina"), "sposin" );
	deepEqual( Stem("sposini"), "sposin" );
	deepEqual( Stem("sposo"), "spos" );
	deepEqual( Stem("spossati"), "sposs" );
	deepEqual( Stem("sposta"), "spost" );
	deepEqual( Stem("spostamento"), "spost" );
	deepEqual( Stem("spostando"), "spost" );
	deepEqual( Stem("spostano"), "spost" );
	deepEqual( Stem("spostato"), "spost" );
	deepEqual( Stem("spostava"), "spost" );
	deepEqual( Stem("spot"), "spot" );
	deepEqual( Stem("spr"), "spr" );
	deepEqual( Stem("spranghetta"), "spranghett" );
	deepEqual( Stem("spray"), "spray" );
	deepEqual( Stem("sprazzo"), "sprazz" );
	deepEqual( Stem("sprecano"), "sprec" );
	deepEqual( Stem("sprecate"), "sprec" );
	deepEqual( Stem("sprecato"), "sprec" );
	deepEqual( Stem("sprecava"), "sprec" );
	deepEqual( Stem("sprechi"), "sprec" );
	deepEqual( Stem("spreco"), "sprec" );
	deepEqual( Stem("sprecone"), "sprecon" );
	deepEqual( Stem("spred"), "spred" );
	deepEqual( Stem("spregevole"), "spregevol" );
	deepEqual( Stem("spremere"), "sprem" );
	deepEqual( Stem("spremerne"), "sprem" );
	deepEqual( Stem("spremitura"), "spremitur" );
	deepEqual( Stem("sprezzante"), "sprezzant" );
	deepEqual( Stem("sprezzatura"), "sprezzatur" );
	deepEqual( Stem("sprezzo"), "sprezz" );
	deepEqual( Stem("sprigiona"), "sprigion" );
	deepEqual( Stem("sprigionandosi"), "sprigion" );
	deepEqual( Stem("sprigionò"), "sprigion" );
	deepEqual( Stem("sprint"), "sprint" );
	deepEqual( Stem("sprofondato"), "sprofond" );
	deepEqual( Stem("sprona"), "spron" );
	deepEqual( Stem("sproni"), "spron" );
	deepEqual( Stem("sproporzionato"), "sproporzion" );
	deepEqual( Stem("sproporzione"), "sproporzion" );
	deepEqual( Stem("spropositato"), "sproposit" );
	deepEqual( Stem("spropositava"), "sproposit" );
	deepEqual( Stem("spropositi"), "spropos" );
	deepEqual( Stem("sproposito"), "spropos" );
	deepEqual( Stem("spropriarsi"), "spropr" );
	deepEqual( Stem("sproprio"), "spropr" );
	deepEqual( Stem("sprovveduta"), "sprovved" );
	deepEqual( Stem("sprovvisto"), "sprovvist" );
	deepEqual( Stem("spugna"), "spugn" );
	deepEqual( Stem("spugne"), "spugn" );
	deepEqual( Stem("spumante"), "spumant" );
	deepEqual( Stem("spunta"), "spunt" );
	deepEqual( Stem("spuntano"), "spunt" );
	deepEqual( Stem("spuntar"), "spunt" );
	deepEqual( Stem("spuntare"), "spunt" );
	deepEqual( Stem("spuntargli"), "spunt" );
	deepEqual( Stem("spuntarla"), "spunt" );
	deepEqual( Stem("spuntarlo"), "spunt" );
	deepEqual( Stem("spuntati"), "spunt" );
	deepEqual( Stem("spuntava"), "spunt" );
	deepEqual( Stem("spunterebbe"), "spunt" );
	deepEqual( Stem("spunti"), "spunt" );
	deepEqual( Stem("spunto"), "spunt" );
	deepEqual( Stem("spuntò"), "spunt" );
	deepEqual( Stem("spurs"), "spurs" );
	deepEqual( Stem("squadra"), "squadr" );
	deepEqual( Stem("squadrando"), "squadr" );
	deepEqual( Stem("squadrandolo"), "squadr" );
	deepEqual( Stem("squadrati"), "squadr" );
	deepEqual( Stem("squadrato"), "squadr" );
	deepEqual( Stem("squadrava"), "squadr" );
	deepEqual( Stem("squadre"), "squadr" );
	deepEqual( Stem("squadrò"), "squadr" );
	deepEqual( Stem("squadron"), "squadron" );
	deepEqual( Stem("squadrone"), "squadron" );
	deepEqual( Stem("squalificati"), "squalific" );
	deepEqual( Stem("squalificato"), "squalific" );
	deepEqual( Stem("squallida"), "squallid" );
	deepEqual( Stem("squallidamente"), "squallid" );
	deepEqual( Stem("squallide"), "squallid" );
	deepEqual( Stem("squallido"), "squallid" );
	deepEqual( Stem("squarci"), "squarc" );
	deepEqual( Stem("squarcio"), "squarc" );
	deepEqual( Stem("squartare"), "squart" );
	deepEqual( Stem("squartato"), "squart" );
	deepEqual( Stem("squilibri"), "squilibr" );
	deepEqual( Stem("squilibrio"), "squilibr" );
	deepEqual( Stem("squillo"), "squill" );
	deepEqual( Stem("squinternotto"), "squinternott" );
	deepEqual( Stem("squisita"), "squis" );
	deepEqual( Stem("squisitamente"), "squisit" );
	deepEqual( Stem("squisitezza"), "squisitezz" );
	deepEqual( Stem("squisito"), "squis" );
	deepEqual( Stem("sradicamento"), "sradic" );
	deepEqual( Stem("sregolati"), "sregol" );
	deepEqual( Stem("srna"), "srna" );
	deepEqual( Stem("ss"), "ss" );
	deepEqual( Stem("st"), "st" );
	deepEqual( Stem("sta"), "sta" );
	deepEqual( Stem("stà"), "stà" );
	deepEqual( Stem("stabia"), "stab" );
	deepEqual( Stem("stabile"), "stabil" );
	deepEqual( Stem("stabilendo"), "stabil" );
	deepEqual( Stem("stabili"), "stabil" );
	deepEqual( Stem("stabilì"), "stabil" );
	deepEqual( Stem("stabilimenti"), "stabil" );
	deepEqual( Stem("stabilimento"), "stabil" );
	deepEqual( Stem("stabilirà"), "stabil" );
	deepEqual( Stem("stabilire"), "stabil" );
	deepEqual( Stem("stabilirla"), "stabil" );
	deepEqual( Stem("stabilirsi"), "stabil" );
	deepEqual( Stem("stabilirvi"), "stabil" );
	deepEqual( Stem("stabilisce"), "stabil" );
	deepEqual( Stem("stabiliscono"), "stabil" );
	deepEqual( Stem("stabilita"), "stabil" );
	deepEqual( Stem("stabilità"), "stabil" );
	deepEqual( Stem("stabilite"), "stabil" );
	deepEqual( Stem("stabiliti"), "stabil" );
	deepEqual( Stem("stabilito"), "stabil" );
	deepEqual( Stem("stabiliva"), "stabil" );
	deepEqual( Stem("stabilizzare"), "stabilizz" );
	deepEqual( Stem("stabilizzarsi"), "stabilizz" );
	deepEqual( Stem("stabilizzata"), "stabilizz" );
	deepEqual( Stem("stabilizzazione"), "stabilizz" );
	deepEqual( Stem("stabilizzerà"), "stabilizz" );
	deepEqual( Stem("stabilmente"), "stabil" );
	deepEqual( Stem("stacca"), "stacc" );
	deepEqual( Stem("staccan"), "staccan" );
	deepEqual( Stem("staccando"), "stacc" );
	deepEqual( Stem("staccarsene"), "stacc" );
	deepEqual( Stem("staccarsi"), "stacc" );
	deepEqual( Stem("staccasse"), "stacc" );
	deepEqual( Stem("staccata"), "stacc" );
	deepEqual( Stem("staccato"), "stacc" );
	deepEqual( Stem("staccatosi"), "staccat" );
	deepEqual( Stem("staccava"), "stacc" );
	deepEqual( Stem("staccavano"), "stacc" );
	deepEqual( Stem("stacchini"), "stacchin" );
	deepEqual( Stem("staccò"), "stacc" );
	deepEqual( Stem("stadi"), "stad" );
	deepEqual( Stem("stadio"), "stad" );
	deepEqual( Stem("staff"), "staff" );
	deepEqual( Stem("staffa"), "staff" );
	deepEqual( Stem("staffan"), "staffan" );
	deepEqual( Stem("staffetta"), "staffett" );
	deepEqual( Stem("staffette"), "staffett" );
	deepEqual( Stem("staffilata"), "staffil" );
	deepEqual( Stem("stafoggia"), "stafogg" );
	deepEqual( Stem("stagbilità"), "stagbil" );
	deepEqual( Stem("staggi"), "stagg" );
	deepEqual( Stem("staggione"), "staggion" );
	deepEqual( Stem("stagionale"), "stagional" );
	deepEqual( Stem("stagionali"), "stagional" );
	deepEqual( Stem("stagione"), "stagion" );
	deepEqual( Stem("stagioni"), "stagion" );
	deepEqual( Stem("stagionì"), "stagion" );
	deepEqual( Stem("stai"), "sta" );
	deepEqual( Stem("staia"), "stai" );
	deepEqual( Stem("staio"), "stai" );
	deepEqual( Stem("stajano"), "staj" );
	deepEqual( Stem("stalin"), "stalin" );
	deepEqual( Stem("stalla"), "stall" );
	deepEqual( Stem("stalle"), "stall" );
	deepEqual( Stem("stallo"), "stall" );
	deepEqual( Stem("stallone"), "stallon" );
	deepEqual( Stem("stamane"), "staman" );
	deepEqual( Stem("stamani"), "staman" );
	deepEqual( Stem("stamattina"), "stamattin" );
	deepEqual( Stem("stampa"), "stamp" );
	deepEqual( Stem("stampà"), "stamp" );
	deepEqual( Stem("stampando"), "stamp" );
	deepEqual( Stem("stampano"), "stamp" );
	deepEqual( Stem("stamparlo"), "stamp" );
	deepEqual( Stem("stampassero"), "stamp" );
	deepEqual( Stem("stampata"), "stamp" );
	deepEqual( Stem("stampate"), "stamp" );
	deepEqual( Stem("stampati"), "stamp" );
	deepEqual( Stem("stampato"), "stamp" );
	deepEqual( Stem("stampatori"), "stampator" );
	deepEqual( Stem("stampava"), "stamp" );
	deepEqual( Stem("stampavano"), "stamp" );
	deepEqual( Stem("stampe"), "stamp" );
	deepEqual( Stem("stamperia"), "stamper" );
	deepEqual( Stem("stan"), "stan" );
	deepEqual( Stem("stanca"), "stanc" );
	deepEqual( Stem("stancano"), "stanc" );
	deepEqual( Stem("stancate"), "stanc" );
	deepEqual( Stem("stanchezza"), "stanchezz" );
	deepEqual( Stem("stanchi"), "stanc" );
	deepEqual( Stem("stanco"), "stanc" );
	deepEqual( Stem("stand"), "stand" );
	deepEqual( Stem("standa"), "stand" );
	deepEqual( Stem("standard"), "standard" );
	deepEqual( Stem("stando"), "stand" );
	deepEqual( Stem("standogli"), "standogl" );
	deepEqual( Stem("stands"), "stands" );
	deepEqual( Stem("stanga"), "stang" );
	deepEqual( Stem("stangata"), "stang" );
	deepEqual( Stem("stanghette"), "stanghett" );
	deepEqual( Stem("stanislao"), "stanisla" );
	deepEqual( Stem("stanley"), "stanley" );
	deepEqual( Stem("stanno"), "stann" );
	deepEqual( Stem("stanotte"), "stanott" );
	deepEqual( Stem("stante"), "stant" );
	deepEqual( Stem("stantuffi"), "stantuff" );
	deepEqual( Stem("stanza"), "stanz" );
	deepEqual( Stem("stanzaccia"), "stanzacc" );
	deepEqual( Stem("stanze"), "stanz" );
	deepEqual( Stem("stanzia"), "stanz" );
	deepEqual( Stem("stanziamento"), "stanz" );
	deepEqual( Stem("stanziati"), "stanz" );
	deepEqual( Stem("stanziato"), "stanz" );
	deepEqual( Stem("stanzina"), "stanzin" );
	deepEqual( Stem("stanzine"), "stanzin" );
	deepEqual( Stem("stanzone"), "stanzon" );
	deepEqual( Stem("stanzucce"), "stanzucc" );
	deepEqual( Stem("star"), "star" );
	deepEqual( Stem("starà"), "star" );
	deepEqual( Stem("starai"), "stara" );
	deepEqual( Stem("staranno"), "starann" );
	deepEqual( Stem("starci"), "starc" );
	deepEqual( Stem("stare"), "star" );
	deepEqual( Stem("starebbe"), "starebb" );
	deepEqual( Stem("staremmo"), "star" );
	deepEqual( Stem("starete"), "star" );
	deepEqual( Stem("starkraft"), "starkraft" );
	deepEqual( Stem("starne"), "starn" );
	deepEqual( Stem("starnett"), "starnett" );
	deepEqual( Stem("starò"), "star" );
	deepEqual( Stem("staropromyslovski"), "staropromyslovsk" );
	deepEqual( Stem("starsene"), "starsen" );
	deepEqual( Stem("starvi"), "starv" );
	deepEqual( Stem("stasera"), "staser" );
	deepEqual( Stem("stasi"), "stas" );
	deepEqual( Stem("stata"), "stat" );
	deepEqual( Stem("statale"), "statal" );
	deepEqual( Stem("statali"), "statal" );
	deepEqual( Stem("statalismo"), "statal" );
	deepEqual( Stem("statalista"), "statal" );
	deepEqual( Stem("state"), "stat" );
	deepEqual( Stem("statevi"), "stat" );
	deepEqual( Stem("stati"), "stat" );
	deepEqual( Stem("statista"), "statist" );
	deepEqual( Stem("statisti"), "statist" );
	deepEqual( Stem("statistica"), "statist" );
	deepEqual( Stem("statistiche"), "statist" );
	deepEqual( Stem("stato"), "stat" );
	deepEqual( Stem("statoil"), "statoil" );
	deepEqual( Stem("statua"), "statu" );
	deepEqual( Stem("statuale"), "statual" );
	deepEqual( Stem("statuario"), "statuar" );
	deepEqual( Stem("statue"), "statu" );
	deepEqual( Stem("statunitense"), "statunitens" );
	deepEqual( Stem("statunitensi"), "statunitens" );
	deepEqual( Stem("statutari"), "statutar" );
	deepEqual( Stem("statutaria"), "statutar" );
	deepEqual( Stem("statutarie"), "statutar" );
	deepEqual( Stem("statuti"), "stat" );
	deepEqual( Stem("statuto"), "stat" );
	deepEqual( Stem("stava"), "stav" );
	deepEqual( Stem("stavan"), "stavan" );
	deepEqual( Stem("stavano"), "stav" );
	deepEqual( Stem("stavate"), "stav" );
	deepEqual( Stem("stavo"), "stav" );
	deepEqual( Stem("stavolta"), "stavolt" );
	deepEqual( Stem("staying"), "staying" );
	deepEqual( Stem("stazionavano"), "stazion" );
	deepEqual( Stem("stazione"), "stazion" );
	deepEqual( Stem("stazioni"), "stazion" );
	deepEqual( Stem("stazza"), "stazz" );
	deepEqual( Stem("ste"), "ste" );
	deepEqual( Stem("steccano"), "stecc" );
	deepEqual( Stem("stecchita"), "stecc" );
	deepEqual( Stem("stecconato"), "steccon" );
	deepEqual( Stem("stefanel"), "stefanel" );
	deepEqual( Stem("stefani"), "stefan" );
	deepEqual( Stem("stefania"), "stefan" );
	deepEqual( Stem("stefano"), "stef" );
	deepEqual( Stem("steiger"), "steiger" );
	deepEqual( Stem("steli"), "stel" );
	deepEqual( Stem("stella"), "stell" );
	deepEqual( Stem("stellate"), "stell" );
	deepEqual( Stem("stelle"), "stell" );
	deepEqual( Stem("stellè"), "stell" );
	deepEqual( Stem("stelo"), "stel" );
	deepEqual( Stem("stelvio"), "stelv" );
	deepEqual( Stem("stende"), "stend" );
	deepEqual( Stem("stendendo"), "stend" );
	deepEqual( Stem("stendendole"), "stend" );
	deepEqual( Stem("stender"), "stender" );
	deepEqual( Stem("stenderà"), "stend" );
	deepEqual( Stem("stendere"), "stend" );
	deepEqual( Stem("stenderne"), "stend" );
	deepEqual( Stem("stendeva"), "stend" );
	deepEqual( Stem("stendevano"), "stend" );
	deepEqual( Stem("stenografico"), "stenograf" );
	deepEqual( Stem("stenta"), "stent" );
	deepEqual( Stem("stentando"), "stent" );
	deepEqual( Stem("stentano"), "stent" );
	deepEqual( Stem("stentatamente"), "stentat" );
	deepEqual( Stem("stentato"), "stent" );
	deepEqual( Stem("stentava"), "stent" );
	deepEqual( Stem("stenti"), "stent" );
	deepEqual( Stem("stento"), "stent" );
	deepEqual( Stem("stentò"), "stent" );
	deepEqual( Stem("stentorea"), "stentore" );
	deepEqual( Stem("stephane"), "stephan" );
	deepEqual( Stem("stephen"), "stephen" );
	deepEqual( Stem("sterchele"), "sterchel" );
	deepEqual( Stem("stereo"), "stere" );
	deepEqual( Stem("sterile"), "steril" );
	deepEqual( Stem("sterilità"), "steril" );
	deepEqual( Stem("sterlina"), "sterlin" );
	deepEqual( Stem("sterline"), "sterlin" );
	deepEqual( Stem("sterminare"), "stermin" );
	deepEqual( Stem("sterminate"), "stermin" );
	deepEqual( Stem("sterminati"), "stermin" );
	deepEqual( Stem("sterminato"), "stermin" );
	deepEqual( Stem("sterminio"), "stermin" );
	deepEqual( Stem("sterpi"), "sterp" );
	deepEqual( Stem("sterrata"), "sterr" );
	deepEqual( Stem("sterza"), "sterz" );
	deepEqual( Stem("stesa"), "stes" );
	deepEqual( Stem("stesavi"), "stes" );
	deepEqual( Stem("stese"), "stes" );
	deepEqual( Stem("stesero"), "steser" );
	deepEqual( Stem("stesi"), "stes" );
	deepEqual( Stem("steso"), "stes" );
	deepEqual( Stem("stessa"), "stess" );
	deepEqual( Stem("stesse"), "stess" );
	deepEqual( Stem("stessero"), "stesser" );
	deepEqual( Stem("stessi"), "stess" );
	deepEqual( Stem("stesso"), "stess" );
	deepEqual( Stem("stesura"), "stesur" );
	deepEqual( Stem("stet"), "stet" );
	deepEqual( Stem("stette"), "stett" );
	deepEqual( Stem("stettero"), "stetter" );
	deepEqual( Stem("steve"), "stev" );
	deepEqual( Stem("steven"), "steven" );
	deepEqual( Stem("stevens"), "stevens" );
	deepEqual( Stem("stia"), "sti" );
	deepEqual( Stem("stìa"), "stì" );
	deepEqual( Stem("stiam"), "stiam" );
	deepEqual( Stem("stiamo"), "stiam" );
	deepEqual( Stem("stian"), "stian" );
	deepEqual( Stem("stiano"), "sti" );
	deepEqual( Stem("stiate"), "sti" );
	deepEqual( Stem("stig"), "stig" );
	deepEqual( Stem("stilare"), "stil" );
	deepEqual( Stem("stilata"), "stil" );
	deepEqual( Stem("stilato"), "stil" );
	deepEqual( Stem("stile"), "stil" );
	deepEqual( Stem("stili"), "stil" );
	deepEqual( Stem("stilisti"), "stilist" );
	deepEqual( Stem("stillate"), "still" );
	deepEqual( Stem("stillati"), "still" );
	deepEqual( Stem("stima"), "stim" );
	deepEqual( Stem("stimano"), "stim" );
	deepEqual( Stem("stimare"), "stim" );
	deepEqual( Stem("stimaron"), "stimaron" );
	deepEqual( Stem("stimasse"), "stim" );
	deepEqual( Stem("stimasser"), "stimasser" );
	deepEqual( Stem("stimato"), "stim" );
	deepEqual( Stem("stimava"), "stim" );
	deepEqual( Stem("stime"), "stim" );
	deepEqual( Stem("stimolare"), "stimol" );
	deepEqual( Stem("stimolato"), "stimol" );
	deepEqual( Stem("stimolava"), "stimol" );
	deepEqual( Stem("stimolavan"), "stimolavan" );
	deepEqual( Stem("stimoli"), "stimol" );
	deepEqual( Stem("stimolo"), "stimol" );
	deepEqual( Stem("stinchi"), "stinc" );
	deepEqual( Stem("stipa"), "stip" );
	deepEqual( Stem("stipato"), "stip" );
	deepEqual( Stem("stipendi"), "stip" );
	deepEqual( Stem("stipendiati"), "stipend" );
	deepEqual( Stem("stipendio"), "stipend" );
	deepEqual( Stem("stipendiò"), "stipend" );
	deepEqual( Stem("stipite"), "stip" );
	deepEqual( Stem("stipulare"), "stipul" );
	deepEqual( Stem("stipulato"), "stipul" );
	deepEqual( Stem("stiramento"), "stir" );
	deepEqual( Stem("stirando"), "stir" );
	deepEqual( Stem("stirato"), "stir" );
	deepEqual( Stem("stiratosi"), "stirat" );
	deepEqual( Stem("stiria"), "stir" );
	deepEqual( Stem("stirò"), "stir" );
	deepEqual( Stem("stirpe"), "stirp" );
	deepEqual( Stem("stirpi"), "stirp" );
	deepEqual( Stem("stivale"), "stival" );
	deepEqual( Stem("stizza"), "stizz" );
	deepEqual( Stem("stizzetta"), "stizzett" );
	deepEqual( Stem("stizzita"), "stizz" );
	deepEqual( Stem("stizziti"), "stizz" );
	deepEqual( Stem("stizzito"), "stizz" );
	deepEqual( Stem("stizzosa"), "stizzos" );
	deepEqual( Stem("stizzosamente"), "stizzos" );
	deepEqual( Stem("sto"), "sto" );
	deepEqual( Stem("stoccaggio"), "stoccagg" );
	deepEqual( Stem("stoccata"), "stocc" );
	deepEqual( Stem("stoccate"), "stocc" );
	deepEqual( Stem("stoccolma"), "stoccolm" );
	deepEqual( Stem("stock"), "stock" );
	deepEqual( Stem("stoltenberg"), "stoltenberg" );
	deepEqual( Stem("stolti"), "stolt" );
	deepEqual( Stem("stomacato"), "stomac" );
	deepEqual( Stem("stomaco"), "stomac" );
	deepEqual( Stem("stomacosi"), "stomac" );
	deepEqual( Stem("stonata"), "ston" );
	deepEqual( Stem("stoppa"), "stopp" );
	deepEqual( Stem("stoppie"), "stopp" );
	deepEqual( Stem("stoppino"), "stoppin" );
	deepEqual( Stem("storace"), "storac" );
	deepEqual( Stem("storcendo"), "storc" );
	deepEqual( Stem("storcendolo"), "storc" );
	deepEqual( Stem("storceva"), "storc" );
	deepEqual( Stem("stordimento"), "stord" );
	deepEqual( Stem("stordito"), "stord" );
	deepEqual( Stem("storia"), "stor" );
	deepEqual( Stem("storica"), "storic" );
	deepEqual( Stem("storicà"), "storic" );
	deepEqual( Stem("storicamente"), "storic" );
	deepEqual( Stem("storice"), "storic" );
	deepEqual( Stem("storiche"), "storic" );
	deepEqual( Stem("storici"), "storic" );
	deepEqual( Stem("storico"), "storic" );
	deepEqual( Stem("storie"), "stor" );
	deepEqual( Stem("storielle"), "storiell" );
	deepEqual( Stem("storiografia"), "storiograf" );
	deepEqual( Stem("stormo"), "storm" );
	deepEqual( Stem("stornar"), "storn" );
	deepEqual( Stem("stornare"), "storn" );
	deepEqual( Stem("stornarlo"), "storn" );
	deepEqual( Stem("storpiato"), "storp" );
	deepEqual( Stem("storse"), "stors" );
	deepEqual( Stem("storta"), "stort" );
	deepEqual( Stem("storte"), "stort" );
	deepEqual( Stem("storto"), "stort" );
	deepEqual( Stem("story"), "story" );
	deepEqual( Stem("stoviglie"), "stovigl" );
	deepEqual( Stem("strabica"), "strabic" );
	deepEqual( Stem("strabismo"), "strabism" );
	deepEqual( Stem("stracariche"), "stracar" );
	deepEqual( Stem("stracca"), "stracc" );
	deepEqual( Stem("stracchi"), "stracc" );
	deepEqual( Stem("stracchino"), "stracchin" );
	deepEqual( Stem("stracci"), "stracc" );
	deepEqual( Stem("straccio"), "stracc" );
	deepEqual( Stem("stracco"), "stracc" );
	deepEqual( Stem("strada"), "strad" );
	deepEqual( Stem("stradale"), "stradal" );
	deepEqual( Stem("stradali"), "stradal" );
	deepEqual( Stem("strade"), "strad" );
	deepEqual( Stem("stradetta"), "stradett" );
	deepEqual( Stem("stradette"), "stradett" );
	deepEqual( Stem("stradicciole"), "stradicciol" );
	deepEqual( Stem("stradone"), "stradon" );
	deepEqual( Stem("straducola"), "straducol" );
	deepEqual( Stem("strage"), "strag" );
	deepEqual( Stem("stragem"), "stragem" );
	deepEqual( Stem("stragrande"), "stragrand" );
	deepEqual( Stem("stralci"), "stralc" );
	deepEqual( Stem("stralciata"), "stralc" );
	deepEqual( Stem("stralcio"), "stralc" );
	deepEqual( Stem("stralunando"), "stralun" );
	deepEqual( Stem("stralunati"), "stralun" );
	deepEqual( Stem("stralunato"), "stralun" );
	deepEqual( Stem("strame"), "stram" );
	deepEqual( Stem("strampa"), "stramp" );
	deepEqual( Stem("strana"), "stran" );
	deepEqual( Stem("stranamente"), "stran" );
	deepEqual( Stem("strane"), "stran" );
	deepEqual( Stem("stranezza"), "stranezz" );
	deepEqual( Stem("strani"), "stran" );
	deepEqual( Stem("straniera"), "stranier" );
	deepEqual( Stem("straniere"), "stran" );
	deepEqual( Stem("stranieri"), "stranier" );
	deepEqual( Stem("straniero"), "stranier" );
	deepEqual( Stem("strano"), "stran" );
	deepEqual( Stem("straordinari"), "straordinar" );
	deepEqual( Stem("straordinaria"), "straordinar" );
	deepEqual( Stem("straordinariamente"), "straordinar" );
	deepEqual( Stem("straordinarie"), "straordinar" );
	deepEqual( Stem("straordinarii"), "straordinar" );
	deepEqual( Stem("straordinario"), "straordinar" );
	deepEqual( Stem("strapazzi"), "strapazz" );
	deepEqual( Stem("strapazzo"), "strapazz" );
	deepEqual( Stem("strapotere"), "strapot" );
	deepEqual( Stem("strappa"), "strapp" );
	deepEqual( Stem("strappar"), "strapp" );
	deepEqual( Stem("strappare"), "strapp" );
	deepEqual( Stem("strappati"), "strapp" );
	deepEqual( Stem("strappato"), "strapp" );
	deepEqual( Stem("strappo"), "strapp" );
	deepEqual( Stem("strapunti"), "strapunt" );
	deepEqual( Stem("strasburgo"), "strasburg" );
	deepEqual( Stem("strascicandolo"), "strascic" );
	deepEqual( Stem("strascicano"), "strascic" );
	deepEqual( Stem("strascicarono"), "strascic" );
	deepEqual( Stem("strascicarsi"), "strascic" );
	deepEqual( Stem("strascicato"), "strascic" );
	deepEqual( Stem("strascicavan"), "strascicavan" );
	deepEqual( Stem("strascicavano"), "strascic" );
	deepEqual( Stem("strascichi"), "strascic" );
	deepEqual( Stem("strascico"), "strascic" );
	deepEqual( Stem("strascina"), "strascin" );
	deepEqual( Stem("strascinarli"), "strascin" );
	deepEqual( Stem("strascinarlo"), "strascin" );
	deepEqual( Stem("strascinata"), "strascin" );
	deepEqual( Stem("strascinati"), "strascin" );
	deepEqual( Stem("strascinato"), "strascin" );
	deepEqual( Stem("strascinavan"), "strascinavan" );
	deepEqual( Stem("strascinavano"), "strascin" );
	deepEqual( Stem("strasecolar"), "strasecol" );
	deepEqual( Stem("strat"), "strat" );
	deepEqual( Stem("strata"), "strat" );
	deepEqual( Stem("stratagemmi"), "stratagemm" );
	deepEqual( Stem("strategia"), "strateg" );
	deepEqual( Stem("strategica"), "strateg" );
	deepEqual( Stem("strategiche"), "strateg" );
	deepEqual( Stem("strategico"), "strateg" );
	deepEqual( Stem("strategie"), "strateg" );
	deepEqual( Stem("strathclyde"), "strathclyd" );
	deepEqual( Stem("stratta"), "stratt" );
	deepEqual( Stem("stratte"), "stratt" );
	deepEqual( Stem("stravagante"), "stravag" );
	deepEqual( Stem("stravaganti"), "stravag" );
	deepEqual( Stem("stravaganze"), "stravag" );
	deepEqual( Stem("stravizi"), "straviz" );
	deepEqual( Stem("straviziare"), "straviz" );
	deepEqual( Stem("stravizio"), "straviz" );
	deepEqual( Stem("stravolgendo"), "stravolg" );
	deepEqual( Stem("stravolgimento"), "stravolg" );
	deepEqual( Stem("stravolta"), "stravolt" );
	deepEqual( Stem("stravolte"), "stravolt" );
	deepEqual( Stem("stravolti"), "stravolt" );
	deepEqual( Stem("stravolto"), "stravolt" );
	deepEqual( Stem("straziano"), "straz" );
	deepEqual( Stem("straziato"), "straz" );
	deepEqual( Stem("strazio"), "straz" );
	deepEqual( Stem("street"), "street" );
	deepEqual( Stem("strega"), "streg" );
	deepEqual( Stem("streghe"), "streg" );
	deepEqual( Stem("stregoneria"), "stregoner" );
	deepEqual( Stem("stregoni"), "stregon" );
	deepEqual( Stem("stremo"), "strem" );
	deepEqual( Stem("strepita"), "strep" );
	deepEqual( Stem("strepitare"), "strepit" );
	deepEqual( Stem("strepitava"), "strepit" );
	deepEqual( Stem("strepito"), "strep" );
	deepEqual( Stem("strepitosa"), "strepit" );
	deepEqual( Stem("strepitose"), "strepit" );
	deepEqual( Stem("strepitoso"), "strepit" );
	deepEqual( Stem("stress"), "stress" );
	deepEqual( Stem("stretcher"), "stretcher" );
	deepEqual( Stem("stretta"), "strett" );
	deepEqual( Stem("strettala"), "strettal" );
	deepEqual( Stem("strettamente"), "strett" );
	deepEqual( Stem("strette"), "strett" );
	deepEqual( Stem("strettezza"), "strettezz" );
	deepEqual( Stem("strettezze"), "strettezz" );
	deepEqual( Stem("stretti"), "strett" );
	deepEqual( Stem("strettissime"), "strettissim" );
	deepEqual( Stem("stretto"), "strett" );
	deepEqual( Stem("strida"), "strid" );
	deepEqual( Stem("stridere"), "strid" );
	deepEqual( Stem("stridesse"), "stridess" );
	deepEqual( Stem("strike"), "strik" );
	deepEqual( Stem("strillano"), "strill" );
	deepEqual( Stem("strillante"), "strillant" );
	deepEqual( Stem("strillanti"), "strillant" );
	deepEqual( Stem("strillar"), "strill" );
	deepEqual( Stem("strillare"), "strill" );
	deepEqual( Stem("strillassero"), "strill" );
	deepEqual( Stem("stringa"), "string" );
	deepEqual( Stem("stringe"), "string" );
	deepEqual( Stem("stringendo"), "string" );
	deepEqual( Stem("stringendolo"), "string" );
	deepEqual( Stem("stringente"), "stringent" );
	deepEqual( Stem("stringer"), "stringer" );
	deepEqual( Stem("stringere"), "string" );
	deepEqual( Stem("stringeva"), "string" );
	deepEqual( Stem("stringevan"), "stringevan" );
	deepEqual( Stem("stringevano"), "string" );
	deepEqual( Stem("stringono"), "string" );
	deepEqual( Stem("strinse"), "strins" );
	deepEqual( Stem("strinsero"), "strinser" );
	deepEqual( Stem("strisce"), "strisc" );
	deepEqual( Stem("striscia"), "strisc" );
	deepEqual( Stem("strisciando"), "strisc" );
	deepEqual( Stem("strisciava"), "strisc" );
	deepEqual( Stem("strisciò"), "strisc" );
	deepEqual( Stem("striscione"), "striscion" );
	deepEqual( Stem("striscioni"), "striscion" );
	deepEqual( Stem("strofinando"), "strofin" );
	deepEqual( Stem("stromento"), "stroment" );
	deepEqual( Stem("stroncare"), "stronc" );
	deepEqual( Stem("stropicciando"), "stropicc" );
	deepEqual( Stem("stropiccìo"), "stropiccì" );
	deepEqual( Stem("stropicciò"), "stropicc" );
	deepEqual( Stem("strordinario"), "strordinar" );
	deepEqual( Stem("strozzata"), "strozz" );
	deepEqual( Stem("struggersi"), "strugg" );
	deepEqual( Stem("struggeva"), "strugg" );
	deepEqual( Stem("struggevano"), "strugg" );
	deepEqual( Stem("struggimento"), "strugg" );
	deepEqual( Stem("struggo"), "strugg" );
	deepEqual( Stem("strumentali"), "strumental" );
	deepEqual( Stem("strumentalizzare"), "strumentalizz" );
	deepEqual( Stem("strumentalizzata"), "strumentalizz" );
	deepEqual( Stem("strumentalizzazione"), "strumentalizz" );
	deepEqual( Stem("strumentalizzazioni"), "strumentalizz" );
	deepEqual( Stem("strumenti"), "strument" );
	deepEqual( Stem("strumento"), "strument" );
	deepEqual( Stem("struttura"), "struttur" );
	deepEqual( Stem("strutturale"), "struttural" );
	deepEqual( Stem("strutturali"), "struttural" );
	deepEqual( Stem("strutturata"), "struttur" );
	deepEqual( Stem("strutture"), "struttur" );
	deepEqual( Stem("stuart"), "stuart" );
	deepEqual( Stem("stuccata"), "stucc" );
	deepEqual( Stem("stucco"), "stucc" );
	deepEqual( Stem("studentessa"), "studentess" );
	deepEqual( Stem("studentesse"), "studentess" );
	deepEqual( Stem("studenti"), "student" );
	deepEqual( Stem("studi"), "stud" );
	deepEqual( Stem("studiando"), "stud" );
	deepEqual( Stem("studiar"), "stud" );
	deepEqual( Stem("studiare"), "stud" );
	deepEqual( Stem("studiata"), "stud" );
	deepEqual( Stem("studiate"), "stud" );
	deepEqual( Stem("studiati"), "stud" );
	deepEqual( Stem("studiato"), "stud" );
	deepEqual( Stem("studiava"), "stud" );
	deepEqual( Stem("studieremo"), "stud" );
	deepEqual( Stem("studierò"), "stud" );
	deepEqual( Stem("studio"), "stud" );
	deepEqual( Stem("studiò"), "stud" );
	deepEqual( Stem("studiosa"), "studios" );
	deepEqual( Stem("studiosi"), "studios" );
	deepEqual( Stem("stufato"), "stuf" );
	deepEqual( Stem("stuolo"), "stuol" );
	deepEqual( Stem("stupefacenti"), "stupefacent" );
	deepEqual( Stem("stupefatta"), "stupefatt" );
	deepEqual( Stem("stupefatto"), "stupefatt" );
	deepEqual( Stem("stupì"), "stup" );
	deepEqual( Stem("stupida"), "stupid" );
	deepEqual( Stem("stupidaggini"), "stupidaggin" );
	deepEqual( Stem("stupidi"), "stupid" );
	deepEqual( Stem("stupido"), "stupid" );
	deepEqual( Stem("stupire"), "stup" );
	deepEqual( Stem("stupito"), "stup" );
	deepEqual( Stem("stupiva"), "stup" );
	deepEqual( Stem("stupore"), "stupor" );
	deepEqual( Stem("stupri"), "stupr" );
	deepEqual( Stem("stupro"), "stupr" );
	deepEqual( Stem("sturges"), "sturges" );
	deepEqual( Stem("sturzo"), "sturz" );
	deepEqual( Stem("stutus"), "stutus" );
	deepEqual( Stem("stuzzica"), "stuzzic" );
	deepEqual( Stem("stuzzicando"), "stuzzic" );
	deepEqual( Stem("stuzzicar"), "stuzzic" );
	deepEqual( Stem("stuzzicarlo"), "stuzzic" );
	deepEqual( Stem("stuzzicata"), "stuzzic" );
	deepEqual( Stem("stuzzicava"), "stuzzic" );
	deepEqual( Stem("su"), "su" );
	deepEqual( Stem("sua"), "sua" );
	deepEqual( Stem("suard"), "suard" );
	deepEqual( Stem("suarez"), "suarez" );
	deepEqual( Stem("subacquea"), "subacque" );
	deepEqual( Stem("subacquei"), "subacque" );
	deepEqual( Stem("subacqueo"), "subacque" );
	deepEqual( Stem("subalpina"), "subalpin" );
	deepEqual( Stem("subalterni"), "subaltern" );
	deepEqual( Stem("subaru"), "subaru" );
	deepEqual( Stem("subcomandante"), "subcomand" );
	deepEqual( Stem("subentrato"), "subentr" );
	deepEqual( Stem("subentri"), "subentr" );
	deepEqual( Stem("subì"), "sub" );
	deepEqual( Stem("subire"), "sub" );
	deepEqual( Stem("subiremo"), "sub" );
	deepEqual( Stem("subisce"), "sub" );
	deepEqual( Stem("subita"), "sub" );
	deepEqual( Stem("subitamente"), "subit" );
	deepEqual( Stem("subitanea"), "subitane" );
	deepEqual( Stem("subitanei"), "subitane" );
	deepEqual( Stem("subitaneo"), "subitane" );
	deepEqual( Stem("subite"), "sub" );
	deepEqual( Stem("subiti"), "sub" );
	deepEqual( Stem("subito"), "sub" );
	deepEqual( Stem("subjectis"), "subjectis" );
	deepEqual( Stem("sublimata"), "sublim" );
	deepEqual( Stem("sublimazione"), "sublim" );
	deepEqual( Stem("sublimità"), "sublim" );
	deepEqual( Stem("subnormali"), "subnormal" );
	deepEqual( Stem("subordinar"), "subordin" );
	deepEqual( Stem("subordinati"), "subordin" );
	deepEqual( Stem("subordinazione"), "subordin" );
	deepEqual( Stem("subordine"), "subordin" );
	deepEqual( Stem("subtilitate"), "subtilit" );
	deepEqual( Stem("succede"), "succed" );
	deepEqual( Stem("succedendo"), "succed" );
	deepEqual( Stem("succederà"), "succed" );
	deepEqual( Stem("succedere"), "succed" );
	deepEqual( Stem("succedeva"), "succed" );
	deepEqual( Stem("succedevano"), "succed" );
	deepEqual( Stem("succedono"), "succed" );
	deepEqual( Stem("succeduto"), "succed" );
	deepEqual( Stem("succesivamente"), "succes" );
	deepEqual( Stem("successa"), "success" );
	deepEqual( Stem("successe"), "success" );
	deepEqual( Stem("successi"), "success" );
	deepEqual( Stem("successione"), "succession" );
	deepEqual( Stem("successiva"), "success" );
	deepEqual( Stem("successivamente"), "success" );
	deepEqual( Stem("successive"), "success" );
	deepEqual( Stem("successivi"), "success" );
	deepEqual( Stem("successivo"), "success" );
	deepEqual( Stem("successo"), "success" );
	deepEqual( Stem("succhiargli"), "succ" );
	deepEqual( Stem("succhiata"), "succ" );
	deepEqual( Stem("succhiato"), "succ" );
	deepEqual( Stem("succiano"), "succ" );
	deepEqual( Stem("succiarsi"), "succ" );
	deepEqual( Stem("succiarti"), "succ" );
	deepEqual( Stem("succinta"), "succint" );
	deepEqual( Stem("succinti"), "succint" );
	deepEqual( Stem("succinto"), "succint" );
	deepEqual( Stem("sucessi"), "sucess" );
	deepEqual( Stem("sud"), "sud" );
	deepEqual( Stem("suda"), "sud" );
	deepEqual( Stem("sudafrica"), "sudafr" );
	deepEqual( Stem("sudafricano"), "sudafric" );
	deepEqual( Stem("sudamericano"), "sudameric" );
	deepEqual( Stem("sudario"), "sudar" );
	deepEqual( Stem("sudate"), "sud" );
	deepEqual( Stem("suddetta"), "suddett" );
	deepEqual( Stem("suddette"), "suddett" );
	deepEqual( Stem("suddetti"), "suddett" );
	deepEqual( Stem("suddetto"), "suddett" );
	deepEqual( Stem("sudditanza"), "suddit" );
	deepEqual( Stem("sudditi"), "sudd" );
	deepEqual( Stem("suddivisa"), "suddivis" );
	deepEqual( Stem("suddivisione"), "suddivision" );
	deepEqual( Stem("suddiviso"), "suddivis" );
	deepEqual( Stem("sudest"), "sudest" );
	deepEqual( Stem("sudice"), "sudic" );
	deepEqual( Stem("sudiceria"), "sudicer" );
	deepEqual( Stem("sudici"), "sudic" );
	deepEqual( Stem("sudicia"), "sudic" );
	deepEqual( Stem("sudiciume"), "sudicium" );
	deepEqual( Stem("sudor"), "sudor" );
	deepEqual( Stem("sue"), "sue" );
	deepEqual( Stem("sueddeutsche"), "sueddeutsc" );
	deepEqual( Stem("sufficiente"), "sufficient" );
	deepEqual( Stem("sufficienti"), "sufficient" );
	deepEqual( Stem("sufficientmeente"), "sufficientmeent" );
	deepEqual( Stem("sufficienza"), "sufficient" );
	deepEqual( Stem("suggella"), "suggell" );
	deepEqual( Stem("suggerendogliela"), "sugger" );
	deepEqual( Stem("suggerì"), "sugger" );
	deepEqual( Stem("suggerimenti"), "sugger" );
	deepEqual( Stem("suggerimento"), "sugger" );
	deepEqual( Stem("suggerir"), "sugger" );
	deepEqual( Stem("suggerire"), "sugger" );
	deepEqual( Stem("suggerirle"), "sugger" );
	deepEqual( Stem("suggerirlo"), "sugger" );
	deepEqual( Stem("suggerisce"), "sugger" );
	deepEqual( Stem("suggeriscono"), "sugger" );
	deepEqual( Stem("suggerita"), "sugger" );
	deepEqual( Stem("suggerite"), "sugger" );
	deepEqual( Stem("suggerito"), "sugger" );
	deepEqual( Stem("suggeriva"), "sugger" );
	deepEqual( Stem("suggerivano"), "sugger" );
	deepEqual( Stem("suggestiva"), "suggest" );
	deepEqual( Stem("suggezione"), "suggezion" );
	deepEqual( Stem("sugli"), "sugl" );
	deepEqual( Stem("sugo"), "sug" );
	deepEqual( Stem("sui"), "sui" );
	deepEqual( Stem("suicida"), "suicid" );
	deepEqual( Stem("suicidare"), "suicid" );
	deepEqual( Stem("suicidi"), "suicid" );
	deepEqual( Stem("suicidio"), "suicid" );
	deepEqual( Stem("suisse"), "suiss" );
	deepEqual( Stem("sukhoi"), "sukho" );
	deepEqual( Stem("sul"), "sul" );
	deepEqual( Stem("sula"), "sul" );
	deepEqual( Stem("sulcis"), "sulcis" );
	deepEqual( Stem("sull"), "sull" );
	deepEqual( Stem("sulla"), "sull" );
	deepEqual( Stem("sulle"), "sull" );
	deepEqual( Stem("sullo"), "sull" );
	deepEqual( Stem("sullodato"), "sullod" );
	deepEqual( Stem("sulman"), "sulman" );
	deepEqual( Stem("sulta"), "sult" );
	deepEqual( Stem("suma"), "sum" );
	deepEqual( Stem("sumatis"), "sumatis" );
	deepEqual( Stem("summentovate"), "summentov" );
	deepEqual( Stem("summentovato"), "summentov" );
	deepEqual( Stem("sun"), "sun" );
	deepEqual( Stem("sunday"), "sunday" );
	deepEqual( Stem("sunny"), "sunny" );
	deepEqual( Stem("sunti"), "sunt" );
	deepEqual( Stem("sunto"), "sunt" );
	deepEqual( Stem("suo"), "suo" );
	deepEqual( Stem("suocera"), "suocer" );
	deepEqual( Stem("suoi"), "suo" );
	deepEqual( Stem("suol"), "suol" );
	deepEqual( Stem("suolavecchia"), "suolavecc" );
	deepEqual( Stem("suole"), "suol" );
	deepEqual( Stem("suolo"), "suol" );
	deepEqual( Stem("suon"), "suon" );
	deepEqual( Stem("suona"), "suon" );
	deepEqual( Stem("suonando"), "suon" );
	deepEqual( Stem("suonare"), "suon" );
	deepEqual( Stem("suonato"), "suon" );
	deepEqual( Stem("suoneranno"), "suon" );
	deepEqual( Stem("suoni"), "suon" );
	deepEqual( Stem("suono"), "suon" );
	deepEqual( Stem("suora"), "suor" );
	deepEqual( Stem("suore"), "suor" );
	deepEqual( Stem("super"), "super" );
	deepEqual( Stem("supera"), "super" );
	deepEqual( Stem("superagip"), "superagip" );
	deepEqual( Stem("superando"), "super" );
	deepEqual( Stem("superano"), "super" );
	deepEqual( Stem("superar"), "super" );
	deepEqual( Stem("superare"), "super" );
	deepEqual( Stem("superata"), "super" );
	deepEqual( Stem("superate"), "super" );
	deepEqual( Stem("superati"), "super" );
	deepEqual( Stem("superato"), "super" );
	deepEqual( Stem("superatò"), "superat" );
	deepEqual( Stem("superavo"), "super" );
	deepEqual( Stem("superba"), "superb" );
	deepEqual( Stem("superbi"), "superb" );
	deepEqual( Stem("superbia"), "superb" );
	deepEqual( Stem("superbioso"), "superb" );
	deepEqual( Stem("superbo"), "superb" );
	deepEqual( Stem("superbollo"), "superboll" );
	deepEqual( Stem("superboy"), "superboy" );
	deepEqual( Stem("superclassifica"), "superclassif" );
	deepEqual( Stem("superfavorito"), "superfavor" );
	deepEqual( Stem("superficiale"), "superficial" );
	deepEqual( Stem("superficie"), "superfic" );
	deepEqual( Stem("superflui"), "superflu" );
	deepEqual( Stem("superfluità"), "superflu" );
	deepEqual( Stem("superfluo"), "superflu" );
	deepEqual( Stem("superhuman"), "superhuman" );
	deepEqual( Stem("superi"), "super" );
	deepEqual( Stem("superiora"), "superior" );
	deepEqual( Stem("superiore"), "superior" );
	deepEqual( Stem("superiori"), "superior" );
	deepEqual( Stem("superiorità"), "superior" );
	deepEqual( Stem("supermercato"), "supermerc" );
	deepEqual( Stem("superpetroliere"), "superpetrol" );
	deepEqual( Stem("superstite"), "superst" );
	deepEqual( Stem("supervisione"), "supervision" );
	deepEqual( Stem("suppellettile"), "suppellettil" );
	deepEqual( Stem("suppellettili"), "suppellettil" );
	deepEqual( Stem("supplementare"), "supplement" );
	deepEqual( Stem("supplementari"), "supplementar" );
	deepEqual( Stem("supplica"), "supplic" );
	deepEqual( Stem("supplicando"), "supplic" );
	deepEqual( Stem("supplicare"), "supplic" );
	deepEqual( Stem("supplicarono"), "supplic" );
	deepEqual( Stem("supplicazione"), "supplic" );
	deepEqual( Stem("suppliche"), "supplic" );
	deepEqual( Stem("supplichevole"), "supplichevol" );
	deepEqual( Stem("supplichevoli"), "supplichevol" );
	deepEqual( Stem("supplico"), "supplic" );
	deepEqual( Stem("supplimento"), "suppl" );
	deepEqual( Stem("supplire"), "suppl" );
	deepEqual( Stem("supplirlo"), "suppl" );
	deepEqual( Stem("supplisca"), "suppl" );
	deepEqual( Stem("supplisce"), "suppl" );
	deepEqual( Stem("supplito"), "suppl" );
	deepEqual( Stem("supplivano"), "suppl" );
	deepEqual( Stem("supplizi"), "suppliz" );
	deepEqual( Stem("supplizio"), "suppliz" );
	deepEqual( Stem("supply"), "supply" );
	deepEqual( Stem("suppone"), "suppon" );
	deepEqual( Stem("supponendo"), "suppon" );
	deepEqual( Stem("supponendolo"), "suppon" );
	deepEqual( Stem("supponesse"), "supponess" );
	deepEqual( Stem("supponete"), "suppon" );
	deepEqual( Stem("supponeva"), "suppon" );
	deepEqual( Stem("supponiamo"), "suppon" );
	deepEqual( Stem("supporre"), "supporr" );
	deepEqual( Stem("supportati"), "support" );
	deepEqual( Stem("supporti"), "support" );
	deepEqual( Stem("supporto"), "support" );
	deepEqual( Stem("suppose"), "suppos" );
	deepEqual( Stem("supposizione"), "supposizion" );
	deepEqual( Stem("supposizioni"), "supposizion" );
	deepEqual( Stem("supposte"), "suppost" );
	deepEqual( Stem("supposti"), "suppost" );
	deepEqual( Stem("supposto"), "suppost" );
	deepEqual( Stem("suprema"), "suprem" );
	deepEqual( Stem("supremazia"), "supremaz" );
	deepEqual( Stem("supremo"), "suprem" );
	deepEqual( Stem("sur"), "sur" );
	deepEqual( Stem("surplus"), "surplus" );
	deepEqual( Stem("surreale"), "surreal" );
	deepEqual( Stem("surrenti"), "surrent" );
	deepEqual( Stem("surriscaldamento"), "surriscald" );
	deepEqual( Stem("surriscaldata"), "surriscald" );
	deepEqual( Stem("survey"), "survey" );
	deepEqual( Stem("susa"), "sus" );
	deepEqual( Stem("susan"), "susan" );
	deepEqual( Stem("susanna"), "susann" );
	deepEqual( Stem("suscita"), "susc" );
	deepEqual( Stem("suscitando"), "suscit" );
	deepEqual( Stem("suscitar"), "suscit" );
	deepEqual( Stem("suscitare"), "suscit" );
	deepEqual( Stem("suscitarsi"), "suscit" );
	deepEqual( Stem("suscitasse"), "suscit" );
	deepEqual( Stem("suscitate"), "suscit" );
	deepEqual( Stem("suscitati"), "suscit" );
	deepEqual( Stem("suscitato"), "suscit" );
	deepEqual( Stem("suscitò"), "suscit" );
	deepEqual( Stem("susine"), "susin" );
	deepEqual( Stem("susini"), "susin" );
	deepEqual( Stem("susseguendo"), "sussegu" );
	deepEqual( Stem("susseguente"), "susseguent" );
	deepEqual( Stem("susseguiti"), "sussegu" );
	deepEqual( Stem("susseguono"), "sussegu" );
	deepEqual( Stem("sussidi"), "sussid" );
	deepEqual( Stem("sussidiaria"), "sussidiar" );
	deepEqual( Stem("sussidio"), "sussid" );
	deepEqual( Stem("sussiste"), "sussist" );
	deepEqual( Stem("sussistere"), "sussist" );
	deepEqual( Stem("susurrando"), "susurr" );
	deepEqual( Stem("susurrandosi"), "susurr" );
	deepEqual( Stem("susurrare"), "susurr" );
	deepEqual( Stem("susurrava"), "susurr" );
	deepEqual( Stem("susurrìo"), "susurrì" );
	deepEqual( Stem("susurro"), "susurr" );
	deepEqual( Stem("susurrò"), "susurr" );
	deepEqual( Stem("sutar"), "sut" );
	deepEqual( Stem("sutura"), "sutur" );
	deepEqual( Stem("suzhou"), "suzhou" );
	deepEqual( Stem("svagamenti"), "svag" );
	deepEqual( Stem("svagatezza"), "svagatezz" );
	deepEqual( Stem("svago"), "svag" );
	deepEqual( Stem("svaligiate"), "svalig" );
	deepEqual( Stem("svalutato"), "svalut" );
	deepEqual( Stem("svanì"), "svan" );
	deepEqual( Stem("svanire"), "svan" );
	deepEqual( Stem("svanirebbe"), "svan" );
	deepEqual( Stem("svanita"), "svan" );
	deepEqual( Stem("svanito"), "svan" );
	deepEqual( Stem("svaniva"), "svan" );
	deepEqual( Stem("svantaggiati"), "svantagg" );
	deepEqual( Stem("svantaggio"), "svantagg" );
	deepEqual( Stem("svaporare"), "svapor" );
	deepEqual( Stem("svataggiate"), "svatagg" );
	deepEqual( Stem("sve"), "sve" );
	deepEqual( Stem("svedese"), "svedes" );
	deepEqual( Stem("sveglia"), "svegl" );
	deepEqual( Stem("svegliarla"), "svegl" );
	deepEqual( Stem("svegliarsi"), "svegl" );
	deepEqual( Stem("svegliasse"), "svegl" );
	deepEqual( Stem("svegliata"), "svegl" );
	deepEqual( Stem("svegliato"), "svegl" );
	deepEqual( Stem("svegliava"), "svegl" );
	deepEqual( Stem("sveglierà"), "svegl" );
	deepEqual( Stem("sveglio"), "svegl" );
	deepEqual( Stem("svegliò"), "svegl" );
	deepEqual( Stem("svelano"), "svel" );
	deepEqual( Stem("svelare"), "svel" );
	deepEqual( Stem("svelato"), "svel" );
	deepEqual( Stem("svellere"), "svell" );
	deepEqual( Stem("svelte"), "svelt" );
	deepEqual( Stem("sveltire"), "svelt" );
	deepEqual( Stem("sven"), "sven" );
	deepEqual( Stem("svenevole"), "svenevol" );
	deepEqual( Stem("sveng"), "sveng" );
	deepEqual( Stem("svenimenti"), "sven" );
	deepEqual( Stem("svenne"), "svenn" );
	deepEqual( Stem("svenska"), "svensk" );
	deepEqual( Stem("sventa"), "svent" );
	deepEqual( Stem("sventolare"), "sventol" );
	deepEqual( Stem("sventolata"), "sventol" );
	deepEqual( Stem("sventolate"), "sventol" );
	deepEqual( Stem("sventolio"), "sventol" );
	deepEqual( Stem("sventura"), "sventur" );
	deepEqual( Stem("sventurata"), "sventur" );
	deepEqual( Stem("sventurato"), "sventur" );
	deepEqual( Stem("sventure"), "sventur" );
	deepEqual( Stem("svergognandola"), "svergogn" );
	deepEqual( Stem("svergognasse"), "svergogn" );
	deepEqual( Stem("svergognato"), "svergogn" );
	deepEqual( Stem("sversamenti"), "svers" );
	deepEqual( Stem("sversamento"), "svers" );
	deepEqual( Stem("svetlana"), "svetlan" );
	deepEqual( Stem("svezia"), "svez" );
	deepEqual( Stem("svi"), "svi" );
	deepEqual( Stem("sviamento"), "svi" );
	deepEqual( Stem("sviare"), "svi" );
	deepEqual( Stem("sviene"), "svien" );
	deepEqual( Stem("svignò"), "svign" );
	deepEqual( Stem("sviluppa"), "svilupp" );
	deepEqual( Stem("sviluppando"), "svilupp" );
	deepEqual( Stem("sviluppare"), "svilupp" );
	deepEqual( Stem("sviluppata"), "svilupp" );
	deepEqual( Stem("sviluppate"), "svilupp" );
	deepEqual( Stem("sviluppati"), "svilupp" );
	deepEqual( Stem("sviluppato"), "svilupp" );
	deepEqual( Stem("svilupperà"), "svilupp" );
	deepEqual( Stem("sviluppi"), "svilupp" );
	deepEqual( Stem("sviluppo"), "svilupp" );
	deepEqual( Stem("sviluppò"), "svilupp" );
	deepEqual( Stem("svincolandosi"), "svincol" );
	deepEqual( Stem("svincolarsi"), "svincol" );
	deepEqual( Stem("svincolo"), "svincol" );
	deepEqual( Stem("svisceratezza"), "svisceratezz" );
	deepEqual( Stem("sviscerati"), "sviscer" );
	deepEqual( Stem("sviscerato"), "sviscer" );
	deepEqual( Stem("svizzera"), "svizzer" );
	deepEqual( Stem("svizzere"), "svizz" );
	deepEqual( Stem("svizzeri"), "svizzer" );
	deepEqual( Stem("svizzero"), "svizzer" );
	deepEqual( Stem("svk"), "svk" );
	deepEqual( Stem("svogliatamente"), "svogliat" );
	deepEqual( Stem("svogliate"), "svogl" );
	deepEqual( Stem("svogliatezza"), "svogliatezz" );
	deepEqual( Stem("svogliato"), "svogl" );
	deepEqual( Stem("svolazzano"), "svolazz" );
	deepEqual( Stem("svolazzi"), "svolazz" );
	deepEqual( Stem("svolgano"), "svolg" );
	deepEqual( Stem("svolge"), "svolg" );
	deepEqual( Stem("svolgendo"), "svolg" );
	deepEqual( Stem("svolgendosi"), "svolg" );
	deepEqual( Stem("svolgerà"), "svolg" );
	deepEqual( Stem("svolgeranno"), "svolg" );
	deepEqual( Stem("svolgere"), "svolg" );
	deepEqual( Stem("svolgerlo"), "svolg" );
	deepEqual( Stem("svolgersi"), "svolg" );
	deepEqual( Stem("svolgessero"), "svolg" );
	deepEqual( Stem("svolgevano"), "svolg" );
	deepEqual( Stem("svolgimento"), "svolg" );
	deepEqual( Stem("svolgono"), "svolg" );
	deepEqual( Stem("svolse"), "svols" );
	deepEqual( Stem("svolta"), "svolt" );
	deepEqual( Stem("svoltasi"), "svoltas" );
	deepEqual( Stem("svolte"), "svolt" );
	deepEqual( Stem("svoltesi"), "svoltes" );
	deepEqual( Stem("svolti"), "svolt" );
	deepEqual( Stem("svoltisi"), "svoltis" );
	deepEqual( Stem("svolto"), "svolt" );
	deepEqual( Stem("svoltò"), "svolt" );
	deepEqual( Stem("svoltosi"), "svoltos" );
	deepEqual( Stem("swatch"), "swatc" );
	deepEqual( Stem("swcrive"), "swcriv" );
	deepEqual( Stem("sydkraft"), "sydkraft" );
	deepEqual( Stem("sydney"), "sydney" );
	deepEqual( Stem("sylvester"), "sylvester" );
	deepEqual( Stem("symbols"), "symbols" );
	deepEqual( Stem("systems"), "systems" );
	deepEqual( Stem("szabo"), "szab" );
	deepEqual( Stem("szalasi"), "szalas" );
	deepEqual( Stem("t"), "t" );
	deepEqual( Stem("ta"), "ta" );
	deepEqual( Stem("tabacchi"), "tabacc" );
	deepEqual( Stem("tabacco"), "tabacc" );
	deepEqual( Stem("tabarez"), "tabarez" );
	deepEqual( Stem("tabasco"), "tabasc" );
	deepEqual( Stem("tabella"), "tabell" );
	deepEqual( Stem("tabelle"), "tabell" );
	deepEqual( Stem("tabellone"), "tabellon" );
	deepEqual( Stem("tabernacolo"), "tabernacol" );
	deepEqual( Stem("tabladini"), "tabladin" );
	deepEqual( Stem("tabloid"), "tabloid" );
	deepEqual( Stem("tabù"), "tabù" );
	deepEqual( Stem("tacce"), "tacc" );
	deepEqual( Stem("tacchi"), "tacc" );
	deepEqual( Stem("tacchinardi"), "tacchinard" );
	deepEqual( Stem("tacchini"), "tacchin" );
	deepEqual( Stem("tacciato"), "tacc" );
	deepEqual( Stem("tacciavano"), "tacc" );
	deepEqual( Stem("taccio"), "tacc" );
	deepEqual( Stem("tacciono"), "tacc" );
	deepEqual( Stem("taccuino"), "taccuin" );
	deepEqual( Stem("tace"), "tac" );
	deepEqual( Stem("tacendo"), "tac" );
	deepEqual( Stem("tacer"), "tacer" );
	deepEqual( Stem("tacerà"), "tac" );
	deepEqual( Stem("tacere"), "tac" );
	deepEqual( Stem("tacersi"), "tac" );
	deepEqual( Stem("tacessimo"), "tacessim" );
	deepEqual( Stem("tacete"), "tac" );
	deepEqual( Stem("taceva"), "tac" );
	deepEqual( Stem("tacevano"), "tac" );
	deepEqual( Stem("tacitamente"), "tacit" );
	deepEqual( Stem("taciti"), "tac" );
	deepEqual( Stem("tacito"), "tac" );
	deepEqual( Stem("taciuto"), "tac" );
	deepEqual( Stem("tacque"), "tacqu" );
	deepEqual( Stem("taddeo"), "tadde" );
	deepEqual( Stem("tadino"), "tadin" );
	deepEqual( Stem("tafferìa"), "tafferì" );
	deepEqual( Stem("tafferugli"), "tafferugl" );
	deepEqual( Stem("tafferuglio"), "tafferugl" );
	deepEqual( Stem("taffete"), "taff" );
	deepEqual( Stem("tagespiegel"), "tagespiegel" );
	deepEqual( Stem("tagli"), "tagl" );
	deepEqual( Stem("taglia"), "tagl" );
	deepEqual( Stem("tagliando"), "tagl" );
	deepEqual( Stem("tagliare"), "tagl" );
	deepEqual( Stem("tagliarla"), "tagl" );
	deepEqual( Stem("tagliarmi"), "tagl" );
	deepEqual( Stem("tagliata"), "tagl" );
	deepEqual( Stem("tagliati"), "tagl" );
	deepEqual( Stem("tagliato"), "tagl" );
	deepEqual( Stem("tagliavano"), "tagl" );
	deepEqual( Stem("taglie"), "tagl" );
	deepEqual( Stem("tagliente"), "taglient" );
	deepEqual( Stem("taglio"), "tagl" );
	deepEqual( Stem("taglire"), "tagl" );
	deepEqual( Stem("taibi"), "taib" );
	deepEqual( Stem("tailandia"), "tailand" );
	deepEqual( Stem("taipei"), "taipe" );
	deepEqual( Stem("taj"), "taj" );
	deepEqual( Stem("tajani"), "tajan" );
	deepEqual( Stem("takeover"), "takeover" );
	deepEqual( Stem("tal"), "tal" );
	deepEqual( Stem("talamona"), "talamon" );
	deepEqual( Stem("talché"), "talc" );
	deepEqual( Stem("tale"), "tal" );
	deepEqual( Stem("taleban"), "taleban" );
	deepEqual( Stem("talento"), "talent" );
	deepEqual( Stem("tali"), "tal" );
	deepEqual( Stem("talk"), "talk" );
	deepEqual( Stem("tallero"), "taller" );
	deepEqual( Stem("talleur"), "talleur" );
	deepEqual( Stem("talmente"), "talment" );
	deepEqual( Stem("talmenteché"), "talmentec" );
	deepEqual( Stem("talora"), "talor" );
	deepEqual( Stem("talune"), "talun" );
	deepEqual( Stem("taluni"), "talun" );
	deepEqual( Stem("taluno"), "talun" );
	deepEqual( Stem("talvolta"), "talvolt" );
	deepEqual( Stem("tamburella"), "tamburell" );
	deepEqual( Stem("tamburi"), "tambur" );
	deepEqual( Stem("tamburro"), "tamburr" );
	deepEqual( Stem("tamino"), "tamin" );
	deepEqual( Stem("tampa"), "tamp" );
	deepEqual( Stem("tampone"), "tampon" );
	deepEqual( Stem("tana"), "tan" );
	deepEqual( Stem("tanabuso"), "tanabus" );
	deepEqual( Stem("tanagliare"), "tanagl" );
	deepEqual( Stem("tanaglie"), "tanagl" );
	deepEqual( Stem("tane"), "tan" );
	deepEqual( Stem("tanfi"), "tanf" );
	deepEqual( Stem("tanfo"), "tanf" );
	deepEqual( Stem("tangente"), "tangent" );
	deepEqual( Stem("tangenti"), "tangent" );
	deepEqual( Stem("tangentistì"), "tangent" );
	deepEqual( Stem("tangentopoli"), "tangentopol" );
	deepEqual( Stem("tangeri"), "tanger" );
	deepEqual( Stem("tangheri"), "tangher" );
	deepEqual( Stem("tanghero"), "tangher" );
	deepEqual( Stem("tani"), "tan" );
	deepEqual( Stem("tant"), "tant" );
	deepEqual( Stem("tanta"), "tant" );
	deepEqual( Stem("tante"), "tant" );
	deepEqual( Stem("tanti"), "tant" );
	deepEqual( Stem("tantino"), "tantin" );
	deepEqual( Stem("tantissimi"), "tantissim" );
	deepEqual( Stem("tanto"), "tant" );
	deepEqual( Stem("tantomeno"), "tantomen" );
	deepEqual( Stem("tantopiù"), "tantopiù" );
	deepEqual( Stem("tantum"), "tantum" );
	deepEqual( Stem("tanzania"), "tanzan" );
	deepEqual( Stem("taormina"), "taormin" );
	deepEqual( Stem("tappa"), "tapp" );
	deepEqual( Stem("tappare"), "tapp" );
	deepEqual( Stem("tappe"), "tapp" );
	deepEqual( Stem("tappeti"), "tappet" );
	deepEqual( Stem("tappeto"), "tappet" );
	deepEqual( Stem("tappezzate"), "tappezz" );
	deepEqual( Stem("tappezzerie"), "tappezzer" );
	deepEqual( Stem("tappo"), "tapp" );
	deepEqual( Stem("tar"), "tar" );
	deepEqual( Stem("tara"), "tar" );
	deepEqual( Stem("tarantino"), "tarantin" );
	deepEqual( Stem("tarapur"), "tarapur" );
	deepEqual( Stem("tarcagnota"), "tarcagnot" );
	deepEqual( Stem("tarchiati"), "tarc" );
	deepEqual( Stem("tarda"), "tard" );
	deepEqual( Stem("tardare"), "tard" );
	deepEqual( Stem("tardato"), "tard" );
	deepEqual( Stem("tarde"), "tard" );
	deepEqual( Stem("tardelli"), "tardell" );
	deepEqual( Stem("tardi"), "tard" );
	deepEqual( Stem("tardini"), "tardin" );
	deepEqual( Stem("tarditi"), "tard" );
	deepEqual( Stem("tardivamente"), "tardiv" );
	deepEqual( Stem("tardo"), "tard" );
	deepEqual( Stem("tardò"), "tard" );
	deepEqual( Stem("tardocomunista"), "tardocomun" );
	deepEqual( Stem("targa"), "targ" );
	deepEqual( Stem("targata"), "targ" );
	deepEqual( Stem("target"), "target" );
	deepEqual( Stem("tariffa"), "tariff" );
	deepEqual( Stem("tariffaria"), "tariffar" );
	deepEqual( Stem("tariffe"), "tariff" );
	deepEqual( Stem("tarnoff"), "tarnoff" );
	deepEqual( Stem("taro"), "tar" );
	deepEqual( Stem("tartaglia"), "tartagl" );
	deepEqual( Stem("tartassati"), "tartass" );
	deepEqual( Stem("tarvisium"), "tarvisium" );
	deepEqual( Stem("tasca"), "tasc" );
	deepEqual( Stem("tasche"), "tasc" );
	deepEqual( Stem("taschino"), "taschin" );
	deepEqual( Stem("task"), "task" );
	deepEqual( Stem("taslima"), "taslim" );
	deepEqual( Stem("tass"), "tass" );
	deepEqual( Stem("tassa"), "tass" );
	deepEqual( Stem("tassato"), "tass" );
	deepEqual( Stem("tassazione"), "tassazion" );
	deepEqual( Stem("tasse"), "tass" );
	deepEqual( Stem("tassi"), "tass" );
	deepEqual( Stem("tasso"), "tass" );
	deepEqual( Stem("tassone"), "tasson" );
	deepEqual( Stem("tastare"), "tast" );
	deepEqual( Stem("tastarlo"), "tast" );
	deepEqual( Stem("tasto"), "tast" );
	deepEqual( Stem("tastone"), "taston" );
	deepEqual( Stem("tastoni"), "taston" );
	deepEqual( Stem("tata"), "tat" );
	deepEqual( Stem("tatarella"), "tatarell" );
	deepEqual( Stem("tattica"), "tattic" );
	deepEqual( Stem("tattiche"), "tattic" );
	deepEqual( Stem("tatto"), "tatt" );
	deepEqual( Stem("tatuaggi"), "tatuagg" );
	deepEqual( Stem("tatyana"), "tatyan" );
	deepEqual( Stem("tauber"), "tauber" );
	deepEqual( Stem("tauro"), "taur" );
	deepEqual( Stem("tav"), "tav" );
	deepEqual( Stem("tavawal"), "tavawal" );
	deepEqual( Stem("taverna"), "tavern" );
	deepEqual( Stem("tavernai"), "taverna" );
	deepEqual( Stem("taverne"), "tav" );
	deepEqual( Stem("tavola"), "tavol" );
	deepEqual( Stem("tavole"), "tavol" );
	deepEqual( Stem("tavoli"), "tavol" );
	deepEqual( Stem("tavoliere"), "tavol" );
	deepEqual( Stem("tavolino"), "tavolin" );
	deepEqual( Stem("tavolo"), "tavol" );
	deepEqual( Stem("tax"), "tax" );
	deepEqual( Stem("tay"), "tay" );
	deepEqual( Stem("taylor"), "taylor" );
	deepEqual( Stem("tb"), "tb" );
	deepEqual( Stem("tbc"), "tbc" );
	deepEqual( Stem("tc"), "tc" );
	deepEqual( Stem("te"), "te" );
	deepEqual( Stem("tè"), "tè" );
	deepEqual( Stem("teague"), "teagu" );
	deepEqual( Stem("teatro"), "teatr" );
	deepEqual( Stem("tebaide"), "tebaid" );
	deepEqual( Stem("technology"), "technology" );
	deepEqual( Stem("tecla"), "tecl" );
	deepEqual( Stem("tecnica"), "tecnic" );
	deepEqual( Stem("tecnicà"), "tecnic" );
	deepEqual( Stem("tecnicamente"), "tecnic" );
	deepEqual( Stem("tecniche"), "tecnic" );
	deepEqual( Stem("tecnichè"), "tecnic" );
	deepEqual( Stem("tecnici"), "tecnic" );
	deepEqual( Stem("tecnico"), "tecnic" );
	deepEqual( Stem("tecnologia"), "tecnolog" );
	deepEqual( Stem("tecnologica"), "tecnolog" );
	deepEqual( Stem("tecnologico"), "tecnolog" );
	deepEqual( Stem("tecnologie"), "tecnolog" );
	deepEqual( Stem("tecnost"), "tecnost" );
	deepEqual( Stem("tedesca"), "tedesc" );
	deepEqual( Stem("tedesche"), "tedesc" );
	deepEqual( Stem("tedeschi"), "tedesc" );
	deepEqual( Stem("tedesco"), "tedesc" );
	deepEqual( Stem("tediarla"), "ted" );
	deepEqual( Stem("tedio"), "ted" );
	deepEqual( Stem("tegame"), "tegam" );
	deepEqual( Stem("tegolaia"), "tegolai" );
	deepEqual( Stem("tegoli"), "tegol" );
	deepEqual( Stem("teheran"), "teheran" );
	deepEqual( Stem("teknecomp"), "teknecomp" );
	deepEqual( Stem("tel"), "tel" );
	deepEqual( Stem("tela"), "tel" );
	deepEqual( Stem("telam"), "telam" );
	deepEqual( Stem("tele"), "tel" );
	deepEqual( Stem("telecamere"), "telecam" );
	deepEqual( Stem("teleco"), "telec" );
	deepEqual( Stem("telecom"), "telecom" );
	deepEqual( Stem("telecomandata"), "telecomand" );
	deepEqual( Stem("telecomunicazioni"), "telecomun" );
	deepEqual( Stem("telefilm"), "telefilm" );
	deepEqual( Stem("telefona"), "telefon" );
	deepEqual( Stem("telefonare"), "telefon" );
	deepEqual( Stem("telefonata"), "telefon" );
	deepEqual( Stem("telefonate"), "telefon" );
	deepEqual( Stem("telefonato"), "telefon" );
	deepEqual( Stem("telefoni"), "telefon" );
	deepEqual( Stem("telefonica"), "telefon" );
	deepEqual( Stem("telefonicamente"), "telefon" );
	deepEqual( Stem("telefoniche"), "telefon" );
	deepEqual( Stem("telefonici"), "telefon" );
	deepEqual( Stem("telefonico"), "telefon" );
	deepEqual( Stem("telefonini"), "telefonin" );
	deepEqual( Stem("telefonino"), "telefonin" );
	deepEqual( Stem("telefono"), "telef" );
	deepEqual( Stem("telefoto"), "telefot" );
	deepEqual( Stem("telegiornale"), "telegiornal" );
	deepEqual( Stem("telegiornali"), "telegiornal" );
	deepEqual( Stem("telegrafico"), "telegraf" );
	deepEqual( Stem("telegramma"), "telegramm" );
	deepEqual( Stem("telegrammi"), "telegramm" );
	deepEqual( Stem("telegraph"), "telegraph" );
	deepEqual( Stem("telematica"), "telemat" );
	deepEqual( Stem("telematiche"), "telemat" );
	deepEqual( Stem("telematici"), "telemat" );
	deepEqual( Stem("telematico"), "telemat" );
	deepEqual( Stem("telemontecarlo"), "telemontec" );
	deepEqual( Stem("telenovela"), "telenovel" );
	deepEqual( Stem("teleoperatori"), "teleoper" );
	deepEqual( Stem("teleromanzo"), "teleromanz" );
	deepEqual( Stem("teleschermo"), "telescherm" );
	deepEqual( Stem("telescrivente"), "telescrivent" );
	deepEqual( Stem("telesis"), "telesis" );
	deepEqual( Stem("telespettatori"), "telespett" );
	deepEqual( Stem("telethon"), "telethon" );
	deepEqual( Stem("televendite"), "televend" );
	deepEqual( Stem("television"), "television" );
	deepEqual( Stem("televisione"), "television" );
	deepEqual( Stem("televisioni"), "television" );
	deepEqual( Stem("televisiva"), "televis" );
	deepEqual( Stem("televisive"), "televis" );
	deepEqual( Stem("televisivi"), "televis" );
	deepEqual( Stem("televisivo"), "televis" );
	deepEqual( Stem("tellurico"), "tellur" );
	deepEqual( Stem("telo"), "tel" );
	deepEqual( Stem("telone"), "telon" );
	deepEqual( Stem("teloni"), "telon" );
	deepEqual( Stem("telsystem"), "telsystem" );
	deepEqual( Stem("tema"), "tem" );
	deepEqual( Stem("tematiche"), "temat" );
	deepEqual( Stem("tembile"), "tembil" );
	deepEqual( Stem("teme"), "tem" );
	deepEqual( Stem("temendo"), "tem" );
	deepEqual( Stem("temer"), "temer" );
	deepEqual( Stem("temeraria"), "temerar" );
	deepEqual( Stem("temerarie"), "temerar" );
	deepEqual( Stem("temerarij"), "temerarij" );
	deepEqual( Stem("temerario"), "temerar" );
	deepEqual( Stem("temere"), "tem" );
	deepEqual( Stem("temerità"), "temer" );
	deepEqual( Stem("temerlo"), "tem" );
	deepEqual( Stem("temesse"), "temess" );
	deepEqual( Stem("temessero"), "tem" );
	deepEqual( Stem("temeva"), "tem" );
	deepEqual( Stem("temevano"), "tem" );
	deepEqual( Stem("temi"), "tem" );
	deepEqual( Stem("temibile"), "temibil" );
	deepEqual( Stem("temo"), "tem" );
	deepEqual( Stem("temono"), "tem" );
	deepEqual( Stem("tempera"), "temper" );
	deepEqual( Stem("temperamenti"), "temper" );
	deepEqual( Stem("temperamento"), "temper" );
	deepEqual( Stem("temperar"), "temper" );
	deepEqual( Stem("temperare"), "temper" );
	deepEqual( Stem("temperata"), "temper" );
	deepEqual( Stem("temperate"), "temper" );
	deepEqual( Stem("temperato"), "temper" );
	deepEqual( Stem("temperatura"), "temperatur" );
	deepEqual( Stem("temperature"), "temperatur" );
	deepEqual( Stem("temperò"), "temp" );
	deepEqual( Stem("tempesta"), "tempest" );
	deepEqual( Stem("tempestare"), "tempest" );
	deepEqual( Stem("tempestarlo"), "tempest" );
	deepEqual( Stem("tempestata"), "tempest" );
	deepEqual( Stem("tempestate"), "tempest" );
	deepEqual( Stem("tempestati"), "tempest" );
	deepEqual( Stem("tempestava"), "tempest" );
	deepEqual( Stem("tempeste"), "tempest" );
	deepEqual( Stem("tempestiva"), "tempest" );
	deepEqual( Stem("tempestività"), "tempest" );
	deepEqual( Stem("tempestivo"), "tempest" );
	deepEqual( Stem("tempestoso"), "tempest" );
	deepEqual( Stem("tempi"), "temp" );
	deepEqual( Stem("tempia"), "temp" );
	deepEqual( Stem("tempie"), "temp" );
	deepEqual( Stem("tempio"), "temp" );
	deepEqual( Stem("tempo"), "temp" );
	deepEqual( Stem("temporale"), "temporal" );
	deepEqual( Stem("temporali"), "temporal" );
	deepEqual( Stem("temporanea"), "temporane" );
	deepEqual( Stem("temporaneamente"), "temporan" );
	deepEqual( Stem("temporanei"), "temporane" );
	deepEqual( Stem("temporariamente"), "temporar" );
	deepEqual( Stem("tempore"), "tempor" );
	deepEqual( Stem("temporum"), "temporum" );
	deepEqual( Stem("tempra"), "tempr" );
	deepEqual( Stem("temuta"), "tem" );
	deepEqual( Stem("temuto"), "tem" );
	deepEqual( Stem("tenace"), "tenac" );
	deepEqual( Stem("tenacia"), "tenac" );
	deepEqual( Stem("tenaglia"), "tenagl" );
	deepEqual( Stem("tendaggi"), "tendagg" );
	deepEqual( Stem("tende"), "tend" );
	deepEqual( Stem("tendendo"), "tend" );
	deepEqual( Stem("tendenti"), "tendent" );
	deepEqual( Stem("tendenza"), "tendenz" );
	deepEqual( Stem("tendenze"), "tendenz" );
	deepEqual( Stem("tendenzialmente"), "tendenzial" );
	deepEqual( Stem("tender"), "tender" );
	deepEqual( Stem("tenderà"), "tend" );
	deepEqual( Stem("tendere"), "tend" );
	deepEqual( Stem("tendesse"), "tendess" );
	deepEqual( Stem("tendeva"), "tend" );
	deepEqual( Stem("tendevan"), "tendevan" );
	deepEqual( Stem("tendevano"), "tend" );
	deepEqual( Stem("tendina"), "tendin" );
	deepEqual( Stem("tendine"), "tendin" );
	deepEqual( Stem("tendon"), "tendon" );
	deepEqual( Stem("tendone"), "tendon" );
	deepEqual( Stem("tendono"), "tend" );
	deepEqual( Stem("tenebre"), "tenebr" );
	deepEqual( Stem("tenebrosi"), "tenebr" );
	deepEqual( Stem("tenebroso"), "tenebr" );
	deepEqual( Stem("tenendo"), "ten" );
	deepEqual( Stem("tenendola"), "ten" );
	deepEqual( Stem("tenendolo"), "ten" );
	deepEqual( Stem("tenendone"), "ten" );
	deepEqual( Stem("tenendosi"), "ten" );
	deepEqual( Stem("tenendovi"), "ten" );
	deepEqual( Stem("tenente"), "tenent" );
	deepEqual( Stem("tener"), "tener" );
	deepEqual( Stem("tenera"), "tener" );
	deepEqual( Stem("tenere"), "ten" );
	deepEqual( Stem("tenerezza"), "tenerezz" );
	deepEqual( Stem("tenerezze"), "tenerezz" );
	deepEqual( Stem("tenergli"), "ten" );
	deepEqual( Stem("teneri"), "tener" );
	deepEqual( Stem("tenerla"), "ten" );
	deepEqual( Stem("tenerli"), "ten" );
	deepEqual( Stem("tenerlo"), "ten" );
	deepEqual( Stem("tenerne"), "ten" );
	deepEqual( Stem("tenero"), "tener" );
	deepEqual( Stem("tenersi"), "ten" );
	deepEqual( Stem("tenervi"), "ten" );
	deepEqual( Stem("tenesse"), "teness" );
	deepEqual( Stem("tenessero"), "ten" );
	deepEqual( Stem("tenete"), "ten" );
	deepEqual( Stem("teneteli"), "tenetel" );
	deepEqual( Stem("teneva"), "ten" );
	deepEqual( Stem("tenevan"), "tenevan" );
	deepEqual( Stem("tenevano"), "ten" );
	deepEqual( Stem("tenevo"), "ten" );
	deepEqual( Stem("tenga"), "teng" );
	deepEqual( Stem("tengo"), "teng" );
	deepEqual( Stem("tengon"), "tengon" );
	deepEqual( Stem("tengono"), "teng" );
	deepEqual( Stem("teniamo"), "ten" );
	deepEqual( Stem("tenne"), "tenn" );
	deepEqual( Stem("tennero"), "tenner" );
	deepEqual( Stem("tennis"), "tennis" );
	deepEqual( Stem("tennista"), "tennist" );
	deepEqual( Stem("tenor"), "tenor" );
	deepEqual( Stem("tenore"), "tenor" );
	deepEqual( Stem("tensione"), "tension" );
	deepEqual( Stem("tensioni"), "tension" );
	deepEqual( Stem("tensostruttura"), "tensostruttur" );
	deepEqual( Stem("tenta"), "tent" );
	deepEqual( Stem("tentacoli"), "tentacol" );
	deepEqual( Stem("tentando"), "tent" );
	deepEqual( Stem("tentano"), "tent" );
	deepEqual( Stem("tentar"), "tent" );
	deepEqual( Stem("tentare"), "tent" );
	deepEqual( Stem("tentarmi"), "tent" );
	deepEqual( Stem("tentarne"), "tent" );
	deepEqual( Stem("tentata"), "tent" );
	deepEqual( Stem("tentativi"), "tentat" );
	deepEqual( Stem("tentativo"), "tentat" );
	deepEqual( Stem("tentato"), "tent" );
	deepEqual( Stem("tentava"), "tent" );
	deepEqual( Stem("tentavano"), "tent" );
	deepEqual( Stem("tentazion"), "tentazion" );
	deepEqual( Stem("tentazione"), "tentazion" );
	deepEqual( Stem("tentazioni"), "tentazion" );
	deepEqual( Stem("tentennando"), "tentenn" );
	deepEqual( Stem("tentennare"), "tentenn" );
	deepEqual( Stem("tentennata"), "tentenn" );
	deepEqual( Stem("tentennatina"), "tentennatin" );
	deepEqual( Stem("tentennava"), "tentenn" );
	deepEqual( Stem("tentennò"), "tentenn" );
	deepEqual( Stem("tenterà"), "tent" );
	deepEqual( Stem("tenterò"), "tent" );
	deepEqual( Stem("tentò"), "tent" );
	deepEqual( Stem("tentoni"), "tenton" );
	deepEqual( Stem("tenuta"), "ten" );
	deepEqual( Stem("tenute"), "ten" );
	deepEqual( Stem("tenuti"), "ten" );
	deepEqual( Stem("tenuto"), "ten" );
	deepEqual( Stem("teologia"), "teolog" );
	deepEqual( Stem("teologià"), "teolog" );
	deepEqual( Stem("teologici"), "teolog" );
	deepEqual( Stem("teoria"), "teor" );
	deepEqual( Stem("teorico"), "teoric" );
	deepEqual( Stem("teorie"), "teor" );
	deepEqual( Stem("tepeyac"), "tepeyac" );
	deepEqual( Stem("tepeyec"), "tepeyec" );
	deepEqual( Stem("tepida"), "tepid" );
	deepEqual( Stem("tepido"), "tepid" );
	deepEqual( Stem("tepore"), "tepor" );
	deepEqual( Stem("teppismo"), "teppism" );
	deepEqual( Stem("teppista"), "teppist" );
	deepEqual( Stem("teppisti"), "teppist" );
	deepEqual( Stem("teppistici"), "teppist" );
	deepEqual( Stem("teramo"), "teram" );
	deepEqual( Stem("terapeutico"), "terapeut" );
	deepEqual( Stem("terapia"), "terap" );
	deepEqual( Stem("teresa"), "teres" );
	deepEqual( Stem("teresio"), "teres" );
	deepEqual( Stem("tergiversazioni"), "tergivers" );
	deepEqual( Stem("teri"), "ter" );
	deepEqual( Stem("termas"), "termas" );
	deepEqual( Stem("terme"), "term" );
	deepEqual( Stem("termica"), "termic" );
	deepEqual( Stem("termici"), "termic" );
	deepEqual( Stem("termina"), "termin" );
	deepEqual( Stem("terminal"), "terminal" );
	deepEqual( Stem("terminale"), "terminal" );
	deepEqual( Stem("terminalisti"), "terminal" );
	deepEqual( Stem("terminare"), "termin" );
	deepEqual( Stem("terminarsi"), "termin" );
	deepEqual( Stem("terminasse"), "termin" );
	deepEqual( Stem("terminata"), "termin" );
	deepEqual( Stem("terminate"), "termin" );
	deepEqual( Stem("terminato"), "termin" );
	deepEqual( Stem("terminava"), "termin" );
	deepEqual( Stem("terminavano"), "termin" );
	deepEqual( Stem("termine"), "termin" );
	deepEqual( Stem("terminerà"), "termin" );
	deepEqual( Stem("termineranno"), "termin" );
	deepEqual( Stem("termini"), "termin" );
	deepEqual( Stem("terminò"), "termin" );
	deepEqual( Stem("terni"), "tern" );
	deepEqual( Stem("terra"), "terr" );
	deepEqual( Stem("terrà"), "terr" );
	deepEqual( Stem("terrace"), "terrac" );
	deepEqual( Stem("terracenere"), "terracen" );
	deepEqual( Stem("terraferma"), "terraferm" );
	deepEqual( Stem("terranno"), "terrann" );
	deepEqual( Stem("terranova"), "terranov" );
	deepEqual( Stem("terranuova"), "terranuov" );
	deepEqual( Stem("terrapieni"), "terrapien" );
	deepEqual( Stem("terrapieno"), "terrapien" );
	deepEqual( Stem("terrazzino"), "terrazzin" );
	deepEqual( Stem("terre"), "terr" );
	deepEqual( Stem("terrea"), "terre" );
	deepEqual( Stem("terremoto"), "terremot" );
	deepEqual( Stem("terrena"), "terren" );
	deepEqual( Stem("terrene"), "terren" );
	deepEqual( Stem("terreni"), "terren" );
	deepEqual( Stem("terreno"), "terren" );
	deepEqual( Stem("terrestre"), "terrestr" );
	deepEqual( Stem("terribil"), "terribil" );
	deepEqual( Stem("terribile"), "terribil" );
	deepEqual( Stem("terribili"), "terribil" );
	deepEqual( Stem("terribilmente"), "terribil" );
	deepEqual( Stem("terricciola"), "terricciol" );
	deepEqual( Stem("terrieri"), "terrier" );
	deepEqual( Stem("terrificanti"), "terrific" );
	deepEqual( Stem("territori"), "territor" );
	deepEqual( Stem("territoriale"), "territorial" );
	deepEqual( Stem("territoriali"), "territorial" );
	deepEqual( Stem("territorij"), "territorij" );
	deepEqual( Stem("territorio"), "territor" );
	deepEqual( Stem("terrò"), "terr" );
	deepEqual( Stem("terror"), "terror" );
	deepEqual( Stem("terrore"), "terror" );
	deepEqual( Stem("terrori"), "terror" );
	deepEqual( Stem("terrorismo"), "terror" );
	deepEqual( Stem("terrorismò"), "terrorism" );
	deepEqual( Stem("terroristi"), "terror" );
	deepEqual( Stem("terroristica"), "terrorist" );
	deepEqual( Stem("terroristici"), "terrorist" );
	deepEqual( Stem("terrorizzando"), "terrorizz" );
	deepEqual( Stem("terrorizzato"), "terrorizz" );
	deepEqual( Stem("terry"), "terry" );
	deepEqual( Stem("terza"), "terz" );
	deepEqual( Stem("terzetta"), "terzett" );
	deepEqual( Stem("terzetto"), "terzett" );
	deepEqual( Stem("terzi"), "terz" );
	deepEqual( Stem("terzino"), "terzin" );
	deepEqual( Stem("terzo"), "terz" );
	deepEqual( Stem("terzultima"), "terzultim" );
	deepEqual( Stem("tesa"), "tes" );
	deepEqual( Stem("teschi"), "tesc" );
	deepEqual( Stem("teschietto"), "teschiett" );
	deepEqual( Stem("teschio"), "tesc" );
	deepEqual( Stem("tese"), "tes" );
	deepEqual( Stem("tesi"), "tes" );
	deepEqual( Stem("teso"), "tes" );
	deepEqual( Stem("tesoreria"), "tesorer" );
	deepEqual( Stem("tesoretto"), "tesorett" );
	deepEqual( Stem("tesori"), "tesor" );
	deepEqual( Stem("tesoriere"), "tesor" );
	deepEqual( Stem("tesoro"), "tesor" );
	deepEqual( Stem("tessera"), "tesser" );
	deepEqual( Stem("tesseramento"), "tesser" );
	deepEqual( Stem("tessere"), "tess" );
	deepEqual( Stem("tessile"), "tessil" );
	deepEqual( Stem("tessili"), "tessil" );
	deepEqual( Stem("tessitore"), "tessitor" );
	deepEqual( Stem("tessitrici"), "tessitr" );
	deepEqual( Stem("tessuto"), "tess" );
	deepEqual( Stem("test"), "test" );
	deepEqual( Stem("testa"), "test" );
	deepEqual( Stem("testamento"), "test" );
	deepEqual( Stem("testardo"), "testard" );
	deepEqual( Stem("testata"), "test" );
	deepEqual( Stem("testate"), "test" );
	deepEqual( Stem("testatori"), "testator" );
	deepEqual( Stem("teste"), "test" );
	deepEqual( Stem("testi"), "test" );
	deepEqual( Stem("testifichi"), "testif" );
	deepEqual( Stem("testimone"), "testimon" );
	deepEqual( Stem("testimoni"), "testimon" );
	deepEqual( Stem("testimonianza"), "testimon" );
	deepEqual( Stem("testimonianze"), "testimon" );
	deepEqual( Stem("testimoniare"), "testimon" );
	deepEqual( Stem("testimoniato"), "testimon" );
	deepEqual( Stem("testimonio"), "testimon" );
	deepEqual( Stem("testimonj"), "testimonj" );
	deepEqual( Stem("testina"), "testin" );
	deepEqual( Stem("testo"), "test" );
	deepEqual( Stem("testolina"), "testolin" );
	deepEqual( Stem("tetri"), "tetr" );
	deepEqual( Stem("tetti"), "tett" );
	deepEqual( Stem("tetto"), "tett" );
	deepEqual( Stem("tettò"), "tett" );
	deepEqual( Stem("tettoia"), "tettoi" );
	deepEqual( Stem("teu"), "teu" );
	deepEqual( Stem("texas"), "texas" );
	deepEqual( Stem("texmantova"), "texmantov" );
	deepEqual( Stem("teyssier"), "teyssier" );
	deepEqual( Stem("tg"), "tg" );
	deepEqual( Stem("thailand"), "thailand" );
	deepEqual( Stem("thailandese"), "thailandes" );
	deepEqual( Stem("thailandia"), "thailand" );
	deepEqual( Stem("thaler"), "thaler" );
	deepEqual( Stem("the"), "the" );
	deepEqual( Stem("theatre"), "theatr" );
	deepEqual( Stem("theo"), "the" );
	deepEqual( Stem("theresa"), "theres" );
	deepEqual( Stem("thermie"), "therm" );
	deepEqual( Stem("thern"), "thern" );
	deepEqual( Stem("thiry"), "thiry" );
	deepEqual( Stem("thomas"), "thomas" );
	deepEqual( Stem("thorn"), "thorn" );
	deepEqual( Stem("thriller"), "thriller" );
	deepEqual( Stem("ti"), "ti" );
	deepEqual( Stem("ticinese"), "ticines" );
	deepEqual( Stem("ticket"), "ticket" );
	deepEqual( Stem("tiempo"), "tiemp" );
	deepEqual( Stem("tien"), "tien" );
	deepEqual( Stem("tiene"), "tien" );
	deepEqual( Stem("tienla"), "tienl" );
	deepEqual( Stem("tienlo"), "tienl" );
	deepEqual( Stem("tiepido"), "tiepid" );
	deepEqual( Stem("tieri"), "tier" );
	deepEqual( Stem("tietmeyer"), "tietmeyer" );
	deepEqual( Stem("tifato"), "tif" );
	deepEqual( Stem("tifo"), "tif" );
	deepEqual( Stem("tifoseria"), "tifoser" );
	deepEqual( Stem("tifoserie"), "tifoser" );
	deepEqual( Stem("tifosi"), "tifos" );
	deepEqual( Stem("tifoso"), "tifos" );
	deepEqual( Stem("tigri"), "tigr" );
	deepEqual( Stem("tigullio"), "tigull" );
	deepEqual( Stem("tilt"), "tilt" );
	deepEqual( Stem("time"), "tim" );
	deepEqual( Stem("timeo"), "time" );
	deepEqual( Stem("times"), "times" );
	deepEqual( Stem("timicin"), "timicin" );
	deepEqual( Stem("timida"), "timid" );
	deepEqual( Stem("timidamente"), "timid" );
	deepEqual( Stem("timidezza"), "timidezz" );
	deepEqual( Stem("timido"), "timid" );
	deepEqual( Stem("timoniere"), "timon" );
	deepEqual( Stem("timor"), "timor" );
	deepEqual( Stem("timorato"), "timor" );
	deepEqual( Stem("timore"), "timor" );
	deepEqual( Stem("timori"), "timor" );
	deepEqual( Stem("timoroso"), "timor" );
	deepEqual( Stem("timpano"), "timp" );
	deepEqual( Stem("tina"), "tin" );
	deepEqual( Stem("tinello"), "tinell" );
	deepEqual( Stem("tingano"), "ting" );
	deepEqual( Stem("tino"), "tin" );
	deepEqual( Stem("tinta"), "tint" );
	deepEqual( Stem("tinte"), "tint" );
	deepEqual( Stem("tintinnìo"), "tintinnì" );
	deepEqual( Stem("tipi"), "tip" );
	deepEqual( Stem("tipica"), "tipic" );
	deepEqual( Stem("tipici"), "tipic" );
	deepEqual( Stem("tipico"), "tipic" );
	deepEqual( Stem("tipo"), "tip" );
	deepEqual( Stem("tipologie"), "tipolog" );
	deepEqual( Stem("tira"), "tir" );
	deepEqual( Stem("tiraccio"), "tiracc" );
	deepEqual( Stem("tiradritto"), "tiradritt" );
	deepEqual( Stem("tirala"), "tiral" );
	deepEqual( Stem("tiran"), "tiran" );
	deepEqual( Stem("tirana"), "tiran" );
	deepEqual( Stem("tirando"), "tir" );
	deepEqual( Stem("tirandosela"), "tirandosel" );
	deepEqual( Stem("tirandosi"), "tir" );
	deepEqual( Stem("tiranna"), "tirann" );
	deepEqual( Stem("tiranneggiar"), "tirannegg" );
	deepEqual( Stem("tiranneggiati"), "tirannegg" );
	deepEqual( Stem("tirannello"), "tirannell" );
	deepEqual( Stem("tiranni"), "tirann" );
	deepEqual( Stem("tirannia"), "tirann" );
	deepEqual( Stem("tirannici"), "tirann" );
	deepEqual( Stem("tirannide"), "tirannid" );
	deepEqual( Stem("tirannie"), "tirann" );
	deepEqual( Stem("tiranno"), "tirann" );
	deepEqual( Stem("tirano"), "tir" );
	deepEqual( Stem("tirapiedi"), "tirapied" );
	deepEqual( Stem("tirar"), "tir" );
	deepEqual( Stem("tirare"), "tir" );
	deepEqual( Stem("tirarla"), "tir" );
	deepEqual( Stem("tirarli"), "tir" );
	deepEqual( Stem("tirarlo"), "tir" );
	deepEqual( Stem("tirarmi"), "tir" );
	deepEqual( Stem("tiraron"), "tiraron" );
	deepEqual( Stem("tirarsene"), "tir" );
	deepEqual( Stem("tirarsi"), "tir" );
	deepEqual( Stem("tirassero"), "tir" );
	deepEqual( Stem("tirassi"), "tir" );
	deepEqual( Stem("tirata"), "tir" );
	deepEqual( Stem("tiratala"), "tiratal" );
	deepEqual( Stem("tirate"), "tir" );
	deepEqual( Stem("tiratela"), "tiratel" );
	deepEqual( Stem("tirati"), "tir" );
	deepEqual( Stem("tirato"), "tir" );
	deepEqual( Stem("tiratolo"), "tiratol" );
	deepEqual( Stem("tirava"), "tir" );
	deepEqual( Stem("tiravan"), "tiravan" );
	deepEqual( Stem("tiravano"), "tir" );
	deepEqual( Stem("tiri"), "tir" );
	deepEqual( Stem("tiriamo"), "tir" );
	deepEqual( Stem("tirin"), "tirin" );
	deepEqual( Stem("tirinato"), "tirin" );
	deepEqual( Stem("tiro"), "tir" );
	deepEqual( Stem("tirò"), "tir" );
	deepEqual( Stem("tirreniche"), "tirren" );
	deepEqual( Stem("tirreno"), "tirren" );
	deepEqual( Stem("tisch"), "tisc" );
	deepEqual( Stem("tishvin"), "tishvin" );
	deepEqual( Stem("tisico"), "tisic" );
	deepEqual( Stem("tisiologia"), "tisiolog" );
	deepEqual( Stem("titanic"), "titanic" );
	deepEqual( Stem("titola"), "titol" );
	deepEqual( Stem("titolare"), "titol" );
	deepEqual( Stem("titolari"), "titolar" );
	deepEqual( Stem("titolarità"), "titolar" );
	deepEqual( Stem("titolati"), "titol" );
	deepEqual( Stem("titolato"), "titol" );
	deepEqual( Stem("titoli"), "titol" );
	deepEqual( Stem("titolo"), "titol" );
	deepEqual( Stem("tittarelli"), "tittarell" );
	deepEqual( Stem("titubanti"), "titub" );
	deepEqual( Stem("titubanza"), "titub" );
	deepEqual( Stem("titubate"), "titub" );
	deepEqual( Stem("titubazione"), "titub" );
	deepEqual( Stem("tivonchik"), "tivonchik" );
	deepEqual( Stem("tiziana"), "tizian" );
	deepEqual( Stem("tiziano"), "tiz" );
	deepEqual( Stem("tizio"), "tiz" );
	deepEqual( Stem("tizzi"), "tizz" );
	deepEqual( Stem("tizzone"), "tizzon" );
	deepEqual( Stem("tizzoni"), "tizzon" );
	deepEqual( Stem("tl"), "tl" );
	deepEqual( Stem("tlf"), "tlf" );
	deepEqual( Stem("tm"), "tm" );
	deepEqual( Stem("tmc"), "tmc" );
	deepEqual( Stem("to"), "to" );
	deepEqual( Stem("tocancipa"), "tocancip" );
	deepEqual( Stem("tocca"), "tocc" );
	deepEqual( Stem("toccan"), "toccan" );
	deepEqual( Stem("toccando"), "tocc" );
	deepEqual( Stem("toccano"), "tocc" );
	deepEqual( Stem("toccante"), "toccant" );
	deepEqual( Stem("toccanti"), "toccant" );
	deepEqual( Stem("toccar"), "tocc" );
	deepEqual( Stem("toccare"), "tocc" );
	deepEqual( Stem("toccargli"), "tocc" );
	deepEqual( Stem("toccarli"), "tocc" );
	deepEqual( Stem("toccarlo"), "tocc" );
	deepEqual( Stem("toccase"), "toccas" );
	deepEqual( Stem("toccasse"), "tocc" );
	deepEqual( Stem("toccassero"), "tocc" );
	deepEqual( Stem("toccata"), "tocc" );
	deepEqual( Stem("toccate"), "tocc" );
	deepEqual( Stem("toccategli"), "toccategl" );
	deepEqual( Stem("toccati"), "tocc" );
	deepEqual( Stem("toccato"), "tocc" );
	deepEqual( Stem("toccava"), "tocc" );
	deepEqual( Stem("toccavano"), "tocc" );
	deepEqual( Stem("toccherà"), "tocc" );
	deepEqual( Stem("toccherebbe"), "tocc" );
	deepEqual( Stem("toccherò"), "tocc" );
	deepEqual( Stem("tocchetti"), "tocchett" );
	deepEqual( Stem("tocchi"), "tocc" );
	deepEqual( Stem("tocci"), "tocc" );
	deepEqual( Stem("tocco"), "tocc" );
	deepEqual( Stem("toccò"), "tocc" );
	deepEqual( Stem("todaro"), "todar" );
	deepEqual( Stem("todd"), "todd" );
	deepEqual( Stem("tofoli"), "tofol" );
	deepEqual( Stem("toga"), "tog" );
	deepEqual( Stem("togae"), "toga" );
	deepEqual( Stem("togato"), "tog" );
	deepEqual( Stem("togliatti"), "togliatt" );
	deepEqual( Stem("toglie"), "togl" );
	deepEqual( Stem("togliendo"), "togl" );
	deepEqual( Stem("togliendogli"), "togl" );
	deepEqual( Stem("togliendoli"), "togl" );
	deepEqual( Stem("togliere"), "togl" );
	deepEqual( Stem("togliergli"), "togl" );
	deepEqual( Stem("togliergliela"), "togl" );
	deepEqual( Stem("togliersi"), "togl" );
	deepEqual( Stem("togliervi"), "togl" );
	deepEqual( Stem("togliesse"), "togliess" );
	deepEqual( Stem("toglieva"), "togl" );
	deepEqual( Stem("togo"), "tog" );
	deepEqual( Stem("tokio"), "tok" );
	deepEqual( Stem("tokunaga"), "tokunag" );
	deepEqual( Stem("tokyo"), "toky" );
	deepEqual( Stem("toldo"), "told" );
	deepEqual( Stem("toledo"), "toled" );
	deepEqual( Stem("tollerabile"), "toller" );
	deepEqual( Stem("tollerabilità"), "toller" );
	deepEqual( Stem("tolleranza"), "toller" );
	deepEqual( Stem("tollerar"), "toller" );
	deepEqual( Stem("tollerare"), "toller" );
	deepEqual( Stem("tollerati"), "toller" );
	deepEqual( Stem("tolone"), "tolon" );
	deepEqual( Stem("tolstikov"), "tolstikov" );
	deepEqual( Stem("tolta"), "tolt" );
	deepEqual( Stem("tolte"), "tolt" );
	deepEqual( Stem("tolto"), "tolt" );
	deepEqual( Stem("tom"), "tom" );
	deepEqual( Stem("tomas"), "tomas" );
	deepEqual( Stem("tomba"), "tomb" );
	deepEqual( Stem("tombalè"), "tombal" );
	deepEqual( Stem("tommasi"), "tommas" );
	deepEqual( Stem("tommi"), "tomm" );
	deepEqual( Stem("tommyknockers"), "tommyknockers" );
	deepEqual( Stem("tommyknokers"), "tommyknokers" );
	deepEqual( Stem("ton"), "ton" );
	deepEqual( Stem("tonaca"), "tonac" );
	deepEqual( Stem("tonache"), "tonac" );
	deepEqual( Stem("tonante"), "tonant" );
	deepEqual( Stem("tondo"), "tond" );
	deepEqual( Stem("tonè"), "ton" );
	deepEqual( Stem("tonfo"), "tonf" );
	deepEqual( Stem("toni"), "ton" );
	deepEqual( Stem("tonini"), "tonin" );
	deepEqual( Stem("tonio"), "ton" );
	deepEqual( Stem("tonnellate"), "tonnell" );
	deepEqual( Stem("tonno"), "tonn" );
	deepEqual( Stem("tono"), "ton" );
	deepEqual( Stem("tonò"), "ton" );
	deepEqual( Stem("tontini"), "tontin" );
	deepEqual( Stem("tony"), "tony" );
	deepEqual( Stem("tonynton"), "tonynton" );
	deepEqual( Stem("top"), "top" );
	deepEqual( Stem("topacci"), "topacc" );
	deepEqual( Stem("topaie"), "topai" );
	deepEqual( Stem("topi"), "top" );
	deepEqual( Stem("topo"), "top" );
	deepEqual( Stem("toppa"), "topp" );
	deepEqual( Stem("topponi"), "toppon" );
	deepEqual( Stem("torbida"), "torbid" );
	deepEqual( Stem("torbide"), "torbid" );
	deepEqual( Stem("torbido"), "torbid" );
	deepEqual( Stem("torca"), "torc" );
	deepEqual( Stem("torce"), "torc" );
	deepEqual( Stem("torcendo"), "torc" );
	deepEqual( Stem("torcere"), "torc" );
	deepEqual( Stem("torcetti"), "torcett" );
	deepEqual( Stem("torcetto"), "torcett" );
	deepEqual( Stem("torchia"), "torc" );
	deepEqual( Stem("torchiatura"), "torchiatur" );
	deepEqual( Stem("torcia"), "torc" );
	deepEqual( Stem("tord"), "tord" );
	deepEqual( Stem("torello"), "torell" );
	deepEqual( Stem("torgiano"), "torg" );
	deepEqual( Stem("torinese"), "torines" );
	deepEqual( Stem("torino"), "torin" );
	deepEqual( Stem("torme"), "torm" );
	deepEqual( Stem("tormenta"), "torment" );
	deepEqual( Stem("tormentar"), "torment" );
	deepEqual( Stem("tormentare"), "torment" );
	deepEqual( Stem("tormentarla"), "torment" );
	deepEqual( Stem("tormentarli"), "torment" );
	deepEqual( Stem("tormentarlo"), "torment" );
	deepEqual( Stem("tormentarmi"), "torment" );
	deepEqual( Stem("tormentarsi"), "torment" );
	deepEqual( Stem("tormentato"), "torment" );
	deepEqual( Stem("tormentavano"), "torment" );
	deepEqual( Stem("tormenti"), "torment" );
	deepEqual( Stem("tormento"), "torment" );
	deepEqual( Stem("tormentosa"), "torment" );
	deepEqual( Stem("tormentose"), "torment" );
	deepEqual( Stem("tormentoso"), "torment" );
	deepEqual( Stem("torna"), "torn" );
	deepEqual( Stem("tornando"), "torn" );
	deepEqual( Stem("tornandoci"), "torn" );
	deepEqual( Stem("tornandole"), "torn" );
	deepEqual( Stem("tornandovi"), "torn" );
	deepEqual( Stem("tornano"), "torn" );
	deepEqual( Stem("tornar"), "torn" );
	deepEqual( Stem("tornarci"), "torn" );
	deepEqual( Stem("tornare"), "torn" );
	deepEqual( Stem("tornarono"), "torn" );
	deepEqual( Stem("tornarsene"), "torn" );
	deepEqual( Stem("tornasolè"), "tornasol" );
	deepEqual( Stem("tornasse"), "torn" );
	deepEqual( Stem("tornassi"), "torn" );
	deepEqual( Stem("tornata"), "torn" );
	deepEqual( Stem("tornate"), "torn" );
	deepEqual( Stem("tornatele"), "tornatel" );
	deepEqual( Stem("tornatevene"), "tornateven" );
	deepEqual( Stem("tornati"), "torn" );
	deepEqual( Stem("tornato"), "torn" );
	deepEqual( Stem("tornava"), "torn" );
	deepEqual( Stem("tornavan"), "tornavan" );
	deepEqual( Stem("tornavano"), "torn" );
	deepEqual( Stem("torneo"), "torne" );
	deepEqual( Stem("tornerà"), "torn" );
	deepEqual( Stem("tornerai"), "torn" );
	deepEqual( Stem("torneranno"), "torn" );
	deepEqual( Stem("tornerebbe"), "torn" );
	deepEqual( Stem("tornerei"), "torn" );
	deepEqual( Stem("torneremo"), "torn" );
	deepEqual( Stem("tornerete"), "torn" );
	deepEqual( Stem("tornerò"), "torn" );
	deepEqual( Stem("torni"), "torn" );
	deepEqual( Stem("torniamo"), "torn" );
	deepEqual( Stem("tornita"), "torn" );
	deepEqual( Stem("torno"), "torn" );
	deepEqual( Stem("tornò"), "torn" );
	deepEqual( Stem("toro"), "tor" );
	deepEqual( Stem("toronto"), "toront" );
	deepEqual( Stem("torpedoni"), "torpedon" );
	deepEqual( Stem("torquato"), "torqu" );
	deepEqual( Stem("torracchione"), "torracchion" );
	deepEqual( Stem("torras"), "torras" );
	deepEqual( Stem("torre"), "torr" );
	deepEqual( Stem("torreggiava"), "torregg" );
	deepEqual( Stem("torrentaccio"), "torrentacc" );
	deepEqual( Stem("torrente"), "torrent" );
	deepEqual( Stem("torrenti"), "torrent" );
	deepEqual( Stem("torres"), "torres" );
	deepEqual( Stem("torri"), "torr" );
	deepEqual( Stem("torricelli"), "torricell" );
	deepEqual( Stem("torrisi"), "torris" );
	deepEqual( Stem("torse"), "tors" );
	deepEqual( Stem("torso"), "tors" );
	deepEqual( Stem("torsoli"), "torsol" );
	deepEqual( Stem("torta"), "tort" );
	deepEqual( Stem("torti"), "tort" );
	deepEqual( Stem("torto"), "tort" );
	deepEqual( Stem("tortuose"), "tortuos" );
	deepEqual( Stem("tortuoso"), "tortuos" );
	deepEqual( Stem("tortura"), "tortur" );
	deepEqual( Stem("torturare"), "tortur" );
	deepEqual( Stem("torture"), "tortur" );
	deepEqual( Stem("torturi"), "tortur" );
	deepEqual( Stem("torvo"), "torv" );
	deepEqual( Stem("tosa"), "tos" );
	deepEqual( Stem("tosarsi"), "tos" );
	deepEqual( Stem("toscana"), "toscan" );
	deepEqual( Stem("toscane"), "toscan" );
	deepEqual( Stem("toscani"), "toscan" );
	deepEqual( Stem("toscano"), "tosc" );
	deepEqual( Stem("toseranno"), "tos" );
	deepEqual( Stem("tosi"), "tos" );
	deepEqual( Stem("tossì"), "toss" );
	deepEqual( Stem("tossicodipendente"), "tossicodipendent" );
	deepEqual( Stem("tossicodipendenti"), "tossicodipendent" );
	deepEqual( Stem("tossicologa"), "tossicolog" );
	deepEqual( Stem("tossicologico"), "tossicolog" );
	deepEqual( Stem("tossire"), "toss" );
	deepEqual( Stem("tosta"), "tost" );
	deepEqual( Stem("tosto"), "tost" );
	deepEqual( Stem("total"), "total" );
	deepEqual( Stem("totale"), "total" );
	deepEqual( Stem("totalitarismi"), "totalitar" );
	deepEqual( Stem("totalizzato"), "totalizz" );
	deepEqual( Stem("totalmente"), "total" );
	deepEqual( Stem("totip"), "totip" );
	deepEqual( Stem("toto"), "tot" );
	deepEqual( Stem("totò"), "tot" );
	deepEqual( Stem("totocalcio"), "totocalc" );
	deepEqual( Stem("totogol"), "totogol" );
	deepEqual( Stem("totti"), "tott" );
	deepEqual( Stem("touareg"), "touareg" );
	deepEqual( Stem("tour"), "tour" );
	deepEqual( Stem("tovaglia"), "tovagl" );
	deepEqual( Stem("tovaglie"), "tovagl" );
	deepEqual( Stem("tovagliolo"), "tovagliol" );
	deepEqual( Stem("tovalieri"), "tovalier" );
	deepEqual( Stem("toyota"), "toyot" );
	deepEqual( Stem("tp"), "tp" );
	deepEqual( Stem("tra"), "tra" );
	deepEqual( Stem("traballanti"), "traball" );
	deepEqual( Stem("trabocca"), "trabocc" );
	deepEqual( Stem("traboccanti"), "trabocc" );
	deepEqual( Stem("traboccare"), "trabocc" );
	deepEqual( Stem("traboccò"), "trabocc" );
	deepEqual( Stem("tracannato"), "tracann" );
	deepEqual( Stem("tracannò"), "tracann" );
	deepEqual( Stem("tracce"), "tracc" );
	deepEqual( Stem("traccia"), "tracc" );
	deepEqual( Stem("tracciare"), "tracc" );
	deepEqual( Stem("tracciarne"), "tracc" );
	deepEqual( Stem("tracciate"), "tracc" );
	deepEqual( Stem("tracciato"), "tracc" );
	deepEqual( Stem("tracollava"), "tracoll" );
	deepEqual( Stem("tracollo"), "tracoll" );
	deepEqual( Stem("tracy"), "tracy" );
	deepEqual( Stem("trade"), "trad" );
	deepEqual( Stem("tradimenti"), "trad" );
	deepEqual( Stem("tradimento"), "trad" );
	deepEqual( Stem("trading"), "trading" );
	deepEqual( Stem("tradire"), "trad" );
	deepEqual( Stem("tradisce"), "trad" );
	deepEqual( Stem("traditi"), "trad" );
	deepEqual( Stem("tradito"), "trad" );
	deepEqual( Stem("traditor"), "traditor" );
	deepEqual( Stem("traditora"), "traditor" );
	deepEqual( Stem("traditore"), "traditor" );
	deepEqual( Stem("traditori"), "traditor" );
	deepEqual( Stem("traditrice"), "traditr" );
	deepEqual( Stem("tradizionale"), "tradizional" );
	deepEqual( Stem("tradizionali"), "tradizional" );
	deepEqual( Stem("tradizionalmente"), "tradizional" );
	deepEqual( Stem("tradizione"), "tradizion" );
	deepEqual( Stem("tradizioni"), "tradizion" );
	deepEqual( Stem("traducessero"), "traduc" );
	deepEqual( Stem("traduciamo"), "traduc" );
	deepEqual( Stem("tradurrà"), "tradurr" );
	deepEqual( Stem("tradurre"), "tradurr" );
	deepEqual( Stem("tradursi"), "tradurs" );
	deepEqual( Stem("traduttore"), "traduttor" );
	deepEqual( Stem("trae"), "tra" );
	deepEqual( Stem("traendo"), "tra" );
	deepEqual( Stem("traessi"), "traess" );
	deepEqual( Stem("trafelato"), "trafel" );
	deepEqual( Stem("trafficando"), "traffic" );
	deepEqual( Stem("trafficanti"), "traffic" );
	deepEqual( Stem("traffichi"), "traffic" );
	deepEqual( Stem("traffici"), "traffic" );
	deepEqual( Stem("traffico"), "traffic" );
	deepEqual( Stem("trafitta"), "trafitt" );
	deepEqual( Stem("trafitto"), "trafitt" );
	deepEqual( Stem("traforata"), "trafor" );
	deepEqual( Stem("traforate"), "trafor" );
	deepEqual( Stem("trafugamento"), "trafug" );
	deepEqual( Stem("trafugare"), "trafug" );
	deepEqual( Stem("trafugati"), "trafug" );
	deepEqual( Stem("trafugato"), "trafug" );
	deepEqual( Stem("tragedia"), "traged" );
	deepEqual( Stem("tragedie"), "traged" );
	deepEqual( Stem("tragga"), "tragg" );
	deepEqual( Stem("traggedie"), "tragged" );
	deepEqual( Stem("traghettare"), "traghett" );
	deepEqual( Stem("traghetti"), "traghett" );
	deepEqual( Stem("traghetto"), "traghett" );
	deepEqual( Stem("tragica"), "tragic" );
	deepEqual( Stem("tragicamente"), "tragic" );
	deepEqual( Stem("tragiche"), "tragic" );
	deepEqual( Stem("tragici"), "tragic" );
	deepEqual( Stem("tragico"), "tragic" );
	deepEqual( Stem("tragittar"), "tragitt" );
	deepEqual( Stem("tragittarmi"), "tragitt" );
	deepEqual( Stem("tragitto"), "tragitt" );
	deepEqual( Stem("traguardi"), "traguard" );
	deepEqual( Stem("traguardo"), "traguard" );
	deepEqual( Stem("traiettoria"), "traiettor" );
	deepEqual( Stem("trainante"), "trainant" );
	deepEqual( Stem("trainato"), "train" );
	deepEqual( Stem("trainer"), "trainer" );
	deepEqual( Stem("traino"), "train" );
	deepEqual( Stem("tralasceremo"), "tralasc" );
	deepEqual( Stem("tralascia"), "tralasc" );
	deepEqual( Stem("tralasciamo"), "tralasc" );
	deepEqual( Stem("tralasciare"), "tralasc" );
	deepEqual( Stem("tralasciava"), "tralasc" );
	deepEqual( Stem("tralasciò"), "tralasc" );
	deepEqual( Stem("tralci"), "tralc" );
	deepEqual( Stem("traluce"), "traluc" );
	deepEqual( Stem("tram"), "tram" );
	deepEqual( Stem("trama"), "tram" );
	deepEqual( Stem("tramagli"), "tramagl" );
	deepEqual( Stem("tramaglino"), "tramaglin" );
	deepEqual( Stem("tramaliini"), "tramaliin" );
	deepEqual( Stem("trambusto"), "trambust" );
	deepEqual( Stem("trame"), "tram" );
	deepEqual( Stem("tramenìo"), "tramenì" );
	deepEqual( Stem("tramezzani"), "tramezzan" );
	deepEqual( Stem("tramite"), "tram" );
	deepEqual( Stem("tramonta"), "tramont" );
	deepEqual( Stem("tramontano"), "tramont" );
	deepEqual( Stem("tramontata"), "tramont" );
	deepEqual( Stem("tramontato"), "tramont" );
	deepEqual( Stem("tramonto"), "tramont" );
	deepEqual( Stem("tramutato"), "tramut" );
	deepEqual( Stem("trance"), "tranc" );
	deepEqual( Stem("tranche"), "tranc" );
	deepEqual( Stem("trani"), "tran" );
	deepEqual( Stem("tranne"), "trann" );
	deepEqual( Stem("tranquilizzati"), "tranquilizz" );
	deepEqual( Stem("tranquilla"), "tranquill" );
	deepEqual( Stem("tranquillamente"), "tranquill" );
	deepEqual( Stem("tranquillanti"), "tranquill" );
	deepEqual( Stem("tranquille"), "tranquill" );
	deepEqual( Stem("tranquilli"), "tranquill" );
	deepEqual( Stem("tranquillità"), "tranquill" );
	deepEqual( Stem("tranquillizzante"), "tranquillizz" );
	deepEqual( Stem("tranquillizzare"), "tranquillizz" );
	deepEqual( Stem("tranquillizzata"), "tranquillizz" );
	deepEqual( Stem("tranquillo"), "tranquill" );
	deepEqual( Stem("transatlantica"), "transatlant" );
	deepEqual( Stem("transazione"), "transazion" );
	deepEqual( Stem("transeuropee"), "transeurope" );
	deepEqual( Stem("transfughi"), "transfug" );
	deepEqual( Stem("transiti"), "trans" );
	deepEqual( Stem("transitiva"), "transit" );
	deepEqual( Stem("transizione"), "transizion" );
	deepEqual( Stem("transportation"), "transportation" );
	deepEqual( Stem("trantina"), "trantin" );
	deepEqual( Stem("trapani"), "trapan" );
	deepEqual( Stem("trapassate"), "trapass" );
	deepEqual( Stem("trapela"), "trapel" );
	deepEqual( Stem("trapelasse"), "trapel" );
	deepEqual( Stem("trapelato"), "trapel" );
	deepEqual( Stem("trapiantato"), "trapiant" );
	deepEqual( Stem("trapianti"), "trapiant" );
	deepEqual( Stem("trapianto"), "trapiant" );
	deepEqual( Stem("trapolorum"), "trapolorum" );
	deepEqual( Stem("trapontando"), "trapont" );
	deepEqual( Stem("trappola"), "trappol" );
	deepEqual( Stem("trappole"), "trappol" );
	deepEqual( Stem("trarrà"), "trarr" );
	deepEqual( Stem("trarre"), "trarr" );
	deepEqual( Stem("trasandata"), "trasand" );
	deepEqual( Stem("trasandato"), "trasand" );
	deepEqual( Stem("trascinare"), "trascin" );
	deepEqual( Stem("trascinarla"), "trascin" );
	deepEqual( Stem("trascinarle"), "trascin" );
	deepEqual( Stem("trascinato"), "trascin" );
	deepEqual( Stem("trascinatore"), "trascin" );
	deepEqual( Stem("trascorrendo"), "trascorr" );
	deepEqual( Stem("trascorrerà"), "trascorr" );
	deepEqual( Stem("trascorrere"), "trascorr" );
	deepEqual( Stem("trascorreva"), "trascorr" );
	deepEqual( Stem("trascorrevano"), "trascorr" );
	deepEqual( Stem("trascorrono"), "trascorr" );
	deepEqual( Stem("trascorsa"), "trascors" );
	deepEqual( Stem("trascorso"), "trascors" );
	deepEqual( Stem("trascriver"), "trascriver" );
	deepEqual( Stem("trascrivere"), "trascriv" );
	deepEqual( Stem("trascriveremo"), "trascriv" );
	deepEqual( Stem("trascriviamo"), "trascriv" );
	deepEqual( Stem("trascura"), "trascur" );
	deepEqual( Stem("trascuranza"), "trascur" );
	deepEqual( Stem("trascurar"), "trascur" );
	deepEqual( Stem("trascurare"), "trascur" );
	deepEqual( Stem("trascurata"), "trascur" );
	deepEqual( Stem("trascuratezza"), "trascuratezz" );
	deepEqual( Stem("trascurato"), "trascur" );
	deepEqual( Stem("trascuro"), "trascur" );
	deepEqual( Stem("trascurò"), "trascur" );
	deepEqual( Stem("trasferendo"), "trasfer" );
	deepEqual( Stem("trasferendoli"), "trasfer" );
	deepEqual( Stem("trasferì"), "trasfer" );
	deepEqual( Stem("trasferimenti"), "trasfer" );
	deepEqual( Stem("trasferimento"), "trasfer" );
	deepEqual( Stem("trasferirà"), "trasfer" );
	deepEqual( Stem("trasferire"), "trasfer" );
	deepEqual( Stem("trasferirsi"), "trasfer" );
	deepEqual( Stem("trasferisce"), "trasfer" );
	deepEqual( Stem("trasferita"), "trasfer" );
	deepEqual( Stem("trasferiti"), "trasfer" );
	deepEqual( Stem("trasferito"), "trasfer" );
	deepEqual( Stem("trasferitosi"), "trasferit" );
	deepEqual( Stem("trasferta"), "trasfert" );
	deepEqual( Stem("trasferte"), "trasfert" );
	deepEqual( Stem("trasfigurare"), "trasfigur" );
	deepEqual( Stem("trasforma"), "trasform" );
	deepEqual( Stem("trasformandosi"), "trasform" );
	deepEqual( Stem("trasformare"), "trasform" );
	deepEqual( Stem("trasformarè"), "trasformar" );
	deepEqual( Stem("trasformarsi"), "trasform" );
	deepEqual( Stem("trasformata"), "trasform" );
	deepEqual( Stem("trasformato"), "trasform" );
	deepEqual( Stem("trasformazione"), "trasform" );
	deepEqual( Stem("trasformistica"), "trasformist" );
	deepEqual( Stem("trasfusione"), "trasfusion" );
	deepEqual( Stem("trasgredire"), "trasgred" );
	deepEqual( Stem("trasgredirne"), "trasgred" );
	deepEqual( Stem("trasgredisca"), "trasgred" );
	deepEqual( Stem("trasgredito"), "trasgred" );
	deepEqual( Stem("trasgressione"), "trasgression" );
	deepEqual( Stem("trasgressori"), "trasgressor" );
	deepEqual( Stem("trasmesa"), "trasmes" );
	deepEqual( Stem("trasmessa"), "trasmess" );
	deepEqual( Stem("trasmesse"), "trasmess" );
	deepEqual( Stem("trasmessi"), "trasmess" );
	deepEqual( Stem("trasmesso"), "trasmess" );
	deepEqual( Stem("trasmette"), "trasmett" );
	deepEqual( Stem("trasmetterà"), "trasmett" );
	deepEqual( Stem("trasmettere"), "trasmett" );
	deepEqual( Stem("trasmetteremo"), "trasmett" );
	deepEqual( Stem("trasmetterla"), "trasmett" );
	deepEqual( Stem("trasmettesse"), "trasmettess" );
	deepEqual( Stem("trasmettono"), "trasmett" );
	deepEqual( Stem("trasmise"), "trasmis" );
	deepEqual( Stem("trasmissiome"), "trasmissiom" );
	deepEqual( Stem("trasmissione"), "trasmission" );
	deepEqual( Stem("trasmissioni"), "trasmission" );
	deepEqual( Stem("traspare"), "trasp" );
	deepEqual( Stem("trasparente"), "trasparent" );
	deepEqual( Stem("trasparenti"), "trasparent" );
	deepEqual( Stem("trasparenza"), "trasparent" );
	deepEqual( Stem("trasparire"), "traspar" );
	deepEqual( Stem("traspariva"), "traspar" );
	deepEqual( Stem("trasparve"), "trasparv" );
	deepEqual( Stem("traspirato"), "traspir" );
	deepEqual( Stem("trasporta"), "trasport" );
	deepEqual( Stem("trasportano"), "trasport" );
	deepEqual( Stem("trasportar"), "trasport" );
	deepEqual( Stem("trasportare"), "trasport" );
	deepEqual( Stem("trasportarsi"), "trasport" );
	deepEqual( Stem("trasportata"), "trasport" );
	deepEqual( Stem("trasportati"), "trasport" );
	deepEqual( Stem("trasportato"), "trasport" );
	deepEqual( Stem("trasporterà"), "trasport" );
	deepEqual( Stem("trasporti"), "trasport" );
	deepEqual( Stem("trasportiamoci"), "trasportiamoc" );
	deepEqual( Stem("trasportistico"), "trasportist" );
	deepEqual( Stem("trasporto"), "trasport" );
	deepEqual( Stem("trastullo"), "trastull" );
	deepEqual( Stem("tratta"), "tratt" );
	deepEqual( Stem("trattabile"), "trattabil" );
	deepEqual( Stem("trattabili"), "trattabil" );
	deepEqual( Stem("trattamenti"), "tratt" );
	deepEqual( Stem("trattamento"), "tratt" );
	deepEqual( Stem("trattandosi"), "tratt" );
	deepEqual( Stem("trattano"), "tratt" );
	deepEqual( Stem("trattar"), "tratt" );
	deepEqual( Stem("trattare"), "tratt" );
	deepEqual( Stem("trattarla"), "tratt" );
	deepEqual( Stem("trattarli"), "tratt" );
	deepEqual( Stem("trattarlo"), "tratt" );
	deepEqual( Stem("trattarsi"), "tratt" );
	deepEqual( Stem("trattarvi"), "tratt" );
	deepEqual( Stem("trattasse"), "tratt" );
	deepEqual( Stem("trattata"), "tratt" );
	deepEqual( Stem("trattate"), "tratt" );
	deepEqual( Stem("trattati"), "tratt" );
	deepEqual( Stem("trattativa"), "trattat" );
	deepEqual( Stem("trattative"), "trattat" );
	deepEqual( Stem("trattato"), "tratt" );
	deepEqual( Stem("trattava"), "tratt" );
	deepEqual( Stem("trattavano"), "tratt" );
	deepEqual( Stem("tratte"), "tratt" );
	deepEqual( Stem("trattenendole"), "tratten" );
	deepEqual( Stem("trattener"), "trattener" );
	deepEqual( Stem("trattenere"), "tratten" );
	deepEqual( Stem("trattenerla"), "tratten" );
	deepEqual( Stem("trattenerle"), "tratten" );
	deepEqual( Stem("trattenerlo"), "tratten" );
	deepEqual( Stem("trattenerne"), "tratten" );
	deepEqual( Stem("trattenersi"), "tratten" );
	deepEqual( Stem("trattenesse"), "tratteness" );
	deepEqual( Stem("trattenete"), "tratten" );
	deepEqual( Stem("tratteneva"), "tratten" );
	deepEqual( Stem("trattenga"), "tratteng" );
	deepEqual( Stem("trattenne"), "trattenn" );
	deepEqual( Stem("trattenuta"), "tratten" );
	deepEqual( Stem("trattenuti"), "tratten" );
	deepEqual( Stem("trattenuto"), "tratten" );
	deepEqual( Stem("tratterà"), "tratt" );
	deepEqual( Stem("tratterebbe"), "tratt" );
	deepEqual( Stem("tratti"), "tratt" );
	deepEqual( Stem("trattiamo"), "tratt" );
	deepEqual( Stem("trattiene"), "trattien" );
	deepEqual( Stem("tratto"), "tratt" );
	deepEqual( Stem("trattò"), "tratt" );
	deepEqual( Stem("traumi"), "traum" );
	deepEqual( Stem("travagli"), "travagl" );
	deepEqual( Stem("travagliata"), "travagl" );
	deepEqual( Stem("travagliate"), "travagl" );
	deepEqual( Stem("travaglio"), "travagl" );
	deepEqual( Stem("trave"), "trav" );
	deepEqual( Stem("travedente"), "travedent" );
	deepEqual( Stem("travedere"), "traved" );
	deepEqual( Stem("traversa"), "travers" );
	deepEqual( Stem("traversando"), "travers" );
	deepEqual( Stem("traverse"), "travers" );
	deepEqual( Stem("traversìe"), "traversì" );
	deepEqual( Stem("traverso"), "travers" );
	deepEqual( Stem("traversone"), "traverson" );
	deepEqual( Stem("traveste"), "travest" );
	deepEqual( Stem("travestimenti"), "travest" );
	deepEqual( Stem("travestito"), "travest" );
	deepEqual( Stem("travi"), "trav" );
	deepEqual( Stem("traviati"), "trav" );
	deepEqual( Stem("travisamento"), "travis" );
	deepEqual( Stem("travisarsi"), "travis" );
	deepEqual( Stem("travisati"), "travis" );
	deepEqual( Stem("travolta"), "travolt" );
	deepEqual( Stem("travolti"), "travolt" );
	deepEqual( Stem("tre"), "tre" );
	deepEqual( Stem("trebenic"), "trebenic" );
	deepEqual( Stem("trebevic"), "trebevic" );
	deepEqual( Stem("trecce"), "trecc" );
	deepEqual( Stem("treccia"), "trecc" );
	deepEqual( Stem("trecento"), "trecent" );
	deepEqual( Stem("tredicenne"), "tredicenn" );
	deepEqual( Stem("tredicesimo"), "tredicesim" );
	deepEqual( Stem("tredici"), "tredic" );
	deepEqual( Stem("tregua"), "tregu" );
	deepEqual( Stem("trek"), "trek" );
	deepEqual( Stem("trema"), "trem" );
	deepEqual( Stem("tremaglia"), "tremagl" );
	deepEqual( Stem("tremando"), "trem" );
	deepEqual( Stem("tremante"), "tremant" );
	deepEqual( Stem("tremanti"), "tremant" );
	deepEqual( Stem("tremar"), "trem" );
	deepEqual( Stem("tremare"), "trem" );
	deepEqual( Stem("tremava"), "trem" );
	deepEqual( Stem("tremenda"), "trem" );
	deepEqual( Stem("tremendo"), "trem" );
	deepEqual( Stem("tremila"), "tremil" );
	deepEqual( Stem("tremito"), "trem" );
	deepEqual( Stem("tremò"), "trem" );
	deepEqual( Stem("tremola"), "tremol" );
	deepEqual( Stem("tremolando"), "tremol" );
	deepEqual( Stem("tremolante"), "tremol" );
	deepEqual( Stem("tremolanti"), "tremol" );
	deepEqual( Stem("tremolare"), "tremol" );
	deepEqual( Stem("tremolava"), "tremol" );
	deepEqual( Stem("tremonti"), "tremont" );
	deepEqual( Stem("tremula"), "tremul" );
	deepEqual( Stem("trend"), "trend" );
	deepEqual( Stem("treni"), "tren" );
	deepEqual( Stem("trenno"), "trenn" );
	deepEqual( Stem("treno"), "tren" );
	deepEqual( Stem("trent"), "trent" );
	deepEqual( Stem("trenta"), "trent" );
	deepEqual( Stem("trentacinque"), "trentacinqu" );
	deepEqual( Stem("trentacinquenne"), "trentacinquenn" );
	deepEqual( Stem("trentadue"), "trentadu" );
	deepEqual( Stem("trentalange"), "trentalang" );
	deepEqual( Stem("trentamila"), "trentamil" );
	deepEqual( Stem("trentatre"), "trentatr" );
	deepEqual( Stem("trentennale"), "trentennal" );
	deepEqual( Stem("trentesimo"), "trentesim" );
	deepEqual( Stem("trentina"), "trentin" );
	deepEqual( Stem("trentino"), "trentin" );
	deepEqual( Stem("trento"), "trent" );
	deepEqual( Stem("treossi"), "treoss" );
	deepEqual( Stem("tresigallo"), "tresigall" );
	deepEqual( Stem("treu"), "treu" );
	deepEqual( Stem("treviso"), "trevis" );
	deepEqual( Stem("trezza"), "trezz" );
	deepEqual( Stem("trezze"), "trezz" );
	deepEqual( Stem("trezzo"), "trezz" );
	deepEqual( Stem("triangolazione"), "triangol" );
	deepEqual( Stem("triathlon"), "triathlon" );
	deepEqual( Stem("tribale"), "tribal" );
	deepEqual( Stem("tribolati"), "tribol" );
	deepEqual( Stem("tribolato"), "tribol" );
	deepEqual( Stem("tribolazione"), "tribol" );
	deepEqual( Stem("tribolazioni"), "tribol" );
	deepEqual( Stem("tribù"), "tribù" );
	deepEqual( Stem("tribuna"), "tribun" );
	deepEqual( Stem("tribunal"), "tribunal" );
	deepEqual( Stem("tribunale"), "tribunal" );
	deepEqual( Stem("tribunalè"), "tribunal" );
	deepEqual( Stem("tribunali"), "tribunal" );
	deepEqual( Stem("tribune"), "tribun" );
	deepEqual( Stem("tribunè"), "tribun" );
	deepEqual( Stem("tributano"), "tribut" );
	deepEqual( Stem("tributari"), "tributar" );
	deepEqual( Stem("tributaria"), "tributar" );
	deepEqual( Stem("tributarie"), "tributar" );
	deepEqual( Stem("tributarij"), "tributarij" );
	deepEqual( Stem("tricarico"), "tricar" );
	deepEqual( Stem("tricolore"), "tricolor" );
	deepEqual( Stem("tridente"), "trident" );
	deepEqual( Stem("triennale"), "triennal" );
	deepEqual( Stem("triennio"), "trienn" );
	deepEqual( Stem("trieste"), "triest" );
	deepEqual( Stem("triestina"), "triestin" );
	deepEqual( Stem("triestini"), "triestin" );
	deepEqual( Stem("triestino"), "triestin" );
	deepEqual( Stem("trigoso"), "trigos" );
	deepEqual( Stem("trilingue"), "trilingu" );
	deepEqual( Stem("trill"), "trill" );
	deepEqual( Stem("trimestrali"), "trimestral" );
	deepEqual( Stem("trimestre"), "trimestr" );
	deepEqual( Stem("trincando"), "trinc" );
	deepEqual( Stem("trincare"), "trinc" );
	deepEqual( Stem("trincea"), "trince" );
	deepEqual( Stem("trincerandosi"), "trincer" );
	deepEqual( Stem("trincerarsi"), "trincer" );
	deepEqual( Stem("trincerati"), "trincer" );
	deepEqual( Stem("trinchera"), "trincher" );
	deepEqual( Stem("trinciando"), "trinc" );
	deepEqual( Stem("trinidad"), "trinidad" );
	deepEqual( Stem("trionfale"), "trionfal" );
	deepEqual( Stem("trionfali"), "trionfal" );
	deepEqual( Stem("trionfante"), "trionfant" );
	deepEqual( Stem("trionfare"), "trionf" );
	deepEqual( Stem("trionfarne"), "trionf" );
	deepEqual( Stem("trionfatore"), "trionfator" );
	deepEqual( Stem("trionfo"), "trionf" );
	deepEqual( Stem("trionfò"), "trionf" );
	deepEqual( Stem("tripcovich"), "tripcovic" );
	deepEqual( Stem("triplicato"), "triplic" );
	deepEqual( Stem("tripnavi"), "tripn" );
	deepEqual( Stem("tripoli"), "tripol" );
	deepEqual( Stem("tripudio"), "tripud" );
	deepEqual( Stem("trirak"), "trirak" );
	deepEqual( Stem("trista"), "trist" );
	deepEqual( Stem("tristamente"), "trist" );
	deepEqual( Stem("triste"), "trist" );
	deepEqual( Stem("tristezza"), "tristezz" );
	deepEqual( Stem("tristi"), "trist" );
	deepEqual( Stem("tristissima"), "tristissim" );
	deepEqual( Stem("tristo"), "trist" );
	deepEqual( Stem("trita"), "trit" );
	deepEqual( Stem("tritticò"), "trittic" );
	deepEqual( Stem("trocker"), "trocker" );
	deepEqual( Stem("trofeo"), "trofe" );
	deepEqual( Stem("troffa"), "troff" );
	deepEqual( Stem("trofino"), "trofin" );
	deepEqual( Stem("troi"), "tro" );
	deepEqual( Stem("troika"), "troik" );
	deepEqual( Stem("troikà"), "troik" );
	deepEqual( Stem("tromba"), "tromb" );
	deepEqual( Stem("trombe"), "tromb" );
	deepEqual( Stem("trombettare"), "trombett" );
	deepEqual( Stem("trombetti"), "trombett" );
	deepEqual( Stem("tromboni"), "trombon" );
	deepEqual( Stem("tronca"), "tronc" );
	deepEqual( Stem("troncando"), "tronc" );
	deepEqual( Stem("troncar"), "tronc" );
	deepEqual( Stem("troncare"), "tronc" );
	deepEqual( Stem("troncata"), "tronc" );
	deepEqual( Stem("troncate"), "tronc" );
	deepEqual( Stem("troncato"), "tronc" );
	deepEqual( Stem("troncatura"), "troncatur" );
	deepEqual( Stem("tronche"), "tronc" );
	deepEqual( Stem("troncherebbe"), "tronc" );
	deepEqual( Stem("tronchi"), "tronc" );
	deepEqual( Stem("tronchiamo"), "tronc" );
	deepEqual( Stem("tronco"), "tronc" );
	deepEqual( Stem("troncò"), "tronc" );
	deepEqual( Stem("troneggiava"), "tronegg" );
	deepEqual( Stem("tropeano"), "trop" );
	deepEqual( Stem("trophy"), "trophy" );
	deepEqual( Stem("tropicali"), "tropical" );
	deepEqual( Stem("troppa"), "tropp" );
	deepEqual( Stem("troppe"), "tropp" );
	deepEqual( Stem("troppi"), "tropp" );
	deepEqual( Stem("troppo"), "tropp" );
	deepEqual( Stem("trotta"), "trott" );
	deepEqual( Stem("trottare"), "trott" );
	deepEqual( Stem("trottata"), "trott" );
	deepEqual( Stem("trottava"), "trott" );
	deepEqual( Stem("trotter"), "trotter" );
	deepEqual( Stem("trotto"), "trott" );
	deepEqual( Stem("trottò"), "trott" );
	deepEqual( Stem("trouar"), "trou" );
	deepEqual( Stem("trouaua"), "trouau" );
	deepEqual( Stem("trouauano"), "trouau" );
	deepEqual( Stem("troupe"), "troup" );
	deepEqual( Stem("troupes"), "troupes" );
	deepEqual( Stem("trova"), "trov" );
	deepEqual( Stem("trovale"), "troval" );
	deepEqual( Stem("trovan"), "trovan" );
	deepEqual( Stem("trovando"), "trov" );
	deepEqual( Stem("trovandolo"), "trov" );
	deepEqual( Stem("trovandosene"), "trov" );
	deepEqual( Stem("trovandosi"), "trov" );
	deepEqual( Stem("trovano"), "trov" );
	deepEqual( Stem("trovar"), "trov" );
	deepEqual( Stem("trovarcela"), "trov" );
	deepEqual( Stem("trovarci"), "trov" );
	deepEqual( Stem("trovarcisi"), "trovarcis" );
	deepEqual( Stem("trovare"), "trov" );
	deepEqual( Stem("trovarla"), "trov" );
	deepEqual( Stem("trovarle"), "trov" );
	deepEqual( Stem("trovarli"), "trov" );
	deepEqual( Stem("trovarmi"), "trov" );
	deepEqual( Stem("trovarne"), "trov" );
	deepEqual( Stem("trovaron"), "trovaron" );
	deepEqual( Stem("trovarono"), "trov" );
	deepEqual( Stem("trovarsela"), "trovarsel" );
	deepEqual( Stem("trovarsi"), "trov" );
	deepEqual( Stem("trovarvi"), "trov" );
	deepEqual( Stem("trovasse"), "trov" );
	deepEqual( Stem("trovasser"), "trovasser" );
	deepEqual( Stem("trovassero"), "trov" );
	deepEqual( Stem("trovassi"), "trov" );
	deepEqual( Stem("trovata"), "trov" );
	deepEqual( Stem("trovate"), "trov" );
	deepEqual( Stem("trovati"), "trov" );
	deepEqual( Stem("trovato"), "trov" );
	deepEqual( Stem("trovatolo"), "trovatol" );
	deepEqual( Stem("trovava"), "trov" );
	deepEqual( Stem("trovavan"), "trovavan" );
	deepEqual( Stem("trovavano"), "trov" );
	deepEqual( Stem("trovavo"), "trov" );
	deepEqual( Stem("troverà"), "trov" );
	deepEqual( Stem("troverai"), "trov" );
	deepEqual( Stem("troveranno"), "trov" );
	deepEqual( Stem("troverebbe"), "trov" );
	deepEqual( Stem("troverebbero"), "trov" );
	deepEqual( Stem("troverei"), "trov" );
	deepEqual( Stem("troveremo"), "trov" );
	deepEqual( Stem("troverete"), "trov" );
	deepEqual( Stem("troverò"), "trov" );
	deepEqual( Stem("trovi"), "trov" );
	deepEqual( Stem("troviamo"), "trov" );
	deepEqual( Stem("trovino"), "trovin" );
	deepEqual( Stem("trovo"), "trov" );
	deepEqual( Stem("trovò"), "trov" );
	deepEqual( Stem("troy"), "troy" );
	deepEqual( Stem("trucidare"), "trucid" );
	deepEqual( Stem("trudell"), "trudell" );
	deepEqual( Stem("truffa"), "truff" );
	deepEqual( Stem("truffe"), "truff" );
	deepEqual( Stem("trufferia"), "truffer" );
	deepEqual( Stem("truiden"), "truiden" );
	deepEqual( Stem("trujilo"), "trujil" );
	deepEqual( Stem("trujllo"), "trujll" );
	deepEqual( Stem("truppa"), "trupp" );
	deepEqual( Stem("truppe"), "trupp" );
	deepEqual( Stem("tu"), "tu" );
	deepEqual( Stem("tua"), "tua" );
	deepEqual( Stem("tubazioni"), "tubazion" );
	deepEqual( Stem("tubetti"), "tubett" );
	deepEqual( Stem("tubettificio"), "tubettific" );
	deepEqual( Stem("tubi"), "tub" );
	deepEqual( Stem("tuccillo"), "tuccill" );
	deepEqual( Stem("tudisco"), "tud" );
	deepEqual( Stem("tudjman"), "tudjman" );
	deepEqual( Stem("tue"), "tue" );
	deepEqual( Stem("tuffo"), "tuff" );
	deepEqual( Stem("tuguri"), "tugur" );
	deepEqual( Stem("tulipano"), "tulip" );
	deepEqual( Stem("tullia"), "tull" );
	deepEqual( Stem("tullio"), "tull" );
	deepEqual( Stem("tumulti"), "tumult" );
	deepEqual( Stem("tumulto"), "tumult" );
	deepEqual( Stem("tumultuaria"), "tumultuar" );
	deepEqual( Stem("tumultuariamente"), "tumultuar" );
	deepEqual( Stem("tumultuosa"), "tumultu" );
	deepEqual( Stem("tumultuose"), "tumultu" );
	deepEqual( Stem("tumultuosi"), "tumultu" );
	deepEqual( Stem("tumultuoso"), "tumultu" );
	deepEqual( Stem("tunisi"), "tunis" );
	deepEqual( Stem("tunisia"), "tunis" );
	deepEqual( Stem("tunnel"), "tunnel" );
	deepEqual( Stem("tuo"), "tuo" );
	deepEqual( Stem("tuoi"), "tuo" );
	deepEqual( Stem("tuona"), "tuon" );
	deepEqual( Stem("tuonato"), "tuon" );
	deepEqual( Stem("tuoni"), "tuon" );
	deepEqual( Stem("tuono"), "tuon" );
	deepEqual( Stem("tupac"), "tupac" );
	deepEqual( Stem("turarsene"), "tur" );
	deepEqual( Stem("turava"), "tur" );
	deepEqual( Stem("turba"), "turb" );
	deepEqual( Stem("turbamento"), "turb" );
	deepEqual( Stem("turbarle"), "turb" );
	deepEqual( Stem("turbativa"), "turbat" );
	deepEqual( Stem("turbato"), "turb" );
	deepEqual( Stem("turbavan"), "turbavan" );
	deepEqual( Stem("turbercolosi"), "turbercol" );
	deepEqual( Stem("turbine"), "turbin" );
	deepEqual( Stem("turbolente"), "turbolent" );
	deepEqual( Stem("turca"), "turc" );
	deepEqual( Stem("turchia"), "turc" );
	deepEqual( Stem("turci"), "turc" );
	deepEqual( Stem("turcimanno"), "turcimann" );
	deepEqual( Stem("turco"), "turc" );
	deepEqual( Stem("turetta"), "turett" );
	deepEqual( Stem("turismo"), "turism" );
	deepEqual( Stem("turisti"), "turist" );
	deepEqual( Stem("turistica"), "turist" );
	deepEqual( Stem("turistiche"), "turist" );
	deepEqual( Stem("turistico"), "turist" );
	deepEqual( Stem("turkmenistan"), "turkmenistan" );
	deepEqual( Stem("turno"), "turn" );
	deepEqual( Stem("turpe"), "turp" );
	deepEqual( Stem("turrini"), "turrin" );
	deepEqual( Stem("turris"), "turris" );
	deepEqual( Stem("tutankamen"), "tutankamen" );
	deepEqual( Stem("tutela"), "tutel" );
	deepEqual( Stem("tutelano"), "tutel" );
	deepEqual( Stem("tutelare"), "tutel" );
	deepEqual( Stem("tutrici"), "tutric" );
	deepEqual( Stem("tutt"), "tutt" );
	deepEqual( Stem("tutta"), "tutt" );
	deepEqual( Stem("tuttalpiù"), "tuttalpiù" );
	deepEqual( Stem("tuttavia"), "tuttav" );
	deepEqual( Stem("tutte"), "tutt" );
	deepEqual( Stem("tutti"), "tutt" );
	deepEqual( Stem("tutto"), "tutt" );
	deepEqual( Stem("tuttobasket"), "tuttobasket" );
	deepEqual( Stem("tuttora"), "tuttor" );
	deepEqual( Stem("tuxla"), "tuxl" );
	deepEqual( Stem("tuzco"), "tuzc" );
	deepEqual( Stem("tuzzi"), "tuzz" );
	deepEqual( Stem("tv"), "tv" );
	deepEqual( Stem("tvm"), "tvm" );
	deepEqual( Stem("tvmovie"), "tvmov" );
	deepEqual( Stem("tyldum"), "tyldum" );
	deepEqual( Stem("tzeltal"), "tzeltal" );
	deepEqual( Stem("tzeltales"), "tzeltales" );
	deepEqual( Stem("tzotzil"), "tzotzil" );
	deepEqual( Stem("u"), "u" );
	deepEqual( Stem("uan"), "uan" );
	deepEqual( Stem("ubaldo"), "ubald" );
	deepEqual( Stem("ubbidì"), "ubbid" );
	deepEqual( Stem("ubbidiente"), "ubbidient" );
	deepEqual( Stem("ubbidienti"), "ubbidient" );
	deepEqual( Stem("ubbidienza"), "ubbidient" );
	deepEqual( Stem("ubbidir"), "ubbid" );
	deepEqual( Stem("ubbidirà"), "ubbid" );
	deepEqual( Stem("ubbidire"), "ubbid" );
	deepEqual( Stem("ubbidirla"), "ubbid" );
	deepEqual( Stem("ubbidirli"), "ubbid" );
	deepEqual( Stem("ubbidisca"), "ubbid" );
	deepEqual( Stem("ubbidisce"), "ubbid" );
	deepEqual( Stem("ubbidita"), "ubbid" );
	deepEqual( Stem("ubbidito"), "ubbid" );
	deepEqual( Stem("ubbidiva"), "ubbid" );
	deepEqual( Stem("ubbie"), "ubbi" );
	deepEqual( Stem("ubiquita"), "ubiqu" );
	deepEqual( Stem("ubiquità"), "ubiqu" );
	deepEqual( Stem("ubit"), "ubit" );
	deepEqual( Stem("ubriacatura"), "ubriacatur" );
	deepEqual( Stem("uccel"), "uccel" );
	deepEqual( Stem("uccellacci"), "uccellacc" );
	deepEqual( Stem("uccelli"), "uccell" );
	deepEqual( Stem("uccello"), "uccell" );
	deepEqual( Stem("uccide"), "uccid" );
	deepEqual( Stem("uccidendo"), "uccid" );
	deepEqual( Stem("uccidendolo"), "uccid" );
	deepEqual( Stem("uccidere"), "uccid" );
	deepEqual( Stem("ucciderla"), "uccid" );
	deepEqual( Stem("ucciderlo"), "uccid" );
	deepEqual( Stem("uccisa"), "uccis" );
	deepEqual( Stem("uccise"), "uccis" );
	deepEqual( Stem("uccisi"), "uccis" );
	deepEqual( Stem("uccisione"), "uccision" );
	deepEqual( Stem("uccisionè"), "uccision" );
	deepEqual( Stem("ucciso"), "uccis" );
	deepEqual( Stem("uccisor"), "uccisor" );
	deepEqual( Stem("uccisore"), "uccisor" );
	deepEqual( Stem("ucn"), "ucn" );
	deepEqual( Stem("ucraina"), "ucrain" );
	deepEqual( Stem("ucraino"), "ucrain" );
	deepEqual( Stem("udc"), "udc" );
	deepEqual( Stem("udenti"), "udent" );
	deepEqual( Stem("udf"), "udf" );
	deepEqual( Stem("udì"), "udì" );
	deepEqual( Stem("udienza"), "udienz" );
	deepEqual( Stem("udienze"), "udienz" );
	deepEqual( Stem("udine"), "udin" );
	deepEqual( Stem("udinese"), "udines" );
	deepEqual( Stem("udir"), "udir" );
	deepEqual( Stem("udito"), "udit" );
	deepEqual( Stem("uditori"), "uditor" );
	deepEqual( Stem("uditorio"), "uditor" );
	deepEqual( Stem("udiva"), "udiv" );
	deepEqual( Stem("udivan"), "udivan" );
	deepEqual( Stem("udo"), "udo" );
	deepEqual( Stem("udugov"), "udugov" );
	deepEqual( Stem("ue"), "ue" );
	deepEqual( Stem("uefa"), "uef" );
	deepEqual( Stem("ueo"), "ueo" );
	deepEqual( Stem("uero"), "uer" );
	deepEqual( Stem("ufficetto"), "ufficett" );
	deepEqual( Stem("uffici"), "uffic" );
	deepEqual( Stem("ufficiale"), "ufficial" );
	deepEqual( Stem("ufficiali"), "ufficial" );
	deepEqual( Stem("ufficializzare"), "ufficializz" );
	deepEqual( Stem("ufficializzata"), "ufficializz" );
	deepEqual( Stem("ufficializzazione"), "ufficializz" );
	deepEqual( Stem("ufficialmente"), "ufficial" );
	deepEqual( Stem("ufficilizzate"), "ufficilizz" );
	deepEqual( Stem("ufficio"), "uffic" );
	deepEqual( Stem("ufficiosamente"), "uffic" );
	deepEqual( Stem("uficio"), "ufic" );
	deepEqual( Stem("ufizi"), "ufiz" );
	deepEqual( Stem("ufiziale"), "ufizial" );
	deepEqual( Stem("ufiziali"), "ufizial" );
	deepEqual( Stem("ufizio"), "ufiz" );
	deepEqual( Stem("ufo"), "ufo" );
	deepEqual( Stem("uganda"), "ugand" );
	deepEqual( Stem("uggia"), "uggi" );
	deepEqual( Stem("uggiosa"), "uggios" );
	deepEqual( Stem("uggioso"), "uggios" );
	deepEqual( Stem("ugo"), "ugo" );
	deepEqual( Stem("ugolini"), "ugolin" );
	deepEqual( Stem("uguagliano"), "uguagl" );
	deepEqual( Stem("uguaglianza"), "uguagl" );
	deepEqual( Stem("uguagliare"), "uguagl" );
	deepEqual( Stem("ugual"), "ugual" );
	deepEqual( Stem("uguale"), "ugual" );
	deepEqual( Stem("uguali"), "ugual" );
	deepEqual( Stem("ugualmente"), "ugual" );
	deepEqual( Stem("uh"), "uh" );
	deepEqual( Stem("uias"), "uias" );
	deepEqual( Stem("uil"), "uil" );
	deepEqual( Stem("uilm"), "uilm" );
	deepEqual( Stem("uiltrasporti"), "uiltrasport" );
	deepEqual( Stem("ulcera"), "ulcer" );
	deepEqual( Stem("ulteriore"), "ulterior" );
	deepEqual( Stem("ulteriori"), "ulterior" );
	deepEqual( Stem("ulteriormente"), "ulterior" );
	deepEqual( Stem("ultim"), "ultim" );
	deepEqual( Stem("ultima"), "ultim" );
	deepEqual( Stem("ultimamente"), "ultim" );
	deepEqual( Stem("ultimativa"), "ultim" );
	deepEqual( Stem("ultime"), "ultim" );
	deepEqual( Stem("ultimi"), "ultim" );
	deepEqual( Stem("ultimo"), "ultim" );
	deepEqual( Stem("ultrà"), "ultrà" );
	deepEqual( Stem("ultranazionalista"), "ultranazional" );
	deepEqual( Stem("ultranovanmtenne"), "ultranovanmtenn" );
	deepEqual( Stem("ultras"), "ultras" );
	deepEqual( Stem("umana"), "uman" );
	deepEqual( Stem("umanamente"), "uman" );
	deepEqual( Stem("umane"), "uman" );
	deepEqual( Stem("umani"), "uman" );
	deepEqual( Stem("umanità"), "uman" );
	deepEqual( Stem("umanitari"), "umanitar" );
	deepEqual( Stem("umanitaria"), "umanitar" );
	deepEqual( Stem("umanitarià"), "umanitar" );
	deepEqual( Stem("umanitarie"), "umanitar" );
	deepEqual( Stem("umanitario"), "umanitar" );
	deepEqual( Stem("umano"), "uman" );
	deepEqual( Stem("umar"), "umar" );
	deepEqual( Stem("umberto"), "umbert" );
	deepEqual( Stem("umbra"), "umbra" );
	deepEqual( Stem("umbri"), "umbri" );
	deepEqual( Stem("umbria"), "umbri" );
	deepEqual( Stem("ume"), "ume" );
	deepEqual( Stem("umida"), "umid" );
	deepEqual( Stem("umidità"), "umid" );
	deepEqual( Stem("umido"), "umid" );
	deepEqual( Stem("umile"), "umil" );
	deepEqual( Stem("umili"), "umil" );
	deepEqual( Stem("umiliante"), "umil" );
	deepEqual( Stem("umiliare"), "umil" );
	deepEqual( Stem("umiliata"), "umil" );
	deepEqual( Stem("umiliati"), "umil" );
	deepEqual( Stem("umiliato"), "umil" );
	deepEqual( Stem("umiliazione"), "umil" );
	deepEqual( Stem("umiliazioni"), "umil" );
	deepEqual( Stem("umilmente"), "umil" );
	deepEqual( Stem("umiltà"), "umilt" );
	deepEqual( Stem("umore"), "umor" );
	deepEqual( Stem("umori"), "umor" );
	deepEqual( Stem("umorismo"), "umor" );
	deepEqual( Stem("umorista"), "umor" );
	deepEqual( Stem("un"), "un" );
	deepEqual( Stem("una"), "una" );
	deepEqual( Stem("unanime"), "unanim" );
	deepEqual( Stem("unanimismo"), "unanim" );
	deepEqual( Stem("unanimità"), "unanim" );
	deepEqual( Stem("unasca"), "unasc" );
	deepEqual( Stem("uncinate"), "uncin" );
	deepEqual( Stem("unctores"), "unctores" );
	deepEqual( Stem("undecimo"), "undecim" );
	deepEqual( Stem("under"), "under" );
	deepEqual( Stem("undicesimo"), "undicesim" );
	deepEqual( Stem("undici"), "undic" );
	deepEqual( Stem("une"), "une" );
	deepEqual( Stem("unendo"), "unend" );
	deepEqual( Stem("unge"), "unge" );
	deepEqual( Stem("ungendo"), "ungend" );
	deepEqual( Stem("unger"), "unger" );
	deepEqual( Stem("ungere"), "unger" );
	deepEqual( Stem("ungerò"), "unger" );
	deepEqual( Stem("ungherese"), "ungheres" );
	deepEqual( Stem("ungheresi"), "ungheres" );
	deepEqual( Stem("ungheria"), "ungher" );
	deepEqual( Stem("unghie"), "unghi" );
	deepEqual( Stem("ungili"), "ungil" );
	deepEqual( Stem("unguenta"), "unguent" );
	deepEqual( Stem("unguenti"), "unguent" );
	deepEqual( Stem("unguento"), "unguent" );
	deepEqual( Stem("unhcr"), "unhcr" );
	deepEqual( Stem("uni"), "uni" );
	deepEqual( Stem("unì"), "unì" );
	deepEqual( Stem("unica"), "unic" );
	deepEqual( Stem("unicamente"), "unic" );
	deepEqual( Stem("unicef"), "unicef" );
	deepEqual( Stem("unicem"), "unicem" );
	deepEqual( Stem("unici"), "unic" );
	deepEqual( Stem("unico"), "unic" );
	deepEqual( Stem("unificate"), "unific" );
	deepEqual( Stem("unificato"), "unific" );
	deepEqual( Stem("uniformarli"), "uniform" );
	deepEqual( Stem("uniformavano"), "uniform" );
	deepEqual( Stem("uniforme"), "uniform" );
	deepEqual( Stem("uniformità"), "uniform" );
	deepEqual( Stem("unilaterale"), "unilateral" );
	deepEqual( Stem("uninominale"), "uninominal" );
	deepEqual( Stem("uninominali"), "uninominal" );
	deepEqual( Stem("union"), "union" );
	deepEqual( Stem("unione"), "union" );
	deepEqual( Stem("unipi"), "unip" );
	deepEqual( Stem("unipol"), "unipol" );
	deepEqual( Stem("unire"), "unir" );
	deepEqual( Stem("unirsi"), "unirs" );
	deepEqual( Stem("unirvi"), "unirv" );
	deepEqual( Stem("unisce"), "unisc" );
	deepEqual( Stem("uniscono"), "unisc" );
	deepEqual( Stem("unita"), "unit" );
	deepEqual( Stem("unità"), "unit" );
	deepEqual( Stem("unitari"), "unitar" );
	deepEqual( Stem("unitaria"), "unitar" );
	deepEqual( Stem("unitarie"), "unitar" );
	deepEqual( Stem("unitarieta"), "unitariet" );
	deepEqual( Stem("unitarietà"), "unitariet" );
	deepEqual( Stem("unitario"), "unitar" );
	deepEqual( Stem("unite"), "unit" );
	deepEqual( Stem("united"), "united" );
	deepEqual( Stem("uniti"), "unit" );
	deepEqual( Stem("unitissimo"), "unitissim" );
	deepEqual( Stem("unito"), "unit" );
	deepEqual( Stem("univa"), "univ" );
	deepEqual( Stem("univano"), "univ" );
	deepEqual( Stem("universale"), "universal" );
	deepEqual( Stem("universali"), "universal" );
	deepEqual( Stem("universalità"), "universal" );
	deepEqual( Stem("università"), "univers" );
	deepEqual( Stem("universitaria"), "universitar" );
	deepEqual( Stem("university"), "university" );
	deepEqual( Stem("universo"), "univers" );
	deepEqual( Stem("unni"), "unni" );
	deepEqual( Stem("uno"), "uno" );
	deepEqual( Stem("unocal"), "unocal" );
	deepEqual( Stem("unosom"), "unosom" );
	deepEqual( Stem("unprofor"), "unprofor" );
	deepEqual( Stem("unr"), "unr" );
	deepEqual( Stem("unte"), "unte" );
	deepEqual( Stem("unti"), "unti" );
	deepEqual( Stem("unto"), "unto" );
	deepEqual( Stem("untor"), "untor" );
	deepEqual( Stem("untore"), "untor" );
	deepEqual( Stem("untorello"), "untorell" );
	deepEqual( Stem("untori"), "untor" );
	deepEqual( Stem("untumi"), "untum" );
	deepEqual( Stem("unzione"), "unzion" );
	deepEqual( Stem("unzioni"), "unzion" );
	deepEqual( Stem("uom"), "uom" );
	deepEqual( Stem("uomini"), "uomin" );
	deepEqual( Stem("uomo"), "uom" );
	deepEqual( Stem("uova"), "uov" );
	deepEqual( Stem("up"), "up" );
	deepEqual( Stem("uranio"), "uran" );
	deepEqual( Stem("urban"), "urban" );
	deepEqual( Stem("urbana"), "urban" );
	deepEqual( Stem("urbane"), "urban" );
	deepEqual( Stem("urbani"), "urban" );
	deepEqual( Stem("urbanistiche"), "urbanist" );
	deepEqual( Stem("urbano"), "urban" );
	deepEqual( Stem("urbe"), "urbe" );
	deepEqual( Stem("urbini"), "urbin" );
	deepEqual( Stem("urbis"), "urbis" );
	deepEqual( Stem("urgente"), "urgent" );
	deepEqual( Stem("urgenti"), "urgent" );
	deepEqual( Stem("urgenza"), "urgenz" );
	deepEqual( Stem("urgenze"), "urgenz" );
	deepEqual( Stem("urla"), "urla" );
	deepEqual( Stem("urlando"), "urland" );
	deepEqual( Stem("urlano"), "urlan" );
	deepEqual( Stem("urlare"), "urlar" );
	deepEqual( Stem("urlargli"), "urlargl" );
	deepEqual( Stem("urlato"), "urlat" );
	deepEqual( Stem("urlatori"), "urlator" );
	deepEqual( Stem("urlava"), "urlav" );
	deepEqual( Stem("urlavan"), "urlavan" );
	deepEqual( Stem("urlavano"), "urlav" );
	deepEqual( Stem("urli"), "urli" );
	deepEqual( Stem("urlìo"), "urlì" );
	deepEqual( Stem("urlo"), "urlo" );
	deepEqual( Stem("urlò"), "urlò" );
	deepEqual( Stem("urloni"), "urlon" );
	deepEqual( Stem("urna"), "urna" );
	deepEqual( Stem("urne"), "urne" );
	deepEqual( Stem("urrea"), "urre" );
	deepEqual( Stem("urso"), "urso" );
	deepEqual( Stem("urss"), "urss" );
	deepEqual( Stem("urtacchiando"), "urtacc" );
	deepEqual( Stem("urtando"), "urtand" );
	deepEqual( Stem("urtano"), "urtan" );
	deepEqual( Stem("urtar"), "urtar" );
	deepEqual( Stem("urtati"), "urtat" );
	deepEqual( Stem("urtato"), "urtat" );
	deepEqual( Stem("urti"), "urti" );
	deepEqual( Stem("urtone"), "urton" );
	deepEqual( Stem("urtoni"), "urton" );
	deepEqual( Stem("uruguaiano"), "uruguai" );
	deepEqual( Stem("usa"), "usa" );
	deepEqual( Stem("usan"), "usan" );
	deepEqual( Stem("usano"), "usan" );
	deepEqual( Stem("usanza"), "usanz" );
	deepEqual( Stem("usanze"), "usanz" );
	deepEqual( Stem("usar"), "usar" );
	deepEqual( Stem("usare"), "usar" );
	deepEqual( Stem("usarlo"), "usarl" );
	deepEqual( Stem("usarono"), "usar" );
	deepEqual( Stem("usarsi"), "usars" );
	deepEqual( Stem("usasse"), "usass" );
	deepEqual( Stem("usata"), "usat" );
	deepEqual( Stem("usate"), "usat" );
	deepEqual( Stem("usati"), "usat" );
	deepEqual( Stem("usato"), "usat" );
	deepEqual( Stem("usava"), "usav" );
	deepEqual( Stem("usavan"), "usavan" );
	deepEqual( Stem("usavano"), "usav" );
	deepEqual( Stem("uscendo"), "uscend" );
	deepEqual( Stem("uscente"), "uscent" );
	deepEqual( Stem("uscenti"), "uscent" );
	deepEqual( Stem("usci"), "usci" );
	deepEqual( Stem("uscì"), "uscì" );
	deepEqual( Stem("usciaccio"), "usciacc" );
	deepEqual( Stem("usciamo"), "usciam" );
	deepEqual( Stem("uscio"), "usci" );
	deepEqual( Stem("usciolino"), "usciolin" );
	deepEqual( Stem("uscir"), "uscir" );
	deepEqual( Stem("uscire"), "uscir" );
	deepEqual( Stem("uscirebbe"), "uscirebb" );
	deepEqual( Stem("usciremo"), "uscirem" );
	deepEqual( Stem("uscirne"), "uscirn" );
	deepEqual( Stem("usciron"), "usciron" );
	deepEqual( Stem("uscirono"), "uscir" );
	deepEqual( Stem("uscisse"), "usciss" );
	deepEqual( Stem("uscissero"), "uscisser" );
	deepEqual( Stem("uscita"), "uscit" );
	deepEqual( Stem("uscite"), "uscit" );
	deepEqual( Stem("usciti"), "uscit" );
	deepEqual( Stem("uscito"), "uscit" );
	deepEqual( Stem("usciva"), "usciv" );
	deepEqual( Stem("uscivan"), "uscivan" );
	deepEqual( Stem("uscivano"), "usciv" );
	deepEqual( Stem("uscivo"), "usciv" );
	deepEqual( Stem("usd"), "usd" );
	deepEqual( Stem("usi"), "usi" );
	deepEqual( Stem("usitato"), "usit" );
	deepEqual( Stem("usl"), "usl" );
	deepEqual( Stem("uso"), "uso" );
	deepEqual( Stem("usò"), "usò" );
	deepEqual( Stem("usppi"), "usppi" );
	deepEqual( Stem("usted"), "usted" );
	deepEqual( Stem("ustione"), "ustion" );
	deepEqual( Stem("usuale"), "usual" );
	deepEqual( Stem("usufruito"), "usufru" );
	deepEqual( Stem("usura"), "usur" );
	deepEqual( Stem("usurpare"), "usurp" );
	deepEqual( Stem("utensili"), "utensil" );
	deepEqual( Stem("utente"), "utent" );
	deepEqual( Stem("utenti"), "utent" );
	deepEqual( Stem("utenza"), "utenz" );
	deepEqual( Stem("utenze"), "utenz" );
	deepEqual( Stem("utile"), "util" );
	deepEqual( Stem("utili"), "util" );
	deepEqual( Stem("utilì"), "util" );
	deepEqual( Stem("utilità"), "util" );
	deepEqual( Stem("utilizza"), "utilizz" );
	deepEqual( Stem("utilizzando"), "utilizz" );
	deepEqual( Stem("utilizzandole"), "utilizz" );
	deepEqual( Stem("utilizzano"), "utilizz" );
	deepEqual( Stem("utilizzare"), "utilizz" );
	deepEqual( Stem("utilizzata"), "utilizz" );
	deepEqual( Stem("utilizzate"), "utilizz" );
	deepEqual( Stem("utilizzati"), "utilizz" );
	deepEqual( Stem("utilizzato"), "utilizz" );
	deepEqual( Stem("utilizzazione"), "utilizz" );
	deepEqual( Stem("utilizzerà"), "utilizz" );
	deepEqual( Stem("utilizzi"), "utilizz" );
	deepEqual( Stem("utilizzo"), "utilizz" );
	deepEqual( Stem("utri"), "utri" );
	deepEqual( Stem("uva"), "uva" );
	deepEqual( Stem("uve"), "uve" );
	deepEqual( Stem("uxoricida"), "uxoricid" );
	deepEqual( Stem("v"), "v" );
	deepEqual( Stem("va"), "va" );
	deepEqual( Stem("vacanza"), "vacanz" );
	deepEqual( Stem("vacanze"), "vacanz" );
	deepEqual( Stem("vacato"), "vac" );
	deepEqual( Stem("vaccaro"), "vaccar" );
	deepEqual( Stem("vaccherella"), "vaccherell" );
	deepEqual( Stem("vaccherelle"), "vaccherell" );
	deepEqual( Stem("vacchetta"), "vacchett" );
	deepEqual( Stem("vaccino"), "vaccin" );
	deepEqual( Stem("vacek"), "vacek" );
	deepEqual( Stem("vada"), "vad" );
	deepEqual( Stem("vadano"), "vad" );
	deepEqual( Stem("vado"), "vad" );
	deepEqual( Stem("vaga"), "vag" );
	deepEqual( Stem("vagabonda"), "vagabond" );
	deepEqual( Stem("vagabondi"), "vagabond" );
	deepEqual( Stem("vagabondo"), "vagabond" );
	deepEqual( Stem("vagando"), "vag" );
	deepEqual( Stem("vagano"), "vag" );
	deepEqual( Stem("vagante"), "vagant" );
	deepEqual( Stem("vaganti"), "vagant" );
	deepEqual( Stem("vagar"), "vag" );
	deepEqual( Stem("vagheggiare"), "vaghegg" );
	deepEqual( Stem("vagheggiato"), "vaghegg" );
	deepEqual( Stem("vagiti"), "vag" );
	deepEqual( Stem("vagito"), "vag" );
	deepEqual( Stem("vaglia"), "vagl" );
	deepEqual( Stem("vagliata"), "vagl" );
	deepEqual( Stem("vagliensteino"), "vaglienstein" );
	deepEqual( Stem("vaglion"), "vaglion" );
	deepEqual( Stem("vagoni"), "vagon" );
	deepEqual( Stem("vai"), "vai" );
	deepEqual( Stem("vaiano"), "vai" );
	deepEqual( Stem("vaio"), "vai" );
	deepEqual( Stem("vaivada"), "vaivad" );
	deepEqual( Stem("val"), "val" );
	deepEqual( Stem("valdagno"), "valdagn" );
	deepEqual( Stem("valdes"), "valdes" );
	deepEqual( Stem("valdistano"), "valdist" );
	deepEqual( Stem("valdo"), "vald" );
	deepEqual( Stem("valdostana"), "valdostan" );
	deepEqual( Stem("valdostano"), "valdost" );
	deepEqual( Stem("vale"), "val" );
	deepEqual( Stem("valente"), "valent" );
	deepEqual( Stem("valenti"), "valent" );
	deepEqual( Stem("valentia"), "valent" );
	deepEqual( Stem("valentina"), "valentin" );
	deepEqual( Stem("valentini"), "valentin" );
	deepEqual( Stem("valentino"), "valentin" );
	deepEqual( Stem("valentuomini"), "valentuomin" );
	deepEqual( Stem("valenza"), "valenz" );
	deepEqual( Stem("valere"), "val" );
	deepEqual( Stem("valeria"), "valer" );
	deepEqual( Stem("valeriano"), "valer" );
	deepEqual( Stem("valerio"), "valer" );
	deepEqual( Stem("valersi"), "val" );
	deepEqual( Stem("valesse"), "valess" );
	deepEqual( Stem("valessero"), "val" );
	deepEqual( Stem("valeva"), "val" );
	deepEqual( Stem("valevan"), "valevan" );
	deepEqual( Stem("valevano"), "val" );
	deepEqual( Stem("valga"), "valg" );
	deepEqual( Stem("valgono"), "valg" );
	deepEqual( Stem("vali"), "val" );
	deepEqual( Stem("valichi"), "valic" );
	deepEqual( Stem("valico"), "valic" );
	deepEqual( Stem("valida"), "valid" );
	deepEqual( Stem("validi"), "valid" );
	deepEqual( Stem("validità"), "valid" );
	deepEqual( Stem("valido"), "valid" );
	deepEqual( Stem("valinotti"), "valinott" );
	deepEqual( Stem("valle"), "vall" );
	deepEqual( Stem("valletta"), "vallett" );
	deepEqual( Stem("valley"), "valley" );
	deepEqual( Stem("valli"), "vall" );
	deepEqual( Stem("valligiani"), "valligian" );
	deepEqual( Stem("vallistai"), "vallista" );
	deepEqual( Stem("valloncelli"), "valloncell" );
	deepEqual( Stem("vallone"), "vallon" );
	deepEqual( Stem("valobra"), "valobr" );
	deepEqual( Stem("valore"), "valor" );
	deepEqual( Stem("valori"), "valor" );
	deepEqual( Stem("valorizza"), "valorizz" );
	deepEqual( Stem("valorizzare"), "valorizz" );
	deepEqual( Stem("valorizzazione"), "valorizz" );
	deepEqual( Stem("valorizzeranno"), "valorizz" );
	deepEqual( Stem("valoti"), "valot" );
	deepEqual( Stem("valsassina"), "valsassin" );
	deepEqual( Stem("valse"), "vals" );
	deepEqual( Stem("valsero"), "valser" );
	deepEqual( Stem("valtellina"), "valtellin" );
	deepEqual( Stem("valtellinese"), "valtellines" );
	deepEqual( Stem("valtrompia"), "valtromp" );
	deepEqual( Stem("valuta"), "val" );
	deepEqual( Stem("valutando"), "valut" );
	deepEqual( Stem("valutar"), "valut" );
	deepEqual( Stem("valutare"), "valut" );
	deepEqual( Stem("valutari"), "valutar" );
	deepEqual( Stem("valutaria"), "valutar" );
	deepEqual( Stem("valutarie"), "valutar" );
	deepEqual( Stem("valutario"), "valutar" );
	deepEqual( Stem("valutata"), "valut" );
	deepEqual( Stem("valutate"), "valut" );
	deepEqual( Stem("valutato"), "valut" );
	deepEqual( Stem("valutazione"), "valut" );
	deepEqual( Stem("valutazioni"), "valut" );
	deepEqual( Stem("valute"), "val" );
	deepEqual( Stem("vampiro"), "vampir" );
	deepEqual( Stem("van"), "van" );
	deepEqual( Stem("vana"), "van" );
	deepEqual( Stem("vancouver"), "vancouver" );
	deepEqual( Stem("vandalismo"), "vandal" );
	deepEqual( Stem("vandalo"), "vandal" );
	deepEqual( Stem("vandernoot"), "vandernoot" );
	deepEqual( Stem("vane"), "van" );
	deepEqual( Stem("vaneggiamenti"), "vanegg" );
	deepEqual( Stem("vaneggiamento"), "vanegg" );
	deepEqual( Stem("vanga"), "vang" );
	deepEqual( Stem("vangelo"), "vangel" );
	deepEqual( Stem("vanghe"), "vang" );
	deepEqual( Stem("vangile"), "vangil" );
	deepEqual( Stem("vanguardia"), "vanguard" );
	deepEqual( Stem("vani"), "van" );
	deepEqual( Stem("vanificare"), "vanific" );
	deepEqual( Stem("vanificati"), "vanific" );
	deepEqual( Stem("vanificato"), "vanific" );
	deepEqual( Stem("vanigli"), "vanigl" );
	deepEqual( Stem("vanità"), "vanit" );
	deepEqual( Stem("vanni"), "vann" );
	deepEqual( Stem("vannino"), "vannin" );
	deepEqual( Stem("vanno"), "vann" );
	deepEqual( Stem("vannoni"), "vannon" );
	deepEqual( Stem("vano"), "van" );
	deepEqual( Stem("vanoli"), "vanol" );
	deepEqual( Stem("vanta"), "vant" );
	deepEqual( Stem("vantaggi"), "vantagg" );
	deepEqual( Stem("vantaggio"), "vantagg" );
	deepEqual( Stem("vantaggioso"), "vantagg" );
	deepEqual( Stem("vantano"), "vant" );
	deepEqual( Stem("vantarmi"), "vant" );
	deepEqual( Stem("vantarsene"), "vant" );
	deepEqual( Stem("vantarsi"), "vant" );
	deepEqual( Stem("vantati"), "vant" );
	deepEqual( Stem("vantato"), "vant" );
	deepEqual( Stem("vanto"), "vant" );
	deepEqual( Stem("vapori"), "vapor" );
	deepEqual( Stem("var"), "var" );
	deepEqual( Stem("varare"), "var" );
	deepEqual( Stem("varate"), "var" );
	deepEqual( Stem("varato"), "var" );
	deepEqual( Stem("varcata"), "varc" );
	deepEqual( Stem("varcato"), "varc" );
	deepEqual( Stem("varchi"), "varc" );
	deepEqual( Stem("varda"), "vard" );
	deepEqual( Stem("varerà"), "var" );
	deepEqual( Stem("varese"), "vares" );
	deepEqual( Stem("varesina"), "varesin" );
	deepEqual( Stem("varesotto"), "varesott" );
	deepEqual( Stem("vari"), "var" );
	deepEqual( Stem("varia"), "var" );
	deepEqual( Stem("variabile"), "variabil" );
	deepEqual( Stem("variabili"), "variabil" );
	deepEqual( Stem("variandosi"), "var" );
	deepEqual( Stem("variante"), "variant" );
	deepEqual( Stem("varianti"), "variant" );
	deepEqual( Stem("variata"), "var" );
	deepEqual( Stem("variato"), "var" );
	deepEqual( Stem("variava"), "var" );
	deepEqual( Stem("variavano"), "var" );
	deepEqual( Stem("variazione"), "variazion" );
	deepEqual( Stem("variazioni"), "variazion" );
	deepEqual( Stem("varie"), "var" );
	deepEqual( Stem("variegato"), "varieg" );
	deepEqual( Stem("varietà"), "variet" );
	deepEqual( Stem("varietali"), "varietal" );
	deepEqual( Stem("varii"), "var" );
	deepEqual( Stem("vario"), "var" );
	deepEqual( Stem("variopinti"), "variopint" );
	deepEqual( Stem("varo"), "var" );
	deepEqual( Stem("varrebbe"), "varrebb" );
	deepEqual( Stem("varrone"), "varron" );
	deepEqual( Stem("varsavia"), "varsav" );
	deepEqual( Stem("vasari"), "vasar" );
	deepEqual( Stem("vasca"), "vasc" );
	deepEqual( Stem("vascello"), "vascell" );
	deepEqual( Stem("vasco"), "vasc" );
	deepEqual( Stem("vasetto"), "vasett" );
	deepEqual( Stem("vash"), "vash" );
	deepEqual( Stem("vasi"), "vas" );
	deepEqual( Stem("vaso"), "vas" );
	deepEqual( Stem("vassallesco"), "vassallesc" );
	deepEqual( Stem("vassalli"), "vassall" );
	deepEqual( Stem("vasta"), "vast" );
	deepEqual( Stem("vaste"), "vast" );
	deepEqual( Stem("vastese"), "vastes" );
	deepEqual( Stem("vasti"), "vast" );
	deepEqual( Stem("vastissima"), "vastissim" );
	deepEqual( Stem("vastità"), "vastit" );
	deepEqual( Stem("vasto"), "vast" );
	deepEqual( Stem("vaticana"), "vatican" );
	deepEqual( Stem("vaticano"), "vatic" );
	deepEqual( Stem("vaticinare"), "vaticin" );
	deepEqual( Stem("vattene"), "vatten" );
	deepEqual( Stem("vattenfall"), "vattenfall" );
	deepEqual( Stem("vazquez"), "vazquez" );
	deepEqual( Stem("vd"), "vd" );
	deepEqual( Stem("vdovin"), "vdovin" );
	deepEqual( Stem("ve"), "ve" );
	deepEqual( Stem("vecce"), "vecc" );
	deepEqual( Stem("vecchi"), "vecc" );
	deepEqual( Stem("vecchia"), "vecc" );
	deepEqual( Stem("vecchie"), "vecc" );
	deepEqual( Stem("vecchiezza"), "vecchiezz" );
	deepEqual( Stem("vecchio"), "vecc" );
	deepEqual( Stem("vecchione"), "vecchion" );
	deepEqual( Stem("vece"), "vec" );
	deepEqual( Stem("veci"), "vec" );
	deepEqual( Stem("veda"), "ved" );
	deepEqual( Stem("vedano"), "ved" );
	deepEqual( Stem("vede"), "ved" );
	deepEqual( Stem("vedendo"), "ved" );
	deepEqual( Stem("vedendola"), "ved" );
	deepEqual( Stem("vedendoli"), "ved" );
	deepEqual( Stem("vedendolo"), "ved" );
	deepEqual( Stem("vedendomi"), "ved" );
	deepEqual( Stem("vedendoseli"), "vedendosel" );
	deepEqual( Stem("vedendosi"), "ved" );
	deepEqual( Stem("vedendovi"), "ved" );
	deepEqual( Stem("veder"), "veder" );
	deepEqual( Stem("vederanno"), "ved" );
	deepEqual( Stem("vederci"), "ved" );
	deepEqual( Stem("vedere"), "ved" );
	deepEqual( Stem("vedergli"), "ved" );
	deepEqual( Stem("vederla"), "ved" );
	deepEqual( Stem("vederle"), "ved" );
	deepEqual( Stem("vederli"), "ved" );
	deepEqual( Stem("vederlo"), "ved" );
	deepEqual( Stem("vederne"), "ved" );
	deepEqual( Stem("vedersela"), "vedersel" );
	deepEqual( Stem("vedersene"), "ved" );
	deepEqual( Stem("vedersi"), "ved" );
	deepEqual( Stem("vederti"), "ved" );
	deepEqual( Stem("vedervi"), "ved" );
	deepEqual( Stem("vedesse"), "vedess" );
	deepEqual( Stem("vedessero"), "ved" );
	deepEqual( Stem("vedessi"), "vedess" );
	deepEqual( Stem("vedeste"), "vedest" );
	deepEqual( Stem("vedete"), "ved" );
	deepEqual( Stem("vedettà"), "vedett" );
	deepEqual( Stem("vedeva"), "ved" );
	deepEqual( Stem("vedevamo"), "ved" );
	deepEqual( Stem("vedevan"), "vedevan" );
	deepEqual( Stem("vedevano"), "ved" );
	deepEqual( Stem("vedi"), "ved" );
	deepEqual( Stem("vediamo"), "ved" );
	deepEqual( Stem("vediate"), "ved" );
	deepEqual( Stem("vedo"), "ved" );
	deepEqual( Stem("vedon"), "vedon" );
	deepEqual( Stem("vedono"), "ved" );
	deepEqual( Stem("vedova"), "vedov" );
	deepEqual( Stem("vedrà"), "vedr" );
	deepEqual( Stem("vedrai"), "vedra" );
	deepEqual( Stem("vedranno"), "vedrann" );
	deepEqual( Stem("vedrebbe"), "vedrebb" );
	deepEqual( Stem("vedrebbero"), "vedrebber" );
	deepEqual( Stem("vedremo"), "vedrem" );
	deepEqual( Stem("vedrete"), "vedr" );
	deepEqual( Stem("vedrò"), "vedr" );
	deepEqual( Stem("veduta"), "ved" );
	deepEqual( Stem("vedute"), "ved" );
	deepEqual( Stem("veduti"), "ved" );
	deepEqual( Stem("veduto"), "ved" );
	deepEqual( Stem("veemente"), "veement" );
	deepEqual( Stem("veemenza"), "veemenz" );
	deepEqual( Stem("vega"), "veg" );
	deepEqual( Stem("vegetariana"), "vegetarian" );
	deepEqual( Stem("vegetazione"), "veget" );
	deepEqual( Stem("veglia"), "vegl" );
	deepEqual( Stem("vegliar"), "vegl" );
	deepEqual( Stem("vegliardo"), "vegliard" );
	deepEqual( Stem("vegliare"), "vegl" );
	deepEqual( Stem("vegliasse"), "vegl" );
	deepEqual( Stem("vegliato"), "vegl" );
	deepEqual( Stem("vegliava"), "vegl" );
	deepEqual( Stem("vegliavano"), "vegl" );
	deepEqual( Stem("vegliavo"), "vegl" );
	deepEqual( Stem("veglie"), "vegl" );
	deepEqual( Stem("veicoli"), "veicol" );
	deepEqual( Stem("veicolo"), "veicol" );
	deepEqual( Stem("veivoli"), "veivol" );
	deepEqual( Stem("vel"), "vel" );
	deepEqual( Stem("vela"), "vel" );
	deepEqual( Stem("velar"), "vel" );
	deepEqual( Stem("velasco"), "velasc" );
	deepEqual( Stem("velata"), "vel" );
	deepEqual( Stem("velate"), "vel" );
	deepEqual( Stem("velato"), "vel" );
	deepEqual( Stem("vele"), "vel" );
	deepEqual( Stem("veleni"), "velen" );
	deepEqual( Stem("veleno"), "velen" );
	deepEqual( Stem("velenosa"), "velen" );
	deepEqual( Stem("velenosi"), "velen" );
	deepEqual( Stem("velette"), "velett" );
	deepEqual( Stem("veli"), "vel" );
	deepEqual( Stem("veliconi"), "velicon" );
	deepEqual( Stem("velika"), "velik" );
	deepEqual( Stem("velivoli"), "velivol" );
	deepEqual( Stem("velivolo"), "velivol" );
	deepEqual( Stem("velletri"), "velletr" );
	deepEqual( Stem("velluto"), "vell" );
	deepEqual( Stem("velo"), "vel" );
	deepEqual( Stem("veloce"), "veloc" );
	deepEqual( Stem("velocemente"), "veloc" );
	deepEqual( Stem("velocissima"), "velocissim" );
	deepEqual( Stem("velocista"), "veloc" );
	deepEqual( Stem("velocità"), "veloc" );
	deepEqual( Stem("velocizzare"), "velocizz" );
	deepEqual( Stem("velodromo"), "velodrom" );
	deepEqual( Stem("velotti"), "velott" );
	deepEqual( Stem("veltroni"), "veltron" );
	deepEqual( Stem("veluti"), "vel" );
	deepEqual( Stem("vena"), "ven" );
	deepEqual( Stem("vende"), "vend" );
	deepEqual( Stem("vendemmia"), "vendemm" );
	deepEqual( Stem("vender"), "vender" );
	deepEqual( Stem("venderà"), "vend" );
	deepEqual( Stem("vendere"), "vend" );
	deepEqual( Stem("vendersene"), "vend" );
	deepEqual( Stem("vendersi"), "vend" );
	deepEqual( Stem("vendessero"), "vend" );
	deepEqual( Stem("vendetta"), "vendett" );
	deepEqual( Stem("vendette"), "vendett" );
	deepEqual( Stem("vendeva"), "vend" );
	deepEqual( Stem("vendevano"), "vend" );
	deepEqual( Stem("vendicarsi"), "vendic" );
	deepEqual( Stem("vendicati"), "vendic" );
	deepEqual( Stem("vendicativo"), "vendic" );
	deepEqual( Stem("vendicatore"), "vendic" );
	deepEqual( Stem("vendicava"), "vendic" );
	deepEqual( Stem("vendita"), "vend" );
	deepEqual( Stem("vendite"), "vend" );
	deepEqual( Stem("venditori"), "venditor" );
	deepEqual( Stem("venduta"), "vend" );
	deepEqual( Stem("vendute"), "vend" );
	deepEqual( Stem("venduti"), "vend" );
	deepEqual( Stem("vendutì"), "vendut" );
	deepEqual( Stem("venduto"), "vend" );
	deepEqual( Stem("vene"), "ven" );
	deepEqual( Stem("venefica"), "venef" );
	deepEqual( Stem("venefiche"), "venef" );
	deepEqual( Stem("venefici"), "venef" );
	deepEqual( Stem("venefico"), "venef" );
	deepEqual( Stem("venefizio"), "venefiz" );
	deepEqual( Stem("venendo"), "ven" );
	deepEqual( Stem("venendogli"), "ven" );
	deepEqual( Stem("veneno"), "venen" );
	deepEqual( Stem("venerabil"), "venerabil" );
	deepEqual( Stem("venerabile"), "vener" );
	deepEqual( Stem("venerato"), "vener" );
	deepEqual( Stem("venerazione"), "vener" );
	deepEqual( Stem("venerdi"), "venerd" );
	deepEqual( Stem("venerdì"), "venerd" );
	deepEqual( Stem("venere"), "ven" );
	deepEqual( Stem("veneta"), "venet" );
	deepEqual( Stem("veneti"), "venet" );
	deepEqual( Stem("venetì"), "venet" );
	deepEqual( Stem("veneto"), "venet" );
	deepEqual( Stem("venetoblue"), "venetoblu" );
	deepEqual( Stem("venetocapital"), "venetocapital" );
	deepEqual( Stem("venetocash"), "venetocash" );
	deepEqual( Stem("venetorend"), "venetorend" );
	deepEqual( Stem("venetoventure"), "venetoventur" );
	deepEqual( Stem("venezia"), "venez" );
	deepEqual( Stem("veneziani"), "venezian" );
	deepEqual( Stem("veneziano"), "venez" );
	deepEqual( Stem("venezuela"), "venezuel" );
	deepEqual( Stem("venezuelano"), "venezuel" );
	deepEqual( Stem("venga"), "veng" );
	deepEqual( Stem("vengan"), "vengan" );
	deepEqual( Stem("vengano"), "veng" );
	deepEqual( Stem("vengo"), "veng" );
	deepEqual( Stem("vengon"), "vengon" );
	deepEqual( Stem("vengono"), "veng" );
	deepEqual( Stem("veniate"), "ven" );
	deepEqual( Stem("venir"), "ven" );
	deepEqual( Stem("venircela"), "ven" );
	deepEqual( Stem("venirci"), "ven" );
	deepEqual( Stem("venire"), "ven" );
	deepEqual( Stem("venireinchinò"), "venireinchin" );
	deepEqual( Stem("venirgli"), "ven" );
	deepEqual( Stem("venirle"), "ven" );
	deepEqual( Stem("venirlo"), "ven" );
	deepEqual( Stem("venirne"), "ven" );
	deepEqual( Stem("venirsi"), "ven" );
	deepEqual( Stem("venirvi"), "ven" );
	deepEqual( Stem("venisse"), "veniss" );
	deepEqual( Stem("venissero"), "ven" );
	deepEqual( Stem("venite"), "ven" );
	deepEqual( Stem("venitemi"), "venitem" );
	deepEqual( Stem("veniva"), "ven" );
	deepEqual( Stem("venivamo"), "ven" );
	deepEqual( Stem("venivan"), "venivan" );
	deepEqual( Stem("venivano"), "ven" );
	deepEqual( Stem("venivo"), "ven" );
	deepEqual( Stem("venne"), "venn" );
	deepEqual( Stem("venner"), "venner" );
	deepEqual( Stem("vennero"), "venner" );
	deepEqual( Stem("venosa"), "venos" );
	deepEqual( Stem("vent"), "vent" );
	deepEqual( Stem("ventaglio"), "ventagl" );
	deepEqual( Stem("ventata"), "vent" );
	deepEqual( Stem("ventenne"), "ventenn" );
	deepEqual( Stem("ventennio"), "ventenn" );
	deepEqual( Stem("venti"), "vent" );
	deepEqual( Stem("venticello"), "venticell" );
	deepEqual( Stem("venticinque"), "venticinqu" );
	deepEqual( Stem("ventidue"), "ventidu" );
	deepEqual( Stem("ventilata"), "ventil" );
	deepEqual( Stem("ventilati"), "ventil" );
	deepEqual( Stem("ventimila"), "ventimil" );
	deepEqual( Stem("ventina"), "ventin" );
	deepEqual( Stem("ventiquattro"), "ventiquattr" );
	deepEqual( Stem("ventisei"), "ventise" );
	deepEqual( Stem("ventisette"), "ventisett" );
	deepEqual( Stem("ventitre"), "ventitr" );
	deepEqual( Stem("vento"), "vent" );
	deepEqual( Stem("ventre"), "ventr" );
	deepEqual( Stem("ventriloqua"), "ventriloqu" );
	deepEqual( Stem("ventriloquo"), "ventriloqu" );
	deepEqual( Stem("ventura"), "ventur" );
	deepEqual( Stem("venture"), "ventur" );
	deepEqual( Stem("ventures"), "ventures" );
	deepEqual( Stem("venturin"), "venturin" );
	deepEqual( Stem("venturo"), "ventur" );
	deepEqual( Stem("venturoni"), "venturon" );
	deepEqual( Stem("venuta"), "ven" );
	deepEqual( Stem("venutagli"), "venutagl" );
	deepEqual( Stem("venutale"), "venutal" );
	deepEqual( Stem("venutasi"), "venutas" );
	deepEqual( Stem("venute"), "ven" );
	deepEqual( Stem("venuti"), "ven" );
	deepEqual( Stem("venuto"), "ven" );
	deepEqual( Stem("ver"), "ver" );
	deepEqual( Stem("vera"), "ver" );
	deepEqual( Stem("verace"), "verac" );
	deepEqual( Stem("veracruz"), "veracruz" );
	deepEqual( Stem("veramente"), "ver" );
	deepEqual( Stem("verbale"), "verbal" );
	deepEqual( Stem("verbali"), "verbal" );
	deepEqual( Stem("verbo"), "verb" );
	deepEqual( Stem("vercelli"), "vercell" );
	deepEqual( Stem("verde"), "verd" );
	deepEqual( Stem("verdè"), "verd" );
	deepEqual( Stem("verdecupi"), "verdecup" );
	deepEqual( Stem("verdettò"), "verdett" );
	deepEqual( Stem("verdi"), "verd" );
	deepEqual( Stem("verdure"), "verdur" );
	deepEqual( Stem("vere"), "ver" );
	deepEqual( Stem("verecondia"), "verecond" );
	deepEqual( Stem("vergani"), "vergan" );
	deepEqual( Stem("verginale"), "verginal" );
	deepEqual( Stem("verginali"), "verginal" );
	deepEqual( Stem("vergine"), "vergin" );
	deepEqual( Stem("verginità"), "vergin" );
	deepEqual( Stem("vergogna"), "vergogn" );
	deepEqual( Stem("vergognandosi"), "vergogn" );
	deepEqual( Stem("vergognassero"), "vergogn" );
	deepEqual( Stem("vergognava"), "vergogn" );
	deepEqual( Stem("vergognosa"), "vergogn" );
	deepEqual( Stem("vergognosi"), "vergogn" );
	deepEqual( Stem("vergognoso"), "vergogn" );
	deepEqual( Stem("veri"), "ver" );
	deepEqual( Stem("verifi"), "verif" );
	deepEqual( Stem("verifica"), "verif" );
	deepEqual( Stem("verificar"), "verific" );
	deepEqual( Stem("verificare"), "verific" );
	deepEqual( Stem("verificarsi"), "verific" );
	deepEqual( Stem("verificate"), "verific" );
	deepEqual( Stem("verificatesi"), "verificates" );
	deepEqual( Stem("verificati"), "verific" );
	deepEqual( Stem("verificato"), "verific" );
	deepEqual( Stem("verificatore"), "verif" );
	deepEqual( Stem("verificatori"), "verif" );
	deepEqual( Stem("verificatosi"), "verificat" );
	deepEqual( Stem("verifiche"), "verif" );
	deepEqual( Stem("verificheremo"), "verific" );
	deepEqual( Stem("verifichi"), "verif" );
	deepEqual( Stem("verifichino"), "verifichin" );
	deepEqual( Stem("verisimile"), "verisimil" );
	deepEqual( Stem("verita"), "ver" );
	deepEqual( Stem("verità"), "verit" );
	deepEqual( Stem("verlag"), "verlag" );
	deepEqual( Stem("verlanti"), "verlant" );
	deepEqual( Stem("verme"), "verm" );
	deepEqual( Stem("vermigli"), "vermigl" );
	deepEqual( Stem("vermiglie"), "vermigl" );
	deepEqual( Stem("vermiglio"), "vermigl" );
	deepEqual( Stem("vernaccia"), "vernacc" );
	deepEqual( Stem("vernì"), "vern" );
	deepEqual( Stem("vernice"), "vernic" );
	deepEqual( Stem("vero"), "ver" );
	deepEqual( Stem("verona"), "veron" );
	deepEqual( Stem("veronese"), "verones" );
	deepEqual( Stem("veronica"), "veron" );
	deepEqual( Stem("verosimile"), "verosimil" );
	deepEqual( Stem("verrà"), "verr" );
	deepEqual( Stem("verrai"), "verra" );
	deepEqual( Stem("verranno"), "verrann" );
	deepEqual( Stem("verrebbe"), "verrebb" );
	deepEqual( Stem("verrebbero"), "verrebber" );
	deepEqual( Stem("verrei"), "verre" );
	deepEqual( Stem("verremo"), "verrem" );
	deepEqual( Stem("verri"), "verr" );
	deepEqual( Stem("verrò"), "verr" );
	deepEqual( Stem("versacci"), "versacc" );
	deepEqual( Stem("versaccio"), "versacc" );
	deepEqual( Stem("versamenti"), "vers" );
	deepEqual( Stem("versamento"), "vers" );
	deepEqual( Stem("versante"), "versant" );
	deepEqual( Stem("versanti"), "versant" );
	deepEqual( Stem("versare"), "vers" );
	deepEqual( Stem("versati"), "vers" );
	deepEqual( Stem("versatile"), "versatil" );
	deepEqual( Stem("versato"), "vers" );
	deepEqual( Stem("versetti"), "versett" );
	deepEqual( Stem("versetto"), "versett" );
	deepEqual( Stem("versi"), "vers" );
	deepEqual( Stem("versilia"), "versil" );
	deepEqual( Stem("versione"), "version" );
	deepEqual( Stem("verso"), "vers" );
	deepEqual( Stem("vert"), "vert" );
	deepEqual( Stem("vertenza"), "vertenz" );
	deepEqual( Stem("vertenze"), "vertenz" );
	deepEqual( Stem("verticale"), "vertical" );
	deepEqual( Stem("verticalizzato"), "verticalizz" );
	deepEqual( Stem("verticalmente"), "vertical" );
	deepEqual( Stem("vertice"), "vertic" );
	deepEqual( Stem("vertici"), "vertic" );
	deepEqual( Stem("verticistica"), "verticist" );
	deepEqual( Stem("verum"), "verum" );
	deepEqual( Stem("verun"), "verun" );
	deepEqual( Stem("veruna"), "verun" );
	deepEqual( Stem("verzura"), "verzur" );
	deepEqual( Stem("ves"), "ves" );
	deepEqual( Stem("vescovi"), "vescov" );
	deepEqual( Stem("vescovo"), "vescov" );
	deepEqual( Stem("vespa"), "vesp" );
	deepEqual( Stem("vespaio"), "vespai" );
	deepEqual( Stem("vespucci"), "vespucc" );
	deepEqual( Stem("vessare"), "vess" );
	deepEqual( Stem("vessato"), "vess" );
	deepEqual( Stem("vessazione"), "vessazion" );
	deepEqual( Stem("vessazioni"), "vessazion" );
	deepEqual( Stem("vessillo"), "vessill" );
	deepEqual( Stem("vesta"), "vest" );
	deepEqual( Stem("veste"), "vest" );
	deepEqual( Stem("vestendo"), "vest" );
	deepEqual( Stem("vestendolo"), "vest" );
	deepEqual( Stem("vesti"), "vest" );
	deepEqual( Stem("vestì"), "vest" );
	deepEqual( Stem("vestiario"), "vestiar" );
	deepEqual( Stem("vestigi"), "vestig" );
	deepEqual( Stem("vestigio"), "vestig" );
	deepEqual( Stem("vestigios"), "vestigios" );
	deepEqual( Stem("vestimento"), "vest" );
	deepEqual( Stem("vestir"), "vest" );
	deepEqual( Stem("vestire"), "vest" );
	deepEqual( Stem("vestirsi"), "vest" );
	deepEqual( Stem("vestita"), "vest" );
	deepEqual( Stem("vestite"), "vest" );
	deepEqual( Stem("vestitevi"), "vestit" );
	deepEqual( Stem("vestiti"), "vest" );
	deepEqual( Stem("vestito"), "vest" );
	deepEqual( Stem("vestitosi"), "vestit" );
	deepEqual( Stem("vestiva"), "vest" );
	deepEqual( Stem("vestizione"), "vestizion" );
	deepEqual( Stem("vesto"), "vest" );
	deepEqual( Stem("veterani"), "veteran" );
	deepEqual( Stem("veterinario"), "veterinar" );
	deepEqual( Stem("vetr"), "vetr" );
	deepEqual( Stem("vetrate"), "vetr" );
	deepEqual( Stem("vetri"), "vetr" );
	deepEqual( Stem("vetriate"), "vetr" );
	deepEqual( Stem("vetro"), "vetr" );
	deepEqual( Stem("vetta"), "vett" );
	deepEqual( Stem("vetticciola"), "vetticciol" );
	deepEqual( Stem("vettovagliar"), "vettovagl" );
	deepEqual( Stem("vettura"), "vettur" );
	deepEqual( Stem("vetture"), "vettur" );
	deepEqual( Stem("vezù"), "vezù" );
	deepEqual( Stem("vezzo"), "vezz" );
	deepEqual( Stem("vg"), "vg" );
	deepEqual( Stem("vi"), "vi" );
	deepEqual( Stem("via"), "via" );
	deepEqual( Stem("viadana"), "viadan" );
	deepEqual( Stem("viaggetto"), "viaggett" );
	deepEqual( Stem("viaggi"), "viagg" );
	deepEqual( Stem("viaggia"), "viagg" );
	deepEqual( Stem("viaggiano"), "viagg" );
	deepEqual( Stem("viaggiar"), "viagg" );
	deepEqual( Stem("viaggiare"), "viagg" );
	deepEqual( Stem("viaggiatore"), "viaggiator" );
	deepEqual( Stem("viaggiatori"), "viaggiator" );
	deepEqual( Stem("viaggiava"), "viagg" );
	deepEqual( Stem("viaggiavano"), "viagg" );
	deepEqual( Stem("viaggio"), "viagg" );
	deepEqual( Stem("viale"), "vial" );
	deepEqual( Stem("viali"), "vial" );
	deepEqual( Stem("vialli"), "viall" );
	deepEqual( Stem("viamare"), "viam" );
	deepEqual( Stem("viandante"), "viandant" );
	deepEqual( Stem("viandanti"), "viandant" );
	deepEqual( Stem("vianello"), "vianell" );
	deepEqual( Stem("vianini"), "vianin" );
	deepEqual( Stem("viareggina"), "viareggin" );
	deepEqual( Stem("viareggini"), "viareggin" );
	deepEqual( Stem("viareggio"), "viaregg" );
	deepEqual( Stem("viatico"), "viatic" );
	deepEqual( Stem("vibici"), "vibic" );
	deepEqual( Stem("vibo"), "vib" );
	deepEqual( Stem("vibrante"), "vibrant" );
	deepEqual( Stem("vicario"), "vicar" );
	deepEqual( Stem("vice"), "vic" );
	deepEqual( Stem("viceallenatore"), "viceallen" );
	deepEqual( Stem("vicecaposervizio"), "vicecaposerviz" );
	deepEqual( Stem("vicecomandante"), "vicecomand" );
	deepEqual( Stem("vicedirettore"), "vicedirettor" );
	deepEqual( Stem("vicenda"), "vic" );
	deepEqual( Stem("vicende"), "vic" );
	deepEqual( Stem("vicendevole"), "vicendevol" );
	deepEqual( Stem("vicendevoli"), "vicendevol" );
	deepEqual( Stem("vicendevolmente"), "vicendevol" );
	deepEqual( Stem("vicente"), "vicent" );
	deepEqual( Stem("vicentina"), "vicentin" );
	deepEqual( Stem("vicentini"), "vicentin" );
	deepEqual( Stem("vicentino"), "vicentin" );
	deepEqual( Stem("vicenza"), "vicenz" );
	deepEqual( Stem("vicepresidente"), "vicepresident" );
	deepEqual( Stem("viceprimo"), "viceprim" );
	deepEqual( Stem("vicerè"), "vicer" );
	deepEqual( Stem("vicesegretario"), "vicesegretar" );
	deepEqual( Stem("viceversa"), "vicevers" );
	deepEqual( Stem("vicina"), "vicin" );
	deepEqual( Stem("vicinanza"), "vicin" );
	deepEqual( Stem("vicinato"), "vicin" );
	deepEqual( Stem("vicine"), "vicin" );
	deepEqual( Stem("vicini"), "vicin" );
	deepEqual( Stem("vicino"), "vicin" );
	deepEqual( Stem("vicki"), "vick" );
	deepEqual( Stem("vicky"), "vicky" );
	deepEqual( Stem("vico"), "vic" );
	deepEqual( Stem("vicoforte"), "vicofort" );
	deepEqual( Stem("vicolo"), "vicol" );
	deepEqual( Stem("victoria"), "victor" );
	deepEqual( Stem("vida"), "vid" );
	deepEqual( Stem("vide"), "vid" );
	deepEqual( Stem("videlizet"), "videlizet" );
	deepEqual( Stem("videntur"), "videntur" );
	deepEqual( Stem("video"), "vide" );
	deepEqual( Stem("vider"), "vider" );
	deepEqual( Stem("videro"), "vider" );
	deepEqual( Stem("vidi"), "vid" );
	deepEqual( Stem("vidit"), "vidit" );
	deepEqual( Stem("vido"), "vid" );
	deepEqual( Stem("vidù"), "vidù" );
	deepEqual( Stem("vie"), "vie" );
	deepEqual( Stem("vien"), "vien" );
	deepEqual( Stem("viene"), "vien" );
	deepEqual( Stem("vieni"), "vien" );
	deepEqual( Stem("vienna"), "vienn" );
	deepEqual( Stem("vierchowod"), "vierchowod" );
	deepEqual( Stem("vieri"), "vier" );
	deepEqual( Stem("vieta"), "viet" );
	deepEqual( Stem("vietate"), "viet" );
	deepEqual( Stem("vietati"), "viet" );
	deepEqual( Stem("vietato"), "viet" );
	deepEqual( Stem("viezzoli"), "viezzol" );
	deepEqual( Stem("vigente"), "vigent" );
	deepEqual( Stem("vigilano"), "vigil" );
	deepEqual( Stem("vigilante"), "vigil" );
	deepEqual( Stem("vigilantes"), "vigilantes" );
	deepEqual( Stem("vigilanza"), "vigil" );
	deepEqual( Stem("vigilar"), "vigil" );
	deepEqual( Stem("vigile"), "vigil" );
	deepEqual( Stem("vigili"), "vigil" );
	deepEqual( Stem("vigilia"), "vigil" );
	deepEqual( Stem("vigliacchi"), "vigliacc" );
	deepEqual( Stem("vigna"), "vign" );
	deepEqual( Stem("vignati"), "vign" );
	deepEqual( Stem("vigne"), "vign" );
	deepEqual( Stem("vigneti"), "vignet" );
	deepEqual( Stem("vignetta"), "vignett" );
	deepEqual( Stem("vignini"), "vignin" );
	deepEqual( Stem("vigore"), "vigor" );
	deepEqual( Stem("vigorelli"), "vigorell" );
	deepEqual( Stem("vigorosa"), "vigor" );
	deepEqual( Stem("vigorosamente"), "vigor" );
	deepEqual( Stem("vigoroso"), "vigor" );
	deepEqual( Stem("viii"), "vii" );
	deepEqual( Stem("viktor"), "viktor" );
	deepEqual( Stem("vil"), "vil" );
	deepEqual( Stem("vile"), "vil" );
	deepEqual( Stem("vili"), "vil" );
	deepEqual( Stem("vilipendio"), "vilipend" );
	deepEqual( Stem("vilipesa"), "vilipes" );
	deepEqual( Stem("villa"), "vill" );
	deepEqual( Stem("villafranca"), "villafranc" );
	deepEqual( Stem("village"), "villag" );
	deepEqual( Stem("villaggi"), "villagg" );
	deepEqual( Stem("villaggio"), "villagg" );
	deepEqual( Stem("villagigo"), "villagig" );
	deepEqual( Stem("villana"), "villan" );
	deepEqual( Stem("villanaccio"), "villanacc" );
	deepEqual( Stem("villanelle"), "villanell" );
	deepEqual( Stem("villani"), "villan" );
	deepEqual( Stem("villanià"), "villan" );
	deepEqual( Stem("villanie"), "villan" );
	deepEqual( Stem("villano"), "vill" );
	deepEqual( Stem("ville"), "vill" );
	deepEqual( Stem("villeggianti"), "villegg" );
	deepEqual( Stem("villeggiare"), "villegg" );
	deepEqual( Stem("villeggiatura"), "villeggiatur" );
	deepEqual( Stem("villeggiature"), "villeggiatur" );
	deepEqual( Stem("villeggiava"), "villegg" );
	deepEqual( Stem("villorba"), "villorb" );
	deepEqual( Stem("vilmente"), "vilment" );
	deepEqual( Stem("viltà"), "vilt" );
	deepEqual( Stem("vilucchioni"), "vilucchion" );
	deepEqual( Stem("vimercati"), "vimerc" );
	deepEqual( Stem("vin"), "vin" );
	deepEqual( Stem("vince"), "vinc" );
	deepEqual( Stem("vincendone"), "vinc" );
	deepEqual( Stem("vincent"), "vincent" );
	deepEqual( Stem("vincente"), "vincent" );
	deepEqual( Stem("vincenzo"), "vincenz" );
	deepEqual( Stem("vincer"), "vincer" );
	deepEqual( Stem("vincerà"), "vinc" );
	deepEqual( Stem("vincere"), "vinc" );
	deepEqual( Stem("vinceremo"), "vinc" );
	deepEqual( Stem("vincerla"), "vinc" );
	deepEqual( Stem("vincerlo"), "vinc" );
	deepEqual( Stem("vinceva"), "vinc" );
	deepEqual( Stem("vinci"), "vinc" );
	deepEqual( Stem("vinciate"), "vinc" );
	deepEqual( Stem("vincitore"), "vincitor" );
	deepEqual( Stem("vincitori"), "vincitor" );
	deepEqual( Stem("vincolare"), "vincol" );
	deepEqual( Stem("vincolati"), "vincol" );
	deepEqual( Stem("vincoli"), "vincol" );
	deepEqual( Stem("vincono"), "vinc" );
	deepEqual( Stem("vinee"), "vine" );
	deepEqual( Stem("vini"), "vin" );
	deepEqual( Stem("vino"), "vin" );
	deepEqual( Stem("vinse"), "vins" );
	deepEqual( Stem("vinsero"), "vinser" );
	deepEqual( Stem("vinta"), "vint" );
	deepEqual( Stem("vinti"), "vint" );
	deepEqual( Stem("vinto"), "vint" );
	deepEqual( Stem("viola"), "viol" );
	deepEqual( Stem("violabile"), "violabil" );
	deepEqual( Stem("violabilissimo"), "violabilissim" );
	deepEqual( Stem("violacei"), "violace" );
	deepEqual( Stem("violante"), "violant" );
	deepEqual( Stem("violare"), "viol" );
	deepEqual( Stem("violato"), "viol" );
	deepEqual( Stem("violazione"), "violazion" );
	deepEqual( Stem("violazioni"), "violazion" );
	deepEqual( Stem("violenta"), "violent" );
	deepEqual( Stem("violente"), "violent" );
	deepEqual( Stem("violentemente"), "violent" );
	deepEqual( Stem("violenti"), "violent" );
	deepEqual( Stem("violento"), "violent" );
	deepEqual( Stem("violenza"), "violenz" );
	deepEqual( Stem("violenze"), "violenz" );
	deepEqual( Stem("viottola"), "viottol" );
	deepEqual( Stem("viottole"), "viottol" );
	deepEqual( Stem("vip"), "vip" );
	deepEqual( Stem("virale"), "viral" );
	deepEqual( Stem("virdò"), "vird" );
	deepEqual( Stem("virginia"), "virgin" );
	deepEqual( Stem("virgole"), "virgol" );
	deepEqual( Stem("virgolettato"), "virgolett" );
	deepEqual( Stem("virgolette"), "virgolett" );
	deepEqual( Stem("virile"), "viril" );
	deepEqual( Stem("virilità"), "viril" );
	deepEqual( Stem("virtu"), "virtu" );
	deepEqual( Stem("virtù"), "virtù" );
	deepEqual( Stem("virtuale"), "virtual" );
	deepEqual( Stem("virtuosamente"), "virtuos" );
	deepEqual( Stem("virtuose"), "virtuos" );
	deepEqual( Stem("virtuosi"), "virtuos" );
	deepEqual( Stem("virtuoso"), "virtuos" );
	deepEqual( Stem("vis"), "vis" );
	deepEqual( Stem("visacci"), "visacc" );
	deepEqual( Stem("visaccio"), "visacc" );
	deepEqual( Stem("viscere"), "visc" );
	deepEqual( Stem("visco"), "visc" );
	deepEqual( Stem("visconteo"), "visconte" );
	deepEqual( Stem("visconti"), "viscont" );
	deepEqual( Stem("visere"), "vis" );
	deepEqual( Stem("visi"), "vis" );
	deepEqual( Stem("visibile"), "visibil" );
	deepEqual( Stem("visibili"), "visibil" );
	deepEqual( Stem("visibilio"), "visibil" );
	deepEqual( Stem("visibilità"), "visibil" );
	deepEqual( Stem("visibilmente"), "visibil" );
	deepEqual( Stem("visiera"), "visier" );
	deepEqual( Stem("visino"), "visin" );
	deepEqual( Stem("visione"), "vision" );
	deepEqual( Stem("visioni"), "vision" );
	deepEqual( Stem("visita"), "vis" );
	deepEqual( Stem("visitando"), "visit" );
	deepEqual( Stem("visitar"), "visit" );
	deepEqual( Stem("visitare"), "visit" );
	deepEqual( Stem("visitarli"), "visit" );
	deepEqual( Stem("visitarono"), "visit" );
	deepEqual( Stem("visitassero"), "visit" );
	deepEqual( Stem("visitate"), "visit" );
	deepEqual( Stem("visitato"), "visit" );
	deepEqual( Stem("visitatori"), "visit" );
	deepEqual( Stem("visitava"), "visit" );
	deepEqual( Stem("visitavano"), "visit" );
	deepEqual( Stem("visite"), "vis" );
	deepEqual( Stem("visitò"), "visit" );
	deepEqual( Stem("viso"), "vis" );
	deepEqual( Stem("visoni"), "vison" );
	deepEqual( Stem("vispo"), "visp" );
	deepEqual( Stem("visse"), "viss" );
	deepEqual( Stem("vissero"), "visser" );
	deepEqual( Stem("vissuta"), "viss" );
	deepEqual( Stem("vissuto"), "viss" );
	deepEqual( Stem("vista"), "vist" );
	deepEqual( Stem("vistala"), "vistal" );
	deepEqual( Stem("viste"), "vist" );
	deepEqual( Stem("visti"), "vist" );
	deepEqual( Stem("visto"), "vist" );
	deepEqual( Stem("vistolo"), "vistol" );
	deepEqual( Stem("vistose"), "vistos" );
	deepEqual( Stem("vistoselo"), "vistosel" );
	deepEqual( Stem("vistosi"), "vistos" );
	deepEqual( Stem("vistoso"), "vistos" );
	deepEqual( Stem("viswanathan"), "viswanathan" );
	deepEqual( Stem("vita"), "vit" );
	deepEqual( Stem("vità"), "vit" );
	deepEqual( Stem("vitale"), "vital" );
	deepEqual( Stem("vitali"), "vital" );
	deepEqual( Stem("vitalità"), "vital" );
	deepEqual( Stem("vite"), "vit" );
	deepEqual( Stem("viti"), "vit" );
	deepEqual( Stem("viticci"), "viticc" );
	deepEqual( Stem("vitiello"), "vitiell" );
	deepEqual( Stem("vito"), "vit" );
	deepEqual( Stem("vittima"), "vittim" );
	deepEqual( Stem("vittime"), "vittim" );
	deepEqual( Stem("vitto"), "vitt" );
	deepEqual( Stem("vittore"), "vittor" );
	deepEqual( Stem("vittoria"), "vittor" );
	deepEqual( Stem("vittorie"), "vittor" );
	deepEqual( Stem("vittorio"), "vittor" );
	deepEqual( Stem("vittoriosa"), "vittor" );
	deepEqual( Stem("vituperato"), "vituper" );
	deepEqual( Stem("vituperosa"), "vituper" );
	deepEqual( Stem("viuzza"), "viuzz" );
	deepEqual( Stem("viva"), "viv" );
	deepEqual( Stem("vivace"), "vivac" );
	deepEqual( Stem("vivaci"), "vivac" );
	deepEqual( Stem("vivacità"), "vivac" );
	deepEqual( Stem("vivacizzato"), "vivacizz" );
	deepEqual( Stem("vivaldi"), "vivald" );
	deepEqual( Stem("vivamente"), "viv" );
	deepEqual( Stem("vivanda"), "vivand" );
	deepEqual( Stem("vivande"), "vivand" );
	deepEqual( Stem("vive"), "viv" );
	deepEqual( Stem("vivè"), "viv" );
	deepEqual( Stem("vivendo"), "viv" );
	deepEqual( Stem("vivente"), "vivent" );
	deepEqual( Stem("viventi"), "vivent" );
	deepEqual( Stem("viver"), "viver" );
	deepEqual( Stem("vivere"), "viv" );
	deepEqual( Stem("viveri"), "viver" );
	deepEqual( Stem("viverò"), "viv" );
	deepEqual( Stem("vivesse"), "vivess" );
	deepEqual( Stem("viveva"), "viv" );
	deepEqual( Stem("vivevano"), "viv" );
	deepEqual( Stem("vivi"), "viv" );
	deepEqual( Stem("viviamo"), "viv" );
	deepEqual( Stem("viviani"), "vivian" );
	deepEqual( Stem("vivida"), "vivid" );
	deepEqual( Stem("vivo"), "viv" );
	deepEqual( Stem("vivono"), "viv" );
	deepEqual( Stem("vivrebbe"), "vivrebb" );
	deepEqual( Stem("vivuta"), "viv" );
	deepEqual( Stem("vizi"), "viz" );
	deepEqual( Stem("vizio"), "viz" );
	deepEqual( Stem("vizzini"), "vizzin" );
	deepEqual( Stem("vladimir"), "vladim" );
	deepEqual( Stem("vlaovic"), "vlaovic" );
	deepEqual( Stem("vo"), "vo" );
	deepEqual( Stem("vocabolario"), "vocabolar" );
	deepEqual( Stem("vocaboli"), "vocabol" );
	deepEqual( Stem("vocabolo"), "vocabol" );
	deepEqual( Stem("vocali"), "vocal" );
	deepEqual( Stem("vocaltec"), "vocaltec" );
	deepEqual( Stem("vocazione"), "vocazion" );
	deepEqual( Stem("voce"), "voc" );
	deepEqual( Stem("voci"), "voc" );
	deepEqual( Stem("vociaccia"), "vociacc" );
	deepEqual( Stem("vocina"), "vocin" );
	deepEqual( Stem("vocione"), "vocion" );
	deepEqual( Stem("vodka"), "vodk" );
	deepEqual( Stem("voeller"), "voeller" );
	deepEqual( Stem("voga"), "vog" );
	deepEqual( Stem("vogando"), "vog" );
	deepEqual( Stem("voglia"), "vogl" );
	deepEqual( Stem("vogliam"), "vogliam" );
	deepEqual( Stem("vogliamo"), "vogl" );
	deepEqual( Stem("voglian"), "voglian" );
	deepEqual( Stem("vogliano"), "vogl" );
	deepEqual( Stem("vogliatene"), "vogliaten" );
	deepEqual( Stem("voglie"), "vogl" );
	deepEqual( Stem("voglio"), "vogl" );
	deepEqual( Stem("voglion"), "voglion" );
	deepEqual( Stem("vogliono"), "vogl" );
	deepEqual( Stem("vogliosa"), "voglios" );
	deepEqual( Stem("vogliosi"), "voglios" );
	deepEqual( Stem("voglioso"), "voglios" );
	deepEqual( Stem("voi"), "voi" );
	deepEqual( Stem("vola"), "vol" );
	deepEqual( Stem("volan"), "volan" );
	deepEqual( Stem("volante"), "volant" );
	deepEqual( Stem("volanti"), "volant" );
	deepEqual( Stem("volantino"), "volantin" );
	deepEqual( Stem("volar"), "vol" );
	deepEqual( Stem("volare"), "vol" );
	deepEqual( Stem("volatile"), "volatil" );
	deepEqual( Stem("volatili"), "volatil" );
	deepEqual( Stem("volava"), "vol" );
	deepEqual( Stem("volavan"), "volavan" );
	deepEqual( Stem("volendo"), "vol" );
	deepEqual( Stem("volentieri"), "volentier" );
	deepEqual( Stem("voler"), "voler" );
	deepEqual( Stem("volerci"), "vol" );
	deepEqual( Stem("volere"), "vol" );
	deepEqual( Stem("volerebbe"), "vol" );
	deepEqual( Stem("volergliene"), "vol" );
	deepEqual( Stem("voleri"), "voler" );
	deepEqual( Stem("volerle"), "vol" );
	deepEqual( Stem("volerlo"), "vol" );
	deepEqual( Stem("volermi"), "vol" );
	deepEqual( Stem("volersi"), "vol" );
	deepEqual( Stem("volervi"), "vol" );
	deepEqual( Stem("volesse"), "voless" );
	deepEqual( Stem("volessero"), "vol" );
	deepEqual( Stem("volessi"), "voless" );
	deepEqual( Stem("volessimo"), "volessim" );
	deepEqual( Stem("voleste"), "volest" );
	deepEqual( Stem("volete"), "vol" );
	deepEqual( Stem("voleva"), "vol" );
	deepEqual( Stem("volevan"), "volevan" );
	deepEqual( Stem("volevano"), "vol" );
	deepEqual( Stem("volevate"), "vol" );
	deepEqual( Stem("volevi"), "vol" );
	deepEqual( Stem("volevo"), "vol" );
	deepEqual( Stem("volgare"), "volg" );
	deepEqual( Stem("volgari"), "volgar" );
	deepEqual( Stem("volgarità"), "volgar" );
	deepEqual( Stem("volge"), "volg" );
	deepEqual( Stem("volgendosi"), "volg" );
	deepEqual( Stem("volgere"), "volg" );
	deepEqual( Stem("volgeva"), "volg" );
	deepEqual( Stem("volgo"), "volg" );
	deepEqual( Stem("voli"), "vol" );
	deepEqual( Stem("volker"), "volker" );
	deepEqual( Stem("volkswagen"), "volkswagen" );
	deepEqual( Stem("volle"), "voll" );
	deepEqual( Stem("vollero"), "voller" );
	deepEqual( Stem("volley"), "volley" );
	deepEqual( Stem("volnmtarietà"), "volnmtariet" );
	deepEqual( Stem("volo"), "vol" );
	deepEqual( Stem("volontà"), "volont" );
	deepEqual( Stem("volontari"), "volontar" );
	deepEqual( Stem("volontaria"), "volontar" );
	deepEqual( Stem("volontariamente"), "volontar" );
	deepEqual( Stem("volontariato"), "volontar" );
	deepEqual( Stem("volontario"), "volontar" );
	deepEqual( Stem("volpe"), "volp" );
	deepEqual( Stem("volsero"), "volser" );
	deepEqual( Stem("volta"), "volt" );
	deepEqual( Stem("voltafaccia"), "voltafacc" );
	deepEqual( Stem("voltan"), "voltan" );
	deepEqual( Stem("voltando"), "volt" );
	deepEqual( Stem("voltandosi"), "volt" );
	deepEqual( Stem("voltano"), "volt" );
	deepEqual( Stem("voltar"), "volt" );
	deepEqual( Stem("voltare"), "volt" );
	deepEqual( Stem("voltaron"), "voltaron" );
	deepEqual( Stem("voltarono"), "volt" );
	deepEqual( Stem("voltarsi"), "volt" );
	deepEqual( Stem("voltasse"), "volt" );
	deepEqual( Stem("voltata"), "volt" );
	deepEqual( Stem("voltatasi"), "voltatas" );
	deepEqual( Stem("voltate"), "volt" );
	deepEqual( Stem("voltatisi"), "voltatis" );
	deepEqual( Stem("voltato"), "volt" );
	deepEqual( Stem("voltatosi"), "voltat" );
	deepEqual( Stem("voltava"), "volt" );
	deepEqual( Stem("voltavan"), "voltavan" );
	deepEqual( Stem("voltavano"), "volt" );
	deepEqual( Stem("volte"), "volt" );
	deepEqual( Stem("volteggiare"), "voltegg" );
	deepEqual( Stem("volti"), "volt" );
	deepEqual( Stem("volto"), "volt" );
	deepEqual( Stem("voltò"), "volt" );
	deepEqual( Stem("voltri"), "voltr" );
	deepEqual( Stem("volume"), "volum" );
	deepEqual( Stem("volumi"), "volum" );
	deepEqual( Stem("voluminosa"), "volumin" );
	deepEqual( Stem("voluta"), "vol" );
	deepEqual( Stem("volute"), "vol" );
	deepEqual( Stem("voluti"), "vol" );
	deepEqual( Stem("voluto"), "vol" );
	deepEqual( Stem("voluttà"), "volutt" );
	deepEqual( Stem("von"), "von" );
	deepEqual( Stem("voragine"), "voragin" );
	deepEqual( Stem("voria"), "vor" );
	deepEqual( Stem("vorrà"), "vorr" );
	deepEqual( Stem("vorrai"), "vorra" );
	deepEqual( Stem("vorranno"), "vorrann" );
	deepEqual( Stem("vorrebbe"), "vorrebb" );
	deepEqual( Stem("vorrebbero"), "vorrebber" );
	deepEqual( Stem("vorrei"), "vorre" );
	deepEqual( Stem("vorremmo"), "vorr" );
	deepEqual( Stem("vorreste"), "vorrest" );
	deepEqual( Stem("vorresti"), "vorrest" );
	deepEqual( Stem("vorrete"), "vorr" );
	deepEqual( Stem("vortice"), "vortic" );
	deepEqual( Stem("vossignoria"), "vossignor" );
	deepEqual( Stem("vostra"), "vostr" );
	deepEqual( Stem("vostre"), "vostr" );
	deepEqual( Stem("vostri"), "vostr" );
	deepEqual( Stem("vostro"), "vostr" );
	deepEqual( Stem("vota"), "vot" );
	deepEqual( Stem("votando"), "vot" );
	deepEqual( Stem("votandolo"), "vot" );
	deepEqual( Stem("votanti"), "votant" );
	deepEqual( Stem("votare"), "vot" );
	deepEqual( Stem("votargli"), "vot" );
	deepEqual( Stem("votata"), "vot" );
	deepEqual( Stem("votate"), "vot" );
	deepEqual( Stem("votato"), "vot" );
	deepEqual( Stem("votatolo"), "votatol" );
	deepEqual( Stem("votavano"), "vot" );
	deepEqual( Stem("votazione"), "votazion" );
	deepEqual( Stem("votazioni"), "votazion" );
	deepEqual( Stem("vote"), "vot" );
	deepEqual( Stem("voterà"), "vot" );
	deepEqual( Stem("voteremo"), "vot" );
	deepEqual( Stem("voti"), "vot" );
	deepEqual( Stem("vòti"), "vòt" );
	deepEqual( Stem("votiamo"), "vot" );
	deepEqual( Stem("voto"), "vot" );
	deepEqual( Stem("vòto"), "vòt" );
	deepEqual( Stem("votò"), "vot" );
	deepEqual( Stem("votum"), "votum" );
	deepEqual( Stem("vox"), "vox" );
	deepEqual( Stem("vpic"), "vpic" );
	deepEqual( Stem("vqz"), "vqz" );
	deepEqual( Stem("vte"), "vte" );
	deepEqual( Stem("vu"), "vu" );
	deepEqual( Stem("vukosa"), "vukos" );
	deepEqual( Stem("vulcanologico"), "vulcanolog" );
	deepEqual( Stem("vulneraria"), "vulnerar" );
	deepEqual( Stem("vuoi"), "vuo" );
	deepEqual( Stem("vuol"), "vuol" );
	deepEqual( Stem("vuole"), "vuol" );
	deepEqual( Stem("vuota"), "vuot" );
	deepEqual( Stem("vuote"), "vuot" );
	deepEqual( Stem("vuoto"), "vuot" );
	deepEqual( Stem("waigel"), "waigel" );
	deepEqual( Stem("wainaina"), "wainain" );
	deepEqual( Stem("wall"), "wall" );
	deepEqual( Stem("wallenius"), "wallenius" );
	deepEqual( Stem("wallenstein"), "wallenstein" );
	deepEqual( Stem("walter"), "walter" );
	deepEqual( Stem("war"), "war" );
	deepEqual( Stem("ward"), "ward" );
	deepEqual( Stem("wardak"), "wardak" );
	deepEqual( Stem("wardle"), "wardl" );
	deepEqual( Stem("warr"), "warr" );
	deepEqual( Stem("warrant"), "warrant" );
	deepEqual( Stem("warren"), "warren" );
	deepEqual( Stem("warriors"), "warriors" );
	deepEqual( Stem("washington"), "washington" );
	deepEqual( Stem("watan"), "watan" );
	deepEqual( Stem("watch"), "watc" );
	deepEqual( Stem("water"), "water" );
	deepEqual( Stem("wayne"), "wayn" );
	deepEqual( Stem("wbo"), "wbo" );
	deepEqual( Stem("webb"), "webb" );
	deepEqual( Stem("weekend"), "weekend" );
	deepEqual( Stem("wehrmacht"), "wehrmacht" );
	deepEqual( Stem("welt"), "welt" );
	deepEqual( Stem("wenders"), "wenders" );
	deepEqual( Stem("werner"), "werner" );
	deepEqual( Stem("wertmuller"), "wertmuller" );
	deepEqual( Stem("wes"), "wes" );
	deepEqual( Stem("west"), "west" );
	deepEqual( Stem("westafalisches"), "westafalisches" );
	deepEqual( Stem("western"), "western" );
	deepEqual( Stem("westinghouse"), "westinghous" );
	deepEqual( Stem("whistler"), "whistler" );
	deepEqual( Stem("whitley"), "whitley" );
	deepEqual( Stem("wicha"), "wich" );
	deepEqual( Stem("wilczek"), "wilczek" );
	deepEqual( Stem("wilfried"), "wilfried" );
	deepEqual( Stem("willer"), "willer" );
	deepEqual( Stem("william"), "william" );
	deepEqual( Stem("williame"), "william" );
	deepEqual( Stem("willis"), "willis" );
	deepEqual( Stem("willy"), "willy" );
	deepEqual( Stem("wilma"), "wilm" );
	deepEqual( Stem("wilson"), "wilson" );
	deepEqual( Stem("wim"), "wim" );
	deepEqual( Stem("windows"), "windows" );
	deepEqual( Stem("wings"), "wings" );
	deepEqual( Stem("winter"), "winter" );
	deepEqual( Stem("winterberg"), "winterberg" );
	deepEqual( Stem("winters"), "winters" );
	deepEqual( Stem("wojtyla"), "wojtyl" );
	deepEqual( Stem("wolf"), "wolf" );
	deepEqual( Stem("wolfgang"), "wolfgang" );
	deepEqual( Stem("woods"), "woods" );
	deepEqual( Stem("wordsworth"), "wordsworth" );
	deepEqual( Stem("workers"), "workers" );
	deepEqual( Stem("world"), "world" );
	deepEqual( Stem("wspr"), "wspr" );
	deepEqual( Stem("wuber"), "wuber" );
	deepEqual( Stem("wuxian"), "wuxian" );
	deepEqual( Stem("x"), "x" );
	deepEqual( Stem("xai"), "xai" );
	deepEqual( Stem("xbe"), "xbe" );
	deepEqual( Stem("xbu"), "xbu" );
	deepEqual( Stem("xca"), "xca" );
	deepEqual( Stem("xcf"), "xcf" );
	deepEqual( Stem("xct"), "xct" );
	deepEqual( Stem("xdp"), "xdp" );
	deepEqual( Stem("xenofobi"), "xenofob" );
	deepEqual( Stem("xi"), "xi" );
	deepEqual( Stem("xii"), "xii" );
	deepEqual( Stem("xiii"), "xii" );
	deepEqual( Stem("xmi"), "xmi" );
	deepEqual( Stem("xmm"), "xmm" );
	deepEqual( Stem("xpc"), "xpc" );
	deepEqual( Stem("xpi"), "xpi" );
	deepEqual( Stem("xpn"), "xpn" );
	deepEqual( Stem("xps"), "xps" );
	deepEqual( Stem("xrh"), "xrh" );
	deepEqual( Stem("xrs"), "xrs" );
	deepEqual( Stem("xxi"), "xxi" );
	deepEqual( Stem("xxiv"), "xxiv" );
	deepEqual( Stem("xxvi"), "xxvi" );
	deepEqual( Stem("xxvii"), "xxvi" );
	deepEqual( Stem("xza"), "xza" );
	deepEqual( Stem("y"), "y" );
	deepEqual( Stem("ya"), "ya" );
	deepEqual( Stem("yacht"), "yacht" );
	deepEqual( Stem("yadana"), "yadan" );
	deepEqual( Stem("yakov"), "yakov" );
	deepEqual( Stem("yale"), "yal" );
	deepEqual( Stem("yasser"), "yasser" );
	deepEqual( Stem("yediot"), "yediot" );
	deepEqual( Stem("yen"), "yen" );
	deepEqual( Stem("yirmaguas"), "yirmaguas" );
	deepEqual( Stem("yitzhak"), "yitzhak" );
	deepEqual( Stem("yoint"), "yoint" );
	deepEqual( Stem("york"), "york" );
	deepEqual( Stem("yossi"), "yoss" );
	deepEqual( Stem("yousef"), "yousef" );
	deepEqual( Stem("ypf"), "ypf" );
	deepEqual( Stem("yugoslavia"), "yugoslav" );
	deepEqual( Stem("yusen"), "yusen" );
	deepEqual( Stem("yvette"), "yvett" );
	deepEqual( Stem("z"), "z" );
	deepEqual( Stem("za"), "za" );
	deepEqual( Stem("zaccaria"), "zaccar" );
	deepEqual( Stem("zacchera"), "zaccher" );
	deepEqual( Stem("zacchere"), "zacc" );
	deepEqual( Stem("zachia"), "zach" );
	deepEqual( Stem("zaffate"), "zaff" );
	deepEqual( Stem("zag"), "zag" );
	deepEqual( Stem("zagabria"), "zagabr" );
	deepEqual( Stem("zagaria"), "zagar" );
	deepEqual( Stem("zaini"), "zain" );
	deepEqual( Stem("zambia"), "zamb" );
	deepEqual( Stem("zamora"), "zamor" );
	deepEqual( Stem("zampa"), "zamp" );
	deepEqual( Stem("zampe"), "zamp" );
	deepEqual( Stem("zampino"), "zampin" );
	deepEqual( Stem("zanacchi"), "zanacc" );
	deepEqual( Stem("zandano"), "zand" );
	deepEqual( Stem("zanicchi"), "zanicc" );
	deepEqual( Stem("zanin"), "zanin" );
	deepEqual( Stem("zanne"), "zann" );
	deepEqual( Stem("zanoncelli"), "zanoncell" );
	deepEqual( Stem("zanussi"), "zanuss" );
	deepEqual( Stem("zanutta"), "zanutt" );
	deepEqual( Stem("zanzi"), "zanz" );
	deepEqual( Stem("zapatista"), "zapat" );
	deepEqual( Stem("zapatisti"), "zapat" );
	deepEqual( Stem("zapatistì"), "zapat" );
	deepEqual( Stem("zappando"), "zapp" );
	deepEqual( Stem("zappe"), "zapp" );
	deepEqual( Stem("zaptista"), "zaptist" );
	deepEqual( Stem("zar"), "zar" );
	deepEqual( Stem("zattarin"), "zattarin" );
	deepEqual( Stem("zc"), "zc" );
	deepEqual( Stem("zdf"), "zdf" );
	deepEqual( Stem("zecca"), "zecc" );
	deepEqual( Stem("zecchino"), "zecchin" );
	deepEqual( Stem("zedillo"), "zedill" );
	deepEqual( Stem("zeev"), "zeev" );
	deepEqual( Stem("zeffiro"), "zeffir" );
	deepEqual( Stem("zeitung"), "zeitung" );
	deepEqual( Stem("zelanti"), "zelant" );
	deepEqual( Stem("zelatori"), "zelator" );
	deepEqual( Stem("zelo"), "zel" );
	deepEqual( Stem("zeman"), "zeman" );
	deepEqual( Stem("zendali"), "zendal" );
	deepEqual( Stem("zenga"), "zeng" );
	deepEqual( Stem("zeppa"), "zepp" );
	deepEqual( Stem("zero"), "zer" );
	deepEqual( Stem("zerowatt"), "zerowatt" );
	deepEqual( Stem("zeta"), "zet" );
	deepEqual( Stem("zetabond"), "zetabond" );
	deepEqual( Stem("zetastock"), "zetastock" );
	deepEqual( Stem("zetaswiss"), "zetaswiss" );
	deepEqual( Stem("zhirinovski"), "zhirinovsk" );
	deepEqual( Stem("zia"), "zia" );
	deepEqual( Stem("zibellino"), "zibellin" );
	deepEqual( Stem("zie"), "zie" );
	deepEqual( Stem("zig"), "zig" );
	deepEqual( Stem("zignago"), "zignag" );
	deepEqual( Stem("zii"), "zii" );
	deepEqual( Stem("ziino"), "ziin" );
	deepEqual( Stem("zimarra"), "zimarr" );
	deepEqual( Stem("zimarre"), "zimarr" );
	deepEqual( Stem("zimbello"), "zimbell" );
	deepEqual( Stem("zimmermann"), "zimmermann" );
	deepEqual( Stem("zina"), "zin" );
	deepEqual( Stem("zincone"), "zincon" );
	deepEqual( Stem("zinelli"), "zinell" );
	deepEqual( Stem("zingari"), "zingar" );
	deepEqual( Stem("zingerle"), "zing" );
	deepEqual( Stem("zio"), "zio" );
	deepEqual( Stem("zippora"), "zippor" );
	deepEqual( Stem("zironelli"), "zironell" );
	deepEqual( Stem("zitta"), "zitt" );
	deepEqual( Stem("zitte"), "zitt" );
	deepEqual( Stem("zitti"), "zitt" );
	deepEqual( Stem("zitto"), "zitt" );
	deepEqual( Stem("ziuganov"), "ziuganov" );
	deepEqual( Stem("zo"), "zo" );
	deepEqual( Stem("zobra"), "zobr" );
	deepEqual( Stem("zocalo"), "zocal" );
	deepEqual( Stem("zocchi"), "zocc" );
	deepEqual( Stem("zoccolo"), "zoccol" );
	deepEqual( Stem("zohra"), "zohr" );
	deepEqual( Stem("zola"), "zol" );
	deepEqual( Stem("zolfanelli"), "zolfanell" );
	deepEqual( Stem("zolla"), "zoll" );
	deepEqual( Stem("zombi"), "zomb" );
	deepEqual( Stem("zona"), "zon" );
	deepEqual( Stem("zone"), "zon" );
	deepEqual( Stem("zonzo"), "zonz" );
	deepEqual( Stem("zoppas"), "zoppas" );
	deepEqual( Stem("zoppo"), "zopp" );
	deepEqual( Stem("zoran"), "zoran" );
	deepEqual( Stem("zoratto"), "zoratt" );
	deepEqual( Stem("zorro"), "zorr" );
	deepEqual( Stem("zorzi"), "zorz" );
	deepEqual( Stem("zotici"), "zotic" );
	deepEqual( Stem("zou"), "zou" );
	deepEqual( Stem("zucca"), "zucc" );
	deepEqual( Stem("zucche"), "zucc" );
	deepEqual( Stem("zuccheri"), "zuccher" );
	deepEqual( Stem("zuccherino"), "zuccherin" );
	deepEqual( Stem("zucchero"), "zuccher" );
	deepEqual( Stem("zucchi"), "zucc" );
	deepEqual( Stem("zucconi"), "zuccon" );
	deepEqual( Stem("zuffi"), "zuff" );
	deepEqual( Stem("zurigo"), "zurig" );
	deepEqual( Stem("zweite"), "zwe" );
	deepEqual( Stem("zwerver"), "zwerver" );
	deepEqual( Stem("zwickel"), "zwickel" );
});
