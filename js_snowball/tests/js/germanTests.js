QUnit.test('german', function(){
	var Stem = snowballFactory.newStemmer('german').stem;
	deepEqual( Stem("a"), "a" );
	deepEqual( Stem("aa"), "aa" );
	deepEqual( Stem("aalglatten"), "aalglatt" );
	deepEqual( Stem("aargau"), "aargau" );
	deepEqual( Stem("aargauer"), "aargau" );
	deepEqual( Stem("aasen"), "aas" );
	deepEqual( Stem("aasgeruch"), "aasgeruch" );
	deepEqual( Stem("aashöllen"), "aasholl" );
	deepEqual( Stem("ab"), "ab" );
	deepEqual( Stem("abaddon"), "abaddon" );
	deepEqual( Stem("abarten"), "abart" );
	deepEqual( Stem("abbeisst"), "abbeisst" );
	deepEqual( Stem("abbild"), "abbild" );
	deepEqual( Stem("abbildung"), "abbild" );
	deepEqual( Stem("abbiss"), "abbiss" );
	deepEqual( Stem("abbrechen"), "abbrech" );
	deepEqual( Stem("abbruch"), "abbruch" );
	deepEqual( Stem("abend"), "abend" );
	deepEqual( Stem("abendbrot"), "abendbrot" );
	deepEqual( Stem("abenddämmerung"), "abenddammer" );
	deepEqual( Stem("abenddunklen"), "abenddunkl" );
	deepEqual( Stem("abende"), "abend" );
	deepEqual( Stem("abendessen"), "abendess" );
	deepEqual( Stem("abendherren"), "abendherr" );
	deepEqual( Stem("abendhimmel"), "abendhimmel" );
	deepEqual( Stem("abendländischem"), "abendland" );
	deepEqual( Stem("abendländischen"), "abendland" );
	deepEqual( Stem("abendlichen"), "abend" );
	deepEqual( Stem("abendlichte"), "abendlicht" );
	deepEqual( Stem("abendluft"), "abendluft" );
	deepEqual( Stem("abendmahl"), "abendmahl" );
	deepEqual( Stem("abendröte"), "abendrot" );
	deepEqual( Stem("abends"), "abend" );
	deepEqual( Stem("abendschein"), "abendschein" );
	deepEqual( Stem("abendscheine"), "abendschein" );
	deepEqual( Stem("abendschöppchen"), "abendschoppch" );
	deepEqual( Stem("abendsonne"), "abendsonn" );
	deepEqual( Stem("abendstern"), "abend" );
	deepEqual( Stem("abendtanz"), "abendtanz" );
	deepEqual( Stem("abendwind"), "abendwind" );
	deepEqual( Stem("abendzeit"), "abendzeit" );
	deepEqual( Stem("abenteuer"), "abenteu" );
	deepEqual( Stem("abenteuerlich"), "abenteu" );
	deepEqual( Stem("abenteuerliche"), "abenteu" );
	deepEqual( Stem("abenteuerlichem"), "abenteu" );
	deepEqual( Stem("abenteuerliches"), "abenteu" );
	deepEqual( Stem("abenteuern"), "abenteu" );
	deepEqual( Stem("abenteuers"), "abenteu" );
	deepEqual( Stem("abenteuerspielplätzen"), "abenteuerspielplatz" );
	deepEqual( Stem("abenteurer"), "abenteur" );
	deepEqual( Stem("aber"), "aber" );
	deepEqual( Stem("aberglaube"), "aberglaub" );
	deepEqual( Stem("aberglauben"), "aberglaub" );
	deepEqual( Stem("abermalige"), "abermal" );
	deepEqual( Stem("abermaligen"), "abermal" );
	deepEqual( Stem("abermals"), "abermal" );
	deepEqual( Stem("abertausend"), "abertaus" );
	deepEqual( Stem("aberwitzigen"), "aberwitz" );
	deepEqual( Stem("abfahrt"), "abfahrt" );
	deepEqual( Stem("abfall"), "abfall" );
	deepEqual( Stem("abfallen"), "abfall" );
	deepEqual( Stem("abfällige"), "abfall" );
	deepEqual( Stem("abfallkorb"), "abfallkorb" );
	deepEqual( Stem("abfällsel"), "abfallsel" );
	deepEqual( Stem("abfällt"), "abfallt" );
	deepEqual( Stem("abfeuernd"), "abfeuernd" );
	deepEqual( Stem("abfielen"), "abfiel" );
	deepEqual( Stem("abfinden"), "abfind" );
	deepEqual( Stem("abflughalle"), "abflughall" );
	deepEqual( Stem("abfressen"), "abfress" );
	deepEqual( Stem("abfuhr"), "abfuhr" );
	deepEqual( Stem("abführung"), "abfuhr" );
	deepEqual( Stem("abgab"), "abgab" );
	deepEqual( Stem("abgabe"), "abgab" );
	deepEqual( Stem("abgaben"), "abgab" );
	deepEqual( Stem("abgang"), "abgang" );
	deepEqual( Stem("abge"), "abg" );
	deepEqual( Stem("abgebe"), "abgeb" );
	deepEqual( Stem("abgeben"), "abgeb" );
	deepEqual( Stem("abgebildet"), "abgebildet" );
	deepEqual( Stem("abgebracht"), "abgebracht" );
	deepEqual( Stem("abgebrannten"), "abgebrannt" );
	deepEqual( Stem("abgebrochen"), "abgebroch" );
	deepEqual( Stem("abgebrochene"), "abgebroch" );
	deepEqual( Stem("abgebrochenes"), "abgebroch" );
	deepEqual( Stem("abgebürstet"), "abgeburstet" );
	deepEqual( Stem("abgedient"), "abgedient" );
	deepEqual( Stem("abgedruckt"), "abgedruckt" );
	deepEqual( Stem("abgefallen"), "abgefall" );
	deepEqual( Stem("abgefangen"), "abgefang" );
	deepEqual( Stem("abgefertigt"), "abgefertigt" );
	deepEqual( Stem("abgeführt"), "abgefuhrt" );
	deepEqual( Stem("abgefunden"), "abgefund" );
	deepEqual( Stem("abgegebene"), "abgegeb" );
	deepEqual( Stem("abgegrenzt"), "abgegrenzt" );
	deepEqual( Stem("abgegriffene"), "abgegriff" );
	deepEqual( Stem("abgehalten"), "abgehalt" );
	deepEqual( Stem("abgehandelt"), "abgehandelt" );
	deepEqual( Stem("abgehandelten"), "abgehandelt" );
	deepEqual( Stem("abgehängen"), "abgehang" );
	deepEqual( Stem("abgehärmte"), "abgeharmt" );
	deepEqual( Stem("abgehärteten"), "abgehartet" );
	deepEqual( Stem("abgehauen"), "abgehau" );
	deepEqual( Stem("abgehen"), "abgeh" );
	deepEqual( Stem("abgeholt"), "abgeholt" );
	deepEqual( Stem("abgehört"), "abgehort" );
	deepEqual( Stem("abgeht"), "abgeht" );
	deepEqual( Stem("abgekauft"), "abgekauft" );
	deepEqual( Stem("abgekommen"), "abgekomm" );
	deepEqual( Stem("abgeladen"), "abgelad" );
	deepEqual( Stem("abgelagertes"), "abgelagert" );
	deepEqual( Stem("abgelassen"), "abgelass" );
	deepEqual( Stem("abgelaufen"), "abgelauf" );
	deepEqual( Stem("abgelebte"), "abgelebt" );
	deepEqual( Stem("abgelegenen"), "abgeleg" );
	deepEqual( Stem("abgelegt"), "abgelegt" );
	deepEqual( Stem("abgelehnt"), "abgelehnt" );
	deepEqual( Stem("abgeleitet"), "abgeleitet" );
	deepEqual( Stem("abgeleitete"), "abgeleitet" );
	deepEqual( Stem("abgeleiteten"), "abgeleitet" );
	deepEqual( Stem("abgeleitetes"), "abgeleitet" );
	deepEqual( Stem("abgelenkt"), "abgelenkt" );
	deepEqual( Stem("abgeleugnet"), "abgeleugnet" );
	deepEqual( Stem("abgelöst"), "abgelost" );
	deepEqual( Stem("abgemagert"), "abgemagert" );
	deepEqual( Stem("abgemessenheit"), "abgemess" );
	deepEqual( Stem("abgenagten"), "abgenagt" );
	deepEqual( Stem("abgeneigt"), "abgeneigt" );
	deepEqual( Stem("abgenommen"), "abgenomm" );
	deepEqual( Stem("abgenutzten"), "abgenutzt" );
	deepEqual( Stem("abgeödet"), "abgeodet" );
	deepEqual( Stem("abgeödete"), "abgeodet" );
	deepEqual( Stem("abgeordnetenversammlung"), "abgeordnetenversamml" );
	deepEqual( Stem("abgeordneter"), "abgeordnet" );
	deepEqual( Stem("abgepfändet"), "abgepfandet" );
	deepEqual( Stem("abgepflückt"), "abgepfluckt" );
	deepEqual( Stem("abgeplatzt"), "abgeplatzt" );
	deepEqual( Stem("abgeraten"), "abgerat" );
	deepEqual( Stem("abgerieben"), "abgerieb" );
	deepEqual( Stem("abgerissen"), "abgeriss" );
	deepEqual( Stem("abgerissenen"), "abgeriss" );
	deepEqual( Stem("abgesandt"), "abgesandt" );
	deepEqual( Stem("abgeschabtes"), "abgeschabt" );
	deepEqual( Stem("abgescheuert"), "abgescheuert" );
	deepEqual( Stem("abgeschieden"), "abgeschied" );
	deepEqual( Stem("abgeschiedenen"), "abgeschied" );
	deepEqual( Stem("abgeschlagen"), "abgeschlag" );
	deepEqual( Stem("abgeschliffen"), "abgeschliff" );
	deepEqual( Stem("abgeschmolzen"), "abgeschmolz" );
	deepEqual( Stem("abgeschnitten"), "abgeschnitt" );
	deepEqual( Stem("abgeschossenes"), "abgeschoss" );
	deepEqual( Stem("abgeschreckt"), "abgeschreckt" );
	deepEqual( Stem("abgeschwächt"), "abgeschwacht" );
	deepEqual( Stem("abgesehen"), "abgeseh" );
	deepEqual( Stem("abgesessen"), "abgesess" );
	deepEqual( Stem("abgesondert"), "abgesondert" );
	deepEqual( Stem("abgesonderten"), "abgesondert" );
	deepEqual( Stem("abgespannt"), "abgespannt" );
	deepEqual( Stem("abgesperrt"), "abgesperrt" );
	deepEqual( Stem("abgesprochen"), "abgesproch" );
	deepEqual( Stem("abgesprungen"), "abgespr" );
	deepEqual( Stem("abgestellt"), "abgestellt" );
	deepEqual( Stem("abgestohlene"), "abgestohl" );
	deepEqual( Stem("abgestossene"), "abgestoss" );
	deepEqual( Stem("abgestritten"), "abgestritt" );
	deepEqual( Stem("abgetan"), "abgetan" );
	deepEqual( Stem("abgeteilt"), "abgeteilt" );
	deepEqual( Stem("abgeteilten"), "abgeteilt" );
	deepEqual( Stem("abgetötet"), "abgetotet" );
	deepEqual( Stem("abgetreten"), "abgetret" );
	deepEqual( Stem("abgewandt"), "abgewandt" );
	deepEqual( Stem("abgewandte"), "abgewandt" );
	deepEqual( Stem("abgewandtem"), "abgewandt" );
	deepEqual( Stem("abgewartet"), "abgewartet" );
	deepEqual( Stem("abgewaschen"), "abgewasch" );
	deepEqual( Stem("abgewendet"), "abgewendet" );
	deepEqual( Stem("abgewetzte"), "abgewetzt" );
	deepEqual( Stem("abgewetzten"), "abgewetzt" );
	deepEqual( Stem("abgewichen"), "abgewich" );
	deepEqual( Stem("abgewickelt"), "abgewickelt" );
	deepEqual( Stem("abgewinnen"), "abgewinn" );
	deepEqual( Stem("abgewirtschaftet"), "abgewirtschaftet" );
	deepEqual( Stem("abgewogen"), "abgewog" );
	deepEqual( Stem("abgewöhnen"), "abgewohn" );
	deepEqual( Stem("abgewürdigt"), "abgewurdigt" );
	deepEqual( Stem("abgezäunt"), "abgezaunt" );
	deepEqual( Stem("abgezehrt"), "abgezehrt" );
	deepEqual( Stem("abgezirkelten"), "abgezirkelt" );
	deepEqual( Stem("abgezogen"), "abgezog" );
	deepEqual( Stem("abgezogene"), "abgezog" );
	deepEqual( Stem("abgezogenen"), "abgezog" );
	deepEqual( Stem("abgezogenheit"), "abgezog" );
	deepEqual( Stem("abgibt"), "abgibt" );
	deepEqual( Stem("abglitten"), "abglitt" );
	deepEqual( Stem("abgötterei"), "abgotterei" );
	deepEqual( Stem("abgöttereien"), "abgotterei" );
	deepEqual( Stem("abgöttisches"), "abgott" );
	deepEqual( Stem("abgrund"), "abgrund" );
	deepEqual( Stem("abgrunde"), "abgrund" );
	deepEqual( Stem("abgründe"), "abgrund" );
	deepEqual( Stem("abgründen"), "abgrund" );
	deepEqual( Stem("abgrundes"), "abgrund" );
	deepEqual( Stem("abgrunds"), "abgrund" );
	deepEqual( Stem("abhalten"), "abhalt" );
	deepEqual( Stem("abhandlung"), "abhandl" );
	deepEqual( Stem("abhang"), "abhang" );
	deepEqual( Stem("abhange"), "abhang" );
	deepEqual( Stem("abhänge"), "abhang" );
	deepEqual( Stem("abhängen"), "abhang" );
	deepEqual( Stem("abhängend"), "abhang" );
	deepEqual( Stem("abhängig"), "abhang" );
	deepEqual( Stem("abhängigen"), "abhang" );
	deepEqual( Stem("abhängiger"), "abhang" );
	deepEqual( Stem("abhängigkeit"), "abhang" );
	deepEqual( Stem("abhängt"), "abhangt" );
	deepEqual( Stem("abhauen"), "abhau" );
	deepEqual( Stem("abhaut"), "abhaut" );
	deepEqual( Stem("abhebenden"), "abheb" );
	deepEqual( Stem("abhelfen"), "abhelf" );
	deepEqual( Stem("abhielten"), "abhielt" );
	deepEqual( Stem("abhob"), "abhob" );
	deepEqual( Stem("abhoben"), "abhob" );
	deepEqual( Stem("abholen"), "abhol" );
	deepEqual( Stem("abholt"), "abholt" );
	deepEqual( Stem("abhören"), "abhor" );
	deepEqual( Stem("abi"), "abi" );
	deepEqual( Stem("abiasaph"), "abiasaph" );
	deepEqual( Stem("abigrissen"), "abigriss" );
	deepEqual( Stem("abigstiegen"), "abigstieg" );
	deepEqual( Stem("abihu"), "abihu" );
	deepEqual( Stem("abimelech"), "abimelech" );
	deepEqual( Stem("abirrung"), "abirr" );
	deepEqual( Stem("abirrungen"), "abirr" );
	deepEqual( Stem("abjagen"), "abjag" );
	deepEqual( Stem("abkartelt"), "abkartelt" );
	deepEqual( Stem("abkaufen"), "abkauf" );
	deepEqual( Stem("abkehr"), "abkehr" );
	deepEqual( Stem("abklärungen"), "abklar" );
	deepEqual( Stem("abkommens"), "abkomm" );
	deepEqual( Stem("abkühlendes"), "abkuhl" );
	deepEqual( Stem("abkühlung"), "abkuhl" );
	deepEqual( Stem("abkunft"), "abkunft" );
	deepEqual( Stem("ablasse"), "ablass" );
	deepEqual( Stem("ablassen"), "ablass" );
	deepEqual( Stem("ablässt"), "ablasst" );
	deepEqual( Stem("abläßt"), "ablasst" );
	deepEqual( Stem("ablauf"), "ablauf" );
	deepEqual( Stem("ablaufen"), "ablauf" );
	deepEqual( Stem("ablaufende"), "ablauf" );
	deepEqual( Stem("abläutete"), "ablautet" );
	deepEqual( Stem("ablegen"), "ableg" );
	deepEqual( Stem("ablehnen"), "ablehn" );
	deepEqual( Stem("ablehnung"), "ablehn" );
	deepEqual( Stem("ableiten"), "ableit" );
	deepEqual( Stem("ableiter"), "ableit" );
	deepEqual( Stem("ableitet"), "ableitet" );
	deepEqual( Stem("ableitungen"), "ableit" );
	deepEqual( Stem("ablenken"), "ablenk" );
	deepEqual( Stem("ablenkend"), "ablenk" );
	deepEqual( Stem("ablesen"), "ables" );
	deepEqual( Stem("ablesend"), "ables" );
	deepEqual( Stem("ablief"), "ablief" );
	deepEqual( Stem("abliefe"), "ablief" );
	deepEqual( Stem("ablösung"), "ablos" );
	deepEqual( Stem("ablutschen"), "ablutsch" );
	deepEqual( Stem("abmarschiert"), "abmarschiert" );
	deepEqual( Stem("abmühten"), "abmuht" );
	deepEqual( Stem("abnahm"), "abnahm" );
	deepEqual( Stem("abnahme"), "abnahm" );
	deepEqual( Stem("abnehmen"), "abnehm" );
	deepEqual( Stem("abnehmende"), "abnehm" );
	deepEqual( Stem("abnehmenden"), "abnehm" );
	deepEqual( Stem("abneigung"), "abneig" );
	deepEqual( Stem("abnimmt"), "abnimmt" );
	deepEqual( Stem("abnutzen"), "abnutz" );
	deepEqual( Stem("aböden"), "abod" );
	deepEqual( Stem("abödet"), "abodet" );
	deepEqual( Stem("abödung"), "abod" );
	deepEqual( Stem("abödungen"), "abod" );
	deepEqual( Stem("abolent"), "abolent" );
	deepEqual( Stem("abonnieren"), "abonni" );
	deepEqual( Stem("about"), "about" );
	deepEqual( Stem("abquälen"), "abqual" );
	deepEqual( Stem("abraham"), "abraham" );
	deepEqual( Stem("abrahams"), "abraham" );
	deepEqual( Stem("abram"), "abram" );
	deepEqual( Stem("abrams"), "abram" );
	deepEqual( Stem("abraten"), "abrat" );
	deepEqual( Stem("abrechnen"), "abrechn" );
	deepEqual( Stem("abrede"), "abred" );
	deepEqual( Stem("abreiben"), "abreib" );
	deepEqual( Stem("abreise"), "abreis" );
	deepEqual( Stem("abreissen"), "abreiss" );
	deepEqual( Stem("abreißen"), "abreiss" );
	deepEqual( Stem("abrisse"), "abriss" );
	deepEqual( Stem("abrufen"), "abruf" );
	deepEqual( Stem("abrundung"), "abrund" );
	deepEqual( Stem("absage"), "absag" );
	deepEqual( Stem("absalon"), "absalon" );
	deepEqual( Stem("absatz"), "absatz" );
	deepEqual( Stem("abschaffen"), "abschaff" );
	deepEqual( Stem("abschaffung"), "abschaff" );
	deepEqual( Stem("abschaum"), "abschaum" );
	deepEqual( Stem("abscheu"), "abscheu" );
	deepEqual( Stem("abscheuern"), "abscheu" );
	deepEqual( Stem("abscheues"), "abscheu" );
	deepEqual( Stem("abscheulich"), "abscheulich" );
	deepEqual( Stem("abscheuliche"), "abscheulich" );
	deepEqual( Stem("abscheulichen"), "abscheulich" );
	deepEqual( Stem("abscheulicher"), "abscheulich" );
	deepEqual( Stem("abscheulicheres"), "abscheulich" );
	deepEqual( Stem("abscheuliches"), "abscheulich" );
	deepEqual( Stem("abscheulichste"), "abscheulich" );
	deepEqual( Stem("abscheus"), "abscheus" );
	deepEqual( Stem("abschied"), "abschied" );
	deepEqual( Stem("abschiedes"), "abschied" );
	deepEqual( Stem("abschiessen"), "abschiess" );
	deepEqual( Stem("abschlagen"), "abschlag" );
	deepEqual( Stem("abschlägt"), "abschlagt" );
	deepEqual( Stem("abschliessen"), "abschliess" );
	deepEqual( Stem("abschliessender"), "abschliess" );
	deepEqual( Stem("abschliesst"), "abschliesst" );
	deepEqual( Stem("abschließt"), "abschliesst" );
	deepEqual( Stem("abschliessung"), "abschliess" );
	deepEqual( Stem("abschließung"), "abschliess" );
	deepEqual( Stem("abschloss"), "abschloss" );
	deepEqual( Stem("abschlug"), "abschlug" );
	deepEqual( Stem("abschluss"), "abschluss" );
	deepEqual( Stem("abschluß"), "abschluss" );
	deepEqual( Stem("abschneiden"), "abschneid" );
	deepEqual( Stem("abschneidung"), "abschneid" );
	deepEqual( Stem("abschnitt"), "abschnitt" );
	deepEqual( Stem("abschnitte"), "abschnitt" );
	deepEqual( Stem("abschnitten"), "abschnitt" );
	deepEqual( Stem("abschnitts"), "abschnitt" );
	deepEqual( Stem("abschrecken"), "abschreck" );
	deepEqual( Stem("abschrieb"), "abschrieb" );
	deepEqual( Stem("abschrift"), "abschrift" );
	deepEqual( Stem("abschüsse"), "abschuss" );
	deepEqual( Stem("abschüssigen"), "abschuss" );
	deepEqual( Stem("abschütteln"), "abschutteln" );
	deepEqual( Stem("abschüttelten"), "abschuttelt" );
	deepEqual( Stem("abschwächt"), "abschwacht" );
	deepEqual( Stem("abschweifungen"), "abschweif" );
	deepEqual( Stem("abschwenken"), "abschwenk" );
	deepEqual( Stem("absehbar"), "absehbar" );
	deepEqual( Stem("absehen"), "abseh" );
	deepEqual( Stem("absehlichen"), "abseh" );
	deepEqual( Stem("abseits"), "abseit" );
	deepEqual( Stem("absenden"), "absend" );
	deepEqual( Stem("absender"), "absend" );
	deepEqual( Stem("absetzen"), "absetz" );
	deepEqual( Stem("absetzte"), "absetzt" );
	deepEqual( Stem("absicht"), "absicht" );
	deepEqual( Stem("absichten"), "absicht" );
	deepEqual( Stem("absichtlich"), "absicht" );
	deepEqual( Stem("absieht"), "absieht" );
	deepEqual( Stem("absingung"), "absing" );
	deepEqual( Stem("absolut"), "absolut" );
	deepEqual( Stem("absolute"), "absolut" );
	deepEqual( Stem("absolutes"), "absolut" );
	deepEqual( Stem("absolviert"), "absolviert" );
	deepEqual( Stem("absolvierte"), "absolviert" );
	deepEqual( Stem("absonderliche"), "absond" );
	deepEqual( Stem("absonderlichen"), "absond" );
	deepEqual( Stem("absonderlicher"), "absond" );
	deepEqual( Stem("absondert"), "absondert" );
	deepEqual( Stem("absonderungen"), "absonder" );
	deepEqual( Stem("abspenstig"), "abspenst" );
	deepEqual( Stem("abspielten"), "abspielt" );
	deepEqual( Stem("absprang"), "absprang" );
	deepEqual( Stem("abspringend"), "abspring" );
	deepEqual( Stem("abspülen"), "abspul" );
	deepEqual( Stem("abstahl"), "abstahl" );
	deepEqual( Stem("abstamme"), "abstamm" );
	deepEqual( Stem("abstammen"), "abstamm" );
	deepEqual( Stem("abstammenden"), "abstamm" );
	deepEqual( Stem("abstammte"), "abstammt" );
	deepEqual( Stem("abstammten"), "abstammt" );
	deepEqual( Stem("abstammung"), "abstamm" );
	deepEqual( Stem("abstammungen"), "abstamm" );
	deepEqual( Stem("abstatten"), "abstatt" );
	deepEqual( Stem("abstechend"), "abstech" );
	deepEqual( Stem("abstecher"), "abstech" );
	deepEqual( Stem("abstehen"), "absteh" );
	deepEqual( Stem("absteht"), "absteht" );
	deepEqual( Stem("absteigen"), "absteig" );
	deepEqual( Stem("abstellte"), "abstellt" );
	deepEqual( Stem("abstimmung"), "abstimm" );
	deepEqual( Stem("abstimmungdie"), "abstimmungdi" );
	deepEqual( Stem("abstirbt"), "abstirbt" );
	deepEqual( Stem("abstossendes"), "abstoss" );
	deepEqual( Stem("abstoßendes"), "abstoss" );
	deepEqual( Stem("abstracto"), "abstracto" );
	deepEqual( Stem("abstrahieren"), "abstrahi" );
	deepEqual( Stem("abstrahiert"), "abstrahiert" );
	deepEqual( Stem("abstrakt"), "abstrakt" );
	deepEqual( Stem("abstrakten"), "abstrakt" );
	deepEqual( Stem("abstrakter"), "abstrakt" );
	deepEqual( Stem("abstraktion"), "abstraktion" );
	deepEqual( Stem("abstreiten"), "abstreit" );
	deepEqual( Stem("abstufungen"), "abstuf" );
	deepEqual( Stem("abstumpfung"), "abstumpf" );
	deepEqual( Stem("absturz"), "absturz" );
	deepEqual( Stem("abstürze"), "absturz" );
	deepEqual( Stem("abstürzen"), "absturz" );
	deepEqual( Stem("absuchen"), "absuch" );
	deepEqual( Stem("absuchte"), "absucht" );
	deepEqual( Stem("absurden"), "absurd" );
	deepEqual( Stem("abteilung"), "abteil" );
	deepEqual( Stem("abteilungen"), "abteil" );
	deepEqual( Stem("abtraten"), "abtrat" );
	deepEqual( Stem("abtreiben"), "abtreib" );
	deepEqual( Stem("abtreten"), "abtret" );
	deepEqual( Stem("abtun"), "abtun" );
	deepEqual( Stem("aburteilen"), "aburteil" );
	deepEqual( Stem("abwandte"), "abwandt" );
	deepEqual( Stem("abwarten"), "abwart" );
	deepEqual( Stem("abwärts"), "abwart" );
	deepEqual( Stem("abwärtsrichtung"), "abwartsricht" );
	deepEqual( Stem("abwaschbaren"), "abwaschbar" );
	deepEqual( Stem("abwaschen"), "abwasch" );
	deepEqual( Stem("abwaschung"), "abwasch" );
	deepEqual( Stem("abwechselnd"), "abwechselnd" );
	deepEqual( Stem("abwechselndem"), "abwechselnd" );
	deepEqual( Stem("abwechselnder"), "abwechselnd" );
	deepEqual( Stem("abwechselung"), "abwechsel" );
	deepEqual( Stem("abwechslung"), "abwechsl" );
	deepEqual( Stem("abwege"), "abweg" );
	deepEqual( Stem("abwehr"), "abwehr" );
	deepEqual( Stem("abwehrend"), "abwehr" );
	deepEqual( Stem("abwehrendes"), "abwehr" );
	deepEqual( Stem("abwehrmassnahme"), "abwehrmassnahm" );
	deepEqual( Stem("abwehrung"), "abwehr" );
	deepEqual( Stem("abweichen"), "abweich" );
	deepEqual( Stem("abweicht"), "abweicht" );
	deepEqual( Stem("abweichung"), "abweich" );
	deepEqual( Stem("abweiden"), "abweid" );
	deepEqual( Stem("abweisen"), "abweis" );
	deepEqual( Stem("abweisend"), "abweis" );
	deepEqual( Stem("abweist"), "abweist" );
	deepEqual( Stem("abweisung"), "abweis" );
	deepEqual( Stem("abwende"), "abwend" );
	deepEqual( Stem("abwenden"), "abwend" );
	deepEqual( Stem("abwendend"), "abwend" );
	deepEqual( Stem("abwendet"), "abwendet" );
	deepEqual( Stem("abwendig"), "abwend" );
	deepEqual( Stem("abwendung"), "abwend" );
	deepEqual( Stem("abwerfen"), "abwerf" );
	deepEqual( Stem("abwesend"), "abwes" );
	deepEqual( Stem("abwesenden"), "abwes" );
	deepEqual( Stem("abwesenheit"), "abwes" );
	deepEqual( Stem("abwich"), "abwich" );
	deepEqual( Stem("abwickeln"), "abwickeln" );
	deepEqual( Stem("abwinkte"), "abwinkt" );
	deepEqual( Stem("abwischen"), "abwisch" );
	deepEqual( Stem("abwischte"), "abwischt" );
	deepEqual( Stem("abwürdigten"), "abwurdigt" );
	deepEqual( Stem("abwusch"), "abwusch" );
	deepEqual( Stem("abzehrung"), "abzehr" );
	deepEqual( Stem("abziehen"), "abzieh" );
	deepEqual( Stem("abziehenden"), "abzieh" );
	deepEqual( Stem("abzielen"), "abziel" );
	deepEqual( Stem("abzielt"), "abzielt" );
	deepEqual( Stem("abzubeuteln"), "abzubeuteln" );
	deepEqual( Stem("abzubinden"), "abzubind" );
	deepEqual( Stem("abzubringen"), "abzubring" );
	deepEqual( Stem("abzufinden"), "abzufind" );
	deepEqual( Stem("abzuflauen"), "abzuflau" );
	deepEqual( Stem("abzug"), "abzug" );
	deepEqual( Stem("abzuge"), "abzug" );
	deepEqual( Stem("abzugeben"), "abzugeb" );
	deepEqual( Stem("abzugewinnen"), "abzugewinn" );
	deepEqual( Stem("abzugsgräben"), "abzugsgrab" );
	deepEqual( Stem("abzugsschnur"), "abzugsschnur" );
	deepEqual( Stem("abzuhalten"), "abzuhalt" );
	deepEqual( Stem("abzuholen"), "abzuhol" );
	deepEqual( Stem("abzuhören"), "abzuhor" );
	deepEqual( Stem("abzukühlen"), "abzukuhl" );
	deepEqual( Stem("abzukürzen"), "abzukurz" );
	deepEqual( Stem("abzuladen"), "abzulad" );
	deepEqual( Stem("abzulassen"), "abzulass" );
	deepEqual( Stem("abzulaufen"), "abzulauf" );
	deepEqual( Stem("abzulauschen"), "abzulausch" );
	deepEqual( Stem("abzulegen"), "abzuleg" );
	deepEqual( Stem("abzulehnenden"), "abzulehn" );
	deepEqual( Stem("abzuleugnen"), "abzuleugn" );
	deepEqual( Stem("abzumachen"), "abzumach" );
	deepEqual( Stem("abzupflücken"), "abzupfluck" );
	deepEqual( Stem("abzureisen"), "abzureis" );
	deepEqual( Stem("abzureissen"), "abzureiss" );
	deepEqual( Stem("abzuschicken"), "abzuschick" );
	deepEqual( Stem("abzuschlagen"), "abzuschlag" );
	deepEqual( Stem("abzuschliessen"), "abzuschliess" );
	deepEqual( Stem("abzuschrecken"), "abzuschreck" );
	deepEqual( Stem("abzuschütteln"), "abzuschutteln" );
	deepEqual( Stem("abzusehen"), "abzuseh" );
	deepEqual( Stem("abzusprengen"), "abzuspreng" );
	deepEqual( Stem("abzustehen"), "abzusteh" );
	deepEqual( Stem("abzustreiten"), "abzustreit" );
	deepEqual( Stem("abzustumpfen"), "abzustumpf" );
	deepEqual( Stem("abzutreten"), "abzutret" );
	deepEqual( Stem("abzuwarten"), "abzuwart" );
	deepEqual( Stem("abzuwehren"), "abzuwehr" );
	deepEqual( Stem("abzuwenden"), "abzuw" );
	deepEqual( Stem("abzuwischen"), "abzuw" );
	deepEqual( Stem("abzuziehen"), "abzuzieh" );
	deepEqual( Stem("abzweckt"), "abzweckt" );
	deepEqual( Stem("abzweckung"), "abzweck" );
	deepEqual( Stem("accidens"), "accid" );
	deepEqual( Stem("ach"), "ach" );
	deepEqual( Stem("achias"), "achias" );
	deepEqual( Stem("achijas"), "achijas" );
	deepEqual( Stem("achis"), "achis" );
	deepEqual( Stem("achitophel"), "achitophel" );
	deepEqual( Stem("achseln"), "achseln" );
	deepEqual( Stem("achselzucken"), "achselzuck" );
	deepEqual( Stem("achselzuckend"), "achselzuck" );
	deepEqual( Stem("acht"), "acht" );
	deepEqual( Stem("achtbarsten"), "achtbarst" );
	deepEqual( Stem("achte"), "acht" );
	deepEqual( Stem("achten"), "acht" );
	deepEqual( Stem("achtes"), "acht" );
	deepEqual( Stem("achtet"), "achtet" );
	deepEqual( Stem("achtete"), "achtet" );
	deepEqual( Stem("achteten"), "achtet" );
	deepEqual( Stem("achtgab"), "achtgab" );
	deepEqual( Stem("achtgeben"), "achtgeb" );
	deepEqual( Stem("achtgegeben"), "achtgegeb" );
	deepEqual( Stem("achthundert"), "achthundert" );
	deepEqual( Stem("achtjähriges"), "achtjahr" );
	deepEqual( Stem("achtliche"), "achtlich" );
	deepEqual( Stem("achtlos"), "achtlos" );
	deepEqual( Stem("achtlose"), "achtlos" );
	deepEqual( Stem("achtsam"), "achtsam" );
	deepEqual( Stem("achtsamkeit"), "achtsam" );
	deepEqual( Stem("achtundvierzig"), "achtundvierz" );
	deepEqual( Stem("achtundzwanzig"), "achtundzwanz" );
	deepEqual( Stem("achtung"), "achtung" );
	deepEqual( Stem("achtungsvoller"), "achtungsvoll" );
	deepEqual( Stem("achtungsvolles"), "achtungsvoll" );
	deepEqual( Stem("achtungswerten"), "achtungswert" );
	deepEqual( Stem("achtzehn"), "achtzehn" );
	deepEqual( Stem("achtzehnjährigem"), "achtzehnjahr" );
	deepEqual( Stem("achtzehnjährigen"), "achtzehnjahr" );
	deepEqual( Stem("achtzig"), "achtzig" );
	deepEqual( Stem("achtziger"), "achtzig" );
	deepEqual( Stem("achtzugeben"), "achtzugeb" );
	deepEqual( Stem("ächzen"), "achz" );
	deepEqual( Stem("ächzendes"), "achzend" );
	deepEqual( Stem("acker"), "ack" );
	deepEqual( Stem("äcker"), "ack" );
	deepEqual( Stem("ackerfeld"), "ackerfeld" );
	deepEqual( Stem("ackerland"), "ackerland" );
	deepEqual( Stem("ackerleute"), "ackerleut" );
	deepEqual( Stem("äckern"), "ack" );
	deepEqual( Stem("ackers"), "ack" );
	deepEqual( Stem("ackersmann"), "ackersmann" );
	deepEqual( Stem("ackerstein"), "ackerstein" );
	deepEqual( Stem("ackerstreifen"), "ackerstreif" );
	deepEqual( Stem("ackerwirtschaft"), "ackerwirtschaft" );
	deepEqual( Stem("ackerzipfel"), "ackerzipfel" );
	deepEqual( Stem("ackerzipfelchen"), "ackerzipfelch" );
	deepEqual( Stem("ad"), "ad" );
	deepEqual( Stem("ada"), "ada" );
	deepEqual( Stem("adah"), "adah" );
	deepEqual( Stem("adam"), "adam" );
	deepEqual( Stem("adamah"), "adamah" );
	deepEqual( Stem("adams"), "adam" );
	deepEqual( Stem("adamshof"), "adamshof" );
	deepEqual( Stem("adäquat"), "adaquat" );
	deepEqual( Stem("adäquaten"), "adaquat" );
	deepEqual( Stem("ade"), "ade" );
	deepEqual( Stem("adel"), "adel" );
	deepEqual( Stem("adelaide"), "adelaid" );
	deepEqual( Stem("adele"), "adel" );
	deepEqual( Stem("adelsgespons"), "adelsgespon" );
	deepEqual( Stem("adelsherrn"), "adelsherrn" );
	deepEqual( Stem("adelshochmut"), "adelshochmut" );
	deepEqual( Stem("adelsliebchen"), "adelsliebch" );
	deepEqual( Stem("adepten"), "adept" );
	deepEqual( Stem("ader"), "ader" );
	deepEqual( Stem("aderlassen"), "aderlass" );
	deepEqual( Stem("aderlassmännchen"), "aderlassmannch" );
	deepEqual( Stem("adern"), "adern" );
	deepEqual( Stem("adieu"), "adieu" );
	deepEqual( Stem("adjektiv"), "adjektiv" );
	deepEqual( Stem("adler"), "adl" );
	deepEqual( Stem("adlerflügeln"), "adlerflugeln" );
	deepEqual( Stem("adlerweibchen"), "adlerweibch" );
	deepEqual( Stem("adn"), "adn" );
	deepEqual( Stem("adoration"), "adoration" );
	deepEqual( Stem("adresse"), "adress" );
	deepEqual( Stem("advanced"), "advanced" );
	deepEqual( Stem("advokat"), "advokat" );
	deepEqual( Stem("advokaten"), "advokat" );
	deepEqual( Stem("advokatenarbeit"), "advokatenarbeit" );
	deepEqual( Stem("advokatenkreisen"), "advokatenkreis" );
	deepEqual( Stem("advokatenzimmer"), "advokatenzimm" );
	deepEqual( Stem("aeternitatis"), "aeternitatis" );
	deepEqual( Stem("affäre"), "affar" );
	deepEqual( Stem("äffchen"), "affch" );
	deepEqual( Stem("affe"), "aff" );
	deepEqual( Stem("affectio"), "affectio" );
	deepEqual( Stem("affectiones"), "affection" );
	deepEqual( Stem("affekt"), "affekt" );
	deepEqual( Stem("affen"), "aff" );
	deepEqual( Stem("äffen"), "aff" );
	deepEqual( Stem("affenschwänze"), "affenschwanz" );
	deepEqual( Stem("affinitates"), "affinitat" );
	deepEqual( Stem("affizierenden"), "affizier" );
	deepEqual( Stem("affiziert"), "affiziert" );
	deepEqual( Stem("affizierten"), "affiziert" );
	deepEqual( Stem("afrika"), "afrika" );
	deepEqual( Stem("afrikanischen"), "afrikan" );
	deepEqual( Stem("aftermiete"), "aftermiet" );
	deepEqual( Stem("againdabei"), "againdabei" );
	deepEqual( Stem("agathon"), "agathon" );
	deepEqual( Stem("agck"), "agck" );
	deepEqual( Stem("agent"), "agent" );
	deepEqual( Stem("agenten"), "agent" );
	deepEqual( Stem("ager"), "ager" );
	deepEqual( Stem("agnetendorfer"), "agnetendorf" );
	deepEqual( Stem("agwnistikon"), "agwnistikon" );
	deepEqual( Stem("ägypten"), "agypt" );
	deepEqual( Stem("ägyptenland"), "agyptenland" );
	deepEqual( Stem("ägyptenlandes"), "agyptenland" );
	deepEqual( Stem("ägyptenlands"), "agyptenland" );
	deepEqual( Stem("ägyptens"), "agypt" );
	deepEqual( Stem("ägypter"), "agypt" );
	deepEqual( Stem("ägyptern"), "agypt" );
	deepEqual( Stem("ägypters"), "agypt" );
	deepEqual( Stem("ägyptischen"), "agypt" );
	deepEqual( Stem("ägyptischer"), "agypt" );
	deepEqual( Stem("ah"), "ah" );
	deepEqual( Stem("aharon"), "aharon" );
	deepEqual( Stem("aharons"), "aharon" );
	deepEqual( Stem("ahmten"), "ahmt" );
	deepEqual( Stem("ahndung"), "ahndung" );
	deepEqual( Stem("ahne"), "ahn" );
	deepEqual( Stem("ahnen"), "ahn" );
	deepEqual( Stem("ahnherr"), "ahnherr" );
	deepEqual( Stem("ahnl"), "ahnl" );
	deepEqual( Stem("ähnlich"), "ahnlich" );
	deepEqual( Stem("ähnliche"), "ahnlich" );
	deepEqual( Stem("ähnlichem"), "ahnlich" );
	deepEqual( Stem("ähnlichen"), "ahnlich" );
	deepEqual( Stem("ähnlicher"), "ahnlich" );
	deepEqual( Stem("ahnliches"), "ahnlich" );
	deepEqual( Stem("ähnliches"), "ahnlich" );
	deepEqual( Stem("ähnlichkeit"), "ahnlich" );
	deepEqual( Stem("ähnlichkeiten"), "ahnlich" );
	deepEqual( Stem("ahnt"), "ahnt" );
	deepEqual( Stem("ahnte"), "ahnt" );
	deepEqual( Stem("ahnung"), "ahnung" );
	deepEqual( Stem("ahnungen"), "ahnung" );
	deepEqual( Stem("ahnungslos"), "ahnungslos" );
	deepEqual( Stem("ahornbäume"), "ahornbaum" );
	deepEqual( Stem("ahornstämmchen"), "ahornstammch" );
	deepEqual( Stem("ähre"), "ahr" );
	deepEqual( Stem("ähren"), "ahr" );
	deepEqual( Stem("ai"), "ai" );
	deepEqual( Stem("aimer"), "aim" );
	deepEqual( Stem("airfares"), "airfar" );
	deepEqual( Stem("airline"), "airlin" );
	deepEqual( Stem("aiso"), "aiso" );
	deepEqual( Stem("akazien"), "akazi" );
	deepEqual( Stem("akkommodements"), "akkommodement" );
	deepEqual( Stem("akkompagnierend"), "akkompagnier" );
	deepEqual( Stem("akkorde"), "akkord" );
	deepEqual( Stem("akkorden"), "akkord" );
	deepEqual( Stem("akkordes"), "akkord" );
	deepEqual( Stem("akkusativ"), "akkusativ" );
	deepEqual( Stem("akkusative"), "akkusativ" );
	deepEqual( Stem("akrat"), "akrat" );
	deepEqual( Stem("akt"), "akt" );
	deepEqual( Stem("akten"), "akt" );
	deepEqual( Stem("aktendiebstählen"), "aktendiebstahl" );
	deepEqual( Stem("aktien"), "akti" );
	deepEqual( Stem("aktienbierbrauerei"), "aktienbierbrauerei" );
	deepEqual( Stem("aktienbrauerei"), "aktienbrauerei" );
	deepEqual( Stem("aktienhopfenpflanzung"), "aktienhopfenpflanz" );
	deepEqual( Stem("aktienschwindels"), "aktienschwindel" );
	deepEqual( Stem("aktion"), "aktion" );
	deepEqual( Stem("aktionen"), "aktion" );
	deepEqual( Stem("aktivdienstgeneration"), "aktivdienstgeneration" );
	deepEqual( Stem("aktiven"), "aktiv" );
	deepEqual( Stem("aktivitäten"), "aktivitat" );
	deepEqual( Stem("aktuell"), "aktuell" );
	deepEqual( Stem("akustik"), "akust" );
	deepEqual( Stem("akustikfreien"), "akustikfrei" );
	deepEqual( Stem("akustische"), "akust" );
	deepEqual( Stem("akustisehen"), "akustiseh" );
	deepEqual( Stem("akzeptiert"), "akzeptiert" );
	deepEqual( Stem("akzidentell"), "akzidentell" );
	deepEqual( Stem("alar"), "alar" );
	deepEqual( Stem("alarm"), "alarm" );
	deepEqual( Stem("alarmknopf"), "alarmknopf" );
	deepEqual( Stem("alato"), "alato" );
	deepEqual( Stem("albern"), "alb" );
	deepEqual( Stem("albernen"), "albern" );
	deepEqual( Stem("albernes"), "albern" );
	deepEqual( Stem("albernheit"), "albern" );
	deepEqual( Stem("album"), "album" );
	deepEqual( Stem("alcopops"), "alcopops" );
	deepEqual( Stem("aleviten"), "alevit" );
	deepEqual( Stem("alex"), "alex" );
	deepEqual( Stem("alfred"), "alfred" );
	deepEqual( Stem("alga"), "alga" );
	deepEqual( Stem("algen"), "alg" );
	deepEqual( Stem("algier"), "algi" );
	deepEqual( Stem("alhjeia"), "alhjeia" );
	deepEqual( Stem("aliud"), "aliud" );
	deepEqual( Stem("alkali"), "alkali" );
	deepEqual( Stem("alkohol"), "alkohol" );
	deepEqual( Stem("alkoholgesetz"), "alkoholgesetz" );
	deepEqual( Stem("alkoholhaltige"), "alkoholhalt" );
	deepEqual( Stem("alkoholiker"), "alkohol" );
	deepEqual( Stem("alkoholischer"), "alkohol" );
	deepEqual( Stem("alkoholkonsum"), "alkoholkonsum" );
	deepEqual( Stem("alkoholverwaltung"), "alkoholverwalt" );
	deepEqual( Stem("all"), "all" );
	deepEqual( Stem("allabendlich"), "allabend" );
	deepEqual( Stem("allabentlich"), "allabent" );
	deepEqual( Stem("allbereits"), "allbereit" );
	deepEqual( Stem("allda"), "allda" );
	deepEqual( Stem("alldem"), "alld" );
	deepEqual( Stem("alle"), "all" );
	deepEqual( Stem("alledem"), "alled" );
	deepEqual( Stem("allee"), "alle" );
	deepEqual( Stem("alleebäumen"), "alleebaum" );
	deepEqual( Stem("allegorie"), "allegori" );
	deepEqual( Stem("allein"), "allein" );
	deepEqual( Stem("alleinherrschaft"), "alleinherrschaft" );
	deepEqual( Stem("alleinige"), "allein" );
	deepEqual( Stem("alleinigen"), "allein" );
	deepEqual( Stem("allem"), "all" );
	deepEqual( Stem("allemal"), "allemal" );
	deepEqual( Stem("allen"), "all" );
	deepEqual( Stem("allendlich"), "allend" );
	deepEqual( Stem("allenfalls"), "allenfall" );
	deepEqual( Stem("allenthalben"), "allenthalb" );
	deepEqual( Stem("aller"), "all" );
	deepEqual( Stem("allerallgemeinste"), "allerallgemein" );
	deepEqual( Stem("allerallgemeinsten"), "allerallgemein" );
	deepEqual( Stem("alleräusserlichste"), "allerauss" );
	deepEqual( Stem("allerbescheidenstes"), "allerbescheiden" );
	deepEqual( Stem("allerdings"), "allerding" );
	deepEqual( Stem("allerdurchtriebenste"), "allerdurchtrieben" );
	deepEqual( Stem("allereinzelnsten"), "allereinzeln" );
	deepEqual( Stem("allerengsten"), "allereng" );
	deepEqual( Stem("allerentferntesten"), "allerentfernt" );
	deepEqual( Stem("allererst"), "allererst" );
	deepEqual( Stem("allerersten"), "allererst" );
	deepEqual( Stem("allergelindeste"), "allergelind" );
	deepEqual( Stem("allergrösste"), "allergrosst" );
	deepEqual( Stem("allerhand"), "allerhand" );
	deepEqual( Stem("allerheiligste"), "allerheil" );
	deepEqual( Stem("allerherzlichste"), "allerherz" );
	deepEqual( Stem("allerkleinsten"), "allerklein" );
	deepEqual( Stem("allerkleinstes"), "allerklein" );
	deepEqual( Stem("allerkostbarsten"), "allerkostbarst" );
	deepEqual( Stem("allerkürzeste"), "allerkurz" );
	deepEqual( Stem("allerlei"), "allerlei" );
	deepEqual( Stem("allerletzt"), "allerletzt" );
	deepEqual( Stem("allerliebste"), "allerlieb" );
	deepEqual( Stem("allerliebstes"), "allerlieb" );
	deepEqual( Stem("allernächster"), "allernach" );
	deepEqual( Stem("allerniederträchtigstes"), "allerniedertracht" );
	deepEqual( Stem("allerorten"), "allerort" );
	deepEqual( Stem("allerschlimmste"), "allerschlimm" );
	deepEqual( Stem("allerschlimmsten"), "allerschlimm" );
	deepEqual( Stem("allerschönste"), "allerschon" );
	deepEqual( Stem("allerschönsten"), "allerschon" );
	deepEqual( Stem("allerseits"), "allerseit" );
	deepEqual( Stem("allerseltsamsten"), "allerseltsam" );
	deepEqual( Stem("allerunheimlichste"), "allerunheim" );
	deepEqual( Stem("allerunterste"), "allerunterst" );
	deepEqual( Stem("allerverkehrteste"), "allerverkehrt" );
	deepEqual( Stem("allervernünftigsten"), "allervernunft" );
	deepEqual( Stem("allerwegen"), "allerweg" );
	deepEqual( Stem("allerweissesten"), "allerweiss" );
	deepEqual( Stem("allerwenigsten"), "allerwen" );
	deepEqual( Stem("alles"), "all" );
	deepEqual( Stem("allezeit"), "allezeit" );
	deepEqual( Stem("allfort"), "allfort" );
	deepEqual( Stem("allgegenwart"), "allgegenwart" );
	deepEqual( Stem("allgegenwärtig"), "allgegenwart" );
	deepEqual( Stem("allgemein"), "allgemein" );
	deepEqual( Stem("allgemeine"), "allgemein" );
	deepEqual( Stem("allgemeinem"), "allgemein" );
	deepEqual( Stem("allgemeinen"), "allgemein" );
	deepEqual( Stem("allgemeiner"), "allgemein" );
	deepEqual( Stem("allgemeinere"), "allgemein" );
	deepEqual( Stem("allgemeineren"), "allgemein" );
	deepEqual( Stem("allgemeines"), "allgemein" );
	deepEqual( Stem("allgemeingültigkeit"), "allgemeingult" );
	deepEqual( Stem("allgemeinheit"), "allgemein" );
	deepEqual( Stem("allgemeinste"), "allgemein" );
	deepEqual( Stem("allgemeinsten"), "allgemein" );
	deepEqual( Stem("allgemeinstes"), "allgemein" );
	deepEqual( Stem("allgewaltige"), "allgewalt" );
	deepEqual( Stem("allgewaltigen"), "allgewalt" );
	deepEqual( Stem("allgütigkeit"), "allgut" );
	deepEqual( Stem("allherbstlich"), "allherbst" );
	deepEqual( Stem("allhier"), "allhi" );
	deepEqual( Stem("alljährlich"), "alljahr" );
	deepEqual( Stem("allmacht"), "allmacht" );
	deepEqual( Stem("allmächtig"), "allmacht" );
	deepEqual( Stem("allmächtige"), "allmacht" );
	deepEqual( Stem("allmächtigen"), "allmacht" );
	deepEqual( Stem("allmählich"), "allmah" );
	deepEqual( Stem("allmähliche"), "allmah" );
	deepEqual( Stem("allmählig"), "allmahl" );
	deepEqual( Stem("allmal"), "allmal" );
	deepEqual( Stem("allnächtlich"), "allnacht" );
	deepEqual( Stem("allnirgends"), "allnirg" );
	deepEqual( Stem("allobrogische"), "allobrog" );
	deepEqual( Stem("allobrogischen"), "allobrog" );
	deepEqual( Stem("alls"), "all" );
	deepEqual( Stem("alltag"), "alltag" );
	deepEqual( Stem("alltäglich"), "alltag" );
	deepEqual( Stem("alltägliche"), "alltag" );
	deepEqual( Stem("allumfassende"), "allumfass" );
	deepEqual( Stem("allumfassenden"), "allumfass" );
	deepEqual( Stem("allwaltende"), "allwalt" );
	deepEqual( Stem("allwärts"), "allwart" );
	deepEqual( Stem("allweg"), "allweg" );
	deepEqual( Stem("allweil"), "allweil" );
	deepEqual( Stem("allwissend"), "allwiss" );
	deepEqual( Stem("allwissenheit"), "allwiss" );
	deepEqual( Stem("allwo"), "allwo" );
	deepEqual( Stem("allwöchentlich"), "allwochent" );
	deepEqual( Stem("allzeit"), "allzeit" );
	deepEqual( Stem("allzu"), "allzu" );
	deepEqual( Stem("allzulange"), "allzulang" );
	deepEqual( Stem("allzumal"), "allzumal" );
	deepEqual( Stem("allzunahen"), "allzunah" );
	deepEqual( Stem("allzusehr"), "allzusehr" );
	deepEqual( Stem("alm"), "alm" );
	deepEqual( Stem("almen"), "alm" );
	deepEqual( Stem("almrausch"), "almrausch" );
	deepEqual( Stem("alpennatur"), "alpennatur" );
	deepEqual( Stem("als"), "als" );
	deepEqual( Stem("alsbald"), "alsbald" );
	deepEqual( Stem("alsdann"), "alsdann" );
	deepEqual( Stem("also"), "also" );
	deepEqual( Stem("alsobald"), "alsobald" );
	deepEqual( Stem("alsogleich"), "alsogleich" );
	deepEqual( Stem("alt"), "alt" );
	deepEqual( Stem("altar"), "altar" );
	deepEqual( Stem("altare"), "altar" );
	deepEqual( Stem("altäre"), "altar" );
	deepEqual( Stem("altären"), "altar" );
	deepEqual( Stem("altars"), "altar" );
	deepEqual( Stem("altbekannten"), "altbekannt" );
	deepEqual( Stem("alte"), "alt" );
	deepEqual( Stem("altem"), "alt" );
	deepEqual( Stem("alten"), "alt" );
	deepEqual( Stem("alter"), "alt" );
	deepEqual( Stem("älter"), "alt" );
	deepEqual( Stem("ältere"), "alt" );
	deepEqual( Stem("älteren"), "alt" );
	deepEqual( Stem("älterer"), "alt" );
	deepEqual( Stem("ältern"), "alt" );
	deepEqual( Stem("alternative"), "alternativ" );
	deepEqual( Stem("alternativen"), "alternativ" );
	deepEqual( Stem("alternativpolitik"), "alternativpolit" );
	deepEqual( Stem("alternde"), "alternd" );
	deepEqual( Stem("alternden"), "alternd" );
	deepEqual( Stem("alters"), "alt" );
	deepEqual( Stem("altersleiden"), "altersleid" );
	deepEqual( Stem("altersschwäche"), "altersschwach" );
	deepEqual( Stem("altert"), "altert" );
	deepEqual( Stem("altertum"), "altertum" );
	deepEqual( Stem("altertümlichen"), "altertum" );
	deepEqual( Stem("altertums"), "altertum" );
	deepEqual( Stem("altes"), "alt" );
	deepEqual( Stem("älteste"), "alt" );
	deepEqual( Stem("ältesten"), "alt" );
	deepEqual( Stem("alteweibersommers"), "alteweibersomm" );
	deepEqual( Stem("altjungferngesicht"), "altjungferngesicht" );
	deepEqual( Stem("ältliche"), "altlich" );
	deepEqual( Stem("altmodisch"), "altmod" );
	deepEqual( Stem("altranning"), "altranning" );
	deepEqual( Stem("alts"), "alt" );
	deepEqual( Stem("altstimme"), "altstimm" );
	deepEqual( Stem("altväterische"), "altvater" );
	deepEqual( Stem("altväterischer"), "altvater" );
	deepEqual( Stem("alumnus"), "alumnus" );
	deepEqual( Stem("am"), "am" );
	deepEqual( Stem("amal"), "amal" );
	deepEqual( Stem("amalek"), "amalek" );
	deepEqual( Stem("amalie"), "amali" );
	deepEqual( Stem("amazonenhafter"), "amazonenhaft" );
	deepEqual( Stem("ambiente"), "ambient" );
	deepEqual( Stem("ambros"), "ambros" );
	deepEqual( Stem("ameise"), "ameis" );
	deepEqual( Stem("ameisen"), "ameis" );
	deepEqual( Stem("amen"), "amen" );
	deepEqual( Stem("amer"), "amer" );
	deepEqual( Stem("amerika"), "amerika" );
	deepEqual( Stem("amerikaner"), "amerikan" );
	deepEqual( Stem("amerikanern"), "amerikan" );
	deepEqual( Stem("amerikanische"), "amerikan" );
	deepEqual( Stem("amerikanischen"), "amerikan" );
	deepEqual( Stem("amhag"), "amhag" );
	deepEqual( Stem("amiga"), "amiga" );
	deepEqual( Stem("amme"), "amm" );
	deepEqual( Stem("amminadabs"), "amminadab" );
	deepEqual( Stem("ammoniter"), "ammonit" );
	deepEqual( Stem("ammons"), "ammon" );
	deepEqual( Stem("amnestie"), "amnesti" );
	deepEqual( Stem("amnesty"), "amnesty" );
	deepEqual( Stem("amol"), "amol" );
	deepEqual( Stem("amor"), "amor" );
	deepEqual( Stem("amörchen"), "amorch" );
	deepEqual( Stem("amores"), "amor" );
	deepEqual( Stem("amoribus"), "amoribus" );
	deepEqual( Stem("amoriter"), "amorit" );
	deepEqual( Stem("amoriters"), "amorit" );
	deepEqual( Stem("amos"), "amos" );
	deepEqual( Stem("amour"), "amour" );
	deepEqual( Stem("amrain"), "amrain" );
	deepEqual( Stem("amram"), "amram" );
	deepEqual( Stem("amrans"), "amran" );
	deepEqual( Stem("amsterdam"), "amsterdam" );
	deepEqual( Stem("amt"), "amt" );
	deepEqual( Stem("ämtchen"), "amtch" );
	deepEqual( Stem("amte"), "amt" );
	deepEqual( Stem("ämter"), "amt" );
	deepEqual( Stem("amtes"), "amt" );
	deepEqual( Stem("amtleute"), "amtleut" );
	deepEqual( Stem("amtleuten"), "amtleut" );
	deepEqual( Stem("amtlich"), "amtlich" );
	deepEqual( Stem("amtsdauer"), "amtsdau" );
	deepEqual( Stem("amtsdauern"), "amtsdau" );
	deepEqual( Stem("amtsgeheimnisse"), "amtsgeheimnis" );
	deepEqual( Stem("amtsrat"), "amtsrat" );
	deepEqual( Stem("amtsrates"), "amtsrat" );
	deepEqual( Stem("amtsrats"), "amtsrat" );
	deepEqual( Stem("amtssprache"), "amtssprach" );
	deepEqual( Stem("amtsstube"), "amtsstub" );
	deepEqual( Stem("amüsant"), "amusant" );
	deepEqual( Stem("amüsieren"), "amusi" );
	deepEqual( Stem("amüsiert"), "amusiert" );
	deepEqual( Stem("an"), "an" );
	deepEqual( Stem("anaks"), "anak" );
	deepEqual( Stem("analogie"), "analogi" );
	deepEqual( Stem("analogisch"), "analog" );
	deepEqual( Stem("analogon"), "analogon" );
	deepEqual( Stem("analysierbarer"), "analysierbar" );
	deepEqual( Stem("analysieren"), "analysi" );
	deepEqual( Stem("analyticis"), "analyticis" );
	deepEqual( Stem("analytik"), "analyt" );
	deepEqual( Stem("analytisch"), "analyt" );
	deepEqual( Stem("analytischen"), "analyt" );
	deepEqual( Stem("anap"), "anap" );
	deepEqual( Stem("anarchie"), "anarchi" );
	deepEqual( Stem("anarchischen"), "anarch" );
	deepEqual( Stem("anaskeuazein"), "anaskeuazein" );
	deepEqual( Stem("anaskeuazomen"), "anaskeuazom" );
	deepEqual( Stem("anaxagoras"), "anaxagoras" );
	deepEqual( Stem("anbaueten"), "anbauet" );
	deepEqual( Stem("anbeginn"), "anbeginn" );
	deepEqual( Stem("anbehalten"), "anbehalt" );
	deepEqual( Stem("anbelangt"), "anbelangt" );
	deepEqual( Stem("anbellte"), "anbellt" );
	deepEqual( Stem("anbeten"), "anbet" );
	deepEqual( Stem("anbeter"), "anbet" );
	deepEqual( Stem("anbetern"), "anbet" );
	deepEqual( Stem("anbetet"), "anbetet" );
	deepEqual( Stem("anbetete"), "anbetet" );
	deepEqual( Stem("anbeteten"), "anbetet" );
	deepEqual( Stem("anbetrifft"), "anbetrifft" );
	deepEqual( Stem("anbetung"), "anbet" );
	deepEqual( Stem("anbey"), "anbey" );
	deepEqual( Stem("anbieten"), "anbiet" );
	deepEqual( Stem("anbietend"), "anbiet" );
	deepEqual( Stem("anbietet"), "anbietet" );
	deepEqual( Stem("anbildet"), "anbildet" );
	deepEqual( Stem("anbinden"), "anbind" );
	deepEqual( Stem("anbindung"), "anbind" );
	deepEqual( Stem("anbissen"), "anbiss" );
	deepEqual( Stem("anblick"), "anblick" );
	deepEqual( Stem("anblicke"), "anblick" );
	deepEqual( Stem("anblicken"), "anblick" );
	deepEqual( Stem("anblicks"), "anblick" );
	deepEqual( Stem("anblickte"), "anblickt" );
	deepEqual( Stem("anbot"), "anbot" );
	deepEqual( Stem("anböten"), "anbot" );
	deepEqual( Stem("anbringen"), "anbring" );
	deepEqual( Stem("anbruch"), "anbruch" );
	deepEqual( Stem("and"), "and" );
	deepEqual( Stem("andacht"), "andacht" );
	deepEqual( Stem("andächtig"), "andacht" );
	deepEqual( Stem("andächtige"), "andacht" );
	deepEqual( Stem("andächtigen"), "andacht" );
	deepEqual( Stem("andächtiger"), "andacht" );
	deepEqual( Stem("andauernde"), "andauernd" );
	deepEqual( Stem("andenken"), "andenk" );
	deepEqual( Stem("andenkens"), "andenk" );
	deepEqual( Stem("ander"), "and" );
	deepEqual( Stem("anderau"), "anderau" );
	deepEqual( Stem("anderckens"), "anderck" );
	deepEqual( Stem("andere"), "and" );
	deepEqual( Stem("anderem"), "and" );
	deepEqual( Stem("anderen"), "and" );
	deepEqual( Stem("anderer"), "and" );
	deepEqual( Stem("andererseits"), "andererseit" );
	deepEqual( Stem("anderes"), "and" );
	deepEqual( Stem("anderl"), "anderl" );
	deepEqual( Stem("anderls"), "anderl" );
	deepEqual( Stem("anderm"), "anderm" );
	deepEqual( Stem("andern"), "and" );
	deepEqual( Stem("ändern"), "and" );
	deepEqual( Stem("anders"), "and" );
	deepEqual( Stem("anderseits"), "anderseit" );
	deepEqual( Stem("anderswo"), "anderswo" );
	deepEqual( Stem("anderswoher"), "anderswoh" );
	deepEqual( Stem("anderswohin"), "anderswohin" );
	deepEqual( Stem("ändert"), "andert" );
	deepEqual( Stem("änderte"), "andert" );
	deepEqual( Stem("anderthalb"), "anderthalb" );
	deepEqual( Stem("änderung"), "ander" );
	deepEqual( Stem("änderungen"), "ander" );
	deepEqual( Stem("anderwärts"), "anderwart" );
	deepEqual( Stem("anderweis"), "anderweis" );
	deepEqual( Stem("anderweitig"), "anderweit" );
	deepEqual( Stem("anderweitige"), "anderweit" );
	deepEqual( Stem("anderweitigen"), "anderweit" );
	deepEqual( Stem("andeutet"), "andeutet" );
	deepEqual( Stem("andeutungsweise"), "andeutungsweis" );
	deepEqual( Stem("andre"), "andr" );
	deepEqual( Stem("andreas"), "andreas" );
	deepEqual( Stem("andrer"), "andr" );
	deepEqual( Stem("andrerseits"), "andrerseit" );
	deepEqual( Stem("andres"), "andr" );
	deepEqual( Stem("andringling"), "andringling" );
	deepEqual( Stem("androhung"), "androh" );
	deepEqual( Stem("androhungen"), "androh" );
	deepEqual( Stem("aneignen"), "aneign" );
	deepEqual( Stem("aneignet"), "aneignet" );
	deepEqual( Stem("aneignete"), "aneignet" );
	deepEqual( Stem("aneigneten"), "aneignet" );
	deepEqual( Stem("aneignung"), "aneign" );
	deepEqual( Stem("aneinander"), "aneinand" );
	deepEqual( Stem("aneinandergebracht"), "aneinandergebracht" );
	deepEqual( Stem("aneinandergelehnt"), "aneinandergelehnt" );
	deepEqual( Stem("aneinandergeschmiegt"), "aneinandergeschmiegt" );
	deepEqual( Stem("anerbieten"), "anerbiet" );
	deepEqual( Stem("anererbtem"), "anererbt" );
	deepEqual( Stem("anererbten"), "anererbt" );
	deepEqual( Stem("anererbtes"), "anererbt" );
	deepEqual( Stem("anerkannt"), "anerkannt" );
	deepEqual( Stem("anerkannte"), "anerkannt" );
	deepEqual( Stem("anerkannten"), "anerkannt" );
	deepEqual( Stem("anerkanntesten"), "anerkannt" );
	deepEqual( Stem("anerkenne"), "anerkenn" );
	deepEqual( Stem("anerkennen"), "anerkenn" );
	deepEqual( Stem("anerkennt"), "anerkennt" );
	deepEqual( Stem("anerkennung"), "anerkenn" );
	deepEqual( Stem("anfahren"), "anfahr" );
	deepEqual( Stem("anfall"), "anfall" );
	deepEqual( Stem("anfälle"), "anfall" );
	deepEqual( Stem("anfällen"), "anfall" );
	deepEqual( Stem("anfang"), "anfang" );
	deepEqual( Stem("anfange"), "anfang" );
	deepEqual( Stem("anfänge"), "anfang" );
	deepEqual( Stem("anfangen"), "anfang" );
	deepEqual( Stem("anfängen"), "anfang" );
	deepEqual( Stem("anfangend"), "anfang" );
	deepEqual( Stem("anfanges"), "anfang" );
	deepEqual( Stem("anfänglich"), "anfang" );
	deepEqual( Stem("anfangs"), "anfang" );
	deepEqual( Stem("anfängt"), "anfangt" );
	deepEqual( Stem("anfassen"), "anfass" );
	deepEqual( Stem("anfechten"), "anfecht" );
	deepEqual( Stem("anfechtende"), "anfecht" );
	deepEqual( Stem("anfechtenden"), "anfecht" );
	deepEqual( Stem("anfechter"), "anfecht" );
	deepEqual( Stem("anfechtern"), "anfecht" );
	deepEqual( Stem("anfechtung"), "anfecht" );
	deepEqual( Stem("anfechtungen"), "anfecht" );
	deepEqual( Stem("anfeinden"), "anfeind" );
	deepEqual( Stem("anfertigen"), "anfert" );
	deepEqual( Stem("anficht"), "anficht" );
	deepEqual( Stem("anfing"), "anfing" );
	deepEqual( Stem("anfinge"), "anfing" );
	deepEqual( Stem("anfingen"), "anfing" );
	deepEqual( Stem("anflehen"), "anfleh" );
	deepEqual( Stem("anflehend"), "anfleh" );
	deepEqual( Stem("anfleht"), "anfleht" );
	deepEqual( Stem("anflehte"), "anfleht" );
	deepEqual( Stem("anflug"), "anflug" );
	deepEqual( Stem("anfocht"), "anfocht" );
	deepEqual( Stem("anfochten"), "anfocht" );
	deepEqual( Stem("anforderungen"), "anforder" );
	deepEqual( Stem("anforderungsprofil"), "anforderungsprofil" );
	deepEqual( Stem("anfrage"), "anfrag" );
	deepEqual( Stem("anfragen"), "anfrag" );
	deepEqual( Stem("anführen"), "anfuhr" );
	deepEqual( Stem("anfüllen"), "anfull" );
	deepEqual( Stem("anfüllte"), "anfullt" );
	deepEqual( Stem("ang"), "ang" );
	deepEqual( Stem("angab"), "angab" );
	deepEqual( Stem("angabe"), "angab" );
	deepEqual( Stem("angaben"), "angab" );
	deepEqual( Stem("angafften"), "angafft" );
	deepEqual( Stem("angähnte"), "angahnt" );
	deepEqual( Stem("angeb"), "angeb" );
	deepEqual( Stem("angebaut"), "angebaut" );
	deepEqual( Stem("angeben"), "angeb" );
	deepEqual( Stem("angebetet"), "angebetet" );
	deepEqual( Stem("angebissene"), "angebiss" );
	deepEqual( Stem("angeblich"), "angeb" );
	deepEqual( Stem("angeblichen"), "angeb" );
	deepEqual( Stem("angeblicher"), "angeb" );
	deepEqual( Stem("angeboren"), "angebor" );
	deepEqual( Stem("angeborenen"), "angebor" );
	deepEqual( Stem("angeborener"), "angebor" );
	deepEqual( Stem("angeborne"), "angeborn" );
	deepEqual( Stem("angebornen"), "angeborn" );
	deepEqual( Stem("angebot"), "angebot" );
	deepEqual( Stem("angebote"), "angebot" );
	deepEqual( Stem("angeboten"), "angebot" );
	deepEqual( Stem("angebotenem"), "angebot" );
	deepEqual( Stem("angebotenen"), "angebot" );
	deepEqual( Stem("angebotenes"), "angebot" );
	deepEqual( Stem("angebotes"), "angebot" );
	deepEqual( Stem("angebracht"), "angebracht" );
	deepEqual( Stem("angebrannt"), "angebrannt" );
	deepEqual( Stem("angebrochen"), "angebroch" );
	deepEqual( Stem("angebunden"), "angebund" );
	deepEqual( Stem("angebundenen"), "angebund" );
	deepEqual( Stem("angedeutet"), "angedeutet" );
	deepEqual( Stem("angedreht"), "angedreht" );
	deepEqual( Stem("angedroht"), "angedroht" );
	deepEqual( Stem("angeeignet"), "angeeignet" );
	deepEqual( Stem("angefangen"), "angefang" );
	deepEqual( Stem("angefangenen"), "angefang" );
	deepEqual( Stem("angefasst"), "angefasst" );
	deepEqual( Stem("angefaßt"), "angefasst" );
	deepEqual( Stem("angefeindet"), "angefeindet" );
	deepEqual( Stem("angefeuert"), "angefeuert" );
	deepEqual( Stem("angefleht"), "angefleht" );
	deepEqual( Stem("angefochten"), "angefocht" );
	deepEqual( Stem("angefragt"), "angefragt" );
	deepEqual( Stem("angeführt"), "angefuhrt" );
	deepEqual( Stem("angeführten"), "angefuhrt" );
	deepEqual( Stem("angefüllt"), "angefullt" );
	deepEqual( Stem("angefüllten"), "angefullt" );
	deepEqual( Stem("angegeben"), "angegeb" );
	deepEqual( Stem("angegebenen"), "angegeb" );
	deepEqual( Stem("angegriffen"), "angegriff" );
	deepEqual( Stem("angehaftet"), "angehaftet" );
	deepEqual( Stem("angehalten"), "angehalt" );
	deepEqual( Stem("angehängt"), "angehangt" );
	deepEqual( Stem("angehängte"), "angehangt" );
	deepEqual( Stem("angehängten"), "angehangt" );
	deepEqual( Stem("angehe"), "angeh" );
	deepEqual( Stem("angehende"), "angeh" );
	deepEqual( Stem("angehenden"), "angeh" );
	deepEqual( Stem("angehoben"), "angehob" );
	deepEqual( Stem("angehör"), "angehor" );
	deepEqual( Stem("angehöre"), "angehor" );
	deepEqual( Stem("angehören"), "angehor" );
	deepEqual( Stem("angehörend"), "angehor" );
	deepEqual( Stem("angehöret"), "angehoret" );
	deepEqual( Stem("angehörig"), "angehor" );
	deepEqual( Stem("angehörige"), "angehor" );
	deepEqual( Stem("angehörigen"), "angehor" );
	deepEqual( Stem("angehöriges"), "angehor" );
	deepEqual( Stem("angehört"), "angehort" );
	deepEqual( Stem("angehörte"), "angehort" );
	deepEqual( Stem("angehörten"), "angehort" );
	deepEqual( Stem("angeht"), "angeht" );
	deepEqual( Stem("angekauften"), "angekauft" );
	deepEqual( Stem("angeklagt"), "angeklagt" );
	deepEqual( Stem("angeklagte"), "angeklagt" );
	deepEqual( Stem("angeklagten"), "angeklagt" );
	deepEqual( Stem("angeklagter"), "angeklagt" );
	deepEqual( Stem("angeklammert"), "angeklammert" );
	deepEqual( Stem("angeklatschtem"), "angeklatscht" );
	deepEqual( Stem("angeklebt"), "angeklebt" );
	deepEqual( Stem("angeklebte"), "angeklebt" );
	deepEqual( Stem("angekleidet"), "angekleidet" );
	deepEqual( Stem("angeknüpft"), "angeknupft" );
	deepEqual( Stem("angeknurrt"), "angeknurrt" );
	deepEqual( Stem("angekommen"), "angekomm" );
	deepEqual( Stem("angekündigt"), "angekundigt" );
	deepEqual( Stem("angel"), "angel" );
	deepEqual( Stem("angelangt"), "angelangt" );
	deepEqual( Stem("angelaufen"), "angelauf" );
	deepEqual( Stem("angelegenen"), "angeleg" );
	deepEqual( Stem("angelegenheit"), "angeleg" );
	deepEqual( Stem("angelegenheiten"), "angeleg" );
	deepEqual( Stem("angelegentlich"), "angelegent" );
	deepEqual( Stem("angelegentlichen"), "angelegent" );
	deepEqual( Stem("angelegentlicher"), "angelegent" );
	deepEqual( Stem("angelegentlichste"), "angelegent" );
	deepEqual( Stem("angelegt"), "angelegt" );
	deepEqual( Stem("angelegten"), "angelegt" );
	deepEqual( Stem("angelegtes"), "angelegt" );
	deepEqual( Stem("angeleitet"), "angeleitet" );
	deepEqual( Stem("angelika"), "angelika" );
	deepEqual( Stem("angeln"), "angeln" );
	deepEqual( Stem("angelrute"), "angelrut" );
	deepEqual( Stem("angelte"), "angelt" );
	deepEqual( Stem("angemachten"), "angemacht" );
	deepEqual( Stem("angemasst"), "angemasst" );
	deepEqual( Stem("angemaßt"), "angemasst" );
	deepEqual( Stem("angemassten"), "angemasst" );
	deepEqual( Stem("angemessen"), "angemess" );
	deepEqual( Stem("angemessene"), "angemess" );
	deepEqual( Stem("angemessenen"), "angemess" );
	deepEqual( Stem("angemessener"), "angemess" );
	deepEqual( Stem("angemessenheit"), "angemess" );
	deepEqual( Stem("angenagelt"), "angenagelt" );
	deepEqual( Stem("angenehm"), "angenehm" );
	deepEqual( Stem("angenehme"), "angenehm" );
	deepEqual( Stem("angenehmen"), "angenehm" );
	deepEqual( Stem("angenehmer"), "angenehm" );
	deepEqual( Stem("angenehmeres"), "angenehm" );
	deepEqual( Stem("angenehmes"), "angenehm" );
	deepEqual( Stem("angenehmste"), "angenehm" );
	deepEqual( Stem("angenehmsten"), "angenehm" );
	deepEqual( Stem("angenommen"), "angenomm" );
	deepEqual( Stem("angenommene"), "angenomm" );
	deepEqual( Stem("angenommenen"), "angenomm" );
	deepEqual( Stem("angenommenes"), "angenomm" );
	deepEqual( Stem("angeordnet"), "angeordnet" );
	deepEqual( Stem("angepasst"), "angepasst" );
	deepEqual( Stem("angepaßt"), "angepasst" );
	deepEqual( Stem("angepflanzt"), "angepflanzt" );
	deepEqual( Stem("angeplanscht"), "angeplanscht" );
	deepEqual( Stem("angepumpt"), "angepumpt" );
	deepEqual( Stem("anger"), "ang" );
	deepEqual( Stem("angeredet"), "angeredet" );
	deepEqual( Stem("angeregt"), "angeregt" );
	deepEqual( Stem("angeregter"), "angeregt" );
	deepEqual( Stem("angereist"), "angereist" );
	deepEqual( Stem("angerichtet"), "angerichtet" );
	deepEqual( Stem("angeriemten"), "angeriemt" );
	deepEqual( Stem("angerufen"), "angeruf" );
	deepEqual( Stem("angerührt"), "angeruhrt" );
	deepEqual( Stem("angesagteste"), "angesagt" );
	deepEqual( Stem("angesammelte"), "angesammelt" );
	deepEqual( Stem("angeschafft"), "angeschafft" );
	deepEqual( Stem("angeschaut"), "angeschaut" );
	deepEqual( Stem("angeschickt"), "angeschickt" );
	deepEqual( Stem("angeschlossen"), "angeschloss" );
	deepEqual( Stem("angeschlurft"), "angeschlurft" );
	deepEqual( Stem("angeschrieben"), "angeschrieb" );
	deepEqual( Stem("angeschrien"), "angeschri" );
	deepEqual( Stem("angeschwollen"), "angeschwoll" );
	deepEqual( Stem("angesehen"), "angeseh" );
	deepEqual( Stem("angesehensten"), "angesehen" );
	deepEqual( Stem("angesetzt"), "angesetzt" );
	deepEqual( Stem("angesicht"), "angesicht" );
	deepEqual( Stem("angesichte"), "angesicht" );
	deepEqual( Stem("angesichten"), "angesicht" );
	deepEqual( Stem("angesichter"), "angesicht" );
	deepEqual( Stem("angesichtern"), "angesicht" );
	deepEqual( Stem("angesichtes"), "angesicht" );
	deepEqual( Stem("angesichts"), "angesicht" );
	deepEqual( Stem("angesiedelt"), "angesiedelt" );
	deepEqual( Stem("angesprochen"), "angesproch" );
	deepEqual( Stem("angesteckt"), "angesteckt" );
	deepEqual( Stem("angestellt"), "angestellt" );
	deepEqual( Stem("angestellte"), "angestellt" );
	deepEqual( Stem("angestellten"), "angestellt" );
	deepEqual( Stem("angestellter"), "angestellt" );
	deepEqual( Stem("angestiert"), "angestiert" );
	deepEqual( Stem("angestrengt"), "angestrengt" );
	deepEqual( Stem("angestrengten"), "angestrengt" );
	deepEqual( Stem("angestrengter"), "angestrengt" );
	deepEqual( Stem("angestrengteste"), "angestrengt" );
	deepEqual( Stem("angestrichen"), "angestrich" );
	deepEqual( Stem("angestrichene"), "angestrich" );
	deepEqual( Stem("angetan"), "angetan" );
	deepEqual( Stem("angetane"), "angetan" );
	deepEqual( Stem("angetastet"), "angetastet" );
	deepEqual( Stem("angetrieben"), "angetrieb" );
	deepEqual( Stem("angetroffen"), "angetroff" );
	deepEqual( Stem("angewachsen"), "angewachs" );
	deepEqual( Stem("angewandt"), "angewandt" );
	deepEqual( Stem("angewandte"), "angewandt" );
	deepEqual( Stem("angewendet"), "angewendet" );
	deepEqual( Stem("angewiesen"), "angewies" );
	deepEqual( Stem("angewöhnt"), "angewohnt" );
	deepEqual( Stem("angezeigt"), "angezeigt" );
	deepEqual( Stem("angezogen"), "angezog" );
	deepEqual( Stem("angezogene"), "angezog" );
	deepEqual( Stem("angezündet"), "angezundet" );
	deepEqual( Stem("angezweckt"), "angezweckt" );
	deepEqual( Stem("angfangt"), "angfangt" );
	deepEqual( Stem("anghört"), "anghort" );
	deepEqual( Stem("angibt"), "angibt" );
	deepEqual( Stem("anging"), "anging" );
	deepEqual( Stem("angreifen"), "angreif" );
	deepEqual( Stem("angreifenden"), "angreif" );
	deepEqual( Stem("angreifern"), "angreif" );
	deepEqual( Stem("angrenzenden"), "angrenz" );
	deepEqual( Stem("angriff"), "angriff" );
	deepEqual( Stem("angriffe"), "angriff" );
	deepEqual( Stem("angschaut"), "angschaut" );
	deepEqual( Stem("angst"), "angst" );
	deepEqual( Stem("ängste"), "angst" );
	deepEqual( Stem("angstfrühstück"), "angstfruhstuck" );
	deepEqual( Stem("ängstigte"), "angstigt" );
	deepEqual( Stem("ängstlich"), "angstlich" );
	deepEqual( Stem("angstvoll"), "angstvoll" );
	deepEqual( Stem("anguckte"), "anguckt" );
	deepEqual( Stem("anguckten"), "anguckt" );
	deepEqual( Stem("angues"), "angu" );
	deepEqual( Stem("angustia"), "angustia" );
	deepEqual( Stem("anhabe"), "anhab" );
	deepEqual( Stem("anhaben"), "anhab" );
	deepEqual( Stem("anhaftende"), "anhaft" );
	deepEqual( Stem("anhaltend"), "anhalt" );
	deepEqual( Stem("anhaltende"), "anhalt" );
	deepEqual( Stem("anhaltenden"), "anhalt" );
	deepEqual( Stem("anhaltender"), "anhalt" );
	deepEqual( Stem("anhaltst"), "anhalt" );
	deepEqual( Stem("anhang"), "anhang" );
	deepEqual( Stem("anhangen"), "anhang" );
	deepEqual( Stem("anhängen"), "anhang" );
	deepEqual( Stem("anhänger"), "anhang" );
	deepEqual( Stem("anhängerinnen"), "anhangerinn" );
	deepEqual( Stem("anhänglich"), "anhang" );
	deepEqual( Stem("anhänglichkeit"), "anhang" );
	deepEqual( Stem("anhängsel"), "anhangsel" );
	deepEqual( Stem("anhängt"), "anhangt" );
	deepEqual( Stem("anhat"), "anhat" );
	deepEqual( Stem("anhäuft"), "anhauft" );
	deepEqual( Stem("anhäuften"), "anhauft" );
	deepEqual( Stem("anhebt"), "anhebt" );
	deepEqual( Stem("anheilte"), "anheilt" );
	deepEqual( Stem("anheim"), "anheim" );
	deepEqual( Stem("anheimfallen"), "anheimfall" );
	deepEqual( Stem("anheimfällt"), "anheimfallt" );
	deepEqual( Stem("anheimfiel"), "anheimfiel" );
	deepEqual( Stem("anheimgegeben"), "anheimgegeb" );
	deepEqual( Stem("anher"), "anh" );
	deepEqual( Stem("anhieb"), "anhieb" );
	deepEqual( Stem("anhielt"), "anhielt" );
	deepEqual( Stem("anhing"), "anhing" );
	deepEqual( Stem("anhinge"), "anhing" );
	deepEqual( Stem("anhingen"), "anhing" );
	deepEqual( Stem("anhöhe"), "anhoh" );
	deepEqual( Stem("anhören"), "anhor" );
	deepEqual( Stem("anhört"), "anhort" );
	deepEqual( Stem("anhörte"), "anhort" );
	deepEqual( Stem("anhörten"), "anhort" );
	deepEqual( Stem("anima"), "anima" );
	deepEqual( Stem("animadvertentia"), "animadvertentia" );
	deepEqual( Stem("animalia"), "animalia" );
	deepEqual( Stem("animalium"), "animalium" );
	deepEqual( Stem("animi"), "animi" );
	deepEqual( Stem("anjene"), "anj" );
	deepEqual( Stem("anjetzt"), "anjetzt" );
	deepEqual( Stem("ankam"), "ankam" );
	deepEqual( Stem("ankäme"), "ankam" );
	deepEqual( Stem("ankamen"), "ankam" );
	deepEqual( Stem("ankara"), "ankara" );
	deepEqual( Stem("ankäufe"), "ankauf" );
	deepEqual( Stem("anker"), "ank" );
	deepEqual( Stem("anklage"), "anklag" );
	deepEqual( Stem("anklagen"), "anklag" );
	deepEqual( Stem("anklagend"), "anklag" );
	deepEqual( Stem("anklagepunkte"), "anklagepunkt" );
	deepEqual( Stem("anklageschrift"), "anklageschrift" );
	deepEqual( Stem("anklagt"), "anklagt" );
	deepEqual( Stem("anklagte"), "anklagt" );
	deepEqual( Stem("anklagten"), "anklagt" );
	deepEqual( Stem("ankleben"), "ankleb" );
	deepEqual( Stem("anklebenden"), "ankleb" );
	deepEqual( Stem("anklebte"), "anklebt" );
	deepEqual( Stem("anklopfen"), "anklopf" );
	deepEqual( Stem("anknabbern"), "anknabb" );
	deepEqual( Stem("ankomme"), "ankomm" );
	deepEqual( Stem("ankommen"), "ankomm" );
	deepEqual( Stem("ankommender"), "ankomm" );
	deepEqual( Stem("ankömmlingen"), "ankommling" );
	deepEqual( Stem("ankommt"), "ankommt" );
	deepEqual( Stem("ankündigen"), "ankund" );
	deepEqual( Stem("ankündigte"), "ankundigt" );
	deepEqual( Stem("ankündigung"), "ankund" );
	deepEqual( Stem("ankunft"), "ankunft" );
	deepEqual( Stem("ankunfthalle"), "ankunfthall" );
	deepEqual( Stem("anlächelte"), "anlachelt" );
	deepEqual( Stem("anlachen"), "anlach" );
	deepEqual( Stem("anlachte"), "anlacht" );
	deepEqual( Stem("anlage"), "anlag" );
	deepEqual( Stem("anlagen"), "anlag" );
	deepEqual( Stem("anlangt"), "anlangt" );
	deepEqual( Stem("anlangte"), "anlangt" );
	deepEqual( Stem("anlass"), "anlass" );
	deepEqual( Stem("anlaß"), "anlass" );
	deepEqual( Stem("anlässe"), "anlass" );
	deepEqual( Stem("anlaufstelle"), "anlaufstell" );
	deepEqual( Stem("anläuft"), "anlauft" );
	deepEqual( Stem("anlegen"), "anleg" );
	deepEqual( Stem("anlegte"), "anlegt" );
	deepEqual( Stem("anlegten"), "anlegt" );
	deepEqual( Stem("anlegung"), "anleg" );
	deepEqual( Stem("anlehnung"), "anlehn" );
	deepEqual( Stem("anleitung"), "anleit" );
	deepEqual( Stem("anleitungen"), "anleit" );
	deepEqual( Stem("anliegen"), "anlieg" );
	deepEqual( Stem("anliegendes"), "anlieg" );
	deepEqual( Stem("anlockte"), "anlockt" );
	deepEqual( Stem("anlockungen"), "anlock" );
	deepEqual( Stem("anlügt"), "anlugt" );
	deepEqual( Stem("anm"), "anm" );
	deepEqual( Stem("anmassen"), "anmass" );
	deepEqual( Stem("anmaßen"), "anmass" );
	deepEqual( Stem("anmasst"), "anmasst" );
	deepEqual( Stem("anmassung"), "anmass" );
	deepEqual( Stem("anmassungen"), "anmass" );
	deepEqual( Stem("anmelden"), "anmeld" );
	deepEqual( Stem("anmerkung"), "anmerk" );
	deepEqual( Stem("anmerkungen"), "anmerk" );
	deepEqual( Stem("anmut"), "anmut" );
	deepEqual( Stem("anmutig"), "anmut" );
	deepEqual( Stem("anmutige"), "anmut" );
	deepEqual( Stem("anmutigen"), "anmut" );
	deepEqual( Stem("anmutiger"), "anmut" );
	deepEqual( Stem("anmutiges"), "anmut" );
	deepEqual( Stem("anmutigste"), "anmut" );
	deepEqual( Stem("anmutungen"), "anmut" );
	deepEqual( Stem("anna"), "anna" );
	deepEqual( Stem("annäherung"), "annaher" );
	deepEqual( Stem("annäherungsweise"), "annaherungsweis" );
	deepEqual( Stem("annahm"), "annahm" );
	deepEqual( Stem("annahme"), "annahm" );
	deepEqual( Stem("annähme"), "annahm" );
	deepEqual( Stem("annahmen"), "annahm" );
	deepEqual( Stem("anne"), "ann" );
	deepEqual( Stem("annehmbaren"), "annehmbar" );
	deepEqual( Stem("annehme"), "annehm" );
	deepEqual( Stem("annehmen"), "annehm" );
	deepEqual( Stem("annehmlich"), "annehm" );
	deepEqual( Stem("annehmlichkeit"), "annehm" );
	deepEqual( Stem("annehmung"), "annehm" );
	deepEqual( Stem("annelieschen"), "anneliesch" );
	deepEqual( Stem("anneliese"), "annelies" );
	deepEqual( Stem("annelieses"), "annelies" );
	deepEqual( Stem("annimmst"), "annimm" );
	deepEqual( Stem("annimmt"), "annimmt" );
	deepEqual( Stem("annneliese"), "annnelies" );
	deepEqual( Stem("anno"), "anno" );
	deepEqual( Stem("anordnung"), "anordn" );
	deepEqual( Stem("anpacken"), "anpack" );
	deepEqual( Stem("anpackt"), "anpackt" );
	deepEqual( Stem("anprallen"), "anprall" );
	deepEqual( Stem("anpreisen"), "anpreis" );
	deepEqual( Stem("anpumpen"), "anpump" );
	deepEqual( Stem("anrätig"), "anrat" );
	deepEqual( Stem("anratungswürdiger"), "anratungswurd" );
	deepEqual( Stem("anreden"), "anred" );
	deepEqual( Stem("anredete"), "anredet" );
	deepEqual( Stem("anregen"), "anreg" );
	deepEqual( Stem("anregend"), "anreg" );
	deepEqual( Stem("anregt"), "anregt" );
	deepEqual( Stem("anregung"), "anreg" );
	deepEqual( Stem("anregungen"), "anreg" );
	deepEqual( Stem("anreihte"), "anreiht" );
	deepEqual( Stem("anreizen"), "anreiz" );
	deepEqual( Stem("anrichten"), "anricht" );
	deepEqual( Stem("anrichtete"), "anrichtet" );
	deepEqual( Stem("anrief"), "anrief" );
	deepEqual( Stem("anruf"), "anruf" );
	deepEqual( Stem("anrufbeantworter"), "anrufbeantwort" );
	deepEqual( Stem("anrufen"), "anruf" );
	deepEqual( Stem("anrufung"), "anruf" );
	deepEqual( Stem("anrühren"), "anruhr" );
	deepEqual( Stem("anrührte"), "anruhrt" );
	deepEqual( Stem("ans"), "ans" );
	deepEqual( Stem("ansagen"), "ansag" );
	deepEqual( Stem("ansah"), "ansah" );
	deepEqual( Stem("ansähe"), "ansah" );
	deepEqual( Stem("ansahen"), "ansah" );
	deepEqual( Stem("ansammelten"), "ansammelt" );
	deepEqual( Stem("ansammlungen"), "ansamml" );
	deepEqual( Stem("ansatz"), "ansatz" );
	deepEqual( Stem("anschafft"), "anschafft" );
	deepEqual( Stem("anschauen"), "anschau" );
	deepEqual( Stem("anschauend"), "anschau" );
	deepEqual( Stem("anschaulich"), "anschaulich" );
	deepEqual( Stem("anschaun"), "anschaun" );
	deepEqual( Stem("anschaut"), "anschaut" );
	deepEqual( Stem("anschauung"), "anschau" );
	deepEqual( Stem("anschauungen"), "anschau" );
	deepEqual( Stem("anschauungsfähigkeit"), "anschauungsfah" );
	deepEqual( Stem("anschauungsweise"), "anschauungsweis" );
	deepEqual( Stem("anschein"), "anschein" );
	deepEqual( Stem("anscheine"), "anschein" );
	deepEqual( Stem("anscheinend"), "anschein" );
	deepEqual( Stem("anscheinender"), "anschein" );
	deepEqual( Stem("anschlag"), "anschlag" );
	deepEqual( Stem("anschlagen"), "anschlag" );
	deepEqual( Stem("anschlägt"), "anschlagt" );
	deepEqual( Stem("anschliessen"), "anschliess" );
	deepEqual( Stem("anschließen"), "anschliess" );
	deepEqual( Stem("anschliessend"), "anschliess" );
	deepEqual( Stem("anschliesst"), "anschliesst" );
	deepEqual( Stem("anschließt"), "anschliesst" );
	deepEqual( Stem("anschloss"), "anschloss" );
	deepEqual( Stem("anschloß"), "anschloss" );
	deepEqual( Stem("anschluss"), "anschluss" );
	deepEqual( Stem("anschluß"), "anschluss" );
	deepEqual( Stem("anschneiden"), "anschneid" );
	deepEqual( Stem("ansehe"), "anseh" );
	deepEqual( Stem("ansehen"), "anseh" );
	deepEqual( Stem("ansehn"), "ansehn" );
	deepEqual( Stem("ansehnliche"), "ansehn" );
	deepEqual( Stem("ansehnlicher"), "ansehn" );
	deepEqual( Stem("ansehnliches"), "ansehn" );
	deepEqual( Stem("ansehung"), "anseh" );
	deepEqual( Stem("ansicht"), "ansicht" );
	deepEqual( Stem("ansichten"), "ansicht" );
	deepEqual( Stem("ansieht"), "ansieht" );
	deepEqual( Stem("ansitz"), "ansitz" );
	deepEqual( Stem("ansitzen"), "ansitz" );
	deepEqual( Stem("ansonst"), "anson" );
	deepEqual( Stem("ansonsten"), "anson" );
	deepEqual( Stem("anspannen"), "anspann" );
	deepEqual( Stem("anspielte"), "anspielt" );
	deepEqual( Stem("anspielung"), "anspiel" );
	deepEqual( Stem("anspielungen"), "anspiel" );
	deepEqual( Stem("anspornung"), "ansporn" );
	deepEqual( Stem("ansprache"), "ansprach" );
	deepEqual( Stem("ansprechen"), "ansprech" );
	deepEqual( Stem("ansprechend"), "ansprech" );
	deepEqual( Stem("ansprechende"), "ansprech" );
	deepEqual( Stem("anspricht"), "anspricht" );
	deepEqual( Stem("anspringt"), "anspringt" );
	deepEqual( Stem("anspruch"), "anspruch" );
	deepEqual( Stem("ansprüche"), "anspruch" );
	deepEqual( Stem("anspruchlosen"), "anspruchlos" );
	deepEqual( Stem("anspruchlosesten"), "anspruchlos" );
	deepEqual( Stem("anspruchsvollen"), "anspruchsvoll" );
	deepEqual( Stem("anstach"), "anstach" );
	deepEqual( Stem("anstalt"), "anstalt" );
	deepEqual( Stem("anstalten"), "anstalt" );
	deepEqual( Stem("anstand"), "anstand" );
	deepEqual( Stem("anständig"), "anstand" );
	deepEqual( Stem("anständige"), "anstand" );
	deepEqual( Stem("anständigen"), "anstand" );
	deepEqual( Stem("anständiger"), "anstand" );
	deepEqual( Stem("anständigere"), "anstand" );
	deepEqual( Stem("anständiges"), "anstand" );
	deepEqual( Stem("anstarren"), "anstarr" );
	deepEqual( Stem("anstatt"), "anstatt" );
	deepEqual( Stem("ansteckend"), "ansteck" );
	deepEqual( Stem("anstehe"), "ansteh" );
	deepEqual( Stem("ansteht"), "ansteht" );
	deepEqual( Stem("ansteigende"), "ansteig" );
	deepEqual( Stem("ansteigenden"), "ansteig" );
	deepEqual( Stem("anstelle"), "anstell" );
	deepEqual( Stem("anstellen"), "anstell" );
	deepEqual( Stem("anstellig"), "anstell" );
	deepEqual( Stem("anstellte"), "anstellt" );
	deepEqual( Stem("anstiess"), "anstiess" );
	deepEqual( Stem("anstoss"), "anstoss" );
	deepEqual( Stem("anstoß"), "anstoss" );
	deepEqual( Stem("anstösse"), "anstoss" );
	deepEqual( Stem("anstöße"), "anstoss" );
	deepEqual( Stem("anstossen"), "anstoss" );
	deepEqual( Stem("anstoßen"), "anstoss" );
	deepEqual( Stem("anstosses"), "anstoss" );
	deepEqual( Stem("anstoßes"), "anstoss" );
	deepEqual( Stem("anstösst"), "anstosst" );
	deepEqual( Stem("anstößt"), "anstosst" );
	deepEqual( Stem("anstrengend"), "anstreng" );
	deepEqual( Stem("anstrengende"), "anstreng" );
	deepEqual( Stem("anstrengenden"), "anstreng" );
	deepEqual( Stem("anstrengung"), "anstreng" );
	deepEqual( Stem("anstrengungen"), "anstreng" );
	deepEqual( Stem("anstrich"), "anstrich" );
	deepEqual( Stem("anstürmen"), "ansturm" );
	deepEqual( Stem("antat"), "antat" );
	deepEqual( Stem("anteil"), "anteil" );
	deepEqual( Stem("anteilhaber"), "anteilhab" );
	deepEqual( Stem("anteils"), "anteil" );
	deepEqual( Stem("antelephoniert"), "antelephoniert" );
	deepEqual( Stem("anthropomorphismen"), "anthropomorphism" );
	deepEqual( Stem("anthropomorphismus"), "anthropomorphismus" );
	deepEqual( Stem("anthropomorphistisch"), "anthropomorphist" );
	deepEqual( Stem("anthropomorphistische"), "anthropomorphist" );
	deepEqual( Stem("anti"), "anti" );
	deepEqual( Stem("antikeimenon"), "antikeimenon" );
	deepEqual( Stem("antin"), "antin" );
	deepEqual( Stem("antinomie"), "antinomi" );
	deepEqual( Stem("antipathie"), "antipathi" );
	deepEqual( Stem("antlitz"), "antlitz" );
	deepEqual( Stem("antorten"), "antort" );
	deepEqual( Stem("anträfe"), "antraf" );
	deepEqual( Stem("anträge"), "antrag" );
	deepEqual( Stem("antragsteller"), "antragstell" );
	deepEqual( Stem("antreffen"), "antreff" );
	deepEqual( Stem("antreiben"), "antreib" );
	deepEqual( Stem("antreibend"), "antreib" );
	deepEqual( Stem("antreibt"), "antreibt" );
	deepEqual( Stem("antretet"), "antretet" );
	deepEqual( Stem("antrieb"), "antrieb" );
	deepEqual( Stem("antriebe"), "antrieb" );
	deepEqual( Stem("antrieben"), "antrieb" );
	deepEqual( Stem("antriebs"), "antrieb" );
	deepEqual( Stem("antrifft"), "antrifft" );
	deepEqual( Stem("antritt"), "antritt" );
	deepEqual( Stem("antun"), "antun" );
	deepEqual( Stem("antut"), "antut" );
	deepEqual( Stem("antwort"), "antwort" );
	deepEqual( Stem("antworte"), "antwort" );
	deepEqual( Stem("antworten"), "antwort" );
	deepEqual( Stem("antwortet"), "antwortet" );
	deepEqual( Stem("antwortete"), "antwortet" );
	deepEqual( Stem("antworteten"), "antwortet" );
	deepEqual( Stem("anvertraue"), "anvertrau" );
	deepEqual( Stem("anvertrauet"), "anvertrauet" );
	deepEqual( Stem("anvertraute"), "anvertraut" );
	deepEqual( Stem("anvertrauten"), "anvertraut" );
	deepEqual( Stem("anverwandten"), "anverwandt" );
	deepEqual( Stem("anvisierte"), "anvisiert" );
	deepEqual( Stem("anwachs"), "anwach" );
	deepEqual( Stem("anwachsen"), "anwachs" );
	deepEqual( Stem("anwälten"), "anwalt" );
	deepEqual( Stem("anwandeln"), "anwandeln" );
	deepEqual( Stem("anwandlung"), "anwandl" );
	deepEqual( Stem("anwandten"), "anwandt" );
	deepEqual( Stem("anweisung"), "anweis" );
	deepEqual( Stem("anweisungen"), "anweis" );
	deepEqual( Stem("anwendbar"), "anwendbar" );
	deepEqual( Stem("anwendbare"), "anwendbar" );
	deepEqual( Stem("anwenden"), "anwend" );
	deepEqual( Stem("anwendet"), "anwendet" );
	deepEqual( Stem("anwendeten"), "anwendet" );
	deepEqual( Stem("anwendung"), "anwend" );
	deepEqual( Stem("anwerben"), "anwerb" );
	deepEqual( Stem("anwesen"), "anwes" );
	deepEqual( Stem("anwesend"), "anwes" );
	deepEqual( Stem("anwesenden"), "anwes" );
	deepEqual( Stem("anwesenheit"), "anwes" );
	deepEqual( Stem("anwünscht"), "anwunscht" );
	deepEqual( Stem("anzahl"), "anzahl" );
	deepEqual( Stem("anzeichen"), "anzeich" );
	deepEqual( Stem("anzeige"), "anzeig" );
	deepEqual( Stem("anzeigen"), "anzeig" );
	deepEqual( Stem("anzeigete"), "anzeiget" );
	deepEqual( Stem("anzengruber"), "anzengrub" );
	deepEqual( Stem("anziehen"), "anzieh" );
	deepEqual( Stem("anziehend"), "anzieh" );
	deepEqual( Stem("anziehende"), "anzieh" );
	deepEqual( Stem("anziehungskraft"), "anziehungskraft" );
	deepEqual( Stem("anzog"), "anzog" );
	deepEqual( Stem("anzogen"), "anzog" );
	deepEqual( Stem("anzublicken"), "anzublick" );
	deepEqual( Stem("anzudrehen"), "anzudreh" );
	deepEqual( Stem("anzuerkennen"), "anzuerkenn" );
	deepEqual( Stem("anzufahren"), "anzufahr" );
	deepEqual( Stem("anzufangen"), "anzufang" );
	deepEqual( Stem("anzufechten"), "anzufecht" );
	deepEqual( Stem("anzufertigen"), "anzufert" );
	deepEqual( Stem("anzuführen"), "anzufuhr" );
	deepEqual( Stem("anzug"), "anzug" );
	deepEqual( Stem("anzuge"), "anzug" );
	deepEqual( Stem("anzüge"), "anzug" );
	deepEqual( Stem("anzugeben"), "anzugeb" );
	deepEqual( Stem("anzugreifen"), "anzugreif" );
	deepEqual( Stem("anzuhalten"), "anzuhalt" );
	deepEqual( Stem("anzuhängen"), "anzuhang" );
	deepEqual( Stem("anzuheben"), "anzuheb" );
	deepEqual( Stem("anzukämpfen"), "anzukampf" );
	deepEqual( Stem("anzukaufen"), "anzukauf" );
	deepEqual( Stem("anzuklingen"), "anzukling" );
	deepEqual( Stem("anzuklopfen"), "anzuklopf" );
	deepEqual( Stem("anzukünden"), "anzukund" );
	deepEqual( Stem("anzulachen"), "anzulach" );
	deepEqual( Stem("anzulegen"), "anzuleg" );
	deepEqual( Stem("anzumassen"), "anzumass" );
	deepEqual( Stem("anzünden"), "anzund" );
	deepEqual( Stem("anzündet"), "anzundet" );
	deepEqual( Stem("anzündete"), "anzundet" );
	deepEqual( Stem("anzunehmen"), "anzunehm" );
	deepEqual( Stem("anzupeilen"), "anzupeil" );
	deepEqual( Stem("anzurufen"), "anzuruf" );
	deepEqual( Stem("anzuschauen"), "anzuschau" );
	deepEqual( Stem("anzuschauenden"), "anzuschau" );
	deepEqual( Stem("anzuschliessen"), "anzuschliess" );
	deepEqual( Stem("anzuschließen"), "anzuschliess" );
	deepEqual( Stem("anzusehen"), "anzuseh" );
	deepEqual( Stem("anzusetzen"), "anzusetz" );
	deepEqual( Stem("anzusiedeln"), "anzusiedeln" );
	deepEqual( Stem("anzuspannen"), "anzuspann" );
	deepEqual( Stem("anzusprechen"), "anzusprech" );
	deepEqual( Stem("anzustellen"), "anzustell" );
	deepEqual( Stem("anzutreffen"), "anzutreff" );
	deepEqual( Stem("anzutreiben"), "anzutreib" );
	deepEqual( Stem("anzuweisen"), "anzuweis" );
	deepEqual( Stem("anzuwenden"), "anzuw" );
	deepEqual( Stem("anzuzeigen"), "anzuzeig" );
	deepEqual( Stem("anzuzetteln"), "anzuzetteln" );
	deepEqual( Stem("anzuziehen"), "anzuzieh" );
	deepEqual( Stem("apfel"), "apfel" );
	deepEqual( Stem("äpfel"), "apfel" );
	deepEqual( Stem("apfelbaum"), "apfelbaum" );
	deepEqual( Stem("apfelbäumchens"), "apfelbaumch" );
	deepEqual( Stem("apfelbaumes"), "apfelbaum" );
	deepEqual( Stem("apfelblüten"), "apfelblut" );
	deepEqual( Stem("apfelblütenhauchen"), "apfelblutenhauch" );
	deepEqual( Stem("äpfelchen"), "apfelch" );
	deepEqual( Stem("äpfeln"), "apfeln" );
	deepEqual( Stem("apfelsaft"), "apfelsaft" );
	deepEqual( Stem("aphras"), "aphras" );
	deepEqual( Stem("apodiktisch"), "apodikt" );
	deepEqual( Stem("apodiktischen"), "apodikt" );
	deepEqual( Stem("apodiktischer"), "apodikt" );
	deepEqual( Stem("apodiktisches"), "apodikt" );
	deepEqual( Stem("apokrisewv"), "apokrisewv" );
	deepEqual( Stem("apollyon"), "apollyon" );
	deepEqual( Stem("apologie"), "apologi" );
	deepEqual( Stem("apostel"), "apostel" );
	deepEqual( Stem("apostolische"), "apostol" );
	deepEqual( Stem("apparat"), "apparat" );
	deepEqual( Stem("apparentia"), "apparentia" );
	deepEqual( Stem("apparet"), "apparet" );
	deepEqual( Stem("appartement"), "appartement" );
	deepEqual( Stem("appell"), "appell" );
	deepEqual( Stem("appetimus"), "appetimus" );
	deepEqual( Stem("appetit"), "appetit" );
	deepEqual( Stem("applaus"), "applaus" );
	deepEqual( Stem("applicat"), "applicat" );
	deepEqual( Stem("approbation"), "approbation" );
	deepEqual( Stem("aprikosen"), "aprikos" );
	deepEqual( Stem("april"), "april" );
	deepEqual( Stem("aquarien"), "aquari" );
	deepEqual( Stem("ara"), "ara" );
	deepEqual( Stem("arabien"), "arabi" );
	deepEqual( Stem("arabiens"), "arabi" );
	deepEqual( Stem("arabische"), "arab" );
	deepEqual( Stem("arbeit"), "arbeit" );
	deepEqual( Stem("arbeite"), "arbeit" );
	deepEqual( Stem("arbeiten"), "arbeit" );
	deepEqual( Stem("arbeitenden"), "arbeit" );
	deepEqual( Stem("arbeiter"), "arbeit" );
	deepEqual( Stem("arbeiterkittel"), "arbeiterkittel" );
	deepEqual( Stem("arbeitern"), "arbeit" );
	deepEqual( Stem("arbeitet"), "arbeitet" );
	deepEqual( Stem("arbeitete"), "arbeitet" );
	deepEqual( Stem("arbeiteten"), "arbeitet" );
	deepEqual( Stem("arbeitsam"), "arbeitsam" );
	deepEqual( Stem("arbeitsamen"), "arbeitsam" );
	deepEqual( Stem("arbeitsaufnahme"), "arbeitsaufnahm" );
	deepEqual( Stem("arbeitsbeschaffung"), "arbeitsbeschaff" );
	deepEqual( Stem("arbeitserfolge"), "arbeitserfolg" );
	deepEqual( Stem("arbeitserlaubnis"), "arbeitserlaubnis" );
	deepEqual( Stem("arbeitsfähigkeit"), "arbeitsfah" );
	deepEqual( Stem("arbeitsgemeinschaft"), "arbeitsgemeinschaft" );
	deepEqual( Stem("arbeitsgemeinschaften"), "arbeitsgemeinschaft" );
	deepEqual( Stem("arbeitsgeminschaft"), "arbeitsgeminschaft" );
	deepEqual( Stem("arbeitskraft"), "arbeitskraft" );
	deepEqual( Stem("arbeitslohn"), "arbeitslohn" );
	deepEqual( Stem("arbeitslosigkeit"), "arbeitslos" );
	deepEqual( Stem("arbeitsplatzes"), "arbeitsplatz" );
	deepEqual( Stem("arbeitsschurz"), "arbeitsschurz" );
	deepEqual( Stem("arbeitsstelle"), "arbeitsstell" );
	deepEqual( Stem("arbeitsstrenge"), "arbeitsstreng" );
	deepEqual( Stem("arbeitsstube"), "arbeitsstub" );
	deepEqual( Stem("arbeitsteilung"), "arbeitsteil" );
	deepEqual( Stem("arbeitstreue"), "arbeitstreu" );
	deepEqual( Stem("arbeitsverkehr"), "arbeitsverkehr" );
	deepEqual( Stem("arbeitsvermittlung"), "arbeitsvermittl" );
	deepEqual( Stem("arbeitsvertrag"), "arbeitsvertrag" );
	deepEqual( Stem("arbeitsvolles"), "arbeitsvoll" );
	deepEqual( Stem("arbeitszimmer"), "arbeitszimm" );
	deepEqual( Stem("arbeitszimmers"), "arbeitszimm" );
	deepEqual( Stem("arbet"), "arbet" );
	deepEqual( Stem("archetypa"), "archetypa" );
	deepEqual( Stem("architekt"), "architekt" );
	deepEqual( Stem("archiv"), "archiv" );
	deepEqual( Stem("arg"), "arg" );
	deepEqual( Stem("arge"), "arg" );
	deepEqual( Stem("argen"), "arg" );
	deepEqual( Stem("ärger"), "arg" );
	deepEqual( Stem("ärgere"), "arg" );
	deepEqual( Stem("ärgeren"), "arg" );
	deepEqual( Stem("ärgerlich"), "arg" );
	deepEqual( Stem("ärgerlichen"), "arg" );
	deepEqual( Stem("ärgern"), "arg" );
	deepEqual( Stem("ärgernis"), "argernis" );
	deepEqual( Stem("ärgernisse"), "argernis" );
	deepEqual( Stem("ärgert"), "argert" );
	deepEqual( Stem("ärgerte"), "argert" );
	deepEqual( Stem("ärgerten"), "argert" );
	deepEqual( Stem("arges"), "arg" );
	deepEqual( Stem("arglos"), "arglos" );
	deepEqual( Stem("arglosen"), "arglos" );
	deepEqual( Stem("argloser"), "arglos" );
	deepEqual( Stem("argloses"), "arglos" );
	deepEqual( Stem("ärgste"), "argst" );
	deepEqual( Stem("ärgsten"), "argst" );
	deepEqual( Stem("arguet"), "arguet" );
	deepEqual( Stem("argument"), "argument" );
	deepEqual( Stem("argumentation"), "argumentation" );
	deepEqual( Stem("argumente"), "argument" );
	deepEqual( Stem("argumentiert"), "argumentiert" );
	deepEqual( Stem("argwohn"), "argwohn" );
	deepEqual( Stem("aristokraten"), "aristokrat" );
	deepEqual( Stem("aristokratie"), "aristokrati" );
	deepEqual( Stem("aristokratischer"), "aristokrat" );
	deepEqual( Stem("aristoteles"), "aristotel" );
	deepEqual( Stem("aristotelischen"), "aristotel" );
	deepEqual( Stem("arm"), "arm" );
	deepEqual( Stem("armbändern"), "armband" );
	deepEqual( Stem("armbrust"), "armbrust" );
	deepEqual( Stem("ärmchen"), "armch" );
	deepEqual( Stem("arme"), "arm" );
	deepEqual( Stem("armee"), "arme" );
	deepEqual( Stem("armeeabschaffungsinitiative"), "armeeabschaffungsinitiativ" );
	deepEqual( Stem("armen"), "arm" );
	deepEqual( Stem("armenisch"), "armen" );
	deepEqual( Stem("armenpfleger"), "armenpfleg" );
	deepEqual( Stem("armenti"), "armenti" );
	deepEqual( Stem("armer"), "arm" );
	deepEqual( Stem("ärmere"), "arm" );
	deepEqual( Stem("armes"), "arm" );
	deepEqual( Stem("armhöhe"), "armhoh" );
	deepEqual( Stem("armin"), "armin" );
	deepEqual( Stem("armkraft"), "armkraft" );
	deepEqual( Stem("ärmlich"), "armlich" );
	deepEqual( Stem("ärmlichen"), "armlich" );
	deepEqual( Stem("ärmlicher"), "armlich" );
	deepEqual( Stem("arms"), "arm" );
	deepEqual( Stem("armselige"), "armsel" );
	deepEqual( Stem("armseligste"), "armsel" );
	deepEqual( Stem("ärmste"), "armst" );
	deepEqual( Stem("ärmsten"), "armst" );
	deepEqual( Stem("armut"), "armut" );
	deepEqual( Stem("army"), "army" );
	deepEqual( Stem("arphachsad"), "arphachsad" );
	deepEqual( Stem("arrnbrust"), "arrnbrust" );
	deepEqual( Stem("arrogantia"), "arrogantia" );
	deepEqual( Stem("arroganz"), "arroganz" );
	deepEqual( Stem("art"), "art" );
	deepEqual( Stem("arten"), "art" );
	deepEqual( Stem("artes"), "art" );
	deepEqual( Stem("arthur"), "arthur" );
	deepEqual( Stem("artig"), "artig" );
	deepEqual( Stem("artige"), "artig" );
	deepEqual( Stem("artigen"), "artig" );
	deepEqual( Stem("artiger"), "artig" );
	deepEqual( Stem("artiges"), "artig" );
	deepEqual( Stem("artigkeit"), "artig" );
	deepEqual( Stem("artikel"), "artikel" );
	deepEqual( Stem("artikeln"), "artikeln" );
	deepEqual( Stem("artikulierten"), "artikuliert" );
	deepEqual( Stem("artilleriegeneral"), "artilleriegeneral" );
	deepEqual( Stem("artilleriewesen"), "artilleriewes" );
	deepEqual( Stem("artlich"), "artlich" );
	deepEqual( Stem("arts"), "art" );
	deepEqual( Stem("arznei"), "arznei" );
	deepEqual( Stem("arzneimittel"), "arzneimittel" );
	deepEqual( Stem("arzneimittelvertreter"), "arzneimittelvertret" );
	deepEqual( Stem("ärzte"), "arzt" );
	deepEqual( Stem("ärztliche"), "arztlich" );
	deepEqual( Stem("ärztlicher"), "arztlich" );
	deepEqual( Stem("ascendenten"), "ascendent" );
	deepEqual( Stem("asche"), "asch" );
	deepEqual( Stem("aschen"), "asch" );
	deepEqual( Stem("aschenbecher"), "aschenbech" );
	deepEqual( Stem("aschenbechern"), "aschenbech" );
	deepEqual( Stem("ascher"), "asch" );
	deepEqual( Stem("aschgraue"), "aschgrau" );
	deepEqual( Stem("aschur"), "aschur" );
	deepEqual( Stem("aschurs"), "aschur" );
	deepEqual( Stem("aseka"), "aseka" );
	deepEqual( Stem("äsen"), "asen" );
	deepEqual( Stem("äsend"), "asend" );
	deepEqual( Stem("äser"), "aser" );
	deepEqual( Stem("asiatische"), "asiat" );
	deepEqual( Stem("asien"), "asi" );
	deepEqual( Stem("aspekt"), "aspekt" );
	deepEqual( Stem("aspekte"), "aspekt" );
	deepEqual( Stem("aspides"), "aspid" );
	deepEqual( Stem("aspik"), "aspik" );
	deepEqual( Stem("ass"), "ass" );
	deepEqual( Stem("aß"), "ass" );
	deepEqual( Stem("assen"), "ass" );
	deepEqual( Stem("aßen"), "ass" );
	deepEqual( Stem("ässen"), "ass" );
	deepEqual( Stem("äßen"), "ass" );
	deepEqual( Stem("assertorisch"), "assertor" );
	deepEqual( Stem("assir"), "assir" );
	deepEqual( Stem("assistieren"), "assisti" );
	deepEqual( Stem("associated"), "associated" );
	deepEqual( Stem("associe"), "associ" );
	deepEqual( Stem("assoziationen"), "assoziation" );
	deepEqual( Stem("assoziativer"), "assoziativ" );
	deepEqual( Stem("assoziierung"), "assoziier" );
	deepEqual( Stem("assyrer"), "assyr" );
	deepEqual( Stem("ast"), "ast" );
	deepEqual( Stem("aste"), "ast" );
	deepEqual( Stem("äste"), "ast" );
	deepEqual( Stem("asten"), "ast" );
	deepEqual( Stem("ästen"), "ast" );
	deepEqual( Stem("aster"), "ast" );
	deepEqual( Stem("astern"), "ast" );
	deepEqual( Stem("ästhetik"), "asthet" );
	deepEqual( Stem("ästhetisch"), "asthet" );
	deepEqual( Stem("ästhetische"), "asthet" );
	deepEqual( Stem("ästhetischen"), "asthet" );
	deepEqual( Stem("ästhetisches"), "asthet" );
	deepEqual( Stem("aststümpchen"), "aststumpch" );
	deepEqual( Stem("asung"), "asung" );
	deepEqual( Stem("atak"), "atak" );
	deepEqual( Stem("atelier"), "ateli" );
	deepEqual( Stem("ateliers"), "ateli" );
	deepEqual( Stem("atem"), "atem" );
	deepEqual( Stem("atemlos"), "atemlos" );
	deepEqual( Stem("atemlose"), "atemlos" );
	deepEqual( Stem("atemlosen"), "atemlos" );
	deepEqual( Stem("atemnot"), "atemnot" );
	deepEqual( Stem("atemzug"), "atemzug" );
	deepEqual( Stem("atemzüge"), "atemzug" );
	deepEqual( Stem("atemzügen"), "atemzug" );
	deepEqual( Stem("atheist"), "atheist" );
	deepEqual( Stem("äther"), "ath" );
	deepEqual( Stem("ätherglast"), "atherglast" );
	deepEqual( Stem("ätherglocke"), "atherglock" );
	deepEqual( Stem("ätherisches"), "ather" );
	deepEqual( Stem("ätherlüfte"), "atherluft" );
	deepEqual( Stem("äthiopien"), "athiopi" );
	deepEqual( Stem("äthiopiens"), "athiopi" );
	deepEqual( Stem("äthiopier"), "athiopi" );
	deepEqual( Stem("atlantischen"), "atlant" );
	deepEqual( Stem("atmen"), "atm" );
	deepEqual( Stem("atmend"), "atmend" );
	deepEqual( Stem("atmens"), "atm" );
	deepEqual( Stem("atmet"), "atmet" );
	deepEqual( Stem("atmete"), "atmet" );
	deepEqual( Stem("atmeten"), "atmet" );
	deepEqual( Stem("atmosphäre"), "atmosphar" );
	deepEqual( Stem("atmungsbeschwerde"), "atmungsbeschwerd" );
	deepEqual( Stem("atome"), "atom" );
	deepEqual( Stem("ätsch"), "atsch" );
	deepEqual( Stem("attribute"), "attribut" );
	deepEqual( Stem("au"), "au" );
	deepEqual( Stem("auch"), "auch" );
	deepEqual( Stem("aue"), "aue" );
	deepEqual( Stem("auen"), "auen" );
	deepEqual( Stem("auerhahn"), "auerhahn" );
	deepEqual( Stem("auf"), "auf" );
	deepEqual( Stem("aufatmen"), "aufatm" );
	deepEqual( Stem("aufatmend"), "aufatm" );
	deepEqual( Stem("aufatmenden"), "aufatm" );
	deepEqual( Stem("aufatmete"), "aufatmet" );
	deepEqual( Stem("aufbau"), "aufbau" );
	deepEqual( Stem("aufbauen"), "aufbau" );
	deepEqual( Stem("aufbaute"), "aufbaut" );
	deepEqual( Stem("aufbauten"), "aufbaut" );
	deepEqual( Stem("aufbehalten"), "aufbehalt" );
	deepEqual( Stem("aufbewahren"), "aufbewahr" );
	deepEqual( Stem("aufbewahrerin"), "aufbewahrerin" );
	deepEqual( Stem("aufbewahrt"), "aufbewahrt" );
	deepEqual( Stem("aufbewahrte"), "aufbewahrt" );
	deepEqual( Stem("aufbewahrten"), "aufbewahrt" );
	deepEqual( Stem("aufbewahrung"), "aufbewahr" );
	deepEqual( Stem("aufbietung"), "aufbiet" );
	deepEqual( Stem("aufblicken"), "aufblick" );
	deepEqual( Stem("aufblickte"), "aufblickt" );
	deepEqual( Stem("aufblies"), "aufbli" );
	deepEqual( Stem("aufblitzen"), "aufblitz" );
	deepEqual( Stem("aufblitzte"), "aufblitzt" );
	deepEqual( Stem("aufblühende"), "aufbluh" );
	deepEqual( Stem("aufblühenden"), "aufbluh" );
	deepEqual( Stem("aufblühten"), "aufbluht" );
	deepEqual( Stem("aufbrechen"), "aufbrech" );
	deepEqual( Stem("aufbrennenden"), "aufbrenn" );
	deepEqual( Stem("aufbringen"), "aufbring" );
	deepEqual( Stem("aufbrochen"), "aufbroch" );
	deepEqual( Stem("aufbruch"), "aufbruch" );
	deepEqual( Stem("aufbürdete"), "aufburdet" );
	deepEqual( Stem("aufdeckte"), "aufdeckt" );
	deepEqual( Stem("aufdermauer"), "aufdermau" );
	deepEqual( Stem("aufdringen"), "aufdring" );
	deepEqual( Stem("aufdringlich"), "aufdring" );
	deepEqual( Stem("aufdringt"), "aufdringt" );
	deepEqual( Stem("aufeinander"), "aufeinand" );
	deepEqual( Stem("aufeinanderbiss"), "aufeinanderbiss" );
	deepEqual( Stem("aufeinanderfolge"), "aufeinanderfolg" );
	deepEqual( Stem("aufeinanderfolgen"), "aufeinanderfolg" );
	deepEqual( Stem("aufeinanderfolgend"), "aufeinanderfolg" );
	deepEqual( Stem("aufeinanderfolgende"), "aufeinanderfolg" );
	deepEqual( Stem("aufeinanderfolgenden"), "aufeinanderfolg" );
	deepEqual( Stem("aufeinanderfolgender"), "aufeinanderfolg" );
	deepEqual( Stem("aufeinanderfolgt"), "aufeinanderfolgt" );
	deepEqual( Stem("aufeinanderfolgten"), "aufeinanderfolgt" );
	deepEqual( Stem("aufeinanderschlügen"), "aufeinanderschlug" );
	deepEqual( Stem("aufenthalt"), "aufenthalt" );
	deepEqual( Stem("aufenthalten"), "aufenthalt" );
	deepEqual( Stem("aufenthaltes"), "aufenthalt" );
	deepEqual( Stem("auferlegen"), "auferleg" );
	deepEqual( Stem("auferlegt"), "auferlegt" );
	deepEqual( Stem("auferlegten"), "auferlegt" );
	deepEqual( Stem("auferstand"), "auferstand" );
	deepEqual( Stem("auferstanden"), "auferstand" );
	deepEqual( Stem("auferstehen"), "aufersteh" );
	deepEqual( Stem("aufersteht"), "aufersteht" );
	deepEqual( Stem("auferstehung"), "aufersteh" );
	deepEqual( Stem("auferstünde"), "auferstund" );
	deepEqual( Stem("auferwecken"), "auferweck" );
	deepEqual( Stem("auferweckt"), "auferweckt" );
	deepEqual( Stem("auferzogen"), "auferzog" );
	deepEqual( Stem("aufessen"), "aufess" );
	deepEqual( Stem("auffa"), "auffa" );
	deepEqual( Stem("auffallen"), "auffall" );
	deepEqual( Stem("auffallend"), "auffall" );
	deepEqual( Stem("auffallenden"), "auffall" );
	deepEqual( Stem("auffallender"), "auffall" );
	deepEqual( Stem("auffällig"), "auffall" );
	deepEqual( Stem("auffälligen"), "auffall" );
	deepEqual( Stem("auffälliges"), "auffall" );
	deepEqual( Stem("auffassen"), "auffass" );
	deepEqual( Stem("auffasst"), "auffasst" );
	deepEqual( Stem("auffaßt"), "auffasst" );
	deepEqual( Stem("auffassung"), "auffass" );
	deepEqual( Stem("auffassungsvermögen"), "auffassungsvermog" );
	deepEqual( Stem("auffi"), "auffi" );
	deepEqual( Stem("auffiel"), "auffiel" );
	deepEqual( Stem("auffinden"), "auffind" );
	deepEqual( Stem("auffindung"), "auffind" );
	deepEqual( Stem("aufflammt"), "aufflammt" );
	deepEqual( Stem("aufforderden"), "aufforderd" );
	deepEqual( Stem("auffordern"), "aufford" );
	deepEqual( Stem("aufforderte"), "auffordert" );
	deepEqual( Stem("aufforderung"), "aufforder" );
	deepEqual( Stem("auffrass"), "auffrass" );
	deepEqual( Stem("auffraß"), "auffrass" );
	deepEqual( Stem("auffressen"), "auffress" );
	deepEqual( Stem("auffuhren"), "auffuhr" );
	deepEqual( Stem("aufführen"), "auffuhr" );
	deepEqual( Stem("aufführung"), "auffuhr" );
	deepEqual( Stem("aufg"), "aufg" );
	deepEqual( Stem("aufgab"), "aufgab" );
	deepEqual( Stem("aufgabe"), "aufgab" );
	deepEqual( Stem("aufgaben"), "aufgab" );
	deepEqual( Stem("aufgabenfeld"), "aufgabenfeld" );
	deepEqual( Stem("aufgang"), "aufgang" );
	deepEqual( Stem("aufgange"), "aufgang" );
	deepEqual( Stem("aufgangs"), "aufgang" );
	deepEqual( Stem("aufgearbeitet"), "aufgearbeitet" );
	deepEqual( Stem("aufgebaut"), "aufgebaut" );
	deepEqual( Stem("aufgebe"), "aufgeb" );
	deepEqual( Stem("aufgeben"), "aufgeb" );
	deepEqual( Stem("aufgebläht"), "aufgeblaht" );
	deepEqual( Stem("aufgeblasen"), "aufgeblas" );
	deepEqual( Stem("aufgebracht"), "aufgebracht" );
	deepEqual( Stem("aufgebrachte"), "aufgebracht" );
	deepEqual( Stem("aufgebrachter"), "aufgebracht" );
	deepEqual( Stem("aufgebrochen"), "aufgebroch" );
	deepEqual( Stem("aufgedeckt"), "aufgedeckt" );
	deepEqual( Stem("aufgedrungenes"), "aufgedr" );
	deepEqual( Stem("aufgefahren"), "aufgefahr" );
	deepEqual( Stem("aufgefallen"), "aufgefall" );
	deepEqual( Stem("aufgefangen"), "aufgefang" );
	deepEqual( Stem("aufgefasst"), "aufgefasst" );
	deepEqual( Stem("aufgefaßt"), "aufgefasst" );
	deepEqual( Stem("aufgefressen"), "aufgefress" );
	deepEqual( Stem("aufgeführt"), "aufgefuhrt" );
	deepEqual( Stem("aufgefunden"), "aufgefund" );
	deepEqual( Stem("aufgegangen"), "aufgegang" );
	deepEqual( Stem("aufgegeben"), "aufgegeb" );
	deepEqual( Stem("aufgegebenen"), "aufgegeb" );
	deepEqual( Stem("aufgegessen"), "aufgegess" );
	deepEqual( Stem("aufgehalten"), "aufgehalt" );
	deepEqual( Stem("aufgehängt"), "aufgehangt" );
	deepEqual( Stem("aufgehäuft"), "aufgehauft" );
	deepEqual( Stem("aufgehellt"), "aufgehellt" );
	deepEqual( Stem("aufgehen"), "aufgeh" );
	deepEqual( Stem("aufgehenden"), "aufgeh" );
	deepEqual( Stem("aufgehoben"), "aufgehob" );
	deepEqual( Stem("aufgehobene"), "aufgehob" );
	deepEqual( Stem("aufgehört"), "aufgehort" );
	deepEqual( Stem("aufgeht"), "aufgeht" );
	deepEqual( Stem("aufgeklärt"), "aufgeklart" );
	deepEqual( Stem("aufgeklärten"), "aufgeklart" );
	deepEqual( Stem("aufgekommen"), "aufgekomm" );
	deepEqual( Stem("aufgekommenen"), "aufgekomm" );
	deepEqual( Stem("aufgeladen"), "aufgelad" );
	deepEqual( Stem("aufgelegt"), "aufgelegt" );
	deepEqual( Stem("aufgelegte"), "aufgelegt" );
	deepEqual( Stem("aufgelesen"), "aufgeles" );
	deepEqual( Stem("aufgelöset"), "aufgeloset" );
	deepEqual( Stem("aufgelöst"), "aufgelost" );
	deepEqual( Stem("aufgemacht"), "aufgemacht" );
	deepEqual( Stem("aufgemerkt"), "aufgemerkt" );
	deepEqual( Stem("aufgemuntert"), "aufgemuntert" );
	deepEqual( Stem("aufgenommen"), "aufgenomm" );
	deepEqual( Stem("aufgepasst"), "aufgepasst" );
	deepEqual( Stem("aufgepflanzt"), "aufgepflanzt" );
	deepEqual( Stem("aufgepluschtem"), "aufgepluscht" );
	deepEqual( Stem("aufgeplusterten"), "aufgeplustert" );
	deepEqual( Stem("aufgeräumt"), "aufgeraumt" );
	deepEqual( Stem("aufgereckt"), "aufgereckt" );
	deepEqual( Stem("aufgeregt"), "aufgeregt" );
	deepEqual( Stem("aufgeregten"), "aufgeregt" );
	deepEqual( Stem("aufgeregter"), "aufgeregt" );
	deepEqual( Stem("aufgeregtes"), "aufgeregt" );
	deepEqual( Stem("aufgereihten"), "aufgereiht" );
	deepEqual( Stem("aufgerichtet"), "aufgerichtet" );
	deepEqual( Stem("aufgerieben"), "aufgerieb" );
	deepEqual( Stem("aufgerissen"), "aufgeriss" );
	deepEqual( Stem("aufgerissenen"), "aufgeriss" );
	deepEqual( Stem("aufgerüttelt"), "aufgeruttelt" );
	deepEqual( Stem("aufgesammelt"), "aufgesammelt" );
	deepEqual( Stem("aufgeschaltet"), "aufgeschaltet" );
	deepEqual( Stem("aufgeschichtet"), "aufgeschichtet" );
	deepEqual( Stem("aufgeschlagen"), "aufgeschlag" );
	deepEqual( Stem("aufgeschlossen"), "aufgeschloss" );
	deepEqual( Stem("aufgeschossener"), "aufgeschoss" );
	deepEqual( Stem("aufgeschreckt"), "aufgeschreckt" );
	deepEqual( Stem("aufgeschrieben"), "aufgeschrieb" );
	deepEqual( Stem("aufgeschürzt"), "aufgeschurzt" );
	deepEqual( Stem("aufgesehen"), "aufgeseh" );
	deepEqual( Stem("aufgesperrten"), "aufgesperrt" );
	deepEqual( Stem("aufgesprungen"), "aufgespr" );
	deepEqual( Stem("aufgestachelt"), "aufgestachelt" );
	deepEqual( Stem("aufgestanden"), "aufgestand" );
	deepEqual( Stem("aufgestapelt"), "aufgestapelt" );
	deepEqual( Stem("aufgestellt"), "aufgestellt" );
	deepEqual( Stem("aufgestellte"), "aufgestellt" );
	deepEqual( Stem("aufgestellten"), "aufgestellt" );
	deepEqual( Stem("aufgestiegen"), "aufgestieg" );
	deepEqual( Stem("aufgetan"), "aufgetan" );
	deepEqual( Stem("aufgetaucht"), "aufgetaucht" );
	deepEqual( Stem("aufgeteilt"), "aufgeteilt" );
	deepEqual( Stem("aufgetragen"), "aufgetrag" );
	deepEqual( Stem("aufgewachsen"), "aufgewachs" );
	deepEqual( Stem("aufgeweckt"), "aufgeweckt" );
	deepEqual( Stem("aufgeweckten"), "aufgeweckt" );
	deepEqual( Stem("aufgeworfene"), "aufgeworf" );
	deepEqual( Stem("aufgeworfenen"), "aufgeworf" );
	deepEqual( Stem("aufgezählt"), "aufgezahlt" );
	deepEqual( Stem("aufgezehrt"), "aufgezehrt" );
	deepEqual( Stem("aufgezeichnet"), "aufgezeichnet" );
	deepEqual( Stem("aufgezettelt"), "aufgezettelt" );
	deepEqual( Stem("aufging"), "aufging" );
	deepEqual( Stem("aufginge"), "aufging" );
	deepEqual( Stem("aufgreifen"), "aufgreif" );
	deepEqual( Stem("aufgriff"), "aufgriff" );
	deepEqual( Stem("aufgrund"), "aufgrund" );
	deepEqual( Stem("aufgschnauft"), "aufgschnauft" );
	deepEqual( Stem("aufgsprungen"), "aufgsprung" );
	deepEqual( Stem("aufhalsen"), "aufhals" );
	deepEqual( Stem("aufhält"), "aufhalt" );
	deepEqual( Stem("aufhalte"), "aufhalt" );
	deepEqual( Stem("aufhalten"), "aufhalt" );
	deepEqual( Stem("aufhängen"), "aufhang" );
	deepEqual( Stem("aufhäuften"), "aufhauft" );
	deepEqual( Stem("aufheben"), "aufheb" );
	deepEqual( Stem("aufhebt"), "aufhebt" );
	deepEqual( Stem("aufhebung"), "aufheb" );
	deepEqual( Stem("aufheiternde"), "aufheiternd" );
	deepEqual( Stem("aufhellen"), "aufhell" );
	deepEqual( Stem("aufheulen"), "aufheul" );
	deepEqual( Stem("aufheulend"), "aufheul" );
	deepEqual( Stem("aufhielt"), "aufhielt" );
	deepEqual( Stem("aufhob"), "aufhob" );
	deepEqual( Stem("aufhorchte"), "aufhorcht" );
	deepEqual( Stem("aufhören"), "aufhor" );
	deepEqual( Stem("aufhört"), "aufhort" );
	deepEqual( Stem("aufhörte"), "aufhort" );
	deepEqual( Stem("aufhörten"), "aufhort" );
	deepEqual( Stem("aufkam"), "aufkam" );
	deepEqual( Stem("aufkeimt"), "aufkeimt" );
	deepEqual( Stem("aufklappte"), "aufklappt" );
	deepEqual( Stem("aufklärte"), "aufklart" );
	deepEqual( Stem("aufklärung"), "aufklar" );
	deepEqual( Stem("aufkomme"), "aufkomm" );
	deepEqual( Stem("aufkommen"), "aufkomm" );
	deepEqual( Stem("aufkroch"), "aufkroch" );
	deepEqual( Stem("aufkrochen"), "aufkroch" );
	deepEqual( Stem("auflachen"), "auflach" );
	deepEqual( Stem("auflachten"), "auflacht" );
	deepEqual( Stem("auflage"), "auflag" );
	deepEqual( Stem("auflas"), "auflas" );
	deepEqual( Stem("aufläufen"), "auflauf" );
	deepEqual( Stem("auflegen"), "aufleg" );
	deepEqual( Stem("aufleuchtende"), "aufleucht" );
	deepEqual( Stem("aufleuchtenden"), "aufleucht" );
	deepEqual( Stem("auflösen"), "auflos" );
	deepEqual( Stem("auflösung"), "auflos" );
	deepEqual( Stem("aufmache"), "aufmach" );
	deepEqual( Stem("aufmachen"), "aufmach" );
	deepEqual( Stem("aufmachte"), "aufmacht" );
	deepEqual( Stem("aufmerken"), "aufmerk" );
	deepEqual( Stem("aufmerkend"), "aufmerk" );
	deepEqual( Stem("aufmerkende"), "aufmerk" );
	deepEqual( Stem("aufmerkens"), "aufmerk" );
	deepEqual( Stem("aufmerksam"), "aufmerksam" );
	deepEqual( Stem("aufmerksame"), "aufmerksam" );
	deepEqual( Stem("aufmerksamen"), "aufmerksam" );
	deepEqual( Stem("aufmerksamer"), "aufmerksam" );
	deepEqual( Stem("aufmerksamkeit"), "aufmerksam" );
	deepEqual( Stem("aufmerksamkeiten"), "aufmerksam" );
	deepEqual( Stem("aufmerkt"), "aufmerkt" );
	deepEqual( Stem("aufmerkte"), "aufmerkt" );
	deepEqual( Stem("aufmunterung"), "aufmunter" );
	deepEqual( Stem("aufnahm"), "aufnahm" );
	deepEqual( Stem("aufnahme"), "aufnahm" );
	deepEqual( Stem("aufnahmegefäss"), "aufnahmegefass" );
	deepEqual( Stem("aufnahmegefäß"), "aufnahmegefass" );
	deepEqual( Stem("aufnahmegefässe"), "aufnahmegefass" );
	deepEqual( Stem("aufnahmegefäße"), "aufnahmegefass" );
	deepEqual( Stem("aufnahmen"), "aufnahm" );
	deepEqual( Stem("aufnahmeprüfungen"), "aufnahmepruf" );
	deepEqual( Stem("aufnahmsfähig"), "aufnahmsfah" );
	deepEqual( Stem("aufnahmsfähigkeit"), "aufnahmsfah" );
	deepEqual( Stem("aufnahmsorgan"), "aufnahmsorgan" );
	deepEqual( Stem("aufnehme"), "aufnehm" );
	deepEqual( Stem("aufnehmen"), "aufnehm" );
	deepEqual( Stem("aufnehmende"), "aufnehm" );
	deepEqual( Stem("aufnehmenden"), "aufnehm" );
	deepEqual( Stem("aufnehmendes"), "aufnehm" );
	deepEqual( Stem("äufner"), "aufn" );
	deepEqual( Stem("äufnete"), "aufnet" );
	deepEqual( Stem("aufnimmt"), "aufnimmt" );
	deepEqual( Stem("aufopfernd"), "aufopfernd" );
	deepEqual( Stem("aufopferung"), "aufopfer" );
	deepEqual( Stem("aufpassen"), "aufpass" );
	deepEqual( Stem("aufpasser"), "aufpass" );
	deepEqual( Stem("aufpasst"), "aufpasst" );
	deepEqual( Stem("aufpassten"), "aufpasst" );
	deepEqual( Stem("aufpflanzte"), "aufpflanzt" );
	deepEqual( Stem("aufputz"), "aufputz" );
	deepEqual( Stem("aufragen"), "aufrag" );
	deepEqual( Stem("aufrappeln"), "aufrappeln" );
	deepEqual( Stem("aufräume"), "aufraum" );
	deepEqual( Stem("aufrechnen"), "aufrechn" );
	deepEqual( Stem("aufrecht"), "aufrecht" );
	deepEqual( Stem("aufrechten"), "aufrecht" );
	deepEqual( Stem("aufrechterhalten"), "aufrechterhalt" );
	deepEqual( Stem("aufregen"), "aufreg" );
	deepEqual( Stem("aufregende"), "aufreg" );
	deepEqual( Stem("aufregendsten"), "aufreg" );
	deepEqual( Stem("aufreger"), "aufreg" );
	deepEqual( Stem("aufregung"), "aufreg" );
	deepEqual( Stem("aufregungen"), "aufreg" );
	deepEqual( Stem("aufreiben"), "aufreib" );
	deepEqual( Stem("aufreissend"), "aufreiss" );
	deepEqual( Stem("aufreißend"), "aufreiss" );
	deepEqual( Stem("aufrichten"), "aufricht" );
	deepEqual( Stem("aufrichtete"), "aufrichtet" );
	deepEqual( Stem("aufrichteten"), "aufrichtet" );
	deepEqual( Stem("aufrichtig"), "aufricht" );
	deepEqual( Stem("aufrichtige"), "aufricht" );
	deepEqual( Stem("aufrichtigen"), "aufricht" );
	deepEqual( Stem("aufrichtiger"), "aufricht" );
	deepEqual( Stem("aufrichtigkeit"), "aufricht" );
	deepEqual( Stem("aufriss"), "aufriss" );
	deepEqual( Stem("aufriß"), "aufriss" );
	deepEqual( Stem("aufrissen"), "aufriss" );
	deepEqual( Stem("aufrollten"), "aufrollt" );
	deepEqual( Stem("aufrufe"), "aufruf" );
	deepEqual( Stem("aufruhr"), "aufruhr" );
	deepEqual( Stem("aufrühren"), "aufruhr" );
	deepEqual( Stem("aufrührend"), "aufruhr" );
	deepEqual( Stem("aufs"), "auf" );
	deepEqual( Stem("aufsagen"), "aufsag" );
	deepEqual( Stem("aufsah"), "aufsah" );
	deepEqual( Stem("aufsätze"), "aufsatz" );
	deepEqual( Stem("aufschauten"), "aufschaut" );
	deepEqual( Stem("aufschichtete"), "aufschichtet" );
	deepEqual( Stem("aufschieben"), "aufschieb" );
	deepEqual( Stem("aufschlag"), "aufschlag" );
	deepEqual( Stem("aufschlagen"), "aufschlag" );
	deepEqual( Stem("aufschlug"), "aufschlug" );
	deepEqual( Stem("aufschlugen"), "aufschlug" );
	deepEqual( Stem("aufschluss"), "aufschluss" );
	deepEqual( Stem("aufschluß"), "aufschluss" );
	deepEqual( Stem("aufschlüsse"), "aufschluss" );
	deepEqual( Stem("aufschrei"), "aufschrei" );
	deepEqual( Stem("aufschreiben"), "aufschreib" );
	deepEqual( Stem("aufschreiende"), "aufschreiend" );
	deepEqual( Stem("aufschriften"), "aufschrift" );
	deepEqual( Stem("aufschub"), "aufschub" );
	deepEqual( Stem("aufschwung"), "aufschwung" );
	deepEqual( Stem("aufsehen"), "aufseh" );
	deepEqual( Stem("aufseher"), "aufseh" );
	deepEqual( Stem("aufsetzen"), "aufsetz" );
	deepEqual( Stem("aufsetzte"), "aufsetzt" );
	deepEqual( Stem("aufseufzte"), "aufseufzt" );
	deepEqual( Stem("aufsicht"), "aufsicht" );
	deepEqual( Stem("aufsperrte"), "aufsperrt" );
	deepEqual( Stem("aufspielen"), "aufspiel" );
	deepEqual( Stem("aufspielt"), "aufspielt" );
	deepEqual( Stem("aufspiessen"), "aufspiess" );
	deepEqual( Stem("aufspießen"), "aufspiess" );
	deepEqual( Stem("aufsprang"), "aufsprang" );
	deepEqual( Stem("aufsprangen"), "aufsprang" );
	deepEqual( Stem("aufspringen"), "aufspring" );
	deepEqual( Stem("aufspringenden"), "aufspring" );
	deepEqual( Stem("aufsprossen"), "aufspross" );
	deepEqual( Stem("aufsprosst"), "aufsprosst" );
	deepEqual( Stem("aufsproßt"), "aufsprosst" );
	deepEqual( Stem("aufsprosste"), "aufsprosst" );
	deepEqual( Stem("aufsproßte"), "aufsprosst" );
	deepEqual( Stem("aufstand"), "aufstand" );
	deepEqual( Stem("aufstanden"), "aufstand" );
	deepEqual( Stem("aufstehen"), "aufsteh" );
	deepEqual( Stem("aufstehend"), "aufsteh" );
	deepEqual( Stem("aufstehn"), "aufstehn" );
	deepEqual( Stem("aufsteht"), "aufsteht" );
	deepEqual( Stem("aufsteigen"), "aufsteig" );
	deepEqual( Stem("aufsteigendem"), "aufsteig" );
	deepEqual( Stem("aufsteigenden"), "aufsteig" );
	deepEqual( Stem("aufsteigt"), "aufsteigt" );
	deepEqual( Stem("aufstellen"), "aufstell" );
	deepEqual( Stem("aufstellt"), "aufstellt" );
	deepEqual( Stem("aufstellte"), "aufstellt" );
	deepEqual( Stem("aufstellung"), "aufstell" );
	deepEqual( Stem("aufstieg"), "aufstieg" );
	deepEqual( Stem("aufstiegsangebote"), "aufstiegsangebot" );
	deepEqual( Stem("aufstiegschancen"), "aufstiegschanc" );
	deepEqual( Stem("aufstiess"), "aufstiess" );
	deepEqual( Stem("aufstieß"), "aufstiess" );
	deepEqual( Stem("aufstöhnend"), "aufstohn" );
	deepEqual( Stem("aufsuchen"), "aufsuch" );
	deepEqual( Stem("aufsucht"), "aufsucht" );
	deepEqual( Stem("aufsuchte"), "aufsucht" );
	deepEqual( Stem("auftat"), "auftat" );
	deepEqual( Stem("auftaucht"), "auftaucht" );
	deepEqual( Stem("auftauchten"), "auftaucht" );
	deepEqual( Stem("auftrag"), "auftrag" );
	deepEqual( Stem("auftrage"), "auftrag" );
	deepEqual( Stem("aufträge"), "auftrag" );
	deepEqual( Stem("auftrags"), "auftrag" );
	deepEqual( Stem("auftragt"), "auftragt" );
	deepEqual( Stem("auftreiben"), "auftreib" );
	deepEqual( Stem("auftreten"), "auftret" );
	deepEqual( Stem("auftrieb"), "auftrieb" );
	deepEqual( Stem("auftrieben"), "auftrieb" );
	deepEqual( Stem("auftritt"), "auftritt" );
	deepEqual( Stem("auftritten"), "auftritt" );
	deepEqual( Stem("auftrittslied"), "auftrittslied" );
	deepEqual( Stem("auftut"), "auftut" );
	deepEqual( Stem("aufwach"), "aufwach" );
	deepEqual( Stem("aufwachst"), "aufwach" );
	deepEqual( Stem("aufwachte"), "aufwacht" );
	deepEqual( Stem("aufwachten"), "aufwacht" );
	deepEqual( Stem("aufwallten"), "aufwallt" );
	deepEqual( Stem("aufwallung"), "aufwall" );
	deepEqual( Stem("aufwallungen"), "aufwall" );
	deepEqual( Stem("aufwand"), "aufwand" );
	deepEqual( Stem("aufwarten"), "aufwart" );
	deepEqual( Stem("aufwartenden"), "aufwart" );
	deepEqual( Stem("aufwärter"), "aufwart" );
	deepEqual( Stem("aufwärts"), "aufwart" );
	deepEqual( Stem("aufweist"), "aufweist" );
	deepEqual( Stem("aufwendige"), "aufwend" );
	deepEqual( Stem("aufwüchse"), "aufwuchs" );
	deepEqual( Stem("aufwuchsen"), "aufwuchs" );
	deepEqual( Stem("aufzählt"), "aufzahlt" );
	deepEqual( Stem("aufzählung"), "aufzahl" );
	deepEqual( Stem("aufzehren"), "aufzehr" );
	deepEqual( Stem("aufzeichnung"), "aufzeichn" );
	deepEqual( Stem("aufzeigen"), "aufzeig" );
	deepEqual( Stem("aufziehenden"), "aufzieh" );
	deepEqual( Stem("aufzuatmen"), "aufzuatm" );
	deepEqual( Stem("aufzubauen"), "aufzubau" );
	deepEqual( Stem("aufzublasen"), "aufzublas" );
	deepEqual( Stem("aufzublicken"), "aufzublick" );
	deepEqual( Stem("aufzubrauchen"), "aufzubrauch" );
	deepEqual( Stem("aufzubrechen"), "aufzubrech" );
	deepEqual( Stem("aufzubringen"), "aufzubring" );
	deepEqual( Stem("aufzubürden"), "aufzuburd" );
	deepEqual( Stem("aufzuckt"), "aufzuckt" );
	deepEqual( Stem("aufzuessen"), "aufzuess" );
	deepEqual( Stem("aufzufassen"), "aufzufass" );
	deepEqual( Stem("aufzuführen"), "aufzufuhr" );
	deepEqual( Stem("aufzug"), "aufzug" );
	deepEqual( Stem("aufzuge"), "aufzug" );
	deepEqual( Stem("aufzugeben"), "aufzugeb" );
	deepEqual( Stem("aufzugskabine"), "aufzugskabin" );
	deepEqual( Stem("aufzuhalsen"), "aufzuhals" );
	deepEqual( Stem("aufzuhalten"), "aufzuhalt" );
	deepEqual( Stem("aufzuheben"), "aufzuheb" );
	deepEqual( Stem("aufzuheitern"), "aufzuheit" );
	deepEqual( Stem("aufzuhören"), "aufzuhor" );
	deepEqual( Stem("aufzukommen"), "aufzukomm" );
	deepEqual( Stem("aufzulösen"), "aufzulos" );
	deepEqual( Stem("aufzumachen"), "aufzumach" );
	deepEqual( Stem("aufzumuntern"), "aufzumunt" );
	deepEqual( Stem("aufzunehmen"), "aufzunehm" );
	deepEqual( Stem("aufzupassen"), "aufzupass" );
	deepEqual( Stem("aufzuraffen"), "aufzuraff" );
	deepEqual( Stem("aufzurollen"), "aufzuroll" );
	deepEqual( Stem("aufzuschlagen"), "aufzuschlag" );
	deepEqual( Stem("aufzuschreiben"), "aufzuschreib" );
	deepEqual( Stem("aufzusehen"), "aufzuseh" );
	deepEqual( Stem("aufzusparen"), "aufzuspar" );
	deepEqual( Stem("aufzuspringen"), "aufzuspring" );
	deepEqual( Stem("aufzustellen"), "aufzustell" );
	deepEqual( Stem("aufzustellende"), "aufzustell" );
	deepEqual( Stem("aufzusuchen"), "aufzusuch" );
	deepEqual( Stem("aufzutragen"), "aufzutrag" );
	deepEqual( Stem("aufzutreiben"), "aufzutreib" );
	deepEqual( Stem("aufzutun"), "aufzutun" );
	deepEqual( Stem("aufzuwecken"), "aufzuweck" );
	deepEqual( Stem("aufzuweisen"), "aufzuweis" );
	deepEqual( Stem("aufzuwerten"), "aufzuwert" );
	deepEqual( Stem("aufzuwiegen"), "aufzuwieg" );
	deepEqual( Stem("aug"), "aug" );
	deepEqual( Stem("auge"), "aug" );
	deepEqual( Stem("äugelchen"), "augelch" );
	deepEqual( Stem("äugelein"), "augelein" );
	deepEqual( Stem("augen"), "aug" );
	deepEqual( Stem("augenaufschlag"), "augenaufschlag" );
	deepEqual( Stem("augenblick"), "augenblick" );
	deepEqual( Stem("augenblicke"), "augenblick" );
	deepEqual( Stem("augenblicken"), "augenblick" );
	deepEqual( Stem("augenblicklich"), "augenblick" );
	deepEqual( Stem("augenblicklichen"), "augenblick" );
	deepEqual( Stem("augenbogen"), "augenbog" );
	deepEqual( Stem("augenbraunen"), "augenbraun" );
	deepEqual( Stem("äugender"), "augend" );
	deepEqual( Stem("augenlider"), "augenlid" );
	deepEqual( Stem("augenmerk"), "augenmerk" );
	deepEqual( Stem("augenschein"), "augenschein" );
	deepEqual( Stem("augenscheinlich"), "augenschein" );
	deepEqual( Stem("augenscheinliche"), "augenschein" );
	deepEqual( Stem("augenscheinlicher"), "augenschein" );
	deepEqual( Stem("augenschwache"), "augenschwach" );
	deepEqual( Stem("augenwinkel"), "augenwinkel" );
	deepEqual( Stem("auges"), "aug" );
	deepEqual( Stem("äuglein"), "auglein" );
	deepEqual( Stem("augsburg"), "augsburg" );
	deepEqual( Stem("augst"), "augst" );
	deepEqual( Stem("august"), "august" );
	deepEqual( Stem("aura"), "aura" );
	deepEqual( Stem("aus"), "aus" );
	deepEqual( Stem("ausarbeiten"), "ausarbeit" );
	deepEqual( Stem("ausartet"), "ausartet" );
	deepEqual( Stem("ausartung"), "ausart" );
	deepEqual( Stem("ausbesserung"), "ausbesser" );
	deepEqual( Stem("ausbeutete"), "ausbeutet" );
	deepEqual( Stem("ausbeutung"), "ausbeut" );
	deepEqual( Stem("ausbilden"), "ausbild" );
	deepEqual( Stem("ausbildete"), "ausbildet" );
	deepEqual( Stem("ausbildung"), "ausbild" );
	deepEqual( Stem("ausblase"), "ausblas" );
	deepEqual( Stem("ausbleiben"), "ausbleib" );
	deepEqual( Stem("ausbleibt"), "ausbleibt" );
	deepEqual( Stem("ausblick"), "ausblick" );
	deepEqual( Stem("ausbrach"), "ausbrach" );
	deepEqual( Stem("ausbreche"), "ausbrech" );
	deepEqual( Stem("ausbrechen"), "ausbrech" );
	deepEqual( Stem("ausbrechend"), "ausbrech" );
	deepEqual( Stem("ausbrechendem"), "ausbrech" );
	deepEqual( Stem("ausbrechenden"), "ausbrech" );
	deepEqual( Stem("ausbreite"), "ausbreit" );
	deepEqual( Stem("ausbreiten"), "ausbreit" );
	deepEqual( Stem("ausbreitet"), "ausbreitet" );
	deepEqual( Stem("ausbreitete"), "ausbreitet" );
	deepEqual( Stem("ausbreiteten"), "ausbreitet" );
	deepEqual( Stem("ausbreitung"), "ausbreit" );
	deepEqual( Stem("ausbricht"), "ausbricht" );
	deepEqual( Stem("ausbruch"), "ausbruch" );
	deepEqual( Stem("ausbrüten"), "ausbrut" );
	deepEqual( Stem("ausbund"), "ausbund" );
	deepEqual( Stem("ausdachte"), "ausdacht" );
	deepEqual( Stem("ausdauer"), "ausdau" );
	deepEqual( Stem("ausdauernd"), "ausdauernd" );
	deepEqual( Stem("ausdehnen"), "ausdehn" );
	deepEqual( Stem("ausdehnt"), "ausdehnt" );
	deepEqual( Stem("ausdehnung"), "ausdehn" );
	deepEqual( Stem("ausdenken"), "ausdenk" );
	deepEqual( Stem("ausdeuteten"), "ausdeutet" );
	deepEqual( Stem("ausdruck"), "ausdruck" );
	deepEqual( Stem("ausdrucke"), "ausdruck" );
	deepEqual( Stem("ausdrücke"), "ausdruck" );
	deepEqual( Stem("ausdrücken"), "ausdruck" );
	deepEqual( Stem("ausdrücklich"), "ausdruck" );
	deepEqual( Stem("ausdrückliche"), "ausdruck" );
	deepEqual( Stem("ausdrucks"), "ausdruck" );
	deepEqual( Stem("ausdrucksweise"), "ausdrucksweis" );
	deepEqual( Stem("ausdrückt"), "ausdruckt" );
	deepEqual( Stem("ausdrückte"), "ausdruckt" );
	deepEqual( Stem("ausdrückten"), "ausdruckt" );
	deepEqual( Stem("ausdünstet"), "ausdunstet" );
	deepEqual( Stem("ausdünstungen"), "ausdunst" );
	deepEqual( Stem("auseinander"), "auseinand" );
	deepEqual( Stem("auseinanderfahren"), "auseinanderfahr" );
	deepEqual( Stem("auseinanderfalteten"), "auseinanderfaltet" );
	deepEqual( Stem("auseinandergeschnitten"), "auseinandergeschnitt" );
	deepEqual( Stem("auseinanderhuschten"), "auseinanderhuscht" );
	deepEqual( Stem("auseinanderjagte"), "auseinanderjagt" );
	deepEqual( Stem("auseinanderschneiden"), "auseinanderschneid" );
	deepEqual( Stem("auseinandersetzen"), "auseinandersetz" );
	deepEqual( Stem("auseinandersetzt"), "auseinandersetzt" );
	deepEqual( Stem("auseinandersetzung"), "auseinandersetz" );
	deepEqual( Stem("auseinanderteilte"), "auseinanderteilt" );
	deepEqual( Stem("auseinanderzugehen"), "auseinanderzugeh" );
	deepEqual( Stem("auseinanderzukeilen"), "auseinanderzukeil" );
	deepEqual( Stem("auseinanderzusetzen"), "auseinanderzusetz" );
	deepEqual( Stem("ausersehen"), "auserseh" );
	deepEqual( Stem("auserwählen"), "auserwahl" );
	deepEqual( Stem("auserwählt"), "auserwahlt" );
	deepEqual( Stem("auserwählte"), "auserwahlt" );
	deepEqual( Stem("auserwählten"), "auserwahlt" );
	deepEqual( Stem("auserwähltes"), "auserwahlt" );
	deepEqual( Stem("ausfallen"), "ausfall" );
	deepEqual( Stem("ausfiel"), "ausfiel" );
	deepEqual( Stem("ausfiele"), "ausfiel" );
	deepEqual( Stem("ausfindig"), "ausfind" );
	deepEqual( Stem("ausfliesst"), "ausfliesst" );
	deepEqual( Stem("ausfließt"), "ausfliesst" );
	deepEqual( Stem("ausflucht"), "ausflucht" );
	deepEqual( Stem("ausflüge"), "ausflug" );
	deepEqual( Stem("ausflüsse"), "ausfluss" );
	deepEqual( Stem("ausflüssen"), "ausfluss" );
	deepEqual( Stem("ausforschen"), "ausforsch" );
	deepEqual( Stem("ausführen"), "ausfuhr" );
	deepEqual( Stem("ausführlich"), "ausfuhr" );
	deepEqual( Stem("ausführlichen"), "ausfuhr" );
	deepEqual( Stem("ausführlicher"), "ausfuhr" );
	deepEqual( Stem("ausführlichere"), "ausfuhr" );
	deepEqual( Stem("ausführlichst"), "ausfuhr" );
	deepEqual( Stem("ausführst"), "ausfuhrst" );
	deepEqual( Stem("ausführt"), "ausfuhrt" );
	deepEqual( Stem("ausführte"), "ausfuhrt" );
	deepEqual( Stem("ausführung"), "ausfuhr" );
	deepEqual( Stem("ausfüllen"), "ausfull" );
	deepEqual( Stem("ausg"), "ausg" );
	deepEqual( Stem("ausgab"), "ausgab" );
	deepEqual( Stem("ausgabe"), "ausgab" );
	deepEqual( Stem("ausgaben"), "ausgab" );
	deepEqual( Stem("ausgäben"), "ausgab" );
	deepEqual( Stem("ausgang"), "ausgang" );
	deepEqual( Stem("ausgangs"), "ausgang" );
	deepEqual( Stem("ausgangspunkt"), "ausgangspunkt" );
	deepEqual( Stem("ausgearbeitet"), "ausgearbeitet" );
	deepEqual( Stem("ausgeben"), "ausgeb" );
	deepEqual( Stem("ausgebeutet"), "ausgebeutet" );
	deepEqual( Stem("ausgebildet"), "ausgebildet" );
	deepEqual( Stem("ausgebildete"), "ausgebildet" );
	deepEqual( Stem("ausgeblasen"), "ausgeblas" );
	deepEqual( Stem("ausgeblasene"), "ausgeblas" );
	deepEqual( Stem("ausgeblieben"), "ausgeblieb" );
	deepEqual( Stem("ausgebliebenen"), "ausgeblieb" );
	deepEqual( Stem("ausgeboren"), "ausgebor" );
	deepEqual( Stem("ausgebrannt"), "ausgebrannt" );
	deepEqual( Stem("ausgebreitet"), "ausgebreitet" );
	deepEqual( Stem("ausgebrüteten"), "ausgebrutet" );
	deepEqual( Stem("ausgedacht"), "ausgedacht" );
	deepEqual( Stem("ausgedehnt"), "ausgedehnt" );
	deepEqual( Stem("ausgedehnten"), "ausgedehnt" );
	deepEqual( Stem("ausgedehntes"), "ausgedehnt" );
	deepEqual( Stem("ausgediente"), "ausgedient" );
	deepEqual( Stem("ausgedienten"), "ausgedient" );
	deepEqual( Stem("ausgedientes"), "ausgedient" );
	deepEqual( Stem("ausgedörrten"), "ausgedorrt" );
	deepEqual( Stem("ausgedörrtes"), "ausgedorrt" );
	deepEqual( Stem("ausgedrückt"), "ausgedruckt" );
	deepEqual( Stem("ausgedruckte"), "ausgedruckt" );
	deepEqual( Stem("ausgefallen"), "ausgefall" );
	deepEqual( Stem("ausgeflossen"), "ausgefloss" );
	deepEqual( Stem("ausgeforscht"), "ausgeforscht" );
	deepEqual( Stem("ausgefragt"), "ausgefragt" );
	deepEqual( Stem("ausgeführt"), "ausgefuhrt" );
	deepEqual( Stem("ausgefüllt"), "ausgefullt" );
	deepEqual( Stem("ausgegangen"), "ausgegang" );
	deepEqual( Stem("ausgegangene"), "ausgegang" );
	deepEqual( Stem("ausgegeben"), "ausgegeb" );
	deepEqual( Stem("ausgegebendie"), "ausgegebendi" );
	deepEqual( Stem("ausgeglichen"), "ausgeg" );
	deepEqual( Stem("ausgegossen"), "ausgegoss" );
	deepEqual( Stem("ausgegraben"), "ausgegrab" );
	deepEqual( Stem("ausgehaucht"), "ausgehaucht" );
	deepEqual( Stem("ausgehauen"), "ausgehau" );
	deepEqual( Stem("ausgehe"), "ausgeh" );
	deepEqual( Stem("ausgeheckt"), "ausgeheckt" );
	deepEqual( Stem("ausgehen"), "ausgeh" );
	deepEqual( Stem("ausgehend"), "ausgeh" );
	deepEqual( Stem("ausgehende"), "ausgeh" );
	deepEqual( Stem("ausgehenden"), "ausgeh" );
	deepEqual( Stem("ausgehn"), "ausgehn" );
	deepEqual( Stem("ausgehorcht"), "ausgehorcht" );
	deepEqual( Stem("ausgeht"), "ausgeht" );
	deepEqual( Stem("ausgehungerte"), "ausgehungert" );
	deepEqual( Stem("ausgehungertes"), "ausgehungert" );
	deepEqual( Stem("ausgeklügelt"), "ausgeklugelt" );
	deepEqual( Stem("ausgekratzt"), "ausgekratzt" );
	deepEqual( Stem("ausgelacht"), "ausgelacht" );
	deepEqual( Stem("ausgelassen"), "ausgelass" );
	deepEqual( Stem("ausgelassene"), "ausgelass" );
	deepEqual( Stem("ausgelassenheit"), "ausgelass" );
	deepEqual( Stem("ausgelassenste"), "ausgelassen" );
	deepEqual( Stem("ausgelassensten"), "ausgelassen" );
	deepEqual( Stem("ausgelastet"), "ausgelastet" );
	deepEqual( Stem("ausgelegt"), "ausgelegt" );
	deepEqual( Stem("ausgelöscht"), "ausgeloscht" );
	deepEqual( Stem("ausgelöschte"), "ausgeloscht" );
	deepEqual( Stem("ausgemacht"), "ausgemacht" );
	deepEqual( Stem("ausgemachte"), "ausgemacht" );
	deepEqual( Stem("ausgemalten"), "ausgemalt" );
	deepEqual( Stem("ausgemittelt"), "ausgemittelt" );
	deepEqual( Stem("ausgenommen"), "ausgenomm" );
	deepEqual( Stem("ausgenommene"), "ausgenomm" );
	deepEqual( Stem("ausgenossen"), "ausgenoss" );
	deepEqual( Stem("ausgenutzt"), "ausgenutzt" );
	deepEqual( Stem("ausgepeitscht"), "ausgepeitscht" );
	deepEqual( Stem("ausgepustet"), "ausgepustet" );
	deepEqual( Stem("ausgeputzt"), "ausgeputzt" );
	deepEqual( Stem("ausgequetschten"), "ausgequetscht" );
	deepEqual( Stem("ausgerechnet"), "ausgerechnet" );
	deepEqual( Stem("ausgereckt"), "ausgereckt" );
	deepEqual( Stem("ausgereiften"), "ausgereift" );
	deepEqual( Stem("ausgerichtet"), "ausgerichtet" );
	deepEqual( Stem("ausgerissen"), "ausgeriss" );
	deepEqual( Stem("ausgeritten"), "ausgeritt" );
	deepEqual( Stem("ausgerottet"), "ausgerottet" );
	deepEqual( Stem("ausgerückt"), "ausgeruckt" );
	deepEqual( Stem("ausgerufen"), "ausgeruf" );
	deepEqual( Stem("ausgerufenen"), "ausgeruf" );
	deepEqual( Stem("ausgerüstet"), "ausgerustet" );
	deepEqual( Stem("ausgesagt"), "ausgesagt" );
	deepEqual( Stem("ausgesandt"), "ausgesandt" );
	deepEqual( Stem("ausgesandte"), "ausgesandt" );
	deepEqual( Stem("ausgeschaltet"), "ausgeschaltet" );
	deepEqual( Stem("ausgeschickt"), "ausgeschickt" );
	deepEqual( Stem("ausgeschieden"), "ausgeschied" );
	deepEqual( Stem("ausgeschlachtet"), "ausgeschlachtet" );
	deepEqual( Stem("ausgeschlafen"), "ausgeschlaf" );
	deepEqual( Stem("ausgeschlagen"), "ausgeschlag" );
	deepEqual( Stem("ausgeschlossen"), "ausgeschloss" );
	deepEqual( Stem("ausgeschnitzt"), "ausgeschnitzt" );
	deepEqual( Stem("ausgeschoben"), "ausgeschob" );
	deepEqual( Stem("ausgeschrieben"), "ausgeschrieb" );
	deepEqual( Stem("ausgeschrieen"), "ausgeschrie" );
	deepEqual( Stem("ausgeschüttet"), "ausgeschuttet" );
	deepEqual( Stem("ausgeschweiften"), "ausgeschweift" );
	deepEqual( Stem("ausgesehen"), "ausgeseh" );
	deepEqual( Stem("ausgesetzt"), "ausgesetzt" );
	deepEqual( Stem("ausgesetzte"), "ausgesetzt" );
	deepEqual( Stem("ausgesondert"), "ausgesondert" );
	deepEqual( Stem("ausgesonnen"), "ausgesonn" );
	deepEqual( Stem("ausgespannt"), "ausgespannt" );
	deepEqual( Stem("ausgespart"), "ausgespart" );
	deepEqual( Stem("ausgesprochen"), "ausgesproch" );
	deepEqual( Stem("ausgesprochenen"), "ausgesproch" );
	deepEqual( Stem("ausgestaltung"), "ausgestalt" );
	deepEqual( Stem("ausgestattet"), "ausgestattet" );
	deepEqual( Stem("ausgestatteter"), "ausgestattet" );
	deepEqual( Stem("ausgesteckt"), "ausgesteckt" );
	deepEqual( Stem("ausgesteckten"), "ausgesteckt" );
	deepEqual( Stem("ausgestellt"), "ausgestellt" );
	deepEqual( Stem("ausgestorben"), "ausgestorb" );
	deepEqual( Stem("ausgestossen"), "ausgestoss" );
	deepEqual( Stem("ausgestoßen"), "ausgestoss" );
	deepEqual( Stem("ausgestrahlt"), "ausgestrahlt" );
	deepEqual( Stem("ausgestreckt"), "ausgestreckt" );
	deepEqual( Stem("ausgestreckte"), "ausgestreckt" );
	deepEqual( Stem("ausgestrecktem"), "ausgestreckt" );
	deepEqual( Stem("ausgestreckten"), "ausgestreckt" );
	deepEqual( Stem("ausgesuchte"), "ausgesucht" );
	deepEqual( Stem("ausgesuchten"), "ausgesucht" );
	deepEqual( Stem("ausgetauscht"), "ausgetauscht" );
	deepEqual( Stem("ausgeteilt"), "ausgeteilt" );
	deepEqual( Stem("ausgeteilte"), "ausgeteilt" );
	deepEqual( Stem("ausgetilgt"), "ausgetilgt" );
	deepEqual( Stem("ausgetragen"), "ausgetrag" );
	deepEqual( Stem("ausgetreten"), "ausgetret" );
	deepEqual( Stem("ausgetretene"), "ausgetret" );
	deepEqual( Stem("ausgetrieben"), "ausgetrieb" );
	deepEqual( Stem("ausgetrocknet"), "ausgetrocknet" );
	deepEqual( Stem("ausgeübt"), "ausgeubt" );
	deepEqual( Stem("ausgewandert"), "ausgewandert" );
	deepEqual( Stem("ausgeweidet"), "ausgeweidet" );
	deepEqual( Stem("ausgewischt"), "ausgewischt" );
	deepEqual( Stem("ausgewogen"), "ausgewog" );
	deepEqual( Stem("ausgeworfen"), "ausgeworf" );
	deepEqual( Stem("ausgezackten"), "ausgezackt" );
	deepEqual( Stem("ausgezeichnet"), "ausgezeichnet" );
	deepEqual( Stem("ausgezeichnete"), "ausgezeichnet" );
	deepEqual( Stem("ausgezeichneten"), "ausgezeichnet" );
	deepEqual( Stem("ausgezeichnetes"), "ausgezeichnet" );
	deepEqual( Stem("ausgezeichnetrückbesinnung"), "ausgezeichnetruckbesinn" );
	deepEqual( Stem("ausgeziechnet"), "ausgeziechnet" );
	deepEqual( Stem("ausgezogen"), "ausgezog" );
	deepEqual( Stem("ausgezogene"), "ausgezog" );
	deepEqual( Stem("ausgezogenen"), "ausgezog" );
	deepEqual( Stem("ausgiebigen"), "ausgieb" );
	deepEqual( Stem("ausgiebigkeit"), "ausgieb" );
	deepEqual( Stem("ausgiessen"), "ausgiess" );
	deepEqual( Stem("ausgießen"), "ausgiess" );
	deepEqual( Stem("ausging"), "ausging" );
	deepEqual( Stem("ausginge"), "ausging" );
	deepEqual( Stem("ausgingen"), "ausging" );
	deepEqual( Stem("ausgmacht"), "ausgmacht" );
	deepEqual( Stem("ausgoss"), "ausgoss" );
	deepEqual( Stem("ausgoß"), "ausgoss" );
	deepEqual( Stem("ausgredt"), "ausgredt" );
	deepEqual( Stem("ausgstossen"), "ausgstoss" );
	deepEqual( Stem("ausgwichen"), "ausgwich" );
	deepEqual( Stem("ausgworfen"), "ausgworf" );
	deepEqual( Stem("aushalt"), "aushalt" );
	deepEqual( Stem("aushält"), "aushalt" );
	deepEqual( Stem("aushalten"), "aushalt" );
	deepEqual( Stem("ausharren"), "ausharr" );
	deepEqual( Stem("aushauchte"), "aushaucht" );
	deepEqual( Stem("aushauen"), "aushau" );
	deepEqual( Stem("aushielt"), "aushielt" );
	deepEqual( Stem("aushilfe"), "aushilf" );
	deepEqual( Stem("ausholend"), "aushol" );
	deepEqual( Stem("aushungern"), "aushung" );
	deepEqual( Stem("auskennen"), "auskenn" );
	deepEqual( Stem("ausklang"), "ausklang" );
	deepEqual( Stem("auskneifer"), "auskneif" );
	deepEqual( Stem("auskommen"), "auskomm" );
	deepEqual( Stem("auskommens"), "auskomm" );
	deepEqual( Stem("auskröchen"), "auskroch" );
	deepEqual( Stem("auskunft"), "auskunft" );
	deepEqual( Stem("auslachen"), "auslach" );
	deepEqual( Stem("auslachte"), "auslacht" );
	deepEqual( Stem("ausladungen"), "auslad" );
	deepEqual( Stem("auslagen"), "auslag" );
	deepEqual( Stem("ausland"), "ausland" );
	deepEqual( Stem("ausländischen"), "ausland" );
	deepEqual( Stem("auslassen"), "auslass" );
	deepEqual( Stem("auslaufen"), "auslauf" );
	deepEqual( Stem("ausläuft"), "auslauft" );
	deepEqual( Stem("auslebte"), "auslebt" );
	deepEqual( Stem("ausleeren"), "ausle" );
	deepEqual( Stem("auslegen"), "ausleg" );
	deepEqual( Stem("auslegt"), "auslegt" );
	deepEqual( Stem("auslegung"), "ausleg" );
	deepEqual( Stem("ausliesse"), "ausliess" );
	deepEqual( Stem("ausließe"), "ausliess" );
	deepEqual( Stem("auslöschen"), "auslosch" );
	deepEqual( Stem("auslöscht"), "ausloscht" );
	deepEqual( Stem("auslöschte"), "ausloscht" );
	deepEqual( Stem("auslöschung"), "auslosch" );
	deepEqual( Stem("ausmache"), "ausmach" );
	deepEqual( Stem("ausmachen"), "ausmach" );
	deepEqual( Stem("ausmacht"), "ausmacht" );
	deepEqual( Stem("ausmachte"), "ausmacht" );
	deepEqual( Stem("ausmachten"), "ausmacht" );
	deepEqual( Stem("ausmass"), "ausmass" );
	deepEqual( Stem("ausmaß"), "ausmass" );
	deepEqual( Stem("ausmündung"), "ausmund" );
	deepEqual( Stem("ausnahme"), "ausnahm" );
	deepEqual( Stem("ausnähme"), "ausnahm" );
	deepEqual( Stem("ausnahmen"), "ausnahm" );
	deepEqual( Stem("ausnahmsweise"), "ausnahmsweis" );
	deepEqual( Stem("ausnehmen"), "ausnehm" );
	deepEqual( Stem("ausnehmend"), "ausnehm" );
	deepEqual( Stem("ausnutzen"), "ausnutz" );
	deepEqual( Stem("auspfiff"), "auspfiff" );
	deepEqual( Stem("ausräumen"), "ausraum" );
	deepEqual( Stem("ausrecken"), "ausreck" );
	deepEqual( Stem("ausreden"), "ausred" );
	deepEqual( Stem("ausreichenden"), "ausreich" );
	deepEqual( Stem("ausreicht"), "ausreicht" );
	deepEqual( Stem("ausreissen"), "ausreiss" );
	deepEqual( Stem("ausrichten"), "ausricht" );
	deepEqual( Stem("ausrichtet"), "ausrichtet" );
	deepEqual( Stem("ausrief"), "ausrief" );
	deepEqual( Stem("ausrotten"), "ausrott" );
	deepEqual( Stem("ausrottet"), "ausrottet" );
	deepEqual( Stem("ausrücken"), "ausruck" );
	deepEqual( Stem("ausrückt"), "ausruckt" );
	deepEqual( Stem("ausruf"), "ausruf" );
	deepEqual( Stem("ausrufe"), "ausruf" );
	deepEqual( Stem("ausruhen"), "ausruh" );
	deepEqual( Stem("ausruhet"), "ausruhet" );
	deepEqual( Stem("ausrüstung"), "ausrust" );
	deepEqual( Stem("ausrüstungsgegenständen"), "ausrustungsgegenstand" );
	deepEqual( Stem("aussaat"), "aussaat" );
	deepEqual( Stem("aussage"), "aussag" );
	deepEqual( Stem("aussagen"), "aussag" );
	deepEqual( Stem("aussagenden"), "aussag" );
	deepEqual( Stem("aussah"), "aussah" );
	deepEqual( Stem("aussähe"), "aussah" );
	deepEqual( Stem("aussahen"), "aussah" );
	deepEqual( Stem("aussatz"), "aussatz" );
	deepEqual( Stem("aussatzes"), "aussatz" );
	deepEqual( Stem("aussätzig"), "aussatz" );
	deepEqual( Stem("aussätzige"), "aussatz" );
	deepEqual( Stem("aussätzigen"), "aussatz" );
	deepEqual( Stem("ausschalten"), "ausschalt" );
	deepEqual( Stem("ausschicken"), "ausschick" );
	deepEqual( Stem("ausschied"), "ausschied" );
	deepEqual( Stem("ausschlag"), "ausschlag" );
	deepEqual( Stem("ausschließen"), "ausschliess" );
	deepEqual( Stem("ausschliesslich"), "ausschliess" );
	deepEqual( Stem("ausschließlich"), "ausschliess" );
	deepEqual( Stem("ausschliessliches"), "ausschliess" );
	deepEqual( Stem("ausschließliches"), "ausschliess" );
	deepEqual( Stem("ausschliesst"), "ausschliesst" );
	deepEqual( Stem("ausschliessungsweise"), "ausschliessungsweis" );
	deepEqual( Stem("ausschlugen"), "ausschlug" );
	deepEqual( Stem("ausschmückten"), "ausschmuckt" );
	deepEqual( Stem("ausschneiden"), "ausschneid" );
	deepEqual( Stem("ausschnitt"), "ausschnitt" );
	deepEqual( Stem("ausschnitte"), "ausschnitt" );
	deepEqual( Stem("ausschuss"), "ausschuss" );
	deepEqual( Stem("ausschütten"), "ausschutt" );
	deepEqual( Stem("ausschwenkend"), "ausschwenk" );
	deepEqual( Stem("aussehe"), "ausseh" );
	deepEqual( Stem("aussehen"), "ausseh" );
	deepEqual( Stem("aussehender"), "ausseh" );
	deepEqual( Stem("aussehens"), "ausseh" );
	deepEqual( Stem("aussen"), "auss" );
	deepEqual( Stem("außen"), "auss" );
	deepEqual( Stem("aussenden"), "aussend" );
	deepEqual( Stem("aussendung"), "aussend" );
	deepEqual( Stem("aussenminister"), "aussenminist" );
	deepEqual( Stem("aussenpolitik"), "aussenpolit" );
	deepEqual( Stem("aussenwerke"), "aussenwerk" );
	deepEqual( Stem("außenwerke"), "aussenwerk" );
	deepEqual( Stem("ausser"), "auss" );
	deepEqual( Stem("außer"), "auss" );
	deepEqual( Stem("ausserdem"), "ausserd" );
	deepEqual( Stem("außerdem"), "ausserd" );
	deepEqual( Stem("äussere"), "auss" );
	deepEqual( Stem("äußere"), "auss" );
	deepEqual( Stem("äusserem"), "auss" );
	deepEqual( Stem("äußerem"), "auss" );
	deepEqual( Stem("äusseren"), "auss" );
	deepEqual( Stem("äußeren"), "auss" );
	deepEqual( Stem("äusserer"), "auss" );
	deepEqual( Stem("äußerer"), "auss" );
	deepEqual( Stem("äusseres"), "auss" );
	deepEqual( Stem("äußeres"), "auss" );
	deepEqual( Stem("aussergewöhnliche"), "aussergewohn" );
	deepEqual( Stem("außergewöhnliche"), "aussergewohn" );
	deepEqual( Stem("aussergewöhnliches"), "aussergewohn" );
	deepEqual( Stem("ausserhalb"), "ausserhalb" );
	deepEqual( Stem("außerhalb"), "ausserhalb" );
	deepEqual( Stem("äusserlich"), "auss" );
	deepEqual( Stem("äußerlich"), "auss" );
	deepEqual( Stem("äusserliche"), "auss" );
	deepEqual( Stem("äußerliche"), "auss" );
	deepEqual( Stem("äusserlichen"), "auss" );
	deepEqual( Stem("äußerlichen"), "auss" );
	deepEqual( Stem("äusserlicher"), "auss" );
	deepEqual( Stem("äußerlicher"), "auss" );
	deepEqual( Stem("äusserliches"), "auss" );
	deepEqual( Stem("äußerliches"), "auss" );
	deepEqual( Stem("äusserlichkeiten"), "ausser" );
	deepEqual( Stem("äußerlichkeiten"), "ausser" );
	deepEqual( Stem("äusserlichsten"), "auss" );
	deepEqual( Stem("äußerlichsten"), "auss" );
	deepEqual( Stem("äussern"), "auss" );
	deepEqual( Stem("äußern"), "auss" );
	deepEqual( Stem("äussernden"), "aussernd" );
	deepEqual( Stem("ausserordentlich"), "ausserordent" );
	deepEqual( Stem("außerordentlich"), "ausserordent" );
	deepEqual( Stem("ausserordentliche"), "ausserordent" );
	deepEqual( Stem("ausserordentlichen"), "ausserordent" );
	deepEqual( Stem("außerordentlichen"), "ausserordent" );
	deepEqual( Stem("äusserst"), "ausserst" );
	deepEqual( Stem("äußerst"), "ausserst" );
	deepEqual( Stem("äusserste"), "ausserst" );
	deepEqual( Stem("äußerste"), "ausserst" );
	deepEqual( Stem("äussersten"), "ausserst" );
	deepEqual( Stem("äußersten"), "ausserst" );
	deepEqual( Stem("äusserster"), "ausserst" );
	deepEqual( Stem("äußerster"), "ausserst" );
	deepEqual( Stem("äusserstes"), "ausserst" );
	deepEqual( Stem("äußerstes"), "ausserst" );
	deepEqual( Stem("äussert"), "aussert" );
	deepEqual( Stem("äußert"), "aussert" );
	deepEqual( Stem("äusserung"), "ausser" );
	deepEqual( Stem("äußerung"), "ausser" );
	deepEqual( Stem("äusserungen"), "ausser" );
	deepEqual( Stem("äußerungen"), "ausser" );
	deepEqual( Stem("aussetzen"), "aussetz" );
	deepEqual( Stem("aussetzend"), "aussetz" );
	deepEqual( Stem("aussetzte"), "aussetzt" );
	deepEqual( Stem("aussetzten"), "aussetzt" );
	deepEqual( Stem("aussi"), "aussi" );
	deepEqual( Stem("aussicht"), "aussicht" );
	deepEqual( Stem("aussichten"), "aussicht" );
	deepEqual( Stem("aussichtslos"), "aussichtslos" );
	deepEqual( Stem("aussichtspunkte"), "aussichtspunkt" );
	deepEqual( Stem("aussiehst"), "aussieh" );
	deepEqual( Stem("aussieht"), "aussieht" );
	deepEqual( Stem("aussigraspelt"), "aussigraspelt" );
	deepEqual( Stem("aussigsprungen"), "aussigspr" );
	deepEqual( Stem("aussiheiret"), "aussiheiret" );
	deepEqual( Stem("aussilassen"), "aussilass" );
	deepEqual( Stem("aussinnen"), "aussinn" );
	deepEqual( Stem("aussischickt"), "aussischickt" );
	deepEqual( Stem("aussizahlt"), "aussizahlt" );
	deepEqual( Stem("ausspähenden"), "ausspah" );
	deepEqual( Stem("ausspannen"), "ausspann" );
	deepEqual( Stem("ausspannt"), "ausspannt" );
	deepEqual( Stem("ausspannung"), "ausspann" );
	deepEqual( Stem("ausspielen"), "ausspiel" );
	deepEqual( Stem("aussprach"), "aussprach" );
	deepEqual( Stem("aussprache"), "aussprach" );
	deepEqual( Stem("aussprachen"), "aussprach" );
	deepEqual( Stem("aussprechen"), "aussprech" );
	deepEqual( Stem("ausspricht"), "ausspricht" );
	deepEqual( Stem("ausspruch"), "ausspruch" );
	deepEqual( Stem("ausspruche"), "ausspruch" );
	deepEqual( Stem("aussprüchen"), "ausspruch" );
	deepEqual( Stem("ausspuckend"), "ausspuck" );
	deepEqual( Stem("ausspüren"), "ausspur" );
	deepEqual( Stem("ausstand"), "ausstand" );
	deepEqual( Stem("ausstarb"), "ausstarb" );
	deepEqual( Stem("ausstattung"), "ausstatt" );
	deepEqual( Stem("ausstehen"), "aussteh" );
	deepEqual( Stem("ausstehendes"), "aussteh" );
	deepEqual( Stem("aussteigen"), "aussteig" );
	deepEqual( Stem("ausstellung"), "ausstell" );
	deepEqual( Stem("aussteuer"), "aussteu" );
	deepEqual( Stem("ausstieg"), "ausstieg" );
	deepEqual( Stem("ausstiess"), "ausstiess" );
	deepEqual( Stem("ausstieß"), "ausstiess" );
	deepEqual( Stem("ausstossen"), "ausstoss" );
	deepEqual( Stem("ausstoßen"), "ausstoss" );
	deepEqual( Stem("ausstrahlen"), "ausstrahl" );
	deepEqual( Stem("ausstrahlt"), "ausstrahlt" );
	deepEqual( Stem("ausstrahlung"), "ausstrahl" );
	deepEqual( Stem("ausstrecke"), "ausstreck" );
	deepEqual( Stem("ausstrecken"), "ausstreck" );
	deepEqual( Stem("ausstreckt"), "ausstreckt" );
	deepEqual( Stem("ausstreckte"), "ausstreckt" );
	deepEqual( Stem("ausstreckung"), "ausstreck" );
	deepEqual( Stem("ausströmen"), "ausstrom" );
	deepEqual( Stem("aussuchst"), "aussuch" );
	deepEqual( Stem("austausch"), "austausch" );
	deepEqual( Stem("austauschen"), "austausch" );
	deepEqual( Stem("austauschte"), "austauscht" );
	deepEqual( Stem("austeilende"), "austeil" );
	deepEqual( Stem("austellers"), "austell" );
	deepEqual( Stem("austern"), "aust" );
	deepEqual( Stem("austilgten"), "austilgt" );
	deepEqual( Stem("australien"), "australi" );
	deepEqual( Stem("austraten"), "austrat" );
	deepEqual( Stem("austreibe"), "austreib" );
	deepEqual( Stem("austrinken"), "austrink" );
	deepEqual( Stem("austritte"), "austritt" );
	deepEqual( Stem("austrittstrenddie"), "austrittstrenddi" );
	deepEqual( Stem("austrittswelle"), "austrittswell" );
	deepEqual( Stem("austrocknen"), "austrockn" );
	deepEqual( Stem("austrocknet"), "austrocknet" );
	deepEqual( Stem("austrocknete"), "austrocknet" );
	deepEqual( Stem("ausübe"), "ausub" );
	deepEqual( Stem("ausüben"), "ausub" );
	deepEqual( Stem("ausübt"), "ausubt" );
	deepEqual( Stem("ausübung"), "ausub" );
	deepEqual( Stem("auswahl"), "auswahl" );
	deepEqual( Stem("auswandern"), "auswand" );
	deepEqual( Stem("auswanderung"), "auswander" );
	deepEqual( Stem("auswanderungsziel"), "auswanderungsziel" );
	deepEqual( Stem("auswarf"), "auswarf" );
	deepEqual( Stem("auswärtige"), "auswart" );
	deepEqual( Stem("auswärtigem"), "auswart" );
	deepEqual( Stem("auswärtigen"), "auswart" );
	deepEqual( Stem("auswärts"), "auswart" );
	deepEqual( Stem("ausweg"), "ausweg" );
	deepEqual( Stem("auswege"), "ausweg" );
	deepEqual( Stem("ausweis"), "ausweis" );
	deepEqual( Stem("ausweisen"), "ausweis" );
	deepEqual( Stem("ausweiset"), "ausweiset" );
	deepEqual( Stem("ausweisst"), "ausweisst" );
	deepEqual( Stem("auswendig"), "auswend" );
	deepEqual( Stem("auswendige"), "auswend" );
	deepEqual( Stem("auswendigere"), "auswend" );
	deepEqual( Stem("auswendigeren"), "auswend" );
	deepEqual( Stem("auswendigeres"), "auswend" );
	deepEqual( Stem("auswendiges"), "auswend" );
	deepEqual( Stem("auswendiglernen"), "auswendiglern" );
	deepEqual( Stem("auswendigsten"), "auswend" );
	deepEqual( Stem("auswerfen"), "auswerf" );
	deepEqual( Stem("auswichen"), "auswich" );
	deepEqual( Stem("auswirft"), "auswirft" );
	deepEqual( Stem("auswüchse"), "auswuchs" );
	deepEqual( Stem("auswuchsen"), "auswuchs" );
	deepEqual( Stem("auszahlen"), "auszahl" );
	deepEqual( Stem("auszahlte"), "auszahlt" );
	deepEqual( Stem("auszählung"), "auszahl" );
	deepEqual( Stem("auszehrung"), "auszehr" );
	deepEqual( Stem("auszeichnen"), "auszeichn" );
	deepEqual( Stem("auszeichnender"), "auszeichn" );
	deepEqual( Stem("auszeichnet"), "auszeichnet" );
	deepEqual( Stem("auszeichnung"), "auszeichn" );
	deepEqual( Stem("ausziehen"), "auszieh" );
	deepEqual( Stem("ausziehenden"), "auszieh" );
	deepEqual( Stem("auszieht"), "auszieht" );
	deepEqual( Stem("ausziehtisch"), "auszieht" );
	deepEqual( Stem("auszog"), "auszog" );
	deepEqual( Stem("auszogen"), "auszog" );
	deepEqual( Stem("auszuarbeiten"), "auszuarbeit" );
	deepEqual( Stem("auszubauen"), "auszubau" );
	deepEqual( Stem("auszubilden"), "auszubild" );
	deepEqual( Stem("auszudehnen"), "auszudehn" );
	deepEqual( Stem("auszudrücken"), "auszudruck" );
	deepEqual( Stem("auszufahren"), "auszufahr" );
	deepEqual( Stem("auszuführen"), "auszufuhr" );
	deepEqual( Stem("auszufüllen"), "auszufull" );
	deepEqual( Stem("auszug"), "auszug" );
	deepEqual( Stem("auszüge"), "auszug" );
	deepEqual( Stem("auszugeben"), "auszugeb" );
	deepEqual( Stem("auszugehen"), "auszugeh" );
	deepEqual( Stem("auszügen"), "auszug" );
	deepEqual( Stem("auszuhalten"), "auszuhalt" );
	deepEqual( Stem("auszuklagen"), "auszuklag" );
	deepEqual( Stem("auszukneifen"), "auszukneif" );
	deepEqual( Stem("auszukochen"), "auszukoch" );
	deepEqual( Stem("auszukosten"), "auszukost" );
	deepEqual( Stem("auszulachen"), "auszulach" );
	deepEqual( Stem("auszulassen"), "auszulass" );
	deepEqual( Stem("auszulöschen"), "auszulosch" );
	deepEqual( Stem("auszumachen"), "auszumach" );
	deepEqual( Stem("auszunutzen"), "auszunutz" );
	deepEqual( Stem("auszupacken"), "auszupack" );
	deepEqual( Stem("auszuputzen"), "auszuputz" );
	deepEqual( Stem("auszureissen"), "auszureiss" );
	deepEqual( Stem("auszureuten"), "auszureut" );
	deepEqual( Stem("auszurichten"), "auszuricht" );
	deepEqual( Stem("auszurotten"), "auszurott" );
	deepEqual( Stem("auszurücken"), "auszuruck" );
	deepEqual( Stem("auszurufen"), "auszuruf" );
	deepEqual( Stem("auszuruhen"), "auszuruh" );
	deepEqual( Stem("auszurüsten"), "auszurust" );
	deepEqual( Stem("auszuschlagen"), "auszuschlag" );
	deepEqual( Stem("auszuschliessen"), "auszuschliess" );
	deepEqual( Stem("auszuschmücken"), "auszuschmuck" );
	deepEqual( Stem("auszuschreiten"), "auszuschreit" );
	deepEqual( Stem("auszusehen"), "auszuseh" );
	deepEqual( Stem("auszusetzen"), "auszusetz" );
	deepEqual( Stem("auszusinnen"), "auszusinn" );
	deepEqual( Stem("auszuspannen"), "auszuspann" );
	deepEqual( Stem("auszusperren"), "auszusperr" );
	deepEqual( Stem("auszusprechen"), "auszusprech" );
	deepEqual( Stem("auszustaffieren"), "auszustaffi" );
	deepEqual( Stem("auszustossen"), "auszustoss" );
	deepEqual( Stem("auszustrecken"), "auszustreck" );
	deepEqual( Stem("auszuteilen"), "auszuteil" );
	deepEqual( Stem("auszuweichen"), "auszuweich" );
	deepEqual( Stem("auszuziehen"), "auszuzieh" );
	deepEqual( Stem("auto"), "auto" );
	deepEqual( Stem("autokratischen"), "autokrat" );
	deepEqual( Stem("automatisch"), "automat" );
	deepEqual( Stem("automobil"), "automobil" );
	deepEqual( Stem("autonomie"), "autonomi" );
	deepEqual( Stem("autor"), "autor" );
	deepEqual( Stem("autorität"), "autoritat" );
	deepEqual( Stem("autos"), "autos" );
	deepEqual( Stem("autoverkäufen"), "autoverkauf" );
	deepEqual( Stem("available"), "availabl" );
	deepEqual( Stem("avancierte"), "avanciert" );
	deepEqual( Stem("avanti"), "avanti" );
	deepEqual( Stem("aven"), "aven" );
	deepEqual( Stem("aversamur"), "aversamur" );
	deepEqual( Stem("axt"), "axt" );
	deepEqual( Stem("äxten"), "axt" );
	deepEqual( Stem("aydin"), "aydin" );
	deepEqual( Stem("b"), "b" );
	deepEqual( Stem("baam"), "baam" );
	deepEqual( Stem("baaselbieterdütsch"), "baaselbieterdutsch" );
	deepEqual( Stem("babel"), "babel" );
	deepEqual( Stem("babels"), "babel" );
	deepEqual( Stem("baby"), "baby" );
	deepEqual( Stem("babylon"), "babylon" );
	deepEqual( Stem("babylonische"), "babylon" );
	deepEqual( Stem("bacchanal"), "bacchanal" );
	deepEqual( Stem("bach"), "bach" );
	deepEqual( Stem("bache"), "bach" );
	deepEqual( Stem("bäche"), "bach" );
	deepEqual( Stem("bächen"), "bach" );
	deepEqual( Stem("baches"), "bach" );
	deepEqual( Stem("bachforellen"), "bachforell" );
	deepEqual( Stem("bächlein"), "bachlein" );
	deepEqual( Stem("bachs"), "bach" );
	deepEqual( Stem("bachtal"), "bachtal" );
	deepEqual( Stem("bachweiden"), "bachweid" );
	deepEqual( Stem("bachwellen"), "bachwell" );
	deepEqual( Stem("backbirnen"), "backbirn" );
	deepEqual( Stem("bäckchen"), "backch" );
	deepEqual( Stem("backe"), "back" );
	deepEqual( Stem("backen"), "back" );
	deepEqual( Stem("backenbärtchen"), "backenbartch" );
	deepEqual( Stem("bäcker"), "back" );
	deepEqual( Stem("backofen"), "backof" );
	deepEqual( Stem("backsteinplatte"), "backsteinplatt" );
	deepEqual( Stem("backtröge"), "backtrog" );
	deepEqual( Stem("backwerk"), "backwerk" );
	deepEqual( Stem("baco"), "baco" );
	deepEqual( Stem("bad"), "bad" );
	deepEqual( Stem("bademantels"), "bademantel" );
	deepEqual( Stem("baden"), "bad" );
	deepEqual( Stem("badeplatz"), "badeplatz" );
	deepEqual( Stem("badepüppchen"), "badepuppch" );
	deepEqual( Stem("badewanne"), "badewann" );
	deepEqual( Stem("badische"), "badisch" );
	deepEqual( Stem("bagatellwechseln"), "bagatellwechseln" );
	deepEqual( Stem("bagels"), "bagel" );
	deepEqual( Stem("bah"), "bah" );
	deepEqual( Stem("bahn"), "bahn" );
	deepEqual( Stem("bahnbrechenden"), "bahnbrech" );
	deepEqual( Stem("bahnen"), "bahn" );
	deepEqual( Stem("bahnhof"), "bahnhof" );
	deepEqual( Stem("bahnhofes"), "bahnhof" );
	deepEqual( Stem("bahnte"), "bahnt" );
	deepEqual( Stem("bahrtuch"), "bahrtuch" );
	deepEqual( Stem("bajonett"), "bajonett" );
	deepEqual( Stem("balaenae"), "balaena" );
	deepEqual( Stem("balance"), "balanc" );
	deepEqual( Stem("bald"), "bald" );
	deepEqual( Stem("baldige"), "baldig" );
	deepEqual( Stem("balester"), "bal" );
	deepEqual( Stem("balken"), "balk" );
	deepEqual( Stem("balkone"), "balkon" );
	deepEqual( Stem("balkonen"), "balkon" );
	deepEqual( Stem("ball"), "ball" );
	deepEqual( Stem("ballade"), "ballad" );
	deepEqual( Stem("balles"), "ball" );
	deepEqual( Stem("balsam"), "balsam" );
	deepEqual( Stem("balsamfläschchen"), "balsamflaschch" );
	deepEqual( Stem("band"), "band" );
	deepEqual( Stem("bandapparat"), "bandapparat" );
	deepEqual( Stem("bändchen"), "bandch" );
	deepEqual( Stem("bande"), "band" );
	deepEqual( Stem("bände"), "band" );
	deepEqual( Stem("bandelier"), "bandeli" );
	deepEqual( Stem("bandeliere"), "bandeli" );
	deepEqual( Stem("banden"), "band" );
	deepEqual( Stem("bänder"), "band" );
	deepEqual( Stem("bändern"), "band" );
	deepEqual( Stem("bandgerät"), "bandgerat" );
	deepEqual( Stem("bändigen"), "bandig" );
	deepEqual( Stem("bändigung"), "bandig" );
	deepEqual( Stem("banditenähnlichen"), "banditenahn" );
	deepEqual( Stem("bandschnippel"), "bandschnippel" );
	deepEqual( Stem("bang"), "bang" );
	deepEqual( Stem("bange"), "bang" );
	deepEqual( Stem("bangen"), "bang" );
	deepEqual( Stem("banger"), "bang" );
	deepEqual( Stem("bangigkeit"), "bangig" );
	deepEqual( Stem("bänglich"), "banglich" );
	deepEqual( Stem("bank"), "bank" );
	deepEqual( Stem("bankbeamte"), "bankbeamt" );
	deepEqual( Stem("bankbeamten"), "bankbeamt" );
	deepEqual( Stem("bankel"), "bankel" );
	deepEqual( Stem("banken"), "bank" );
	deepEqual( Stem("bänken"), "bank" );
	deepEqual( Stem("bankett"), "bankett" );
	deepEqual( Stem("bankgeschäft"), "bankgeschaft" );
	deepEqual( Stem("bankhause"), "bankhaus" );
	deepEqual( Stem("bankier"), "banki" );
	deepEqual( Stem("bankiere"), "banki" );
	deepEqual( Stem("bankiers"), "banki" );
	deepEqual( Stem("bankiervereinigung"), "bankierverein" );
	deepEqual( Stem("bankkonto"), "bankkonto" );
	deepEqual( Stem("bankl"), "bankl" );
	deepEqual( Stem("bänklein"), "banklein" );
	deepEqual( Stem("banknote"), "banknot" );
	deepEqual( Stem("bankratib"), "bankratib" );
	deepEqual( Stem("bankraub"), "bankraub" );
	deepEqual( Stem("bankräuber"), "bankraub" );
	deepEqual( Stem("bankräuberin"), "bankrauberin" );
	deepEqual( Stem("banküberfall"), "bankuberfall" );
	deepEqual( Stem("banküberfällen"), "bankuberfall" );
	deepEqual( Stem("bann"), "bann" );
	deepEqual( Stem("bar"), "bar" );
	deepEqual( Stem("bär"), "bar" );
	deepEqual( Stem("barauslage"), "barauslag" );
	deepEqual( Stem("barbaren"), "barbar" );
	deepEqual( Stem("barbarischen"), "barbar" );
	deepEqual( Stem("barbiergesellen"), "barbiergesell" );
	deepEqual( Stem("bare"), "bar" );
	deepEqual( Stem("baren"), "bar" );
	deepEqual( Stem("bären"), "bar" );
	deepEqual( Stem("bärenfell"), "barenfell" );
	deepEqual( Stem("bärenschinken"), "barenschink" );
	deepEqual( Stem("bärenstall"), "barenstall" );
	deepEqual( Stem("bärentanz"), "barentanz" );
	deepEqual( Stem("bares"), "bar" );
	deepEqual( Stem("barfuss"), "barfuss" );
	deepEqual( Stem("barfuß"), "barfuss" );
	deepEqual( Stem("barg"), "barg" );
	deepEqual( Stem("barhäuptig"), "barhaupt" );
	deepEqual( Stem("barmherzig"), "barmherz" );
	deepEqual( Stem("barmherziger"), "barmherz" );
	deepEqual( Stem("barmherzigkeit"), "barmherz" );
	deepEqual( Stem("barmherzigkeiten"), "barmherz" );
	deepEqual( Stem("bars"), "bar" );
	deepEqual( Stem("barsängerin"), "barsangerin" );
	deepEqual( Stem("barsch"), "barsch" );
	deepEqual( Stem("barschaft"), "barschaft" );
	deepEqual( Stem("barsche"), "barsch" );
	deepEqual( Stem("barsches"), "barsch" );
	deepEqual( Stem("bart"), "bart" );
	deepEqual( Stem("barte"), "bart" );
	deepEqual( Stem("bartes"), "bart" );
	deepEqual( Stem("barthaare"), "barthaar" );
	deepEqual( Stem("barthel"), "barthel" );
	deepEqual( Stem("bartholomaios"), "bartholomaios" );
	deepEqual( Stem("bartstrahn"), "bartstrahn" );
	deepEqual( Stem("bartwichse"), "bartwichs" );
	deepEqual( Stem("baschans"), "baschan" );
	deepEqual( Stem("bäschen"), "basch" );
	deepEqual( Stem("base"), "bas" );
	deepEqual( Stem("basel"), "basel" );
	deepEqual( Stem("baselder"), "baseld" );
	deepEqual( Stem("baseler"), "basel" );
	deepEqual( Stem("baselland"), "baselland" );
	deepEqual( Stem("basellandschäftler"), "basellandschaftl" );
	deepEqual( Stem("basilisk"), "basilisk" );
	deepEqual( Stem("basilisken"), "basilisk" );
	deepEqual( Stem("basiliskeneier"), "basiliskenei" );
	deepEqual( Stem("basis"), "basis" );
	deepEqual( Stem("basler"), "basl" );
	deepEqual( Stem("bass"), "bass" );
	deepEqual( Stem("bassewitz"), "bassewitz" );
	deepEqual( Stem("bassgeige"), "bassgeig" );
	deepEqual( Stem("bassgeigenkonzert"), "bassgeigenkonzert" );
	deepEqual( Stem("bassgeiger"), "bassgeig" );
	deepEqual( Stem("bassstimme"), "bassstimm" );
	deepEqual( Stem("baßstimme"), "bassstimm" );
	deepEqual( Stem("bast"), "bast" );
	deepEqual( Stem("basteln"), "basteln" );
	deepEqual( Stem("bastelten"), "bastelt" );
	deepEqual( Stem("basthaar"), "basthaar" );
	deepEqual( Stem("bat"), "bat" );
	deepEqual( Stem("baten"), "bat" );
	deepEqual( Stem("bath"), "bath" );
	deepEqual( Stem("batley"), "batley" );
	deepEqual( Stem("batterie"), "batteri" );
	deepEqual( Stem("batzen"), "batz" );
	deepEqual( Stem("bau"), "bau" );
	deepEqual( Stem("bauamtsleiter"), "bauamtsleit" );
	deepEqual( Stem("bauart"), "bauart" );
	deepEqual( Stem("bauch"), "bauch" );
	deepEqual( Stem("bauche"), "bauch" );
	deepEqual( Stem("bäuchen"), "bauch" );
	deepEqual( Stem("bauches"), "bauch" );
	deepEqual( Stem("bauchflasche"), "bauchflasch" );
	deepEqual( Stem("bäuchlein"), "bauchlein" );
	deepEqual( Stem("bauchschmerzen"), "bauchschmerz" );
	deepEqual( Stem("bauchwitz"), "bauchwitz" );
	deepEqual( Stem("baudenweibe"), "baudenweib" );
	deepEqual( Stem("bauen"), "bau" );
	deepEqual( Stem("bauer"), "bau" );
	deepEqual( Stem("bäuerin"), "bauerin" );
	deepEqual( Stem("bäuerinnen"), "bauerinn" );
	deepEqual( Stem("bäuerlein"), "bauerlein" );
	deepEqual( Stem("bäuerliche"), "bau" );
	deepEqual( Stem("bäuerlichen"), "bau" );
	deepEqual( Stem("bäuerlicher"), "bau" );
	deepEqual( Stem("bauern"), "bau" );
	deepEqual( Stem("bauerngehöftes"), "bauerngehoft" );
	deepEqual( Stem("bauernhand"), "bauernhand" );
	deepEqual( Stem("bauernhause"), "bauernhaus" );
	deepEqual( Stem("bauernhof"), "bauernhof" );
	deepEqual( Stem("bauernhöfe"), "bauernhof" );
	deepEqual( Stem("bauernklotzes"), "bauernklotz" );
	deepEqual( Stem("bauernknecht"), "bauernknecht" );
	deepEqual( Stem("bauernmadl"), "bauernmadl" );
	deepEqual( Stem("bauernpack"), "bauernpack" );
	deepEqual( Stem("bauernregeln"), "bauernregeln" );
	deepEqual( Stem("bauernsohn"), "bauernsohn" );
	deepEqual( Stem("bauernstube"), "bauernstub" );
	deepEqual( Stem("bauernwirt"), "bauernwirt" );
	deepEqual( Stem("bauers"), "bau" );
	deepEqual( Stem("bauersleute"), "bauersleut" );
	deepEqual( Stem("bauersmann"), "bauersmann" );
	deepEqual( Stem("bauerssohn"), "bauerssohn" );
	deepEqual( Stem("baues"), "bau" );
	deepEqual( Stem("bauet"), "bauet" );
	deepEqual( Stem("bauete"), "bauet" );
	deepEqual( Stem("baufälliges"), "baufall" );
	deepEqual( Stem("baulichkeiten"), "baulich" );
	deepEqual( Stem("baum"), "baum" );
	deepEqual( Stem("baumast"), "baumast" );
	deepEqual( Stem("baumblätter"), "baumblatt" );
	deepEqual( Stem("bäumchen"), "baumch" );
	deepEqual( Stem("baume"), "baum" );
	deepEqual( Stem("bäume"), "baum" );
	deepEqual( Stem("baumeln"), "baumeln" );
	deepEqual( Stem("baumelnd"), "baumelnd" );
	deepEqual( Stem("baumelte"), "baumelt" );
	deepEqual( Stem("bäumen"), "baum" );
	deepEqual( Stem("baumes"), "baum" );
	deepEqual( Stem("baumgespenster"), "baumgespen" );
	deepEqual( Stem("baumhöhe"), "baumhoh" );
	deepEqual( Stem("baumklötze"), "baumklotz" );
	deepEqual( Stem("baumknospen"), "baumknosp" );
	deepEqual( Stem("baumstamm"), "baumstamm" );
	deepEqual( Stem("baumstamme"), "baumstamm" );
	deepEqual( Stem("baumstöcke"), "baumstock" );
	deepEqual( Stem("baumstumpf"), "baumstumpf" );
	deepEqual( Stem("baumwipfel"), "baumwipfel" );
	deepEqual( Stem("baumwipfeln"), "baumwipfeln" );
	deepEqual( Stem("baumwolle"), "baumwoll" );
	deepEqual( Stem("baumwollene"), "baumwoll" );
	deepEqual( Stem("baumwurzel"), "baumwurzel" );
	deepEqual( Stem("bäurin"), "baurin" );
	deepEqual( Stem("baut"), "baut" );
	deepEqual( Stem("baute"), "baut" );
	deepEqual( Stem("bauten"), "baut" );
	deepEqual( Stem("bauverständiger"), "bauverstand" );
	deepEqual( Stem("bauwerk"), "bauwerk" );
	deepEqual( Stem("bauz"), "bauz" );
	deepEqual( Stem("bayer"), "bay" );
	deepEqual( Stem("bayerischer"), "bayer" );
	deepEqual( Stem("bayern"), "bay" );
	deepEqual( Stem("bayers"), "bay" );
	deepEqual( Stem("baz"), "baz" );
	deepEqual( Stem("bdellium"), "bdellium" );
	deepEqual( Stem("be"), "be" );
	deepEqual( Stem("bea"), "bea" );
	deepEqual( Stem("beabsichtige"), "beabsicht" );
	deepEqual( Stem("beabsichtigen"), "beabsicht" );
	deepEqual( Stem("beabsichtigt"), "beabsichtigt" );
	deepEqual( Stem("beabsichtigte"), "beabsichtigt" );
	deepEqual( Stem("beabsichtigten"), "beabsichtigt" );
	deepEqual( Stem("beachte"), "beacht" );
	deepEqual( Stem("beachten"), "beacht" );
	deepEqual( Stem("beachtet"), "beachtet" );
	deepEqual( Stem("beachtete"), "beachtet" );
	deepEqual( Stem("beachteten"), "beachtet" );
	deepEqual( Stem("beachtung"), "beachtung" );
	deepEqual( Stem("beamte"), "beamt" );
	deepEqual( Stem("beamten"), "beamt" );
	deepEqual( Stem("beamtenschaft"), "beamtenschaft" );
	deepEqual( Stem("beamtenstellen"), "beamtenstell" );
	deepEqual( Stem("beamtenwelt"), "beamtenwelt" );
	deepEqual( Stem("beamter"), "beamt" );
	deepEqual( Stem("beängstigt"), "beangstigt" );
	deepEqual( Stem("beängstigung"), "beangstig" );
	deepEqual( Stem("beanstanden"), "beanstand" );
	deepEqual( Stem("beantworten"), "beantwort" );
	deepEqual( Stem("beantwortete"), "beantwortet" );
	deepEqual( Stem("beantwortung"), "beantwort" );
	deepEqual( Stem("bearbeiten"), "bearbeit" );
	deepEqual( Stem("bearbeitend"), "bearbeit" );
	deepEqual( Stem("bearbeitet"), "bearbeitet" );
	deepEqual( Stem("bearbeitung"), "bearbeit" );
	deepEqual( Stem("beatrix"), "beatrix" );
	deepEqual( Stem("beaufsichtigen"), "beaufsicht" );
	deepEqual( Stem("beaufsichtigungsrecht"), "beaufsichtigungsrecht" );
	deepEqual( Stem("beauftragen"), "beauftrag" );
	deepEqual( Stem("beauftragt"), "beauftragt" );
	deepEqual( Stem("beauftragte"), "beauftragt" );
	deepEqual( Stem("beauftragter"), "beauftragt" );
	deepEqual( Stem("bebauen"), "bebau" );
	deepEqual( Stem("bebaut"), "bebaut" );
	deepEqual( Stem("bebaute"), "bebaut" );
	deepEqual( Stem("bebauung"), "bebau" );
	deepEqual( Stem("beben"), "beb" );
	deepEqual( Stem("bebend"), "bebend" );
	deepEqual( Stem("beblühte"), "bebluht" );
	deepEqual( Stem("bebte"), "bebt" );
	deepEqual( Stem("becher"), "bech" );
	deepEqual( Stem("becken"), "beck" );
	deepEqual( Stem("bedacht"), "bedacht" );
	deepEqual( Stem("bedachte"), "bedacht" );
	deepEqual( Stem("bedachtem"), "bedacht" );
	deepEqual( Stem("bedächtig"), "bedacht" );
	deepEqual( Stem("bedachtlosen"), "bedachtlos" );
	deepEqual( Stem("bedachtsam"), "bedachtsam" );
	deepEqual( Stem("bedanke"), "bedank" );
	deepEqual( Stem("bedanken"), "bedank" );
	deepEqual( Stem("bedankt"), "bedankt" );
	deepEqual( Stem("bedankten"), "bedankt" );
	deepEqual( Stem("bedarf"), "bedarf" );
	deepEqual( Stem("bedauere"), "bedau" );
	deepEqual( Stem("bedauerlich"), "bedau" );
	deepEqual( Stem("bedauern"), "bedau" );
	deepEqual( Stem("bedauernswerter"), "bedauernswert" );
	deepEqual( Stem("bedauerte"), "bedauert" );
	deepEqual( Stem("bedecken"), "bedeck" );
	deepEqual( Stem("bedeckt"), "bedeckt" );
	deepEqual( Stem("bedeckte"), "bedeckt" );
	deepEqual( Stem("bedeckten"), "bedeckt" );
	deepEqual( Stem("bedeckung"), "bedeck" );
	deepEqual( Stem("bedenke"), "bedenk" );
	deepEqual( Stem("bedenken"), "bedenk" );
	deepEqual( Stem("bedenkendie"), "bedenkendi" );
	deepEqual( Stem("bedenklich"), "bedenk" );
	deepEqual( Stem("bedenkliche"), "bedenk" );
	deepEqual( Stem("bedenklichen"), "bedenk" );
	deepEqual( Stem("bedenklicher"), "bedenk" );
	deepEqual( Stem("bedenklichsten"), "bedenk" );
	deepEqual( Stem("bedenkt"), "bedenkt" );
	deepEqual( Stem("bedeute"), "bedeut" );
	deepEqual( Stem("bedeuten"), "bedeut" );
	deepEqual( Stem("bedeutend"), "bedeut" );
	deepEqual( Stem("bedeutende"), "bedeut" );
	deepEqual( Stem("bedeutenden"), "bedeut" );
	deepEqual( Stem("bedeutendsten"), "bedeut" );
	deepEqual( Stem("bedeutet"), "bedeutet" );
	deepEqual( Stem("bedeutete"), "bedeutet" );
	deepEqual( Stem("bedeuteten"), "bedeutet" );
	deepEqual( Stem("bedeutsam"), "bedeutsam" );
	deepEqual( Stem("bedeutsames"), "bedeutsam" );
	deepEqual( Stem("bedeutsamkeit"), "bedeutsam" );
	deepEqual( Stem("bedeutsamsten"), "bedeutsam" );
	deepEqual( Stem("bedeutung"), "bedeut" );
	deepEqual( Stem("bedeutungen"), "bedeut" );
	deepEqual( Stem("bedeutungslos"), "bedeutungslos" );
	deepEqual( Stem("bedeutungslose"), "bedeutungslos" );
	deepEqual( Stem("bedeutungsvollen"), "bedeutungsvoll" );
	deepEqual( Stem("bediene"), "bedi" );
	deepEqual( Stem("bedienen"), "bedi" );
	deepEqual( Stem("bedient"), "bedient" );
	deepEqual( Stem("bediente"), "bedient" );
	deepEqual( Stem("bedienten"), "bedient" );
	deepEqual( Stem("bedienung"), "bedien" );
	deepEqual( Stem("bedinge"), "beding" );
	deepEqual( Stem("bedingt"), "bedingt" );
	deepEqual( Stem("bedingte"), "bedingt" );
	deepEqual( Stem("bedingten"), "bedingt" );
	deepEqual( Stem("bedingter"), "bedingt" );
	deepEqual( Stem("bedingung"), "beding" );
	deepEqual( Stem("bedingungen"), "beding" );
	deepEqual( Stem("bedrängen"), "bedrang" );
	deepEqual( Stem("bedrängt"), "bedrangt" );
	deepEqual( Stem("bedrängte"), "bedrangt" );
	deepEqual( Stem("bedrohete"), "bedrohet" );
	deepEqual( Stem("bedroht"), "bedroht" );
	deepEqual( Stem("bedrohung"), "bedroh" );
	deepEqual( Stem("bedrücken"), "bedruck" );
	deepEqual( Stem("bedrückende"), "bedruck" );
	deepEqual( Stem("bedrückt"), "bedruckt" );
	deepEqual( Stem("bedrückten"), "bedruckt" );
	deepEqual( Stem("beduinen"), "beduin" );
	deepEqual( Stem("bedünken"), "bedunk" );
	deepEqual( Stem("bedünkte"), "bedunkt" );
	deepEqual( Stem("bedürfe"), "bedurf" );
	deepEqual( Stem("bedürfen"), "bedurf" );
	deepEqual( Stem("bedürfnis"), "bedurfnis" );
	deepEqual( Stem("bedürfnisse"), "bedurfnis" );
	deepEqual( Stem("bedürfnissen"), "bedurfnis" );
	deepEqual( Stem("bedürfnisses"), "bedurfnis" );
	deepEqual( Stem("bedurfte"), "bedurft" );
	deepEqual( Stem("bedurften"), "bedurft" );
	deepEqual( Stem("bedürftig"), "bedurft" );
	deepEqual( Stem("bedürftige"), "bedurft" );
	deepEqual( Stem("bedürftiger"), "bedurft" );
	deepEqual( Stem("bedürftiges"), "bedurft" );
	deepEqual( Stem("beeile"), "beeil" );
	deepEqual( Stem("beeilen"), "beeil" );
	deepEqual( Stem("beeilte"), "beeilt" );
	deepEqual( Stem("beeilten"), "beeilt" );
	deepEqual( Stem("beeindruckendsten"), "beeindruck" );
	deepEqual( Stem("beeindruckt"), "beeindruckt" );
	deepEqual( Stem("beeindruckte"), "beeindruckt" );
	deepEqual( Stem("beeinflusst"), "beeinflusst" );
	deepEqual( Stem("beeinflußt"), "beeinflusst" );
	deepEqual( Stem("beeinträchtigen"), "beeintracht" );
	deepEqual( Stem("beenden"), "beend" );
	deepEqual( Stem("beendet"), "beendet" );
	deepEqual( Stem("beendigt"), "beendigt" );
	deepEqual( Stem("beendigung"), "beendig" );
	deepEqual( Stem("beengte"), "beengt" );
	deepEqual( Stem("beengung"), "beengung" );
	deepEqual( Stem("beer"), "beer" );
	deepEqual( Stem("beerchen"), "beerch" );
	deepEqual( Stem("beerdigt"), "beerdigt" );
	deepEqual( Stem("beerdigungsinstitutes"), "beerdigungsinstitut" );
	deepEqual( Stem("beere"), "beer" );
	deepEqual( Stem("beeren"), "beer" );
	deepEqual( Stem("beerenkraut"), "beerenkraut" );
	deepEqual( Stem("beerensträucher"), "beerenstrauch" );
	deepEqual( Stem("beerensträuchern"), "beerenstrauch" );
	deepEqual( Stem("beerscheba"), "beerscheba" );
	deepEqual( Stem("beet"), "beet" );
	deepEqual( Stem("beete"), "beet" );
	deepEqual( Stem("beethovens"), "beethov" );
	deepEqual( Stem("befähigt"), "befahigt" );
	deepEqual( Stem("befahl"), "befahl" );
	deepEqual( Stem("befahlen"), "befahl" );
	deepEqual( Stem("befällt"), "befallt" );
	deepEqual( Stem("befand"), "befand" );
	deepEqual( Stem("befanden"), "befand" );
	deepEqual( Stem("befänden"), "befand" );
	deepEqual( Stem("befangen"), "befang" );
	deepEqual( Stem("befangenheit"), "befang" );
	deepEqual( Stem("befassen"), "befass" );
	deepEqual( Stem("befassend"), "befass" );
	deepEqual( Stem("befassete"), "befasset" );
	deepEqual( Stem("befasst"), "befasst" );
	deepEqual( Stem("befehden"), "befehd" );
	deepEqual( Stem("befehl"), "befehl" );
	deepEqual( Stem("befehle"), "befehl" );
	deepEqual( Stem("befehlen"), "befehl" );
	deepEqual( Stem("befehls"), "befehl" );
	deepEqual( Stem("befehlsartig"), "befehlsart" );
	deepEqual( Stem("befehlshaber"), "befehlshab" );
	deepEqual( Stem("befehlt"), "befehlt" );
	deepEqual( Stem("befestigen"), "befest" );
	deepEqual( Stem("befestigt"), "befestigt" );
	deepEqual( Stem("befestigte"), "befestigt" );
	deepEqual( Stem("befestigten"), "befestigt" );
	deepEqual( Stem("befiel"), "befiel" );
	deepEqual( Stem("befinde"), "befind" );
	deepEqual( Stem("befinden"), "befind" );
	deepEqual( Stem("befindet"), "befindet" );
	deepEqual( Stem("befindliche"), "befind" );
	deepEqual( Stem("befindlichen"), "befind" );
	deepEqual( Stem("befleckt"), "befleckt" );
	deepEqual( Stem("befleissigt"), "befleissigt" );
	deepEqual( Stem("befleissigte"), "befleissigt" );
	deepEqual( Stem("beflissen"), "befliss" );
	deepEqual( Stem("beflügeltes"), "beflugelt" );
	deepEqual( Stem("befohlen"), "befohl" );
	deepEqual( Stem("befolgen"), "befolg" );
	deepEqual( Stem("befolgt"), "befolgt" );
	deepEqual( Stem("befolgte"), "befolgt" );
	deepEqual( Stem("befolgten"), "befolgt" );
	deepEqual( Stem("befolgung"), "befolg" );
	deepEqual( Stem("beförderlich"), "beford" );
	deepEqual( Stem("befördern"), "beford" );
	deepEqual( Stem("befördert"), "befordert" );
	deepEqual( Stem("beförderung"), "beforder" );
	deepEqual( Stem("beförderungsmittel"), "beforderungsmittel" );
	deepEqual( Stem("befrachten"), "befracht" );
	deepEqual( Stem("befrage"), "befrag" );
	deepEqual( Stem("befragen"), "befrag" );
	deepEqual( Stem("befragt"), "befragt" );
	deepEqual( Stem("befragungen"), "befrag" );
	deepEqual( Stem("befreie"), "befrei" );
	deepEqual( Stem("befreien"), "befrei" );
	deepEqual( Stem("befreit"), "befreit" );
	deepEqual( Stem("befreite"), "befreit" );
	deepEqual( Stem("befreiung"), "befreiung" );
	deepEqual( Stem("befremden"), "befremd" );
	deepEqual( Stem("befremdet"), "befremdet" );
	deepEqual( Stem("befreundet"), "befreundet" );
	deepEqual( Stem("befriedigen"), "befried" );
	deepEqual( Stem("befriedigt"), "befriedigt" );
	deepEqual( Stem("befriedigte"), "befriedigt" );
	deepEqual( Stem("befriedigten"), "befriedigt" );
	deepEqual( Stem("befriedigung"), "befried" );
	deepEqual( Stem("befristet"), "befristet" );
	deepEqual( Stem("befruchten"), "befrucht" );
	deepEqual( Stem("befruchtet"), "befruchtet" );
	deepEqual( Stem("befruchtung"), "befrucht" );
	deepEqual( Stem("befruchtungen"), "befrucht" );
	deepEqual( Stem("befugnis"), "befugnis" );
	deepEqual( Stem("befugnisse"), "befugnis" );
	deepEqual( Stem("befugt"), "befugt" );
	deepEqual( Stem("befühlt"), "befuhlt" );
	deepEqual( Stem("befühlten"), "befuhlt" );
	deepEqual( Stem("befunden"), "befund" );
	deepEqual( Stem("befürchten"), "befurcht" );
	deepEqual( Stem("befürchtend"), "befurcht" );
	deepEqual( Stem("befürchtete"), "befurchtet" );
	deepEqual( Stem("befürchteten"), "befurchtet" );
	deepEqual( Stem("befürchtung"), "befurcht" );
	deepEqual( Stem("befürchtungen"), "befurcht" );
	deepEqual( Stem("begab"), "begab" );
	deepEqual( Stem("begaben"), "begab" );
	deepEqual( Stem("begabt"), "begabt" );
	deepEqual( Stem("begabteste"), "begabt" );
	deepEqual( Stem("begangen"), "begang" );
	deepEqual( Stem("begangene"), "begang" );
	deepEqual( Stem("begangenen"), "begang" );
	deepEqual( Stem("begann"), "begann" );
	deepEqual( Stem("begannen"), "begann" );
	deepEqual( Stem("begeben"), "begeb" );
	deepEqual( Stem("begebend"), "begeb" );
	deepEqual( Stem("begebenheit"), "begeb" );
	deepEqual( Stem("begebenheiten"), "begeb" );
	deepEqual( Stem("begegnen"), "begegn" );
	deepEqual( Stem("begegnet"), "begegnet" );
	deepEqual( Stem("begegnete"), "begegnet" );
	deepEqual( Stem("begegneten"), "begegnet" );
	deepEqual( Stem("begegnung"), "begegn" );
	deepEqual( Stem("begegnungen"), "begegn" );
	deepEqual( Stem("begehen"), "begeh" );
	deepEqual( Stem("begehre"), "begehr" );
	deepEqual( Stem("begehren"), "begehr" );
	deepEqual( Stem("begehrens"), "begehr" );
	deepEqual( Stem("begehrenswert"), "begehrenswert" );
	deepEqual( Stem("begehret"), "begehret" );
	deepEqual( Stem("begehrlichkeit"), "begehr" );
	deepEqual( Stem("begehrt"), "begehrt" );
	deepEqual( Stem("begehrte"), "begehrt" );
	deepEqual( Stem("begehrten"), "begehrt" );
	deepEqual( Stem("begehrung"), "begehr" );
	deepEqual( Stem("begehrungen"), "begehr" );
	deepEqual( Stem("begehrungs"), "begehr" );
	deepEqual( Stem("begehrungsvermögen"), "begehrungsvermog" );
	deepEqual( Stem("begehrungsvermögens"), "begehrungsvermog" );
	deepEqual( Stem("begeht"), "begeht" );
	deepEqual( Stem("begeistert"), "begeistert" );
	deepEqual( Stem("begeisterung"), "begeister" );
	deepEqual( Stem("begeisterungsstürmen"), "begeisterungssturm" );
	deepEqual( Stem("begib"), "begib" );
	deepEqual( Stem("begibt"), "begibt" );
	deepEqual( Stem("begiedren"), "begiedr" );
	deepEqual( Stem("begierde"), "begierd" );
	deepEqual( Stem("begierden"), "begierd" );
	deepEqual( Stem("begierig"), "begier" );
	deepEqual( Stem("begierigen"), "begier" );
	deepEqual( Stem("begieriger"), "begier" );
	deepEqual( Stem("begiessen"), "begiess" );
	deepEqual( Stem("begine"), "begin" );
	deepEqual( Stem("beging"), "beging" );
	deepEqual( Stem("beginn"), "beginn" );
	deepEqual( Stem("beginne"), "beginn" );
	deepEqual( Stem("beginnen"), "beginn" );
	deepEqual( Stem("beginnt"), "beginnt" );
	deepEqual( Stem("beglaubigen"), "beglaub" );
	deepEqual( Stem("beglaubigt"), "beglaubigt" );
	deepEqual( Stem("beglaubigte"), "beglaubigt" );
	deepEqual( Stem("begleiten"), "begleit" );
	deepEqual( Stem("begleitend"), "begleit" );
	deepEqual( Stem("begleiter"), "begleit" );
	deepEqual( Stem("begleitern"), "begleit" );
	deepEqual( Stem("begleiters"), "begleit" );
	deepEqual( Stem("begleitet"), "begleitet" );
	deepEqual( Stem("begleitete"), "begleitet" );
	deepEqual( Stem("begleiteten"), "begleitet" );
	deepEqual( Stem("begleitherren"), "begleitherr" );
	deepEqual( Stem("begleitung"), "begleit" );
	deepEqual( Stem("beglücken"), "begluck" );
	deepEqual( Stem("beglückte"), "begluckt" );
	deepEqual( Stem("beglückwünschen"), "begluckwunsch" );
	deepEqual( Stem("begnüge"), "begnug" );
	deepEqual( Stem("begnügt"), "begnugt" );
	deepEqual( Stem("begnügte"), "begnugt" );
	deepEqual( Stem("begonnen"), "begonn" );
	deepEqual( Stem("begoss"), "begoss" );
	deepEqual( Stem("begossenen"), "begoss" );
	deepEqual( Stem("begraben"), "begrab" );
	deepEqual( Stem("begräbnis"), "begrabnis" );
	deepEqual( Stem("begräbnisse"), "begrabnis" );
	deepEqual( Stem("begrasten"), "begrast" );
	deepEqual( Stem("begreif"), "begreif" );
	deepEqual( Stem("begreife"), "begreif" );
	deepEqual( Stem("begreifen"), "begreif" );
	deepEqual( Stem("begreiflich"), "begreif" );
	deepEqual( Stem("begreiflichen"), "begreif" );
	deepEqual( Stem("begreiflicher"), "begreif" );
	deepEqual( Stem("begreiflichkeit"), "begreif" );
	deepEqual( Stem("begreift"), "begreift" );
	deepEqual( Stem("begrenzen"), "begrenz" );
	deepEqual( Stem("begrenzt"), "begrenzt" );
	deepEqual( Stem("begrenzte"), "begrenzt" );
	deepEqual( Stem("begrenztheit"), "begrenzt" );
	deepEqual( Stem("begrenzung"), "begrenz" );
	deepEqual( Stem("begriff"), "begriff" );
	deepEqual( Stem("begriffe"), "begriff" );
	deepEqual( Stem("begriffen"), "begriff" );
	deepEqual( Stem("begriffener"), "begriff" );
	deepEqual( Stem("begriffenes"), "begriff" );
	deepEqual( Stem("begriffes"), "begriff" );
	deepEqual( Stem("begriffs"), "begriff" );
	deepEqual( Stem("begriffsstutziger"), "begriffsstutz" );
	deepEqual( Stem("begriffsverhältnisse"), "begriffsverhaltnis" );
	deepEqual( Stem("begrub"), "begrub" );
	deepEqual( Stem("begruben"), "begrub" );
	deepEqual( Stem("begründe"), "begrund" );
	deepEqual( Stem("begründen"), "begrund" );
	deepEqual( Stem("begründendem"), "begrund" );
	deepEqual( Stem("begründendes"), "begrund" );
	deepEqual( Stem("begründet"), "begrundet" );
	deepEqual( Stem("begründete"), "begrundet" );
	deepEqual( Stem("begründeten"), "begrundet" );
	deepEqual( Stem("begründung"), "begrund" );
	deepEqual( Stem("begründungen"), "begrund" );
	deepEqual( Stem("begrüssen"), "begruss" );
	deepEqual( Stem("begrüßen"), "begruss" );
	deepEqual( Stem("begrüssend"), "begruss" );
	deepEqual( Stem("begrüssenden"), "begruss" );
	deepEqual( Stem("begrüsst"), "begrusst" );
	deepEqual( Stem("begrüßt"), "begrusst" );
	deepEqual( Stem("begrüsste"), "begrusst" );
	deepEqual( Stem("begrüssten"), "begrusst" );
	deepEqual( Stem("begrüssung"), "begruss" );
	deepEqual( Stem("begrüßung"), "begruss" );
	deepEqual( Stem("begrüssungsknicks"), "begrussungsknick" );
	deepEqual( Stem("begucken"), "beguck" );
	deepEqual( Stem("beguckten"), "beguckt" );
	deepEqual( Stem("begünstigen"), "begunst" );
	deepEqual( Stem("begünstigt"), "begunstigt" );
	deepEqual( Stem("begünstigte"), "begunstigt" );
	deepEqual( Stem("begünstigung"), "begunst" );
	deepEqual( Stem("begürtet"), "begurtet" );
	deepEqual( Stem("begürtete"), "begurtet" );
	deepEqual( Stem("begüterte"), "begutert" );
	deepEqual( Stem("behaarung"), "behaar" );
	deepEqual( Stem("behaftet"), "behaftet" );
	deepEqual( Stem("behagen"), "behag" );
	deepEqual( Stem("behaglich"), "behag" );
	deepEqual( Stem("behaglicher"), "behag" );
	deepEqual( Stem("behagliches"), "behag" );
	deepEqual( Stem("behaglichkeit"), "behag" );
	deepEqual( Stem("behagte"), "behagt" );
	deepEqual( Stem("behagten"), "behagt" );
	deepEqual( Stem("behält"), "behalt" );
	deepEqual( Stem("behalte"), "behalt" );
	deepEqual( Stem("behalten"), "behalt" );
	deepEqual( Stem("behälter"), "behalt" );
	deepEqual( Stem("behältern"), "behalt" );
	deepEqual( Stem("behaltet"), "behaltet" );
	deepEqual( Stem("behältnis"), "behaltnis" );
	deepEqual( Stem("behältnisse"), "behaltnis" );
	deepEqual( Stem("behandeln"), "behandeln" );
	deepEqual( Stem("behandelt"), "behandelt" );
	deepEqual( Stem("behandelte"), "behandelt" );
	deepEqual( Stem("behandelten"), "behandelt" );
	deepEqual( Stem("behandle"), "behandl" );
	deepEqual( Stem("behandlung"), "behandl" );
	deepEqual( Stem("behängt"), "behangt" );
	deepEqual( Stem("beharre"), "beharr" );
	deepEqual( Stem("beharren"), "beharr" );
	deepEqual( Stem("beharrlich"), "beharr" );
	deepEqual( Stem("beharrlichkeit"), "beharr" );
	deepEqual( Stem("beharrt"), "beharrt" );
	deepEqual( Stem("beharrte"), "beharrt" );
	deepEqual( Stem("beharrungsvermögen"), "beharrungsvermog" );
	deepEqual( Stem("behauchten"), "behaucht" );
	deepEqual( Stem("behaupte"), "behaupt" );
	deepEqual( Stem("behaupten"), "behaupt" );
	deepEqual( Stem("behauptend"), "behaupt" );
	deepEqual( Stem("behauptet"), "behauptet" );
	deepEqual( Stem("behauptete"), "behauptet" );
	deepEqual( Stem("behaupteten"), "behauptet" );
	deepEqual( Stem("behauptung"), "behaupt" );
	deepEqual( Stem("behauptungen"), "behaupt" );
	deepEqual( Stem("behausung"), "behaus" );
	deepEqual( Stem("behelfen"), "behelf" );
	deepEqual( Stem("behende"), "behend" );
	deepEqual( Stem("beherbergen"), "beherberg" );
	deepEqual( Stem("beherbergte"), "beherbergt" );
	deepEqual( Stem("beherrschen"), "beherrsch" );
	deepEqual( Stem("beherrschend"), "beherrsch" );
	deepEqual( Stem("beherrschenden"), "beherrsch" );
	deepEqual( Stem("beherrscht"), "beherrscht" );
	deepEqual( Stem("beherrschte"), "beherrscht" );
	deepEqual( Stem("beherrschung"), "beherrsch" );
	deepEqual( Stem("beherzten"), "beherzt" );
	deepEqual( Stem("beherzter"), "beherzt" );
	deepEqual( Stem("behielt"), "behielt" );
	deepEqual( Stem("behilflich"), "behilf" );
	deepEqual( Stem("behindern"), "behind" );
	deepEqual( Stem("behindert"), "behindert" );
	deepEqual( Stem("behörde"), "behord" );
	deepEqual( Stem("behörden"), "behord" );
	deepEqual( Stem("behuf"), "behuf" );
	deepEqual( Stem("behufe"), "behuf" );
	deepEqual( Stem("behufs"), "behuf" );
	deepEqual( Stem("behüt"), "behut" );
	deepEqual( Stem("behüte"), "behut" );
	deepEqual( Stem("behüten"), "behut" );
	deepEqual( Stem("behütet"), "behutet" );
	deepEqual( Stem("behutsam"), "behutsam" );
	deepEqual( Stem("behutsames"), "behutsam" );
	deepEqual( Stem("bei"), "bei" );
	deepEqual( Stem("beibehalten"), "beibehalt" );
	deepEqual( Stem("beibehaltender"), "beibehalt" );
	deepEqual( Stem("beibrachte"), "beibracht" );
	deepEqual( Stem("beibringen"), "beibring" );
	deepEqual( Stem("beichte"), "beicht" );
	deepEqual( Stem("beichtete"), "beichtet" );
	deepEqual( Stem("beichtstuhl"), "beichtstuhl" );
	deepEqual( Stem("beide"), "beid" );
	deepEqual( Stem("beiden"), "beid" );
	deepEqual( Stem("beider"), "beid" );
	deepEqual( Stem("beiderlei"), "beiderlei" );
	deepEqual( Stem("beiderseitig"), "beiderseit" );
	deepEqual( Stem("beiderseits"), "beiderseit" );
	deepEqual( Stem("beides"), "beid" );
	deepEqual( Stem("beieinander"), "beieinand" );
	deepEqual( Stem("beifall"), "beifall" );
	deepEqual( Stem("beifälligem"), "beifall" );
	deepEqual( Stem("beifälliges"), "beifall" );
	deepEqual( Stem("beifallklatschen"), "beifallklatsch" );
	deepEqual( Stem("beifalls"), "beifall" );
	deepEqual( Stem("beifallsgeschrei"), "beifallsgeschrei" );
	deepEqual( Stem("beifügen"), "beifug" );
	deepEqual( Stem("beifügten"), "beifugt" );
	deepEqual( Stem("beigebracht"), "beigebracht" );
	deepEqual( Stem("beigefallen"), "beigefall" );
	deepEqual( Stem("beigefügt"), "beigefugt" );
	deepEqual( Stem("beigegeben"), "beigegeb" );
	deepEqual( Stem("beigegebene"), "beigegeb" );
	deepEqual( Stem("beigegebenes"), "beigegeb" );
	deepEqual( Stem("beigelegt"), "beigelegt" );
	deepEqual( Stem("beigemessen"), "beigemess" );
	deepEqual( Stem("beigemischt"), "beigemischt" );
	deepEqual( Stem("beigeordnet"), "beigeordnet" );
	deepEqual( Stem("beigesellen"), "beigesell" );
	deepEqual( Stem("beigesellet"), "beigesellet" );
	deepEqual( Stem("beigesellt"), "beigesellt" );
	deepEqual( Stem("beigesellte"), "beigesellt" );
	deepEqual( Stem("beigesellten"), "beigesellt" );
	deepEqual( Stem("beigesellung"), "beigesell" );
	deepEqual( Stem("beigesetzt"), "beigesetzt" );
	deepEqual( Stem("beigesteckt"), "beigesteckt" );
	deepEqual( Stem("beigestimmt"), "beigestimmt" );
	deepEqual( Stem("beigewohnt"), "beigewohnt" );
	deepEqual( Stem("beihilfe"), "beihilf" );
	deepEqual( Stem("beikommen"), "beikomm" );
	deepEqual( Stem("beile"), "beil" );
	deepEqual( Stem("beilege"), "beileg" );
	deepEqual( Stem("beilegen"), "beileg" );
	deepEqual( Stem("beilegt"), "beilegt" );
	deepEqual( Stem("beilegte"), "beilegt" );
	deepEqual( Stem("beilegung"), "beileg" );
	deepEqual( Stem("beileib"), "beileib" );
	deepEqual( Stem("beiliegend"), "beilieg" );
	deepEqual( Stem("beim"), "beim" );
	deepEqual( Stem("beimessen"), "beimess" );
	deepEqual( Stem("beimischung"), "beimisch" );
	deepEqual( Stem("bein"), "bein" );
	deepEqual( Stem("beinah"), "beinah" );
	deepEqual( Stem("beinahe"), "beinah" );
	deepEqual( Stem("beinamen"), "beinam" );
	deepEqual( Stem("beinchen"), "beinch" );
	deepEqual( Stem("beinchenende"), "beinchen" );
	deepEqual( Stem("beincheneroberung"), "beinchenerober" );
	deepEqual( Stem("beinchengeschichte"), "beinchengeschicht" );
	deepEqual( Stem("beinchens"), "beinch" );
	deepEqual( Stem("beine"), "bein" );
	deepEqual( Stem("beinen"), "bein" );
	deepEqual( Stem("beines"), "bein" );
	deepEqual( Stem("beinkleider"), "beinkleid" );
	deepEqual( Stem("beinkleidern"), "beinkleid" );
	deepEqual( Stem("beinwerks"), "beinwerk" );
	deepEqual( Stem("beirrte"), "beirrt" );
	deepEqual( Stem("beisammen"), "beisamm" );
	deepEqual( Stem("beisatz"), "beisatz" );
	deepEqual( Stem("beiseit"), "beiseit" );
	deepEqual( Stem("beiseite"), "beiseit" );
	deepEqual( Stem("beispiel"), "beispiel" );
	deepEqual( Stem("beispiele"), "beispiel" );
	deepEqual( Stem("beispielen"), "beispiel" );
	deepEqual( Stem("beispielsweise"), "beispielsweis" );
	deepEqual( Stem("beissbares"), "beissbar" );
	deepEqual( Stem("beissen"), "beiss" );
	deepEqual( Stem("beißen"), "beiss" );
	deepEqual( Stem("beissend"), "beissend" );
	deepEqual( Stem("beißend"), "beissend" );
	deepEqual( Stem("beissenden"), "beissend" );
	deepEqual( Stem("beisst"), "beisst" );
	deepEqual( Stem("beißt"), "beisst" );
	deepEqual( Stem("beistand"), "beistand" );
	deepEqual( Stem("beistehen"), "beisteh" );
	deepEqual( Stem("beisteher"), "beisteh" );
	deepEqual( Stem("beistimmendes"), "beistimm" );
	deepEqual( Stem("beistimmt"), "beistimmt" );
	deepEqual( Stem("beistimmte"), "beistimmt" );
	deepEqual( Stem("beistimmung"), "beistimm" );
	deepEqual( Stem("beitrag"), "beitrag" );
	deepEqual( Stem("beitragen"), "beitrag" );
	deepEqual( Stem("beitritt"), "beitritt" );
	deepEqual( Stem("beitritte"), "beitritt" );
	deepEqual( Stem("beiwohnen"), "beiwohn" );
	deepEqual( Stem("beizeiten"), "beizeit" );
	deepEqual( Stem("beizte"), "beizt" );
	deepEqual( Stem("beizubringen"), "beizubring" );
	deepEqual( Stem("beizulegen"), "beizuleg" );
	deepEqual( Stem("beizuspringen"), "beizuspring" );
	deepEqual( Stem("beizustehen"), "beizusteh" );
	deepEqual( Stem("beizusteuern"), "beizusteu" );
	deepEqual( Stem("beizutragen"), "beizutrag" );
	deepEqual( Stem("beizutreiben"), "beizutreib" );
	deepEqual( Stem("beizutreten"), "beizutret" );
	deepEqual( Stem("beizuwohnen"), "beizuwohn" );
	deepEqual( Stem("bejahend"), "bejah" );
	deepEqual( Stem("bejahrten"), "bejahrt" );
	deepEqual( Stem("bejahung"), "bejah" );
	deepEqual( Stem("bekam"), "bekam" );
	deepEqual( Stem("bekäme"), "bekam" );
	deepEqual( Stem("bekamen"), "bekam" );
	deepEqual( Stem("bekämen"), "bekam" );
	deepEqual( Stem("bekämpfen"), "bekampf" );
	deepEqual( Stem("bekämpft"), "bekampft" );
	deepEqual( Stem("bekämpfung"), "bekampf" );
	deepEqual( Stem("bekannt"), "bekannt" );
	deepEqual( Stem("bekannte"), "bekannt" );
	deepEqual( Stem("bekannten"), "bekannt" );
	deepEqual( Stem("bekanntgeworden"), "bekanntgeword" );
	deepEqual( Stem("bekanntlich"), "bekannt" );
	deepEqual( Stem("bekanntschaft"), "bekanntschaft" );
	deepEqual( Stem("bekanntschaften"), "bekanntschaft" );
	deepEqual( Stem("bekehre"), "bekehr" );
	deepEqual( Stem("bekehren"), "bekehr" );
	deepEqual( Stem("bekehrer"), "bekehr" );
	deepEqual( Stem("bekehret"), "bekehret" );
	deepEqual( Stem("bekehrt"), "bekehrt" );
	deepEqual( Stem("bekehrten"), "bekehrt" );
	deepEqual( Stem("bekehrung"), "bekehr" );
	deepEqual( Stem("bekenne"), "bekenn" );
	deepEqual( Stem("bekennen"), "bekenn" );
	deepEqual( Stem("bekennt"), "bekennt" );
	deepEqual( Stem("bekenntnis"), "bekenntnis" );
	deepEqual( Stem("bekenntnisse"), "bekenntnis" );
	deepEqual( Stem("bekenntnissen"), "bekenntnis" );
	deepEqual( Stem("bekir"), "bekir" );
	deepEqual( Stem("beklagen"), "beklag" );
	deepEqual( Stem("beklagenswert"), "beklagenswert" );
	deepEqual( Stem("beklagt"), "beklagt" );
	deepEqual( Stem("beklagte"), "beklagt" );
	deepEqual( Stem("beklebt"), "beklebt" );
	deepEqual( Stem("bekleiden"), "bekleid" );
	deepEqual( Stem("bekleidet"), "bekleidet" );
	deepEqual( Stem("bekleidete"), "bekleidet" );
	deepEqual( Stem("bekleidung"), "bekleid" );
	deepEqual( Stem("beklemmung"), "beklemm" );
	deepEqual( Stem("beklommen"), "beklomm" );
	deepEqual( Stem("beklommenheit"), "beklomm" );
	deepEqual( Stem("bekomm"), "bekomm" );
	deepEqual( Stem("bekomme"), "bekomm" );
	deepEqual( Stem("bekommen"), "bekomm" );
	deepEqual( Stem("bekommst"), "bekomm" );
	deepEqual( Stem("bekommt"), "bekommt" );
	deepEqual( Stem("beköstigung"), "bekost" );
	deepEqual( Stem("bekräftigt"), "bekraftigt" );
	deepEqual( Stem("bekräftigung"), "bekraft" );
	deepEqual( Stem("bekräftigungen"), "bekraft" );
	deepEqual( Stem("bekränzt"), "bekranzt" );
	deepEqual( Stem("bekreuzte"), "bekreuzt" );
	deepEqual( Stem("bekreuzten"), "bekreuzt" );
	deepEqual( Stem("bekriegten"), "bekriegt" );
	deepEqual( Stem("bekümmern"), "bekumm" );
	deepEqual( Stem("bekümmert"), "bekummert" );
	deepEqual( Stem("bekümmerte"), "bekummert" );
	deepEqual( Stem("beladen"), "belad" );
	deepEqual( Stem("beladenes"), "belad" );
	deepEqual( Stem("belagern"), "belag" );
	deepEqual( Stem("belagert"), "belagert" );
	deepEqual( Stem("belagerung"), "belager" );
	deepEqual( Stem("belanglos"), "belanglos" );
	deepEqual( Stem("belangloseste"), "belanglos" );
	deepEqual( Stem("belangt"), "belangt" );
	deepEqual( Stem("belassen"), "belass" );
	deepEqual( Stem("belastend"), "belast" );
	deepEqual( Stem("belastet"), "belastet" );
	deepEqual( Stem("belastete"), "belastet" );
	deepEqual( Stem("belästigen"), "belast" );
	deepEqual( Stem("belästigt"), "belastigt" );
	deepEqual( Stem("belästigte"), "belastigt" );
	deepEqual( Stem("belastung"), "belast" );
	deepEqual( Stem("belaubte"), "belaubt" );
	deepEqual( Stem("belaubter"), "belaubt" );
	deepEqual( Stem("belebbar"), "belebbar" );
	deepEqual( Stem("belebe"), "beleb" );
	deepEqual( Stem("beleben"), "beleb" );
	deepEqual( Stem("belebende"), "beleb" );
	deepEqual( Stem("belebt"), "belebt" );
	deepEqual( Stem("belebte"), "belebt" );
	deepEqual( Stem("belebtes"), "belebt" );
	deepEqual( Stem("belege"), "beleg" );
	deepEqual( Stem("belegen"), "beleg" );
	deepEqual( Stem("belegexemplar"), "belegexemplar" );
	deepEqual( Stem("belegt"), "belegt" );
	deepEqual( Stem("belehren"), "belehr" );
	deepEqual( Stem("belehrt"), "belehrt" );
	deepEqual( Stem("belehrte"), "belehrt" );
	deepEqual( Stem("belehrung"), "belehr" );
	deepEqual( Stem("beleibt"), "beleibt" );
	deepEqual( Stem("beleibtheit"), "beleibt" );
	deepEqual( Stem("beleidigen"), "beleid" );
	deepEqual( Stem("beleidigend"), "beleid" );
	deepEqual( Stem("beleidigender"), "beleid" );
	deepEqual( Stem("beleidigendste"), "beleid" );
	deepEqual( Stem("beleidigt"), "beleidigt" );
	deepEqual( Stem("beleidigte"), "beleidigt" );
	deepEqual( Stem("beleidigten"), "beleidigt" );
	deepEqual( Stem("beleidigung"), "beleid" );
	deepEqual( Stem("beleidigungen"), "beleid" );
	deepEqual( Stem("beleidung"), "beleid" );
	deepEqual( Stem("beleuchtet"), "beleuchtet" );
	deepEqual( Stem("beleuchtete"), "beleuchtet" );
	deepEqual( Stem("beleuchteten"), "beleuchtet" );
	deepEqual( Stem("beleuchtung"), "beleucht" );
	deepEqual( Stem("belial"), "belial" );
	deepEqual( Stem("belieben"), "belieb" );
	deepEqual( Stem("beliebig"), "belieb" );
	deepEqual( Stem("beliebige"), "belieb" );
	deepEqual( Stem("beliebigen"), "belieb" );
	deepEqual( Stem("beliebt"), "beliebt" );
	deepEqual( Stem("beliebte"), "beliebt" );
	deepEqual( Stem("beliebten"), "beliebt" );
	deepEqual( Stem("beliefen"), "belief" );
	deepEqual( Stem("bellen"), "bell" );
	deepEqual( Stem("bellkommando"), "bellkommando" );
	deepEqual( Stem("bellprobe"), "bellprob" );
	deepEqual( Stem("bellstrophe"), "bellstroph" );
	deepEqual( Stem("bellte"), "bellt" );
	deepEqual( Stem("belobt"), "belobt" );
	deepEqual( Stem("belobte"), "belobt" );
	deepEqual( Stem("belog"), "belog" );
	deepEqual( Stem("belohnen"), "belohn" );
	deepEqual( Stem("belohnt"), "belohnt" );
	deepEqual( Stem("belohnung"), "belohn" );
	deepEqual( Stem("belud"), "belud" );
	deepEqual( Stem("beluden"), "belud" );
	deepEqual( Stem("belüftung"), "beluft" );
	deepEqual( Stem("belügst"), "belug" );
	deepEqual( Stem("belustigen"), "belust" );
	deepEqual( Stem("belustigt"), "belustigt" );
	deepEqual( Stem("belustigten"), "belustigt" );
	deepEqual( Stem("belustigung"), "belust" );
	deepEqual( Stem("bemächtigen"), "bemacht" );
	deepEqual( Stem("bemalt"), "bemalt" );
	deepEqual( Stem("bemalte"), "bemalt" );
	deepEqual( Stem("bemalten"), "bemalt" );
	deepEqual( Stem("bemaltes"), "bemalt" );
	deepEqual( Stem("bemassen"), "bemass" );
	deepEqual( Stem("bemerke"), "bemerk" );
	deepEqual( Stem("bemerken"), "bemerk" );
	deepEqual( Stem("bemerklich"), "bemerk" );
	deepEqual( Stem("bemerkt"), "bemerkt" );
	deepEqual( Stem("bemerkte"), "bemerkt" );
	deepEqual( Stem("bemerkten"), "bemerkt" );
	deepEqual( Stem("bemerkung"), "bemerk" );
	deepEqual( Stem("bemerkungen"), "bemerk" );
	deepEqual( Stem("bemesset"), "bemesset" );
	deepEqual( Stem("bemitleiden"), "bemitleid" );
	deepEqual( Stem("bemoosten"), "bemoost" );
	deepEqual( Stem("bemühen"), "bemuh" );
	deepEqual( Stem("bemühet"), "bemuhet" );
	deepEqual( Stem("bemüht"), "bemuht" );
	deepEqual( Stem("bemühte"), "bemuht" );
	deepEqual( Stem("bemühung"), "bemuh" );
	deepEqual( Stem("bemühungen"), "bemuh" );
	deepEqual( Stem("ben"), "ben" );
	deepEqual( Stem("benachbarte"), "benachbart" );
	deepEqual( Stem("benachbarten"), "benachbart" );
	deepEqual( Stem("benahm"), "benahm" );
	deepEqual( Stem("benahmen"), "benahm" );
	deepEqual( Stem("benannt"), "benannt" );
	deepEqual( Stem("benannten"), "benannt" );
	deepEqual( Stem("benediktinerpater"), "benediktinerpat" );
	deepEqual( Stem("benediktus"), "benediktus" );
	deepEqual( Stem("benefizanlass"), "benefizanlass" );
	deepEqual( Stem("benehmen"), "benehm" );
	deepEqual( Stem("benehmens"), "benehm" );
	deepEqual( Stem("beneiden"), "beneid" );
	deepEqual( Stem("beneidenswürdige"), "beneidenswurd" );
	deepEqual( Stem("beneidet"), "beneidet" );
	deepEqual( Stem("beneidete"), "beneidet" );
	deepEqual( Stem("benennen"), "benenn" );
	deepEqual( Stem("benennens"), "benenn" );
	deepEqual( Stem("benennung"), "benenn" );
	deepEqual( Stem("benennungen"), "benenn" );
	deepEqual( Stem("benetzt"), "benetzt" );
	deepEqual( Stem("benetzte"), "benetzt" );
	deepEqual( Stem("benieselt"), "benieselt" );
	deepEqual( Stem("benimm"), "benimm" );
	deepEqual( Stem("benimmt"), "benimmt" );
	deepEqual( Stem("benjamin"), "benjamin" );
	deepEqual( Stem("benkert"), "benkert" );
	deepEqual( Stem("benommen"), "benomm" );
	deepEqual( Stem("benötigen"), "benot" );
	deepEqual( Stem("benötigt"), "benotigt" );
	deepEqual( Stem("benötigte"), "benotigt" );
	deepEqual( Stem("benötigten"), "benotigt" );
	deepEqual( Stem("benutzen"), "benutz" );
	deepEqual( Stem("benutzt"), "benutzt" );
	deepEqual( Stem("benutzte"), "benutzt" );
	deepEqual( Stem("benützte"), "benutzt" );
	deepEqual( Stem("benutzten"), "benutzt" );
	deepEqual( Stem("benützten"), "benutzt" );
	deepEqual( Stem("benützung"), "benutz" );
	deepEqual( Stem("beobachte"), "beobacht" );
	deepEqual( Stem("beobachten"), "beobacht" );
	deepEqual( Stem("beobachtens"), "beobacht" );
	deepEqual( Stem("beobachter"), "beobacht" );
	deepEqual( Stem("beobachtet"), "beobachtet" );
	deepEqual( Stem("beobachtete"), "beobachtet" );
	deepEqual( Stem("beobachteten"), "beobachtet" );
	deepEqual( Stem("beobachtung"), "beobacht" );
	deepEqual( Stem("beobachtungen"), "beobacht" );
	deepEqual( Stem("beordert"), "beordert" );
	deepEqual( Stem("bepackt"), "bepackt" );
	deepEqual( Stem("bepflanzt"), "bepflanzt" );
	deepEqual( Stem("bequem"), "bequ" );
	deepEqual( Stem("bequeme"), "bequem" );
	deepEqual( Stem("bequemen"), "bequem" );
	deepEqual( Stem("bequemer"), "bequem" );
	deepEqual( Stem("bequemes"), "bequem" );
	deepEqual( Stem("bequemliche"), "bequem" );
	deepEqual( Stem("bequemlichkeit"), "bequem" );
	deepEqual( Stem("bequemlichkeiten"), "bequem" );
	deepEqual( Stem("bequemte"), "bequemt" );
	deepEqual( Stem("beranger"), "berang" );
	deepEqual( Stem("beraten"), "berat" );
	deepEqual( Stem("berater"), "berat" );
	deepEqual( Stem("beratschlagen"), "beratschlag" );
	deepEqual( Stem("beratschlagt"), "beratschlagt" );
	deepEqual( Stem("beratung"), "berat" );
	deepEqual( Stem("beratungen"), "berat" );
	deepEqual( Stem("beratungsstelle"), "beratungsstell" );
	deepEqual( Stem("beratungsstellen"), "beratungsstell" );
	deepEqual( Stem("berauben"), "beraub" );
	deepEqual( Stem("beraubt"), "beraubt" );
	deepEqual( Stem("beraubte"), "beraubt" );
	deepEqual( Stem("beraubten"), "beraubt" );
	deepEqual( Stem("beraubter"), "beraubt" );
	deepEqual( Stem("beraubung"), "beraub" );
	deepEqual( Stem("berauscht"), "berauscht" );
	deepEqual( Stem("berchtesgaden"), "berchtesgad" );
	deepEqual( Stem("berchtesgadenerland"), "berchtesgadenerland" );
	deepEqual( Stem("berechnet"), "berechnet" );
	deepEqual( Stem("berechnung"), "berechn" );
	deepEqual( Stem("berechtigen"), "berecht" );
	deepEqual( Stem("berechtigt"), "berechtigt" );
	deepEqual( Stem("berechtigung"), "berecht" );
	deepEqual( Stem("bereden"), "bered" );
	deepEqual( Stem("beredet"), "beredet" );
	deepEqual( Stem("beredete"), "beredet" );
	deepEqual( Stem("beredeten"), "beredet" );
	deepEqual( Stem("beredsamkeit"), "beredsam" );
	deepEqual( Stem("beredt"), "beredt" );
	deepEqual( Stem("beredten"), "beredt" );
	deepEqual( Stem("beredteste"), "beredt" );
	deepEqual( Stem("beredung"), "bered" );
	deepEqual( Stem("beredungen"), "bered" );
	deepEqual( Stem("beredungsglauben"), "beredungsglaub" );
	deepEqual( Stem("beredungsglaubens"), "beredungsglaub" );
	deepEqual( Stem("beredungswahrheit"), "beredungswahr" );
	deepEqual( Stem("bereffend"), "bereff" );
	deepEqual( Stem("bereich"), "bereich" );
	deepEqual( Stem("bereichern"), "bereich" );
	deepEqual( Stem("bereichert"), "bereichert" );
	deepEqual( Stem("bereicherten"), "bereichert" );
	deepEqual( Stem("bereicherung"), "bereicher" );
	deepEqual( Stem("bereiften"), "bereift" );
	deepEqual( Stem("bereit"), "bereit" );
	deepEqual( Stem("bereiten"), "bereit" );
	deepEqual( Stem("bereitet"), "bereitet" );
	deepEqual( Stem("bereitete"), "bereitet" );
	deepEqual( Stem("bereiteten"), "bereitet" );
	deepEqual( Stem("bereitlagen"), "bereitlag" );
	deepEqual( Stem("bereitliege"), "bereitlieg" );
	deepEqual( Stem("bereits"), "bereit" );
	deepEqual( Stem("bereitschaft"), "bereitschaft" );
	deepEqual( Stem("bereitstand"), "bereitstand" );
	deepEqual( Stem("bereitstellen"), "bereitstell" );
	deepEqual( Stem("bereitung"), "bereit" );
	deepEqual( Stem("bereitwillig"), "bereitwill" );
	deepEqual( Stem("bereitwilligkeit"), "bereitwill" );
	deepEqual( Stem("bereue"), "bereu" );
	deepEqual( Stem("bereust"), "bereust" );
	deepEqual( Stem("bereut"), "bereut" );
	deepEqual( Stem("bereute"), "bereut" );
	deepEqual( Stem("berg"), "berg" );
	deepEqual( Stem("bergamsel"), "bergamsel" );
	deepEqual( Stem("berge"), "berg" );
	deepEqual( Stem("bergen"), "berg" );
	deepEqual( Stem("bergend"), "bergend" );
	deepEqual( Stem("berges"), "berg" );
	deepEqual( Stem("bergfeuer"), "bergfeu" );
	deepEqual( Stem("bergfeuern"), "bergfeu" );
	deepEqual( Stem("berggeist"), "berggeist" );
	deepEqual( Stem("berggipfel"), "berggipfel" );
	deepEqual( Stem("berggipfels"), "berggipfel" );
	deepEqual( Stem("berghalde"), "berghald" );
	deepEqual( Stem("berghang"), "berghang" );
	deepEqual( Stem("bergherz"), "bergherz" );
	deepEqual( Stem("berghöhlen"), "berghohl" );
	deepEqual( Stem("bergier"), "bergi" );
	deepEqual( Stem("bergigen"), "bergig" );
	deepEqual( Stem("bergkessel"), "bergkessel" );
	deepEqual( Stem("bergkräuter"), "bergkraut" );
	deepEqual( Stem("bergland"), "bergland" );
	deepEqual( Stem("berglüften"), "bergluft" );
	deepEqual( Stem("bergmann"), "bergmann" );
	deepEqual( Stem("bergnase"), "bergnas" );
	deepEqual( Stem("bergnebel"), "bergnebel" );
	deepEqual( Stem("bergraben"), "bergrab" );
	deepEqual( Stem("bergschatten"), "bergschatt" );
	deepEqual( Stem("bergschenke"), "bergschenk" );
	deepEqual( Stem("bergschlucht"), "bergschlucht" );
	deepEqual( Stem("bergschluchten"), "bergschlucht" );
	deepEqual( Stem("bergstämmen"), "bergstamm" );
	deepEqual( Stem("bergsteiger"), "bergsteig" );
	deepEqual( Stem("bergstimmen"), "bergstimm" );
	deepEqual( Stem("bergstock"), "bergstock" );
	deepEqual( Stem("bergwald"), "bergwald" );
	deepEqual( Stem("bergwaldes"), "bergwald" );
	deepEqual( Stem("bergwand"), "bergwand" );
	deepEqual( Stem("bergwasser"), "bergwass" );
	deepEqual( Stem("bergweg"), "bergweg" );
	deepEqual( Stem("bergwege"), "bergweg" );
	deepEqual( Stem("bergwegen"), "bergweg" );
	deepEqual( Stem("bergwellen"), "bergwell" );
	deepEqual( Stem("bergwerk"), "bergwerk" );
	deepEqual( Stem("bergwiesen"), "bergwies" );
	deepEqual( Stem("bergwind"), "bergwind" );
	deepEqual( Stem("bergzinne"), "bergzinn" );
	deepEqual( Stem("berhren"), "berhr" );
	deepEqual( Stem("bericht"), "bericht" );
	deepEqual( Stem("berichte"), "bericht" );
	deepEqual( Stem("berichten"), "bericht" );
	deepEqual( Stem("berichtet"), "berichtet" );
	deepEqual( Stem("berichtete"), "berichtet" );
	deepEqual( Stem("berichtigung"), "bericht" );
	deepEqual( Stem("beriechen"), "beriech" );
	deepEqual( Stem("berief"), "berief" );
	deepEqual( Stem("berieselt"), "berieselt" );
	deepEqual( Stem("berieten"), "beriet" );
	deepEqual( Stem("berlin"), "berlin" );
	deepEqual( Stem("berliner"), "berlin" );
	deepEqual( Stem("berlinfergus"), "berlinfergus" );
	deepEqual( Stem("bern"), "bern" );
	deepEqual( Stem("bernan"), "bernan" );
	deepEqual( Stem("bernard"), "bernard" );
	deepEqual( Stem("berner"), "bern" );
	deepEqual( Stem("bernischen"), "bernisch" );
	deepEqual( Stem("berns"), "bern" );
	deepEqual( Stem("bernstein"), "bernstein" );
	deepEqual( Stem("bernwas"), "bernwas" );
	deepEqual( Stem("berthold"), "berthold" );
	deepEqual( Stem("berücken"), "beruck" );
	deepEqual( Stem("berücksichtigen"), "berucksicht" );
	deepEqual( Stem("berücksichtigt"), "berucksichtigt" );
	deepEqual( Stem("berückt"), "beruckt" );
	deepEqual( Stem("beruf"), "beruf" );
	deepEqual( Stem("berufen"), "beruf" );
	deepEqual( Stem("berufenen"), "beruf" );
	deepEqual( Stem("beruflichen"), "beruf" );
	deepEqual( Stem("berufsabsichten"), "berufsabsicht" );
	deepEqual( Stem("berufsgenossen"), "berufsgenoss" );
	deepEqual( Stem("berufsmäßigen"), "berufsmass" );
	deepEqual( Stem("berufsmäßiger"), "berufsmass" );
	deepEqual( Stem("berufsschulen"), "berufsschul" );
	deepEqual( Stem("berufssoldat"), "berufssoldat" );
	deepEqual( Stem("berufswunsch"), "berufswunsch" );
	deepEqual( Stem("berufung"), "beruf" );
	deepEqual( Stem("beruhe"), "beruh" );
	deepEqual( Stem("beruhen"), "beruh" );
	deepEqual( Stem("beruhenden"), "beruh" );
	deepEqual( Stem("beruhet"), "beruhet" );
	deepEqual( Stem("beruhigen"), "beruh" );
	deepEqual( Stem("beruhigend"), "beruh" );
	deepEqual( Stem("beruhigenden"), "beruh" );
	deepEqual( Stem("beruhigt"), "beruhigt" );
	deepEqual( Stem("beruhigte"), "beruhigt" );
	deepEqual( Stem("beruhigten"), "beruhigt" );
	deepEqual( Stem("beruhigung"), "beruh" );
	deepEqual( Stem("beruhigungsmittel"), "beruhigungsmittel" );
	deepEqual( Stem("berühmen"), "beruhm" );
	deepEqual( Stem("berühmt"), "beruhmt" );
	deepEqual( Stem("berühmte"), "beruhmt" );
	deepEqual( Stem("berühmten"), "beruhmt" );
	deepEqual( Stem("berühmtesten"), "beruhmt" );
	deepEqual( Stem("berühmtheit"), "beruhmt" );
	deepEqual( Stem("berühre"), "beruhr" );
	deepEqual( Stem("berühren"), "beruhr" );
	deepEqual( Stem("berührende"), "beruhr" );
	deepEqual( Stem("berührt"), "beruhrt" );
	deepEqual( Stem("berührte"), "beruhrt" );
	deepEqual( Stem("berührten"), "beruhrt" );
	deepEqual( Stem("berührung"), "beruhr" );
	deepEqual( Stem("beruht"), "beruht" );
	deepEqual( Stem("beruhte"), "beruht" );
	deepEqual( Stem("berusstem"), "berusst" );
	deepEqual( Stem("besäen"), "besa" );
	deepEqual( Stem("besäest"), "besa" );
	deepEqual( Stem("besäet"), "besaet" );
	deepEqual( Stem("besagt"), "besagt" );
	deepEqual( Stem("besagte"), "besagt" );
	deepEqual( Stem("besagtem"), "besagt" );
	deepEqual( Stem("besagten"), "besagt" );
	deepEqual( Stem("besagtes"), "besagt" );
	deepEqual( Stem("besah"), "besah" );
	deepEqual( Stem("besahen"), "besah" );
	deepEqual( Stem("besamen"), "besam" );
	deepEqual( Stem("besamende"), "besam" );
	deepEqual( Stem("besamt"), "besamt" );
	deepEqual( Stem("besänftigen"), "besanft" );
	deepEqual( Stem("besänftigt"), "besanftigt" );
	deepEqual( Stem("besänftigte"), "besanftigt" );
	deepEqual( Stem("besänftigung"), "besanft" );
	deepEqual( Stem("besann"), "besann" );
	deepEqual( Stem("besannen"), "besann" );
	deepEqual( Stem("besass"), "besass" );
	deepEqual( Stem("besaß"), "besass" );
	deepEqual( Stem("besässe"), "besass" );
	deepEqual( Stem("besassen"), "besass" );
	deepEqual( Stem("besaßen"), "besass" );
	deepEqual( Stem("besät"), "besat" );
	deepEqual( Stem("besaufen"), "besauf" );
	deepEqual( Stem("beschädigen"), "beschad" );
	deepEqual( Stem("beschädigt"), "beschadigt" );
	deepEqual( Stem("beschädigte"), "beschadigt" );
	deepEqual( Stem("beschädigten"), "beschadigt" );
	deepEqual( Stem("beschaffen"), "beschaff" );
	deepEqual( Stem("beschaffenen"), "beschaff" );
	deepEqual( Stem("beschaffenheit"), "beschaff" );
	deepEqual( Stem("beschäftige"), "beschaft" );
	deepEqual( Stem("beschäftigen"), "beschaft" );
	deepEqual( Stem("beschäftigt"), "beschaftigt" );
	deepEqual( Stem("beschäftigte"), "beschaftigt" );
	deepEqual( Stem("beschäftigten"), "beschaftigt" );
	deepEqual( Stem("beschäftigter"), "beschaftigt" );
	deepEqual( Stem("beschäftigung"), "beschaft" );
	deepEqual( Stem("beschämen"), "bescham" );
	deepEqual( Stem("beschämt"), "beschamt" );
	deepEqual( Stem("beschämte"), "beschamt" );
	deepEqual( Stem("beschattet"), "beschattet" );
	deepEqual( Stem("beschaulich"), "beschaulich" );
	deepEqual( Stem("beschaulichen"), "beschaulich" );
	deepEqual( Stem("beschaulichkeit"), "beschaulich" );
	deepEqual( Stem("beschaust"), "beschaust" );
	deepEqual( Stem("beschaute"), "beschaut" );
	deepEqual( Stem("bescheid"), "bescheid" );
	deepEqual( Stem("bescheiden"), "bescheid" );
	deepEqual( Stem("bescheidend"), "bescheid" );
	deepEqual( Stem("bescheidenem"), "bescheid" );
	deepEqual( Stem("bescheidenen"), "bescheid" );
	deepEqual( Stem("bescheidener"), "bescheid" );
	deepEqual( Stem("bescheidenere"), "bescheiden" );
	deepEqual( Stem("bescheidenes"), "bescheid" );
	deepEqual( Stem("bescheidenheit"), "bescheid" );
	deepEqual( Stem("bescheinen"), "beschein" );
	deepEqual( Stem("beschenkt"), "beschenkt" );
	deepEqual( Stem("bescherung"), "bescher" );
	deepEqual( Stem("beschieden"), "beschied" );
	deepEqual( Stem("beschien"), "beschi" );
	deepEqual( Stem("beschienenen"), "beschien" );
	deepEqual( Stem("beschimmelten"), "beschimmelt" );
	deepEqual( Stem("beschimpft"), "beschimpft" );
	deepEqual( Stem("beschimpfte"), "beschimpft" );
	deepEqual( Stem("beschimpfung"), "beschimpf" );
	deepEqual( Stem("beschirmt"), "beschirmt" );
	deepEqual( Stem("beschirmung"), "beschirm" );
	deepEqual( Stem("beschlag"), "beschlag" );
	deepEqual( Stem("beschlagnahmt"), "beschlagnahmt" );
	deepEqual( Stem("beschleunigen"), "beschleun" );
	deepEqual( Stem("beschleunigt"), "beschleunigt" );
	deepEqual( Stem("beschleunigte"), "beschleunigt" );
	deepEqual( Stem("beschleunigung"), "beschleun" );
	deepEqual( Stem("beschlich"), "beschlich" );
	deepEqual( Stem("beschliessen"), "beschliess" );
	deepEqual( Stem("beschloss"), "beschloss" );
	deepEqual( Stem("beschloß"), "beschloss" );
	deepEqual( Stem("beschlossen"), "beschloss" );
	deepEqual( Stem("beschlossenen"), "beschloss" );
	deepEqual( Stem("beschluss"), "beschluss" );
	deepEqual( Stem("beschmiert"), "beschmiert" );
	deepEqual( Stem("beschmierte"), "beschmiert" );
	deepEqual( Stem("beschneiden"), "beschneid" );
	deepEqual( Stem("beschneidung"), "beschneid" );
	deepEqual( Stem("beschneit"), "beschneit" );
	deepEqual( Stem("beschnitt"), "beschnitt" );
	deepEqual( Stem("beschnitten"), "beschnitt" );
	deepEqual( Stem("beschnüffelte"), "beschnuffelt" );
	deepEqual( Stem("beschönigen"), "beschon" );
	deepEqual( Stem("beschönigt"), "beschonigt" );
	deepEqual( Stem("beschränken"), "beschrank" );
	deepEqual( Stem("beschränkt"), "beschrankt" );
	deepEqual( Stem("beschränkte"), "beschrankt" );
	deepEqual( Stem("beschränkteste"), "beschrankt" );
	deepEqual( Stem("beschränktheit"), "beschrankt" );
	deepEqual( Stem("beschreiben"), "beschreib" );
	deepEqual( Stem("beschreibt"), "beschreibt" );
	deepEqual( Stem("beschreibung"), "beschreib" );
	deepEqual( Stem("beschrieb"), "beschrieb" );
	deepEqual( Stem("beschriebe"), "beschrieb" );
	deepEqual( Stem("beschrieben"), "beschrieb" );
	deepEqual( Stem("beschriebene"), "beschrieb" );
	deepEqual( Stem("beschriebenen"), "beschrieb" );
	deepEqual( Stem("beschritt"), "beschritt" );
	deepEqual( Stem("beschuhte"), "beschuht" );
	deepEqual( Stem("beschuldigungen"), "beschuld" );
	deepEqual( Stem("beschützen"), "beschutz" );
	deepEqual( Stem("beschützer"), "beschutz" );
	deepEqual( Stem("beschützern"), "beschutz" );
	deepEqual( Stem("beschützt"), "beschutzt" );
	deepEqual( Stem("beschweige"), "beschweig" );
	deepEqual( Stem("beschweigen"), "beschweig" );
	deepEqual( Stem("beschwer"), "beschw" );
	deepEqual( Stem("beschwerden"), "beschwerd" );
	deepEqual( Stem("beschweren"), "beschw" );
	deepEqual( Stem("beschwerliche"), "beschw" );
	deepEqual( Stem("beschwerlichkeiten"), "beschwer" );
	deepEqual( Stem("beschwert"), "beschwert" );
	deepEqual( Stem("beschwerte"), "beschwert" );
	deepEqual( Stem("beschwerung"), "beschwer" );
	deepEqual( Stem("beschwichtigen"), "beschwicht" );
	deepEqual( Stem("beschwor"), "beschwor" );
	deepEqual( Stem("beschworen"), "beschwor" );
	deepEqual( Stem("beschwören"), "beschwor" );
	deepEqual( Stem("beschwörer"), "beschwor" );
	deepEqual( Stem("beschwörung"), "beschwor" );
	deepEqual( Stem("beschwörungen"), "beschwor" );
	deepEqual( Stem("beseelt"), "beseelt" );
	deepEqual( Stem("beseelte"), "beseelt" );
	deepEqual( Stem("beseeltes"), "beseelt" );
	deepEqual( Stem("besehen"), "beseh" );
	deepEqual( Stem("besehn"), "besehn" );
	deepEqual( Stem("beseitigen"), "beseit" );
	deepEqual( Stem("beseitigt"), "beseitigt" );
	deepEqual( Stem("beseitigung"), "beseit" );
	deepEqual( Stem("besen"), "bes" );
	deepEqual( Stem("besens"), "bes" );
	deepEqual( Stem("besenstiel"), "besenstiel" );
	deepEqual( Stem("besessen"), "besess" );
	deepEqual( Stem("besessener"), "besess" );
	deepEqual( Stem("besetzen"), "besetz" );
	deepEqual( Stem("besetzerkneipen"), "besetzerkneip" );
	deepEqual( Stem("besetzerleben"), "besetzerleb" );
	deepEqual( Stem("besetzt"), "besetzt" );
	deepEqual( Stem("besetzten"), "besetzt" );
	deepEqual( Stem("besichtigen"), "besicht" );
	deepEqual( Stem("besichtigung"), "besicht" );
	deepEqual( Stem("besiegen"), "besieg" );
	deepEqual( Stem("besiegt"), "besiegt" );
	deepEqual( Stem("besiegte"), "besiegt" );
	deepEqual( Stem("besinne"), "besinn" );
	deepEqual( Stem("besinnen"), "besinn" );
	deepEqual( Stem("besinnt"), "besinnt" );
	deepEqual( Stem("besinnung"), "besinn" );
	deepEqual( Stem("besinnungslose"), "besinnungslos" );
	deepEqual( Stem("besitz"), "besitz" );
	deepEqual( Stem("besitze"), "besitz" );
	deepEqual( Stem("besitzen"), "besitz" );
	deepEqual( Stem("besitzer"), "besitz" );
	deepEqual( Stem("besitzerin"), "besitzerin" );
	deepEqual( Stem("besitzes"), "besitz" );
	deepEqual( Stem("besitzlustige"), "besitzlust" );
	deepEqual( Stem("besitzstände"), "besitzstand" );
	deepEqual( Stem("besitzt"), "besitzt" );
	deepEqual( Stem("besitztum"), "besitztum" );
	deepEqual( Stem("besitztume"), "besitztum" );
	deepEqual( Stem("besitztümer"), "besitztum" );
	deepEqual( Stem("besitzungen"), "besitz" );
	deepEqual( Stem("besoldet"), "besoldet" );
	deepEqual( Stem("besondere"), "besond" );
	deepEqual( Stem("besonderem"), "besond" );
	deepEqual( Stem("besonderen"), "besond" );
	deepEqual( Stem("besonderer"), "besond" );
	deepEqual( Stem("besonderes"), "besond" );
	deepEqual( Stem("besonderheiten"), "besond" );
	deepEqual( Stem("besondern"), "besond" );
	deepEqual( Stem("besonders"), "besond" );
	deepEqual( Stem("besonnen"), "besonn" );
	deepEqual( Stem("besonnener"), "besonn" );
	deepEqual( Stem("besonnenheit"), "besonn" );
	deepEqual( Stem("besonnten"), "besonnt" );
	deepEqual( Stem("besonnter"), "besonnt" );
	deepEqual( Stem("besorgen"), "besorg" );
	deepEqual( Stem("besorgnis"), "besorgnis" );
	deepEqual( Stem("besorgnisse"), "besorgnis" );
	deepEqual( Stem("besorgt"), "besorgt" );
	deepEqual( Stem("besorgte"), "besorgt" );
	deepEqual( Stem("besorgten"), "besorgt" );
	deepEqual( Stem("besorgter"), "besorgt" );
	deepEqual( Stem("besorgtes"), "besorgt" );
	deepEqual( Stem("bespannt"), "bespannt" );
	deepEqual( Stem("bespanntes"), "bespannt" );
	deepEqual( Stem("besponnen"), "besponn" );
	deepEqual( Stem("besprechen"), "besprech" );
	deepEqual( Stem("besprechungen"), "besprech" );
	deepEqual( Stem("besprengung"), "bespreng" );
	deepEqual( Stem("besprochen"), "besproch" );
	deepEqual( Stem("besprochene"), "besproch" );
	deepEqual( Stem("besser"), "bess" );
	deepEqual( Stem("bessere"), "bess" );
	deepEqual( Stem("besseren"), "bess" );
	deepEqual( Stem("besserer"), "bess" );
	deepEqual( Stem("besseres"), "bess" );
	deepEqual( Stem("bessern"), "bess" );
	deepEqual( Stem("bessers"), "bess" );
	deepEqual( Stem("bessert"), "bessert" );
	deepEqual( Stem("besserte"), "bessert" );
	deepEqual( Stem("besserung"), "besser" );
	deepEqual( Stem("besserungen"), "besser" );
	deepEqual( Stem("besserungswerk"), "besserungswerk" );
	deepEqual( Stem("best"), "best" );
	deepEqual( Stem("bestand"), "bestand" );
	deepEqual( Stem("bestände"), "bestand" );
	deepEqual( Stem("bestanden"), "bestand" );
	deepEqual( Stem("beständig"), "bestand" );
	deepEqual( Stem("beständiger"), "bestand" );
	deepEqual( Stem("beständiges"), "bestand" );
	deepEqual( Stem("bestandstück"), "bestandstuck" );
	deepEqual( Stem("bestandstücks"), "bestandstuck" );
	deepEqual( Stem("bestandteile"), "bestandteil" );
	deepEqual( Stem("bestandteilen"), "bestandteil" );
	deepEqual( Stem("bestani"), "bestani" );
	deepEqual( Stem("bestärken"), "bestark" );
	deepEqual( Stem("bestärkt"), "bestarkt" );
	deepEqual( Stem("bestärkte"), "bestarkt" );
	deepEqual( Stem("bestärkung"), "bestark" );
	deepEqual( Stem("bestätigen"), "bestat" );
	deepEqual( Stem("bestätigend"), "bestat" );
	deepEqual( Stem("bestätigenden"), "bestat" );
	deepEqual( Stem("bestätigt"), "bestatigt" );
	deepEqual( Stem("bestätigte"), "bestatigt" );
	deepEqual( Stem("bestätigten"), "bestatigt" );
	deepEqual( Stem("bestätigung"), "bestat" );
	deepEqual( Stem("bestätigungen"), "bestat" );
	deepEqual( Stem("bestätigungsgründe"), "bestatigungsgrund" );
	deepEqual( Stem("bestaunten"), "bestaunt" );
	deepEqual( Stem("beste"), "best" );
	deepEqual( Stem("besteche"), "bestech" );
	deepEqual( Stem("bestechen"), "bestech" );
	deepEqual( Stem("bestechende"), "bestech" );
	deepEqual( Stem("bestechliche"), "bestech" );
	deepEqual( Stem("bestechung"), "bestech" );
	deepEqual( Stem("bestechungssumme"), "bestechungssumm" );
	deepEqual( Stem("besteck"), "besteck" );
	deepEqual( Stem("besteckt"), "besteckt" );
	deepEqual( Stem("bestehe"), "besteh" );
	deepEqual( Stem("bestehen"), "besteh" );
	deepEqual( Stem("bestehend"), "besteh" );
	deepEqual( Stem("bestehende"), "besteh" );
	deepEqual( Stem("bestehendes"), "besteh" );
	deepEqual( Stem("besteht"), "besteht" );
	deepEqual( Stem("besteigen"), "besteig" );
	deepEqual( Stem("bestellen"), "bestell" );
	deepEqual( Stem("bestellenhintergrundregelmässig"), "bestellenhintergrundregelmass" );
	deepEqual( Stem("bestellt"), "bestellt" );
	deepEqual( Stem("bestellte"), "bestellt" );
	deepEqual( Stem("bestellung"), "bestell" );
	deepEqual( Stem("bestellungen"), "bestell" );
	deepEqual( Stem("bestem"), "best" );
	deepEqual( Stem("besten"), "best" );
	deepEqual( Stem("bestenfalls"), "bestenfall" );
	deepEqual( Stem("bestens"), "best" );
	deepEqual( Stem("bester"), "best" );
	deepEqual( Stem("bestia"), "bestia" );
	deepEqual( Stem("bestiae"), "bestia" );
	deepEqual( Stem("besticht"), "besticht" );
	deepEqual( Stem("bestickt"), "bestickt" );
	deepEqual( Stem("bestie"), "besti" );
	deepEqual( Stem("bestieg"), "bestieg" );
	deepEqual( Stem("bestiegen"), "bestieg" );
	deepEqual( Stem("bestien"), "besti" );
	deepEqual( Stem("bestiis"), "bestiis" );
	deepEqual( Stem("bestimmbar"), "bestimmbar" );
	deepEqual( Stem("bestimmbare"), "bestimmbar" );
	deepEqual( Stem("bestimmbaren"), "bestimmbar" );
	deepEqual( Stem("bestimmbares"), "bestimmbar" );
	deepEqual( Stem("bestimmbarkeit"), "bestimmbar" );
	deepEqual( Stem("bestimme"), "bestimm" );
	deepEqual( Stem("bestimmen"), "bestimm" );
	deepEqual( Stem("bestimmende"), "bestimm" );
	deepEqual( Stem("bestimmenden"), "bestimm" );
	deepEqual( Stem("bestimmt"), "bestimmt" );
	deepEqual( Stem("bestimmte"), "bestimmt" );
	deepEqual( Stem("bestimmten"), "bestimmt" );
	deepEqual( Stem("bestimmter"), "bestimmt" );
	deepEqual( Stem("bestimmtes"), "bestimmt" );
	deepEqual( Stem("bestimmtesten"), "bestimmt" );
	deepEqual( Stem("bestimmtheit"), "bestimmt" );
	deepEqual( Stem("bestimmung"), "bestimm" );
	deepEqual( Stem("bestimmungen"), "bestimm" );
	deepEqual( Stem("bestimmungsgrund"), "bestimmungsgrund" );
	deepEqual( Stem("bestimmungsgrunde"), "bestimmungsgrund" );
	deepEqual( Stem("bestimmungsgründe"), "bestimmungsgrund" );
	deepEqual( Stem("bestimmungsgründen"), "bestimmungsgrund" );
	deepEqual( Stem("bestimmungsgrundes"), "bestimmungsgrund" );
	deepEqual( Stem("bestirnte"), "bestirnt" );
	deepEqual( Stem("bestmöglichst"), "bestmog" );
	deepEqual( Stem("bestochen"), "bestoch" );
	deepEqual( Stem("bestrafen"), "bestraf" );
	deepEqual( Stem("bestraft"), "bestraft" );
	deepEqual( Stem("bestrafung"), "bestraf" );
	deepEqual( Stem("bestrafungen"), "bestraf" );
	deepEqual( Stem("bestreben"), "bestreb" );
	deepEqual( Stem("bestrebt"), "bestrebt" );
	deepEqual( Stem("bestrebung"), "bestreb" );
	deepEqual( Stem("bestrebungen"), "bestreb" );
	deepEqual( Stem("bestreift"), "bestreift" );
	deepEqual( Stem("bestreiten"), "bestreit" );
	deepEqual( Stem("bestreitet"), "bestreitet" );
	deepEqual( Stem("bestreut"), "bestreut" );
	deepEqual( Stem("bestreuten"), "bestreut" );
	deepEqual( Stem("bestritt"), "bestritt" );
	deepEqual( Stem("bestünde"), "bestund" );
	deepEqual( Stem("bestürmte"), "besturmt" );
	deepEqual( Stem("bestürmten"), "besturmt" );
	deepEqual( Stem("bestürzt"), "besturzt" );
	deepEqual( Stem("bestürzten"), "besturzt" );
	deepEqual( Stem("besuch"), "besuch" );
	deepEqual( Stem("besuche"), "besuch" );
	deepEqual( Stem("besuchen"), "besuch" );
	deepEqual( Stem("besucher"), "besuch" );
	deepEqual( Stem("besucht"), "besucht" );
	deepEqual( Stem("besuchte"), "besucht" );
	deepEqual( Stem("besuchten"), "besucht" );
	deepEqual( Stem("besudelt"), "besudelt" );
	deepEqual( Stem("besudelten"), "besudelt" );
	deepEqual( Stem("betaste"), "betast" );
	deepEqual( Stem("betasten"), "betast" );
	deepEqual( Stem("betastete"), "betastet" );
	deepEqual( Stem("betätigt"), "betatigt" );
	deepEqual( Stem("betäuben"), "betaub" );
	deepEqual( Stem("betäubt"), "betaubt" );
	deepEqual( Stem("betäubung"), "betaub" );
	deepEqual( Stem("betbüchl"), "betbuchl" );
	deepEqual( Stem("beteiligt"), "beteiligt" );
	deepEqual( Stem("beteiligten"), "beteiligt" );
	deepEqual( Stem("beten"), "bet" );
	deepEqual( Stem("betend"), "betend" );
	deepEqual( Stem("betet"), "betet" );
	deepEqual( Stem("betete"), "betet" );
	deepEqual( Stem("beteten"), "betet" );
	deepEqual( Stem("beteuerte"), "beteuert" );
	deepEqual( Stem("beth"), "beth" );
	deepEqual( Stem("bethesda"), "bethesda" );
	deepEqual( Stem("betitelt"), "betitelt" );
	deepEqual( Stem("betont"), "betont" );
	deepEqual( Stem("betörenden"), "betor" );
	deepEqual( Stem("betört"), "betort" );
	deepEqual( Stem("betracht"), "betracht" );
	deepEqual( Stem("betrachte"), "betracht" );
	deepEqual( Stem("betrachten"), "betracht" );
	deepEqual( Stem("betrachtend"), "betracht" );
	deepEqual( Stem("betrachtet"), "betrachtet" );
	deepEqual( Stem("betrachtete"), "betrachtet" );
	deepEqual( Stem("betrachteten"), "betrachtet" );
	deepEqual( Stem("beträchtlich"), "betracht" );
	deepEqual( Stem("beträchtliche"), "betracht" );
	deepEqual( Stem("betrachtung"), "betracht" );
	deepEqual( Stem("betrachtungen"), "betracht" );
	deepEqual( Stem("betraf"), "betraf" );
	deepEqual( Stem("beträfe"), "betraf" );
	deepEqual( Stem("betragen"), "betrag" );
	deepEqual( Stem("betragens"), "betrag" );
	deepEqual( Stem("beträgt"), "betragt" );
	deepEqual( Stem("betrat"), "betrat" );
	deepEqual( Stem("betraten"), "betrat" );
	deepEqual( Stem("betraut"), "betraut" );
	deepEqual( Stem("betrauten"), "betraut" );
	deepEqual( Stem("betreff"), "betreff" );
	deepEqual( Stem("betreffen"), "betreff" );
	deepEqual( Stem("betreffend"), "betreff" );
	deepEqual( Stem("betreffende"), "betreff" );
	deepEqual( Stem("betreffenden"), "betreff" );
	deepEqual( Stem("betreffs"), "betreff" );
	deepEqual( Stem("betreiben"), "betreib" );
	deepEqual( Stem("betreibt"), "betreibt" );
	deepEqual( Stem("betreibung"), "betreib" );
	deepEqual( Stem("betresst"), "betresst" );
	deepEqual( Stem("betreßt"), "betresst" );
	deepEqual( Stem("betreten"), "betret" );
	deepEqual( Stem("betreuen"), "betreu" );
	deepEqual( Stem("betrieb"), "betrieb" );
	deepEqual( Stem("betrieben"), "betrieb" );
	deepEqual( Stem("betrifft"), "betrifft" );
	deepEqual( Stem("betritt"), "betritt" );
	deepEqual( Stem("betroffen"), "betroff" );
	deepEqual( Stem("betrogen"), "betrog" );
	deepEqual( Stem("betrogene"), "betrog" );
	deepEqual( Stem("betrogenen"), "betrog" );
	deepEqual( Stem("betrübe"), "betrub" );
	deepEqual( Stem("betrüblich"), "betrub" );
	deepEqual( Stem("betrübnis"), "betrubnis" );
	deepEqual( Stem("betrübt"), "betrubt" );
	deepEqual( Stem("betrübte"), "betrubt" );
	deepEqual( Stem("betrübten"), "betrubt" );
	deepEqual( Stem("betrug"), "betrug" );
	deepEqual( Stem("betrüge"), "betrug" );
	deepEqual( Stem("betrügen"), "betrug" );
	deepEqual( Stem("betrüger"), "betrug" );
	deepEqual( Stem("betrügereien"), "betrugerei" );
	deepEqual( Stem("betrügerisch"), "betruger" );
	deepEqual( Stem("betrügerisches"), "betruger" );
	deepEqual( Stem("betrüglich"), "betrug" );
	deepEqual( Stem("betrügst"), "betrug" );
	deepEqual( Stem("betrunken"), "betrunk" );
	deepEqual( Stem("betrunkenen"), "betrunk" );
	deepEqual( Stem("betrunkener"), "betrunk" );
	deepEqual( Stem("bett"), "bett" );
	deepEqual( Stem("bettchen"), "bettch" );
	deepEqual( Stem("bette"), "bett" );
	deepEqual( Stem("bettelei"), "bettelei" );
	deepEqual( Stem("betteljunge"), "bettelj" );
	deepEqual( Stem("betteln"), "betteln" );
	deepEqual( Stem("bettelte"), "bettelt" );
	deepEqual( Stem("betten"), "bett" );
	deepEqual( Stem("bettentruhe"), "bettentruh" );
	deepEqual( Stem("bettes"), "bett" );
	deepEqual( Stem("betteten"), "bettet" );
	deepEqual( Stem("bettlächrig"), "bettlachr" );
	deepEqual( Stem("bettstatt"), "bettstatt" );
	deepEqual( Stem("bettstelle"), "bettstell" );
	deepEqual( Stem("bettzeug"), "bettzeug" );
	deepEqual( Stem("betupft"), "betupft" );
	deepEqual( Stem("beugen"), "beug" );
	deepEqual( Stem("beugt"), "beugt" );
	deepEqual( Stem("beugte"), "beugt" );
	deepEqual( Stem("beugten"), "beugt" );
	deepEqual( Stem("beule"), "beul" );
	deepEqual( Stem("beulen"), "beul" );
	deepEqual( Stem("beunruhigen"), "beunruh" );
	deepEqual( Stem("beunruhigende"), "beunruh" );
	deepEqual( Stem("beunruhigt"), "beunruhigt" );
	deepEqual( Stem("beunruhigung"), "beunruh" );
	deepEqual( Stem("beurkundet"), "beurkundet" );
	deepEqual( Stem("beurkundete"), "beurkundet" );
	deepEqual( Stem("beurlaube"), "beurlaub" );
	deepEqual( Stem("beurlaubten"), "beurlaubt" );
	deepEqual( Stem("beurlaubung"), "beurlaub" );
	deepEqual( Stem("beurteilen"), "beurteil" );
	deepEqual( Stem("beurteilenden"), "beurteil" );
	deepEqual( Stem("beurteilt"), "beurteilt" );
	deepEqual( Stem("beurteilte"), "beurteilt" );
	deepEqual( Stem("beurteilung"), "beurteil" );
	deepEqual( Stem("beurteilungen"), "beurteil" );
	deepEqual( Stem("beute"), "beut" );
	deepEqual( Stem("beutel"), "beutel" );
	deepEqual( Stem("beutelchen"), "beutelch" );
	deepEqual( Stem("beuten"), "beut" );
	deepEqual( Stem("bevölkert"), "bevolkert" );
	deepEqual( Stem("bevölkerung"), "bevolker" );
	deepEqual( Stem("bevor"), "bevor" );
	deepEqual( Stem("bevorhautet"), "bevorhautet" );
	deepEqual( Stem("bevorhautete"), "bevorhautet" );
	deepEqual( Stem("bevorstand"), "bevorstand" );
	deepEqual( Stem("bevorstehenden"), "bevorsteh" );
	deepEqual( Stem("bevorsteht"), "bevorsteht" );
	deepEqual( Stem("bewachsen"), "bewachs" );
	deepEqual( Stem("bewachsenen"), "bewachs" );
	deepEqual( Stem("bewaffnet"), "bewaffnet" );
	deepEqual( Stem("bewaffnete"), "bewaffnet" );
	deepEqual( Stem("bewaffneten"), "bewaffnet" );
	deepEqual( Stem("bewaffneter"), "bewaffnet" );
	deepEqual( Stem("bewahre"), "bewahr" );
	deepEqual( Stem("bewahren"), "bewahr" );
	deepEqual( Stem("bewähren"), "bewahr" );
	deepEqual( Stem("bewahrt"), "bewahrt" );
	deepEqual( Stem("bewährt"), "bewahrt" );
	deepEqual( Stem("bewahrte"), "bewahrt" );
	deepEqual( Stem("bewährte"), "bewahrt" );
	deepEqual( Stem("bewährter"), "bewahrt" );
	deepEqual( Stem("bewährtes"), "bewahrt" );
	deepEqual( Stem("bewahrtest"), "bewahrt" );
	deepEqual( Stem("bewahrung"), "bewahr" );
	deepEqual( Stem("bewältigen"), "bewalt" );
	deepEqual( Stem("bewandt"), "bewandt" );
	deepEqual( Stem("bewandtnis"), "bewandtnis" );
	deepEqual( Stem("bewarben"), "bewarb" );
	deepEqual( Stem("bewässern"), "bewass" );
	deepEqual( Stem("bewässert"), "bewassert" );
	deepEqual( Stem("bewässerte"), "bewassert" );
	deepEqual( Stem("bewässerten"), "bewassert" );
	deepEqual( Stem("bewässerter"), "bewassert" );
	deepEqual( Stem("bewege"), "beweg" );
	deepEqual( Stem("bewegen"), "beweg" );
	deepEqual( Stem("bewegende"), "beweg" );
	deepEqual( Stem("bewegenden"), "beweg" );
	deepEqual( Stem("beweggründe"), "beweggrund" );
	deepEqual( Stem("beweglich"), "beweg" );
	deepEqual( Stem("bewegliche"), "beweg" );
	deepEqual( Stem("beweglichkeit"), "beweg" );
	deepEqual( Stem("bewegt"), "bewegt" );
	deepEqual( Stem("bewegte"), "bewegt" );
	deepEqual( Stem("bewegten"), "bewegt" );
	deepEqual( Stem("bewegtes"), "bewegt" );
	deepEqual( Stem("bewegung"), "beweg" );
	deepEqual( Stem("bewegungen"), "beweg" );
	deepEqual( Stem("bewegungsgrund"), "bewegungsgrund" );
	deepEqual( Stem("bewegungsgrunde"), "bewegungsgrund" );
	deepEqual( Stem("bewegungsgründe"), "bewegungsgrund" );
	deepEqual( Stem("bewegungsgründen"), "bewegungsgrund" );
	deepEqual( Stem("bewegursache"), "bewegursach" );
	deepEqual( Stem("bewegursachen"), "bewegursach" );
	deepEqual( Stem("beweis"), "beweis" );
	deepEqual( Stem("beweise"), "beweis" );
	deepEqual( Stem("beweisen"), "beweis" );
	deepEqual( Stem("beweisend"), "beweis" );
	deepEqual( Stem("beweises"), "beweis" );
	deepEqual( Stem("beweiset"), "beweiset" );
	deepEqual( Stem("beweisführende"), "beweisfuhr" );
	deepEqual( Stem("beweisgründen"), "beweisgrund" );
	deepEqual( Stem("beweist"), "beweist" );
	deepEqual( Stem("beweistümer"), "beweistum" );
	deepEqual( Stem("bewerben"), "bewerb" );
	deepEqual( Stem("bewerbung"), "bewerb" );
	deepEqual( Stem("bewerkstelligte"), "bewerkstelligt" );
	deepEqual( Stem("bewies"), "bewi" );
	deepEqual( Stem("bewiesen"), "bewies" );
	deepEqual( Stem("bewilligen"), "bewill" );
	deepEqual( Stem("bewilligt"), "bewilligt" );
	deepEqual( Stem("bewimpelt"), "bewimpelt" );
	deepEqual( Stem("bewirbt"), "bewirbt" );
	deepEqual( Stem("bewirke"), "bewirk" );
	deepEqual( Stem("bewirken"), "bewirk" );
	deepEqual( Stem("bewirkt"), "bewirkt" );
	deepEqual( Stem("bewirkte"), "bewirkt" );
	deepEqual( Stem("bewirkten"), "bewirkt" );
	deepEqual( Stem("bewirkung"), "bewirk" );
	deepEqual( Stem("bewirte"), "bewirt" );
	deepEqual( Stem("bewirtete"), "bewirtet" );
	deepEqual( Stem("bewirtung"), "bewirt" );
	deepEqual( Stem("bewogen"), "bewog" );
	deepEqual( Stem("bewohnen"), "bewohn" );
	deepEqual( Stem("bewohner"), "bewohn" );
	deepEqual( Stem("bewohnern"), "bewohn" );
	deepEqual( Stem("bewohners"), "bewohn" );
	deepEqual( Stem("bewohnt"), "bewohnt" );
	deepEqual( Stem("bewohnte"), "bewohnt" );
	deepEqual( Stem("bewohnten"), "bewohnt" );
	deepEqual( Stem("bewölkten"), "bewolkt" );
	deepEqual( Stem("bewundern"), "bewund" );
	deepEqual( Stem("bewundernd"), "bewundernd" );
	deepEqual( Stem("bewunderten"), "bewundert" );
	deepEqual( Stem("bewunderung"), "bewunder" );
	deepEqual( Stem("bewurf"), "bewurf" );
	deepEqual( Stem("bewusst"), "bewusst" );
	deepEqual( Stem("bewußt"), "bewusst" );
	deepEqual( Stem("bewusste"), "bewusst" );
	deepEqual( Stem("bewußte"), "bewusst" );
	deepEqual( Stem("bewussten"), "bewusst" );
	deepEqual( Stem("bewußten"), "bewusst" );
	deepEqual( Stem("bewusster"), "bewusst" );
	deepEqual( Stem("bewusstlos"), "bewusstlos" );
	deepEqual( Stem("bewusstlosen"), "bewusstlos" );
	deepEqual( Stem("bewusstsein"), "bewusstsein" );
	deepEqual( Stem("bewußtsein"), "bewusstsein" );
	deepEqual( Stem("bewusstseins"), "bewusstsein" );
	deepEqual( Stem("bewußtseins"), "bewusstsein" );
	deepEqual( Stem("bezahlbarer"), "bezahlbar" );
	deepEqual( Stem("bezahlen"), "bezahl" );
	deepEqual( Stem("bezahlt"), "bezahlt" );
	deepEqual( Stem("bezahlte"), "bezahlt" );
	deepEqual( Stem("bezahlung"), "bezahl" );
	deepEqual( Stem("bezähmt"), "bezahmt" );
	deepEqual( Stem("bezaleel"), "bezaleel" );
	deepEqual( Stem("bezankenden"), "bezank" );
	deepEqual( Stem("bezaubern"), "bezaub" );
	deepEqual( Stem("bezeichne"), "bezeichn" );
	deepEqual( Stem("bezeichnen"), "bezeichn" );
	deepEqual( Stem("bezeichnend"), "bezeichn" );
	deepEqual( Stem("bezeichnende"), "bezeichn" );
	deepEqual( Stem("bezeichnendes"), "bezeichn" );
	deepEqual( Stem("bezeichnet"), "bezeichnet" );
	deepEqual( Stem("bezeichnete"), "bezeichnet" );
	deepEqual( Stem("bezeichneten"), "bezeichnet" );
	deepEqual( Stem("bezeichnung"), "bezeichn" );
	deepEqual( Stem("bezeichnungen"), "bezeichn" );
	deepEqual( Stem("bezeigen"), "bezeig" );
	deepEqual( Stem("bezeigten"), "bezeigt" );
	deepEqual( Stem("bezeugen"), "bezeug" );
	deepEqual( Stem("bezeugst"), "bezeug" );
	deepEqual( Stem("bezeugten"), "bezeugt" );
	deepEqual( Stem("beziehe"), "bezieh" );
	deepEqual( Stem("beziehen"), "bezieh" );
	deepEqual( Stem("bezieht"), "bezieht" );
	deepEqual( Stem("beziehung"), "bezieh" );
	deepEqual( Stem("beziehungen"), "bezieh" );
	deepEqual( Stem("beziehungsweise"), "beziehungsweis" );
	deepEqual( Stem("beziele"), "beziel" );
	deepEqual( Stem("bezielt"), "bezielt" );
	deepEqual( Stem("bezirk"), "bezirk" );
	deepEqual( Stem("bezirke"), "bezirk" );
	deepEqual( Stem("bezirksrat"), "bezirksrat" );
	deepEqual( Stem("bezirksversammlung"), "bezirksversamml" );
	deepEqual( Stem("bezog"), "bezog" );
	deepEqual( Stem("bezogen"), "bezog" );
	deepEqual( Stem("bezug"), "bezug" );
	deepEqual( Stem("bezüglich"), "bezug" );
	deepEqual( Stem("bezüglichen"), "bezug" );
	deepEqual( Stem("bezwang"), "bezwang" );
	deepEqual( Stem("bezwecken"), "bezweck" );
	deepEqual( Stem("bezweckt"), "bezweckt" );
	deepEqual( Stem("bezweckte"), "bezweckt" );
	deepEqual( Stem("bezweifeln"), "bezweifeln" );
	deepEqual( Stem("bezweifle"), "bezweifl" );
	deepEqual( Stem("bezwingen"), "bezwing" );
	deepEqual( Stem("bezwingt"), "bezwingt" );
	deepEqual( Stem("bezwingung"), "bezwing" );
	deepEqual( Stem("bezwungen"), "bezwung" );
	deepEqual( Stem("bfu"), "bfu" );
	deepEqual( Stem("bibberten"), "bibbert" );
	deepEqual( Stem("bibel"), "bibel" );
	deepEqual( Stem("bibelan"), "bibelan" );
	deepEqual( Stem("bibelgesellschaft"), "bibelgesellschaft" );
	deepEqual( Stem("biberach"), "biberach" );
	deepEqual( Stem("bibliothek"), "bibliothek" );
	deepEqual( Stem("bibliotheken"), "bibliothek" );
	deepEqual( Stem("biblische"), "biblisch" );
	deepEqual( Stem("biedenkopf"), "biedenkopf" );
	deepEqual( Stem("biederen"), "bied" );
	deepEqual( Stem("biederer"), "bied" );
	deepEqual( Stem("biegen"), "bieg" );
	deepEqual( Stem("biegung"), "biegung" );
	deepEqual( Stem("biene"), "bien" );
	deepEqual( Stem("bienen"), "bien" );
	deepEqual( Stem("bienenwachs"), "bienenwach" );
	deepEqual( Stem("bier"), "bier" );
	deepEqual( Stem("bieranstalt"), "bieranstalt" );
	deepEqual( Stem("bierkrug"), "bierkrug" );
	deepEqual( Stem("bierkrügen"), "bierkrug" );
	deepEqual( Stem("bierkutscher"), "bierkutsch" );
	deepEqual( Stem("biertrinken"), "biertrink" );
	deepEqual( Stem("biertrinker"), "biertrink" );
	deepEqual( Stem("biest"), "biest" );
	deepEqual( Stem("biestigen"), "biestig" );
	deepEqual( Stem("bieten"), "biet" );
	deepEqual( Stem("bietend"), "bietend" );
	deepEqual( Stem("bietet"), "bietet" );
	deepEqual( Stem("bild"), "bild" );
	deepEqual( Stem("bildchen"), "bildch" );
	deepEqual( Stem("bilde"), "bild" );
	deepEqual( Stem("bilden"), "bild" );
	deepEqual( Stem("bildende"), "bildend" );
	deepEqual( Stem("bilder"), "bild" );
	deepEqual( Stem("bilderbücher"), "bilderbuch" );
	deepEqual( Stem("bilderbücherwiese"), "bilderbucherwies" );
	deepEqual( Stem("bilderchen"), "bilderch" );
	deepEqual( Stem("bildern"), "bild" );
	deepEqual( Stem("bildet"), "bildet" );
	deepEqual( Stem("bildete"), "bildet" );
	deepEqual( Stem("bildeten"), "bildet" );
	deepEqual( Stem("bildner"), "bildn" );
	deepEqual( Stem("bildsauber"), "bildsaub" );
	deepEqual( Stem("bildsaubre"), "bildsaubr" );
	deepEqual( Stem("bildsäule"), "bildsaul" );
	deepEqual( Stem("bildschöne"), "bildschon" );
	deepEqual( Stem("bildschönes"), "bildschon" );
	deepEqual( Stem("bildung"), "bildung" );
	deepEqual( Stem("bildungen"), "bildung" );
	deepEqual( Stem("bildungschancen"), "bildungschanc" );
	deepEqual( Stem("bildungsgut"), "bildungsgut" );
	deepEqual( Stem("bildzeitung"), "bildzeit" );
	deepEqual( Stem("bileam"), "bileam" );
	deepEqual( Stem("bileams"), "bileam" );
	deepEqual( Stem("billige"), "billig" );
	deepEqual( Stem("billigen"), "billig" );
	deepEqual( Stem("billigenden"), "billig" );
	deepEqual( Stem("billiger"), "billig" );
	deepEqual( Stem("billigkeit"), "billig" );
	deepEqual( Stem("billigste"), "billig" );
	deepEqual( Stem("billigung"), "billig" );
	deepEqual( Stem("bimmelglöcklein"), "bimmelglocklein" );
	deepEqual( Stem("bin"), "bin" );
	deepEqual( Stem("bind"), "bind" );
	deepEqual( Stem("binde"), "bind" );
	deepEqual( Stem("binden"), "bind" );
	deepEqual( Stem("bindet"), "bindet" );
	deepEqual( Stem("bindfaden"), "bindfad" );
	deepEqual( Stem("binse"), "bins" );
	deepEqual( Stem("biographien"), "biographi" );
	deepEqual( Stem("birgt"), "birgt" );
	deepEqual( Stem("birke"), "birk" );
	deepEqual( Stem("birkenzweiglein"), "birkenzweiglein" );
	deepEqual( Stem("birnen"), "birn" );
	deepEqual( Stem("birnenstiel"), "birnenstiel" );
	deepEqual( Stem("bis"), "bis" );
	deepEqual( Stem("bischof"), "bischof" );
	deepEqual( Stem("bischöfe"), "bischof" );
	deepEqual( Stem("bischofs"), "bischof" );
	deepEqual( Stem("bischofskonferenz"), "bischofskonferenz" );
	deepEqual( Stem("bischofswiesen"), "bischofswies" );
	deepEqual( Stem("bisher"), "bish" );
	deepEqual( Stem("bisherige"), "bisher" );
	deepEqual( Stem("bisherigen"), "bisher" );
	deepEqual( Stem("bisheriges"), "bisher" );
	deepEqual( Stem("bislang"), "bislang" );
	deepEqual( Stem("biss"), "biss" );
	deepEqual( Stem("bisschen"), "bissch" );
	deepEqual( Stem("bißchen"), "bissch" );
	deepEqual( Stem("bissel"), "bissel" );
	deepEqual( Stem("bissen"), "biss" );
	deepEqual( Stem("bisserl"), "bisserl" );
	deepEqual( Stem("bissl"), "bissl" );
	deepEqual( Stem("bist"), "bist" );
	deepEqual( Stem("bistum"), "bistum" );
	deepEqual( Stem("bisweilen"), "bisweil" );
	deepEqual( Stem("bitt"), "bitt" );
	deepEqual( Stem("bitte"), "bitt" );
	deepEqual( Stem("bitten"), "bitt" );
	deepEqual( Stem("bittend"), "bittend" );
	deepEqual( Stem("bittenden"), "bittend" );
	deepEqual( Stem("bitter"), "bitt" );
	deepEqual( Stem("bittere"), "bitt" );
	deepEqual( Stem("bitteren"), "bitt" );
	deepEqual( Stem("bitterer"), "bitt" );
	deepEqual( Stem("bitteres"), "bitt" );
	deepEqual( Stem("bitterkalten"), "bitterkalt" );
	deepEqual( Stem("bitterkeit"), "bitter" );
	deepEqual( Stem("bitterlich"), "bitt" );
	deepEqual( Stem("bitterlicher"), "bitt" );
	deepEqual( Stem("bittern"), "bitt" );
	deepEqual( Stem("bitterste"), "bitterst" );
	deepEqual( Stem("bittersten"), "bitterst" );
	deepEqual( Stem("bittest"), "bitt" );
	deepEqual( Stem("bittet"), "bittet" );
	deepEqual( Stem("biwakspässe"), "biwakspass" );
	deepEqual( Stem("biwakspäße"), "biwakspass" );
	deepEqual( Stem("blachfeld"), "blachfeld" );
	deepEqual( Stem("blagen"), "blag" );
	deepEqual( Stem("blähet"), "blahet" );
	deepEqual( Stem("blähte"), "blaht" );
	deepEqual( Stem("blank"), "blank" );
	deepEqual( Stem("blanke"), "blank" );
	deepEqual( Stem("blanken"), "blank" );
	deepEqual( Stem("blanker"), "blank" );
	deepEqual( Stem("blankes"), "blank" );
	deepEqual( Stem("blankgepanzerte"), "blankgepanzert" );
	deepEqual( Stem("bläschen"), "blasch" );
	deepEqual( Stem("blase"), "blas" );
	deepEqual( Stem("blasebalg"), "blasebalg" );
	deepEqual( Stem("blasebälgen"), "blasebalg" );
	deepEqual( Stem("blasen"), "blas" );
	deepEqual( Stem("blasensteigen"), "blasensteig" );
	deepEqual( Stem("blasiert"), "blasiert" );
	deepEqual( Stem("blasierten"), "blasiert" );
	deepEqual( Stem("blasinstrument"), "blasinstrument" );
	deepEqual( Stem("blasinstrumente"), "blasinstrument" );
	deepEqual( Stem("blass"), "blass" );
	deepEqual( Stem("blaß"), "blass" );
	deepEqual( Stem("blasse"), "blass" );
	deepEqual( Stem("blässe"), "blass" );
	deepEqual( Stem("blassen"), "blass" );
	deepEqual( Stem("blasser"), "blass" );
	deepEqual( Stem("blasses"), "blass" );
	deepEqual( Stem("bläst"), "blast" );
	deepEqual( Stem("blatt"), "blatt" );
	deepEqual( Stem("blättchen"), "blattch" );
	deepEqual( Stem("blatte"), "blatt" );
	deepEqual( Stem("blatteln"), "blatteln" );
	deepEqual( Stem("blatten"), "blatt" );
	deepEqual( Stem("blätter"), "blatt" );
	deepEqual( Stem("blattern"), "blatt" );
	deepEqual( Stem("blättern"), "blatt" );
	deepEqual( Stem("blatterngeschwüre"), "blatterngeschwur" );
	deepEqual( Stem("blätterreste"), "blatterr" );
	deepEqual( Stem("blätterte"), "blattert" );
	deepEqual( Stem("blätterten"), "blattert" );
	deepEqual( Stem("blattes"), "blatt" );
	deepEqual( Stem("blau"), "blau" );
	deepEqual( Stem("blaue"), "blau" );
	deepEqual( Stem("blauem"), "blau" );
	deepEqual( Stem("blauen"), "blau" );
	deepEqual( Stem("blaues"), "blau" );
	deepEqual( Stem("blauesten"), "blau" );
	deepEqual( Stem("blaufärber"), "blaufarb" );
	deepEqual( Stem("blaugefärbter"), "blaugefarbt" );
	deepEqual( Stem("blaugrün"), "blaugrun" );
	deepEqual( Stem("bläulich"), "blaulich" );
	deepEqual( Stem("bläulichen"), "blaulich" );
	deepEqual( Stem("blausamt"), "blausamt" );
	deepEqual( Stem("blauseidenen"), "blauseid" );
	deepEqual( Stem("blauweissen"), "blauweiss" );
	deepEqual( Stem("bleamerln"), "bleamerln" );
	deepEqual( Stem("blech"), "blech" );
	deepEqual( Stem("blecherne"), "blechern" );
	deepEqual( Stem("blechkerl"), "blechkerl" );
	deepEqual( Stem("blechlöffeln"), "blechloffeln" );
	deepEqual( Stem("blechmusik"), "blechmus" );
	deepEqual( Stem("blechschachtel"), "blechschachtel" );
	deepEqual( Stem("blechschilde"), "blechschild" );
	deepEqual( Stem("blei"), "blei" );
	deepEqual( Stem("bleib"), "bleib" );
	deepEqual( Stem("bleibe"), "bleib" );
	deepEqual( Stem("bleiben"), "bleib" );
	deepEqual( Stem("bleibend"), "bleibend" );
	deepEqual( Stem("bleibende"), "bleibend" );
	deepEqual( Stem("bleibenden"), "bleibend" );
	deepEqual( Stem("bleibender"), "bleibend" );
	deepEqual( Stem("bleibendes"), "bleibend" );
	deepEqual( Stem("bleibestätten"), "bleibestatt" );
	deepEqual( Stem("bleibet"), "bleibet" );
	deepEqual( Stem("bleibn"), "bleibn" );
	deepEqual( Stem("bleibst"), "bleib" );
	deepEqual( Stem("bleibt"), "bleibt" );
	deepEqual( Stem("bleich"), "bleich" );
	deepEqual( Stem("bleiche"), "bleich" );
	deepEqual( Stem("bleichen"), "bleich" );
	deepEqual( Stem("bleicher"), "bleich" );
	deepEqual( Stem("bleihände"), "bleihand" );
	deepEqual( Stem("bleikugeln"), "bleikugeln" );
	deepEqual( Stem("bleischweren"), "bleischw" );
	deepEqual( Stem("bleistift"), "bleistift" );
	deepEqual( Stem("bleistifte"), "bleistift" );
	deepEqual( Stem("blendend"), "blendend" );
	deepEqual( Stem("blendenden"), "blendend" );
	deepEqual( Stem("blendendes"), "blendend" );
	deepEqual( Stem("blendendweisse"), "blendendweiss" );
	deepEqual( Stem("blendet"), "blendet" );
	deepEqual( Stem("blendlaterne"), "blendlatern" );
	deepEqual( Stem("blendwerk"), "blendwerk" );
	deepEqual( Stem("blessierter"), "blessiert" );
	deepEqual( Stem("blick"), "blick" );
	deepEqual( Stem("blicke"), "blick" );
	deepEqual( Stem("blicken"), "blick" );
	deepEqual( Stem("blickend"), "blickend" );
	deepEqual( Stem("blickenden"), "blickend" );
	deepEqual( Stem("blickes"), "blick" );
	deepEqual( Stem("blickt"), "blickt" );
	deepEqual( Stem("blickte"), "blickt" );
	deepEqual( Stem("blickten"), "blickt" );
	deepEqual( Stem("blieb"), "blieb" );
	deepEqual( Stem("bliebe"), "blieb" );
	deepEqual( Stem("blieben"), "blieb" );
	deepEqual( Stem("bliebn"), "bliebn" );
	deepEqual( Stem("bliem"), "bliem" );
	deepEqual( Stem("blies"), "blies" );
	deepEqual( Stem("bliesen"), "blies" );
	deepEqual( Stem("blind"), "blind" );
	deepEqual( Stem("blinde"), "blind" );
	deepEqual( Stem("blinden"), "blind" );
	deepEqual( Stem("blinder"), "blind" );
	deepEqual( Stem("blindes"), "blind" );
	deepEqual( Stem("blindgeborenen"), "blindgebor" );
	deepEqual( Stem("blindlings"), "blindling" );
	deepEqual( Stem("blinkend"), "blinkend" );
	deepEqual( Stem("blinkenden"), "blinkend" );
	deepEqual( Stem("blinkten"), "blinkt" );
	deepEqual( Stem("blinzeln"), "blinzeln" );
	deepEqual( Stem("blinzelnd"), "blinzelnd" );
	deepEqual( Stem("blinzelte"), "blinzelt" );
	deepEqual( Stem("blitz"), "blitz" );
	deepEqual( Stem("blitzblank"), "blitzblank" );
	deepEqual( Stem("blitze"), "blitz" );
	deepEqual( Stem("blitzeblank"), "blitzeblank" );
	deepEqual( Stem("blitzen"), "blitz" );
	deepEqual( Stem("blitzend"), "blitzend" );
	deepEqual( Stem("blitzende"), "blitzend" );
	deepEqual( Stem("blitzenden"), "blitzend" );
	deepEqual( Stem("blitzender"), "blitzend" );
	deepEqual( Stem("blitzendes"), "blitzend" );
	deepEqual( Stem("blitzhexe"), "blitzhex" );
	deepEqual( Stem("blitzschnell"), "blitzschnell" );
	deepEqual( Stem("blitzschnelle"), "blitzschnell" );
	deepEqual( Stem("blitzschnellen"), "blitzschnell" );
	deepEqual( Stem("blitzschrecken"), "blitzschreck" );
	deepEqual( Stem("blitzt"), "blitzt" );
	deepEqual( Stem("blitzten"), "blitzt" );
	deepEqual( Stem("block"), "block" );
	deepEqual( Stem("blöcke"), "block" );
	deepEqual( Stem("blockiert"), "blockiert" );
	deepEqual( Stem("blocksberg"), "blocksberg" );
	deepEqual( Stem("blödigkeit"), "blodig" );
	deepEqual( Stem("blödsinne"), "blodsinn" );
	deepEqual( Stem("blödsinnig"), "blodsinn" );
	deepEqual( Stem("blödsinnige"), "blodsinn" );
	deepEqual( Stem("blökende"), "blokend" );
	deepEqual( Stem("blökender"), "blokend" );
	deepEqual( Stem("blond"), "blond" );
	deepEqual( Stem("blonden"), "blond" );
	deepEqual( Stem("blondes"), "blond" );
	deepEqual( Stem("blondhaar"), "blondhaar" );
	deepEqual( Stem("bloss"), "bloss" );
	deepEqual( Stem("bloß"), "bloss" );
	deepEqual( Stem("blosse"), "bloss" );
	deepEqual( Stem("bloße"), "bloss" );
	deepEqual( Stem("blösse"), "bloss" );
	deepEqual( Stem("blöße"), "bloss" );
	deepEqual( Stem("blossem"), "bloss" );
	deepEqual( Stem("blossen"), "bloss" );
	deepEqual( Stem("bloßen"), "bloss" );
	deepEqual( Stem("blosser"), "bloss" );
	deepEqual( Stem("bloßer"), "bloss" );
	deepEqual( Stem("blosses"), "bloss" );
	deepEqual( Stem("bloßes"), "bloss" );
	deepEqual( Stem("blossfüssiger"), "blossfuss" );
	deepEqual( Stem("bloßfüßiger"), "blossfuss" );
	deepEqual( Stem("blosslegung"), "blossleg" );
	deepEqual( Stem("bloßlegung"), "blossleg" );
	deepEqual( Stem("blouse"), "blous" );
	deepEqual( Stem("blousengestalt"), "blousengestalt" );
	deepEqual( Stem("blousenmann"), "blousenmann" );
	deepEqual( Stem("blousenmannes"), "blousenmann" );
	deepEqual( Stem("blubber"), "blubb" );
	deepEqual( Stem("blubberquacks"), "blubberquack" );
	deepEqual( Stem("bluet"), "bluet" );
	deepEqual( Stem("blühen"), "bluh" );
	deepEqual( Stem("blühend"), "bluhend" );
	deepEqual( Stem("blühendem"), "bluhend" );
	deepEqual( Stem("blühenden"), "bluhend" );
	deepEqual( Stem("blühendes"), "bluhend" );
	deepEqual( Stem("blühendsten"), "bluhend" );
	deepEqual( Stem("blühn"), "bluhn" );
	deepEqual( Stem("blüht"), "bluht" );
	deepEqual( Stem("blühte"), "bluht" );
	deepEqual( Stem("blühten"), "bluht" );
	deepEqual( Stem("blümchen"), "blumch" );
	deepEqual( Stem("blume"), "blum" );
	deepEqual( Stem("blumen"), "blum" );
	deepEqual( Stem("blumenbouquets"), "blumenbouquet" );
	deepEqual( Stem("blumenduft"), "blumenduft" );
	deepEqual( Stem("blumengeschmückte"), "blumengeschmuckt" );
	deepEqual( Stem("blumenglas"), "blumenglas" );
	deepEqual( Stem("blumenhaufen"), "blumenhauf" );
	deepEqual( Stem("blumenköpfe"), "blumenkopf" );
	deepEqual( Stem("blumenkränzen"), "blumenkranz" );
	deepEqual( Stem("blumenstrauss"), "blumenstrauss" );
	deepEqual( Stem("blumenstrauß"), "blumenstrauss" );
	deepEqual( Stem("blumentöpfe"), "blumentopf" );
	deepEqual( Stem("blut"), "blut" );
	deepEqual( Stem("blutarmen"), "blutarm" );
	deepEqual( Stem("blutbräutigam"), "blutbrautigam" );
	deepEqual( Stem("blutbräutigams"), "blutbrautigam" );
	deepEqual( Stem("blutdürstige"), "blutdurst" );
	deepEqual( Stem("blute"), "blut" );
	deepEqual( Stem("blüte"), "blut" );
	deepEqual( Stem("blüten"), "blut" );
	deepEqual( Stem("blütenknopsen"), "blutenknops" );
	deepEqual( Stem("blutes"), "blut" );
	deepEqual( Stem("blutete"), "blutet" );
	deepEqual( Stem("blütezeit"), "blutezeit" );
	deepEqual( Stem("blutgericht"), "blutgericht" );
	deepEqual( Stem("blutgeruch"), "blutgeruch" );
	deepEqual( Stem("blutgestank"), "blutgestank" );
	deepEqual( Stem("blutgieriges"), "blutgier" );
	deepEqual( Stem("blutig"), "blutig" );
	deepEqual( Stem("blutigel"), "blutigel" );
	deepEqual( Stem("blutigen"), "blutig" );
	deepEqual( Stem("blutlose"), "blutlos" );
	deepEqual( Stem("blutmensch"), "blutmensch" );
	deepEqual( Stem("blutrot"), "blutrot" );
	deepEqual( Stem("blutroten"), "blutrot" );
	deepEqual( Stem("blutschlangen"), "blutschlang" );
	deepEqual( Stem("blutschulden"), "blutschuld" );
	deepEqual( Stem("blutsfreundschaft"), "blutsfreundschaft" );
	deepEqual( Stem("blutsfreundschaften"), "blutsfreundschaft" );
	deepEqual( Stem("blutstropfen"), "blutstropf" );
	deepEqual( Stem("blutsverwandten"), "blutsverwandt" );
	deepEqual( Stem("blutumlauf"), "blutumlauf" );
	deepEqual( Stem("blutungen"), "blutung" );
	deepEqual( Stem("blutwelle"), "blutwell" );
	deepEqual( Stem("bm"), "bm" );
	deepEqual( Stem("bock"), "bock" );
	deepEqual( Stem("böckchen"), "bockch" );
	deepEqual( Stem("bocke"), "bock" );
	deepEqual( Stem("böcke"), "bock" );
	deepEqual( Stem("bockelt"), "bockelt" );
	deepEqual( Stem("böcken"), "bock" );
	deepEqual( Stem("bockes"), "bock" );
	deepEqual( Stem("bockreiter"), "bockreit" );
	deepEqual( Stem("bocksbeutel"), "bocksbeutel" );
	deepEqual( Stem("bocksgemäcker"), "bocksgemack" );
	deepEqual( Stem("bockt"), "bockt" );
	deepEqual( Stem("boden"), "bod" );
	deepEqual( Stem("bodenraum"), "bodenraum" );
	deepEqual( Stem("bodens"), "bod" );
	deepEqual( Stem("boell"), "boell" );
	deepEqual( Stem("bog"), "bog" );
	deepEqual( Stem("bogen"), "bog" );
	deepEqual( Stem("böhmerwald"), "bohmerwald" );
	deepEqual( Stem("bohnen"), "bohn" );
	deepEqual( Stem("bohnenstangen"), "bohnenstang" );
	deepEqual( Stem("bohnenwäldchen"), "bohnenwaldch" );
	deepEqual( Stem("böhni"), "bohni" );
	deepEqual( Stem("bohrt"), "bohrt" );
	deepEqual( Stem("bohrten"), "bohrt" );
	deepEqual( Stem("bold"), "bold" );
	deepEqual( Stem("bolen"), "bol" );
	deepEqual( Stem("böll"), "boll" );
	deepEqual( Stem("böllerschüsse"), "bollerschuss" );
	deepEqual( Stem("bollwerk"), "bollwerk" );
	deepEqual( Stem("bologna"), "bologna" );
	deepEqual( Stem("bologneser"), "bolognes" );
	deepEqual( Stem("bolzenburg"), "bolzenburg" );
	deepEqual( Stem("bombardierte"), "bombardiert" );
	deepEqual( Stem("bomben"), "bomb" );
	deepEqual( Stem("bombenschlag"), "bombenschlag" );
	deepEqual( Stem("bona"), "bona" );
	deepEqual( Stem("bonbonbüchse"), "bonbonbuchs" );
	deepEqual( Stem("bonbonknospen"), "bonbonknosp" );
	deepEqual( Stem("bonbons"), "bonbon" );
	deepEqual( Stem("bonbonsträucher"), "bonbonstrauch" );
	deepEqual( Stem("bondevik"), "bondev" );
	deepEqual( Stem("boni"), "boni" );
	deepEqual( Stem("bonum"), "bonum" );
	deepEqual( Stem("bonus"), "bonus" );
	deepEqual( Stem("boot"), "boot" );
	deepEqual( Stem("bootes"), "boot" );
	deepEqual( Stem("bordeaux"), "bordeaux" );
	deepEqual( Stem("borden"), "bord" );
	deepEqual( Stem("borer"), "bor" );
	deepEqual( Stem("born"), "born" );
	deepEqual( Stem("börse"), "bors" );
	deepEqual( Stem("borste"), "borst" );
	deepEqual( Stem("bös"), "bos" );
	deepEqual( Stem("bösartig"), "bosart" );
	deepEqual( Stem("bösartiger"), "bosart" );
	deepEqual( Stem("bösartigkeit"), "bosart" );
	deepEqual( Stem("böschung"), "boschung" );
	deepEqual( Stem("böse"), "bos" );
	deepEqual( Stem("bösem"), "bos" );
	deepEqual( Stem("bösen"), "bos" );
	deepEqual( Stem("böser"), "bos" );
	deepEqual( Stem("böses"), "bos" );
	deepEqual( Stem("bösestun"), "bosestun" );
	deepEqual( Stem("bösewicht"), "bosewicht" );
	deepEqual( Stem("bösewichte"), "bosewicht" );
	deepEqual( Stem("boshafte"), "boshaft" );
	deepEqual( Stem("boshaftes"), "boshaft" );
	deepEqual( Stem("bosheit"), "bosheit" );
	deepEqual( Stem("bössein"), "bossein" );
	deepEqual( Stem("böswillige"), "boswill" );
	deepEqual( Stem("böswilliges"), "boswill" );
	deepEqual( Stem("böswilligkeit"), "boswill" );
	deepEqual( Stem("bot"), "bot" );
	deepEqual( Stem("bote"), "bot" );
	deepEqual( Stem("boten"), "bot" );
	deepEqual( Stem("botschaft"), "botschaft" );
	deepEqual( Stem("botschafter"), "botschaft" );
	deepEqual( Stem("botschafters"), "botschaft" );
	deepEqual( Stem("botta"), "botta" );
	deepEqual( Stem("böttcher"), "bottch" );
	deepEqual( Stem("bouffonerie"), "bouffoneri" );
	deepEqual( Stem("boutique"), "boutiqu" );
	deepEqual( Stem("boykottieren"), "boykotti" );
	deepEqual( Stem("brabanter"), "brabant" );
	deepEqual( Stem("brach"), "brach" );
	deepEqual( Stem("brachen"), "brach" );
	deepEqual( Stem("brachlägen"), "brachlag" );
	deepEqual( Stem("bracht"), "bracht" );
	deepEqual( Stem("brächt"), "bracht" );
	deepEqual( Stem("brachte"), "bracht" );
	deepEqual( Stem("brächte"), "bracht" );
	deepEqual( Stem("brachten"), "bracht" );
	deepEqual( Stem("brächten"), "bracht" );
	deepEqual( Stem("bracken"), "brack" );
	deepEqual( Stem("braffs"), "braff" );
	deepEqual( Stem("brand"), "brand" );
	deepEqual( Stem("brande"), "brand" );
	deepEqual( Stem("brände"), "brand" );
	deepEqual( Stem("branden"), "brand" );
	deepEqual( Stem("brandenburg"), "brandenburg" );
	deepEqual( Stem("brandgefilde"), "brandgefild" );
	deepEqual( Stem("brandmauern"), "brandmau" );
	deepEqual( Stem("brandopfer"), "brandopf" );
	deepEqual( Stem("brandopfern"), "brandopf" );
	deepEqual( Stem("brandroten"), "brandrot" );
	deepEqual( Stem("brandrotes"), "brandrot" );
	deepEqual( Stem("brandschnur"), "brandschnur" );
	deepEqual( Stem("brandung"), "brandung" );
	deepEqual( Stem("brannte"), "brannt" );
	deepEqual( Stem("brannten"), "brannt" );
	deepEqual( Stem("bratapfel"), "bratapfel" );
	deepEqual( Stem("brate"), "brat" );
	deepEqual( Stem("braten"), "brat" );
	deepEqual( Stem("bratenfett"), "bratenfett" );
	deepEqual( Stem("bratenspässen"), "bratenspass" );
	deepEqual( Stem("bratenspiess"), "bratenspiess" );
	deepEqual( Stem("bratenspieß"), "bratenspiess" );
	deepEqual( Stem("bratspiess"), "bratspiess" );
	deepEqual( Stem("bratwurst"), "bratwurst" );
	deepEqual( Stem("brauch"), "brauch" );
	deepEqual( Stem("brauchbar"), "brauchbar" );
	deepEqual( Stem("brauchbaren"), "brauchbar" );
	deepEqual( Stem("brauchbarer"), "brauchbar" );
	deepEqual( Stem("brauche"), "brauch" );
	deepEqual( Stem("brauchen"), "brauch" );
	deepEqual( Stem("brauchet"), "brauchet" );
	deepEqual( Stem("brauchst"), "brauch" );
	deepEqual( Stem("braucht"), "braucht" );
	deepEqual( Stem("brauchte"), "braucht" );
	deepEqual( Stem("brauchten"), "braucht" );
	deepEqual( Stem("brauchtet"), "brauchtet" );
	deepEqual( Stem("brauen"), "brau" );
	deepEqual( Stem("brauervieh"), "brauervieh" );
	deepEqual( Stem("braun"), "braun" );
	deepEqual( Stem("braune"), "braun" );
	deepEqual( Stem("braunem"), "braun" );
	deepEqual( Stem("braunen"), "braun" );
	deepEqual( Stem("brauner"), "braun" );
	deepEqual( Stem("braunes"), "braun" );
	deepEqual( Stem("braungebranntem"), "braungebrannt" );
	deepEqual( Stem("braungoldene"), "braungold" );
	deepEqual( Stem("braunkariertes"), "braunkariert" );
	deepEqual( Stem("bräunliche"), "braunlich" );
	deepEqual( Stem("bräunlichen"), "braunlich" );
	deepEqual( Stem("braunrotes"), "braunrot" );
	deepEqual( Stem("braunschweig"), "braunschweig" );
	deepEqual( Stem("brausen"), "braus" );
	deepEqual( Stem("brauste"), "braust" );
	deepEqual( Stem("brausten"), "braust" );
	deepEqual( Stem("braut"), "braut" );
	deepEqual( Stem("brautbett"), "brautbett" );
	deepEqual( Stem("brautgeschenke"), "brautgeschenk" );
	deepEqual( Stem("bräutigam"), "brautigam" );
	deepEqual( Stem("bräutigams"), "brautigam" );
	deepEqual( Stem("bräutlein"), "brautlein" );
	deepEqual( Stem("brautpaar"), "brautpaar" );
	deepEqual( Stem("brautwesen"), "brautwes" );
	deepEqual( Stem("brav"), "brav" );
	deepEqual( Stem("brave"), "brav" );
	deepEqual( Stem("braven"), "brav" );
	deepEqual( Stem("braver"), "brav" );
	deepEqual( Stem("braves"), "brav" );
	deepEqual( Stem("bravo"), "bravo" );
	deepEqual( Stem("breche"), "brech" );
	deepEqual( Stem("brechen"), "brech" );
	deepEqual( Stem("brechend"), "brechend" );
	deepEqual( Stem("brechenden"), "brechend" );
	deepEqual( Stem("brei"), "brei" );
	deepEqual( Stem("breies"), "breies" );
	deepEqual( Stem("breit"), "breit" );
	deepEqual( Stem("breite"), "breit" );
	deepEqual( Stem("breiten"), "breit" );
	deepEqual( Stem("breiter"), "breit" );
	deepEqual( Stem("breites"), "breit" );
	deepEqual( Stem("breitet"), "breitet" );
	deepEqual( Stem("breitete"), "breitet" );
	deepEqual( Stem("breiteten"), "breitet" );
	deepEqual( Stem("breitgerissenen"), "breitgeriss" );
	deepEqual( Stem("breitgewordenen"), "breitgeword" );
	deepEqual( Stem("breitkrempigen"), "breitkremp" );
	deepEqual( Stem("breitschultrige"), "breitschultr" );
	deepEqual( Stem("breitspurigkeit"), "breitspur" );
	deepEqual( Stem("bremner"), "bremn" );
	deepEqual( Stem("brenne"), "brenn" );
	deepEqual( Stem("brennen"), "brenn" );
	deepEqual( Stem("brennend"), "brennend" );
	deepEqual( Stem("brennendem"), "brennend" );
	deepEqual( Stem("brennenden"), "brennend" );
	deepEqual( Stem("brennendes"), "brennend" );
	deepEqual( Stem("brennt"), "brennt" );
	deepEqual( Stem("brenzelte"), "brenzelt" );
	deepEqual( Stem("brenzlig"), "brenzlig" );
	deepEqual( Stem("brett"), "brett" );
	deepEqual( Stem("brette"), "brett" );
	deepEqual( Stem("bretter"), "brett" );
	deepEqual( Stem("bretternägel"), "bretternagel" );
	deepEqual( Stem("bricht"), "bricht" );
	deepEqual( Stem("bridge"), "bridg" );
	deepEqual( Stem("bridgefreundinnen"), "bridgefreundinn" );
	deepEqual( Stem("brief"), "brief" );
	deepEqual( Stem("briefe"), "brief" );
	deepEqual( Stem("briefes"), "brief" );
	deepEqual( Stem("brieflich"), "brieflich" );
	deepEqual( Stem("briefstelle"), "briefstell" );
	deepEqual( Stem("briefsteller"), "briefstell" );
	deepEqual( Stem("brieftasche"), "brieftasch" );
	deepEqual( Stem("briet"), "briet" );
	deepEqual( Stem("brille"), "brill" );
	deepEqual( Stem("bring"), "bring" );
	deepEqual( Stem("bringe"), "bring" );
	deepEqual( Stem("bringen"), "bring" );
	deepEqual( Stem("bringenden"), "bringend" );
	deepEqual( Stem("bringet"), "bringet" );
	deepEqual( Stem("bringt"), "bringt" );
	deepEqual( Stem("brite"), "brit" );
	deepEqual( Stem("briten"), "brit" );
	deepEqual( Stem("britische"), "britisch" );
	deepEqual( Stem("britischen"), "britisch" );
	deepEqual( Stem("brits"), "brit" );
	deepEqual( Stem("brochen"), "broch" );
	deepEqual( Stem("bröckeln"), "brockeln" );
	deepEqual( Stem("bröckelt"), "brockelt" );
	deepEqual( Stem("brocken"), "brock" );
	deepEqual( Stem("brokatene"), "brokat" );
	deepEqual( Stem("broldin"), "broldin" );
	deepEqual( Stem("brosamen"), "brosam" );
	deepEqual( Stem("broschek"), "broschek" );
	deepEqual( Stem("broscheks"), "broschek" );
	deepEqual( Stem("broschüre"), "broschur" );
	deepEqual( Stem("brot"), "brot" );
	deepEqual( Stem("brotbissen"), "brotbiss" );
	deepEqual( Stem("brötchen"), "brotch" );
	deepEqual( Stem("brote"), "brot" );
	deepEqual( Stem("broten"), "brot" );
	deepEqual( Stem("brotes"), "brot" );
	deepEqual( Stem("brotessen"), "brotess" );
	deepEqual( Stem("brotlaib"), "brotlaib" );
	deepEqual( Stem("brotrinde"), "brotrind" );
	deepEqual( Stem("brots"), "brot" );
	deepEqual( Stem("brotteller"), "brottell" );
	deepEqual( Stem("brrrrrrrr"), "brrrrrrrr" );
	deepEqual( Stem("brsg"), "brsg" );
	deepEqual( Stem("bruch"), "bruch" );
	deepEqual( Stem("brüche"), "bruch" );
	deepEqual( Stem("bruchstückweise"), "bruchstuckweis" );
	deepEqual( Stem("bruchus"), "bruchus" );
	deepEqual( Stem("bruchwand"), "bruchwand" );
	deepEqual( Stem("brücke"), "bruck" );
	deepEqual( Stem("brückenbauer"), "bruckenbau" );
	deepEqual( Stem("brudder"), "brudd" );
	deepEqual( Stem("bruder"), "brud" );
	deepEqual( Stem("brüder"), "brud" );
	deepEqual( Stem("brüderlich"), "brud" );
	deepEqual( Stem("brüdern"), "brud" );
	deepEqual( Stem("bruders"), "brud" );
	deepEqual( Stem("bruderschaft"), "bruderschaft" );
	deepEqual( Stem("brüderschaft"), "bruderschaft" );
	deepEqual( Stem("bruderschaften"), "bruderschaft" );
	deepEqual( Stem("brühe"), "bruh" );
	deepEqual( Stem("brüllen"), "brull" );
	deepEqual( Stem("brüllend"), "brullend" );
	deepEqual( Stem("brüller"), "brull" );
	deepEqual( Stem("brüllet"), "brullet" );
	deepEqual( Stem("brüllte"), "brullt" );
	deepEqual( Stem("brumm"), "brumm" );
	deepEqual( Stem("brummbass"), "brummbass" );
	deepEqual( Stem("brummbässe"), "brummbass" );
	deepEqual( Stem("brummbassgezeter"), "brummbassgezet" );
	deepEqual( Stem("brummbaßgezeter"), "brummbassgezet" );
	deepEqual( Stem("brummen"), "brumm" );
	deepEqual( Stem("brummend"), "brummend" );
	deepEqual( Stem("brummenden"), "brummend" );
	deepEqual( Stem("brummkonzert"), "brummkonzert" );
	deepEqual( Stem("brummt"), "brummt" );
	deepEqual( Stem("brummte"), "brummt" );
	deepEqual( Stem("brunnen"), "brunn" );
	deepEqual( Stem("brunnenbank"), "brunnenbank" );
	deepEqual( Stem("brunnens"), "brunn" );
	deepEqual( Stem("brunnenschwengel"), "brunnenschwengel" );
	deepEqual( Stem("brunnenschwengeln"), "brunnenschwengeln" );
	deepEqual( Stem("brunnenstrahl"), "brunnenstrahl" );
	deepEqual( Stem("brünstig"), "brunstig" );
	deepEqual( Stem("brünstigem"), "brunstig" );
	deepEqual( Stem("brüssel"), "brussel" );
	deepEqual( Stem("brust"), "brust" );
	deepEqual( Stem("brustbildern"), "brustbild" );
	deepEqual( Stem("brüste"), "brust" );
	deepEqual( Stem("brustfleck"), "brustfleck" );
	deepEqual( Stem("brustgewand"), "brustgewand" );
	deepEqual( Stem("brustkorb"), "brustkorb" );
	deepEqual( Stem("brustlatz"), "brustlatz" );
	deepEqual( Stem("brustschild"), "brustschild" );
	deepEqual( Stem("brustschildlein"), "brustschildlein" );
	deepEqual( Stem("brusttasche"), "brusttasch" );
	deepEqual( Stem("brüstung"), "brustung" );
	deepEqual( Stem("brustwehr"), "brustwehr" );
	deepEqual( Stem("brütend"), "brutend" );
	deepEqual( Stem("brüteten"), "brutet" );
	deepEqual( Stem("brütige"), "brutig" );
	deepEqual( Stem("bschlachter"), "bschlacht" );
	deepEqual( Stem("bscht"), "bscht" );
	deepEqual( Stem("bsorgen"), "bsorg" );
	deepEqual( Stem("bsucht"), "bsucht" );
	deepEqual( Stem("bua"), "bua" );
	deepEqual( Stem("bub"), "bub" );
	deepEqual( Stem("bübchen"), "bubch" );
	deepEqual( Stem("buben"), "bub" );
	deepEqual( Stem("bubenmädchen"), "bubenmadch" );
	deepEqual( Stem("bübisch"), "bubisch" );
	deepEqual( Stem("buch"), "buch" );
	deepEqual( Stem("buchbinder"), "buchbind" );
	deepEqual( Stem("buchbindergesellen"), "buchbindergesell" );
	deepEqual( Stem("buchbinders"), "buchbind" );
	deepEqual( Stem("buche"), "buch" );
	deepEqual( Stem("büchelchen"), "buchelch" );
	deepEqual( Stem("buchen"), "buch" );
	deepEqual( Stem("buchenast"), "buchenast" );
	deepEqual( Stem("buchenholz"), "buchenholz" );
	deepEqual( Stem("buchenknorren"), "buchenknorr" );
	deepEqual( Stem("buchenlaub"), "buchenlaub" );
	deepEqual( Stem("buchenwäldchen"), "buchenwaldch" );
	deepEqual( Stem("buchenwipfel"), "buchenwipfel" );
	deepEqual( Stem("bücher"), "buch" );
	deepEqual( Stem("büchereien"), "bucherei" );
	deepEqual( Stem("büchern"), "buch" );
	deepEqual( Stem("bücherschränken"), "bucherschrank" );
	deepEqual( Stem("buches"), "buch" );
	deepEqual( Stem("buchhalter"), "buchhalt" );
	deepEqual( Stem("buchhandlungen"), "buchhandl" );
	deepEqual( Stem("büchlein"), "buchlein" );
	deepEqual( Stem("büchschen"), "buchsch" );
	deepEqual( Stem("büchse"), "buchs" );
	deepEqual( Stem("büchsen"), "buchs" );
	deepEqual( Stem("büchsenlicht"), "buchsenlicht" );
	deepEqual( Stem("büchsenmacher"), "buchsenmach" );
	deepEqual( Stem("büchsenmacherei"), "buchsenmacherei" );
	deepEqual( Stem("büchsenschmied"), "buchsenschmied" );
	deepEqual( Stem("büchsenschuss"), "buchsenschuss" );
	deepEqual( Stem("büchsenstein"), "buchsenstein" );
	deepEqual( Stem("büchsflinte"), "buchsflint" );
	deepEqual( Stem("buchstabe"), "buchstab" );
	deepEqual( Stem("buchstaben"), "buchstab" );
	deepEqual( Stem("buchstabens"), "buchstab" );
	deepEqual( Stem("buchstabensinn"), "buchstabensinn" );
	deepEqual( Stem("buchstabensinne"), "buchstabensinn" );
	deepEqual( Stem("buchstabensinns"), "buchstabensinn" );
	deepEqual( Stem("buchstäbliche"), "buchstab" );
	deepEqual( Stem("buchstäblichen"), "buchstab" );
	deepEqual( Stem("buchungsbelegen"), "buchungsbeleg" );
	deepEqual( Stem("bücke"), "buck" );
	deepEqual( Stem("buckel"), "buckel" );
	deepEqual( Stem("bücken"), "buck" );
	deepEqual( Stem("bucklige"), "bucklig" );
	deepEqual( Stem("buckligen"), "bucklig" );
	deepEqual( Stem("buckliger"), "bucklig" );
	deepEqual( Stem("buckliges"), "bucklig" );
	deepEqual( Stem("buckskin"), "buckskin" );
	deepEqual( Stem("bückt"), "buckt" );
	deepEqual( Stem("bückte"), "buckt" );
	deepEqual( Stem("buden"), "bud" );
	deepEqual( Stem("budgetiert"), "budgetiert" );
	deepEqual( Stem("büfettier"), "bufetti" );
	deepEqual( Stem("büffel"), "buffel" );
	deepEqual( Stem("büffet"), "buffet" );
	deepEqual( Stem("bügeleisen"), "bugeleis" );
	deepEqual( Stem("bügelgestemmte"), "bugelgestemmt" );
	deepEqual( Stem("bügelte"), "bugelt" );
	deepEqual( Stem("buhlerisches"), "buhler" );
	deepEqual( Stem("buhlerlohn"), "buhlerlohn" );
	deepEqual( Stem("buhleten"), "buhlet" );
	deepEqual( Stem("bühnenmanagerin"), "buhnenmanagerin" );
	deepEqual( Stem("bujv"), "bujv" );
	deepEqual( Stem("bulle"), "bull" );
	deepEqual( Stem("bullern"), "bull" );
	deepEqual( Stem("bullerte"), "bullert" );
	deepEqual( Stem("bum"), "bum" );
	deepEqual( Stem("bums"), "bum" );
	deepEqual( Stem("bund"), "bund" );
	deepEqual( Stem("bunde"), "bund" );
	deepEqual( Stem("bünde"), "bund" );
	deepEqual( Stem("bündel"), "bundel" );
	deepEqual( Stem("bündelchen"), "bundelch" );
	deepEqual( Stem("bündelein"), "bundelein" );
	deepEqual( Stem("bündeln"), "bundeln" );
	deepEqual( Stem("bündelturme"), "bundelturm" );
	deepEqual( Stem("bündelweise"), "bundelweis" );
	deepEqual( Stem("bundes"), "bund" );
	deepEqual( Stem("bundesebene"), "bundeseb" );
	deepEqual( Stem("bundesgenossen"), "bundesgenoss" );
	deepEqual( Stem("bundesgetz"), "bundesgetz" );
	deepEqual( Stem("bundeslade"), "bundeslad" );
	deepEqual( Stem("bundesland"), "bundesland" );
	deepEqual( Stem("bundeslandes"), "bundesland" );
	deepEqual( Stem("bundesleben"), "bundesleb" );
	deepEqual( Stem("bundespräsident"), "bundesprasident" );
	deepEqual( Stem("bundesrat"), "bundesrat" );
	deepEqual( Stem("bundesräte"), "bundesrat" );
	deepEqual( Stem("bundessache"), "bundessach" );
	deepEqual( Stem("bundesverwaltung"), "bundesverwalt" );
	deepEqual( Stem("bundeswehr"), "bundeswehr" );
	deepEqual( Stem("bündner"), "bundn" );
	deepEqual( Stem("bündnis"), "bundnis" );
	deepEqual( Stem("bündnisse"), "bundnis" );
	deepEqual( Stem("bündnissen"), "bundnis" );
	deepEqual( Stem("bünger"), "bung" );
	deepEqual( Stem("bunt"), "bunt" );
	deepEqual( Stem("buntbemalte"), "buntbemalt" );
	deepEqual( Stem("bunte"), "bunt" );
	deepEqual( Stem("buntem"), "bunt" );
	deepEqual( Stem("bunten"), "bunt" );
	deepEqual( Stem("bunter"), "bunt" );
	deepEqual( Stem("buntes"), "bunt" );
	deepEqual( Stem("buntesten"), "bunt" );
	deepEqual( Stem("buntester"), "bunt" );
	deepEqual( Stem("buntscheckigen"), "buntscheck" );
	deepEqual( Stem("bünzli"), "bunzli" );
	deepEqual( Stem("bünzlin"), "bunzlin" );
	deepEqual( Stem("buomberger"), "buomberg" );
	deepEqual( Stem("bur"), "bur" );
	deepEqual( Stem("bureau"), "bureau" );
	deepEqual( Stem("bureaus"), "bureaus" );
	deepEqual( Stem("burg"), "burg" );
	deepEqual( Stem("burgen"), "burg" );
	deepEqual( Stem("bürger"), "burg" );
	deepEqual( Stem("bürgerhut"), "burgerhut" );
	deepEqual( Stem("bürgerinnen"), "burgerinn" );
	deepEqual( Stem("bürgerkriegen"), "burgerkrieg" );
	deepEqual( Stem("bürgerlich"), "burg" );
	deepEqual( Stem("bürgerliche"), "burg" );
	deepEqual( Stem("bürgerlichem"), "burg" );
	deepEqual( Stem("bürgerlichen"), "burg" );
	deepEqual( Stem("bürgermeister"), "burgermeist" );
	deepEqual( Stem("bürgern"), "burg" );
	deepEqual( Stem("bürgernest"), "burgern" );
	deepEqual( Stem("bürgerrock"), "burgerrock" );
	deepEqual( Stem("bürgerschaft"), "burgerschaft" );
	deepEqual( Stem("bürgersinn"), "burgersinn" );
	deepEqual( Stem("bürgertugend"), "burgertug" );
	deepEqual( Stem("burgfenster"), "burgfen" );
	deepEqual( Stem("burghofe"), "burghof" );
	deepEqual( Stem("bürgschaft"), "burgschaft" );
	deepEqual( Stem("burgtor"), "burgtor" );
	deepEqual( Stem("burnus"), "burnus" );
	deepEqual( Stem("burnusträgern"), "burnustrag" );
	deepEqual( Stem("büro"), "buro" );
	deepEqual( Stem("bürokratischer"), "burokrat" );
	deepEqual( Stem("büroräume"), "buroraum" );
	deepEqual( Stem("büros"), "buros" );
	deepEqual( Stem("bürozeit"), "burozeit" );
	deepEqual( Stem("bursch"), "bursch" );
	deepEqual( Stem("bürschchen"), "burschch" );
	deepEqual( Stem("bursche"), "bursch" );
	deepEqual( Stem("burschen"), "bursch" );
	deepEqual( Stem("burschikosen"), "burschikos" );
	deepEqual( Stem("bürschlein"), "burschlein" );
	deepEqual( Stem("bürstchen"), "burstch" );
	deepEqual( Stem("bürste"), "burst" );
	deepEqual( Stem("bürstete"), "burstet" );
	deepEqual( Stem("bürstner"), "burstn" );
	deepEqual( Stem("bürstners"), "burstn" );
	deepEqual( Stem("bus"), "bus" );
	deepEqual( Stem("busch"), "busch" );
	deepEqual( Stem("büsche"), "busch" );
	deepEqual( Stem("büschel"), "buschel" );
	deepEqual( Stem("büschen"), "busch" );
	deepEqual( Stem("buschigem"), "buschig" );
	deepEqual( Stem("buschigen"), "buschig" );
	deepEqual( Stem("buschwerk"), "buschwerk" );
	deepEqual( Stem("busen"), "bus" );
	deepEqual( Stem("busens"), "bus" );
	deepEqual( Stem("busse"), "buss" );
	deepEqual( Stem("buße"), "buss" );
	deepEqual( Stem("büste"), "bust" );
	deepEqual( Stem("bütte"), "butt" );
	deepEqual( Stem("butter"), "butt" );
	deepEqual( Stem("butterblume"), "butterblum" );
	deepEqual( Stem("butterbrot"), "butterbrot" );
	deepEqual( Stem("butterfett"), "butterfett" );
	deepEqual( Stem("buttertopf"), "buttertopf" );
	deepEqual( Stem("byssus"), "byssus" );
	deepEqual( Stem("bz"), "bz" );
	deepEqual( Stem("bzw"), "bzw" );
	deepEqual( Stem("ca"), "ca" );
	deepEqual( Stem("cabaret"), "cabaret" );
	deepEqual( Stem("cadens"), "cad" );
	deepEqual( Stem("café"), "café" );
	deepEqual( Stem("camelia"), "camelia" );
	deepEqual( Stem("canaille"), "canaill" );
	deepEqual( Stem("canailles"), "canaill" );
	deepEqual( Stem("canoro"), "canoro" );
	deepEqual( Stem("capua"), "capua" );
	deepEqual( Stem("care"), "car" );
	deepEqual( Stem("caritas"), "caritas" );
	deepEqual( Stem("carl"), "carl" );
	deepEqual( Stem("carriere"), "carri" );
	deepEqual( Stem("castor"), "castor" );
	deepEqual( Stem("catigo"), "catigo" );
	deepEqual( Stem("causa"), "causa" );
	deepEqual( Stem("causam"), "causam" );
	deepEqual( Stem("causas"), "causas" );
	deepEqual( Stem("cd"), "cd" );
	deepEqual( Stem("cdu"), "cdu" );
	deepEqual( Stem("cenis"), "cenis" );
	deepEqual( Stem("center"), "cent" );
	deepEqual( Stem("central"), "central" );
	deepEqual( Stem("centre"), "centr" );
	deepEqual( Stem("ch"), "ch" );
	deepEqual( Stem("chaldäer"), "chalda" );
	deepEqual( Stem("chaldäern"), "chalda" );
	deepEqual( Stem("cham"), "cham" );
	deepEqual( Stem("chambery"), "chambery" );
	deepEqual( Stem("champagner"), "champagn" );
	deepEqual( Stem("champagnerflasche"), "champagnerflasch" );
	deepEqual( Stem("champagnerkelch"), "champagnerkelch" );
	deepEqual( Stem("chance"), "chanc" );
	deepEqual( Stem("chancen"), "chanc" );
	deepEqual( Stem("channa"), "channa" );
	deepEqual( Stem("chanoch"), "chanoch" );
	deepEqual( Stem("chanochs"), "chanoch" );
	deepEqual( Stem("chaos"), "chaos" );
	deepEqual( Stem("chaotischen"), "chaotisch" );
	deepEqual( Stem("character"), "charact" );
	deepEqual( Stem("charakter"), "charakt" );
	deepEqual( Stem("charakterisieren"), "charakterisi" );
	deepEqual( Stem("charakteristik"), "charakterist" );
	deepEqual( Stem("charakteristisch"), "charakterist" );
	deepEqual( Stem("charakteristische"), "charakterist" );
	deepEqual( Stem("charakters"), "charakt" );
	deepEqual( Stem("charakterzug"), "charakterzug" );
	deepEqual( Stem("charitas"), "charitas" );
	deepEqual( Stem("chateau"), "chateau" );
	deepEqual( Stem("chaussee"), "chausse" );
	deepEqual( Stem("chavah"), "chavah" );
	deepEqual( Stem("chavillah"), "chavillah" );
	deepEqual( Stem("chazors"), "chazor" );
	deepEqual( Stem("che"), "che" );
	deepEqual( Stem("chebron"), "chebron" );
	deepEqual( Stem("check"), "check" );
	deepEqual( Stem("checque"), "checqu" );
	deepEqual( Stem("cheese"), "chees" );
	deepEqual( Stem("chef"), "chef" );
	deepEqual( Stem("cheflektor"), "cheflektor" );
	deepEqual( Stem("chemie"), "chemi" );
	deepEqual( Stem("chemikalien"), "chemikali" );
	deepEqual( Stem("chemist"), "chemist" );
	deepEqual( Stem("chen"), "chen" );
	deepEqual( Stem("cheres"), "cher" );
	deepEqual( Stem("cherub"), "cherub" );
	deepEqual( Stem("cherube"), "cherub" );
	deepEqual( Stem("cheruben"), "cherub" );
	deepEqual( Stem("cherubim"), "cherubim" );
	deepEqual( Stem("cherubs"), "cherub" );
	deepEqual( Stem("chethiterin"), "chethiterin" );
	deepEqual( Stem("chezron"), "chezron" );
	deepEqual( Stem("chiddekel"), "chiddekel" );
	deepEqual( Stem("chigen"), "chig" );
	deepEqual( Stem("chimärische"), "chimar" );
	deepEqual( Stem("china"), "china" );
	deepEqual( Stem("chinesischen"), "chines" );
	deepEqual( Stem("chinesischer"), "chines" );
	deepEqual( Stem("chips"), "chips" );
	deepEqual( Stem("chirurgen"), "chirurg" );
	deepEqual( Stem("chirurgiegehilfen"), "chirurgiegehilf" );
	deepEqual( Stem("chirurgische"), "chirurg" );
	deepEqual( Stem("choke"), "chok" );
	deepEqual( Stem("choleriker"), "choler" );
	deepEqual( Stem("chomer"), "chom" );
	deepEqual( Stem("chomers"), "chom" );
	deepEqual( Stem("chöre"), "chor" );
	deepEqual( Stem("chören"), "chor" );
	deepEqual( Stem("chp"), "chp" );
	deepEqual( Stem("christ"), "christ" );
	deepEqual( Stem("christa"), "christa" );
	deepEqual( Stem("christdemokratischen"), "christdemokrat" );
	deepEqual( Stem("christen"), "christ" );
	deepEqual( Stem("christenglauben"), "christenglaub" );
	deepEqual( Stem("christenheit"), "christ" );
	deepEqual( Stem("christentum"), "christentum" );
	deepEqual( Stem("christentums"), "christentum" );
	deepEqual( Stem("christi"), "christi" );
	deepEqual( Stem("christian"), "christian" );
	deepEqual( Stem("christinnen"), "christinn" );
	deepEqual( Stem("christkindchen"), "christkindch" );
	deepEqual( Stem("christkindchens"), "christkindch" );
	deepEqual( Stem("christl"), "christl" );
	deepEqual( Stem("christlich"), "christlich" );
	deepEqual( Stem("christliche"), "christlich" );
	deepEqual( Stem("christlichen"), "christlich" );
	deepEqual( Stem("christlicher"), "christlich" );
	deepEqual( Stem("christlicherseits"), "christlicherseit" );
	deepEqual( Stem("christls"), "christl" );
	deepEqual( Stem("christo"), "christo" );
	deepEqual( Stem("christoph"), "christoph" );
	deepEqual( Stem("christopher"), "christoph" );
	deepEqual( Stem("christus"), "christus" );
	deepEqual( Stem("chronik"), "chronik" );
	deepEqual( Stem("chronischen"), "chronisch" );
	deepEqual( Stem("chrysopras"), "chrysopras" );
	deepEqual( Stem("cicero"), "cicero" );
	deepEqual( Stem("citi"), "citi" );
	deepEqual( Stem("city"), "city" );
	deepEqual( Stem("claire"), "clair" );
	deepEqual( Stem("claude"), "claud" );
	deepEqual( Stem("close"), "clos" );
	deepEqual( Stem("club"), "club" );
	deepEqual( Stem("co"), "co" );
	deepEqual( Stem("coeleste"), "coel" );
	deepEqual( Stem("coelesti"), "coelesti" );
	deepEqual( Stem("coelestis"), "coelestis" );
	deepEqual( Stem("cogitare"), "cogitar" );
	deepEqual( Stem("coles"), "col" );
	deepEqual( Stem("college"), "colleg" );
	deepEqual( Stem("colores"), "color" );
	deepEqual( Stem("comedian"), "comedian" );
	deepEqual( Stem("committee"), "committe" );
	deepEqual( Stem("communia"), "communia" );
	deepEqual( Stem("communique"), "communiqu" );
	deepEqual( Stem("comparationis"), "comparationis" );
	deepEqual( Stem("computer"), "comput" );
	deepEqual( Stem("computern"), "comput" );
	deepEqual( Stem("computertomographie"), "computertomographi" );
	deepEqual( Stem("concreto"), "concreto" );
	deepEqual( Stem("condito"), "condito" );
	deepEqual( Stem("conference"), "conferenc" );
	deepEqual( Stem("conjugio"), "conjugio" );
	deepEqual( Stem("consatant"), "consatant" );
	deepEqual( Stem("consummatum"), "consummatum" );
	deepEqual( Stem("continens"), "contin" );
	deepEqual( Stem("contraria"), "contraria" );
	deepEqual( Stem("contrarias"), "contrarias" );
	deepEqual( Stem("copulatus"), "copulatus" );
	deepEqual( Stem("copy"), "copy" );
	deepEqual( Stem("corpora"), "corpora" );
	deepEqual( Stem("corporis"), "corporis" );
	deepEqual( Stem("corpus"), "corpus" );
	deepEqual( Stem("cosmic"), "cosmic" );
	deepEqual( Stem("costum"), "costum" );
	deepEqual( Stem("cotti"), "cotti" );
	deepEqual( Stem("couch"), "couch" );
	deepEqual( Stem("council"), "council" );
	deepEqual( Stem("couplet"), "couplet" );
	deepEqual( Stem("cream"), "cream" );
	deepEqual( Stem("credos"), "credos" );
	deepEqual( Stem("crescenz"), "crescenz" );
	deepEqual( Stem("crossair"), "crossair" );
	deepEqual( Stem("csp"), "csp" );
	deepEqual( Stem("cultores"), "cultor" );
	deepEqual( Stem("cum"), "cum" );
	deepEqual( Stem("customer"), "custom" );
	deepEqual( Stem("cutta"), "cutta" );
	deepEqual( Stem("cylinderhut"), "cylinderhut" );
	deepEqual( Stem("cyperwein"), "cyperwein" );
	deepEqual( Stem("d"), "d" );
	deepEqual( Stem("da"), "da" );
	deepEqual( Stem("dabei"), "dabei" );
	deepEqual( Stem("dabeistand"), "dabeistand" );
	deepEqual( Stem("dabeizusein"), "dabeizusein" );
	deepEqual( Stem("dableiben"), "dableib" );
	deepEqual( Stem("dach"), "dach" );
	deepEqual( Stem("dachboden"), "dachbod" );
	deepEqual( Stem("dache"), "dach" );
	deepEqual( Stem("dächer"), "dach" );
	deepEqual( Stem("dächern"), "dach" );
	deepEqual( Stem("daches"), "dach" );
	deepEqual( Stem("dachorganisation"), "dachorganisation" );
	deepEqual( Stem("dachrinne"), "dachrinn" );
	deepEqual( Stem("dachs"), "dach" );
	deepEqual( Stem("dachse"), "dachs" );
	deepEqual( Stem("dachsfell"), "dachsfell" );
	deepEqual( Stem("dachsfellen"), "dachsfell" );
	deepEqual( Stem("dachte"), "dacht" );
	deepEqual( Stem("dachten"), "dacht" );
	deepEqual( Stem("dächten"), "dacht" );
	deepEqual( Stem("dachtraufe"), "dachtrauf" );
	deepEqual( Stem("dachtürmchen"), "dachturmch" );
	deepEqual( Stem("dackel"), "dackel" );
	deepEqual( Stem("dackeln"), "dackeln" );
	deepEqual( Stem("dackels"), "dackel" );
	deepEqual( Stem("dackelzüchterei"), "dackelzuchterei" );
	deepEqual( Stem("dadrauf"), "dadrauf" );
	deepEqual( Stem("dadurch"), "dadurch" );
	deepEqual( Stem("dafür"), "dafur" );
	deepEqual( Stem("dag"), "dag" );
	deepEqual( Stem("dageblieben"), "dageblieb" );
	deepEqual( Stem("dagegen"), "dageg" );
	deepEqual( Stem("dagesessen"), "dagesess" );
	deepEqual( Stem("dagestanden"), "dagestand" );
	deepEqual( Stem("dagewesen"), "dagewes" );
	deepEqual( Stem("daheim"), "daheim" );
	deepEqual( Stem("daher"), "dah" );
	deepEqual( Stem("dahergefahren"), "dahergefahr" );
	deepEqual( Stem("dahergerannt"), "dahergerannt" );
	deepEqual( Stem("dahergeschlenkert"), "dahergeschlenkert" );
	deepEqual( Stem("daherging"), "daherging" );
	deepEqual( Stem("daherkam"), "daherkam" );
	deepEqual( Stem("daherkommenden"), "daherkomm" );
	deepEqual( Stem("daherkommt"), "daherkommt" );
	deepEqual( Stem("daherspringen"), "daherspring" );
	deepEqual( Stem("dahi"), "dahi" );
	deepEqual( Stem("dahin"), "dahin" );
	deepEqual( Stem("dahinfährt"), "dahinfahrt" );
	deepEqual( Stem("dahinfuhr"), "dahinfuhr" );
	deepEqual( Stem("dahingerafft"), "dahingerafft" );
	deepEqual( Stem("dahingezogen"), "dahingezog" );
	deepEqual( Stem("dahingingen"), "dahinging" );
	deepEqual( Stem("dahinschritt"), "dahinschritt" );
	deepEqual( Stem("dahinter"), "dahint" );
	deepEqual( Stem("dahinterkomme"), "dahinterkomm" );
	deepEqual( Stem("dahintersteckte"), "dahintersteckt" );
	deepEqual( Stem("dahinzog"), "dahinzog" );
	deepEqual( Stem("dalag"), "dalag" );
	deepEqual( Stem("daliegen"), "dalieg" );
	deepEqual( Stem("daliegende"), "dalieg" );
	deepEqual( Stem("daliegenden"), "dalieg" );
	deepEqual( Stem("daliessest"), "daliess" );
	deepEqual( Stem("damal"), "damal" );
	deepEqual( Stem("damalige"), "damal" );
	deepEqual( Stem("damaligen"), "damal" );
	deepEqual( Stem("damaliger"), "damal" );
	deepEqual( Stem("damals"), "damal" );
	deepEqual( Stem("damaskus"), "damaskus" );
	deepEqual( Stem("damc"), "damc" );
	deepEqual( Stem("dame"), "dam" );
	deepEqual( Stem("damen"), "dam" );
	deepEqual( Stem("damenbesuch"), "damenbesuch" );
	deepEqual( Stem("damenuhr"), "damenuhr" );
	deepEqual( Stem("damenwelt"), "damenwelt" );
	deepEqual( Stem("damit"), "damit" );
	deepEqual( Stem("dämme"), "damm" );
	deepEqual( Stem("dämmerigen"), "dammer" );
	deepEqual( Stem("dämmeriges"), "dammer" );
	deepEqual( Stem("dämmerlicht"), "dammerlicht" );
	deepEqual( Stem("dämmern"), "damm" );
	deepEqual( Stem("dämmerschein"), "dammerschein" );
	deepEqual( Stem("dämmerte"), "dammert" );
	deepEqual( Stem("dämmerung"), "dammer" );
	deepEqual( Stem("dämmrigen"), "dammrig" );
	deepEqual( Stem("dämon"), "damon" );
	deepEqual( Stem("dämonen"), "damon" );
	deepEqual( Stem("dämonische"), "damon" );
	deepEqual( Stem("dampfenden"), "dampfend" );
	deepEqual( Stem("dampfstrahl"), "dampfstrahl" );
	deepEqual( Stem("dämpfte"), "dampft" );
	deepEqual( Stem("dan"), "dan" );
	deepEqual( Stem("danach"), "danach" );
	deepEqual( Stem("daneben"), "daneb" );
	deepEqual( Stem("dänemark"), "danemark" );
	deepEqual( Stem("danggen"), "dangg" );
	deepEqual( Stem("daniel"), "daniel" );
	deepEqual( Stem("dänischen"), "danisch" );
	deepEqual( Stem("dank"), "dank" );
	deepEqual( Stem("dankbar"), "dankbar" );
	deepEqual( Stem("dankbare"), "dankbar" );
	deepEqual( Stem("dankbarer"), "dankbar" );
	deepEqual( Stem("dankbares"), "dankbar" );
	deepEqual( Stem("dankbarkeit"), "dankbar" );
	deepEqual( Stem("dankbarst"), "dankbarst" );
	deepEqual( Stem("danke"), "dank" );
	deepEqual( Stem("danken"), "dank" );
	deepEqual( Stem("dankes"), "dank" );
	deepEqual( Stem("danket"), "danket" );
	deepEqual( Stem("dankte"), "dankt" );
	deepEqual( Stem("dann"), "dann" );
	deepEqual( Stem("dannen"), "dann" );
	deepEqual( Stem("dantine"), "dantin" );
	deepEqual( Stem("dar"), "dar" );
	deepEqual( Stem("daran"), "daran" );
	deepEqual( Stem("darangehen"), "darangeh" );
	deepEqual( Stem("darangesetzt"), "darangesetzt" );
	deepEqual( Stem("darauf"), "darauf" );
	deepEqual( Stem("darauffolgenden"), "darauffolg" );
	deepEqual( Stem("daraufstellen"), "daraufstell" );
	deepEqual( Stem("daraus"), "daraus" );
	deepEqual( Stem("darben"), "darb" );
	deepEqual( Stem("darbieten"), "darbiet" );
	deepEqual( Stem("darbietende"), "darbiet" );
	deepEqual( Stem("darbietendes"), "darbiet" );
	deepEqual( Stem("darbietet"), "darbietet" );
	deepEqual( Stem("darbrachte"), "darbracht" );
	deepEqual( Stem("darbrachten"), "darbracht" );
	deepEqual( Stem("darbringen"), "darbring" );
	deepEqual( Stem("darbringt"), "darbringt" );
	deepEqual( Stem("darbringung"), "darbring" );
	deepEqual( Stem("darein"), "darein" );
	deepEqual( Stem("darf"), "darf" );
	deepEqual( Stem("darfst"), "darf" );
	deepEqual( Stem("därfst"), "darf" );
	deepEqual( Stem("dargebracht"), "dargebracht" );
	deepEqual( Stem("dargelegt"), "dargelegt" );
	deepEqual( Stem("dargereicht"), "dargereicht" );
	deepEqual( Stem("dargestellt"), "dargestellt" );
	deepEqual( Stem("dargetan"), "dargetan" );
	deepEqual( Stem("darin"), "darin" );
	deepEqual( Stem("darinnen"), "darinn" );
	deepEqual( Stem("darlegen"), "darleg" );
	deepEqual( Stem("darlegt"), "darlegt" );
	deepEqual( Stem("darlehen"), "darleh" );
	deepEqual( Stem("darling"), "darling" );
	deepEqual( Stem("darnach"), "darnach" );
	deepEqual( Stem("darnieder"), "darnied" );
	deepEqual( Stem("darniederliegen"), "darniederlieg" );
	deepEqual( Stem("darreichen"), "darreich" );
	deepEqual( Stem("darreichte"), "darreicht" );
	deepEqual( Stem("darstelle"), "darstell" );
	deepEqual( Stem("darstellen"), "darstell" );
	deepEqual( Stem("darstellenden"), "darstell" );
	deepEqual( Stem("darstelleten"), "darstellet" );
	deepEqual( Stem("darstellt"), "darstellt" );
	deepEqual( Stem("darstellte"), "darstellt" );
	deepEqual( Stem("darstellten"), "darstellt" );
	deepEqual( Stem("darstellung"), "darstell" );
	deepEqual( Stem("darstellungsbild"), "darstellungsbild" );
	deepEqual( Stem("dartun"), "dartun" );
	deepEqual( Stem("dartust"), "dartust" );
	deepEqual( Stem("darüber"), "darub" );
	deepEqual( Stem("darüberhinaus"), "daruberhinaus" );
	deepEqual( Stem("darum"), "darum" );
	deepEqual( Stem("darunter"), "darunt" );
	deepEqual( Stem("darzustellen"), "darzustell" );
	deepEqual( Stem("das"), "das" );
	deepEqual( Stem("dasass"), "dasass" );
	deepEqual( Stem("dasassen"), "dasass" );
	deepEqual( Stem("dasaßen"), "dasass" );
	deepEqual( Stem("daschiesst"), "daschiesst" );
	deepEqual( Stem("daseiende"), "daseiend" );
	deepEqual( Stem("dasein"), "dasein" );
	deepEqual( Stem("daseins"), "dasein" );
	deepEqual( Stem("daselbst"), "daselb" );
	deepEqual( Stem("dasige"), "dasig" );
	deepEqual( Stem("dasitzen"), "dasitz" );
	deepEqual( Stem("dasitzenden"), "dasitz" );
	deepEqual( Stem("dasjenige"), "dasjen" );
	deepEqual( Stem("dasmal"), "dasmal" );
	deepEqual( Stem("dass"), "dass" );
	deepEqual( Stem("daß"), "dass" );
	deepEqual( Stem("dasselbe"), "dasselb" );
	deepEqual( Stem("dastand"), "dastand" );
	deepEqual( Stem("dastehen"), "dasteh" );
	deepEqual( Stem("dasteht"), "dasteht" );
	deepEqual( Stem("data"), "data" );
	deepEqual( Stem("datis"), "datis" );
	deepEqual( Stem("dativ"), "dativ" );
	deepEqual( Stem("dative"), "dativ" );
	deepEqual( Stem("dativen"), "dativ" );
	deepEqual( Stem("dato"), "dato" );
	deepEqual( Stem("datum"), "datum" );
	deepEqual( Stem("dauer"), "dau" );
	deepEqual( Stem("dauerhaft"), "dauerhaft" );
	deepEqual( Stem("dauerhafte"), "dauerhaft" );
	deepEqual( Stem("dauerhaftem"), "dauerhaft" );
	deepEqual( Stem("dauerhaften"), "dauerhaft" );
	deepEqual( Stem("dauerhaftigkeit"), "dauerhaft" );
	deepEqual( Stem("dauern"), "dau" );
	deepEqual( Stem("dauernd"), "dauernd" );
	deepEqual( Stem("dauernde"), "dauernd" );
	deepEqual( Stem("dauernden"), "dauernd" );
	deepEqual( Stem("dauert"), "dauert" );
	deepEqual( Stem("dauerte"), "dauert" );
	deepEqual( Stem("dauerten"), "dauert" );
	deepEqual( Stem("daumen"), "daum" );
	deepEqual( Stem("daumschrauben"), "daumschraub" );
	deepEqual( Stem("david"), "david" );
	deepEqual( Stem("davids"), "david" );
	deepEqual( Stem("davon"), "davon" );
	deepEqual( Stem("davonfuhr"), "davonfuhr" );
	deepEqual( Stem("davongangen"), "davongang" );
	deepEqual( Stem("davongegangen"), "davongegang" );
	deepEqual( Stem("davonging"), "davonging" );
	deepEqual( Stem("davonkäme"), "davonkam" );
	deepEqual( Stem("davonlief"), "davonlief" );
	deepEqual( Stem("davonrannte"), "davonrannt" );
	deepEqual( Stem("davonzureisen"), "davonzureis" );
	deepEqual( Stem("davonzutragen"), "davonzutrag" );
	deepEqual( Stem("davor"), "davor" );
	deepEqual( Stem("dawider"), "dawid" );
	deepEqual( Stem("dazu"), "dazu" );
	deepEqual( Stem("dazua"), "dazua" );
	deepEqual( Stem("dazubleiben"), "dazubleib" );
	deepEqual( Stem("dazumal"), "dazumal" );
	deepEqual( Stem("dazustehen"), "dazusteh" );
	deepEqual( Stem("dazutun"), "dazutun" );
	deepEqual( Stem("dazwischen"), "dazwisch" );
	deepEqual( Stem("dazwischenliegender"), "dazwischenlieg" );
	deepEqual( Stem("ddr"), "ddr" );
	deepEqual( Stem("de"), "de" );
	deepEqual( Stem("deandl"), "deandl" );
	deepEqual( Stem("deanerl"), "deanerl" );
	deepEqual( Stem("debatte"), "debatt" );
	deepEqual( Stem("debatten"), "debatt" );
	deepEqual( Stem("deberjackl"), "deberjackl" );
	deepEqual( Stem("december"), "decemb" );
	deepEqual( Stem("deckbett"), "deckbett" );
	deepEqual( Stem("deckchen"), "deckch" );
	deepEqual( Stem("decke"), "deck" );
	deepEqual( Stem("deckel"), "deckel" );
	deepEqual( Stem("decken"), "deck" );
	deepEqual( Stem("deckte"), "deckt" );
	deepEqual( Stem("deckten"), "deckt" );
	deepEqual( Stem("deckung"), "deckung" );
	deepEqual( Stem("deduktion"), "deduktion" );
	deepEqual( Stem("deduzieren"), "deduzi" );
	deepEqual( Stem("defekt"), "defekt" );
	deepEqual( Stem("definieren"), "defini" );
	deepEqual( Stem("definiert"), "definiert" );
	deepEqual( Stem("definition"), "definition" );
	deepEqual( Stem("definitum"), "definitum" );
	deepEqual( Stem("degen"), "deg" );
	deepEqual( Stem("degengehänge"), "degengehang" );
	deepEqual( Stem("degradieren"), "degradi" );
	deepEqual( Stem("dehne"), "dehn" );
	deepEqual( Stem("dehnt"), "dehnt" );
	deepEqual( Stem("dehnte"), "dehnt" );
	deepEqual( Stem("dehnten"), "dehnt" );
	deepEqual( Stem("dei"), "dei" );
	deepEqual( Stem("deiche"), "deich" );
	deepEqual( Stem("dein"), "dein" );
	deepEqual( Stem("deine"), "dein" );
	deepEqual( Stem("deinem"), "dein" );
	deepEqual( Stem("deinen"), "dein" );
	deepEqual( Stem("deiner"), "dein" );
	deepEqual( Stem("deines"), "dein" );
	deepEqual( Stem("deinetwillen"), "deinetwill" );
	deepEqual( Stem("deinigen"), "deinig" );
	deepEqual( Stem("dekalog"), "dekalog" );
	deepEqual( Stem("dekalogs"), "dekalog" );
	deepEqual( Stem("dekalogus"), "dekalogus" );
	deepEqual( Stem("deklinierbuch"), "deklinierbuch" );
	deepEqual( Stem("delegationen"), "delegation" );
	deepEqual( Stem("delegieren"), "delegi" );
	deepEqual( Stem("delegiertenversammlungen"), "delegiertenversamml" );
	deepEqual( Stem("delicatessen"), "delicatess" );
	deepEqual( Stem("delikaten"), "delikat" );
	deepEqual( Stem("delikatesse"), "delikatess" );
	deepEqual( Stem("delikt"), "delikt" );
	deepEqual( Stem("delphin"), "delphin" );
	deepEqual( Stem("dem"), "dem" );
	deepEqual( Stem("demgemäss"), "demgemass" );
	deepEqual( Stem("demgemäß"), "demgemass" );
	deepEqual( Stem("demjenigen"), "demjen" );
	deepEqual( Stem("demnach"), "demnach" );
	deepEqual( Stem("demokratische"), "demokrat" );
	deepEqual( Stem("demokrit"), "demokrit" );
	deepEqual( Stem("demoliert"), "demoliert" );
	deepEqual( Stem("demolierten"), "demoliert" );
	deepEqual( Stem("demonstration"), "demonstration" );
	deepEqual( Stem("demselben"), "demselb" );
	deepEqual( Stem("demselbigen"), "demselb" );
	deepEqual( Stem("demut"), "demut" );
	deepEqual( Stem("demütig"), "demut" );
	deepEqual( Stem("demütige"), "demut" );
	deepEqual( Stem("demütigen"), "demut" );
	deepEqual( Stem("demütigend"), "demut" );
	deepEqual( Stem("demütiger"), "demut" );
	deepEqual( Stem("demütigt"), "demutigt" );
	deepEqual( Stem("demütigte"), "demutigt" );
	deepEqual( Stem("demütigung"), "demut" );
	deepEqual( Stem("demutshaltung"), "demutshalt" );
	deepEqual( Stem("demutvollen"), "demutvoll" );
	deepEqual( Stem("demzufolge"), "demzufolg" );
	deepEqual( Stem("den"), "den" );
	deepEqual( Stem("dene"), "den" );
	deepEqual( Stem("denen"), "den" );
	deepEqual( Stem("denjenigen"), "denjen" );
	deepEqual( Stem("denk"), "denk" );
	deepEqual( Stem("denkbar"), "denkbar" );
	deepEqual( Stem("denkbaren"), "denkbar" );
	deepEqual( Stem("denkbarer"), "denkbar" );
	deepEqual( Stem("denke"), "denk" );
	deepEqual( Stem("denken"), "denk" );
	deepEqual( Stem("denkende"), "denkend" );
	deepEqual( Stem("denkens"), "denk" );
	deepEqual( Stem("denker"), "denk" );
	deepEqual( Stem("denket"), "denket" );
	deepEqual( Stem("denkmal"), "denkmal" );
	deepEqual( Stem("denkst"), "denk" );
	deepEqual( Stem("denkt"), "denkt" );
	deepEqual( Stem("denkungsart"), "denkungsart" );
	deepEqual( Stem("denkvorstellung"), "denkvorstell" );
	deepEqual( Stem("denkvorstellungen"), "denkvorstell" );
	deepEqual( Stem("denkweise"), "denkweis" );
	deepEqual( Stem("denn"), "denn" );
	deepEqual( Stem("dennoch"), "dennoch" );
	deepEqual( Stem("denselben"), "denselb" );
	deepEqual( Stem("dep"), "dep" );
	deepEqual( Stem("departements"), "departement" );
	deepEqual( Stem("departementschef"), "departementschef" );
	deepEqual( Stem("deperditum"), "deperditum" );
	deepEqual( Stem("depeschen"), "depesch" );
	deepEqual( Stem("deponierten"), "deponiert" );
	deepEqual( Stem("depot"), "depot" );
	deepEqual( Stem("depressionen"), "depression" );
	deepEqual( Stem("der"), "der" );
	deepEqual( Stem("derart"), "derart" );
	deepEqual( Stem("derartig"), "derart" );
	deepEqual( Stem("derartige"), "derart" );
	deepEqual( Stem("derartigen"), "derart" );
	deepEqual( Stem("derartiger"), "derart" );
	deepEqual( Stem("derartiges"), "derart" );
	deepEqual( Stem("derbarmt"), "derbarmt" );
	deepEqual( Stem("derbe"), "derb" );
	deepEqual( Stem("derben"), "derb" );
	deepEqual( Stem("derbknochige"), "derbknoch" );
	deepEqual( Stem("derbsten"), "derb" );
	deepEqual( Stem("dereinst"), "derein" );
	deepEqual( Stem("deren"), "der" );
	deepEqual( Stem("derentweg"), "derentweg" );
	deepEqual( Stem("derentwillen"), "derentwill" );
	deepEqual( Stem("derer"), "der" );
	deepEqual( Stem("dergestalt"), "dergestalt" );
	deepEqual( Stem("dergibt"), "dergibt" );
	deepEqual( Stem("dergl"), "dergl" );
	deepEqual( Stem("dergleichen"), "dergleich" );
	deepEqual( Stem("derheim"), "derheim" );
	deepEqual( Stem("derjenige"), "derjen" );
	deepEqual( Stem("derjenigen"), "derjen" );
	deepEqual( Stem("derleb"), "derleb" );
	deepEqual( Stem("derlebt"), "derlebt" );
	deepEqual( Stem("derlei"), "derlei" );
	deepEqual( Stem("derleiden"), "derleid" );
	deepEqual( Stem("dermassen"), "dermass" );
	deepEqual( Stem("dern"), "dern" );
	deepEqual( Stem("dero"), "dero" );
	deepEqual( Stem("derschlagen"), "derschlag" );
	deepEqual( Stem("derselbe"), "derselb" );
	deepEqual( Stem("derselben"), "derselb" );
	deepEqual( Stem("derwart"), "derwart" );
	deepEqual( Stem("derweil"), "derweil" );
	deepEqual( Stem("derwischt"), "derwischt" );
	deepEqual( Stem("des"), "des" );
	deepEqual( Stem("desdemona"), "desdemona" );
	deepEqual( Stem("deserteur"), "deserteur" );
	deepEqual( Stem("deserteure"), "deserteur" );
	deepEqual( Stem("desertion"), "desertion" );
	deepEqual( Stem("desgleichen"), "desgleich" );
	deepEqual( Stem("deshalb"), "deshalb" );
	deepEqual( Stem("deshalben"), "deshalb" );
	deepEqual( Stem("design"), "design" );
	deepEqual( Stem("designer"), "design" );
	deepEqual( Stem("desinteressiert"), "desinteressiert" );
	deepEqual( Stem("desjenigen"), "desjen" );
	deepEqual( Stem("desna"), "desna" );
	deepEqual( Stem("desolatio"), "desolatio" );
	deepEqual( Stem("desolationes"), "desolation" );
	deepEqual( Stem("desselben"), "desselb" );
	deepEqual( Stem("dessen"), "dess" );
	deepEqual( Stem("dessentwegen"), "dessentweg" );
	deepEqual( Stem("dessentwillen"), "dessentwill" );
	deepEqual( Stem("dessert"), "dessert" );
	deepEqual( Stem("desto"), "desto" );
	deepEqual( Stem("deswegen"), "desweg" );
	deepEqual( Stem("deswillen"), "deswill" );
	deepEqual( Stem("detailliert"), "detailliert" );
	deepEqual( Stem("details"), "detail" );
	deepEqual( Stem("determinatum"), "determinatum" );
	deepEqual( Stem("detonation"), "detonation" );
	deepEqual( Stem("deuchte"), "deucht" );
	deepEqual( Stem("deuschland"), "deuschland" );
	deepEqual( Stem("deut"), "deut" );
	deepEqual( Stem("deutbare"), "deutbar" );
	deepEqual( Stem("deuten"), "deut" );
	deepEqual( Stem("deutete"), "deutet" );
	deepEqual( Stem("deutlich"), "deutlich" );
	deepEqual( Stem("deutliche"), "deutlich" );
	deepEqual( Stem("deutlichen"), "deutlich" );
	deepEqual( Stem("deutlicher"), "deutlich" );
	deepEqual( Stem("deutlichere"), "deutlich" );
	deepEqual( Stem("deutliches"), "deutlich" );
	deepEqual( Stem("deutlichkeit"), "deutlich" );
	deepEqual( Stem("deutlichste"), "deutlich" );
	deepEqual( Stem("deutsch"), "deutsch" );
	deepEqual( Stem("deutsche"), "deutsch" );
	deepEqual( Stem("deutschen"), "deutsch" );
	deepEqual( Stem("deutscher"), "deutsch" );
	deepEqual( Stem("deutschland"), "deutschland" );
	deepEqual( Stem("deutschlands"), "deutschland" );
	deepEqual( Stem("deutschlehrerin"), "deutschlehrerin" );
	deepEqual( Stem("deutschschweiz"), "deutschschweiz" );
	deepEqual( Stem("deutschsein"), "deutschsein" );
	deepEqual( Stem("deutseher"), "deutseh" );
	deepEqual( Stem("deza"), "deza" );
	deepEqual( Stem("dezember"), "dezemb" );
	deepEqual( Stem("dezenz"), "dezenz" );
	deepEqual( Stem("dgl"), "dgl" );
	deepEqual( Stem("di"), "di" );
	deepEqual( Stem("diabolischen"), "diabol" );
	deepEqual( Stem("diademe"), "diadem" );
	deepEqual( Stem("diademen"), "diadem" );
	deepEqual( Stem("diakonie"), "diakoni" );
	deepEqual( Stem("diakoniekapitel"), "diakoniekapitel" );
	deepEqual( Stem("dialectica"), "dialectica" );
	deepEqual( Stem("dialekt"), "dialekt" );
	deepEqual( Stem("dialektik"), "dialekt" );
	deepEqual( Stem("dialektikh"), "dialektikh" );
	deepEqual( Stem("dialektisch"), "dialekt" );
	deepEqual( Stem("dialektische"), "dialekt" );
	deepEqual( Stem("dialektischen"), "dialekt" );
	deepEqual( Stem("dialektliedern"), "dialektlied" );
	deepEqual( Stem("dialog"), "dialog" );
	deepEqual( Stem("dialogorientierung"), "dialogorientier" );
	deepEqual( Stem("dialogs"), "dialog" );
	deepEqual( Stem("diamant"), "diamant" );
	deepEqual( Stem("diamanten"), "diamant" );
	deepEqual( Stem("diamantenschimmer"), "diamantenschimm" );
	deepEqual( Stem("dich"), "dich" );
	deepEqual( Stem("dicht"), "dicht" );
	deepEqual( Stem("dichte"), "dicht" );
	deepEqual( Stem("dichtem"), "dicht" );
	deepEqual( Stem("dichten"), "dicht" );
	deepEqual( Stem("dichter"), "dicht" );
	deepEqual( Stem("dichtes"), "dicht" );
	deepEqual( Stem("dichteste"), "dicht" );
	deepEqual( Stem("dichtesten"), "dicht" );
	deepEqual( Stem("dichtester"), "dicht" );
	deepEqual( Stem("dichtgeschlossenen"), "dichtgeschloss" );
	deepEqual( Stem("dichtheit"), "dichtheit" );
	deepEqual( Stem("dick"), "dick" );
	deepEqual( Stem("dickbauch"), "dickbauch" );
	deepEqual( Stem("dicke"), "dick" );
	deepEqual( Stem("dickem"), "dick" );
	deepEqual( Stem("dicken"), "dick" );
	deepEqual( Stem("dicker"), "dick" );
	deepEqual( Stem("dickeren"), "dick" );
	deepEqual( Stem("dickicht"), "dickicht" );
	deepEqual( Stem("dickichts"), "dickicht" );
	deepEqual( Stem("dickleibig"), "dickleib" );
	deepEqual( Stem("dicks"), "dick" );
	deepEqual( Stem("dicksten"), "dick" );
	deepEqual( Stem("dickung"), "dickung" );
	deepEqual( Stem("dictamen"), "dictam" );
	deepEqual( Stem("dictavit"), "dictavit" );
	deepEqual( Stem("didac"), "didac" );
	deepEqual( Stem("dideldudeldei"), "dideldudeldei" );
	deepEqual( Stem("dideldumdei"), "dideldumdei" );
	deepEqual( Stem("die"), "die" );
	deepEqual( Stem("dieb"), "dieb" );
	deepEqual( Stem("diebe"), "dieb" );
	deepEqual( Stem("diebin"), "diebin" );
	deepEqual( Stem("diebshehler"), "diebshehl" );
	deepEqual( Stem("diebstahl"), "diebstahl" );
	deepEqual( Stem("diefer"), "dief" );
	deepEqual( Stem("diejenige"), "diejen" );
	deepEqual( Stem("diejenigen"), "diejen" );
	deepEqual( Stem("diele"), "diel" );
	deepEqual( Stem("diemal"), "diemal" );
	deepEqual( Stem("diene"), "dien" );
	deepEqual( Stem("dienen"), "dien" );
	deepEqual( Stem("dienend"), "dienend" );
	deepEqual( Stem("diener"), "dien" );
	deepEqual( Stem("dienern"), "dien" );
	deepEqual( Stem("dienerschaft"), "dienerschaft" );
	deepEqual( Stem("dienerten"), "dienert" );
	deepEqual( Stem("dienet"), "dienet" );
	deepEqual( Stem("dienete"), "dienet" );
	deepEqual( Stem("dienlich"), "dienlich" );
	deepEqual( Stem("dienst"), "dien" );
	deepEqual( Stem("dienstag"), "dienstag" );
	deepEqual( Stem("dienstagmorgen"), "dienstagmorg" );
	deepEqual( Stem("dienstbar"), "dienstbar" );
	deepEqual( Stem("dienstbarer"), "dienstbar" );
	deepEqual( Stem("dienstbarkeit"), "dienstbar" );
	deepEqual( Stem("dienstbarkeiten"), "dienstbar" );
	deepEqual( Stem("dienstboten"), "dienstbot" );
	deepEqual( Stem("dienstbuben"), "dienstbub" );
	deepEqual( Stem("dienste"), "dien" );
	deepEqual( Stem("diensten"), "dien" );
	deepEqual( Stem("dienstes"), "dien" );
	deepEqual( Stem("dienstfertig"), "dienstfert" );
	deepEqual( Stem("dienstleistung"), "dienstleist" );
	deepEqual( Stem("dienstleistungen"), "dienstleist" );
	deepEqual( Stem("dienstliche"), "dienstlich" );
	deepEqual( Stem("dienstmädchen"), "dienstmadch" );
	deepEqual( Stem("dienstmägde"), "dienstmagd" );
	deepEqual( Stem("dienstmägden"), "dienstmagd" );
	deepEqual( Stem("dienstmänner"), "dienstmann" );
	deepEqual( Stem("dienstrevier"), "dienstrevi" );
	deepEqual( Stem("dienstverkehr"), "dienstverkehr" );
	deepEqual( Stem("dienstvorschriften"), "dienstvorschrift" );
	deepEqual( Stem("dienstzeit"), "dienstzeit" );
	deepEqual( Stem("dient"), "dient" );
	deepEqual( Stem("diente"), "dient" );
	deepEqual( Stem("dienten"), "dient" );
	deepEqual( Stem("dies"), "dies" );
	deepEqual( Stem("diesbezüglich"), "diesbezug" );
	deepEqual( Stem("diese"), "dies" );
	deepEqual( Stem("dieselbe"), "dieselb" );
	deepEqual( Stem("dieselben"), "dieselb" );
	deepEqual( Stem("diesem"), "dies" );
	deepEqual( Stem("diesen"), "dies" );
	deepEqual( Stem("diesenging"), "diesenging" );
	deepEqual( Stem("dieser"), "dies" );
	deepEqual( Stem("diesergestalt"), "diesergestalt" );
	deepEqual( Stem("dieserhalb"), "dieserhalb" );
	deepEqual( Stem("dieses"), "dies" );
	deepEqual( Stem("diesjährigen"), "diesjahr" );
	deepEqual( Stem("diesmal"), "diesmal" );
	deepEqual( Stem("diesseitigen"), "diesseit" );
	deepEqual( Stem("dietegen"), "dieteg" );
	deepEqual( Stem("dietrich"), "dietrich" );
	deepEqual( Stem("dieweil"), "dieweil" );
	deepEqual( Stem("differenz"), "differenz" );
	deepEqual( Stem("differenzen"), "differenz" );
	deepEqual( Stem("differenzierter"), "differenziert" );
	deepEqual( Stem("differieren"), "differi" );
	deepEqual( Stem("dimension"), "dimension" );
	deepEqual( Stem("dimensionen"), "dimension" );
	deepEqual( Stem("ding"), "ding" );
	deepEqual( Stem("dinge"), "ding" );
	deepEqual( Stem("dingen"), "ding" );
	deepEqual( Stem("dinger"), "ding" );
	deepEqual( Stem("dinges"), "ding" );
	deepEqual( Stem("dinkel"), "dinkel" );
	deepEqual( Stem("dinkels"), "dinkel" );
	deepEqual( Stem("dinte"), "dint" );
	deepEqual( Stem("diog"), "diog" );
	deepEqual( Stem("diogenes"), "diog" );
	deepEqual( Stem("diplom"), "diplom" );
	deepEqual( Stem("dir"), "dir" );
	deepEqual( Stem("diras"), "diras" );
	deepEqual( Stem("direkt"), "direkt" );
	deepEqual( Stem("direkten"), "direkt" );
	deepEqual( Stem("direktion"), "direktion" );
	deepEqual( Stem("direktionszimmer"), "direktionszimm" );
	deepEqual( Stem("direktor"), "direktor" );
	deepEqual( Stem("direktorium"), "direktorium" );
	deepEqual( Stem("direktors"), "direktor" );
	deepEqual( Stem("dirn"), "dirn" );
	deepEqual( Stem("dirnchen"), "dirnch" );
	deepEqual( Stem("dirndl"), "dirndl" );
	deepEqual( Stem("dirne"), "dirn" );
	deepEqual( Stem("discover"), "discov" );
	deepEqual( Stem("diskursiv"), "diskursiv" );
	deepEqual( Stem("diskussion"), "diskussion" );
	deepEqual( Stem("diskussionen"), "diskussion" );
	deepEqual( Stem("diskutieren"), "diskuti" );
	deepEqual( Stem("diskutierend"), "diskutier" );
	deepEqual( Stem("diskutiert"), "diskutiert" );
	deepEqual( Stem("disneyland"), "disneyland" );
	deepEqual( Stem("disposition"), "disposition" );
	deepEqual( Stem("disputation"), "disputation" );
	deepEqual( Stem("disputieren"), "disputi" );
	deepEqual( Stem("disputierende"), "disputier" );
	deepEqual( Stem("disputierens"), "disputier" );
	deepEqual( Stem("disputiert"), "disputiert" );
	deepEqual( Stem("distel"), "distel" );
	deepEqual( Stem("disteln"), "disteln" );
	deepEqual( Stem("distelstauden"), "distelstaud" );
	deepEqual( Stem("distinktionen"), "distinktion" );
	deepEqual( Stem("disziplin"), "disziplin" );
	deepEqual( Stem("disziplinarverfahren"), "disziplinarverfahr" );
	deepEqual( Stem("dithyrambische"), "dithyramb" );
	deepEqual( Stem("divergieren"), "divergi" );
	deepEqual( Stem("diversa"), "diversa" );
	deepEqual( Stem("diverse"), "divers" );
	deepEqual( Stem("dntt"), "dntt" );
	deepEqual( Stem("do"), "do" );
	deepEqual( Stem("dö"), "do" );
	deepEqual( Stem("docet"), "docet" );
	deepEqual( Stem("doch"), "doch" );
	deepEqual( Stem("docht"), "docht" );
	deepEqual( Stem("doctrina"), "doctrina" );
	deepEqual( Stem("doctrinalia"), "doctrinalia" );
	deepEqual( Stem("document"), "document" );
	deepEqual( Stem("dogder"), "dogd" );
	deepEqual( Stem("dogmata"), "dogmata" );
	deepEqual( Stem("doktor"), "doktor" );
	deepEqual( Stem("dokumentieren"), "dokumenti" );
	deepEqual( Stem("dolmetscherin"), "dolmetscherin" );
	deepEqual( Stem("dolmusfahrer"), "dolmusfahr" );
	deepEqual( Stem("dom"), "dom" );
	deepEqual( Stem("domes"), "dom" );
	deepEqual( Stem("domini"), "domini" );
	deepEqual( Stem("dominicus"), "dominicus" );
	deepEqual( Stem("dominierten"), "dominiert" );
	deepEqual( Stem("dominikus"), "dominikus" );
	deepEqual( Stem("domplatz"), "domplatz" );
	deepEqual( Stem("domui"), "domui" );
	deepEqual( Stem("domus"), "domus" );
	deepEqual( Stem("don"), "don" );
	deepEqual( Stem("donner"), "donn" );
	deepEqual( Stem("donnerbrummen"), "donnerbrumm" );
	deepEqual( Stem("dönnerchen"), "donnerch" );
	deepEqual( Stem("donnergetümmel"), "donnergetummel" );
	deepEqual( Stem("donnermann"), "donnermann" );
	deepEqual( Stem("donnern"), "donn" );
	deepEqual( Stem("donnernd"), "donnernd" );
	deepEqual( Stem("donnerndes"), "donnernd" );
	deepEqual( Stem("donnerriese"), "donnerries" );
	deepEqual( Stem("donnerriesen"), "donnerries" );
	deepEqual( Stem("donners"), "donn" );
	deepEqual( Stem("donnerschlag"), "donnerschlag" );
	deepEqual( Stem("donnerstag"), "donnerstag" );
	deepEqual( Stem("donnerstimmen"), "donnerstimm" );
	deepEqual( Stem("donnerte"), "donnert" );
	deepEqual( Stem("donnerwetter"), "donnerwett" );
	deepEqual( Stem("doppelbüchse"), "doppelbuchs" );
	deepEqual( Stem("doppelgänger"), "doppelgang" );
	deepEqual( Stem("doppelglas"), "doppelglas" );
	deepEqual( Stem("doppelkinns"), "doppelkinn" );
	deepEqual( Stem("doppelt"), "doppelt" );
	deepEqual( Stem("doppelte"), "doppelt" );
	deepEqual( Stem("doppelten"), "doppelt" );
	deepEqual( Stem("doppelter"), "doppelt" );
	deepEqual( Stem("dorf"), "dorf" );
	deepEqual( Stem("dörfchens"), "dorfch" );
	deepEqual( Stem("dorfe"), "dorf" );
	deepEqual( Stem("dörfer"), "dorf" );
	deepEqual( Stem("dörfern"), "dorf" );
	deepEqual( Stem("dorfes"), "dorf" );
	deepEqual( Stem("dorfgenossen"), "dorfgenoss" );
	deepEqual( Stem("dorfhange"), "dorfhang" );
	deepEqual( Stem("dorfköter"), "dorfkot" );
	deepEqual( Stem("dorfkretscham"), "dorfkretscham" );
	deepEqual( Stem("dörfler"), "dorfl" );
	deepEqual( Stem("dörflerische"), "dorfler" );
	deepEqual( Stem("dorfschaften"), "dorfschaft" );
	deepEqual( Stem("dorfschönen"), "dorfschon" );
	deepEqual( Stem("dorfschulmeistern"), "dorfschulmeist" );
	deepEqual( Stem("dorfschützer"), "dorfschutz" );
	deepEqual( Stem("dorfschützern"), "dorfschutz" );
	deepEqual( Stem("dorfspaziergängen"), "dorfspaziergang" );
	deepEqual( Stem("dorfvorsteher"), "dorfvorsteh" );
	deepEqual( Stem("dorfvorstehers"), "dorfvorsteh" );
	deepEqual( Stem("dorn"), "dorn" );
	deepEqual( Stem("dornbusch"), "dornbusch" );
	deepEqual( Stem("dornbusche"), "dornbusch" );
	deepEqual( Stem("dornbusches"), "dornbusch" );
	deepEqual( Stem("dornbuschs"), "dornbusch" );
	deepEqual( Stem("dornen"), "dorn" );
	deepEqual( Stem("dornengesträuch"), "dornengestrauch" );
	deepEqual( Stem("dornenrüstung"), "dornenrust" );
	deepEqual( Stem("dornsträucher"), "dornstrauch" );
	deepEqual( Stem("dort"), "dort" );
	deepEqual( Stem("dorthin"), "dorthin" );
	deepEqual( Stem("dortige"), "dortig" );
	deepEqual( Stem("dortigen"), "dortig" );
	deepEqual( Stem("dortiger"), "dortig" );
	deepEqual( Stem("dös"), "dos" );
	deepEqual( Stem("döschen"), "dosch" );
	deepEqual( Stem("dose"), "dos" );
	deepEqual( Stem("doxa"), "doxa" );
	deepEqual( Stem("dozentin"), "dozentin" );
	deepEqual( Stem("dr"), "dr" );
	deepEqual( Stem("drache"), "drach" );
	deepEqual( Stem("drachen"), "drach" );
	deepEqual( Stem("drachengift"), "drachengift" );
	deepEqual( Stem("drachenknopf"), "drachenknopf" );
	deepEqual( Stem("drachenschlange"), "drachenschlang" );
	deepEqual( Stem("draht"), "draht" );
	deepEqual( Stem("drahtig"), "drahtig" );
	deepEqual( Stem("dramatischen"), "dramat" );
	deepEqual( Stem("dran"), "dran" );
	deepEqual( Stem("drang"), "drang" );
	deepEqual( Stem("drange"), "drang" );
	deepEqual( Stem("drangegeben"), "drangegeb" );
	deepEqual( Stem("drangen"), "drang" );
	deepEqual( Stem("drängen"), "drang" );
	deepEqual( Stem("drangsal"), "drangsal" );
	deepEqual( Stem("drängt"), "drangt" );
	deepEqual( Stem("drängte"), "drangt" );
	deepEqual( Stem("drängten"), "drangt" );
	deepEqual( Stem("drapierte"), "drapiert" );
	deepEqual( Stem("drauf"), "drauf" );
	deepEqual( Stem("draufging"), "draufging" );
	deepEqual( Stem("draus"), "draus" );
	deepEqual( Stem("draussen"), "drauss" );
	deepEqual( Stem("draußen"), "drauss" );
	deepEqual( Stem("dreck"), "dreck" );
	deepEqual( Stem("drehen"), "dreh" );
	deepEqual( Stem("drehend"), "drehend" );
	deepEqual( Stem("drehscheibe"), "drehscheib" );
	deepEqual( Stem("dreht"), "dreht" );
	deepEqual( Stem("drehte"), "dreht" );
	deepEqual( Stem("drehten"), "dreht" );
	deepEqual( Stem("drei"), "drei" );
	deepEqual( Stem("dreiangel"), "dreiangel" );
	deepEqual( Stem("dreibeinigen"), "dreibein" );
	deepEqual( Stem("dreieck"), "dreieck" );
	deepEqual( Stem("dreiecke"), "dreieck" );
	deepEqual( Stem("dreieckes"), "dreieck" );
	deepEqual( Stem("dreieckiger"), "dreieckig" );
	deepEqual( Stem("dreieinige"), "dreieinig" );
	deepEqual( Stem("dreieinigkeit"), "dreieinig" );
	deepEqual( Stem("dreien"), "dreien" );
	deepEqual( Stem("dreier"), "dreier" );
	deepEqual( Stem("dreifach"), "dreifach" );
	deepEqual( Stem("dreifache"), "dreifach" );
	deepEqual( Stem("dreifachen"), "dreifach" );
	deepEqual( Stem("dreihundert"), "dreihundert" );
	deepEqual( Stem("dreihundertfünfzig"), "dreihundertfunfz" );
	deepEqual( Stem("dreihundertfünfzigtausend"), "dreihundertfunfzigtaus" );
	deepEqual( Stem("dreimal"), "dreimal" );
	deepEqual( Stem("drein"), "drein" );
	deepEqual( Stem("dreingeb"), "dreingeb" );
	deepEqual( Stem("dreinsah"), "dreinsah" );
	deepEqual( Stem("dreinschicken"), "dreinschick" );
	deepEqual( Stem("dreiröhrenhut"), "dreirohrenhut" );
	deepEqual( Stem("dreissig"), "dreissig" );
	deepEqual( Stem("dreißig"), "dreissig" );
	deepEqual( Stem("dreissiger"), "dreissig" );
	deepEqual( Stem("dreissigster"), "dreissig" );
	deepEqual( Stem("dreißigster"), "dreissig" );
	deepEqual( Stem("dreißiig"), "dreissiig" );
	deepEqual( Stem("dreist"), "dreist" );
	deepEqual( Stem("dreiundachtzig"), "dreiundachtz" );
	deepEqual( Stem("dreiundzwanzigstem"), "dreiundzwanz" );
	deepEqual( Stem("dreizackigen"), "dreizack" );
	deepEqual( Stem("dreizehn"), "dreizehn" );
	deepEqual( Stem("dreschen"), "dresch" );
	deepEqual( Stem("dresden"), "dresd" );
	deepEqual( Stem("drewes"), "drew" );
	deepEqual( Stem("drfe"), "drfe" );
	deepEqual( Stem("drin"), "drin" );
	deepEqual( Stem("dringen"), "dring" );
	deepEqual( Stem("dringend"), "dringend" );
	deepEqual( Stem("dringende"), "dringend" );
	deepEqual( Stem("dringendes"), "dringend" );
	deepEqual( Stem("dringendste"), "dringend" );
	deepEqual( Stem("dringlich"), "dringlich" );
	deepEqual( Stem("dringt"), "dringt" );
	deepEqual( Stem("drinks"), "drink" );
	deepEqual( Stem("drinnen"), "drinn" );
	deepEqual( Stem("drisch"), "drisch" );
	deepEqual( Stem("dritt"), "dritt" );
	deepEqual( Stem("dritte"), "dritt" );
	deepEqual( Stem("drittehalb"), "drittehalb" );
	deepEqual( Stem("drittel"), "drittel" );
	deepEqual( Stem("drittem"), "dritt" );
	deepEqual( Stem("dritten"), "dritt" );
	deepEqual( Stem("drittenmal"), "drittenmal" );
	deepEqual( Stem("drittens"), "dritt" );
	deepEqual( Stem("dritter"), "dritt" );
	deepEqual( Stem("drittes"), "dritt" );
	deepEqual( Stem("dritthalb"), "dritthalb" );
	deepEqual( Stem("droben"), "drob" );
	deepEqual( Stem("drogenpolitik"), "drogenpolit" );
	deepEqual( Stem("drohen"), "droh" );
	deepEqual( Stem("drohend"), "drohend" );
	deepEqual( Stem("drohende"), "drohend" );
	deepEqual( Stem("drohenden"), "drohend" );
	deepEqual( Stem("drohendes"), "drohend" );
	deepEqual( Stem("drohete"), "drohet" );
	deepEqual( Stem("dröhnend"), "drohnend" );
	deepEqual( Stem("dröhnte"), "drohnt" );
	deepEqual( Stem("droht"), "droht" );
	deepEqual( Stem("drohte"), "droht" );
	deepEqual( Stem("drohten"), "droht" );
	deepEqual( Stem("drohungen"), "drohung" );
	deepEqual( Stem("drollig"), "drollig" );
	deepEqual( Stem("drollige"), "drollig" );
	deepEqual( Stem("drolligen"), "drollig" );
	deepEqual( Stem("drolliges"), "drollig" );
	deepEqual( Stem("dromedare"), "dromedar" );
	deepEqual( Stem("drüben"), "drub" );
	deepEqual( Stem("drüber"), "drub" );
	deepEqual( Stem("druck"), "druck" );
	deepEqual( Stem("drucke"), "druck" );
	deepEqual( Stem("drücken"), "druck" );
	deepEqual( Stem("drückend"), "druckend" );
	deepEqual( Stem("drückenden"), "druckend" );
	deepEqual( Stem("druckes"), "druck" );
	deepEqual( Stem("drucks"), "druck" );
	deepEqual( Stem("drucksorten"), "drucksort" );
	deepEqual( Stem("druckt"), "druckt" );
	deepEqual( Stem("drückte"), "druckt" );
	deepEqual( Stem("drückten"), "druckt" );
	deepEqual( Stem("drum"), "drum" );
	deepEqual( Stem("drunt"), "drunt" );
	deepEqual( Stem("drunten"), "drunt" );
	deepEqual( Stem("drüppelei"), "druppelei" );
	deepEqual( Stem("drüppeln"), "druppeln" );
	deepEqual( Stem("drüppelü"), "druppelu" );
	deepEqual( Stem("drüsen"), "drus" );
	deepEqual( Stem("du"), "du" );
	deepEqual( Stem("ducken"), "duck" );
	deepEqual( Stem("duckmäuser"), "duckmaus" );
	deepEqual( Stem("duckt"), "duckt" );
	deepEqual( Stem("duckte"), "duckt" );
	deepEqual( Stem("duckten"), "duckt" );
	deepEqual( Stem("dudlerei"), "dudlerei" );
	deepEqual( Stem("duell"), "duell" );
	deepEqual( Stem("duft"), "duft" );
	deepEqual( Stem("duftende"), "duftend" );
	deepEqual( Stem("duftenden"), "duftend" );
	deepEqual( Stem("duftet"), "duftet" );
	deepEqual( Stem("duftete"), "duftet" );
	deepEqual( Stem("duftgewebe"), "duftgeweb" );
	deepEqual( Stem("duftig"), "duftig" );
	deepEqual( Stem("duftwolken"), "duftwolk" );
	deepEqual( Stem("duht"), "duht" );
	deepEqual( Stem("dukaten"), "dukat" );
	deepEqual( Stem("dulden"), "duld" );
	deepEqual( Stem("dulderin"), "dulderin" );
	deepEqual( Stem("duldete"), "duldet" );
	deepEqual( Stem("duldeten"), "duldet" );
	deepEqual( Stem("duldsamkeit"), "duldsam" );
	deepEqual( Stem("duldung"), "duldung" );
	deepEqual( Stem("dumm"), "dumm" );
	deepEqual( Stem("dumme"), "dumm" );
	deepEqual( Stem("dummen"), "dumm" );
	deepEqual( Stem("dummer"), "dumm" );
	deepEqual( Stem("dümmer"), "dumm" );
	deepEqual( Stem("dummes"), "dumm" );
	deepEqual( Stem("dummglotzenden"), "dummglotz" );
	deepEqual( Stem("dummheit"), "dummheit" );
	deepEqual( Stem("dummheiten"), "dummheit" );
	deepEqual( Stem("dummkopf"), "dummkopf" );
	deepEqual( Stem("dummköpfe"), "dummkopf" );
	deepEqual( Stem("dummköpfen"), "dummkopf" );
	deepEqual( Stem("dümmling"), "dummling" );
	deepEqual( Stem("dumms"), "dumm" );
	deepEqual( Stem("dumpf"), "dumpf" );
	deepEqual( Stem("dumpfem"), "dumpf" );
	deepEqual( Stem("dumpfen"), "dumpf" );
	deepEqual( Stem("dumpfhallend"), "dumpfhall" );
	deepEqual( Stem("dunggestank"), "dunggestank" );
	deepEqual( Stem("dunkel"), "dunkel" );
	deepEqual( Stem("dunkelblau"), "dunkelblau" );
	deepEqual( Stem("dunkelblauen"), "dunkelblau" );
	deepEqual( Stem("dunkelbraunen"), "dunkelbraun" );
	deepEqual( Stem("dunkele"), "dunkel" );
	deepEqual( Stem("dunkelgrauen"), "dunkelgrau" );
	deepEqual( Stem("dunkelgrüne"), "dunkelgrun" );
	deepEqual( Stem("dunkelgrünen"), "dunkelgrun" );
	deepEqual( Stem("dunkelhaariges"), "dunkelhaar" );
	deepEqual( Stem("dunkelheit"), "dunkel" );
	deepEqual( Stem("dunkelheiten"), "dunkel" );
	deepEqual( Stem("dunkeln"), "dunkeln" );
	deepEqual( Stem("dunkelrot"), "dunkelrot" );
	deepEqual( Stem("dunkelrotem"), "dunkelrot" );
	deepEqual( Stem("dunkelrotes"), "dunkelrot" );
	deepEqual( Stem("dunkels"), "dunkel" );
	deepEqual( Stem("dunkeltal"), "dunkeltal" );
	deepEqual( Stem("dunkelte"), "dunkelt" );
	deepEqual( Stem("dünkelvoller"), "dunkelvoll" );
	deepEqual( Stem("dünken"), "dunk" );
	deepEqual( Stem("dünkenden"), "dunkend" );
	deepEqual( Stem("dunkle"), "dunkl" );
	deepEqual( Stem("dunklem"), "dunkl" );
	deepEqual( Stem("dunklen"), "dunkl" );
	deepEqual( Stem("dunkler"), "dunkl" );
	deepEqual( Stem("dunkleren"), "dunkl" );
	deepEqual( Stem("dunkleres"), "dunkl" );
	deepEqual( Stem("dunkles"), "dunkl" );
	deepEqual( Stem("dünkt"), "dunkt" );
	deepEqual( Stem("dünkte"), "dunkt" );
	deepEqual( Stem("dünkten"), "dunkt" );
	deepEqual( Stem("dünn"), "dunn" );
	deepEqual( Stem("dünne"), "dunn" );
	deepEqual( Stem("dünnen"), "dunn" );
	deepEqual( Stem("dünner"), "dunn" );
	deepEqual( Stem("dünnes"), "dunn" );
	deepEqual( Stem("dunst"), "dunst" );
	deepEqual( Stem("dünste"), "dunst" );
	deepEqual( Stem("dünsten"), "dunst" );
	deepEqual( Stem("dunstwölkchen"), "dunstwolkch" );
	deepEqual( Stem("durch"), "durch" );
	deepEqual( Stem("durcharbeiten"), "durcharbeit" );
	deepEqual( Stem("durchaus"), "durchaus" );
	deepEqual( Stem("durchblättern"), "durchblatt" );
	deepEqual( Stem("durchblätterte"), "durchblattert" );
	deepEqual( Stem("durchblicken"), "durchblick" );
	deepEqual( Stem("durchbohrt"), "durchbohrt" );
	deepEqual( Stem("durchbohrte"), "durchbohrt" );
	deepEqual( Stem("durchbohrten"), "durchbohrt" );
	deepEqual( Stem("durchbohrter"), "durchbohrt" );
	deepEqual( Stem("durchbohrung"), "durchbohr" );
	deepEqual( Stem("durchbrechen"), "durchbrech" );
	deepEqual( Stem("durchbrochen"), "durchbroch" );
	deepEqual( Stem("durchbrochenem"), "durchbroch" );
	deepEqual( Stem("durchbruch"), "durchbruch" );
	deepEqual( Stem("durchdacht"), "durchdacht" );
	deepEqual( Stem("durchdrang"), "durchdrang" );
	deepEqual( Stem("durchdringen"), "durchdring" );
	deepEqual( Stem("durchdrungen"), "durchdrung" );
	deepEqual( Stem("durchduftete"), "durchduftet" );
	deepEqual( Stem("durcheinander"), "durcheinand" );
	deepEqual( Stem("durcheinanderhingen"), "durcheinanderhing" );
	deepEqual( Stem("durcheinanderliefen"), "durcheinanderlief" );
	deepEqual( Stem("durcheinanderwimmelnden"), "durcheinanderwimmelnd" );
	deepEqual( Stem("durcheinanderwirbelte"), "durcheinanderwirbelt" );
	deepEqual( Stem("durchfallen"), "durchfall" );
	deepEqual( Stem("durchfliessen"), "durchfliess" );
	deepEqual( Stem("durchfließen"), "durchfliess" );
	deepEqual( Stem("durchforscht"), "durchforscht" );
	deepEqual( Stem("durchfuhr"), "durchfuhr" );
	deepEqual( Stem("durchfuhren"), "durchfuhr" );
	deepEqual( Stem("durchführte"), "durchfuhrt" );
	deepEqual( Stem("durchführung"), "durchfuhr" );
	deepEqual( Stem("durchgackerten"), "durchgackert" );
	deepEqual( Stem("durchgang"), "durchgang" );
	deepEqual( Stem("durchgängig"), "durchgang" );
	deepEqual( Stem("durchgängigen"), "durchgang" );
	deepEqual( Stem("durchgangsasyl"), "durchgangsasyl" );
	deepEqual( Stem("durchgeführt"), "durchgefuhrt" );
	deepEqual( Stem("durchgegeben"), "durchgegeb" );
	deepEqual( Stem("durchgehechelt"), "durchgehechelt" );
	deepEqual( Stem("durchgehen"), "durchgeh" );
	deepEqual( Stem("durchgeht"), "durchgeht" );
	deepEqual( Stem("durchgekämpft"), "durchgekampft" );
	deepEqual( Stem("durchgekaute"), "durchgekaut" );
	deepEqual( Stem("durchgelassen"), "durchgelass" );
	deepEqual( Stem("durchgelaufen"), "durchgelauf" );
	deepEqual( Stem("durchgereist"), "durchgereist" );
	deepEqual( Stem("durchgeschleppt"), "durchgeschleppt" );
	deepEqual( Stem("durchgreifende"), "durchgreif" );
	deepEqual( Stem("durchkommen"), "durchkomm" );
	deepEqual( Stem("durchläuft"), "durchlauft" );
	deepEqual( Stem("durchleben"), "durchleb" );
	deepEqual( Stem("durchlief"), "durchlief" );
	deepEqual( Stem("durchliess"), "durchliess" );
	deepEqual( Stem("durchlöchern"), "durchloch" );
	deepEqual( Stem("durchmass"), "durchmass" );
	deepEqual( Stem("durchmustern"), "durchmust" );
	deepEqual( Stem("durchmusterte"), "durchmustert" );
	deepEqual( Stem("durchquerte"), "durchquert" );
	deepEqual( Stem("durchs"), "durch" );
	deepEqual( Stem("durchschauerte"), "durchschauert" );
	deepEqual( Stem("durchschaute"), "durchschaut" );
	deepEqual( Stem("durchschauten"), "durchschaut" );
	deepEqual( Stem("durchscheinen"), "durchschein" );
	deepEqual( Stem("durchscheinend"), "durchschein" );
	deepEqual( Stem("durchscheinenden"), "durchschein" );
	deepEqual( Stem("durchschimmern"), "durchschimm" );
	deepEqual( Stem("durchschimmerte"), "durchschimmert" );
	deepEqual( Stem("durchschlagen"), "durchschlag" );
	deepEqual( Stem("durchschneiden"), "durchschneid" );
	deepEqual( Stem("durchschnittenen"), "durchschnitt" );
	deepEqual( Stem("durchschnittsleben"), "durchschnittsleb" );
	deepEqual( Stem("durchschritten"), "durchschritt" );
	deepEqual( Stem("durchschwemmt"), "durchschwemmt" );
	deepEqual( Stem("durchsetzen"), "durchsetz" );
	deepEqual( Stem("durchsetzt"), "durchsetzt" );
	deepEqual( Stem("durchsetzung"), "durchsetz" );
	deepEqual( Stem("durchsichtig"), "durchsicht" );
	deepEqual( Stem("durchsichtige"), "durchsicht" );
	deepEqual( Stem("durchsichtigem"), "durchsicht" );
	deepEqual( Stem("durchsichtigen"), "durchsicht" );
	deepEqual( Stem("durchsichtiger"), "durchsicht" );
	deepEqual( Stem("durchsichtigkeit"), "durchsicht" );
	deepEqual( Stem("durchsickern"), "durchsick" );
	deepEqual( Stem("durchsonnte"), "durchsonnt" );
	deepEqual( Stem("durchstrichen"), "durchstrich" );
	deepEqual( Stem("durchströmt"), "durchstromt" );
	deepEqual( Stem("durchsuchen"), "durchsuch" );
	deepEqual( Stem("durchsucht"), "durchsucht" );
	deepEqual( Stem("durchsuchte"), "durchsucht" );
	deepEqual( Stem("durchsuchten"), "durchsucht" );
	deepEqual( Stem("durchsuchungen"), "durchsuch" );
	deepEqual( Stem("durchtrieben"), "durchtrieb" );
	deepEqual( Stem("durchtriebener"), "durchtrieb" );
	deepEqual( Stem("durchwanderten"), "durchwandert" );
	deepEqual( Stem("durchweg"), "durchweg" );
	deepEqual( Stem("durchwegs"), "durchweg" );
	deepEqual( Stem("durchweicht"), "durchweicht" );
	deepEqual( Stem("durchzogen"), "durchzog" );
	deepEqual( Stem("durchzogener"), "durchzog" );
	deepEqual( Stem("durchzuckte"), "durchzuckt" );
	deepEqual( Stem("durchzulesen"), "durchzules" );
	deepEqual( Stem("durchzuschlagen"), "durchzuschlag" );
	deepEqual( Stem("durchzusehen"), "durchzuseh" );
	deepEqual( Stem("durchzuwandern"), "durchzuwand" );
	deepEqual( Stem("dürfe"), "durf" );
	deepEqual( Stem("dürfen"), "durf" );
	deepEqual( Stem("dürfet"), "durfet" );
	deepEqual( Stem("dürft"), "durft" );
	deepEqual( Stem("durfte"), "durft" );
	deepEqual( Stem("dürfte"), "durft" );
	deepEqual( Stem("durften"), "durft" );
	deepEqual( Stem("dürften"), "durft" );
	deepEqual( Stem("dürftet"), "durftet" );
	deepEqual( Stem("dürftig"), "durftig" );
	deepEqual( Stem("dürftige"), "durftig" );
	deepEqual( Stem("dürftigem"), "durftig" );
	deepEqual( Stem("dürftigen"), "durftig" );
	deepEqual( Stem("dürftigkeit"), "durftig" );
	deepEqual( Stem("dürr"), "durr" );
	deepEqual( Stem("dürre"), "durr" );
	deepEqual( Stem("dürrem"), "durr" );
	deepEqual( Stem("dürren"), "durr" );
	deepEqual( Stem("dürrer"), "durr" );
	deepEqual( Stem("dürres"), "durr" );
	deepEqual( Stem("durst"), "durst" );
	deepEqual( Stem("dürste"), "durst" );
	deepEqual( Stem("dursten"), "durst" );
	deepEqual( Stem("dürsten"), "durst" );
	deepEqual( Stem("dürstende"), "durstend" );
	deepEqual( Stem("dürstenden"), "durstend" );
	deepEqual( Stem("durstet"), "durstet" );
	deepEqual( Stem("dürsteten"), "durstet" );
	deepEqual( Stem("durstige"), "durstig" );
	deepEqual( Stem("durstiger"), "durstig" );
	deepEqual( Stem("duselnden"), "duselnd" );
	deepEqual( Stem("duselt"), "duselt" );
	deepEqual( Stem("düster"), "dust" );
	deepEqual( Stem("düstere"), "dust" );
	deepEqual( Stem("düsterem"), "dust" );
	deepEqual( Stem("düsterer"), "dust" );
	deepEqual( Stem("düte"), "dut" );
	deepEqual( Stem("düten"), "dut" );
	deepEqual( Stem("dutzend"), "dutzend" );
	deepEqual( Stem("dutzenden"), "dutzend" );
	deepEqual( Stem("dutzendmal"), "dutzendmal" );
	deepEqual( Stem("dutzendweise"), "dutzendweis" );
	deepEqual( Stem("dv"), "dv" );
	deepEqual( Stem("dynamischen"), "dynam" );
	deepEqual( Stem("dyp"), "dyp" );
	deepEqual( Stem("e"), "e" );
	deepEqual( Stem("eahm"), "eahm" );
	deepEqual( Stem("eandemque"), "eandemqu" );
	deepEqual( Stem("earth"), "earth" );
	deepEqual( Stem("easy"), "easy" );
	deepEqual( Stem("ebbes"), "ebb" );
	deepEqual( Stem("eben"), "eben" );
	deepEqual( Stem("ebenbild"), "ebenbild" );
	deepEqual( Stem("ebenbürtig"), "ebenburt" );
	deepEqual( Stem("ebenbürtigen"), "ebenburt" );
	deepEqual( Stem("ebendaher"), "ebendah" );
	deepEqual( Stem("ebendamit"), "ebendamit" );
	deepEqual( Stem("ebendarum"), "ebendarum" );
	deepEqual( Stem("ebendaselbst"), "ebendaselb" );
	deepEqual( Stem("ebendasselbe"), "ebendasselb" );
	deepEqual( Stem("ebendenselben"), "ebendenselb" );
	deepEqual( Stem("ebenderselben"), "ebenderselb" );
	deepEqual( Stem("ebendiese"), "ebendies" );
	deepEqual( Stem("ebendieselbe"), "ebendieselb" );
	deepEqual( Stem("ebendieselben"), "ebendieselb" );
	deepEqual( Stem("ebendort"), "ebendort" );
	deepEqual( Stem("ebene"), "eben" );
	deepEqual( Stem("ebenen"), "eben" );
	deepEqual( Stem("ebenerdige"), "ebenerd" );
	deepEqual( Stem("ebenfahls"), "ebenfahl" );
	deepEqual( Stem("ebenfalls"), "ebenfall" );
	deepEqual( Stem("ebenso"), "ebenso" );
	deepEqual( Stem("ebensogut"), "ebensogut" );
	deepEqual( Stem("ebensoviel"), "ebensoviel" );
	deepEqual( Stem("ebensowenig"), "ebensowen" );
	deepEqual( Stem("ebensowohl"), "ebensowohl" );
	deepEqual( Stem("eber"), "eber" );
	deepEqual( Stem("ebereschen"), "eberesch" );
	deepEqual( Stem("ebne"), "ebn" );
	deepEqual( Stem("ebnete"), "ebnet" );
	deepEqual( Stem("ecclesiae"), "ecclesia" );
	deepEqual( Stem("echo"), "echo" );
	deepEqual( Stem("echt"), "echt" );
	deepEqual( Stem("echte"), "echt" );
	deepEqual( Stem("echten"), "echt" );
	deepEqual( Stem("echter"), "echt" );
	deepEqual( Stem("ecke"), "eck" );
	deepEqual( Stem("ecken"), "eck" );
	deepEqual( Stem("eckig"), "eckig" );
	deepEqual( Stem("ecksäulen"), "ecksaul" );
	deepEqual( Stem("eckzimmer"), "eckzimm" );
	deepEqual( Stem("ectypa"), "ectypa" );
	deepEqual( Stem("eda"), "eda" );
	deepEqual( Stem("edel"), "edel" );
	deepEqual( Stem("edelgeformten"), "edelgeformt" );
	deepEqual( Stem("edelherr"), "edelherr" );
	deepEqual( Stem("edelherren"), "edelherr" );
	deepEqual( Stem("edelherrn"), "edelherrn" );
	deepEqual( Stem("edelmann"), "edelmann" );
	deepEqual( Stem("edelmanns"), "edelmann" );
	deepEqual( Stem("edelmannstracht"), "edelmannstracht" );
	deepEqual( Stem("edelmütig"), "edelmut" );
	deepEqual( Stem("edelpferden"), "edelpferd" );
	deepEqual( Stem("edelste"), "edel" );
	deepEqual( Stem("edelstein"), "edelstein" );
	deepEqual( Stem("edelsteine"), "edelstein" );
	deepEqual( Stem("edelsteinen"), "edelstein" );
	deepEqual( Stem("edelsten"), "edel" );
	deepEqual( Stem("edelweib"), "edelweib" );
	deepEqual( Stem("edelweiss"), "edelweiss" );
	deepEqual( Stem("eden"), "eden" );
	deepEqual( Stem("edens"), "eden" );
	deepEqual( Stem("ediert"), "ediert" );
	deepEqual( Stem("edith"), "edith" );
	deepEqual( Stem("edle"), "edl" );
	deepEqual( Stem("edlem"), "edl" );
	deepEqual( Stem("edlen"), "edl" );
	deepEqual( Stem("edler"), "edl" );
	deepEqual( Stem("edlere"), "edl" );
	deepEqual( Stem("edleren"), "edl" );
	deepEqual( Stem("edleres"), "edl" );
	deepEqual( Stem("edles"), "edl" );
	deepEqual( Stem("edom"), "edom" );
	deepEqual( Stem("edoms"), "edom" );
	deepEqual( Stem("eeccs"), "eeccs" );
	deepEqual( Stem("eerv"), "eerv" );
	deepEqual( Stem("efeu"), "efeu" );
	deepEqual( Stem("effekt"), "effekt" );
	deepEqual( Stem("efficere"), "effic" );
	deepEqual( Stem("effigies"), "effigi" );
	deepEqual( Stem("egal"), "egal" );
	deepEqual( Stem("eglaim"), "eglaim" );
	deepEqual( Stem("eh"), "eh" );
	deepEqual( Stem("ehandelt"), "ehandelt" );
	deepEqual( Stem("ehe"), "ehe" );
	deepEqual( Stem("ehebrechen"), "ehebrech" );
	deepEqual( Stem("ehebrecher"), "ehebrech" );
	deepEqual( Stem("ehebrechers"), "ehebrech" );
	deepEqual( Stem("ehebruch"), "ehebruch" );
	deepEqual( Stem("ehebrüche"), "ehebruch" );
	deepEqual( Stem("ehebruchs"), "ehebruch" );
	deepEqual( Stem("ehedem"), "ehed" );
	deepEqual( Stem("ehefrau"), "ehefrau" );
	deepEqual( Stem("ehegemahls"), "ehegemahl" );
	deepEqual( Stem("ehegesponsin"), "ehegesponsin" );
	deepEqual( Stem("eheherren"), "eheherr" );
	deepEqual( Stem("eheleuten"), "eheleut" );
	deepEqual( Stem("eheliche"), "ehelich" );
	deepEqual( Stem("ehelichen"), "ehelich" );
	deepEqual( Stem("ehemalige"), "ehemal" );
	deepEqual( Stem("ehemaligen"), "ehemal" );
	deepEqual( Stem("ehemaliger"), "ehemal" );
	deepEqual( Stem("ehemaliges"), "ehemal" );
	deepEqual( Stem("ehemals"), "ehemal" );
	deepEqual( Stem("ehemann"), "ehemann" );
	deepEqual( Stem("ehemannes"), "ehemann" );
	deepEqual( Stem("ehen"), "ehen" );
	deepEqual( Stem("ehepaar"), "ehepaar" );
	deepEqual( Stem("eher"), "eher" );
	deepEqual( Stem("eherne"), "ehern" );
	deepEqual( Stem("ehesten"), "ehest" );
	deepEqual( Stem("ehestens"), "ehest" );
	deepEqual( Stem("eheweiber"), "eheweib" );
	deepEqual( Stem("ehr"), "ehr" );
	deepEqual( Stem("ehrbar"), "ehrbar" );
	deepEqual( Stem("ehrbare"), "ehrbar" );
	deepEqual( Stem("ehrbarem"), "ehrbar" );
	deepEqual( Stem("ehrbaren"), "ehrbar" );
	deepEqual( Stem("ehrbarer"), "ehrbar" );
	deepEqual( Stem("ehrbareres"), "ehrbar" );
	deepEqual( Stem("ehrbares"), "ehrbar" );
	deepEqual( Stem("ehrbarkeit"), "ehrbar" );
	deepEqual( Stem("ehre"), "ehr" );
	deepEqual( Stem("ehren"), "ehr" );
	deepEqual( Stem("ehrenamtliche"), "ehrenamt" );
	deepEqual( Stem("ehrenbürgerin"), "ehrenburgerin" );
	deepEqual( Stem("ehrenbürgerinfür"), "ehrenburgerinfur" );
	deepEqual( Stem("ehrenbürgerrecht"), "ehrenburgerrecht" );
	deepEqual( Stem("ehrend"), "ehrend" );
	deepEqual( Stem("ehrenfest"), "ehrenf" );
	deepEqual( Stem("ehrenfesten"), "ehrenf" );
	deepEqual( Stem("ehrennamen"), "ehrennam" );
	deepEqual( Stem("ehrenplatz"), "ehrenplatz" );
	deepEqual( Stem("ehrenreich"), "ehrenreich" );
	deepEqual( Stem("ehrenstellen"), "ehrenstell" );
	deepEqual( Stem("ehrenstellung"), "ehrenstell" );
	deepEqual( Stem("ehrentitel"), "ehrentitel" );
	deepEqual( Stem("ehrenwerte"), "ehrenwert" );
	deepEqual( Stem("ehrerbietig"), "ehrerbiet" );
	deepEqual( Stem("ehrerbietung"), "ehrerbiet" );
	deepEqual( Stem("ehrest"), "ehr" );
	deepEqual( Stem("ehrfurcht"), "ehrfurcht" );
	deepEqual( Stem("ehrfurchtsvolle"), "ehrfurchtsvoll" );
	deepEqual( Stem("ehrgeizigen"), "ehrgeiz" );
	deepEqual( Stem("ehrgeiziger"), "ehrgeiz" );
	deepEqual( Stem("ehrlich"), "ehrlich" );
	deepEqual( Stem("ehrliche"), "ehrlich" );
	deepEqual( Stem("ehrlichen"), "ehrlich" );
	deepEqual( Stem("ehrlicher"), "ehrlich" );
	deepEqual( Stem("ehrlichkeit"), "ehrlich" );
	deepEqual( Stem("ehrsame"), "ehrsam" );
	deepEqual( Stem("ehrsames"), "ehrsam" );
	deepEqual( Stem("ehrt"), "ehrt" );
	deepEqual( Stem("ehrte"), "ehrt" );
	deepEqual( Stem("ehrvergessenen"), "ehrvergess" );
	deepEqual( Stem("ehrwürdig"), "ehrwurd" );
	deepEqual( Stem("ehrwürdige"), "ehrwurd" );
	deepEqual( Stem("ehrwürdiger"), "ehrwurd" );
	deepEqual( Stem("ei"), "ei" );
	deepEqual( Stem("eia"), "eia" );
	deepEqual( Stem("eibenbäumchen"), "eibenbaumch" );
	deepEqual( Stem("eiche"), "eich" );
	deepEqual( Stem("eichen"), "eich" );
	deepEqual( Stem("eichenast"), "eichenast" );
	deepEqual( Stem("eichendorff"), "eichendorff" );
	deepEqual( Stem("eichenen"), "eich" );
	deepEqual( Stem("eichenstämme"), "eichenstamm" );
	deepEqual( Stem("eichentisch"), "eichent" );
	deepEqual( Stem("eichhörnchen"), "eichhornch" );
	deepEqual( Stem("eichkatzl"), "eichkatzl" );
	deepEqual( Stem("eichwald"), "eichwald" );
	deepEqual( Stem("eiden"), "eid" );
	deepEqual( Stem("eidgenossenschaft"), "eidgenossenschaft" );
	deepEqual( Stem("eidgenössische"), "eidgenoss" );
	deepEqual( Stem("eidgenössischen"), "eidgenoss" );
	deepEqual( Stem("eier"), "eier" );
	deepEqual( Stem("eierbecher"), "eierbech" );
	deepEqual( Stem("eierbrot"), "eierbrot" );
	deepEqual( Stem("eierkuchen"), "eierkuch" );
	deepEqual( Stem("eierkuchens"), "eierkuch" );
	deepEqual( Stem("eierlast"), "eierlast" );
	deepEqual( Stem("eiern"), "eiern" );
	deepEqual( Stem("eiertanz"), "eiertanz" );
	deepEqual( Stem("eifer"), "eif" );
	deepEqual( Stem("eifers"), "eif" );
	deepEqual( Stem("eifersucht"), "eifersucht" );
	deepEqual( Stem("eifersüchtig"), "eifersucht" );
	deepEqual( Stem("eiferten"), "eifert" );
	deepEqual( Stem("eiffelturm"), "eiffelturm" );
	deepEqual( Stem("eifrig"), "eifrig" );
	deepEqual( Stem("eifrige"), "eifrig" );
	deepEqual( Stem("eifrigen"), "eifrig" );
	deepEqual( Stem("eifriger"), "eifrig" );
	deepEqual( Stem("eifrigsten"), "eifrig" );
	deepEqual( Stem("eigen"), "eig" );
	deepEqual( Stem("eigenanteile"), "eigenanteil" );
	deepEqual( Stem("eigenartige"), "eigenart" );
	deepEqual( Stem("eigendünkel"), "eigendunkel" );
	deepEqual( Stem("eigene"), "eig" );
	deepEqual( Stem("eigenem"), "eig" );
	deepEqual( Stem("eigenen"), "eig" );
	deepEqual( Stem("eigener"), "eig" );
	deepEqual( Stem("eigenes"), "eig" );
	deepEqual( Stem("eigenhändig"), "eigenhand" );
	deepEqual( Stem("eigenheiten"), "eig" );
	deepEqual( Stem("eigenliebe"), "eigenlieb" );
	deepEqual( Stem("eigenliebige"), "eigenlieb" );
	deepEqual( Stem("eigenname"), "eigennam" );
	deepEqual( Stem("eigennutz"), "eigennutz" );
	deepEqual( Stem("eigennützige"), "eigennutz" );
	deepEqual( Stem("eigennützigen"), "eigennutz" );
	deepEqual( Stem("eigennütziger"), "eigennutz" );
	deepEqual( Stem("eigens"), "eig" );
	deepEqual( Stem("eigenschafren"), "eigenschafr" );
	deepEqual( Stem("eigenschaft"), "eigenschaft" );
	deepEqual( Stem("eigenschaften"), "eigenschaft" );
	deepEqual( Stem("eigenschaftung"), "eigenschaft" );
	deepEqual( Stem("eigensinn"), "eigensinn" );
	deepEqual( Stem("eigensinnig"), "eigensinn" );
	deepEqual( Stem("eigensinnigen"), "eigensinn" );
	deepEqual( Stem("eigensinniger"), "eigensinn" );
	deepEqual( Stem("eigenst"), "eigen" );
	deepEqual( Stem("eigenste"), "eigen" );
	deepEqual( Stem("eigensten"), "eigen" );
	deepEqual( Stem("eigenstes"), "eigen" );
	deepEqual( Stem("eigensüchtigen"), "eigensucht" );
	deepEqual( Stem("eigentlich"), "eigent" );
	deepEqual( Stem("eigentliche"), "eigent" );
	deepEqual( Stem("eigentlichen"), "eigent" );
	deepEqual( Stem("eigentliches"), "eigent" );
	deepEqual( Stem("eigentlichst"), "eigent" );
	deepEqual( Stem("eigentlichste"), "eigent" );
	deepEqual( Stem("eigentum"), "eigentum" );
	deepEqual( Stem("eigentümer"), "eigentum" );
	deepEqual( Stem("eigentümers"), "eigentum" );
	deepEqual( Stem("eigentümlich"), "eigentum" );
	deepEqual( Stem("eigentümliche"), "eigentum" );
	deepEqual( Stem("eigentümlichem"), "eigentum" );
	deepEqual( Stem("eigentümlichen"), "eigentum" );
	deepEqual( Stem("eigentümlicher"), "eigentum" );
	deepEqual( Stem("eigentümlicherweise"), "eigentumlicherweis" );
	deepEqual( Stem("eigentümliches"), "eigentum" );
	deepEqual( Stem("eigentümlichkeit"), "eigentum" );
	deepEqual( Stem("eigentümlichkeiten"), "eigentum" );
	deepEqual( Stem("eigentums"), "eigentum" );
	deepEqual( Stem("eigenwillen"), "eigenwill" );
	deepEqual( Stem("eigne"), "eign" );
	deepEqual( Stem("eignen"), "eign" );
	deepEqual( Stem("eignet"), "eignet" );
	deepEqual( Stem("eignungsprüfung"), "eignungspruf" );
	deepEqual( Stem("eil"), "eil" );
	deepEqual( Stem("eilanden"), "eiland" );
	deepEqual( Stem("eile"), "eil" );
	deepEqual( Stem("eilen"), "eil" );
	deepEqual( Stem("eilend"), "eilend" );
	deepEqual( Stem("eilenden"), "eilend" );
	deepEqual( Stem("eilender"), "eilend" );
	deepEqual( Stem("eilendes"), "eilend" );
	deepEqual( Stem("eilends"), "eilend" );
	deepEqual( Stem("eilet"), "eilet" );
	deepEqual( Stem("eilfertig"), "eilfert" );
	deepEqual( Stem("eilig"), "eilig" );
	deepEqual( Stem("eiligen"), "eilig" );
	deepEqual( Stem("eiligst"), "eilig" );
	deepEqual( Stem("eilt"), "eilt" );
	deepEqual( Stem("eilte"), "eilt" );
	deepEqual( Stem("eilten"), "eilt" );
	deepEqual( Stem("eim"), "eim" );
	deepEqual( Stem("eimer"), "eim" );
	deepEqual( Stem("eimern"), "eim" );
	deepEqual( Stem("eimers"), "eim" );
	deepEqual( Stem("ein"), "ein" );
	deepEqual( Stem("einander"), "einand" );
	deepEqual( Stem("einband"), "einband" );
	deepEqual( Stem("einbanddeckel"), "einbanddeckel" );
	deepEqual( Stem("einberufung"), "einberuf" );
	deepEqual( Stem("einbilde"), "einbild" );
	deepEqual( Stem("einbilden"), "einbild" );
	deepEqual( Stem("einbildete"), "einbildet" );
	deepEqual( Stem("einbildeten"), "einbildet" );
	deepEqual( Stem("einbildung"), "einbild" );
	deepEqual( Stem("einbildungen"), "einbild" );
	deepEqual( Stem("einbildungskraft"), "einbildungskraft" );
	deepEqual( Stem("einblick"), "einblick" );
	deepEqual( Stem("einbrächten"), "einbracht" );
	deepEqual( Stem("einbrechende"), "einbrech" );
	deepEqual( Stem("einbringen"), "einbring" );
	deepEqual( Stem("einbringt"), "einbringt" );
	deepEqual( Stem("einbringung"), "einbring" );
	deepEqual( Stem("einbruch"), "einbruch" );
	deepEqual( Stem("einbürgern"), "einburg" );
	deepEqual( Stem("einbusse"), "einbuss" );
	deepEqual( Stem("einbuße"), "einbuss" );
	deepEqual( Stem("einbüssung"), "einbuss" );
	deepEqual( Stem("einchecken"), "eincheck" );
	deepEqual( Stem("eincheckens"), "eincheck" );
	deepEqual( Stem("eindeutig"), "eindeut" );
	deepEqual( Stem("eindrang"), "eindrang" );
	deepEqual( Stem("eindringe"), "eindring" );
	deepEqual( Stem("eindringen"), "eindring" );
	deepEqual( Stem("eindringendsten"), "eindring" );
	deepEqual( Stem("eindringlich"), "eindring" );
	deepEqual( Stem("eindringlichen"), "eindring" );
	deepEqual( Stem("eindringlichkeit"), "eindring" );
	deepEqual( Stem("eindringlinge"), "eindringling" );
	deepEqual( Stem("eindringt"), "eindringt" );
	deepEqual( Stem("eindruck"), "eindruck" );
	deepEqual( Stem("eindrücken"), "eindruck" );
	deepEqual( Stem("eine"), "ein" );
	deepEqual( Stem("eineinviertel"), "eineinviertel" );
	deepEqual( Stem("einem"), "ein" );
	deepEqual( Stem("einen"), "ein" );
	deepEqual( Stem("einer"), "ein" );
	deepEqual( Stem("einerlei"), "einerlei" );
	deepEqual( Stem("einerleiheit"), "einerlei" );
	deepEqual( Stem("einernten"), "einernt" );
	deepEqual( Stem("einerseits"), "einerseit" );
	deepEqual( Stem("eines"), "ein" );
	deepEqual( Stem("einesteils"), "einesteil" );
	deepEqual( Stem("einfach"), "einfach" );
	deepEqual( Stem("einfachbauweise"), "einfachbauweis" );
	deepEqual( Stem("einfache"), "einfach" );
	deepEqual( Stem("einfachen"), "einfach" );
	deepEqual( Stem("einfacher"), "einfach" );
	deepEqual( Stem("einfaches"), "einfach" );
	deepEqual( Stem("einfachheit"), "einfach" );
	deepEqual( Stem("einfachste"), "einfach" );
	deepEqual( Stem("einfachsten"), "einfach" );
	deepEqual( Stem("einfahrt"), "einfahrt" );
	deepEqual( Stem("einfall"), "einfall" );
	deepEqual( Stem("einfälle"), "einfall" );
	deepEqual( Stem("einfallen"), "einfall" );
	deepEqual( Stem("einfällt"), "einfallt" );
	deepEqual( Stem("einfalt"), "einfalt" );
	deepEqual( Stem("einfältig"), "einfalt" );
	deepEqual( Stem("einfältige"), "einfalt" );
	deepEqual( Stem("einfältigem"), "einfalt" );
	deepEqual( Stem("einfältigen"), "einfalt" );
	deepEqual( Stem("einfältiger"), "einfalt" );
	deepEqual( Stem("einfältiges"), "einfalt" );
	deepEqual( Stem("einfand"), "einfand" );
	deepEqual( Stem("einfanden"), "einfand" );
	deepEqual( Stem("einfange"), "einfang" );
	deepEqual( Stem("einfangen"), "einfang" );
	deepEqual( Stem("einfasste"), "einfasst" );
	deepEqual( Stem("einfenstrige"), "einfenstr" );
	deepEqual( Stem("einfenstriges"), "einfenstr" );
	deepEqual( Stem("einfiel"), "einfiel" );
	deepEqual( Stem("einfinden"), "einfind" );
	deepEqual( Stem("einfindet"), "einfindet" );
	deepEqual( Stem("einfliesse"), "einfliess" );
	deepEqual( Stem("einfließe"), "einfliess" );
	deepEqual( Stem("einfliessen"), "einfliess" );
	deepEqual( Stem("einfließen"), "einfliess" );
	deepEqual( Stem("einfliessende"), "einfliess" );
	deepEqual( Stem("einfließende"), "einfliess" );
	deepEqual( Stem("einfliessenden"), "einfliess" );
	deepEqual( Stem("einfließenden"), "einfliess" );
	deepEqual( Stem("einfliessendes"), "einfliess" );
	deepEqual( Stem("einfließendes"), "einfliess" );
	deepEqual( Stem("einfliesst"), "einfliesst" );
	deepEqual( Stem("einfließt"), "einfliesst" );
	deepEqual( Stem("einfloss"), "einfloss" );
	deepEqual( Stem("einfloß"), "einfloss" );
	deepEqual( Stem("einflösse"), "einfloss" );
	deepEqual( Stem("einflöße"), "einfloss" );
	deepEqual( Stem("einflössen"), "einfloss" );
	deepEqual( Stem("einflößen"), "einfloss" );
	deepEqual( Stem("einflösst"), "einflosst" );
	deepEqual( Stem("einflößt"), "einflosst" );
	deepEqual( Stem("einflössten"), "einflosst" );
	deepEqual( Stem("einflößten"), "einflosst" );
	deepEqual( Stem("einflössung"), "einfloss" );
	deepEqual( Stem("einflößung"), "einfloss" );
	deepEqual( Stem("einfluss"), "einfluss" );
	deepEqual( Stem("einfluß"), "einfluss" );
	deepEqual( Stem("einflusse"), "einfluss" );
	deepEqual( Stem("einflüsse"), "einfluss" );
	deepEqual( Stem("einflusses"), "einfluss" );
	deepEqual( Stem("einflussreiche"), "einflussreich" );
	deepEqual( Stem("einflußreiche"), "einflussreich" );
	deepEqual( Stem("einflussreichen"), "einflussreich" );
	deepEqual( Stem("einflußreichen"), "einflussreich" );
	deepEqual( Stem("einflüstern"), "einflust" );
	deepEqual( Stem("einförmig"), "einform" );
	deepEqual( Stem("einförmige"), "einform" );
	deepEqual( Stem("einfühlungsvermögen"), "einfuhlungsvermog" );
	deepEqual( Stem("einfuhr"), "einfuhr" );
	deepEqual( Stem("einführen"), "einfuhr" );
	deepEqual( Stem("einführung"), "einfuhr" );
	deepEqual( Stem("eingab"), "eingab" );
	deepEqual( Stem("eingabe"), "eingab" );
	deepEqual( Stem("eingaben"), "eingab" );
	deepEqual( Stem("eingang"), "eingang" );
	deepEqual( Stem("eingange"), "eingang" );
	deepEqual( Stem("eingänge"), "eingang" );
	deepEqual( Stem("eingangen"), "eingang" );
	deepEqual( Stem("eingängen"), "eingang" );
	deepEqual( Stem("eingangstor"), "eingangstor" );
	deepEqual( Stem("eingangstür"), "eingangstur" );
	deepEqual( Stem("eingeäscherten"), "eingeaschert" );
	deepEqual( Stem("eingebildet"), "eingebildet" );
	deepEqual( Stem("eingebildete"), "eingebildet" );
	deepEqual( Stem("eingebildeten"), "eingebildet" );
	deepEqual( Stem("eingebildetes"), "eingebildet" );
	deepEqual( Stem("eingeblasen"), "eingeblas" );
	deepEqual( Stem("eingebogen"), "eingebog" );
	deepEqual( Stem("eingeborene"), "eingebor" );
	deepEqual( Stem("eingeborenen"), "eingebor" );
	deepEqual( Stem("eingebracht"), "eingebracht" );
	deepEqual( Stem("eingebunden"), "eingebund" );
	deepEqual( Stem("eingebung"), "eingeb" );
	deepEqual( Stem("eingebüsst"), "eingebusst" );
	deepEqual( Stem("eingedämmt"), "eingedammt" );
	deepEqual( Stem("eingedenk"), "eingedenk" );
	deepEqual( Stem("eingedrückten"), "eingedruckt" );
	deepEqual( Stem("eingefahren"), "eingefahr" );
	deepEqual( Stem("eingefallen"), "eingefall" );
	deepEqual( Stem("eingefasst"), "eingefasst" );
	deepEqual( Stem("eingefaßt"), "eingefasst" );
	deepEqual( Stem("eingefleischten"), "eingefleischt" );
	deepEqual( Stem("eingeflochten"), "eingeflocht" );
	deepEqual( Stem("eingeflösst"), "eingeflosst" );
	deepEqual( Stem("eingeflößt"), "eingeflosst" );
	deepEqual( Stem("eingeflösste"), "eingeflosst" );
	deepEqual( Stem("eingeflößte"), "eingeflosst" );
	deepEqual( Stem("eingeflösstes"), "eingeflosst" );
	deepEqual( Stem("eingeflößtes"), "eingeflosst" );
	deepEqual( Stem("eingefügt"), "eingefugt" );
	deepEqual( Stem("eingeführt"), "eingefuhrt" );
	deepEqual( Stem("eingefunden"), "eingefund" );
	deepEqual( Stem("eingegangen"), "eingegang" );
	deepEqual( Stem("eingegangenen"), "eingegang" );
	deepEqual( Stem("eingegeben"), "eingegeb" );
	deepEqual( Stem("eingegebnen"), "eingegebn" );
	deepEqual( Stem("eingegitterten"), "eingegittert" );
	deepEqual( Stem("eingegraben"), "eingegrab" );
	deepEqual( Stem("eingehandelt"), "eingehandelt" );
	deepEqual( Stem("eingehängt"), "eingehangt" );
	deepEqual( Stem("eingehaucht"), "eingehaucht" );
	deepEqual( Stem("eingehen"), "eingeh" );
	deepEqual( Stem("eingehenden"), "eingeh" );
	deepEqual( Stem("eingehet"), "eingehet" );
	deepEqual( Stem("eingeholt"), "eingeholt" );
	deepEqual( Stem("eingeht"), "eingeht" );
	deepEqual( Stem("eingehüllt"), "eingehullt" );
	deepEqual( Stem("eingekauft"), "eingekauft" );
	deepEqual( Stem("eingeklebt"), "eingeklebt" );
	deepEqual( Stem("eingekleidet"), "eingekleidet" );
	deepEqual( Stem("eingeklemmt"), "eingeklemmt" );
	deepEqual( Stem("eingekniffenem"), "eingekniff" );
	deepEqual( Stem("eingeladen"), "eingelad" );
	deepEqual( Stem("eingelassen"), "eingelass" );
	deepEqual( Stem("eingelassenen"), "eingelass" );
	deepEqual( Stem("eingelassenwerden"), "eingelassenwerd" );
	deepEqual( Stem("eingelegt"), "eingelegt" );
	deepEqual( Stem("eingelegte"), "eingelegt" );
	deepEqual( Stem("eingeleitet"), "eingeleitet" );
	deepEqual( Stem("eingeleitete"), "eingeleitet" );
	deepEqual( Stem("eingemachte"), "eingemacht" );
	deepEqual( Stem("eingemengt"), "eingemengt" );
	deepEqual( Stem("eingemischt"), "eingemischt" );
	deepEqual( Stem("eingenommen"), "eingenomm" );
	deepEqual( Stem("eingenommenen"), "eingenomm" );
	deepEqual( Stem("eingepackt"), "eingepackt" );
	deepEqual( Stem("eingepackten"), "eingepackt" );
	deepEqual( Stem("eingepferchte"), "eingepfercht" );
	deepEqual( Stem("eingepflanzt"), "eingepflanzt" );
	deepEqual( Stem("eingepflanzte"), "eingepflanzt" );
	deepEqual( Stem("eingepflanzten"), "eingepflanzt" );
	deepEqual( Stem("eingepflanztes"), "eingepflanzt" );
	deepEqual( Stem("eingepfropfte"), "eingepfropft" );
	deepEqual( Stem("eingeprägt"), "eingepragt" );
	deepEqual( Stem("eingeräumt"), "eingeraumt" );
	deepEqual( Stem("eingeräumte"), "eingeraumt" );
	deepEqual( Stem("eingeredet"), "eingeredet" );
	deepEqual( Stem("eingeredeten"), "eingeredet" );
	deepEqual( Stem("eingereiht"), "eingereiht" );
	deepEqual( Stem("eingerichtet"), "eingerichtet" );
	deepEqual( Stem("eingerichteten"), "eingerichtet" );
	deepEqual( Stem("eingerichtetes"), "eingerichtet" );
	deepEqual( Stem("eingerissenes"), "eingeriss" );
	deepEqual( Stem("eingesät"), "eingesat" );
	deepEqual( Stem("eingeschenkten"), "eingeschenkt" );
	deepEqual( Stem("eingeschlafen"), "eingeschlaf" );
	deepEqual( Stem("eingeschlagen"), "eingeschlag" );
	deepEqual( Stem("eingeschlagenen"), "eingeschlag" );
	deepEqual( Stem("eingeschlossen"), "eingeschloss" );
	deepEqual( Stem("eingeschlossene"), "eingeschloss" );
	deepEqual( Stem("eingeschlossenen"), "eingeschloss" );
	deepEqual( Stem("eingeschmiert"), "eingeschmiert" );
	deepEqual( Stem("eingeschossen"), "eingeschoss" );
	deepEqual( Stem("eingeschränkt"), "eingeschrankt" );
	deepEqual( Stem("eingeschränkten"), "eingeschrankt" );
	deepEqual( Stem("eingeschrieben"), "eingeschrieb" );
	deepEqual( Stem("eingeschriebene"), "eingeschrieb" );
	deepEqual( Stem("eingeschüchterten"), "eingeschuchtert" );
	deepEqual( Stem("eingeschult"), "eingeschult" );
	deepEqual( Stem("eingesehen"), "eingeseh" );
	deepEqual( Stem("eingesetzt"), "eingesetzt" );
	deepEqual( Stem("eingesperrt"), "eingesperrt" );
	deepEqual( Stem("eingeständlich"), "eingestand" );
	deepEqual( Stem("eingestehe"), "eingesteh" );
	deepEqual( Stem("eingestehen"), "eingesteh" );
	deepEqual( Stem("eingestellt"), "eingestellt" );
	deepEqual( Stem("eingestreut"), "eingestreut" );
	deepEqual( Stem("eingetan"), "eingetan" );
	deepEqual( Stem("eingeteilt"), "eingeteilt" );
	deepEqual( Stem("eingetragen"), "eingetrag" );
	deepEqual( Stem("eingetreten"), "eingetret" );
	deepEqual( Stem("eingetrieben"), "eingetrieb" );
	deepEqual( Stem("eingetrockneten"), "eingetrocknet" );
	deepEqual( Stem("eingetroffen"), "eingetroff" );
	deepEqual( Stem("eingetürmt"), "eingeturmt" );
	deepEqual( Stem("eingeübt"), "eingeubt" );
	deepEqual( Stem("eingeübten"), "eingeubt" );
	deepEqual( Stem("eingeweide"), "eingeweid" );
	deepEqual( Stem("eingeweiden"), "eingeweid" );
	deepEqual( Stem("eingeweiht"), "eingeweiht" );
	deepEqual( Stem("eingeweihten"), "eingeweiht" );
	deepEqual( Stem("eingewickelte"), "eingewickelt" );
	deepEqual( Stem("eingewirkt"), "eingewirkt" );
	deepEqual( Stem("eingewobene"), "eingewob" );
	deepEqual( Stem("eingeworfene"), "eingeworf" );
	deepEqual( Stem("eingewurzelt"), "eingewurzelt" );
	deepEqual( Stem("eingewurzelte"), "eingewurzelt" );
	deepEqual( Stem("eingezogen"), "eingezog" );
	deepEqual( Stem("eingezogenheit"), "eingezog" );
	deepEqual( Stem("eingezwängt"), "eingezwangt" );
	deepEqual( Stem("eingiessen"), "eingiess" );
	deepEqual( Stem("eingießen"), "eingiess" );
	deepEqual( Stem("eingingen"), "einging" );
	deepEqual( Stem("eingoss"), "eingoss" );
	deepEqual( Stem("eingoß"), "eingoss" );
	deepEqual( Stem("eingossen"), "eingoss" );
	deepEqual( Stem("eingraben"), "eingrab" );
	deepEqual( Stem("eingreifen"), "eingreif" );
	deepEqual( Stem("eingreifens"), "eingreif" );
	deepEqual( Stem("eingriff"), "eingriff" );
	deepEqual( Stem("eingschlafen"), "eingschlaf" );
	deepEqual( Stem("eingsperrt"), "eingsperrt" );
	deepEqual( Stem("eingstanden"), "eingstand" );
	deepEqual( Stem("einhängen"), "einhang" );
	deepEqual( Stem("einhauchen"), "einhauch" );
	deepEqual( Stem("einheimische"), "einheim" );
	deepEqual( Stem("einheimsen"), "einheims" );
	deepEqual( Stem("einheit"), "einheit" );
	deepEqual( Stem("einheiten"), "einheit" );
	deepEqual( Stem("einheitenkillenden"), "einheitenkill" );
	deepEqual( Stem("einhellig"), "einhell" );
	deepEqual( Stem("einher"), "einh" );
	deepEqual( Stem("einherfährt"), "einherfahrt" );
	deepEqual( Stem("einhergejagt"), "einhergejagt" );
	deepEqual( Stem("einherging"), "einherging" );
	deepEqual( Stem("einherkrabbelte"), "einherkrabbelt" );
	deepEqual( Stem("einherliefen"), "einherlief" );
	deepEqual( Stem("einherschritt"), "einherschritt" );
	deepEqual( Stem("einherspringen"), "einherspring" );
	deepEqual( Stem("einhertanzten"), "einhertanzt" );
	deepEqual( Stem("einholen"), "einhol" );
	deepEqual( Stem("einhorn"), "einhorn" );
	deepEqual( Stem("einhundertvierunddreißigmal"), "einhundertvierunddreissigmal" );
	deepEqual( Stem("einhundertzwanzig"), "einhundertzwanz" );
	deepEqual( Stem("eini"), "eini" );
	deepEqual( Stem("einifoahrn"), "einifoahrn" );
	deepEqual( Stem("einig"), "einig" );
	deepEqual( Stem("einige"), "einig" );
	deepEqual( Stem("einigem"), "einig" );
	deepEqual( Stem("einigemal"), "einigemal" );
	deepEqual( Stem("einigen"), "einig" );
	deepEqual( Stem("einiger"), "einig" );
	deepEqual( Stem("einigermassen"), "einigermass" );
	deepEqual( Stem("einigermaßen"), "einigermass" );
	deepEqual( Stem("einiges"), "einig" );
	deepEqual( Stem("einigkeit"), "einig" );
	deepEqual( Stem("einigsprungen"), "einigspr" );
	deepEqual( Stem("einigten"), "einigt" );
	deepEqual( Stem("einikommt"), "einikommt" );
	deepEqual( Stem("einischütten"), "einischutt" );
	deepEqual( Stem("einispringen"), "einispring" );
	deepEqual( Stem("einjagt"), "einjagt" );
	deepEqual( Stem("einjährige"), "einjahr" );
	deepEqual( Stem("einkassierte"), "einkassiert" );
	deepEqual( Stem("einkauf"), "einkauf" );
	deepEqual( Stem("einkäufe"), "einkauf" );
	deepEqual( Stem("einkaufen"), "einkauf" );
	deepEqual( Stem("einkaufszentrum"), "einkaufszentrum" );
	deepEqual( Stem("einkaufszentrumdie"), "einkaufszentrumdi" );
	deepEqual( Stem("einkehr"), "einkehr" );
	deepEqual( Stem("einkehren"), "einkehr" );
	deepEqual( Stem("einkleben"), "einkleb" );
	deepEqual( Stem("einkommen"), "einkomm" );
	deepEqual( Stem("einkommens"), "einkomm" );
	deepEqual( Stem("einkommensunterschiede"), "einkommensunterschied" );
	deepEqual( Stem("einkrümmung"), "einkrumm" );
	deepEqual( Stem("einkünfte"), "einkunft" );
	deepEqual( Stem("einladend"), "einlad" );
	deepEqual( Stem("einladung"), "einlad" );
	deepEqual( Stem("einlassen"), "einlass" );
	deepEqual( Stem("einlässt"), "einlasst" );
	deepEqual( Stem("einläßt"), "einlasst" );
	deepEqual( Stem("einlaufen"), "einlauf" );
	deepEqual( Stem("einlegte"), "einlegt" );
	deepEqual( Stem("einleitenden"), "einleit" );
	deepEqual( Stem("einleitendes"), "einleit" );
	deepEqual( Stem("einleitung"), "einleit" );
	deepEqual( Stem("einlenkte"), "einlenkt" );
	deepEqual( Stem("einleuchten"), "einleucht" );
	deepEqual( Stem("einleuchtend"), "einleucht" );
	deepEqual( Stem("einlud"), "einlud" );
	deepEqual( Stem("einluden"), "einlud" );
	deepEqual( Stem("einmal"), "einmal" );
	deepEqual( Stem("einmalige"), "einmal" );
	deepEqual( Stem("einmaliger"), "einmal" );
	deepEqual( Stem("einmengende"), "einmeng" );
	deepEqual( Stem("einmischt"), "einmischt" );
	deepEqual( Stem("einmischte"), "einmischt" );
	deepEqual( Stem("einnahm"), "einnahm" );
	deepEqual( Stem("einnahmen"), "einnahm" );
	deepEqual( Stem("einnahmenüberschuss"), "einnahmenuberschuss" );
	deepEqual( Stem("einnehme"), "einnehm" );
	deepEqual( Stem("einnehmen"), "einnehm" );
	deepEqual( Stem("einnimmt"), "einnimmt" );
	deepEqual( Stem("einöde"), "einod" );
	deepEqual( Stem("einöden"), "einod" );
	deepEqual( Stem("einpersonenhaushalte"), "einpersonenhaushalt" );
	deepEqual( Stem("einpflanzt"), "einpflanzt" );
	deepEqual( Stem("einpflanzte"), "einpflanzt" );
	deepEqual( Stem("einpflanzung"), "einpflanz" );
	deepEqual( Stem("einpfropfung"), "einpfropf" );
	deepEqual( Stem("einprägte"), "einpragt" );
	deepEqual( Stem("einprägten"), "einpragt" );
	deepEqual( Stem("einquartierungen"), "einquartier" );
	deepEqual( Stem("einräumen"), "einraum" );
	deepEqual( Stem("einräumte"), "einraumt" );
	deepEqual( Stem("einreden"), "einred" );
	deepEqual( Stem("einredet"), "einredet" );
	deepEqual( Stem("einreissen"), "einreiss" );
	deepEqual( Stem("einreisst"), "einreisst" );
	deepEqual( Stem("einrichten"), "einricht" );
	deepEqual( Stem("einrichtet"), "einrichtet" );
	deepEqual( Stem("einrichtung"), "einricht" );
	deepEqual( Stem("einrichtungen"), "einricht" );
	deepEqual( Stem("einrichtungsfanatikern"), "einrichtungsfanat" );
	deepEqual( Stem("einrückte"), "einruckt" );
	deepEqual( Stem("eins"), "ein" );
	deepEqual( Stem("einsah"), "einsah" );
	deepEqual( Stem("einsähe"), "einsah" );
	deepEqual( Stem("einsam"), "einsam" );
	deepEqual( Stem("einsame"), "einsam" );
	deepEqual( Stem("einsamen"), "einsam" );
	deepEqual( Stem("einsames"), "einsam" );
	deepEqual( Stem("einsamkeit"), "einsam" );
	deepEqual( Stem("einsamkeiten"), "einsam" );
	deepEqual( Stem("einsammeln"), "einsammeln" );
	deepEqual( Stem("einsamsten"), "einsam" );
	deepEqual( Stem("einsatz"), "einsatz" );
	deepEqual( Stem("einsatze"), "einsatz" );
	deepEqual( Stem("einsaugt"), "einsaugt" );
	deepEqual( Stem("einschätzung"), "einschatz" );
	deepEqual( Stem("einschenken"), "einschenk" );
	deepEqual( Stem("einschlafen"), "einschlaf" );
	deepEqual( Stem("einschläft"), "einschlaft" );
	deepEqual( Stem("einschlagen"), "einschlag" );
	deepEqual( Stem("einschleichen"), "einschleich" );
	deepEqual( Stem("einschlief"), "einschlief" );
	deepEqual( Stem("einschliefen"), "einschlief" );
	deepEqual( Stem("einschliessen"), "einschliess" );
	deepEqual( Stem("einschließen"), "einschliess" );
	deepEqual( Stem("einschliesst"), "einschliesst" );
	deepEqual( Stem("einschließt"), "einschliesst" );
	deepEqual( Stem("einschlossen"), "einschloss" );
	deepEqual( Stem("einschlug"), "einschlug" );
	deepEqual( Stem("einschmeichelnd"), "einschmeichelnd" );
	deepEqual( Stem("einschmeichelndsten"), "einschmeichelnd" );
	deepEqual( Stem("einschmuggelten"), "einschmuggelt" );
	deepEqual( Stem("einschränke"), "einschrank" );
	deepEqual( Stem("einschränken"), "einschrank" );
	deepEqual( Stem("einschränkende"), "einschrank" );
	deepEqual( Stem("einschränkenden"), "einschrank" );
	deepEqual( Stem("einschränkt"), "einschrankt" );
	deepEqual( Stem("einschränkung"), "einschrank" );
	deepEqual( Stem("einschränkungen"), "einschrank" );
	deepEqual( Stem("einschreiten"), "einschreit" );
	deepEqual( Stem("einsehen"), "einseh" );
	deepEqual( Stem("einseht"), "einseht" );
	deepEqual( Stem("einseitige"), "einseit" );
	deepEqual( Stem("einsetzen"), "einsetz" );
	deepEqual( Stem("einsetzte"), "einsetzt" );
	deepEqual( Stem("einsetzung"), "einsetz" );
	deepEqual( Stem("einsicht"), "einsicht" );
	deepEqual( Stem("einsichten"), "einsicht" );
	deepEqual( Stem("einsichtsfähigkeit"), "einsichtsfah" );
	deepEqual( Stem("einsichtsvoll"), "einsichtsvoll" );
	deepEqual( Stem("einsichtsvolle"), "einsichtsvoll" );
	deepEqual( Stem("einsichtsvollen"), "einsichtsvoll" );
	deepEqual( Stem("einsichtsvolleren"), "einsichtsvoll" );
	deepEqual( Stem("einsiedler"), "einsiedl" );
	deepEqual( Stem("einsieht"), "einsieht" );
	deepEqual( Stem("einsilbig"), "einsilb" );
	deepEqual( Stem("einsilbigen"), "einsilb" );
	deepEqual( Stem("einsilbiger"), "einsilb" );
	deepEqual( Stem("einsilbiges"), "einsilb" );
	deepEqual( Stem("einsinkt"), "einsinkt" );
	deepEqual( Stem("einsmals"), "einsmal" );
	deepEqual( Stem("einsogen"), "einsog" );
	deepEqual( Stem("einspänner"), "einspann" );
	deepEqual( Stem("einsperrte"), "einsperrt" );
	deepEqual( Stem("einsprache"), "einsprach" );
	deepEqual( Stem("einsprechen"), "einsprech" );
	deepEqual( Stem("einst"), "einst" );
	deepEqual( Stem("einsteckte"), "einsteckt" );
	deepEqual( Stem("einstellen"), "einstell" );
	deepEqual( Stem("einstellt"), "einstellt" );
	deepEqual( Stem("einstiges"), "einstig" );
	deepEqual( Stem("einstimmen"), "einstimm" );
	deepEqual( Stem("einstimmig"), "einstimm" );
	deepEqual( Stem("einstimmige"), "einstimm" );
	deepEqual( Stem("einstimmung"), "einstimm" );
	deepEqual( Stem("einstudierten"), "einstudiert" );
	deepEqual( Stem("einstündige"), "einstund" );
	deepEqual( Stem("einstweilen"), "einstweil" );
	deepEqual( Stem("einstweilige"), "einstweil" );
	deepEqual( Stem("eintägigen"), "eintag" );
	deepEqual( Stem("eintauche"), "eintauch" );
	deepEqual( Stem("eintausend"), "eintaus" );
	deepEqual( Stem("einteilen"), "einteil" );
	deepEqual( Stem("einteilenden"), "einteil" );
	deepEqual( Stem("einteilung"), "einteil" );
	deepEqual( Stem("eintönig"), "einton" );
	deepEqual( Stem("eintönigen"), "einton" );
	deepEqual( Stem("eintöniger"), "einton" );
	deepEqual( Stem("eintraccht"), "eintraccht" );
	deepEqual( Stem("eintracht"), "eintracht" );
	deepEqual( Stem("einträchtig"), "eintracht" );
	deepEqual( Stem("einträchtiger"), "eintracht" );
	deepEqual( Stem("eintrafen"), "eintraf" );
	deepEqual( Stem("eintrag"), "eintrag" );
	deepEqual( Stem("eintragt"), "eintragt" );
	deepEqual( Stem("eintrat"), "eintrat" );
	deepEqual( Stem("eintraten"), "eintrat" );
	deepEqual( Stem("eintreffen"), "eintreff" );
	deepEqual( Stem("eintreiben"), "eintreib" );
	deepEqual( Stem("eintrete"), "eintret" );
	deepEqual( Stem("eintreten"), "eintret" );
	deepEqual( Stem("eintretende"), "eintret" );
	deepEqual( Stem("eintretenden"), "eintret" );
	deepEqual( Stem("eintretens"), "eintret" );
	deepEqual( Stem("eintrieb"), "eintrieb" );
	deepEqual( Stem("eintrieben"), "eintrieb" );
	deepEqual( Stem("eintrinken"), "eintrink" );
	deepEqual( Stem("eintritt"), "eintritt" );
	deepEqual( Stem("eintritte"), "eintritt" );
	deepEqual( Stem("eintrittskarte"), "eintrittskart" );
	deepEqual( Stem("einunddreissigsten"), "einunddreiss" );
	deepEqual( Stem("einunddreißigsten"), "einunddreiss" );
	deepEqual( Stem("einundsechzigjährige"), "einundsechzigjahr" );
	deepEqual( Stem("einverleibt"), "einverleibt" );
	deepEqual( Stem("einvernahme"), "einvernahm" );
	deepEqual( Stem("einvernahmen"), "einvernahm" );
	deepEqual( Stem("einverstanden"), "einverstand" );
	deepEqual( Stem("einverständnis"), "einverstandnis" );
	deepEqual( Stem("einwand"), "einwand" );
	deepEqual( Stem("einwände"), "einwand" );
	deepEqual( Stem("einwanderer"), "einwand" );
	deepEqual( Stem("einwanderungsland"), "einwanderungsland" );
	deepEqual( Stem("einwandfrei"), "einwandfrei" );
	deepEqual( Stem("einwandfreien"), "einwandfrei" );
	deepEqual( Stem("einwärts"), "einwart" );
	deepEqual( Stem("einweihen"), "einweih" );
	deepEqual( Stem("einweihung"), "einweih" );
	deepEqual( Stem("einweihungen"), "einweih" );
	deepEqual( Stem("einwende"), "einwend" );
	deepEqual( Stem("einwendung"), "einwend" );
	deepEqual( Stem("einwendungen"), "einwend" );
	deepEqual( Stem("einwickelpapier"), "einwickelpapi" );
	deepEqual( Stem("einwilligung"), "einwill" );
	deepEqual( Stem("einwirken"), "einwirk" );
	deepEqual( Stem("einwirkt"), "einwirkt" );
	deepEqual( Stem("einwirkte"), "einwirkt" );
	deepEqual( Stem("einwirkung"), "einwirk" );
	deepEqual( Stem("einwohner"), "einwohn" );
	deepEqual( Stem("einwohnerin"), "einwohnerin" );
	deepEqual( Stem("einwürfe"), "einwurf" );
	deepEqual( Stem("einwurzelt"), "einwurzelt" );
	deepEqual( Stem("einzahl"), "einzahl" );
	deepEqual( Stem("einzahlen"), "einzahl" );
	deepEqual( Stem("einzelfragen"), "einzelfrag" );
	deepEqual( Stem("einzelheit"), "einzel" );
	deepEqual( Stem("einzelheiten"), "einzel" );
	deepEqual( Stem("einzeln"), "einzeln" );
	deepEqual( Stem("einzelne"), "einzeln" );
	deepEqual( Stem("einzelnen"), "einzeln" );
	deepEqual( Stem("einzelner"), "einzeln" );
	deepEqual( Stem("einzelnes"), "einzeln" );
	deepEqual( Stem("einzelnheiten"), "einzeln" );
	deepEqual( Stem("einzelnste"), "einzeln" );
	deepEqual( Stem("einzelnsten"), "einzeln" );
	deepEqual( Stem("einziehen"), "einzieh" );
	deepEqual( Stem("einzig"), "einzig" );
	deepEqual( Stem("einzige"), "einzig" );
	deepEqual( Stem("einzigem"), "einzig" );
	deepEqual( Stem("einzigen"), "einzig" );
	deepEqual( Stem("einziger"), "einzig" );
	deepEqual( Stem("einziges"), "einzig" );
	deepEqual( Stem("einzog"), "einzog" );
	deepEqual( Stem("einzubalsamieren"), "einzubalsami" );
	deepEqual( Stem("einzubilden"), "einzubild" );
	deepEqual( Stem("einzubohren"), "einzubohr" );
	deepEqual( Stem("einzubürgern"), "einzuburg" );
	deepEqual( Stem("einzudringen"), "einzudring" );
	deepEqual( Stem("einzufinden"), "einzufind" );
	deepEqual( Stem("einzuflössen"), "einzufloss" );
	deepEqual( Stem("einzuflößen"), "einzufloss" );
	deepEqual( Stem("einzuführen"), "einzufuhr" );
	deepEqual( Stem("einzug"), "einzug" );
	deepEqual( Stem("einzugehen"), "einzugeh" );
	deepEqual( Stem("einzugehn"), "einzugehn" );
	deepEqual( Stem("einzuges"), "einzug" );
	deepEqual( Stem("einzugestehen"), "einzugesteh" );
	deepEqual( Stem("einzugreifen"), "einzugreif" );
	deepEqual( Stem("einzuhängen"), "einzuhang" );
	deepEqual( Stem("einzuholen"), "einzuhol" );
	deepEqual( Stem("einzuknöpfen"), "einzuknopf" );
	deepEqual( Stem("einzulassen"), "einzulass" );
	deepEqual( Stem("einzuräumen"), "einzuraum" );
	deepEqual( Stem("einzureichen"), "einzureich" );
	deepEqual( Stem("einzureiten"), "einzureit" );
	deepEqual( Stem("einzuschlagen"), "einzuschlag" );
	deepEqual( Stem("einzuschüchtern"), "einzuschucht" );
	deepEqual( Stem("einzusehen"), "einzuseh" );
	deepEqual( Stem("einzusperren"), "einzusperr" );
	deepEqual( Stem("einzustehen"), "einzusteh" );
	deepEqual( Stem("einzutreffen"), "einzutreff" );
	deepEqual( Stem("einzutreten"), "einzutret" );
	deepEqual( Stem("einzuwenden"), "einzuw" );
	deepEqual( Stem("einzuwerfen"), "einzuwerf" );
	deepEqual( Stem("einzuwirken"), "einzuwirk" );
	deepEqual( Stem("einzuwühlen"), "einzuwuhl" );
	deepEqual( Stem("einzuziehen"), "einzuzieh" );
	deepEqual( Stem("eis"), "eis" );
	deepEqual( Stem("eisbärenmässig"), "eisbarenmass" );
	deepEqual( Stem("eisblumensträusschen"), "eisblumenstraussch" );
	deepEqual( Stem("eisekalt"), "eisekalt" );
	deepEqual( Stem("eisen"), "eis" );
	deepEqual( Stem("eisenbahn"), "eisenbahn" );
	deepEqual( Stem("eisenbahnkönige"), "eisenbahnkon" );
	deepEqual( Stem("eisengeschienten"), "eisengeschient" );
	deepEqual( Stem("eisenhaken"), "eisenhak" );
	deepEqual( Stem("eisenhut"), "eisenhut" );
	deepEqual( Stem("eisenketten"), "eisenkett" );
	deepEqual( Stem("eisenkörben"), "eisenkorb" );
	deepEqual( Stem("eisens"), "eis" );
	deepEqual( Stem("eisenschimmel"), "eisenschimmel" );
	deepEqual( Stem("eisenstange"), "eisenstang" );
	deepEqual( Stem("eisenwerk"), "eisenwerk" );
	deepEqual( Stem("eiserne"), "eisern" );
	deepEqual( Stem("eiserner"), "eisern" );
	deepEqual( Stem("eisgeschwister"), "eisgeschwist" );
	deepEqual( Stem("eisgeschwistern"), "eisgeschwist" );
	deepEqual( Stem("eisgraue"), "eisgrau" );
	deepEqual( Stem("eisgrauer"), "eisgrau" );
	deepEqual( Stem("eisig"), "eisig" );
	deepEqual( Stem("eiskalten"), "eiskalt" );
	deepEqual( Stem("eiskalter"), "eiskalt" );
	deepEqual( Stem("eiskristallen"), "eiskristall" );
	deepEqual( Stem("eismax"), "eismax" );
	deepEqual( Stem("eisschloss"), "eisschloss" );
	deepEqual( Stem("eitel"), "eitel" );
	deepEqual( Stem("eitelkeit"), "eitel" );
	deepEqual( Stem("eitelkeiten"), "eitel" );
	deepEqual( Stem("eiteln"), "eiteln" );
	deepEqual( Stem("eitle"), "eitl" );
	deepEqual( Stem("eitlen"), "eitl" );
	deepEqual( Stem("eitler"), "eitl" );
	deepEqual( Stem("eitles"), "eitl" );
	deepEqual( Stem("eitrig"), "eitrig" );
	deepEqual( Stem("ekd"), "ekd" );
	deepEqual( Stem("ekelhafter"), "ekelhaft" );
	deepEqual( Stem("ekeln"), "ekeln" );
	deepEqual( Stem("ekels"), "ekel" );
	deepEqual( Stem("ekelte"), "ekelt" );
	deepEqual( Stem("ekkehard"), "ekkehard" );
	deepEqual( Stem("elastisch"), "elast" );
	deepEqual( Stem("elastisches"), "elast" );
	deepEqual( Stem("elater"), "elat" );
	deepEqual( Stem("eleasar"), "eleasar" );
	deepEqual( Stem("elefant"), "elefant" );
	deepEqual( Stem("elefanten"), "elefant" );
	deepEqual( Stem("elefantenzähnen"), "elefantenzahn" );
	deepEqual( Stem("elegant"), "elegant" );
	deepEqual( Stem("elegante"), "elegant" );
	deepEqual( Stem("elegantem"), "elegant" );
	deepEqual( Stem("eleganten"), "elegant" );
	deepEqual( Stem("elektrische"), "elektr" );
	deepEqual( Stem("elektrischen"), "elektr" );
	deepEqual( Stem("elektrizität"), "elektrizitat" );
	deepEqual( Stem("element"), "element" );
	deepEqual( Stem("elementarbegriffe"), "elementarbegriff" );
	deepEqual( Stem("elementare"), "elementar" );
	deepEqual( Stem("elementarfeuer"), "elementarfeu" );
	deepEqual( Stem("elementarlehre"), "elementarlehr" );
	deepEqual( Stem("elemente"), "element" );
	deepEqual( Stem("elements"), "element" );
	deepEqual( Stem("elenchis"), "elenchis" );
	deepEqual( Stem("elend"), "elend" );
	deepEqual( Stem("elende"), "elend" );
	deepEqual( Stem("elenden"), "elend" );
	deepEqual( Stem("elender"), "elend" );
	deepEqual( Stem("elenderfüllten"), "elenderfullt" );
	deepEqual( Stem("elendern"), "elend" );
	deepEqual( Stem("elendes"), "elend" );
	deepEqual( Stem("elendiglich"), "elendig" );
	deepEqual( Stem("elends"), "elend" );
	deepEqual( Stem("elf"), "elf" );
	deepEqual( Stem("elfenbein"), "elfenbein" );
	deepEqual( Stem("elfenbeinfarbenen"), "elfenbeinfarb" );
	deepEqual( Stem("elfjährigen"), "elfjahr" );
	deepEqual( Stem("elften"), "elft" );
	deepEqual( Stem("elias"), "elias" );
	deepEqual( Stem("elisa"), "elisa" );
	deepEqual( Stem("elisabeth"), "elisabeth" );
	deepEqual( Stem("elisabethen"), "elisabeth" );
	deepEqual( Stem("elisabethenkrankenhaus"), "elisabethenkrankenhaus" );
	deepEqual( Stem("eliseba"), "eliseba" );
	deepEqual( Stem("elkanah"), "elkanah" );
	deepEqual( Stem("ellbög"), "ellbog" );
	deepEqual( Stem("ellbogen"), "ellbog" );
	deepEqual( Stem("elle"), "ell" );
	deepEqual( Stem("ellen"), "ell" );
	deepEqual( Stem("ellenbogen"), "ellenbog" );
	deepEqual( Stem("elmsfeuerchen"), "elmsfeuerch" );
	deepEqual( Stem("elohim"), "elohim" );
	deepEqual( Stem("eltern"), "elt" );
	deepEqual( Stem("elternhauses"), "elternhaus" );
	deepEqual( Stem("elternpaar"), "elternpaar" );
	deepEqual( Stem("elzaphan"), "elzaphan" );
	deepEqual( Stem("emanuel"), "emanuel" );
	deepEqual( Stem("emanuela"), "emanuela" );
	deepEqual( Stem("emes"), "emes" );
	deepEqual( Stem("emigranten"), "emigrant" );
	deepEqual( Stem("emigrierten"), "emigriert" );
	deepEqual( Stem("emim"), "emim" );
	deepEqual( Stem("emin"), "emin" );
	deepEqual( Stem("eminenten"), "eminent" );
	deepEqual( Stem("eminonü"), "eminonu" );
	deepEqual( Stem("emmeline"), "emmelin" );
	deepEqual( Stem("empfahl"), "empfahl" );
	deepEqual( Stem("empfand"), "empfand" );
	deepEqual( Stem("empfanden"), "empfand" );
	deepEqual( Stem("empfänden"), "empfand" );
	deepEqual( Stem("empfang"), "empfang" );
	deepEqual( Stem("empfangen"), "empfang" );
	deepEqual( Stem("empfangene"), "empfang" );
	deepEqual( Stem("empfangenen"), "empfang" );
	deepEqual( Stem("empfänglichkeit"), "empfang" );
	deepEqual( Stem("empfängnis"), "empfangnis" );
	deepEqual( Stem("empfängnisse"), "empfangnis" );
	deepEqual( Stem("empfangszimmer"), "empfangszimm" );
	deepEqual( Stem("empfängt"), "empfangt" );
	deepEqual( Stem("empfehlen"), "empfehl" );
	deepEqual( Stem("empfehlende"), "empfehl" );
	deepEqual( Stem("empfehlung"), "empfehl" );
	deepEqual( Stem("empfiehlt"), "empfiehlt" );
	deepEqual( Stem("empfinde"), "empfind" );
	deepEqual( Stem("empfinden"), "empfind" );
	deepEqual( Stem("empfindenden"), "empfind" );
	deepEqual( Stem("empfindet"), "empfindet" );
	deepEqual( Stem("empfindlich"), "empfind" );
	deepEqual( Stem("empfindliches"), "empfind" );
	deepEqual( Stem("empfindsamen"), "empfindsam" );
	deepEqual( Stem("empfindsamkeit"), "empfindsam" );
	deepEqual( Stem("empfindung"), "empfind" );
	deepEqual( Stem("empfindungen"), "empfind" );
	deepEqual( Stem("empfindungszustand"), "empfindungszustand" );
	deepEqual( Stem("empfing"), "empfing" );
	deepEqual( Stem("empfingen"), "empfing" );
	deepEqual( Stem("empfmg"), "empfmg" );
	deepEqual( Stem("empfohlen"), "empfohl" );
	deepEqual( Stem("empfunden"), "empfund" );
	deepEqual( Stem("emphatisch"), "emphat" );
	deepEqual( Stem("empirisch"), "empir" );
	deepEqual( Stem("empirische"), "empir" );
	deepEqual( Stem("empirischen"), "empir" );
	deepEqual( Stem("empirischer"), "empir" );
	deepEqual( Stem("empirisches"), "empir" );
	deepEqual( Stem("empirismus"), "empirismus" );
	deepEqual( Stem("empor"), "empor" );
	deepEqual( Stem("empörend"), "empor" );
	deepEqual( Stem("empörender"), "empor" );
	deepEqual( Stem("emporgehoben"), "emporgehob" );
	deepEqual( Stem("emporgeschossene"), "emporgeschoss" );
	deepEqual( Stem("emporgestiegen"), "emporgestieg" );
	deepEqual( Stem("emporhebt"), "emporhebt" );
	deepEqual( Stem("emporhob"), "emporhob" );
	deepEqual( Stem("emporkommen"), "emporkomm" );
	deepEqual( Stem("emporkömmlinge"), "emporkommling" );
	deepEqual( Stem("emporragte"), "emporragt" );
	deepEqual( Stem("emporragten"), "emporragt" );
	deepEqual( Stem("emporschwangen"), "emporschwang" );
	deepEqual( Stem("emporschwimmt"), "emporschwimmt" );
	deepEqual( Stem("emporstarren"), "emporstarr" );
	deepEqual( Stem("empört"), "emport" );
	deepEqual( Stem("emportauchen"), "emportauch" );
	deepEqual( Stem("empörter"), "emport" );
	deepEqual( Stem("emportürmte"), "emporturmt" );
	deepEqual( Stem("emporzuheben"), "emporzuheb" );
	deepEqual( Stem("emporzutragen"), "emporzutrag" );
	deepEqual( Stem("emsig"), "emsig" );
	deepEqual( Stem("emsigkeit"), "emsig" );
	deepEqual( Stem("emsigsten"), "emsig" );
	deepEqual( Stem("en"), "en" );
	deepEqual( Stem("enakim"), "enakim" );
	deepEqual( Stem("enaks"), "enak" );
	deepEqual( Stem("end"), "end" );
	deepEqual( Stem("endchen"), "endch" );
	deepEqual( Stem("ende"), "end" );
	deepEqual( Stem("enden"), "end" );
	deepEqual( Stem("endete"), "endet" );
	deepEqual( Stem("endgültig"), "endgult" );
	deepEqual( Stem("endgültige"), "endgult" );
	deepEqual( Stem("endgültigen"), "endgult" );
	deepEqual( Stem("endigen"), "endig" );
	deepEqual( Stem("endigt"), "endigt" );
	deepEqual( Stem("endigte"), "endigt" );
	deepEqual( Stem("endlich"), "endlich" );
	deepEqual( Stem("endliche"), "endlich" );
	deepEqual( Stem("endlichen"), "endlich" );
	deepEqual( Stem("endlicher"), "endlich" );
	deepEqual( Stem("endliches"), "endlich" );
	deepEqual( Stem("endlichkeit"), "endlich" );
	deepEqual( Stem("endlos"), "endlos" );
	deepEqual( Stem("endlosen"), "endlos" );
	deepEqual( Stem("endoxa"), "endoxa" );
	deepEqual( Stem("endpunkt"), "endpunkt" );
	deepEqual( Stem("endpunkte"), "endpunkt" );
	deepEqual( Stem("endstücke"), "endstuck" );
	deepEqual( Stem("endzweck"), "endzweck" );
	deepEqual( Stem("enen"), "enen" );
	deepEqual( Stem("energie"), "energi" );
	deepEqual( Stem("energisch"), "energ" );
	deepEqual( Stem("energischer"), "energ" );
	deepEqual( Stem("energisches"), "energ" );
	deepEqual( Stem("eng"), "eng" );
	deepEqual( Stem("engadiner"), "engadin" );
	deepEqual( Stem("engagement"), "engagement" );
	deepEqual( Stem("engagieren"), "engagi" );
	deepEqual( Stem("engagiert"), "engagiert" );
	deepEqual( Stem("engagierte"), "engagiert" );
	deepEqual( Stem("engagierter"), "engagiert" );
	deepEqual( Stem("enge"), "eng" );
	deepEqual( Stem("engedi"), "engedi" );
	deepEqual( Stem("engel"), "engel" );
	deepEqual( Stem("engelartig"), "engelart" );
	deepEqual( Stem("engelchören"), "engelchor" );
	deepEqual( Stem("engelgeister"), "engelgeist" );
	deepEqual( Stem("engelgeistes"), "engelgeist" );
	deepEqual( Stem("engelische"), "engel" );
	deepEqual( Stem("engelischen"), "engel" );
	deepEqual( Stem("engelland"), "engelland" );
	deepEqual( Stem("engeln"), "engeln" );
	deepEqual( Stem("engels"), "engel" );
	deepEqual( Stem("engelscharen"), "engelschar" );
	deepEqual( Stem("engelsgeistern"), "engelsgeist" );
	deepEqual( Stem("engelshimmel"), "engelshimmel" );
	deepEqual( Stem("engelsrede"), "engelsred" );
	deepEqual( Stem("engelstimmchen"), "engelstimmch" );
	deepEqual( Stem("engelswesen"), "engelswes" );
	deepEqual( Stem("engen"), "eng" );
	deepEqual( Stem("enger"), "eng" );
	deepEqual( Stem("engere"), "eng" );
	deepEqual( Stem("engeren"), "eng" );
	deepEqual( Stem("engerer"), "eng" );
	deepEqual( Stem("england"), "england" );
	deepEqual( Stem("engländer"), "england" );
	deepEqual( Stem("engländern"), "england" );
	deepEqual( Stem("englisch"), "englisch" );
	deepEqual( Stem("englische"), "englisch" );
	deepEqual( Stem("englischen"), "englisch" );
	deepEqual( Stem("englischer"), "englisch" );
	deepEqual( Stem("englisches"), "englisch" );
	deepEqual( Stem("englischlehrerin"), "englischlehrerin" );
	deepEqual( Stem("englischsprachige"), "englischsprach" );
	deepEqual( Stem("englischsprachigen"), "englischsprach" );
	deepEqual( Stem("english"), "english" );
	deepEqual( Stem("engschlucht"), "engschlucht" );
	deepEqual( Stem("engste"), "engst" );
	deepEqual( Stem("engsten"), "engst" );
	deepEqual( Stem("engtälern"), "engtal" );
	deepEqual( Stem("enim"), "enim" );
	deepEqual( Stem("enk"), "enk" );
	deepEqual( Stem("enkel"), "enkel" );
	deepEqual( Stem("enkelin"), "enkelin" );
	deepEqual( Stem("enosch"), "enosch" );
	deepEqual( Stem("enoschs"), "enosch" );
	deepEqual( Stem("ent"), "ent" );
	deepEqual( Stem("entartung"), "entart" );
	deepEqual( Stem("entbehren"), "entbehr" );
	deepEqual( Stem("entbehrlich"), "entbehr" );
	deepEqual( Stem("entbehrt"), "entbehrt" );
	deepEqual( Stem("entbehrte"), "entbehrt" );
	deepEqual( Stem("entbehrung"), "entbehr" );
	deepEqual( Stem("entblösst"), "entblosst" );
	deepEqual( Stem("entblößt"), "entblosst" );
	deepEqual( Stem("entbrannt"), "entbrannt" );
	deepEqual( Stem("entbrannte"), "entbrannt" );
	deepEqual( Stem("entbrannten"), "entbrannt" );
	deepEqual( Stem("entbrennen"), "entbrenn" );
	deepEqual( Stem("entdecken"), "entdeck" );
	deepEqual( Stem("entdecker"), "entdeck" );
	deepEqual( Stem("entdeckt"), "entdeckt" );
	deepEqual( Stem("entdeckte"), "entdeckt" );
	deepEqual( Stem("entdeckten"), "entdeckt" );
	deepEqual( Stem("entdeckung"), "entdeck" );
	deepEqual( Stem("entehrt"), "entehrt" );
	deepEqual( Stem("enten"), "ent" );
	deepEqual( Stem("entenadler"), "entenadl" );
	deepEqual( Stem("entenfüssen"), "entenfuss" );
	deepEqual( Stem("enterben"), "enterb" );
	deepEqual( Stem("entfallen"), "entfall" );
	deepEqual( Stem("entfalten"), "entfalt" );
	deepEqual( Stem("entfaltet"), "entfaltet" );
	deepEqual( Stem("entfaltete"), "entfaltet" );
	deepEqual( Stem("entfärbt"), "entfarbt" );
	deepEqual( Stem("entferne"), "entfern" );
	deepEqual( Stem("entfernen"), "entfern" );
	deepEqual( Stem("entfernet"), "entfernet" );
	deepEqual( Stem("entfernst"), "entfern" );
	deepEqual( Stem("entfernt"), "entfernt" );
	deepEqual( Stem("entfernte"), "entfernt" );
	deepEqual( Stem("entfernten"), "entfernt" );
	deepEqual( Stem("entfernter"), "entfernt" );
	deepEqual( Stem("entfernteres"), "entfernt" );
	deepEqual( Stem("entferntesten"), "entfernt" );
	deepEqual( Stem("entferntwerden"), "entferntwerd" );
	deepEqual( Stem("entfernung"), "entfern" );
	deepEqual( Stem("entfernungen"), "entfern" );
	deepEqual( Stem("entfessle"), "entfessl" );
	deepEqual( Stem("entfeßle"), "entfessl" );
	deepEqual( Stem("entflammen"), "entflamm" );
	deepEqual( Stem("entfliehen"), "entflieh" );
	deepEqual( Stem("entfloh"), "entfloh" );
	deepEqual( Stem("entflohen"), "entfloh" );
	deepEqual( Stem("entflohene"), "entfloh" );
	deepEqual( Stem("entflohenen"), "entfloh" );
	deepEqual( Stem("entfremdet"), "entfremdet" );
	deepEqual( Stem("entfremdete"), "entfremdet" );
	deepEqual( Stem("entfremdetem"), "entfremdet" );
	deepEqual( Stem("entfremdeten"), "entfremdet" );
	deepEqual( Stem("entfremdung"), "entfremd" );
	deepEqual( Stem("entführten"), "entfuhrt" );
	deepEqual( Stem("entgangen"), "entgang" );
	deepEqual( Stem("entgegen"), "entgeg" );
	deepEqual( Stem("entgegenarbeiten"), "entgegenarbeit" );
	deepEqual( Stem("entgegenbringen"), "entgegenbring" );
	deepEqual( Stem("entgegeneilen"), "entgegeneil" );
	deepEqual( Stem("entgegenflossen"), "entgegenfloss" );
	deepEqual( Stem("entgegengefahren"), "entgegengefahr" );
	deepEqual( Stem("entgegengehen"), "entgegengeh" );
	deepEqual( Stem("entgegengekehrt"), "entgegengekehrt" );
	deepEqual( Stem("entgegengesetzt"), "entgegengesetzt" );
	deepEqual( Stem("entgegengesetzte"), "entgegengesetzt" );
	deepEqual( Stem("entgegengesetzten"), "entgegengesetzt" );
	deepEqual( Stem("entgegengesetzter"), "entgegengesetzt" );
	deepEqual( Stem("entgegengesetztes"), "entgegengesetzt" );
	deepEqual( Stem("entgegengetreten"), "entgegengetret" );
	deepEqual( Stem("entgegenhandle"), "entgegenhandl" );
	deepEqual( Stem("entgegenhielt"), "entgegenhielt" );
	deepEqual( Stem("entgegenkam"), "entgegenkam" );
	deepEqual( Stem("entgegenkommen"), "entgegenkomm" );
	deepEqual( Stem("entgegenkommende"), "entgegenkomm" );
	deepEqual( Stem("entgegennehmen"), "entgegennehm" );
	deepEqual( Stem("entgegensetzen"), "entgegensetz" );
	deepEqual( Stem("entgegensetzt"), "entgegensetzt" );
	deepEqual( Stem("entgegensetzung"), "entgegensetz" );
	deepEqual( Stem("entgegenstehende"), "entgegensteh" );
	deepEqual( Stem("entgegensteht"), "entgegensteht" );
	deepEqual( Stem("entgegenstellen"), "entgegenstell" );
	deepEqual( Stem("entgegenstellte"), "entgegenstellt" );
	deepEqual( Stem("entgegenstreckte"), "entgegenstreckt" );
	deepEqual( Stem("entgegenstrich"), "entgegenstrich" );
	deepEqual( Stem("entgegentrat"), "entgegentrat" );
	deepEqual( Stem("entgegenwandernd"), "entgegenwandernd" );
	deepEqual( Stem("entgegenzusehen"), "entgegenzuseh" );
	deepEqual( Stem("entgegnete"), "entgegnet" );
	deepEqual( Stem("entgehe"), "entgeh" );
	deepEqual( Stem("entgehen"), "entgeh" );
	deepEqual( Stem("entgeht"), "entgeht" );
	deepEqual( Stem("entgeld"), "entgeld" );
	deepEqual( Stem("entging"), "entging" );
	deepEqual( Stem("entgleiten"), "entgleit" );
	deepEqual( Stem("enthält"), "enthalt" );
	deepEqual( Stem("enthalte"), "enthalt" );
	deepEqual( Stem("enthalten"), "enthalt" );
	deepEqual( Stem("enthaltende"), "enthalt" );
	deepEqual( Stem("enthaltenden"), "enthalt" );
	deepEqual( Stem("enthaltene"), "enthalt" );
	deepEqual( Stem("enthaltsam"), "enthaltsam" );
	deepEqual( Stem("enthaltsamkeit"), "enthaltsam" );
	deepEqual( Stem("entheiligt"), "entheiligt" );
	deepEqual( Stem("entheiligung"), "entheil" );
	deepEqual( Stem("entheiligungen"), "entheil" );
	deepEqual( Stem("enthielt"), "enthielt" );
	deepEqual( Stem("enthielte"), "enthielt" );
	deepEqual( Stem("enthielten"), "enthielt" );
	deepEqual( Stem("enthoben"), "enthob" );
	deepEqual( Stem("enthüllen"), "enthull" );
	deepEqual( Stem("enthüllt"), "enthullt" );
	deepEqual( Stem("enthusiasmus"), "enthusiasmus" );
	deepEqual( Stem("enthusiasten"), "enthusiast" );
	deepEqual( Stem("entkam"), "entkam" );
	deepEqual( Stem("entkleidet"), "entkleidet" );
	deepEqual( Stem("entkleidete"), "entkleidet" );
	deepEqual( Stem("entkleideten"), "entkleidet" );
	deepEqual( Stem("entkommen"), "entkomm" );
	deepEqual( Stem("entkommene"), "entkomm" );
	deepEqual( Stem("entkorkten"), "entkorkt" );
	deepEqual( Stem("entkräften"), "entkraft" );
	deepEqual( Stem("entkräfteter"), "entkraftet" );
	deepEqual( Stem("entlang"), "entlang" );
	deepEqual( Stem("entlanggerast"), "entlanggerast" );
	deepEqual( Stem("entlass"), "entlass" );
	deepEqual( Stem("entlaß"), "entlass" );
	deepEqual( Stem("entlasse"), "entlass" );
	deepEqual( Stem("entlassen"), "entlass" );
	deepEqual( Stem("entlässest"), "entlass" );
	deepEqual( Stem("entlässet"), "entlasset" );
	deepEqual( Stem("entlässt"), "entlasst" );
	deepEqual( Stem("entläßt"), "entlasst" );
	deepEqual( Stem("entlassung"), "entlass" );
	deepEqual( Stem("entlassungen"), "entlass" );
	deepEqual( Stem("entlastet"), "entlastet" );
	deepEqual( Stem("entlastetder"), "entlastetd" );
	deepEqual( Stem("entledigen"), "entled" );
	deepEqual( Stem("entledigt"), "entledigt" );
	deepEqual( Stem("entledigung"), "entled" );
	deepEqual( Stem("entleeren"), "entle" );
	deepEqual( Stem("entleerte"), "entleert" );
	deepEqual( Stem("entleerten"), "entleert" );
	deepEqual( Stem("entlegene"), "entleg" );
	deepEqual( Stem("entlegenen"), "entleg" );
	deepEqual( Stem("entlegenste"), "entlegen" );
	deepEqual( Stem("entlehnen"), "entlehn" );
	deepEqual( Stem("entlehnten"), "entlehnt" );
	deepEqual( Stem("entliess"), "entliess" );
	deepEqual( Stem("entließ"), "entliess" );
	deepEqual( Stem("entliessen"), "entliess" );
	deepEqual( Stem("entlocken"), "entlock" );
	deepEqual( Stem("entlockte"), "entlockt" );
	deepEqual( Stem("entlohnen"), "entlohn" );
	deepEqual( Stem("entnahm"), "entnahm" );
	deepEqual( Stem("entnehmen"), "entnehm" );
	deepEqual( Stem("entnommen"), "entnomm" );
	deepEqual( Stem("entpuppte"), "entpuppt" );
	deepEqual( Stem("entränne"), "entrann" );
	deepEqual( Stem("entreissen"), "entreiss" );
	deepEqual( Stem("entreißen"), "entreiss" );
	deepEqual( Stem("entrinnen"), "entrinn" );
	deepEqual( Stem("entriss"), "entriss" );
	deepEqual( Stem("entrissen"), "entriss" );
	deepEqual( Stem("entronnenen"), "entronn" );
	deepEqual( Stem("entrüstet"), "entrustet" );
	deepEqual( Stem("entrüstung"), "entrust" );
	deepEqual( Stem("entsage"), "entsag" );
	deepEqual( Stem("entsagen"), "entsag" );
	deepEqual( Stem("entsagens"), "entsag" );
	deepEqual( Stem("entsagung"), "entsag" );
	deepEqual( Stem("entsagungsfähigkeit"), "entsagungsfah" );
	deepEqual( Stem("entsandet"), "entsandet" );
	deepEqual( Stem("entschädigen"), "entschad" );
	deepEqual( Stem("entschädigung"), "entschad" );
	deepEqual( Stem("entscheiden"), "entscheid" );
	deepEqual( Stem("entscheidend"), "entscheid" );
	deepEqual( Stem("entscheidende"), "entscheid" );
	deepEqual( Stem("entscheidenden"), "entscheid" );
	deepEqual( Stem("entscheidender"), "entscheid" );
	deepEqual( Stem("entscheidendes"), "entscheid" );
	deepEqual( Stem("entscheidet"), "entscheidet" );
	deepEqual( Stem("entscheidung"), "entscheid" );
	deepEqual( Stem("entscheidungen"), "entscheid" );
	deepEqual( Stem("entscheidungsgrund"), "entscheidungsgrund" );
	deepEqual( Stem("entscheidungskampf"), "entscheidungskampf" );
	deepEqual( Stem("entschiede"), "entschied" );
	deepEqual( Stem("entschieden"), "entschied" );
	deepEqual( Stem("entschiedene"), "entschied" );
	deepEqual( Stem("entschiedenen"), "entschied" );
	deepEqual( Stem("entschiedenheit"), "entschied" );
	deepEqual( Stem("entschlafen"), "entschlaf" );
	deepEqual( Stem("entschlief"), "entschlief" );
	deepEqual( Stem("entschliessen"), "entschliess" );
	deepEqual( Stem("entschliessung"), "entschliess" );
	deepEqual( Stem("entschließung"), "entschliess" );
	deepEqual( Stem("entschliessungen"), "entschliess" );
	deepEqual( Stem("entschloss"), "entschloss" );
	deepEqual( Stem("entschloß"), "entschloss" );
	deepEqual( Stem("entschlossen"), "entschloss" );
	deepEqual( Stem("entschlossene"), "entschloss" );
	deepEqual( Stem("entschlossenen"), "entschloss" );
	deepEqual( Stem("entschlossener"), "entschloss" );
	deepEqual( Stem("entschlossenes"), "entschloss" );
	deepEqual( Stem("entschlossenheit"), "entschloss" );
	deepEqual( Stem("entschlüpfe"), "entschlupf" );
	deepEqual( Stem("entschlüpfen"), "entschlupf" );
	deepEqual( Stem("entschluss"), "entschluss" );
	deepEqual( Stem("entschluß"), "entschluss" );
	deepEqual( Stem("entschlusse"), "entschluss" );
	deepEqual( Stem("entschuldige"), "entschuld" );
	deepEqual( Stem("entschuldigen"), "entschuld" );
	deepEqual( Stem("entschuldigende"), "entschuld" );
	deepEqual( Stem("entschuldigt"), "entschuldigt" );
	deepEqual( Stem("entschuldigung"), "entschuld" );
	deepEqual( Stem("entschwand"), "entschwand" );
	deepEqual( Stem("entschwebte"), "entschwebt" );
	deepEqual( Stem("entschwindet"), "entschwindet" );
	deepEqual( Stem("entschwunden"), "entschwund" );
	deepEqual( Stem("entseelt"), "entseelt" );
	deepEqual( Stem("entsetzen"), "entsetz" );
	deepEqual( Stem("entsetzlich"), "entsetz" );
	deepEqual( Stem("entsetzliche"), "entsetz" );
	deepEqual( Stem("entsetzlichen"), "entsetz" );
	deepEqual( Stem("entsetzliches"), "entsetz" );
	deepEqual( Stem("entsetzt"), "entsetzt" );
	deepEqual( Stem("entsinne"), "entsinn" );
	deepEqual( Stem("entsinnen"), "entsinn" );
	deepEqual( Stem("entsinnst"), "entsinn" );
	deepEqual( Stem("entsittlichung"), "entsittlich" );
	deepEqual( Stem("entspann"), "entspann" );
	deepEqual( Stem("entspannt"), "entspannt" );
	deepEqual( Stem("entsprach"), "entsprach" );
	deepEqual( Stem("entspränge"), "entsprang" );
	deepEqual( Stem("entsprangen"), "entsprang" );
	deepEqual( Stem("entspreche"), "entsprech" );
	deepEqual( Stem("entsprechen"), "entsprech" );
	deepEqual( Stem("entsprechend"), "entsprech" );
	deepEqual( Stem("entsprechende"), "entsprech" );
	deepEqual( Stem("entsprechenden"), "entsprech" );
	deepEqual( Stem("entsprechender"), "entsprech" );
	deepEqual( Stem("entsprechendes"), "entsprech" );
	deepEqual( Stem("entsprechung"), "entsprech" );
	deepEqual( Stem("entsprechungen"), "entsprech" );
	deepEqual( Stem("entsprechungsverhältnis"), "entsprechungsverhaltnis" );
	deepEqual( Stem("entspricht"), "entspricht" );
	deepEqual( Stem("entspringe"), "entspring" );
	deepEqual( Stem("entspringen"), "entspring" );
	deepEqual( Stem("entspringend"), "entspring" );
	deepEqual( Stem("entspringt"), "entspringt" );
	deepEqual( Stem("entsprungen"), "entsprung" );
	deepEqual( Stem("entstand"), "entstand" );
	deepEqual( Stem("entstände"), "entstand" );
	deepEqual( Stem("entstanden"), "entstand" );
	deepEqual( Stem("entstehe"), "entsteh" );
	deepEqual( Stem("entstehen"), "entsteh" );
	deepEqual( Stem("entstehende"), "entsteh" );
	deepEqual( Stem("entstehens"), "entsteh" );
	deepEqual( Stem("entstehn"), "entstehn" );
	deepEqual( Stem("entsteht"), "entsteht" );
	deepEqual( Stem("entstehung"), "entsteh" );
	deepEqual( Stem("entstehungsursache"), "entstehungsursach" );
	deepEqual( Stem("entstehungsursachen"), "entstehungsursach" );
	deepEqual( Stem("entströmen"), "entstrom" );
	deepEqual( Stem("entströmten"), "entstromt" );
	deepEqual( Stem("entsündigen"), "entsund" );
	deepEqual( Stem("entsündigung"), "entsund" );
	deepEqual( Stem("enttäuschend"), "enttausch" );
	deepEqual( Stem("enttäuschung"), "enttausch" );
	deepEqual( Stem("enttäuschungen"), "enttausch" );
	deepEqual( Stem("entvölkerte"), "entvolkert" );
	deepEqual( Stem("entwaffnet"), "entwaffnet" );
	deepEqual( Stem("entwand"), "entwand" );
	deepEqual( Stem("entwarf"), "entwarf" );
	deepEqual( Stem("entweder"), "entwed" );
	deepEqual( Stem("entweicht"), "entweicht" );
	deepEqual( Stem("entweihe"), "entweih" );
	deepEqual( Stem("entweihen"), "entweih" );
	deepEqual( Stem("entweiher"), "entweih" );
	deepEqual( Stem("entweihern"), "entweih" );
	deepEqual( Stem("entweiht"), "entweiht" );
	deepEqual( Stem("entweihte"), "entweiht" );
	deepEqual( Stem("entweihten"), "entweiht" );
	deepEqual( Stem("entweihtes"), "entweiht" );
	deepEqual( Stem("entweihung"), "entweih" );
	deepEqual( Stem("entweihungen"), "entweih" );
	deepEqual( Stem("entwendet"), "entwendet" );
	deepEqual( Stem("entwendete"), "entwendet" );
	deepEqual( Stem("entwerfen"), "entwerf" );
	deepEqual( Stem("entwich"), "entwich" );
	deepEqual( Stem("entwichen"), "entwich" );
	deepEqual( Stem("entwichene"), "entwich" );
	deepEqual( Stem("entwichenen"), "entwich" );
	deepEqual( Stem("entwickeln"), "entwickeln" );
	deepEqual( Stem("entwickelt"), "entwickelt" );
	deepEqual( Stem("entwickelte"), "entwickelt" );
	deepEqual( Stem("entwickelten"), "entwickelt" );
	deepEqual( Stem("entwickelung"), "entwickel" );
	deepEqual( Stem("entwicklung"), "entwickl" );
	deepEqual( Stem("entwicklungen"), "entwickl" );
	deepEqual( Stem("entwicklungsstufe"), "entwicklungsstuf" );
	deepEqual( Stem("entwinden"), "entwind" );
	deepEqual( Stem("entwirft"), "entwirft" );
	deepEqual( Stem("entwischen"), "entwisch" );
	deepEqual( Stem("entwischest"), "entwisch" );
	deepEqual( Stem("entwöhnt"), "entwohnt" );
	deepEqual( Stem("entwölkte"), "entwolkt" );
	deepEqual( Stem("entworfen"), "entworf" );
	deepEqual( Stem("entworfenen"), "entworf" );
	deepEqual( Stem("entwürdigend"), "entwurd" );
	deepEqual( Stem("entwurfes"), "entwurf" );
	deepEqual( Stem("entziehen"), "entzieh" );
	deepEqual( Stem("entziehung"), "entzieh" );
	deepEqual( Stem("entzog"), "entzog" );
	deepEqual( Stem("entzogen"), "entzog" );
	deepEqual( Stem("entzögen"), "entzog" );
	deepEqual( Stem("entzücken"), "entzuck" );
	deepEqual( Stem("entzückend"), "entzuck" );
	deepEqual( Stem("entzückt"), "entzuckt" );
	deepEqual( Stem("entzünden"), "entzund" );
	deepEqual( Stem("entzündete"), "entzundet" );
	deepEqual( Stem("entzündliches"), "entzund" );
	deepEqual( Stem("entzwei"), "entzwei" );
	deepEqual( Stem("entzweigesägt"), "entzweigesagt" );
	deepEqual( Stem("entzweiging"), "entzweiging" );
	deepEqual( Stem("eorum"), "eorum" );
	deepEqual( Stem("epd"), "epd" );
	deepEqual( Stem("epha"), "epha" );
	deepEqual( Stem("ephas"), "ephas" );
	deepEqual( Stem("ephod"), "ephod" );
	deepEqual( Stem("ephode"), "ephod" );
	deepEqual( Stem("ephods"), "ephod" );
	deepEqual( Stem("ephraim"), "ephraim" );
	deepEqual( Stem("epidermis"), "epidermis" );
	deepEqual( Stem("epijumhtikon"), "epijumhtikon" );
	deepEqual( Stem("epikur"), "epikur" );
	deepEqual( Stem("epikureer"), "epikure" );
	deepEqual( Stem("epods"), "epod" );
	deepEqual( Stem("er"), "er" );
	deepEqual( Stem("erbarme"), "erbarm" );
	deepEqual( Stem("erbarmen"), "erbarm" );
	deepEqual( Stem("erbarmer"), "erbarm" );
	deepEqual( Stem("erbärmlich"), "erbarm" );
	deepEqual( Stem("erbärmliche"), "erbarm" );
	deepEqual( Stem("erbärmlichen"), "erbarm" );
	deepEqual( Stem("erbärmliches"), "erbarm" );
	deepEqual( Stem("erbärmlichsten"), "erbarm" );
	deepEqual( Stem("erbarmt"), "erbarmt" );
	deepEqual( Stem("erbarmte"), "erbarmt" );
	deepEqual( Stem("erbarmung"), "erbarm" );
	deepEqual( Stem("erbarmungen"), "erbarm" );
	deepEqual( Stem("erbarmungslosen"), "erbarmungslos" );
	deepEqual( Stem("erbat"), "erbat" );
	deepEqual( Stem("erbauer"), "erbau" );
	deepEqual( Stem("erbaulich"), "erbaulich" );
	deepEqual( Stem("erbaulichen"), "erbaulich" );
	deepEqual( Stem("erbaulicher"), "erbaulich" );
	deepEqual( Stem("erbauliches"), "erbaulich" );
	deepEqual( Stem("erbaut"), "erbaut" );
	deepEqual( Stem("erbaute"), "erbaut" );
	deepEqual( Stem("erbauungsbuch"), "erbauungsbuch" );
	deepEqual( Stem("erbböse"), "erbbos" );
	deepEqual( Stem("erbbösen"), "erbbos" );
	deepEqual( Stem("erbböses"), "erbbos" );
	deepEqual( Stem("erbe"), "erb" );
	deepEqual( Stem("erbeben"), "erbeb" );
	deepEqual( Stem("erbebt"), "erbebt" );
	deepEqual( Stem("erbebte"), "erbebt" );
	deepEqual( Stem("erben"), "erb" );
	deepEqual( Stem("erbes"), "erb" );
	deepEqual( Stem("erbeten"), "erbet" );
	deepEqual( Stem("erbetenen"), "erbet" );
	deepEqual( Stem("erbeutete"), "erbeutet" );
	deepEqual( Stem("erbeuteten"), "erbeutet" );
	deepEqual( Stem("erbeutung"), "erbeut" );
	deepEqual( Stem("erbfeind"), "erbfeind" );
	deepEqual( Stem("erbgrafen"), "erbgraf" );
	deepEqual( Stem("erbgüter"), "erbgut" );
	deepEqual( Stem("erbherren"), "erbherr" );
	deepEqual( Stem("erbherrn"), "erbherrn" );
	deepEqual( Stem("erbinnen"), "erbinn" );
	deepEqual( Stem("erbittere"), "erbitt" );
	deepEqual( Stem("erbittert"), "erbittert" );
	deepEqual( Stem("erblassen"), "erblass" );
	deepEqual( Stem("erblasste"), "erblasst" );
	deepEqual( Stem("erblassten"), "erblasst" );
	deepEqual( Stem("erbleichende"), "erbleich" );
	deepEqual( Stem("erbleichte"), "erbleicht" );
	deepEqual( Stem("erblich"), "erblich" );
	deepEqual( Stem("erbliche"), "erblich" );
	deepEqual( Stem("erblicke"), "erblick" );
	deepEqual( Stem("erblicken"), "erblick" );
	deepEqual( Stem("erblickt"), "erblickt" );
	deepEqual( Stem("erblickte"), "erblickt" );
	deepEqual( Stem("erblindeten"), "erblindet" );
	deepEqual( Stem("erbost"), "erbost" );
	deepEqual( Stem("erboste"), "erbost" );
	deepEqual( Stem("erbosten"), "erbost" );
	deepEqual( Stem("erboster"), "erbost" );
	deepEqual( Stem("erbracht"), "erbracht" );
	deepEqual( Stem("erbrechen"), "erbrech" );
	deepEqual( Stem("erbringen"), "erbring" );
	deepEqual( Stem("erbschaft"), "erbschaft" );
	deepEqual( Stem("erbschaften"), "erbschaft" );
	deepEqual( Stem("erbsen"), "erbs" );
	deepEqual( Stem("erbsenkost"), "erbsenkost" );
	deepEqual( Stem("erbte"), "erbt" );
	deepEqual( Stem("erbteil"), "erbteil" );
	deepEqual( Stem("erbtum"), "erbtum" );
	deepEqual( Stem("erdacht"), "erdacht" );
	deepEqual( Stem("erdachten"), "erdacht" );
	deepEqual( Stem("erdball"), "erdball" );
	deepEqual( Stem("erdbeben"), "erdbeb" );
	deepEqual( Stem("erdbeere"), "erdbe" );
	deepEqual( Stem("erdboden"), "erdbod" );
	deepEqual( Stem("erdbodens"), "erdbod" );
	deepEqual( Stem("erde"), "erd" );
	deepEqual( Stem("erden"), "erd" );
	deepEqual( Stem("erdenken"), "erdenk" );
	deepEqual( Stem("erdenklichen"), "erdenk" );
	deepEqual( Stem("erdgeruch"), "erdgeruch" );
	deepEqual( Stem("erdgeschoss"), "erdgeschoss" );
	deepEqual( Stem("erdgeschoßwerkstätten"), "erdgeschosswerkstatt" );
	deepEqual( Stem("erdharz"), "erdharz" );
	deepEqual( Stem("erdharzes"), "erdharz" );
	deepEqual( Stem("erdichten"), "erdicht" );
	deepEqual( Stem("erdichtete"), "erdichtet" );
	deepEqual( Stem("erdichtetem"), "erdichtet" );
	deepEqual( Stem("erdichteten"), "erdichtet" );
	deepEqual( Stem("erdichtetes"), "erdichtet" );
	deepEqual( Stem("erdkreis"), "erdkreis" );
	deepEqual( Stem("erdkreises"), "erdkreis" );
	deepEqual( Stem("erdmolch"), "erdmolch" );
	deepEqual( Stem("erdreich"), "erdreich" );
	deepEqual( Stem("erdrosselt"), "erdrosselt" );
	deepEqual( Stem("erdulden"), "erduld" );
	deepEqual( Stem("erduldet"), "erduldet" );
	deepEqual( Stem("erdwelle"), "erdwell" );
	deepEqual( Stem("ereignen"), "ereign" );
	deepEqual( Stem("ereignenden"), "ereign" );
	deepEqual( Stem("ereignet"), "ereignet" );
	deepEqual( Stem("ereignete"), "ereignet" );
	deepEqual( Stem("ereignis"), "ereignis" );
	deepEqual( Stem("ereignisse"), "ereignis" );
	deepEqual( Stem("ereignissen"), "ereignis" );
	deepEqual( Stem("ereignisses"), "ereignis" );
	deepEqual( Stem("ererbt"), "ererbt" );
	deepEqual( Stem("ererbten"), "ererbt" );
	deepEqual( Stem("erfahre"), "erfahr" );
	deepEqual( Stem("erfahren"), "erfahr" );
	deepEqual( Stem("erfahrene"), "erfahr" );
	deepEqual( Stem("erfahrenern"), "erfahr" );
	deepEqual( Stem("erfahrner"), "erfahrn" );
	deepEqual( Stem("erfährt"), "erfahrt" );
	deepEqual( Stem("erfahrung"), "erfahr" );
	deepEqual( Stem("erfahrungen"), "erfahr" );
	deepEqual( Stem("erfahrungsbeweise"), "erfahrungsbeweis" );
	deepEqual( Stem("erfahrungsfalle"), "erfahrungsfall" );
	deepEqual( Stem("erfahrungsfolgen"), "erfahrungsfolg" );
	deepEqual( Stem("erfahrungsgegenstände"), "erfahrungsgegenstand" );
	deepEqual( Stem("erfahrungsgemäss"), "erfahrungsgemass" );
	deepEqual( Stem("erfahrungsgemäß"), "erfahrungsgemass" );
	deepEqual( Stem("erfahrungsurteilen"), "erfahrungsurteil" );
	deepEqual( Stem("erfand"), "erfand" );
	deepEqual( Stem("erfanden"), "erfand" );
	deepEqual( Stem("erfassen"), "erfass" );
	deepEqual( Stem("erfasst"), "erfasst" );
	deepEqual( Stem("erfaßt"), "erfasst" );
	deepEqual( Stem("erfasste"), "erfasst" );
	deepEqual( Stem("erfinde"), "erfind" );
	deepEqual( Stem("erfinden"), "erfind" );
	deepEqual( Stem("erfindung"), "erfind" );
	deepEqual( Stem("erfindungsgabe"), "erfindungsgab" );
	deepEqual( Stem("erfindungsgenie"), "erfindungsgeni" );
	deepEqual( Stem("erfindungsreiche"), "erfindungsreich" );
	deepEqual( Stem("erfindungsreiches"), "erfindungsreich" );
	deepEqual( Stem("erflehen"), "erfleh" );
	deepEqual( Stem("erfolg"), "erfolg" );
	deepEqual( Stem("erfolge"), "erfolg" );
	deepEqual( Stem("erfolgen"), "erfolg" );
	deepEqual( Stem("erfolgenden"), "erfolg" );
	deepEqual( Stem("erfolges"), "erfolg" );
	deepEqual( Stem("erfolglos"), "erfolglos" );
	deepEqual( Stem("erfolglosen"), "erfolglos" );
	deepEqual( Stem("erfolgreich"), "erfolgreich" );
	deepEqual( Stem("erfolgsrezept"), "erfolgsrezept" );
	deepEqual( Stem("erfolgt"), "erfolgt" );
	deepEqual( Stem("erfolgte"), "erfolgt" );
	deepEqual( Stem("erforderlich"), "erford" );
	deepEqual( Stem("erforderliche"), "erford" );
	deepEqual( Stem("erforderlichen"), "erford" );
	deepEqual( Stem("erfordern"), "erford" );
	deepEqual( Stem("erfordert"), "erfordert" );
	deepEqual( Stem("erforderte"), "erfordert" );
	deepEqual( Stem("erforsche"), "erforsch" );
	deepEqual( Stem("erforschen"), "erforsch" );
	deepEqual( Stem("erforscht"), "erforscht" );
	deepEqual( Stem("erforschten"), "erforscht" );
	deepEqual( Stem("erforschung"), "erforsch" );
	deepEqual( Stem("erforschungen"), "erforsch" );
	deepEqual( Stem("erfreuen"), "erfreu" );
	deepEqual( Stem("erfreuete"), "erfreuet" );
	deepEqual( Stem("erfreulich"), "erfreulich" );
	deepEqual( Stem("erfreuliche"), "erfreulich" );
	deepEqual( Stem("erfreut"), "erfreut" );
	deepEqual( Stem("erfreute"), "erfreut" );
	deepEqual( Stem("erfreuten"), "erfreut" );
	deepEqual( Stem("erfrischen"), "erfrisch" );
	deepEqual( Stem("erfrischte"), "erfrischt" );
	deepEqual( Stem("erfrischung"), "erfrisch" );
	deepEqual( Stem("erfroren"), "erfror" );
	deepEqual( Stem("erfrorenen"), "erfror" );
	deepEqual( Stem("erfuhr"), "erfuhr" );
	deepEqual( Stem("erfuhren"), "erfuhr" );
	deepEqual( Stem("erfüllen"), "erfull" );
	deepEqual( Stem("erfüllet"), "erfullet" );
	deepEqual( Stem("erfüllt"), "erfullt" );
	deepEqual( Stem("erfüllte"), "erfullt" );
	deepEqual( Stem("erfüllten"), "erfullt" );
	deepEqual( Stem("erfüllung"), "erfull" );
	deepEqual( Stem("erfunden"), "erfund" );
	deepEqual( Stem("erfundenen"), "erfund" );
	deepEqual( Stem("ergab"), "ergab" );
	deepEqual( Stem("ergaben"), "ergab" );
	deepEqual( Stem("ergangen"), "ergang" );
	deepEqual( Stem("ergänzen"), "erganz" );
	deepEqual( Stem("ergänzenden"), "erganz" );
	deepEqual( Stem("ergänzt"), "erganzt" );
	deepEqual( Stem("ergänzte"), "erganzt" );
	deepEqual( Stem("ergänzung"), "erganz" );
	deepEqual( Stem("ergänzungsband"), "erganzungsband" );
	deepEqual( Stem("ergebe"), "ergeb" );
	deepEqual( Stem("ergeben"), "ergeb" );
	deepEqual( Stem("ergebenen"), "ergeb" );
	deepEqual( Stem("ergebenheit"), "ergeb" );
	deepEqual( Stem("ergebenst"), "ergeben" );
	deepEqual( Stem("ergebnis"), "ergebnis" );
	deepEqual( Stem("ergebnisse"), "ergebnis" );
	deepEqual( Stem("ergebnissen"), "ergebnis" );
	deepEqual( Stem("ergebung"), "ergeb" );
	deepEqual( Stem("ergebungsvoll"), "ergebungsvoll" );
	deepEqual( Stem("ergehen"), "ergeh" );
	deepEqual( Stem("ergeht"), "ergeht" );
	deepEqual( Stem("ergibt"), "ergibt" );
	deepEqual( Stem("ergiebiger"), "ergieb" );
	deepEqual( Stem("ergiessen"), "ergiess" );
	deepEqual( Stem("ergießen"), "ergiess" );
	deepEqual( Stem("ergiessung"), "ergiess" );
	deepEqual( Stem("ergießung"), "ergiess" );
	deepEqual( Stem("erging"), "erging" );
	deepEqual( Stem("erglänzten"), "erglanzt" );
	deepEqual( Stem("erglühen"), "ergluh" );
	deepEqual( Stem("ergoss"), "ergoss" );
	deepEqual( Stem("ergoß"), "ergoss" );
	deepEqual( Stem("ergötzen"), "ergotz" );
	deepEqual( Stem("ergötzlich"), "ergotz" );
	deepEqual( Stem("ergötzt"), "ergotzt" );
	deepEqual( Stem("ergötzte"), "ergotzt" );
	deepEqual( Stem("ergötzten"), "ergotzt" );
	deepEqual( Stem("ergötzung"), "ergotz" );
	deepEqual( Stem("ergötzungen"), "ergotz" );
	deepEqual( Stem("ergraute"), "ergraut" );
	deepEqual( Stem("ergrauten"), "ergraut" );
	deepEqual( Stem("ergreife"), "ergreif" );
	deepEqual( Stem("ergreifen"), "ergreif" );
	deepEqual( Stem("ergreifend"), "ergreif" );
	deepEqual( Stem("ergreift"), "ergreift" );
	deepEqual( Stem("ergriff"), "ergriff" );
	deepEqual( Stem("ergriffen"), "ergriff" );
	deepEqual( Stem("ergrimmt"), "ergrimmt" );
	deepEqual( Stem("ergrübeln"), "ergrubeln" );
	deepEqual( Stem("ergründen"), "ergrund" );
	deepEqual( Stem("erhaben"), "erhab" );
	deepEqual( Stem("erhabene"), "erhab" );
	deepEqual( Stem("erhabenes"), "erhab" );
	deepEqual( Stem("erhabenheit"), "erhab" );
	deepEqual( Stem("erhabnen"), "erhabn" );
	deepEqual( Stem("erhalt"), "erhalt" );
	deepEqual( Stem("erhält"), "erhalt" );
	deepEqual( Stem("erhalte"), "erhalt" );
	deepEqual( Stem("erhalten"), "erhalt" );
	deepEqual( Stem("erhaltende"), "erhalt" );
	deepEqual( Stem("erhalter"), "erhalt" );
	deepEqual( Stem("erhältst"), "erhalt" );
	deepEqual( Stem("erhaltung"), "erhalt" );
	deepEqual( Stem("erhandelt"), "erhandelt" );
	deepEqual( Stem("erhängt"), "erhangt" );
	deepEqual( Stem("erhängte"), "erhangt" );
	deepEqual( Stem("erhärtet"), "erhartet" );
	deepEqual( Stem("erhaschen"), "erhasch" );
	deepEqual( Stem("erhebe"), "erheb" );
	deepEqual( Stem("erheben"), "erheb" );
	deepEqual( Stem("erhebend"), "erheb" );
	deepEqual( Stem("erhebenden"), "erheb" );
	deepEqual( Stem("erheblich"), "erheb" );
	deepEqual( Stem("erheblichen"), "erheb" );
	deepEqual( Stem("erheblichkeit"), "erheb" );
	deepEqual( Stem("erhebst"), "erheb" );
	deepEqual( Stem("erhebt"), "erhebt" );
	deepEqual( Stem("erhebung"), "erheb" );
	deepEqual( Stem("erhebungen"), "erheb" );
	deepEqual( Stem("erheischt"), "erheischt" );
	deepEqual( Stem("erhellen"), "erhell" );
	deepEqual( Stem("erhellt"), "erhellt" );
	deepEqual( Stem("erhellte"), "erhellt" );
	deepEqual( Stem("erheucheltes"), "erheuchelt" );
	deepEqual( Stem("erhielt"), "erhielt" );
	deepEqual( Stem("erhielten"), "erhielt" );
	deepEqual( Stem("erhieltst"), "erhielt" );
	deepEqual( Stem("erhitzen"), "erhitz" );
	deepEqual( Stem("erhitzt"), "erhitzt" );
	deepEqual( Stem("erhitzten"), "erhitzt" );
	deepEqual( Stem("erhob"), "erhob" );
	deepEqual( Stem("erhoben"), "erhob" );
	deepEqual( Stem("erhobenen"), "erhob" );
	deepEqual( Stem("erhobener"), "erhob" );
	deepEqual( Stem("erhofft"), "erhofft" );
	deepEqual( Stem("erhofften"), "erhofft" );
	deepEqual( Stem("erhöhen"), "erhoh" );
	deepEqual( Stem("erhöht"), "erhoht" );
	deepEqual( Stem("erhöhte"), "erhoht" );
	deepEqual( Stem("erhöhten"), "erhoht" );
	deepEqual( Stem("erhöhter"), "erhoht" );
	deepEqual( Stem("erhöhung"), "erhoh" );
	deepEqual( Stem("erholt"), "erholt" );
	deepEqual( Stem("erholte"), "erholt" );
	deepEqual( Stem("erholten"), "erholt" );
	deepEqual( Stem("erholung"), "erhol" );
	deepEqual( Stem("erholungspause"), "erholungspaus" );
	deepEqual( Stem("erhörest"), "erhor" );
	deepEqual( Stem("erhört"), "erhort" );
	deepEqual( Stem("erich"), "erich" );
	deepEqual( Stem("erinnere"), "erinn" );
	deepEqual( Stem("erinnerlich"), "erinn" );
	deepEqual( Stem("erinnern"), "erinn" );
	deepEqual( Stem("erinnernd"), "erinnernd" );
	deepEqual( Stem("erinnert"), "erinnert" );
	deepEqual( Stem("erinnerte"), "erinnert" );
	deepEqual( Stem("erinnerten"), "erinnert" );
	deepEqual( Stem("erinnerung"), "erinner" );
	deepEqual( Stem("erinnerungen"), "erinner" );
	deepEqual( Stem("erinnerungskräfte"), "erinnerungskraft" );
	deepEqual( Stem("eristica"), "eristica" );
	deepEqual( Stem("eristik"), "erist" );
	deepEqual( Stem("eristikouv"), "eristikouv" );
	deepEqual( Stem("eristische"), "erist" );
	deepEqual( Stem("eristischen"), "erist" );
	deepEqual( Stem("eriugena"), "eriugena" );
	deepEqual( Stem("erjagen"), "erjag" );
	deepEqual( Stem("erjebenst"), "erjeben" );
	deepEqual( Stem("erkämpfen"), "erkampf" );
	deepEqual( Stem("erkannt"), "erkannt" );
	deepEqual( Stem("erkannte"), "erkannt" );
	deepEqual( Stem("erkannten"), "erkannt" );
	deepEqual( Stem("erkaufen"), "erkauf" );
	deepEqual( Stem("erkennbar"), "erkennbar" );
	deepEqual( Stem("erkennbarem"), "erkennbar" );
	deepEqual( Stem("erkennbaren"), "erkennbar" );
	deepEqual( Stem("erkenne"), "erkenn" );
	deepEqual( Stem("erkennen"), "erkenn" );
	deepEqual( Stem("erkennenden"), "erkenn" );
	deepEqual( Stem("erkennest"), "erkenn" );
	deepEqual( Stem("erkennet"), "erkennet" );
	deepEqual( Stem("erkennst"), "erkenn" );
	deepEqual( Stem("erkennt"), "erkennt" );
	deepEqual( Stem("erkenntnis"), "erkenntnis" );
	deepEqual( Stem("erkenntnisgründe"), "erkenntnisgrund" );
	deepEqual( Stem("erkenntnisgründen"), "erkenntnisgrund" );
	deepEqual( Stem("erkenntnisse"), "erkenntnis" );
	deepEqual( Stem("erkenntnissen"), "erkenntnis" );
	deepEqual( Stem("erkenntnisses"), "erkenntnis" );
	deepEqual( Stem("erkenntnisvermögen"), "erkenntnisvermog" );
	deepEqual( Stem("erkenntnisvermögens"), "erkenntnisvermog" );
	deepEqual( Stem("erkennung"), "erkenn" );
	deepEqual( Stem("erker"), "erk" );
	deepEqual( Stem("erkläre"), "erklar" );
	deepEqual( Stem("erklären"), "erklar" );
	deepEqual( Stem("erklärlich"), "erklar" );
	deepEqual( Stem("erklärliche"), "erklar" );
	deepEqual( Stem("erklärst"), "erklarst" );
	deepEqual( Stem("erklärt"), "erklart" );
	deepEqual( Stem("erklärte"), "erklart" );
	deepEqual( Stem("erklärten"), "erklart" );
	deepEqual( Stem("erklärung"), "erklar" );
	deepEqual( Stem("erklärungen"), "erklar" );
	deepEqual( Stem("erklärungsgrund"), "erklarungsgrund" );
	deepEqual( Stem("erklärungsweise"), "erklarungsweis" );
	deepEqual( Stem("erkleckliche"), "erkleck" );
	deepEqual( Stem("erklecklichen"), "erkleck" );
	deepEqual( Stem("erkleckliches"), "erkleck" );
	deepEqual( Stem("erkletterten"), "erklettert" );
	deepEqual( Stem("erkundigt"), "erkundigt" );
	deepEqual( Stem("erkundigte"), "erkundigt" );
	deepEqual( Stem("erkünstelt"), "erkunstelt" );
	deepEqual( Stem("erlahmten"), "erlahmt" );
	deepEqual( Stem("erlangen"), "erlang" );
	deepEqual( Stem("erlangende"), "erlang" );
	deepEqual( Stem("erlangte"), "erlangt" );
	deepEqual( Stem("erlassen"), "erlass" );
	deepEqual( Stem("erlassung"), "erlass" );
	deepEqual( Stem("erlaube"), "erlaub" );
	deepEqual( Stem("erlauben"), "erlaub" );
	deepEqual( Stem("erlaubnis"), "erlaubnis" );
	deepEqual( Stem("erlaubt"), "erlaubt" );
	deepEqual( Stem("erlaubte"), "erlaubt" );
	deepEqual( Stem("erlaubten"), "erlaubt" );
	deepEqual( Stem("erlaucht"), "erlaucht" );
	deepEqual( Stem("erlauchte"), "erlaucht" );
	deepEqual( Stem("erlauchten"), "erlaucht" );
	deepEqual( Stem("erläutert"), "erlautert" );
	deepEqual( Stem("erläuterung"), "erlauter" );
	deepEqual( Stem("erle"), "erl" );
	deepEqual( Stem("erlebe"), "erleb" );
	deepEqual( Stem("erleben"), "erleb" );
	deepEqual( Stem("erlebnis"), "erlebnis" );
	deepEqual( Stem("erlebnisse"), "erlebnis" );
	deepEqual( Stem("erlebnissen"), "erlebnis" );
	deepEqual( Stem("erlebt"), "erlebt" );
	deepEqual( Stem("erlebte"), "erlebt" );
	deepEqual( Stem("erledigen"), "erled" );
	deepEqual( Stem("erledigt"), "erledigt" );
	deepEqual( Stem("erledigung"), "erled" );
	deepEqual( Stem("erlegt"), "erlegt" );
	deepEqual( Stem("erlegten"), "erlegt" );
	deepEqual( Stem("erlegung"), "erleg" );
	deepEqual( Stem("erleichtern"), "erleicht" );
	deepEqual( Stem("erleichternder"), "erleichternd" );
	deepEqual( Stem("erleichtert"), "erleichtert" );
	deepEqual( Stem("erleichterte"), "erleichtert" );
	deepEqual( Stem("erleiden"), "erleid" );
	deepEqual( Stem("erlenzeilen"), "erlenzeil" );
	deepEqual( Stem("erlernen"), "erlern" );
	deepEqual( Stem("erlernt"), "erlernt" );
	deepEqual( Stem("erlernte"), "erlernt" );
	deepEqual( Stem("erleuchte"), "erleucht" );
	deepEqual( Stem("erleuchten"), "erleucht" );
	deepEqual( Stem("erleuchtet"), "erleuchtet" );
	deepEqual( Stem("erleuchtete"), "erleuchtet" );
	deepEqual( Stem("erleuchteten"), "erleuchtet" );
	deepEqual( Stem("erleuchtung"), "erleucht" );
	deepEqual( Stem("erleuchtungen"), "erleucht" );
	deepEqual( Stem("erlitt"), "erlitt" );
	deepEqual( Stem("erlitten"), "erlitt" );
	deepEqual( Stem("erlittenen"), "erlitt" );
	deepEqual( Stem("erlös"), "erlos" );
	deepEqual( Stem("erloschen"), "erlosch" );
	deepEqual( Stem("erlöschen"), "erlosch" );
	deepEqual( Stem("erlöse"), "erlos" );
	deepEqual( Stem("erlösen"), "erlos" );
	deepEqual( Stem("erlöser"), "erlos" );
	deepEqual( Stem("erlöset"), "erloset" );
	deepEqual( Stem("erlöst"), "erlost" );
	deepEqual( Stem("erlösten"), "erlost" );
	deepEqual( Stem("erlösung"), "erlos" );
	deepEqual( Stem("erlösungsgelder"), "erlosungsgeld" );
	deepEqual( Stem("erlösungswerk"), "erlosungswerk" );
	deepEqual( Stem("erlustigen"), "erlust" );
	deepEqual( Stem("ermächtigt"), "ermachtigt" );
	deepEqual( Stem("ermahne"), "ermahn" );
	deepEqual( Stem("ermahnen"), "ermahn" );
	deepEqual( Stem("ermahnt"), "ermahnt" );
	deepEqual( Stem("ermahnte"), "ermahnt" );
	deepEqual( Stem("ermahnung"), "ermahn" );
	deepEqual( Stem("ermahnungen"), "ermahn" );
	deepEqual( Stem("ermangelte"), "ermangelt" );
	deepEqual( Stem("ermangelung"), "ermangel" );
	deepEqual( Stem("ermannen"), "ermann" );
	deepEqual( Stem("ermannte"), "ermannt" );
	deepEqual( Stem("ermattetes"), "ermattet" );
	deepEqual( Stem("ermattung"), "ermatt" );
	deepEqual( Stem("ermessens"), "ermess" );
	deepEqual( Stem("ermessensspielraum"), "ermessensspielraum" );
	deepEqual( Stem("ermesset"), "ermesset" );
	deepEqual( Stem("ermöglichen"), "ermog" );
	deepEqual( Stem("ermöglicht"), "ermoglicht" );
	deepEqual( Stem("ermordet"), "ermordet" );
	deepEqual( Stem("ermordete"), "ermordet" );
	deepEqual( Stem("ermordeten"), "ermordet" );
	deepEqual( Stem("ermüden"), "ermud" );
	deepEqual( Stem("ermüdenden"), "ermud" );
	deepEqual( Stem("ermüdet"), "ermudet" );
	deepEqual( Stem("ermüdeten"), "ermudet" );
	deepEqual( Stem("ermüdetes"), "ermudet" );
	deepEqual( Stem("ermuntern"), "ermunt" );
	deepEqual( Stem("ermunterte"), "ermuntert" );
	deepEqual( Stem("ermunterten"), "ermuntert" );
	deepEqual( Stem("ermutigungen"), "ermut" );
	deepEqual( Stem("erna"), "erna" );
	deepEqual( Stem("ernähren"), "ernahr" );
	deepEqual( Stem("ernährer"), "ernahr" );
	deepEqual( Stem("ernährt"), "ernahrt" );
	deepEqual( Stem("ernährung"), "ernahr" );
	deepEqual( Stem("ernährungsmethode"), "ernahrungsmethod" );
	deepEqual( Stem("ernannt"), "ernannt" );
	deepEqual( Stem("ernannte"), "ernannt" );
	deepEqual( Stem("ernennung"), "ernenn" );
	deepEqual( Stem("erneuere"), "erneu" );
	deepEqual( Stem("erneuern"), "erneu" );
	deepEqual( Stem("erneuerst"), "erneuerst" );
	deepEqual( Stem("erneuert"), "erneuert" );
	deepEqual( Stem("erneuerte"), "erneuert" );
	deepEqual( Stem("erneuerung"), "erneuer" );
	deepEqual( Stem("erneure"), "erneur" );
	deepEqual( Stem("erniedrige"), "erniedr" );
	deepEqual( Stem("erniedrigen"), "erniedr" );
	deepEqual( Stem("erniedrigten"), "erniedrigt" );
	deepEqual( Stem("erniedrigung"), "erniedr" );
	deepEqual( Stem("ernst"), "ernst" );
	deepEqual( Stem("ernste"), "ernst" );
	deepEqual( Stem("ernsten"), "ernst" );
	deepEqual( Stem("ernster"), "ernst" );
	deepEqual( Stem("ernstes"), "ernst" );
	deepEqual( Stem("ernstesten"), "ernst" );
	deepEqual( Stem("ernsthaft"), "ernsthaft" );
	deepEqual( Stem("ernsthafte"), "ernsthaft" );
	deepEqual( Stem("ernsthaften"), "ernsthaft" );
	deepEqual( Stem("ernsthafter"), "ernsthaft" );
	deepEqual( Stem("ernsthaftes"), "ernsthaft" );
	deepEqual( Stem("ernstlich"), "ernstlich" );
	deepEqual( Stem("ernstliche"), "ernstlich" );
	deepEqual( Stem("ernte"), "ernt" );
	deepEqual( Stem("erntesegen"), "ernteseg" );
	deepEqual( Stem("erntete"), "erntet" );
	deepEqual( Stem("erobern"), "erob" );
	deepEqual( Stem("erobert"), "erobert" );
	deepEqual( Stem("eroberung"), "erober" );
	deepEqual( Stem("eroberungen"), "erober" );
	deepEqual( Stem("eröffnen"), "eroffn" );
	deepEqual( Stem("eröffnet"), "eroffnet" );
	deepEqual( Stem("eröffnete"), "eroffnet" );
	deepEqual( Stem("eröffnung"), "eroffn" );
	deepEqual( Stem("erörtert"), "erortert" );
	deepEqual( Stem("erörterten"), "erortert" );
	deepEqual( Stem("erproben"), "erprob" );
	deepEqual( Stem("erprüften"), "erpruft" );
	deepEqual( Stem("erquicken"), "erquick" );
	deepEqual( Stem("erquickt"), "erquickt" );
	deepEqual( Stem("erquickte"), "erquickt" );
	deepEqual( Stem("erquickung"), "erquick" );
	deepEqual( Stem("erraten"), "errat" );
	deepEqual( Stem("erregen"), "erreg" );
	deepEqual( Stem("erregend"), "erreg" );
	deepEqual( Stem("erregt"), "erregt" );
	deepEqual( Stem("erregte"), "erregt" );
	deepEqual( Stem("erregten"), "erregt" );
	deepEqual( Stem("erregung"), "erreg" );
	deepEqual( Stem("erregungen"), "erreg" );
	deepEqual( Stem("erreichbar"), "erreichbar" );
	deepEqual( Stem("erreichbare"), "erreichbar" );
	deepEqual( Stem("erreiche"), "erreich" );
	deepEqual( Stem("erreichen"), "erreich" );
	deepEqual( Stem("erreicht"), "erreicht" );
	deepEqual( Stem("erreichte"), "erreicht" );
	deepEqual( Stem("erreichten"), "erreicht" );
	deepEqual( Stem("erreichung"), "erreich" );
	deepEqual( Stem("errette"), "errett" );
	deepEqual( Stem("erretten"), "errett" );
	deepEqual( Stem("errettet"), "errettet" );
	deepEqual( Stem("errichten"), "erricht" );
	deepEqual( Stem("errichtet"), "errichtet" );
	deepEqual( Stem("errichtete"), "errichtet" );
	deepEqual( Stem("errichteten"), "errichtet" );
	deepEqual( Stem("errichtung"), "erricht" );
	deepEqual( Stem("erriet"), "erriet" );
	deepEqual( Stem("erringen"), "erring" );
	deepEqual( Stem("erröte"), "errot" );
	deepEqual( Stem("erröten"), "errot" );
	deepEqual( Stem("errötend"), "errot" );
	deepEqual( Stem("errötete"), "errotet" );
	deepEqual( Stem("erröteten"), "errotet" );
	deepEqual( Stem("errungenschaft"), "errungenschaft" );
	deepEqual( Stem("ersah"), "ersah" );
	deepEqual( Stem("ersann"), "ersann" );
	deepEqual( Stem("ersannen"), "ersann" );
	deepEqual( Stem("ersatz"), "ersatz" );
	deepEqual( Stem("ersäufen"), "ersauf" );
	deepEqual( Stem("ersäuft"), "ersauft" );
	deepEqual( Stem("erschaffen"), "erschaff" );
	deepEqual( Stem("erschaffenden"), "erschaff" );
	deepEqual( Stem("erschaffene"), "erschaff" );
	deepEqual( Stem("erschaffenen"), "erschaff" );
	deepEqual( Stem("erschauten"), "erschaut" );
	deepEqual( Stem("erscheine"), "erschein" );
	deepEqual( Stem("erscheinen"), "erschein" );
	deepEqual( Stem("erscheinende"), "erschein" );
	deepEqual( Stem("erscheinenden"), "erschein" );
	deepEqual( Stem("erscheinens"), "erschein" );
	deepEqual( Stem("erscheint"), "erscheint" );
	deepEqual( Stem("erscheinung"), "erschein" );
	deepEqual( Stem("erscheinungen"), "erschein" );
	deepEqual( Stem("erscheinungsformen"), "erscheinungsform" );
	deepEqual( Stem("erschien"), "erschi" );
	deepEqual( Stem("erschiene"), "erschi" );
	deepEqual( Stem("erschienen"), "erschi" );
	deepEqual( Stem("erschienenen"), "erschien" );
	deepEqual( Stem("erschlage"), "erschlag" );
	deepEqual( Stem("erschlagen"), "erschlag" );
	deepEqual( Stem("erschlagener"), "erschlag" );
	deepEqual( Stem("erschleichens"), "erschleich" );
	deepEqual( Stem("erschlichen"), "erschlich" );
	deepEqual( Stem("erschlichene"), "erschlich" );
	deepEqual( Stem("erschliessen"), "erschliess" );
	deepEqual( Stem("erschließen"), "erschliess" );
	deepEqual( Stem("erschlüge"), "erschlug" );
	deepEqual( Stem("erschnappt"), "erschnappt" );
	deepEqual( Stem("erscholl"), "erscholl" );
	deepEqual( Stem("erschöpfen"), "erschopf" );
	deepEqual( Stem("erschöpfend"), "erschopf" );
	deepEqual( Stem("erschöpft"), "erschopft" );
	deepEqual( Stem("erschossen"), "erschoss" );
	deepEqual( Stem("erschrak"), "erschrak" );
	deepEqual( Stem("erschrecken"), "erschreck" );
	deepEqual( Stem("erschrecklicher"), "erschreck" );
	deepEqual( Stem("erschreckt"), "erschreckt" );
	deepEqual( Stem("erschreckte"), "erschreckt" );
	deepEqual( Stem("erschreckter"), "erschreckt" );
	deepEqual( Stem("erschrocken"), "erschrock" );
	deepEqual( Stem("erschrockenen"), "erschrock" );
	deepEqual( Stem("erschrockener"), "erschrock" );
	deepEqual( Stem("erschüttern"), "erschutt" );
	deepEqual( Stem("erschütternd"), "erschutternd" );
	deepEqual( Stem("erschüttert"), "erschuttert" );
	deepEqual( Stem("erschütterte"), "erschuttert" );
	deepEqual( Stem("erschütterten"), "erschuttert" );
	deepEqual( Stem("erschütterung"), "erschutter" );
	deepEqual( Stem("erschwert"), "erschwert" );
	deepEqual( Stem("ersehe"), "erseh" );
	deepEqual( Stem("ersehen"), "erseh" );
	deepEqual( Stem("ersehnt"), "ersehnt" );
	deepEqual( Stem("ersehnte"), "ersehnt" );
	deepEqual( Stem("ersehnten"), "ersehnt" );
	deepEqual( Stem("ersetzen"), "ersetz" );
	deepEqual( Stem("ersetzt"), "ersetzt" );
	deepEqual( Stem("ersetzte"), "ersetzt" );
	deepEqual( Stem("ersichtlich"), "ersicht" );
	deepEqual( Stem("ersieht"), "ersieht" );
	deepEqual( Stem("ersinnen"), "ersinn" );
	deepEqual( Stem("ersonnen"), "ersonn" );
	deepEqual( Stem("erspähen"), "erspah" );
	deepEqual( Stem("erspähend"), "erspah" );
	deepEqual( Stem("erspäht"), "erspaht" );
	deepEqual( Stem("erspare"), "erspar" );
	deepEqual( Stem("ersparen"), "erspar" );
	deepEqual( Stem("ersparnis"), "ersparnis" );
	deepEqual( Stem("ersparnisse"), "ersparnis" );
	deepEqual( Stem("ersparnissen"), "ersparnis" );
	deepEqual( Stem("erspart"), "erspart" );
	deepEqual( Stem("ersparten"), "erspart" );
	deepEqual( Stem("erspriesslich"), "erspriess" );
	deepEqual( Stem("ersprießlich"), "erspriess" );
	deepEqual( Stem("erspriessliche"), "erspriess" );
	deepEqual( Stem("erspriessliches"), "erspriess" );
	deepEqual( Stem("erst"), "erst" );
	deepEqual( Stem("erstand"), "erstand" );
	deepEqual( Stem("erstanden"), "erstand" );
	deepEqual( Stem("erstandenen"), "erstand" );
	deepEqual( Stem("erstarben"), "erstarb" );
	deepEqual( Stem("erstarken"), "erstark" );
	deepEqual( Stem("erstarkt"), "erstarkt" );
	deepEqual( Stem("erstarrt"), "erstarrt" );
	deepEqual( Stem("erstarrten"), "erstarrt" );
	deepEqual( Stem("erstarrung"), "erstarr" );
	deepEqual( Stem("erstatte"), "erstatt" );
	deepEqual( Stem("erstattet"), "erstattet" );
	deepEqual( Stem("erstattete"), "erstattet" );
	deepEqual( Stem("erstaunen"), "erstaun" );
	deepEqual( Stem("erstaunlich"), "erstaun" );
	deepEqual( Stem("erstaunlichen"), "erstaun" );
	deepEqual( Stem("erstaunt"), "erstaunt" );
	deepEqual( Stem("erstaunte"), "erstaunt" );
	deepEqual( Stem("erstaunten"), "erstaunt" );
	deepEqual( Stem("erstauntes"), "erstaunt" );
	deepEqual( Stem("erstdruck"), "erstdruck" );
	deepEqual( Stem("erste"), "erst" );
	deepEqual( Stem("erstehen"), "ersteh" );
	deepEqual( Stem("ersteht"), "ersteht" );
	deepEqual( Stem("erstellt"), "erstellt" );
	deepEqual( Stem("erstellung"), "erstell" );
	deepEqual( Stem("erstemal"), "erstemal" );
	deepEqual( Stem("ersten"), "erst" );
	deepEqual( Stem("erstenmal"), "erstenmal" );
	deepEqual( Stem("erstens"), "erst" );
	deepEqual( Stem("erster"), "erst" );
	deepEqual( Stem("erstere"), "erst" );
	deepEqual( Stem("ersteren"), "erst" );
	deepEqual( Stem("ersterer"), "erst" );
	deepEqual( Stem("ersterm"), "ersterm" );
	deepEqual( Stem("erstern"), "erst" );
	deepEqual( Stem("erstes"), "erst" );
	deepEqual( Stem("erstgeborene"), "erstgebor" );
	deepEqual( Stem("erstgeborenen"), "erstgebor" );
	deepEqual( Stem("erstgeborener"), "erstgebor" );
	deepEqual( Stem("erstgeburt"), "erstgeburt" );
	deepEqual( Stem("erstgeburten"), "erstgeburt" );
	deepEqual( Stem("ersticken"), "erstick" );
	deepEqual( Stem("erstickend"), "erstick" );
	deepEqual( Stem("erstickenden"), "erstick" );
	deepEqual( Stem("erstickt"), "erstickt" );
	deepEqual( Stem("erstickte"), "erstickt" );
	deepEqual( Stem("erstickung"), "erstick" );
	deepEqual( Stem("erstige"), "erstig" );
	deepEqual( Stem("erstirbt"), "erstirbt" );
	deepEqual( Stem("erstlich"), "erstlich" );
	deepEqual( Stem("erstlinge"), "erstling" );
	deepEqual( Stem("erstmals"), "erstmal" );
	deepEqual( Stem("erstochene"), "erstoch" );
	deepEqual( Stem("erstreckt"), "erstreckt" );
	deepEqual( Stem("erstreckte"), "erstreckt" );
	deepEqual( Stem("erstreckten"), "erstreckt" );
	deepEqual( Stem("erstritt"), "erstritt" );
	deepEqual( Stem("ersuche"), "ersuch" );
	deepEqual( Stem("ersucht"), "ersucht" );
	deepEqual( Stem("ersuchten"), "ersucht" );
	deepEqual( Stem("ertappen"), "ertapp" );
	deepEqual( Stem("ertappte"), "ertappt" );
	deepEqual( Stem("erteilen"), "erteil" );
	deepEqual( Stem("erteilt"), "erteilt" );
	deepEqual( Stem("erteilte"), "erteilt" );
	deepEqual( Stem("ertönen"), "erton" );
	deepEqual( Stem("ertönt"), "ertont" );
	deepEqual( Stem("ertönte"), "ertont" );
	deepEqual( Stem("ertönten"), "ertont" );
	deepEqual( Stem("ertötet"), "ertotet" );
	deepEqual( Stem("ertrag"), "ertrag" );
	deepEqual( Stem("ertrage"), "ertrag" );
	deepEqual( Stem("ertragen"), "ertrag" );
	deepEqual( Stem("ertragener"), "ertrag" );
	deepEqual( Stem("erträglichen"), "ertrag" );
	deepEqual( Stem("erträglicher"), "ertrag" );
	deepEqual( Stem("erträgliches"), "ertrag" );
	deepEqual( Stem("erträgt"), "ertragt" );
	deepEqual( Stem("ertrank"), "ertrank" );
	deepEqual( Stem("ertrinkens"), "ertrink" );
	deepEqual( Stem("ertrotzen"), "ertrotz" );
	deepEqual( Stem("ertrug"), "ertrug" );
	deepEqual( Stem("ertrugen"), "ertrug" );
	deepEqual( Stem("erwachend"), "erwach" );
	deepEqual( Stem("erwachende"), "erwach" );
	deepEqual( Stem("erwachendem"), "erwach" );
	deepEqual( Stem("erwachenden"), "erwach" );
	deepEqual( Stem("erwachender"), "erwach" );
	deepEqual( Stem("erwachsen"), "erwachs" );
	deepEqual( Stem("erwachsene"), "erwachs" );
	deepEqual( Stem("erwachsenem"), "erwachs" );
	deepEqual( Stem("erwachsenen"), "erwachs" );
	deepEqual( Stem("erwachsener"), "erwachs" );
	deepEqual( Stem("erwächst"), "erwach" );
	deepEqual( Stem("erwacht"), "erwacht" );
	deepEqual( Stem("erwachte"), "erwacht" );
	deepEqual( Stem("erwachten"), "erwacht" );
	deepEqual( Stem("erwägen"), "erwag" );
	deepEqual( Stem("erwägt"), "erwagt" );
	deepEqual( Stem("erwählen"), "erwahl" );
	deepEqual( Stem("erwählet"), "erwahlet" );
	deepEqual( Stem("erwählt"), "erwahlt" );
	deepEqual( Stem("erwählten"), "erwahlt" );
	deepEqual( Stem("erwählung"), "erwahl" );
	deepEqual( Stem("erwähnen"), "erwahn" );
	deepEqual( Stem("erwähnt"), "erwahnt" );
	deepEqual( Stem("erwähnte"), "erwahnt" );
	deepEqual( Stem("erwähnten"), "erwahnt" );
	deepEqual( Stem("erwähnung"), "erwahn" );
	deepEqual( Stem("erwähnungen"), "erwahn" );
	deepEqual( Stem("erwarb"), "erwarb" );
	deepEqual( Stem("erwärmt"), "erwarmt" );
	deepEqual( Stem("erwarte"), "erwart" );
	deepEqual( Stem("erwarten"), "erwart" );
	deepEqual( Stem("erwartest"), "erwart" );
	deepEqual( Stem("erwartet"), "erwartet" );
	deepEqual( Stem("erwartete"), "erwartet" );
	deepEqual( Stem("erwarteten"), "erwartet" );
	deepEqual( Stem("erwartung"), "erwart" );
	deepEqual( Stem("erwartungen"), "erwart" );
	deepEqual( Stem("erwartungsvollem"), "erwartungsvoll" );
	deepEqual( Stem("erwecken"), "erweck" );
	deepEqual( Stem("erweckt"), "erweckt" );
	deepEqual( Stem("erweckte"), "erweckt" );
	deepEqual( Stem("erweckten"), "erweckt" );
	deepEqual( Stem("erweicht"), "erweicht" );
	deepEqual( Stem("erweisen"), "erweis" );
	deepEqual( Stem("erweislichen"), "erweis" );
	deepEqual( Stem("erweisung"), "erweis" );
	deepEqual( Stem("erweitern"), "erweit" );
	deepEqual( Stem("erweiternd"), "erweiternd" );
	deepEqual( Stem("erweiterndes"), "erweiternd" );
	deepEqual( Stem("erweitert"), "erweitert" );
	deepEqual( Stem("erweiterte"), "erweitert" );
	deepEqual( Stem("erweiterten"), "erweitert" );
	deepEqual( Stem("erweiterung"), "erweiter" );
	deepEqual( Stem("erweiterungen"), "erweiter" );
	deepEqual( Stem("erwerb"), "erwerb" );
	deepEqual( Stem("erwerben"), "erwerb" );
	deepEqual( Stem("erwerbende"), "erwerb" );
	deepEqual( Stem("erwerbenden"), "erwerb" );
	deepEqual( Stem("erwerbmittel"), "erwerbmittel" );
	deepEqual( Stem("erwerbs"), "erwerb" );
	deepEqual( Stem("erwidern"), "erwid" );
	deepEqual( Stem("erwiderte"), "erwidert" );
	deepEqual( Stem("erwiderung"), "erwider" );
	deepEqual( Stem("erwies"), "erwi" );
	deepEqual( Stem("erwiesen"), "erwies" );
	deepEqual( Stem("erwiesenermassen"), "erwiesenermass" );
	deepEqual( Stem("erwirbt"), "erwirbt" );
	deepEqual( Stem("erwischen"), "erwisch" );
	deepEqual( Stem("erwischt"), "erwischt" );
	deepEqual( Stem("erwischte"), "erwischt" );
	deepEqual( Stem("erwogen"), "erwog" );
	deepEqual( Stem("erworben"), "erworb" );
	deepEqual( Stem("erworbene"), "erworb" );
	deepEqual( Stem("erworbenen"), "erworb" );
	deepEqual( Stem("erwthsewv"), "erwthsewv" );
	deepEqual( Stem("erwünscht"), "erwunscht" );
	deepEqual( Stem("erwünschte"), "erwunscht" );
	deepEqual( Stem("erwürge"), "erwurg" );
	deepEqual( Stem("erwürgen"), "erwurg" );
	deepEqual( Stem("erwürgt"), "erwurgt" );
	deepEqual( Stem("erwürgte"), "erwurgt" );
	deepEqual( Stem("erz"), "erz" );
	deepEqual( Stem("erzähl"), "erzahl" );
	deepEqual( Stem("erzähle"), "erzahl" );
	deepEqual( Stem("erzählen"), "erzahl" );
	deepEqual( Stem("erzählende"), "erzahl" );
	deepEqual( Stem("erzähler"), "erzahl" );
	deepEqual( Stem("erzählest"), "erzahl" );
	deepEqual( Stem("erzählet"), "erzahlet" );
	deepEqual( Stem("erzählst"), "erzahl" );
	deepEqual( Stem("erzählt"), "erzahlt" );
	deepEqual( Stem("erzählte"), "erzahlt" );
	deepEqual( Stem("erzählten"), "erzahlt" );
	deepEqual( Stem("erzähltwerden"), "erzahltwerd" );
	deepEqual( Stem("erzählung"), "erzahl" );
	deepEqual( Stem("erzählungen"), "erzahl" );
	deepEqual( Stem("erzeigen"), "erzeig" );
	deepEqual( Stem("erzeigt"), "erzeigt" );
	deepEqual( Stem("erzengel"), "erzengel" );
	deepEqual( Stem("erzes"), "erz" );
	deepEqual( Stem("erzeugen"), "erzeug" );
	deepEqual( Stem("erzeuger"), "erzeug" );
	deepEqual( Stem("erzeugerin"), "erzeugerin" );
	deepEqual( Stem("erzeugnis"), "erzeugnis" );
	deepEqual( Stem("erzeugnisse"), "erzeugnis" );
	deepEqual( Stem("erzeugnisses"), "erzeugnis" );
	deepEqual( Stem("erzeugt"), "erzeugt" );
	deepEqual( Stem("erzeugte"), "erzeugt" );
	deepEqual( Stem("erziehen"), "erzieh" );
	deepEqual( Stem("erzieher"), "erzieh" );
	deepEqual( Stem("erzieherei"), "erzieherei" );
	deepEqual( Stem("erzieherin"), "erzieherin" );
	deepEqual( Stem("erzieherisch"), "erzieher" );
	deepEqual( Stem("erziehung"), "erzieh" );
	deepEqual( Stem("erziehungskunst"), "erziehungskun" );
	deepEqual( Stem("erziehungsleute"), "erziehungsleut" );
	deepEqual( Stem("erziehungsmassregeln"), "erziehungsmassregeln" );
	deepEqual( Stem("erziehungsmühe"), "erziehungsmuh" );
	deepEqual( Stem("erziehungsresultat"), "erziehungsresultat" );
	deepEqual( Stem("erziehungswerk"), "erziehungswerk" );
	deepEqual( Stem("erziele"), "erziel" );
	deepEqual( Stem("erzielen"), "erziel" );
	deepEqual( Stem("erzielt"), "erzielt" );
	deepEqual( Stem("erzittere"), "erzitt" );
	deepEqual( Stem("erzittern"), "erzitt" );
	deepEqual( Stem("erzitterte"), "erzittert" );
	deepEqual( Stem("erzog"), "erzog" );
	deepEqual( Stem("erzogen"), "erzog" );
	deepEqual( Stem("erzürnt"), "erzurnt" );
	deepEqual( Stem("erzürnte"), "erzurnt" );
	deepEqual( Stem("erzwungene"), "erzwung" );
	deepEqual( Stem("erzwungenen"), "erzwung" );
	deepEqual( Stem("es"), "es" );
	deepEqual( Stem("esau"), "esau" );
	deepEqual( Stem("esaus"), "esaus" );
	deepEqual( Stem("eschenstab"), "eschenstab" );
	deepEqual( Stem("esel"), "esel" );
	deepEqual( Stem("eselein"), "eselein" );
	deepEqual( Stem("eselfüllen"), "eselfull" );
	deepEqual( Stem("eseln"), "eseln" );
	deepEqual( Stem("esels"), "esel" );
	deepEqual( Stem("esers"), "eser" );
	deepEqual( Stem("espenlaub"), "espenlaub" );
	deepEqual( Stem("essangelegenheiten"), "essangeleg" );
	deepEqual( Stem("essayistischen"), "essayist" );
	deepEqual( Stem("essbare"), "essbar" );
	deepEqual( Stem("essbares"), "essbar" );
	deepEqual( Stem("essbegierige"), "essbegier" );
	deepEqual( Stem("essbestecke"), "essbesteck" );
	deepEqual( Stem("esse"), "ess" );
	deepEqual( Stem("essen"), "ess" );
	deepEqual( Stem("essend"), "essend" );
	deepEqual( Stem("essens"), "ess" );
	deepEqual( Stem("esser"), "ess" );
	deepEqual( Stem("esset"), "esset" );
	deepEqual( Stem("essig"), "essig" );
	deepEqual( Stem("essighafen"), "essighaf" );
	deepEqual( Stem("esst"), "esst" );
	deepEqual( Stem("eßt"), "esst" );
	deepEqual( Stem("esszimmer"), "esszimm" );
	deepEqual( Stem("eßzimmer"), "esszimm" );
	deepEqual( Stem("esszimmers"), "esszimm" );
	deepEqual( Stem("eßzimmers"), "esszimm" );
	deepEqual( Stem("est"), "est" );
	deepEqual( Stem("estherchen"), "estherch" );
	deepEqual( Stem("estherchens"), "estherch" );
	deepEqual( Stem("estherlein"), "estherlein" );
	deepEqual( Stem("esti"), "esti" );
	deepEqual( Stem("estrich"), "estrich" );
	deepEqual( Stem("estrichs"), "estrich" );
	deepEqual( Stem("et"), "et" );
	deepEqual( Stem("etc"), "etc" );
	deepEqual( Stem("ethische"), "ethisch" );
	deepEqual( Stem("ethnographischer"), "ethnograph" );
	deepEqual( Stem("etliche"), "etlich" );
	deepEqual( Stem("etlicher"), "etlich" );
	deepEqual( Stem("etwa"), "etwa" );
	deepEqual( Stem("etwaigen"), "etwaig" );
	deepEqual( Stem("etwanigen"), "etwan" );
	deepEqual( Stem("etwas"), "etwas" );
	deepEqual( Stem("euch"), "euch" );
	deepEqual( Stem("euer"), "euer" );
	deepEqual( Stem("euere"), "euer" );
	deepEqual( Stem("euerm"), "euerm" );
	deepEqual( Stem("euern"), "euern" );
	deepEqual( Stem("eule"), "eul" );
	deepEqual( Stem("eulen"), "eul" );
	deepEqual( Stem("eulenspiegelei"), "eulenspiegelei" );
	deepEqual( Stem("eulenvogel"), "eulenvogel" );
	deepEqual( Stem("euphrat"), "euphrat" );
	deepEqual( Stem("eure"), "eur" );
	deepEqual( Stem("eurem"), "eur" );
	deepEqual( Stem("euren"), "eur" );
	deepEqual( Stem("eurer"), "eur" );
	deepEqual( Stem("eures"), "eur" );
	deepEqual( Stem("euretwegen"), "euretweg" );
	deepEqual( Stem("europa"), "europa" );
	deepEqual( Stem("europäern"), "europa" );
	deepEqual( Stem("europäische"), "europa" );
	deepEqual( Stem("europäischen"), "europa" );
	deepEqual( Stem("europapokal"), "europapokal" );
	deepEqual( Stem("europas"), "europas" );
	deepEqual( Stem("eustachius"), "eustachius" );
	deepEqual( Stem("eva"), "eva" );
	deepEqual( Stem("evangelii"), "evangelii" );
	deepEqual( Stem("evangelikale"), "evangelikal" );
	deepEqual( Stem("evangelikalen"), "evangelikal" );
	deepEqual( Stem("evangelikalenin"), "evangelikalenin" );
	deepEqual( Stem("evangelisch"), "evangel" );
	deepEqual( Stem("evangelische"), "evangel" );
	deepEqual( Stem("evangelischen"), "evangel" );
	deepEqual( Stem("evangelischer"), "evangel" );
	deepEqual( Stem("evangelisches"), "evangel" );
	deepEqual( Stem("evangelium"), "evangelium" );
	deepEqual( Stem("eventuelle"), "eventuell" );
	deepEqual( Stem("evident"), "evident" );
	deepEqual( Stem("evidenz"), "evidenz" );
	deepEqual( Stem("ewig"), "ewig" );
	deepEqual( Stem("ewige"), "ewig" );
	deepEqual( Stem("ewigem"), "ewig" );
	deepEqual( Stem("ewigen"), "ewig" );
	deepEqual( Stem("ewiger"), "ewig" );
	deepEqual( Stem("ewiges"), "ewig" );
	deepEqual( Stem("ewigkeit"), "ewig" );
	deepEqual( Stem("ewigkeiten"), "ewig" );
	deepEqual( Stem("ewiglich"), "ewig" );
	deepEqual( Stem("ex"), "ex" );
	deepEqual( Stem("exakte"), "exakt" );
	deepEqual( Stem("exakten"), "exakt" );
	deepEqual( Stem("excitatur"), "excitatur" );
	deepEqual( Stem("exekutive"), "exekutiv" );
	deepEqual( Stem("exempel"), "exempel" );
	deepEqual( Stem("exemplar"), "exemplar" );
	deepEqual( Stem("exerzieren"), "exerzi" );
	deepEqual( Stem("exerziermeistern"), "exerziermeist" );
	deepEqual( Stem("exil"), "exil" );
	deepEqual( Stem("existat"), "existat" );
	deepEqual( Stem("existentialsatz"), "existentialsatz" );
	deepEqual( Stem("existentiellen"), "existentiell" );
	deepEqual( Stem("existenz"), "existenz" );
	deepEqual( Stem("existenzminimum"), "existenzminimum" );
	deepEqual( Stem("existiere"), "existi" );
	deepEqual( Stem("existieren"), "existi" );
	deepEqual( Stem("existierenden"), "existier" );
	deepEqual( Stem("existiert"), "existiert" );
	deepEqual( Stem("existit"), "existit" );
	deepEqual( Stem("exit"), "exit" );
	deepEqual( Stem("exklusi"), "exklusi" );
	deepEqual( Stem("exklusives"), "exklusiv" );
	deepEqual( Stem("exkrementen"), "exkrement" );
	deepEqual( Stem("expedition"), "expedition" );
	deepEqual( Stem("experientia"), "experientia" );
	deepEqual( Stem("experiment"), "experiment" );
	deepEqual( Stem("expertenkommission"), "expertenkommission" );
	deepEqual( Stem("explorare"), "explorar" );
	deepEqual( Stem("explosion"), "explosion" );
	deepEqual( Stem("explosiv"), "explosiv" );
	deepEqual( Stem("explosive"), "explosiv" );
	deepEqual( Stem("expressen"), "express" );
	deepEqual( Stem("extra"), "extra" );
	deepEqual( Stem("extrapostillion"), "extrapostillion" );
	deepEqual( Stem("extras"), "extras" );
	deepEqual( Stem("extraurlaub"), "extraurlaub" );
	deepEqual( Stem("exzellenz"), "exzellenz" );
	deepEqual( Stem("ezw"), "ezw" );
	deepEqual( Stem("f"), "f" );
	deepEqual( Stem("fabelhafte"), "fabelhaft" );
	deepEqual( Stem("fabelhaftes"), "fabelhaft" );
	deepEqual( Stem("fabeln"), "fabeln" );
	deepEqual( Stem("fabrik"), "fabrik" );
	deepEqual( Stem("fabrikant"), "fabrikant" );
	deepEqual( Stem("fabrikanten"), "fabrikant" );
	deepEqual( Stem("fabriken"), "fabrik" );
	deepEqual( Stem("fächern"), "fach" );
	deepEqual( Stem("faciles"), "facil" );
	deepEqual( Stem("facit"), "facit" );
	deepEqual( Stem("fackel"), "fackel" );
	deepEqual( Stem("fackeln"), "fackeln" );
	deepEqual( Stem("facto"), "facto" );
	deepEqual( Stem("factor"), "factor" );
	deepEqual( Stem("faden"), "fad" );
	deepEqual( Stem("fäden"), "fad" );
	deepEqual( Stem("fadendünnen"), "fadendunn" );
	deepEqual( Stem("fadenscheinigen"), "fadenschein" );
	deepEqual( Stem("fades"), "fad" );
	deepEqual( Stem("fähig"), "fahig" );
	deepEqual( Stem("fähiger"), "fahig" );
	deepEqual( Stem("fähigkeit"), "fahig" );
	deepEqual( Stem("fähigkeiten"), "fahig" );
	deepEqual( Stem("fahl"), "fahl" );
	deepEqual( Stem("fahlen"), "fahl" );
	deepEqual( Stem("fahler"), "fahl" );
	deepEqual( Stem("fahne"), "fahn" );
	deepEqual( Stem("fahnen"), "fahn" );
	deepEqual( Stem("fähnlein"), "fahnlein" );
	deepEqual( Stem("fähnleins"), "fahnlein" );
	deepEqual( Stem("fahr"), "fahr" );
	deepEqual( Stem("fahren"), "fahr" );
	deepEqual( Stem("fahrenden"), "fahrend" );
	deepEqual( Stem("fahrendes"), "fahrend" );
	deepEqual( Stem("fahrenzum"), "fahrenzum" );
	deepEqual( Stem("fahrer"), "fahr" );
	deepEqual( Stem("fahrhabe"), "fahrhab" );
	deepEqual( Stem("fährlichkeit"), "fahrlich" );
	deepEqual( Stem("fahrst"), "fahrst" );
	deepEqual( Stem("fahrt"), "fahrt" );
	deepEqual( Stem("fährt"), "fahrt" );
	deepEqual( Stem("fährte"), "fahrt" );
	deepEqual( Stem("fahrten"), "fahrt" );
	deepEqual( Stem("fährten"), "fahrt" );
	deepEqual( Stem("fahrwasser"), "fahrwass" );
	deepEqual( Stem("fahrweg"), "fahrweg" );
	deepEqual( Stem("fahrzeit"), "fahrzeit" );
	deepEqual( Stem("fahrzeug"), "fahrzeug" );
	deepEqual( Stem("fahrzeugs"), "fahrzeug" );
	deepEqual( Stem("fair"), "fair" );
	deepEqual( Stem("faktischen"), "faktisch" );
	deepEqual( Stem("faktotum"), "faktotum" );
	deepEqual( Stem("faktum"), "faktum" );
	deepEqual( Stem("fakultät"), "fakultat" );
	deepEqual( Stem("fall"), "fall" );
	deepEqual( Stem("falle"), "fall" );
	deepEqual( Stem("fälle"), "fall" );
	deepEqual( Stem("fallen"), "fall" );
	deepEqual( Stem("fällen"), "fall" );
	deepEqual( Stem("fallend"), "fallend" );
	deepEqual( Stem("fallende"), "fallend" );
	deepEqual( Stem("fallenden"), "fallend" );
	deepEqual( Stem("falles"), "fall" );
	deepEqual( Stem("fallet"), "fallet" );
	deepEqual( Stem("falliert"), "falliert" );
	deepEqual( Stem("fallimentes"), "falliment" );
	deepEqual( Stem("falliten"), "fallit" );
	deepEqual( Stem("falls"), "fall" );
	deepEqual( Stem("fallstrick"), "fallstrick" );
	deepEqual( Stem("fallstricke"), "fallstrick" );
	deepEqual( Stem("fallt"), "fallt" );
	deepEqual( Stem("fällt"), "fallt" );
	deepEqual( Stem("falsch"), "falsch" );
	deepEqual( Stem("falsche"), "falsch" );
	deepEqual( Stem("falschem"), "falsch" );
	deepEqual( Stem("falschen"), "falsch" );
	deepEqual( Stem("falscher"), "falsch" );
	deepEqual( Stem("falsches"), "falsch" );
	deepEqual( Stem("falschesten"), "falsch" );
	deepEqual( Stem("falschheit"), "falschheit" );
	deepEqual( Stem("falschheiten"), "falschheit" );
	deepEqual( Stem("fälschlich"), "falschlich" );
	deepEqual( Stem("fälschungen"), "falschung" );
	deepEqual( Stem("falte"), "falt" );
	deepEqual( Stem("falten"), "falt" );
	deepEqual( Stem("falter"), "falt" );
	deepEqual( Stem("faltete"), "faltet" );
	deepEqual( Stem("falteten"), "faltet" );
	deepEqual( Stem("faltigen"), "faltig" );
	deepEqual( Stem("fameses"), "fames" );
	deepEqual( Stem("familie"), "famili" );
	deepEqual( Stem("familien"), "famili" );
	deepEqual( Stem("familienerbstück"), "familienerbstuck" );
	deepEqual( Stem("familiengeschichte"), "familiengeschicht" );
	deepEqual( Stem("familienglück"), "familiengluck" );
	deepEqual( Stem("familienvater"), "familienvat" );
	deepEqual( Stem("familienverfolgung"), "familienverfolg" );
	deepEqual( Stem("famosen"), "famos" );
	deepEqual( Stem("fanatisierten"), "fanatisiert" );
	deepEqual( Stem("fanatizismus"), "fanatizismus" );
	deepEqual( Stem("fanchon"), "fanchon" );
	deepEqual( Stem("fand"), "fand" );
	deepEqual( Stem("fände"), "fand" );
	deepEqual( Stem("fanden"), "fand" );
	deepEqual( Stem("fanfaren"), "fanfar" );
	deepEqual( Stem("fang"), "fang" );
	deepEqual( Stem("fangen"), "fang" );
	deepEqual( Stem("fanges"), "fang" );
	deepEqual( Stem("fangnetze"), "fangnetz" );
	deepEqual( Stem("fängst"), "fang" );
	deepEqual( Stem("fangt"), "fangt" );
	deepEqual( Stem("fängt"), "fangt" );
	deepEqual( Stem("fantasie"), "fantasi" );
	deepEqual( Stem("fantastischen"), "fantast" );
	deepEqual( Stem("farbe"), "farb" );
	deepEqual( Stem("farben"), "farb" );
	deepEqual( Stem("färbende"), "farbend" );
	deepEqual( Stem("farbenwesen"), "farbenwes" );
	deepEqual( Stem("farbigen"), "farbig" );
	deepEqual( Stem("farbiges"), "farbig" );
	deepEqual( Stem("farblosen"), "farblos" );
	deepEqual( Stem("farbtupfer"), "farbtupf" );
	deepEqual( Stem("fare"), "far" );
	deepEqual( Stem("farnblättern"), "farnblatt" );
	deepEqual( Stem("farnen"), "farn" );
	deepEqual( Stem("farren"), "farr" );
	deepEqual( Stem("fas"), "fas" );
	deepEqual( Stem("fasching"), "fasching" );
	deepEqual( Stem("faselnackt"), "faselnackt" );
	deepEqual( Stem("faseriges"), "faser" );
	deepEqual( Stem("fasern"), "fas" );
	deepEqual( Stem("fass"), "fass" );
	deepEqual( Stem("fässchen"), "fassch" );
	deepEqual( Stem("fasse"), "fass" );
	deepEqual( Stem("fassen"), "fass" );
	deepEqual( Stem("fässer"), "fass" );
	deepEqual( Stem("fasset"), "fasset" );
	deepEqual( Stem("fasslich"), "fasslich" );
	deepEqual( Stem("faßlich"), "fasslich" );
	deepEqual( Stem("fasst"), "fasst" );
	deepEqual( Stem("faßt"), "fasst" );
	deepEqual( Stem("fasste"), "fasst" );
	deepEqual( Stem("faßte"), "fasst" );
	deepEqual( Stem("fassten"), "fasst" );
	deepEqual( Stem("faßten"), "fasst" );
	deepEqual( Stem("fassung"), "fassung" );
	deepEqual( Stem("fassungen"), "fassung" );
	deepEqual( Stem("fassungskraft"), "fassungskraft" );
	deepEqual( Stem("fast"), "fast" );
	deepEqual( Stem("fasten"), "fast" );
	deepEqual( Stem("fastenopfer"), "fastenopf" );
	deepEqual( Stem("fastnacht"), "fastnacht" );
	deepEqual( Stem("fastnachtslüge"), "fastnachtslug" );
	deepEqual( Stem("fastnachtszeit"), "fastnachtszeit" );
	deepEqual( Stem("fasziniert"), "fasziniert" );
	deepEqual( Stem("fatale"), "fatal" );
	deepEqual( Stem("fatalen"), "fatal" );
	deepEqual( Stem("fatum"), "fatum" );
	deepEqual( Stem("fauchende"), "fauchend" );
	deepEqual( Stem("fauchte"), "faucht" );
	deepEqual( Stem("faul"), "faul" );
	deepEqual( Stem("faule"), "faul" );
	deepEqual( Stem("faulenzen"), "faulenz" );
	deepEqual( Stem("fauler"), "faul" );
	deepEqual( Stem("faulheit"), "faulheit" );
	deepEqual( Stem("faust"), "faust" );
	deepEqual( Stem("fäustchen"), "faustch" );
	deepEqual( Stem("fäuste"), "faust" );
	deepEqual( Stem("fäusten"), "faust" );
	deepEqual( Stem("faustgrosse"), "faustgross" );
	deepEqual( Stem("faustrechtes"), "faustrecht" );
	deepEqual( Stem("fauteuil"), "fauteuil" );
	deepEqual( Stem("fauteuils"), "fauteuil" );
	deepEqual( Stem("fax"), "fax" );
	deepEqual( Stem("faxen"), "fax" );
	deepEqual( Stem("fazit"), "fazit" );
	deepEqual( Stem("feature"), "featur" );
	deepEqual( Stem("febr"), "febr" );
	deepEqual( Stem("februar"), "februar" );
	deepEqual( Stem("fecht"), "fecht" );
	deepEqual( Stem("fechten"), "fecht" );
	deepEqual( Stem("fechtenden"), "fechtend" );
	deepEqual( Stem("fechtkunst"), "fechtkun" );
	deepEqual( Stem("fechtmeister"), "fechtmeist" );
	deepEqual( Stem("fechtschul"), "fechtschul" );
	deepEqual( Stem("feder"), "fed" );
	deepEqual( Stem("federführung"), "federfuhr" );
	deepEqual( Stem("federhüte"), "federhut" );
	deepEqual( Stem("federkraft"), "federkraft" );
	deepEqual( Stem("federlesens"), "federles" );
	deepEqual( Stem("federn"), "fed" );
	deepEqual( Stem("fee"), "fee" );
	deepEqual( Stem("feenhafte"), "feenhaft" );
	deepEqual( Stem("fegefeuer"), "fegefeu" );
	deepEqual( Stem("fegenden"), "fegend" );
	deepEqual( Stem("fegezeit"), "fegezeit" );
	deepEqual( Stem("fehl"), "fehl" );
	deepEqual( Stem("fehle"), "fehl" );
	deepEqual( Stem("fehlen"), "fehl" );
	deepEqual( Stem("fehler"), "fehl" );
	deepEqual( Stem("fehlern"), "fehl" );
	deepEqual( Stem("fehlete"), "fehlet" );
	deepEqual( Stem("fehlschlug"), "fehlschlug" );
	deepEqual( Stem("fehlschusses"), "fehlschuss" );
	deepEqual( Stem("fehlt"), "fehlt" );
	deepEqual( Stem("fehlte"), "fehlt" );
	deepEqual( Stem("fehlten"), "fehlt" );
	deepEqual( Stem("feier"), "feier" );
	deepEqual( Stem("feierabend"), "feierab" );
	deepEqual( Stem("feiere"), "feier" );
	deepEqual( Stem("feierlich"), "feierlich" );
	deepEqual( Stem("feierliche"), "feierlich" );
	deepEqual( Stem("feierlichen"), "feierlich" );
	deepEqual( Stem("feierlicher"), "feierlich" );
	deepEqual( Stem("feierliches"), "feierlich" );
	deepEqual( Stem("feiern"), "feiern" );
	deepEqual( Stem("feiert"), "feiert" );
	deepEqual( Stem("feiertage"), "feiertag" );
	deepEqual( Stem("feiertagen"), "feiertag" );
	deepEqual( Stem("feiertagsgwand"), "feiertagsgwand" );
	deepEqual( Stem("feiertagsröcken"), "feiertagsrock" );
	deepEqual( Stem("feierte"), "feiert" );
	deepEqual( Stem("feierten"), "feiert" );
	deepEqual( Stem("feig"), "feig" );
	deepEqual( Stem("feige"), "feig" );
	deepEqual( Stem("feigen"), "feig" );
	deepEqual( Stem("feigenbaum"), "feigenbaum" );
	deepEqual( Stem("feigenbäume"), "feigenbaum" );
	deepEqual( Stem("feigenbaumes"), "feigenbaum" );
	deepEqual( Stem("feigenbaums"), "feigenbaum" );
	deepEqual( Stem("feigenblätter"), "feigenblatt" );
	deepEqual( Stem("feigern"), "feig" );
	deepEqual( Stem("feigheit"), "feigheit" );
	deepEqual( Stem("feigling"), "feigling" );
	deepEqual( Stem("feigwarzen"), "feigwarz" );
	deepEqual( Stem("feilenstaub"), "feilenstaub" );
	deepEqual( Stem("fein"), "fein" );
	deepEqual( Stem("feind"), "feind" );
	deepEqual( Stem("feinde"), "feind" );
	deepEqual( Stem("feinden"), "feind" );
	deepEqual( Stem("feindes"), "feind" );
	deepEqual( Stem("feindin"), "feindin" );
	deepEqual( Stem("feindlich"), "feindlich" );
	deepEqual( Stem("feindlichen"), "feindlich" );
	deepEqual( Stem("feindschaft"), "feindschaft" );
	deepEqual( Stem("feindselig"), "feindsel" );
	deepEqual( Stem("feindseligen"), "feindsel" );
	deepEqual( Stem("feindseligkeit"), "feindsel" );
	deepEqual( Stem("feindseligkeiten"), "feindsel" );
	deepEqual( Stem("feine"), "fein" );
	deepEqual( Stem("feinem"), "fein" );
	deepEqual( Stem("feinen"), "fein" );
	deepEqual( Stem("feiner"), "fein" );
	deepEqual( Stem("feinere"), "fein" );
	deepEqual( Stem("feineren"), "fein" );
	deepEqual( Stem("feinern"), "fein" );
	deepEqual( Stem("feines"), "fein" );
	deepEqual( Stem("feinfühlend"), "feinfuhl" );
	deepEqual( Stem("feinschaft"), "feinschaft" );
	deepEqual( Stem("feinschmecker"), "feinschmeck" );
	deepEqual( Stem("feinsten"), "fein" );
	deepEqual( Stem("feist"), "feist" );
	deepEqual( Stem("feistes"), "feist" );
	deepEqual( Stem("feisthirsch"), "feisthirsch" );
	deepEqual( Stem("feistzeit"), "feistzeit" );
	deepEqual( Stem("feixt"), "feixt" );
	deepEqual( Stem("feld"), "feld" );
	deepEqual( Stem("felde"), "feld" );
	deepEqual( Stem("felder"), "feld" );
	deepEqual( Stem("feldern"), "feld" );
	deepEqual( Stem("felderzeugnis"), "felderzeugnis" );
	deepEqual( Stem("feldes"), "feld" );
	deepEqual( Stem("feldfrüchte"), "feldfrucht" );
	deepEqual( Stem("feldfutter"), "feldfutt" );
	deepEqual( Stem("feldgeschrei"), "feldgeschrei" );
	deepEqual( Stem("feldherde"), "feldherd" );
	deepEqual( Stem("feldherr"), "feldherr" );
	deepEqual( Stem("feldleutnant"), "feldleutnant" );
	deepEqual( Stem("feldprediger"), "feldpred" );
	deepEqual( Stem("feldrande"), "feldrand" );
	deepEqual( Stem("feldseite"), "feldseit" );
	deepEqual( Stem("feldsteinen"), "feldstein" );
	deepEqual( Stem("feldwebelsgang"), "feldwebelsgang" );
	deepEqual( Stem("feldweg"), "feldweg" );
	deepEqual( Stem("feldzug"), "feldzug" );
	deepEqual( Stem("feldzuges"), "feldzug" );
	deepEqual( Stem("felix"), "felix" );
	deepEqual( Stem("fell"), "fell" );
	deepEqual( Stem("fellchen"), "fellch" );
	deepEqual( Stem("felle"), "fell" );
	deepEqual( Stem("felleisen"), "felleis" );
	deepEqual( Stem("felleisenfuhrwerke"), "felleisenfuhrwerk" );
	deepEqual( Stem("felleisens"), "felleis" );
	deepEqual( Stem("fellen"), "fell" );
	deepEqual( Stem("fels"), "fel" );
	deepEqual( Stem("felsan"), "felsan" );
	deepEqual( Stem("felsblock"), "felsblock" );
	deepEqual( Stem("felsblöcke"), "felsblock" );
	deepEqual( Stem("felsen"), "fels" );
	deepEqual( Stem("felsenkette"), "felsenkett" );
	deepEqual( Stem("felsennase"), "felsennas" );
	deepEqual( Stem("felsentor"), "felsentor" );
	deepEqual( Stem("felsgestalten"), "felsgestalt" );
	deepEqual( Stem("felsgetürme"), "felsgeturm" );
	deepEqual( Stem("felskegel"), "felskegel" );
	deepEqual( Stem("felskolossen"), "felskoloss" );
	deepEqual( Stem("felsmassen"), "felsmass" );
	deepEqual( Stem("felsnase"), "felsnas" );
	deepEqual( Stem("felsplateau"), "felsplateau" );
	deepEqual( Stem("felsplatte"), "felsplatt" );
	deepEqual( Stem("felsplatten"), "felsplatt" );
	deepEqual( Stem("felssteine"), "felsstein" );
	deepEqual( Stem("felstisch"), "felstisch" );
	deepEqual( Stem("felswand"), "felswand" );
	deepEqual( Stem("felswänden"), "felswand" );
	deepEqual( Stem("felszacke"), "felszack" );
	deepEqual( Stem("femgesehen"), "femgeseh" );
	deepEqual( Stem("fenn"), "fenn" );
	deepEqual( Stem("fenster"), "fenst" );
	deepEqual( Stem("fensterbrett"), "fensterbrett" );
	deepEqual( Stem("fensterchen"), "fensterch" );
	deepEqual( Stem("fensterflügel"), "fensterflugel" );
	deepEqual( Stem("fenstern"), "fenst" );
	deepEqual( Stem("fensternische"), "fenstern" );
	deepEqual( Stem("fensterrand"), "fensterrand" );
	deepEqual( Stem("fensters"), "fenst" );
	deepEqual( Stem("fensterscheiben"), "fensterscheib" );
	deepEqual( Stem("fenstersimse"), "fenstersims" );
	deepEqual( Stem("fenstervorhänge"), "fenstervorhang" );
	deepEqual( Stem("fergus"), "fergus" );
	deepEqual( Stem("ferien"), "feri" );
	deepEqual( Stem("ferienjob"), "ferienjob" );
	deepEqual( Stem("ferienstübchens"), "ferienstubch" );
	deepEqual( Stem("feris"), "feris" );
	deepEqual( Stem("ferkelgequiek"), "ferkelgequiek" );
	deepEqual( Stem("fern"), "fern" );
	deepEqual( Stem("fernab"), "fernab" );
	deepEqual( Stem("ferne"), "fern" );
	deepEqual( Stem("fernem"), "fern" );
	deepEqual( Stem("fernen"), "fern" );
	deepEqual( Stem("ferner"), "fern" );
	deepEqual( Stem("fernere"), "fern" );
	deepEqual( Stem("ferneren"), "fern" );
	deepEqual( Stem("ferneres"), "fern" );
	deepEqual( Stem("fernerhin"), "fernerhin" );
	deepEqual( Stem("fernes"), "fern" );
	deepEqual( Stem("fernher"), "fernh" );
	deepEqual( Stem("fernrohr"), "fernrohr" );
	deepEqual( Stem("fernrohrs"), "fernrohr" );
	deepEqual( Stem("fernsehen"), "fernseh" );
	deepEqual( Stem("fernsichtige"), "fernsicht" );
	deepEqual( Stem("fernsten"), "fern" );
	deepEqual( Stem("ferse"), "fers" );
	deepEqual( Stem("fersen"), "fers" );
	deepEqual( Stem("fertig"), "fertig" );
	deepEqual( Stem("fertigbrachte"), "fertigbracht" );
	deepEqual( Stem("fertige"), "fertig" );
	deepEqual( Stem("fertigen"), "fertig" );
	deepEqual( Stem("fertiggestellt"), "fertiggestellt" );
	deepEqual( Stem("fertigzubringen"), "fertigzubring" );
	deepEqual( Stem("fesseln"), "fesseln" );
	deepEqual( Stem("fesselte"), "fesselt" );
	deepEqual( Stem("fest"), "fest" );
	deepEqual( Stem("festband"), "festband" );
	deepEqual( Stem("feste"), "fest" );
	deepEqual( Stem("festem"), "fest" );
	deepEqual( Stem("festen"), "fest" );
	deepEqual( Stem("fester"), "fest" );
	deepEqual( Stem("festerem"), "fest" );
	deepEqual( Stem("festes"), "fest" );
	deepEqual( Stem("festgebannt"), "festgebannt" );
	deepEqual( Stem("festgebauten"), "festgebaut" );
	deepEqual( Stem("festgebunden"), "festgebund" );
	deepEqual( Stem("festgehalten"), "festgehalt" );
	deepEqual( Stem("festgeklebt"), "festgeklebt" );
	deepEqual( Stem("festgeklemmt"), "festgeklemmt" );
	deepEqual( Stem("festgelegt"), "festgelegt" );
	deepEqual( Stem("festgemachte"), "festgemacht" );
	deepEqual( Stem("festgesetzte"), "festgesetzt" );
	deepEqual( Stem("festgestellt"), "festgestellt" );
	deepEqual( Stem("festgottesdienst"), "festgottesdien" );
	deepEqual( Stem("festhalten"), "festhalt" );
	deepEqual( Stem("festivitatum"), "festivitatum" );
	deepEqual( Stem("festland"), "festland" );
	deepEqual( Stem("festlich"), "festlich" );
	deepEqual( Stem("festlichen"), "festlich" );
	deepEqual( Stem("festmal"), "festmal" );
	deepEqual( Stem("festnahme"), "festnahm" );
	deepEqual( Stem("festnehmen"), "festnehm" );
	deepEqual( Stem("festpredigt"), "festpredigt" );
	deepEqual( Stem("festsaale"), "festsaal" );
	deepEqual( Stem("festschmaus"), "festschmaus" );
	deepEqual( Stem("festsetzt"), "festsetzt" );
	deepEqual( Stem("festsetzte"), "festsetzt" );
	deepEqual( Stem("festsetzten"), "festsetzt" );
	deepEqual( Stem("feststehende"), "feststeh" );
	deepEqual( Stem("feststellen"), "feststell" );
	deepEqual( Stem("feststellt"), "feststellt" );
	deepEqual( Stem("feststellung"), "feststell" );
	deepEqual( Stem("festung"), "festung" );
	deepEqual( Stem("festungen"), "festung" );
	deepEqual( Stem("festzuhalten"), "festzuhalt" );
	deepEqual( Stem("festzusetzen"), "festzusetz" );
	deepEqual( Stem("festzustellen"), "festzustell" );
	deepEqual( Stem("fett"), "fett" );
	deepEqual( Stem("fette"), "fett" );
	deepEqual( Stem("fetten"), "fett" );
	deepEqual( Stem("fetter"), "fett" );
	deepEqual( Stem("fettes"), "fett" );
	deepEqual( Stem("fettigkeit"), "fettig" );
	deepEqual( Stem("fettigkeiten"), "fettig" );
	deepEqual( Stem("fettwerden"), "fettwerd" );
	deepEqual( Stem("fetzchen"), "fetzch" );
	deepEqual( Stem("fetzel"), "fetzel" );
	deepEqual( Stem("fetzen"), "fetz" );
	deepEqual( Stem("feucht"), "feucht" );
	deepEqual( Stem("feuchten"), "feucht" );
	deepEqual( Stem("feuchtes"), "feucht" );
	deepEqual( Stem("feuer"), "feu" );
	deepEqual( Stem("feuerbauche"), "feuerbauch" );
	deepEqual( Stem("feuerberg"), "feuerberg" );
	deepEqual( Stem("feuerchen"), "feuerch" );
	deepEqual( Stem("feuerduft"), "feuerduft" );
	deepEqual( Stem("feuerfarben"), "feuerfarb" );
	deepEqual( Stem("feuerflamme"), "feuerflamm" );
	deepEqual( Stem("feuerflammen"), "feuerflamm" );
	deepEqual( Stem("feuerglanz"), "feuerglanz" );
	deepEqual( Stem("feuerherde"), "feuerherd" );
	deepEqual( Stem("feuerhölle"), "feuerholl" );
	deepEqual( Stem("feuerkohlen"), "feuerkohl" );
	deepEqual( Stem("feuern"), "feu" );
	deepEqual( Stem("feuerofen"), "feuerof" );
	deepEqual( Stem("feuerpfuhl"), "feuerpfuhl" );
	deepEqual( Stem("feuerrot"), "feuerrot" );
	deepEqual( Stem("feuerröte"), "feuerrot" );
	deepEqual( Stem("feuers"), "feu" );
	deepEqual( Stem("feuersäule"), "feuersaul" );
	deepEqual( Stem("feuersbrünsten"), "feuersbrun" );
	deepEqual( Stem("feuerschlacht"), "feuerschlacht" );
	deepEqual( Stem("feuerschlange"), "feuerschlang" );
	deepEqual( Stem("feuerspeienden"), "feuerspei" );
	deepEqual( Stem("feuerstrom"), "feuerstrom" );
	deepEqual( Stem("feuerung"), "feuer" );
	deepEqual( Stem("feuerwaffen"), "feuerwaff" );
	deepEqual( Stem("feuerwehrmann"), "feuerwehrmann" );
	deepEqual( Stem("feuerwerk"), "feuerwerk" );
	deepEqual( Stem("feuerzungen"), "feuerz" );
	deepEqual( Stem("feurig"), "feurig" );
	deepEqual( Stem("feurige"), "feurig" );
	deepEqual( Stem("feurigem"), "feurig" );
	deepEqual( Stem("feurigen"), "feurig" );
	deepEqual( Stem("feuriges"), "feurig" );
	deepEqual( Stem("feurigsten"), "feurig" );
	deepEqual( Stem("fiber"), "fib" );
	deepEqual( Stem("fiberchen"), "fiberch" );
	deepEqual( Stem("fibern"), "fib" );
	deepEqual( Stem("ficht"), "ficht" );
	deepEqual( Stem("fichten"), "ficht" );
	deepEqual( Stem("fichtenast"), "fichtenast" );
	deepEqual( Stem("fichtenbusch"), "fichtenbusch" );
	deepEqual( Stem("fichtenbüschlein"), "fichtenbuschlein" );
	deepEqual( Stem("fichtengebüsche"), "fichtengebusch" );
	deepEqual( Stem("fichtengestrüpp"), "fichtengestrupp" );
	deepEqual( Stem("fichtenwipfel"), "fichtenwipfel" );
	deepEqual( Stem("fichtenzweigen"), "fichtenzweig" );
	deepEqual( Stem("fidel"), "fidel" );
	deepEqual( Stem("fieber"), "fieb" );
	deepEqual( Stem("fieberhaft"), "fieberhaft" );
	deepEqual( Stem("fieberhaften"), "fieberhaft" );
	deepEqual( Stem("fiebernde"), "fiebernd" );
	deepEqual( Stem("fiebernder"), "fiebernd" );
	deepEqual( Stem("fieberte"), "fiebert" );
	deepEqual( Stem("fiedelmann"), "fiedelmann" );
	deepEqual( Stem("fiel"), "fiel" );
	deepEqual( Stem("fiele"), "fiel" );
	deepEqual( Stem("fielen"), "fiel" );
	deepEqual( Stem("figur"), "figur" );
	deepEqual( Stem("figürchen"), "figurch" );
	deepEqual( Stem("figuren"), "figur" );
	deepEqual( Stem("filiale"), "filial" );
	deepEqual( Stem("film"), "film" );
	deepEqual( Stem("filmfestival"), "filmfestival" );
	deepEqual( Stem("filmfirma"), "filmfirma" );
	deepEqual( Stem("filmversion"), "filmversion" );
	deepEqual( Stem("filz"), "filz" );
	deepEqual( Stem("filzhütchen"), "filzhutch" );
	deepEqual( Stem("filzkleider"), "filzkleid" );
	deepEqual( Stem("finanziell"), "finanziell" );
	deepEqual( Stem("finanzielle"), "finanziell" );
	deepEqual( Stem("finanziellen"), "finanziell" );
	deepEqual( Stem("finanzieren"), "finanzi" );
	deepEqual( Stem("finanziert"), "finanziert" );
	deepEqual( Stem("finanzleistungen"), "finanzleist" );
	deepEqual( Stem("finanzpolitisches"), "finanzpolit" );
	deepEqual( Stem("finanzstadt"), "finanzstadt" );
	deepEqual( Stem("find"), "find" );
	deepEqual( Stem("finde"), "find" );
	deepEqual( Stem("finden"), "find" );
	deepEqual( Stem("findende"), "findend" );
	deepEqual( Stem("finder"), "find" );
	deepEqual( Stem("findest"), "find" );
	deepEqual( Stem("findet"), "findet" );
	deepEqual( Stem("findige"), "findig" );
	deepEqual( Stem("findt"), "findt" );
	deepEqual( Stem("fing"), "fing" );
	deepEqual( Stem("fingen"), "fing" );
	deepEqual( Stem("finger"), "fing" );
	deepEqual( Stem("fingerabdruck"), "fingerabdruck" );
	deepEqual( Stem("fingerchen"), "fingerch" );
	deepEqual( Stem("fingerhut"), "fingerhut" );
	deepEqual( Stem("fingern"), "fing" );
	deepEqual( Stem("fingers"), "fing" );
	deepEqual( Stem("fingerspitzen"), "fingerspitz" );
	deepEqual( Stem("fingerstellung"), "fingerstell" );
	deepEqual( Stem("fink"), "fink" );
	deepEqual( Stem("finken"), "fink" );
	deepEqual( Stem("finster"), "finst" );
	deepEqual( Stem("finstere"), "finst" );
	deepEqual( Stem("finsteren"), "finst" );
	deepEqual( Stem("finsteres"), "finst" );
	deepEqual( Stem("finsterm"), "finsterm" );
	deepEqual( Stem("finstern"), "finst" );
	deepEqual( Stem("finsternis"), "finsternis" );
	deepEqual( Stem("finsternissen"), "finsternis" );
	deepEqual( Stem("finten"), "fint" );
	deepEqual( Stem("fir"), "fir" );
	deepEqual( Stem("firlefanz"), "firlefanz" );
	deepEqual( Stem("firma"), "firma" );
	deepEqual( Stem("firmen"), "firm" );
	deepEqual( Stem("first"), "first" );
	deepEqual( Stem("firste"), "first" );
	deepEqual( Stem("firti"), "firti" );
	deepEqual( Stem("fisch"), "fisch" );
	deepEqual( Stem("fischblattern"), "fischblatt" );
	deepEqual( Stem("fischchen"), "fischch" );
	deepEqual( Stem("fische"), "fisch" );
	deepEqual( Stem("fischeimer"), "fischeim" );
	deepEqual( Stem("fischen"), "fisch" );
	deepEqual( Stem("fischer"), "fisch" );
	deepEqual( Stem("fischerei"), "fischerei" );
	deepEqual( Stem("fischergeräte"), "fischergerat" );
	deepEqual( Stem("fischern"), "fisch" );
	deepEqual( Stem("fisches"), "fisch" );
	deepEqual( Stem("fischesser"), "fischess" );
	deepEqual( Stem("fischest"), "fisch" );
	deepEqual( Stem("fischgattungen"), "fischgatt" );
	deepEqual( Stem("fischlein"), "fischlein" );
	deepEqual( Stem("fish"), "fish" );
	deepEqual( Stem("fittiche"), "fittich" );
	deepEqual( Stem("fittichen"), "fittich" );
	deepEqual( Stem("fittichs"), "fittich" );
	deepEqual( Stem("fixe"), "fix" );
	deepEqual( Stem("fixen"), "fix" );
	deepEqual( Stem("fläche"), "flach" );
	deepEqual( Stem("flachen"), "flach" );
	deepEqual( Stem("flächen"), "flach" );
	deepEqual( Stem("flächendeckend"), "flachendeck" );
	deepEqual( Stem("flachs"), "flach" );
	deepEqual( Stem("flächsenen"), "flachs" );
	deepEqual( Stem("flachses"), "flachs" );
	deepEqual( Stem("flackernde"), "flackernd" );
	deepEqual( Stem("flackerten"), "flackert" );
	deepEqual( Stem("fladenkuchen"), "fladenkuch" );
	deepEqual( Stem("flair"), "flair" );
	deepEqual( Stem("flämmchen"), "flammch" );
	deepEqual( Stem("flamme"), "flamm" );
	deepEqual( Stem("flammen"), "flamm" );
	deepEqual( Stem("flammenbart"), "flammenbart" );
	deepEqual( Stem("flammende"), "flammend" );
	deepEqual( Stem("flammenden"), "flammend" );
	deepEqual( Stem("flammendes"), "flammend" );
	deepEqual( Stem("flammenmeer"), "flammenme" );
	deepEqual( Stem("flanke"), "flank" );
	deepEqual( Stem("fläschchen"), "flaschch" );
	deepEqual( Stem("flasche"), "flasch" );
	deepEqual( Stem("flaschen"), "flasch" );
	deepEqual( Stem("flats"), "flat" );
	deepEqual( Stem("flattergeräusch"), "flattergerausch" );
	deepEqual( Stem("flattern"), "flatt" );
	deepEqual( Stem("flatternde"), "flatternd" );
	deepEqual( Stem("flatternden"), "flatternd" );
	deepEqual( Stem("flatterspiel"), "flatterspiel" );
	deepEqual( Stem("flatterte"), "flattert" );
	deepEqual( Stem("flatterten"), "flattert" );
	deepEqual( Stem("flaum"), "flaum" );
	deepEqual( Stem("flaumkissen"), "flaumkiss" );
	deepEqual( Stem("flavio"), "flavio" );
	deepEqual( Stem("flechte"), "flecht" );
	deepEqual( Stem("flechtenfelde"), "flechtenfeld" );
	deepEqual( Stem("flechtengetrümmer"), "flechtengetrumm" );
	deepEqual( Stem("fleck"), "fleck" );
	deepEqual( Stem("fleckchen"), "fleckch" );
	deepEqual( Stem("flecken"), "fleck" );
	deepEqual( Stem("fledermäuschen"), "fledermausch" );
	deepEqual( Stem("flegelei"), "flegelei" );
	deepEqual( Stem("flehen"), "fleh" );
	deepEqual( Stem("flehend"), "flehend" );
	deepEqual( Stem("flehenden"), "flehend" );
	deepEqual( Stem("flehens"), "fleh" );
	deepEqual( Stem("flehet"), "flehet" );
	deepEqual( Stem("fleht"), "fleht" );
	deepEqual( Stem("flehte"), "fleht" );
	deepEqual( Stem("fleisch"), "fleisch" );
	deepEqual( Stem("fleischbrühe"), "fleischbruh" );
	deepEqual( Stem("fleische"), "fleisch" );
	deepEqual( Stem("fleischer"), "fleisch" );
	deepEqual( Stem("fleischermesser"), "fleischermess" );
	deepEqual( Stem("fleisches"), "fleisch" );
	deepEqual( Stem("fleischigem"), "fleischig" );
	deepEqual( Stem("fleischlich"), "fleischlich" );
	deepEqual( Stem("fleischliche"), "fleischlich" );
	deepEqual( Stem("fleischlichen"), "fleischlich" );
	deepEqual( Stem("fleiss"), "fleiss" );
	deepEqual( Stem("fleiß"), "fleiss" );
	deepEqual( Stem("fleissig"), "fleissig" );
	deepEqual( Stem("fleißig"), "fleissig" );
	deepEqual( Stem("fleissigen"), "fleissig" );
	deepEqual( Stem("fleissiger"), "fleissig" );
	deepEqual( Stem("fleißiger"), "fleissig" );
	deepEqual( Stem("fleissigsten"), "fleissig" );
	deepEqual( Stem("fleißigsten"), "fleissig" );
	deepEqual( Stem("fletschte"), "fletscht" );
	deepEqual( Stem("flicht"), "flicht" );
	deepEqual( Stem("flickte"), "flickt" );
	deepEqual( Stem("fliederbusch"), "fliederbusch" );
	deepEqual( Stem("fliederwerk"), "fliederwerk" );
	deepEqual( Stem("fliege"), "flieg" );
	deepEqual( Stem("fliegeliedchen"), "fliegeliedch" );
	deepEqual( Stem("fliegen"), "flieg" );
	deepEqual( Stem("fliegend"), "fliegend" );
	deepEqual( Stem("fliegende"), "fliegend" );
	deepEqual( Stem("fliegenden"), "fliegend" );
	deepEqual( Stem("fliegender"), "fliegend" );
	deepEqual( Stem("fliegenmutter"), "fliegenmutt" );
	deepEqual( Stem("fliegt"), "fliegt" );
	deepEqual( Stem("fliehen"), "flieh" );
	deepEqual( Stem("fliehet"), "fliehet" );
	deepEqual( Stem("flieht"), "flieht" );
	deepEqual( Stem("fliese"), "flies" );
	deepEqual( Stem("fliesen"), "flies" );
	deepEqual( Stem("fliessen"), "fliess" );
	deepEqual( Stem("fließen"), "fliess" );
	deepEqual( Stem("fliessende"), "fliessend" );
	deepEqual( Stem("fliessendes"), "fliessend" );
	deepEqual( Stem("fliesst"), "fliesst" );
	deepEqual( Stem("fließt"), "fliesst" );
	deepEqual( Stem("flimmerte"), "flimmert" );
	deepEqual( Stem("flink"), "flink" );
	deepEqual( Stem("flinke"), "flink" );
	deepEqual( Stem("flinker"), "flink" );
	deepEqual( Stem("flinkfüssigen"), "flinkfuss" );
	deepEqual( Stem("flinten"), "flint" );
	deepEqual( Stem("flittchen"), "flittch" );
	deepEqual( Stem("flittergoldes"), "flittergold" );
	deepEqual( Stem("flitterstaat"), "flitterstaat" );
	deepEqual( Stem("flocht"), "flocht" );
	deepEqual( Stem("flochten"), "flocht" );
	deepEqual( Stem("flocke"), "flock" );
	deepEqual( Stem("flocken"), "flock" );
	deepEqual( Stem("flog"), "flog" );
	deepEqual( Stem("flogen"), "flog" );
	deepEqual( Stem("flögen"), "flog" );
	deepEqual( Stem("floh"), "floh" );
	deepEqual( Stem("flohen"), "floh" );
	deepEqual( Stem("flor"), "flor" );
	deepEqual( Stem("florenz"), "florenz" );
	deepEqual( Stem("florian"), "florian" );
	deepEqual( Stem("floss"), "floss" );
	deepEqual( Stem("floß"), "floss" );
	deepEqual( Stem("flossen"), "floss" );
	deepEqual( Stem("flössen"), "floss" );
	deepEqual( Stem("flößen"), "floss" );
	deepEqual( Stem("flösste"), "flosst" );
	deepEqual( Stem("flöte"), "flot" );
	deepEqual( Stem("flöten"), "flot" );
	deepEqual( Stem("flötenden"), "flotend" );
	deepEqual( Stem("flötenspieler"), "flotenspiel" );
	deepEqual( Stem("flottmachen"), "flottmach" );
	deepEqual( Stem("fluch"), "fluch" );
	deepEqual( Stem("flüche"), "fluch" );
	deepEqual( Stem("fluchen"), "fluch" );
	deepEqual( Stem("fluchens"), "fluch" );
	deepEqual( Stem("flucht"), "flucht" );
	deepEqual( Stem("fluchte"), "flucht" );
	deepEqual( Stem("fluchten"), "flucht" );
	deepEqual( Stem("flüchteten"), "fluchtet" );
	deepEqual( Stem("fluchtgedanken"), "fluchtgedank" );
	deepEqual( Stem("fluchtgelder"), "fluchtgeld" );
	deepEqual( Stem("flüchtig"), "fluchtig" );
	deepEqual( Stem("flüchtige"), "fluchtig" );
	deepEqual( Stem("flüchtigem"), "fluchtig" );
	deepEqual( Stem("flüchtigen"), "fluchtig" );
	deepEqual( Stem("flüchtiger"), "fluchtig" );
	deepEqual( Stem("flüchtiges"), "fluchtig" );
	deepEqual( Stem("flüchtigsten"), "fluchtig" );
	deepEqual( Stem("flüchtling"), "fluchtling" );
	deepEqual( Stem("flüchtlinge"), "fluchtling" );
	deepEqual( Stem("flüchtlingscamp"), "fluchtlingscamp" );
	deepEqual( Stem("flüchtlingslager"), "fluchtlingslag" );
	deepEqual( Stem("flüchtlingslagers"), "fluchtlingslag" );
	deepEqual( Stem("fluchtriss"), "fluchtriss" );
	deepEqual( Stem("flug"), "flug" );
	deepEqual( Stem("fluge"), "flug" );
	deepEqual( Stem("flügel"), "flugel" );
	deepEqual( Stem("flügelchen"), "flugelch" );
	deepEqual( Stem("flügelein"), "flugelein" );
	deepEqual( Stem("flügelmann"), "flugelmann" );
	deepEqual( Stem("flügeln"), "flugeln" );
	deepEqual( Stem("flügelschläge"), "flugelschlag" );
	deepEqual( Stem("flügeltüren"), "flugeltur" );
	deepEqual( Stem("flügelzuge"), "flugelzug" );
	deepEqual( Stem("fluggästen"), "fluggast" );
	deepEqual( Stem("flügge"), "flugg" );
	deepEqual( Stem("flüggen"), "flugg" );
	deepEqual( Stem("fluggesellschaft"), "fluggesellschaft" );
	deepEqual( Stem("flughafen"), "flughaf" );
	deepEqual( Stem("flughafengebäude"), "flughafengebaud" );
	deepEqual( Stem("flughafenpolizei"), "flughafenpolizei" );
	deepEqual( Stem("flughafens"), "flughaf" );
	deepEqual( Stem("flugmaschinchen"), "flugmaschinch" );
	deepEqual( Stem("flugmaschinen"), "flugmaschin" );
	deepEqual( Stem("flugplatz"), "flugplatz" );
	deepEqual( Stem("flugs"), "flug" );
	deepEqual( Stem("flugzeug"), "flugzeug" );
	deepEqual( Stem("fluktuationsrate"), "fluktuationsrat" );
	deepEqual( Stem("flur"), "flur" );
	deepEqual( Stem("flure"), "flur" );
	deepEqual( Stem("fluren"), "flur" );
	deepEqual( Stem("fluss"), "fluss" );
	deepEqual( Stem("fluß"), "fluss" );
	deepEqual( Stem("flusse"), "fluss" );
	deepEqual( Stem("flüsse"), "fluss" );
	deepEqual( Stem("flüssen"), "fluss" );
	deepEqual( Stem("flusses"), "fluss" );
	deepEqual( Stem("flüstern"), "flust" );
	deepEqual( Stem("flüsternde"), "flusternd" );
	deepEqual( Stem("flüstert"), "flustert" );
	deepEqual( Stem("flüsterte"), "flustert" );
	deepEqual( Stem("flüsterten"), "flustert" );
	deepEqual( Stem("flut"), "flut" );
	deepEqual( Stem("fluten"), "flut" );
	deepEqual( Stem("focht"), "focht" );
	deepEqual( Stem("focis"), "focis" );
	deepEqual( Stem("fodern"), "fod" );
	deepEqual( Stem("foemina"), "foemina" );
	deepEqual( Stem("föhnstiefel"), "fohnstiefel" );
	deepEqual( Stem("föhre"), "fohr" );
	deepEqual( Stem("föhrenstrunke"), "fohrenstrunk" );
	deepEqual( Stem("folg"), "folg" );
	deepEqual( Stem("folge"), "folg" );
	deepEqual( Stem("folgen"), "folg" );
	deepEqual( Stem("folgend"), "folgend" );
	deepEqual( Stem("folgende"), "folgend" );
	deepEqual( Stem("folgendem"), "folgend" );
	deepEqual( Stem("folgenden"), "folgend" );
	deepEqual( Stem("folgender"), "folgend" );
	deepEqual( Stem("folgendermassen"), "folgendermass" );
	deepEqual( Stem("folgendermaßen"), "folgendermass" );
	deepEqual( Stem("folgendes"), "folgend" );
	deepEqual( Stem("folgern"), "folg" );
	deepEqual( Stem("folgerung"), "folger" );
	deepEqual( Stem("folgerungen"), "folger" );
	deepEqual( Stem("folget"), "folget" );
	deepEqual( Stem("folgezeit"), "folgezeit" );
	deepEqual( Stem("folglich"), "folglich" );
	deepEqual( Stem("folgsam"), "folgsam" );
	deepEqual( Stem("folgsames"), "folgsam" );
	deepEqual( Stem("folgsamkeit"), "folgsam" );
	deepEqual( Stem("folgt"), "folgt" );
	deepEqual( Stem("folgte"), "folgt" );
	deepEqual( Stem("folgten"), "folgt" );
	deepEqual( Stem("folie"), "foli" );
	deepEqual( Stem("folter"), "folt" );
	deepEqual( Stem("foltern"), "folt" );
	deepEqual( Stem("fonds"), "fond" );
	deepEqual( Stem("fontenelle"), "fontenell" );
	deepEqual( Stem("foppe"), "fopp" );
	deepEqual( Stem("for"), "for" );
	deepEqual( Stem("force"), "forc" );
	deepEqual( Stem("fordere"), "ford" );
	deepEqual( Stem("förderer"), "ford" );
	deepEqual( Stem("fordern"), "ford" );
	deepEqual( Stem("fördern"), "ford" );
	deepEqual( Stem("fordert"), "fordert" );
	deepEqual( Stem("forderten"), "fordert" );
	deepEqual( Stem("forderung"), "forder" );
	deepEqual( Stem("forderungen"), "forder" );
	deepEqual( Stem("forelle"), "forell" );
	deepEqual( Stem("forellen"), "forell" );
	deepEqual( Stem("foren"), "for" );
	deepEqual( Stem("form"), "form" );
	deepEqual( Stem("formal"), "formal" );
	deepEqual( Stem("formalen"), "formal" );
	deepEqual( Stem("formaler"), "formal" );
	deepEqual( Stem("formalien"), "formali" );
	deepEqual( Stem("formationen"), "formation" );
	deepEqual( Stem("formel"), "formel" );
	deepEqual( Stem("formell"), "formell" );
	deepEqual( Stem("formelle"), "formell" );
	deepEqual( Stem("formeln"), "formeln" );
	deepEqual( Stem("formen"), "form" );
	deepEqual( Stem("formenwesens"), "formenwes" );
	deepEqual( Stem("formierte"), "formiert" );
	deepEqual( Stem("formierten"), "formiert" );
	deepEqual( Stem("förmig"), "formig" );
	deepEqual( Stem("förmlich"), "formlich" );
	deepEqual( Stem("förmliche"), "formlich" );
	deepEqual( Stem("förmlichen"), "formlich" );
	deepEqual( Stem("förmlichkeit"), "formlich" );
	deepEqual( Stem("formulieren"), "formuli" );
	deepEqual( Stem("formulierung"), "formulier" );
	deepEqual( Stem("forschen"), "forsch" );
	deepEqual( Stem("forschend"), "forschend" );
	deepEqual( Stem("forschende"), "forschend" );
	deepEqual( Stem("forscherin"), "forscherin" );
	deepEqual( Stem("forschung"), "forschung" );
	deepEqual( Stem("forschungen"), "forschung" );
	deepEqual( Stem("förster"), "forst" );
	deepEqual( Stem("försterbart"), "forsterbart" );
	deepEqual( Stem("försterin"), "forsterin" );
	deepEqual( Stem("forstgehilfen"), "forstgehilf" );
	deepEqual( Stem("forsthaus"), "forsthaus" );
	deepEqual( Stem("forsthauses"), "forsthaus" );
	deepEqual( Stem("forstmannsuniformen"), "forstmannsuniform" );
	deepEqual( Stem("forstmeister"), "forstmeist" );
	deepEqual( Stem("forstverwaltung"), "forstverwalt" );
	deepEqual( Stem("fort"), "fort" );
	deepEqual( Stem("fortan"), "fortan" );
	deepEqual( Stem("fortbestand"), "fortbestand" );
	deepEqual( Stem("fortbestehen"), "fortbesteh" );
	deepEqual( Stem("fortbetrieb"), "fortbetrieb" );
	deepEqual( Stem("fortbewegte"), "fortbewegt" );
	deepEqual( Stem("fortdauer"), "fortdau" );
	deepEqual( Stem("fortdauern"), "fortdau" );
	deepEqual( Stem("fortdauernde"), "fortdauernd" );
	deepEqual( Stem("fortdauernden"), "fortdauernd" );
	deepEqual( Stem("fortdauert"), "fortdauert" );
	deepEqual( Stem("fortdauerten"), "fortdauert" );
	deepEqual( Stem("fortfahren"), "fortfahr" );
	deepEqual( Stem("fortfahrend"), "fortfahr" );
	deepEqual( Stem("fortflog"), "fortflog" );
	deepEqual( Stem("fortfuhr"), "fortfuhr" );
	deepEqual( Stem("fortführte"), "fortfuhrt" );
	deepEqual( Stem("fortgang"), "fortgang" );
	deepEqual( Stem("fortgange"), "fortgang" );
	deepEqual( Stem("fortgeführt"), "fortgefuhrt" );
	deepEqual( Stem("fortgegangen"), "fortgegang" );
	deepEqual( Stem("fortgeh"), "fortgeh" );
	deepEqual( Stem("fortgehen"), "fortgeh" );
	deepEqual( Stem("fortgehend"), "fortgeh" );
	deepEqual( Stem("fortgehender"), "fortgeh" );
	deepEqual( Stem("fortgejagt"), "fortgejagt" );
	deepEqual( Stem("fortgeleitet"), "fortgeleitet" );
	deepEqual( Stem("fortgepflanzt"), "fortgepflanzt" );
	deepEqual( Stem("fortgepustet"), "fortgepustet" );
	deepEqual( Stem("fortgeritten"), "fortgeritt" );
	deepEqual( Stem("fortgerückt"), "fortgeruckt" );
	deepEqual( Stem("fortgesetzt"), "fortgesetzt" );
	deepEqual( Stem("fortgesetzte"), "fortgesetzt" );
	deepEqual( Stem("fortgesetzten"), "fortgesetzt" );
	deepEqual( Stem("fortgetrieben"), "fortgetrieb" );
	deepEqual( Stem("fortgeworfen"), "fortgeworf" );
	deepEqual( Stem("fortgezogen"), "fortgezog" );
	deepEqual( Stem("fortging"), "fortging" );
	deepEqual( Stem("fortkomme"), "fortkomm" );
	deepEqual( Stem("fortkommen"), "fortkomm" );
	deepEqual( Stem("fortlassen"), "fortlass" );
	deepEqual( Stem("fortlaufend"), "fortlauf" );
	deepEqual( Stem("fortlaufende"), "fortlauf" );
	deepEqual( Stem("fortlaufenden"), "fortlauf" );
	deepEqual( Stem("fortleben"), "fortleb" );
	deepEqual( Stem("fortlebend"), "fortleb" );
	deepEqual( Stem("fortpflanzung"), "fortpflanz" );
	deepEqual( Stem("fortpflanzungen"), "fortpflanz" );
	deepEqual( Stem("fortreisst"), "fortreisst" );
	deepEqual( Stem("fortreißt"), "fortreisst" );
	deepEqual( Stem("fortriss"), "fortriss" );
	deepEqual( Stem("fortriß"), "fortriss" );
	deepEqual( Stem("fortschickte"), "fortschickt" );
	deepEqual( Stem("fortschreite"), "fortschreit" );
	deepEqual( Stem("fortschreiten"), "fortschreit" );
	deepEqual( Stem("fortschreitend"), "fortschreit" );
	deepEqual( Stem("fortschreitende"), "fortschreit" );
	deepEqual( Stem("fortschreitens"), "fortschreit" );
	deepEqual( Stem("fortschreitet"), "fortschreitet" );
	deepEqual( Stem("fortschreitung"), "fortschreit" );
	deepEqual( Stem("fortschritt"), "fortschritt" );
	deepEqual( Stem("fortschritte"), "fortschritt" );
	deepEqual( Stem("fortschritten"), "fortschritt" );
	deepEqual( Stem("fortsetzen"), "fortsetz" );
	deepEqual( Stem("fortsetzte"), "fortsetzt" );
	deepEqual( Stem("fortsetzung"), "fortsetz" );
	deepEqual( Stem("forttragen"), "forttrag" );
	deepEqual( Stem("forttreiben"), "forttreib" );
	deepEqual( Stem("fortuna"), "fortuna" );
	deepEqual( Stem("fortwährend"), "fortwahr" );
	deepEqual( Stem("fortwährende"), "fortwahr" );
	deepEqual( Stem("fortwährenden"), "fortwahr" );
	deepEqual( Stem("fortwährender"), "fortwahr" );
	deepEqual( Stem("fortwährendes"), "fortwahr" );
	deepEqual( Stem("fortwarf"), "fortwarf" );
	deepEqual( Stem("fortwuchern"), "fortwuch" );
	deepEqual( Stem("fortzeugen"), "fortzeug" );
	deepEqual( Stem("fortzog"), "fortzog" );
	deepEqual( Stem("fortzubewegen"), "fortzubeweg" );
	deepEqual( Stem("fortzureissen"), "fortzureiss" );
	deepEqual( Stem("fortzuscheuchen"), "fortzuscheuch" );
	deepEqual( Stem("fortzusetzen"), "fortzusetz" );
	deepEqual( Stem("forum"), "forum" );
	deepEqual( Stem("forumein"), "forumein" );
	deepEqual( Stem("fotografiert"), "fotografiert" );
	deepEqual( Stem("fotomodell"), "fotomodell" );
	deepEqual( Stem("fotos"), "fotos" );
	deepEqual( Stem("foyer"), "foy" );
	deepEqual( Stem("frack"), "frack" );
	deepEqual( Stem("frag"), "frag" );
	deepEqual( Stem("frage"), "frag" );
	deepEqual( Stem("fragebogen"), "fragebog" );
	deepEqual( Stem("fragen"), "frag" );
	deepEqual( Stem("fragend"), "fragend" );
	deepEqual( Stem("fraget"), "fraget" );
	deepEqual( Stem("fragliche"), "fraglich" );
	deepEqual( Stem("fraglichen"), "fraglich" );
	deepEqual( Stem("fragsucht"), "fragsucht" );
	deepEqual( Stem("fragt"), "fragt" );
	deepEqual( Stem("fragte"), "fragt" );
	deepEqual( Stem("fragten"), "fragt" );
	deepEqual( Stem("françois"), "françois" );
	deepEqual( Stem("frank"), "frank" );
	deepEqual( Stem("franken"), "frank" );
	deepEqual( Stem("frankfurt"), "frankfurt" );
	deepEqual( Stem("frankierten"), "frankiert" );
	deepEqual( Stem("frankreich"), "frankreich" );
	deepEqual( Stem("frankreichs"), "frankreich" );
	deepEqual( Stem("fransen"), "frans" );
	deepEqual( Stem("franz"), "franz" );
	deepEqual( Stem("franzens"), "franz" );
	deepEqual( Stem("franziskus"), "franziskus" );
	deepEqual( Stem("franzl"), "franzl" );
	deepEqual( Stem("franzosen"), "franzos" );
	deepEqual( Stem("französisch"), "franzos" );
	deepEqual( Stem("französische"), "franzos" );
	deepEqual( Stem("französischen"), "franzos" );
	deepEqual( Stem("französischer"), "franzos" );
	deepEqual( Stem("frass"), "frass" );
	deepEqual( Stem("frassen"), "frass" );
	deepEqual( Stem("fraßen"), "frass" );
	deepEqual( Stem("frau"), "frau" );
	deepEqual( Stem("frauchen"), "frauch" );
	deepEqual( Stem("frauen"), "frau" );
	deepEqual( Stem("frauenbild"), "frauenbild" );
	deepEqual( Stem("frauenbund"), "frauenbund" );
	deepEqual( Stem("frauenbusen"), "frauenbus" );
	deepEqual( Stem("frauenfahrzeug"), "frauenfahrzeug" );
	deepEqual( Stem("frauengemütes"), "frauengemut" );
	deepEqual( Stem("frauengesichter"), "frauengesicht" );
	deepEqual( Stem("frauenhilfe"), "frauenhilf" );
	deepEqual( Stem("frauenkirche"), "frauenkirch" );
	deepEqual( Stem("frauenkleider"), "frauenkleid" );
	deepEqual( Stem("frauenmund"), "frauenmund" );
	deepEqual( Stem("frauennamen"), "frauennam" );
	deepEqual( Stem("frauensarg"), "frauensarg" );
	deepEqual( Stem("frauensleute"), "frauensleut" );
	deepEqual( Stem("frauensperson"), "frauensperson" );
	deepEqual( Stem("frauenstimmen"), "frauenstimm" );
	deepEqual( Stem("frauentums"), "frauentum" );
	deepEqual( Stem("frauenzimmer"), "frauenzimm" );
	deepEqual( Stem("frauenzimmerchen"), "frauenzimmerch" );
	deepEqual( Stem("frauenzimmern"), "frauenzimm" );
	deepEqual( Stem("frauenzimmers"), "frauenzimm" );
	deepEqual( Stem("fräulein"), "fraulein" );
	deepEqual( Stem("fräuleins"), "fraulein" );
	deepEqual( Stem("freakszene"), "freaksz" );
	deepEqual( Stem("frech"), "frech" );
	deepEqual( Stem("freche"), "frech" );
	deepEqual( Stem("frechen"), "frech" );
	deepEqual( Stem("frecher"), "frech" );
	deepEqual( Stem("freches"), "frech" );
	deepEqual( Stem("frechheit"), "frechheit" );
	deepEqual( Stem("frechheiten"), "frechheit" );
	deepEqual( Stem("frechste"), "frech" );
	deepEqual( Stem("frechstem"), "frech" );
	deepEqual( Stem("frechsten"), "frech" );
	deepEqual( Stem("free"), "free" );
	deepEqual( Stem("frei"), "frei" );
	deepEqual( Stem("freiblieb"), "freiblieb" );
	deepEqual( Stem("freiburg"), "freiburg" );
	deepEqual( Stem("freiburger"), "freiburg" );
	deepEqual( Stem("freie"), "freie" );
	deepEqual( Stem("freiem"), "freiem" );
	deepEqual( Stem("freien"), "freien" );
	deepEqual( Stem("freier"), "freier" );
	deepEqual( Stem("freiern"), "freiern" );
	deepEqual( Stem("freiersleuten"), "freiersleut" );
	deepEqual( Stem("freies"), "freies" );
	deepEqual( Stem("freigebe"), "freigeb" );
	deepEqual( Stem("freigeben"), "freigeb" );
	deepEqual( Stem("freigebig"), "freigeb" );
	deepEqual( Stem("freigebiger"), "freigeb" );
	deepEqual( Stem("freigegeben"), "freigegeb" );
	deepEqual( Stem("freigelassen"), "freigelass" );
	deepEqual( Stem("freiheit"), "freiheit" );
	deepEqual( Stem("freiheiten"), "freiheit" );
	deepEqual( Stem("freiheitliche"), "freiheit" );
	deepEqual( Stem("freilassen"), "freilass" );
	deepEqual( Stem("freilich"), "freilich" );
	deepEqual( Stem("freiliessen"), "freiliess" );
	deepEqual( Stem("freiließen"), "freiliess" );
	deepEqual( Stem("freimännin"), "freimannin" );
	deepEqual( Stem("freimanns"), "freimann" );
	deepEqual( Stem("freimannsenkelin"), "freimannsenkelin" );
	deepEqual( Stem("freimannshäusl"), "freimannshausl" );
	deepEqual( Stem("freischaren"), "freischar" );
	deepEqual( Stem("freischärler"), "freischarl" );
	deepEqual( Stem("freisinnig"), "freisinn" );
	deepEqual( Stem("freisinnigen"), "freisinn" );
	deepEqual( Stem("freisinnigkeit"), "freisinn" );
	deepEqual( Stem("freitag"), "freitag" );
	deepEqual( Stem("freitreppe"), "freitrepp" );
	deepEqual( Stem("freiwillig"), "freiwill" );
	deepEqual( Stem("freiwillige"), "freiwill" );
	deepEqual( Stem("freiwilligem"), "freiwill" );
	deepEqual( Stem("freiwilligen"), "freiwill" );
	deepEqual( Stem("freiwilliger"), "freiwill" );
	deepEqual( Stem("freiwilliges"), "freiwill" );
	deepEqual( Stem("freiwilligkeit"), "freiwill" );
	deepEqual( Stem("freizügern"), "freizug" );
	deepEqual( Stem("freizulassen"), "freizulass" );
	deepEqual( Stem("freizustellen"), "freizustell" );
	deepEqual( Stem("frelmännin"), "frelmannin" );
	deepEqual( Stem("fremd"), "fremd" );
	deepEqual( Stem("fremdartig"), "fremdart" );
	deepEqual( Stem("fremdartigen"), "fremdart" );
	deepEqual( Stem("fremdartiger"), "fremdart" );
	deepEqual( Stem("fremdartigkeit"), "fremdart" );
	deepEqual( Stem("fremde"), "fremd" );
	deepEqual( Stem("fremden"), "fremd" );
	deepEqual( Stem("fremder"), "fremd" );
	deepEqual( Stem("fremdes"), "fremd" );
	deepEqual( Stem("fremdling"), "fremdling" );
	deepEqual( Stem("fremdlinge"), "fremdling" );
	deepEqual( Stem("freskomalereien"), "freskomalerei" );
	deepEqual( Stem("fress"), "fress" );
	deepEqual( Stem("fresse"), "fress" );
	deepEqual( Stem("fressen"), "fress" );
	deepEqual( Stem("fresser"), "fress" );
	deepEqual( Stem("freud"), "freud" );
	deepEqual( Stem("freude"), "freud" );
	deepEqual( Stem("freuden"), "freud" );
	deepEqual( Stem("freudenähnliches"), "freudenahn" );
	deepEqual( Stem("freudenberg"), "freudenberg" );
	deepEqual( Stem("freudenfest"), "freudenf" );
	deepEqual( Stem("freudenreichen"), "freudenreich" );
	deepEqual( Stem("freudenruf"), "freudenruf" );
	deepEqual( Stem("freudenrufs"), "freudenruf" );
	deepEqual( Stem("freudenschüsse"), "freudenschuss" );
	deepEqual( Stem("freudentage"), "freudentag" );
	deepEqual( Stem("freudentanz"), "freudentanz" );
	deepEqual( Stem("freudestrahlend"), "freudestrahl" );
	deepEqual( Stem("freudig"), "freudig" );
	deepEqual( Stem("freudigem"), "freudig" );
	deepEqual( Stem("freudigen"), "freudig" );
	deepEqual( Stem("freudiger"), "freudig" );
	deepEqual( Stem("freudigkeit"), "freudig" );
	deepEqual( Stem("freue"), "freu" );
	deepEqual( Stem("freuen"), "freu" );
	deepEqual( Stem("freuend"), "freuend" );
	deepEqual( Stem("freuet"), "freuet" );
	deepEqual( Stem("freuete"), "freuet" );
	deepEqual( Stem("freund"), "freund" );
	deepEqual( Stem("freunde"), "freund" );
	deepEqual( Stem("freunden"), "freund" );
	deepEqual( Stem("freundes"), "freund" );
	deepEqual( Stem("freundesarme"), "freundesarm" );
	deepEqual( Stem("freundin"), "freundin" );
	deepEqual( Stem("freundinnen"), "freundinn" );
	deepEqual( Stem("freundlich"), "freundlich" );
	deepEqual( Stem("freundliche"), "freundlich" );
	deepEqual( Stem("freundlichem"), "freundlich" );
	deepEqual( Stem("freundlichen"), "freundlich" );
	deepEqual( Stem("freundlicher"), "freundlich" );
	deepEqual( Stem("freundliches"), "freundlich" );
	deepEqual( Stem("freundlichkeit"), "freundlich" );
	deepEqual( Stem("freundlichste"), "freundlich" );
	deepEqual( Stem("freundnachbarliche"), "freundnachbar" );
	deepEqual( Stem("freundschaft"), "freundschaft" );
	deepEqual( Stem("freundschaftlich"), "freundschaft" );
	deepEqual( Stem("freundschaftlichen"), "freundschaft" );
	deepEqual( Stem("freut"), "freut" );
	deepEqual( Stem("freute"), "freut" );
	deepEqual( Stem("freuten"), "freut" );
	deepEqual( Stem("frevel"), "frevel" );
	deepEqual( Stem("frevelhaft"), "frevelhaft" );
	deepEqual( Stem("frevels"), "frevel" );
	deepEqual( Stem("fridolin"), "fridolin" );
	deepEqual( Stem("fridolins"), "fridolin" );
	deepEqual( Stem("friede"), "fried" );
	deepEqual( Stem("frieden"), "fried" );
	deepEqual( Stem("friedens"), "fried" );
	deepEqual( Stem("friedensbewegung"), "friedensbeweg" );
	deepEqual( Stem("friedensbruch"), "friedensbruch" );
	deepEqual( Stem("friedensbund"), "friedensbund" );
	deepEqual( Stem("friedensopfers"), "friedensopf" );
	deepEqual( Stem("friedensprodukte"), "friedensprodukt" );
	deepEqual( Stem("friedensrichter"), "friedensricht" );
	deepEqual( Stem("friedensruhe"), "friedensruh" );
	deepEqual( Stem("friedenszeiten"), "friedenszeit" );
	deepEqual( Stem("friedfertig"), "friedfert" );
	deepEqual( Stem("friedfertigen"), "friedfert" );
	deepEqual( Stem("friedfertiges"), "friedfert" );
	deepEqual( Stem("friedfertigkeit"), "friedfert" );
	deepEqual( Stem("friedhofscafe"), "friedhofscaf" );
	deepEqual( Stem("friedhofsmauer"), "friedhofsmau" );
	deepEqual( Stem("friedlich"), "friedlich" );
	deepEqual( Stem("friedliche"), "friedlich" );
	deepEqual( Stem("friedlichen"), "friedlich" );
	deepEqual( Stem("friedliches"), "friedlich" );
	deepEqual( Stem("friedlichsten"), "friedlich" );
	deepEqual( Stem("friedliebende"), "friedlieb" );
	deepEqual( Stem("friedrich"), "friedrich" );
	deepEqual( Stem("friends"), "friend" );
	deepEqual( Stem("frierenden"), "frierend" );
	deepEqual( Stem("friert"), "friert" );
	deepEqual( Stem("friher"), "frih" );
	deepEqual( Stem("frisch"), "frisch" );
	deepEqual( Stem("frischduftende"), "frischduft" );
	deepEqual( Stem("frische"), "frisch" );
	deepEqual( Stem("frischen"), "frisch" );
	deepEqual( Stem("frischer"), "frisch" );
	deepEqual( Stem("frisches"), "frisch" );
	deepEqual( Stem("frisierten"), "frisiert" );
	deepEqual( Stem("friss"), "friss" );
	deepEqual( Stem("frissest"), "friss" );
	deepEqual( Stem("frisst"), "frisst" );
	deepEqual( Stem("frißt"), "frisst" );
	deepEqual( Stem("frist"), "frist" );
	deepEqual( Stem("fristen"), "frist" );
	deepEqual( Stem("fristeten"), "fristet" );
	deepEqual( Stem("fritz"), "fritz" );
	deepEqual( Stem("fritzchen"), "fritzch" );
	deepEqual( Stem("fritzens"), "fritz" );
	deepEqual( Stem("froh"), "froh" );
	deepEqual( Stem("frohe"), "froh" );
	deepEqual( Stem("frohen"), "froh" );
	deepEqual( Stem("fröhlich"), "frohlich" );
	deepEqual( Stem("fröhliche"), "frohlich" );
	deepEqual( Stem("fröhlichen"), "frohlich" );
	deepEqual( Stem("fröhlicher"), "frohlich" );
	deepEqual( Stem("fröhliches"), "frohlich" );
	deepEqual( Stem("fröhlichkeit"), "frohlich" );
	deepEqual( Stem("fröhlichste"), "frohlich" );
	deepEqual( Stem("fröhlichsten"), "frohlich" );
	deepEqual( Stem("frohlocken"), "frohlock" );
	deepEqual( Stem("frohsinn"), "frohsinn" );
	deepEqual( Stem("fromm"), "fromm" );
	deepEqual( Stem("fromme"), "fromm" );
	deepEqual( Stem("frommen"), "fromm" );
	deepEqual( Stem("frommer"), "fromm" );
	deepEqual( Stem("frommes"), "fromm" );
	deepEqual( Stem("frömmigkeit"), "frommig" );
	deepEqual( Stem("frömmlichen"), "frommlich" );
	deepEqual( Stem("frommt"), "frommt" );
	deepEqual( Stem("fronen"), "fron" );
	deepEqual( Stem("frönen"), "fron" );
	deepEqual( Stem("front"), "front" );
	deepEqual( Stem("frönte"), "front" );
	deepEqual( Stem("fronten"), "front" );
	deepEqual( Stem("frontpage"), "frontpag" );
	deepEqual( Stem("fronvögte"), "fronvogt" );
	deepEqual( Stem("froren"), "fror" );
	deepEqual( Stem("frosch"), "frosch" );
	deepEqual( Stem("froscharme"), "froscharm" );
	deepEqual( Stem("frösche"), "frosch" );
	deepEqual( Stem("fröschen"), "frosch" );
	deepEqual( Stem("froschmaul"), "froschmaul" );
	deepEqual( Stem("froschmäulig"), "froschmaul" );
	deepEqual( Stem("frost"), "frost" );
	deepEqual( Stem("froste"), "frost" );
	deepEqual( Stem("fröstelte"), "frostelt" );
	deepEqual( Stem("frucht"), "frucht" );
	deepEqual( Stem("fruchtbar"), "fruchtbar" );
	deepEqual( Stem("fruchtbaren"), "fruchtbar" );
	deepEqual( Stem("fruchtbarer"), "fruchtbar" );
	deepEqual( Stem("fruchtbaum"), "fruchtbaum" );
	deepEqual( Stem("früchte"), "frucht" );
	deepEqual( Stem("fruchten"), "frucht" );
	deepEqual( Stem("früchten"), "frucht" );
	deepEqual( Stem("fruchtlos"), "fruchtlos" );
	deepEqual( Stem("fruchtsaft"), "fruchtsaft" );
	deepEqual( Stem("früh"), "fruh" );
	deepEqual( Stem("frühaufsteher"), "fruhaufsteh" );
	deepEqual( Stem("frühe"), "fruh" );
	deepEqual( Stem("frühen"), "fruh" );
	deepEqual( Stem("früher"), "fruh" );
	deepEqual( Stem("frühere"), "fruh" );
	deepEqual( Stem("früheren"), "fruh" );
	deepEqual( Stem("früherer"), "fruh" );
	deepEqual( Stem("früheres"), "fruh" );
	deepEqual( Stem("frühesten"), "fruh" );
	deepEqual( Stem("frühester"), "fruh" );
	deepEqual( Stem("frühjahr"), "fruhjahr" );
	deepEqual( Stem("frühleben"), "fruhleb" );
	deepEqual( Stem("frühlicht"), "fruhlicht" );
	deepEqual( Stem("frühling"), "fruhling" );
	deepEqual( Stem("frühlings"), "fruhling" );
	deepEqual( Stem("frühlingsanfang"), "fruhlingsanfang" );
	deepEqual( Stem("frühlingsbäche"), "fruhlingsbach" );
	deepEqual( Stem("frühlingshimmel"), "fruhlingshimmel" );
	deepEqual( Stem("frühlingslebens"), "fruhlingsleb" );
	deepEqual( Stem("frühlingslicht"), "fruhlingslicht" );
	deepEqual( Stem("frühlingslied"), "fruhlingslied" );
	deepEqual( Stem("frühlingslüftlein"), "fruhlingsluftlein" );
	deepEqual( Stem("frühlingsmorgen"), "fruhlingsmorg" );
	deepEqual( Stem("frühlingsritt"), "fruhlingsritt" );
	deepEqual( Stem("frühlingsritter"), "fruhlingsritt" );
	deepEqual( Stem("frühlingssonne"), "fruhlingssonn" );
	deepEqual( Stem("frühlingssonnenwelt"), "fruhlingssonnenwelt" );
	deepEqual( Stem("frühlingstag"), "fruhlingstag" );
	deepEqual( Stem("frühlingstage"), "fruhlingstag" );
	deepEqual( Stem("frühlingstagen"), "fruhlingstag" );
	deepEqual( Stem("frühlingstages"), "fruhlingstag" );
	deepEqual( Stem("frühlingswärme"), "fruhlingswarm" );
	deepEqual( Stem("frühpirsch"), "fruhpirsch" );
	deepEqual( Stem("frühreifen"), "fruhreif" );
	deepEqual( Stem("frührot"), "fruhrot" );
	deepEqual( Stem("frühschoppen"), "fruhschopp" );
	deepEqual( Stem("frühstück"), "fruhstuck" );
	deepEqual( Stem("frühstücken"), "fruhstuck" );
	deepEqual( Stem("frühstücks"), "fruhstuck" );
	deepEqual( Stem("frühstücksei"), "fruhstucksei" );
	deepEqual( Stem("frühstücksgeschirr"), "fruhstucksgeschirr" );
	deepEqual( Stem("frühwolken"), "fruhwolk" );
	deepEqual( Stem("frumm"), "frumm" );
	deepEqual( Stem("frummen"), "frumm" );
	deepEqual( Stem("frustra"), "frustra" );
	deepEqual( Stem("fuchs"), "fuch" );
	deepEqual( Stem("füchs"), "fuch" );
	deepEqual( Stem("füchse"), "fuchs" );
	deepEqual( Stem("fuchsen"), "fuchs" );
	deepEqual( Stem("füchsin"), "fuchsin" );
	deepEqual( Stem("fuchsriegeln"), "fuchsriegeln" );
	deepEqual( Stem("fuchtelnd"), "fuchtelnd" );
	deepEqual( Stem("fuchtelte"), "fuchtelt" );
	deepEqual( Stem("fuerunt"), "fuerunt" );
	deepEqual( Stem("fufzg"), "fufzg" );
	deepEqual( Stem("füge"), "fug" );
	deepEqual( Stem("fügen"), "fug" );
	deepEqual( Stem("fügt"), "fugt" );
	deepEqual( Stem("fügte"), "fugt" );
	deepEqual( Stem("fügung"), "fugung" );
	deepEqual( Stem("fühlbar"), "fuhlbar" );
	deepEqual( Stem("fühlbare"), "fuhlbar" );
	deepEqual( Stem("fühle"), "fuhl" );
	deepEqual( Stem("fühlen"), "fuhl" );
	deepEqual( Stem("fühlend"), "fuhlend" );
	deepEqual( Stem("fühlenden"), "fuhlend" );
	deepEqual( Stem("fühlerhörnchen"), "fuhlerhornch" );
	deepEqual( Stem("fühlern"), "fuhl" );
	deepEqual( Stem("fühlhörnchen"), "fuhlhornch" );
	deepEqual( Stem("fühlhörner"), "fuhlhorn" );
	deepEqual( Stem("fühllosen"), "fuhllos" );
	deepEqual( Stem("fühllosigkeit"), "fuhllos" );
	deepEqual( Stem("fühlst"), "fuhl" );
	deepEqual( Stem("fühlt"), "fuhlt" );
	deepEqual( Stem("fühlte"), "fuhlt" );
	deepEqual( Stem("fühlten"), "fuhlt" );
	deepEqual( Stem("fuhr"), "fuhr" );
	deepEqual( Stem("fuhre"), "fuhr" );
	deepEqual( Stem("führe"), "fuhr" );
	deepEqual( Stem("fuhren"), "fuhr" );
	deepEqual( Stem("führen"), "fuhr" );
	deepEqual( Stem("führende"), "fuhrend" );
	deepEqual( Stem("führenden"), "fuhrend" );
	deepEqual( Stem("führer"), "fuhr" );
	deepEqual( Stem("führerschein"), "fuhrerschein" );
	deepEqual( Stem("führest"), "fuhr" );
	deepEqual( Stem("führet"), "fuhret" );
	deepEqual( Stem("führete"), "fuhret" );
	deepEqual( Stem("fuhrknecht"), "fuhrknecht" );
	deepEqual( Stem("fuhrleute"), "fuhrleut" );
	deepEqual( Stem("führt"), "fuhrt" );
	deepEqual( Stem("führte"), "fuhrt" );
	deepEqual( Stem("führten"), "fuhrt" );
	deepEqual( Stem("führung"), "fuhrung" );
	deepEqual( Stem("führungsleute"), "fuhrungsleut" );
	deepEqual( Stem("führungszeugnis"), "fuhrungszeugnis" );
	deepEqual( Stem("fuhrwerk"), "fuhrwerk" );
	deepEqual( Stem("fuhrwerke"), "fuhrwerk" );
	deepEqual( Stem("fuhrwerklein"), "fuhrwerklein" );
	deepEqual( Stem("füll"), "full" );
	deepEqual( Stem("fülle"), "full" );
	deepEqual( Stem("füllen"), "full" );
	deepEqual( Stem("füllenden"), "fullend" );
	deepEqual( Stem("füllet"), "fullet" );
	deepEqual( Stem("füllfederhalter"), "fullfederhalt" );
	deepEqual( Stem("füllt"), "fullt" );
	deepEqual( Stem("füllte"), "fullt" );
	deepEqual( Stem("füllten"), "fullt" );
	deepEqual( Stem("fummelt"), "fummelt" );
	deepEqual( Stem("fun"), "fun" );
	deepEqual( Stem("fundament"), "fundament" );
	deepEqual( Stem("fundamente"), "fundament" );
	deepEqual( Stem("funden"), "fund" );
	deepEqual( Stem("fundenseetauern"), "fundenseetau" );
	deepEqual( Stem("fundiert"), "fundiert" );
	deepEqual( Stem("fünf"), "funf" );
	deepEqual( Stem("fünfbeiniges"), "funfbein" );
	deepEqual( Stem("fünfe"), "funf" );
	deepEqual( Stem("fünfen"), "funf" );
	deepEqual( Stem("fünfer"), "funf" );
	deepEqual( Stem("fünfhundert"), "funfhundert" );
	deepEqual( Stem("fünfhundertmarkscheine"), "funfhundertmarkschein" );
	deepEqual( Stem("fünfhundertmarkscheinen"), "funfhundertmarkschein" );
	deepEqual( Stem("fünfjähriges"), "funfjahr" );
	deepEqual( Stem("fünfte"), "funft" );
	deepEqual( Stem("fünftelminute"), "funftelminut" );
	deepEqual( Stem("fünften"), "funft" );
	deepEqual( Stem("fünftes"), "funft" );
	deepEqual( Stem("fünfunddreissigjährigen"), "funfunddreissigjahr" );
	deepEqual( Stem("fünfunddreißigmal"), "funfunddreissigmal" );
	deepEqual( Stem("fünfundneunzig"), "funfundneunz" );
	deepEqual( Stem("fünfundsechzig"), "funfundsechz" );
	deepEqual( Stem("fünfundvierziger"), "funfundvierz" );
	deepEqual( Stem("fünfundzwanzig"), "funfundzwanz" );
	deepEqual( Stem("fünfzehn"), "funfzehn" );
	deepEqual( Stem("fünfzehnmal"), "funfzehnmal" );
	deepEqual( Stem("fünfzehnten"), "funfzehnt" );
	deepEqual( Stem("fünfzig"), "funfzig" );
	deepEqual( Stem("fünfziger"), "funfzig" );
	deepEqual( Stem("fünfzigjährigen"), "funfzigjahr" );
	deepEqual( Stem("fünfzigsten"), "funfzig" );
	deepEqual( Stem("fungiert"), "fungiert" );
	deepEqual( Stem("funk"), "funk" );
	deepEqual( Stem("fünkchen"), "funkch" );
	deepEqual( Stem("funkelhelle"), "funkelhell" );
	deepEqual( Stem("funkeln"), "funkeln" );
	deepEqual( Stem("funkelnden"), "funkelnd" );
	deepEqual( Stem("funkelte"), "funkelt" );
	deepEqual( Stem("funkelten"), "funkelt" );
	deepEqual( Stem("funken"), "funk" );
	deepEqual( Stem("funkendampf"), "funkendampf" );
	deepEqual( Stem("funkenknopf"), "funkenknopf" );
	deepEqual( Stem("funkhaus"), "funkhaus" );
	deepEqual( Stem("funkhauses"), "funkhaus" );
	deepEqual( Stem("funkleute"), "funkleut" );
	deepEqual( Stem("funktion"), "funktion" );
	deepEqual( Stem("funktionen"), "funktion" );
	deepEqual( Stem("funktionieren"), "funktioni" );
	deepEqual( Stem("funktionierende"), "funktionier" );
	deepEqual( Stem("funktionierte"), "funktioniert" );
	deepEqual( Stem("fur"), "fur" );
	deepEqual( Stem("für"), "fur" );
	deepEqual( Stem("fürbass"), "furbass" );
	deepEqual( Stem("fürbaß"), "furbass" );
	deepEqual( Stem("fürbittbuch"), "furbittbuch" );
	deepEqual( Stem("fürbitte"), "furbitt" );
	deepEqual( Stem("fürbittgebet"), "furbittgebet" );
	deepEqual( Stem("fürbringen"), "furbring" );
	deepEqual( Stem("furche"), "furch" );
	deepEqual( Stem("furchen"), "furch" );
	deepEqual( Stem("furcht"), "furcht" );
	deepEqual( Stem("fürcht"), "furcht" );
	deepEqual( Stem("furchtbar"), "furchtbar" );
	deepEqual( Stem("furchtbare"), "furchtbar" );
	deepEqual( Stem("furchtbarem"), "furchtbar" );
	deepEqual( Stem("furchtbaren"), "furchtbar" );
	deepEqual( Stem("furchtbarste"), "furchtbarst" );
	deepEqual( Stem("fürchte"), "furcht" );
	deepEqual( Stem("fürchten"), "furcht" );
	deepEqual( Stem("fürchtende"), "furchtend" );
	deepEqual( Stem("fürchtenden"), "furchtend" );
	deepEqual( Stem("fürchterlich"), "furcht" );
	deepEqual( Stem("fürchterliche"), "furcht" );
	deepEqual( Stem("fürchterlichen"), "furcht" );
	deepEqual( Stem("fürchterliches"), "furcht" );
	deepEqual( Stem("fürchtet"), "furchtet" );
	deepEqual( Stem("fürchtete"), "furchtet" );
	deepEqual( Stem("fürchteten"), "furchtet" );
	deepEqual( Stem("furchtlosigkeit"), "furchtlos" );
	deepEqual( Stem("furchtsam"), "furchtsam" );
	deepEqual( Stem("furchtsamen"), "furchtsam" );
	deepEqual( Stem("furchtsames"), "furchtsam" );
	deepEqual( Stem("fürder"), "furd" );
	deepEqual( Stem("fürdere"), "furd" );
	deepEqual( Stem("füreinander"), "fureinand" );
	deepEqual( Stem("fürgschützt"), "furgschutzt" );
	deepEqual( Stem("fürgstreckt"), "furgstreckt" );
	deepEqual( Stem("fürnehmere"), "furnehm" );
	deepEqual( Stem("fürplärren"), "furplarr" );
	deepEqual( Stem("fürs"), "fur" );
	deepEqual( Stem("fürschlag"), "furschlag" );
	deepEqual( Stem("fürsichtige"), "fursicht" );
	deepEqual( Stem("fürst"), "furst" );
	deepEqual( Stem("fürsten"), "furst" );
	deepEqual( Stem("fürstenhochzeit"), "furstenhochzeit" );
	deepEqual( Stem("fürstenmantel"), "furstenmantel" );
	deepEqual( Stem("fürstentodes"), "furstentod" );
	deepEqual( Stem("fürstlich"), "furstlich" );
	deepEqual( Stem("fürstlichen"), "furstlich" );
	deepEqual( Stem("fürstpröpstlichen"), "furstpropst" );
	deepEqual( Stem("furt"), "furt" );
	deepEqual( Stem("furtghadert"), "furtghadert" );
	deepEqual( Stem("fürwahr"), "furwahr" );
	deepEqual( Stem("fürwahrhalten"), "furwahrhalt" );
	deepEqual( Stem("fürwahrhaltens"), "furwahrhalt" );
	deepEqual( Stem("fuss"), "fuss" );
	deepEqual( Stem("fuß"), "fuss" );
	deepEqual( Stem("füss"), "fuss" );
	deepEqual( Stem("fussball"), "fussball" );
	deepEqual( Stem("fussballteam"), "fussballteam" );
	deepEqual( Stem("fussballverein"), "fussballverein" );
	deepEqual( Stem("fussboden"), "fussbod" );
	deepEqual( Stem("fußboden"), "fussbod" );
	deepEqual( Stem("füsschen"), "fussch" );
	deepEqual( Stem("fusse"), "fuss" );
	deepEqual( Stem("fuße"), "fuss" );
	deepEqual( Stem("füsse"), "fuss" );
	deepEqual( Stem("füße"), "fuss" );
	deepEqual( Stem("füssen"), "fuss" );
	deepEqual( Stem("füßen"), "fuss" );
	deepEqual( Stem("fussende"), "fussend" );
	deepEqual( Stem("fusses"), "fuss" );
	deepEqual( Stem("fußes"), "fuss" );
	deepEqual( Stem("fussgänger"), "fussgang" );
	deepEqual( Stem("fusspfad"), "fusspfad" );
	deepEqual( Stem("fussschemelchen"), "fussschemelch" );
	deepEqual( Stem("fusssohle"), "fusssohl" );
	deepEqual( Stem("fußsohle"), "fusssohl" );
	deepEqual( Stem("fusssohlen"), "fusssohl" );
	deepEqual( Stem("fußsohlen"), "fusssohl" );
	deepEqual( Stem("fussspitze"), "fussspitz" );
	deepEqual( Stem("fußspitze"), "fussspitz" );
	deepEqual( Stem("fussspitzen"), "fussspitz" );
	deepEqual( Stem("fußspitzen"), "fussspitz" );
	deepEqual( Stem("fusstritt"), "fusstritt" );
	deepEqual( Stem("fusstritten"), "fusstritt" );
	deepEqual( Stem("futter"), "futt" );
	deepEqual( Stem("futterbarren"), "futterbarr" );
	deepEqual( Stem("füttere"), "futt" );
	deepEqual( Stem("füttern"), "futt" );
	deepEqual( Stem("füttert"), "futtert" );
	deepEqual( Stem("g"), "g" );
	deepEqual( Stem("gab"), "gab" );
	deepEqual( Stem("gäb"), "gab" );
	deepEqual( Stem("gabe"), "gab" );
	deepEqual( Stem("gäbe"), "gab" );
	deepEqual( Stem("gabel"), "gabel" );
	deepEqual( Stem("gabelhirsch"), "gabelhirsch" );
	deepEqual( Stem("gaben"), "gab" );
	deepEqual( Stem("gäbst"), "gabst" );
	deepEqual( Stem("gackernden"), "gackernd" );
	deepEqual( Stem("gad"), "gad" );
	deepEqual( Stem("gaffen"), "gaff" );
	deepEqual( Stem("gaffende"), "gaffend" );
	deepEqual( Stem("gaffer"), "gaff" );
	deepEqual( Stem("gahlings"), "gahling" );
	deepEqual( Stem("gähnte"), "gahnt" );
	deepEqual( Stem("galantinen"), "galantin" );
	deepEqual( Stem("galerie"), "galeri" );
	deepEqual( Stem("galgen"), "galg" );
	deepEqual( Stem("galgenhund"), "galgenhund" );
	deepEqual( Stem("galgenlaune"), "galgenlaun" );
	deepEqual( Stem("galion"), "galion" );
	deepEqual( Stem("galions"), "galion" );
	deepEqual( Stem("galle"), "gall" );
	deepEqual( Stem("gallen"), "gall" );
	deepEqual( Stem("galler"), "gall" );
	deepEqual( Stem("gallige"), "gallig" );
	deepEqual( Stem("galligen"), "gallig" );
	deepEqual( Stem("galopp"), "galopp" );
	deepEqual( Stem("galoppierte"), "galoppiert" );
	deepEqual( Stem("galt"), "galt" );
	deepEqual( Stem("gälte"), "galt" );
	deepEqual( Stem("galten"), "galt" );
	deepEqual( Stem("gamsbart"), "gamsbart" );
	deepEqual( Stem("gan"), "gan" );
	deepEqual( Stem("gang"), "gang" );
	deepEqual( Stem("gangbar"), "gangbar" );
	deepEqual( Stem("gangbaren"), "gangbar" );
	deepEqual( Stem("gange"), "gang" );
	deepEqual( Stem("gänge"), "gang" );
	deepEqual( Stem("gängelband"), "gangelband" );
	deepEqual( Stem("gangen"), "gang" );
	deepEqual( Stem("gängen"), "gang" );
	deepEqual( Stem("gans"), "gan" );
	deepEqual( Stem("gäns"), "gan" );
	deepEqual( Stem("gänse"), "gans" );
	deepEqual( Stem("gänsen"), "gans" );
	deepEqual( Stem("gänsestall"), "gansestall" );
	deepEqual( Stem("ganz"), "ganz" );
	deepEqual( Stem("ganze"), "ganz" );
	deepEqual( Stem("ganzem"), "ganz" );
	deepEqual( Stem("ganzen"), "ganz" );
	deepEqual( Stem("ganzer"), "ganz" );
	deepEqual( Stem("ganzes"), "ganz" );
	deepEqual( Stem("gänzlich"), "ganzlich" );
	deepEqual( Stem("gänzliche"), "ganzlich" );
	deepEqual( Stem("gänzlichen"), "ganzlich" );
	deepEqual( Stem("gänzlicher"), "ganzlich" );
	deepEqual( Stem("gar"), "gar" );
	deepEqual( Stem("garantie"), "garanti" );
	deepEqual( Stem("garaus"), "garaus" );
	deepEqual( Stem("garben"), "garb" );
	deepEqual( Stem("garderobe"), "garderob" );
	deepEqual( Stem("garderobestücken"), "garderobestuck" );
	deepEqual( Stem("gardine"), "gardin" );
	deepEqual( Stem("gardinen"), "gardin" );
	deepEqual( Stem("gardinenstange"), "gardinenstang" );
	deepEqual( Stem("gare"), "gar" );
	deepEqual( Stem("gärende"), "garend" );
	deepEqual( Stem("gärenden"), "garend" );
	deepEqual( Stem("garn"), "garn" );
	deepEqual( Stem("garne"), "garn" );
	deepEqual( Stem("garnflechten"), "garnflecht" );
	deepEqual( Stem("garniert"), "garniert" );
	deepEqual( Stem("garnsbock"), "garnsbock" );
	deepEqual( Stem("garstig"), "garstig" );
	deepEqual( Stem("garstige"), "garstig" );
	deepEqual( Stem("garstiger"), "garstig" );
	deepEqual( Stem("garstiges"), "garstig" );
	deepEqual( Stem("garten"), "gart" );
	deepEqual( Stem("gärten"), "gart" );
	deepEqual( Stem("garteng"), "garteng" );
	deepEqual( Stem("gartenhäuschen"), "gartenhausch" );
	deepEqual( Stem("gartenmitte"), "gartenmitt" );
	deepEqual( Stem("gartens"), "gart" );
	deepEqual( Stem("gartenwege"), "gartenweg" );
	deepEqual( Stem("gartenzaun"), "gartenzaun" );
	deepEqual( Stem("gärtner"), "gartn" );
	deepEqual( Stem("gässchen"), "gassch" );
	deepEqual( Stem("gasse"), "gass" );
	deepEqual( Stem("gassen"), "gass" );
	deepEqual( Stem("gassenbuben"), "gassenbub" );
	deepEqual( Stem("gassenjunge"), "gassenj" );
	deepEqual( Stem("gassenjungen"), "gassenj" );
	deepEqual( Stem("gassenmädchen"), "gassenmadch" );
	deepEqual( Stem("gast"), "gast" );
	deepEqual( Stem("gaste"), "gast" );
	deepEqual( Stem("gäste"), "gast" );
	deepEqual( Stem("gästen"), "gast" );
	deepEqual( Stem("gastes"), "gast" );
	deepEqual( Stem("gastfreunde"), "gastfreund" );
	deepEqual( Stem("gastfreundlichen"), "gastfreund" );
	deepEqual( Stem("gastgebenden"), "gastgeb" );
	deepEqual( Stem("gastgeber"), "gastgeb" );
	deepEqual( Stem("gastgebers"), "gastgeb" );
	deepEqual( Stem("gasthaus"), "gasthaus" );
	deepEqual( Stem("gasthause"), "gasthaus" );
	deepEqual( Stem("gasthauses"), "gasthaus" );
	deepEqual( Stem("gasthof"), "gasthof" );
	deepEqual( Stem("gasthofe"), "gasthof" );
	deepEqual( Stem("gasthofes"), "gasthof" );
	deepEqual( Stem("gastliche"), "gastlich" );
	deepEqual( Stem("gastlichen"), "gastlich" );
	deepEqual( Stem("gastmahle"), "gastmahl" );
	deepEqual( Stem("gastspiel"), "gastspiel" );
	deepEqual( Stem("gaststube"), "gaststub" );
	deepEqual( Stem("gaststuben"), "gaststub" );
	deepEqual( Stem("gastwirt"), "gastwirt" );
	deepEqual( Stem("gates"), "gat" );
	deepEqual( Stem("gatte"), "gatt" );
	deepEqual( Stem("gatten"), "gatt" );
	deepEqual( Stem("gattentreue"), "gattentreu" );
	deepEqual( Stem("gattin"), "gattin" );
	deepEqual( Stem("gattung"), "gattung" );
	deepEqual( Stem("gattungen"), "gattung" );
	deepEqual( Stem("gattungs"), "gattung" );
	deepEqual( Stem("gau"), "gau" );
	deepEqual( Stem("gaukelei"), "gaukelei" );
	deepEqual( Stem("gäule"), "gaul" );
	deepEqual( Stem("gaumen"), "gaum" );
	deepEqual( Stem("gazegewänder"), "gazegewand" );
	deepEqual( Stem("gazeschleier"), "gazeschlei" );
	deepEqual( Stem("gb"), "gb" );
	deepEqual( Stem("ge"), "ge" );
	deepEqual( Stem("geachtet"), "geachtet" );
	deepEqual( Stem("geädert"), "geadert" );
	deepEqual( Stem("geahnt"), "geahnt" );
	deepEqual( Stem("gealterten"), "gealtert" );
	deepEqual( Stem("gealttätige"), "gealttat" );
	deepEqual( Stem("geändert"), "geandert" );
	deepEqual( Stem("geängstigtes"), "geangstigt" );
	deepEqual( Stem("geantwortet"), "geantwortet" );
	deepEqual( Stem("gearbeitet"), "gearbeitet" );
	deepEqual( Stem("gearbeiteten"), "gearbeitet" );
	deepEqual( Stem("geärgert"), "geargert" );
	deepEqual( Stem("geartet"), "geartet" );
	deepEqual( Stem("geäussert"), "geaussert" );
	deepEqual( Stem("geäußert"), "geaussert" );
	deepEqual( Stem("geb"), "geb" );
	deepEqual( Stem("gebacken"), "geback" );
	deepEqual( Stem("gebackene"), "geback" );
	deepEqual( Stem("gebackenen"), "geback" );
	deepEqual( Stem("gebadet"), "gebadet" );
	deepEqual( Stem("gebahnt"), "gebahnt" );
	deepEqual( Stem("gebälks"), "gebalk" );
	deepEqual( Stem("geballt"), "geballt" );
	deepEqual( Stem("geballte"), "geballt" );
	deepEqual( Stem("gebar"), "gebar" );
	deepEqual( Stem("gebärde"), "gebard" );
	deepEqual( Stem("gebärden"), "gebard" );
	deepEqual( Stem("gebärdend"), "gebard" );
	deepEqual( Stem("gebärdenden"), "gebard" );
	deepEqual( Stem("gebärdenspiel"), "gebardenspiel" );
	deepEqual( Stem("gebärdet"), "gebardet" );
	deepEqual( Stem("gebärdete"), "gebardet" );
	deepEqual( Stem("gebären"), "gebar" );
	deepEqual( Stem("gebärerin"), "gebarerin" );
	deepEqual( Stem("gebäude"), "gebaud" );
	deepEqual( Stem("gebauet"), "gebauet" );
	deepEqual( Stem("gebaumelt"), "gebaumelt" );
	deepEqual( Stem("gebaut"), "gebaut" );
	deepEqual( Stem("gebaute"), "gebaut" );
	deepEqual( Stem("gebe"), "geb" );
	deepEqual( Stem("gebein"), "gebein" );
	deepEqual( Stem("gebeine"), "gebein" );
	deepEqual( Stem("gebeinen"), "gebein" );
	deepEqual( Stem("gebell"), "gebell" );
	deepEqual( Stem("gebellt"), "gebellt" );
	deepEqual( Stem("geben"), "geb" );
	deepEqual( Stem("gebend"), "gebend" );
	deepEqual( Stem("gebessert"), "gebessert" );
	deepEqual( Stem("gebest"), "geb" );
	deepEqual( Stem("gebet"), "gebet" );
	deepEqual( Stem("gebetbuch"), "gebetbuch" );
	deepEqual( Stem("gebete"), "gebet" );
	deepEqual( Stem("gebeten"), "gebet" );
	deepEqual( Stem("gebetet"), "gebetet" );
	deepEqual( Stem("gebetläuten"), "gebetlaut" );
	deepEqual( Stem("gebetskapelle"), "gebetskapell" );
	deepEqual( Stem("gebettet"), "gebettet" );
	deepEqual( Stem("gebeugt"), "gebeugt" );
	deepEqual( Stem("gebeugte"), "gebeugt" );
	deepEqual( Stem("gebeugtes"), "gebeugt" );
	deepEqual( Stem("gebiert"), "gebiert" );
	deepEqual( Stem("gebiet"), "gebiet" );
	deepEqual( Stem("gebiete"), "gebiet" );
	deepEqual( Stem("gebieten"), "gebiet" );
	deepEqual( Stem("gebietenden"), "gebiet" );
	deepEqual( Stem("gebieter"), "gebiet" );
	deepEqual( Stem("gebieterin"), "gebieterin" );
	deepEqual( Stem("gebieterisch"), "gebieter" );
	deepEqual( Stem("gebietes"), "gebiet" );
	deepEqual( Stem("gebietet"), "gebietet" );
	deepEqual( Stem("gebilde"), "gebild" );
	deepEqual( Stem("gebilden"), "gebild" );
	deepEqual( Stem("gebildet"), "gebildet" );
	deepEqual( Stem("gebildeten"), "gebildet" );
	deepEqual( Stem("gebildeter"), "gebildet" );
	deepEqual( Stem("gebirg"), "gebirg" );
	deepEqual( Stem("gebirge"), "gebirg" );
	deepEqual( Stem("gebirges"), "gebirg" );
	deepEqual( Stem("gebirgsflecken"), "gebirgsfleck" );
	deepEqual( Stem("gebirgskräutermilch"), "gebirgskrautermilch" );
	deepEqual( Stem("gebirgsweib"), "gebirgsweib" );
	deepEqual( Stem("gebirgswildnis"), "gebirgswildnis" );
	deepEqual( Stem("gebissen"), "gebiss" );
	deepEqual( Stem("geblähten"), "geblaht" );
	deepEqual( Stem("gebläuter"), "geblaut" );
	deepEqual( Stem("geblendet"), "geblendet" );
	deepEqual( Stem("geblickt"), "geblickt" );
	deepEqual( Stem("geblieben"), "geblieb" );
	deepEqual( Stem("gebliebener"), "geblieb" );
	deepEqual( Stem("geblüt"), "geblut" );
	deepEqual( Stem("geblüte"), "geblut" );
	deepEqual( Stem("geblütes"), "geblut" );
	deepEqual( Stem("gebogen"), "gebog" );
	deepEqual( Stem("gebogenen"), "gebog" );
	deepEqual( Stem("gebohntem"), "gebohnt" );
	deepEqual( Stem("geboren"), "gebor" );
	deepEqual( Stem("geborene"), "gebor" );
	deepEqual( Stem("geborener"), "gebor" );
	deepEqual( Stem("geborgen"), "geborg" );
	deepEqual( Stem("geborgene"), "geborg" );
	deepEqual( Stem("geborgt"), "geborgt" );
	deepEqual( Stem("gebot"), "gebot" );
	deepEqual( Stem("gebote"), "gebot" );
	deepEqual( Stem("geboten"), "gebot" );
	deepEqual( Stem("gebotene"), "gebot" );
	deepEqual( Stem("gebotenen"), "gebot" );
	deepEqual( Stem("gebots"), "gebot" );
	deepEqual( Stem("gebrach"), "gebrach" );
	deepEqual( Stem("gebracht"), "gebracht" );
	deepEqual( Stem("gebrachte"), "gebracht" );
	deepEqual( Stem("gebrannt"), "gebrannt" );
	deepEqual( Stem("gebraten"), "gebrat" );
	deepEqual( Stem("gebratene"), "gebrat" );
	deepEqual( Stem("gebratenen"), "gebrat" );
	deepEqual( Stem("gebrauch"), "gebrauch" );
	deepEqual( Stem("gebrauche"), "gebrauch" );
	deepEqual( Stem("gebräuche"), "gebrauch" );
	deepEqual( Stem("gebrauchen"), "gebrauch" );
	deepEqual( Stem("gebräuchen"), "gebrauch" );
	deepEqual( Stem("gebrauches"), "gebrauch" );
	deepEqual( Stem("gebräuchlich"), "gebrauch" );
	deepEqual( Stem("gebräuchlicher"), "gebrauch" );
	deepEqual( Stem("gebrauchs"), "gebrauch" );
	deepEqual( Stem("gebraucht"), "gebraucht" );
	deepEqual( Stem("gebrauchte"), "gebraucht" );
	deepEqual( Stem("gebrauchten"), "gebraucht" );
	deepEqual( Stem("gebräunte"), "gebraunt" );
	deepEqual( Stem("gebräunten"), "gebraunt" );
	deepEqual( Stem("gebräuntes"), "gebraunt" );
	deepEqual( Stem("gebreitet"), "gebreitet" );
	deepEqual( Stem("gebremst"), "gebrem" );
	deepEqual( Stem("gebricht"), "gebricht" );
	deepEqual( Stem("gebrochen"), "gebroch" );
	deepEqual( Stem("gebrochener"), "gebroch" );
	deepEqual( Stem("gebrüll"), "gebrull" );
	deepEqual( Stem("gebrumm"), "gebrumm" );
	deepEqual( Stem("gebrummt"), "gebrummt" );
	deepEqual( Stem("gebt"), "gebt" );
	deepEqual( Stem("gebückt"), "gebuckt" );
	deepEqual( Stem("gebühr"), "gebuhr" );
	deepEqual( Stem("gebührend"), "gebuhr" );
	deepEqual( Stem("gebührt"), "gebuhrt" );
	deepEqual( Stem("gebührte"), "gebuhrt" );
	deepEqual( Stem("gebumst"), "gebum" );
	deepEqual( Stem("gebunden"), "gebund" );
	deepEqual( Stem("gebundenen"), "gebund" );
	deepEqual( Stem("gebundenes"), "gebund" );
	deepEqual( Stem("gebürsteten"), "geburstet" );
	deepEqual( Stem("geburt"), "geburt" );
	deepEqual( Stem("geburten"), "geburt" );
	deepEqual( Stem("gebürtig"), "geburt" );
	deepEqual( Stem("geburtsorte"), "geburtsort" );
	deepEqual( Stem("geburtsschein"), "geburtsschein" );
	deepEqual( Stem("geburtstag"), "geburtstag" );
	deepEqual( Stem("geburtstage"), "geburtstag" );
	deepEqual( Stem("geburtstages"), "geburtstag" );
	deepEqual( Stem("geburtstags"), "geburtstag" );
	deepEqual( Stem("gebüsch"), "gebusch" );
	deepEqual( Stem("gebüsche"), "gebusch" );
	deepEqual( Stem("gebüsst"), "gebusst" );
	deepEqual( Stem("gedacht"), "gedacht" );
	deepEqual( Stem("gedachte"), "gedacht" );
	deepEqual( Stem("gedachten"), "gedacht" );
	deepEqual( Stem("gedächten"), "gedacht" );
	deepEqual( Stem("gedächtnis"), "gedachtnis" );
	deepEqual( Stem("gedächtnisglauben"), "gedachtnisglaub" );
	deepEqual( Stem("gedächtnisse"), "gedachtnis" );
	deepEqual( Stem("gedächtnissen"), "gedachtnis" );
	deepEqual( Stem("gedächtnisses"), "gedachtnis" );
	deepEqual( Stem("gedämpft"), "gedampft" );
	deepEqual( Stem("gedämpftes"), "gedampft" );
	deepEqual( Stem("gedanke"), "gedank" );
	deepEqual( Stem("gedanken"), "gedank" );
	deepEqual( Stem("gedankenaustausch"), "gedankenaustausch" );
	deepEqual( Stem("gedankenform"), "gedankenform" );
	deepEqual( Stem("gedankengang"), "gedankengang" );
	deepEqual( Stem("gedankenlos"), "gedankenlos" );
	deepEqual( Stem("gedankenlose"), "gedankenlos" );
	deepEqual( Stem("gedankenlosen"), "gedankenlos" );
	deepEqual( Stem("gedankenlosigkeit"), "gedankenlos" );
	deepEqual( Stem("gedankenplanes"), "gedankenplan" );
	deepEqual( Stem("gedankenreichen"), "gedankenreich" );
	deepEqual( Stem("gedankenreihen"), "gedankenreih" );
	deepEqual( Stem("gedankens"), "gedank" );
	deepEqual( Stem("gedankenspäne"), "gedankenspan" );
	deepEqual( Stem("gedankenspielen"), "gedankenspiel" );
	deepEqual( Stem("gedankensprung"), "gedankenspr" );
	deepEqual( Stem("gedeckt"), "gedeckt" );
	deepEqual( Stem("gedeckten"), "gedeckt" );
	deepEqual( Stem("gedehnt"), "gedehnt" );
	deepEqual( Stem("gedeihen"), "gedeih" );
	deepEqual( Stem("gedeihens"), "gedeih" );
	deepEqual( Stem("gedeihliche"), "gedeih" );
	deepEqual( Stem("gedeihlichste"), "gedeih" );
	deepEqual( Stem("gedeiht"), "gedeiht" );
	deepEqual( Stem("gedemütigt"), "gedemutigt" );
	deepEqual( Stem("gedenk"), "gedenk" );
	deepEqual( Stem("gedenke"), "gedenk" );
	deepEqual( Stem("gedenken"), "gedenk" );
	deepEqual( Stem("gedenket"), "gedenket" );
	deepEqual( Stem("gedenkfeiern"), "gedenkfei" );
	deepEqual( Stem("gedenkmedaille"), "gedenkmedaill" );
	deepEqual( Stem("gedenkst"), "gedenk" );
	deepEqual( Stem("gedenkt"), "gedenkt" );
	deepEqual( Stem("gedenktag"), "gedenktag" );
	deepEqual( Stem("gedicht"), "gedicht" );
	deepEqual( Stem("gedichten"), "gedicht" );
	deepEqual( Stem("gediegenes"), "gedieg" );
	deepEqual( Stem("gediegne"), "gediegn" );
	deepEqual( Stem("gedieh"), "gedieh" );
	deepEqual( Stem("gediehen"), "gedieh" );
	deepEqual( Stem("gedient"), "gedient" );
	deepEqual( Stem("gediente"), "gedient" );
	deepEqual( Stem("gedonnerkracht"), "gedonnerkracht" );
	deepEqual( Stem("gedörrt"), "gedorrt" );
	deepEqual( Stem("gedörrte"), "gedorrt" );
	deepEqual( Stem("gedörrten"), "gedorrt" );
	deepEqual( Stem("gedränge"), "gedrang" );
	deepEqual( Stem("gedrängt"), "gedrangt" );
	deepEqual( Stem("gedreht"), "gedreht" );
	deepEqual( Stem("gedrehter"), "gedreht" );
	deepEqual( Stem("gedruckt"), "gedruckt" );
	deepEqual( Stem("gedrückt"), "gedruckt" );
	deepEqual( Stem("gedruckten"), "gedruckt" );
	deepEqual( Stem("gedrucktes"), "gedruckt" );
	deepEqual( Stem("gedrücktes"), "gedruckt" );
	deepEqual( Stem("gedrücktheit"), "gedruckt" );
	deepEqual( Stem("geduld"), "geduld" );
	deepEqual( Stem("geduldet"), "geduldet" );
	deepEqual( Stem("geduldig"), "geduld" );
	deepEqual( Stem("geduldigen"), "geduld" );
	deepEqual( Stem("geduldspiel"), "geduldspiel" );
	deepEqual( Stem("geduscht"), "geduscht" );
	deepEqual( Stem("geehrt"), "geehrt" );
	deepEqual( Stem("geehrtam"), "geehrtam" );
	deepEqual( Stem("geehrte"), "geehrt" );
	deepEqual( Stem("geehrten"), "geehrt" );
	deepEqual( Stem("geehrter"), "geehrt" );
	deepEqual( Stem("geeignet"), "geeignet" );
	deepEqual( Stem("geeigneten"), "geeignet" );
	deepEqual( Stem("geeigneter"), "geeignet" );
	deepEqual( Stem("geeilt"), "geeilt" );
	deepEqual( Stem("geeinten"), "geeint" );
	deepEqual( Stem("geendet"), "geendet" );
	deepEqual( Stem("geendigt"), "geendigt" );
	deepEqual( Stem("geerbt"), "geerbt" );
	deepEqual( Stem("geerntet"), "geerntet" );
	deepEqual( Stem("gefahr"), "gefahr" );
	deepEqual( Stem("gefährde"), "gefahrd" );
	deepEqual( Stem("gefährdet"), "gefahrdet" );
	deepEqual( Stem("gefährdung"), "gefahrd" );
	deepEqual( Stem("gefahren"), "gefahr" );
	deepEqual( Stem("gefährlich"), "gefahr" );
	deepEqual( Stem("gefährliche"), "gefahr" );
	deepEqual( Stem("gefährlichen"), "gefahr" );
	deepEqual( Stem("gefährlicher"), "gefahr" );
	deepEqual( Stem("gefährliches"), "gefahr" );
	deepEqual( Stem("gefährlichkeit"), "gefahr" );
	deepEqual( Stem("gefahrlos"), "gefahrlos" );
	deepEqual( Stem("gefährt"), "gefahrt" );
	deepEqual( Stem("gefährte"), "gefahrt" );
	deepEqual( Stem("gefährten"), "gefahrt" );
	deepEqual( Stem("gefährtin"), "gefahrtin" );
	deepEqual( Stem("gefallen"), "gefall" );
	deepEqual( Stem("gefällig"), "gefall" );
	deepEqual( Stem("gefälligkeit"), "gefall" );
	deepEqual( Stem("gefälligst"), "gefall" );
	deepEqual( Stem("gefällt"), "gefallt" );
	deepEqual( Stem("gefälschte"), "gefalscht" );
	deepEqual( Stem("gefälseht"), "gefalseht" );
	deepEqual( Stem("gefaltet"), "gefaltet" );
	deepEqual( Stem("gefalteten"), "gefaltet" );
	deepEqual( Stem("gefangen"), "gefang" );
	deepEqual( Stem("gefangene"), "gefang" );
	deepEqual( Stem("gefangenen"), "gefang" );
	deepEqual( Stem("gefangener"), "gefang" );
	deepEqual( Stem("gefangennahme"), "gefangennahm" );
	deepEqual( Stem("gefangennehmung"), "gefangennehm" );
	deepEqual( Stem("gefangenschaft"), "gefangenschaft" );
	deepEqual( Stem("gefangenschaften"), "gefangenschaft" );
	deepEqual( Stem("gefängnis"), "gefangnis" );
	deepEqual( Stem("gefängnisses"), "gefangnis" );
	deepEqual( Stem("gefärbt"), "gefarbt" );
	deepEqual( Stem("gefärbte"), "gefarbt" );
	deepEqual( Stem("gefärbten"), "gefarbt" );
	deepEqual( Stem("gefäss"), "gefass" );
	deepEqual( Stem("gefäß"), "gefass" );
	deepEqual( Stem("gefässe"), "gefass" );
	deepEqual( Stem("gefäße"), "gefass" );
	deepEqual( Stem("gefässen"), "gefass" );
	deepEqual( Stem("gefäßen"), "gefass" );
	deepEqual( Stem("gefasst"), "gefasst" );
	deepEqual( Stem("gefaßt"), "gefasst" );
	deepEqual( Stem("gefasste"), "gefasst" );
	deepEqual( Stem("gefassten"), "gefasst" );
	deepEqual( Stem("gefastet"), "gefastet" );
	deepEqual( Stem("gefecht"), "gefecht" );
	deepEqual( Stem("gefechtlärmens"), "gefechtlarm" );
	deepEqual( Stem("gefegt"), "gefegt" );
	deepEqual( Stem("gefehlt"), "gefehlt" );
	deepEqual( Stem("gefeiert"), "gefeiert" );
	deepEqual( Stem("gefeierte"), "gefeiert" );
	deepEqual( Stem("gefeit"), "gefeit" );
	deepEqual( Stem("gefertigt"), "gefertigt" );
	deepEqual( Stem("gefesselt"), "gefesselt" );
	deepEqual( Stem("gefiel"), "gefiel" );
	deepEqual( Stem("gefilde"), "gefild" );
	deepEqual( Stem("gefilmt"), "gefilmt" );
	deepEqual( Stem("gefilzt"), "gefilzt" );
	deepEqual( Stem("geflammten"), "geflammt" );
	deepEqual( Stem("geflecht"), "geflecht" );
	deepEqual( Stem("geflochten"), "geflocht" );
	deepEqual( Stem("geflogen"), "geflog" );
	deepEqual( Stem("geflohen"), "gefloh" );
	deepEqual( Stem("geflüchtet"), "gefluchtet" );
	deepEqual( Stem("geflügelte"), "geflugelt" );
	deepEqual( Stem("geflügelten"), "geflugelt" );
	deepEqual( Stem("gefolge"), "gefolg" );
	deepEqual( Stem("gefolgt"), "gefolgt" );
	deepEqual( Stem("gefordert"), "gefordert" );
	deepEqual( Stem("gefördert"), "gefordert" );
	deepEqual( Stem("geformt"), "geformt" );
	deepEqual( Stem("geformte"), "geformt" );
	deepEqual( Stem("geformten"), "geformt" );
	deepEqual( Stem("geformtes"), "geformt" );
	deepEqual( Stem("gefragt"), "gefragt" );
	deepEqual( Stem("gefressen"), "gefress" );
	deepEqual( Stem("gefrorener"), "gefror" );
	deepEqual( Stem("gefrühstückt"), "gefruhstuckt" );
	deepEqual( Stem("gefühl"), "gefuhl" );
	deepEqual( Stem("gefühle"), "gefuhl" );
	deepEqual( Stem("gefühlen"), "gefuhl" );
	deepEqual( Stem("gefühllos"), "gefuhllos" );
	deepEqual( Stem("gefühllosigkeit"), "gefuhllos" );
	deepEqual( Stem("gefühls"), "gefuhl" );
	deepEqual( Stem("gefühlt"), "gefuhlt" );
	deepEqual( Stem("gefühlvoller"), "gefuhlvoll" );
	deepEqual( Stem("geführet"), "gefuhret" );
	deepEqual( Stem("geführt"), "gefuhrt" );
	deepEqual( Stem("gefüllt"), "gefullt" );
	deepEqual( Stem("gefüllte"), "gefullt" );
	deepEqual( Stem("gefunden"), "gefund" );
	deepEqual( Stem("gefundenen"), "gefund" );
	deepEqual( Stem("gefundenes"), "gefund" );
	deepEqual( Stem("gefurchte"), "gefurcht" );
	deepEqual( Stem("gefurchten"), "gefurcht" );
	deepEqual( Stem("gefürchtet"), "gefurchtet" );
	deepEqual( Stem("gefürchtete"), "gefurchtet" );
	deepEqual( Stem("gefüttert"), "gefuttert" );
	deepEqual( Stem("gegangen"), "gegang" );
	deepEqual( Stem("gegangenen"), "gegang" );
	deepEqual( Stem("gegeben"), "gegeb" );
	deepEqual( Stem("gegebene"), "gegeb" );
	deepEqual( Stem("gegebenen"), "gegeb" );
	deepEqual( Stem("gegebenheiten"), "gegeb" );
	deepEqual( Stem("gegen"), "geg" );
	deepEqual( Stem("gegenargument"), "gegenargument" );
	deepEqual( Stem("gegenbild"), "gegenbild" );
	deepEqual( Stem("gegend"), "gegend" );
	deepEqual( Stem("gegenden"), "gegend" );
	deepEqual( Stem("gegeneinander"), "gegeneinand" );
	deepEqual( Stem("gegenfinanzierung"), "gegenfinanzier" );
	deepEqual( Stem("gegengewichts"), "gegengewicht" );
	deepEqual( Stem("gegengründe"), "gegengrund" );
	deepEqual( Stem("gegenliebe"), "gegenlieb" );
	deepEqual( Stem("gegensatz"), "gegensatz" );
	deepEqual( Stem("gegensatze"), "gegensatz" );
	deepEqual( Stem("gegensätze"), "gegensatz" );
	deepEqual( Stem("gegensätzen"), "gegensatz" );
	deepEqual( Stem("gegenseitig"), "gegenseit" );
	deepEqual( Stem("gegenseitige"), "gegenseit" );
	deepEqual( Stem("gegenseitigkeit"), "gegenseit" );
	deepEqual( Stem("gegenstand"), "gegenstand" );
	deepEqual( Stem("gegenstande"), "gegenstand" );
	deepEqual( Stem("gegenstände"), "gegenstand" );
	deepEqual( Stem("gegenständen"), "gegenstand" );
	deepEqual( Stem("gegenstandes"), "gegenstand" );
	deepEqual( Stem("gegenteil"), "gegenteil" );
	deepEqual( Stem("gegenüber"), "gegenub" );
	deepEqual( Stem("gegenüberliegende"), "gegenuberlieg" );
	deepEqual( Stem("gegenüberliegenden"), "gegenuberlieg" );
	deepEqual( Stem("gegenüberstanden"), "gegenuberstand" );
	deepEqual( Stem("gegenüberstehende"), "gegenubersteh" );
	deepEqual( Stem("gegenwart"), "gegenwart" );
	deepEqual( Stem("gegenwärtig"), "gegenwart" );
	deepEqual( Stem("gegenwärtige"), "gegenwart" );
	deepEqual( Stem("gegenwärtigem"), "gegenwart" );
	deepEqual( Stem("gegenwärtigen"), "gegenwart" );
	deepEqual( Stem("gegenwärtiger"), "gegenwart" );
	deepEqual( Stem("gegenwärtigeren"), "gegenwart" );
	deepEqual( Stem("gegenwehr"), "gegenwehr" );
	deepEqual( Stem("gegenwirkung"), "gegenwirk" );
	deepEqual( Stem("gegessen"), "gegess" );
	deepEqual( Stem("gegewelt"), "gegewelt" );
	deepEqual( Stem("geglänzt"), "geglanzt" );
	deepEqual( Stem("geglättete"), "geglattet" );
	deepEqual( Stem("geglätteten"), "geglattet" );
	deepEqual( Stem("geglaubt"), "geglaubt" );
	deepEqual( Stem("geglückt"), "gegluckt" );
	deepEqual( Stem("geglückte"), "gegluckt" );
	deepEqual( Stem("geglückten"), "gegluckt" );
	deepEqual( Stem("geglüht"), "gegluht" );
	deepEqual( Stem("gegner"), "gegn" );
	deepEqual( Stem("gegnerische"), "gegner" );
	deepEqual( Stem("gegnern"), "gegn" );
	deepEqual( Stem("gegners"), "gegn" );
	deepEqual( Stem("gegolten"), "gegolt" );
	deepEqual( Stem("gegönnt"), "gegonnt" );
	deepEqual( Stem("gegraben"), "gegrab" );
	deepEqual( Stem("gegröl"), "gegrol" );
	deepEqual( Stem("gegrübelt"), "gegrubelt" );
	deepEqual( Stem("gegründet"), "gegrundet" );
	deepEqual( Stem("gegründeten"), "gegrundet" );
	deepEqual( Stem("gegrüsst"), "gegrusst" );
	deepEqual( Stem("geguckt"), "geguckt" );
	deepEqual( Stem("geh"), "geh" );
	deepEqual( Stem("gehabt"), "gehabt" );
	deepEqual( Stem("gehaftet"), "gehaftet" );
	deepEqual( Stem("gehalt"), "gehalt" );
	deepEqual( Stem("gehalten"), "gehalt" );
	deepEqual( Stem("gehaltene"), "gehalt" );
	deepEqual( Stem("gehaltenes"), "gehalt" );
	deepEqual( Stem("gehaltlosigkeiten"), "gehaltlos" );
	deepEqual( Stem("gehalts"), "gehalt" );
	deepEqual( Stem("gehaltvollste"), "gehaltvoll" );
	deepEqual( Stem("gehandelt"), "gehandelt" );
	deepEqual( Stem("gehänge"), "gehang" );
	deepEqual( Stem("gehangen"), "gehang" );
	deepEqual( Stem("gehängen"), "gehang" );
	deepEqual( Stem("gehängt"), "gehangt" );
	deepEqual( Stem("gehängten"), "gehangt" );
	deepEqual( Stem("gehänselt"), "gehanselt" );
	deepEqual( Stem("geharrt"), "geharrt" );
	deepEqual( Stem("gehässigkeiten"), "gehass" );
	deepEqual( Stem("gehasst"), "gehasst" );
	deepEqual( Stem("gehaßt"), "gehasst" );
	deepEqual( Stem("gehassten"), "gehasst" );
	deepEqual( Stem("gehätschelt"), "gehatschelt" );
	deepEqual( Stem("gehaucht"), "gehaucht" );
	deepEqual( Stem("gehauen"), "gehau" );
	deepEqual( Stem("gehauenen"), "gehau" );
	deepEqual( Stem("gehäuft"), "gehauft" );
	deepEqual( Stem("gehäufte"), "gehauft" );
	deepEqual( Stem("gehäuften"), "gehauft" );
	deepEqual( Stem("gehaust"), "gehaust" );
	deepEqual( Stem("gehe"), "geh" );
	deepEqual( Stem("geheftet"), "geheftet" );
	deepEqual( Stem("gehefteten"), "geheftet" );
	deepEqual( Stem("gehege"), "geheg" );
	deepEqual( Stem("geheiliget"), "geheiliget" );
	deepEqual( Stem("geheiligt"), "geheiligt" );
	deepEqual( Stem("geheiligte"), "geheiligt" );
	deepEqual( Stem("geheilt"), "geheilt" );
	deepEqual( Stem("geheim"), "geheim" );
	deepEqual( Stem("geheime"), "geheim" );
	deepEqual( Stem("geheimen"), "geheim" );
	deepEqual( Stem("geheimer"), "geheim" );
	deepEqual( Stem("geheimes"), "geheim" );
	deepEqual( Stem("geheimnis"), "geheimnis" );
	deepEqual( Stem("geheimnisse"), "geheimnis" );
	deepEqual( Stem("geheimnissen"), "geheimnis" );
	deepEqual( Stem("geheimnisses"), "geheimnis" );
	deepEqual( Stem("geheimnisvoll"), "geheimnisvoll" );
	deepEqual( Stem("geheimnisvolle"), "geheimnisvoll" );
	deepEqual( Stem("geheimnisvollen"), "geheimnisvoll" );
	deepEqual( Stem("geheimnisvoller"), "geheimnisvoll" );
	deepEqual( Stem("geheimnisvolles"), "geheimnisvoll" );
	deepEqual( Stem("geheimnisvollste"), "geheimnisvoll" );
	deepEqual( Stem("geheimsten"), "geheim" );
	deepEqual( Stem("geheiratet"), "geheiratet" );
	deepEqual( Stem("geheissen"), "geheiss" );
	deepEqual( Stem("geheißen"), "geheiss" );
	deepEqual( Stem("geheizt"), "geheizt" );
	deepEqual( Stem("gehemmt"), "gehemmt" );
	deepEqual( Stem("gehen"), "geh" );
	deepEqual( Stem("gehend"), "gehend" );
	deepEqual( Stem("gehenden"), "gehend" );
	deepEqual( Stem("gehenkter"), "gehenkt" );
	deepEqual( Stem("gehet"), "gehet" );
	deepEqual( Stem("gehetzt"), "gehetzt" );
	deepEqual( Stem("gehetzten"), "gehetzt" );
	deepEqual( Stem("geheuer"), "geheu" );
	deepEqual( Stem("gehilfe"), "gehilf" );
	deepEqual( Stem("gehilfenprüfung"), "gehilfenpruf" );
	deepEqual( Stem("gehindert"), "gehindert" );
	deepEqual( Stem("gehirn"), "gehirn" );
	deepEqual( Stem("gehirne"), "gehirn" );
	deepEqual( Stem("gehirns"), "gehirn" );
	deepEqual( Stem("gehn"), "gehn" );
	deepEqual( Stem("gehoben"), "gehob" );
	deepEqual( Stem("gehofft"), "gehofft" );
	deepEqual( Stem("gehoffte"), "gehofft" );
	deepEqual( Stem("gehöften"), "gehoft" );
	deepEqual( Stem("geholfen"), "geholf" );
	deepEqual( Stem("geholt"), "geholt" );
	deepEqual( Stem("gehölz"), "geholz" );
	deepEqual( Stem("gehölze"), "geholz" );
	deepEqual( Stem("gehölzes"), "geholz" );
	deepEqual( Stem("gehör"), "gehor" );
	deepEqual( Stem("gehorchen"), "gehorch" );
	deepEqual( Stem("gehorchend"), "gehorch" );
	deepEqual( Stem("gehorchet"), "gehorchet" );
	deepEqual( Stem("gehorchst"), "gehorch" );
	deepEqual( Stem("gehorcht"), "gehorcht" );
	deepEqual( Stem("gehorchten"), "gehorcht" );
	deepEqual( Stem("gehöre"), "gehor" );
	deepEqual( Stem("gehören"), "gehor" );
	deepEqual( Stem("gehörig"), "gehor" );
	deepEqual( Stem("gehörige"), "gehor" );
	deepEqual( Stem("gehörigen"), "gehor" );
	deepEqual( Stem("gehöriger"), "gehor" );
	deepEqual( Stem("gehöriges"), "gehor" );
	deepEqual( Stem("gehörnte"), "gehornt" );
	deepEqual( Stem("gehörs"), "gehor" );
	deepEqual( Stem("gehorsam"), "gehorsam" );
	deepEqual( Stem("gehörst"), "gehorst" );
	deepEqual( Stem("gehört"), "gehort" );
	deepEqual( Stem("gehörte"), "gehort" );
	deepEqual( Stem("gehörten"), "gehort" );
	deepEqual( Stem("gehörtest"), "gehort" );
	deepEqual( Stem("gehrock"), "gehrock" );
	deepEqual( Stem("gehröcken"), "gehrock" );
	deepEqual( Stem("gehst"), "gehst" );
	deepEqual( Stem("geht"), "geht" );
	deepEqual( Stem("gehüllt"), "gehullt" );
	deepEqual( Stem("gehuret"), "gehuret" );
	deepEqual( Stem("gehuscht"), "gehuscht" );
	deepEqual( Stem("gehütet"), "gehutet" );
	deepEqual( Stem("geige"), "geig" );
	deepEqual( Stem("geigelein"), "geigelein" );
	deepEqual( Stem("geigen"), "geig" );
	deepEqual( Stem("geigender"), "geigend" );
	deepEqual( Stem("geigensumsemann"), "geigensumsemann" );
	deepEqual( Stem("geiger"), "geig" );
	deepEqual( Stem("geigers"), "geig" );
	deepEqual( Stem("geigte"), "geigt" );
	deepEqual( Stem("geirrt"), "geirrt" );
	deepEqual( Stem("geiss"), "geiss" );
	deepEqual( Stem("geissel"), "geissel" );
	deepEqual( Stem("geißel"), "geissel" );
	deepEqual( Stem("geist"), "geist" );
	deepEqual( Stem("geiste"), "geist" );
	deepEqual( Stem("geister"), "geist" );
	deepEqual( Stem("geisterblaue"), "geisterblau" );
	deepEqual( Stem("geistergesellschaft"), "geistergesellschaft" );
	deepEqual( Stem("geistergrauen"), "geistergrau" );
	deepEqual( Stem("geisterheere"), "geisterhe" );
	deepEqual( Stem("geistern"), "geist" );
	deepEqual( Stem("geisterrede"), "geisterred" );
	deepEqual( Stem("geistersprache"), "geistersprach" );
	deepEqual( Stem("geisterwelt"), "geisterwelt" );
	deepEqual( Stem("geistes"), "geist" );
	deepEqual( Stem("geistesgaben"), "geistesgab" );
	deepEqual( Stem("geistesgegenwart"), "geistesgegenwart" );
	deepEqual( Stem("geisteskräfte"), "geisteskraft" );
	deepEqual( Stem("geisteskranke"), "geisteskrank" );
	deepEqual( Stem("geistestalente"), "geistestalent" );
	deepEqual( Stem("geistesübung"), "geistesub" );
	deepEqual( Stem("geistig"), "geistig" );
	deepEqual( Stem("geistige"), "geistig" );
	deepEqual( Stem("geistigem"), "geistig" );
	deepEqual( Stem("geistigen"), "geistig" );
	deepEqual( Stem("geistiger"), "geistig" );
	deepEqual( Stem("geistigeren"), "geistig" );
	deepEqual( Stem("geistigeres"), "geistig" );
	deepEqual( Stem("geistiges"), "geistig" );
	deepEqual( Stem("geistigkeit"), "geistig" );
	deepEqual( Stem("geistigste"), "geistig" );
	deepEqual( Stem("geistigsten"), "geistig" );
	deepEqual( Stem("geistlich"), "geistlich" );
	deepEqual( Stem("geistliche"), "geistlich" );
	deepEqual( Stem("geistlichen"), "geistlich" );
	deepEqual( Stem("geistlichkeit"), "geistlich" );
	deepEqual( Stem("geistlose"), "geistlos" );
	deepEqual( Stem("geistreich"), "geistreich" );
	deepEqual( Stem("geistreiches"), "geistreich" );
	deepEqual( Stem("geistreichste"), "geistreich" );
	deepEqual( Stem("geiz"), "geiz" );
	deepEqual( Stem("gejagt"), "gejagt" );
	deepEqual( Stem("gekämmt"), "gekammt" );
	deepEqual( Stem("gekämpft"), "gekampft" );
	deepEqual( Stem("gekannt"), "gekannt" );
	deepEqual( Stem("gekauft"), "gekauft" );
	deepEqual( Stem("gekauften"), "gekauft" );
	deepEqual( Stem("gekehrt"), "gekehrt" );
	deepEqual( Stem("gekeltert"), "gekeltert" );
	deepEqual( Stem("gekerbt"), "gekerbt" );
	deepEqual( Stem("gekitzelt"), "gekitzelt" );
	deepEqual( Stem("gekläff"), "geklaff" );
	deepEqual( Stem("geklagt"), "geklagt" );
	deepEqual( Stem("geklammert"), "geklammert" );
	deepEqual( Stem("geklappert"), "geklappert" );
	deepEqual( Stem("geklaut"), "geklaut" );
	deepEqual( Stem("geklebt"), "geklebt" );
	deepEqual( Stem("geklebten"), "geklebt" );
	deepEqual( Stem("gekleidet"), "gekleidet" );
	deepEqual( Stem("gekleideten"), "gekleidet" );
	deepEqual( Stem("gekleidetes"), "gekleidet" );
	deepEqual( Stem("geklemmt"), "geklemmt" );
	deepEqual( Stem("geklettert"), "geklettert" );
	deepEqual( Stem("gekneift"), "gekneift" );
	deepEqual( Stem("geknurre"), "geknurr" );
	deepEqual( Stem("gekocht"), "gekocht" );
	deepEqual( Stem("gekommen"), "gekomm" );
	deepEqual( Stem("gekonnt"), "gekonnt" );
	deepEqual( Stem("geköpft"), "gekopft" );
	deepEqual( Stem("gekostet"), "gekostet" );
	deepEqual( Stem("gekränkt"), "gekrankt" );
	deepEqual( Stem("gekräuselte"), "gekrauselt" );
	deepEqual( Stem("gekreisst"), "gekreisst" );
	deepEqual( Stem("gekreißt"), "gekreisst" );
	deepEqual( Stem("gekreuzigt"), "gekreuzigt" );
	deepEqual( Stem("gekreuzt"), "gekreuzt" );
	deepEqual( Stem("gekreuzten"), "gekreuzt" );
	deepEqual( Stem("gekriegt"), "gekriegt" );
	deepEqual( Stem("gekrönt"), "gekront" );
	deepEqual( Stem("gekrönten"), "gekront" );
	deepEqual( Stem("gekühlt"), "gekuhlt" );
	deepEqual( Stem("gelächelt"), "gelachelt" );
	deepEqual( Stem("gelacht"), "gelacht" );
	deepEqual( Stem("gelächter"), "gelacht" );
	deepEqual( Stem("gelächters"), "gelacht" );
	deepEqual( Stem("geladen"), "gelad" );
	deepEqual( Stem("geladenen"), "gelad" );
	deepEqual( Stem("gelage"), "gelag" );
	deepEqual( Stem("gelagen"), "gelag" );
	deepEqual( Stem("gelagerten"), "gelagert" );
	deepEqual( Stem("gelähmte"), "gelahmt" );
	deepEqual( Stem("gelähmten"), "gelahmt" );
	deepEqual( Stem("gelände"), "geland" );
	deepEqual( Stem("geländer"), "geland" );
	deepEqual( Stem("gelandet"), "gelandet" );
	deepEqual( Stem("gelang"), "gelang" );
	deepEqual( Stem("gelänge"), "gelang" );
	deepEqual( Stem("gelangen"), "gelang" );
	deepEqual( Stem("gelangest"), "gelang" );
	deepEqual( Stem("gelangt"), "gelangt" );
	deepEqual( Stem("gelangte"), "gelangt" );
	deepEqual( Stem("gelangten"), "gelangt" );
	deepEqual( Stem("gelangung"), "gelang" );
	deepEqual( Stem("gelangweilt"), "gelangweilt" );
	deepEqual( Stem("gelass"), "gelass" );
	deepEqual( Stem("gelassen"), "gelass" );
	deepEqual( Stem("gelassenen"), "gelass" );
	deepEqual( Stem("gelassener"), "gelass" );
	deepEqual( Stem("gelassenheit"), "gelass" );
	deepEqual( Stem("gelaufe"), "gelauf" );
	deepEqual( Stem("gelaufen"), "gelauf" );
	deepEqual( Stem("gelaunt"), "gelaunt" );
	deepEqual( Stem("gelauscht"), "gelauscht" );
	deepEqual( Stem("geläute"), "gelaut" );
	deepEqual( Stem("geläutet"), "gelautet" );
	deepEqual( Stem("gelb"), "gelb" );
	deepEqual( Stem("gelbe"), "gelb" );
	deepEqual( Stem("gelben"), "gelb" );
	deepEqual( Stem("gelber"), "gelb" );
	deepEqual( Stem("gelbes"), "gelb" );
	deepEqual( Stem("gelbleuchtende"), "gelbleucht" );
	deepEqual( Stem("gelblich"), "gelblich" );
	deepEqual( Stem("geld"), "geld" );
	deepEqual( Stem("geldabfluss"), "geldabfluss" );
	deepEqual( Stem("geldaufzählens"), "geldaufzahl" );
	deepEqual( Stem("geldbeutel"), "geldbeutel" );
	deepEqual( Stem("geldbörse"), "geldbors" );
	deepEqual( Stem("geldbürgschaft"), "geldburgschaft" );
	deepEqual( Stem("geldbussen"), "geldbuss" );
	deepEqual( Stem("geldchen"), "geldch" );
	deepEqual( Stem("gelde"), "geld" );
	deepEqual( Stem("gelder"), "geld" );
	deepEqual( Stem("geldes"), "geld" );
	deepEqual( Stem("geldgier"), "geldgi" );
	deepEqual( Stem("geldklemme"), "geldklemm" );
	deepEqual( Stem("geldmachen"), "geldmach" );
	deepEqual( Stem("geldmännern"), "geldmann" );
	deepEqual( Stem("geldmittel"), "geldmittel" );
	deepEqual( Stem("geldmitteln"), "geldmitteln" );
	deepEqual( Stem("geldnöten"), "geldnot" );
	deepEqual( Stem("geldstück"), "geldstuck" );
	deepEqual( Stem("geldsummen"), "geldsumm" );
	deepEqual( Stem("geldtransfer"), "geldtransf" );
	deepEqual( Stem("gelebt"), "gelebt" );
	deepEqual( Stem("geleckten"), "geleckt" );
	deepEqual( Stem("geleert"), "geleert" );
	deepEqual( Stem("gelees"), "gele" );
	deepEqual( Stem("gelegen"), "geleg" );
	deepEqual( Stem("gelegenen"), "geleg" );
	deepEqual( Stem("gelegenheit"), "geleg" );
	deepEqual( Stem("gelegenheiten"), "geleg" );
	deepEqual( Stem("gelegentlich"), "gelegent" );
	deepEqual( Stem("gelegentliche"), "gelegent" );
	deepEqual( Stem("gelegt"), "gelegt" );
	deepEqual( Stem("gelegtes"), "gelegt" );
	deepEqual( Stem("gelehnt"), "gelehnt" );
	deepEqual( Stem("gelehret"), "gelehret" );
	deepEqual( Stem("gelehrsamkeit"), "gelehrsam" );
	deepEqual( Stem("gelehrt"), "gelehrt" );
	deepEqual( Stem("gelehrte"), "gelehrt" );
	deepEqual( Stem("gelehrten"), "gelehrt" );
	deepEqual( Stem("gelehrter"), "gelehrt" );
	deepEqual( Stem("gelehrteste"), "gelehrt" );
	deepEqual( Stem("geleistet"), "geleistet" );
	deepEqual( Stem("geleit"), "geleit" );
	deepEqual( Stem("geleitet"), "geleitet" );
	deepEqual( Stem("geleitete"), "geleitet" );
	deepEqual( Stem("gelenkchen"), "gelenkch" );
	deepEqual( Stem("gelenken"), "gelenk" );
	deepEqual( Stem("gelenkige"), "gelenk" );
	deepEqual( Stem("gelenkt"), "gelenkt" );
	deepEqual( Stem("gelernt"), "gelernt" );
	deepEqual( Stem("gelesen"), "geles" );
	deepEqual( Stem("geleuchtet"), "geleuchtet" );
	deepEqual( Stem("geleugnet"), "geleugnet" );
	deepEqual( Stem("geliebet"), "geliebet" );
	deepEqual( Stem("geliebt"), "geliebt" );
	deepEqual( Stem("geliebte"), "geliebt" );
	deepEqual( Stem("geliebten"), "geliebt" );
	deepEqual( Stem("geliebter"), "geliebt" );
	deepEqual( Stem("geliebtesten"), "geliebt" );
	deepEqual( Stem("geliefert"), "geliefert" );
	deepEqual( Stem("geliehen"), "gelieh" );
	deepEqual( Stem("gelinde"), "gelind" );
	deepEqual( Stem("gelinden"), "gelind" );
	deepEqual( Stem("gelindert"), "gelindert" );
	deepEqual( Stem("gelindes"), "gelind" );
	deepEqual( Stem("gelindesten"), "gelind" );
	deepEqual( Stem("gelingen"), "geling" );
	deepEqual( Stem("gelingens"), "geling" );
	deepEqual( Stem("gelingt"), "gelingt" );
	deepEqual( Stem("gelitten"), "gelitt" );
	deepEqual( Stem("gellend"), "gellend" );
	deepEqual( Stem("gellenden"), "gellend" );
	deepEqual( Stem("gellte"), "gellt" );
	deepEqual( Stem("gelobet"), "gelobet" );
	deepEqual( Stem("gelobt"), "gelobt" );
	deepEqual( Stem("gelobte"), "gelobt" );
	deepEqual( Stem("gelockt"), "gelockt" );
	deepEqual( Stem("gelogen"), "gelog" );
	deepEqual( Stem("gelöscht"), "geloscht" );
	deepEqual( Stem("gelöst"), "gelost" );
	deepEqual( Stem("gelt"), "gelt" );
	deepEqual( Stem("gelte"), "gelt" );
	deepEqual( Stem("gelten"), "gelt" );
	deepEqual( Stem("geltend"), "geltend" );
	deepEqual( Stem("geltende"), "geltend" );
	deepEqual( Stem("geltenden"), "geltend" );
	deepEqual( Stem("geltendmachen"), "geltendmach" );
	deepEqual( Stem("geltens"), "gelt" );
	deepEqual( Stem("gelübde"), "gelubd" );
	deepEqual( Stem("gelübden"), "gelubd" );
	deepEqual( Stem("gelungen"), "gelung" );
	deepEqual( Stem("gelungene"), "gelung" );
	deepEqual( Stem("gelungenen"), "gelung" );
	deepEqual( Stem("gelüste"), "gelust" );
	deepEqual( Stem("gelüsten"), "gelust" );
	deepEqual( Stem("gelüstig"), "gelust" );
	deepEqual( Stem("gelüstigkeit"), "gelust" );
	deepEqual( Stem("gemach"), "gemach" );
	deepEqual( Stem("gemächer"), "gemach" );
	deepEqual( Stem("gemächern"), "gemach" );
	deepEqual( Stem("gemächlich"), "gemach" );
	deepEqual( Stem("gemächliches"), "gemach" );
	deepEqual( Stem("gemachs"), "gemach" );
	deepEqual( Stem("gemacht"), "gemacht" );
	deepEqual( Stem("gemachten"), "gemacht" );
	deepEqual( Stem("gemachter"), "gemacht" );
	deepEqual( Stem("gemahl"), "gemahl" );
	deepEqual( Stem("gemahle"), "gemahl" );
	deepEqual( Stem("gemahlin"), "gemahlin" );
	deepEqual( Stem("gemahnt"), "gemahnt" );
	deepEqual( Stem("gemahnte"), "gemahnt" );
	deepEqual( Stem("gemähte"), "gemaht" );
	deepEqual( Stem("gemähtes"), "gemaht" );
	deepEqual( Stem("gemälde"), "gemald" );
	deepEqual( Stem("gemalt"), "gemalt" );
	deepEqual( Stem("gemalten"), "gemalt" );
	deepEqual( Stem("gemarterten"), "gemartert" );
	deepEqual( Stem("gemäss"), "gemass" );
	deepEqual( Stem("gemäß"), "gemass" );
	deepEqual( Stem("gemässe"), "gemass" );
	deepEqual( Stem("gemässes"), "gemass" );
	deepEqual( Stem("gemäßes"), "gemass" );
	deepEqual( Stem("gemässigt"), "gemassigt" );
	deepEqual( Stem("gemäßigt"), "gemassigt" );
	deepEqual( Stem("gemästet"), "gemastet" );
	deepEqual( Stem("gemästeten"), "gemastet" );
	deepEqual( Stem("gemäuer"), "gemau" );
	deepEqual( Stem("gemecker"), "gemeck" );
	deepEqual( Stem("gemehret"), "gemehret" );
	deepEqual( Stem("gemein"), "gemein" );
	deepEqual( Stem("gemeinde"), "gemeind" );
	deepEqual( Stem("gemeindeammann"), "gemeindeammann" );
	deepEqual( Stem("gemeindedienste"), "gemeindedien" );
	deepEqual( Stem("gemeindegliedern"), "gemeindeglied" );
	deepEqual( Stem("gemeindegutes"), "gemeindegut" );
	deepEqual( Stem("gemeinden"), "gemeind" );
	deepEqual( Stem("gemeindepfarrer"), "gemeindepfarr" );
	deepEqual( Stem("gemeindepräsident"), "gemeindeprasident" );
	deepEqual( Stem("gemeindeschreiber"), "gemeindeschreib" );
	deepEqual( Stem("gemeindespritze"), "gemeindespritz" );
	deepEqual( Stem("gemeine"), "gemein" );
	deepEqual( Stem("gemeinen"), "gemein" );
	deepEqual( Stem("gemeiner"), "gemein" );
	deepEqual( Stem("gemeingut"), "gemeingut" );
	deepEqual( Stem("gemeinheit"), "gemein" );
	deepEqual( Stem("gemeinhin"), "gemeinhin" );
	deepEqual( Stem("gemeiniglich"), "gemeinig" );
	deepEqual( Stem("gemeinnützig"), "gemeinnutz" );
	deepEqual( Stem("gemeinnützige"), "gemeinnutz" );
	deepEqual( Stem("gemeinsam"), "gemeinsam" );
	deepEqual( Stem("gemeinsame"), "gemeinsam" );
	deepEqual( Stem("gemeinsamen"), "gemeinsam" );
	deepEqual( Stem("gemeinsamkeiten"), "gemeinsam" );
	deepEqual( Stem("gemeinschaft"), "gemeinschaft" );
	deepEqual( Stem("gemeinschaften"), "gemeinschaft" );
	deepEqual( Stem("gemeinschaftlich"), "gemeinschaft" );
	deepEqual( Stem("gemeinschaftliche"), "gemeinschaft" );
	deepEqual( Stem("gemeinschaftlichen"), "gemeinschaft" );
	deepEqual( Stem("gemeinschaftliches"), "gemeinschaft" );
	deepEqual( Stem("gemeinschaftsbadezimmern"), "gemeinschaftsbadezimm" );
	deepEqual( Stem("gemeinste"), "gemein" );
	deepEqual( Stem("gemeinsten"), "gemein" );
	deepEqual( Stem("gemeint"), "gemeint" );
	deepEqual( Stem("gemeinte"), "gemeint" );
	deepEqual( Stem("gemeinwesen"), "gemeinwes" );
	deepEqual( Stem("gemeisselt"), "gemeisselt" );
	deepEqual( Stem("gemeldet"), "gemeldet" );
	deepEqual( Stem("gemengt"), "gemengt" );
	deepEqual( Stem("gemerkt"), "gemerkt" );
	deepEqual( Stem("gemessene"), "gemess" );
	deepEqual( Stem("gemessenen"), "gemess" );
	deepEqual( Stem("gemessener"), "gemess" );
	deepEqual( Stem("gemieden"), "gemied" );
	deepEqual( Stem("gemiedene"), "gemied" );
	deepEqual( Stem("gemieteten"), "gemietet" );
	deepEqual( Stem("gemildert"), "gemildert" );
	deepEqual( Stem("gemindert"), "gemindert" );
	deepEqual( Stem("gemisch"), "gemisch" );
	deepEqual( Stem("gemischt"), "gemischt" );
	deepEqual( Stem("gemischten"), "gemischt" );
	deepEqual( Stem("gemischtes"), "gemischt" );
	deepEqual( Stem("gemordet"), "gemordet" );
	deepEqual( Stem("gemsbart"), "gemsbart" );
	deepEqual( Stem("gemsbärte"), "gemsbart" );
	deepEqual( Stem("gemshorn"), "gemshorn" );
	deepEqual( Stem("gemüllhaufen"), "gemullhauf" );
	deepEqual( Stem("gemurrt"), "gemurrt" );
	deepEqual( Stem("gemüse"), "gemus" );
	deepEqual( Stem("gemüsegarten"), "gemusegart" );
	deepEqual( Stem("gemüsegartens"), "gemusegart" );
	deepEqual( Stem("gemüseplatz"), "gemuseplatz" );
	deepEqual( Stem("gemusst"), "gemusst" );
	deepEqual( Stem("gemüt"), "gemut" );
	deepEqual( Stem("gemüte"), "gemut" );
	deepEqual( Stem("gemüter"), "gemut" );
	deepEqual( Stem("gemütes"), "gemut" );
	deepEqual( Stem("gemütlich"), "gemut" );
	deepEqual( Stem("gemütliche"), "gemut" );
	deepEqual( Stem("gemütlichen"), "gemut" );
	deepEqual( Stem("gemütlicher"), "gemut" );
	deepEqual( Stem("gemütlichkeit"), "gemut" );
	deepEqual( Stem("gemüts"), "gemut" );
	deepEqual( Stem("gemütsanlage"), "gemutsanlag" );
	deepEqual( Stem("gemütsart"), "gemutsart" );
	deepEqual( Stem("gemütsbeschaffenheit"), "gemutsbeschaff" );
	deepEqual( Stem("gemütskräfte"), "gemutskraft" );
	deepEqual( Stem("gemütsverfassung"), "gemutsverfass" );
	deepEqual( Stem("gemütswesen"), "gemutswes" );
	deepEqual( Stem("gemütvolle"), "gemutvoll" );
	deepEqual( Stem("gen"), "gen" );
	deepEqual( Stem("genagelt"), "genagelt" );
	deepEqual( Stem("genähert"), "genahert" );
	deepEqual( Stem("genährt"), "genahrt" );
	deepEqual( Stem("genannt"), "genannt" );
	deepEqual( Stem("genannte"), "genannt" );
	deepEqual( Stem("genanntem"), "genannt" );
	deepEqual( Stem("genannten"), "genannt" );
	deepEqual( Stem("genarrtes"), "genarrt" );
	deepEqual( Stem("genau"), "genau" );
	deepEqual( Stem("genaue"), "genau" );
	deepEqual( Stem("genauen"), "genau" );
	deepEqual( Stem("genauer"), "genau" );
	deepEqual( Stem("genauere"), "genau" );
	deepEqual( Stem("genaueres"), "genau" );
	deepEqual( Stem("genaues"), "genau" );
	deepEqual( Stem("genaueste"), "genau" );
	deepEqual( Stem("genauso"), "genauso" );
	deepEqual( Stem("genausten"), "genaust" );
	deepEqual( Stem("genehm"), "genehm" );
	deepEqual( Stem("genehmigt"), "genehmigt" );
	deepEqual( Stem("geneigt"), "geneigt" );
	deepEqual( Stem("geneigte"), "geneigt" );
	deepEqual( Stem("geneigtem"), "geneigt" );
	deepEqual( Stem("geneigter"), "geneigt" );
	deepEqual( Stem("geneigtheit"), "geneigt" );
	deepEqual( Stem("genera"), "genera" );
	deepEqual( Stem("general"), "general" );
	deepEqual( Stem("generäle"), "general" );
	deepEqual( Stem("generalen"), "general" );
	deepEqual( Stem("generalsekretär"), "generalsekretar" );
	deepEqual( Stem("generalstreik"), "generalstreik" );
	deepEqual( Stem("generalsynode"), "generalsynod" );
	deepEqual( Stem("generation"), "generation" );
	deepEqual( Stem("generell"), "generell" );
	deepEqual( Stem("generelles"), "generell" );
	deepEqual( Stem("genesen"), "genes" );
	deepEqual( Stem("genesis"), "genesis" );
	deepEqual( Stem("genesung"), "genes" );
	deepEqual( Stem("genf"), "genf" );
	deepEqual( Stem("genfer"), "genf" );
	deepEqual( Stem("genialen"), "genial" );
	deepEqual( Stem("genick"), "genick" );
	deepEqual( Stem("genickt"), "genickt" );
	deepEqual( Stem("genie"), "geni" );
	deepEqual( Stem("genien"), "geni" );
	deepEqual( Stem("genieren"), "geni" );
	deepEqual( Stem("geniert"), "geniert" );
	deepEqual( Stem("genies"), "geni" );
	deepEqual( Stem("genieschwüngen"), "genieschwung" );
	deepEqual( Stem("geniessen"), "geniess" );
	deepEqual( Stem("genießen"), "geniess" );
	deepEqual( Stem("geniessest"), "geniess" );
	deepEqual( Stem("geniesst"), "geniesst" );
	deepEqual( Stem("genießt"), "geniesst" );
	deepEqual( Stem("genitiv"), "genitiv" );
	deepEqual( Stem("genitive"), "genitiv" );
	deepEqual( Stem("genius"), "genius" );
	deepEqual( Stem("genommen"), "genomm" );
	deepEqual( Stem("genommnen"), "genommn" );
	deepEqual( Stem("genoss"), "genoss" );
	deepEqual( Stem("genoß"), "genoss" );
	deepEqual( Stem("genosse"), "genoss" );
	deepEqual( Stem("genossen"), "genoss" );
	deepEqual( Stem("genossene"), "genoss" );
	deepEqual( Stem("genossenen"), "genoss" );
	deepEqual( Stem("genossin"), "genossin" );
	deepEqual( Stem("genötigt"), "genotigt" );
	deepEqual( Stem("gens"), "gen" );
	deepEqual( Stem("gentliche"), "gentlich" );
	deepEqual( Stem("genug"), "genug" );
	deepEqual( Stem("genüge"), "genug" );
	deepEqual( Stem("genügen"), "genug" );
	deepEqual( Stem("genügend"), "genug" );
	deepEqual( Stem("genügenden"), "genug" );
	deepEqual( Stem("genügender"), "genug" );
	deepEqual( Stem("genugsam"), "genugsam" );
	deepEqual( Stem("genügsam"), "genugsam" );
	deepEqual( Stem("genugsamem"), "genugsam" );
	deepEqual( Stem("genugsamer"), "genugsam" );
	deepEqual( Stem("genügsamkeit"), "genugsam" );
	deepEqual( Stem("genügt"), "genugt" );
	deepEqual( Stem("genügte"), "genugt" );
	deepEqual( Stem("genugtuung"), "genugtu" );
	deepEqual( Stem("genus"), "genus" );
	deepEqual( Stem("genuss"), "genuss" );
	deepEqual( Stem("genuß"), "genuss" );
	deepEqual( Stem("genussarten"), "genussart" );
	deepEqual( Stem("genusse"), "genuss" );
	deepEqual( Stem("genüsse"), "genuss" );
	deepEqual( Stem("genüssen"), "genuss" );
	deepEqual( Stem("genusses"), "genuss" );
	deepEqual( Stem("genussreich"), "genussreich" );
	deepEqual( Stem("genußreich"), "genussreich" );
	deepEqual( Stem("genützt"), "genutzt" );
	deepEqual( Stem("geoffenbart"), "geoffenbart" );
	deepEqual( Stem("geoffenbarte"), "geoffenbart" );
	deepEqual( Stem("geoffenbartem"), "geoffenbart" );
	deepEqual( Stem("geoffenbarten"), "geoffenbart" );
	deepEqual( Stem("geöffnet"), "geoffnet" );
	deepEqual( Stem("geöffnete"), "geoffnet" );
	deepEqual( Stem("geöffneten"), "geoffnet" );
	deepEqual( Stem("geöffnetwerden"), "geoffnetwerd" );
	deepEqual( Stem("geographiebuch"), "geographiebuch" );
	deepEqual( Stem("geographiebuche"), "geographiebuch" );
	deepEqual( Stem("geographiebuches"), "geographiebuch" );
	deepEqual( Stem("geohrfeigt"), "geohrfeigt" );
	deepEqual( Stem("geölte"), "geolt" );
	deepEqual( Stem("geometer"), "geomet" );
	deepEqual( Stem("geometrie"), "geometri" );
	deepEqual( Stem("geometrische"), "geometr" );
	deepEqual( Stem("geometrischen"), "geometr" );
	deepEqual( Stem("geopfert"), "geopfert" );
	deepEqual( Stem("geordnet"), "geordnet" );
	deepEqual( Stem("georg"), "georg" );
	deepEqual( Stem("gepaart"), "gepaart" );
	deepEqual( Stem("gepäck"), "gepack" );
	deepEqual( Stem("gepäckes"), "gepack" );
	deepEqual( Stem("gepackt"), "gepackt" );
	deepEqual( Stem("gepäckwagen"), "gepackwag" );
	deepEqual( Stem("gepanzerter"), "gepanzert" );
	deepEqual( Stem("gepasst"), "gepasst" );
	deepEqual( Stem("gepaßt"), "gepasst" );
	deepEqual( Stem("gepeinigt"), "gepeinigt" );
	deepEqual( Stem("gepeinigter"), "gepeinigt" );
	deepEqual( Stem("gepeitscht"), "gepeitscht" );
	deepEqual( Stem("gepfeife"), "gepfeif" );
	deepEqual( Stem("gepflanzt"), "gepflanzt" );
	deepEqual( Stem("gepflanzte"), "gepflanzt" );
	deepEqual( Stem("gepflasterten"), "gepflastert" );
	deepEqual( Stem("gepflegt"), "gepflegt" );
	deepEqual( Stem("gepflegte"), "gepflegt" );
	deepEqual( Stem("gepflegter"), "gepflegt" );
	deepEqual( Stem("gepflogen"), "gepflog" );
	deepEqual( Stem("gepflückt"), "gepfluckt" );
	deepEqual( Stem("gepflügt"), "gepflugt" );
	deepEqual( Stem("gepfropft"), "gepfropft" );
	deepEqual( Stem("geplagt"), "geplagt" );
	deepEqual( Stem("geplante"), "geplant" );
	deepEqual( Stem("geplanten"), "geplant" );
	deepEqual( Stem("geplättet"), "geplattet" );
	deepEqual( Stem("geplauder"), "geplaud" );
	deepEqual( Stem("geplünderten"), "geplundert" );
	deepEqual( Stem("gepolsterter"), "gepolstert" );
	deepEqual( Stem("geprägt"), "gepragt" );
	deepEqual( Stem("gepränge"), "geprang" );
	deepEqual( Stem("gepredigt"), "gepredigt" );
	deepEqual( Stem("gepressten"), "gepresst" );
	deepEqual( Stem("gepresster"), "gepresst" );
	deepEqual( Stem("gepriesen"), "gepries" );
	deepEqual( Stem("geprüft"), "gepruft" );
	deepEqual( Stem("geprügelt"), "geprugelt" );
	deepEqual( Stem("geprügelten"), "geprugelt" );
	deepEqual( Stem("geputzt"), "geputzt" );
	deepEqual( Stem("geputzte"), "geputzt" );
	deepEqual( Stem("geputzter"), "geputzt" );
	deepEqual( Stem("gequält"), "gequalt" );
	deepEqual( Stem("gequälten"), "gequalt" );
	deepEqual( Stem("gerächt"), "geracht" );
	deepEqual( Stem("gerade"), "gerad" );
	deepEqual( Stem("geraden"), "gerad" );
	deepEqual( Stem("gerader"), "gerad" );
	deepEqual( Stem("geradeso"), "geradeso" );
	deepEqual( Stem("geradewegs"), "geradeweg" );
	deepEqual( Stem("geradezu"), "geradezu" );
	deepEqual( Stem("geradheit"), "gerad" );
	deepEqual( Stem("geradso"), "geradso" );
	deepEqual( Stem("gerannt"), "gerannt" );
	deepEqual( Stem("gerassel"), "gerassel" );
	deepEqual( Stem("gerasselt"), "gerasselt" );
	deepEqual( Stem("gerast"), "gerast" );
	deepEqual( Stem("gerastet"), "gerastet" );
	deepEqual( Stem("gerät"), "gerat" );
	deepEqual( Stem("geraten"), "gerat" );
	deepEqual( Stem("gerätes"), "gerat" );
	deepEqual( Stem("geratewohl"), "geratewohl" );
	deepEqual( Stem("gerattere"), "geratt" );
	deepEqual( Stem("gerauft"), "gerauft" );
	deepEqual( Stem("geraume"), "geraum" );
	deepEqual( Stem("geraumer"), "geraum" );
	deepEqual( Stem("geräumige"), "geraum" );
	deepEqual( Stem("geräumigen"), "geraum" );
	deepEqual( Stem("geräusch"), "gerausch" );
	deepEqual( Stem("geräusches"), "gerausch" );
	deepEqual( Stem("geräuschlosen"), "gerauschlos" );
	deepEqual( Stem("geräuschvollen"), "gerauschvoll" );
	deepEqual( Stem("geräuschvollsten"), "gerauschvoll" );
	deepEqual( Stem("gerdt"), "gerdt" );
	deepEqual( Stem("gerechnet"), "gerechnet" );
	deepEqual( Stem("gerecht"), "gerecht" );
	deepEqual( Stem("gerechte"), "gerecht" );
	deepEqual( Stem("gerechten"), "gerecht" );
	deepEqual( Stem("gerechter"), "gerecht" );
	deepEqual( Stem("gerechtfertigt"), "gerechtfertigt" );
	deepEqual( Stem("gerechtfertigter"), "gerechtfertigt" );
	deepEqual( Stem("gerechtigkeit"), "gerecht" );
	deepEqual( Stem("gerechtigkeitsformen"), "gerechtigkeitsform" );
	deepEqual( Stem("gerede"), "gered" );
	deepEqual( Stem("geredet"), "geredet" );
	deepEqual( Stem("geregnet"), "geregnet" );
	deepEqual( Stem("gereicht"), "gereicht" );
	deepEqual( Stem("gereigte"), "gereigt" );
	deepEqual( Stem("gereimtes"), "gereimt" );
	deepEqual( Stem("gereinigt"), "gereinigt" );
	deepEqual( Stem("gereinigten"), "gereinigt" );
	deepEqual( Stem("gereist"), "gereist" );
	deepEqual( Stem("gereizt"), "gereizt" );
	deepEqual( Stem("gereiztheit"), "gereizt" );
	deepEqual( Stem("gerettet"), "gerettet" );
	deepEqual( Stem("gerettete"), "gerettet" );
	deepEqual( Stem("geretteten"), "gerettet" );
	deepEqual( Stem("gereue"), "gereu" );
	deepEqual( Stem("gereuen"), "gereu" );
	deepEqual( Stem("gereuend"), "gereu" );
	deepEqual( Stem("gereut"), "gereut" );
	deepEqual( Stem("gereute"), "gereut" );
	deepEqual( Stem("gereuungen"), "gereu" );
	deepEqual( Stem("gericht"), "gericht" );
	deepEqual( Stem("gerichte"), "gericht" );
	deepEqual( Stem("gerichten"), "gericht" );
	deepEqual( Stem("gerichtes"), "gericht" );
	deepEqual( Stem("gerichtet"), "gerichtet" );
	deepEqual( Stem("gerichtete"), "gerichtet" );
	deepEqual( Stem("gerichtetes"), "gerichtet" );
	deepEqual( Stem("gerichtlich"), "gericht" );
	deepEqual( Stem("gerichts"), "gericht" );
	deepEqual( Stem("gerichtsbeamten"), "gerichtsbeamt" );
	deepEqual( Stem("gerichtsbeschluss"), "gerichtsbeschluss" );
	deepEqual( Stem("gerichtsbeschluß"), "gerichtsbeschluss" );
	deepEqual( Stem("gerichtsdiener"), "gerichtsdi" );
	deepEqual( Stem("gerichtshöfe"), "gerichtshof" );
	deepEqual( Stem("gerichtshöfen"), "gerichtshof" );
	deepEqual( Stem("gerichtskanzleien"), "gerichtskanzlei" );
	deepEqual( Stem("gerichtsorganisation"), "gerichtsorganisation" );
	deepEqual( Stem("gerichtsorganismus"), "gerichtsorganismus" );
	deepEqual( Stem("gerichtssache"), "gerichtssach" );
	deepEqual( Stem("gerichtsschranken"), "gerichtsschrank" );
	deepEqual( Stem("gerichtsschriften"), "gerichtsschrift" );
	deepEqual( Stem("gerichtsverhandlung"), "gerichtsverhandl" );
	deepEqual( Stem("gerichtswesens"), "gerichtswes" );
	deepEqual( Stem("gerichtszimmer"), "gerichtszimm" );
	deepEqual( Stem("gerieben"), "gerieb" );
	deepEqual( Stem("geriebener"), "gerieb" );
	deepEqual( Stem("geriegelt"), "geriegelt" );
	deepEqual( Stem("geriet"), "geriet" );
	deepEqual( Stem("gerieten"), "geriet" );
	deepEqual( Stem("gering"), "gering" );
	deepEqual( Stem("geringe"), "gering" );
	deepEqual( Stem("geringem"), "gering" );
	deepEqual( Stem("geringen"), "gering" );
	deepEqual( Stem("geringer"), "gering" );
	deepEqual( Stem("geringere"), "gering" );
	deepEqual( Stem("geringerer"), "gering" );
	deepEqual( Stem("geringeres"), "gering" );
	deepEqual( Stem("geringes"), "gering" );
	deepEqual( Stem("geringfügig"), "geringfug" );
	deepEqual( Stem("geringfügige"), "geringfug" );
	deepEqual( Stem("geringfügigsten"), "geringfug" );
	deepEqual( Stem("geringgeschätzt"), "geringgeschatzt" );
	deepEqual( Stem("geringschätzig"), "geringschatz" );
	deepEqual( Stem("geringschätzung"), "geringschatz" );
	deepEqual( Stem("geringste"), "gering" );
	deepEqual( Stem("geringsten"), "gering" );
	deepEqual( Stem("gerinnen"), "gerinn" );
	deepEqual( Stem("gerippe"), "geripp" );
	deepEqual( Stem("geripptes"), "gerippt" );
	deepEqual( Stem("gerissen"), "geriss" );
	deepEqual( Stem("geritten"), "geritt" );
	deepEqual( Stem("german"), "german" );
	deepEqual( Stem("germanen"), "german" );
	deepEqual( Stem("germanischen"), "german" );
	deepEqual( Stem("gern"), "gern" );
	deepEqual( Stem("gerne"), "gern" );
	deepEqual( Stem("gerochen"), "geroch" );
	deepEqual( Stem("geröllhalde"), "gerollhald" );
	deepEqual( Stem("geröllhalden"), "gerollhald" );
	deepEqual( Stem("geröllhang"), "gerollhang" );
	deepEqual( Stem("geröstete"), "gerostet" );
	deepEqual( Stem("gerösteten"), "gerostet" );
	deepEqual( Stem("geröstetes"), "gerostet" );
	deepEqual( Stem("gerötet"), "gerotet" );
	deepEqual( Stem("gerötete"), "gerotet" );
	deepEqual( Stem("geröteter"), "gerotet" );
	deepEqual( Stem("gersom"), "gersom" );
	deepEqual( Stem("gerson"), "gerson" );
	deepEqual( Stem("gersons"), "gerson" );
	deepEqual( Stem("gerste"), "gerst" );
	deepEqual( Stem("gerstenbrot"), "gerstenbrot" );
	deepEqual( Stem("gerte"), "gert" );
	deepEqual( Stem("geruch"), "geruch" );
	deepEqual( Stem("gerüche"), "geruch" );
	deepEqual( Stem("geruches"), "geruch" );
	deepEqual( Stem("geruchs"), "geruch" );
	deepEqual( Stem("gerücht"), "gerucht" );
	deepEqual( Stem("gerüchte"), "gerucht" );
	deepEqual( Stem("gerüchteweise"), "geruchteweis" );
	deepEqual( Stem("gerüchtweise"), "geruchtweis" );
	deepEqual( Stem("gerufen"), "geruf" );
	deepEqual( Stem("gerufenwerdens"), "gerufenwerd" );
	deepEqual( Stem("gerührt"), "geruhrt" );
	deepEqual( Stem("gerührter"), "geruhrt" );
	deepEqual( Stem("geruhsamen"), "geruhsam" );
	deepEqual( Stem("geruht"), "geruht" );
	deepEqual( Stem("gerumpel"), "gerumpel" );
	deepEqual( Stem("gerümpel"), "gerumpel" );
	deepEqual( Stem("gerümpelfuhre"), "gerumpelfuhr" );
	deepEqual( Stem("gerüste"), "gerust" );
	deepEqual( Stem("gerüstet"), "gerustet" );
	deepEqual( Stem("gerüsteten"), "gerustet" );
	deepEqual( Stem("gerutscht"), "gerutscht" );
	deepEqual( Stem("gerüttelt"), "geruttelt" );
	deepEqual( Stem("gerütteltes"), "geruttelt" );
	deepEqual( Stem("gesäet"), "gesaet" );
	deepEqual( Stem("gesagt"), "gesagt" );
	deepEqual( Stem("gesagten"), "gesagt" );
	deepEqual( Stem("gesäht"), "gesaht" );
	deepEqual( Stem("gesalbt"), "gesalbt" );
	deepEqual( Stem("gesalbte"), "gesalbt" );
	deepEqual( Stem("gesalbten"), "gesalbt" );
	deepEqual( Stem("gesalzenem"), "gesalz" );
	deepEqual( Stem("gesammelt"), "gesammelt" );
	deepEqual( Stem("gesammelte"), "gesammelt" );
	deepEqual( Stem("gesammeltes"), "gesammelt" );
	deepEqual( Stem("gesamt"), "gesamt" );
	deepEqual( Stem("gesamtanschauung"), "gesamtanschau" );
	deepEqual( Stem("gesamte"), "gesamt" );
	deepEqual( Stem("gesamten"), "gesamt" );
	deepEqual( Stem("gesamtheit"), "gesamt" );
	deepEqual( Stem("gesamtlage"), "gesamtlag" );
	deepEqual( Stem("gesamtleistung"), "gesamtleist" );
	deepEqual( Stem("gesandt"), "gesandt" );
	deepEqual( Stem("gesandte"), "gesandt" );
	deepEqual( Stem("gesandten"), "gesandt" );
	deepEqual( Stem("gesandtschaft"), "gesandtschaft" );
	deepEqual( Stem("gesang"), "gesang" );
	deepEqual( Stem("gesänge"), "gesang" );
	deepEqual( Stem("gesängen"), "gesang" );
	deepEqual( Stem("gesanges"), "gesang" );
	deepEqual( Stem("gesangs"), "gesang" );
	deepEqual( Stem("gesangsstimmen"), "gesangsstimm" );
	deepEqual( Stem("gesät"), "gesat" );
	deepEqual( Stem("gesättigt"), "gesattigt" );
	deepEqual( Stem("gesäuberten"), "gesaubert" );
	deepEqual( Stem("gesäugt"), "gesaugt" );
	deepEqual( Stem("gesaust"), "gesaust" );
	deepEqual( Stem("geschadet"), "geschadet" );
	deepEqual( Stem("geschaffen"), "geschaff" );
	deepEqual( Stem("geschaffene"), "geschaff" );
	deepEqual( Stem("geschaffenen"), "geschaff" );
	deepEqual( Stem("geschaffenes"), "geschaff" );
	deepEqual( Stem("geschafft"), "geschafft" );
	deepEqual( Stem("geschäft"), "geschaft" );
	deepEqual( Stem("geschäfte"), "geschaft" );
	deepEqual( Stem("geschäften"), "geschaft" );
	deepEqual( Stem("geschäftes"), "geschaft" );
	deepEqual( Stem("geschäftig"), "geschaft" );
	deepEqual( Stem("geschäftige"), "geschaft" );
	deepEqual( Stem("geschäftigkeit"), "geschaft" );
	deepEqual( Stem("geschäftliche"), "geschaft" );
	deepEqual( Stem("geschäftlichen"), "geschaft" );
	deepEqual( Stem("geschäftsauslagen"), "geschaftsauslag" );
	deepEqual( Stem("geschäftsbuch"), "geschaftsbuch" );
	deepEqual( Stem("geschäftsfragen"), "geschaftsfrag" );
	deepEqual( Stem("geschäftsfreund"), "geschaftsfreund" );
	deepEqual( Stem("geschäftsführung"), "geschaftsfuhr" );
	deepEqual( Stem("geschäftsjahren"), "geschaftsjahr" );
	deepEqual( Stem("geschäftsleiter"), "geschaftsleit" );
	deepEqual( Stem("geschäftsleuten"), "geschaftsleut" );
	deepEqual( Stem("geschäftsmann"), "geschaftsmann" );
	deepEqual( Stem("geschäftsmänner"), "geschaftsmann" );
	deepEqual( Stem("geschäftsmännern"), "geschaftsmann" );
	deepEqual( Stem("geschäftsprüfungskommission"), "geschaftsprufungskommission" );
	deepEqual( Stem("geschäftsreise"), "geschaftsreis" );
	deepEqual( Stem("geschäftsschwankung"), "geschaftsschwank" );
	deepEqual( Stem("geschäftsstelle"), "geschaftsstell" );
	deepEqual( Stem("geschäftsweg"), "geschaftsweg" );
	deepEqual( Stem("geschah"), "geschah" );
	deepEqual( Stem("geschahen"), "geschah" );
	deepEqual( Stem("geschändete"), "geschandet" );
	deepEqual( Stem("geschärft"), "gescharft" );
	deepEqual( Stem("geschärftes"), "gescharft" );
	deepEqual( Stem("geschätzt"), "geschatzt" );
	deepEqual( Stem("geschätzten"), "geschatzt" );
	deepEqual( Stem("geschaut"), "geschaut" );
	deepEqual( Stem("geschehe"), "gescheh" );
	deepEqual( Stem("geschehen"), "gescheh" );
	deepEqual( Stem("geschehene"), "gescheh" );
	deepEqual( Stem("geschehenen"), "gescheh" );
	deepEqual( Stem("geschehnisse"), "geschehnis" );
	deepEqual( Stem("gescheit"), "gescheit" );
	deepEqual( Stem("gescheitert"), "gescheitert" );
	deepEqual( Stem("gescheites"), "gescheit" );
	deepEqual( Stem("gescheiteste"), "gescheit" );
	deepEqual( Stem("geschenk"), "geschenk" );
	deepEqual( Stem("geschenke"), "geschenk" );
	deepEqual( Stem("geschenken"), "geschenk" );
	deepEqual( Stem("geschenkt"), "geschenkt" );
	deepEqual( Stem("gescherzt"), "gescherzt" );
	deepEqual( Stem("gescheucht"), "gescheucht" );
	deepEqual( Stem("gescheuchten"), "gescheucht" );
	deepEqual( Stem("gescheuerte"), "gescheuert" );
	deepEqual( Stem("geschichtartig"), "geschichtart" );
	deepEqual( Stem("geschichtartigen"), "geschichtart" );
	deepEqual( Stem("geschichte"), "geschicht" );
	deepEqual( Stem("geschichten"), "geschicht" );
	deepEqual( Stem("geschichtliche"), "geschicht" );
	deepEqual( Stem("geschichtlichen"), "geschicht" );
	deepEqual( Stem("geschichtliches"), "geschicht" );
	deepEqual( Stem("geschichts"), "geschicht" );
	deepEqual( Stem("geschick"), "geschick" );
	deepEqual( Stem("geschicke"), "geschick" );
	deepEqual( Stem("geschickes"), "geschick" );
	deepEqual( Stem("geschicklichkeit"), "geschick" );
	deepEqual( Stem("geschickt"), "geschickt" );
	deepEqual( Stem("geschickte"), "geschickt" );
	deepEqual( Stem("geschickten"), "geschickt" );
	deepEqual( Stem("geschickter"), "geschickt" );
	deepEqual( Stem("geschieden"), "geschied" );
	deepEqual( Stem("geschiedenen"), "geschied" );
	deepEqual( Stem("geschiedener"), "geschied" );
	deepEqual( Stem("geschiedenes"), "geschied" );
	deepEqual( Stem("geschieht"), "geschieht" );
	deepEqual( Stem("geschielt"), "geschielt" );
	deepEqual( Stem("geschildert"), "geschildert" );
	deepEqual( Stem("geschirr"), "geschirr" );
	deepEqual( Stem("geschirre"), "geschirr" );
	deepEqual( Stem("geschirrkasten"), "geschirrkast" );
	deepEqual( Stem("geschlafen"), "geschlaf" );
	deepEqual( Stem("geschlagen"), "geschlag" );
	deepEqual( Stem("geschlagener"), "geschlag" );
	deepEqual( Stem("geschlagenes"), "geschlag" );
	deepEqual( Stem("geschlecht"), "geschlecht" );
	deepEqual( Stem("geschlechte"), "geschlecht" );
	deepEqual( Stem("geschlechter"), "geschlecht" );
	deepEqual( Stem("geschlechtern"), "geschlecht" );
	deepEqual( Stem("geschlechtes"), "geschlecht" );
	deepEqual( Stem("geschlechts"), "geschlecht" );
	deepEqual( Stem("geschlechtsverzeichnis"), "geschlechtsverzeichnis" );
	deepEqual( Stem("geschleift"), "geschleift" );
	deepEqual( Stem("geschleudert"), "geschleudert" );
	deepEqual( Stem("geschlossen"), "geschloss" );
	deepEqual( Stem("geschlossene"), "geschloss" );
	deepEqual( Stem("geschlossenen"), "geschloss" );
	deepEqual( Stem("geschlossener"), "geschloss" );
	deepEqual( Stem("geschlungen"), "geschlung" );
	deepEqual( Stem("geschmack"), "geschmack" );
	deepEqual( Stem("geschmacke"), "geschmack" );
	deepEqual( Stem("geschmacklos"), "geschmacklos" );
	deepEqual( Stem("geschmacks"), "geschmack" );
	deepEqual( Stem("geschmacksgründen"), "geschmacksgrund" );
	deepEqual( Stem("geschmackvolle"), "geschmackvoll" );
	deepEqual( Stem("geschmackvollen"), "geschmackvoll" );
	deepEqual( Stem("geschmälerten"), "geschmalert" );
	deepEqual( Stem("geschmeckt"), "geschmeckt" );
	deepEqual( Stem("geschmeichelt"), "geschmeichelt" );
	deepEqual( Stem("geschmeidigen"), "geschmeid" );
	deepEqual( Stem("geschmerzt"), "geschmerzt" );
	deepEqual( Stem("geschmiedetes"), "geschmiedet" );
	deepEqual( Stem("geschmiegt"), "geschmiegt" );
	deepEqual( Stem("geschmissen"), "geschmiss" );
	deepEqual( Stem("geschmolzenes"), "geschmolz" );
	deepEqual( Stem("geschmückt"), "geschmuckt" );
	deepEqual( Stem("geschmückten"), "geschmuckt" );
	deepEqual( Stem("geschmücktes"), "geschmuckt" );
	deepEqual( Stem("geschnappt"), "geschnappt" );
	deepEqual( Stem("geschnatterwesen"), "geschnatterwes" );
	deepEqual( Stem("geschnaubt"), "geschnaubt" );
	deepEqual( Stem("geschneit"), "geschneit" );
	deepEqual( Stem("geschniegelten"), "geschniegelt" );
	deepEqual( Stem("geschnitten"), "geschnitt" );
	deepEqual( Stem("geschnittenen"), "geschnitt" );
	deepEqual( Stem("geschnitzte"), "geschnitzt" );
	deepEqual( Stem("geschnitzten"), "geschnitzt" );
	deepEqual( Stem("geschnürt"), "geschnurt" );
	deepEqual( Stem("geschoben"), "geschob" );
	deepEqual( Stem("gescholten"), "gescholt" );
	deepEqual( Stem("geschöpf"), "geschopf" );
	deepEqual( Stem("geschöpfchen"), "geschopfch" );
	deepEqual( Stem("geschöpfe"), "geschopf" );
	deepEqual( Stem("geschöpfen"), "geschopf" );
	deepEqual( Stem("geschöpfes"), "geschopf" );
	deepEqual( Stem("geschöpfs"), "geschopf" );
	deepEqual( Stem("geschöpft"), "geschopft" );
	deepEqual( Stem("geschoren"), "geschor" );
	deepEqual( Stem("geschossen"), "geschoss" );
	deepEqual( Stem("geschrei"), "geschrei" );
	deepEqual( Stem("geschreis"), "geschreis" );
	deepEqual( Stem("geschrieben"), "geschrieb" );
	deepEqual( Stem("geschriebene"), "geschrieb" );
	deepEqual( Stem("geschriebenen"), "geschrieb" );
	deepEqual( Stem("geschriebenes"), "geschrieb" );
	deepEqual( Stem("geschrieen"), "geschrie" );
	deepEqual( Stem("geschrien"), "geschri" );
	deepEqual( Stem("geschrumpft"), "geschrumpft" );
	deepEqual( Stem("geschulten"), "geschult" );
	deepEqual( Stem("geschüttelt"), "geschuttelt" );
	deepEqual( Stem("geschüttet"), "geschuttet" );
	deepEqual( Stem("geschützt"), "geschutzt" );
	deepEqual( Stem("geschwächt"), "geschwacht" );
	deepEqual( Stem("geschwächten"), "geschwacht" );
	deepEqual( Stem("geschwader"), "geschwad" );
	deepEqual( Stem("geschwänzelt"), "geschwanzelt" );
	deepEqual( Stem("geschwärzt"), "geschwarzt" );
	deepEqual( Stem("geschwätz"), "geschwatz" );
	deepEqual( Stem("geschwätzig"), "geschwatz" );
	deepEqual( Stem("geschwätzigen"), "geschwatz" );
	deepEqual( Stem("geschwätzigkeit"), "geschwatz" );
	deepEqual( Stem("geschwatzt"), "geschwatzt" );
	deepEqual( Stem("geschwebt"), "geschwebt" );
	deepEqual( Stem("geschweifte"), "geschweift" );
	deepEqual( Stem("geschweige"), "geschweig" );
	deepEqual( Stem("geschwiegen"), "geschwieg" );
	deepEqual( Stem("geschwind"), "geschwind" );
	deepEqual( Stem("geschwindigkeit"), "geschwind" );
	deepEqual( Stem("geschwister"), "geschwist" );
	deepEqual( Stem("geschwistern"), "geschwist" );
	deepEqual( Stem("geschwollen"), "geschwoll" );
	deepEqual( Stem("geschwollnen"), "geschwolln" );
	deepEqual( Stem("geschworen"), "geschwor" );
	deepEqual( Stem("geschwulst"), "geschwul" );
	deepEqual( Stem("geschwunden"), "geschwund" );
	deepEqual( Stem("geschwungen"), "geschwung" );
	deepEqual( Stem("geschwungener"), "geschwung" );
	deepEqual( Stem("geschwür"), "geschwur" );
	deepEqual( Stem("geschwüre"), "geschwur" );
	deepEqual( Stem("geschwüren"), "geschwur" );
	deepEqual( Stem("geschwürs"), "geschwur" );
	deepEqual( Stem("gesegnen"), "gesegn" );
	deepEqual( Stem("gesegnet"), "gesegnet" );
	deepEqual( Stem("gesegneten"), "gesegnet" );
	deepEqual( Stem("gesegnetes"), "gesegnet" );
	deepEqual( Stem("gesehen"), "geseh" );
	deepEqual( Stem("gesehene"), "geseh" );
	deepEqual( Stem("gesehn"), "gesehn" );
	deepEqual( Stem("gesehnt"), "gesehnt" );
	deepEqual( Stem("gesell"), "gesell" );
	deepEqual( Stem("geselle"), "gesell" );
	deepEqual( Stem("gesellen"), "gesell" );
	deepEqual( Stem("gesellenschritt"), "gesellenschritt" );
	deepEqual( Stem("gesellschaft"), "gesellschaft" );
	deepEqual( Stem("gesellschaften"), "gesellschaft" );
	deepEqual( Stem("gesellschafter"), "gesellschaft" );
	deepEqual( Stem("gesellschaftliche"), "gesellschaft" );
	deepEqual( Stem("gesellschaftlichen"), "gesellschaft" );
	deepEqual( Stem("gesellschafts"), "gesellschaft" );
	deepEqual( Stem("gesellt"), "gesellt" );
	deepEqual( Stem("gesellte"), "gesellt" );
	deepEqual( Stem("gesellten"), "gesellt" );
	deepEqual( Stem("gesendet"), "gesendet" );
	deepEqual( Stem("gesenkt"), "gesenkt" );
	deepEqual( Stem("gesenktem"), "gesenkt" );
	deepEqual( Stem("gesenkten"), "gesenkt" );
	deepEqual( Stem("gesessen"), "gesess" );
	deepEqual( Stem("gesetz"), "gesetz" );
	deepEqual( Stem("gesetzbücher"), "gesetzbuch" );
	deepEqual( Stem("gesetze"), "gesetz" );
	deepEqual( Stem("gesetzen"), "gesetz" );
	deepEqual( Stem("gesetzes"), "gesetz" );
	deepEqual( Stem("gesetzesstelle"), "gesetzesstell" );
	deepEqual( Stem("gesetzestreue"), "gesetzestreu" );
	deepEqual( Stem("gesetzesübertretungen"), "gesetzesubertret" );
	deepEqual( Stem("gesetzgebend"), "gesetzgeb" );
	deepEqual( Stem("gesetzgebenden"), "gesetzgeb" );
	deepEqual( Stem("gesetzgeber"), "gesetzgeb" );
	deepEqual( Stem("gesetzgeberin"), "gesetzgeberin" );
	deepEqual( Stem("gesetzgebung"), "gesetzgeb" );
	deepEqual( Stem("gesetzlich"), "gesetz" );
	deepEqual( Stem("gesetzliche"), "gesetz" );
	deepEqual( Stem("gesetzlichen"), "gesetz" );
	deepEqual( Stem("gesetzmässig"), "gesetzmass" );
	deepEqual( Stem("gesetzmässige"), "gesetzmass" );
	deepEqual( Stem("gesetzmässigen"), "gesetzmass" );
	deepEqual( Stem("gesetzmässigkeit"), "gesetzmass" );
	deepEqual( Stem("gesetzsammlung"), "gesetzsamml" );
	deepEqual( Stem("gesetzt"), "gesetzt" );
	deepEqual( Stem("gesetzte"), "gesetzt" );
	deepEqual( Stem("gesetzwidrig"), "gesetzwidr" );
	deepEqual( Stem("gesichert"), "gesichert" );
	deepEqual( Stem("gesicherte"), "gesichert" );
	deepEqual( Stem("gesicht"), "gesicht" );
	deepEqual( Stem("gesichtchen"), "gesichtch" );
	deepEqual( Stem("gesichte"), "gesicht" );
	deepEqual( Stem("gesichter"), "gesicht" );
	deepEqual( Stem("gesichtern"), "gesicht" );
	deepEqual( Stem("gesichtes"), "gesicht" );
	deepEqual( Stem("gesichts"), "gesicht" );
	deepEqual( Stem("gesichtsart"), "gesichtsart" );
	deepEqual( Stem("gesichtsfarbe"), "gesichtsfarb" );
	deepEqual( Stem("gesichtskreis"), "gesichtskreis" );
	deepEqual( Stem("gesichtskreise"), "gesichtskreis" );
	deepEqual( Stem("gesichtspunkt"), "gesichtspunkt" );
	deepEqual( Stem("gesichtszüge"), "gesichtszug" );
	deepEqual( Stem("gesichtszügen"), "gesichtszug" );
	deepEqual( Stem("gesiegt"), "gesiegt" );
	deepEqual( Stem("gesimse"), "gesims" );
	deepEqual( Stem("gesimsen"), "gesims" );
	deepEqual( Stem("gesind"), "gesind" );
	deepEqual( Stem("gesinde"), "gesind" );
	deepEqual( Stem("gesindehaus"), "gesindehaus" );
	deepEqual( Stem("gesindel"), "gesindel" );
	deepEqual( Stem("gesindes"), "gesind" );
	deepEqual( Stem("gesinnt"), "gesinnt" );
	deepEqual( Stem("gesinnung"), "gesinn" );
	deepEqual( Stem("gesinnungen"), "gesinn" );
	deepEqual( Stem("gesinnungsart"), "gesinnungsart" );
	deepEqual( Stem("gesinnungslosigkeit"), "gesinnungslos" );
	deepEqual( Stem("gesoffen"), "gesoff" );
	deepEqual( Stem("gesonnen"), "gesonn" );
	deepEqual( Stem("gesorgt"), "gesorgt" );
	deepEqual( Stem("gespann"), "gespann" );
	deepEqual( Stem("gespannt"), "gespannt" );
	deepEqual( Stem("gespannte"), "gespannt" );
	deepEqual( Stem("gespannten"), "gespannt" );
	deepEqual( Stem("gespannter"), "gespannt" );
	deepEqual( Stem("gespart"), "gespart" );
	deepEqual( Stem("gespeistwerden"), "gespeistwerd" );
	deepEqual( Stem("gespenst"), "gespen" );
	deepEqual( Stem("gespenste"), "gespen" );
	deepEqual( Stem("gespensterbäume"), "gespensterbaum" );
	deepEqual( Stem("gespenstisch"), "gespenst" );
	deepEqual( Stem("gesperrt"), "gesperrt" );
	deepEqual( Stem("gespickt"), "gespickt" );
	deepEqual( Stem("gespickten"), "gespickt" );
	deepEqual( Stem("gespielt"), "gespielt" );
	deepEqual( Stem("gespiesen"), "gespies" );
	deepEqual( Stem("gespitzt"), "gespitzt" );
	deepEqual( Stem("gesplittertes"), "gesplittert" );
	deepEqual( Stem("gesponnen"), "gesponn" );
	deepEqual( Stem("gespornt"), "gespornt" );
	deepEqual( Stem("gespornten"), "gespornt" );
	deepEqual( Stem("gespött"), "gespott" );
	deepEqual( Stem("gespötte"), "gespott" );
	deepEqual( Stem("gespräch"), "gesprach" );
	deepEqual( Stem("gespräche"), "gesprach" );
	deepEqual( Stem("gesprächen"), "gesprach" );
	deepEqual( Stem("gesprächigkeit"), "gesprach" );
	deepEqual( Stem("gesprächs"), "gesprach" );
	deepEqual( Stem("gesprächskapitel"), "gesprachskapitel" );
	deepEqual( Stem("gesprächsthema"), "gesprachsthema" );
	deepEqual( Stem("gespreizt"), "gespreizt" );
	deepEqual( Stem("gespreizten"), "gespreizt" );
	deepEqual( Stem("gesprengt"), "gesprengt" );
	deepEqual( Stem("gesprenkelte"), "gesprenkelt" );
	deepEqual( Stem("gespritzt"), "gespritzt" );
	deepEqual( Stem("gesprochen"), "gesproch" );
	deepEqual( Stem("gesprochenen"), "gesproch" );
	deepEqual( Stem("gesprochenes"), "gesproch" );
	deepEqual( Stem("gesprosst"), "gesprosst" );
	deepEqual( Stem("gesproßt"), "gesprosst" );
	deepEqual( Stem("gesprungen"), "gesprung" );
	deepEqual( Stem("gessen"), "gess" );
	deepEqual( Stem("gestalt"), "gestalt" );
	deepEqual( Stem("gestalten"), "gestalt" );
	deepEqual( Stem("gestaltet"), "gestaltet" );
	deepEqual( Stem("gestaltete"), "gestaltet" );
	deepEqual( Stem("gestaltung"), "gestalt" );
	deepEqual( Stem("gestand"), "gestand" );
	deepEqual( Stem("gestanden"), "gestand" );
	deepEqual( Stem("geständnis"), "gestandnis" );
	deepEqual( Stem("geständnisse"), "gestandnis" );
	deepEqual( Stem("gestank"), "gestank" );
	deepEqual( Stem("gestärkt"), "gestarkt" );
	deepEqual( Stem("gestatten"), "gestatt" );
	deepEqual( Stem("gestattet"), "gestattet" );
	deepEqual( Stem("gestattete"), "gestattet" );
	deepEqual( Stem("geste"), "gest" );
	deepEqual( Stem("gesteckt"), "gesteckt" );
	deepEqual( Stem("gesteckten"), "gesteckt" );
	deepEqual( Stem("gestehen"), "gesteh" );
	deepEqual( Stem("gestehn"), "gestehn" );
	deepEqual( Stem("gesteigert"), "gesteigert" );
	deepEqual( Stem("gesteigertem"), "gesteigert" );
	deepEqual( Stem("gestein"), "gestein" );
	deepEqual( Stem("gesteinigt"), "gesteinigt" );
	deepEqual( Stem("gestellt"), "gestellt" );
	deepEqual( Stem("gestellter"), "gestellt" );
	deepEqual( Stem("gestemmt"), "gestemmt" );
	deepEqual( Stem("gestern"), "gest" );
	deepEqual( Stem("gestiefelt"), "gestiefelt" );
	deepEqual( Stem("gestiefelten"), "gestiefelt" );
	deepEqual( Stem("gestiegen"), "gestieg" );
	deepEqual( Stem("gestiftet"), "gestiftet" );
	deepEqual( Stem("gestikulieren"), "gestikuli" );
	deepEqual( Stem("gestimmt"), "gestimmt" );
	deepEqual( Stem("gestirn"), "gestirn" );
	deepEqual( Stem("gestirne"), "gestirn" );
	deepEqual( Stem("gestirnes"), "gestirn" );
	deepEqual( Stem("gestochen"), "gestoch" );
	deepEqual( Stem("gestohlen"), "gestohl" );
	deepEqual( Stem("gestohlenen"), "gestohl" );
	deepEqual( Stem("gestopft"), "gestopft" );
	deepEqual( Stem("gestorben"), "gestorb" );
	deepEqual( Stem("gestört"), "gestort" );
	deepEqual( Stem("gestossen"), "gestoss" );
	deepEqual( Stem("gestoßen"), "gestoss" );
	deepEqual( Stem("gestraft"), "gestraft" );
	deepEqual( Stem("gestrahlt"), "gestrahlt" );
	deepEqual( Stem("gesträuch"), "gestrauch" );
	deepEqual( Stem("gesträuche"), "gestrauch" );
	deepEqual( Stem("gestrebt"), "gestrebt" );
	deepEqual( Stem("gestreckt"), "gestreckt" );
	deepEqual( Stem("gestreckten"), "gestreckt" );
	deepEqual( Stem("gestreift"), "gestreift" );
	deepEqual( Stem("gestreifte"), "gestreift" );
	deepEqual( Stem("gestreiften"), "gestreift" );
	deepEqual( Stem("gestrenge"), "gestreng" );
	deepEqual( Stem("gestrengen"), "gestreng" );
	deepEqual( Stem("gestressten"), "gestresst" );
	deepEqual( Stem("gestreut"), "gestreut" );
	deepEqual( Stem("gestrichen"), "gestrich" );
	deepEqual( Stem("gestrichenen"), "gestrich" );
	deepEqual( Stem("gestrickte"), "gestrickt" );
	deepEqual( Stem("gestrige"), "gestrig" );
	deepEqual( Stem("gestrigen"), "gestrig" );
	deepEqual( Stem("gestritten"), "gestritt" );
	deepEqual( Stem("gestrüpp"), "gestrupp" );
	deepEqual( Stem("gesturm"), "gesturm" );
	deepEqual( Stem("gestürzt"), "gesturzt" );
	deepEqual( Stem("gestützt"), "gestutzt" );
	deepEqual( Stem("gesuch"), "gesuch" );
	deepEqual( Stem("gesucht"), "gesucht" );
	deepEqual( Stem("gesuchten"), "gesucht" );
	deepEqual( Stem("gesuchter"), "gesucht" );
	deepEqual( Stem("gesumm"), "gesumm" );
	deepEqual( Stem("gesund"), "gesund" );
	deepEqual( Stem("gesunde"), "gesund" );
	deepEqual( Stem("gesunden"), "gesund" );
	deepEqual( Stem("gesunder"), "gesund" );
	deepEqual( Stem("gesünderen"), "gesund" );
	deepEqual( Stem("gesünderer"), "gesund" );
	deepEqual( Stem("gesundes"), "gesund" );
	deepEqual( Stem("gesundheit"), "gesund" );
	deepEqual( Stem("gesundheitsamt"), "gesundheitsamt" );
	deepEqual( Stem("gesündigt"), "gesundigt" );
	deepEqual( Stem("gesungen"), "gesung" );
	deepEqual( Stem("gesungenen"), "gesung" );
	deepEqual( Stem("gesunken"), "gesunk" );
	deepEqual( Stem("getäfelten"), "getafelt" );
	deepEqual( Stem("getan"), "getan" );
	deepEqual( Stem("getändelt"), "getandelt" );
	deepEqual( Stem("getanzt"), "getanzt" );
	deepEqual( Stem("getauchte"), "getaucht" );
	deepEqual( Stem("getauchten"), "getaucht" );
	deepEqual( Stem("getauft"), "getauft" );
	deepEqual( Stem("getauften"), "getauft" );
	deepEqual( Stem("getaumelt"), "getaumelt" );
	deepEqual( Stem("getauscht"), "getauscht" );
	deepEqual( Stem("getäuscht"), "getauscht" );
	deepEqual( Stem("geteilt"), "geteilt" );
	deepEqual( Stem("gethsemane"), "gethseman" );
	deepEqual( Stem("getier"), "geti" );
	deepEqual( Stem("getilgt"), "getilgt" );
	deepEqual( Stem("getöne"), "geton" );
	deepEqual( Stem("getönt"), "getont" );
	deepEqual( Stem("getöse"), "getos" );
	deepEqual( Stem("getötet"), "getotet" );
	deepEqual( Stem("getöteten"), "getotet" );
	deepEqual( Stem("getöteter"), "getotet" );
	deepEqual( Stem("getragen"), "getrag" );
	deepEqual( Stem("getragene"), "getrag" );
	deepEqual( Stem("getragenen"), "getrag" );
	deepEqual( Stem("geträllert"), "getrallert" );
	deepEqual( Stem("getränk"), "getrank" );
	deepEqual( Stem("getränke"), "getrank" );
	deepEqual( Stem("getränkemischungen"), "getrankemisch" );
	deepEqual( Stem("getränken"), "getrank" );
	deepEqual( Stem("getränkes"), "getrank" );
	deepEqual( Stem("getränkt"), "getrankt" );
	deepEqual( Stem("getränkter"), "getrankt" );
	deepEqual( Stem("getrauert"), "getrauert" );
	deepEqual( Stem("geträumt"), "getraumt" );
	deepEqual( Stem("geträumte"), "getraumt" );
	deepEqual( Stem("getraut"), "getraut" );
	deepEqual( Stem("getraute"), "getraut" );
	deepEqual( Stem("getreide"), "getreid" );
	deepEqual( Stem("getrennt"), "getrennt" );
	deepEqual( Stem("getrennte"), "getrennt" );
	deepEqual( Stem("getrennten"), "getrennt" );
	deepEqual( Stem("getrennter"), "getrennt" );
	deepEqual( Stem("getreten"), "getret" );
	deepEqual( Stem("getreu"), "getreu" );
	deepEqual( Stem("getreue"), "getreu" );
	deepEqual( Stem("getreuen"), "getreu" );
	deepEqual( Stem("getreulich"), "getreulich" );
	deepEqual( Stem("getriebe"), "getrieb" );
	deepEqual( Stem("getrieben"), "getrieb" );
	deepEqual( Stem("getriebene"), "getrieb" );
	deepEqual( Stem("getriebenes"), "getrieb" );
	deepEqual( Stem("getroffen"), "getroff" );
	deepEqual( Stem("getroffenen"), "getroff" );
	deepEqual( Stem("getrost"), "getrost" );
	deepEqual( Stem("getröstet"), "getrostet" );
	deepEqual( Stem("getrübt"), "getrubt" );
	deepEqual( Stem("getrunken"), "getrunk" );
	deepEqual( Stem("gets"), "get" );
	deepEqual( Stem("getupf"), "getupf" );
	deepEqual( Stem("geübt"), "geubt" );
	deepEqual( Stem("geübter"), "geubt" );
	deepEqual( Stem("geurteilt"), "geurteilt" );
	deepEqual( Stem("gevatter"), "gevatt" );
	deepEqual( Stem("gevatterschaften"), "gevatterschaft" );
	deepEqual( Stem("gevattersfrau"), "gevattersfrau" );
	deepEqual( Stem("gewächs"), "gewach" );
	deepEqual( Stem("gewächse"), "gewachs" );
	deepEqual( Stem("gewachsen"), "gewachs" );
	deepEqual( Stem("gewachsenes"), "gewachs" );
	deepEqual( Stem("gewacht"), "gewacht" );
	deepEqual( Stem("gewagt"), "gewagt" );
	deepEqual( Stem("gewählt"), "gewahlt" );
	deepEqual( Stem("gewählte"), "gewahlt" );
	deepEqual( Stem("gewählten"), "gewahlt" );
	deepEqual( Stem("gewähltfranks"), "gewahltfrank" );
	deepEqual( Stem("gewähnt"), "gewahnt" );
	deepEqual( Stem("gewahren"), "gewahr" );
	deepEqual( Stem("gewähren"), "gewahr" );
	deepEqual( Stem("gewahrend"), "gewahr" );
	deepEqual( Stem("gewahrsam"), "gewahrsam" );
	deepEqual( Stem("gewahrt"), "gewahrt" );
	deepEqual( Stem("gewährt"), "gewahrt" );
	deepEqual( Stem("gewahrte"), "gewahrt" );
	deepEqual( Stem("gewährte"), "gewahrt" );
	deepEqual( Stem("gewahrten"), "gewahrt" );
	deepEqual( Stem("gewährten"), "gewahrt" );
	deepEqual( Stem("gewalt"), "gewalt" );
	deepEqual( Stem("gewaltder"), "gewaltd" );
	deepEqual( Stem("gewalthabende"), "gewalthab" );
	deepEqual( Stem("gewaltig"), "gewalt" );
	deepEqual( Stem("gewaltige"), "gewalt" );
	deepEqual( Stem("gewaltigem"), "gewalt" );
	deepEqual( Stem("gewaltigen"), "gewalt" );
	deepEqual( Stem("gewaltiger"), "gewalt" );
	deepEqual( Stem("gewaltiges"), "gewalt" );
	deepEqual( Stem("gewaltigsten"), "gewalt" );
	deepEqual( Stem("gewaltlos"), "gewaltlos" );
	deepEqual( Stem("gewaltlosen"), "gewaltlos" );
	deepEqual( Stem("gewaltsam"), "gewaltsam" );
	deepEqual( Stem("gewaltsamer"), "gewaltsam" );
	deepEqual( Stem("gewalttat"), "gewalttat" );
	deepEqual( Stem("gewalttätigen"), "gewalttat" );
	deepEqual( Stem("gewalttätiger"), "gewalttat" );
	deepEqual( Stem("gewalttätigkeit"), "gewalttat" );
	deepEqual( Stem("gewand"), "gewand" );
	deepEqual( Stem("gewande"), "gewand" );
	deepEqual( Stem("gewandelt"), "gewandelt" );
	deepEqual( Stem("gewänder"), "gewand" );
	deepEqual( Stem("gewandert"), "gewandert" );
	deepEqual( Stem("gewandes"), "gewand" );
	deepEqual( Stem("gewandt"), "gewandt" );
	deepEqual( Stem("gewandte"), "gewandt" );
	deepEqual( Stem("gewandten"), "gewandt" );
	deepEqual( Stem("gewandtheit"), "gewandt" );
	deepEqual( Stem("gewann"), "gewann" );
	deepEqual( Stem("gewannen"), "gewann" );
	deepEqual( Stem("gewarnt"), "gewarnt" );
	deepEqual( Stem("gewartet"), "gewartet" );
	deepEqual( Stem("gewärtig"), "gewart" );
	deepEqual( Stem("gewärtigen"), "gewart" );
	deepEqual( Stem("gewaschen"), "gewasch" );
	deepEqual( Stem("gewaschene"), "gewasch" );
	deepEqual( Stem("gewässer"), "gewass" );
	deepEqual( Stem("gewässerter"), "gewassert" );
	deepEqual( Stem("gewebe"), "geweb" );
	deepEqual( Stem("gewebeproben"), "gewebeprob" );
	deepEqual( Stem("gewechselt"), "gewechselt" );
	deepEqual( Stem("geweckt"), "geweckt" );
	deepEqual( Stem("gewehlbe"), "gewehlb" );
	deepEqual( Stem("gewehr"), "gewehr" );
	deepEqual( Stem("gewehre"), "gewehr" );
	deepEqual( Stem("gewehren"), "gewehr" );
	deepEqual( Stem("gewehrlauf"), "gewehrlauf" );
	deepEqual( Stem("geweigert"), "geweigert" );
	deepEqual( Stem("geweih"), "geweih" );
	deepEqual( Stem("geweihbildung"), "geweihbild" );
	deepEqual( Stem("geweihes"), "geweih" );
	deepEqual( Stem("geweihete"), "geweihet" );
	deepEqual( Stem("geweissagt"), "geweissagt" );
	deepEqual( Stem("geweisst"), "geweisst" );
	deepEqual( Stem("geweisstes"), "geweisst" );
	deepEqual( Stem("gewendet"), "gewendet" );
	deepEqual( Stem("gewendeter"), "gewendet" );
	deepEqual( Stem("gewerbe"), "gewerb" );
	deepEqual( Stem("gewerkschaft"), "gewerkschaft" );
	deepEqual( Stem("gewerkschaftsdemonstration"), "gewerkschaftsdemonstration" );
	deepEqual( Stem("gewesen"), "gewes" );
	deepEqual( Stem("gewesenen"), "gewes" );
	deepEqual( Stem("gewichen"), "gewich" );
	deepEqual( Stem("gewicht"), "gewicht" );
	deepEqual( Stem("gewichtigen"), "gewicht" );
	deepEqual( Stem("gewickelt"), "gewickelt" );
	deepEqual( Stem("gewiegter"), "gewiegt" );
	deepEqual( Stem("gewiesen"), "gewies" );
	deepEqual( Stem("gewildes"), "gewild" );
	deepEqual( Stem("gewillt"), "gewillt" );
	deepEqual( Stem("gewinn"), "gewinn" );
	deepEqual( Stem("gewinne"), "gewinn" );
	deepEqual( Stem("gewinnen"), "gewinn" );
	deepEqual( Stem("gewinnende"), "gewinn" );
	deepEqual( Stem("gewinnes"), "gewinn" );
	deepEqual( Stem("gewinnt"), "gewinnt" );
	deepEqual( Stem("gewirkt"), "gewirkt" );
	deepEqual( Stem("gewiss"), "gewiss" );
	deepEqual( Stem("gewiß"), "gewiss" );
	deepEqual( Stem("gewisse"), "gewiss" );
	deepEqual( Stem("gewissem"), "gewiss" );
	deepEqual( Stem("gewissen"), "gewiss" );
	deepEqual( Stem("gewissenhaft"), "gewissenhaft" );
	deepEqual( Stem("gewissenhafter"), "gewissenhaft" );
	deepEqual( Stem("gewissenlos"), "gewissenlos" );
	deepEqual( Stem("gewissenloser"), "gewissenlos" );
	deepEqual( Stem("gewissenlosigkeit"), "gewissenlos" );
	deepEqual( Stem("gewissenlosigkeiten"), "gewissenlos" );
	deepEqual( Stem("gewissens"), "gewiss" );
	deepEqual( Stem("gewissensangst"), "gewissensang" );
	deepEqual( Stem("gewissensbedenken"), "gewissensbedenk" );
	deepEqual( Stem("gewissensbisse"), "gewissensbiss" );
	deepEqual( Stem("gewissensbürde"), "gewissensburd" );
	deepEqual( Stem("gewissensfreien"), "gewissensfrei" );
	deepEqual( Stem("gewissensgründen"), "gewissensgrund" );
	deepEqual( Stem("gewissenskonflikt"), "gewissenskonflikt" );
	deepEqual( Stem("gewissenskonfliktes"), "gewissenskonflikt" );
	deepEqual( Stem("gewissenspein"), "gewissenspein" );
	deepEqual( Stem("gewissensqualen"), "gewissensqual" );
	deepEqual( Stem("gewisser"), "gewiss" );
	deepEqual( Stem("gewissermassen"), "gewissermass" );
	deepEqual( Stem("gewissermaßen"), "gewissermass" );
	deepEqual( Stem("gewisses"), "gewiss" );
	deepEqual( Stem("gewisseste"), "gewiss" );
	deepEqual( Stem("gewissesten"), "gewiss" );
	deepEqual( Stem("gewissheit"), "gewiss" );
	deepEqual( Stem("gewißheit"), "gewiss" );
	deepEqual( Stem("gewisslich"), "gewiss" );
	deepEqual( Stem("gewißlich"), "gewiss" );
	deepEqual( Stem("gewitter"), "gewitt" );
	deepEqual( Stem("gewitterregen"), "gewitterreg" );
	deepEqual( Stem("gewitterstürme"), "gewittersturm" );
	deepEqual( Stem("gewitterwolken"), "gewitterwolk" );
	deepEqual( Stem("gewitzter"), "gewitzt" );
	deepEqual( Stem("gewogen"), "gewog" );
	deepEqual( Stem("gewogt"), "gewogt" );
	deepEqual( Stem("gewöhnen"), "gewohn" );
	deepEqual( Stem("gewohnheit"), "gewohn" );
	deepEqual( Stem("gewohnheiten"), "gewohn" );
	deepEqual( Stem("gewöhnlich"), "gewohn" );
	deepEqual( Stem("gewöhnliche"), "gewohn" );
	deepEqual( Stem("gewöhnlichen"), "gewohn" );
	deepEqual( Stem("gewöhnlicher"), "gewohn" );
	deepEqual( Stem("gewöhnlichste"), "gewohn" );
	deepEqual( Stem("gewöhnlichsten"), "gewohn" );
	deepEqual( Stem("gewohnt"), "gewohnt" );
	deepEqual( Stem("gewöhnt"), "gewohnt" );
	deepEqual( Stem("gewöhnte"), "gewohnt" );
	deepEqual( Stem("gewohnten"), "gewohnt" );
	deepEqual( Stem("gewohnterweise"), "gewohnterweis" );
	deepEqual( Stem("gewöhnung"), "gewohn" );
	deepEqual( Stem("gewölk"), "gewolk" );
	deepEqual( Stem("gewollt"), "gewollt" );
	deepEqual( Stem("gewönne"), "gewonn" );
	deepEqual( Stem("gewonnen"), "gewonn" );
	deepEqual( Stem("gewonnenen"), "gewonn" );
	deepEqual( Stem("geworben"), "geworb" );
	deepEqual( Stem("geworden"), "geword" );
	deepEqual( Stem("gewordene"), "geword" );
	deepEqual( Stem("gewordenen"), "geword" );
	deepEqual( Stem("gewordener"), "geword" );
	deepEqual( Stem("geworfen"), "geworf" );
	deepEqual( Stem("geworfene"), "geworf" );
	deepEqual( Stem("geworfenen"), "geworf" );
	deepEqual( Stem("gewühl"), "gewuhl" );
	deepEqual( Stem("gewunden"), "gewund" );
	deepEqual( Stem("gewundene"), "gewund" );
	deepEqual( Stem("gewünschtdie"), "gewunschtdi" );
	deepEqual( Stem("gewünschten"), "gewunscht" );
	deepEqual( Stem("gewünschtes"), "gewunscht" );
	deepEqual( Stem("gewürdigt"), "gewurdigt" );
	deepEqual( Stem("gewürfelte"), "gewurfelt" );
	deepEqual( Stem("gewürm"), "gewurm" );
	deepEqual( Stem("gewürme"), "gewurm" );
	deepEqual( Stem("gewürms"), "gewurm" );
	deepEqual( Stem("gewurzelt"), "gewurzelt" );
	deepEqual( Stem("gewürzen"), "gewurz" );
	deepEqual( Stem("gewürzes"), "gewurz" );
	deepEqual( Stem("gewürzmörser"), "gewurzmors" );
	deepEqual( Stem("gewürznägelein"), "gewurznagelein" );
	deepEqual( Stem("gewürzt"), "gewurzt" );
	deepEqual( Stem("gewusst"), "gewusst" );
	deepEqual( Stem("gewußt"), "gewusst" );
	deepEqual( Stem("gezählt"), "gezahlt" );
	deepEqual( Stem("gezahnten"), "gezahnt" );
	deepEqual( Stem("gezaubert"), "gezaubert" );
	deepEqual( Stem("gezecht"), "gezecht" );
	deepEqual( Stem("gezeichnet"), "gezeichnet" );
	deepEqual( Stem("gezeigt"), "gezeigt" );
	deepEqual( Stem("gezeigten"), "gezeigt" );
	deepEqual( Stem("gezerrt"), "gezerrt" );
	deepEqual( Stem("gezeugt"), "gezeugt" );
	deepEqual( Stem("gezielt"), "gezielt" );
	deepEqual( Stem("geziemenden"), "geziem" );
	deepEqual( Stem("geziemender"), "geziem" );
	deepEqual( Stem("geziemt"), "geziemt" );
	deepEqual( Stem("geziere"), "gezi" );
	deepEqual( Stem("geziert"), "geziert" );
	deepEqual( Stem("gezierten"), "geziert" );
	deepEqual( Stem("gezimmerte"), "gezimmert" );
	deepEqual( Stem("gezittert"), "gezittert" );
	deepEqual( Stem("gezogen"), "gezog" );
	deepEqual( Stem("gezogene"), "gezog" );
	deepEqual( Stem("gezogenen"), "gezog" );
	deepEqual( Stem("gezücht"), "gezucht" );
	deepEqual( Stem("gezüchtet"), "gezuchtet" );
	deepEqual( Stem("gezüchtigt"), "gezuchtigt" );
	deepEqual( Stem("gezweig"), "gezweig" );
	deepEqual( Stem("gezwitscher"), "gezwitsch" );
	deepEqual( Stem("gezwungen"), "gezwung" );
	deepEqual( Stem("gezwungene"), "gezwung" );
	deepEqual( Stem("gfahln"), "gfahln" );
	deepEqual( Stem("gfallen"), "gfall" );
	deepEqual( Stem("gfallt"), "gfallt" );
	deepEqual( Stem("gflickt"), "gflickt" );
	deepEqual( Stem("gfressen"), "gfress" );
	deepEqual( Stem("gfunden"), "gfund" );
	deepEqual( Stem("ghabt"), "ghabt" );
	deepEqual( Stem("ghear"), "ghear" );
	deepEqual( Stem("gheart"), "gheart" );
	deepEqual( Stem("ghört"), "ghort" );
	deepEqual( Stem("gian"), "gian" );
	deepEqual( Stem("gib"), "gib" );
	deepEqual( Stem("gibeon"), "gibeon" );
	deepEqual( Stem("gibeoniten"), "gibeonit" );
	deepEqual( Stem("gibeoniter"), "gibeonit" );
	deepEqual( Stem("gibst"), "gibst" );
	deepEqual( Stem("gibt"), "gibt" );
	deepEqual( Stem("gibts"), "gibt" );
	deepEqual( Stem("gichon"), "gichon" );
	deepEqual( Stem("gichtschmerzen"), "gichtschmerz" );
	deepEqual( Stem("gideon"), "gideon" );
	deepEqual( Stem("gier"), "gier" );
	deepEqual( Stem("gierig"), "gierig" );
	deepEqual( Stem("gierigkeit"), "gierig" );
	deepEqual( Stem("gierten"), "giert" );
	deepEqual( Stem("giessbach"), "giessbach" );
	deepEqual( Stem("gießbach"), "giessbach" );
	deepEqual( Stem("giessbäche"), "giessbach" );
	deepEqual( Stem("gießbäche"), "giessbach" );
	deepEqual( Stem("giesse"), "giess" );
	deepEqual( Stem("gieße"), "giess" );
	deepEqual( Stem("giessen"), "giess" );
	deepEqual( Stem("giesskanne"), "giesskann" );
	deepEqual( Stem("giesst"), "giesst" );
	deepEqual( Stem("gießt"), "giesst" );
	deepEqual( Stem("gift"), "gift" );
	deepEqual( Stem("gifte"), "gift" );
	deepEqual( Stem("giftes"), "gift" );
	deepEqual( Stem("giftig"), "giftig" );
	deepEqual( Stem("giftige"), "giftig" );
	deepEqual( Stem("giftigen"), "giftig" );
	deepEqual( Stem("giftmischerinnen"), "giftmischerinn" );
	deepEqual( Stem("giftpilzen"), "giftpilz" );
	deepEqual( Stem("gilead"), "gilead" );
	deepEqual( Stem("gilt"), "gilt" );
	deepEqual( Stem("ging"), "ging" );
	deepEqual( Stem("ginge"), "ging" );
	deepEqual( Stem("gingen"), "ging" );
	deepEqual( Stem("gipfel"), "gipfel" );
	deepEqual( Stem("gipfeln"), "gipfeln" );
	deepEqual( Stem("gipfelpunkt"), "gipfelpunkt" );
	deepEqual( Stem("gipsarbeiter"), "gipsarbeit" );
	deepEqual( Stem("gissgen"), "gissg" );
	deepEqual( Stem("gitarre"), "gitarr" );
	deepEqual( Stem("gitarrebegleiten"), "gitarrebegleit" );
	deepEqual( Stem("gitter"), "gitt" );
	deepEqual( Stem("gitterchen"), "gitterch" );
	deepEqual( Stem("glacht"), "glacht" );
	deepEqual( Stem("gladiolos"), "gladiolos" );
	deepEqual( Stem("glanz"), "glanz" );
	deepEqual( Stem("glanzalter"), "glanzalt" );
	deepEqual( Stem("glanze"), "glanz" );
	deepEqual( Stem("glänzen"), "glanz" );
	deepEqual( Stem("glänzend"), "glanzend" );
	deepEqual( Stem("glänzende"), "glanzend" );
	deepEqual( Stem("glänzendem"), "glanzend" );
	deepEqual( Stem("glänzenden"), "glanzend" );
	deepEqual( Stem("glänzender"), "glanzend" );
	deepEqual( Stem("glänzendes"), "glanzend" );
	deepEqual( Stem("glänzendsten"), "glanzend" );
	deepEqual( Stem("glanzlosen"), "glanzlos" );
	deepEqual( Stem("glänzt"), "glanzt" );
	deepEqual( Stem("glänzte"), "glanzt" );
	deepEqual( Stem("glänzten"), "glanzt" );
	deepEqual( Stem("glanzzeit"), "glanzzeit" );
	deepEqual( Stem("glas"), "glas" );
	deepEqual( Stem("gläschen"), "glasch" );
	deepEqual( Stem("glase"), "glas" );
	deepEqual( Stem("glaser"), "glas" );
	deepEqual( Stem("gläser"), "glas" );
	deepEqual( Stem("gläsern"), "glas" );
	deepEqual( Stem("gläserne"), "glasern" );
	deepEqual( Stem("gläsernen"), "glasern" );
	deepEqual( Stem("glasglöckchen"), "glasglockch" );
	deepEqual( Stem("glashelle"), "glashell" );
	deepEqual( Stem("glaskanzel"), "glaskanzel" );
	deepEqual( Stem("glaskästchen"), "glaskastch" );
	deepEqual( Stem("glaskeulen"), "glaskeul" );
	deepEqual( Stem("glaskutsche"), "glaskutsch" );
	deepEqual( Stem("glasperlen"), "glasperl" );
	deepEqual( Stem("glasschneiden"), "glasschneid" );
	deepEqual( Stem("glassteinchen"), "glassteinch" );
	deepEqual( Stem("glasstoff"), "glasstoff" );
	deepEqual( Stem("glaswand"), "glaswand" );
	deepEqual( Stem("glasziegeln"), "glasziegeln" );
	deepEqual( Stem("glatt"), "glatt" );
	deepEqual( Stem("glätte"), "glatt" );
	deepEqual( Stem("glatten"), "glatt" );
	deepEqual( Stem("glätten"), "glatt" );
	deepEqual( Stem("glättete"), "glattet" );
	deepEqual( Stem("glaub"), "glaub" );
	deepEqual( Stem("glaube"), "glaub" );
	deepEqual( Stem("glauben"), "glaub" );
	deepEqual( Stem("glaubenden"), "glaubend" );
	deepEqual( Stem("glaubens"), "glaub" );
	deepEqual( Stem("glaubensartikel"), "glaubensartikel" );
	deepEqual( Stem("glaubensbekenntnis"), "glaubensbekenntnis" );
	deepEqual( Stem("glaubenserkenntnisse"), "glaubenserkenntnis" );
	deepEqual( Stem("glaubenserkenntnissen"), "glaubenserkenntnis" );
	deepEqual( Stem("glaubensfragen"), "glaubensfrag" );
	deepEqual( Stem("glaubensgeheimnis"), "glaubensgeheimnis" );
	deepEqual( Stem("glaubensgeheimnisse"), "glaubensgeheimnis" );
	deepEqual( Stem("glaubensguten"), "glaubensgut" );
	deepEqual( Stem("glaubensleben"), "glaubensleb" );
	deepEqual( Stem("glaubenslebens"), "glaubensleb" );
	deepEqual( Stem("glaubenslehre"), "glaubenslehr" );
	deepEqual( Stem("glaubenslehren"), "glaubenslehr" );
	deepEqual( Stem("glaubenssache"), "glaubenssach" );
	deepEqual( Stem("glaubenssachen"), "glaubenssach" );
	deepEqual( Stem("glaubensüberreste"), "glaubensuberr" );
	deepEqual( Stem("glaubensvorschriften"), "glaubensvorschrift" );
	deepEqual( Stem("glaubenswahre"), "glaubenswahr" );
	deepEqual( Stem("glaubenswahren"), "glaubenswahr" );
	deepEqual( Stem("glaubenswahres"), "glaubenswahr" );
	deepEqual( Stem("glaubenswahrheit"), "glaubenswahr" );
	deepEqual( Stem("glaubenswahrheiten"), "glaubenswahr" );
	deepEqual( Stem("glaubenswissenschaft"), "glaubenswissenschaft" );
	deepEqual( Stem("glaubest"), "glaub" );
	deepEqual( Stem("glaubet"), "glaubet" );
	deepEqual( Stem("gläubige"), "glaubig" );
	deepEqual( Stem("gläubigen"), "glaubig" );
	deepEqual( Stem("gläubiger"), "glaubig" );
	deepEqual( Stem("gläubigern"), "glaubig" );
	deepEqual( Stem("glaubst"), "glaub" );
	deepEqual( Stem("glaubt"), "glaubt" );
	deepEqual( Stem("glaubte"), "glaubt" );
	deepEqual( Stem("glaubten"), "glaubt" );
	deepEqual( Stem("glaubtet"), "glaubtet" );
	deepEqual( Stem("glaubwürdig"), "glaubwurd" );
	deepEqual( Stem("glaubwürdige"), "glaubwurd" );
	deepEqual( Stem("glaubwürdigkeit"), "glaubwurd" );
	deepEqual( Stem("glegen"), "gleg" );
	deepEqual( Stem("glegenheit"), "gleg" );
	deepEqual( Stem("gleich"), "gleich" );
	deepEqual( Stem("gleichartig"), "gleichart" );
	deepEqual( Stem("gleichartiges"), "gleichart" );
	deepEqual( Stem("gleichbedeutend"), "gleichbedeut" );
	deepEqual( Stem("gleiche"), "gleich" );
	deepEqual( Stem("gleichem"), "gleich" );
	deepEqual( Stem("gleichen"), "gleich" );
	deepEqual( Stem("gleichentags"), "gleichentag" );
	deepEqual( Stem("gleicher"), "gleich" );
	deepEqual( Stem("gleichermassen"), "gleichermass" );
	deepEqual( Stem("gleicherzeit"), "gleicherzeit" );
	deepEqual( Stem("gleiches"), "gleich" );
	deepEqual( Stem("gleichfalls"), "gleichfall" );
	deepEqual( Stem("gleichförmig"), "gleichform" );
	deepEqual( Stem("gleichgeschätzt"), "gleichgeschatzt" );
	deepEqual( Stem("gleichgesetzt"), "gleichgesetzt" );
	deepEqual( Stem("gleichgewicht"), "gleichgewicht" );
	deepEqual( Stem("gleichgültig"), "gleichgult" );
	deepEqual( Stem("gleichgültigkeit"), "gleichgult" );
	deepEqual( Stem("gleichgültigste"), "gleichgult" );
	deepEqual( Stem("gleichheit"), "gleichheit" );
	deepEqual( Stem("gleichmass"), "gleichmass" );
	deepEqual( Stem("gleichmaß"), "gleichmass" );
	deepEqual( Stem("gleichmässig"), "gleichmass" );
	deepEqual( Stem("gleichmässige"), "gleichmass" );
	deepEqual( Stem("gleichmässigen"), "gleichmass" );
	deepEqual( Stem("gleichmut"), "gleichmut" );
	deepEqual( Stem("gleichmütig"), "gleichmut" );
	deepEqual( Stem("gleichnis"), "gleichnis" );
	deepEqual( Stem("gleichnissen"), "gleichnis" );
	deepEqual( Stem("gleichsah"), "gleichsah" );
	deepEqual( Stem("gleichsam"), "gleichsam" );
	deepEqual( Stem("gleichsehend"), "gleichseh" );
	deepEqual( Stem("gleichstellte"), "gleichstellt" );
	deepEqual( Stem("gleicht"), "gleicht" );
	deepEqual( Stem("gleichung"), "gleichung" );
	deepEqual( Stem("gleichviel"), "gleichviel" );
	deepEqual( Stem("gleichwie"), "gleichwi" );
	deepEqual( Stem("gleichwohl"), "gleichwohl" );
	deepEqual( Stem("gleichzeitig"), "gleichzeit" );
	deepEqual( Stem("gleichzeitigen"), "gleichzeit" );
	deepEqual( Stem("gleichzumachen"), "gleichzumach" );
	deepEqual( Stem("gleis"), "gleis" );
	deepEqual( Stem("gleise"), "gleis" );
	deepEqual( Stem("gleissnerei"), "gleissnerei" );
	deepEqual( Stem("gleitet"), "gleitet" );
	deepEqual( Stem("glesen"), "gles" );
	deepEqual( Stem("glich"), "glich" );
	deepEqual( Stem("glichen"), "glich" );
	deepEqual( Stem("glied"), "glied" );
	deepEqual( Stem("glieder"), "glied" );
	deepEqual( Stem("gliederlein"), "gliederlein" );
	deepEqual( Stem("gliedern"), "glied" );
	deepEqual( Stem("glimmenden"), "glimmend" );
	deepEqual( Stem("glimmrigen"), "glimmrig" );
	deepEqual( Stem("glitt"), "glitt" );
	deepEqual( Stem("glitten"), "glitt" );
	deepEqual( Stem("glitzernde"), "glitzernd" );
	deepEqual( Stem("glitzernden"), "glitzernd" );
	deepEqual( Stem("glöckchen"), "glockch" );
	deepEqual( Stem("glocke"), "glock" );
	deepEqual( Stem("glocken"), "glock" );
	deepEqual( Stem("glockengeläute"), "glockengelaut" );
	deepEqual( Stem("glockenschläge"), "glockenschlag" );
	deepEqual( Stem("glockenschnur"), "glockenschnur" );
	deepEqual( Stem("glockenschönen"), "glockenschon" );
	deepEqual( Stem("glockenspiel"), "glockenspiel" );
	deepEqual( Stem("glockenstimme"), "glockenstimm" );
	deepEqual( Stem("glöcklein"), "glocklein" );
	deepEqual( Stem("gloria"), "gloria" );
	deepEqual( Stem("glorie"), "glori" );
	deepEqual( Stem("glorreichen"), "glorreich" );
	deepEqual( Stem("glotzäugelchen"), "glotzaugelch" );
	deepEqual( Stem("glotzaugen"), "glotzaug" );
	deepEqual( Stem("glotzäugig"), "glotzaug" );
	deepEqual( Stem("glotzte"), "glotzt" );
	deepEqual( Stem("glotzten"), "glotzt" );
	deepEqual( Stem("glück"), "gluck" );
	deepEqual( Stem("glücke"), "gluck" );
	deepEqual( Stem("glückes"), "gluck" );
	deepEqual( Stem("glückhaften"), "gluckhaft" );
	deepEqual( Stem("glücklich"), "glucklich" );
	deepEqual( Stem("glückliche"), "glucklich" );
	deepEqual( Stem("glücklichen"), "glucklich" );
	deepEqual( Stem("glücklicher"), "glucklich" );
	deepEqual( Stem("glücklicheren"), "glucklich" );
	deepEqual( Stem("glücklichern"), "glucklich" );
	deepEqual( Stem("glücklicherweise"), "glucklicherweis" );
	deepEqual( Stem("glücklichste"), "glucklich" );
	deepEqual( Stem("glücklichsten"), "glucklich" );
	deepEqual( Stem("glücks"), "gluck" );
	deepEqual( Stem("glückselig"), "glucksel" );
	deepEqual( Stem("glückselige"), "glucksel" );
	deepEqual( Stem("glückseligen"), "glucksel" );
	deepEqual( Stem("glückseliger"), "glucksel" );
	deepEqual( Stem("glückseligkeit"), "glucksel" );
	deepEqual( Stem("glückseligkeitslehre"), "gluckseligkeitslehr" );
	deepEqual( Stem("glückseligkeitsprinzip"), "gluckseligkeitsprinzip" );
	deepEqual( Stem("glückseligkeitsprinzips"), "gluckseligkeitsprinzips" );
	deepEqual( Stem("glucksen"), "glucks" );
	deepEqual( Stem("glücksfall"), "glucksfall" );
	deepEqual( Stem("glücksgefühle"), "glucksgefuhl" );
	deepEqual( Stem("glückskind"), "gluckskind" );
	deepEqual( Stem("glückt"), "gluckt" );
	deepEqual( Stem("glückwunsch"), "gluckwunsch" );
	deepEqual( Stem("glühen"), "gluh" );
	deepEqual( Stem("glühend"), "gluhend" );
	deepEqual( Stem("glühende"), "gluhend" );
	deepEqual( Stem("glühenden"), "gluhend" );
	deepEqual( Stem("glühender"), "gluhend" );
	deepEqual( Stem("glühendes"), "gluhend" );
	deepEqual( Stem("glühendrot"), "gluhendrot" );
	deepEqual( Stem("glühendste"), "gluhend" );
	deepEqual( Stem("glühlampe"), "gluhlamp" );
	deepEqual( Stem("glühte"), "gluht" );
	deepEqual( Stem("glühten"), "gluht" );
	deepEqual( Stem("glühwürmchen"), "gluhwurmch" );
	deepEqual( Stem("glupft"), "glupft" );
	deepEqual( Stem("glut"), "glut" );
	deepEqual( Stem("gmacht"), "gmacht" );
	deepEqual( Stem("gmeint"), "gmeint" );
	deepEqual( Stem("gmerkt"), "gmerkt" );
	deepEqual( Stem("gnade"), "gnad" );
	deepEqual( Stem("gnaden"), "gnad" );
	deepEqual( Stem("gnadenbrot"), "gnadenbrot" );
	deepEqual( Stem("gnadensonne"), "gnadensonn" );
	deepEqual( Stem("gnadenstuhl"), "gnadenstuhl" );
	deepEqual( Stem("gnadenstuhls"), "gnadenstuhl" );
	deepEqual( Stem("gnädig"), "gnadig" );
	deepEqual( Stem("gnädige"), "gnadig" );
	deepEqual( Stem("gnädiger"), "gnadig" );
	deepEqual( Stem("gnädiglich"), "gnadig" );
	deepEqual( Stem("gnädigste"), "gnadig" );
	deepEqual( Stem("gnante"), "gnant" );
	deepEqual( Stem("gnau"), "gnau" );
	deepEqual( Stem("gnommen"), "gnomm" );
	deepEqual( Stem("gnug"), "gnug" );
	deepEqual( Stem("gockelhahn"), "gockelhahn" );
	deepEqual( Stem("gockelhahns"), "gockelhahn" );
	deepEqual( Stem("goethe"), "goeth" );
	deepEqual( Stem("gog"), "gog" );
	deepEqual( Stem("göhl"), "gohl" );
	deepEqual( Stem("gold"), "gold" );
	deepEqual( Stem("goldach"), "goldach" );
	deepEqual( Stem("goldacher"), "goldach" );
	deepEqual( Stem("goldbecher"), "goldbech" );
	deepEqual( Stem("goldbefrackter"), "goldbefrackt" );
	deepEqual( Stem("goldbestecke"), "goldbesteck" );
	deepEqual( Stem("goldbeutel"), "goldbeutel" );
	deepEqual( Stem("goldblatt"), "goldblatt" );
	deepEqual( Stem("goldblätter"), "goldblatt" );
	deepEqual( Stem("goldblonden"), "goldblond" );
	deepEqual( Stem("goldbörtchen"), "goldbortch" );
	deepEqual( Stem("goldbuchstaben"), "goldbuchstab" );
	deepEqual( Stem("golddress"), "golddress" );
	deepEqual( Stem("golddreß"), "golddress" );
	deepEqual( Stem("golddukaten"), "golddukat" );
	deepEqual( Stem("golde"), "gold" );
	deepEqual( Stem("goldene"), "gold" );
	deepEqual( Stem("goldenem"), "gold" );
	deepEqual( Stem("goldenen"), "gold" );
	deepEqual( Stem("goldener"), "gold" );
	deepEqual( Stem("goldenes"), "gold" );
	deepEqual( Stem("goldes"), "gold" );
	deepEqual( Stem("goldfische"), "goldfisch" );
	deepEqual( Stem("goldfuchs"), "goldfuch" );
	deepEqual( Stem("goldfuchse"), "goldfuchs" );
	deepEqual( Stem("goldgelbes"), "goldgelb" );
	deepEqual( Stem("goldgeschäfte"), "goldgeschaft" );
	deepEqual( Stem("goldgrube"), "goldgrub" );
	deepEqual( Stem("goldgülden"), "goldguld" );
	deepEqual( Stem("goldhäubchen"), "goldhaubch" );
	deepEqual( Stem("goldhelm"), "goldhelm" );
	deepEqual( Stem("goldig"), "goldig" );
	deepEqual( Stem("goldigen"), "goldig" );
	deepEqual( Stem("goldketten"), "goldkett" );
	deepEqual( Stem("goldkieswege"), "goldkiesweg" );
	deepEqual( Stem("goldknechte"), "goldknecht" );
	deepEqual( Stem("goldkugeln"), "goldkugeln" );
	deepEqual( Stem("goldlack"), "goldlack" );
	deepEqual( Stem("goldne"), "goldn" );
	deepEqual( Stem("goldnen"), "goldn" );
	deepEqual( Stem("goldpapier"), "goldpapi" );
	deepEqual( Stem("goldreserven"), "goldreserv" );
	deepEqual( Stem("goldscheibe"), "goldscheib" );
	deepEqual( Stem("goldschlangen"), "goldschlang" );
	deepEqual( Stem("goldschmied"), "goldschmied" );
	deepEqual( Stem("goldschnüren"), "goldschnur" );
	deepEqual( Stem("goldstickereien"), "goldstickerei" );
	deepEqual( Stem("goldstück"), "goldstuck" );
	deepEqual( Stem("goldstücke"), "goldstuck" );
	deepEqual( Stem("goldtaler"), "goldtal" );
	deepEqual( Stem("goldtalern"), "goldtal" );
	deepEqual( Stem("goldtresse"), "goldtress" );
	deepEqual( Stem("goldwaage"), "goldwaag" );
	deepEqual( Stem("gölte"), "golt" );
	deepEqual( Stem("gomorrah"), "gomorrah" );
	deepEqual( Stem("gomorrahs"), "gomorrah" );
	deepEqual( Stem("gönne"), "gonn" );
	deepEqual( Stem("gönnen"), "gonn" );
	deepEqual( Stem("gönner"), "gonn" );
	deepEqual( Stem("gönnte"), "gonnt" );
	deepEqual( Stem("goodbye"), "goodby" );
	deepEqual( Stem("gopher"), "goph" );
	deepEqual( Stem("gosen"), "gos" );
	deepEqual( Stem("goss"), "goss" );
	deepEqual( Stem("goß"), "goss" );
	deepEqual( Stem("gotisches"), "gotisch" );
	deepEqual( Stem("gott"), "gott" );
	deepEqual( Stem("götter"), "gott" );
	deepEqual( Stem("götterbilder"), "gotterbild" );
	deepEqual( Stem("göttern"), "gott" );
	deepEqual( Stem("gottes"), "gott" );
	deepEqual( Stem("gottesdienst"), "gottesdien" );
	deepEqual( Stem("gottesdienstbesucher"), "gottesdienstbesuch" );
	deepEqual( Stem("gottesdienste"), "gottesdien" );
	deepEqual( Stem("gottesdiensten"), "gottesdien" );
	deepEqual( Stem("gottesdienstes"), "gottesdien" );
	deepEqual( Stem("gottesgelehrten"), "gottesgelehrt" );
	deepEqual( Stem("gottesgelehrter"), "gottesgelehrt" );
	deepEqual( Stem("gottesgläubig"), "gottesglaub" );
	deepEqual( Stem("gotteslästerlichsten"), "gotteslast" );
	deepEqual( Stem("gottesmannes"), "gottesmann" );
	deepEqual( Stem("gottesverehrung"), "gottesverehr" );
	deepEqual( Stem("gottfried"), "gottfried" );
	deepEqual( Stem("gotthard"), "gotthard" );
	deepEqual( Stem("gottheit"), "gottheit" );
	deepEqual( Stem("göttin"), "gottin" );
	deepEqual( Stem("göttlich"), "gottlich" );
	deepEqual( Stem("göttliche"), "gottlich" );
	deepEqual( Stem("göttlichen"), "gottlich" );
	deepEqual( Stem("göttlicher"), "gottlich" );
	deepEqual( Stem("göttliches"), "gottlich" );
	deepEqual( Stem("gottlose"), "gottlos" );
	deepEqual( Stem("gottlosen"), "gottlos" );
	deepEqual( Stem("gottloser"), "gottlos" );
	deepEqual( Stem("gotts"), "gott" );
	deepEqual( Stem("gottsnamen"), "gottsnam" );
	deepEqual( Stem("gottverfluchts"), "gottverflucht" );
	deepEqual( Stem("gottverlassene"), "gottverlass" );
	deepEqual( Stem("götzen"), "gotz" );
	deepEqual( Stem("götzenbild"), "gotzenbild" );
	deepEqual( Stem("götzenbilder"), "gotzenbild" );
	deepEqual( Stem("götzenbildes"), "gotzenbild" );
	deepEqual( Stem("götzendienerisch"), "gotzendiener" );
	deepEqual( Stem("götzendienerische"), "gotzendiener" );
	deepEqual( Stem("götzendienerischen"), "gotzendiener" );
	deepEqual( Stem("götzendienerisches"), "gotzendiener" );
	deepEqual( Stem("götzendienst"), "gotzendien" );
	deepEqual( Stem("götzensteine"), "gotzenstein" );
	deepEqual( Stem("gouvernement"), "gouvernement" );
	deepEqual( Stem("gouverneur"), "gouverneur" );
	deepEqual( Stem("gouverneurs"), "gouverneur" );
	deepEqual( Stem("grab"), "grab" );
	deepEqual( Stem("grabbegleitung"), "grabbegleit" );
	deepEqual( Stem("grabe"), "grab" );
	deepEqual( Stem("graben"), "grab" );
	deepEqual( Stem("gräben"), "grab" );
	deepEqual( Stem("gräber"), "grab" );
	deepEqual( Stem("gräbern"), "grab" );
	deepEqual( Stem("grabesstill"), "grabesstill" );
	deepEqual( Stem("grabtuch"), "grabtuch" );
	deepEqual( Stem("grabtuchs"), "grabtuch" );
	deepEqual( Stem("grad"), "grad" );
	deepEqual( Stem("gradaus"), "gradaus" );
	deepEqual( Stem("gradausfahrendes"), "gradausfahr" );
	deepEqual( Stem("grade"), "grad" );
	deepEqual( Stem("graden"), "grad" );
	deepEqual( Stem("grades"), "grad" );
	deepEqual( Stem("gradezu"), "gradezu" );
	deepEqual( Stem("gradheit"), "gradheit" );
	deepEqual( Stem("gradlinigen"), "gradlin" );
	deepEqual( Stem("graf"), "graf" );
	deepEqual( Stem("grafen"), "graf" );
	deepEqual( Stem("grafenrock"), "grafenrock" );
	deepEqual( Stem("grafensohn"), "grafensohn" );
	deepEqual( Stem("gräfin"), "grafin" );
	deepEqual( Stem("gräfliche"), "graflich" );
	deepEqual( Stem("gräflichem"), "graflich" );
	deepEqual( Stem("gräflichen"), "graflich" );
	deepEqual( Stem("gram"), "gram" );
	deepEqual( Stem("grämen"), "gram" );
	deepEqual( Stem("grammaticale"), "grammatical" );
	deepEqual( Stem("grammatik"), "grammat" );
	deepEqual( Stem("grammophon"), "grammophon" );
	deepEqual( Stem("gramvollen"), "gramvoll" );
	deepEqual( Stem("granatbaum"), "granatbaum" );
	deepEqual( Stem("granatblütenstrauss"), "granatblutenstrauss" );
	deepEqual( Stem("granatwerfer"), "granatwerf" );
	deepEqual( Stem("granen"), "gran" );
	deepEqual( Stem("granitklotz"), "granitklotz" );
	deepEqual( Stem("gras"), "gras" );
	deepEqual( Stem("grase"), "gras" );
	deepEqual( Stem("grasen"), "gras" );
	deepEqual( Stem("gräser"), "gras" );
	deepEqual( Stem("gräsern"), "gras" );
	deepEqual( Stem("grashälmchen"), "grashalmch" );
	deepEqual( Stem("grasigen"), "grasig" );
	deepEqual( Stem("grasreich"), "grasreich" );
	deepEqual( Stem("grasreichen"), "grasreich" );
	deepEqual( Stem("gräßlich"), "grasslich" );
	deepEqual( Stem("grässliche"), "grasslich" );
	deepEqual( Stem("gräßliche"), "grasslich" );
	deepEqual( Stem("grässlichen"), "grasslich" );
	deepEqual( Stem("gräßlichen"), "grasslich" );
	deepEqual( Stem("grässlichsten"), "grasslich" );
	deepEqual( Stem("grasten"), "grast" );
	deepEqual( Stem("grasteufeln"), "grasteufeln" );
	deepEqual( Stem("grasüberwachsene"), "grasuberwachs" );
	deepEqual( Stem("grat"), "grat" );
	deepEqual( Stem("gratis"), "gratis" );
	deepEqual( Stem("gratulierte"), "gratuliert" );
	deepEqual( Stem("grau"), "grau" );
	deepEqual( Stem("graubärtigen"), "graubart" );
	deepEqual( Stem("graublauen"), "graublau" );
	deepEqual( Stem("graue"), "grau" );
	deepEqual( Stem("grauem"), "grau" );
	deepEqual( Stem("grauen"), "grau" );
	deepEqual( Stem("grauendem"), "grauend" );
	deepEqual( Stem("grauenvollen"), "grauenvoll" );
	deepEqual( Stem("grauer"), "grau" );
	deepEqual( Stem("graues"), "grau" );
	deepEqual( Stem("graumeliertes"), "graumeliert" );
	deepEqual( Stem("grausam"), "grausam" );
	deepEqual( Stem("grausamen"), "grausam" );
	deepEqual( Stem("grausamerweise"), "grausamerweis" );
	deepEqual( Stem("grausames"), "grausam" );
	deepEqual( Stem("grausamkeit"), "grausam" );
	deepEqual( Stem("grauschwarzen"), "grauschwarz" );
	deepEqual( Stem("grausen"), "graus" );
	deepEqual( Stem("grausens"), "graus" );
	deepEqual( Stem("graute"), "graut" );
	deepEqual( Stem("grauweiss"), "grauweiss" );
	deepEqual( Stem("grauweissen"), "grauweiss" );
	deepEqual( Stem("grauzone"), "grauzon" );
	deepEqual( Stem("gravierende"), "gravier" );
	deepEqual( Stem("gravierenden"), "gravier" );
	deepEqual( Stem("gravität"), "gravitat" );
	deepEqual( Stem("gravitätisch"), "gravitat" );
	deepEqual( Stem("grazilsten"), "grazil" );
	deepEqual( Stem("gredt"), "gredt" );
	deepEqual( Stem("grehm"), "grehm" );
	deepEqual( Stem("greifen"), "greif" );
	deepEqual( Stem("greifenden"), "greifend" );
	deepEqual( Stem("greifliche"), "greiflich" );
	deepEqual( Stem("greift"), "greift" );
	deepEqual( Stem("greinige"), "greinig" );
	deepEqual( Stem("greinstimme"), "greinstimm" );
	deepEqual( Stem("greis"), "greis" );
	deepEqual( Stem("greise"), "greis" );
	deepEqual( Stem("greisen"), "greis" );
	deepEqual( Stem("greisenalter"), "greisenalt" );
	deepEqual( Stem("greisengestalt"), "greisengestalt" );
	deepEqual( Stem("greisenhafter"), "greisenhaft" );
	deepEqual( Stem("greisenhaftigkeit"), "greisenhaft" );
	deepEqual( Stem("greisentums"), "greisentum" );
	deepEqual( Stem("grell"), "grell" );
	deepEqual( Stem("grellen"), "grell" );
	deepEqual( Stem("gremium"), "gremium" );
	deepEqual( Stem("grendelmeier"), "grendelmei" );
	deepEqual( Stem("grenz"), "grenz" );
	deepEqual( Stem("grenzbauden"), "grenzbaud" );
	deepEqual( Stem("grenzbestimmung"), "grenzbestimm" );
	deepEqual( Stem("grenzbezirk"), "grenzbezirk" );
	deepEqual( Stem("grenze"), "grenz" );
	deepEqual( Stem("grenzen"), "grenz" );
	deepEqual( Stem("grenzenlos"), "grenzenlos" );
	deepEqual( Stem("grenzenlose"), "grenzenlos" );
	deepEqual( Stem("grenzenlosen"), "grenzenlos" );
	deepEqual( Stem("grenzscheide"), "grenzscheid" );
	deepEqual( Stem("grenzschenke"), "grenzschenk" );
	deepEqual( Stem("grenzt"), "grenzt" );
	deepEqual( Stem("grenzte"), "grenzt" );
	deepEqual( Stem("grete"), "gret" );
	deepEqual( Stem("greuel"), "greuel" );
	deepEqual( Stem("greuelhafte"), "greuelhaft" );
	deepEqual( Stem("greuelhaftes"), "greuelhaft" );
	deepEqual( Stem("greueln"), "greueln" );
	deepEqual( Stem("greuels"), "greuel" );
	deepEqual( Stem("greueltaten"), "greueltat" );
	deepEqual( Stem("greulich"), "greulich" );
	deepEqual( Stem("greuliche"), "greulich" );
	deepEqual( Stem("greulichem"), "greulich" );
	deepEqual( Stem("greulichen"), "greulich" );
	deepEqual( Stem("greulicher"), "greulich" );
	deepEqual( Stem("greuliches"), "greulich" );
	deepEqual( Stem("greve"), "grev" );
	deepEqual( Stem("griechen"), "griech" );
	deepEqual( Stem("griechenland"), "griechenland" );
	deepEqual( Stem("griechische"), "griechisch" );
	deepEqual( Stem("griechischem"), "griechisch" );
	deepEqual( Stem("griechischen"), "griechisch" );
	deepEqual( Stem("griff"), "griff" );
	deepEqual( Stem("griffen"), "griff" );
	deepEqual( Stem("grille"), "grill" );
	deepEqual( Stem("grillen"), "grill" );
	deepEqual( Stem("grimassen"), "grimass" );
	deepEqual( Stem("grimm"), "grimm" );
	deepEqual( Stem("grimmig"), "grimmig" );
	deepEqual( Stem("grimmige"), "grimmig" );
	deepEqual( Stem("grimmigem"), "grimmig" );
	deepEqual( Stem("grimmigen"), "grimmig" );
	deepEqual( Stem("grimmiger"), "grimmig" );
	deepEqual( Stem("grimmiges"), "grimmig" );
	deepEqual( Stem("grimmigste"), "grimmig" );
	deepEqual( Stem("grimms"), "grimm" );
	deepEqual( Stem("grind"), "grind" );
	deepEqual( Stem("gringsten"), "gring" );
	deepEqual( Stem("grinsend"), "grinsend" );
	deepEqual( Stem("grinste"), "grin" );
	deepEqual( Stem("grissen"), "griss" );
	deepEqual( Stem("grissend"), "grissend" );
	deepEqual( Stem("grob"), "grob" );
	deepEqual( Stem("grobe"), "grob" );
	deepEqual( Stem("grobem"), "grob" );
	deepEqual( Stem("groben"), "grob" );
	deepEqual( Stem("grober"), "grob" );
	deepEqual( Stem("gröber"), "grob" );
	deepEqual( Stem("gröberen"), "grob" );
	deepEqual( Stem("gröbern"), "grob" );
	deepEqual( Stem("grobes"), "grob" );
	deepEqual( Stem("grobheit"), "grobheit" );
	deepEqual( Stem("gröblich"), "groblich" );
	deepEqual( Stem("gröbsten"), "grob" );
	deepEqual( Stem("grölen"), "grol" );
	deepEqual( Stem("groll"), "groll" );
	deepEqual( Stem("grolle"), "groll" );
	deepEqual( Stem("grollend"), "grollend" );
	deepEqual( Stem("grollendem"), "grollend" );
	deepEqual( Stem("grollenden"), "grollend" );
	deepEqual( Stem("grollte"), "grollt" );
	deepEqual( Stem("groove"), "groov" );
	deepEqual( Stem("gross"), "gross" );
	deepEqual( Stem("groß"), "gross" );
	deepEqual( Stem("grossartig"), "grossart" );
	deepEqual( Stem("großartig"), "grossart" );
	deepEqual( Stem("grossartige"), "grossart" );
	deepEqual( Stem("großartige"), "grossart" );
	deepEqual( Stem("grossartiger"), "grossart" );
	deepEqual( Stem("großartiger"), "grossart" );
	deepEqual( Stem("großartiges"), "grossart" );
	deepEqual( Stem("grossartigte"), "grossartigt" );
	deepEqual( Stem("grossaupa"), "grossaupa" );
	deepEqual( Stem("großaupa"), "grossaupa" );
	deepEqual( Stem("grossbanken"), "grossbank" );
	deepEqual( Stem("grossblumigen"), "grossblum" );
	deepEqual( Stem("grossbritannien"), "grossbritanni" );
	deepEqual( Stem("grosse"), "gross" );
	deepEqual( Stem("große"), "gross" );
	deepEqual( Stem("grösse"), "gross" );
	deepEqual( Stem("größe"), "gross" );
	deepEqual( Stem("grossem"), "gross" );
	deepEqual( Stem("großem"), "gross" );
	deepEqual( Stem("grossen"), "gross" );
	deepEqual( Stem("großen"), "gross" );
	deepEqual( Stem("grössen"), "gross" );
	deepEqual( Stem("grosser"), "gross" );
	deepEqual( Stem("großer"), "gross" );
	deepEqual( Stem("grösser"), "gross" );
	deepEqual( Stem("größer"), "gross" );
	deepEqual( Stem("grössere"), "gross" );
	deepEqual( Stem("größere"), "gross" );
	deepEqual( Stem("grösserem"), "gross" );
	deepEqual( Stem("größerem"), "gross" );
	deepEqual( Stem("grösseren"), "gross" );
	deepEqual( Stem("größeren"), "gross" );
	deepEqual( Stem("grösserer"), "gross" );
	deepEqual( Stem("größerer"), "gross" );
	deepEqual( Stem("grösseres"), "gross" );
	deepEqual( Stem("größeres"), "gross" );
	deepEqual( Stem("grösserm"), "grosserm" );
	deepEqual( Stem("grössern"), "gross" );
	deepEqual( Stem("grosses"), "gross" );
	deepEqual( Stem("großes"), "gross" );
	deepEqual( Stem("grossherrn"), "grossherrn" );
	deepEqual( Stem("großkariertes"), "grosskariert" );
	deepEqual( Stem("grosskhan"), "grosskhan" );
	deepEqual( Stem("grossknecht"), "grossknecht" );
	deepEqual( Stem("grossmächtige"), "grossmacht" );
	deepEqual( Stem("grossmächtigen"), "grossmacht" );
	deepEqual( Stem("grossmächtiges"), "grossmacht" );
	deepEqual( Stem("grossmut"), "grossmut" );
	deepEqual( Stem("grossmütige"), "grossmut" );
	deepEqual( Stem("grossmütigen"), "grossmut" );
	deepEqual( Stem("grossmutter"), "grossmutt" );
	deepEqual( Stem("großmutter"), "grossmutt" );
	deepEqual( Stem("großmütter"), "grossmutt" );
	deepEqual( Stem("grossratsmitglied"), "grossratsmitglied" );
	deepEqual( Stem("großstadt"), "grossstadt" );
	deepEqual( Stem("grossstädte"), "grossstadt" );
	deepEqual( Stem("grösste"), "grosst" );
	deepEqual( Stem("größte"), "grosst" );
	deepEqual( Stem("grössten"), "grosst" );
	deepEqual( Stem("größten"), "grosst" );
	deepEqual( Stem("grösstenteils"), "grosstenteil" );
	deepEqual( Stem("größtenteils"), "grosstenteil" );
	deepEqual( Stem("grösster"), "grosst" );
	deepEqual( Stem("grösstes"), "grosst" );
	deepEqual( Stem("größtes"), "grosst" );
	deepEqual( Stem("grösstmögliche"), "grosstmog" );
	deepEqual( Stem("grosstuerei"), "grosstuerei" );
	deepEqual( Stem("grossvater"), "grossvat" );
	deepEqual( Stem("großvater"), "grossvat" );
	deepEqual( Stem("grossvaters"), "grossvat" );
	deepEqual( Stem("großvaters"), "grossvat" );
	deepEqual( Stem("grossvaterstuhl"), "grossvaterstuhl" );
	deepEqual( Stem("grosszügigen"), "grosszug" );
	deepEqual( Stem("grosszuziehen"), "grosszuzieh" );
	deepEqual( Stem("grub"), "grub" );
	deepEqual( Stem("grubach"), "grubach" );
	deepEqual( Stem("grube"), "grub" );
	deepEqual( Stem("grübeleien"), "grubelei" );
	deepEqual( Stem("grübelt"), "grubelt" );
	deepEqual( Stem("grübelte"), "grubelt" );
	deepEqual( Stem("gruben"), "grub" );
	deepEqual( Stem("grubenkessel"), "grubenkessel" );
	deepEqual( Stem("grüblerisch"), "grubler" );
	deepEqual( Stem("grüblerische"), "grubler" );
	deepEqual( Stem("grumpelt"), "grumpelt" );
	deepEqual( Stem("grün"), "grun" );
	deepEqual( Stem("grünbemaltes"), "grunbemalt" );
	deepEqual( Stem("grund"), "grund" );
	deepEqual( Stem("grundbegriff"), "grundbegriff" );
	deepEqual( Stem("grundbesitzer"), "grundbesitz" );
	deepEqual( Stem("grunddienst"), "grunddien" );
	deepEqual( Stem("grunde"), "grund" );
	deepEqual( Stem("gründe"), "grund" );
	deepEqual( Stem("gründen"), "grund" );
	deepEqual( Stem("gründende"), "grundend" );
	deepEqual( Stem("gründer"), "grund" );
	deepEqual( Stem("grundes"), "grund" );
	deepEqual( Stem("gründet"), "grundet" );
	deepEqual( Stem("gründete"), "grundet" );
	deepEqual( Stem("grundfalschen"), "grundfalsch" );
	deepEqual( Stem("grundfesten"), "grundf" );
	deepEqual( Stem("grundgesetz"), "grundgesetz" );
	deepEqual( Stem("grundgesetzes"), "grundgesetz" );
	deepEqual( Stem("grundherrlichen"), "grundherr" );
	deepEqual( Stem("grundlage"), "grundlag" );
	deepEqual( Stem("grundlagen"), "grundlag" );
	deepEqual( Stem("grundlegenden"), "grundleg" );
	deepEqual( Stem("gründlich"), "grundlich" );
	deepEqual( Stem("gründlichen"), "grundlich" );
	deepEqual( Stem("gründliches"), "grundlich" );
	deepEqual( Stem("gründlinge"), "grundling" );
	deepEqual( Stem("grundlos"), "grundlos" );
	deepEqual( Stem("grundlose"), "grundlos" );
	deepEqual( Stem("grundmauern"), "grundmau" );
	deepEqual( Stem("gründonnerstag"), "grundonnerstag" );
	deepEqual( Stem("grundsatz"), "grundsatz" );
	deepEqual( Stem("grundsatze"), "grundsatz" );
	deepEqual( Stem("grundsätze"), "grundsatz" );
	deepEqual( Stem("grundsätzen"), "grundsatz" );
	deepEqual( Stem("grundsatzes"), "grundsatz" );
	deepEqual( Stem("grundsätzlich"), "grundsatz" );
	deepEqual( Stem("grundsprache"), "grundsprach" );
	deepEqual( Stem("grundstein"), "grundstein" );
	deepEqual( Stem("grundtext"), "grundtext" );
	deepEqual( Stem("grundtone"), "grundton" );
	deepEqual( Stem("gründung"), "grundung" );
	deepEqual( Stem("grüne"), "grun" );
	deepEqual( Stem("grünem"), "grun" );
	deepEqual( Stem("grünen"), "grun" );
	deepEqual( Stem("grüner"), "grun" );
	deepEqual( Stem("grünes"), "grun" );
	deepEqual( Stem("grünfräckiger"), "grunfrack" );
	deepEqual( Stem("grünliche"), "grunlich" );
	deepEqual( Stem("grünlichen"), "grunlich" );
	deepEqual( Stem("grünrot"), "grunrot" );
	deepEqual( Stem("grünseidenen"), "grunseid" );
	deepEqual( Stem("grünspecht"), "grunspecht" );
	deepEqual( Stem("grünst"), "grun" );
	deepEqual( Stem("grunzen"), "grunz" );
	deepEqual( Stem("grunzend"), "grunzend" );
	deepEqual( Stem("gruppe"), "grupp" );
	deepEqual( Stem("gruppen"), "grupp" );
	deepEqual( Stem("gruppenweise"), "gruppenweis" );
	deepEqual( Stem("gruseligen"), "grusel" );
	deepEqual( Stem("gruss"), "gruss" );
	deepEqual( Stem("gruß"), "gruss" );
	deepEqual( Stem("grüss"), "gruss" );
	deepEqual( Stem("grussadresse"), "grussadress" );
	deepEqual( Stem("grusse"), "gruss" );
	deepEqual( Stem("grüsse"), "gruss" );
	deepEqual( Stem("grüße"), "gruss" );
	deepEqual( Stem("grüssen"), "gruss" );
	deepEqual( Stem("grüssend"), "grussend" );
	deepEqual( Stem("grüßend"), "grussend" );
	deepEqual( Stem("grüsste"), "grusst" );
	deepEqual( Stem("grüßte"), "grusst" );
	deepEqual( Stem("grüssten"), "grusst" );
	deepEqual( Stem("grüßten"), "grusst" );
	deepEqual( Stem("grusswort"), "grusswort" );
	deepEqual( Stem("gsagt"), "gsagt" );
	deepEqual( Stem("gsangl"), "gsangl" );
	deepEqual( Stem("gsangln"), "gsangln" );
	deepEqual( Stem("gschäft"), "gschaft" );
	deepEqual( Stem("gscheid"), "gscheid" );
	deepEqual( Stem("gscheids"), "gscheid" );
	deepEqual( Stem("gschicht"), "gschicht" );
	deepEqual( Stem("gschieht"), "gschieht" );
	deepEqual( Stem("gschwind"), "gschwind" );
	deepEqual( Stem("gschwister"), "gschwist" );
	deepEqual( Stem("gsessen"), "gsess" );
	deepEqual( Stem("gsetzt"), "gsetzt" );
	deepEqual( Stem("gsicht"), "gsicht" );
	deepEqual( Stem("gspart"), "gspart" );
	deepEqual( Stem("gsperrt"), "gsperrt" );
	deepEqual( Stem("gspitzt"), "gspitzt" );
	deepEqual( Stem("gstanden"), "gstand" );
	deepEqual( Stem("gstanzln"), "gstanzln" );
	deepEqual( Stem("gstorben"), "gstorb" );
	deepEqual( Stem("gstorbener"), "gstorb" );
	deepEqual( Stem("gstritten"), "gstritt" );
	deepEqual( Stem("gsucht"), "gsucht" );
	deepEqual( Stem("gsungen"), "gsung" );
	deepEqual( Stem("guck"), "guck" );
	deepEqual( Stem("gucken"), "guck" );
	deepEqual( Stem("guckfenster"), "guckfen" );
	deepEqual( Stem("guckt"), "guckt" );
	deepEqual( Stem("guckte"), "guckt" );
	deepEqual( Stem("guckten"), "guckt" );
	deepEqual( Stem("guet"), "guet" );
	deepEqual( Stem("guillotine"), "guillotin" );
	deepEqual( Stem("guisan"), "guisan" );
	deepEqual( Stem("gulden"), "guld" );
	deepEqual( Stem("gültbrief"), "gultbrief" );
	deepEqual( Stem("gültig"), "gultig" );
	deepEqual( Stem("gültige"), "gultig" );
	deepEqual( Stem("gültiges"), "gultig" );
	deepEqual( Stem("gültigkeit"), "gultig" );
	deepEqual( Stem("gummi"), "gummi" );
	deepEqual( Stem("gummigegend"), "gummigeg" );
	deepEqual( Stem("gummiteich"), "gummiteich" );
	deepEqual( Stem("gummiteichen"), "gummiteich" );
	deepEqual( Stem("gündem"), "gund" );
	deepEqual( Stem("gungeline"), "gungelin" );
	deepEqual( Stem("gunnar"), "gunnar" );
	deepEqual( Stem("gunst"), "gunst" );
	deepEqual( Stem("gunsten"), "gunst" );
	deepEqual( Stem("günstig"), "gunstig" );
	deepEqual( Stem("günstige"), "gunstig" );
	deepEqual( Stem("günstigem"), "gunstig" );
	deepEqual( Stem("günstigen"), "gunstig" );
	deepEqual( Stem("günstiger"), "gunstig" );
	deepEqual( Stem("günstiges"), "gunstig" );
	deepEqual( Stem("gür"), "gur" );
	deepEqual( Stem("gurgel"), "gurgel" );
	deepEqual( Stem("gurgeln"), "gurgeln" );
	deepEqual( Stem("gurgelnden"), "gurgelnd" );
	deepEqual( Stem("gurken"), "gurk" );
	deepEqual( Stem("gürpinar"), "gurpinar" );
	deepEqual( Stem("gurren"), "gurr" );
	deepEqual( Stem("gurt"), "gurt" );
	deepEqual( Stem("gürtel"), "gurtel" );
	deepEqual( Stem("gürteln"), "gurteln" );
	deepEqual( Stem("gürten"), "gurt" );
	deepEqual( Stem("gürteten"), "gurtet" );
	deepEqual( Stem("gussbild"), "gussbild" );
	deepEqual( Stem("gußbild"), "gussbild" );
	deepEqual( Stem("gut"), "gut" );
	deepEqual( Stem("gutartig"), "gutart" );
	deepEqual( Stem("gutartige"), "gutart" );
	deepEqual( Stem("gutbesorgten"), "gutbesorgt" );
	deepEqual( Stem("gutdünkt"), "gutdunkt" );
	deepEqual( Stem("gute"), "gut" );
	deepEqual( Stem("güte"), "gut" );
	deepEqual( Stem("gutem"), "gut" );
	deepEqual( Stem("guten"), "gut" );
	deepEqual( Stem("gutenacht"), "gutenacht" );
	deepEqual( Stem("gutenmorgenkuss"), "gutenmorgenkuss" );
	deepEqual( Stem("guter"), "gut" );
	deepEqual( Stem("güter"), "gut" );
	deepEqual( Stem("gütern"), "gut" );
	deepEqual( Stem("gutes"), "gut" );
	deepEqual( Stem("gutestun"), "gutestun" );
	deepEqual( Stem("gutgesinntheit"), "gutgesinnt" );
	deepEqual( Stem("gutheiten"), "gutheit" );
	deepEqual( Stem("gütige"), "gutig" );
	deepEqual( Stem("gütigen"), "gutig" );
	deepEqual( Stem("gütiges"), "gutig" );
	deepEqual( Stem("gütigkeit"), "gutig" );
	deepEqual( Stem("gütigst"), "gutig" );
	deepEqual( Stem("gütlich"), "gutlich" );
	deepEqual( Stem("gutmachen"), "gutmach" );
	deepEqual( Stem("gutmütig"), "gutmut" );
	deepEqual( Stem("gutmütige"), "gutmut" );
	deepEqual( Stem("gutmütigkeit"), "gutmut" );
	deepEqual( Stem("gutnacht"), "gutnacht" );
	deepEqual( Stem("guts"), "gut" );
	deepEqual( Stem("gutsherren"), "gutsherr" );
	deepEqual( Stem("gutsherrn"), "gutsherrn" );
	deepEqual( Stem("güzel"), "guzel" );
	deepEqual( Stem("gwalt"), "gwalt" );
	deepEqual( Stem("gwaltsame"), "gwaltsam" );
	deepEqual( Stem("gwart"), "gwart" );
	deepEqual( Stem("gweint"), "gweint" );
	deepEqual( Stem("gwesen"), "gwes" );
	deepEqual( Stem("gwitter"), "gwitt" );
	deepEqual( Stem("gwöhnen"), "gwohn" );
	deepEqual( Stem("gwöhnt"), "gwohnt" );
	deepEqual( Stem("gymnasiastin"), "gymnasiastin" );
	deepEqual( Stem("gynäkologen"), "gynakolog" );
	deepEqual( Stem("h"), "h" );
	deepEqual( Stem("ha"), "ha" );
	deepEqual( Stem("haar"), "haar" );
	deepEqual( Stem("haarbürste"), "haarburst" );
	deepEqual( Stem("haardenkmal"), "haardenkmal" );
	deepEqual( Stem("haare"), "haar" );
	deepEqual( Stem("haaren"), "haar" );
	deepEqual( Stem("haares"), "haar" );
	deepEqual( Stem("haarflechten"), "haarflecht" );
	deepEqual( Stem("haarige"), "haarig" );
	deepEqual( Stem("haarschnitt"), "haarschnitt" );
	deepEqual( Stem("haarwild"), "haarwild" );
	deepEqual( Stem("haarwuchs"), "haarwuch" );
	deepEqual( Stem("hab"), "hab" );
	deepEqual( Stem("habe"), "hab" );
	deepEqual( Stem("habel"), "habel" );
	deepEqual( Stem("habels"), "habel" );
	deepEqual( Stem("haben"), "hab" );
	deepEqual( Stem("habenichts"), "habenicht" );
	deepEqual( Stem("häberlin"), "haberlin" );
	deepEqual( Stem("habermus"), "habermus" );
	deepEqual( Stem("habet"), "habet" );
	deepEqual( Stem("habhaft"), "habhaft" );
	deepEqual( Stem("habicht"), "habicht" );
	deepEqual( Stem("habit"), "habit" );
	deepEqual( Stem("habitus"), "habitus" );
	deepEqual( Stem("habs"), "hab" );
	deepEqual( Stem("habseliges"), "habsel" );
	deepEqual( Stem("habseligkeit"), "habsel" );
	deepEqual( Stem("habseligkeiten"), "habsel" );
	deepEqual( Stem("habsucht"), "habsucht" );
	deepEqual( Stem("habt"), "habt" );
	deepEqual( Stem("haci"), "haci" );
	deepEqual( Stem("hacken"), "hack" );
	deepEqual( Stem("hackn"), "hackn" );
	deepEqual( Stem("häcksel"), "hacksel" );
	deepEqual( Stem("hackte"), "hackt" );
	deepEqual( Stem("hadad"), "hadad" );
	deepEqual( Stem("hadep"), "hadep" );
	deepEqual( Stem("hader"), "had" );
	deepEqual( Stem("haderlumpen"), "haderlump" );
	deepEqual( Stem("hadern"), "had" );
	deepEqual( Stem("haemorrheos"), "haemorrheos" );
	deepEqual( Stem("häfelein"), "hafelein" );
	deepEqual( Stem("haferbrei"), "haferbrei" );
	deepEqual( Stem("haft"), "haft" );
	deepEqual( Stem("hafte"), "haft" );
	deepEqual( Stem("haften"), "haft" );
	deepEqual( Stem("haftet"), "haftet" );
	deepEqual( Stem("häftlein"), "haftlein" );
	deepEqual( Stem("haftstrafen"), "haftstraf" );
	deepEqual( Stem("hag"), "hag" );
	deepEqual( Stem("hagel"), "hagel" );
	deepEqual( Stem("hagelflut"), "hagelflut" );
	deepEqual( Stem("hagelhans"), "hagelhan" );
	deepEqual( Stem("hageln"), "hageln" );
	deepEqual( Stem("hagelperlen"), "hagelperl" );
	deepEqual( Stem("hagelregen"), "hagelreg" );
	deepEqual( Stem("hagelregens"), "hagelreg" );
	deepEqual( Stem("hagels"), "hagel" );
	deepEqual( Stem("hagelschlag"), "hagelschlag" );
	deepEqual( Stem("hagelstein"), "hagelstein" );
	deepEqual( Stem("hagelsteine"), "hagelstein" );
	deepEqual( Stem("hagelsteinen"), "hagelstein" );
	deepEqual( Stem("hagelstücke"), "hagelstuck" );
	deepEqual( Stem("hagen"), "hag" );
	deepEqual( Stem("hagere"), "hag" );
	deepEqual( Stem("hagerer"), "hag" );
	deepEqual( Stem("haggai"), "haggai" );
	deepEqual( Stem("haha"), "haha" );
	deepEqual( Stem("hahahaha"), "hahahaha" );
	deepEqual( Stem("häher"), "hah" );
	deepEqual( Stem("hahn"), "hahn" );
	deepEqual( Stem("hähnekrähen"), "hahnekrah" );
	deepEqual( Stem("haider"), "haid" );
	deepEqual( Stem("hain"), "hain" );
	deepEqual( Stem("hains"), "hain" );
	deepEqual( Stem("häkchen"), "hakch" );
	deepEqual( Stem("haken"), "hak" );
	deepEqual( Stem("hakkari"), "hakkari" );
	deepEqual( Stem("häklich"), "haklich" );
	deepEqual( Stem("häklichen"), "haklich" );
	deepEqual( Stem("halb"), "halb" );
	deepEqual( Stem("halbbogen"), "halbbog" );
	deepEqual( Stem("halbdunkel"), "halbdunkel" );
	deepEqual( Stem("halbe"), "halb" );
	deepEqual( Stem("halbem"), "halb" );
	deepEqual( Stem("halben"), "halb" );
	deepEqual( Stem("halber"), "halb" );
	deepEqual( Stem("halbes"), "halb" );
	deepEqual( Stem("halbfinal"), "halbfinal" );
	deepEqual( Stem("halbfinalder"), "halbfinald" );
	deepEqual( Stem("halbgeschlossenen"), "halbgeschloss" );
	deepEqual( Stem("halbheit"), "halbheit" );
	deepEqual( Stem("halbjährigen"), "halbjahr" );
	deepEqual( Stem("halbkreis"), "halbkreis" );
	deepEqual( Stem("halbkreise"), "halbkreis" );
	deepEqual( Stem("halbkugel"), "halbkugel" );
	deepEqual( Stem("halbkugeln"), "halbkugeln" );
	deepEqual( Stem("halblange"), "halblang" );
	deepEqual( Stem("halblauten"), "halblaut" );
	deepEqual( Stem("halblauter"), "halblaut" );
	deepEqual( Stem("halbreife"), "halbreif" );
	deepEqual( Stem("halbring"), "halbring" );
	deepEqual( Stem("halbschatten"), "halbschatt" );
	deepEqual( Stem("halbstummen"), "halbstumm" );
	deepEqual( Stem("halbstündigen"), "halbstund" );
	deepEqual( Stem("halbstündiger"), "halbstund" );
	deepEqual( Stem("halbtagsjob"), "halbtagsjob" );
	deepEqual( Stem("halbtot"), "halbtot" );
	deepEqual( Stem("halbtotes"), "halbtot" );
	deepEqual( Stem("halbträumender"), "halbtraum" );
	deepEqual( Stem("halbvermoderte"), "halbvermodert" );
	deepEqual( Stem("halbvollendeten"), "halbvollendet" );
	deepEqual( Stem("halbwegs"), "halbweg" );
	deepEqual( Stem("halbwüchsige"), "halbwuchs" );
	deepEqual( Stem("halden"), "hald" );
	deepEqual( Stem("half"), "half" );
	deepEqual( Stem("halfen"), "half" );
	deepEqual( Stem("hälfte"), "halft" );
	deepEqual( Stem("hall"), "hall" );
	deepEqual( Stem("halle"), "hall" );
	deepEqual( Stem("hallen"), "hall" );
	deepEqual( Stem("halleo"), "halleo" );
	deepEqual( Stem("hallo"), "hallo" );
	deepEqual( Stem("hallunkischen"), "hallunk" );
	deepEqual( Stem("halm"), "halm" );
	deepEqual( Stem("halmen"), "halm" );
	deepEqual( Stem("hals"), "hal" );
	deepEqual( Stem("halsband"), "halsband" );
	deepEqual( Stem("halse"), "hals" );
	deepEqual( Stem("hälse"), "hals" );
	deepEqual( Stem("halskette"), "halskett" );
	deepEqual( Stem("halskragen"), "halskrag" );
	deepEqual( Stem("halstuch"), "halstuch" );
	deepEqual( Stem("halstüchelchen"), "halstuchelch" );
	deepEqual( Stem("halt"), "halt" );
	deepEqual( Stem("hält"), "halt" );
	deepEqual( Stem("haltbare"), "haltbar" );
	deepEqual( Stem("haltbaren"), "haltbar" );
	deepEqual( Stem("halte"), "halt" );
	deepEqual( Stem("halten"), "halt" );
	deepEqual( Stem("haltend"), "haltend" );
	deepEqual( Stem("haltenden"), "haltend" );
	deepEqual( Stem("haltet"), "haltet" );
	deepEqual( Stem("haltlosen"), "haltlos" );
	deepEqual( Stem("haltrufen"), "haltruf" );
	deepEqual( Stem("haltrufer"), "haltruf" );
	deepEqual( Stem("hältst"), "halt" );
	deepEqual( Stem("haltung"), "haltung" );
	deepEqual( Stem("halunkische"), "halunk" );
	deepEqual( Stem("ham"), "ham" );
	deepEqual( Stem("hamburg"), "hamburg" );
	deepEqual( Stem("hamburger"), "hamburg" );
	deepEqual( Stem("hämisch"), "hamisch" );
	deepEqual( Stem("hamlet"), "hamlet" );
	deepEqual( Stem("hammelbraten"), "hammelbrat" );
	deepEqual( Stem("hammelkeule"), "hammelkeul" );
	deepEqual( Stem("hammer"), "hamm" );
	deepEqual( Stem("hämmern"), "hamm" );
	deepEqual( Stem("hämmerte"), "hammert" );
	deepEqual( Stem("hämmerten"), "hammert" );
	deepEqual( Stem("hammerwerk"), "hammerwerk" );
	deepEqual( Stem("hampelhänschen"), "hampelhansch" );
	deepEqual( Stem("hampelmann"), "hampelmann" );
	deepEqual( Stem("hampelmänner"), "hampelmann" );
	deepEqual( Stem("hampelmännern"), "hampelmann" );
	deepEqual( Stem("hand"), "hand" );
	deepEqual( Stem("handbewegung"), "handbeweg" );
	deepEqual( Stem("handbibel"), "handbibel" );
	deepEqual( Stem("handbuch"), "handbuch" );
	deepEqual( Stem("händchen"), "handch" );
	deepEqual( Stem("hände"), "hand" );
	deepEqual( Stem("händeklatschen"), "handeklatsch" );
	deepEqual( Stem("handel"), "handel" );
	deepEqual( Stem("händel"), "handel" );
	deepEqual( Stem("händelführer"), "handelfuhr" );
	deepEqual( Stem("handeln"), "handeln" );
	deepEqual( Stem("händeln"), "handeln" );
	deepEqual( Stem("handelnde"), "handelnd" );
	deepEqual( Stem("händels"), "handel" );
	deepEqual( Stem("handelsabkommen"), "handelsabkomm" );
	deepEqual( Stem("handelsanfang"), "handelsanfang" );
	deepEqual( Stem("handelserwerb"), "handelserwerb" );
	deepEqual( Stem("handelsfreunden"), "handelsfreund" );
	deepEqual( Stem("handelsgeschäfte"), "handelsgeschaft" );
	deepEqual( Stem("handelsgeschäften"), "handelsgeschaft" );
	deepEqual( Stem("handelskrisen"), "handelskris" );
	deepEqual( Stem("handelsleute"), "handelsleut" );
	deepEqual( Stem("handelsstadt"), "handelsstadt" );
	deepEqual( Stem("handelsvertretungen"), "handelsvertret" );
	deepEqual( Stem("handelt"), "handelt" );
	deepEqual( Stem("handelte"), "handelt" );
	deepEqual( Stem("händen"), "hand" );
	deepEqual( Stem("händereibend"), "handereib" );
	deepEqual( Stem("handfeste"), "handf" );
	deepEqual( Stem("handfester"), "handf" );
	deepEqual( Stem("handfestes"), "handf" );
	deepEqual( Stem("handgelenken"), "handgelenk" );
	deepEqual( Stem("handgreiflichen"), "handgreif" );
	deepEqual( Stem("handgriffe"), "handgriff" );
	deepEqual( Stem("handgrosses"), "handgross" );
	deepEqual( Stem("handhabe"), "handhab" );
	deepEqual( Stem("handhaben"), "handhab" );
	deepEqual( Stem("handhabte"), "handhabt" );
	deepEqual( Stem("handhabten"), "handhabt" );
	deepEqual( Stem("handkarren"), "handkarr" );
	deepEqual( Stem("handkuss"), "handkuss" );
	deepEqual( Stem("handkuß"), "handkuss" );
	deepEqual( Stem("handle"), "handl" );
	deepEqual( Stem("händler"), "handl" );
	deepEqual( Stem("händlerin"), "handlerin" );
	deepEqual( Stem("handlich"), "handlich" );
	deepEqual( Stem("handlichen"), "handlich" );
	deepEqual( Stem("handlichkeit"), "handlich" );
	deepEqual( Stem("handlung"), "handlung" );
	deepEqual( Stem("handlungen"), "handlung" );
	deepEqual( Stem("handlungsart"), "handlungsart" );
	deepEqual( Stem("handlungsschwanger"), "handlungsschwang" );
	deepEqual( Stem("handlungsschwangerer"), "handlungsschwang" );
	deepEqual( Stem("handlungsstarke"), "handlungsstark" );
	deepEqual( Stem("handlungsweise"), "handlungsweis" );
	deepEqual( Stem("handreibungen"), "handreib" );
	deepEqual( Stem("handreichung"), "handreich" );
	deepEqual( Stem("handschrift"), "handschrift" );
	deepEqual( Stem("handschuh"), "handschuh" );
	deepEqual( Stem("handschuhe"), "handschuh" );
	deepEqual( Stem("handschuhen"), "handschuh" );
	deepEqual( Stem("handstreich"), "handstreich" );
	deepEqual( Stem("handstreiche"), "handstreich" );
	deepEqual( Stem("handtäschchen"), "handtaschch" );
	deepEqual( Stem("handtasche"), "handtasch" );
	deepEqual( Stem("handumdrehen"), "handumdreh" );
	deepEqual( Stem("handvoll"), "handvoll" );
	deepEqual( Stem("handwerk"), "handwerk" );
	deepEqual( Stem("handwerksbursch"), "handwerksbursch" );
	deepEqual( Stem("handwerksburschen"), "handwerksbursch" );
	deepEqual( Stem("handwerksgesell"), "handwerksgesell" );
	deepEqual( Stem("handwerksgesellen"), "handwerksgesell" );
	deepEqual( Stem("handzwehle"), "handzwehl" );
	deepEqual( Stem("hanfschnüren"), "hanfschnur" );
	deepEqual( Stem("hang"), "hang" );
	deepEqual( Stem("hange"), "hang" );
	deepEqual( Stem("hänge"), "hang" );
	deepEqual( Stem("hangen"), "hang" );
	deepEqual( Stem("hängen"), "hang" );
	deepEqual( Stem("hängend"), "hangend" );
	deepEqual( Stem("hängenden"), "hangend" );
	deepEqual( Stem("hängengeblieben"), "hangengeblieb" );
	deepEqual( Stem("hanges"), "hang" );
	deepEqual( Stem("hängt"), "hangt" );
	deepEqual( Stem("hängte"), "hangt" );
	deepEqual( Stem("hängten"), "hangt" );
	deepEqual( Stem("hannibal"), "hannibal" );
	deepEqual( Stem("hans"), "han" );
	deepEqual( Stem("hänse"), "hans" );
	deepEqual( Stem("hansnarren"), "hansnarr" );
	deepEqual( Stem("hantierte"), "hantiert" );
	deepEqual( Stem("hantierung"), "hantier" );
	deepEqual( Stem("hantierungen"), "hantier" );
	deepEqual( Stem("hapert"), "hapert" );
	deepEqual( Stem("hapertes"), "hapert" );
	deepEqual( Stem("happening"), "happening" );
	deepEqual( Stem("happs"), "happs" );
	deepEqual( Stem("happy"), "happy" );
	deepEqual( Stem("harald"), "harald" );
	deepEqual( Stem("harbst"), "harb" );
	deepEqual( Stem("häretische"), "haret" );
	deepEqual( Stem("harfe"), "harf" );
	deepEqual( Stem("harfen"), "harf" );
	deepEqual( Stem("harfenspieler"), "harfenspiel" );
	deepEqual( Stem("harfentöne"), "harfenton" );
	deepEqual( Stem("harkenstiel"), "harkenstiel" );
	deepEqual( Stem("harmlos"), "harmlos" );
	deepEqual( Stem("harmlose"), "harmlos" );
	deepEqual( Stem("harmlosen"), "harmlos" );
	deepEqual( Stem("harmloser"), "harmlos" );
	deepEqual( Stem("harmlosigkeit"), "harmlos" );
	deepEqual( Stem("harmlosigkeiten"), "harmlos" );
	deepEqual( Stem("harmonie"), "harmoni" );
	deepEqual( Stem("harmonien"), "harmoni" );
	deepEqual( Stem("harmonikaförmigen"), "harmonikaform" );
	deepEqual( Stem("harmonisch"), "harmon" );
	deepEqual( Stem("harmonische"), "harmon" );
	deepEqual( Stem("harmonists"), "harmonist" );
	deepEqual( Stem("härmte"), "harmt" );
	deepEqual( Stem("harnisch"), "harnisch" );
	deepEqual( Stem("harnischreste"), "harnischr" );
	deepEqual( Stem("harren"), "harr" );
	deepEqual( Stem("harrend"), "harrend" );
	deepEqual( Stem("harrten"), "harrt" );
	deepEqual( Stem("hart"), "hart" );
	deepEqual( Stem("harte"), "hart" );
	deepEqual( Stem("härte"), "hart" );
	deepEqual( Stem("hartem"), "hart" );
	deepEqual( Stem("harten"), "hart" );
	deepEqual( Stem("harter"), "hart" );
	deepEqual( Stem("härter"), "hart" );
	deepEqual( Stem("härtere"), "hart" );
	deepEqual( Stem("härteres"), "hart" );
	deepEqual( Stem("hartes"), "hart" );
	deepEqual( Stem("härteste"), "hart" );
	deepEqual( Stem("hartherzige"), "hartherz" );
	deepEqual( Stem("hartherzigem"), "hartherz" );
	deepEqual( Stem("hartherzigen"), "hartherz" );
	deepEqual( Stem("hartherzigkeiten"), "hartherz" );
	deepEqual( Stem("hartmann"), "hartmann" );
	deepEqual( Stem("hartnäckig"), "hartnack" );
	deepEqual( Stem("hartnäckige"), "hartnack" );
	deepEqual( Stem("hartnäckigen"), "hartnack" );
	deepEqual( Stem("hartnäckiger"), "hartnack" );
	deepEqual( Stem("hartnäckigeren"), "hartnack" );
	deepEqual( Stem("hartnäckigkeit"), "hartnack" );
	deepEqual( Stem("hartnäckigste"), "hartnack" );
	deepEqual( Stem("hartwerden"), "hartwerd" );
	deepEqual( Stem("harz"), "harz" );
	deepEqual( Stem("hasan"), "hasan" );
	deepEqual( Stem("hasardspiel"), "hasardspiel" );
	deepEqual( Stem("haschen"), "hasch" );
	deepEqual( Stem("häschen"), "hasch" );
	deepEqual( Stem("haschte"), "hascht" );
	deepEqual( Stem("haselanten"), "haselant" );
	deepEqual( Stem("haselnussstauden"), "haselnussstaud" );
	deepEqual( Stem("haselwanter"), "haselwant" );
	deepEqual( Stem("hasen"), "has" );
	deepEqual( Stem("haserl"), "haserl" );
	deepEqual( Stem("häslein"), "haslein" );
	deepEqual( Stem("haslers"), "hasl" );
	deepEqual( Stem("haspelte"), "haspelt" );
	deepEqual( Stem("hass"), "hass" );
	deepEqual( Stem("haß"), "hass" );
	deepEqual( Stem("hasse"), "hass" );
	deepEqual( Stem("hassen"), "hass" );
	deepEqual( Stem("hasser"), "hass" );
	deepEqual( Stem("haßerfüllten"), "hasserfullt" );
	deepEqual( Stem("hasses"), "hass" );
	deepEqual( Stem("hässiges"), "hassig" );
	deepEqual( Stem("hässlich"), "hasslich" );
	deepEqual( Stem("häßlich"), "hasslich" );
	deepEqual( Stem("hässliche"), "hasslich" );
	deepEqual( Stem("häßliche"), "hasslich" );
	deepEqual( Stem("hässlichen"), "hasslich" );
	deepEqual( Stem("häßlichen"), "hasslich" );
	deepEqual( Stem("hässlicheres"), "hasslich" );
	deepEqual( Stem("häßlicheres"), "hasslich" );
	deepEqual( Stem("hässliches"), "hasslich" );
	deepEqual( Stem("häßliches"), "hasslich" );
	deepEqual( Stem("hässlichsten"), "hasslich" );
	deepEqual( Stem("hasst"), "hasst" );
	deepEqual( Stem("haßt"), "hasst" );
	deepEqual( Stem("hasste"), "hasst" );
	deepEqual( Stem("haßte"), "hasst" );
	deepEqual( Stem("hast"), "hast" );
	deepEqual( Stem("hasterer"), "hast" );
	deepEqual( Stem("hastig"), "hastig" );
	deepEqual( Stem("hastige"), "hastig" );
	deepEqual( Stem("hastigen"), "hastig" );
	deepEqual( Stem("hat"), "hat" );
	deepEqual( Stem("hatr"), "hatr" );
	deepEqual( Stem("hats"), "hat" );
	deepEqual( Stem("hätschelte"), "hatschelt" );
	deepEqual( Stem("hatschen"), "hatsch" );
	deepEqual( Stem("hatt"), "hatt" );
	deepEqual( Stem("hätt"), "hatt" );
	deepEqual( Stem("hatte"), "hatt" );
	deepEqual( Stem("hätte"), "hatt" );
	deepEqual( Stem("hatten"), "hatt" );
	deepEqual( Stem("hätten"), "hatt" );
	deepEqual( Stem("hättens"), "hatt" );
	deepEqual( Stem("hattest"), "hatt" );
	deepEqual( Stem("hättest"), "hatt" );
	deepEqual( Stem("hättet"), "hattet" );
	deepEqual( Stem("hau"), "hau" );
	deepEqual( Stem("haube"), "haub" );
	deepEqual( Stem("hauben"), "haub" );
	deepEqual( Stem("hauch"), "hauch" );
	deepEqual( Stem("hauchen"), "hauch" );
	deepEqual( Stem("hauchte"), "haucht" );
	deepEqual( Stem("hauchten"), "haucht" );
	deepEqual( Stem("hauen"), "hau" );
	deepEqual( Stem("häufchen"), "haufch" );
	deepEqual( Stem("haufe"), "hauf" );
	deepEqual( Stem("haufen"), "hauf" );
	deepEqual( Stem("häufen"), "hauf" );
	deepEqual( Stem("haufenweise"), "haufenweis" );
	deepEqual( Stem("häufig"), "haufig" );
	deepEqual( Stem("häufige"), "haufig" );
	deepEqual( Stem("häufiger"), "haufig" );
	deepEqual( Stem("häuflein"), "hauflein" );
	deepEqual( Stem("häuft"), "hauft" );
	deepEqual( Stem("haupt"), "haupt" );
	deepEqual( Stem("hauptaufgabe"), "hauptaufgab" );
	deepEqual( Stem("hauptbeschäftigung"), "hauptbeschaft" );
	deepEqual( Stem("hauptbestandteil"), "hauptbestandteil" );
	deepEqual( Stem("hauptbürde"), "hauptburd" );
	deepEqual( Stem("hauptchristen"), "hauptchrist" );
	deepEqual( Stem("haupte"), "haupt" );
	deepEqual( Stem("haupteingang"), "haupteingang" );
	deepEqual( Stem("häupten"), "haupt" );
	deepEqual( Stem("häupter"), "haupt" );
	deepEqual( Stem("häuptern"), "haupt" );
	deepEqual( Stem("hauptes"), "haupt" );
	deepEqual( Stem("hauptgattungen"), "hauptgatt" );
	deepEqual( Stem("hauptgebäude"), "hauptgebaud" );
	deepEqual( Stem("hauptgegenstände"), "hauptgegenstand" );
	deepEqual( Stem("hauptliebhaberei"), "hauptliebhaberei" );
	deepEqual( Stem("häuptling"), "hauptling" );
	deepEqual( Stem("häuptlingen"), "hauptling" );
	deepEqual( Stem("hauptmann"), "hauptmann" );
	deepEqual( Stem("hauptmittel"), "hauptmittel" );
	deepEqual( Stem("hauptort"), "hauptort" );
	deepEqual( Stem("hauptperson"), "hauptperson" );
	deepEqual( Stem("hauptpunkte"), "hauptpunkt" );
	deepEqual( Stem("hauptpunkten"), "hauptpunkt" );
	deepEqual( Stem("hauptquartier"), "hauptquarti" );
	deepEqual( Stem("hauptredaktor"), "hauptredaktor" );
	deepEqual( Stem("hauptsache"), "hauptsach" );
	deepEqual( Stem("hauptsachen"), "hauptsach" );
	deepEqual( Stem("hauptsächlich"), "hauptsach" );
	deepEqual( Stem("hauptsächlichstes"), "hauptsach" );
	deepEqual( Stem("hauptschmuckes"), "hauptschmuck" );
	deepEqual( Stem("hauptsitzung"), "hauptsitz" );
	deepEqual( Stem("hauptspass"), "hauptspass" );
	deepEqual( Stem("hauptstadt"), "hauptstadt" );
	deepEqual( Stem("hauptstrasse"), "hauptstrass" );
	deepEqual( Stem("hauptstück"), "hauptstuck" );
	deepEqual( Stem("hauptstücke"), "hauptstuck" );
	deepEqual( Stem("haupttafel"), "haupttafel" );
	deepEqual( Stem("haupttätigkeit"), "haupttat" );
	deepEqual( Stem("haupttreppe"), "haupttrepp" );
	deepEqual( Stem("hauptursache"), "hauptursach" );
	deepEqual( Stem("hauptveränderung"), "hauptverander" );
	deepEqual( Stem("hauptverkehrsstrasse"), "hauptverkehrsstrass" );
	deepEqual( Stem("hauptwahlen"), "hauptwahl" );
	deepEqual( Stem("hauptwechsel"), "hauptwechsel" );
	deepEqual( Stem("hauptweg"), "hauptweg" );
	deepEqual( Stem("hauptwert"), "hauptwert" );
	deepEqual( Stem("hauptziel"), "hauptziel" );
	deepEqual( Stem("hauptzierde"), "hauptzierd" );
	deepEqual( Stem("hauptzweck"), "hauptzweck" );
	deepEqual( Stem("haus"), "haus" );
	deepEqual( Stem("hausapotheke"), "hausapothek" );
	deepEqual( Stem("hausbackenes"), "hausback" );
	deepEqual( Stem("hausbau"), "hausbau" );
	deepEqual( Stem("hausbesetzer"), "hausbesetz" );
	deepEqual( Stem("häuschen"), "hausch" );
	deepEqual( Stem("hausdurchsuchungen"), "hausdurchsuch" );
	deepEqual( Stem("hause"), "haus" );
	deepEqual( Stem("hausecke"), "hauseck" );
	deepEqual( Stem("hausehre"), "hausehr" );
	deepEqual( Stem("hausen"), "haus" );
	deepEqual( Stem("häuser"), "haus" );
	deepEqual( Stem("häusermauer"), "hausermau" );
	deepEqual( Stem("häusermauern"), "hausermau" );
	deepEqual( Stem("häusern"), "haus" );
	deepEqual( Stem("hauses"), "haus" );
	deepEqual( Stem("hausflur"), "hausflur" );
	deepEqual( Stem("hausfrau"), "hausfrau" );
	deepEqual( Stem("hausfreund"), "hausfreund" );
	deepEqual( Stem("hausgebrauch"), "hausgebrauch" );
	deepEqual( Stem("hausgeister"), "hausgeist" );
	deepEqual( Stem("hausgenossin"), "hausgenossin" );
	deepEqual( Stem("hausglocke"), "hausglock" );
	deepEqual( Stem("haushalte"), "haushalt" );
	deepEqual( Stem("hausherr"), "hausherr" );
	deepEqual( Stem("hausknecht"), "hausknecht" );
	deepEqual( Stem("hausknechte"), "hausknecht" );
	deepEqual( Stem("häusl"), "hausl" );
	deepEqual( Stem("häuslich"), "hauslich" );
	deepEqual( Stem("häusliche"), "hauslich" );
	deepEqual( Stem("häuslichen"), "hauslich" );
	deepEqual( Stem("hausmütterlich"), "hausmutt" );
	deepEqual( Stem("hausrat"), "hausrat" );
	deepEqual( Stem("hausschlüssel"), "hausschlussel" );
	deepEqual( Stem("hausschwelle"), "hausschwell" );
	deepEqual( Stem("hausstande"), "hausstand" );
	deepEqual( Stem("hauste"), "haust" );
	deepEqual( Stem("haustierchen"), "haustierch" );
	deepEqual( Stem("haustracht"), "haustracht" );
	deepEqual( Stem("haustür"), "haustur" );
	deepEqual( Stem("haustüre"), "haustur" );
	deepEqual( Stem("haustüren"), "haustur" );
	deepEqual( Stem("hausvater"), "hausvat" );
	deepEqual( Stem("hauswesen"), "hauswes" );
	deepEqual( Stem("haut"), "haut" );
	deepEqual( Stem("häutchen"), "hautch" );
	deepEqual( Stem("häute"), "haut" );
	deepEqual( Stem("hautfalte"), "hautfalt" );
	deepEqual( Stem("hautfarbe"), "hautfarb" );
	deepEqual( Stem("häutige"), "hautig" );
	deepEqual( Stem("hautnah"), "hautnah" );
	deepEqual( Stem("hazim"), "hazim" );
	deepEqual( Stem("hazims"), "hazim" );
	deepEqual( Stem("hc"), "hc" );
	deepEqual( Stem("hebe"), "heb" );
	deepEqual( Stem("heben"), "heb" );
	deepEqual( Stem("hebend"), "hebend" );
	deepEqual( Stem("hebet"), "hebet" );
	deepEqual( Stem("hebopfer"), "hebopf" );
	deepEqual( Stem("hebr"), "hebr" );
	deepEqual( Stem("hebräer"), "hebra" );
	deepEqual( Stem("hebräerinnen"), "hebraerinn" );
	deepEqual( Stem("hebräisch"), "hebraisch" );
	deepEqual( Stem("hebräische"), "hebraisch" );
	deepEqual( Stem("hebräischen"), "hebraisch" );
	deepEqual( Stem("hebt"), "hebt" );
	deepEqual( Stem("hecht"), "hecht" );
	deepEqual( Stem("hechtbauche"), "hechtbauch" );
	deepEqual( Stem("hechte"), "hecht" );
	deepEqual( Stem("hechtes"), "hecht" );
	deepEqual( Stem("hechtseiten"), "hechtseit" );
	deepEqual( Stem("hecken"), "heck" );
	deepEqual( Stem("heer"), "heer" );
	deepEqual( Stem("heere"), "heer" );
	deepEqual( Stem("heeren"), "heer" );
	deepEqual( Stem("heeres"), "heer" );
	deepEqual( Stem("heerhaufen"), "heerhauf" );
	deepEqual( Stem("heerlager"), "heerlag" );
	deepEqual( Stem("hefe"), "hef" );
	deepEqual( Stem("heft"), "heft" );
	deepEqual( Stem("heften"), "heft" );
	deepEqual( Stem("heftete"), "heftet" );
	deepEqual( Stem("heftig"), "heftig" );
	deepEqual( Stem("heftige"), "heftig" );
	deepEqual( Stem("heftigem"), "heftig" );
	deepEqual( Stem("heftigen"), "heftig" );
	deepEqual( Stem("heftiger"), "heftig" );
	deepEqual( Stem("heftiges"), "heftig" );
	deepEqual( Stem("heftigkeit"), "heftig" );
	deepEqual( Stem("heftigste"), "heftig" );
	deepEqual( Stem("heftigsten"), "heftig" );
	deepEqual( Stem("hege"), "heg" );
	deepEqual( Stem("hegen"), "heg" );
	deepEqual( Stem("hegt"), "hegt" );
	deepEqual( Stem("hegte"), "hegt" );
	deepEqual( Stem("hegten"), "hegt" );
	deepEqual( Stem("hehr"), "hehr" );
	deepEqual( Stem("hei"), "hei" );
	deepEqual( Stem("heiden"), "heid" );
	deepEqual( Stem("heidengeld"), "heidengeld" );
	deepEqual( Stem("heidi"), "heidi" );
	deepEqual( Stem("heidnischen"), "heidnisch" );
	deepEqual( Stem("heiducken"), "heiduck" );
	deepEqual( Stem("heil"), "heil" );
	deepEqual( Stem("heiland"), "heiland" );
	deepEqual( Stem("heilbar"), "heilbar" );
	deepEqual( Stem("heile"), "heil" );
	deepEqual( Stem("heilig"), "heilig" );
	deepEqual( Stem("heilige"), "heilig" );
	deepEqual( Stem("heiligem"), "heilig" );
	deepEqual( Stem("heiligen"), "heilig" );
	deepEqual( Stem("heiligenschein"), "heiligenschein" );
	deepEqual( Stem("heiliger"), "heilig" );
	deepEqual( Stem("heiliges"), "heilig" );
	deepEqual( Stem("heiligkeit"), "heilig" );
	deepEqual( Stem("heiligste"), "heilig" );
	deepEqual( Stem("heiligsten"), "heilig" );
	deepEqual( Stem("heiligte"), "heiligt" );
	deepEqual( Stem("heiligtum"), "heiligtum" );
	deepEqual( Stem("heiligtümer"), "heiligtum" );
	deepEqual( Stem("heiligung"), "heilig" );
	deepEqual( Stem("heiligungen"), "heilig" );
	deepEqual( Stem("heillosen"), "heillos" );
	deepEqual( Stem("heils"), "heil" );
	deepEqual( Stem("heilsamer"), "heilsam" );
	deepEqual( Stem("heilsamkeit"), "heilsam" );
	deepEqual( Stem("heilstoll"), "heilstoll" );
	deepEqual( Stem("heilt"), "heilt" );
	deepEqual( Stem("heilte"), "heilt" );
	deepEqual( Stem("heilung"), "heilung" );
	deepEqual( Stem("heim"), "heim" );
	deepEqual( Stem("heimat"), "heimat" );
	deepEqual( Stem("heimatdorf"), "heimatdorf" );
	deepEqual( Stem("heimatkunde"), "heimatkund" );
	deepEqual( Stem("heimatlich"), "heimat" );
	deepEqual( Stem("heimatlichen"), "heimat" );
	deepEqual( Stem("heimatlosen"), "heimatlos" );
	deepEqual( Stem("heimatschein"), "heimatschein" );
	deepEqual( Stem("heimatsrecht"), "heimatsrecht" );
	deepEqual( Stem("heimattal"), "heimattal" );
	deepEqual( Stem("heimgalopp"), "heimgalopp" );
	deepEqual( Stem("heimgebracht"), "heimgebracht" );
	deepEqual( Stem("heimgekehrt"), "heimgekehrt" );
	deepEqual( Stem("heimgekommen"), "heimgekomm" );
	deepEqual( Stem("heimgeschickt"), "heimgeschickt" );
	deepEqual( Stem("heimgeschickten"), "heimgeschickt" );
	deepEqual( Stem("heimgesucht"), "heimgesucht" );
	deepEqual( Stem("heimisch"), "heimisch" );
	deepEqual( Stem("heimischen"), "heimisch" );
	deepEqual( Stem("heimkam"), "heimkam" );
	deepEqual( Stem("heimkehr"), "heimkehr" );
	deepEqual( Stem("heimkommen"), "heimkomm" );
	deepEqual( Stem("heimkommt"), "heimkommt" );
	deepEqual( Stem("heimlaufen"), "heimlauf" );
	deepEqual( Stem("heimlich"), "heimlich" );
	deepEqual( Stem("heimliche"), "heimlich" );
	deepEqual( Stem("heimlichem"), "heimlich" );
	deepEqual( Stem("heimlichen"), "heimlich" );
	deepEqual( Stem("heimlicher"), "heimlich" );
	deepEqual( Stem("heimlicherweise"), "heimlicherweis" );
	deepEqual( Stem("heimliches"), "heimlich" );
	deepEqual( Stem("heimschicken"), "heimschick" );
	deepEqual( Stem("heimsuchen"), "heimsuch" );
	deepEqual( Stem("heimsuchung"), "heimsuch" );
	deepEqual( Stem("heimtückisch"), "heimtuck" );
	deepEqual( Stem("heimtückische"), "heimtuck" );
	deepEqual( Stem("heimwärts"), "heimwart" );
	deepEqual( Stem("heimweg"), "heimweg" );
	deepEqual( Stem("heimwege"), "heimweg" );
	deepEqual( Stem("heimwegs"), "heimweg" );
	deepEqual( Stem("heimweh"), "heimweh" );
	deepEqual( Stem("heimzog"), "heimzog" );
	deepEqual( Stem("heimzukehren"), "heimzukehr" );
	deepEqual( Stem("heimzusuchen"), "heimzusuch" );
	deepEqual( Stem("heimzuweisen"), "heimzuweis" );
	deepEqual( Stem("heinrich"), "heinrich" );
	deepEqual( Stem("heinrichs"), "heinrich" );
	deepEqual( Stem("heinze"), "heinz" );
	deepEqual( Stem("heinzer"), "heinz" );
	deepEqual( Stem("heirat"), "heirat" );
	deepEqual( Stem("heiraten"), "heirat" );
	deepEqual( Stem("heiratest"), "heirat" );
	deepEqual( Stem("heiratet"), "heiratet" );
	deepEqual( Stem("heiratete"), "heiratet" );
	deepEqual( Stem("heiratsabsichten"), "heiratsabsicht" );
	deepEqual( Stem("heiratsfrage"), "heiratsfrag" );
	deepEqual( Stem("heiratsgut"), "heiratsgut" );
	deepEqual( Stem("heiratslustigen"), "heiratslust" );
	deepEqual( Stem("heiratssachen"), "heiratssach" );
	deepEqual( Stem("heiret"), "heiret" );
	deepEqual( Stem("heiss"), "heiss" );
	deepEqual( Stem("heiß"), "heiss" );
	deepEqual( Stem("heisse"), "heiss" );
	deepEqual( Stem("heiße"), "heiss" );
	deepEqual( Stem("heissen"), "heiss" );
	deepEqual( Stem("heißen"), "heiss" );
	deepEqual( Stem("heisser"), "heiss" );
	deepEqual( Stem("heisses"), "heiss" );
	deepEqual( Stem("heisset"), "heisset" );
	deepEqual( Stem("heißet"), "heisset" );
	deepEqual( Stem("heisshunger"), "heisshung" );
	deepEqual( Stem("heissmachen"), "heissmach" );
	deepEqual( Stem("heisst"), "heisst" );
	deepEqual( Stem("heißt"), "heisst" );
	deepEqual( Stem("heiter"), "heit" );
	deepEqual( Stem("heitere"), "heit" );
	deepEqual( Stem("heiteren"), "heit" );
	deepEqual( Stem("heiterer"), "heit" );
	deepEqual( Stem("heiterkeit"), "heiter" );
	deepEqual( Stem("heiterm"), "heiterm" );
	deepEqual( Stem("heizen"), "heiz" );
	deepEqual( Stem("heizet"), "heizet" );
	deepEqual( Stem("heks"), "hek" );
	deepEqual( Stem("hektik"), "hektik" );
	deepEqual( Stem("hektor"), "hektor" );
	deepEqual( Stem("helas"), "helas" );
	deepEqual( Stem("helbart"), "helbart" );
	deepEqual( Stem("helbarte"), "helbart" );
	deepEqual( Stem("held"), "held" );
	deepEqual( Stem("helden"), "held" );
	deepEqual( Stem("heldenhaftes"), "heldenhaft" );
	deepEqual( Stem("heldenwerk"), "heldenwerk" );
	deepEqual( Stem("helena"), "helena" );
	deepEqual( Stem("helfe"), "helf" );
	deepEqual( Stem("helfen"), "helf" );
	deepEqual( Stem("helfet"), "helfet" );
	deepEqual( Stem("hell"), "hell" );
	deepEqual( Stem("hellauf"), "hellauf" );
	deepEqual( Stem("helldunklen"), "helldunkl" );
	deepEqual( Stem("helle"), "hell" );
	deepEqual( Stem("hellem"), "hell" );
	deepEqual( Stem("hellen"), "hell" );
	deepEqual( Stem("heller"), "hell" );
	deepEqual( Stem("hellerleuchteten"), "hellerleuchtet" );
	deepEqual( Stem("hellerlichten"), "hellerlicht" );
	deepEqual( Stem("helles"), "hell" );
	deepEqual( Stem("hellgrüner"), "hellgrun" );
	deepEqual( Stem("hellichten"), "hellicht" );
	deepEqual( Stem("hellsehend"), "hellseh" );
	deepEqual( Stem("hellsehenden"), "hellseh" );
	deepEqual( Stem("hellste"), "hell" );
	deepEqual( Stem("helmspitze"), "helmspitz" );
	deepEqual( Stem("helmzier"), "helmzi" );
	deepEqual( Stem("helvetas"), "helvetas" );
	deepEqual( Stem("hemd"), "hemd" );
	deepEqual( Stem("hemdärmel"), "hemdarmel" );
	deepEqual( Stem("hemdärmeln"), "hemdarmeln" );
	deepEqual( Stem("hemdärmliche"), "hemdarm" );
	deepEqual( Stem("hemdchen"), "hemdch" );
	deepEqual( Stem("hemde"), "hemd" );
	deepEqual( Stem("hemdenmätze"), "hemdenmatz" );
	deepEqual( Stem("hemdenmätzen"), "hemdenmatz" );
	deepEqual( Stem("hemdkragen"), "hemdkrag" );
	deepEqual( Stem("hemdzipfelchen"), "hemdzipfelch" );
	deepEqual( Stem("hemmen"), "hemm" );
	deepEqual( Stem("hendeln"), "hendeln" );
	deepEqual( Stem("henkel"), "henkel" );
	deepEqual( Stem("henken"), "henk" );
	deepEqual( Stem("henker"), "henk" );
	deepEqual( Stem("henkers"), "henk" );
	deepEqual( Stem("henne"), "henn" );
	deepEqual( Stem("hennensteigen"), "hennensteig" );
	deepEqual( Stem("henrici"), "henrici" );
	deepEqual( Stem("henriettental"), "henriettental" );
	deepEqual( Stem("hep"), "hep" );
	deepEqual( Stem("her"), "her" );
	deepEqual( Stem("herab"), "herab" );
	deepEqual( Stem("herabfallen"), "herabfall" );
	deepEqual( Stem("herabfliesst"), "herabfliesst" );
	deepEqual( Stem("herabfließt"), "herabfliesst" );
	deepEqual( Stem("herabgebracht"), "herabgebracht" );
	deepEqual( Stem("herabgekommen"), "herabgekomm" );
	deepEqual( Stem("herabgekommener"), "herabgekomm" );
	deepEqual( Stem("herabgelassen"), "herabgelass" );
	deepEqual( Stem("herabgeworfen"), "herabgeworf" );
	deepEqual( Stem("herabhing"), "herabhing" );
	deepEqual( Stem("herabkam"), "herabkam" );
	deepEqual( Stem("herabkommen"), "herabkomm" );
	deepEqual( Stem("herabkommt"), "herabkommt" );
	deepEqual( Stem("herablassen"), "herablass" );
	deepEqual( Stem("herablassend"), "herablass" );
	deepEqual( Stem("herablässt"), "herablasst" );
	deepEqual( Stem("herabläßt"), "herablasst" );
	deepEqual( Stem("herabredete"), "herabredet" );
	deepEqual( Stem("herabregnen"), "herabregn" );
	deepEqual( Stem("herabsehend"), "herabseh" );
	deepEqual( Stem("herabsetzt"), "herabsetzt" );
	deepEqual( Stem("herabsinken"), "herabsink" );
	deepEqual( Stem("herabsinkt"), "herabsinkt" );
	deepEqual( Stem("herabstimmen"), "herabstimm" );
	deepEqual( Stem("herabzusetzen"), "herabzusetz" );
	deepEqual( Stem("herabzustimmen"), "herabzustimm" );
	deepEqual( Stem("heran"), "heran" );
	deepEqual( Stem("heranbrach"), "heranbrach" );
	deepEqual( Stem("heranbrüllte"), "heranbrullt" );
	deepEqual( Stem("herandrängte"), "herandrangt" );
	deepEqual( Stem("heranfuhren"), "heranfuhr" );
	deepEqual( Stem("herangebraust"), "herangebraust" );
	deepEqual( Stem("herangeflogen"), "herangeflog" );
	deepEqual( Stem("herangeholt"), "herangeholt" );
	deepEqual( Stem("herangekommen"), "herangekomm" );
	deepEqual( Stem("herangesaust"), "herangesaust" );
	deepEqual( Stem("herangeschwänzelt"), "herangeschwanzelt" );
	deepEqual( Stem("herangetanzt"), "herangetanzt" );
	deepEqual( Stem("herangetreten"), "herangetret" );
	deepEqual( Stem("herangewachsen"), "herangewachs" );
	deepEqual( Stem("herankommen"), "herankomm" );
	deepEqual( Stem("heranmachten"), "heranmacht" );
	deepEqual( Stem("herannahen"), "herannah" );
	deepEqual( Stem("heranrollte"), "heranrollt" );
	deepEqual( Stem("heranrutschte"), "heranrutscht" );
	deepEqual( Stem("heranschwoll"), "heranschwoll" );
	deepEqual( Stem("herantobenden"), "herantob" );
	deepEqual( Stem("herantritt"), "herantritt" );
	deepEqual( Stem("heranziehen"), "heranzieh" );
	deepEqual( Stem("heranzubilden"), "heranzubild" );
	deepEqual( Stem("heranzukommen"), "heranzukomm" );
	deepEqual( Stem("heranzuwehen"), "heranzuweh" );
	deepEqual( Stem("herauf"), "herauf" );
	deepEqual( Stem("heraufbeförderte"), "heraufbefordert" );
	deepEqual( Stem("heraufbeschworen"), "heraufbeschwor" );
	deepEqual( Stem("heraufbringen"), "heraufbring" );
	deepEqual( Stem("heraufführen"), "herauffuhr" );
	deepEqual( Stem("heraufgefahren"), "heraufgefahr" );
	deepEqual( Stem("heraufgewundenen"), "heraufgewund" );
	deepEqual( Stem("heraufkäme"), "heraufkam" );
	deepEqual( Stem("heraufkamen"), "heraufkam" );
	deepEqual( Stem("heraufkommen"), "heraufkomm" );
	deepEqual( Stem("heraufsteigen"), "heraufsteig" );
	deepEqual( Stem("heraufsteigt"), "heraufsteigt" );
	deepEqual( Stem("heraufziehen"), "heraufzieh" );
	deepEqual( Stem("heraufzuholen"), "heraufzuhol" );
	deepEqual( Stem("heraufzusäuseln"), "heraufzusauseln" );
	deepEqual( Stem("heraus"), "heraus" );
	deepEqual( Stem("herausbrachte"), "herausbracht" );
	deepEqual( Stem("herausbringen"), "herausbring" );
	deepEqual( Stem("herausbrüllten"), "herausbrullt" );
	deepEqual( Stem("herausfischen"), "herausf" );
	deepEqual( Stem("herausfliegen"), "herausflieg" );
	deepEqual( Stem("herausforderung"), "herausforder" );
	deepEqual( Stem("herausführen"), "herausfuhr" );
	deepEqual( Stem("herausführt"), "herausfuhrt" );
	deepEqual( Stem("herausgeben"), "herausgeb" );
	deepEqual( Stem("herausgefordert"), "herausgefordert" );
	deepEqual( Stem("herausgeführt"), "herausgefuhrt" );
	deepEqual( Stem("herausgegeben"), "herausgegeb" );
	deepEqual( Stem("herausgegriffen"), "herausgegriff" );
	deepEqual( Stem("herausgehen"), "herausgeh" );
	deepEqual( Stem("herausgeholt"), "herausgeholt" );
	deepEqual( Stem("herausgekommen"), "herausgekomm" );
	deepEqual( Stem("herausgelassen"), "herausgelass" );
	deepEqual( Stem("herausgelesen"), "herausgeles" );
	deepEqual( Stem("herausgenommen"), "herausgenomm" );
	deepEqual( Stem("herausgereicht"), "herausgereicht" );
	deepEqual( Stem("herausgeschnitten"), "herausgeschnitt" );
	deepEqual( Stem("herausgestellt"), "herausgestellt" );
	deepEqual( Stem("herausgezaubert"), "herausgezaubert" );
	deepEqual( Stem("herausgezogen"), "herausgezog" );
	deepEqual( Stem("herausgezupft"), "herausgezupft" );
	deepEqual( Stem("herausguckten"), "herausguckt" );
	deepEqual( Stem("heraushilft"), "heraushilft" );
	deepEqual( Stem("herausholen"), "heraushol" );
	deepEqual( Stem("herauskam"), "herauskam" );
	deepEqual( Stem("herauskamen"), "herauskam" );
	deepEqual( Stem("herausklauben"), "herausklaub" );
	deepEqual( Stem("herauskommen"), "herauskomm" );
	deepEqual( Stem("herauskommt"), "herauskommt" );
	deepEqual( Stem("herauskriegen"), "herauskrieg" );
	deepEqual( Stem("herauslügens"), "herauslug" );
	deepEqual( Stem("herausmachen"), "herausmach" );
	deepEqual( Stem("herausnehmen"), "herausnehm" );
	deepEqual( Stem("herausnimmt"), "herausnimmt" );
	deepEqual( Stem("herausplatzt"), "herausplatzt" );
	deepEqual( Stem("herauspurzelten"), "herauspurzelt" );
	deepEqual( Stem("herausreisst"), "herausreisst" );
	deepEqual( Stem("herausreißt"), "herausreisst" );
	deepEqual( Stem("herausschneiden"), "herausschneid" );
	deepEqual( Stem("herausschrieb"), "herausschrieb" );
	deepEqual( Stem("heraussen"), "herauss" );
	deepEqual( Stem("herausspritzte"), "herausspritzt" );
	deepEqual( Stem("heraussteigt"), "heraussteigt" );
	deepEqual( Stem("herausstellen"), "herausstell" );
	deepEqual( Stem("herausstellt"), "herausstellt" );
	deepEqual( Stem("herausstiess"), "herausstiess" );
	deepEqual( Stem("heraustauchte"), "heraustaucht" );
	deepEqual( Stem("heraustraten"), "heraustrat" );
	deepEqual( Stem("heraustritt"), "heraustritt" );
	deepEqual( Stem("herausziehen"), "herauszieh" );
	deepEqual( Stem("herauszubringen"), "herauszubring" );
	deepEqual( Stem("herauszufordern"), "herauszuford" );
	deepEqual( Stem("herauszufragen"), "herauszufrag" );
	deepEqual( Stem("herauszuführen"), "herauszufuhr" );
	deepEqual( Stem("herauszugehen"), "herauszugeh" );
	deepEqual( Stem("herauszukommen"), "herauszukomm" );
	deepEqual( Stem("herauszuschneiden"), "herauszuschneid" );
	deepEqual( Stem("herauszuschreiben"), "herauszuschreib" );
	deepEqual( Stem("herauszustreichen"), "herauszustreich" );
	deepEqual( Stem("herauszwingen"), "herauszwing" );
	deepEqual( Stem("herbe"), "herb" );
	deepEqual( Stem("herbei"), "herbei" );
	deepEqual( Stem("herbeibringen"), "herbeibring" );
	deepEqual( Stem("herbeieilenden"), "herbeieil" );
	deepEqual( Stem("herbeiführe"), "herbeifuhr" );
	deepEqual( Stem("herbeiführt"), "herbeifuhrt" );
	deepEqual( Stem("herbeiführte"), "herbeifuhrt" );
	deepEqual( Stem("herbeiführung"), "herbeifuhr" );
	deepEqual( Stem("herbeigebracht"), "herbeigebracht" );
	deepEqual( Stem("herbeigeführt"), "herbeigefuhrt" );
	deepEqual( Stem("herbeigeführte"), "herbeigefuhrt" );
	deepEqual( Stem("herbeigekommen"), "herbeigekomm" );
	deepEqual( Stem("herbeigelaufen"), "herbeigelauf" );
	deepEqual( Stem("herbeigetragen"), "herbeigetrag" );
	deepEqual( Stem("herbeigezogen"), "herbeigezog" );
	deepEqual( Stem("herbeikam"), "herbeikam" );
	deepEqual( Stem("herbeikamen"), "herbeikam" );
	deepEqual( Stem("herbeikommen"), "herbeikomm" );
	deepEqual( Stem("herbeikommt"), "herbeikommt" );
	deepEqual( Stem("herbeiströmen"), "herbeistrom" );
	deepEqual( Stem("herbeizuführen"), "herbeizufuhr" );
	deepEqual( Stem("herbeizuholen"), "herbeizuhol" );
	deepEqual( Stem("herbeizuschaffen"), "herbeizuschaff" );
	deepEqual( Stem("herberge"), "herberg" );
	deepEqual( Stem("herbergskammern"), "herbergskamm" );
	deepEqual( Stem("herbeste"), "herb" );
	deepEqual( Stem("herbringen"), "herbring" );
	deepEqual( Stem("herbst"), "herb" );
	deepEqual( Stem("herbstabendhimmel"), "herbstabendhimmel" );
	deepEqual( Stem("herbstabends"), "herbstab" );
	deepEqual( Stem("herbsteigen"), "herbsteig" );
	deepEqual( Stem("herbstes"), "herb" );
	deepEqual( Stem("herbstmorgens"), "herbstmorg" );
	deepEqual( Stem("herbstnachmittag"), "herbstnachmittag" );
	deepEqual( Stem("herbstnebel"), "herbstnebel" );
	deepEqual( Stem("herbstsonnenschein"), "herbstsonnenschein" );
	deepEqual( Stem("herbstwetter"), "herbstwett" );
	deepEqual( Stem("herchen"), "herch" );
	deepEqual( Stem("herd"), "herd" );
	deepEqual( Stem("herde"), "herd" );
	deepEqual( Stem("herden"), "herd" );
	deepEqual( Stem("herdfeuer"), "herdfeu" );
	deepEqual( Stem("herein"), "herein" );
	deepEqual( Stem("hereinbräche"), "hereinbrach" );
	deepEqual( Stem("hereinbrächen"), "hereinbrach" );
	deepEqual( Stem("hereinbrechen"), "hereinbrech" );
	deepEqual( Stem("hereinbricht"), "hereinbricht" );
	deepEqual( Stem("hereingebrachte"), "hereingebracht" );
	deepEqual( Stem("hereingebrachtes"), "hereingebracht" );
	deepEqual( Stem("hereingepeitscht"), "hereingepeitscht" );
	deepEqual( Stem("hereingesendet"), "hereingesendet" );
	deepEqual( Stem("hereingetölpelt"), "hereingetolpelt" );
	deepEqual( Stem("hereingeworfenes"), "hereingeworf" );
	deepEqual( Stem("hereinguckte"), "hereinguckt" );
	deepEqual( Stem("hereinkam"), "hereinkam" );
	deepEqual( Stem("hereinkommen"), "hereinkomm" );
	deepEqual( Stem("hereinragte"), "hereinragt" );
	deepEqual( Stem("hereinwatschelte"), "hereinwatschelt" );
	deepEqual( Stem("hereinzukommen"), "hereinzukomm" );
	deepEqual( Stem("heresibus"), "heresibus" );
	deepEqual( Stem("herfahren"), "herfahr" );
	deepEqual( Stem("herflatterte"), "herflattert" );
	deepEqual( Stem("herflatterten"), "herflattert" );
	deepEqual( Stem("herg"), "herg" );
	deepEqual( Stem("hergeben"), "hergeb" );
	deepEqual( Stem("hergefahren"), "hergefahr" );
	deepEqual( Stem("hergeführt"), "hergefuhrt" );
	deepEqual( Stem("hergegeben"), "hergegeb" );
	deepEqual( Stem("hergehen"), "hergeh" );
	deepEqual( Stem("hergehend"), "hergeh" );
	deepEqual( Stem("hergehst"), "hergeh" );
	deepEqual( Stem("hergeht"), "hergeht" );
	deepEqual( Stem("hergekommen"), "hergekomm" );
	deepEqual( Stem("hergeleitet"), "hergeleitet" );
	deepEqual( Stem("hergeleuchtet"), "hergeleuchtet" );
	deepEqual( Stem("hergemacht"), "hergemacht" );
	deepEqual( Stem("hergenommen"), "hergenomm" );
	deepEqual( Stem("hergerufen"), "hergeruf" );
	deepEqual( Stem("hergesagt"), "hergesagt" );
	deepEqual( Stem("hergesandt"), "hergesandt" );
	deepEqual( Stem("hergestellt"), "hergestellt" );
	deepEqual( Stem("hergestellten"), "hergestellt" );
	deepEqual( Stem("hergetrieben"), "hergetrieb" );
	deepEqual( Stem("hergewandert"), "hergewandert" );
	deepEqual( Stem("hergezogen"), "hergezog" );
	deepEqual( Stem("herging"), "herging" );
	deepEqual( Stem("hering"), "hering" );
	deepEqual( Stem("heringe"), "hering" );
	deepEqual( Stem("heringen"), "hering" );
	deepEqual( Stem("herjagte"), "herjagt" );
	deepEqual( Stem("herkam"), "herkam" );
	deepEqual( Stem("herkämen"), "herkam" );
	deepEqual( Stem("herkomme"), "herkomm" );
	deepEqual( Stem("herkommen"), "herkomm" );
	deepEqual( Stem("herkommenden"), "herkomm" );
	deepEqual( Stem("herkommt"), "herkommt" );
	deepEqual( Stem("herkunft"), "herkunft" );
	deepEqual( Stem("hermann"), "hermann" );
	deepEqual( Stem("hermarschiert"), "hermarschiert" );
	deepEqual( Stem("hermsdorf"), "hermsdorf" );
	deepEqual( Stem("hernach"), "hernach" );
	deepEqual( Stem("hernahm"), "hernahm" );
	deepEqual( Stem("hernehmen"), "hernehm" );
	deepEqual( Stem("hernehmt"), "hernehmt" );
	deepEqual( Stem("hernieder"), "hernied" );
	deepEqual( Stem("herniederregneten"), "herniederregnet" );
	deepEqual( Stem("herniedersahen"), "herniedersah" );
	deepEqual( Stem("herniedersank"), "herniedersank" );
	deepEqual( Stem("hernimmt"), "hernimmt" );
	deepEqual( Stem("heroisch"), "heroisch" );
	deepEqual( Stem("heroischer"), "heroisch" );
	deepEqual( Stem("heroismus"), "heroismus" );
	deepEqual( Stem("heros"), "heros" );
	deepEqual( Stem("herr"), "herr" );
	deepEqual( Stem("herreden"), "herred" );
	deepEqual( Stem("herren"), "herr" );
	deepEqual( Stem("herrengesellschaften"), "herrengesellschaft" );
	deepEqual( Stem("herrenhaus"), "herrenhaus" );
	deepEqual( Stem("herrenlos"), "herrenlos" );
	deepEqual( Stem("herrenlose"), "herrenlos" );
	deepEqual( Stem("herrenlosen"), "herrenlos" );
	deepEqual( Stem("herrenrointhütte"), "herrenrointhutt" );
	deepEqual( Stem("herrentafel"), "herrentafel" );
	deepEqual( Stem("herrentross"), "herrentross" );
	deepEqual( Stem("herrentroß"), "herrentross" );
	deepEqual( Stem("herrgott"), "herrgott" );
	deepEqual( Stem("herrgottswinkel"), "herrgottswinkel" );
	deepEqual( Stem("herrin"), "herrin" );
	deepEqual( Stem("herrisch"), "herrisch" );
	deepEqual( Stem("herrlich"), "herrlich" );
	deepEqual( Stem("herrliche"), "herrlich" );
	deepEqual( Stem("herrlichem"), "herrlich" );
	deepEqual( Stem("herrlichen"), "herrlich" );
	deepEqual( Stem("herrlicher"), "herrlich" );
	deepEqual( Stem("herrliches"), "herrlich" );
	deepEqual( Stem("herrlichkeit"), "herrlich" );
	deepEqual( Stem("herrlichkeiten"), "herrlich" );
	deepEqual( Stem("herrlichste"), "herrlich" );
	deepEqual( Stem("herrlichsten"), "herrlich" );
	deepEqual( Stem("herrn"), "herrn" );
	deepEqual( Stem("herrsch"), "herrsch" );
	deepEqual( Stem("herrschaft"), "herrschaft" );
	deepEqual( Stem("herrschaften"), "herrschaft" );
	deepEqual( Stem("herrschaftlichen"), "herrschaft" );
	deepEqual( Stem("herrschaftlicher"), "herrschaft" );
	deepEqual( Stem("herrsche"), "herrsch" );
	deepEqual( Stem("herrschen"), "herrsch" );
	deepEqual( Stem("herrschend"), "herrschend" );
	deepEqual( Stem("herrschende"), "herrschend" );
	deepEqual( Stem("herrschenden"), "herrschend" );
	deepEqual( Stem("herrschens"), "herrsch" );
	deepEqual( Stem("herrscherinnen"), "herrscherinn" );
	deepEqual( Stem("herrschest"), "herrsch" );
	deepEqual( Stem("herrschet"), "herrschet" );
	deepEqual( Stem("herrscht"), "herrscht" );
	deepEqual( Stem("herrschte"), "herrscht" );
	deepEqual( Stem("herrschten"), "herrscht" );
	deepEqual( Stem("herrühre"), "herruhr" );
	deepEqual( Stem("herrührt"), "herruhrt" );
	deepEqual( Stem("herrührten"), "herruhrt" );
	deepEqual( Stem("herschritt"), "herschritt" );
	deepEqual( Stem("herstammend"), "herstamm" );
	deepEqual( Stem("herstammende"), "herstamm" );
	deepEqual( Stem("herstammenden"), "herstamm" );
	deepEqual( Stem("herstammt"), "herstammt" );
	deepEqual( Stem("herstammte"), "herstammt" );
	deepEqual( Stem("herstammten"), "herstammt" );
	deepEqual( Stem("herstelle"), "herstell" );
	deepEqual( Stem("herstellen"), "herstell" );
	deepEqual( Stem("hersteller"), "herstell" );
	deepEqual( Stem("herstellung"), "herstell" );
	deepEqual( Stem("herüber"), "herub" );
	deepEqual( Stem("herübergeworfen"), "herubergeworf" );
	deepEqual( Stem("herüberkommen"), "heruberkomm" );
	deepEqual( Stem("herüberzukommen"), "heruberzukomm" );
	deepEqual( Stem("herum"), "herum" );
	deepEqual( Stem("herumbiegend"), "herumbieg" );
	deepEqual( Stem("herumfliegt"), "herumfliegt" );
	deepEqual( Stem("herumflog"), "herumflog" );
	deepEqual( Stem("herumführte"), "herumfuhrt" );
	deepEqual( Stem("herumgeflogen"), "herumgeflog" );
	deepEqual( Stem("herumgefuchtelt"), "herumgefuchtelt" );
	deepEqual( Stem("herumgehen"), "herumgeh" );
	deepEqual( Stem("herumgeschlagen"), "herumgeschlag" );
	deepEqual( Stem("herumgeschlüpft"), "herumgeschlupft" );
	deepEqual( Stem("herumgeschnitten"), "herumgeschnitt" );
	deepEqual( Stem("herumgesprochen"), "herumgesproch" );
	deepEqual( Stem("herumgetrieben"), "herumgetrieb" );
	deepEqual( Stem("herumging"), "herumging" );
	deepEqual( Stem("herumhing"), "herumhing" );
	deepEqual( Stem("herumhocken"), "herumhock" );
	deepEqual( Stem("herumhuschten"), "herumhuscht" );
	deepEqual( Stem("herumkollerte"), "herumkollert" );
	deepEqual( Stem("herumlagen"), "herumlag" );
	deepEqual( Stem("herumlaufe"), "herumlauf" );
	deepEqual( Stem("herumlaufen"), "herumlauf" );
	deepEqual( Stem("herumlief"), "herumlief" );
	deepEqual( Stem("herumliefe"), "herumlief" );
	deepEqual( Stem("herumliegen"), "herumlieg" );
	deepEqual( Stem("herumlungern"), "heruml" );
	deepEqual( Stem("herumlungerns"), "herumlungern" );
	deepEqual( Stem("herumplätscherte"), "herumplatschert" );
	deepEqual( Stem("herumrutschten"), "herumrutscht" );
	deepEqual( Stem("herumsäete"), "herumsaet" );
	deepEqual( Stem("herumscharrten"), "herumscharrt" );
	deepEqual( Stem("herumschleichen"), "herumschleich" );
	deepEqual( Stem("herumschleppte"), "herumschleppt" );
	deepEqual( Stem("herumschlichen"), "herumsch" );
	deepEqual( Stem("herumschlug"), "herumschlug" );
	deepEqual( Stem("herumschlugen"), "herumschlug" );
	deepEqual( Stem("herumschweben"), "herumschweb" );
	deepEqual( Stem("herumschweifen"), "herumschweif" );
	deepEqual( Stem("herumschwenken"), "herumschwenk" );
	deepEqual( Stem("herumspazieren"), "herumspazi" );
	deepEqual( Stem("herumsprang"), "herumsprang" );
	deepEqual( Stem("herumsprangen"), "herumsprang" );
	deepEqual( Stem("herumstand"), "herumstand" );
	deepEqual( Stem("herumstanden"), "herumstand" );
	deepEqual( Stem("herumständern"), "herumstand" );
	deepEqual( Stem("herumstocherte"), "herumstochert" );
	deepEqual( Stem("herumstreicht"), "herumstreicht" );
	deepEqual( Stem("herumstreifende"), "herumstreif" );
	deepEqual( Stem("herumstreifte"), "herumstreift" );
	deepEqual( Stem("herumstreite"), "herumstreit" );
	deepEqual( Stem("herumstrich"), "herumstrich" );
	deepEqual( Stem("herumtänzeln"), "herumtanzeln" );
	deepEqual( Stem("herumtappt"), "herumtappt" );
	deepEqual( Stem("herumtragen"), "herumtrag" );
	deepEqual( Stem("herumtreibe"), "herumtreib" );
	deepEqual( Stem("herumtreiben"), "herumtreib" );
	deepEqual( Stem("herumtreiber"), "herumtreib" );
	deepEqual( Stem("herumtrug"), "herumtrug" );
	deepEqual( Stem("herumtrüge"), "herumtrug" );
	deepEqual( Stem("herumtummelte"), "herumtummelt" );
	deepEqual( Stem("herumwälzte"), "herumwalzt" );
	deepEqual( Stem("herumwandle"), "herumwandl" );
	deepEqual( Stem("herumwarf"), "herumwarf" );
	deepEqual( Stem("herumzerrt"), "herumzerrt" );
	deepEqual( Stem("herumzerrte"), "herumzerrt" );
	deepEqual( Stem("herumziehende"), "herumzieh" );
	deepEqual( Stem("herumzuärgern"), "herumzuarg" );
	deepEqual( Stem("herumzufuchteln"), "herumzufuchteln" );
	deepEqual( Stem("herumzukreuzen"), "herumzukreuz" );
	deepEqual( Stem("herumzurasen"), "herumzuras" );
	deepEqual( Stem("herumzuschweifen"), "herumzuschweif" );
	deepEqual( Stem("herumzustreichen"), "herumzustreich" );
	deepEqual( Stem("herumzusummen"), "herumzusumm" );
	deepEqual( Stem("herumzutummeln"), "herumzutummeln" );
	deepEqual( Stem("herumzuturnen"), "herumzuturn" );
	deepEqual( Stem("herumzuziehen"), "herumzuzieh" );
	deepEqual( Stem("herunter"), "herunt" );
	deepEqual( Stem("herunterblickte"), "herunterblickt" );
	deepEqual( Stem("herunterfinden"), "herunterfind" );
	deepEqual( Stem("herunterflog"), "herunterflog" );
	deepEqual( Stem("heruntergebracht"), "heruntergebracht" );
	deepEqual( Stem("heruntergebrannt"), "heruntergebrannt" );
	deepEqual( Stem("heruntergekommen"), "heruntergekomm" );
	deepEqual( Stem("heruntergekommene"), "heruntergekomm" );
	deepEqual( Stem("herunterholen"), "herunterhol" );
	deepEqual( Stem("herunterkam"), "herunterkam" );
	deepEqual( Stem("herunterkommen"), "herunterkomm" );
	deepEqual( Stem("herunternehmen"), "herunternehm" );
	deepEqual( Stem("herunterpurzeln"), "herunterpurzeln" );
	deepEqual( Stem("herunterpurzelten"), "herunterpurzelt" );
	deepEqual( Stem("herunterstreifte"), "herunterstreift" );
	deepEqual( Stem("herunterwarf"), "herunterwarf" );
	deepEqual( Stem("herunterwehte"), "herunterweht" );
	deepEqual( Stem("herunterwickelte"), "herunterwickelt" );
	deepEqual( Stem("herunterziehen"), "herunterzieh" );
	deepEqual( Stem("herunterzuholen"), "herunterzuhol" );
	deepEqual( Stem("herunterzuschlagen"), "herunterzuschlag" );
	deepEqual( Stem("herunterzustossen"), "herunterzustoss" );
	deepEqual( Stem("hervor"), "hervor" );
	deepEqual( Stem("hervorblitzte"), "hervorblitzt" );
	deepEqual( Stem("hervorbrach"), "hervorbrach" );
	deepEqual( Stem("hervorbrachte"), "hervorbracht" );
	deepEqual( Stem("hervorbrechen"), "hervorbrech" );
	deepEqual( Stem("hervorbrechenden"), "hervorbrech" );
	deepEqual( Stem("hervorbricht"), "hervorbricht" );
	deepEqual( Stem("hervorbringe"), "hervorbring" );
	deepEqual( Stem("hervorbringen"), "hervorbring" );
	deepEqual( Stem("hervorbringt"), "hervorbringt" );
	deepEqual( Stem("hervorbringung"), "hervorbring" );
	deepEqual( Stem("hervorfliessen"), "hervorfliess" );
	deepEqual( Stem("hervorfließen"), "hervorfliess" );
	deepEqual( Stem("hervorgebracht"), "hervorgebracht" );
	deepEqual( Stem("hervorgebrochen"), "hervorgebroch" );
	deepEqual( Stem("hervorgegangen"), "hervorgegang" );
	deepEqual( Stem("hervorgegangene"), "hervorgegang" );
	deepEqual( Stem("hervorgehen"), "hervorgeh" );
	deepEqual( Stem("hervorgehende"), "hervorgeh" );
	deepEqual( Stem("hervorgehenden"), "hervorgeh" );
	deepEqual( Stem("hervorgeholt"), "hervorgeholt" );
	deepEqual( Stem("hervorgeht"), "hervorgeht" );
	deepEqual( Stem("hervorgerufen"), "hervorgeruf" );
	deepEqual( Stem("hervorgetan"), "hervorgetan" );
	deepEqual( Stem("hervorgetreten"), "hervorgetret" );
	deepEqual( Stem("hervorgewandelt"), "hervorgewandelt" );
	deepEqual( Stem("hervorgezogen"), "hervorgezog" );
	deepEqual( Stem("hervorgingen"), "hervorging" );
	deepEqual( Stem("hervorheben"), "hervorheb" );
	deepEqual( Stem("hervorholen"), "hervorhol" );
	deepEqual( Stem("hervorholten"), "hervorholt" );
	deepEqual( Stem("hervorkehrte"), "hervorkehrt" );
	deepEqual( Stem("hervorkommt"), "hervorkommt" );
	deepEqual( Stem("hervorkriechen"), "hervorkriech" );
	deepEqual( Stem("hervorleuchtet"), "hervorleuchtet" );
	deepEqual( Stem("hervorleuchtete"), "hervorleuchtet" );
	deepEqual( Stem("hervornahm"), "hervornahm" );
	deepEqual( Stem("hervorquillt"), "hervorquillt" );
	deepEqual( Stem("hervorragender"), "hervorrag" );
	deepEqual( Stem("hervorragten"), "hervorragt" );
	deepEqual( Stem("hervorsahen"), "hervorsah" );
	deepEqual( Stem("hervorschielte"), "hervorschielt" );
	deepEqual( Stem("hervorschimmern"), "hervorschimm" );
	deepEqual( Stem("hervorschimmerten"), "hervorschimmert" );
	deepEqual( Stem("hervorsprang"), "hervorsprang" );
	deepEqual( Stem("hervorsprossen"), "hervorspross" );
	deepEqual( Stem("hervorsprudeln"), "hervorsprudeln" );
	deepEqual( Stem("hervorstechend"), "hervorstech" );
	deepEqual( Stem("hervorstrahlende"), "hervorstrahl" );
	deepEqual( Stem("hervorstrahlt"), "hervorstrahlt" );
	deepEqual( Stem("hervorstrahlte"), "hervorstrahlt" );
	deepEqual( Stem("hervorsuchte"), "hervorsucht" );
	deepEqual( Stem("hervortaten"), "hervortat" );
	deepEqual( Stem("hervortrat"), "hervortrat" );
	deepEqual( Stem("hervortraten"), "hervortrat" );
	deepEqual( Stem("hervortreten"), "hervortret" );
	deepEqual( Stem("hervortritt"), "hervortritt" );
	deepEqual( Stem("hervortrittst"), "hervortritt" );
	deepEqual( Stem("hervortut"), "hervortut" );
	deepEqual( Stem("hervorwallenden"), "hervorwall" );
	deepEqual( Stem("hervorwimmeln"), "hervorwimmeln" );
	deepEqual( Stem("hervorziehen"), "hervorzieh" );
	deepEqual( Stem("hervorzog"), "hervorzog" );
	deepEqual( Stem("hervorzubringen"), "hervorzubring" );
	deepEqual( Stem("hervorzuheben"), "hervorzuheb" );
	deepEqual( Stem("hervorzuholen"), "hervorzuhol" );
	deepEqual( Stem("hervorzutreten"), "hervorzutret" );
	deepEqual( Stem("herwachsen"), "herwachs" );
	deepEqual( Stem("herweg"), "herweg" );
	deepEqual( Stem("herz"), "herz" );
	deepEqual( Stem("herze"), "herz" );
	deepEqual( Stem("herzeleid"), "herzeleid" );
	deepEqual( Stem("herzen"), "herz" );
	deepEqual( Stem("herzens"), "herz" );
	deepEqual( Stem("herzensfröhlichkeit"), "herzensfroh" );
	deepEqual( Stem("herzensgründen"), "herzensgrund" );
	deepEqual( Stem("herzensgutes"), "herzensgut" );
	deepEqual( Stem("herzenshärtigkeit"), "herzenshart" );
	deepEqual( Stem("herzensqual"), "herzensqual" );
	deepEqual( Stem("herzensunterwerfung"), "herzensunterwerf" );
	deepEqual( Stem("herzensweh"), "herzensweh" );
	deepEqual( Stem("herzerl"), "herzerl" );
	deepEqual( Stem("herzhafte"), "herzhaft" );
	deepEqual( Stem("herziehen"), "herzieh" );
	deepEqual( Stem("herziehens"), "herzieh" );
	deepEqual( Stem("herziges"), "herzig" );
	deepEqual( Stem("herzigs"), "herzig" );
	deepEqual( Stem("herzklopfen"), "herzklopf" );
	deepEqual( Stem("herzlich"), "herzlich" );
	deepEqual( Stem("herzliche"), "herzlich" );
	deepEqual( Stem("herzlichen"), "herzlich" );
	deepEqual( Stem("herzlos"), "herzlos" );
	deepEqual( Stem("herzloser"), "herzlos" );
	deepEqual( Stem("herzmanndi"), "herzmanndi" );
	deepEqual( Stem("herzmannskerl"), "herzmannskerl" );
	deepEqual( Stem("herzmannski"), "herzmannski" );
	deepEqual( Stem("herzmannskis"), "herzmannskis" );
	deepEqual( Stem("herzog"), "herzog" );
	deepEqual( Stem("herzogin"), "herzogin" );
	deepEqual( Stem("herzogs"), "herzog" );
	deepEqual( Stem("herzschlag"), "herzschlag" );
	deepEqual( Stem("herzschlägen"), "herzschlag" );
	deepEqual( Stem("herzu"), "herzu" );
	deepEqual( Stem("herzufallen"), "herzufall" );
	deepEqual( Stem("herzuführen"), "herzufuhr" );
	deepEqual( Stem("herzugeben"), "herzugeb" );
	deepEqual( Stem("herzugebrachten"), "herzugebracht" );
	deepEqual( Stem("herzugeritten"), "herzugeritt" );
	deepEqual( Stem("herzugetragen"), "herzugetrag" );
	deepEqual( Stem("herzunahen"), "herzunah" );
	deepEqual( Stem("herzurühren"), "herzuruhr" );
	deepEqual( Stem("herzuschaffen"), "herzuschaff" );
	deepEqual( Stem("herzustellen"), "herzustell" );
	deepEqual( Stem("herzutragen"), "herzutrag" );
	deepEqual( Stem("herzuträte"), "herzutrat" );
	deepEqual( Stem("herzutreten"), "herzutret" );
	deepEqual( Stem("hes"), "hes" );
	deepEqual( Stem("hesekiel"), "hesekiel" );
	deepEqual( Stem("heteronomie"), "heteronomi" );
	deepEqual( Stem("hethiter"), "hethit" );
	deepEqual( Stem("hettlinger"), "hettling" );
	deepEqual( Stem("hetze"), "hetz" );
	deepEqual( Stem("hetzen"), "hetz" );
	deepEqual( Stem("hetzjagd"), "hetzjagd" );
	deepEqual( Stem("hetzte"), "hetzt" );
	deepEqual( Stem("heu"), "heu" );
	deepEqual( Stem("heuboden"), "heubod" );
	deepEqual( Stem("heuchelei"), "heuchelei" );
	deepEqual( Stem("heucheln"), "heucheln" );
	deepEqual( Stem("heuchelt"), "heuchelt" );
	deepEqual( Stem("heuchler"), "heuchl" );
	deepEqual( Stem("heuchlerischem"), "heuchler" );
	deepEqual( Stem("heugabel"), "heugabel" );
	deepEqual( Stem("heulen"), "heul" );
	deepEqual( Stem("heulend"), "heulend" );
	deepEqual( Stem("heulender"), "heulend" );
	deepEqual( Stem("heulet"), "heulet" );
	deepEqual( Stem("heult"), "heult" );
	deepEqual( Stem("heulte"), "heult" );
	deepEqual( Stem("heulten"), "heult" );
	deepEqual( Stem("heuschiff"), "heuschiff" );
	deepEqual( Stem("heuschrecke"), "heuschreck" );
	deepEqual( Stem("heuschrecken"), "heuschreck" );
	deepEqual( Stem("heuschreckenschwarm"), "heuschreckenschwarm" );
	deepEqual( Stem("heuss"), "heuss" );
	deepEqual( Stem("heustock"), "heustock" );
	deepEqual( Stem("heut"), "heut" );
	deepEqual( Stem("heute"), "heut" );
	deepEqual( Stem("heutige"), "heutig" );
	deepEqual( Stem("heutigen"), "heutig" );
	deepEqual( Stem("heutiges"), "heutig" );
	deepEqual( Stem("heutzutage"), "heutzutag" );
	deepEqual( Stem("heviter"), "hevit" );
	deepEqual( Stem("heviters"), "hevit" );
	deepEqual( Stem("hexe"), "hex" );
	deepEqual( Stem("hexen"), "hex" );
	deepEqual( Stem("hexenküche"), "hexenkuch" );
	deepEqual( Stem("hexenmeister"), "hexenmeist" );
	deepEqual( Stem("hexenmeisters"), "hexenmeist" );
	deepEqual( Stem("hexenwerk"), "hexenwerk" );
	deepEqual( Stem("hexer"), "hex" );
	deepEqual( Stem("hexerei"), "hexerei" );
	deepEqual( Stem("hg"), "hg" );
	deepEqual( Stem("hie"), "hie" );
	deepEqual( Stem("hieb"), "hieb" );
	deepEqual( Stem("hiebe"), "hieb" );
	deepEqual( Stem("hiebei"), "hiebei" );
	deepEqual( Stem("hieber"), "hieb" );
	deepEqual( Stem("hiedurch"), "hiedurch" );
	deepEqual( Stem("hiefür"), "hiefur" );
	deepEqual( Stem("hiegegen"), "hiegeg" );
	deepEqual( Stem("hieher"), "hieh" );
	deepEqual( Stem("hielt"), "hielt" );
	deepEqual( Stem("hielte"), "hielt" );
	deepEqual( Stem("hielten"), "hielt" );
	deepEqual( Stem("hiemit"), "hiemit" );
	deepEqual( Stem("hienach"), "hienach" );
	deepEqual( Stem("hier"), "hier" );
	deepEqual( Stem("hieran"), "hieran" );
	deepEqual( Stem("hierarchie"), "hierarchi" );
	deepEqual( Stem("hierauf"), "hierauf" );
	deepEqual( Stem("hieraus"), "hieraus" );
	deepEqual( Stem("hierbei"), "hierbei" );
	deepEqual( Stem("hierbleiben"), "hierbleib" );
	deepEqual( Stem("hierdurch"), "hierdurch" );
	deepEqual( Stem("hierfür"), "hierfur" );
	deepEqual( Stem("hierher"), "hierh" );
	deepEqual( Stem("hierhergekommen"), "hierhergekomm" );
	deepEqual( Stem("hierherkamen"), "hierherkam" );
	deepEqual( Stem("hierherzukommen"), "hierherzukomm" );
	deepEqual( Stem("hierhin"), "hierhin" );
	deepEqual( Stem("hierin"), "hierin" );
	deepEqual( Stem("hierlassen"), "hierlass" );
	deepEqual( Stem("hiermit"), "hiermit" );
	deepEqual( Stem("hieroglyphen"), "hieroglyph" );
	deepEqual( Stem("hierüber"), "hierub" );
	deepEqual( Stem("hierunter"), "hierunt" );
	deepEqual( Stem("hiervon"), "hiervon" );
	deepEqual( Stem("hierzu"), "hierzu" );
	deepEqual( Stem("hierzubleiben"), "hierzubleib" );
	deepEqual( Stem("hierzulande"), "hierzuland" );
	deepEqual( Stem("hiesigen"), "hiesig" );
	deepEqual( Stem("hiess"), "hiess" );
	deepEqual( Stem("hieß"), "hiess" );
	deepEqual( Stem("hiesse"), "hiess" );
	deepEqual( Stem("hieße"), "hiess" );
	deepEqual( Stem("hiessen"), "hiess" );
	deepEqual( Stem("hießen"), "hiess" );
	deepEqual( Stem("hievon"), "hievon" );
	deepEqual( Stem("hiezu"), "hiezu" );
	deepEqual( Stem("hiifsregisseur"), "hiifsregisseur" );
	deepEqual( Stem("hildegard"), "hildegard" );
	deepEqual( Stem("hildesheim"), "hildesheim" );
	deepEqual( Stem("hilf"), "hilf" );
	deepEqual( Stem("hilfe"), "hilf" );
	deepEqual( Stem("hilflos"), "hilflos" );
	deepEqual( Stem("hilflosigkeit"), "hilflos" );
	deepEqual( Stem("hilfsbereitschaft"), "hilfsbereitschaft" );
	deepEqual( Stem("hilfsbremser"), "hilfsbrems" );
	deepEqual( Stem("hilfskräfte"), "hilfskraft" );
	deepEqual( Stem("hilfsmittel"), "hilfsmittel" );
	deepEqual( Stem("hilfsquellen"), "hilfsquell" );
	deepEqual( Stem("hilfsregisseur"), "hilfsregisseur" );
	deepEqual( Stem("hilfsregisseurs"), "hilfsregisseur" );
	deepEqual( Stem("hilfswerk"), "hilfswerk" );
	deepEqual( Stem("hilfswerke"), "hilfswerk" );
	deepEqual( Stem("hilft"), "hilft" );
	deepEqual( Stem("himmel"), "himmel" );
	deepEqual( Stem("himmelbett"), "himmelbett" );
	deepEqual( Stem("himmelblaue"), "himmelblau" );
	deepEqual( Stem("himmelblauen"), "himmelblau" );
	deepEqual( Stem("himmelblaues"), "himmelblau" );
	deepEqual( Stem("himmelerschütterndem"), "himmelerschutternd" );
	deepEqual( Stem("himmelhoch"), "himmelhoch" );
	deepEqual( Stem("himmelhohe"), "himmelhoh" );
	deepEqual( Stem("himmelhohen"), "himmelhoh" );
	deepEqual( Stem("himmeln"), "himmeln" );
	deepEqual( Stem("himmelreich"), "himmelreich" );
	deepEqual( Stem("himmels"), "himmel" );
	deepEqual( Stem("himmelsbesen"), "himmelsbes" );
	deepEqual( Stem("himmelsbewohnern"), "himmelsbewohn" );
	deepEqual( Stem("himmelschoten"), "himmelschot" );
	deepEqual( Stem("himmelschreiendes"), "himmelschrei" );
	deepEqual( Stem("himmelsfeste"), "himmelsf" );
	deepEqual( Stem("himmelsfürst"), "himmelsfurst" );
	deepEqual( Stem("himmelsgeheimnissen"), "himmelsgeheimnis" );
	deepEqual( Stem("himmelsgestirn"), "himmelsgestirn" );
	deepEqual( Stem("himmelsgrund"), "himmelsgrund" );
	deepEqual( Stem("himmelsheeren"), "himmelshe" );
	deepEqual( Stem("himmelsheim"), "himmelsheim" );
	deepEqual( Stem("himmelshöhen"), "himmelshoh" );
	deepEqual( Stem("himmelskühe"), "himmelskuh" );
	deepEqual( Stem("himmelslicht"), "himmelslicht" );
	deepEqual( Stem("himmelslichtes"), "himmelslicht" );
	deepEqual( Stem("himmelsraketenmässig"), "himmelsraketenmass" );
	deepEqual( Stem("himmelsraum"), "himmelsraum" );
	deepEqual( Stem("himmelsraums"), "himmelsraum" );
	deepEqual( Stem("himmelsrichtungen"), "himmelsricht" );
	deepEqual( Stem("himmelsschön"), "himmelsschon" );
	deepEqual( Stem("himmelssphäre"), "himmelssphar" );
	deepEqual( Stem("himmelsweide"), "himmelsweid" );
	deepEqual( Stem("himmelswiese"), "himmelswies" );
	deepEqual( Stem("himmelszelt"), "himmelszelt" );
	deepEqual( Stem("himmelsziegen"), "himmelszieg" );
	deepEqual( Stem("himmelsziegenhörnchen"), "himmelsziegenhornch" );
	deepEqual( Stem("himmelwärts"), "himmelwart" );
	deepEqual( Stem("himmelweit"), "himmelweit" );
	deepEqual( Stem("himmlisch"), "himmlisch" );
	deepEqual( Stem("himmlische"), "himmlisch" );
	deepEqual( Stem("himmlischem"), "himmlisch" );
	deepEqual( Stem("himmlischen"), "himmlisch" );
	deepEqual( Stem("himmlischer"), "himmlisch" );
	deepEqual( Stem("himmlisches"), "himmlisch" );
	deepEqual( Stem("hin"), "hin" );
	deepEqual( Stem("hinab"), "hinab" );
	deepEqual( Stem("hinabfahren"), "hinabfahr" );
	deepEqual( Stem("hinabfuhr"), "hinabfuhr" );
	deepEqual( Stem("hinabgegangen"), "hinabgegang" );
	deepEqual( Stem("hinabgelassen"), "hinabgelass" );
	deepEqual( Stem("hinabgerissen"), "hinabgeriss" );
	deepEqual( Stem("hinabgesprungen"), "hinabgespr" );
	deepEqual( Stem("hinabgestossen"), "hinabgestoss" );
	deepEqual( Stem("hinabgestoßen"), "hinabgestoss" );
	deepEqual( Stem("hinabgestürzt"), "hinabgesturzt" );
	deepEqual( Stem("hinabgeworfen"), "hinabgeworf" );
	deepEqual( Stem("hinabgingen"), "hinabging" );
	deepEqual( Stem("hinabkommen"), "hinabkomm" );
	deepEqual( Stem("hinablassen"), "hinablass" );
	deepEqual( Stem("hinabsanken"), "hinabsank" );
	deepEqual( Stem("hinabsankst"), "hinabsank" );
	deepEqual( Stem("hinabsausten"), "hinabsaust" );
	deepEqual( Stem("hinabsenkt"), "hinabsenkt" );
	deepEqual( Stem("hinabsinken"), "hinabsink" );
	deepEqual( Stem("hinabspringen"), "hinabspring" );
	deepEqual( Stem("hinabsteigen"), "hinabsteig" );
	deepEqual( Stem("hinabstossen"), "hinabstoss" );
	deepEqual( Stem("hinabstoßen"), "hinabstoss" );
	deepEqual( Stem("hinabtauchte"), "hinabtaucht" );
	deepEqual( Stem("hinabtreibend"), "hinabtreib" );
	deepEqual( Stem("hinabversetzt"), "hinabversetzt" );
	deepEqual( Stem("hinabwerfen"), "hinabwerf" );
	deepEqual( Stem("hinabziehen"), "hinabzieh" );
	deepEqual( Stem("hinabzog"), "hinabzog" );
	deepEqual( Stem("hinabzugehen"), "hinabzugeh" );
	deepEqual( Stem("hinabzusteigen"), "hinabzusteig" );
	deepEqual( Stem("hinabzustürzen"), "hinabzusturz" );
	deepEqual( Stem("hinan"), "hinan" );
	deepEqual( Stem("hinanfuhren"), "hinanfuhr" );
	deepEqual( Stem("hinangeleiten"), "hinangeleit" );
	deepEqual( Stem("hinanstieg"), "hinanstieg" );
	deepEqual( Stem("hinauf"), "hinauf" );
	deepEqual( Stem("hinaufbringen"), "hinaufbring" );
	deepEqual( Stem("hinaufführen"), "hinauffuhr" );
	deepEqual( Stem("hinaufführte"), "hinauffuhrt" );
	deepEqual( Stem("hinauffuhrwerkte"), "hinauffuhrwerkt" );
	deepEqual( Stem("hinaufgefahren"), "hinaufgefahr" );
	deepEqual( Stem("hinaufgehen"), "hinaufgeh" );
	deepEqual( Stem("hinaufgehoben"), "hinaufgehob" );
	deepEqual( Stem("hinaufgeschossen"), "hinaufgeschoss" );
	deepEqual( Stem("hinaufgestiegen"), "hinaufgestieg" );
	deepEqual( Stem("hinaufgestrauchelt"), "hinaufgestrauchelt" );
	deepEqual( Stem("hinaufgetrieben"), "hinaufgetrieb" );
	deepEqual( Stem("hinaufging"), "hinaufging" );
	deepEqual( Stem("hinaufkommen"), "hinaufkomm" );
	deepEqual( Stem("hinauflief"), "hinauflief" );
	deepEqual( Stem("hinaufrufen"), "hinaufruf" );
	deepEqual( Stem("hinaufspähte"), "hinaufspaht" );
	deepEqual( Stem("hinaufsprang"), "hinaufsprang" );
	deepEqual( Stem("hinaufsteigen"), "hinaufsteig" );
	deepEqual( Stem("hinaufstieg"), "hinaufstieg" );
	deepEqual( Stem("hinaufstreckte"), "hinaufstreckt" );
	deepEqual( Stem("hinaufstürmte"), "hinaufsturmt" );
	deepEqual( Stem("hinaufwollte"), "hinaufwollt" );
	deepEqual( Stem("hinaufzuführen"), "hinaufzufuhr" );
	deepEqual( Stem("hinaufzukommen"), "hinaufzukomm" );
	deepEqual( Stem("hinaufzutreiben"), "hinaufzutreib" );
	deepEqual( Stem("hinaus"), "hinaus" );
	deepEqual( Stem("hinausarbeiten"), "hinausarbeit" );
	deepEqual( Stem("hinausbefördert"), "hinausbefordert" );
	deepEqual( Stem("hinausbegleiten"), "hinausbegleit" );
	deepEqual( Stem("hinausfliehen"), "hinausflieh" );
	deepEqual( Stem("hinausg"), "hinausg" );
	deepEqual( Stem("hinausgebauten"), "hinausgebaut" );
	deepEqual( Stem("hinausgeführt"), "hinausgefuhrt" );
	deepEqual( Stem("hinausgegangen"), "hinausgegang" );
	deepEqual( Stem("hinausgehe"), "hinausgeh" );
	deepEqual( Stem("hinausgehen"), "hinausgeh" );
	deepEqual( Stem("hinausgeht"), "hinausgeht" );
	deepEqual( Stem("hinausgeleitet"), "hinausgeleitet" );
	deepEqual( Stem("hinausgerücktes"), "hinausgeruckt" );
	deepEqual( Stem("hinausgeschafft"), "hinausgeschafft" );
	deepEqual( Stem("hinausgeschlichen"), "hinausgesch" );
	deepEqual( Stem("hinausgeschnitten"), "hinausgeschnitt" );
	deepEqual( Stem("hinausgesetzt"), "hinausgesetzt" );
	deepEqual( Stem("hinausgesprengt"), "hinausgesprengt" );
	deepEqual( Stem("hinausgeworfen"), "hinausgeworf" );
	deepEqual( Stem("hinausginge"), "hinausging" );
	deepEqual( Stem("hinausgingen"), "hinausging" );
	deepEqual( Stem("hinauskommen"), "hinauskomm" );
	deepEqual( Stem("hinauskomplementiert"), "hinauskomplementiert" );
	deepEqual( Stem("hinausläuft"), "hinauslauft" );
	deepEqual( Stem("hinaussahen"), "hinaussah" );
	deepEqual( Stem("hinausschallte"), "hinausschallt" );
	deepEqual( Stem("hinausschauen"), "hinausschau" );
	deepEqual( Stem("hinausschaute"), "hinausschaut" );
	deepEqual( Stem("hinausschieben"), "hinausschieb" );
	deepEqual( Stem("hinausschrie"), "hinausschri" );
	deepEqual( Stem("hinausschweift"), "hinausschweift" );
	deepEqual( Stem("hinaussieht"), "hinaussieht" );
	deepEqual( Stem("hinausspringen"), "hinausspring" );
	deepEqual( Stem("hinausspringenden"), "hinausspring" );
	deepEqual( Stem("hinausstossen"), "hinausstoss" );
	deepEqual( Stem("hinausstoßen"), "hinausstoss" );
	deepEqual( Stem("hinaustrat"), "hinaustrat" );
	deepEqual( Stem("hinaustreten"), "hinaustret" );
	deepEqual( Stem("hinaustrollte"), "hinaustrollt" );
	deepEqual( Stem("hinauswandern"), "hinauswand" );
	deepEqual( Stem("hinauswillst"), "hinauswill" );
	deepEqual( Stem("hinauszufliegen"), "hinauszuflieg" );
	deepEqual( Stem("hinauszustossen"), "hinauszustoss" );
	deepEqual( Stem("hinauszustoßen"), "hinauszustoss" );
	deepEqual( Stem("hinauszuziehen"), "hinauszuzieh" );
	deepEqual( Stem("hinbeugte"), "hinbeugt" );
	deepEqual( Stem("hinblicken"), "hinblick" );
	deepEqual( Stem("hinblickte"), "hinblickt" );
	deepEqual( Stem("hindern"), "hind" );
	deepEqual( Stem("hindernis"), "hindernis" );
	deepEqual( Stem("hindernisse"), "hindernis" );
	deepEqual( Stem("hindernisses"), "hindernis" );
	deepEqual( Stem("hindert"), "hindert" );
	deepEqual( Stem("hinderte"), "hindert" );
	deepEqual( Stem("hindin"), "hindin" );
	deepEqual( Stem("hindinnen"), "hindinn" );
	deepEqual( Stem("hindostanische"), "hindostan" );
	deepEqual( Stem("hindu"), "hindu" );
	deepEqual( Stem("hindurch"), "hindurch" );
	deepEqual( Stem("hindurchfliessen"), "hindurchfliess" );
	deepEqual( Stem("hindurchfließen"), "hindurchfliess" );
	deepEqual( Stem("hindurchfliessens"), "hindurchfliess" );
	deepEqual( Stem("hindurchfließens"), "hindurchfliess" );
	deepEqual( Stem("hindurchfliesst"), "hindurchfliesst" );
	deepEqual( Stem("hindurchfließt"), "hindurchfliesst" );
	deepEqual( Stem("hindurchfloss"), "hindurchfloss" );
	deepEqual( Stem("hindurchfloß"), "hindurchfloss" );
	deepEqual( Stem("hindurchführte"), "hindurchfuhrt" );
	deepEqual( Stem("hindurchgegangen"), "hindurchgegang" );
	deepEqual( Stem("hindurchgehende"), "hindurchgeh" );
	deepEqual( Stem("hindurchgeht"), "hindurchgeht" );
	deepEqual( Stem("hindurchgeschlüpft"), "hindurchgeschlupft" );
	deepEqual( Stem("hindurchging"), "hindurchging" );
	deepEqual( Stem("hineilte"), "hineilt" );
	deepEqual( Stem("hinein"), "hinein" );
	deepEqual( Stem("hineinbringen"), "hineinbring" );
	deepEqual( Stem("hineinfahren"), "hineinfahr" );
	deepEqual( Stem("hineinfällt"), "hineinfallt" );
	deepEqual( Stem("hineingebaut"), "hineingebaut" );
	deepEqual( Stem("hineingebracht"), "hineingebracht" );
	deepEqual( Stem("hineingefahren"), "hineingefahr" );
	deepEqual( Stem("hineingegangen"), "hineingegang" );
	deepEqual( Stem("hineingehen"), "hineingeh" );
	deepEqual( Stem("hineingeht"), "hineingeht" );
	deepEqual( Stem("hineingekrochen"), "hineingekroch" );
	deepEqual( Stem("hineingeladen"), "hineingelad" );
	deepEqual( Stem("hineingelegten"), "hineingelegt" );
	deepEqual( Stem("hineingeraten"), "hineingerat" );
	deepEqual( Stem("hineingesehen"), "hineingeseh" );
	deepEqual( Stem("hineingesperrt"), "hineingesperrt" );
	deepEqual( Stem("hineingeworfen"), "hineingeworf" );
	deepEqual( Stem("hineingeworfene"), "hineingeworf" );
	deepEqual( Stem("hineinging"), "hineinging" );
	deepEqual( Stem("hineingrub"), "hineingrub" );
	deepEqual( Stem("hineinkleben"), "hineinkleb" );
	deepEqual( Stem("hineinkomme"), "hineinkomm" );
	deepEqual( Stem("hineinkommen"), "hineinkomm" );
	deepEqual( Stem("hineinladen"), "hineinlad" );
	deepEqual( Stem("hineinlegen"), "hineinleg" );
	deepEqual( Stem("hineinliess"), "hineinliess" );
	deepEqual( Stem("hineinritt"), "hineinritt" );
	deepEqual( Stem("hineinschien"), "hineinschi" );
	deepEqual( Stem("hineinschrie"), "hineinschri" );
	deepEqual( Stem("hineinsprang"), "hineinsprang" );
	deepEqual( Stem("hineinstellte"), "hineinstellt" );
	deepEqual( Stem("hineinstrecken"), "hineinstreck" );
	deepEqual( Stem("hineinträgt"), "hineintragt" );
	deepEqual( Stem("hineintrugen"), "hineintrug" );
	deepEqual( Stem("hineinversetzen"), "hineinversetz" );
	deepEqual( Stem("hineinversetzt"), "hineinversetzt" );
	deepEqual( Stem("hineinwerfen"), "hineinwerf" );
	deepEqual( Stem("hineinwuchs"), "hineinwuch" );
	deepEqual( Stem("hineinzukleben"), "hineinzukleb" );
	deepEqual( Stem("hineinzulassen"), "hineinzulass" );
	deepEqual( Stem("hineinzuschreiten"), "hineinzuschreit" );
	deepEqual( Stem("hineinzusehen"), "hineinzuseh" );
	deepEqual( Stem("hineinzuspringen"), "hineinzuspring" );
	deepEqual( Stem("hineinzuwandeln"), "hineinzuwandeln" );
	deepEqual( Stem("hinfiel"), "hinfiel" );
	deepEqual( Stem("hinfort"), "hinfort" );
	deepEqual( Stem("hinführen"), "hinfuhr" );
	deepEqual( Stem("hing"), "hing" );
	deepEqual( Stem("hingabe"), "hingab" );
	deepEqual( Stem("hingaben"), "hingab" );
	deepEqual( Stem("hingeben"), "hingeb" );
	deepEqual( Stem("hingebettet"), "hingebettet" );
	deepEqual( Stem("hingebung"), "hingeb" );
	deepEqual( Stem("hingebungsvoll"), "hingebungsvoll" );
	deepEqual( Stem("hingeführt"), "hingefuhrt" );
	deepEqual( Stem("hingegangen"), "hingegang" );
	deepEqual( Stem("hingegeben"), "hingegeb" );
	deepEqual( Stem("hingegebenes"), "hingegeb" );
	deepEqual( Stem("hingegen"), "hingeg" );
	deepEqual( Stem("hingehalten"), "hingehalt" );
	deepEqual( Stem("hingehen"), "hingeh" );
	deepEqual( Stem("hingekommen"), "hingekomm" );
	deepEqual( Stem("hingeleiten"), "hingeleit" );
	deepEqual( Stem("hingelenkt"), "hingelenkt" );
	deepEqual( Stem("hingen"), "hing" );
	deepEqual( Stem("hingenommen"), "hingenomm" );
	deepEqual( Stem("hingerissen"), "hingeriss" );
	deepEqual( Stem("hingeschickt"), "hingeschickt" );
	deepEqual( Stem("hingeschieden"), "hingeschied" );
	deepEqual( Stem("hingesehen"), "hingeseh" );
	deepEqual( Stem("hingestellt"), "hingestellt" );
	deepEqual( Stem("hingestreckt"), "hingestreckt" );
	deepEqual( Stem("hingestreut"), "hingestreut" );
	deepEqual( Stem("hingetragen"), "hingetrag" );
	deepEqual( Stem("hingetreten"), "hingetret" );
	deepEqual( Stem("hingewandert"), "hingewandert" );
	deepEqual( Stem("hingewandt"), "hingewandt" );
	deepEqual( Stem("hingewendet"), "hingewendet" );
	deepEqual( Stem("hingewiesen"), "hingewies" );
	deepEqual( Stem("hingeworfen"), "hingeworf" );
	deepEqual( Stem("hinging"), "hinging" );
	deepEqual( Stem("hinglitt"), "hinglitt" );
	deepEqual( Stem("hinhalten"), "hinhalt" );
	deepEqual( Stem("hinhältst"), "hinhalt" );
	deepEqual( Stem("hinirren"), "hinirr" );
	deepEqual( Stem("hinkam"), "hinkam" );
	deepEqual( Stem("hinken"), "hink" );
	deepEqual( Stem("hinkenden"), "hinkend" );
	deepEqual( Stem("hinkendes"), "hinkend" );
	deepEqual( Stem("hinklopft"), "hinklopft" );
	deepEqual( Stem("hinkommen"), "hinkomm" );
	deepEqual( Stem("hinkt"), "hinkt" );
	deepEqual( Stem("hinlänglich"), "hinlang" );
	deepEqual( Stem("hinlängliche"), "hinlang" );
	deepEqual( Stem("hinleg"), "hinleg" );
	deepEqual( Stem("hinlegen"), "hinleg" );
	deepEqual( Stem("hinlief"), "hinlief" );
	deepEqual( Stem("hinnahm"), "hinnahm" );
	deepEqual( Stem("hinnehmen"), "hinnehm" );
	deepEqual( Stem("hinneigen"), "hinneig" );
	deepEqual( Stem("hinneigt"), "hinneigt" );
	deepEqual( Stem("hinneigten"), "hinneigt" );
	deepEqual( Stem("hinnen"), "hinn" );
	deepEqual( Stem("hinrasen"), "hinras" );
	deepEqual( Stem("hinreiche"), "hinreich" );
	deepEqual( Stem("hinreichen"), "hinreich" );
	deepEqual( Stem("hinreichend"), "hinreich" );
	deepEqual( Stem("hinreichende"), "hinreich" );
	deepEqual( Stem("hinreichenden"), "hinreich" );
	deepEqual( Stem("hinreichender"), "hinreich" );
	deepEqual( Stem("hinreichte"), "hinreicht" );
	deepEqual( Stem("hinreissen"), "hinreiss" );
	deepEqual( Stem("hinreißen"), "hinreiss" );
	deepEqual( Stem("hinreissend"), "hinreiss" );
	deepEqual( Stem("hinsah"), "hinsah" );
	deepEqual( Stem("hinsandte"), "hinsandt" );
	deepEqual( Stem("hinschauten"), "hinschaut" );
	deepEqual( Stem("hinscheiden"), "hinscheid" );
	deepEqual( Stem("hinschiessenden"), "hinschiess" );
	deepEqual( Stem("hinschnitt"), "hinschnitt" );
	deepEqual( Stem("hinschob"), "hinschob" );
	deepEqual( Stem("hinschritt"), "hinschritt" );
	deepEqual( Stem("hinschwebte"), "hinschwebt" );
	deepEqual( Stem("hinsehen"), "hinseh" );
	deepEqual( Stem("hinsetzend"), "hinsetz" );
	deepEqual( Stem("hinsicht"), "hinsicht" );
	deepEqual( Stem("hinsichtlich"), "hinsicht" );
	deepEqual( Stem("hinsieht"), "hinsieht" );
	deepEqual( Stem("hinsingt"), "hinsingt" );
	deepEqual( Stem("hinspediert"), "hinspediert" );
	deepEqual( Stem("hinstellen"), "hinstell" );
	deepEqual( Stem("hinstellte"), "hinstellt" );
	deepEqual( Stem("hinsterben"), "hinsterb" );
	deepEqual( Stem("hinstreckten"), "hinstreckt" );
	deepEqual( Stem("hinstürzt"), "hinsturzt" );
	deepEqual( Stem("hinstürzte"), "hinsturzt" );
	deepEqual( Stem("hinten"), "hint" );
	deepEqual( Stem("hintendrein"), "hintendrein" );
	deepEqual( Stem("hinter"), "hint" );
	deepEqual( Stem("hintereinander"), "hintereinand" );
	deepEqual( Stem("hinteren"), "hint" );
	deepEqual( Stem("hinterfragen"), "hinterfrag" );
	deepEqual( Stem("hinterfragt"), "hinterfragt" );
	deepEqual( Stem("hinterfüsse"), "hinterfuss" );
	deepEqual( Stem("hintergehen"), "hintergeh" );
	deepEqual( Stem("hintergestell"), "hintergestell" );
	deepEqual( Stem("hintergrund"), "hintergrund" );
	deepEqual( Stem("hintergrunde"), "hintergrund" );
	deepEqual( Stem("hintergrundes"), "hintergrund" );
	deepEqual( Stem("hintergrundregelmässig"), "hintergrundregelmass" );
	deepEqual( Stem("hinterhalt"), "hinterhalt" );
	deepEqual( Stem("hinterher"), "hinterh" );
	deepEqual( Stem("hinterhoftheater"), "hinterhoftheat" );
	deepEqual( Stem("hinterlassen"), "hinterlass" );
	deepEqual( Stem("hinterlegten"), "hinterlegt" );
	deepEqual( Stem("hinterliess"), "hinterliess" );
	deepEqual( Stem("hinterlist"), "hinterlist" );
	deepEqual( Stem("hinterlistigen"), "hinterlist" );
	deepEqual( Stem("hintern"), "hint" );
	deepEqual( Stem("hinterrücks"), "hinterruck" );
	deepEqual( Stem("hinters"), "hint" );
	deepEqual( Stem("hinterstübchen"), "hinterstubch" );
	deepEqual( Stem("hintertreiben"), "hintertreib" );
	deepEqual( Stem("hintrat"), "hintrat" );
	deepEqual( Stem("hintreten"), "hintret" );
	deepEqual( Stem("hintri"), "hintri" );
	deepEqual( Stem("hinüber"), "hinub" );
	deepEqual( Stem("hinübergehen"), "hinubergeh" );
	deepEqual( Stem("hinübergetragen"), "hinubergetrag" );
	deepEqual( Stem("hinübergewandt"), "hinubergewandt" );
	deepEqual( Stem("hinüberkommen"), "hinuberkomm" );
	deepEqual( Stem("hinüberreiten"), "hinuberreit" );
	deepEqual( Stem("hinüberrudern"), "hinuberrud" );
	deepEqual( Stem("hinübersah"), "hinubersah" );
	deepEqual( Stem("hinüberschritten"), "hinuberschritt" );
	deepEqual( Stem("hinübersehen"), "hinuberseh" );
	deepEqual( Stem("hinübertragen"), "hinubertrag" );
	deepEqual( Stem("hinunter"), "hinunt" );
	deepEqual( Stem("hinunterblicken"), "hinunterblick" );
	deepEqual( Stem("hinunterfahren"), "hinunterfahr" );
	deepEqual( Stem("hinunterführte"), "hinunterfuhrt" );
	deepEqual( Stem("hinuntergebeugt"), "hinuntergebeugt" );
	deepEqual( Stem("hinuntergesprungen"), "hinuntergespr" );
	deepEqual( Stem("hinuntergestossen"), "hinuntergestoss" );
	deepEqual( Stem("hinuntergestoßen"), "hinuntergestoss" );
	deepEqual( Stem("hinunterging"), "hinunterging" );
	deepEqual( Stem("hinunterhängenden"), "hinunterhang" );
	deepEqual( Stem("hinunterkommen"), "hinunterkomm" );
	deepEqual( Stem("hinunterlachte"), "hinunterlacht" );
	deepEqual( Stem("hinunterrutschen"), "hinunterrutsch" );
	deepEqual( Stem("hinuntersah"), "hinuntersah" );
	deepEqual( Stem("hinunterschaute"), "hinunterschaut" );
	deepEqual( Stem("hinuntersenkte"), "hinuntersenkt" );
	deepEqual( Stem("hinunterstossen"), "hinunterstoss" );
	deepEqual( Stem("hinunterstoßen"), "hinunterstoss" );
	deepEqual( Stem("hinuntertragen"), "hinuntertrag" );
	deepEqual( Stem("hinunterwerfen"), "hinunterwerf" );
	deepEqual( Stem("hinunterzerrte"), "hinunterzerrt" );
	deepEqual( Stem("hinwandelt"), "hinwandelt" );
	deepEqual( Stem("hinwanderten"), "hinwandert" );
	deepEqual( Stem("hinwandte"), "hinwandt" );
	deepEqual( Stem("hinweg"), "hinweg" );
	deepEqual( Stem("hinweggegangen"), "hinweggegang" );
	deepEqual( Stem("hinweggehen"), "hinweggeh" );
	deepEqual( Stem("hinweggeholfen"), "hinweggeholf" );
	deepEqual( Stem("hinweggerattert"), "hinweggerattert" );
	deepEqual( Stem("hinwegkommen"), "hinwegkomm" );
	deepEqual( Stem("hinwegliefen"), "hinweglief" );
	deepEqual( Stem("hinwegnehmen"), "hinwegnehm" );
	deepEqual( Stem("hinwegschaffen"), "hinwegschaff" );
	deepEqual( Stem("hinweise"), "hinweis" );
	deepEqual( Stem("hinweisen"), "hinweis" );
	deepEqual( Stem("hinwenden"), "hinwend" );
	deepEqual( Stem("hinwendung"), "hinwend" );
	deepEqual( Stem("hinwerfen"), "hinwerf" );
	deepEqual( Stem("hinwerfung"), "hinwerf" );
	deepEqual( Stem("hinwieder"), "hinwied" );
	deepEqual( Stem("hinziehen"), "hinzieh" );
	deepEqual( Stem("hinzog"), "hinzog" );
	deepEqual( Stem("hinzogen"), "hinzog" );
	deepEqual( Stem("hinzu"), "hinzu" );
	deepEqual( Stem("hinzubegeben"), "hinzubegeb" );
	deepEqual( Stem("hinzublicken"), "hinzublick" );
	deepEqual( Stem("hinzufüge"), "hinzufug" );
	deepEqual( Stem("hinzufügen"), "hinzufug" );
	deepEqual( Stem("hinzufügt"), "hinzufugt" );
	deepEqual( Stem("hinzuführen"), "hinzufuhr" );
	deepEqual( Stem("hinzugefügt"), "hinzugefugt" );
	deepEqual( Stem("hinzugehen"), "hinzugeh" );
	deepEqual( Stem("hinzugekommen"), "hinzugekomm" );
	deepEqual( Stem("hinzugesetzt"), "hinzugesetzt" );
	deepEqual( Stem("hinzugetan"), "hinzugetan" );
	deepEqual( Stem("hinzuhalten"), "hinzuhalt" );
	deepEqual( Stem("hinzukommen"), "hinzukomm" );
	deepEqual( Stem("hinzukommenden"), "hinzukomm" );
	deepEqual( Stem("hinzulegen"), "hinzuleg" );
	deepEqual( Stem("hinzuschielen"), "hinzuschiel" );
	deepEqual( Stem("hinzuschleichen"), "hinzuschleich" );
	deepEqual( Stem("hinzusehen"), "hinzuseh" );
	deepEqual( Stem("hinzustrecken"), "hinzustreck" );
	deepEqual( Stem("hinzustürzen"), "hinzusturz" );
	deepEqual( Stem("hinzutraten"), "hinzutrat" );
	deepEqual( Stem("hinzutreten"), "hinzutret" );
	deepEqual( Stem("hinzutun"), "hinzutun" );
	deepEqual( Stem("hinzuweisen"), "hinzuweis" );
	deepEqual( Stem("hinzuzufügen"), "hinzuzufug" );
	deepEqual( Stem("hiob"), "hiob" );
	deepEqual( Stem("hirn"), "hirn" );
	deepEqual( Stem("hirngespenstern"), "hirngespen" );
	deepEqual( Stem("hirngespinst"), "hirngespin" );
	deepEqual( Stem("hirngespinste"), "hirngespin" );
	deepEqual( Stem("hirnhäute"), "hirnhaut" );
	deepEqual( Stem("hirnschale"), "hirnschal" );
	deepEqual( Stem("hirsch"), "hirsch" );
	deepEqual( Stem("hirsche"), "hirsch" );
	deepEqual( Stem("hirschen"), "hirsch" );
	deepEqual( Stem("hirsches"), "hirsch" );
	deepEqual( Stem("hirschgeweih"), "hirschgeweih" );
	deepEqual( Stem("hirschkuh"), "hirschkuh" );
	deepEqual( Stem("hirt"), "hirt" );
	deepEqual( Stem("hirte"), "hirt" );
	deepEqual( Stem("hirten"), "hirt" );
	deepEqual( Stem("historie"), "histori" );
	deepEqual( Stem("historiker"), "histor" );
	deepEqual( Stem("historikerin"), "historikerin" );
	deepEqual( Stem("historikers"), "histor" );
	deepEqual( Stem("historisch"), "histor" );
	deepEqual( Stem("historische"), "histor" );
	deepEqual( Stem("historischen"), "histor" );
	deepEqual( Stem("historischer"), "histor" );
	deepEqual( Stem("hitler"), "hitl" );
	deepEqual( Stem("hitlerrede"), "hitlerred" );
	deepEqual( Stem("hitz"), "hitz" );
	deepEqual( Stem("hitze"), "hitz" );
	deepEqual( Stem("hitzige"), "hitzig" );
	deepEqual( Stem("hitzigen"), "hitzig" );
	deepEqual( Stem("hitziger"), "hitzig" );
	deepEqual( Stem("hitzkopf"), "hitzkopf" );
	deepEqual( Stem("hm"), "hm" );
	deepEqual( Stem("hmmm"), "hmmm" );
	deepEqual( Stem("ho"), "ho" );
	deepEqual( Stem("hob"), "hob" );
	deepEqual( Stem("hobelbänke"), "hobelbank" );
	deepEqual( Stem("hoben"), "hob" );
	deepEqual( Stem("hoc"), "hoc" );
	deepEqual( Stem("hoch"), "hoch" );
	deepEqual( Stem("hochachtung"), "hochacht" );
	deepEqual( Stem("hochachtungsvohlst"), "hochachtungsvohl" );
	deepEqual( Stem("hochamt"), "hochamt" );
	deepEqual( Stem("hochaufatmend"), "hochaufatm" );
	deepEqual( Stem("hochdeutsch"), "hochdeutsch" );
	deepEqual( Stem("hochebene"), "hocheb" );
	deepEqual( Stem("hochfahrenden"), "hochfahr" );
	deepEqual( Stem("hochfuhr"), "hochfuhr" );
	deepEqual( Stem("hochgebettete"), "hochgebettet" );
	deepEqual( Stem("hochgebrochenen"), "hochgebroch" );
	deepEqual( Stem("hochgefahren"), "hochgefahr" );
	deepEqual( Stem("hochgehoben"), "hochgehob" );
	deepEqual( Stem("hochgelegen"), "hochgeleg" );
	deepEqual( Stem("hochgenuss"), "hochgenuss" );
	deepEqual( Stem("hochgepriesene"), "hochgepries" );
	deepEqual( Stem("hochgeschäfteten"), "hochgeschaftet" );
	deepEqual( Stem("hochgewölbten"), "hochgewolbt" );
	deepEqual( Stem("hochgipfel"), "hochgipfel" );
	deepEqual( Stem("hochheilig"), "hochheil" );
	deepEqual( Stem("hochheilige"), "hochheil" );
	deepEqual( Stem("hochheiliges"), "hochheil" );
	deepEqual( Stem("hochkam"), "hochkam" );
	deepEqual( Stem("hochklingenden"), "hochkling" );
	deepEqual( Stem("höchlich"), "hochlich" );
	deepEqual( Stem("hochmoore"), "hochmoor" );
	deepEqual( Stem("hochmut"), "hochmut" );
	deepEqual( Stem("hochmütig"), "hochmut" );
	deepEqual( Stem("hochmütige"), "hochmut" );
	deepEqual( Stem("hochnäsig"), "hochnas" );
	deepEqual( Stem("hochnäsige"), "hochnas" );
	deepEqual( Stem("hochpreisungen"), "hochpreis" );
	deepEqual( Stem("hochsahen"), "hochsah" );
	deepEqual( Stem("hochschätzung"), "hochschatz" );
	deepEqual( Stem("hochsitze"), "hochsitz" );
	deepEqual( Stem("hochsommer"), "hochsomm" );
	deepEqual( Stem("höchst"), "hoch" );
	deepEqual( Stem("hochstämmige"), "hochstamm" );
	deepEqual( Stem("hochstapfen"), "hochstapf" );
	deepEqual( Stem("höchste"), "hoch" );
	deepEqual( Stem("höchstem"), "hoch" );
	deepEqual( Stem("höchsten"), "hoch" );
	deepEqual( Stem("höchstens"), "hochst" );
	deepEqual( Stem("höchster"), "hoch" );
	deepEqual( Stem("höchstes"), "hoch" );
	deepEqual( Stem("höchstnötig"), "hochstnot" );
	deepEqual( Stem("hochtrabende"), "hochtrab" );
	deepEqual( Stem("hochverpönt"), "hochverpont" );
	deepEqual( Stem("hochverpönte"), "hochverpont" );
	deepEqual( Stem("hochverpöntes"), "hochverpont" );
	deepEqual( Stem("hochverrat"), "hochverrat" );
	deepEqual( Stem("hochwild"), "hochwild" );
	deepEqual( Stem("hochzeit"), "hochzeit" );
	deepEqual( Stem("hochzeitbett"), "hochzeitbett" );
	deepEqual( Stem("hochzeiten"), "hochzeit" );
	deepEqual( Stem("hochzeiter"), "hochzeit" );
	deepEqual( Stem("hochzeitgäste"), "hochzeitgast" );
	deepEqual( Stem("hochzeitgeleite"), "hochzeitgeleit" );
	deepEqual( Stem("hochzeitkammer"), "hochzeitkamm" );
	deepEqual( Stem("hochzeitmahl"), "hochzeitmahl" );
	deepEqual( Stem("hochzeitmorgen"), "hochzeitmorg" );
	deepEqual( Stem("hochzeitpaar"), "hochzeitpaar" );
	deepEqual( Stem("hochzeitstruhe"), "hochzeitstruh" );
	deepEqual( Stem("hochzet"), "hochzet" );
	deepEqual( Stem("hochzubrüllen"), "hochzubrull" );
	deepEqual( Stem("hockte"), "hockt" );
	deepEqual( Stem("hockten"), "hockt" );
	deepEqual( Stem("hof"), "hof" );
	deepEqual( Stem("hofe"), "hof" );
	deepEqual( Stem("höfe"), "hof" );
	deepEqual( Stem("höfen"), "hof" );
	deepEqual( Stem("hofes"), "hof" );
	deepEqual( Stem("hoffart"), "hoffart" );
	deepEqual( Stem("hoffärtigen"), "hoffart" );
	deepEqual( Stem("hoffärtiger"), "hoffart" );
	deepEqual( Stem("hoffe"), "hoff" );
	deepEqual( Stem("hoffen"), "hoff" );
	deepEqual( Stem("hoffend"), "hoffend" );
	deepEqual( Stem("hoffenster"), "hoffen" );
	deepEqual( Stem("hoffentlich"), "hoffent" );
	deepEqual( Stem("hoffmann"), "hoffmann" );
	deepEqual( Stem("hoffmannstropfen"), "hoffmannstropf" );
	deepEqual( Stem("hoffnung"), "hoffnung" );
	deepEqual( Stem("hoffnungen"), "hoffnung" );
	deepEqual( Stem("hoffnungsarme"), "hoffnungsarm" );
	deepEqual( Stem("hoffnungsfaser"), "hoffnungsfas" );
	deepEqual( Stem("hoffnungsfreudig"), "hoffnungsfreud" );
	deepEqual( Stem("hoffnungslos"), "hoffnungslos" );
	deepEqual( Stem("hoffnungslose"), "hoffnungslos" );
	deepEqual( Stem("hoffnungsloser"), "hoffnungslos" );
	deepEqual( Stem("hoffnungslosigkeit"), "hoffnungslos" );
	deepEqual( Stem("hoffnungsreichem"), "hoffnungsreich" );
	deepEqual( Stem("hoffnungsvolle"), "hoffnungsvoll" );
	deepEqual( Stem("hoffte"), "hofft" );
	deepEqual( Stem("hofhaltung"), "hofhalt" );
	deepEqual( Stem("hofleben"), "hofleb" );
	deepEqual( Stem("hofleute"), "hofleut" );
	deepEqual( Stem("höflich"), "hoflich" );
	deepEqual( Stem("höfliche"), "hoflich" );
	deepEqual( Stem("höflichem"), "hoflich" );
	deepEqual( Stem("höflichen"), "hoflich" );
	deepEqual( Stem("höflicher"), "hoflich" );
	deepEqual( Stem("höflichkeit"), "hoflich" );
	deepEqual( Stem("höflichkeiten"), "hoflich" );
	deepEqual( Stem("hofrat"), "hofrat" );
	deepEqual( Stem("hofraum"), "hofraum" );
	deepEqual( Stem("hofstaats"), "hofstaat" );
	deepEqual( Stem("höft"), "hoft" );
	deepEqual( Stem("hofwinkels"), "hofwinkel" );
	deepEqual( Stem("höh"), "hoh" );
	deepEqual( Stem("hohe"), "hoh" );
	deepEqual( Stem("höhe"), "hoh" );
	deepEqual( Stem("hoheit"), "hoheit" );
	deepEqual( Stem("hohem"), "hoh" );
	deepEqual( Stem("hohen"), "hoh" );
	deepEqual( Stem("höhen"), "hoh" );
	deepEqual( Stem("höhenflüge"), "hohenflug" );
	deepEqual( Stem("höhenlüften"), "hohenluft" );
	deepEqual( Stem("höhenstrichen"), "hohenstrich" );
	deepEqual( Stem("höhepunktes"), "hohepunkt" );
	deepEqual( Stem("hoher"), "hoh" );
	deepEqual( Stem("höher"), "hoh" );
	deepEqual( Stem("höhere"), "hoh" );
	deepEqual( Stem("höherem"), "hoh" );
	deepEqual( Stem("höheren"), "hoh" );
	deepEqual( Stem("höherer"), "hoh" );
	deepEqual( Stem("höheres"), "hoh" );
	deepEqual( Stem("höhern"), "hoh" );
	deepEqual( Stem("hohes"), "hoh" );
	deepEqual( Stem("hohfentlich"), "hohfent" );
	deepEqual( Stem("hohle"), "hohl" );
	deepEqual( Stem("hohlem"), "hohl" );
	deepEqual( Stem("hohlen"), "hohl" );
	deepEqual( Stem("höhlen"), "hohl" );
	deepEqual( Stem("hohler"), "hohl" );
	deepEqual( Stem("hohles"), "hohl" );
	deepEqual( Stem("höhlung"), "hohlung" );
	deepEqual( Stem("hohlziegel"), "hohlziegel" );
	deepEqual( Stem("hohn"), "hohn" );
	deepEqual( Stem("höhnisch"), "hohnisch" );
	deepEqual( Stem("höhnischen"), "hohnisch" );
	deepEqual( Stem("höhnisches"), "hohnisch" );
	deepEqual( Stem("höhnten"), "hohnt" );
	deepEqual( Stem("hoho"), "hoho" );
	deepEqual( Stem("höi"), "hoi" );
	deepEqual( Stem("hol"), "hol" );
	deepEqual( Stem("hold"), "hold" );
	deepEqual( Stem("holde"), "hold" );
	deepEqual( Stem("holden"), "hold" );
	deepEqual( Stem("holdes"), "hold" );
	deepEqual( Stem("holdselig"), "holdsel" );
	deepEqual( Stem("holdseligste"), "holdsel" );
	deepEqual( Stem("hole"), "hol" );
	deepEqual( Stem("holen"), "hol" );
	deepEqual( Stem("holimanns"), "holimann" );
	deepEqual( Stem("holla"), "holla" );
	deepEqual( Stem("holle"), "holl" );
	deepEqual( Stem("hölle"), "holl" );
	deepEqual( Stem("höllen"), "holl" );
	deepEqual( Stem("höllenfeuer"), "hollenfeu" );
	deepEqual( Stem("höllengeister"), "hollengeist" );
	deepEqual( Stem("höllengeistern"), "hollengeist" );
	deepEqual( Stem("höllenlärm"), "hollenlarm" );
	deepEqual( Stem("höllisch"), "hollisch" );
	deepEqual( Stem("höllische"), "hollisch" );
	deepEqual( Stem("höllischem"), "hollisch" );
	deepEqual( Stem("höllischen"), "hollisch" );
	deepEqual( Stem("höllischer"), "hollisch" );
	deepEqual( Stem("höllisches"), "hollisch" );
	deepEqual( Stem("holocaust"), "holocaust" );
	deepEqual( Stem("holsteiner"), "holstein" );
	deepEqual( Stem("holt"), "holt" );
	deepEqual( Stem("holte"), "holt" );
	deepEqual( Stem("holten"), "holt" );
	deepEqual( Stem("holterdiepolter"), "holterdiepolt" );
	deepEqual( Stem("holunderbäume"), "holunderbaum" );
	deepEqual( Stem("holz"), "holz" );
	deepEqual( Stem("holzbank"), "holzbank" );
	deepEqual( Stem("hölzchen"), "holzch" );
	deepEqual( Stem("holzdieb"), "holzdieb" );
	deepEqual( Stem("holze"), "holz" );
	deepEqual( Stem("hölzerne"), "holzern" );
	deepEqual( Stem("hölzernen"), "holzern" );
	deepEqual( Stem("hölzerner"), "holzern" );
	deepEqual( Stem("hölzernes"), "holzern" );
	deepEqual( Stem("holzes"), "holz" );
	deepEqual( Stem("holzgetäfel"), "holzgetafel" );
	deepEqual( Stem("holzhauer"), "holzhau" );
	deepEqual( Stem("holzkannen"), "holzkann" );
	deepEqual( Stem("holzkeil"), "holzkeil" );
	deepEqual( Stem("holzknecht"), "holzknecht" );
	deepEqual( Stem("holzknechte"), "holzknecht" );
	deepEqual( Stem("holzkreuz"), "holzkreuz" );
	deepEqual( Stem("holzscheite"), "holzscheit" );
	deepEqual( Stem("holzschwert"), "holzschwert" );
	deepEqual( Stem("holzstall"), "holzstall" );
	deepEqual( Stem("holzstoss"), "holzstoss" );
	deepEqual( Stem("holztisch"), "holztisch" );
	deepEqual( Stem("holztreppe"), "holztrepp" );
	deepEqual( Stem("home"), "hom" );
	deepEqual( Stem("homepage"), "homepag" );
	deepEqual( Stem("homers"), "hom" );
	deepEqual( Stem("hon"), "hon" );
	deepEqual( Stem("honecker"), "honeck" );
	deepEqual( Stem("honetter"), "honett" );
	deepEqual( Stem("honig"), "honig" );
	deepEqual( Stem("honigfässchen"), "honigfassch" );
	deepEqual( Stem("honigfäßchen"), "honigfassch" );
	deepEqual( Stem("honigs"), "honig" );
	deepEqual( Stem("honigscheibe"), "honigscheib" );
	deepEqual( Stem("honneurs"), "honneur" );
	deepEqual( Stem("honorar"), "honorar" );
	deepEqual( Stem("hooch"), "hooch" );
	deepEqual( Stem("hopp"), "hopp" );
	deepEqual( Stem("hoppelt"), "hoppelt" );
	deepEqual( Stem("hoppla"), "hoppla" );
	deepEqual( Stem("hopsele"), "hopsel" );
	deepEqual( Stem("hör"), "hor" );
	deepEqual( Stem("hörbar"), "horbar" );
	deepEqual( Stem("horche"), "horch" );
	deepEqual( Stem("horchen"), "horch" );
	deepEqual( Stem("horcht"), "horcht" );
	deepEqual( Stem("horchte"), "horcht" );
	deepEqual( Stem("horchten"), "horcht" );
	deepEqual( Stem("höre"), "hor" );
	deepEqual( Stem("horeb"), "horeb" );
	deepEqual( Stem("hören"), "hor" );
	deepEqual( Stem("hörend"), "horend" );
	deepEqual( Stem("hörende"), "horend" );
	deepEqual( Stem("hörer"), "hor" );
	deepEqual( Stem("hörerbrief"), "horerbrief" );
	deepEqual( Stem("hörerin"), "horerin" );
	deepEqual( Stem("hörest"), "hor" );
	deepEqual( Stem("höret"), "horet" );
	deepEqual( Stem("hörfolge"), "horfolg" );
	deepEqual( Stem("horizonte"), "horizont" );
	deepEqual( Stem("horlinger"), "horling" );
	deepEqual( Stem("horn"), "horn" );
	deepEqual( Stem("hornbläsern"), "hornblas" );
	deepEqual( Stem("hörnchen"), "hornch" );
	deepEqual( Stem("hörner"), "horn" );
	deepEqual( Stem("hörnern"), "horn" );
	deepEqual( Stem("hornstriegeln"), "hornstriegeln" );
	deepEqual( Stem("horon"), "horon" );
	deepEqual( Stem("hörrohr"), "horrohr" );
	deepEqual( Stem("hörspielabteilung"), "horspielabteil" );
	deepEqual( Stem("horst"), "horst" );
	deepEqual( Stem("hörst"), "horst" );
	deepEqual( Stem("horste"), "horst" );
	deepEqual( Stem("hört"), "hort" );
	deepEqual( Stem("hörte"), "hort" );
	deepEqual( Stem("hörten"), "hort" );
	deepEqual( Stem("hörtest"), "hort" );
	deepEqual( Stem("hos"), "hos" );
	deepEqual( Stem("hosas"), "hosas" );
	deepEqual( Stem("hose"), "hos" );
	deepEqual( Stem("hosen"), "hos" );
	deepEqual( Stem("hosengürtel"), "hosengurtel" );
	deepEqual( Stem("hosenträgern"), "hosentrag" );
	deepEqual( Stem("hosianna"), "hosianna" );
	deepEqual( Stem("hospiz"), "hospiz" );
	deepEqual( Stem("hospizgruppe"), "hospizgrupp" );
	deepEqual( Stem("hotel"), "hotel" );
	deepEqual( Stem("hoteltür"), "hoteltur" );
	deepEqual( Stem("hub"), "hub" );
	deepEqual( Stem("hüben"), "hub" );
	deepEqual( Stem("huber"), "hub" );
	deepEqual( Stem("hubertus"), "hubertus" );
	deepEqual( Stem("hubertusjüngern"), "hubertusjung" );
	deepEqual( Stem("hübsch"), "hubsch" );
	deepEqual( Stem("hübsche"), "hubsch" );
	deepEqual( Stem("hübschen"), "hubsch" );
	deepEqual( Stem("hübscher"), "hubsch" );
	deepEqual( Stem("hübsches"), "hubsch" );
	deepEqual( Stem("huckepack"), "huckepack" );
	deepEqual( Stem("huckige"), "huckig" );
	deepEqual( Stem("hudelkopf"), "hudelkopf" );
	deepEqual( Stem("hudelvölkchen"), "hudelvolkch" );
	deepEqual( Stem("huf"), "huf" );
	deepEqual( Stem("hufe"), "huf" );
	deepEqual( Stem("hufeisentreppe"), "hufeisentrepp" );
	deepEqual( Stem("hufen"), "huf" );
	deepEqual( Stem("hüfte"), "huft" );
	deepEqual( Stem("hüften"), "huft" );
	deepEqual( Stem("hügel"), "hugel" );
	deepEqual( Stem("hügelchen"), "hugelch" );
	deepEqual( Stem("hügeligen"), "hugel" );
	deepEqual( Stem("hügeliges"), "hugel" );
	deepEqual( Stem("hügeln"), "hugeln" );
	deepEqual( Stem("hügels"), "hugel" );
	deepEqual( Stem("huglieme"), "hugliem" );
	deepEqual( Stem("huhn"), "huhn" );
	deepEqual( Stem("hühner"), "huhn" );
	deepEqual( Stem("hühnerjagd"), "huhnerjagd" );
	deepEqual( Stem("hühnern"), "huhn" );
	deepEqual( Stem("hühnerschwärmen"), "huhnerschwarm" );
	deepEqual( Stem("huhnes"), "huhn" );
	deepEqual( Stem("huhu"), "huhu" );
	deepEqual( Stem("hui"), "hui" );
	deepEqual( Stem("huld"), "huld" );
	deepEqual( Stem("huldigten"), "huldigt" );
	deepEqual( Stem("huldreich"), "huldreich" );
	deepEqual( Stem("huldreichen"), "huldreich" );
	deepEqual( Stem("hülfe"), "hulf" );
	deepEqual( Stem("hülflos"), "hulflos" );
	deepEqual( Stem("hülle"), "hull" );
	deepEqual( Stem("hüllen"), "hull" );
	deepEqual( Stem("hüllte"), "hullt" );
	deepEqual( Stem("hülse"), "huls" );
	deepEqual( Stem("humane"), "human" );
	deepEqual( Stem("humanen"), "human" );
	deepEqual( Stem("humanismus"), "humanismus" );
	deepEqual( Stem("humanistischen"), "humanist" );
	deepEqual( Stem("humanitäre"), "humanitar" );
	deepEqual( Stem("humanitären"), "humanitar" );
	deepEqual( Stem("hume"), "hum" );
	deepEqual( Stem("humes"), "hum" );
	deepEqual( Stem("humische"), "humisch" );
	deepEqual( Stem("humkoke"), "humkok" );
	deepEqual( Stem("hummeln"), "hummeln" );
	deepEqual( Stem("humor"), "humor" );
	deepEqual( Stem("humorlose"), "humorlos" );
	deepEqual( Stem("humus"), "humus" );
	deepEqual( Stem("hund"), "hund" );
	deepEqual( Stem("hunde"), "hund" );
	deepEqual( Stem("hunden"), "hund" );
	deepEqual( Stem("hunderl"), "hunderl" );
	deepEqual( Stem("hundert"), "hundert" );
	deepEqual( Stem("hundertdreiunddreissig"), "hundertdreiunddreiss" );
	deepEqual( Stem("hundertdreiunddreißig"), "hundertdreiunddreiss" );
	deepEqual( Stem("hunderte"), "hundert" );
	deepEqual( Stem("hunderten"), "hundert" );
	deepEqual( Stem("hunderterlei"), "hunderterlei" );
	deepEqual( Stem("hundertfach"), "hundertfach" );
	deepEqual( Stem("hundertfacher"), "hundertfach" );
	deepEqual( Stem("hundertfältig"), "hundertfalt" );
	deepEqual( Stem("hundertmal"), "hundertmal" );
	deepEqual( Stem("hundertsiebenunddreissig"), "hundertsiebenunddreiss" );
	deepEqual( Stem("hundertsiebenunddreißig"), "hundertsiebenunddreiss" );
	deepEqual( Stem("hundertsten"), "hundert" );
	deepEqual( Stem("hundertstimmigem"), "hundertstimm" );
	deepEqual( Stem("hunderttausend"), "hunderttaus" );
	deepEqual( Stem("hunderttausende"), "hunderttaus" );
	deepEqual( Stem("hundertundfünfzig"), "hundertundfunfz" );
	deepEqual( Stem("hundertvierundvierzig"), "hundertvierundvierz" );
	deepEqual( Stem("hundertvierzig"), "hundertvierz" );
	deepEqual( Stem("hundertzwanzig"), "hundertzwanz" );
	deepEqual( Stem("hundes"), "hund" );
	deepEqual( Stem("hundeseele"), "hundeseel" );
	deepEqual( Stem("hundl"), "hundl" );
	deepEqual( Stem("hündlein"), "hundlein" );
	deepEqual( Stem("hundsfott"), "hundsfott" );
	deepEqual( Stem("hundsseele"), "hundsseel" );
	deepEqual( Stem("hunger"), "hung" );
	deepEqual( Stem("hungerlohn"), "hungerlohn" );
	deepEqual( Stem("hungern"), "hung" );
	deepEqual( Stem("hungers"), "hung" );
	deepEqual( Stem("hungerte"), "hungert" );
	deepEqual( Stem("hungrig"), "hungrig" );
	deepEqual( Stem("hungrige"), "hungrig" );
	deepEqual( Stem("hungrigen"), "hungrig" );
	deepEqual( Stem("hungriger"), "hungrig" );
	deepEqual( Stem("hüpfende"), "hupfend" );
	deepEqual( Stem("hüpfenden"), "hupfend" );
	deepEqual( Stem("hüpfte"), "hupft" );
	deepEqual( Stem("hupften"), "hupft" );
	deepEqual( Stem("hüpften"), "hupft" );
	deepEqual( Stem("hupschi"), "hupschi" );
	deepEqual( Stem("hürde"), "hurd" );
	deepEqual( Stem("hürden"), "hurd" );
	deepEqual( Stem("hure"), "hur" );
	deepEqual( Stem("hurend"), "hurend" );
	deepEqual( Stem("hurerei"), "hurerei" );
	deepEqual( Stem("hurereien"), "hurerei" );
	deepEqual( Stem("hurra"), "hurra" );
	deepEqual( Stem("hurtig"), "hurtig" );
	deepEqual( Stem("husaren"), "husar" );
	deepEqual( Stem("husch"), "husch" );
	deepEqual( Stem("huschen"), "husch" );
	deepEqual( Stem("huschte"), "huscht" );
	deepEqual( Stem("huschten"), "huscht" );
	deepEqual( Stem("hüseyin"), "huseyin" );
	deepEqual( Stem("hüstelte"), "hustelt" );
	deepEqual( Stem("husten"), "hust" );
	deepEqual( Stem("hut"), "hut" );
	deepEqual( Stem("hüt"), "hut" );
	deepEqual( Stem("hütchen"), "hutch" );
	deepEqual( Stem("hute"), "hut" );
	deepEqual( Stem("hüte"), "hut" );
	deepEqual( Stem("hüten"), "hut" );
	deepEqual( Stem("hüter"), "hut" );
	deepEqual( Stem("hüterbub"), "huterbub" );
	deepEqual( Stem("hütet"), "hutet" );
	deepEqual( Stem("hütete"), "hutet" );
	deepEqual( Stem("hüteten"), "hutet" );
	deepEqual( Stem("hütl"), "hutl" );
	deepEqual( Stem("hütte"), "hutt" );
	deepEqual( Stem("hütten"), "hutt" );
	deepEqual( Stem("hüttenfest"), "huttenf" );
	deepEqual( Stem("huwiler"), "huwil" );
	deepEqual( Stem("hv"), "hv" );
	deepEqual( Stem("hyazinth"), "hyazinth" );
	deepEqual( Stem("hyazinthfarbe"), "hyazinthfarb" );
	deepEqual( Stem("hypochondrischen"), "hypochondr" );
	deepEqual( Stem("hypothekschulden"), "hypothekschuld" );
	deepEqual( Stem("hypothese"), "hypothes" );
	deepEqual( Stem("hypothesen"), "hypothes" );
	deepEqual( Stem("hypothetische"), "hypothet" );
	deepEqual( Stem("hysterisch"), "hyster" );
	deepEqual( Stem("i"), "i" );
	deepEqual( Stem("iang"), "iang" );
	deepEqual( Stem("ich"), "ich" );
	deepEqual( Stem("ichs"), "ich" );
	deepEqual( Stem("idea"), "idea" );
	deepEqual( Stem("ideal"), "ideal" );
	deepEqual( Stem("ideale"), "ideal" );
	deepEqual( Stem("idealisch"), "ideal" );
	deepEqual( Stem("idealischen"), "ideal" );
	deepEqual( Stem("idee"), "ide" );
	deepEqual( Stem("ideen"), "ide" );
	deepEqual( Stem("ideenkiste"), "ideenkist" );
	deepEqual( Stem("ideenulrich"), "ideenulrich" );
	deepEqual( Stem("identische"), "ident" );
	deepEqual( Stem("identität"), "identitat" );
	deepEqual( Stem("identitizierung"), "identitizier" );
	deepEqual( Stem("ideologisierung"), "ideologisier" );
	deepEqual( Stem("idion"), "idion" );
	deepEqual( Stem("idioten"), "idiot" );
	deepEqual( Stem("ieh"), "ieh" );
	deepEqual( Stem("ierte"), "iert" );
	deepEqual( Stem("igel"), "igel" );
	deepEqual( Stem("igelbürste"), "igelburst" );
	deepEqual( Stem("ignorieren"), "ignori" );
	deepEqual( Stem("ihd"), "ihd" );
	deepEqual( Stem("ihm"), "ihm" );
	deepEqual( Stem("ihn"), "ihn" );
	deepEqual( Stem("ihnen"), "ihn" );
	deepEqual( Stem("ihr"), "ihr" );
	deepEqual( Stem("ihre"), "ihr" );
	deepEqual( Stem("ihrem"), "ihr" );
	deepEqual( Stem("ihren"), "ihr" );
	deepEqual( Stem("ihrer"), "ihr" );
	deepEqual( Stem("ihres"), "ihr" );
	deepEqual( Stem("ihrethalben"), "ihrethalb" );
	deepEqual( Stem("ihretwegen"), "ihretweg" );
	deepEqual( Stem("ihrige"), "ihrig" );
	deepEqual( Stem("ihrigen"), "ihrig" );
	deepEqual( Stem("ihro"), "ihro" );
	deepEqual( Stem("ii"), "ii" );
	deepEqual( Stem("iii"), "iii" );
	deepEqual( Stem("ikea"), "ikea" );
	deepEqual( Stem("illa"), "illa" );
	deepEqual( Stem("ille"), "ill" );
	deepEqual( Stem("illegal"), "illegal" );
	deepEqual( Stem("illegalen"), "illegal" );
	deepEqual( Stem("illud"), "illud" );
	deepEqual( Stem("illumination"), "illumination" );
	deepEqual( Stem("illusion"), "illusion" );
	deepEqual( Stem("illusorisch"), "illusor" );
	deepEqual( Stem("im"), "im" );
	deepEqual( Stem("image"), "imag" );
	deepEqual( Stem("imago"), "imago" );
	deepEqual( Stem("imbiss"), "imbiss" );
	deepEqual( Stem("imgleichen"), "imgleich" );
	deepEqual( Stem("immanent"), "immanent" );
	deepEqual( Stem("immanuel"), "immanuel" );
	deepEqual( Stem("immaterielle"), "immateriell" );
	deepEqual( Stem("immateriellen"), "immateriell" );
	deepEqual( Stem("immenstand"), "immenstand" );
	deepEqual( Stem("immer"), "imm" );
	deepEqual( Stem("immerdar"), "immerdar" );
	deepEqual( Stem("immerfort"), "immerfort" );
	deepEqual( Stem("immergrünen"), "immergrun" );
	deepEqual( Stem("immerhin"), "immerhin" );
	deepEqual( Stem("immerwährend"), "immerwahr" );
	deepEqual( Stem("immerwährende"), "immerwahr" );
	deepEqual( Stem("immerwährendes"), "immerwahr" );
	deepEqual( Stem("immerzu"), "immerzu" );
	deepEqual( Stem("imogen"), "imog" );
	deepEqual( Stem("imperativ"), "imperativ" );
	deepEqual( Stem("imperative"), "imperativ" );
	deepEqual( Stem("imperativen"), "imperativ" );
	deepEqual( Stem("imperativs"), "imperativs" );
	deepEqual( Stem("impressum"), "impressum" );
	deepEqual( Stem("impulse"), "impuls" );
	deepEqual( Stem("imstande"), "imstand" );
	deepEqual( Stem("in"), "in" );
	deepEqual( Stem("inan"), "inan" );
	deepEqual( Stem("inbegriff"), "inbegriff" );
	deepEqual( Stem("inbesondere"), "inbesond" );
	deepEqual( Stem("inbrunst"), "inbrun" );
	deepEqual( Stem("inbrünstig"), "inbrunst" );
	deepEqual( Stem("indem"), "ind" );
	deepEqual( Stem("indes"), "ind" );
	deepEqual( Stem("indessen"), "indess" );
	deepEqual( Stem("indianer"), "indian" );
	deepEqual( Stem("indie"), "indi" );
	deepEqual( Stem("indien"), "indi" );
	deepEqual( Stem("indiennekleid"), "indiennekleid" );
	deepEqual( Stem("indierinnen"), "indierinn" );
	deepEqual( Stem("indifferent"), "indifferent" );
	deepEqual( Stem("indirekt"), "indirekt" );
	deepEqual( Stem("indischen"), "indisch" );
	deepEqual( Stem("indobritischen"), "indobrit" );
	deepEqual( Stem("indoles"), "indol" );
	deepEqual( Stem("indulgent"), "indulgent" );
	deepEqual( Stem("industrie"), "industri" );
	deepEqual( Stem("ineinander"), "ineinand" );
	deepEqual( Stem("ineinandergefahren"), "ineinandergefahr" );
	deepEqual( Stem("inernet"), "inernet" );
	deepEqual( Stem("infam"), "infam" );
	deepEqual( Stem("infanteriegewehr"), "infanteriegewehr" );
	deepEqual( Stem("infanteriekaserne"), "infanteriekasern" );
	deepEqual( Stem("inferiore"), "inferior" );
	deepEqual( Stem("inferiorität"), "inferioritat" );
	deepEqual( Stem("info"), "info" );
	deepEqual( Stem("infolge"), "infolg" );
	deepEqual( Stem("infolgedessen"), "infolgedess" );
	deepEqual( Stem("information"), "information" );
	deepEqual( Stem("informationen"), "information" );
	deepEqual( Stem("informationsbeauftragte"), "informationsbeauftragt" );
	deepEqual( Stem("informieren"), "informi" );
	deepEqual( Stem("informiert"), "informiert" );
	deepEqual( Stem("infos"), "infos" );
	deepEqual( Stem("ingenio"), "ingenio" );
	deepEqual( Stem("ingrimm"), "ingrimm" );
	deepEqual( Stem("ingwer"), "ingw" );
	deepEqual( Stem("inhaber"), "inhab" );
	deepEqual( Stem("inhalt"), "inhalt" );
	deepEqual( Stem("inhalte"), "inhalt" );
	deepEqual( Stem("inhaltlich"), "inhalt" );
	deepEqual( Stem("inhalts"), "inhalt" );
	deepEqual( Stem("inhaltsverzeichnissen"), "inhaltsverzeichnis" );
	deepEqual( Stem("initiative"), "initiativ" );
	deepEqual( Stem("inland"), "inland" );
	deepEqual( Stem("inländischen"), "inland" );
	deepEqual( Stem("inlandsarbeit"), "inlandsarbeit" );
	deepEqual( Stem("inmitten"), "inmitt" );
	deepEqual( Stem("inne"), "inn" );
	deepEqual( Stem("innegewordene"), "innegeword" );
	deepEqual( Stem("innegewordenen"), "innegeword" );
	deepEqual( Stem("innehalten"), "innehalt" );
	deepEqual( Stem("innehat"), "innehat" );
	deepEqual( Stem("innehielt"), "innehielt" );
	deepEqual( Stem("innehielten"), "innehielt" );
	deepEqual( Stem("innen"), "inn" );
	deepEqual( Stem("innere"), "inn" );
	deepEqual( Stem("innerem"), "inn" );
	deepEqual( Stem("inneren"), "inn" );
	deepEqual( Stem("innerer"), "inn" );
	deepEqual( Stem("inneres"), "inn" );
	deepEqual( Stem("innerhalb"), "innerhalb" );
	deepEqual( Stem("innerlich"), "inn" );
	deepEqual( Stem("innerliche"), "inn" );
	deepEqual( Stem("innerlichen"), "inn" );
	deepEqual( Stem("innerlicher"), "inn" );
	deepEqual( Stem("innerlichere"), "inn" );
	deepEqual( Stem("innerlicheres"), "inn" );
	deepEqual( Stem("innerliches"), "inn" );
	deepEqual( Stem("innern"), "inn" );
	deepEqual( Stem("innerste"), "innerst" );
	deepEqual( Stem("innerstem"), "innerst" );
	deepEqual( Stem("innersten"), "innerst" );
	deepEqual( Stem("innerster"), "innerst" );
	deepEqual( Stem("innerstes"), "innerst" );
	deepEqual( Stem("innewerden"), "innewerd" );
	deepEqual( Stem("innewerdend"), "innewerd" );
	deepEqual( Stem("innewerdende"), "innewerd" );
	deepEqual( Stem("innewerdens"), "innewerd" );
	deepEqual( Stem("innewerdungen"), "innewerd" );
	deepEqual( Stem("innewohnen"), "innewohn" );
	deepEqual( Stem("innewohnend"), "innewohn" );
	deepEqual( Stem("innewohnt"), "innewohnt" );
	deepEqual( Stem("innewohnte"), "innewohnt" );
	deepEqual( Stem("innewurde"), "innewurd" );
	deepEqual( Stem("innezuwerden"), "innezuwerd" );
	deepEqual( Stem("innig"), "innig" );
	deepEqual( Stem("innige"), "innig" );
	deepEqual( Stem("innigen"), "innig" );
	deepEqual( Stem("inniger"), "innig" );
	deepEqual( Stem("innigere"), "innig" );
	deepEqual( Stem("innigkeit"), "innig" );
	deepEqual( Stem("inniglich"), "innig" );
	deepEqual( Stem("innigsten"), "innig" );
	deepEqual( Stem("inningst"), "inning" );
	deepEqual( Stem("innre"), "innr" );
	deepEqual( Stem("ins"), "ins" );
	deepEqual( Stem("insbesondere"), "insbesond" );
	deepEqual( Stem("insbesondereeine"), "insbesondereein" );
	deepEqual( Stem("insbesonders"), "insbesond" );
	deepEqual( Stem("inschrift"), "inschrift" );
	deepEqual( Stem("insekt"), "insekt" );
	deepEqual( Stem("insekten"), "insekt" );
	deepEqual( Stem("insektenbefall"), "insektenbefall" );
	deepEqual( Stem("insel"), "insel" );
	deepEqual( Stem("inselgruppe"), "inselgrupp" );
	deepEqual( Stem("inseln"), "inseln" );
	deepEqual( Stem("inseratenkampagne"), "inseratenkampagn" );
	deepEqual( Stem("inservit"), "inservit" );
	deepEqual( Stem("insgeheim"), "insgeheim" );
	deepEqual( Stem("insgesamt"), "insgesamt" );
	deepEqual( Stem("insitam"), "insitam" );
	deepEqual( Stem("insofern"), "insof" );
	deepEqual( Stem("insonderheit"), "insond" );
	deepEqual( Stem("insonderlich"), "insond" );
	deepEqual( Stem("insoweit"), "insoweit" );
	deepEqual( Stem("inspiration"), "inspiration" );
	deepEqual( Stem("instant"), "instant" );
	deepEqual( Stem("instinkt"), "instinkt" );
	deepEqual( Stem("instinkte"), "instinkt" );
	deepEqual( Stem("instinkten"), "instinkt" );
	deepEqual( Stem("instinktiv"), "instinktiv" );
	deepEqual( Stem("institut"), "institut" );
	deepEqual( Stem("institution"), "institution" );
	deepEqual( Stem("institutionen"), "institution" );
	deepEqual( Stem("instituts"), "institut" );
	deepEqual( Stem("instrument"), "instrument" );
	deepEqual( Stem("instrumente"), "instrument" );
	deepEqual( Stem("instrumenten"), "instrument" );
	deepEqual( Stem("inszenierte"), "inszeniert" );
	deepEqual( Stem("integration"), "integration" );
	deepEqual( Stem("intellecta"), "intellecta" );
	deepEqual( Stem("intellectuales"), "intellectual" );
	deepEqual( Stem("intellektuell"), "intellektuell" );
	deepEqual( Stem("intellektuelle"), "intellektuell" );
	deepEqual( Stem("intellektuellem"), "intellektuell" );
	deepEqual( Stem("intellektuellen"), "intellektuell" );
	deepEqual( Stem("intellektuelles"), "intellektuell" );
	deepEqual( Stem("intelligent"), "intelligent" );
	deepEqual( Stem("intelligente"), "intelligent" );
	deepEqual( Stem("intelligenz"), "intelligenz" );
	deepEqual( Stem("intelligenzen"), "intelligenz" );
	deepEqual( Stem("intelligibele"), "intelligibel" );
	deepEqual( Stem("intelligibelen"), "intelligibel" );
	deepEqual( Stem("intendant"), "intendant" );
	deepEqual( Stem("intendanten"), "intendant" );
	deepEqual( Stem("intensivität"), "intensivitat" );
	deepEqual( Stem("inter"), "int" );
	deepEqual( Stem("interessant"), "interessant" );
	deepEqual( Stem("interessante"), "interessant" );
	deepEqual( Stem("interessanten"), "interessant" );
	deepEqual( Stem("interessanter"), "interessant" );
	deepEqual( Stem("interessanterweise"), "interessanterweis" );
	deepEqual( Stem("interessantes"), "interessant" );
	deepEqual( Stem("interesse"), "interess" );
	deepEqual( Stem("interessen"), "interess" );
	deepEqual( Stem("interessenvertretung"), "interessenvertret" );
	deepEqual( Stem("interesses"), "interess" );
	deepEqual( Stem("interessieren"), "interessi" );
	deepEqual( Stem("interessiert"), "interessiert" );
	deepEqual( Stem("interessierte"), "interessiert" );
	deepEqual( Stem("interessierten"), "interessiert" );
	deepEqual( Stem("interesssant"), "interesssant" );
	deepEqual( Stem("interiori"), "interiori" );
	deepEqual( Stem("interius"), "interius" );
	deepEqual( Stem("intermezzo"), "intermezzo" );
	deepEqual( Stem("international"), "international" );
	deepEqual( Stem("internationale"), "international" );
	deepEqual( Stem("internationalen"), "international" );
	deepEqual( Stem("internes"), "intern" );
	deepEqual( Stem("internet"), "internet" );
	deepEqual( Stem("internetdie"), "internetdi" );
	deepEqual( Stem("interneteine"), "internetein" );
	deepEqual( Stem("internetseiten"), "internetseit" );
	deepEqual( Stem("internetsurfenam"), "internetsurfenam" );
	deepEqual( Stem("interpretation"), "interpretation" );
	deepEqual( Stem("interpretieren"), "interpreti" );
	deepEqual( Stem("interview"), "interview" );
	deepEqual( Stem("intimeren"), "intim" );
	deepEqual( Stem("inwendig"), "inwend" );
	deepEqual( Stem("inwendige"), "inwend" );
	deepEqual( Stem("inwendigem"), "inwend" );
	deepEqual( Stem("inwendigen"), "inwend" );
	deepEqual( Stem("inwendiger"), "inwend" );
	deepEqual( Stem("inwendigere"), "inwend" );
	deepEqual( Stem("inwendigerem"), "inwend" );
	deepEqual( Stem("inwendigeren"), "inwend" );
	deepEqual( Stem("inwendigeres"), "inwend" );
	deepEqual( Stem("inwendiges"), "inwend" );
	deepEqual( Stem("inwendigst"), "inwend" );
	deepEqual( Stem("inwendigste"), "inwend" );
	deepEqual( Stem("inwendigsten"), "inwend" );
	deepEqual( Stem("inwendigster"), "inwend" );
	deepEqual( Stem("inwieweit"), "inwieweit" );
	deepEqual( Stem("inzichten"), "inzicht" );
	deepEqual( Stem("inzwischen"), "inzwisch" );
	deepEqual( Stem("ipso"), "ipso" );
	deepEqual( Stem("irad"), "irad" );
	deepEqual( Stem("irard"), "irard" );
	deepEqual( Stem("irdene"), "ird" );
	deepEqual( Stem("irdenen"), "ird" );
	deepEqual( Stem("irdisch"), "irdisch" );
	deepEqual( Stem("irdische"), "irdisch" );
	deepEqual( Stem("irdischen"), "irdisch" );
	deepEqual( Stem("irdisches"), "irdisch" );
	deepEqual( Stem("irdisdien"), "irdisdi" );
	deepEqual( Stem("irgend"), "irgend" );
	deepEqual( Stem("irgendein"), "irgendein" );
	deepEqual( Stem("irgendeine"), "irgendein" );
	deepEqual( Stem("irgendeinem"), "irgendein" );
	deepEqual( Stem("irgendeinen"), "irgendein" );
	deepEqual( Stem("irgendeiner"), "irgendein" );
	deepEqual( Stem("irgendeines"), "irgendein" );
	deepEqual( Stem("irgendetwas"), "irgendetwas" );
	deepEqual( Stem("irgendwann"), "irgendwann" );
	deepEqual( Stem("irgendwelche"), "irgendwelch" );
	deepEqual( Stem("irgendwelchen"), "irgendwelch" );
	deepEqual( Stem("irgendwelches"), "irgendwelch" );
	deepEqual( Stem("irgendwie"), "irgendwi" );
	deepEqual( Stem("irgendwo"), "irgendwo" );
	deepEqual( Stem("irland"), "irland" );
	deepEqual( Stem("irländischen"), "irland" );
	deepEqual( Stem("irn"), "irn" );
	deepEqual( Stem("ironie"), "ironi" );
	deepEqual( Stem("ironisch"), "iron" );
	deepEqual( Stem("ironischen"), "iron" );
	deepEqual( Stem("irre"), "irr" );
	deepEqual( Stem("irreführendem"), "irrefuhr" );
	deepEqual( Stem("irregeführt"), "irregefuhrt" );
	deepEqual( Stem("irregeführte"), "irregefuhrt" );
	deepEqual( Stem("irreleitend"), "irreleit" );
	deepEqual( Stem("irren"), "irr" );
	deepEqual( Stem("irrenden"), "irrend" );
	deepEqual( Stem("irret"), "irret" );
	deepEqual( Stem("irrgänger"), "irrgang" );
	deepEqual( Stem("irrlehre"), "irrlehr" );
	deepEqual( Stem("irrlehren"), "irrlehr" );
	deepEqual( Stem("irrlichter"), "irrlicht" );
	deepEqual( Stem("irrlichterfischchen"), "irrlichterfischch" );
	deepEqual( Stem("irrsinnig"), "irrsinn" );
	deepEqual( Stem("irrt"), "irrt" );
	deepEqual( Stem("irrte"), "irrt" );
	deepEqual( Stem("irrten"), "irrt" );
	deepEqual( Stem("irrtum"), "irrtum" );
	deepEqual( Stem("irrtümer"), "irrtum" );
	deepEqual( Stem("irrtümern"), "irrtum" );
	deepEqual( Stem("irrwegen"), "irrweg" );
	deepEqual( Stem("is"), "is" );
	deepEqual( Stem("isabelle"), "isabell" );
	deepEqual( Stem("isabellen"), "isabell" );
	deepEqual( Stem("isabellengespann"), "isabellengespann" );
	deepEqual( Stem("isabellenpferden"), "isabellenpferd" );
	deepEqual( Stem("isgard"), "isgard" );
	deepEqual( Stem("isherwood"), "isherwood" );
	deepEqual( Stem("ismail"), "ismail" );
	deepEqual( Stem("isolation"), "isolation" );
	deepEqual( Stem("isolationistische"), "isolationist" );
	deepEqual( Stem("isoliert"), "isoliert" );
	deepEqual( Stem("israel"), "israel" );
	deepEqual( Stem("israeliten"), "israelit" );
	deepEqual( Stem("israelitische"), "israelit" );
	deepEqual( Stem("israelitischen"), "israelit" );
	deepEqual( Stem("israels"), "israel" );
	deepEqual( Stem("iss"), "iss" );
	deepEqual( Stem("issest"), "iss" );
	deepEqual( Stem("isset"), "isset" );
	deepEqual( Stem("isst"), "isst" );
	deepEqual( Stem("ißt"), "isst" );
	deepEqual( Stem("ist"), "ist" );
	deepEqual( Stem("istanbul"), "istanbul" );
	deepEqual( Stem("istanbuler"), "istanbul" );
	deepEqual( Stem("ists"), "ist" );
	deepEqual( Stem("italian"), "italian" );
	deepEqual( Stem("italien"), "itali" );
	deepEqual( Stem("italiener"), "itali" );
	deepEqual( Stem("italienisch"), "italien" );
	deepEqual( Stem("italienische"), "italien" );
	deepEqual( Stem("italienischen"), "italien" );
	deepEqual( Stem("italienisches"), "italien" );
	deepEqual( Stem("item"), "item" );
	deepEqual( Stem("ithamar"), "ithamar" );
	deepEqual( Stem("iv"), "iv" );
	deepEqual( Stem("ix"), "ix" );
	deepEqual( Stem("izmir"), "izmir" );
	deepEqual( Stem("j"), "j" );
	deepEqual( Stem("ja"), "ja" );
	deepEqual( Stem("jaaa"), "jaaa" );
	deepEqual( Stem("jabal"), "jabal" );
	deepEqual( Stem("jaccoud"), "jaccoud" );
	deepEqual( Stem("jach"), "jach" );
	deepEqual( Stem("jache"), "jach" );
	deepEqual( Stem("jachen"), "jach" );
	deepEqual( Stem("jachenau"), "jachenau" );
	deepEqual( Stem("jachenauer"), "jachenau" );
	deepEqual( Stem("jacher"), "jach" );
	deepEqual( Stem("jachin"), "jachin" );
	deepEqual( Stem("jachsten"), "jach" );
	deepEqual( Stem("jacke"), "jack" );
	deepEqual( Stem("jacobi"), "jacobi" );
	deepEqual( Stem("jadwiga"), "jadwiga" );
	deepEqual( Stem("jaels"), "jael" );
	deepEqual( Stem("jagd"), "jagd" );
	deepEqual( Stem("jagdart"), "jagdart" );
	deepEqual( Stem("jagdaufseher"), "jagdaufseh" );
	deepEqual( Stem("jagdausflügen"), "jagdausflug" );
	deepEqual( Stem("jagdausrüstung"), "jagdausrust" );
	deepEqual( Stem("jagdführer"), "jagdfuhr" );
	deepEqual( Stem("jagdgast"), "jagdgast" );
	deepEqual( Stem("jagdgebieten"), "jagdgebiet" );
	deepEqual( Stem("jagdgehilf"), "jagdgehilf" );
	deepEqual( Stem("jagdgehilfe"), "jagdgehilf" );
	deepEqual( Stem("jagdgehilfen"), "jagdgehilf" );
	deepEqual( Stem("jagdgeräte"), "jagdgerat" );
	deepEqual( Stem("jagdgeschichten"), "jagdgeschicht" );
	deepEqual( Stem("jagdgrenze"), "jagdgrenz" );
	deepEqual( Stem("jagdgrund"), "jagdgrund" );
	deepEqual( Stem("jagdherr"), "jagdherr" );
	deepEqual( Stem("jagdhütte"), "jagdhutt" );
	deepEqual( Stem("jagdkarte"), "jagdkart" );
	deepEqual( Stem("jagdtrophäen"), "jagdtropha" );
	deepEqual( Stem("jagdwagen"), "jagdwag" );
	deepEqual( Stem("jagen"), "jag" );
	deepEqual( Stem("jagend"), "jagend" );
	deepEqual( Stem("jagender"), "jagend" );
	deepEqual( Stem("jager"), "jag" );
	deepEqual( Stem("jäger"), "jag" );
	deepEqual( Stem("jägerarbeit"), "jagerarbeit" );
	deepEqual( Stem("jägerei"), "jagerei" );
	deepEqual( Stem("jägerheim"), "jagerheim" );
	deepEqual( Stem("jagerischen"), "jager" );
	deepEqual( Stem("jägerlatein"), "jagerlatein" );
	deepEqual( Stem("jägerleben"), "jagerleb" );
	deepEqual( Stem("jägermässigem"), "jagermass" );
	deepEqual( Stem("jagern"), "jag" );
	deepEqual( Stem("jägern"), "jag" );
	deepEqual( Stem("jägerohren"), "jagerohr" );
	deepEqual( Stem("jägerruhe"), "jagerruh" );
	deepEqual( Stem("jägers"), "jag" );
	deepEqual( Stem("jägersleute"), "jagersleut" );
	deepEqual( Stem("jägersmann"), "jagersmann" );
	deepEqual( Stem("jägersmanne"), "jagersmann" );
	deepEqual( Stem("jägersprache"), "jagersprach" );
	deepEqual( Stem("jägerssohn"), "jagerssohn" );
	deepEqual( Stem("jaget"), "jaget" );
	deepEqual( Stem("jagt"), "jagt" );
	deepEqual( Stem("jagte"), "jagt" );
	deepEqual( Stem("jah"), "jah" );
	deepEqual( Stem("jäh"), "jah" );
	deepEqual( Stem("jähen"), "jah" );
	deepEqual( Stem("jähes"), "jah" );
	deepEqual( Stem("jählings"), "jahling" );
	deepEqual( Stem("jahr"), "jahr" );
	deepEqual( Stem("jahraus"), "jahraus" );
	deepEqual( Stem("jährchen"), "jahrch" );
	deepEqual( Stem("jahre"), "jahr" );
	deepEqual( Stem("jahrein"), "jahrein" );
	deepEqual( Stem("jahrelang"), "jahrelang" );
	deepEqual( Stem("jahren"), "jahr" );
	deepEqual( Stem("jahres"), "jahr" );
	deepEqual( Stem("jahresbericht"), "jahresbericht" );
	deepEqual( Stem("jahresrechnung"), "jahresrechn" );
	deepEqual( Stem("jahresrente"), "jahresrent" );
	deepEqual( Stem("jahrestagung"), "jahrestag" );
	deepEqual( Stem("jahreszahlen"), "jahreszahl" );
	deepEqual( Stem("jahreszeit"), "jahreszeit" );
	deepEqual( Stem("jahrhundert"), "jahrhundert" );
	deepEqual( Stem("jahrhunderte"), "jahrhundert" );
	deepEqual( Stem("jahrhunderten"), "jahrhundert" );
	deepEqual( Stem("jahrhunderts"), "jahrhundert" );
	deepEqual( Stem("jährige"), "jahrig" );
	deepEqual( Stem("jährigen"), "jahrig" );
	deepEqual( Stem("jahrl"), "jahrl" );
	deepEqual( Stem("jährlich"), "jahrlich" );
	deepEqual( Stem("jährliche"), "jahrlich" );
	deepEqual( Stem("jahrln"), "jahrln" );
	deepEqual( Stem("jahrmarkt"), "jahrmarkt" );
	deepEqual( Stem("jahrmärkte"), "jahrmarkt" );
	deepEqual( Stem("jahrs"), "jahr" );
	deepEqual( Stem("jahrshoffnungen"), "jahrshoffn" );
	deepEqual( Stem("jahrszeit"), "jahrszeit" );
	deepEqual( Stem("jahrtausendwende"), "jahrtausendw" );
	deepEqual( Stem("jahrzahlen"), "jahrzahl" );
	deepEqual( Stem("jahrzehnten"), "jahrzehnt" );
	deepEqual( Stem("jähsten"), "jahst" );
	deepEqual( Stem("jähzorn"), "jahzorn" );
	deepEqual( Stem("jähzornig"), "jahzorn" );
	deepEqual( Stem("jähzornige"), "jahzorn" );
	deepEqual( Stem("jähzornigen"), "jahzorn" );
	deepEqual( Stem("jähzorniger"), "jahzorn" );
	deepEqual( Stem("jaja"), "jaja" );
	deepEqual( Stem("jakob"), "jakob" );
	deepEqual( Stem("jakobiner"), "jakobin" );
	deepEqual( Stem("jakobs"), "jakob" );
	deepEqual( Stem("jakobsbrunnen"), "jakobsbrunn" );
	deepEqual( Stem("jamin"), "jamin" );
	deepEqual( Stem("jammer"), "jamm" );
	deepEqual( Stem("jammerbild"), "jammerbild" );
	deepEqual( Stem("jammerfalten"), "jammerfalt" );
	deepEqual( Stem("jammergeschrei"), "jammergeschrei" );
	deepEqual( Stem("jämmerlich"), "jamm" );
	deepEqual( Stem("jämmerlichem"), "jamm" );
	deepEqual( Stem("jämmerlichen"), "jamm" );
	deepEqual( Stem("jämmerlicher"), "jamm" );
	deepEqual( Stem("jämmerliches"), "jamm" );
	deepEqual( Stem("jämmerlichste"), "jamm" );
	deepEqual( Stem("jammern"), "jamm" );
	deepEqual( Stem("jammernd"), "jammernd" );
	deepEqual( Stem("jammerpipps"), "jammerpipps" );
	deepEqual( Stem("jammerte"), "jammert" );
	deepEqual( Stem("januar"), "januar" );
	deepEqual( Stem("janzer"), "janz" );
	deepEqual( Stem("japanischer"), "japan" );
	deepEqual( Stem("japheth"), "japheth" );
	deepEqual( Stem("jappender"), "jappend" );
	deepEqual( Stem("jared"), "jared" );
	deepEqual( Stem("jareds"), "jared" );
	deepEqual( Stem("jaspis"), "jaspis" );
	deepEqual( Stem("jätete"), "jatet" );
	deepEqual( Stem("jatz"), "jatz" );
	deepEqual( Stem("jauchzen"), "jauchz" );
	deepEqual( Stem("jauchzend"), "jauchzend" );
	deepEqual( Stem("jauchzende"), "jauchzend" );
	deepEqual( Stem("jauchzer"), "jauchz" );
	deepEqual( Stem("jauchzet"), "jauchzet" );
	deepEqual( Stem("jaulte"), "jault" );
	deepEqual( Stem("javan"), "javan" );
	deepEqual( Stem("jawohl"), "jawohl" );
	deepEqual( Stem("je"), "je" );
	deepEqual( Stem("jean"), "jean" );
	deepEqual( Stem("jebusiter"), "jebusit" );
	deepEqual( Stem("jebusiters"), "jebusit" );
	deepEqual( Stem("jede"), "jed" );
	deepEqual( Stem("jedem"), "jed" );
	deepEqual( Stem("jeden"), "jed" );
	deepEqual( Stem("jedenfalls"), "jedenfall" );
	deepEqual( Stem("jeder"), "jed" );
	deepEqual( Stem("jedermann"), "jedermann" );
	deepEqual( Stem("jederzeit"), "jederzeit" );
	deepEqual( Stem("jedes"), "jed" );
	deepEqual( Stem("jedesmal"), "jedesmal" );
	deepEqual( Stem("jedoch"), "jedoch" );
	deepEqual( Stem("jedsmal"), "jedsmal" );
	deepEqual( Stem("jedweden"), "jedwed" );
	deepEqual( Stem("jedweder"), "jedwed" );
	deepEqual( Stem("jefreut"), "jefreut" );
	deepEqual( Stem("jegliche"), "jeglich" );
	deepEqual( Stem("jeglichem"), "jeglich" );
	deepEqual( Stem("jeglichen"), "jeglich" );
	deepEqual( Stem("jeglicher"), "jeglich" );
	deepEqual( Stem("jegliches"), "jeglich" );
	deepEqual( Stem("jeher"), "jeh" );
	deepEqual( Stem("jehorsamst"), "jehorsam" );
	deepEqual( Stem("jehova"), "jehova" );
	deepEqual( Stem("jehovah"), "jehovah" );
	deepEqual( Stem("jehovahs"), "jehovah" );
	deepEqual( Stem("jehovas"), "jehovas" );
	deepEqual( Stem("jehovih"), "jehovih" );
	deepEqual( Stem("jehudah"), "jehudah" );
	deepEqual( Stem("jehudahs"), "jehudah" );
	deepEqual( Stem("jehus"), "jehus" );
	deepEqual( Stem("jekühlte"), "jekuhlt" );
	deepEqual( Stem("jelek"), "jelek" );
	deepEqual( Stem("jemals"), "jemal" );
	deepEqual( Stem("jemand"), "jemand" );
	deepEqual( Stem("jemandem"), "jemand" );
	deepEqual( Stem("jemanden"), "jemand" );
	deepEqual( Stem("jemandes"), "jemand" );
	deepEqual( Stem("jemands"), "jemand" );
	deepEqual( Stem("jemuel"), "jemuel" );
	deepEqual( Stem("jene"), "jen" );
	deepEqual( Stem("jenem"), "jen" );
	deepEqual( Stem("jenen"), "jen" );
	deepEqual( Stem("jener"), "jen" );
	deepEqual( Stem("jenes"), "jen" );
	deepEqual( Stem("jenseitigen"), "jenseit" );
	deepEqual( Stem("jenseits"), "jenseit" );
	deepEqual( Stem("jereist"), "jereist" );
	deepEqual( Stem("jerem"), "jer" );
	deepEqual( Stem("jeremias"), "jeremias" );
	deepEqual( Stem("jerusalem"), "jerusal" );
	deepEqual( Stem("jerusalems"), "jerusalem" );
	deepEqual( Stem("jes"), "jes" );
	deepEqual( Stem("jesaja"), "jesaja" );
	deepEqual( Stem("jesajas"), "jesajas" );
	deepEqual( Stem("jesses"), "jess" );
	deepEqual( Stem("jesu"), "jesu" );
	deepEqual( Stem("jesum"), "jesum" );
	deepEqual( Stem("jesus"), "jesus" );
	deepEqual( Stem("jethro"), "jethro" );
	deepEqual( Stem("jethros"), "jethros" );
	deepEqual( Stem("jetzigen"), "jetzig" );
	deepEqual( Stem("jetziges"), "jetzig" );
	deepEqual( Stem("jetzo"), "jetzo" );
	deepEqual( Stem("jetzt"), "jetzt" );
	deepEqual( Stem("jeweilige"), "jeweil" );
	deepEqual( Stem("jeweiligen"), "jeweil" );
	deepEqual( Stem("jeweils"), "jeweil" );
	deepEqual( Stem("jewish"), "jewish" );
	deepEqual( Stem("jewriav"), "jewriav" );
	deepEqual( Stem("jez"), "jez" );
	deepEqual( Stem("jezuweilen"), "jezuweil" );
	deepEqual( Stem("jhdt"), "jhdt" );
	deepEqual( Stem("jim"), "jim" );
	deepEqual( Stem("jisaschar"), "jisaschar" );
	deepEqual( Stem("jischak"), "jischak" );
	deepEqual( Stem("jischaks"), "jischak" );
	deepEqual( Stem("jischmael"), "jischmael" );
	deepEqual( Stem("jischmaels"), "jischmael" );
	deepEqual( Stem("jizhar"), "jizhar" );
	deepEqual( Stem("jizhars"), "jizhar" );
	deepEqual( Stem("jletscherhafter"), "jletscherhaft" );
	deepEqual( Stem("jobbt"), "jobbt" );
	deepEqual( Stem("jobbte"), "jobbt" );
	deepEqual( Stem("jobs"), "job" );
	deepEqual( Stem("jobst"), "jobst" );
	deepEqual( Stem("jobsten"), "jobst" );
	deepEqual( Stem("jobstens"), "jobst" );
	deepEqual( Stem("joch"), "joch" );
	deepEqual( Stem("jochebed"), "jochebed" );
	deepEqual( Stem("joches"), "joch" );
	deepEqual( Stem("jochs"), "joch" );
	deepEqual( Stem("jodelläufen"), "jodellauf" );
	deepEqual( Stem("jodler"), "jodl" );
	deepEqual( Stem("joel"), "joel" );
	deepEqual( Stem("joh"), "joh" );
	deepEqual( Stem("johann"), "johann" );
	deepEqual( Stem("johannes"), "johann" );
	deepEqual( Stem("johannis"), "johannis" );
	deepEqual( Stem("johlend"), "johlend" );
	deepEqual( Stem("john"), "john" );
	deepEqual( Stem("jon"), "jon" );
	deepEqual( Stem("jona"), "jona" );
	deepEqual( Stem("jonas"), "jonas" );
	deepEqual( Stem("jonathan"), "jonathan" );
	deepEqual( Stem("jöppchens"), "joppch" );
	deepEqual( Stem("joppe"), "jopp" );
	deepEqual( Stem("joppentasche"), "joppentasch" );
	deepEqual( Stem("jordan"), "jordan" );
	deepEqual( Stem("jordans"), "jordan" );
	deepEqual( Stem("jörg"), "jorg" );
	deepEqual( Stem("jos"), "jos" );
	deepEqual( Stem("josef"), "josef" );
	deepEqual( Stem("joseph"), "joseph" );
	deepEqual( Stem("josephs"), "joseph" );
	deepEqual( Stem("josias"), "josias" );
	deepEqual( Stem("josua"), "josua" );
	deepEqual( Stem("josuas"), "josuas" );
	deepEqual( Stem("jota"), "jota" );
	deepEqual( Stem("journalisten"), "journalist" );
	deepEqual( Stem("jreuliche"), "jreulich" );
	deepEqual( Stem("juan"), "juan" );
	deepEqual( Stem("jubal"), "jubal" );
	deepEqual( Stem("jubel"), "jubel" );
	deepEqual( Stem("jubelfeier"), "jubelfei" );
	deepEqual( Stem("jubelfreude"), "jubelfreud" );
	deepEqual( Stem("jubelnd"), "jubelnd" );
	deepEqual( Stem("jubelnder"), "jubelnd" );
	deepEqual( Stem("jubelsang"), "jubelsang" );
	deepEqual( Stem("jubelschrei"), "jubelschrei" );
	deepEqual( Stem("jubelt"), "jubelt" );
	deepEqual( Stem("jubelten"), "jubelt" );
	deepEqual( Stem("jubilieren"), "jubili" );
	deepEqual( Stem("jubilierende"), "jubilier" );
	deepEqual( Stem("juble"), "jubl" );
	deepEqual( Stem("juchezt"), "juchezt" );
	deepEqual( Stem("juchheen"), "juchhe" );
	deepEqual( Stem("juchhei"), "juchhei" );
	deepEqual( Stem("juchzend"), "juchzend" );
	deepEqual( Stem("jückt"), "juckt" );
	deepEqual( Stem("judah"), "judah" );
	deepEqual( Stem("judas"), "judas" );
	deepEqual( Stem("jude"), "jud" );
	deepEqual( Stem("juden"), "jud" );
	deepEqual( Stem("judentum"), "judentum" );
	deepEqual( Stem("jüdisch"), "judisch" );
	deepEqual( Stem("jüdische"), "judisch" );
	deepEqual( Stem("jüdischen"), "judisch" );
	deepEqual( Stem("jüdischer"), "judisch" );
	deepEqual( Stem("jüdisches"), "judisch" );
	deepEqual( Stem("judith"), "judith" );
	deepEqual( Stem("judithsie"), "judithsi" );
	deepEqual( Stem("jugend"), "jugend" );
	deepEqual( Stem("jugendarbeit"), "jugendarbeit" );
	deepEqual( Stem("jugendgarten"), "jugendgart" );
	deepEqual( Stem("jugendgespielen"), "jugendgespiel" );
	deepEqual( Stem("jugendheimat"), "jugendheimat" );
	deepEqual( Stem("jugendliche"), "jugend" );
	deepEqual( Stem("jugendlichen"), "jugend" );
	deepEqual( Stem("jugendlicher"), "jugend" );
	deepEqual( Stem("jugendlichkeit"), "jugend" );
	deepEqual( Stem("jugendschutzmassnahmen"), "jugendschutzmassnahm" );
	deepEqual( Stem("jugendweihe"), "jugendweih" );
	deepEqual( Stem("jugendzeit"), "jugendzeit" );
	deepEqual( Stem("juju"), "juju" );
	deepEqual( Stem("juli"), "juli" );
	deepEqual( Stem("julia"), "julia" );
	deepEqual( Stem("julie"), "juli" );
	deepEqual( Stem("julimonat"), "julimonat" );
	deepEqual( Stem("julisonne"), "julisonn" );
	deepEqual( Stem("julitag"), "julitag" );
	deepEqual( Stem("julius"), "julius" );
	deepEqual( Stem("juliusstrasse"), "juliusstrass" );
	deepEqual( Stem("juliusstraße"), "juliusstrass" );
	deepEqual( Stem("jumoeidev"), "jumoeidev" );
	deepEqual( Stem("jung"), "jung" );
	deepEqual( Stem("junge"), "jung" );
	deepEqual( Stem("jungem"), "jung" );
	deepEqual( Stem("jungen"), "jung" );
	deepEqual( Stem("jungeninternat"), "jungeninternat" );
	deepEqual( Stem("junger"), "jung" );
	deepEqual( Stem("jünger"), "jung" );
	deepEqual( Stem("jüngere"), "jung" );
	deepEqual( Stem("jüngern"), "jung" );
	deepEqual( Stem("junges"), "jung" );
	deepEqual( Stem("jungfer"), "jungf" );
	deepEqual( Stem("jungfern"), "jungf" );
	deepEqual( Stem("jungfilmer"), "jungfilm" );
	deepEqual( Stem("jungfrau"), "jungfrau" );
	deepEqual( Stem("jungfrauen"), "jungfrau" );
	deepEqual( Stem("jungfrauenalters"), "jungfrauenalt" );
	deepEqual( Stem("jungfräulein"), "jungfraulein" );
	deepEqual( Stem("jungfrauschaft"), "jungfrauschaft" );
	deepEqual( Stem("junggesellen"), "junggesell" );
	deepEqual( Stem("jungholz"), "jungholz" );
	deepEqual( Stem("jüngling"), "jungling" );
	deepEqual( Stem("jünglinge"), "jungling" );
	deepEqual( Stem("jünglings"), "jungling" );
	deepEqual( Stem("jünglingsalter"), "junglingsalt" );
	deepEqual( Stem("jüngste"), "jung" );
	deepEqual( Stem("jüngsten"), "jung" );
	deepEqual( Stem("jüngster"), "jung" );
	deepEqual( Stem("jungunternehmer"), "jungunternehm" );
	deepEqual( Stem("jungweibe"), "jungweib" );
	deepEqual( Stem("juni"), "juni" );
	deepEqual( Stem("junker"), "junk" );
	deepEqual( Stem("jüppe"), "jupp" );
	deepEqual( Stem("jürgen"), "jurg" );
	deepEqual( Stem("juristen"), "jurist" );
	deepEqual( Stem("juristische"), "jurist" );
	deepEqual( Stem("juristischen"), "jurist" );
	deepEqual( Stem("just"), "just" );
	deepEqual( Stem("juvenes"), "juv" );
	deepEqual( Stem("k"), "k" );
	deepEqual( Stem("kabine"), "kabin" );
	deepEqual( Stem("kabylen"), "kabyl" );
	deepEqual( Stem("kachelofen"), "kachelof" );
	deepEqual( Stem("käfer"), "kaf" );
	deepEqual( Stem("käferchen"), "kaferch" );
	deepEqual( Stem("käferherzens"), "kaferherz" );
	deepEqual( Stem("käferlein"), "kaferlein" );
	deepEqual( Stem("käfermann"), "kafermann" );
	deepEqual( Stem("käfermatz"), "kafermatz" );
	deepEqual( Stem("käfern"), "kaf" );
	deepEqual( Stem("käfertierchen"), "kafertierch" );
	deepEqual( Stem("kaffee"), "kaffe" );
	deepEqual( Stem("kaffeegesellschaften"), "kaffeegesellschaft" );
	deepEqual( Stem("kaffeehaus"), "kaffeehaus" );
	deepEqual( Stem("kaffeehauses"), "kaffeehaus" );
	deepEqual( Stem("kaffeekanne"), "kaffeekann" );
	deepEqual( Stem("kaffeekannen"), "kaffeekann" );
	deepEqual( Stem("kaffeeklatsch"), "kaffeeklatsch" );
	deepEqual( Stem("kaffeelöffelchen"), "kaffeeloffelch" );
	deepEqual( Stem("kaffeetasse"), "kaffeetass" );
	deepEqual( Stem("käfig"), "kafig" );
	deepEqual( Stem("kafka"), "kafka" );
	deepEqual( Stem("kahl"), "kahl" );
	deepEqual( Stem("kahle"), "kahl" );
	deepEqual( Stem("kahlen"), "kahl" );
	deepEqual( Stem("kahlköpfiger"), "kahlkopf" );
	deepEqual( Stem("kahn"), "kahn" );
	deepEqual( Stem("kähnchens"), "kahnch" );
	deepEqual( Stem("kahne"), "kahn" );
	deepEqual( Stem("kai"), "kai" );
	deepEqual( Stem("kain"), "kain" );
	deepEqual( Stem("kainiten"), "kainit" );
	deepEqual( Stem("kains"), "kain" );
	deepEqual( Stem("kaiser"), "kais" );
	deepEqual( Stem("kaiserlichen"), "kais" );
	deepEqual( Stem("kaiserreich"), "kaiserreich" );
	deepEqual( Stem("kaiserstadt"), "kaiserstadt" );
	deepEqual( Stem("kakan"), "kakan" );
	deepEqual( Stem("kakaobüchse"), "kakaobuchs" );
	deepEqual( Stem("kalaschnikows"), "kalaschnikows" );
	deepEqual( Stem("kalb"), "kalb" );
	deepEqual( Stem("kalben"), "kalb" );
	deepEqual( Stem("kälbern"), "kalb" );
	deepEqual( Stem("kälberstücke"), "kalberstuck" );
	deepEqual( Stem("kalbes"), "kalb" );
	deepEqual( Stem("kalender"), "kalend" );
	deepEqual( Stem("kalifornien"), "kaliforni" );
	deepEqual( Stem("kalk"), "kalk" );
	deepEqual( Stem("kalkerde"), "kalkerd" );
	deepEqual( Stem("kalmus"), "kalmus" );
	deepEqual( Stem("kalt"), "kalt" );
	deepEqual( Stem("kaltblütig"), "kaltblut" );
	deepEqual( Stem("kalte"), "kalt" );
	deepEqual( Stem("kälte"), "kalt" );
	deepEqual( Stem("kalten"), "kalt" );
	deepEqual( Stem("kaltenkellerschlag"), "kaltenkellerschlag" );
	deepEqual( Stem("kalter"), "kalt" );
	deepEqual( Stem("kälter"), "kalt" );
	deepEqual( Stem("kaltes"), "kalt" );
	deepEqual( Stem("kam"), "kam" );
	deepEqual( Stem("käm"), "kam" );
	deepEqual( Stem("kämbel"), "kambel" );
	deepEqual( Stem("käme"), "kam" );
	deepEqual( Stem("kamel"), "kamel" );
	deepEqual( Stem("kamele"), "kamel" );
	deepEqual( Stem("kamelen"), "kamel" );
	deepEqual( Stem("kamelhaaren"), "kamelhaar" );
	deepEqual( Stem("kamen"), "kam" );
	deepEqual( Stem("kämen"), "kam" );
	deepEqual( Stem("kameraden"), "kamerad" );
	deepEqual( Stem("kameraderie"), "kameraderi" );
	deepEqual( Stem("kameradinnen"), "kameradinn" );
	deepEqual( Stem("kamet"), "kamet" );
	deepEqual( Stem("kaminer"), "kamin" );
	deepEqual( Stem("kaminfeger"), "kaminfeg" );
	deepEqual( Stem("kamins"), "kamin" );
	deepEqual( Stem("kamm"), "kamm" );
	deepEqual( Stem("kämma"), "kamma" );
	deepEqual( Stem("kammacher"), "kammach" );
	deepEqual( Stem("kammachergeschäft"), "kammachergeschaft" );
	deepEqual( Stem("kammachergeschäfts"), "kammachergeschaft" );
	deepEqual( Stem("kammachermeister"), "kammachermeist" );
	deepEqual( Stem("kämme"), "kamm" );
	deepEqual( Stem("kämmen"), "kamm" );
	deepEqual( Stem("kammer"), "kamm" );
	deepEqual( Stem("kammerbodens"), "kammerbod" );
	deepEqual( Stem("kämmerchen"), "kammerch" );
	deepEqual( Stem("kammerdiener"), "kammerdi" );
	deepEqual( Stem("kammerfrau"), "kammerfrau" );
	deepEqual( Stem("kammerjungfer"), "kammerjungf" );
	deepEqual( Stem("kammern"), "kamm" );
	deepEqual( Stem("kämmet"), "kammet" );
	deepEqual( Stem("kammfabrikchen"), "kammfabrikch" );
	deepEqual( Stem("kammgräsern"), "kammgras" );
	deepEqual( Stem("kammhöhe"), "kammhoh" );
	deepEqual( Stem("kammmacher"), "kammmach" );
	deepEqual( Stem("kämmte"), "kammt" );
	deepEqual( Stem("kammwaren"), "kammwar" );
	deepEqual( Stem("kammwiesen"), "kammwies" );
	deepEqual( Stem("kampagne"), "kampagn" );
	deepEqual( Stem("kampf"), "kampf" );
	deepEqual( Stem("kampfe"), "kampf" );
	deepEqual( Stem("kämpfe"), "kampf" );
	deepEqual( Stem("kämpfen"), "kampf" );
	deepEqual( Stem("kämpfende"), "kampfend" );
	deepEqual( Stem("kämpfer"), "kampf" );
	deepEqual( Stem("kampfes"), "kampf" );
	deepEqual( Stem("kampflust"), "kampflust" );
	deepEqual( Stem("kampfplatz"), "kampfplatz" );
	deepEqual( Stem("kampfplatze"), "kampfplatz" );
	deepEqual( Stem("kämpft"), "kampft" );
	deepEqual( Stem("kampftages"), "kampftag" );
	deepEqual( Stem("kämpfte"), "kampft" );
	deepEqual( Stem("kampfwahlen"), "kampfwahl" );
	deepEqual( Stem("kampierten"), "kampiert" );
	deepEqual( Stem("kanaan"), "kanaan" );
	deepEqual( Stem("kanaaniter"), "kanaanit" );
	deepEqual( Stem("kanaanitin"), "kanaanitin" );
	deepEqual( Stem("kanaans"), "kanaan" );
	deepEqual( Stem("kanal"), "kanal" );
	deepEqual( Stem("kanäle"), "kanal" );
	deepEqual( Stem("kanapee"), "kanape" );
	deepEqual( Stem("kanarienkäficht"), "kanarienkaficht" );
	deepEqual( Stem("kandidat"), "kandidat" );
	deepEqual( Stem("kaninchen"), "kaninch" );
	deepEqual( Stem("kann"), "kann" );
	deepEqual( Stem("kännchen"), "kannch" );
	deepEqual( Stem("kanne"), "kann" );
	deepEqual( Stem("kannegiesser"), "kannegiess" );
	deepEqual( Stem("kannegiesserin"), "kannegiesserin" );
	deepEqual( Stem("kannegiessern"), "kannegiess" );
	deepEqual( Stem("kannen"), "kann" );
	deepEqual( Stem("kannst"), "kann" );
	deepEqual( Stem("kannt"), "kannt" );
	deepEqual( Stem("kannte"), "kannt" );
	deepEqual( Stem("kannten"), "kannt" );
	deepEqual( Stem("kanone"), "kanon" );
	deepEqual( Stem("kanonenkügelchen"), "kanonenkugelch" );
	deepEqual( Stem("kanonenkugeln"), "kanonenkugeln" );
	deepEqual( Stem("kanonenlauf"), "kanonenlauf" );
	deepEqual( Stem("kanonenmündung"), "kanonenmund" );
	deepEqual( Stem("kanonenrohres"), "kanonenrohr" );
	deepEqual( Stem("kanonenwischer"), "kanonenw" );
	deepEqual( Stem("kanonik"), "kanon" );
	deepEqual( Stem("kant"), "kant" );
	deepEqual( Stem("kante"), "kant" );
	deepEqual( Stem("kanten"), "kant" );
	deepEqual( Stem("kantine"), "kantin" );
	deepEqual( Stem("kantinenraumes"), "kantinenraum" );
	deepEqual( Stem("kanton"), "kanton" );
	deepEqual( Stem("kantonalkirche"), "kantonalkirch" );
	deepEqual( Stem("kantonalkirchen"), "kantonalkirch" );
	deepEqual( Stem("kantonalsouveränetät"), "kantonalsouveranetat" );
	deepEqual( Stem("kantone"), "kanton" );
	deepEqual( Stem("kantons"), "kanton" );
	deepEqual( Stem("kantonsrats"), "kantonsrat" );
	deepEqual( Stem("kanzel"), "kanzel" );
	deepEqual( Stem("kanzlei"), "kanzlei" );
	deepEqual( Stem("kanzleidirektor"), "kanzleidirektor" );
	deepEqual( Stem("kanzleien"), "kanzlei" );
	deepEqual( Stem("kap"), "kap" );
	deepEqual( Stem("kapital"), "kapital" );
	deepEqual( Stem("kapitale"), "kapital" );
	deepEqual( Stem("kapitalist"), "kapitalist" );
	deepEqual( Stem("kapitaltier"), "kapitalti" );
	deepEqual( Stem("kapitän"), "kapitan" );
	deepEqual( Stem("kapitel"), "kapitel" );
	deepEqual( Stem("kapiteln"), "kapiteln" );
	deepEqual( Stem("kapitels"), "kapitel" );
	deepEqual( Stem("kapitelsherren"), "kapitelsherr" );
	deepEqual( Stem("kappe"), "kapp" );
	deepEqual( Stem("kappenzipfel"), "kappenzipfel" );
	deepEqual( Stem("käpplein"), "kapplein" );
	deepEqual( Stem("kapriolen"), "kapriol" );
	deepEqual( Stem("kapsel"), "kapsel" );
	deepEqual( Stem("kaputt"), "kaputt" );
	deepEqual( Stem("kaputtgehen"), "kaputtgeh" );
	deepEqual( Stem("karaffe"), "karaff" );
	deepEqual( Stem("karaffen"), "karaff" );
	deepEqual( Stem("karbonarimantel"), "karbonarimantel" );
	deepEqual( Stem("kardinäle"), "kardinal" );
	deepEqual( Stem("karfunkelsteinen"), "karfunkelstein" );
	deepEqual( Stem("karikiere"), "kariki" );
	deepEqual( Stem("karl"), "karl" );
	deepEqual( Stem("karmi"), "karmi" );
	deepEqual( Stem("karneolfarbigen"), "karneolfarb" );
	deepEqual( Stem("karneval"), "karneval" );
	deepEqual( Stem("karpfen"), "karpf" );
	deepEqual( Stem("karpfenururgrosspapa"), "karpfenururgrosspapa" );
	deepEqual( Stem("karren"), "karr" );
	deepEqual( Stem("karriere"), "karri" );
	deepEqual( Stem("karten"), "kart" );
	deepEqual( Stem("kartenschlagen"), "kartenschlag" );
	deepEqual( Stem("kartoffel"), "kartoffel" );
	deepEqual( Stem("kartoffelacker"), "kartoffelack" );
	deepEqual( Stem("kartoffelbrei"), "kartoffelbrei" );
	deepEqual( Stem("kartoffelfeld"), "kartoffelfeld" );
	deepEqual( Stem("kartoffelgebirge"), "kartoffelgebirg" );
	deepEqual( Stem("kartoffeln"), "kartoffeln" );
	deepEqual( Stem("kartoffelsuppe"), "kartoffelsupp" );
	deepEqual( Stem("karton"), "karton" );
	deepEqual( Stem("kartons"), "karton" );
	deepEqual( Stem("karussell"), "karussell" );
	deepEqual( Stem("käse"), "kas" );
	deepEqual( Stem("käsen"), "kas" );
	deepEqual( Stem("kasia"), "kasia" );
	deepEqual( Stem("kaspar"), "kaspar" );
	deepEqual( Stem("kasparn"), "kasparn" );
	deepEqual( Stem("käsrinde"), "kasrind" );
	deepEqual( Stem("kassberger"), "kassberg" );
	deepEqual( Stem("kasse"), "kass" );
	deepEqual( Stem("kassieren"), "kassi" );
	deepEqual( Stem("kassierer"), "kassi" );
	deepEqual( Stem("kastanie"), "kastani" );
	deepEqual( Stem("kastanien"), "kastani" );
	deepEqual( Stem("kastanienbäume"), "kastanienbaum" );
	deepEqual( Stem("kastanienblättern"), "kastanienblatt" );
	deepEqual( Stem("kastanienritter"), "kastanienritt" );
	deepEqual( Stem("kästchen"), "kastch" );
	deepEqual( Stem("kästchens"), "kastch" );
	deepEqual( Stem("kasten"), "kast" );
	deepEqual( Stem("kastens"), "kast" );
	deepEqual( Stem("kasuale"), "kasual" );
	deepEqual( Stem("kasualverschiebung"), "kasualverschieb" );
	deepEqual( Stem("kasus"), "kasus" );
	deepEqual( Stem("kasweiss"), "kasweiss" );
	deepEqual( Stem("katalog"), "katalog" );
	deepEqual( Stem("kataskeuazein"), "kataskeuazein" );
	deepEqual( Stem("kataskeuazomen"), "kataskeuazom" );
	deepEqual( Stem("katastrophal"), "katastrophal" );
	deepEqual( Stem("katastrophe"), "katastroph" );
	deepEqual( Stem("katastrophen"), "katastroph" );
	deepEqual( Stem("katastropheneinsatz"), "katastropheneinsatz" );
	deepEqual( Stem("katechismus"), "katechismus" );
	deepEqual( Stem("kategorie"), "kategori" );
	deepEqual( Stem("kategorien"), "kategori" );
	deepEqual( Stem("kategorisch"), "kategor" );
	deepEqual( Stem("kategorische"), "kategor" );
	deepEqual( Stem("kategorischen"), "kategor" );
	deepEqual( Stem("kategorischer"), "kategor" );
	deepEqual( Stem("kater"), "kat" );
	deepEqual( Stem("katerliede"), "katerlied" );
	deepEqual( Stem("katern"), "kat" );
	deepEqual( Stem("katers"), "kat" );
	deepEqual( Stem("käthchen"), "kathch" );
	deepEqual( Stem("kathedrale"), "kathedral" );
	deepEqual( Stem("kathinka"), "kathinka" );
	deepEqual( Stem("katholik"), "kathol" );
	deepEqual( Stem("katholische"), "kathol" );
	deepEqual( Stem("katholischen"), "kathol" );
	deepEqual( Stem("katholischer"), "kathol" );
	deepEqual( Stem("kattun"), "kattun" );
	deepEqual( Stem("kattunhalstücher"), "kattunhalstuch" );
	deepEqual( Stem("katz"), "katz" );
	deepEqual( Stem("kätzchen"), "katzch" );
	deepEqual( Stem("kätzchens"), "katzch" );
	deepEqual( Stem("katze"), "katz" );
	deepEqual( Stem("katzen"), "katz" );
	deepEqual( Stem("katzenschmer"), "katzenschm" );
	deepEqual( Stem("katzensprung"), "katzenspr" );
	deepEqual( Stem("katzenwürde"), "katzenwurd" );
	deepEqual( Stem("kätzin"), "katzin" );
	deepEqual( Stem("kätzlein"), "katzlein" );
	deepEqual( Stem("katzmann"), "katzmann" );
	deepEqual( Stem("kauen"), "kau" );
	deepEqual( Stem("kauerte"), "kauert" );
	deepEqual( Stem("kauf"), "kauf" );
	deepEqual( Stem("kaufe"), "kauf" );
	deepEqual( Stem("kaufen"), "kauf" );
	deepEqual( Stem("käufer"), "kauf" );
	deepEqual( Stem("kauffahrer"), "kauffahr" );
	deepEqual( Stem("kaufherr"), "kaufherr" );
	deepEqual( Stem("kaufleute"), "kaufleut" );
	deepEqual( Stem("käuflich"), "kauflich" );
	deepEqual( Stem("kaufmann"), "kaufmann" );
	deepEqual( Stem("kaufmanns"), "kaufmann" );
	deepEqual( Stem("kaufmannschaft"), "kaufmannschaft" );
	deepEqual( Stem("kaufmannsnamen"), "kaufmannsnam" );
	deepEqual( Stem("kaufpreis"), "kaufpreis" );
	deepEqual( Stem("kaufpreises"), "kaufpreis" );
	deepEqual( Stem("kaufst"), "kauf" );
	deepEqual( Stem("kauft"), "kauft" );
	deepEqual( Stem("kaufte"), "kauft" );
	deepEqual( Stem("kaum"), "kaum" );
	deepEqual( Stem("kausalbegriffe"), "kausalbegriff" );
	deepEqual( Stem("kausalität"), "kausalitat" );
	deepEqual( Stem("kausalverbindung"), "kausalverbind" );
	deepEqual( Stem("kausalverhältnisse"), "kausalverhaltnis" );
	deepEqual( Stem("kaute"), "kaut" );
	deepEqual( Stem("kaution"), "kaution" );
	deepEqual( Stem("käuze"), "kauz" );
	deepEqual( Stem("käuzen"), "kauz" );
	deepEqual( Stem("käuzlein"), "kauzlein" );
	deepEqual( Stem("kavalier"), "kavali" );
	deepEqual( Stem("kavaliere"), "kavali" );
	deepEqual( Stem("kaweida"), "kaweida" );
	deepEqual( Stem("kdv"), "kdv" );
	deepEqual( Stem("keck"), "keck" );
	deepEqual( Stem("kecken"), "keck" );
	deepEqual( Stem("keckes"), "keck" );
	deepEqual( Stem("kedars"), "kedar" );
	deepEqual( Stem("kegel"), "kegel" );
	deepEqual( Stem("kegelbahn"), "kegelbahn" );
	deepEqual( Stem("kegelbahnen"), "kegelbahn" );
	deepEqual( Stem("kegelpartie"), "kegelparti" );
	deepEqual( Stem("kegelspiel"), "kegelspiel" );
	deepEqual( Stem("kehath"), "kehath" );
	deepEqual( Stem("kehaths"), "kehath" );
	deepEqual( Stem("kehats"), "kehat" );
	deepEqual( Stem("kehle"), "kehl" );
	deepEqual( Stem("kehlen"), "kehl" );
	deepEqual( Stem("kehr"), "kehr" );
	deepEqual( Stem("kehre"), "kehr" );
	deepEqual( Stem("kehren"), "kehr" );
	deepEqual( Stem("kehret"), "kehret" );
	deepEqual( Stem("kehricht"), "kehricht" );
	deepEqual( Stem("kehrseite"), "kehrseit" );
	deepEqual( Stem("kehrt"), "kehrt" );
	deepEqual( Stem("kehrte"), "kehrt" );
	deepEqual( Stem("kehrten"), "kehrt" );
	deepEqual( Stem("kei"), "kei" );
	deepEqual( Stem("keim"), "keim" );
	deepEqual( Stem("kein"), "kein" );
	deepEqual( Stem("keine"), "kein" );
	deepEqual( Stem("keinem"), "kein" );
	deepEqual( Stem("keinen"), "kein" );
	deepEqual( Stem("keiner"), "kein" );
	deepEqual( Stem("keinerlei"), "keinerlei" );
	deepEqual( Stem("keines"), "kein" );
	deepEqual( Stem("keinesfalls"), "keinesfall" );
	deepEqual( Stem("keineswegs"), "keinesweg" );
	deepEqual( Stem("keins"), "kein" );
	deepEqual( Stem("keksdose"), "keksdos" );
	deepEqual( Stem("kelch"), "kelch" );
	deepEqual( Stem("keller"), "kell" );
	deepEqual( Stem("kellereien"), "kellerei" );
	deepEqual( Stem("kellerhals"), "kellerhal" );
	deepEqual( Stem("kellerpflanzen"), "kellerpflanz" );
	deepEqual( Stem("kellner"), "kelln" );
	deepEqual( Stem("kellnerin"), "kellnerin" );
	deepEqual( Stem("kellnerinnen"), "kellnerinn" );
	deepEqual( Stem("kelter"), "kelt" );
	deepEqual( Stem("keltern"), "kelt" );
	deepEqual( Stem("kenan"), "kenan" );
	deepEqual( Stem("kenans"), "kenan" );
	deepEqual( Stem("kenn"), "kenn" );
	deepEqual( Stem("kennbar"), "kennbar" );
	deepEqual( Stem("kenne"), "kenn" );
	deepEqual( Stem("kennen"), "kenn" );
	deepEqual( Stem("kennenlernen"), "kennenlern" );
	deepEqual( Stem("kennens"), "kenn" );
	deepEqual( Stem("kennenzulernen"), "kennenzulern" );
	deepEqual( Stem("kenner"), "kenn" );
	deepEqual( Stem("kennerblicken"), "kennerblick" );
	deepEqual( Stem("kennest"), "kenn" );
	deepEqual( Stem("kennete"), "kennet" );
	deepEqual( Stem("kennst"), "kenn" );
	deepEqual( Stem("kennt"), "kennt" );
	deepEqual( Stem("kenntlich"), "kenntlich" );
	deepEqual( Stem("kenntnis"), "kenntnis" );
	deepEqual( Stem("kenntnisse"), "kenntnis" );
	deepEqual( Stem("kenntnissen"), "kenntnis" );
	deepEqual( Stem("kennzeichen"), "kennzeich" );
	deepEqual( Stem("kerbholz"), "kerbholz" );
	deepEqual( Stem("kerker"), "kerk" );
	deepEqual( Stem("kerkern"), "kerk" );
	deepEqual( Stem("kerl"), "kerl" );
	deepEqual( Stem("kerlchen"), "kerlch" );
	deepEqual( Stem("kerls"), "kerl" );
	deepEqual( Stem("kern"), "kern" );
	deepEqual( Stem("kernpunkt"), "kernpunkt" );
	deepEqual( Stem("kerstin"), "kerstin" );
	deepEqual( Stem("kerze"), "kerz" );
	deepEqual( Stem("kerzen"), "kerz" );
	deepEqual( Stem("kesselflicken"), "kesselflick" );
	deepEqual( Stem("kesselförmiges"), "kesselform" );
	deepEqual( Stem("kesseltal"), "kesseltal" );
	deepEqual( Stem("kesselvolk"), "kesselvolk" );
	deepEqual( Stem("kette"), "kett" );
	deepEqual( Stem("ketten"), "kett" );
	deepEqual( Stem("kettlein"), "kettlein" );
	deepEqual( Stem("ketzer"), "ketz" );
	deepEqual( Stem("ketzerei"), "ketzerei" );
	deepEqual( Stem("ketzereien"), "ketzerei" );
	deepEqual( Stem("ketzerische"), "ketzer" );
	deepEqual( Stem("ketzerischen"), "ketzer" );
	deepEqual( Stem("keuchend"), "keuchend" );
	deepEqual( Stem("keuchenden"), "keuchend" );
	deepEqual( Stem("keuchte"), "keucht" );
	deepEqual( Stem("keulenkörner"), "keulenkorn" );
	deepEqual( Stem("keuschheit"), "keuschheit" );
	deepEqual( Stem("kg"), "kg" );
	deepEqual( Stem("kichern"), "kich" );
	deepEqual( Stem("kids"), "kid" );
	deepEqual( Stem("kiel"), "kiel" );
	deepEqual( Stem("kielwasser"), "kielwass" );
	deepEqual( Stem("kienholzgefüllten"), "kienholzgefullt" );
	deepEqual( Stem("kiepenheuer"), "kiepenheu" );
	deepEqual( Stem("kiesel"), "kiesel" );
	deepEqual( Stem("kieseln"), "kieseln" );
	deepEqual( Stem("kieselstein"), "kieselstein" );
	deepEqual( Stem("kiesige"), "kiesig" );
	deepEqual( Stem("kieswege"), "kiesweg" );
	deepEqual( Stem("kikeriki"), "kikeriki" );
	deepEqual( Stem("kilo"), "kilo" );
	deepEqual( Stem("kilometer"), "kilomet" );
	deepEqual( Stem("kind"), "kind" );
	deepEqual( Stem("kindchen"), "kindch" );
	deepEqual( Stem("kinde"), "kind" );
	deepEqual( Stem("kinder"), "kind" );
	deepEqual( Stem("kinderaugen"), "kinderaug" );
	deepEqual( Stem("kinderchen"), "kinderch" );
	deepEqual( Stem("kinderfest"), "kinderf" );
	deepEqual( Stem("kindergärten"), "kindergart" );
	deepEqual( Stem("kinderjahren"), "kinderjahr" );
	deepEqual( Stem("kinderkehlen"), "kinderkehl" );
	deepEqual( Stem("kinderlein"), "kinderlein" );
	deepEqual( Stem("kinderlos"), "kinderlos" );
	deepEqual( Stem("kinderlosigkeit"), "kinderlos" );
	deepEqual( Stem("kindern"), "kind" );
	deepEqual( Stem("kinderschar"), "kinderschar" );
	deepEqual( Stem("kinderspiel"), "kinderspiel" );
	deepEqual( Stem("kinderstimmengelächter"), "kinderstimmengelacht" );
	deepEqual( Stem("kinderstube"), "kinderstub" );
	deepEqual( Stem("kinderstühlchen"), "kinderstuhlch" );
	deepEqual( Stem("kindertaufen"), "kindertauf" );
	deepEqual( Stem("kinderwägelchen"), "kinderwagelch" );
	deepEqual( Stem("kinderwäsche"), "kinderwasch" );
	deepEqual( Stem("kinderzeit"), "kinderzeit" );
	deepEqual( Stem("kinderzimmerchen"), "kinderzimmerch" );
	deepEqual( Stem("kindes"), "kind" );
	deepEqual( Stem("kindesbeinen"), "kindesbein" );
	deepEqual( Stem("kindesgedanken"), "kindesgedank" );
	deepEqual( Stem("kindesstatt"), "kindesstatt" );
	deepEqual( Stem("kindestreue"), "kindestreu" );
	deepEqual( Stem("kindheit"), "kindheit" );
	deepEqual( Stem("kindisch"), "kindisch" );
	deepEqual( Stem("kindische"), "kindisch" );
	deepEqual( Stem("kindischer"), "kindisch" );
	deepEqual( Stem("kindlein"), "kindlein" );
	deepEqual( Stem("kindlich"), "kindlich" );
	deepEqual( Stem("kindliche"), "kindlich" );
	deepEqual( Stem("kindlichen"), "kindlich" );
	deepEqual( Stem("kindliches"), "kindlich" );
	deepEqual( Stem("kindlichkeit"), "kindlich" );
	deepEqual( Stem("kindskopf"), "kindskopf" );
	deepEqual( Stem("kinn"), "kinn" );
	deepEqual( Stem("kinnbacken"), "kinnback" );
	deepEqual( Stem("kinnbart"), "kinnbart" );
	deepEqual( Stem("kino"), "kino" );
	deepEqual( Stem("kippe"), "kipp" );
	deepEqual( Stem("kippen"), "kipp" );
	deepEqual( Stem("kippod"), "kippod" );
	deepEqual( Stem("kirch"), "kirch" );
	deepEqual( Stem("kirchbankeck"), "kirchbankeck" );
	deepEqual( Stem("kirchdorf"), "kirchdorf" );
	deepEqual( Stem("kirche"), "kirch" );
	deepEqual( Stem("kirchedie"), "kirchedi" );
	deepEqual( Stem("kirchemit"), "kirchemit" );
	deepEqual( Stem("kirchen"), "kirch" );
	deepEqual( Stem("kirchenauftritt"), "kirchenauftritt" );
	deepEqual( Stem("kirchenbesuch"), "kirchenbesuch" );
	deepEqual( Stem("kirchenbund"), "kirchenbund" );
	deepEqual( Stem("kirchenbundes"), "kirchenbund" );
	deepEqual( Stem("kirchenbundesdie"), "kirchenbundesdi" );
	deepEqual( Stem("kirchenerhaltdie"), "kirchenerhaltdi" );
	deepEqual( Stem("kirchenführer"), "kirchenfuhr" );
	deepEqual( Stem("kirchenglocken"), "kirchenglock" );
	deepEqual( Stem("kirchenkritiker"), "kirchenkrit" );
	deepEqual( Stem("kirchenlehre"), "kirchenlehr" );
	deepEqual( Stem("kirchenlied"), "kirchenlied" );
	deepEqual( Stem("kirchenmaus"), "kirchenmaus" );
	deepEqual( Stem("kirchenmitglieder"), "kirchenmitglied" );
	deepEqual( Stem("kirchenmitgliedschaft"), "kirchenmitgliedschaft" );
	deepEqual( Stem("kirchennahen"), "kirchennah" );
	deepEqual( Stem("kirchenpatronin"), "kirchenpatronin" );
	deepEqual( Stem("kirchenpflegemitglieder"), "kirchenpflegemitglied" );
	deepEqual( Stem("kirchenpflegen"), "kirchenpfleg" );
	deepEqual( Stem("kirchenpresse"), "kirchenpress" );
	deepEqual( Stem("kirchenrates"), "kirchenrat" );
	deepEqual( Stem("kirchenrechtlich"), "kirchenrecht" );
	deepEqual( Stem("kirchenrechtlichen"), "kirchenrecht" );
	deepEqual( Stem("kirchensteuer"), "kirchensteu" );
	deepEqual( Stem("kirchensteuerpflicht"), "kirchensteuerpflicht" );
	deepEqual( Stem("kirchenstreit"), "kirchenstreit" );
	deepEqual( Stem("kirchensynoden"), "kirchensynod" );
	deepEqual( Stem("kirchentag"), "kirchentag" );
	deepEqual( Stem("kirchentage"), "kirchentag" );
	deepEqual( Stem("kirchentagen"), "kirchentag" );
	deepEqual( Stem("kirchentages"), "kirchentag" );
	deepEqual( Stem("kirchenverantwortlichen"), "kirchenverantwort" );
	deepEqual( Stem("kirchenwesen"), "kirchenwes" );
	deepEqual( Stem("kirchenzeit"), "kirchenzeit" );
	deepEqual( Stem("kirchenzeitung"), "kirchenzeit" );
	deepEqual( Stem("kirchgang"), "kirchgang" );
	deepEqual( Stem("kirchgemeinde"), "kirchgemeind" );
	deepEqual( Stem("kirchgemeinden"), "kirchgemeind" );
	deepEqual( Stem("kirchgemeinderäte"), "kirchgemeinderat" );
	deepEqual( Stem("kirchgemeinderäten"), "kirchgemeinderat" );
	deepEqual( Stem("kirchhof"), "kirchhof" );
	deepEqual( Stem("kirchlich"), "kirchlich" );
	deepEqual( Stem("kirchliche"), "kirchlich" );
	deepEqual( Stem("kirchlichen"), "kirchlich" );
	deepEqual( Stem("kirchliches"), "kirchlich" );
	deepEqual( Stem("kirchstühl"), "kirchstuhl" );
	deepEqual( Stem("kirchtürme"), "kirchturm" );
	deepEqual( Stem("kirchturmspitz"), "kirchturmspitz" );
	deepEqual( Stem("kirchweih"), "kirchweih" );
	deepEqual( Stem("kirkgesit"), "kirkgesit" );
	deepEqual( Stem("kirschen"), "kirsch" );
	deepEqual( Stem("kirschenlippen"), "kirschenlipp" );
	deepEqual( Stem("kirschgeist"), "kirschgeist" );
	deepEqual( Stem("kirschkern"), "kirschk" );
	deepEqual( Stem("kirschlorbeerwasser"), "kirschlorbeerwass" );
	deepEqual( Stem("kirschrot"), "kirschrot" );
	deepEqual( Stem("kirschrote"), "kirschrot" );
	deepEqual( Stem("kirschrotem"), "kirschrot" );
	deepEqual( Stem("kirschroten"), "kirschrot" );
	deepEqual( Stem("kissen"), "kiss" );
	deepEqual( Stem("kiste"), "kist" );
	deepEqual( Stem("kisten"), "kist" );
	deepEqual( Stem("kitschige"), "kitschig" );
	deepEqual( Stem("kitschiges"), "kitschig" );
	deepEqual( Stem("kittel"), "kittel" );
	deepEqual( Stem("kitz"), "kitz" );
	deepEqual( Stem("kitzelt"), "kitzelt" );
	deepEqual( Stem("kitzlein"), "kitzlein" );
	deepEqual( Stem("klack"), "klack" );
	deepEqual( Stem("kläffer"), "klaff" );
	deepEqual( Stem("klage"), "klag" );
	deepEqual( Stem("klagel"), "klagel" );
	deepEqual( Stem("klagen"), "klag" );
	deepEqual( Stem("klagend"), "klagend" );
	deepEqual( Stem("klagenden"), "klagend" );
	deepEqual( Stem("kläger"), "klag" );
	deepEqual( Stem("klagetönen"), "klageton" );
	deepEqual( Stem("kläglich"), "klaglich" );
	deepEqual( Stem("klägliche"), "klaglich" );
	deepEqual( Stem("kläglicher"), "klaglich" );
	deepEqual( Stem("klaglosen"), "klaglos" );
	deepEqual( Stem("klagt"), "klagt" );
	deepEqual( Stem("klagte"), "klagt" );
	deepEqual( Stem("klagten"), "klagt" );
	deepEqual( Stem("klammerarmen"), "klammerarm" );
	deepEqual( Stem("klammernd"), "klammernd" );
	deepEqual( Stem("klammerte"), "klammert" );
	deepEqual( Stem("klang"), "klang" );
	deepEqual( Stem("klange"), "klang" );
	deepEqual( Stem("klänge"), "klang" );
	deepEqual( Stem("klangen"), "klang" );
	deepEqual( Stem("klanglos"), "klanglos" );
	deepEqual( Stem("klangvolle"), "klangvoll" );
	deepEqual( Stem("klangvoller"), "klangvoll" );
	deepEqual( Stem("klapperig"), "klapper" );
	deepEqual( Stem("klappern"), "klapp" );
	deepEqual( Stem("klappernden"), "klappernd" );
	deepEqual( Stem("klapperte"), "klappert" );
	deepEqual( Stem("klappte"), "klappt" );
	deepEqual( Stem("klaps"), "klaps" );
	deepEqual( Stem("klar"), "klar" );
	deepEqual( Stem("klare"), "klar" );
	deepEqual( Stem("klaren"), "klar" );
	deepEqual( Stem("klarer"), "klar" );
	deepEqual( Stem("klareren"), "klar" );
	deepEqual( Stem("klares"), "klar" );
	deepEqual( Stem("klarheit"), "klarheit" );
	deepEqual( Stem("klarstellung"), "klarstell" );
	deepEqual( Stem("klarsten"), "klarst" );
	deepEqual( Stem("klärt"), "klart" );
	deepEqual( Stem("klass"), "klass" );
	deepEqual( Stem("klasse"), "klass" );
	deepEqual( Stem("klassen"), "klass" );
	deepEqual( Stem("klassikers"), "klassik" );
	deepEqual( Stem("klassische"), "klassisch" );
	deepEqual( Stem("klatschen"), "klatsch" );
	deepEqual( Stem("klatschend"), "klatschend" );
	deepEqual( Stem("klatschereien"), "klatscherei" );
	deepEqual( Stem("klatschrose"), "klatschros" );
	deepEqual( Stem("klatschrosen"), "klatschros" );
	deepEqual( Stem("klatschte"), "klatscht" );
	deepEqual( Stem("klatschten"), "klatscht" );
	deepEqual( Stem("klaubte"), "klaubt" );
	deepEqual( Stem("klaue"), "klau" );
	deepEqual( Stem("klauen"), "klau" );
	deepEqual( Stem("klavierstunde"), "klavierstund" );
	deepEqual( Stem("klebe"), "kleb" );
	deepEqual( Stem("kleben"), "kleb" );
	deepEqual( Stem("klebet"), "klebet" );
	deepEqual( Stem("klebt"), "klebt" );
	deepEqual( Stem("klebte"), "klebt" );
	deepEqual( Stem("klebten"), "klebt" );
	deepEqual( Stem("klecks"), "kleck" );
	deepEqual( Stem("kleckschen"), "klecksch" );
	deepEqual( Stem("kleckse"), "klecks" );
	deepEqual( Stem("klecksigen"), "klecksig" );
	deepEqual( Stem("klee"), "klee" );
	deepEqual( Stem("kleeblatt"), "kleeblatt" );
	deepEqual( Stem("kleesamen"), "kleesam" );
	deepEqual( Stem("kleid"), "kleid" );
	deepEqual( Stem("kleide"), "kleid" );
	deepEqual( Stem("kleiden"), "kleid" );
	deepEqual( Stem("kleider"), "kleid" );
	deepEqual( Stem("kleiderbedarf"), "kleiderbedarf" );
	deepEqual( Stem("kleiderkasten"), "kleiderkast" );
	deepEqual( Stem("kleidern"), "kleid" );
	deepEqual( Stem("kleiderschrank"), "kleiderschrank" );
	deepEqual( Stem("kleides"), "kleid" );
	deepEqual( Stem("kleidete"), "kleidet" );
	deepEqual( Stem("kleidung"), "kleidung" );
	deepEqual( Stem("kleidungsstück"), "kleidungsstuck" );
	deepEqual( Stem("kleie"), "kleie" );
	deepEqual( Stem("kleiekörner"), "kleiekorn" );
	deepEqual( Stem("klein"), "klein" );
	deepEqual( Stem("kleine"), "klein" );
	deepEqual( Stem("kleinedelmann"), "kleinedelmann" );
	deepEqual( Stem("kleinedelmanne"), "kleinedelmann" );
	deepEqual( Stem("kleinem"), "klein" );
	deepEqual( Stem("kleinen"), "klein" );
	deepEqual( Stem("kleiner"), "klein" );
	deepEqual( Stem("kleinere"), "klein" );
	deepEqual( Stem("kleineren"), "klein" );
	deepEqual( Stem("kleinern"), "klein" );
	deepEqual( Stem("kleines"), "klein" );
	deepEqual( Stem("kleinheit"), "kleinheit" );
	deepEqual( Stem("kleinigkeit"), "kleinig" );
	deepEqual( Stem("kleinigkeiten"), "kleinig" );
	deepEqual( Stem("kleinlaut"), "kleinlaut" );
	deepEqual( Stem("kleinlich"), "kleinlich" );
	deepEqual( Stem("kleinliche"), "kleinlich" );
	deepEqual( Stem("kleinlichen"), "kleinlich" );
	deepEqual( Stem("kleinlicher"), "kleinlich" );
	deepEqual( Stem("kleinlichsten"), "kleinlich" );
	deepEqual( Stem("kleinmachnow"), "kleinmachnow" );
	deepEqual( Stem("kleinmütig"), "kleinmut" );
	deepEqual( Stem("kleinod"), "kleinod" );
	deepEqual( Stem("kleinstädterinnen"), "kleinstadterinn" );
	deepEqual( Stem("kleinste"), "klein" );
	deepEqual( Stem("kleinsten"), "klein" );
	deepEqual( Stem("kleinster"), "klein" );
	deepEqual( Stem("kleinstes"), "klein" );
	deepEqual( Stem("kleinviehs"), "kleinvieh" );
	deepEqual( Stem("klemme"), "klemm" );
	deepEqual( Stem("klemmte"), "klemmt" );
	deepEqual( Stem("kletterns"), "klettern" );
	deepEqual( Stem("kletterte"), "klettert" );
	deepEqual( Stem("kletterten"), "klettert" );
	deepEqual( Stem("klickklackklecks"), "klickklackkleck" );
	deepEqual( Stem("klicks"), "klick" );
	deepEqual( Stem("klient"), "klient" );
	deepEqual( Stem("klingel"), "klingel" );
	deepEqual( Stem("klingelte"), "klingelt" );
	deepEqual( Stem("klingen"), "kling" );
	deepEqual( Stem("klingende"), "klingend" );
	deepEqual( Stem("klingenden"), "klingend" );
	deepEqual( Stem("klingender"), "klingend" );
	deepEqual( Stem("klingt"), "klingt" );
	deepEqual( Stem("klinke"), "klink" );
	deepEqual( Stem("klippe"), "klipp" );
	deepEqual( Stem("klippen"), "klipp" );
	deepEqual( Stem("klirren"), "klirr" );
	deepEqual( Stem("klirrenden"), "klirrend" );
	deepEqual( Stem("klirrrr"), "klirrrr" );
	deepEqual( Stem("klirrte"), "klirrt" );
	deepEqual( Stem("klirrten"), "klirrt" );
	deepEqual( Stem("kloan"), "kloan" );
	deepEqual( Stem("klopfen"), "klopf" );
	deepEqual( Stem("klopfendem"), "klopfend" );
	deepEqual( Stem("klopfenden"), "klopfend" );
	deepEqual( Stem("klopfte"), "klopft" );
	deepEqual( Stem("klösschen"), "klossch" );
	deepEqual( Stem("kloster"), "klost" );
	deepEqual( Stem("klöster"), "klost" );
	deepEqual( Stem("klosters"), "klost" );
	deepEqual( Stem("klotziger"), "klotzig" );
	deepEqual( Stem("kluft"), "kluft" );
	deepEqual( Stem("klüfteten"), "kluftet" );
	deepEqual( Stem("klug"), "klug" );
	deepEqual( Stem("kluge"), "klug" );
	deepEqual( Stem("klugen"), "klug" );
	deepEqual( Stem("kluger"), "klug" );
	deepEqual( Stem("klüger"), "klug" );
	deepEqual( Stem("kluges"), "klug" );
	deepEqual( Stem("klugheit"), "klugheit" );
	deepEqual( Stem("klugheitsregel"), "klugheitsregel" );
	deepEqual( Stem("klüglich"), "kluglich" );
	deepEqual( Stem("klügste"), "klug" );
	deepEqual( Stem("klümpchen"), "klumpch" );
	deepEqual( Stem("klumpen"), "klump" );
	deepEqual( Stem("knab"), "knab" );
	deepEqual( Stem("knabbern"), "knabb" );
	deepEqual( Stem("knäbchen"), "knabch" );
	deepEqual( Stem("knabe"), "knab" );
	deepEqual( Stem("knaben"), "knab" );
	deepEqual( Stem("knabenalter"), "knabenalt" );
	deepEqual( Stem("knäblein"), "knablein" );
	deepEqual( Stem("knäbleins"), "knablein" );
	deepEqual( Stem("knackende"), "knackend" );
	deepEqual( Stem("knall"), "knall" );
	deepEqual( Stem("knallen"), "knall" );
	deepEqual( Stem("knallgelber"), "knallgelb" );
	deepEqual( Stem("knallt"), "knallt" );
	deepEqual( Stem("knapp"), "knapp" );
	deepEqual( Stem("knarrte"), "knarrt" );
	deepEqual( Stem("knatter"), "knatt" );
	deepEqual( Stem("knäuel"), "knauel" );
	deepEqual( Stem("knäufen"), "knauf" );
	deepEqual( Stem("knauserig"), "knauser" );
	deepEqual( Stem("knebel"), "knebel" );
	deepEqual( Stem("knecht"), "knecht" );
	deepEqual( Stem("knechtchen"), "knechtch" );
	deepEqual( Stem("knechte"), "knecht" );
	deepEqual( Stem("knechten"), "knecht" );
	deepEqual( Stem("knechtes"), "knecht" );
	deepEqual( Stem("knechtisch"), "knechtisch" );
	deepEqual( Stem("knechts"), "knecht" );
	deepEqual( Stem("knechtschaft"), "knechtschaft" );
	deepEqual( Stem("kneipchen"), "kneipch" );
	deepEqual( Stem("kneipe"), "kneip" );
	deepEqual( Stem("kneipen"), "kneip" );
	deepEqual( Stem("kneipentisch"), "kneipent" );
	deepEqual( Stem("kneten"), "knet" );
	deepEqual( Stem("knicks"), "knick" );
	deepEqual( Stem("knickse"), "knicks" );
	deepEqual( Stem("knickste"), "knick" );
	deepEqual( Stem("knickte"), "knickt" );
	deepEqual( Stem("knickten"), "knickt" );
	deepEqual( Stem("knie"), "knie" );
	deepEqual( Stem("kniee"), "kniee" );
	deepEqual( Stem("knieen"), "knieen" );
	deepEqual( Stem("knieholzäste"), "knieholzast" );
	deepEqual( Stem("kniehosen"), "kniehos" );
	deepEqual( Stem("knien"), "knien" );
	deepEqual( Stem("kniete"), "kniet" );
	deepEqual( Stem("knieten"), "kniet" );
	deepEqual( Stem("kniff"), "kniff" );
	deepEqual( Stem("knirschen"), "knirsch" );
	deepEqual( Stem("knirschend"), "knirschend" );
	deepEqual( Stem("knisternd"), "knisternd" );
	deepEqual( Stem("knisternden"), "knisternd" );
	deepEqual( Stem("knisterte"), "knistert" );
	deepEqual( Stem("knisterten"), "knistert" );
	deepEqual( Stem("knitternden"), "knitternd" );
	deepEqual( Stem("knobeln"), "knobeln" );
	deepEqual( Stem("knobelten"), "knobelt" );
	deepEqual( Stem("knöchel"), "knochel" );
	deepEqual( Stem("knochen"), "knoch" );
	deepEqual( Stem("knochengerippe"), "knochengeripp" );
	deepEqual( Stem("knochenjobs"), "knochenjob" );
	deepEqual( Stem("knöchern"), "knoch" );
	deepEqual( Stem("knöchernes"), "knochern" );
	deepEqual( Stem("knochige"), "knochig" );
	deepEqual( Stem("knochiges"), "knochig" );
	deepEqual( Stem("knopf"), "knopf" );
	deepEqual( Stem("knöpfe"), "knopf" );
	deepEqual( Stem("knöpfen"), "knopf" );
	deepEqual( Stem("knopfmacher"), "knopfmach" );
	deepEqual( Stem("knopfmacherei"), "knopfmacherei" );
	deepEqual( Stem("knorpel"), "knorpel" );
	deepEqual( Stem("knorrige"), "knorrig" );
	deepEqual( Stem("knospen"), "knosp" );
	deepEqual( Stem("knospenden"), "knospend" );
	deepEqual( Stem("knösperl"), "knosperl" );
	deepEqual( Stem("knoten"), "knot" );
	deepEqual( Stem("knotige"), "knotig" );
	deepEqual( Stem("knüffe"), "knuff" );
	deepEqual( Stem("knüffen"), "knuff" );
	deepEqual( Stem("knüllte"), "knullt" );
	deepEqual( Stem("knüpfen"), "knupf" );
	deepEqual( Stem("knüpfend"), "knupfend" );
	deepEqual( Stem("knüpfte"), "knupft" );
	deepEqual( Stem("knüpperte"), "knuppert" );
	deepEqual( Stem("knusprig"), "knusprig" );
	deepEqual( Stem("knutenpeitsche"), "knutenpeitsch" );
	deepEqual( Stem("koalitionskrise"), "koalitionskris" );
	deepEqual( Stem("koalitionssystem"), "koalitionssyst" );
	deepEqual( Stem("koalitionsversuche"), "koalitionsversuch" );
	deepEqual( Stem("koan"), "koan" );
	deepEqual( Stem("kobold"), "kobold" );
	deepEqual( Stem("koch"), "koch" );
	deepEqual( Stem("kochen"), "koch" );
	deepEqual( Stem("kochherd"), "kochherd" );
	deepEqual( Stem("köchin"), "kochin" );
	deepEqual( Stem("kocht"), "kocht" );
	deepEqual( Stem("kochte"), "kocht" );
	deepEqual( Stem("kock"), "kock" );
	deepEqual( Stem("koffer"), "koff" );
	deepEqual( Stem("kognak"), "kognak" );
	deepEqual( Stem("kohl"), "kohl" );
	deepEqual( Stem("kohle"), "kohl" );
	deepEqual( Stem("kohlen"), "kohl" );
	deepEqual( Stem("kohlenbrennern"), "kohlenbrenn" );
	deepEqual( Stem("kohlkräuter"), "kohlkraut" );
	deepEqual( Stem("kokette"), "kokett" );
	deepEqual( Stem("koketterie"), "koketteri" );
	deepEqual( Stem("kolben"), "kolb" );
	deepEqual( Stem("kollaboration"), "kollaboration" );
	deepEqual( Stem("kollaboriert"), "kollaboriert" );
	deepEqual( Stem("kollakowsky"), "kollakowsky" );
	deepEqual( Stem("kollakowskys"), "kollakowskys" );
	deepEqual( Stem("kollege"), "kolleg" );
	deepEqual( Stem("kollegen"), "kolleg" );
	deepEqual( Stem("kollegium"), "kollegium" );
	deepEqual( Stem("kollekteur"), "kollekteur" );
	deepEqual( Stem("köllen"), "koll" );
	deepEqual( Stem("koller"), "koll" );
	deepEqual( Stem("kollerte"), "kollert" );
	deepEqual( Stem("kölner"), "koln" );
	deepEqual( Stem("kölnischem"), "kolnisch" );
	deepEqual( Stem("kolonne"), "kolonn" );
	deepEqual( Stem("kolorit"), "kolorit" );
	deepEqual( Stem("kolossal"), "kolossal" );
	deepEqual( Stem("kolossale"), "kolossal" );
	deepEqual( Stem("kolossales"), "kolossal" );
	deepEqual( Stem("kolumbus"), "kolumbus" );
	deepEqual( Stem("kom"), "kom" );
	deepEqual( Stem("kombattant"), "kombattant" );
	deepEqual( Stem("kombinationen"), "kombination" );
	deepEqual( Stem("kombinierten"), "kombiniert" );
	deepEqual( Stem("komet"), "komet" );
	deepEqual( Stem("kometenkohl"), "kometenkohl" );
	deepEqual( Stem("komiker"), "komik" );
	deepEqual( Stem("komikergrinsen"), "komikergrins" );
	deepEqual( Stem("komikers"), "komik" );
	deepEqual( Stem("komisch"), "komisch" );
	deepEqual( Stem("komische"), "komisch" );
	deepEqual( Stem("komischen"), "komisch" );
	deepEqual( Stem("komitee"), "komite" );
	deepEqual( Stem("komm"), "komm" );
	deepEqual( Stem("kommandeur"), "kommandeur" );
	deepEqual( Stem("kommandieren"), "kommandi" );
	deepEqual( Stem("kommando"), "kommando" );
	deepEqual( Stem("kommandowort"), "kommandowort" );
	deepEqual( Stem("komme"), "komm" );
	deepEqual( Stem("kommen"), "komm" );
	deepEqual( Stem("kommend"), "kommend" );
	deepEqual( Stem("kommende"), "kommend" );
	deepEqual( Stem("kommenden"), "kommend" );
	deepEqual( Stem("kommendes"), "kommend" );
	deepEqual( Stem("kommens"), "komm" );
	deepEqual( Stem("kommentar"), "kommentar" );
	deepEqual( Stem("kommet"), "kommet" );
	deepEqual( Stem("kommission"), "kommission" );
	deepEqual( Stem("kommissionen"), "kommission" );
	deepEqual( Stem("kommode"), "kommod" );
	deepEqual( Stem("kommr"), "kommr" );
	deepEqual( Stem("kommst"), "komm" );
	deepEqual( Stem("kommt"), "kommt" );
	deepEqual( Stem("kommunalverwaltung"), "kommunalverwalt" );
	deepEqual( Stem("kommunikationshindernis"), "kommunikationshindernis" );
	deepEqual( Stem("komödie"), "komodi" );
	deepEqual( Stem("komödien"), "komodi" );
	deepEqual( Stem("kompagnie"), "kompagni" );
	deepEqual( Stem("kompagnien"), "kompagni" );
	deepEqual( Stem("kompagnon"), "kompagnon" );
	deepEqual( Stem("kompaniechef"), "kompaniechef" );
	deepEqual( Stem("kompass"), "kompass" );
	deepEqual( Stem("kompensation"), "kompensation" );
	deepEqual( Stem("komplikationen"), "komplikation" );
	deepEqual( Stem("kompliment"), "kompliment" );
	deepEqual( Stem("komplimenten"), "kompliment" );
	deepEqual( Stem("komplimentierten"), "komplimentiert" );
	deepEqual( Stem("komponiert"), "komponiert" );
	deepEqual( Stem("komptoirs"), "komptoir" );
	deepEqual( Stem("kon"), "kon" );
	deepEqual( Stem("kön"), "kon" );
	deepEqual( Stem("konfekt"), "konfekt" );
	deepEqual( Stem("konfirmationsschein"), "konfirmationsschein" );
	deepEqual( Stem("konfirmationsunterrichte"), "konfirmationsunterricht" );
	deepEqual( Stem("konfirmiert"), "konfirmiert" );
	deepEqual( Stem("konfisziert"), "konfisziert" );
	deepEqual( Stem("konflikt"), "konflikt" );
	deepEqual( Stem("konflikten"), "konflikt" );
	deepEqual( Stem("konfrontiert"), "konfrontiert" );
	deepEqual( Stem("konfundieren"), "konfundi" );
	deepEqual( Stem("konfus"), "konfus" );
	deepEqual( Stem("könig"), "konig" );
	deepEqual( Stem("könige"), "konig" );
	deepEqual( Stem("königen"), "konig" );
	deepEqual( Stem("königin"), "konigin" );
	deepEqual( Stem("königinnen"), "koniginn" );
	deepEqual( Stem("königl"), "konigl" );
	deepEqual( Stem("königlich"), "konig" );
	deepEqual( Stem("königliche"), "konig" );
	deepEqual( Stem("königlichen"), "konig" );
	deepEqual( Stem("königlichsten"), "konig" );
	deepEqual( Stem("königreich"), "konigreich" );
	deepEqual( Stem("königreichen"), "konigreich" );
	deepEqual( Stem("königreiches"), "konigreich" );
	deepEqual( Stem("königs"), "konig" );
	deepEqual( Stem("königsmantel"), "konigsmantel" );
	deepEqual( Stem("königspaar"), "konigspaar" );
	deepEqual( Stem("königsschiessen"), "konigsschiess" );
	deepEqual( Stem("königssee"), "konigsse" );
	deepEqual( Stem("königsseer"), "konigsse" );
	deepEqual( Stem("königssohn"), "konigssohn" );
	deepEqual( Stem("konjunktiv"), "konjunktiv" );
	deepEqual( Stem("konkreten"), "konkret" );
	deepEqual( Stem("konkurse"), "konkurs" );
	deepEqual( Stem("könn"), "konn" );
	deepEqual( Stem("könne"), "konn" );
	deepEqual( Stem("können"), "konn" );
	deepEqual( Stem("könnet"), "konnet" );
	deepEqual( Stem("konnt"), "konnt" );
	deepEqual( Stem("könnt"), "konnt" );
	deepEqual( Stem("konnte"), "konnt" );
	deepEqual( Stem("könnte"), "konnt" );
	deepEqual( Stem("konnten"), "konnt" );
	deepEqual( Stem("könnten"), "konnt" );
	deepEqual( Stem("könntest"), "konnt" );
	deepEqual( Stem("konsequent"), "konsequent" );
	deepEqual( Stem("konsequente"), "konsequent" );
	deepEqual( Stem("konservatismus"), "konservatismus" );
	deepEqual( Stem("konservativ"), "konservativ" );
	deepEqual( Stem("konservativen"), "konservativ" );
	deepEqual( Stem("konservativer"), "konservativ" );
	deepEqual( Stem("konserviert"), "konserviert" );
	deepEqual( Stem("konstantinopel"), "konstantinopel" );
	deepEqual( Stem("konstellationen"), "konstellation" );
	deepEqual( Stem("konstitutiv"), "konstitutiv" );
	deepEqual( Stem("konstruiert"), "konstruiert" );
	deepEqual( Stem("konstruktion"), "konstruktion" );
	deepEqual( Stem("konsum"), "konsum" );
	deepEqual( Stem("konsumenten"), "konsument" );
	deepEqual( Stem("konsumieren"), "konsumi" );
	deepEqual( Stem("konsumiert"), "konsumiert" );
	deepEqual( Stem("konsumkredit"), "konsumkredit" );
	deepEqual( Stem("konsumwelle"), "konsumwell" );
	deepEqual( Stem("kontakt"), "kontakt" );
	deepEqual( Stem("kontakte"), "kontakt" );
	deepEqual( Stem("kontemplative"), "kontemplativ" );
	deepEqual( Stem("kontinent"), "kontinent" );
	deepEqual( Stem("kontinental"), "kontinental" );
	deepEqual( Stem("kontinuierlichen"), "kontinui" );
	deepEqual( Stem("konto"), "konto" );
	deepEqual( Stem("kontorstuhl"), "kontorstuhl" );
	deepEqual( Stem("kontradiktorisch"), "kontradiktor" );
	deepEqual( Stem("kontrakt"), "kontrakt" );
	deepEqual( Stem("kontraktwidrigen"), "kontraktwidr" );
	deepEqual( Stem("kontrast"), "kontrast" );
	deepEqual( Stem("kontrastierte"), "kontrastiert" );
	deepEqual( Stem("kontraventionsbusse"), "kontraventionsbuss" );
	deepEqual( Stem("kontrolliert"), "kontrolliert" );
	deepEqual( Stem("kontroverse"), "kontrovers" );
	deepEqual( Stem("konventikel"), "konventikel" );
	deepEqual( Stem("konvertiert"), "konvertiert" );
	deepEqual( Stem("konzentriert"), "konzentriert" );
	deepEqual( Stem("konzert"), "konzert" );
	deepEqual( Stem("kooperation"), "kooperation" );
	deepEqual( Stem("koordiniert"), "koordiniert" );
	deepEqual( Stem("kopf"), "kopf" );
	deepEqual( Stem("köpfchen"), "kopfch" );
	deepEqual( Stem("kopfe"), "kopf" );
	deepEqual( Stem("köpfe"), "kopf" );
	deepEqual( Stem("köpfen"), "kopf" );
	deepEqual( Stem("kopfes"), "kopf" );
	deepEqual( Stem("kopfhängen"), "kopfhang" );
	deepEqual( Stem("kopfkissen"), "kopfkiss" );
	deepEqual( Stem("köpflings"), "kopfling" );
	deepEqual( Stem("kopfnicken"), "kopfnick" );
	deepEqual( Stem("kopfputz"), "kopfputz" );
	deepEqual( Stem("kopfschmerzen"), "kopfschmerz" );
	deepEqual( Stem("kopfschüttelnd"), "kopfschuttelnd" );
	deepEqual( Stem("kopftuches"), "kopftuch" );
	deepEqual( Stem("kopfüber"), "kopfub" );
	deepEqual( Stem("kopfweh"), "kopfweh" );
	deepEqual( Stem("kopfwendung"), "kopfwend" );
	deepEqual( Stem("kopfzerbrechen"), "kopfzerbrech" );
	deepEqual( Stem("kopien"), "kopi" );
	deepEqual( Stem("kopiermaschinen"), "kopiermaschin" );
	deepEqual( Stem("koppe"), "kopp" );
	deepEqual( Stem("koppelpferde"), "koppelpferd" );
	deepEqual( Stem("koppenhöhe"), "koppenhoh" );
	deepEqual( Stem("koppenluft"), "koppenluft" );
	deepEqual( Stem("koppenplan"), "koppenplan" );
	deepEqual( Stem("koppenplanes"), "koppenplan" );
	deepEqual( Stem("kopulieren"), "kopuli" );
	deepEqual( Stem("kor"), "kor" );
	deepEqual( Stem("korah"), "korah" );
	deepEqual( Stem("korahiten"), "korahit" );
	deepEqual( Stem("korahs"), "korah" );
	deepEqual( Stem("korallenschnur"), "korallenschnur" );
	deepEqual( Stem("korb"), "korb" );
	deepEqual( Stem("körbchen"), "korbch" );
	deepEqual( Stem("korbe"), "korb" );
	deepEqual( Stem("körbe"), "korb" );
	deepEqual( Stem("körben"), "korb" );
	deepEqual( Stem("korbträgern"), "korbtrag" );
	deepEqual( Stem("korn"), "korn" );
	deepEqual( Stem("kornähre"), "kornahr" );
	deepEqual( Stem("kornblumen"), "kornblum" );
	deepEqual( Stem("korne"), "korn" );
	deepEqual( Stem("kornes"), "korn" );
	deepEqual( Stem("kornfeld"), "kornfeld" );
	deepEqual( Stem("kornsäcken"), "kornsack" );
	deepEqual( Stem("körper"), "korp" );
	deepEqual( Stem("körperbau"), "korperbau" );
	deepEqual( Stem("körperlich"), "korp" );
	deepEqual( Stem("körperliche"), "korp" );
	deepEqual( Stem("körperlichen"), "korp" );
	deepEqual( Stem("körperlicher"), "korp" );
	deepEqual( Stem("körperliches"), "korp" );
	deepEqual( Stem("körpern"), "korp" );
	deepEqual( Stem("körpers"), "korp" );
	deepEqual( Stem("körpersinne"), "korpersinn" );
	deepEqual( Stem("korrekt"), "korrekt" );
	deepEqual( Stem("korrekturen"), "korrektur" );
	deepEqual( Stem("korrespondenz"), "korrespondenz" );
	deepEqual( Stem("korrespondiere"), "korrespondi" );
	deepEqual( Stem("korrespondieren"), "korrespondi" );
	deepEqual( Stem("korrespondierend"), "korrespondier" );
	deepEqual( Stem("korrespondierende"), "korrespondier" );
	deepEqual( Stem("korrespondierendes"), "korrespondier" );
	deepEqual( Stem("korrespondiert"), "korrespondiert" );
	deepEqual( Stem("korridor"), "korridor" );
	deepEqual( Stem("korrigieren"), "korrigi" );
	deepEqual( Stem("korrigiert"), "korrigiert" );
	deepEqual( Stem("kosenamen"), "kosenam" );
	deepEqual( Stem("kosmiseher"), "kosmiseh" );
	deepEqual( Stem("kosmologische"), "kosmolog" );
	deepEqual( Stem("kost"), "kost" );
	deepEqual( Stem("kostbar"), "kostbar" );
	deepEqual( Stem("kostbare"), "kostbar" );
	deepEqual( Stem("kostbaren"), "kostbar" );
	deepEqual( Stem("kostbarer"), "kostbar" );
	deepEqual( Stem("kostbares"), "kostbar" );
	deepEqual( Stem("kostbarsten"), "kostbarst" );
	deepEqual( Stem("kosten"), "kost" );
	deepEqual( Stem("kostenfreien"), "kostenfrei" );
	deepEqual( Stem("kostenpunkt"), "kostenpunkt" );
	deepEqual( Stem("kostet"), "kostet" );
	deepEqual( Stem("kostete"), "kostet" );
	deepEqual( Stem("kosteten"), "kostet" );
	deepEqual( Stem("köstlich"), "kostlich" );
	deepEqual( Stem("köstliche"), "kostlich" );
	deepEqual( Stem("köstlichen"), "kostlich" );
	deepEqual( Stem("köstliches"), "kostlich" );
	deepEqual( Stem("köstlichkeiten"), "kostlich" );
	deepEqual( Stem("köstlichste"), "kostlich" );
	deepEqual( Stem("kostspieliges"), "kostspiel" );
	deepEqual( Stem("kostümierte"), "kostumiert" );
	deepEqual( Stem("kot"), "kot" );
	deepEqual( Stem("kotelettes"), "kotelett" );
	deepEqual( Stem("köter"), "kot" );
	deepEqual( Stem("kothöllen"), "kotholl" );
	deepEqual( Stem("krabbelige"), "krabbel" );
	deepEqual( Stem("krabbelte"), "krabbelt" );
	deepEqual( Stem("krach"), "krach" );
	deepEqual( Stem("krachen"), "krach" );
	deepEqual( Stem("krachend"), "krachend" );
	deepEqual( Stem("krachmandel"), "krachmandel" );
	deepEqual( Stem("krachmandelkies"), "krachmandelki" );
	deepEqual( Stem("kracht"), "kracht" );
	deepEqual( Stem("krachte"), "kracht" );
	deepEqual( Stem("krächzen"), "krachz" );
	deepEqual( Stem("krächzende"), "krachzend" );
	deepEqual( Stem("krack"), "krack" );
	deepEqual( Stem("kraft"), "kraft" );
	deepEqual( Stem("kraftanwendung"), "kraftanwend" );
	deepEqual( Stem("kräfte"), "kraft" );
	deepEqual( Stem("kräften"), "kraft" );
	deepEqual( Stem("kräftig"), "kraftig" );
	deepEqual( Stem("kräftige"), "kraftig" );
	deepEqual( Stem("kräftigem"), "kraftig" );
	deepEqual( Stem("kräftigen"), "kraftig" );
	deepEqual( Stem("kräftiger"), "kraftig" );
	deepEqual( Stem("kräftigere"), "kraftig" );
	deepEqual( Stem("kräftigst"), "kraftig" );
	deepEqual( Stem("kraftmänner"), "kraftmann" );
	deepEqual( Stem("kragen"), "krag" );
	deepEqual( Stem("krähe"), "krah" );
	deepEqual( Stem("krähen"), "krah" );
	deepEqual( Stem("kräht"), "kraht" );
	deepEqual( Stem("krähte"), "kraht" );
	deepEqual( Stem("krakacks"), "krakack" );
	deepEqual( Stem("kram"), "kram" );
	deepEqual( Stem("krämer"), "kram" );
	deepEqual( Stem("kramladen"), "kramlad" );
	deepEqual( Stem("krammetsvogel"), "krammetsvogel" );
	deepEqual( Stem("krammetsvögel"), "krammetsvogel" );
	deepEqual( Stem("krammetsvogels"), "krammetsvogel" );
	deepEqual( Stem("krampf"), "krampf" );
	deepEqual( Stem("krampfhaft"), "krampfhaft" );
	deepEqual( Stem("krampfhaften"), "krampfhaft" );
	deepEqual( Stem("krampfhafter"), "krampfhaft" );
	deepEqual( Stem("krank"), "krank" );
	deepEqual( Stem("kranke"), "krank" );
	deepEqual( Stem("kränkelnder"), "krankelnd" );
	deepEqual( Stem("kränkelt"), "krankelt" );
	deepEqual( Stem("kranken"), "krank" );
	deepEqual( Stem("kränken"), "krank" );
	deepEqual( Stem("krankenbett"), "krankenbett" );
	deepEqual( Stem("krankenbette"), "krankenbett" );
	deepEqual( Stem("krankenbettes"), "krankenbett" );
	deepEqual( Stem("kränkend"), "krankend" );
	deepEqual( Stem("kränkenden"), "krankend" );
	deepEqual( Stem("krankenstand"), "krankenstand" );
	deepEqual( Stem("krankenversicherung"), "krankenversicher" );
	deepEqual( Stem("krankenwärter"), "krankenwart" );
	deepEqual( Stem("krankhafter"), "krankhaft" );
	deepEqual( Stem("krankheit"), "krankheit" );
	deepEqual( Stem("krankheiten"), "krankheit" );
	deepEqual( Stem("krankheitsbildern"), "krankheitsbild" );
	deepEqual( Stem("kränkt"), "krankt" );
	deepEqual( Stem("kränkte"), "krankt" );
	deepEqual( Stem("kränkung"), "krankung" );
	deepEqual( Stem("kranz"), "kranz" );
	deepEqual( Stem("kranze"), "kranz" );
	deepEqual( Stem("kränzen"), "kranz" );
	deepEqual( Stem("kratz"), "kratz" );
	deepEqual( Stem("krätze"), "kratz" );
	deepEqual( Stem("kratzen"), "kratz" );
	deepEqual( Stem("kratzfuss"), "kratzfuss" );
	deepEqual( Stem("kratzfüsschen"), "kratzfussch" );
	deepEqual( Stem("kratzte"), "kratzt" );
	deepEqual( Stem("kratzten"), "kratzt" );
	deepEqual( Stem("krault"), "krault" );
	deepEqual( Stem("kraus"), "kraus" );
	deepEqual( Stem("krause"), "kraus" );
	deepEqual( Stem("kräuselhaare"), "krauselhaar" );
	deepEqual( Stem("kräuselten"), "krauselt" );
	deepEqual( Stem("krausen"), "kraus" );
	deepEqual( Stem("kraut"), "kraut" );
	deepEqual( Stem("kräutchen"), "krautch" );
	deepEqual( Stem("kräuter"), "kraut" );
	deepEqual( Stem("kräutermann"), "krautermann" );
	deepEqual( Stem("kräutern"), "kraut" );
	deepEqual( Stem("kräutersäcke"), "krautersack" );
	deepEqual( Stem("kräuterwuchs"), "krauterwuch" );
	deepEqual( Stem("kräuterwust"), "krauterwust" );
	deepEqual( Stem("krautes"), "kraut" );
	deepEqual( Stem("krauts"), "kraut" );
	deepEqual( Stem("kravatte"), "kravatt" );
	deepEqual( Stem("kreatur"), "kreatur" );
	deepEqual( Stem("kreaturen"), "kreatur" );
	deepEqual( Stem("krebs"), "kreb" );
	deepEqual( Stem("krebspatienten"), "krebspatient" );
	deepEqual( Stem("krebsscheren"), "krebssch" );
	deepEqual( Stem("kredit"), "kredit" );
	deepEqual( Stem("kredite"), "kredit" );
	deepEqual( Stem("kredites"), "kredit" );
	deepEqual( Stem("kreditgetzes"), "kreditgetz" );
	deepEqual( Stem("kreideblass"), "kreideblass" );
	deepEqual( Stem("kreis"), "kreis" );
	deepEqual( Stem("kreischen"), "kreisch" );
	deepEqual( Stem("kreischenden"), "kreischend" );
	deepEqual( Stem("kreischte"), "kreischt" );
	deepEqual( Stem("kreise"), "kreis" );
	deepEqual( Stem("kreiselndes"), "kreiselnd" );
	deepEqual( Stem("kreiselte"), "kreiselt" );
	deepEqual( Stem("kreisen"), "kreis" );
	deepEqual( Stem("kreises"), "kreis" );
	deepEqual( Stem("kreislauf"), "kreislauf" );
	deepEqual( Stem("kreisläufe"), "kreislauf" );
	deepEqual( Stem("kreisrunde"), "kreisrund" );
	deepEqual( Stem("kreissen"), "kreiss" );
	deepEqual( Stem("kreißen"), "kreiss" );
	deepEqual( Stem("kreissenden"), "kreissend" );
	deepEqual( Stem("kreißenden"), "kreissend" );
	deepEqual( Stem("kreissest"), "kreiss" );
	deepEqual( Stem("kreißest"), "kreiss" );
	deepEqual( Stem("kreisst"), "kreisst" );
	deepEqual( Stem("kreißt"), "kreisst" );
	deepEqual( Stem("kreiswehrersatzamt"), "kreiswehrersatzamt" );
	deepEqual( Stem("kreizer"), "kreiz" );
	deepEqual( Stem("kreizl"), "kreizl" );
	deepEqual( Stem("kresse"), "kress" );
	deepEqual( Stem("kretinismus"), "kretinismus" );
	deepEqual( Stem("kreucht"), "kreucht" );
	deepEqual( Stem("kreuz"), "kreuz" );
	deepEqual( Stem("kreuzberger"), "kreuzberg" );
	deepEqual( Stem("kreuze"), "kreuz" );
	deepEqual( Stem("kreuzen"), "kreuz" );
	deepEqual( Stem("kreuzenden"), "kreuzend" );
	deepEqual( Stem("kreuzer"), "kreuz" );
	deepEqual( Stem("kreuzes"), "kreuz" );
	deepEqual( Stem("kreuzfahrers"), "kreuzfahr" );
	deepEqual( Stem("kreuzl"), "kreuzl" );
	deepEqual( Stem("kreuzritterzuge"), "kreuzritterzug" );
	deepEqual( Stem("kreuzspinnen"), "kreuzspinn" );
	deepEqual( Stem("kreuzstrasse"), "kreuzstrass" );
	deepEqual( Stem("kreuzte"), "kreuzt" );
	deepEqual( Stem("kreuzten"), "kreuzt" );
	deepEqual( Stem("kreuzweg"), "kreuzweg" );
	deepEqual( Stem("kreuzwegbäu"), "kreuzwegbau" );
	deepEqual( Stem("kreuzwegbauer"), "kreuzwegbau" );
	deepEqual( Stem("kreuzweghof"), "kreuzweghof" );
	deepEqual( Stem("kreuzweghofbauer"), "kreuzweghofbau" );
	deepEqual( Stem("kreuzweis"), "kreuzweis" );
	deepEqual( Stem("kribbeln"), "kribbeln" );
	deepEqual( Stem("krick"), "krick" );
	deepEqual( Stem("kriechen"), "kriech" );
	deepEqual( Stem("kriechend"), "kriechend" );
	deepEqual( Stem("kriechende"), "kriechend" );
	deepEqual( Stem("kriechenden"), "kriechend" );
	deepEqual( Stem("kriechendes"), "kriechend" );
	deepEqual( Stem("kriecht"), "kriecht" );
	deepEqual( Stem("kriechtier"), "kriechti" );
	deepEqual( Stem("kriechtiere"), "kriechti" );
	deepEqual( Stem("kriechtieren"), "kriechti" );
	deepEqual( Stem("krieg"), "krieg" );
	deepEqual( Stem("kriege"), "krieg" );
	deepEqual( Stem("kriegen"), "krieg" );
	deepEqual( Stem("krieger"), "krieg" );
	deepEqual( Stem("kriegerisch"), "krieger" );
	deepEqual( Stem("kriegerischen"), "krieger" );
	deepEqual( Stem("krieges"), "krieg" );
	deepEqual( Stem("krieget"), "krieget" );
	deepEqual( Stem("kriegsdienst"), "kriegsdien" );
	deepEqual( Stem("kriegsdienste"), "kriegsdien" );
	deepEqual( Stem("kriegsdienstes"), "kriegsdien" );
	deepEqual( Stem("kriegsdienstverweigerer"), "kriegsdienstverweig" );
	deepEqual( Stem("kriegsdienstverweigerung"), "kriegsdienstverweiger" );
	deepEqual( Stem("kriegsführung"), "kriegsfuhr" );
	deepEqual( Stem("kriegsgetümmel"), "kriegsgetummel" );
	deepEqual( Stem("kriegsheeren"), "kriegshe" );
	deepEqual( Stem("kriegskameraden"), "kriegskamerad" );
	deepEqual( Stem("kriegskasse"), "kriegskass" );
	deepEqual( Stem("kriegskleid"), "kriegskleid" );
	deepEqual( Stem("kriegsleute"), "kriegsleut" );
	deepEqual( Stem("kriegslied"), "kriegslied" );
	deepEqual( Stem("kriegslist"), "kriegslist" );
	deepEqual( Stem("kriegsmann"), "kriegsmann" );
	deepEqual( Stem("kriegsmänner"), "kriegsmann" );
	deepEqual( Stem("kriegsmannes"), "kriegsmann" );
	deepEqual( Stem("kriegsmöglichkeiten"), "kriegsmog" );
	deepEqual( Stem("kriegsoberst"), "kriegsoberst" );
	deepEqual( Stem("kriegsstrapazen"), "kriegsstrapaz" );
	deepEqual( Stem("kriegsvölker"), "kriegsvolk" );
	deepEqual( Stem("kriegswaffen"), "kriegswaff" );
	deepEqual( Stem("kriegswesen"), "kriegswes" );
	deepEqual( Stem("kriegswichtigen"), "kriegswicht" );
	deepEqual( Stem("kriegt"), "kriegt" );
	deepEqual( Stem("kriegte"), "kriegt" );
	deepEqual( Stem("krieje"), "kriej" );
	deepEqual( Stem("kriminalverbrechen"), "kriminalverbrech" );
	deepEqual( Stem("kriminell"), "kriminell" );
	deepEqual( Stem("kriminelle"), "kriminell" );
	deepEqual( Stem("kriminelles"), "kriminell" );
	deepEqual( Stem("krise"), "kris" );
	deepEqual( Stem("krisen"), "kris" );
	deepEqual( Stem("kristall"), "kristall" );
	deepEqual( Stem("kristalle"), "kristall" );
	deepEqual( Stem("kritik"), "kritik" );
	deepEqual( Stem("kritikpunkt"), "kritikpunkt" );
	deepEqual( Stem("kritisch"), "kritisch" );
	deepEqual( Stem("kritische"), "kritisch" );
	deepEqual( Stem("kritischen"), "kritisch" );
	deepEqual( Stem("kritischer"), "kritisch" );
	deepEqual( Stem("kritisieren"), "kritisi" );
	deepEqual( Stem("kritisiert"), "kritisiert" );
	deepEqual( Stem("kroch"), "kroch" );
	deepEqual( Stem("krochen"), "kroch" );
	deepEqual( Stem("krochy"), "krochy" );
	deepEqual( Stem("krokodil"), "krokodil" );
	deepEqual( Stem("krönchen"), "kronch" );
	deepEqual( Stem("krone"), "kron" );
	deepEqual( Stem("kronen"), "kron" );
	deepEqual( Stem("krönen"), "kron" );
	deepEqual( Stem("kronleuchtern"), "kronleucht" );
	deepEqual( Stem("krönte"), "kront" );
	deepEqual( Stem("kropf"), "kropf" );
	deepEqual( Stem("kropfige"), "kropfig" );
	deepEqual( Stem("kropfigen"), "kropfig" );
	deepEqual( Stem("kropfiger"), "kropfig" );
	deepEqual( Stem("kropfschlinge"), "kropfschling" );
	deepEqual( Stem("kröten"), "krot" );
	deepEqual( Stem("kruge"), "krug" );
	deepEqual( Stem("krügelchen"), "krugelch" );
	deepEqual( Stem("krümel"), "krumel" );
	deepEqual( Stem("krumm"), "krumm" );
	deepEqual( Stem("krummbeinige"), "krummbein" );
	deepEqual( Stem("krumme"), "krumm" );
	deepEqual( Stem("krummen"), "krumm" );
	deepEqual( Stem("krümmen"), "krumm" );
	deepEqual( Stem("krummholz"), "krummholz" );
	deepEqual( Stem("krummholzbusche"), "krummholzbusch" );
	deepEqual( Stem("krummholzbuschwerk"), "krummholzbuschwerk" );
	deepEqual( Stem("krummholzzweigen"), "krummholzzweig" );
	deepEqual( Stem("krummrückiger"), "krummruck" );
	deepEqual( Stem("krümmte"), "krummt" );
	deepEqual( Stem("krümmten"), "krummt" );
	deepEqual( Stem("krümmung"), "krummung" );
	deepEqual( Stem("krüppel"), "kruppel" );
	deepEqual( Stem("krustengebirge"), "krustengebirg" );
	deepEqual( Stem("kruzifix"), "kruzifix" );
	deepEqual( Stem("kts"), "kts" );
	deepEqual( Stem("kuba"), "kuba" );
	deepEqual( Stem("kübel"), "kubel" );
	deepEqual( Stem("kübler"), "kubl" );
	deepEqual( Stem("küche"), "kuch" );
	deepEqual( Stem("kuchen"), "kuch" );
	deepEqual( Stem("kuchenappetit"), "kuchenappetit" );
	deepEqual( Stem("kuchenbacken"), "kuchenback" );
	deepEqual( Stem("küchenchef"), "kuchenchef" );
	deepEqual( Stem("kuchenduft"), "kuchenduft" );
	deepEqual( Stem("küchenjungen"), "kuchenj" );
	deepEqual( Stem("küchenlampe"), "kuchenlamp" );
	deepEqual( Stem("kuchenpäckchen"), "kuchenpackch" );
	deepEqual( Stem("kuchenteller"), "kuchentell" );
	deepEqual( Stem("küchentüre"), "kuchentur" );
	deepEqual( Stem("kuckuck"), "kuckuck" );
	deepEqual( Stem("kugel"), "kugel" );
	deepEqual( Stem("kugeln"), "kugeln" );
	deepEqual( Stem("kugelrund"), "kugelrund" );
	deepEqual( Stem("kugelrunde"), "kugelrund" );
	deepEqual( Stem("kugelrunden"), "kugelrund" );
	deepEqual( Stem("kugelrundes"), "kugelrund" );
	deepEqual( Stem("kugelschreiber"), "kugelschreib" );
	deepEqual( Stem("kugelstift"), "kugelstift" );
	deepEqual( Stem("kuh"), "kuh" );
	deepEqual( Stem("küh"), "kuh" );
	deepEqual( Stem("kühe"), "kuh" );
	deepEqual( Stem("kuhgespann"), "kuhgespann" );
	deepEqual( Stem("kuhknecht"), "kuhknecht" );
	deepEqual( Stem("kuhknechte"), "kuhknecht" );
	deepEqual( Stem("kühl"), "kuhl" );
	deepEqual( Stem("kühle"), "kuhl" );
	deepEqual( Stem("kühlen"), "kuhl" );
	deepEqual( Stem("kühler"), "kuhl" );
	deepEqual( Stem("kühlten"), "kuhlt" );
	deepEqual( Stem("kuhmagd"), "kuhmagd" );
	deepEqual( Stem("kühn"), "kuhn" );
	deepEqual( Stem("kühne"), "kuhn" );
	deepEqual( Stem("kühnen"), "kuhn" );
	deepEqual( Stem("kühnere"), "kuhn" );
	deepEqual( Stem("kühneren"), "kuhn" );
	deepEqual( Stem("kühnheit"), "kuhnheit" );
	deepEqual( Stem("kühnlich"), "kuhnlich" );
	deepEqual( Stem("kühnrich"), "kuhnrich" );
	deepEqual( Stem("kühnsten"), "kuhn" );
	deepEqual( Stem("kuhpfluge"), "kuhpflug" );
	deepEqual( Stem("kulisse"), "kuliss" );
	deepEqual( Stem("kullerbällchen"), "kullerballch" );
	deepEqual( Stem("kullerten"), "kullert" );
	deepEqual( Stem("kullich"), "kullich" );
	deepEqual( Stem("kultivieren"), "kultivi" );
	deepEqual( Stem("kultivierte"), "kultiviert" );
	deepEqual( Stem("kultur"), "kultur" );
	deepEqual( Stem("kulturell"), "kulturell" );
	deepEqual( Stem("kulturelle"), "kulturell" );
	deepEqual( Stem("kulturellen"), "kulturell" );
	deepEqual( Stem("kulturen"), "kultur" );
	deepEqual( Stem("kulturvereine"), "kulturverein" );
	deepEqual( Stem("kulturwort"), "kulturwort" );
	deepEqual( Stem("kummen"), "kumm" );
	deepEqual( Stem("kummer"), "kumm" );
	deepEqual( Stem("kümmerlich"), "kumm" );
	deepEqual( Stem("kümmerliche"), "kumm" );
	deepEqual( Stem("kümmerlichen"), "kumm" );
	deepEqual( Stem("kümmerlicher"), "kumm" );
	deepEqual( Stem("kümmern"), "kumm" );
	deepEqual( Stem("kümmernis"), "kummernis" );
	deepEqual( Stem("kümmernisse"), "kummernis" );
	deepEqual( Stem("kümmerst"), "kummerst" );
	deepEqual( Stem("kümmert"), "kummert" );
	deepEqual( Stem("kümmerte"), "kummert" );
	deepEqual( Stem("kümmerten"), "kummert" );
	deepEqual( Stem("kummervoll"), "kummervoll" );
	deepEqual( Stem("kumpan"), "kumpan" );
	deepEqual( Stem("kumpane"), "kumpan" );
	deepEqual( Stem("kund"), "kund" );
	deepEqual( Stem("kunde"), "kund" );
	deepEqual( Stem("kunden"), "kund" );
	deepEqual( Stem("kundgab"), "kundgab" );
	deepEqual( Stem("kundgetan"), "kundgetan" );
	deepEqual( Stem("kundig"), "kundig" );
	deepEqual( Stem("kundigen"), "kundig" );
	deepEqual( Stem("kündigen"), "kundig" );
	deepEqual( Stem("kündigte"), "kundigt" );
	deepEqual( Stem("kündigten"), "kundigt" );
	deepEqual( Stem("kündigung"), "kundig" );
	deepEqual( Stem("kundin"), "kundin" );
	deepEqual( Stem("kundschaft"), "kundschaft" );
	deepEqual( Stem("kundschafter"), "kundschaft" );
	deepEqual( Stem("künftig"), "kunftig" );
	deepEqual( Stem("künftige"), "kunftig" );
	deepEqual( Stem("künftigen"), "kunftig" );
	deepEqual( Stem("küng"), "kung" );
	deepEqual( Stem("kunnt"), "kunnt" );
	deepEqual( Stem("kunnten"), "kunnt" );
	deepEqual( Stem("kunst"), "kunst" );
	deepEqual( Stem("kunstdenkmäler"), "kunstdenkmal" );
	deepEqual( Stem("künste"), "kunst" );
	deepEqual( Stem("künsten"), "kunst" );
	deepEqual( Stem("kunstfertigkeit"), "kunstfert" );
	deepEqual( Stem("kunstgriff"), "kunstgriff" );
	deepEqual( Stem("kunstgriffe"), "kunstgriff" );
	deepEqual( Stem("kunsthistorische"), "kunsthistor" );
	deepEqual( Stem("künstler"), "kunstl" );
	deepEqual( Stem("künstlerische"), "kunstler" );
	deepEqual( Stem("künstlerischen"), "kunstler" );
	deepEqual( Stem("künstlers"), "kunstl" );
	deepEqual( Stem("künstlich"), "kunstlich" );
	deepEqual( Stem("künstliche"), "kunstlich" );
	deepEqual( Stem("künstlichem"), "kunstlich" );
	deepEqual( Stem("künstlichen"), "kunstlich" );
	deepEqual( Stem("künstlicher"), "kunstlich" );
	deepEqual( Stem("kunstliebhaber"), "kunstliebhab" );
	deepEqual( Stem("kunstlos"), "kunstlos" );
	deepEqual( Stem("kunstpfeifer"), "kunstpfeif" );
	deepEqual( Stem("kunstreichen"), "kunstreich" );
	deepEqual( Stem("kunstreicher"), "kunstreich" );
	deepEqual( Stem("kunstreiches"), "kunstreich" );
	deepEqual( Stem("kunststück"), "kunststuck" );
	deepEqual( Stem("kunststückchen"), "kunststuckch" );
	deepEqual( Stem("kunststücke"), "kunststuck" );
	deepEqual( Stem("kunstverständigen"), "kunstverstand" );
	deepEqual( Stem("kunstvoll"), "kunstvoll" );
	deepEqual( Stem("kunstvoller"), "kunstvoll" );
	deepEqual( Stem("kunstwerke"), "kunstwerk" );
	deepEqual( Stem("kunstwerken"), "kunstwerk" );
	deepEqual( Stem("kunterbunt"), "kunterbunt" );
	deepEqual( Stem("küpe"), "kup" );
	deepEqual( Stem("kupfer"), "kupf" );
	deepEqual( Stem("kupfern"), "kupf" );
	deepEqual( Stem("kupferstiche"), "kupferstich" );
	deepEqual( Stem("kuppel"), "kuppel" );
	deepEqual( Stem("kuppeln"), "kuppeln" );
	deepEqual( Stem("kuppen"), "kupp" );
	deepEqual( Stem("kuppler"), "kuppl" );
	deepEqual( Stem("kur"), "kur" );
	deepEqual( Stem("kurasch"), "kurasch" );
	deepEqual( Stem("kürassiere"), "kurassi" );
	deepEqual( Stem("kürassiers"), "kurassi" );
	deepEqual( Stem("kürbisse"), "kurbiss" );
	deepEqual( Stem("kurden"), "kurd" );
	deepEqual( Stem("kurdisch"), "kurdisch" );
	deepEqual( Stem("kurdische"), "kurdisch" );
	deepEqual( Stem("kurdischen"), "kurdisch" );
	deepEqual( Stem("kurdistan"), "kurdistan" );
	deepEqual( Stem("kurfürsten"), "kurfurst" );
	deepEqual( Stem("kurieren"), "kuri" );
	deepEqual( Stem("kurierte"), "kuriert" );
	deepEqual( Stem("kurrenten"), "kurrent" );
	deepEqual( Stem("kurs"), "kur" );
	deepEqual( Stem("kursus"), "kursus" );
	deepEqual( Stem("kurt"), "kurt" );
	deepEqual( Stem("kurubas"), "kurubas" );
	deepEqual( Stem("kurwochen"), "kurwoch" );
	deepEqual( Stem("kurz"), "kurz" );
	deepEqual( Stem("kürz"), "kurz" );
	deepEqual( Stem("kurzatmiger"), "kurzatm" );
	deepEqual( Stem("kurzbesuch"), "kurzbesuch" );
	deepEqual( Stem("kurze"), "kurz" );
	deepEqual( Stem("kürze"), "kurz" );
	deepEqual( Stem("kurzem"), "kurz" );
	deepEqual( Stem("kurzen"), "kurz" );
	deepEqual( Stem("kurzer"), "kurz" );
	deepEqual( Stem("kürzer"), "kurz" );
	deepEqual( Stem("kürzere"), "kurz" );
	deepEqual( Stem("kurzerhand"), "kurzerhand" );
	deepEqual( Stem("kurzes"), "kurz" );
	deepEqual( Stem("kurzfristig"), "kurzfrist" );
	deepEqual( Stem("kurzgeschoren"), "kurzgeschor" );
	deepEqual( Stem("kurzhörspiel"), "kurzhorspiel" );
	deepEqual( Stem("kürzlich"), "kurzlich" );
	deepEqual( Stem("kurzsichtig"), "kurzsicht" );
	deepEqual( Stem("kurzum"), "kurzum" );
	deepEqual( Stem("kurzweg"), "kurzweg" );
	deepEqual( Stem("kurzweil"), "kurzweil" );
	deepEqual( Stem("kurzweilig"), "kurzweil" );
	deepEqual( Stem("kurzweiligen"), "kurzweil" );
	deepEqual( Stem("kurzweiliges"), "kurzweil" );
	deepEqual( Stem("kurzweiligste"), "kurzweil" );
	deepEqual( Stem("kusch"), "kusch" );
	deepEqual( Stem("kuschs"), "kusch" );
	deepEqual( Stem("kuss"), "kuss" );
	deepEqual( Stem("kuß"), "kuss" );
	deepEqual( Stem("küss"), "kuss" );
	deepEqual( Stem("küsschen"), "kussch" );
	deepEqual( Stem("küsse"), "kuss" );
	deepEqual( Stem("küssen"), "kuss" );
	deepEqual( Stem("küssend"), "kussend" );
	deepEqual( Stem("küsserei"), "kusserei" );
	deepEqual( Stem("kusshändchen"), "kusshandch" );
	deepEqual( Stem("küsslein"), "kusslein" );
	deepEqual( Stem("küsst"), "kusst" );
	deepEqual( Stem("küßt"), "kusst" );
	deepEqual( Stem("küsste"), "kusst" );
	deepEqual( Stem("küßte"), "kusst" );
	deepEqual( Stem("küssten"), "kusst" );
	deepEqual( Stem("küsten"), "kust" );
	deepEqual( Stem("küstern"), "kust" );
	deepEqual( Stem("kutsche"), "kutsch" );
	deepEqual( Stem("kutscher"), "kutsch" );
	deepEqual( Stem("kutschers"), "kutsch" );
	deepEqual( Stem("kutschieren"), "kutschi" );
	deepEqual( Stem("kutschierte"), "kutschiert" );
	deepEqual( Stem("kutte"), "kutt" );
	deepEqual( Stem("kuv"), "kuv" );
	deepEqual( Stem("l"), "l" );
	deepEqual( Stem("la"), "la" );
	deepEqual( Stem("laban"), "laban" );
	deepEqual( Stem("labe"), "lab" );
	deepEqual( Stem("label"), "label" );
	deepEqual( Stem("laboratorium"), "laboratorium" );
	deepEqual( Stem("labyrinth"), "labyrinth" );
	deepEqual( Stem("labyrinthe"), "labyrinth" );
	deepEqual( Stem("lachchors"), "lachchor" );
	deepEqual( Stem("lächeln"), "lacheln" );
	deepEqual( Stem("lächelnd"), "lachelnd" );
	deepEqual( Stem("lächelnde"), "lachelnd" );
	deepEqual( Stem("lächelndem"), "lachelnd" );
	deepEqual( Stem("lächelnden"), "lachelnd" );
	deepEqual( Stem("lächelnder"), "lachelnd" );
	deepEqual( Stem("lächelt"), "lachelt" );
	deepEqual( Stem("lächelte"), "lachelt" );
	deepEqual( Stem("lächelten"), "lachelt" );
	deepEqual( Stem("lachen"), "lach" );
	deepEqual( Stem("lachend"), "lachend" );
	deepEqual( Stem("lachende"), "lachend" );
	deepEqual( Stem("lachendem"), "lachend" );
	deepEqual( Stem("lachenden"), "lachend" );
	deepEqual( Stem("lachendes"), "lachend" );
	deepEqual( Stem("lächerlich"), "lach" );
	deepEqual( Stem("lächerlichen"), "lach" );
	deepEqual( Stem("lächerliches"), "lach" );
	deepEqual( Stem("lächerlichkeit"), "lacher" );
	deepEqual( Stem("lächerlichsten"), "lach" );
	deepEqual( Stem("lachkrampf"), "lachkrampf" );
	deepEqual( Stem("lachs"), "lach" );
	deepEqual( Stem("lacht"), "lacht" );
	deepEqual( Stem("lachte"), "lacht" );
	deepEqual( Stem("lachten"), "lacht" );
	deepEqual( Stem("lachtest"), "lacht" );
	deepEqual( Stem("lachtöne"), "lachton" );
	deepEqual( Stem("lackieren"), "lacki" );
	deepEqual( Stem("lackiert"), "lackiert" );
	deepEqual( Stem("lackierten"), "lackiert" );
	deepEqual( Stem("lackl"), "lackl" );
	deepEqual( Stem("lädchen"), "ladch" );
	deepEqual( Stem("lädchens"), "ladch" );
	deepEqual( Stem("lade"), "lad" );
	deepEqual( Stem("laden"), "lad" );
	deepEqual( Stem("läden"), "lad" );
	deepEqual( Stem("ladend"), "ladend" );
	deepEqual( Stem("ladendiebin"), "ladendiebin" );
	deepEqual( Stem("ladenkasse"), "ladenkass" );
	deepEqual( Stem("ladentür"), "ladentur" );
	deepEqual( Stem("ladies"), "ladi" );
	deepEqual( Stem("lädt"), "ladt" );
	deepEqual( Stem("ladung"), "ladung" );
	deepEqual( Stem("lady"), "lady" );
	deepEqual( Stem("laert"), "laert" );
	deepEqual( Stem("laertius"), "laertius" );
	deepEqual( Stem("lag"), "lag" );
	deepEqual( Stem("lage"), "lag" );
	deepEqual( Stem("läge"), "lag" );
	deepEqual( Stem("lagen"), "lag" );
	deepEqual( Stem("lägen"), "lag" );
	deepEqual( Stem("lager"), "lag" );
	deepEqual( Stem("lagern"), "lag" );
	deepEqual( Stem("lagernd"), "lagernd" );
	deepEqual( Stem("lagers"), "lag" );
	deepEqual( Stem("lagerstätte"), "lagerstatt" );
	deepEqual( Stem("lagert"), "lagert" );
	deepEqual( Stem("lagerte"), "lagert" );
	deepEqual( Stem("lahme"), "lahm" );
	deepEqual( Stem("lahmen"), "lahm" );
	deepEqual( Stem("lahmgewordenen"), "lahmgeword" );
	deepEqual( Stem("lahnstreif"), "lahnstreif" );
	deepEqual( Stem("laie"), "laie" );
	deepEqual( Stem("laien"), "laien" );
	deepEqual( Stem("lallt"), "lallt" );
	deepEqual( Stem("lamech"), "lamech" );
	deepEqual( Stem("lamechs"), "lamech" );
	deepEqual( Stem("lamentieren"), "lamenti" );
	deepEqual( Stem("lamentierte"), "lamentiert" );
	deepEqual( Stem("lamm"), "lamm" );
	deepEqual( Stem("lämmchen"), "lammch" );
	deepEqual( Stem("lamme"), "lamm" );
	deepEqual( Stem("lämmer"), "lamm" );
	deepEqual( Stem("lämmerwölkchen"), "lammerwolkch" );
	deepEqual( Stem("lammes"), "lamm" );
	deepEqual( Stem("lammgeduld"), "lammgeduld" );
	deepEqual( Stem("lämmlein"), "lammlein" );
	deepEqual( Stem("lämpchen"), "lampch" );
	deepEqual( Stem("lampe"), "lamp" );
	deepEqual( Stem("lamperl"), "lamperl" );
	deepEqual( Stem("lanciert"), "lanciert" );
	deepEqual( Stem("land"), "land" );
	deepEqual( Stem("landarmee"), "landarme" );
	deepEqual( Stem("landauer"), "landau" );
	deepEqual( Stem("landbursche"), "landbursch" );
	deepEqual( Stem("ländchen"), "landch" );
	deepEqual( Stem("ländchens"), "landch" );
	deepEqual( Stem("lande"), "land" );
	deepEqual( Stem("landen"), "land" );
	deepEqual( Stem("länder"), "land" );
	deepEqual( Stem("länderfernen"), "landerfern" );
	deepEqual( Stem("ländern"), "land" );
	deepEqual( Stem("landes"), "land" );
	deepEqual( Stem("landesautoritäten"), "landesautoritat" );
	deepEqual( Stem("landesfürst"), "landesfurst" );
	deepEqual( Stem("landeskirche"), "landeskirch" );
	deepEqual( Stem("landeskirchen"), "landeskirch" );
	deepEqual( Stem("landeskirchliche"), "landeskirch" );
	deepEqual( Stem("landesmehrheit"), "landesmehr" );
	deepEqual( Stem("landesüblichen"), "landesub" );
	deepEqual( Stem("landesverteidigung"), "landesverteid" );
	deepEqual( Stem("landeswohl"), "landeswohl" );
	deepEqual( Stem("landete"), "landet" );
	deepEqual( Stem("landeten"), "landet" );
	deepEqual( Stem("landflüchtige"), "landflucht" );
	deepEqual( Stem("landfrau"), "landfrau" );
	deepEqual( Stem("landfriedenbrecher"), "landfriedenbrech" );
	deepEqual( Stem("landgericht"), "landgericht" );
	deepEqual( Stem("landhaus"), "landhaus" );
	deepEqual( Stem("landläufige"), "landlauf" );
	deepEqual( Stem("landleben"), "landleb" );
	deepEqual( Stem("landleute"), "landleut" );
	deepEqual( Stem("landleuten"), "landleut" );
	deepEqual( Stem("ländliche"), "landlich" );
	deepEqual( Stem("ländlichen"), "landlich" );
	deepEqual( Stem("landmädchen"), "landmadch" );
	deepEqual( Stem("landmann"), "landmann" );
	deepEqual( Stem("landmänner"), "landmann" );
	deepEqual( Stem("landpartie"), "landparti" );
	deepEqual( Stem("landpartien"), "landparti" );
	deepEqual( Stem("landrock"), "landrock" );
	deepEqual( Stem("landschaft"), "landschaft" );
	deepEqual( Stem("landschaften"), "landschaft" );
	deepEqual( Stem("landsitz"), "landsitz" );
	deepEqual( Stem("landsleute"), "landsleut" );
	deepEqual( Stem("landsmann"), "landsmann" );
	deepEqual( Stem("landsmannes"), "landsmann" );
	deepEqual( Stem("landstrasse"), "landstrass" );
	deepEqual( Stem("landstrassen"), "landstrass" );
	deepEqual( Stem("landstraßen"), "landstrass" );
	deepEqual( Stem("landstreicher"), "landstreich" );
	deepEqual( Stem("landstrich"), "landstrich" );
	deepEqual( Stem("landstriches"), "landstrich" );
	deepEqual( Stem("landsturm"), "landsturm" );
	deepEqual( Stem("landungsstelle"), "landungsstell" );
	deepEqual( Stem("landvolk"), "landvolk" );
	deepEqual( Stem("landvolkes"), "landvolk" );
	deepEqual( Stem("landwirtschaft"), "landwirtschaft" );
	deepEqual( Stem("lang"), "lang" );
	deepEqual( Stem("langbeinen"), "langbein" );
	deepEqual( Stem("lange"), "lang" );
	deepEqual( Stem("länge"), "lang" );
	deepEqual( Stem("langem"), "lang" );
	deepEqual( Stem("langen"), "lang" );
	deepEqual( Stem("langer"), "lang" );
	deepEqual( Stem("länger"), "lang" );
	deepEqual( Stem("längere"), "lang" );
	deepEqual( Stem("längeren"), "lang" );
	deepEqual( Stem("längerer"), "lang" );
	deepEqual( Stem("langes"), "lang" );
	deepEqual( Stem("langeweile"), "langeweil" );
	deepEqual( Stem("langgezogenen"), "langgezog" );
	deepEqual( Stem("langhingestreckte"), "langhingestreckt" );
	deepEqual( Stem("langjährige"), "langjahr" );
	deepEqual( Stem("langjährigen"), "langjahr" );
	deepEqual( Stem("längliche"), "langlich" );
	deepEqual( Stem("länglichen"), "langlich" );
	deepEqual( Stem("längliches"), "langlich" );
	deepEqual( Stem("langmut"), "langmut" );
	deepEqual( Stem("langmütig"), "langmut" );
	deepEqual( Stem("langriemige"), "langriem" );
	deepEqual( Stem("langrollende"), "langroll" );
	deepEqual( Stem("langsam"), "langsam" );
	deepEqual( Stem("langsame"), "langsam" );
	deepEqual( Stem("langsamen"), "langsam" );
	deepEqual( Stem("langsamer"), "langsam" );
	deepEqual( Stem("langsamkeit"), "langsam" );
	deepEqual( Stem("längst"), "lang" );
	deepEqual( Stem("längste"), "lang" );
	deepEqual( Stem("längsten"), "lang" );
	deepEqual( Stem("längstens"), "langst" );
	deepEqual( Stem("langstündige"), "langstund" );
	deepEqual( Stem("langte"), "langt" );
	deepEqual( Stem("langweilen"), "langweil" );
	deepEqual( Stem("langweilig"), "langweil" );
	deepEqual( Stem("langweilige"), "langweil" );
	deepEqual( Stem("langweiligen"), "langweil" );
	deepEqual( Stem("lanz"), "lanz" );
	deepEqual( Stem("lanze"), "lanz" );
	deepEqual( Stem("läppische"), "lappisch" );
	deepEqual( Stem("lärchenstämmchen"), "larchenstammch" );
	deepEqual( Stem("largo"), "largo" );
	deepEqual( Stem("larifari"), "larifari" );
	deepEqual( Stem("lärm"), "larm" );
	deepEqual( Stem("lärmen"), "larm" );
	deepEqual( Stem("lärmende"), "larmend" );
	deepEqual( Stem("lärmendes"), "larmend" );
	deepEqual( Stem("lärmten"), "larmt" );
	deepEqual( Stem("las"), "las" );
	deepEqual( Stem("lasen"), "las" );
	deepEqual( Stem("lass"), "lass" );
	deepEqual( Stem("laß"), "lass" );
	deepEqual( Stem("lasse"), "lass" );
	deepEqual( Stem("lassen"), "lass" );
	deepEqual( Stem("lässest"), "lass" );
	deepEqual( Stem("lasset"), "lasset" );
	deepEqual( Stem("lässig"), "lassig" );
	deepEqual( Stem("lasst"), "lasst" );
	deepEqual( Stem("laßt"), "lasst" );
	deepEqual( Stem("lässt"), "lasst" );
	deepEqual( Stem("läßt"), "lasst" );
	deepEqual( Stem("last"), "last" );
	deepEqual( Stem("lasten"), "last" );
	deepEqual( Stem("laster"), "last" );
	deepEqual( Stem("lasterhaften"), "lasterhaft" );
	deepEqual( Stem("lästerliche"), "last" );
	deepEqual( Stem("lästerliches"), "last" );
	deepEqual( Stem("lästerlichstem"), "last" );
	deepEqual( Stem("lastern"), "last" );
	deepEqual( Stem("lästern"), "last" );
	deepEqual( Stem("lästerns"), "lastern" );
	deepEqual( Stem("lästert"), "lastert" );
	deepEqual( Stem("lästerte"), "lastert" );
	deepEqual( Stem("lästerten"), "lastert" );
	deepEqual( Stem("lästerung"), "laster" );
	deepEqual( Stem("lästerungen"), "laster" );
	deepEqual( Stem("lastete"), "lastet" );
	deepEqual( Stem("lastfuhren"), "lastfuhr" );
	deepEqual( Stem("lästig"), "lastig" );
	deepEqual( Stem("lästige"), "lastig" );
	deepEqual( Stem("lastschlitten"), "lastschlitt" );
	deepEqual( Stem("lat"), "lat" );
	deepEqual( Stem("lateiner"), "latein" );
	deepEqual( Stem("lateinerte"), "lateinert" );
	deepEqual( Stem("lateinisch"), "latein" );
	deepEqual( Stem("lateinische"), "latein" );
	deepEqual( Stem("lateinischen"), "latein" );
	deepEqual( Stem("lateinschuljahr"), "lateinschuljahr" );
	deepEqual( Stem("laternchen"), "laternch" );
	deepEqual( Stem("laterne"), "latern" );
	deepEqual( Stem("laternen"), "latern" );
	deepEqual( Stem("lattenzaunes"), "lattenzaun" );
	deepEqual( Stem("lattichblatt"), "lattichblatt" );
	deepEqual( Stem("laub"), "laub" );
	deepEqual( Stem("laube"), "laub" );
	deepEqual( Stem("lauben"), "laub" );
	deepEqual( Stem("laubhütten"), "laubhutt" );
	deepEqual( Stem("laubmassen"), "laubmass" );
	deepEqual( Stem("lauen"), "lau" );
	deepEqual( Stem("lauer"), "lau" );
	deepEqual( Stem("lauerten"), "lauert" );
	deepEqual( Stem("lauf"), "lauf" );
	deepEqual( Stem("laufbahn"), "laufbahn" );
	deepEqual( Stem("laufe"), "lauf" );
	deepEqual( Stem("laufen"), "lauf" );
	deepEqual( Stem("laufend"), "laufend" );
	deepEqual( Stem("laufendem"), "laufend" );
	deepEqual( Stem("laufenden"), "laufend" );
	deepEqual( Stem("läufer"), "lauf" );
	deepEqual( Stem("laufes"), "lauf" );
	deepEqual( Stem("laufet"), "laufet" );
	deepEqual( Stem("laufs"), "lauf" );
	deepEqual( Stem("lauft"), "lauft" );
	deepEqual( Stem("läuft"), "lauft" );
	deepEqual( Stem("laune"), "laun" );
	deepEqual( Stem("launen"), "laun" );
	deepEqual( Stem("launigen"), "launig" );
	deepEqual( Stem("laurens"), "laur" );
	deepEqual( Stem("lausanne"), "lausann" );
	deepEqual( Stem("lauschend"), "lauschend" );
	deepEqual( Stem("lauschens"), "lausch" );
	deepEqual( Stem("lauscher"), "lausch" );
	deepEqual( Stem("lauschte"), "lauscht" );
	deepEqual( Stem("lauschten"), "lauscht" );
	deepEqual( Stem("läuse"), "laus" );
	deepEqual( Stem("lausekerl"), "lausekerl" );
	deepEqual( Stem("läusen"), "laus" );
	deepEqual( Stem("laut"), "laut" );
	deepEqual( Stem("laute"), "laut" );
	deepEqual( Stem("lautem"), "laut" );
	deepEqual( Stem("lauten"), "laut" );
	deepEqual( Stem("läuten"), "laut" );
	deepEqual( Stem("lauter"), "laut" );
	deepEqual( Stem("lautere"), "laut" );
	deepEqual( Stem("lauterem"), "laut" );
	deepEqual( Stem("lauteren"), "laut" );
	deepEqual( Stem("lauterkeit"), "lauter" );
	deepEqual( Stem("läutern"), "laut" );
	deepEqual( Stem("läuternd"), "lauternd" );
	deepEqual( Stem("lautes"), "laut" );
	deepEqual( Stem("lautet"), "lautet" );
	deepEqual( Stem("läutet"), "lautet" );
	deepEqual( Stem("lautete"), "lautet" );
	deepEqual( Stem("läutete"), "lautet" );
	deepEqual( Stem("lautlos"), "lautlos" );
	deepEqual( Stem("lautlose"), "lautlos" );
	deepEqual( Stem("lautloser"), "lautlos" );
	deepEqual( Stem("lautsprecher"), "lautsprech" );
	deepEqual( Stem("lautsprechern"), "lautsprech" );
	deepEqual( Stem("lautstarke"), "lautstark" );
	deepEqual( Stem("lazare"), "lazar" );
	deepEqual( Stem("lazarus"), "lazarus" );
	deepEqual( Stem("le"), "le" );
	deepEqual( Stem("leah"), "leah" );
	deepEqual( Stem("leb"), "leb" );
	deepEqual( Stem("lebe"), "leb" );
	deepEqual( Stem("leben"), "leb" );
	deepEqual( Stem("lebend"), "lebend" );
	deepEqual( Stem("lebende"), "lebend" );
	deepEqual( Stem("lebenden"), "lebend" );
	deepEqual( Stem("lebendes"), "lebend" );
	deepEqual( Stem("lebendig"), "lebend" );
	deepEqual( Stem("lebendige"), "lebend" );
	deepEqual( Stem("lebendigem"), "lebend" );
	deepEqual( Stem("lebendigen"), "lebend" );
	deepEqual( Stem("lebendiger"), "lebend" );
	deepEqual( Stem("lebendiges"), "lebend" );
	deepEqual( Stem("lebendigsten"), "lebend" );
	deepEqual( Stem("lebens"), "leb" );
	deepEqual( Stem("lebensabschnitt"), "lebensabschnitt" );
	deepEqual( Stem("lebensähnliches"), "lebensahn" );
	deepEqual( Stem("lebensalter"), "lebensalt" );
	deepEqual( Stem("lebensart"), "lebensart" );
	deepEqual( Stem("lebensbedingungen"), "lebensbeding" );
	deepEqual( Stem("lebensbedürfnis"), "lebensbedurfnis" );
	deepEqual( Stem("lebensbeschreibung"), "lebensbeschreib" );
	deepEqual( Stem("lebensbuche"), "lebensbuch" );
	deepEqual( Stem("lebenselixier"), "lebenselixi" );
	deepEqual( Stem("lebensfahrt"), "lebensfahrt" );
	deepEqual( Stem("lebensfeuer"), "lebensfeu" );
	deepEqual( Stem("lebensformen"), "lebensform" );
	deepEqual( Stem("lebensfreude"), "lebensfreud" );
	deepEqual( Stem("lebensfroh"), "lebensfroh" );
	deepEqual( Stem("lebensgefühl"), "lebensgefuhl" );
	deepEqual( Stem("lebensgeister"), "lebensgeist" );
	deepEqual( Stem("lebensgeschichte"), "lebensgeschicht" );
	deepEqual( Stem("lebensglück"), "lebensgluck" );
	deepEqual( Stem("lebensglücke"), "lebensgluck" );
	deepEqual( Stem("lebensguten"), "lebensgut" );
	deepEqual( Stem("lebenshelfer"), "lebenshelf" );
	deepEqual( Stem("lebensjahr"), "lebensjahr" );
	deepEqual( Stem("lebenskatastrophe"), "lebenskatastroph" );
	deepEqual( Stem("lebenskraft"), "lebenskraft" );
	deepEqual( Stem("lebenskräftig"), "lebenskraft" );
	deepEqual( Stem("lebenslanges"), "lebenslang" );
	deepEqual( Stem("lebenslauf"), "lebenslauf" );
	deepEqual( Stem("lebensläufen"), "lebenslauf" );
	deepEqual( Stem("lebenslicht"), "lebenslicht" );
	deepEqual( Stem("lebenslust"), "lebenslust" );
	deepEqual( Stem("lebenslustigen"), "lebenslust" );
	deepEqual( Stem("lebensmittel"), "lebensmittel" );
	deepEqual( Stem("lebensmittelembargos"), "lebensmittelembargos" );
	deepEqual( Stem("lebensmitteln"), "lebensmitteln" );
	deepEqual( Stem("lebensmut"), "lebensmut" );
	deepEqual( Stem("lebensordnung"), "lebensordn" );
	deepEqual( Stem("lebensordnungen"), "lebensordn" );
	deepEqual( Stem("lebensregeln"), "lebensregeln" );
	deepEqual( Stem("lebensretter"), "lebensrett" );
	deepEqual( Stem("lebenssache"), "lebenssach" );
	deepEqual( Stem("lebenssachverhalten"), "lebenssachverhalt" );
	deepEqual( Stem("lebensseligkeit"), "lebenssel" );
	deepEqual( Stem("lebenssituation"), "lebenssituation" );
	deepEqual( Stem("lebensstunde"), "lebensstund" );
	deepEqual( Stem("lebenstagen"), "lebenstag" );
	deepEqual( Stem("lebenstrieb"), "lebenstrieb" );
	deepEqual( Stem("lebenswandel"), "lebenswandel" );
	deepEqual( Stem("lebenswandels"), "lebenswandel" );
	deepEqual( Stem("lebenswasser"), "lebenswass" );
	deepEqual( Stem("lebensweg"), "lebensweg" );
	deepEqual( Stem("lebensweise"), "lebensweis" );
	deepEqual( Stem("lebensweisen"), "lebensweis" );
	deepEqual( Stem("lebensweisheit"), "lebensweis" );
	deepEqual( Stem("lebenszustand"), "lebenszustand" );
	deepEqual( Stem("lebenszustände"), "lebenszustand" );
	deepEqual( Stem("leber"), "leb" );
	deepEqual( Stem("leberwurst"), "leberwurst" );
	deepEqual( Stem("lebest"), "leb" );
	deepEqual( Stem("lebewohl"), "lebewohl" );
	deepEqual( Stem("lebhaft"), "lebhaft" );
	deepEqual( Stem("lebhafte"), "lebhaft" );
	deepEqual( Stem("lebhaftem"), "lebhaft" );
	deepEqual( Stem("lebhaften"), "lebhaft" );
	deepEqual( Stem("lebhafter"), "lebhaft" );
	deepEqual( Stem("lebhaftesten"), "lebhaft" );
	deepEqual( Stem("lebhaftigkeit"), "lebhaft" );
	deepEqual( Stem("lebkuchen"), "lebkuch" );
	deepEqual( Stem("leblos"), "leblos" );
	deepEqual( Stem("leblose"), "leblos" );
	deepEqual( Stem("leblosen"), "leblos" );
	deepEqual( Stem("lebloses"), "leblos" );
	deepEqual( Stem("lebst"), "lebst" );
	deepEqual( Stem("lebt"), "lebt" );
	deepEqual( Stem("lebtag"), "lebtag" );
	deepEqual( Stem("lebte"), "lebt" );
	deepEqual( Stem("lebten"), "lebt" );
	deepEqual( Stem("lebzeiten"), "lebzeit" );
	deepEqual( Stem("lechleitner"), "lechleitn" );
	deepEqual( Stem("lechneitner"), "lechneitn" );
	deepEqual( Stem("lechzt"), "lechzt" );
	deepEqual( Stem("lechzte"), "lechzt" );
	deepEqual( Stem("lechzten"), "lechzt" );
	deepEqual( Stem("lecken"), "leck" );
	deepEqual( Stem("lecker"), "leck" );
	deepEqual( Stem("leckerbissen"), "leckerbiss" );
	deepEqual( Stem("leckere"), "leck" );
	deepEqual( Stem("leckeren"), "leck" );
	deepEqual( Stem("leckeres"), "leck" );
	deepEqual( Stem("leckermäuler"), "leckermaul" );
	deepEqual( Stem("leckte"), "leckt" );
	deepEqual( Stem("leder"), "led" );
	deepEqual( Stem("lederkäppchen"), "lederkappch" );
	deepEqual( Stem("lederkleidung"), "lederkleid" );
	deepEqual( Stem("ledernen"), "ledern" );
	deepEqual( Stem("lederpantoffeln"), "lederpantoffeln" );
	deepEqual( Stem("ledersäckchen"), "ledersackch" );
	deepEqual( Stem("ledersofa"), "ledersofa" );
	deepEqual( Stem("ledertapeten"), "ledertapet" );
	deepEqual( Stem("lederzeug"), "lederzeug" );
	deepEqual( Stem("ledig"), "ledig" );
	deepEqual( Stem("ledige"), "ledig" );
	deepEqual( Stem("lediglich"), "ledig" );
	deepEqual( Stem("leer"), "leer" );
	deepEqual( Stem("leere"), "leer" );
	deepEqual( Stem("leeren"), "leer" );
	deepEqual( Stem("leerer"), "leer" );
	deepEqual( Stem("leeres"), "leer" );
	deepEqual( Stem("leerheit"), "leerheit" );
	deepEqual( Stem("leerraum"), "leerraum" );
	deepEqual( Stem("leerstehende"), "leersteh" );
	deepEqual( Stem("leerte"), "leert" );
	deepEqual( Stem("leg"), "leg" );
	deepEqual( Stem("legalität"), "legalitat" );
	deepEqual( Stem("lege"), "leg" );
	deepEqual( Stem("legen"), "leg" );
	deepEqual( Stem("legendenbildung"), "legendenbild" );
	deepEqual( Stem("leget"), "leget" );
	deepEqual( Stem("legislative"), "legislativ" );
	deepEqual( Stem("legitimation"), "legitimation" );
	deepEqual( Stem("legitimationspapier"), "legitimationspapi" );
	deepEqual( Stem("legitimationspapiere"), "legitimationspapi" );
	deepEqual( Stem("legt"), "legt" );
	deepEqual( Stem("legte"), "legt" );
	deepEqual( Stem("legten"), "legt" );
	deepEqual( Stem("lehmann"), "lehmann" );
	deepEqual( Stem("lehmiger"), "lehmig" );
	deepEqual( Stem("lehne"), "lehn" );
	deepEqual( Stem("lehnsessel"), "lehnsessel" );
	deepEqual( Stem("lehnt"), "lehnt" );
	deepEqual( Stem("lehnte"), "lehnt" );
	deepEqual( Stem("lehnten"), "lehnt" );
	deepEqual( Stem("lehr"), "lehr" );
	deepEqual( Stem("lehramtes"), "lehramt" );
	deepEqual( Stem("lehrbegriff"), "lehrbegriff" );
	deepEqual( Stem("lehrbegriffe"), "lehrbegriff" );
	deepEqual( Stem("lehrbestimmungen"), "lehrbestimm" );
	deepEqual( Stem("lehre"), "lehr" );
	deepEqual( Stem("lehren"), "lehr" );
	deepEqual( Stem("lehrende"), "lehrend" );
	deepEqual( Stem("lehrenden"), "lehrend" );
	deepEqual( Stem("lehrens"), "lehr" );
	deepEqual( Stem("lehrer"), "lehr" );
	deepEqual( Stem("lehrerin"), "lehrerin" );
	deepEqual( Stem("lehrern"), "lehr" );
	deepEqual( Stem("lehrerpult"), "lehrerpult" );
	deepEqual( Stem("lehret"), "lehret" );
	deepEqual( Stem("lehrgegenstände"), "lehrgegenstand" );
	deepEqual( Stem("lehrjahren"), "lehrjahr" );
	deepEqual( Stem("lehrling"), "lehrling" );
	deepEqual( Stem("lehrlinge"), "lehrling" );
	deepEqual( Stem("lehrmeinungen"), "lehrmein" );
	deepEqual( Stem("lehrpunkte"), "lehrpunkt" );
	deepEqual( Stem("lehrreichen"), "lehrreich" );
	deepEqual( Stem("lehrreicher"), "lehrreich" );
	deepEqual( Stem("lehrreiches"), "lehrreich" );
	deepEqual( Stem("lehrsatz"), "lehrsatz" );
	deepEqual( Stem("lehrsätze"), "lehrsatz" );
	deepEqual( Stem("lehrsätzen"), "lehrsatz" );
	deepEqual( Stem("lehrstück"), "lehrstuck" );
	deepEqual( Stem("lehrstücke"), "lehrstuck" );
	deepEqual( Stem("lehrt"), "lehrt" );
	deepEqual( Stem("lehrte"), "lehrt" );
	deepEqual( Stem("lehrten"), "lehrt" );
	deepEqual( Stem("lehrwahrheiten"), "lehrwahr" );
	deepEqual( Stem("leib"), "leib" );
	deepEqual( Stem("leibarzt"), "leibarzt" );
	deepEqual( Stem("leibe"), "leib" );
	deepEqual( Stem("leiber"), "leib" );
	deepEqual( Stem("leibes"), "leib" );
	deepEqual( Stem("leibesgestalt"), "leibesgestalt" );
	deepEqual( Stem("leibesleben"), "leibesleb" );
	deepEqual( Stem("leibesnahrung"), "leibesnahr" );
	deepEqual( Stem("leibesorgane"), "leibesorgan" );
	deepEqual( Stem("leibesübungen"), "leibesub" );
	deepEqual( Stem("leibgericht"), "leibgericht" );
	deepEqual( Stem("leibgerichte"), "leibgericht" );
	deepEqual( Stem("leibhafte"), "leibhaft" );
	deepEqual( Stem("leibhaftige"), "leibhaft" );
	deepEqual( Stem("leibhornisten"), "leibhornist" );
	deepEqual( Stem("leibjäger"), "leibjag" );
	deepEqual( Stem("leibjägern"), "leibjag" );
	deepEqual( Stem("leiblich"), "leiblich" );
	deepEqual( Stem("leibliche"), "leiblich" );
	deepEqual( Stem("leiblichen"), "leiblich" );
	deepEqual( Stem("leiblicher"), "leiblich" );
	deepEqual( Stem("leibliches"), "leiblich" );
	deepEqual( Stem("leibpferd"), "leibpferd" );
	deepEqual( Stem("leibröcke"), "leibrock" );
	deepEqual( Stem("leibsessel"), "leibsessel" );
	deepEqual( Stem("leibt"), "leibt" );
	deepEqual( Stem("leibte"), "leibt" );
	deepEqual( Stem("leibteller"), "leibtell" );
	deepEqual( Stem("leiche"), "leich" );
	deepEqual( Stem("leichen"), "leich" );
	deepEqual( Stem("leichenbegängnis"), "leichenbegangnis" );
	deepEqual( Stem("leichengestank"), "leichengestank" );
	deepEqual( Stem("leichenschmaus"), "leichenschmaus" );
	deepEqual( Stem("leichnam"), "leichnam" );
	deepEqual( Stem("leichname"), "leichnam" );
	deepEqual( Stem("leichnamen"), "leichnam" );
	deepEqual( Stem("leicht"), "leicht" );
	deepEqual( Stem("leichtbeschwingte"), "leichtbeschwingt" );
	deepEqual( Stem("leichte"), "leicht" );
	deepEqual( Stem("leichten"), "leicht" );
	deepEqual( Stem("leichter"), "leicht" );
	deepEqual( Stem("leichtere"), "leicht" );
	deepEqual( Stem("leichtes"), "leicht" );
	deepEqual( Stem("leichtfertige"), "leichtfert" );
	deepEqual( Stem("leichtfertigem"), "leichtfert" );
	deepEqual( Stem("leichtfertiges"), "leichtfert" );
	deepEqual( Stem("leichthin"), "leichthin" );
	deepEqual( Stem("leichtigkeit"), "leichtig" );
	deepEqual( Stem("leichtlich"), "leichtlich" );
	deepEqual( Stem("leichtsinn"), "leichtsinn" );
	deepEqual( Stem("leichtsinnig"), "leichtsinn" );
	deepEqual( Stem("leichtsinnige"), "leichtsinn" );
	deepEqual( Stem("leichtsinnigen"), "leichtsinn" );
	deepEqual( Stem("leichtsinniger"), "leichtsinn" );
	deepEqual( Stem("leichtsinnigkeit"), "leichtsinn" );
	deepEqual( Stem("leichtsinns"), "leichtsinn" );
	deepEqual( Stem("leid"), "leid" );
	deepEqual( Stem("leide"), "leid" );
	deepEqual( Stem("leiden"), "leid" );
	deepEqual( Stem("leidend"), "leidend" );
	deepEqual( Stem("leidende"), "leidend" );
	deepEqual( Stem("leidenden"), "leidend" );
	deepEqual( Stem("leidendes"), "leidend" );
	deepEqual( Stem("leidens"), "leid" );
	deepEqual( Stem("leidenschaft"), "leidenschaft" );
	deepEqual( Stem("leidenschaften"), "leidenschaft" );
	deepEqual( Stem("leidenschaftlich"), "leidenschaft" );
	deepEqual( Stem("leidenschaftliche"), "leidenschaft" );
	deepEqual( Stem("leidenschaftlicher"), "leidenschaft" );
	deepEqual( Stem("leidenschaftlichkeit"), "leidenschaft" );
	deepEqual( Stem("leidensgenossen"), "leidensgenoss" );
	deepEqual( Stem("leidentlich"), "leident" );
	deepEqual( Stem("leider"), "leid" );
	deepEqual( Stem("leides"), "leid" );
	deepEqual( Stem("leidet"), "leidet" );
	deepEqual( Stem("leidige"), "leidig" );
	deepEqual( Stem("leidlich"), "leidlich" );
	deepEqual( Stem("leids"), "leid" );
	deepEqual( Stem("leierkasten"), "leierkast" );
	deepEqual( Stem("leiermann"), "leiermann" );
	deepEqual( Stem("leiermänner"), "leiermann" );
	deepEqual( Stem("leihen"), "leih" );
	deepEqual( Stem("leim"), "leim" );
	deepEqual( Stem("leimrute"), "leimrut" );
	deepEqual( Stem("lein"), "lein" );
	deepEqual( Stem("leine"), "lein" );
	deepEqual( Stem("leinen"), "lein" );
	deepEqual( Stem("leinene"), "lein" );
	deepEqual( Stem("leinenen"), "lein" );
	deepEqual( Stem("leinentüchern"), "leinentuch" );
	deepEqual( Stem("leins"), "lein" );
	deepEqual( Stem("leinwand"), "leinwand" );
	deepEqual( Stem("leinwandbinde"), "leinwandbind" );
	deepEqual( Stem("leinwandgewändern"), "leinwandgewand" );
	deepEqual( Stem("leinwandne"), "leinwandn" );
	deepEqual( Stem("leinwandstreifen"), "leinwandstreif" );
	deepEqual( Stem("leipzig"), "leipzig" );
	deepEqual( Stem("leis"), "leis" );
	deepEqual( Stem("leisbewegte"), "leisbewegt" );
	deepEqual( Stem("leise"), "leis" );
	deepEqual( Stem("leisen"), "leis" );
	deepEqual( Stem("leiser"), "leis" );
	deepEqual( Stem("leises"), "leis" );
	deepEqual( Stem("leiseste"), "leis" );
	deepEqual( Stem("leisten"), "leist" );
	deepEqual( Stem("leistet"), "leistet" );
	deepEqual( Stem("leistete"), "leistet" );
	deepEqual( Stem("leisteten"), "leistet" );
	deepEqual( Stem("leistung"), "leistung" );
	deepEqual( Stem("leistungen"), "leistung" );
	deepEqual( Stem("leistungsfähigen"), "leistungsfah" );
	deepEqual( Stem("leit"), "leit" );
	deepEqual( Stem("leite"), "leit" );
	deepEqual( Stem("leiten"), "leit" );
	deepEqual( Stem("leiter"), "leit" );
	deepEqual( Stem("leiterchen"), "leiterch" );
	deepEqual( Stem("leiterin"), "leiterin" );
	deepEqual( Stem("leiters"), "leit" );
	deepEqual( Stem("leitest"), "leit" );
	deepEqual( Stem("leitet"), "leitet" );
	deepEqual( Stem("leitete"), "leitet" );
	deepEqual( Stem("leitner"), "leitn" );
	deepEqual( Stem("leitnermali"), "leitnermali" );
	deepEqual( Stem("leitseil"), "leitseil" );
	deepEqual( Stem("leitstern"), "leit" );
	deepEqual( Stem("leitung"), "leitung" );
	deepEqual( Stem("leitwort"), "leitwort" );
	deepEqual( Stem("lenden"), "lend" );
	deepEqual( Stem("leni"), "leni" );
	deepEqual( Stem("lenis"), "lenis" );
	deepEqual( Stem("lenken"), "lenk" );
	deepEqual( Stem("lenkerin"), "lenkerin" );
	deepEqual( Stem("lenkt"), "lenkt" );
	deepEqual( Stem("lenkte"), "lenkt" );
	deepEqual( Stem("lenzlichte"), "lenzlicht" );
	deepEqual( Stem("lenzwind"), "lenzwind" );
	deepEqual( Stem("leopard"), "leopard" );
	deepEqual( Stem("lerche"), "lerch" );
	deepEqual( Stem("lerchen"), "lerch" );
	deepEqual( Stem("lerne"), "lern" );
	deepEqual( Stem("lernen"), "lern" );
	deepEqual( Stem("lernens"), "lern" );
	deepEqual( Stem("lernt"), "lernt" );
	deepEqual( Stem("lernte"), "lernt" );
	deepEqual( Stem("lesebücher"), "lesebuch" );
	deepEqual( Stem("lesen"), "les" );
	deepEqual( Stem("leser"), "les" );
	deepEqual( Stem("leserforum"), "leserforum" );
	deepEqual( Stem("lestungen"), "lestung" );
	deepEqual( Stem("lettern"), "lett" );
	deepEqual( Stem("letzt"), "letzt" );
	deepEqual( Stem("letzte"), "letzt" );
	deepEqual( Stem("letzten"), "letzt" );
	deepEqual( Stem("letztenmal"), "letztenmal" );
	deepEqual( Stem("letzter"), "letzt" );
	deepEqual( Stem("letztere"), "letzt" );
	deepEqual( Stem("letzterem"), "letzt" );
	deepEqual( Stem("letzteren"), "letzt" );
	deepEqual( Stem("letzterer"), "letzt" );
	deepEqual( Stem("letzteres"), "letzt" );
	deepEqual( Stem("letztern"), "letzt" );
	deepEqual( Stem("letztes"), "letzt" );
	deepEqual( Stem("letztesmal"), "letztesmal" );
	deepEqual( Stem("letzthin"), "letzthin" );
	deepEqual( Stem("letztlich"), "letztlich" );
	deepEqual( Stem("leuchte"), "leucht" );
	deepEqual( Stem("leuchten"), "leucht" );
	deepEqual( Stem("leuchtend"), "leuchtend" );
	deepEqual( Stem("leuchtende"), "leuchtend" );
	deepEqual( Stem("leuchtendem"), "leuchtend" );
	deepEqual( Stem("leuchtenden"), "leuchtend" );
	deepEqual( Stem("leuchtender"), "leuchtend" );
	deepEqual( Stem("leuchter"), "leucht" );
	deepEqual( Stem("leuchtern"), "leucht" );
	deepEqual( Stem("leuchtet"), "leuchtet" );
	deepEqual( Stem("leuchtete"), "leuchtet" );
	deepEqual( Stem("leuchteten"), "leuchtet" );
	deepEqual( Stem("leuchtkäfer"), "leuchtkaf" );
	deepEqual( Stem("leugnen"), "leugn" );
	deepEqual( Stem("leugnet"), "leugnet" );
	deepEqual( Stem("leugneten"), "leugnet" );
	deepEqual( Stem("leugnung"), "leugnung" );
	deepEqual( Stem("leut"), "leut" );
	deepEqual( Stem("leutchen"), "leutch" );
	deepEqual( Stem("leute"), "leut" );
	deepEqual( Stem("leuten"), "leut" );
	deepEqual( Stem("leutlein"), "leutlein" );
	deepEqual( Stem("leutnants"), "leutnant" );
	deepEqual( Stem("leutselig"), "leutsel" );
	deepEqual( Stem("leutseligkeit"), "leutsel" );
	deepEqual( Stem("levi"), "levi" );
	deepEqual( Stem("leviathan"), "leviathan" );
	deepEqual( Stem("leviathans"), "leviathan" );
	deepEqual( Stem("levis"), "levis" );
	deepEqual( Stem("levit"), "levit" );
	deepEqual( Stem("levite"), "levit" );
	deepEqual( Stem("leviten"), "levit" );
	deepEqual( Stem("lex"), "lex" );
	deepEqual( Stem("lhrem"), "lhrem" );
	deepEqual( Stem("libanon"), "libanon" );
	deepEqual( Stem("libanons"), "libanon" );
	deepEqual( Stem("libellen"), "libell" );
	deepEqual( Stem("liber"), "lib" );
	deepEqual( Stem("liberale"), "liberal" );
	deepEqual( Stem("liberalen"), "liberal" );
	deepEqual( Stem("liberaler"), "liberal" );
	deepEqual( Stem("libero"), "libero" );
	deepEqual( Stem("libni"), "libni" );
	deepEqual( Stem("libyer"), "liby" );
	deepEqual( Stem("lich"), "lich" );
	deepEqual( Stem("liche"), "lich" );
	deepEqual( Stem("licht"), "licht" );
	deepEqual( Stem("lichtarten"), "lichtart" );
	deepEqual( Stem("lichtbahn"), "lichtbahn" );
	deepEqual( Stem("lichtbraunes"), "lichtbraun" );
	deepEqual( Stem("lichte"), "licht" );
	deepEqual( Stem("lichtecke"), "lichteck" );
	deepEqual( Stem("lichtem"), "licht" );
	deepEqual( Stem("lichten"), "licht" );
	deepEqual( Stem("lichter"), "licht" );
	deepEqual( Stem("lichterchen"), "lichterch" );
	deepEqual( Stem("lichteren"), "licht" );
	deepEqual( Stem("lichterloh"), "lichterloh" );
	deepEqual( Stem("lichtern"), "licht" );
	deepEqual( Stem("lichtes"), "licht" );
	deepEqual( Stem("lichtete"), "lichtet" );
	deepEqual( Stem("lichtfeld"), "lichtfeld" );
	deepEqual( Stem("lichtflocken"), "lichtflock" );
	deepEqual( Stem("lichtpünktchen"), "lichtpunktch" );
	deepEqual( Stem("lichts"), "licht" );
	deepEqual( Stem("lichtstrahlen"), "lichtstrahl" );
	deepEqual( Stem("lichtstrahlungen"), "lichtstrahl" );
	deepEqual( Stem("lichtung"), "lichtung" );
	deepEqual( Stem("lichtungen"), "lichtung" );
	deepEqual( Stem("lichtvoll"), "lichtvoll" );
	deepEqual( Stem("lider"), "lid" );
	deepEqual( Stem("lieb"), "lieb" );
	deepEqual( Stem("liebchen"), "liebch" );
	deepEqual( Stem("liebe"), "lieb" );
	deepEqual( Stem("liebegutes"), "liebegut" );
	deepEqual( Stem("lieben"), "lieb" );
	deepEqual( Stem("liebende"), "liebend" );
	deepEqual( Stem("liebenden"), "liebend" );
	deepEqual( Stem("liebenswürdig"), "liebenswurd" );
	deepEqual( Stem("liebenswürdige"), "liebenswurd" );
	deepEqual( Stem("liebenswürdigen"), "liebenswurd" );
	deepEqual( Stem("liebenswürdiger"), "liebenswurd" );
	deepEqual( Stem("liebenswürdigkeit"), "liebenswurd" );
	deepEqual( Stem("liebenswürdigste"), "liebenswurd" );
	deepEqual( Stem("lieber"), "lieb" );
	deepEqual( Stem("lieberasenden"), "lieberas" );
	deepEqual( Stem("liebes"), "lieb" );
	deepEqual( Stem("liebesaffäre"), "liebesaffar" );
	deepEqual( Stem("liebesarten"), "liebesart" );
	deepEqual( Stem("liebesbezeugungen"), "liebesbezeug" );
	deepEqual( Stem("liebesbriefe"), "liebesbrief" );
	deepEqual( Stem("liebeserklärung"), "liebeserklar" );
	deepEqual( Stem("liebeserklärungen"), "liebeserklar" );
	deepEqual( Stem("liebesfeuer"), "liebesfeu" );
	deepEqual( Stem("liebesfurcht"), "liebesfurcht" );
	deepEqual( Stem("liebesgedanken"), "liebesgedank" );
	deepEqual( Stem("liebesgeschichte"), "liebesgeschicht" );
	deepEqual( Stem("liebesgeschwellten"), "liebesgeschwellt" );
	deepEqual( Stem("liebesgetändel"), "liebesgetandel" );
	deepEqual( Stem("liebesglut"), "liebesglut" );
	deepEqual( Stem("liebesgschicht"), "liebesgschicht" );
	deepEqual( Stem("liebeshandel"), "liebeshandel" );
	deepEqual( Stem("liebeshaus"), "liebeshaus" );
	deepEqual( Stem("liebeslauten"), "liebeslaut" );
	deepEqual( Stem("liebesliebe"), "liebeslieb" );
	deepEqual( Stem("liebesliteratur"), "liebesliteratur" );
	deepEqual( Stem("liebeslocken"), "liebeslock" );
	deepEqual( Stem("liebesneigungen"), "liebesneig" );
	deepEqual( Stem("liebespflicht"), "liebespflicht" );
	deepEqual( Stem("liebestolle"), "liebestoll" );
	deepEqual( Stem("liebestriebe"), "liebestrieb" );
	deepEqual( Stem("liebestrieben"), "liebestrieb" );
	deepEqual( Stem("liebeswerke"), "liebeswerk" );
	deepEqual( Stem("liebeswerken"), "liebeswerk" );
	deepEqual( Stem("liebet"), "liebet" );
	deepEqual( Stem("liebevoll"), "liebevoll" );
	deepEqual( Stem("liebevollen"), "liebevoll" );
	deepEqual( Stem("liebfrauenkirche"), "liebfrauenkirch" );
	deepEqual( Stem("liebhaben"), "liebhab" );
	deepEqual( Stem("liebhaber"), "liebhab" );
	deepEqual( Stem("liebhabern"), "liebhab" );
	deepEqual( Stem("liebkosen"), "liebkos" );
	deepEqual( Stem("liebkosendes"), "liebkos" );
	deepEqual( Stem("liebkost"), "liebkost" );
	deepEqual( Stem("liebkoste"), "liebkost" );
	deepEqual( Stem("liebkosungen"), "liebkos" );
	deepEqual( Stem("lieblich"), "lieblich" );
	deepEqual( Stem("liebliche"), "lieblich" );
	deepEqual( Stem("lieblichem"), "lieblich" );
	deepEqual( Stem("lieblichen"), "lieblich" );
	deepEqual( Stem("lieblicher"), "lieblich" );
	deepEqual( Stem("liebliches"), "lieblich" );
	deepEqual( Stem("lieblichkeit"), "lieblich" );
	deepEqual( Stem("lieblichste"), "lieblich" );
	deepEqual( Stem("lieblichsten"), "lieblich" );
	deepEqual( Stem("liebling"), "liebling" );
	deepEqual( Stem("lieblingsbilder"), "lieblingsbild" );
	deepEqual( Stem("lieblos"), "lieblos" );
	deepEqual( Stem("liebreich"), "liebreich" );
	deepEqual( Stem("liebreizenden"), "liebreiz" );
	deepEqual( Stem("liebs"), "lieb" );
	deepEqual( Stem("liebsleut"), "liebsleut" );
	deepEqual( Stem("liebst"), "lieb" );
	deepEqual( Stem("liebste"), "lieb" );
	deepEqual( Stem("liebsten"), "lieb" );
	deepEqual( Stem("liebster"), "lieb" );
	deepEqual( Stem("liebstes"), "lieb" );
	deepEqual( Stem("liebt"), "liebt" );
	deepEqual( Stem("liebtätigkeit"), "liebtat" );
	deepEqual( Stem("liebtätigkeitswerke"), "liebtatigkeitswerk" );
	deepEqual( Stem("liebte"), "liebt" );
	deepEqual( Stem("liebten"), "liebt" );
	deepEqual( Stem("lied"), "lied" );
	deepEqual( Stem("liedchen"), "liedch" );
	deepEqual( Stem("liede"), "lied" );
	deepEqual( Stem("lieder"), "lied" );
	deepEqual( Stem("liederbuch"), "liederbuch" );
	deepEqual( Stem("liederchen"), "liederch" );
	deepEqual( Stem("liedergäste"), "liedergast" );
	deepEqual( Stem("liederlich"), "lied" );
	deepEqual( Stem("liederlichen"), "lied" );
	deepEqual( Stem("liederlicher"), "lied" );
	deepEqual( Stem("liedern"), "lied" );
	deepEqual( Stem("liedes"), "lied" );
	deepEqual( Stem("liedl"), "liedl" );
	deepEqual( Stem("liedln"), "liedln" );
	deepEqual( Stem("lief"), "lief" );
	deepEqual( Stem("liefe"), "lief" );
	deepEqual( Stem("liefen"), "lief" );
	deepEqual( Stem("liefern"), "lief" );
	deepEqual( Stem("liefert"), "liefert" );
	deepEqual( Stem("lieferung"), "liefer" );
	deepEqual( Stem("lieg"), "lieg" );
	deepEqual( Stem("liege"), "lieg" );
	deepEqual( Stem("liegen"), "lieg" );
	deepEqual( Stem("liegend"), "liegend" );
	deepEqual( Stem("liegende"), "liegend" );
	deepEqual( Stem("liegenden"), "liegend" );
	deepEqual( Stem("liegendes"), "liegend" );
	deepEqual( Stem("liegengeblieben"), "liegengeblieb" );
	deepEqual( Stem("liegengelassen"), "liegengelass" );
	deepEqual( Stem("liegenlassen"), "liegenlass" );
	deepEqual( Stem("liegst"), "lieg" );
	deepEqual( Stem("liegt"), "liegt" );
	deepEqual( Stem("lieh"), "lieh" );
	deepEqual( Stem("lieschen"), "liesch" );
	deepEqual( Stem("liese"), "lies" );
	deepEqual( Stem("liess"), "liess" );
	deepEqual( Stem("ließ"), "liess" );
	deepEqual( Stem("liesse"), "liess" );
	deepEqual( Stem("ließe"), "liess" );
	deepEqual( Stem("liessen"), "liess" );
	deepEqual( Stem("ließen"), "liess" );
	deepEqual( Stem("liest"), "liest" );
	deepEqual( Stem("liestal"), "liestal" );
	deepEqual( Stem("life"), "lif" );
	deepEqual( Stem("liked"), "liked" );
	deepEqual( Stem("limonade"), "limonad" );
	deepEqual( Stem("limonaden"), "limonad" );
	deepEqual( Stem("lind"), "lind" );
	deepEqual( Stem("linde"), "lind" );
	deepEqual( Stem("linden"), "lind" );
	deepEqual( Stem("lindenblättchen"), "lindenblattch" );
	deepEqual( Stem("lindenbolz"), "lindenbolz" );
	deepEqual( Stem("lindengebüsches"), "lindengebusch" );
	deepEqual( Stem("lindenkranze"), "lindenkranz" );
	deepEqual( Stem("lindern"), "lind" );
	deepEqual( Stem("lineal"), "lineal" );
	deepEqual( Stem("linie"), "lini" );
	deepEqual( Stem("linien"), "lini" );
	deepEqual( Stem("linienschiffe"), "linienschiff" );
	deepEqual( Stem("linke"), "link" );
	deepEqual( Stem("linken"), "link" );
	deepEqual( Stem("linker"), "link" );
	deepEqual( Stem("linkes"), "link" );
	deepEqual( Stem("linkische"), "linkisch" );
	deepEqual( Stem("links"), "link" );
	deepEqual( Stem("linnen"), "linn" );
	deepEqual( Stem("linum"), "linum" );
	deepEqual( Stem("lipp"), "lipp" );
	deepEqual( Stem("lippe"), "lipp" );
	deepEqual( Stem("lippen"), "lipp" );
	deepEqual( Stem("lippenbeissen"), "lippenbeiss" );
	deepEqual( Stem("lippenbeißen"), "lippenbeiss" );
	deepEqual( Stem("lippenbewegungen"), "lippenbeweg" );
	deepEqual( Stem("lipps"), "lipps" );
	deepEqual( Stem("liquidierte"), "liquidiert" );
	deepEqual( Stem("lischer"), "lisch" );
	deepEqual( Stem("lischsprachiges"), "lischsprach" );
	deepEqual( Stem("lispeln"), "lispeln" );
	deepEqual( Stem("lissabon"), "lissabon" );
	deepEqual( Stem("list"), "list" );
	deepEqual( Stem("liste"), "list" );
	deepEqual( Stem("listen"), "list" );
	deepEqual( Stem("listig"), "listig" );
	deepEqual( Stem("listige"), "listig" );
	deepEqual( Stem("listigen"), "listig" );
	deepEqual( Stem("listiger"), "listig" );
	deepEqual( Stem("listigerweise"), "listigerweis" );
	deepEqual( Stem("listiges"), "listig" );
	deepEqual( Stem("liter"), "lit" );
	deepEqual( Stem("literatur"), "literatur" );
	deepEqual( Stem("literaturliste"), "literaturlist" );
	deepEqual( Stem("litt"), "litt" );
	deepEqual( Stem("litte"), "litt" );
	deepEqual( Stem("litten"), "litt" );
	deepEqual( Stem("living"), "living" );
	deepEqual( Stem("livius"), "livius" );
	deepEqual( Stem("livree"), "livre" );
	deepEqual( Stem("ln"), "ln" );
	deepEqual( Stem("lndikativ"), "lndikativ" );
	deepEqual( Stem("load"), "load" );
	deepEqual( Stem("lob"), "lob" );
	deepEqual( Stem("lobe"), "lob" );
	deepEqual( Stem("loben"), "lob" );
	deepEqual( Stem("lobenden"), "lobend" );
	deepEqual( Stem("lobet"), "lobet" );
	deepEqual( Stem("lobgesang"), "lobgesang" );
	deepEqual( Stem("löblicher"), "loblich" );
	deepEqual( Stem("lobpreisen"), "lobpreis" );
	deepEqual( Stem("lobpreisung"), "lobpreis" );
	deepEqual( Stem("lobsingen"), "lobsing" );
	deepEqual( Stem("lobsinget"), "lobsinget" );
	deepEqual( Stem("lobt"), "lobt" );
	deepEqual( Stem("lobte"), "lobt" );
	deepEqual( Stem("loch"), "loch" );
	deepEqual( Stem("löchelchen"), "lochelch" );
	deepEqual( Stem("löcher"), "loch" );
	deepEqual( Stem("loci"), "loci" );
	deepEqual( Stem("locis"), "locis" );
	deepEqual( Stem("löckchen"), "lockch" );
	deepEqual( Stem("locken"), "lock" );
	deepEqual( Stem("lockend"), "lockend" );
	deepEqual( Stem("lockenden"), "lockend" );
	deepEqual( Stem("lockenhaar"), "lockenhaar" );
	deepEqual( Stem("lockenkopfe"), "lockenkopf" );
	deepEqual( Stem("lockerten"), "lockert" );
	deepEqual( Stem("lockort"), "lockort" );
	deepEqual( Stem("lockruf"), "lockruf" );
	deepEqual( Stem("lockte"), "lockt" );
	deepEqual( Stem("locus"), "locus" );
	deepEqual( Stem("lodenmantel"), "lodenmantel" );
	deepEqual( Stem("loeb"), "loeb" );
	deepEqual( Stem("löffel"), "loffel" );
	deepEqual( Stem("löffeln"), "loffeln" );
	deepEqual( Stem("log"), "log" );
	deepEqual( Stem("loge"), "log" );
	deepEqual( Stem("logik"), "logik" );
	deepEqual( Stem("logisch"), "logisch" );
	deepEqual( Stem("logische"), "logisch" );
	deepEqual( Stem("logischen"), "logisch" );
	deepEqual( Stem("logouv"), "logouv" );
	deepEqual( Stem("logwn"), "logwn" );
	deepEqual( Stem("lohe"), "loh" );
	deepEqual( Stem("lohender"), "lohend" );
	deepEqual( Stem("lohengrin"), "lohengrin" );
	deepEqual( Stem("lohete"), "lohet" );
	deepEqual( Stem("lohn"), "lohn" );
	deepEqual( Stem("lohne"), "lohn" );
	deepEqual( Stem("lohnes"), "lohn" );
	deepEqual( Stem("lohnkutscher"), "lohnkutsch" );
	deepEqual( Stem("lohnt"), "lohnt" );
	deepEqual( Stem("lohnte"), "lohnt" );
	deepEqual( Stem("lohnverhältnis"), "lohnverhaltnis" );
	deepEqual( Stem("lokal"), "lokal" );
	deepEqual( Stem("lokale"), "lokal" );
	deepEqual( Stem("lokalen"), "lokal" );
	deepEqual( Stem("lokomotive"), "lokomotiv" );
	deepEqual( Stem("london"), "london" );
	deepEqual( Stem("londoner"), "london" );
	deepEqual( Stem("lorbeeren"), "lorbe" );
	deepEqual( Stem("lorbeerkränze"), "lorbeerkranz" );
	deepEqual( Stem("los"), "los" );
	deepEqual( Stem("lösche"), "losch" );
	deepEqual( Stem("löschen"), "losch" );
	deepEqual( Stem("löschpapierne"), "loschpapiern" );
	deepEqual( Stem("löscht"), "loscht" );
	deepEqual( Stem("lose"), "los" );
	deepEqual( Stem("lösegeld"), "losegeld" );
	deepEqual( Stem("lösen"), "los" );
	deepEqual( Stem("lösenden"), "losend" );
	deepEqual( Stem("losfahren"), "losfahr" );
	deepEqual( Stem("losgebrochen"), "losgebroch" );
	deepEqual( Stem("losgebrochener"), "losgebroch" );
	deepEqual( Stem("losgehen"), "losgeh" );
	deepEqual( Stem("losgerissen"), "losgeriss" );
	deepEqual( Stem("losgeschlagen"), "losgeschlag" );
	deepEqual( Stem("losgetrennt"), "losgetrennt" );
	deepEqual( Stem("loskaufen"), "loskauf" );
	deepEqual( Stem("loskettete"), "loskettet" );
	deepEqual( Stem("loskommen"), "loskomm" );
	deepEqual( Stem("loslassen"), "loslass" );
	deepEqual( Stem("losmachen"), "losmach" );
	deepEqual( Stem("losreissen"), "losreiss" );
	deepEqual( Stem("losrennen"), "losrenn" );
	deepEqual( Stem("lossagung"), "lossag" );
	deepEqual( Stem("losschlug"), "losschlug" );
	deepEqual( Stem("löst"), "lost" );
	deepEqual( Stem("löste"), "lost" );
	deepEqual( Stem("lösten"), "lost" );
	deepEqual( Stem("losung"), "losung" );
	deepEqual( Stem("lösung"), "losung" );
	deepEqual( Stem("loswinden"), "loswind" );
	deepEqual( Stem("loszubinden"), "loszubind" );
	deepEqual( Stem("loszubrennen"), "loszubrenn" );
	deepEqual( Stem("loszubringen"), "loszubring" );
	deepEqual( Stem("loszukaufen"), "loszukauf" );
	deepEqual( Stem("loszukommen"), "loszukomm" );
	deepEqual( Stem("loszulassen"), "loszulass" );
	deepEqual( Stem("loszumachen"), "loszumach" );
	deepEqual( Stem("loszureissen"), "loszureiss" );
	deepEqual( Stem("loszuschlagen"), "loszuschlag" );
	deepEqual( Stem("loszuschreien"), "loszuschrei" );
	deepEqual( Stem("loszuspringen"), "loszuspring" );
	deepEqual( Stem("lot"), "lot" );
	deepEqual( Stem("lotterie"), "lotteri" );
	deepEqual( Stem("lotteriemann"), "lotteriemann" );
	deepEqual( Stem("lotterien"), "lotteri" );
	deepEqual( Stem("lotteriespiel"), "lotteriespiel" );
	deepEqual( Stem("lotterieverkehr"), "lotterieverkehr" );
	deepEqual( Stem("lotterige"), "lotter" );
	deepEqual( Stem("lotterleben"), "lotterleb" );
	deepEqual( Stem("lotterneste"), "lottern" );
	deepEqual( Stem("louisdors"), "louisdor" );
	deepEqual( Stem("louison"), "louison" );
	deepEqual( Stem("louisons"), "louison" );
	deepEqual( Stem("love"), "lov" );
	deepEqual( Stem("low"), "low" );
	deepEqual( Stem("löwe"), "low" );
	deepEqual( Stem("löwen"), "low" );
	deepEqual( Stem("löwenhaut"), "lowenhaut" );
	deepEqual( Stem("löwenjagd"), "lowenjagd" );
	deepEqual( Stem("löwin"), "lowin" );
	deepEqual( Stem("lucelle"), "lucell" );
	deepEqual( Stem("lucinde"), "lucind" );
	deepEqual( Stem("lücke"), "luck" );
	deepEqual( Stem("lücken"), "luck" );
	deepEqual( Stem("lückenbüsser"), "luckenbuss" );
	deepEqual( Stem("lückenhaft"), "luckenhaft" );
	deepEqual( Stem("lud"), "lud" );
	deepEqual( Stem("luden"), "lud" );
	deepEqual( Stem("luder"), "lud" );
	deepEqual( Stem("ludwig"), "ludwig" );
	deepEqual( Stem("luft"), "luft" );
	deepEqual( Stem("luftballon"), "luftballon" );
	deepEqual( Stem("luftballons"), "luftballon" );
	deepEqual( Stem("luftblasen"), "luftblas" );
	deepEqual( Stem("lüftchen"), "luftch" );
	deepEqual( Stem("luftdrucks"), "luftdruck" );
	deepEqual( Stem("lüfte"), "luft" );
	deepEqual( Stem("lüften"), "luft" );
	deepEqual( Stem("lufterscheinung"), "lufterschein" );
	deepEqual( Stem("lüftete"), "luftet" );
	deepEqual( Stem("luftgebilde"), "luftgebild" );
	deepEqual( Stem("lufthauch"), "lufthauch" );
	deepEqual( Stem("luftig"), "luftig" );
	deepEqual( Stem("luftige"), "luftig" );
	deepEqual( Stem("luftigen"), "luftig" );
	deepEqual( Stem("luftjagd"), "luftjagd" );
	deepEqual( Stem("luftlosen"), "luftlos" );
	deepEqual( Stem("luftraum"), "luftraum" );
	deepEqual( Stem("luftsänger"), "luftsang" );
	deepEqual( Stem("luftschloss"), "luftschloss" );
	deepEqual( Stem("luftschlösser"), "luftschloss" );
	deepEqual( Stem("luga"), "luga" );
	deepEqual( Stem("lüge"), "lug" );
	deepEqual( Stem("lügen"), "lug" );
	deepEqual( Stem("lügenberichten"), "lugenbericht" );
	deepEqual( Stem("lügenhaft"), "lugenhaft" );
	deepEqual( Stem("lügenhafte"), "lugenhaft" );
	deepEqual( Stem("lügner"), "lugn" );
	deepEqual( Stem("lügnerin"), "lugnerin" );
	deepEqual( Stem("lügners"), "lugn" );
	deepEqual( Stem("lugst"), "lugst" );
	deepEqual( Stem("lügst"), "lugst" );
	deepEqual( Stem("lügt"), "lugt" );
	deepEqual( Stem("luitpold"), "luitpold" );
	deepEqual( Stem("luk"), "luk" );
	deepEqual( Stem("lukas"), "lukas" );
	deepEqual( Stem("lukasevangelium"), "lukasevangelium" );
	deepEqual( Stem("luke"), "luk" );
	deepEqual( Stem("lümmel"), "lummel" );
	deepEqual( Stem("lümmelte"), "lummelt" );
	deepEqual( Stem("lumpen"), "lump" );
	deepEqual( Stem("lumpenhund"), "lumpenhund" );
	deepEqual( Stem("lumpenhunde"), "lumpenhund" );
	deepEqual( Stem("lumpenkleider"), "lumpenkleid" );
	deepEqual( Stem("lumpenkleidung"), "lumpenkleid" );
	deepEqual( Stem("lunch"), "lunch" );
	deepEqual( Stem("lunge"), "lung" );
	deepEqual( Stem("lungen"), "lung" );
	deepEqual( Stem("lungenflügel"), "lungenflugel" );
	deepEqual( Stem("lungenschuss"), "lungenschuss" );
	deepEqual( Stem("lust"), "lust" );
	deepEqual( Stem("lustbarkeit"), "lustbar" );
	deepEqual( Stem("lustbarkeiten"), "lustbar" );
	deepEqual( Stem("lüste"), "lust" );
	deepEqual( Stem("lüstern"), "lust" );
	deepEqual( Stem("lüsternem"), "lustern" );
	deepEqual( Stem("lüsternheit"), "lustern" );
	deepEqual( Stem("lustig"), "lustig" );
	deepEqual( Stem("lustige"), "lustig" );
	deepEqual( Stem("lustigen"), "lustig" );
	deepEqual( Stem("lustiger"), "lustig" );
	deepEqual( Stem("lustiges"), "lustig" );
	deepEqual( Stem("lustigkeit"), "lustig" );
	deepEqual( Stem("lustigsten"), "lustig" );
	deepEqual( Stem("lustreiz"), "lustreiz" );
	deepEqual( Stem("lustreize"), "lustreiz" );
	deepEqual( Stem("lustreizen"), "lustreiz" );
	deepEqual( Stem("lustspielen"), "lustspiel" );
	deepEqual( Stem("lustwald"), "lustwald" );
	deepEqual( Stem("lustwälder"), "lustwald" );
	deepEqual( Stem("lustwandelnden"), "lustwandelnd" );
	deepEqual( Stem("lustwandelte"), "lustwandelt" );
	deepEqual( Stem("lutherisch"), "luther" );
	deepEqual( Stem("lutherische"), "luther" );
	deepEqual( Stem("lutherischem"), "luther" );
	deepEqual( Stem("lutherischen"), "luther" );
	deepEqual( Stem("lutherischer"), "luther" );
	deepEqual( Stem("lutherland"), "lutherland" );
	deepEqual( Stem("lutherstädte"), "lutherstadt" );
	deepEqual( Stem("lutum"), "lutum" );
	deepEqual( Stem("lütütü"), "lututu" );
	deepEqual( Stem("lux"), "lux" );
	deepEqual( Stem("luxerl"), "luxerl" );
	deepEqual( Stem("luxerls"), "luxerl" );
	deepEqual( Stem("luxuriösen"), "luxurios" );
	deepEqual( Stem("luzifer"), "luzif" );
	deepEqual( Stem("lwb"), "lwb" );
	deepEqual( Stem("lydia"), "lydia" );
	deepEqual( Stem("lydias"), "lydias" );
	deepEqual( Stem("lydier"), "lydi" );
	deepEqual( Stem("lyon"), "lyon" );
	deepEqual( Stem("lyra"), "lyra" );
	deepEqual( Stem("lyrik"), "lyrik" );
	deepEqual( Stem("m"), "m" );
	deepEqual( Stem("ma"), "ma" );
	deepEqual( Stem("maastricht"), "maastricht" );
	deepEqual( Stem("maastrichter"), "maastricht" );
	deepEqual( Stem("macbeth"), "macbeth" );
	deepEqual( Stem("macbeths"), "macbeth" );
	deepEqual( Stem("mach"), "mach" );
	deepEqual( Stem("mache"), "mach" );
	deepEqual( Stem("machen"), "mach" );
	deepEqual( Stem("machend"), "machend" );
	deepEqual( Stem("machenden"), "machend" );
	deepEqual( Stem("macher"), "mach" );
	deepEqual( Stem("machers"), "mach" );
	deepEqual( Stem("machet"), "machet" );
	deepEqual( Stem("macheten"), "machet" );
	deepEqual( Stem("machiavelli"), "machiavelli" );
	deepEqual( Stem("machli"), "machli" );
	deepEqual( Stem("machst"), "mach" );
	deepEqual( Stem("macht"), "macht" );
	deepEqual( Stem("machte"), "macht" );
	deepEqual( Stem("mächte"), "macht" );
	deepEqual( Stem("machten"), "macht" );
	deepEqual( Stem("mächten"), "macht" );
	deepEqual( Stem("machtest"), "macht" );
	deepEqual( Stem("machthabenden"), "machthab" );
	deepEqual( Stem("machthaber"), "machthab" );
	deepEqual( Stem("mächtig"), "machtig" );
	deepEqual( Stem("mächtige"), "machtig" );
	deepEqual( Stem("mächtigen"), "machtig" );
	deepEqual( Stem("mächtiger"), "machtig" );
	deepEqual( Stem("mächtiges"), "machtig" );
	deepEqual( Stem("mächtigste"), "machtig" );
	deepEqual( Stem("machtlos"), "machtlos" );
	deepEqual( Stem("machtmittel"), "machtmittel" );
	deepEqual( Stem("machtvoll"), "machtvoll" );
	deepEqual( Stem("mad"), "mad" );
	deepEqual( Stem("mädchen"), "madch" );
	deepEqual( Stem("mädchenhaft"), "madchenhaft" );
	deepEqual( Stem("mädchenhaften"), "madchenhaft" );
	deepEqual( Stem("mädchens"), "madch" );
	deepEqual( Stem("madehen"), "madeh" );
	deepEqual( Stem("mädel"), "madel" );
	deepEqual( Stem("madeleine"), "madelein" );
	deepEqual( Stem("mädels"), "madel" );
	deepEqual( Stem("madl"), "madl" );
	deepEqual( Stem("madln"), "madln" );
	deepEqual( Stem("mag"), "mag" );
	deepEqual( Stem("magazin"), "magazin" );
	deepEqual( Stem("magd"), "magd" );
	deepEqual( Stem("mägde"), "magd" );
	deepEqual( Stem("mägden"), "magd" );
	deepEqual( Stem("magen"), "mag" );
	deepEqual( Stem("mager"), "mag" );
	deepEqual( Stem("magere"), "mag" );
	deepEqual( Stem("mageren"), "mag" );
	deepEqual( Stem("magerer"), "mag" );
	deepEqual( Stem("magerkeit"), "mager" );
	deepEqual( Stem("magerten"), "magert" );
	deepEqual( Stem("magi"), "magi" );
	deepEqual( Stem("magica"), "magica" );
	deepEqual( Stem("magie"), "magi" );
	deepEqual( Stem("magier"), "magi" );
	deepEqual( Stem("magiern"), "magi" );
	deepEqual( Stem("magisch"), "magisch" );
	deepEqual( Stem("magische"), "magisch" );
	deepEqual( Stem("magischen"), "magisch" );
	deepEqual( Stem("mäglein"), "maglein" );
	deepEqual( Stem("magnaten"), "magnat" );
	deepEqual( Stem("magnet"), "magnet" );
	deepEqual( Stem("magnetgebirge"), "magnetgebirg" );
	deepEqual( Stem("magst"), "magst" );
	deepEqual( Stem("mahal"), "mahal" );
	deepEqual( Stem("mahalalel"), "mahalalel" );
	deepEqual( Stem("mahalalels"), "mahalalel" );
	deepEqual( Stem("mahl"), "mahl" );
	deepEqual( Stem("mahle"), "mahl" );
	deepEqual( Stem("mahlen"), "mahl" );
	deepEqual( Stem("mahles"), "mahl" );
	deepEqual( Stem("mählich"), "mahlich" );
	deepEqual( Stem("mahlzeit"), "mahlzeit" );
	deepEqual( Stem("mahlzeiten"), "mahlzeit" );
	deepEqual( Stem("mahm"), "mahm" );
	deepEqual( Stem("mähne"), "mahn" );
	deepEqual( Stem("mahnte"), "mahnt" );
	deepEqual( Stem("mahnung"), "mahnung" );
	deepEqual( Stem("mahomets"), "mahomet" );
	deepEqual( Stem("mai"), "mai" );
	deepEqual( Stem("maigesang"), "maigesang" );
	deepEqual( Stem("maiglöckchenblatt"), "maiglockchenblatt" );
	deepEqual( Stem("maikäfer"), "maikaf" );
	deepEqual( Stem("maikäferballade"), "maikaferballad" );
	deepEqual( Stem("maikäferbein"), "maikaferbein" );
	deepEqual( Stem("maikäferbeinchen"), "maikaferbeinch" );
	deepEqual( Stem("maikäferhafte"), "maikaferhaft" );
	deepEqual( Stem("maikäferherz"), "maikaferherz" );
	deepEqual( Stem("maikäferlein"), "maikaferlein" );
	deepEqual( Stem("maikäfermann"), "maikafermann" );
	deepEqual( Stem("maikäfern"), "maikaf" );
	deepEqual( Stem("maikäfertänzchen"), "maikafertanzch" );
	deepEqual( Stem("maikäfertänze"), "maikafertanz" );
	deepEqual( Stem("mail"), "mail" );
	deepEqual( Stem("mailand"), "mailand" );
	deepEqual( Stem("mailänder"), "mailand" );
	deepEqual( Stem("mailändischen"), "mailand" );
	deepEqual( Stem("main"), "main" );
	deepEqual( Stem("maison"), "maison" );
	deepEqual( Stem("maisonne"), "maisonn" );
	deepEqual( Stem("majestät"), "majestat" );
	deepEqual( Stem("majestätisch"), "majestat" );
	deepEqual( Stem("majorität"), "majoritat" );
	deepEqual( Stem("makaber"), "makab" );
	deepEqual( Stem("makarius"), "makarius" );
	deepEqual( Stem("mal"), "mal" );
	deepEqual( Stem("male"), "mal" );
	deepEqual( Stem("malen"), "mal" );
	deepEqual( Stem("maler"), "mal" );
	deepEqual( Stem("malerei"), "malerei" );
	deepEqual( Stem("malerisch"), "maler" );
	deepEqual( Stem("malerische"), "maler" );
	deepEqual( Stem("mali"), "mali" );
	deepEqual( Stem("malis"), "malis" );
	deepEqual( Stem("malottke"), "malottk" );
	deepEqual( Stem("malottkes"), "malottk" );
	deepEqual( Stem("malte"), "malt" );
	deepEqual( Stem("malum"), "malum" );
	deepEqual( Stem("malzeichen"), "malzeich" );
	deepEqual( Stem("man"), "man" );
	deepEqual( Stem("manch"), "manch" );
	deepEqual( Stem("manche"), "manch" );
	deepEqual( Stem("manchem"), "manch" );
	deepEqual( Stem("manchen"), "manch" );
	deepEqual( Stem("mancher"), "manch" );
	deepEqual( Stem("mancherlei"), "mancherlei" );
	deepEqual( Stem("manches"), "manch" );
	deepEqual( Stem("manchesterjacke"), "manchesterjack" );
	deepEqual( Stem("manchmal"), "manchmal" );
	deepEqual( Stem("mandat"), "mandat" );
	deepEqual( Stem("mandelkern"), "mandelk" );
	deepEqual( Stem("mandeln"), "mandeln" );
	deepEqual( Stem("mandeltorte"), "mandeltort" );
	deepEqual( Stem("mandieren"), "mandi" );
	deepEqual( Stem("manfred"), "manfred" );
	deepEqual( Stem("mangel"), "mangel" );
	deepEqual( Stem("mängel"), "mangel" );
	deepEqual( Stem("mangelhaft"), "mangelhaft" );
	deepEqual( Stem("mangelhafte"), "mangelhaft" );
	deepEqual( Stem("mangelhaftem"), "mangelhaft" );
	deepEqual( Stem("mangelndes"), "mangelnd" );
	deepEqual( Stem("mangelt"), "mangelt" );
	deepEqual( Stem("mangelte"), "mangelt" );
	deepEqual( Stem("manier"), "mani" );
	deepEqual( Stem("manieren"), "mani" );
	deepEqual( Stem("manierlich"), "mani" );
	deepEqual( Stem("mann"), "mann" );
	deepEqual( Stem("manna"), "manna" );
	deepEqual( Stem("mannbares"), "mannbar" );
	deepEqual( Stem("männchen"), "mannch" );
	deepEqual( Stem("männchens"), "mannch" );
	deepEqual( Stem("manndi"), "manndi" );
	deepEqual( Stem("manne"), "mann" );
	deepEqual( Stem("männer"), "mann" );
	deepEqual( Stem("männern"), "mann" );
	deepEqual( Stem("männerstimme"), "mannerstimm" );
	deepEqual( Stem("mannes"), "mann" );
	deepEqual( Stem("mannesalter"), "mannesalt" );
	deepEqual( Stem("mannesbilde"), "mannesbild" );
	deepEqual( Stem("mannestränen"), "mannestran" );
	deepEqual( Stem("mannestugend"), "mannestug" );
	deepEqual( Stem("mannhaft"), "mannhaft" );
	deepEqual( Stem("mannhaftigkeit"), "mannhaft" );
	deepEqual( Stem("mannichfachen"), "mannichfach" );
	deepEqual( Stem("mannichfaltigkeit"), "mannichfalt" );
	deepEqual( Stem("mannigfach"), "mannigfach" );
	deepEqual( Stem("mannigfachem"), "mannigfach" );
	deepEqual( Stem("mannigfacher"), "mannigfach" );
	deepEqual( Stem("mannigfaltige"), "mannigfalt" );
	deepEqual( Stem("mannigfaltigen"), "mannigfalt" );
	deepEqual( Stem("mannigfaltigkeit"), "mannigfalt" );
	deepEqual( Stem("mannigfaltigkeiten"), "mannigfalt" );
	deepEqual( Stem("mannigfaltigsten"), "mannigfalt" );
	deepEqual( Stem("männin"), "mannin" );
	deepEqual( Stem("männlein"), "mannlein" );
	deepEqual( Stem("mannlich"), "mannlich" );
	deepEqual( Stem("männlich"), "mannlich" );
	deepEqual( Stem("männliche"), "mannlich" );
	deepEqual( Stem("männlichen"), "mannlich" );
	deepEqual( Stem("männlichkeit"), "mannlich" );
	deepEqual( Stem("mannschaft"), "mannschaft" );
	deepEqual( Stem("mannshohen"), "mannshoh" );
	deepEqual( Stem("mannsleute"), "mannsleut" );
	deepEqual( Stem("mannstiefen"), "mannstief" );
	deepEqual( Stem("manoah"), "manoah" );
	deepEqual( Stem("manövriert"), "manovriert" );
	deepEqual( Stem("manschetten"), "manschett" );
	deepEqual( Stem("mantel"), "mantel" );
	deepEqual( Stem("mantels"), "mantel" );
	deepEqual( Stem("mantelsack"), "mantelsack" );
	deepEqual( Stem("mantelträger"), "manteltrag" );
	deepEqual( Stem("manuskript"), "manuskript" );
	deepEqual( Stem("manuskripte"), "manuskript" );
	deepEqual( Stem("manuskripten"), "manuskript" );
	deepEqual( Stem("manz"), "manz" );
	deepEqual( Stem("manzen"), "manz" );
	deepEqual( Stem("manzens"), "manz" );
	deepEqual( Stem("manzin"), "manzin" );
	deepEqual( Stem("mar"), "mar" );
	deepEqual( Stem("marah"), "marah" );
	deepEqual( Stem("march"), "march" );
	deepEqual( Stem("märchen"), "march" );
	deepEqual( Stem("marcs"), "marcs" );
	deepEqual( Stem("mard"), "mard" );
	deepEqual( Stem("marderdreck"), "marderdreck" );
	deepEqual( Stem("mardin"), "mardin" );
	deepEqual( Stem("maria"), "maria" );
	deepEqual( Stem("mariand"), "mariand" );
	deepEqual( Stem("marienbild"), "marienbild" );
	deepEqual( Stem("marienkäferkinderchen"), "marienkaferkinderch" );
	deepEqual( Stem("marinelli"), "marinelli" );
	deepEqual( Stem("mario"), "mario" );
	deepEqual( Stem("marionettenspiel"), "marionettenspiel" );
	deepEqual( Stem("maritata"), "maritata" );
	deepEqual( Stem("mark"), "mark" );
	deepEqual( Stem("markierte"), "markiert" );
	deepEqual( Stem("markln"), "markln" );
	deepEqual( Stem("marks"), "mark" );
	deepEqual( Stem("markstückl"), "markstuckl" );
	deepEqual( Stem("marksubstanz"), "marksubstanz" );
	deepEqual( Stem("markt"), "markt" );
	deepEqual( Stem("marktplatz"), "marktplatz" );
	deepEqual( Stem("marktsegment"), "marktsegment" );
	deepEqual( Stem("marktwirtschaft"), "marktwirtschaft" );
	deepEqual( Stem("marmor"), "marmor" );
	deepEqual( Stem("marotte"), "marott" );
	deepEqual( Stem("marquis"), "marquis" );
	deepEqual( Stem("marsala"), "marsala" );
	deepEqual( Stem("marsch"), "marsch" );
	deepEqual( Stem("märsche"), "marsch" );
	deepEqual( Stem("marschiert"), "marschiert" );
	deepEqual( Stem("marschierte"), "marschiert" );
	deepEqual( Stem("marschierten"), "marschiert" );
	deepEqual( Stem("marschrichtung"), "marschricht" );
	deepEqual( Stem("marseilingen"), "marseiling" );
	deepEqual( Stem("marseille"), "marseill" );
	deepEqual( Stem("marterl"), "marterl" );
	deepEqual( Stem("marterleib"), "marterleib" );
	deepEqual( Stem("marterls"), "marterl" );
	deepEqual( Stem("marti"), "marti" );
	deepEqual( Stem("martialischen"), "martial" );
	deepEqual( Stem("martin"), "martin" );
	deepEqual( Stem("martis"), "martis" );
	deepEqual( Stem("märtyrer"), "martyr" );
	deepEqual( Stem("marx"), "marx" );
	deepEqual( Stem("märz"), "marz" );
	deepEqual( Stem("marzipan"), "marzipan" );
	deepEqual( Stem("marzipanschweinezüchterei"), "marzipanschweinezuchterei" );
	deepEqual( Stem("marzipanstrassen"), "marzipanstrass" );
	deepEqual( Stem("märzwoche"), "marzwoch" );
	deepEqual( Stem("maschen"), "masch" );
	deepEqual( Stem("maschine"), "maschin" );
	deepEqual( Stem("maschinengewehren"), "maschinengewehr" );
	deepEqual( Stem("maschinenwerk"), "maschinenwerk" );
	deepEqual( Stem("maschinenwesen"), "maschinenwes" );
	deepEqual( Stem("masculus"), "masculus" );
	deepEqual( Stem("maske"), "mask" );
	deepEqual( Stem("masken"), "mask" );
	deepEqual( Stem("maskenfahrt"), "maskenfahrt" );
	deepEqual( Stem("maskenzuges"), "maskenzug" );
	deepEqual( Stem("maskerade"), "maskerad" );
	deepEqual( Stem("maskiert"), "maskiert" );
	deepEqual( Stem("mass"), "mass" );
	deepEqual( Stem("maß"), "mass" );
	deepEqual( Stem("masse"), "mass" );
	deepEqual( Stem("maße"), "mass" );
	deepEqual( Stem("massen"), "mass" );
	deepEqual( Stem("maßen"), "mass" );
	deepEqual( Stem("massenhaft"), "massenhaft" );
	deepEqual( Stem("masses"), "mass" );
	deepEqual( Stem("maßes"), "mass" );
	deepEqual( Stem("massgabe"), "massgab" );
	deepEqual( Stem("maßgabe"), "massgab" );
	deepEqual( Stem("massgebenden"), "massgeb" );
	deepEqual( Stem("maßgebenden"), "massgeb" );
	deepEqual( Stem("mässig"), "massig" );
	deepEqual( Stem("mässige"), "massig" );
	deepEqual( Stem("mässigen"), "massig" );
	deepEqual( Stem("mässiger"), "massig" );
	deepEqual( Stem("mäßiger"), "massig" );
	deepEqual( Stem("mässigkeit"), "massig" );
	deepEqual( Stem("mässigt"), "massigt" );
	deepEqual( Stem("mäßigt"), "massigt" );
	deepEqual( Stem("mässigte"), "massigt" );
	deepEqual( Stem("mässigung"), "massig" );
	deepEqual( Stem("mäßigung"), "massig" );
	deepEqual( Stem("massiv"), "massiv" );
	deepEqual( Stem("massive"), "massiv" );
	deepEqual( Stem("massiven"), "massiv" );
	deepEqual( Stem("massiver"), "massiv" );
	deepEqual( Stem("maßlos"), "masslos" );
	deepEqual( Stem("massnahmen"), "massnahm" );
	deepEqual( Stem("massnehmen"), "massnehm" );
	deepEqual( Stem("massregeln"), "massregeln" );
	deepEqual( Stem("massstab"), "massstab" );
	deepEqual( Stem("maßstab"), "massstab" );
	deepEqual( Stem("massstabe"), "massstab" );
	deepEqual( Stem("maßstabe"), "massstab" );
	deepEqual( Stem("maßstäbe"), "massstab" );
	deepEqual( Stem("masste"), "masst" );
	deepEqual( Stem("maßte"), "masst" );
	deepEqual( Stem("mastbaum"), "mastbaum" );
	deepEqual( Stem("masterminded"), "masterminded" );
	deepEqual( Stem("mästung"), "mastung" );
	deepEqual( Stem("mastvieh"), "mastvieh" );
	deepEqual( Stem("material"), "material" );
	deepEqual( Stem("materiale"), "material" );
	deepEqual( Stem("materialen"), "material" );
	deepEqual( Stem("materialer"), "material" );
	deepEqual( Stem("materie"), "materi" );
	deepEqual( Stem("materiell"), "materiell" );
	deepEqual( Stem("materielle"), "materiell" );
	deepEqual( Stem("materiellen"), "materiell" );
	deepEqual( Stem("materieller"), "materiell" );
	deepEqual( Stem("materielles"), "materiell" );
	deepEqual( Stem("mathäus"), "mathaus" );
	deepEqual( Stem("mathematik"), "mathemat" );
	deepEqual( Stem("mathematisch"), "mathemat" );
	deepEqual( Stem("mathematische"), "mathemat" );
	deepEqual( Stem("mathematischen"), "mathemat" );
	deepEqual( Stem("matrose"), "matros" );
	deepEqual( Stem("matt"), "matt" );
	deepEqual( Stem("matten"), "matt" );
	deepEqual( Stem("matth"), "matth" );
	deepEqual( Stem("matthias"), "matthias" );
	deepEqual( Stem("mattigkeit"), "mattig" );
	deepEqual( Stem("mauer"), "mau" );
	deepEqual( Stem("mauern"), "mau" );
	deepEqual( Stem("mauertür"), "mauertur" );
	deepEqual( Stem("mauerwerk"), "mauerwerk" );
	deepEqual( Stem("mauerwinkel"), "mauerwinkel" );
	deepEqual( Stem("maul"), "maul" );
	deepEqual( Stem("maulaffen"), "maulaff" );
	deepEqual( Stem("maulbeerbäume"), "maulbeerbaum" );
	deepEqual( Stem("mäulchen"), "maulch" );
	deepEqual( Stem("maule"), "maul" );
	deepEqual( Stem("mäuler"), "maul" );
	deepEqual( Stem("mäulern"), "maul" );
	deepEqual( Stem("maulkorb"), "maulkorb" );
	deepEqual( Stem("maultasche"), "maultasch" );
	deepEqual( Stem("maulvoll"), "maulvoll" );
	deepEqual( Stem("maulwurf"), "maulwurf" );
	deepEqual( Stem("maurienne"), "maurienn" );
	deepEqual( Stem("maus"), "maus" );
	deepEqual( Stem("mäuschen"), "mausch" );
	deepEqual( Stem("mäuschenstill"), "mauschenstill" );
	deepEqual( Stem("mäuse"), "maus" );
	deepEqual( Stem("mäusefallen"), "mausefall" );
	deepEqual( Stem("mausen"), "maus" );
	deepEqual( Stem("mäuslein"), "mauslein" );
	deepEqual( Stem("mauslöchern"), "mausloch" );
	deepEqual( Stem("maxime"), "maxim" );
	deepEqual( Stem("maximen"), "maxim" );
	deepEqual( Stem("mechanisch"), "mechan" );
	deepEqual( Stem("mechanismus"), "mechanismus" );
	deepEqual( Stem("mechujael"), "mechujael" );
	deepEqual( Stem("meckern"), "meck" );
	deepEqual( Stem("meckerndes"), "meckernd" );
	deepEqual( Stem("meckerte"), "meckert" );
	deepEqual( Stem("meckerten"), "meckert" );
	deepEqual( Stem("mecklenburg"), "mecklenburg" );
	deepEqual( Stem("medaille"), "medaill" );
	deepEqual( Stem("medaillon"), "medaillon" );
	deepEqual( Stem("medien"), "medi" );
	deepEqual( Stem("medikament"), "medikament" );
	deepEqual( Stem("meditativen"), "meditativ" );
	deepEqual( Stem("medizin"), "medizin" );
	deepEqual( Stem("medizinisch"), "medizin" );
	deepEqual( Stem("meer"), "meer" );
	deepEqual( Stem("meerblauen"), "meerblau" );
	deepEqual( Stem("meere"), "meer" );
	deepEqual( Stem("meeren"), "meer" );
	deepEqual( Stem("meeres"), "meer" );
	deepEqual( Stem("meeresgewächs"), "meeresgewach" );
	deepEqual( Stem("meerestiefen"), "meerestief" );
	deepEqual( Stem("meergrünen"), "meergrun" );
	deepEqual( Stem("meerschiffe"), "meerschiff" );
	deepEqual( Stem("meerwasser"), "meerwass" );
	deepEqual( Stem("meerwunder"), "meerwund" );
	deepEqual( Stem("mehr"), "mehr" );
	deepEqual( Stem("mehre"), "mehr" );
	deepEqual( Stem("mehren"), "mehr" );
	deepEqual( Stem("mehrenteils"), "mehrenteil" );
	deepEqual( Stem("mehrer"), "mehr" );
	deepEqual( Stem("mehrere"), "mehr" );
	deepEqual( Stem("mehrerem"), "mehr" );
	deepEqual( Stem("mehreren"), "mehr" );
	deepEqual( Stem("mehrerer"), "mehr" );
	deepEqual( Stem("mehreres"), "mehr" );
	deepEqual( Stem("mehrertrag"), "mehrertrag" );
	deepEqual( Stem("mehresten"), "mehr" );
	deepEqual( Stem("mehret"), "mehret" );
	deepEqual( Stem("mehrfach"), "mehrfach" );
	deepEqual( Stem("mehrfache"), "mehrfach" );
	deepEqual( Stem("mehrfachen"), "mehrfach" );
	deepEqual( Stem("mehrheit"), "mehrheit" );
	deepEqual( Stem("mehrheitsfähig"), "mehrheitsfah" );
	deepEqual( Stem("mehrjährige"), "mehrjahr" );
	deepEqual( Stem("mehrmals"), "mehrmal" );
	deepEqual( Stem("mehrstimmiges"), "mehrstimm" );
	deepEqual( Stem("mehrte"), "mehrt" );
	deepEqual( Stem("mehrten"), "mehrt" );
	deepEqual( Stem("mehrzahl"), "mehrzahl" );
	deepEqual( Stem("mei"), "mei" );
	deepEqual( Stem("meiden"), "meid" );
	deepEqual( Stem("meilen"), "meil" );
	deepEqual( Stem("meilenstein"), "meilenstein" );
	deepEqual( Stem("meilensteine"), "meilenstein" );
	deepEqual( Stem("mein"), "mein" );
	deepEqual( Stem("meine"), "mein" );
	deepEqual( Stem("meineidbauer"), "meineidbau" );
	deepEqual( Stem("meineidiger"), "meineid" );
	deepEqual( Stem("meinem"), "mein" );
	deepEqual( Stem("meinen"), "mein" );
	deepEqual( Stem("meiner"), "mein" );
	deepEqual( Stem("meines"), "mein" );
	deepEqual( Stem("meinetwegen"), "meinetweg" );
	deepEqual( Stem("meinetwillen"), "meinetwill" );
	deepEqual( Stem("meinige"), "meinig" );
	deepEqual( Stem("meinigen"), "meinig" );
	deepEqual( Stem("meins"), "mein" );
	deepEqual( Stem("meinst"), "mein" );
	deepEqual( Stem("meint"), "meint" );
	deepEqual( Stem("meinte"), "meint" );
	deepEqual( Stem("meinten"), "meint" );
	deepEqual( Stem("meinung"), "meinung" );
	deepEqual( Stem("meinungen"), "meinung" );
	deepEqual( Stem("meisen"), "meis" );
	deepEqual( Stem("meisseln"), "meisseln" );
	deepEqual( Stem("meist"), "meist" );
	deepEqual( Stem("meistbietenden"), "meistbiet" );
	deepEqual( Stem("meiste"), "meist" );
	deepEqual( Stem("meisten"), "meist" );
	deepEqual( Stem("meistens"), "meist" );
	deepEqual( Stem("meistenteils"), "meistenteil" );
	deepEqual( Stem("meister"), "meist" );
	deepEqual( Stem("meisterhaft"), "meisterhaft" );
	deepEqual( Stem("meisterhand"), "meisterhand" );
	deepEqual( Stem("meisterin"), "meisterin" );
	deepEqual( Stem("meisterinnen"), "meisterinn" );
	deepEqual( Stem("meisterlich"), "meist" );
	deepEqual( Stem("meistern"), "meist" );
	deepEqual( Stem("meisters"), "meist" );
	deepEqual( Stem("meisterschaft"), "meisterschaft" );
	deepEqual( Stem("meitli"), "meitli" );
	deepEqual( Stem("melancholisch"), "melanchol" );
	deepEqual( Stem("melancholische"), "melanchol" );
	deepEqual( Stem("melancholischen"), "melanchol" );
	deepEqual( Stem("melcher"), "melch" );
	deepEqual( Stem("melchior"), "melchior" );
	deepEqual( Stem("melde"), "meld" );
	deepEqual( Stem("melden"), "meld" );
	deepEqual( Stem("meldet"), "meldet" );
	deepEqual( Stem("meldete"), "meldet" );
	deepEqual( Stem("meldung"), "meldung" );
	deepEqual( Stem("melodie"), "melodi" );
	deepEqual( Stem("melzergrunde"), "melzergrund" );
	deepEqual( Stem("memorandum"), "memorandum" );
	deepEqual( Stem("memorierungen"), "memorier" );
	deepEqual( Stem("menasse"), "menass" );
	deepEqual( Stem("menge"), "meng" );
	deepEqual( Stem("mengen"), "meng" );
	deepEqual( Stem("meninges"), "mening" );
	deepEqual( Stem("mensch"), "mensch" );
	deepEqual( Stem("menschen"), "mensch" );
	deepEqual( Stem("menschenähnliches"), "menschenahn" );
	deepEqual( Stem("menschenähnlichkeit"), "menschenahn" );
	deepEqual( Stem("menschenalter"), "menschenalt" );
	deepEqual( Stem("menschenauge"), "menschenaug" );
	deepEqual( Stem("menschenfeindlich"), "menschenfeind" );
	deepEqual( Stem("menschenfresser"), "menschenfress" );
	deepEqual( Stem("menschenführung"), "menschenfuhr" );
	deepEqual( Stem("menschengeistes"), "menschengeist" );
	deepEqual( Stem("menschengeschlecht"), "menschengeschlecht" );
	deepEqual( Stem("menschengeschlechte"), "menschengeschlecht" );
	deepEqual( Stem("menschengeschlechts"), "menschengeschlecht" );
	deepEqual( Stem("menschengesichter"), "menschengesicht" );
	deepEqual( Stem("menschenhaut"), "menschenhaut" );
	deepEqual( Stem("menschenherde"), "menschenherd" );
	deepEqual( Stem("menschenkenntnis"), "menschenkenntnis" );
	deepEqual( Stem("menschenkind"), "menschenkind" );
	deepEqual( Stem("menschenleben"), "menschenleb" );
	deepEqual( Stem("menschenleeren"), "menschenle" );
	deepEqual( Stem("menschenliebe"), "menschenlieb" );
	deepEqual( Stem("menschenmenge"), "menschenmeng" );
	deepEqual( Stem("menschenmörder"), "menschenmord" );
	deepEqual( Stem("menschensamen"), "menschensam" );
	deepEqual( Stem("menschenseele"), "menschenseel" );
	deepEqual( Stem("menschensohn"), "menschensohn" );
	deepEqual( Stem("menschensöhne"), "menschensohn" );
	deepEqual( Stem("menschenvernunft"), "menschenvernunft" );
	deepEqual( Stem("menschenverstand"), "menschenverstand" );
	deepEqual( Stem("menschenverstande"), "menschenverstand" );
	deepEqual( Stem("menschenverstandes"), "menschenverstand" );
	deepEqual( Stem("menschenwohnungen"), "menschenwohn" );
	deepEqual( Stem("menschgeschlecht"), "menschgeschlecht" );
	deepEqual( Stem("menschheit"), "menschheit" );
	deepEqual( Stem("menschlein"), "menschlein" );
	deepEqual( Stem("menschlich"), "menschlich" );
	deepEqual( Stem("menschliche"), "menschlich" );
	deepEqual( Stem("menschlichen"), "menschlich" );
	deepEqual( Stem("menschlicher"), "menschlich" );
	deepEqual( Stem("menschliches"), "menschlich" );
	deepEqual( Stem("menschlichkeit"), "menschlich" );
	deepEqual( Stem("menschlichkeiten"), "menschlich" );
	deepEqual( Stem("menseh"), "menseh" );
	deepEqual( Stem("mentale"), "mental" );
	deepEqual( Stem("mentalitat"), "mentalitat" );
	deepEqual( Stem("menü"), "menu" );
	deepEqual( Stem("mer"), "mer" );
	deepEqual( Stem("merari"), "merari" );
	deepEqual( Stem("meraris"), "meraris" );
	deepEqual( Stem("merk"), "merk" );
	deepEqual( Stem("merke"), "merk" );
	deepEqual( Stem("merken"), "merk" );
	deepEqual( Stem("merklich"), "merklich" );
	deepEqual( Stem("merklichem"), "merklich" );
	deepEqual( Stem("merkmal"), "merkmal" );
	deepEqual( Stem("merkmale"), "merkmal" );
	deepEqual( Stem("merkt"), "merkt" );
	deepEqual( Stem("merkte"), "merkt" );
	deepEqual( Stem("merkten"), "merkt" );
	deepEqual( Stem("merkwürdig"), "merkwurd" );
	deepEqual( Stem("merkwürdige"), "merkwurd" );
	deepEqual( Stem("merkwürdigen"), "merkwurd" );
	deepEqual( Stem("merkwürdiger"), "merkwurd" );
	deepEqual( Stem("merkwürdigerweise"), "merkwurdigerweis" );
	deepEqual( Stem("merkwürdiges"), "merkwurd" );
	deepEqual( Stem("merkwürdigkeit"), "merkwurd" );
	deepEqual( Stem("merkwürdigkeiten"), "merkwurd" );
	deepEqual( Stem("merkwürdigste"), "merkwurd" );
	deepEqual( Stem("merkwürdigsten"), "merkwurd" );
	deepEqual( Stem("meschech"), "meschech" );
	deepEqual( Stem("mesmer"), "mesm" );
	deepEqual( Stem("mess"), "mess" );
	deepEqual( Stem("messe"), "mess" );
	deepEqual( Stem("messen"), "mess" );
	deepEqual( Stem("messer"), "mess" );
	deepEqual( Stem("messias"), "messias" );
	deepEqual( Stem("messiaschristlich"), "messiaschrist" );
	deepEqual( Stem("messiasfrage"), "messiasfrag" );
	deepEqual( Stem("messingdrahtes"), "messingdraht" );
	deepEqual( Stem("messmer"), "messm" );
	deepEqual( Stem("messrohr"), "messrohr" );
	deepEqual( Stem("meßrohr"), "messrohr" );
	deepEqual( Stem("messung"), "messung" );
	deepEqual( Stem("metall"), "metall" );
	deepEqual( Stem("metalle"), "metall" );
	deepEqual( Stem("metaphysik"), "metaphys" );
	deepEqual( Stem("metaphysische"), "metaphys" );
	deepEqual( Stem("metaphysischen"), "metaphys" );
	deepEqual( Stem("meter"), "met" );
	deepEqual( Stem("meterlang"), "meterlang" );
	deepEqual( Stem("meterlange"), "meterlang" );
	deepEqual( Stem("methode"), "method" );
	deepEqual( Stem("methoden"), "method" );
	deepEqual( Stem("methodenlehre"), "methodenlehr" );
	deepEqual( Stem("methodisch"), "method" );
	deepEqual( Stem("methodische"), "method" );
	deepEqual( Stem("methodischen"), "method" );
	deepEqual( Stem("methuschael"), "methuschael" );
	deepEqual( Stem("methuschelach"), "methuschelach" );
	deepEqual( Stem("methuschelachs"), "methuschelach" );
	deepEqual( Stem("metier"), "meti" );
	deepEqual( Stem("metropole"), "metropol" );
	deepEqual( Stem("metropolitane"), "metropolitan" );
	deepEqual( Stem("metzger"), "metzg" );
	deepEqual( Stem("metzgerwägelchen"), "metzgerwagelch" );
	deepEqual( Stem("meuchelmörder"), "meuchelmord" );
	deepEqual( Stem("meusal"), "meusal" );
	deepEqual( Stem("mfs"), "mfs" );
	deepEqual( Stem("mi"), "mi" );
	deepEqual( Stem("miau"), "miau" );
	deepEqual( Stem("miauend"), "miauend" );
	deepEqual( Stem("mich"), "mich" );
	deepEqual( Stem("micha"), "micha" );
	deepEqual( Stem("microsoftboss"), "microsoftboss" );
	deepEqual( Stem("midian"), "midian" );
	deepEqual( Stem("midianiter"), "midianit" );
	deepEqual( Stem("midians"), "midian" );
	deepEqual( Stem("mieder"), "mied" );
	deepEqual( Stem("mielke"), "mielk" );
	deepEqual( Stem("miene"), "mien" );
	deepEqual( Stem("mienen"), "mien" );
	deepEqual( Stem("mierte"), "miert" );
	deepEqual( Stem("miesen"), "mies" );
	deepEqual( Stem("miete"), "miet" );
	deepEqual( Stem("mieter"), "miet" );
	deepEqual( Stem("mietern"), "miet" );
	deepEqual( Stem("mietete"), "mietet" );
	deepEqual( Stem("miethäuser"), "miethaus" );
	deepEqual( Stem("mietsmann"), "mietsmann" );
	deepEqual( Stem("migros"), "migros" );
	deepEqual( Stem("mikrofon"), "mikrofon" );
	deepEqual( Stem("mikrofons"), "mikrofon" );
	deepEqual( Stem("milch"), "milch" );
	deepEqual( Stem("milchbäume"), "milchbaum" );
	deepEqual( Stem("milchgesichtern"), "milchgesicht" );
	deepEqual( Stem("milchkannen"), "milchkann" );
	deepEqual( Stem("milchmachens"), "milchmach" );
	deepEqual( Stem("milchstrasse"), "milchstrass" );
	deepEqual( Stem("milchstrassen"), "milchstrass" );
	deepEqual( Stem("milchstrassenhonig"), "milchstrassenhon" );
	deepEqual( Stem("milchstrassenmann"), "milchstrassenmann" );
	deepEqual( Stem("milchstrassenmannes"), "milchstrassenmann" );
	deepEqual( Stem("milchstrassenschlagsahne"), "milchstrassenschlagsahn" );
	deepEqual( Stem("milchtöpfe"), "milchtopf" );
	deepEqual( Stem("milde"), "mild" );
	deepEqual( Stem("mildem"), "mild" );
	deepEqual( Stem("milden"), "mild" );
	deepEqual( Stem("milder"), "mild" );
	deepEqual( Stem("milderen"), "mild" );
	deepEqual( Stem("milderes"), "mild" );
	deepEqual( Stem("mildert"), "mildert" );
	deepEqual( Stem("mildes"), "mild" );
	deepEqual( Stem("mildesten"), "mild" );
	deepEqual( Stem("militär"), "militar" );
	deepEqual( Stem("militärdienst"), "militardien" );
	deepEqual( Stem("militärgelände"), "militargeland" );
	deepEqual( Stem("militärhistoriker"), "militarhistor" );
	deepEqual( Stem("militärisch"), "militar" );
	deepEqual( Stem("militärische"), "militar" );
	deepEqual( Stem("militärischer"), "militar" );
	deepEqual( Stem("militärperson"), "militarperson" );
	deepEqual( Stem("militärs"), "militar" );
	deepEqual( Stem("militärzeit"), "militarzeit" );
	deepEqual( Stem("milliarden"), "milliard" );
	deepEqual( Stem("million"), "million" );
	deepEqual( Stem("millionär"), "millionar" );
	deepEqual( Stem("millionärin"), "millionarin" );
	deepEqual( Stem("millionen"), "million" );
	deepEqual( Stem("mimische"), "mimisch" );
	deepEqual( Stem("mincha"), "mincha" );
	deepEqual( Stem("minder"), "mind" );
	deepEqual( Stem("mindere"), "mind" );
	deepEqual( Stem("minderheit"), "mind" );
	deepEqual( Stem("minderheiten"), "mind" );
	deepEqual( Stem("minderheitensituation"), "minderheitensituation" );
	deepEqual( Stem("minderjährige"), "minderjahr" );
	deepEqual( Stem("mindern"), "mind" );
	deepEqual( Stem("minderte"), "mindert" );
	deepEqual( Stem("minderwertigkeit"), "minderwert" );
	deepEqual( Stem("mindeste"), "mind" );
	deepEqual( Stem("mindesten"), "mind" );
	deepEqual( Stem("mindestens"), "mindest" );
	deepEqual( Stem("minimum"), "minimum" );
	deepEqual( Stem("ministerpräsident"), "ministerprasident" );
	deepEqual( Stem("ministerpräsidenten"), "ministerprasident" );
	deepEqual( Stem("minna"), "minna" );
	deepEqual( Stem("minnespiel"), "minnespiel" );
	deepEqual( Stem("minnig"), "minnig" );
	deepEqual( Stem("minorität"), "minoritat" );
	deepEqual( Stem("minute"), "minut" );
	deepEqual( Stem("minuten"), "minut" );
	deepEqual( Stem("minutenlang"), "minutenlang" );
	deepEqual( Stem("minutenlangen"), "minutenlang" );
	deepEqual( Stem("minutenzeiger"), "minutenzeig" );
	deepEqual( Stem("mir"), "mir" );
	deepEqual( Stem("mirakels"), "mirakel" );
	deepEqual( Stem("mirl"), "mirl" );
	deepEqual( Stem("mischael"), "mischael" );
	deepEqual( Stem("mischen"), "misch" );
	deepEqual( Stem("mischt"), "mischt" );
	deepEqual( Stem("mischte"), "mischt" );
	deepEqual( Stem("mischten"), "mischt" );
	deepEqual( Stem("mischung"), "mischung" );
	deepEqual( Stem("miserabligs"), "miserabl" );
	deepEqual( Stem("miss"), "miss" );
	deepEqual( Stem("miß"), "miss" );
	deepEqual( Stem("missbrauch"), "missbrauch" );
	deepEqual( Stem("mißbrauch"), "missbrauch" );
	deepEqual( Stem("missbräuche"), "missbrauch" );
	deepEqual( Stem("mißbräuche"), "missbrauch" );
	deepEqual( Stem("missbrauchen"), "missbrauch" );
	deepEqual( Stem("mißbrauchen"), "missbrauch" );
	deepEqual( Stem("missbrauchsdebatte"), "missbrauchsdebatt" );
	deepEqual( Stem("missbrauchten"), "missbraucht" );
	deepEqual( Stem("mißbrauchten"), "missbraucht" );
	deepEqual( Stem("missdeutung"), "missdeut" );
	deepEqual( Stem("missdeutungen"), "missdeut" );
	deepEqual( Stem("missen"), "miss" );
	deepEqual( Stem("missetat"), "missetat" );
	deepEqual( Stem("missetaten"), "missetat" );
	deepEqual( Stem("missetäter"), "missetat" );
	deepEqual( Stem("mißfallen"), "missfall" );
	deepEqual( Stem("missfällig"), "missfall" );
	deepEqual( Stem("mißfällig"), "missfall" );
	deepEqual( Stem("missfiel"), "missfiel" );
	deepEqual( Stem("missfielen"), "missfiel" );
	deepEqual( Stem("missgeschick"), "missgeschick" );
	deepEqual( Stem("missgestaltetes"), "missgestaltet" );
	deepEqual( Stem("mißgestaltetes"), "missgestaltet" );
	deepEqual( Stem("mißglückte"), "missgluckt" );
	deepEqual( Stem("missgriff"), "missgriff" );
	deepEqual( Stem("missgunst"), "missgun" );
	deepEqual( Stem("misshandeln"), "misshandeln" );
	deepEqual( Stem("misshandelt"), "misshandelt" );
	deepEqual( Stem("mißhandelt"), "misshandelt" );
	deepEqual( Stem("misshandelte"), "misshandelt" );
	deepEqual( Stem("misshandle"), "misshandl" );
	deepEqual( Stem("misshandlung"), "misshandl" );
	deepEqual( Stem("mission"), "mission" );
	deepEqual( Stem("missionarisch"), "missionar" );
	deepEqual( Stem("missionieren"), "missioni" );
	deepEqual( Stem("missioniert"), "missioniert" );
	deepEqual( Stem("missionsfeld"), "missionsfeld" );
	deepEqual( Stem("missionsgesellschaft"), "missionsgesellschaft" );
	deepEqual( Stem("missionswille"), "missionswill" );
	deepEqual( Stem("misslang"), "misslang" );
	deepEqual( Stem("misslich"), "misslich" );
	deepEqual( Stem("missliebig"), "misslieb" );
	deepEqual( Stem("misslungenen"), "misslung" );
	deepEqual( Stem("missmanagement"), "missmanagement" );
	deepEqual( Stem("missmutig"), "missmut" );
	deepEqual( Stem("misst"), "misst" );
	deepEqual( Stem("mißt"), "misst" );
	deepEqual( Stem("misste"), "misst" );
	deepEqual( Stem("misstrauen"), "misstrau" );
	deepEqual( Stem("misstrauisch"), "misstrau" );
	deepEqual( Stem("mißtrauisch"), "misstrau" );
	deepEqual( Stem("misstrauischem"), "misstrau" );
	deepEqual( Stem("misstrauischen"), "misstrau" );
	deepEqual( Stem("mißtrauischer"), "misstrau" );
	deepEqual( Stem("misstrauten"), "misstraut" );
	deepEqual( Stem("missvergnügt"), "missvergnugt" );
	deepEqual( Stem("missverstande"), "missverstand" );
	deepEqual( Stem("missverstanden"), "missverstand" );
	deepEqual( Stem("mißverstanden"), "missverstand" );
	deepEqual( Stem("missverständlich"), "missverstand" );
	deepEqual( Stem("mißverständlich"), "missverstand" );
	deepEqual( Stem("missverständlichen"), "missverstand" );
	deepEqual( Stem("mißverständlichen"), "missverstand" );
	deepEqual( Stem("missverständnis"), "missverstandnis" );
	deepEqual( Stem("mißverständnis"), "missverstandnis" );
	deepEqual( Stem("missverständnisse"), "missverstandnis" );
	deepEqual( Stem("mißverständnisse"), "missverstandnis" );
	deepEqual( Stem("missverstehen"), "missversteh" );
	deepEqual( Stem("mißverstehen"), "missversteh" );
	deepEqual( Stem("missversteht"), "missversteht" );
	deepEqual( Stem("misswachs"), "misswach" );
	deepEqual( Stem("mistbauer"), "mistbau" );
	deepEqual( Stem("mistviech"), "mistviech" );
	deepEqual( Stem("mit"), "mit" );
	deepEqual( Stem("mitanand"), "mitanand" );
	deepEqual( Stem("mitarbeit"), "mitarbeit" );
	deepEqual( Stem("mitarbeitenden"), "mitarbeit" );
	deepEqual( Stem("mitarbeiter"), "mitarbeit" );
	deepEqual( Stem("mitarbeiterinnen"), "mitarbeiterinn" );
	deepEqual( Stem("mitarbeitern"), "mitarbeit" );
	deepEqual( Stem("mitass"), "mitass" );
	deepEqual( Stem("mitaß"), "mitass" );
	deepEqual( Stem("mitbegreifen"), "mitbegreif" );
	deepEqual( Stem("mitbesitzer"), "mitbesitz" );
	deepEqual( Stem("mitbrachte"), "mitbracht" );
	deepEqual( Stem("mitbrächte"), "mitbracht" );
	deepEqual( Stem("mitbrachten"), "mitbracht" );
	deepEqual( Stem("mitbringen"), "mitbring" );
	deepEqual( Stem("mitbringt"), "mitbringt" );
	deepEqual( Stem("mitbürger"), "mitburg" );
	deepEqual( Stem("mitbürgern"), "mitburg" );
	deepEqual( Stem("miteinand"), "miteinand" );
	deepEqual( Stem("miteinander"), "miteinand" );
	deepEqual( Stem("miteinzubeziehen"), "miteinzubezieh" );
	deepEqual( Stem("miterleben"), "miterleb" );
	deepEqual( Stem("mitfahren"), "mitfahr" );
	deepEqual( Stem("mitfahrer"), "mitfahr" );
	deepEqual( Stem("mitführt"), "mitfuhrt" );
	deepEqual( Stem("mitführte"), "mitfuhrt" );
	deepEqual( Stem("mitg"), "mitg" );
	deepEqual( Stem("mitgeben"), "mitgeb" );
	deepEqual( Stem("mitgebracht"), "mitgebracht" );
	deepEqual( Stem("mitgedachte"), "mitgedacht" );
	deepEqual( Stem("mitgeführt"), "mitgefuhrt" );
	deepEqual( Stem("mitgegeben"), "mitgegeb" );
	deepEqual( Stem("mitgehen"), "mitgeh" );
	deepEqual( Stem("mitgeht"), "mitgeht" );
	deepEqual( Stem("mitgenommen"), "mitgenomm" );
	deepEqual( Stem("mitgerechnet"), "mitgerechnet" );
	deepEqual( Stem("mitgerissen"), "mitgeriss" );
	deepEqual( Stem("mitgesandt"), "mitgesandt" );
	deepEqual( Stem("mitgesellen"), "mitgesell" );
	deepEqual( Stem("mitgestaltet"), "mitgestaltet" );
	deepEqual( Stem("mitgesungen"), "mitges" );
	deepEqual( Stem("mitgetan"), "mitgetan" );
	deepEqual( Stem("mitgeteilt"), "mitgeteilt" );
	deepEqual( Stem("mitgewirkt"), "mitgewirkt" );
	deepEqual( Stem("mitgift"), "mitgift" );
	deepEqual( Stem("mitginge"), "mitging" );
	deepEqual( Stem("mitglied"), "mitglied" );
	deepEqual( Stem("mitglieder"), "mitglied" );
	deepEqual( Stem("mitgliedern"), "mitglied" );
	deepEqual( Stem("mitgliederversammlung"), "mitgliederversamml" );
	deepEqual( Stem("mitgliedkirchen"), "mitgliedkirch" );
	deepEqual( Stem("mitgliedskirchen"), "mitgliedskirch" );
	deepEqual( Stem("mithalten"), "mithalt" );
	deepEqual( Stem("mithelfen"), "mithelf" );
	deepEqual( Stem("mithilfe"), "mithilf" );
	deepEqual( Stem("mithin"), "mithin" );
	deepEqual( Stem("mithumpeln"), "mithumpeln" );
	deepEqual( Stem("mititium"), "mititium" );
	deepEqual( Stem("mitkommen"), "mitkomm" );
	deepEqual( Stem("mitkommt"), "mitkommt" );
	deepEqual( Stem("mitlachen"), "mitlach" );
	deepEqual( Stem("mitleid"), "mitleid" );
	deepEqual( Stem("mitleidenschaft"), "mitleidenschaft" );
	deepEqual( Stem("mitleidig"), "mitleid" );
	deepEqual( Stem("mitleids"), "mitleid" );
	deepEqual( Stem("mitmachte"), "mitmacht" );
	deepEqual( Stem("mitmanaged"), "mitmanaged" );
	deepEqual( Stem("mitmenschen"), "mitmensch" );
	deepEqual( Stem("mitn"), "mitn" );
	deepEqual( Stem("mitnahm"), "mitnahm" );
	deepEqual( Stem("mitnähme"), "mitnahm" );
	deepEqual( Stem("mitnahmen"), "mitnahm" );
	deepEqual( Stem("mitnehmen"), "mitnehm" );
	deepEqual( Stem("mitnichten"), "mitnicht" );
	deepEqual( Stem("mitschuldig"), "mitschuld" );
	deepEqual( Stem("mitschuldigen"), "mitschuld" );
	deepEqual( Stem("mitspielen"), "mitspiel" );
	deepEqual( Stem("mitstreiten"), "mitstreit" );
	deepEqual( Stem("mitstritten"), "mitstritt" );
	deepEqual( Stem("mitt"), "mitt" );
	deepEqual( Stem("mittag"), "mittag" );
	deepEqual( Stem("mittagbrot"), "mittagbrot" );
	deepEqual( Stem("mittagessen"), "mittagess" );
	deepEqual( Stem("mittags"), "mittag" );
	deepEqual( Stem("mittagseite"), "mittagseit" );
	deepEqual( Stem("mittagshelle"), "mittagshell" );
	deepEqual( Stem("mittagsmahl"), "mittagsmahl" );
	deepEqual( Stem("mittagspausen"), "mittagspaus" );
	deepEqual( Stem("mittagsschläfchen"), "mittagsschlafch" );
	deepEqual( Stem("mittagssonne"), "mittagssonn" );
	deepEqual( Stem("mittagsstunde"), "mittagsstund" );
	deepEqual( Stem("mittagszeit"), "mittagszeit" );
	deepEqual( Stem("mitte"), "mitt" );
	deepEqual( Stem("mitteilen"), "mitteil" );
	deepEqual( Stem("mitteilsam"), "mitteilsam" );
	deepEqual( Stem("mitteilsamer"), "mitteilsam" );
	deepEqual( Stem("mitteilt"), "mitteilt" );
	deepEqual( Stem("mitteilte"), "mitteilt" );
	deepEqual( Stem("mitteilten"), "mitteilt" );
	deepEqual( Stem("mitteilung"), "mitteil" );
	deepEqual( Stem("mittel"), "mittel" );
	deepEqual( Stem("mittelalter"), "mittelalt" );
	deepEqual( Stem("mittelbar"), "mittelbar" );
	deepEqual( Stem("mittelbare"), "mittelbar" );
	deepEqual( Stem("mittelbaren"), "mittelbar" );
	deepEqual( Stem("mittelbarer"), "mittelbar" );
	deepEqual( Stem("mittelchen"), "mittelch" );
	deepEqual( Stem("mittelding"), "mittelding" );
	deepEqual( Stem("mittelgrosses"), "mittelgross" );
	deepEqual( Stem("mittelgroßes"), "mittelgross" );
	deepEqual( Stem("mittelmässigkeit"), "mittelmass" );
	deepEqual( Stem("mitteln"), "mitteln" );
	deepEqual( Stem("mittelpunkt"), "mittelpunkt" );
	deepEqual( Stem("mittelpunkte"), "mittelpunkt" );
	deepEqual( Stem("mittels"), "mittel" );
	deepEqual( Stem("mittelsmann"), "mittelsmann" );
	deepEqual( Stem("mittelsperson"), "mittelsperson" );
	deepEqual( Stem("mittelst"), "mittel" );
	deepEqual( Stem("mittelzustande"), "mittelzustand" );
	deepEqual( Stem("mittelzwecke"), "mittelzweck" );
	deepEqual( Stem("mitten"), "mitt" );
	deepEqual( Stem("mittendrin"), "mittendrin" );
	deepEqual( Stem("mittenwald"), "mittenwald" );
	deepEqual( Stem("mitternacht"), "mitternacht" );
	deepEqual( Stem("mitternachts"), "mitternacht" );
	deepEqual( Stem("mitternachtsessen"), "mitternachtsess" );
	deepEqual( Stem("mitternachtsgottesdiensten"), "mitternachtsgottesdien" );
	deepEqual( Stem("mittler"), "mittl" );
	deepEqual( Stem("mittleramt"), "mittleramt" );
	deepEqual( Stem("mittlere"), "mittl" );
	deepEqual( Stem("mittleren"), "mittl" );
	deepEqual( Stem("mittlerer"), "mittl" );
	deepEqual( Stem("mittleres"), "mittl" );
	deepEqual( Stem("mittlern"), "mittl" );
	deepEqual( Stem("mittlerweile"), "mittlerweil" );
	deepEqual( Stem("mittun"), "mittun" );
	deepEqual( Stem("mittwoch"), "mittwoch" );
	deepEqual( Stem("mitverursacht"), "mitverursacht" );
	deepEqual( Stem("mitwandern"), "mitwand" );
	deepEqual( Stem("mitwirken"), "mitwirk" );
	deepEqual( Stem("mitwirkung"), "mitwirk" );
	deepEqual( Stem("mitzubringen"), "mitzubring" );
	deepEqual( Stem("mitzufahren"), "mitzufahr" );
	deepEqual( Stem("mitzugehen"), "mitzugeh" );
	deepEqual( Stem("mitzuhelfen"), "mitzuhelf" );
	deepEqual( Stem("mitzumachen"), "mitzumach" );
	deepEqual( Stem("mitzunehmen"), "mitzunehm" );
	deepEqual( Stem("mitzuteilen"), "mitzuteil" );
	deepEqual( Stem("mitzuzählen"), "mitzuzahl" );
	deepEqual( Stem("mitzwanzigerin"), "mitzwanzigerin" );
	deepEqual( Stem("mixer"), "mix" );
	deepEqual( Stem("mo"), "mo" );
	deepEqual( Stem("moab"), "moab" );
	deepEqual( Stem("moabiter"), "moabit" );
	deepEqual( Stem("moabs"), "moab" );
	deepEqual( Stem("möbel"), "mobel" );
	deepEqual( Stem("möbeln"), "mobeln" );
	deepEqual( Stem("möbelpacker"), "mobelpack" );
	deepEqual( Stem("möbelstück"), "mobelstuck" );
	deepEqual( Stem("mobile"), "mobil" );
	deepEqual( Stem("mobilisieren"), "mobilisi" );
	deepEqual( Stem("möcht"), "mocht" );
	deepEqual( Stem("mochte"), "mocht" );
	deepEqual( Stem("möchte"), "mocht" );
	deepEqual( Stem("mochten"), "mocht" );
	deepEqual( Stem("möchten"), "mocht" );
	deepEqual( Stem("möchtest"), "mocht" );
	deepEqual( Stem("möchtet"), "mochtet" );
	deepEqual( Stem("modalitäten"), "modalitat" );
	deepEqual( Stem("mode"), "mod" );
	deepEqual( Stem("modell"), "modell" );
	deepEqual( Stem("moder"), "mod" );
	deepEqual( Stem("moderdunst"), "moderdun" );
	deepEqual( Stem("modern"), "mod" );
	deepEqual( Stem("moderne"), "modern" );
	deepEqual( Stem("moderner"), "modern" );
	deepEqual( Stem("modified"), "modified" );
	deepEqual( Stem("modifikationen"), "modifikation" );
	deepEqual( Stem("modifiziert"), "modifiziert" );
	deepEqual( Stem("mödite"), "modit" );
	deepEqual( Stem("möge"), "mog" );
	deepEqual( Stem("mögen"), "mog" );
	deepEqual( Stem("mögest"), "mog" );
	deepEqual( Stem("möget"), "moget" );
	deepEqual( Stem("möglich"), "moglich" );
	deepEqual( Stem("mögliche"), "moglich" );
	deepEqual( Stem("möglichen"), "moglich" );
	deepEqual( Stem("möglicher"), "moglich" );
	deepEqual( Stem("möglicherweise"), "moglicherweis" );
	deepEqual( Stem("möglichkeit"), "moglich" );
	deepEqual( Stem("möglichkeiten"), "moglich" );
	deepEqual( Stem("möglichst"), "moglich" );
	deepEqual( Stem("möglichstem"), "moglich" );
	deepEqual( Stem("möglichster"), "moglich" );
	deepEqual( Stem("mögt"), "mogt" );
	deepEqual( Stem("mohammedaner"), "mohammedan" );
	deepEqual( Stem("mohnblume"), "mohnblum" );
	deepEqual( Stem("mohnblumen"), "mohnblum" );
	deepEqual( Stem("mohnrosen"), "mohnros" );
	deepEqual( Stem("molche"), "molch" );
	deepEqual( Stem("molestierten"), "molestiert" );
	deepEqual( Stem("molliger"), "mollig" );
	deepEqual( Stem("moment"), "moment" );
	deepEqual( Stem("momentan"), "momentan" );
	deepEqual( Stem("momente"), "moment" );
	deepEqual( Stem("momenten"), "moment" );
	deepEqual( Stem("mon"), "mon" );
	deepEqual( Stem("monat"), "monat" );
	deepEqual( Stem("monate"), "monat" );
	deepEqual( Stem("monaten"), "monat" );
	deepEqual( Stem("monatlich"), "monat" );
	deepEqual( Stem("monatszeitschrift"), "monatszeitschrift" );
	deepEqual( Stem("mönch"), "monch" );
	deepEqual( Stem("mönchsgesicht"), "monchsgesicht" );
	deepEqual( Stem("mond"), "mond" );
	deepEqual( Stem("mondbeglänzten"), "mondbeglanzt" );
	deepEqual( Stem("mondberg"), "mondberg" );
	deepEqual( Stem("mondberges"), "mondberg" );
	deepEqual( Stem("mondbeschienene"), "mondbeschien" );
	deepEqual( Stem("mondblumen"), "mondblum" );
	deepEqual( Stem("mondbuch"), "mondbuch" );
	deepEqual( Stem("mondbutter"), "mondbutt" );
	deepEqual( Stem("monde"), "mond" );
	deepEqual( Stem("mondes"), "mond" );
	deepEqual( Stem("mondfahrt"), "mondfahrt" );
	deepEqual( Stem("mondgegend"), "mondgeg" );
	deepEqual( Stem("mondhelle"), "mondhell" );
	deepEqual( Stem("mondhügel"), "mondhugel" );
	deepEqual( Stem("mondkälber"), "mondkalb" );
	deepEqual( Stem("mondkälbern"), "mondkalb" );
	deepEqual( Stem("mondkanone"), "mondkanon" );
	deepEqual( Stem("mondkrone"), "mondkron" );
	deepEqual( Stem("mondkruste"), "mondkrust" );
	deepEqual( Stem("mondland"), "mondland" );
	deepEqual( Stem("mondlandschaft"), "mondlandschaft" );
	deepEqual( Stem("mondlederstiefel"), "mondlederstiefel" );
	deepEqual( Stem("mondlicht"), "mondlicht" );
	deepEqual( Stem("mondlichtes"), "mondlicht" );
	deepEqual( Stem("mondmann"), "mondmann" );
	deepEqual( Stem("mondmanns"), "mondmann" );
	deepEqual( Stem("mondnächte"), "mondnacht" );
	deepEqual( Stem("mondschäfchen"), "mondschafch" );
	deepEqual( Stem("mondschein"), "mondschein" );
	deepEqual( Stem("mondscheinfladen"), "mondscheinflad" );
	deepEqual( Stem("mondschlitten"), "mondschlitt" );
	deepEqual( Stem("mondsichel"), "mondsichel" );
	deepEqual( Stem("mondspinat"), "mondspinat" );
	deepEqual( Stem("mondstaub"), "mondstaub" );
	deepEqual( Stem("mondstich"), "mondstich" );
	deepEqual( Stem("mondstrahlen"), "mondstrahl" );
	deepEqual( Stem("mondwüste"), "mondwust" );
	deepEqual( Stem("money"), "money" );
	deepEqual( Stem("monokel"), "monokel" );
	deepEqual( Stem("monokelherr"), "monokelherr" );
	deepEqual( Stem("monsieur"), "monsieur" );
	deepEqual( Stem("monstra"), "monstra" );
	deepEqual( Stem("mont"), "mont" );
	deepEqual( Stem("montag"), "montag" );
	deepEqual( Stem("montagnachmittag"), "montagnachmittag" );
	deepEqual( Stem("montarcy"), "montarcy" );
	deepEqual( Stem("montsalvatsch"), "montsalvatsch" );
	deepEqual( Stem("montur"), "montur" );
	deepEqual( Stem("monument"), "monument" );
	deepEqual( Stem("moorlache"), "moorlach" );
	deepEqual( Stem("moorwiesen"), "moorwies" );
	deepEqual( Stem("moorzotteln"), "moorzotteln" );
	deepEqual( Stem("moos"), "moos" );
	deepEqual( Stem("moose"), "moos" );
	deepEqual( Stem("moosfasern"), "moosfas" );
	deepEqual( Stem("moosgraben"), "moosgrab" );
	deepEqual( Stem("moosgrund"), "moosgrund" );
	deepEqual( Stem("moosigen"), "moosig" );
	deepEqual( Stem("moosklee"), "mooskle" );
	deepEqual( Stem("moosplatte"), "moosplatt" );
	deepEqual( Stem("moph"), "moph" );
	deepEqual( Stem("moral"), "moral" );
	deepEqual( Stem("moralisch"), "moral" );
	deepEqual( Stem("moralischbesseren"), "moralischbess" );
	deepEqual( Stem("moralische"), "moral" );
	deepEqual( Stem("moralischen"), "moral" );
	deepEqual( Stem("moralischer"), "moral" );
	deepEqual( Stem("moralisches"), "moral" );
	deepEqual( Stem("moralität"), "moralitat" );
	deepEqual( Stem("moralphilosoph"), "moralphilosoph" );
	deepEqual( Stem("mord"), "mord" );
	deepEqual( Stem("mordbrenner"), "mordbrenn" );
	deepEqual( Stem("morden"), "mord" );
	deepEqual( Stem("mörder"), "mord" );
	deepEqual( Stem("mörderisch"), "morder" );
	deepEqual( Stem("mörderischen"), "morder" );
	deepEqual( Stem("mörderlich"), "mord" );
	deepEqual( Stem("mörders"), "mord" );
	deepEqual( Stem("mordio"), "mordio" );
	deepEqual( Stem("mordtat"), "mordtat" );
	deepEqual( Stem("mordversuchs"), "mordversuch" );
	deepEqual( Stem("more"), "mor" );
	deepEqual( Stem("morgen"), "morg" );
	deepEqual( Stem("morgenbrot"), "morgenbrot" );
	deepEqual( Stem("morgende"), "morgend" );
	deepEqual( Stem("morgenden"), "morgend" );
	deepEqual( Stem("morgenferne"), "morgenfern" );
	deepEqual( Stem("morgenlande"), "morgenland" );
	deepEqual( Stem("morgenlandes"), "morgenland" );
	deepEqual( Stem("morgenländischen"), "morgenland" );
	deepEqual( Stem("morgenlands"), "morgenland" );
	deepEqual( Stem("morgenliedchen"), "morgenliedch" );
	deepEqual( Stem("morgenluft"), "morgenluft" );
	deepEqual( Stem("morgenmantel"), "morgenmantel" );
	deepEqual( Stem("morgenpirsch"), "morgenpirsch" );
	deepEqual( Stem("morgenrot"), "morgenrot" );
	deepEqual( Stem("morgenröte"), "morgenrot" );
	deepEqual( Stem("morgens"), "morg" );
	deepEqual( Stem("morgensonne"), "morgensonn" );
	deepEqual( Stem("morgenstern"), "morgen" );
	deepEqual( Stem("morgensterne"), "morgenstern" );
	deepEqual( Stem("morgental"), "morgental" );
	deepEqual( Stem("morgenwindchen"), "morgenwindch" );
	deepEqual( Stem("morgigen"), "morgig" );
	deepEqual( Stem("moring"), "moring" );
	deepEqual( Stem("moritz"), "moritz" );
	deepEqual( Stem("morose"), "moros" );
	deepEqual( Stem("morosität"), "morositat" );
	deepEqual( Stem("morsche"), "morsch" );
	deepEqual( Stem("morschen"), "morsch" );
	deepEqual( Stem("morscher"), "morsch" );
	deepEqual( Stem("mörser"), "mors" );
	deepEqual( Stem("mörserchen"), "morserch" );
	deepEqual( Stem("mörtelbrocken"), "mortelbrock" );
	deepEqual( Stem("moscheh"), "moscheh" );
	deepEqual( Stem("moschus"), "moschus" );
	deepEqual( Stem("mose"), "mos" );
	deepEqual( Stem("moses"), "mos" );
	deepEqual( Stem("moskau"), "moskau" );
	deepEqual( Stem("most"), "most" );
	deepEqual( Stem("mostes"), "most" );
	deepEqual( Stem("motion"), "motion" );
	deepEqual( Stem("motionen"), "motion" );
	deepEqual( Stem("motitans"), "motitan" );
	deepEqual( Stem("motiv"), "motiv" );
	deepEqual( Stem("motive"), "motiv" );
	deepEqual( Stem("motor"), "motor" );
	deepEqual( Stem("motorradclub"), "motorradclub" );
	deepEqual( Stem("motorräder"), "motorrad" );
	deepEqual( Stem("motto"), "motto" );
	deepEqual( Stem("mozartsche"), "mozartsch" );
	deepEqual( Stem("mta"), "mta" );
	deepEqual( Stem("mücke"), "muck" );
	deepEqual( Stem("mücken"), "muck" );
	deepEqual( Stem("mucksen"), "mucks" );
	deepEqual( Stem("muckser"), "mucks" );
	deepEqual( Stem("muckwitz"), "muckwitz" );
	deepEqual( Stem("müde"), "mud" );
	deepEqual( Stem("müden"), "mud" );
	deepEqual( Stem("müdes"), "mud" );
	deepEqual( Stem("müdigkeit"), "mudig" );
	deepEqual( Stem("muess"), "muess" );
	deepEqual( Stem("müesst"), "muesst" );
	deepEqual( Stem("mühe"), "muh" );
	deepEqual( Stem("mühelosigkeit"), "muhelos" );
	deepEqual( Stem("mühen"), "muh" );
	deepEqual( Stem("mühevoll"), "muhevoll" );
	deepEqual( Stem("mühevolle"), "muhevoll" );
	deepEqual( Stem("mühevoller"), "muhevoll" );
	deepEqual( Stem("mühlsteine"), "muhlstein" );
	deepEqual( Stem("muhme"), "muhm" );
	deepEqual( Stem("mühsal"), "muhsal" );
	deepEqual( Stem("mühsam"), "muhsam" );
	deepEqual( Stem("mühsame"), "muhsam" );
	deepEqual( Stem("mühselig"), "muhsel" );
	deepEqual( Stem("mühseligen"), "muhsel" );
	deepEqual( Stem("mühseligkeit"), "muhsel" );
	deepEqual( Stem("müht"), "muht" );
	deepEqual( Stem("mühten"), "muht" );
	deepEqual( Stem("mul"), "mul" );
	deepEqual( Stem("mulack"), "mulack" );
	deepEqual( Stem("mulde"), "muld" );
	deepEqual( Stem("mullack"), "mullack" );
	deepEqual( Stem("müllerjungen"), "mullerj" );
	deepEqual( Stem("multext"), "multext" );
	deepEqual( Stem("multikulturelle"), "multikulturell" );
	deepEqual( Stem("multipliziert"), "multipliziert" );
	deepEqual( Stem("multis"), "multis" );
	deepEqual( Stem("münchen"), "munch" );
	deepEqual( Stem("münchener"), "munch" );
	deepEqual( Stem("mund"), "mund" );
	deepEqual( Stem("mundart"), "mundart" );
	deepEqual( Stem("mundbärtchen"), "mundbartch" );
	deepEqual( Stem("mündchen"), "mundch" );
	deepEqual( Stem("munde"), "mund" );
	deepEqual( Stem("munden"), "mund" );
	deepEqual( Stem("mundes"), "mund" );
	deepEqual( Stem("mündet"), "mundet" );
	deepEqual( Stem("mündete"), "mundet" );
	deepEqual( Stem("mundeten"), "mundet" );
	deepEqual( Stem("mundgefässe"), "mundgefass" );
	deepEqual( Stem("mundgefäße"), "mundgefass" );
	deepEqual( Stem("mundkoch"), "mundkoch" );
	deepEqual( Stem("mündlich"), "mundlich" );
	deepEqual( Stem("mündlichkeit"), "mundlich" );
	deepEqual( Stem("mundraub"), "mundraub" );
	deepEqual( Stem("mundtot"), "mundtot" );
	deepEqual( Stem("mündung"), "mundung" );
	deepEqual( Stem("mundwerk"), "mundwerk" );
	deepEqual( Stem("mundwinkel"), "mundwinkel" );
	deepEqual( Stem("mundwinkeln"), "mundwinkeln" );
	deepEqual( Stem("münsingen"), "munsing" );
	deepEqual( Stem("munter"), "munt" );
	deepEqual( Stem("muntere"), "munt" );
	deepEqual( Stem("munteren"), "munt" );
	deepEqual( Stem("munterkeit"), "munter" );
	deepEqual( Stem("muntern"), "munt" );
	deepEqual( Stem("munterte"), "muntert" );
	deepEqual( Stem("münze"), "munz" );
	deepEqual( Stem("münzen"), "munz" );
	deepEqual( Stem("mürb"), "murb" );
	deepEqual( Stem("mürbe"), "murb" );
	deepEqual( Stem("murke"), "murk" );
	deepEqual( Stem("murkes"), "murk" );
	deepEqual( Stem("murmelkugeln"), "murmelkugeln" );
	deepEqual( Stem("murmeln"), "murmeln" );
	deepEqual( Stem("murmelte"), "murmelt" );
	deepEqual( Stem("murmeltier"), "murmelti" );
	deepEqual( Stem("murmeltiere"), "murmelti" );
	deepEqual( Stem("murren"), "murr" );
	deepEqual( Stem("mürrisch"), "murrisch" );
	deepEqual( Stem("murrkopf"), "murrkopf" );
	deepEqual( Stem("murrte"), "murrt" );
	deepEqual( Stem("murrten"), "murrt" );
	deepEqual( Stem("mus"), "mus" );
	deepEqual( Stem("muschelförmige"), "muschelform" );
	deepEqual( Stem("muscheln"), "muscheln" );
	deepEqual( Stem("muschelschiff"), "muschelschiff" );
	deepEqual( Stem("muschi"), "muschi" );
	deepEqual( Stem("museum"), "museum" );
	deepEqual( Stem("musik"), "musik" );
	deepEqual( Stem("musikalisch"), "musikal" );
	deepEqual( Stem("musikalisches"), "musikal" );
	deepEqual( Stem("musikanten"), "musikant" );
	deepEqual( Stem("musikbusiness"), "musikbusiness" );
	deepEqual( Stem("musiker"), "musik" );
	deepEqual( Stem("musikindustrie"), "musikindustri" );
	deepEqual( Stem("musikstück"), "musikstuck" );
	deepEqual( Stem("musikszene"), "musiksz" );
	deepEqual( Stem("musizierende"), "musizier" );
	deepEqual( Stem("musizierte"), "musiziert" );
	deepEqual( Stem("muskelfasern"), "muskelfas" );
	deepEqual( Stem("muskete"), "musket" );
	deepEqual( Stem("muskulatur"), "muskulatur" );
	deepEqual( Stem("muss"), "muss" );
	deepEqual( Stem("muß"), "muss" );
	deepEqual( Stem("musse"), "muss" );
	deepEqual( Stem("müsse"), "muss" );
	deepEqual( Stem("musselinhalstuch"), "musselinhalstuch" );
	deepEqual( Stem("müssen"), "muss" );
	deepEqual( Stem("mussestunden"), "mussestund" );
	deepEqual( Stem("müssig"), "mussig" );
	deepEqual( Stem("müßig"), "mussig" );
	deepEqual( Stem("müssige"), "mussig" );
	deepEqual( Stem("müssigen"), "mussig" );
	deepEqual( Stem("müßigen"), "mussig" );
	deepEqual( Stem("müssiges"), "mussig" );
	deepEqual( Stem("müssiggang"), "mussiggang" );
	deepEqual( Stem("müssiggange"), "mussiggang" );
	deepEqual( Stem("müssiggänger"), "mussiggang" );
	deepEqual( Stem("müssigganges"), "mussiggang" );
	deepEqual( Stem("musst"), "musst" );
	deepEqual( Stem("mußt"), "musst" );
	deepEqual( Stem("müsst"), "musst" );
	deepEqual( Stem("müßt"), "musst" );
	deepEqual( Stem("musste"), "musst" );
	deepEqual( Stem("mußte"), "musst" );
	deepEqual( Stem("müsste"), "musst" );
	deepEqual( Stem("müßte"), "musst" );
	deepEqual( Stem("mussten"), "musst" );
	deepEqual( Stem("mußten"), "musst" );
	deepEqual( Stem("müssten"), "musst" );
	deepEqual( Stem("müßten"), "musst" );
	deepEqual( Stem("müsstest"), "musst" );
	deepEqual( Stem("muster"), "must" );
	deepEqual( Stem("mustergültig"), "mustergult" );
	deepEqual( Stem("musterkarte"), "musterkart" );
	deepEqual( Stem("musterte"), "mustert" );
	deepEqual( Stem("musterung"), "muster" );
	deepEqual( Stem("mut"), "mut" );
	deepEqual( Stem("mütchen"), "mutch" );
	deepEqual( Stem("mute"), "mut" );
	deepEqual( Stem("mutes"), "mut" );
	deepEqual( Stem("mutesäusserung"), "mutesausser" );
	deepEqual( Stem("mutig"), "mutig" );
	deepEqual( Stem("mutige"), "mutig" );
	deepEqual( Stem("mutigen"), "mutig" );
	deepEqual( Stem("mütlichen"), "mutlich" );
	deepEqual( Stem("mutlos"), "mutlos" );
	deepEqual( Stem("mutmassen"), "mutmass" );
	deepEqual( Stem("mutmassliche"), "mutmass" );
	deepEqual( Stem("mutoid"), "mutoid" );
	deepEqual( Stem("muttchen"), "muttch" );
	deepEqual( Stem("mutter"), "mutt" );
	deepEqual( Stem("mütterchen"), "mutterch" );
	deepEqual( Stem("mutterdurchbruch"), "mutterdurchbruch" );
	deepEqual( Stem("muttergottes"), "muttergott" );
	deepEqual( Stem("mutterkirche"), "mutterkirch" );
	deepEqual( Stem("mutterleib"), "mutterleib" );
	deepEqual( Stem("mutterleibe"), "mutterleib" );
	deepEqual( Stem("mütterlichen"), "mutt" );
	deepEqual( Stem("mütterlicher"), "mutt" );
	deepEqual( Stem("mütterliches"), "mutt" );
	deepEqual( Stem("mutterliebe"), "mutterlieb" );
	deepEqual( Stem("muttern"), "mutt" );
	deepEqual( Stem("müttern"), "mutt" );
	deepEqual( Stem("mutterseelenallein"), "mutterseelenallein" );
	deepEqual( Stem("muttersprache"), "muttersprach" );
	deepEqual( Stem("muttersprachler"), "muttersprachl" );
	deepEqual( Stem("mutterwitz"), "mutterwitz" );
	deepEqual( Stem("mutvoll"), "mutvoll" );
	deepEqual( Stem("mutwillen"), "mutwill" );
	deepEqual( Stem("mutwillens"), "mutwill" );
	deepEqual( Stem("mutwillig"), "mutwill" );
	deepEqual( Stem("mutwillige"), "mutwill" );
	deepEqual( Stem("mutwilligen"), "mutwill" );
	deepEqual( Stem("mutwilliges"), "mutwill" );
	deepEqual( Stem("mutwilligsten"), "mutwill" );
	deepEqual( Stem("mütze"), "mutz" );
	deepEqual( Stem("mützen"), "mutz" );
	deepEqual( Stem("mützenabnehmen"), "mutzenabnehm" );
	deepEqual( Stem("myriaden"), "myriad" );
	deepEqual( Stem("myrrhen"), "myrrh" );
	deepEqual( Stem("mysterien"), "mysteri" );
	deepEqual( Stem("mystica"), "mystica" );
	deepEqual( Stem("mystiker"), "mystik" );
	deepEqual( Stem("mystizismus"), "mystizismus" );
	deepEqual( Stem("mythen"), "myth" );
	deepEqual( Stem("mythos"), "mythos" );
	deepEqual( Stem("n"), "n" );
	deepEqual( Stem("na"), "na" );
	deepEqual( Stem("naamah"), "naamah" );
	deepEqual( Stem("nabel"), "nabel" );
	deepEqual( Stem("nach"), "nach" );
	deepEqual( Stem("nacha"), "nacha" );
	deepEqual( Stem("nachäffen"), "nachaff" );
	deepEqual( Stem("nachäffte"), "nachafft" );
	deepEqual( Stem("nachahmer"), "nachahm" );
	deepEqual( Stem("nachahmt"), "nachahmt" );
	deepEqual( Stem("nachahmung"), "nachahm" );
	deepEqual( Stem("nachassons"), "nachasson" );
	deepEqual( Stem("nachbar"), "nachbar" );
	deepEqual( Stem("nachbaräckern"), "nachbarack" );
	deepEqual( Stem("nachbaren"), "nachbar" );
	deepEqual( Stem("nachbarhäuser"), "nachbarhaus" );
	deepEqual( Stem("nachbarin"), "nachbarin" );
	deepEqual( Stem("nachbarkirche"), "nachbarkirch" );
	deepEqual( Stem("nachbarn"), "nachbarn" );
	deepEqual( Stem("nachbarregierung"), "nachbarregier" );
	deepEqual( Stem("nachbars"), "nachbar" );
	deepEqual( Stem("nachbarschaft"), "nachbarschaft" );
	deepEqual( Stem("nachbarsleute"), "nachbarsleut" );
	deepEqual( Stem("nachbilden"), "nachbild" );
	deepEqual( Stem("nachbildeten"), "nachbildet" );
	deepEqual( Stem("nachblickend"), "nachblick" );
	deepEqual( Stem("nachdachte"), "nachdacht" );
	deepEqual( Stem("nachdem"), "nachd" );
	deepEqual( Stem("nachdenken"), "nachdenk" );
	deepEqual( Stem("nachdenkende"), "nachdenk" );
	deepEqual( Stem("nachdenkens"), "nachdenk" );
	deepEqual( Stem("nachdenklich"), "nachdenk" );
	deepEqual( Stem("nachdenklichkeit"), "nachdenk" );
	deepEqual( Stem("nachdenkt"), "nachdenkt" );
	deepEqual( Stem("nachdruck"), "nachdruck" );
	deepEqual( Stem("nachdrücklichen"), "nachdruck" );
	deepEqual( Stem("nacheiferten"), "nacheifert" );
	deepEqual( Stem("nacheiferung"), "nacheifer" );
	deepEqual( Stem("nacheinander"), "nacheinand" );
	deepEqual( Stem("nacheinanderfolgende"), "nacheinanderfolg" );
	deepEqual( Stem("nachen"), "nach" );
	deepEqual( Stem("nacher"), "nach" );
	deepEqual( Stem("nachernte"), "nachernt" );
	deepEqual( Stem("nachflogen"), "nachflog" );
	deepEqual( Stem("nachfolgende"), "nachfolg" );
	deepEqual( Stem("nachfolgenden"), "nachfolg" );
	deepEqual( Stem("nachfolgt"), "nachfolgt" );
	deepEqual( Stem("nachforschen"), "nachforsch" );
	deepEqual( Stem("nachforscht"), "nachforscht" );
	deepEqual( Stem("nachforschte"), "nachforscht" );
	deepEqual( Stem("nachforschten"), "nachforscht" );
	deepEqual( Stem("nachforschung"), "nachforsch" );
	deepEqual( Stem("nachforschungen"), "nachforsch" );
	deepEqual( Stem("nachfrage"), "nachfrag" );
	deepEqual( Stem("nachfragen"), "nachfrag" );
	deepEqual( Stem("nachfühlte"), "nachfuhlt" );
	deepEqual( Stem("nachg"), "nachg" );
	deepEqual( Stem("nachgangen"), "nachgang" );
	deepEqual( Stem("nachgeahmten"), "nachgeahmt" );
	deepEqual( Stem("nachgeben"), "nachgeb" );
	deepEqual( Stem("nachgebildet"), "nachgebildet" );
	deepEqual( Stem("nachgebildete"), "nachgebildet" );
	deepEqual( Stem("nachgedacht"), "nachgedacht" );
	deepEqual( Stem("nachgefolgt"), "nachgefolgt" );
	deepEqual( Stem("nachgehen"), "nachgeh" );
	deepEqual( Stem("nachgehn"), "nachgehn" );
	deepEqual( Stem("nachgeht"), "nachgeht" );
	deepEqual( Stem("nachgekommen"), "nachgekomm" );
	deepEqual( Stem("nachgeschaut"), "nachgeschaut" );
	deepEqual( Stem("nachgeschickte"), "nachgeschickt" );
	deepEqual( Stem("nachgeschlagen"), "nachgeschlag" );
	deepEqual( Stem("nachgesehen"), "nachgeseh" );
	deepEqual( Stem("nachgesetzt"), "nachgesetzt" );
	deepEqual( Stem("nachgestiegen"), "nachgestieg" );
	deepEqual( Stem("nachgewiesen"), "nachgewies" );
	deepEqual( Stem("nachgezählt"), "nachgezahlt" );
	deepEqual( Stem("nachgiebigkeit"), "nachgieb" );
	deepEqual( Stem("nachging"), "nachging" );
	deepEqual( Stem("nachgingen"), "nachging" );
	deepEqual( Stem("nachgrübelte"), "nachgrubelt" );
	deepEqual( Stem("nachhaltig"), "nachhalt" );
	deepEqual( Stem("nachhausefahren"), "nachhausefahr" );
	deepEqual( Stem("nachhausewege"), "nachhauseweg" );
	deepEqual( Stem("nachher"), "nachh" );
	deepEqual( Stem("nachherigen"), "nachher" );
	deepEqual( Stem("nachhinein"), "nachhinein" );
	deepEqual( Stem("nachholen"), "nachhol" );
	deepEqual( Stem("nachjagend"), "nachjag" );
	deepEqual( Stem("nachkam"), "nachkam" );
	deepEqual( Stem("nachkommen"), "nachkomm" );
	deepEqual( Stem("nachkommenschaft"), "nachkommenschaft" );
	deepEqual( Stem("nachkommenschaften"), "nachkommenschaft" );
	deepEqual( Stem("nachlass"), "nachlass" );
	deepEqual( Stem("nachlaß"), "nachlass" );
	deepEqual( Stem("nachlassen"), "nachlass" );
	deepEqual( Stem("nachlässig"), "nachlass" );
	deepEqual( Stem("nachlässigkeit"), "nachlass" );
	deepEqual( Stem("nachlaufen"), "nachlauf" );
	deepEqual( Stem("nachlese"), "nachles" );
	deepEqual( Stem("nachlesen"), "nachles" );
	deepEqual( Stem("nachliefen"), "nachlief" );
	deepEqual( Stem("nachmachen"), "nachmach" );
	deepEqual( Stem("nachmalen"), "nachmal" );
	deepEqual( Stem("nachmals"), "nachmal" );
	deepEqual( Stem("nachmittag"), "nachmittag" );
	deepEqual( Stem("nachmittage"), "nachmittag" );
	deepEqual( Stem("nachmittags"), "nachmittag" );
	deepEqual( Stem("nachmittagsunterhaltung"), "nachmittagsunterhalt" );
	deepEqual( Stem("nachricht"), "nachricht" );
	deepEqual( Stem("nachrichten"), "nachricht" );
	deepEqual( Stem("nachrichtenagentur"), "nachrichtenagentur" );
	deepEqual( Stem("nachrichtenlosen"), "nachrichtenlos" );
	deepEqual( Stem("nachrichtenmagazin"), "nachrichtenmagazin" );
	deepEqual( Stem("nachsagen"), "nachsag" );
	deepEqual( Stem("nachsah"), "nachsah" );
	deepEqual( Stem("nachschau"), "nachschau" );
	deepEqual( Stem("nachschauen"), "nachschau" );
	deepEqual( Stem("nachschaute"), "nachschaut" );
	deepEqual( Stem("nachschicken"), "nachschick" );
	deepEqual( Stem("nachsehe"), "nachseh" );
	deepEqual( Stem("nachsehen"), "nachseh" );
	deepEqual( Stem("nachsicht"), "nachsicht" );
	deepEqual( Stem("nachsichtig"), "nachsicht" );
	deepEqual( Stem("nachsinnen"), "nachsinn" );
	deepEqual( Stem("nachspiele"), "nachspiel" );
	deepEqual( Stem("nachspringen"), "nachspring" );
	deepEqual( Stem("nächst"), "nach" );
	deepEqual( Stem("nächstbeste"), "nachstb" );
	deepEqual( Stem("nächstbesten"), "nachstb" );
	deepEqual( Stem("nächstdem"), "nachstd" );
	deepEqual( Stem("nächste"), "nach" );
	deepEqual( Stem("nächsten"), "nach" );
	deepEqual( Stem("nächstenliebe"), "nachstenlieb" );
	deepEqual( Stem("nächstens"), "nachst" );
	deepEqual( Stem("nächster"), "nach" );
	deepEqual( Stem("nächstgelegene"), "nachstgeleg" );
	deepEqual( Stem("nächstliegenden"), "nachstlieg" );
	deepEqual( Stem("nacht"), "nacht" );
	deepEqual( Stem("nachtarbeit"), "nachtarbeit" );
	deepEqual( Stem("nachtcafe"), "nachtcaf" );
	deepEqual( Stem("nachtcafé"), "nachtcafé" );
	deepEqual( Stem("nachtclub"), "nachtclub" );
	deepEqual( Stem("nächte"), "nacht" );
	deepEqual( Stem("nachteil"), "nachteil" );
	deepEqual( Stem("nachteile"), "nachteil" );
	deepEqual( Stem("nachteiligen"), "nachteil" );
	deepEqual( Stem("nächten"), "nacht" );
	deepEqual( Stem("nachtessen"), "nachtess" );
	deepEqual( Stem("nachteulen"), "nachteul" );
	deepEqual( Stem("nachtfahne"), "nachtfahn" );
	deepEqual( Stem("nachtfalter"), "nachtfalt" );
	deepEqual( Stem("nachtfaltern"), "nachtfalt" );
	deepEqual( Stem("nachtfee"), "nachtfe" );
	deepEqual( Stem("nachtgebet"), "nachtgebet" );
	deepEqual( Stem("nachtgejaide"), "nachtgejaid" );
	deepEqual( Stem("nachthäubchen"), "nachthaubch" );
	deepEqual( Stem("nachthemd"), "nachthemd" );
	deepEqual( Stem("nachthemdchen"), "nachthemdch" );
	deepEqual( Stem("nachthimmel"), "nachthimmel" );
	deepEqual( Stem("nachtig"), "nachtig" );
	deepEqual( Stem("nachtigall"), "nachtigall" );
	deepEqual( Stem("nachtigallen"), "nachtigall" );
	deepEqual( Stem("nachtisch"), "nachtisch" );
	deepEqual( Stem("nachtjoppe"), "nachtjopp" );
	deepEqual( Stem("nachtklee"), "nachtkle" );
	deepEqual( Stem("nächtlich"), "nachtlich" );
	deepEqual( Stem("nächtliche"), "nachtlich" );
	deepEqual( Stem("nächtlichen"), "nachtlich" );
	deepEqual( Stem("nächtlicher"), "nachtlich" );
	deepEqual( Stem("nachtluft"), "nachtluft" );
	deepEqual( Stem("nachtmützen"), "nachtmutz" );
	deepEqual( Stem("nachtnebel"), "nachtnebel" );
	deepEqual( Stem("nachtragen"), "nachtrag" );
	deepEqual( Stem("nachträglich"), "nachtrag" );
	deepEqual( Stem("nachtrauern"), "nachtrau" );
	deepEqual( Stem("nachts"), "nacht" );
	deepEqual( Stem("nachtschmetterlinge"), "nachtschmetterling" );
	deepEqual( Stem("nachtschwarzen"), "nachtschwarz" );
	deepEqual( Stem("nachtstillen"), "nachtstill" );
	deepEqual( Stem("nachttau"), "nachttau" );
	deepEqual( Stem("nachtwächter"), "nachtwacht" );
	deepEqual( Stem("nachtwächtern"), "nachtwacht" );
	deepEqual( Stem("nachtwandel"), "nachtwandel" );
	deepEqual( Stem("nachtwandler"), "nachtwandl" );
	deepEqual( Stem("nachvollziehen"), "nachvollzieh" );
	deepEqual( Stem("nachwandelten"), "nachwandelt" );
	deepEqual( Stem("nachwelt"), "nachwelt" );
	deepEqual( Stem("nachwuchs"), "nachwuch" );
	deepEqual( Stem("nachzählte"), "nachzahlt" );
	deepEqual( Stem("nachzottelte"), "nachzottelt" );
	deepEqual( Stem("nachzuahmen"), "nachzuahm" );
	deepEqual( Stem("nachzubilden"), "nachzubild" );
	deepEqual( Stem("nachzublicken"), "nachzublick" );
	deepEqual( Stem("nachzudenken"), "nachzudenk" );
	deepEqual( Stem("nachzufahren"), "nachzufahr" );
	deepEqual( Stem("nachzufragen"), "nachzufrag" );
	deepEqual( Stem("nachzufüllen"), "nachzufull" );
	deepEqual( Stem("nachzugehen"), "nachzugeh" );
	deepEqual( Stem("nachzuhängen"), "nachzuhang" );
	deepEqual( Stem("nachzuholen"), "nachzuhol" );
	deepEqual( Stem("nachzurufen"), "nachzuruf" );
	deepEqual( Stem("nachzuschauen"), "nachzuschau" );
	deepEqual( Stem("nachzusehen"), "nachzuseh" );
	deepEqual( Stem("nachzuspüren"), "nachzuspur" );
	deepEqual( Stem("nachzustreben"), "nachzustreb" );
	deepEqual( Stem("nachzusuchen"), "nachzusuch" );
	deepEqual( Stem("nachzuweisen"), "nachzuweis" );
	deepEqual( Stem("nacken"), "nack" );
	deepEqual( Stem("nacketes"), "nacket" );
	deepEqual( Stem("nackt"), "nackt" );
	deepEqual( Stem("nackte"), "nackt" );
	deepEqual( Stem("nackten"), "nackt" );
	deepEqual( Stem("nacktheit"), "nacktheit" );
	deepEqual( Stem("nadab"), "nadab" );
	deepEqual( Stem("nadel"), "nadel" );
	deepEqual( Stem("nadelbüchse"), "nadelbuchs" );
	deepEqual( Stem("nadelgras"), "nadelgras" );
	deepEqual( Stem("nadelöhr"), "nadelohr" );
	deepEqual( Stem("nadelzunge"), "nadelz" );
	deepEqual( Stem("nagel"), "nagel" );
	deepEqual( Stem("nägelein"), "nagelein" );
	deepEqual( Stem("nägeln"), "nageln" );
	deepEqual( Stem("nagelschuhe"), "nagelschuh" );
	deepEqual( Stem("nagende"), "nagend" );
	deepEqual( Stem("nagerln"), "nagerln" );
	deepEqual( Stem("nagerlstock"), "nagerlstock" );
	deepEqual( Stem("nah"), "nah" );
	deepEqual( Stem("nahe"), "nah" );
	deepEqual( Stem("nähe"), "nah" );
	deepEqual( Stem("nahegelegenen"), "nahegeleg" );
	deepEqual( Stem("nahegelegt"), "nahegelegt" );
	deepEqual( Stem("nahekommen"), "nahekomm" );
	deepEqual( Stem("naheliegendste"), "nahelieg" );
	deepEqual( Stem("nahen"), "nah" );
	deepEqual( Stem("nahend"), "nahend" );
	deepEqual( Stem("nahende"), "nahend" );
	deepEqual( Stem("nahenden"), "nahend" );
	deepEqual( Stem("naher"), "nah" );
	deepEqual( Stem("näher"), "nah" );
	deepEqual( Stem("näheren"), "nah" );
	deepEqual( Stem("näherer"), "nah" );
	deepEqual( Stem("näheres"), "nah" );
	deepEqual( Stem("nähern"), "nah" );
	deepEqual( Stem("nähert"), "nahert" );
	deepEqual( Stem("näherte"), "nahert" );
	deepEqual( Stem("näherten"), "nahert" );
	deepEqual( Stem("nähertreten"), "nahertret" );
	deepEqual( Stem("nähete"), "nahet" );
	deepEqual( Stem("näheten"), "nahet" );
	deepEqual( Stem("nahezu"), "nahezu" );
	deepEqual( Stem("nahm"), "nahm" );
	deepEqual( Stem("nähme"), "nahm" );
	deepEqual( Stem("nahmen"), "nahm" );
	deepEqual( Stem("nähmen"), "nahm" );
	deepEqual( Stem("nähren"), "nahr" );
	deepEqual( Stem("nahrhaft"), "nahrhaft" );
	deepEqual( Stem("nährmitteln"), "nahrmitteln" );
	deepEqual( Stem("nährte"), "nahrt" );
	deepEqual( Stem("nahrung"), "nahrung" );
	deepEqual( Stem("nahrungsmittel"), "nahrungsmittel" );
	deepEqual( Stem("naht"), "naht" );
	deepEqual( Stem("nahtbeflissenen"), "nahtbefliss" );
	deepEqual( Stem("nahte"), "naht" );
	deepEqual( Stem("nähten"), "naht" );
	deepEqual( Stem("nahum"), "nahum" );
	deepEqual( Stem("nai"), "nai" );
	deepEqual( Stem("naiv"), "naiv" );
	deepEqual( Stem("näm"), "nam" );
	deepEqual( Stem("name"), "nam" );
	deepEqual( Stem("namen"), "nam" );
	deepEqual( Stem("namenlose"), "namenlos" );
	deepEqual( Stem("namenlosen"), "namenlos" );
	deepEqual( Stem("namens"), "nam" );
	deepEqual( Stem("namenstag"), "namenstag" );
	deepEqual( Stem("namenstage"), "namenstag" );
	deepEqual( Stem("namentlich"), "nament" );
	deepEqual( Stem("namevor"), "namevor" );
	deepEqual( Stem("namhafte"), "namhaft" );
	deepEqual( Stem("nämlich"), "namlich" );
	deepEqual( Stem("nämliche"), "namlich" );
	deepEqual( Stem("nämlichen"), "namlich" );
	deepEqual( Stem("nannte"), "nannt" );
	deepEqual( Stem("nannten"), "nannt" );
	deepEqual( Stem("nanu"), "nanu" );
	deepEqual( Stem("näpheg"), "napheg" );
	deepEqual( Stem("naphthali"), "naphthali" );
	deepEqual( Stem("napoleon"), "napoleon" );
	deepEqual( Stem("napoleonischen"), "napoleon" );
	deepEqual( Stem("napoleons"), "napoleon" );
	deepEqual( Stem("napoleonsbild"), "napoleonsbild" );
	deepEqual( Stem("narben"), "narb" );
	deepEqual( Stem("narbenbein"), "narbenbein" );
	deepEqual( Stem("narr"), "narr" );
	deepEqual( Stem("närrchen"), "narrch" );
	deepEqual( Stem("narren"), "narr" );
	deepEqual( Stem("narrenspossen"), "narrensposs" );
	deepEqual( Stem("narret"), "narret" );
	deepEqual( Stem("narretei"), "narretei" );
	deepEqual( Stem("narrheit"), "narrheit" );
	deepEqual( Stem("närrin"), "narrin" );
	deepEqual( Stem("närrische"), "narrisch" );
	deepEqual( Stem("närrischem"), "narrisch" );
	deepEqual( Stem("närrischen"), "narrisch" );
	deepEqual( Stem("närrischer"), "narrisch" );
	deepEqual( Stem("naschen"), "nasch" );
	deepEqual( Stem("näschen"), "nasch" );
	deepEqual( Stem("nascherei"), "nascherei" );
	deepEqual( Stem("naschhaftigkeit"), "naschhaft" );
	deepEqual( Stem("nase"), "nas" );
	deepEqual( Stem("nasegrün"), "nasegrun" );
	deepEqual( Stem("nasen"), "nas" );
	deepEqual( Stem("nasenringe"), "nasenring" );
	deepEqual( Stem("nasenspitze"), "nasenspitz" );
	deepEqual( Stem("nasenstüber"), "nasenstub" );
	deepEqual( Stem("nasenwurzel"), "nasenwurzel" );
	deepEqual( Stem("nashorn"), "nashorn" );
	deepEqual( Stem("nass"), "nass" );
	deepEqual( Stem("naß"), "nass" );
	deepEqual( Stem("nassauer"), "nassau" );
	deepEqual( Stem("nasse"), "nass" );
	deepEqual( Stem("nässe"), "nass" );
	deepEqual( Stem("nassen"), "nass" );
	deepEqual( Stem("nati"), "nati" );
	deepEqual( Stem("nation"), "nation" );
	deepEqual( Stem("nationalbank"), "nationalbank" );
	deepEqual( Stem("nationaldenkmal"), "nationaldenkmal" );
	deepEqual( Stem("nationale"), "national" );
	deepEqual( Stem("nationalen"), "national" );
	deepEqual( Stem("nationalhelden"), "nationalheld" );
	deepEqual( Stem("nationalrat"), "nationalrat" );
	deepEqual( Stem("nationalräte"), "nationalrat" );
	deepEqual( Stem("nationalrätliche"), "nationalrat" );
	deepEqual( Stem("nationen"), "nation" );
	deepEqual( Stem("natur"), "natur" );
	deepEqual( Stem("natura"), "natura" );
	deepEqual( Stem("naturae"), "natura" );
	deepEqual( Stem("naturanstalt"), "naturanstalt" );
	deepEqual( Stem("naturbedürfnis"), "naturbedurfnis" );
	deepEqual( Stem("naturbegriffe"), "naturbegriff" );
	deepEqual( Stem("naturbetrachtung"), "naturbetracht" );
	deepEqual( Stem("natureinfalt"), "natureinfalt" );
	deepEqual( Stem("natureinrichtungen"), "natureinricht" );
	deepEqual( Stem("naturen"), "natur" );
	deepEqual( Stem("naturerkenntnis"), "naturerkenntnis" );
	deepEqual( Stem("naturerscheinungen"), "naturerschein" );
	deepEqual( Stem("naturfreund"), "naturfreund" );
	deepEqual( Stem("naturgabe"), "naturgab" );
	deepEqual( Stem("naturgange"), "naturgang" );
	deepEqual( Stem("naturganzes"), "naturganz" );
	deepEqual( Stem("naturgegenstände"), "naturgegenstand" );
	deepEqual( Stem("naturgeheimnisse"), "naturgeheimnis" );
	deepEqual( Stem("naturgeister"), "naturgeist" );
	deepEqual( Stem("naturgeistern"), "naturgeist" );
	deepEqual( Stem("naturgesetz"), "naturgesetz" );
	deepEqual( Stem("naturgesetze"), "naturgesetz" );
	deepEqual( Stem("naturgesetzen"), "naturgesetz" );
	deepEqual( Stem("naturgesetzes"), "naturgesetz" );
	deepEqual( Stem("naturgewalten"), "naturgewalt" );
	deepEqual( Stem("naturkenntnis"), "naturkenntnis" );
	deepEqual( Stem("naturkette"), "naturkett" );
	deepEqual( Stem("naturkräfte"), "naturkraft" );
	deepEqual( Stem("naturlaufe"), "naturlauf" );
	deepEqual( Stem("natürlich"), "natur" );
	deepEqual( Stem("natürliche"), "natur" );
	deepEqual( Stem("natürlichem"), "natur" );
	deepEqual( Stem("natürlichen"), "natur" );
	deepEqual( Stem("natürlicher"), "natur" );
	deepEqual( Stem("natürliches"), "natur" );
	deepEqual( Stem("natürlichkeit"), "natur" );
	deepEqual( Stem("natürlichste"), "natur" );
	deepEqual( Stem("natürlieh"), "naturlieh" );
	deepEqual( Stem("naturmechanismus"), "naturmechanismus" );
	deepEqual( Stem("naturnotwendigkeit"), "naturnotwend" );
	deepEqual( Stem("naturordnung"), "naturordn" );
	deepEqual( Stem("naturspiel"), "naturspiel" );
	deepEqual( Stem("naturursachen"), "naturursach" );
	deepEqual( Stem("naturvergötterung"), "naturvergotter" );
	deepEqual( Stem("naturverknüpfung"), "naturverknupf" );
	deepEqual( Stem("naturvermögen"), "naturvermog" );
	deepEqual( Stem("naturvollkommenheit"), "naturvollkomm" );
	deepEqual( Stem("naturwege"), "naturweg" );
	deepEqual( Stem("naturwissenschaft"), "naturwissenschaft" );
	deepEqual( Stem("naturwissenschafter"), "naturwissenschaft" );
	deepEqual( Stem("naturwüchsige"), "naturwuchs" );
	deepEqual( Stem("naus"), "naus" );
	deepEqual( Stem("nauszahlen"), "nauszahl" );
	deepEqual( Stem("nazi"), "nazi" );
	deepEqual( Stem("nazigold"), "nazigold" );
	deepEqual( Stem("nazimi"), "nazimi" );
	deepEqual( Stem("nazis"), "nazis" );
	deepEqual( Stem("ne"), "ne" );
	deepEqual( Stem("neapel"), "neapel" );
	deepEqual( Stem("neb"), "neb" );
	deepEqual( Stem("nebajoths"), "nebajoth" );
	deepEqual( Stem("nebel"), "nebel" );
	deepEqual( Stem("nebelfahnen"), "nebelfahn" );
	deepEqual( Stem("nebelfetzen"), "nebelfetz" );
	deepEqual( Stem("nebelfrauen"), "nebelfrau" );
	deepEqual( Stem("nebelhafte"), "nebelhaft" );
	deepEqual( Stem("nebelkrähe"), "nebelkrah" );
	deepEqual( Stem("nebelluft"), "nebelluft" );
	deepEqual( Stem("nebelmassen"), "nebelmass" );
	deepEqual( Stem("nebeln"), "nebeln" );
	deepEqual( Stem("nebelspalter"), "nebelspalt" );
	deepEqual( Stem("nebelstreif"), "nebelstreif" );
	deepEqual( Stem("nebelweg"), "nebelweg" );
	deepEqual( Stem("nebelwind"), "nebelwind" );
	deepEqual( Stem("nebelzug"), "nebelzug" );
	deepEqual( Stem("neben"), "neb" );
	deepEqual( Stem("nebenämter"), "nebenamt" );
	deepEqual( Stem("nebenan"), "nebenan" );
	deepEqual( Stem("nebenbei"), "nebenbei" );
	deepEqual( Stem("nebenbestimmungen"), "nebenbestimm" );
	deepEqual( Stem("nebenbuhler"), "nebenbuhl" );
	deepEqual( Stem("nebenbuhlern"), "nebenbuhl" );
	deepEqual( Stem("nebeneinander"), "nebeneinand" );
	deepEqual( Stem("nebeneinanderliegende"), "nebeneinanderlieg" );
	deepEqual( Stem("nebengebäuden"), "nebengebaud" );
	deepEqual( Stem("nebengesellen"), "nebengesell" );
	deepEqual( Stem("nebenherlaufen"), "nebenherlauf" );
	deepEqual( Stem("nebenmenschen"), "nebenmensch" );
	deepEqual( Stem("nebensache"), "nebensach" );
	deepEqual( Stem("nebenstube"), "nebenstub" );
	deepEqual( Stem("nebenzimmer"), "nebenzimm" );
	deepEqual( Stem("nebenzimmers"), "nebenzimm" );
	deepEqual( Stem("nebst"), "nebst" );
	deepEqual( Stem("nebukadnezar"), "nebukadnezar" );
	deepEqual( Stem("nebukadnezars"), "nebukadnezar" );
	deepEqual( Stem("necesse"), "necess" );
	deepEqual( Stem("neckt"), "neckt" );
	deepEqual( Stem("neckte"), "neckt" );
	deepEqual( Stem("nefas"), "nefas" );
	deepEqual( Stem("neffe"), "neff" );
	deepEqual( Stem("neffen"), "neff" );
	deepEqual( Stem("negativ"), "negativ" );
	deepEqual( Stem("negative"), "negativ" );
	deepEqual( Stem("negativen"), "negativ" );
	deepEqual( Stem("negatives"), "negativ" );
	deepEqual( Stem("nehme"), "nehm" );
	deepEqual( Stem("nehmen"), "nehm" );
	deepEqual( Stem("nehmend"), "nehmend" );
	deepEqual( Stem("nehmenden"), "nehmend" );
	deepEqual( Stem("nehmet"), "nehmet" );
	deepEqual( Stem("nehmt"), "nehmt" );
	deepEqual( Stem("neid"), "neid" );
	deepEqual( Stem("neides"), "neid" );
	deepEqual( Stem("neideswut"), "neideswut" );
	deepEqual( Stem("neidisch"), "neidisch" );
	deepEqual( Stem("neigen"), "neig" );
	deepEqual( Stem("neigend"), "neigend" );
	deepEqual( Stem("neiget"), "neiget" );
	deepEqual( Stem("neigt"), "neigt" );
	deepEqual( Stem("neigte"), "neigt" );
	deepEqual( Stem("neigten"), "neigt" );
	deepEqual( Stem("neigung"), "neigung" );
	deepEqual( Stem("neigungen"), "neigung" );
	deepEqual( Stem("nein"), "nein" );
	deepEqual( Stem("nelke"), "nelk" );
	deepEqual( Stem("nem"), "nem" );
	deepEqual( Stem("nen"), "nen" );
	deepEqual( Stem("nenne"), "nenn" );
	deepEqual( Stem("nennen"), "nenn" );
	deepEqual( Stem("nennest"), "nenn" );
	deepEqual( Stem("nennete"), "nennet" );
	deepEqual( Stem("nennst"), "nenn" );
	deepEqual( Stem("nennt"), "nennt" );
	deepEqual( Stem("nephaim"), "nephaim" );
	deepEqual( Stem("nephalim"), "nephalim" );
	deepEqual( Stem("nephilim"), "nephilim" );
	deepEqual( Stem("ner"), "ner" );
	deepEqual( Stem("nervenden"), "nervend" );
	deepEqual( Stem("nervenfieber"), "nervenfieb" );
	deepEqual( Stem("nervös"), "nervos" );
	deepEqual( Stem("nervöse"), "nervos" );
	deepEqual( Stem("nervösem"), "nervos" );
	deepEqual( Stem("nervöser"), "nervos" );
	deepEqual( Stem("nessel"), "nessel" );
	deepEqual( Stem("nesseln"), "nesseln" );
	deepEqual( Stem("nest"), "nest" );
	deepEqual( Stem("neste"), "nest" );
	deepEqual( Stem("nesterchen"), "nesterch" );
	deepEqual( Stem("nestes"), "nest" );
	deepEqual( Stem("net"), "net" );
	deepEqual( Stem("netscape"), "netscap" );
	deepEqual( Stem("nett"), "nett" );
	deepEqual( Stem("nettchen"), "nettch" );
	deepEqual( Stem("nettchens"), "nettch" );
	deepEqual( Stem("nette"), "nett" );
	deepEqual( Stem("netten"), "nett" );
	deepEqual( Stem("netter"), "nett" );
	deepEqual( Stem("nettes"), "nett" );
	deepEqual( Stem("netz"), "netz" );
	deepEqual( Stem("netze"), "netz" );
	deepEqual( Stem("netzwerk"), "netzwerk" );
	deepEqual( Stem("neu"), "neu" );
	deepEqual( Stem("neuangekommene"), "neuangekomm" );
	deepEqual( Stem("neuaufbau"), "neuaufbau" );
	deepEqual( Stem("neubauten"), "neubaut" );
	deepEqual( Stem("neubebaute"), "neubebaut" );
	deepEqual( Stem("neubelebung"), "neubeleb" );
	deepEqual( Stem("neubesetzung"), "neubesetz" );
	deepEqual( Stem("neue"), "neu" );
	deepEqual( Stem("neuem"), "neu" );
	deepEqual( Stem("neuen"), "neu" );
	deepEqual( Stem("neuer"), "neu" );
	deepEqual( Stem("neuerdings"), "neuerding" );
	deepEqual( Stem("neueren"), "neu" );
	deepEqual( Stem("neuerliche"), "neu" );
	deepEqual( Stem("neuern"), "neu" );
	deepEqual( Stem("neues"), "neu" );
	deepEqual( Stem("neuesdas"), "neuesdas" );
	deepEqual( Stem("neueste"), "neu" );
	deepEqual( Stem("neuesten"), "neu" );
	deepEqual( Stem("neugeborene"), "neugebor" );
	deepEqual( Stem("neugeborenen"), "neugebor" );
	deepEqual( Stem("neugegründeten"), "neugegrundet" );
	deepEqual( Stem("neugeschaffen"), "neugeschaff" );
	deepEqual( Stem("neugesprochenen"), "neugesproch" );
	deepEqual( Stem("neugestählter"), "neugestahlt" );
	deepEqual( Stem("neugier"), "neugi" );
	deepEqual( Stem("neugierde"), "neugierd" );
	deepEqual( Stem("neugierig"), "neugier" );
	deepEqual( Stem("neugierigen"), "neugier" );
	deepEqual( Stem("neugieriger"), "neugier" );
	deepEqual( Stem("neugotischem"), "neugot" );
	deepEqual( Stem("neuigkeit"), "neuig" );
	deepEqual( Stem("neulich"), "neulich" );
	deepEqual( Stem("neumonde"), "neumond" );
	deepEqual( Stem("neun"), "neun" );
	deepEqual( Stem("neunhundert"), "neunhundert" );
	deepEqual( Stem("neunte"), "neunt" );
	deepEqual( Stem("neunten"), "neunt" );
	deepEqual( Stem("neuntes"), "neunt" );
	deepEqual( Stem("neunundneunzig"), "neunundneunz" );
	deepEqual( Stem("neunundsechzig"), "neunundsechz" );
	deepEqual( Stem("neunundsiebzig"), "neunundsiebz" );
	deepEqual( Stem("neunundvierzigsten"), "neunundvierz" );
	deepEqual( Stem("neunzehn"), "neunzehn" );
	deepEqual( Stem("neunzig"), "neunzig" );
	deepEqual( Stem("neutestamentler"), "neutestamentl" );
	deepEqual( Stem("neutrale"), "neutral" );
	deepEqual( Stem("neuübersetzung"), "neuubersetz" );
	deepEqual( Stem("neuwahlen"), "neuwahl" );
	deepEqual( Stem("neuyork"), "neuyork" );
	deepEqual( Stem("new"), "new" );
	deepEqual( Stem("newroz"), "newroz" );
	deepEqual( Stem("nich"), "nich" );
	deepEqual( Stem("nichs"), "nich" );
	deepEqual( Stem("nicht"), "nicht" );
	deepEqual( Stem("nichtachtung"), "nichtacht" );
	deepEqual( Stem("nichtadligen"), "nichtadl" );
	deepEqual( Stem("nichtanfechtung"), "nichtanfecht" );
	deepEqual( Stem("nichtannahme"), "nichtannahm" );
	deepEqual( Stem("nichtanwendung"), "nichtanwend" );
	deepEqual( Stem("nichtaussprechen"), "nichtaussprech" );
	deepEqual( Stem("nichtbefreiung"), "nichtbefrei" );
	deepEqual( Stem("nichten"), "nicht" );
	deepEqual( Stem("nichtglauben"), "nichtglaub" );
	deepEqual( Stem("nichtglaubens"), "nichtglaub" );
	deepEqual( Stem("nichtgute"), "nichtgut" );
	deepEqual( Stem("nichtig"), "nichtig" );
	deepEqual( Stem("nichtige"), "nichtig" );
	deepEqual( Stem("nichtigen"), "nichtig" );
	deepEqual( Stem("nichtigkeiten"), "nichtig" );
	deepEqual( Stem("nichtinnewerden"), "nichtinnewerd" );
	deepEqual( Stem("nichtmaterielle"), "nichtmateriell" );
	deepEqual( Stem("nichtmediziner"), "nichtmedizin" );
	deepEqual( Stem("nichtmerken"), "nichtmerk" );
	deepEqual( Stem("nichtökonomische"), "nichtokonom" );
	deepEqual( Stem("nichtregistrierung"), "nichtregistrier" );
	deepEqual( Stem("nichts"), "nicht" );
	deepEqual( Stem("nichtsdestominder"), "nichtsdestomind" );
	deepEqual( Stem("nichtsdestoweniger"), "nichtsdestowen" );
	deepEqual( Stem("nichtsehender"), "nichtseh" );
	deepEqual( Stem("nichtsein"), "nichtsein" );
	deepEqual( Stem("nichtsnutzigen"), "nichtsnutz" );
	deepEqual( Stem("nichtsnutzigsten"), "nichtsnutz" );
	deepEqual( Stem("nichtssagend"), "nichtssag" );
	deepEqual( Stem("nichtssagende"), "nichtssag" );
	deepEqual( Stem("nichtssagenden"), "nichtssag" );
	deepEqual( Stem("nichtstun"), "nichtstun" );
	deepEqual( Stem("nichtswürdige"), "nichtswurd" );
	deepEqual( Stem("nichtswürdigkeit"), "nichtswurd" );
	deepEqual( Stem("nichttaten"), "nichttat" );
	deepEqual( Stem("nichtwähler"), "nichtwahl" );
	deepEqual( Stem("nichtwahren"), "nichtwahr" );
	deepEqual( Stem("nichtwahrheiten"), "nichtwahr" );
	deepEqual( Stem("nichtwahrnehmen"), "nichtwahrnehm" );
	deepEqual( Stem("nicken"), "nick" );
	deepEqual( Stem("nickend"), "nickend" );
	deepEqual( Stem("nickt"), "nickt" );
	deepEqual( Stem("nickte"), "nickt" );
	deepEqual( Stem("nickten"), "nickt" );
	deepEqual( Stem("nidit"), "nidit" );
	deepEqual( Stem("nie"), "nie" );
	deepEqual( Stem("nieder"), "nied" );
	deepEqual( Stem("niederbeugen"), "niederbeug" );
	deepEqual( Stem("niederbeugend"), "niederbeug" );
	deepEqual( Stem("niederblickend"), "niederblick" );
	deepEqual( Stem("niederdrücken"), "niederdruck" );
	deepEqual( Stem("niederdrückt"), "niederdruckt" );
	deepEqual( Stem("niedere"), "nied" );
	deepEqual( Stem("niederen"), "nied" );
	deepEqual( Stem("niederfiel"), "niederfiel" );
	deepEqual( Stem("niederfielen"), "niederfiel" );
	deepEqual( Stem("niederfloss"), "niederfloss" );
	deepEqual( Stem("niederfloß"), "niederfloss" );
	deepEqual( Stem("niedergang"), "niedergang" );
	deepEqual( Stem("niedergänge"), "niedergang" );
	deepEqual( Stem("niedergebeugt"), "niedergebeugt" );
	deepEqual( Stem("niedergebrannt"), "niedergebrannt" );
	deepEqual( Stem("niedergefahren"), "niedergefahr" );
	deepEqual( Stem("niedergefallen"), "niedergefall" );
	deepEqual( Stem("niedergehend"), "niedergeh" );
	deepEqual( Stem("niedergelassen"), "niedergelass" );
	deepEqual( Stem("niedergelegt"), "niedergelegt" );
	deepEqual( Stem("niedergeschlagen"), "niedergeschlag" );
	deepEqual( Stem("niedergeschlagenen"), "niedergeschlag" );
	deepEqual( Stem("niedergestiegen"), "niedergestieg" );
	deepEqual( Stem("niedergeworfen"), "niedergeworf" );
	deepEqual( Stem("niederging"), "niederging" );
	deepEqual( Stem("niedergleiten"), "niedergleit" );
	deepEqual( Stem("niedergschlagen"), "niedergschlag" );
	deepEqual( Stem("niederhängt"), "niederhangt" );
	deepEqual( Stem("niederklatschen"), "niederklatsch" );
	deepEqual( Stem("niederknien"), "niederkni" );
	deepEqual( Stem("niederkniend"), "niederkni" );
	deepEqual( Stem("niederknieten"), "niederkniet" );
	deepEqual( Stem("niederkommen"), "niederkomm" );
	deepEqual( Stem("niederlächelnd"), "niederlachelnd" );
	deepEqual( Stem("niederlage"), "niederlag" );
	deepEqual( Stem("niederlagen"), "niederlag" );
	deepEqual( Stem("niederlassen"), "niederlass" );
	deepEqual( Stem("niederliess"), "niederliess" );
	deepEqual( Stem("niederließ"), "niederliess" );
	deepEqual( Stem("niederregneten"), "niederregnet" );
	deepEqual( Stem("niederschlagen"), "niederschlag" );
	deepEqual( Stem("niederschlägt"), "niederschlagt" );
	deepEqual( Stem("niederschlug"), "niederschlug" );
	deepEqual( Stem("niederschmetternder"), "niederschmetternd" );
	deepEqual( Stem("niederschoss"), "niederschoss" );
	deepEqual( Stem("niedersetzte"), "niedersetzt" );
	deepEqual( Stem("niederstäubte"), "niederstaubt" );
	deepEqual( Stem("niederste"), "niederst" );
	deepEqual( Stem("niedersten"), "niederst" );
	deepEqual( Stem("niederstes"), "niederst" );
	deepEqual( Stem("niederstrich"), "niederstrich" );
	deepEqual( Stem("niederträchtige"), "niedertracht" );
	deepEqual( Stem("niederträchtigen"), "niedertracht" );
	deepEqual( Stem("niedertritt"), "niedertritt" );
	deepEqual( Stem("niedertropften"), "niedertropft" );
	deepEqual( Stem("niederwärts"), "niederwart" );
	deepEqual( Stem("niederwerfen"), "niederwerf" );
	deepEqual( Stem("niederzubeugen"), "niederzubeug" );
	deepEqual( Stem("niederzulassen"), "niederzulass" );
	deepEqual( Stem("niedlich"), "niedlich" );
	deepEqual( Stem("niedliche"), "niedlich" );
	deepEqual( Stem("niedlichen"), "niedlich" );
	deepEqual( Stem("niedlicher"), "niedlich" );
	deepEqual( Stem("niedrig"), "niedrig" );
	deepEqual( Stem("niedrige"), "niedrig" );
	deepEqual( Stem("niedrigen"), "niedrig" );
	deepEqual( Stem("niedriger"), "niedrig" );
	deepEqual( Stem("niedrigere"), "niedrig" );
	deepEqual( Stem("niedrigeren"), "niedrig" );
	deepEqual( Stem("niedrigerer"), "niedrig" );
	deepEqual( Stem("niedrigkeit"), "niedrig" );
	deepEqual( Stem("niedrigre"), "niedrigr" );
	deepEqual( Stem("niedrigste"), "niedrig" );
	deepEqual( Stem("niedrigsten"), "niedrig" );
	deepEqual( Stem("niemals"), "niemal" );
	deepEqual( Stem("niemand"), "niemand" );
	deepEqual( Stem("niemandem"), "niemand" );
	deepEqual( Stem("niemanden"), "niemand" );
	deepEqual( Stem("niemands"), "niemand" );
	deepEqual( Stem("niemandsland"), "niemandsland" );
	deepEqual( Stem("nieren"), "nier" );
	deepEqual( Stem("nierenfett"), "nierenfett" );
	deepEqual( Stem("niesen"), "nies" );
	deepEqual( Stem("nieste"), "niest" );
	deepEqual( Stem("nietzsche"), "nietzsch" );
	deepEqual( Stem("nievergelt"), "nievergelt" );
	deepEqual( Stem("nigen"), "nig" );
	deepEqual( Stem("niggli"), "niggli" );
	deepEqual( Stem("nihil"), "nihil" );
	deepEqual( Stem("nikodemus"), "nikodemus" );
	deepEqual( Stem("nikolaus"), "nikolaus" );
	deepEqual( Stem("nikosia"), "nikosia" );
	deepEqual( Stem("nils"), "nil" );
	deepEqual( Stem("nimm"), "nimm" );
	deepEqual( Stem("nimmer"), "nimm" );
	deepEqual( Stem("nimmermehr"), "nimmermehr" );
	deepEqual( Stem("nimmst"), "nimm" );
	deepEqual( Stem("nimmt"), "nimmt" );
	deepEqual( Stem("nimrien"), "nimri" );
	deepEqual( Stem("nimriens"), "nimri" );
	deepEqual( Stem("ninive"), "niniv" );
	deepEqual( Stem("ninives"), "niniv" );
	deepEqual( Stem("nippte"), "nippt" );
	deepEqual( Stem("nirgend"), "nirgend" );
	deepEqual( Stem("nirgends"), "nirgend" );
	deepEqual( Stem("nirgendwo"), "nirgendwo" );
	deepEqual( Stem("nische"), "nisch" );
	deepEqual( Stem("nisi"), "nisi" );
	deepEqual( Stem("nisten"), "nist" );
	deepEqual( Stem("nisteten"), "nistet" );
	deepEqual( Stem("nit"), "nit" );
	deepEqual( Stem("nitrit"), "nitrit" );
	deepEqual( Stem("nitritkapsel"), "nitritkapsel" );
	deepEqual( Stem("nitroglyzerin"), "nitroglyzerin" );
	deepEqual( Stem("nivellierung"), "nivellier" );
	deepEqual( Stem("nix"), "nix" );
	deepEqual( Stem("no"), "no" );
	deepEqual( Stem("noaaaaaa"), "noaaaaaa" );
	deepEqual( Stem("noach"), "noach" );
	deepEqual( Stem("noachs"), "noach" );
	deepEqual( Stem("nobel"), "nobel" );
	deepEqual( Stem("noblen"), "nobl" );
	deepEqual( Stem("nobler"), "nobl" );
	deepEqual( Stem("noch"), "noch" );
	deepEqual( Stem("nochmal"), "nochmal" );
	deepEqual( Stem("nochmals"), "nochmal" );
	deepEqual( Stem("nod"), "nod" );
	deepEqual( Stem("nominationskommission"), "nominationskommission" );
	deepEqual( Stem("nominative"), "nominativ" );
	deepEqual( Stem("nominativen"), "nominativ" );
	deepEqual( Stem("nommen"), "nomm" );
	deepEqual( Stem("non"), "non" );
	deepEqual( Stem("nonnenartiger"), "nonnenart" );
	deepEqual( Stem("nord"), "nord" );
	deepEqual( Stem("nordamerikanischen"), "nordamerikan" );
	deepEqual( Stem("norddeutschland"), "norddeutschland" );
	deepEqual( Stem("norden"), "nord" );
	deepEqual( Stem("nordengland"), "nordengland" );
	deepEqual( Stem("nordischen"), "nordisch" );
	deepEqual( Stem("nordlondon"), "nordlondon" );
	deepEqual( Stem("nordpol"), "nordpol" );
	deepEqual( Stem("nordwärts"), "nordwart" );
	deepEqual( Stem("nordwestschweiz"), "nordwestschweiz" );
	deepEqual( Stem("nordzypern"), "nordzyp" );
	deepEqual( Stem("normal"), "normal" );
	deepEqual( Stem("normale"), "normal" );
	deepEqual( Stem("normalen"), "normal" );
	deepEqual( Stem("normalerweise"), "normalerweis" );
	deepEqual( Stem("norwegische"), "norweg" );
	deepEqual( Stem("norwegischen"), "norweg" );
	deepEqual( Stem("nostalgie"), "nostalgi" );
	deepEqual( Stem("not"), "not" );
	deepEqual( Stem("notar"), "notar" );
	deepEqual( Stem("notaufnahme"), "notaufnahm" );
	deepEqual( Stem("notburga"), "notburga" );
	deepEqual( Stem("notdürftig"), "notdurft" );
	deepEqual( Stem("notdürftigsten"), "notdurft" );
	deepEqual( Stem("note"), "not" );
	deepEqual( Stem("nöten"), "not" );
	deepEqual( Stem("notenbank"), "notenbank" );
	deepEqual( Stem("notenblätter"), "notenblatt" );
	deepEqual( Stem("notenlinien"), "notenlini" );
	deepEqual( Stem("notfall"), "notfall" );
	deepEqual( Stem("notfällen"), "notfall" );
	deepEqual( Stem("notfalls"), "notfall" );
	deepEqual( Stem("notgezwungenen"), "notgezw" );
	deepEqual( Stem("notieren"), "noti" );
	deepEqual( Stem("notiert"), "notiert" );
	deepEqual( Stem("notierte"), "notiert" );
	deepEqual( Stem("nötig"), "notig" );
	deepEqual( Stem("nötige"), "notig" );
	deepEqual( Stem("nötigen"), "notig" );
	deepEqual( Stem("nötiger"), "notig" );
	deepEqual( Stem("nötigte"), "notigt" );
	deepEqual( Stem("nötigung"), "notig" );
	deepEqual( Stem("notizbuch"), "notizbuch" );
	deepEqual( Stem("notizbücher"), "notizbuch" );
	deepEqual( Stem("notizen"), "notiz" );
	deepEqual( Stem("notlüge"), "notlug" );
	deepEqual( Stem("notpfennige"), "notpfenn" );
	deepEqual( Stem("notrfälle"), "notrfall" );
	deepEqual( Stem("notstand"), "notstand" );
	deepEqual( Stem("notwehr"), "notwehr" );
	deepEqual( Stem("notwendig"), "notwend" );
	deepEqual( Stem("notwendige"), "notwend" );
	deepEqual( Stem("notwendigen"), "notwend" );
	deepEqual( Stem("notwendiger"), "notwend" );
	deepEqual( Stem("notwendigere"), "notwend" );
	deepEqual( Stem("notwendigerweise"), "notwendigerweis" );
	deepEqual( Stem("notwendiges"), "notwend" );
	deepEqual( Stem("notwendigkeit"), "notwend" );
	deepEqual( Stem("notwendigkeiten"), "notwend" );
	deepEqual( Stem("notwendigste"), "notwend" );
	deepEqual( Stem("noumen"), "noum" );
	deepEqual( Stem("noumenen"), "noum" );
	deepEqual( Stem("noumenon"), "noumenon" );
	deepEqual( Stem("novellen"), "novell" );
	deepEqual( Stem("november"), "novemb" );
	deepEqual( Stem("novembertage"), "novembertag" );
	deepEqual( Stem("novum"), "novum" );
	deepEqual( Stem("nr"), "nr" );
	deepEqual( Stem("nu"), "nu" );
	deepEqual( Stem("nuance"), "nuanc" );
	deepEqual( Stem("nüber"), "nub" );
	deepEqual( Stem("nüchtern"), "nucht" );
	deepEqual( Stem("nüchternen"), "nuchtern" );
	deepEqual( Stem("nüchternes"), "nuchtern" );
	deepEqual( Stem("nücken"), "nuck" );
	deepEqual( Stem("null"), "null" );
	deepEqual( Stem("nummer"), "numm" );
	deepEqual( Stem("nun"), "nun" );
	deepEqual( Stem("nunmehr"), "nunmehr" );
	deepEqual( Stem("nur"), "nur" );
	deepEqual( Stem("nürnberg"), "nurnberg" );
	deepEqual( Stem("nuss"), "nuss" );
	deepEqual( Stem("nussbaumholz"), "nussbaumholz" );
	deepEqual( Stem("nussbaumlade"), "nussbaumlad" );
	deepEqual( Stem("nussbaumschrank"), "nussbaumschrank" );
	deepEqual( Stem("nüsschen"), "nussch" );
	deepEqual( Stem("nüsse"), "nuss" );
	deepEqual( Stem("nüssen"), "nuss" );
	deepEqual( Stem("nutz"), "nutz" );
	deepEqual( Stem("nutzbare"), "nutzbar" );
	deepEqual( Stem("nutzbringende"), "nutzbring" );
	deepEqual( Stem("nütze"), "nutz" );
	deepEqual( Stem("nutzen"), "nutz" );
	deepEqual( Stem("nützen"), "nutz" );
	deepEqual( Stem("nutzens"), "nutz" );
	deepEqual( Stem("nutzenschaffen"), "nutzenschaff" );
	deepEqual( Stem("nutzenschaffens"), "nutzenschaff" );
	deepEqual( Stem("nutzleistungen"), "nutzleist" );
	deepEqual( Stem("nützlich"), "nutzlich" );
	deepEqual( Stem("nützliche"), "nutzlich" );
	deepEqual( Stem("nützlichen"), "nutzlich" );
	deepEqual( Stem("nützlicher"), "nutzlich" );
	deepEqual( Stem("nützlichere"), "nutzlich" );
	deepEqual( Stem("nützlicheres"), "nutzlich" );
	deepEqual( Stem("nützlichkeit"), "nutzlich" );
	deepEqual( Stem("nützlichste"), "nutzlich" );
	deepEqual( Stem("nutzlos"), "nutzlos" );
	deepEqual( Stem("nutzlose"), "nutzlos" );
	deepEqual( Stem("nutzloses"), "nutzlos" );
	deepEqual( Stem("nutzniessung"), "nutzniess" );
	deepEqual( Stem("nutzt"), "nutzt" );
	deepEqual( Stem("nützt"), "nutzt" );
	deepEqual( Stem("nutzwirkungen"), "nutzwirk" );
	deepEqual( Stem("nutzzwecke"), "nutzzweck" );
	deepEqual( Stem("nutzzwecken"), "nutzzweck" );
	deepEqual( Stem("nutzzwecks"), "nutzzweck" );
	deepEqual( Stem("nzz"), "nzz" );
	deepEqual( Stem("o"), "o" );
	deepEqual( Stem("oam"), "oam" );
	deepEqual( Stem("oan"), "oan" );
	deepEqual( Stem("ob"), "ob" );
	deepEqual( Stem("obacht"), "obacht" );
	deepEqual( Stem("obdach"), "obdach" );
	deepEqual( Stem("oben"), "oben" );
	deepEqual( Stem("obenauf"), "obenauf" );
	deepEqual( Stem("obendrein"), "obendrein" );
	deepEqual( Stem("obenein"), "obenein" );
	deepEqual( Stem("obenhin"), "obenhin" );
	deepEqual( Stem("obenhinaus"), "obenhinaus" );
	deepEqual( Stem("ober"), "ober" );
	deepEqual( Stem("oberbayrischer"), "oberbayr" );
	deepEqual( Stem("oberbehörde"), "oberbehord" );
	deepEqual( Stem("oberduffendorf"), "oberduffendorf" );
	deepEqual( Stem("obere"), "ober" );
	deepEqual( Stem("oberen"), "ober" );
	deepEqual( Stem("oberes"), "ober" );
	deepEqual( Stem("oberfläche"), "oberflach" );
	deepEqual( Stem("oberflächen"), "oberflach" );
	deepEqual( Stem("oberflächlich"), "oberflach" );
	deepEqual( Stem("oberflächlicher"), "oberflach" );
	deepEqual( Stem("oberflächlichkeit"), "oberflach" );
	deepEqual( Stem("oberförster"), "oberforst" );
	deepEqual( Stem("oberhalb"), "oberhalb" );
	deepEqual( Stem("oberhand"), "oberhand" );
	deepEqual( Stem("oberhaupt"), "oberhaupt" );
	deepEqual( Stem("oberherrschaft"), "oberherrschaft" );
	deepEqual( Stem("oberkirchenrat"), "oberkirchenrat" );
	deepEqual( Stem("oberlippe"), "oberlipp" );
	deepEqual( Stem("obern"), "obern" );
	deepEqual( Stem("oberpriester"), "oberpri" );
	deepEqual( Stem("obersatze"), "obersatz" );
	deepEqual( Stem("oberst"), "oberst" );
	deepEqual( Stem("oberste"), "oberst" );
	deepEqual( Stem("obersten"), "oberst" );
	deepEqual( Stem("oberstes"), "oberst" );
	deepEqual( Stem("oberstleutnants"), "oberstleutnant" );
	deepEqual( Stem("obgleich"), "obgleich" );
	deepEqual( Stem("obhut"), "obhut" );
	deepEqual( Stem("obige"), "obig" );
	deepEqual( Stem("obigem"), "obig" );
	deepEqual( Stem("obigen"), "obig" );
	deepEqual( Stem("obiger"), "obig" );
	deepEqual( Stem("objective"), "objectiv" );
	deepEqual( Stem("objekt"), "objekt" );
	deepEqual( Stem("objekte"), "objekt" );
	deepEqual( Stem("objekten"), "objekt" );
	deepEqual( Stem("objektiv"), "objektiv" );
	deepEqual( Stem("objektive"), "objektiv" );
	deepEqual( Stem("objektivem"), "objektiv" );
	deepEqual( Stem("objektiven"), "objektiv" );
	deepEqual( Stem("objektiver"), "objektiv" );
	deepEqual( Stem("objekts"), "objekt" );
	deepEqual( Stem("oblag"), "oblag" );
	deepEqual( Stem("obliegende"), "oblieg" );
	deepEqual( Stem("obliegenheit"), "oblieg" );
	deepEqual( Stem("obligationen"), "obligation" );
	deepEqual( Stem("obristen"), "obrist" );
	deepEqual( Stem("obschon"), "obschon" );
	deepEqual( Stem("observantione"), "observantion" );
	deepEqual( Stem("obsiegen"), "obsieg" );
	deepEqual( Stem("obst"), "obst" );
	deepEqual( Stem("obstbäumen"), "obstbaum" );
	deepEqual( Stem("obste"), "obst" );
	deepEqual( Stem("obsthändler"), "obsthandl" );
	deepEqual( Stem("obstinatio"), "obstinatio" );
	deepEqual( Stem("obwohl"), "obwohl" );
	deepEqual( Stem("obzwar"), "obzwar" );
	deepEqual( Stem("ocak"), "ocak" );
	deepEqual( Stem("ochak"), "ochak" );
	deepEqual( Stem("ochs"), "och" );
	deepEqual( Stem("ochse"), "ochs" );
	deepEqual( Stem("ochsen"), "ochs" );
	deepEqual( Stem("ochsenhorn"), "ochsenhorn" );
	deepEqual( Stem("ochsenkopfe"), "ochsenkopf" );
	deepEqual( Stem("odd"), "odd" );
	deepEqual( Stem("öde"), "ode" );
	deepEqual( Stem("odem"), "odem" );
	deepEqual( Stem("öden"), "oden" );
	deepEqual( Stem("oder"), "oder" );
	deepEqual( Stem("ödungen"), "odung" );
	deepEqual( Stem("of"), "of" );
	deepEqual( Stem("ofen"), "ofen" );
	deepEqual( Stem("öfen"), "ofen" );
	deepEqual( Stem("ofenruss"), "ofenruss" );
	deepEqual( Stem("ofenruß"), "ofenruss" );
	deepEqual( Stem("ofens"), "ofen" );
	deepEqual( Stem("off"), "off" );
	deepEqual( Stem("offen"), "off" );
	deepEqual( Stem("offenb"), "offenb" );
	deepEqual( Stem("offenbach"), "offenbach" );
	deepEqual( Stem("offenbar"), "offenbar" );
	deepEqual( Stem("offenbare"), "offenbar" );
	deepEqual( Stem("offenbaren"), "offenbar" );
	deepEqual( Stem("offenbarende"), "offenbar" );
	deepEqual( Stem("offenbarer"), "offenbar" );
	deepEqual( Stem("offenbarlich"), "offenbar" );
	deepEqual( Stem("offenbart"), "offenbart" );
	deepEqual( Stem("offenbarung"), "offenbar" );
	deepEqual( Stem("offenbarungen"), "offenbar" );
	deepEqual( Stem("offene"), "off" );
	deepEqual( Stem("offenekirche"), "offenekirch" );
	deepEqual( Stem("offenem"), "off" );
	deepEqual( Stem("offenen"), "off" );
	deepEqual( Stem("offener"), "off" );
	deepEqual( Stem("offenes"), "off" );
	deepEqual( Stem("offengebliebene"), "offengeblieb" );
	deepEqual( Stem("offenheit"), "off" );
	deepEqual( Stem("offenkundigen"), "offenkund" );
	deepEqual( Stem("offensichtlich"), "offensicht" );
	deepEqual( Stem("offensiv"), "offensiv" );
	deepEqual( Stem("offenstehe"), "offensteh" );
	deepEqual( Stem("offenstehend"), "offensteh" );
	deepEqual( Stem("offenstehende"), "offensteh" );
	deepEqual( Stem("offenstehenden"), "offensteh" );
	deepEqual( Stem("öffentlich"), "offent" );
	deepEqual( Stem("öffentliche"), "offent" );
	deepEqual( Stem("öffentlichen"), "offent" );
	deepEqual( Stem("öffentlicher"), "offent" );
	deepEqual( Stem("öffentliches"), "offent" );
	deepEqual( Stem("öffentlichkeit"), "offent" );
	deepEqual( Stem("offizielle"), "offiziell" );
	deepEqual( Stem("offiziellen"), "offiziell" );
	deepEqual( Stem("offizier"), "offizi" );
	deepEqual( Stem("offiziere"), "offizi" );
	deepEqual( Stem("offizieren"), "offizi" );
	deepEqual( Stem("offnen"), "offn" );
	deepEqual( Stem("öffnen"), "offn" );
	deepEqual( Stem("öffnet"), "offnet" );
	deepEqual( Stem("öffnete"), "offnet" );
	deepEqual( Stem("öffneten"), "offnet" );
	deepEqual( Stem("oft"), "oft" );
	deepEqual( Stem("öfter"), "oft" );
	deepEqual( Stem("öftere"), "oft" );
	deepEqual( Stem("öfteren"), "oft" );
	deepEqual( Stem("öftern"), "oft" );
	deepEqual( Stem("öfters"), "oft" );
	deepEqual( Stem("oftmals"), "oftmal" );
	deepEqual( Stem("oh"), "oh" );
	deepEqual( Stem("ohad"), "ohad" );
	deepEqual( Stem("ohn"), "ohn" );
	deepEqual( Stem("ohne"), "ohn" );
	deepEqual( Stem("ohnedem"), "ohned" );
	deepEqual( Stem("ohnedies"), "ohnedi" );
	deepEqual( Stem("ohnehin"), "ohnehin" );
	deepEqual( Stem("ohnmacht"), "ohnmacht" );
	deepEqual( Stem("ohnmächtig"), "ohnmacht" );
	deepEqual( Stem("oho"), "oho" );
	deepEqual( Stem("ohr"), "ohr" );
	deepEqual( Stem("ohre"), "ohr" );
	deepEqual( Stem("ohren"), "ohr" );
	deepEqual( Stem("ohrenbetäubener"), "ohrenbetaub" );
	deepEqual( Stem("ohres"), "ohr" );
	deepEqual( Stem("ohrfeige"), "ohrfeig" );
	deepEqual( Stem("ohrfeigen"), "ohrfeig" );
	deepEqual( Stem("ohrfeigte"), "ohrfeigt" );
	deepEqual( Stem("ohrlappen"), "ohrlapp" );
	deepEqual( Stem("oke"), "oke" );
	deepEqual( Stem("ökono"), "okono" );
	deepEqual( Stem("ökonomisch"), "okonom" );
	deepEqual( Stem("ökonomischen"), "okonom" );
	deepEqual( Stem("ökonomisches"), "okonom" );
	deepEqual( Stem("oktober"), "oktob" );
	deepEqual( Stem("ökumene"), "okum" );
	deepEqual( Stem("ökumenische"), "okumen" );
	deepEqual( Stem("ökumenischen"), "okumen" );
	deepEqual( Stem("öl"), "ol" );
	deepEqual( Stem("ölbaumes"), "olbaum" );
	deepEqual( Stem("oldenburg"), "oldenburg" );
	deepEqual( Stem("oldenburger"), "oldenburg" );
	deepEqual( Stem("oleander"), "oleand" );
	deepEqual( Stem("oleandergebüsch"), "oleandergebusch" );
	deepEqual( Stem("ölfarbe"), "olfarb" );
	deepEqual( Stem("olgemälde"), "olgemald" );
	deepEqual( Stem("ölig"), "olig" );
	deepEqual( Stem("öls"), "ols" );
	deepEqual( Stem("ombudsmann"), "ombudsmann" );
	deepEqual( Stem("omni"), "omni" );
	deepEqual( Stem("omnium"), "omnium" );
	deepEqual( Stem("on"), "on" );
	deepEqual( Stem("onan"), "onan" );
	deepEqual( Stem("onkel"), "onkel" );
	deepEqual( Stem("onkels"), "onkel" );
	deepEqual( Stem("ontologia"), "ontologia" );
	deepEqual( Stem("ontologischen"), "ontolog" );
	deepEqual( Stem("oooh"), "oooh" );
	deepEqual( Stem("oooooh"), "oooooh" );
	deepEqual( Stem("opera"), "opera" );
	deepEqual( Stem("operation"), "operation" );
	deepEqual( Stem("opes"), "opes" );
	deepEqual( Stem("opfer"), "opf" );
	deepEqual( Stem("opfere"), "opf" );
	deepEqual( Stem("opfergabe"), "opfergab" );
	deepEqual( Stem("opfergaben"), "opfergab" );
	deepEqual( Stem("opfern"), "opf" );
	deepEqual( Stem("opfers"), "opf" );
	deepEqual( Stem("opfert"), "opfert" );
	deepEqual( Stem("opferte"), "opfert" );
	deepEqual( Stem("ophir"), "ophir" );
	deepEqual( Stem("ophirs"), "ophir" );
	deepEqual( Stem("opposition"), "opposition" );
	deepEqual( Stem("optimismus"), "optimismus" );
	deepEqual( Stem("optischen"), "optisch" );
	deepEqual( Stem("orangeblüten"), "orangeblut" );
	deepEqual( Stem("orangefarbenen"), "orangefarb" );
	deepEqual( Stem("orangen"), "orang" );
	deepEqual( Stem("orangenbäume"), "orangenbaum" );
	deepEqual( Stem("orangenhaine"), "orangenhain" );
	deepEqual( Stem("orangensaft"), "orangensaft" );
	deepEqual( Stem("orbitz"), "orbitz" );
	deepEqual( Stem("ordentlich"), "ordent" );
	deepEqual( Stem("ordentliche"), "ordent" );
	deepEqual( Stem("ordentlichen"), "ordent" );
	deepEqual( Stem("ordentlicher"), "ordent" );
	deepEqual( Stem("ordentliches"), "ordent" );
	deepEqual( Stem("ordinäre"), "ordinar" );
	deepEqual( Stem("ordinärsten"), "ordinarst" );
	deepEqual( Stem("ordiniertdem"), "ordiniertd" );
	deepEqual( Stem("ordne"), "ordn" );
	deepEqual( Stem("ordnen"), "ordn" );
	deepEqual( Stem("ordnende"), "ordnend" );
	deepEqual( Stem("ordnet"), "ordnet" );
	deepEqual( Stem("ordnete"), "ordnet" );
	deepEqual( Stem("ordneten"), "ordnet" );
	deepEqual( Stem("ordnung"), "ordnung" );
	deepEqual( Stem("ordnungen"), "ordnung" );
	deepEqual( Stem("ordnungs"), "ordnung" );
	deepEqual( Stem("ordnungsgemäss"), "ordnungsgemass" );
	deepEqual( Stem("ordnungsgemässe"), "ordnungsgemass" );
	deepEqual( Stem("ordnungsgesetz"), "ordnungsgesetz" );
	deepEqual( Stem("ordnungsliebe"), "ordnungslieb" );
	deepEqual( Stem("ordnungssinn"), "ordnungssinn" );
	deepEqual( Stem("ordonnanzgewehre"), "ordonnanzgewehr" );
	deepEqual( Stem("organ"), "organ" );
	deepEqual( Stem("organe"), "organ" );
	deepEqual( Stem("organen"), "organ" );
	deepEqual( Stem("organisation"), "organisation" );
	deepEqual( Stem("organisationen"), "organisation" );
	deepEqual( Stem("organische"), "organ" );
	deepEqual( Stem("organischen"), "organ" );
	deepEqual( Stem("organisieren"), "organisi" );
	deepEqual( Stem("organisiert"), "organisiert" );
	deepEqual( Stem("organisierte"), "organisiert" );
	deepEqual( Stem("organismen"), "organism" );
	deepEqual( Stem("organismus"), "organismus" );
	deepEqual( Stem("orgel"), "orgel" );
	deepEqual( Stem("orgelkasten"), "orgelkast" );
	deepEqual( Stem("orgelspieler"), "orgelspiel" );
	deepEqual( Stem("orgelspielers"), "orgelspiel" );
	deepEqual( Stem("orientieren"), "orienti" );
	deepEqual( Stem("orientteppiche"), "orientteppich" );
	deepEqual( Stem("original"), "original" );
	deepEqual( Stem("originalität"), "originalitat" );
	deepEqual( Stem("originalkorrespondenz"), "originalkorrespondenz" );
	deepEqual( Stem("originarium"), "originarium" );
	deepEqual( Stem("originelles"), "originell" );
	deepEqual( Stem("orione"), "orion" );
	deepEqual( Stem("örk"), "ork" );
	deepEqual( Stem("orkan"), "orkan" );
	deepEqual( Stem("ort"), "ort" );
	deepEqual( Stem("orte"), "ort" );
	deepEqual( Stem("orten"), "ort" );
	deepEqual( Stem("örter"), "ort" );
	deepEqual( Stem("ortes"), "ort" );
	deepEqual( Stem("orthodoxe"), "orthodox" );
	deepEqual( Stem("orthodoxen"), "orthodox" );
	deepEqual( Stem("ortlichkeiten"), "ortlich" );
	deepEqual( Stem("ortsansäs"), "ortsansas" );
	deepEqual( Stem("ortschaft"), "ortschaft" );
	deepEqual( Stem("ortschaften"), "ortschaft" );
	deepEqual( Stem("ortsvorschlägen"), "ortsvorschlag" );
	deepEqual( Stem("oslo"), "oslo" );
	deepEqual( Stem("ost"), "ost" );
	deepEqual( Stem("ostberlin"), "ostberlin" );
	deepEqual( Stem("ostberliner"), "ostberlin" );
	deepEqual( Stem("ostdeutschen"), "ostdeutsch" );
	deepEqual( Stem("ostdeutschland"), "ostdeutschland" );
	deepEqual( Stem("osten"), "ost" );
	deepEqual( Stem("ostens"), "ost" );
	deepEqual( Stem("osteransprache"), "osteransprach" );
	deepEqual( Stem("osterei"), "osterei" );
	deepEqual( Stem("ostereier"), "osterei" );
	deepEqual( Stem("osterfest"), "osterf" );
	deepEqual( Stem("osterfestgebete"), "osterfestgebet" );
	deepEqual( Stem("osterhäschen"), "osterhasch" );
	deepEqual( Stem("ostern"), "ost" );
	deepEqual( Stem("osternacht"), "osternacht" );
	deepEqual( Stem("osternest"), "ostern" );
	deepEqual( Stem("osternestes"), "ostern" );
	deepEqual( Stem("österreich"), "osterreich" );
	deepEqual( Stem("österreichern"), "osterreich" );
	deepEqual( Stem("osteuropa"), "osteuropa" );
	deepEqual( Stem("ostindien"), "ostindi" );
	deepEqual( Stem("ostindischen"), "ostind" );
	deepEqual( Stem("ostländischen"), "ostland" );
	deepEqual( Stem("östlich"), "ostlich" );
	deepEqual( Stem("östliche"), "ostlich" );
	deepEqual( Stem("östlichen"), "ostlich" );
	deepEqual( Stem("ostrolenka"), "ostrolenka" );
	deepEqual( Stem("ostschweiz"), "ostschweiz" );
	deepEqual( Stem("ostschweizer"), "ostschweiz" );
	deepEqual( Stem("ostwind"), "ostwind" );
	deepEqual( Stem("ostwindes"), "ostwind" );
	deepEqual( Stem("ottenschlag"), "ottenschlag" );
	deepEqual( Stem("otter"), "ott" );
	deepEqual( Stem("ottern"), "ott" );
	deepEqual( Stem("otterngezüchte"), "otterngezucht" );
	deepEqual( Stem("otterngift"), "otterngift" );
	deepEqual( Stem("out"), "out" );
	deepEqual( Stem("overview"), "overview" );
	deepEqual( Stem("oxford"), "oxford" );
	deepEqual( Stem("ozean"), "ozean" );
	deepEqual( Stem("özgur"), "ozgur" );
	deepEqual( Stem("p"), "p" );
	deepEqual( Stem("paar"), "paar" );
	deepEqual( Stem("paare"), "paar" );
	deepEqual( Stem("paaren"), "paar" );
	deepEqual( Stem("paares"), "paar" );
	deepEqual( Stem("paarmal"), "paarmal" );
	deepEqual( Stem("paarung"), "paarung" );
	deepEqual( Stem("paarweise"), "paarweis" );
	deepEqual( Stem("pacht"), "pacht" );
	deepEqual( Stem("pachtzins"), "pachtzin" );
	deepEqual( Stem("pack"), "pack" );
	deepEqual( Stem("päckchen"), "packch" );
	deepEqual( Stem("packen"), "pack" );
	deepEqual( Stem("päcklein"), "packlein" );
	deepEqual( Stem("packt"), "packt" );
	deepEqual( Stem("packte"), "packt" );
	deepEqual( Stem("packten"), "packt" );
	deepEqual( Stem("pädagogik"), "padagog" );
	deepEqual( Stem("paddeln"), "paddeln" );
	deepEqual( Stem("paffte"), "pafft" );
	deepEqual( Stem("pagen"), "pag" );
	deepEqual( Stem("pair"), "pair" );
	deepEqual( Stem("paket"), "paket" );
	deepEqual( Stem("paketchen"), "paketch" );
	deepEqual( Stem("palast"), "palast" );
	deepEqual( Stem("paläste"), "palast" );
	deepEqual( Stem("palästen"), "palast" );
	deepEqual( Stem("palea"), "palea" );
	deepEqual( Stem("paleae"), "palea" );
	deepEqual( Stem("pallu"), "pallu" );
	deepEqual( Stem("palme"), "palm" );
	deepEqual( Stem("palmen"), "palm" );
	deepEqual( Stem("palmzweige"), "palmzweig" );
	deepEqual( Stem("palmzweigen"), "palmzweig" );
	deepEqual( Stem("panamahut"), "panamahut" );
	deepEqual( Stem("panier"), "pani" );
	deepEqual( Stem("pankraz"), "pankraz" );
	deepEqual( Stem("pankräzchens"), "pankrazch" );
	deepEqual( Stem("pankrazens"), "pankraz" );
	deepEqual( Stem("pankrazius"), "pankrazius" );
	deepEqual( Stem("pankräzlein"), "pankrazlein" );
	deepEqual( Stem("panorama"), "panorama" );
	deepEqual( Stem("panspfeife"), "panspfeif" );
	deepEqual( Stem("pantinengänger"), "pantinengang" );
	deepEqual( Stem("pantoffelfüssen"), "pantoffelfuss" );
	deepEqual( Stem("pantoffeln"), "pantoffeln" );
	deepEqual( Stem("panzer"), "panz" );
	deepEqual( Stem("panzerfahrzeugen"), "panzerfahrzeug" );
	deepEqual( Stem("panzerreiter"), "panzerreit" );
	deepEqual( Stem("papa"), "papa" );
	deepEqual( Stem("papagei"), "papagei" );
	deepEqual( Stem("papier"), "papi" );
	deepEqual( Stem("papiere"), "papi" );
	deepEqual( Stem("papieren"), "papi" );
	deepEqual( Stem("papierne"), "papiern" );
	deepEqual( Stem("papierstauden"), "papierstaud" );
	deepEqual( Stem("papparbeit"), "papparbeit" );
	deepEqual( Stem("pappel"), "pappel" );
	deepEqual( Stem("pappkartons"), "pappkarton" );
	deepEqual( Stem("pappkästchen"), "pappkastch" );
	deepEqual( Stem("papst"), "papst" );
	deepEqual( Stem("papstes"), "papst" );
	deepEqual( Stem("paradies"), "paradi" );
	deepEqual( Stem("paradiese"), "paradies" );
	deepEqual( Stem("paradiesgärtchen"), "paradiesgartch" );
	deepEqual( Stem("paradiesgärtels"), "paradiesgartel" );
	deepEqual( Stem("paradiesgärtlein"), "paradiesgartlein" );
	deepEqual( Stem("paradiesische"), "paradies" );
	deepEqual( Stem("paradiesvogel"), "paradiesvogel" );
	deepEqual( Stem("paraklet"), "paraklet" );
	deepEqual( Stem("parallele"), "parallel" );
	deepEqual( Stem("paralogismen"), "paralogism" );
	deepEqual( Stem("parapluie"), "paraplui" );
	deepEqual( Stem("parat"), "parat" );
	deepEqual( Stem("pärchen"), "parch" );
	deepEqual( Stem("pardel"), "pardel" );
	deepEqual( Stem("parfümiert"), "parfumiert" );
	deepEqual( Stem("parieren"), "pari" );
	deepEqual( Stem("paris"), "paris" );
	deepEqual( Stem("pariser"), "paris" );
	deepEqual( Stem("park"), "park" );
	deepEqual( Stem("parke"), "park" );
	deepEqual( Stem("parkett"), "parkett" );
	deepEqual( Stem("parks"), "park" );
	deepEqual( Stem("parsimoniae"), "parsimonia" );
	deepEqual( Stem("parte"), "part" );
	deepEqual( Stem("partei"), "partei" );
	deepEqual( Stem("parteien"), "partei" );
	deepEqual( Stem("parteigänger"), "parteigang" );
	deepEqual( Stem("parteigenossen"), "parteigenoss" );
	deepEqual( Stem("parteiischen"), "parteiisch" );
	deepEqual( Stem("parteileute"), "parteileut" );
	deepEqual( Stem("partie"), "parti" );
	deepEqual( Stem("partien"), "parti" );
	deepEqual( Stem("partners"), "partn" );
	deepEqual( Stem("parvulus"), "parvulus" );
	deepEqual( Stem("pascha"), "pascha" );
	deepEqual( Stem("pascher"), "pasch" );
	deepEqual( Stem("paspeliert"), "paspeliert" );
	deepEqual( Stem("pass"), "pass" );
	deepEqual( Stem("passable"), "passabl" );
	deepEqual( Stem("passah"), "passah" );
	deepEqual( Stem("passahfest"), "passahf" );
	deepEqual( Stem("passahtieres"), "passahti" );
	deepEqual( Stem("passanten"), "passant" );
	deepEqual( Stem("passargument"), "passargument" );
	deepEqual( Stem("pässe"), "pass" );
	deepEqual( Stem("passen"), "pass" );
	deepEqual( Stem("passend"), "passend" );
	deepEqual( Stem("passende"), "passend" );
	deepEqual( Stem("passenden"), "passend" );
	deepEqual( Stem("passender"), "passend" );
	deepEqual( Stem("passendes"), "passend" );
	deepEqual( Stem("passeten"), "passet" );
	deepEqual( Stem("passieren"), "passi" );
	deepEqual( Stem("passiert"), "passiert" );
	deepEqual( Stem("passierte"), "passiert" );
	deepEqual( Stem("passiertem"), "passiert" );
	deepEqual( Stem("passierten"), "passiert" );
	deepEqual( Stem("passivem"), "passiv" );
	deepEqual( Stem("passt"), "passt" );
	deepEqual( Stem("paßt"), "passt" );
	deepEqual( Stem("passte"), "passt" );
	deepEqual( Stem("passten"), "passt" );
	deepEqual( Stem("pastete"), "pastet" );
	deepEqual( Stem("pasteten"), "pastet" );
	deepEqual( Stem("patent"), "patent" );
	deepEqual( Stem("patentierung"), "patentier" );
	deepEqual( Stem("pater"), "pat" );
	deepEqual( Stem("paternoster"), "paternost" );
	deepEqual( Stem("paternosteraufzug"), "paternosteraufzug" );
	deepEqual( Stem("paternosters"), "paternost" );
	deepEqual( Stem("paters"), "pat" );
	deepEqual( Stem("pathologisch"), "patholog" );
	deepEqual( Stem("pathologischen"), "patholog" );
	deepEqual( Stem("patieneen"), "patiene" );
	deepEqual( Stem("patienten"), "patient" );
	deepEqual( Stem("patriarch"), "patriarch" );
	deepEqual( Stem("patriarchen"), "patriarch" );
	deepEqual( Stem("patron"), "patron" );
	deepEqual( Stem("patronen"), "patron" );
	deepEqual( Stem("patronhilsen"), "patronhils" );
	deepEqual( Stem("patrontasche"), "patrontasch" );
	deepEqual( Stem("patrouille"), "patrouill" );
	deepEqual( Stem("patrouillen"), "patrouill" );
	deepEqual( Stem("patsch"), "patsch" );
	deepEqual( Stem("patsche"), "patsch" );
	deepEqual( Stem("patschelte"), "patschelt" );
	deepEqual( Stem("patschnass"), "patschnass" );
	deepEqual( Stem("pauke"), "pauk" );
	deepEqual( Stem("pauken"), "pauk" );
	deepEqual( Stem("paukenbegleitung"), "paukenbegleit" );
	deepEqual( Stem("paukenden"), "paukend" );
	deepEqual( Stem("paukenklöppel"), "paukenkloppel" );
	deepEqual( Stem("paukenkonzert"), "paukenkonzert" );
	deepEqual( Stem("paukenstock"), "paukenstock" );
	deepEqual( Stem("paul"), "paul" );
	deepEqual( Stem("pausbäckige"), "pausback" );
	deepEqual( Stem("pause"), "paus" );
	deepEqual( Stem("pausen"), "paus" );
	deepEqual( Stem("pavia"), "pavia" );
	deepEqual( Stem("pavillon"), "pavillon" );
	deepEqual( Stem("pavillons"), "pavillon" );
	deepEqual( Stem("pech"), "pech" );
	deepEqual( Stem("pechdunkeln"), "pechdunkeln" );
	deepEqual( Stem("peche"), "pech" );
	deepEqual( Stem("pechfinster"), "pechfin" );
	deepEqual( Stem("pechnarben"), "pechnarb" );
	deepEqual( Stem("pechs"), "pech" );
	deepEqual( Stem("pechschwarz"), "pechschwarz" );
	deepEqual( Stem("pechschwarzen"), "pechschwarz" );
	deepEqual( Stem("pechsiedern"), "pechsied" );
	deepEqual( Stem("pechstreif"), "pechstreif" );
	deepEqual( Stem("pechverbandes"), "pechverband" );
	deepEqual( Stem("pecoris"), "pecoris" );
	deepEqual( Stem("pedanten"), "pedant" );
	deepEqual( Stem("pedanterie"), "pedanteri" );
	deepEqual( Stem("pegasus"), "pegasus" );
	deepEqual( Stem("pein"), "pein" );
	deepEqual( Stem("peinigen"), "peinig" );
	deepEqual( Stem("peiniger"), "peinig" );
	deepEqual( Stem("peinigt"), "peinigt" );
	deepEqual( Stem("peinigte"), "peinigt" );
	deepEqual( Stem("peinlich"), "peinlich" );
	deepEqual( Stem("peinliche"), "peinlich" );
	deepEqual( Stem("peinlicher"), "peinlich" );
	deepEqual( Stem("peinlichste"), "peinlich" );
	deepEqual( Stem("peinlichsten"), "peinlich" );
	deepEqual( Stem("peinvoll"), "peinvoll" );
	deepEqual( Stem("peirastik"), "peirast" );
	deepEqual( Stem("peitsche"), "peitsch" );
	deepEqual( Stem("peitschen"), "peitsch" );
	deepEqual( Stem("peitschenknall"), "peitschenknall" );
	deepEqual( Stem("peleg"), "peleg" );
	deepEqual( Stem("pelz"), "pelz" );
	deepEqual( Stem("pelzen"), "pelz" );
	deepEqual( Stem("pelzes"), "pelz" );
	deepEqual( Stem("pelzmütze"), "pelzmutz" );
	deepEqual( Stem("pelzverbrämten"), "pelzverbramt" );
	deepEqual( Stem("pelzwerk"), "pelzwerk" );
	deepEqual( Stem("pension"), "pension" );
	deepEqual( Stem("pentarchie"), "pentarchi" );
	deepEqual( Stem("pepiniere"), "pepini" );
	deepEqual( Stem("per"), "per" );
	deepEqual( Stem("perceptio"), "perceptio" );
	deepEqual( Stem("perceptiones"), "perception" );
	deepEqual( Stem("perceptionis"), "perceptionis" );
	deepEqual( Stem("perceptivum"), "perceptivum" );
	deepEqual( Stem("percipere"), "percip" );
	deepEqual( Stem("perez"), "perez" );
	deepEqual( Stem("perfectissimum"), "perfectissimum" );
	deepEqual( Stem("peri"), "peri" );
	deepEqual( Stem("periode"), "period" );
	deepEqual( Stem("perioden"), "period" );
	deepEqual( Stem("periodischen"), "period" );
	deepEqual( Stem("perlen"), "perl" );
	deepEqual( Stem("perlenband"), "perlenband" );
	deepEqual( Stem("perlmutter"), "perlmutt" );
	deepEqual( Stem("permanenter"), "permanent" );
	deepEqual( Stem("perpetuum"), "perpetuum" );
	deepEqual( Stem("persifliert"), "persifliert" );
	deepEqual( Stem("person"), "person" );
	deepEqual( Stem("personen"), "person" );
	deepEqual( Stem("persönlich"), "person" );
	deepEqual( Stem("persönliche"), "person" );
	deepEqual( Stem("persönlichem"), "person" );
	deepEqual( Stem("persönlichen"), "person" );
	deepEqual( Stem("persönlichkeit"), "person" );
	deepEqual( Stem("persönlichkeiten"), "person" );
	deepEqual( Stem("perspektive"), "perspektiv" );
	deepEqual( Stem("perspicacia"), "perspicacia" );
	deepEqual( Stem("persuasiones"), "persuasion" );
	deepEqual( Stem("pest"), "pest" );
	deepEqual( Stem("pestischer"), "pestisch" );
	deepEqual( Stem("petent"), "petent" );
	deepEqual( Stem("peter"), "pet" );
	deepEqual( Stem("peterchen"), "peterch" );
	deepEqual( Stem("peterchens"), "peterch" );
	deepEqual( Stem("petersburg"), "petersburg" );
	deepEqual( Stem("petitpierre"), "petitpierr" );
	deepEqual( Stem("petrarum"), "petrarum" );
	deepEqual( Stem("petrus"), "petrus" );
	deepEqual( Stem("petschiert"), "petschiert" );
	deepEqual( Stem("petz"), "petz" );
	deepEqual( Stem("petzbären"), "petzbar" );
	deepEqual( Stem("pfad"), "pfad" );
	deepEqual( Stem("pfade"), "pfad" );
	deepEqual( Stem("pfaden"), "pfad" );
	deepEqual( Stem("pfades"), "pfad" );
	deepEqual( Stem("pfaffen"), "pfaff" );
	deepEqual( Stem("pfäfflein"), "pfafflein" );
	deepEqual( Stem("pfahl"), "pfahl" );
	deepEqual( Stem("pfahles"), "pfahl" );
	deepEqual( Stem("pfännchen"), "pfannch" );
	deepEqual( Stem("pfanne"), "pfann" );
	deepEqual( Stem("pfannen"), "pfann" );
	deepEqual( Stem("pfarr"), "pfarr" );
	deepEqual( Stem("pfarrämter"), "pfarramt" );
	deepEqual( Stem("pfarreien"), "pfarrei" );
	deepEqual( Stem("pfarrer"), "pfarr" );
	deepEqual( Stem("pfarrerdie"), "pfarrerdi" );
	deepEqual( Stem("pfarrerstochter"), "pfarrerstocht" );
	deepEqual( Stem("pfarrerweiterbildung"), "pfarrerweiterbild" );
	deepEqual( Stem("pfarrerweiterbildungskommission"), "pfarrerweiterbildungskommission" );
	deepEqual( Stem("pfarrpersonen"), "pfarrperson" );
	deepEqual( Stem("pfarrverein"), "pfarrverein" );
	deepEqual( Stem("pfauenfedern"), "pfauenfed" );
	deepEqual( Stem("pfeffer"), "pfeff" );
	deepEqual( Stem("pfefferkuchen"), "pfefferkuch" );
	deepEqual( Stem("pfefferkuchenbäume"), "pfefferkuchenbaum" );
	deepEqual( Stem("pfefferkuchenmännchen"), "pfefferkuchenmannch" );
	deepEqual( Stem("pfefferkuchenpäckchen"), "pfefferkuchenpackch" );
	deepEqual( Stem("pfefferkuchensprüche"), "pfefferkuchenspruch" );
	deepEqual( Stem("pfefferkuchenzweigen"), "pfefferkuchenzweig" );
	deepEqual( Stem("pfefferminzplätzchen"), "pfefferminzplatzch" );
	deepEqual( Stem("pfefferminztee"), "pfefferminzte" );
	deepEqual( Stem("pfeifchen"), "pfeifch" );
	deepEqual( Stem("pfeife"), "pfeif" );
	deepEqual( Stem("pfeifen"), "pfeif" );
	deepEqual( Stem("pfeifend"), "pfeifend" );
	deepEqual( Stem("pfeifenden"), "pfeifend" );
	deepEqual( Stem("pfeifenköpfen"), "pfeifenkopf" );
	deepEqual( Stem("pfeifmelodie"), "pfeifmelodi" );
	deepEqual( Stem("pfeil"), "pfeil" );
	deepEqual( Stem("pfeile"), "pfeil" );
	deepEqual( Stem("pfennig"), "pfennig" );
	deepEqual( Stem("pfennige"), "pfennig" );
	deepEqual( Stem("pferchen"), "pferch" );
	deepEqual( Stem("pferd"), "pferd" );
	deepEqual( Stem("pferdchen"), "pferdch" );
	deepEqual( Stem("pferde"), "pferd" );
	deepEqual( Stem("pferdeäpfel"), "pferdeapfel" );
	deepEqual( Stem("pferdehufen"), "pferdehuf" );
	deepEqual( Stem("pferdekräfte"), "pferdekraft" );
	deepEqual( Stem("pferden"), "pferd" );
	deepEqual( Stem("pferdes"), "pferd" );
	deepEqual( Stem("pfiff"), "pfiff" );
	deepEqual( Stem("pfiffe"), "pfiff" );
	deepEqual( Stem("pfiffige"), "pfiffig" );
	deepEqual( Stem("pfiffigem"), "pfiffig" );
	deepEqual( Stem("pfingstsonntag"), "pfingstsonntag" );
	deepEqual( Stem("pflänzchen"), "pflanzch" );
	deepEqual( Stem("pflanze"), "pflanz" );
	deepEqual( Stem("pflanzen"), "pflanz" );
	deepEqual( Stem("pflanzensamen"), "pflanzensam" );
	deepEqual( Stem("pflanzerzigarre"), "pflanzerzigarr" );
	deepEqual( Stem("pflanzt"), "pflanzt" );
	deepEqual( Stem("pflanzte"), "pflanzt" );
	deepEqual( Stem("pflanzung"), "pflanzung" );
	deepEqual( Stem("pflanzungen"), "pflanzung" );
	deepEqual( Stem("pflaster"), "pflast" );
	deepEqual( Stem("pflaume"), "pflaum" );
	deepEqual( Stem("pflaumen"), "pflaum" );
	deepEqual( Stem("pflaumenaug"), "pflaumenaug" );
	deepEqual( Stem("pflaumenkern"), "pflaumenk" );
	deepEqual( Stem("pflege"), "pfleg" );
	deepEqual( Stem("pflegen"), "pfleg" );
	deepEqual( Stem("pflegst"), "pfleg" );
	deepEqual( Stem("pflegt"), "pflegt" );
	deepEqual( Stem("pflegte"), "pflegt" );
	deepEqual( Stem("pflegten"), "pflegt" );
	deepEqual( Stem("pflicht"), "pflicht" );
	deepEqual( Stem("pflichtbewußtsein"), "pflichtbewusstsein" );
	deepEqual( Stem("pflichten"), "pflicht" );
	deepEqual( Stem("pflichterfüllung"), "pflichterfull" );
	deepEqual( Stem("pflichtgemäss"), "pflichtgemass" );
	deepEqual( Stem("pflichtgemäß"), "pflichtgemass" );
	deepEqual( Stem("pflichtgemässe"), "pflichtgemass" );
	deepEqual( Stem("pflichtmässig"), "pflichtmass" );
	deepEqual( Stem("pflichtmässigen"), "pflichtmass" );
	deepEqual( Stem("pflichtveranstaltung"), "pflichtveranstalt" );
	deepEqual( Stem("pflichtvergessene"), "pflichtvergess" );
	deepEqual( Stem("pflug"), "pflug" );
	deepEqual( Stem("pfluge"), "pflug" );
	deepEqual( Stem("pflüge"), "pflug" );
	deepEqual( Stem("pflügen"), "pflug" );
	deepEqual( Stem("pflüger"), "pflug" );
	deepEqual( Stem("pflügte"), "pflugt" );
	deepEqual( Stem("pflügten"), "pflugt" );
	deepEqual( Stem("pflugviehs"), "pflugvieh" );
	deepEqual( Stem("pflugzüge"), "pflugzug" );
	deepEqual( Stem("pforte"), "pfort" );
	deepEqual( Stem("pforten"), "pfort" );
	deepEqual( Stem("pförtlein"), "pfortlein" );
	deepEqual( Stem("pfötchen"), "pfotch" );
	deepEqual( Stem("pfote"), "pfot" );
	deepEqual( Stem("pfoten"), "pfot" );
	deepEqual( Stem("pfründe"), "pfrund" );
	deepEqual( Stem("pfüet"), "pfuet" );
	deepEqual( Stem("pfuhl"), "pfuhl" );
	deepEqual( Stem("pfühl"), "pfuhl" );
	deepEqual( Stem("pfui"), "pfui" );
	deepEqual( Stem("pfülmen"), "pfulm" );
	deepEqual( Stem("pfund"), "pfund" );
	deepEqual( Stem("pfuschern"), "pfusch" );
	deepEqual( Stem("pfuschte"), "pfuscht" );
	deepEqual( Stem("pfütze"), "pfutz" );
	deepEqual( Stem("pfützen"), "pfutz" );
	deepEqual( Stem("pfütznassen"), "pfutznass" );
	deepEqual( Stem("phäakenaufschwung"), "phaakenaufschw" );
	deepEqual( Stem("phaethon"), "phaethon" );
	deepEqual( Stem("phänomene"), "phanom" );
	deepEqual( Stem("phänomenen"), "phanom" );
	deepEqual( Stem("phantasie"), "phantasi" );
	deepEqual( Stem("phantasielos"), "phantasielos" );
	deepEqual( Stem("phantasien"), "phantasi" );
	deepEqual( Stem("phantasierte"), "phantasiert" );
	deepEqual( Stem("phantasterei"), "phantasterei" );
	deepEqual( Stem("phantastisch"), "phantast" );
	deepEqual( Stem("pharao"), "pharao" );
	deepEqual( Stem("pharaos"), "pharaos" );
	deepEqual( Stem("pharisäer"), "pharisa" );
	deepEqual( Stem("pharisäern"), "pharisa" );
	deepEqual( Stem("pheresiter"), "pheresit" );
	deepEqual( Stem("pheresiters"), "pheresit" );
	deepEqual( Stem("philanthropie"), "philanthropi" );
	deepEqual( Stem("philautia"), "philautia" );
	deepEqual( Stem("philipp"), "philipp" );
	deepEqual( Stem("philippus"), "philippus" );
	deepEqual( Stem("philistäa"), "philistaa" );
	deepEqual( Stem("philister"), "philist" );
	deepEqual( Stem("philisterhafter"), "philisterhaft" );
	deepEqual( Stem("philisterhaftigkeit"), "philisterhaft" );
	deepEqual( Stem("philistern"), "philist" );
	deepEqual( Stem("philisterseelen"), "philisterseel" );
	deepEqual( Stem("philoso"), "philoso" );
	deepEqual( Stem("philosoph"), "philosoph" );
	deepEqual( Stem("philosophen"), "philosoph" );
	deepEqual( Stem("philosophie"), "philosophi" );
	deepEqual( Stem("philosophiert"), "philosophiert" );
	deepEqual( Stem("philosophin"), "philosophin" );
	deepEqual( Stem("philosophisch"), "philosoph" );
	deepEqual( Stem("philosophischem"), "philosoph" );
	deepEqual( Stem("philosophischen"), "philosoph" );
	deepEqual( Stem("philosophischer"), "philosoph" );
	deepEqual( Stem("philosophisches"), "philosoph" );
	deepEqual( Stem("phische"), "phisch" );
	deepEqual( Stem("photographien"), "photographi" );
	deepEqual( Stem("phrasen"), "phras" );
	deepEqual( Stem("phrath"), "phrath" );
	deepEqual( Stem("physik"), "physik" );
	deepEqual( Stem("physische"), "physisch" );
	deepEqual( Stem("physischen"), "physisch" );
	deepEqual( Stem("pianisten"), "pianist" );
	deepEqual( Stem("pick"), "pick" );
	deepEqual( Stem("piepen"), "piep" );
	deepEqual( Stem("pietätlosigkeit"), "pietatlos" );
	deepEqual( Stem("pijanon"), "pijanon" );
	deepEqual( Stem("pikierten"), "pikiert" );
	deepEqual( Stem("pilatus"), "pilatus" );
	deepEqual( Stem("pilgerfahrten"), "pilgerfahrt" );
	deepEqual( Stem("pilgerstab"), "pilgerstab" );
	deepEqual( Stem("pilotprojekt"), "pilotprojekt" );
	deepEqual( Stem("pilze"), "pilz" );
	deepEqual( Stem("pinehas"), "pinehas" );
	deepEqual( Stem("pineiss"), "pineiss" );
	deepEqual( Stem("pineissens"), "pineiss" );
	deepEqual( Stem("pinsel"), "pinsel" );
	deepEqual( Stem("pipsernden"), "pipsernd" );
	deepEqual( Stem("pirsch"), "pirsch" );
	deepEqual( Stem("pirsche"), "pirsch" );
	deepEqual( Stem("pirschgang"), "pirschgang" );
	deepEqual( Stem("pirschwetter"), "pirschwett" );
	deepEqual( Stem("pischon"), "pischon" );
	deepEqual( Stem("pispernd"), "pispernd" );
	deepEqual( Stem("pistole"), "pistol" );
	deepEqual( Stem("pistolen"), "pistol" );
	deepEqual( Stem("pistolengeschütz"), "pistolengeschutz" );
	deepEqual( Stem("pithom"), "pithom" );
	deepEqual( Stem("pitschnassen"), "pitschnass" );
	deepEqual( Stem("plafonds"), "plafond" );
	deepEqual( Stem("plage"), "plag" );
	deepEqual( Stem("plagen"), "plag" );
	deepEqual( Stem("plagten"), "plagt" );
	deepEqual( Stem("plakat"), "plakat" );
	deepEqual( Stem("plakate"), "plakat" );
	deepEqual( Stem("plakaten"), "plakat" );
	deepEqual( Stem("plan"), "plan" );
	deepEqual( Stem("plane"), "plan" );
	deepEqual( Stem("pläne"), "plan" );
	deepEqual( Stem("planet"), "planet" );
	deepEqual( Stem("planeten"), "planet" );
	deepEqual( Stem("plangemäss"), "plangemass" );
	deepEqual( Stem("plankenzaun"), "plankenzaun" );
	deepEqual( Stem("plant"), "plant" );
	deepEqual( Stem("plappermaul"), "plappermaul" );
	deepEqual( Stem("platane"), "platan" );
	deepEqual( Stem("platanen"), "platan" );
	deepEqual( Stem("plato"), "plato" );
	deepEqual( Stem("platonis"), "platonis" );
	deepEqual( Stem("platos"), "platos" );
	deepEqual( Stem("platschte"), "platscht" );
	deepEqual( Stem("platte"), "platt" );
	deepEqual( Stem("plattenproduzent"), "plattenproduzent" );
	deepEqual( Stem("plättete"), "plattet" );
	deepEqual( Stem("plattform"), "plattform" );
	deepEqual( Stem("plattner"), "plattn" );
	deepEqual( Stem("platz"), "platz" );
	deepEqual( Stem("plätzchen"), "platzch" );
	deepEqual( Stem("plätzchens"), "platzch" );
	deepEqual( Stem("platze"), "platz" );
	deepEqual( Stem("plätze"), "platz" );
	deepEqual( Stem("platzen"), "platz" );
	deepEqual( Stem("plätzen"), "platz" );
	deepEqual( Stem("platzes"), "platz" );
	deepEqual( Stem("platzl"), "platzl" );
	deepEqual( Stem("platzregen"), "platzreg" );
	deepEqual( Stem("platzt"), "platzt" );
	deepEqual( Stem("platzten"), "platzt" );
	deepEqual( Stem("plauderei"), "plauderei" );
	deepEqual( Stem("plaudern"), "plaud" );
	deepEqual( Stem("plaudernd"), "plaudernd" );
	deepEqual( Stem("plaudert"), "plaudert" );
	deepEqual( Stem("plauderte"), "plaudert" );
	deepEqual( Stem("plauderten"), "plaudert" );
	deepEqual( Stem("plausibel"), "plausibel" );
	deepEqual( Stem("plausibilität"), "plausibilitat" );
	deepEqual( Stem("playactors"), "playactor" );
	deepEqual( Stem("plebejisch"), "plebej" );
	deepEqual( Stem("plötzlich"), "plotzlich" );
	deepEqual( Stem("plötzliche"), "plotzlich" );
	deepEqual( Stem("plötzlichen"), "plotzlich" );
	deepEqual( Stem("plötzlicher"), "plotzlich" );
	deepEqual( Stem("plötzliches"), "plotzlich" );
	deepEqual( Stem("plötzlichkeit"), "plotzlich" );
	deepEqual( Stem("plump"), "plump" );
	deepEqual( Stem("plumpe"), "plump" );
	deepEqual( Stem("plumpen"), "plump" );
	deepEqual( Stem("plumpheit"), "plumpheit" );
	deepEqual( Stem("plumsdibums"), "plumsdibum" );
	deepEqual( Stem("plunder"), "plund" );
	deepEqual( Stem("plündergut"), "plundergut" );
	deepEqual( Stem("plündern"), "plund" );
	deepEqual( Stem("plus"), "plus" );
	deepEqual( Stem("plusterröcken"), "plusterrock" );
	deepEqual( Stem("plusterte"), "plustert" );
	deepEqual( Stem("pochen"), "poch" );
	deepEqual( Stem("pochenden"), "pochend" );
	deepEqual( Stem("pochte"), "pocht" );
	deepEqual( Stem("podium"), "podium" );
	deepEqual( Stem("podiums"), "podium" );
	deepEqual( Stem("podiumsgespräch"), "podiumsgesprach" );
	deepEqual( Stem("poesie"), "poesi" );
	deepEqual( Stem("pokalsieger"), "pokalsieg" );
	deepEqual( Stem("polacke"), "polack" );
	deepEqual( Stem("polackei"), "polackei" );
	deepEqual( Stem("polacken"), "polack" );
	deepEqual( Stem("polarkreises"), "polarkreis" );
	deepEqual( Stem("polen"), "pol" );
	deepEqual( Stem("polenmütze"), "polenmutz" );
	deepEqual( Stem("poliert"), "poliert" );
	deepEqual( Stem("polierten"), "poliert" );
	deepEqual( Stem("politik"), "polit" );
	deepEqual( Stem("politiker"), "polit" );
	deepEqual( Stem("politisch"), "polit" );
	deepEqual( Stem("politische"), "polit" );
	deepEqual( Stem("politischen"), "polit" );
	deepEqual( Stem("politischer"), "polit" );
	deepEqual( Stem("politisieren"), "politisi" );
	deepEqual( Stem("polizei"), "polizei" );
	deepEqual( Stem("polizeiakten"), "polizeiakt" );
	deepEqual( Stem("polizeianstalt"), "polizeianstalt" );
	deepEqual( Stem("polizeiliches"), "polizei" );
	deepEqual( Stem("polizeimann"), "polizeimann" );
	deepEqual( Stem("polizeistation"), "polizeistation" );
	deepEqual( Stem("polizeiwagen"), "polizeiwag" );
	deepEqual( Stem("polizist"), "polizist" );
	deepEqual( Stem("polizisten"), "polizist" );
	deepEqual( Stem("pollux"), "pollux" );
	deepEqual( Stem("polnisch"), "polnisch" );
	deepEqual( Stem("polnische"), "polnisch" );
	deepEqual( Stem("polnischen"), "polnisch" );
	deepEqual( Stem("polnischer"), "polnisch" );
	deepEqual( Stem("polnisches"), "polnisch" );
	deepEqual( Stem("polster"), "polst" );
	deepEqual( Stem("polstersessel"), "polstersessel" );
	deepEqual( Stem("polsterstuhle"), "polsterstuhl" );
	deepEqual( Stem("polsterstühle"), "polsterstuhl" );
	deepEqual( Stem("polterabend"), "polterab" );
	deepEqual( Stem("poltern"), "polt" );
	deepEqual( Stem("polterte"), "poltert" );
	deepEqual( Stem("pomade"), "pomad" );
	deepEqual( Stem("pomphafte"), "pomphaft" );
	deepEqual( Stem("pönitenz"), "ponitenz" );
	deepEqual( Stem("pontius"), "pontius" );
	deepEqual( Stem("pop"), "pop" );
	deepEqual( Stem("popanze"), "popanz" );
	deepEqual( Stem("populäres"), "popular" );
	deepEqual( Stem("popularitätstief"), "popularitatstief" );
	deepEqual( Stem("populismus"), "populismus" );
	deepEqual( Stem("portier"), "porti" );
	deepEqual( Stem("portiers"), "porti" );
	deepEqual( Stem("portierte"), "portiert" );
	deepEqual( Stem("portierten"), "portiert" );
	deepEqual( Stem("portion"), "portion" );
	deepEqual( Stem("portionen"), "portion" );
	deepEqual( Stem("portionenweise"), "portionenweis" );
	deepEqual( Stem("porto"), "porto" );
	deepEqual( Stem("portokosten"), "portokost" );
	deepEqual( Stem("porträt"), "portrat" );
	deepEqual( Stem("porträts"), "portrat" );
	deepEqual( Stem("porzellan"), "porzellan" );
	deepEqual( Stem("porzellanköpfchen"), "porzellankopfch" );
	deepEqual( Stem("porzellansplitter"), "porzellansplitt" );
	deepEqual( Stem("porzia"), "porzia" );
	deepEqual( Stem("posaunen"), "posaun" );
	deepEqual( Stem("posaunenbläser"), "posaunenblas" );
	deepEqual( Stem("posaunenschall"), "posaunenschall" );
	deepEqual( Stem("posaunensturmstimme"), "posaunensturmstimm" );
	deepEqual( Stem("posaunt"), "posaunt" );
	deepEqual( Stem("posaunte"), "posaunt" );
	deepEqual( Stem("position"), "position" );
	deepEqual( Stem("positionen"), "position" );
	deepEqual( Stem("positiv"), "positiv" );
	deepEqual( Stem("positive"), "positiv" );
	deepEqual( Stem("positiven"), "positiv" );
	deepEqual( Stem("positiver"), "positiv" );
	deepEqual( Stem("positives"), "positiv" );
	deepEqual( Stem("positur"), "positur" );
	deepEqual( Stem("possen"), "poss" );
	deepEqual( Stem("possierliche"), "possi" );
	deepEqual( Stem("possierlichen"), "possi" );
	deepEqual( Stem("possierlichkeit"), "possier" );
	deepEqual( Stem("post"), "post" );
	deepEqual( Stem("postabschluss"), "postabschluss" );
	deepEqual( Stem("postabschluß"), "postabschluss" );
	deepEqual( Stem("posten"), "post" );
	deepEqual( Stem("postfach"), "postfach" );
	deepEqual( Stem("posthorntönen"), "posthornton" );
	deepEqual( Stem("postieren"), "posti" );
	deepEqual( Stem("postulat"), "postulat" );
	deepEqual( Stem("postulate"), "postulat" );
	deepEqual( Stem("postulaten"), "postulat" );
	deepEqual( Stem("postulats"), "postulat" );
	deepEqual( Stem("postulieren"), "postuli" );
	deepEqual( Stem("postuliert"), "postuliert" );
	deepEqual( Stem("postwendend"), "postwend" );
	deepEqual( Stem("potsdam"), "potsdam" );
	deepEqual( Stem("potz"), "potz" );
	deepEqual( Stem("poularde"), "poulard" );
	deepEqual( Stem("prä"), "pra" );
	deepEqual( Stem("pracht"), "pracht" );
	deepEqual( Stem("prächtig"), "prachtig" );
	deepEqual( Stem("prächtige"), "prachtig" );
	deepEqual( Stem("prächtigen"), "prachtig" );
	deepEqual( Stem("prächtiger"), "prachtig" );
	deepEqual( Stem("prächtiges"), "prachtig" );
	deepEqual( Stem("prächtigste"), "prachtig" );
	deepEqual( Stem("prachtkleid"), "prachtkleid" );
	deepEqual( Stem("prachtvoll"), "prachtvoll" );
	deepEqual( Stem("prachtvolle"), "prachtvoll" );
	deepEqual( Stem("prädikat"), "pradikat" );
	deepEqual( Stem("prädikate"), "pradikat" );
	deepEqual( Stem("praedestinatione"), "praedestination" );
	deepEqual( Stem("praedestinationes"), "praedestination" );
	deepEqual( Stem("prag"), "prag" );
	deepEqual( Stem("praga"), "praga" );
	deepEqual( Stem("pragmateia"), "pragmateia" );
	deepEqual( Stem("prägten"), "pragt" );
	deepEqual( Stem("prahlen"), "prahl" );
	deepEqual( Stem("prahler"), "prahl" );
	deepEqual( Stem("prahlerisch"), "prahler" );
	deepEqual( Stem("prahlerischen"), "prahler" );
	deepEqual( Stem("prahlerischer"), "prahler" );
	deepEqual( Stem("präjudizien"), "prajudizi" );
	deepEqual( Stem("praktikum"), "praktikum" );
	deepEqual( Stem("praktisch"), "praktisch" );
	deepEqual( Stem("praktische"), "praktisch" );
	deepEqual( Stem("praktischem"), "praktisch" );
	deepEqual( Stem("praktischen"), "praktisch" );
	deepEqual( Stem("praktischer"), "praktisch" );
	deepEqual( Stem("praktisches"), "praktisch" );
	deepEqual( Stem("praktizierende"), "praktizier" );
	deepEqual( Stem("prälaten"), "pralat" );
	deepEqual( Stem("präludium"), "praludium" );
	deepEqual( Stem("prangt"), "prangt" );
	deepEqual( Stem("prangte"), "prangt" );
	deepEqual( Stem("präparaten"), "praparat" );
	deepEqual( Stem("präpariere"), "prapari" );
	deepEqual( Stem("prarrerschaft"), "prarrerschaft" );
	deepEqual( Stem("prarrkapitel"), "prarrkapitel" );
	deepEqual( Stem("präsent"), "prasent" );
	deepEqual( Stem("präsentiert"), "prasentiert" );
	deepEqual( Stem("präsentierteller"), "prasentiertell" );
	deepEqual( Stem("präses"), "pras" );
	deepEqual( Stem("präsident"), "prasident" );
	deepEqual( Stem("präsidenten"), "prasident" );
	deepEqual( Stem("präsidentin"), "prasidentin" );
	deepEqual( Stem("präsidierte"), "prasidiert" );
	deepEqual( Stem("prasselten"), "prasselt" );
	deepEqual( Stem("präventiven"), "praventiv" );
	deepEqual( Stem("predigen"), "predig" );
	deepEqual( Stem("prediger"), "predig" );
	deepEqual( Stem("prediget"), "prediget" );
	deepEqual( Stem("predigt"), "predigt" );
	deepEqual( Stem("predigten"), "predigt" );
	deepEqual( Stem("preis"), "preis" );
	deepEqual( Stem("preisausschreiben"), "preisausschreib" );
	deepEqual( Stem("preisen"), "preis" );
	deepEqual( Stem("preises"), "preis" );
	deepEqual( Stem("preiset"), "preiset" );
	deepEqual( Stem("preisgegeben"), "preisgegeb" );
	deepEqual( Stem("preisgibt"), "preisgibt" );
	deepEqual( Stem("preisträger"), "preistrag" );
	deepEqual( Stem("preiszugeben"), "preiszugeb" );
	deepEqual( Stem("prenzlauer"), "prenzlau" );
	deepEqual( Stem("presse"), "press" );
	deepEqual( Stem("pressedienst"), "pressedien" );
	deepEqual( Stem("pressedienstes"), "pressedien" );
	deepEqual( Stem("pressemiteilung"), "pressemiteil" );
	deepEqual( Stem("pressemitteilung"), "pressemitteil" );
	deepEqual( Stem("pressemittteilung"), "pressemittteil" );
	deepEqual( Stem("pressieren"), "pressi" );
	deepEqual( Stem("presste"), "presst" );
	deepEqual( Stem("prester"), "prest" );
	deepEqual( Stem("prickelte"), "prickelt" );
	deepEqual( Stem("pries"), "pries" );
	deepEqual( Stem("priester"), "priest" );
	deepEqual( Stem("priestern"), "priest" );
	deepEqual( Stem("priesters"), "priest" );
	deepEqual( Stem("priesterstöchter"), "priesterstocht" );
	deepEqual( Stem("priestertalar"), "priestertalar" );
	deepEqual( Stem("priestertum"), "priestertum" );
	deepEqual( Stem("priestertume"), "priestertum" );
	deepEqual( Stem("priestertums"), "priestertum" );
	deepEqual( Stem("primat"), "primat" );
	deepEqual( Stem("primate"), "primat" );
	deepEqual( Stem("principia"), "principia" );
	deepEqual( Stem("principiis"), "principiis" );
	deepEqual( Stem("prinz"), "prinz" );
	deepEqual( Stem("prinzen"), "prinz" );
	deepEqual( Stem("prinzess"), "prinzess" );
	deepEqual( Stem("prinzip"), "prinzip" );
	deepEqual( Stem("prinzipien"), "prinzipi" );
	deepEqual( Stem("prinzips"), "prinzips" );
	deepEqual( Stem("priori"), "priori" );
	deepEqual( Stem("priorität"), "prioritat" );
	deepEqual( Stem("prioritäten"), "prioritat" );
	deepEqual( Stem("prisen"), "pris" );
	deepEqual( Stem("prius"), "prius" );
	deepEqual( Stem("private"), "privat" );
	deepEqual( Stem("privaten"), "privat" );
	deepEqual( Stem("privates"), "privat" );
	deepEqual( Stem("privatgeschäfte"), "privatgeschaft" );
	deepEqual( Stem("privatleidenschaft"), "privatleidenschaft" );
	deepEqual( Stem("privatneigungen"), "privatneig" );
	deepEqual( Stem("privatpersonen"), "privatperson" );
	deepEqual( Stem("privilegien"), "privilegi" );
	deepEqual( Stem("pro"), "pro" );
	deepEqual( Stem("probabilia"), "probabilia" );
	deepEqual( Stem("probe"), "prob" );
	deepEqual( Stem("probemetall"), "probemetall" );
	deepEqual( Stem("probesprechen"), "probesprech" );
	deepEqual( Stem("probieren"), "probi" );
	deepEqual( Stem("probiert"), "probiert" );
	deepEqual( Stem("probierte"), "probiert" );
	deepEqual( Stem("probierten"), "probiert" );
	deepEqual( Stem("problem"), "probl" );
	deepEqual( Stem("problematisch"), "problemat" );
	deepEqual( Stem("problematischen"), "problemat" );
	deepEqual( Stem("problematischer"), "problemat" );
	deepEqual( Stem("probleme"), "problem" );
	deepEqual( Stem("problemen"), "problem" );
	deepEqual( Stem("problems"), "problem" );
	deepEqual( Stem("problemwelle"), "problemwell" );
	deepEqual( Stem("produkt"), "produkt" );
	deepEqual( Stem("produkte"), "produkt" );
	deepEqual( Stem("produktion"), "produktion" );
	deepEqual( Stem("produktionsassistentin"), "produktionsassistentin" );
	deepEqual( Stem("produktionsverbot"), "produktionsverbot" );
	deepEqual( Stem("produzent"), "produzent" );
	deepEqual( Stem("produzentin"), "produzentin" );
	deepEqual( Stem("produzieren"), "produzi" );
	deepEqual( Stem("profession"), "profession" );
	deepEqual( Stem("professionelle"), "professionell" );
	deepEqual( Stem("professor"), "professor" );
	deepEqual( Stem("profi"), "profi" );
	deepEqual( Stem("profil"), "profil" );
	deepEqual( Stem("profitieren"), "profiti" );
	deepEqual( Stem("programm"), "programm" );
	deepEqual( Stem("programmheft"), "programmheft" );
	deepEqual( Stem("progressiv"), "progressiv" );
	deepEqual( Stem("progressus"), "progressus" );
	deepEqual( Stem("prohibet"), "prohibet" );
	deepEqual( Stem("project"), "project" );
	deepEqual( Stem("projekt"), "projekt" );
	deepEqual( Stem("projektarbeit"), "projektarbeit" );
	deepEqual( Stem("projekte"), "projekt" );
	deepEqual( Stem("projektes"), "projekt" );
	deepEqual( Stem("prokurist"), "prokurist" );
	deepEqual( Stem("prokuristen"), "prokurist" );
	deepEqual( Stem("promenaden"), "promenad" );
	deepEqual( Stem("promovet"), "promovet" );
	deepEqual( Stem("promoviert"), "promoviert" );
	deepEqual( Stem("prophet"), "prophet" );
	deepEqual( Stem("propheten"), "prophet" );
	deepEqual( Stem("prophetenbildern"), "prophetenbild" );
	deepEqual( Stem("prophetische"), "prophet" );
	deepEqual( Stem("prophetischen"), "prophet" );
	deepEqual( Stem("prophezeiungen"), "prophezei" );
	deepEqual( Stem("propinquitates"), "propinquitat" );
	deepEqual( Stem("proportion"), "proportion" );
	deepEqual( Stem("proportionierlich"), "proportioni" );
	deepEqual( Stem("proportionierte"), "proportioniert" );
	deepEqual( Stem("proportionierten"), "proportioniert" );
	deepEqual( Stem("proprium"), "proprium" );
	deepEqual( Stem("prosdialegomenwn"), "prosdialegomenwn" );
	deepEqual( Stem("prospekte"), "prospekt" );
	deepEqual( Stem("protestant"), "protestant" );
	deepEqual( Stem("protestantismus"), "protestantismus" );
	deepEqual( Stem("protestieren"), "protesti" );
	deepEqual( Stem("protestierte"), "protestiert" );
	deepEqual( Stem("protestschreien"), "protestschrei" );
	deepEqual( Stem("protokoll"), "protokoll" );
	deepEqual( Stem("provenzalischen"), "provenzal" );
	deepEqual( Stem("proviant"), "proviant" );
	deepEqual( Stem("provinz"), "provinz" );
	deepEqual( Stem("provinzen"), "provinz" );
	deepEqual( Stem("provision"), "provision" );
	deepEqual( Stem("provisorischen"), "provisor" );
	deepEqual( Stem("provozieren"), "provozi" );
	deepEqual( Stem("provoziert"), "provoziert" );
	deepEqual( Stem("prozent"), "prozent" );
	deepEqual( Stem("prozentsatz"), "prozentsatz" );
	deepEqual( Stem("prozess"), "prozess" );
	deepEqual( Stem("prozeß"), "prozess" );
	deepEqual( Stem("prozesse"), "prozess" );
	deepEqual( Stem("prozesses"), "prozess" );
	deepEqual( Stem("prozessstadien"), "prozessstadi" );
	deepEqual( Stem("prozeßstadien"), "prozessstadi" );
	deepEqual( Stem("prozessstadium"), "prozessstadium" );
	deepEqual( Stem("prozeßstadium"), "prozessstadium" );
	deepEqual( Stem("prüfe"), "pruf" );
	deepEqual( Stem("prüfen"), "pruf" );
	deepEqual( Stem("prüfend"), "prufend" );
	deepEqual( Stem("prüfenden"), "prufend" );
	deepEqual( Stem("prüfte"), "pruft" );
	deepEqual( Stem("prüften"), "pruft" );
	deepEqual( Stem("prüfung"), "prufung" );
	deepEqual( Stem("prüfungslauf"), "prufungslauf" );
	deepEqual( Stem("prüfungsmerkmal"), "prufungsmerkmal" );
	deepEqual( Stem("prüfungsraum"), "prufungsraum" );
	deepEqual( Stem("prügel"), "prugel" );
	deepEqual( Stem("prügelfertig"), "prugelfert" );
	deepEqual( Stem("prügeln"), "prugeln" );
	deepEqual( Stem("prügelstrafe"), "prugelstraf" );
	deepEqual( Stem("prügelte"), "prugelt" );
	deepEqual( Stem("prügle"), "prugl" );
	deepEqual( Stem("prügler"), "prugl" );
	deepEqual( Stem("prunkbauten"), "prunkbaut" );
	deepEqual( Stem("prunkenden"), "prunkend" );
	deepEqual( Stem("prunkendes"), "prunkend" );
	deepEqual( Stem("prunkwagen"), "prunkwag" );
	deepEqual( Stem("prusten"), "prust" );
	deepEqual( Stem("prustend"), "prustend" );
	deepEqual( Stem("prustete"), "prustet" );
	deepEqual( Stem("prutzeln"), "prutzeln" );
	deepEqual( Stem("ps"), "ps" );
	deepEqual( Stem("psalmen"), "psalm" );
	deepEqual( Stem("psyche"), "psych" );
	deepEqual( Stem("psychischen"), "psychisch" );
	deepEqual( Stem("psychologie"), "psychologi" );
	deepEqual( Stem("psychologisch"), "psycholog" );
	deepEqual( Stem("psychologische"), "psycholog" );
	deepEqual( Stem("psychologischen"), "psycholog" );
	deepEqual( Stem("psychologischer"), "psycholog" );
	deepEqual( Stem("puah"), "puah" );
	deepEqual( Stem("publikationen"), "publikation" );
	deepEqual( Stem("publikum"), "publikum" );
	deepEqual( Stem("pudel"), "pudel" );
	deepEqual( Stem("pudelhund"), "pudelhund" );
	deepEqual( Stem("pudelmütze"), "pudelmutz" );
	deepEqual( Stem("puerulus"), "puerulus" );
	deepEqual( Stem("püffe"), "puff" );
	deepEqual( Stem("puffen"), "puff" );
	deepEqual( Stem("püffen"), "puff" );
	deepEqual( Stem("puffte"), "pufft" );
	deepEqual( Stem("puh"), "puh" );
	deepEqual( Stem("puls"), "pul" );
	deepEqual( Stem("pult"), "pult" );
	deepEqual( Stem("pulver"), "pulv" );
	deepEqual( Stem("pulverdampf"), "pulverdampf" );
	deepEqual( Stem("pulverrauch"), "pulverrauch" );
	deepEqual( Stem("pumpe"), "pump" );
	deepEqual( Stem("pumpender"), "pumpend" );
	deepEqual( Stem("punkt"), "punkt" );
	deepEqual( Stem("pünktchen"), "punktch" );
	deepEqual( Stem("punkte"), "punkt" );
	deepEqual( Stem("punkten"), "punkt" );
	deepEqual( Stem("punktionen"), "punktion" );
	deepEqual( Stem("pünktlich"), "punktlich" );
	deepEqual( Stem("pünktlichen"), "punktlich" );
	deepEqual( Stem("pünktlichkeit"), "punktlich" );
	deepEqual( Stem("pünktlichste"), "punktlich" );
	deepEqual( Stem("punktum"), "punktum" );
	deepEqual( Stem("punsch"), "punsch" );
	deepEqual( Stem("pupille"), "pupill" );
	deepEqual( Stem("püppchen"), "puppch" );
	deepEqual( Stem("puppe"), "pupp" );
	deepEqual( Stem("puppen"), "pupp" );
	deepEqual( Stem("puppengarten"), "puppengart" );
	deepEqual( Stem("puppenkind"), "puppenkind" );
	deepEqual( Stem("puppenshow"), "puppenshow" );
	deepEqual( Stem("puppenstube"), "puppenstub" );
	deepEqual( Stem("purpur"), "purpur" );
	deepEqual( Stem("purpurlippen"), "purpurlipp" );
	deepEqual( Stem("purpurrose"), "purpurros" );
	deepEqual( Stem("purpurroten"), "purpurrot" );
	deepEqual( Stem("purzelbaum"), "purzelbaum" );
	deepEqual( Stem("purzelbäumchen"), "purzelbaumch" );
	deepEqual( Stem("purzelbäume"), "purzelbaum" );
	deepEqual( Stem("purzeln"), "purzeln" );
	deepEqual( Stem("purzelnd"), "purzelnd" );
	deepEqual( Stem("purzelte"), "purzelt" );
	deepEqual( Stem("purzelten"), "purzelt" );
	deepEqual( Stem("pusterohr"), "pusterohr" );
	deepEqual( Stem("pustete"), "pustet" );
	deepEqual( Stem("puteo"), "puteo" );
	deepEqual( Stem("puterrot"), "puterrot" );
	deepEqual( Stem("puth"), "puth" );
	deepEqual( Stem("putiels"), "putiel" );
	deepEqual( Stem("putsch"), "putsch" );
	deepEqual( Stem("pütschli"), "putschli" );
	deepEqual( Stem("putschpitschpatsch"), "putschpitschpatsch" );
	deepEqual( Stem("puttperwutt"), "puttperwutt" );
	deepEqual( Stem("putz"), "putz" );
	deepEqual( Stem("putzen"), "putz" );
	deepEqual( Stem("putzer"), "putz" );
	deepEqual( Stem("putzläppchen"), "putzlappch" );
	deepEqual( Stem("putzte"), "putzt" );
	deepEqual( Stem("pyramide"), "pyramid" );
	deepEqual( Stem("pyrop"), "pyrop" );
	deepEqual( Stem("pyropen"), "pyrop" );
	deepEqual( Stem("qm"), "qm" );
	deepEqual( Stem("qua"), "qua" );
	deepEqual( Stem("quacken"), "quack" );
	deepEqual( Stem("quae"), "quae" );
	deepEqual( Stem("quakend"), "quakend" );
	deepEqual( Stem("quaksend"), "quaksend" );
	deepEqual( Stem("quakte"), "quakt" );
	deepEqual( Stem("qual"), "qual" );
	deepEqual( Stem("quale"), "qual" );
	deepEqual( Stem("quäle"), "qual" );
	deepEqual( Stem("quälen"), "qual" );
	deepEqual( Stem("quälend"), "qualend" );
	deepEqual( Stem("quälenden"), "qualend" );
	deepEqual( Stem("quälerei"), "qualerei" );
	deepEqual( Stem("qualifikation"), "qualifikation" );
	deepEqual( Stem("qualität"), "qualitat" );
	deepEqual( Stem("qualm"), "qualm" );
	deepEqual( Stem("quält"), "qualt" );
	deepEqual( Stem("quälte"), "qualt" );
	deepEqual( Stem("quälten"), "qualt" );
	deepEqual( Stem("quantität"), "quantitat" );
	deepEqual( Stem("quartierbewohnern"), "quartierbewohn" );
	deepEqual( Stem("quartiere"), "quarti" );
	deepEqual( Stem("quasi"), "quasi" );
	deepEqual( Stem("quax"), "quax" );
	deepEqual( Stem("quell"), "quell" );
	deepEqual( Stem("quelle"), "quell" );
	deepEqual( Stem("quellen"), "quell" );
	deepEqual( Stem("quellenangabe"), "quellenangab" );
	deepEqual( Stem("quellenden"), "quellend" );
	deepEqual( Stem("quentchen"), "quentch" );
	deepEqual( Stem("quer"), "quer" );
	deepEqual( Stem("querbalken"), "querbalk" );
	deepEqual( Stem("quere"), "quer" );
	deepEqual( Stem("querhölzchen"), "querholzch" );
	deepEqual( Stem("querköpfigkeiten"), "querkopf" );
	deepEqual( Stem("quertäler"), "quertal" );
	deepEqual( Stem("quiekend"), "quiekend" );
	deepEqual( Stem("quiekenden"), "quiekend" );
	deepEqual( Stem("quiekte"), "quiekt" );
	deepEqual( Stem("quietschte"), "quietscht" );
	deepEqual( Stem("quint"), "quint" );
	deepEqual( Stem("quintessenz"), "quintessenz" );
	deepEqual( Stem("quirlige"), "quirlig" );
	deepEqual( Stem("quirlte"), "quirlt" );
	deepEqual( Stem("quod"), "quod" );
	deepEqual( Stem("quoll"), "quoll" );
	deepEqual( Stem("quollen"), "quoll" );
	deepEqual( Stem("quoque"), "quoqu" );
	deepEqual( Stem("r"), "r" );
	deepEqual( Stem("raamas"), "raamas" );
	deepEqual( Stem("raamses"), "raams" );
	deepEqual( Stem("rabbi"), "rabbi" );
	deepEqual( Stem("raben"), "rab" );
	deepEqual( Stem("rabenschwarzes"), "rabenschwarz" );
	deepEqual( Stem("rabensteiner"), "rabenstein" );
	deepEqual( Stem("race"), "rac" );
	deepEqual( Stem("rache"), "rach" );
	deepEqual( Stem("rachegefühl"), "rachegefuhl" );
	deepEqual( Stem("rachel"), "rachel" );
	deepEqual( Stem("rachen"), "rach" );
	deepEqual( Stem("rächen"), "rach" );
	deepEqual( Stem("rachgier"), "rachgi" );
	deepEqual( Stem("rachgierigen"), "rachgier" );
	deepEqual( Stem("rachsucht"), "rachsucht" );
	deepEqual( Stem("rachsüchtigen"), "rachsucht" );
	deepEqual( Stem("rächte"), "racht" );
	deepEqual( Stem("rächten"), "racht" );
	deepEqual( Stem("rad"), "rad" );
	deepEqual( Stem("rädelsführer"), "radelsfuhr" );
	deepEqual( Stem("rademacher"), "rademach" );
	deepEqual( Stem("räder"), "rad" );
	deepEqual( Stem("räderchen"), "raderch" );
	deepEqual( Stem("rädergerassels"), "radergerassel" );
	deepEqual( Stem("rädern"), "rad" );
	deepEqual( Stem("radfahrlegitimation"), "radfahrlegitimation" );
	deepEqual( Stem("radikales"), "radikal" );
	deepEqual( Stem("radikalismus"), "radikalismus" );
	deepEqual( Stem("radio"), "radio" );
	deepEqual( Stem("radiosender"), "radios" );
	deepEqual( Stem("radmantel"), "radmantel" );
	deepEqual( Stem("radotiert"), "radotiert" );
	deepEqual( Stem("raffiniert"), "raffiniert" );
	deepEqual( Stem("rafft"), "rafft" );
	deepEqual( Stem("raffte"), "rafft" );
	deepEqual( Stem("rage"), "rag" );
	deepEqual( Stem("ragte"), "ragt" );
	deepEqual( Stem("ragten"), "ragt" );
	deepEqual( Stem("rahm"), "rahm" );
	deepEqual( Stem("rahmen"), "rahm" );
	deepEqual( Stem("rahmschüsseln"), "rahmschusseln" );
	deepEqual( Stem("rain"), "rain" );
	deepEqual( Stem("raines"), "rain" );
	deepEqual( Stem("raka"), "raka" );
	deepEqual( Stem("räkelte"), "rakelt" );
	deepEqual( Stem("ramsau"), "ramsau" );
	deepEqual( Stem("ran"), "ran" );
	deepEqual( Stem("rand"), "rand" );
	deepEqual( Stem("rande"), "rand" );
	deepEqual( Stem("rang"), "rang" );
	deepEqual( Stem("rangen"), "rang" );
	deepEqual( Stem("rangordnung"), "rangordn" );
	deepEqual( Stem("ränke"), "rank" );
	deepEqual( Stem("ranken"), "rank" );
	deepEqual( Stem("rankte"), "rankt" );
	deepEqual( Stem("rankten"), "rankt" );
	deepEqual( Stem("rann"), "rann" );
	deepEqual( Stem("rannte"), "rannt" );
	deepEqual( Stem("rannten"), "rannt" );
	deepEqual( Stem("ränzchen"), "ranzch" );
	deepEqual( Stem("ränzel"), "ranzel" );
	deepEqual( Stem("ranzen"), "ranz" );
	deepEqual( Stem("raphael"), "raphael" );
	deepEqual( Stem("rappeln"), "rappeln" );
	deepEqual( Stem("rappelte"), "rappelt" );
	deepEqual( Stem("rapps"), "rapps" );
	deepEqual( Stem("rar"), "rar" );
	deepEqual( Stem("rasanter"), "rasant" );
	deepEqual( Stem("rasch"), "rasch" );
	deepEqual( Stem("rasche"), "rasch" );
	deepEqual( Stem("rascheln"), "rascheln" );
	deepEqual( Stem("raschelnden"), "raschelnd" );
	deepEqual( Stem("raschelt"), "raschelt" );
	deepEqual( Stem("raschelte"), "raschelt" );
	deepEqual( Stem("raschem"), "rasch" );
	deepEqual( Stem("raschen"), "rasch" );
	deepEqual( Stem("rascher"), "rasch" );
	deepEqual( Stem("rasches"), "rasch" );
	deepEqual( Stem("rasen"), "ras" );
	deepEqual( Stem("rasenbrocken"), "rasenbrock" );
	deepEqual( Stem("rasend"), "rasend" );
	deepEqual( Stem("rasender"), "rasend" );
	deepEqual( Stem("rasendes"), "rasend" );
	deepEqual( Stem("rasenfelder"), "rasenfeld" );
	deepEqual( Stem("raset"), "raset" );
	deepEqual( Stem("rasierapparat"), "rasierapparat" );
	deepEqual( Stem("rasieren"), "rasi" );
	deepEqual( Stem("räsonnieren"), "rasonni" );
	deepEqual( Stem("rasselfritzen"), "rasselfritz" );
	deepEqual( Stem("rasseln"), "rasseln" );
	deepEqual( Stem("rasselns"), "rasseln" );
	deepEqual( Stem("rasselte"), "rasselt" );
	deepEqual( Stem("rasselten"), "rasselt" );
	deepEqual( Stem("raste"), "rast" );
	deepEqual( Stem("rastlos"), "rastlos" );
	deepEqual( Stem("rastlosen"), "rastlos" );
	deepEqual( Stem("rastloses"), "rastlos" );
	deepEqual( Stem("rat"), "rat" );
	deepEqual( Stem("rate"), "rat" );
	deepEqual( Stem("raten"), "rat" );
	deepEqual( Stem("rates"), "rat" );
	deepEqual( Stem("ratgeber"), "ratgeb" );
	deepEqual( Stem("ratgebern"), "ratgeb" );
	deepEqual( Stem("rathaus"), "rathaus" );
	deepEqual( Stem("rathause"), "rathaus" );
	deepEqual( Stem("ratio"), "ratio" );
	deepEqual( Stem("ratiocinari"), "ratiocinari" );
	deepEqual( Stem("ration"), "ration" );
	deepEqual( Stem("rationale"), "rational" );
	deepEqual( Stem("rationalen"), "rational" );
	deepEqual( Stem("rationales"), "rational" );
	deepEqual( Stem("rationalismus"), "rationalismus" );
	deepEqual( Stem("ratione"), "ration" );
	deepEqual( Stem("rationelle"), "rationell" );
	deepEqual( Stem("rationes"), "ration" );
	deepEqual( Stem("ratlos"), "ratlos" );
	deepEqual( Stem("ratlosen"), "ratlos" );
	deepEqual( Stem("rats"), "rat" );
	deepEqual( Stem("ratsam"), "ratsam" );
	deepEqual( Stem("ratschläge"), "ratschlag" );
	deepEqual( Stem("ratschlägen"), "ratschlag" );
	deepEqual( Stem("ratschlagten"), "ratschlagt" );
	deepEqual( Stem("rätsel"), "ratsel" );
	deepEqual( Stem("rätselhafte"), "ratselhaft" );
	deepEqual( Stem("ratsherren"), "ratsherr" );
	deepEqual( Stem("ratsvorsitzende"), "ratsvorsitz" );
	deepEqual( Stem("ratszimmer"), "ratszimm" );
	deepEqual( Stem("raub"), "raub" );
	deepEqual( Stem("rauben"), "raub" );
	deepEqual( Stem("räuber"), "raub" );
	deepEqual( Stem("räubereien"), "rauberei" );
	deepEqual( Stem("räuberhauptmann"), "rauberhauptmann" );
	deepEqual( Stem("räuberhöhle"), "rauberhohl" );
	deepEqual( Stem("räubern"), "raub" );
	deepEqual( Stem("raubersbestie"), "raubersbesti" );
	deepEqual( Stem("raubkunst"), "raubkun" );
	deepEqual( Stem("raubt"), "raubt" );
	deepEqual( Stem("raubte"), "raubt" );
	deepEqual( Stem("raubtier"), "raubti" );
	deepEqual( Stem("raubtiere"), "raubti" );
	deepEqual( Stem("raubversuch"), "raubversuch" );
	deepEqual( Stem("rauch"), "rauch" );
	deepEqual( Stem("rauche"), "rauch" );
	deepEqual( Stem("rauchen"), "rauch" );
	deepEqual( Stem("rauchend"), "rauchend" );
	deepEqual( Stem("rauchende"), "rauchend" );
	deepEqual( Stem("rauchenden"), "rauchend" );
	deepEqual( Stem("rauchendes"), "rauchend" );
	deepEqual( Stem("räucherig"), "raucher" );
	deepEqual( Stem("rauchern"), "rauch" );
	deepEqual( Stem("rauchfaden"), "rauchfad" );
	deepEqual( Stem("rauchsäulen"), "rauchsaul" );
	deepEqual( Stem("rauchtabak"), "rauchtabak" );
	deepEqual( Stem("rauchte"), "raucht" );
	deepEqual( Stem("rauchten"), "raucht" );
	deepEqual( Stem("rauchtisch"), "rauchtisch" );
	deepEqual( Stem("rauchwerk"), "rauchwerk" );
	deepEqual( Stem("rauchwerks"), "rauchwerk" );
	deepEqual( Stem("rauchwolken"), "rauchwolk" );
	deepEqual( Stem("rauchzeug"), "rauchzeug" );
	deepEqual( Stem("räude"), "raud" );
	deepEqual( Stem("raufereien"), "rauferei" );
	deepEqual( Stem("rauheit"), "rauheit" );
	deepEqual( Stem("rauhen"), "rauh" );
	deepEqual( Stem("rauhes"), "rauh" );
	deepEqual( Stem("raum"), "raum" );
	deepEqual( Stem("raume"), "raum" );
	deepEqual( Stem("räume"), "raum" );
	deepEqual( Stem("räumen"), "raum" );
	deepEqual( Stem("raumes"), "raum" );
	deepEqual( Stem("räumliche"), "raumlich" );
	deepEqual( Stem("räumlichkeiten"), "raumlich" );
	deepEqual( Stem("räumt"), "raumt" );
	deepEqual( Stem("raupe"), "raup" );
	deepEqual( Stem("raus"), "raus" );
	deepEqual( Stem("rausch"), "rausch" );
	deepEqual( Stem("rausche"), "rausch" );
	deepEqual( Stem("rauschen"), "rausch" );
	deepEqual( Stem("rauschend"), "rauschend" );
	deepEqual( Stem("rauschende"), "rauschend" );
	deepEqual( Stem("rauschenden"), "rauschend" );
	deepEqual( Stem("rauscht"), "rauscht" );
	deepEqual( Stem("rauschte"), "rauscht" );
	deepEqual( Stem("rauschten"), "rauscht" );
	deepEqual( Stem("rausg"), "rausg" );
	deepEqual( Stem("rausgeschmissen"), "rausgeschmiss" );
	deepEqual( Stem("rausschneiden"), "rausschneid" );
	deepEqual( Stem("rauszuschneiden"), "rauszuschneid" );
	deepEqual( Stem("ravensburg"), "ravensburg" );
	deepEqual( Stem("re"), "re" );
	deepEqual( Stem("reader"), "read" );
	deepEqual( Stem("reagieren"), "reagi" );
	deepEqual( Stem("real"), "real" );
	deepEqual( Stem("reale"), "real" );
	deepEqual( Stem("realen"), "real" );
	deepEqual( Stem("reales"), "real" );
	deepEqual( Stem("realisier"), "realisi" );
	deepEqual( Stem("realisieren"), "realisi" );
	deepEqual( Stem("realisiert"), "realisiert" );
	deepEqual( Stem("realisierung"), "realisier" );
	deepEqual( Stem("realistisch"), "realist" );
	deepEqual( Stem("realität"), "realitat" );
	deepEqual( Stem("rebecka"), "rebecka" );
	deepEqual( Stem("rebellischen"), "rebell" );
	deepEqual( Stem("rebenlaube"), "rebenlaub" );
	deepEqual( Stem("rebenschossen"), "rebenschoss" );
	deepEqual( Stem("rebhühner"), "rebhuhn" );
	deepEqual( Stem("rebhühnern"), "rebhuhn" );
	deepEqual( Stem("rebhuhnpastete"), "rebhuhnpastet" );
	deepEqual( Stem("rechen"), "rech" );
	deepEqual( Stem("rechenbuch"), "rechenbuch" );
	deepEqual( Stem("rechenmeister"), "rechenmeist" );
	deepEqual( Stem("rechenschaft"), "rechenschaft" );
	deepEqual( Stem("recherchieren"), "recherchi" );
	deepEqual( Stem("rechne"), "rechn" );
	deepEqual( Stem("rechnen"), "rechn" );
	deepEqual( Stem("rechnereien"), "rechnerei" );
	deepEqual( Stem("rechnet"), "rechnet" );
	deepEqual( Stem("rechnete"), "rechnet" );
	deepEqual( Stem("rechnung"), "rechnung" );
	deepEqual( Stem("rechnungen"), "rechnung" );
	deepEqual( Stem("rechnungsabschluss"), "rechnungsabschluss" );
	deepEqual( Stem("rechobs"), "rechob" );
	deepEqual( Stem("recht"), "recht" );
	deepEqual( Stem("rechtbehalten"), "rechtbehalt" );
	deepEqual( Stem("rechte"), "recht" );
	deepEqual( Stem("rechten"), "recht" );
	deepEqual( Stem("rechter"), "recht" );
	deepEqual( Stem("rechtes"), "recht" );
	deepEqual( Stem("rechtfertige"), "rechtfert" );
	deepEqual( Stem("rechtfertigen"), "rechtfert" );
	deepEqual( Stem("rechtfertigende"), "rechtfert" );
	deepEqual( Stem("rechtfertigt"), "rechtfertigt" );
	deepEqual( Stem("rechtfertigung"), "rechtfert" );
	deepEqual( Stem("rechtfertigungserklärung"), "rechtfertigungserklar" );
	deepEqual( Stem("rechtfertigungserklärungder"), "rechtfertigungserklarungd" );
	deepEqual( Stem("rechtfertigungslehre"), "rechtfertigungslehr" );
	deepEqual( Stem("rechthaben"), "rechthab" );
	deepEqual( Stem("rechtlich"), "rechtlich" );
	deepEqual( Stem("rechtliche"), "rechtlich" );
	deepEqual( Stem("rechtlichen"), "rechtlich" );
	deepEqual( Stem("rechtlicher"), "rechtlich" );
	deepEqual( Stem("rechtliches"), "rechtlich" );
	deepEqual( Stem("rechtlichkeit"), "rechtlich" );
	deepEqual( Stem("rechtmässig"), "rechtmass" );
	deepEqual( Stem("rechtmässige"), "rechtmass" );
	deepEqual( Stem("rechtmässigem"), "rechtmass" );
	deepEqual( Stem("rechtmässigen"), "rechtmass" );
	deepEqual( Stem("rechts"), "recht" );
	deepEqual( Stem("rechtsangelegenheit"), "rechtsangeleg" );
	deepEqual( Stem("rechtsbewusstsein"), "rechtsbewusstsein" );
	deepEqual( Stem("rechtschaffen"), "rechtschaff" );
	deepEqual( Stem("rechtschaffene"), "rechtschaff" );
	deepEqual( Stem("rechtschaffenen"), "rechtschaff" );
	deepEqual( Stem("rechtschaffener"), "rechtschaff" );
	deepEqual( Stem("rechtschaffenheit"), "rechtschaff" );
	deepEqual( Stem("rechtskräftig"), "rechtskraft" );
	deepEqual( Stem("rechtsordnungen"), "rechtsordn" );
	deepEqual( Stem("rechtssinn"), "rechtssinn" );
	deepEqual( Stem("rechtsstaat"), "rechtsstaat" );
	deepEqual( Stem("rechtswissenschaft"), "rechtswissenschaft" );
	deepEqual( Stem("rechtzeitig"), "rechtzeit" );
	deepEqual( Stem("recke"), "reck" );
	deepEqual( Stem("recken"), "reck" );
	deepEqual( Stem("reckend"), "reckend" );
	deepEqual( Stem("reckte"), "reckt" );
	deepEqual( Stem("red"), "red" );
	deepEqual( Stem("redakteur"), "redakteur" );
	deepEqual( Stem("redaktion"), "redaktion" );
	deepEqual( Stem("redaktorin"), "redaktorin" );
	deepEqual( Stem("rede"), "red" );
	deepEqual( Stem("reden"), "red" );
	deepEqual( Stem("redend"), "redend" );
	deepEqual( Stem("redende"), "redend" );
	deepEqual( Stem("redenden"), "redend" );
	deepEqual( Stem("redendes"), "redend" );
	deepEqual( Stem("redens"), "red" );
	deepEqual( Stem("redensart"), "redensart" );
	deepEqual( Stem("redensarten"), "redensart" );
	deepEqual( Stem("redesätze"), "redesatz" );
	deepEqual( Stem("redest"), "red" );
	deepEqual( Stem("redet"), "redet" );
	deepEqual( Stem("redete"), "redet" );
	deepEqual( Stem("redeten"), "redet" );
	deepEqual( Stem("redeweise"), "redeweis" );
	deepEqual( Stem("redewendung"), "redewend" );
	deepEqual( Stem("redezeichen"), "redezeich" );
	deepEqual( Stem("redigiert"), "redigiert" );
	deepEqual( Stem("redigierte"), "redigiert" );
	deepEqual( Stem("redlich"), "redlich" );
	deepEqual( Stem("redliche"), "redlich" );
	deepEqual( Stem("redlichen"), "redlich" );
	deepEqual( Stem("redlicher"), "redlich" );
	deepEqual( Stem("redlichkeit"), "redlich" );
	deepEqual( Stem("redner"), "redn" );
	deepEqual( Stem("rednerische"), "redner" );
	deepEqual( Stem("redselig"), "redsel" );
	deepEqual( Stem("redt"), "redt" );
	deepEqual( Stem("réduit"), "réduit" );
	deepEqual( Stem("reduktion"), "reduktion" );
	deepEqual( Stem("reduktionen"), "reduktion" );
	deepEqual( Stem("reeder"), "reed" );
	deepEqual( Stem("refa"), "refa" );
	deepEqual( Stem("refah"), "refah" );
	deepEqual( Stem("referent"), "referent" );
	deepEqual( Stem("referenz"), "referenz" );
	deepEqual( Stem("reflektieren"), "reflekti" );
	deepEqual( Stem("reflektiert"), "reflektiert" );
	deepEqual( Stem("reflexion"), "reflexion" );
	deepEqual( Stem("reform"), "reform" );
	deepEqual( Stem("reformation"), "reformation" );
	deepEqual( Stem("reformen"), "reform" );
	deepEqual( Stem("reformierte"), "reformiert" );
	deepEqual( Stem("reformierten"), "reformiert" );
	deepEqual( Stem("refutieren"), "refuti" );
	deepEqual( Stem("regal"), "regal" );
	deepEqual( Stem("rege"), "reg" );
	deepEqual( Stem("regel"), "regel" );
	deepEqual( Stem("regelmässig"), "regelmass" );
	deepEqual( Stem("regelmäßig"), "regelmass" );
	deepEqual( Stem("regelmässige"), "regelmass" );
	deepEqual( Stem("regelmässigen"), "regelmass" );
	deepEqual( Stem("regelmässiger"), "regelmass" );
	deepEqual( Stem("regelmässigkeit"), "regelmass" );
	deepEqual( Stem("regeln"), "regeln" );
	deepEqual( Stem("regelrecht"), "regelrecht" );
	deepEqual( Stem("regelrechte"), "regelrecht" );
	deepEqual( Stem("regen"), "reg" );
	deepEqual( Stem("regenbogen"), "regenbog" );
	deepEqual( Stem("regende"), "regend" );
	deepEqual( Stem("regenden"), "regend" );
	deepEqual( Stem("regenfritz"), "regenfritz" );
	deepEqual( Stem("regenfritzen"), "regenfritz" );
	deepEqual( Stem("regengüssen"), "regenguss" );
	deepEqual( Stem("regenhose"), "regenhos" );
	deepEqual( Stem("regennacht"), "regennacht" );
	deepEqual( Stem("regennassen"), "regennass" );
	deepEqual( Stem("regenrauschen"), "regenrausch" );
	deepEqual( Stem("regens"), "reg" );
	deepEqual( Stem("regenschirm"), "regenschirm" );
	deepEqual( Stem("regentagen"), "regentag" );
	deepEqual( Stem("regentropfen"), "regentropf" );
	deepEqual( Stem("regentschaft"), "regentschaft" );
	deepEqual( Stem("regenwasserfass"), "regenwasserfass" );
	deepEqual( Stem("regenwurm"), "regenwurm" );
	deepEqual( Stem("regenwürmer"), "regenwurm" );
	deepEqual( Stem("regiere"), "regi" );
	deepEqual( Stem("regieren"), "regi" );
	deepEqual( Stem("regierende"), "regier" );
	deepEqual( Stem("regierenden"), "regier" );
	deepEqual( Stem("regierer"), "regi" );
	deepEqual( Stem("regierers"), "regier" );
	deepEqual( Stem("regiert"), "regiert" );
	deepEqual( Stem("regierte"), "regiert" );
	deepEqual( Stem("regierung"), "regier" );
	deepEqual( Stem("regierungskrisedie"), "regierungskrisedi" );
	deepEqual( Stem("regierungsrat"), "regierungsrat" );
	deepEqual( Stem("regiment"), "regiment" );
	deepEqual( Stem("regimente"), "regiment" );
	deepEqual( Stem("regimentes"), "regiment" );
	deepEqual( Stem("regimentskommandeurs"), "regimentskommandeur" );
	deepEqual( Stem("region"), "region" );
	deepEqual( Stem("regionalstelle"), "regionalstell" );
	deepEqual( Stem("regionen"), "region" );
	deepEqual( Stem("registrieren"), "registri" );
	deepEqual( Stem("registriert"), "registriert" );
	deepEqual( Stem("reglos"), "reglos" );
	deepEqual( Stem("reglosen"), "reglos" );
	deepEqual( Stem("regnat"), "regnat" );
	deepEqual( Stem("regnen"), "regn" );
	deepEqual( Stem("regnerische"), "regner" );
	deepEqual( Stem("regnerischer"), "regner" );
	deepEqual( Stem("regnete"), "regnet" );
	deepEqual( Stem("regt"), "regt" );
	deepEqual( Stem("regte"), "regt" );
	deepEqual( Stem("reguel"), "reguel" );
	deepEqual( Stem("reguels"), "reguel" );
	deepEqual( Stem("regula"), "regula" );
	deepEqual( Stem("regulären"), "regular" );
	deepEqual( Stem("regulative"), "regulativ" );
	deepEqual( Stem("regulieren"), "reguli" );
	deepEqual( Stem("reguliert"), "reguliert" );
	deepEqual( Stem("regulos"), "regulos" );
	deepEqual( Stem("regung"), "regung" );
	deepEqual( Stem("regungen"), "regung" );
	deepEqual( Stem("regungslos"), "regungslos" );
	deepEqual( Stem("regungslosen"), "regungslos" );
	deepEqual( Stem("reh"), "reh" );
	deepEqual( Stem("rehabilitiert"), "rehabilitiert" );
	deepEqual( Stem("rehbock"), "rehbock" );
	deepEqual( Stem("rehböcken"), "rehbock" );
	deepEqual( Stem("rehcherl"), "rehcherl" );
	deepEqual( Stem("rehe"), "reh" );
	deepEqual( Stem("rehen"), "reh" );
	deepEqual( Stem("rehes"), "reh" );
	deepEqual( Stem("rehfussgriff"), "rehfussgriff" );
	deepEqual( Stem("rehgeiss"), "rehgeiss" );
	deepEqual( Stem("reiben"), "reib" );
	deepEqual( Stem("reich"), "reich" );
	deepEqual( Stem("reiche"), "reich" );
	deepEqual( Stem("reichem"), "reich" );
	deepEqual( Stem("reichen"), "reich" );
	deepEqual( Stem("reichenhall"), "reichenhall" );
	deepEqual( Stem("reicher"), "reich" );
	deepEqual( Stem("reichere"), "reich" );
	deepEqual( Stem("reiches"), "reich" );
	deepEqual( Stem("reichgekleidete"), "reichgekleidet" );
	deepEqual( Stem("reichhaltiges"), "reichhalt" );
	deepEqual( Stem("reichlich"), "reichlich" );
	deepEqual( Stem("reichliche"), "reichlich" );
	deepEqual( Stem("reichlichem"), "reichlich" );
	deepEqual( Stem("reichlichen"), "reichlich" );
	deepEqual( Stem("reichlichere"), "reichlich" );
	deepEqual( Stem("reichlicheres"), "reichlich" );
	deepEqual( Stem("reichs"), "reich" );
	deepEqual( Stem("reichsfeind"), "reichsfeind" );
	deepEqual( Stem("reichskristallnacht"), "reichskristallnacht" );
	deepEqual( Stem("reichspogrom"), "reichspogrom" );
	deepEqual( Stem("reichste"), "reich" );
	deepEqual( Stem("reichsten"), "reich" );
	deepEqual( Stem("reicht"), "reicht" );
	deepEqual( Stem("reichte"), "reicht" );
	deepEqual( Stem("reichten"), "reicht" );
	deepEqual( Stem("reichtstag"), "reichtstag" );
	deepEqual( Stem("reichtum"), "reichtum" );
	deepEqual( Stem("reichtümer"), "reichtum" );
	deepEqual( Stem("reichtümern"), "reichtum" );
	deepEqual( Stem("reif"), "reif" );
	deepEqual( Stem("reife"), "reif" );
	deepEqual( Stem("reifen"), "reif" );
	deepEqual( Stem("reifende"), "reifend" );
	deepEqual( Stem("reifenden"), "reifend" );
	deepEqual( Stem("reiflich"), "reiflich" );
	deepEqual( Stem("reifrocke"), "reifrock" );
	deepEqual( Stem("reifte"), "reift" );
	deepEqual( Stem("reigen"), "reig" );
	deepEqual( Stem("reihe"), "reih" );
	deepEqual( Stem("reihen"), "reih" );
	deepEqual( Stem("reihenfolge"), "reihenfolg" );
	deepEqual( Stem("reiher"), "reih" );
	deepEqual( Stem("reihte"), "reiht" );
	deepEqual( Stem("reime"), "reim" );
	deepEqual( Stem("reimt"), "reimt" );
	deepEqual( Stem("rein"), "rein" );
	deepEqual( Stem("reine"), "rein" );
	deepEqual( Stem("reinem"), "rein" );
	deepEqual( Stem("reinen"), "rein" );
	deepEqual( Stem("reiner"), "rein" );
	deepEqual( Stem("reinerem"), "rein" );
	deepEqual( Stem("reineren"), "rein" );
	deepEqual( Stem("reines"), "rein" );
	deepEqual( Stem("reinheit"), "reinheit" );
	deepEqual( Stem("reinhold"), "reinhold" );
	deepEqual( Stem("reinigen"), "reinig" );
	deepEqual( Stem("reinigend"), "reinig" );
	deepEqual( Stem("reinigkeit"), "reinig" );
	deepEqual( Stem("reinigung"), "reinig" );
	deepEqual( Stem("reinigungen"), "reinig" );
	deepEqual( Stem("reinlich"), "reinlich" );
	deepEqual( Stem("reinliche"), "reinlich" );
	deepEqual( Stem("reinlichen"), "reinlich" );
	deepEqual( Stem("reinliches"), "reinlich" );
	deepEqual( Stem("reinlichkeit"), "reinlich" );
	deepEqual( Stem("reinreichen"), "reinreich" );
	deepEqual( Stem("reinsten"), "rein" );
	deepEqual( Stem("reinzukleben"), "reinzukleb" );
	deepEqual( Stem("reis"), "reis" );
	deepEqual( Stem("reise"), "reis" );
	deepEqual( Stem("reiseanzügen"), "reiseanzug" );
	deepEqual( Stem("reisebegleiter"), "reisebegleit" );
	deepEqual( Stem("reisebeschreibung"), "reisebeschreib" );
	deepEqual( Stem("reisebüro"), "reiseburo" );
	deepEqual( Stem("reisebürofrau"), "reiseburofrau" );
	deepEqual( Stem("reisegefährten"), "reisegefahrt" );
	deepEqual( Stem("reisegeld"), "reisegeld" );
	deepEqual( Stem("reisen"), "reis" );
	deepEqual( Stem("reisenden"), "reisend" );
	deepEqual( Stem("reisender"), "reisend" );
	deepEqual( Stem("reisern"), "reis" );
	deepEqual( Stem("reiset"), "reiset" );
	deepEqual( Stem("reisetasche"), "reisetasch" );
	deepEqual( Stem("reisete"), "reiset" );
	deepEqual( Stem("reisetruhe"), "reisetruh" );
	deepEqual( Stem("reiseveranstalter"), "reiseveranstalt" );
	deepEqual( Stem("reisewagen"), "reisewag" );
	deepEqual( Stem("reisig"), "reisig" );
	deepEqual( Stem("reisigbündel"), "reisigbundel" );
	deepEqual( Stem("reissaus"), "reissaus" );
	deepEqual( Stem("reisse"), "reiss" );
	deepEqual( Stem("reiße"), "reiss" );
	deepEqual( Stem("reissen"), "reiss" );
	deepEqual( Stem("reißen"), "reiss" );
	deepEqual( Stem("reissende"), "reissend" );
	deepEqual( Stem("reissenden"), "reissend" );
	deepEqual( Stem("reißenden"), "reissend" );
	deepEqual( Stem("reissender"), "reissend" );
	deepEqual( Stem("reißender"), "reissend" );
	deepEqual( Stem("reisst"), "reisst" );
	deepEqual( Stem("reist"), "reist" );
	deepEqual( Stem("reiste"), "reist" );
	deepEqual( Stem("reiten"), "reit" );
	deepEqual( Stem("reiter"), "reit" );
	deepEqual( Stem("reiterei"), "reiterei" );
	deepEqual( Stem("reitergesellschaft"), "reitergesellschaft" );
	deepEqual( Stem("reitern"), "reit" );
	deepEqual( Stem("reitertrupps"), "reitertrupps" );
	deepEqual( Stem("reitet"), "reitet" );
	deepEqual( Stem("reitpeitsche"), "reitpeitsch" );
	deepEqual( Stem("reitpeitschen"), "reitpeitsch" );
	deepEqual( Stem("reittier"), "reitti" );
	deepEqual( Stem("reiz"), "reiz" );
	deepEqual( Stem("reizbar"), "reizbar" );
	deepEqual( Stem("reize"), "reiz" );
	deepEqual( Stem("reizen"), "reiz" );
	deepEqual( Stem("reizend"), "reizend" );
	deepEqual( Stem("reizende"), "reizend" );
	deepEqual( Stem("reizendem"), "reizend" );
	deepEqual( Stem("reizenden"), "reizend" );
	deepEqual( Stem("reizender"), "reizend" );
	deepEqual( Stem("reizendes"), "reizend" );
	deepEqual( Stem("reizte"), "reizt" );
	deepEqual( Stem("reizvolle"), "reizvoll" );
	deepEqual( Stem("rekruten"), "rekrut" );
	deepEqual( Stem("rekrutiert"), "rekrutiert" );
	deepEqual( Stem("relativ"), "relativ" );
	deepEqual( Stem("relativen"), "relativ" );
	deepEqual( Stem("relativiert"), "relativiert" );
	deepEqual( Stem("religion"), "religion" );
	deepEqual( Stem("religionen"), "religion" );
	deepEqual( Stem("religionreligionsunterricht"), "religionreligionsunterricht" );
	deepEqual( Stem("religions"), "religion" );
	deepEqual( Stem("religionsgebräuche"), "religionsgebrauch" );
	deepEqual( Stem("religionsgemeinschaft"), "religionsgemeinschaft" );
	deepEqual( Stem("religionslehre"), "religionslehr" );
	deepEqual( Stem("religionsleuten"), "religionsleut" );
	deepEqual( Stem("religiös"), "religios" );
	deepEqual( Stem("religiöse"), "religios" );
	deepEqual( Stem("religiösen"), "religios" );
	deepEqual( Stem("reliquiae"), "reliquia" );
	deepEqual( Stem("remalja"), "remalja" );
	deepEqual( Stem("remaljas"), "remaljas" );
	deepEqual( Stem("reminiszenz"), "reminiszenz" );
	deepEqual( Stem("rempelte"), "rempelt" );
	deepEqual( Stem("rennen"), "renn" );
	deepEqual( Stem("rennens"), "renn" );
	deepEqual( Stem("renner"), "renn" );
	deepEqual( Stem("rennern"), "renn" );
	deepEqual( Stem("rennt"), "rennt" );
	deepEqual( Stem("renntier"), "rennti" );
	deepEqual( Stem("renommierten"), "renommiert" );
	deepEqual( Stem("renoviert"), "renoviert" );
	deepEqual( Stem("renovierte"), "renoviert" );
	deepEqual( Stem("renten"), "rent" );
	deepEqual( Stem("rephaim"), "rephaim" );
	deepEqual( Stem("reporter"), "report" );
	deepEqual( Stem("repräsentanten"), "reprasentant" );
	deepEqual( Stem("repräsentantinnennach"), "reprasentantinnennach" );
	deepEqual( Stem("republik"), "republ" );
	deepEqual( Stem("republikaner"), "republikan" );
	deepEqual( Stem("reserve"), "reserv" );
	deepEqual( Stem("residenz"), "residenz" );
	deepEqual( Stem("residenzstadt"), "residenzstadt" );
	deepEqual( Stem("resolut"), "resolut" );
	deepEqual( Stem("resoluten"), "resolut" );
	deepEqual( Stem("respekt"), "respekt" );
	deepEqual( Stem("respektablen"), "respektabl" );
	deepEqual( Stem("respektieren"), "respekti" );
	deepEqual( Stem("respekts"), "respekt" );
	deepEqual( Stem("ressiert"), "ressiert" );
	deepEqual( Stem("ressort"), "ressort" );
	deepEqual( Stem("rest"), "rest" );
	deepEqual( Stem("restchen"), "restch" );
	deepEqual( Stem("reste"), "rest" );
	deepEqual( Stem("resten"), "rest" );
	deepEqual( Stem("restitution"), "restitution" );
	deepEqual( Stem("restlichen"), "restlich" );
	deepEqual( Stem("resultat"), "resultat" );
	deepEqual( Stem("resultate"), "resultat" );
	deepEqual( Stem("resümiert"), "resumiert" );
	deepEqual( Stem("reto"), "reto" );
	deepEqual( Stem("rette"), "rett" );
	deepEqual( Stem("retten"), "rett" );
	deepEqual( Stem("rettende"), "rettend" );
	deepEqual( Stem("rettenden"), "rettend" );
	deepEqual( Stem("retter"), "rett" );
	deepEqual( Stem("retterin"), "retterin" );
	deepEqual( Stem("rettete"), "rettet" );
	deepEqual( Stem("rettung"), "rettung" );
	deepEqual( Stem("rettungsanker"), "rettungsank" );
	deepEqual( Stem("rettungsgedanken"), "rettungsgedank" );
	deepEqual( Stem("rettungsgesellschaft"), "rettungsgesellschaft" );
	deepEqual( Stem("reue"), "reu" );
	deepEqual( Stem("reuen"), "reu" );
	deepEqual( Stem("reuet"), "reuet" );
	deepEqual( Stem("reuete"), "reuet" );
	deepEqual( Stem("reulos"), "reulos" );
	deepEqual( Stem("reuss"), "reuss" );
	deepEqual( Stem("reut"), "reut" );
	deepEqual( Stem("reute"), "reut" );
	deepEqual( Stem("revier"), "revi" );
	deepEqual( Stem("revolution"), "revolution" );
	deepEqual( Stem("revolutionäre"), "revolutionar" );
	deepEqual( Stem("rezept"), "rezept" );
	deepEqual( Stem("rezepten"), "rezept" );
	deepEqual( Stem("rezeptivität"), "rezeptivitat" );
	deepEqual( Stem("rezin"), "rezin" );
	deepEqual( Stem("rezins"), "rezin" );
	deepEqual( Stem("rhauderfehn"), "rhauderfehn" );
	deepEqual( Stem("rhein"), "rhein" );
	deepEqual( Stem("rheinische"), "rheinisch" );
	deepEqual( Stem("rheinstrom"), "rheinstrom" );
	deepEqual( Stem("rhetorik"), "rhetor" );
	deepEqual( Stem("rhetorischen"), "rhetor" );
	deepEqual( Stem("richard"), "richard" );
	deepEqual( Stem("richt"), "richt" );
	deepEqual( Stem("richte"), "richt" );
	deepEqual( Stem("richten"), "richt" );
	deepEqual( Stem("richter"), "richt" );
	deepEqual( Stem("richteramt"), "richteramt" );
	deepEqual( Stem("richterlichen"), "richt" );
	deepEqual( Stem("richtern"), "richt" );
	deepEqual( Stem("richters"), "richt" );
	deepEqual( Stem("richterstuhl"), "richterstuhl" );
	deepEqual( Stem("richtes"), "richt" );
	deepEqual( Stem("richtet"), "richtet" );
	deepEqual( Stem("richtete"), "richtet" );
	deepEqual( Stem("richteten"), "richtet" );
	deepEqual( Stem("richtig"), "richtig" );
	deepEqual( Stem("richtige"), "richtig" );
	deepEqual( Stem("richtigem"), "richtig" );
	deepEqual( Stem("richtigen"), "richtig" );
	deepEqual( Stem("richtiger"), "richtig" );
	deepEqual( Stem("richtiges"), "richtig" );
	deepEqual( Stem("richtigkeit"), "richtig" );
	deepEqual( Stem("richtigs"), "richtig" );
	deepEqual( Stem("richtigsten"), "richtig" );
	deepEqual( Stem("richtscheit"), "richtscheit" );
	deepEqual( Stem("richtschnur"), "richtschnur" );
	deepEqual( Stem("richtung"), "richtung" );
	deepEqual( Stem("richtungen"), "richtung" );
	deepEqual( Stem("rieb"), "rieb" );
	deepEqual( Stem("rieben"), "rieb" );
	deepEqual( Stem("riechen"), "riech" );
	deepEqual( Stem("riechschwämmchen"), "riechschwammch" );
	deepEqual( Stem("riecht"), "riecht" );
	deepEqual( Stem("rief"), "rief" );
	deepEqual( Stem("riefen"), "rief" );
	deepEqual( Stem("riegel"), "riegel" );
	deepEqual( Stem("riegelte"), "riegelt" );
	deepEqual( Stem("riemen"), "riem" );
	deepEqual( Stem("riese"), "ries" );
	deepEqual( Stem("rieseln"), "rieseln" );
	deepEqual( Stem("rieselt"), "rieselt" );
	deepEqual( Stem("rieselte"), "rieselt" );
	deepEqual( Stem("rieselten"), "rieselt" );
	deepEqual( Stem("riesen"), "ries" );
	deepEqual( Stem("riesenfülle"), "riesenfull" );
	deepEqual( Stem("riesengebirge"), "riesengebirg" );
	deepEqual( Stem("riesengebirges"), "riesengebirg" );
	deepEqual( Stem("riesengross"), "riesengross" );
	deepEqual( Stem("riesengrosse"), "riesengross" );
	deepEqual( Stem("riesengrosser"), "riesengross" );
	deepEqual( Stem("riesengrosses"), "riesengross" );
	deepEqual( Stem("riesengrund"), "riesengrund" );
	deepEqual( Stem("riesenhafte"), "riesenhaft" );
	deepEqual( Stem("riesenhafter"), "riesenhaft" );
	deepEqual( Stem("riesenhund"), "riesenhund" );
	deepEqual( Stem("riesenkamme"), "riesenkamm" );
	deepEqual( Stem("riesenkanone"), "riesenkanon" );
	deepEqual( Stem("riesenköpfige"), "riesenkopf" );
	deepEqual( Stem("riesenkraft"), "riesenkraft" );
	deepEqual( Stem("riesenlanges"), "riesenlang" );
	deepEqual( Stem("riesenmade"), "riesenmad" );
	deepEqual( Stem("riesenmässiger"), "riesenmass" );
	deepEqual( Stem("riesenpferde"), "riesenpferd" );
	deepEqual( Stem("riesenzacken"), "riesenzack" );
	deepEqual( Stem("riesige"), "riesig" );
	deepEqual( Stem("riesigen"), "riesig" );
	deepEqual( Stem("riesiger"), "riesig" );
	deepEqual( Stem("riet"), "riet" );
	deepEqual( Stem("rieten"), "riet" );
	deepEqual( Stem("rin"), "rin" );
	deepEqual( Stem("rina"), "rina" );
	deepEqual( Stem("rinde"), "rind" );
	deepEqual( Stem("rindenklunsen"), "rindenkluns" );
	deepEqual( Stem("rindensubstanz"), "rindensubstanz" );
	deepEqual( Stem("rindensubstanzen"), "rindensubstanz" );
	deepEqual( Stem("rinder"), "rind" );
	deepEqual( Stem("rindern"), "rind" );
	deepEqual( Stem("rinderwahn"), "rinderwahn" );
	deepEqual( Stem("rindes"), "rind" );
	deepEqual( Stem("rindfleisch"), "rindfleisch" );
	deepEqual( Stem("rindvieh"), "rindvieh" );
	deepEqual( Stem("rindviehs"), "rindvieh" );
	deepEqual( Stem("ring"), "ring" );
	deepEqual( Stem("ringe"), "ring" );
	deepEqual( Stem("ringelchen"), "ringelch" );
	deepEqual( Stem("ringellocken"), "ringellock" );
	deepEqual( Stem("ringelreih"), "ringelreih" );
	deepEqual( Stem("ringelten"), "ringelt" );
	deepEqual( Stem("ringen"), "ring" );
	deepEqual( Stem("ringenden"), "ringend" );
	deepEqual( Stem("ringern"), "ring" );
	deepEqual( Stem("ringes"), "ring" );
	deepEqual( Stem("ringetausch"), "ringetausch" );
	deepEqual( Stem("ringgeschmückten"), "ringgeschmuckt" );
	deepEqual( Stem("ringier"), "ringi" );
	deepEqual( Stem("ringlein"), "ringlein" );
	deepEqual( Stem("ringmauer"), "ringmau" );
	deepEqual( Stem("ringmauern"), "ringmau" );
	deepEqual( Stem("rings"), "ring" );
	deepEqual( Stem("ringsherum"), "ringsherum" );
	deepEqual( Stem("ringsum"), "ringsum" );
	deepEqual( Stem("ringsumher"), "ringsumh" );
	deepEqual( Stem("ringvorlesung"), "ringvorles" );
	deepEqual( Stem("rinne"), "rinn" );
	deepEqual( Stem("rinnen"), "rinn" );
	deepEqual( Stem("rinnt"), "rinnt" );
	deepEqual( Stem("rippe"), "ripp" );
	deepEqual( Stem("rippen"), "ripp" );
	deepEqual( Stem("rippenbrüche"), "rippenbruch" );
	deepEqual( Stem("rippenstösse"), "rippenstoss" );
	deepEqual( Stem("risiken"), "risik" );
	deepEqual( Stem("risiko"), "risiko" );
	deepEqual( Stem("riskiert"), "riskiert" );
	deepEqual( Stem("riss"), "riss" );
	deepEqual( Stem("riß"), "riss" );
	deepEqual( Stem("risse"), "riss" );
	deepEqual( Stem("rissen"), "riss" );
	deepEqual( Stem("risses"), "riss" );
	deepEqual( Stem("rith"), "rith" );
	deepEqual( Stem("ritikül"), "ritikul" );
	deepEqual( Stem("ritt"), "ritt" );
	deepEqual( Stem("ritten"), "ritt" );
	deepEqual( Stem("ritter"), "ritt" );
	deepEqual( Stem("ritterdienst"), "ritterdien" );
	deepEqual( Stem("ritterherr"), "ritterherr" );
	deepEqual( Stem("ritterherrlichen"), "ritterherr" );
	deepEqual( Stem("ritterlich"), "ritt" );
	deepEqual( Stem("ritterliche"), "ritt" );
	deepEqual( Stem("ritterlichen"), "ritt" );
	deepEqual( Stem("ritterlichkeit"), "ritter" );
	deepEqual( Stem("rittern"), "ritt" );
	deepEqual( Stem("ritternase"), "ritternas" );
	deepEqual( Stem("ritterrüstung"), "ritterrust" );
	deepEqual( Stem("ritters"), "ritt" );
	deepEqual( Stem("ritterschaft"), "ritterschaft" );
	deepEqual( Stem("rittersherr"), "rittersherr" );
	deepEqual( Stem("rittersherrn"), "rittersherrn" );
	deepEqual( Stem("rittersmann"), "rittersmann" );
	deepEqual( Stem("ritterstab"), "ritterstab" );
	deepEqual( Stem("rittes"), "ritt" );
	deepEqual( Stem("rittlings"), "rittling" );
	deepEqual( Stem("rituale"), "ritual" );
	deepEqual( Stem("ritus"), "ritus" );
	deepEqual( Stem("ritzen"), "ritz" );
	deepEqual( Stem("rivalen"), "rival" );
	deepEqual( Stem("rnit"), "rnit" );
	deepEqual( Stem("road"), "road" );
	deepEqual( Stem("robespierre"), "robespierr" );
	deepEqual( Stem("roch"), "roch" );
	deepEqual( Stem("röche"), "roch" );
	deepEqual( Stem("rock"), "rock" );
	deepEqual( Stem("röck"), "rock" );
	deepEqual( Stem("rockärmel"), "rockarmel" );
	deepEqual( Stem("röckchen"), "rockch" );
	deepEqual( Stem("rocke"), "rock" );
	deepEqual( Stem("röcke"), "rock" );
	deepEqual( Stem("röcken"), "rock" );
	deepEqual( Stem("rockes"), "rock" );
	deepEqual( Stem("rockschlippchenende"), "rockschlippchen" );
	deepEqual( Stem("rockschoss"), "rockschoss" );
	deepEqual( Stem("rocktasche"), "rocktasch" );
	deepEqual( Stem("rocktaschen"), "rocktasch" );
	deepEqual( Stem("rodeten"), "rodet" );
	deepEqual( Stem("roh"), "roh" );
	deepEqual( Stem("rohe"), "roh" );
	deepEqual( Stem("roheiten"), "roheit" );
	deepEqual( Stem("rohen"), "roh" );
	deepEqual( Stem("roher"), "roh" );
	deepEqual( Stem("rohes"), "roh" );
	deepEqual( Stem("rohesten"), "roh" );
	deepEqual( Stem("rohr"), "rohr" );
	deepEqual( Stem("rohrdurchwachsenen"), "rohrdurchwachs" );
	deepEqual( Stem("röhre"), "rohr" );
	deepEqual( Stem("rohrstock"), "rohrstock" );
	deepEqual( Stem("rolf"), "rolf" );
	deepEqual( Stem("rolle"), "roll" );
	deepEqual( Stem("rollen"), "roll" );
	deepEqual( Stem("rollenden"), "rollend" );
	deepEqual( Stem("rollendes"), "rollend" );
	deepEqual( Stem("rollfeld"), "rollfeld" );
	deepEqual( Stem("rollsteine"), "rollstein" );
	deepEqual( Stem("rollt"), "rollt" );
	deepEqual( Stem("rollte"), "rollt" );
	deepEqual( Stem("rollten"), "rollt" );
	deepEqual( Stem("rollwalze"), "rollwalz" );
	deepEqual( Stem("rom"), "rom" );
	deepEqual( Stem("roman"), "roman" );
	deepEqual( Stem("romane"), "roman" );
	deepEqual( Stem("romanes"), "roman" );
	deepEqual( Stem("romanhelden"), "romanheld" );
	deepEqual( Stem("romanshorn"), "romanshorn" );
	deepEqual( Stem("romantische"), "romant" );
	deepEqual( Stem("romantischer"), "romant" );
	deepEqual( Stem("romantisches"), "romant" );
	deepEqual( Stem("romeo"), "romeo" );
	deepEqual( Stem("römisch"), "romisch" );
	deepEqual( Stem("römischen"), "romisch" );
	deepEqual( Stem("rosafarbenes"), "rosafarb" );
	deepEqual( Stem("rosan"), "rosan" );
	deepEqual( Stem("röschen"), "rosch" );
	deepEqual( Stem("rose"), "ros" );
	deepEqual( Stem("rosen"), "ros" );
	deepEqual( Stem("rosenbäumchen"), "rosenbaumch" );
	deepEqual( Stem("rosenbüsche"), "rosenbusch" );
	deepEqual( Stem("rosengärtchen"), "rosengartch" );
	deepEqual( Stem("rosenroten"), "rosenrot" );
	deepEqual( Stem("rosenroter"), "rosenrot" );
	deepEqual( Stem("rosenschimmer"), "rosenschimm" );
	deepEqual( Stem("rosental"), "rosental" );
	deepEqual( Stem("rosenwäldchen"), "rosenwaldch" );
	deepEqual( Stem("rosiges"), "rosig" );
	deepEqual( Stem("rosigster"), "rosig" );
	deepEqual( Stem("rosine"), "rosin" );
	deepEqual( Stem("rosinen"), "rosin" );
	deepEqual( Stem("röslein"), "roslein" );
	deepEqual( Stem("rosmarin"), "rosmarin" );
	deepEqual( Stem("rosmaringärtchen"), "rosmaringartch" );
	deepEqual( Stem("rosoli"), "rosoli" );
	deepEqual( Stem("ross"), "ross" );
	deepEqual( Stem("roß"), "ross" );
	deepEqual( Stem("rosse"), "ross" );
	deepEqual( Stem("rosselenker"), "rosselenk" );
	deepEqual( Stem("rossen"), "ross" );
	deepEqual( Stem("rosstäuscher"), "rosstausch" );
	deepEqual( Stem("roßtäuscher"), "rosstausch" );
	deepEqual( Stem("rost"), "rost" );
	deepEqual( Stem("rostige"), "rostig" );
	deepEqual( Stem("rostigen"), "rostig" );
	deepEqual( Stem("rostiger"), "rostig" );
	deepEqual( Stem("rostiges"), "rostig" );
	deepEqual( Stem("rot"), "rot" );
	deepEqual( Stem("rotbäckigen"), "rotback" );
	deepEqual( Stem("rotbäckiger"), "rotback" );
	deepEqual( Stem("rotbäckiges"), "rotback" );
	deepEqual( Stem("rotbekleidete"), "rotbekleidet" );
	deepEqual( Stem("rote"), "rot" );
	deepEqual( Stem("röte"), "rot" );
	deepEqual( Stem("rotem"), "rot" );
	deepEqual( Stem("roten"), "rot" );
	deepEqual( Stem("roter"), "rot" );
	deepEqual( Stem("rotes"), "rot" );
	deepEqual( Stem("rotgelbem"), "rotgelb" );
	deepEqual( Stem("rotgelben"), "rotgelb" );
	deepEqual( Stem("rothaarig"), "rothaar" );
	deepEqual( Stem("rothaarige"), "rothaar" );
	deepEqual( Stem("rothaarigen"), "rothaar" );
	deepEqual( Stem("rothäutigen"), "rothaut" );
	deepEqual( Stem("rotieren"), "roti" );
	deepEqual( Stem("rötliche"), "rotlich" );
	deepEqual( Stem("rötlichem"), "rotlich" );
	deepEqual( Stem("rötlichen"), "rotlich" );
	deepEqual( Stem("rötlicher"), "rotlich" );
	deepEqual( Stem("rötliches"), "rotlich" );
	deepEqual( Stem("rotseidenes"), "rotseid" );
	deepEqual( Stem("rotte"), "rott" );
	deepEqual( Stem("rottenweise"), "rottenweis" );
	deepEqual( Stem("rotwein"), "rotwein" );
	deepEqual( Stem("roulierende"), "roulier" );
	deepEqual( Stem("routine"), "routin" );
	deepEqual( Stem("routinesendung"), "routinesend" );
	deepEqual( Stem("rpd"), "rpd" );
	deepEqual( Stem("ruben"), "rub" );
	deepEqual( Stem("rüben"), "rub" );
	deepEqual( Stem("rubens"), "rub" );
	deepEqual( Stem("rübezahl"), "rubezahl" );
	deepEqual( Stem("rübezahls"), "rubezahl" );
	deepEqual( Stem("rubin"), "rubin" );
	deepEqual( Stem("rubinfunken"), "rubinfunk" );
	deepEqual( Stem("rubrik"), "rubrik" );
	deepEqual( Stem("rubriken"), "rubrik" );
	deepEqual( Stem("rübzählischen"), "rubzahl" );
	deepEqual( Stem("ruchbar"), "ruchbar" );
	deepEqual( Stem("ruchlosen"), "ruchlos" );
	deepEqual( Stem("ruchlosigkeit"), "ruchlos" );
	deepEqual( Stem("ruck"), "ruck" );
	deepEqual( Stem("rückantwortcouverts"), "ruckantwortcouvert" );
	deepEqual( Stem("rücke"), "ruck" );
	deepEqual( Stem("ruckelt"), "ruckelt" );
	deepEqual( Stem("rücken"), "ruck" );
	deepEqual( Stem("rückfall"), "ruckfall" );
	deepEqual( Stem("rückflug"), "ruckflug" );
	deepEqual( Stem("rückgängig"), "ruckgang" );
	deepEqual( Stem("rückgesetzten"), "ruckgesetzt" );
	deepEqual( Stem("rückhalt"), "ruckhalt" );
	deepEqual( Stem("rückhaltlos"), "ruckhaltlos" );
	deepEqual( Stem("rückhaltlose"), "ruckhaltlos" );
	deepEqual( Stem("rückhaltlosen"), "ruckhaltlos" );
	deepEqual( Stem("rückhaltlosigkeit"), "ruckhaltlos" );
	deepEqual( Stem("rückkehr"), "ruckkehr" );
	deepEqual( Stem("rucksack"), "rucksack" );
	deepEqual( Stem("rucksäcken"), "rucksack" );
	deepEqual( Stem("rückschauen"), "ruckschau" );
	deepEqual( Stem("rückschluss"), "ruckschluss" );
	deepEqual( Stem("rückseiten"), "ruckseit" );
	deepEqual( Stem("rücksicht"), "rucksicht" );
	deepEqual( Stem("rücksichten"), "rucksicht" );
	deepEqual( Stem("rücksichtslos"), "rucksichtslos" );
	deepEqual( Stem("rücksichtsloser"), "rucksichtslos" );
	deepEqual( Stem("rücksichtsloseste"), "rucksichtslos" );
	deepEqual( Stem("rücksichtslosigkeit"), "rucksichtslos" );
	deepEqual( Stem("rücksitze"), "rucksitz" );
	deepEqual( Stem("rückspiel"), "ruckspiel" );
	deepEqual( Stem("rückt"), "ruckt" );
	deepEqual( Stem("rückte"), "ruckt" );
	deepEqual( Stem("rücktritt"), "rucktritt" );
	deepEqual( Stem("rücktritten"), "rucktritt" );
	deepEqual( Stem("rücktrittszahlen"), "rucktrittszahl" );
	deepEqual( Stem("rückübertragung"), "ruckubertrag" );
	deepEqual( Stem("rückwärtigen"), "ruckwart" );
	deepEqual( Stem("rückwärts"), "ruckwart" );
	deepEqual( Stem("rückwechsel"), "ruckwechsel" );
	deepEqual( Stem("rückweg"), "ruckweg" );
	deepEqual( Stem("rückwege"), "ruckweg" );
	deepEqual( Stem("rückwirkungen"), "ruckwirk" );
	deepEqual( Stem("rückzahlungsrate"), "ruckzahlungsrat" );
	deepEqual( Stem("rückzug"), "ruckzug" );
	deepEqual( Stem("rudel"), "rudel" );
	deepEqual( Stem("rudeln"), "rudeln" );
	deepEqual( Stem("rudels"), "rudel" );
	deepEqual( Stem("ruder"), "rud" );
	deepEqual( Stem("ruderbank"), "ruderbank" );
	deepEqual( Stem("rudern"), "rud" );
	deepEqual( Stem("ruderte"), "rudert" );
	deepEqual( Stem("rudi"), "rudi" );
	deepEqual( Stem("rüdiger"), "rudig" );
	deepEqual( Stem("rue"), "rue" );
	deepEqual( Stem("ruedi"), "ruedi" );
	deepEqual( Stem("ruf"), "ruf" );
	deepEqual( Stem("rufe"), "ruf" );
	deepEqual( Stem("rufen"), "ruf" );
	deepEqual( Stem("rufende"), "rufend" );
	deepEqual( Stem("rufenden"), "rufend" );
	deepEqual( Stem("rufens"), "ruf" );
	deepEqual( Stem("rufes"), "ruf" );
	deepEqual( Stem("rufet"), "rufet" );
	deepEqual( Stem("ruft"), "ruft" );
	deepEqual( Stem("rüge"), "rug" );
	deepEqual( Stem("ruh"), "ruh" );
	deepEqual( Stem("ruhe"), "ruh" );
	deepEqual( Stem("ruhekissen"), "ruhekiss" );
	deepEqual( Stem("ruhen"), "ruh" );
	deepEqual( Stem("ruhende"), "ruhend" );
	deepEqual( Stem("ruhepunkten"), "ruhepunkt" );
	deepEqual( Stem("ruhet"), "ruhet" );
	deepEqual( Stem("ruhete"), "ruhet" );
	deepEqual( Stem("ruhevoll"), "ruhevoll" );
	deepEqual( Stem("ruhig"), "ruhig" );
	deepEqual( Stem("ruhige"), "ruhig" );
	deepEqual( Stem("ruhigem"), "ruhig" );
	deepEqual( Stem("ruhigen"), "ruhig" );
	deepEqual( Stem("ruhiger"), "ruhig" );
	deepEqual( Stem("ruhigeren"), "ruhig" );
	deepEqual( Stem("ruhiges"), "ruhig" );
	deepEqual( Stem("ruhigste"), "ruhig" );
	deepEqual( Stem("ruhigsten"), "ruhig" );
	deepEqual( Stem("ruhm"), "ruhm" );
	deepEqual( Stem("ruhme"), "ruhm" );
	deepEqual( Stem("rühmen"), "ruhm" );
	deepEqual( Stem("rühmenswerte"), "ruhmenswert" );
	deepEqual( Stem("ruhmes"), "ruhm" );
	deepEqual( Stem("rühmt"), "ruhmt" );
	deepEqual( Stem("rühmte"), "ruhmt" );
	deepEqual( Stem("ruhn"), "ruhn" );
	deepEqual( Stem("rühre"), "ruhr" );
	deepEqual( Stem("rühren"), "ruhr" );
	deepEqual( Stem("rührend"), "ruhrend" );
	deepEqual( Stem("rührenden"), "ruhrend" );
	deepEqual( Stem("rührender"), "ruhrend" );
	deepEqual( Stem("rühret"), "ruhret" );
	deepEqual( Stem("ruhrgebiet"), "ruhrgebiet" );
	deepEqual( Stem("rühriger"), "ruhrig" );
	deepEqual( Stem("rührigkeit"), "ruhrig" );
	deepEqual( Stem("rührt"), "ruhrt" );
	deepEqual( Stem("rührte"), "ruhrt" );
	deepEqual( Stem("rührten"), "ruhrt" );
	deepEqual( Stem("rührung"), "ruhrung" );
	deepEqual( Stem("ruht"), "ruht" );
	deepEqual( Stem("ruhte"), "ruht" );
	deepEqual( Stem("ruhten"), "ruht" );
	deepEqual( Stem("ruine"), "ruin" );
	deepEqual( Stem("ruiniert"), "ruiniert" );
	deepEqual( Stem("ruinierte"), "ruiniert" );
	deepEqual( Stem("rum"), "rum" );
	deepEqual( Stem("rumgebrumsel"), "rumgebrumsel" );
	deepEqual( Stem("rummelplatz"), "rummelplatz" );
	deepEqual( Stem("rumorte"), "rumort" );
	deepEqual( Stem("rumpelkammer"), "rumpelkamm" );
	deepEqual( Stem("rumpfe"), "rumpf" );
	deepEqual( Stem("rümpfte"), "rumpft" );
	deepEqual( Stem("rumrennen"), "rumrenn" );
	deepEqual( Stem("rund"), "rund" );
	deepEqual( Stem("runde"), "rund" );
	deepEqual( Stem("runden"), "rund" );
	deepEqual( Stem("runder"), "rund" );
	deepEqual( Stem("rundes"), "rund" );
	deepEqual( Stem("rundfunk"), "rundfunk" );
	deepEqual( Stem("rundfunks"), "rundfunk" );
	deepEqual( Stem("rundgang"), "rundgang" );
	deepEqual( Stem("rundheit"), "rundheit" );
	deepEqual( Stem("rundlich"), "rundlich" );
	deepEqual( Stem("rundlichen"), "rundlich" );
	deepEqual( Stem("rundschrift"), "rundschrift" );
	deepEqual( Stem("rundung"), "rundung" );
	deepEqual( Stem("runge"), "rung" );
	deepEqual( Stem("runterbracht"), "runterbracht" );
	deepEqual( Stem("runzeln"), "runzeln" );
	deepEqual( Stem("runzelreiche"), "runzelreich" );
	deepEqual( Stem("runzlige"), "runzlig" );
	deepEqual( Stem("runzligen"), "runzlig" );
	deepEqual( Stem("russ"), "russ" );
	deepEqual( Stem("ruß"), "russ" );
	deepEqual( Stem("russenpeitsche"), "russenpeitsch" );
	deepEqual( Stem("russes"), "russ" );
	deepEqual( Stem("rußes"), "russ" );
	deepEqual( Stem("russgesichtige"), "russgesicht" );
	deepEqual( Stem("russigen"), "russig" );
	deepEqual( Stem("russiger"), "russig" );
	deepEqual( Stem("russisch"), "russisch" );
	deepEqual( Stem("russland"), "russland" );
	deepEqual( Stem("rüstet"), "rustet" );
	deepEqual( Stem("rüstig"), "rustig" );
	deepEqual( Stem("rüstige"), "rustig" );
	deepEqual( Stem("rüstigen"), "rustig" );
	deepEqual( Stem("rüstiger"), "rustig" );
	deepEqual( Stem("rüstigkeit"), "rustig" );
	deepEqual( Stem("rüstung"), "rustung" );
	deepEqual( Stem("rute"), "rut" );
	deepEqual( Stem("ruten"), "rut" );
	deepEqual( Stem("rutenhieb"), "rutenhieb" );
	deepEqual( Stem("rutenstreiche"), "rutenstreich" );
	deepEqual( Stem("rutenwald"), "rutenwald" );
	deepEqual( Stem("rutschbahn"), "rutschbahn" );
	deepEqual( Stem("rutschbahnen"), "rutschbahn" );
	deepEqual( Stem("rutschte"), "rutscht" );
	deepEqual( Stem("rütteln"), "rutteln" );
	deepEqual( Stem("rüttelte"), "ruttelt" );
	deepEqual( Stem("rüttelten"), "ruttelt" );
	deepEqual( Stem("s"), "s" );
	deepEqual( Stem("saal"), "saal" );
	deepEqual( Stem("saale"), "saal" );
	deepEqual( Stem("saales"), "saal" );
	deepEqual( Stem("saalhälfte"), "saalhalft" );
	deepEqual( Stem("saat"), "saat" );
	deepEqual( Stem("saaten"), "saat" );
	deepEqual( Stem("saatfeld"), "saatfeld" );
	deepEqual( Stem("sabbath"), "sabbath" );
	deepEqual( Stem("sabbathe"), "sabbath" );
	deepEqual( Stem("sabbaths"), "sabbath" );
	deepEqual( Stem("sabbattollen"), "sabbattoll" );
	deepEqual( Stem("säbel"), "sabel" );
	deepEqual( Stem("säbelhieben"), "sabelhieb" );
	deepEqual( Stem("säbels"), "sabel" );
	deepEqual( Stem("sabine"), "sabin" );
	deepEqual( Stem("sacconex"), "sacconex" );
	deepEqual( Stem("sach"), "sach" );
	deepEqual( Stem("sache"), "sach" );
	deepEqual( Stem("sachen"), "sach" );
	deepEqual( Stem("sacherklärungen"), "sacherklar" );
	deepEqual( Stem("sachgemäss"), "sachgemass" );
	deepEqual( Stem("sachgemässen"), "sachgemass" );
	deepEqual( Stem("sachlage"), "sachlag" );
	deepEqual( Stem("sachliche"), "sachlich" );
	deepEqual( Stem("sachs"), "sach" );
	deepEqual( Stem("sachse"), "sachs" );
	deepEqual( Stem("sachsen"), "sachs" );
	deepEqual( Stem("sächsische"), "sachsisch" );
	deepEqual( Stem("sächsischen"), "sachsisch" );
	deepEqual( Stem("sacht"), "sacht" );
	deepEqual( Stem("sachte"), "sacht" );
	deepEqual( Stem("sachten"), "sacht" );
	deepEqual( Stem("sachverständigen"), "sachverstand" );
	deepEqual( Stem("sachzusammenhang"), "sachzusammenhang" );
	deepEqual( Stem("sack"), "sack" );
	deepEqual( Stem("säckchen"), "sackch" );
	deepEqual( Stem("säcke"), "sack" );
	deepEqual( Stem("säcken"), "sack" );
	deepEqual( Stem("sackgasse"), "sackgass" );
	deepEqual( Stem("sackuhr"), "sackuhr" );
	deepEqual( Stem("sacrosanctum"), "sacrosanctum" );
	deepEqual( Stem("saeculi"), "saeculi" );
	deepEqual( Stem("säet"), "saet" );
	deepEqual( Stem("saffianschuhe"), "saffianschuh" );
	deepEqual( Stem("saft"), "saft" );
	deepEqual( Stem("sag"), "sag" );
	deepEqual( Stem("sage"), "sag" );
	deepEqual( Stem("sagen"), "sag" );
	deepEqual( Stem("sägespäneleib"), "sagespaneleib" );
	deepEqual( Stem("saget"), "saget" );
	deepEqual( Stem("sagst"), "sagst" );
	deepEqual( Stem("sagt"), "sagt" );
	deepEqual( Stem("sägt"), "sagt" );
	deepEqual( Stem("sagte"), "sagt" );
	deepEqual( Stem("sagten"), "sagt" );
	deepEqual( Stem("sah"), "sah" );
	deepEqual( Stem("sähe"), "sah" );
	deepEqual( Stem("sahen"), "sah" );
	deepEqual( Stem("sähen"), "sah" );
	deepEqual( Stem("sahest"), "sah" );
	deepEqual( Stem("sahet"), "sahet" );
	deepEqual( Stem("sähet"), "sahet" );
	deepEqual( Stem("saint"), "saint" );
	deepEqual( Stem("saiten"), "sait" );
	deepEqual( Stem("saiteninstrument"), "saiteninstrument" );
	deepEqual( Stem("saiteninstrumente"), "saiteninstrument" );
	deepEqual( Stem("saitenspieler"), "saitenspiel" );
	deepEqual( Stem("sakra"), "sakra" );
	deepEqual( Stem("sakramente"), "sakrament" );
	deepEqual( Stem("sakramenten"), "sakrament" );
	deepEqual( Stem("sakramentsverwaltung"), "sakramentsverwalt" );
	deepEqual( Stem("säkular"), "sakular" );
	deepEqual( Stem("salami"), "salami" );
	deepEqual( Stem("salat"), "salat" );
	deepEqual( Stem("salatblatt"), "salatblatt" );
	deepEqual( Stem("salbte"), "salbt" );
	deepEqual( Stem("salbung"), "salbung" );
	deepEqual( Stem("salbungsvoll"), "salbungsvoll" );
	deepEqual( Stem("säle"), "sal" );
	deepEqual( Stem("sali"), "sali" );
	deepEqual( Stem("salis"), "salis" );
	deepEqual( Stem("salomo"), "salomo" );
	deepEqual( Stem("salomon"), "salomon" );
	deepEqual( Stem("salomos"), "salomos" );
	deepEqual( Stem("salutieren"), "saluti" );
	deepEqual( Stem("salutierend"), "salutier" );
	deepEqual( Stem("salvieren"), "salvi" );
	deepEqual( Stem("salz"), "salz" );
	deepEqual( Stem("salzbüchsl"), "salzbuchsl" );
	deepEqual( Stem("salzburg"), "salzburg" );
	deepEqual( Stem("salzburger"), "salzburg" );
	deepEqual( Stem("salze"), "salz" );
	deepEqual( Stem("salzgeist"), "salzgeist" );
	deepEqual( Stem("salzknappe"), "salzknapp" );
	deepEqual( Stem("salzknappen"), "salzknapp" );
	deepEqual( Stem("sam"), "sam" );
	deepEqual( Stem("sämann"), "samann" );
	deepEqual( Stem("samaria"), "samaria" );
	deepEqual( Stem("same"), "sam" );
	deepEqual( Stem("samen"), "sam" );
	deepEqual( Stem("samenkörner"), "samenkorn" );
	deepEqual( Stem("samenkraut"), "samenkraut" );
	deepEqual( Stem("samenreste"), "samenr" );
	deepEqual( Stem("samens"), "sam" );
	deepEqual( Stem("samm"), "samm" );
	deepEqual( Stem("sammelaktion"), "sammelaktion" );
	deepEqual( Stem("sammeln"), "sammeln" );
	deepEqual( Stem("sammelnd"), "sammelnd" );
	deepEqual( Stem("sammelt"), "sammelt" );
	deepEqual( Stem("sammelte"), "sammelt" );
	deepEqual( Stem("sammelten"), "sammelt" );
	deepEqual( Stem("sammet"), "sammet" );
	deepEqual( Stem("sammetfutter"), "sammetfutt" );
	deepEqual( Stem("sammetkleide"), "sammetkleid" );
	deepEqual( Stem("sammetrasen"), "sammetras" );
	deepEqual( Stem("sammetschärpe"), "sammetscharp" );
	deepEqual( Stem("sammetweste"), "sammetw" );
	deepEqual( Stem("sammle"), "samml" );
	deepEqual( Stem("sammlung"), "sammlung" );
	deepEqual( Stem("sammlungen"), "sammlung" );
	deepEqual( Stem("sample"), "sampl" );
	deepEqual( Stem("samstag"), "samstag" );
	deepEqual( Stem("samstagabend"), "samstagab" );
	deepEqual( Stem("samt"), "samt" );
	deepEqual( Stem("sämtlich"), "samtlich" );
	deepEqual( Stem("sämtliche"), "samtlich" );
	deepEqual( Stem("sämtlichen"), "samtlich" );
	deepEqual( Stem("sämtlicher"), "samtlich" );
	deepEqual( Stem("samtwämschen"), "samtwamsch" );
	deepEqual( Stem("samuel"), "samuel" );
	deepEqual( Stem("samuels"), "samuel" );
	deepEqual( Stem("sand"), "sand" );
	deepEqual( Stem("sande"), "sand" );
	deepEqual( Stem("sandes"), "sand" );
	deepEqual( Stem("sandige"), "sandig" );
	deepEqual( Stem("sandkörnern"), "sandkorn" );
	deepEqual( Stem("sandmann"), "sandmann" );
	deepEqual( Stem("sandmännchen"), "sandmannch" );
	deepEqual( Stem("sandmännchens"), "sandmannch" );
	deepEqual( Stem("sandmännchenschlitten"), "sandmannchenschlitt" );
	deepEqual( Stem("sandmanns"), "sandmann" );
	deepEqual( Stem("sandsiegel"), "sandsiegel" );
	deepEqual( Stem("sandstein"), "sandstein" );
	deepEqual( Stem("sandte"), "sandt" );
	deepEqual( Stem("sandten"), "sandt" );
	deepEqual( Stem("sanft"), "sanft" );
	deepEqual( Stem("sanfte"), "sanft" );
	deepEqual( Stem("sänfte"), "sanft" );
	deepEqual( Stem("sanftem"), "sanft" );
	deepEqual( Stem("sanften"), "sanft" );
	deepEqual( Stem("sänften"), "sanft" );
	deepEqual( Stem("sanfter"), "sanft" );
	deepEqual( Stem("sanftes"), "sanft" );
	deepEqual( Stem("sanftesten"), "sanft" );
	deepEqual( Stem("sanftleuchtenden"), "sanftleucht" );
	deepEqual( Stem("sanftmut"), "sanftmut" );
	deepEqual( Stem("sanftmütige"), "sanftmut" );
	deepEqual( Stem("sanftmütiger"), "sanftmut" );
	deepEqual( Stem("sanftsäuselndes"), "sanftsauselnd" );
	deepEqual( Stem("sang"), "sang" );
	deepEqual( Stem("sänge"), "sang" );
	deepEqual( Stem("sangen"), "sang" );
	deepEqual( Stem("sängen"), "sang" );
	deepEqual( Stem("sänger"), "sang" );
	deepEqual( Stem("sängerin"), "sangerin" );
	deepEqual( Stem("sangesbrüder"), "sangesbrud" );
	deepEqual( Stem("sank"), "sank" );
	deepEqual( Stem("sänke"), "sank" );
	deepEqual( Stem("sanken"), "sank" );
	deepEqual( Stem("sankt"), "sankt" );
	deepEqual( Stem("sanktionen"), "sanktion" );
	deepEqual( Stem("sanktionslos"), "sanktionslos" );
	deepEqual( Stem("sann"), "sann" );
	deepEqual( Stem("saphir"), "saphir" );
	deepEqual( Stem("saphirstein"), "saphirstein" );
	deepEqual( Stem("saphirsteines"), "saphirstein" );
	deepEqual( Stem("saphirsteins"), "saphirstein" );
	deepEqual( Stem("sapperlöter"), "sapperlot" );
	deepEqual( Stem("sappermenter"), "sapperment" );
	deepEqual( Stem("sarah"), "sarah" );
	deepEqual( Stem("sardes"), "sard" );
	deepEqual( Stem("sarg"), "sarg" );
	deepEqual( Stem("sarge"), "sarg" );
	deepEqual( Stem("särgen"), "sarg" );
	deepEqual( Stem("sarnen"), "sarn" );
	deepEqual( Stem("sass"), "sass" );
	deepEqual( Stem("saß"), "sass" );
	deepEqual( Stem("sässe"), "sass" );
	deepEqual( Stem("sassen"), "sass" );
	deepEqual( Stem("saßen"), "sass" );
	deepEqual( Stem("sässen"), "sass" );
	deepEqual( Stem("sät"), "sat" );
	deepEqual( Stem("satan"), "satan" );
	deepEqual( Stem("satanischen"), "satan" );
	deepEqual( Stem("satansunternehmen"), "satansunternehm" );
	deepEqual( Stem("säte"), "sat" );
	deepEqual( Stem("satellitenschüssel"), "satellitenschussel" );
	deepEqual( Stem("satirisch"), "satir" );
	deepEqual( Stem("satirische"), "satir" );
	deepEqual( Stem("satrap"), "satrap" );
	deepEqual( Stem("satt"), "satt" );
	deepEqual( Stem("sattelbandage"), "sattelbandag" );
	deepEqual( Stem("satteln"), "satteln" );
	deepEqual( Stem("sätteln"), "satteln" );
	deepEqual( Stem("sattgegessen"), "sattgegess" );
	deepEqual( Stem("sättigen"), "sattig" );
	deepEqual( Stem("sättigst"), "sattig" );
	deepEqual( Stem("sättigung"), "sattig" );
	deepEqual( Stem("sattsam"), "sattsam" );
	deepEqual( Stem("sattzuessen"), "sattzuess" );
	deepEqual( Stem("saturnalien"), "saturnali" );
	deepEqual( Stem("satz"), "satz" );
	deepEqual( Stem("satze"), "satz" );
	deepEqual( Stem("sätze"), "satz" );
	deepEqual( Stem("sätzen"), "satz" );
	deepEqual( Stem("satzes"), "satz" );
	deepEqual( Stem("satzung"), "satzung" );
	deepEqual( Stem("satzungen"), "satzung" );
	deepEqual( Stem("sau"), "sau" );
	deepEqual( Stem("sauber"), "saub" );
	deepEqual( Stem("saubere"), "saub" );
	deepEqual( Stem("sauberen"), "saub" );
	deepEqual( Stem("säuberlich"), "saub" );
	deepEqual( Stem("säubernde"), "saubernd" );
	deepEqual( Stem("sauberste"), "sauberst" );
	deepEqual( Stem("säuberte"), "saubert" );
	deepEqual( Stem("säubrer"), "saubr" );
	deepEqual( Stem("sauer"), "sau" );
	deepEqual( Stem("sauereien"), "sauerei" );
	deepEqual( Stem("sauerkraut"), "sauerkraut" );
	deepEqual( Stem("sauersüss"), "sauersuss" );
	deepEqual( Stem("säugamme"), "saugamm" );
	deepEqual( Stem("säugammen"), "saugamm" );
	deepEqual( Stem("säuge"), "saug" );
	deepEqual( Stem("saugen"), "saug" );
	deepEqual( Stem("säugen"), "saug" );
	deepEqual( Stem("säugende"), "saugend" );
	deepEqual( Stem("säugenden"), "saugend" );
	deepEqual( Stem("säugendes"), "saugend" );
	deepEqual( Stem("säugerin"), "saugerin" );
	deepEqual( Stem("saugeröhrchen"), "saugerohrch" );
	deepEqual( Stem("sauget"), "sauget" );
	deepEqual( Stem("säugling"), "saugling" );
	deepEqual( Stem("säuglinge"), "saugling" );
	deepEqual( Stem("säuglings"), "saugling" );
	deepEqual( Stem("säugt"), "saugt" );
	deepEqual( Stem("säugte"), "saugt" );
	deepEqual( Stem("säugung"), "saugung" );
	deepEqual( Stem("saul"), "saul" );
	deepEqual( Stem("säule"), "saul" );
	deepEqual( Stem("säulen"), "saul" );
	deepEqual( Stem("säulengängen"), "saulengang" );
	deepEqual( Stem("saum"), "saum" );
	deepEqual( Stem("saume"), "saum" );
	deepEqual( Stem("säume"), "saum" );
	deepEqual( Stem("säumend"), "saumend" );
	deepEqual( Stem("saumensch"), "saumensch" );
	deepEqual( Stem("säumet"), "saumet" );
	deepEqual( Stem("säumnis"), "saumnis" );
	deepEqual( Stem("säumte"), "saumt" );
	deepEqual( Stem("saus"), "saus" );
	deepEqual( Stem("sauschwab"), "sauschwab" );
	deepEqual( Stem("säuseln"), "sauseln" );
	deepEqual( Stem("säuselte"), "sauselt" );
	deepEqual( Stem("sausen"), "saus" );
	deepEqual( Stem("sausendem"), "sausend" );
	deepEqual( Stem("sauser"), "saus" );
	deepEqual( Stem("sausergelüste"), "sausergelust" );
	deepEqual( Stem("sausers"), "saus" );
	deepEqual( Stem("sauste"), "saust" );
	deepEqual( Stem("sausten"), "saust" );
	deepEqual( Stem("sautopf"), "sautopf" );
	deepEqual( Stem("savoyarde"), "savoyard" );
	deepEqual( Stem("savoyarden"), "savoyard" );
	deepEqual( Stem("savoyardenkinder"), "savoyardenkind" );
	deepEqual( Stem("savoyardenkindern"), "savoyardenkind" );
	deepEqual( Stem("savoyardin"), "savoyardin" );
	deepEqual( Stem("savoyen"), "savoy" );
	deepEqual( Stem("savoyens"), "savoy" );
	deepEqual( Stem("savoyische"), "savoy" );
	deepEqual( Stem("savoyischen"), "savoy" );
	deepEqual( Stem("schabernack"), "schabernack" );
	deepEqual( Stem("schäbig"), "schabig" );
	deepEqual( Stem("schäbige"), "schabig" );
	deepEqual( Stem("schabracken"), "schabrack" );
	deepEqual( Stem("schach"), "schach" );
	deepEqual( Stem("schachtel"), "schachtel" );
	deepEqual( Stem("schächtelchen"), "schachtelch" );
	deepEqual( Stem("schachteln"), "schachteln" );
	deepEqual( Stem("schad"), "schad" );
	deepEqual( Stem("schaddai"), "schaddai" );
	deepEqual( Stem("schaddais"), "schaddais" );
	deepEqual( Stem("schade"), "schad" );
	deepEqual( Stem("schädel"), "schadel" );
	deepEqual( Stem("schädelplatte"), "schadelplatt" );
	deepEqual( Stem("schaden"), "schad" );
	deepEqual( Stem("schäden"), "schad" );
	deepEqual( Stem("schadenfreude"), "schadenfreud" );
	deepEqual( Stem("schadenfrohem"), "schadenfroh" );
	deepEqual( Stem("schadet"), "schadet" );
	deepEqual( Stem("schadete"), "schadet" );
	deepEqual( Stem("schadhaft"), "schadhaft" );
	deepEqual( Stem("schädlich"), "schadlich" );
	deepEqual( Stem("schadlos"), "schadlos" );
	deepEqual( Stem("schaf"), "schaf" );
	deepEqual( Stem("schäfchen"), "schafch" );
	deepEqual( Stem("schäfchenhimmel"), "schafchenhimmel" );
	deepEqual( Stem("schäfchenstall"), "schafchenstall" );
	deepEqual( Stem("schafe"), "schaf" );
	deepEqual( Stem("schafen"), "schaf" );
	deepEqual( Stem("schäfer"), "schaf" );
	deepEqual( Stem("schäferhunde"), "schaferhund" );
	deepEqual( Stem("schafes"), "schaf" );
	deepEqual( Stem("schaff"), "schaff" );
	deepEqual( Stem("schaffen"), "schaff" );
	deepEqual( Stem("schaffl"), "schaffl" );
	deepEqual( Stem("schafft"), "schafft" );
	deepEqual( Stem("schaffte"), "schafft" );
	deepEqual( Stem("schafherde"), "schafherd" );
	deepEqual( Stem("schafhirt"), "schafhirt" );
	deepEqual( Stem("schafotte"), "schafott" );
	deepEqual( Stem("schafsköpf"), "schafskopf" );
	deepEqual( Stem("schafspelz"), "schafspelz" );
	deepEqual( Stem("schaft"), "schaft" );
	deepEqual( Stem("schakale"), "schakal" );
	deepEqual( Stem("schäkernd"), "schakernd" );
	deepEqual( Stem("schäkerte"), "schakert" );
	deepEqual( Stem("schal"), "schal" );
	deepEqual( Stem("schale"), "schal" );
	deepEqual( Stem("schalen"), "schal" );
	deepEqual( Stem("schälen"), "schal" );
	deepEqual( Stem("schalkhafter"), "schalkhaft" );
	deepEqual( Stem("schalkheit"), "schalkheit" );
	deepEqual( Stem("schalksblick"), "schalksblick" );
	deepEqual( Stem("schall"), "schall" );
	deepEqual( Stem("schallen"), "schall" );
	deepEqual( Stem("schallenden"), "schallend" );
	deepEqual( Stem("schallplatte"), "schallplatt" );
	deepEqual( Stem("schalt"), "schalt" );
	deepEqual( Stem("schalter"), "schalt" );
	deepEqual( Stem("schalterraum"), "schalterraum" );
	deepEqual( Stem("schalterschluß"), "schalterschluss" );
	deepEqual( Stem("schaltete"), "schaltet" );
	deepEqual( Stem("scham"), "scham" );
	deepEqual( Stem("schäme"), "scham" );
	deepEqual( Stem("schämen"), "scham" );
	deepEqual( Stem("schamhaft"), "schamhaft" );
	deepEqual( Stem("schamlosigkeit"), "schamlos" );
	deepEqual( Stem("schämst"), "scham" );
	deepEqual( Stem("schämt"), "schamt" );
	deepEqual( Stem("schämte"), "schamt" );
	deepEqual( Stem("schämten"), "schamt" );
	deepEqual( Stem("schand"), "schand" );
	deepEqual( Stem("schande"), "schand" );
	deepEqual( Stem("schändlich"), "schandlich" );
	deepEqual( Stem("schändliche"), "schandlich" );
	deepEqual( Stem("schar"), "schar" );
	deepEqual( Stem("scharen"), "schar" );
	deepEqual( Stem("scharf"), "scharf" );
	deepEqual( Stem("scharfe"), "scharf" );
	deepEqual( Stem("schärfe"), "scharf" );
	deepEqual( Stem("scharfen"), "scharf" );
	deepEqual( Stem("schärfen"), "scharf" );
	deepEqual( Stem("scharfer"), "scharf" );
	deepEqual( Stem("schärfer"), "scharf" );
	deepEqual( Stem("scharfes"), "scharf" );
	deepEqual( Stem("scharfsichtig"), "scharfsicht" );
	deepEqual( Stem("scharfsinn"), "scharfsinn" );
	deepEqual( Stem("scharfsinnig"), "scharfsinn" );
	deepEqual( Stem("scharfsinnige"), "scharfsinn" );
	deepEqual( Stem("scharfsinniger"), "scharfsinn" );
	deepEqual( Stem("scharfsinnigkeit"), "scharfsinn" );
	deepEqual( Stem("scharlach"), "scharlach" );
	deepEqual( Stem("scharlachuniform"), "scharlachuniform" );
	deepEqual( Stem("scharren"), "scharr" );
	deepEqual( Stem("scharrten"), "scharrt" );
	deepEqual( Stem("scharten"), "schart" );
	deepEqual( Stem("schatten"), "schatt" );
	deepEqual( Stem("schattenbilder"), "schattenbild" );
	deepEqual( Stem("schattendunklen"), "schattendunkl" );
	deepEqual( Stem("schattenreichen"), "schattenreich" );
	deepEqual( Stem("schattens"), "schatt" );
	deepEqual( Stem("schattenseite"), "schattenseit" );
	deepEqual( Stem("schattige"), "schattig" );
	deepEqual( Stem("schattigen"), "schattig" );
	deepEqual( Stem("schattiger"), "schattig" );
	deepEqual( Stem("schatz"), "schatz" );
	deepEqual( Stem("schätzbarste"), "schatzbarst" );
	deepEqual( Stem("schätzchen"), "schatzch" );
	deepEqual( Stem("schatze"), "schatz" );
	deepEqual( Stem("schätze"), "schatz" );
	deepEqual( Stem("schätzen"), "schatz" );
	deepEqual( Stem("schatzerl"), "schatzerl" );
	deepEqual( Stem("schatzgräber"), "schatzgrab" );
	deepEqual( Stem("schatzhause"), "schatzhaus" );
	deepEqual( Stem("schatzhäuser"), "schatzhaus" );
	deepEqual( Stem("schatzhäusern"), "schatzhaus" );
	deepEqual( Stem("schatzkästlein"), "schatzkastlein" );
	deepEqual( Stem("schätzt"), "schatzt" );
	deepEqual( Stem("schätzte"), "schatzt" );
	deepEqual( Stem("schätzten"), "schatzt" );
	deepEqual( Stem("schatzung"), "schatzung" );
	deepEqual( Stem("schau"), "schau" );
	deepEqual( Stem("schaubrote"), "schaubrot" );
	deepEqual( Stem("schaubroten"), "schaubrot" );
	deepEqual( Stem("schaubühne"), "schaubuhn" );
	deepEqual( Stem("schauder"), "schaud" );
	deepEqual( Stem("schauderhaft"), "schauderhaft" );
	deepEqual( Stem("schauderhaften"), "schauderhaft" );
	deepEqual( Stem("schaudern"), "schaud" );
	deepEqual( Stem("schaudert"), "schaudert" );
	deepEqual( Stem("schaue"), "schau" );
	deepEqual( Stem("schauen"), "schau" );
	deepEqual( Stem("schauer"), "schau" );
	deepEqual( Stem("schauergeschichten"), "schauergeschicht" );
	deepEqual( Stem("schauerlich"), "schau" );
	deepEqual( Stem("schauerlichen"), "schau" );
	deepEqual( Stem("schauerte"), "schauert" );
	deepEqual( Stem("schauet"), "schauet" );
	deepEqual( Stem("schaukelpferd"), "schaukelpferd" );
	deepEqual( Stem("schaukelpferdchen"), "schaukelpferdch" );
	deepEqual( Stem("schaukelte"), "schaukelt" );
	deepEqual( Stem("schaukelten"), "schaukelt" );
	deepEqual( Stem("schaum"), "schaum" );
	deepEqual( Stem("schäumend"), "schaumend" );
	deepEqual( Stem("schäumenden"), "schaumend" );
	deepEqual( Stem("schaumigen"), "schaumig" );
	deepEqual( Stem("schäumt"), "schaumt" );
	deepEqual( Stem("schauplatz"), "schauplatz" );
	deepEqual( Stem("schauplatze"), "schauplatz" );
	deepEqual( Stem("schaurig"), "schaurig" );
	deepEqual( Stem("schauspiel"), "schauspiel" );
	deepEqual( Stem("schauspiele"), "schauspiel" );
	deepEqual( Stem("schauspieler"), "schauspiel" );
	deepEqual( Stem("schauspielerin"), "schauspielerin" );
	deepEqual( Stem("schauspielern"), "schauspiel" );
	deepEqual( Stem("schauspielkunst"), "schauspielkun" );
	deepEqual( Stem("schauspielschule"), "schauspielschul" );
	deepEqual( Stem("schaust"), "schaust" );
	deepEqual( Stem("schaustellung"), "schaustell" );
	deepEqual( Stem("schaustellungen"), "schaustell" );
	deepEqual( Stem("schaut"), "schaut" );
	deepEqual( Stem("schautanz"), "schautanz" );
	deepEqual( Stem("schaute"), "schaut" );
	deepEqual( Stem("schauten"), "schaut" );
	deepEqual( Stem("scheba"), "scheba" );
	deepEqual( Stem("schebas"), "schebas" );
	deepEqual( Stem("scheelen"), "scheel" );
	deepEqual( Stem("scheht"), "scheht" );
	deepEqual( Stem("scheibe"), "scheib" );
	deepEqual( Stem("scheiben"), "scheib" );
	deepEqual( Stem("scheibenberaubten"), "scheibenberaubt" );
	deepEqual( Stem("scheibenstand"), "scheibenstand" );
	deepEqual( Stem("scheide"), "scheid" );
	deepEqual( Stem("scheidebrief"), "scheidebrief" );
	deepEqual( Stem("scheidekünstler"), "scheidekunstl" );
	deepEqual( Stem("scheiden"), "scheid" );
	deepEqual( Stem("scheidendes"), "scheidend" );
	deepEqual( Stem("scheidet"), "scheidet" );
	deepEqual( Stem("scheidewege"), "scheideweg" );
	deepEqual( Stem("scheidung"), "scheidung" );
	deepEqual( Stem("scheidungsritual"), "scheidungsritual" );
	deepEqual( Stem("schein"), "schein" );
	deepEqual( Stem("scheinbar"), "scheinbar" );
	deepEqual( Stem("scheinbare"), "scheinbar" );
	deepEqual( Stem("scheinbarem"), "scheinbar" );
	deepEqual( Stem("scheinbaren"), "scheinbar" );
	deepEqual( Stem("scheinbarer"), "scheinbar" );
	deepEqual( Stem("scheinbarere"), "scheinbar" );
	deepEqual( Stem("scheinbares"), "scheinbar" );
	deepEqual( Stem("scheinbarkeiten"), "scheinbar" );
	deepEqual( Stem("scheine"), "schein" );
	deepEqual( Stem("scheinen"), "schein" );
	deepEqual( Stem("scheinende"), "scheinend" );
	deepEqual( Stem("scheinendes"), "scheinend" );
	deepEqual( Stem("scheines"), "schein" );
	deepEqual( Stem("scheinet"), "scheinet" );
	deepEqual( Stem("scheinfürsten"), "scheinfurst" );
	deepEqual( Stem("scheingründe"), "scheingrund" );
	deepEqual( Stem("scheingutem"), "scheingut" );
	deepEqual( Stem("scheinheilig"), "scheinheil" );
	deepEqual( Stem("scheins"), "schein" );
	deepEqual( Stem("scheint"), "scheint" );
	deepEqual( Stem("scheintoten"), "scheintot" );
	deepEqual( Stem("scheinverkehr"), "scheinverkehr" );
	deepEqual( Stem("scheinwahrem"), "scheinwahr" );
	deepEqual( Stem("scheißkasten"), "scheisskast" );
	deepEqual( Stem("scheit"), "scheit" );
	deepEqual( Stem("scheitel"), "scheitel" );
	deepEqual( Stem("scheiterhaufen"), "scheiterhauf" );
	deepEqual( Stem("scheiterte"), "scheitert" );
	deepEqual( Stem("schelach"), "schelach" );
	deepEqual( Stem("schellenklang"), "schellenklang" );
	deepEqual( Stem("schellenspiel"), "schellenspiel" );
	deepEqual( Stem("schellte"), "schellt" );
	deepEqual( Stem("schelm"), "schelm" );
	deepEqual( Stem("schelme"), "schelm" );
	deepEqual( Stem("schelmenkind"), "schelmenkind" );
	deepEqual( Stem("schelmische"), "schelmisch" );
	deepEqual( Stem("scheloniten"), "schelonit" );
	deepEqual( Stem("schelten"), "schelt" );
	deepEqual( Stem("scheltende"), "scheltend" );
	deepEqual( Stem("scheltens"), "schelt" );
	deepEqual( Stem("schem"), "schem" );
	deepEqual( Stem("schema"), "schema" );
	deepEqual( Stem("schemata"), "schemata" );
	deepEqual( Stem("schemate"), "schemat" );
	deepEqual( Stem("schemel"), "schemel" );
	deepEqual( Stem("schemelchen"), "schemelch" );
	deepEqual( Stem("schemen"), "schem" );
	deepEqual( Stem("schenk"), "schenk" );
	deepEqual( Stem("schenke"), "schenk" );
	deepEqual( Stem("schenkeläufer"), "schenkelauf" );
	deepEqual( Stem("schenkeln"), "schenkeln" );
	deepEqual( Stem("schenken"), "schenk" );
	deepEqual( Stem("schenkst"), "schenk" );
	deepEqual( Stem("schenkstuben"), "schenkstub" );
	deepEqual( Stem("schenkte"), "schenkt" );
	deepEqual( Stem("schenkwirtes"), "schenkwirt" );
	deepEqual( Stem("schenkwirtschaft"), "schenkwirtschaft" );
	deepEqual( Stem("scherben"), "scherb" );
	deepEqual( Stem("schere"), "scher" );
	deepEqual( Stem("scherz"), "scherz" );
	deepEqual( Stem("scherze"), "scherz" );
	deepEqual( Stem("scherzen"), "scherz" );
	deepEqual( Stem("scherzend"), "scherzend" );
	deepEqual( Stem("scherzhafte"), "scherzhaft" );
	deepEqual( Stem("scherzhafterweise"), "scherzhafterweis" );
	deepEqual( Stem("scherzreden"), "scherzred" );
	deepEqual( Stem("scheth"), "scheth" );
	deepEqual( Stem("scheths"), "scheth" );
	deepEqual( Stem("scheu"), "scheu" );
	deepEqual( Stem("scheuchen"), "scheuch" );
	deepEqual( Stem("scheuchte"), "scheucht" );
	deepEqual( Stem("scheue"), "scheu" );
	deepEqual( Stem("scheuen"), "scheu" );
	deepEqual( Stem("scheuer"), "scheu" );
	deepEqual( Stem("scheuernden"), "scheuernd" );
	deepEqual( Stem("scheuert"), "scheuert" );
	deepEqual( Stem("scheuerte"), "scheuert" );
	deepEqual( Stem("scheuete"), "scheuet" );
	deepEqual( Stem("scheunchen"), "scheunch" );
	deepEqual( Stem("scheune"), "scheun" );
	deepEqual( Stem("scheunenböden"), "scheunenbod" );
	deepEqual( Stem("scheunentor"), "scheunentor" );
	deepEqual( Stem("scheusale"), "scheusal" );
	deepEqual( Stem("scheusslich"), "scheusslich" );
	deepEqual( Stem("scheusslichen"), "scheusslich" );
	deepEqual( Stem("scheußlichen"), "scheusslich" );
	deepEqual( Stem("scheut"), "scheut" );
	deepEqual( Stem("scheuten"), "scheut" );
	deepEqual( Stem("schichors"), "schichor" );
	deepEqual( Stem("schichten"), "schicht" );
	deepEqual( Stem("schick"), "schick" );
	deepEqual( Stem("schicken"), "schick" );
	deepEqual( Stem("schickende"), "schickend" );
	deepEqual( Stem("schicklich"), "schicklich" );
	deepEqual( Stem("schicklichen"), "schicklich" );
	deepEqual( Stem("schicklicher"), "schicklich" );
	deepEqual( Stem("schicksal"), "schicksal" );
	deepEqual( Stem("schicksalhaft"), "schicksalhaft" );
	deepEqual( Stem("schicksals"), "schicksal" );
	deepEqual( Stem("schicksalsrufe"), "schicksalsruf" );
	deepEqual( Stem("schicksalswendungen"), "schicksalswend" );
	deepEqual( Stem("schickt"), "schickt" );
	deepEqual( Stem("schickte"), "schickt" );
	deepEqual( Stem("schickten"), "schickt" );
	deepEqual( Stem("schiebend"), "schiebend" );
	deepEqual( Stem("schiebt"), "schiebt" );
	deepEqual( Stem("schiechen"), "schiech" );
	deepEqual( Stem("schied"), "schied" );
	deepEqual( Stem("schieden"), "schied" );
	deepEqual( Stem("schief"), "schief" );
	deepEqual( Stem("schiefe"), "schief" );
	deepEqual( Stem("schiefer"), "schief" );
	deepEqual( Stem("schiefertafeln"), "schiefertafeln" );
	deepEqual( Stem("schiefes"), "schief" );
	deepEqual( Stem("schieläugigen"), "schielaug" );
	deepEqual( Stem("schielen"), "schiel" );
	deepEqual( Stem("schielten"), "schielt" );
	deepEqual( Stem("schien"), "schien" );
	deepEqual( Stem("schiene"), "schien" );
	deepEqual( Stem("schienen"), "schien" );
	deepEqual( Stem("schier"), "schier" );
	deepEqual( Stem("schiess"), "schiess" );
	deepEqual( Stem("schiessbaumwolle"), "schiessbaumwoll" );
	deepEqual( Stem("schiessbaumwollpatrone"), "schiessbaumwollpatron" );
	deepEqual( Stem("schiessen"), "schiess" );
	deepEqual( Stem("schießen"), "schiess" );
	deepEqual( Stem("schiessend"), "schiessend" );
	deepEqual( Stem("schiessenden"), "schiessend" );
	deepEqual( Stem("schiessn"), "schiessn" );
	deepEqual( Stem("schiessprügel"), "schiessprugel" );
	deepEqual( Stem("schiesst"), "schiesst" );
	deepEqual( Stem("schiff"), "schiff" );
	deepEqual( Stem("schiffbaren"), "schiffbar" );
	deepEqual( Stem("schiffe"), "schiff" );
	deepEqual( Stem("schiffen"), "schiff" );
	deepEqual( Stem("schiffer"), "schiff" );
	deepEqual( Stem("schiffern"), "schiff" );
	deepEqual( Stem("schiffleute"), "schiffleut" );
	deepEqual( Stem("schiffshauptmann"), "schiffshauptmann" );
	deepEqual( Stem("schiffslände"), "schiffsland" );
	deepEqual( Stem("schiffsleuten"), "schiffsleut" );
	deepEqual( Stem("schild"), "schild" );
	deepEqual( Stem("schilde"), "schild" );
	deepEqual( Stem("schildern"), "schild" );
	deepEqual( Stem("schildert"), "schildert" );
	deepEqual( Stem("schilderten"), "schildert" );
	deepEqual( Stem("schilderung"), "schilder" );
	deepEqual( Stem("schildkröte"), "schildkrot" );
	deepEqual( Stem("schildkrötenbouillon"), "schildkrotenbouillon" );
	deepEqual( Stem("schildkrötschalen"), "schildkrotschal" );
	deepEqual( Stem("schildpattgewölbe"), "schildpattgewolb" );
	deepEqual( Stem("schildpattkämme"), "schildpattkamm" );
	deepEqual( Stem("schilf"), "schilf" );
	deepEqual( Stem("schilfkeulen"), "schilfkeul" );
	deepEqual( Stem("schilfmeer"), "schilfme" );
	deepEqual( Stem("schilfmeeres"), "schilfme" );
	deepEqual( Stem("schilfrohr"), "schilfrohr" );
	deepEqual( Stem("schilfrohrs"), "schilfrohr" );
	deepEqual( Stem("schilfs"), "schilf" );
	deepEqual( Stem("schilfstöckchen"), "schilfstockch" );
	deepEqual( Stem("schilfwiesen"), "schilfwies" );
	deepEqual( Stem("schillernden"), "schillernd" );
	deepEqual( Stem("schillers"), "schill" );
	deepEqual( Stem("schimeon"), "schimeon" );
	deepEqual( Stem("schimeons"), "schimeon" );
	deepEqual( Stem("schimmel"), "schimmel" );
	deepEqual( Stem("schimmer"), "schimm" );
	deepEqual( Stem("schimmern"), "schimm" );
	deepEqual( Stem("schimmernd"), "schimmernd" );
	deepEqual( Stem("schimmernde"), "schimmernd" );
	deepEqual( Stem("schimmernden"), "schimmernd" );
	deepEqual( Stem("schimmernder"), "schimmernd" );
	deepEqual( Stem("schimmert"), "schimmert" );
	deepEqual( Stem("schimmerte"), "schimmert" );
	deepEqual( Stem("schimmerten"), "schimmert" );
	deepEqual( Stem("schimpf"), "schimpf" );
	deepEqual( Stem("schimpfen"), "schimpf" );
	deepEqual( Stem("schimpfendes"), "schimpfend" );
	deepEqual( Stem("schimpflichen"), "schimpflich" );
	deepEqual( Stem("schimpfworten"), "schimpfwort" );
	deepEqual( Stem("schindanger"), "schindang" );
	deepEqual( Stem("schinde"), "schind" );
	deepEqual( Stem("schindeldach"), "schindeldach" );
	deepEqual( Stem("schinden"), "schind" );
	deepEqual( Stem("schinken"), "schink" );
	deepEqual( Stem("schiphra"), "schiphra" );
	deepEqual( Stem("schirm"), "schirm" );
	deepEqual( Stem("schirren"), "schirr" );
	deepEqual( Stem("schirrl"), "schirrl" );
	deepEqual( Stem("schla"), "schla" );
	deepEqual( Stem("schlacht"), "schlacht" );
	deepEqual( Stem("schlachte"), "schlacht" );
	deepEqual( Stem("schlachten"), "schlacht" );
	deepEqual( Stem("schlachtheeren"), "schlachthe" );
	deepEqual( Stem("schlachtopfer"), "schlachtopf" );
	deepEqual( Stem("schlachtopfern"), "schlachtopf" );
	deepEqual( Stem("schlachtung"), "schlachtung" );
	deepEqual( Stem("schlaf"), "schlaf" );
	deepEqual( Stem("schlafe"), "schlaf" );
	deepEqual( Stem("schläfe"), "schlaf" );
	deepEqual( Stem("schlafen"), "schlaf" );
	deepEqual( Stem("schläfen"), "schlaf" );
	deepEqual( Stem("schlafend"), "schlafend" );
	deepEqual( Stem("schlafende"), "schlafend" );
	deepEqual( Stem("schlafenden"), "schlafend" );
	deepEqual( Stem("schlafender"), "schlafend" );
	deepEqual( Stem("schlafes"), "schlaf" );
	deepEqual( Stem("schlaffen"), "schlaff" );
	deepEqual( Stem("schlafgefährten"), "schlafgefahrt" );
	deepEqual( Stem("schlafkammer"), "schlafkamm" );
	deepEqual( Stem("schlafkammern"), "schlafkamm" );
	deepEqual( Stem("schlafkappen"), "schlafkapp" );
	deepEqual( Stem("schlaflied"), "schlaflied" );
	deepEqual( Stem("schlaflose"), "schlaflos" );
	deepEqual( Stem("schlafloser"), "schlaflos" );
	deepEqual( Stem("schlaflust"), "schlaflust" );
	deepEqual( Stem("schläfrig"), "schlafrig" );
	deepEqual( Stem("schlafrock"), "schlafrock" );
	deepEqual( Stem("schlafrockzipfel"), "schlafrockzipfel" );
	deepEqual( Stem("schläfst"), "schlaf" );
	deepEqual( Stem("schläft"), "schlaft" );
	deepEqual( Stem("schlaftrunken"), "schlaftrunk" );
	deepEqual( Stem("schlafwandel"), "schlafwandel" );
	deepEqual( Stem("schlafzimmer"), "schlafzimm" );
	deepEqual( Stem("schlag"), "schlag" );
	deepEqual( Stem("schläg"), "schlag" );
	deepEqual( Stem("schlage"), "schlag" );
	deepEqual( Stem("schläge"), "schlag" );
	deepEqual( Stem("schlagen"), "schlag" );
	deepEqual( Stem("schlägen"), "schlag" );
	deepEqual( Stem("schlagend"), "schlagend" );
	deepEqual( Stem("schlager"), "schlag" );
	deepEqual( Stem("schlages"), "schlag" );
	deepEqual( Stem("schlaget"), "schlaget" );
	deepEqual( Stem("schlagfertig"), "schlagfert" );
	deepEqual( Stem("schlagn"), "schlagn" );
	deepEqual( Stem("schlagsahne"), "schlagsahn" );
	deepEqual( Stem("schlagsahnenkegel"), "schlagsahnenkegel" );
	deepEqual( Stem("schlagschatten"), "schlagschatt" );
	deepEqual( Stem("schlägst"), "schlag" );
	deepEqual( Stem("schlägt"), "schlagt" );
	deepEqual( Stem("schlang"), "schlang" );
	deepEqual( Stem("schlange"), "schlang" );
	deepEqual( Stem("schlängeln"), "schlangeln" );
	deepEqual( Stem("schlängelte"), "schlangelt" );
	deepEqual( Stem("schlangen"), "schlang" );
	deepEqual( Stem("schlangengifte"), "schlangengift" );
	deepEqual( Stem("schlangenstirn"), "schlangenstirn" );
	deepEqual( Stem("schlänglein"), "schlanglein" );
	deepEqual( Stem("schlank"), "schlank" );
	deepEqual( Stem("schlankaufgerichtet"), "schlankaufgerichtet" );
	deepEqual( Stem("schlanke"), "schlank" );
	deepEqual( Stem("schlankem"), "schlank" );
	deepEqual( Stem("schlanken"), "schlank" );
	deepEqual( Stem("schlanker"), "schlank" );
	deepEqual( Stem("schlankere"), "schlank" );
	deepEqual( Stem("schlankes"), "schlank" );
	deepEqual( Stem("schlankgewachsenes"), "schlankgewachs" );
	deepEqual( Stem("schlankheit"), "schlankheit" );
	deepEqual( Stem("schlappen"), "schlapp" );
	deepEqual( Stem("schlappschuhen"), "schlappschuh" );
	deepEqual( Stem("schlau"), "schlau" );
	deepEqual( Stem("schlauchboot"), "schlauchboot" );
	deepEqual( Stem("schlaucherl"), "schlaucherl" );
	deepEqual( Stem("schlaue"), "schlau" );
	deepEqual( Stem("schlauen"), "schlau" );
	deepEqual( Stem("schlauer"), "schlau" );
	deepEqual( Stem("schlaues"), "schlau" );
	deepEqual( Stem("schlauheit"), "schlauheit" );
	deepEqual( Stem("schlauheiten"), "schlauheit" );
	deepEqual( Stem("schlecht"), "schlecht" );
	deepEqual( Stem("schlechte"), "schlecht" );
	deepEqual( Stem("schlechtem"), "schlecht" );
	deepEqual( Stem("schlechten"), "schlecht" );
	deepEqual( Stem("schlechter"), "schlecht" );
	deepEqual( Stem("schlechterdings"), "schlechterding" );
	deepEqual( Stem("schlechteren"), "schlecht" );
	deepEqual( Stem("schlechteres"), "schlecht" );
	deepEqual( Stem("schlechtes"), "schlecht" );
	deepEqual( Stem("schlechteste"), "schlecht" );
	deepEqual( Stem("schlechtesten"), "schlecht" );
	deepEqual( Stem("schlechthin"), "schlechthin" );
	deepEqual( Stem("schlechtigkeit"), "schlechtig" );
	deepEqual( Stem("schlechtigkeitsmesser"), "schlechtigkeitsmess" );
	deepEqual( Stem("schlechtweg"), "schlechtweg" );
	deepEqual( Stem("schlecken"), "schleck" );
	deepEqual( Stem("schleckerfritze"), "schleckerfritz" );
	deepEqual( Stem("schlegel"), "schlegel" );
	deepEqual( Stem("schlegelschuss"), "schlegelschuss" );
	deepEqual( Stem("schleiche"), "schleich" );
	deepEqual( Stem("schleichen"), "schleich" );
	deepEqual( Stem("schleichenden"), "schleichend" );
	deepEqual( Stem("schleicher"), "schleich" );
	deepEqual( Stem("schleichst"), "schleich" );
	deepEqual( Stem("schleicht"), "schleicht" );
	deepEqual( Stem("schleier"), "schleier" );
	deepEqual( Stem("schleifen"), "schleif" );
	deepEqual( Stem("schleifte"), "schleift" );
	deepEqual( Stem("schleiften"), "schleift" );
	deepEqual( Stem("schlemmen"), "schlemm" );
	deepEqual( Stem("schlemmer"), "schlemm" );
	deepEqual( Stem("schlendernd"), "schlendernd" );
	deepEqual( Stem("schlenderte"), "schlendert" );
	deepEqual( Stem("schlenkerte"), "schlenkert" );
	deepEqual( Stem("schleppe"), "schlepp" );
	deepEqual( Stem("schleppen"), "schlepp" );
	deepEqual( Stem("schleppenden"), "schleppend" );
	deepEqual( Stem("schlepptau"), "schlepptau" );
	deepEqual( Stem("schleppte"), "schleppt" );
	deepEqual( Stem("schleppten"), "schleppt" );
	deepEqual( Stem("schlesier"), "schlesi" );
	deepEqual( Stem("schleswig"), "schleswig" );
	deepEqual( Stem("schleuder"), "schleud" );
	deepEqual( Stem("schleudern"), "schleud" );
	deepEqual( Stem("schleuderte"), "schleudert" );
	deepEqual( Stem("schleunig"), "schleunig" );
	deepEqual( Stem("schleunigst"), "schleunig" );
	deepEqual( Stem("schleuse"), "schleus" );
	deepEqual( Stem("schleusen"), "schleus" );
	deepEqual( Stem("schlich"), "schlich" );
	deepEqual( Stem("schlichen"), "schlich" );
	deepEqual( Stem("schlicht"), "schlicht" );
	deepEqual( Stem("schlichte"), "schlicht" );
	deepEqual( Stem("schlichten"), "schlicht" );
	deepEqual( Stem("schlichtesten"), "schlicht" );
	deepEqual( Stem("schlichtet"), "schlichtet" );
	deepEqual( Stem("schlickversteckens"), "schlickversteck" );
	deepEqual( Stem("schlief"), "schlief" );
	deepEqual( Stem("schliefen"), "schlief" );
	deepEqual( Stem("schliess"), "schliess" );
	deepEqual( Stem("schließ"), "schliess" );
	deepEqual( Stem("schliesse"), "schliess" );
	deepEqual( Stem("schliessen"), "schliess" );
	deepEqual( Stem("schließen"), "schliess" );
	deepEqual( Stem("schliessend"), "schliessend" );
	deepEqual( Stem("schliesslich"), "schliesslich" );
	deepEqual( Stem("schließlich"), "schliesslich" );
	deepEqual( Stem("schliesslichen"), "schliesslich" );
	deepEqual( Stem("schließlichen"), "schliesslich" );
	deepEqual( Stem("schliesst"), "schliesst" );
	deepEqual( Stem("schließt"), "schliesst" );
	deepEqual( Stem("schlimm"), "schlimm" );
	deepEqual( Stem("schlimme"), "schlimm" );
	deepEqual( Stem("schlimmen"), "schlimm" );
	deepEqual( Stem("schlimmer"), "schlimm" );
	deepEqual( Stem("schlimmere"), "schlimm" );
	deepEqual( Stem("schlimmeres"), "schlimm" );
	deepEqual( Stem("schlimmern"), "schlimm" );
	deepEqual( Stem("schlimmes"), "schlimm" );
	deepEqual( Stem("schlimmste"), "schlimm" );
	deepEqual( Stem("schlimmsten"), "schlimm" );
	deepEqual( Stem("schlinge"), "schling" );
	deepEqual( Stem("schlingen"), "schling" );
	deepEqual( Stem("schlingt"), "schlingt" );
	deepEqual( Stem("schlitten"), "schlitt" );
	deepEqual( Stem("schlittenbahn"), "schlittenbahn" );
	deepEqual( Stem("schlittenfahrt"), "schlittenfahrt" );
	deepEqual( Stem("schlittens"), "schlitt" );
	deepEqual( Stem("schlittenzierat"), "schlittenzierat" );
	deepEqual( Stem("schlittenzug"), "schlittenzug" );
	deepEqual( Stem("schlohweissseidenen"), "schlohweissseid" );
	deepEqual( Stem("schlohweißseidenen"), "schlohweissseid" );
	deepEqual( Stem("schloss"), "schloss" );
	deepEqual( Stem("schloß"), "schloss" );
	deepEqual( Stem("schlosse"), "schloss" );
	deepEqual( Stem("schlossen"), "schloss" );
	deepEqual( Stem("schlösser"), "schloss" );
	deepEqual( Stem("schlosses"), "schloss" );
	deepEqual( Stem("schlossgesellschaft"), "schlossgesellschaft" );
	deepEqual( Stem("schloßgesellschaft"), "schlossgesellschaft" );
	deepEqual( Stem("schlosshof"), "schlosshof" );
	deepEqual( Stem("schloßhof"), "schlosshof" );
	deepEqual( Stem("schlossstall"), "schlossstall" );
	deepEqual( Stem("schloßstall"), "schlossstall" );
	deepEqual( Stem("schlossstil"), "schlossstil" );
	deepEqual( Stem("schloßstil"), "schlossstil" );
	deepEqual( Stem("schlosstor"), "schlosstor" );
	deepEqual( Stem("schloßtor"), "schlosstor" );
	deepEqual( Stem("schlottrig"), "schlottrig" );
	deepEqual( Stem("schlottrige"), "schlottrig" );
	deepEqual( Stem("schlucht"), "schlucht" );
	deepEqual( Stem("schluchten"), "schlucht" );
	deepEqual( Stem("schluchzend"), "schluchzend" );
	deepEqual( Stem("schluchzte"), "schluchzt" );
	deepEqual( Stem("schluchzten"), "schluchzt" );
	deepEqual( Stem("schluck"), "schluck" );
	deepEqual( Stem("schluckend"), "schluckend" );
	deepEqual( Stem("schlücklein"), "schlucklein" );
	deepEqual( Stem("schluckte"), "schluckt" );
	deepEqual( Stem("schlug"), "schlug" );
	deepEqual( Stem("schlugen"), "schlug" );
	deepEqual( Stem("schlummerlosen"), "schlummerlos" );
	deepEqual( Stem("schlummertrunkenen"), "schlummertrunk" );
	deepEqual( Stem("schlund"), "schlund" );
	deepEqual( Stem("schlüpfen"), "schlupf" );
	deepEqual( Stem("schlüpferig"), "schlupfer" );
	deepEqual( Stem("schlüpft"), "schlupft" );
	deepEqual( Stem("schlüpfte"), "schlupft" );
	deepEqual( Stem("schlüpften"), "schlupft" );
	deepEqual( Stem("schlupfwinkel"), "schlupfwinkel" );
	deepEqual( Stem("schlupfwinkeln"), "schlupfwinkeln" );
	deepEqual( Stem("schlurfen"), "schlurf" );
	deepEqual( Stem("schlürft"), "schlurft" );
	deepEqual( Stem("schluss"), "schluss" );
	deepEqual( Stem("schluß"), "schluss" );
	deepEqual( Stem("schlussabrechnung"), "schlussabrechn" );
	deepEqual( Stem("schlußabrechnung"), "schlussabrechn" );
	deepEqual( Stem("schlusse"), "schluss" );
	deepEqual( Stem("schlüsse"), "schluss" );
	deepEqual( Stem("schlüssel"), "schlussel" );
	deepEqual( Stem("schlüsselblumen"), "schlusselblum" );
	deepEqual( Stem("schlüsselloch"), "schlusselloch" );
	deepEqual( Stem("schlüssen"), "schluss" );
	deepEqual( Stem("schlusses"), "schluss" );
	deepEqual( Stem("schlussfolgerungen"), "schlussfolger" );
	deepEqual( Stem("schlußfolgerungen"), "schlussfolger" );
	deepEqual( Stem("schlussform"), "schlussform" );
	deepEqual( Stem("schlußform"), "schlussform" );
	deepEqual( Stem("schlusshandlung"), "schlusshandl" );
	deepEqual( Stem("schlüssig"), "schlussig" );
	deepEqual( Stem("schlusspunkt"), "schlusspunkt" );
	deepEqual( Stem("schlußpunkt"), "schlusspunkt" );
	deepEqual( Stem("schlusspunkte"), "schlusspunkt" );
	deepEqual( Stem("schlußpunkte"), "schlusspunkt" );
	deepEqual( Stem("schlusssatze"), "schlusssatz" );
	deepEqual( Stem("schmach"), "schmach" );
	deepEqual( Stem("schmachten"), "schmacht" );
	deepEqual( Stem("schmachtend"), "schmachtend" );
	deepEqual( Stem("schmachtet"), "schmachtet" );
	deepEqual( Stem("schmachtete"), "schmachtet" );
	deepEqual( Stem("schmächtig"), "schmachtig" );
	deepEqual( Stem("schmächtige"), "schmachtig" );
	deepEqual( Stem("schmäher"), "schmah" );
	deepEqual( Stem("schmählich"), "schmahlich" );
	deepEqual( Stem("schmählichste"), "schmahlich" );
	deepEqual( Stem("schmal"), "schmal" );
	deepEqual( Stem("schmale"), "schmal" );
	deepEqual( Stem("schmalem"), "schmal" );
	deepEqual( Stem("schmalen"), "schmal" );
	deepEqual( Stem("schmaler"), "schmal" );
	deepEqual( Stem("schmäler"), "schmal" );
	deepEqual( Stem("schmales"), "schmal" );
	deepEqual( Stem("schmatzend"), "schmatzend" );
	deepEqual( Stem("schmatzte"), "schmatzt" );
	deepEqual( Stem("schmauchend"), "schmauchend" );
	deepEqual( Stem("schmaucht"), "schmaucht" );
	deepEqual( Stem("schmauchte"), "schmaucht" );
	deepEqual( Stem("schmeckt"), "schmeckt" );
	deepEqual( Stem("schmeckte"), "schmeckt" );
	deepEqual( Stem("schmeckten"), "schmeckt" );
	deepEqual( Stem("schmeichel"), "schmeichel" );
	deepEqual( Stem("schmeichelei"), "schmeichelei" );
	deepEqual( Stem("schmeichelhaft"), "schmeichelhaft" );
	deepEqual( Stem("schmeichelhafter"), "schmeichelhaft" );
	deepEqual( Stem("schmeicheln"), "schmeicheln" );
	deepEqual( Stem("schmeichelnder"), "schmeichelnd" );
	deepEqual( Stem("schmeichelt"), "schmeichelt" );
	deepEqual( Stem("schmeichelte"), "schmeichelt" );
	deepEqual( Stem("schmeichelten"), "schmeichelt" );
	deepEqual( Stem("schmeißt"), "schmeisst" );
	deepEqual( Stem("schmelzend"), "schmelzend" );
	deepEqual( Stem("schmelzende"), "schmelzend" );
	deepEqual( Stem("schmelzer"), "schmelz" );
	deepEqual( Stem("schmelzers"), "schmelz" );
	deepEqual( Stem("schmelzt"), "schmelzt" );
	deepEqual( Stem("schmer"), "schmer" );
	deepEqual( Stem("schmerz"), "schmerz" );
	deepEqual( Stem("schmerze"), "schmerz" );
	deepEqual( Stem("schmerzen"), "schmerz" );
	deepEqual( Stem("schmerzens"), "schmerz" );
	deepEqual( Stem("schmerzes"), "schmerz" );
	deepEqual( Stem("schmerzhaft"), "schmerzhaft" );
	deepEqual( Stem("schmerzhaften"), "schmerzhaft" );
	deepEqual( Stem("schmerzhafter"), "schmerzhaft" );
	deepEqual( Stem("schmerzhaftesten"), "schmerzhaft" );
	deepEqual( Stem("schmerzlich"), "schmerzlich" );
	deepEqual( Stem("schmerzlichen"), "schmerzlich" );
	deepEqual( Stem("schmerzlicher"), "schmerzlich" );
	deepEqual( Stem("schmerzlos"), "schmerzlos" );
	deepEqual( Stem("schmerzlose"), "schmerzlos" );
	deepEqual( Stem("schmerzt"), "schmerzt" );
	deepEqual( Stem("schmerzte"), "schmerzt" );
	deepEqual( Stem("schmerzten"), "schmerzt" );
	deepEqual( Stem("schmerzvollen"), "schmerzvoll" );
	deepEqual( Stem("schmetterlinge"), "schmetterling" );
	deepEqual( Stem("schmetternde"), "schmetternd" );
	deepEqual( Stem("schmetternden"), "schmetternd" );
	deepEqual( Stem("schmetterten"), "schmettert" );
	deepEqual( Stem("schmid"), "schmid" );
	deepEqual( Stem("schmied"), "schmied" );
	deepEqual( Stem("schmiedeberg"), "schmiedeberg" );
	deepEqual( Stem("schmiegsam"), "schmiegsam" );
	deepEqual( Stem("schmiegt"), "schmiegt" );
	deepEqual( Stem("schmiegte"), "schmiegt" );
	deepEqual( Stem("schmiegten"), "schmiegt" );
	deepEqual( Stem("schmierseife"), "schmierseif" );
	deepEqual( Stem("schmierte"), "schmiert" );
	deepEqual( Stem("schmirgel"), "schmirgel" );
	deepEqual( Stem("schmolle"), "schmoll" );
	deepEqual( Stem("schmollen"), "schmoll" );
	deepEqual( Stem("schmollend"), "schmollend" );
	deepEqual( Stem("schmollende"), "schmollend" );
	deepEqual( Stem("schmollenden"), "schmollend" );
	deepEqual( Stem("schmollendes"), "schmollend" );
	deepEqual( Stem("schmollens"), "schmoll" );
	deepEqual( Stem("schmoller"), "schmoll" );
	deepEqual( Stem("schmollerei"), "schmollerei" );
	deepEqual( Stem("schmollkunst"), "schmollkun" );
	deepEqual( Stem("schmollte"), "schmollt" );
	deepEqual( Stem("schmollwesen"), "schmollwes" );
	deepEqual( Stem("schmolz"), "schmolz" );
	deepEqual( Stem("schmuck"), "schmuck" );
	deepEqual( Stem("schmucke"), "schmuck" );
	deepEqual( Stem("schmucken"), "schmuck" );
	deepEqual( Stem("schmücken"), "schmuck" );
	deepEqual( Stem("schmucker"), "schmuck" );
	deepEqual( Stem("schmuckes"), "schmuck" );
	deepEqual( Stem("schmuckkämme"), "schmuckkamm" );
	deepEqual( Stem("schmucks"), "schmuck" );
	deepEqual( Stem("schmückte"), "schmuckt" );
	deepEqual( Stem("schmunzeln"), "schmunzeln" );
	deepEqual( Stem("schmunzelnd"), "schmunzelnd" );
	deepEqual( Stem("schmunzelte"), "schmunzelt" );
	deepEqual( Stem("schmutz"), "schmutz" );
	deepEqual( Stem("schmutzig"), "schmutzig" );
	deepEqual( Stem("schmutzige"), "schmutzig" );
	deepEqual( Stem("schmutzigem"), "schmutzig" );
	deepEqual( Stem("schmutzigen"), "schmutzig" );
	deepEqual( Stem("schmutziges"), "schmutzig" );
	deepEqual( Stem("schnäbel"), "schnabel" );
	deepEqual( Stem("schnäbelchen"), "schnabelch" );
	deepEqual( Stem("schnabulieren"), "schnabuli" );
	deepEqual( Stem("schnabulierte"), "schnabuliert" );
	deepEqual( Stem("schnallen"), "schnall" );
	deepEqual( Stem("schnallte"), "schnallt" );
	deepEqual( Stem("schnalzenden"), "schnalzend" );
	deepEqual( Stem("schnalzte"), "schnalzt" );
	deepEqual( Stem("schnappen"), "schnapp" );
	deepEqual( Stem("schnappende"), "schnappend" );
	deepEqual( Stem("schnappte"), "schnappt" );
	deepEqual( Stem("schnappten"), "schnappt" );
	deepEqual( Stem("schnaps"), "schnaps" );
	deepEqual( Stem("schnäpschen"), "schnapsch" );
	deepEqual( Stem("schnäpse"), "schnaps" );
	deepEqual( Stem("schnarrte"), "schnarrt" );
	deepEqual( Stem("schnaubte"), "schnaubt" );
	deepEqual( Stem("schnaubten"), "schnaubt" );
	deepEqual( Stem("schnaufen"), "schnauf" );
	deepEqual( Stem("schnaufend"), "schnaufend" );
	deepEqual( Stem("schnaufender"), "schnaufend" );
	deepEqual( Stem("schnaufte"), "schnauft" );
	deepEqual( Stem("schnauze"), "schnauz" );
	deepEqual( Stem("schnäuzer"), "schnauz" );
	deepEqual( Stem("schnauzte"), "schnauzt" );
	deepEqual( Stem("schnecken"), "schneck" );
	deepEqual( Stem("schnee"), "schnee" );
	deepEqual( Stem("schneebällchen"), "schneeballch" );
	deepEqual( Stem("schneeberge"), "schneeberg" );
	deepEqual( Stem("schneeflocken"), "schneeflock" );
	deepEqual( Stem("schneegeschichten"), "schneegeschicht" );
	deepEqual( Stem("schneegestöber"), "schneegestob" );
	deepEqual( Stem("schneegestöbers"), "schneegestob" );
	deepEqual( Stem("schneeglanz"), "schneeglanz" );
	deepEqual( Stem("schneegrube"), "schneegrub" );
	deepEqual( Stem("schneegrubenwand"), "schneegrubenwand" );
	deepEqual( Stem("schneehaarige"), "schneehaar" );
	deepEqual( Stem("schneeige"), "schneeig" );
	deepEqual( Stem("schneeiges"), "schneeig" );
	deepEqual( Stem("schneeliedem"), "schneelied" );
	deepEqual( Stem("schneelieder"), "schneelied" );
	deepEqual( Stem("schneemeer"), "schneeme" );
	deepEqual( Stem("schneesendungen"), "schneesend" );
	deepEqual( Stem("schneeweiss"), "schneeweiss" );
	deepEqual( Stem("schneeweisse"), "schneeweiss" );
	deepEqual( Stem("schneeweissem"), "schneeweiss" );
	deepEqual( Stem("schneeweissen"), "schneeweiss" );
	deepEqual( Stem("schneeweißen"), "schneeweiss" );
	deepEqual( Stem("schneeweisser"), "schneeweiss" );
	deepEqual( Stem("schneeweisses"), "schneeweiss" );
	deepEqual( Stem("schneide"), "schneid" );
	deepEqual( Stem("schneiden"), "schneid" );
	deepEqual( Stem("schneidend"), "schneidend" );
	deepEqual( Stem("schneidenden"), "schneidend" );
	deepEqual( Stem("schneider"), "schneid" );
	deepEqual( Stem("schneiderberufe"), "schneiderberuf" );
	deepEqual( Stem("schneiderblütchen"), "schneiderblutch" );
	deepEqual( Stem("schneiderfestzug"), "schneiderfestzug" );
	deepEqual( Stem("schneidergesellen"), "schneidergesell" );
	deepEqual( Stem("schneidergruppen"), "schneidergrupp" );
	deepEqual( Stem("schneiderlein"), "schneiderlein" );
	deepEqual( Stem("schneidermässig"), "schneidermass" );
	deepEqual( Stem("schneidermeister"), "schneidermeist" );
	deepEqual( Stem("schneidermeisters"), "schneidermeist" );
	deepEqual( Stem("schneiders"), "schneid" );
	deepEqual( Stem("schneidersleute"), "schneidersleut" );
	deepEqual( Stem("schneiderwelt"), "schneiderwelt" );
	deepEqual( Stem("schneiderwesen"), "schneiderwes" );
	deepEqual( Stem("schneidest"), "schneid" );
	deepEqual( Stem("schneidet"), "schneidet" );
	deepEqual( Stem("schneidigste"), "schneidig" );
	deepEqual( Stem("schneien"), "schneien" );
	deepEqual( Stem("schneit"), "schneit" );
	deepEqual( Stem("schneite"), "schneit" );
	deepEqual( Stem("schnell"), "schnell" );
	deepEqual( Stem("schnelläufer"), "schnellauf" );
	deepEqual( Stem("schnelle"), "schnell" );
	deepEqual( Stem("schnellen"), "schnell" );
	deepEqual( Stem("schneller"), "schnell" );
	deepEqual( Stem("schnelles"), "schnell" );
	deepEqual( Stem("schnelligkeit"), "schnellig" );
	deepEqual( Stem("schnellsten"), "schnell" );
	deepEqual( Stem("schnellte"), "schnellt" );
	deepEqual( Stem("schnepfe"), "schnepf" );
	deepEqual( Stem("schnepfen"), "schnepf" );
	deepEqual( Stem("schnepfengarn"), "schnepfengarn" );
	deepEqual( Stem("schnepflein"), "schnepflein" );
	deepEqual( Stem("schnepper"), "schnepp" );
	deepEqual( Stem("schneppers"), "schnepp" );
	deepEqual( Stem("schneuz"), "schneuz" );
	deepEqual( Stem("schneuzen"), "schneuz" );
	deepEqual( Stem("schnippchen"), "schnippch" );
	deepEqual( Stem("schnippel"), "schnippel" );
	deepEqual( Stem("schnippeln"), "schnippeln" );
	deepEqual( Stem("schnippisch"), "schnippisch" );
	deepEqual( Stem("schnitt"), "schnitt" );
	deepEqual( Stem("schnitthaaren"), "schnitthaar" );
	deepEqual( Stem("schnitzarbeit"), "schnitzarbeit" );
	deepEqual( Stem("schnitzbild"), "schnitzbild" );
	deepEqual( Stem("schnitzbildern"), "schnitzbild" );
	deepEqual( Stem("schnitzelten"), "schnitzelt" );
	deepEqual( Stem("schnitzereien"), "schnitzerei" );
	deepEqual( Stem("schnitzwerk"), "schnitzwerk" );
	deepEqual( Stem("schnöde"), "schnod" );
	deepEqual( Stem("schnöden"), "schnod" );
	deepEqual( Stem("schnöder"), "schnod" );
	deepEqual( Stem("schnödes"), "schnod" );
	deepEqual( Stem("schnörkel"), "schnorkel" );
	deepEqual( Stem("schnörkels"), "schnorkel" );
	deepEqual( Stem("schnüffelnd"), "schnuffelnd" );
	deepEqual( Stem("schnüffelte"), "schnuffelt" );
	deepEqual( Stem("schnupfen"), "schnupf" );
	deepEqual( Stem("schnupfennase"), "schnupfennas" );
	deepEqual( Stem("schnupft"), "schnupft" );
	deepEqual( Stem("schnupftuch"), "schnupftuch" );
	deepEqual( Stem("schnuppengestöber"), "schnuppengestob" );
	deepEqual( Stem("schnuppern"), "schnupp" );
	deepEqual( Stem("schnupperte"), "schnuppert" );
	deepEqual( Stem("schnur"), "schnur" );
	deepEqual( Stem("schnürchen"), "schnurch" );
	deepEqual( Stem("schnüre"), "schnur" );
	deepEqual( Stem("schnüren"), "schnur" );
	deepEqual( Stem("schnürlein"), "schnurlein" );
	deepEqual( Stem("schnurr"), "schnurr" );
	deepEqual( Stem("schnurrbart"), "schnurrbart" );
	deepEqual( Stem("schnurrbärtchen"), "schnurrbartch" );
	deepEqual( Stem("schnürst"), "schnurst" );
	deepEqual( Stem("schnürte"), "schnurt" );
	deepEqual( Stem("schnürten"), "schnurt" );
	deepEqual( Stem("schob"), "schob" );
	deepEqual( Stem("schoben"), "schob" );
	deepEqual( Stem("schoham"), "schoham" );
	deepEqual( Stem("schokolade"), "schokolad" );
	deepEqual( Stem("schokoladenplätzchen"), "schokoladenplatzch" );
	deepEqual( Stem("schokoladenplätzchenkies"), "schokoladenplatzchenki" );
	deepEqual( Stem("schokoladenwege"), "schokoladenweg" );
	deepEqual( Stem("scholl"), "scholl" );
	deepEqual( Stem("schollen"), "scholl" );
	deepEqual( Stem("schon"), "schon" );
	deepEqual( Stem("schön"), "schon" );
	deepEqual( Stem("schöne"), "schon" );
	deepEqual( Stem("schönem"), "schon" );
	deepEqual( Stem("schonen"), "schon" );
	deepEqual( Stem("schönen"), "schon" );
	deepEqual( Stem("schonende"), "schonend" );
	deepEqual( Stem("schöner"), "schon" );
	deepEqual( Stem("schönere"), "schon" );
	deepEqual( Stem("schöneres"), "schon" );
	deepEqual( Stem("schönern"), "schon" );
	deepEqual( Stem("schöners"), "schon" );
	deepEqual( Stem("schönes"), "schon" );
	deepEqual( Stem("schöngebautes"), "schongebaut" );
	deepEqual( Stem("schöngelegenes"), "schongeleg" );
	deepEqual( Stem("schönheit"), "schonheit" );
	deepEqual( Stem("schonn"), "schonn" );
	deepEqual( Stem("schöns"), "schon" );
	deepEqual( Stem("schönst"), "schon" );
	deepEqual( Stem("schönste"), "schon" );
	deepEqual( Stem("schönsten"), "schon" );
	deepEqual( Stem("schönstes"), "schon" );
	deepEqual( Stem("schonung"), "schonung" );
	deepEqual( Stem("schonungslos"), "schonungslos" );
	deepEqual( Stem("school"), "school" );
	deepEqual( Stem("schopenhauer"), "schopenhau" );
	deepEqual( Stem("schopenhauers"), "schopenhau" );
	deepEqual( Stem("schöpfe"), "schopf" );
	deepEqual( Stem("schöpfen"), "schopf" );
	deepEqual( Stem("schöpfer"), "schopf" );
	deepEqual( Stem("schöpft"), "schopft" );
	deepEqual( Stem("schöpfte"), "schopft" );
	deepEqual( Stem("schöpften"), "schopft" );
	deepEqual( Stem("schöpfung"), "schopfung" );
	deepEqual( Stem("schöpfungstage"), "schopfungstag" );
	deepEqual( Stem("schöppchen"), "schoppch" );
	deepEqual( Stem("schoppen"), "schopp" );
	deepEqual( Stem("schöpsenfleisch"), "schopsenfleisch" );
	deepEqual( Stem("schorf"), "schorf" );
	deepEqual( Stem("schornstein"), "schornstein" );
	deepEqual( Stem("schornsteinfeger"), "schornsteinfeg" );
	deepEqual( Stem("schoss"), "schoss" );
	deepEqual( Stem("schoß"), "schoss" );
	deepEqual( Stem("schosse"), "schoss" );
	deepEqual( Stem("schoße"), "schoss" );
	deepEqual( Stem("schossen"), "schoss" );
	deepEqual( Stem("schoten"), "schot" );
	deepEqual( Stem("schottischen"), "schottisch" );
	deepEqual( Stem("schrabenhauser"), "schrabenhaus" );
	deepEqual( Stem("schräg"), "schrag" );
	deepEqual( Stem("schräger"), "schrag" );
	deepEqual( Stem("schrak"), "schrak" );
	deepEqual( Stem("schrammelquartett"), "schrammelquartett" );
	deepEqual( Stem("schrammen"), "schramm" );
	deepEqual( Stem("schrank"), "schrank" );
	deepEqual( Stem("schränke"), "schrank" );
	deepEqual( Stem("schranken"), "schrank" );
	deepEqual( Stem("schrankes"), "schrank" );
	deepEqual( Stem("schrauben"), "schraub" );
	deepEqual( Stem("schraubte"), "schraubt" );
	deepEqual( Stem("schreck"), "schreck" );
	deepEqual( Stem("schreckbare"), "schreckbar" );
	deepEqual( Stem("schreckbarste"), "schreckbarst" );
	deepEqual( Stem("schrecken"), "schreck" );
	deepEqual( Stem("schreckens"), "schreck" );
	deepEqual( Stem("schreckensherrschaft"), "schreckensherrschaft" );
	deepEqual( Stem("schrecket"), "schrecket" );
	deepEqual( Stem("schrecklich"), "schrecklich" );
	deepEqual( Stem("schreckliche"), "schrecklich" );
	deepEqual( Stem("schrecklichen"), "schrecklich" );
	deepEqual( Stem("schrecklicher"), "schrecklich" );
	deepEqual( Stem("schreckmittel"), "schreckmittel" );
	deepEqual( Stem("schrei"), "schrei" );
	deepEqual( Stem("schreibart"), "schreibart" );
	deepEqual( Stem("schreibe"), "schreib" );
	deepEqual( Stem("schreiben"), "schreib" );
	deepEqual( Stem("schreiber"), "schreib" );
	deepEqual( Stem("schreibereien"), "schreiberei" );
	deepEqual( Stem("schreibmaschinenfräulein"), "schreibmaschinenfraulein" );
	deepEqual( Stem("schreibpapier"), "schreibpapi" );
	deepEqual( Stem("schreibt"), "schreibt" );
	deepEqual( Stem("schreibtafel"), "schreibtafel" );
	deepEqual( Stem("schreibtisch"), "schreibtisch" );
	deepEqual( Stem("schreibtischs"), "schreibtisch" );
	deepEqual( Stem("schreibzeug"), "schreibzeug" );
	deepEqual( Stem("schreien"), "schreien" );
	deepEqual( Stem("schreiend"), "schreiend" );
	deepEqual( Stem("schreiende"), "schreiend" );
	deepEqual( Stem("schreit"), "schreit" );
	deepEqual( Stem("schreiten"), "schreit" );
	deepEqual( Stem("schreitendes"), "schreitend" );
	deepEqual( Stem("schreitet"), "schreitet" );
	deepEqual( Stem("schrie"), "schrie" );
	deepEqual( Stem("schrieb"), "schrieb" );
	deepEqual( Stem("schrieben"), "schrieb" );
	deepEqual( Stem("schrieen"), "schrieen" );
	deepEqual( Stem("schrift"), "schrift" );
	deepEqual( Stem("schriften"), "schrift" );
	deepEqual( Stem("schriftgelehrten"), "schriftgelehrt" );
	deepEqual( Stem("schriftgelehrter"), "schriftgelehrt" );
	deepEqual( Stem("schriftlich"), "schriftlich" );
	deepEqual( Stem("schriftlicher"), "schriftlich" );
	deepEqual( Stem("schriftsteller"), "schriftstell" );
	deepEqual( Stem("schriftstellern"), "schriftstell" );
	deepEqual( Stem("schriftstücke"), "schriftstuck" );
	deepEqual( Stem("schrill"), "schrill" );
	deepEqual( Stem("schrille"), "schrill" );
	deepEqual( Stem("schrillem"), "schrill" );
	deepEqual( Stem("schrillend"), "schrillend" );
	deepEqual( Stem("schriller"), "schrill" );
	deepEqual( Stem("schritt"), "schritt" );
	deepEqual( Stem("schritte"), "schritt" );
	deepEqual( Stem("schritten"), "schritt" );
	deepEqual( Stem("schrittes"), "schritt" );
	deepEqual( Stem("schrofen"), "schrof" );
	deepEqual( Stem("schroffe"), "schroff" );
	deepEqual( Stem("schroffes"), "schroff" );
	deepEqual( Stem("schröpfköpfe"), "schropfkopf" );
	deepEqual( Stem("schrörschnauzaschenbecher"), "schrorschnauzaschenbech" );
	deepEqual( Stem("schrörschnauzaschenbechern"), "schrorschnauzaschenbech" );
	deepEqual( Stem("schrotkörner"), "schrotkorn" );
	deepEqual( Stem("schrott"), "schrott" );
	deepEqual( Stem("schubert"), "schubert" );
	deepEqual( Stem("schuberts"), "schubert" );
	deepEqual( Stem("schublade"), "schublad" );
	deepEqual( Stem("schubladen"), "schublad" );
	deepEqual( Stem("schüchtern"), "schucht" );
	deepEqual( Stem("schüchterne"), "schuchtern" );
	deepEqual( Stem("schüchternen"), "schuchtern" );
	deepEqual( Stem("schüchternheit"), "schuchtern" );
	deepEqual( Stem("schuchzend"), "schuchzend" );
	deepEqual( Stem("schuf"), "schuf" );
	deepEqual( Stem("schuft"), "schuft" );
	deepEqual( Stem("schufte"), "schuft" );
	deepEqual( Stem("schuh"), "schuh" );
	deepEqual( Stem("schuhe"), "schuh" );
	deepEqual( Stem("schuhen"), "schuh" );
	deepEqual( Stem("schuhläden"), "schuhlad" );
	deepEqual( Stem("schuhmacher"), "schuhmach" );
	deepEqual( Stem("schuhnägeln"), "schuhnageln" );
	deepEqual( Stem("schuhsohlen"), "schuhsohl" );
	deepEqual( Stem("schul"), "schul" );
	deepEqual( Stem("schulbücher"), "schulbuch" );
	deepEqual( Stem("schuld"), "schuld" );
	deepEqual( Stem("schulden"), "schuld" );
	deepEqual( Stem("schuldenschreiber"), "schuldenschreib" );
	deepEqual( Stem("schuldenverkehrs"), "schuldenverkehr" );
	deepEqual( Stem("schuldenwesen"), "schuldenwes" );
	deepEqual( Stem("schuldig"), "schuldig" );
	deepEqual( Stem("schuldige"), "schuldig" );
	deepEqual( Stem("schuldigen"), "schuldig" );
	deepEqual( Stem("schuldigkeit"), "schuldig" );
	deepEqual( Stem("schuldlos"), "schuldlos" );
	deepEqual( Stem("schuldlosen"), "schuldlos" );
	deepEqual( Stem("schuldnern"), "schuldn" );
	deepEqual( Stem("schuldopfers"), "schuldopf" );
	deepEqual( Stem("schuldscheinen"), "schuldschein" );
	deepEqual( Stem("schuldverhältnis"), "schuldverhaltnis" );
	deepEqual( Stem("schuldverschreibungen"), "schuldverschreib" );
	deepEqual( Stem("schule"), "schul" );
	deepEqual( Stem("schulen"), "schul" );
	deepEqual( Stem("schüler"), "schul" );
	deepEqual( Stem("schulgehilfe"), "schulgehilf" );
	deepEqual( Stem("schulgehilfen"), "schulgehilf" );
	deepEqual( Stem("schulgerecht"), "schulgerecht" );
	deepEqual( Stem("schulgerechter"), "schulgerecht" );
	deepEqual( Stem("schulkind"), "schulkind" );
	deepEqual( Stem("schulknaben"), "schulknab" );
	deepEqual( Stem("schullehrer"), "schullehr" );
	deepEqual( Stem("schulmässig"), "schulmass" );
	deepEqual( Stem("schulmäßig"), "schulmass" );
	deepEqual( Stem("schulmeister"), "schulmeist" );
	deepEqual( Stem("schulpflichtigen"), "schulpflicht" );
	deepEqual( Stem("schulstaub"), "schulstaub" );
	deepEqual( Stem("schulten"), "schult" );
	deepEqual( Stem("schulter"), "schult" );
	deepEqual( Stem("schultern"), "schult" );
	deepEqual( Stem("schulterstücken"), "schulterstuck" );
	deepEqual( Stem("schultheisse"), "schultheiss" );
	deepEqual( Stem("schuppen"), "schupp" );
	deepEqual( Stem("schur"), "schur" );
	deepEqual( Stem("schurke"), "schurk" );
	deepEqual( Stem("schürze"), "schurz" );
	deepEqual( Stem("schürzen"), "schurz" );
	deepEqual( Stem("schürzenband"), "schurzenband" );
	deepEqual( Stem("schürzte"), "schurzt" );
	deepEqual( Stem("schuss"), "schuss" );
	deepEqual( Stem("schusse"), "schuss" );
	deepEqual( Stem("schüsse"), "schuss" );
	deepEqual( Stem("schüssel"), "schussel" );
	deepEqual( Stem("schüsseln"), "schusseln" );
	deepEqual( Stem("schusses"), "schuss" );
	deepEqual( Stem("schusslinie"), "schusslini" );
	deepEqual( Stem("schussplatz"), "schussplatz" );
	deepEqual( Stem("schuster"), "schust" );
	deepEqual( Stem("schusterten"), "schustert" );
	deepEqual( Stem("schutte"), "schutt" );
	deepEqual( Stem("schütteln"), "schutteln" );
	deepEqual( Stem("schüttelt"), "schuttelt" );
	deepEqual( Stem("schüttelte"), "schuttelt" );
	deepEqual( Stem("schüttelten"), "schuttelt" );
	deepEqual( Stem("schütteren"), "schutt" );
	deepEqual( Stem("schüttet"), "schuttet" );
	deepEqual( Stem("schüttete"), "schuttet" );
	deepEqual( Stem("schütteten"), "schuttet" );
	deepEqual( Stem("schutz"), "schutz" );
	deepEqual( Stem("schutzdienst"), "schutzdien" );
	deepEqual( Stem("schutze"), "schutz" );
	deepEqual( Stem("schütze"), "schutz" );
	deepEqual( Stem("schützen"), "schutz" );
	deepEqual( Stem("schützend"), "schutzend" );
	deepEqual( Stem("schützende"), "schutzend" );
	deepEqual( Stem("schützendem"), "schutzend" );
	deepEqual( Stem("schützengraben"), "schutzengrab" );
	deepEqual( Stem("schützenwaffe"), "schutzenwaff" );
	deepEqual( Stem("schützer"), "schutz" );
	deepEqual( Stem("schutzschürze"), "schutzschurz" );
	deepEqual( Stem("schützt"), "schutzt" );
	deepEqual( Stem("schützte"), "schutzt" );
	deepEqual( Stem("schützten"), "schutzt" );
	deepEqual( Stem("schutzumschlag"), "schutzumschlag" );
	deepEqual( Stem("schwaar"), "schwaar" );
	deepEqual( Stem("schwabbelgegend"), "schwabbelgeg" );
	deepEqual( Stem("schwäbchen"), "schwabch" );
	deepEqual( Stem("schwäbchens"), "schwabch" );
	deepEqual( Stem("schwabe"), "schwab" );
	deepEqual( Stem("schwaben"), "schwab" );
	deepEqual( Stem("schwäbische"), "schwabisch" );
	deepEqual( Stem("schwäbischen"), "schwabisch" );
	deepEqual( Stem("schwäblein"), "schwablein" );
	deepEqual( Stem("schwach"), "schwach" );
	deepEqual( Stem("schwache"), "schwach" );
	deepEqual( Stem("schwäche"), "schwach" );
	deepEqual( Stem("schwachen"), "schwach" );
	deepEqual( Stem("schwacher"), "schwach" );
	deepEqual( Stem("schwächer"), "schwach" );
	deepEqual( Stem("schwächere"), "schwach" );
	deepEqual( Stem("schwaches"), "schwach" );
	deepEqual( Stem("schwachheit"), "schwachheit" );
	deepEqual( Stem("schwachheiten"), "schwachheit" );
	deepEqual( Stem("schwachkopf"), "schwachkopf" );
	deepEqual( Stem("schwachköpfe"), "schwachkopf" );
	deepEqual( Stem("schwächlichsten"), "schwachlich" );
	deepEqual( Stem("schwachnervigen"), "schwachnerv" );
	deepEqual( Stem("schwachsinnig"), "schwachsinn" );
	deepEqual( Stem("schwächt"), "schwacht" );
	deepEqual( Stem("schwächte"), "schwacht" );
	deepEqual( Stem("schwaden"), "schwad" );
	deepEqual( Stem("schwäher"), "schwah" );
	deepEqual( Stem("schwähers"), "schwah" );
	deepEqual( Stem("schwalbennest"), "schwalbenn" );
	deepEqual( Stem("schwamm"), "schwamm" );
	deepEqual( Stem("schwammen"), "schwamm" );
	deepEqual( Stem("schwane"), "schwan" );
	deepEqual( Stem("schwang"), "schwang" );
	deepEqual( Stem("schwange"), "schwang" );
	deepEqual( Stem("schwangeren"), "schwang" );
	deepEqual( Stem("schwänke"), "schwank" );
	deepEqual( Stem("schwanken"), "schwank" );
	deepEqual( Stem("schwankend"), "schwankend" );
	deepEqual( Stem("schwankende"), "schwankend" );
	deepEqual( Stem("schwankenden"), "schwankend" );
	deepEqual( Stem("schwankes"), "schwank" );
	deepEqual( Stem("schwankhafte"), "schwankhaft" );
	deepEqual( Stem("schwankt"), "schwankt" );
	deepEqual( Stem("schwankte"), "schwankt" );
	deepEqual( Stem("schwankten"), "schwankt" );
	deepEqual( Stem("schwanz"), "schwanz" );
	deepEqual( Stem("schwänzchen"), "schwanzch" );
	deepEqual( Stem("schwanze"), "schwanz" );
	deepEqual( Stem("schwänze"), "schwanz" );
	deepEqual( Stem("schwänzelnd"), "schwanzelnd" );
	deepEqual( Stem("schwänzelte"), "schwanzelt" );
	deepEqual( Stem("schwänzen"), "schwanz" );
	deepEqual( Stem("schwanzes"), "schwanz" );
	deepEqual( Stem("schwanzflosse"), "schwanzfloss" );
	deepEqual( Stem("schwänzlein"), "schwanzlein" );
	deepEqual( Stem("schwapp"), "schwapp" );
	deepEqual( Stem("schwärme"), "schwarm" );
	deepEqual( Stem("schwärmen"), "schwarm" );
	deepEqual( Stem("schwärmende"), "schwarmend" );
	deepEqual( Stem("schwärmenden"), "schwarmend" );
	deepEqual( Stem("schwärmer"), "schwarm" );
	deepEqual( Stem("schwärmerei"), "schwarmerei" );
	deepEqual( Stem("schwärmerisches"), "schwarmer" );
	deepEqual( Stem("schwärmern"), "schwarm" );
	deepEqual( Stem("schwärmte"), "schwarmt" );
	deepEqual( Stem("schwärmten"), "schwarmt" );
	deepEqual( Stem("schwartenhälse"), "schwartenhals" );
	deepEqual( Stem("schwarz"), "schwarz" );
	deepEqual( Stem("schwarzbrot"), "schwarzbrot" );
	deepEqual( Stem("schwarze"), "schwarz" );
	deepEqual( Stem("schwärze"), "schwarz" );
	deepEqual( Stem("schwarzem"), "schwarz" );
	deepEqual( Stem("schwarzen"), "schwarz" );
	deepEqual( Stem("schwärzen"), "schwarz" );
	deepEqual( Stem("schwarzer"), "schwarz" );
	deepEqual( Stem("schwarzes"), "schwarz" );
	deepEqual( Stem("schwarzgekleideter"), "schwarzgekleidet" );
	deepEqual( Stem("schwarzgelbes"), "schwarzgelb" );
	deepEqual( Stem("schwärzliche"), "schwarzlich" );
	deepEqual( Stem("schwärzlichen"), "schwarzlich" );
	deepEqual( Stem("schwarzmeerküste"), "schwarzmeerkust" );
	deepEqual( Stem("schwarzseidenes"), "schwarzseid" );
	deepEqual( Stem("schwärzt"), "schwarzt" );
	deepEqual( Stem("schwärzte"), "schwarzt" );
	deepEqual( Stem("schwarzwollene"), "schwarzwoll" );
	deepEqual( Stem("schwatze"), "schwatz" );
	deepEqual( Stem("schwatzen"), "schwatz" );
	deepEqual( Stem("schwatzend"), "schwatzend" );
	deepEqual( Stem("schwätzer"), "schwatz" );
	deepEqual( Stem("schwätzerei"), "schwatzerei" );
	deepEqual( Stem("schwatzt"), "schwatzt" );
	deepEqual( Stem("schwatzte"), "schwatzt" );
	deepEqual( Stem("schwatzten"), "schwatzt" );
	deepEqual( Stem("schwebe"), "schweb" );
	deepEqual( Stem("schweben"), "schweb" );
	deepEqual( Stem("schwebend"), "schwebend" );
	deepEqual( Stem("schwebt"), "schwebt" );
	deepEqual( Stem("schwebte"), "schwebt" );
	deepEqual( Stem("schwebten"), "schwebt" );
	deepEqual( Stem("schweden"), "schwed" );
	deepEqual( Stem("schwedenkönigs"), "schwedenkon" );
	deepEqual( Stem("schwefel"), "schwefel" );
	deepEqual( Stem("schwefelduft"), "schwefelduft" );
	deepEqual( Stem("schwefelgelb"), "schwefelgelb" );
	deepEqual( Stem("schwefelgelbe"), "schwefelgelb" );
	deepEqual( Stem("schwefelgelbem"), "schwefelgelb" );
	deepEqual( Stem("schwefelgestank"), "schwefelgestank" );
	deepEqual( Stem("schwefelholz"), "schwefelholz" );
	deepEqual( Stem("schwefelhölzl"), "schwefelholzl" );
	deepEqual( Stem("schwefelig"), "schwefel" );
	deepEqual( Stem("schwefels"), "schwefel" );
	deepEqual( Stem("schwefelstoff"), "schwefelstoff" );
	deepEqual( Stem("schweifen"), "schweif" );
	deepEqual( Stem("schweifte"), "schweift" );
	deepEqual( Stem("schweig"), "schweig" );
	deepEqual( Stem("schweige"), "schweig" );
	deepEqual( Stem("schweigen"), "schweig" );
	deepEqual( Stem("schweigend"), "schweigend" );
	deepEqual( Stem("schweigende"), "schweigend" );
	deepEqual( Stem("schweigenden"), "schweigend" );
	deepEqual( Stem("schweigsam"), "schweigsam" );
	deepEqual( Stem("schweinchen"), "schweinch" );
	deepEqual( Stem("schweine"), "schwein" );
	deepEqual( Stem("schweinerei"), "schweinerei" );
	deepEqual( Stem("schweinestall"), "schweinestall" );
	deepEqual( Stem("schweinigel"), "schweinigel" );
	deepEqual( Stem("schweinsborste"), "schweinsborst" );
	deepEqual( Stem("schweiss"), "schweiss" );
	deepEqual( Stem("schweiß"), "schweiss" );
	deepEqual( Stem("schweisse"), "schweiss" );
	deepEqual( Stem("schweiße"), "schweiss" );
	deepEqual( Stem("schweisses"), "schweiss" );
	deepEqual( Stem("schweißes"), "schweiss" );
	deepEqual( Stem("schweissfleckigen"), "schweissfleck" );
	deepEqual( Stem("schweisshund"), "schweisshund" );
	deepEqual( Stem("schweisstriefend"), "schweisstrief" );
	deepEqual( Stem("schweißtröpfchen"), "schweisstropfch" );
	deepEqual( Stem("schweißtropfen"), "schweisstropf" );
	deepEqual( Stem("schweiz"), "schweiz" );
	deepEqual( Stem("schweizer"), "schweiz" );
	deepEqual( Stem("schweizerdegen"), "schweizerdeg" );
	deepEqual( Stem("schweizerische"), "schweizer" );
	deepEqual( Stem("schweizerischen"), "schweizer" );
	deepEqual( Stem("schweizerlande"), "schweizerland" );
	deepEqual( Stem("schweizerorten"), "schweizerort" );
	deepEqual( Stem("schweizerstadtkirche"), "schweizerstadtkirch" );
	deepEqual( Stem("schweizin"), "schweizin" );
	deepEqual( Stem("schwelle"), "schwell" );
	deepEqual( Stem("schwellt"), "schwellt" );
	deepEqual( Stem("schwellte"), "schwellt" );
	deepEqual( Stem("schwendling"), "schwendling" );
	deepEqual( Stem("schwenken"), "schwenk" );
	deepEqual( Stem("schwenkend"), "schwenkend" );
	deepEqual( Stem("schwenkte"), "schwenkt" );
	deepEqual( Stem("schwenkten"), "schwenkt" );
	deepEqual( Stem("schwer"), "schwer" );
	deepEqual( Stem("schwere"), "schwer" );
	deepEqual( Stem("schwerem"), "schwer" );
	deepEqual( Stem("schweren"), "schwer" );
	deepEqual( Stem("schwerenöter"), "schwerenot" );
	deepEqual( Stem("schwerer"), "schwer" );
	deepEqual( Stem("schweres"), "schwer" );
	deepEqual( Stem("schwerfällig"), "schwerfall" );
	deepEqual( Stem("schwerfälliges"), "schwerfall" );
	deepEqual( Stem("schwerfälligkeit"), "schwerfall" );
	deepEqual( Stem("schwergeschmiedeten"), "schwergeschmiedet" );
	deepEqual( Stem("schwerhörig"), "schwerhor" );
	deepEqual( Stem("schwerlich"), "schwerlich" );
	deepEqual( Stem("schwermut"), "schwermut" );
	deepEqual( Stem("schwermütig"), "schwermut" );
	deepEqual( Stem("schwermütigen"), "schwermut" );
	deepEqual( Stem("schwermütiges"), "schwermut" );
	deepEqual( Stem("schwert"), "schwert" );
	deepEqual( Stem("schwerte"), "schwert" );
	deepEqual( Stem("schwerter"), "schwert" );
	deepEqual( Stem("schwertern"), "schwert" );
	deepEqual( Stem("schwertes"), "schwert" );
	deepEqual( Stem("schwertfeger"), "schwertfeg" );
	deepEqual( Stem("schwerts"), "schwert" );
	deepEqual( Stem("schwerwiegende"), "schwerwieg" );
	deepEqual( Stem("schwester"), "schwest" );
	deepEqual( Stem("schwesterchen"), "schwesterch" );
	deepEqual( Stem("schwestern"), "schwest" );
	deepEqual( Stem("schwieg"), "schwieg" );
	deepEqual( Stem("schwiegen"), "schwieg" );
	deepEqual( Stem("schwiegermutter"), "schwiegermutt" );
	deepEqual( Stem("schwiegersohn"), "schwiegersohn" );
	deepEqual( Stem("schwiegersöhne"), "schwiegersohn" );
	deepEqual( Stem("schwiegertochter"), "schwiegertocht" );
	deepEqual( Stem("schwiegertöchter"), "schwiegertocht" );
	deepEqual( Stem("schwieligen"), "schwielig" );
	deepEqual( Stem("schwierig"), "schwierig" );
	deepEqual( Stem("schwierige"), "schwierig" );
	deepEqual( Stem("schwierigen"), "schwierig" );
	deepEqual( Stem("schwieriger"), "schwierig" );
	deepEqual( Stem("schwierigkeit"), "schwierig" );
	deepEqual( Stem("schwierigkeiten"), "schwierig" );
	deepEqual( Stem("schwierigsten"), "schwierig" );
	deepEqual( Stem("schwimmen"), "schwimm" );
	deepEqual( Stem("schwimmende"), "schwimmend" );
	deepEqual( Stem("schwimmenden"), "schwimmend" );
	deepEqual( Stem("schwindel"), "schwindel" );
	deepEqual( Stem("schwindelanfall"), "schwindelanfall" );
	deepEqual( Stem("schwindelanfällen"), "schwindelanfall" );
	deepEqual( Stem("schwinden"), "schwind" );
	deepEqual( Stem("schwindet"), "schwindet" );
	deepEqual( Stem("schwindler"), "schwindl" );
	deepEqual( Stem("schwindlig"), "schwindlig" );
	deepEqual( Stem("schwingen"), "schwing" );
	deepEqual( Stem("schwingend"), "schwingend" );
	deepEqual( Stem("schwippte"), "schwippt" );
	deepEqual( Stem("schwirrte"), "schwirrt" );
	deepEqual( Stem("schwitzen"), "schwitz" );
	deepEqual( Stem("schwitzte"), "schwitzt" );
	deepEqual( Stem("schwitzten"), "schwitzt" );
	deepEqual( Stem("schwoll"), "schwoll" );
	deepEqual( Stem("schwor"), "schwor" );
	deepEqual( Stem("schwör"), "schwor" );
	deepEqual( Stem("schwöre"), "schwor" );
	deepEqual( Stem("schwören"), "schwor" );
	deepEqual( Stem("schwört"), "schwort" );
	deepEqual( Stem("schwül"), "schwul" );
	deepEqual( Stem("schwüler"), "schwul" );
	deepEqual( Stem("schwules"), "schwul" );
	deepEqual( Stem("schwüles"), "schwul" );
	deepEqual( Stem("schwung"), "schwung" );
	deepEqual( Stem("schwunge"), "schwung" );
	deepEqual( Stem("schwüngen"), "schwung" );
	deepEqual( Stem("schwupp"), "schwupp" );
	deepEqual( Stem("schwur"), "schwur" );
	deepEqual( Stem("schwuren"), "schwur" );
	deepEqual( Stem("scil"), "scil" );
	deepEqual( Stem("scotus"), "scotus" );
	deepEqual( Stem("se"), "se" );
	deepEqual( Stem("sebas"), "sebas" );
	deepEqual( Stem("sebastian"), "sebastian" );
	deepEqual( Stem("sebulon"), "sebulon" );
	deepEqual( Stem("sechs"), "sech" );
	deepEqual( Stem("sechsfache"), "sechsfach" );
	deepEqual( Stem("sechsmal"), "sechsmal" );
	deepEqual( Stem("sechste"), "sech" );
	deepEqual( Stem("sechsten"), "sech" );
	deepEqual( Stem("sechster"), "sech" );
	deepEqual( Stem("sechstes"), "sech" );
	deepEqual( Stem("sechsunddreissig"), "sechsunddreiss" );
	deepEqual( Stem("sechsundsiebenzig"), "sechsundsiebenz" );
	deepEqual( Stem("sechszehn"), "sechszehn" );
	deepEqual( Stem("sechzehn"), "sechzehn" );
	deepEqual( Stem("sechzehnjährigen"), "sechzehnjahr" );
	deepEqual( Stem("sechzehnten"), "sechzehnt" );
	deepEqual( Stem("sechzig"), "sechzig" );
	deepEqual( Stem("sechzigste"), "sechzig" );
	deepEqual( Stem("second"), "second" );
	deepEqual( Stem("sed"), "sed" );
	deepEqual( Stem("see"), "see" );
	deepEqual( Stem("seegrund"), "seegrund" );
	deepEqual( Stem("seehäfen"), "seehaf" );
	deepEqual( Stem("seejungfern"), "seejungf" );
	deepEqual( Stem("seekrank"), "seekrank" );
	deepEqual( Stem("seel"), "seel" );
	deepEqual( Stem("seele"), "seel" );
	deepEqual( Stem("seeleitner"), "seeleitn" );
	deepEqual( Stem("seeleitnerhauses"), "seeleitnerhaus" );
	deepEqual( Stem("seeleitnersbuben"), "seeleitnersbub" );
	deepEqual( Stem("seeleitnersleut"), "seeleitnersleut" );
	deepEqual( Stem("seeleitnersleute"), "seeleitnersleut" );
	deepEqual( Stem("seelen"), "seel" );
	deepEqual( Stem("seelenallein"), "seelenallein" );
	deepEqual( Stem("seelenerhebung"), "seelenerheb" );
	deepEqual( Stem("seelengrösse"), "seelengross" );
	deepEqual( Stem("seelenkämpfe"), "seelenkampf" );
	deepEqual( Stem("seelenkräfte"), "seelenkraft" );
	deepEqual( Stem("seelenkunde"), "seelenkund" );
	deepEqual( Stem("seelenleiden"), "seelenleid" );
	deepEqual( Stem("seelenruhe"), "seelenruh" );
	deepEqual( Stem("seelenschwäche"), "seelenschwach" );
	deepEqual( Stem("seelenstärke"), "seelenstark" );
	deepEqual( Stem("seelenvergnügt"), "seelenvergnugt" );
	deepEqual( Stem("seelenvoll"), "seelenvoll" );
	deepEqual( Stem("seelenvolle"), "seelenvoll" );
	deepEqual( Stem("seeleute"), "seeleut" );
	deepEqual( Stem("seelon"), "seelon" );
	deepEqual( Stem("seelsorge"), "seelsorg" );
	deepEqual( Stem("seen"), "seen" );
	deepEqual( Stem("sees"), "sees" );
	deepEqual( Stem("seespiegel"), "seespiegel" );
	deepEqual( Stem("seetal"), "seetal" );
	deepEqual( Stem("seetang"), "seetang" );
	deepEqual( Stem("seetiere"), "seeti" );
	deepEqual( Stem("seeufer"), "seeuf" );
	deepEqual( Stem("seeungeheuer"), "seeungeheu" );
	deepEqual( Stem("segel"), "segel" );
	deepEqual( Stem("segelboot"), "segelboot" );
	deepEqual( Stem("segelte"), "segelt" );
	deepEqual( Stem("segen"), "seg" );
	deepEqual( Stem("segens"), "seg" );
	deepEqual( Stem("segensreiche"), "segensreich" );
	deepEqual( Stem("segensspruch"), "segensspruch" );
	deepEqual( Stem("segn"), "segn" );
	deepEqual( Stem("segne"), "segn" );
	deepEqual( Stem("segnen"), "segn" );
	deepEqual( Stem("segnender"), "segnend" );
	deepEqual( Stem("segnet"), "segnet" );
	deepEqual( Stem("segnete"), "segnet" );
	deepEqual( Stem("segnungen"), "segnung" );
	deepEqual( Stem("seh"), "seh" );
	deepEqual( Stem("sehe"), "seh" );
	deepEqual( Stem("sehen"), "seh" );
	deepEqual( Stem("sehend"), "sehend" );
	deepEqual( Stem("sehende"), "sehend" );
	deepEqual( Stem("sehenden"), "sehend" );
	deepEqual( Stem("sehendie"), "sehendi" );
	deepEqual( Stem("sehenswürdigkeiten"), "sehenswurd" );
	deepEqual( Stem("sehest"), "seh" );
	deepEqual( Stem("sehet"), "sehet" );
	deepEqual( Stem("sehn"), "sehn" );
	deepEqual( Stem("sehnen"), "sehn" );
	deepEqual( Stem("sehnippel"), "sehnippel" );
	deepEqual( Stem("sehnlich"), "sehnlich" );
	deepEqual( Stem("sehnsucht"), "sehnsucht" );
	deepEqual( Stem("sehnsuchten"), "sehnsucht" );
	deepEqual( Stem("sehnsüchtig"), "sehnsucht" );
	deepEqual( Stem("sehnsüchtige"), "sehnsucht" );
	deepEqual( Stem("sehnsüchtiger"), "sehnsucht" );
	deepEqual( Stem("sehnsüchtiges"), "sehnsucht" );
	deepEqual( Stem("sehnte"), "sehnt" );
	deepEqual( Stem("sehnten"), "sehnt" );
	deepEqual( Stem("sehr"), "sehr" );
	deepEqual( Stem("seht"), "seht" );
	deepEqual( Stem("sehvermögen"), "sehvermog" );
	deepEqual( Stem("sei"), "sei" );
	deepEqual( Stem("seicht"), "seicht" );
	deepEqual( Stem("seichte"), "seicht" );
	deepEqual( Stem("seichten"), "seicht" );
	deepEqual( Stem("seichter"), "seicht" );
	deepEqual( Stem("seichtigkeit"), "seichtig" );
	deepEqual( Stem("seid"), "seid" );
	deepEqual( Stem("seide"), "seid" );
	deepEqual( Stem("seiden"), "seid" );
	deepEqual( Stem("seidenartig"), "seidenart" );
	deepEqual( Stem("seidendamast"), "seidendamast" );
	deepEqual( Stem("seidene"), "seid" );
	deepEqual( Stem("seidenen"), "seid" );
	deepEqual( Stem("seidenes"), "seid" );
	deepEqual( Stem("seidenfäden"), "seidenfad" );
	deepEqual( Stem("seidenfarben"), "seidenfarb" );
	deepEqual( Stem("seidengewand"), "seidengewand" );
	deepEqual( Stem("seidenkleid"), "seidenkleid" );
	deepEqual( Stem("seidens"), "seid" );
	deepEqual( Stem("seidenzeug"), "seidenzeug" );
	deepEqual( Stem("seider"), "seid" );
	deepEqual( Stem("seien"), "seien" );
	deepEqual( Stem("seiest"), "seiest" );
	deepEqual( Stem("seife"), "seif" );
	deepEqual( Stem("seifenblasen"), "seifenblas" );
	deepEqual( Stem("seifengalerie"), "seifengaleri" );
	deepEqual( Stem("seifenschaum"), "seifenschaum" );
	deepEqual( Stem("seifensieder"), "seifensied" );
	deepEqual( Stem("seifenstücken"), "seifenstuck" );
	deepEqual( Stem("seigneur"), "seigneur" );
	deepEqual( Stem("seile"), "seil" );
	deepEqual( Stem("sein"), "sein" );
	deepEqual( Stem("seine"), "sein" );
	deepEqual( Stem("seinem"), "sein" );
	deepEqual( Stem("seinen"), "sein" );
	deepEqual( Stem("seiner"), "sein" );
	deepEqual( Stem("seinerseits"), "seinerseit" );
	deepEqual( Stem("seinerzeit"), "seinerzeit" );
	deepEqual( Stem("seines"), "sein" );
	deepEqual( Stem("seinesgleichen"), "seinesgleich" );
	deepEqual( Stem("seinetwegen"), "seinetweg" );
	deepEqual( Stem("seinige"), "seinig" );
	deepEqual( Stem("seinigen"), "seinig" );
	deepEqual( Stem("seins"), "sein" );
	deepEqual( Stem("seir"), "seir" );
	deepEqual( Stem("seist"), "seist" );
	deepEqual( Stem("seit"), "seit" );
	deepEqual( Stem("seitdem"), "seitd" );
	deepEqual( Stem("seite"), "seit" );
	deepEqual( Stem("seiten"), "seit" );
	deepEqual( Stem("seitenblick"), "seitenblick" );
	deepEqual( Stem("seiteneingang"), "seiteneingang" );
	deepEqual( Stem("seitengang"), "seitengang" );
	deepEqual( Stem("seitengasse"), "seitengass" );
	deepEqual( Stem("seitenplätzchen"), "seitenplatzch" );
	deepEqual( Stem("seitenschiff"), "seitenschiff" );
	deepEqual( Stem("seitenschiffe"), "seitenschiff" );
	deepEqual( Stem("seitenstrassen"), "seitenstrass" );
	deepEqual( Stem("seitenstück"), "seitenstuck" );
	deepEqual( Stem("seitental"), "seitental" );
	deepEqual( Stem("seitentälern"), "seitental" );
	deepEqual( Stem("seitenwegen"), "seitenweg" );
	deepEqual( Stem("seither"), "seith" );
	deepEqual( Stem("seitlich"), "seitlich" );
	deepEqual( Stem("seitwärts"), "seitwart" );
	deepEqual( Stem("sek"), "sek" );
	deepEqual( Stem("sekelbewahrer"), "sekelbewahr" );
	deepEqual( Stem("sekretariat"), "sekretariat" );
	deepEqual( Stem("sekretärin"), "sekretarin" );
	deepEqual( Stem("sekten"), "sekt" );
	deepEqual( Stem("sektierern"), "sekti" );
	deepEqual( Stem("sekunde"), "sekund" );
	deepEqual( Stem("sekunden"), "sekund" );
	deepEqual( Stem("sekundenlange"), "sekundenlang" );
	deepEqual( Stem("sekundenzeiger"), "sekundenzeig" );
	deepEqual( Stem("sel"), "sel" );
	deepEqual( Stem("selbe"), "selb" );
	deepEqual( Stem("selbem"), "selb" );
	deepEqual( Stem("selben"), "selb" );
	deepEqual( Stem("selber"), "selb" );
	deepEqual( Stem("selbige"), "selbig" );
	deepEqual( Stem("selbigen"), "selbig" );
	deepEqual( Stem("selbiger"), "selbig" );
	deepEqual( Stem("selbiges"), "selbig" );
	deepEqual( Stem("selbigsmal"), "selbigsmal" );
	deepEqual( Stem("selbst"), "selb" );
	deepEqual( Stem("selbständig"), "selbstand" );
	deepEqual( Stem("selbständige"), "selbstand" );
	deepEqual( Stem("selbständigen"), "selbstand" );
	deepEqual( Stem("selbständigkeit"), "selbstand" );
	deepEqual( Stem("selbstanklagen"), "selbstanklag" );
	deepEqual( Stem("selbstbeherrschung"), "selbstbeherrsch" );
	deepEqual( Stem("selbstberedung"), "selbstbered" );
	deepEqual( Stem("selbstberedungen"), "selbstbered" );
	deepEqual( Stem("selbstbewussten"), "selbstbewusst" );
	deepEqual( Stem("selbstbewusstsein"), "selbstbewusstsein" );
	deepEqual( Stem("selbstentäusserung"), "selbstentausser" );
	deepEqual( Stem("selbsterkenntnis"), "selbsterkenntnis" );
	deepEqual( Stem("selbsterniedrigung"), "selbsterniedr" );
	deepEqual( Stem("selbstgefälligkeit"), "selbstgefall" );
	deepEqual( Stem("selbstgemacht"), "selbstgemacht" );
	deepEqual( Stem("selbstgenugsamkeit"), "selbstgenugsam" );
	deepEqual( Stem("selbstgerechtigkeit"), "selbstgerecht" );
	deepEqual( Stem("selbstgeschaffenem"), "selbstgeschaff" );
	deepEqual( Stem("selbstgewählten"), "selbstgewahlt" );
	deepEqual( Stem("selbstgezogen"), "selbstgezog" );
	deepEqual( Stem("selbstherrlichkeit"), "selbstherr" );
	deepEqual( Stem("selbstigen"), "selbstig" );
	deepEqual( Stem("selbstliebe"), "selbstlieb" );
	deepEqual( Stem("selbstmord"), "selbstmord" );
	deepEqual( Stem("selbstprüfung"), "selbstpruf" );
	deepEqual( Stem("selbstregierung"), "selbstregier" );
	deepEqual( Stem("selbstschätzung"), "selbstschatz" );
	deepEqual( Stem("selbstsucht"), "selbstsucht" );
	deepEqual( Stem("selbstsüchtige"), "selbstsucht" );
	deepEqual( Stem("selbsttätige"), "selbsttat" );
	deepEqual( Stem("selbsttätigen"), "selbsttat" );
	deepEqual( Stem("selbstverantwortung"), "selbstverantwort" );
	deepEqual( Stem("selbstverdammung"), "selbstverdamm" );
	deepEqual( Stem("selbstvergessen"), "selbstvergess" );
	deepEqual( Stem("selbstvergessenheit"), "selbstvergess" );
	deepEqual( Stem("selbstvergnügten"), "selbstvergnugt" );
	deepEqual( Stem("selbstverherrlichung"), "selbstverherrlich" );
	deepEqual( Stem("selbstverständlich"), "selbstverstand" );
	deepEqual( Stem("selbstverständlichen"), "selbstverstand" );
	deepEqual( Stem("selbstvertrauen"), "selbstvertrau" );
	deepEqual( Stem("selbstverwalteten"), "selbstverwaltet" );
	deepEqual( Stem("selbstzufrieden"), "selbstzufried" );
	deepEqual( Stem("selbstzufriedenheit"), "selbstzufried" );
	deepEqual( Stem("seldwyl"), "seldwyl" );
	deepEqual( Stem("seldwyla"), "seldwyla" );
	deepEqual( Stem("seldwyler"), "seldwyl" );
	deepEqual( Stem("seldwylerinnen"), "seldwylerinn" );
	deepEqual( Stem("seldwylern"), "seldwyl" );
	deepEqual( Stem("seldwylers"), "seldwyl" );
	deepEqual( Stem("seldwylertagen"), "seldwylertag" );
	deepEqual( Stem("selig"), "selig" );
	deepEqual( Stem("selige"), "selig" );
	deepEqual( Stem("seligem"), "selig" );
	deepEqual( Stem("seligen"), "selig" );
	deepEqual( Stem("seliges"), "selig" );
	deepEqual( Stem("seligkeit"), "selig" );
	deepEqual( Stem("seligkeiten"), "selig" );
	deepEqual( Stem("seligmachende"), "seligmach" );
	deepEqual( Stem("seligmachenden"), "seligmach" );
	deepEqual( Stem("seligmachung"), "seligmach" );
	deepEqual( Stem("seligwerden"), "seligwerd" );
	deepEqual( Stem("selk"), "selk" );
	deepEqual( Stem("selm"), "selm" );
	deepEqual( Stem("selten"), "selt" );
	deepEqual( Stem("seltene"), "selt" );
	deepEqual( Stem("seltenen"), "selt" );
	deepEqual( Stem("seltener"), "selt" );
	deepEqual( Stem("seltenheit"), "selt" );
	deepEqual( Stem("seltensten"), "selten" );
	deepEqual( Stem("seltsam"), "seltsam" );
	deepEqual( Stem("seltsame"), "seltsam" );
	deepEqual( Stem("seltsamem"), "seltsam" );
	deepEqual( Stem("seltsamen"), "seltsam" );
	deepEqual( Stem("seltsamer"), "seltsam" );
	deepEqual( Stem("seltsamerweise"), "seltsamerweis" );
	deepEqual( Stem("seltsames"), "seltsam" );
	deepEqual( Stem("seltsamkeit"), "seltsam" );
	deepEqual( Stem("seltsamlich"), "seltsam" );
	deepEqual( Stem("sem"), "sem" );
	deepEqual( Stem("semen"), "sem" );
	deepEqual( Stem("semester"), "sem" );
	deepEqual( Stem("semmelbröseln"), "semmelbroseln" );
	deepEqual( Stem("sende"), "send" );
	deepEqual( Stem("sendeminute"), "sendeminut" );
	deepEqual( Stem("senden"), "send" );
	deepEqual( Stem("sender"), "send" );
	deepEqual( Stem("sendest"), "send" );
	deepEqual( Stem("sendet"), "sendet" );
	deepEqual( Stem("sendlinge"), "sendling" );
	deepEqual( Stem("sendung"), "sendung" );
	deepEqual( Stem("sendungen"), "sendung" );
	deepEqual( Stem("senf"), "senf" );
	deepEqual( Stem("senfkorn"), "senfkorn" );
	deepEqual( Stem("senke"), "senk" );
	deepEqual( Stem("senken"), "senk" );
	deepEqual( Stem("senkend"), "senkend" );
	deepEqual( Stem("senket"), "senket" );
	deepEqual( Stem("senkrecht"), "senkrecht" );
	deepEqual( Stem("senkt"), "senkt" );
	deepEqual( Stem("senkte"), "senkt" );
	deepEqual( Stem("senkten"), "senkt" );
	deepEqual( Stem("senkung"), "senkung" );
	deepEqual( Stem("sennerin"), "sennerin" );
	deepEqual( Stem("sennhütte"), "sennhutt" );
	deepEqual( Stem("sensatio"), "sensatio" );
	deepEqual( Stem("sense"), "sens" );
	deepEqual( Stem("sentimentale"), "sentimental" );
	deepEqual( Stem("september"), "septemb" );
	deepEqual( Stem("septembergegend"), "septembergeg" );
	deepEqual( Stem("septembermorgen"), "septembermorg" );
	deepEqual( Stem("sequentium"), "sequentium" );
	deepEqual( Stem("serach"), "serach" );
	deepEqual( Stem("serie"), "seri" );
	deepEqual( Stem("serpentum"), "serpentum" );
	deepEqual( Stem("service"), "servic" );
	deepEqual( Stem("servieren"), "servi" );
	deepEqual( Stem("serviert"), "serviert" );
	deepEqual( Stem("servierter"), "serviert" );
	deepEqual( Stem("serviette"), "serviett" );
	deepEqual( Stem("servietten"), "serviett" );
	deepEqual( Stem("sessel"), "sessel" );
	deepEqual( Stem("sesselchen"), "sesselch" );
	deepEqual( Stem("sesselkleber"), "sesselkleb" );
	deepEqual( Stem("sessellehne"), "sessellehn" );
	deepEqual( Stem("sesshaft"), "sesshaft" );
	deepEqual( Stem("sesshaften"), "sesshaft" );
	deepEqual( Stem("settember"), "settemb" );
	deepEqual( Stem("setz"), "setz" );
	deepEqual( Stem("setze"), "setz" );
	deepEqual( Stem("setzen"), "setz" );
	deepEqual( Stem("setzet"), "setzet" );
	deepEqual( Stem("setzt"), "setzt" );
	deepEqual( Stem("setzte"), "setzt" );
	deepEqual( Stem("setzten"), "setzt" );
	deepEqual( Stem("seu"), "seu" );
	deepEqual( Stem("seuchengefahr"), "seuchengefahr" );
	deepEqual( Stem("seufzen"), "seufz" );
	deepEqual( Stem("seufzend"), "seufzend" );
	deepEqual( Stem("seufzens"), "seufz" );
	deepEqual( Stem("seufzer"), "seufz" );
	deepEqual( Stem("seufzern"), "seufz" );
	deepEqual( Stem("seufzt"), "seufzt" );
	deepEqual( Stem("seufzte"), "seufzt" );
	deepEqual( Stem("seufzten"), "seufzt" );
	deepEqual( Stem("sexologie"), "sexologi" );
	deepEqual( Stem("sexuelle"), "sexuell" );
	deepEqual( Stem("shakespeare"), "shakespear" );
	deepEqual( Stem("shoa"), "shoa" );
	deepEqual( Stem("shylocks"), "shylock" );
	deepEqual( Stem("si"), "si" );
	deepEqual( Stem("sialiquid"), "sialiquid" );
	deepEqual( Stem("sich"), "sich" );
	deepEqual( Stem("sichbearbeiten"), "sichbearbeit" );
	deepEqual( Stem("sicheln"), "sicheln" );
	deepEqual( Stem("sicher"), "sich" );
	deepEqual( Stem("sichere"), "sich" );
	deepEqual( Stem("sicheren"), "sich" );
	deepEqual( Stem("sicherer"), "sich" );
	deepEqual( Stem("sicheres"), "sich" );
	deepEqual( Stem("sichergehenden"), "sichergeh" );
	deepEqual( Stem("sicherheit"), "sich" );
	deepEqual( Stem("sicherheitsbeamten"), "sicherheitsbeamt" );
	deepEqual( Stem("sicherheitsbehörden"), "sicherheitsbehord" );
	deepEqual( Stem("sicherheitshalber"), "sicherheitshalb" );
	deepEqual( Stem("sicherheitskontrolle"), "sicherheitskontroll" );
	deepEqual( Stem("sicherheitskräfte"), "sicherheitskraft" );
	deepEqual( Stem("sicherheitskräften"), "sicherheitskraft" );
	deepEqual( Stem("sicherheitsleute"), "sicherheitsleut" );
	deepEqual( Stem("sicherheitspolizei"), "sicherheitspolizei" );
	deepEqual( Stem("sicherheitsregeln"), "sicherheitsregeln" );
	deepEqual( Stem("sicherheitsstation"), "sicherheitsstation" );
	deepEqual( Stem("sicherlich"), "sich" );
	deepEqual( Stem("sichern"), "sich" );
	deepEqual( Stem("sicherste"), "sicherst" );
	deepEqual( Stem("sichersten"), "sicherst" );
	deepEqual( Stem("sicherte"), "sichert" );
	deepEqual( Stem("sicherung"), "sicher" );
	deepEqual( Stem("sichniederwerfen"), "sichniederwerf" );
	deepEqual( Stem("sichri"), "sichri" );
	deepEqual( Stem("sichs"), "sich" );
	deepEqual( Stem("sicht"), "sicht" );
	deepEqual( Stem("sichtbar"), "sichtbar" );
	deepEqual( Stem("sichtbare"), "sichtbar" );
	deepEqual( Stem("sichtbaren"), "sichtbar" );
	deepEqual( Stem("sichtende"), "sichtend" );
	deepEqual( Stem("sichtlich"), "sichtlich" );
	deepEqual( Stem("sichtlichen"), "sichtlich" );
	deepEqual( Stem("sichtlicher"), "sichtlich" );
	deepEqual( Stem("sichtweite"), "sichtweit" );
	deepEqual( Stem("sickert"), "sickert" );
	deepEqual( Stem("sicut"), "sicut" );
	deepEqual( Stem("sie"), "sie" );
	deepEqual( Stem("sieben"), "sieb" );
	deepEqual( Stem("siebenfach"), "siebenfach" );
	deepEqual( Stem("siebenfältig"), "siebenfalt" );
	deepEqual( Stem("siebenhundert"), "siebenhundert" );
	deepEqual( Stem("siebenköpfigen"), "siebenkopf" );
	deepEqual( Stem("siebenmal"), "siebenmal" );
	deepEqual( Stem("siebensächelchen"), "siebensachelch" );
	deepEqual( Stem("siebensachen"), "siebensach" );
	deepEqual( Stem("siebente"), "siebent" );
	deepEqual( Stem("siebenten"), "siebent" );
	deepEqual( Stem("siebenter"), "siebent" );
	deepEqual( Stem("siebentes"), "siebent" );
	deepEqual( Stem("siebenundachtzig"), "siebenundachtz" );
	deepEqual( Stem("siebenundsiebzig"), "siebenundsiebz" );
	deepEqual( Stem("siebenundwanzig"), "siebenundwanz" );
	deepEqual( Stem("siebenundzwanzig"), "siebenundzwanz" );
	deepEqual( Stem("siebenundzwanzigmal"), "siebenundzwanzigmal" );
	deepEqual( Stem("siebenundzwanzigmalige"), "siebenundzwanzigmal" );
	deepEqual( Stem("siebenzahl"), "siebenzahl" );
	deepEqual( Stem("siebenzig"), "siebenz" );
	deepEqual( Stem("siebenzigmal"), "siebenzigmal" );
	deepEqual( Stem("siebsten"), "sieb" );
	deepEqual( Stem("siebte"), "siebt" );
	deepEqual( Stem("siebzehn"), "siebzehn" );
	deepEqual( Stem("siebzehnten"), "siebzehnt" );
	deepEqual( Stem("siebzig"), "siebzig" );
	deepEqual( Stem("siebziger"), "siebzig" );
	deepEqual( Stem("siebzigmal"), "siebzigmal" );
	deepEqual( Stem("siech"), "siech" );
	deepEqual( Stem("siede"), "sied" );
	deepEqual( Stem("siedeln"), "siedeln" );
	deepEqual( Stem("siedende"), "siedend" );
	deepEqual( Stem("siedendheiss"), "siedendheiss" );
	deepEqual( Stem("sieg"), "sieg" );
	deepEqual( Stem("siege"), "sieg" );
	deepEqual( Stem("siegel"), "siegel" );
	deepEqual( Stem("siegellack"), "siegellack" );
	deepEqual( Stem("siegeln"), "siegeln" );
	deepEqual( Stem("siegelring"), "siegelring" );
	deepEqual( Stem("siegen"), "sieg" );
	deepEqual( Stem("siegende"), "siegend" );
	deepEqual( Stem("sieger"), "sieg" );
	deepEqual( Stem("sieges"), "sieg" );
	deepEqual( Stem("sieghafte"), "sieghaft" );
	deepEqual( Stem("sieghaften"), "sieghaft" );
	deepEqual( Stem("siegte"), "siegt" );
	deepEqual( Stem("sieh"), "sieh" );
	deepEqual( Stem("siehe"), "sieh" );
	deepEqual( Stem("siehst"), "sieh" );
	deepEqual( Stem("sieht"), "sieht" );
	deepEqual( Stem("siena"), "siena" );
	deepEqual( Stem("sige"), "sig" );
	deepEqual( Stem("signal"), "signal" );
	deepEqual( Stem("silbe"), "silb" );
	deepEqual( Stem("silber"), "silb" );
	deepEqual( Stem("silberbechern"), "silberbech" );
	deepEqual( Stem("silberborten"), "silberbort" );
	deepEqual( Stem("silberbschlagene"), "silberbschlag" );
	deepEqual( Stem("silberbügel"), "silberbugel" );
	deepEqual( Stem("silbergewölk"), "silbergewolk" );
	deepEqual( Stem("silberglöckchen"), "silberglockch" );
	deepEqual( Stem("silbergrauen"), "silbergrau" );
	deepEqual( Stem("silberhaarige"), "silberhaar" );
	deepEqual( Stem("silberhelle"), "silberhell" );
	deepEqual( Stem("silberkleidern"), "silberkleid" );
	deepEqual( Stem("silberlicht"), "silberlicht" );
	deepEqual( Stem("silbermesser"), "silbermess" );
	deepEqual( Stem("silberne"), "silbern" );
	deepEqual( Stem("silbernem"), "silbern" );
	deepEqual( Stem("silbernen"), "silbern" );
	deepEqual( Stem("silberner"), "silbern" );
	deepEqual( Stem("silbernes"), "silbern" );
	deepEqual( Stem("silberreinen"), "silberrein" );
	deepEqual( Stem("silbers"), "silb" );
	deepEqual( Stem("silbersand"), "silbersand" );
	deepEqual( Stem("silberschleiern"), "silberschlei" );
	deepEqual( Stem("silberschüssel"), "silberschussel" );
	deepEqual( Stem("silberseidigsten"), "silberseid" );
	deepEqual( Stem("silberstimmchen"), "silberstimmch" );
	deepEqual( Stem("silberwolle"), "silberwoll" );
	deepEqual( Stem("silbrige"), "silbrig" );
	deepEqual( Stem("siloam"), "siloam" );
	deepEqual( Stem("simei"), "simei" );
	deepEqual( Stem("similitudo"), "similitudo" );
	deepEqual( Stem("simmsen"), "simms" );
	deepEqual( Stem("simon"), "simon" );
	deepEqual( Stem("simpel"), "simpel" );
	deepEqual( Stem("simple"), "simpl" );
	deepEqual( Stem("simsen"), "sims" );
	deepEqual( Stem("simson"), "simson" );
	deepEqual( Stem("simus"), "simus" );
	deepEqual( Stem("sinai"), "sinai" );
	deepEqual( Stem("sind"), "sind" );
	deepEqual( Stem("sine"), "sin" );
	deepEqual( Stem("sing"), "sing" );
	deepEqual( Stem("singbuch"), "singbuch" );
	deepEqual( Stem("singe"), "sing" );
	deepEqual( Stem("singen"), "sing" );
	deepEqual( Stem("singend"), "singend" );
	deepEqual( Stem("singende"), "singend" );
	deepEqual( Stem("singenden"), "singend" );
	deepEqual( Stem("singender"), "singend" );
	deepEqual( Stem("singerei"), "singerei" );
	deepEqual( Stem("singet"), "singet" );
	deepEqual( Stem("singst"), "sing" );
	deepEqual( Stem("singt"), "singt" );
	deepEqual( Stem("sinken"), "sink" );
	deepEqual( Stem("sinkende"), "sinkend" );
	deepEqual( Stem("sinkendem"), "sinkend" );
	deepEqual( Stem("sinkenden"), "sinkend" );
	deepEqual( Stem("sinkens"), "sink" );
	deepEqual( Stem("sinkt"), "sinkt" );
	deepEqual( Stem("sinn"), "sinn" );
	deepEqual( Stem("sinnbild"), "sinnbild" );
	deepEqual( Stem("sinnbilder"), "sinnbild" );
	deepEqual( Stem("sinnbildern"), "sinnbild" );
	deepEqual( Stem("sinne"), "sinn" );
	deepEqual( Stem("sinnen"), "sinn" );
	deepEqual( Stem("sinnend"), "sinnend" );
	deepEqual( Stem("sinnenwelt"), "sinnenwelt" );
	deepEqual( Stem("sinnenwesens"), "sinnenwes" );
	deepEqual( Stem("sinnes"), "sinn" );
	deepEqual( Stem("sinnesart"), "sinnesart" );
	deepEqual( Stem("sinnesarten"), "sinnesart" );
	deepEqual( Stem("sinnestäuschungen"), "sinnestausch" );
	deepEqual( Stem("sinnesvorstellungen"), "sinnesvorstell" );
	deepEqual( Stem("sinneswahrnehmung"), "sinneswahrnehm" );
	deepEqual( Stem("sinnet"), "sinnet" );
	deepEqual( Stem("sinngebung"), "sinngeb" );
	deepEqual( Stem("sinniert"), "sinniert" );
	deepEqual( Stem("sinnig"), "sinnig" );
	deepEqual( Stem("sinnige"), "sinnig" );
	deepEqual( Stem("sinnlich"), "sinnlich" );
	deepEqual( Stem("sinnlichbedingten"), "sinnlichbedingt" );
	deepEqual( Stem("sinnliche"), "sinnlich" );
	deepEqual( Stem("sinnlichem"), "sinnlich" );
	deepEqual( Stem("sinnlichen"), "sinnlich" );
	deepEqual( Stem("sinnlicher"), "sinnlich" );
	deepEqual( Stem("sinnliches"), "sinnlich" );
	deepEqual( Stem("sinnlichkeit"), "sinnlich" );
	deepEqual( Stem("sinnlos"), "sinnlos" );
	deepEqual( Stem("sinnlose"), "sinnlos" );
	deepEqual( Stem("sinnlosem"), "sinnlos" );
	deepEqual( Stem("sinnloser"), "sinnlos" );
	deepEqual( Stem("sinnloses"), "sinnlos" );
	deepEqual( Stem("sinnlosigkeit"), "sinnlos" );
	deepEqual( Stem("sinnorganen"), "sinnorgan" );
	deepEqual( Stem("sinnorganes"), "sinnorgan" );
	deepEqual( Stem("sinnreich"), "sinnreich" );
	deepEqual( Stem("sinnreiche"), "sinnreich" );
	deepEqual( Stem("sinnreichen"), "sinnreich" );
	deepEqual( Stem("sinns"), "sinn" );
	deepEqual( Stem("sinnstiftung"), "sinnstift" );
	deepEqual( Stem("sinnt"), "sinnt" );
	deepEqual( Stem("sinnverwirrter"), "sinnverwirrt" );
	deepEqual( Stem("sinnvoll"), "sinnvoll" );
	deepEqual( Stem("sinnvolle"), "sinnvoll" );
	deepEqual( Stem("sinnvollere"), "sinnvoll" );
	deepEqual( Stem("sinnwidrigen"), "sinnwidr" );
	deepEqual( Stem("sinnzusammenhang"), "sinnzusammenhang" );
	deepEqual( Stem("sirnak"), "sirnak" );
	deepEqual( Stem("sirrr"), "sirrr" );
	deepEqual( Stem("sirrrrrrr"), "sirrrrrrr" );
	deepEqual( Stem("sithri"), "sithri" );
	deepEqual( Stem("sitte"), "sitt" );
	deepEqual( Stem("sitten"), "sitt" );
	deepEqual( Stem("sittengesetz"), "sittengesetz" );
	deepEqual( Stem("sittengesetze"), "sittengesetz" );
	deepEqual( Stem("sittengesetzes"), "sittengesetz" );
	deepEqual( Stem("sittenlehre"), "sittenlehr" );
	deepEqual( Stem("sittig"), "sittig" );
	deepEqual( Stem("sittlich"), "sittlich" );
	deepEqual( Stem("sittliche"), "sittlich" );
	deepEqual( Stem("sittlichen"), "sittlich" );
	deepEqual( Stem("sittlicher"), "sittlich" );
	deepEqual( Stem("sittlichguten"), "sittlichgut" );
	deepEqual( Stem("sittlichkeit"), "sittlich" );
	deepEqual( Stem("sittsam"), "sittsam" );
	deepEqual( Stem("sittsamkeit"), "sittsam" );
	deepEqual( Stem("situation"), "situation" );
	deepEqual( Stem("situationen"), "situation" );
	deepEqual( Stem("sitz"), "sitz" );
	deepEqual( Stem("sitze"), "sitz" );
	deepEqual( Stem("sitzen"), "sitz" );
	deepEqual( Stem("sitzende"), "sitzend" );
	deepEqual( Stem("sitzerei"), "sitzerei" );
	deepEqual( Stem("sitzest"), "sitz" );
	deepEqual( Stem("sitzgegend"), "sitzgeg" );
	deepEqual( Stem("sitzgelegenheit"), "sitzgeleg" );
	deepEqual( Stem("sitzplatz"), "sitzplatz" );
	deepEqual( Stem("sitzt"), "sitzt" );
	deepEqual( Stem("sitzung"), "sitzung" );
	deepEqual( Stem("sitzungssaal"), "sitzungssaal" );
	deepEqual( Stem("sitzungstagen"), "sitzungstag" );
	deepEqual( Stem("sitzungszimmer"), "sitzungszimm" );
	deepEqual( Stem("sitzungszimmers"), "sitzungszimm" );
	deepEqual( Stem("skeptisch"), "skeptisch" );
	deepEqual( Stem("skeptizismus"), "skeptizismus" );
	deepEqual( Stem("skf"), "skf" );
	deepEqual( Stem("skizziert"), "skizziert" );
	deepEqual( Stem("sklave"), "sklav" );
	deepEqual( Stem("skorpionen"), "skorpion" );
	deepEqual( Stem("skribenten"), "skribent" );
	deepEqual( Stem("skrupel"), "skrupel" );
	deepEqual( Stem("slangs"), "slang" );
	deepEqual( Stem("smaragd"), "smaragd" );
	deepEqual( Stem("smidt"), "smidt" );
	deepEqual( Stem("smyrna"), "smyrna" );
	deepEqual( Stem("smyrnateppich"), "smyrnateppich" );
	deepEqual( Stem("so"), "so" );
	deepEqual( Stem("sö"), "so" );
	deepEqual( Stem("sobald"), "sobald" );
	deepEqual( Stem("social"), "social" );
	deepEqual( Stem("sociantis"), "sociantis" );
	deepEqual( Stem("socinianer"), "socinian" );
	deepEqual( Stem("socken"), "sock" );
	deepEqual( Stem("sodalitia"), "sodalitia" );
	deepEqual( Stem("sodann"), "sodann" );
	deepEqual( Stem("sodass"), "sodass" );
	deepEqual( Stem("sodom"), "sodom" );
	deepEqual( Stem("sodoms"), "sodom" );
	deepEqual( Stem("soeben"), "soeb" );
	deepEqual( Stem("sofa"), "sofa" );
	deepEqual( Stem("sofern"), "sof" );
	deepEqual( Stem("sofort"), "sofort" );
	deepEqual( Stem("sofortige"), "sofort" );
	deepEqual( Stem("sog"), "sog" );
	deepEqual( Stem("sogar"), "sogar" );
	deepEqual( Stem("sogen"), "sog" );
	deepEqual( Stem("sogenannte"), "sogenannt" );
	deepEqual( Stem("sogenannten"), "sogenannt" );
	deepEqual( Stem("sogenannter"), "sogenannt" );
	deepEqual( Stem("sogenanntes"), "sogenannt" );
	deepEqual( Stem("sogleich"), "sogleich" );
	deepEqual( Stem("sohle"), "sohl" );
	deepEqual( Stem("sohlen"), "sohl" );
	deepEqual( Stem("sohn"), "sohn" );
	deepEqual( Stem("söhnchen"), "sohnch" );
	deepEqual( Stem("sohne"), "sohn" );
	deepEqual( Stem("söhne"), "sohn" );
	deepEqual( Stem("söhnen"), "sohn" );
	deepEqual( Stem("sohnes"), "sohn" );
	deepEqual( Stem("sohnessohn"), "sohnessohn" );
	deepEqual( Stem("söhnlein"), "sohnlein" );
	deepEqual( Stem("sokrates"), "sokrat" );
	deepEqual( Stem("solang"), "solang" );
	deepEqual( Stem("solange"), "solang" );
	deepEqual( Stem("solch"), "solch" );
	deepEqual( Stem("solche"), "solch" );
	deepEqual( Stem("solchem"), "solch" );
	deepEqual( Stem("solchen"), "solch" );
	deepEqual( Stem("solchenen"), "solch" );
	deepEqual( Stem("solcher"), "solch" );
	deepEqual( Stem("solcherart"), "solcherart" );
	deepEqual( Stem("solchergestalt"), "solchergestalt" );
	deepEqual( Stem("solcherlei"), "solcherlei" );
	deepEqual( Stem("solcherweise"), "solcherweis" );
	deepEqual( Stem("solches"), "solch" );
	deepEqual( Stem("sold"), "sold" );
	deepEqual( Stem("soldat"), "soldat" );
	deepEqual( Stem("soldaten"), "soldat" );
	deepEqual( Stem("soldatengesicht"), "soldatengesicht" );
	deepEqual( Stem("soldatenhaufen"), "soldatenhauf" );
	deepEqual( Stem("soldatenlebens"), "soldatenleb" );
	deepEqual( Stem("soldatenrock"), "soldatenrock" );
	deepEqual( Stem("soldatentum"), "soldatentum" );
	deepEqual( Stem("soldateska"), "soldateska" );
	deepEqual( Stem("solde"), "sold" );
	deepEqual( Stem("soli"), "soli" );
	deepEqual( Stem("solid"), "solid" );
	deepEqual( Stem("solidarische"), "solidar" );
	deepEqual( Stem("solidarisierung"), "solidarisier" );
	deepEqual( Stem("solidaritässtiftung"), "solidaritasstift" );
	deepEqual( Stem("solidarität"), "solidaritat" );
	deepEqual( Stem("solidaritätsbeiträge"), "solidaritatsbeitrag" );
	deepEqual( Stem("solidaritätsfonds"), "solidaritatsfond" );
	deepEqual( Stem("solidaritätsstiftung"), "solidaritatsstift" );
	deepEqual( Stem("soliden"), "solid" );
	deepEqual( Stem("solider"), "solid" );
	deepEqual( Stem("solipsismus"), "solipsismus" );
	deepEqual( Stem("soll"), "soll" );
	deepEqual( Stem("solle"), "soll" );
	deepEqual( Stem("sollen"), "soll" );
	deepEqual( Stem("söller"), "soll" );
	deepEqual( Stem("sollet"), "sollet" );
	deepEqual( Stem("sollst"), "soll" );
	deepEqual( Stem("sollt"), "sollt" );
	deepEqual( Stem("sollte"), "sollt" );
	deepEqual( Stem("sollten"), "sollt" );
	deepEqual( Stem("solltest"), "sollt" );
	deepEqual( Stem("solution"), "solution" );
	deepEqual( Stem("somit"), "somit" );
	deepEqual( Stem("sommer"), "somm" );
	deepEqual( Stem("sommerabend"), "sommerab" );
	deepEqual( Stem("sommerbier"), "sommerbi" );
	deepEqual( Stem("sommerbieres"), "sommerbi" );
	deepEqual( Stem("sommerferien"), "sommerferi" );
	deepEqual( Stem("sommerfrische"), "sommerfr" );
	deepEqual( Stem("sommerhell"), "sommerhell" );
	deepEqual( Stem("sommerhirsch"), "sommerhirsch" );
	deepEqual( Stem("sommerhitz"), "sommerhitz" );
	deepEqual( Stem("sommerkleid"), "sommerkleid" );
	deepEqual( Stem("sommernachmittag"), "sommernachmittag" );
	deepEqual( Stem("sommernacht"), "sommernacht" );
	deepEqual( Stem("sommerrehe"), "sommerreh" );
	deepEqual( Stem("sommerruhe"), "sommerruh" );
	deepEqual( Stem("sommers"), "somm" );
	deepEqual( Stem("sommersaison"), "sommersaison" );
	deepEqual( Stem("sommersonne"), "sommersonn" );
	deepEqual( Stem("sommerspass"), "sommerspass" );
	deepEqual( Stem("sommerspaß"), "sommerspass" );
	deepEqual( Stem("sommerszeit"), "sommerszeit" );
	deepEqual( Stem("sommertag"), "sommertag" );
	deepEqual( Stem("sommertage"), "sommertag" );
	deepEqual( Stem("sommervergnügen"), "sommervergnug" );
	deepEqual( Stem("sonach"), "sonach" );
	deepEqual( Stem("sonderbar"), "sonderbar" );
	deepEqual( Stem("sonderbare"), "sonderbar" );
	deepEqual( Stem("sonderbaren"), "sonderbar" );
	deepEqual( Stem("sonderbarer"), "sonderbar" );
	deepEqual( Stem("sonderbarerweise"), "sonderbarerweis" );
	deepEqual( Stem("sonderbares"), "sonderbar" );
	deepEqual( Stem("sonderbarste"), "sonderbarst" );
	deepEqual( Stem("sonderbarsten"), "sonderbarst" );
	deepEqual( Stem("sonderlich"), "sond" );
	deepEqual( Stem("sonderliche"), "sond" );
	deepEqual( Stem("sonderlichen"), "sond" );
	deepEqual( Stem("sonderliches"), "sond" );
	deepEqual( Stem("sonderling"), "sonderling" );
	deepEqual( Stem("sondern"), "sond" );
	deepEqual( Stem("sonders"), "sond" );
	deepEqual( Stem("sonderschau"), "sonderschau" );
	deepEqual( Stem("sonderweg"), "sonderweg" );
	deepEqual( Stem("sonn"), "sonn" );
	deepEqual( Stem("sonnbeschienen"), "sonnbeschi" );
	deepEqual( Stem("sonne"), "sonn" );
	deepEqual( Stem("sonnen"), "sonn" );
	deepEqual( Stem("sonnenartig"), "sonnenart" );
	deepEqual( Stem("sonnenauf"), "sonnenauf" );
	deepEqual( Stem("sonnenaufgang"), "sonnenaufgang" );
	deepEqual( Stem("sonnenberg"), "sonnenberg" );
	deepEqual( Stem("sonnenblick"), "sonnenblick" );
	deepEqual( Stem("sonnenbrand"), "sonnenbrand" );
	deepEqual( Stem("sonnenbraunes"), "sonnenbraun" );
	deepEqual( Stem("sonnenbrille"), "sonnenbrill" );
	deepEqual( Stem("sonnenfeuer"), "sonnenfeu" );
	deepEqual( Stem("sonnenglut"), "sonnenglut" );
	deepEqual( Stem("sonnenhelle"), "sonnenhell" );
	deepEqual( Stem("sonnenhöhe"), "sonnenhoh" );
	deepEqual( Stem("sonnenland"), "sonnenland" );
	deepEqual( Stem("sonnenlicht"), "sonnenlicht" );
	deepEqual( Stem("sonnenluft"), "sonnenluft" );
	deepEqual( Stem("sonnennebel"), "sonnennebel" );
	deepEqual( Stem("sonnennebeln"), "sonnennebeln" );
	deepEqual( Stem("sonnenringel"), "sonnenringel" );
	deepEqual( Stem("sonnenschein"), "sonnenschein" );
	deepEqual( Stem("sonnenscheine"), "sonnenschein" );
	deepEqual( Stem("sonnenschirmchen"), "sonnenschirmch" );
	deepEqual( Stem("sonnenstrahl"), "sonnenstrahl" );
	deepEqual( Stem("sonnenstrahlen"), "sonnenstrahl" );
	deepEqual( Stem("sonnenuhr"), "sonnenuhr" );
	deepEqual( Stem("sonnenuntergang"), "sonnenuntergang" );
	deepEqual( Stem("sonnenwärme"), "sonnenwarm" );
	deepEqual( Stem("sonngebräunten"), "sonngebraunt" );
	deepEqual( Stem("sonnige"), "sonnig" );
	deepEqual( Stem("sonnigen"), "sonnig" );
	deepEqual( Stem("sonniger"), "sonnig" );
	deepEqual( Stem("sonnigsten"), "sonnig" );
	deepEqual( Stem("sonntag"), "sonntag" );
	deepEqual( Stem("sonntagabend"), "sonntagab" );
	deepEqual( Stem("sonntage"), "sonntag" );
	deepEqual( Stem("sonntagen"), "sonntag" );
	deepEqual( Stem("sonntäglich"), "sonntag" );
	deepEqual( Stem("sonntäglichen"), "sonntag" );
	deepEqual( Stem("sonntagmorgen"), "sonntagmorg" );
	deepEqual( Stem("sonntagnachmittag"), "sonntagnachmittag" );
	deepEqual( Stem("sonntagnachmittags"), "sonntagnachmittag" );
	deepEqual( Stem("sonntags"), "sonntag" );
	deepEqual( Stem("sonntagskleid"), "sonntagskleid" );
	deepEqual( Stem("sonntagskleide"), "sonntagskleid" );
	deepEqual( Stem("sonntagsrock"), "sonntagsrock" );
	deepEqual( Stem("sonntagsschlafrock"), "sonntagsschlafrock" );
	deepEqual( Stem("sonntagsschuhe"), "sonntagsschuh" );
	deepEqual( Stem("sonntagsstaat"), "sonntagsstaat" );
	deepEqual( Stem("sonntagsstille"), "sonntagsstill" );
	deepEqual( Stem("sonntagvormittag"), "sonntagvormittag" );
	deepEqual( Stem("sonnte"), "sonnt" );
	deepEqual( Stem("sono"), "sono" );
	deepEqual( Stem("sonst"), "sonst" );
	deepEqual( Stem("sonstige"), "sonstig" );
	deepEqual( Stem("sonstigen"), "sonstig" );
	deepEqual( Stem("sonstwie"), "sonstwi" );
	deepEqual( Stem("sonstwo"), "sonstwo" );
	deepEqual( Stem("sony"), "sony" );
	deepEqual( Stem("sooft"), "sooft" );
	deepEqual( Stem("sopha"), "sopha" );
	deepEqual( Stem("sophienstrasse"), "sophienstrass" );
	deepEqual( Stem("sophismata"), "sophismata" );
	deepEqual( Stem("sophisterei"), "sophisterei" );
	deepEqual( Stem("sophisticis"), "sophisticis" );
	deepEqual( Stem("sophistik"), "sophist" );
	deepEqual( Stem("sophistische"), "sophist" );
	deepEqual( Stem("sophistischen"), "sophist" );
	deepEqual( Stem("sorge"), "sorg" );
	deepEqual( Stem("sorgen"), "sorg" );
	deepEqual( Stem("sorgenbefreite"), "sorgenbefreit" );
	deepEqual( Stem("sorgende"), "sorgend" );
	deepEqual( Stem("sorgenlos"), "sorgenlos" );
	deepEqual( Stem("sorgenvolle"), "sorgenvoll" );
	deepEqual( Stem("sorgfalt"), "sorgfalt" );
	deepEqual( Stem("sorgfältig"), "sorgfalt" );
	deepEqual( Stem("sorgfältigste"), "sorgfalt" );
	deepEqual( Stem("sorgfältigsten"), "sorgfalt" );
	deepEqual( Stem("sorglich"), "sorglich" );
	deepEqual( Stem("sorglicher"), "sorglich" );
	deepEqual( Stem("sorglos"), "sorglos" );
	deepEqual( Stem("sorglosem"), "sorglos" );
	deepEqual( Stem("sorgloser"), "sorglos" );
	deepEqual( Stem("sorglosigkeit"), "sorglos" );
	deepEqual( Stem("sorgsam"), "sorgsam" );
	deepEqual( Stem("sorgte"), "sorgt" );
	deepEqual( Stem("sorry"), "sorry" );
	deepEqual( Stem("sorte"), "sort" );
	deepEqual( Stem("sosehr"), "sosehr" );
	deepEqual( Stem("soubrette"), "soubrett" );
	deepEqual( Stem("soundso"), "soundso" );
	deepEqual( Stem("souper"), "soup" );
	deepEqual( Stem("sous"), "sous" );
	deepEqual( Stem("souterrain"), "souterrain" );
	deepEqual( Stem("souverän"), "souveran" );
	deepEqual( Stem("soviel"), "soviel" );
	deepEqual( Stem("sowas"), "sowas" );
	deepEqual( Stem("soweit"), "soweit" );
	deepEqual( Stem("sowenig"), "sowen" );
	deepEqual( Stem("sowie"), "sowi" );
	deepEqual( Stem("sowieso"), "sowieso" );
	deepEqual( Stem("sowohl"), "sowohl" );
	deepEqual( Stem("sozialarbeit"), "sozialarbeit" );
	deepEqual( Stem("soziale"), "sozial" );
	deepEqual( Stem("sozialen"), "sozial" );
	deepEqual( Stem("soziales"), "sozial" );
	deepEqual( Stem("sozialhilfe"), "sozialhilf" );
	deepEqual( Stem("sozialisten"), "sozialist" );
	deepEqual( Stem("sozialsystem"), "sozialsyst" );
	deepEqual( Stem("sozinianern"), "sozinian" );
	deepEqual( Stem("sozusagen"), "sozusag" );
	deepEqual( Stem("spähen"), "spah" );
	deepEqual( Stem("spähend"), "spahend" );
	deepEqual( Stem("spähete"), "spahet" );
	deepEqual( Stem("spähte"), "spaht" );
	deepEqual( Stem("spalt"), "spalt" );
	deepEqual( Stem("spalten"), "spalt" );
	deepEqual( Stem("spaltet"), "spaltet" );
	deepEqual( Stem("spaltung"), "spaltung" );
	deepEqual( Stem("späne"), "span" );
	deepEqual( Stem("spanien"), "spani" );
	deepEqual( Stem("spaniern"), "spani" );
	deepEqual( Stem("spaniolen"), "spaniol" );
	deepEqual( Stem("spanische"), "spanisch" );
	deepEqual( Stem("spann"), "spann" );
	deepEqual( Stem("spanne"), "spann" );
	deepEqual( Stem("spannende"), "spannend" );
	deepEqual( Stem("spannender"), "spannend" );
	deepEqual( Stem("spannt"), "spannt" );
	deepEqual( Stem("spannte"), "spannt" );
	deepEqual( Stem("spannten"), "spannt" );
	deepEqual( Stem("spannung"), "spannung" );
	deepEqual( Stem("spannungen"), "spannung" );
	deepEqual( Stem("spannungsgeladen"), "spannungsgelad" );
	deepEqual( Stem("spannungsvolle"), "spannungsvoll" );
	deepEqual( Stem("sparbüchse"), "sparbuchs" );
	deepEqual( Stem("spare"), "spar" );
	deepEqual( Stem("sparen"), "spar" );
	deepEqual( Stem("spargel"), "spargel" );
	deepEqual( Stem("sparkasse"), "sparkass" );
	deepEqual( Stem("spärliche"), "sparlich" );
	deepEqual( Stem("spärlichen"), "sparlich" );
	deepEqual( Stem("sparpfennig"), "sparpfenn" );
	deepEqual( Stem("sparsam"), "sparsam" );
	deepEqual( Stem("sparsame"), "sparsam" );
	deepEqual( Stem("sparsamer"), "sparsam" );
	deepEqual( Stem("sparsamkeit"), "sparsam" );
	deepEqual( Stem("sparte"), "spart" );
	deepEqual( Stem("spass"), "spass" );
	deepEqual( Stem("spaß"), "spass" );
	deepEqual( Stem("spasse"), "spass" );
	deepEqual( Stem("spässe"), "spass" );
	deepEqual( Stem("späße"), "spass" );
	deepEqual( Stem("spasshaft"), "spasshaft" );
	deepEqual( Stem("spasshafte"), "spasshaft" );
	deepEqual( Stem("spasshaften"), "spasshaft" );
	deepEqual( Stem("spassig"), "spassig" );
	deepEqual( Stem("spassiges"), "spassig" );
	deepEqual( Stem("spät"), "spat" );
	deepEqual( Stem("späten"), "spat" );
	deepEqual( Stem("später"), "spat" );
	deepEqual( Stem("spätere"), "spat" );
	deepEqual( Stem("späterhin"), "spaterhin" );
	deepEqual( Stem("spätesten"), "spat" );
	deepEqual( Stem("spätestens"), "spatest" );
	deepEqual( Stem("spätregen"), "spatreg" );
	deepEqual( Stem("spatzen"), "spatz" );
	deepEqual( Stem("spazier"), "spazi" );
	deepEqual( Stem("spazieren"), "spazi" );
	deepEqual( Stem("spazierengeflogen"), "spazierengeflog" );
	deepEqual( Stem("spazierengehen"), "spazierengeh" );
	deepEqual( Stem("spazierenzugehen"), "spazierenzugeh" );
	deepEqual( Stem("spazierest"), "spazier" );
	deepEqual( Stem("spaziergang"), "spaziergang" );
	deepEqual( Stem("spaziergange"), "spaziergang" );
	deepEqual( Stem("spaziergänger"), "spaziergang" );
	deepEqual( Stem("spazierstock"), "spazierstock" );
	deepEqual( Stem("spazierstöckchen"), "spazierstockch" );
	deepEqual( Stem("spazierstöckl"), "spazierstockl" );
	deepEqual( Stem("spazierte"), "spaziert" );
	deepEqual( Stem("spe"), "spe" );
	deepEqual( Stem("spechtes"), "specht" );
	deepEqual( Stem("speciem"), "speci" );
	deepEqual( Stem("species"), "speci" );
	deepEqual( Stem("speck"), "speck" );
	deepEqual( Stem("speckriemchen"), "speckriemch" );
	deepEqual( Stem("speckseite"), "speckseit" );
	deepEqual( Stem("spediteure"), "spediteur" );
	deepEqual( Stem("speeres"), "speer" );
	deepEqual( Stem("speichel"), "speichel" );
	deepEqual( Stem("speichern"), "speich" );
	deepEqual( Stem("speise"), "speis" );
	deepEqual( Stem("speisedüfte"), "speiseduft" );
	deepEqual( Stem("speisen"), "speis" );
	deepEqual( Stem("speisesaal"), "speisesaal" );
	deepEqual( Stem("speiset"), "speiset" );
	deepEqual( Stem("speisete"), "speiset" );
	deepEqual( Stem("speisetisch"), "speiset" );
	deepEqual( Stem("speisewagen"), "speisewag" );
	deepEqual( Stem("speisezettel"), "speisezettel" );
	deepEqual( Stem("speisopfer"), "speisopf" );
	deepEqual( Stem("speisopfern"), "speisopf" );
	deepEqual( Stem("speiste"), "speist" );
	deepEqual( Stem("spektakel"), "spektakel" );
	deepEqual( Stem("spektrum"), "spektrum" );
	deepEqual( Stem("spekulant"), "spekulant" );
	deepEqual( Stem("spekulanten"), "spekulant" );
	deepEqual( Stem("spekulation"), "spekulation" );
	deepEqual( Stem("spekulationsbetätigung"), "spekulationsbetat" );
	deepEqual( Stem("spekulativ"), "spekulativ" );
	deepEqual( Stem("spekulative"), "spekulativ" );
	deepEqual( Stem("spekulativen"), "spekulativ" );
	deepEqual( Stem("spekulativer"), "spekulativ" );
	deepEqual( Stem("spekulatives"), "spekulativ" );
	deepEqual( Stem("spekulierten"), "spekuliert" );
	deepEqual( Stem("spelt"), "spelt" );
	deepEqual( Stem("spelts"), "spelt" );
	deepEqual( Stem("spelunke"), "spelunk" );
	deepEqual( Stem("spelunkelein"), "spelunkelein" );
	deepEqual( Stem("spenden"), "spend" );
	deepEqual( Stem("spendierte"), "spendiert" );
	deepEqual( Stem("spenser"), "spens" );
	deepEqual( Stem("sperling"), "sperling" );
	deepEqual( Stem("sperlinge"), "sperling" );
	deepEqual( Stem("sperrmäuler"), "sperrmaul" );
	deepEqual( Stem("sperrte"), "sperrt" );
	deepEqual( Stem("sperrten"), "sperrt" );
	deepEqual( Stem("spezereien"), "spezerei" );
	deepEqual( Stem("spezialfonds"), "spezialfond" );
	deepEqual( Stem("speziellen"), "speziell" );
	deepEqual( Stem("spezielles"), "speziell" );
	deepEqual( Stem("spezies"), "spezi" );
	deepEqual( Stem("spezifisch"), "spezif" );
	deepEqual( Stem("sphäre"), "sphar" );
	deepEqual( Stem("sphären"), "sphar" );
	deepEqual( Stem("spieen"), "spieen" );
	deepEqual( Stem("spiegel"), "spiegel" );
	deepEqual( Stem("spiegelbild"), "spiegelbild" );
	deepEqual( Stem("spiegelchen"), "spiegelch" );
	deepEqual( Stem("spiegelein"), "spiegelein" );
	deepEqual( Stem("spiegels"), "spiegel" );
	deepEqual( Stem("spiegelt"), "spiegelt" );
	deepEqual( Stem("spiegelte"), "spiegelt" );
	deepEqual( Stem("spiegelwände"), "spiegelwand" );
	deepEqual( Stem("spiel"), "spiel" );
	deepEqual( Stem("spielchen"), "spielch" );
	deepEqual( Stem("spiele"), "spiel" );
	deepEqual( Stem("spielen"), "spiel" );
	deepEqual( Stem("spielend"), "spielend" );
	deepEqual( Stem("spielenden"), "spielend" );
	deepEqual( Stem("spielerei"), "spielerei" );
	deepEqual( Stem("spielet"), "spielet" );
	deepEqual( Stem("spielgelde"), "spielgeld" );
	deepEqual( Stem("spielgesellen"), "spielgesell" );
	deepEqual( Stem("spielkameraden"), "spielkamerad" );
	deepEqual( Stem("spielkugel"), "spielkugel" );
	deepEqual( Stem("spielraum"), "spielraum" );
	deepEqual( Stem("spielregeln"), "spielregeln" );
	deepEqual( Stem("spielschulden"), "spielschuld" );
	deepEqual( Stem("spielstätte"), "spielstatt" );
	deepEqual( Stem("spielt"), "spielt" );
	deepEqual( Stem("spielte"), "spielt" );
	deepEqual( Stem("spielten"), "spielt" );
	deepEqual( Stem("spieltisch"), "spieltisch" );
	deepEqual( Stem("spielwerke"), "spielwerk" );
	deepEqual( Stem("spielzeug"), "spielzeug" );
	deepEqual( Stem("spielzeuglandschaft"), "spielzeuglandschaft" );
	deepEqual( Stem("spielzeugmaikäfer"), "spielzeugmaikaf" );
	deepEqual( Stem("spielzeugvögelchen"), "spielzeugvogelch" );
	deepEqual( Stem("spielzeugwaffen"), "spielzeugwaff" );
	deepEqual( Stem("spiess"), "spiess" );
	deepEqual( Stem("spiesse"), "spiess" );
	deepEqual( Stem("spiessen"), "spiess" );
	deepEqual( Stem("spinne"), "spinn" );
	deepEqual( Stem("spinnen"), "spinn" );
	deepEqual( Stem("spinnenlied"), "spinnenlied" );
	deepEqual( Stem("spinnerei"), "spinnerei" );
	deepEqual( Stem("spinneweben"), "spinneweb" );
	deepEqual( Stem("spinnrädchen"), "spinnradch" );
	deepEqual( Stem("spinnrocken"), "spinnrock" );
	deepEqual( Stem("spinnweben"), "spinnweb" );
	deepEqual( Stem("spion"), "spion" );
	deepEqual( Stem("spiraculim"), "spiraculim" );
	deepEqual( Stem("spirieren"), "spiri" );
	deepEqual( Stem("spirituale"), "spiritual" );
	deepEqual( Stem("spiritualis"), "spiritualis" );
	deepEqual( Stem("spiritus"), "spiritus" );
	deepEqual( Stem("spiritusfeuer"), "spiritusfeu" );
	deepEqual( Stem("spitakl"), "spitakl" );
	deepEqual( Stem("spital"), "spital" );
	deepEqual( Stem("spittel"), "spittel" );
	deepEqual( Stem("spitting"), "spitting" );
	deepEqual( Stem("spitz"), "spitz" );
	deepEqual( Stem("spitzbart"), "spitzbart" );
	deepEqual( Stem("spitzbauch"), "spitzbauch" );
	deepEqual( Stem("spitzbube"), "spitzbub" );
	deepEqual( Stem("spitzbuben"), "spitzbub" );
	deepEqual( Stem("spitze"), "spitz" );
	deepEqual( Stem("spitzen"), "spitz" );
	deepEqual( Stem("spitzenkandidat"), "spitzenkandidat" );
	deepEqual( Stem("spitzes"), "spitz" );
	deepEqual( Stem("spitzfindigkeiten"), "spitzfind" );
	deepEqual( Stem("spitzgras"), "spitzgras" );
	deepEqual( Stem("spitzig"), "spitzig" );
	deepEqual( Stem("spitzige"), "spitzig" );
	deepEqual( Stem("spitzigen"), "spitzig" );
	deepEqual( Stem("spitzigsten"), "spitzig" );
	deepEqual( Stem("spitzte"), "spitzt" );
	deepEqual( Stem("splitternackt"), "splitternackt" );
	deepEqual( Stem("sponton"), "sponton" );
	deepEqual( Stem("sporen"), "spor" );
	deepEqual( Stem("spornstreichs"), "spornstreich" );
	deepEqual( Stem("spornte"), "spornt" );
	deepEqual( Stem("sport"), "sport" );
	deepEqual( Stem("spott"), "spott" );
	deepEqual( Stem("spotten"), "spott" );
	deepEqual( Stem("spötter"), "spott" );
	deepEqual( Stem("spottet"), "spottet" );
	deepEqual( Stem("spottete"), "spottet" );
	deepEqual( Stem("spottgeburten"), "spottgeburt" );
	deepEqual( Stem("spöttisch"), "spottisch" );
	deepEqual( Stem("spöttische"), "spottisch" );
	deepEqual( Stem("spöttischem"), "spottisch" );
	deepEqual( Stem("spöttischen"), "spottisch" );
	deepEqual( Stem("spottlaus"), "spottlaus" );
	deepEqual( Stem("spottlust"), "spottlust" );
	deepEqual( Stem("spp"), "spp" );
	deepEqual( Stem("sprach"), "sprach" );
	deepEqual( Stem("sprache"), "sprach" );
	deepEqual( Stem("spräche"), "sprach" );
	deepEqual( Stem("sprachen"), "sprach" );
	deepEqual( Stem("sprächest"), "sprach" );
	deepEqual( Stem("sprachgebrauche"), "sprachgebrauch" );
	deepEqual( Stem("sprachigen"), "sprachig" );
	deepEqual( Stem("sprachlehre"), "sprachlehr" );
	deepEqual( Stem("sprachrohr"), "sprachrohr" );
	deepEqual( Stem("sprachst"), "sprach" );
	deepEqual( Stem("sprang"), "sprang" );
	deepEqual( Stem("sprangen"), "sprang" );
	deepEqual( Stem("spreche"), "sprech" );
	deepEqual( Stem("sprechen"), "sprech" );
	deepEqual( Stem("sprechend"), "sprechend" );
	deepEqual( Stem("sprechenden"), "sprechend" );
	deepEqual( Stem("sprechender"), "sprechend" );
	deepEqual( Stem("sprechens"), "sprech" );
	deepEqual( Stem("sprecht"), "sprecht" );
	deepEqual( Stem("sprechzeit"), "sprechzeit" );
	deepEqual( Stem("spree"), "spree" );
	deepEqual( Stem("spreemetropole"), "spreemetropol" );
	deepEqual( Stem("spreizen"), "spreiz" );
	deepEqual( Stem("spreizte"), "spreizt" );
	deepEqual( Stem("sprengen"), "spreng" );
	deepEqual( Stem("sprengkapseln"), "sprengkapseln" );
	deepEqual( Stem("sprengt"), "sprengt" );
	deepEqual( Stem("sprengte"), "sprengt" );
	deepEqual( Stem("spreu"), "spreu" );
	deepEqual( Stem("sprich"), "sprich" );
	deepEqual( Stem("sprichst"), "sprich" );
	deepEqual( Stem("spricht"), "spricht" );
	deepEqual( Stem("sprichwort"), "sprichwort" );
	deepEqual( Stem("sprichwörter"), "sprichwort" );
	deepEqual( Stem("sprichwortes"), "sprichwort" );
	deepEqual( Stem("spring"), "spring" );
	deepEqual( Stem("springen"), "spring" );
	deepEqual( Stem("springer"), "spring" );
	deepEqual( Stem("springt"), "springt" );
	deepEqual( Stem("spritze"), "spritz" );
	deepEqual( Stem("spritzen"), "spritz" );
	deepEqual( Stem("spröde"), "sprod" );
	deepEqual( Stem("sprödeste"), "sprod" );
	deepEqual( Stem("sprödigkeit"), "sprodig" );
	deepEqual( Stem("spross"), "spross" );
	deepEqual( Stem("sproß"), "spross" );
	deepEqual( Stem("sprosse"), "spross" );
	deepEqual( Stem("sprossen"), "spross" );
	deepEqual( Stem("sprossend"), "sprossend" );
	deepEqual( Stem("sprossenden"), "sprossend" );
	deepEqual( Stem("sprösslinge"), "sprossling" );
	deepEqual( Stem("sprößlinge"), "sprossling" );
	deepEqual( Stem("sprosste"), "sprosst" );
	deepEqual( Stem("sproßte"), "sprosst" );
	deepEqual( Stem("spruch"), "spruch" );
	deepEqual( Stem("sprüche"), "spruch" );
	deepEqual( Stem("spruches"), "spruch" );
	deepEqual( Stem("sprüchlein"), "spruchlein" );
	deepEqual( Stem("spruchversen"), "spruchvers" );
	deepEqual( Stem("spruchweise"), "spruchweis" );
	deepEqual( Stem("sprudel"), "sprudel" );
	deepEqual( Stem("sprudelflasche"), "sprudelflasch" );
	deepEqual( Stem("sprühende"), "spruhend" );
	deepEqual( Stem("sprung"), "sprung" );
	deepEqual( Stem("sprungbrett"), "sprungbrett" );
	deepEqual( Stem("sprunge"), "sprung" );
	deepEqual( Stem("sprünge"), "sprung" );
	deepEqual( Stem("sprüngen"), "sprung" );
	deepEqual( Stem("spucke"), "spuck" );
	deepEqual( Stem("spuckte"), "spuckt" );
	deepEqual( Stem("spuk"), "spuk" );
	deepEqual( Stem("spülte"), "spult" );
	deepEqual( Stem("spur"), "spur" );
	deepEqual( Stem("spür"), "spur" );
	deepEqual( Stem("spürbar"), "spurbar" );
	deepEqual( Stem("spuren"), "spur" );
	deepEqual( Stem("spüren"), "spur" );
	deepEqual( Stem("spürte"), "spurt" );
	deepEqual( Stem("sputet"), "sputet" );
	deepEqual( Stem("sputete"), "sputet" );
	deepEqual( Stem("squat"), "squat" );
	deepEqual( Stem("sr"), "sr" );
	deepEqual( Stem("st"), "st" );
	deepEqual( Stem("staat"), "staat" );
	deepEqual( Stem("staate"), "staat" );
	deepEqual( Stem("staaten"), "staat" );
	deepEqual( Stem("staates"), "staat" );
	deepEqual( Stem("staatlich"), "staatlich" );
	deepEqual( Stem("staatliche"), "staatlich" );
	deepEqual( Stem("staatlicher"), "staatlich" );
	deepEqual( Stem("staatlicherseits"), "staatlicherseit" );
	deepEqual( Stem("staatsanwalt"), "staatsanwalt" );
	deepEqual( Stem("staatsbürgerbewußtsein"), "staatsburgerbewusstsein" );
	deepEqual( Stem("staatskirche"), "staatskirch" );
	deepEqual( Stem("staatskirchen"), "staatskirch" );
	deepEqual( Stem("staatskleid"), "staatskleid" );
	deepEqual( Stem("staatsknete"), "staatsknet" );
	deepEqual( Stem("staatsprüfungen"), "staatspruf" );
	deepEqual( Stem("staatsschuld"), "staatsschuld" );
	deepEqual( Stem("staatssicherheits"), "staatssich" );
	deepEqual( Stem("staatsverschuldung"), "staatsverschuld" );
	deepEqual( Stem("staatswesen"), "staatswes" );
	deepEqual( Stem("stab"), "stab" );
	deepEqual( Stem("stäbchen"), "stabch" );
	deepEqual( Stem("stabe"), "stab" );
	deepEqual( Stem("stäbe"), "stab" );
	deepEqual( Stem("stäben"), "stab" );
	deepEqual( Stem("stabes"), "stab" );
	deepEqual( Stem("stabil"), "stabil" );
	deepEqual( Stem("stabilisierend"), "stabilisier" );
	deepEqual( Stem("stabilisierende"), "stabilisier" );
	deepEqual( Stem("stabsoffiziere"), "stabsoffizi" );
	deepEqual( Stem("stach"), "stach" );
	deepEqual( Stem("stachel"), "stachel" );
	deepEqual( Stem("stachelgesträuch"), "stachelgestrauch" );
	deepEqual( Stem("stachelgewächs"), "stachelgewach" );
	deepEqual( Stem("stacheln"), "stacheln" );
	deepEqual( Stem("stachelstrauch"), "stachelstrauch" );
	deepEqual( Stem("stachen"), "stach" );
	deepEqual( Stem("stachlige"), "stachlig" );
	deepEqual( Stem("stachligen"), "stachlig" );
	deepEqual( Stem("stad"), "stad" );
	deepEqual( Stem("stadien"), "stadi" );
	deepEqual( Stem("stadium"), "stadium" );
	deepEqual( Stem("stadt"), "stadt" );
	deepEqual( Stem("städtchen"), "stadtch" );
	deepEqual( Stem("städtchens"), "stadtch" );
	deepEqual( Stem("städte"), "stadt" );
	deepEqual( Stem("städten"), "stadt" );
	deepEqual( Stem("städter"), "stadt" );
	deepEqual( Stem("stadtfrau"), "stadtfrau" );
	deepEqual( Stem("stadtgesetze"), "stadtgesetz" );
	deepEqual( Stem("stadthexenmeister"), "stadthexenmeist" );
	deepEqual( Stem("städtisch"), "stadtisch" );
	deepEqual( Stem("städtischen"), "stadtisch" );
	deepEqual( Stem("städtlein"), "stadtlein" );
	deepEqual( Stem("stadtmauer"), "stadtmau" );
	deepEqual( Stem("stadtname"), "stadtnam" );
	deepEqual( Stem("stadtpfarrer"), "stadtpfarr" );
	deepEqual( Stem("stadtrand"), "stadtrand" );
	deepEqual( Stem("stadtschreiber"), "stadtschreib" );
	deepEqual( Stem("stadtschule"), "stadtschul" );
	deepEqual( Stem("stadtteil"), "stadtteil" );
	deepEqual( Stem("stadtviertel"), "stadtviertel" );
	deepEqual( Stem("stadtvierteln"), "stadtvierteln" );
	deepEqual( Stem("stadtwohnung"), "stadtwohn" );
	deepEqual( Stem("stadtzürcher"), "stadtzurch" );
	deepEqual( Stem("staffiert"), "staffiert" );
	deepEqual( Stem("stagnation"), "stagnation" );
	deepEqual( Stem("stahl"), "stahl" );
	deepEqual( Stem("stahlblauen"), "stahlblau" );
	deepEqual( Stem("stählen"), "stahl" );
	deepEqual( Stem("stak"), "stak" );
	deepEqual( Stem("stäken"), "stak" );
	deepEqual( Stem("staketen"), "staket" );
	deepEqual( Stem("stall"), "stall" );
	deepEqual( Stem("stalle"), "stall" );
	deepEqual( Stem("ställe"), "stall" );
	deepEqual( Stem("stallkette"), "stallkett" );
	deepEqual( Stem("stallknechte"), "stallknecht" );
	deepEqual( Stem("stalltür"), "stalltur" );
	deepEqual( Stem("stalsett"), "stalsett" );
	deepEqual( Stem("stamina"), "stamina" );
	deepEqual( Stem("stamm"), "stamm" );
	deepEqual( Stem("stämmchen"), "stammch" );
	deepEqual( Stem("stamme"), "stamm" );
	deepEqual( Stem("stämme"), "stamm" );
	deepEqual( Stem("stammelte"), "stammelt" );
	deepEqual( Stem("stammen"), "stamm" );
	deepEqual( Stem("stämmen"), "stamm" );
	deepEqual( Stem("stammende"), "stammend" );
	deepEqual( Stem("stammenden"), "stammend" );
	deepEqual( Stem("stammlokal"), "stammlokal" );
	deepEqual( Stem("stammschlosses"), "stammschloss" );
	deepEqual( Stem("stammt"), "stammt" );
	deepEqual( Stem("stammtafel"), "stammtafel" );
	deepEqual( Stem("stammte"), "stammt" );
	deepEqual( Stem("stammten"), "stammt" );
	deepEqual( Stem("stammtischfeierlichkeit"), "stammtischfeier" );
	deepEqual( Stem("stammväter"), "stammvat" );
	deepEqual( Stem("stammvaters"), "stammvat" );
	deepEqual( Stem("stampfe"), "stampf" );
	deepEqual( Stem("stampfen"), "stampf" );
	deepEqual( Stem("stampfens"), "stampf" );
	deepEqual( Stem("stand"), "stand" );
	deepEqual( Stem("ständchen"), "standch" );
	deepEqual( Stem("stande"), "stand" );
	deepEqual( Stem("stände"), "stand" );
	deepEqual( Stem("standen"), "stand" );
	deepEqual( Stem("standenes"), "stand" );
	deepEqual( Stem("ständerat"), "standerat" );
	deepEqual( Stem("standhalten"), "standhalt" );
	deepEqual( Stem("ständig"), "standig" );
	deepEqual( Stem("ständige"), "standig" );
	deepEqual( Stem("standort"), "standort" );
	deepEqual( Stem("standpunkt"), "standpunkt" );
	deepEqual( Stem("standpunkte"), "standpunkt" );
	deepEqual( Stem("standrecht"), "standrecht" );
	deepEqual( Stem("stange"), "stang" );
	deepEqual( Stem("stangen"), "stang" );
	deepEqual( Stem("stank"), "stank" );
	deepEqual( Stem("stänker"), "stank" );
	deepEqual( Stem("stapften"), "stapft" );
	deepEqual( Stem("starb"), "starb" );
	deepEqual( Stem("starben"), "starb" );
	deepEqual( Stem("stärger"), "starg" );
	deepEqual( Stem("stark"), "stark" );
	deepEqual( Stem("starke"), "stark" );
	deepEqual( Stem("stärke"), "stark" );
	deepEqual( Stem("starkem"), "stark" );
	deepEqual( Stem("starken"), "stark" );
	deepEqual( Stem("stärken"), "stark" );
	deepEqual( Stem("starker"), "stark" );
	deepEqual( Stem("stärker"), "stark" );
	deepEqual( Stem("stärkere"), "stark" );
	deepEqual( Stem("stärkeren"), "stark" );
	deepEqual( Stem("stärkern"), "stark" );
	deepEqual( Stem("starkes"), "stark" );
	deepEqual( Stem("stärkest"), "stark" );
	deepEqual( Stem("stärkste"), "stark" );
	deepEqual( Stem("stärksten"), "stark" );
	deepEqual( Stem("stärkte"), "starkt" );
	deepEqual( Stem("stärkung"), "starkung" );
	deepEqual( Stem("starnberg"), "starnberg" );
	deepEqual( Stem("starnberger"), "starnberg" );
	deepEqual( Stem("starr"), "starr" );
	deepEqual( Stem("starre"), "starr" );
	deepEqual( Stem("starren"), "starr" );
	deepEqual( Stem("starrkopf"), "starrkopf" );
	deepEqual( Stem("starrte"), "starrt" );
	deepEqual( Stem("starrten"), "starrt" );
	deepEqual( Stem("starten"), "start" );
	deepEqual( Stem("statdanzeiger"), "statdanzeig" );
	deepEqual( Stem("station"), "station" );
	deepEqual( Stem("statistik"), "statist" );
	deepEqual( Stem("statistisch"), "statist" );
	deepEqual( Stem("statt"), "statt" );
	deepEqual( Stem("stattdessen"), "stattdess" );
	deepEqual( Stem("stätte"), "statt" );
	deepEqual( Stem("statten"), "statt" );
	deepEqual( Stem("stattfand"), "stattfand" );
	deepEqual( Stem("stattfände"), "stattfand" );
	deepEqual( Stem("stattfanden"), "stattfand" );
	deepEqual( Stem("stattfinde"), "stattfind" );
	deepEqual( Stem("stattfinden"), "stattfind" );
	deepEqual( Stem("stattfindenden"), "stattfind" );
	deepEqual( Stem("stattfindet"), "stattfindet" );
	deepEqual( Stem("stattgefunden"), "stattgefund" );
	deepEqual( Stem("statthatte"), "statthatt" );
	deepEqual( Stem("stattlich"), "stattlich" );
	deepEqual( Stem("stattliche"), "stattlich" );
	deepEqual( Stem("stattlichen"), "stattlich" );
	deepEqual( Stem("stattliches"), "stattlich" );
	deepEqual( Stem("stattlichkeit"), "stattlich" );
	deepEqual( Stem("statue"), "statu" );
	deepEqual( Stem("status"), "status" );
	deepEqual( Stem("statuta"), "statuta" );
	deepEqual( Stem("statutum"), "statutum" );
	deepEqual( Stem("staub"), "staub" );
	deepEqual( Stem("stäubchen"), "staubch" );
	deepEqual( Stem("staube"), "staub" );
	deepEqual( Stem("staubes"), "staub" );
	deepEqual( Stem("staubhemden"), "staubhemd" );
	deepEqual( Stem("staubigen"), "staubig" );
	deepEqual( Stem("staubte"), "staubt" );
	deepEqual( Stem("staubwolke"), "staubwolk" );
	deepEqual( Stem("staude"), "staud" );
	deepEqual( Stem("stauden"), "staud" );
	deepEqual( Stem("staune"), "staun" );
	deepEqual( Stem("staunen"), "staun" );
	deepEqual( Stem("staunend"), "staunend" );
	deepEqual( Stem("staunte"), "staunt" );
	deepEqual( Stem("stechen"), "stech" );
	deepEqual( Stem("stechend"), "stechend" );
	deepEqual( Stem("stechender"), "stechend" );
	deepEqual( Stem("stechpalme"), "stechpalm" );
	deepEqual( Stem("stecke"), "steck" );
	deepEqual( Stem("stecken"), "steck" );
	deepEqual( Stem("steckenblieb"), "steckenblieb" );
	deepEqual( Stem("steckend"), "steckend" );
	deepEqual( Stem("steckenden"), "steckend" );
	deepEqual( Stem("steckengeblieben"), "steckengeblieb" );
	deepEqual( Stem("steckleinspringer"), "steckleinspring" );
	deepEqual( Stem("stecknadel"), "stecknadel" );
	deepEqual( Stem("stecknadelaugen"), "stecknadelaug" );
	deepEqual( Stem("steckt"), "steckt" );
	deepEqual( Stem("steckte"), "steckt" );
	deepEqual( Stem("steckten"), "steckt" );
	deepEqual( Stem("steg"), "steg" );
	deepEqual( Stem("stege"), "steg" );
	deepEqual( Stem("stegemann"), "stegemann" );
	deepEqual( Stem("stegreif"), "stegreif" );
	deepEqual( Stem("steh"), "steh" );
	deepEqual( Stem("stehe"), "steh" );
	deepEqual( Stem("stehen"), "steh" );
	deepEqual( Stem("stehenbleiben"), "stehenbleib" );
	deepEqual( Stem("stehenbleibend"), "stehenbleib" );
	deepEqual( Stem("stehenbleibens"), "stehenbleib" );
	deepEqual( Stem("stehenbleibt"), "stehenbleibt" );
	deepEqual( Stem("stehenblieb"), "stehenblieb" );
	deepEqual( Stem("stehend"), "stehend" );
	deepEqual( Stem("stehenden"), "stehend" );
	deepEqual( Stem("stehender"), "stehend" );
	deepEqual( Stem("stehengeblieben"), "stehengeblieb" );
	deepEqual( Stem("stehenliess"), "stehenliess" );
	deepEqual( Stem("stehens"), "steh" );
	deepEqual( Stem("stehest"), "steh" );
	deepEqual( Stem("stehet"), "stehet" );
	deepEqual( Stem("stehle"), "stehl" );
	deepEqual( Stem("stehlen"), "stehl" );
	deepEqual( Stem("stehn"), "stehn" );
	deepEqual( Stem("stehnblieben"), "stehnblieb" );
	deepEqual( Stem("stehst"), "steh" );
	deepEqual( Stem("steht"), "steht" );
	deepEqual( Stem("steif"), "steif" );
	deepEqual( Stem("steifbeinig"), "steifbein" );
	deepEqual( Stem("steife"), "steif" );
	deepEqual( Stem("steifen"), "steif" );
	deepEqual( Stem("steifendem"), "steifend" );
	deepEqual( Stem("steifer"), "steif" );
	deepEqual( Stem("steig"), "steig" );
	deepEqual( Stem("steigbügel"), "steigbugel" );
	deepEqual( Stem("steige"), "steig" );
	deepEqual( Stem("steigen"), "steig" );
	deepEqual( Stem("steigend"), "steigend" );
	deepEqual( Stem("steigende"), "steigend" );
	deepEqual( Stem("steigern"), "steig" );
	deepEqual( Stem("steigerte"), "steigert" );
	deepEqual( Stem("steigerung"), "steiger" );
	deepEqual( Stem("steiget"), "steiget" );
	deepEqual( Stem("steigt"), "steigt" );
	deepEqual( Stem("steil"), "steil" );
	deepEqual( Stem("steile"), "steil" );
	deepEqual( Stem("steilen"), "steil" );
	deepEqual( Stem("stein"), "stein" );
	deepEqual( Stem("steinbeschwerte"), "steinbeschwert" );
	deepEqual( Stem("steinblöcke"), "steinblock" );
	deepEqual( Stem("steinboden"), "steinbod" );
	deepEqual( Stem("steinbruch"), "steinbruch" );
	deepEqual( Stem("steinbrüche"), "steinbruch" );
	deepEqual( Stem("steinbruches"), "steinbruch" );
	deepEqual( Stem("steinchen"), "steinch" );
	deepEqual( Stem("steindinge"), "steinding" );
	deepEqual( Stem("steine"), "stein" );
	deepEqual( Stem("steineiche"), "steineich" );
	deepEqual( Stem("steinen"), "stein" );
	deepEqual( Stem("steinerne"), "steinern" );
	deepEqual( Stem("steinernen"), "steinern" );
	deepEqual( Stem("steinernes"), "steinern" );
	deepEqual( Stem("steinfleckes"), "steinfleck" );
	deepEqual( Stem("steingeröll"), "steingeroll" );
	deepEqual( Stem("steingraue"), "steingrau" );
	deepEqual( Stem("steinhaufen"), "steinhauf" );
	deepEqual( Stem("steinige"), "steinig" );
	deepEqual( Stem("steinigen"), "steinig" );
	deepEqual( Stem("steinigens"), "steinig" );
	deepEqual( Stem("steiniges"), "steinig" );
	deepEqual( Stem("steinigung"), "steinig" );
	deepEqual( Stem("steinkamm"), "steinkamm" );
	deepEqual( Stem("steinklotz"), "steinklotz" );
	deepEqual( Stem("steinlagern"), "steinlag" );
	deepEqual( Stem("steinlasten"), "steinlast" );
	deepEqual( Stem("steinmasse"), "steinmass" );
	deepEqual( Stem("steinpieper"), "steinpiep" );
	deepEqual( Stem("steinpiepers"), "steinpiep" );
	deepEqual( Stem("steinrand"), "steinrand" );
	deepEqual( Stem("steins"), "stein" );
	deepEqual( Stem("steinwerk"), "steinwerk" );
	deepEqual( Stem("stell"), "stell" );
	deepEqual( Stem("stelle"), "stell" );
	deepEqual( Stem("stelledie"), "stelledi" );
	deepEqual( Stem("stellen"), "stell" );
	deepEqual( Stem("stelleninhaber"), "stelleninhab" );
	deepEqual( Stem("stellenleiters"), "stellenleit" );
	deepEqual( Stem("stellt"), "stellt" );
	deepEqual( Stem("stellte"), "stellt" );
	deepEqual( Stem("stellten"), "stellt" );
	deepEqual( Stem("stellung"), "stellung" );
	deepEqual( Stem("stellungen"), "stellung" );
	deepEqual( Stem("stellungnahmen"), "stellungnahm" );
	deepEqual( Stem("stellvertretende"), "stellvertret" );
	deepEqual( Stem("stellvertreter"), "stellvertret" );
	deepEqual( Stem("stellvertreters"), "stellvertret" );
	deepEqual( Stem("stelzten"), "stelzt" );
	deepEqual( Stem("stemmte"), "stemmt" );
	deepEqual( Stem("stempel"), "stempel" );
	deepEqual( Stem("stemraketen"), "stemraket" );
	deepEqual( Stem("sten"), "sten" );
	deepEqual( Stem("stengel"), "stengel" );
	deepEqual( Stem("steppen"), "stepp" );
	deepEqual( Stem("sterbe"), "sterb" );
	deepEqual( Stem("sterbebegleiterdie"), "sterbebegleiterdi" );
	deepEqual( Stem("sterbebegleitungs"), "sterbebegleit" );
	deepEqual( Stem("sterbebette"), "sterbebett" );
	deepEqual( Stem("sterbeforscherin"), "sterbeforscherin" );
	deepEqual( Stem("sterbeforschung"), "sterbeforsch" );
	deepEqual( Stem("sterben"), "sterb" );
	deepEqual( Stem("sterbend"), "sterbend" );
	deepEqual( Stem("sterbenden"), "sterbend" );
	deepEqual( Stem("sterbendes"), "sterbend" );
	deepEqual( Stem("sterbenswörtchen"), "sterbenswortch" );
	deepEqual( Stem("sterbet"), "sterbet" );
	deepEqual( Stem("sterblichen"), "sterblich" );
	deepEqual( Stem("sterblicher"), "sterblich" );
	deepEqual( Stem("sterbn"), "sterbn" );
	deepEqual( Stem("sterbstund"), "sterbstund" );
	deepEqual( Stem("stern"), "stern" );
	deepEqual( Stem("sternbild"), "sternbild" );
	deepEqual( Stem("sternbilder"), "sternbild" );
	deepEqual( Stem("sternblumen"), "sternblum" );
	deepEqual( Stem("sternblumenklee"), "sternblumenkle" );
	deepEqual( Stem("sternblumenwiese"), "sternblumenwies" );
	deepEqual( Stem("sternchen"), "sternch" );
	deepEqual( Stem("sternchenkuss"), "sternchenkuss" );
	deepEqual( Stem("sterndeutung"), "sterndeut" );
	deepEqual( Stem("sterne"), "stern" );
	deepEqual( Stem("sternen"), "stern" );
	deepEqual( Stem("sternenbilde"), "sternenbild" );
	deepEqual( Stem("sternenhimmel"), "sternenhimmel" );
	deepEqual( Stem("sternenkinder"), "sternenkind" );
	deepEqual( Stem("sternenkindern"), "sternenkind" );
	deepEqual( Stem("sternenmädchen"), "sternenmadch" );
	deepEqual( Stem("sternenmädchens"), "sternenmadch" );
	deepEqual( Stem("sternenschule"), "sternenschul" );
	deepEqual( Stem("sternenstühlchen"), "sternenstuhlch" );
	deepEqual( Stem("sternenwiese"), "sternenwies" );
	deepEqual( Stem("sternlein"), "sternlein" );
	deepEqual( Stem("sternpünktchen"), "sternpunktch" );
	deepEqual( Stem("sternschnuppen"), "sternschnupp" );
	deepEqual( Stem("sternschnuppengemüse"), "sternschnuppengemus" );
	deepEqual( Stem("sternschnuppenwolke"), "sternschnuppenwolk" );
	deepEqual( Stem("sterzenbacher"), "sterzenbach" );
	deepEqual( Stem("stete"), "stet" );
	deepEqual( Stem("steten"), "stet" );
	deepEqual( Stem("stetig"), "stetig" );
	deepEqual( Stem("stetige"), "stetig" );
	deepEqual( Stem("stets"), "stet" );
	deepEqual( Stem("stett"), "stett" );
	deepEqual( Stem("steuer"), "steu" );
	deepEqual( Stem("steuerausfalls"), "steuerausfall" );
	deepEqual( Stem("steuerbeleg"), "steuerbeleg" );
	deepEqual( Stem("steuerhinterziehung"), "steuerhinterzieh" );
	deepEqual( Stem("steuern"), "steu" );
	deepEqual( Stem("steuersünder"), "steuersund" );
	deepEqual( Stem("steuert"), "steuert" );
	deepEqual( Stem("steuerte"), "steuert" );
	deepEqual( Stem("steward"), "steward" );
	deepEqual( Stem("steyrerhut"), "steyrerhut" );
	deepEqual( Stem("steyrerhute"), "steyrerhut" );
	deepEqual( Stem("stibitzt"), "stibitzt" );
	deepEqual( Stem("stich"), "stich" );
	deepEqual( Stem("sticheln"), "sticheln" );
	deepEqual( Stem("stickerei"), "stickerei" );
	deepEqual( Stem("stickstoffgehaltes"), "stickstoffgehalt" );
	deepEqual( Stem("stickstoffhaltige"), "stickstoffhalt" );
	deepEqual( Stem("stiebten"), "stiebt" );
	deepEqual( Stem("stiefel"), "stiefel" );
	deepEqual( Stem("stiefeln"), "stiefeln" );
	deepEqual( Stem("stiefelsohlen"), "stiefelsohl" );
	deepEqual( Stem("stiefmütterlich"), "stiefmutt" );
	deepEqual( Stem("stieg"), "stieg" );
	deepEqual( Stem("stiegen"), "stieg" );
	deepEqual( Stem("stiehlt"), "stiehlt" );
	deepEqual( Stem("stiel"), "stiel" );
	deepEqual( Stem("stielen"), "stiel" );
	deepEqual( Stem("stier"), "stier" );
	deepEqual( Stem("stiere"), "stier" );
	deepEqual( Stem("stierer"), "stier" );
	deepEqual( Stem("stierte"), "stiert" );
	deepEqual( Stem("stiess"), "stiess" );
	deepEqual( Stem("stieß"), "stiess" );
	deepEqual( Stem("stiessen"), "stiess" );
	deepEqual( Stem("stießen"), "stiess" );
	deepEqual( Stem("stiften"), "stift" );
	deepEqual( Stem("stifter"), "stift" );
	deepEqual( Stem("stiftern"), "stift" );
	deepEqual( Stem("stiftsdamen"), "stiftsdam" );
	deepEqual( Stem("stiftshütte"), "stiftshutt" );
	deepEqual( Stem("stiftung"), "stiftung" );
	deepEqual( Stem("stiftungen"), "stiftung" );
	deepEqual( Stem("stigma"), "stigma" );
	deepEqual( Stem("stil"), "stil" );
	deepEqual( Stem("stile"), "stil" );
	deepEqual( Stem("stiles"), "stil" );
	deepEqual( Stem("still"), "still" );
	deepEqual( Stem("stillblaue"), "stillblau" );
	deepEqual( Stem("stille"), "still" );
	deepEqual( Stem("stillen"), "still" );
	deepEqual( Stem("stiller"), "still" );
	deepEqual( Stem("stilles"), "still" );
	deepEqual( Stem("stillgewordenen"), "stillgeword" );
	deepEqual( Stem("stillhalten"), "stillhalt" );
	deepEqual( Stem("stillhielt"), "stillhielt" );
	deepEqual( Stem("stillschweigend"), "stillschweig" );
	deepEqual( Stem("stillschweigende"), "stillschweig" );
	deepEqual( Stem("stillstand"), "stillstand" );
	deepEqual( Stem("stillständer"), "stillstand" );
	deepEqual( Stem("stimmabgabe"), "stimmabgab" );
	deepEqual( Stem("stimmberechtigten"), "stimmberechtigt" );
	deepEqual( Stem("stimmbezirke"), "stimmbezirk" );
	deepEqual( Stem("stimmchen"), "stimmch" );
	deepEqual( Stem("stimme"), "stimm" );
	deepEqual( Stem("stimmen"), "stimm" );
	deepEqual( Stem("stimmenzähler"), "stimmenzahl" );
	deepEqual( Stem("stimmenzählern"), "stimmenzahl" );
	deepEqual( Stem("stimmfähig"), "stimmfah" );
	deepEqual( Stem("stimmlisten"), "stimmlist" );
	deepEqual( Stem("stimmt"), "stimmt" );
	deepEqual( Stem("stimmte"), "stimmt" );
	deepEqual( Stem("stimmten"), "stimmt" );
	deepEqual( Stem("stimmung"), "stimmung" );
	deepEqual( Stem("stimmungen"), "stimmung" );
	deepEqual( Stem("stimmzettel"), "stimmzettel" );
	deepEqual( Stem("stingel"), "stingel" );
	deepEqual( Stem("stinke"), "stink" );
	deepEqual( Stem("stinken"), "stink" );
	deepEqual( Stem("stinkend"), "stinkend" );
	deepEqual( Stem("stinkenden"), "stinkend" );
	deepEqual( Stem("stinkige"), "stinkig" );
	deepEqual( Stem("stinkt"), "stinkt" );
	deepEqual( Stem("stirb"), "stirb" );
	deepEqual( Stem("stirbt"), "stirbt" );
	deepEqual( Stem("stirn"), "stirn" );
	deepEqual( Stem("stirnband"), "stirnband" );
	deepEqual( Stem("stirne"), "stirn" );
	deepEqual( Stem("stirnen"), "stirn" );
	deepEqual( Stem("stob"), "stob" );
	deepEqual( Stem("stoben"), "stob" );
	deepEqual( Stem("stöberte"), "stobert" );
	deepEqual( Stem("stocherte"), "stochert" );
	deepEqual( Stem("stock"), "stock" );
	deepEqual( Stem("stöckchen"), "stockch" );
	deepEqual( Stem("stocke"), "stock" );
	deepEqual( Stem("stöcke"), "stock" );
	deepEqual( Stem("stöcken"), "stock" );
	deepEqual( Stem("stockender"), "stockend" );
	deepEqual( Stem("stöckerte"), "stockert" );
	deepEqual( Stem("stockfinsteren"), "stockfinst" );
	deepEqual( Stem("stocksteife"), "stocksteif" );
	deepEqual( Stem("stockte"), "stockt" );
	deepEqual( Stem("stockten"), "stockt" );
	deepEqual( Stem("stockungeheuer"), "stockungeheu" );
	deepEqual( Stem("stockwerk"), "stockwerk" );
	deepEqual( Stem("stockwerke"), "stockwerk" );
	deepEqual( Stem("stockwerkes"), "stockwerk" );
	deepEqual( Stem("stockwerks"), "stockwerk" );
	deepEqual( Stem("stockzähnen"), "stockzahn" );
	deepEqual( Stem("stoff"), "stoff" );
	deepEqual( Stem("stoffe"), "stoff" );
	deepEqual( Stem("stöhnend"), "stohnend" );
	deepEqual( Stem("stöhnte"), "stohnt" );
	deepEqual( Stem("stoiker"), "stoik" );
	deepEqual( Stem("stoikern"), "stoik" );
	deepEqual( Stem("stoische"), "stoisch" );
	deepEqual( Stem("stoischer"), "stoisch" );
	deepEqual( Stem("stollen"), "stoll" );
	deepEqual( Stem("stollenkleider"), "stollenkleid" );
	deepEqual( Stem("stolperte"), "stolpert" );
	deepEqual( Stem("stolperten"), "stolpert" );
	deepEqual( Stem("stolz"), "stolz" );
	deepEqual( Stem("stolze"), "stolz" );
	deepEqual( Stem("stolzen"), "stolz" );
	deepEqual( Stem("stolzer"), "stolz" );
	deepEqual( Stem("stolzes"), "stolz" );
	deepEqual( Stem("stolzieren"), "stolzi" );
	deepEqual( Stem("stolzierten"), "stolziert" );
	deepEqual( Stem("stonsdorfer"), "stonsdorf" );
	deepEqual( Stem("stopfte"), "stopft" );
	deepEqual( Stem("stoppelbart"), "stoppelbart" );
	deepEqual( Stem("stoppeln"), "stoppeln" );
	deepEqual( Stem("storb"), "storb" );
	deepEqual( Stem("störche"), "storch" );
	deepEqual( Stem("störe"), "stor" );
	deepEqual( Stem("stören"), "stor" );
	deepEqual( Stem("störend"), "storend" );
	deepEqual( Stem("störenden"), "storend" );
	deepEqual( Stem("störenfried"), "storenfried" );
	deepEqual( Stem("störenfriedes"), "storenfried" );
	deepEqual( Stem("storren"), "storr" );
	deepEqual( Stem("störrig"), "storrig" );
	deepEqual( Stem("stört"), "stort" );
	deepEqual( Stem("störte"), "stort" );
	deepEqual( Stem("störung"), "storung" );
	deepEqual( Stem("störungen"), "storung" );
	deepEqual( Stem("stoss"), "stoss" );
	deepEqual( Stem("stoß"), "stoss" );
	deepEqual( Stem("stössel"), "stossel" );
	deepEqual( Stem("stossen"), "stoss" );
	deepEqual( Stem("stoßen"), "stoss" );
	deepEqual( Stem("stossend"), "stossend" );
	deepEqual( Stem("stösst"), "stosst" );
	deepEqual( Stem("stößt"), "stosst" );
	deepEqual( Stem("stotternder"), "stotternd" );
	deepEqual( Stem("stotterte"), "stottert" );
	deepEqual( Stem("strack"), "strack" );
	deepEqual( Stem("stracks"), "strack" );
	deepEqual( Stem("strafe"), "straf" );
	deepEqual( Stem("strafen"), "straf" );
	deepEqual( Stem("straff"), "straff" );
	deepEqual( Stem("strafgerichte"), "strafgericht" );
	deepEqual( Stem("strafgerichtes"), "strafgericht" );
	deepEqual( Stem("strafgesetzes"), "strafgesetz" );
	deepEqual( Stem("strafkolonie"), "strafkoloni" );
	deepEqual( Stem("strafpredigt"), "strafpredigt" );
	deepEqual( Stem("strafprozess"), "strafprozess" );
	deepEqual( Stem("strafprozeß"), "strafprozess" );
	deepEqual( Stem("straft"), "straft" );
	deepEqual( Stem("strafte"), "straft" );
	deepEqual( Stem("strafübel"), "strafubel" );
	deepEqual( Stem("strafwürdig"), "strafwurd" );
	deepEqual( Stem("strafwürdigen"), "strafwurd" );
	deepEqual( Stem("strahl"), "strahl" );
	deepEqual( Stem("strahle"), "strahl" );
	deepEqual( Stem("strahlen"), "strahl" );
	deepEqual( Stem("strahlend"), "strahlend" );
	deepEqual( Stem("strahlenden"), "strahlend" );
	deepEqual( Stem("strahlender"), "strahlend" );
	deepEqual( Stem("strahlenkrone"), "strahlenkron" );
	deepEqual( Stem("strahlenkronen"), "strahlenkron" );
	deepEqual( Stem("strahlt"), "strahlt" );
	deepEqual( Stem("strahlte"), "strahlt" );
	deepEqual( Stem("strahlten"), "strahlt" );
	deepEqual( Stem("strähnig"), "strahnig" );
	deepEqual( Stem("stramen"), "stram" );
	deepEqual( Stem("straminis"), "straminis" );
	deepEqual( Stem("stramm"), "stramm" );
	deepEqual( Stem("strampampelt"), "strampampelt" );
	deepEqual( Stem("strampelei"), "strampelei" );
	deepEqual( Stem("strampelte"), "strampelt" );
	deepEqual( Stem("strampelten"), "strampelt" );
	deepEqual( Stem("strapazierst"), "strapazierst" );
	deepEqual( Stem("strapinski"), "strapinski" );
	deepEqual( Stem("strapinskis"), "strapinskis" );
	deepEqual( Stem("strass"), "strass" );
	deepEqual( Stem("strassburg"), "strassburg" );
	deepEqual( Stem("strässchen"), "strassch" );
	deepEqual( Stem("strasse"), "strass" );
	deepEqual( Stem("straße"), "strass" );
	deepEqual( Stem("strassen"), "strass" );
	deepEqual( Stem("straßen"), "strass" );
	deepEqual( Stem("straßenbahn"), "strassenbahn" );
	deepEqual( Stem("strassenecke"), "strasseneck" );
	deepEqual( Stem("straßenecke"), "strasseneck" );
	deepEqual( Stem("strassenfestes"), "strassenf" );
	deepEqual( Stem("strassengraben"), "strassengrab" );
	deepEqual( Stem("strassenkörper"), "strassenkorp" );
	deepEqual( Stem("strassenmann"), "strassenmann" );
	deepEqual( Stem("strassenniveau"), "strassenniveau" );
	deepEqual( Stem("straßenniveau"), "strassenniveau" );
	deepEqual( Stem("strassenrand"), "strassenrand" );
	deepEqual( Stem("strassenschlachten"), "strassenschlacht" );
	deepEqual( Stem("strassenseite"), "strassenseit" );
	deepEqual( Stem("straßenseite"), "strassenseit" );
	deepEqual( Stem("strassenverkehr"), "strassenverkehr" );
	deepEqual( Stem("straßenverkehr"), "strassenverkehr" );
	deepEqual( Stem("strassl"), "strassl" );
	deepEqual( Stem("stratagemata"), "stratagemata" );
	deepEqual( Stem("strategischen"), "strateg" );
	deepEqual( Stem("sträubte"), "straubt" );
	deepEqual( Stem("strauch"), "strauch" );
	deepEqual( Stem("straucheln"), "straucheln" );
	deepEqual( Stem("strauchelt"), "strauchelt" );
	deepEqual( Stem("sträucher"), "strauch" );
	deepEqual( Stem("sträuchern"), "strauch" );
	deepEqual( Stem("strauchwitz"), "strauchwitz" );
	deepEqual( Stem("strauss"), "strauss" );
	deepEqual( Stem("strausse"), "strauss" );
	deepEqual( Stem("sträusserl"), "strausserl" );
	deepEqual( Stem("streben"), "streb" );
	deepEqual( Stem("strebens"), "streb" );
	deepEqual( Stem("strebsamer"), "strebsam" );
	deepEqual( Stem("strebt"), "strebt" );
	deepEqual( Stem("strebte"), "strebt" );
	deepEqual( Stem("strebten"), "strebt" );
	deepEqual( Stem("strecke"), "streck" );
	deepEqual( Stem("strecken"), "streck" );
	deepEqual( Stem("streckt"), "streckt" );
	deepEqual( Stem("streckte"), "streckt" );
	deepEqual( Stem("streckten"), "streckt" );
	deepEqual( Stem("streich"), "streich" );
	deepEqual( Stem("streiche"), "streich" );
	deepEqual( Stem("streicheln"), "streicheln" );
	deepEqual( Stem("streichelt"), "streichelt" );
	deepEqual( Stem("streichelte"), "streichelt" );
	deepEqual( Stem("streichelten"), "streichelt" );
	deepEqual( Stem("streichen"), "streich" );
	deepEqual( Stem("streichholz"), "streichholz" );
	deepEqual( Stem("streicht"), "streicht" );
	deepEqual( Stem("streif"), "streif" );
	deepEqual( Stem("streifen"), "streif" );
	deepEqual( Stem("streift"), "streift" );
	deepEqual( Stem("streifte"), "streift" );
	deepEqual( Stem("streiften"), "streift" );
	deepEqual( Stem("streifzug"), "streifzug" );
	deepEqual( Stem("streifzügen"), "streifzug" );
	deepEqual( Stem("streit"), "streit" );
	deepEqual( Stem("streiten"), "streit" );
	deepEqual( Stem("streitende"), "streitend" );
	deepEqual( Stem("streitenden"), "streitend" );
	deepEqual( Stem("streiter"), "streit" );
	deepEqual( Stem("streites"), "streit" );
	deepEqual( Stem("streitet"), "streitet" );
	deepEqual( Stem("streitige"), "streitig" );
	deepEqual( Stem("streitigen"), "streitig" );
	deepEqual( Stem("streitigkeiten"), "streitig" );
	deepEqual( Stem("streits"), "streit" );
	deepEqual( Stem("streng"), "streng" );
	deepEqual( Stem("strenge"), "streng" );
	deepEqual( Stem("strengem"), "streng" );
	deepEqual( Stem("strengen"), "streng" );
	deepEqual( Stem("strenger"), "streng" );
	deepEqual( Stem("strenges"), "streng" );
	deepEqual( Stem("strenggenommen"), "strenggenomm" );
	deepEqual( Stem("strenggeschnittenen"), "strenggeschnitt" );
	deepEqual( Stem("strengste"), "streng" );
	deepEqual( Stem("strengsten"), "streng" );
	deepEqual( Stem("streßgeplagt"), "stressgeplagt" );
	deepEqual( Stem("streue"), "streu" );
	deepEqual( Stem("streuen"), "streu" );
	deepEqual( Stem("streut"), "streut" );
	deepEqual( Stem("streute"), "streut" );
	deepEqual( Stem("strich"), "strich" );
	deepEqual( Stem("strichen"), "strich" );
	deepEqual( Stem("striches"), "strich" );
	deepEqual( Stem("strichlein"), "strichlein" );
	deepEqual( Stem("strichweise"), "strichweis" );
	deepEqual( Stem("strick"), "strick" );
	deepEqual( Stem("stricke"), "strick" );
	deepEqual( Stem("stricken"), "strick" );
	deepEqual( Stem("stricklein"), "stricklein" );
	deepEqual( Stem("strickmaschine"), "strickmaschin" );
	deepEqual( Stem("strickschlingen"), "strickschling" );
	deepEqual( Stem("strickzeug"), "strickzeug" );
	deepEqual( Stem("stritten"), "stritt" );
	deepEqual( Stem("strittigen"), "strittig" );
	deepEqual( Stem("stroh"), "stroh" );
	deepEqual( Stem("strohhut"), "strohhut" );
	deepEqual( Stem("strohhüte"), "strohhut" );
	deepEqual( Stem("strohköpfe"), "strohkopf" );
	deepEqual( Stem("strohpuppe"), "strohpupp" );
	deepEqual( Stem("strohs"), "stroh" );
	deepEqual( Stem("strolche"), "strolch" );
	deepEqual( Stem("strom"), "strom" );
	deepEqual( Stem("stromaufwärts"), "stromaufwart" );
	deepEqual( Stem("strome"), "strom" );
	deepEqual( Stem("ströme"), "strom" );
	deepEqual( Stem("strömen"), "strom" );
	deepEqual( Stem("stromes"), "strom" );
	deepEqual( Stem("stroms"), "strom" );
	deepEqual( Stem("strömt"), "stromt" );
	deepEqual( Stem("strömte"), "stromt" );
	deepEqual( Stem("strömten"), "stromt" );
	deepEqual( Stem("strömung"), "stromung" );
	deepEqual( Stem("strophe"), "stroph" );
	deepEqual( Stem("strotzende"), "strotzend" );
	deepEqual( Stem("strub"), "strub" );
	deepEqual( Stem("strudel"), "strudel" );
	deepEqual( Stem("strukturen"), "struktur" );
	deepEqual( Stem("strukturwandlungen"), "strukturwandl" );
	deepEqual( Stem("strumpf"), "strumpf" );
	deepEqual( Stem("strumpfe"), "strumpf" );
	deepEqual( Stem("strümpfe"), "strumpf" );
	deepEqual( Stem("strümpfen"), "strumpf" );
	deepEqual( Stem("strumpfes"), "strumpf" );
	deepEqual( Stem("strunk"), "strunk" );
	deepEqual( Stem("strychnin"), "strychnin" );
	deepEqual( Stem("strychninbrocken"), "strychninbrock" );
	deepEqual( Stem("stübchen"), "stubch" );
	deepEqual( Stem("stübchens"), "stubch" );
	deepEqual( Stem("stube"), "stub" );
	deepEqual( Stem("stuben"), "stub" );
	deepEqual( Stem("stubenreinheit"), "stubenrein" );
	deepEqual( Stem("stubenschlüssel"), "stubenschlussel" );
	deepEqual( Stem("stubentür"), "stubentur" );
	deepEqual( Stem("stubentüre"), "stubentur" );
	deepEqual( Stem("stück"), "stuck" );
	deepEqual( Stem("stückchen"), "stuckch" );
	deepEqual( Stem("stücke"), "stuck" );
	deepEqual( Stem("stücken"), "stuck" );
	deepEqual( Stem("stücklein"), "stucklein" );
	deepEqual( Stem("stücks"), "stuck" );
	deepEqual( Stem("studen"), "stud" );
	deepEqual( Stem("student"), "student" );
	deepEqual( Stem("studenten"), "student" );
	deepEqual( Stem("studentenmütze"), "studentenmutz" );
	deepEqual( Stem("studentin"), "studentin" );
	deepEqual( Stem("studie"), "studi" );
	deepEqual( Stem("studien"), "studi" );
	deepEqual( Stem("studieren"), "studi" );
	deepEqual( Stem("studiert"), "studiert" );
	deepEqual( Stem("studierte"), "studiert" );
	deepEqual( Stem("studierten"), "studiert" );
	deepEqual( Stem("studio"), "studio" );
	deepEqual( Stem("studios"), "studios" );
	deepEqual( Stem("studium"), "studium" );
	deepEqual( Stem("stufe"), "stuf" );
	deepEqual( Stem("stufen"), "stuf" );
	deepEqual( Stem("stufenweise"), "stufenweis" );
	deepEqual( Stem("stuhl"), "stuhl" );
	deepEqual( Stem("stuhlbeine"), "stuhlbein" );
	deepEqual( Stem("stühlchen"), "stuhlch" );
	deepEqual( Stem("stuhle"), "stuhl" );
	deepEqual( Stem("stühle"), "stuhl" );
	deepEqual( Stem("stühlen"), "stuhl" );
	deepEqual( Stem("stuhles"), "stuhl" );
	deepEqual( Stem("stukkaturarbeiten"), "stukkaturarbeit" );
	deepEqual( Stem("stumm"), "stumm" );
	deepEqual( Stem("stumme"), "stumm" );
	deepEqual( Stem("stummen"), "stumm" );
	deepEqual( Stem("stummer"), "stumm" );
	deepEqual( Stem("stümperhaft"), "stumperhaft" );
	deepEqual( Stem("stumpf"), "stumpf" );
	deepEqual( Stem("stumpfbesen"), "stumpfbes" );
	deepEqual( Stem("stumpfheit"), "stumpfheit" );
	deepEqual( Stem("stumpfnäschen"), "stumpfnasch" );
	deepEqual( Stem("stumpfsinn"), "stumpfsinn" );
	deepEqual( Stem("stumpfsinnig"), "stumpfsinn" );
	deepEqual( Stem("stumpfsinniges"), "stumpfsinn" );
	deepEqual( Stem("stund"), "stund" );
	deepEqual( Stem("stündchen"), "stundch" );
	deepEqual( Stem("stunde"), "stund" );
	deepEqual( Stem("stünde"), "stund" );
	deepEqual( Stem("stündel"), "stundel" );
	deepEqual( Stem("stunden"), "stund" );
	deepEqual( Stem("stünden"), "stund" );
	deepEqual( Stem("stundenlang"), "stundenlang" );
	deepEqual( Stem("stundenlange"), "stundenlang" );
	deepEqual( Stem("stundenlangen"), "stundenlang" );
	deepEqual( Stem("stundenweit"), "stundenweit" );
	deepEqual( Stem("stundenzeiger"), "stundenzeig" );
	deepEqual( Stem("stündleins"), "stundlein" );
	deepEqual( Stem("stündlich"), "stundlich" );
	deepEqual( Stem("stupender"), "stupend" );
	deepEqual( Stem("sturm"), "sturm" );
	deepEqual( Stem("stürme"), "sturm" );
	deepEqual( Stem("stürmen"), "sturm" );
	deepEqual( Stem("sturmflockenwirbel"), "sturmflockenwirbel" );
	deepEqual( Stem("sturmhusche"), "sturmhusch" );
	deepEqual( Stem("stürmisch"), "sturmisch" );
	deepEqual( Stem("stürmischer"), "sturmisch" );
	deepEqual( Stem("sturmriese"), "sturmries" );
	deepEqual( Stem("sturmriesen"), "sturmries" );
	deepEqual( Stem("stürmte"), "sturmt" );
	deepEqual( Stem("stürmten"), "sturmt" );
	deepEqual( Stem("sturmwind"), "sturmwind" );
	deepEqual( Stem("sturz"), "sturz" );
	deepEqual( Stem("sturze"), "sturz" );
	deepEqual( Stem("stürze"), "sturz" );
	deepEqual( Stem("stürzen"), "sturz" );
	deepEqual( Stem("stürzet"), "sturzet" );
	deepEqual( Stem("stürzt"), "sturzt" );
	deepEqual( Stem("stürzte"), "sturzt" );
	deepEqual( Stem("stürzten"), "sturzt" );
	deepEqual( Stem("stuttgart"), "stuttgart" );
	deepEqual( Stem("stuttgarter"), "stuttgart" );
	deepEqual( Stem("stütze"), "stutz" );
	deepEqual( Stem("stutzen"), "stutz" );
	deepEqual( Stem("stützen"), "stutz" );
	deepEqual( Stem("stützend"), "stutzend" );
	deepEqual( Stem("stutzerhaft"), "stutzerhaft" );
	deepEqual( Stem("stützt"), "stutzt" );
	deepEqual( Stem("stutzte"), "stutzt" );
	deepEqual( Stem("stützte"), "stutzt" );
	deepEqual( Stem("stützten"), "stutzt" );
	deepEqual( Stem("sub"), "sub" );
	deepEqual( Stem("subjectis"), "subjectis" );
	deepEqual( Stem("subjekt"), "subjekt" );
	deepEqual( Stem("subjekte"), "subjekt" );
	deepEqual( Stem("subjekten"), "subjekt" );
	deepEqual( Stem("subjektiv"), "subjektiv" );
	deepEqual( Stem("subjektive"), "subjektiv" );
	deepEqual( Stem("subjektiven"), "subjektiv" );
	deepEqual( Stem("subjektiver"), "subjektiv" );
	deepEqual( Stem("subjekts"), "subjekt" );
	deepEqual( Stem("subkultur"), "subkultur" );
	deepEqual( Stem("sublimsten"), "sublim" );
	deepEqual( Stem("subreptionis"), "subreptionis" );
	deepEqual( Stem("substantielle"), "substantiell" );
	deepEqual( Stem("substantiellen"), "substantiell" );
	deepEqual( Stem("substanz"), "substanz" );
	deepEqual( Stem("substanzen"), "substanz" );
	deepEqual( Stem("subsumtion"), "subsumtion" );
	deepEqual( Stem("subtil"), "subtil" );
	deepEqual( Stem("subtile"), "subtil" );
	deepEqual( Stem("subtilen"), "subtil" );
	deepEqual( Stem("subtiler"), "subtil" );
	deepEqual( Stem("subtilste"), "subtil" );
	deepEqual( Stem("success"), "success" );
	deepEqual( Stem("successiva"), "successiva" );
	deepEqual( Stem("suche"), "such" );
	deepEqual( Stem("suchen"), "such" );
	deepEqual( Stem("suchenden"), "suchend" );
	deepEqual( Stem("suchet"), "suchet" );
	deepEqual( Stem("suchst"), "such" );
	deepEqual( Stem("sucht"), "sucht" );
	deepEqual( Stem("suchtbereitschaft"), "suchtbereitschaft" );
	deepEqual( Stem("suchte"), "sucht" );
	deepEqual( Stem("suchten"), "sucht" );
	deepEqual( Stem("suchtforscher"), "suchtforsch" );
	deepEqual( Stem("süchtig"), "suchtig" );
	deepEqual( Stem("suchtmittelkonsum"), "suchtmittelkonsum" );
	deepEqual( Stem("süd"), "sud" );
	deepEqual( Stem("süditalien"), "suditali" );
	deepEqual( Stem("südliches"), "sudlich" );
	deepEqual( Stem("südlondon"), "sudlondon" );
	deepEqual( Stem("südseite"), "sudseit" );
	deepEqual( Stem("südwärts"), "sudwart" );
	deepEqual( Stem("südwestfunk"), "sudwestfunk" );
	deepEqual( Stem("sühnen"), "suhn" );
	deepEqual( Stem("sultan"), "sultan" );
	deepEqual( Stem("sülzpastete"), "sulzpastet" );
	deepEqual( Stem("summ"), "summ" );
	deepEqual( Stem("summarisch"), "summar" );
	deepEqual( Stem("sümmchen"), "summch" );
	deepEqual( Stem("summe"), "summ" );
	deepEqual( Stem("summen"), "summ" );
	deepEqual( Stem("summende"), "summend" );
	deepEqual( Stem("summte"), "summt" );
	deepEqual( Stem("sumpfig"), "sumpfig" );
	deepEqual( Stem("sumpfigen"), "sumpfig" );
	deepEqual( Stem("sumpflöcher"), "sumpfloch" );
	deepEqual( Stem("sumsemann"), "sumsemann" );
	deepEqual( Stem("sumsemännchen"), "sumsemannch" );
	deepEqual( Stem("sumsemänner"), "sumsemann" );
	deepEqual( Stem("sumsemännern"), "sumsemann" );
	deepEqual( Stem("sumsemanns"), "sumsemann" );
	deepEqual( Stem("sumsiselsei"), "sumsiselsei" );
	deepEqual( Stem("sünde"), "sund" );
	deepEqual( Stem("sünden"), "sund" );
	deepEqual( Stem("sündenlose"), "sundenlos" );
	deepEqual( Stem("sünder"), "sund" );
	deepEqual( Stem("sündflut"), "sundflut" );
	deepEqual( Stem("sündhafte"), "sundhaft" );
	deepEqual( Stem("sündigen"), "sundig" );
	deepEqual( Stem("sündigt"), "sundigt" );
	deepEqual( Stem("sunntäg"), "sunntag" );
	deepEqual( Stem("sunt"), "sunt" );
	deepEqual( Stem("superlativ"), "superlativ" );
	deepEqual( Stem("superstition"), "superstition" );
	deepEqual( Stem("suph"), "suph" );
	deepEqual( Stem("suppe"), "supp" );
	deepEqual( Stem("suppenkelle"), "suppenkell" );
	deepEqual( Stem("suppentopf"), "suppentopf" );
	deepEqual( Stem("supremum"), "supremum" );
	deepEqual( Stem("surfen"), "surf" );
	deepEqual( Stem("surfstation"), "surfstation" );
	deepEqual( Stem("suspendierten"), "suspendiert" );
	deepEqual( Stem("süss"), "suss" );
	deepEqual( Stem("süß"), "suss" );
	deepEqual( Stem("süsse"), "suss" );
	deepEqual( Stem("süße"), "suss" );
	deepEqual( Stem("süssem"), "suss" );
	deepEqual( Stem("süssen"), "suss" );
	deepEqual( Stem("süßen"), "suss" );
	deepEqual( Stem("süsser"), "suss" );
	deepEqual( Stem("süsses"), "suss" );
	deepEqual( Stem("süsseste"), "suss" );
	deepEqual( Stem("süssigkeit"), "sussig" );
	deepEqual( Stem("süssigkeiten"), "sussig" );
	deepEqual( Stem("süsslich"), "susslich" );
	deepEqual( Stem("suyu"), "suyu" );
	deepEqual( Stem("sweetheart"), "sweetheart" );
	deepEqual( Stem("swissaid"), "swissaid" );
	deepEqual( Stem("swissair"), "swissair" );
	deepEqual( Stem("sykomoren"), "sykomor" );
	deepEqual( Stem("sylvia"), "sylvia" );
	deepEqual( Stem("symbol"), "symbol" );
	deepEqual( Stem("symbola"), "symbola" );
	deepEqual( Stem("symbole"), "symbol" );
	deepEqual( Stem("symmetrie"), "symmetri" );
	deepEqual( Stem("sympathielage"), "sympathielag" );
	deepEqual( Stem("sympathien"), "sympathi" );
	deepEqual( Stem("sympathiestränge"), "sympathiestrang" );
	deepEqual( Stem("sympathische"), "sympath" );
	deepEqual( Stem("sympathischen"), "sympath" );
	deepEqual( Stem("sympathischer"), "sympath" );
	deepEqual( Stem("symposium"), "symposium" );
	deepEqual( Stem("synkretistischen"), "synkretist" );
	deepEqual( Stem("synodalrat"), "synodalrat" );
	deepEqual( Stem("synodalrätin"), "synodalratin" );
	deepEqual( Stem("synode"), "synod" );
	deepEqual( Stem("synonyme"), "synonym" );
	deepEqual( Stem("synthesis"), "synthesis" );
	deepEqual( Stem("synthetisch"), "synthet" );
	deepEqual( Stem("synthetische"), "synthet" );
	deepEqual( Stem("synthetischen"), "synthet" );
	deepEqual( Stem("synthetischer"), "synthet" );
	deepEqual( Stem("syrien"), "syri" );
	deepEqual( Stem("syriens"), "syri" );
	deepEqual( Stem("system"), "syst" );
	deepEqual( Stem("systematisch"), "systemat" );
	deepEqual( Stem("systematische"), "systemat" );
	deepEqual( Stem("systematischen"), "systemat" );
	deepEqual( Stem("systemen"), "system" );
	deepEqual( Stem("sz"), "sz" );
	deepEqual( Stem("szene"), "szen" );
	deepEqual( Stem("t"), "t" );
	deepEqual( Stem("ta"), "ta" );
	deepEqual( Stem("tabak"), "tabak" );
	deepEqual( Stem("tabaks"), "tabak" );
	deepEqual( Stem("tabaksqualme"), "tabaksqualm" );
	deepEqual( Stem("tabaksteig"), "tabaksteig" );
	deepEqual( Stem("tadel"), "tadel" );
	deepEqual( Stem("tadelloser"), "tadellos" );
	deepEqual( Stem("tadeln"), "tadeln" );
	deepEqual( Stem("tadelswürdig"), "tadelswurd" );
	deepEqual( Stem("tadelte"), "tadelt" );
	deepEqual( Stem("tafel"), "tafel" );
	deepEqual( Stem("tafeldecker"), "tafeldeck" );
	deepEqual( Stem("tafeldeckern"), "tafeldeck" );
	deepEqual( Stem("tafelgeschenke"), "tafelgeschenk" );
	deepEqual( Stem("tafeln"), "tafeln" );
	deepEqual( Stem("tafelseite"), "tafelseit" );
	deepEqual( Stem("tafeltuch"), "tafeltuch" );
	deepEqual( Stem("taferlklass"), "taferlklass" );
	deepEqual( Stem("taft"), "taft" );
	deepEqual( Stem("tag"), "tag" );
	deepEqual( Stem("täg"), "tag" );
	deepEqual( Stem("tage"), "tag" );
	deepEqual( Stem("tagelang"), "tagelang" );
	deepEqual( Stem("tagelohn"), "tagelohn" );
	deepEqual( Stem("tagelöhner"), "tagelohn" );
	deepEqual( Stem("tagelöhnermädchen"), "tagelohnermadch" );
	deepEqual( Stem("tagen"), "tag" );
	deepEqual( Stem("tagereisen"), "tagereis" );
	deepEqual( Stem("tages"), "tag" );
	deepEqual( Stem("tagesanbruch"), "tagesanbruch" );
	deepEqual( Stem("tagesanzeiger"), "tagesanzeig" );
	deepEqual( Stem("tagesgäste"), "tagesgast" );
	deepEqual( Stem("tageshelle"), "tageshell" );
	deepEqual( Stem("tageskasse"), "tageskass" );
	deepEqual( Stem("tageslauf"), "tageslauf" );
	deepEqual( Stem("tageslicht"), "tageslicht" );
	deepEqual( Stem("tagesordnung"), "tagesordn" );
	deepEqual( Stem("tageszeiten"), "tageszeit" );
	deepEqual( Stem("tagewerk"), "tagewerk" );
	deepEqual( Stem("tagi"), "tagi" );
	deepEqual( Stem("täglich"), "taglich" );
	deepEqual( Stem("tägliche"), "taglich" );
	deepEqual( Stem("täglichen"), "taglich" );
	deepEqual( Stem("taglicht"), "taglicht" );
	deepEqual( Stem("taglöhners"), "taglohn" );
	deepEqual( Stem("tagreisen"), "tagreis" );
	deepEqual( Stem("tags"), "tag" );
	deepEqual( Stem("tagtäglich"), "tagtag" );
	deepEqual( Stem("tagträumen"), "tagtraum" );
	deepEqual( Stem("taiga"), "taiga" );
	deepEqual( Stem("takt"), "takt" );
	deepEqual( Stem("takte"), "takt" );
	deepEqual( Stem("taktik"), "taktik" );
	deepEqual( Stem("taktischen"), "taktisch" );
	deepEqual( Stem("tal"), "tal" );
	deepEqual( Stem("talar"), "talar" );
	deepEqual( Stem("tale"), "tal" );
	deepEqual( Stem("talent"), "talent" );
	deepEqual( Stem("taler"), "tal" );
	deepEqual( Stem("täler"), "tal" );
	deepEqual( Stem("talern"), "tal" );
	deepEqual( Stem("talerstücke"), "talerstuck" );
	deepEqual( Stem("tales"), "tal" );
	deepEqual( Stem("talglichten"), "talglicht" );
	deepEqual( Stem("talgrunde"), "talgrund" );
	deepEqual( Stem("talhängen"), "talhang" );
	deepEqual( Stem("tals"), "tal" );
	deepEqual( Stem("talwärts"), "talwart" );
	deepEqual( Stem("tambour"), "tambour" );
	deepEqual( Stem("tamburin"), "tamburin" );
	deepEqual( Stem("tan"), "tan" );
	deepEqual( Stem("tändle"), "tandl" );
	deepEqual( Stem("tanne"), "tann" );
	deepEqual( Stem("tannebaum"), "tannebaum" );
	deepEqual( Stem("tannen"), "tann" );
	deepEqual( Stem("tannenbäumchen"), "tannenbaumch" );
	deepEqual( Stem("tannenbusch"), "tannenbusch" );
	deepEqual( Stem("tannenen"), "tann" );
	deepEqual( Stem("tannengestrüpp"), "tannengestrupp" );
	deepEqual( Stem("tannengetäfels"), "tannengetafel" );
	deepEqual( Stem("tannenhähers"), "tannenhah" );
	deepEqual( Stem("tannenwäldchen"), "tannenwaldch" );
	deepEqual( Stem("tante"), "tant" );
	deepEqual( Stem("tanz"), "tanz" );
	deepEqual( Stem("tanzbein"), "tanzbein" );
	deepEqual( Stem("tanze"), "tanz" );
	deepEqual( Stem("tänze"), "tanz" );
	deepEqual( Stem("tänzelnden"), "tanzelnd" );
	deepEqual( Stem("tänzelte"), "tanzelt" );
	deepEqual( Stem("tanzen"), "tanz" );
	deepEqual( Stem("tanzende"), "tanzend" );
	deepEqual( Stem("tanzenden"), "tanzend" );
	deepEqual( Stem("tanzendes"), "tanzend" );
	deepEqual( Stem("tanzmusik"), "tanzmus" );
	deepEqual( Stem("tanzplatz"), "tanzplatz" );
	deepEqual( Stem("tanzsaal"), "tanzsaal" );
	deepEqual( Stem("tanzsaales"), "tanzsaal" );
	deepEqual( Stem("tanzschritten"), "tanzschritt" );
	deepEqual( Stem("tanzt"), "tanzt" );
	deepEqual( Stem("tanzte"), "tanzt" );
	deepEqual( Stem("tanzten"), "tanzt" );
	deepEqual( Stem("tapet"), "tapet" );
	deepEqual( Stem("tapete"), "tapet" );
	deepEqual( Stem("tapfer"), "tapf" );
	deepEqual( Stem("tapfere"), "tapf" );
	deepEqual( Stem("tapferen"), "tapf" );
	deepEqual( Stem("tapferes"), "tapf" );
	deepEqual( Stem("tapferkeit"), "tapfer" );
	deepEqual( Stem("tapfern"), "tapf" );
	deepEqual( Stem("tappen"), "tapp" );
	deepEqual( Stem("tapper"), "tapp" );
	deepEqual( Stem("täppet"), "tappet" );
	deepEqual( Stem("tappte"), "tappt" );
	deepEqual( Stem("tasche"), "tasch" );
	deepEqual( Stem("taschen"), "tasch" );
	deepEqual( Stem("taschengeld"), "taschengeld" );
	deepEqual( Stem("taschentuch"), "taschentuch" );
	deepEqual( Stem("taschentüchern"), "taschentuch" );
	deepEqual( Stem("taschenuhr"), "taschenuhr" );
	deepEqual( Stem("task"), "task" );
	deepEqual( Stem("tasse"), "tass" );
	deepEqual( Stem("tassen"), "tass" );
	deepEqual( Stem("tasten"), "tast" );
	deepEqual( Stem("tasteten"), "tastet" );
	deepEqual( Stem("tat"), "tat" );
	deepEqual( Stem("tät"), "tat" );
	deepEqual( Stem("täte"), "tat" );
	deepEqual( Stem("taten"), "tat" );
	deepEqual( Stem("täten"), "tat" );
	deepEqual( Stem("tatendrang"), "tatendrang" );
	deepEqual( Stem("tatendranges"), "tatendrang" );
	deepEqual( Stem("tatendurst"), "tatendurst" );
	deepEqual( Stem("täter"), "tat" );
	deepEqual( Stem("tätig"), "tatig" );
	deepEqual( Stem("tätige"), "tatig" );
	deepEqual( Stem("tätigen"), "tatig" );
	deepEqual( Stem("tätiger"), "tatig" );
	deepEqual( Stem("tätiges"), "tatig" );
	deepEqual( Stem("tätigkeit"), "tatig" );
	deepEqual( Stem("tätigkeiten"), "tatig" );
	deepEqual( Stem("tätigkeitsbereiche"), "tatigkeitsbereich" );
	deepEqual( Stem("tätigkeitstriebe"), "tatigkeitstrieb" );
	deepEqual( Stem("tatkraft"), "tatkraft" );
	deepEqual( Stem("tatkräftige"), "tatkraft" );
	deepEqual( Stem("tatkräftiges"), "tatkraft" );
	deepEqual( Stem("tatlust"), "tatlust" );
	deepEqual( Stem("tatsache"), "tatsach" );
	deepEqual( Stem("tatsachen"), "tatsach" );
	deepEqual( Stem("tatsächlich"), "tatsach" );
	deepEqual( Stem("tatsächlichen"), "tatsach" );
	deepEqual( Stem("tätschelten"), "tatschelt" );
	deepEqual( Stem("tatwirklichkeiten"), "tatwirk" );
	deepEqual( Stem("tatzen"), "tatz" );
	deepEqual( Stem("tau"), "tau" );
	deepEqual( Stem("taub"), "taub" );
	deepEqual( Stem("taube"), "taub" );
	deepEqual( Stem("tauben"), "taub" );
	deepEqual( Stem("tauchen"), "tauch" );
	deepEqual( Stem("taucht"), "taucht" );
	deepEqual( Stem("tauchte"), "taucht" );
	deepEqual( Stem("tauchten"), "taucht" );
	deepEqual( Stem("taufe"), "tauf" );
	deepEqual( Stem("taufen"), "tauf" );
	deepEqual( Stem("täufer"), "tauf" );
	deepEqual( Stem("taufnamen"), "taufnam" );
	deepEqual( Stem("taufschein"), "taufschein" );
	deepEqual( Stem("taufstein"), "taufstein" );
	deepEqual( Stem("taufzettel"), "taufzettel" );
	deepEqual( Stem("taugen"), "taug" );
	deepEqual( Stem("taugenichts"), "taugenicht" );
	deepEqual( Stem("tauglich"), "tauglich" );
	deepEqual( Stem("taugliche"), "tauglich" );
	deepEqual( Stem("tauglichen"), "tauglich" );
	deepEqual( Stem("tauglicheres"), "tauglich" );
	deepEqual( Stem("tauglichkeit"), "tauglich" );
	deepEqual( Stem("tauglichsten"), "tauglich" );
	deepEqual( Stem("taugt"), "taugt" );
	deepEqual( Stem("tauige"), "tauig" );
	deepEqual( Stem("tauigen"), "tauig" );
	deepEqual( Stem("taumariechen"), "taumariech" );
	deepEqual( Stem("taumariechens"), "taumariech" );
	deepEqual( Stem("taumeln"), "taumeln" );
	deepEqual( Stem("taumelnd"), "taumelnd" );
	deepEqual( Stem("taumelnder"), "taumelnd" );
	deepEqual( Stem("taumelte"), "taumelt" );
	deepEqual( Stem("taunassen"), "taunass" );
	deepEqual( Stem("tauschen"), "tausch" );
	deepEqual( Stem("täuschen"), "tausch" );
	deepEqual( Stem("täuschender"), "tauschend" );
	deepEqual( Stem("täuscht"), "tauscht" );
	deepEqual( Stem("täuschte"), "tauscht" );
	deepEqual( Stem("täuschung"), "tauschung" );
	deepEqual( Stem("täuschungen"), "tauschung" );
	deepEqual( Stem("tauschwitz"), "tauschwitz" );
	deepEqual( Stem("tausee"), "tause" );
	deepEqual( Stem("tausees"), "tause" );
	deepEqual( Stem("tausend"), "tausend" );
	deepEqual( Stem("tausende"), "tausend" );
	deepEqual( Stem("tausenden"), "tausend" );
	deepEqual( Stem("tausendfachem"), "tausendfach" );
	deepEqual( Stem("tausendfältigen"), "tausendfalt" );
	deepEqual( Stem("tausendkünstlern"), "tausendkunstl" );
	deepEqual( Stem("tausendmal"), "tausendmal" );
	deepEqual( Stem("tausendsgeschichten"), "tausendsgeschicht" );
	deepEqual( Stem("tausendskerl"), "tausendskerl" );
	deepEqual( Stem("tausendskind"), "tausendskind" );
	deepEqual( Stem("tausendsmensch"), "tausendsmensch" );
	deepEqual( Stem("tausendste"), "tausend" );
	deepEqual( Stem("tausig"), "tausig" );
	deepEqual( Stem("taverne"), "tavern" );
	deepEqual( Stem("tax"), "tax" );
	deepEqual( Stem("taxen"), "tax" );
	deepEqual( Stem("taxi"), "taxi" );
	deepEqual( Stem("taxifahrer"), "taxifahr" );
	deepEqual( Stem("technicus"), "technicus" );
	deepEqual( Stem("techniker"), "technik" );
	deepEqual( Stem("technisch"), "technisch" );
	deepEqual( Stem("technischen"), "technisch" );
	deepEqual( Stem("technisches"), "technisch" );
	deepEqual( Stem("techno"), "techno" );
	deepEqual( Stem("teckel"), "teckel" );
	deepEqual( Stem("tecnh"), "tecnh" );
	deepEqual( Stem("tee"), "tee" );
	deepEqual( Stem("teebeutel"), "teebeutel" );
	deepEqual( Stem("teekanne"), "teekann" );
	deepEqual( Stem("teelöffel"), "teeloffel" );
	deepEqual( Stem("tees"), "tees" );
	deepEqual( Stem("teich"), "teich" );
	deepEqual( Stem("teiche"), "teich" );
	deepEqual( Stem("teifi"), "teifi" );
	deepEqual( Stem("teig"), "teig" );
	deepEqual( Stem("teigs"), "teig" );
	deepEqual( Stem("teil"), "teil" );
	deepEqual( Stem("teile"), "teil" );
	deepEqual( Stem("teilen"), "teil" );
	deepEqual( Stem("teilete"), "teilet" );
	deepEqual( Stem("teilhaben"), "teilhab" );
	deepEqual( Stem("teilhaft"), "teilhaft" );
	deepEqual( Stem("teilhaftig"), "teilhaft" );
	deepEqual( Stem("teilnahm"), "teilnahm" );
	deepEqual( Stem("teilnahme"), "teilnahm" );
	deepEqual( Stem("teilnahmlos"), "teilnahmlos" );
	deepEqual( Stem("teilnehmen"), "teilnehm" );
	deepEqual( Stem("teilnehmende"), "teilnehm" );
	deepEqual( Stem("teilnehmer"), "teilnehm" );
	deepEqual( Stem("teilnehmung"), "teilnehm" );
	deepEqual( Stem("teilnimmt"), "teilnimmt" );
	deepEqual( Stem("teils"), "teil" );
	deepEqual( Stem("teilt"), "teilt" );
	deepEqual( Stem("teilte"), "teilt" );
	deepEqual( Stem("teilten"), "teilt" );
	deepEqual( Stem("teilung"), "teilung" );
	deepEqual( Stem("teilweise"), "teilweis" );
	deepEqual( Stem("teilzunehmen"), "teilzunehm" );
	deepEqual( Stem("tel"), "tel" );
	deepEqual( Stem("telefon"), "telefon" );
	deepEqual( Stem("telefonanrufe"), "telefonanruf" );
	deepEqual( Stem("telefone"), "telefon" );
	deepEqual( Stem("telefonen"), "telefon" );
	deepEqual( Stem("telefonhörer"), "telefonhor" );
	deepEqual( Stem("telefoniert"), "telefoniert" );
	deepEqual( Stem("telefonierte"), "telefoniert" );
	deepEqual( Stem("telefonisch"), "telefon" );
	deepEqual( Stem("telegrafisch"), "telegraf" );
	deepEqual( Stem("telegramm"), "telegramm" );
	deepEqual( Stem("telegraphisch"), "telegraph" );
	deepEqual( Stem("telepathische"), "telepath" );
	deepEqual( Stem("telephonieren"), "telephoni" );
	deepEqual( Stem("telephonierten"), "telephoniert" );
	deepEqual( Stem("telephonisch"), "telephon" );
	deepEqual( Stem("telephonische"), "telephon" );
	deepEqual( Stem("telephonischen"), "telephon" );
	deepEqual( Stem("telephonischer"), "telephon" );
	deepEqual( Stem("teller"), "tell" );
	deepEqual( Stem("tellerleckerei"), "tellerleckerei" );
	deepEqual( Stem("tellers"), "tell" );
	deepEqual( Stem("tempel"), "tempel" );
	deepEqual( Stem("tempels"), "tempel" );
	deepEqual( Stem("temperatur"), "temperatur" );
	deepEqual( Stem("tempora"), "tempora" );
	deepEqual( Stem("tendenz"), "tendenz" );
	deepEqual( Stem("tendenzen"), "tendenz" );
	deepEqual( Stem("tennen"), "tenn" );
	deepEqual( Stem("tenöre"), "tenor" );
	deepEqual( Stem("teppich"), "teppich" );
	deepEqual( Stem("teppichartigen"), "teppichart" );
	deepEqual( Stem("teppiche"), "teppich" );
	deepEqual( Stem("teppichen"), "teppich" );
	deepEqual( Stem("teppichweber"), "teppichweb" );
	deepEqual( Stem("termin"), "termin" );
	deepEqual( Stem("terminantur"), "terminantur" );
	deepEqual( Stem("terminus"), "terminus" );
	deepEqual( Stem("terra"), "terra" );
	deepEqual( Stem("terrasse"), "terrass" );
	deepEqual( Stem("terrassen"), "terrass" );
	deepEqual( Stem("territorium"), "territorium" );
	deepEqual( Stem("terroristisch"), "terrorist" );
	deepEqual( Stem("terroristischen"), "terrorist" );
	deepEqual( Stem("terroristischer"), "terrorist" );
	deepEqual( Stem("tertium"), "tertium" );
	deepEqual( Stem("tessiner"), "tessin" );
	deepEqual( Stem("testament"), "testament" );
	deepEqual( Stem("testamentarisch"), "testamentar" );
	deepEqual( Stem("testaments"), "testament" );
	deepEqual( Stem("teuer"), "teu" );
	deepEqual( Stem("teueren"), "teu" );
	deepEqual( Stem("teuerste"), "teuerst" );
	deepEqual( Stem("teufel"), "teufel" );
	deepEqual( Stem("teufels"), "teufel" );
	deepEqual( Stem("teufelsbrücke"), "teufelsbruck" );
	deepEqual( Stem("teufelsgeduld"), "teufelsgeduld" );
	deepEqual( Stem("teufelshexlein"), "teufelshexlein" );
	deepEqual( Stem("teufelshörner"), "teufelshorn" );
	deepEqual( Stem("teufelskünste"), "teufelskun" );
	deepEqual( Stem("teufelsreitern"), "teufelsreit" );
	deepEqual( Stem("teuflisch"), "teuflisch" );
	deepEqual( Stem("teuflische"), "teuflisch" );
	deepEqual( Stem("teuflischen"), "teuflisch" );
	deepEqual( Stem("teure"), "teur" );
	deepEqual( Stem("texas"), "texas" );
	deepEqual( Stem("text"), "text" );
	deepEqual( Stem("thachpanches"), "thachpanch" );
	deepEqual( Stem("thamar"), "thamar" );
	deepEqual( Stem("tharschisch"), "tharschisch" );
	deepEqual( Stem("the"), "the" );
	deepEqual( Stem("theater"), "theat" );
	deepEqual( Stem("theaterbillet"), "theaterbillet" );
	deepEqual( Stem("theatergruppe"), "theatergrupp" );
	deepEqual( Stem("theaterkarten"), "theaterkart" );
	deepEqual( Stem("theaterprinzessin"), "theaterprinzessin" );
	deepEqual( Stem("theaterprospekt"), "theaterprospekt" );
	deepEqual( Stem("theaterszene"), "theatersz" );
	deepEqual( Stem("theke"), "thek" );
	deepEqual( Stem("thema"), "thema" );
	deepEqual( Stem("thematisiert"), "thematisiert" );
	deepEqual( Stem("themen"), "them" );
	deepEqual( Stem("themse"), "thems" );
	deepEqual( Stem("theodor"), "theodor" );
	deepEqual( Stem("theologe"), "theolog" );
	deepEqual( Stem("theologen"), "theolog" );
	deepEqual( Stem("theologie"), "theologi" );
	deepEqual( Stem("theologin"), "theologin" );
	deepEqual( Stem("theologinnen"), "theologinn" );
	deepEqual( Stem("theologisch"), "theolog" );
	deepEqual( Stem("theologische"), "theolog" );
	deepEqual( Stem("theologischen"), "theolog" );
	deepEqual( Stem("theophrastos"), "theophrastos" );
	deepEqual( Stem("theoretisch"), "theoret" );
	deepEqual( Stem("theoretische"), "theoret" );
	deepEqual( Stem("theoretischen"), "theoret" );
	deepEqual( Stem("theoretischer"), "theoret" );
	deepEqual( Stem("theoretisches"), "theoret" );
	deepEqual( Stem("theorie"), "theori" );
	deepEqual( Stem("theorien"), "theori" );
	deepEqual( Stem("theosophen"), "theosoph" );
	deepEqual( Stem("theosophische"), "theosoph" );
	deepEqual( Stem("theresa"), "theresa" );
	deepEqual( Stem("thesen"), "thes" );
	deepEqual( Stem("thesis"), "thesis" );
	deepEqual( Stem("thiel"), "thiel" );
	deepEqual( Stem("thomas"), "thomas" );
	deepEqual( Stem("thron"), "thron" );
	deepEqual( Stem("throne"), "thron" );
	deepEqual( Stem("thronen"), "thron" );
	deepEqual( Stem("thrones"), "thron" );
	deepEqual( Stem("throns"), "thron" );
	deepEqual( Stem("thronstufen"), "thronstuf" );
	deepEqual( Stem("thront"), "thront" );
	deepEqual( Stem("thronte"), "thront" );
	deepEqual( Stem("thubal"), "thubal" );
	deepEqual( Stem("thubalkain"), "thubalkain" );
	deepEqual( Stem("thubalkains"), "thubalkain" );
	deepEqual( Stem("thurgau"), "thurgau" );
	deepEqual( Stem("thv"), "thv" );
	deepEqual( Stem("ti"), "ti" );
	deepEqual( Stem("ticket"), "ticket" );
	deepEqual( Stem("tief"), "tief" );
	deepEqual( Stem("tiefblauem"), "tiefblau" );
	deepEqual( Stem("tiefblauen"), "tiefblau" );
	deepEqual( Stem("tiefe"), "tief" );
	deepEqual( Stem("tiefem"), "tief" );
	deepEqual( Stem("tiefen"), "tief" );
	deepEqual( Stem("tiefer"), "tief" );
	deepEqual( Stem("tiefere"), "tief" );
	deepEqual( Stem("tieferen"), "tief" );
	deepEqual( Stem("tiefern"), "tief" );
	deepEqual( Stem("tiefes"), "tief" );
	deepEqual( Stem("tiefpunkt"), "tiefpunkt" );
	deepEqual( Stem("tiefschwarzes"), "tiefschwarz" );
	deepEqual( Stem("tiefsinnig"), "tiefsinn" );
	deepEqual( Stem("tiefsinnigen"), "tiefsinn" );
	deepEqual( Stem("tiefsinniges"), "tiefsinn" );
	deepEqual( Stem("tiefste"), "tief" );
	deepEqual( Stem("tiefsten"), "tief" );
	deepEqual( Stem("tiefster"), "tief" );
	deepEqual( Stem("tieftönenden"), "tiefton" );
	deepEqual( Stem("tier"), "tier" );
	deepEqual( Stem("tierarzt"), "tierarzt" );
	deepEqual( Stem("tierchen"), "tierch" );
	deepEqual( Stem("tiere"), "tier" );
	deepEqual( Stem("tieren"), "tier" );
	deepEqual( Stem("tieres"), "tier" );
	deepEqual( Stem("tierfabel"), "tierfabel" );
	deepEqual( Stem("tiergattungen"), "tiergatt" );
	deepEqual( Stem("tierheit"), "tierheit" );
	deepEqual( Stem("tierische"), "tierisch" );
	deepEqual( Stem("tierischen"), "tierisch" );
	deepEqual( Stem("tierklaue"), "tierklau" );
	deepEqual( Stem("tierlebens"), "tierleb" );
	deepEqual( Stem("tierlein"), "tierlein" );
	deepEqual( Stem("tiernatur"), "tiernatur" );
	deepEqual( Stem("tiersamen"), "tiersam" );
	deepEqual( Stem("tierschutzverein"), "tierschutzverein" );
	deepEqual( Stem("tierseele"), "tierseel" );
	deepEqual( Stem("tierwelt"), "tierwelt" );
	deepEqual( Stem("tiger"), "tig" );
	deepEqual( Stem("tigern"), "tig" );
	deepEqual( Stem("tiiid"), "tiiid" );
	deepEqual( Stem("tilgen"), "tilg" );
	deepEqual( Stem("tinte"), "tint" );
	deepEqual( Stem("tinten"), "tint" );
	deepEqual( Stem("tintenflaschen"), "tintenflasch" );
	deepEqual( Stem("tintenstrichen"), "tintenstrich" );
	deepEqual( Stem("tippte"), "tippt" );
	deepEqual( Stem("tirilieren"), "tirili" );
	deepEqual( Stem("tirilierte"), "tiriliert" );
	deepEqual( Stem("tisch"), "tisch" );
	deepEqual( Stem("tischbeins"), "tischbein" );
	deepEqual( Stem("tischchen"), "tischch" );
	deepEqual( Stem("tische"), "tisch" );
	deepEqual( Stem("tischen"), "tisch" );
	deepEqual( Stem("tisches"), "tisch" );
	deepEqual( Stem("tischgebet"), "tischgebet" );
	deepEqual( Stem("tischlade"), "tischlad" );
	deepEqual( Stem("tischler"), "tischl" );
	deepEqual( Stem("tischplatte"), "tischplatt" );
	deepEqual( Stem("tischtuch"), "tischtuch" );
	deepEqual( Stem("tischwein"), "tischwein" );
	deepEqual( Stem("titel"), "titel" );
	deepEqual( Stem("titelblatt"), "titelblatt" );
	deepEqual( Stem("titeln"), "titeln" );
	deepEqual( Stem("titelt"), "titelt" );
	deepEqual( Stem("tl"), "tl" );
	deepEqual( Stem("to"), "to" );
	deepEqual( Stem("toaste"), "toast" );
	deepEqual( Stem("toasts"), "toast" );
	deepEqual( Stem("toben"), "tob" );
	deepEqual( Stem("tobende"), "tobend" );
	deepEqual( Stem("tobenden"), "tobend" );
	deepEqual( Stem("tobendes"), "tobend" );
	deepEqual( Stem("tobias"), "tobias" );
	deepEqual( Stem("tobt"), "tobt" );
	deepEqual( Stem("tobte"), "tobt" );
	deepEqual( Stem("tochter"), "tocht" );
	deepEqual( Stem("töchter"), "tocht" );
	deepEqual( Stem("töchtern"), "tocht" );
	deepEqual( Stem("tod"), "tod" );
	deepEqual( Stem("todbette"), "todbett" );
	deepEqual( Stem("todbringend"), "todbring" );
	deepEqual( Stem("tode"), "tod" );
	deepEqual( Stem("todes"), "tod" );
	deepEqual( Stem("todesangst"), "todesang" );
	deepEqual( Stem("todesaussichten"), "todesaussicht" );
	deepEqual( Stem("todesfurcht"), "todesfurcht" );
	deepEqual( Stem("todeskampf"), "todeskampf" );
	deepEqual( Stem("todeskandidaten"), "todeskandidat" );
	deepEqual( Stem("todesschattens"), "todesschatt" );
	deepEqual( Stem("todesschrecken"), "todesschreck" );
	deepEqual( Stem("todesschwadronen"), "todesschwadron" );
	deepEqual( Stem("todesstrafe"), "todesstraf" );
	deepEqual( Stem("todesstrafen"), "todesstraf" );
	deepEqual( Stem("todesstunde"), "todesstund" );
	deepEqual( Stem("todesurteil"), "todesurteil" );
	deepEqual( Stem("todeswerkzeuge"), "todeswerkzeug" );
	deepEqual( Stem("tödlich"), "todlich" );
	deepEqual( Stem("tödliche"), "todlich" );
	deepEqual( Stem("tödlichen"), "todlich" );
	deepEqual( Stem("tödlicher"), "todlich" );
	deepEqual( Stem("todsünd"), "todsund" );
	deepEqual( Stem("todsündigen"), "todsund" );
	deepEqual( Stem("todvollste"), "todvoll" );
	deepEqual( Stem("töff"), "toff" );
	deepEqual( Stem("töfffahrer"), "tofffahr" );
	deepEqual( Stem("toile"), "toil" );
	deepEqual( Stem("toilette"), "toilett" );
	deepEqual( Stem("toilettenstücke"), "toilettenstuck" );
	deepEqual( Stem("toilettenwerkzeug"), "toilettenwerkzeug" );
	deepEqual( Stem("tokaier"), "tokai" );
	deepEqual( Stem("tol"), "tol" );
	deepEqual( Stem("toll"), "toll" );
	deepEqual( Stem("tolle"), "toll" );
	deepEqual( Stem("tollen"), "toll" );
	deepEqual( Stem("toller"), "toll" );
	deepEqual( Stem("tolleren"), "toll" );
	deepEqual( Stem("tolles"), "toll" );
	deepEqual( Stem("tollhaus"), "tollhaus" );
	deepEqual( Stem("tollhäusler"), "tollhausl" );
	deepEqual( Stem("tollheit"), "tollheit" );
	deepEqual( Stem("tollkühnen"), "tollkuhn" );
	deepEqual( Stem("tollste"), "toll" );
	deepEqual( Stem("tollsten"), "toll" );
	deepEqual( Stem("tollte"), "tollt" );
	deepEqual( Stem("tolpatsch"), "tolpatsch" );
	deepEqual( Stem("tolpatschig"), "tolpatsch" );
	deepEqual( Stem("tölpel"), "tolpel" );
	deepEqual( Stem("tölpelhafter"), "tolpelhaft" );
	deepEqual( Stem("tölpeln"), "tolpeln" );
	deepEqual( Stem("tölz"), "tolz" );
	deepEqual( Stem("tombakschnalle"), "tombakschnall" );
	deepEqual( Stem("ton"), "ton" );
	deepEqual( Stem("tonart"), "tonart" );
	deepEqual( Stem("tonbandschnippel"), "tonbandschnippel" );
	deepEqual( Stem("tone"), "ton" );
	deepEqual( Stem("töne"), "ton" );
	deepEqual( Stem("tönen"), "ton" );
	deepEqual( Stem("tönende"), "tonend" );
	deepEqual( Stem("tonfall"), "tonfall" );
	deepEqual( Stem("tonfetzen"), "tonfetz" );
	deepEqual( Stem("toni"), "toni" );
	deepEqual( Stem("tons"), "ton" );
	deepEqual( Stem("tönt"), "tont" );
	deepEqual( Stem("tönte"), "tont" );
	deepEqual( Stem("tönten"), "tont" );
	deepEqual( Stem("top"), "top" );
	deepEqual( Stem("topas"), "topas" );
	deepEqual( Stem("topf"), "topf" );
	deepEqual( Stem("topfbodens"), "topfbod" );
	deepEqual( Stem("töpfchen"), "topfch" );
	deepEqual( Stem("töpfe"), "topf" );
	deepEqual( Stem("töpfen"), "topf" );
	deepEqual( Stem("töpfer"), "topf" );
	deepEqual( Stem("töpfergeschirre"), "topfergeschirr" );
	deepEqual( Stem("töpfers"), "topf" );
	deepEqual( Stem("topfwagens"), "topfwag" );
	deepEqual( Stem("topheth"), "topheth" );
	deepEqual( Stem("topi"), "topi" );
	deepEqual( Stem("topica"), "topica" );
	deepEqual( Stem("topicis"), "topicis" );
	deepEqual( Stem("topik"), "topik" );
	deepEqual( Stem("topoi"), "topoi" );
	deepEqual( Stem("topov"), "topov" );
	deepEqual( Stem("topus"), "topus" );
	deepEqual( Stem("tor"), "tor" );
	deepEqual( Stem("torbogen"), "torbog" );
	deepEqual( Stem("tore"), "tor" );
	deepEqual( Stem("toreinfahrt"), "toreinfahrt" );
	deepEqual( Stem("toren"), "tor" );
	deepEqual( Stem("torenwerk"), "torenwerk" );
	deepEqual( Stem("tores"), "tor" );
	deepEqual( Stem("torgau"), "torgau" );
	deepEqual( Stem("torheit"), "torheit" );
	deepEqual( Stem("torheiten"), "torheit" );
	deepEqual( Stem("töricht"), "toricht" );
	deepEqual( Stem("törichte"), "toricht" );
	deepEqual( Stem("törichten"), "toricht" );
	deepEqual( Stem("torkelte"), "torkelt" );
	deepEqual( Stem("tornister"), "tornist" );
	deepEqual( Stem("tort"), "tort" );
	deepEqual( Stem("torte"), "tort" );
	deepEqual( Stem("tosende"), "tosend" );
	deepEqual( Stem("tot"), "tot" );
	deepEqual( Stem("total"), "total" );
	deepEqual( Stem("totale"), "total" );
	deepEqual( Stem("totalen"), "total" );
	deepEqual( Stem("totalität"), "totalitat" );
	deepEqual( Stem("tote"), "tot" );
	deepEqual( Stem("töte"), "tot" );
	deepEqual( Stem("toten"), "tot" );
	deepEqual( Stem("töten"), "tot" );
	deepEqual( Stem("totenbahre"), "totenbahr" );
	deepEqual( Stem("totenbleich"), "totenbleich" );
	deepEqual( Stem("tötendes"), "totend" );
	deepEqual( Stem("totengebeine"), "totengebein" );
	deepEqual( Stem("totenmusik"), "totenmus" );
	deepEqual( Stem("tötens"), "tot" );
	deepEqual( Stem("totenstill"), "totenstill" );
	deepEqual( Stem("toter"), "tot" );
	deepEqual( Stem("totes"), "tot" );
	deepEqual( Stem("tötet"), "totet" );
	deepEqual( Stem("tötete"), "totet" );
	deepEqual( Stem("töteten"), "totet" );
	deepEqual( Stem("totgemacht"), "totgemacht" );
	deepEqual( Stem("totgeprügelt"), "totgeprugelt" );
	deepEqual( Stem("totgeschlagen"), "totgeschlag" );
	deepEqual( Stem("totgestellt"), "totgestellt" );
	deepEqual( Stem("totlachen"), "totlach" );
	deepEqual( Stem("totmachen"), "totmach" );
	deepEqual( Stem("totmachte"), "totmacht" );
	deepEqual( Stem("totschlag"), "totschlag" );
	deepEqual( Stem("totschlagen"), "totschlag" );
	deepEqual( Stem("totstellen"), "totstell" );
	deepEqual( Stem("tottrat"), "tottrat" );
	deepEqual( Stem("tötung"), "totung" );
	deepEqual( Stem("touv"), "touv" );
	deepEqual( Stem("traam"), "traam" );
	deepEqual( Stem("trab"), "trab" );
	deepEqual( Stem("trabe"), "trab" );
	deepEqual( Stem("tracht"), "tracht" );
	deepEqual( Stem("trachten"), "tracht" );
	deepEqual( Stem("trachtet"), "trachtet" );
	deepEqual( Stem("trachtete"), "trachtet" );
	deepEqual( Stem("trachteten"), "trachtet" );
	deepEqual( Stem("tradition"), "tradition" );
	deepEqual( Stem("traditionellen"), "traditionell" );
	deepEqual( Stem("traditionen"), "tradition" );
	deepEqual( Stem("traf"), "traf" );
	deepEqual( Stem("trafen"), "traf" );
	deepEqual( Stem("trag"), "trag" );
	deepEqual( Stem("träg"), "trag" );
	deepEqual( Stem("tragbar"), "tragbar" );
	deepEqual( Stem("trage"), "trag" );
	deepEqual( Stem("träge"), "trag" );
	deepEqual( Stem("tragen"), "trag" );
	deepEqual( Stem("trägen"), "trag" );
	deepEqual( Stem("tragend"), "tragend" );
	deepEqual( Stem("tragenden"), "tragend" );
	deepEqual( Stem("träger"), "trag" );
	deepEqual( Stem("trägerschaft"), "tragerschaft" );
	deepEqual( Stem("trägheit"), "tragheit" );
	deepEqual( Stem("tragik"), "tragik" );
	deepEqual( Stem("tragisch"), "tragisch" );
	deepEqual( Stem("tragische"), "tragisch" );
	deepEqual( Stem("tragischen"), "tragisch" );
	deepEqual( Stem("trägt"), "tragt" );
	deepEqual( Stem("training"), "training" );
	deepEqual( Stem("traktätchen"), "traktatch" );
	deepEqual( Stem("traktatus"), "traktatus" );
	deepEqual( Stem("trällern"), "trall" );
	deepEqual( Stem("tranchierens"), "tranchier" );
	deepEqual( Stem("träne"), "tran" );
	deepEqual( Stem("tränen"), "tran" );
	deepEqual( Stem("tränenbrot"), "tranenbrot" );
	deepEqual( Stem("trank"), "trank" );
	deepEqual( Stem("tranken"), "trank" );
	deepEqual( Stem("tränken"), "trank" );
	deepEqual( Stem("tränket"), "tranket" );
	deepEqual( Stem("trankopfer"), "trankopf" );
	deepEqual( Stem("trankst"), "trank" );
	deepEqual( Stem("tränkst"), "trank" );
	deepEqual( Stem("tränkte"), "trankt" );
	deepEqual( Stem("tranlämpchen"), "tranlampch" );
	deepEqual( Stem("transzendent"), "transzendent" );
	deepEqual( Stem("transzendental"), "transzendental" );
	deepEqual( Stem("transzendentale"), "transzendental" );
	deepEqual( Stem("transzendentalen"), "transzendental" );
	deepEqual( Stem("transzendentales"), "transzendental" );
	deepEqual( Stem("transzendente"), "transzendent" );
	deepEqual( Stem("transzendenten"), "transzendent" );
	deepEqual( Stem("transzendenz"), "transzendenz" );
	deepEqual( Stem("trapfenden"), "trapfend" );
	deepEqual( Stem("trapfhirsch"), "trapfhirsch" );
	deepEqual( Stem("trat"), "trat" );
	deepEqual( Stem("traten"), "trat" );
	deepEqual( Stem("trau"), "trau" );
	deepEqual( Stem("traube"), "traub" );
	deepEqual( Stem("trauben"), "traub" );
	deepEqual( Stem("trauen"), "trau" );
	deepEqual( Stem("trauer"), "trau" );
	deepEqual( Stem("trauere"), "trau" );
	deepEqual( Stem("trauergang"), "trauergang" );
	deepEqual( Stem("trauerkapelle"), "trauerkapell" );
	deepEqual( Stem("trauern"), "trau" );
	deepEqual( Stem("trauernd"), "trauernd" );
	deepEqual( Stem("trauernde"), "trauernd" );
	deepEqual( Stem("trauernden"), "trauernd" );
	deepEqual( Stem("trauernder"), "trauernd" );
	deepEqual( Stem("trauerspiel"), "trauerspiel" );
	deepEqual( Stem("trauerspielen"), "trauerspiel" );
	deepEqual( Stem("trauert"), "trauert" );
	deepEqual( Stem("trauerte"), "trauert" );
	deepEqual( Stem("trauerzeit"), "trauerzeit" );
	deepEqual( Stem("trauet"), "trauet" );
	deepEqual( Stem("traufe"), "trauf" );
	deepEqual( Stem("träufeln"), "traufeln" );
	deepEqual( Stem("träufelt"), "traufelt" );
	deepEqual( Stem("träufelten"), "traufelt" );
	deepEqual( Stem("traulich"), "traulich" );
	deepEqual( Stem("traulichen"), "traulich" );
	deepEqual( Stem("traum"), "traum" );
	deepEqual( Stem("traumberuf"), "traumberuf" );
	deepEqual( Stem("traumbüchlein"), "traumbuchlein" );
	deepEqual( Stem("traume"), "traum" );
	deepEqual( Stem("träume"), "traum" );
	deepEqual( Stem("träumen"), "traum" );
	deepEqual( Stem("träumenden"), "traumend" );
	deepEqual( Stem("träumereien"), "traumerei" );
	deepEqual( Stem("träumerisch"), "traumer" );
	deepEqual( Stem("träumerischen"), "traumer" );
	deepEqual( Stem("traumhafter"), "traumhaft" );
	deepEqual( Stem("traumlicht"), "traumlicht" );
	deepEqual( Stem("traumseligkeit"), "traumsel" );
	deepEqual( Stem("träumst"), "traum" );
	deepEqual( Stem("träumt"), "traumt" );
	deepEqual( Stem("träumte"), "traumt" );
	deepEqual( Stem("träumten"), "traumt" );
	deepEqual( Stem("traurig"), "traurig" );
	deepEqual( Stem("traurige"), "traurig" );
	deepEqual( Stem("traurigen"), "traurig" );
	deepEqual( Stem("trauriger"), "traurig" );
	deepEqual( Stem("trauriges"), "traurig" );
	deepEqual( Stem("traurigkeit"), "traurig" );
	deepEqual( Stem("traurigs"), "traurig" );
	deepEqual( Stem("traurigste"), "traurig" );
	deepEqual( Stem("traut"), "traut" );
	deepEqual( Stem("traute"), "traut" );
	deepEqual( Stem("trauten"), "traut" );
	deepEqual( Stem("trautes"), "traut" );
	deepEqual( Stem("trauung"), "trauung" );
	deepEqual( Stem("treffe"), "treff" );
	deepEqual( Stem("treffen"), "treff" );
	deepEqual( Stem("treffenden"), "treffend" );
	deepEqual( Stem("trefflich"), "trefflich" );
	deepEqual( Stem("trefflichen"), "trefflich" );
	deepEqual( Stem("trefflicher"), "trefflich" );
	deepEqual( Stem("treffliches"), "trefflich" );
	deepEqual( Stem("treib"), "treib" );
	deepEqual( Stem("treiben"), "treib" );
	deepEqual( Stem("treibend"), "treibend" );
	deepEqual( Stem("treibenden"), "treibend" );
	deepEqual( Stem("treiber"), "treib" );
	deepEqual( Stem("treibern"), "treib" );
	deepEqual( Stem("treibst"), "treib" );
	deepEqual( Stem("treibt"), "treibt" );
	deepEqual( Stem("tremolierte"), "tremoliert" );
	deepEqual( Stem("trend"), "trend" );
	deepEqual( Stem("trennen"), "trenn" );
	deepEqual( Stem("trennt"), "trennt" );
	deepEqual( Stem("trennte"), "trennt" );
	deepEqual( Stem("trennten"), "trennt" );
	deepEqual( Stem("trennung"), "trennung" );
	deepEqual( Stem("trennungen"), "trennung" );
	deepEqual( Stem("treppe"), "trepp" );
	deepEqual( Stem("treppen"), "trepp" );
	deepEqual( Stem("treppenabsatz"), "treppenabsatz" );
	deepEqual( Stem("treppenaufgänge"), "treppenaufgang" );
	deepEqual( Stem("treppengeländer"), "treppengeland" );
	deepEqual( Stem("treppenhaus"), "treppenhaus" );
	deepEqual( Stem("treppenstufen"), "treppenstuf" );
	deepEqual( Stem("trete"), "tret" );
	deepEqual( Stem("treten"), "tret" );
	deepEqual( Stem("tretet"), "tretet" );
	deepEqual( Stem("treu"), "treu" );
	deepEqual( Stem("treue"), "treu" );
	deepEqual( Stem("treuem"), "treu" );
	deepEqual( Stem("treuen"), "treu" );
	deepEqual( Stem("treuer"), "treu" );
	deepEqual( Stem("treuere"), "treu" );
	deepEqual( Stem("treues"), "treu" );
	deepEqual( Stem("treugeliebter"), "treugeliebt" );
	deepEqual( Stem("treuherzig"), "treuherz" );
	deepEqual( Stem("treuherzige"), "treuherz" );
	deepEqual( Stem("treuherzigen"), "treuherz" );
	deepEqual( Stem("treuherziges"), "treuherz" );
	deepEqual( Stem("treulich"), "treulich" );
	deepEqual( Stem("treulos"), "treulos" );
	deepEqual( Stem("treulosen"), "treulos" );
	deepEqual( Stem("treuloser"), "treulos" );
	deepEqual( Stem("treulosigkeit"), "treulos" );
	deepEqual( Stem("treuste"), "treust" );
	deepEqual( Stem("triangel"), "triangel" );
	deepEqual( Stem("tribut"), "tribut" );
	deepEqual( Stem("trieb"), "trieb" );
	deepEqual( Stem("triebe"), "trieb" );
	deepEqual( Stem("trieben"), "trieb" );
	deepEqual( Stem("triebene"), "trieb" );
	deepEqual( Stem("triebfeder"), "triebfed" );
	deepEqual( Stem("triebfedern"), "triebfed" );
	deepEqual( Stem("triefaugen"), "triefaug" );
	deepEqual( Stem("triefend"), "triefend" );
	deepEqual( Stem("triefenden"), "triefend" );
	deepEqual( Stem("triefendes"), "triefend" );
	deepEqual( Stem("triefigen"), "triefig" );
	deepEqual( Stem("trieften"), "trieft" );
	deepEqual( Stem("trifft"), "trifft" );
	deepEqual( Stem("triften"), "trift" );
	deepEqual( Stem("triller"), "trill" );
	deepEqual( Stem("trillernde"), "trillernd" );
	deepEqual( Stem("trinken"), "trink" );
	deepEqual( Stem("trinkenden"), "trinkend" );
	deepEqual( Stem("trinkest"), "trink" );
	deepEqual( Stem("trinkgeld"), "trinkgeld" );
	deepEqual( Stem("trinkhallen"), "trinkhall" );
	deepEqual( Stem("trinkschale"), "trinkschal" );
	deepEqual( Stem("trinkt"), "trinkt" );
	deepEqual( Stem("tritt"), "tritt" );
	deepEqual( Stem("trittbrett"), "trittbrett" );
	deepEqual( Stem("tritte"), "tritt" );
	deepEqual( Stem("tritten"), "tritt" );
	deepEqual( Stem("trittst"), "tritt" );
	deepEqual( Stem("triumph"), "triumph" );
	deepEqual( Stem("triumphe"), "triumph" );
	deepEqual( Stem("triumphieren"), "triumphi" );
	deepEqual( Stem("triumphierend"), "triumphier" );
	deepEqual( Stem("triviale"), "trivial" );
	deepEqual( Stem("trivialität"), "trivialitat" );
	deepEqual( Stem("trivialitäten"), "trivialitat" );
	deepEqual( Stem("trocken"), "trock" );
	deepEqual( Stem("trockene"), "trock" );
	deepEqual( Stem("trockenen"), "trock" );
	deepEqual( Stem("trockener"), "trock" );
	deepEqual( Stem("trockenes"), "trock" );
	deepEqual( Stem("trockenstangen"), "trockenstang" );
	deepEqual( Stem("trocknen"), "trockn" );
	deepEqual( Stem("trocknend"), "trocknend" );
	deepEqual( Stem("trocknete"), "trocknet" );
	deepEqual( Stem("trockneten"), "trocknet" );
	deepEqual( Stem("troddel"), "troddel" );
	deepEqual( Stem("troddeln"), "troddeln" );
	deepEqual( Stem("trog"), "trog" );
	deepEqual( Stem("troge"), "trog" );
	deepEqual( Stem("trollen"), "troll" );
	deepEqual( Stem("trollt"), "trollt" );
	deepEqual( Stem("trommel"), "trommel" );
	deepEqual( Stem("trommelfell"), "trommelfell" );
	deepEqual( Stem("trommeln"), "trommeln" );
	deepEqual( Stem("trommelte"), "trommelt" );
	deepEqual( Stem("trompeten"), "trompet" );
	deepEqual( Stem("trompeter"), "trompet" );
	deepEqual( Stem("trompeters"), "trompet" );
	deepEqual( Stem("tropf"), "tropf" );
	deepEqual( Stem("tröpfe"), "tropf" );
	deepEqual( Stem("tropfen"), "tropf" );
	deepEqual( Stem("tropfensaum"), "tropfensaum" );
	deepEqual( Stem("tropfenschweren"), "tropfenschw" );
	deepEqual( Stem("tröpflein"), "tropflein" );
	deepEqual( Stem("tropft"), "tropft" );
	deepEqual( Stem("tropften"), "tropft" );
	deepEqual( Stem("trophäe"), "tropha" );
	deepEqual( Stem("tross"), "tross" );
	deepEqual( Stem("troß"), "tross" );
	deepEqual( Stem("trosse"), "tross" );
	deepEqual( Stem("trossknechte"), "trossknecht" );
	deepEqual( Stem("troßknechte"), "trossknecht" );
	deepEqual( Stem("trost"), "trost" );
	deepEqual( Stem("tröst"), "trost" );
	deepEqual( Stem("trösten"), "trost" );
	deepEqual( Stem("tröstende"), "trostend" );
	deepEqual( Stem("tröstenden"), "trostend" );
	deepEqual( Stem("tröster"), "trost" );
	deepEqual( Stem("trostes"), "trost" );
	deepEqual( Stem("tröstet"), "trostet" );
	deepEqual( Stem("tröstete"), "trostet" );
	deepEqual( Stem("trostlos"), "trostlos" );
	deepEqual( Stem("trostlose"), "trostlos" );
	deepEqual( Stem("trostlosen"), "trostlos" );
	deepEqual( Stem("trostlosesten"), "trostlos" );
	deepEqual( Stem("trostlosigkeit"), "trostlos" );
	deepEqual( Stem("tröstungen"), "trostung" );
	deepEqual( Stem("trottel"), "trottel" );
	deepEqual( Stem("trottete"), "trottet" );
	deepEqual( Stem("trotz"), "trotz" );
	deepEqual( Stem("trotzdem"), "trotzd" );
	deepEqual( Stem("trotzig"), "trotzig" );
	deepEqual( Stem("trotzige"), "trotzig" );
	deepEqual( Stem("trotzigen"), "trotzig" );
	deepEqual( Stem("trotziges"), "trotzig" );
	deepEqual( Stem("trotzten"), "trotzt" );
	deepEqual( Stem("trübe"), "trub" );
	deepEqual( Stem("trubel"), "trubel" );
	deepEqual( Stem("trüben"), "trub" );
	deepEqual( Stem("trüber"), "trub" );
	deepEqual( Stem("trübes"), "trub" );
	deepEqual( Stem("trübsal"), "trubsal" );
	deepEqual( Stem("trübsale"), "trubsal" );
	deepEqual( Stem("trübselig"), "trubsel" );
	deepEqual( Stem("trübselige"), "trubsel" );
	deepEqual( Stem("trübseligen"), "trubsel" );
	deepEqual( Stem("trübseliger"), "trubsel" );
	deepEqual( Stem("trübt"), "trubt" );
	deepEqual( Stem("trübte"), "trubt" );
	deepEqual( Stem("trüffeln"), "truffeln" );
	deepEqual( Stem("trug"), "trug" );
	deepEqual( Stem("trüge"), "trug" );
	deepEqual( Stem("trugen"), "trug" );
	deepEqual( Stem("trügerische"), "truger" );
	deepEqual( Stem("trügerischer"), "truger" );
	deepEqual( Stem("truggestalten"), "truggestalt" );
	deepEqual( Stem("truggründe"), "truggrund" );
	deepEqual( Stem("trüglich"), "truglich" );
	deepEqual( Stem("trüglicher"), "truglich" );
	deepEqual( Stem("trüglichkeit"), "truglich" );
	deepEqual( Stem("trugvoll"), "trugvoll" );
	deepEqual( Stem("trummen"), "trumm" );
	deepEqual( Stem("trümmer"), "trumm" );
	deepEqual( Stem("trümmerhaufen"), "trummerhauf" );
	deepEqual( Stem("trümmern"), "trumm" );
	deepEqual( Stem("trunken"), "trunk" );
	deepEqual( Stem("trunkenen"), "trunk" );
	deepEqual( Stem("trunkener"), "trunk" );
	deepEqual( Stem("trupp"), "trupp" );
	deepEqual( Stem("trüppchen"), "truppch" );
	deepEqual( Stem("truppe"), "trupp" );
	deepEqual( Stem("truppen"), "trupp" );
	deepEqual( Stem("trupps"), "trupps" );
	deepEqual( Stem("trutzig"), "trutzig" );
	deepEqual( Stem("tu"), "tu" );
	deepEqual( Stem("tü"), "tu" );
	deepEqual( Stem("tubalkain"), "tubalkain" );
	deepEqual( Stem("tuch"), "tuch" );
	deepEqual( Stem("tuche"), "tuch" );
	deepEqual( Stem("tüchel"), "tuchel" );
	deepEqual( Stem("tücher"), "tuch" );
	deepEqual( Stem("tuchhose"), "tuchhos" );
	deepEqual( Stem("tüchl"), "tuchl" );
	deepEqual( Stem("tüchtig"), "tuchtig" );
	deepEqual( Stem("tüchtige"), "tuchtig" );
	deepEqual( Stem("tüchtigem"), "tuchtig" );
	deepEqual( Stem("tüchtigen"), "tuchtig" );
	deepEqual( Stem("tüchtiger"), "tuchtig" );
	deepEqual( Stem("tüchtiges"), "tuchtig" );
	deepEqual( Stem("tüchtigkeit"), "tuchtig" );
	deepEqual( Stem("tücke"), "tuck" );
	deepEqual( Stem("tücken"), "tuck" );
	deepEqual( Stem("tückischer"), "tuckisch" );
	deepEqual( Stem("tue"), "tue" );
	deepEqual( Stem("tuest"), "tuest" );
	deepEqual( Stem("tüftelte"), "tuftelt" );
	deepEqual( Stem("tugend"), "tugend" );
	deepEqual( Stem("tugenden"), "tugend" );
	deepEqual( Stem("tugendgesinnung"), "tugendgesinn" );
	deepEqual( Stem("tugendhaft"), "tugendhaft" );
	deepEqual( Stem("tugendhafte"), "tugendhaft" );
	deepEqual( Stem("tugendhaften"), "tugendhaft" );
	deepEqual( Stem("tugendhafter"), "tugendhaft" );
	deepEqual( Stem("tugendhafteste"), "tugendhaft" );
	deepEqual( Stem("tugendsame"), "tugendsam" );
	deepEqual( Stem("tummel"), "tummel" );
	deepEqual( Stem("tummelte"), "tummelt" );
	deepEqual( Stem("tümpel"), "tumpel" );
	deepEqual( Stem("tumult"), "tumult" );
	deepEqual( Stem("tun"), "tun" );
	deepEqual( Stem("tünche"), "tunch" );
	deepEqual( Stem("tünchen"), "tunch" );
	deepEqual( Stem("tundra"), "tundra" );
	deepEqual( Stem("tunika"), "tunika" );
	deepEqual( Stem("tunlich"), "tunlich" );
	deepEqual( Stem("tunlichkeit"), "tunlich" );
	deepEqual( Stem("tuns"), "tun" );
	deepEqual( Stem("tüp"), "tup" );
	deepEqual( Stem("tür"), "tur" );
	deepEqual( Stem("turbane"), "turban" );
	deepEqual( Stem("türe"), "tur" );
	deepEqual( Stem("türen"), "tur" );
	deepEqual( Stem("türflügel"), "turflugel" );
	deepEqual( Stem("türfüllung"), "turfull" );
	deepEqual( Stem("turin"), "turin" );
	deepEqual( Stem("turiner"), "turin" );
	deepEqual( Stem("turkelte"), "turkelt" );
	deepEqual( Stem("türken"), "turk" );
	deepEqual( Stem("türkisch"), "turkisch" );
	deepEqual( Stem("türkische"), "turkisch" );
	deepEqual( Stem("türkischem"), "turkisch" );
	deepEqual( Stem("türkischen"), "turkisch" );
	deepEqual( Stem("türkischer"), "turkisch" );
	deepEqual( Stem("türklinke"), "turklink" );
	deepEqual( Stem("turm"), "turm" );
	deepEqual( Stem("turmartigen"), "turmart" );
	deepEqual( Stem("türmchen"), "turmch" );
	deepEqual( Stem("turme"), "turm" );
	deepEqual( Stem("türme"), "turm" );
	deepEqual( Stem("türmen"), "turm" );
	deepEqual( Stem("turmknöpfe"), "turmknopf" );
	deepEqual( Stem("turmstube"), "turmstub" );
	deepEqual( Stem("türmte"), "turmt" );
	deepEqual( Stem("turmuhr"), "turmuhr" );
	deepEqual( Stem("turnübung"), "turnub" );
	deepEqual( Stem("türöffner"), "turoffn" );
	deepEqual( Stem("türöffners"), "turoffn" );
	deepEqual( Stem("türschloss"), "turschloss" );
	deepEqual( Stem("türseite"), "turseit" );
	deepEqual( Stem("turteltäubchen"), "turteltaubch" );
	deepEqual( Stem("turteltauben"), "turteltaub" );
	deepEqual( Stem("tuscheln"), "tuscheln" );
	deepEqual( Stem("tust"), "tust" );
	deepEqual( Stem("tut"), "tut" );
	deepEqual( Stem("tvn"), "tvn" );
	deepEqual( Stem("typen"), "typ" );
	deepEqual( Stem("typik"), "typik" );
	deepEqual( Stem("typisches"), "typisch" );
	deepEqual( Stem("typus"), "typus" );
	deepEqual( Stem("tyrannei"), "tyrannei" );
	deepEqual( Stem("tyrannen"), "tyrann" );
	deepEqual( Stem("tyrus"), "tyrus" );
	deepEqual( Stem("u"), "u" );
	deepEqual( Stem("uax"), "uax" );
	deepEqual( Stem("üb"), "ub" );
	deepEqual( Stem("übel"), "ubel" );
	deepEqual( Stem("übelgenommen"), "ubelgenomm" );
	deepEqual( Stem("übelgeruch"), "ubelgeruch" );
	deepEqual( Stem("übelgerüche"), "ubelgeruch" );
	deepEqual( Stem("übelklänge"), "ubelklang" );
	deepEqual( Stem("übeln"), "ubeln" );
	deepEqual( Stem("übels"), "ubel" );
	deepEqual( Stem("übeltäter"), "ubeltat" );
	deepEqual( Stem("übeltun"), "ubeltun" );
	deepEqual( Stem("übelwollend"), "ubelwoll" );
	deepEqual( Stem("übelzunehmen"), "ubelzunehm" );
	deepEqual( Stem("üben"), "uben" );
	deepEqual( Stem("über"), "uber" );
	deepEqual( Stem("uberall"), "uberall" );
	deepEqual( Stem("überall"), "uberall" );
	deepEqual( Stem("überallhin"), "uberallhin" );
	deepEqual( Stem("überaus"), "uberaus" );
	deepEqual( Stem("überbelegt"), "uberbelegt" );
	deepEqual( Stem("überbieten"), "uberbiet" );
	deepEqual( Stem("überbleibsel"), "uberbleibsel" );
	deepEqual( Stem("überbleibseln"), "uberbleibseln" );
	deepEqual( Stem("überbleibsels"), "uberbleibsel" );
	deepEqual( Stem("überblick"), "uberblick" );
	deepEqual( Stem("überbot"), "uberbot" );
	deepEqual( Stem("überboten"), "uberbot" );
	deepEqual( Stem("überbracht"), "uberbracht" );
	deepEqual( Stem("überbrachte"), "uberbracht" );
	deepEqual( Stem("überbringen"), "uberbring" );
	deepEqual( Stem("überbringenden"), "uberbring" );
	deepEqual( Stem("überbringer"), "uberbring" );
	deepEqual( Stem("überdachte"), "uberdacht" );
	deepEqual( Stem("überdachten"), "uberdacht" );
	deepEqual( Stem("überdeckt"), "uberdeckt" );
	deepEqual( Stem("überdem"), "uberd" );
	deepEqual( Stem("überdies"), "uberdi" );
	deepEqual( Stem("überdimensionalen"), "uberdimensional" );
	deepEqual( Stem("überdruss"), "uberdruss" );
	deepEqual( Stem("überdruß"), "uberdruss" );
	deepEqual( Stem("überdrusses"), "uberdruss" );
	deepEqual( Stem("überdrüssig"), "uberdruss" );
	deepEqual( Stem("übereilen"), "ubereil" );
	deepEqual( Stem("übereilung"), "ubereil" );
	deepEqual( Stem("überein"), "uberein" );
	deepEqual( Stem("übereinand"), "ubereinand" );
	deepEqual( Stem("übereinander"), "ubereinand" );
	deepEqual( Stem("übereinandergestellten"), "ubereinandergestellt" );
	deepEqual( Stem("übereinstimmen"), "ubereinstimm" );
	deepEqual( Stem("übereinstimmende"), "ubereinstimm" );
	deepEqual( Stem("übereinstimmt"), "ubereinstimmt" );
	deepEqual( Stem("übereinstimmte"), "ubereinstimmt" );
	deepEqual( Stem("übereinstimmung"), "ubereinstimm" );
	deepEqual( Stem("übereinstimmungen"), "ubereinstimm" );
	deepEqual( Stem("übereinwirkten"), "ubereinwirkt" );
	deepEqual( Stem("übereinzustimmen"), "ubereinzustimm" );
	deepEqual( Stem("überempfindlich"), "uberempfind" );
	deepEqual( Stem("überfahren"), "uberfahr" );
	deepEqual( Stem("überfall"), "uberfall" );
	deepEqual( Stem("überfalle"), "uberfall" );
	deepEqual( Stem("überfallen"), "uberfall" );
	deepEqual( Stem("überfein"), "uberfein" );
	deepEqual( Stem("überfiel"), "uberfiel" );
	deepEqual( Stem("überfliessendes"), "uberfliess" );
	deepEqual( Stem("überfließendes"), "uberfliess" );
	deepEqual( Stem("überflog"), "uberflog" );
	deepEqual( Stem("überfloss"), "uberfloss" );
	deepEqual( Stem("überflügeln"), "uberflugeln" );
	deepEqual( Stem("überfluss"), "uberfluss" );
	deepEqual( Stem("überfluß"), "uberfluss" );
	deepEqual( Stem("überflusse"), "uberfluss" );
	deepEqual( Stem("überflüssig"), "uberfluss" );
	deepEqual( Stem("überflüssige"), "uberfluss" );
	deepEqual( Stem("überflüssigkeit"), "uberfluss" );
	deepEqual( Stem("überfluten"), "uberflut" );
	deepEqual( Stem("überflutenden"), "uberflut" );
	deepEqual( Stem("überflutender"), "uberflut" );
	deepEqual( Stem("überflutung"), "uberflut" );
	deepEqual( Stem("überfordern"), "uberford" );
	deepEqual( Stem("überfüllten"), "uberfullt" );
	deepEqual( Stem("übergab"), "ubergab" );
	deepEqual( Stem("übergang"), "ubergang" );
	deepEqual( Stem("übergange"), "ubergang" );
	deepEqual( Stem("übergänge"), "ubergang" );
	deepEqual( Stem("übergangsdomizil"), "ubergangsdomizil" );
	deepEqual( Stem("übergangsphase"), "ubergangsphas" );
	deepEqual( Stem("übergeben"), "ubergeb" );
	deepEqual( Stem("übergegangen"), "ubergegang" );
	deepEqual( Stem("übergehen"), "ubergeh" );
	deepEqual( Stem("übergeht"), "ubergeht" );
	deepEqual( Stem("übergeleitet"), "ubergeleitet" );
	deepEqual( Stem("übergeordneten"), "ubergeordnet" );
	deepEqual( Stem("übergepanscht"), "ubergepanscht" );
	deepEqual( Stem("übergepflanzt"), "ubergepflanzt" );
	deepEqual( Stem("übergeschnappt"), "ubergeschnappt" );
	deepEqual( Stem("übergewicht"), "ubergewicht" );
	deepEqual( Stem("übergingen"), "uberging" );
	deepEqual( Stem("überglücklich"), "ubergluck" );
	deepEqual( Stem("übergossen"), "ubergoss" );
	deepEqual( Stem("übergossenen"), "ubergoss" );
	deepEqual( Stem("übergriffe"), "ubergriff" );
	deepEqual( Stem("übergrosse"), "ubergross" );
	deepEqual( Stem("übergrünten"), "ubergrunt" );
	deepEqual( Stem("überhasten"), "uberhast" );
	deepEqual( Stem("überhäuft"), "uberhauft" );
	deepEqual( Stem("überhäufte"), "uberhauft" );
	deepEqual( Stem("überhaupt"), "uberhaupt" );
	deepEqual( Stem("überheben"), "uberheb" );
	deepEqual( Stem("überhebung"), "uberheb" );
	deepEqual( Stem("überholte"), "uberholt" );
	deepEqual( Stem("überholten"), "uberholt" );
	deepEqual( Stem("überhöre"), "uberhor" );
	deepEqual( Stem("überhören"), "uberhor" );
	deepEqual( Stem("überhört"), "uberhort" );
	deepEqual( Stem("überhörte"), "uberhort" );
	deepEqual( Stem("überhuschten"), "uberhuscht" );
	deepEqual( Stem("überkam"), "uberkam" );
	deepEqual( Stem("überkamen"), "uberkam" );
	deepEqual( Stem("überkollerte"), "uberkollert" );
	deepEqual( Stem("überkommen"), "uberkomm" );
	deepEqual( Stem("überlagerung"), "uberlager" );
	deepEqual( Stem("überlasse"), "uberlass" );
	deepEqual( Stem("überlassen"), "uberlass" );
	deepEqual( Stem("überlasset"), "uberlasset" );
	deepEqual( Stem("überlasst"), "uberlasst" );
	deepEqual( Stem("überlässt"), "uberlasst" );
	deepEqual( Stem("überläßt"), "uberlasst" );
	deepEqual( Stem("überlaufenem"), "uberlauf" );
	deepEqual( Stem("überlaufenes"), "uberlauf" );
	deepEqual( Stem("überleben"), "uberleb" );
	deepEqual( Stem("überlebenstechnischen"), "uberlebenstechn" );
	deepEqual( Stem("überlebt"), "uberlebt" );
	deepEqual( Stem("überleg"), "uberleg" );
	deepEqual( Stem("überlegen"), "uberleg" );
	deepEqual( Stem("überlegend"), "uberleg" );
	deepEqual( Stem("überlegene"), "uberleg" );
	deepEqual( Stem("überlegenheit"), "uberleg" );
	deepEqual( Stem("überlegt"), "uberlegt" );
	deepEqual( Stem("überlegte"), "uberlegt" );
	deepEqual( Stem("überlegten"), "uberlegt" );
	deepEqual( Stem("überlegung"), "uberleg" );
	deepEqual( Stem("überlegungen"), "uberleg" );
	deepEqual( Stem("überlieferungen"), "uberliefer" );
	deepEqual( Stem("überliess"), "uberliess" );
	deepEqual( Stem("überließ"), "uberliess" );
	deepEqual( Stem("überliesse"), "uberliess" );
	deepEqual( Stem("überliessen"), "uberliess" );
	deepEqual( Stem("überlistet"), "uberlistet" );
	deepEqual( Stem("überlud"), "uberlud" );
	deepEqual( Stem("überm"), "uberm" );
	deepEqual( Stem("übermacht"), "ubermacht" );
	deepEqual( Stem("übermächtigen"), "ubermacht" );
	deepEqual( Stem("übermannt"), "ubermannt" );
	deepEqual( Stem("übermässig"), "ubermass" );
	deepEqual( Stem("übermäßig"), "ubermass" );
	deepEqual( Stem("übermorgen"), "ubermorg" );
	deepEqual( Stem("übermüdet"), "ubermudet" );
	deepEqual( Stem("übermüdeten"), "ubermudet" );
	deepEqual( Stem("übermut"), "ubermut" );
	deepEqual( Stem("übermütig"), "ubermut" );
	deepEqual( Stem("übermütige"), "ubermut" );
	deepEqual( Stem("übermütigem"), "ubermut" );
	deepEqual( Stem("übermütigen"), "ubermut" );
	deepEqual( Stem("übermütiger"), "ubermut" );
	deepEqual( Stem("übernachten"), "ubernacht" );
	deepEqual( Stem("übernahm"), "ubernahm" );
	deepEqual( Stem("übernamen"), "ubernam" );
	deepEqual( Stem("übernehmen"), "ubernehm" );
	deepEqual( Stem("übernimmt"), "ubernimmt" );
	deepEqual( Stem("übernommen"), "ubernomm" );
	deepEqual( Stem("überparteiliche"), "uberpartei" );
	deepEqual( Stem("überprüfe"), "uberpruf" );
	deepEqual( Stem("überprüfen"), "uberpruf" );
	deepEqual( Stem("überquer"), "uberqu" );
	deepEqual( Stem("überquert"), "uberquert" );
	deepEqual( Stem("überragte"), "uberragt" );
	deepEqual( Stem("überrasche"), "uberrasch" );
	deepEqual( Stem("überraschen"), "uberrasch" );
	deepEqual( Stem("überraschend"), "uberrasch" );
	deepEqual( Stem("überraschenden"), "uberrasch" );
	deepEqual( Stem("überraschenderweise"), "uberraschenderweis" );
	deepEqual( Stem("überrascht"), "uberrascht" );
	deepEqual( Stem("überraschte"), "uberrascht" );
	deepEqual( Stem("überraschten"), "uberrascht" );
	deepEqual( Stem("überraschung"), "uberrasch" );
	deepEqual( Stem("überreden"), "uberred" );
	deepEqual( Stem("überredet"), "uberredet" );
	deepEqual( Stem("überredung"), "uberred" );
	deepEqual( Stem("überredungen"), "uberred" );
	deepEqual( Stem("überredungsgiften"), "uberredungsgift" );
	deepEqual( Stem("überreichen"), "uberreich" );
	deepEqual( Stem("überreicht"), "uberreicht" );
	deepEqual( Stem("überreizung"), "uberreiz" );
	deepEqual( Stem("überrest"), "uberr" );
	deepEqual( Stem("überreste"), "uberr" );
	deepEqual( Stem("überresten"), "uberr" );
	deepEqual( Stem("überrock"), "uberrock" );
	deepEqual( Stem("überrocks"), "uberrock" );
	deepEqual( Stem("überrumpeln"), "uberrumpeln" );
	deepEqual( Stem("übers"), "uber" );
	deepEqual( Stem("übersäete"), "ubersaet" );
	deepEqual( Stem("übersandt"), "ubersandt" );
	deepEqual( Stem("übersät"), "ubersat" );
	deepEqual( Stem("überschattet"), "uberschattet" );
	deepEqual( Stem("überschatteten"), "uberschattet" );
	deepEqual( Stem("überschätzt"), "uberschatzt" );
	deepEqual( Stem("überschauen"), "uberschau" );
	deepEqual( Stem("überschauend"), "uberschau" );
	deepEqual( Stem("überschaute"), "uberschaut" );
	deepEqual( Stem("überschigg"), "uberschigg" );
	deepEqual( Stem("überschlagend"), "uberschlag" );
	deepEqual( Stem("überschlug"), "uberschlug" );
	deepEqual( Stem("überschreiten"), "uberschreit" );
	deepEqual( Stem("überschrieben"), "uberschrieb" );
	deepEqual( Stem("überschrift"), "uberschrift" );
	deepEqual( Stem("überschriften"), "uberschrift" );
	deepEqual( Stem("überschritten"), "uberschritt" );
	deepEqual( Stem("überschwemmt"), "uberschwemmt" );
	deepEqual( Stem("überschwemmung"), "uberschwemm" );
	deepEqual( Stem("überschwemmungen"), "uberschwemm" );
	deepEqual( Stem("überschwenglich"), "uberschweng" );
	deepEqual( Stem("überschwengliche"), "uberschweng" );
	deepEqual( Stem("überschwenglichen"), "uberschweng" );
	deepEqual( Stem("überschwengliches"), "uberschweng" );
	deepEqual( Stem("übersee"), "uberse" );
	deepEqual( Stem("übersehbaren"), "ubersehbar" );
	deepEqual( Stem("übersehen"), "uberseh" );
	deepEqual( Stem("übersehenden"), "uberseh" );
	deepEqual( Stem("übersetzen"), "ubersetz" );
	deepEqual( Stem("übersetzt"), "ubersetzt" );
	deepEqual( Stem("übersetzte"), "ubersetzt" );
	deepEqual( Stem("übersetzung"), "ubersetz" );
	deepEqual( Stem("übersiedeln"), "ubersiedeln" );
	deepEqual( Stem("übersiedelt"), "ubersiedelt" );
	deepEqual( Stem("übersiedelte"), "ubersiedelt" );
	deepEqual( Stem("übersiedelten"), "ubersiedelt" );
	deepEqual( Stem("übersiedlung"), "ubersiedl" );
	deepEqual( Stem("übersinnlich"), "ubersinn" );
	deepEqual( Stem("übersinnliche"), "ubersinn" );
	deepEqual( Stem("übersinnlichen"), "ubersinn" );
	deepEqual( Stem("übersinnlicher"), "ubersinn" );
	deepEqual( Stem("übersinnliches"), "ubersinn" );
	deepEqual( Stem("überspannt"), "uberspannt" );
	deepEqual( Stem("übersponnen"), "ubersponn" );
	deepEqual( Stem("übersprang"), "ubersprang" );
	deepEqual( Stem("überstanden"), "uberstand" );
	deepEqual( Stem("überstehen"), "ubersteh" );
	deepEqual( Stem("übersteigt"), "ubersteigt" );
	deepEqual( Stem("überstieg"), "uberstieg" );
	deepEqual( Stem("überstiegen"), "uberstieg" );
	deepEqual( Stem("überstrapaziert"), "uberstrapaziert" );
	deepEqual( Stem("überstrichen"), "uberstrich" );
	deepEqual( Stem("überströmendem"), "uberstrom" );
	deepEqual( Stem("überströmender"), "uberstrom" );
	deepEqual( Stem("überstürzend"), "ubersturz" );
	deepEqual( Stem("übertönen"), "uberton" );
	deepEqual( Stem("übertrage"), "ubertrag" );
	deepEqual( Stem("übertragen"), "ubertrag" );
	deepEqual( Stem("übertragenen"), "ubertrag" );
	deepEqual( Stem("übertreibe"), "ubertreib" );
	deepEqual( Stem("übertreiben"), "ubertreib" );
	deepEqual( Stem("übertreibungen"), "ubertreib" );
	deepEqual( Stem("übertreten"), "ubertret" );
	deepEqual( Stem("übertretung"), "ubertret" );
	deepEqual( Stem("übertretungen"), "ubertret" );
	deepEqual( Stem("übertrieb"), "ubertrieb" );
	deepEqual( Stem("übertrieben"), "ubertrieb" );
	deepEqual( Stem("übertriebener"), "ubertrieb" );
	deepEqual( Stem("übertrifft"), "ubertrifft" );
	deepEqual( Stem("übertroffen"), "ubertroff" );
	deepEqual( Stem("überverdienstlicher"), "uberverdienst" );
	deepEqual( Stem("übervölkert"), "ubervolkert" );
	deepEqual( Stem("übervorteilen"), "ubervorteil" );
	deepEqual( Stem("übervorteilend"), "ubervorteil" );
	deepEqual( Stem("überwachen"), "uberwach" );
	deepEqual( Stem("überwachsen"), "uberwachs" );
	deepEqual( Stem("überwacht"), "uberwacht" );
	deepEqual( Stem("überwachte"), "uberwacht" );
	deepEqual( Stem("überwachung"), "uberwach" );
	deepEqual( Stem("überwältigen"), "uberwalt" );
	deepEqual( Stem("überwältigt"), "uberwaltigt" );
	deepEqual( Stem("überwand"), "uberwand" );
	deepEqual( Stem("überweisen"), "uberweis" );
	deepEqual( Stem("überwiegend"), "uberwieg" );
	deepEqual( Stem("überwiegender"), "uberwieg" );
	deepEqual( Stem("überwiegt"), "uberwiegt" );
	deepEqual( Stem("überwies"), "uberwi" );
	deepEqual( Stem("überwiesen"), "uberwies" );
	deepEqual( Stem("überwinden"), "uberwind" );
	deepEqual( Stem("überwinder"), "uberwind" );
	deepEqual( Stem("überwindet"), "uberwindet" );
	deepEqual( Stem("überwindung"), "uberwind" );
	deepEqual( Stem("überwog"), "uberwog" );
	deepEqual( Stem("überworfen"), "uberworf" );
	deepEqual( Stem("überwuchert"), "uberwuchert" );
	deepEqual( Stem("überwucherte"), "uberwuchert" );
	deepEqual( Stem("überwunden"), "uberwund" );
	deepEqual( Stem("überwundener"), "uberwund" );
	deepEqual( Stem("überzeuge"), "uberzeug" );
	deepEqual( Stem("überzeugen"), "uberzeug" );
	deepEqual( Stem("überzeugend"), "uberzeug" );
	deepEqual( Stem("überzeugende"), "uberzeug" );
	deepEqual( Stem("überzeugt"), "uberzeugt" );
	deepEqual( Stem("überzeugte"), "uberzeugt" );
	deepEqual( Stem("überzeugten"), "uberzeugt" );
	deepEqual( Stem("überzeugung"), "uberzeug" );
	deepEqual( Stem("überzeugungen"), "uberzeug" );
	deepEqual( Stem("überzieht"), "uberzieht" );
	deepEqual( Stem("überzogen"), "uberzog" );
	deepEqual( Stem("überzogenen"), "uberzog" );
	deepEqual( Stem("überzuspringen"), "uberzuspring" );
	deepEqual( Stem("übet"), "ubet" );
	deepEqual( Stem("üble"), "ubl" );
	deepEqual( Stem("üblen"), "ubl" );
	deepEqual( Stem("übler"), "ubl" );
	deepEqual( Stem("übles"), "ubl" );
	deepEqual( Stem("üblich"), "ublich" );
	deepEqual( Stem("übliche"), "ublich" );
	deepEqual( Stem("übrig"), "ubrig" );
	deepEqual( Stem("übrigbleiben"), "ubrigbleib" );
	deepEqual( Stem("übrigbleibt"), "ubrigbleibt" );
	deepEqual( Stem("übrigblieb"), "ubrigblieb" );
	deepEqual( Stem("übrigblieben"), "ubrigblieb" );
	deepEqual( Stem("übrige"), "ubrig" );
	deepEqual( Stem("übrigen"), "ubrig" );
	deepEqual( Stem("übrigens"), "ubrig" );
	deepEqual( Stem("übriger"), "ubrig" );
	deepEqual( Stem("übriges"), "ubrig" );
	deepEqual( Stem("übriggeblieben"), "ubriggeblieb" );
	deepEqual( Stem("übriggebliebene"), "ubriggeblieb" );
	deepEqual( Stem("übriggebliebenen"), "ubriggeblieb" );
	deepEqual( Stem("übriggelassen"), "ubriggelass" );
	deepEqual( Stem("übriglassen"), "ubriglass" );
	deepEqual( Stem("übriglasset"), "ubriglasset" );
	deepEqual( Stem("übriglässt"), "ubriglasst" );
	deepEqual( Stem("übt"), "ubt" );
	deepEqual( Stem("übte"), "ubt" );
	deepEqual( Stem("übung"), "ubung" );
	deepEqual( Stem("übungen"), "ubung" );
	deepEqual( Stem("uchtenhagen"), "uchtenhag" );
	deepEqual( Stem("uf"), "uf" );
	deepEqual( Stem("ufer"), "ufer" );
	deepEqual( Stem("uferloche"), "uferloch" );
	deepEqual( Stem("ufern"), "ufern" );
	deepEqual( Stem("ufers"), "ufer" );
	deepEqual( Stem("uff"), "uff" );
	deepEqual( Stem("ufhangen"), "ufhang" );
	deepEqual( Stem("ugelassen"), "ugelass" );
	deepEqual( Stem("uhr"), "uhr" );
	deepEqual( Stem("uhren"), "uhr" );
	deepEqual( Stem("uhrenmacher"), "uhrenmach" );
	deepEqual( Stem("uhrfeder"), "uhrfed" );
	deepEqual( Stem("uhrgehäuse"), "uhrgehaus" );
	deepEqual( Stem("uhrkette"), "uhrkett" );
	deepEqual( Stem("uhrmacher"), "uhrmach" );
	deepEqual( Stem("uhrwerk"), "uhrwerk" );
	deepEqual( Stem("ulla"), "ulla" );
	deepEqual( Stem("ulm"), "ulm" );
	deepEqual( Stem("ulmen"), "ulm" );
	deepEqual( Stem("um"), "um" );
	deepEqual( Stem("umanandhocken"), "umanandhock" );
	deepEqual( Stem("umänderung"), "umander" );
	deepEqual( Stem("umarmen"), "umarm" );
	deepEqual( Stem("umarmt"), "umarmt" );
	deepEqual( Stem("umarmte"), "umarmt" );
	deepEqual( Stem("umarmten"), "umarmt" );
	deepEqual( Stem("umarmung"), "umarm" );
	deepEqual( Stem("umarmungen"), "umarm" );
	deepEqual( Stem("umband"), "umband" );
	deepEqual( Stem("umbarmherziger"), "umbarmherz" );
	deepEqual( Stem("umbildung"), "umbild" );
	deepEqual( Stem("umblühet"), "umbluhet" );
	deepEqual( Stem("umbringen"), "umbring" );
	deepEqual( Stem("umbruchgewinnler"), "umbruchgewinnl" );
	deepEqual( Stem("umdrehen"), "umdreh" );
	deepEqual( Stem("umdrehte"), "umdreht" );
	deepEqual( Stem("umdrehungen"), "umdreh" );
	deepEqual( Stem("umeinander"), "umeinand" );
	deepEqual( Stem("umfallen"), "umfall" );
	deepEqual( Stem("umfang"), "umfang" );
	deepEqual( Stem("umfange"), "umfang" );
	deepEqual( Stem("umfangen"), "umfang" );
	deepEqual( Stem("umfanges"), "umfang" );
	deepEqual( Stem("umfassen"), "umfass" );
	deepEqual( Stem("umfassender"), "umfass" );
	deepEqual( Stem("umfasst"), "umfasst" );
	deepEqual( Stem("umfaßt"), "umfasst" );
	deepEqual( Stem("umfasste"), "umfasst" );
	deepEqual( Stem("umfaßte"), "umfasst" );
	deepEqual( Stem("umfassten"), "umfasst" );
	deepEqual( Stem("umfeld"), "umfeld" );
	deepEqual( Stem("umfing"), "umfing" );
	deepEqual( Stem("umfingen"), "umfing" );
	deepEqual( Stem("umflochten"), "umflocht" );
	deepEqual( Stem("umflossen"), "umfloss" );
	deepEqual( Stem("umfuhr"), "umfuhr" );
	deepEqual( Stem("umfunkelt"), "umfunkelt" );
	deepEqual( Stem("umg"), "umg" );
	deepEqual( Stem("umgab"), "umgab" );
	deepEqual( Stem("umgäbe"), "umgab" );
	deepEqual( Stem("umgaben"), "umgab" );
	deepEqual( Stem("umgang"), "umgang" );
	deepEqual( Stem("umgange"), "umgang" );
	deepEqual( Stem("umgänglich"), "umgang" );
	deepEqual( Stem("umgarnt"), "umgarnt" );
	deepEqual( Stem("umgeändert"), "umgeandert" );
	deepEqual( Stem("umgebe"), "umgeb" );
	deepEqual( Stem("umgeben"), "umgeb" );
	deepEqual( Stem("umgebenden"), "umgeb" );
	deepEqual( Stem("umgebildet"), "umgebildet" );
	deepEqual( Stem("umgebracht"), "umgebracht" );
	deepEqual( Stem("umgebung"), "umgeb" );
	deepEqual( Stem("umgebungen"), "umgeb" );
	deepEqual( Stem("umgefallen"), "umgefall" );
	deepEqual( Stem("umgefallenen"), "umgefall" );
	deepEqual( Stem("umgehängt"), "umgehangt" );
	deepEqual( Stem("umgehen"), "umgeh" );
	deepEqual( Stem("umgehende"), "umgeh" );
	deepEqual( Stem("umgehendes"), "umgeh" );
	deepEqual( Stem("umgeht"), "umgeht" );
	deepEqual( Stem("umgekehrt"), "umgekehrt" );
	deepEqual( Stem("umgekehrte"), "umgekehrt" );
	deepEqual( Stem("umgekehrten"), "umgekehrt" );
	deepEqual( Stem("umgekehrter"), "umgekehrt" );
	deepEqual( Stem("umgekommen"), "umgekomm" );
	deepEqual( Stem("umgekommenen"), "umgekomm" );
	deepEqual( Stem("umgepflügt"), "umgepflugt" );
	deepEqual( Stem("umgeschlagen"), "umgeschlag" );
	deepEqual( Stem("umgesehen"), "umgeseh" );
	deepEqual( Stem("umgesehn"), "umgesehn" );
	deepEqual( Stem("umgespritzt"), "umgespritzt" );
	deepEqual( Stem("umgespritzten"), "umgespritzt" );
	deepEqual( Stem("umgestülpt"), "umgestulpt" );
	deepEqual( Stem("umgestürzten"), "umgesturzt" );
	deepEqual( Stem("umgetan"), "umgetan" );
	deepEqual( Stem("umgewandelt"), "umgewandelt" );
	deepEqual( Stem("umgewandte"), "umgewandt" );
	deepEqual( Stem("umgeworfene"), "umgeworf" );
	deepEqual( Stem("umgezogen"), "umgezog" );
	deepEqual( Stem("umgibt"), "umgibt" );
	deepEqual( Stem("umgrenzen"), "umgrenz" );
	deepEqual( Stem("umgriffen"), "umgriff" );
	deepEqual( Stem("umgsprungen"), "umgsprung" );
	deepEqual( Stem("umgürtet"), "umgurtet" );
	deepEqual( Stem("umgürtete"), "umgurtet" );
	deepEqual( Stem("umhalste"), "umhal" );
	deepEqual( Stem("umhalsten"), "umhal" );
	deepEqual( Stem("umhang"), "umhang" );
	deepEqual( Stem("umhangen"), "umhang" );
	deepEqual( Stem("umhegten"), "umhegt" );
	deepEqual( Stem("umher"), "umh" );
	deepEqual( Stem("umherbieten"), "umherbiet" );
	deepEqual( Stem("umherblickt"), "umherblickt" );
	deepEqual( Stem("umherfloss"), "umherfloss" );
	deepEqual( Stem("umhergehen"), "umhergeh" );
	deepEqual( Stem("umhergeworfene"), "umhergeworf" );
	deepEqual( Stem("umherging"), "umherging" );
	deepEqual( Stem("umherhupfte"), "umherhupft" );
	deepEqual( Stem("umherirren"), "umherirr" );
	deepEqual( Stem("umherirrenden"), "umherirr" );
	deepEqual( Stem("umherlaufen"), "umherlauf" );
	deepEqual( Stem("umherlief"), "umherlief" );
	deepEqual( Stem("umherrollenden"), "umherroll" );
	deepEqual( Stem("umherschweifen"), "umherschweif" );
	deepEqual( Stem("umherschweiften"), "umherschweift" );
	deepEqual( Stem("umhersprangen"), "umhersprang" );
	deepEqual( Stem("umherstreute"), "umherstreut" );
	deepEqual( Stem("umhertrat"), "umhertrat" );
	deepEqual( Stem("umhertrieb"), "umhertrieb" );
	deepEqual( Stem("umherwatschelte"), "umherwatschelt" );
	deepEqual( Stem("umherzubieten"), "umherzubiet" );
	deepEqual( Stem("umherzublicken"), "umherzublick" );
	deepEqual( Stem("umhin"), "umhin" );
	deepEqual( Stem("umhing"), "umhing" );
	deepEqual( Stem("umkamen"), "umkam" );
	deepEqual( Stem("umkehren"), "umkehr" );
	deepEqual( Stem("umkehrt"), "umkehrt" );
	deepEqual( Stem("umkehrte"), "umkehrt" );
	deepEqual( Stem("umkehrung"), "umkehr" );
	deepEqual( Stem("umklammert"), "umklammert" );
	deepEqual( Stem("umklammerte"), "umklammert" );
	deepEqual( Stem("umkleidende"), "umkleid" );
	deepEqual( Stem("umkleidete"), "umkleidet" );
	deepEqual( Stem("umkleideter"), "umkleidet" );
	deepEqual( Stem("umkommen"), "umkomm" );
	deepEqual( Stem("umkrallung"), "umkrall" );
	deepEqual( Stem("umkreis"), "umkreis" );
	deepEqual( Stem("umkreise"), "umkreis" );
	deepEqual( Stem("umlagert"), "umlagert" );
	deepEqual( Stem("umlagerte"), "umlagert" );
	deepEqual( Stem("umlagerung"), "umlager" );
	deepEqual( Stem("umlauf"), "umlauf" );
	deepEqual( Stem("umlenken"), "umlenk" );
	deepEqual( Stem("umliegenden"), "umlieg" );
	deepEqual( Stem("umliegender"), "umlieg" );
	deepEqual( Stem("ummi"), "ummi" );
	deepEqual( Stem("ummifahren"), "ummifahr" );
	deepEqual( Stem("ummifahret"), "ummifahret" );
	deepEqual( Stem("ummiglacht"), "ummiglacht" );
	deepEqual( Stem("ummispring"), "ummispring" );
	deepEqual( Stem("umpfiffen"), "umpfiff" );
	deepEqual( Stem("umreissen"), "umreiss" );
	deepEqual( Stem("umreißen"), "umreiss" );
	deepEqual( Stem("umringen"), "umring" );
	deepEqual( Stem("umringt"), "umringt" );
	deepEqual( Stem("umringten"), "umringt" );
	deepEqual( Stem("umrisse"), "umriss" );
	deepEqual( Stem("umrührten"), "umruhrt" );
	deepEqual( Stem("ums"), "ums" );
	deepEqual( Stem("umsahen"), "umsah" );
	deepEqual( Stem("umsatz"), "umsatz" );
	deepEqual( Stem("umschifft"), "umschifft" );
	deepEqual( Stem("umschlag"), "umschlag" );
	deepEqual( Stem("umschläge"), "umschlag" );
	deepEqual( Stem("umschlägt"), "umschlagt" );
	deepEqual( Stem("umschlang"), "umschlang" );
	deepEqual( Stem("umschleierte"), "umschleiert" );
	deepEqual( Stem("umschliessen"), "umschliess" );
	deepEqual( Stem("umschließen"), "umschliess" );
	deepEqual( Stem("umschliesst"), "umschliesst" );
	deepEqual( Stem("umschliessung"), "umschliess" );
	deepEqual( Stem("umschließung"), "umschliess" );
	deepEqual( Stem("umschlingen"), "umschling" );
	deepEqual( Stem("umschloss"), "umschloss" );
	deepEqual( Stem("umschlug"), "umschlug" );
	deepEqual( Stem("umschlungen"), "umschlung" );
	deepEqual( Stem("umschweben"), "umschweb" );
	deepEqual( Stem("umschwebt"), "umschwebt" );
	deepEqual( Stem("umschweife"), "umschweif" );
	deepEqual( Stem("umschwunges"), "umschwung" );
	deepEqual( Stem("umsehen"), "umseh" );
	deepEqual( Stem("umsehend"), "umseh" );
	deepEqual( Stem("umsetzwohnung"), "umsetzwohn" );
	deepEqual( Stem("umsicht"), "umsicht" );
	deepEqual( Stem("umsichtige"), "umsicht" );
	deepEqual( Stem("umsieht"), "umsieht" );
	deepEqual( Stem("umso"), "umso" );
	deepEqual( Stem("umsonst"), "umson" );
	deepEqual( Stem("umsonstdas"), "umsonstdas" );
	deepEqual( Stem("umspannte"), "umspannt" );
	deepEqual( Stem("umspielten"), "umspielt" );
	deepEqual( Stem("umstand"), "umstand" );
	deepEqual( Stem("umstände"), "umstand" );
	deepEqual( Stem("umstanden"), "umstand" );
	deepEqual( Stem("umständen"), "umstand" );
	deepEqual( Stem("umständlich"), "umstand" );
	deepEqual( Stem("umständlichen"), "umstand" );
	deepEqual( Stem("umstehenden"), "umsteh" );
	deepEqual( Stem("umstellung"), "umstell" );
	deepEqual( Stem("umstiess"), "umstiess" );
	deepEqual( Stem("umstossen"), "umstoss" );
	deepEqual( Stem("umstoßen"), "umstoss" );
	deepEqual( Stem("umstossend"), "umstoss" );
	deepEqual( Stem("umstoßend"), "umstoss" );
	deepEqual( Stem("umstösst"), "umstosst" );
	deepEqual( Stem("umstößt"), "umstosst" );
	deepEqual( Stem("umstrittenen"), "umstritt" );
	deepEqual( Stem("umstrittensten"), "umstritten" );
	deepEqual( Stem("umsturz"), "umsturz" );
	deepEqual( Stem("umtreiben"), "umtreib" );
	deepEqual( Stem("umtriebe"), "umtrieb" );
	deepEqual( Stem("umtrieben"), "umtrieb" );
	deepEqual( Stem("umtun"), "umtun" );
	deepEqual( Stem("umundum"), "umundum" );
	deepEqual( Stem("umverteilen"), "umverteil" );
	deepEqual( Stem("umverteilung"), "umverteil" );
	deepEqual( Stem("umverteilungssystem"), "umverteilungssyst" );
	deepEqual( Stem("umwanden"), "umwand" );
	deepEqual( Stem("umwandlung"), "umwandl" );
	deepEqual( Stem("umwarf"), "umwarf" );
	deepEqual( Stem("umweg"), "umweg" );
	deepEqual( Stem("umwegen"), "umweg" );
	deepEqual( Stem("umweltbewegung"), "umweltbeweg" );
	deepEqual( Stem("umwerfen"), "umwerf" );
	deepEqual( Stem("umwerfend"), "umwerf" );
	deepEqual( Stem("umwickelt"), "umwickelt" );
	deepEqual( Stem("umwickelte"), "umwickelt" );
	deepEqual( Stem("umwogt"), "umwogt" );
	deepEqual( Stem("umwunden"), "umwund" );
	deepEqual( Stem("umzingelt"), "umzingelt" );
	deepEqual( Stem("umzublasen"), "umzublas" );
	deepEqual( Stem("umzubringen"), "umzubring" );
	deepEqual( Stem("umzuckte"), "umzuckt" );
	deepEqual( Stem("umzugehen"), "umzugeh" );
	deepEqual( Stem("umzugsfirma"), "umzugsfirma" );
	deepEqual( Stem("umzukehren"), "umzukehr" );
	deepEqual( Stem("umzusehen"), "umzuseh" );
	deepEqual( Stem("umzustossen"), "umzustoss" );
	deepEqual( Stem("umzustoßen"), "umzustoss" );
	deepEqual( Stem("un"), "un" );
	deepEqual( Stem("unabänderlich"), "unaband" );
	deepEqual( Stem("unabänderliche"), "unaband" );
	deepEqual( Stem("unabhängig"), "unabhang" );
	deepEqual( Stem("unabhängige"), "unabhang" );
	deepEqual( Stem("unabhängigen"), "unabhang" );
	deepEqual( Stem("unabhängiges"), "unabhang" );
	deepEqual( Stem("unabhängigkeit"), "unabhang" );
	deepEqual( Stem("unablässig"), "unablass" );
	deepEqual( Stem("unabsehbare"), "unabsehbar" );
	deepEqual( Stem("unabsehbaren"), "unabsehbar" );
	deepEqual( Stem("unabsehlich"), "unabseh" );
	deepEqual( Stem("unabtrennlich"), "unabtrenn" );
	deepEqual( Stem("unähnlich"), "unahn" );
	deepEqual( Stem("unähnlichkeit"), "unahn" );
	deepEqual( Stem("unam"), "unam" );
	deepEqual( Stem("unangebautes"), "unangebaut" );
	deepEqual( Stem("unangemeldet"), "unangemeldet" );
	deepEqual( Stem("unangenehm"), "unangenehm" );
	deepEqual( Stem("unangenehme"), "unangenehm" );
	deepEqual( Stem("unangenehmen"), "unangenehm" );
	deepEqual( Stem("unangesehen"), "unangeseh" );
	deepEqual( Stem("unangetastet"), "unangetastet" );
	deepEqual( Stem("unangezündet"), "unangezundet" );
	deepEqual( Stem("unannehmlichkeit"), "unannehm" );
	deepEqual( Stem("unannehmlichkeiten"), "unannehm" );
	deepEqual( Stem("unansehnliche"), "unansehn" );
	deepEqual( Stem("unansehnlicher"), "unansehn" );
	deepEqual( Stem("unanständig"), "unanstand" );
	deepEqual( Stem("unanständiges"), "unanstand" );
	deepEqual( Stem("unanständigsten"), "unanstand" );
	deepEqual( Stem("unappetitlichen"), "unappetit" );
	deepEqual( Stem("unappetitliches"), "unappetit" );
	deepEqual( Stem("unart"), "unart" );
	deepEqual( Stem("unartig"), "unart" );
	deepEqual( Stem("unartikuliertes"), "unartikuliert" );
	deepEqual( Stem("unästhetischem"), "unasthet" );
	deepEqual( Stem("unaufgedeckte"), "unaufgedeckt" );
	deepEqual( Stem("unaufgelösete"), "unaufgeloset" );
	deepEqual( Stem("unaufhaltsam"), "unaufhaltsam" );
	deepEqual( Stem("unaufhörlich"), "unaufhor" );
	deepEqual( Stem("unaufhörliche"), "unaufhor" );
	deepEqual( Stem("unaufhörlichen"), "unaufhor" );
	deepEqual( Stem("unauflöslich"), "unauflos" );
	deepEqual( Stem("unauflösliches"), "unauflos" );
	deepEqual( Stem("unaufmerksam"), "unaufmerksam" );
	deepEqual( Stem("unaufmerksamkeit"), "unaufmerksam" );
	deepEqual( Stem("unausbleiblich"), "unausbleib" );
	deepEqual( Stem("unausgefüllt"), "unausgefullt" );
	deepEqual( Stem("unausgesprochen"), "unausgesproch" );
	deepEqual( Stem("unauslöschlicher"), "unauslosch" );
	deepEqual( Stem("unaussprechlich"), "unaussprech" );
	deepEqual( Stem("unaussprechliche"), "unaussprech" );
	deepEqual( Stem("unaussprechlichen"), "unaussprech" );
	deepEqual( Stem("unaussprechlicher"), "unaussprech" );
	deepEqual( Stem("unaussprechliches"), "unaussprech" );
	deepEqual( Stem("unausstehlich"), "unaussteh" );
	deepEqual( Stem("unausstehliche"), "unaussteh" );
	deepEqual( Stem("unbändig"), "unband" );
	deepEqual( Stem("unbarmherzig"), "unbarmherz" );
	deepEqual( Stem("unbarmherziger"), "unbarmherz" );
	deepEqual( Stem("unbarmherzigere"), "unbarmherz" );
	deepEqual( Stem("unbarmherzigkeit"), "unbarmherz" );
	deepEqual( Stem("unbe"), "unb" );
	deepEqual( Stem("unbeachtete"), "unbeachtet" );
	deepEqual( Stem("unbebautes"), "unbebaut" );
	deepEqual( Stem("unbedacht"), "unbedacht" );
	deepEqual( Stem("unbedachten"), "unbedacht" );
	deepEqual( Stem("unbedenklich"), "unbedenk" );
	deepEqual( Stem("unbedeutend"), "unbedeut" );
	deepEqual( Stem("unbedeutende"), "unbedeut" );
	deepEqual( Stem("unbedeutenden"), "unbedeut" );
	deepEqual( Stem("unbedingt"), "unbedingt" );
	deepEqual( Stem("unbedingte"), "unbedingt" );
	deepEqual( Stem("unbedingten"), "unbedingt" );
	deepEqual( Stem("unbedingterweise"), "unbedingterweis" );
	deepEqual( Stem("unbefangen"), "unbefang" );
	deepEqual( Stem("unbefangene"), "unbefang" );
	deepEqual( Stem("unbefangenen"), "unbefang" );
	deepEqual( Stem("unbefangenes"), "unbefang" );
	deepEqual( Stem("unbefangenheit"), "unbefang" );
	deepEqual( Stem("unbegreiflich"), "unbegreif" );
	deepEqual( Stem("unbegreifliche"), "unbegreif" );
	deepEqual( Stem("unbegreiflichen"), "unbegreif" );
	deepEqual( Stem("unbegreiflicher"), "unbegreif" );
	deepEqual( Stem("unbegreifliches"), "unbegreif" );
	deepEqual( Stem("unbegrenzte"), "unbegrenzt" );
	deepEqual( Stem("unbegrenztes"), "unbegrenzt" );
	deepEqual( Stem("unbegründet"), "unbegrundet" );
	deepEqual( Stem("unbehagen"), "unbehag" );
	deepEqual( Stem("unbehaglich"), "unbehag" );
	deepEqual( Stem("unbehaglicher"), "unbehag" );
	deepEqual( Stem("unbehagliches"), "unbehag" );
	deepEqual( Stem("unbeholfen"), "unbeholf" );
	deepEqual( Stem("unbekannnten"), "unbekannnt" );
	deepEqual( Stem("unbekannt"), "unbekannt" );
	deepEqual( Stem("unbekannte"), "unbekannt" );
	deepEqual( Stem("unbekannten"), "unbekannt" );
	deepEqual( Stem("unbekannter"), "unbekannt" );
	deepEqual( Stem("unbekanntes"), "unbekannt" );
	deepEqual( Stem("unbekümmert"), "unbekummert" );
	deepEqual( Stem("unbelebt"), "unbelebt" );
	deepEqual( Stem("unbeliebt"), "unbeliebt" );
	deepEqual( Stem("unbemerkt"), "unbemerkt" );
	deepEqual( Stem("unbemittelte"), "unbemittelt" );
	deepEqual( Stem("unbemittelten"), "unbemittelt" );
	deepEqual( Stem("unbenutzt"), "unbenutzt" );
	deepEqual( Stem("unbenutzten"), "unbenutzt" );
	deepEqual( Stem("unbeobachtet"), "unbeobachtet" );
	deepEqual( Stem("unbequem"), "unbequ" );
	deepEqual( Stem("unbequemen"), "unbequem" );
	deepEqual( Stem("unbequemlichkeit"), "unbequem" );
	deepEqual( Stem("unberechenbare"), "unberechenbar" );
	deepEqual( Stem("unbeschädigt"), "unbeschadigt" );
	deepEqual( Stem("unbeschäftigt"), "unbeschaftigt" );
	deepEqual( Stem("unbeschäftigter"), "unbeschaftigt" );
	deepEqual( Stem("unbescheidener"), "unbescheid" );
	deepEqual( Stem("unbescheidenheit"), "unbescheid" );
	deepEqual( Stem("unbeschnitten"), "unbeschnitt" );
	deepEqual( Stem("unbeschnittene"), "unbeschnitt" );
	deepEqual( Stem("unbeschnittenen"), "unbeschnitt" );
	deepEqual( Stem("unbeschnittenes"), "unbeschnitt" );
	deepEqual( Stem("unbescholtenheit"), "unbescholt" );
	deepEqual( Stem("unbeschränkt"), "unbeschrankt" );
	deepEqual( Stem("unbeschränkte"), "unbeschrankt" );
	deepEqual( Stem("unbeschreiblich"), "unbeschreib" );
	deepEqual( Stem("unbeschreibliche"), "unbeschreib" );
	deepEqual( Stem("unbeschreiblicher"), "unbeschreib" );
	deepEqual( Stem("unbeschreibliches"), "unbeschreib" );
	deepEqual( Stem("unbeschwert"), "unbeschwert" );
	deepEqual( Stem("unbeseelt"), "unbeseelt" );
	deepEqual( Stem("unbeseeltes"), "unbeseelt" );
	deepEqual( Stem("unbesonnenen"), "unbesonn" );
	deepEqual( Stem("unbesonnenheit"), "unbesonn" );
	deepEqual( Stem("unbestimmbar"), "unbestimmbar" );
	deepEqual( Stem("unbestimmt"), "unbestimmt" );
	deepEqual( Stem("unbestimmte"), "unbestimmt" );
	deepEqual( Stem("unbestimmter"), "unbestimmt" );
	deepEqual( Stem("unbeteiligt"), "unbeteiligt" );
	deepEqual( Stem("unbewachten"), "unbewacht" );
	deepEqual( Stem("unbeweglich"), "unbeweg" );
	deepEqual( Stem("unbewohnte"), "unbewohnt" );
	deepEqual( Stem("unbewusst"), "unbewusst" );
	deepEqual( Stem("unbewusste"), "unbewusst" );
	deepEqual( Stem("unbewussten"), "unbewusst" );
	deepEqual( Stem("unbezähmbare"), "unbezahmbar" );
	deepEqual( Stem("unbezweifeltes"), "unbezweifelt" );
	deepEqual( Stem("unbezwinglicher"), "unbezwing" );
	deepEqual( Stem("unbiegsam"), "unbiegsam" );
	deepEqual( Stem("unbillige"), "unbill" );
	deepEqual( Stem("unbrauchbar"), "unbrauchbar" );
	deepEqual( Stem("unbrauchbare"), "unbrauchbar" );
	deepEqual( Stem("unbrauchbarkeit"), "unbrauchbar" );
	deepEqual( Stem("und"), "und" );
	deepEqual( Stem("undank"), "undank" );
	deepEqual( Stem("undenklichen"), "undenk" );
	deepEqual( Stem("undenklicher"), "undenk" );
	deepEqual( Stem("undeutlich"), "undeut" );
	deepEqual( Stem("unding"), "unding" );
	deepEqual( Stem("undurchsichtige"), "undurchsicht" );
	deepEqual( Stem("uneben"), "uneb" );
	deepEqual( Stem("unebene"), "uneb" );
	deepEqual( Stem("unebenheiten"), "uneb" );
	deepEqual( Stem("unecht"), "unecht" );
	deepEqual( Stem("unechte"), "unecht" );
	deepEqual( Stem("unechter"), "unecht" );
	deepEqual( Stem("unedel"), "unedel" );
	deepEqual( Stem("unedler"), "unedl" );
	deepEqual( Stem("unehre"), "unehr" );
	deepEqual( Stem("uneigennützig"), "uneigennutz" );
	deepEqual( Stem("uneigennützige"), "uneigennutz" );
	deepEqual( Stem("uneigennützigen"), "uneigennutz" );
	deepEqual( Stem("uneigennützigkeit"), "uneigennutz" );
	deepEqual( Stem("uneigennützigste"), "uneigennutz" );
	deepEqual( Stem("uneigentlich"), "uneigent" );
	deepEqual( Stem("uneingeschränktheit"), "uneingeschrankt" );
	deepEqual( Stem("uneinigkeit"), "unein" );
	deepEqual( Stem("unempfindlichen"), "unempfind" );
	deepEqual( Stem("unendlich"), "unend" );
	deepEqual( Stem("unendliche"), "unend" );
	deepEqual( Stem("unendlichen"), "unend" );
	deepEqual( Stem("unendlichkeit"), "unend" );
	deepEqual( Stem("unentbehrlich"), "unentbehr" );
	deepEqual( Stem("unentbehrlichen"), "unentbehr" );
	deepEqual( Stem("unentbehrliches"), "unentbehr" );
	deepEqual( Stem("unentschieden"), "unentschied" );
	deepEqual( Stem("unentschlossen"), "unentschloss" );
	deepEqual( Stem("unentwegten"), "unentwegt" );
	deepEqual( Stem("unerachtet"), "unerachtet" );
	deepEqual( Stem("unerbittlich"), "unerbitt" );
	deepEqual( Stem("unerbittliche"), "unerbitt" );
	deepEqual( Stem("unerbittlicher"), "unerbitt" );
	deepEqual( Stem("unerfahren"), "unerfahr" );
	deepEqual( Stem("unerfahrene"), "unerfahr" );
	deepEqual( Stem("unerfahrener"), "unerfahr" );
	deepEqual( Stem("unerfahrenheit"), "unerfahr" );
	deepEqual( Stem("unerfindlichen"), "unerfind" );
	deepEqual( Stem("unerfindlicher"), "unerfind" );
	deepEqual( Stem("unerforschliche"), "unerforsch" );
	deepEqual( Stem("unergründliche"), "unergrund" );
	deepEqual( Stem("unergründlichkeit"), "unergrund" );
	deepEqual( Stem("unerhört"), "unerhort" );
	deepEqual( Stem("unerhörte"), "unerhort" );
	deepEqual( Stem("unerhörten"), "unerhort" );
	deepEqual( Stem("unerhörter"), "unerhort" );
	deepEqual( Stem("unerhörtes"), "unerhort" );
	deepEqual( Stem("unerklärlichen"), "unerklar" );
	deepEqual( Stem("unerklärliches"), "unerklar" );
	deepEqual( Stem("unerläßlich"), "unerlass" );
	deepEqual( Stem("unerlaubt"), "unerlaubt" );
	deepEqual( Stem("unerlaubtes"), "unerlaubt" );
	deepEqual( Stem("unermesslich"), "unermess" );
	deepEqual( Stem("unermeßlich"), "unermess" );
	deepEqual( Stem("unermessliche"), "unermess" );
	deepEqual( Stem("unermeßliche"), "unermess" );
	deepEqual( Stem("unermüdlich"), "unermud" );
	deepEqual( Stem("unermüdlicher"), "unermud" );
	deepEqual( Stem("unerreichbar"), "unerreichbar" );
	deepEqual( Stem("unerreichbare"), "unerreichbar" );
	deepEqual( Stem("unerreichbaren"), "unerreichbar" );
	deepEqual( Stem("unersättlich"), "unersatt" );
	deepEqual( Stem("unerschöpfliche"), "unerschopf" );
	deepEqual( Stem("unerschöpflicher"), "unerschopf" );
	deepEqual( Stem("unerschrocken"), "unerschrock" );
	deepEqual( Stem("unerschrockene"), "unerschrock" );
	deepEqual( Stem("unerschrockenen"), "unerschrock" );
	deepEqual( Stem("unerschrockenheit"), "unerschrock" );
	deepEqual( Stem("unerschütterlich"), "unerschutt" );
	deepEqual( Stem("unerschütterliche"), "unerschutt" );
	deepEqual( Stem("unerschüttert"), "unerschuttert" );
	deepEqual( Stem("unersteiglicher"), "unersteig" );
	deepEqual( Stem("unerträglich"), "unertrag" );
	deepEqual( Stem("unerträgliche"), "unertrag" );
	deepEqual( Stem("unerwachsenen"), "unerwachs" );
	deepEqual( Stem("unerwartet"), "unerwartet" );
	deepEqual( Stem("unerwartete"), "unerwartet" );
	deepEqual( Stem("unerwarteter"), "unerwartet" );
	deepEqual( Stem("unerwarteterweise"), "unerwarteterweis" );
	deepEqual( Stem("unerwartetes"), "unerwartet" );
	deepEqual( Stem("unfähig"), "unfah" );
	deepEqual( Stem("unfähigkeit"), "unfah" );
	deepEqual( Stem("unfallopfern"), "unfallopf" );
	deepEqual( Stem("unfallverhütung"), "unfallverhut" );
	deepEqual( Stem("unfehlbar"), "unfehlbar" );
	deepEqual( Stem("unfehlbare"), "unfehlbar" );
	deepEqual( Stem("unfehlbares"), "unfehlbar" );
	deepEqual( Stem("unfern"), "unf" );
	deepEqual( Stem("unflat"), "unflat" );
	deepEqual( Stem("unfreiheit"), "unfreiheit" );
	deepEqual( Stem("unfreisinn"), "unfreisinn" );
	deepEqual( Stem("unfreundlich"), "unfreund" );
	deepEqual( Stem("unfreundlichen"), "unfreund" );
	deepEqual( Stem("unfreundlichkeit"), "unfreund" );
	deepEqual( Stem("unfriede"), "unfried" );
	deepEqual( Stem("unfruchtbar"), "unfruchtbar" );
	deepEqual( Stem("unfruchtbare"), "unfruchtbar" );
	deepEqual( Stem("unfug"), "unfug" );
	deepEqual( Stem("ungangbar"), "ungangbar" );
	deepEqual( Stem("ungeachtet"), "ungeachtet" );
	deepEqual( Stem("ungebahnten"), "ungebahnt" );
	deepEqual( Stem("ungebärdig"), "ungebard" );
	deepEqual( Stem("ungebildet"), "ungebildet" );
	deepEqual( Stem("ungebildeter"), "ungebildet" );
	deepEqual( Stem("ungebildetes"), "ungebildet" );
	deepEqual( Stem("ungebraucht"), "ungebraucht" );
	deepEqual( Stem("ungebrochen"), "ungebroch" );
	deepEqual( Stem("ungebrochener"), "ungebroch" );
	deepEqual( Stem("ungeduld"), "ungeduld" );
	deepEqual( Stem("ungeduldig"), "ungeduld" );
	deepEqual( Stem("ungeduldigen"), "ungeduld" );
	deepEqual( Stem("ungeduldigeren"), "ungeduld" );
	deepEqual( Stem("ungeeignete"), "ungeeignet" );
	deepEqual( Stem("ungefahr"), "ungefahr" );
	deepEqual( Stem("ungefähr"), "ungefahr" );
	deepEqual( Stem("ungefährdet"), "ungefahrdet" );
	deepEqual( Stem("ungefälliger"), "ungefall" );
	deepEqual( Stem("ungefärbten"), "ungefarbt" );
	deepEqual( Stem("ungefügen"), "ungefug" );
	deepEqual( Stem("ungefüger"), "ungefug" );
	deepEqual( Stem("ungefügigen"), "ungefug" );
	deepEqual( Stem("ungefunden"), "ungefund" );
	deepEqual( Stem("ungehalten"), "ungehalt" );
	deepEqual( Stem("ungeheuer"), "ungeheu" );
	deepEqual( Stem("ungeheure"), "ungeheur" );
	deepEqual( Stem("ungeheuren"), "ungeheur" );
	deepEqual( Stem("ungeheures"), "ungeheur" );
	deepEqual( Stem("ungehindert"), "ungehindert" );
	deepEqual( Stem("ungehörige"), "ungehor" );
	deepEqual( Stem("ungehöriger"), "ungehor" );
	deepEqual( Stem("ungehöriges"), "ungehor" );
	deepEqual( Stem("ungehorsam"), "ungehorsam" );
	deepEqual( Stem("ungeistig"), "ungeist" );
	deepEqual( Stem("ungeistigen"), "ungeist" );
	deepEqual( Stem("ungekämmten"), "ungekammt" );
	deepEqual( Stem("ungelegener"), "ungeleg" );
	deepEqual( Stem("ungelegten"), "ungelegt" );
	deepEqual( Stem("ungelehrt"), "ungelehrt" );
	deepEqual( Stem("ungelenk"), "ungelenk" );
	deepEqual( Stem("ungelesen"), "ungeles" );
	deepEqual( Stem("ungelinden"), "ungelind" );
	deepEqual( Stem("ungemein"), "ungemein" );
	deepEqual( Stem("ungemütlich"), "ungemut" );
	deepEqual( Stem("ungenossen"), "ungenoss" );
	deepEqual( Stem("ungenügende"), "ungenug" );
	deepEqual( Stem("ungerächet"), "ungerachet" );
	deepEqual( Stem("ungerechnet"), "ungerechnet" );
	deepEqual( Stem("ungerecht"), "ungerecht" );
	deepEqual( Stem("ungerechte"), "ungerecht" );
	deepEqual( Stem("ungerechten"), "ungerecht" );
	deepEqual( Stem("ungerechterweise"), "ungerechterweis" );
	deepEqual( Stem("ungerechtes"), "ungerecht" );
	deepEqual( Stem("ungerechtigkeit"), "ungerecht" );
	deepEqual( Stem("ungerechtigkeiten"), "ungerecht" );
	deepEqual( Stem("ungereimt"), "ungereimt" );
	deepEqual( Stem("ungern"), "ung" );
	deepEqual( Stem("ungesäuerten"), "ungesauert" );
	deepEqual( Stem("ungesäumt"), "ungesaumt" );
	deepEqual( Stem("ungeschehen"), "ungescheh" );
	deepEqual( Stem("ungeschicklichkeit"), "ungeschick" );
	deepEqual( Stem("ungeschickt"), "ungeschickt" );
	deepEqual( Stem("ungeschickte"), "ungeschickt" );
	deepEqual( Stem("ungeschickten"), "ungeschickt" );
	deepEqual( Stem("ungeschickterweise"), "ungeschickterweis" );
	deepEqual( Stem("ungeschicktes"), "ungeschickt" );
	deepEqual( Stem("ungeschoren"), "ungeschor" );
	deepEqual( Stem("ungeschorene"), "ungeschor" );
	deepEqual( Stem("ungesehen"), "ungeseh" );
	deepEqual( Stem("ungesehene"), "ungeseh" );
	deepEqual( Stem("ungesetzliche"), "ungesetz" );
	deepEqual( Stem("ungestört"), "ungestort" );
	deepEqual( Stem("ungestörter"), "ungestort" );
	deepEqual( Stem("ungestörtheit"), "ungestort" );
	deepEqual( Stem("ungestraften"), "ungestraft" );
	deepEqual( Stem("ungestüm"), "ungestum" );
	deepEqual( Stem("ungestüme"), "ungestum" );
	deepEqual( Stem("ungestümes"), "ungestum" );
	deepEqual( Stem("ungesungenen"), "unges" );
	deepEqual( Stem("ungeteilt"), "ungeteilt" );
	deepEqual( Stem("ungetrübte"), "ungetrubt" );
	deepEqual( Stem("ungetüm"), "ungetum" );
	deepEqual( Stem("ungeübten"), "ungeubt" );
	deepEqual( Stem("ungewiss"), "ungewiss" );
	deepEqual( Stem("ungewiß"), "ungewiss" );
	deepEqual( Stem("ungewisser"), "ungewiss" );
	deepEqual( Stem("ungewissheit"), "ungewiss" );
	deepEqual( Stem("ungewöhnlich"), "ungewohn" );
	deepEqual( Stem("ungewöhnliche"), "ungewohn" );
	deepEqual( Stem("ungewöhnlichem"), "ungewohn" );
	deepEqual( Stem("ungewöhnlichen"), "ungewohn" );
	deepEqual( Stem("ungewöhnliches"), "ungewohn" );
	deepEqual( Stem("ungewohnt"), "ungewohnt" );
	deepEqual( Stem("ungewohnte"), "ungewohnt" );
	deepEqual( Stem("ungewohnten"), "ungewohnt" );
	deepEqual( Stem("ungezählten"), "ungezahlt" );
	deepEqual( Stem("ungeziefer"), "ungezief" );
	deepEqual( Stem("ungeziefers"), "ungezief" );
	deepEqual( Stem("ungezweifelt"), "ungezweifelt" );
	deepEqual( Stem("ungezweifelten"), "ungezweifelt" );
	deepEqual( Stem("unglaube"), "unglaub" );
	deepEqual( Stem("unglauben"), "unglaub" );
	deepEqual( Stem("unglaubens"), "unglaub" );
	deepEqual( Stem("ungläubig"), "unglaub" );
	deepEqual( Stem("unglaublich"), "unglaub" );
	deepEqual( Stem("unglaubliche"), "unglaub" );
	deepEqual( Stem("unglaublichen"), "unglaub" );
	deepEqual( Stem("unglaubliches"), "unglaub" );
	deepEqual( Stem("unglaubwürdige"), "unglaubwurd" );
	deepEqual( Stem("ungleich"), "ungleich" );
	deepEqual( Stem("ungleichartig"), "ungleichart" );
	deepEqual( Stem("ungleichartigen"), "ungleichart" );
	deepEqual( Stem("ungleichartiger"), "ungleichart" );
	deepEqual( Stem("ungleichartigkeit"), "ungleichart" );
	deepEqual( Stem("ungleiche"), "ungleich" );
	deepEqual( Stem("ungleichen"), "ungleich" );
	deepEqual( Stem("ungleichheit"), "ungleich" );
	deepEqual( Stem("unglück"), "ungluck" );
	deepEqual( Stem("unglückes"), "ungluck" );
	deepEqual( Stem("unglücklich"), "ungluck" );
	deepEqual( Stem("unglückliche"), "ungluck" );
	deepEqual( Stem("unglücklichen"), "ungluck" );
	deepEqual( Stem("unglücklicher"), "ungluck" );
	deepEqual( Stem("unglücklicherweise"), "unglucklicherweis" );
	deepEqual( Stem("unglücks"), "ungluck" );
	deepEqual( Stem("unglückseligen"), "unglucksel" );
	deepEqual( Stem("unglücksfällen"), "unglucksfall" );
	deepEqual( Stem("unglücksfelde"), "unglucksfeld" );
	deepEqual( Stem("unglücksstätte"), "unglucksstatt" );
	deepEqual( Stem("ungünstig"), "ungunst" );
	deepEqual( Stem("ungünstigen"), "ungunst" );
	deepEqual( Stem("ungut"), "ungut" );
	deepEqual( Stem("unguten"), "ungut" );
	deepEqual( Stem("ungwohnte"), "ungwohnt" );
	deepEqual( Stem("unheil"), "unheil" );
	deepEqual( Stem("unheilbar"), "unheilbar" );
	deepEqual( Stem("unheilig"), "unheil" );
	deepEqual( Stem("unheilige"), "unheil" );
	deepEqual( Stem("unheiligem"), "unheil" );
	deepEqual( Stem("unheiligen"), "unheil" );
	deepEqual( Stem("unheiliges"), "unheil" );
	deepEqual( Stem("unheilvolle"), "unheilvoll" );
	deepEqual( Stem("unheimlich"), "unheim" );
	deepEqual( Stem("unheimliche"), "unheim" );
	deepEqual( Stem("unheimlichen"), "unheim" );
	deepEqual( Stem("unheimliches"), "unheim" );
	deepEqual( Stem("unheimlichsten"), "unheim" );
	deepEqual( Stem("unhöflich"), "unhof" );
	deepEqual( Stem("unhöflichen"), "unhof" );
	deepEqual( Stem("unhöfliches"), "unhof" );
	deepEqual( Stem("unhöflichkeit"), "unhof" );
	deepEqual( Stem("unhold"), "unhold" );
	deepEqual( Stem("unholdes"), "unhold" );
	deepEqual( Stem("unhörbar"), "unhorbar" );
	deepEqual( Stem("unifomierter"), "unifomiert" );
	deepEqual( Stem("uniform"), "uniform" );
	deepEqual( Stem("uniformen"), "uniform" );
	deepEqual( Stem("uniformierten"), "uniformiert" );
	deepEqual( Stem("uninteressiert"), "uninteressiert" );
	deepEqual( Stem("union"), "union" );
	deepEqual( Stem("uniondie"), "uniondi" );
	deepEqual( Stem("universalis"), "universalis" );
	deepEqual( Stem("universaliter"), "universalit" );
	deepEqual( Stem("universalsprache"), "universalsprach" );
	deepEqual( Stem("universelle"), "universell" );
	deepEqual( Stem("universellen"), "universell" );
	deepEqual( Stem("universeller"), "universell" );
	deepEqual( Stem("universelles"), "universell" );
	deepEqual( Stem("universität"), "universitat" );
	deepEqual( Stem("universum"), "universum" );
	deepEqual( Stem("unjewöhnliche"), "unjewohn" );
	deepEqual( Stem("unken"), "unk" );
	deepEqual( Stem("unkenntnis"), "unkenntnis" );
	deepEqual( Stem("unkindlichkeit"), "unkind" );
	deepEqual( Stem("unklar"), "unklar" );
	deepEqual( Stem("unklug"), "unklug" );
	deepEqual( Stem("unkluge"), "unklug" );
	deepEqual( Stem("unkonventionell"), "unkonventionell" );
	deepEqual( Stem("unkonventionellen"), "unkonventionell" );
	deepEqual( Stem("unkosten"), "unkost" );
	deepEqual( Stem("unkraut"), "unkraut" );
	deepEqual( Stem("unkräutern"), "unkraut" );
	deepEqual( Stem("unkriegerisches"), "unkrieger" );
	deepEqual( Stem("unkultivierte"), "unkultiviert" );
	deepEqual( Stem("unkunde"), "unkund" );
	deepEqual( Stem("unlauterkeit"), "unlauter" );
	deepEqual( Stem("unleugbar"), "unleugbar" );
	deepEqual( Stem("unleugbare"), "unleugbar" );
	deepEqual( Stem("unliebenswürdigen"), "unliebenswurd" );
	deepEqual( Stem("unliebliche"), "unlieb" );
	deepEqual( Stem("unliebsamen"), "unliebsam" );
	deepEqual( Stem("unlust"), "unlust" );
	deepEqual( Stem("unlustigen"), "unlust" );
	deepEqual( Stem("unmännlich"), "unmann" );
	deepEqual( Stem("unmässig"), "unmass" );
	deepEqual( Stem("unmässige"), "unmass" );
	deepEqual( Stem("unmenschen"), "unmensch" );
	deepEqual( Stem("unmenschlich"), "unmensch" );
	deepEqual( Stem("unmenschliche"), "unmensch" );
	deepEqual( Stem("unmenschlichste"), "unmensch" );
	deepEqual( Stem("unmerklich"), "unmerk" );
	deepEqual( Stem("unmittelbar"), "unmittelbar" );
	deepEqual( Stem("unmittelbare"), "unmittelbar" );
	deepEqual( Stem("unmittelbaren"), "unmittelbar" );
	deepEqual( Stem("unmittelbarer"), "unmittelbar" );
	deepEqual( Stem("unmittelbares"), "unmittelbar" );
	deepEqual( Stem("unmittelbarste"), "unmittelbarst" );
	deepEqual( Stem("unmöglich"), "unmog" );
	deepEqual( Stem("unmögliche"), "unmog" );
	deepEqual( Stem("unmöglicher"), "unmog" );
	deepEqual( Stem("unmögliches"), "unmog" );
	deepEqual( Stem("unmöglichkeit"), "unmog" );
	deepEqual( Stem("unmut"), "unmut" );
	deepEqual( Stem("unmutig"), "unmut" );
	deepEqual( Stem("unmutigen"), "unmut" );
	deepEqual( Stem("unmutiges"), "unmut" );
	deepEqual( Stem("unnachahmlich"), "unnachahm" );
	deepEqual( Stem("unnachlasslich"), "unnachlass" );
	deepEqual( Stem("unnachlasslichen"), "unnachlass" );
	deepEqual( Stem("unnachsichtlich"), "unnachsicht" );
	deepEqual( Stem("unnachsichtlichen"), "unnachsicht" );
	deepEqual( Stem("unnahbar"), "unnahbar" );
	deepEqual( Stem("unnatürlich"), "unnatur" );
	deepEqual( Stem("unnötig"), "unnot" );
	deepEqual( Stem("unnötige"), "unnot" );
	deepEqual( Stem("unnötigerweise"), "unnotigerweis" );
	deepEqual( Stem("unnütz"), "unnutz" );
	deepEqual( Stem("unnütze"), "unnutz" );
	deepEqual( Stem("unnützen"), "unnutz" );
	deepEqual( Stem("unnützes"), "unnutz" );
	deepEqual( Stem("unordentlich"), "unordent" );
	deepEqual( Stem("unordentliche"), "unordent" );
	deepEqual( Stem("unordnung"), "unordn" );
	deepEqual( Stem("unorthodoxe"), "unorthodox" );
	deepEqual( Stem("unparteiischen"), "unpartei" );
	deepEqual( Stem("unparteiischer"), "unpartei" );
	deepEqual( Stem("unparteilichkeit"), "unpartei" );
	deepEqual( Stem("unrasiert"), "unrasiert" );
	deepEqual( Stem("unrecht"), "unrecht" );
	deepEqual( Stem("unrechte"), "unrecht" );
	deepEqual( Stem("unrechten"), "unrecht" );
	deepEqual( Stem("unrechtes"), "unrecht" );
	deepEqual( Stem("unrechtleider"), "unrechtleid" );
	deepEqual( Stem("unrechtliche"), "unrecht" );
	deepEqual( Stem("unrechtliches"), "unrecht" );
	deepEqual( Stem("unrechtmässig"), "unrechtmass" );
	deepEqual( Stem("unrechtmässige"), "unrechtmass" );
	deepEqual( Stem("unrechts"), "unrecht" );
	deepEqual( Stem("unredliche"), "unred" );
	deepEqual( Stem("unredlichen"), "unred" );
	deepEqual( Stem("unredlichkeit"), "unred" );
	deepEqual( Stem("unregelmässigkeit"), "unregelmass" );
	deepEqual( Stem("unregelmässigkeiten"), "unregelmass" );
	deepEqual( Stem("unreif"), "unreif" );
	deepEqual( Stem("unreifen"), "unreif" );
	deepEqual( Stem("unrein"), "unrein" );
	deepEqual( Stem("unreine"), "unrein" );
	deepEqual( Stem("unreinem"), "unrein" );
	deepEqual( Stem("unreinen"), "unrein" );
	deepEqual( Stem("unreiner"), "unrein" );
	deepEqual( Stem("unreines"), "unrein" );
	deepEqual( Stem("unreinigkeit"), "unrein" );
	deepEqual( Stem("unrichtig"), "unricht" );
	deepEqual( Stem("unruh"), "unruh" );
	deepEqual( Stem("unruhe"), "unruh" );
	deepEqual( Stem("unruhig"), "unruh" );
	deepEqual( Stem("unruhige"), "unruh" );
	deepEqual( Stem("unruhigen"), "unruh" );
	deepEqual( Stem("uns"), "uns" );
	deepEqual( Stem("unsäglich"), "unsag" );
	deepEqual( Stem("unsägliche"), "unsag" );
	deepEqual( Stem("unsäglicher"), "unsag" );
	deepEqual( Stem("unsaubere"), "unsaub" );
	deepEqual( Stem("unsauberen"), "unsaub" );
	deepEqual( Stem("unsauberer"), "unsaub" );
	deepEqual( Stem("unsauberes"), "unsaub" );
	deepEqual( Stem("unsauberkeiten"), "unsauber" );
	deepEqual( Stem("unsaubern"), "unsaub" );
	deepEqual( Stem("unschädlich"), "unschad" );
	deepEqual( Stem("unschädlichen"), "unschad" );
	deepEqual( Stem("unscheinbare"), "unscheinbar" );
	deepEqual( Stem("unscheinbaren"), "unscheinbar" );
	deepEqual( Stem("unscheinbares"), "unscheinbar" );
	deepEqual( Stem("unscheinbarste"), "unscheinbarst" );
	deepEqual( Stem("unschicklich"), "unschick" );
	deepEqual( Stem("unschicklichkeiten"), "unschick" );
	deepEqual( Stem("unschlüssig"), "unschluss" );
	deepEqual( Stem("unschön"), "unschon" );
	deepEqual( Stem("unschöne"), "unschon" );
	deepEqual( Stem("unschönen"), "unschon" );
	deepEqual( Stem("unschuld"), "unschuld" );
	deepEqual( Stem("unschuldig"), "unschuld" );
	deepEqual( Stem("unschuldige"), "unschuld" );
	deepEqual( Stem("unschuldigen"), "unschuld" );
	deepEqual( Stem("unschuldiger"), "unschuld" );
	deepEqual( Stem("unschuldigeren"), "unschuld" );
	deepEqual( Stem("unschuldiges"), "unschuld" );
	deepEqual( Stem("unselige"), "unsel" );
	deepEqual( Stem("unseligkeit"), "unsel" );
	deepEqual( Stem("unser"), "uns" );
	deepEqual( Stem("unsere"), "uns" );
	deepEqual( Stem("unsereinen"), "unserein" );
	deepEqual( Stem("unsereiner"), "unserein" );
	deepEqual( Stem("unserem"), "uns" );
	deepEqual( Stem("unseren"), "uns" );
	deepEqual( Stem("unserer"), "uns" );
	deepEqual( Stem("unseres"), "uns" );
	deepEqual( Stem("unseresgleichen"), "unseresgleich" );
	deepEqual( Stem("unserm"), "unserm" );
	deepEqual( Stem("unsern"), "uns" );
	deepEqual( Stem("unsers"), "uns" );
	deepEqual( Stem("unsicher"), "unsich" );
	deepEqual( Stem("unsicherer"), "unsich" );
	deepEqual( Stem("unsicherheit"), "unsich" );
	deepEqual( Stem("unsichern"), "unsich" );
	deepEqual( Stem("unsichtbar"), "unsichtbar" );
	deepEqual( Stem("unsichtbaren"), "unsichtbar" );
	deepEqual( Stem("unsichtbarer"), "unsichtbar" );
	deepEqual( Stem("unsinn"), "unsinn" );
	deepEqual( Stem("unsinnig"), "unsinn" );
	deepEqual( Stem("unsinnige"), "unsinn" );
	deepEqual( Stem("unsinnigen"), "unsinn" );
	deepEqual( Stem("unsinniger"), "unsinn" );
	deepEqual( Stem("unsinniges"), "unsinn" );
	deepEqual( Stem("unsinnigkeit"), "unsinn" );
	deepEqual( Stem("unsinnigkeiten"), "unsinn" );
	deepEqual( Stem("unsinnigsten"), "unsinn" );
	deepEqual( Stem("unsittlich"), "unsitt" );
	deepEqual( Stem("unsittliche"), "unsitt" );
	deepEqual( Stem("unsittlicher"), "unsitt" );
	deepEqual( Stem("unsittlichkeit"), "unsitt" );
	deepEqual( Stem("unsre"), "unsr" );
	deepEqual( Stem("unsrer"), "unsr" );
	deepEqual( Stem("unsres"), "unsr" );
	deepEqual( Stem("unsrige"), "unsrig" );
	deepEqual( Stem("unstäte"), "unstat" );
	deepEqual( Stem("unsterblich"), "unsterb" );
	deepEqual( Stem("unsterbliche"), "unsterb" );
	deepEqual( Stem("unsterblichkeit"), "unsterb" );
	deepEqual( Stem("unstern"), "unst" );
	deepEqual( Stem("unsterns"), "unstern" );
	deepEqual( Stem("unstet"), "unstet" );
	deepEqual( Stem("unstetes"), "unstet" );
	deepEqual( Stem("unsträflich"), "unstraf" );
	deepEqual( Stem("unstreitig"), "unstreit" );
	deepEqual( Stem("unsympathisch"), "unsympath" );
	deepEqual( Stem("untat"), "untat" );
	deepEqual( Stem("untätig"), "untat" );
	deepEqual( Stem("untauglich"), "untaug" );
	deepEqual( Stem("untaugliche"), "untaug" );
	deepEqual( Stem("unteilbar"), "unteilbar" );
	deepEqual( Stem("unteilbare"), "unteilbar" );
	deepEqual( Stem("unteilbares"), "unteilbar" );
	deepEqual( Stem("unten"), "unt" );
	deepEqual( Stem("unter"), "unt" );
	deepEqual( Stem("unterabteilung"), "unterabteil" );
	deepEqual( Stem("unterarten"), "unterart" );
	deepEqual( Stem("unterbezahlt"), "unterbezahlt" );
	deepEqual( Stem("unterbrach"), "unterbrach" );
	deepEqual( Stem("unterbrachen"), "unterbrach" );
	deepEqual( Stem("unterbreche"), "unterbrech" );
	deepEqual( Stem("unterbrechend"), "unterbrech" );
	deepEqual( Stem("unterbreiten"), "unterbreit" );
	deepEqual( Stem("unterbringen"), "unterbring" );
	deepEqual( Stem("unterbrochen"), "unterbroch" );
	deepEqual( Stem("unterbrochenen"), "unterbroch" );
	deepEqual( Stem("unterdessen"), "unterdess" );
	deepEqual( Stem("unterdrücken"), "unterdruck" );
	deepEqual( Stem("unterdrückend"), "unterdruck" );
	deepEqual( Stem("unterdrückt"), "unterdruckt" );
	deepEqual( Stem("unterdrückte"), "unterdruckt" );
	deepEqual( Stem("unterdrückten"), "unterdruckt" );
	deepEqual( Stem("unterdrückter"), "unterdruckt" );
	deepEqual( Stem("unterdrücktes"), "unterdruckt" );
	deepEqual( Stem("unterdrückung"), "unterdruck" );
	deepEqual( Stem("unterdrückungen"), "unterdruck" );
	deepEqual( Stem("untere"), "unt" );
	deepEqual( Stem("untereinander"), "untereinand" );
	deepEqual( Stem("unterem"), "unt" );
	deepEqual( Stem("unteren"), "unt" );
	deepEqual( Stem("unteres"), "unt" );
	deepEqual( Stem("unterfand"), "unterfand" );
	deepEqual( Stem("unterfangen"), "unterfang" );
	deepEqual( Stem("untergang"), "untergang" );
	deepEqual( Stem("untergange"), "untergang" );
	deepEqual( Stem("unterganges"), "untergang" );
	deepEqual( Stem("untergangs"), "untergang" );
	deepEqual( Stem("untergebene"), "untergeb" );
	deepEqual( Stem("untergebenen"), "untergeb" );
	deepEqual( Stem("untergebenheit"), "untergeb" );
	deepEqual( Stem("untergebracht"), "untergebracht" );
	deepEqual( Stem("untergegangen"), "untergegang" );
	deepEqual( Stem("untergehen"), "untergeh" );
	deepEqual( Stem("untergehende"), "untergeh" );
	deepEqual( Stem("untergeht"), "untergeht" );
	deepEqual( Stem("untergekommen"), "untergekomm" );
	deepEqual( Stem("untergelegt"), "untergelegt" );
	deepEqual( Stem("untergeordnet"), "untergeordnet" );
	deepEqual( Stem("untergeordnete"), "untergeordnet" );
	deepEqual( Stem("untergeordneten"), "untergeordnet" );
	deepEqual( Stem("untergeordneter"), "untergeordnet" );
	deepEqual( Stem("untergeordnetere"), "untergeordnet" );
	deepEqual( Stem("untergeschoben"), "untergeschob" );
	deepEqual( Stem("unterging"), "unterging" );
	deepEqual( Stem("unterginge"), "unterging" );
	deepEqual( Stem("untergingen"), "unterging" );
	deepEqual( Stem("unterhalb"), "unterhalb" );
	deepEqual( Stem("unterhält"), "unterhalt" );
	deepEqual( Stem("unterhalten"), "unterhalt" );
	deepEqual( Stem("unterhaltung"), "unterhalt" );
	deepEqual( Stem("unterhaltungen"), "unterhalt" );
	deepEqual( Stem("unterhaltungsabteilung"), "unterhaltungsabteil" );
	deepEqual( Stem("unterhaltungsminute"), "unterhaltungsminut" );
	deepEqual( Stem("unterhaltungsspieles"), "unterhaltungsspiel" );
	deepEqual( Stem("unterhändlern"), "unterhandl" );
	deepEqual( Stem("unterhandlungen"), "unterhandl" );
	deepEqual( Stem("unterhielt"), "unterhielt" );
	deepEqual( Stem("unterhielten"), "unterhielt" );
	deepEqual( Stem("unterichtsstunden"), "unterichtsstund" );
	deepEqual( Stem("unterjochen"), "unterjoch" );
	deepEqual( Stem("unterjocht"), "unterjocht" );
	deepEqual( Stem("unterjochung"), "unterjoch" );
	deepEqual( Stem("unterjochungsbestreben"), "unterjochungsbestreb" );
	deepEqual( Stem("unterkiefer"), "unterkief" );
	deepEqual( Stem("unterköchen"), "unterkoch" );
	deepEqual( Stem("unterkommen"), "unterkomm" );
	deepEqual( Stem("unterkommst"), "unterkomm" );
	deepEqual( Stem("unterlage"), "unterlag" );
	deepEqual( Stem("unterlagen"), "unterlag" );
	deepEqual( Stem("unterlass"), "unterlass" );
	deepEqual( Stem("unterlaß"), "unterlass" );
	deepEqual( Stem("unterlassen"), "unterlass" );
	deepEqual( Stem("unterlassest"), "unterlass" );
	deepEqual( Stem("unterlaufen"), "unterlauf" );
	deepEqual( Stem("unterlegen"), "unterleg" );
	deepEqual( Stem("unterlegt"), "unterlegt" );
	deepEqual( Stem("unterlegten"), "unterlegt" );
	deepEqual( Stem("unterlehrer"), "unterlehr" );
	deepEqual( Stem("unterliege"), "unterlieg" );
	deepEqual( Stem("unterliegen"), "unterlieg" );
	deepEqual( Stem("unterliegt"), "unterliegt" );
	deepEqual( Stem("unterliessen"), "unterliess" );
	deepEqual( Stem("unterlippe"), "unterlipp" );
	deepEqual( Stem("unterm"), "unterm" );
	deepEqual( Stem("unterminierte"), "unterminiert" );
	deepEqual( Stem("unternahm"), "unternahm" );
	deepEqual( Stem("unternähme"), "unternahm" );
	deepEqual( Stem("unternahmen"), "unternahm" );
	deepEqual( Stem("unternehmen"), "unternehm" );
	deepEqual( Stem("unternehmend"), "unternehm" );
	deepEqual( Stem("unternehmender"), "unternehm" );
	deepEqual( Stem("unternehmer"), "unternehm" );
	deepEqual( Stem("unternehmung"), "unternehm" );
	deepEqual( Stem("unternehmungen"), "unternehm" );
	deepEqual( Stem("unternehmungsgeist"), "unternehmungsgeist" );
	deepEqual( Stem("unternehmungslust"), "unternehmungslust" );
	deepEqual( Stem("unternehmungslustigen"), "unternehmungslust" );
	deepEqual( Stem("unternommen"), "unternomm" );
	deepEqual( Stem("unteroffizier"), "unteroffizi" );
	deepEqual( Stem("unteroffizieren"), "unteroffizi" );
	deepEqual( Stem("unteroffiziers"), "unteroffizi" );
	deepEqual( Stem("unterordnung"), "unterordn" );
	deepEqual( Stem("unterpfand"), "unterpfand" );
	deepEqual( Stem("unterredung"), "unterred" );
	deepEqual( Stem("unterricht"), "unterricht" );
	deepEqual( Stem("unterrichten"), "unterricht" );
	deepEqual( Stem("unterrichtet"), "unterrichtet" );
	deepEqual( Stem("unterröcke"), "unterrock" );
	deepEqual( Stem("untersatze"), "untersatz" );
	deepEqual( Stem("untersberges"), "untersberg" );
	deepEqual( Stem("unterscheiden"), "unterscheid" );
	deepEqual( Stem("unterscheidend"), "unterscheid" );
	deepEqual( Stem("unterscheidet"), "unterscheidet" );
	deepEqual( Stem("unterscheidung"), "unterscheid" );
	deepEqual( Stem("unterscheidungsgrund"), "unterscheidungsgrund" );
	deepEqual( Stem("unterscheidungszeichen"), "unterscheidungszeich" );
	deepEqual( Stem("unterschiebt"), "unterschiebt" );
	deepEqual( Stem("unterschied"), "unterschied" );
	deepEqual( Stem("unterschiede"), "unterschied" );
	deepEqual( Stem("unterschieden"), "unterschied" );
	deepEqual( Stem("unterschiedene"), "unterschied" );
	deepEqual( Stem("unterschiedenem"), "unterschied" );
	deepEqual( Stem("unterschiedenen"), "unterschied" );
	deepEqual( Stem("unterschiedenes"), "unterschied" );
	deepEqual( Stem("unterschiedes"), "unterschied" );
	deepEqual( Stem("unterschiedlichdie"), "unterschiedlichdi" );
	deepEqual( Stem("unterschiedliche"), "unterschied" );
	deepEqual( Stem("unterschiedlicher"), "unterschied" );
	deepEqual( Stem("unterschiedlichkeiten"), "unterschied" );
	deepEqual( Stem("unterschleif"), "unterschleif" );
	deepEqual( Stem("unterschleife"), "unterschleif" );
	deepEqual( Stem("unterschreiben"), "unterschreib" );
	deepEqual( Stem("unterschrift"), "unterschrift" );
	deepEqual( Stem("unterst"), "unterst" );
	deepEqual( Stem("unterstand"), "unterstand" );
	deepEqual( Stem("unterste"), "unterst" );
	deepEqual( Stem("unterstein"), "unterstein" );
	deepEqual( Stem("unterstellen"), "unterstell" );
	deepEqual( Stem("unterstellt"), "unterstellt" );
	deepEqual( Stem("untersten"), "unterst" );
	deepEqual( Stem("unterstes"), "unterst" );
	deepEqual( Stem("unterstützen"), "unterstutz" );
	deepEqual( Stem("unterstützt"), "unterstutzt" );
	deepEqual( Stem("unterstützte"), "unterstutzt" );
	deepEqual( Stem("unterstützung"), "unterstutz" );
	deepEqual( Stem("untersuchen"), "untersuch" );
	deepEqual( Stem("untersuchend"), "untersuch" );
	deepEqual( Stem("untersucht"), "untersucht" );
	deepEqual( Stem("untersuchte"), "untersucht" );
	deepEqual( Stem("untersuchten"), "untersucht" );
	deepEqual( Stem("untersuchung"), "untersuch" );
	deepEqual( Stem("untersuchungen"), "untersuch" );
	deepEqual( Stem("untersuchungsansätzen"), "untersuchungsansatz" );
	deepEqual( Stem("untersuchungskommission"), "untersuchungskommission" );
	deepEqual( Stem("untersuchungsraum"), "untersuchungsraum" );
	deepEqual( Stem("untersuchungsrichter"), "untersuchungsricht" );
	deepEqual( Stem("untersuchungsrichtern"), "untersuchungsricht" );
	deepEqual( Stem("untersuchungsrichters"), "untersuchungsricht" );
	deepEqual( Stem("untersuchungstag"), "untersuchungstag" );
	deepEqual( Stem("untersuchungszimmer"), "untersuchungszimm" );
	deepEqual( Stem("untersuchungszimmers"), "untersuchungszimm" );
	deepEqual( Stem("untertan"), "untertan" );
	deepEqual( Stem("untertanen"), "untertan" );
	deepEqual( Stem("untertänigkeit"), "untertan" );
	deepEqual( Stem("untertaucht"), "untertaucht" );
	deepEqual( Stem("untertrat"), "untertrat" );
	deepEqual( Stem("untertreten"), "untertret" );
	deepEqual( Stem("unterwarf"), "unterwarf" );
	deepEqual( Stem("unterwarfen"), "unterwarf" );
	deepEqual( Stem("unterweges"), "unterweg" );
	deepEqual( Stem("unterwegs"), "unterweg" );
	deepEqual( Stem("unterweisen"), "unterweis" );
	deepEqual( Stem("unterweisend"), "unterweis" );
	deepEqual( Stem("unterweisung"), "unterweis" );
	deepEqual( Stem("unterwelt"), "unterwelt" );
	deepEqual( Stem("unterwerfen"), "unterwerf" );
	deepEqual( Stem("unterwerfung"), "unterwerf" );
	deepEqual( Stem("unterwies"), "unterwi" );
	deepEqual( Stem("unterwiesen"), "unterwies" );
	deepEqual( Stem("unterworfen"), "unterworf" );
	deepEqual( Stem("unterwürfigkeit"), "unterwurf" );
	deepEqual( Stem("unterzeichnet"), "unterzeichnet" );
	deepEqual( Stem("unterzeichnete"), "unterzeichnet" );
	deepEqual( Stem("unterziehe"), "unterzieh" );
	deepEqual( Stem("unterziehen"), "unterzieh" );
	deepEqual( Stem("unterzog"), "unterzog" );
	deepEqual( Stem("unterzogen"), "unterzog" );
	deepEqual( Stem("unterzubringen"), "unterzubring" );
	deepEqual( Stem("unterzukommen"), "unterzukomm" );
	deepEqual( Stem("untiefe"), "untief" );
	deepEqual( Stem("untier"), "unti" );
	deepEqual( Stem("untrennbar"), "untrennbar" );
	deepEqual( Stem("untreu"), "untreu" );
	deepEqual( Stem("untreue"), "untreu" );
	deepEqual( Stem("untreuen"), "untreu" );
	deepEqual( Stem("untröstlich"), "untrost" );
	deepEqual( Stem("unübertrefflich"), "unubertreff" );
	deepEqual( Stem("unüberwindliche"), "unuberwind" );
	deepEqual( Stem("unum"), "unum" );
	deepEqual( Stem("unumgänglich"), "unumgang" );
	deepEqual( Stem("ununterbrochen"), "ununterbroch" );
	deepEqual( Stem("ununterbrochene"), "ununterbroch" );
	deepEqual( Stem("ununterbrochener"), "ununterbroch" );
	deepEqual( Stem("unverabredet"), "unverabredet" );
	deepEqual( Stem("unveränderlich"), "unverand" );
	deepEqual( Stem("unveränderliche"), "unverand" );
	deepEqual( Stem("unveränderlichem"), "unverand" );
	deepEqual( Stem("unveränderlichen"), "unverand" );
	deepEqual( Stem("unverändert"), "unverandert" );
	deepEqual( Stem("unverbrüchlichen"), "unverbruch" );
	deepEqual( Stem("unverdächtige"), "unverdacht" );
	deepEqual( Stem("unverdaulichkeit"), "unverdau" );
	deepEqual( Stem("unverdorbener"), "unverdorb" );
	deepEqual( Stem("unverdrossen"), "unverdross" );
	deepEqual( Stem("unvereinbar"), "unvereinbar" );
	deepEqual( Stem("unverfänglich"), "unverfang" );
	deepEqual( Stem("unvergleichlich"), "unvergleich" );
	deepEqual( Stem("unvergoldete"), "unvergoldet" );
	deepEqual( Stem("unverhehlt"), "unverhehlt" );
	deepEqual( Stem("unverhehlter"), "unverhehlt" );
	deepEqual( Stem("unverheiratet"), "unverheiratet" );
	deepEqual( Stem("unverhofft"), "unverhofft" );
	deepEqual( Stem("unverhoffte"), "unverhofft" );
	deepEqual( Stem("unverhoffter"), "unverhofft" );
	deepEqual( Stem("unverhofftes"), "unverhofft" );
	deepEqual( Stem("unverkennbar"), "unverkennbar" );
	deepEqual( Stem("unverletzlich"), "unverletz" );
	deepEqual( Stem("unverletzliche"), "unverletz" );
	deepEqual( Stem("unverletzliches"), "unverletz" );
	deepEqual( Stem("unverletzlichkeit"), "unverletz" );
	deepEqual( Stem("unvermeidlich"), "unvermeid" );
	deepEqual( Stem("unvermeidliche"), "unvermeid" );
	deepEqual( Stem("unvermeidlichen"), "unvermeid" );
	deepEqual( Stem("unvermeidlicher"), "unvermeid" );
	deepEqual( Stem("unvermengt"), "unvermengt" );
	deepEqual( Stem("unvermerkt"), "unvermerkt" );
	deepEqual( Stem("unvermögend"), "unvermog" );
	deepEqual( Stem("unvermögens"), "unvermog" );
	deepEqual( Stem("unvermutet"), "unvermutet" );
	deepEqual( Stem("unvernünftig"), "unvernunft" );
	deepEqual( Stem("unvernünftige"), "unvernunft" );
	deepEqual( Stem("unvernünftigen"), "unvernunft" );
	deepEqual( Stem("unvernünftiger"), "unvernunft" );
	deepEqual( Stem("unverputzte"), "unverputzt" );
	deepEqual( Stem("unverrückbaren"), "unverruckbar" );
	deepEqual( Stem("unverschämt"), "unverschamt" );
	deepEqual( Stem("unverschämte"), "unverschamt" );
	deepEqual( Stem("unverschämtheit"), "unverschamt" );
	deepEqual( Stem("unverschlossen"), "unverschloss" );
	deepEqual( Stem("unversehens"), "unverseh" );
	deepEqual( Stem("unversehrt"), "unversehrt" );
	deepEqual( Stem("unversehrter"), "unversehrt" );
	deepEqual( Stem("unversiegbare"), "unversiegbar" );
	deepEqual( Stem("unversöhnlich"), "unversohn" );
	deepEqual( Stem("unversöhnlicher"), "unversohn" );
	deepEqual( Stem("unverstande"), "unverstand" );
	deepEqual( Stem("unverständigen"), "unverstand" );
	deepEqual( Stem("unverständlich"), "unverstand" );
	deepEqual( Stem("unverständliche"), "unverstand" );
	deepEqual( Stem("unverständlichen"), "unverstand" );
	deepEqual( Stem("unvertilgbaren"), "unvertilgbar" );
	deepEqual( Stem("unverwahrt"), "unverwahrt" );
	deepEqual( Stem("unverwandt"), "unverwandt" );
	deepEqual( Stem("unverweilt"), "unverweilt" );
	deepEqual( Stem("unverwüstliche"), "unverwust" );
	deepEqual( Stem("unverwüstlichen"), "unverwust" );
	deepEqual( Stem("unverzagt"), "unverzagt" );
	deepEqual( Stem("unverzeihliches"), "unverzeih" );
	deepEqual( Stem("unverzeihlichsten"), "unverzeih" );
	deepEqual( Stem("unverzichtbar"), "unverzichtbar" );
	deepEqual( Stem("unverzichtbare"), "unverzichtbar" );
	deepEqual( Stem("unverzüglich"), "unverzug" );
	deepEqual( Stem("unvollkommene"), "unvollkomm" );
	deepEqual( Stem("unvollkommenen"), "unvollkomm" );
	deepEqual( Stem("unvordenklichen"), "unvordenk" );
	deepEqual( Stem("unvorhergesehene"), "unvorhergeseh" );
	deepEqual( Stem("unvorsichtig"), "unvorsicht" );
	deepEqual( Stem("unvorsichtigkeit"), "unvorsicht" );
	deepEqual( Stem("unwahr"), "unwahr" );
	deepEqual( Stem("unwahrscheinlich"), "unwahrschein" );
	deepEqual( Stem("unwahrscheinliche"), "unwahrschein" );
	deepEqual( Stem("unwahrscheinlichen"), "unwahrschein" );
	deepEqual( Stem("unwandelbar"), "unwandelbar" );
	deepEqual( Stem("unwandelbaren"), "unwandelbar" );
	deepEqual( Stem("unwandelbarkeit"), "unwandelbar" );
	deepEqual( Stem("unweidmännischen"), "unweidmann" );
	deepEqual( Stem("unweise"), "unweis" );
	deepEqual( Stem("unweiser"), "unweis" );
	deepEqual( Stem("unweit"), "unweit" );
	deepEqual( Stem("unwert"), "unwert" );
	deepEqual( Stem("unwerter"), "unwert" );
	deepEqual( Stem("unwesen"), "unwes" );
	deepEqual( Stem("unwetter"), "unwett" );
	deepEqual( Stem("unwichtig"), "unwicht" );
	deepEqual( Stem("unwichtigen"), "unwicht" );
	deepEqual( Stem("unwiderleglich"), "unwiderleg" );
	deepEqual( Stem("unwiderruflich"), "unwiderruf" );
	deepEqual( Stem("unwiderrufliches"), "unwiderruf" );
	deepEqual( Stem("unwidersprechlich"), "unwidersprech" );
	deepEqual( Stem("unwiderstehlich"), "unwidersteh" );
	deepEqual( Stem("unwiderstehliche"), "unwidersteh" );
	deepEqual( Stem("unwiderstehlichen"), "unwidersteh" );
	deepEqual( Stem("unwiederbringlicher"), "unwiederbring" );
	deepEqual( Stem("unwillen"), "unwill" );
	deepEqual( Stem("unwillig"), "unwill" );
	deepEqual( Stem("unwillkommen"), "unwillkomm" );
	deepEqual( Stem("unwillkürlich"), "unwillkur" );
	deepEqual( Stem("unwillkürliche"), "unwillkur" );
	deepEqual( Stem("unwirksam"), "unwirksam" );
	deepEqual( Stem("unwirsch"), "unwirsch" );
	deepEqual( Stem("unwissend"), "unwiss" );
	deepEqual( Stem("unwissende"), "unwiss" );
	deepEqual( Stem("unwissenden"), "unwiss" );
	deepEqual( Stem("unwissenheit"), "unwiss" );
	deepEqual( Stem("unwohl"), "unwohl" );
	deepEqual( Stem("unwohlsein"), "unwohlsein" );
	deepEqual( Stem("unwohnlichen"), "unwohn" );
	deepEqual( Stem("unwort"), "unwort" );
	deepEqual( Stem("unwürdig"), "unwurd" );
	deepEqual( Stem("unwürdige"), "unwurd" );
	deepEqual( Stem("unwürdigen"), "unwurd" );
	deepEqual( Stem("unwürdiger"), "unwurd" );
	deepEqual( Stem("unzählig"), "unzahl" );
	deepEqual( Stem("unzählige"), "unzahl" );
	deepEqual( Stem("unzähligem"), "unzahl" );
	deepEqual( Stem("unzähligemal"), "unzahligemal" );
	deepEqual( Stem("unzähligen"), "unzahl" );
	deepEqual( Stem("unzähliger"), "unzahl" );
	deepEqual( Stem("unzähligere"), "unzahl" );
	deepEqual( Stem("unzähliges"), "unzahl" );
	deepEqual( Stem("unzeit"), "unzeit" );
	deepEqual( Stem("unzersplittertes"), "unzersplittert" );
	deepEqual( Stem("unzertrennlich"), "unzertrenn" );
	deepEqual( Stem("unzertrennliche"), "unzertrenn" );
	deepEqual( Stem("unziemlich"), "unziem" );
	deepEqual( Stem("unziemliche"), "unziem" );
	deepEqual( Stem("unziemliches"), "unziem" );
	deepEqual( Stem("unziemlichsten"), "unziem" );
	deepEqual( Stem("unzucht"), "unzucht" );
	deepEqual( Stem("unzufrieden"), "unzufried" );
	deepEqual( Stem("unzufriedenheit"), "unzufried" );
	deepEqual( Stem("unzugänglich"), "unzugang" );
	deepEqual( Stem("unzugängliche"), "unzugang" );
	deepEqual( Stem("unzukömmlichkeit"), "unzukomm" );
	deepEqual( Stem("unzukömmlichkeiten"), "unzukomm" );
	deepEqual( Stem("unzulänglichkeit"), "unzulang" );
	deepEqual( Stem("unzulässig"), "unzulass" );
	deepEqual( Stem("unzureichend"), "unzureich" );
	deepEqual( Stem("unzusammenhängend"), "unzusammenhang" );
	deepEqual( Stem("unzusammenhängendes"), "unzusammenhang" );
	deepEqual( Stem("unzweckmässigkeit"), "unzweckmass" );
	deepEqual( Stem("unzweifelhaft"), "unzweifelhaft" );
	deepEqual( Stem("unzweifelhafte"), "unzweifelhaft" );
	deepEqual( Stem("unzweifelhafteste"), "unzweifelhaft" );
	deepEqual( Stem("uphas"), "uphas" );
	deepEqual( Stem("üppig"), "uppig" );
	deepEqual( Stem("üppige"), "uppig" );
	deepEqual( Stem("üppigen"), "uppig" );
	deepEqual( Stem("ur"), "ur" );
	deepEqual( Stem("urahn"), "urahn" );
	deepEqual( Stem("uralte"), "uralt" );
	deepEqual( Stem("uralten"), "uralt" );
	deepEqual( Stem("uralter"), "uralt" );
	deepEqual( Stem("urbeginn"), "urbeginn" );
	deepEqual( Stem("urbild"), "urbild" );
	deepEqual( Stem("urbilder"), "urbild" );
	deepEqual( Stem("urbildliche"), "urbild" );
	deepEqual( Stem("urenkel"), "urenkel" );
	deepEqual( Stem("urfeld"), "urfeld" );
	deepEqual( Stem("urfelder"), "urfeld" );
	deepEqual( Stem("urgrossvater"), "urgrossvat" );
	deepEqual( Stem("urgroßvater"), "urgrossvat" );
	deepEqual( Stem("urgrossvaters"), "urgrossvat" );
	deepEqual( Stem("urgroßvaters"), "urgrossvat" );
	deepEqual( Stem("urgrunde"), "urgrund" );
	deepEqual( Stem("urgrundes"), "urgrund" );
	deepEqual( Stem("urheber"), "urheb" );
	deepEqual( Stem("urhebers"), "urheb" );
	deepEqual( Stem("urkirche"), "urkirch" );
	deepEqual( Stem("urlaub"), "urlaub" );
	deepEqual( Stem("urmensch"), "urmensch" );
	deepEqual( Stem("urmenschen"), "urmensch" );
	deepEqual( Stem("urne"), "urn" );
	deepEqual( Stem("urplötzlich"), "urplotz" );
	deepEqual( Stem("ursache"), "ursach" );
	deepEqual( Stem("ursachen"), "ursach" );
	deepEqual( Stem("ursächlich"), "ursach" );
	deepEqual( Stem("ursächlichen"), "ursach" );
	deepEqual( Stem("ursprung"), "ursprung" );
	deepEqual( Stem("ursprunge"), "ursprung" );
	deepEqual( Stem("ursprunges"), "ursprung" );
	deepEqual( Stem("ursprünglich"), "ursprung" );
	deepEqual( Stem("ursprüngliche"), "ursprung" );
	deepEqual( Stem("ursprünglichen"), "ursprung" );
	deepEqual( Stem("ursprüngliches"), "ursprung" );
	deepEqual( Stem("ursprungs"), "ursprung" );
	deepEqual( Stem("ursprungsort"), "ursprungsort" );
	deepEqual( Stem("urteil"), "urteil" );
	deepEqual( Stem("urteile"), "urteil" );
	deepEqual( Stem("urteilen"), "urteil" );
	deepEqual( Stem("urteilenden"), "urteil" );
	deepEqual( Stem("urteils"), "urteil" );
	deepEqual( Stem("urteilskraft"), "urteilskraft" );
	deepEqual( Stem("urteilt"), "urteilt" );
	deepEqual( Stem("ururgrosspapa"), "ururgrosspapa" );
	deepEqual( Stem("ururgrossvater"), "ururgrossvat" );
	deepEqual( Stem("ururgroßvater"), "ururgrossvat" );
	deepEqual( Stem("urvater"), "urvat" );
	deepEqual( Stem("urväter"), "urvat" );
	deepEqual( Stem("urwald"), "urwald" );
	deepEqual( Stem("urwesen"), "urwes" );
	deepEqual( Stem("urwesens"), "urwes" );
	deepEqual( Stem("urzeit"), "urzeit" );
	deepEqual( Stem("usa"), "usa" );
	deepEqual( Stem("usf"), "usf" );
	deepEqual( Stem("ussiel"), "ussiel" );
	deepEqual( Stem("ussiels"), "ussiel" );
	deepEqual( Stem("usurpator"), "usurpator" );
	deepEqual( Stem("usw"), "usw" );
	deepEqual( Stem("utopien"), "utopi" );
	deepEqual( Stem("uxor"), "uxor" );
	deepEqual( Stem("uxores"), "uxor" );
	deepEqual( Stem("v"), "v" );
	deepEqual( Stem("vagantur"), "vagantur" );
	deepEqual( Stem("vagari"), "vagari" );
	deepEqual( Stem("vagus"), "vagus" );
	deepEqual( Stem("vakant"), "vakant" );
	deepEqual( Stem("vallotton"), "vallotton" );
	deepEqual( Stem("vamp"), "vamp" );
	deepEqual( Stem("van"), "van" );
	deepEqual( Stem("varia"), "varia" );
	deepEqual( Stem("variationen"), "variation" );
	deepEqual( Stem("vasallentreue"), "vasallentreu" );
	deepEqual( Stem("vaschwör"), "vaschwor" );
	deepEqual( Stem("vastatio"), "vastatio" );
	deepEqual( Stem("vastationes"), "vastation" );
	deepEqual( Stem("vater"), "vat" );
	deepEqual( Stem("väter"), "vat" );
	deepEqual( Stem("vaterhaus"), "vaterhaus" );
	deepEqual( Stem("vaterhause"), "vaterhaus" );
	deepEqual( Stem("vaterhäusern"), "vaterhaus" );
	deepEqual( Stem("vaterland"), "vaterland" );
	deepEqual( Stem("vaterlande"), "vaterland" );
	deepEqual( Stem("vaterlandes"), "vaterland" );
	deepEqual( Stem("väterliche"), "vat" );
	deepEqual( Stem("väterlichen"), "vat" );
	deepEqual( Stem("väterliches"), "vat" );
	deepEqual( Stem("vatermörder"), "vatermord" );
	deepEqual( Stem("vätern"), "vat" );
	deepEqual( Stem("vaters"), "vat" );
	deepEqual( Stem("vaterunser"), "vateruns" );
	deepEqual( Stem("vatet"), "vatet" );
	deepEqual( Stem("vatikan"), "vatikan" );
	deepEqual( Stem("vaudevilletheatern"), "vaudevilletheat" );
	deepEqual( Stem("veb"), "veb" );
	deepEqual( Stem("vehikel"), "vehikel" );
	deepEqual( Stem("veigerl"), "veigerl" );
	deepEqual( Stem("veilchen"), "veilch" );
	deepEqual( Stem("veilchenblaue"), "veilchenblau" );
	deepEqual( Stem("veilchenburg"), "veilchenburg" );
	deepEqual( Stem("veilchenkoppe"), "veilchenkopp" );
	deepEqual( Stem("veilchenzeit"), "veilchenzeit" );
	deepEqual( Stem("veit"), "veit" );
	deepEqual( Stem("vemünftiger"), "vemunft" );
	deepEqual( Stem("ven"), "ven" );
	deepEqual( Stem("venedig"), "vened" );
	deepEqual( Stem("venezianischen"), "venezian" );
	deepEqual( Stem("ver"), "ver" );
	deepEqual( Stem("vera"), "vera" );
	deepEqual( Stem("verab"), "verab" );
	deepEqual( Stem("verabredet"), "verabredet" );
	deepEqual( Stem("verabredeten"), "verabredet" );
	deepEqual( Stem("verabredung"), "verabred" );
	deepEqual( Stem("verabreichten"), "verabreicht" );
	deepEqual( Stem("verabscheuen"), "verabscheu" );
	deepEqual( Stem("verabscheuungsvermögens"), "verabscheuungsvermog" );
	deepEqual( Stem("verabschiedet"), "verabschiedet" );
	deepEqual( Stem("verabschiedete"), "verabschiedet" );
	deepEqual( Stem("verabschiedeten"), "verabschiedet" );
	deepEqual( Stem("verachte"), "veracht" );
	deepEqual( Stem("verachten"), "veracht" );
	deepEqual( Stem("verachtet"), "verachtet" );
	deepEqual( Stem("verachtete"), "verachtet" );
	deepEqual( Stem("verachteten"), "verachtet" );
	deepEqual( Stem("verächtlich"), "veracht" );
	deepEqual( Stem("verächtlichen"), "veracht" );
	deepEqual( Stem("verachtung"), "veracht" );
	deepEqual( Stem("verähnlicht"), "verahnlicht" );
	deepEqual( Stem("verähnlichten"), "verahnlicht" );
	deepEqual( Stem("veraltet"), "veraltet" );
	deepEqual( Stem("verändere"), "verand" );
	deepEqual( Stem("veränderlichkeit"), "verander" );
	deepEqual( Stem("verändern"), "verand" );
	deepEqual( Stem("verändert"), "verandert" );
	deepEqual( Stem("veränderte"), "verandert" );
	deepEqual( Stem("veränderten"), "verandert" );
	deepEqual( Stem("verändertes"), "verandert" );
	deepEqual( Stem("veränderung"), "verander" );
	deepEqual( Stem("veränderungen"), "verander" );
	deepEqual( Stem("veränderungsleistung"), "veranderungsleist" );
	deepEqual( Stem("verängstigt"), "verangstigt" );
	deepEqual( Stem("veranlassen"), "veranlass" );
	deepEqual( Stem("veranlasst"), "veranlasst" );
	deepEqual( Stem("veranlaßt"), "veranlasst" );
	deepEqual( Stem("veranlasste"), "veranlasst" );
	deepEqual( Stem("veranlasster"), "veranlasst" );
	deepEqual( Stem("veranlassung"), "veranlass" );
	deepEqual( Stem("veranschaulichung"), "veranschaulich" );
	deepEqual( Stem("veranstalten"), "veranstalt" );
	deepEqual( Stem("veranstaltet"), "veranstaltet" );
	deepEqual( Stem("veranstaltete"), "veranstaltet" );
	deepEqual( Stem("veranstalteten"), "veranstaltet" );
	deepEqual( Stem("veranstaltung"), "veranstalt" );
	deepEqual( Stem("veranstaltungen"), "veranstalt" );
	deepEqual( Stem("verantworten"), "verantwort" );
	deepEqual( Stem("verantwortete"), "verantwortet" );
	deepEqual( Stem("verantwortlich"), "verantwort" );
	deepEqual( Stem("verantwortlichen"), "verantwort" );
	deepEqual( Stem("verantwortung"), "verantwort" );
	deepEqual( Stem("verarbeitet"), "verarbeitet" );
	deepEqual( Stem("verarmten"), "verarmt" );
	deepEqual( Stem("verarmung"), "verarm" );
	deepEqual( Stem("verbal"), "verbal" );
	deepEqual( Stem("verbale"), "verbal" );
	deepEqual( Stem("verband"), "verband" );
	deepEqual( Stem("verbanden"), "verband" );
	deepEqual( Stem("verbandes"), "verband" );
	deepEqual( Stem("verbannt"), "verbannt" );
	deepEqual( Stem("verbannung"), "verbann" );
	deepEqual( Stem("verbarg"), "verbarg" );
	deepEqual( Stem("verbargen"), "verbarg" );
	deepEqual( Stem("verbat"), "verbat" );
	deepEqual( Stem("verbereitung"), "verbereit" );
	deepEqual( Stem("verbergen"), "verberg" );
	deepEqual( Stem("verberget"), "verberget" );
	deepEqual( Stem("verbesserlichkeit"), "verbesser" );
	deepEqual( Stem("verbessern"), "verbess" );
	deepEqual( Stem("verbesserte"), "verbessert" );
	deepEqual( Stem("verbesserungen"), "verbesser" );
	deepEqual( Stem("verbesserungsbedürftigkeit"), "verbesserungsbedurft" );
	deepEqual( Stem("verbesserungsvorschläge"), "verbesserungsvorschlag" );
	deepEqual( Stem("verbeugend"), "verbeug" );
	deepEqual( Stem("verbeugte"), "verbeugt" );
	deepEqual( Stem("verbeugten"), "verbeugt" );
	deepEqual( Stem("verbeugung"), "verbeug" );
	deepEqual( Stem("verbeugungen"), "verbeug" );
	deepEqual( Stem("verbeulten"), "verbeult" );
	deepEqual( Stem("verbiegt"), "verbiegt" );
	deepEqual( Stem("verbiete"), "verbiet" );
	deepEqual( Stem("verbieten"), "verbiet" );
	deepEqual( Stem("verbinde"), "verbind" );
	deepEqual( Stem("verbinden"), "verbind" );
	deepEqual( Stem("verbindet"), "verbindet" );
	deepEqual( Stem("verbindlichkeit"), "verbind" );
	deepEqual( Stem("verbindlichkeiten"), "verbind" );
	deepEqual( Stem("verbindung"), "verbind" );
	deepEqual( Stem("verbindungen"), "verbind" );
	deepEqual( Stem("verbindungsmittel"), "verbindungsmittel" );
	deepEqual( Stem("verbirg"), "verbirg" );
	deepEqual( Stem("verbirgst"), "verbirg" );
	deepEqual( Stem("verbirgt"), "verbirgt" );
	deepEqual( Stem("verbis"), "verbis" );
	deepEqual( Stem("verbissen"), "verbiss" );
	deepEqual( Stem("verbissenheit"), "verbiss" );
	deepEqual( Stem("verbittert"), "verbittert" );
	deepEqual( Stem("verbitterte"), "verbittert" );
	deepEqual( Stem("verbitterten"), "verbittert" );
	deepEqual( Stem("verbittertwerden"), "verbittertwerd" );
	deepEqual( Stem("verbleib"), "verbleib" );
	deepEqual( Stem("verbleibe"), "verbleib" );
	deepEqual( Stem("verbleiben"), "verbleib" );
	deepEqual( Stem("verbleibt"), "verbleibt" );
	deepEqual( Stem("verblenden"), "verblend" );
	deepEqual( Stem("verblendet"), "verblendet" );
	deepEqual( Stem("verblendeten"), "verblendet" );
	deepEqual( Stem("verblendung"), "verblend" );
	deepEqual( Stem("verblichen"), "verblich" );
	deepEqual( Stem("verblichenen"), "verblich" );
	deepEqual( Stem("verbliebe"), "verblieb" );
	deepEqual( Stem("verblieben"), "verblieb" );
	deepEqual( Stem("verbliebenen"), "verblieb" );
	deepEqual( Stem("verblüffen"), "verbluff" );
	deepEqual( Stem("verblüfft"), "verblufft" );
	deepEqual( Stem("verblüfften"), "verblufft" );
	deepEqual( Stem("verblüfftesten"), "verblufft" );
	deepEqual( Stem("verblüffung"), "verbluff" );
	deepEqual( Stem("verblüht"), "verbluht" );
	deepEqual( Stem("verblümt"), "verblumt" );
	deepEqual( Stem("verblümtes"), "verblumt" );
	deepEqual( Stem("verborgen"), "verborg" );
	deepEqual( Stem("verborgene"), "verborg" );
	deepEqual( Stem("verborgenen"), "verborg" );
	deepEqual( Stem("verborgener"), "verborg" );
	deepEqual( Stem("verborgenes"), "verborg" );
	deepEqual( Stem("verborgenheit"), "verborg" );
	deepEqual( Stem("verborgenheiten"), "verborg" );
	deepEqual( Stem("verborgenwerden"), "verborgenwerd" );
	deepEqual( Stem("verbot"), "verbot" );
	deepEqual( Stem("verboten"), "verbot" );
	deepEqual( Stem("verbracht"), "verbracht" );
	deepEqual( Stem("verbrachte"), "verbracht" );
	deepEqual( Stem("verbrachtem"), "verbracht" );
	deepEqual( Stem("verbrachten"), "verbracht" );
	deepEqual( Stem("verbrämt"), "verbramt" );
	deepEqual( Stem("verbrannt"), "verbrannt" );
	deepEqual( Stem("verbrannte"), "verbrannt" );
	deepEqual( Stem("verbrannten"), "verbrannt" );
	deepEqual( Stem("verbraucht"), "verbraucht" );
	deepEqual( Stem("verbrechen"), "verbrech" );
	deepEqual( Stem("verbrecherischen"), "verbrecher" );
	deepEqual( Stem("verbreiten"), "verbreit" );
	deepEqual( Stem("verbreitet"), "verbreitet" );
	deepEqual( Stem("verbreitete"), "verbreitet" );
	deepEqual( Stem("verbrennen"), "verbrenn" );
	deepEqual( Stem("verbrennt"), "verbrennt" );
	deepEqual( Stem("verbrennung"), "verbrenn" );
	deepEqual( Stem("verbringe"), "verbring" );
	deepEqual( Stem("verbringen"), "verbring" );
	deepEqual( Stem("verbringt"), "verbringt" );
	deepEqual( Stem("verbrüderung"), "verbruder" );
	deepEqual( Stem("verbrühen"), "verbruh" );
	deepEqual( Stem("verbuhltes"), "verbuhlt" );
	deepEqual( Stem("verbum"), "verbum" );
	deepEqual( Stem("verbunden"), "verbund" );
	deepEqual( Stem("verbundene"), "verbund" );
	deepEqual( Stem("verbundenen"), "verbund" );
	deepEqual( Stem("verbundenes"), "verbund" );
	deepEqual( Stem("verdacht"), "verdacht" );
	deepEqual( Stem("verdachte"), "verdacht" );
	deepEqual( Stem("verdächtig"), "verdacht" );
	deepEqual( Stem("verdächtiges"), "verdacht" );
	deepEqual( Stem("verdächtigt"), "verdachtigt" );
	deepEqual( Stem("verdamme"), "verdamm" );
	deepEqual( Stem("verdammen"), "verdamm" );
	deepEqual( Stem("verdammlich"), "verdamm" );
	deepEqual( Stem("verdammnis"), "verdammnis" );
	deepEqual( Stem("verdammt"), "verdammt" );
	deepEqual( Stem("verdammte"), "verdammt" );
	deepEqual( Stem("verdammtem"), "verdammt" );
	deepEqual( Stem("verdammten"), "verdammt" );
	deepEqual( Stem("verdammungen"), "verdamm" );
	deepEqual( Stem("verdampften"), "verdampft" );
	deepEqual( Stem("verdanke"), "verdank" );
	deepEqual( Stem("verdanken"), "verdank" );
	deepEqual( Stem("verdankt"), "verdankt" );
	deepEqual( Stem("verdarb"), "verdarb" );
	deepEqual( Stem("verdarben"), "verdarb" );
	deepEqual( Stem("verdauen"), "verdau" );
	deepEqual( Stem("verdeckt"), "verdeckt" );
	deepEqual( Stem("verdeckte"), "verdeckt" );
	deepEqual( Stem("verdenken"), "verdenk" );
	deepEqual( Stem("verderbe"), "verderb" );
	deepEqual( Stem("verderben"), "verderb" );
	deepEqual( Stem("verderbende"), "verderb" );
	deepEqual( Stem("verderbenden"), "verderb" );
	deepEqual( Stem("verderber"), "verderb" );
	deepEqual( Stem("verderblich"), "verderb" );
	deepEqual( Stem("verderbliche"), "verderb" );
	deepEqual( Stem("verderblichen"), "verderb" );
	deepEqual( Stem("verderbnis"), "verderbnis" );
	deepEqual( Stem("verderbt"), "verderbt" );
	deepEqual( Stem("verderbtheit"), "verderbt" );
	deepEqual( Stem("verdichtet"), "verdichtet" );
	deepEqual( Stem("verdienen"), "verdi" );
	deepEqual( Stem("verdienst"), "verdien" );
	deepEqual( Stem("verdienste"), "verdien" );
	deepEqual( Stem("verdienstlich"), "verdienst" );
	deepEqual( Stem("verdienstlichen"), "verdienst" );
	deepEqual( Stem("verdienstlicher"), "verdienst" );
	deepEqual( Stem("verdient"), "verdient" );
	deepEqual( Stem("verdiente"), "verdient" );
	deepEqual( Stem("verdientermassen"), "verdientermass" );
	deepEqual( Stem("verdientermaßen"), "verdientermass" );
	deepEqual( Stem("verdingen"), "verding" );
	deepEqual( Stem("verdirbt"), "verdirbt" );
	deepEqual( Stem("verdoppelt"), "verdoppelt" );
	deepEqual( Stem("verdoppeltem"), "verdoppelt" );
	deepEqual( Stem("verdoppelten"), "verdoppelt" );
	deepEqual( Stem("verdorben"), "verdorb" );
	deepEqual( Stem("verdorbene"), "verdorb" );
	deepEqual( Stem("verdorbenen"), "verdorb" );
	deepEqual( Stem("verdorbenerweise"), "verdorbenerweis" );
	deepEqual( Stem("verdorren"), "verdorr" );
	deepEqual( Stem("verdorrt"), "verdorrt" );
	deepEqual( Stem("verdorrte"), "verdorrt" );
	deepEqual( Stem("verdorrter"), "verdorrt" );
	deepEqual( Stem("verdrängen"), "verdrang" );
	deepEqual( Stem("verdrängt"), "verdrangt" );
	deepEqual( Stem("verdrehen"), "verdreh" );
	deepEqual( Stem("verdrehend"), "verdreh" );
	deepEqual( Stem("verdreht"), "verdreht" );
	deepEqual( Stem("verdrehte"), "verdreht" );
	deepEqual( Stem("verdrehten"), "verdreht" );
	deepEqual( Stem("verdrehter"), "verdreht" );
	deepEqual( Stem("verdrehtheit"), "verdreht" );
	deepEqual( Stem("verdreifachen"), "verdreifach" );
	deepEqual( Stem("verdriesslich"), "verdriess" );
	deepEqual( Stem("verdrießlich"), "verdriess" );
	deepEqual( Stem("verdrossen"), "verdross" );
	deepEqual( Stem("verdruss"), "verdruss" );
	deepEqual( Stem("verdruß"), "verdruss" );
	deepEqual( Stem("verdunkeln"), "verdunkeln" );
	deepEqual( Stem("verdunkelt"), "verdunkelt" );
	deepEqual( Stem("verdunkelte"), "verdunkelt" );
	deepEqual( Stem("verdunkelten"), "verdunkelt" );
	deepEqual( Stem("verdunkelung"), "verdunkel" );
	deepEqual( Stem("verdunklung"), "verdunkl" );
	deepEqual( Stem("verdursten"), "verdurst" );
	deepEqual( Stem("verdutzt"), "verdutzt" );
	deepEqual( Stem("verdutzte"), "verdutzt" );
	deepEqual( Stem("verdutztes"), "verdutzt" );
	deepEqual( Stem("veredelt"), "veredelt" );
	deepEqual( Stem("verehelichen"), "verehe" );
	deepEqual( Stem("verehelicht"), "verehelicht" );
	deepEqual( Stem("verehren"), "verehr" );
	deepEqual( Stem("verehrer"), "verehr" );
	deepEqual( Stem("verehrt"), "verehrt" );
	deepEqual( Stem("verehrte"), "verehrt" );
	deepEqual( Stem("verehrten"), "verehrt" );
	deepEqual( Stem("verehrung"), "verehr" );
	deepEqual( Stem("verehrungswürdig"), "verehrungswurd" );
	deepEqual( Stem("verein"), "verein" );
	deepEqual( Stem("vereinbarung"), "vereinbar" );
	deepEqual( Stem("vereine"), "verein" );
	deepEqual( Stem("vereinicht"), "vereinicht" );
	deepEqual( Stem("vereinigen"), "verein" );
	deepEqual( Stem("vereinigende"), "verein" );
	deepEqual( Stem("vereinigt"), "vereinigt" );
	deepEqual( Stem("vereinigte"), "vereinigt" );
	deepEqual( Stem("vereinigung"), "verein" );
	deepEqual( Stem("vereins"), "verein" );
	deepEqual( Stem("vereinsversammlung"), "vereinsversamml" );
	deepEqual( Stem("vereint"), "vereint" );
	deepEqual( Stem("vereinte"), "vereint" );
	deepEqual( Stem("vereinten"), "vereint" );
	deepEqual( Stem("vereinzelte"), "vereinzelt" );
	deepEqual( Stem("vereinzelten"), "vereinzelt" );
	deepEqual( Stem("vereinzeltes"), "vereinzelt" );
	deepEqual( Stem("vereiteln"), "vereiteln" );
	deepEqual( Stem("vereitelt"), "vereitelt" );
	deepEqual( Stem("verena"), "verena" );
	deepEqual( Stem("verendet"), "verendet" );
	deepEqual( Stem("vererbt"), "vererbt" );
	deepEqual( Stem("vererbten"), "vererbt" );
	deepEqual( Stem("vererbung"), "vererb" );
	deepEqual( Stem("verfahre"), "verfahr" );
	deepEqual( Stem("verfahren"), "verfahr" );
	deepEqual( Stem("verfahrens"), "verfahr" );
	deepEqual( Stem("verfahrensweisen"), "verfahrensweis" );
	deepEqual( Stem("verfährt"), "verfahrt" );
	deepEqual( Stem("verfall"), "verfall" );
	deepEqual( Stem("verfalle"), "verfall" );
	deepEqual( Stem("verfallen"), "verfall" );
	deepEqual( Stem("verfällt"), "verfallt" );
	deepEqual( Stem("verfälschen"), "verfalsch" );
	deepEqual( Stem("verfälscher"), "verfalsch" );
	deepEqual( Stem("verfälscht"), "verfalscht" );
	deepEqual( Stem("verfälschte"), "verfalscht" );
	deepEqual( Stem("verfälschtem"), "verfalscht" );
	deepEqual( Stem("verfälschten"), "verfalscht" );
	deepEqual( Stem("verfälschtes"), "verfalscht" );
	deepEqual( Stem("verfälschung"), "verfalsch" );
	deepEqual( Stem("verfälschungen"), "verfalsch" );
	deepEqual( Stem("verfängliche"), "verfang" );
	deepEqual( Stem("verfänglichen"), "verfang" );
	deepEqual( Stem("verfasser"), "verfass" );
	deepEqual( Stem("verfasst"), "verfasst" );
	deepEqual( Stem("verfaßt"), "verfasst" );
	deepEqual( Stem("verfassten"), "verfasst" );
	deepEqual( Stem("verfassung"), "verfass" );
	deepEqual( Stem("verfassungs"), "verfass" );
	deepEqual( Stem("verfassungsänderung"), "verfassungsander" );
	deepEqual( Stem("verfassungsrevisoren"), "verfassungsrevisor" );
	deepEqual( Stem("verfaulen"), "verfaul" );
	deepEqual( Stem("verfeature"), "verfeatur" );
	deepEqual( Stem("verfeaturt"), "verfeaturt" );
	deepEqual( Stem("verfechten"), "verfecht" );
	deepEqual( Stem("verfehlt"), "verfehlt" );
	deepEqual( Stem("verfehlter"), "verfehlt" );
	deepEqual( Stem("verfeinden"), "verfeind" );
	deepEqual( Stem("verfeindet"), "verfeindet" );
	deepEqual( Stem("verfeindeten"), "verfeindet" );
	deepEqual( Stem("verfertigen"), "verfert" );
	deepEqual( Stem("verfertigt"), "verfertigt" );
	deepEqual( Stem("verfertigte"), "verfertigt" );
	deepEqual( Stem("verfertigten"), "verfertigt" );
	deepEqual( Stem("verfertigung"), "verfert" );
	deepEqual( Stem("verfiel"), "verfiel" );
	deepEqual( Stem("verfielen"), "verfiel" );
	deepEqual( Stem("verfilztes"), "verfilzt" );
	deepEqual( Stem("verfing"), "verfing" );
	deepEqual( Stem("verfinstern"), "verfin" );
	deepEqual( Stem("verfinstert"), "verfinstert" );
	deepEqual( Stem("verfinsterte"), "verfinstert" );
	deepEqual( Stem("verfinsterten"), "verfinstert" );
	deepEqual( Stem("verfinstertwerden"), "verfinstertwerd" );
	deepEqual( Stem("verflacht"), "verflacht" );
	deepEqual( Stem("verfliegt"), "verfliegt" );
	deepEqual( Stem("verflochtenen"), "verflocht" );
	deepEqual( Stem("verflogen"), "verflog" );
	deepEqual( Stem("verfloss"), "verfloss" );
	deepEqual( Stem("verflossen"), "verfloss" );
	deepEqual( Stem("verfluche"), "verfluch" );
	deepEqual( Stem("verfluchen"), "verfluch" );
	deepEqual( Stem("verfluchend"), "verfluch" );
	deepEqual( Stem("verflucht"), "verflucht" );
	deepEqual( Stem("verfluchte"), "verflucht" );
	deepEqual( Stem("verfluchten"), "verflucht" );
	deepEqual( Stem("verflüchtigt"), "verfluchtigt" );
	deepEqual( Stem("verfolgen"), "verfolg" );
	deepEqual( Stem("verfolger"), "verfolg" );
	deepEqual( Stem("verfolgern"), "verfolg" );
	deepEqual( Stem("verfolgt"), "verfolgt" );
	deepEqual( Stem("verfolgte"), "verfolgt" );
	deepEqual( Stem("verfolgten"), "verfolgt" );
	deepEqual( Stem("verfolgung"), "verfolg" );
	deepEqual( Stem("verfremdung"), "verfremd" );
	deepEqual( Stem("verfriere"), "verfri" );
	deepEqual( Stem("verfügen"), "verfug" );
	deepEqual( Stem("verfügt"), "verfugt" );
	deepEqual( Stem("verfügte"), "verfugt" );
	deepEqual( Stem("verfügung"), "verfug" );
	deepEqual( Stem("verfügungsrecht"), "verfugungsrecht" );
	deepEqual( Stem("verfuhr"), "verfuhr" );
	deepEqual( Stem("verfuhren"), "verfuhr" );
	deepEqual( Stem("verführen"), "verfuhr" );
	deepEqual( Stem("verführer"), "verfuhr" );
	deepEqual( Stem("verführerische"), "verfuhrer" );
	deepEqual( Stem("verführerischen"), "verfuhrer" );
	deepEqual( Stem("verführt"), "verfuhrt" );
	deepEqual( Stem("verführte"), "verfuhrt" );
	deepEqual( Stem("vergabte"), "vergabt" );
	deepEqual( Stem("vergangen"), "vergang" );
	deepEqual( Stem("vergangene"), "vergang" );
	deepEqual( Stem("vergangenen"), "vergang" );
	deepEqual( Stem("vergangenheit"), "vergang" );
	deepEqual( Stem("vergänglich"), "vergang" );
	deepEqual( Stem("vergänglichkeit"), "vergang" );
	deepEqual( Stem("vergass"), "vergass" );
	deepEqual( Stem("vergaß"), "vergass" );
	deepEqual( Stem("vergassen"), "vergass" );
	deepEqual( Stem("vergaßen"), "vergass" );
	deepEqual( Stem("vergeben"), "vergeb" );
	deepEqual( Stem("vergebens"), "vergeb" );
	deepEqual( Stem("vergeblich"), "vergeb" );
	deepEqual( Stem("vergebliche"), "vergeb" );
	deepEqual( Stem("vergeblichen"), "vergeb" );
	deepEqual( Stem("vergebliches"), "vergeb" );
	deepEqual( Stem("vergeblichkeit"), "vergeb" );
	deepEqual( Stem("vergebung"), "vergeb" );
	deepEqual( Stem("vergegenwärtigte"), "vergegenwartigt" );
	deepEqual( Stem("vergehen"), "vergeh" );
	deepEqual( Stem("vergehet"), "vergehet" );
	deepEqual( Stem("vergehn"), "vergehn" );
	deepEqual( Stem("vergeht"), "vergeht" );
	deepEqual( Stem("vergelten"), "vergelt" );
	deepEqual( Stem("vergelts"), "vergelt" );
	deepEqual( Stem("vergeltung"), "vergelt" );
	deepEqual( Stem("vergessen"), "vergess" );
	deepEqual( Stem("vergessend"), "vergess" );
	deepEqual( Stem("vergessene"), "vergess" );
	deepEqual( Stem("vergessener"), "vergess" );
	deepEqual( Stem("vergessenheit"), "vergess" );
	deepEqual( Stem("vergesslichkeit"), "vergess" );
	deepEqual( Stem("vergeßlichkeit"), "vergess" );
	deepEqual( Stem("vergesst"), "vergesst" );
	deepEqual( Stem("vergeuden"), "vergeud" );
	deepEqual( Stem("vergib"), "vergib" );
	deepEqual( Stem("vergibst"), "vergib" );
	deepEqual( Stem("vergiessen"), "vergiess" );
	deepEqual( Stem("vergießen"), "vergiess" );
	deepEqual( Stem("vergiessend"), "vergiess" );
	deepEqual( Stem("vergiesst"), "vergiesst" );
	deepEqual( Stem("vergießt"), "vergiesst" );
	deepEqual( Stem("vergiftet"), "vergiftet" );
	deepEqual( Stem("vergilbter"), "vergilbt" );
	deepEqual( Stem("vergilt"), "vergilt" );
	deepEqual( Stem("verging"), "verging" );
	deepEqual( Stem("vergingen"), "verging" );
	deepEqual( Stem("vergiss"), "vergiss" );
	deepEqual( Stem("vergissest"), "vergiss" );
	deepEqual( Stem("vergissmeinnicht"), "vergissmeinnicht" );
	deepEqual( Stem("vergissmeinnichtschnäpschen"), "vergissmeinnichtschnapsch" );
	deepEqual( Stem("vergissmeinnichtschnäpse"), "vergissmeinnichtschnaps" );
	deepEqual( Stem("vergisst"), "vergisst" );
	deepEqual( Stem("vergleich"), "vergleich" );
	deepEqual( Stem("vergleiche"), "vergleich" );
	deepEqual( Stem("vergleichen"), "vergleich" );
	deepEqual( Stem("vergleichsfällen"), "vergleichsfall" );
	deepEqual( Stem("vergleichskriterium"), "vergleichskriterium" );
	deepEqual( Stem("vergleichsweise"), "vergleichsweis" );
	deepEqual( Stem("vergleicht"), "vergleicht" );
	deepEqual( Stem("vergleichung"), "vergleich" );
	deepEqual( Stem("vergleichungen"), "vergleich" );
	deepEqual( Stem("verglichen"), "verglich" );
	deepEqual( Stem("vergnügen"), "vergnug" );
	deepEqual( Stem("vergnügenden"), "vergnug" );
	deepEqual( Stem("vergnügens"), "vergnug" );
	deepEqual( Stem("vergnüglich"), "vergnug" );
	deepEqual( Stem("vergnüglichen"), "vergnug" );
	deepEqual( Stem("vergnügliches"), "vergnug" );
	deepEqual( Stem("vergnügt"), "vergnugt" );
	deepEqual( Stem("vergnügte"), "vergnugt" );
	deepEqual( Stem("vergnügtem"), "vergnugt" );
	deepEqual( Stem("vergnügten"), "vergnugt" );
	deepEqual( Stem("vergnügter"), "vergnugt" );
	deepEqual( Stem("vergnügteste"), "vergnugt" );
	deepEqual( Stem("vergnügtheit"), "vergnugt" );
	deepEqual( Stem("vergnügungen"), "vergnug" );
	deepEqual( Stem("vergnügungslokalen"), "vergnugungslokal" );
	deepEqual( Stem("vergnügungssucht"), "vergnugungssucht" );
	deepEqual( Stem("vergnügungstagen"), "vergnugungstag" );
	deepEqual( Stem("vergoldet"), "vergoldet" );
	deepEqual( Stem("vergoldete"), "vergoldet" );
	deepEqual( Stem("vergoldetem"), "vergoldet" );
	deepEqual( Stem("vergoldeten"), "vergoldet" );
	deepEqual( Stem("vergoldeter"), "vergoldet" );
	deepEqual( Stem("vergoldetes"), "vergoldet" );
	deepEqual( Stem("vergolten"), "vergolt" );
	deepEqual( Stem("vergönnt"), "vergonnt" );
	deepEqual( Stem("vergoss"), "vergoss" );
	deepEqual( Stem("vergoß"), "vergoss" );
	deepEqual( Stem("vergossen"), "vergoss" );
	deepEqual( Stem("vergöttert"), "vergottert" );
	deepEqual( Stem("vergraben"), "vergrab" );
	deepEqual( Stem("vergrämt"), "vergramt" );
	deepEqual( Stem("vergrössern"), "vergross" );
	deepEqual( Stem("vergrößern"), "vergross" );
	deepEqual( Stem("vergrössert"), "vergrossert" );
	deepEqual( Stem("vergrub"), "vergrub" );
	deepEqual( Stem("vergüten"), "vergut" );
	deepEqual( Stem("verhaftbefehl"), "verhaftbefehl" );
	deepEqual( Stem("verhaften"), "verhaft" );
	deepEqual( Stem("verhaftet"), "verhaftet" );
	deepEqual( Stem("verhafteten"), "verhaftet" );
	deepEqual( Stem("verhaftung"), "verhaft" );
	deepEqual( Stem("verhalf"), "verhalf" );
	deepEqual( Stem("verhallende"), "verhall" );
	deepEqual( Stem("verhallte"), "verhallt" );
	deepEqual( Stem("verhält"), "verhalt" );
	deepEqual( Stem("verhalte"), "verhalt" );
	deepEqual( Stem("verhalten"), "verhalt" );
	deepEqual( Stem("verhaltend"), "verhalt" );
	deepEqual( Stem("verhaltenen"), "verhalt" );
	deepEqual( Stem("verhaltener"), "verhalt" );
	deepEqual( Stem("verhaltens"), "verhalt" );
	deepEqual( Stem("verhältnis"), "verhaltnis" );
	deepEqual( Stem("verhältnismässig"), "verhaltnismass" );
	deepEqual( Stem("verhältnismäßig"), "verhaltnismass" );
	deepEqual( Stem("verhältnisse"), "verhaltnis" );
	deepEqual( Stem("verhältnissen"), "verhaltnis" );
	deepEqual( Stem("verhältnisses"), "verhaltnis" );
	deepEqual( Stem("verhandeln"), "verhandeln" );
	deepEqual( Stem("verhandelte"), "verhandelt" );
	deepEqual( Stem("verhandlung"), "verhandl" );
	deepEqual( Stem("verhandlungen"), "verhandl" );
	deepEqual( Stem("verhängnis"), "verhangnis" );
	deepEqual( Stem("verhängnisvollen"), "verhangnisvoll" );
	deepEqual( Stem("verhängnisvollste"), "verhangnisvoll" );
	deepEqual( Stem("verhärmten"), "verharmt" );
	deepEqual( Stem("verharre"), "verharr" );
	deepEqual( Stem("verharrte"), "verharrt" );
	deepEqual( Stem("verhärten"), "verhart" );
	deepEqual( Stem("verhärtet"), "verhartet" );
	deepEqual( Stem("verhärtete"), "verhartet" );
	deepEqual( Stem("verhärteten"), "verhartet" );
	deepEqual( Stem("verhärtung"), "verhart" );
	deepEqual( Stem("verhasst"), "verhasst" );
	deepEqual( Stem("verhassten"), "verhasst" );
	deepEqual( Stem("verhasster"), "verhasst" );
	deepEqual( Stem("verheerenden"), "verheer" );
	deepEqual( Stem("verheert"), "verheert" );
	deepEqual( Stem("verheerung"), "verheer" );
	deepEqual( Stem("verhehlten"), "verhehlt" );
	deepEqual( Stem("verheimlichen"), "verheim" );
	deepEqual( Stem("verheiraten"), "verheirat" );
	deepEqual( Stem("verheiratet"), "verheiratet" );
	deepEqual( Stem("verheiratete"), "verheiratet" );
	deepEqual( Stem("verheirateten"), "verheiratet" );
	deepEqual( Stem("verheiratetes"), "verheiratet" );
	deepEqual( Stem("verheissen"), "verheiss" );
	deepEqual( Stem("verheißen"), "verheiss" );
	deepEqual( Stem("verheissende"), "verheiss" );
	deepEqual( Stem("verheißende"), "verheiss" );
	deepEqual( Stem("verheisst"), "verheisst" );
	deepEqual( Stem("verheissung"), "verheiss" );
	deepEqual( Stem("verheißung"), "verheiss" );
	deepEqual( Stem("verhelfen"), "verhelf" );
	deepEqual( Stem("verherrliche"), "verherr" );
	deepEqual( Stem("verherrlichen"), "verherr" );
	deepEqual( Stem("verherrlichet"), "verherrlichet" );
	deepEqual( Stem("verherrlicht"), "verherrlicht" );
	deepEqual( Stem("verherrlichten"), "verherrlicht" );
	deepEqual( Stem("verherrlichung"), "verherrlich" );
	deepEqual( Stem("verhext"), "verhext" );
	deepEqual( Stem("verhielt"), "verhielt" );
	deepEqual( Stem("verhielten"), "verhielt" );
	deepEqual( Stem("verhindere"), "verhind" );
	deepEqual( Stem("verhindern"), "verhind" );
	deepEqual( Stem("verhindert"), "verhindert" );
	deepEqual( Stem("verhinderte"), "verhindert" );
	deepEqual( Stem("verhinderten"), "verhindert" );
	deepEqual( Stem("verhofften"), "verhofft" );
	deepEqual( Stem("verhöhnen"), "verhohn" );
	deepEqual( Stem("verhöhnt"), "verhohnt" );
	deepEqual( Stem("verhöhnung"), "verhohn" );
	deepEqual( Stem("verholfen"), "verholf" );
	deepEqual( Stem("verhör"), "verhor" );
	deepEqual( Stem("verhöre"), "verhor" );
	deepEqual( Stem("verhören"), "verhor" );
	deepEqual( Stem("verhülle"), "verhull" );
	deepEqual( Stem("verhüllt"), "verhullt" );
	deepEqual( Stem("verhüllte"), "verhullt" );
	deepEqual( Stem("verhüllung"), "verhull" );
	deepEqual( Stem("verhundertfacht"), "verhundertfacht" );
	deepEqual( Stem("verhungert"), "verhungert" );
	deepEqual( Stem("verhungertes"), "verhungert" );
	deepEqual( Stem("verhüten"), "verhut" );
	deepEqual( Stem("verhütet"), "verhutet" );
	deepEqual( Stem("verint"), "verint" );
	deepEqual( Stem("verirren"), "verirr" );
	deepEqual( Stem("verirrt"), "verirrt" );
	deepEqual( Stem("verirrte"), "verirrt" );
	deepEqual( Stem("verirrung"), "verirr" );
	deepEqual( Stem("veritas"), "veritas" );
	deepEqual( Stem("verjährt"), "verjahrt" );
	deepEqual( Stem("verjährte"), "verjahrt" );
	deepEqual( Stem("verkauf"), "verkauf" );
	deepEqual( Stem("verkaufen"), "verkauf" );
	deepEqual( Stem("verkaufssumme"), "verkaufssumm" );
	deepEqual( Stem("verkauft"), "verkauft" );
	deepEqual( Stem("verkauften"), "verkauft" );
	deepEqual( Stem("verkehr"), "verkehr" );
	deepEqual( Stem("verkehren"), "verkehr" );
	deepEqual( Stem("verkehrs"), "verkehr" );
	deepEqual( Stem("verkehrt"), "verkehrt" );
	deepEqual( Stem("verkehrte"), "verkehrt" );
	deepEqual( Stem("verkehrten"), "verkehrt" );
	deepEqual( Stem("verkehrtes"), "verkehrt" );
	deepEqual( Stem("verkehrtheit"), "verkehrt" );
	deepEqual( Stem("verkehrtheiten"), "verkehrt" );
	deepEqual( Stem("verkehrung"), "verkehr" );
	deepEqual( Stem("verkehrungen"), "verkehr" );
	deepEqual( Stem("verkennen"), "verkenn" );
	deepEqual( Stem("verkennt"), "verkennt" );
	deepEqual( Stem("verklammert"), "verklammert" );
	deepEqual( Stem("verklang"), "verklang" );
	deepEqual( Stem("verklärt"), "verklart" );
	deepEqual( Stem("verklärten"), "verklart" );
	deepEqual( Stem("verklärtes"), "verklart" );
	deepEqual( Stem("verklebe"), "verkleb" );
	deepEqual( Stem("verklebt"), "verklebt" );
	deepEqual( Stem("verklebte"), "verklebt" );
	deepEqual( Stem("verkleiden"), "verkleid" );
	deepEqual( Stem("verkleidet"), "verkleidet" );
	deepEqual( Stem("verkleidung"), "verkleid" );
	deepEqual( Stem("verkleinern"), "verklein" );
	deepEqual( Stem("verklungen"), "verklung" );
	deepEqual( Stem("verkneifen"), "verkneif" );
	deepEqual( Stem("verkniff"), "verkniff" );
	deepEqual( Stem("verkniffen"), "verkniff" );
	deepEqual( Stem("verkniffenen"), "verkniff" );
	deepEqual( Stem("verknüpfe"), "verknupf" );
	deepEqual( Stem("verknüpfen"), "verknupf" );
	deepEqual( Stem("verknüpft"), "verknupft" );
	deepEqual( Stem("verknüpfte"), "verknupft" );
	deepEqual( Stem("verknüpften"), "verknupft" );
	deepEqual( Stem("verknüpfung"), "verknupf" );
	deepEqual( Stem("verknüpfungen"), "verknupf" );
	deepEqual( Stem("verkommenen"), "verkomm" );
	deepEqual( Stem("verkommenheit"), "verkomm" );
	deepEqual( Stem("verkriecht"), "verkriecht" );
	deepEqual( Stem("verkrochen"), "verkroch" );
	deepEqual( Stem("verkrümmelten"), "verkrummelt" );
	deepEqual( Stem("verkrüppelt"), "verkruppelt" );
	deepEqual( Stem("verkühlung"), "verkuhl" );
	deepEqual( Stem("verkünden"), "verkund" );
	deepEqual( Stem("verkündet"), "verkundet" );
	deepEqual( Stem("verkündete"), "verkundet" );
	deepEqual( Stem("verkündeten"), "verkundet" );
	deepEqual( Stem("verkündige"), "verkund" );
	deepEqual( Stem("verkündigen"), "verkund" );
	deepEqual( Stem("verkündigt"), "verkundigt" );
	deepEqual( Stem("verkündigte"), "verkundigt" );
	deepEqual( Stem("verkündigung"), "verkund" );
	deepEqual( Stem("verkünstelt"), "verkunstelt" );
	deepEqual( Stem("verkürzen"), "verkurz" );
	deepEqual( Stem("verlachen"), "verlach" );
	deepEqual( Stem("verlacht"), "verlacht" );
	deepEqual( Stem("verlag"), "verlag" );
	deepEqual( Stem("verlages"), "verlag" );
	deepEqual( Stem("verlagsmitteilung"), "verlagsmitteil" );
	deepEqual( Stem("verlange"), "verlang" );
	deepEqual( Stem("verlangen"), "verlang" );
	deepEqual( Stem("verlangend"), "verlang" );
	deepEqual( Stem("verlängern"), "verlang" );
	deepEqual( Stem("verlängert"), "verlangert" );
	deepEqual( Stem("verlängerten"), "verlangert" );
	deepEqual( Stem("verlangst"), "verlang" );
	deepEqual( Stem("verlangt"), "verlangt" );
	deepEqual( Stem("verlangte"), "verlangt" );
	deepEqual( Stem("verlangten"), "verlangt" );
	deepEqual( Stem("verlas"), "verlas" );
	deepEqual( Stem("verlass"), "verlass" );
	deepEqual( Stem("verlassen"), "verlass" );
	deepEqual( Stem("verlassene"), "verlass" );
	deepEqual( Stem("verlassenen"), "verlass" );
	deepEqual( Stem("verlassener"), "verlass" );
	deepEqual( Stem("verlassenes"), "verlass" );
	deepEqual( Stem("verlassenheit"), "verlass" );
	deepEqual( Stem("verlasset"), "verlasset" );
	deepEqual( Stem("verlässet"), "verlasset" );
	deepEqual( Stem("verlässt"), "verlasst" );
	deepEqual( Stem("verläßt"), "verlasst" );
	deepEqual( Stem("verlaub"), "verlaub" );
	deepEqual( Stem("verlauf"), "verlauf" );
	deepEqual( Stem("verlaufe"), "verlauf" );
	deepEqual( Stem("verlaufen"), "verlauf" );
	deepEqual( Stem("verlaufende"), "verlauf" );
	deepEqual( Stem("verlaufs"), "verlauf" );
	deepEqual( Stem("verläuft"), "verlauft" );
	deepEqual( Stem("verlauten"), "verlaut" );
	deepEqual( Stem("verlebten"), "verlebt" );
	deepEqual( Stem("verlegen"), "verleg" );
	deepEqual( Stem("verlegenen"), "verleg" );
	deepEqual( Stem("verlegener"), "verleg" );
	deepEqual( Stem("verlegenheit"), "verleg" );
	deepEqual( Stem("verleger"), "verleg" );
	deepEqual( Stem("verlegt"), "verlegt" );
	deepEqual( Stem("verlegte"), "verlegt" );
	deepEqual( Stem("verlegten"), "verlegt" );
	deepEqual( Stem("verleihe"), "verleih" );
	deepEqual( Stem("verleihen"), "verleih" );
	deepEqual( Stem("verleiht"), "verleiht" );
	deepEqual( Stem("verleiten"), "verleit" );
	deepEqual( Stem("verleitet"), "verleitet" );
	deepEqual( Stem("verleitete"), "verleitet" );
	deepEqual( Stem("verletze"), "verletz" );
	deepEqual( Stem("verletzen"), "verletz" );
	deepEqual( Stem("verletzt"), "verletzt" );
	deepEqual( Stem("verletzte"), "verletzt" );
	deepEqual( Stem("verletzten"), "verletzt" );
	deepEqual( Stem("verletztheit"), "verletzt" );
	deepEqual( Stem("verletzung"), "verletz" );
	deepEqual( Stem("verleugne"), "verleugn" );
	deepEqual( Stem("verleugnet"), "verleugnet" );
	deepEqual( Stem("verleugnete"), "verleugnet" );
	deepEqual( Stem("verleumden"), "verleumd" );
	deepEqual( Stem("verleumdern"), "verleumd" );
	deepEqual( Stem("verleumdet"), "verleumdet" );
	deepEqual( Stem("verleumdungswesen"), "verleumdungswes" );
	deepEqual( Stem("verlieben"), "verlieb" );
	deepEqual( Stem("verliebt"), "verliebt" );
	deepEqual( Stem("verliebte"), "verliebt" );
	deepEqual( Stem("verliebten"), "verliebt" );
	deepEqual( Stem("verliebter"), "verliebt" );
	deepEqual( Stem("verliebtheit"), "verliebt" );
	deepEqual( Stem("verlief"), "verlief" );
	deepEqual( Stem("verlieh"), "verlieh" );
	deepEqual( Stem("verliehen"), "verlieh" );
	deepEqual( Stem("verlieren"), "verli" );
	deepEqual( Stem("verliert"), "verliert" );
	deepEqual( Stem("verliess"), "verliess" );
	deepEqual( Stem("verließ"), "verliess" );
	deepEqual( Stem("verlobt"), "verlobt" );
	deepEqual( Stem("verlobung"), "verlob" );
	deepEqual( Stem("verlocken"), "verlock" );
	deepEqual( Stem("verlockend"), "verlock" );
	deepEqual( Stem("verlockendes"), "verlock" );
	deepEqual( Stem("verlockt"), "verlockt" );
	deepEqual( Stem("verlockte"), "verlockt" );
	deepEqual( Stem("verlockung"), "verlock" );
	deepEqual( Stem("verlockungen"), "verlock" );
	deepEqual( Stem("verlogenen"), "verlog" );
	deepEqual( Stem("verlogenes"), "verlog" );
	deepEqual( Stem("verlor"), "verlor" );
	deepEqual( Stem("verlöre"), "verlor" );
	deepEqual( Stem("verloren"), "verlor" );
	deepEqual( Stem("verlorene"), "verlor" );
	deepEqual( Stem("verlorenen"), "verlor" );
	deepEqual( Stem("verlorener"), "verlor" );
	deepEqual( Stem("verlorenes"), "verlor" );
	deepEqual( Stem("verlorengegangen"), "verlorengegang" );
	deepEqual( Stem("verlorengehe"), "verlorengeh" );
	deepEqual( Stem("verlorengehen"), "verlorengeh" );
	deepEqual( Stem("verlorengeht"), "verlorengeht" );
	deepEqual( Stem("verlorenging"), "verlorenging" );
	deepEqual( Stem("verlorengingen"), "verlorenging" );
	deepEqual( Stem("verlorensein"), "verlorensein" );
	deepEqual( Stem("verlöschen"), "verlosch" );
	deepEqual( Stem("verlotterten"), "verlottert" );
	deepEqual( Stem("verlumpete"), "verlumpet" );
	deepEqual( Stem("verlumpte"), "verlumpt" );
	deepEqual( Stem("verlumpungen"), "verlump" );
	deepEqual( Stem("verlust"), "verlust" );
	deepEqual( Stem("verlustig"), "verlust" );
	deepEqual( Stem("verlusts"), "verlust" );
	deepEqual( Stem("vermachte"), "vermacht" );
	deepEqual( Stem("vermag"), "vermag" );
	deepEqual( Stem("vermählt"), "vermahlt" );
	deepEqual( Stem("vermählte"), "vermahlt" );
	deepEqual( Stem("vermählten"), "vermahlt" );
	deepEqual( Stem("vermähltes"), "vermahlt" );
	deepEqual( Stem("vermählung"), "vermahl" );
	deepEqual( Stem("vermählungen"), "vermahl" );
	deepEqual( Stem("vermahnen"), "vermahn" );
	deepEqual( Stem("vermauern"), "vermau" );
	deepEqual( Stem("vermehren"), "vermehr" );
	deepEqual( Stem("vermehrt"), "vermehrt" );
	deepEqual( Stem("vermehrten"), "vermehrt" );
	deepEqual( Stem("vermehrter"), "vermehrt" );
	deepEqual( Stem("vermehrung"), "vermehr" );
	deepEqual( Stem("vermehrungen"), "vermehr" );
	deepEqual( Stem("vermeiden"), "vermeid" );
	deepEqual( Stem("vermeidung"), "vermeid" );
	deepEqual( Stem("vermeinte"), "vermeint" );
	deepEqual( Stem("vermeinten"), "vermeint" );
	deepEqual( Stem("vermeinter"), "vermeint" );
	deepEqual( Stem("vermeintlich"), "vermeint" );
	deepEqual( Stem("vermeldete"), "vermeldet" );
	deepEqual( Stem("vermengt"), "vermengt" );
	deepEqual( Stem("vermerkt"), "vermerkt" );
	deepEqual( Stem("vermied"), "vermied" );
	deepEqual( Stem("vermieden"), "vermied" );
	deepEqual( Stem("vermieter"), "vermiet" );
	deepEqual( Stem("vermindern"), "vermind" );
	deepEqual( Stem("vermindernden"), "vermindernd" );
	deepEqual( Stem("vermindert"), "vermindert" );
	deepEqual( Stem("verminderung"), "verminder" );
	deepEqual( Stem("vermischen"), "vermisch" );
	deepEqual( Stem("vermischt"), "vermischt" );
	deepEqual( Stem("vermischte"), "vermischt" );
	deepEqual( Stem("vermischten"), "vermischt" );
	deepEqual( Stem("vermischung"), "vermisch" );
	deepEqual( Stem("vermischungen"), "vermisch" );
	deepEqual( Stem("vermissen"), "vermiss" );
	deepEqual( Stem("vermisst"), "vermisst" );
	deepEqual( Stem("vermisste"), "vermisst" );
	deepEqual( Stem("vermißte"), "vermisst" );
	deepEqual( Stem("vermittelnde"), "vermittelnd" );
	deepEqual( Stem("vermittelndes"), "vermittelnd" );
	deepEqual( Stem("vermittels"), "vermittel" );
	deepEqual( Stem("vermittelst"), "vermittel" );
	deepEqual( Stem("vermittlerin"), "vermittlerin" );
	deepEqual( Stem("vermittlung"), "vermittl" );
	deepEqual( Stem("vermittlungen"), "vermittl" );
	deepEqual( Stem("vermocht"), "vermocht" );
	deepEqual( Stem("vermochte"), "vermocht" );
	deepEqual( Stem("vermöchte"), "vermocht" );
	deepEqual( Stem("vermochten"), "vermocht" );
	deepEqual( Stem("vermöge"), "vermog" );
	deepEqual( Stem("vermögen"), "vermog" );
	deepEqual( Stem("vermögend"), "vermog" );
	deepEqual( Stem("vermögenden"), "vermog" );
	deepEqual( Stem("vermögens"), "vermog" );
	deepEqual( Stem("vermögensstand"), "vermogensstand" );
	deepEqual( Stem("vermute"), "vermut" );
	deepEqual( Stem("vermuten"), "vermut" );
	deepEqual( Stem("vermutet"), "vermutet" );
	deepEqual( Stem("vermutete"), "vermutet" );
	deepEqual( Stem("vermutlich"), "vermut" );
	deepEqual( Stem("vermutlichen"), "vermut" );
	deepEqual( Stem("vermutung"), "vermut" );
	deepEqual( Stem("vermutungen"), "vermut" );
	deepEqual( Stem("vernachlässige"), "vernachlass" );
	deepEqual( Stem("vernachlässigt"), "vernachlassigt" );
	deepEqual( Stem("vernachlässigte"), "vernachlassigt" );
	deepEqual( Stem("vernachlässigten"), "vernachlassigt" );
	deepEqual( Stem("vernachlässigung"), "vernachlass" );
	deepEqual( Stem("vernagelt"), "vernagelt" );
	deepEqual( Stem("vernagelten"), "vernagelt" );
	deepEqual( Stem("vernahm"), "vernahm" );
	deepEqual( Stem("vernähme"), "vernahm" );
	deepEqual( Stem("vernahmen"), "vernahm" );
	deepEqual( Stem("vernarbendes"), "vernarb" );
	deepEqual( Stem("vernarren"), "vernarr" );
	deepEqual( Stem("vernarrt"), "vernarrt" );
	deepEqual( Stem("vernehmbar"), "vernehmbar" );
	deepEqual( Stem("vernehmbare"), "vernehmbar" );
	deepEqual( Stem("vernehmen"), "vernehm" );
	deepEqual( Stem("vernehmet"), "vernehmet" );
	deepEqual( Stem("vernehmlassungsverfahrens"), "vernehmlassungsverfahr" );
	deepEqual( Stem("vernehmlichem"), "vernehm" );
	deepEqual( Stem("vernehmlichen"), "vernehm" );
	deepEqual( Stem("vernehmnisse"), "vernehmnis" );
	deepEqual( Stem("verneigen"), "verneig" );
	deepEqual( Stem("verneigend"), "verneig" );
	deepEqual( Stem("verneigt"), "verneigt" );
	deepEqual( Stem("verneigte"), "verneigt" );
	deepEqual( Stem("verneinen"), "vernein" );
	deepEqual( Stem("verneinenden"), "vernein" );
	deepEqual( Stem("verneinung"), "vernein" );
	deepEqual( Stem("verneinungen"), "vernein" );
	deepEqual( Stem("verneunfacht"), "verneunfacht" );
	deepEqual( Stem("vernichte"), "vernicht" );
	deepEqual( Stem("vernichten"), "vernicht" );
	deepEqual( Stem("vernichtet"), "vernichtet" );
	deepEqual( Stem("vernichteten"), "vernichtet" );
	deepEqual( Stem("vernichtung"), "vernicht" );
	deepEqual( Stem("vernichtungsgenie"), "vernichtungsgeni" );
	deepEqual( Stem("vernimmt"), "vernimmt" );
	deepEqual( Stem("vernommen"), "vernomm" );
	deepEqual( Stem("vernunft"), "vernunft" );
	deepEqual( Stem("vernunftähnliches"), "vernunftahn" );
	deepEqual( Stem("vernunftanschauungen"), "vernunftanschau" );
	deepEqual( Stem("vernunftbedingung"), "vernunftbeding" );
	deepEqual( Stem("vernunftbedürfnis"), "vernunftbedurfnis" );
	deepEqual( Stem("vernunftbegriffe"), "vernunftbegriff" );
	deepEqual( Stem("vernunftbegriffen"), "vernunftbegriff" );
	deepEqual( Stem("vernunftbestimmung"), "vernunftbestimm" );
	deepEqual( Stem("vernunfteinsicht"), "vernunfteinsicht" );
	deepEqual( Stem("vernünftelei"), "vernunftelei" );
	deepEqual( Stem("vernünfteleien"), "vernunftelei" );
	deepEqual( Stem("vernünfteln"), "vernunfteln" );
	deepEqual( Stem("vernünftelnde"), "vernunftelnd" );
	deepEqual( Stem("vernünftelt"), "vernunftelt" );
	deepEqual( Stem("vernünftelten"), "vernunftelt" );
	deepEqual( Stem("vernunfterkenntnisse"), "vernunfterkenntnis" );
	deepEqual( Stem("vernunfterkenntnisses"), "vernunfterkenntnis" );
	deepEqual( Stem("vernunftgebote"), "vernunftgebot" );
	deepEqual( Stem("vernunftgebots"), "vernunftgebot" );
	deepEqual( Stem("vernunftgebrauch"), "vernunftgebrauch" );
	deepEqual( Stem("vernunftgebrauche"), "vernunftgebrauch" );
	deepEqual( Stem("vernunftgebrauchs"), "vernunftgebrauch" );
	deepEqual( Stem("vernunftgemässe"), "vernunftgemass" );
	deepEqual( Stem("vernunftgemässen"), "vernunftgemass" );
	deepEqual( Stem("vernunftgesetz"), "vernunftgesetz" );
	deepEqual( Stem("vernunftgesetze"), "vernunftgesetz" );
	deepEqual( Stem("vernunftglaube"), "vernunftglaub" );
	deepEqual( Stem("vernunftglaubens"), "vernunftglaub" );
	deepEqual( Stem("vernunftgründe"), "vernunftgrund" );
	deepEqual( Stem("vernunftgründen"), "vernunftgrund" );
	deepEqual( Stem("vernunftidee"), "vernunftide" );
	deepEqual( Stem("vernunftideen"), "vernunftide" );
	deepEqual( Stem("vernünftig"), "vernunft" );
	deepEqual( Stem("vernünftige"), "vernunft" );
	deepEqual( Stem("vernünftigen"), "vernunft" );
	deepEqual( Stem("vernünftiger"), "vernunft" );
	deepEqual( Stem("vernünftiges"), "vernunft" );
	deepEqual( Stem("vernünftigkeit"), "vernunft" );
	deepEqual( Stem("vernünftigsein"), "vernunftigsein" );
	deepEqual( Stem("vernunftkraft"), "vernunftkraft" );
	deepEqual( Stem("vernünftler"), "vernunftl" );
	deepEqual( Stem("vernünftlern"), "vernunftl" );
	deepEqual( Stem("vernunftlos"), "vernunftlos" );
	deepEqual( Stem("vernunftmässiges"), "vernunftmass" );
	deepEqual( Stem("vernunftmäßiges"), "vernunftmass" );
	deepEqual( Stem("vernunftprinzip"), "vernunftprinzip" );
	deepEqual( Stem("vernunftschlüsse"), "vernunftschluss" );
	deepEqual( Stem("vernunftschlusses"), "vernunftschluss" );
	deepEqual( Stem("vernunfttheologie"), "vernunfttheologi" );
	deepEqual( Stem("vernunftverhältnisse"), "vernunftverhaltnis" );
	deepEqual( Stem("vernunftvermögen"), "vernunftvermog" );
	deepEqual( Stem("vernunftvermögens"), "vernunftvermog" );
	deepEqual( Stem("vernunftvorstellungen"), "vernunftvorstell" );
	deepEqual( Stem("vernunftwahres"), "vernunftwahr" );
	deepEqual( Stem("vernunftwahrheiten"), "vernunftwahr" );
	deepEqual( Stem("vernunftwillens"), "vernunftwill" );
	deepEqual( Stem("vernunftwissenschaften"), "vernunftwissenschaft" );
	deepEqual( Stem("verödenden"), "verod" );
	deepEqual( Stem("verödet"), "verodet" );
	deepEqual( Stem("verödeten"), "verodet" );
	deepEqual( Stem("verödung"), "verod" );
	deepEqual( Stem("verödungen"), "verod" );
	deepEqual( Stem("veröffentlicht"), "veroffentlicht" );
	deepEqual( Stem("veröffentlichung"), "veroffentlich" );
	deepEqual( Stem("verordnung"), "verordn" );
	deepEqual( Stem("verordnungen"), "verordn" );
	deepEqual( Stem("verorientieren"), "verorienti" );
	deepEqual( Stem("verpachteten"), "verpachtet" );
	deepEqual( Stem("verpacken"), "verpack" );
	deepEqual( Stem("verpackt"), "verpackt" );
	deepEqual( Stem("verpfändet"), "verpfandet" );
	deepEqual( Stem("verpfändeten"), "verpfandet" );
	deepEqual( Stem("verpflichten"), "verpflicht" );
	deepEqual( Stem("verpflichtet"), "verpflichtet" );
	deepEqual( Stem("verpflichtung"), "verpflicht" );
	deepEqual( Stem("verpflichtungen"), "verpflicht" );
	deepEqual( Stem("verpichen"), "verpich" );
	deepEqual( Stem("verpicht"), "verpicht" );
	deepEqual( Stem("verpichtwerden"), "verpichtwerd" );
	deepEqual( Stem("verpichung"), "verpich" );
	deepEqual( Stem("verplaudern"), "verplaud" );
	deepEqual( Stem("verpönt"), "verpont" );
	deepEqual( Stem("verpustete"), "verpustet" );
	deepEqual( Stem("verrannt"), "verrannt" );
	deepEqual( Stem("verrät"), "verrat" );
	deepEqual( Stem("verraten"), "verrat" );
	deepEqual( Stem("verrechnen"), "verrechn" );
	deepEqual( Stem("verregnet"), "verregnet" );
	deepEqual( Stem("verreisen"), "verreis" );
	deepEqual( Stem("verreiste"), "verreist" );
	deepEqual( Stem("verrenkungen"), "verrenk" );
	deepEqual( Stem("verrichten"), "verricht" );
	deepEqual( Stem("verrichtet"), "verrichtet" );
	deepEqual( Stem("verrichtete"), "verrichtet" );
	deepEqual( Stem("verrichteten"), "verrichtet" );
	deepEqual( Stem("verrichtung"), "verricht" );
	deepEqual( Stem("verrichtungen"), "verricht" );
	deepEqual( Stem("verriet"), "verriet" );
	deepEqual( Stem("verriete"), "verriet" );
	deepEqual( Stem("verrieten"), "verriet" );
	deepEqual( Stem("verringern"), "verring" );
	deepEqual( Stem("verringert"), "verringert" );
	deepEqual( Stem("verrollen"), "verroll" );
	deepEqual( Stem("verrostetes"), "verrostet" );
	deepEqual( Stem("verrückt"), "verruckt" );
	deepEqual( Stem("verruckte"), "verruckt" );
	deepEqual( Stem("verrückte"), "verruckt" );
	deepEqual( Stem("verrufen"), "verruf" );
	deepEqual( Stem("verrufenen"), "verruf" );
	deepEqual( Stem("vers"), "ver" );
	deepEqual( Stem("versagender"), "versag" );
	deepEqual( Stem("versagt"), "versagt" );
	deepEqual( Stem("versagte"), "versagt" );
	deepEqual( Stem("versagten"), "versagt" );
	deepEqual( Stem("versah"), "versah" );
	deepEqual( Stem("versammeln"), "versammeln" );
	deepEqual( Stem("versammelt"), "versammelt" );
	deepEqual( Stem("versammelte"), "versammelt" );
	deepEqual( Stem("versammelten"), "versammelt" );
	deepEqual( Stem("versammle"), "versamml" );
	deepEqual( Stem("versammlung"), "versamml" );
	deepEqual( Stem("versammlungszimmer"), "versammlungszimm" );
	deepEqual( Stem("versandet"), "versandet" );
	deepEqual( Stem("versandt"), "versandt" );
	deepEqual( Stem("versank"), "versank" );
	deepEqual( Stem("versanken"), "versank" );
	deepEqual( Stem("versäumen"), "versaum" );
	deepEqual( Stem("versäumt"), "versaumt" );
	deepEqual( Stem("versäumte"), "versaumt" );
	deepEqual( Stem("verschaffe"), "verschaff" );
	deepEqual( Stem("verschaffen"), "verschaff" );
	deepEqual( Stem("verschafft"), "verschafft" );
	deepEqual( Stem("verschaffte"), "verschafft" );
	deepEqual( Stem("verschämt"), "verschamt" );
	deepEqual( Stem("verschärfung"), "verscharf" );
	deepEqual( Stem("verschärfungen"), "verscharf" );
	deepEqual( Stem("verschattung"), "verschatt" );
	deepEqual( Stem("verschäumte"), "verschaumt" );
	deepEqual( Stem("verschen"), "versch" );
	deepEqual( Stem("verschenken"), "verschenk" );
	deepEqual( Stem("verscherzt"), "verscherzt" );
	deepEqual( Stem("verscheuchen"), "verscheuch" );
	deepEqual( Stem("verscheuchten"), "verscheucht" );
	deepEqual( Stem("verschiebung"), "verschieb" );
	deepEqual( Stem("verschieden"), "verschied" );
	deepEqual( Stem("verschiedenartig"), "verschiedenart" );
	deepEqual( Stem("verschiedenartigen"), "verschiedenart" );
	deepEqual( Stem("verschiedenartiges"), "verschiedenart" );
	deepEqual( Stem("verschiedenartigste"), "verschiedenart" );
	deepEqual( Stem("verschiedene"), "verschied" );
	deepEqual( Stem("verschiedenem"), "verschied" );
	deepEqual( Stem("verschiedenen"), "verschied" );
	deepEqual( Stem("verschiedener"), "verschied" );
	deepEqual( Stem("verschiedenes"), "verschied" );
	deepEqual( Stem("verschiedenheit"), "verschied" );
	deepEqual( Stem("verschiedenheiten"), "verschied" );
	deepEqual( Stem("verschiedenste"), "verschieden" );
	deepEqual( Stem("verschiedensten"), "verschieden" );
	deepEqual( Stem("verschiedentlich"), "verschiedent" );
	deepEqual( Stem("verschlafen"), "verschlaf" );
	deepEqual( Stem("verschlage"), "verschlag" );
	deepEqual( Stem("verschlagen"), "verschlag" );
	deepEqual( Stem("verschlang"), "verschlang" );
	deepEqual( Stem("verschlangen"), "verschlang" );
	deepEqual( Stem("verschlechterung"), "verschlechter" );
	deepEqual( Stem("verschleiern"), "verschlei" );
	deepEqual( Stem("verschleiert"), "verschleiert" );
	deepEqual( Stem("verschleudert"), "verschleudert" );
	deepEqual( Stem("verschliessen"), "verschliess" );
	deepEqual( Stem("verschließen"), "verschliess" );
	deepEqual( Stem("verschlimmern"), "verschlimm" );
	deepEqual( Stem("verschlimmert"), "verschlimmert" );
	deepEqual( Stem("verschlinge"), "verschling" );
	deepEqual( Stem("verschlingen"), "verschling" );
	deepEqual( Stem("verschlingungen"), "verschling" );
	deepEqual( Stem("verschloss"), "verschloss" );
	deepEqual( Stem("verschlossen"), "verschloss" );
	deepEqual( Stem("verschlossenen"), "verschloss" );
	deepEqual( Stem("verschlossenes"), "verschloss" );
	deepEqual( Stem("verschluckt"), "verschluckt" );
	deepEqual( Stem("verschlungen"), "verschlung" );
	deepEqual( Stem("verschlungenen"), "verschlung" );
	deepEqual( Stem("verschluss"), "verschluss" );
	deepEqual( Stem("verschlusses"), "verschluss" );
	deepEqual( Stem("verschmachten"), "verschmacht" );
	deepEqual( Stem("verschmähe"), "verschmah" );
	deepEqual( Stem("verschmähen"), "verschmah" );
	deepEqual( Stem("verschmähst"), "verschmah" );
	deepEqual( Stem("verschmäht"), "verschmaht" );
	deepEqual( Stem("verschmähte"), "verschmaht" );
	deepEqual( Stem("verschmähten"), "verschmaht" );
	deepEqual( Stem("verschmelzen"), "verschmelz" );
	deepEqual( Stem("verschmerzen"), "verschmerz" );
	deepEqual( Stem("verschmierten"), "verschmiert" );
	deepEqual( Stem("verschmitzt"), "verschmitzt" );
	deepEqual( Stem("verschmitztheit"), "verschmitzt" );
	deepEqual( Stem("verschnaufen"), "verschnauf" );
	deepEqual( Stem("verschnaufte"), "verschnauft" );
	deepEqual( Stem("verschnittene"), "verschnitt" );
	deepEqual( Stem("verschnittenen"), "verschnitt" );
	deepEqual( Stem("verschnürte"), "verschnurt" );
	deepEqual( Stem("verschob"), "verschob" );
	deepEqual( Stem("verschollene"), "verscholl" );
	deepEqual( Stem("verschollenen"), "verscholl" );
	deepEqual( Stem("verschonen"), "verschon" );
	deepEqual( Stem("verschönert"), "verschonert" );
	deepEqual( Stem("verschont"), "verschont" );
	deepEqual( Stem("verschossen"), "verschoss" );
	deepEqual( Stem("verschränkung"), "verschrank" );
	deepEqual( Stem("verschulden"), "verschuld" );
	deepEqual( Stem("verschuldet"), "verschuldet" );
	deepEqual( Stem("verschuldung"), "verschuld" );
	deepEqual( Stem("verschuldungen"), "verschuld" );
	deepEqual( Stem("verschustern"), "verschust" );
	deepEqual( Stem("verschüttet"), "verschuttet" );
	deepEqual( Stem("verschwammen"), "verschwamm" );
	deepEqual( Stem("verschwand"), "verschwand" );
	deepEqual( Stem("verschwanden"), "verschwand" );
	deepEqual( Stem("verschweigen"), "verschweig" );
	deepEqual( Stem("verschwenden"), "verschwend" );
	deepEqual( Stem("verschwenderisch"), "verschwender" );
	deepEqual( Stem("verschwendet"), "verschwendet" );
	deepEqual( Stem("verschwendung"), "verschwend" );
	deepEqual( Stem("verschwieg"), "verschwieg" );
	deepEqual( Stem("verschwiegenes"), "verschwieg" );
	deepEqual( Stem("verschwinde"), "verschwind" );
	deepEqual( Stem("verschwinden"), "verschwind" );
	deepEqual( Stem("verschwindet"), "verschwindet" );
	deepEqual( Stem("verschworen"), "verschwor" );
	deepEqual( Stem("verschworene"), "verschwor" );
	deepEqual( Stem("verschwunden"), "verschwund" );
	deepEqual( Stem("verschwundene"), "verschwund" );
	deepEqual( Stem("verschwundenen"), "verschwund" );
	deepEqual( Stem("verse"), "vers" );
	deepEqual( Stem("versehen"), "verseh" );
	deepEqual( Stem("versehn"), "versehn" );
	deepEqual( Stem("versen"), "vers" );
	deepEqual( Stem("versengen"), "verseng" );
	deepEqual( Stem("versenken"), "versenk" );
	deepEqual( Stem("versenkt"), "versenkt" );
	deepEqual( Stem("versenkte"), "versenkt" );
	deepEqual( Stem("versenkten"), "versenkt" );
	deepEqual( Stem("versenkung"), "versenk" );
	deepEqual( Stem("versenkungen"), "versenk" );
	deepEqual( Stem("versessen"), "versess" );
	deepEqual( Stem("versetze"), "versetz" );
	deepEqual( Stem("versetzen"), "versetz" );
	deepEqual( Stem("versetzt"), "versetzt" );
	deepEqual( Stem("versetzte"), "versetzt" );
	deepEqual( Stem("versetzung"), "versetz" );
	deepEqual( Stem("versichern"), "versich" );
	deepEqual( Stem("versichert"), "versichert" );
	deepEqual( Stem("versicherte"), "versichert" );
	deepEqual( Stem("versicherten"), "versichert" );
	deepEqual( Stem("versicherung"), "versicher" );
	deepEqual( Stem("versiegelt"), "versiegelt" );
	deepEqual( Stem("versiegen"), "versieg" );
	deepEqual( Stem("versiegle"), "versiegl" );
	deepEqual( Stem("versiegt"), "versiegt" );
	deepEqual( Stem("versiert"), "versiert" );
	deepEqual( Stem("versilbert"), "versilbert" );
	deepEqual( Stem("versimpelter"), "versimpelt" );
	deepEqual( Stem("versinke"), "versink" );
	deepEqual( Stem("versinken"), "versink" );
	deepEqual( Stem("versinkt"), "versinkt" );
	deepEqual( Stem("versinnlichung"), "versinnlich" );
	deepEqual( Stem("version"), "version" );
	deepEqual( Stem("versöhnen"), "versohn" );
	deepEqual( Stem("versöhnlichen"), "versohn" );
	deepEqual( Stem("versöhnt"), "versohnt" );
	deepEqual( Stem("versöhnung"), "versohn" );
	deepEqual( Stem("versöhnungsversuch"), "versohnungsversuch" );
	deepEqual( Stem("versorgen"), "versorg" );
	deepEqual( Stem("versorgt"), "versorgt" );
	deepEqual( Stem("versorgten"), "versorgt" );
	deepEqual( Stem("verspart"), "verspart" );
	deepEqual( Stem("verspätet"), "verspatet" );
	deepEqual( Stem("verspätetes"), "verspatet" );
	deepEqual( Stem("verspätung"), "verspat" );
	deepEqual( Stem("verspeist"), "verspeist" );
	deepEqual( Stem("versperren"), "versperr" );
	deepEqual( Stem("versperrt"), "versperrt" );
	deepEqual( Stem("versperrte"), "versperrt" );
	deepEqual( Stem("verspotten"), "verspott" );
	deepEqual( Stem("versprach"), "versprach" );
	deepEqual( Stem("versprachen"), "versprach" );
	deepEqual( Stem("verspreche"), "versprech" );
	deepEqual( Stem("versprechen"), "versprech" );
	deepEqual( Stem("verspricht"), "verspricht" );
	deepEqual( Stem("versprochen"), "versproch" );
	deepEqual( Stem("versprochene"), "versproch" );
	deepEqual( Stem("verspüren"), "verspur" );
	deepEqual( Stem("verspürt"), "verspurt" );
	deepEqual( Stem("verspürte"), "verspurt" );
	deepEqual( Stem("verspürten"), "verspurt" );
	deepEqual( Stem("verstand"), "verstand" );
	deepEqual( Stem("verstande"), "verstand" );
	deepEqual( Stem("verstanden"), "verstand" );
	deepEqual( Stem("verstandes"), "verstand" );
	deepEqual( Stem("verstandesbegriff"), "verstandesbegriff" );
	deepEqual( Stem("verstandesbegriffe"), "verstandesbegriff" );
	deepEqual( Stem("verstandesbegriffen"), "verstandesbegriff" );
	deepEqual( Stem("verstandesbegriffs"), "verstandesbegriff" );
	deepEqual( Stem("verstandesform"), "verstandesform" );
	deepEqual( Stem("verstandesgebiet"), "verstandesgebiet" );
	deepEqual( Stem("verstandesgebietes"), "verstandesgebiet" );
	deepEqual( Stem("verstandesglauben"), "verstandesglaub" );
	deepEqual( Stem("verstandeskräfte"), "verstandeskraft" );
	deepEqual( Stem("verstandeslicht"), "verstandeslicht" );
	deepEqual( Stem("verstandesvermögen"), "verstandesvermog" );
	deepEqual( Stem("verstandesvermögens"), "verstandesvermog" );
	deepEqual( Stem("verstandeswelt"), "verstandeswelt" );
	deepEqual( Stem("verstandeswesen"), "verstandeswes" );
	deepEqual( Stem("verständig"), "verstand" );
	deepEqual( Stem("verständige"), "verstand" );
	deepEqual( Stem("verständigen"), "verstand" );
	deepEqual( Stem("verständiger"), "verstand" );
	deepEqual( Stem("verständiges"), "verstand" );
	deepEqual( Stem("verständigkeit"), "verstand" );
	deepEqual( Stem("verständigste"), "verstand" );
	deepEqual( Stem("verständigt"), "verstandigt" );
	deepEqual( Stem("verständigte"), "verstandigt" );
	deepEqual( Stem("verständigung"), "verstand" );
	deepEqual( Stem("verständlich"), "verstand" );
	deepEqual( Stem("verständlicher"), "verstand" );
	deepEqual( Stem("verständlicherweise"), "verstandlicherweis" );
	deepEqual( Stem("verständlichkeit"), "verstand" );
	deepEqual( Stem("verständnis"), "verstandnis" );
	deepEqual( Stem("verständnisinnig"), "verstandnisinn" );
	deepEqual( Stem("verständnisinnigkeit"), "verstandnisinn" );
	deepEqual( Stem("verständnislosen"), "verstandnislos" );
	deepEqual( Stem("verständnisse"), "verstandnis" );
	deepEqual( Stem("verständnisses"), "verstandnis" );
	deepEqual( Stem("verstandnisvoll"), "verstandnisvoll" );
	deepEqual( Stem("verständnisvoll"), "verstandnisvoll" );
	deepEqual( Stem("verständnisvoller"), "verstandnisvoll" );
	deepEqual( Stem("verstänkert"), "verstankert" );
	deepEqual( Stem("verstärkt"), "verstarkt" );
	deepEqual( Stem("verstärkte"), "verstarkt" );
	deepEqual( Stem("verstärkter"), "verstarkt" );
	deepEqual( Stem("verstatte"), "verstatt" );
	deepEqual( Stem("verstatten"), "verstatt" );
	deepEqual( Stem("verstattet"), "verstattet" );
	deepEqual( Stem("verstecke"), "versteck" );
	deepEqual( Stem("verstecken"), "versteck" );
	deepEqual( Stem("versteckspielen"), "versteckspiel" );
	deepEqual( Stem("versteckt"), "versteckt" );
	deepEqual( Stem("versteckte"), "versteckt" );
	deepEqual( Stem("verstecktes"), "versteckt" );
	deepEqual( Stem("versteh"), "versteh" );
	deepEqual( Stem("verstehe"), "versteh" );
	deepEqual( Stem("verstehen"), "versteh" );
	deepEqual( Stem("verstehens"), "versteh" );
	deepEqual( Stem("verstehet"), "verstehet" );
	deepEqual( Stem("verstehn"), "verstehn" );
	deepEqual( Stem("verstehst"), "versteh" );
	deepEqual( Stem("versteht"), "versteht" );
	deepEqual( Stem("versteigerung"), "versteiger" );
	deepEqual( Stem("versteinert"), "versteinert" );
	deepEqual( Stem("versteinerte"), "versteinert" );
	deepEqual( Stem("verstellen"), "verstell" );
	deepEqual( Stem("verstellte"), "verstellt" );
	deepEqual( Stem("verstellten"), "verstellt" );
	deepEqual( Stem("verstellter"), "verstellt" );
	deepEqual( Stem("verstellung"), "verstell" );
	deepEqual( Stem("verstimmt"), "verstimmt" );
	deepEqual( Stem("verstimmter"), "verstimmt" );
	deepEqual( Stem("verstocke"), "verstock" );
	deepEqual( Stem("verstocken"), "verstock" );
	deepEqual( Stem("verstockt"), "verstockt" );
	deepEqual( Stem("verstockte"), "verstockt" );
	deepEqual( Stem("verstocktes"), "verstockt" );
	deepEqual( Stem("verstocktwerdens"), "verstocktwerd" );
	deepEqual( Stem("verstockung"), "verstock" );
	deepEqual( Stem("verstohlen"), "verstohl" );
	deepEqual( Stem("verstohlener"), "verstohl" );
	deepEqual( Stem("verstopfe"), "verstopf" );
	deepEqual( Stem("verstopfen"), "verstopf" );
	deepEqual( Stem("verstopft"), "verstopft" );
	deepEqual( Stem("verstopfte"), "verstopft" );
	deepEqual( Stem("verstorben"), "verstorb" );
	deepEqual( Stem("verstorbene"), "verstorb" );
	deepEqual( Stem("verstorbenen"), "verstorb" );
	deepEqual( Stem("verstört"), "verstort" );
	deepEqual( Stem("verstörten"), "verstort" );
	deepEqual( Stem("verstörtes"), "verstort" );
	deepEqual( Stem("verstösse"), "verstoss" );
	deepEqual( Stem("verstossen"), "verstoss" );
	deepEqual( Stem("verstoßen"), "verstoss" );
	deepEqual( Stem("verstossenen"), "verstoss" );
	deepEqual( Stem("verstossener"), "verstoss" );
	deepEqual( Stem("verstossung"), "verstoss" );
	deepEqual( Stem("verstoßung"), "verstoss" );
	deepEqual( Stem("verstreichen"), "verstreich" );
	deepEqual( Stem("verstummte"), "verstummt" );
	deepEqual( Stem("verstummten"), "verstummt" );
	deepEqual( Stem("verstünde"), "verstund" );
	deepEqual( Stem("versuch"), "versuch" );
	deepEqual( Stem("versuche"), "versuch" );
	deepEqual( Stem("versuchen"), "versuch" );
	deepEqual( Stem("versuchend"), "versuch" );
	deepEqual( Stem("versuchsweise"), "versuchsweis" );
	deepEqual( Stem("versucht"), "versucht" );
	deepEqual( Stem("versuchte"), "versucht" );
	deepEqual( Stem("versuchten"), "versucht" );
	deepEqual( Stem("versuchteste"), "versucht" );
	deepEqual( Stem("versuchung"), "versuch" );
	deepEqual( Stem("versuchungen"), "versuch" );
	deepEqual( Stem("versuchungsschmerzen"), "versuchungsschmerz" );
	deepEqual( Stem("versündigt"), "versundigt" );
	deepEqual( Stem("versunken"), "versunk" );
	deepEqual( Stem("versunkene"), "versunk" );
	deepEqual( Stem("versunkenes"), "versunk" );
	deepEqual( Stem("vertäfelung"), "vertafel" );
	deepEqual( Stem("vertauschen"), "vertausch" );
	deepEqual( Stem("vertauscht"), "vertauscht" );
	deepEqual( Stem("vertausendfacht"), "vertausendfacht" );
	deepEqual( Stem("verteidige"), "verteid" );
	deepEqual( Stem("verteidigen"), "verteid" );
	deepEqual( Stem("verteidiger"), "verteid" );
	deepEqual( Stem("verteidigern"), "verteid" );
	deepEqual( Stem("verteidigt"), "verteidigt" );
	deepEqual( Stem("verteidigte"), "verteidigt" );
	deepEqual( Stem("verteidigung"), "verteid" );
	deepEqual( Stem("verteidigungsschrift"), "verteidigungsschrift" );
	deepEqual( Stem("verteilen"), "verteil" );
	deepEqual( Stem("verteilt"), "verteilt" );
	deepEqual( Stem("verteilungsgerechtigkeit"), "verteilungsgerecht" );
	deepEqual( Stem("verteuerung"), "verteuer" );
	deepEqual( Stem("vertiefen"), "vertief" );
	deepEqual( Stem("vertieft"), "vertieft" );
	deepEqual( Stem("vertiefte"), "vertieft" );
	deepEqual( Stem("vertiefung"), "vertief" );
	deepEqual( Stem("vertilge"), "vertilg" );
	deepEqual( Stem("vertilgen"), "vertilg" );
	deepEqual( Stem("vertilgt"), "vertilgt" );
	deepEqual( Stem("vertilgte"), "vertilgt" );
	deepEqual( Stem("vertilgung"), "vertilg" );
	deepEqual( Stem("vertrackt"), "vertrackt" );
	deepEqual( Stem("vertrackten"), "vertrackt" );
	deepEqual( Stem("vertrag"), "vertrag" );
	deepEqual( Stem("vertragen"), "vertrag" );
	deepEqual( Stem("vertrages"), "vertrag" );
	deepEqual( Stem("verträglich"), "vertrag" );
	deepEqual( Stem("vertragsbestimmungen"), "vertragsbestimm" );
	deepEqual( Stem("vertragsmässig"), "vertragsmass" );
	deepEqual( Stem("vertragsmässige"), "vertragsmass" );
	deepEqual( Stem("verträgt"), "vertragt" );
	deepEqual( Stem("vertraten"), "vertrat" );
	deepEqual( Stem("vertraue"), "vertrau" );
	deepEqual( Stem("vertrauen"), "vertrau" );
	deepEqual( Stem("vertrauensmann"), "vertrauensmann" );
	deepEqual( Stem("vertraulich"), "vertraulich" );
	deepEqual( Stem("verträulich"), "vertraulich" );
	deepEqual( Stem("vertrauliche"), "vertraulich" );
	deepEqual( Stem("vertrauliches"), "vertraulich" );
	deepEqual( Stem("verträumten"), "vertraumt" );
	deepEqual( Stem("vertraut"), "vertraut" );
	deepEqual( Stem("vertraute"), "vertraut" );
	deepEqual( Stem("vertrauten"), "vertraut" );
	deepEqual( Stem("vertrauter"), "vertraut" );
	deepEqual( Stem("vertrautester"), "vertraut" );
	deepEqual( Stem("vertreiben"), "vertreib" );
	deepEqual( Stem("vertreibenden"), "vertreib" );
	deepEqual( Stem("vertreibung"), "vertreib" );
	deepEqual( Stem("vertreter"), "vertret" );
	deepEqual( Stem("vertretern"), "vertret" );
	deepEqual( Stem("vertretung"), "vertret" );
	deepEqual( Stem("vertrieb"), "vertrieb" );
	deepEqual( Stem("vertrieben"), "vertrieb" );
	deepEqual( Stem("vertriebenen"), "vertrieb" );
	deepEqual( Stem("vertrocknen"), "vertrockn" );
	deepEqual( Stem("vertrocknet"), "vertrocknet" );
	deepEqual( Stem("vertrockneten"), "vertrocknet" );
	deepEqual( Stem("vertrödeln"), "vertrodeln" );
	deepEqual( Stem("vertrösten"), "vertrost" );
	deepEqual( Stem("vertröstete"), "vertrostet" );
	deepEqual( Stem("vertrug"), "vertrug" );
	deepEqual( Stem("vertrunkenen"), "vertrunk" );
	deepEqual( Stem("vertuschen"), "vertusch" );
	deepEqual( Stem("verüben"), "verub" );
	deepEqual( Stem("verübt"), "verubt" );
	deepEqual( Stem("verübte"), "verubt" );
	deepEqual( Stem("verulamio"), "verulamio" );
	deepEqual( Stem("verunglückt"), "verungluckt" );
	deepEqual( Stem("verunglückten"), "verungluckt" );
	deepEqual( Stem("verunreinigen"), "verunrein" );
	deepEqual( Stem("verunreinigt"), "verunreinigt" );
	deepEqual( Stem("verunreinigungen"), "verunrein" );
	deepEqual( Stem("verunsichert"), "verunsichert" );
	deepEqual( Stem("verunstalten"), "verunstalt" );
	deepEqual( Stem("verunstaltet"), "verunstaltet" );
	deepEqual( Stem("verursache"), "verursach" );
	deepEqual( Stem("verursachen"), "verursach" );
	deepEqual( Stem("verursacht"), "verursacht" );
	deepEqual( Stem("verursachte"), "verursacht" );
	deepEqual( Stem("verurteilt"), "verurteilt" );
	deepEqual( Stem("verurteilung"), "verurteil" );
	deepEqual( Stem("vervielfältigen"), "vervielfalt" );
	deepEqual( Stem("vervielfältigend"), "vervielfalt" );
	deepEqual( Stem("vervielfältigt"), "vervielfaltigt" );
	deepEqual( Stem("vervielfältigten"), "vervielfaltigt" );
	deepEqual( Stem("vervielfältigungen"), "vervielfalt" );
	deepEqual( Stem("vervollkommnen"), "vervollkommn" );
	deepEqual( Stem("vervollkommnet"), "vervollkommnet" );
	deepEqual( Stem("vervollständigen"), "vervollstand" );
	deepEqual( Stem("verwahrt"), "verwahrt" );
	deepEqual( Stem("verwahrte"), "verwahrt" );
	deepEqual( Stem("verwahrung"), "verwahr" );
	deepEqual( Stem("verwaist"), "verwaist" );
	deepEqual( Stem("verwalten"), "verwalt" );
	deepEqual( Stem("verwaltend"), "verwalt" );
	deepEqual( Stem("verwaltenden"), "verwalt" );
	deepEqual( Stem("verwalter"), "verwalt" );
	deepEqual( Stem("verwaltete"), "verwaltet" );
	deepEqual( Stem("verwaltung"), "verwalt" );
	deepEqual( Stem("verwaltungen"), "verwalt" );
	deepEqual( Stem("verwaltungsmann"), "verwaltungsmann" );
	deepEqual( Stem("verwaltungsräte"), "verwaltungsrat" );
	deepEqual( Stem("verwaltungsrechnung"), "verwaltungsrechn" );
	deepEqual( Stem("verwandeln"), "verwandeln" );
	deepEqual( Stem("verwandelt"), "verwandelt" );
	deepEqual( Stem("verwandelte"), "verwandelt" );
	deepEqual( Stem("verwandelten"), "verwandelt" );
	deepEqual( Stem("verwandle"), "verwandl" );
	deepEqual( Stem("verwandlung"), "verwandl" );
	deepEqual( Stem("verwandt"), "verwandt" );
	deepEqual( Stem("verwandte"), "verwandt" );
	deepEqual( Stem("verwandten"), "verwandt" );
	deepEqual( Stem("verwandter"), "verwandt" );
	deepEqual( Stem("verwandtschaft"), "verwandtschaft" );
	deepEqual( Stem("verwandtschaften"), "verwandtschaft" );
	deepEqual( Stem("verwandtschaftsverhältnissen"), "verwandtschaftsverhaltnis" );
	deepEqual( Stem("verwarf"), "verwarf" );
	deepEqual( Stem("verwarfen"), "verwarf" );
	deepEqual( Stem("verwaschen"), "verwasch" );
	deepEqual( Stem("verwaschenen"), "verwasch" );
	deepEqual( Stem("verwaschenes"), "verwasch" );
	deepEqual( Stem("verwässert"), "verwassert" );
	deepEqual( Stem("verwebt"), "verwebt" );
	deepEqual( Stem("verwechselt"), "verwechselt" );
	deepEqual( Stem("verwechselten"), "verwechselt" );
	deepEqual( Stem("verwegen"), "verweg" );
	deepEqual( Stem("verwegene"), "verweg" );
	deepEqual( Stem("verwegenen"), "verweg" );
	deepEqual( Stem("verwehenden"), "verweh" );
	deepEqual( Stem("verwehrt"), "verwehrt" );
	deepEqual( Stem("verweht"), "verweht" );
	deepEqual( Stem("verwehten"), "verweht" );
	deepEqual( Stem("verweichlichen"), "verweich" );
	deepEqual( Stem("verweigern"), "verweig" );
	deepEqual( Stem("verweigert"), "verweigert" );
	deepEqual( Stem("verweigerte"), "verweigert" );
	deepEqual( Stem("verweigerten"), "verweigert" );
	deepEqual( Stem("verweigerung"), "verweiger" );
	deepEqual( Stem("verweilen"), "verweil" );
	deepEqual( Stem("verweilt"), "verweilt" );
	deepEqual( Stem("verweilte"), "verweilt" );
	deepEqual( Stem("verweinte"), "verweint" );
	deepEqual( Stem("verweis"), "verweis" );
	deepEqual( Stem("verweise"), "verweis" );
	deepEqual( Stem("verweisend"), "verweis" );
	deepEqual( Stem("verweist"), "verweist" );
	deepEqual( Stem("verweisung"), "verweis" );
	deepEqual( Stem("verwelken"), "verwelk" );
	deepEqual( Stem("verwelkt"), "verwelkt" );
	deepEqual( Stem("verwenden"), "verwend" );
	deepEqual( Stem("verwendet"), "verwendet" );
	deepEqual( Stem("verwendete"), "verwendet" );
	deepEqual( Stem("verwendeten"), "verwendet" );
	deepEqual( Stem("verwendung"), "verwend" );
	deepEqual( Stem("verwerfen"), "verwerf" );
	deepEqual( Stem("verwerfung"), "verwerf" );
	deepEqual( Stem("verwickeln"), "verwickeln" );
	deepEqual( Stem("verwickelt"), "verwickelt" );
	deepEqual( Stem("verwickelte"), "verwickelt" );
	deepEqual( Stem("verwickelten"), "verwickelt" );
	deepEqual( Stem("verwickelter"), "verwickelt" );
	deepEqual( Stem("verwiesen"), "verwies" );
	deepEqual( Stem("verwilderte"), "verwildert" );
	deepEqual( Stem("verwildertem"), "verwildert" );
	deepEqual( Stem("verwilderten"), "verwildert" );
	deepEqual( Stem("verwildertes"), "verwildert" );
	deepEqual( Stem("verwilderung"), "verwilder" );
	deepEqual( Stem("verwinden"), "verwind" );
	deepEqual( Stem("verwirft"), "verwirft" );
	deepEqual( Stem("verwirklicht"), "verwirklicht" );
	deepEqual( Stem("verwirklichung"), "verwirklich" );
	deepEqual( Stem("verwirren"), "verwirr" );
	deepEqual( Stem("verwirrende"), "verwirr" );
	deepEqual( Stem("verwirret"), "verwirret" );
	deepEqual( Stem("verwirrt"), "verwirrt" );
	deepEqual( Stem("verwirrte"), "verwirrt" );
	deepEqual( Stem("verwirrtem"), "verwirrt" );
	deepEqual( Stem("verwirrten"), "verwirrt" );
	deepEqual( Stem("verwirrung"), "verwirr" );
	deepEqual( Stem("verwirrungen"), "verwirr" );
	deepEqual( Stem("verwirrungsrecht"), "verwirrungsrecht" );
	deepEqual( Stem("verwischt"), "verwischt" );
	deepEqual( Stem("verwittert"), "verwittert" );
	deepEqual( Stem("verwitterte"), "verwittert" );
	deepEqual( Stem("verwitterter"), "verwittert" );
	deepEqual( Stem("verwittertes"), "verwittert" );
	deepEqual( Stem("verworfen"), "verworf" );
	deepEqual( Stem("verworfene"), "verworf" );
	deepEqual( Stem("verworfnen"), "verworfn" );
	deepEqual( Stem("verworrene"), "verworr" );
	deepEqual( Stem("verworrenen"), "verworr" );
	deepEqual( Stem("verworrenes"), "verworr" );
	deepEqual( Stem("verwucherten"), "verwuchert" );
	deepEqual( Stem("verwunden"), "verwund" );
	deepEqual( Stem("verwunderlicher"), "verwund" );
	deepEqual( Stem("verwundern"), "verwund" );
	deepEqual( Stem("verwundert"), "verwundert" );
	deepEqual( Stem("verwunderten"), "verwundert" );
	deepEqual( Stem("verwunderung"), "verwunder" );
	deepEqual( Stem("verwundet"), "verwundet" );
	deepEqual( Stem("verwundr"), "verwundr" );
	deepEqual( Stem("verwunschenen"), "verwunsch" );
	deepEqual( Stem("verwünschte"), "verwunscht" );
	deepEqual( Stem("verwünschten"), "verwunscht" );
	deepEqual( Stem("verwünschungen"), "verwunsch" );
	deepEqual( Stem("verwüste"), "verwust" );
	deepEqual( Stem("verwüsten"), "verwust" );
	deepEqual( Stem("verwüstende"), "verwust" );
	deepEqual( Stem("verwüster"), "verwust" );
	deepEqual( Stem("verwüstet"), "verwustet" );
	deepEqual( Stem("verwüstete"), "verwustet" );
	deepEqual( Stem("verwüsteten"), "verwustet" );
	deepEqual( Stem("verwüstung"), "verwust" );
	deepEqual( Stem("verwüstungen"), "verwust" );
	deepEqual( Stem("verzagen"), "verzag" );
	deepEqual( Stem("verzagt"), "verzagt" );
	deepEqual( Stem("verzagte"), "verzagt" );
	deepEqual( Stem("verzählen"), "verzahl" );
	deepEqual( Stem("verzählt"), "verzahlt" );
	deepEqual( Stem("verzäuner"), "verzaun" );
	deepEqual( Stem("verzehren"), "verzehr" );
	deepEqual( Stem("verzehrende"), "verzehr" );
	deepEqual( Stem("verzehrenden"), "verzehr" );
	deepEqual( Stem("verzehrender"), "verzehr" );
	deepEqual( Stem("verzehrendes"), "verzehr" );
	deepEqual( Stem("verzehrer"), "verzehr" );
	deepEqual( Stem("verzehret"), "verzehret" );
	deepEqual( Stem("verzehrt"), "verzehrt" );
	deepEqual( Stem("verzehrte"), "verzehrt" );
	deepEqual( Stem("verzehrten"), "verzehrt" );
	deepEqual( Stem("verzeichnen"), "verzeichn" );
	deepEqual( Stem("verzeichnet"), "verzeichnet" );
	deepEqual( Stem("verzeichnete"), "verzeichnet" );
	deepEqual( Stem("verzeichnis"), "verzeichnis" );
	deepEqual( Stem("verzeih"), "verzeih" );
	deepEqual( Stem("verzeihen"), "verzeih" );
	deepEqual( Stem("verzeihliche"), "verzeih" );
	deepEqual( Stem("verzeihst"), "verzeih" );
	deepEqual( Stem("verzeiht"), "verzeiht" );
	deepEqual( Stem("verzeihung"), "verzeih" );
	deepEqual( Stem("verzerrten"), "verzerrt" );
	deepEqual( Stem("verzicht"), "verzicht" );
	deepEqual( Stem("verzichten"), "verzicht" );
	deepEqual( Stem("verzichtet"), "verzichtet" );
	deepEqual( Stem("verzichtete"), "verzichtet" );
	deepEqual( Stem("verzieh"), "verzieh" );
	deepEqual( Stem("verziehen"), "verzieh" );
	deepEqual( Stem("verziert"), "verziert" );
	deepEqual( Stem("verzierte"), "verziert" );
	deepEqual( Stem("verzierungen"), "verzier" );
	deepEqual( Stem("verzog"), "verzog" );
	deepEqual( Stem("verzogen"), "verzog" );
	deepEqual( Stem("verzogene"), "verzog" );
	deepEqual( Stem("verzögert"), "verzogert" );
	deepEqual( Stem("verzögerte"), "verzogert" );
	deepEqual( Stem("verzweifelt"), "verzweifelt" );
	deepEqual( Stem("verzweifelte"), "verzweifelt" );
	deepEqual( Stem("verzweifelten"), "verzweifelt" );
	deepEqual( Stem("verzweifeltsten"), "verzweifelt" );
	deepEqual( Stem("verzweiflung"), "verzweifl" );
	deepEqual( Stem("verzweiflungsvolles"), "verzweiflungsvoll" );
	deepEqual( Stem("verzwickten"), "verzwickt" );
	deepEqual( Stem("vesperbrote"), "vesperbrot" );
	deepEqual( Stem("vesperkaffees"), "vesperkaffe" );
	deepEqual( Stem("vestalinnen"), "vestalinn" );
	deepEqual( Stem("vesuvius"), "vesuvius" );
	deepEqual( Stem("veterinärschul"), "veterinarschul" );
	deepEqual( Stem("veto"), "veto" );
	deepEqual( Stem("vetsch"), "vetsch" );
	deepEqual( Stem("vetter"), "vett" );
	deepEqual( Stem("vetters"), "vett" );
	deepEqual( Stem("vexieren"), "vexi" );
	deepEqual( Stem("vexiergasse"), "vexiergass" );
	deepEqual( Stem("vfb"), "vfb" );
	deepEqual( Stem("vi"), "vi" );
	deepEqual( Stem("vicomtesse"), "vicomtess" );
	deepEqual( Stem("victory"), "victory" );
	deepEqual( Stem("vide"), "vid" );
	deepEqual( Stem("videofilmer"), "videofilm" );
	deepEqual( Stem("videokamera"), "videokamera" );
	deepEqual( Stem("viecherl"), "viecherl" );
	deepEqual( Stem("vieh"), "vieh" );
	deepEqual( Stem("viehhandel"), "viehhandel" );
	deepEqual( Stem("viehherden"), "viehherd" );
	deepEqual( Stem("viehhürdenbewohner"), "viehhurdenbewohn" );
	deepEqual( Stem("viehs"), "vieh" );
	deepEqual( Stem("viehzucht"), "viehzucht" );
	deepEqual( Stem("viel"), "viel" );
	deepEqual( Stem("vielbesucht"), "vielbesucht" );
	deepEqual( Stem("viele"), "viel" );
	deepEqual( Stem("vielem"), "viel" );
	deepEqual( Stem("vielen"), "viel" );
	deepEqual( Stem("vieler"), "viel" );
	deepEqual( Stem("vielerlei"), "vielerlei" );
	deepEqual( Stem("vieles"), "viel" );
	deepEqual( Stem("vielfach"), "vielfach" );
	deepEqual( Stem("vielfache"), "vielfach" );
	deepEqual( Stem("vielfaches"), "vielfach" );
	deepEqual( Stem("vielfalt"), "vielfalt" );
	deepEqual( Stem("vielfältig"), "vielfalt" );
	deepEqual( Stem("vielfältige"), "vielfalt" );
	deepEqual( Stem("vielfältiger"), "vielfalt" );
	deepEqual( Stem("vielgestaltige"), "vielgestalt" );
	deepEqual( Stem("vielgewordene"), "vielgeword" );
	deepEqual( Stem("vieljährige"), "vieljahr" );
	deepEqual( Stem("vielköpfigen"), "vielkopf" );
	deepEqual( Stem("vielle"), "viell" );
	deepEqual( Stem("vielleicht"), "vielleicht" );
	deepEqual( Stem("vielmals"), "vielmal" );
	deepEqual( Stem("vielmehr"), "vielmehr" );
	deepEqual( Stem("vielverschlungenen"), "vielverschl" );
	deepEqual( Stem("vielweniger"), "vielwen" );
	deepEqual( Stem("vier"), "vier" );
	deepEqual( Stem("viereckig"), "viereck" );
	deepEqual( Stem("viereckigen"), "viereck" );
	deepEqual( Stem("viereckiger"), "viereck" );
	deepEqual( Stem("viereinhalb"), "viereinhalb" );
	deepEqual( Stem("vieren"), "vier" );
	deepEqual( Stem("vierhundertdrei"), "vierhundertdrei" );
	deepEqual( Stem("vierhundertdreissig"), "vierhundertdreiss" );
	deepEqual( Stem("vierhundertdreißig"), "vierhundertdreiss" );
	deepEqual( Stem("vierhundertertundzweimal"), "vierhundertertundzweimal" );
	deepEqual( Stem("vierjährigen"), "vierjahr" );
	deepEqual( Stem("vierköpfige"), "vierkopf" );
	deepEqual( Stem("viermal"), "viermal" );
	deepEqual( Stem("vierschrötige"), "vierschrot" );
	deepEqual( Stem("vierspännige"), "vierspann" );
	deepEqual( Stem("vierspännigen"), "vierspann" );
	deepEqual( Stem("vierstündige"), "vierstund" );
	deepEqual( Stem("viertägige"), "viertag" );
	deepEqual( Stem("vierte"), "viert" );
	deepEqual( Stem("viertel"), "viertel" );
	deepEqual( Stem("vierteljahr"), "vierteljahr" );
	deepEqual( Stem("vierteljährchen"), "vierteljahrch" );
	deepEqual( Stem("vierteljahrhundert"), "vierteljahrhundert" );
	deepEqual( Stem("viertelstündchen"), "viertelstundch" );
	deepEqual( Stem("viertelstunde"), "viertelstund" );
	deepEqual( Stem("viertelstündl"), "viertelstundl" );
	deepEqual( Stem("viertelswandseite"), "viertelswandseit" );
	deepEqual( Stem("vierten"), "viert" );
	deepEqual( Stem("viertes"), "viert" );
	deepEqual( Stem("vierunddreißig"), "vierunddreiss" );
	deepEqual( Stem("vierundzwanzig"), "vierundzwanz" );
	deepEqual( Stem("vierundzwanzigstündiger"), "vierundzwanzigstund" );
	deepEqual( Stem("vierzehn"), "vierzehn" );
	deepEqual( Stem("vierzehnten"), "vierzehnt" );
	deepEqual( Stem("vierzig"), "vierzig" );
	deepEqual( Stem("vierzigjähriger"), "vierzigjahr" );
	deepEqual( Stem("vierzigste"), "vierzig" );
	deepEqual( Stem("vii"), "vii" );
	deepEqual( Stem("viii"), "viii" );
	deepEqual( Stem("villarson"), "villarson" );
	deepEqual( Stem("vim"), "vim" );
	deepEqual( Stem("violettes"), "violett" );
	deepEqual( Stem("viper"), "vip" );
	deepEqual( Stem("vipern"), "vip" );
	deepEqual( Stem("vipernarten"), "vipernart" );
	deepEqual( Stem("virginien"), "virgini" );
	deepEqual( Stem("virtuelle"), "virtuell" );
	deepEqual( Stem("virtuosen"), "virtuos" );
	deepEqual( Stem("visiers"), "visi" );
	deepEqual( Stem("vision"), "vision" );
	deepEqual( Stem("visir"), "visir" );
	deepEqual( Stem("visit"), "visit" );
	deepEqual( Stem("visitenstuben"), "visitenstub" );
	deepEqual( Stem("vita"), "vita" );
	deepEqual( Stem("vital"), "vital" );
	deepEqual( Stem("vitale"), "vital" );
	deepEqual( Stem("vitalen"), "vital" );
	deepEqual( Stem("vitaler"), "vital" );
	deepEqual( Stem("vitalitat"), "vitalitat" );
	deepEqual( Stem("vitalität"), "vitalitat" );
	deepEqual( Stem("vitaminreiche"), "vitaminreich" );
	deepEqual( Stem("vitium"), "vitium" );
	deepEqual( Stem("vivificandum"), "vivificandum" );
	deepEqual( Stem("vogel"), "vogel" );
	deepEqual( Stem("vögel"), "vogel" );
	deepEqual( Stem("vogelbeerbüscheln"), "vogelbeerbuscheln" );
	deepEqual( Stem("vogelbeeren"), "vogelbe" );
	deepEqual( Stem("vögelchen"), "vogelch" );
	deepEqual( Stem("vögeln"), "vogeln" );
	deepEqual( Stem("vogels"), "vogel" );
	deepEqual( Stem("vogelstellers"), "vogelstell" );
	deepEqual( Stem("vogelstimmen"), "vogelstimm" );
	deepEqual( Stem("vöglein"), "voglein" );
	deepEqual( Stem("vögte"), "vogt" );
	deepEqual( Stem("vögten"), "vogt" );
	deepEqual( Stem("vokabeln"), "vokabeln" );
	deepEqual( Stem("vokabular"), "vokabular" );
	deepEqual( Stem("vokativ"), "vokativ" );
	deepEqual( Stem("vokative"), "vokativ" );
	deepEqual( Stem("volcker"), "volck" );
	deepEqual( Stem("volk"), "volk" );
	deepEqual( Stem("völkchen"), "volkch" );
	deepEqual( Stem("volke"), "volk" );
	deepEqual( Stem("völker"), "volk" );
	deepEqual( Stem("völkern"), "volk" );
	deepEqual( Stem("völkerschaft"), "volkerschaft" );
	deepEqual( Stem("völkerschaften"), "volkerschaft" );
	deepEqual( Stem("völkerstrich"), "volkerstrich" );
	deepEqual( Stem("völkerwanderung"), "volkerwander" );
	deepEqual( Stem("volkes"), "volk" );
	deepEqual( Stem("völklein"), "volklein" );
	deepEqual( Stem("volks"), "volk" );
	deepEqual( Stem("volksfest"), "volksf" );
	deepEqual( Stem("volkskircheflavio"), "volkskircheflavio" );
	deepEqual( Stem("volksliedchen"), "volksliedch" );
	deepEqual( Stem("volkslieder"), "volkslied" );
	deepEqual( Stem("volksliedes"), "volkslied" );
	deepEqual( Stem("volkssänger"), "volkssang" );
	deepEqual( Stem("volksversammlung"), "volksversamml" );
	deepEqual( Stem("volksweisen"), "volksweis" );
	deepEqual( Stem("voll"), "voll" );
	deepEqual( Stem("vollauf"), "vollauf" );
	deepEqual( Stem("vollbart"), "vollbart" );
	deepEqual( Stem("vollbesetzt"), "vollbesetzt" );
	deepEqual( Stem("vollbestand"), "vollbestand" );
	deepEqual( Stem("vollbracht"), "vollbracht" );
	deepEqual( Stem("vollbrachte"), "vollbracht" );
	deepEqual( Stem("vollbrachten"), "vollbracht" );
	deepEqual( Stem("vollbrachter"), "vollbracht" );
	deepEqual( Stem("vollbrachtes"), "vollbracht" );
	deepEqual( Stem("vollbringen"), "vollbring" );
	deepEqual( Stem("vollbringung"), "vollbring" );
	deepEqual( Stem("volle"), "voll" );
	deepEqual( Stem("vollem"), "voll" );
	deepEqual( Stem("vollen"), "voll" );
	deepEqual( Stem("vollenden"), "vollend" );
	deepEqual( Stem("vollendet"), "vollendet" );
	deepEqual( Stem("vollendete"), "vollendet" );
	deepEqual( Stem("vollendeten"), "vollendet" );
	deepEqual( Stem("vollends"), "vollend" );
	deepEqual( Stem("vollendung"), "vollend" );
	deepEqual( Stem("voller"), "voll" );
	deepEqual( Stem("völlerei"), "vollerei" );
	deepEqual( Stem("vollführt"), "vollfuhrt" );
	deepEqual( Stem("vollführte"), "vollfuhrt" );
	deepEqual( Stem("vollgepfropften"), "vollgepfropft" );
	deepEqual( Stem("vollgestopft"), "vollgestopft" );
	deepEqual( Stem("völlig"), "vollig" );
	deepEqual( Stem("völlige"), "vollig" );
	deepEqual( Stem("völligem"), "vollig" );
	deepEqual( Stem("völligen"), "vollig" );
	deepEqual( Stem("völliger"), "vollig" );
	deepEqual( Stem("vollkommen"), "vollkomm" );
	deepEqual( Stem("vollkommene"), "vollkomm" );
	deepEqual( Stem("vollkommenen"), "vollkomm" );
	deepEqual( Stem("vollkommener"), "vollkomm" );
	deepEqual( Stem("vollkommenere"), "vollkommen" );
	deepEqual( Stem("vollkommeneren"), "vollkommen" );
	deepEqual( Stem("vollkommenerer"), "vollkommen" );
	deepEqual( Stem("vollkommeneres"), "vollkommen" );
	deepEqual( Stem("vollkommenheit"), "vollkomm" );
	deepEqual( Stem("vollkommenheiten"), "vollkomm" );
	deepEqual( Stem("vollkommenste"), "vollkommen" );
	deepEqual( Stem("vollkommensten"), "vollkommen" );
	deepEqual( Stem("vollmacht"), "vollmacht" );
	deepEqual( Stem("vollmond"), "vollmond" );
	deepEqual( Stem("vollständig"), "vollstand" );
	deepEqual( Stem("vollständige"), "vollstand" );
	deepEqual( Stem("vollständigen"), "vollstand" );
	deepEqual( Stem("vollständiger"), "vollstand" );
	deepEqual( Stem("vollständiges"), "vollstand" );
	deepEqual( Stem("vollständigkeit"), "vollstand" );
	deepEqual( Stem("vollsten"), "voll" );
	deepEqual( Stem("vollster"), "voll" );
	deepEqual( Stem("vollstreckung"), "vollstreck" );
	deepEqual( Stem("vollzählig"), "vollzahl" );
	deepEqual( Stem("vollziehend"), "vollzieh" );
	deepEqual( Stem("vollziehest"), "vollzieh" );
	deepEqual( Stem("vollzogen"), "vollzog" );
	deepEqual( Stem("vollzupacken"), "vollzupack" );
	deepEqual( Stem("voluntaria"), "voluntaria" );
	deepEqual( Stem("voluntarium"), "voluntarium" );
	deepEqual( Stem("vom"), "vom" );
	deepEqual( Stem("von"), "von" );
	deepEqual( Stem("voneinander"), "voneinand" );
	deepEqual( Stem("vonstatten"), "vonstatt" );
	deepEqual( Stem("vor"), "vor" );
	deepEqual( Stem("vorabend"), "vorab" );
	deepEqual( Stem("vorabendan"), "vorabendan" );
	deepEqual( Stem("voran"), "voran" );
	deepEqual( Stem("vorangehen"), "vorangeh" );
	deepEqual( Stem("vorangeht"), "vorangeht" );
	deepEqual( Stem("vorangestellt"), "vorangestellt" );
	deepEqual( Stem("voranging"), "voranging" );
	deepEqual( Stem("voranschickung"), "voranschick" );
	deepEqual( Stem("voranstellte"), "voranstellt" );
	deepEqual( Stem("vorantrug"), "vorantrug" );
	deepEqual( Stem("voranzuschicken"), "voranzuschick" );
	deepEqual( Stem("voraus"), "voraus" );
	deepEqual( Stem("vorausfliegen"), "vorausflieg" );
	deepEqual( Stem("vorausgefahrenen"), "vorausgefahr" );
	deepEqual( Stem("vorausgehen"), "vorausgeh" );
	deepEqual( Stem("vorausgehende"), "vorausgeh" );
	deepEqual( Stem("vorausgeht"), "vorausgeht" );
	deepEqual( Stem("vorausgeigen"), "vorausgeig" );
	deepEqual( Stem("vorausgesagt"), "vorausgesagt" );
	deepEqual( Stem("vorausgeschickt"), "vorausgeschickt" );
	deepEqual( Stem("vorausgeschickten"), "vorausgeschickt" );
	deepEqual( Stem("vorausgesehen"), "vorausgeseh" );
	deepEqual( Stem("vorausgesetzt"), "vorausgesetzt" );
	deepEqual( Stem("vorausnehmen"), "vorausnehm" );
	deepEqual( Stem("voraussah"), "voraussah" );
	deepEqual( Stem("voraussahen"), "voraussah" );
	deepEqual( Stem("voraussehen"), "vorausseh" );
	deepEqual( Stem("voraussetze"), "voraussetz" );
	deepEqual( Stem("voraussetzen"), "voraussetz" );
	deepEqual( Stem("voraussetzet"), "voraussetzet" );
	deepEqual( Stem("voraussetzt"), "voraussetzt" );
	deepEqual( Stem("voraussetzte"), "voraussetzt" );
	deepEqual( Stem("voraussetzung"), "voraussetz" );
	deepEqual( Stem("voraussetzungen"), "voraussetz" );
	deepEqual( Stem("voraussicht"), "voraussicht" );
	deepEqual( Stem("voraussichtlich"), "voraussicht" );
	deepEqual( Stem("vorauswissen"), "vorauswiss" );
	deepEqual( Stem("vorauszufahren"), "vorauszufahr" );
	deepEqual( Stem("vorauszuschickenden"), "vorauszuschick" );
	deepEqual( Stem("vorauszusehen"), "vorauszuseh" );
	deepEqual( Stem("vorauszusetzen"), "vorauszusetz" );
	deepEqual( Stem("vorbedacht"), "vorbedacht" );
	deepEqual( Stem("vorbedachten"), "vorbedacht" );
	deepEqual( Stem("vorbei"), "vorbei" );
	deepEqual( Stem("vorbeigehn"), "vorbeigehn" );
	deepEqual( Stem("vorbeikam"), "vorbeikam" );
	deepEqual( Stem("vorbeireitens"), "vorbeireit" );
	deepEqual( Stem("vorbeistob"), "vorbeistob" );
	deepEqual( Stem("vorbeizogen"), "vorbeizog" );
	deepEqual( Stem("vorbemerkungen"), "vorbemerk" );
	deepEqual( Stem("vorbereitender"), "vorbereit" );
	deepEqual( Stem("vorbereitet"), "vorbereitet" );
	deepEqual( Stem("vorbereitete"), "vorbereitet" );
	deepEqual( Stem("vorbereitung"), "vorbereit" );
	deepEqual( Stem("vorbereitungen"), "vorbereit" );
	deepEqual( Stem("vorberg"), "vorberg" );
	deepEqual( Stem("vorbestimmt"), "vorbestimmt" );
	deepEqual( Stem("vorbeugen"), "vorbeug" );
	deepEqual( Stem("vorbild"), "vorbild" );
	deepEqual( Stem("vorbilde"), "vorbild" );
	deepEqual( Stem("vorbilden"), "vorbild" );
	deepEqual( Stem("vorbildende"), "vorbild" );
	deepEqual( Stem("vorbilder"), "vorbild" );
	deepEqual( Stem("vorbildern"), "vorbild" );
	deepEqual( Stem("vorbildet"), "vorbildet" );
	deepEqual( Stem("vorbildete"), "vorbildet" );
	deepEqual( Stem("vorbildeten"), "vorbildet" );
	deepEqual( Stem("vorbildlich"), "vorbild" );
	deepEqual( Stem("vorbildliche"), "vorbild" );
	deepEqual( Stem("vorbildlichen"), "vorbild" );
	deepEqual( Stem("vorbildliches"), "vorbild" );
	deepEqual( Stem("vorbildung"), "vorbild" );
	deepEqual( Stem("vorbildungen"), "vorbild" );
	deepEqual( Stem("vorbrachte"), "vorbracht" );
	deepEqual( Stem("vorbrechenden"), "vorbrech" );
	deepEqual( Stem("vorbringen"), "vorbring" );
	deepEqual( Stem("vordem"), "vord" );
	deepEqual( Stem("vordere"), "vord" );
	deepEqual( Stem("vorderen"), "vord" );
	deepEqual( Stem("vordergrund"), "vordergrund" );
	deepEqual( Stem("vorderhand"), "vorderhand" );
	deepEqual( Stem("vorderkrällchen"), "vorderkrallch" );
	deepEqual( Stem("vorderriss"), "vorderriss" );
	deepEqual( Stem("vordersten"), "vorderst" );
	deepEqual( Stem("vorderster"), "vorderst" );
	deepEqual( Stem("vordringen"), "vordring" );
	deepEqual( Stem("voreilig"), "voreil" );
	deepEqual( Stem("voreiligen"), "voreil" );
	deepEqual( Stem("voreinander"), "voreinand" );
	deepEqual( Stem("voreingenommenheit"), "voreingenomm" );
	deepEqual( Stem("voreltern"), "vorelt" );
	deepEqual( Stem("vorenthalten"), "vorenthalt" );
	deepEqual( Stem("vorenthielt"), "vorenthielt" );
	deepEqual( Stem("vorerst"), "vorerst" );
	deepEqual( Stem("vorfahren"), "vorfahr" );
	deepEqual( Stem("vorfall"), "vorfall" );
	deepEqual( Stem("vorfalle"), "vorfall" );
	deepEqual( Stem("vorfälle"), "vorfall" );
	deepEqual( Stem("vorfalles"), "vorfall" );
	deepEqual( Stem("vorfand"), "vorfand" );
	deepEqual( Stem("vorfiel"), "vorfiel" );
	deepEqual( Stem("vorfielen"), "vorfiel" );
	deepEqual( Stem("vorfinden"), "vorfind" );
	deepEqual( Stem("vorfindet"), "vorfindet" );
	deepEqual( Stem("vorg"), "vorg" );
	deepEqual( Stem("vorgab"), "vorgab" );
	deepEqual( Stem("vorgang"), "vorgang" );
	deepEqual( Stem("vorgänger"), "vorgang" );
	deepEqual( Stem("vorganges"), "vorgang" );
	deepEqual( Stem("vorgeben"), "vorgeb" );
	deepEqual( Stem("vorgebeugt"), "vorgebeugt" );
	deepEqual( Stem("vorgebildet"), "vorgebildet" );
	deepEqual( Stem("vorgebildete"), "vorgebildet" );
	deepEqual( Stem("vorgebildeten"), "vorgebildet" );
	deepEqual( Stem("vorgebogenem"), "vorgebog" );
	deepEqual( Stem("vorgebracht"), "vorgebracht" );
	deepEqual( Stem("vorgebrachten"), "vorgebracht" );
	deepEqual( Stem("vorgefahren"), "vorgefahr" );
	deepEqual( Stem("vorgefassten"), "vorgefasst" );
	deepEqual( Stem("vorgefaßten"), "vorgefasst" );
	deepEqual( Stem("vorgefühl"), "vorgefuhl" );
	deepEqual( Stem("vorgegangen"), "vorgegang" );
	deepEqual( Stem("vorgehalten"), "vorgehalt" );
	deepEqual( Stem("vorgehe"), "vorgeh" );
	deepEqual( Stem("vorgehen"), "vorgeh" );
	deepEqual( Stem("vorgehenden"), "vorgeh" );
	deepEqual( Stem("vorgeht"), "vorgeht" );
	deepEqual( Stem("vorgeladen"), "vorgelad" );
	deepEqual( Stem("vorgelassen"), "vorgelass" );
	deepEqual( Stem("vorgelegt"), "vorgelegt" );
	deepEqual( Stem("vorgelegten"), "vorgelegt" );
	deepEqual( Stem("vorgemacht"), "vorgemacht" );
	deepEqual( Stem("vorgenommen"), "vorgenomm" );
	deepEqual( Stem("vorgenommene"), "vorgenomm" );
	deepEqual( Stem("vorgerückt"), "vorgeruckt" );
	deepEqual( Stem("vorgerückteren"), "vorgeruckt" );
	deepEqual( Stem("vorgesagt"), "vorgesagt" );
	deepEqual( Stem("vorgeschlagen"), "vorgeschlag" );
	deepEqual( Stem("vorgeschoben"), "vorgeschob" );
	deepEqual( Stem("vorgeschrieben"), "vorgeschrieb" );
	deepEqual( Stem("vorgeschriebene"), "vorgeschrieb" );
	deepEqual( Stem("vorgesehen"), "vorgeseh" );
	deepEqual( Stem("vorgesehene"), "vorgeseh" );
	deepEqual( Stem("vorgesetzt"), "vorgesetzt" );
	deepEqual( Stem("vorgesetzte"), "vorgesetzt" );
	deepEqual( Stem("vorgesetzten"), "vorgesetzt" );
	deepEqual( Stem("vorgesetzter"), "vorgesetzt" );
	deepEqual( Stem("vorgesetztes"), "vorgesetzt" );
	deepEqual( Stem("vorgesteckt"), "vorgesteckt" );
	deepEqual( Stem("vorgestellet"), "vorgestellet" );
	deepEqual( Stem("vorgestellt"), "vorgestellt" );
	deepEqual( Stem("vorgestern"), "vorg" );
	deepEqual( Stem("vorgestreckten"), "vorgestreckt" );
	deepEqual( Stem("vorgetragen"), "vorgetrag" );
	deepEqual( Stem("vorgezogen"), "vorgezog" );
	deepEqual( Stem("vorgezogene"), "vorgezog" );
	deepEqual( Stem("vorging"), "vorging" );
	deepEqual( Stem("vorhabe"), "vorhab" );
	deepEqual( Stem("vorhaben"), "vorhab" );
	deepEqual( Stem("vorhabenden"), "vorhab" );
	deepEqual( Stem("vorhalle"), "vorhall" );
	deepEqual( Stem("vorhält"), "vorhalt" );
	deepEqual( Stem("vorhalten"), "vorhalt" );
	deepEqual( Stem("vorhanden"), "vorhand" );
	deepEqual( Stem("vorhandenen"), "vorhand" );
	deepEqual( Stem("vorhang"), "vorhang" );
	deepEqual( Stem("vorhänge"), "vorhang" );
	deepEqual( Stem("vorhangs"), "vorhang" );
	deepEqual( Stem("vorhast"), "vorhast" );
	deepEqual( Stem("vorhat"), "vorhat" );
	deepEqual( Stem("vorhatte"), "vorhatt" );
	deepEqual( Stem("vorhatten"), "vorhatt" );
	deepEqual( Stem("vorhaut"), "vorhaut" );
	deepEqual( Stem("vorhemdchen"), "vorhemdch" );
	deepEqual( Stem("vorhemden"), "vorhemd" );
	deepEqual( Stem("vorher"), "vorh" );
	deepEqual( Stem("vorherbestimmt"), "vorherbestimmt" );
	deepEqual( Stem("vorherbestimmten"), "vorherbestimmt" );
	deepEqual( Stem("vorherbestimmung"), "vorherbestimm" );
	deepEqual( Stem("vorhergegangen"), "vorhergegang" );
	deepEqual( Stem("vorhergehen"), "vorhergeh" );
	deepEqual( Stem("vorhergehend"), "vorhergeh" );
	deepEqual( Stem("vorhergehende"), "vorhergeh" );
	deepEqual( Stem("vorhergehenden"), "vorhergeh" );
	deepEqual( Stem("vorhergehendes"), "vorhergeh" );
	deepEqual( Stem("vorhergehn"), "vorhergehn" );
	deepEqual( Stem("vorhergeht"), "vorhergeht" );
	deepEqual( Stem("vorhergenannten"), "vorhergenannt" );
	deepEqual( Stem("vorhergesagt"), "vorhergesagt" );
	deepEqual( Stem("vorhergesehen"), "vorhergeseh" );
	deepEqual( Stem("vorherging"), "vorherging" );
	deepEqual( Stem("vorherigen"), "vorher" );
	deepEqual( Stem("vorherrschaft"), "vorherrschaft" );
	deepEqual( Stem("vorherrschende"), "vorherrsch" );
	deepEqual( Stem("vorherrscht"), "vorherrscht" );
	deepEqual( Stem("vorhersage"), "vorhersag" );
	deepEqual( Stem("vorhersah"), "vorhersah" );
	deepEqual( Stem("vorhersehe"), "vorherseh" );
	deepEqual( Stem("vorhersehen"), "vorherseh" );
	deepEqual( Stem("vorhersehung"), "vorherseh" );
	deepEqual( Stem("vorhersieht"), "vorhersieht" );
	deepEqual( Stem("vorherverkündigung"), "vorherverkund" );
	deepEqual( Stem("vorhielte"), "vorhielt" );
	deepEqual( Stem("vorhin"), "vorhin" );
	deepEqual( Stem("vorhof"), "vorhof" );
	deepEqual( Stem("vorhöfe"), "vorhof" );
	deepEqual( Stem("vorhöfen"), "vorhof" );
	deepEqual( Stem("vorhofes"), "vorhof" );
	deepEqual( Stem("vorhofs"), "vorhof" );
	deepEqual( Stem("vorige"), "vorig" );
	deepEqual( Stem("vorigen"), "vorig" );
	deepEqual( Stem("voriger"), "vorig" );
	deepEqual( Stem("vorkam"), "vorkam" );
	deepEqual( Stem("vorkamen"), "vorkam" );
	deepEqual( Stem("vorkomme"), "vorkomm" );
	deepEqual( Stem("vorkommen"), "vorkomm" );
	deepEqual( Stem("vorkommenden"), "vorkomm" );
	deepEqual( Stem("vorkommendenfalls"), "vorkommendenfall" );
	deepEqual( Stem("vorkommt"), "vorkommt" );
	deepEqual( Stem("vorläßt"), "vorlasst" );
	deepEqual( Stem("vorläufer"), "vorlauf" );
	deepEqual( Stem("vorläufererfahrungen"), "vorlaufererfahr" );
	deepEqual( Stem("vorläufig"), "vorlauf" );
	deepEqual( Stem("vorläufigen"), "vorlauf" );
	deepEqual( Stem("vorlaut"), "vorlaut" );
	deepEqual( Stem("vorlegen"), "vorleg" );
	deepEqual( Stem("vorlegung"), "vorleg" );
	deepEqual( Stem("vorlesen"), "vorles" );
	deepEqual( Stem("vorlesung"), "vorles" );
	deepEqual( Stem("vorlieb"), "vorlieb" );
	deepEqual( Stem("vorliebe"), "vorlieb" );
	deepEqual( Stem("vorliegenden"), "vorlieg" );
	deepEqual( Stem("vorliegt"), "vorliegt" );
	deepEqual( Stem("vormachen"), "vormach" );
	deepEqual( Stem("vormachte"), "vormacht" );
	deepEqual( Stem("vormals"), "vormal" );
	deepEqual( Stem("vormittag"), "vormittag" );
	deepEqual( Stem("vormittags"), "vormittag" );
	deepEqual( Stem("vormittagsarbeit"), "vormittagsarbeit" );
	deepEqual( Stem("vormittagsimbiss"), "vormittagsimbiss" );
	deepEqual( Stem("vormittagsstunden"), "vormittagsstund" );
	deepEqual( Stem("vormöge"), "vormog" );
	deepEqual( Stem("vormund"), "vormund" );
	deepEqual( Stem("vormünder"), "vormund" );
	deepEqual( Stem("vormundschaftliche"), "vormundschaft" );
	deepEqual( Stem("vorn"), "vorn" );
	deepEqual( Stem("vornahm"), "vornahm" );
	deepEqual( Stem("vorne"), "vorn" );
	deepEqual( Stem("vorneherein"), "vorneherein" );
	deepEqual( Stem("vornehm"), "vornehm" );
	deepEqual( Stem("vornehme"), "vornehm" );
	deepEqual( Stem("vornehmen"), "vornehm" );
	deepEqual( Stem("vornehmer"), "vornehm" );
	deepEqual( Stem("vornehmes"), "vornehm" );
	deepEqual( Stem("vornehmheit"), "vornehm" );
	deepEqual( Stem("vornehmlich"), "vornehm" );
	deepEqual( Stem("vornehmste"), "vornehm" );
	deepEqual( Stem("vornehmsten"), "vornehm" );
	deepEqual( Stem("vornherein"), "vornherein" );
	deepEqual( Stem("vornüber"), "vornub" );
	deepEqual( Stem("vorort"), "vorort" );
	deepEqual( Stem("vorragendste"), "vorrag" );
	deepEqual( Stem("vorrang"), "vorrang" );
	deepEqual( Stem("vorrat"), "vorrat" );
	deepEqual( Stem("vorräte"), "vorrat" );
	deepEqual( Stem("vorratshause"), "vorratshaus" );
	deepEqual( Stem("vorratshäuser"), "vorratshaus" );
	deepEqual( Stem("vorratshäusern"), "vorratshaus" );
	deepEqual( Stem("vorratslager"), "vorratslag" );
	deepEqual( Stem("vorraum"), "vorraum" );
	deepEqual( Stem("vorrecht"), "vorrecht" );
	deepEqual( Stem("vorrechte"), "vorrecht" );
	deepEqual( Stem("vorrede"), "vorred" );
	deepEqual( Stem("vorrichtungen"), "vorricht" );
	deepEqual( Stem("vors"), "vor" );
	deepEqual( Stem("vorsagen"), "vorsag" );
	deepEqual( Stem("vorsagte"), "vorsagt" );
	deepEqual( Stem("vorsatz"), "vorsatz" );
	deepEqual( Stem("vorsatze"), "vorsatz" );
	deepEqual( Stem("vorsätzlich"), "vorsatz" );
	deepEqual( Stem("vorsätzliche"), "vorsatz" );
	deepEqual( Stem("vorschein"), "vorschein" );
	deepEqual( Stem("vorschlag"), "vorschlag" );
	deepEqual( Stem("vorschläge"), "vorschlag" );
	deepEqual( Stem("vorschlagen"), "vorschlag" );
	deepEqual( Stem("vorschlug"), "vorschlug" );
	deepEqual( Stem("vorschneider"), "vorschneid" );
	deepEqual( Stem("vorschreibt"), "vorschreibt" );
	deepEqual( Stem("vorschrift"), "vorschrift" );
	deepEqual( Stem("vorschriften"), "vorschrift" );
	deepEqual( Stem("vorschub"), "vorschub" );
	deepEqual( Stem("vorschulalter"), "vorschulalt" );
	deepEqual( Stem("vorschule"), "vorschul" );
	deepEqual( Stem("vorschussmilliarde"), "vorschussmilliard" );
	deepEqual( Stem("vorschützen"), "vorschutz" );
	deepEqual( Stem("vorsehen"), "vorseh" );
	deepEqual( Stem("vorsehung"), "vorseh" );
	deepEqual( Stem("vorsetzen"), "vorsetz" );
	deepEqual( Stem("vorsetzlich"), "vorsetz" );
	deepEqual( Stem("vorsetzt"), "vorsetzt" );
	deepEqual( Stem("vorsetzte"), "vorsetzt" );
	deepEqual( Stem("vorsicht"), "vorsicht" );
	deepEqual( Stem("vorsichtig"), "vorsicht" );
	deepEqual( Stem("vorsichtigem"), "vorsicht" );
	deepEqual( Stem("vorsichtiger"), "vorsicht" );
	deepEqual( Stem("vorsieht"), "vorsieht" );
	deepEqual( Stem("vorsingen"), "vorsing" );
	deepEqual( Stem("vorsitz"), "vorsitz" );
	deepEqual( Stem("vorsitze"), "vorsitz" );
	deepEqual( Stem("vorsitzender"), "vorsitz" );
	deepEqual( Stem("vorsorge"), "vorsorg" );
	deepEqual( Stem("vorspannt"), "vorspannt" );
	deepEqual( Stem("vorspiegelungen"), "vorspiegel" );
	deepEqual( Stem("vorspiel"), "vorspiel" );
	deepEqual( Stem("vorsprung"), "vorsprung" );
	deepEqual( Stem("vorstadt"), "vorstadt" );
	deepEqual( Stem("vorstadtstrasse"), "vorstadtstrass" );
	deepEqual( Stem("vorstadtstraße"), "vorstadtstrass" );
	deepEqual( Stem("vorstand"), "vorstand" );
	deepEqual( Stem("vorstandes"), "vorstand" );
	deepEqual( Stem("vorstehenden"), "vorsteh" );
	deepEqual( Stem("vorsteherin"), "vorsteherin" );
	deepEqual( Stem("vorstelle"), "vorstell" );
	deepEqual( Stem("vorstellen"), "vorstell" );
	deepEqual( Stem("vorstellend"), "vorstell" );
	deepEqual( Stem("vorstelleten"), "vorstellet" );
	deepEqual( Stem("vorstellte"), "vorstellt" );
	deepEqual( Stem("vorstellten"), "vorstellt" );
	deepEqual( Stem("vorstellung"), "vorstell" );
	deepEqual( Stem("vorstellungen"), "vorstell" );
	deepEqual( Stem("vorstellungsart"), "vorstellungsart" );
	deepEqual( Stem("vorstellungsweise"), "vorstellungsweis" );
	deepEqual( Stem("vorsündflutlichen"), "vorsundflut" );
	deepEqual( Stem("vorteil"), "vorteil" );
	deepEqual( Stem("vorteile"), "vorteil" );
	deepEqual( Stem("vorteilen"), "vorteil" );
	deepEqual( Stem("vorteilhaft"), "vorteilhaft" );
	deepEqual( Stem("vorteilhaften"), "vorteilhaft" );
	deepEqual( Stem("vorteilhaftes"), "vorteilhaft" );
	deepEqual( Stem("vorteilhaftesten"), "vorteilhaft" );
	deepEqual( Stem("vorteils"), "vorteil" );
	deepEqual( Stem("vortrag"), "vortrag" );
	deepEqual( Stem("vortrage"), "vortrag" );
	deepEqual( Stem("vorträge"), "vortrag" );
	deepEqual( Stem("vortragen"), "vortrag" );
	deepEqual( Stem("vorträgen"), "vortrag" );
	deepEqual( Stem("vorträgt"), "vortragt" );
	deepEqual( Stem("vortrefflich"), "vortreff" );
	deepEqual( Stem("vortreffliche"), "vortreff" );
	deepEqual( Stem("vortrefflichen"), "vortreff" );
	deepEqual( Stem("vortrefflicher"), "vortreff" );
	deepEqual( Stem("vortrefflichkeit"), "vortreff" );
	deepEqual( Stem("vortrefflichste"), "vortreff" );
	deepEqual( Stem("vortritt"), "vortritt" );
	deepEqual( Stem("vortrug"), "vortrug" );
	deepEqual( Stem("vortuch"), "vortuch" );
	deepEqual( Stem("vortuchbandeln"), "vortuchbandeln" );
	deepEqual( Stem("vorüber"), "vorub" );
	deepEqual( Stem("vorüberdrehte"), "voruberdreht" );
	deepEqual( Stem("vorübergegangen"), "vorubergegang" );
	deepEqual( Stem("vorübergehen"), "vorubergeh" );
	deepEqual( Stem("vorübergehend"), "vorubergeh" );
	deepEqual( Stem("vorübergehenden"), "vorubergeh" );
	deepEqual( Stem("vorübergehendste"), "vorubergeh" );
	deepEqual( Stem("vorübergeht"), "vorubergeht" );
	deepEqual( Stem("vorüberging"), "voruberging" );
	deepEqual( Stem("vorübergingen"), "voruberging" );
	deepEqual( Stem("vorüberkam"), "voruberkam" );
	deepEqual( Stem("vorüberkamen"), "voruberkam" );
	deepEqual( Stem("vorüberlässt"), "voruberlasst" );
	deepEqual( Stem("vorüberreiten"), "voruberreit" );
	deepEqual( Stem("vorüberschwebte"), "voruberschwebt" );
	deepEqual( Stem("vorüberwallte"), "voruberwallt" );
	deepEqual( Stem("vorüberwehen"), "voruberweh" );
	deepEqual( Stem("vorüberzieht"), "voruberzieht" );
	deepEqual( Stem("vorurteilen"), "vorurteil" );
	deepEqual( Stem("vorverhandlungen"), "vorverhandl" );
	deepEqual( Stem("vorversammlungen"), "vorversamml" );
	deepEqual( Stem("vorwalten"), "vorwalt" );
	deepEqual( Stem("vorwaltender"), "vorwalt" );
	deepEqual( Stem("vorwaltet"), "vorwaltet" );
	deepEqual( Stem("vorwand"), "vorwand" );
	deepEqual( Stem("vorwärts"), "vorwart" );
	deepEqual( Stem("vorwärtsgehen"), "vorwartsgeh" );
	deepEqual( Stem("vorwärtszukommen"), "vorwartszukomm" );
	deepEqual( Stem("vorwegstiehlt"), "vorwegstiehlt" );
	deepEqual( Stem("vorweihnachtlichen"), "vorweihnacht" );
	deepEqual( Stem("vorweisen"), "vorweis" );
	deepEqual( Stem("vorwelt"), "vorwelt" );
	deepEqual( Stem("vorwerfen"), "vorwerf" );
	deepEqual( Stem("vorwiegend"), "vorwieg" );
	deepEqual( Stem("vorwort"), "vorwort" );
	deepEqual( Stem("vorwurf"), "vorwurf" );
	deepEqual( Stem("vorwürfe"), "vorwurf" );
	deepEqual( Stem("vorwürfen"), "vorwurf" );
	deepEqual( Stem("vorzeichen"), "vorzeich" );
	deepEqual( Stem("vorzeichnung"), "vorzeichn" );
	deepEqual( Stem("vorzeit"), "vorzeit" );
	deepEqual( Stem("vorziehen"), "vorzieh" );
	deepEqual( Stem("vorzieht"), "vorzieht" );
	deepEqual( Stem("vorzimmer"), "vorzimm" );
	deepEqual( Stem("vorzimmern"), "vorzimm" );
	deepEqual( Stem("vorzimmers"), "vorzimm" );
	deepEqual( Stem("vorzog"), "vorzog" );
	deepEqual( Stem("vorzogen"), "vorzog" );
	deepEqual( Stem("vorzubereiten"), "vorzubereit" );
	deepEqual( Stem("vorzubilden"), "vorzubild" );
	deepEqual( Stem("vorzubringen"), "vorzubring" );
	deepEqual( Stem("vorzufliegen"), "vorzuflieg" );
	deepEqual( Stem("vorzug"), "vorzug" );
	deepEqual( Stem("vorzuge"), "vorzug" );
	deepEqual( Stem("vorzüge"), "vorzug" );
	deepEqual( Stem("vorzugeben"), "vorzugeb" );
	deepEqual( Stem("vorzügen"), "vorzug" );
	deepEqual( Stem("vorzuges"), "vorzug" );
	deepEqual( Stem("vorzüglich"), "vorzug" );
	deepEqual( Stem("vorzügliche"), "vorzug" );
	deepEqual( Stem("vorzüglichen"), "vorzug" );
	deepEqual( Stem("vorzügliches"), "vorzug" );
	deepEqual( Stem("vorzüglichste"), "vorzug" );
	deepEqual( Stem("vorzüglichsten"), "vorzug" );
	deepEqual( Stem("vorzüglichstes"), "vorzug" );
	deepEqual( Stem("vorzugsweise"), "vorzugsweis" );
	deepEqual( Stem("vorzuhalten"), "vorzuhalt" );
	deepEqual( Stem("vorzumachen"), "vorzumach" );
	deepEqual( Stem("vorzunehmen"), "vorzunehm" );
	deepEqual( Stem("vorzurücken"), "vorzuruck" );
	deepEqual( Stem("vorzuschlagen"), "vorzuschlag" );
	deepEqual( Stem("vorzuspielen"), "vorzuspiel" );
	deepEqual( Stem("vorzustellen"), "vorzustell" );
	deepEqual( Stem("vorzuwerfen"), "vorzuwerf" );
	deepEqual( Stem("vorzuziehen"), "vorzuzieh" );
	deepEqual( Stem("vox"), "vox" );
	deepEqual( Stem("vreeli"), "vreeli" );
	deepEqual( Stem("vrenchen"), "vrench" );
	deepEqual( Stem("vrenchens"), "vrench" );
	deepEqual( Stem("vrenches"), "vrench" );
	deepEqual( Stem("vrenggel"), "vrenggel" );
	deepEqual( Stem("vroni"), "vroni" );
	deepEqual( Stem("vulgo"), "vulgo" );
	deepEqual( Stem("vulkan"), "vulkan" );
	deepEqual( Stem("w"), "w" );
	deepEqual( Stem("waadtländer"), "waadtland" );
	deepEqual( Stem("waage"), "waag" );
	deepEqual( Stem("waagwirt"), "waagwirt" );
	deepEqual( Stem("waagwirtes"), "waagwirt" );
	deepEqual( Stem("waar"), "waar" );
	deepEqual( Stem("wach"), "wach" );
	deepEqual( Stem("wachdienst"), "wachdien" );
	deepEqual( Stem("wache"), "wach" );
	deepEqual( Stem("wachen"), "wach" );
	deepEqual( Stem("wachenden"), "wachend" );
	deepEqual( Stem("wachender"), "wachend" );
	deepEqual( Stem("wacherhalten"), "wacherhalt" );
	deepEqual( Stem("wachet"), "wachet" );
	deepEqual( Stem("wacholderkraut"), "wacholderkraut" );
	deepEqual( Stem("wachs"), "wach" );
	deepEqual( Stem("wachsam"), "wachsam" );
	deepEqual( Stem("wachsames"), "wachsam" );
	deepEqual( Stem("wachsen"), "wachs" );
	deepEqual( Stem("wachsende"), "wachsend" );
	deepEqual( Stem("wachsenden"), "wachsend" );
	deepEqual( Stem("wachsender"), "wachsend" );
	deepEqual( Stem("wachskerzen"), "wachskerz" );
	deepEqual( Stem("wachsleinwand"), "wachsleinwand" );
	deepEqual( Stem("wachslichter"), "wachslicht" );
	deepEqual( Stem("wächst"), "wach" );
	deepEqual( Stem("wachstum"), "wachstum" );
	deepEqual( Stem("wachsweissem"), "wachsweiss" );
	deepEqual( Stem("wacht"), "wacht" );
	deepEqual( Stem("wachte"), "wacht" );
	deepEqual( Stem("wachtel"), "wachtel" );
	deepEqual( Stem("wachteln"), "wachteln" );
	deepEqual( Stem("wächter"), "wacht" );
	deepEqual( Stem("wächtern"), "wacht" );
	deepEqual( Stem("wächters"), "wacht" );
	deepEqual( Stem("wachtmeister"), "wachtmeist" );
	deepEqual( Stem("wackeligen"), "wackel" );
	deepEqual( Stem("wackeln"), "wackeln" );
	deepEqual( Stem("wackelte"), "wackelt" );
	deepEqual( Stem("wacker"), "wack" );
	deepEqual( Stem("wackere"), "wack" );
	deepEqual( Stem("wackeren"), "wack" );
	deepEqual( Stem("wackeres"), "wack" );
	deepEqual( Stem("wackern"), "wack" );
	deepEqual( Stem("waden"), "wad" );
	deepEqual( Stem("wadenmuskeln"), "wadenmuskeln" );
	deepEqual( Stem("wadenstrümpfen"), "wadenstrumpf" );
	deepEqual( Stem("waffe"), "waff" );
	deepEqual( Stem("waffeleisen"), "waffeleis" );
	deepEqual( Stem("waffen"), "waff" );
	deepEqual( Stem("waffenstillstand"), "waffenstillstand" );
	deepEqual( Stem("wägelchen"), "wagelch" );
	deepEqual( Stem("wagemutes"), "wagemut" );
	deepEqual( Stem("wagen"), "wag" );
	deepEqual( Stem("wagenpolster"), "wagenpol" );
	deepEqual( Stem("wagens"), "wag" );
	deepEqual( Stem("wagenschmiere"), "wagenschmi" );
	deepEqual( Stem("wagenverkehr"), "wagenverkehr" );
	deepEqual( Stem("wagerl"), "wagerl" );
	deepEqual( Stem("wäget"), "waget" );
	deepEqual( Stem("waghalsigen"), "waghals" );
	deepEqual( Stem("wagner"), "wagn" );
	deepEqual( Stem("wagt"), "wagt" );
	deepEqual( Stem("wagte"), "wagt" );
	deepEqual( Stem("wagten"), "wagt" );
	deepEqual( Stem("wahl"), "wahl" );
	deepEqual( Stem("wahlablauf"), "wahlablauf" );
	deepEqual( Stem("wahlbehinderung"), "wahlbehinder" );
	deepEqual( Stem("wahlbenachrichtigung"), "wahlbenachricht" );
	deepEqual( Stem("wahlbeobachter"), "wahlbeobacht" );
	deepEqual( Stem("wahlbeobachterinnen"), "wahlbeobachterinn" );
	deepEqual( Stem("wahlbeobachtung"), "wahlbeobacht" );
	deepEqual( Stem("wahlberechtigte"), "wahlberechtigt" );
	deepEqual( Stem("wahlberechtigten"), "wahlberechtigt" );
	deepEqual( Stem("wahlberechtigung"), "wahlberecht" );
	deepEqual( Stem("wahlberliner"), "wahlberlin" );
	deepEqual( Stem("wahlbezirken"), "wahlbezirk" );
	deepEqual( Stem("wahlbüro"), "wahlburo" );
	deepEqual( Stem("wahlbüros"), "wahlburos" );
	deepEqual( Stem("wähle"), "wahl" );
	deepEqual( Stem("wahlen"), "wahl" );
	deepEqual( Stem("wählen"), "wahl" );
	deepEqual( Stem("wählenden"), "wahlend" );
	deepEqual( Stem("wähler"), "wahl" );
	deepEqual( Stem("wahlergebnis"), "wahlergebnis" );
	deepEqual( Stem("wahlergebnisse"), "wahlergebnis" );
	deepEqual( Stem("wählerinnen"), "wahlerinn" );
	deepEqual( Stem("wählete"), "wahlet" );
	deepEqual( Stem("wahlgeschäft"), "wahlgeschaft" );
	deepEqual( Stem("wahlhandlung"), "wahlhandl" );
	deepEqual( Stem("wahlhelfer"), "wahlhelf" );
	deepEqual( Stem("wählig"), "wahlig" );
	deepEqual( Stem("wähligem"), "wahlig" );
	deepEqual( Stem("wahljahr"), "wahljahr" );
	deepEqual( Stem("wahlkabine"), "wahlkabin" );
	deepEqual( Stem("wahlkampagne"), "wahlkampagn" );
	deepEqual( Stem("wahlkampf"), "wahlkampf" );
	deepEqual( Stem("wahlkampfes"), "wahlkampf" );
	deepEqual( Stem("wahlkommission"), "wahlkommission" );
	deepEqual( Stem("wahlkommissionen"), "wahlkommission" );
	deepEqual( Stem("wahlkreis"), "wahlkreis" );
	deepEqual( Stem("wahlkundgebung"), "wahlkundgeb" );
	deepEqual( Stem("wahlleiter"), "wahlleit" );
	deepEqual( Stem("wahlleiters"), "wahlleit" );
	deepEqual( Stem("wahlliste"), "wahllist" );
	deepEqual( Stem("wahllisten"), "wahllist" );
	deepEqual( Stem("wahllokal"), "wahllokal" );
	deepEqual( Stem("wahlmorgen"), "wahlmorg" );
	deepEqual( Stem("wahlspruch"), "wahlspruch" );
	deepEqual( Stem("wählt"), "wahlt" );
	deepEqual( Stem("wahltag"), "wahltag" );
	deepEqual( Stem("wahltage"), "wahltag" );
	deepEqual( Stem("wählte"), "wahlt" );
	deepEqual( Stem("wählten"), "wahlt" );
	deepEqual( Stem("wahlumschlag"), "wahlumschlag" );
	deepEqual( Stem("wahlunregelmässigkeiten"), "wahlunregelmass" );
	deepEqual( Stem("wahlurnen"), "wahlurn" );
	deepEqual( Stem("wahlvorgang"), "wahlvorgang" );
	deepEqual( Stem("wahlvorgängen"), "wahlvorgang" );
	deepEqual( Stem("wahlzettel"), "wahlzettel" );
	deepEqual( Stem("wahn"), "wahn" );
	deepEqual( Stem("wahne"), "wahn" );
	deepEqual( Stem("wähnen"), "wahn" );
	deepEqual( Stem("wähnend"), "wahnend" );
	deepEqual( Stem("wahnsinn"), "wahnsinn" );
	deepEqual( Stem("wahnsinnig"), "wahnsinn" );
	deepEqual( Stem("wahnsinns"), "wahnsinn" );
	deepEqual( Stem("wähnt"), "wahnt" );
	deepEqual( Stem("wähnte"), "wahnt" );
	deepEqual( Stem("wähnten"), "wahnt" );
	deepEqual( Stem("wahr"), "wahr" );
	deepEqual( Stem("wahre"), "wahr" );
	deepEqual( Stem("währe"), "wahr" );
	deepEqual( Stem("wahrem"), "wahr" );
	deepEqual( Stem("wahren"), "wahr" );
	deepEqual( Stem("während"), "wahrend" );
	deepEqual( Stem("währenddessen"), "wahrenddess" );
	deepEqual( Stem("wahrer"), "wahr" );
	deepEqual( Stem("wahres"), "wahr" );
	deepEqual( Stem("währete"), "wahret" );
	deepEqual( Stem("wahrgenommen"), "wahrgenomm" );
	deepEqual( Stem("wahrhaft"), "wahrhaft" );
	deepEqual( Stem("wahrhafte"), "wahrhaft" );
	deepEqual( Stem("wahrhaftig"), "wahrhaft" );
	deepEqual( Stem("wahrhaftige"), "wahrhaft" );
	deepEqual( Stem("wahrhaftiger"), "wahrhaft" );
	deepEqual( Stem("wahrhaftigkeit"), "wahrhaft" );
	deepEqual( Stem("wahrhaftigsten"), "wahrhaft" );
	deepEqual( Stem("wahrheit"), "wahrheit" );
	deepEqual( Stem("wahrheiten"), "wahrheit" );
	deepEqual( Stem("wahrlich"), "wahrlich" );
	deepEqual( Stem("wahrnahm"), "wahrnahm" );
	deepEqual( Stem("wahrnehmbar"), "wahrnehmbar" );
	deepEqual( Stem("wahrnehmbarer"), "wahrnehmbar" );
	deepEqual( Stem("wahrnehme"), "wahrnehm" );
	deepEqual( Stem("wahrnehmen"), "wahrnehm" );
	deepEqual( Stem("wahrnehmung"), "wahrnehm" );
	deepEqual( Stem("wahrnehmungen"), "wahrnehm" );
	deepEqual( Stem("wahrnimmt"), "wahrnimmt" );
	deepEqual( Stem("wahrsagen"), "wahrsag" );
	deepEqual( Stem("wahrsager"), "wahrsag" );
	deepEqual( Stem("wahrsagern"), "wahrsag" );
	deepEqual( Stem("wahrschein"), "wahrschein" );
	deepEqual( Stem("wahrscheinlich"), "wahrschein" );
	deepEqual( Stem("wahrscheinlicherweise"), "wahrscheinlicherweis" );
	deepEqual( Stem("wahrscheinlichkeit"), "wahrschein" );
	deepEqual( Stem("wahrscheinlichste"), "wahrschein" );
	deepEqual( Stem("währt"), "wahrt" );
	deepEqual( Stem("wahrte"), "wahrt" );
	deepEqual( Stem("währte"), "wahrt" );
	deepEqual( Stem("währungsunion"), "wahrungsunion" );
	deepEqual( Stem("wahrzeichen"), "wahrzeich" );
	deepEqual( Stem("wahrzunehmen"), "wahrzunehm" );
	deepEqual( Stem("waisen"), "wais" );
	deepEqual( Stem("waisenfelde"), "waisenfeld" );
	deepEqual( Stem("waisenkind"), "waisenkind" );
	deepEqual( Stem("waisenvogt"), "waisenvogt" );
	deepEqual( Stem("walchensee"), "walchense" );
	deepEqual( Stem("walchental"), "walchental" );
	deepEqual( Stem("wald"), "wald" );
	deepEqual( Stem("waldboden"), "waldbod" );
	deepEqual( Stem("wäldchen"), "waldch" );
	deepEqual( Stem("walde"), "wald" );
	deepEqual( Stem("waldecke"), "waldeck" );
	deepEqual( Stem("wälder"), "wald" );
	deepEqual( Stem("wäldern"), "wald" );
	deepEqual( Stem("waldes"), "wald" );
	deepEqual( Stem("waldesel"), "waldesel" );
	deepEqual( Stem("waldflächen"), "waldflach" );
	deepEqual( Stem("waldfrevel"), "waldfrevel" );
	deepEqual( Stem("waldfrohen"), "waldfroh" );
	deepEqual( Stem("waldgras"), "waldgras" );
	deepEqual( Stem("waldgrund"), "waldgrund" );
	deepEqual( Stem("waldhorn"), "waldhorn" );
	deepEqual( Stem("waldhornbläser"), "waldhornblas" );
	deepEqual( Stem("waldigen"), "waldig" );
	deepEqual( Stem("waldmoose"), "waldmoos" );
	deepEqual( Stem("waldpfade"), "waldpfad" );
	deepEqual( Stem("waldpfades"), "waldpfad" );
	deepEqual( Stem("waldrand"), "waldrand" );
	deepEqual( Stem("waldrevier"), "waldrevi" );
	deepEqual( Stem("waldrücken"), "waldruck" );
	deepEqual( Stem("waldsaum"), "waldsaum" );
	deepEqual( Stem("waldstämme"), "waldstamm" );
	deepEqual( Stem("waldsträsschen"), "waldstrassch" );
	deepEqual( Stem("waldstrasse"), "waldstrass" );
	deepEqual( Stem("waldtiere"), "waldti" );
	deepEqual( Stem("waldungen"), "waldung" );
	deepEqual( Stem("waldwegen"), "waldweg" );
	deepEqual( Stem("waldweges"), "waldweg" );
	deepEqual( Stem("walfisch"), "walfisch" );
	deepEqual( Stem("walfische"), "walfisch" );
	deepEqual( Stem("wall"), "wall" );
	deepEqual( Stem("wallen"), "wall" );
	deepEqual( Stem("wallende"), "wallend" );
	deepEqual( Stem("wallte"), "wallt" );
	deepEqual( Stem("walten"), "walt" );
	deepEqual( Stem("waltende"), "waltend" );
	deepEqual( Stem("waltet"), "waltet" );
	deepEqual( Stem("waltete"), "waltet" );
	deepEqual( Stem("wälze"), "walz" );
	deepEqual( Stem("wälzen"), "walz" );
	deepEqual( Stem("walzer"), "walz" );
	deepEqual( Stem("wälzte"), "walzt" );
	deepEqual( Stem("wammen"), "wamm" );
	deepEqual( Stem("wams"), "wam" );
	deepEqual( Stem("wämsern"), "wams" );
	deepEqual( Stem("wand"), "wand" );
	deepEqual( Stem("wände"), "wand" );
	deepEqual( Stem("wandel"), "wandel" );
	deepEqual( Stem("wandellose"), "wandellos" );
	deepEqual( Stem("wandeln"), "wandeln" );
	deepEqual( Stem("wandelnd"), "wandelnd" );
	deepEqual( Stem("wandelnde"), "wandelnd" );
	deepEqual( Stem("wandelnden"), "wandelnd" );
	deepEqual( Stem("wandelndes"), "wandelnd" );
	deepEqual( Stem("wandels"), "wandel" );
	deepEqual( Stem("wandelt"), "wandelt" );
	deepEqual( Stem("wandelte"), "wandelt" );
	deepEqual( Stem("wandelten"), "wandelt" );
	deepEqual( Stem("wänden"), "wand" );
	deepEqual( Stem("wanderbuch"), "wanderbuch" );
	deepEqual( Stem("wanderbücher"), "wanderbuch" );
	deepEqual( Stem("wanderbum"), "wanderbum" );
	deepEqual( Stem("wanderburn"), "wanderburn" );
	deepEqual( Stem("wanderer"), "wand" );
	deepEqual( Stem("wandergeräte"), "wandergerat" );
	deepEqual( Stem("wanderjünglinge"), "wanderjungling" );
	deepEqual( Stem("wandern"), "wand" );
	deepEqual( Stem("wanderschaft"), "wanderschaft" );
	deepEqual( Stem("wandert"), "wandert" );
	deepEqual( Stem("wanderte"), "wandert" );
	deepEqual( Stem("wanderten"), "wandert" );
	deepEqual( Stem("wanderung"), "wander" );
	deepEqual( Stem("wanderungen"), "wander" );
	deepEqual( Stem("wanderzeit"), "wanderzeit" );
	deepEqual( Stem("wandle"), "wandl" );
	deepEqual( Stem("wandrer"), "wandr" );
	deepEqual( Stem("wandschränkchen"), "wandschrankch" );
	deepEqual( Stem("wandte"), "wandt" );
	deepEqual( Stem("wandten"), "wandt" );
	deepEqual( Stem("wanduhr"), "wanduhr" );
	deepEqual( Stem("wandwinkel"), "wandwinkel" );
	deepEqual( Stem("wange"), "wang" );
	deepEqual( Stem("wangen"), "wang" );
	deepEqual( Stem("wanke"), "wank" );
	deepEqual( Stem("wanken"), "wank" );
	deepEqual( Stem("wann"), "wann" );
	deepEqual( Stem("wanne"), "wann" );
	deepEqual( Stem("wannenbreit"), "wannenbreit" );
	deepEqual( Stem("wanze"), "wanz" );
	deepEqual( Stem("wanzen"), "wanz" );
	deepEqual( Stem("wapp"), "wapp" );
	deepEqual( Stem("wappen"), "wapp" );
	deepEqual( Stem("war"), "war" );
	deepEqual( Stem("wär"), "war" );
	deepEqual( Stem("ward"), "ward" );
	deepEqual( Stem("ware"), "war" );
	deepEqual( Stem("wäre"), "war" );
	deepEqual( Stem("waren"), "war" );
	deepEqual( Stem("wären"), "war" );
	deepEqual( Stem("warenlager"), "warenlag" );
	deepEqual( Stem("warenmagazinen"), "warenmagazin" );
	deepEqual( Stem("wärest"), "war" );
	deepEqual( Stem("wäret"), "waret" );
	deepEqual( Stem("warf"), "warf" );
	deepEqual( Stem("warfen"), "warf" );
	deepEqual( Stem("warm"), "warm" );
	deepEqual( Stem("warme"), "warm" );
	deepEqual( Stem("wärme"), "warm" );
	deepEqual( Stem("warmen"), "warm" );
	deepEqual( Stem("wärmen"), "warm" );
	deepEqual( Stem("warmer"), "warm" );
	deepEqual( Stem("wärmer"), "warm" );
	deepEqual( Stem("warmes"), "warm" );
	deepEqual( Stem("wärmsten"), "warm" );
	deepEqual( Stem("warne"), "warn" );
	deepEqual( Stem("warnend"), "warnend" );
	deepEqual( Stem("warnenden"), "warnend" );
	deepEqual( Stem("warnt"), "warnt" );
	deepEqual( Stem("warnung"), "warnung" );
	deepEqual( Stem("warnungsruf"), "warnungsruf" );
	deepEqual( Stem("warst"), "warst" );
	deepEqual( Stem("wärst"), "warst" );
	deepEqual( Stem("wart"), "wart" );
	deepEqual( Stem("warte"), "wart" );
	deepEqual( Stem("wartei"), "wartei" );
	deepEqual( Stem("warteliste"), "wartelist" );
	deepEqual( Stem("warten"), "wart" );
	deepEqual( Stem("wartendes"), "wartend" );
	deepEqual( Stem("wartet"), "wartet" );
	deepEqual( Stem("wartete"), "wartet" );
	deepEqual( Stem("warteten"), "wartet" );
	deepEqual( Stem("wartst"), "wart" );
	deepEqual( Stem("warum"), "warum" );
	deepEqual( Stem("was"), "was" );
	deepEqual( Stem("waschbottich"), "waschbottich" );
	deepEqual( Stem("waschbündel"), "waschbundel" );
	deepEqual( Stem("wäsche"), "wasch" );
	deepEqual( Stem("waschen"), "wasch" );
	deepEqual( Stem("wäschepacken"), "waschepack" );
	deepEqual( Stem("wäscherei"), "wascherei" );
	deepEqual( Stem("wäscherin"), "wascherin" );
	deepEqual( Stem("wäschestück"), "waschestuck" );
	deepEqual( Stem("waschtisch"), "waschtisch" );
	deepEqual( Stem("waschungen"), "waschung" );
	deepEqual( Stem("washingtoner"), "washington" );
	deepEqual( Stem("wasser"), "wass" );
	deepEqual( Stem("wasseramsel"), "wasseramsel" );
	deepEqual( Stem("wasseraugen"), "wasseraug" );
	deepEqual( Stem("wasserblaue"), "wasserblau" );
	deepEqual( Stem("wasserdünste"), "wasserdun" );
	deepEqual( Stem("wassereimer"), "wassereim" );
	deepEqual( Stem("wasserfläche"), "wasserflach" );
	deepEqual( Stem("wasserflut"), "wasserflut" );
	deepEqual( Stem("wasserfluten"), "wasserflut" );
	deepEqual( Stem("wasserfrau"), "wasserfrau" );
	deepEqual( Stem("wasserfürsten"), "wasserfurst" );
	deepEqual( Stem("wassergegend"), "wassergeg" );
	deepEqual( Stem("wassergewimmels"), "wassergewimmel" );
	deepEqual( Stem("wasserhose"), "wasserhos" );
	deepEqual( Stem("wasserhosen"), "wasserhos" );
	deepEqual( Stem("wässerig"), "wasser" );
	deepEqual( Stem("wässeriger"), "wasser" );
	deepEqual( Stem("wässerlein"), "wasserlein" );
	deepEqual( Stem("wasserleitung"), "wasserleit" );
	deepEqual( Stem("wasserleitungen"), "wasserleit" );
	deepEqual( Stem("wassermann"), "wassermann" );
	deepEqual( Stem("wassermanns"), "wassermann" );
	deepEqual( Stem("wassern"), "wass" );
	deepEqual( Stem("wässern"), "wass" );
	deepEqual( Stem("wässerndem"), "wassernd" );
	deepEqual( Stem("wassernixen"), "wassernix" );
	deepEqual( Stem("wasserpfuscherei"), "wasserpfuscherei" );
	deepEqual( Stem("wasserpolacken"), "wasserpolack" );
	deepEqual( Stem("wasserquelle"), "wasserquell" );
	deepEqual( Stem("wasserquellen"), "wasserquell" );
	deepEqual( Stem("wasserrosen"), "wasserros" );
	deepEqual( Stem("wassers"), "wass" );
	deepEqual( Stem("wasserscheu"), "wasserscheu" );
	deepEqual( Stem("wasserschlange"), "wasserschlang" );
	deepEqual( Stem("wasserschlangen"), "wasserschlang" );
	deepEqual( Stem("wassersee"), "wasserse" );
	deepEqual( Stem("wasserseen"), "wasserse" );
	deepEqual( Stem("wasserspritzen"), "wasserspritz" );
	deepEqual( Stem("wasserstar"), "wasserstar" );
	deepEqual( Stem("wasserstrahl"), "wasserstrahl" );
	deepEqual( Stem("wasserstreif"), "wasserstreif" );
	deepEqual( Stem("wassersturz"), "wassersturz" );
	deepEqual( Stem("wässert"), "wassert" );
	deepEqual( Stem("wässerte"), "wassert" );
	deepEqual( Stem("wasserträger"), "wassertrag" );
	deepEqual( Stem("wassertrog"), "wassertrog" );
	deepEqual( Stem("wassertropfen"), "wassertropf" );
	deepEqual( Stem("wassertümpel"), "wassertumpel" );
	deepEqual( Stem("waste"), "wast" );
	deepEqual( Stem("watteweissen"), "watteweiss" );
	deepEqual( Stem("wattierten"), "wattiert" );
	deepEqual( Stem("watzmann"), "watzmann" );
	deepEqual( Stem("we"), "we" );
	deepEqual( Stem("web"), "web" );
	deepEqual( Stem("weben"), "web" );
	deepEqual( Stem("weber"), "web" );
	deepEqual( Stem("weberschiffchen"), "weberschiffch" );
	deepEqual( Stem("website"), "websit" );
	deepEqual( Stem("webt"), "webt" );
	deepEqual( Stem("webte"), "webt" );
	deepEqual( Stem("wechsel"), "wechsel" );
	deepEqual( Stem("wechselbalg"), "wechselbalg" );
	deepEqual( Stem("wechselbriefe"), "wechselbrief" );
	deepEqual( Stem("wechselgesang"), "wechselgesang" );
	deepEqual( Stem("wechseln"), "wechseln" );
	deepEqual( Stem("wechselnden"), "wechselnd" );
	deepEqual( Stem("wechselseitig"), "wechselseit" );
	deepEqual( Stem("wechselt"), "wechselt" );
	deepEqual( Stem("wechselte"), "wechselt" );
	deepEqual( Stem("wechselten"), "wechselt" );
	deepEqual( Stem("weck"), "weck" );
	deepEqual( Stem("wecken"), "weck" );
	deepEqual( Stem("weckt"), "weckt" );
	deepEqual( Stem("weckte"), "weckt" );
	deepEqual( Stem("weckten"), "weckt" );
	deepEqual( Stem("wedelnden"), "wedelnd" );
	deepEqual( Stem("weder"), "wed" );
	deepEqual( Stem("weg"), "weg" );
	deepEqual( Stem("wegbereit"), "wegbereit" );
	deepEqual( Stem("wegbiegung"), "wegbieg" );
	deepEqual( Stem("wegbleiben"), "wegbleib" );
	deepEqual( Stem("wegblendete"), "wegblendet" );
	deepEqual( Stem("wegblickt"), "wegblickt" );
	deepEqual( Stem("wegbringen"), "wegbring" );
	deepEqual( Stem("wege"), "weg" );
	deepEqual( Stem("wegekrautes"), "wegekraut" );
	deepEqual( Stem("wegen"), "weg" );
	deepEqual( Stem("weges"), "weg" );
	deepEqual( Stem("wegfahren"), "wegfahr" );
	deepEqual( Stem("wegfliegen"), "wegflieg" );
	deepEqual( Stem("wegführe"), "wegfuhr" );
	deepEqual( Stem("wegführen"), "wegfuhr" );
	deepEqual( Stem("wegg"), "wegg" );
	deepEqual( Stem("weggebracht"), "weggebracht" );
	deepEqual( Stem("weggefahren"), "weggefahr" );
	deepEqual( Stem("weggefallen"), "weggefall" );
	deepEqual( Stem("weggefegt"), "weggefegt" );
	deepEqual( Stem("weggeflogen"), "weggeflog" );
	deepEqual( Stem("weggeführt"), "weggefuhrt" );
	deepEqual( Stem("weggegangen"), "weggegang" );
	deepEqual( Stem("weggehen"), "weggeh" );
	deepEqual( Stem("weggehoben"), "weggehob" );
	deepEqual( Stem("weggeholt"), "weggeholt" );
	deepEqual( Stem("weggekommen"), "weggekomm" );
	deepEqual( Stem("weggeleugnet"), "weggeleugnet" );
	deepEqual( Stem("weggenommen"), "weggenomm" );
	deepEqual( Stem("weggerafft"), "weggerafft" );
	deepEqual( Stem("weggerissen"), "weggeriss" );
	deepEqual( Stem("weggeschafft"), "weggeschafft" );
	deepEqual( Stem("weggeschoben"), "weggeschob" );
	deepEqual( Stem("weggespült"), "weggespult" );
	deepEqual( Stem("weggestorben"), "weggestorb" );
	deepEqual( Stem("weggetrieben"), "weggetrieb" );
	deepEqual( Stem("weggewendet"), "weggewendet" );
	deepEqual( Stem("weggeworfen"), "weggeworf" );
	deepEqual( Stem("weggezerrt"), "weggezerrt" );
	deepEqual( Stem("weggezogen"), "weggezog" );
	deepEqual( Stem("weggingest"), "wegging" );
	deepEqual( Stem("weggucht"), "weggucht" );
	deepEqual( Stem("wegkommen"), "wegkomm" );
	deepEqual( Stem("wegliessen"), "wegliess" );
	deepEqual( Stem("wegmachen"), "wegmach" );
	deepEqual( Stem("wegmarschierte"), "wegmarschiert" );
	deepEqual( Stem("wegnahme"), "wegnahm" );
	deepEqual( Stem("wegnehme"), "wegnehm" );
	deepEqual( Stem("wegnehmen"), "wegnehm" );
	deepEqual( Stem("wegnimmt"), "wegnimmt" );
	deepEqual( Stem("wegräumung"), "wegraum" );
	deepEqual( Stem("wegrichtung"), "wegricht" );
	deepEqual( Stem("wegsah"), "wegsah" );
	deepEqual( Stem("wegschaffen"), "wegschaff" );
	deepEqual( Stem("wegschaffung"), "wegschaff" );
	deepEqual( Stem("wegsetzt"), "wegsetzt" );
	deepEqual( Stem("wegsortiert"), "wegsortiert" );
	deepEqual( Stem("wegspringen"), "wegspring" );
	deepEqual( Stem("wegstiesse"), "wegstiess" );
	deepEqual( Stem("wegstrebten"), "wegstrebt" );
	deepEqual( Stem("wegströmte"), "wegstromt" );
	deepEqual( Stem("wegstunde"), "wegstund" );
	deepEqual( Stem("wegtragen"), "wegtrag" );
	deepEqual( Stem("wegtreiben"), "wegtreib" );
	deepEqual( Stem("wegtreibt"), "wegtreibt" );
	deepEqual( Stem("wegtrieb"), "wegtrieb" );
	deepEqual( Stem("wegtrieben"), "wegtrieb" );
	deepEqual( Stem("wegvernünfteln"), "wegvernunfteln" );
	deepEqual( Stem("wegwenden"), "wegwend" );
	deepEqual( Stem("wegwerfen"), "wegwerf" );
	deepEqual( Stem("wegwerfend"), "wegwerf" );
	deepEqual( Stem("wegwischen"), "wegwisch" );
	deepEqual( Stem("wegwürfe"), "wegwurf" );
	deepEqual( Stem("wegzogen"), "wegzog" );
	deepEqual( Stem("wegzubringen"), "wegzubring" );
	deepEqual( Stem("wegzufahren"), "wegzufahr" );
	deepEqual( Stem("wegzufangen"), "wegzufang" );
	deepEqual( Stem("wegzugehen"), "wegzugeh" );
	deepEqual( Stem("wegzuheben"), "wegzuheb" );
	deepEqual( Stem("wegzuholen"), "wegzuhol" );
	deepEqual( Stem("wegzukommen"), "wegzukomm" );
	deepEqual( Stem("wegzumachen"), "wegzumach" );
	deepEqual( Stem("wegzunehmen"), "wegzunehm" );
	deepEqual( Stem("wegzupraktizieren"), "wegzupraktizi" );
	deepEqual( Stem("wegzuraffen"), "wegzuraff" );
	deepEqual( Stem("wegzuschaffen"), "wegzuschaff" );
	deepEqual( Stem("wegzuschicken"), "wegzuschick" );
	deepEqual( Stem("weh"), "weh" );
	deepEqual( Stem("wehe"), "weh" );
	deepEqual( Stem("wehen"), "weh" );
	deepEqual( Stem("wehendem"), "wehend" );
	deepEqual( Stem("wehenden"), "wehend" );
	deepEqual( Stem("wehes"), "weh" );
	deepEqual( Stem("wehet"), "wehet" );
	deepEqual( Stem("wehetuender"), "wehetu" );
	deepEqual( Stem("wehklage"), "wehklag" );
	deepEqual( Stem("wehklagen"), "wehklag" );
	deepEqual( Stem("wehklagenden"), "wehklag" );
	deepEqual( Stem("wehmut"), "wehmut" );
	deepEqual( Stem("wehmütig"), "wehmut" );
	deepEqual( Stem("wehmütige"), "wehmut" );
	deepEqual( Stem("wehmutsvoll"), "wehmutsvoll" );
	deepEqual( Stem("wehmutter"), "wehmutt" );
	deepEqual( Stem("wehmütter"), "wehmutt" );
	deepEqual( Stem("wehmüttern"), "wehmutt" );
	deepEqual( Stem("weho"), "weho" );
	deepEqual( Stem("wehr"), "wehr" );
	deepEqual( Stem("wehrbaren"), "wehrbar" );
	deepEqual( Stem("wehrbarkeit"), "wehrbar" );
	deepEqual( Stem("wehrdienst"), "wehrdien" );
	deepEqual( Stem("wehren"), "wehr" );
	deepEqual( Stem("wehrend"), "wehrend" );
	deepEqual( Stem("wehret"), "wehret" );
	deepEqual( Stem("wehrhaft"), "wehrhaft" );
	deepEqual( Stem("wehrhaften"), "wehrhaft" );
	deepEqual( Stem("wehrlos"), "wehrlos" );
	deepEqual( Stem("wehrlosen"), "wehrlos" );
	deepEqual( Stem("wehrte"), "wehrt" );
	deepEqual( Stem("wehselig"), "wehsel" );
	deepEqual( Stem("weht"), "weht" );
	deepEqual( Stem("wehte"), "weht" );
	deepEqual( Stem("wehten"), "weht" );
	deepEqual( Stem("wehtun"), "wehtun" );
	deepEqual( Stem("wehwehchen"), "wehwehch" );
	deepEqual( Stem("weib"), "weib" );
	deepEqual( Stem("weibchen"), "weibch" );
	deepEqual( Stem("weibe"), "weib" );
	deepEqual( Stem("weibel"), "weibel" );
	deepEqual( Stem("weiber"), "weib" );
	deepEqual( Stem("weibergut"), "weibergut" );
	deepEqual( Stem("weibergute"), "weibergut" );
	deepEqual( Stem("weibergutes"), "weibergut" );
	deepEqual( Stem("weiberhaare"), "weiberhaar" );
	deepEqual( Stem("weiberkleidern"), "weiberkleid" );
	deepEqual( Stem("weiberl"), "weiberl" );
	deepEqual( Stem("weiberlaunischen"), "weiberlaun" );
	deepEqual( Stem("weibern"), "weib" );
	deepEqual( Stem("weibernücken"), "weibernuck" );
	deepEqual( Stem("weiberschuhe"), "weiberschuh" );
	deepEqual( Stem("weibervolk"), "weibervolk" );
	deepEqual( Stem("weibes"), "weib" );
	deepEqual( Stem("weiblein"), "weiblein" );
	deepEqual( Stem("weibleins"), "weiblein" );
	deepEqual( Stem("weiblich"), "weiblich" );
	deepEqual( Stem("weibliche"), "weiblich" );
	deepEqual( Stem("weiblichen"), "weiblich" );
	deepEqual( Stem("weiblicher"), "weiblich" );
	deepEqual( Stem("weibliches"), "weiblich" );
	deepEqual( Stem("weiblichkeit"), "weiblich" );
	deepEqual( Stem("weibsbild"), "weibsbild" );
	deepEqual( Stem("weibsbilder"), "weibsbild" );
	deepEqual( Stem("weibsleut"), "weibsleut" );
	deepEqual( Stem("weibsleute"), "weibsleut" );
	deepEqual( Stem("weibsperson"), "weibsperson" );
	deepEqual( Stem("weibstück"), "weibstuck" );
	deepEqual( Stem("weich"), "weich" );
	deepEqual( Stem("weiche"), "weich" );
	deepEqual( Stem("weichen"), "weich" );
	deepEqual( Stem("weicher"), "weich" );
	deepEqual( Stem("weicheren"), "weich" );
	deepEqual( Stem("weiches"), "weich" );
	deepEqual( Stem("weichet"), "weichet" );
	deepEqual( Stem("weichherzigen"), "weichherz" );
	deepEqual( Stem("weichlichen"), "weichlich" );
	deepEqual( Stem("weichquark"), "weichquark" );
	deepEqual( Stem("weichsel"), "weichsel" );
	deepEqual( Stem("weichste"), "weich" );
	deepEqual( Stem("weicht"), "weicht" );
	deepEqual( Stem("weide"), "weid" );
	deepEqual( Stem("weiden"), "weid" );
	deepEqual( Stem("weidenbaum"), "weidenbaum" );
	deepEqual( Stem("weidenden"), "weidend" );
	deepEqual( Stem("weidenringe"), "weidenring" );
	deepEqual( Stem("weidenröschen"), "weidenrosch" );
	deepEqual( Stem("weidenrosen"), "weidenros" );
	deepEqual( Stem("weidenstauden"), "weidenstaud" );
	deepEqual( Stem("weidet"), "weidet" );
	deepEqual( Stem("weidete"), "weidet" );
	deepEqual( Stem("weidgerechteste"), "weidgerecht" );
	deepEqual( Stem("weidlich"), "weidlich" );
	deepEqual( Stem("weidmann"), "weidmann" );
	deepEqual( Stem("weidmannes"), "weidmann" );
	deepEqual( Stem("weidmannsfreude"), "weidmannsfreud" );
	deepEqual( Stem("weidmannspech"), "weidmannspech" );
	deepEqual( Stem("weidmannstod"), "weidmannstod" );
	deepEqual( Stem("weidwerk"), "weidwerk" );
	deepEqual( Stem("weidwund"), "weidwund" );
	deepEqual( Stem("weigern"), "weig" );
	deepEqual( Stem("weigerst"), "weigerst" );
	deepEqual( Stem("weigert"), "weigert" );
	deepEqual( Stem("weigerung"), "weiger" );
	deepEqual( Stem("weih"), "weih" );
	deepEqual( Stem("weihbischof"), "weihbischof" );
	deepEqual( Stem("weihe"), "weih" );
	deepEqual( Stem("weihen"), "weih" );
	deepEqual( Stem("weihevollen"), "weihevoll" );
	deepEqual( Stem("weihnachten"), "weihnacht" );
	deepEqual( Stem("weihnachtsbäumchen"), "weihnachtsbaumch" );
	deepEqual( Stem("weihnachtsbäumen"), "weihnachtsbaum" );
	deepEqual( Stem("weihnachtsengelchen"), "weihnachtsengelch" );
	deepEqual( Stem("weihnachtsgarten"), "weihnachtsgart" );
	deepEqual( Stem("weihnachtslied"), "weihnachtslied" );
	deepEqual( Stem("weihnachtsmann"), "weihnachtsmann" );
	deepEqual( Stem("weihnachtsnüsse"), "weihnachtsnuss" );
	deepEqual( Stem("weihnachtsstube"), "weihnachtsstub" );
	deepEqual( Stem("weihnachtssüssigkeiten"), "weihnachtssuss" );
	deepEqual( Stem("weihnachtstisch"), "weihnachtst" );
	deepEqual( Stem("weihnachtsvesper"), "weihnachtsvesp" );
	deepEqual( Stem("weihnachtswiese"), "weihnachtswies" );
	deepEqual( Stem("weihrauch"), "weihrauch" );
	deepEqual( Stem("weil"), "weil" );
	deepEqual( Stem("weilchen"), "weilch" );
	deepEqual( Stem("weile"), "weil" );
	deepEqual( Stem("weilen"), "weil" );
	deepEqual( Stem("weilt"), "weilt" );
	deepEqual( Stem("weilte"), "weilt" );
	deepEqual( Stem("wein"), "wein" );
	deepEqual( Stem("weinbeere"), "weinbe" );
	deepEqual( Stem("weinberg"), "weinberg" );
	deepEqual( Stem("weinberge"), "weinberg" );
	deepEqual( Stem("weinbergswachteln"), "weinbergswachteln" );
	deepEqual( Stem("weine"), "wein" );
	deepEqual( Stem("weinen"), "wein" );
	deepEqual( Stem("weinend"), "weinend" );
	deepEqual( Stem("weinendes"), "weinend" );
	deepEqual( Stem("weinerlich"), "wein" );
	deepEqual( Stem("weines"), "wein" );
	deepEqual( Stem("weinet"), "weinet" );
	deepEqual( Stem("weinflaschen"), "weinflasch" );
	deepEqual( Stem("weingärtner"), "weingartn" );
	deepEqual( Stem("weingefässe"), "weingefass" );
	deepEqual( Stem("weingefäße"), "weingefass" );
	deepEqual( Stem("weinreben"), "weinreb" );
	deepEqual( Stem("weinrot"), "weinrot" );
	deepEqual( Stem("weins"), "wein" );
	deepEqual( Stem("weinsorten"), "weinsort" );
	deepEqual( Stem("weinstock"), "weinstock" );
	deepEqual( Stem("weint"), "weint" );
	deepEqual( Stem("weinte"), "weint" );
	deepEqual( Stem("weinten"), "weint" );
	deepEqual( Stem("weintrinken"), "weintrink" );
	deepEqual( Stem("weintrinker"), "weintrink" );
	deepEqual( Stem("weise"), "weis" );
	deepEqual( Stem("weisen"), "weis" );
	deepEqual( Stem("weiser"), "weis" );
	deepEqual( Stem("weisesten"), "weis" );
	deepEqual( Stem("weisheit"), "weisheit" );
	deepEqual( Stem("weisheiten"), "weisheit" );
	deepEqual( Stem("weisheitslehre"), "weisheitslehr" );
	deepEqual( Stem("weisheitslehrer"), "weisheitslehr" );
	deepEqual( Stem("weislich"), "weislich" );
	deepEqual( Stem("weiss"), "weiss" );
	deepEqual( Stem("weiß"), "weiss" );
	deepEqual( Stem("weissage"), "weissag" );
	deepEqual( Stem("weissagen"), "weissag" );
	deepEqual( Stem("weissagenden"), "weissag" );
	deepEqual( Stem("weissagt"), "weissagt" );
	deepEqual( Stem("weissagte"), "weissagt" );
	deepEqual( Stem("weissagung"), "weissag" );
	deepEqual( Stem("weissbefilzte"), "weissbefilzt" );
	deepEqual( Stem("weißbefilzte"), "weissbefilzt" );
	deepEqual( Stem("weissbrot"), "weissbrot" );
	deepEqual( Stem("weisse"), "weiss" );
	deepEqual( Stem("weiße"), "weiss" );
	deepEqual( Stem("weissem"), "weiss" );
	deepEqual( Stem("weißem"), "weiss" );
	deepEqual( Stem("weissen"), "weiss" );
	deepEqual( Stem("weißen"), "weiss" );
	deepEqual( Stem("weisser"), "weiss" );
	deepEqual( Stem("weißer"), "weiss" );
	deepEqual( Stem("weisseren"), "weiss" );
	deepEqual( Stem("weisses"), "weiss" );
	deepEqual( Stem("weißes"), "weiss" );
	deepEqual( Stem("weissgetünchten"), "weissgetuncht" );
	deepEqual( Stem("weißgetünchten"), "weissgetuncht" );
	deepEqual( Stem("weissgetüpfeltem"), "weissgetupfelt" );
	deepEqual( Stem("weissglasierte"), "weissglasiert" );
	deepEqual( Stem("weisshaarige"), "weisshaar" );
	deepEqual( Stem("weißhaarige"), "weisshaar" );
	deepEqual( Stem("weisshaupt"), "weisshaupt" );
	deepEqual( Stem("weisskohl"), "weisskohl" );
	deepEqual( Stem("weissleinen"), "weisslein" );
	deepEqual( Stem("weißleinen"), "weisslein" );
	deepEqual( Stem("weissseidenen"), "weissseid" );
	deepEqual( Stem("weißseidenen"), "weissseid" );
	deepEqual( Stem("weisst"), "weisst" );
	deepEqual( Stem("weißt"), "weisst" );
	deepEqual( Stem("weist"), "weist" );
	deepEqual( Stem("weisung"), "weisung" );
	deepEqual( Stem("weisungen"), "weisung" );
	deepEqual( Stem("weisungsbefugnisse"), "weisungsbefugnis" );
	deepEqual( Stem("weit"), "weit" );
	deepEqual( Stem("weite"), "weit" );
	deepEqual( Stem("weitem"), "weit" );
	deepEqual( Stem("weiten"), "weit" );
	deepEqual( Stem("weitentlegenen"), "weitentleg" );
	deepEqual( Stem("weiter"), "weit" );
	deepEqual( Stem("weitere"), "weit" );
	deepEqual( Stem("weiterem"), "weit" );
	deepEqual( Stem("weiteren"), "weit" );
	deepEqual( Stem("weiterer"), "weit" );
	deepEqual( Stem("weiteres"), "weit" );
	deepEqual( Stem("weiterfliehen"), "weiterflieh" );
	deepEqual( Stem("weiterführen"), "weiterfuhr" );
	deepEqual( Stem("weitergang"), "weitergang" );
	deepEqual( Stem("weitergebildet"), "weitergebildet" );
	deepEqual( Stem("weitergebracht"), "weitergebracht" );
	deepEqual( Stem("weitergegangen"), "weitergegang" );
	deepEqual( Stem("weitergegeben"), "weitergegeb" );
	deepEqual( Stem("weitergehen"), "weitergeh" );
	deepEqual( Stem("weitergezogen"), "weitergezog" );
	deepEqual( Stem("weiterhin"), "weiterhin" );
	deepEqual( Stem("weiterjagte"), "weiterjagt" );
	deepEqual( Stem("weitern"), "weit" );
	deepEqual( Stem("weiterrutschte"), "weiterrutscht" );
	deepEqual( Stem("weiters"), "weit" );
	deepEqual( Stem("weiterschritten"), "weiterschritt" );
	deepEqual( Stem("weitersprach"), "weitersprach" );
	deepEqual( Stem("weiterverkauft"), "weiterverkauft" );
	deepEqual( Stem("weiterziehen"), "weiterzieh" );
	deepEqual( Stem("weiterzogen"), "weiterzog" );
	deepEqual( Stem("weiterzuführen"), "weiterzufuhr" );
	deepEqual( Stem("weiterzureden"), "weiterzured" );
	deepEqual( Stem("weites"), "weit" );
	deepEqual( Stem("weitesten"), "weit" );
	deepEqual( Stem("weitgedehnte"), "weitgedehnt" );
	deepEqual( Stem("weitgehend"), "weitgeh" );
	deepEqual( Stem("weitgespannten"), "weitgespannt" );
	deepEqual( Stem("weitherausstehenden"), "weitheraussteh" );
	deepEqual( Stem("weithin"), "weithin" );
	deepEqual( Stem("weithingestreckt"), "weithingestreckt" );
	deepEqual( Stem("weitläufig"), "weitlauf" );
	deepEqual( Stem("weitläufige"), "weitlauf" );
	deepEqual( Stem("weitläufigen"), "weitlauf" );
	deepEqual( Stem("weitschwingende"), "weitschwing" );
	deepEqual( Stem("weizen"), "weiz" );
	deepEqual( Stem("weizenbrot"), "weizenbrot" );
	deepEqual( Stem("weizenmehl"), "weizenmehl" );
	deepEqual( Stem("weizens"), "weiz" );
	deepEqual( Stem("welch"), "welch" );
	deepEqual( Stem("welche"), "welch" );
	deepEqual( Stem("welchem"), "welch" );
	deepEqual( Stem("welchen"), "welch" );
	deepEqual( Stem("welcher"), "welch" );
	deepEqual( Stem("welcherart"), "welcherart" );
	deepEqual( Stem("welcherlei"), "welcherlei" );
	deepEqual( Stem("welches"), "welch" );
	deepEqual( Stem("welk"), "welk" );
	deepEqual( Stem("welken"), "welk" );
	deepEqual( Stem("welkenden"), "welkend" );
	deepEqual( Stem("well"), "well" );
	deepEqual( Stem("welle"), "well" );
	deepEqual( Stem("wellen"), "well" );
	deepEqual( Stem("wellenfurchen"), "wellenfurch" );
	deepEqual( Stem("welt"), "welt" );
	deepEqual( Stem("weltall"), "weltall" );
	deepEqual( Stem("weltalls"), "weltall" );
	deepEqual( Stem("weltanschauung"), "weltanschau" );
	deepEqual( Stem("weltanschauungfragen"), "weltanschauungfrag" );
	deepEqual( Stem("weltbau"), "weltbau" );
	deepEqual( Stem("weltbegebenheiten"), "weltbegeb" );
	deepEqual( Stem("weltbetrachtung"), "weltbetracht" );
	deepEqual( Stem("weltbewegenden"), "weltbeweg" );
	deepEqual( Stem("weltbund"), "weltbund" );
	deepEqual( Stem("weltbundes"), "weltbund" );
	deepEqual( Stem("welten"), "welt" );
	deepEqual( Stem("weltenmenge"), "weltenmeng" );
	deepEqual( Stem("weltenraum"), "weltenraum" );
	deepEqual( Stem("weltgebäudes"), "weltgebaud" );
	deepEqual( Stem("weltkongress"), "weltkongress" );
	deepEqual( Stem("weltkörper"), "weltkorp" );
	deepEqual( Stem("weltkreis"), "weltkreis" );
	deepEqual( Stem("weltkreises"), "weltkreis" );
	deepEqual( Stem("weltkrieg"), "weltkrieg" );
	deepEqual( Stem("weltkriegs"), "weltkrieg" );
	deepEqual( Stem("weltlich"), "weltlich" );
	deepEqual( Stem("weltliche"), "weltlich" );
	deepEqual( Stem("weltlichen"), "weltlich" );
	deepEqual( Stem("weltlicher"), "weltlich" );
	deepEqual( Stem("weltliches"), "weltlich" );
	deepEqual( Stem("weltlicht"), "weltlicht" );
	deepEqual( Stem("weltliebe"), "weltlieb" );
	deepEqual( Stem("weltmann"), "weltmann" );
	deepEqual( Stem("weltmeers"), "weltme" );
	deepEqual( Stem("weltnacht"), "weltnacht" );
	deepEqual( Stem("weltordnung"), "weltordn" );
	deepEqual( Stem("weltregierer"), "weltregi" );
	deepEqual( Stem("weltschmerzlich"), "weltschmerz" );
	deepEqual( Stem("weltschöpfer"), "weltschopf" );
	deepEqual( Stem("weltstrome"), "weltstrom" );
	deepEqual( Stem("weltteilen"), "weltteil" );
	deepEqual( Stem("welturheber"), "welturheb" );
	deepEqual( Stem("welturhebers"), "welturheb" );
	deepEqual( Stem("weltursachen"), "weltursach" );
	deepEqual( Stem("weltverantwortung"), "weltverantwort" );
	deepEqual( Stem("weltweisheit"), "weltweis" );
	deepEqual( Stem("weltweit"), "weltweit" );
	deepEqual( Stem("wem"), "wem" );
	deepEqual( Stem("wen"), "wen" );
	deepEqual( Stem("wende"), "wend" );
	deepEqual( Stem("wenden"), "wend" );
	deepEqual( Stem("wendend"), "wendend" );
	deepEqual( Stem("wendenden"), "wendend" );
	deepEqual( Stem("wendet"), "wendet" );
	deepEqual( Stem("wendete"), "wendet" );
	deepEqual( Stem("wendeten"), "wendet" );
	deepEqual( Stem("wendrich"), "wendrich" );
	deepEqual( Stem("wendung"), "wendung" );
	deepEqual( Stem("wendungen"), "wendung" );
	deepEqual( Stem("wenig"), "wenig" );
	deepEqual( Stem("wenige"), "wenig" );
	deepEqual( Stem("wenigem"), "wenig" );
	deepEqual( Stem("wenigen"), "wenig" );
	deepEqual( Stem("weniger"), "wenig" );
	deepEqual( Stem("wenigere"), "wenig" );
	deepEqual( Stem("weniges"), "wenig" );
	deepEqual( Stem("wenigsten"), "wenig" );
	deepEqual( Stem("wenigstens"), "wenigst" );
	deepEqual( Stem("wenn"), "wenn" );
	deepEqual( Stem("wenngleich"), "wenngleich" );
	deepEqual( Stem("wenzel"), "wenzel" );
	deepEqual( Stem("wer"), "wer" );
	deepEqual( Stem("werbebeschränkungen"), "werbebeschrank" );
	deepEqual( Stem("werben"), "werb" );
	deepEqual( Stem("werd"), "werd" );
	deepEqual( Stem("werde"), "werd" );
	deepEqual( Stem("werden"), "werd" );
	deepEqual( Stem("werdend"), "werdend" );
	deepEqual( Stem("werdende"), "werdend" );
	deepEqual( Stem("werdenden"), "werdend" );
	deepEqual( Stem("werdest"), "werd" );
	deepEqual( Stem("werdet"), "werdet" );
	deepEqual( Stem("werfe"), "werf" );
	deepEqual( Stem("werfen"), "werf" );
	deepEqual( Stem("werften"), "werft" );
	deepEqual( Stem("werg"), "werg" );
	deepEqual( Stem("wergg"), "wergg" );
	deepEqual( Stem("werk"), "werk" );
	deepEqual( Stem("werke"), "werk" );
	deepEqual( Stem("werkeltagskleider"), "werkeltagskleid" );
	deepEqual( Stem("werken"), "werk" );
	deepEqual( Stem("werkes"), "werk" );
	deepEqual( Stem("werkführer"), "werkfuhr" );
	deepEqual( Stem("werkführers"), "werkfuhr" );
	deepEqual( Stem("werkmeister"), "werkmeist" );
	deepEqual( Stem("werkstatt"), "werkstatt" );
	deepEqual( Stem("werktag"), "werktag" );
	deepEqual( Stem("werktagen"), "werktag" );
	deepEqual( Stem("werktagsmontur"), "werktagsmontur" );
	deepEqual( Stem("werktätigen"), "werktat" );
	deepEqual( Stem("werktätigkeit"), "werktat" );
	deepEqual( Stem("werkzeug"), "werkzeug" );
	deepEqual( Stem("werkzeuge"), "werkzeug" );
	deepEqual( Stem("werkzeugliches"), "werkzeug" );
	deepEqual( Stem("wert"), "wert" );
	deepEqual( Stem("werte"), "wert" );
	deepEqual( Stem("werten"), "wert" );
	deepEqual( Stem("werterziehung"), "werterzieh" );
	deepEqual( Stem("werteste"), "wert" );
	deepEqual( Stem("werteverfall"), "werteverfall" );
	deepEqual( Stem("wertlos"), "wertlos" );
	deepEqual( Stem("wertlose"), "wertlos" );
	deepEqual( Stem("wertlosigkeit"), "wertlos" );
	deepEqual( Stem("werts"), "wert" );
	deepEqual( Stem("wertvoll"), "wertvoll" );
	deepEqual( Stem("wertvolle"), "wertvoll" );
	deepEqual( Stem("wertvollen"), "wertvoll" );
	deepEqual( Stem("wertvollste"), "wertvoll" );
	deepEqual( Stem("wes"), "wes" );
	deepEqual( Stem("wesen"), "wes" );
	deepEqual( Stem("wesenlosen"), "wesenlos" );
	deepEqual( Stem("wesens"), "wes" );
	deepEqual( Stem("wesentlich"), "wesent" );
	deepEqual( Stem("wesentliche"), "wesent" );
	deepEqual( Stem("wesentlichen"), "wesent" );
	deepEqual( Stem("wesentlicher"), "wesent" );
	deepEqual( Stem("wesentliches"), "wesent" );
	deepEqual( Stem("wesentlichste"), "wesent" );
	deepEqual( Stem("weshalb"), "weshalb" );
	deepEqual( Stem("wespe"), "wesp" );
	deepEqual( Stem("wessen"), "wess" );
	deepEqual( Stem("west"), "west" );
	deepEqual( Stem("westdeutschen"), "westdeutsch" );
	deepEqual( Stem("westdeutscher"), "westdeutsch" );
	deepEqual( Stem("westdeutschland"), "westdeutschland" );
	deepEqual( Stem("weste"), "west" );
	deepEqual( Stem("westen"), "west" );
	deepEqual( Stem("westenstoff"), "westenstoff" );
	deepEqual( Stem("westenstreifen"), "westenstreif" );
	deepEqual( Stem("westfalen"), "westfal" );
	deepEqual( Stem("westfirmen"), "westfirm" );
	deepEqual( Stem("westlertum"), "westlertum" );
	deepEqual( Stem("westlichen"), "westlich" );
	deepEqual( Stem("westliches"), "westlich" );
	deepEqual( Stem("westschweizer"), "westschweiz" );
	deepEqual( Stem("westtürkischen"), "westturk" );
	deepEqual( Stem("westwind"), "westwind" );
	deepEqual( Stem("westwindes"), "westwind" );
	deepEqual( Stem("weswegen"), "wesweg" );
	deepEqual( Stem("wette"), "wett" );
	deepEqual( Stem("wetteifern"), "wetteif" );
	deepEqual( Stem("wetteiferten"), "wetteifert" );
	deepEqual( Stem("wetten"), "wett" );
	deepEqual( Stem("wetter"), "wett" );
	deepEqual( Stem("wetterbeschädigten"), "wetterbeschadigt" );
	deepEqual( Stem("wetternacht"), "wetternacht" );
	deepEqual( Stem("wetters"), "wett" );
	deepEqual( Stem("wetterwendisch"), "wetterwend" );
	deepEqual( Stem("wetterwind"), "wetterwind" );
	deepEqual( Stem("wettkampf"), "wettkampf" );
	deepEqual( Stem("wettlauf"), "wettlauf" );
	deepEqual( Stem("wettlaufens"), "wettlauf" );
	deepEqual( Stem("wettstreit"), "wettstreit" );
	deepEqual( Stem("wetzend"), "wetzend" );
	deepEqual( Stem("wetzte"), "wetzt" );
	deepEqual( Stem("wich"), "wich" );
	deepEqual( Stem("wichen"), "wich" );
	deepEqual( Stem("wichte"), "wicht" );
	deepEqual( Stem("wichtig"), "wichtig" );
	deepEqual( Stem("wichtige"), "wichtig" );
	deepEqual( Stem("wichtigem"), "wichtig" );
	deepEqual( Stem("wichtigen"), "wichtig" );
	deepEqual( Stem("wichtiger"), "wichtig" );
	deepEqual( Stem("wichtigere"), "wichtig" );
	deepEqual( Stem("wichtigeren"), "wichtig" );
	deepEqual( Stem("wichtiges"), "wichtig" );
	deepEqual( Stem("wichtigkeit"), "wichtig" );
	deepEqual( Stem("wichtigste"), "wichtig" );
	deepEqual( Stem("wichtigsten"), "wichtig" );
	deepEqual( Stem("wichtigtuerei"), "wichtigtuerei" );
	deepEqual( Stem("wickelkindchen"), "wickelkindch" );
	deepEqual( Stem("wickelte"), "wickelt" );
	deepEqual( Stem("widder"), "widd" );
	deepEqual( Stem("widderfellen"), "widderfell" );
	deepEqual( Stem("widdern"), "widd" );
	deepEqual( Stem("widders"), "widd" );
	deepEqual( Stem("wide"), "wid" );
	deepEqual( Stem("wider"), "wid" );
	deepEqual( Stem("widerfahre"), "widerfahr" );
	deepEqual( Stem("widerfahren"), "widerfahr" );
	deepEqual( Stem("widerfährt"), "widerfahrt" );
	deepEqual( Stem("widerfuhr"), "widerfuhr" );
	deepEqual( Stem("widergehallt"), "widergehallt" );
	deepEqual( Stem("widergöttlich"), "widergott" );
	deepEqual( Stem("widerhaarig"), "widerhaar" );
	deepEqual( Stem("widerhall"), "widerhall" );
	deepEqual( Stem("widerhallte"), "widerhallt" );
	deepEqual( Stem("widerhallten"), "widerhallt" );
	deepEqual( Stem("widerlegen"), "widerleg" );
	deepEqual( Stem("widerlegt"), "widerlegt" );
	deepEqual( Stem("widerlegung"), "widerleg" );
	deepEqual( Stem("widerlegungen"), "widerleg" );
	deepEqual( Stem("widerlich"), "wid" );
	deepEqual( Stem("widerlichen"), "wid" );
	deepEqual( Stem("widerred"), "widerred" );
	deepEqual( Stem("widerrede"), "widerred" );
	deepEqual( Stem("widersacher"), "widersach" );
	deepEqual( Stem("widerschein"), "widerschein" );
	deepEqual( Stem("widersetzen"), "widersetz" );
	deepEqual( Stem("widersetzlichkeit"), "widersetz" );
	deepEqual( Stem("widersetzt"), "widersetzt" );
	deepEqual( Stem("widersetzte"), "widersetzt" );
	deepEqual( Stem("widersetzten"), "widersetzt" );
	deepEqual( Stem("widersetzung"), "widersetz" );
	deepEqual( Stem("widersinnig"), "widersinn" );
	deepEqual( Stem("widersinnisch"), "widersinn" );
	deepEqual( Stem("widerspenstig"), "widerspenst" );
	deepEqual( Stem("widerspenstige"), "widerspenst" );
	deepEqual( Stem("widerspenstigsten"), "widerspenst" );
	deepEqual( Stem("widerspiele"), "widerspiel" );
	deepEqual( Stem("widersprach"), "widersprach" );
	deepEqual( Stem("widerspreche"), "widersprech" );
	deepEqual( Stem("widersprechen"), "widersprech" );
	deepEqual( Stem("widersprechend"), "widersprech" );
	deepEqual( Stem("widersprechende"), "widersprech" );
	deepEqual( Stem("widersprechenden"), "widersprech" );
	deepEqual( Stem("widersprechender"), "widersprech" );
	deepEqual( Stem("widerspricht"), "widerspricht" );
	deepEqual( Stem("widerspruch"), "widerspruch" );
	deepEqual( Stem("widersprüche"), "widerspruch" );
	deepEqual( Stem("widerspruchs"), "widerspruch" );
	deepEqual( Stem("widerstand"), "widerstand" );
	deepEqual( Stem("widerstande"), "widerstand" );
	deepEqual( Stem("widerstanden"), "widerstand" );
	deepEqual( Stem("widerstandes"), "widerstand" );
	deepEqual( Stem("widerstandslos"), "widerstandslos" );
	deepEqual( Stem("widerstehen"), "widersteh" );
	deepEqual( Stem("widerstehende"), "widersteh" );
	deepEqual( Stem("widerstehendes"), "widersteh" );
	deepEqual( Stem("widersteht"), "widersteht" );
	deepEqual( Stem("widerstrebe"), "widerstreb" );
	deepEqual( Stem("widerstreben"), "widerstreb" );
	deepEqual( Stem("widerstrebend"), "widerstreb" );
	deepEqual( Stem("widerstrebt"), "widerstrebt" );
	deepEqual( Stem("widerstrebte"), "widerstrebt" );
	deepEqual( Stem("widerstrebung"), "widerstreb" );
	deepEqual( Stem("widerstreit"), "widerstreit" );
	deepEqual( Stem("widerstreiten"), "widerstreit" );
	deepEqual( Stem("widerstreitende"), "widerstreit" );
	deepEqual( Stem("widerstreitet"), "widerstreitet" );
	deepEqual( Stem("widerstreits"), "widerstreit" );
	deepEqual( Stem("widertönen"), "widerton" );
	deepEqual( Stem("widerwärtig"), "widerwart" );
	deepEqual( Stem("widerwärtige"), "widerwart" );
	deepEqual( Stem("widerwärtiger"), "widerwart" );
	deepEqual( Stem("widerwärtigsten"), "widerwart" );
	deepEqual( Stem("widerwillen"), "widerwill" );
	deepEqual( Stem("widerwillens"), "widerwill" );
	deepEqual( Stem("widerwillig"), "widerwill" );
	deepEqual( Stem("widerwilliges"), "widerwill" );
	deepEqual( Stem("widmen"), "widm" );
	deepEqual( Stem("widmet"), "widmet" );
	deepEqual( Stem("widmete"), "widmet" );
	deepEqual( Stem("widrig"), "widrig" );
	deepEqual( Stem("widrige"), "widrig" );
	deepEqual( Stem("widrigen"), "widrig" );
	deepEqual( Stem("widrigenfalls"), "widrigenfall" );
	deepEqual( Stem("wie"), "wie" );
	deepEqual( Stem("wieder"), "wied" );
	deepEqual( Stem("wiederaufbaus"), "wiederaufbaus" );
	deepEqual( Stem("wiederaufleben"), "wiederaufleb" );
	deepEqual( Stem("wiederaufnahmen"), "wiederaufnahm" );
	deepEqual( Stem("wiederaufrichtungen"), "wiederaufricht" );
	deepEqual( Stem("wiederbekam"), "wiederbekam" );
	deepEqual( Stem("wiederbekomme"), "wiederbekomm" );
	deepEqual( Stem("wiederbelebt"), "wiederbelebt" );
	deepEqual( Stem("wiederbringer"), "wiederbring" );
	deepEqual( Stem("wiederentdeckung"), "wiederentdeck" );
	deepEqual( Stem("wiedererlangte"), "wiedererlangt" );
	deepEqual( Stem("wiederfanden"), "wiederfand" );
	deepEqual( Stem("wiederfinden"), "wiederfind" );
	deepEqual( Stem("wiederfindens"), "wiederfind" );
	deepEqual( Stem("wiedergabe"), "wiedergab" );
	deepEqual( Stem("wiedergebären"), "wiedergebar" );
	deepEqual( Stem("wiedergebärer"), "wiedergebar" );
	deepEqual( Stem("wiedergebärers"), "wiedergebar" );
	deepEqual( Stem("wiedergebiert"), "wiedergebiert" );
	deepEqual( Stem("wiedergeboren"), "wiedergebor" );
	deepEqual( Stem("wiedergeborene"), "wiedergebor" );
	deepEqual( Stem("wiedergeborenen"), "wiedergebor" );
	deepEqual( Stem("wiedergeburt"), "wiedergeburt" );
	deepEqual( Stem("wiedergefunden"), "wiedergefund" );
	deepEqual( Stem("wiedergekehrten"), "wiedergekehrt" );
	deepEqual( Stem("wiedergekommen"), "wiedergekomm" );
	deepEqual( Stem("wiedergewann"), "wiedergewann" );
	deepEqual( Stem("wiedergewinnen"), "wiedergewinn" );
	deepEqual( Stem("wiedergewonnenen"), "wiedergewonn" );
	deepEqual( Stem("wiedergutmachung"), "wiedergutmach" );
	deepEqual( Stem("wiederhergestellt"), "wiederhergestellt" );
	deepEqual( Stem("wiederherstellung"), "wiederherstell" );
	deepEqual( Stem("wiederherzustellen"), "wiederherzustell" );
	deepEqual( Stem("wiederhole"), "wiederhol" );
	deepEqual( Stem("wiederholen"), "wiederhol" );
	deepEqual( Stem("wiederholt"), "wiederholt" );
	deepEqual( Stem("wiederholte"), "wiederholt" );
	deepEqual( Stem("wiederholten"), "wiederholt" );
	deepEqual( Stem("wiederholung"), "wiederhol" );
	deepEqual( Stem("wiederkam"), "wiederkam" );
	deepEqual( Stem("wiederkäme"), "wiederkam" );
	deepEqual( Stem("wiederkehr"), "wiederkehr" );
	deepEqual( Stem("wiederkehren"), "wiederkehr" );
	deepEqual( Stem("wiederkehrenden"), "wiederkehr" );
	deepEqual( Stem("wiederkehrt"), "wiederkehrt" );
	deepEqual( Stem("wiederklingen"), "wiederkling" );
	deepEqual( Stem("wiederkommen"), "wiederkomm" );
	deepEqual( Stem("wiederkommt"), "wiederkommt" );
	deepEqual( Stem("wiedersehen"), "wiederseh" );
	deepEqual( Stem("wiederum"), "wiederum" );
	deepEqual( Stem("wiedervereinigung"), "wiederverein" );
	deepEqual( Stem("wiedervergeltung"), "wiedervergelt" );
	deepEqual( Stem("wiederzufinden"), "wiederzufind" );
	deepEqual( Stem("wiederzugebärenden"), "wiederzugebar" );
	deepEqual( Stem("wiederzukehren"), "wiederzukehr" );
	deepEqual( Stem("wiege"), "wieg" );
	deepEqual( Stem("wiegen"), "wieg" );
	deepEqual( Stem("wiegt"), "wiegt" );
	deepEqual( Stem("wiegte"), "wiegt" );
	deepEqual( Stem("wiehernde"), "wiehernd" );
	deepEqual( Stem("wiehernden"), "wiehernd" );
	deepEqual( Stem("wien"), "wien" );
	deepEqual( Stem("wiener"), "wien" );
	deepEqual( Stem("wies"), "wies" );
	deepEqual( Stem("wiese"), "wies" );
	deepEqual( Stem("wiesen"), "wies" );
	deepEqual( Stem("wiesenblühenden"), "wiesenbluh" );
	deepEqual( Stem("wiesenfleck"), "wiesenfleck" );
	deepEqual( Stem("wiesengarten"), "wiesengart" );
	deepEqual( Stem("wiesengrunde"), "wiesengrund" );
	deepEqual( Stem("wiesengründe"), "wiesengrund" );
	deepEqual( Stem("wiesenrande"), "wiesenrand" );
	deepEqual( Stem("wieserl"), "wieserl" );
	deepEqual( Stem("wieso"), "wieso" );
	deepEqual( Stem("wieviel"), "wieviel" );
	deepEqual( Stem("wieviele"), "wieviel" );
	deepEqual( Stem("wiewohl"), "wiewohl" );
	deepEqual( Stem("wild"), "wild" );
	deepEqual( Stem("wildbach"), "wildbach" );
	deepEqual( Stem("wildbäche"), "wildbach" );
	deepEqual( Stem("wilddieb"), "wilddieb" );
	deepEqual( Stem("wilddieben"), "wilddieb" );
	deepEqual( Stem("wilde"), "wild" );
	deepEqual( Stem("wilden"), "wild" );
	deepEqual( Stem("wilder"), "wild" );
	deepEqual( Stem("wilderer"), "wild" );
	deepEqual( Stem("wildes"), "wild" );
	deepEqual( Stem("wildeste"), "wild" );
	deepEqual( Stem("wildesten"), "wild" );
	deepEqual( Stem("wildester"), "wild" );
	deepEqual( Stem("wildfänge"), "wildfang" );
	deepEqual( Stem("wildfremde"), "wildfremd" );
	deepEqual( Stem("wildfremden"), "wildfremd" );
	deepEqual( Stem("wildgarten"), "wildgart" );
	deepEqual( Stem("wildheit"), "wildheit" );
	deepEqual( Stem("wildnis"), "wildnis" );
	deepEqual( Stem("wildnisse"), "wildnis" );
	deepEqual( Stem("wildschütz"), "wildschutz" );
	deepEqual( Stem("wildschützen"), "wildschutz" );
	deepEqual( Stem("wildschwein"), "wildschwein" );
	deepEqual( Stem("wildtauben"), "wildtaub" );
	deepEqual( Stem("wildwechseln"), "wildwechseln" );
	deepEqual( Stem("wildwegen"), "wildweg" );
	deepEqual( Stem("wilfriede"), "wilfried" );
	deepEqual( Stem("wilhelmine"), "wilhelmin" );
	deepEqual( Stem("wilhelminenburg"), "wilhelminenburg" );
	deepEqual( Stem("will"), "will" );
	deepEqual( Stem("wille"), "will" );
	deepEqual( Stem("willem"), "will" );
	deepEqual( Stem("willen"), "will" );
	deepEqual( Stem("willenbestimmend"), "willenbestimm" );
	deepEqual( Stem("willenlos"), "willenlos" );
	deepEqual( Stem("willens"), "will" );
	deepEqual( Stem("willensanstrengung"), "willensanstreng" );
	deepEqual( Stem("willensbestimmung"), "willensbestimm" );
	deepEqual( Stem("willensbestimmungen"), "willensbestimm" );
	deepEqual( Stem("willensgebiet"), "willensgebiet" );
	deepEqual( Stem("willensgebietes"), "willensgebiet" );
	deepEqual( Stem("willensleben"), "willensleb" );
	deepEqual( Stem("willensvermögen"), "willensvermog" );
	deepEqual( Stem("willfahren"), "willfahr" );
	deepEqual( Stem("willfährig"), "willfahr" );
	deepEqual( Stem("willfährigkeit"), "willfahr" );
	deepEqual( Stem("willig"), "willig" );
	deepEqual( Stem("willige"), "willig" );
	deepEqual( Stem("willigen"), "willig" );
	deepEqual( Stem("williges"), "willig" );
	deepEqual( Stem("willigte"), "willigt" );
	deepEqual( Stem("willkommen"), "willkomm" );
	deepEqual( Stem("willkommene"), "willkomm" );
	deepEqual( Stem("willkommenen"), "willkomm" );
	deepEqual( Stem("willkür"), "willkur" );
	deepEqual( Stem("willkürlich"), "willkur" );
	deepEqual( Stem("willkürliche"), "willkur" );
	deepEqual( Stem("willst"), "will" );
	deepEqual( Stem("wimmeln"), "wimmeln" );
	deepEqual( Stem("wimmelt"), "wimmelt" );
	deepEqual( Stem("wimmelte"), "wimmelt" );
	deepEqual( Stem("wimmelten"), "wimmelt" );
	deepEqual( Stem("wimpern"), "wimp" );
	deepEqual( Stem("wind"), "wind" );
	deepEqual( Stem("windbruchfläche"), "windbruchflach" );
	deepEqual( Stem("winde"), "wind" );
	deepEqual( Stem("winden"), "wind" );
	deepEqual( Stem("windend"), "windend" );
	deepEqual( Stem("windes"), "wind" );
	deepEqual( Stem("windeswehen"), "windesweh" );
	deepEqual( Stem("windet"), "windet" );
	deepEqual( Stem("windfahne"), "windfahn" );
	deepEqual( Stem("windfaust"), "windfaust" );
	deepEqual( Stem("windhauch"), "windhauch" );
	deepEqual( Stem("windliese"), "windlies" );
	deepEqual( Stem("windlüfte"), "windluft" );
	deepEqual( Stem("windspiele"), "windspiel" );
	deepEqual( Stem("windstillen"), "windstill" );
	deepEqual( Stem("windstoss"), "windstoss" );
	deepEqual( Stem("windstoß"), "windstoss" );
	deepEqual( Stem("wink"), "wink" );
	deepEqual( Stem("winke"), "wink" );
	deepEqual( Stem("winkel"), "winkel" );
	deepEqual( Stem("winkeladvokaten"), "winkeladvokat" );
	deepEqual( Stem("winkelei"), "winkelei" );
	deepEqual( Stem("winkeleien"), "winkelei" );
	deepEqual( Stem("winkelförmig"), "winkelform" );
	deepEqual( Stem("winkelmass"), "winkelmass" );
	deepEqual( Stem("winkeln"), "winkeln" );
	deepEqual( Stem("winkelschenke"), "winkelschenk" );
	deepEqual( Stem("winken"), "wink" );
	deepEqual( Stem("winkliges"), "winklig" );
	deepEqual( Stem("winkt"), "winkt" );
	deepEqual( Stem("winkte"), "winkt" );
	deepEqual( Stem("winkten"), "winkt" );
	deepEqual( Stem("winktest"), "winkt" );
	deepEqual( Stem("winseln"), "winseln" );
	deepEqual( Stem("winter"), "wint" );
	deepEqual( Stem("winterfelder"), "winterfeld" );
	deepEqual( Stem("winterfest"), "winterf" );
	deepEqual( Stem("winterkohlköpfe"), "winterkohlkopf" );
	deepEqual( Stem("winterlichen"), "wint" );
	deepEqual( Stem("winterlicht"), "winterlicht" );
	deepEqual( Stem("winterprogramm"), "winterprogramm" );
	deepEqual( Stem("winters"), "wint" );
	deepEqual( Stem("winterszeit"), "winterszeit" );
	deepEqual( Stem("wintervormittag"), "wintervormittag" );
	deepEqual( Stem("winterwetter"), "winterwett" );
	deepEqual( Stem("winzig"), "winzig" );
	deepEqual( Stem("winzige"), "winzig" );
	deepEqual( Stem("winzigen"), "winzig" );
	deepEqual( Stem("winziger"), "winzig" );
	deepEqual( Stem("winziges"), "winzig" );
	deepEqual( Stem("winzigsten"), "winzig" );
	deepEqual( Stem("wipfel"), "wipfel" );
	deepEqual( Stem("wipfeln"), "wipfeln" );
	deepEqual( Stem("wipp"), "wipp" );
	deepEqual( Stem("wippespiel"), "wippespiel" );
	deepEqual( Stem("wippte"), "wippt" );
	deepEqual( Stem("wir"), "wir" );
	deepEqual( Stem("wirbel"), "wirbel" );
	deepEqual( Stem("wirbelquirlen"), "wirbelquirl" );
	deepEqual( Stem("wirbelte"), "wirbelt" );
	deepEqual( Stem("wirbelwind"), "wirbelwind" );
	deepEqual( Stem("wirbt"), "wirbt" );
	deepEqual( Stem("wird"), "wird" );
	deepEqual( Stem("wirf"), "wirf" );
	deepEqual( Stem("wirft"), "wirft" );
	deepEqual( Stem("wirke"), "wirk" );
	deepEqual( Stem("wirken"), "wirk" );
	deepEqual( Stem("wirkende"), "wirkend" );
	deepEqual( Stem("wirkenden"), "wirkend" );
	deepEqual( Stem("wirkender"), "wirkend" );
	deepEqual( Stem("wirkens"), "wirk" );
	deepEqual( Stem("wirket"), "wirket" );
	deepEqual( Stem("wirklich"), "wirklich" );
	deepEqual( Stem("wirkliche"), "wirklich" );
	deepEqual( Stem("wirklichen"), "wirklich" );
	deepEqual( Stem("wirklicher"), "wirklich" );
	deepEqual( Stem("wirkliches"), "wirklich" );
	deepEqual( Stem("wirklichgemacht"), "wirklichgemacht" );
	deepEqual( Stem("wirklichkeit"), "wirklich" );
	deepEqual( Stem("wirklichmachung"), "wirklichmach" );
	deepEqual( Stem("wirklichwerden"), "wirklichwerd" );
	deepEqual( Stem("wirklichzumachen"), "wirklichzumach" );
	deepEqual( Stem("wirksame"), "wirksam" );
	deepEqual( Stem("wirksamen"), "wirksam" );
	deepEqual( Stem("wirksamkeit"), "wirksam" );
	deepEqual( Stem("wirkt"), "wirkt" );
	deepEqual( Stem("wirkte"), "wirkt" );
	deepEqual( Stem("wirkung"), "wirkung" );
	deepEqual( Stem("wirkungen"), "wirkung" );
	deepEqual( Stem("wirkungskreis"), "wirkungskreis" );
	deepEqual( Stem("wirkungsstätten"), "wirkungsstatt" );
	deepEqual( Stem("wirrbärte"), "wirrbart" );
	deepEqual( Stem("wirrem"), "wirr" );
	deepEqual( Stem("wirrsal"), "wirrsal" );
	deepEqual( Stem("wirrwarr"), "wirrwarr" );
	deepEqual( Stem("wirst"), "wirst" );
	deepEqual( Stem("wirt"), "wirt" );
	deepEqual( Stem("wirte"), "wirt" );
	deepEqual( Stem("wirten"), "wirt" );
	deepEqual( Stem("wirtes"), "wirt" );
	deepEqual( Stem("wirtin"), "wirtin" );
	deepEqual( Stem("wirtliche"), "wirtlich" );
	deepEqual( Stem("wirtschaft"), "wirtschaft" );
	deepEqual( Stem("wirtschaftliche"), "wirtschaft" );
	deepEqual( Stem("wirtschaftlichen"), "wirtschaft" );
	deepEqual( Stem("wirtschaftlicher"), "wirtschaft" );
	deepEqual( Stem("wirtschafts"), "wirtschaft" );
	deepEqual( Stem("wirtschaftsmobiliar"), "wirtschaftsmobiliar" );
	deepEqual( Stem("wirtschaftsplatz"), "wirtschaftsplatz" );
	deepEqual( Stem("wirtschaftspolitische"), "wirtschaftspolit" );
	deepEqual( Stem("wirtschaftswachstum"), "wirtschaftswachstum" );
	deepEqual( Stem("wirtshaus"), "wirtshaus" );
	deepEqual( Stem("wirtshause"), "wirtshaus" );
	deepEqual( Stem("wirtshäuser"), "wirtshaus" );
	deepEqual( Stem("wirtshäusern"), "wirtshaus" );
	deepEqual( Stem("wirtshauses"), "wirtshaus" );
	deepEqual( Stem("wirtshausfenstern"), "wirtshausfen" );
	deepEqual( Stem("wirtshausrechnungen"), "wirtshausrechn" );
	deepEqual( Stem("wirtstisch"), "wirtstisch" );
	deepEqual( Stem("wirtstochter"), "wirtstocht" );
	deepEqual( Stem("wischen"), "wisch" );
	deepEqual( Stem("wischer"), "wisch" );
	deepEqual( Stem("wischt"), "wischt" );
	deepEqual( Stem("wischte"), "wischt" );
	deepEqual( Stem("wischten"), "wischt" );
	deepEqual( Stem("wisperte"), "wispert" );
	deepEqual( Stem("wiss"), "wiss" );
	deepEqual( Stem("wissbegierde"), "wissbegierd" );
	deepEqual( Stem("wißbegierde"), "wissbegierd" );
	deepEqual( Stem("wisse"), "wiss" );
	deepEqual( Stem("wissen"), "wiss" );
	deepEqual( Stem("wissend"), "wissend" );
	deepEqual( Stem("wissende"), "wissend" );
	deepEqual( Stem("wissenden"), "wissend" );
	deepEqual( Stem("wissender"), "wissend" );
	deepEqual( Stem("wissens"), "wiss" );
	deepEqual( Stem("wissenschaft"), "wissenschaft" );
	deepEqual( Stem("wissenschaften"), "wissenschaft" );
	deepEqual( Stem("wissenschaftler"), "wissenschaftl" );
	deepEqual( Stem("wissenschaftlich"), "wissenschaft" );
	deepEqual( Stem("wissenschaftliche"), "wissenschaft" );
	deepEqual( Stem("wissenschaftlichem"), "wissenschaft" );
	deepEqual( Stem("wissenschaftlichen"), "wissenschaft" );
	deepEqual( Stem("wissenschaftliches"), "wissenschaft" );
	deepEqual( Stem("wissest"), "wiss" );
	deepEqual( Stem("wisset"), "wisset" );
	deepEqual( Stem("wisst"), "wisst" );
	deepEqual( Stem("wißt"), "wisst" );
	deepEqual( Stem("wisstümlich"), "wisstum" );
	deepEqual( Stem("wißtümlich"), "wisstum" );
	deepEqual( Stem("wisstümliche"), "wisstum" );
	deepEqual( Stem("wißtümliche"), "wisstum" );
	deepEqual( Stem("wisstümlichem"), "wisstum" );
	deepEqual( Stem("wißtümlichem"), "wisstum" );
	deepEqual( Stem("wisstümlichen"), "wisstum" );
	deepEqual( Stem("wißtümlichen"), "wisstum" );
	deepEqual( Stem("wisstümlicher"), "wisstum" );
	deepEqual( Stem("wißtümlicher"), "wisstum" );
	deepEqual( Stem("wisstümliches"), "wisstum" );
	deepEqual( Stem("wißtümliches"), "wisstum" );
	deepEqual( Stem("witsch"), "witsch" );
	deepEqual( Stem("wittenberg"), "wittenberg" );
	deepEqual( Stem("wittern"), "witt" );
	deepEqual( Stem("witterte"), "wittert" );
	deepEqual( Stem("witterten"), "wittert" );
	deepEqual( Stem("witterung"), "witter" );
	deepEqual( Stem("witterungsvermögen"), "witterungsvermog" );
	deepEqual( Stem("witwe"), "witw" );
	deepEqual( Stem("witwen"), "witw" );
	deepEqual( Stem("witwengehalt"), "witwengehalt" );
	deepEqual( Stem("witwenschaft"), "witwenschaft" );
	deepEqual( Stem("witwer"), "witw" );
	deepEqual( Stem("witz"), "witz" );
	deepEqual( Stem("witze"), "witz" );
	deepEqual( Stem("witzelt"), "witzelt" );
	deepEqual( Stem("witzen"), "witz" );
	deepEqual( Stem("witzig"), "witzig" );
	deepEqual( Stem("witziger"), "witzig" );
	deepEqual( Stem("witzigste"), "witzig" );
	deepEqual( Stem("witzigsten"), "witzig" );
	deepEqual( Stem("wizenmann"), "wizenmann" );
	deepEqual( Stem("wo"), "wo" );
	deepEqual( Stem("woanders"), "woand" );
	deepEqual( Stem("woass"), "woass" );
	deepEqual( Stem("wobei"), "wobei" );
	deepEqual( Stem("woch"), "woch" );
	deepEqual( Stem("woche"), "woch" );
	deepEqual( Stem("wochen"), "woch" );
	deepEqual( Stem("wochenlang"), "wochenlang" );
	deepEqual( Stem("wochenzeitschrift"), "wochenzeitschrift" );
	deepEqual( Stem("wochenzeitung"), "wochenzeit" );
	deepEqual( Stem("wodurch"), "wodurch" );
	deepEqual( Stem("wofern"), "wof" );
	deepEqual( Stem("wofür"), "wofur" );
	deepEqual( Stem("wogegen"), "wogeg" );
	deepEqual( Stem("wogenden"), "wogend" );
	deepEqual( Stem("wogt"), "wogt" );
	deepEqual( Stem("wogte"), "wogt" );
	deepEqual( Stem("woher"), "woh" );
	deepEqual( Stem("wohin"), "wohin" );
	deepEqual( Stem("wohl"), "wohl" );
	deepEqual( Stem("wohlakzentuierte"), "wohlakzentuiert" );
	deepEqual( Stem("wohlan"), "wohlan" );
	deepEqual( Stem("wohlanständigen"), "wohlanstand" );
	deepEqual( Stem("wohlauf"), "wohlauf" );
	deepEqual( Stem("wohlbebaut"), "wohlbebaut" );
	deepEqual( Stem("wohlbefinden"), "wohlbefind" );
	deepEqual( Stem("wohlbegütert"), "wohlbegutert" );
	deepEqual( Stem("wohlbehagen"), "wohlbehag" );
	deepEqual( Stem("wohlbekannte"), "wohlbekannt" );
	deepEqual( Stem("wohlbekannten"), "wohlbekannt" );
	deepEqual( Stem("wohlbeschaffenes"), "wohlbeschaff" );
	deepEqual( Stem("wohlbesorgte"), "wohlbesorgt" );
	deepEqual( Stem("wohlbestellte"), "wohlbestellt" );
	deepEqual( Stem("wohlbestellten"), "wohlbestellt" );
	deepEqual( Stem("wohlbewaffnet"), "wohlbewaffnet" );
	deepEqual( Stem("wohlbewusster"), "wohlbewusst" );
	deepEqual( Stem("wohldenkenden"), "wohldenk" );
	deepEqual( Stem("wohlduftende"), "wohlduft" );
	deepEqual( Stem("wohldurchgebildeter"), "wohldurchgebildet" );
	deepEqual( Stem("wohler"), "wohl" );
	deepEqual( Stem("wohlergehen"), "wohlergeh" );
	deepEqual( Stem("wohlergehens"), "wohlergeh" );
	deepEqual( Stem("wohlerhaltenes"), "wohlerhalt" );
	deepEqual( Stem("wohlerworbenes"), "wohlerworb" );
	deepEqual( Stem("wohlerzogenen"), "wohlerzog" );
	deepEqual( Stem("wohlfahrtsbeamten"), "wohlfahrtsbeamt" );
	deepEqual( Stem("wohlfeil"), "wohlfeil" );
	deepEqual( Stem("wohlfeiles"), "wohlfeil" );
	deepEqual( Stem("wohlgeartet"), "wohlgeartet" );
	deepEqual( Stem("wohlgeartete"), "wohlgeartet" );
	deepEqual( Stem("wohlgeborgen"), "wohlgeborg" );
	deepEqual( Stem("wohlgefallen"), "wohlgefall" );
	deepEqual( Stem("wohlgefallens"), "wohlgefall" );
	deepEqual( Stem("wohlgefällig"), "wohlgefall" );
	deepEqual( Stem("wohlgefällige"), "wohlgefall" );
	deepEqual( Stem("wohlgefälliges"), "wohlgefall" );
	deepEqual( Stem("wohlgefälligsten"), "wohlgefall" );
	deepEqual( Stem("wohlgefällt"), "wohlgefallt" );
	deepEqual( Stem("wohlgefiel"), "wohlgefiel" );
	deepEqual( Stem("wohlgefüllten"), "wohlgefullt" );
	deepEqual( Stem("wohlgefütterten"), "wohlgefuttert" );
	deepEqual( Stem("wohlgekleideten"), "wohlgekleidet" );
	deepEqual( Stem("wohlgelehrt"), "wohlgelehrt" );
	deepEqual( Stem("wohlgelungenen"), "wohlgel" );
	deepEqual( Stem("wohlgemeinte"), "wohlgemeint" );
	deepEqual( Stem("wohlgemerkt"), "wohlgemerkt" );
	deepEqual( Stem("wohlgemut"), "wohlgemut" );
	deepEqual( Stem("wohlgemute"), "wohlgemut" );
	deepEqual( Stem("wohlgenährten"), "wohlgenahrt" );
	deepEqual( Stem("wohlgeordneten"), "wohlgeordnet" );
	deepEqual( Stem("wohlgepflegte"), "wohlgepflegt" );
	deepEqual( Stem("wohlgeputzte"), "wohlgeputzt" );
	deepEqual( Stem("wohlgeratener"), "wohlgerat" );
	deepEqual( Stem("wohlgeratenes"), "wohlgerat" );
	deepEqual( Stem("wohlgeruch"), "wohlgeruch" );
	deepEqual( Stem("wohlgerüche"), "wohlgeruch" );
	deepEqual( Stem("wohlgesalzener"), "wohlgesalz" );
	deepEqual( Stem("wohlgesicherte"), "wohlgesichert" );
	deepEqual( Stem("wohlgesinneten"), "wohlgesinnet" );
	deepEqual( Stem("wohlgesinnte"), "wohlgesinnt" );
	deepEqual( Stem("wohlgestaltete"), "wohlgestaltet" );
	deepEqual( Stem("wohlgestaltetes"), "wohlgestaltet" );
	deepEqual( Stem("wohlhabende"), "wohlhab" );
	deepEqual( Stem("wohlhabender"), "wohlhab" );
	deepEqual( Stem("wohlhabenheit"), "wohlhab" );
	deepEqual( Stem("wohlhergestellten"), "wohlhergestellt" );
	deepEqual( Stem("wohligen"), "wohlig" );
	deepEqual( Stem("wohliger"), "wohlig" );
	deepEqual( Stem("wohliges"), "wohlig" );
	deepEqual( Stem("wohlklang"), "wohlklang" );
	deepEqual( Stem("wohlklingenden"), "wohlkling" );
	deepEqual( Stem("wohllaut"), "wohllaut" );
	deepEqual( Stem("wohllautenden"), "wohllaut" );
	deepEqual( Stem("wohlleben"), "wohlleb" );
	deepEqual( Stem("wohlmeinenden"), "wohlmein" );
	deepEqual( Stem("wohlrasierten"), "wohlrasiert" );
	deepEqual( Stem("wohlriechenden"), "wohlriech" );
	deepEqual( Stem("wohlschmeckenden"), "wohlschmeck" );
	deepEqual( Stem("wohlseins"), "wohlsein" );
	deepEqual( Stem("wohlstand"), "wohlstand" );
	deepEqual( Stem("wohlständchen"), "wohlstandch" );
	deepEqual( Stem("wohlstandes"), "wohlstand" );
	deepEqual( Stem("wohltat"), "wohltat" );
	deepEqual( Stem("wohltaten"), "wohltat" );
	deepEqual( Stem("wohltätigem"), "wohltat" );
	deepEqual( Stem("wohltätigen"), "wohltat" );
	deepEqual( Stem("wohltätigkeit"), "wohltat" );
	deepEqual( Stem("wohltätigste"), "wohltat" );
	deepEqual( Stem("wohltuend"), "wohltuend" );
	deepEqual( Stem("wohltun"), "wohltun" );
	deepEqual( Stem("wohltuns"), "wohltun" );
	deepEqual( Stem("wohlverdienten"), "wohlverdient" );
	deepEqual( Stem("wohlverhalten"), "wohlverhalt" );
	deepEqual( Stem("wohlverhaltens"), "wohlverhalt" );
	deepEqual( Stem("wohlversehen"), "wohlverseh" );
	deepEqual( Stem("wohlverstanden"), "wohlverstand" );
	deepEqual( Stem("wohlweisen"), "wohlweis" );
	deepEqual( Stem("wohlwillst"), "wohlwill" );
	deepEqual( Stem("wohlwollen"), "wohlwoll" );
	deepEqual( Stem("wohlwollend"), "wohlwoll" );
	deepEqual( Stem("wohlwollende"), "wohlwoll" );
	deepEqual( Stem("wohlwollenden"), "wohlwoll" );
	deepEqual( Stem("wohlwollender"), "wohlwoll" );
	deepEqual( Stem("wohlwollendste"), "wohlwoll" );
	deepEqual( Stem("wohlwollens"), "wohlwoll" );
	deepEqual( Stem("wohlwollte"), "wohlwollt" );
	deepEqual( Stem("wohlzutun"), "wohlzutun" );
	deepEqual( Stem("wohne"), "wohn" );
	deepEqual( Stem("wohnen"), "wohn" );
	deepEqual( Stem("wohnend"), "wohnend" );
	deepEqual( Stem("wohnenden"), "wohnend" );
	deepEqual( Stem("wohnet"), "wohnet" );
	deepEqual( Stem("wohnheim"), "wohnheim" );
	deepEqual( Stem("wohnlich"), "wohnlich" );
	deepEqual( Stem("wohnlichen"), "wohnlich" );
	deepEqual( Stem("wohnraum"), "wohnraum" );
	deepEqual( Stem("wohnstätte"), "wohnstatt" );
	deepEqual( Stem("wohnstube"), "wohnstub" );
	deepEqual( Stem("wohnt"), "wohnt" );
	deepEqual( Stem("wohnte"), "wohnt" );
	deepEqual( Stem("wohnten"), "wohnt" );
	deepEqual( Stem("wohnung"), "wohnung" );
	deepEqual( Stem("wohnungen"), "wohnung" );
	deepEqual( Stem("wohnungstür"), "wohnungstur" );
	deepEqual( Stem("wohnzimmer"), "wohnzimm" );
	deepEqual( Stem("wölbten"), "wolbt" );
	deepEqual( Stem("wölbung"), "wolbung" );
	deepEqual( Stem("wolf"), "wolf" );
	deepEqual( Stem("wölfe"), "wolf" );
	deepEqual( Stem("wolff"), "wolff" );
	deepEqual( Stem("wolhyniens"), "wolhyni" );
	deepEqual( Stem("wölkchen"), "wolkch" );
	deepEqual( Stem("wolke"), "wolk" );
	deepEqual( Stem("wolken"), "wolk" );
	deepEqual( Stem("wolkenbase"), "wolkenbas" );
	deepEqual( Stem("wolkenberge"), "wolkenberg" );
	deepEqual( Stem("wolkenbruch"), "wolkenbruch" );
	deepEqual( Stem("wolkenfenster"), "wolkenfen" );
	deepEqual( Stem("wolkenfrau"), "wolkenfrau" );
	deepEqual( Stem("wolkenhülle"), "wolkenhull" );
	deepEqual( Stem("wolkenkuppel"), "wolkenkuppel" );
	deepEqual( Stem("wolkenlos"), "wolkenlos" );
	deepEqual( Stem("wolkenriss"), "wolkenriss" );
	deepEqual( Stem("wolkensäule"), "wolkensaul" );
	deepEqual( Stem("wolkenschiff"), "wolkenschiff" );
	deepEqual( Stem("wolkenschneider"), "wolkenschneid" );
	deepEqual( Stem("wolkenwände"), "wolkenwand" );
	deepEqual( Stem("woll"), "woll" );
	deepEqual( Stem("wolle"), "woll" );
	deepEqual( Stem("wollen"), "woll" );
	deepEqual( Stem("wollende"), "wollend" );
	deepEqual( Stem("wollenden"), "wollend" );
	deepEqual( Stem("wollendes"), "wollend" );
	deepEqual( Stem("wollenen"), "woll" );
	deepEqual( Stem("wollens"), "woll" );
	deepEqual( Stem("wollet"), "wollet" );
	deepEqual( Stem("wollt"), "wollt" );
	deepEqual( Stem("wollte"), "wollt" );
	deepEqual( Stem("wollten"), "wollt" );
	deepEqual( Stem("wolltest"), "wollt" );
	deepEqual( Stem("wolltet"), "wolltet" );
	deepEqual( Stem("wollust"), "wollust" );
	deepEqual( Stem("wollüste"), "wollust" );
	deepEqual( Stem("wollüstig"), "wollust" );
	deepEqual( Stem("womit"), "womit" );
	deepEqual( Stem("womöglich"), "womog" );
	deepEqual( Stem("wonach"), "wonach" );
	deepEqual( Stem("wonne"), "wonn" );
	deepEqual( Stem("wonnegefühl"), "wonnegefuhl" );
	deepEqual( Stem("wonnen"), "wonn" );
	deepEqual( Stem("wonnevoll"), "wonnevoll" );
	deepEqual( Stem("wonnevolle"), "wonnevoll" );
	deepEqual( Stem("wonnigen"), "wonnig" );
	deepEqual( Stem("woran"), "woran" );
	deepEqual( Stem("worauf"), "worauf" );
	deepEqual( Stem("woraus"), "woraus" );
	deepEqual( Stem("worbs"), "worb" );
	deepEqual( Stem("word"), "word" );
	deepEqual( Stem("worden"), "word" );
	deepEqual( Stem("worfen"), "worf" );
	deepEqual( Stem("worin"), "worin" );
	deepEqual( Stem("workshops"), "workshops" );
	deepEqual( Stem("world"), "world" );
	deepEqual( Stem("wort"), "wort" );
	deepEqual( Stem("wortbedeutung"), "wortbedeut" );
	deepEqual( Stem("wortbeiträge"), "wortbeitrag" );
	deepEqual( Stem("worte"), "wort" );
	deepEqual( Stem("worten"), "wort" );
	deepEqual( Stem("wörter"), "wort" );
	deepEqual( Stem("wörterbuch"), "worterbuch" );
	deepEqual( Stem("wörtern"), "wort" );
	deepEqual( Stem("wörtersprache"), "wortersprach" );
	deepEqual( Stem("wortes"), "wort" );
	deepEqual( Stem("wortkarg"), "wortkarg" );
	deepEqual( Stem("wortkarge"), "wortkarg" );
	deepEqual( Stem("wörtl"), "wortl" );
	deepEqual( Stem("wortlaut"), "wortlaut" );
	deepEqual( Stem("wörtlein"), "wortlein" );
	deepEqual( Stem("wörtlich"), "wortlich" );
	deepEqual( Stem("wortlos"), "wortlos" );
	deepEqual( Stem("wortlosen"), "wortlos" );
	deepEqual( Stem("wortschatz"), "wortschatz" );
	deepEqual( Stem("wortstreit"), "wortstreit" );
	deepEqual( Stem("wortwechsel"), "wortwechsel" );
	deepEqual( Stem("wortwechselte"), "wortwechselt" );
	deepEqual( Stem("worüber"), "worub" );
	deepEqual( Stem("worum"), "worum" );
	deepEqual( Stem("worunter"), "worunt" );
	deepEqual( Stem("wos"), "wos" );
	deepEqual( Stem("wovon"), "wovon" );
	deepEqual( Stem("wozu"), "wozu" );
	deepEqual( Stem("wuchernden"), "wuchernd" );
	deepEqual( Stem("wucherte"), "wuchert" );
	deepEqual( Stem("wucherten"), "wuchert" );
	deepEqual( Stem("wuchs"), "wuch" );
	deepEqual( Stem("wuchsen"), "wuchs" );
	deepEqual( Stem("wuchses"), "wuchs" );
	deepEqual( Stem("wucht"), "wucht" );
	deepEqual( Stem("wühlen"), "wuhl" );
	deepEqual( Stem("wühlte"), "wuhlt" );
	deepEqual( Stem("wulla"), "wulla" );
	deepEqual( Stem("wunde"), "wund" );
	deepEqual( Stem("wunden"), "wund" );
	deepEqual( Stem("wunder"), "wund" );
	deepEqual( Stem("wunderbar"), "wunderbar" );
	deepEqual( Stem("wunderbare"), "wunderbar" );
	deepEqual( Stem("wunderbaren"), "wunderbar" );
	deepEqual( Stem("wunderbarer"), "wunderbar" );
	deepEqual( Stem("wunderbares"), "wunderbar" );
	deepEqual( Stem("wunderbarste"), "wunderbarst" );
	deepEqual( Stem("wunderbarsten"), "wunderbarst" );
	deepEqual( Stem("wundere"), "wund" );
	deepEqual( Stem("wunderkur"), "wunderkur" );
	deepEqual( Stem("wunderlich"), "wund" );
	deepEqual( Stem("wunderliche"), "wund" );
	deepEqual( Stem("wunderlichen"), "wund" );
	deepEqual( Stem("wunderlicher"), "wund" );
	deepEqual( Stem("wunderlicherweise"), "wunderlicherweis" );
	deepEqual( Stem("wunderlichste"), "wund" );
	deepEqual( Stem("wunderlieben"), "wunderlieb" );
	deepEqual( Stem("wundermächtige"), "wundermacht" );
	deepEqual( Stem("wundern"), "wund" );
	deepEqual( Stem("wunders"), "wund" );
	deepEqual( Stem("wundersam"), "wundersam" );
	deepEqual( Stem("wundersame"), "wundersam" );
	deepEqual( Stem("wundersamen"), "wundersam" );
	deepEqual( Stem("wundersamer"), "wundersam" );
	deepEqual( Stem("wundersames"), "wundersam" );
	deepEqual( Stem("wunderschön"), "wunderschon" );
	deepEqual( Stem("wunderschöne"), "wunderschon" );
	deepEqual( Stem("wunderschönen"), "wunderschon" );
	deepEqual( Stem("wunderschönes"), "wunderschon" );
	deepEqual( Stem("wundert"), "wundert" );
	deepEqual( Stem("wunderte"), "wundert" );
	deepEqual( Stem("wunderten"), "wundert" );
	deepEqual( Stem("wundertiefen"), "wundertief" );
	deepEqual( Stem("wundertier"), "wunderti" );
	deepEqual( Stem("wundervoll"), "wundervoll" );
	deepEqual( Stem("wundervolle"), "wundervoll" );
	deepEqual( Stem("wundervoller"), "wundervoll" );
	deepEqual( Stem("wundervolles"), "wundervoll" );
	deepEqual( Stem("wunderzeichen"), "wunderzeich" );
	deepEqual( Stem("wundre"), "wundr" );
	deepEqual( Stem("wundzudrücken"), "wundzudruck" );
	deepEqual( Stem("wunsch"), "wunsch" );
	deepEqual( Stem("wünsch"), "wunsch" );
	deepEqual( Stem("wünschbare"), "wunschbar" );
	deepEqual( Stem("wünschbarsten"), "wunschbarst" );
	deepEqual( Stem("wunsche"), "wunsch" );
	deepEqual( Stem("wünsche"), "wunsch" );
	deepEqual( Stem("wünschen"), "wunsch" );
	deepEqual( Stem("wünschenswert"), "wunschenswert" );
	deepEqual( Stem("wünschenswerten"), "wunschenswert" );
	deepEqual( Stem("wunsches"), "wunsch" );
	deepEqual( Stem("wünschet"), "wunschet" );
	deepEqual( Stem("wünscht"), "wunscht" );
	deepEqual( Stem("wünschte"), "wunscht" );
	deepEqual( Stem("wünschten"), "wunscht" );
	deepEqual( Stem("wunsiedel"), "wunsiedel" );
	deepEqual( Stem("wunsiedels"), "wunsiedel" );
	deepEqual( Stem("wupp"), "wupp" );
	deepEqual( Stem("würd"), "wurd" );
	deepEqual( Stem("wurde"), "wurd" );
	deepEqual( Stem("würde"), "wurd" );
	deepEqual( Stem("wurden"), "wurd" );
	deepEqual( Stem("würden"), "wurd" );
	deepEqual( Stem("wurdest"), "wurd" );
	deepEqual( Stem("würdest"), "wurd" );
	deepEqual( Stem("würdet"), "wurdet" );
	deepEqual( Stem("würdig"), "wurdig" );
	deepEqual( Stem("würdige"), "wurdig" );
	deepEqual( Stem("würdigen"), "wurdig" );
	deepEqual( Stem("würdiger"), "wurdig" );
	deepEqual( Stem("würdigkeit"), "wurdig" );
	deepEqual( Stem("würdigte"), "wurdigt" );
	deepEqual( Stem("würdst"), "wurd" );
	deepEqual( Stem("würfeln"), "wurfeln" );
	deepEqual( Stem("würfen"), "wurf" );
	deepEqual( Stem("würgen"), "wurg" );
	deepEqual( Stem("würgte"), "wurgt" );
	deepEqual( Stem("wurm"), "wurm" );
	deepEqual( Stem("würmchen"), "wurmch" );
	deepEqual( Stem("würmer"), "wurm" );
	deepEqual( Stem("wurmisierte"), "wurmisiert" );
	deepEqual( Stem("wurst"), "wurst" );
	deepEqual( Stem("würstchen"), "wurstch" );
	deepEqual( Stem("würtembergischen"), "wurtemberg" );
	deepEqual( Stem("würze"), "wurz" );
	deepEqual( Stem("wurzel"), "wurzel" );
	deepEqual( Stem("wurzelknorren"), "wurzelknorr" );
	deepEqual( Stem("wurzeln"), "wurzeln" );
	deepEqual( Stem("wurzelstock"), "wurzelstock" );
	deepEqual( Stem("wurzelstöcke"), "wurzelstock" );
	deepEqual( Stem("wurzelt"), "wurzelt" );
	deepEqual( Stem("würzigen"), "wurzig" );
	deepEqual( Stem("würzkrämer"), "wurzkram" );
	deepEqual( Stem("würzte"), "wurzt" );
	deepEqual( Stem("wurzweg"), "wurzweg" );
	deepEqual( Stem("wusch"), "wusch" );
	deepEqual( Stem("wuschelig"), "wuschel" );
	deepEqual( Stem("wusst"), "wusst" );
	deepEqual( Stem("wusste"), "wusst" );
	deepEqual( Stem("wußte"), "wusst" );
	deepEqual( Stem("wüsste"), "wusst" );
	deepEqual( Stem("wüßte"), "wusst" );
	deepEqual( Stem("wussten"), "wusst" );
	deepEqual( Stem("wußten"), "wusst" );
	deepEqual( Stem("wüssten"), "wusst" );
	deepEqual( Stem("wüßten"), "wusst" );
	deepEqual( Stem("wüsstens"), "wusst" );
	deepEqual( Stem("wusstest"), "wusst" );
	deepEqual( Stem("wüßtest"), "wusst" );
	deepEqual( Stem("wüsstet"), "wusstet" );
	deepEqual( Stem("wüßtet"), "wusstet" );
	deepEqual( Stem("wüst"), "wust" );
	deepEqual( Stem("wüste"), "wust" );
	deepEqual( Stem("wüsten"), "wust" );
	deepEqual( Stem("wüstenei"), "wustenei" );
	deepEqual( Stem("wüsteneien"), "wustenei" );
	deepEqual( Stem("wüstensand"), "wustensand" );
	deepEqual( Stem("wüstenwirbelwetterhut"), "wustenwirbelwetterhut" );
	deepEqual( Stem("wüster"), "wust" );
	deepEqual( Stem("wut"), "wut" );
	deepEqual( Stem("wüten"), "wut" );
	deepEqual( Stem("wütend"), "wutend" );
	deepEqual( Stem("wütenden"), "wutend" );
	deepEqual( Stem("wütender"), "wutend" );
	deepEqual( Stem("wütendere"), "wutend" );
	deepEqual( Stem("wutentbrannt"), "wutentbrannt" );
	deepEqual( Stem("www"), "www" );
	deepEqual( Stem("x"), "x" );
	deepEqual( Stem("yeni"), "yeni" );
	deepEqual( Stem("yet"), "yet" );
	deepEqual( Stem("york"), "york" );
	deepEqual( Stem("z"), "z" );
	deepEqual( Stem("zacken"), "zack" );
	deepEqual( Stem("zackenwasser"), "zackenwass" );
	deepEqual( Stem("zackige"), "zackig" );
	deepEqual( Stem("zadoks"), "zadok" );
	deepEqual( Stem("zagen"), "zag" );
	deepEqual( Stem("zagend"), "zagend" );
	deepEqual( Stem("zaghaft"), "zaghaft" );
	deepEqual( Stem("zaghaftigkeit"), "zaghaft" );
	deepEqual( Stem("zäh"), "zah" );
	deepEqual( Stem("zähe"), "zah" );
	deepEqual( Stem("zahl"), "zahl" );
	deepEqual( Stem("zähl"), "zahl" );
	deepEqual( Stem("zahle"), "zahl" );
	deepEqual( Stem("zähle"), "zahl" );
	deepEqual( Stem("zahlen"), "zahl" );
	deepEqual( Stem("zählen"), "zahl" );
	deepEqual( Stem("zahlende"), "zahlend" );
	deepEqual( Stem("zähler"), "zahl" );
	deepEqual( Stem("zahllos"), "zahllos" );
	deepEqual( Stem("zahllose"), "zahllos" );
	deepEqual( Stem("zahllosen"), "zahllos" );
	deepEqual( Stem("zahlloser"), "zahllos" );
	deepEqual( Stem("zahlrei"), "zahlrei" );
	deepEqual( Stem("zahlreich"), "zahlreich" );
	deepEqual( Stem("zahlreiche"), "zahlreich" );
	deepEqual( Stem("zahlreichen"), "zahlreich" );
	deepEqual( Stem("zahlreicher"), "zahlreich" );
	deepEqual( Stem("zahlreichsten"), "zahlreich" );
	deepEqual( Stem("zahlt"), "zahlt" );
	deepEqual( Stem("zählt"), "zahlt" );
	deepEqual( Stem("zahlte"), "zahlt" );
	deepEqual( Stem("zählte"), "zahlt" );
	deepEqual( Stem("zahlungen"), "zahlung" );
	deepEqual( Stem("zahm"), "zahm" );
	deepEqual( Stem("zahmen"), "zahm" );
	deepEqual( Stem("zähmen"), "zahm" );
	deepEqual( Stem("zahnbürste"), "zahnburst" );
	deepEqual( Stem("zähnchen"), "zahnch" );
	deepEqual( Stem("zähne"), "zahn" );
	deepEqual( Stem("zähnefletschend"), "zahnefletsch" );
	deepEqual( Stem("zähneklappernd"), "zahneklappernd" );
	deepEqual( Stem("zähnen"), "zahn" );
	deepEqual( Stem("zahnperlen"), "zahnperl" );
	deepEqual( Stem("zamm"), "zamm" );
	deepEqual( Stem("zammklauben"), "zammklaub" );
	deepEqual( Stem("zammraumen"), "zammraum" );
	deepEqual( Stem("zammtreffen"), "zammtreff" );
	deepEqual( Stem("zängchen"), "zangch" );
	deepEqual( Stem("zank"), "zank" );
	deepEqual( Stem("zanken"), "zank" );
	deepEqual( Stem("zänkereien"), "zankerei" );
	deepEqual( Stem("zankes"), "zank" );
	deepEqual( Stem("zänkischen"), "zankisch" );
	deepEqual( Stem("zanklaute"), "zanklaut" );
	deepEqual( Stem("zankt"), "zankt" );
	deepEqual( Stem("zankte"), "zankt" );
	deepEqual( Stem("zankten"), "zankt" );
	deepEqual( Stem("zapfenbrett"), "zapfenbrett" );
	deepEqual( Stem("zappeln"), "zappeln" );
	deepEqual( Stem("zappelte"), "zappelt" );
	deepEqual( Stem("zarge"), "zarg" );
	deepEqual( Stem("zargen"), "zarg" );
	deepEqual( Stem("zart"), "zart" );
	deepEqual( Stem("zartem"), "zart" );
	deepEqual( Stem("zarten"), "zart" );
	deepEqual( Stem("zarter"), "zart" );
	deepEqual( Stem("zarteren"), "zart" );
	deepEqual( Stem("zartes"), "zart" );
	deepEqual( Stem("zarteste"), "zart" );
	deepEqual( Stem("zartesten"), "zart" );
	deepEqual( Stem("zartgefühles"), "zartgefuhl" );
	deepEqual( Stem("zartheit"), "zartheit" );
	deepEqual( Stem("zärtlich"), "zartlich" );
	deepEqual( Stem("zärtliche"), "zartlich" );
	deepEqual( Stem("zärtlichen"), "zartlich" );
	deepEqual( Stem("zärtliches"), "zartlich" );
	deepEqual( Stem("zärtlichkeit"), "zartlich" );
	deepEqual( Stem("zärtlichkeiten"), "zartlich" );
	deepEqual( Stem("zärtlichste"), "zartlich" );
	deepEqual( Stem("zaster"), "zast" );
	deepEqual( Stem("zauber"), "zaub" );
	deepEqual( Stem("zauberei"), "zauberei" );
	deepEqual( Stem("zaubereien"), "zauberei" );
	deepEqual( Stem("zauberer"), "zaub" );
	deepEqual( Stem("zauberern"), "zaub" );
	deepEqual( Stem("zauberfrau"), "zauberfrau" );
	deepEqual( Stem("zauberhaften"), "zauberhaft" );
	deepEqual( Stem("zauberhafter"), "zauberhaft" );
	deepEqual( Stem("zauberhaftes"), "zauberhaft" );
	deepEqual( Stem("zauberin"), "zauberin" );
	deepEqual( Stem("zauberische"), "zauber" );
	deepEqual( Stem("zauberkünste"), "zauberkun" );
	deepEqual( Stem("zauberlaterne"), "zauberlatern" );
	deepEqual( Stem("zaubermacht"), "zaubermacht" );
	deepEqual( Stem("zaubermeister"), "zaubermeist" );
	deepEqual( Stem("zaubern"), "zaub" );
	deepEqual( Stem("zauberschlage"), "zauberschlag" );
	deepEqual( Stem("zauberstab"), "zauberstab" );
	deepEqual( Stem("zauberstabe"), "zauberstab" );
	deepEqual( Stem("zauberstücke"), "zauberstuck" );
	deepEqual( Stem("zauberwege"), "zauberweg" );
	deepEqual( Stem("zauberworte"), "zauberwort" );
	deepEqual( Stem("zauberzartes"), "zauberzart" );
	deepEqual( Stem("zaum"), "zaum" );
	deepEqual( Stem("zaume"), "zaum" );
	deepEqual( Stem("zaun"), "zaun" );
	deepEqual( Stem("zäune"), "zaun" );
	deepEqual( Stem("zaunes"), "zaun" );
	deepEqual( Stem("zaunlatten"), "zaunlatt" );
	deepEqual( Stem("zausen"), "zaus" );
	deepEqual( Stem("zebaoth"), "zebaoth" );
	deepEqual( Stem("zeche"), "zech" );
	deepEqual( Stem("zechen"), "zech" );
	deepEqual( Stem("zechgelage"), "zechgelag" );
	deepEqual( Stem("zechten"), "zecht" );
	deepEqual( Stem("zedekia"), "zedekia" );
	deepEqual( Stem("zeder"), "zed" );
	deepEqual( Stem("zedern"), "zed" );
	deepEqual( Stem("zedernholz"), "zedernholz" );
	deepEqual( Stem("zehen"), "zeh" );
	deepEqual( Stem("zehenspitzen"), "zehenspitz" );
	deepEqual( Stem("zehenten"), "zehent" );
	deepEqual( Stem("zehn"), "zehn" );
	deepEqual( Stem("zehnfache"), "zehnfach" );
	deepEqual( Stem("zehnjährige"), "zehnjahr" );
	deepEqual( Stem("zehnjährigen"), "zehnjahr" );
	deepEqual( Stem("zehnmal"), "zehnmal" );
	deepEqual( Stem("zehnsaitigen"), "zehnsait" );
	deepEqual( Stem("zehntausend"), "zehntaus" );
	deepEqual( Stem("zehntausende"), "zehntaus" );
	deepEqual( Stem("zehnte"), "zehnt" );
	deepEqual( Stem("zehnten"), "zehnt" );
	deepEqual( Stem("zehntes"), "zehnt" );
	deepEqual( Stem("zehnzahl"), "zehnzahl" );
	deepEqual( Stem("zehren"), "zehr" );
	deepEqual( Stem("zehrpfennig"), "zehrpfenn" );
	deepEqual( Stem("zehrte"), "zehrt" );
	deepEqual( Stem("zehrung"), "zehrung" );
	deepEqual( Stem("zeichen"), "zeich" );
	deepEqual( Stem("zeichens"), "zeich" );
	deepEqual( Stem("zeichne"), "zeichn" );
	deepEqual( Stem("zeichners"), "zeichn" );
	deepEqual( Stem("zeichnete"), "zeichnet" );
	deepEqual( Stem("zeichnung"), "zeichnung" );
	deepEqual( Stem("zeichnungen"), "zeichnung" );
	deepEqual( Stem("zeid"), "zeid" );
	deepEqual( Stem("zeiding"), "zeiding" );
	deepEqual( Stem("zeig"), "zeig" );
	deepEqual( Stem("zeige"), "zeig" );
	deepEqual( Stem("zeigefinger"), "zeigefing" );
	deepEqual( Stem("zeigen"), "zeig" );
	deepEqual( Stem("zeiger"), "zeig" );
	deepEqual( Stem("zeigst"), "zeig" );
	deepEqual( Stem("zeigt"), "zeigt" );
	deepEqual( Stem("zeigte"), "zeigt" );
	deepEqual( Stem("zeigten"), "zeigt" );
	deepEqual( Stem("zeile"), "zeil" );
	deepEqual( Stem("zeiserl"), "zeiserl" );
	deepEqual( Stem("zeisig"), "zeisig" );
	deepEqual( Stem("zeit"), "zeit" );
	deepEqual( Stem("zeitabläufe"), "zeitablauf" );
	deepEqual( Stem("zeitabschnitte"), "zeitabschnitt" );
	deepEqual( Stem("zeitalter"), "zeitalt" );
	deepEqual( Stem("zeitaltern"), "zeitalt" );
	deepEqual( Stem("zeitangabe"), "zeitangab" );
	deepEqual( Stem("zeitaufwand"), "zeitaufwand" );
	deepEqual( Stem("zeitbedingung"), "zeitbeding" );
	deepEqual( Stem("zeitbegriff"), "zeitbegriff" );
	deepEqual( Stem("zeiten"), "zeit" );
	deepEqual( Stem("zeitenwechsel"), "zeitenwechsel" );
	deepEqual( Stem("zeitgenossen"), "zeitgenoss" );
	deepEqual( Stem("zeitlang"), "zeitlang" );
	deepEqual( Stem("zeitlauf"), "zeitlauf" );
	deepEqual( Stem("zeitläufe"), "zeitlauf" );
	deepEqual( Stem("zeitlaufes"), "zeitlauf" );
	deepEqual( Stem("zeitlaufs"), "zeitlauf" );
	deepEqual( Stem("zeitlebens"), "zeitleb" );
	deepEqual( Stem("zeitliche"), "zeitlich" );
	deepEqual( Stem("zeitlichen"), "zeitlich" );
	deepEqual( Stem("zeitlicherem"), "zeitlich" );
	deepEqual( Stem("zeitmangel"), "zeitmangel" );
	deepEqual( Stem("zeitminute"), "zeitminut" );
	deepEqual( Stem("zeitpunkt"), "zeitpunkt" );
	deepEqual( Stem("zeitpunkte"), "zeitpunkt" );
	deepEqual( Stem("zeitpunkten"), "zeitpunkt" );
	deepEqual( Stem("zeitraum"), "zeitraum" );
	deepEqual( Stem("zeitraume"), "zeitraum" );
	deepEqual( Stem("zeiträume"), "zeitraum" );
	deepEqual( Stem("zeiträumen"), "zeitraum" );
	deepEqual( Stem("zeitrechnung"), "zeitrechn" );
	deepEqual( Stem("zeitschrift"), "zeitschrift" );
	deepEqual( Stem("zeitschriften"), "zeitschrift" );
	deepEqual( Stem("zeitung"), "zeitung" );
	deepEqual( Stem("zeitungen"), "zeitung" );
	deepEqual( Stem("zeitungsläden"), "zeitungslad" );
	deepEqual( Stem("zeitverhältnisse"), "zeitverhaltnis" );
	deepEqual( Stem("zeitverlauf"), "zeitverlauf" );
	deepEqual( Stem("zeitvertreib"), "zeitvertreib" );
	deepEqual( Stem("zeitvertreiber"), "zeitvertreib" );
	deepEqual( Stem("zeitverwendung"), "zeitverwend" );
	deepEqual( Stem("zeitweilig"), "zeitweil" );
	deepEqual( Stem("zeitweiligen"), "zeitweil" );
	deepEqual( Stem("zeitweise"), "zeitweis" );
	deepEqual( Stem("zelebriert"), "zelebriert" );
	deepEqual( Stem("zelt"), "zelt" );
	deepEqual( Stem("zeltbewohners"), "zeltbewohn" );
	deepEqual( Stem("zelte"), "zelt" );
	deepEqual( Stem("zelten"), "zelt" );
	deepEqual( Stem("zeltes"), "zelt" );
	deepEqual( Stem("zeltlager"), "zeltlag" );
	deepEqual( Stem("zen"), "zen" );
	deepEqual( Stem("zentnerlast"), "zentnerlast" );
	deepEqual( Stem("zentnern"), "zentn" );
	deepEqual( Stem("zentnerschwer"), "zentnerschw" );
	deepEqual( Stem("zentralbüro"), "zentralburo" );
	deepEqual( Stem("zentraldorf"), "zentraldorf" );
	deepEqual( Stem("zentralsekretär"), "zentralsekretar" );
	deepEqual( Stem("zentralsekretärs"), "zentralsekretar" );
	deepEqual( Stem("zentralstelle"), "zentralstell" );
	deepEqual( Stem("zeph"), "zeph" );
	deepEqual( Stem("zephanja"), "zephanja" );
	deepEqual( Stem("zeppelinballons"), "zeppelinballon" );
	deepEqual( Stem("zepter"), "zept" );
	deepEqual( Stem("zerbläuen"), "zerblau" );
	deepEqual( Stem("zerbrach"), "zerbrach" );
	deepEqual( Stem("zerbräche"), "zerbrach" );
	deepEqual( Stem("zerbreche"), "zerbrech" );
	deepEqual( Stem("zerbrechen"), "zerbrech" );
	deepEqual( Stem("zerbrechend"), "zerbrech" );
	deepEqual( Stem("zerbrechlich"), "zerbrech" );
	deepEqual( Stem("zerbricht"), "zerbricht" );
	deepEqual( Stem("zerbrochen"), "zerbroch" );
	deepEqual( Stem("zerbrochene"), "zerbroch" );
	deepEqual( Stem("zerbrochenen"), "zerbroch" );
	deepEqual( Stem("zerdrückt"), "zerdruckt" );
	deepEqual( Stem("zerdrückte"), "zerdruckt" );
	deepEqual( Stem("zerdrückten"), "zerdruckt" );
	deepEqual( Stem("zeremonie"), "zeremoni" );
	deepEqual( Stem("zeremoniell"), "zeremoniell" );
	deepEqual( Stem("zerfahrenen"), "zerfahr" );
	deepEqual( Stem("zerfallenden"), "zerfall" );
	deepEqual( Stem("zerfallene"), "zerfall" );
	deepEqual( Stem("zerfallenen"), "zerfall" );
	deepEqual( Stem("zerfegte"), "zerfegt" );
	deepEqual( Stem("zerfetzt"), "zerfetzt" );
	deepEqual( Stem("zerfliesse"), "zerfliess" );
	deepEqual( Stem("zerfliessen"), "zerfliess" );
	deepEqual( Stem("zerfließen"), "zerfliess" );
	deepEqual( Stem("zerfliesst"), "zerfliesst" );
	deepEqual( Stem("zerfließt"), "zerfliesst" );
	deepEqual( Stem("zerflog"), "zerflog" );
	deepEqual( Stem("zerfressenen"), "zerfress" );
	deepEqual( Stem("zergeht"), "zergeht" );
	deepEqual( Stem("zergliedern"), "zerglied" );
	deepEqual( Stem("zergliederung"), "zerglieder" );
	deepEqual( Stem("zerhaue"), "zerhau" );
	deepEqual( Stem("zerhauen"), "zerhau" );
	deepEqual( Stem("zerhauend"), "zerhau" );
	deepEqual( Stem("zerknicken"), "zerknick" );
	deepEqual( Stem("zerknickten"), "zerknickt" );
	deepEqual( Stem("zerknirscht"), "zerknirscht" );
	deepEqual( Stem("zerknitterten"), "zerknittert" );
	deepEqual( Stem("zerknittertes"), "zerknittert" );
	deepEqual( Stem("zerkratzten"), "zerkratzt" );
	deepEqual( Stem("zerlegte"), "zerlegt" );
	deepEqual( Stem("zerlegung"), "zerleg" );
	deepEqual( Stem("zermalme"), "zermalm" );
	deepEqual( Stem("zermalmen"), "zermalm" );
	deepEqual( Stem("zermalmend"), "zermalm" );
	deepEqual( Stem("zermalmest"), "zermalm" );
	deepEqual( Stem("zermalmt"), "zermalmt" );
	deepEqual( Stem("zernagte"), "zernagt" );
	deepEqual( Stem("zerraufte"), "zerrauft" );
	deepEqual( Stem("zerreibend"), "zerreib" );
	deepEqual( Stem("zerreissen"), "zerreiss" );
	deepEqual( Stem("zerreißen"), "zerreiss" );
	deepEqual( Stem("zerreissenden"), "zerreiss" );
	deepEqual( Stem("zerreißenden"), "zerreiss" );
	deepEqual( Stem("zerreisst"), "zerreisst" );
	deepEqual( Stem("zerreißt"), "zerreisst" );
	deepEqual( Stem("zerren"), "zerr" );
	deepEqual( Stem("zerrieben"), "zerrieb" );
	deepEqual( Stem("zerriss"), "zerriss" );
	deepEqual( Stem("zerriß"), "zerriss" );
	deepEqual( Stem("zerrissen"), "zerriss" );
	deepEqual( Stem("zerrissene"), "zerriss" );
	deepEqual( Stem("zerrissenen"), "zerriss" );
	deepEqual( Stem("zerrt"), "zerrt" );
	deepEqual( Stem("zerrte"), "zerrt" );
	deepEqual( Stem("zerschellen"), "zerschell" );
	deepEqual( Stem("zerschellt"), "zerschellt" );
	deepEqual( Stem("zerschlagen"), "zerschlag" );
	deepEqual( Stem("zerschlagener"), "zerschlag" );
	deepEqual( Stem("zerschlitzt"), "zerschlitzt" );
	deepEqual( Stem("zerschlug"), "zerschlug" );
	deepEqual( Stem("zerschlugen"), "zerschlug" );
	deepEqual( Stem("zerschmettert"), "zerschmettert" );
	deepEqual( Stem("zerschnitten"), "zerschnitt" );
	deepEqual( Stem("zerschnittenien"), "zerschnitteni" );
	deepEqual( Stem("zerschossenen"), "zerschoss" );
	deepEqual( Stem("zerspaltet"), "zerspaltet" );
	deepEqual( Stem("zerspellten"), "zerspellt" );
	deepEqual( Stem("zerspringen"), "zerspring" );
	deepEqual( Stem("zerstampfen"), "zerstampf" );
	deepEqual( Stem("zerstäubung"), "zerstaub" );
	deepEqual( Stem("zerstibten"), "zerstibt" );
	deepEqual( Stem("zerstieben"), "zerstieb" );
	deepEqual( Stem("zerstoben"), "zerstob" );
	deepEqual( Stem("zerstochen"), "zerstoch" );
	deepEqual( Stem("zerstochene"), "zerstoch" );
	deepEqual( Stem("zerstöre"), "zerstor" );
	deepEqual( Stem("zerstören"), "zerstor" );
	deepEqual( Stem("zerstörend"), "zerstor" );
	deepEqual( Stem("zerstörende"), "zerstor" );
	deepEqual( Stem("zerstört"), "zerstort" );
	deepEqual( Stem("zerstörte"), "zerstort" );
	deepEqual( Stem("zerstörten"), "zerstort" );
	deepEqual( Stem("zerstörung"), "zerstor" );
	deepEqual( Stem("zerstossen"), "zerstoss" );
	deepEqual( Stem("zerstoßen"), "zerstoss" );
	deepEqual( Stem("zerstossene"), "zerstoss" );
	deepEqual( Stem("zerstoßene"), "zerstoss" );
	deepEqual( Stem("zerstreuen"), "zerstreu" );
	deepEqual( Stem("zerstreut"), "zerstreut" );
	deepEqual( Stem("zerstreute"), "zerstreut" );
	deepEqual( Stem("zerstreuten"), "zerstreut" );
	deepEqual( Stem("zerstreutheit"), "zerstreut" );
	deepEqual( Stem("zerstreuung"), "zerstreu" );
	deepEqual( Stem("zerteilt"), "zerteilt" );
	deepEqual( Stem("zerteilten"), "zerteilt" );
	deepEqual( Stem("zertrennt"), "zertrennt" );
	deepEqual( Stem("zertreten"), "zertret" );
	deepEqual( Stem("zertretenen"), "zertret" );
	deepEqual( Stem("zertrümmert"), "zertrummert" );
	deepEqual( Stem("zertrümmerte"), "zertrummert" );
	deepEqual( Stem("zertrümmerten"), "zertrummert" );
	deepEqual( Stem("zertrümmertes"), "zertrummert" );
	deepEqual( Stem("zerwühlt"), "zerwuhlt" );
	deepEqual( Stem("zerzausten"), "zerzaust" );
	deepEqual( Stem("zerzauster"), "zerzaust" );
	deepEqual( Stem("zerzaustheit"), "zerzaust" );
	deepEqual( Stem("zeter"), "zet" );
	deepEqual( Stem("zettel"), "zettel" );
	deepEqual( Stem("zettelchen"), "zettelch" );
	deepEqual( Stem("zeug"), "zeug" );
	deepEqual( Stem("zeuge"), "zeug" );
	deepEqual( Stem("zeugen"), "zeug" );
	deepEqual( Stem("zeugenaussagen"), "zeugenaussag" );
	deepEqual( Stem("zeughäuser"), "zeughaus" );
	deepEqual( Stem("zeughäusern"), "zeughaus" );
	deepEqual( Stem("zeugin"), "zeugin" );
	deepEqual( Stem("zeugnis"), "zeugnis" );
	deepEqual( Stem("zeugnisse"), "zeugnis" );
	deepEqual( Stem("zeugnisses"), "zeugnis" );
	deepEqual( Stem("zeugschmied"), "zeugschmied" );
	deepEqual( Stem("zeugschmiedgesell"), "zeugschmiedgesell" );
	deepEqual( Stem("zeugte"), "zeugt" );
	deepEqual( Stem("zeugten"), "zeugt" );
	deepEqual( Stem("zeugung"), "zeugung" );
	deepEqual( Stem("zeugungen"), "zeugung" );
	deepEqual( Stem("zeugungsgliedern"), "zeugungsglied" );
	deepEqual( Stem("zh"), "zh" );
	deepEqual( Stem("zichorierte"), "zichoriert" );
	deepEqual( Stem("zickzack"), "zickzack" );
	deepEqual( Stem("zickzacklinien"), "zickzacklini" );
	deepEqual( Stem("zidon"), "zidon" );
	deepEqual( Stem("zidons"), "zidon" );
	deepEqual( Stem("ziedern"), "zied" );
	deepEqual( Stem("ziedert"), "ziedert" );
	deepEqual( Stem("ziegel"), "ziegel" );
	deepEqual( Stem("ziegelmachen"), "ziegelmach" );
	deepEqual( Stem("ziegeln"), "ziegeln" );
	deepEqual( Stem("ziegelofen"), "ziegelof" );
	deepEqual( Stem("ziegelsteine"), "ziegelstein" );
	deepEqual( Stem("ziegelsteinen"), "ziegelstein" );
	deepEqual( Stem("ziegen"), "zieg" );
	deepEqual( Stem("ziegenbart"), "ziegenbart" );
	deepEqual( Stem("ziegenbock"), "ziegenbock" );
	deepEqual( Stem("ziegenböcken"), "ziegenbock" );
	deepEqual( Stem("ziegenkadaver"), "ziegenkadav" );
	deepEqual( Stem("zieh"), "zieh" );
	deepEqual( Stem("ziehbrunnen"), "ziehbrunn" );
	deepEqual( Stem("ziehe"), "zieh" );
	deepEqual( Stem("ziehen"), "zieh" );
	deepEqual( Stem("ziehenden"), "ziehend" );
	deepEqual( Stem("ziehet"), "ziehet" );
	deepEqual( Stem("zieht"), "zieht" );
	deepEqual( Stem("ziel"), "ziel" );
	deepEqual( Stem("ziele"), "ziel" );
	deepEqual( Stem("zielen"), "ziel" );
	deepEqual( Stem("zieles"), "ziel" );
	deepEqual( Stem("zielgewehren"), "zielgewehr" );
	deepEqual( Stem("ziell"), "ziell" );
	deepEqual( Stem("zielort"), "zielort" );
	deepEqual( Stem("ziels"), "ziel" );
	deepEqual( Stem("zielsicher"), "zielsich" );
	deepEqual( Stem("zielte"), "zielt" );
	deepEqual( Stem("ziemergerichte"), "ziemergericht" );
	deepEqual( Stem("ziemern"), "ziem" );
	deepEqual( Stem("ziemet"), "ziemet" );
	deepEqual( Stem("ziemlich"), "ziemlich" );
	deepEqual( Stem("ziemliche"), "ziemlich" );
	deepEqual( Stem("ziemt"), "ziemt" );
	deepEqual( Stem("ziemte"), "ziemt" );
	deepEqual( Stem("ziepziep"), "ziepziep" );
	deepEqual( Stem("zier"), "zier" );
	deepEqual( Stem("zierde"), "zierd" );
	deepEqual( Stem("zierden"), "zierd" );
	deepEqual( Stem("zieren"), "zier" );
	deepEqual( Stem("zierende"), "zierend" );
	deepEqual( Stem("ziererei"), "ziererei" );
	deepEqual( Stem("ziergewächs"), "ziergewach" );
	deepEqual( Stem("zierlich"), "zierlich" );
	deepEqual( Stem("zierliche"), "zierlich" );
	deepEqual( Stem("zierlichem"), "zierlich" );
	deepEqual( Stem("zierlichen"), "zierlich" );
	deepEqual( Stem("zierlicher"), "zierlich" );
	deepEqual( Stem("zierliches"), "zierlich" );
	deepEqual( Stem("zierlichkeit"), "zierlich" );
	deepEqual( Stem("zierlichste"), "zierlich" );
	deepEqual( Stem("zierte"), "ziert" );
	deepEqual( Stem("zierten"), "ziert" );
	deepEqual( Stem("ziervolles"), "ziervoll" );
	deepEqual( Stem("ziffer"), "ziff" );
	deepEqual( Stem("zifferblatt"), "zifferblatt" );
	deepEqual( Stem("ziffern"), "ziff" );
	deepEqual( Stem("zigarette"), "zigarett" );
	deepEqual( Stem("zigaretten"), "zigarett" );
	deepEqual( Stem("zigarettenasche"), "zigarettenasch" );
	deepEqual( Stem("zigarettendose"), "zigarettendos" );
	deepEqual( Stem("zigarettenschachtel"), "zigarettenschachtel" );
	deepEqual( Stem("zigarettenschachteln"), "zigarettenschachteln" );
	deepEqual( Stem("zigarre"), "zigarr" );
	deepEqual( Stem("zigarren"), "zigarr" );
	deepEqual( Stem("zigarrenbengel"), "zigarrenbengel" );
	deepEqual( Stem("zige"), "zig" );
	deepEqual( Stem("zigeunerbande"), "zigeunerband" );
	deepEqual( Stem("zillah"), "zillah" );
	deepEqual( Stem("zillen"), "zill" );
	deepEqual( Stem("zimbel"), "zimbel" );
	deepEqual( Stem("zimbeln"), "zimbeln" );
	deepEqual( Stem("zimmer"), "zimm" );
	deepEqual( Stem("zimmerdecke"), "zimmerdeck" );
	deepEqual( Stem("zimmergewehr"), "zimmergewehr" );
	deepEqual( Stem("zimmern"), "zimm" );
	deepEqual( Stem("zimmers"), "zimm" );
	deepEqual( Stem("zimmervermieterin"), "zimmervermieterin" );
	deepEqual( Stem("zimmet"), "zimmet" );
	deepEqual( Stem("zimmetbüchschen"), "zimmetbuchsch" );
	deepEqual( Stem("zimperlich"), "zimp" );
	deepEqual( Stem("zimperlichen"), "zimp" );
	deepEqual( Stem("zinn"), "zinn" );
	deepEqual( Stem("zinne"), "zinn" );
	deepEqual( Stem("zinnen"), "zinn" );
	deepEqual( Stem("zinnernen"), "zinnern" );
	deepEqual( Stem("zinnoberbergwerk"), "zinnoberbergwerk" );
	deepEqual( Stem("zinnoberroten"), "zinnoberrot" );
	deepEqual( Stem("zinsen"), "zins" );
	deepEqual( Stem("zion"), "zion" );
	deepEqual( Stem("zions"), "zion" );
	deepEqual( Stem("zipfel"), "zipfel" );
	deepEqual( Stem("zipfelhaube"), "zipfelhaub" );
	deepEqual( Stem("zipfelkappe"), "zipfelkapp" );
	deepEqual( Stem("zipfelkappen"), "zipfelkapp" );
	deepEqual( Stem("zipfelmütze"), "zipfelmutz" );
	deepEqual( Stem("zipfeln"), "zipfeln" );
	deepEqual( Stem("zippora"), "zippora" );
	deepEqual( Stem("zirka"), "zirka" );
	deepEqual( Stem("zirkel"), "zirkel" );
	deepEqual( Stem("zirkelte"), "zirkelt" );
	deepEqual( Stem("zirkuliert"), "zirkuliert" );
	deepEqual( Stem("zirkulierten"), "zirkuliert" );
	deepEqual( Stem("zirpedirp"), "zirpedirp" );
	deepEqual( Stem("zirpen"), "zirp" );
	deepEqual( Stem("zisch"), "zisch" );
	deepEqual( Stem("zischelndem"), "zischelnd" );
	deepEqual( Stem("zischen"), "zisch" );
	deepEqual( Stem("zischende"), "zischend" );
	deepEqual( Stem("zischlauten"), "zischlaut" );
	deepEqual( Stem("zischte"), "zischt" );
	deepEqual( Stem("zisterzienserpater"), "zisterzienserpat" );
	deepEqual( Stem("zitaten"), "zitat" );
	deepEqual( Stem("zither"), "zith" );
	deepEqual( Stem("zithern"), "zith" );
	deepEqual( Stem("zitherspiel"), "zitherspiel" );
	deepEqual( Stem("zitherspieler"), "zitherspiel" );
	deepEqual( Stem("zitherspielern"), "zitherspiel" );
	deepEqual( Stem("zitieren"), "ziti" );
	deepEqual( Stem("zitiert"), "zitiert" );
	deepEqual( Stem("zitronenschale"), "zitronenschal" );
	deepEqual( Stem("zittern"), "zitt" );
	deepEqual( Stem("zitternd"), "zitternd" );
	deepEqual( Stem("zitternde"), "zitternd" );
	deepEqual( Stem("zitternden"), "zitternd" );
	deepEqual( Stem("zittert"), "zittert" );
	deepEqual( Stem("zitterte"), "zittert" );
	deepEqual( Stem("zitterten"), "zittert" );
	deepEqual( Stem("zitty"), "zitty" );
	deepEqual( Stem("zivildienst"), "zivildien" );
	deepEqual( Stem("zivildienstleistende"), "zivildienstleist" );
	deepEqual( Stem("zivildienstleistenden"), "zivildienstleist" );
	deepEqual( Stem("zivildienstleistender"), "zivildienstleist" );
	deepEqual( Stem("zivildienststelle"), "zivildienststell" );
	deepEqual( Stem("zivildienststellen"), "zivildienststell" );
	deepEqual( Stem("zivildiensttreffpunkt"), "zivildiensttreffpunkt" );
	deepEqual( Stem("zivildienstzeit"), "zivildienstzeit" );
	deepEqual( Stem("zivilgesellschaft"), "zivilgesellschaft" );
	deepEqual( Stem("zivilpolizei"), "zivilpolizei" );
	deepEqual( Stem("zivilpolizist"), "zivilpolizist" );
	deepEqual( Stem("zivilpolizisten"), "zivilpolizist" );
	deepEqual( Stem("zivis"), "zivis" );
	deepEqual( Stem("zoba"), "zoba" );
	deepEqual( Stem("zochar"), "zochar" );
	deepEqual( Stem("zog"), "zog" );
	deepEqual( Stem("zöge"), "zog" );
	deepEqual( Stem("zogen"), "zog" );
	deepEqual( Stem("zögern"), "zog" );
	deepEqual( Stem("zögernd"), "zogernd" );
	deepEqual( Stem("zögerte"), "zogert" );
	deepEqual( Stem("zögerten"), "zogert" );
	deepEqual( Stem("zöglinge"), "zogling" );
	deepEqual( Stem("zöglingen"), "zogling" );
	deepEqual( Stem("zölibat"), "zolibat" );
	deepEqual( Stem("zollmass"), "zollmass" );
	deepEqual( Stem("zollstock"), "zollstock" );
	deepEqual( Stem("zoni"), "zoni" );
	deepEqual( Stem("zony"), "zony" );
	deepEqual( Stem("zoo"), "zoo" );
	deepEqual( Stem("zoodirektor"), "zoodirektor" );
	deepEqual( Stem("zoologen"), "zoolog" );
	deepEqual( Stem("zopf"), "zopf" );
	deepEqual( Stem("zöpfchen"), "zopfch" );
	deepEqual( Stem("zöpfe"), "zopf" );
	deepEqual( Stem("zorn"), "zorn" );
	deepEqual( Stem("zorne"), "zorn" );
	deepEqual( Stem("zornerregt"), "zornerregt" );
	deepEqual( Stem("zornes"), "zorn" );
	deepEqual( Stem("zornig"), "zornig" );
	deepEqual( Stem("zornigen"), "zornig" );
	deepEqual( Stem("zorniger"), "zornig" );
	deepEqual( Stem("zorns"), "zorn" );
	deepEqual( Stem("zottelig"), "zottel" );
	deepEqual( Stem("zotteln"), "zotteln" );
	deepEqual( Stem("zottelte"), "zottelt" );
	deepEqual( Stem("zruck"), "zruck" );
	deepEqual( Stem("zruckfahren"), "zruckfahr" );
	deepEqual( Stem("zu"), "zu" );
	deepEqual( Stem("zubereitet"), "zubereitet" );
	deepEqual( Stem("zubereitungen"), "zubereit" );
	deepEqual( Stem("zubrachte"), "zubracht" );
	deepEqual( Stem("zubringen"), "zubring" );
	deepEqual( Stem("zucht"), "zucht" );
	deepEqual( Stem("zuchthaus"), "zuchthaus" );
	deepEqual( Stem("zuchthauskost"), "zuchthauskost" );
	deepEqual( Stem("züchtig"), "zuchtig" );
	deepEqual( Stem("züchtigen"), "zuchtig" );
	deepEqual( Stem("züchtiger"), "zuchtig" );
	deepEqual( Stem("zuckbewegungen"), "zuckbeweg" );
	deepEqual( Stem("zuckenden"), "zuckend" );
	deepEqual( Stem("zucker"), "zuck" );
	deepEqual( Stem("zuckerbäcker"), "zuckerback" );
	deepEqual( Stem("zuckerbeck"), "zuckerbeck" );
	deepEqual( Stem("zuckerbrot"), "zuckerbrot" );
	deepEqual( Stem("zuckerbrücken"), "zuckerbruck" );
	deepEqual( Stem("zuckerguss"), "zuckerguss" );
	deepEqual( Stem("zuckerreste"), "zuckerr" );
	deepEqual( Stem("zuckerwasser"), "zuckerwass" );
	deepEqual( Stem("zuckerwerk"), "zuckerwerk" );
	deepEqual( Stem("zuckte"), "zuckt" );
	deepEqual( Stem("zuckten"), "zuckt" );
	deepEqual( Stem("zudem"), "zud" );
	deepEqual( Stem("zudringlich"), "zudring" );
	deepEqual( Stem("zudringlichen"), "zudring" );
	deepEqual( Stem("zudringlicher"), "zudring" );
	deepEqual( Stem("zudringlichkeiten"), "zudring" );
	deepEqual( Stem("zudringlichsten"), "zudring" );
	deepEqual( Stem("zueigne"), "zueign" );
	deepEqual( Stem("zueignen"), "zueign" );
	deepEqual( Stem("zueilte"), "zueilt" );
	deepEqual( Stem("zueilten"), "zueilt" );
	deepEqual( Stem("zueinander"), "zueinand" );
	deepEqual( Stem("zuerkannt"), "zuerkannt" );
	deepEqual( Stem("zuerst"), "zuerst" );
	deepEqual( Stem("zufall"), "zufall" );
	deepEqual( Stem("zufalle"), "zufall" );
	deepEqual( Stem("zufälle"), "zufall" );
	deepEqual( Stem("zufällig"), "zufall" );
	deepEqual( Stem("zufällige"), "zufall" );
	deepEqual( Stem("zufälligen"), "zufall" );
	deepEqual( Stem("zufälliger"), "zufall" );
	deepEqual( Stem("zufälligerweise"), "zufalligerweis" );
	deepEqual( Stem("zufälliges"), "zufall" );
	deepEqual( Stem("zufälligkeit"), "zufall" );
	deepEqual( Stem("zufalls"), "zufall" );
	deepEqual( Stem("zufliessen"), "zufliess" );
	deepEqual( Stem("zufließen"), "zufliess" );
	deepEqual( Stem("zuflucht"), "zuflucht" );
	deepEqual( Stem("zufluss"), "zufluss" );
	deepEqual( Stem("zufluß"), "zufluss" );
	deepEqual( Stem("zuflusses"), "zufluss" );
	deepEqual( Stem("zufolge"), "zufolg" );
	deepEqual( Stem("zufrieden"), "zufried" );
	deepEqual( Stem("zufriedenem"), "zufried" );
	deepEqual( Stem("zufriedener"), "zufried" );
	deepEqual( Stem("zufriedenheit"), "zufried" );
	deepEqual( Stem("zufriedenstellend"), "zufriedenstell" );
	deepEqual( Stem("zufüge"), "zufug" );
	deepEqual( Stem("zufügen"), "zufug" );
	deepEqual( Stem("zufügt"), "zufugt" );
	deepEqual( Stem("zuführen"), "zufuhr" );
	deepEqual( Stem("zuführt"), "zufuhrt" );
	deepEqual( Stem("zug"), "zug" );
	deepEqual( Stem("zugabe"), "zugab" );
	deepEqual( Stem("zugang"), "zugang" );
	deepEqual( Stem("zugäng"), "zugang" );
	deepEqual( Stem("zugangen"), "zugang" );
	deepEqual( Stem("zuge"), "zug" );
	deepEqual( Stem("züge"), "zug" );
	deepEqual( Stem("zugeben"), "zugeb" );
	deepEqual( Stem("zugebracht"), "zugebracht" );
	deepEqual( Stem("zugebundenen"), "zugebund" );
	deepEqual( Stem("zugedacht"), "zugedacht" );
	deepEqual( Stem("zugedachte"), "zugedacht" );
	deepEqual( Stem("zugedeckt"), "zugedeckt" );
	deepEqual( Stem("zugeeignet"), "zugeeignet" );
	deepEqual( Stem("zugefügt"), "zugefugt" );
	deepEqual( Stem("zugeführt"), "zugefuhrt" );
	deepEqual( Stem("zugegangen"), "zugegang" );
	deepEqual( Stem("zugegebenermassen"), "zugegebenermass" );
	deepEqual( Stem("zugegen"), "zugeg" );
	deepEqual( Stem("zugegriffen"), "zugegriff" );
	deepEqual( Stem("zugehen"), "zugeh" );
	deepEqual( Stem("zugehörige"), "zugehor" );
	deepEqual( Stem("zugehört"), "zugehort" );
	deepEqual( Stem("zugeklappt"), "zugeklappt" );
	deepEqual( Stem("zügel"), "zugel" );
	deepEqual( Stem("zugelassen"), "zugelass" );
	deepEqual( Stem("zügellosen"), "zugellos" );
	deepEqual( Stem("zügellosigkeit"), "zugellos" );
	deepEqual( Stem("zügelt"), "zugelt" );
	deepEqual( Stem("zugemutet"), "zugemutet" );
	deepEqual( Stem("zügen"), "zug" );
	deepEqual( Stem("zugeneigt"), "zugeneigt" );
	deepEqual( Stem("zugereist"), "zugereist" );
	deepEqual( Stem("zugerichtet"), "zugerichtet" );
	deepEqual( Stem("zugerufen"), "zugeruf" );
	deepEqual( Stem("zugesagt"), "zugesagt" );
	deepEqual( Stem("zugeschaut"), "zugeschaut" );
	deepEqual( Stem("zugeschlagen"), "zugeschlag" );
	deepEqual( Stem("zugeschneite"), "zugeschneit" );
	deepEqual( Stem("zugeschoben"), "zugeschob" );
	deepEqual( Stem("zugeschrieben"), "zugeschrieb" );
	deepEqual( Stem("zugeschrieen"), "zugeschrie" );
	deepEqual( Stem("zugesehen"), "zugeseh" );
	deepEqual( Stem("zugesprochen"), "zugesproch" );
	deepEqual( Stem("zugesprungen"), "zugespr" );
	deepEqual( Stem("zugestanden"), "zugestand" );
	deepEqual( Stem("zugestehen"), "zugesteh" );
	deepEqual( Stem("zugestimmt"), "zugestimmt" );
	deepEqual( Stem("zugestossen"), "zugestoss" );
	deepEqual( Stem("zugetan"), "zugetan" );
	deepEqual( Stem("zugetragen"), "zugetrag" );
	deepEqual( Stem("zugetraut"), "zugetraut" );
	deepEqual( Stem("zugewandt"), "zugewandt" );
	deepEqual( Stem("zugewandten"), "zugewandt" );
	deepEqual( Stem("zugewendet"), "zugewendet" );
	deepEqual( Stem("zugewendetes"), "zugewendet" );
	deepEqual( Stem("zugewiesene"), "zugewies" );
	deepEqual( Stem("zugeworfen"), "zugeworf" );
	deepEqual( Stem("zugezogen"), "zugezog" );
	deepEqual( Stem("zugibt"), "zugibt" );
	deepEqual( Stem("zuging"), "zuging" );
	deepEqual( Stem("zugingen"), "zuging" );
	deepEqual( Stem("zugleich"), "zugleich" );
	deepEqual( Stem("zugnetz"), "zugnetz" );
	deepEqual( Stem("zugreifen"), "zugreif" );
	deepEqual( Stem("zugriff"), "zugriff" );
	deepEqual( Stem("zugrunde"), "zugrund" );
	deepEqual( Stem("zugrundegehen"), "zugrundegeh" );
	deepEqual( Stem("zugrundeliegende"), "zugrundelieg" );
	deepEqual( Stem("zugschlagen"), "zugschlag" );
	deepEqual( Stem("zugunsten"), "zugun" );
	deepEqual( Stem("zugut"), "zugut" );
	deepEqual( Stem("zugute"), "zugut" );
	deepEqual( Stem("zuhälterin"), "zuhalterin" );
	deepEqual( Stem("zuhielt"), "zuhielt" );
	deepEqual( Stem("zuhilfenahme"), "zuhilfenahm" );
	deepEqual( Stem("zuhinterst"), "zuhinterst" );
	deepEqual( Stem("zuhören"), "zuhor" );
	deepEqual( Stem("zuhörer"), "zuhor" );
	deepEqual( Stem("zuhörerinnen"), "zuhorerinn" );
	deepEqual( Stem("zuhörers"), "zuhor" );
	deepEqual( Stem("zuhörte"), "zuhort" );
	deepEqual( Stem("zukam"), "zukam" );
	deepEqual( Stem("zukehrte"), "zukehrt" );
	deepEqual( Stem("zuknöpfte"), "zuknopft" );
	deepEqual( Stem("zukomme"), "zukomm" );
	deepEqual( Stem("zukommen"), "zukomm" );
	deepEqual( Stem("zukommt"), "zukommt" );
	deepEqual( Stem("zukunft"), "zukunft" );
	deepEqual( Stem("zukünftige"), "zukunft" );
	deepEqual( Stem("zukünftigen"), "zukunft" );
	deepEqual( Stem("zulächelt"), "zulachelt" );
	deepEqual( Stem("zulange"), "zulang" );
	deepEqual( Stem("zulangen"), "zulang" );
	deepEqual( Stem("zulänglichkeit"), "zulang" );
	deepEqual( Stem("zulangt"), "zulangt" );
	deepEqual( Stem("zulasse"), "zulass" );
	deepEqual( Stem("zulassen"), "zulass" );
	deepEqual( Stem("zulässigkeit"), "zulass" );
	deepEqual( Stem("zulässt"), "zulasst" );
	deepEqual( Stem("zuläßt"), "zulasst" );
	deepEqual( Stem("zulassung"), "zulass" );
	deepEqual( Stem("zulasten"), "zulast" );
	deepEqual( Stem("zulauf"), "zulauf" );
	deepEqual( Stem("zulegen"), "zuleg" );
	deepEqual( Stem("zuleid"), "zuleid" );
	deepEqual( Stem("zuleide"), "zuleid" );
	deepEqual( Stem("zuletzt"), "zuletzt" );
	deepEqual( Stem("zulief"), "zulief" );
	deepEqual( Stem("zum"), "zum" );
	deepEqual( Stem("zumachen"), "zumach" );
	deepEqual( Stem("zumal"), "zumal" );
	deepEqual( Stem("zumeist"), "zumeist" );
	deepEqual( Stem("zumessen"), "zumess" );
	deepEqual( Stem("zumindest"), "zumind" );
	deepEqual( Stem("zumut"), "zumut" );
	deepEqual( Stem("zumute"), "zumut" );
	deepEqual( Stem("zumuten"), "zumut" );
	deepEqual( Stem("zumutung"), "zumut" );
	deepEqual( Stem("zumutungen"), "zumut" );
	deepEqual( Stem("zunächst"), "zunach" );
	deepEqual( Stem("zunahm"), "zunahm" );
	deepEqual( Stem("zunahme"), "zunahm" );
	deepEqual( Stem("zunahmen"), "zunahm" );
	deepEqual( Stem("zünden"), "zund" );
	deepEqual( Stem("zündet"), "zundet" );
	deepEqual( Stem("zündete"), "zundet" );
	deepEqual( Stem("zündschnur"), "zundschnur" );
	deepEqual( Stem("zunehmen"), "zunehm" );
	deepEqual( Stem("zunehmend"), "zunehm" );
	deepEqual( Stem("zunehmende"), "zunehm" );
	deepEqual( Stem("zunehmenden"), "zunehm" );
	deepEqual( Stem("zunehmender"), "zunehm" );
	deepEqual( Stem("zuneigung"), "zuneig" );
	deepEqual( Stem("zunge"), "zung" );
	deepEqual( Stem("züngelten"), "zungelt" );
	deepEqual( Stem("zungen"), "zung" );
	deepEqual( Stem("zungenfertigkeit"), "zungenfert" );
	deepEqual( Stem("zungenspitze"), "zungenspitz" );
	deepEqual( Stem("zünglein"), "zunglein" );
	deepEqual( Stem("zunichte"), "zunicht" );
	deepEqual( Stem("zunimmt"), "zunimmt" );
	deepEqual( Stem("zuoberst"), "zuoberst" );
	deepEqual( Stem("zupfen"), "zupf" );
	deepEqual( Stem("zupfte"), "zupft" );
	deepEqual( Stem("zur"), "zur" );
	deepEqual( Stem("zürcher"), "zurch" );
	deepEqual( Stem("zurecht"), "zurecht" );
	deepEqual( Stem("zurechtfinden"), "zurechtfind" );
	deepEqual( Stem("zurechtgelegt"), "zurechtgelegt" );
	deepEqual( Stem("zurechtgerückt"), "zurechtgeruckt" );
	deepEqual( Stem("zurechtgesetzt"), "zurechtgesetzt" );
	deepEqual( Stem("zurechtgewiesen"), "zurechtgewies" );
	deepEqual( Stem("zurechtschneiderte"), "zurechtschneidert" );
	deepEqual( Stem("zurechtweisen"), "zurechtweis" );
	deepEqual( Stem("zurechtweisung"), "zurechtweis" );
	deepEqual( Stem("zurechtzufinden"), "zurechtzufind" );
	deepEqual( Stem("zurechtzulegen"), "zurechtzuleg" );
	deepEqual( Stem("zurechtzumachen"), "zurechtzumach" );
	deepEqual( Stem("zurede"), "zured" );
	deepEqual( Stem("zureden"), "zured" );
	deepEqual( Stem("zureichend"), "zureich" );
	deepEqual( Stem("zureichende"), "zureich" );
	deepEqual( Stem("zureichenden"), "zureich" );
	deepEqual( Stem("zürich"), "zurich" );
	deepEqual( Stem("zurichten"), "zuricht" );
	deepEqual( Stem("zurief"), "zurief" );
	deepEqual( Stem("zürne"), "zurn" );
	deepEqual( Stem("zürnen"), "zurn" );
	deepEqual( Stem("zürnet"), "zurnet" );
	deepEqual( Stem("zürnt"), "zurnt" );
	deepEqual( Stem("zurück"), "zuruck" );
	deepEqual( Stem("zurückbeziehen"), "zuruckbezieh" );
	deepEqual( Stem("zurückbleiben"), "zuruckbleib" );
	deepEqual( Stem("zurückbleibt"), "zuruckbleibt" );
	deepEqual( Stem("zurückblicken"), "zuruckblick" );
	deepEqual( Stem("zurückblieb"), "zuruckblieb" );
	deepEqual( Stem("zurückbogen"), "zuruckbog" );
	deepEqual( Stem("zurückbringe"), "zuruckbring" );
	deepEqual( Stem("zurückbringen"), "zuruckbring" );
	deepEqual( Stem("zurückdrängen"), "zuruckdrang" );
	deepEqual( Stem("zurückdrängt"), "zuruckdrangt" );
	deepEqual( Stem("zurückerhalten"), "zuruckerhalt" );
	deepEqual( Stem("zurückerstatten"), "zuruckerstatt" );
	deepEqual( Stem("zurückfällt"), "zuruckfallt" );
	deepEqual( Stem("zurückfliehen"), "zuruckflieh" );
	deepEqual( Stem("zurückfragen"), "zuruckfrag" );
	deepEqual( Stem("zurückfuhr"), "zuruckfuhr" );
	deepEqual( Stem("zurückführen"), "zuruckfuhr" );
	deepEqual( Stem("zurückführte"), "zuruckfuhrt" );
	deepEqual( Stem("zurückgeben"), "zuruckgeb" );
	deepEqual( Stem("zurückgeblieben"), "zuruckgeblieb" );
	deepEqual( Stem("zurückgebliebene"), "zuruckgeblieb" );
	deepEqual( Stem("zurückgebliebenen"), "zuruckgeblieb" );
	deepEqual( Stem("zurückgebracht"), "zuruckgebracht" );
	deepEqual( Stem("zurückgedrängt"), "zuruckgedrangt" );
	deepEqual( Stem("zurückgefallen"), "zuruckgefall" );
	deepEqual( Stem("zurückgeführt"), "zuruckgefuhrt" );
	deepEqual( Stem("zurückgeführte"), "zuruckgefuhrt" );
	deepEqual( Stem("zurückgefunden"), "zuruckgefund" );
	deepEqual( Stem("zurückgegangen"), "zuruckgegang" );
	deepEqual( Stem("zurückgegeben"), "zuruckgegeb" );
	deepEqual( Stem("zurückgehalten"), "zuruckgehalt" );
	deepEqual( Stem("zurückgehen"), "zuruckgeh" );
	deepEqual( Stem("zurückgehn"), "zuruckgehn" );
	deepEqual( Stem("zurückgekehrt"), "zuruckgekehrt" );
	deepEqual( Stem("zurückgekehrten"), "zuruckgekehrt" );
	deepEqual( Stem("zurückgekommen"), "zuruckgekomm" );
	deepEqual( Stem("zurückgelassen"), "zuruckgelass" );
	deepEqual( Stem("zurückgelegt"), "zuruckgelegt" );
	deepEqual( Stem("zurückgerufen"), "zuruckgeruf" );
	deepEqual( Stem("zurückgeschlagen"), "zuruckgeschlag" );
	deepEqual( Stem("zurückgeschlendert"), "zuruckgeschlendert" );
	deepEqual( Stem("zurückgeschwunden"), "zuruckgeschwund" );
	deepEqual( Stem("zurückgesetzt"), "zuruckgesetzt" );
	deepEqual( Stem("zurückgestellt"), "zuruckgestellt" );
	deepEqual( Stem("zurückgestossen"), "zuruckgestoss" );
	deepEqual( Stem("zurückgestoßen"), "zuruckgestoss" );
	deepEqual( Stem("zurückgetreten"), "zuruckgetret" );
	deepEqual( Stem("zurückgewichen"), "zuruckgewich" );
	deepEqual( Stem("zurückgewiesen"), "zuruckgewies" );
	deepEqual( Stem("zurückgewinkt"), "zuruckgewinkt" );
	deepEqual( Stem("zurückging"), "zuruckging" );
	deepEqual( Stem("zurückhalte"), "zuruckhalt" );
	deepEqual( Stem("zurückhalten"), "zuruckhalt" );
	deepEqual( Stem("zurückhaltend"), "zuruckhalt" );
	deepEqual( Stem("zurückhaltender"), "zuruckhalt" );
	deepEqual( Stem("zurückhältst"), "zuruckhalt" );
	deepEqual( Stem("zurückhaltung"), "zuruckhalt" );
	deepEqual( Stem("zurückkam"), "zuruckkam" );
	deepEqual( Stem("zurückkamen"), "zuruckkam" );
	deepEqual( Stem("zurückkehren"), "zuruckkehr" );
	deepEqual( Stem("zurückkehrst"), "zuruckkehrst" );
	deepEqual( Stem("zurückkehrte"), "zuruckkehrt" );
	deepEqual( Stem("zurückkehrten"), "zuruckkehrt" );
	deepEqual( Stem("zurückkommen"), "zuruckkomm" );
	deepEqual( Stem("zurücklassen"), "zurucklass" );
	deepEqual( Stem("zurückliessen"), "zuruckliess" );
	deepEqual( Stem("zurückreichten"), "zuruckreicht" );
	deepEqual( Stem("zurückschaudert"), "zuruckschaudert" );
	deepEqual( Stem("zurückschieben"), "zuruckschieb" );
	deepEqual( Stem("zurücksehen"), "zuruckseh" );
	deepEqual( Stem("zurücksehnte"), "zurucksehnt" );
	deepEqual( Stem("zurücksprang"), "zurucksprang" );
	deepEqual( Stem("zurückstehende"), "zurucksteh" );
	deepEqual( Stem("zurücksteht"), "zurucksteht" );
	deepEqual( Stem("zurückstossen"), "zuruckstoss" );
	deepEqual( Stem("zurückstoßen"), "zuruckstoss" );
	deepEqual( Stem("zurückstrahlte"), "zuruckstrahlt" );
	deepEqual( Stem("zurückströmte"), "zuruckstromt" );
	deepEqual( Stem("zurücktreten"), "zurucktret" );
	deepEqual( Stem("zurücktritt"), "zurucktritt" );
	deepEqual( Stem("zurückwandte"), "zuruckwandt" );
	deepEqual( Stem("zurückwarf"), "zuruckwarf" );
	deepEqual( Stem("zurückweichen"), "zuruckweich" );
	deepEqual( Stem("zurückweichens"), "zuruckweich" );
	deepEqual( Stem("zurückwenden"), "zuruckw" );
	deepEqual( Stem("zurückwendend"), "zuruckwend" );
	deepEqual( Stem("zurückziehen"), "zuruckzieh" );
	deepEqual( Stem("zurückzog"), "zuruckzog" );
	deepEqual( Stem("zurückzubringen"), "zuruckzubring" );
	deepEqual( Stem("zurückzuerobern"), "zuruckzuerob" );
	deepEqual( Stem("zurückzuführen"), "zuruckzufuhr" );
	deepEqual( Stem("zurückzugeben"), "zuruckzugeb" );
	deepEqual( Stem("zurückzuhalten"), "zuruckzuhalt" );
	deepEqual( Stem("zurückzukehren"), "zuruckzukehr" );
	deepEqual( Stem("zurückzukommen"), "zuruckzukomm" );
	deepEqual( Stem("zurückzureisen"), "zuruckzureis" );
	deepEqual( Stem("zurückzuziehen"), "zuruckzuzieh" );
	deepEqual( Stem("zuruf"), "zuruf" );
	deepEqual( Stem("zurufe"), "zuruf" );
	deepEqual( Stem("zurufen"), "zuruf" );
	deepEqual( Stem("züs"), "zus" );
	deepEqual( Stem("zusag"), "zusag" );
	deepEqual( Stem("zusagen"), "zusag" );
	deepEqual( Stem("zusagt"), "zusagt" );
	deepEqual( Stem("zusagte"), "zusagt" );
	deepEqual( Stem("zusah"), "zusah" );
	deepEqual( Stem("zusahen"), "zusah" );
	deepEqual( Stem("zusammen"), "zusamm" );
	deepEqual( Stem("zusammenarbeit"), "zusammenarbeit" );
	deepEqual( Stem("zusammenbrachte"), "zusammenbracht" );
	deepEqual( Stem("zusammenbringen"), "zusammenbring" );
	deepEqual( Stem("zusammenfassten"), "zusammenfasst" );
	deepEqual( Stem("zusammenfaßten"), "zusammenfasst" );
	deepEqual( Stem("zusammenfassung"), "zusammenfass" );
	deepEqual( Stem("zusammenfiel"), "zusammenfiel" );
	deepEqual( Stem("zusammenfügen"), "zusammenfug" );
	deepEqual( Stem("zusammenfügte"), "zusammenfugt" );
	deepEqual( Stem("zusammengeballt"), "zusammengeballt" );
	deepEqual( Stem("zusammengeballtes"), "zusammengeballt" );
	deepEqual( Stem("zusammengeben"), "zusammengeb" );
	deepEqual( Stem("zusammengebracht"), "zusammengebracht" );
	deepEqual( Stem("zusammengebunden"), "zusammengebund" );
	deepEqual( Stem("zusammengebundene"), "zusammengebund" );
	deepEqual( Stem("zusammengedichtete"), "zusammengedichtet" );
	deepEqual( Stem("zusammengedrängt"), "zusammengedrangt" );
	deepEqual( Stem("zusammengefalteten"), "zusammengefaltet" );
	deepEqual( Stem("zusammengefasst"), "zusammengefasst" );
	deepEqual( Stem("zusammengefügt"), "zusammengefugt" );
	deepEqual( Stem("zusammengehalten"), "zusammengehalt" );
	deepEqual( Stem("zusammengekehrt"), "zusammengekehrt" );
	deepEqual( Stem("zusammengeknöpften"), "zusammengeknopft" );
	deepEqual( Stem("zusammengelebt"), "zusammengelebt" );
	deepEqual( Stem("zusammengenommen"), "zusammengenomm" );
	deepEqual( Stem("zusammengepasst"), "zusammengepasst" );
	deepEqual( Stem("zusammengepaßt"), "zusammengepasst" );
	deepEqual( Stem("zusammengerollt"), "zusammengerollt" );
	deepEqual( Stem("zusammengerollter"), "zusammengerollt" );
	deepEqual( Stem("zusammengeschrumpft"), "zusammengeschrumpft" );
	deepEqual( Stem("zusammengesetzt"), "zusammengesetzt" );
	deepEqual( Stem("zusammengesetzte"), "zusammengesetzt" );
	deepEqual( Stem("zusammengesetzten"), "zusammengesetzt" );
	deepEqual( Stem("zusammengestellt"), "zusammengestellt" );
	deepEqual( Stem("zusammengeströmt"), "zusammengestromt" );
	deepEqual( Stem("zusammengesucht"), "zusammengesucht" );
	deepEqual( Stem("zusammengetan"), "zusammengetan" );
	deepEqual( Stem("zusammengetragen"), "zusammengetrag" );
	deepEqual( Stem("zusammengewürfelten"), "zusammengewurfelt" );
	deepEqual( Stem("zusammengezogen"), "zusammengezog" );
	deepEqual( Stem("zusammengezogenen"), "zusammengezog" );
	deepEqual( Stem("zusammenhalten"), "zusammenhalt" );
	deepEqual( Stem("zusammenhang"), "zusammenhang" );
	deepEqual( Stem("zusammenhängend"), "zusammenhang" );
	deepEqual( Stem("zusammenhängende"), "zusammenhang" );
	deepEqual( Stem("zusammenhängenden"), "zusammenhang" );
	deepEqual( Stem("zusammenhanges"), "zusammenhang" );
	deepEqual( Stem("zusammenhangs"), "zusammenhang" );
	deepEqual( Stem("zusammenhängt"), "zusammenhangt" );
	deepEqual( Stem("zusammenhielt"), "zusammenhielt" );
	deepEqual( Stem("zusammenhing"), "zusammenhing" );
	deepEqual( Stem("zusammenhingen"), "zusammenhing" );
	deepEqual( Stem("zusammenkaufte"), "zusammenkauft" );
	deepEqual( Stem("zusammenknüllte"), "zusammenknullt" );
	deepEqual( Stem("zusammenkommen"), "zusammenkomm" );
	deepEqual( Stem("zusammenkommens"), "zusammenkomm" );
	deepEqual( Stem("zusammenkunft"), "zusammenkunft" );
	deepEqual( Stem("zusammenleben"), "zusammenleb" );
	deepEqual( Stem("zusammenleimte"), "zusammenleimt" );
	deepEqual( Stem("zusammenliefen"), "zusammenlief" );
	deepEqual( Stem("zusammennähen"), "zusammennah" );
	deepEqual( Stem("zusammennahm"), "zusammennahm" );
	deepEqual( Stem("zusammennähten"), "zusammennaht" );
	deepEqual( Stem("zusammennehme"), "zusammennehm" );
	deepEqual( Stem("zusammennehmen"), "zusammennehm" );
	deepEqual( Stem("zusammennehmend"), "zusammennehm" );
	deepEqual( Stem("zusammenpasse"), "zusammenpass" );
	deepEqual( Stem("zusammenreimt"), "zusammenreimt" );
	deepEqual( Stem("zusammenschlagen"), "zusammenschlag" );
	deepEqual( Stem("zusammenschmelzt"), "zusammenschmelzt" );
	deepEqual( Stem("zusammenschrumpften"), "zusammenschrumpft" );
	deepEqual( Stem("zusammensein"), "zusammensein" );
	deepEqual( Stem("zusammenseins"), "zusammensein" );
	deepEqual( Stem("zusammensetzen"), "zusammensetz" );
	deepEqual( Stem("zusammensetzten"), "zusammensetzt" );
	deepEqual( Stem("zusammensetzung"), "zusammensetz" );
	deepEqual( Stem("zusammenspeisen"), "zusammenspeis" );
	deepEqual( Stem("zusammenspeisungen"), "zusammenspeis" );
	deepEqual( Stem("zusammensteckte"), "zusammensteckt" );
	deepEqual( Stem("zusammenstellte"), "zusammenstellt" );
	deepEqual( Stem("zusammenstellung"), "zusammenstell" );
	deepEqual( Stem("zusammenstiessen"), "zusammenstiess" );
	deepEqual( Stem("zusammenstimmen"), "zusammenstimm" );
	deepEqual( Stem("zusammenstimmt"), "zusammenstimmt" );
	deepEqual( Stem("zusammenstimmte"), "zusammenstimmt" );
	deepEqual( Stem("zusammenstimmung"), "zusammenstimm" );
	deepEqual( Stem("zusammenstoppeln"), "zusammenstoppeln" );
	deepEqual( Stem("zusammenstoppelt"), "zusammenstoppelt" );
	deepEqual( Stem("zusammenstoss"), "zusammenstoss" );
	deepEqual( Stem("zusammenstoß"), "zusammenstoss" );
	deepEqual( Stem("zusammenstösst"), "zusammenstosst" );
	deepEqual( Stem("zusammenstößt"), "zusammenstosst" );
	deepEqual( Stem("zusammenströmen"), "zusammenstrom" );
	deepEqual( Stem("zusammensuchend"), "zusammensuch" );
	deepEqual( Stem("zusammentrafen"), "zusammentraf" );
	deepEqual( Stem("zusammentreffen"), "zusammentreff" );
	deepEqual( Stem("zusammenwirken"), "zusammenwirk" );
	deepEqual( Stem("zusammenwohnen"), "zusammenwohn" );
	deepEqual( Stem("zusammenzählte"), "zusammenzahlt" );
	deepEqual( Stem("zusammenziehen"), "zusammenzieh" );
	deepEqual( Stem("zusammenzieht"), "zusammenzieht" );
	deepEqual( Stem("zusammenzog"), "zusammenzog" );
	deepEqual( Stem("zusammenzogen"), "zusammenzog" );
	deepEqual( Stem("zusammenzu"), "zusammenzu" );
	deepEqual( Stem("zusammenzubringen"), "zusammenzubring" );
	deepEqual( Stem("zusammenzuckte"), "zusammenzuckt" );
	deepEqual( Stem("zusammenzuhalten"), "zusammenzuhalt" );
	deepEqual( Stem("zusammenzuraffen"), "zusammenzuraff" );
	deepEqual( Stem("zusammenzustellen"), "zusammenzustell" );
	deepEqual( Stem("zusammenzutreffen"), "zusammenzutreff" );
	deepEqual( Stem("zuschanden"), "zuschand" );
	deepEqual( Stem("zuschauer"), "zuschau" );
	deepEqual( Stem("zuschauern"), "zuschau" );
	deepEqual( Stem("zuschauers"), "zuschau" );
	deepEqual( Stem("zuschaute"), "zuschaut" );
	deepEqual( Stem("zuschauten"), "zuschaut" );
	deepEqual( Stem("zuschlagen"), "zuschlag" );
	deepEqual( Stem("zuschloss"), "zuschloss" );
	deepEqual( Stem("zuschnitt"), "zuschnitt" );
	deepEqual( Stem("zuschnüren"), "zuschnur" );
	deepEqual( Stem("zuschreiben"), "zuschreib" );
	deepEqual( Stem("zuschreibt"), "zuschreibt" );
	deepEqual( Stem("zuschrieben"), "zuschrieb" );
	deepEqual( Stem("zuschritt"), "zuschritt" );
	deepEqual( Stem("zuschulden"), "zuschuld" );
	deepEqual( Stem("zuschüsse"), "zuschuss" );
	deepEqual( Stem("zusehen"), "zuseh" );
	deepEqual( Stem("zusehends"), "zuseh" );
	deepEqual( Stem("zusendung"), "zusend" );
	deepEqual( Stem("züsens"), "zus" );
	deepEqual( Stem("zusetzen"), "zusetz" );
	deepEqual( Stem("zusetzt"), "zusetzt" );
	deepEqual( Stem("züsi"), "zusi" );
	deepEqual( Stem("züsis"), "zusis" );
	deepEqual( Stem("zuspätkommens"), "zuspatkomm" );
	deepEqual( Stem("zusprangen"), "zusprang" );
	deepEqual( Stem("zustand"), "zustand" );
	deepEqual( Stem("zustande"), "zustand" );
	deepEqual( Stem("zustände"), "zustand" );
	deepEqual( Stem("zuständen"), "zustand" );
	deepEqual( Stem("zustandes"), "zustand" );
	deepEqual( Stem("zuständig"), "zustand" );
	deepEqual( Stem("zustands"), "zustand" );
	deepEqual( Stem("zustandsveränderung"), "zustandsverander" );
	deepEqual( Stem("zustandsveränderungen"), "zustandsverander" );
	deepEqual( Stem("zustandswechsel"), "zustandswechsel" );
	deepEqual( Stem("zustatten"), "zustatt" );
	deepEqual( Stem("zusteht"), "zusteht" );
	deepEqual( Stem("zustimme"), "zustimm" );
	deepEqual( Stem("zustimmt"), "zustimmt" );
	deepEqual( Stem("zustimmung"), "zustimm" );
	deepEqual( Stem("zustürzte"), "zusturzt" );
	deepEqual( Stem("zutage"), "zutag" );
	deepEqual( Stem("zutageförderung"), "zutageforder" );
	deepEqual( Stem("zutat"), "zutat" );
	deepEqual( Stem("zuteil"), "zuteil" );
	deepEqual( Stem("zutragen"), "zutrag" );
	deepEqual( Stem("zutragend"), "zutrag" );
	deepEqual( Stem("zuträgern"), "zutrag" );
	deepEqual( Stem("zuträglich"), "zutrag" );
	deepEqual( Stem("zuträgliche"), "zutrag" );
	deepEqual( Stem("zuträglichkeit"), "zutrag" );
	deepEqual( Stem("zuträgt"), "zutragt" );
	deepEqual( Stem("zutrat"), "zutrat" );
	deepEqual( Stem("zutrauen"), "zutrau" );
	deepEqual( Stem("zutraulich"), "zutraulich" );
	deepEqual( Stem("zutraulicher"), "zutraulich" );
	deepEqual( Stem("zutreffen"), "zutreff" );
	deepEqual( Stem("zutreffend"), "zutreff" );
	deepEqual( Stem("zutreffende"), "zutreff" );
	deepEqual( Stem("zutrifft"), "zutrifft" );
	deepEqual( Stem("zutrug"), "zutrug" );
	deepEqual( Stem("zutulich"), "zutulich" );
	deepEqual( Stem("zutulicher"), "zutulich" );
	deepEqual( Stem("zutulichkeit"), "zutulich" );
	deepEqual( Stem("zutütchen"), "zututch" );
	deepEqual( Stem("zuunterst"), "zuunterst" );
	deepEqual( Stem("zuverlässig"), "zuverlass" );
	deepEqual( Stem("zuverlässigen"), "zuverlass" );
	deepEqual( Stem("zuverlässiger"), "zuverlass" );
	deepEqual( Stem("zuversicht"), "zuversicht" );
	deepEqual( Stem("zuversichtlich"), "zuversicht" );
	deepEqual( Stem("zuviel"), "zuviel" );
	deepEqual( Stem("zuvor"), "zuvor" );
	deepEqual( Stem("zuvörderst"), "zuvorderst" );
	deepEqual( Stem("zuvorkommend"), "zuvorkomm" );
	deepEqual( Stem("zuvorzutun"), "zuvorzutun" );
	deepEqual( Stem("zuwachs"), "zuwach" );
	deepEqual( Stem("zuwachses"), "zuwachs" );
	deepEqual( Stem("zuwandte"), "zuwandt" );
	deepEqual( Stem("zuwarf"), "zuwarf" );
	deepEqual( Stem("zuweg"), "zuweg" );
	deepEqual( Stem("zuwege"), "zuweg" );
	deepEqual( Stem("zuweilen"), "zuweil" );
	deepEqual( Stem("zuwenden"), "zuwend" );
	deepEqual( Stem("zuwendend"), "zuwend" );
	deepEqual( Stem("zuwendet"), "zuwendet" );
	deepEqual( Stem("zuwendeten"), "zuwendet" );
	deepEqual( Stem("zuwider"), "zuwid" );
	deepEqual( Stem("zuwinken"), "zuwink" );
	deepEqual( Stem("zuwinkte"), "zuwinkt" );
	deepEqual( Stem("zuwinkten"), "zuwinkt" );
	deepEqual( Stem("zuzeiten"), "zuzeit" );
	deepEqual( Stem("zuziehen"), "zuzieh" );
	deepEqual( Stem("zuzog"), "zuzog" );
	deepEqual( Stem("zuzogen"), "zuzog" );
	deepEqual( Stem("zuzuflüstern"), "zuzuflust" );
	deepEqual( Stem("zuzufügen"), "zuzufug" );
	deepEqual( Stem("zuzug"), "zuzug" );
	deepEqual( Stem("zuzüge"), "zuzug" );
	deepEqual( Stem("zuzügerwesen"), "zuzugerwes" );
	deepEqual( Stem("zuzuhören"), "zuzuhor" );
	deepEqual( Stem("zuzunehmen"), "zuzunehm" );
	deepEqual( Stem("zuzureden"), "zuzured" );
	deepEqual( Stem("zuzurichten"), "zuzuricht" );
	deepEqual( Stem("zuzuschauen"), "zuzuschau" );
	deepEqual( Stem("zuzuschlagen"), "zuzuschlag" );
	deepEqual( Stem("zuzusehen"), "zuzuseh" );
	deepEqual( Stem("zuzustutzen"), "zuzustutz" );
	deepEqual( Stem("zuzuwenden"), "zuzuw" );
	deepEqual( Stem("zwa"), "zwa" );
	deepEqual( Stem("zwackt"), "zwackt" );
	deepEqual( Stem("zwang"), "zwang" );
	deepEqual( Stem("zwange"), "zwang" );
	deepEqual( Stem("zwangen"), "zwang" );
	deepEqual( Stem("zwanges"), "zwang" );
	deepEqual( Stem("zwangslage"), "zwangslag" );
	deepEqual( Stem("zwangsläufig"), "zwangslauf" );
	deepEqual( Stem("zwanzig"), "zwanzig" );
	deepEqual( Stem("zwanzigjährigen"), "zwanzigjahr" );
	deepEqual( Stem("zwanzigjähriger"), "zwanzigjahr" );
	deepEqual( Stem("zwanzigmal"), "zwanzigmal" );
	deepEqual( Stem("zwar"), "zwar" );
	deepEqual( Stem("zweck"), "zweck" );
	deepEqual( Stem("zweckdienliche"), "zweckdi" );
	deepEqual( Stem("zwecke"), "zweck" );
	deepEqual( Stem("zwecken"), "zweck" );
	deepEqual( Stem("zweckentfremdete"), "zweckentfremdet" );
	deepEqual( Stem("zweckes"), "zweck" );
	deepEqual( Stem("zwecklos"), "zwecklos" );
	deepEqual( Stem("zwecklose"), "zwecklos" );
	deepEqual( Stem("zweckmässig"), "zweckmass" );
	deepEqual( Stem("zweckmäßig"), "zweckmass" );
	deepEqual( Stem("zweckmässigen"), "zweckmass" );
	deepEqual( Stem("zweckmässiger"), "zweckmass" );
	deepEqual( Stem("zweckmäßiger"), "zweckmass" );
	deepEqual( Stem("zweckmässiges"), "zweckmass" );
	deepEqual( Stem("zweckmässigkeit"), "zweckmass" );
	deepEqual( Stem("zwecks"), "zweck" );
	deepEqual( Stem("zweckwidrig"), "zweckwidr" );
	deepEqual( Stem("zwei"), "zwei" );
	deepEqual( Stem("zweideutig"), "zweideut" );
	deepEqual( Stem("zweideutige"), "zweideut" );
	deepEqual( Stem("zweideutiger"), "zweideut" );
	deepEqual( Stem("zweideutigkeit"), "zweideut" );
	deepEqual( Stem("zweien"), "zweien" );
	deepEqual( Stem("zweier"), "zweier" );
	deepEqual( Stem("zweierlei"), "zweierlei" );
	deepEqual( Stem("zweifel"), "zweifel" );
	deepEqual( Stem("zweifelhaft"), "zweifelhaft" );
	deepEqual( Stem("zweifelhafter"), "zweifelhaft" );
	deepEqual( Stem("zweifellehre"), "zweifellehr" );
	deepEqual( Stem("zweifellos"), "zweifellos" );
	deepEqual( Stem("zweifeln"), "zweifeln" );
	deepEqual( Stem("zweifelsfreien"), "zweifelsfrei" );
	deepEqual( Stem("zweifelsohne"), "zweifelsohn" );
	deepEqual( Stem("zweifelten"), "zweifelt" );
	deepEqual( Stem("zweifelvollen"), "zweifelvoll" );
	deepEqual( Stem("zweifenstriges"), "zweifenstr" );
	deepEqual( Stem("zweifler"), "zweifl" );
	deepEqual( Stem("zweig"), "zweig" );
	deepEqual( Stem("zweigchen"), "zweigch" );
	deepEqual( Stem("zweige"), "zweig" );
	deepEqual( Stem("zweigen"), "zweig" );
	deepEqual( Stem("zweiges"), "zweig" );
	deepEqual( Stem("zweiglein"), "zweiglein" );
	deepEqual( Stem("zweihändigen"), "zweihand" );
	deepEqual( Stem("zweihundert"), "zweihundert" );
	deepEqual( Stem("zweihundertachtundfünfzig"), "zweihundertachtundfunfz" );
	deepEqual( Stem("zweijährigen"), "zweijahr" );
	deepEqual( Stem("zweikampf"), "zweikampf" );
	deepEqual( Stem("zweimal"), "zweimal" );
	deepEqual( Stem("zweimonatszeitschrift"), "zweimonatszeitschrift" );
	deepEqual( Stem("zweischneidiges"), "zweischneid" );
	deepEqual( Stem("zweispännigen"), "zweispann" );
	deepEqual( Stem("zweispra"), "zweispra" );
	deepEqual( Stem("zweit"), "zweit" );
	deepEqual( Stem("zweitägige"), "zweitag" );
	deepEqual( Stem("zweitausend"), "zweitaus" );
	deepEqual( Stem("zweite"), "zweit" );
	deepEqual( Stem("zweitem"), "zweit" );
	deepEqual( Stem("zweiten"), "zweit" );
	deepEqual( Stem("zweitenmal"), "zweitenmal" );
	deepEqual( Stem("zweitens"), "zweit" );
	deepEqual( Stem("zweiter"), "zweit" );
	deepEqual( Stem("zweites"), "zweit" );
	deepEqual( Stem("zweithöchsten"), "zweithoch" );
	deepEqual( Stem("zweiundachtzig"), "zweiundachtz" );
	deepEqual( Stem("zweiunddreissig"), "zweiunddreiss" );
	deepEqual( Stem("zweiundfünfzig"), "zweiundfunfz" );
	deepEqual( Stem("zweiundsechzig"), "zweiundsechz" );
	deepEqual( Stem("zweiundvierzig"), "zweiundvierz" );
	deepEqual( Stem("zweiundzwanzig"), "zweiundzwanz" );
	deepEqual( Stem("zwerge"), "zwerg" );
	deepEqual( Stem("zwergfinken"), "zwergfink" );
	deepEqual( Stem("zwickten"), "zwickt" );
	deepEqual( Stem("zwieback"), "zwieback" );
	deepEqual( Stem("zwiegespräch"), "zwiegesprach" );
	deepEqual( Stem("zwiegsang"), "zwiegsang" );
	deepEqual( Stem("zwiespalt"), "zwiespalt" );
	deepEqual( Stem("zwiespaltes"), "zwiespalt" );
	deepEqual( Stem("zwiesprache"), "zwiesprach" );
	deepEqual( Stem("zwillich"), "zwillich" );
	deepEqual( Stem("zwillingsmilchflasche"), "zwillingsmilchflasch" );
	deepEqual( Stem("zwingen"), "zwing" );
	deepEqual( Stem("zwingend"), "zwingend" );
	deepEqual( Stem("zwinger"), "zwing" );
	deepEqual( Stem("zwingt"), "zwingt" );
	deepEqual( Stem("zwinkert"), "zwinkert" );
	deepEqual( Stem("zwinkerte"), "zwinkert" );
	deepEqual( Stem("zwirchkammer"), "zwirchkamm" );
	deepEqual( Stem("zwirn"), "zwirn" );
	deepEqual( Stem("zwirnfabrik"), "zwirnfabr" );
	deepEqual( Stem("zwischen"), "zwisch" );
	deepEqual( Stem("zwischendurch"), "zwischendurch" );
	deepEqual( Stem("zwischenräumen"), "zwischenraum" );
	deepEqual( Stem("zwischenzeitlich"), "zwischenzeit" );
	deepEqual( Stem("zwitschermusik"), "zwitschermus" );
	deepEqual( Stem("zwitschern"), "zwitsch" );
	deepEqual( Stem("zwitschernd"), "zwitschernd" );
	deepEqual( Stem("zwitscherte"), "zwitschert" );
	deepEqual( Stem("zwoa"), "zwoa" );
	deepEqual( Stem("zwölf"), "zwolf" );
	deepEqual( Stem("zwölferstangen"), "zwolferstang" );
	deepEqual( Stem("zwölfhundert"), "zwolfhundert" );
	deepEqual( Stem("zwölfjährigen"), "zwolfjahr" );
	deepEqual( Stem("zwölfmal"), "zwolfmal" );
	deepEqual( Stem("zwölfte"), "zwolft" );
	deepEqual( Stem("zwungen"), "zwung" );
	deepEqual( Stem("zylinder"), "zylind" );
	deepEqual( Stem("zylinderhut"), "zylinderhut" );
	deepEqual( Stem("zylinderhüte"), "zylinderhut" );
	deepEqual( Stem("zylinderhüten"), "zylinderhut" );
	deepEqual( Stem("zyniker"), "zynik" );
	deepEqual( Stem("zynischen"), "zynisch" );
	deepEqual( Stem("zyperns"), "zypern" );
	deepEqual( Stem("zypressen"), "zypress" );
});
