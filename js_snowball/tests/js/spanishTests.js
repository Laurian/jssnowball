QUnit.test('spanish', function(){
	var Stem = snowballFactory.newStemmer('spanish').stem;
	deepEqual( Stem("a"), "a" );
	deepEqual( Stem("aarón"), "aaron" );
	deepEqual( Stem("abaco"), "abac" );
	deepEqual( Stem("abajo"), "abaj" );
	deepEqual( Stem("abandera"), "abander" );
	deepEqual( Stem("abandona"), "abandon" );
	deepEqual( Stem("abandonada"), "abandon" );
	deepEqual( Stem("abandonadas"), "abandon" );
	deepEqual( Stem("abandonado"), "abandon" );
	deepEqual( Stem("abandonados"), "abandon" );
	deepEqual( Stem("abandonamos"), "abandon" );
	deepEqual( Stem("abandonan"), "abandon" );
	deepEqual( Stem("abandonar"), "abandon" );
	deepEqual( Stem("abandonarlo"), "abandon" );
	deepEqual( Stem("abandonaron"), "abandon" );
	deepEqual( Stem("abandono"), "abandon" );
	deepEqual( Stem("abandonó"), "abandon" );
	deepEqual( Stem("abaratar"), "abarat" );
	deepEqual( Stem("abarca"), "abarc" );
	deepEqual( Stem("abarcamos"), "abarc" );
	deepEqual( Stem("abarcan"), "abarc" );
	deepEqual( Stem("abarcar"), "abarc" );
	deepEqual( Stem("abarcará"), "abarc" );
	deepEqual( Stem("abarcarán"), "abarc" );
	deepEqual( Stem("abarcaría"), "abarc" );
	deepEqual( Stem("abarcó"), "abarc" );
	deepEqual( Stem("abaroa"), "abaro" );
	deepEqual( Stem("abarroteros"), "abarroter" );
	deepEqual( Stem("abarrotó"), "abarrot" );
	deepEqual( Stem("abastece"), "abastec" );
	deepEqual( Stem("abastecedora"), "abastecedor" );
	deepEqual( Stem("abastecer"), "abastec" );
	deepEqual( Stem("abastecimiento"), "abastec" );
	deepEqual( Stem("abastecimientos"), "abastec" );
	deepEqual( Stem("abasto"), "abast" );
	deepEqual( Stem("abatares"), "abatar" );
	deepEqual( Stem("abatida"), "abat" );
	deepEqual( Stem("abatido"), "abat" );
	deepEqual( Stem("abatidos"), "abat" );
	deepEqual( Stem("abatimiento"), "abat" );
	deepEqual( Stem("abatió"), "abat" );
	deepEqual( Stem("abatir"), "abat" );
	deepEqual( Stem("abatirnos"), "abat" );
	deepEqual( Stem("abatirse"), "abat" );
	deepEqual( Stem("abba"), "abba" );
	deepEqual( Stem("abbud"), "abbud" );
	deepEqual( Stem("abc"), "abc" );
	deepEqual( Stem("abdicación"), "abdic" );
	deepEqual( Stem("abdicar"), "abdic" );
	deepEqual( Stem("abeba"), "abeb" );
	deepEqual( Stem("abedrop"), "abedrop" );
	deepEqual( Stem("abel"), "abel" );
	deepEqual( Stem("abelardo"), "abelard" );
	deepEqual( Stem("aberración"), "aberr" );
	deepEqual( Stem("aberrante"), "aberr" );
	deepEqual( Stem("abidjan"), "abidj" );
	deepEqual( Stem("abiel"), "abiel" );
	deepEqual( Stem("abierta"), "abiert" );
	deepEqual( Stem("abiertamente"), "abiert" );
	deepEqual( Stem("abiertas"), "abiert" );
	deepEqual( Stem("abierto"), "abiert" );
	deepEqual( Stem("abiertos"), "abiert" );
	deepEqual( Stem("abigeo"), "abige" );
	deepEqual( Stem("abimael"), "abimael" );
	deepEqual( Stem("abióticos"), "abiot" );
	deepEqual( Stem("abismo"), "abism" );
	deepEqual( Stem("ablandar"), "abland" );
	deepEqual( Stem("ablandó"), "abland" );
	deepEqual( Stem("abluciones"), "ablucion" );
	deepEqual( Stem("abnegación"), "abneg" );
	deepEqual( Stem("aboagay"), "aboagay" );
	deepEqual( Stem("abocó"), "aboc" );
	deepEqual( Stem("abogada"), "abog" );
	deepEqual( Stem("abogadas"), "abog" );
	deepEqual( Stem("abogadete"), "abogadet" );
	deepEqual( Stem("abogadillo"), "abogadill" );
	deepEqual( Stem("abogado"), "abog" );
	deepEqual( Stem("abogados"), "abog" );
	deepEqual( Stem("abolición"), "abolicion" );
	deepEqual( Stem("abolirá"), "abol" );
	deepEqual( Stem("abominan"), "abomin" );
	deepEqual( Stem("abono"), "abon" );
	deepEqual( Stem("abonos"), "abon" );
	deepEqual( Stem("aborda"), "abord" );
	deepEqual( Stem("abordaban"), "abord" );
	deepEqual( Stem("abordada"), "abord" );
	deepEqual( Stem("abordadas"), "abord" );
	deepEqual( Stem("abordan"), "abord" );
	deepEqual( Stem("abordando"), "abord" );
	deepEqual( Stem("abordar"), "abord" );
	deepEqual( Stem("abordará"), "abord" );
	deepEqual( Stem("abordarán"), "abord" );
	deepEqual( Stem("abordaron"), "abord" );
	deepEqual( Stem("aborde"), "abord" );
	deepEqual( Stem("abordo"), "abord" );
	deepEqual( Stem("abordó"), "abord" );
	deepEqual( Stem("abortados"), "abort" );
	deepEqual( Stem("abortiva"), "abort" );
	deepEqual( Stem("aborto"), "abort" );
	deepEqual( Stem("abortos"), "abort" );
	deepEqual( Stem("abra"), "abra" );
	deepEqual( Stem("abraham"), "abraham" );
	deepEqual( Stem("abrasivo"), "abras" );
	deepEqual( Stem("abrazarlo"), "abraz" );
	deepEqual( Stem("abrazarse"), "abraz" );
	deepEqual( Stem("abrazo"), "abraz" );
	deepEqual( Stem("abre"), "abre" );
	deepEqual( Stem("abrego"), "abreg" );
	deepEqual( Stem("abren"), "abren" );
	deepEqual( Stem("abreu"), "abreu" );
	deepEqual( Stem("abreviar"), "abrevi" );
	deepEqual( Stem("abrían"), "abri" );
	deepEqual( Stem("abridor"), "abridor" );
	deepEqual( Stem("abriendo"), "abriend" );
	deepEqual( Stem("abrieron"), "abrieron" );
	deepEqual( Stem("abrigan"), "abrig" );
	deepEqual( Stem("abrigo"), "abrig" );
	deepEqual( Stem("abrigos"), "abrig" );
	deepEqual( Stem("abril"), "abril" );
	deepEqual( Stem("abriles"), "abril" );
	deepEqual( Stem("abrio"), "abri" );
	deepEqual( Stem("abrió"), "abri" );
	deepEqual( Stem("abrir"), "abrir" );
	deepEqual( Stem("abrira"), "abrir" );
	deepEqual( Stem("abrirá"), "abrir" );
	deepEqual( Stem("abrirán"), "abriran" );
	deepEqual( Stem("abriría"), "abrir" );
	deepEqual( Stem("abrirla"), "abrirl" );
	deepEqual( Stem("abrirlos"), "abrirl" );
	deepEqual( Stem("abrirnos"), "abrirn" );
	deepEqual( Stem("abrirse"), "abrirs" );
	deepEqual( Stem("abrogación"), "abrog" );
	deepEqual( Stem("abrogados"), "abrog" );
	deepEqual( Stem("abrogar"), "abrog" );
	deepEqual( Stem("abrupto"), "abrupt" );
	deepEqual( Stem("abs"), "abs" );
	deepEqual( Stem("absoletas"), "absolet" );
	deepEqual( Stem("absoluta"), "absolut" );
	deepEqual( Stem("absolutamente"), "absolut" );
	deepEqual( Stem("absoluto"), "absolut" );
	deepEqual( Stem("absolutoria"), "absolutori" );
	deepEqual( Stem("absolvió"), "absolv" );
	deepEqual( Stem("absorba"), "absorb" );
	deepEqual( Stem("absorber"), "absorb" );
	deepEqual( Stem("absorbiendo"), "absorb" );
	deepEqual( Stem("absorver"), "absorv" );
	deepEqual( Stem("abstencionismo"), "abstencion" );
	deepEqual( Stem("abstendrá"), "abstendr" );
	deepEqual( Stem("abstenga"), "absteng" );
	deepEqual( Stem("abstengan"), "absteng" );
	deepEqual( Stem("abstenido"), "absten" );
	deepEqual( Stem("abstracción"), "abstraccion" );
	deepEqual( Stem("abstracta"), "abstract" );
	deepEqual( Stem("abstractos"), "abstract" );
	deepEqual( Stem("abstuviera"), "abstuv" );
	deepEqual( Stem("absuelto"), "absuelt" );
	deepEqual( Stem("absurdas"), "absurd" );
	deepEqual( Stem("absurdo"), "absurd" );
	deepEqual( Stem("abucheado"), "abuch" );
	deepEqual( Stem("abuchear"), "abuch" );
	deepEqual( Stem("abuchearon"), "abuch" );
	deepEqual( Stem("abucheo"), "abuche" );
	deepEqual( Stem("abucheos"), "abuche" );
	deepEqual( Stem("abuela"), "abuel" );
	deepEqual( Stem("abuelas"), "abuel" );
	deepEqual( Stem("abuelita"), "abuelit" );
	deepEqual( Stem("abuelitas"), "abuelit" );
	deepEqual( Stem("abuelito"), "abuelit" );
	deepEqual( Stem("abuelitos"), "abuelit" );
	deepEqual( Stem("abuelo"), "abuel" );
	deepEqual( Stem("abuelos"), "abuel" );
	deepEqual( Stem("abultar"), "abult" );
	deepEqual( Stem("abunda"), "abund" );
	deepEqual( Stem("abundan"), "abund" );
	deepEqual( Stem("abundancia"), "abund" );
	deepEqual( Stem("abundante"), "abund" );
	deepEqual( Stem("abundantes"), "abund" );
	deepEqual( Stem("abundar"), "abund" );
	deepEqual( Stem("abundaron"), "abund" );
	deepEqual( Stem("abundó"), "abund" );
	deepEqual( Stem("abur"), "abur" );
	deepEqual( Stem("aburridas"), "aburr" );
	deepEqual( Stem("abuso"), "abus" );
	deepEqual( Stem("abusos"), "abus" );
	deepEqual( Stem("acá"), "aca" );
	deepEqual( Stem("acaba"), "acab" );
	deepEqual( Stem("acababa"), "acab" );
	deepEqual( Stem("acabado"), "acab" );
	deepEqual( Stem("acabados"), "acab" );
	deepEqual( Stem("acabamos"), "acab" );
	deepEqual( Stem("acaban"), "acab" );
	deepEqual( Stem("acabando"), "acab" );
	deepEqual( Stem("acabar"), "acab" );
	deepEqual( Stem("acabará"), "acab" );
	deepEqual( Stem("acabaría"), "acab" );
	deepEqual( Stem("acabaron"), "acab" );
	deepEqual( Stem("acabe"), "acab" );
	deepEqual( Stem("acabo"), "acab" );
	deepEqual( Stem("acabó"), "acab" );
	deepEqual( Stem("academia"), "academi" );
	deepEqual( Stem("académica"), "academ" );
	deepEqual( Stem("académicamente"), "academ" );
	deepEqual( Stem("académicas"), "academ" );
	deepEqual( Stem("académico"), "academ" );
	deepEqual( Stem("académicos"), "academ" );
	deepEqual( Stem("academik"), "academik" );
	deepEqual( Stem("academy"), "academy" );
	deepEqual( Stem("acaeció"), "acaec" );
	deepEqual( Stem("acallando"), "acall" );
	deepEqual( Stem("acallar"), "acall" );
	deepEqual( Stem("acámbaro"), "acambar" );
	deepEqual( Stem("acampar"), "acamp" );
	deepEqual( Stem("acapara"), "acap" );
	deepEqual( Stem("acaparado"), "acapar" );
	deepEqual( Stem("acaparadores"), "acapar" );
	deepEqual( Stem("acaparar"), "acapar" );
	deepEqual( Stem("acaparó"), "acapar" );
	deepEqual( Stem("acapulco"), "acapulc" );
	deepEqual( Stem("acariciarte"), "acariciart" );
	deepEqual( Stem("acarreado"), "acarr" );
	deepEqual( Stem("acarreadores"), "acarr" );
	deepEqual( Stem("acarreados"), "acarr" );
	deepEqual( Stem("acarrear"), "acarr" );
	deepEqual( Stem("acaso"), "acas" );
	deepEqual( Stem("acatar"), "acat" );
	deepEqual( Stem("acataré"), "acat" );
	deepEqual( Stem("acatarlas"), "acat" );
	deepEqual( Stem("acaten"), "acat" );
	deepEqual( Stem("acaudaladas"), "acaudal" );
	deepEqual( Stem("accedan"), "acced" );
	deepEqual( Stem("accede"), "acced" );
	deepEqual( Stem("acceder"), "acced" );
	deepEqual( Stem("accederán"), "acced" );
	deepEqual( Stem("accedido"), "acced" );
	deepEqual( Stem("accedieron"), "acced" );
	deepEqual( Stem("accesará"), "acces" );
	deepEqual( Stem("accesible"), "acces" );
	deepEqual( Stem("accesibles"), "acces" );
	deepEqual( Stem("acceso"), "acces" );
	deepEqual( Stem("accesorio"), "accesori" );
	deepEqual( Stem("accesorios"), "accesori" );
	deepEqual( Stem("accesos"), "acces" );
	deepEqual( Stem("accidentado"), "accident" );
	deepEqual( Stem("accidentados"), "accident" );
	deepEqual( Stem("accidental"), "accidental" );
	deepEqual( Stem("accidentarnos"), "accident" );
	deepEqual( Stem("accidente"), "accident" );
	deepEqual( Stem("accidentes"), "accident" );
	deepEqual( Stem("accion"), "accion" );
	deepEqual( Stem("acción"), "accion" );
	deepEqual( Stem("accionar"), "accion" );
	deepEqual( Stem("accionaria"), "accionari" );
	deepEqual( Stem("accionarias"), "accionari" );
	deepEqual( Stem("accionario"), "accionari" );
	deepEqual( Stem("accione"), "accion" );
	deepEqual( Stem("acciones"), "accion" );
	deepEqual( Stem("accionista"), "accion" );
	deepEqual( Stem("accionistas"), "accion" );
	deepEqual( Stem("accival"), "accival" );
	deepEqual( Stem("accra"), "accra" );
	deepEqual( Stem("aceite"), "aceit" );
	deepEqual( Stem("aceites"), "aceit" );
	deepEqual( Stem("aceleradas"), "aceler" );
	deepEqual( Stem("acelerado"), "aceler" );
	deepEqual( Stem("acelerar"), "aceler" );
	deepEqual( Stem("acelerara"), "aceler" );
	deepEqual( Stem("acelerará"), "aceler" );
	deepEqual( Stem("acelerarse"), "aceler" );
	deepEqual( Stem("aceleró"), "aceler" );
	deepEqual( Stem("acendrada"), "acendr" );
	deepEqual( Stem("acentuada"), "acentu" );
	deepEqual( Stem("acentuadas"), "acentu" );
	deepEqual( Stem("acentuar"), "acentu" );
	deepEqual( Stem("acentuó"), "acentu" );
	deepEqual( Stem("acepta"), "acept" );
	deepEqual( Stem("aceptaba"), "acept" );
	deepEqual( Stem("aceptaban"), "acept" );
	deepEqual( Stem("aceptable"), "acept" );
	deepEqual( Stem("aceptación"), "acept" );
	deepEqual( Stem("aceptada"), "acept" );
	deepEqual( Stem("aceptadas"), "acept" );
	deepEqual( Stem("aceptado"), "acept" );
	deepEqual( Stem("aceptados"), "acept" );
	deepEqual( Stem("aceptamos"), "acept" );
	deepEqual( Stem("aceptan"), "acept" );
	deepEqual( Stem("aceptar"), "acept" );
	deepEqual( Stem("aceptara"), "acept" );
	deepEqual( Stem("aceptarían"), "acept" );
	deepEqual( Stem("aceptarla"), "acept" );
	deepEqual( Stem("aceptaron"), "acept" );
	deepEqual( Stem("aceptas"), "acept" );
	deepEqual( Stem("acepte"), "acept" );
	deepEqual( Stem("acepté"), "acept" );
	deepEqual( Stem("acepten"), "acept" );
	deepEqual( Stem("acepto"), "acept" );
	deepEqual( Stem("aceptó"), "acept" );
	deepEqual( Stem("acer"), "acer" );
	deepEqual( Stem("acera"), "acer" );
	deepEqual( Stem("acerca"), "acerc" );
	deepEqual( Stem("acercaba"), "acerc" );
	deepEqual( Stem("acercaban"), "acerc" );
	deepEqual( Stem("acercado"), "acerc" );
	deepEqual( Stem("acercamiento"), "acerc" );
	deepEqual( Stem("acercamientos"), "acerc" );
	deepEqual( Stem("acercan"), "acerc" );
	deepEqual( Stem("acercando"), "acerc" );
	deepEqual( Stem("acercándonos"), "acerc" );
	deepEqual( Stem("acercándose"), "acerc" );
	deepEqual( Stem("acercar"), "acerc" );
	deepEqual( Stem("acercarán"), "acerc" );
	deepEqual( Stem("acercaría"), "acerc" );
	deepEqual( Stem("acercarnos"), "acerc" );
	deepEqual( Stem("acercaron"), "acerc" );
	deepEqual( Stem("acercarse"), "acerc" );
	deepEqual( Stem("acercó"), "acerc" );
	deepEqual( Stem("acereras"), "acerer" );
	deepEqual( Stem("acereros"), "acerer" );
	deepEqual( Stem("acero"), "acer" );
	deepEqual( Stem("acerque"), "acerqu" );
	deepEqual( Stem("acerqué"), "acerqu" );
	deepEqual( Stem("acerquen"), "acerqu" );
	deepEqual( Stem("acertada"), "acert" );
	deepEqual( Stem("acertadamente"), "acert" );
	deepEqual( Stem("acertado"), "acert" );
	deepEqual( Stem("acervo"), "acerv" );
	deepEqual( Stem("acetato"), "acetat" );
	deepEqual( Stem("acevedo"), "aceved" );
	deepEqual( Stem("aceves"), "acev" );
	deepEqual( Stem("achacan"), "achac" );
	deepEqual( Stem("achacar"), "achac" );
	deepEqual( Stem("achacaron"), "achac" );
	deepEqual( Stem("achacársela"), "achac" );
	deepEqual( Stem("achaques"), "achaqu" );
	deepEqual( Stem("acheson"), "acheson" );
	deepEqual( Stem("achichincles"), "achichincl" );
	deepEqual( Stem("achieve"), "achiev" );
	deepEqual( Stem("achique"), "achiqu" );
	deepEqual( Stem("achy"), "achy" );
	deepEqual( Stem("acicalar"), "acical" );
	deepEqual( Stem("acicate"), "acicat" );
	deepEqual( Stem("ácida"), "acid" );
	deepEqual( Stem("ácidas"), "acid" );
	deepEqual( Stem("acidez"), "acidez" );
	deepEqual( Stem("ácido"), "acid" );
	deepEqual( Stem("ácidos"), "acid" );
	deepEqual( Stem("acierto"), "aciert" );
	deepEqual( Stem("aciertos"), "aciert" );
	deepEqual( Stem("aclamada"), "aclam" );
	deepEqual( Stem("aclamado"), "aclam" );
	deepEqual( Stem("aclara"), "aclar" );
	deepEqual( Stem("aclaración"), "aclar" );
	deepEqual( Stem("aclaraciones"), "aclar" );
	deepEqual( Stem("aclarado"), "aclar" );
	deepEqual( Stem("aclaramos"), "aclar" );
	deepEqual( Stem("aclarando"), "aclar" );
	deepEqual( Stem("aclarar"), "aclar" );
	deepEqual( Stem("aclarara"), "aclar" );
	deepEqual( Stem("aclararon"), "aclar" );
	deepEqual( Stem("aclaratorias"), "aclaratori" );
	deepEqual( Stem("aclaren"), "aclar" );
	deepEqual( Stem("aclaró"), "aclar" );
	deepEqual( Stem("aclimatado"), "aclimat" );
	deepEqual( Stem("aclimatándose"), "aclimat" );
	deepEqual( Stem("acne"), "acne" );
	deepEqual( Stem("acné"), "acne" );
	deepEqual( Stem("acogida"), "acog" );
	deepEqual( Stem("acojan"), "acoj" );
	deepEqual( Stem("acomete"), "acomet" );
	deepEqual( Stem("acomodado"), "acomod" );
	deepEqual( Stem("acomodados"), "acomod" );
	deepEqual( Stem("acomodar"), "acomod" );
	deepEqual( Stem("acomodarse"), "acomod" );
	deepEqual( Stem("acompaña"), "acompañ" );
	deepEqual( Stem("acompañaba"), "acompañ" );
	deepEqual( Stem("acompañaban"), "acompañ" );
	deepEqual( Stem("acompañada"), "acompañ" );
	deepEqual( Stem("acompañadas"), "acompañ" );
	deepEqual( Stem("acompañado"), "acompañ" );
	deepEqual( Stem("acompañados"), "acompañ" );
	deepEqual( Stem("acompañan"), "acompañ" );
	deepEqual( Stem("acompañando"), "acompañ" );
	deepEqual( Stem("acompañante"), "acompañ" );
	deepEqual( Stem("acompañantes"), "acompañ" );
	deepEqual( Stem("acompañar"), "acompañ" );
	deepEqual( Stem("acompañará"), "acompañ" );
	deepEqual( Stem("acompañarán"), "acompañ" );
	deepEqual( Stem("acompañaría"), "acompañ" );
	deepEqual( Stem("acompañarían"), "acompañ" );
	deepEqual( Stem("acompañaron"), "acompañ" );
	deepEqual( Stem("acompañe"), "acompañ" );
	deepEqual( Stem("acompañó"), "acompañ" );
	deepEqual( Stem("acomplejados"), "acomplej" );
	deepEqual( Stem("acondicionadas"), "acondicion" );
	deepEqual( Stem("acondicionados"), "acondicion" );
	deepEqual( Stem("acondicionamiento"), "acondicion" );
	deepEqual( Stem("acongoje"), "acongoj" );
	deepEqual( Stem("aconseja"), "aconsej" );
	deepEqual( Stem("aconsejan"), "aconsej" );
	deepEqual( Stem("aconsejar"), "aconsej" );
	deepEqual( Stem("aconsejará"), "aconsej" );
	deepEqual( Stem("aconsejaron"), "aconsej" );
	deepEqual( Stem("aconséjeme"), "aconsejem" );
	deepEqual( Stem("aconsejó"), "aconsej" );
	deepEqual( Stem("acontecer"), "acontec" );
	deepEqual( Stem("acontecimiento"), "acontec" );
	deepEqual( Stem("acontecimientos"), "acontec" );
	deepEqual( Stem("aconteció"), "acontec" );
	deepEqual( Stem("acopio"), "acopi" );
	deepEqual( Stem("acoplamiento"), "acopl" );
	deepEqual( Stem("acoplamientos"), "acopl" );
	deepEqual( Stem("acoplando"), "acopl" );
	deepEqual( Stem("acordada"), "acord" );
	deepEqual( Stem("acordado"), "acord" );
	deepEqual( Stem("acordados"), "acord" );
	deepEqual( Stem("acordaron"), "acord" );
	deepEqual( Stem("acorde"), "acord" );
	deepEqual( Stem("acordé"), "acord" );
	deepEqual( Stem("acordes"), "acord" );
	deepEqual( Stem("acordó"), "acord" );
	deepEqual( Stem("acorraló"), "acorral" );
	deepEqual( Stem("acortado"), "acort" );
	deepEqual( Stem("acortaron"), "acort" );
	deepEqual( Stem("acortó"), "acort" );
	deepEqual( Stem("acoso"), "acos" );
	deepEqual( Stem("acosta"), "acost" );
	deepEqual( Stem("acostada"), "acost" );
	deepEqual( Stem("acostumbra"), "acostumbr" );
	deepEqual( Stem("acostumbraba"), "acostumbr" );
	deepEqual( Stem("acostumbraban"), "acostumbr" );
	deepEqual( Stem("acostumbradas"), "acostumbr" );
	deepEqual( Stem("acostumbrado"), "acostumbr" );
	deepEqual( Stem("acostumbrados"), "acostumbr" );
	deepEqual( Stem("acostumbramos"), "acostumbr" );
	deepEqual( Stem("acostumbran"), "acostumbr" );
	deepEqual( Stem("acostumbrando"), "acostumbr" );
	deepEqual( Stem("acostumbrar"), "acostumbr" );
	deepEqual( Stem("acostumbrarme"), "acostumbr" );
	deepEqual( Stem("acostumbrarnos"), "acostumbr" );
	deepEqual( Stem("acota"), "acot" );
	deepEqual( Stem("acotamiento"), "acot" );
	deepEqual( Stem("acrecentarlo"), "acrecent" );
	deepEqual( Stem("acrecienta"), "acrecient" );
	deepEqual( Stem("acredita"), "acredit" );
	deepEqual( Stem("acreditable"), "acredit" );
	deepEqual( Stem("acreditación"), "acredit" );
	deepEqual( Stem("acreditada"), "acredit" );
	deepEqual( Stem("acreditado"), "acredit" );
	deepEqual( Stem("acreditados"), "acredit" );
	deepEqual( Stem("acreditó"), "acredit" );
	deepEqual( Stem("acreedor"), "acreedor" );
	deepEqual( Stem("acreedores"), "acreedor" );
	deepEqual( Stem("acribillado"), "acribill" );
	deepEqual( Stem("acribillan"), "acribill" );
	deepEqual( Stem("acrobacias"), "acrobaci" );
	deepEqual( Stem("acróbata"), "acrobat" );
	deepEqual( Stem("acta"), "acta" );
	deepEqual( Stem("actas"), "actas" );
	deepEqual( Stem("actitud"), "actitud" );
	deepEqual( Stem("actitudes"), "actitud" );
	deepEqual( Stem("activa"), "activ" );
	deepEqual( Stem("activación"), "activ" );
	deepEqual( Stem("activamente"), "activ" );
	deepEqual( Stem("activas"), "activ" );
	deepEqual( Stem("actividad"), "activ" );
	deepEqual( Stem("actividades"), "activ" );
	deepEqual( Stem("activista"), "activ" );
	deepEqual( Stem("activistas"), "activ" );
	deepEqual( Stem("activo"), "activ" );
	deepEqual( Stem("activos"), "activ" );
	deepEqual( Stem("acto"), "acto" );
	deepEqual( Stem("actor"), "actor" );
	deepEqual( Stem("actoral"), "actoral" );
	deepEqual( Stem("actores"), "actor" );
	deepEqual( Stem("actos"), "actos" );
	deepEqual( Stem("actrices"), "actric" );
	deepEqual( Stem("actriz"), "actriz" );
	deepEqual( Stem("actúa"), "actu" );
	deepEqual( Stem("actuaba"), "actu" );
	deepEqual( Stem("actuación"), "actuacion" );
	deepEqual( Stem("actuaciones"), "actuacion" );
	deepEqual( Stem("actuado"), "actu" );
	deepEqual( Stem("actual"), "actual" );
	deepEqual( Stem("actuales"), "actual" );
	deepEqual( Stem("actualice"), "actualic" );
	deepEqual( Stem("actualidad"), "actual" );
	deepEqual( Stem("actualización"), "actualiz" );
	deepEqual( Stem("actualizaciones"), "actualiz" );
	deepEqual( Stem("actualizada"), "actualiz" );
	deepEqual( Stem("actualizando"), "actualiz" );
	deepEqual( Stem("actualizar"), "actualiz" );
	deepEqual( Stem("actualmente"), "actual" );
	deepEqual( Stem("actúan"), "actu" );
	deepEqual( Stem("actuando"), "actu" );
	deepEqual( Stem("actuar"), "actu" );
	deepEqual( Stem("actuará"), "actu" );
	deepEqual( Stem("actuarán"), "actu" );
	deepEqual( Stem("actuaron"), "actu" );
	deepEqual( Stem("actúe"), "actu" );
	deepEqual( Stem("actúen"), "actu" );
	deepEqual( Stem("actuó"), "actu" );
	deepEqual( Stem("acuarios"), "acuari" );
	deepEqual( Stem("acuática"), "acuat" );
	deepEqual( Stem("acuciantes"), "acuci" );
	deepEqual( Stem("acuda"), "acud" );
	deepEqual( Stem("acudan"), "acud" );
	deepEqual( Stem("acude"), "acud" );
	deepEqual( Stem("acuden"), "acud" );
	deepEqual( Stem("acudí"), "acud" );
	deepEqual( Stem("acudía"), "acud" );
	deepEqual( Stem("acudían"), "acud" );
	deepEqual( Stem("acudido"), "acud" );
	deepEqual( Stem("acudiera"), "acud" );
	deepEqual( Stem("acudieron"), "acud" );
	deepEqual( Stem("acudió"), "acud" );
	deepEqual( Stem("acudir"), "acud" );
	deepEqual( Stem("acudirá"), "acud" );
	deepEqual( Stem("acudirán"), "acud" );
	deepEqual( Stem("acudiremos"), "acud" );
	deepEqual( Stem("acudirían"), "acud" );
	deepEqual( Stem("acueducto"), "acueduct" );
	deepEqual( Stem("acuerda"), "acuerd" );
	deepEqual( Stem("acuerdas"), "acuerd" );
	deepEqual( Stem("acuérdese"), "acuerdes" );
	deepEqual( Stem("acuerdo"), "acuerd" );
	deepEqual( Stem("acuerdos"), "acuerd" );
	deepEqual( Stem("acuesto"), "acuest" );
	deepEqual( Stem("acumula"), "acumul" );
	deepEqual( Stem("acumulación"), "acumul" );
	deepEqual( Stem("acumulada"), "acumul" );
	deepEqual( Stem("acumuladas"), "acumul" );
	deepEqual( Stem("acumulado"), "acumul" );
	deepEqual( Stem("acumulados"), "acumul" );
	deepEqual( Stem("acumulan"), "acumul" );
	deepEqual( Stem("acumulando"), "acumul" );
	deepEqual( Stem("acumular"), "acumul" );
	deepEqual( Stem("acumuló"), "acumul" );
	deepEqual( Stem("acuña"), "acuñ" );
	deepEqual( Stem("acupuntura"), "acupuntur" );
	deepEqual( Stem("acusa"), "acus" );
	deepEqual( Stem("acusaban"), "acus" );
	deepEqual( Stem("acusación"), "acus" );
	deepEqual( Stem("acusaciones"), "acus" );
	deepEqual( Stem("acusada"), "acus" );
	deepEqual( Stem("acusadas"), "acus" );
	deepEqual( Stem("acusado"), "acus" );
	deepEqual( Stem("acusador"), "acus" );
	deepEqual( Stem("acusadoras"), "acus" );
	deepEqual( Stem("acusadores"), "acus" );
	deepEqual( Stem("acusados"), "acus" );
	deepEqual( Stem("acusan"), "acus" );
	deepEqual( Stem("acusándolos"), "acus" );
	deepEqual( Stem("acusarlo"), "acus" );
	deepEqual( Stem("acusaron"), "acus" );
	deepEqual( Stem("acusatorias"), "acusatori" );
	deepEqual( Stem("acusó"), "acus" );
	deepEqual( Stem("acústica"), "acust" );
	deepEqual( Stem("acústicas"), "acust" );
	deepEqual( Stem("ad"), "ad" );
	deepEqual( Stem("adam"), "adam" );
	deepEqual( Stem("adame"), "adam" );
	deepEqual( Stem("adams"), "adams" );
	deepEqual( Stem("adamson"), "adamson" );
	deepEqual( Stem("adán"), "adan" );
	deepEqual( Stem("adaptación"), "adapt" );
	deepEqual( Stem("adaptada"), "adapt" );
	deepEqual( Stem("adaptado"), "adapt" );
	deepEqual( Stem("adaptados"), "adapt" );
	deepEqual( Stem("adaptan"), "adapt" );
	deepEqual( Stem("adaptando"), "adapt" );
	deepEqual( Stem("adaptándose"), "adapt" );
	deepEqual( Stem("adaptar"), "adapt" );
	deepEqual( Stem("adaptarán"), "adapt" );
	deepEqual( Stem("adaptarse"), "adapt" );
	deepEqual( Stem("adapten"), "adapt" );
	deepEqual( Stem("adaptó"), "adapt" );
	deepEqual( Stem("adarme"), "adarm" );
	deepEqual( Stem("addis"), "addis" );
	deepEqual( Stem("adecuación"), "adecu" );
	deepEqual( Stem("adecuaciones"), "adecu" );
	deepEqual( Stem("adecuada"), "adecu" );
	deepEqual( Stem("adecuadamente"), "adecu" );
	deepEqual( Stem("adecuadas"), "adecu" );
	deepEqual( Stem("adecuado"), "adecu" );
	deepEqual( Stem("adecuados"), "adecu" );
	deepEqual( Stem("adecuar"), "adecu" );
	deepEqual( Stem("adecuarla"), "adecu" );
	deepEqual( Stem("adecuarlos"), "adecu" );
	deepEqual( Stem("adecuarse"), "adecu" );
	deepEqual( Stem("adecuarte"), "adecuart" );
	deepEqual( Stem("adela"), "adel" );
	deepEqual( Stem("adelaida"), "adel" );
	deepEqual( Stem("adelanta"), "adelant" );
	deepEqual( Stem("adelantada"), "adelant" );
	deepEqual( Stem("adelantado"), "adelant" );
	deepEqual( Stem("adelantados"), "adelant" );
	deepEqual( Stem("adelantamos"), "adelant" );
	deepEqual( Stem("adelantando"), "adelant" );
	deepEqual( Stem("adelantar"), "adelant" );
	deepEqual( Stem("adelantarnos"), "adelant" );
	deepEqual( Stem("adelantaron"), "adelant" );
	deepEqual( Stem("adelantarse"), "adelant" );
	deepEqual( Stem("adelantase"), "adelant" );
	deepEqual( Stem("adelante"), "adel" );
	deepEqual( Stem("adelanto"), "adelant" );
	deepEqual( Stem("adelantó"), "adelant" );
	deepEqual( Stem("adelantos"), "adelant" );
	deepEqual( Stem("adelgazado"), "adelgaz" );
	deepEqual( Stem("adelgazar"), "adelgaz" );
	deepEqual( Stem("ademán"), "ademan" );
	deepEqual( Stem("ademanes"), "ademan" );
	deepEqual( Stem("ademas"), "adem" );
	deepEqual( Stem("además"), "ademas" );
	deepEqual( Stem("adentrarme"), "adentr" );
	deepEqual( Stem("adentrarnos"), "adentr" );
	deepEqual( Stem("adentro"), "adentr" );
	deepEqual( Stem("adeptos"), "adept" );
	deepEqual( Stem("aderezara"), "aderez" );
	deepEqual( Stem("adese"), "ades" );
	deepEqual( Stem("adeudaba"), "adeud" );
	deepEqual( Stem("adeudo"), "adeud" );
	deepEqual( Stem("adeudos"), "adeud" );
	deepEqual( Stem("adherencia"), "adherent" );
	deepEqual( Stem("adherida"), "adher" );
	deepEqual( Stem("adheridos"), "adher" );
	deepEqual( Stem("adherirse"), "adher" );
	deepEqual( Stem("adhesión"), "adhesion" );
	deepEqual( Stem("adhesiva"), "adhes" );
	deepEqual( Stem("adhiera"), "adhier" );
	deepEqual( Stem("adicional"), "adicional" );
	deepEqual( Stem("adicionales"), "adicional" );
	deepEqual( Stem("adicionalmente"), "adicional" );
	deepEqual( Stem("adiciones"), "adicion" );
	deepEqual( Stem("adicto"), "adict" );
	deepEqual( Stem("adictos"), "adict" );
	deepEqual( Stem("adiestramiento"), "adiestr" );
	deepEqual( Stem("adiós"), "adios" );
	deepEqual( Stem("aditamento"), "aditament" );
	deepEqual( Stem("adivinación"), "adivin" );
	deepEqual( Stem("adivinó"), "adivin" );
	deepEqual( Stem("adivinos"), "adivin" );
	deepEqual( Stem("adjetivo"), "adjet" );
	deepEqual( Stem("adjudicación"), "adjud" );
	deepEqual( Stem("adjudican"), "adjudic" );
	deepEqual( Stem("adjudicaron"), "adjudic" );
	deepEqual( Stem("adjudicarse"), "adjudic" );
	deepEqual( Stem("adjudicó"), "adjudic" );
	deepEqual( Stem("adjuntando"), "adjunt" );
	deepEqual( Stem("adjunto"), "adjunt" );
	deepEqual( Stem("administra"), "administr" );
	deepEqual( Stem("administración"), "administr" );
	deepEqual( Stem("administraciones"), "administr" );
	deepEqual( Stem("administrador"), "administr" );
	deepEqual( Stem("administradora"), "administr" );
	deepEqual( Stem("administradores"), "administr" );
	deepEqual( Stem("administrar"), "administr" );
	deepEqual( Stem("administrativa"), "administr" );
	deepEqual( Stem("administrativas"), "administr" );
	deepEqual( Stem("administrativo"), "administr" );
	deepEqual( Stem("administrativos"), "administr" );
	deepEqual( Stem("admiraban"), "admir" );
	deepEqual( Stem("admiración"), "admir" );
	deepEqual( Stem("admiradoras"), "admir" );
	deepEqual( Stem("admiran"), "admir" );
	deepEqual( Stem("admirar"), "admir" );
	deepEqual( Stem("admiro"), "admir" );
	deepEqual( Stem("admiró"), "admir" );
	deepEqual( Stem("admisión"), "admision" );
	deepEqual( Stem("admiten"), "admit" );
	deepEqual( Stem("admitidas"), "admit" );
	deepEqual( Stem("admitió"), "admit" );
	deepEqual( Stem("admitir"), "admit" );
	deepEqual( Stem("admito"), "admit" );
	deepEqual( Stem("adoleciendo"), "adolec" );
	deepEqual( Stem("adoleció"), "adolec" );
	deepEqual( Stem("adolescencia"), "adolescent" );
	deepEqual( Stem("adolescente"), "adolescent" );
	deepEqual( Stem("adolescentes"), "adolescent" );
	deepEqual( Stem("adolfo"), "adolf" );
	deepEqual( Stem("adolorida"), "adolor" );
	deepEqual( Stem("adopción"), "adopcion" );
	deepEqual( Stem("adopta"), "adopt" );
	deepEqual( Stem("adoptada"), "adopt" );
	deepEqual( Stem("adoptadas"), "adopt" );
	deepEqual( Stem("adoptado"), "adopt" );
	deepEqual( Stem("adoptando"), "adopt" );
	deepEqual( Stem("adoptar"), "adopt" );
	deepEqual( Stem("adoptará"), "adopt" );
	deepEqual( Stem("adoptaran"), "adopt" );
	deepEqual( Stem("adoptarán"), "adopt" );
	deepEqual( Stem("adoptaron"), "adopt" );
	deepEqual( Stem("adopte"), "adopt" );
	deepEqual( Stem("adopten"), "adopt" );
	deepEqual( Stem("adoptó"), "adopt" );
	deepEqual( Stem("adoquín"), "adoquin" );
	deepEqual( Stem("adora"), "ador" );
	deepEqual( Stem("adoradores"), "ador" );
	deepEqual( Stem("adoratorio"), "adoratori" );
	deepEqual( Stem("adornadas"), "adorn" );
	deepEqual( Stem("adornan"), "adorn" );
	deepEqual( Stem("adornar"), "adorn" );
	deepEqual( Stem("adornó"), "adorn" );
	deepEqual( Stem("adornos"), "adorn" );
	deepEqual( Stem("adoro"), "ador" );
	deepEqual( Stem("adquiera"), "adqu" );
	deepEqual( Stem("adquiere"), "adquier" );
	deepEqual( Stem("adquieren"), "adquier" );
	deepEqual( Stem("adquirí"), "adquir" );
	deepEqual( Stem("adquirida"), "adquir" );
	deepEqual( Stem("adquiridas"), "adquir" );
	deepEqual( Stem("adquirido"), "adquir" );
	deepEqual( Stem("adquirientes"), "adquirient" );
	deepEqual( Stem("adquiriera"), "adquir" );
	deepEqual( Stem("adquirieran"), "adquir" );
	deepEqual( Stem("adquirieron"), "adquir" );
	deepEqual( Stem("adquirió"), "adquir" );
	deepEqual( Stem("adquirir"), "adquir" );
	deepEqual( Stem("adquirirá"), "adquir" );
	deepEqual( Stem("adquisición"), "adquisicion" );
	deepEqual( Stem("adquisiciones"), "adquisicion" );
	deepEqual( Stem("adquisitivo"), "adquisit" );
	deepEqual( Stem("adr"), "adr" );
	deepEqual( Stem("adrián"), "adrian" );
	deepEqual( Stem("adriana"), "adrian" );
	deepEqual( Stem("adrs"), "adrs" );
	deepEqual( Stem("adscrita"), "adscrit" );
	deepEqual( Stem("adscrito"), "adscrit" );
	deepEqual( Stem("aduana"), "aduan" );
	deepEqual( Stem("aduanal"), "aduanal" );
	deepEqual( Stem("aduanales"), "aduanal" );
	deepEqual( Stem("aductor"), "aductor" );
	deepEqual( Stem("adueñarse"), "adueñ" );
	deepEqual( Stem("adulta"), "adult" );
	deepEqual( Stem("adultas"), "adult" );
	deepEqual( Stem("adulto"), "adult" );
	deepEqual( Stem("adultos"), "adult" );
	deepEqual( Stem("advantaje"), "advantaj" );
	deepEqual( Stem("adversario"), "adversari" );
	deepEqual( Stem("adversarios"), "adversari" );
	deepEqual( Stem("adversas"), "advers" );
	deepEqual( Stem("adversidades"), "advers" );
	deepEqual( Stem("adversos"), "advers" );
	deepEqual( Stem("advertencia"), "advertent" );
	deepEqual( Stem("advertido"), "advert" );
	deepEqual( Stem("advertimos"), "advert" );
	deepEqual( Stem("advertir"), "advert" );
	deepEqual( Stem("advertirán"), "advert" );
	deepEqual( Stem("advertirle"), "advert" );
	deepEqual( Stem("advertising"), "advertising" );
	deepEqual( Stem("advierta"), "adviert" );
	deepEqual( Stem("advierte"), "adviert" );
	deepEqual( Stem("advierten"), "adviert" );
	deepEqual( Stem("advierto"), "adviert" );
	deepEqual( Stem("advirtiendo"), "advirt" );
	deepEqual( Stem("advirtiéndoles"), "advirt" );
	deepEqual( Stem("advirtieron"), "advirt" );
	deepEqual( Stem("advirtió"), "advirt" );
	deepEqual( Stem("aérea"), "aere" );
	deepEqual( Stem("aéreas"), "aer" );
	deepEqual( Stem("aéreo"), "aere" );
	deepEqual( Stem("aéreos"), "aere" );
	deepEqual( Stem("aerodinámica"), "aerodinam" );
	deepEqual( Stem("aerodinámico"), "aerodinam" );
	deepEqual( Stem("aerofotogrametría"), "aerofotogrametr" );
	deepEqual( Stem("aerógrafo"), "aerograf" );
	deepEqual( Stem("aerolínea"), "aeroline" );
	deepEqual( Stem("aerolíneas"), "aerolin" );
	deepEqual( Stem("aerolito"), "aerolit" );
	deepEqual( Stem("aeroméxico"), "aeromex" );
	deepEqual( Stem("aeronáutica"), "aeronaut" );
	deepEqual( Stem("aeronave"), "aeronav" );
	deepEqual( Stem("aeronaves"), "aeronav" );
	deepEqual( Stem("aeroperú"), "aeroperu" );
	deepEqual( Stem("aeroportuario"), "aeroportuari" );
	deepEqual( Stem("aeropuerto"), "aeropuert" );
	deepEqual( Stem("aeropuertos"), "aeropuert" );
	deepEqual( Stem("aerosol"), "aerosol" );
	deepEqual( Stem("aerosoles"), "aerosol" );
	deepEqual( Stem("aerovias"), "aerovi" );
	deepEqual( Stem("aerovías"), "aerov" );
	deepEqual( Stem("afa"), "afa" );
	deepEqual( Stem("afán"), "afan" );
	deepEqual( Stem("afanes"), "afan" );
	deepEqual( Stem("afear"), "afe" );
	deepEqual( Stem("afección"), "afeccion" );
	deepEqual( Stem("afecciones"), "afeccion" );
	deepEqual( Stem("afecta"), "afect" );
	deepEqual( Stem("afectaba"), "afect" );
	deepEqual( Stem("afectación"), "afect" );
	deepEqual( Stem("afectaciones"), "afect" );
	deepEqual( Stem("afectad"), "afect" );
	deepEqual( Stem("afectada"), "afect" );
	deepEqual( Stem("afectadas"), "afect" );
	deepEqual( Stem("afectado"), "afect" );
	deepEqual( Stem("afectados"), "afect" );
	deepEqual( Stem("afectan"), "afect" );
	deepEqual( Stem("afectando"), "afect" );
	deepEqual( Stem("afectar"), "afect" );
	deepEqual( Stem("afectará"), "afect" );
	deepEqual( Stem("afectarán"), "afect" );
	deepEqual( Stem("afectaría"), "afect" );
	deepEqual( Stem("afectaron"), "afect" );
	deepEqual( Stem("afectarse"), "afect" );
	deepEqual( Stem("afecte"), "afect" );
	deepEqual( Stem("afectivas"), "afect" );
	deepEqual( Stem("afectivo"), "afect" );
	deepEqual( Stem("afecto"), "afect" );
	deepEqual( Stem("afectó"), "afect" );
	deepEqual( Stem("afectos"), "afect" );
	deepEqual( Stem("afeen"), "afe" );
	deepEqual( Stem("afeitar"), "afeit" );
	deepEqual( Stem("aferrarse"), "aferr" );
	deepEqual( Stem("affaire"), "affair" );
	deepEqual( Stem("afianzadora"), "afianz" );
	deepEqual( Stem("afianzarse"), "afianz" );
	deepEqual( Stem("afición"), "aficion" );
	deepEqual( Stem("aficionadas"), "aficion" );
	deepEqual( Stem("aficionado"), "aficion" );
	deepEqual( Stem("aficionados"), "aficion" );
	deepEqual( Stem("aficiones"), "aficion" );
	deepEqual( Stem("afilada"), "afil" );
	deepEqual( Stem("afiliación"), "afili" );
	deepEqual( Stem("afiliada"), "afili" );
	deepEqual( Stem("afiliadas"), "afili" );
	deepEqual( Stem("afiliado"), "afili" );
	deepEqual( Stem("afiliados"), "afili" );
	deepEqual( Stem("afiliaron"), "afili" );
	deepEqual( Stem("afín"), "afin" );
	deepEqual( Stem("afinación"), "afin" );
	deepEqual( Stem("afinaciones"), "afin" );
	deepEqual( Stem("afinando"), "afin" );
	deepEqual( Stem("afinar"), "afin" );
	deepEqual( Stem("afines"), "afin" );
	deepEqual( Stem("afinidad"), "afin" );
	deepEqual( Stem("afinidades"), "afin" );
	deepEqual( Stem("afinó"), "afin" );
	deepEqual( Stem("afirma"), "afirm" );
	deepEqual( Stem("afirmación"), "afirm" );
	deepEqual( Stem("afirmaciones"), "afirm" );
	deepEqual( Stem("afirmado"), "afirm" );
	deepEqual( Stem("afirman"), "afirm" );
	deepEqual( Stem("afirmando"), "afirm" );
	deepEqual( Stem("afirmar"), "afirm" );
	deepEqual( Stem("afirmaron"), "afirm" );
	deepEqual( Stem("afirmativa"), "afirm" );
	deepEqual( Stem("afirmó"), "afirm" );
	deepEqual( Stem("afl"), "afl" );
	deepEqual( Stem("aflicción"), "afliccion" );
	deepEqual( Stem("afligida"), "aflig" );
	deepEqual( Stem("afligido"), "aflig" );
	deepEqual( Stem("afloja"), "afloj" );
	deepEqual( Stem("aflojadas"), "afloj" );
	deepEqual( Stem("aflojamos"), "afloj" );
	deepEqual( Stem("aflojar"), "afloj" );
	deepEqual( Stem("aflora"), "aflor" );
	deepEqual( Stem("afluencia"), "afluenci" );
	deepEqual( Stem("aforismo"), "afor" );
	deepEqual( Stem("afortunada"), "afortun" );
	deepEqual( Stem("afortunadamente"), "afortun" );
	deepEqual( Stem("afortunado"), "afortun" );
	deepEqual( Stem("afp"), "afp" );
	deepEqual( Stem("afrenta"), "afrent" );
	deepEqual( Stem("africa"), "afric" );
	deepEqual( Stem("africano"), "african" );
	deepEqual( Stem("africanos"), "african" );
	deepEqual( Stem("afro"), "afro" );
	deepEqual( Stem("afroamericanos"), "afroamerican" );
	deepEqual( Stem("afrobrasileño"), "afrobrasileñ" );
	deepEqual( Stem("afrobrasileños"), "afrobrasileñ" );
	deepEqual( Stem("afrodisiaco"), "afrodisiac" );
	deepEqual( Stem("afrodisiacos"), "afrodisiac" );
	deepEqual( Stem("afrodisio"), "afrodisi" );
	deepEqual( Stem("afrontar"), "afront" );
	deepEqual( Stem("afrontará"), "afront" );
	deepEqual( Stem("afrontaron"), "afront" );
	deepEqual( Stem("afronten"), "afront" );
	deepEqual( Stem("afuera"), "afuer" );
	deepEqual( Stem("afueras"), "afuer" );
	deepEqual( Stem("agachó"), "agach" );
	deepEqual( Stem("agarra"), "agarr" );
	deepEqual( Stem("agarrada"), "agarr" );
	deepEqual( Stem("agarrar"), "agarr" );
	deepEqual( Stem("agarraron"), "agarr" );
	deepEqual( Stem("agarre"), "agarr" );
	deepEqual( Stem("agárrese"), "agarres" );
	deepEqual( Stem("age"), "age" );
	deepEqual( Stem("agencia"), "agenci" );
	deepEqual( Stem("agenciaron"), "agenci" );
	deepEqual( Stem("agencias"), "agenci" );
	deepEqual( Stem("agenda"), "agend" );
	deepEqual( Stem("agendas"), "agend" );
	deepEqual( Stem("agenl"), "agenl" );
	deepEqual( Stem("agente"), "agent" );
	deepEqual( Stem("agentes"), "agent" );
	deepEqual( Stem("ágil"), "agil" );
	deepEqual( Stem("agilidad"), "agil" );
	deepEqual( Stem("agilización"), "agiliz" );
	deepEqual( Stem("agilizando"), "agiliz" );
	deepEqual( Stem("agilizar"), "agiliz" );
	deepEqual( Stem("agilizara"), "agiliz" );
	deepEqual( Stem("agilizará"), "agiliz" );
	deepEqual( Stem("agio"), "agi" );
	deepEqual( Stem("agiotistas"), "agiot" );
	deepEqual( Stem("agitación"), "agit" );
	deepEqual( Stem("agitadas"), "agit" );
	deepEqual( Stem("agitadores"), "agit" );
	deepEqual( Stem("agitando"), "agit" );
	deepEqual( Stem("aglomeraciones"), "aglomer" );
	deepEqual( Stem("aglutina"), "aglutin" );
	deepEqual( Stem("aglutinar"), "aglutin" );
	deepEqual( Stem("agobiado"), "agobi" );
	deepEqual( Stem("agonía"), "agon" );
	deepEqual( Stem("agonizante"), "agoniz" );
	deepEqual( Stem("agora"), "agor" );
	deepEqual( Stem("agosto"), "agost" );
	deepEqual( Stem("agotadas"), "agot" );
	deepEqual( Stem("agotado"), "agot" );
	deepEqual( Stem("agotamiento"), "agot" );
	deepEqual( Stem("agotándolos"), "agot" );
	deepEqual( Stem("agotaron"), "agot" );
	deepEqual( Stem("agotarse"), "agot" );
	deepEqual( Stem("agote"), "agot" );
	deepEqual( Stem("agraciado"), "agraci" );
	deepEqual( Stem("agrada"), "agrad" );
	deepEqual( Stem("agradable"), "agrad" );
	deepEqual( Stem("agradece"), "agradec" );
	deepEqual( Stem("agradecemos"), "agradec" );
	deepEqual( Stem("agradecer"), "agradec" );
	deepEqual( Stem("agradecerán"), "agradec" );
	deepEqual( Stem("agradecería"), "agradec" );
	deepEqual( Stem("agradeciendo"), "agradec" );
	deepEqual( Stem("agradecieron"), "agradec" );
	deepEqual( Stem("agradecimiento"), "agradec" );
	deepEqual( Stem("agradeció"), "agradec" );
	deepEqual( Stem("agradezco"), "agradezc" );
	deepEqual( Stem("agrado"), "agrad" );
	deepEqual( Stem("agramón"), "agramon" );
	deepEqual( Stem("agrandar"), "agrand" );
	deepEqual( Stem("agrandarla"), "agrand" );
	deepEqual( Stem("agraria"), "agrari" );
	deepEqual( Stem("agrario"), "agrari" );
	deepEqual( Stem("agraristas"), "agrar" );
	deepEqual( Stem("agrava"), "agrav" );
	deepEqual( Stem("agravación"), "agrav" );
	deepEqual( Stem("agravado"), "agrav" );
	deepEqual( Stem("agravaron"), "agrav" );
	deepEqual( Stem("agraviado"), "agravi" );
	deepEqual( Stem("agravios"), "agravi" );
	deepEqual( Stem("agredido"), "agred" );
	deepEqual( Stem("agredidos"), "agred" );
	deepEqual( Stem("agredieron"), "agred" );
	deepEqual( Stem("agrega"), "agreg" );
	deepEqual( Stem("agregada"), "agreg" );
	deepEqual( Stem("agregado"), "agreg" );
	deepEqual( Stem("agregaduría"), "agregadur" );
	deepEqual( Stem("agregan"), "agreg" );
	deepEqual( Stem("agregando"), "agreg" );
	deepEqual( Stem("agregar"), "agreg" );
	deepEqual( Stem("agregaron"), "agreg" );
	deepEqual( Stem("agregarse"), "agreg" );
	deepEqual( Stem("agrego"), "agreg" );
	deepEqual( Stem("agregó"), "agreg" );
	deepEqual( Stem("agréguele"), "agreguel" );
	deepEqual( Stem("agremiada"), "agremi" );
	deepEqual( Stem("agremiados"), "agremi" );
	deepEqual( Stem("agresión"), "agresion" );
	deepEqual( Stem("agresiones"), "agresion" );
	deepEqual( Stem("agresiva"), "agres" );
	deepEqual( Stem("agresivamente"), "agres" );
	deepEqual( Stem("agresivas"), "agres" );
	deepEqual( Stem("agresividad"), "agres" );
	deepEqual( Stem("agresivo"), "agres" );
	deepEqual( Stem("agresivos"), "agres" );
	deepEqual( Stem("agresor"), "agresor" );
	deepEqual( Stem("agresores"), "agresor" );
	deepEqual( Stem("agrícola"), "agricol" );
	deepEqual( Stem("agrícolas"), "agricol" );
	deepEqual( Stem("agricultores"), "agricultor" );
	deepEqual( Stem("agricultura"), "agricultur" );
	deepEqual( Stem("agridyne"), "agridyn" );
	deepEqual( Stem("agrio"), "agri" );
	deepEqual( Stem("agro"), "agro" );
	deepEqual( Stem("agropecuaria"), "agropecuari" );
	deepEqual( Stem("agropecuario"), "agropecuari" );
	deepEqual( Stem("agropecuarios"), "agropecuari" );
	deepEqual( Stem("agroquímico"), "agroquim" );
	deepEqual( Stem("agroquímicos"), "agroquim" );
	deepEqual( Stem("agrupa"), "agrup" );
	deepEqual( Stem("agrupación"), "agrup" );
	deepEqual( Stem("agrupaciones"), "agrup" );
	deepEqual( Stem("agrupadas"), "agrup" );
	deepEqual( Stem("agrupamiento"), "agrup" );
	deepEqual( Stem("agrupar"), "agrup" );
	deepEqual( Stem("agua"), "agu" );
	deepEqual( Stem("aguacate"), "aguacat" );
	deepEqual( Stem("aguacates"), "aguacat" );
	deepEqual( Stem("agualeguas"), "agualegu" );
	deepEqual( Stem("aguanta"), "aguant" );
	deepEqual( Stem("aguantar"), "aguant" );
	deepEqual( Stem("aguantarse"), "aguant" );
	deepEqual( Stem("aguantó"), "aguant" );
	deepEqual( Stem("aguardaba"), "aguard" );
	deepEqual( Stem("aguardaban"), "aguard" );
	deepEqual( Stem("aguardan"), "aguard" );
	deepEqual( Stem("aguas"), "agu" );
	deepEqual( Stem("aguascalientes"), "aguascalient" );
	deepEqual( Stem("aguaytía"), "aguayt" );
	deepEqual( Stem("aguda"), "agud" );
	deepEqual( Stem("agudas"), "agud" );
	deepEqual( Stem("agudiza"), "agudiz" );
	deepEqual( Stem("agudizado"), "agudiz" );
	deepEqual( Stem("agudo"), "agud" );
	deepEqual( Stem("agudos"), "agud" );
	deepEqual( Stem("aguila"), "aguil" );
	deepEqual( Stem("águila"), "aguil" );
	deepEqual( Stem("aguilar"), "aguil" );
	deepEqual( Stem("aguilas"), "aguil" );
	deepEqual( Stem("aguilera"), "aguiler" );
	deepEqual( Stem("aguinaldo"), "aguinald" );
	deepEqual( Stem("aguirre"), "aguirr" );
	deepEqual( Stem("agüites"), "agüit" );
	deepEqual( Stem("aguja"), "aguj" );
	deepEqual( Stem("agujeros"), "agujer" );
	deepEqual( Stem("agujetas"), "agujet" );
	deepEqual( Stem("agustín"), "agustin" );
	deepEqual( Stem("agusto"), "agust" );
	deepEqual( Stem("ah"), "ah" );
	deepEqual( Stem("ahí"), "ahi" );
	deepEqual( Stem("ahmsa"), "ahmsa" );
	deepEqual( Stem("ahogados"), "ahog" );
	deepEqual( Stem("ahogando"), "ahog" );
	deepEqual( Stem("ahogaron"), "ahog" );
	deepEqual( Stem("ahondando"), "ahond" );
	deepEqual( Stem("ahondar"), "ahond" );
	deepEqual( Stem("ahora"), "ahor" );
	deepEqual( Stem("ahorita"), "ahorit" );
	deepEqual( Stem("ahorra"), "ahorr" );
	deepEqual( Stem("ahorrado"), "ahorr" );
	deepEqual( Stem("ahorrador"), "ahorr" );
	deepEqual( Stem("ahorradores"), "ahorr" );
	deepEqual( Stem("ahorramos"), "ahorr" );
	deepEqual( Stem("ahorrar"), "ahorr" );
	deepEqual( Stem("ahorrará"), "ahorr" );
	deepEqual( Stem("ahorrarán"), "ahorr" );
	deepEqual( Stem("ahorraron"), "ahorr" );
	deepEqual( Stem("ahorrativa"), "ahorr" );
	deepEqual( Stem("ahorrativo"), "ahorr" );
	deepEqual( Stem("ahorro"), "ahorr" );
	deepEqual( Stem("ahorros"), "ahorr" );
	deepEqual( Stem("ahuehuete"), "ahuehuet" );
	deepEqual( Stem("ahujas"), "ahuj" );
	deepEqual( Stem("ahuyenta"), "ahuyent" );
	deepEqual( Stem("aída"), "aid" );
	deepEqual( Stem("aikman"), "aikm" );
	deepEqual( Stem("air"), "air" );
	deepEqual( Stem("airadamente"), "airad" );
	deepEqual( Stem("airbus"), "airbus" );
	deepEqual( Stem("aire"), "air" );
	deepEqual( Stem("airecombustible"), "airecombust" );
	deepEqual( Stem("aires"), "air" );
	deepEqual( Stem("airways"), "airways" );
	deepEqual( Stem("ais"), "ais" );
	deepEqual( Stem("aislacionismo"), "aislacion" );
	deepEqual( Stem("aislada"), "aisl" );
	deepEqual( Stem("aisladas"), "aisl" );
	deepEqual( Stem("aislados"), "aisl" );
	deepEqual( Stem("aislamiento"), "aislamient" );
	deepEqual( Stem("aislarla"), "aisl" );
	deepEqual( Stem("aislarlo"), "aisl" );
	deepEqual( Stem("aispuro"), "aispur" );
	deepEqual( Stem("aiv"), "aiv" );
	deepEqual( Stem("aix"), "aix" );
	deepEqual( Stem("ajalpan"), "ajalp" );
	deepEqual( Stem("ajena"), "ajen" );
	deepEqual( Stem("ajenas"), "ajen" );
	deepEqual( Stem("ajeno"), "ajen" );
	deepEqual( Stem("ajenos"), "ajen" );
	deepEqual( Stem("ajusco"), "ajusc" );
	deepEqual( Stem("ajusta"), "ajust" );
	deepEqual( Stem("ajustados"), "ajust" );
	deepEqual( Stem("ajustan"), "ajust" );
	deepEqual( Stem("ajustando"), "ajust" );
	deepEqual( Stem("ajustándolo"), "ajust" );
	deepEqual( Stem("ajustar"), "ajust" );
	deepEqual( Stem("ajustarse"), "ajust" );
	deepEqual( Stem("ajuste"), "ajust" );
	deepEqual( Stem("ajustes"), "ajust" );
	deepEqual( Stem("ajusticiado"), "ajustici" );
	deepEqual( Stem("ak"), "ak" );
	deepEqual( Stem("akita"), "akit" );
	deepEqual( Stem("al"), "al" );
	deepEqual( Stem("ala"), "ala" );
	deepEqual( Stem("alababa"), "alab" );
	deepEqual( Stem("alabanza"), "alab" );
	deepEqual( Stem("alabarderos"), "alabarder" );
	deepEqual( Stem("alabó"), "alab" );
	deepEqual( Stem("aladino"), "aladin" );
	deepEqual( Stem("aladro"), "aladr" );
	deepEqual( Stem("alain"), "alain" );
	deepEqual( Stem("alambre"), "alambr" );
	deepEqual( Stem("alameda"), "alamed" );
	deepEqual( Stem("alamo"), "alam" );
	deepEqual( Stem("alamos"), "alam" );
	deepEqual( Stem("alan"), "alan" );
	deepEqual( Stem("alanís"), "alan" );
	deepEqual( Stem("alarcón"), "alarcon" );
	deepEqual( Stem("alargadas"), "alarg" );
	deepEqual( Stem("alargar"), "alarg" );
	deepEqual( Stem("alarido"), "alar" );
	deepEqual( Stem("alarma"), "alarm" );
	deepEqual( Stem("alarmado"), "alarm" );
	deepEqual( Stem("alarmados"), "alarm" );
	deepEqual( Stem("alarmante"), "alarm" );
	deepEqual( Stem("alarmaron"), "alarm" );
	deepEqual( Stem("alarme"), "alarm" );
	deepEqual( Stem("alarmismo"), "alarm" );
	deepEqual( Stem("alarmó"), "alarm" );
	deepEqual( Stem("alaska"), "alask" );
	deepEqual( Stem("alatriste"), "alatr" );
	deepEqual( Stem("alavez"), "alavez" );
	deepEqual( Stem("alba"), "alba" );
	deepEqual( Stem("albacete"), "albacet" );
	deepEqual( Stem("albán"), "alban" );
	deepEqual( Stem("albañil"), "albañil" );
	deepEqual( Stem("albañiles"), "albañil" );
	deepEqual( Stem("albay"), "albay" );
	deepEqual( Stem("albee"), "albe" );
	deepEqual( Stem("alberca"), "alberc" );
	deepEqual( Stem("alberga"), "alberg" );
	deepEqual( Stem("albergar"), "alberg" );
	deepEqual( Stem("albergará"), "alberg" );
	deepEqual( Stem("albergue"), "alberg" );
	deepEqual( Stem("albergues"), "alberg" );
	deepEqual( Stem("albert"), "albert" );
	deepEqual( Stem("alberto"), "albert" );
	deepEqual( Stem("albiazul"), "albiazul" );
	deepEqual( Stem("albiazules"), "albiazul" );
	deepEqual( Stem("albiceleste"), "albicelest" );
	deepEqual( Stem("alborotada"), "alborot" );
	deepEqual( Stem("alboroto"), "alborot" );
	deepEqual( Stem("alborotos"), "alborot" );
	deepEqual( Stem("album"), "album" );
	deepEqual( Stem("álbum"), "album" );
	deepEqual( Stem("albur"), "albur" );
	deepEqual( Stem("alcachofa"), "alcachof" );
	deepEqual( Stem("alcalá"), "alcal" );
	deepEqual( Stem("alcalde"), "alcald" );
	deepEqual( Stem("alcaldes"), "alcald" );
	deepEqual( Stem("alcaldesa"), "alcaldes" );
	deepEqual( Stem("alcaldía"), "alcald" );
	deepEqual( Stem("alcaldías"), "alcald" );
	deepEqual( Stem("alcalinidad"), "alcalin" );
	deepEqual( Stem("alcalinos"), "alcalin" );
	deepEqual( Stem("alcance"), "alcanc" );
	deepEqual( Stem("alcancé"), "alcanc" );
	deepEqual( Stem("alcancemos"), "alcanc" );
	deepEqual( Stem("alcancen"), "alcanc" );
	deepEqual( Stem("alcances"), "alcanc" );
	deepEqual( Stem("alcántara"), "alcant" );
	deepEqual( Stem("alcantarilla"), "alcantarill" );
	deepEqual( Stem("alcantarillado"), "alcantarill" );
	deepEqual( Stem("alcanza"), "alcanz" );
	deepEqual( Stem("alcanzaba"), "alcanz" );
	deepEqual( Stem("alcanzaban"), "alcanz" );
	deepEqual( Stem("alcanzada"), "alcanz" );
	deepEqual( Stem("alcanzado"), "alcanz" );
	deepEqual( Stem("alcanzados"), "alcanz" );
	deepEqual( Stem("alcanzan"), "alcanz" );
	deepEqual( Stem("alcanzando"), "alcanz" );
	deepEqual( Stem("alcanzar"), "alcanz" );
	deepEqual( Stem("alcanzara"), "alcanz" );
	deepEqual( Stem("alcanzará"), "alcanz" );
	deepEqual( Stem("alcanzaré"), "alcanz" );
	deepEqual( Stem("alcanzaremos"), "alcanz" );
	deepEqual( Stem("alcanzaría"), "alcanz" );
	deepEqual( Stem("alcanzarlos"), "alcanz" );
	deepEqual( Stem("alcanzaron"), "alcanz" );
	deepEqual( Stem("alcanzó"), "alcanz" );
	deepEqual( Stem("alcerreza"), "alcerrez" );
	deepEqual( Stem("alcocer"), "alcoc" );
	deepEqual( Stem("alcohol"), "alcohol" );
	deepEqual( Stem("alcoholicas"), "alcohol" );
	deepEqual( Stem("aldape"), "aldap" );
	deepEqual( Stem("aldea"), "alde" );
	deepEqual( Stem("aldeas"), "alde" );
	deepEqual( Stem("aledañas"), "aledañ" );
	deepEqual( Stem("alega"), "aleg" );
	deepEqual( Stem("alegando"), "aleg" );
	deepEqual( Stem("alegar"), "aleg" );
	deepEqual( Stem("alegara"), "aleg" );
	deepEqual( Stem("alegaron"), "aleg" );
	deepEqual( Stem("alegatos"), "alegat" );
	deepEqual( Stem("alegó"), "aleg" );
	deepEqual( Stem("alegoría"), "alegor" );
	deepEqual( Stem("alegórico"), "alegor" );
	deepEqual( Stem("alegóricos"), "alegor" );
	deepEqual( Stem("alegraron"), "alegr" );
	deepEqual( Stem("alegre"), "alegr" );
	deepEqual( Stem("alegremente"), "alegr" );
	deepEqual( Stem("alegría"), "alegr" );
	deepEqual( Stem("alegró"), "alegr" );
	deepEqual( Stem("aleja"), "alej" );
	deepEqual( Stem("alejaban"), "alej" );
	deepEqual( Stem("alejado"), "alej" );
	deepEqual( Stem("alejamiento"), "alej" );
	deepEqual( Stem("alejándonos"), "alej" );
	deepEqual( Stem("alejándose"), "alej" );
	deepEqual( Stem("alejandra"), "alejandr" );
	deepEqual( Stem("alejandro"), "alejandr" );
	deepEqual( Stem("alejar"), "alej" );
	deepEqual( Stem("alejara"), "alej" );
	deepEqual( Stem("alejaron"), "alej" );
	deepEqual( Stem("alejo"), "alej" );
	deepEqual( Stem("alejó"), "alej" );
	deepEqual( Stem("alemán"), "aleman" );
	deepEqual( Stem("alemana"), "aleman" );
	deepEqual( Stem("alemanas"), "aleman" );
	deepEqual( Stem("alemanes"), "aleman" );
	deepEqual( Stem("alemania"), "alemani" );
	deepEqual( Stem("alenia"), "aleni" );
	deepEqual( Stem("alentador"), "alent" );
	deepEqual( Stem("alentadora"), "alent" );
	deepEqual( Stem("alentadores"), "alent" );
	deepEqual( Stem("alentar"), "alent" );
	deepEqual( Stem("alentó"), "alent" );
	deepEqual( Stem("alergia"), "alergi" );
	deepEqual( Stem("alergología"), "alergolog" );
	deepEqual( Stem("alerta"), "alert" );
	deepEqual( Stem("alertado"), "alert" );
	deepEqual( Stem("alerten"), "alert" );
	deepEqual( Stem("alessio"), "alessi" );
	deepEqual( Stem("alex"), "alex" );
	deepEqual( Stem("alexander"), "alexand" );
	deepEqual( Stem("alexandr"), "alexandr" );
	deepEqual( Stem("alexis"), "alexis" );
	deepEqual( Stem("alfa"), "alfa" );
	deepEqual( Stem("alfabético"), "alfabet" );
	deepEqual( Stem("alfarería"), "alfar" );
	deepEqual( Stem("alfaro"), "alfar" );
	deepEqual( Stem("alfilerazos"), "alfileraz" );
	deepEqual( Stem("alfio"), "alfi" );
	deepEqual( Stem("alfombra"), "alfombr" );
	deepEqual( Stem("alfonso"), "alfons" );
	deepEqual( Stem("alfred"), "alfred" );
	deepEqual( Stem("alfredo"), "alfred" );
	deepEqual( Stem("algas"), "algas" );
	deepEqual( Stem("algebra"), "algebr" );
	deepEqual( Stem("álgebra"), "algebr" );
	deepEqual( Stem("algo"), "algo" );
	deepEqual( Stem("algodón"), "algodon" );
	deepEqual( Stem("alguien"), "algui" );
	deepEqual( Stem("algún"), "algun" );
	deepEqual( Stem("alguna"), "algun" );
	deepEqual( Stem("algunas"), "algun" );
	deepEqual( Stem("alguno"), "algun" );
	deepEqual( Stem("algunos"), "algun" );
	deepEqual( Stem("ali"), "ali" );
	deepEqual( Stem("aliada"), "ali" );
	deepEqual( Stem("aliadas"), "ali" );
	deepEqual( Stem("aliado"), "ali" );
	deepEqual( Stem("aliados"), "ali" );
	deepEqual( Stem("aliándose"), "ali" );
	deepEqual( Stem("alianza"), "alianz" );
	deepEqual( Stem("alianzas"), "alianz" );
	deepEqual( Stem("aliar"), "ali" );
	deepEqual( Stem("aliaron"), "ali" );
	deepEqual( Stem("aliarse"), "ali" );
	deepEqual( Stem("alice"), "alic" );
	deepEqual( Stem("alicea"), "alice" );
	deepEqual( Stem("alicia"), "alici" );
	deepEqual( Stem("aliemos"), "ali" );
	deepEqual( Stem("alienta"), "alient" );
	deepEqual( Stem("alientan"), "alient" );
	deepEqual( Stem("aliento"), "alient" );
	deepEqual( Stem("alientos"), "alient" );
	deepEqual( Stem("aligerar"), "aliger" );
	deepEqual( Stem("aligerarla"), "aliger" );
	deepEqual( Stem("alija"), "alij" );
	deepEqual( Stem("alimañas"), "alimañ" );
	deepEqual( Stem("alimentación"), "aliment" );
	deepEqual( Stem("alimentada"), "aliment" );
	deepEqual( Stem("alimentado"), "aliment" );
	deepEqual( Stem("alimentador"), "aliment" );
	deepEqual( Stem("alimentadores"), "aliment" );
	deepEqual( Stem("alimentar"), "aliment" );
	deepEqual( Stem("alimenticia"), "alimentici" );
	deepEqual( Stem("alimenticio"), "alimentici" );
	deepEqual( Stem("alimenticios"), "alimentici" );
	deepEqual( Stem("alimento"), "aliment" );
	deepEqual( Stem("alimentó"), "aliment" );
	deepEqual( Stem("alimentos"), "aliment" );
	deepEqual( Stem("alineacion"), "alineacion" );
	deepEqual( Stem("alineación"), "alin" );
	deepEqual( Stem("alineaciones"), "alin" );
	deepEqual( Stem("alineado"), "alin" );
	deepEqual( Stem("alineó"), "aline" );
	deepEqual( Stem("alistan"), "alist" );
	deepEqual( Stem("aliuska"), "aliusk" );
	deepEqual( Stem("aliviar"), "alivi" );
	deepEqual( Stem("aliviará"), "alivi" );
	deepEqual( Stem("aliviaría"), "alivi" );
	deepEqual( Stem("alivio"), "alivi" );
	deepEqual( Stem("aljibes"), "aljib" );
	deepEqual( Stem("alla"), "alla" );
	deepEqual( Stem("allá"), "alla" );
	deepEqual( Stem("allegadas"), "alleg" );
	deepEqual( Stem("allegado"), "alleg" );
	deepEqual( Stem("allegados"), "alleg" );
	deepEqual( Stem("allegar"), "alleg" );
	deepEqual( Stem("allegarle"), "alleg" );
	deepEqual( Stem("allegarles"), "alleg" );
	deepEqual( Stem("allegarse"), "alleg" );
	deepEqual( Stem("allende"), "allend" );
	deepEqual( Stem("allí"), "alli" );
	deepEqual( Stem("alma"), "alma" );
	deepEqual( Stem("almacena"), "almacen" );
	deepEqual( Stem("almacenada"), "almacen" );
	deepEqual( Stem("almacenadora"), "almacen" );
	deepEqual( Stem("almacenaje"), "almacenaj" );
	deepEqual( Stem("almacenamiento"), "almacen" );
	deepEqual( Stem("almacenar"), "almacen" );
	deepEqual( Stem("almacene"), "almacen" );
	deepEqual( Stem("almacenes"), "almacen" );
	deepEqual( Stem("almaguer"), "almagu" );
	deepEqual( Stem("almaraz"), "almaraz" );
	deepEqual( Stem("almas"), "almas" );
	deepEqual( Stem("almohada"), "almoh" );
	deepEqual( Stem("almonte"), "almont" );
	deepEqual( Stem("almorzar"), "almorz" );
	deepEqual( Stem("almorzase"), "almorz" );
	deepEqual( Stem("almuerzo"), "almuerz" );
	deepEqual( Stem("almuerzos"), "almuerz" );
	deepEqual( Stem("alonso"), "alons" );
	deepEqual( Stem("alpargatado"), "alpargat" );
	deepEqual( Stem("alquibenceno"), "alquibencen" );
	deepEqual( Stem("alquilado"), "alquil" );
	deepEqual( Stem("alquiler"), "alquil" );
	deepEqual( Stem("alquimia"), "alquimi" );
	deepEqual( Stem("alrededor"), "alrededor" );
	deepEqual( Stem("alrededores"), "alrededor" );
	deepEqual( Stem("alta"), "alta" );
	deepEqual( Stem("altadena"), "altaden" );
	deepEqual( Stem("altamente"), "alt" );
	deepEqual( Stem("altamira"), "altamir" );
	deepEqual( Stem("altamirano"), "altamiran" );
	deepEqual( Stem("altas"), "altas" );
	deepEqual( Stem("altavista"), "altav" );
	deepEqual( Stem("altera"), "alter" );
	deepEqual( Stem("alteración"), "alter" );
	deepEqual( Stem("alteraciones"), "alter" );
	deepEqual( Stem("alterado"), "alter" );
	deepEqual( Stem("alterados"), "alter" );
	deepEqual( Stem("alterar"), "alter" );
	deepEqual( Stem("alterarán"), "alter" );
	deepEqual( Stem("alteraron"), "alter" );
	deepEqual( Stem("alterarse"), "alter" );
	deepEqual( Stem("altercado"), "alterc" );
	deepEqual( Stem("altere"), "alter" );
	deepEqual( Stem("alterna"), "altern" );
	deepEqual( Stem("alternando"), "altern" );
	deepEqual( Stem("alternar"), "altern" );
	deepEqual( Stem("alternará"), "altern" );
	deepEqual( Stem("alternativa"), "altern" );
	deepEqual( Stem("alternativas"), "altern" );
	deepEqual( Stem("alternó"), "altern" );
	deepEqual( Stem("altibajos"), "altibaj" );
	deepEqual( Stem("altímetro"), "altimetr" );
	deepEqual( Stem("altiplano"), "altiplan" );
	deepEqual( Stem("altísimos"), "altis" );
	deepEqual( Stem("altisonantes"), "altison" );
	deepEqual( Stem("altitud"), "altitud" );
	deepEqual( Stem("alto"), "alto" );
	deepEqual( Stem("altos"), "altos" );
	deepEqual( Stem("altruista"), "altruist" );
	deepEqual( Stem("altura"), "altur" );
	deepEqual( Stem("alturas"), "altur" );
	deepEqual( Stem("alud"), "alud" );
	deepEqual( Stem("aludir"), "alud" );
	deepEqual( Stem("alumbraba"), "alumbr" );
	deepEqual( Stem("alumbraban"), "alumbr" );
	deepEqual( Stem("alumbrado"), "alumbr" );
	deepEqual( Stem("alumbró"), "alumbr" );
	deepEqual( Stem("aluminio"), "alumini" );
	deepEqual( Stem("alumna"), "alumn" );
	deepEqual( Stem("alumnado"), "alumn" );
	deepEqual( Stem("alumnas"), "alumn" );
	deepEqual( Stem("alumno"), "alumn" );
	deepEqual( Stem("alumnos"), "alumn" );
	deepEqual( Stem("aluncinógenos"), "aluncinogen" );
	deepEqual( Stem("alusión"), "alusion" );
	deepEqual( Stem("alusiva"), "alus" );
	deepEqual( Stem("alvarado"), "alvar" );
	deepEqual( Stem("alvarez"), "alvarez" );
	deepEqual( Stem("alvaro"), "alvar" );
	deepEqual( Stem("alvelais"), "alvelais" );
	deepEqual( Stem("alvez"), "alvez" );
	deepEqual( Stem("alza"), "alza" );
	deepEqual( Stem("alzados"), "alzad" );
	deepEqual( Stem("alzamiento"), "alzamient" );
	deepEqual( Stem("alzas"), "alzas" );
	deepEqual( Stem("alzheimer"), "alzheim" );
	deepEqual( Stem("alzo"), "alzo" );
	deepEqual( Stem("am"), "am" );
	deepEqual( Stem("ama"), "ama" );
	deepEqual( Stem("amaba"), "amab" );
	deepEqual( Stem("amaban"), "amab" );
	deepEqual( Stem("amabilidad"), "amabil" );
	deepEqual( Stem("amable"), "amabl" );
	deepEqual( Stem("amablemente"), "amabl" );
	deepEqual( Stem("amables"), "amabl" );
	deepEqual( Stem("amadeo"), "amade" );
	deepEqual( Stem("amado"), "amad" );
	deepEqual( Stem("amador"), "amador" );
	deepEqual( Stem("amagaron"), "amag" );
	deepEqual( Stem("amagó"), "amag" );
	deepEqual( Stem("amamos"), "amam" );
	deepEqual( Stem("amanda"), "amand" );
	deepEqual( Stem("amando"), "amand" );
	deepEqual( Stem("amanece"), "amanec" );
	deepEqual( Stem("amanecer"), "amanec" );
	deepEqual( Stem("amante"), "amant" );
	deepEqual( Stem("amantes"), "amant" );
	deepEqual( Stem("amanuense"), "amanuens" );
	deepEqual( Stem("amapola"), "amapol" );
	deepEqual( Stem("amar"), "amar" );
	deepEqual( Stem("amaré"), "amar" );
	deepEqual( Stem("amarga"), "amarg" );
	deepEqual( Stem("amargarnos"), "amarg" );
	deepEqual( Stem("amargas"), "amarg" );
	deepEqual( Stem("amargos"), "amarg" );
	deepEqual( Stem("amarilla"), "amarill" );
	deepEqual( Stem("amarillas"), "amarill" );
	deepEqual( Stem("amarillo"), "amarill" );
	deepEqual( Stem("amarillos"), "amarill" );
	deepEqual( Stem("amarme"), "amarm" );
	deepEqual( Stem("amaro"), "amar" );
	deepEqual( Stem("amarrado"), "amarr" );
	deepEqual( Stem("amarrando"), "amarr" );
	deepEqual( Stem("amarren"), "amarr" );
	deepEqual( Stem("amarres"), "amarr" );
	deepEqual( Stem("amarró"), "amarr" );
	deepEqual( Stem("amaru"), "amaru" );
	deepEqual( Stem("amas"), "amas" );
	deepEqual( Stem("amasando"), "amas" );
	deepEqual( Stem("amateur"), "amateur" );
	deepEqual( Stem("amateurs"), "amateurs" );
	deepEqual( Stem("amatista"), "amat" );
	deepEqual( Stem("amatistas"), "amat" );
	deepEqual( Stem("amatorias"), "amatori" );
	deepEqual( Stem("ambas"), "ambas" );
	deepEqual( Stem("ambassador"), "ambass" );
	deepEqual( Stem("ambición"), "ambicion" );
	deepEqual( Stem("ambicionan"), "ambicion" );
	deepEqual( Stem("ambiciosa"), "ambici" );
	deepEqual( Stem("ambicioso"), "ambici" );
	deepEqual( Stem("ambiciosos"), "ambici" );
	deepEqual( Stem("ambientación"), "ambient" );
	deepEqual( Stem("ambiental"), "ambiental" );
	deepEqual( Stem("ambientales"), "ambiental" );
	deepEqual( Stem("ambientalista"), "ambiental" );
	deepEqual( Stem("ambientalistas"), "ambiental" );
	deepEqual( Stem("ambientalmente"), "ambiental" );
	deepEqual( Stem("ambientar"), "ambient" );
	deepEqual( Stem("ambiente"), "ambient" );
	deepEqual( Stem("ambientes"), "ambient" );
	deepEqual( Stem("ambigüedades"), "ambigüedad" );
	deepEqual( Stem("ámbito"), "ambit" );
	deepEqual( Stem("ámbitos"), "ambit" );
	deepEqual( Stem("ambos"), "ambos" );
	deepEqual( Stem("ambriz"), "ambriz" );
	deepEqual( Stem("ambrose"), "ambros" );
	deepEqual( Stem("ambrosio"), "ambrosi" );
	deepEqual( Stem("ambulancia"), "ambul" );
	deepEqual( Stem("ambulancias"), "ambul" );
	deepEqual( Stem("ambulantes"), "ambul" );
	deepEqual( Stem("ambulatorio"), "ambulatori" );
	deepEqual( Stem("amda"), "amda" );
	deepEqual( Stem("amen"), "amen" );
	deepEqual( Stem("amén"), "amen" );
	deepEqual( Stem("amenace"), "amenac" );
	deepEqual( Stem("amenaqzado"), "amenaqz" );
	deepEqual( Stem("amenaza"), "amenaz" );
	deepEqual( Stem("amenazaba"), "amenaz" );
	deepEqual( Stem("amenazadas"), "amenaz" );
	deepEqual( Stem("amenazado"), "amenaz" );
	deepEqual( Stem("amenazados"), "amenaz" );
	deepEqual( Stem("amenazan"), "amenaz" );
	deepEqual( Stem("amenazando"), "amenaz" );
	deepEqual( Stem("amenazar"), "amenaz" );
	deepEqual( Stem("amenazará"), "amenaz" );
	deepEqual( Stem("amenazaron"), "amenaz" );
	deepEqual( Stem("amenazas"), "amenaz" );
	deepEqual( Stem("amenazó"), "amenaz" );
	deepEqual( Stem("amenizador"), "ameniz" );
	deepEqual( Stem("ameno"), "amen" );
	deepEqual( Stem("america"), "amer" );
	deepEqual( Stem("américa"), "amer" );
	deepEqual( Stem("american"), "americ" );
	deepEqual( Stem("americana"), "american" );
	deepEqual( Stem("americanas"), "american" );
	deepEqual( Stem("americanismo"), "american" );
	deepEqual( Stem("americanista"), "american" );
	deepEqual( Stem("americanistas"), "american" );
	deepEqual( Stem("americano"), "american" );
	deepEqual( Stem("americanos"), "american" );
	deepEqual( Stem("américas"), "amer" );
	deepEqual( Stem("américo"), "amer" );
	deepEqual( Stem("amerimex"), "amerimex" );
	deepEqual( Stem("ameritaba"), "amerit" );
	deepEqual( Stem("ames"), "ames" );
	deepEqual( Stem("ametralladoras"), "ametrall" );
	deepEqual( Stem("amga"), "amga" );
	deepEqual( Stem("amieva"), "amiev" );
	deepEqual( Stem("amiga"), "amig" );
	deepEqual( Stem("amigabilidad"), "amig" );
	deepEqual( Stem("amigable"), "amig" );
	deepEqual( Stem("amigas"), "amig" );
	deepEqual( Stem("amigo"), "amig" );
	deepEqual( Stem("amigos"), "amig" );
	deepEqual( Stem("amigote"), "amigot" );
	deepEqual( Stem("amiguismos"), "amigu" );
	deepEqual( Stem("amiguita"), "amiguit" );
	deepEqual( Stem("aminoró"), "aminor" );
	deepEqual( Stem("amistad"), "amist" );
	deepEqual( Stem("amistades"), "amistad" );
	deepEqual( Stem("amistosa"), "amist" );
	deepEqual( Stem("amistosas"), "amist" );
	deepEqual( Stem("amistoso"), "amist" );
	deepEqual( Stem("amistosos"), "amist" );
	deepEqual( Stem("amnistía"), "amnist" );
	deepEqual( Stem("amo"), "amo" );
	deepEqual( Stem("amoldan"), "amold" );
	deepEqual( Stem("amonestaba"), "amonest" );
	deepEqual( Stem("amonestados"), "amonest" );
	deepEqual( Stem("amoniaco"), "amoniac" );
	deepEqual( Stem("amonio"), "amoni" );
	deepEqual( Stem("amontonada"), "amonton" );
	deepEqual( Stem("amor"), "amor" );
	deepEqual( Stem("amores"), "amor" );
	deepEqual( Stem("amoroso"), "amor" );
	deepEqual( Stem("amortiguadores"), "amortigu" );
	deepEqual( Stem("amosca"), "amosc" );
	deepEqual( Stem("amotinados"), "amotin" );
	deepEqual( Stem("amoxcalli"), "amoxcalli" );
	deepEqual( Stem("amp"), "amp" );
	deepEqual( Stem("amparado"), "ampar" );
	deepEqual( Stem("amparar"), "ampar" );
	deepEqual( Stem("ampararnos"), "ampar" );
	deepEqual( Stem("ampare"), "ampar" );
	deepEqual( Stem("amparo"), "ampar" );
	deepEqual( Stem("amparos"), "ampar" );
	deepEqual( Stem("amplia"), "ampli" );
	deepEqual( Stem("amplía"), "ampli" );
	deepEqual( Stem("ampliación"), "ampliacion" );
	deepEqual( Stem("ampliaciones"), "ampliacion" );
	deepEqual( Stem("ampliada"), "ampli" );
	deepEqual( Stem("ampliadas"), "ampli" );
	deepEqual( Stem("ampliado"), "ampli" );
	deepEqual( Stem("ampliados"), "ampli" );
	deepEqual( Stem("ampliamente"), "ampli" );
	deepEqual( Stem("ampliando"), "ampli" );
	deepEqual( Stem("ampliar"), "ampli" );
	deepEqual( Stem("ampliará"), "ampli" );
	deepEqual( Stem("ampliarán"), "ampli" );
	deepEqual( Stem("ampliarla"), "ampli" );
	deepEqual( Stem("ampliarse"), "ampli" );
	deepEqual( Stem("amplias"), "ampli" );
	deepEqual( Stem("amplíe"), "ampli" );
	deepEqual( Stem("amplio"), "ampli" );
	deepEqual( Stem("amplios"), "ampli" );
	deepEqual( Stem("amplitud"), "amplitud" );
	deepEqual( Stem("ampudia"), "ampudi" );
	deepEqual( Stem("amputaron"), "amput" );
	deepEqual( Stem("amueblar"), "amuebl" );
	deepEqual( Stem("amuelan"), "amuel" );
	deepEqual( Stem("an"), "an" );
	deepEqual( Stem("ana"), "ana" );
	deepEqual( Stem("anacaborca"), "anacaborc" );
	deepEqual( Stem("anacrónico"), "anacron" );
	deepEqual( Stem("añade"), "añad" );
	deepEqual( Stem("añadido"), "añad" );
	deepEqual( Stem("añadiendo"), "añad" );
	deepEqual( Stem("añadieron"), "añad" );
	deepEqual( Stem("añadió"), "añad" );
	deepEqual( Stem("anáhuac"), "anahuac" );
	deepEqual( Stem("analfabetas"), "analfabet" );
	deepEqual( Stem("analfabetismo"), "analfabet" );
	deepEqual( Stem("analice"), "analic" );
	deepEqual( Stem("analicen"), "analic" );
	deepEqual( Stem("análisis"), "analisis" );
	deepEqual( Stem("analista"), "anal" );
	deepEqual( Stem("analistas"), "anal" );
	deepEqual( Stem("analiza"), "analiz" );
	deepEqual( Stem("analizadas"), "analiz" );
	deepEqual( Stem("analizado"), "analiz" );
	deepEqual( Stem("analizados"), "analiz" );
	deepEqual( Stem("analizamos"), "analiz" );
	deepEqual( Stem("analizando"), "analiz" );
	deepEqual( Stem("analizándolo"), "analiz" );
	deepEqual( Stem("analizar"), "analiz" );
	deepEqual( Stem("analizará"), "analiz" );
	deepEqual( Stem("analizarán"), "analiz" );
	deepEqual( Stem("analizaría"), "analiz" );
	deepEqual( Stem("analizarla"), "analiz" );
	deepEqual( Stem("analizarlo"), "analiz" );
	deepEqual( Stem("analizaron"), "analiz" );
	deepEqual( Stem("analizarse"), "analiz" );
	deepEqual( Stem("analizó"), "analiz" );
	deepEqual( Stem("análogas"), "analog" );
	deepEqual( Stem("analogías"), "analog" );
	deepEqual( Stem("anamup"), "anamup" );
	deepEqual( Stem("anarquía"), "anarqu" );
	deepEqual( Stem("anatemas"), "anatem" );
	deepEqual( Stem("ancestrales"), "ancestral" );
	deepEqual( Stem("ancestro"), "ancestr" );
	deepEqual( Stem("ancestros"), "ancestr" );
	deepEqual( Stem("ancha"), "ancha" );
	deepEqual( Stem("anchas"), "anchas" );
	deepEqual( Stem("ancho"), "ancho" );
	deepEqual( Stem("anciana"), "ancian" );
	deepEqual( Stem("ancianas"), "ancian" );
	deepEqual( Stem("ancianitos"), "ancianit" );
	deepEqual( Stem("anciano"), "ancian" );
	deepEqual( Stem("ancianos"), "ancian" );
	deepEqual( Stem("ancira"), "ancir" );
	deepEqual( Stem("ancló"), "anclo" );
	deepEqual( Stem("and"), "and" );
	deepEqual( Stem("anda"), "anda" );
	deepEqual( Stem("andaba"), "andab" );
	deepEqual( Stem("andaban"), "andab" );
	deepEqual( Stem("andamos"), "andam" );
	deepEqual( Stem("andan"), "andan" );
	deepEqual( Stem("andar"), "andar" );
	deepEqual( Stem("andaría"), "andar" );
	deepEqual( Stem("ande"), "ande" );
	deepEqual( Stem("andei"), "andei" );
	deepEqual( Stem("anderson"), "anderson" );
	deepEqual( Stem("andes"), "andes" );
	deepEqual( Stem("andina"), "andin" );
	deepEqual( Stem("andino"), "andin" );
	deepEqual( Stem("ando"), "ando" );
	deepEqual( Stem("andrade"), "andrad" );
	deepEqual( Stem("andrea"), "andre" );
	deepEqual( Stem("andres"), "andres" );
	deepEqual( Stem("andrés"), "andres" );
	deepEqual( Stem("andrew"), "andrew" );
	deepEqual( Stem("anduvo"), "anduv" );
	deepEqual( Stem("anécdota"), "anecdot" );
	deepEqual( Stem("anemia"), "anemi" );
	deepEqual( Stem("anémica"), "anem" );
	deepEqual( Stem("anestesia"), "anestesi" );
	deepEqual( Stem("anexada"), "anex" );
	deepEqual( Stem("anexamos"), "anex" );
	deepEqual( Stem("anexas"), "anex" );
	deepEqual( Stem("anexos"), "anex" );
	deepEqual( Stem("anfibios"), "anfibi" );
	deepEqual( Stem("anfisbena"), "anfisben" );
	deepEqual( Stem("anfiteatro"), "anfiteatr" );
	deepEqual( Stem("anfitrión"), "anfitrion" );
	deepEqual( Stem("ánfora"), "anfor" );
	deepEqual( Stem("ánforas"), "anfor" );
	deepEqual( Stem("angel"), "angel" );
	deepEqual( Stem("ángel"), "angel" );
	deepEqual( Stem("angeles"), "angel" );
	deepEqual( Stem("ángeles"), "angel" );
	deepEqual( Stem("angélica"), "angel" );
	deepEqual( Stem("angélicas"), "angel" );
	deepEqual( Stem("angelina"), "angelin" );
	deepEqual( Stem("angelino"), "angelin" );
	deepEqual( Stem("angelito"), "angelit" );
	deepEqual( Stem("angelitos"), "angelit" );
	deepEqual( Stem("angelo"), "angel" );
	deepEqual( Stem("angelus"), "angelus" );
	deepEqual( Stem("angiosperma"), "angiosperm" );
	deepEqual( Stem("angiospermas"), "angiosperm" );
	deepEqual( Stem("anglicana"), "anglican" );
	deepEqual( Stem("anglo"), "anglo" );
	deepEqual( Stem("angola"), "angol" );
	deepEqual( Stem("angoleña"), "angoleñ" );
	deepEqual( Stem("angoleño"), "angoleñ" );
	deepEqual( Stem("angoleños"), "angoleñ" );
	deepEqual( Stem("angongueo"), "angongue" );
	deepEqual( Stem("angostura"), "angostur" );
	deepEqual( Stem("ángulo"), "angul" );
	deepEqual( Stem("angustia"), "angusti" );
	deepEqual( Stem("angustiada"), "angusti" );
	deepEqual( Stem("angustias"), "angusti" );
	deepEqual( Stem("angustió"), "angust" );
	deepEqual( Stem("anhatl"), "anhatl" );
	deepEqual( Stem("anhelado"), "anhel" );
	deepEqual( Stem("anhelo"), "anhel" );
	deepEqual( Stem("anillo"), "anill" );
	deepEqual( Stem("anima"), "anim" );
	deepEqual( Stem("animación"), "anim" );
	deepEqual( Stem("animal"), "animal" );
	deepEqual( Stem("animales"), "animal" );
	deepEqual( Stem("animalización"), "animaliz" );
	deepEqual( Stem("animar"), "anim" );
	deepEqual( Stem("animarán"), "anim" );
	deepEqual( Stem("anímica"), "anim" );
	deepEqual( Stem("anímicamente"), "anim" );
	deepEqual( Stem("ánimo"), "anim" );
	deepEqual( Stem("ánimos"), "anim" );
	deepEqual( Stem("aniversario"), "aniversari" );
	deepEqual( Stem("ann"), "ann" );
	deepEqual( Stem("anna"), "anna" );
	deepEqual( Stem("año"), "año" );
	deepEqual( Stem("anoche"), "anoch" );
	deepEqual( Stem("anochecer"), "anochec" );
	deepEqual( Stem("anonas"), "anon" );
	deepEqual( Stem("anónima"), "anonim" );
	deepEqual( Stem("anónimas"), "anonim" );
	deepEqual( Stem("anonimato"), "anonimat" );
	deepEqual( Stem("anónimo"), "anonim" );
	deepEqual( Stem("anónimos"), "anon" );
	deepEqual( Stem("años"), "años" );
	deepEqual( Stem("añosfueron"), "añosfueron" );
	deepEqual( Stem("anotaba"), "anot" );
	deepEqual( Stem("anotación"), "anot" );
	deepEqual( Stem("anotaciones"), "anot" );
	deepEqual( Stem("anotado"), "anot" );
	deepEqual( Stem("anotados"), "anot" );
	deepEqual( Stem("anotando"), "anot" );
	deepEqual( Stem("anotar"), "anot" );
	deepEqual( Stem("anotaron"), "anot" );
	deepEqual( Stem("anotarse"), "anot" );
	deepEqual( Stem("anote"), "anot" );
	deepEqual( Stem("anoten"), "anot" );
	deepEqual( Stem("anotó"), "anot" );
	deepEqual( Stem("anselmo"), "anselm" );
	deepEqual( Stem("ansias"), "ansi" );
	deepEqual( Stem("ansiedad"), "ansied" );
	deepEqual( Stem("ansioso"), "ansios" );
	deepEqual( Stem("anstee"), "anste" );
	deepEqual( Stem("antad"), "antad" );
	deepEqual( Stem("antaño"), "antañ" );
	deepEqual( Stem("ante"), "ante" );
	deepEqual( Stem("anteayer"), "anteay" );
	deepEqual( Stem("antebrazo"), "antebraz" );
	deepEqual( Stem("antecedente"), "antecedent" );
	deepEqual( Stem("antecedentes"), "antecedent" );
	deepEqual( Stem("antecesores"), "antecesor" );
	deepEqual( Stem("antemano"), "anteman" );
	deepEqual( Stem("anteo"), "ante" );
	deepEqual( Stem("anteojos"), "anteoj" );
	deepEqual( Stem("antepasado"), "antepas" );
	deepEqual( Stem("antepenúltimo"), "antepenultim" );
	deepEqual( Stem("anterior"), "anterior" );
	deepEqual( Stem("anteriores"), "anterior" );
	deepEqual( Stem("anterioridad"), "anterior" );
	deepEqual( Stem("anteriormente"), "anterior" );
	deepEqual( Stem("antes"), "antes" );
	deepEqual( Stem("antesala"), "antesal" );
	deepEqual( Stem("antesalista"), "antesal" );
	deepEqual( Stem("anthony"), "anthony" );
	deepEqual( Stem("anti"), "anti" );
	deepEqual( Stem("antiaéreas"), "antiaer" );
	deepEqual( Stem("anticipaba"), "anticip" );
	deepEqual( Stem("anticipación"), "anticip" );
	deepEqual( Stem("anticipada"), "anticip" );
	deepEqual( Stem("anticipadamente"), "anticip" );
	deepEqual( Stem("anticipadas"), "anticip" );
	deepEqual( Stem("anticipado"), "anticip" );
	deepEqual( Stem("anticipamos"), "anticip" );
	deepEqual( Stem("anticipando"), "anticip" );
	deepEqual( Stem("anticipar"), "anticip" );
	deepEqual( Stem("anticiparon"), "anticip" );
	deepEqual( Stem("anticipos"), "anticip" );
	deepEqual( Stem("anticonstitucional"), "anticonstitucional" );
	deepEqual( Stem("anticontaminante"), "anticontamin" );
	deepEqual( Stem("anticontaminantes"), "anticontamin" );
	deepEqual( Stem("anticristo"), "anticrist" );
	deepEqual( Stem("anticuarios"), "anticuari" );
	deepEqual( Stem("antidemocrática"), "antidemocrat" );
	deepEqual( Stem("antiderrapante"), "antiderrap" );
	deepEqual( Stem("antidoping"), "antidoping" );
	deepEqual( Stem("antidoto"), "antidot" );
	deepEqual( Stem("antídotos"), "antidot" );
	deepEqual( Stem("antidrogas"), "antidrog" );
	deepEqual( Stem("antidumping"), "antidumping" );
	deepEqual( Stem("antier"), "anti" );
	deepEqual( Stem("antiestrés"), "antiestres" );
	deepEqual( Stem("antigua"), "antigu" );
	deepEqual( Stem("antiguas"), "antigu" );
	deepEqual( Stem("antigüedad"), "antigüed" );
	deepEqual( Stem("antigüedades"), "antigüedad" );
	deepEqual( Stem("antiguo"), "antigu" );
	deepEqual( Stem("antiguos"), "antigu" );
	deepEqual( Stem("antillano"), "antillan" );
	deepEqual( Stem("antillanos"), "antillan" );
	deepEqual( Stem("antillas"), "antill" );
	deepEqual( Stem("antimonopolio"), "antimonopoli" );
	deepEqual( Stem("antinarcóticos"), "antinarcot" );
	deepEqual( Stem("antinépota"), "antinepot" );
	deepEqual( Stem("antioqueña"), "antioqueñ" );
	deepEqual( Stem("antiparasitaria"), "antiparasitari" );
	deepEqual( Stem("antipatía"), "antipat" );
	deepEqual( Stem("antisocial"), "antisocial" );
	deepEqual( Stem("antisubversiva"), "antisubvers" );
	deepEqual( Stem("antítesis"), "antitesis" );
	deepEqual( Stem("antoja"), "antoj" );
	deepEqual( Stem("antojo"), "antoj" );
	deepEqual( Stem("antonelli"), "antonelli" );
	deepEqual( Stem("antonin"), "antonin" );
	deepEqual( Stem("antonini"), "antonini" );
	deepEqual( Stem("antonio"), "antoni" );
	deepEqual( Stem("antorchista"), "antorch" );
	deepEqual( Stem("antropología"), "antropolog" );
	deepEqual( Stem("antropólogo"), "antropolog" );
	deepEqual( Stem("anual"), "anual" );
	deepEqual( Stem("anuales"), "anual" );
	deepEqual( Stem("anualmente"), "anual" );
	deepEqual( Stem("anulación"), "anul" );
	deepEqual( Stem("anuladas"), "anul" );
	deepEqual( Stem("anulados"), "anul" );
	deepEqual( Stem("anularlo"), "anul" );
	deepEqual( Stem("anuncia"), "anunci" );
	deepEqual( Stem("anunciaba"), "anunci" );
	deepEqual( Stem("anunciaban"), "anunci" );
	deepEqual( Stem("anunciada"), "anunci" );
	deepEqual( Stem("anunciadas"), "anunci" );
	deepEqual( Stem("anunciado"), "anunci" );
	deepEqual( Stem("anunciados"), "anunci" );
	deepEqual( Stem("anuncian"), "anunci" );
	deepEqual( Stem("anunciando"), "anunci" );
	deepEqual( Stem("anunciar"), "anunci" );
	deepEqual( Stem("anunciará"), "anunci" );
	deepEqual( Stem("anunciarlo"), "anunci" );
	deepEqual( Stem("anunciaron"), "anunci" );
	deepEqual( Stem("anuncio"), "anunci" );
	deepEqual( Stem("anunció"), "anunc" );
	deepEqual( Stem("anuncios"), "anunci" );
	deepEqual( Stem("anzuelo"), "anzuel" );
	deepEqual( Stem("anzuelos"), "anzuel" );
	deepEqual( Stem("ap"), "ap" );
	deepEqual( Stem("apabulló"), "apabull" );
	deepEqual( Stem("apaches"), "apach" );
	deepEqual( Stem("apacible"), "apac" );
	deepEqual( Stem("apaga"), "apag" );
	deepEqual( Stem("apagados"), "apag" );
	deepEqual( Stem("apagan"), "apag" );
	deepEqual( Stem("apagará"), "apag" );
	deepEqual( Stem("apagó"), "apag" );
	deepEqual( Stem("apagón"), "apagon" );
	deepEqual( Stem("apaleó"), "apale" );
	deepEqual( Stem("aparadores"), "apar" );
	deepEqual( Stem("aparato"), "aparat" );
	deepEqual( Stem("aparatos"), "aparat" );
	deepEqual( Stem("aparatosa"), "aparat" );
	deepEqual( Stem("aparcar"), "aparc" );
	deepEqual( Stem("aparece"), "aparec" );
	deepEqual( Stem("aparecen"), "aparec" );
	deepEqual( Stem("aparecer"), "aparec" );
	deepEqual( Stem("aparecía"), "aparec" );
	deepEqual( Stem("aparecidas"), "aparec" );
	deepEqual( Stem("aparecido"), "aparec" );
	deepEqual( Stem("apareciendo"), "aparec" );
	deepEqual( Stem("apareciera"), "aparec" );
	deepEqual( Stem("aparecieron"), "aparec" );
	deepEqual( Stem("apareció"), "aparec" );
	deepEqual( Stem("aparentan"), "aparent" );
	deepEqual( Stem("aparentar"), "aparent" );
	deepEqual( Stem("aparente"), "aparent" );
	deepEqual( Stem("aparentemente"), "aparent" );
	deepEqual( Stem("aparentes"), "aparent" );
	deepEqual( Stem("aparentó"), "aparent" );
	deepEqual( Stem("aparezca"), "aparezc" );
	deepEqual( Stem("aparezcan"), "aparezc" );
	deepEqual( Stem("aparición"), "aparicion" );
	deepEqual( Stem("apariciones"), "aparicion" );
	deepEqual( Stem("apariencia"), "aparient" );
	deepEqual( Stem("apariencias"), "aparient" );
	deepEqual( Stem("apartado"), "apart" );
	deepEqual( Stem("apartados"), "apart" );
	deepEqual( Stem("apartamento"), "apartament" );
	deepEqual( Stem("apartamentos"), "apartament" );
	deepEqual( Stem("apartan"), "apart" );
	deepEqual( Stem("aparte"), "apart" );
	deepEqual( Stem("apasionadamente"), "apasion" );
	deepEqual( Stem("apasionado"), "apasion" );
	deepEqual( Stem("apasionamiento"), "apasion" );
	deepEqual( Stem("apasionantes"), "apasion" );
	deepEqual( Stem("apatía"), "apat" );
	deepEqual( Stem("apáticas"), "apat" );
	deepEqual( Stem("apáticos"), "apat" );
	deepEqual( Stem("apedrean"), "apedr" );
	deepEqual( Stem("apegada"), "apeg" );
	deepEqual( Stem("apegadas"), "apeg" );
	deepEqual( Stem("apegan"), "apeg" );
	deepEqual( Stem("apegarnos"), "apeg" );
	deepEqual( Stem("apegarse"), "apeg" );
	deepEqual( Stem("apego"), "apeg" );
	deepEqual( Stem("apelación"), "apel" );
	deepEqual( Stem("apelaciones"), "apel" );
	deepEqual( Stem("apelar"), "apel" );
	deepEqual( Stem("apelarán"), "apel" );
	deepEqual( Stem("apelativos"), "apel" );
	deepEqual( Stem("apellido"), "apell" );
	deepEqual( Stem("apelo"), "apel" );
	deepEqual( Stem("apenado"), "apen" );
	deepEqual( Stem("apenaron"), "apen" );
	deepEqual( Stem("apenas"), "apen" );
	deepEqual( Stem("apéndice"), "apendic" );
	deepEqual( Stem("apendicitis"), "apendicitis" );
	deepEqual( Stem("apertura"), "apertur" );
	deepEqual( Stem("apetito"), "apetit" );
	deepEqual( Stem("apizaco"), "apizac" );
	deepEqual( Stem("aplacarlos"), "aplac" );
	deepEqual( Stem("aplasta"), "aplast" );
	deepEqual( Stem("aplastada"), "aplast" );
	deepEqual( Stem("aplastaron"), "aplast" );
	deepEqual( Stem("aplaude"), "aplaud" );
	deepEqual( Stem("aplaudiendo"), "aplaud" );
	deepEqual( Stem("aplaudieran"), "aplaud" );
	deepEqual( Stem("aplaudieron"), "aplaud" );
	deepEqual( Stem("aplaudió"), "aplaud" );
	deepEqual( Stem("aplaudir"), "aplaud" );
	deepEqual( Stem("aplaudirán"), "aplaud" );
	deepEqual( Stem("aplauso"), "aplaus" );
	deepEqual( Stem("aplausos"), "aplaus" );
	deepEqual( Stem("aplaza"), "aplaz" );
	deepEqual( Stem("aplazada"), "aplaz" );
	deepEqual( Stem("aplazamiento"), "aplaz" );
	deepEqual( Stem("aplazó"), "aplaz" );
	deepEqual( Stem("aplica"), "aplic" );
	deepEqual( Stem("aplicables"), "aplic" );
	deepEqual( Stem("aplicación"), "aplic" );
	deepEqual( Stem("aplicaciones"), "aplic" );
	deepEqual( Stem("aplicada"), "aplic" );
	deepEqual( Stem("aplicado"), "aplic" );
	deepEqual( Stem("aplicados"), "aplic" );
	deepEqual( Stem("aplican"), "aplic" );
	deepEqual( Stem("aplicar"), "aplic" );
	deepEqual( Stem("aplicara"), "aplic" );
	deepEqual( Stem("aplicará"), "aplic" );
	deepEqual( Stem("aplicáramos"), "aplic" );
	deepEqual( Stem("aplicarán"), "aplic" );
	deepEqual( Stem("aplicaríamos"), "aplic" );
	deepEqual( Stem("aplicarla"), "aplic" );
	deepEqual( Stem("aplicarle"), "aplic" );
	deepEqual( Stem("aplicarlos"), "aplic" );
	deepEqual( Stem("aplicaron"), "aplic" );
	deepEqual( Stem("aplicarse"), "aplic" );
	deepEqual( Stem("aplico"), "aplic" );
	deepEqual( Stem("aplicó"), "aplic" );
	deepEqual( Stem("aplique"), "apliqu" );
	deepEqual( Stem("apliquen"), "apliqu" );
	deepEqual( Stem("apo"), "apo" );
	deepEqual( Stem("apocada"), "apoc" );
	deepEqual( Stem("apocalipsis"), "apocalipsis" );
	deepEqual( Stem("apocalíptica"), "apocalipt" );
	deepEqual( Stem("apocalípticas"), "apocalipt" );
	deepEqual( Stem("apócrifo"), "apocrif" );
	deepEqual( Stem("apoda"), "apod" );
	deepEqual( Stem("apodaban"), "apod" );
	deepEqual( Stem("apodaca"), "apodac" );
	deepEqual( Stem("apodado"), "apod" );
	deepEqual( Stem("apoderado"), "apoder" );
	deepEqual( Stem("apoderándose"), "apoder" );
	deepEqual( Stem("apoderaron"), "apoder" );
	deepEqual( Stem("apoderó"), "apoder" );
	deepEqual( Stem("apodo"), "apod" );
	deepEqual( Stem("apogeo"), "apoge" );
	deepEqual( Stem("apoplejía"), "apoplej" );
	deepEqual( Stem("apoquinar"), "apoquin" );
	deepEqual( Stem("aporta"), "aport" );
	deepEqual( Stem("aportación"), "aport" );
	deepEqual( Stem("aportaciones"), "aport" );
	deepEqual( Stem("aportado"), "aport" );
	deepEqual( Stem("aportamos"), "aport" );
	deepEqual( Stem("aportan"), "aport" );
	deepEqual( Stem("aportando"), "aport" );
	deepEqual( Stem("aportar"), "aport" );
	deepEqual( Stem("aportará"), "aport" );
	deepEqual( Stem("aportaron"), "aport" );
	deepEqual( Stem("aporte"), "aport" );
	deepEqual( Stem("aporten"), "aport" );
	deepEqual( Stem("aportó"), "aport" );
	deepEqual( Stem("aposentos"), "aposent" );
	deepEqual( Stem("apostados"), "apost" );
	deepEqual( Stem("apostamos"), "apost" );
	deepEqual( Stem("apostar"), "apost" );
	deepEqual( Stem("apostemos"), "apost" );
	deepEqual( Stem("apostó"), "apost" );
	deepEqual( Stem("apóstoles"), "apostol" );
	deepEqual( Stem("apostólica"), "apostol" );
	deepEqual( Stem("apostólico"), "apostol" );
	deepEqual( Stem("apoya"), "apoy" );
	deepEqual( Stem("apoyaban"), "apoy" );
	deepEqual( Stem("apoyada"), "apoy" );
	deepEqual( Stem("apoyado"), "apoy" );
	deepEqual( Stem("apoyados"), "apoy" );
	deepEqual( Stem("apoyamos"), "apoy" );
	deepEqual( Stem("apoyan"), "apoy" );
	deepEqual( Stem("apoyando"), "apoy" );
	deepEqual( Stem("apoyándola"), "apoy" );
	deepEqual( Stem("apoyándonos"), "apoy" );
	deepEqual( Stem("apoyándose"), "apoy" );
	deepEqual( Stem("apoyar"), "apoy" );
	deepEqual( Stem("apoyara"), "apoy" );
	deepEqual( Stem("apoyará"), "apoy" );
	deepEqual( Stem("apoyarán"), "apoy" );
	deepEqual( Stem("apoyaremos"), "apoy" );
	deepEqual( Stem("apoyaría"), "apoy" );
	deepEqual( Stem("apoyarian"), "apoyari" );
	deepEqual( Stem("apoyarlo"), "apoy" );
	deepEqual( Stem("apoyaron"), "apoy" );
	deepEqual( Stem("apoyasen"), "apoy" );
	deepEqual( Stem("apoye"), "apoy" );
	deepEqual( Stem("apoyen"), "apoy" );
	deepEqual( Stem("apoyo"), "apoy" );
	deepEqual( Stem("apoyó"), "apoy" );
	deepEqual( Stem("apoyos"), "apoy" );
	deepEqual( Stem("appel"), "appel" );
	deepEqual( Stem("apple"), "apple" );
	deepEqual( Stem("apra"), "apra" );
	deepEqual( Stem("aprecia"), "apreci" );
	deepEqual( Stem("apreciación"), "apreci" );
	deepEqual( Stem("apreciada"), "apreci" );
	deepEqual( Stem("apreciado"), "apreci" );
	deepEqual( Stem("apreciar"), "apreci" );
	deepEqual( Stem("apreciarlo"), "apreci" );
	deepEqual( Stem("apreciaron"), "apreci" );
	deepEqual( Stem("apreciarse"), "apreci" );
	deepEqual( Stem("aprecio"), "apreci" );
	deepEqual( Stem("apreció"), "aprec" );
	deepEqual( Stem("aprehendido"), "aprehend" );
	deepEqual( Stem("aprehension"), "aprehension" );
	deepEqual( Stem("aprehensión"), "aprehension" );
	deepEqual( Stem("aprehensiones"), "aprehension" );
	deepEqual( Stem("aprehensores"), "aprehensor" );
	deepEqual( Stem("aprenda"), "aprend" );
	deepEqual( Stem("aprendan"), "aprend" );
	deepEqual( Stem("aprende"), "aprend" );
	deepEqual( Stem("aprenden"), "aprend" );
	deepEqual( Stem("aprender"), "aprend" );
	deepEqual( Stem("aprenderá"), "aprend" );
	deepEqual( Stem("aprenderlo"), "aprend" );
	deepEqual( Stem("aprendices"), "aprendic" );
	deepEqual( Stem("aprendido"), "aprend" );
	deepEqual( Stem("aprendiendo"), "aprend" );
	deepEqual( Stem("aprendieron"), "aprend" );
	deepEqual( Stem("aprendió"), "aprend" );
	deepEqual( Stem("aprendiste"), "aprend" );
	deepEqual( Stem("aprendizaje"), "aprendizaj" );
	deepEqual( Stem("aprestos"), "aprest" );
	deepEqual( Stem("apresura"), "apresur" );
	deepEqual( Stem("apresuradamente"), "apresur" );
	deepEqual( Stem("apresurado"), "apresur" );
	deepEqual( Stem("apresuramiento"), "apresur" );
	deepEqual( Stem("apresurando"), "apresur" );
	deepEqual( Stem("apresurar"), "apresur" );
	deepEqual( Stem("apresuró"), "apresur" );
	deepEqual( Stem("apretado"), "apret" );
	deepEqual( Stem("apretamos"), "apret" );
	deepEqual( Stem("apretar"), "apret" );
	deepEqual( Stem("apretarlo"), "apret" );
	deepEqual( Stem("apretaron"), "apret" );
	deepEqual( Stem("apretó"), "apret" );
	deepEqual( Stem("apretón"), "apreton" );
	deepEqual( Stem("aprieta"), "apriet" );
	deepEqual( Stem("apriete"), "apriet" );
	deepEqual( Stem("aprieten"), "apriet" );
	deepEqual( Stem("aprietos"), "apriet" );
	deepEqual( Stem("apro"), "apro" );
	deepEqual( Stem("aprobación"), "aprob" );
	deepEqual( Stem("aprobada"), "aprob" );
	deepEqual( Stem("aprobadas"), "aprob" );
	deepEqual( Stem("aprobado"), "aprob" );
	deepEqual( Stem("aprobados"), "aprob" );
	deepEqual( Stem("aprobar"), "aprob" );
	deepEqual( Stem("aprobará"), "aprob" );
	deepEqual( Stem("aprobarán"), "aprob" );
	deepEqual( Stem("aprobaron"), "aprob" );
	deepEqual( Stem("aprobarse"), "aprob" );
	deepEqual( Stem("aprobatorio"), "aprobatori" );
	deepEqual( Stem("aprobó"), "aprob" );
	deepEqual( Stem("apropiada"), "apropi" );
	deepEqual( Stem("apropiadamente"), "apropi" );
	deepEqual( Stem("apropiadas"), "apropi" );
	deepEqual( Stem("apropiado"), "apropi" );
	deepEqual( Stem("apropiados"), "apropi" );
	deepEqual( Stem("apropian"), "apropi" );
	deepEqual( Stem("aprovecha"), "aprovech" );
	deepEqual( Stem("aprovechado"), "aprovech" );
	deepEqual( Stem("aprovechamiento"), "aprovech" );
	deepEqual( Stem("aprovechan"), "aprovech" );
	deepEqual( Stem("aprovechando"), "aprovech" );
	deepEqual( Stem("aprovechar"), "aprovech" );
	deepEqual( Stem("aprovecharán"), "aprovech" );
	deepEqual( Stem("aprovecharla"), "aprovech" );
	deepEqual( Stem("aprovecharlas"), "aprovech" );
	deepEqual( Stem("aprovecharon"), "aprovech" );
	deepEqual( Stem("aprovecharse"), "aprovech" );
	deepEqual( Stem("aproveche"), "aprovech" );
	deepEqual( Stem("aprovechó"), "aprovech" );
	deepEqual( Stem("aproximaba"), "aproxim" );
	deepEqual( Stem("aproximación"), "aproxim" );
	deepEqual( Stem("aproximada"), "aproxim" );
	deepEqual( Stem("aproximadamente"), "aproxim" );
	deepEqual( Stem("aproximado"), "aproxim" );
	deepEqual( Stem("aproximados"), "aproxim" );
	deepEqual( Stem("aproximan"), "aproxim" );
	deepEqual( Stem("aprueba"), "aprueb" );
	deepEqual( Stem("aprueban"), "aprueb" );
	deepEqual( Stem("apruebe"), "aprueb" );
	deepEqual( Stem("aprueben"), "aprueb" );
	deepEqual( Stem("aptas"), "aptas" );
	deepEqual( Stem("aptitud"), "aptitud" );
	deepEqual( Stem("aptitudes"), "aptitud" );
	deepEqual( Stem("aptos"), "aptos" );
	deepEqual( Stem("apuesta"), "apuest" );
	deepEqual( Stem("apuestas"), "apuest" );
	deepEqual( Stem("apuesto"), "apuest" );
	deepEqual( Stem("apuestos"), "apuest" );
	deepEqual( Stem("apunta"), "apunt" );
	deepEqual( Stem("apuntalado"), "apuntal" );
	deepEqual( Stem("apuntalar"), "apuntal" );
	deepEqual( Stem("apuntan"), "apunt" );
	deepEqual( Stem("apuntar"), "apunt" );
	deepEqual( Stem("apuntaron"), "apunt" );
	deepEqual( Stem("apuntes"), "apunt" );
	deepEqual( Stem("apuntó"), "apunt" );
	deepEqual( Stem("aquel"), "aquel" );
	deepEqual( Stem("aquél"), "aquel" );
	deepEqual( Stem("aquelarre"), "aquelarr" );
	deepEqual( Stem("aquelarres"), "aquelarr" );
	deepEqual( Stem("aquella"), "aquell" );
	deepEqual( Stem("aquellas"), "aquell" );
	deepEqual( Stem("aquéllas"), "aquell" );
	deepEqual( Stem("aquello"), "aquell" );
	deepEqual( Stem("aquellos"), "aquell" );
	deepEqual( Stem("aquéllos"), "aquell" );
	deepEqual( Stem("aqui"), "aqui" );
	deepEqual( Stem("aquí"), "aqu" );
	deepEqual( Stem("aquiles"), "aquil" );
	deepEqual( Stem("aquino"), "aquin" );
	deepEqual( Stem("arabe"), "arab" );
	deepEqual( Stem("árabe"), "arab" );
	deepEqual( Stem("árabes"), "arab" );
	deepEqual( Stem("arábiga"), "arabig" );
	deepEqual( Stem("arado"), "arad" );
	deepEqual( Stem("aragón"), "aragon" );
	deepEqual( Stem("aragua"), "aragu" );
	deepEqual( Stem("araiza"), "araiz" );
	deepEqual( Stem("arana"), "aran" );
	deepEqual( Stem("arañas"), "arañ" );
	deepEqual( Stem("arancel"), "arancel" );
	deepEqual( Stem("arancelarias"), "arancelari" );
	deepEqual( Stem("aranceles"), "arancel" );
	deepEqual( Stem("aranda"), "arand" );
	deepEqual( Stem("arango"), "arang" );
	deepEqual( Stem("aranjuez"), "aranjuez" );
	deepEqual( Stem("aras"), "aras" );
	deepEqual( Stem("arau"), "arau" );
	deepEqual( Stem("araujo"), "arauj" );
	deepEqual( Stem("arbitraje"), "arbitraj" );
	deepEqual( Stem("arbitral"), "arbitral" );
	deepEqual( Stem("arbitraria"), "arbitrari" );
	deepEqual( Stem("arbitrarias"), "arbitrari" );
	deepEqual( Stem("arbitrariedades"), "arbitrariedad" );
	deepEqual( Stem("arbitrario"), "arbitrari" );
	deepEqual( Stem("arbitrio"), "arbitri" );
	deepEqual( Stem("árbitro"), "arbitr" );
	deepEqual( Stem("árbitros"), "arbitr" );
	deepEqual( Stem("árbol"), "arbol" );
	deepEqual( Stem("arboles"), "arbol" );
	deepEqual( Stem("árboles"), "arbol" );
	deepEqual( Stem("arbusto"), "arbust" );
	deepEqual( Stem("arcadio"), "arcadi" );
	deepEqual( Stem("arcángeles"), "arcangel" );
	deepEqual( Stem("archaelogy"), "archaelogy" );
	deepEqual( Stem("archiconservadores"), "archiconserv" );
	deepEqual( Stem("archiduque"), "archiduqu" );
	deepEqual( Stem("archipiélago"), "archipielag" );
	deepEqual( Stem("archivada"), "archiv" );
	deepEqual( Stem("archivo"), "archiv" );
	deepEqual( Stem("archundia"), "archundi" );
	deepEqual( Stem("arcilla"), "arcill" );
	deepEqual( Stem("arcillistas"), "arcill" );
	deepEqual( Stem("arco"), "arco" );
	deepEqual( Stem("arcoiris"), "arcoiris" );
	deepEqual( Stem("arcusa"), "arcus" );
	deepEqual( Stem("ardía"), "ardi" );
	deepEqual( Stem("ardiente"), "ardient" );
	deepEqual( Stem("ardientes"), "ardient" );
	deepEqual( Stem("arduo"), "ardu" );
	deepEqual( Stem("área"), "are" );
	deepEqual( Stem("areas"), "are" );
	deepEqual( Stem("áreas"), "are" );
	deepEqual( Stem("arellanes"), "arellan" );
	deepEqual( Stem("arena"), "aren" );
	deepEqual( Stem("arenal"), "arenal" );
	deepEqual( Stem("areoportuarias"), "areoportuari" );
	deepEqual( Stem("aretes"), "aret" );
	deepEqual( Stem("arévalo"), "areval" );
	deepEqual( Stem("argentina"), "argentin" );
	deepEqual( Stem("argentinabrasil"), "argentinabrasil" );
	deepEqual( Stem("argentino"), "argentin" );
	deepEqual( Stem("argentinos"), "argentin" );
	deepEqual( Stem("argoytia"), "argoyti" );
	deepEqual( Stem("argudín"), "argudin" );
	deepEqual( Stem("arguelles"), "arguell" );
	deepEqual( Stem("argumenta"), "argument" );
	deepEqual( Stem("argumentando"), "argument" );
	deepEqual( Stem("argumentar"), "argument" );
	deepEqual( Stem("argumentarán"), "argument" );
	deepEqual( Stem("argumentaron"), "argument" );
	deepEqual( Stem("argumento"), "argument" );
	deepEqual( Stem("argumentó"), "argument" );
	deepEqual( Stem("argumentos"), "argument" );
	deepEqual( Stem("arias"), "ari" );
	deepEqual( Stem("ariel"), "ariel" );
	deepEqual( Stem("ariete"), "ariet" );
	deepEqual( Stem("arista"), "arist" );
	deepEqual( Stem("aristócratas"), "aristocrat" );
	deepEqual( Stem("aristóteles"), "aristotel" );
	deepEqual( Stem("aritmética"), "aritmet" );
	deepEqual( Stem("aritmético"), "aritmet" );
	deepEqual( Stem("arizmendi"), "arizmendi" );
	deepEqual( Stem("arizona"), "arizon" );
	deepEqual( Stem("arkansas"), "arkans" );
	deepEqual( Stem("arlette"), "arlett" );
	deepEqual( Stem("arma"), "arma" );
	deepEqual( Stem("armada"), "armad" );
	deepEqual( Stem("armadas"), "armad" );
	deepEqual( Stem("armadillo"), "armadill" );
	deepEqual( Stem("armado"), "armad" );
	deepEqual( Stem("armadoras"), "armador" );
	deepEqual( Stem("armados"), "armad" );
	deepEqual( Stem("armagedón"), "armagedon" );
	deepEqual( Stem("armamento"), "armament" );
	deepEqual( Stem("armamentos"), "armament" );
	deepEqual( Stem("armando"), "armand" );
	deepEqual( Stem("armani"), "armani" );
	deepEqual( Stem("armar"), "armar" );
	deepEqual( Stem("armas"), "armas" );
	deepEqual( Stem("armella"), "armell" );
	deepEqual( Stem("armendáriz"), "armendariz" );
	deepEqual( Stem("armenio"), "armeni" );
	deepEqual( Stem("armillita"), "armillit" );
	deepEqual( Stem("armisticio"), "armistici" );
	deepEqual( Stem("armó"), "armo" );
	deepEqual( Stem("armonía"), "armon" );
	deepEqual( Stem("armónica"), "armon" );
	deepEqual( Stem("armónico"), "armon" );
	deepEqual( Stem("armoniosa"), "armoni" );
	deepEqual( Stem("armonización"), "armoniz" );
	deepEqual( Stem("armonizar"), "armoniz" );
	deepEqual( Stem("armonizarse"), "armoniz" );
	deepEqual( Stem("armstrong"), "armstrong" );
	deepEqual( Stem("army"), "army" );
	deepEqual( Stem("arnaldo"), "arnald" );
	deepEqual( Stem("arnoldo"), "arnold" );
	deepEqual( Stem("arnulfo"), "arnulf" );
	deepEqual( Stem("aromas"), "arom" );
	deepEqual( Stem("aromatizantes"), "aromatiz" );
	deepEqual( Stem("aromatizar"), "aromatiz" );
	deepEqual( Stem("aros"), "aros" );
	deepEqual( Stem("arq"), "arq" );
	deepEqual( Stem("arqueóloga"), "arqueolog" );
	deepEqual( Stem("arqueología"), "arqueolog" );
	deepEqual( Stem("arqueológica"), "arqueolog" );
	deepEqual( Stem("arqueológicas"), "arqueolog" );
	deepEqual( Stem("arqueológico"), "arqueolog" );
	deepEqual( Stem("arqueológicos"), "arqueolog" );
	deepEqual( Stem("arqueólogos"), "arqueolog" );
	deepEqual( Stem("arquero"), "arquer" );
	deepEqual( Stem("arquidiócesis"), "arquidiocesis" );
	deepEqual( Stem("arquitecto"), "arquitect" );
	deepEqual( Stem("arquitectónicamente"), "arquitecton" );
	deepEqual( Stem("arquitectónicas"), "arquitecton" );
	deepEqual( Stem("arquitectónico"), "arquitecton" );
	deepEqual( Stem("arquitectos"), "arquitect" );
	deepEqual( Stem("arquitectura"), "arquitectur" );
	deepEqual( Stem("arquitecturas"), "arquitectur" );
	deepEqual( Stem("arracadas"), "arrac" );
	deepEqual( Stem("arrachera"), "arracher" );
	deepEqual( Stem("arraigada"), "arraig" );
	deepEqual( Stem("arraigado"), "arraig" );
	deepEqual( Stem("arraigo"), "arraig" );
	deepEqual( Stem("arrambide"), "arrambid" );
	deepEqual( Stem("arranca"), "arranc" );
	deepEqual( Stem("arrancados"), "arranc" );
	deepEqual( Stem("arrancando"), "arranc" );
	deepEqual( Stem("arrancar"), "arranc" );
	deepEqual( Stem("arrancará"), "arranc" );
	deepEqual( Stem("arrancarán"), "arranc" );
	deepEqual( Stem("arrancaremos"), "arranc" );
	deepEqual( Stem("arrancaron"), "arranc" );
	deepEqual( Stem("arrancárselo"), "arranc" );
	deepEqual( Stem("arrancó"), "arranc" );
	deepEqual( Stem("arranque"), "arranqu" );
	deepEqual( Stem("arrasaron"), "arras" );
	deepEqual( Stem("arrastrada"), "arrastr" );
	deepEqual( Stem("arrastrados"), "arrastr" );
	deepEqual( Stem("arrastrando"), "arrastr" );
	deepEqual( Stem("arrastre"), "arrastr" );
	deepEqual( Stem("arrastró"), "arrastr" );
	deepEqual( Stem("arreaga"), "arreag" );
	deepEqual( Stem("arrear"), "arre" );
	deepEqual( Stem("arrebatada"), "arrebat" );
	deepEqual( Stem("arrebatar"), "arrebat" );
	deepEqual( Stem("arrebatara"), "arrebat" );
	deepEqual( Stem("arrebató"), "arrebat" );
	deepEqual( Stem("arredondo"), "arredond" );
	deepEqual( Stem("arredra"), "arredr" );
	deepEqual( Stem("arregla"), "arregl" );
	deepEqual( Stem("arreglada"), "arregl" );
	deepEqual( Stem("arreglan"), "arregl" );
	deepEqual( Stem("arreglar"), "arregl" );
	deepEqual( Stem("arreglaran"), "arregl" );
	deepEqual( Stem("arreglarse"), "arregl" );
	deepEqual( Stem("arreglas"), "arregl" );
	deepEqual( Stem("arreglo"), "arregl" );
	deepEqual( Stem("arregló"), "arregl" );
	deepEqual( Stem("arreglos"), "arregl" );
	deepEqual( Stem("arremangó"), "arremang" );
	deepEqual( Stem("arremetió"), "arremet" );
	deepEqual( Stem("arrendaba"), "arrend" );
	deepEqual( Stem("arrendador"), "arrend" );
	deepEqual( Stem("arrendadora"), "arrend" );
	deepEqual( Stem("arrendadoras"), "arrend" );
	deepEqual( Stem("arrendamiento"), "arrend" );
	deepEqual( Stem("arrendamientos"), "arrend" );
	deepEqual( Stem("arrendatario"), "arrendatari" );
	deepEqual( Stem("arreola"), "arreol" );
	deepEqual( Stem("arrepentido"), "arrepent" );
	deepEqual( Stem("arrepentimiento"), "arrepent" );
	deepEqual( Stem("arrepiente"), "arrepient" );
	deepEqual( Stem("arrestado"), "arrest" );
	deepEqual( Stem("arrestados"), "arrest" );
	deepEqual( Stem("arrested"), "arrest" );
	deepEqual( Stem("arresto"), "arrest" );
	deepEqual( Stem("arrestó"), "arrest" );
	deepEqual( Stem("arrestos"), "arrest" );
	deepEqual( Stem("arriaga"), "arriag" );
	deepEqual( Stem("arriba"), "arrib" );
	deepEqual( Stem("arribo"), "arrib" );
	deepEqual( Stem("arribó"), "arrib" );
	deepEqual( Stem("arriesga"), "arriesg" );
	deepEqual( Stem("arriesgada"), "arriesg" );
	deepEqual( Stem("arriesgado"), "arriesg" );
	deepEqual( Stem("arriesgamos"), "arriesg" );
	deepEqual( Stem("arriesgando"), "arriesg" );
	deepEqual( Stem("arriesgar"), "arriesg" );
	deepEqual( Stem("arriesgarían"), "arriesg" );
	deepEqual( Stem("arriesgarlo"), "arriesg" );
	deepEqual( Stem("arriesgarse"), "arriesg" );
	deepEqual( Stem("arrimo"), "arrim" );
	deepEqual( Stem("arrivederci"), "arrivederci" );
	deepEqual( Stem("arrobamiento"), "arrob" );
	deepEqual( Stem("arrodillar"), "arrodill" );
	deepEqual( Stem("arrogante"), "arrog" );
	deepEqual( Stem("arroja"), "arroj" );
	deepEqual( Stem("arrojaban"), "arroj" );
	deepEqual( Stem("arrojada"), "arroj" );
	deepEqual( Stem("arrojado"), "arroj" );
	deepEqual( Stem("arrojados"), "arroj" );
	deepEqual( Stem("arrojan"), "arroj" );
	deepEqual( Stem("arrojando"), "arroj" );
	deepEqual( Stem("arrojar"), "arroj" );
	deepEqual( Stem("arrojarlos"), "arroj" );
	deepEqual( Stem("arrojaron"), "arroj" );
	deepEqual( Stem("arrojen"), "arroj" );
	deepEqual( Stem("arrojó"), "arroj" );
	deepEqual( Stem("arrolladas"), "arroll" );
	deepEqual( Stem("arrollado"), "arroll" );
	deepEqual( Stem("arrolló"), "arroll" );
	deepEqual( Stem("arropados"), "arrop" );
	deepEqual( Stem("arrópese"), "arropes" );
	deepEqual( Stem("arroyo"), "arroy" );
	deepEqual( Stem("arroyó"), "arroy" );
	deepEqual( Stem("arroyos"), "arroy" );
	deepEqual( Stem("arroz"), "arroz" );
	deepEqual( Stem("arrugas"), "arrug" );
	deepEqual( Stem("arruinado"), "arruin" );
	deepEqual( Stem("arruinan"), "arruin" );
	deepEqual( Stem("arruinarse"), "arruin" );
	deepEqual( Stem("arrutinamos"), "arrutin" );
	deepEqual( Stem("arsenio"), "arseni" );
	deepEqual( Stem("art"), "art" );
	deepEqual( Stem("arte"), "arte" );
	deepEqual( Stem("arteaga"), "arteag" );
	deepEqual( Stem("artefacto"), "artefact" );
	deepEqual( Stem("artemio"), "artemi" );
	deepEqual( Stem("arteria"), "arteri" );
	deepEqual( Stem("arterias"), "arteri" );
	deepEqual( Stem("arterioesclerosis"), "arterioesclerosis" );
	deepEqual( Stem("arteroesclerosis"), "arteroesclerosis" );
	deepEqual( Stem("artes"), "artes" );
	deepEqual( Stem("artesanal"), "artesanal" );
	deepEqual( Stem("artesanales"), "artesanal" );
	deepEqual( Stem("artesanas"), "artesan" );
	deepEqual( Stem("artesanías"), "artesan" );
	deepEqual( Stem("artesianos"), "artesian" );
	deepEqual( Stem("arthur"), "arthur" );
	deepEqual( Stem("articulación"), "articul" );
	deepEqual( Stem("articulado"), "articul" );
	deepEqual( Stem("artículo"), "articul" );
	deepEqual( Stem("artículos"), "articul" );
	deepEqual( Stem("artífice"), "artific" );
	deepEqual( Stem("artificial"), "artificial" );
	deepEqual( Stem("artificiales"), "artificial" );
	deepEqual( Stem("artificialmente"), "artificial" );
	deepEqual( Stem("artificio"), "artifici" );
	deepEqual( Stem("artillería"), "artill" );
	deepEqual( Stem("artilleros"), "artiller" );
	deepEqual( Stem("artista"), "artist" );
	deepEqual( Stem("artistas"), "artist" );
	deepEqual( Stem("artística"), "artist" );
	deepEqual( Stem("artísticas"), "artist" );
	deepEqual( Stem("artístico"), "artist" );
	deepEqual( Stem("artísticos"), "artist" );
	deepEqual( Stem("arturo"), "artur" );
	deepEqual( Stem("arvernse"), "arverns" );
	deepEqual( Stem("aryca"), "aryca" );
	deepEqual( Stem("arzobispal"), "arzobispal" );
	deepEqual( Stem("arzobispo"), "arzobisp" );
	deepEqual( Stem("as"), "as" );
	deepEqual( Stem("asa"), "asa" );
	deepEqual( Stem("asada"), "asad" );
	deepEqual( Stem("asadas"), "asad" );
	deepEqual( Stem("asaltaba"), "asalt" );
	deepEqual( Stem("asaltada"), "asalt" );
	deepEqual( Stem("asaltado"), "asalt" );
	deepEqual( Stem("asaltados"), "asalt" );
	deepEqual( Stem("asaltan"), "asalt" );
	deepEqual( Stem("asaltante"), "asalt" );
	deepEqual( Stem("asaltantes"), "asalt" );
	deepEqual( Stem("asaltar"), "asalt" );
	deepEqual( Stem("asaltaron"), "asalt" );
	deepEqual( Stem("asalto"), "asalt" );
	deepEqual( Stem("asaltó"), "asalt" );
	deepEqual( Stem("asaltos"), "asalt" );
	deepEqual( Stem("asamblea"), "asamble" );
	deepEqual( Stem("asambleas"), "asambl" );
	deepEqual( Stem("asambleísas"), "asambleis" );
	deepEqual( Stem("ascencio"), "ascenci" );
	deepEqual( Stem("ascendencia"), "ascendent" );
	deepEqual( Stem("ascendente"), "ascendent" );
	deepEqual( Stem("ascenderá"), "ascend" );
	deepEqual( Stem("ascenderían"), "ascend" );
	deepEqual( Stem("ascendido"), "ascend" );
	deepEqual( Stem("ascendiendo"), "ascend" );
	deepEqual( Stem("ascendieron"), "ascend" );
	deepEqual( Stem("ascendió"), "ascend" );
	deepEqual( Stem("ascenso"), "ascens" );
	deepEqual( Stem("ascensos"), "ascens" );
	deepEqual( Stem("asciende"), "asciend" );
	deepEqual( Stem("ascienden"), "asciend" );
	deepEqual( Stem("aseados"), "ase" );
	deepEqual( Stem("asegura"), "asegur" );
	deepEqual( Stem("aseguraba"), "asegur" );
	deepEqual( Stem("asegurada"), "asegur" );
	deepEqual( Stem("aseguradas"), "asegur" );
	deepEqual( Stem("asegurado"), "asegur" );
	deepEqual( Stem("aseguradora"), "asegur" );
	deepEqual( Stem("asegurados"), "asegur" );
	deepEqual( Stem("aseguramiento"), "asegur" );
	deepEqual( Stem("aseguran"), "asegur" );
	deepEqual( Stem("asegurar"), "asegur" );
	deepEqual( Stem("aseguraremos"), "asegur" );
	deepEqual( Stem("asegurarle"), "asegur" );
	deepEqual( Stem("aseguraron"), "asegur" );
	deepEqual( Stem("aseguren"), "asegur" );
	deepEqual( Stem("asegúrese"), "asegures" );
	deepEqual( Stem("aseguró"), "asegur" );
	deepEqual( Stem("asemeja"), "asemej" );
	deepEqual( Stem("asemejaba"), "asemej" );
	deepEqual( Stem("asemex"), "asemex" );
	deepEqual( Stem("asención"), "asencion" );
	deepEqual( Stem("asentadas"), "asent" );
	deepEqual( Stem("asentado"), "asent" );
	deepEqual( Stem("asentamiento"), "asent" );
	deepEqual( Stem("asentamientos"), "asent" );
	deepEqual( Stem("asentándose"), "asent" );
	deepEqual( Stem("asentó"), "asent" );
	deepEqual( Stem("asertivo"), "asert" );
	deepEqual( Stem("ases"), "ases" );
	deepEqual( Stem("asesinada"), "asesin" );
	deepEqual( Stem("asesinado"), "asesin" );
	deepEqual( Stem("asesinar"), "asesin" );
	deepEqual( Stem("asesinaron"), "asesin" );
	deepEqual( Stem("asesinato"), "asesinat" );
	deepEqual( Stem("asesinatos"), "asesinat" );
	deepEqual( Stem("asesino"), "asesin" );
	deepEqual( Stem("asesinó"), "asesin" );
	deepEqual( Stem("asesinos"), "asesin" );
	deepEqual( Stem("asesor"), "asesor" );
	deepEqual( Stem("asesora"), "asesor" );
	deepEqual( Stem("asesoraban"), "asesor" );
	deepEqual( Stem("asesorado"), "asesor" );
	deepEqual( Stem("asesoramiento"), "asesor" );
	deepEqual( Stem("asesorar"), "asesor" );
	deepEqual( Stem("asesorarlo"), "asesor" );
	deepEqual( Stem("asesores"), "asesor" );
	deepEqual( Stem("asesoría"), "asesor" );
	deepEqual( Stem("asestadas"), "asest" );
	deepEqual( Stem("asestó"), "asest" );
	deepEqual( Stem("asevera"), "asever" );
	deepEqual( Stem("aseverando"), "asever" );
	deepEqual( Stem("aseveraron"), "asever" );
	deepEqual( Stem("aseveró"), "asever" );
	deepEqual( Stem("asfalto"), "asfalt" );
	deepEqual( Stem("asfixia"), "asfixi" );
	deepEqual( Stem("ashida"), "ashid" );
	deepEqual( Stem("asi"), "asi" );
	deepEqual( Stem("así"), "asi" );
	deepEqual( Stem("asia"), "asi" );
	deepEqual( Stem("asiático"), "asiat" );
	deepEqual( Stem("asic"), "asic" );
	deepEqual( Stem("asiduo"), "asidu" );
	deepEqual( Stem("asienta"), "asient" );
	deepEqual( Stem("asiento"), "asient" );
	deepEqual( Stem("asientos"), "asient" );
	deepEqual( Stem("asigna"), "asign" );
	deepEqual( Stem("asignación"), "asign" );
	deepEqual( Stem("asignadas"), "asign" );
	deepEqual( Stem("asignado"), "asign" );
	deepEqual( Stem("asignados"), "asign" );
	deepEqual( Stem("asignan"), "asign" );
	deepEqual( Stem("asignando"), "asign" );
	deepEqual( Stem("asignar"), "asign" );
	deepEqual( Stem("asignaron"), "asign" );
	deepEqual( Stem("asignen"), "asign" );
	deepEqual( Stem("asimétrica"), "asimetr" );
	deepEqual( Stem("asimilación"), "asimil" );
	deepEqual( Stem("asimilar"), "asimil" );
	deepEqual( Stem("asimilemos"), "asimil" );
	deepEqual( Stem("asimismo"), "asim" );
	deepEqual( Stem("asímismo"), "asim" );
	deepEqual( Stem("asista"), "asist" );
	deepEqual( Stem("asistan"), "asist" );
	deepEqual( Stem("asiste"), "asist" );
	deepEqual( Stem("asisten"), "asist" );
	deepEqual( Stem("asistencia"), "asistent" );
	deepEqual( Stem("asistenciales"), "asistencial" );
	deepEqual( Stem("asistencias"), "asistent" );
	deepEqual( Stem("asistentes"), "asistent" );
	deepEqual( Stem("asistían"), "asist" );
	deepEqual( Stem("asistiendo"), "asist" );
	deepEqual( Stem("asistiéndose"), "asist" );
	deepEqual( Stem("asistiera"), "asist" );
	deepEqual( Stem("asistieron"), "asist" );
	deepEqual( Stem("asistió"), "asist" );
	deepEqual( Stem("asistir"), "asist" );
	deepEqual( Stem("asistirá"), "asist" );
	deepEqual( Stem("asistirán"), "asist" );
	deepEqual( Stem("asitex"), "asitex" );
	deepEqual( Stem("asocia"), "asoci" );
	deepEqual( Stem("asociación"), "asoci" );
	deepEqual( Stem("asociaciones"), "asoci" );
	deepEqual( Stem("asociada"), "asoci" );
	deepEqual( Stem("asociado"), "asoci" );
	deepEqual( Stem("asociados"), "asoci" );
	deepEqual( Stem("asocian"), "asoci" );
	deepEqual( Stem("asociar"), "asoci" );
	deepEqual( Stem("asociaron"), "asoci" );
	deepEqual( Stem("asociarse"), "asoci" );
	deepEqual( Stem("asombra"), "asombr" );
	deepEqual( Stem("asombradas"), "asombr" );
	deepEqual( Stem("asómbrese"), "asombres" );
	deepEqual( Stem("asombro"), "asombr" );
	deepEqual( Stem("asombrosa"), "asombr" );
	deepEqual( Stem("asombrosamente"), "asombr" );
	deepEqual( Stem("asómese"), "asomes" );
	deepEqual( Stem("asomo"), "asom" );
	deepEqual( Stem("asomó"), "asom" );
	deepEqual( Stem("asotiation"), "asotiation" );
	deepEqual( Stem("aspavientos"), "aspavient" );
	deepEqual( Stem("aspe"), "aspe" );
	deepEqual( Stem("aspecto"), "aspect" );
	deepEqual( Stem("aspectos"), "aspect" );
	deepEqual( Stem("ásperamente"), "asper" );
	deepEqual( Stem("áspero"), "asper" );
	deepEqual( Stem("aspersión"), "aspersion" );
	deepEqual( Stem("aspes"), "aspes" );
	deepEqual( Stem("aspetia"), "aspeti" );
	deepEqual( Stem("aspira"), "aspir" );
	deepEqual( Stem("aspiraciones"), "aspir" );
	deepEqual( Stem("aspiran"), "aspir" );
	deepEqual( Stem("aspirante"), "aspir" );
	deepEqual( Stem("aspirantes"), "aspir" );
	deepEqual( Stem("aspirar"), "aspir" );
	deepEqual( Stem("aspirara"), "aspir" );
	deepEqual( Stem("assessment"), "assessment" );
	deepEqual( Stem("associates"), "associat" );
	deepEqual( Stem("association"), "association" );
	deepEqual( Stem("astado"), "astad" );
	deepEqual( Stem("asteroide"), "asteroid" );
	deepEqual( Stem("asteroides"), "asteroid" );
	deepEqual( Stem("astro"), "astro" );
	deepEqual( Stem("astroditomas"), "astroditom" );
	deepEqual( Stem("astrología"), "astrolog" );
	deepEqual( Stem("astrológico"), "astrolog" );
	deepEqual( Stem("astronautas"), "astronaut" );
	deepEqual( Stem("astronómicos"), "astronom" );
	deepEqual( Stem("astros"), "astros" );
	deepEqual( Stem("asuma"), "asum" );
	deepEqual( Stem("asuman"), "asum" );
	deepEqual( Stem("asume"), "asum" );
	deepEqual( Stem("asumen"), "asum" );
	deepEqual( Stem("asumido"), "asum" );
	deepEqual( Stem("asumiendo"), "asum" );
	deepEqual( Stem("asumiera"), "asum" );
	deepEqual( Stem("asumieron"), "asum" );
	deepEqual( Stem("asumimos"), "asum" );
	deepEqual( Stem("asumió"), "asum" );
	deepEqual( Stem("asumir"), "asum" );
	deepEqual( Stem("asumirá"), "asum" );
	deepEqual( Stem("asuntito"), "asuntit" );
	deepEqual( Stem("asunto"), "asunt" );
	deepEqual( Stem("asuntos"), "asunt" );
	deepEqual( Stem("asustada"), "asust" );
	deepEqual( Stem("asustado"), "asust" );
	deepEqual( Stem("asustar"), "asust" );
	deepEqual( Stem("asuste"), "asust" );
	deepEqual( Stem("asusten"), "asust" );
	deepEqual( Stem("at"), "at" );
	deepEqual( Stem("ataca"), "atac" );
	deepEqual( Stem("atacada"), "atac" );
	deepEqual( Stem("atacado"), "atac" );
	deepEqual( Stem("atacados"), "atac" );
	deepEqual( Stem("atacan"), "atac" );
	deepEqual( Stem("atacando"), "atac" );
	deepEqual( Stem("atacándolo"), "atac" );
	deepEqual( Stem("atacante"), "atac" );
	deepEqual( Stem("atacantes"), "atac" );
	deepEqual( Stem("atacar"), "atac" );
	deepEqual( Stem("atacará"), "atac" );
	deepEqual( Stem("atacarán"), "atac" );
	deepEqual( Stem("atacarlos"), "atac" );
	deepEqual( Stem("atacaron"), "atac" );
	deepEqual( Stem("atacas"), "atac" );
	deepEqual( Stem("atacó"), "atac" );
	deepEqual( Stem("atadas"), "atad" );
	deepEqual( Stem("atados"), "atad" );
	deepEqual( Stem("atanasio"), "atanasi" );
	deepEqual( Stem("atañe"), "atañ" );
	deepEqual( Stem("ataque"), "ataqu" );
	deepEqual( Stem("ataques"), "ataqu" );
	deepEqual( Stem("atardecer"), "atardec" );
	deepEqual( Stem("atarlos"), "atarl" );
	deepEqual( Stem("ataron"), "ataron" );
	deepEqual( Stem("atascadas"), "atasc" );
	deepEqual( Stem("atascón"), "atascon" );
	deepEqual( Stem("atasta"), "atast" );
	deepEqual( Stem("ataviado"), "atavi" );
	deepEqual( Stem("ataviados"), "atavi" );
	deepEqual( Stem("atávicos"), "atav" );
	deepEqual( Stem("atemorizante"), "atemoriz" );
	deepEqual( Stem("atención"), "atencion" );
	deepEqual( Stem("atenciones"), "atencion" );
	deepEqual( Stem("atendamos"), "atend" );
	deepEqual( Stem("atender"), "atend" );
	deepEqual( Stem("atenderá"), "atend" );
	deepEqual( Stem("atenderán"), "atend" );
	deepEqual( Stem("atenderían"), "atend" );
	deepEqual( Stem("atenderlos"), "atend" );
	deepEqual( Stem("atendía"), "atend" );
	deepEqual( Stem("atendida"), "atend" );
	deepEqual( Stem("atendidas"), "atend" );
	deepEqual( Stem("atendido"), "atend" );
	deepEqual( Stem("atendidos"), "atend" );
	deepEqual( Stem("atendieran"), "atend" );
	deepEqual( Stem("atendieron"), "atend" );
	deepEqual( Stem("atendió"), "atend" );
	deepEqual( Stem("atenemos"), "aten" );
	deepEqual( Stem("atenta"), "atent" );
	deepEqual( Stem("atentado"), "atent" );
	deepEqual( Stem("atentados"), "atent" );
	deepEqual( Stem("atentamente"), "atent" );
	deepEqual( Stem("atentar"), "atent" );
	deepEqual( Stem("atenten"), "atent" );
	deepEqual( Stem("atento"), "atent" );
	deepEqual( Stem("atentos"), "atent" );
	deepEqual( Stem("aterra"), "aterr" );
	deepEqual( Stem("aterrados"), "aterr" );
	deepEqual( Stem("aterrizaje"), "aterrizaj" );
	deepEqual( Stem("aterrorizada"), "aterroriz" );
	deepEqual( Stem("ates"), "ates" );
	deepEqual( Stem("athlone"), "athlon" );
	deepEqual( Stem("atiborran"), "atiborr" );
	deepEqual( Stem("atienda"), "atiend" );
	deepEqual( Stem("atiende"), "atiend" );
	deepEqual( Stem("atienden"), "atiend" );
	deepEqual( Stem("atinada"), "atin" );
	deepEqual( Stem("atinadamente"), "atin" );
	deepEqual( Stem("atinados"), "atin" );
	deepEqual( Stem("atípico"), "atip" );
	deepEqual( Stem("atlanta"), "atlant" );
	deepEqual( Stem("atlante"), "atlant" );
	deepEqual( Stem("atlantic"), "atlantic" );
	deepEqual( Stem("atlántico"), "atlant" );
	deepEqual( Stem("atlantis"), "atlantis" );
	deepEqual( Stem("atlantista"), "atlant" );
	deepEqual( Stem("atlantistas"), "atlant" );
	deepEqual( Stem("atlas"), "atlas" );
	deepEqual( Stem("atleta"), "atlet" );
	deepEqual( Stem("atletas"), "atlet" );
	deepEqual( Stem("atlético"), "atlet" );
	deepEqual( Stem("atletismo"), "atlet" );
	deepEqual( Stem("atmósfera"), "atmosfer" );
	deepEqual( Stem("atmosférica"), "atmosfer" );
	deepEqual( Stem("atmosférico"), "atmosfer" );
	deepEqual( Stem("atolladero"), "atollader" );
	deepEqual( Stem("atolondradas"), "atolondr" );
	deepEqual( Stem("atómica"), "atom" );
	deepEqual( Stem("atómicas"), "atom" );
	deepEqual( Stem("atomizador"), "atomiz" );
	deepEqual( Stem("atónitos"), "atonit" );
	deepEqual( Stem("atópica"), "atop" );
	deepEqual( Stem("atosigaba"), "atosig" );
	deepEqual( Stem("atp"), "atp" );
	deepEqual( Stem("atracados"), "atrac" );
	deepEqual( Stem("atracción"), "atraccion" );
	deepEqual( Stem("atraco"), "atrac" );
	deepEqual( Stem("atractiva"), "atract" );
	deepEqual( Stem("atractivas"), "atract" );
	deepEqual( Stem("atractivo"), "atract" );
	deepEqual( Stem("atractivos"), "atract" );
	deepEqual( Stem("atrae"), "atra" );
	deepEqual( Stem("atraen"), "atra" );
	deepEqual( Stem("atraer"), "atra" );
	deepEqual( Stem("atraídos"), "atraid" );
	deepEqual( Stem("atrajo"), "atraj" );
	deepEqual( Stem("atrapadas"), "atrap" );
	deepEqual( Stem("atrapado"), "atrap" );
	deepEqual( Stem("atrapados"), "atrap" );
	deepEqual( Stem("atrapan"), "atrap" );
	deepEqual( Stem("atrápelo"), "atrapel" );
	deepEqual( Stem("atrás"), "atras" );
	deepEqual( Stem("atrasaditos"), "atrasadit" );
	deepEqual( Stem("atrasado"), "atras" );
	deepEqual( Stem("atrasados"), "atras" );
	deepEqual( Stem("atrasarnos"), "atras" );
	deepEqual( Stem("atrasen"), "atras" );
	deepEqual( Stem("atraso"), "atras" );
	deepEqual( Stem("atravesado"), "atraves" );
	deepEqual( Stem("atravesaron"), "atraves" );
	deepEqual( Stem("atraviesa"), "atravies" );
	deepEqual( Stem("atraviesan"), "atravies" );
	deepEqual( Stem("atrevería"), "atrev" );
	deepEqual( Stem("atrevida"), "atrev" );
	deepEqual( Stem("atrevido"), "atrev" );
	deepEqual( Stem("atrevo"), "atrev" );
	deepEqual( Stem("atribuciones"), "atribu" );
	deepEqual( Stem("atribuible"), "atribu" );
	deepEqual( Stem("atribuibles"), "atribu" );
	deepEqual( Stem("atribuido"), "atribu" );
	deepEqual( Stem("atribuirse"), "atribu" );
	deepEqual( Stem("atribulado"), "atribul" );
	deepEqual( Stem("atribulados"), "atribul" );
	deepEqual( Stem("atributos"), "atribut" );
	deepEqual( Stem("atribuye"), "atribu" );
	deepEqual( Stem("atribuyó"), "atribu" );
	deepEqual( Stem("atrofia"), "atrofi" );
	deepEqual( Stem("atropella"), "atropell" );
	deepEqual( Stem("atropellado"), "atropell" );
	deepEqual( Stem("atropellar"), "atropell" );
	deepEqual( Stem("atropelló"), "atropell" );
	deepEqual( Stem("atte"), "atte" );
	deepEqual( Stem("atuendos"), "atuend" );
	deepEqual( Stem("atzcapotzalco"), "atzcapotzalc" );
	deepEqual( Stem("auburn"), "auburn" );
	deepEqual( Stem("audacia"), "audaci" );
	deepEqual( Stem("audaz"), "audaz" );
	deepEqual( Stem("audelo"), "audel" );
	deepEqual( Stem("audición"), "audicion" );
	deepEqual( Stem("audicionar"), "audicion" );
	deepEqual( Stem("audiencia"), "audienci" );
	deepEqual( Stem("audífonos"), "audifon" );
	deepEqual( Stem("audio"), "audi" );
	deepEqual( Stem("audiovisuales"), "audiovisual" );
	deepEqual( Stem("auditiva"), "audit" );
	deepEqual( Stem("auditivo"), "audit" );
	deepEqual( Stem("auditores"), "auditor" );
	deepEqual( Stem("auditoria"), "auditori" );
	deepEqual( Stem("auditoría"), "auditor" );
	deepEqual( Stem("auditorías"), "auditor" );
	deepEqual( Stem("auditorio"), "auditori" );
	deepEqual( Stem("auditorium"), "auditorium" );
	deepEqual( Stem("auge"), "aug" );
	deepEqual( Stem("augura"), "augur" );
	deepEqual( Stem("augurio"), "auguri" );
	deepEqual( Stem("augurios"), "auguri" );
	deepEqual( Stem("auguró"), "augur" );
	deepEqual( Stem("august"), "august" );
	deepEqual( Stem("augusto"), "august" );
	deepEqual( Stem("augustus"), "augustus" );
	deepEqual( Stem("aula"), "aul" );
	deepEqual( Stem("aulas"), "aul" );
	deepEqual( Stem("aumenta"), "aument" );
	deepEqual( Stem("aumentaba"), "aument" );
	deepEqual( Stem("aumentado"), "aument" );
	deepEqual( Stem("aumentar"), "aument" );
	deepEqual( Stem("aumentara"), "aument" );
	deepEqual( Stem("aumentará"), "aument" );
	deepEqual( Stem("aumentarán"), "aument" );
	deepEqual( Stem("aumentaron"), "aument" );
	deepEqual( Stem("aumente"), "aument" );
	deepEqual( Stem("aumenten"), "aument" );
	deepEqual( Stem("aumento"), "aument" );
	deepEqual( Stem("aumentó"), "aument" );
	deepEqual( Stem("aumentos"), "aument" );
	deepEqual( Stem("aun"), "aun" );
	deepEqual( Stem("aún"), "aun" );
	deepEqual( Stem("aunado"), "aun" );
	deepEqual( Stem("aunque"), "aunqu" );
	deepEqual( Stem("aurelio"), "aureli" );
	deepEqual( Stem("aureola"), "aureol" );
	deepEqual( Stem("auriazul"), "auriazul" );
	deepEqual( Stem("aurio"), "auri" );
	deepEqual( Stem("aurora"), "auror" );
	deepEqual( Stem("aurrera"), "aurrer" );
	deepEqual( Stem("aurrerá"), "aurr" );
	deepEqual( Stem("aurreras"), "aurrer" );
	deepEqual( Stem("ausencia"), "ausenci" );
	deepEqual( Stem("ausentarse"), "ausent" );
	deepEqual( Stem("ausente"), "ausent" );
	deepEqual( Stem("ausentes"), "ausent" );
	deepEqual( Stem("ausentismo"), "ausent" );
	deepEqual( Stem("auspicia"), "auspici" );
	deepEqual( Stem("auspiciadoras"), "auspici" );
	deepEqual( Stem("auspiciará"), "auspici" );
	deepEqual( Stem("auspicio"), "auspici" );
	deepEqual( Stem("auspicios"), "auspici" );
	deepEqual( Stem("austeras"), "auster" );
	deepEqual( Stem("austeridad"), "auster" );
	deepEqual( Stem("austero"), "auster" );
	deepEqual( Stem("austeros"), "auster" );
	deepEqual( Stem("austin"), "austin" );
	deepEqual( Stem("australia"), "australi" );
	deepEqual( Stem("australian"), "australi" );
	deepEqual( Stem("australianos"), "australian" );
	deepEqual( Stem("austriacos"), "austriac" );
	deepEqual( Stem("autárticos"), "autart" );
	deepEqual( Stem("auténticamente"), "autent" );
	deepEqual( Stem("auténtico"), "autent" );
	deepEqual( Stem("auténticos"), "autent" );
	deepEqual( Stem("auto"), "aut" );
	deepEqual( Stem("autoanálisis"), "autoanalisis" );
	deepEqual( Stem("autobalance"), "autobalanc" );
	deepEqual( Stem("autobiografía"), "autobiograf" );
	deepEqual( Stem("autobús"), "autobus" );
	deepEqual( Stem("autobuses"), "autobus" );
	deepEqual( Stem("autocalifica"), "autocalif" );
	deepEqual( Stem("autocalificación"), "autocalif" );
	deepEqual( Stem("autocalificada"), "autocalific" );
	deepEqual( Stem("autocalificar"), "autocalific" );
	deepEqual( Stem("autocontrol"), "autocontrol" );
	deepEqual( Stem("autocrítica"), "autocrit" );
	deepEqual( Stem("autódromo"), "autodrom" );
	deepEqual( Stem("autoestima"), "autoestim" );
	deepEqual( Stem("autoevaluación"), "autoevalu" );
	deepEqual( Stem("autofinanciamiento"), "autofinanci" );
	deepEqual( Stem("autofinanciamientos"), "autofinanci" );
	deepEqual( Stem("autogol"), "autogol" );
	deepEqual( Stem("autógrafos"), "autograf" );
	deepEqual( Stem("automática"), "automat" );
	deepEqual( Stem("automáticamente"), "automat" );
	deepEqual( Stem("automáticas"), "automat" );
	deepEqual( Stem("automático"), "automat" );
	deepEqual( Stem("automatización"), "automatiz" );
	deepEqual( Stem("automatizado"), "automatiz" );
	deepEqual( Stem("automatizados"), "automatiz" );
	deepEqual( Stem("automotor"), "automotor" );
	deepEqual( Stem("automotores"), "automotor" );
	deepEqual( Stem("automotrices"), "automotric" );
	deepEqual( Stem("automotriz"), "automotriz" );
	deepEqual( Stem("automovil"), "automovil" );
	deepEqual( Stem("automóvil"), "automovil" );
	deepEqual( Stem("automoviles"), "automovil" );
	deepEqual( Stem("automóviles"), "automovil" );
	deepEqual( Stem("automovilista"), "automovil" );
	deepEqual( Stem("automovilistas"), "automovil" );
	deepEqual( Stem("automovilística"), "automovilist" );
	deepEqual( Stem("automovilístico"), "automovilist" );
	deepEqual( Stem("automovilísticos"), "automovilist" );
	deepEqual( Stem("autónoma"), "autonom" );
	deepEqual( Stem("autonomía"), "autonom" );
	deepEqual( Stem("autónomo"), "autonom" );
	deepEqual( Stem("autónomos"), "autonom" );
	deepEqual( Stem("autopartes"), "autopart" );
	deepEqual( Stem("autopista"), "autop" );
	deepEqual( Stem("autopistas"), "autop" );
	deepEqual( Stem("autopsia"), "autopsi" );
	deepEqual( Stem("autor"), "autor" );
	deepEqual( Stem("autora"), "autor" );
	deepEqual( Stem("autoregulación"), "autoregul" );
	deepEqual( Stem("autores"), "autor" );
	deepEqual( Stem("autorice"), "autoric" );
	deepEqual( Stem("autoridad"), "autor" );
	deepEqual( Stem("autoridades"), "autor" );
	deepEqual( Stem("autoritaria"), "autoritari" );
	deepEqual( Stem("autoritario"), "autoritari" );
	deepEqual( Stem("autoritarismo"), "autoritar" );
	deepEqual( Stem("autoritarismos"), "autoritar" );
	deepEqual( Stem("autoriza"), "autoriz" );
	deepEqual( Stem("autorización"), "autoriz" );
	deepEqual( Stem("autorizaciones"), "autoriz" );
	deepEqual( Stem("autorizada"), "autoriz" );
	deepEqual( Stem("autorizadas"), "autoriz" );
	deepEqual( Stem("autorizado"), "autoriz" );
	deepEqual( Stem("autorizados"), "autoriz" );
	deepEqual( Stem("autorizan"), "autoriz" );
	deepEqual( Stem("autorizando"), "autoriz" );
	deepEqual( Stem("autorizar"), "autoriz" );
	deepEqual( Stem("autorizaran"), "autoriz" );
	deepEqual( Stem("autorizarse"), "autoriz" );
	deepEqual( Stem("autorizó"), "autoriz" );
	deepEqual( Stem("autos"), "aut" );
	deepEqual( Stem("autoservicio"), "autoservici" );
	deepEqual( Stem("autoservicios"), "autoservici" );
	deepEqual( Stem("autosuficiencia"), "autosuficient" );
	deepEqual( Stem("autosuficientes"), "autosuficient" );
	deepEqual( Stem("autotanques"), "autotanqu" );
	deepEqual( Stem("autotransporte"), "autotransport" );
	deepEqual( Stem("autotransportistas"), "autotransport" );
	deepEqual( Stem("autrey"), "autrey" );
	deepEqual( Stem("auxilia"), "auxili" );
	deepEqual( Stem("auxiliado"), "auxili" );
	deepEqual( Stem("auxiliados"), "auxili" );
	deepEqual( Stem("auxiliando"), "auxili" );
	deepEqual( Stem("auxiliar"), "auxili" );
	deepEqual( Stem("auxiliares"), "auxiliar" );
	deepEqual( Stem("auxiliarla"), "auxili" );
	deepEqual( Stem("auxiliaron"), "auxili" );
	deepEqual( Stem("auxilio"), "auxili" );
	deepEqual( Stem("auxilios"), "auxili" );
	deepEqual( Stem("av"), "av" );
	deepEqual( Stem("aval"), "aval" );
	deepEqual( Stem("avala"), "aval" );
	deepEqual( Stem("avalaban"), "aval" );
	deepEqual( Stem("avaladas"), "aval" );
	deepEqual( Stem("avalan"), "aval" );
	deepEqual( Stem("avalanchas"), "avalanch" );
	deepEqual( Stem("avalando"), "aval" );
	deepEqual( Stem("avalar"), "aval" );
	deepEqual( Stem("avalaremos"), "aval" );
	deepEqual( Stem("avalaron"), "aval" );
	deepEqual( Stem("avale"), "aval" );
	deepEqual( Stem("avalúo"), "avalu" );
	deepEqual( Stem("avalúos"), "avalu" );
	deepEqual( Stem("avance"), "avanc" );
	deepEqual( Stem("avances"), "avanc" );
	deepEqual( Stem("avanza"), "avanz" );
	deepEqual( Stem("avanzaba"), "avanz" );
	deepEqual( Stem("avanzada"), "avanz" );
	deepEqual( Stem("avanzadas"), "avanz" );
	deepEqual( Stem("avanzado"), "avanz" );
	deepEqual( Stem("avanzados"), "avanz" );
	deepEqual( Stem("avanzan"), "avanz" );
	deepEqual( Stem("avanzando"), "avanz" );
	deepEqual( Stem("avanzar"), "avanz" );
	deepEqual( Stem("avanzarán"), "avanz" );
	deepEqual( Stem("avanzaron"), "avanz" );
	deepEqual( Stem("avanzó"), "avanz" );
	deepEqual( Stem("avaro"), "avar" );
	deepEqual( Stem("ave"), "ave" );
	deepEqual( Stem("avecina"), "avecin" );
	deepEqual( Stem("avecinado"), "avecin" );
	deepEqual( Stem("avelar"), "avel" );
	deepEqual( Stem("avelina"), "avelin" );
	deepEqual( Stem("avenida"), "aven" );
	deepEqual( Stem("avenidas"), "aven" );
	deepEqual( Stem("aventaba"), "avent" );
	deepEqual( Stem("aventaja"), "aventaj" );
	deepEqual( Stem("aventó"), "avent" );
	deepEqual( Stem("aventura"), "aventur" );
	deepEqual( Stem("aventuradas"), "aventur" );
	deepEqual( Stem("aventurado"), "aventur" );
	deepEqual( Stem("aventuras"), "aventur" );
	deepEqual( Stem("avergonzado"), "avergonz" );
	deepEqual( Stem("avergüencen"), "avergüenc" );
	deepEqual( Stem("averiguación"), "averigu" );
	deepEqual( Stem("averiguaciones"), "averigu" );
	deepEqual( Stem("averiguando"), "averigu" );
	deepEqual( Stem("averiguar"), "averigu" );
	deepEqual( Stem("averió"), "aver" );
	deepEqual( Stem("averoes"), "aver" );
	deepEqual( Stem("aves"), "aves" );
	deepEqual( Stem("avestruz"), "avestruz" );
	deepEqual( Stem("aviación"), "aviacion" );
	deepEqual( Stem("aviacsa"), "aviacs" );
	deepEqual( Stem("aviadurismo"), "aviadur" );
	deepEqual( Stem("ávida"), "avid" );
	deepEqual( Stem("avidez"), "avidez" );
	deepEqual( Stem("ávido"), "avid" );
	deepEqual( Stem("avientan"), "avient" );
	deepEqual( Stem("avila"), "avil" );
	deepEqual( Stem("avilán"), "avilan" );
	deepEqual( Stem("avilés"), "aviles" );
	deepEqual( Stem("avío"), "avi" );
	deepEqual( Stem("avión"), "avion" );
	deepEqual( Stem("aviones"), "avion" );
	deepEqual( Stem("avisamos"), "avis" );
	deepEqual( Stem("avisará"), "avis" );
	deepEqual( Stem("avisarles"), "avis" );
	deepEqual( Stem("avisaron"), "avis" );
	deepEqual( Stem("aviso"), "avis" );
	deepEqual( Stem("avisó"), "avis" );
	deepEqual( Stem("avisora"), "avisor" );
	deepEqual( Stem("avocara"), "avoc" );
	deepEqual( Stem("awards"), "awards" );
	deepEqual( Stem("axilar"), "axil" );
	deepEqual( Stem("ay"), "ay" );
	deepEqual( Stem("ayacucho"), "ayacuch" );
	deepEqual( Stem("ayala"), "ayal" );
	deepEqual( Stem("ayarzagoitia"), "ayarzagoiti" );
	deepEqual( Stem("ayense"), "ayens" );
	deepEqual( Stem("ayer"), "ayer" );
	deepEqual( Stem("ayuda"), "ayud" );
	deepEqual( Stem("ayudaba"), "ayud" );
	deepEqual( Stem("ayudada"), "ayud" );
	deepEqual( Stem("ayudado"), "ayud" );
	deepEqual( Stem("ayudados"), "ayud" );
	deepEqual( Stem("ayudamos"), "ayud" );
	deepEqual( Stem("ayudan"), "ayud" );
	deepEqual( Stem("ayudando"), "ayud" );
	deepEqual( Stem("ayudándole"), "ayud" );
	deepEqual( Stem("ayudándose"), "ayud" );
	deepEqual( Stem("ayudante"), "ayud" );
	deepEqual( Stem("ayudantes"), "ayud" );
	deepEqual( Stem("ayudar"), "ayud" );
	deepEqual( Stem("ayudara"), "ayud" );
	deepEqual( Stem("ayudará"), "ayud" );
	deepEqual( Stem("ayudaran"), "ayud" );
	deepEqual( Stem("ayudaría"), "ayud" );
	deepEqual( Stem("ayudarle"), "ayud" );
	deepEqual( Stem("ayudarlo"), "ayud" );
	deepEqual( Stem("ayudarlos"), "ayud" );
	deepEqual( Stem("ayudaron"), "ayud" );
	deepEqual( Stem("ayude"), "ayud" );
	deepEqual( Stem("ayuden"), "ayud" );
	deepEqual( Stem("ayudó"), "ayud" );
	deepEqual( Stem("ayuntamiento"), "ayunt" );
	deepEqual( Stem("ayuntamientos"), "ayunt" );
	deepEqual( Stem("azáleas"), "azal" );
	deepEqual( Stem("azalia"), "azali" );
	deepEqual( Stem("azar"), "azar" );
	deepEqual( Stem("azcárraga"), "azcarrag" );
	deepEqual( Stem("azcua"), "azcu" );
	deepEqual( Stem("azhamar"), "azham" );
	deepEqual( Stem("azido"), "azid" );
	deepEqual( Stem("azorrillan"), "azorrill" );
	deepEqual( Stem("azotaba"), "azot" );
	deepEqual( Stem("azotado"), "azot" );
	deepEqual( Stem("azotando"), "azot" );
	deepEqual( Stem("azteca"), "aztec" );
	deepEqual( Stem("aztecas"), "aztec" );
	deepEqual( Stem("aztlán"), "aztlan" );
	deepEqual( Stem("azucar"), "azuc" );
	deepEqual( Stem("azúcar"), "azuc" );
	deepEqual( Stem("azúcares"), "azucar" );
	deepEqual( Stem("azucena"), "azucen" );
	deepEqual( Stem("azufre"), "azufr" );
	deepEqual( Stem("azul"), "azul" );
	deepEqual( Stem("azúl"), "azul" );
	deepEqual( Stem("azules"), "azul" );
	deepEqual( Stem("azulgrana"), "azulgran" );
	deepEqual( Stem("azulosos"), "azul" );
	deepEqual( Stem("azuma"), "azum" );
	deepEqual( Stem("azumah"), "azumah" );
	deepEqual( Stem("b"), "b" );
	deepEqual( Stem("bab"), "bab" );
	deepEqual( Stem("babalucas"), "babaluc" );
	deepEqual( Stem("babilonia"), "babiloni" );
	deepEqual( Stem("baby"), "baby" );
	deepEqual( Stem("baccantes"), "baccant" );
	deepEqual( Stem("bacco"), "bacc" );
	deepEqual( Stem("bacheando"), "bach" );
	deepEqual( Stem("bachilleres"), "bachiller" );
	deepEqual( Stem("bacteria"), "bacteri" );
	deepEqual( Stem("badmington"), "badmington" );
	deepEqual( Stem("bae"), "bae" );
	deepEqual( Stem("báez"), "baez" );
	deepEqual( Stem("bafsa"), "bafs" );
	deepEqual( Stem("bagaje"), "bagaj" );
	deepEqual( Stem("bagdad"), "bagd" );
	deepEqual( Stem("bahamas"), "baham" );
	deepEqual( Stem("bahía"), "bah" );
	deepEqual( Stem("baila"), "bail" );
	deepEqual( Stem("bailable"), "bailabl" );
	deepEqual( Stem("bailando"), "bail" );
	deepEqual( Stem("bailar"), "bail" );
	deepEqual( Stem("bailarines"), "bailarin" );
	deepEqual( Stem("bailarlos"), "bail" );
	deepEqual( Stem("baile"), "bail" );
	deepEqual( Stem("bailes"), "bail" );
	deepEqual( Stem("bailleres"), "bailler" );
	deepEqual( Stem("baja"), "baj" );
	deepEqual( Stem("bajacaliforniano"), "bajacalifornian" );
	deepEqual( Stem("bajadas"), "baj" );
	deepEqual( Stem("bajado"), "baj" );
	deepEqual( Stem("bajan"), "baj" );
	deepEqual( Stem("bajando"), "baj" );
	deepEqual( Stem("bajar"), "baj" );
	deepEqual( Stem("bajará"), "baj" );
	deepEqual( Stem("bajarle"), "baj" );
	deepEqual( Stem("bajaron"), "baj" );
	deepEqual( Stem("bajarse"), "baj" );
	deepEqual( Stem("bajas"), "baj" );
	deepEqual( Stem("baje"), "baj" );
	deepEqual( Stem("bajío"), "baji" );
	deepEqual( Stem("bajista"), "bajist" );
	deepEqual( Stem("bajo"), "baj" );
	deepEqual( Stem("bajó"), "baj" );
	deepEqual( Stem("bajonazo"), "bajonaz" );
	deepEqual( Stem("bajos"), "baj" );
	deepEqual( Stem("bala"), "bal" );
	deepEqual( Stem("balaceados"), "balac" );
	deepEqual( Stem("balacearlo"), "balac" );
	deepEqual( Stem("balaceó"), "balace" );
	deepEqual( Stem("balacera"), "balacer" );
	deepEqual( Stem("balaceras"), "balacer" );
	deepEqual( Stem("baladas"), "bal" );
	deepEqual( Stem("balance"), "balanc" );
	deepEqual( Stem("balanceadas"), "balanc" );
	deepEqual( Stem("balanceado"), "balanc" );
	deepEqual( Stem("balancear"), "balanc" );
	deepEqual( Stem("balanza"), "balanz" );
	deepEqual( Stem("balas"), "bal" );
	deepEqual( Stem("balazo"), "balaz" );
	deepEqual( Stem("balazos"), "balaz" );
	deepEqual( Stem("balbina"), "balbin" );
	deepEqual( Stem("balcanes"), "balcan" );
	deepEqual( Stem("balcón"), "balcon" );
	deepEqual( Stem("balcones"), "balcon" );
	deepEqual( Stem("balderas"), "balder" );
	deepEqual( Stem("baldío"), "baldi" );
	deepEqual( Stem("baldomero"), "baldomer" );
	deepEqual( Stem("baleada"), "bal" );
	deepEqual( Stem("balística"), "balist" );
	deepEqual( Stem("ball"), "ball" );
	deepEqual( Stem("ballard"), "ballard" );
	deepEqual( Stem("ballén"), "ballen" );
	deepEqual( Stem("ballena"), "ballen" );
	deepEqual( Stem("ballet"), "ballet" );
	deepEqual( Stem("balompié"), "balompi" );
	deepEqual( Stem("balón"), "balon" );
	deepEqual( Stem("balones"), "balon" );
	deepEqual( Stem("balsa"), "bals" );
	deepEqual( Stem("baltazar"), "baltaz" );
	deepEqual( Stem("baltimore"), "baltimor" );
	deepEqual( Stem("baluarte"), "baluart" );
	deepEqual( Stem("bamba"), "bamb" );
	deepEqual( Stem("bambalinas"), "bambalin" );
	deepEqual( Stem("baña"), "bañ" );
	deepEqual( Stem("bañada"), "bañ" );
	deepEqual( Stem("banamex"), "banamex" );
	deepEqual( Stem("bañan"), "bañ" );
	deepEqual( Stem("bananero"), "bananer" );
	deepEqual( Stem("bañar"), "bañ" );
	deepEqual( Stem("bañarse"), "bañ" );
	deepEqual( Stem("banca"), "banc" );
	deepEqual( Stem("bancaria"), "bancari" );
	deepEqual( Stem("bancarias"), "bancari" );
	deepEqual( Stem("bancario"), "bancari" );
	deepEqual( Stem("bancarios"), "bancari" );
	deepEqual( Stem("bancas"), "banc" );
	deepEqual( Stem("banco"), "banc" );
	deepEqual( Stem("bancomer"), "bancom" );
	deepEqual( Stem("bancomext"), "bancomext" );
	deepEqual( Stem("bancos"), "banc" );
	deepEqual( Stem("bancrecer"), "bancrec" );
	deepEqual( Stem("band"), "band" );
	deepEqual( Stem("banda"), "band" );
	deepEqual( Stem("bandas"), "band" );
	deepEqual( Stem("bandazos"), "bandaz" );
	deepEqual( Stem("bandeja"), "bandej" );
	deepEqual( Stem("bandera"), "bander" );
	deepEqual( Stem("banderas"), "bander" );
	deepEqual( Stem("banderazo"), "banderaz" );
	deepEqual( Stem("banderillas"), "banderill" );
	deepEqual( Stem("banderillero"), "banderiller" );
	deepEqual( Stem("banderín"), "banderin" );
	deepEqual( Stem("banderita"), "banderit" );
	deepEqual( Stem("bandidos"), "band" );
	deepEqual( Stem("bando"), "band" );
	deepEqual( Stem("bandos"), "band" );
	deepEqual( Stem("bank"), "bank" );
	deepEqual( Stem("bankers"), "bankers" );
	deepEqual( Stem("banking"), "banking" );
	deepEqual( Stem("bankshares"), "bankshar" );
	deepEqual( Stem("baño"), "bañ" );
	deepEqual( Stem("banoro"), "banor" );
	deepEqual( Stem("baños"), "bañ" );
	deepEqual( Stem("banpaís"), "banp" );
	deepEqual( Stem("banquero"), "banquer" );
	deepEqual( Stem("banqueros"), "banquer" );
	deepEqual( Stem("banqueta"), "banquet" );
	deepEqual( Stem("banquetas"), "banquet" );
	deepEqual( Stem("banquillo"), "banquill" );
	deepEqual( Stem("banrural"), "banrural" );
	deepEqual( Stem("banxico"), "banxic" );
	deepEqual( Stem("bar"), "bar" );
	deepEqual( Stem("barahona"), "barahon" );
	deepEqual( Stem("barajas"), "baraj" );
	deepEqual( Stem("baranda"), "barand" );
	deepEqual( Stem("barandal"), "barandal" );
	deepEqual( Stem("barandilla"), "barandill" );
	deepEqual( Stem("barata"), "barat" );
	deepEqual( Stem("baratas"), "barat" );
	deepEqual( Stem("barato"), "barat" );
	deepEqual( Stem("barba"), "barb" );
	deepEqual( Stem("barbacoa"), "barbaco" );
	deepEqual( Stem("barbados"), "barb" );
	deepEqual( Stem("bárbara"), "barb" );
	deepEqual( Stem("barbarabbe"), "barbarabb" );
	deepEqual( Stem("barbaridades"), "barbar" );
	deepEqual( Stem("barbarie"), "barbari" );
	deepEqual( Stem("barberena"), "barberen" );
	deepEqual( Stem("barbosa"), "barbos" );
	deepEqual( Stem("barcelona"), "barcelon" );
	deepEqual( Stem("barceloneses"), "barcelones" );
	deepEqual( Stem("barco"), "barc" );
	deepEqual( Stem("barcos"), "barc" );
	deepEqual( Stem("barda"), "bard" );
	deepEqual( Stem("bardas"), "bard" );
	deepEqual( Stem("bares"), "bar" );
	deepEqual( Stem("barinas"), "barin" );
	deepEqual( Stem("barocio"), "baroci" );
	deepEqual( Stem("barón"), "baron" );
	deepEqual( Stem("barra"), "barr" );
	deepEqual( Stem("barragán"), "barragan" );
	deepEqual( Stem("barranca"), "barranc" );
	deepEqual( Stem("barranco"), "barranc" );
	deepEqual( Stem("barras"), "barr" );
	deepEqual( Stem("barre"), "barr" );
	deepEqual( Stem("barreira"), "barreir" );
	deepEqual( Stem("barrenechea"), "barreneche" );
	deepEqual( Stem("barrera"), "barrer" );
	deepEqual( Stem("barreras"), "barrer" );
	deepEqual( Stem("barrerse"), "barr" );
	deepEqual( Stem("barres"), "barr" );
	deepEqual( Stem("barreto"), "barret" );
	deepEqual( Stem("barrett"), "barrett" );
	deepEqual( Stem("barría"), "barr" );
	deepEqual( Stem("barrial"), "barrial" );
	deepEqual( Stem("barriéndose"), "barr" );
	deepEqual( Stem("barrientos"), "barrient" );
	deepEqual( Stem("barrileras"), "barriler" );
	deepEqual( Stem("barriles"), "barril" );
	deepEqual( Stem("barrio"), "barri" );
	deepEqual( Stem("barrios"), "barri" );
	deepEqual( Stem("barro"), "barr" );
	deepEqual( Stem("barroca"), "barroc" );
	deepEqual( Stem("barroco"), "barroc" );
	deepEqual( Stem("barros"), "barr" );
	deepEqual( Stem("barrote"), "barrot" );
	deepEqual( Stem("barry"), "barry" );
	deepEqual( Stem("bart"), "bart" );
	deepEqual( Stem("bartlett"), "bartlett" );
	deepEqual( Stem("bartletts"), "bartletts" );
	deepEqual( Stem("bartolo"), "bartol" );
	deepEqual( Stem("basa"), "bas" );
	deepEqual( Stem("basaba"), "bas" );
	deepEqual( Stem("basada"), "bas" );
	deepEqual( Stem("basadas"), "bas" );
	deepEqual( Stem("basado"), "bas" );
	deepEqual( Stem("basados"), "bas" );
	deepEqual( Stem("basamos"), "bas" );
	deepEqual( Stem("basándose"), "bas" );
	deepEqual( Stem("basañez"), "basañez" );
	deepEqual( Stem("basáñez"), "basañez" );
	deepEqual( Stem("basar"), "bas" );
	deepEqual( Stem("basará"), "bas" );
	deepEqual( Stem("basarán"), "bas" );
	deepEqual( Stem("basarse"), "bas" );
	deepEqual( Stem("basave"), "basav" );
	deepEqual( Stem("basay"), "basay" );
	deepEqual( Stem("basch"), "basch" );
	deepEqual( Stem("báscula"), "bascul" );
	deepEqual( Stem("básculas"), "bascul" );
	deepEqual( Stem("base"), "bas" );
	deepEqual( Stem("basen"), "bas" );
	deepEqual( Stem("bases"), "bas" );
	deepEqual( Stem("básica"), "basic" );
	deepEqual( Stem("básicamente"), "basic" );
	deepEqual( Stem("basicas"), "basic" );
	deepEqual( Stem("básicas"), "basic" );
	deepEqual( Stem("básico"), "basic" );
	deepEqual( Stem("básicos"), "basic" );
	deepEqual( Stem("basile"), "basil" );
	deepEqual( Stem("basílica"), "basil" );
	deepEqual( Stem("basilio"), "basili" );
	deepEqual( Stem("basó"), "bas" );
	deepEqual( Stem("basquetbol"), "basquetbol" );
	deepEqual( Stem("basset"), "basset" );
	deepEqual( Stem("basta"), "bast" );
	deepEqual( Stem("bastado"), "bast" );
	deepEqual( Stem("bastan"), "bast" );
	deepEqual( Stem("bastante"), "bastant" );
	deepEqual( Stem("bastantes"), "bastant" );
	deepEqual( Stem("bastaría"), "bast" );
	deepEqual( Stem("baste"), "bast" );
	deepEqual( Stem("bastó"), "bast" );
	deepEqual( Stem("basualdo"), "basuald" );
	deepEqual( Stem("basura"), "basur" );
	deepEqual( Stem("basuras"), "basur" );
	deepEqual( Stem("basurero"), "basurer" );
	deepEqual( Stem("basureros"), "basurer" );
	deepEqual( Stem("bat"), "bat" );
	deepEqual( Stem("bata"), "bat" );
	deepEqual( Stem("batalla"), "batall" );
	deepEqual( Stem("batallan"), "batall" );
	deepEqual( Stem("batallar"), "batall" );
	deepEqual( Stem("batallaron"), "batall" );
	deepEqual( Stem("batallas"), "batall" );
	deepEqual( Stem("batallen"), "batall" );
	deepEqual( Stem("batalló"), "batall" );
	deepEqual( Stem("batallón"), "batallon" );
	deepEqual( Stem("batas"), "bat" );
	deepEqual( Stem("bate"), "bat" );
	deepEqual( Stem("bateador"), "bateador" );
	deepEqual( Stem("bateadores"), "bateador" );
	deepEqual( Stem("bateo"), "bate" );
	deepEqual( Stem("bateó"), "bate" );
	deepEqual( Stem("batería"), "bat" );
	deepEqual( Stem("baterías"), "bat" );
	deepEqual( Stem("baterista"), "bater" );
	deepEqual( Stem("batieron"), "bat" );
	deepEqual( Stem("bátik"), "batik" );
	deepEqual( Stem("batir"), "bat" );
	deepEqual( Stem("batis"), "batis" );
	deepEqual( Stem("batistuta"), "batistut" );
	deepEqual( Stem("bátiz"), "batiz" );
	deepEqual( Stem("batocletti"), "batocletti" );
	deepEqual( Stem("battaglia"), "battagli" );
	deepEqual( Stem("baudelaire"), "baudelair" );
	deepEqual( Stem("bautista"), "bautist" );
	deepEqual( Stem("bautizado"), "bautiz" );
	deepEqual( Stem("bautizaría"), "bautiz" );
	deepEqual( Stem("bautizo"), "bautiz" );
	deepEqual( Stem("bautizos"), "bautiz" );
	deepEqual( Stem("bayerische"), "bayerisch" );
	deepEqual( Stem("baz"), "baz" );
	deepEqual( Stem("bazaine"), "bazain" );
	deepEqual( Stem("bazaldúa"), "bazaldu" );
	deepEqual( Stem("bazán"), "bazan" );
	deepEqual( Stem("bazar"), "baz" );
	deepEqual( Stem("bazdresch"), "bazdresch" );
	deepEqual( Stem("bc"), "bc" );
	deepEqual( Stem("bch"), "bch" );
	deepEqual( Stem("beach"), "beach" );
	deepEqual( Stem("beamish"), "beamish" );
	deepEqual( Stem("beatriz"), "beatriz" );
	deepEqual( Stem("beauvais"), "beauvais" );
	deepEqual( Stem("beauvaisis"), "beauvaisis" );
	deepEqual( Stem("beaver"), "beav" );
	deepEqual( Stem("bebé"), "beb" );
	deepEqual( Stem("bebedero"), "bebeder" );
	deepEqual( Stem("beber"), "beb" );
	deepEqual( Stem("bebeto"), "bebet" );
	deepEqual( Stem("bebidas"), "beb" );
	deepEqual( Stem("bebió"), "beb" );
	deepEqual( Stem("bebita"), "bebit" );
	deepEqual( Stem("bebop"), "bebop" );
	deepEqual( Stem("beca"), "bec" );
	deepEqual( Stem("becado"), "bec" );
	deepEqual( Stem("becario"), "becari" );
	deepEqual( Stem("becarios"), "becari" );
	deepEqual( Stem("becas"), "bec" );
	deepEqual( Stem("becerra"), "becerr" );
	deepEqual( Stem("becerril"), "becerril" );
	deepEqual( Stem("becker"), "beck" );
	deepEqual( Stem("becthel"), "becthel" );
	deepEqual( Stem("bedoya"), "bedoy" );
	deepEqual( Stem("beethoven"), "beethov" );
	deepEqual( Stem("beginning"), "beginning" );
	deepEqual( Stem("begiristain"), "begiristain" );
	deepEqual( Stem("begoña"), "begoñ" );
	deepEqual( Stem("begonia"), "begoni" );
	deepEqual( Stem("beige"), "beig" );
	deepEqual( Stem("beirut"), "beirut" );
	deepEqual( Stem("beisbol"), "beisbol" );
	deepEqual( Stem("beisbolero"), "beisboler" );
	deepEqual( Stem("beisbolistas"), "beisbol" );
	deepEqual( Stem("beisbolísticos"), "beisbolist" );
	deepEqual( Stem("beisborama"), "beisboram" );
	deepEqual( Stem("bejarano"), "bejaran" );
	deepEqual( Stem("belair"), "bel" );
	deepEqual( Stem("belaúnde"), "belaund" );
	deepEqual( Stem("belden"), "beld" );
	deepEqual( Stem("belén"), "belen" );
	deepEqual( Stem("belga"), "belg" );
	deepEqual( Stem("belgas"), "belg" );
	deepEqual( Stem("bélgica"), "belgic" );
	deepEqual( Stem("bélica"), "belic" );
	deepEqual( Stem("belice"), "belic" );
	deepEqual( Stem("beliceño"), "beliceñ" );
	deepEqual( Stem("belicosos"), "belic" );
	deepEqual( Stem("bella"), "bell" );
	deepEqual( Stem("bellamente"), "bell" );
	deepEqual( Stem("bellas"), "bell" );
	deepEqual( Stem("beller"), "bell" );
	deepEqual( Stem("belleza"), "bellez" );
	deepEqual( Stem("bello"), "bell" );
	deepEqual( Stem("bellone"), "bellon" );
	deepEqual( Stem("belmont"), "belmont" );
	deepEqual( Stem("ben"), "ben" );
	deepEqual( Stem("benavente"), "benavent" );
	deepEqual( Stem("benavides"), "benavid" );
	deepEqual( Stem("benchmark"), "benchmark" );
	deepEqual( Stem("benchmarking"), "benchmarking" );
	deepEqual( Stem("benchmarks"), "benchmarks" );
	deepEqual( Stem("bend"), "bend" );
	deepEqual( Stem("bendesky"), "bendesky" );
	deepEqual( Stem("bendición"), "bendicion" );
	deepEqual( Stem("bendiciones"), "bendicion" );
	deepEqual( Stem("bendijo"), "bendij" );
	deepEqual( Stem("bendita"), "bendit" );
	deepEqual( Stem("bendito"), "bendit" );
	deepEqual( Stem("beneficencia"), "beneficent" );
	deepEqual( Stem("beneficia"), "benefici" );
	deepEqual( Stem("beneficiada"), "benefici" );
	deepEqual( Stem("beneficiado"), "benefici" );
	deepEqual( Stem("beneficiados"), "benefici" );
	deepEqual( Stem("benefician"), "benefici" );
	deepEqual( Stem("beneficiando"), "benefici" );
	deepEqual( Stem("beneficiar"), "benefici" );
	deepEqual( Stem("beneficiará"), "benefici" );
	deepEqual( Stem("beneficiarán"), "benefici" );
	deepEqual( Stem("beneficiaria"), "beneficiari" );
	deepEqual( Stem("beneficiaría"), "benefici" );
	deepEqual( Stem("beneficien"), "benefici" );
	deepEqual( Stem("beneficio"), "benefici" );
	deepEqual( Stem("benefició"), "benefic" );
	deepEqual( Stem("beneficios"), "benefici" );
	deepEqual( Stem("beneficiosas"), "benefici" );
	deepEqual( Stem("beneficioso"), "benefici" );
	deepEqual( Stem("beneplácito"), "beneplacit" );
	deepEqual( Stem("benevolencia"), "benevolent" );
	deepEqual( Stem("bengoa"), "bengo" );
	deepEqual( Stem("benigno"), "benign" );
	deepEqual( Stem("benítez"), "benitez" );
	deepEqual( Stem("benito"), "benit" );
	deepEqual( Stem("benjamín"), "benjamin" );
	deepEqual( Stem("bennis"), "bennis" );
	deepEqual( Stem("benotto"), "benott" );
	deepEqual( Stem("benz"), "benz" );
	deepEqual( Stem("benzeno"), "benzen" );
	deepEqual( Stem("berchelmann"), "berchelmann" );
	deepEqual( Stem("beregovoy"), "beregovoy" );
	deepEqual( Stem("berenice"), "berenic" );
	deepEqual( Stem("beresford"), "beresford" );
	deepEqual( Stem("bérgamo"), "bergam" );
	deepEqual( Stem("bergerac"), "bergerac" );
	deepEqual( Stem("berges"), "berg" );
	deepEqual( Stem("beria"), "beri" );
	deepEqual( Stem("berlanga"), "berlang" );
	deepEqual( Stem("berlín"), "berlin" );
	deepEqual( Stem("berlinguer"), "berlingu" );
	deepEqual( Stem("berman"), "berm" );
	deepEqual( Stem("bermudas"), "bermud" );
	deepEqual( Stem("bermúdez"), "bermudez" );
	deepEqual( Stem("bernabe"), "bernab" );
	deepEqual( Stem("bernabé"), "bernab" );
	deepEqual( Stem("bernabeu"), "bernabeu" );
	deepEqual( Stem("bernal"), "bernal" );
	deepEqual( Stem("bernanos"), "bernan" );
	deepEqual( Stem("bernard"), "bernard" );
	deepEqual( Stem("bernardino"), "bernardin" );
	deepEqual( Stem("bernardo"), "bernard" );
	deepEqual( Stem("bernuncio"), "bernunci" );
	deepEqual( Stem("berrinche"), "berrinch" );
	deepEqual( Stem("berrinchito"), "berrinchit" );
	deepEqual( Stem("berrueto"), "berruet" );
	deepEqual( Stem("berta"), "bert" );
	deepEqual( Stem("berumen"), "berum" );
	deepEqual( Stem("besando"), "bes" );
	deepEqual( Stem("besar"), "bes" );
	deepEqual( Stem("besara"), "bes" );
	deepEqual( Stem("besarla"), "bes" );
	deepEqual( Stem("besarle"), "bes" );
	deepEqual( Stem("bese"), "bes" );
	deepEqual( Stem("beso"), "bes" );
	deepEqual( Stem("besó"), "bes" );
	deepEqual( Stem("best"), "best" );
	deepEqual( Stem("bestia"), "besti" );
	deepEqual( Stem("bestias"), "besti" );
	deepEqual( Stem("betancourt"), "betancourt" );
	deepEqual( Stem("betania"), "betani" );
	deepEqual( Stem("bi"), "bi" );
	deepEqual( Stem("bianchezi"), "bianchezi" );
	deepEqual( Stem("bianchini"), "bianchini" );
	deepEqual( Stem("biberón"), "biberon" );
	deepEqual( Stem("bibi"), "bibi" );
	deepEqual( Stem("biblia"), "bibli" );
	deepEqual( Stem("biblias"), "bibli" );
	deepEqual( Stem("bíblica"), "biblic" );
	deepEqual( Stem("bíblico"), "biblic" );
	deepEqual( Stem("bibliografía"), "bibliograf" );
	deepEqual( Stem("bibliográficas"), "bibliograf" );
	deepEqual( Stem("bibliográfico"), "bibliograf" );
	deepEqual( Stem("biblioteca"), "bibliotec" );
	deepEqual( Stem("bibliotecas"), "bibliotec" );
	deepEqual( Stem("bicampeón"), "bicampeon" );
	deepEqual( Stem("bicentenario"), "bicentenari" );
	deepEqual( Stem("bíceps"), "biceps" );
	deepEqual( Stem("bichos"), "bich" );
	deepEqual( Stem("bicicleta"), "biciclet" );
	deepEqual( Stem("bicicletas"), "biciclet" );
	deepEqual( Stem("bien"), "bien" );
	deepEqual( Stem("bienal"), "bienal" );
	deepEqual( Stem("bienales"), "bienal" );
	deepEqual( Stem("bienes"), "bien" );
	deepEqual( Stem("bienestar"), "bienest" );
	deepEqual( Stem("bienio"), "bieni" );
	deepEqual( Stem("bienvenida"), "bienven" );
	deepEqual( Stem("bienvenidas"), "bienven" );
	deepEqual( Stem("bienvenido"), "bienven" );
	deepEqual( Stem("bienvenidos"), "bienven" );
	deepEqual( Stem("bierhaus"), "bierhaus" );
	deepEqual( Stem("big"), "big" );
	deepEqual( Stem("bigfoot"), "bigfoot" );
	deepEqual( Stem("bigleaguers"), "bigleaguers" );
	deepEqual( Stem("bigote"), "bigot" );
	deepEqual( Stem("bigotes"), "bigot" );
	deepEqual( Stem("bike"), "bik" );
	deepEqual( Stem("bilardo"), "bilard" );
	deepEqual( Stem("bilateral"), "bilateral" );
	deepEqual( Stem("bilaterales"), "bilateral" );
	deepEqual( Stem("bilateralmente"), "bilateral" );
	deepEqual( Stem("bilbao"), "bilba" );
	deepEqual( Stem("bilimek"), "bilimek" );
	deepEqual( Stem("bill"), "bill" );
	deepEqual( Stem("billar"), "bill" );
	deepEqual( Stem("billete"), "billet" );
	deepEqual( Stem("billetes"), "billet" );
	deepEqual( Stem("billón"), "billon" );
	deepEqual( Stem("billones"), "billon" );
	deepEqual( Stem("bills"), "bills" );
	deepEqual( Stem("billy"), "billy" );
	deepEqual( Stem("bin"), "bin" );
	deepEqual( Stem("binacional"), "binacional" );
	deepEqual( Stem("bing"), "bing" );
	deepEqual( Stem("biodegradable"), "biodegrad" );
	deepEqual( Stem("biodegradables"), "biodegrad" );
	deepEqual( Stem("biología"), "biolog" );
	deepEqual( Stem("biológica"), "biolog" );
	deepEqual( Stem("biológico"), "biolog" );
	deepEqual( Stem("biólogo"), "biolog" );
	deepEqual( Stem("biondi"), "biondi" );
	deepEqual( Stem("biotecnología"), "biotecnolog" );
	deepEqual( Stem("biotecnológica"), "biotecnolog" );
	deepEqual( Stem("bióticos"), "biotic" );
	deepEqual( Stem("bipolar"), "bipol" );
	deepEqual( Stem("bird"), "bird" );
	deepEqual( Stem("birks"), "birks" );
	deepEqual( Stem("birlos"), "birl" );
	deepEqual( Stem("bis"), "bis" );
	deepEqual( Stem("bisabuela"), "bisabuel" );
	deepEqual( Stem("biscaine"), "biscain" );
	deepEqual( Stem("bismarck"), "bismarck" );
	deepEqual( Stem("bissonnette"), "bissonnett" );
	deepEqual( Stem("biznietos"), "bizniet" );
	deepEqual( Stem("bjoern"), "bjoern" );
	deepEqual( Stem("black"), "black" );
	deepEqual( Stem("blackhawks"), "blackhawks" );
	deepEqual( Stem("bladimir"), "bladim" );
	deepEqual( Stem("blaise"), "blais" );
	deepEqual( Stem("blanca"), "blanc" );
	deepEqual( Stem("blancas"), "blanc" );
	deepEqual( Stem("blanco"), "blanc" );
	deepEqual( Stem("blancos"), "blanc" );
	deepEqual( Stem("blancq"), "blancq" );
	deepEqual( Stem("blandir"), "bland" );
	deepEqual( Stem("blando"), "bland" );
	deepEqual( Stem("blanquiazul"), "blanquiazul" );
	deepEqual( Stem("blanquiazules"), "blanquiazul" );
	deepEqual( Stem("blanquita"), "blanquit" );
	deepEqual( Stem("blas"), "blas" );
	deepEqual( Stem("blasa"), "blas" );
	deepEqual( Stem("blasco"), "blasc" );
	deepEqual( Stem("blasio"), "blasi" );
	deepEqual( Stem("blasón"), "blason" );
	deepEqual( Stem("blatidos"), "blat" );
	deepEqual( Stem("block"), "block" );
	deepEqual( Stem("blocker"), "block" );
	deepEqual( Stem("bloque"), "bloqu" );
	deepEqual( Stem("bloquea"), "bloque" );
	deepEqual( Stem("bloqueadas"), "bloqu" );
	deepEqual( Stem("bloqueado"), "bloqu" );
	deepEqual( Stem("bloqueadoras"), "bloqueador" );
	deepEqual( Stem("bloqueados"), "bloqu" );
	deepEqual( Stem("bloquean"), "bloqu" );
	deepEqual( Stem("bloqueando"), "bloqu" );
	deepEqual( Stem("bloquear"), "bloqu" );
	deepEqual( Stem("bloquearon"), "bloqu" );
	deepEqual( Stem("bloqueo"), "bloque" );
	deepEqual( Stem("bloqueos"), "bloque" );
	deepEqual( Stem("bloques"), "bloqu" );
	deepEqual( Stem("bloxcom"), "bloxcom" );
	deepEqual( Stem("blue"), "blu" );
	deepEqual( Stem("blues"), "blu" );
	deepEqual( Stem("bm"), "bm" );
	deepEqual( Stem("bmw"), "bmw" );
	deepEqual( Stem("bob"), "bob" );
	deepEqual( Stem("bobby"), "bobby" );
	deepEqual( Stem("bobina"), "bobin" );
	deepEqual( Stem("boca"), "boc" );
	deepEqual( Stem("bocanadas"), "bocan" );
	deepEqual( Stem("bocanegra"), "bocanegr" );
	deepEqual( Stem("bocas"), "boc" );
	deepEqual( Stem("bochini"), "bochini" );
	deepEqual( Stem("bocho"), "boch" );
	deepEqual( Stem("bochornos"), "bochorn" );
	deepEqual( Stem("bochos"), "boch" );
	deepEqual( Stem("bocina"), "bocin" );
	deepEqual( Stem("bocinas"), "bocin" );
	deepEqual( Stem("boda"), "bod" );
	deepEqual( Stem("bodas"), "bod" );
	deepEqual( Stem("bodega"), "bodeg" );
	deepEqual( Stem("bodegas"), "bodeg" );
	deepEqual( Stem("bofetón"), "bofeton" );
	deepEqual( Stem("boga"), "bog" );
	deepEqual( Stem("bogota"), "bogot" );
	deepEqual( Stem("bogotá"), "bogot" );
	deepEqual( Stem("bogue"), "bog" );
	deepEqual( Stem("bohemio"), "bohemi" );
	deepEqual( Stem("boicot"), "boicot" );
	deepEqual( Stem("boicotearlas"), "boicot" );
	deepEqual( Stem("boinas"), "boin" );
	deepEqual( Stem("bola"), "bol" );
	deepEqual( Stem("bolaños"), "bolañ" );
	deepEqual( Stem("bolas"), "bol" );
	deepEqual( Stem("boleados"), "bol" );
	deepEqual( Stem("boleando"), "bol" );
	deepEqual( Stem("boleo"), "bole" );
	deepEqual( Stem("boleta"), "bolet" );
	deepEqual( Stem("boletas"), "bolet" );
	deepEqual( Stem("boletín"), "boletin" );
	deepEqual( Stem("boletines"), "boletin" );
	deepEqual( Stem("boleto"), "bolet" );
	deepEqual( Stem("boletos"), "bolet" );
	deepEqual( Stem("bolillo"), "bolill" );
	deepEqual( Stem("bolillos"), "bolill" );
	deepEqual( Stem("bolitas"), "bolit" );
	deepEqual( Stem("bolivar"), "boliv" );
	deepEqual( Stem("bolívar"), "boliv" );
	deepEqual( Stem("bolivia"), "bolivi" );
	deepEqual( Stem("boloña"), "boloñ" );
	deepEqual( Stem("bolsa"), "bols" );
	deepEqual( Stem("bolsas"), "bols" );
	deepEqual( Stem("bolsillo"), "bolsill" );
	deepEqual( Stem("bolsillos"), "bolsill" );
	deepEqual( Stem("bolso"), "bols" );
	deepEqual( Stem("bomba"), "bomb" );
	deepEqual( Stem("bombardeado"), "bombard" );
	deepEqual( Stem("bombardeos"), "bombarde" );
	deepEqual( Stem("bombas"), "bomb" );
	deepEqual( Stem("bombear"), "bomb" );
	deepEqual( Stem("bombeo"), "bombe" );
	deepEqual( Stem("bomberos"), "bomber" );
	deepEqual( Stem("bondades"), "bondad" );
	deepEqual( Stem("bondadosas"), "bondad" );
	deepEqual( Stem("bondadoso"), "bondad" );
	deepEqual( Stem("bone"), "bon" );
	deepEqual( Stem("bonifacio"), "bonifaci" );
	deepEqual( Stem("bonilla"), "bonill" );
	deepEqual( Stem("bonita"), "bonit" );
	deepEqual( Stem("bonitas"), "bonit" );
	deepEqual( Stem("bonito"), "bonit" );
	deepEqual( Stem("bonitos"), "bonit" );
	deepEqual( Stem("bonn"), "bonn" );
	deepEqual( Stem("bonos"), "bon" );
	deepEqual( Stem("boom"), "boom" );
	deepEqual( Stem("boomers"), "boomers" );
	deepEqual( Stem("borax"), "borax" );
	deepEqual( Stem("bordadores"), "bordador" );
	deepEqual( Stem("bordados"), "bord" );
	deepEqual( Stem("borde"), "bord" );
	deepEqual( Stem("bordo"), "bord" );
	deepEqual( Stem("bordos"), "bord" );
	deepEqual( Stem("borge"), "borg" );
	deepEqual( Stem("boricua"), "boricu" );
	deepEqual( Stem("boris"), "boris" );
	deepEqual( Stem("borja"), "borj" );
	deepEqual( Stem("borla"), "borl" );
	deepEqual( Stem("bormann"), "bormann" );
	deepEqual( Stem("borrables"), "borrabl" );
	deepEqual( Stem("borrachín"), "borrachin" );
	deepEqual( Stem("borrachito"), "borrachit" );
	deepEqual( Stem("borracho"), "borrach" );
	deepEqual( Stem("borrador"), "borrador" );
	deepEqual( Stem("borraja"), "borraj" );
	deepEqual( Stem("borrando"), "borr" );
	deepEqual( Stem("borrar"), "borr" );
	deepEqual( Stem("borrego"), "borreg" );
	deepEqual( Stem("borregos"), "borreg" );
	deepEqual( Stem("borreguitos"), "borreguit" );
	deepEqual( Stem("borrero"), "borrer" );
	deepEqual( Stem("borroso"), "borros" );
	deepEqual( Stem("borsalino"), "borsalin" );
	deepEqual( Stem("borssum"), "borssum" );
	deepEqual( Stem("bosch"), "bosch" );
	deepEqual( Stem("boscosos"), "boscos" );
	deepEqual( Stem("bosnia"), "bosni" );
	deepEqual( Stem("bosnio"), "bosni" );
	deepEqual( Stem("bosque"), "bosqu" );
	deepEqual( Stem("bosquejarse"), "bosquej" );
	deepEqual( Stem("bosques"), "bosqu" );
	deepEqual( Stem("bossier"), "bossi" );
	deepEqual( Stem("boston"), "boston" );
	deepEqual( Stem("bostoniano"), "bostonian" );
	deepEqual( Stem("bota"), "bot" );
	deepEqual( Stem("botana"), "botan" );
	deepEqual( Stem("botanero"), "botaner" );
	deepEqual( Stem("botaneros"), "botaner" );
	deepEqual( Stem("botas"), "bot" );
	deepEqual( Stem("bote"), "bot" );
	deepEqual( Stem("botella"), "botell" );
	deepEqual( Stem("botellas"), "botell" );
	deepEqual( Stem("botello"), "botell" );
	deepEqual( Stem("botes"), "bot" );
	deepEqual( Stem("botín"), "botin" );
	deepEqual( Stem("botines"), "botin" );
	deepEqual( Stem("botón"), "boton" );
	deepEqual( Stem("botones"), "boton" );
	deepEqual( Stem("bougthon"), "bougthon" );
	deepEqual( Stem("boulevard"), "boulevard" );
	deepEqual( Stem("bourbon"), "bourbon" );
	deepEqual( Stem("bours"), "bours" );
	deepEqual( Stem("boutique"), "boutiqu" );
	deepEqual( Stem("boutiques"), "boutiqu" );
	deepEqual( Stem("boutros"), "boutr" );
	deepEqual( Stem("bovary"), "bovary" );
	deepEqual( Stem("bovino"), "bovin" );
	deepEqual( Stem("bowman"), "bowm" );
	deepEqual( Stem("bowthorpe"), "bowthorp" );
	deepEqual( Stem("box"), "box" );
	deepEqual( Stem("boxeador"), "boxeador" );
	deepEqual( Stem("boxeadores"), "boxeador" );
	deepEqual( Stem("boxeo"), "boxe" );
	deepEqual( Stem("boxeó"), "boxe" );
	deepEqual( Stem("boxística"), "boxist" );
	deepEqual( Stem("boy"), "boy" );
	deepEqual( Stem("boyas"), "boy" );
	deepEqual( Stem("boyle"), "boyl" );
	deepEqual( Stem("bracamontes"), "bracamont" );
	deepEqual( Stem("braceaba"), "brac" );
	deepEqual( Stem("bracho"), "brach" );
	deepEqual( Stem("bracket"), "bracket" );
	deepEqual( Stem("bradenton"), "bradenton" );
	deepEqual( Stem("brambila"), "brambil" );
	deepEqual( Stem("branco"), "branc" );
	deepEqual( Stem("brando"), "brand" );
	deepEqual( Stem("brandt"), "brandt" );
	deepEqual( Stem("brasero"), "braser" );
	deepEqual( Stem("brasil"), "brasil" );
	deepEqual( Stem("brasileira"), "brasileir" );
	deepEqual( Stem("brasileña"), "brasileñ" );
	deepEqual( Stem("brasileño"), "brasileñ" );
	deepEqual( Stem("brasileños"), "brasileñ" );
	deepEqual( Stem("brasilia"), "brasili" );
	deepEqual( Stem("brass"), "brass" );
	deepEqual( Stem("brasso"), "brass" );
	deepEqual( Stem("braun"), "braun" );
	deepEqual( Stem("bravo"), "brav" );
	deepEqual( Stem("bravos"), "brav" );
	deepEqual( Stem("bravura"), "bravur" );
	deepEqual( Stem("brazo"), "braz" );
	deepEqual( Stem("brazos"), "braz" );
	deepEqual( Stem("brazzaville"), "brazzavill" );
	deepEqual( Stem("breaky"), "breaky" );
	deepEqual( Stem("brecha"), "brech" );
	deepEqual( Stem("brechas"), "brech" );
	deepEqual( Stem("bremer"), "brem" );
	deepEqual( Stem("bremond"), "bremond" );
	deepEqual( Stem("brener"), "bren" );
	deepEqual( Stem("bretaña"), "bretañ" );
	deepEqual( Stem("breton"), "breton" );
	deepEqual( Stem("bretón"), "breton" );
	deepEqual( Stem("breve"), "brev" );
	deepEqual( Stem("brevedad"), "breved" );
	deepEqual( Stem("brevemente"), "brevement" );
	deepEqual( Stem("breves"), "brev" );
	deepEqual( Stem("brevísima"), "brevisim" );
	deepEqual( Stem("brian"), "bri" );
	deepEqual( Stem("bridan"), "brid" );
	deepEqual( Stem("brigada"), "brig" );
	deepEqual( Stem("brigadas"), "brig" );
	deepEqual( Stem("brillaban"), "brill" );
	deepEqual( Stem("brillante"), "brillant" );
	deepEqual( Stem("brillantes"), "brillant" );
	deepEqual( Stem("brillantez"), "brillantez" );
	deepEqual( Stem("brillo"), "brill" );
	deepEqual( Stem("brinca"), "brinc" );
	deepEqual( Stem("brincar"), "brinc" );
	deepEqual( Stem("brincarse"), "brinc" );
	deepEqual( Stem("brinckerhoff"), "brinckerhoff" );
	deepEqual( Stem("brincó"), "brinc" );
	deepEqual( Stem("brinda"), "brind" );
	deepEqual( Stem("brindado"), "brind" );
	deepEqual( Stem("brindar"), "brind" );
	deepEqual( Stem("brindará"), "brind" );
	deepEqual( Stem("brindaría"), "brind" );
	deepEqual( Stem("brindarle"), "brind" );
	deepEqual( Stem("brindarles"), "brind" );
	deepEqual( Stem("brindarme"), "brind" );
	deepEqual( Stem("brindaron"), "brind" );
	deepEqual( Stem("brinde"), "brind" );
	deepEqual( Stem("brinden"), "brind" );
	deepEqual( Stem("brindó"), "brind" );
	deepEqual( Stem("bringas"), "bring" );
	deepEqual( Stem("briones"), "brion" );
	deepEqual( Stem("briosos"), "brios" );
	deepEqual( Stem("brisas"), "bris" );
	deepEqual( Stem("britania"), "britani" );
	deepEqual( Stem("británica"), "britan" );
	deepEqual( Stem("británico"), "britan" );
	deepEqual( Stem("británicos"), "britan" );
	deepEqual( Stem("british"), "british" );
	deepEqual( Stem("brito"), "brit" );
	deepEqual( Stem("brizio"), "brizi" );
	deepEqual( Stem("broad"), "bro" );
	deepEqual( Stem("brocha"), "broch" );
	deepEqual( Stem("broche"), "broch" );
	deepEqual( Stem("brock"), "brock" );
	deepEqual( Stem("brocker"), "brock" );
	deepEqual( Stem("broma"), "brom" );
	deepEqual( Stem("bromas"), "brom" );
	deepEqual( Stem("bromeaban"), "brom" );
	deepEqual( Stem("bromeando"), "brom" );
	deepEqual( Stem("bromista"), "bromist" );
	deepEqual( Stem("bromosas"), "brom" );
	deepEqual( Stem("brompton"), "brompton" );
	deepEqual( Stem("bronca"), "bronc" );
	deepEqual( Stem("broncas"), "bronc" );
	deepEqual( Stem("bronce"), "bronc" );
	deepEqual( Stem("bronco"), "bronc" );
	deepEqual( Stem("broncón"), "broncon" );
	deepEqual( Stem("broncos"), "bronc" );
	deepEqual( Stem("bronquitis"), "bronquitis" );
	deepEqual( Stem("brooks"), "brooks" );
	deepEqual( Stem("bros"), "bros" );
	deepEqual( Stem("brotan"), "brot" );
	deepEqual( Stem("brotaron"), "brot" );
	deepEqual( Stem("brothers"), "brothers" );
	deepEqual( Stem("brown"), "brown" );
	deepEqual( Stem("brownsville"), "brownsvill" );
	deepEqual( Stem("bruce"), "bruc" );
	deepEqual( Stem("bruces"), "bruc" );
	deepEqual( Stem("brugera"), "bruger" );
	deepEqual( Stem("bruja"), "bruj" );
	deepEqual( Stem("brunas"), "brun" );
	deepEqual( Stem("brunch"), "brunch" );
	deepEqual( Stem("bruno"), "brun" );
	deepEqual( Stem("brusca"), "brusc" );
	deepEqual( Stem("bruscas"), "brusc" );
	deepEqual( Stem("bruselas"), "brusel" );
	deepEqual( Stem("brusquedad"), "brusqued" );
	deepEqual( Stem("brutal"), "brutal" );
	deepEqual( Stem("brutales"), "brutal" );
	deepEqual( Stem("brutalmente"), "brutal" );
	deepEqual( Stem("bruto"), "brut" );
	deepEqual( Stem("brutos"), "brut" );
	deepEqual( Stem("bubka"), "bubk" );
	deepEqual( Stem("bucareli"), "bucareli" );
	deepEqual( Stem("buckingham"), "buckingham" );
	deepEqual( Stem("bucolia"), "bucoli" );
	deepEqual( Stem("bud"), "bud" );
	deepEqual( Stem("buda"), "bud" );
	deepEqual( Stem("buddleia"), "buddlei" );
	deepEqual( Stem("buen"), "buen" );
	deepEqual( Stem("buena"), "buen" );
	deepEqual( Stem("buenas"), "buen" );
	deepEqual( Stem("buenaventura"), "buenaventur" );
	deepEqual( Stem("buendía"), "buend" );
	deepEqual( Stem("bueno"), "buen" );
	deepEqual( Stem("buenos"), "buen" );
	deepEqual( Stem("buerón"), "bueron" );
	deepEqual( Stem("buey"), "buey" );
	deepEqual( Stem("bueyes"), "buey" );
	deepEqual( Stem("búfalo"), "bufal" );
	deepEqual( Stem("bufferin"), "bufferin" );
	deepEqual( Stem("bugno"), "bugn" );
	deepEqual( Stem("buho"), "buh" );
	deepEqual( Stem("buick"), "buick" );
	deepEqual( Stem("buitres"), "buitr" );
	deepEqual( Stem("bulbos"), "bulb" );
	deepEqual( Stem("bulgaria"), "bulgari" );
	deepEqual( Stem("búlgaro"), "bulgar" );
	deepEqual( Stem("bunbun"), "bunbun" );
	deepEqual( Stem("bunker"), "bunk" );
	deepEqual( Stem("buque"), "buqu" );
	deepEqual( Stem("buques"), "buqu" );
	deepEqual( Stem("burel"), "burel" );
	deepEqual( Stem("burelo"), "burel" );
	deepEqual( Stem("burger"), "burg" );
	deepEqual( Stem("burgos"), "burg" );
	deepEqual( Stem("burgueño"), "burgueñ" );
	deepEqual( Stem("burla"), "burl" );
	deepEqual( Stem("burlaba"), "burl" );
	deepEqual( Stem("burlan"), "burl" );
	deepEqual( Stem("burlando"), "burl" );
	deepEqual( Stem("burlar"), "burl" );
	deepEqual( Stem("burlarte"), "burlart" );
	deepEqual( Stem("burlas"), "burl" );
	deepEqual( Stem("burló"), "burl" );
	deepEqual( Stem("burocracia"), "burocraci" );
	deepEqual( Stem("burócrata"), "burocrat" );
	deepEqual( Stem("burócratas"), "burocrat" );
	deepEqual( Stem("burocráticas"), "burocrat" );
	deepEqual( Stem("burocráticos"), "burocrat" );
	deepEqual( Stem("burocratismos"), "burocrat" );
	deepEqual( Stem("burro"), "burr" );
	deepEqual( Stem("burros"), "burr" );
	deepEqual( Stem("bursatil"), "bursatil" );
	deepEqual( Stem("bursátil"), "bursatil" );
	deepEqual( Stem("bursátiles"), "bursatil" );
	deepEqual( Stem("bursatilidad"), "bursatil" );
	deepEqual( Stem("bursatilización"), "bursatiliz" );
	deepEqual( Stem("burzatilización"), "burzatiliz" );
	deepEqual( Stem("busca"), "busc" );
	deepEqual( Stem("buscaba"), "busc" );
	deepEqual( Stem("buscaban"), "busc" );
	deepEqual( Stem("buscado"), "busc" );
	deepEqual( Stem("buscador"), "buscador" );
	deepEqual( Stem("buscadores"), "buscador" );
	deepEqual( Stem("buscados"), "busc" );
	deepEqual( Stem("buscamos"), "busc" );
	deepEqual( Stem("buscan"), "busc" );
	deepEqual( Stem("buscando"), "busc" );
	deepEqual( Stem("buscar"), "busc" );
	deepEqual( Stem("buscara"), "busc" );
	deepEqual( Stem("buscará"), "busc" );
	deepEqual( Stem("buscaran"), "busc" );
	deepEqual( Stem("buscarán"), "busc" );
	deepEqual( Stem("buscaras"), "busc" );
	deepEqual( Stem("buscaremos"), "busc" );
	deepEqual( Stem("buscaría"), "busc" );
	deepEqual( Stem("buscarla"), "busc" );
	deepEqual( Stem("buscarle"), "busc" );
	deepEqual( Stem("buscarlo"), "busc" );
	deepEqual( Stem("buscaron"), "busc" );
	deepEqual( Stem("buscarse"), "busc" );
	deepEqual( Stem("busco"), "busc" );
	deepEqual( Stem("buscó"), "busc" );
	deepEqual( Stem("bush"), "bush" );
	deepEqual( Stem("business"), "business" );
	deepEqual( Stem("busque"), "busqu" );
	deepEqual( Stem("búsqueda"), "busqued" );
	deepEqual( Stem("búsquedas"), "busqued" );
	deepEqual( Stem("búsquele"), "busquel" );
	deepEqual( Stem("busquen"), "busqu" );
	deepEqual( Stem("bustamante"), "bustam" );
	deepEqual( Stem("bustillos"), "bustill" );
	deepEqual( Stem("bustinzer"), "bustinz" );
	deepEqual( Stem("busto"), "bust" );
	deepEqual( Stem("butacas"), "butac" );
	deepEqual( Stem("butano"), "butan" );
	deepEqual( Stem("butcher"), "butch" );
	deepEqual( Stem("butler"), "butl" );
	deepEqual( Stem("by"), "by" );
	deepEqual( Stem("bytes"), "bytes" );
	deepEqual( Stem("c"), "c" );
	deepEqual( Stem("caad"), "caad" );
	deepEqual( Stem("cab"), "cab" );
	deepEqual( Stem("cabada"), "cab" );
	deepEqual( Stem("cabal"), "cabal" );
	deepEqual( Stem("cabales"), "cabal" );
	deepEqual( Stem("caballada"), "caball" );
	deepEqual( Stem("caballero"), "caballer" );
	deepEqual( Stem("caballeros"), "caballer" );
	deepEqual( Stem("caballo"), "caball" );
	deepEqual( Stem("caballos"), "caball" );
	deepEqual( Stem("cabalmente"), "cabal" );
	deepEqual( Stem("cabaña"), "cabañ" );
	deepEqual( Stem("cabañas"), "cabañ" );
	deepEqual( Stem("cabanillas"), "cabanill" );
	deepEqual( Stem("cabaret"), "cabaret" );
	deepEqual( Stem("cabe"), "cab" );
	deepEqual( Stem("cabecillas"), "cabecill" );
	deepEqual( Stem("cabelleras"), "cabeller" );
	deepEqual( Stem("cabello"), "cabell" );
	deepEqual( Stem("cabellos"), "cabell" );
	deepEqual( Stem("cabestany"), "cabestany" );
	deepEqual( Stem("cabeza"), "cabez" );
	deepEqual( Stem("cabida"), "cab" );
	deepEqual( Stem("cabiedes"), "cabied" );
	deepEqual( Stem("cabildo"), "cabild" );
	deepEqual( Stem("cabildos"), "cabild" );
	deepEqual( Stem("cabina"), "cabin" );
	deepEqual( Stem("cable"), "cabl" );
	deepEqual( Stem("cableado"), "cabl" );
	deepEqual( Stem("cables"), "cabl" );
	deepEqual( Stem("cablevisión"), "cablevision" );
	deepEqual( Stem("cabo"), "cab" );
	deepEqual( Stem("cabos"), "cab" );
	deepEqual( Stem("cabras"), "cabr" );
	deepEqual( Stem("cabrera"), "cabrer" );
	deepEqual( Stem("cabrito"), "cabrit" );
	deepEqual( Stem("cacallacas"), "cacallac" );
	deepEqual( Stem("cacao"), "caca" );
	deepEqual( Stem("cacareaban"), "cacar" );
	deepEqual( Stem("cacería"), "cac" );
	deepEqual( Stem("cacerías"), "cac" );
	deepEqual( Stem("cacerío"), "caceri" );
	deepEqual( Stem("caceríos"), "caceri" );
	deepEqual( Stem("cacerolas"), "cacerol" );
	deepEqual( Stem("cachetearon"), "cachet" );
	deepEqual( Stem("cachetes"), "cachet" );
	deepEqual( Stem("caciques"), "caciqu" );
	deepEqual( Stem("caciquiles"), "caciquil" );
	deepEqual( Stem("cada"), "cad" );
	deepEqual( Stem("cadapa"), "cadap" );
	deepEqual( Stem("cadáver"), "cadav" );
	deepEqual( Stem("cadáveres"), "cadaver" );
	deepEqual( Stem("cadena"), "caden" );
	deepEqual( Stem("cadenas"), "caden" );
	deepEqual( Stem("cadencia"), "cadenci" );
	deepEqual( Stem("cadereyta"), "cadereyt" );
	deepEqual( Stem("cadete"), "cadet" );
	deepEqual( Stem("cadetes"), "cadet" );
	deepEqual( Stem("cadis"), "cadis" );
	deepEqual( Stem("cádiz"), "cadiz" );
	deepEqual( Stem("cadmio"), "cadmi" );
	deepEqual( Stem("caducidad"), "caduc" );
	deepEqual( Stem("cae"), "cae" );
	deepEqual( Stem("caemos"), "caem" );
	deepEqual( Stem("caen"), "caen" );
	deepEqual( Stem("caer"), "caer" );
	deepEqual( Stem("caerle"), "caerl" );
	deepEqual( Stem("café"), "caf" );
	deepEqual( Stem("cafecito"), "cafecit" );
	deepEqual( Stem("cafés"), "cafes" );
	deepEqual( Stem("cafetal"), "cafetal" );
	deepEqual( Stem("cafetería"), "cafet" );
	deepEqual( Stem("cafeteros"), "cafeter" );
	deepEqual( Stem("cafú"), "cafu" );
	deepEqual( Stem("caía"), "cai" );
	deepEqual( Stem("caída"), "caid" );
	deepEqual( Stem("caídas"), "caid" );
	deepEqual( Stem("caído"), "caid" );
	deepEqual( Stem("caifanes"), "caifan" );
	deepEqual( Stem("caigan"), "caig" );
	deepEqual( Stem("caintra"), "caintr" );
	deepEqual( Stem("cairo"), "cair" );
	deepEqual( Stem("caja"), "caj" );
	deepEqual( Stem("cajal"), "cajal" );
	deepEqual( Stem("cajas"), "caj" );
	deepEqual( Stem("cajón"), "cajon" );
	deepEqual( Stem("cajuela"), "cajuel" );
	deepEqual( Stem("cala"), "cal" );
	deepEqual( Stem("calabaza"), "calabaz" );
	deepEqual( Stem("calamidades"), "calam" );
	deepEqual( Stem("calcamonía"), "calcamon" );
	deepEqual( Stem("calcamonías"), "calcamon" );
	deepEqual( Stem("calcetines"), "calcetin" );
	deepEqual( Stem("calcinado"), "calcin" );
	deepEqual( Stem("calcomanía"), "calcoman" );
	deepEqual( Stem("calcula"), "calcul" );
	deepEqual( Stem("calculadas"), "calcul" );
	deepEqual( Stem("calculado"), "calcul" );
	deepEqual( Stem("calculadora"), "calcul" );
	deepEqual( Stem("calculadoras"), "calcul" );
	deepEqual( Stem("calculando"), "calcul" );
	deepEqual( Stem("calcular"), "calcul" );
	deepEqual( Stem("calcularon"), "calcul" );
	deepEqual( Stem("calcule"), "calcul" );
	deepEqual( Stem("calcúlele"), "calculel" );
	deepEqual( Stem("calculo"), "calcul" );
	deepEqual( Stem("cálculo"), "calcul" );
	deepEqual( Stem("calculó"), "calcul" );
	deepEqual( Stem("cálculos"), "calcul" );
	deepEqual( Stem("caldeado"), "cald" );
	deepEqual( Stem("caldeen"), "cald" );
	deepEqual( Stem("caldera"), "calder" );
	deepEqual( Stem("calderón"), "calderon" );
	deepEqual( Stem("calderoni"), "calderoni" );
	deepEqual( Stem("caldillo"), "caldill" );
	deepEqual( Stem("calefacción"), "calefaccion" );
	deepEqual( Stem("calendario"), "calendari" );
	deepEqual( Stem("calendarios"), "calendari" );
	deepEqual( Stem("calentamiento"), "calent" );
	deepEqual( Stem("calentando"), "calent" );
	deepEqual( Stem("calentar"), "calent" );
	deepEqual( Stem("calentura"), "calentur" );
	deepEqual( Stem("calgene"), "calgen" );
	deepEqual( Stem("calibración"), "calibr" );
	deepEqual( Stem("calibradas"), "calibr" );
	deepEqual( Stem("calibrar"), "calibr" );
	deepEqual( Stem("calibre"), "calibr" );
	deepEqual( Stem("cálida"), "cal" );
	deepEqual( Stem("calidad"), "calid" );
	deepEqual( Stem("calidades"), "calidad" );
	deepEqual( Stem("cálido"), "cal" );
	deepEqual( Stem("calientan"), "calient" );
	deepEqual( Stem("caliente"), "calient" );
	deepEqual( Stem("calientes"), "calient" );
	deepEqual( Stem("califica"), "calif" );
	deepEqual( Stem("calificación"), "calif" );
	deepEqual( Stem("calificaciones"), "calif" );
	deepEqual( Stem("calificada"), "calific" );
	deepEqual( Stem("calificadas"), "calific" );
	deepEqual( Stem("calificado"), "calific" );
	deepEqual( Stem("calificadora"), "calif" );
	deepEqual( Stem("calificados"), "calific" );
	deepEqual( Stem("calificamos"), "calific" );
	deepEqual( Stem("califican"), "calific" );
	deepEqual( Stem("calificar"), "calific" );
	deepEqual( Stem("calificará"), "calific" );
	deepEqual( Stem("calificaría"), "calific" );
	deepEqual( Stem("calificaron"), "calific" );
	deepEqual( Stem("calificativo"), "calific" );
	deepEqual( Stem("calificativos"), "calific" );
	deepEqual( Stem("calificó"), "calific" );
	deepEqual( Stem("califique"), "califiqu" );
	deepEqual( Stem("california"), "californi" );
	deepEqual( Stem("californiano"), "californian" );
	deepEqual( Stem("californias"), "californi" );
	deepEqual( Stem("caligula"), "caligul" );
	deepEqual( Stem("calígula"), "caligul" );
	deepEqual( Stem("calla"), "call" );
	deepEqual( Stem("callada"), "call" );
	deepEqual( Stem("calladito"), "calladit" );
	deepEqual( Stem("callado"), "call" );
	deepEqual( Stem("callar"), "call" );
	deepEqual( Stem("callarlo"), "call" );
	deepEqual( Stem("calle"), "call" );
	deepEqual( Stem("callejera"), "callejer" );
	deepEqual( Stem("callejeros"), "callejer" );
	deepEqual( Stem("callejoneadas"), "callejon" );
	deepEqual( Stem("calles"), "call" );
	deepEqual( Stem("calloway"), "calloway" );
	deepEqual( Stem("calma"), "calm" );
	deepEqual( Stem("calmar"), "calm" );
	deepEqual( Stem("calmarla"), "calm" );
	deepEqual( Stem("cálmecac"), "calmecac" );
	deepEqual( Stem("calo"), "cal" );
	deepEqual( Stem("caloca"), "caloc" );
	deepEqual( Stem("calor"), "calor" );
	deepEqual( Stem("calpan"), "calp" );
	deepEqual( Stem("calpixques"), "calpixqu" );
	deepEqual( Stem("calpullis"), "calpullis" );
	deepEqual( Stem("calumnia"), "calumni" );
	deepEqual( Stem("calumnias"), "calumni" );
	deepEqual( Stem("caluroso"), "calur" );
	deepEqual( Stem("calvillo"), "calvill" );
	deepEqual( Stem("calzada"), "calz" );
	deepEqual( Stem("calzado"), "calz" );
	deepEqual( Stem("calzoncillo"), "calzoncill" );
	deepEqual( Stem("cama"), "cam" );
	deepEqual( Stem("camacho"), "camach" );
	deepEqual( Stem("camaleónica"), "camaleon" );
	deepEqual( Stem("camaleónico"), "camaleon" );
	deepEqual( Stem("cámara"), "cam" );
	deepEqual( Stem("camaradería"), "camarad" );
	deepEqual( Stem("cámaras"), "cam" );
	deepEqual( Stem("camarero"), "camarer" );
	deepEqual( Stem("camareros"), "camarer" );
	deepEqual( Stem("camargo"), "camarg" );
	deepEqual( Stem("camarlengo"), "camarleng" );
	deepEqual( Stem("camarón"), "camaron" );
	deepEqual( Stem("camarote"), "camarot" );
	deepEqual( Stem("camas"), "cam" );
	deepEqual( Stem("cambia"), "cambi" );
	deepEqual( Stem("cambiado"), "cambi" );
	deepEqual( Stem("cambiamos"), "cambi" );
	deepEqual( Stem("cambian"), "cambi" );
	deepEqual( Stem("cambiando"), "cambi" );
	deepEqual( Stem("cambiante"), "cambiant" );
	deepEqual( Stem("cambiantes"), "cambiant" );
	deepEqual( Stem("cambiar"), "cambi" );
	deepEqual( Stem("cambiara"), "cambi" );
	deepEqual( Stem("cambiará"), "cambi" );
	deepEqual( Stem("cambiaría"), "cambi" );
	deepEqual( Stem("cambiarían"), "cambi" );
	deepEqual( Stem("cambiarias"), "cambiari" );
	deepEqual( Stem("cambiario"), "cambiari" );
	deepEqual( Stem("cambiarle"), "cambi" );
	deepEqual( Stem("cambiarlos"), "cambi" );
	deepEqual( Stem("cambiaron"), "cambi" );
	deepEqual( Stem("cambie"), "cambi" );
	deepEqual( Stem("cambié"), "cambi" );
	deepEqual( Stem("cambio"), "cambi" );
	deepEqual( Stem("cambió"), "camb" );
	deepEqual( Stem("cambios"), "cambi" );
	deepEqual( Stem("cambridge"), "cambridg" );
	deepEqual( Stem("camdomble"), "camdombl" );
	deepEqual( Stem("camelia"), "cameli" );
	deepEqual( Stem("camellón"), "camellon" );
	deepEqual( Stem("camellones"), "camellon" );
	deepEqual( Stem("camelo"), "camel" );
	deepEqual( Stem("camerino"), "camerin" );
	deepEqual( Stem("camet"), "camet" );
	deepEqual( Stem("camexa"), "camex" );
	deepEqual( Stem("caminaba"), "camin" );
	deepEqual( Stem("caminaban"), "camin" );
	deepEqual( Stem("caminan"), "camin" );
	deepEqual( Stem("caminando"), "camin" );
	deepEqual( Stem("caminar"), "camin" );
	deepEqual( Stem("caminaron"), "camin" );
	deepEqual( Stem("caminata"), "caminat" );
	deepEqual( Stem("camine"), "camin" );
	deepEqual( Stem("camino"), "camin" );
	deepEqual( Stem("caminó"), "camin" );
	deepEqual( Stem("caminos"), "camin" );
	deepEqual( Stem("camión"), "camion" );
	deepEqual( Stem("camioneras"), "camioner" );
	deepEqual( Stem("camioneros"), "camioner" );
	deepEqual( Stem("camiones"), "camion" );
	deepEqual( Stem("camioneta"), "camionet" );
	deepEqual( Stem("camionetas"), "camionet" );
	deepEqual( Stem("camisa"), "camis" );
	deepEqual( Stem("camiseta"), "camiset" );
	deepEqual( Stem("camisetas"), "camiset" );
	deepEqual( Stem("camisitas"), "camisit" );
	deepEqual( Stem("camisón"), "camison" );
	deepEqual( Stem("camisones"), "camison" );
	deepEqual( Stem("camorristas"), "camorr" );
	deepEqual( Stem("camotlán"), "camotlan" );
	deepEqual( Stem("camp"), "camp" );
	deepEqual( Stem("campal"), "campal" );
	deepEqual( Stem("campamento"), "campament" );
	deepEqual( Stem("campamentos"), "campament" );
	deepEqual( Stem("campaña"), "campañ" );
	deepEqual( Stem("campañas"), "campañ" );
	deepEqual( Stem("campechanos"), "campechan" );
	deepEqual( Stem("campeche"), "campech" );
	deepEqual( Stem("campeon"), "campeon" );
	deepEqual( Stem("campeón"), "campeon" );
	deepEqual( Stem("campeona"), "campeon" );
	deepEqual( Stem("campeonato"), "campeonat" );
	deepEqual( Stem("campeonatos"), "campeonat" );
	deepEqual( Stem("campeones"), "campeon" );
	deepEqual( Stem("campesina"), "campesin" );
	deepEqual( Stem("campesinos"), "campesin" );
	deepEqual( Stem("campestre"), "campestr" );
	deepEqual( Stem("campo"), "camp" );
	deepEqual( Stem("campos"), "camp" );
	deepEqual( Stem("camposeco"), "camposec" );
	deepEqual( Stem("campus"), "campus" );
	deepEqual( Stem("campuzano"), "campuzan" );
	deepEqual( Stem("camuflajes"), "camuflaj" );
	deepEqual( Stem("canacintra"), "canacintr" );
	deepEqual( Stem("canaco"), "canac" );
	deepEqual( Stem("canada"), "can" );
	deepEqual( Stem("cañada"), "cañ" );
	deepEqual( Stem("canadá"), "canad" );
	deepEqual( Stem("canadian"), "canadi" );
	deepEqual( Stem("canadiense"), "canadiens" );
	deepEqual( Stem("canadienses"), "canadiens" );
	deepEqual( Stem("canal"), "canal" );
	deepEqual( Stem("canalera"), "canaler" );
	deepEqual( Stem("canalero"), "canaler" );
	deepEqual( Stem("canales"), "canal" );
	deepEqual( Stem("canalicen"), "canalic" );
	deepEqual( Stem("canalización"), "canaliz" );
	deepEqual( Stem("canalizado"), "canaliz" );
	deepEqual( Stem("canalizados"), "canaliz" );
	deepEqual( Stem("canalizando"), "canaliz" );
	deepEqual( Stem("canalizara"), "canaliz" );
	deepEqual( Stem("cañamar"), "cañam" );
	deepEqual( Stem("canapés"), "canapes" );
	deepEqual( Stem("canasta"), "canast" );
	deepEqual( Stem("canasto"), "canast" );
	deepEqual( Stem("cancela"), "cancel" );
	deepEqual( Stem("cancelaba"), "cancel" );
	deepEqual( Stem("cancelación"), "cancel" );
	deepEqual( Stem("cancelada"), "cancel" );
	deepEqual( Stem("cancelados"), "cancel" );
	deepEqual( Stem("cancelando"), "cancel" );
	deepEqual( Stem("cancelar"), "cancel" );
	deepEqual( Stem("cancelarán"), "cancel" );
	deepEqual( Stem("canceló"), "cancel" );
	deepEqual( Stem("cáncer"), "canc" );
	deepEqual( Stem("cancha"), "canch" );
	deepEqual( Stem("canchas"), "canch" );
	deepEqual( Stem("canciller"), "cancill" );
	deepEqual( Stem("cancilleres"), "canciller" );
	deepEqual( Stem("cancillería"), "cancill" );
	deepEqual( Stem("canción"), "cancion" );
	deepEqual( Stem("cancioncita"), "cancioncit" );
	deepEqual( Stem("canciones"), "cancion" );
	deepEqual( Stem("cancun"), "cancun" );
	deepEqual( Stem("cancún"), "cancun" );
	deepEqual( Stem("candelaria"), "candelari" );
	deepEqual( Stem("candelero"), "candeler" );
	deepEqual( Stem("candentes"), "candent" );
	deepEqual( Stem("cándida"), "cand" );
	deepEqual( Stem("candidata"), "candidat" );
	deepEqual( Stem("candidato"), "candidat" );
	deepEqual( Stem("candidatos"), "candidat" );
	deepEqual( Stem("candidatura"), "candidatur" );
	deepEqual( Stem("candidaturas"), "candidatur" );
	deepEqual( Stem("candidiasis"), "candidiasis" );
	deepEqual( Stem("candil"), "candil" );
	deepEqual( Stem("candor"), "candor" );
	deepEqual( Stem("candy"), "candy" );
	deepEqual( Stem("cañedo"), "cañed" );
	deepEqual( Stem("canela"), "canel" );
	deepEqual( Stem("canels"), "canels" );
	deepEqual( Stem("cañete"), "cañet" );
	deepEqual( Stem("caníbales"), "canibal" );
	deepEqual( Stem("caniggia"), "caniggi" );
	deepEqual( Stem("canijo"), "canij" );
	deepEqual( Stem("canion"), "canion" );
	deepEqual( Stem("canje"), "canj" );
	deepEqual( Stem("cano"), "can" );
	deepEqual( Stem("canoga"), "canog" );
	deepEqual( Stem("canolas"), "canol" );
	deepEqual( Stem("cañonazos"), "cañonaz" );
	deepEqual( Stem("cañones"), "cañon" );
	deepEqual( Stem("cansada"), "cans" );
	deepEqual( Stem("cansadas"), "cans" );
	deepEqual( Stem("cansado"), "cans" );
	deepEqual( Stem("cansados"), "cans" );
	deepEqual( Stem("cansancio"), "cansanci" );
	deepEqual( Stem("canseco"), "cansec" );
	deepEqual( Stem("canta"), "cant" );
	deepEqual( Stem("cantaba"), "cant" );
	deepEqual( Stem("cantaban"), "cant" );
	deepEqual( Stem("cantan"), "cant" );
	deepEqual( Stem("cantando"), "cant" );
	deepEqual( Stem("cantante"), "cantant" );
	deepEqual( Stem("cantantes"), "cantant" );
	deepEqual( Stem("cantar"), "cant" );
	deepEqual( Stem("cantaron"), "cant" );
	deepEqual( Stem("cantera"), "canter" );
	deepEqual( Stem("cantería"), "cant" );
	deepEqual( Stem("cantidad"), "cantid" );
	deepEqual( Stem("cantidades"), "cantidad" );
	deepEqual( Stem("cantina"), "cantin" );
	deepEqual( Stem("cantinas"), "cantin" );
	deepEqual( Stem("cantinflas"), "cantinfl" );
	deepEqual( Stem("canto"), "cant" );
	deepEqual( Stem("cantó"), "cant" );
	deepEqual( Stem("cantos"), "cant" );
	deepEqual( Stem("cantú"), "cantu" );
	deepEqual( Stem("caoba"), "caob" );
	deepEqual( Stem("caón"), "caon" );
	deepEqual( Stem("caona"), "caon" );
	deepEqual( Stem("caos"), "caos" );
	deepEqual( Stem("caótica"), "caotic" );
	deepEqual( Stem("capa"), "cap" );
	deepEqual( Stem("capaces"), "capac" );
	deepEqual( Stem("capacidad"), "capac" );
	deepEqual( Stem("capacidades"), "capac" );
	deepEqual( Stem("capacita"), "capacit" );
	deepEqual( Stem("capacitación"), "capacit" );
	deepEqual( Stem("capacitada"), "capacit" );
	deepEqual( Stem("capacitado"), "capacit" );
	deepEqual( Stem("capacitamos"), "capacit" );
	deepEqual( Stem("capacitan"), "capacit" );
	deepEqual( Stem("capacitando"), "capacit" );
	deepEqual( Stem("capacitar"), "capacit" );
	deepEqual( Stem("capacitarse"), "capacit" );
	deepEqual( Stem("capas"), "cap" );
	deepEqual( Stem("capatacio"), "capataci" );
	deepEqual( Stem("capaz"), "capaz" );
	deepEqual( Stem("caperucita"), "caperucit" );
	deepEqual( Stem("capetillo"), "capetill" );
	deepEqual( Stem("capfce"), "capfc" );
	deepEqual( Stem("capilla"), "capill" );
	deepEqual( Stem("capital"), "capital" );
	deepEqual( Stem("capitales"), "capital" );
	deepEqual( Stem("capitalina"), "capitalin" );
	deepEqual( Stem("capitalino"), "capitalin" );
	deepEqual( Stem("capitalinos"), "capitalin" );
	deepEqual( Stem("capitalista"), "capital" );
	deepEqual( Stem("capitalistas"), "capital" );
	deepEqual( Stem("capitalización"), "capitaliz" );
	deepEqual( Stem("capitalizador"), "capitaliz" );
	deepEqual( Stem("capitalizar"), "capitaliz" );
	deepEqual( Stem("capitalizaron"), "capitaliz" );
	deepEqual( Stem("capitán"), "capitan" );
	deepEqual( Stem("capitanes"), "capitan" );
	deepEqual( Stem("capitolio"), "capitoli" );
	deepEqual( Stem("capitonada"), "capiton" );
	deepEqual( Stem("capitonadas"), "capiton" );
	deepEqual( Stem("capitonados"), "capiton" );
	deepEqual( Stem("capitulación"), "capitul" );
	deepEqual( Stem("capítulo"), "capitul" );
	deepEqual( Stem("capítulos"), "capitul" );
	deepEqual( Stem("capo"), "cap" );
	deepEqual( Stem("caporal"), "caporal" );
	deepEqual( Stem("capos"), "cap" );
	deepEqual( Stem("capote"), "capot" );
	deepEqual( Stem("cappel"), "cappel" );
	deepEqual( Stem("capricho"), "caprich" );
	deepEqual( Stem("caprichos"), "caprich" );
	deepEqual( Stem("caprichosas"), "caprich" );
	deepEqual( Stem("caprichosos"), "caprich" );
	deepEqual( Stem("captación"), "captacion" );
	deepEqual( Stem("captado"), "capt" );
	deepEqual( Stem("captamos"), "capt" );
	deepEqual( Stem("captar"), "capt" );
	deepEqual( Stem("captará"), "capt" );
	deepEqual( Stem("captaron"), "capt" );
	deepEqual( Stem("capten"), "capt" );
	deepEqual( Stem("captivos"), "captiv" );
	deepEqual( Stem("captó"), "capt" );
	deepEqual( Stem("captura"), "captur" );
	deepEqual( Stem("capturados"), "captur" );
	deepEqual( Stem("capturó"), "captur" );
	deepEqual( Stem("capucha"), "capuch" );
	deepEqual( Stem("car"), "car" );
	deepEqual( Stem("cara"), "car" );
	deepEqual( Stem("caracas"), "carac" );
	deepEqual( Stem("caracol"), "caracol" );
	deepEqual( Stem("carácter"), "caract" );
	deepEqual( Stem("caracteres"), "caracter" );
	deepEqual( Stem("característica"), "caracterist" );
	deepEqual( Stem("características"), "caracterist" );
	deepEqual( Stem("característicos"), "caracterist" );
	deepEqual( Stem("caracteriza"), "caracteriz" );
	deepEqual( Stem("caracterizadas"), "caracteriz" );
	deepEqual( Stem("caracterizado"), "caracteriz" );
	deepEqual( Stem("caracterizan"), "caracteriz" );
	deepEqual( Stem("caracterizar"), "caracteriz" );
	deepEqual( Stem("caracterizaron"), "caracteriz" );
	deepEqual( Stem("caracterizó"), "caracteriz" );
	deepEqual( Stem("carajo"), "caraj" );
	deepEqual( Stem("caramona"), "caramon" );
	deepEqual( Stem("caraqueña"), "caraqueñ" );
	deepEqual( Stem("caras"), "car" );
	deepEqual( Stem("carátula"), "caratul" );
	deepEqual( Stem("caravana"), "caravan" );
	deepEqual( Stem("caravanas"), "caravan" );
	deepEqual( Stem("caravia"), "caravi" );
	deepEqual( Stem("caray"), "caray" );
	deepEqual( Stem("carbajal"), "carbajal" );
	deepEqual( Stem("carballido"), "carball" );
	deepEqual( Stem("carballo"), "carball" );
	deepEqual( Stem("carbón"), "carbon" );
	deepEqual( Stem("carbonáceo"), "carbonace" );
	deepEqual( Stem("carbonel"), "carbonel" );
	deepEqual( Stem("carbono"), "carbon" );
	deepEqual( Stem("carburador"), "carbur" );
	deepEqual( Stem("carcajada"), "carcaj" );
	deepEqual( Stem("carcajadas"), "carcaj" );
	deepEqual( Stem("carcaño"), "carcañ" );
	deepEqual( Stem("cárcel"), "carcel" );
	deepEqual( Stem("cárceles"), "carcel" );
	deepEqual( Stem("carcomido"), "carcom" );
	deepEqual( Stem("cárcova"), "carcov" );
	deepEqual( Stem("card"), "card" );
	deepEqual( Stem("cardán"), "cardan" );
	deepEqual( Stem("cardenal"), "cardenal" );
	deepEqual( Stem("cardenales"), "cardenal" );
	deepEqual( Stem("cárdenas"), "carden" );
	deepEqual( Stem("cardenismo"), "carden" );
	deepEqual( Stem("cardenista"), "carden" );
	deepEqual( Stem("cardenistas"), "carden" );
	deepEqual( Stem("cárdeno"), "carden" );
	deepEqual( Stem("cardiaca"), "cardiac" );
	deepEqual( Stem("cardíaca"), "cardiac" );
	deepEqual( Stem("cardiaco"), "cardiac" );
	deepEqual( Stem("cardíaco"), "cardiac" );
	deepEqual( Stem("cardíacos"), "cardiac" );
	deepEqual( Stem("cardiología"), "cardiolog" );
	deepEqual( Stem("cardiólogo"), "cardiolog" );
	deepEqual( Stem("cardiopulmonar"), "cardiopulmon" );
	deepEqual( Stem("cardona"), "cardon" );
	deepEqual( Stem("careca"), "carec" );
	deepEqual( Stem("carece"), "carec" );
	deepEqual( Stem("carecen"), "carec" );
	deepEqual( Stem("carecer"), "carec" );
	deepEqual( Stem("carecía"), "carec" );
	deepEqual( Stem("carecían"), "carec" );
	deepEqual( Stem("careció"), "carec" );
	deepEqual( Stem("carencia"), "carenci" );
	deepEqual( Stem("carencias"), "carenci" );
	deepEqual( Stem("carente"), "carent" );
	deepEqual( Stem("carentes"), "carent" );
	deepEqual( Stem("careo"), "care" );
	deepEqual( Stem("carga"), "carg" );
	deepEqual( Stem("cargada"), "carg" );
	deepEqual( Stem("cargadas"), "carg" );
	deepEqual( Stem("cargado"), "carg" );
	deepEqual( Stem("cargados"), "carg" );
	deepEqual( Stem("cargamento"), "cargament" );
	deepEqual( Stem("cargamentos"), "cargament" );
	deepEqual( Stem("cargando"), "carg" );
	deepEqual( Stem("cargar"), "carg" );
	deepEqual( Stem("cargaran"), "carg" );
	deepEqual( Stem("cargarle"), "carg" );
	deepEqual( Stem("cargaron"), "carg" );
	deepEqual( Stem("cargas"), "carg" );
	deepEqual( Stem("cargo"), "carg" );
	deepEqual( Stem("cargó"), "carg" );
	deepEqual( Stem("cargos"), "carg" );
	deepEqual( Stem("cargueros"), "carguer" );
	deepEqual( Stem("carha"), "carh" );
	deepEqual( Stem("caribe"), "carib" );
	deepEqual( Stem("caribeña"), "caribeñ" );
	deepEqual( Stem("caribeño"), "caribeñ" );
	deepEqual( Stem("caribeños"), "caribeñ" );
	deepEqual( Stem("caricatura"), "caricatur" );
	deepEqual( Stem("caricaturas"), "caricatur" );
	deepEqual( Stem("caricias"), "carici" );
	deepEqual( Stem("caricom"), "caricom" );
	deepEqual( Stem("caridad"), "carid" );
	deepEqual( Stem("carina"), "carin" );
	deepEqual( Stem("cariño"), "cariñ" );
	deepEqual( Stem("cariñosidad"), "cariñ" );
	deepEqual( Stem("cariñoso"), "cariñ" );
	deepEqual( Stem("carioca"), "carioc" );
	deepEqual( Stem("cariotipos"), "cariotip" );
	deepEqual( Stem("carisma"), "carism" );
	deepEqual( Stem("carismático"), "carismat" );
	deepEqual( Stem("cáritas"), "carit" );
	deepEqual( Stem("caritativas"), "carit" );
	deepEqual( Stem("carl"), "carl" );
	deepEqual( Stem("carla"), "carl" );
	deepEqual( Stem("carlitos"), "carlit" );
	deepEqual( Stem("carlos"), "carl" );
	deepEqual( Stem("carlota"), "carlot" );
	deepEqual( Stem("carman"), "carm" );
	deepEqual( Stem("carmen"), "carm" );
	deepEqual( Stem("carmona"), "carmon" );
	deepEqual( Stem("carnaval"), "carnaval" );
	deepEqual( Stem("carnavaleros"), "carnavaler" );
	deepEqual( Stem("carnavales"), "carnaval" );
	deepEqual( Stem("carnavalescas"), "carnavalesc" );
	deepEqual( Stem("carnavalito"), "carnavalit" );
	deepEqual( Stem("carne"), "carn" );
	deepEqual( Stem("carneros"), "carner" );
	deepEqual( Stem("carnes"), "carn" );
	deepEqual( Stem("carnestolendas"), "carnestolend" );
	deepEqual( Stem("carnet"), "carnet" );
	deepEqual( Stem("carnicería"), "carnic" );
	deepEqual( Stem("carnicero"), "carnicer" );
	deepEqual( Stem("cárnicos"), "carnic" );
	deepEqual( Stem("caro"), "car" );
	deepEqual( Stem("carolina"), "carolin" );
	deepEqual( Stem("caronte"), "caront" );
	deepEqual( Stem("caros"), "car" );
	deepEqual( Stem("carpa"), "carp" );
	deepEqual( Stem("carpera"), "carper" );
	deepEqual( Stem("carpeta"), "carpet" );
	deepEqual( Stem("carpintería"), "carpint" );
	deepEqual( Stem("carpizo"), "carpiz" );
	deepEqual( Stem("carr"), "carr" );
	deepEqual( Stem("carrancismo"), "carranc" );
	deepEqual( Stem("carrancistas"), "carranc" );
	deepEqual( Stem("carranza"), "carranz" );
	deepEqual( Stem("carrasquel"), "carrasquel" );
	deepEqual( Stem("carreño"), "carreñ" );
	deepEqual( Stem("carreón"), "carreon" );
	deepEqual( Stem("carrera"), "carrer" );
	deepEqual( Stem("carreras"), "carrer" );
	deepEqual( Stem("carrero"), "carrer" );
	deepEqual( Stem("carreta"), "carret" );
	deepEqual( Stem("carretera"), "carreter" );
	deepEqual( Stem("carreteras"), "carreter" );
	deepEqual( Stem("carretero"), "carreter" );
	deepEqual( Stem("carreteros"), "carreter" );
	deepEqual( Stem("carretón"), "carreton" );
	deepEqual( Stem("carrier"), "carri" );
	deepEqual( Stem("carriles"), "carril" );
	deepEqual( Stem("carrillo"), "carrill" );
	deepEqual( Stem("carrington"), "carrington" );
	deepEqual( Stem("carrión"), "carrion" );
	deepEqual( Stem("carrito"), "carrit" );
	deepEqual( Stem("carrizalejo"), "carrizalej" );
	deepEqual( Stem("carrizales"), "carrizal" );
	deepEqual( Stem("carro"), "carr" );
	deepEqual( Stem("carrocería"), "carroc" );
	deepEqual( Stem("carrocerías"), "carroc" );
	deepEqual( Stem("carros"), "carr" );
	deepEqual( Stem("carroza"), "carroz" );
	deepEqual( Stem("carrozas"), "carroz" );
	deepEqual( Stem("carruaje"), "carruaj" );
	deepEqual( Stem("carruajes"), "carruaj" );
	deepEqual( Stem("carrujo"), "carruj" );
	deepEqual( Stem("carrujos"), "carruj" );
	deepEqual( Stem("carso"), "cars" );
	deepEqual( Stem("carta"), "cart" );
	deepEqual( Stem("cartagena"), "cartagen" );
	deepEqual( Stem("cartas"), "cart" );
	deepEqual( Stem("cartay"), "cartay" );
	deepEqual( Stem("cartel"), "cartel" );
	deepEqual( Stem("cártel"), "cartel" );
	deepEqual( Stem("cartelera"), "carteler" );
	deepEqual( Stem("carteles"), "cartel" );
	deepEqual( Stem("cartelones"), "cartelon" );
	deepEqual( Stem("carter"), "cart" );
	deepEqual( Stem("cartera"), "carter" );
	deepEqual( Stem("carteras"), "carter" );
	deepEqual( Stem("cartilla"), "cartill" );
	deepEqual( Stem("cartón"), "carton" );
	deepEqual( Stem("cartucho"), "cartuch" );
	deepEqual( Stem("carvajal"), "carvajal" );
	deepEqual( Stem("casa"), "cas" );
	deepEqual( Stem("casaca"), "casac" );
	deepEqual( Stem("casada"), "cas" );
	deepEqual( Stem("casadas"), "cas" );
	deepEqual( Stem("casado"), "cas" );
	deepEqual( Stem("casados"), "cas" );
	deepEqual( Stem("casamentero"), "casamenter" );
	deepEqual( Stem("casando"), "cas" );
	deepEqual( Stem("casarme"), "cas" );
	deepEqual( Stem("casaron"), "cas" );
	deepEqual( Stem("casarse"), "cas" );
	deepEqual( Stem("casas"), "cas" );
	deepEqual( Stem("casashabitación"), "casashabit" );
	deepEqual( Stem("casavan"), "casav" );
	deepEqual( Stem("cascabel"), "cascabel" );
	deepEqual( Stem("cascabeles"), "cascabel" );
	deepEqual( Stem("cascada"), "casc" );
	deepEqual( Stem("cáscara"), "casc" );
	deepEqual( Stem("cascos"), "casc" );
	deepEqual( Stem("caseras"), "caser" );
	deepEqual( Stem("casero"), "caser" );
	deepEqual( Stem("caseros"), "caser" );
	deepEqual( Stem("caseta"), "caset" );
	deepEqual( Stem("casetas"), "caset" );
	deepEqual( Stem("cash"), "cash" );
	deepEqual( Stem("casi"), "casi" );
	deepEqual( Stem("casilla"), "casill" );
	deepEqual( Stem("casillas"), "casill" );
	deepEqual( Stem("casillero"), "casiller" );
	deepEqual( Stem("casimir"), "casim" );
	deepEqual( Stem("casino"), "casin" );
	deepEqual( Stem("casio"), "casi" );
	deepEqual( Stem("casita"), "casit" );
	deepEqual( Stem("caso"), "cas" );
	deepEqual( Stem("casó"), "cas" );
	deepEqual( Stem("casos"), "cas" );
	deepEqual( Stem("casquillo"), "casquill" );
	deepEqual( Stem("casquillos"), "casquill" );
	deepEqual( Stem("cassete"), "casset" );
	deepEqual( Stem("cassette"), "cassett" );
	deepEqual( Stem("cassettes"), "cassett" );
	deepEqual( Stem("casta"), "cast" );
	deepEqual( Stem("castañas"), "castañ" );
	deepEqual( Stem("castañeda"), "castañed" );
	deepEqual( Stem("castaño"), "castañ" );
	deepEqual( Stem("castañón"), "castañon" );
	deepEqual( Stem("castaños"), "castañ" );
	deepEqual( Stem("castellano"), "castellan" );
	deepEqual( Stem("castellanos"), "castellan" );
	deepEqual( Stem("castidad"), "castid" );
	deepEqual( Stem("castiga"), "castig" );
	deepEqual( Stem("castigadas"), "castig" );
	deepEqual( Stem("castigados"), "castig" );
	deepEqual( Stem("castigar"), "castig" );
	deepEqual( Stem("castigará"), "castig" );
	deepEqual( Stem("castigo"), "castig" );
	deepEqual( Stem("castigue"), "castig" );
	deepEqual( Stem("castilla"), "castill" );
	deepEqual( Stem("castilleja"), "castillej" );
	deepEqual( Stem("castillejos"), "castillej" );
	deepEqual( Stem("castillo"), "castill" );
	deepEqual( Stem("castor"), "castor" );
	deepEqual( Stem("castores"), "castor" );
	deepEqual( Stem("castrejón"), "castrejon" );
	deepEqual( Stem("castro"), "castr" );
	deepEqual( Stem("castruita"), "castruit" );
	deepEqual( Stem("cástulo"), "castul" );
	deepEqual( Stem("casual"), "casual" );
	deepEqual( Stem("casuales"), "casual" );
	deepEqual( Stem("casualidad"), "casual" );
	deepEqual( Stem("casuística"), "casuist" );
	deepEqual( Stem("cat"), "cat" );
	deepEqual( Stem("catalán"), "catalan" );
	deepEqual( Stem("catalanes"), "catalan" );
	deepEqual( Stem("catalina"), "catalin" );
	deepEqual( Stem("catalítico"), "catalit" );
	deepEqual( Stem("catalíticos"), "catalit" );
	deepEqual( Stem("catalizador"), "cataliz" );
	deepEqual( Stem("catalogan"), "catalog" );
	deepEqual( Stem("catálogo"), "catalog" );
	deepEqual( Stem("catamo"), "catam" );
	deepEqual( Stem("cataño"), "catañ" );
	deepEqual( Stem("catarata"), "catarat" );
	deepEqual( Stem("cataratas"), "catarat" );
	deepEqual( Stem("catarina"), "catarin" );
	deepEqual( Stem("catarro"), "catarr" );
	deepEqual( Stem("catarros"), "catarr" );
	deepEqual( Stem("catarsis"), "catarsis" );
	deepEqual( Stem("catársis"), "catarsis" );
	deepEqual( Stem("catastral"), "catastral" );
	deepEqual( Stem("catastrales"), "catastral" );
	deepEqual( Stem("catastro"), "catastr" );
	deepEqual( Stem("catástrofe"), "catastrof" );
	deepEqual( Stem("catastrófica"), "catastrof" );
	deepEqual( Stem("cátchers"), "catchers" );
	deepEqual( Stem("cateadas"), "cat" );
	deepEqual( Stem("cátedra"), "catedr" );
	deepEqual( Stem("catedral"), "catedral" );
	deepEqual( Stem("catedrática"), "catedrat" );
	deepEqual( Stem("catedrático"), "catedrat" );
	deepEqual( Stem("catedráticos"), "catedrat" );
	deepEqual( Stem("categoría"), "categor" );
	deepEqual( Stem("categorías"), "categor" );
	deepEqual( Stem("cateos"), "cate" );
	deepEqual( Stem("catequesis"), "catequesis" );
	deepEqual( Stem("católica"), "catol" );
	deepEqual( Stem("catolicismo"), "catolic" );
	deepEqual( Stem("católico"), "catol" );
	deepEqual( Stem("católicos"), "catol" );
	deepEqual( Stem("catón"), "caton" );
	deepEqual( Stem("catorce"), "catorc" );
	deepEqual( Stem("catrerina"), "catrerin" );
	deepEqual( Stem("catsup"), "catsup" );
	deepEqual( Stem("cauce"), "cauc" );
	deepEqual( Stem("cauces"), "cauc" );
	deepEqual( Stem("caucional"), "caucional" );
	deepEqual( Stem("caudalosos"), "caudal" );
	deepEqual( Stem("caudillo"), "caudill" );
	deepEqual( Stem("causa"), "caus" );
	deepEqual( Stem("causada"), "caus" );
	deepEqual( Stem("causadas"), "caus" );
	deepEqual( Stem("causado"), "caus" );
	deepEqual( Stem("causados"), "caus" );
	deepEqual( Stem("causaefecto"), "causaefect" );
	deepEqual( Stem("causales"), "causal" );
	deepEqual( Stem("causan"), "caus" );
	deepEqual( Stem("causando"), "caus" );
	deepEqual( Stem("causante"), "causant" );
	deepEqual( Stem("causantes"), "causant" );
	deepEqual( Stem("causar"), "caus" );
	deepEqual( Stem("causará"), "caus" );
	deepEqual( Stem("causaron"), "caus" );
	deepEqual( Stem("causas"), "caus" );
	deepEqual( Stem("cause"), "caus" );
	deepEqual( Stem("causó"), "caus" );
	deepEqual( Stem("cautela"), "cautel" );
	deepEqual( Stem("cautelosa"), "cautel" );
	deepEqual( Stem("cautivarlos"), "cautiv" );
	deepEqual( Stem("cautivas"), "cautiv" );
	deepEqual( Stem("cautivos"), "cautiv" );
	deepEqual( Stem("cavazos"), "cavaz" );
	deepEqual( Stem("cavernaria"), "cavernari" );
	deepEqual( Stem("cavidad"), "cavid" );
	deepEqual( Stem("cayeran"), "cayer" );
	deepEqual( Stem("cayeron"), "cayeron" );
	deepEqual( Stem("cayetano"), "cayetan" );
	deepEqual( Stem("cayman"), "caym" );
	deepEqual( Stem("cayo"), "cay" );
	deepEqual( Stem("cayó"), "cay" );
	deepEqual( Stem("caza"), "caz" );
	deepEqual( Stem("cazador"), "cazador" );
	deepEqual( Stem("cazadoras"), "cazador" );
	deepEqual( Stem("cazadores"), "cazador" );
	deepEqual( Stem("cazar"), "caz" );
	deepEqual( Stem("cázares"), "cazar" );
	deepEqual( Stem("cazaux"), "cazaux" );
	deepEqual( Stem("cazuela"), "cazuel" );
	deepEqual( Stem("cbinbur"), "cbinbur" );
	deepEqual( Stem("cbs"), "cbs" );
	deepEqual( Stem("cbtis"), "cbtis" );
	deepEqual( Stem("ccd"), "ccd" );
	deepEqual( Stem("cce"), "cce" );
	deepEqual( Stem("ccinlac"), "ccinlac" );
	deepEqual( Stem("ccolonia"), "ccoloni" );
	deepEqual( Stem("ccp"), "ccp" );
	deepEqual( Stem("cd"), "cd" );
	deepEqual( Stem("ce"), "ce" );
	deepEqual( Stem("cear"), "cear" );
	deepEqual( Stem("cebada"), "ceb" );
	deepEqual( Stem("cebatis"), "cebatis" );
	deepEqual( Stem("cebolla"), "ceboll" );
	deepEqual( Stem("cebollas"), "ceboll" );
	deepEqual( Stem("cebrián"), "cebrian" );
	deepEqual( Stem("cecilia"), "cecili" );
	deepEqual( Stem("ceda"), "ced" );
	deepEqual( Stem("cedart"), "cedart" );
	deepEqual( Stem("cede"), "ced" );
	deepEqual( Stem("cedeco"), "cedec" );
	deepEqual( Stem("cedeño"), "cedeñ" );
	deepEqual( Stem("ceder"), "ced" );
	deepEqual( Stem("cederán"), "ced" );
	deepEqual( Stem("cedería"), "ced" );
	deepEqual( Stem("cedido"), "ced" );
	deepEqual( Stem("cedieron"), "ced" );
	deepEqual( Stem("cedió"), "ced" );
	deepEqual( Stem("cedral"), "cedral" );
	deepEqual( Stem("cédula"), "cedul" );
	deepEqual( Stem("cédulas"), "cedul" );
	deepEqual( Stem("cee"), "cee" );
	deepEqual( Stem("cegarse"), "ceg" );
	deepEqual( Stem("ceja"), "cej" );
	deepEqual( Stem("celadora"), "celador" );
	deepEqual( Stem("celadores"), "celador" );
	deepEqual( Stem("celaya"), "celay" );
	deepEqual( Stem("celda"), "celd" );
	deepEqual( Stem("celebérrima"), "celeberrim" );
	deepEqual( Stem("celebra"), "celebr" );
	deepEqual( Stem("celebraba"), "celebr" );
	deepEqual( Stem("celebración"), "celebr" );
	deepEqual( Stem("celebraciones"), "celebr" );
	deepEqual( Stem("celebrada"), "celebr" );
	deepEqual( Stem("celebradas"), "celebr" );
	deepEqual( Stem("celebrado"), "celebr" );
	deepEqual( Stem("celebrados"), "celebr" );
	deepEqual( Stem("celebran"), "celebr" );
	deepEqual( Stem("celebrar"), "celebr" );
	deepEqual( Stem("celebrará"), "celebr" );
	deepEqual( Stem("celebrarlo"), "celebr" );
	deepEqual( Stem("celebraron"), "celebr" );
	deepEqual( Stem("celebrarse"), "celebr" );
	deepEqual( Stem("celebre"), "celebr" );
	deepEqual( Stem("célebre"), "celebr" );
	deepEqual( Stem("celébrelas"), "celebrel" );
	deepEqual( Stem("célebres"), "celebr" );
	deepEqual( Stem("celebridad"), "celebr" );
	deepEqual( Stem("celebridades"), "celebr" );
	deepEqual( Stem("celebró"), "celebr" );
	deepEqual( Stem("celeridad"), "celer" );
	deepEqual( Stem("celestes"), "celest" );
	deepEqual( Stem("celestial"), "celestial" );
	deepEqual( Stem("celia"), "celi" );
	deepEqual( Stem("celiberia"), "celiberi" );
	deepEqual( Stem("celio"), "celi" );
	deepEqual( Stem("celo"), "cel" );
	deepEqual( Stem("celos"), "cel" );
	deepEqual( Stem("celso"), "cels" );
	deepEqual( Stem("celta"), "celt" );
	deepEqual( Stem("célula"), "celul" );
	deepEqual( Stem("celular"), "celul" );
	deepEqual( Stem("celulares"), "celular" );
	deepEqual( Stem("células"), "celul" );
	deepEqual( Stem("cemcaspe"), "cemcasp" );
	deepEqual( Stem("cement"), "cement" );
	deepEqual( Stem("cementeras"), "cementer" );
	deepEqual( Stem("cementero"), "cementer" );
	deepEqual( Stem("cemento"), "cement" );
	deepEqual( Stem("cementos"), "cement" );
	deepEqual( Stem("cemex"), "cemex" );
	deepEqual( Stem("cen"), "cen" );
	deepEqual( Stem("cena"), "cen" );
	deepEqual( Stem("cenamos"), "cen" );
	deepEqual( Stem("cenar"), "cen" );
	deepEqual( Stem("cenas"), "cen" );
	deepEqual( Stem("cenefa"), "cenef" );
	deepEqual( Stem("cenefas"), "cenef" );
	deepEqual( Stem("ceñido"), "ceñ" );
	deepEqual( Stem("ceniza"), "ceniz" );
	deepEqual( Stem("cenizas"), "ceniz" );
	deepEqual( Stem("cenlac"), "cenlac" );
	deepEqual( Stem("cenó"), "cen" );
	deepEqual( Stem("censo"), "cens" );
	deepEqual( Stem("censura"), "censur" );
	deepEqual( Stem("censurable"), "censur" );
	deepEqual( Stem("censurada"), "censur" );
	deepEqual( Stem("censuradas"), "censur" );
	deepEqual( Stem("censurado"), "censur" );
	deepEqual( Stem("censurar"), "censur" );
	deepEqual( Stem("censuró"), "censur" );
	deepEqual( Stem("centavo"), "centav" );
	deepEqual( Stem("centavos"), "centav" );
	deepEqual( Stem("centenar"), "centen" );
	deepEqual( Stem("centenares"), "centenar" );
	deepEqual( Stem("centenario"), "centenari" );
	deepEqual( Stem("centeno"), "centen" );
	deepEqual( Stem("center"), "cent" );
	deepEqual( Stem("centésimas"), "centesim" );
	deepEqual( Stem("centígrados"), "centigr" );
	deepEqual( Stem("centímetros"), "centimetr" );
	deepEqual( Stem("centradas"), "centr" );
	deepEqual( Stem("central"), "central" );
	deepEqual( Stem("centrales"), "central" );
	deepEqual( Stem("centramos"), "centr" );
	deepEqual( Stem("centrándose"), "centr" );
	deepEqual( Stem("centrará"), "centr" );
	deepEqual( Stem("centrarse"), "centr" );
	deepEqual( Stem("centre"), "centr" );
	deepEqual( Stem("céntricas"), "centric" );
	deepEqual( Stem("céntrico"), "centric" );
	deepEqual( Stem("céntricos"), "centric" );
	deepEqual( Stem("centro"), "centr" );
	deepEqual( Stem("centroamérica"), "centroamer" );
	deepEqual( Stem("centroamericana"), "centroamerican" );
	deepEqual( Stem("centroamericano"), "centroamerican" );
	deepEqual( Stem("centroamericanos"), "centroamerican" );
	deepEqual( Stem("centroderechista"), "centroderech" );
	deepEqual( Stem("centros"), "centr" );
	deepEqual( Stem("century"), "century" );
	deepEqual( Stem("cepa"), "cep" );
	deepEqual( Stem("cepal"), "cepal" );
	deepEqual( Stem("cepeda"), "ceped" );
	deepEqual( Stem("cepillan"), "cepill" );
	deepEqual( Stem("cepillo"), "cepill" );
	deepEqual( Stem("cerámica"), "ceram" );
	deepEqual( Stem("cerca"), "cerc" );
	deepEqual( Stem("cercados"), "cerc" );
	deepEqual( Stem("cercana"), "cercan" );
	deepEqual( Stem("cercanas"), "cercan" );
	deepEqual( Stem("cercando"), "cerc" );
	deepEqual( Stem("cercanía"), "cercan" );
	deepEqual( Stem("cercano"), "cercan" );
	deepEqual( Stem("cercanos"), "cercan" );
	deepEqual( Stem("cercar"), "cerc" );
	deepEqual( Stem("cerciorarse"), "cercior" );
	deepEqual( Stem("cerda"), "cerd" );
	deepEqual( Stem("cerdas"), "cerd" );
	deepEqual( Stem("cerdo"), "cerd" );
	deepEqual( Stem("cerdos"), "cerd" );
	deepEqual( Stem("cereales"), "cereal" );
	deepEqual( Stem("cerebral"), "cerebral" );
	deepEqual( Stem("cerebrales"), "cerebral" );
	deepEqual( Stem("cerebro"), "cerebr" );
	deepEqual( Stem("cerebros"), "cerebr" );
	deepEqual( Stem("ceremonia"), "ceremoni" );
	deepEqual( Stem("ceremonias"), "ceremoni" );
	deepEqual( Stem("ceremoniosamente"), "ceremoni" );
	deepEqual( Stem("cereso"), "ceres" );
	deepEqual( Stem("cereza"), "cerez" );
	deepEqual( Stem("cero"), "cer" );
	deepEqual( Stem("cerraba"), "cerr" );
	deepEqual( Stem("cerraban"), "cerr" );
	deepEqual( Stem("cerrada"), "cerr" );
	deepEqual( Stem("cerradas"), "cerr" );
	deepEqual( Stem("cerrado"), "cerr" );
	deepEqual( Stem("cerrados"), "cerr" );
	deepEqual( Stem("cerradura"), "cerradur" );
	deepEqual( Stem("cerraduras"), "cerradur" );
	deepEqual( Stem("cerralvo"), "cerralv" );
	deepEqual( Stem("cerramos"), "cerr" );
	deepEqual( Stem("cerrando"), "cerr" );
	deepEqual( Stem("cerrar"), "cerr" );
	deepEqual( Stem("cerrará"), "cerr" );
	deepEqual( Stem("cerrarán"), "cerr" );
	deepEqual( Stem("cerrarlos"), "cerr" );
	deepEqual( Stem("cerraron"), "cerr" );
	deepEqual( Stem("cerrazón"), "cerrazon" );
	deepEqual( Stem("cerrito"), "cerrit" );
	deepEqual( Stem("cerro"), "cerr" );
	deepEqual( Stem("cerró"), "cerr" );
	deepEqual( Stem("cerrojo"), "cerroj" );
	deepEqual( Stem("cerros"), "cerr" );
	deepEqual( Stem("certamen"), "certam" );
	deepEqual( Stem("certera"), "certer" );
	deepEqual( Stem("certero"), "certer" );
	deepEqual( Stem("certeros"), "certer" );
	deepEqual( Stem("certeza"), "certez" );
	deepEqual( Stem("certidumbre"), "certidumbr" );
	deepEqual( Stem("certificado"), "certific" );
	deepEqual( Stem("certificados"), "certific" );
	deepEqual( Stem("certucha"), "certuch" );
	deepEqual( Stem("cerval"), "cerval" );
	deepEqual( Stem("cervantes"), "cervant" );
	deepEqual( Stem("cervantino"), "cervantin" );
	deepEqual( Stem("cerveceras"), "cervecer" );
	deepEqual( Stem("cervecería"), "cervec" );
	deepEqual( Stem("cervera"), "cerver" );
	deepEqual( Stem("cerveza"), "cervez" );
	deepEqual( Stem("cervezas"), "cervez" );
	deepEqual( Stem("cesa"), "ces" );
	deepEqual( Stem("cesados"), "ces" );
	deepEqual( Stem("cesan"), "ces" );
	deepEqual( Stem("cesar"), "ces" );
	deepEqual( Stem("césar"), "ces" );
	deepEqual( Stem("cesará"), "ces" );
	deepEqual( Stem("cesáreo"), "cesare" );
	deepEqual( Stem("cesaría"), "ces" );
	deepEqual( Stem("cese"), "ces" );
	deepEqual( Stem("cesión"), "cesion" );
	deepEqual( Stem("cesó"), "ces" );
	deepEqual( Stem("cesto"), "cest" );
	deepEqual( Stem("cetemista"), "cetem" );
	deepEqual( Stem("cetemistas"), "cetem" );
	deepEqual( Stem("cetes"), "cet" );
	deepEqual( Stem("cetro"), "cetr" );
	deepEqual( Stem("cetros"), "cetr" );
	deepEqual( Stem("ceu"), "ceu" );
	deepEqual( Stem("cevallos"), "cevall" );
	deepEqual( Stem("cezanne"), "cezann" );
	deepEqual( Stem("cfe"), "cfe" );
	deepEqual( Stem("ch"), "ch" );
	deepEqual( Stem("chagoyos"), "chagoy" );
	deepEqual( Stem("chagui"), "chagui" );
	deepEqual( Stem("chains"), "chains" );
	deepEqual( Stem("chal"), "chal" );
	deepEqual( Stem("chaleco"), "chalec" );
	deepEqual( Stem("chalina"), "chalin" );
	deepEqual( Stem("chalmer"), "chalm" );
	deepEqual( Stem("chamaca"), "chamac" );
	deepEqual( Stem("chamarra"), "chamarr" );
	deepEqual( Stem("chamarras"), "chamarr" );
	deepEqual( Stem("chamba"), "chamb" );
	deepEqual( Stem("chambelanes"), "chambelan" );
	deepEqual( Stem("chamois"), "chamois" );
	deepEqual( Stem("chamorro"), "chamorr" );
	deepEqual( Stem("champúes"), "champu" );
	deepEqual( Stem("chamula"), "chamul" );
	deepEqual( Stem("chamuscado"), "chamusc" );
	deepEqual( Stem("chan"), "chan" );
	deepEqual( Stem("chance"), "chanc" );
	deepEqual( Stem("chanel"), "chanel" );
	deepEqual( Stem("chango"), "chang" );
	deepEqual( Stem("chantilly"), "chantilly" );
	deepEqual( Stem("chanza"), "chanz" );
	deepEqual( Stem("chapa"), "chap" );
	deepEqual( Stem("chapala"), "chapal" );
	deepEqual( Stem("chapo"), "chap" );
	deepEqual( Stem("chapoteaderos"), "chapoteader" );
	deepEqual( Stem("chapultepec"), "chapultepec" );
	deepEqual( Stem("chapuzas"), "chapuz" );
	deepEqual( Stem("chaqueta"), "chaquet" );
	deepEqual( Stem("chara"), "char" );
	deepEqual( Stem("character"), "charact" );
	deepEqual( Stem("charchina"), "charchin" );
	deepEqual( Stem("charchino"), "charchin" );
	deepEqual( Stem("charco"), "charc" );
	deepEqual( Stem("charla"), "charl" );
	deepEqual( Stem("charlaron"), "charl" );
	deepEqual( Stem("charlas"), "charl" );
	deepEqual( Stem("charles"), "charl" );
	deepEqual( Stem("charlie"), "charli" );
	deepEqual( Stem("charló"), "charl" );
	deepEqual( Stem("charly"), "charly" );
	deepEqual( Stem("charnela"), "charnel" );
	deepEqual( Stem("charnell"), "charnell" );
	deepEqual( Stem("charreada"), "charr" );
	deepEqual( Stem("charreamos"), "charr" );
	deepEqual( Stem("charreando"), "charr" );
	deepEqual( Stem("charro"), "charr" );
	deepEqual( Stem("charros"), "charr" );
	deepEqual( Stem("chase"), "chas" );
	deepEqual( Stem("chasis"), "chasis" );
	deepEqual( Stem("chatarra"), "chatarr" );
	deepEqual( Stem("chatarrero"), "chatarrer" );
	deepEqual( Stem("chato"), "chat" );
	deepEqual( Stem("chaumu"), "chaumu" );
	deepEqual( Stem("chauvet"), "chauvet" );
	deepEqual( Stem("chavarría"), "chavarr" );
	deepEqual( Stem("chavas"), "chav" );
	deepEqual( Stem("chavero"), "chaver" );
	deepEqual( Stem("chavez"), "chavez" );
	deepEqual( Stem("chávez"), "chavez" );
	deepEqual( Stem("chavitas"), "chavit" );
	deepEqual( Stem("chavo"), "chav" );
	deepEqual( Stem("chavos"), "chav" );
	deepEqual( Stem("che"), "che" );
	deepEqual( Stem("checa"), "chec" );
	deepEqual( Stem("checar"), "chec" );
	deepEqual( Stem("checo"), "chec" );
	deepEqual( Stem("checoslovaquia"), "checoslovaqui" );
	deepEqual( Stem("chedraoui"), "chedraoui" );
	deepEqual( Stem("chefs"), "chefs" );
	deepEqual( Stem("cheliabinsk"), "cheliabinsk" );
	deepEqual( Stem("chelo"), "chel" );
	deepEqual( Stem("chemical"), "chemical" );
	deepEqual( Stem("chemicalweek"), "chemicalweek" );
	deepEqual( Stem("chemise"), "chemis" );
	deepEqual( Stem("chepo"), "chep" );
	deepEqual( Stem("cheque"), "chequ" );
	deepEqual( Stem("chequeo"), "cheque" );
	deepEqual( Stem("cheques"), "chequ" );
	deepEqual( Stem("cheraw"), "cheraw" );
	deepEqual( Stem("chesca"), "chesc" );
	deepEqual( Stem("chester"), "chest" );
	deepEqual( Stem("chetumal"), "chetumal" );
	deepEqual( Stem("chetumaleños"), "chetumaleñ" );
	deepEqual( Stem("chevrolet"), "chevrolet" );
	deepEqual( Stem("cheyene"), "cheyen" );
	deepEqual( Stem("cheyenne"), "cheyenn" );
	deepEqual( Stem("chi"), "chi" );
	deepEqual( Stem("chía"), "chi" );
	deepEqual( Stem("chiapaneca"), "chiapanec" );
	deepEqual( Stem("chiapas"), "chiap" );
	deepEqual( Stem("chiba"), "chib" );
	deepEqual( Stem("chic"), "chic" );
	deepEqual( Stem("chica"), "chic" );
	deepEqual( Stem("chicago"), "chicag" );
	deepEqual( Stem("chicana"), "chican" );
	deepEqual( Stem("chicano"), "chican" );
	deepEqual( Stem("chicas"), "chic" );
	deepEqual( Stem("chicharrones"), "chicharron" );
	deepEqual( Stem("chichen"), "chich" );
	deepEqual( Stem("chichimecas"), "chichimec" );
	deepEqual( Stem("chicles"), "chicl" );
	deepEqual( Stem("chico"), "chic" );
	deepEqual( Stem("chicos"), "chic" );
	deepEqual( Stem("chicotear"), "chicot" );
	deepEqual( Stem("chicuelinas"), "chicuelin" );
	deepEqual( Stem("chido"), "chid" );
	deepEqual( Stem("chifón"), "chifon" );
	deepEqual( Stem("chiguagua"), "chiguagu" );
	deepEqual( Stem("chihuahua"), "chihuahu" );
	deepEqual( Stem("chihuahuense"), "chihuahuens" );
	deepEqual( Stem("chiítas"), "chiit" );
	deepEqual( Stem("chila"), "chil" );
	deepEqual( Stem("chilac"), "chilac" );
	deepEqual( Stem("chilacayota"), "chilacayot" );
	deepEqual( Stem("chilangolandia"), "chilangolandi" );
	deepEqual( Stem("chilaquiles"), "chilaquil" );
	deepEqual( Stem("chile"), "chil" );
	deepEqual( Stem("chileno"), "chilen" );
	deepEqual( Stem("chilenos"), "chilen" );
	deepEqual( Stem("chiles"), "chil" );
	deepEqual( Stem("chili"), "chili" );
	deepEqual( Stem("chilpancingo"), "chilpancing" );
	deepEqual( Stem("chima"), "chim" );
	deepEqual( Stem("chin"), "chin" );
	deepEqual( Stem("china"), "chin" );
	deepEqual( Stem("chinche"), "chinch" );
	deepEqual( Stem("chinches"), "chinch" );
	deepEqual( Stem("chino"), "chin" );
	deepEqual( Stem("chinos"), "chin" );
	deepEqual( Stem("chip"), "chip" );
	deepEqual( Stem("chipinque"), "chipinqu" );
	deepEqual( Stem("chips"), "chips" );
	deepEqual( Stem("chiquita"), "chiquit" );
	deepEqual( Stem("chirac"), "chirac" );
	deepEqual( Stem("chirinos"), "chirin" );
	deepEqual( Stem("chisec"), "chisec" );
	deepEqual( Stem("chismosa"), "chismos" );
	deepEqual( Stem("chispa"), "chisp" );
	deepEqual( Stem("chispas"), "chisp" );
	deepEqual( Stem("chispazo"), "chispaz" );
	deepEqual( Stem("chispeando"), "chisp" );
	deepEqual( Stem("chistes"), "chist" );
	deepEqual( Stem("chiva"), "chiv" );
	deepEqual( Stem("chivas"), "chiv" );
	deepEqual( Stem("chivo"), "chiv" );
	deepEqual( Stem("chocado"), "choc" );
	deepEqual( Stem("chocan"), "choc" );
	deepEqual( Stem("chocar"), "choc" );
	deepEqual( Stem("chocarán"), "choc" );
	deepEqual( Stem("chocaron"), "choc" );
	deepEqual( Stem("chocó"), "choc" );
	deepEqual( Stem("chocolate"), "chocolat" );
	deepEqual( Stem("chocolates"), "chocolat" );
	deepEqual( Stem("chofer"), "chof" );
	deepEqual( Stem("choferes"), "chofer" );
	deepEqual( Stem("chontalpa"), "chontalp" );
	deepEqual( Stem("chopin"), "chopin" );
	deepEqual( Stem("choque"), "choqu" );
	deepEqual( Stem("choques"), "choqu" );
	deepEqual( Stem("chorizo"), "choriz" );
	deepEqual( Stem("chorreando"), "chorr" );
	deepEqual( Stem("chorro"), "chorr" );
	deepEqual( Stem("chraysler"), "chraysl" );
	deepEqual( Stem("chris"), "chris" );
	deepEqual( Stem("christi"), "christi" );
	deepEqual( Stem("christian"), "christi" );
	deepEqual( Stem("christie"), "christi" );
	deepEqual( Stem("christoph"), "christoph" );
	deepEqual( Stem("christopher"), "christoph" );
	deepEqual( Stem("chrysler"), "chrysler" );
	deepEqual( Stem("chucho"), "chuch" );
	deepEqual( Stem("chuck"), "chuck" );
	deepEqual( Stem("chuletón"), "chuleton" );
	deepEqual( Stem("chung"), "chung" );
	deepEqual( Stem("chupa"), "chup" );
	deepEqual( Stem("chupaban"), "chup" );
	deepEqual( Stem("chupaletada"), "chupalet" );
	deepEqual( Stem("chupando"), "chup" );
	deepEqual( Stem("chupándose"), "chup" );
	deepEqual( Stem("chuparse"), "chup" );
	deepEqual( Stem("chupón"), "chupon" );
	deepEqual( Stem("churubusco"), "churubusc" );
	deepEqual( Stem("churumbela"), "churumbel" );
	deepEqual( Stem("chusca"), "chusc" );
	deepEqual( Stem("chyba"), "chyba" );
	deepEqual( Stem("cia"), "cia" );
	deepEqual( Stem("ciangherotti"), "ciangherotti" );
	deepEqual( Stem("cibaeñas"), "cibaeñ" );
	deepEqual( Stem("cibao"), "ciba" );
	deepEqual( Stem("cicatrización"), "cicatriz" );
	deepEqual( Stem("cíclicamente"), "ciclic" );
	deepEqual( Stem("cíclico"), "ciclic" );
	deepEqual( Stem("ciclismo"), "ciclism" );
	deepEqual( Stem("ciclista"), "ciclist" );
	deepEqual( Stem("ciclistas"), "ciclist" );
	deepEqual( Stem("ciclístico"), "ciclist" );
	deepEqual( Stem("ciclísticos"), "ciclist" );
	deepEqual( Stem("ciclo"), "cicl" );
	deepEqual( Stem("ciclónica"), "ciclon" );
	deepEqual( Stem("ciclos"), "cicl" );
	deepEqual( Stem("ciclosporina"), "ciclosporin" );
	deepEqual( Stem("cide"), "cid" );
	deepEqual( Stem("cielo"), "ciel" );
	deepEqual( Stem("cien"), "cien" );
	deepEqual( Stem("ciencia"), "cienci" );
	deepEqual( Stem("ciencias"), "cienci" );
	deepEqual( Stem("ciénega"), "cieneg" );
	deepEqual( Stem("científica"), "cientif" );
	deepEqual( Stem("científicas"), "cientif" );
	deepEqual( Stem("científico"), "cientif" );
	deepEqual( Stem("científicos"), "cientif" );
	deepEqual( Stem("ciento"), "cient" );
	deepEqual( Stem("cientos"), "cient" );
	deepEqual( Stem("ciernes"), "ciern" );
	deepEqual( Stem("cierra"), "cierr" );
	deepEqual( Stem("cierran"), "cierr" );
	deepEqual( Stem("cierre"), "cierr" );
	deepEqual( Stem("cierres"), "cierr" );
	deepEqual( Stem("cierta"), "ciert" );
	deepEqual( Stem("ciertamente"), "ciert" );
	deepEqual( Stem("ciertas"), "ciert" );
	deepEqual( Stem("cierto"), "ciert" );
	deepEqual( Stem("ciertos"), "ciert" );
	deepEqual( Stem("cifra"), "cifr" );
	deepEqual( Stem("cifrarse"), "cifr" );
	deepEqual( Stem("cifras"), "cifr" );
	deepEqual( Stem("cigarrera"), "cigarrer" );
	deepEqual( Stem("cigarrero"), "cigarrer" );
	deepEqual( Stem("cigarrillos"), "cigarrill" );
	deepEqual( Stem("cigarros"), "cigarr" );
	deepEqual( Stem("cihuatepixque"), "cihuatepixqu" );
	deepEqual( Stem("cilindros"), "cilindr" );
	deepEqual( Stem("cima"), "cim" );
	deepEqual( Stem("cimarrones"), "cimarron" );
	deepEqual( Stem("cimbraría"), "cimbr" );
	deepEqual( Stem("cimiento"), "cimient" );
	deepEqual( Stem("cimientos"), "cimient" );
	deepEqual( Stem("cin"), "cin" );
	deepEqual( Stem("cincelado"), "cincel" );
	deepEqual( Stem("cinco"), "cinc" );
	deepEqual( Stem("cincuenta"), "cincuent" );
	deepEqual( Stem("cine"), "cin" );
	deepEqual( Stem("cineasta"), "cineast" );
	deepEqual( Stem("cinemascope"), "cinemascop" );
	deepEqual( Stem("cinematografía"), "cinematograf" );
	deepEqual( Stem("cinematográfica"), "cinematograf" );
	deepEqual( Stem("cinematográficas"), "cinematograf" );
	deepEqual( Stem("cinematográfico"), "cinematograf" );
	deepEqual( Stem("cines"), "cin" );
	deepEqual( Stem("cineterraza"), "cineterraz" );
	deepEqual( Stem("cinética"), "cinet" );
	deepEqual( Stem("cinismo"), "cinism" );
	deepEqual( Stem("cinta"), "cint" );
	deepEqual( Stem("cintas"), "cint" );
	deepEqual( Stem("cintermex"), "cintermex" );
	deepEqual( Stem("cinto"), "cint" );
	deepEqual( Stem("cintos"), "cint" );
	deepEqual( Stem("cintura"), "cintur" );
	deepEqual( Stem("cinturón"), "cinturon" );
	deepEqual( Stem("cinturones"), "cinturon" );
	deepEqual( Stem("cio"), "cio" );
	deepEqual( Stem("cipriano"), "ciprian" );
	deepEqual( Stem("circo"), "circ" );
	deepEqual( Stem("circos"), "circ" );
	deepEqual( Stem("circuito"), "circuit" );
	deepEqual( Stem("circuitos"), "circuit" );
	deepEqual( Stem("circula"), "circul" );
	deepEqual( Stem("circulaba"), "circul" );
	deepEqual( Stem("circulaban"), "circul" );
	deepEqual( Stem("circulación"), "circul" );
	deepEqual( Stem("circulan"), "circul" );
	deepEqual( Stem("circulando"), "circul" );
	deepEqual( Stem("circular"), "circul" );
	deepEqual( Stem("circulará"), "circul" );
	deepEqual( Stem("circularán"), "circul" );
	deepEqual( Stem("circularía"), "circul" );
	deepEqual( Stem("circularon"), "circul" );
	deepEqual( Stem("circulatoria"), "circulatori" );
	deepEqual( Stem("circulatorios"), "circulatori" );
	deepEqual( Stem("círculo"), "circul" );
	deepEqual( Stem("circuló"), "circul" );
	deepEqual( Stem("círculos"), "circul" );
	deepEqual( Stem("circunscribe"), "circunscrib" );
	deepEqual( Stem("circunscrito"), "circunscrit" );
	deepEqual( Stem("circunstancia"), "circunst" );
	deepEqual( Stem("circunstancias"), "circunst" );
	deepEqual( Stem("circunvalación"), "circunval" );
	deepEqual( Stem("circurret"), "circurret" );
	deepEqual( Stem("cirios"), "ciri" );
	deepEqual( Stem("cirugía"), "cirug" );
	deepEqual( Stem("cirujanos"), "cirujan" );
	deepEqual( Stem("cirules"), "cirul" );
	deepEqual( Stem("cisneros"), "cisner" );
	deepEqual( Stem("cita"), "cit" );
	deepEqual( Stem("citada"), "cit" );
	deepEqual( Stem("citadas"), "cit" );
	deepEqual( Stem("citado"), "cit" );
	deepEqual( Stem("citados"), "cit" );
	deepEqual( Stem("citamos"), "cit" );
	deepEqual( Stem("citan"), "cit" );
	deepEqual( Stem("citar"), "cit" );
	deepEqual( Stem("citará"), "cit" );
	deepEqual( Stem("citas"), "cit" );
	deepEqual( Stem("citation"), "citation" );
	deepEqual( Stem("citatorios"), "citatori" );
	deepEqual( Stem("cite"), "cit" );
	deepEqual( Stem("citen"), "cit" );
	deepEqual( Stem("cito"), "cit" );
	deepEqual( Stem("citó"), "cit" );
	deepEqual( Stem("cítricos"), "citric" );
	deepEqual( Stem("city"), "city" );
	deepEqual( Stem("ciudad"), "ciud" );
	deepEqual( Stem("ciudadana"), "ciudadan" );
	deepEqual( Stem("ciudadanas"), "ciudadan" );
	deepEqual( Stem("ciudadanía"), "ciudadan" );
	deepEqual( Stem("ciudadaníapanprd"), "ciudadaniapanprd" );
	deepEqual( Stem("ciudadanías"), "ciudadan" );
	deepEqual( Stem("ciudadano"), "ciudadan" );
	deepEqual( Stem("ciudadanos"), "ciudadan" );
	deepEqual( Stem("ciudades"), "ciudad" );
	deepEqual( Stem("civic"), "civic" );
	deepEqual( Stem("cívica"), "civic" );
	deepEqual( Stem("cívicas"), "civic" );
	deepEqual( Stem("cívico"), "civic" );
	deepEqual( Stem("cívicos"), "civic" );
	deepEqual( Stem("civil"), "civil" );
	deepEqual( Stem("civiles"), "civil" );
	deepEqual( Stem("civilización"), "civiliz" );
	deepEqual( Stem("civilizaciones"), "civiliz" );
	deepEqual( Stem("civilizada"), "civiliz" );
	deepEqual( Stem("civilizador"), "civiliz" );
	deepEqual( Stem("civilizadora"), "civiliz" );
	deepEqual( Stem("civilizar"), "civiliz" );
	deepEqual( Stem("civismo"), "civism" );
	deepEqual( Stem("clair"), "cla" );
	deepEqual( Stem("clamor"), "clamor" );
	deepEqual( Stem("clan"), "clan" );
	deepEqual( Stem("clandestinos"), "clandestin" );
	deepEqual( Stem("clanes"), "clan" );
	deepEqual( Stem("clapton"), "clapton" );
	deepEqual( Stem("clara"), "clar" );
	deepEqual( Stem("claramente"), "clar" );
	deepEqual( Stem("claras"), "clar" );
	deepEqual( Stem("claridad"), "clarid" );
	deepEqual( Stem("clarifiquen"), "clarifiqu" );
	deepEqual( Stem("clariond"), "clariond" );
	deepEqual( Stem("clarísima"), "clarisim" );
	deepEqual( Stem("clarividencia"), "clarivident" );
	deepEqual( Stem("clarke"), "clark" );
	deepEqual( Stem("claro"), "clar" );
	deepEqual( Stem("claros"), "clar" );
	deepEqual( Stem("claroscuros"), "claroscur" );
	deepEqual( Stem("clase"), "clas" );
	deepEqual( Stem("clases"), "clas" );
	deepEqual( Stem("clásica"), "clasic" );
	deepEqual( Stem("clásicas"), "clasic" );
	deepEqual( Stem("clasico"), "clasic" );
	deepEqual( Stem("clásico"), "clasic" );
	deepEqual( Stem("clásicos"), "clasic" );
	deepEqual( Stem("clasificación"), "clasif" );
	deepEqual( Stem("clasificaciones"), "clasif" );
	deepEqual( Stem("clasificada"), "clasific" );
	deepEqual( Stem("clasificadas"), "clasific" );
	deepEqual( Stem("clasificado"), "clasific" );
	deepEqual( Stem("clasificados"), "clasific" );
	deepEqual( Stem("clasificando"), "clasific" );
	deepEqual( Stem("clasificar"), "clasific" );
	deepEqual( Stem("clasificatorias"), "clasificatori" );
	deepEqual( Stem("classic"), "classic" );
	deepEqual( Stem("claude"), "claud" );
	deepEqual( Stem("claudia"), "claudi" );
	deepEqual( Stem("claudicar"), "claudic" );
	deepEqual( Stem("claudico"), "claudic" );
	deepEqual( Stem("claudio"), "claudi" );
	deepEqual( Stem("claustro"), "claustr" );
	deepEqual( Stem("cláusula"), "clausul" );
	deepEqual( Stem("cláusulas"), "clausul" );
	deepEqual( Stem("clausura"), "clausur" );
	deepEqual( Stem("clausurar"), "clausur" );
	deepEqual( Stem("clausurará"), "clausur" );
	deepEqual( Stem("clavada"), "clav" );
	deepEqual( Stem("clavar"), "clav" );
	deepEqual( Stem("clavaremos"), "clav" );
	deepEqual( Stem("clave"), "clav" );
	deepEqual( Stem("claves"), "clav" );
	deepEqual( Stem("clavó"), "clav" );
	deepEqual( Stem("claxon"), "claxon" );
	deepEqual( Stem("cleary"), "cleary" );
	deepEqual( Stem("clemente"), "clement" );
	deepEqual( Stem("cleotilde"), "cleotild" );
	deepEqual( Stem("clérigo"), "clerig" );
	deepEqual( Stem("clero"), "cler" );
	deepEqual( Stem("cliente"), "client" );
	deepEqual( Stem("clientela"), "clientel" );
	deepEqual( Stem("clientes"), "client" );
	deepEqual( Stem("clima"), "clim" );
	deepEqual( Stem("climáticas"), "climat" );
	deepEqual( Stem("clímax"), "climax" );
	deepEqual( Stem("clínica"), "clinic" );
	deepEqual( Stem("clínicas"), "clinic" );
	deepEqual( Stem("clínico"), "clinic" );
	deepEqual( Stem("clínicos"), "clinic" );
	deepEqual( Stem("clinton"), "clinton" );
	deepEqual( Stem("clone"), "clon" );
	deepEqual( Stem("clones"), "clon" );
	deepEqual( Stem("clos"), "clos" );
	deepEqual( Stem("closet"), "closet" );
	deepEqual( Stem("cloud"), "cloud" );
	deepEqual( Stem("clouthier"), "clouthi" );
	deepEqual( Stem("clowes"), "clow" );
	deepEqual( Stem("club"), "club" );
	deepEqual( Stem("clubes"), "club" );
	deepEqual( Stem("cma"), "cma" );
	deepEqual( Stem("cmb"), "cmb" );
	deepEqual( Stem("cmos"), "cmos" );
	deepEqual( Stem("cms"), "cms" );
	deepEqual( Stem("cna"), "cna" );
	deepEqual( Stem("cnca"), "cnca" );
	deepEqual( Stem("cndh"), "cndh" );
	deepEqual( Stem("cnet"), "cnet" );
	deepEqual( Stem("cnn"), "cnn" );
	deepEqual( Stem("cnpa"), "cnpa" );
	deepEqual( Stem("cnsf"), "cnsf" );
	deepEqual( Stem("cnv"), "cnv" );
	deepEqual( Stem("co"), "co" );
	deepEqual( Stem("coach"), "coach" );
	deepEqual( Stem("coaches"), "coach" );
	deepEqual( Stem("coachman"), "coachm" );
	deepEqual( Stem("coadyuvar"), "coadyuv" );
	deepEqual( Stem("coah"), "coah" );
	deepEqual( Stem("coahuila"), "coahuil" );
	deepEqual( Stem("coahuilense"), "coahuilens" );
	deepEqual( Stem("coahuilenses"), "coahuilens" );
	deepEqual( Stem("coalición"), "coalicion" );
	deepEqual( Stem("coartados"), "coart" );
	deepEqual( Stem("coatepec"), "coatepec" );
	deepEqual( Stem("coatlicue"), "coatlicu" );
	deepEqual( Stem("coautor"), "coautor" );
	deepEqual( Stem("cobán"), "coban" );
	deepEqual( Stem("cobardía"), "cobard" );
	deepEqual( Stem("cobertura"), "cobertur" );
	deepEqual( Stem("cobija"), "cobij" );
	deepEqual( Stem("cobijas"), "cobij" );
	deepEqual( Stem("cobol"), "cobol" );
	deepEqual( Stem("cobos"), "cob" );
	deepEqual( Stem("cobra"), "cobr" );
	deepEqual( Stem("cobraba"), "cobr" );
	deepEqual( Stem("cobrado"), "cobr" );
	deepEqual( Stem("cobramos"), "cobr" );
	deepEqual( Stem("cobran"), "cobr" );
	deepEqual( Stem("cobrando"), "cobr" );
	deepEqual( Stem("cobrar"), "cobr" );
	deepEqual( Stem("cobrara"), "cobr" );
	deepEqual( Stem("cobraran"), "cobr" );
	deepEqual( Stem("cobrarán"), "cobr" );
	deepEqual( Stem("cobraré"), "cobr" );
	deepEqual( Stem("cobrarles"), "cobr" );
	deepEqual( Stem("cobrarte"), "cobrart" );
	deepEqual( Stem("cobras"), "cobr" );
	deepEqual( Stem("cobre"), "cobr" );
	deepEqual( Stem("cobren"), "cobr" );
	deepEqual( Stem("cobro"), "cobr" );
	deepEqual( Stem("cobró"), "cobr" );
	deepEqual( Stem("cobros"), "cobr" );
	deepEqual( Stem("coca"), "coc" );
	deepEqual( Stem("cocaína"), "cocain" );
	deepEqual( Stem("cocainómano"), "cocainoman" );
	deepEqual( Stem("coche"), "coch" );
	deepEqual( Stem("cochero"), "cocher" );
	deepEqual( Stem("coches"), "coch" );
	deepEqual( Stem("cochinilla"), "cochinill" );
	deepEqual( Stem("cocina"), "cocin" );
	deepEqual( Stem("cocinar"), "cocin" );
	deepEqual( Stem("cocineta"), "cocinet" );
	deepEqual( Stem("coco"), "coc" );
	deepEqual( Stem("cocó"), "coc" );
	deepEqual( Stem("cocoa"), "coco" );
	deepEqual( Stem("cóconas"), "cocon" );
	deepEqual( Stem("cocoyoc"), "cocoyoc" );
	deepEqual( Stem("coctel"), "coctel" );
	deepEqual( Stem("codeme"), "codem" );
	deepEqual( Stem("codesal"), "codesal" );
	deepEqual( Stem("codicia"), "codici" );
	deepEqual( Stem("codiciado"), "codici" );
	deepEqual( Stem("código"), "codig" );
	deepEqual( Stem("códigos"), "codig" );
	deepEqual( Stem("codo"), "cod" );
	deepEqual( Stem("coece"), "coec" );
	deepEqual( Stem("coello"), "coell" );
	deepEqual( Stem("coempresario"), "coempresari" );
	deepEqual( Stem("coequipero"), "coequiper" );
	deepEqual( Stem("coercitivas"), "coercit" );
	deepEqual( Stem("coexistan"), "coexist" );
	deepEqual( Stem("coexistir"), "coexist" );
	deepEqual( Stem("cofre"), "cofr" );
	deepEqual( Stem("coger"), "cog" );
	deepEqual( Stem("coggi"), "coggi" );
	deepEqual( Stem("cogido"), "cog" );
	deepEqual( Stem("cognitivo"), "cognit" );
	deepEqual( Stem("cohabita"), "cohabit" );
	deepEqual( Stem("cohecho"), "cohech" );
	deepEqual( Stem("cohen"), "coh" );
	deepEqual( Stem("coherencia"), "coherent" );
	deepEqual( Stem("coherente"), "coherent" );
	deepEqual( Stem("cohetes"), "cohet" );
	deepEqual( Stem("cohetitos"), "cohetit" );
	deepEqual( Stem("coincide"), "coincid" );
	deepEqual( Stem("coinciden"), "coincid" );
	deepEqual( Stem("coincidencia"), "coincident" );
	deepEqual( Stem("coincidencias"), "coincident" );
	deepEqual( Stem("coincidentemente"), "coincident" );
	deepEqual( Stem("coincidentes"), "coincident" );
	deepEqual( Stem("coincidiera"), "coincid" );
	deepEqual( Stem("coincidieron"), "coincid" );
	deepEqual( Stem("coincidió"), "coincid" );
	deepEqual( Stem("coincidirán"), "coincid" );
	deepEqual( Stem("coinversión"), "coinversion" );
	deepEqual( Stem("coinversiones"), "coinversion" );
	deepEqual( Stem("coinvertir"), "coinvert" );
	deepEqual( Stem("cojo"), "coj" );
	deepEqual( Stem("col"), "col" );
	deepEqual( Stem("cola"), "col" );
	deepEqual( Stem("colabora"), "colabor" );
	deepEqual( Stem("colaboración"), "colabor" );
	deepEqual( Stem("colaborado"), "colabor" );
	deepEqual( Stem("colaborador"), "colabor" );
	deepEqual( Stem("colaboradores"), "colabor" );
	deepEqual( Stem("colaboran"), "colabor" );
	deepEqual( Stem("colaborando"), "colabor" );
	deepEqual( Stem("colaborar"), "colabor" );
	deepEqual( Stem("colaborara"), "colabor" );
	deepEqual( Stem("colaboraran"), "colabor" );
	deepEqual( Stem("colaboraría"), "colabor" );
	deepEqual( Stem("colaboraron"), "colabor" );
	deepEqual( Stem("colabore"), "colabor" );
	deepEqual( Stem("colapsaron"), "colaps" );
	deepEqual( Stem("colas"), "col" );
	deepEqual( Stem("colcha"), "colch" );
	deepEqual( Stem("colchón"), "colchon" );
	deepEqual( Stem("colchoneros"), "colchoner" );
	deepEqual( Stem("colchones"), "colchon" );
	deepEqual( Stem("coldwell"), "coldwell" );
	deepEqual( Stem("cole"), "col" );
	deepEqual( Stem("coleadero"), "coleader" );
	deepEqual( Stem("colección"), "coleccion" );
	deepEqual( Stem("colecciones"), "coleccion" );
	deepEqual( Stem("coleccionismo"), "coleccion" );
	deepEqual( Stem("coleccionista"), "coleccion" );
	deepEqual( Stem("coleccionistas"), "coleccion" );
	deepEqual( Stem("colecta"), "colect" );
	deepEqual( Stem("colectiva"), "colect" );
	deepEqual( Stem("colectivamente"), "colect" );
	deepEqual( Stem("colectividad"), "colect" );
	deepEqual( Stem("colectivo"), "colect" );
	deepEqual( Stem("colectivos"), "colect" );
	deepEqual( Stem("colega"), "coleg" );
	deepEqual( Stem("colegas"), "coleg" );
	deepEqual( Stem("colegiado"), "colegi" );
	deepEqual( Stem("colegiatura"), "colegiatur" );
	deepEqual( Stem("colegio"), "colegi" );
	deepEqual( Stem("colegios"), "colegi" );
	deepEqual( Stem("cólera"), "coler" );
	deepEqual( Stem("colesterol"), "colesterol" );
	deepEqual( Stem("colgaba"), "colg" );
	deepEqual( Stem("colgaban"), "colg" );
	deepEqual( Stem("colgada"), "colg" );
	deepEqual( Stem("colgadas"), "colg" );
	deepEqual( Stem("colgado"), "colg" );
	deepEqual( Stem("colgados"), "colg" );
	deepEqual( Stem("colgó"), "colg" );
	deepEqual( Stem("colgón"), "colgon" );
	deepEqual( Stem("colima"), "colim" );
	deepEqual( Stem("colin"), "colin" );
	deepEqual( Stem("colín"), "colin" );
	deepEqual( Stem("colina"), "colin" );
	deepEqual( Stem("colinas"), "colin" );
	deepEqual( Stem("coliseo"), "colise" );
	deepEqual( Stem("collado"), "coll" );
	deepEqual( Stem("colleen"), "coll" );
	deepEqual( Stem("colleges"), "colleg" );
	deepEqual( Stem("collin"), "collin" );
	deepEqual( Stem("collor"), "collor" );
	deepEqual( Stem("colmada"), "colm" );
	deepEqual( Stem("colmo"), "colm" );
	deepEqual( Stem("coloca"), "coloc" );
	deepEqual( Stem("colocación"), "coloc" );
	deepEqual( Stem("colocaciones"), "coloc" );
	deepEqual( Stem("colocadas"), "coloc" );
	deepEqual( Stem("colocado"), "coloc" );
	deepEqual( Stem("colocadores"), "coloc" );
	deepEqual( Stem("colocados"), "coloc" );
	deepEqual( Stem("colocan"), "coloc" );
	deepEqual( Stem("colocando"), "coloc" );
	deepEqual( Stem("colocándose"), "coloc" );
	deepEqual( Stem("colocar"), "coloc" );
	deepEqual( Stem("colocara"), "coloc" );
	deepEqual( Stem("colocará"), "coloc" );
	deepEqual( Stem("colocarán"), "coloc" );
	deepEqual( Stem("colocarla"), "coloc" );
	deepEqual( Stem("colocarme"), "coloc" );
	deepEqual( Stem("colocarnos"), "coloc" );
	deepEqual( Stem("colocaron"), "coloc" );
	deepEqual( Stem("colocarse"), "coloc" );
	deepEqual( Stem("colocó"), "coloc" );
	deepEqual( Stem("colofón"), "colofon" );
	deepEqual( Stem("colombia"), "colombi" );
	deepEqual( Stem("colombiano"), "colombian" );
	deepEqual( Stem("colombianos"), "colombian" );
	deepEqual( Stem("colón"), "colon" );
	deepEqual( Stem("colonia"), "coloni" );
	deepEqual( Stem("colonial"), "colonial" );
	deepEqual( Stem("coloniales"), "colonial" );
	deepEqual( Stem("colonias"), "coloni" );
	deepEqual( Stem("colonizadora"), "coloniz" );
	deepEqual( Stem("colonizando"), "coloniz" );
	deepEqual( Stem("coloque"), "coloqu" );
	deepEqual( Stem("coloquialmente"), "coloquial" );
	deepEqual( Stem("coloquio"), "coloqui" );
	deepEqual( Stem("color"), "color" );
	deepEqual( Stem("colorado"), "color" );
	deepEqual( Stem("colorantes"), "color" );
	deepEqual( Stem("colores"), "color" );
	deepEqual( Stem("colorido"), "color" );
	deepEqual( Stem("coloridos"), "color" );
	deepEqual( Stem("colorísticos"), "colorist" );
	deepEqual( Stem("colosio"), "colosi" );
	deepEqual( Stem("coloso"), "colos" );
	deepEqual( Stem("colosos"), "colos" );
	deepEqual( Stem("coludidos"), "colud" );
	deepEqual( Stem("columbia"), "columbi" );
	deepEqual( Stem("columna"), "column" );
	deepEqual( Stem("columnabreves"), "columnabrev" );
	deepEqual( Stem("columnaconsultorio"), "columnaconsultori" );
	deepEqual( Stem("columnaempresa"), "columnaempres" );
	deepEqual( Stem("columnafricase"), "columnafric" );
	deepEqual( Stem("columnafricasé"), "columnafricas" );
	deepEqual( Stem("columnamirador"), "columnamir" );
	deepEqual( Stem("columnas"), "column" );
	deepEqual( Stem("columneja"), "columnej" );
	deepEqual( Stem("columnista"), "column" );
	deepEqual( Stem("colunga"), "colung" );
	deepEqual( Stem("com"), "com" );
	deepEqual( Stem("comadre"), "comadr" );
	deepEqual( Stem("comadrita"), "comadrit" );
	deepEqual( Stem("comanda"), "comand" );
	deepEqual( Stem("comandado"), "comand" );
	deepEqual( Stem("comandados"), "comand" );
	deepEqual( Stem("comandancia"), "comand" );
	deepEqual( Stem("comandante"), "comand" );
	deepEqual( Stem("comande"), "comand" );
	deepEqual( Stem("comandó"), "comand" );
	deepEqual( Stem("comandos"), "comand" );
	deepEqual( Stem("comas"), "com" );
	deepEqual( Stem("combate"), "combat" );
	deepEqual( Stem("combaten"), "combat" );
	deepEqual( Stem("combates"), "combat" );
	deepEqual( Stem("combatido"), "combat" );
	deepEqual( Stem("combatió"), "combat" );
	deepEqual( Stem("combatir"), "combat" );
	deepEqual( Stem("combatirán"), "combat" );
	deepEqual( Stem("combatividad"), "combat" );
	deepEqual( Stem("combativo"), "combat" );
	deepEqual( Stem("combina"), "combin" );
	deepEqual( Stem("combinación"), "combin" );
	deepEqual( Stem("combinaciones"), "combin" );
	deepEqual( Stem("combinada"), "combin" );
	deepEqual( Stem("combinadas"), "combin" );
	deepEqual( Stem("combinado"), "combin" );
	deepEqual( Stem("combinados"), "combin" );
	deepEqual( Stem("combinan"), "combin" );
	deepEqual( Stem("combinando"), "combin" );
	deepEqual( Stem("combinar"), "combin" );
	deepEqual( Stem("combinará"), "combin" );
	deepEqual( Stem("combinarlo"), "combin" );
	deepEqual( Stem("combinarlos"), "combin" );
	deepEqual( Stem("combinen"), "combin" );
	deepEqual( Stem("combis"), "combis" );
	deepEqual( Stem("combustible"), "combust" );
	deepEqual( Stem("combustibles"), "combust" );
	deepEqual( Stem("combustión"), "combustion" );
	deepEqual( Stem("come"), "com" );
	deepEqual( Stem("comedia"), "comedi" );
	deepEqual( Stem("comediante"), "comedi" );
	deepEqual( Stem("comediógrafo"), "comediograf" );
	deepEqual( Stem("comedor"), "comedor" );
	deepEqual( Stem("comedores"), "comedor" );
	deepEqual( Stem("comemos"), "com" );
	deepEqual( Stem("comensal"), "comensal" );
	deepEqual( Stem("comenta"), "coment" );
	deepEqual( Stem("comentaba"), "coment" );
	deepEqual( Stem("comentábamos"), "coment" );
	deepEqual( Stem("comentaban"), "coment" );
	deepEqual( Stem("comentabas"), "coment" );
	deepEqual( Stem("comentada"), "coment" );
	deepEqual( Stem("comentadas"), "coment" );
	deepEqual( Stem("comentado"), "coment" );
	deepEqual( Stem("comentan"), "coment" );
	deepEqual( Stem("comentando"), "coment" );
	deepEqual( Stem("comentar"), "coment" );
	deepEqual( Stem("comentaré"), "coment" );
	deepEqual( Stem("comentario"), "comentari" );
	deepEqual( Stem("comentarios"), "comentari" );
	deepEqual( Stem("comentaristas"), "comentar" );
	deepEqual( Stem("comentarla"), "coment" );
	deepEqual( Stem("comentarle"), "coment" );
	deepEqual( Stem("comentaron"), "coment" );
	deepEqual( Stem("comentarse"), "coment" );
	deepEqual( Stem("comente"), "coment" );
	deepEqual( Stem("comentó"), "coment" );
	deepEqual( Stem("comenzaba"), "comenz" );
	deepEqual( Stem("comenzaban"), "comenz" );
	deepEqual( Stem("comenzado"), "comenz" );
	deepEqual( Stem("comenzamos"), "comenz" );
	deepEqual( Stem("comenzar"), "comenz" );
	deepEqual( Stem("comenzara"), "comenz" );
	deepEqual( Stem("comenzará"), "comenz" );
	deepEqual( Stem("comenzarán"), "comenz" );
	deepEqual( Stem("comenzaré"), "comenz" );
	deepEqual( Stem("comenzaremos"), "comenz" );
	deepEqual( Stem("comenzaron"), "comenz" );
	deepEqual( Stem("comenzó"), "comenz" );
	deepEqual( Stem("comer"), "com" );
	deepEqual( Stem("comerá"), "com" );
	deepEqual( Stem("comerciaba"), "comerci" );
	deepEqual( Stem("comercial"), "comercial" );
	deepEqual( Stem("comerciales"), "comercial" );
	deepEqual( Stem("comercializa"), "comercializ" );
	deepEqual( Stem("comercialización"), "comercializ" );
	deepEqual( Stem("comercializadora"), "comercializ" );
	deepEqual( Stem("comercializadoras"), "comercializ" );
	deepEqual( Stem("comercializan"), "comercializ" );
	deepEqual( Stem("comercializar"), "comercializ" );
	deepEqual( Stem("comercializaría"), "comercializ" );
	deepEqual( Stem("comercializarlo"), "comercializ" );
	deepEqual( Stem("comercialmente"), "comercial" );
	deepEqual( Stem("comerciante"), "comerci" );
	deepEqual( Stem("comerciantes"), "comerci" );
	deepEqual( Stem("comerciar"), "comerci" );
	deepEqual( Stem("comercio"), "comerci" );
	deepEqual( Stem("comercios"), "comerci" );
	deepEqual( Stem("comernos"), "com" );
	deepEqual( Stem("cometa"), "comet" );
	deepEqual( Stem("cometan"), "comet" );
	deepEqual( Stem("cometarios"), "cometari" );
	deepEqual( Stem("cometas"), "comet" );
	deepEqual( Stem("comete"), "comet" );
	deepEqual( Stem("cometemos"), "comet" );
	deepEqual( Stem("cometen"), "comet" );
	deepEqual( Stem("cometer"), "comet" );
	deepEqual( Stem("cometeríamos"), "comet" );
	deepEqual( Stem("cometerse"), "comet" );
	deepEqual( Stem("cometía"), "comet" );
	deepEqual( Stem("cometidas"), "comet" );
	deepEqual( Stem("cometido"), "comet" );
	deepEqual( Stem("cometidos"), "comet" );
	deepEqual( Stem("cometiendo"), "comet" );
	deepEqual( Stem("cometiera"), "comet" );
	deepEqual( Stem("cometieron"), "comet" );
	deepEqual( Stem("cometió"), "comet" );
	deepEqual( Stem("comezón"), "comezon" );
	deepEqual( Stem("comía"), "com" );
	deepEqual( Stem("cómica"), "comic" );
	deepEqual( Stem("cómicas"), "comic" );
	deepEqual( Stem("comicios"), "comici" );
	deepEqual( Stem("cómico"), "comic" );
	deepEqual( Stem("cómicos"), "comic" );
	deepEqual( Stem("comida"), "com" );
	deepEqual( Stem("comidas"), "com" );
	deepEqual( Stem("comience"), "comienc" );
	deepEqual( Stem("comiencen"), "comienc" );
	deepEqual( Stem("comienza"), "comienz" );
	deepEqual( Stem("comienzan"), "comienz" );
	deepEqual( Stem("comienzo"), "comienz" );
	deepEqual( Stem("comienzos"), "comienz" );
	deepEqual( Stem("comillas"), "comill" );
	deepEqual( Stem("cominfinanciero"), "cominfinancier" );
	deepEqual( Stem("comino"), "comin" );
	deepEqual( Stem("comió"), "com" );
	deepEqual( Stem("comisaría"), "comis" );
	deepEqual( Stem("comisión"), "comision" );
	deepEqual( Stem("comisionado"), "comision" );
	deepEqual( Stem("comisionados"), "comision" );
	deepEqual( Stem("comisiones"), "comision" );
	deepEqual( Stem("comisionó"), "comision" );
	deepEqual( Stem("comité"), "comit" );
	deepEqual( Stem("comités"), "comites" );
	deepEqual( Stem("comitiva"), "comit" );
	deepEqual( Stem("comitivas"), "comit" );
	deepEqual( Stem("commerce"), "commerc" );
	deepEqual( Stem("communications"), "communications" );
	deepEqual( Stem("como"), "com" );
	deepEqual( Stem("cómo"), "com" );
	deepEqual( Stem("cómoda"), "comod" );
	deepEqual( Stem("cómodamente"), "comod" );
	deepEqual( Stem("cómodas"), "comod" );
	deepEqual( Stem("comodato"), "comodat" );
	deepEqual( Stem("comodidad"), "comod" );
	deepEqual( Stem("comodidades"), "comod" );
	deepEqual( Stem("comodines"), "comodin" );
	deepEqual( Stem("comodísimos"), "comodis" );
	deepEqual( Stem("cómodo"), "comod" );
	deepEqual( Stem("comodones"), "comodon" );
	deepEqual( Stem("cómodos"), "comod" );
	deepEqual( Stem("compact"), "compact" );
	deepEqual( Stem("compacto"), "compact" );
	deepEqual( Stem("compactos"), "compact" );
	deepEqual( Stem("compadrazgos"), "compadrazg" );
	deepEqual( Stem("compañera"), "compañer" );
	deepEqual( Stem("compañeras"), "compañer" );
	deepEqual( Stem("compañerismo"), "compañer" );
	deepEqual( Stem("compañero"), "compañer" );
	deepEqual( Stem("compañeros"), "compañer" );
	deepEqual( Stem("companía"), "compan" );
	deepEqual( Stem("compañía"), "compañ" );
	deepEqual( Stem("compañías"), "compañ" );
	deepEqual( Stem("company"), "company" );
	deepEqual( Stem("compaq"), "compaq" );
	deepEqual( Stem("compara"), "comp" );
	deepEqual( Stem("comparable"), "compar" );
	deepEqual( Stem("comparación"), "compar" );
	deepEqual( Stem("comparaciones"), "compar" );
	deepEqual( Stem("comparado"), "compar" );
	deepEqual( Stem("comparados"), "compar" );
	deepEqual( Stem("comparan"), "comp" );
	deepEqual( Stem("comparando"), "compar" );
	deepEqual( Stem("comparándolas"), "compar" );
	deepEqual( Stem("comparándose"), "compar" );
	deepEqual( Stem("comparar"), "compar" );
	deepEqual( Stem("compararse"), "compar" );
	deepEqual( Stem("comparársele"), "compararsel" );
	deepEqual( Stem("comparativamente"), "compar" );
	deepEqual( Stem("comparecencia"), "comparecent" );
	deepEqual( Stem("comparecer"), "comparec" );
	deepEqual( Stem("comparecerán"), "comparec" );
	deepEqual( Stem("comparecía"), "comparec" );
	deepEqual( Stem("comparó"), "compar" );
	deepEqual( Stem("comparsa"), "compars" );
	deepEqual( Stem("comparsas"), "compars" );
	deepEqual( Stem("comparte"), "compart" );
	deepEqual( Stem("comparten"), "compart" );
	deepEqual( Stem("compartido"), "compart" );
	deepEqual( Stem("compartimentos"), "compartiment" );
	deepEqual( Stem("compartimiento"), "compart" );
	deepEqual( Stem("compartió"), "compart" );
	deepEqual( Stem("compartir"), "compart" );
	deepEqual( Stem("comparto"), "compart" );
	deepEqual( Stem("compás"), "compas" );
	deepEqual( Stem("compasión"), "compasion" );
	deepEqual( Stem("compasiva"), "compas" );
	deepEqual( Stem("compatibilizar"), "compatibiliz" );
	deepEqual( Stem("compatible"), "compat" );
	deepEqual( Stem("compatibles"), "compat" );
	deepEqual( Stem("compatriota"), "compatriot" );
	deepEqual( Stem("compatriotas"), "compatriot" );
	deepEqual( Stem("compelen"), "compel" );
	deepEqual( Stem("compendio"), "compendi" );
	deepEqual( Stem("compensa"), "compens" );
	deepEqual( Stem("compensación"), "compens" );
	deepEqual( Stem("compensaciones"), "compens" );
	deepEqual( Stem("compensado"), "compens" );
	deepEqual( Stem("compensar"), "compens" );
	deepEqual( Stem("compensatorio"), "compensatori" );
	deepEqual( Stem("compensatorios"), "compensatori" );
	deepEqual( Stem("competa"), "compet" );
	deepEqual( Stem("compete"), "compet" );
	deepEqual( Stem("competencia"), "competent" );
	deepEqual( Stem("competencial"), "competencial" );
	deepEqual( Stem("competencias"), "competent" );
	deepEqual( Stem("competente"), "competent" );
	deepEqual( Stem("competentes"), "competent" );
	deepEqual( Stem("competidor"), "competidor" );
	deepEqual( Stem("competidoras"), "competidor" );
	deepEqual( Stem("competidores"), "competidor" );
	deepEqual( Stem("competir"), "compet" );
	deepEqual( Stem("competirán"), "compet" );
	deepEqual( Stem("competiremos"), "compet" );
	deepEqual( Stem("competirle"), "compet" );
	deepEqual( Stem("competitiva"), "competit" );
	deepEqual( Stem("competitivas"), "competit" );
	deepEqual( Stem("competitive"), "competitiv" );
	deepEqual( Stem("competitividad"), "competit" );
	deepEqual( Stem("competitivo"), "competit" );
	deepEqual( Stem("competitivos"), "competit" );
	deepEqual( Stem("compilador"), "compil" );
	deepEqual( Stem("compilando"), "compil" );
	deepEqual( Stem("compilar"), "compil" );
	deepEqual( Stem("compite"), "compit" );
	deepEqual( Stem("compiten"), "compit" );
	deepEqual( Stem("compitiendo"), "compit" );
	deepEqual( Stem("compito"), "compit" );
	deepEqual( Stem("complacer"), "complac" );
	deepEqual( Stem("complacido"), "complac" );
	deepEqual( Stem("complació"), "complac" );
	deepEqual( Stem("complazca"), "complazc" );
	deepEqual( Stem("compleja"), "complej" );
	deepEqual( Stem("complejas"), "complej" );
	deepEqual( Stem("complejidad"), "complej" );
	deepEqual( Stem("complejo"), "complej" );
	deepEqual( Stem("complejos"), "complej" );
	deepEqual( Stem("complementada"), "complement" );
	deepEqual( Stem("complementan"), "complement" );
	deepEqual( Stem("complementar"), "complement" );
	deepEqual( Stem("complementaria"), "complementari" );
	deepEqual( Stem("complementaría"), "complement" );
	deepEqual( Stem("complementarias"), "complementari" );
	deepEqual( Stem("complementarios"), "complementari" );
	deepEqual( Stem("complementarlo"), "complement" );
	deepEqual( Stem("complemento"), "complement" );
	deepEqual( Stem("completa"), "complet" );
	deepEqual( Stem("completadas"), "complet" );
	deepEqual( Stem("completamente"), "complet" );
	deepEqual( Stem("completar"), "complet" );
	deepEqual( Stem("completarían"), "complet" );
	deepEqual( Stem("completaron"), "complet" );
	deepEqual( Stem("completarse"), "complet" );
	deepEqual( Stem("completas"), "complet" );
	deepEqual( Stem("completo"), "complet" );
	deepEqual( Stem("completó"), "complet" );
	deepEqual( Stem("completos"), "complet" );
	deepEqual( Stem("complexión"), "complexion" );
	deepEqual( Stem("complica"), "complic" );
	deepEqual( Stem("complicación"), "complic" );
	deepEqual( Stem("complicaciones"), "complic" );
	deepEqual( Stem("complicadas"), "complic" );
	deepEqual( Stem("complicado"), "complic" );
	deepEqual( Stem("complicados"), "complic" );
	deepEqual( Stem("complican"), "complic" );
	deepEqual( Stem("complicar"), "complic" );
	deepEqual( Stem("complicarse"), "complic" );
	deepEqual( Stem("cómplice"), "complic" );
	deepEqual( Stem("cómplices"), "complic" );
	deepEqual( Stem("complicidad"), "complic" );
	deepEqual( Stem("complicó"), "complic" );
	deepEqual( Stem("compone"), "compon" );
	deepEqual( Stem("componen"), "compon" );
	deepEqual( Stem("componendas"), "componend" );
	deepEqual( Stem("componente"), "component" );
	deepEqual( Stem("componentes"), "component" );
	deepEqual( Stem("componga"), "compong" );
	deepEqual( Stem("componían"), "compon" );
	deepEqual( Stem("comportamiento"), "comport" );
	deepEqual( Stem("comportamientos"), "comport" );
	deepEqual( Stem("comportan"), "comport" );
	deepEqual( Stem("comportará"), "comport" );
	deepEqual( Stem("composición"), "composicion" );
	deepEqual( Stem("composiciones"), "composicion" );
	deepEqual( Stem("compositor"), "compositor" );
	deepEqual( Stem("compositores"), "compositor" );
	deepEqual( Stem("compra"), "compr" );
	deepEqual( Stem("compraba"), "compr" );
	deepEqual( Stem("compradas"), "compr" );
	deepEqual( Stem("comprado"), "compr" );
	deepEqual( Stem("comprador"), "comprador" );
	deepEqual( Stem("compradora"), "comprador" );
	deepEqual( Stem("compradores"), "comprador" );
	deepEqual( Stem("compramos"), "compr" );
	deepEqual( Stem("compran"), "compr" );
	deepEqual( Stem("comprando"), "compr" );
	deepEqual( Stem("comprar"), "compr" );
	deepEqual( Stem("comprara"), "compr" );
	deepEqual( Stem("comprará"), "compr" );
	deepEqual( Stem("comprarlas"), "compr" );
	deepEqual( Stem("comprarle"), "compr" );
	deepEqual( Stem("comprarles"), "compr" );
	deepEqual( Stem("comprarme"), "compr" );
	deepEqual( Stem("compraron"), "compr" );
	deepEqual( Stem("comprarse"), "compr" );
	deepEqual( Stem("comprárselo"), "compr" );
	deepEqual( Stem("compras"), "compr" );
	deepEqual( Stem("compraventa"), "compravent" );
	deepEqual( Stem("compre"), "compr" );
	deepEqual( Stem("compré"), "compr" );
	deepEqual( Stem("comprenda"), "comprend" );
	deepEqual( Stem("comprendan"), "comprend" );
	deepEqual( Stem("comprendas"), "comprend" );
	deepEqual( Stem("comprende"), "comprend" );
	deepEqual( Stem("comprendemos"), "comprend" );
	deepEqual( Stem("comprenden"), "comprend" );
	deepEqual( Stem("comprender"), "comprend" );
	deepEqual( Stem("comprenderá"), "comprend" );
	deepEqual( Stem("comprendía"), "comprend" );
	deepEqual( Stem("comprendiera"), "comprend" );
	deepEqual( Stem("comprendieron"), "comprend" );
	deepEqual( Stem("comprendo"), "comprend" );
	deepEqual( Stem("comprensible"), "comprens" );
	deepEqual( Stem("comprensión"), "comprension" );
	deepEqual( Stem("comprensivo"), "comprens" );
	deepEqual( Stem("compresor"), "compresor" );
	deepEqual( Stem("comprimida"), "comprim" );
	deepEqual( Stem("compró"), "compr" );
	deepEqual( Stem("comprobado"), "comprob" );
	deepEqual( Stem("comprobante"), "comprob" );
	deepEqual( Stem("comprobar"), "comprob" );
	deepEqual( Stem("comprobaron"), "comprob" );
	deepEqual( Stem("comprobarse"), "comprob" );
	deepEqual( Stem("comprobó"), "comprob" );
	deepEqual( Stem("comprometan"), "compromet" );
	deepEqual( Stem("compromete"), "compromet" );
	deepEqual( Stem("comprometen"), "compromet" );
	deepEqual( Stem("comprometernos"), "compromet" );
	deepEqual( Stem("comprometerse"), "compromet" );
	deepEqual( Stem("comprometía"), "compromet" );
	deepEqual( Stem("comprometían"), "compromet" );
	deepEqual( Stem("comprometido"), "compromet" );
	deepEqual( Stem("comprometidos"), "compromet" );
	deepEqual( Stem("comprometieran"), "compromet" );
	deepEqual( Stem("comprometieron"), "compromet" );
	deepEqual( Stem("comprometimos"), "compromet" );
	deepEqual( Stem("comprometió"), "compromet" );
	deepEqual( Stem("compromiso"), "compromis" );
	deepEqual( Stem("compromisos"), "compromis" );
	deepEqual( Stem("comprueba"), "comprueb" );
	deepEqual( Stem("comprueban"), "comprueb" );
	deepEqual( Stem("compuertas"), "compuert" );
	deepEqual( Stem("compuesta"), "compuest" );
	deepEqual( Stem("compuesto"), "compuest" );
	deepEqual( Stem("compulsiva"), "compuls" );
	deepEqual( Stem("compuso"), "compus" );
	deepEqual( Stem("computación"), "comput" );
	deepEqual( Stem("computacional"), "computacional" );
	deepEqual( Stem("computacionales"), "computacional" );
	deepEqual( Stem("computadora"), "comput" );
	deepEqual( Stem("computadoras"), "comput" );
	deepEqual( Stem("computados"), "comput" );
	deepEqual( Stem("computarizado"), "computariz" );
	deepEqual( Stem("computarizados"), "computariz" );
	deepEqual( Stem("computec"), "computec" );
	deepEqual( Stem("computer"), "comput" );
	deepEqual( Stem("computo"), "comput" );
	deepEqual( Stem("cómputo"), "comput" );
	deepEqual( Stem("comun"), "comun" );
	deepEqual( Stem("común"), "comun" );
	deepEqual( Stem("comunales"), "comunal" );
	deepEqual( Stem("comunes"), "comun" );
	deepEqual( Stem("comunica"), "comun" );
	deepEqual( Stem("comunicación"), "comun" );
	deepEqual( Stem("comunicaciones"), "comun" );
	deepEqual( Stem("comunicado"), "comunic" );
	deepEqual( Stem("comunicados"), "comunic" );
	deepEqual( Stem("comunican"), "comunic" );
	deepEqual( Stem("comunicándose"), "comunic" );
	deepEqual( Stem("comunicantes"), "comun" );
	deepEqual( Stem("comunicar"), "comunic" );
	deepEqual( Stem("comunicara"), "comunic" );
	deepEqual( Stem("comunicarse"), "comunic" );
	deepEqual( Stem("comunicativa"), "comunic" );
	deepEqual( Stem("comunicativos"), "comunic" );
	deepEqual( Stem("comunicó"), "comunic" );
	deepEqual( Stem("comunidad"), "comun" );
	deepEqual( Stem("comunidades"), "comun" );
	deepEqual( Stem("comuniqué"), "comuniqu" );
	deepEqual( Stem("comuníqueme"), "comuniquem" );
	deepEqual( Stem("comuniquen"), "comuniqu" );
	deepEqual( Stem("comuníquese"), "comuniques" );
	deepEqual( Stem("comunista"), "comun" );
	deepEqual( Stem("comunistas"), "comun" );
	deepEqual( Stem("comunitarias"), "comunitari" );
	deepEqual( Stem("comunitario"), "comunitari" );
	deepEqual( Stem("comunitarios"), "comunitari" );
	deepEqual( Stem("con"), "con" );
	deepEqual( Stem("conacyt"), "conacyt" );
	deepEqual( Stem("conadeip"), "conadeip" );
	deepEqual( Stem("conatos"), "conat" );
	deepEqual( Stem("concacaf"), "concacaf" );
	deepEqual( Stem("concamin"), "concamin" );
	deepEqual( Stem("concamín"), "concamin" );
	deepEqual( Stem("concanaco"), "concanac" );
	deepEqual( Stem("concebían"), "conceb" );
	deepEqual( Stem("concebida"), "conceb" );
	deepEqual( Stem("concebido"), "conceb" );
	deepEqual( Stem("conceder"), "conced" );
	deepEqual( Stem("concederá"), "conced" );
	deepEqual( Stem("concedían"), "conced" );
	deepEqual( Stem("concedida"), "conced" );
	deepEqual( Stem("concedido"), "conced" );
	deepEqual( Stem("concediendo"), "conced" );
	deepEqual( Stem("concediera"), "conced" );
	deepEqual( Stem("concedió"), "conced" );
	deepEqual( Stem("concem"), "concem" );
	deepEqual( Stem("concentra"), "concentr" );
	deepEqual( Stem("concentración"), "concentr" );
	deepEqual( Stem("concentraciones"), "concentr" );
	deepEqual( Stem("concentrada"), "concentr" );
	deepEqual( Stem("concentradas"), "concentr" );
	deepEqual( Stem("concentrado"), "concentr" );
	deepEqual( Stem("concentrados"), "concentr" );
	deepEqual( Stem("concentran"), "concentr" );
	deepEqual( Stem("concentrará"), "concentr" );
	deepEqual( Stem("concentraran"), "concentr" );
	deepEqual( Stem("concentraremos"), "concentr" );
	deepEqual( Stem("concentrarse"), "concentr" );
	deepEqual( Stem("concentre"), "concentr" );
	deepEqual( Stem("concentró"), "concentr" );
	deepEqual( Stem("concepción"), "concepcion" );
	deepEqual( Stem("concepciones"), "concepcion" );
	deepEqual( Stem("concepto"), "concept" );
	deepEqual( Stem("conceptos"), "concept" );
	deepEqual( Stem("conceptual"), "conceptual" );
	deepEqual( Stem("concert"), "concert" );
	deepEqual( Stem("concertación"), "concert" );
	deepEqual( Stem("concertaciones"), "concert" );
	deepEqual( Stem("concertadamente"), "concert" );
	deepEqual( Stem("concertado"), "concert" );
	deepEqual( Stem("concertando"), "concert" );
	deepEqual( Stem("concertar"), "concert" );
	deepEqual( Stem("concesión"), "concesion" );
	deepEqual( Stem("concesionadas"), "concesion" );
	deepEqual( Stem("concesionado"), "concesion" );
	deepEqual( Stem("concesionarias"), "concesionari" );
	deepEqual( Stem("concesionario"), "concesionari" );
	deepEqual( Stem("concesionarios"), "concesionari" );
	deepEqual( Stem("concesiones"), "concesion" );
	deepEqual( Stem("concha"), "conch" );
	deepEqual( Stem("conchello"), "conchell" );
	deepEqual( Stem("conchita"), "conchit" );
	deepEqual( Stem("concibe"), "concib" );
	deepEqual( Stem("concibió"), "concib" );
	deepEqual( Stem("conciencia"), "concienci" );
	deepEqual( Stem("conciencias"), "concienci" );
	deepEqual( Stem("concientizar"), "concientiz" );
	deepEqual( Stem("concierne"), "conciern" );
	deepEqual( Stem("concierto"), "conciert" );
	deepEqual( Stem("conciertos"), "conciert" );
	deepEqual( Stem("conciliación"), "concili" );
	deepEqual( Stem("conciliador"), "concili" );
	deepEqual( Stem("conciliar"), "concili" );
	deepEqual( Stem("concilio"), "concili" );
	deepEqual( Stem("conciudadanos"), "conciudadan" );
	deepEqual( Stem("concluida"), "conclu" );
	deepEqual( Stem("concluido"), "conclu" );
	deepEqual( Stem("concluído"), "concluid" );
	deepEqual( Stem("concluir"), "conclu" );
	deepEqual( Stem("concluirá"), "conclu" );
	deepEqual( Stem("concluirán"), "conclu" );
	deepEqual( Stem("concluirla"), "conclu" );
	deepEqual( Stem("conclusion"), "conclusion" );
	deepEqual( Stem("conclusión"), "conclusion" );
	deepEqual( Stem("conclusiones"), "conclusion" );
	deepEqual( Stem("concluya"), "conclu" );
	deepEqual( Stem("concluyamos"), "conclu" );
	deepEqual( Stem("concluyan"), "conclu" );
	deepEqual( Stem("concluye"), "conclu" );
	deepEqual( Stem("concluyen"), "conclu" );
	deepEqual( Stem("concluyeron"), "conclu" );
	deepEqual( Stem("concluyó"), "conclu" );
	deepEqual( Stem("concordar"), "concord" );
	deepEqual( Stem("concordia"), "concordi" );
	deepEqual( Stem("concordó"), "concord" );
	deepEqual( Stem("concreción"), "concrecion" );
	deepEqual( Stem("concreta"), "concret" );
	deepEqual( Stem("concretado"), "concret" );
	deepEqual( Stem("concretamente"), "concret" );
	deepEqual( Stem("concretándolo"), "concret" );
	deepEqual( Stem("concretar"), "concret" );
	deepEqual( Stem("concretarse"), "concret" );
	deepEqual( Stem("concretas"), "concret" );
	deepEqual( Stem("concrete"), "concret" );
	deepEqual( Stem("concretera"), "concreter" );
	deepEqual( Stem("concreteras"), "concreter" );
	deepEqual( Stem("concreto"), "concret" );
	deepEqual( Stem("concretó"), "concret" );
	deepEqual( Stem("concretos"), "concret" );
	deepEqual( Stem("concuerda"), "concuerd" );
	deepEqual( Stem("concupiscente"), "concupiscent" );
	deepEqual( Stem("concurran"), "concurr" );
	deepEqual( Stem("concurrencia"), "concurrent" );
	deepEqual( Stem("concurrió"), "concurr" );
	deepEqual( Stem("concursan"), "concurs" );
	deepEqual( Stem("concursante"), "concurs" );
	deepEqual( Stem("concursar"), "concurs" );
	deepEqual( Stem("concurso"), "concurs" );
	deepEqual( Stem("concursos"), "concurs" );
	deepEqual( Stem("condado"), "cond" );
	deepEqual( Stem("condados"), "cond" );
	deepEqual( Stem("condde"), "condd" );
	deepEqual( Stem("conde"), "cond" );
	deepEqual( Stem("condecoración"), "condecor" );
	deepEqual( Stem("condecorado"), "condecor" );
	deepEqual( Stem("condena"), "conden" );
	deepEqual( Stem("condenaban"), "conden" );
	deepEqual( Stem("condenada"), "conden" );
	deepEqual( Stem("condenadas"), "conden" );
	deepEqual( Stem("condenado"), "conden" );
	deepEqual( Stem("condenados"), "conden" );
	deepEqual( Stem("condenamos"), "conden" );
	deepEqual( Stem("condenan"), "conden" );
	deepEqual( Stem("condenar"), "conden" );
	deepEqual( Stem("condenaron"), "conden" );
	deepEqual( Stem("condenas"), "conden" );
	deepEqual( Stem("condene"), "conden" );
	deepEqual( Stem("condenó"), "conden" );
	deepEqual( Stem("condesa"), "condes" );
	deepEqual( Stem("condición"), "condicion" );
	deepEqual( Stem("condicionado"), "condicion" );
	deepEqual( Stem("condicional"), "condicional" );
	deepEqual( Stem("condicionamientos"), "condicion" );
	deepEqual( Stem("condicionan"), "condicion" );
	deepEqual( Stem("condicionar"), "condicion" );
	deepEqual( Stem("condiciones"), "condicion" );
	deepEqual( Stem("condicionó"), "condicion" );
	deepEqual( Stem("condominios"), "condomini" );
	deepEqual( Stem("condones"), "condon" );
	deepEqual( Stem("conducción"), "conduccion" );
	deepEqual( Stem("conduce"), "conduc" );
	deepEqual( Stem("conducen"), "conduc" );
	deepEqual( Stem("conducentes"), "conducent" );
	deepEqual( Stem("conducía"), "conduc" );
	deepEqual( Stem("conducida"), "conduc" );
	deepEqual( Stem("conducido"), "conduc" );
	deepEqual( Stem("conducidos"), "conduc" );
	deepEqual( Stem("conduciendo"), "conduc" );
	deepEqual( Stem("conduciéndonos"), "conduc" );
	deepEqual( Stem("conduciera"), "conduc" );
	deepEqual( Stem("conducimos"), "conduc" );
	deepEqual( Stem("conducir"), "conduc" );
	deepEqual( Stem("conducirá"), "conduc" );
	deepEqual( Stem("conducta"), "conduct" );
	deepEqual( Stem("conductas"), "conduct" );
	deepEqual( Stem("conducto"), "conduct" );
	deepEqual( Stem("conductor"), "conductor" );
	deepEqual( Stem("conductores"), "conductor" );
	deepEqual( Stem("conductuales"), "conductual" );
	deepEqual( Stem("condujeron"), "condujeron" );
	deepEqual( Stem("condujo"), "conduj" );
	deepEqual( Stem("conduzca"), "conduzc" );
	deepEqual( Stem("conduzcan"), "conduzc" );
	deepEqual( Stem("conecta"), "conect" );
	deepEqual( Stem("conectaba"), "conect" );
	deepEqual( Stem("conectado"), "conect" );
	deepEqual( Stem("conectar"), "conect" );
	deepEqual( Stem("conectará"), "conect" );
	deepEqual( Stem("conectarse"), "conect" );
	deepEqual( Stem("conecte"), "conect" );
	deepEqual( Stem("conectividad"), "conect" );
	deepEqual( Stem("conejos"), "conej" );
	deepEqual( Stem("conexiones"), "conexion" );
	deepEqual( Stem("confección"), "confeccion" );
	deepEqual( Stem("confeccionados"), "confeccion" );
	deepEqual( Stem("confederación"), "confeder" );
	deepEqual( Stem("conferencia"), "conferent" );
	deepEqual( Stem("conferenciantes"), "conferenci" );
	deepEqual( Stem("conferencias"), "conferent" );
	deepEqual( Stem("conferencista"), "conferenc" );
	deepEqual( Stem("conferencistas"), "conferenc" );
	deepEqual( Stem("confesamos"), "confes" );
	deepEqual( Stem("confesar"), "confes" );
	deepEqual( Stem("confesaron"), "confes" );
	deepEqual( Stem("confesión"), "confesion" );
	deepEqual( Stem("confesó"), "confes" );
	deepEqual( Stem("confesores"), "confesor" );
	deepEqual( Stem("confeti"), "confeti" );
	deepEqual( Stem("confía"), "conf" );
	deepEqual( Stem("confiaba"), "confi" );
	deepEqual( Stem("confiabilidad"), "confiabil" );
	deepEqual( Stem("confiable"), "confiabl" );
	deepEqual( Stem("confiables"), "confiabl" );
	deepEqual( Stem("confiado"), "confi" );
	deepEqual( Stem("confiados"), "confi" );
	deepEqual( Stem("confiamos"), "confi" );
	deepEqual( Stem("confían"), "conf" );
	deepEqual( Stem("confiana"), "confian" );
	deepEqual( Stem("confiant"), "confiant" );
	deepEqual( Stem("confianza"), "confianz" );
	deepEqual( Stem("confiar"), "confi" );
	deepEqual( Stem("confiará"), "confi" );
	deepEqual( Stem("confiarnos"), "confi" );
	deepEqual( Stem("confiarse"), "confi" );
	deepEqual( Stem("confidencias"), "confident" );
	deepEqual( Stem("confidente"), "confident" );
	deepEqual( Stem("confíen"), "conf" );
	deepEqual( Stem("confiera"), "conf" );
	deepEqual( Stem("confiesa"), "confies" );
	deepEqual( Stem("confiesan"), "confies" );
	deepEqual( Stem("configura"), "configur" );
	deepEqual( Stem("configuración"), "configur" );
	deepEqual( Stem("configuraciones"), "configur" );
	deepEqual( Stem("configurada"), "configur" );
	deepEqual( Stem("configuradas"), "configur" );
	deepEqual( Stem("configurado"), "configur" );
	deepEqual( Stem("configurados"), "configur" );
	deepEqual( Stem("configurar"), "configur" );
	deepEqual( Stem("confinado"), "confin" );
	deepEqual( Stem("confio"), "confi" );
	deepEqual( Stem("confió"), "conf" );
	deepEqual( Stem("confirma"), "confirm" );
	deepEqual( Stem("confirmación"), "confirm" );
	deepEqual( Stem("confirmada"), "confirm" );
	deepEqual( Stem("confirmado"), "confirm" );
	deepEqual( Stem("confirman"), "confirm" );
	deepEqual( Stem("confirmar"), "confirm" );
	deepEqual( Stem("confirmaron"), "confirm" );
	deepEqual( Stem("confirmó"), "confirm" );
	deepEqual( Stem("conflicto"), "conflict" );
	deepEqual( Stem("conflictos"), "conflict" );
	deepEqual( Stem("confluyen"), "conflu" );
	deepEqual( Stem("conforma"), "conform" );
	deepEqual( Stem("conformaban"), "conform" );
	deepEqual( Stem("conformación"), "conform" );
	deepEqual( Stem("conformada"), "conform" );
	deepEqual( Stem("conforman"), "conform" );
	deepEqual( Stem("conformar"), "conform" );
	deepEqual( Stem("conformara"), "conform" );
	deepEqual( Stem("conformarse"), "conform" );
	deepEqual( Stem("conforme"), "conform" );
	deepEqual( Stem("conformen"), "conform" );
	deepEqual( Stem("conformista"), "conform" );
	deepEqual( Stem("conformo"), "conform" );
	deepEqual( Stem("confort"), "confort" );
	deepEqual( Stem("confrontación"), "confront" );
	deepEqual( Stem("confrontaciones"), "confront" );
	deepEqual( Stem("confrontando"), "confront" );
	deepEqual( Stem("confrontar"), "confront" );
	deepEqual( Stem("confucio"), "confuci" );
	deepEqual( Stem("confunde"), "confund" );
	deepEqual( Stem("confunden"), "confund" );
	deepEqual( Stem("confundido"), "confund" );
	deepEqual( Stem("confundidos"), "confund" );
	deepEqual( Stem("confundimos"), "confund" );
	deepEqual( Stem("confundir"), "confund" );
	deepEqual( Stem("confundirse"), "confund" );
	deepEqual( Stem("confusión"), "confusion" );
	deepEqual( Stem("congelación"), "congel" );
	deepEqual( Stem("congeladas"), "congel" );
	deepEqual( Stem("congelados"), "congel" );
	deepEqual( Stem("congelarse"), "congel" );
	deepEqual( Stem("congéneres"), "congener" );
	deepEqual( Stem("congénitos"), "congenit" );
	deepEqual( Stem("congestión"), "congestion" );
	deepEqual( Stem("congestionadas"), "congestion" );
	deepEqual( Stem("congestionado"), "congestion" );
	deepEqual( Stem("congestionamiento"), "congestion" );
	deepEqual( Stem("congestionamientos"), "congestion" );
	deepEqual( Stem("conglomerado"), "conglomer" );
	deepEqual( Stem("conglomerados"), "conglomer" );
	deepEqual( Stem("conglomerará"), "conglomer" );
	deepEqual( Stem("congo"), "cong" );
	deepEqual( Stem("congoja"), "congoj" );
	deepEqual( Stem("congregación"), "congreg" );
	deepEqual( Stem("congregada"), "congreg" );
	deepEqual( Stem("congregados"), "congreg" );
	deepEqual( Stem("congregara"), "congreg" );
	deepEqual( Stem("congregaron"), "congreg" );
	deepEqual( Stem("congresista"), "congres" );
	deepEqual( Stem("congresistas"), "congres" );
	deepEqual( Stem("congreso"), "congres" );
	deepEqual( Stem("congresos"), "congres" );
	deepEqual( Stem("congruencia"), "congruenci" );
	deepEqual( Stem("congruente"), "congruent" );
	deepEqual( Stem("congruentes"), "congruent" );
	deepEqual( Stem("conjuga"), "conjug" );
	deepEqual( Stem("conjugada"), "conjug" );
	deepEqual( Stem("conjugaron"), "conjug" );
	deepEqual( Stem("conjugarse"), "conjug" );
	deepEqual( Stem("conjunción"), "conjuncion" );
	deepEqual( Stem("conjunta"), "conjunt" );
	deepEqual( Stem("conjuntamente"), "conjunt" );
	deepEqual( Stem("conjuntar"), "conjunt" );
	deepEqual( Stem("conjuntarán"), "conjunt" );
	deepEqual( Stem("conjuntarse"), "conjunt" );
	deepEqual( Stem("conjuntas"), "conjunt" );
	deepEqual( Stem("conjuntivitis"), "conjuntivitis" );
	deepEqual( Stem("conjunto"), "conjunt" );
	deepEqual( Stem("conjuntos"), "conjunt" );
	deepEqual( Stem("conjura"), "conjur" );
	deepEqual( Stem("conjurarse"), "conjur" );
	deepEqual( Stem("conlleva"), "conllev" );
	deepEqual( Stem("conllevan"), "conllev" );
	deepEqual( Stem("conmemorar"), "conmemor" );
	deepEqual( Stem("conmemorativa"), "conmemor" );
	deepEqual( Stem("conmemorativos"), "conmemor" );
	deepEqual( Stem("conmigo"), "conmig" );
	deepEqual( Stem("conminado"), "conmin" );
	deepEqual( Stem("conmoción"), "conmocion" );
	deepEqual( Stem("conmovedor"), "conmovedor" );
	deepEqual( Stem("conmovedora"), "conmovedor" );
	deepEqual( Stem("conmovieron"), "conmov" );
	deepEqual( Stem("connor"), "connor" );
	deepEqual( Stem("connotación"), "connot" );
	deepEqual( Stem("connotados"), "connot" );
	deepEqual( Stem("cono"), "con" );
	deepEqual( Stem("conoce"), "conoc" );
	deepEqual( Stem("conocedor"), "conocedor" );
	deepEqual( Stem("conocedora"), "conocedor" );
	deepEqual( Stem("conocedoras"), "conocedor" );
	deepEqual( Stem("conocedores"), "conocedor" );
	deepEqual( Stem("conocemos"), "conoc" );
	deepEqual( Stem("conocen"), "conoc" );
	deepEqual( Stem("conocer"), "conoc" );
	deepEqual( Stem("conocerá"), "conoc" );
	deepEqual( Stem("conocerán"), "conoc" );
	deepEqual( Stem("conocería"), "conoc" );
	deepEqual( Stem("conocerían"), "conoc" );
	deepEqual( Stem("conocerlo"), "conoc" );
	deepEqual( Stem("conocerse"), "conoc" );
	deepEqual( Stem("conoces"), "conoc" );
	deepEqual( Stem("conocí"), "conoc" );
	deepEqual( Stem("conocía"), "conoc" );
	deepEqual( Stem("conocían"), "conoc" );
	deepEqual( Stem("conocida"), "conoc" );
	deepEqual( Stem("conocidas"), "conoc" );
	deepEqual( Stem("conocido"), "conoc" );
	deepEqual( Stem("conocidos"), "conoc" );
	deepEqual( Stem("conociendo"), "conoc" );
	deepEqual( Stem("conociéndose"), "conoc" );
	deepEqual( Stem("conocieron"), "conoc" );
	deepEqual( Stem("conocimiento"), "conoc" );
	deepEqual( Stem("conocimientos"), "conoc" );
	deepEqual( Stem("conocimos"), "conoc" );
	deepEqual( Stem("conoció"), "conoc" );
	deepEqual( Stem("conos"), "con" );
	deepEqual( Stem("conotados"), "conot" );
	deepEqual( Stem("conozca"), "conozc" );
	deepEqual( Stem("conozcan"), "conozc" );
	deepEqual( Stem("conozco"), "conozc" );
	deepEqual( Stem("conquista"), "conquist" );
	deepEqual( Stem("conquistar"), "conquist" );
	deepEqual( Stem("conquistas"), "conquist" );
	deepEqual( Stem("consagrados"), "consagr" );
	deepEqual( Stem("consagraron"), "consagr" );
	deepEqual( Stem("consagró"), "consagr" );
	deepEqual( Stem("consciente"), "conscient" );
	deepEqual( Stem("conscientemente"), "conscient" );
	deepEqual( Stem("conscientes"), "conscient" );
	deepEqual( Stem("consecuencia"), "consecuent" );
	deepEqual( Stem("consecuencias"), "consecuent" );
	deepEqual( Stem("consecuente"), "consecuent" );
	deepEqual( Stem("consecutiva"), "consecut" );
	deepEqual( Stem("consecutivas"), "consecut" );
	deepEqual( Stem("consecutivo"), "consecut" );
	deepEqual( Stem("consecutivos"), "consecut" );
	deepEqual( Stem("conseguía"), "consegu" );
	deepEqual( Stem("conseguida"), "consegu" );
	deepEqual( Stem("conseguido"), "consegu" );
	deepEqual( Stem("conseguir"), "consegu" );
	deepEqual( Stem("conseguirle"), "consegu" );
	deepEqual( Stem("conseguirlo"), "consegu" );
	deepEqual( Stem("conseguirlos"), "consegu" );
	deepEqual( Stem("consejero"), "consejer" );
	deepEqual( Stem("consejeros"), "consejer" );
	deepEqual( Stem("consejo"), "consej" );
	deepEqual( Stem("consejos"), "consej" );
	deepEqual( Stem("consenso"), "consens" );
	deepEqual( Stem("consensual"), "consensual" );
	deepEqual( Stem("consentido"), "consent" );
	deepEqual( Stem("consentidos"), "consent" );
	deepEqual( Stem("consentimiento"), "consent" );
	deepEqual( Stem("conserva"), "conserv" );
	deepEqual( Stem("conservaba"), "conserv" );
	deepEqual( Stem("conservaban"), "conserv" );
	deepEqual( Stem("conservación"), "conserv" );
	deepEqual( Stem("conservacionistas"), "conservacion" );
	deepEqual( Stem("conservado"), "conserv" );
	deepEqual( Stem("conservador"), "conserv" );
	deepEqual( Stem("conservadores"), "conserv" );
	deepEqual( Stem("conservados"), "conserv" );
	deepEqual( Stem("conservan"), "conserv" );
	deepEqual( Stem("conservando"), "conserv" );
	deepEqual( Stem("conservar"), "conserv" );
	deepEqual( Stem("conservarlo"), "conserv" );
	deepEqual( Stem("conservarse"), "conserv" );
	deepEqual( Stem("conserven"), "conserv" );
	deepEqual( Stem("conservó"), "conserv" );
	deepEqual( Stem("considera"), "consider" );
	deepEqual( Stem("consideraba"), "consider" );
	deepEqual( Stem("consideraban"), "consider" );
	deepEqual( Stem("considerable"), "consider" );
	deepEqual( Stem("considerablemente"), "consider" );
	deepEqual( Stem("considerables"), "consider" );
	deepEqual( Stem("consideración"), "consider" );
	deepEqual( Stem("consideraciones"), "consider" );
	deepEqual( Stem("considerada"), "consider" );
	deepEqual( Stem("consideradas"), "consider" );
	deepEqual( Stem("considerado"), "consider" );
	deepEqual( Stem("considerados"), "consider" );
	deepEqual( Stem("consideramos"), "consider" );
	deepEqual( Stem("consideran"), "consider" );
	deepEqual( Stem("considerando"), "consider" );
	deepEqual( Stem("considerar"), "consider" );
	deepEqual( Stem("considerara"), "consider" );
	deepEqual( Stem("considerará"), "consider" );
	deepEqual( Stem("consideraría"), "consider" );
	deepEqual( Stem("considerarlas"), "consider" );
	deepEqual( Stem("considerarlo"), "consider" );
	deepEqual( Stem("consideraron"), "consider" );
	deepEqual( Stem("considerarse"), "consider" );
	deepEqual( Stem("considere"), "consider" );
	deepEqual( Stem("consideren"), "consider" );
	deepEqual( Stem("consideres"), "consider" );
	deepEqual( Stem("considero"), "consider" );
	deepEqual( Stem("consideró"), "consider" );
	deepEqual( Stem("consiga"), "consig" );
	deepEqual( Stem("consigna"), "consign" );
	deepEqual( Stem("consignación"), "consign" );
	deepEqual( Stem("consignado"), "consign" );
	deepEqual( Stem("consignados"), "consign" );
	deepEqual( Stem("consignará"), "consign" );
	deepEqual( Stem("consignó"), "consign" );
	deepEqual( Stem("consigo"), "consig" );
	deepEqual( Stem("consigue"), "consig" );
	deepEqual( Stem("consiguen"), "consig" );
	deepEqual( Stem("consigues"), "consig" );
	deepEqual( Stem("consiguiendo"), "consigu" );
	deepEqual( Stem("consiguiente"), "consiguient" );
	deepEqual( Stem("consiguieron"), "consigu" );
	deepEqual( Stem("consiguió"), "consigu" );
	deepEqual( Stem("consiste"), "cons" );
	deepEqual( Stem("consisten"), "consist" );
	deepEqual( Stem("consistencia"), "consistent" );
	deepEqual( Stem("consistente"), "consistent" );
	deepEqual( Stem("consistieron"), "consist" );
	deepEqual( Stem("consistirá"), "consist" );
	deepEqual( Stem("consistiría"), "consist" );
	deepEqual( Stem("consolación"), "consol" );
	deepEqual( Stem("consolarla"), "consol" );
	deepEqual( Stem("consolida"), "consol" );
	deepEqual( Stem("consolidación"), "consolid" );
	deepEqual( Stem("consolidad"), "consol" );
	deepEqual( Stem("consolidadas"), "consolid" );
	deepEqual( Stem("consolidado"), "consolid" );
	deepEqual( Stem("consolidar"), "consolid" );
	deepEqual( Stem("consolidarlo"), "consolid" );
	deepEqual( Stem("consolidaron"), "consolid" );
	deepEqual( Stem("consolidarse"), "consolid" );
	deepEqual( Stem("consolidó"), "consolid" );
	deepEqual( Stem("consorcio"), "consorci" );
	deepEqual( Stem("consorcios"), "consorci" );
	deepEqual( Stem("conspiración"), "conspir" );
	deepEqual( Stem("consta"), "const" );
	deepEqual( Stem("constan"), "const" );
	deepEqual( Stem("constancia"), "constanci" );
	deepEqual( Stem("constancias"), "constanci" );
	deepEqual( Stem("constante"), "constant" );
	deepEqual( Stem("constantemente"), "constant" );
	deepEqual( Stem("constantes"), "constant" );
	deepEqual( Stem("constantiniana"), "constantinian" );
	deepEqual( Stem("constantino"), "constantin" );
	deepEqual( Stem("constará"), "const" );
	deepEqual( Stem("constata"), "constat" );
	deepEqual( Stem("constatar"), "constat" );
	deepEqual( Stem("conste"), "const" );
	deepEqual( Stem("consterna"), "constern" );
	deepEqual( Stem("constitucion"), "constitucion" );
	deepEqual( Stem("constitución"), "constitu" );
	deepEqual( Stem("constitucional"), "constitucional" );
	deepEqual( Stem("constitucionales"), "constitucional" );
	deepEqual( Stem("constitucionalmente"), "constitucional" );
	deepEqual( Stem("constituciones"), "constitu" );
	deepEqual( Stem("constituía"), "constitu" );
	deepEqual( Stem("constituida"), "constitu" );
	deepEqual( Stem("constituido"), "constitu" );
	deepEqual( Stem("constituidos"), "constitu" );
	deepEqual( Stem("constituir"), "constitu" );
	deepEqual( Stem("constituirá"), "constitu" );
	deepEqual( Stem("constituirán"), "constitu" );
	deepEqual( Stem("constituiría"), "constitu" );
	deepEqual( Stem("constituirse"), "constitu" );
	deepEqual( Stem("constitutiva"), "constitut" );
	deepEqual( Stem("constitutivo"), "constitut" );
	deepEqual( Stem("constitutivos"), "constitut" );
	deepEqual( Stem("constituya"), "constitu" );
	deepEqual( Stem("constituye"), "constitu" );
	deepEqual( Stem("constituyen"), "constitu" );
	deepEqual( Stem("constituyente"), "constituyent" );
	deepEqual( Stem("constituyentes"), "constituyent" );
	deepEqual( Stem("constituyeron"), "constitu" );
	deepEqual( Stem("constituyó"), "constitu" );
	deepEqual( Stem("construcción"), "construccion" );
	deepEqual( Stem("construcciones"), "construccion" );
	deepEqual( Stem("constructivo"), "construct" );
	deepEqual( Stem("constructor"), "constructor" );
	deepEqual( Stem("constructora"), "constructor" );
	deepEqual( Stem("constructoras"), "constructor" );
	deepEqual( Stem("constructores"), "constructor" );
	deepEqual( Stem("construida"), "constru" );
	deepEqual( Stem("construidas"), "constru" );
	deepEqual( Stem("construido"), "constru" );
	deepEqual( Stem("construir"), "constru" );
	deepEqual( Stem("construirá"), "constru" );
	deepEqual( Stem("construirán"), "constru" );
	deepEqual( Stem("construirían"), "constru" );
	deepEqual( Stem("construirlo"), "constru" );
	deepEqual( Stem("construirse"), "constru" );
	deepEqual( Stem("construya"), "constru" );
	deepEqual( Stem("construyan"), "constru" );
	deepEqual( Stem("construye"), "constru" );
	deepEqual( Stem("construyen"), "constru" );
	deepEqual( Stem("construyendo"), "constru" );
	deepEqual( Stem("construyó"), "constru" );
	deepEqual( Stem("consuelo"), "consuel" );
	deepEqual( Stem("consuetudinario"), "consuetudinari" );
	deepEqual( Stem("cónsul"), "consul" );
	deepEqual( Stem("consulado"), "consul" );
	deepEqual( Stem("consulados"), "consul" );
	deepEqual( Stem("consular"), "consul" );
	deepEqual( Stem("cónsules"), "consul" );
	deepEqual( Stem("consulta"), "consult" );
	deepEqual( Stem("consultadas"), "consult" );
	deepEqual( Stem("consultado"), "consult" );
	deepEqual( Stem("consultados"), "consult" );
	deepEqual( Stem("consultar"), "consult" );
	deepEqual( Stem("consultaron"), "consult" );
	deepEqual( Stem("consultas"), "consult" );
	deepEqual( Stem("consulte"), "consult" );
	deepEqual( Stem("consultivo"), "consult" );
	deepEqual( Stem("consultor"), "consultor" );
	deepEqual( Stem("consultora"), "consultor" );
	deepEqual( Stem("consultoría"), "consultor" );
	deepEqual( Stem("consultorio"), "consultori" );
	deepEqual( Stem("consultoriobursátil"), "consultoriobursatil" );
	deepEqual( Stem("consumados"), "consum" );
	deepEqual( Stem("consumaran"), "consum" );
	deepEqual( Stem("consumida"), "consum" );
	deepEqual( Stem("consumido"), "consum" );
	deepEqual( Stem("consumidor"), "consumidor" );
	deepEqual( Stem("consumidores"), "consumidor" );
	deepEqual( Stem("consumiendo"), "consum" );
	deepEqual( Stem("consumió"), "consum" );
	deepEqual( Stem("consumir"), "consum" );
	deepEqual( Stem("consumirán"), "consum" );
	deepEqual( Stem("consumismo"), "consum" );
	deepEqual( Stem("consumista"), "consum" );
	deepEqual( Stem("consumo"), "consum" );
	deepEqual( Stem("consumó"), "consum" );
	deepEqual( Stem("contaba"), "cont" );
	deepEqual( Stem("contaban"), "cont" );
	deepEqual( Stem("contabilidad"), "contabil" );
	deepEqual( Stem("contabilizada"), "contabiliz" );
	deepEqual( Stem("contabilizan"), "contabiliz" );
	deepEqual( Stem("contabilizaron"), "contabiliz" );
	deepEqual( Stem("contable"), "contabl" );
	deepEqual( Stem("contactado"), "contact" );
	deepEqual( Stem("contactar"), "contact" );
	deepEqual( Stem("contactarse"), "contact" );
	deepEqual( Stem("contacto"), "contact" );
	deepEqual( Stem("contactos"), "contact" );
	deepEqual( Stem("contadas"), "cont" );
	deepEqual( Stem("contado"), "cont" );
	deepEqual( Stem("contador"), "contador" );
	deepEqual( Stem("contadores"), "contador" );
	deepEqual( Stem("contaduría"), "contadur" );
	deepEqual( Stem("contagia"), "contagi" );
	deepEqual( Stem("contagio"), "contagi" );
	deepEqual( Stem("contagios"), "contagi" );
	deepEqual( Stem("contagiosas"), "contagi" );
	deepEqual( Stem("contamina"), "contamin" );
	deepEqual( Stem("contaminación"), "contamin" );
	deepEqual( Stem("contaminador"), "contamin" );
	deepEqual( Stem("contaminadores"), "contamin" );
	deepEqual( Stem("contaminan"), "contamin" );
	deepEqual( Stem("contaminante"), "contamin" );
	deepEqual( Stem("contaminantes"), "contamin" );
	deepEqual( Stem("contaminar"), "contamin" );
	deepEqual( Stem("contamine"), "contamin" );
	deepEqual( Stem("contaminen"), "contamin" );
	deepEqual( Stem("contamos"), "cont" );
	deepEqual( Stem("contando"), "cont" );
	deepEqual( Stem("contar"), "cont" );
	deepEqual( Stem("contara"), "cont" );
	deepEqual( Stem("contará"), "cont" );
	deepEqual( Stem("contarán"), "cont" );
	deepEqual( Stem("contaré"), "cont" );
	deepEqual( Stem("contempla"), "contempl" );
	deepEqual( Stem("contemplaba"), "contempl" );
	deepEqual( Stem("contemplación"), "contempl" );
	deepEqual( Stem("contemplada"), "contempl" );
	deepEqual( Stem("contempladas"), "contempl" );
	deepEqual( Stem("contemplado"), "contempl" );
	deepEqual( Stem("contemplados"), "contempl" );
	deepEqual( Stem("contemplan"), "contempl" );
	deepEqual( Stem("contemplando"), "contempl" );
	deepEqual( Stem("contemplar"), "contempl" );
	deepEqual( Stem("contemplaron"), "contempl" );
	deepEqual( Stem("contemplarse"), "contempl" );
	deepEqual( Stem("contemple"), "contempl" );
	deepEqual( Stem("contemporánea"), "contemporane" );
	deepEqual( Stem("contemporáneas"), "contemporan" );
	deepEqual( Stem("contemporáneo"), "contemporane" );
	deepEqual( Stem("contemporáneos"), "contemporane" );
	deepEqual( Stem("contención"), "contencion" );
	deepEqual( Stem("contencioso"), "contenci" );
	deepEqual( Stem("contender"), "contend" );
	deepEqual( Stem("contenderán"), "contend" );
	deepEqual( Stem("contendientes"), "contendient" );
	deepEqual( Stem("contener"), "conten" );
	deepEqual( Stem("contenga"), "conteng" );
	deepEqual( Stem("contengan"), "conteng" );
	deepEqual( Stem("contenía"), "conten" );
	deepEqual( Stem("contenían"), "conten" );
	deepEqual( Stem("contenidas"), "conten" );
	deepEqual( Stem("contenido"), "conten" );
	deepEqual( Stem("contenidos"), "conten" );
	deepEqual( Stem("contenta"), "content" );
	deepEqual( Stem("contentamos"), "content" );
	deepEqual( Stem("contentas"), "content" );
	deepEqual( Stem("contento"), "content" );
	deepEqual( Stem("contentos"), "content" );
	deepEqual( Stem("conteo"), "conte" );
	deepEqual( Stem("contesta"), "contest" );
	deepEqual( Stem("contestaban"), "contest" );
	deepEqual( Stem("contestan"), "contest" );
	deepEqual( Stem("contestar"), "contest" );
	deepEqual( Stem("contestara"), "contest" );
	deepEqual( Stem("contestarle"), "contest" );
	deepEqual( Stem("contestarles"), "contest" );
	deepEqual( Stem("contestatario"), "contestatari" );
	deepEqual( Stem("contesté"), "contest" );
	deepEqual( Stem("contestó"), "contest" );
	deepEqual( Stem("contexto"), "context" );
	deepEqual( Stem("conti"), "conti" );
	deepEqual( Stem("contienda"), "contiend" );
	deepEqual( Stem("contiene"), "contien" );
	deepEqual( Stem("contienen"), "contien" );
	deepEqual( Stem("contigo"), "contig" );
	deepEqual( Stem("contiguo"), "contigu" );
	deepEqual( Stem("continental"), "continental" );
	deepEqual( Stem("continente"), "continent" );
	deepEqual( Stem("continentes"), "continent" );
	deepEqual( Stem("contingencia"), "contingent" );
	deepEqual( Stem("contingencias"), "contingent" );
	deepEqual( Stem("contingente"), "contingent" );
	deepEqual( Stem("contingentes"), "contingent" );
	deepEqual( Stem("continua"), "continu" );
	deepEqual( Stem("contínua"), "continu" );
	deepEqual( Stem("continúa"), "continu" );
	deepEqual( Stem("continuaba"), "continu" );
	deepEqual( Stem("continuaban"), "continu" );
	deepEqual( Stem("continuación"), "continu" );
	deepEqual( Stem("continuada"), "continu" );
	deepEqual( Stem("continuado"), "continu" );
	deepEqual( Stem("continuamente"), "continu" );
	deepEqual( Stem("continúan"), "continu" );
	deepEqual( Stem("continuar"), "continu" );
	deepEqual( Stem("continuara"), "continu" );
	deepEqual( Stem("continuará"), "continu" );
	deepEqual( Stem("continuaran"), "continu" );
	deepEqual( Stem("continuarán"), "continu" );
	deepEqual( Stem("continuaron"), "continu" );
	deepEqual( Stem("continuas"), "continu" );
	deepEqual( Stem("continúe"), "continu" );
	deepEqual( Stem("continuen"), "continu" );
	deepEqual( Stem("continuidad"), "continu" );
	deepEqual( Stem("continuo"), "continu" );
	deepEqual( Stem("contínuo"), "continu" );
	deepEqual( Stem("continuó"), "continu" );
	deepEqual( Stem("continuos"), "continu" );
	deepEqual( Stem("contó"), "cont" );
	deepEqual( Stem("contorsionarse"), "contorsion" );
	deepEqual( Stem("contra"), "contr" );
	deepEqual( Stem("contraataque"), "contraataqu" );
	deepEqual( Stem("contraataques"), "contraataqu" );
	deepEqual( Stem("contrabandistas"), "contraband" );
	deepEqual( Stem("contrabando"), "contrab" );
	deepEqual( Stem("contracción"), "contraccion" );
	deepEqual( Stem("contractual"), "contractual" );
	deepEqual( Stem("contractura"), "contractur" );
	deepEqual( Stem("contradecir"), "contradec" );
	deepEqual( Stem("contradecirle"), "contradec" );
	deepEqual( Stem("contrademanda"), "contrademand" );
	deepEqual( Stem("contradicción"), "contradiccion" );
	deepEqual( Stem("contradicciones"), "contradiccion" );
	deepEqual( Stem("contradice"), "contradic" );
	deepEqual( Stem("contradicen"), "contradic" );
	deepEqual( Stem("contradictorias"), "contradictori" );
	deepEqual( Stem("contradigan"), "contradig" );
	deepEqual( Stem("contraer"), "contr" );
	deepEqual( Stem("contragolpear"), "contragolp" );
	deepEqual( Stem("contraídos"), "contraid" );
	deepEqual( Stem("contrajo"), "contraj" );
	deepEqual( Stem("contralor"), "contralor" );
	deepEqual( Stem("contraloría"), "contralor" );
	deepEqual( Stem("contralorías"), "contralor" );
	deepEqual( Stem("contrantes"), "contrant" );
	deepEqual( Stem("contraparte"), "contrapart" );
	deepEqual( Stem("contraposiciones"), "contraposicion" );
	deepEqual( Stem("contraproducente"), "contraproducent" );
	deepEqual( Stem("contraproducentes"), "contraproducent" );
	deepEqual( Stem("contrapuesta"), "contrapuest" );
	deepEqual( Stem("contraria"), "contrari" );
	deepEqual( Stem("contrarias"), "contrari" );
	deepEqual( Stem("contrario"), "contrari" );
	deepEqual( Stem("contrarios"), "contrari" );
	deepEqual( Stem("contrarresta"), "contrarrest" );
	deepEqual( Stem("contrarrestar"), "contrarrest" );
	deepEqual( Stem("contrasta"), "contrast" );
	deepEqual( Stem("contrastan"), "contrast" );
	deepEqual( Stem("contraste"), "contr" );
	deepEqual( Stem("contrastes"), "contrast" );
	deepEqual( Stem("contrataban"), "contrat" );
	deepEqual( Stem("contratación"), "contrat" );
	deepEqual( Stem("contrataciones"), "contrat" );
	deepEqual( Stem("contratadas"), "contrat" );
	deepEqual( Stem("contratado"), "contrat" );
	deepEqual( Stem("contratados"), "contrat" );
	deepEqual( Stem("contratan"), "contrat" );
	deepEqual( Stem("contratantes"), "contrat" );
	deepEqual( Stem("contratar"), "contrat" );
	deepEqual( Stem("contratarle"), "contrat" );
	deepEqual( Stem("contratarlo"), "contrat" );
	deepEqual( Stem("contrataron"), "contrat" );
	deepEqual( Stem("contraten"), "contrat" );
	deepEqual( Stem("contratiempo"), "contratiemp" );
	deepEqual( Stem("contratiempos"), "contratiemp" );
	deepEqual( Stem("contratista"), "contrat" );
	deepEqual( Stem("contratistas"), "contrat" );
	deepEqual( Stem("contrato"), "contrat" );
	deepEqual( Stem("contrató"), "contrat" );
	deepEqual( Stem("contratos"), "contrat" );
	deepEqual( Stem("contrayente"), "contrayent" );
	deepEqual( Stem("contreras"), "contrer" );
	deepEqual( Stem("contribución"), "contribu" );
	deepEqual( Stem("contribuciones"), "contribu" );
	deepEqual( Stem("contribuido"), "contribu" );
	deepEqual( Stem("contribuir"), "contribu" );
	deepEqual( Stem("contribuirá"), "contribu" );
	deepEqual( Stem("contribuiría"), "contribu" );
	deepEqual( Stem("contribuyendo"), "contribu" );
	deepEqual( Stem("contribuyente"), "contribuyent" );
	deepEqual( Stem("contribuyentes"), "contribuyent" );
	deepEqual( Stem("contribuyeron"), "contribu" );
	deepEqual( Stem("contribuyó"), "contribu" );
	deepEqual( Stem("contrincante"), "contrinc" );
	deepEqual( Stem("contrincantes"), "contrinc" );
	deepEqual( Stem("contritos"), "contrit" );
	deepEqual( Stem("control"), "control" );
	deepEqual( Stem("controla"), "control" );
	deepEqual( Stem("controlables"), "control" );
	deepEqual( Stem("controlada"), "control" );
	deepEqual( Stem("controlado"), "control" );
	deepEqual( Stem("controladora"), "control" );
	deepEqual( Stem("controlando"), "control" );
	deepEqual( Stem("controlar"), "control" );
	deepEqual( Stem("controlarlo"), "control" );
	deepEqual( Stem("controlaron"), "control" );
	deepEqual( Stem("controlarse"), "control" );
	deepEqual( Stem("controle"), "control" );
	deepEqual( Stem("controles"), "control" );
	deepEqual( Stem("controversia"), "controversi" );
	deepEqual( Stem("controversias"), "controversi" );
	deepEqual( Stem("controvertida"), "controvert" );
	deepEqual( Stem("controvertido"), "controvert" );
	deepEqual( Stem("contry"), "contry" );
	deepEqual( Stem("contubernio"), "contuberni" );
	deepEqual( Stem("contundencia"), "contundent" );
	deepEqual( Stem("contundente"), "contundent" );
	deepEqual( Stem("contundentemente"), "contundent" );
	deepEqual( Stem("contundentes"), "contundent" );
	deepEqual( Stem("conturbado"), "conturb" );
	deepEqual( Stem("conurbada"), "conurb" );
	deepEqual( Stem("conurbadas"), "conurb" );
	deepEqual( Stem("convalecencia"), "convalecent" );
	deepEqual( Stem("convaleciente"), "convalecient" );
	deepEqual( Stem("convence"), "convenc" );
	deepEqual( Stem("convencer"), "convenc" );
	deepEqual( Stem("convencerle"), "convenc" );
	deepEqual( Stem("convencerse"), "convenc" );
	deepEqual( Stem("convencida"), "convenc" );
	deepEqual( Stem("convencidas"), "convenc" );
	deepEqual( Stem("convencido"), "convenc" );
	deepEqual( Stem("convencidos"), "convenc" );
	deepEqual( Stem("convencieron"), "convenc" );
	deepEqual( Stem("convencimiento"), "convenc" );
	deepEqual( Stem("convencimos"), "convenc" );
	deepEqual( Stem("convenció"), "convenc" );
	deepEqual( Stem("convención"), "convencion" );
	deepEqual( Stem("convencional"), "convencional" );
	deepEqual( Stem("convencionales"), "convencional" );
	deepEqual( Stem("convenciones"), "convencion" );
	deepEqual( Stem("convenencieros"), "convenencier" );
	deepEqual( Stem("convenga"), "conveng" );
	deepEqual( Stem("convenía"), "conven" );
	deepEqual( Stem("convenidos"), "conven" );
	deepEqual( Stem("conveniencia"), "convenient" );
	deepEqual( Stem("conveniente"), "convenient" );
	deepEqual( Stem("convenientes"), "convenient" );
	deepEqual( Stem("convenio"), "conveni" );
	deepEqual( Stem("convenios"), "conveni" );
	deepEqual( Stem("convento"), "convent" );
	deepEqual( Stem("convenzo"), "convenz" );
	deepEqual( Stem("convergencia"), "convergent" );
	deepEqual( Stem("conversación"), "convers" );
	deepEqual( Stem("conversaciones"), "convers" );
	deepEqual( Stem("conversarán"), "convers" );
	deepEqual( Stem("conversaron"), "convers" );
	deepEqual( Stem("conversión"), "conversion" );
	deepEqual( Stem("conversó"), "convers" );
	deepEqual( Stem("convertibles"), "convert" );
	deepEqual( Stem("convertido"), "convert" );
	deepEqual( Stem("convertidor"), "convertidor" );
	deepEqual( Stem("convertidores"), "convertidor" );
	deepEqual( Stem("convertir"), "convert" );
	deepEqual( Stem("convertirá"), "convert" );
	deepEqual( Stem("convertiría"), "convert" );
	deepEqual( Stem("convertirnos"), "convert" );
	deepEqual( Stem("convertirse"), "convert" );
	deepEqual( Stem("convicción"), "conviccion" );
	deepEqual( Stem("convicciones"), "conviccion" );
	deepEqual( Stem("conviene"), "convien" );
	deepEqual( Stem("convierta"), "conviert" );
	deepEqual( Stem("conviertan"), "conviert" );
	deepEqual( Stem("convierte"), "conviert" );
	deepEqual( Stem("convierten"), "conviert" );
	deepEqual( Stem("convincente"), "convincent" );
	deepEqual( Stem("convino"), "convin" );
	deepEqual( Stem("convirtiendo"), "convirt" );
	deepEqual( Stem("convirtiéndola"), "convirt" );
	deepEqual( Stem("convirtiéndolas"), "convirt" );
	deepEqual( Stem("convirtiéndose"), "convirt" );
	deepEqual( Stem("convirtiera"), "convirt" );
	deepEqual( Stem("convirtieron"), "convirt" );
	deepEqual( Stem("convirtió"), "convirt" );
	deepEqual( Stem("convivencia"), "convivent" );
	deepEqual( Stem("convivio"), "convivi" );
	deepEqual( Stem("convivir"), "conviv" );
	deepEqual( Stem("convocación"), "convoc" );
	deepEqual( Stem("convocada"), "convoc" );
	deepEqual( Stem("convocadas"), "convoc" );
	deepEqual( Stem("convocado"), "convoc" );
	deepEqual( Stem("convocados"), "convoc" );
	deepEqual( Stem("convocan"), "convoc" );
	deepEqual( Stem("convocar"), "convoc" );
	deepEqual( Stem("convocará"), "convoc" );
	deepEqual( Stem("convocaron"), "convoc" );
	deepEqual( Stem("convocatoria"), "convocatori" );
	deepEqual( Stem("convocatorias"), "convocatori" );
	deepEqual( Stem("convocó"), "convoc" );
	deepEqual( Stem("convoqué"), "convoqu" );
	deepEqual( Stem("convoquen"), "convoqu" );
	deepEqual( Stem("convoy"), "convoy" );
	deepEqual( Stem("convoyes"), "convoy" );
	deepEqual( Stem("convulsionados"), "convulsion" );
	deepEqual( Stem("convulsivas"), "convuls" );
	deepEqual( Stem("cony"), "cony" );
	deepEqual( Stem("conyugal"), "conyugal" );
	deepEqual( Stem("conyugales"), "conyugal" );
	deepEqual( Stem("cooper"), "coop" );
	deepEqual( Stem("cooperación"), "cooper" );
	deepEqual( Stem("cooperar"), "cooper" );
	deepEqual( Stem("cooperará"), "cooper" );
	deepEqual( Stem("cooperaron"), "cooper" );
	deepEqual( Stem("cooperativa"), "cooper" );
	deepEqual( Stem("cooperen"), "cooper" );
	deepEqual( Stem("cooppel"), "cooppel" );
	deepEqual( Stem("cooptación"), "cooptacion" );
	deepEqual( Stem("coordenadas"), "coorden" );
	deepEqual( Stem("coordina"), "coordin" );
	deepEqual( Stem("coordinación"), "coordin" );
	deepEqual( Stem("coordinada"), "coordin" );
	deepEqual( Stem("coordinadas"), "coordin" );
	deepEqual( Stem("coordinador"), "coordin" );
	deepEqual( Stem("coordinadora"), "coordin" );
	deepEqual( Stem("coordinadores"), "coordin" );
	deepEqual( Stem("coordinados"), "coordin" );
	deepEqual( Stem("coordinan"), "coordin" );
	deepEqual( Stem("coordinando"), "coordin" );
	deepEqual( Stem("coordinar"), "coordin" );
	deepEqual( Stem("coordinarán"), "coordin" );
	deepEqual( Stem("coordinaron"), "coordin" );
	deepEqual( Stem("copa"), "cop" );
	deepEqual( Stem("copán"), "copan" );
	deepEqual( Stem("coparmex"), "coparmex" );
	deepEqual( Stem("copas"), "cop" );
	deepEqual( Stem("copia"), "copi" );
	deepEqual( Stem("copiar"), "copi" );
	deepEqual( Stem("copias"), "copi" );
	deepEqual( Stem("copiemos"), "copi" );
	deepEqual( Stem("copioso"), "copios" );
	deepEqual( Stem("coppel"), "coppel" );
	deepEqual( Stem("cópula"), "copul" );
	deepEqual( Stem("coraje"), "coraj" );
	deepEqual( Stem("corán"), "coran" );
	deepEqual( Stem("coraza"), "coraz" );
	deepEqual( Stem("corazon"), "corazon" );
	deepEqual( Stem("corazón"), "corazon" );
	deepEqual( Stem("corazones"), "corazon" );
	deepEqual( Stem("corbalá"), "corbal" );
	deepEqual( Stem("corbata"), "corbat" );
	deepEqual( Stem("corbatas"), "corbat" );
	deepEqual( Stem("cordelia"), "cordeli" );
	deepEqual( Stem("corderos"), "corder" );
	deepEqual( Stem("cordial"), "cordial" );
	deepEqual( Stem("cordillera"), "cordiller" );
	deepEqual( Stem("córdoba"), "cordob" );
	deepEqual( Stem("cordobés"), "cordobes" );
	deepEqual( Stem("cordón"), "cordon" );
	deepEqual( Stem("cordura"), "cordur" );
	deepEqual( Stem("corea"), "core" );
	deepEqual( Stem("coreados"), "cor" );
	deepEqual( Stem("coreana"), "corean" );
	deepEqual( Stem("coreógrafa"), "coreograf" );
	deepEqual( Stem("coreografías"), "coreograf" );
	deepEqual( Stem("coreográfica"), "coreograf" );
	deepEqual( Stem("corinter"), "corint" );
	deepEqual( Stem("cornalina"), "cornalin" );
	deepEqual( Stem("córneas"), "corn" );
	deepEqual( Stem("cornejo"), "cornej" );
	deepEqual( Stem("cornoyer"), "cornoy" );
	deepEqual( Stem("coro"), "cor" );
	deepEqual( Stem("corona"), "coron" );
	deepEqual( Stem("coronacion"), "coronacion" );
	deepEqual( Stem("coronación"), "coron" );
	deepEqual( Stem("coronada"), "coron" );
	deepEqual( Stem("coronado"), "coron" );
	deepEqual( Stem("coronas"), "coron" );
	deepEqual( Stem("coronelas"), "coronel" );
	deepEqual( Stem("coronó"), "coron" );
	deepEqual( Stem("coros"), "cor" );
	deepEqual( Stem("corp"), "corp" );
	deepEqual( Stem("corporación"), "corpor" );
	deepEqual( Stem("corporaciones"), "corpor" );
	deepEqual( Stem("corporal"), "corporal" );
	deepEqual( Stem("corporation"), "corporation" );
	deepEqual( Stem("corporativa"), "corpor" );
	deepEqual( Stem("corporativas"), "corpor" );
	deepEqual( Stem("corporativo"), "corpor" );
	deepEqual( Stem("corporativos"), "corpor" );
	deepEqual( Stem("corpórea"), "corpore" );
	deepEqual( Stem("corpus"), "corpus" );
	deepEqual( Stem("corra"), "corr" );
	deepEqual( Stem("corral"), "corral" );
	deepEqual( Stem("corrales"), "corral" );
	deepEqual( Stem("corran"), "corr" );
	deepEqual( Stem("corre"), "corr" );
	deepEqual( Stem("correajes"), "correaj" );
	deepEqual( Stem("correcaminos"), "correcamin" );
	deepEqual( Stem("corrección"), "correccion" );
	deepEqual( Stem("correcciones"), "correccion" );
	deepEqual( Stem("correcta"), "correct" );
	deepEqual( Stem("correctamente"), "correct" );
	deepEqual( Stem("correctas"), "correct" );
	deepEqual( Stem("correcto"), "correct" );
	deepEqual( Stem("corredor"), "corredor" );
	deepEqual( Stem("corredores"), "corredor" );
	deepEqual( Stem("correduría"), "corredur" );
	deepEqual( Stem("corregible"), "correg" );
	deepEqual( Stem("corregido"), "correg" );
	deepEqual( Stem("corregidora"), "corregidor" );
	deepEqual( Stem("corregir"), "correg" );
	deepEqual( Stem("corregirla"), "correg" );
	deepEqual( Stem("corregirlo"), "correg" );
	deepEqual( Stem("correligionario"), "correligionari" );
	deepEqual( Stem("correligionarios"), "correligionari" );
	deepEqual( Stem("correlon"), "correlon" );
	deepEqual( Stem("correlones"), "correlon" );
	deepEqual( Stem("corremos"), "corr" );
	deepEqual( Stem("corren"), "corr" );
	deepEqual( Stem("correo"), "corre" );
	deepEqual( Stem("correr"), "corr" );
	deepEqual( Stem("correrá"), "corr" );
	deepEqual( Stem("correrán"), "corr" );
	deepEqual( Stem("correrían"), "corr" );
	deepEqual( Stem("correrlos"), "corr" );
	deepEqual( Stem("corres"), "corr" );
	deepEqual( Stem("correspondan"), "correspond" );
	deepEqual( Stem("corresponde"), "correspond" );
	deepEqual( Stem("corresponden"), "correspond" );
	deepEqual( Stem("correspondencia"), "correspondent" );
	deepEqual( Stem("corresponder"), "correspond" );
	deepEqual( Stem("correspondía"), "correspond" );
	deepEqual( Stem("correspondido"), "correspond" );
	deepEqual( Stem("correspondiente"), "correspondient" );
	deepEqual( Stem("correspondientes"), "correspondient" );
	deepEqual( Stem("correspondieron"), "correspond" );
	deepEqual( Stem("correspondió"), "correspond" );
	deepEqual( Stem("corresponsal"), "corresponsal" );
	deepEqual( Stem("correveidile"), "correveidil" );
	deepEqual( Stem("corrí"), "corr" );
	deepEqual( Stem("corría"), "corr" );
	deepEqual( Stem("corrían"), "corr" );
	deepEqual( Stem("corrida"), "corr" );
	deepEqual( Stem("corridas"), "corr" );
	deepEqual( Stem("corrido"), "corr" );
	deepEqual( Stem("corridos"), "corr" );
	deepEqual( Stem("corriendo"), "corr" );
	deepEqual( Stem("corriente"), "corrient" );
	deepEqual( Stem("corrientes"), "corrient" );
	deepEqual( Stem("corrieron"), "corr" );
	deepEqual( Stem("corrige"), "corrig" );
	deepEqual( Stem("corrigen"), "corrig" );
	deepEqual( Stem("corrijan"), "corrij" );
	deepEqual( Stem("corrillo"), "corrill" );
	deepEqual( Stem("corrió"), "corr" );
	deepEqual( Stem("corripio"), "corripi" );
	deepEqual( Stem("corro"), "corr" );
	deepEqual( Stem("corrobora"), "corrobor" );
	deepEqual( Stem("corroboraban"), "corrobor" );
	deepEqual( Stem("corroboraron"), "corrobor" );
	deepEqual( Stem("corrompa"), "corromp" );
	deepEqual( Stem("corrompe"), "corromp" );
	deepEqual( Stem("corrosión"), "corrosion" );
	deepEqual( Stem("corrupción"), "corrupcion" );
	deepEqual( Stem("corruptela"), "corruptel" );
	deepEqual( Stem("corrupto"), "corrupt" );
	deepEqual( Stem("corruptos"), "corrupt" );
	deepEqual( Stem("corta"), "cort" );
	deepEqual( Stem("cortada"), "cort" );
	deepEqual( Stem("cortadillo"), "cortadill" );
	deepEqual( Stem("cortadillos"), "cortadill" );
	deepEqual( Stem("cortado"), "cort" );
	deepEqual( Stem("cortadores"), "cortador" );
	deepEqual( Stem("cortando"), "cort" );
	deepEqual( Stem("cortantes"), "cortant" );
	deepEqual( Stem("cortar"), "cort" );
	deepEqual( Stem("cortarle"), "cort" );
	deepEqual( Stem("cortarlos"), "cort" );
	deepEqual( Stem("cortarnos"), "cort" );
	deepEqual( Stem("cortárselo"), "cort" );
	deepEqual( Stem("cortas"), "cort" );
	deepEqual( Stem("cortázar"), "cortaz" );
	deepEqual( Stem("corte"), "cort" );
	deepEqual( Stem("cortedad"), "corted" );
	deepEqual( Stem("cortejada"), "cortej" );
	deepEqual( Stem("cortejar"), "cortej" );
	deepEqual( Stem("cortés"), "cortes" );
	deepEqual( Stem("cortesanas"), "cortesan" );
	deepEqual( Stem("cortesía"), "cortes" );
	deepEqual( Stem("cortez"), "cortez" );
	deepEqual( Stem("corteza"), "cortez" );
	deepEqual( Stem("cortina"), "cortin" );
	deepEqual( Stem("cortinas"), "cortin" );
	deepEqual( Stem("cortines"), "cortin" );
	deepEqual( Stem("cortito"), "cortit" );
	deepEqual( Stem("corto"), "cort" );
	deepEqual( Stem("cortó"), "cort" );
	deepEqual( Stem("cortoplazo"), "cortoplaz" );
	deepEqual( Stem("cortos"), "cort" );
	deepEqual( Stem("coruña"), "coruñ" );
	deepEqual( Stem("corvette"), "corvett" );
	deepEqual( Stem("corvi"), "corvi" );
	deepEqual( Stem("cosa"), "cos" );
	deepEqual( Stem("cosas"), "cos" );
	deepEqual( Stem("cosaspeores"), "cosaspeor" );
	deepEqual( Stem("cosecha"), "cosech" );
	deepEqual( Stem("cosechando"), "cosech" );
	deepEqual( Stem("cosechas"), "cosech" );
	deepEqual( Stem("coser"), "cos" );
	deepEqual( Stem("cosméticos"), "cosmet" );
	deepEqual( Stem("cósmica"), "cosmic" );
	deepEqual( Stem("cósmico"), "cosmic" );
	deepEqual( Stem("cosmovisión"), "cosmovision" );
	deepEqual( Stem("coso"), "cos" );
	deepEqual( Stem("coss"), "coss" );
	deepEqual( Stem("cossío"), "cossi" );
	deepEqual( Stem("costa"), "cost" );
	deepEqual( Stem("costaba"), "cost" );
	deepEqual( Stem("costado"), "cost" );
	deepEqual( Stem("costados"), "cost" );
	deepEqual( Stem("costal"), "costal" );
	deepEqual( Stem("costales"), "costal" );
	deepEqual( Stem("costándole"), "cost" );
	deepEqual( Stem("costar"), "cost" );
	deepEqual( Stem("costará"), "cost" );
	deepEqual( Stem("costarán"), "cost" );
	deepEqual( Stem("costarricense"), "costarricens" );
	deepEqual( Stem("costas"), "cost" );
	deepEqual( Stem("costeable"), "costeabl" );
	deepEqual( Stem("costee"), "coste" );
	deepEqual( Stem("costera"), "coster" );
	deepEqual( Stem("costeras"), "coster" );
	deepEqual( Stem("costero"), "coster" );
	deepEqual( Stem("costilla"), "costill" );
	deepEqual( Stem("costner"), "costn" );
	deepEqual( Stem("costo"), "cost" );
	deepEqual( Stem("costó"), "cost" );
	deepEqual( Stem("costos"), "cost" );
	deepEqual( Stem("costosas"), "cost" );
	deepEqual( Stem("costoso"), "costos" );
	deepEqual( Stem("costosos"), "costos" );
	deepEqual( Stem("costumbre"), "costumbr" );
	deepEqual( Stem("costumbres"), "costumbr" );
	deepEqual( Stem("costura"), "costur" );
	deepEqual( Stem("costuras"), "costur" );
	deepEqual( Stem("costureras"), "costurer" );
	deepEqual( Stem("cota"), "cot" );
	deepEqual( Stem("cotejo"), "cotej" );
	deepEqual( Stem("cotero"), "coter" );
	deepEqual( Stem("cotidiana"), "cotidian" );
	deepEqual( Stem("cotidianas"), "cotidian" );
	deepEqual( Stem("cotidianeidad"), "cotidian" );
	deepEqual( Stem("cotidiano"), "cotidian" );
	deepEqual( Stem("cotidianos"), "cotidian" );
	deepEqual( Stem("cotiza"), "cotiz" );
	deepEqual( Stem("cotización"), "cotiz" );
	deepEqual( Stem("cotizaciones"), "cotiz" );
	deepEqual( Stem("cotizado"), "cotiz" );
	deepEqual( Stem("cotizados"), "cotiz" );
	deepEqual( Stem("cotizan"), "cotiz" );
	deepEqual( Stem("cotizar"), "cotiz" );
	deepEqual( Stem("cotorreo"), "cotorre" );
	deepEqual( Stem("couches"), "couch" );
	deepEqual( Stem("cougar"), "coug" );
	deepEqual( Stem("country"), "country" );
	deepEqual( Stem("covarrubias"), "covarrubi" );
	deepEqual( Stem("cover"), "cov" );
	deepEqual( Stem("covers"), "covers" );
	deepEqual( Stem("cóvers"), "covers" );
	deepEqual( Stem("covian"), "covi" );
	deepEqual( Stem("cowboy"), "cowboy" );
	deepEqual( Stem("cox"), "cox" );
	deepEqual( Stem("coyolxauhqui"), "coyolxauhqui" );
	deepEqual( Stem("coyotaje"), "coyotaj" );
	deepEqual( Stem("coyote"), "coyot" );
	deepEqual( Stem("coyotepec"), "coyotepec" );
	deepEqual( Stem("coyuca"), "coyuc" );
	deepEqual( Stem("coyuntura"), "coyuntur" );
	deepEqual( Stem("cozumel"), "cozumel" );
	deepEqual( Stem("cpp"), "cpp" );
	deepEqual( Stem("crack"), "crack" );
	deepEqual( Stem("cráneo"), "crane" );
	deepEqual( Stem("cráter"), "crat" );
	deepEqual( Stem("cráteres"), "crater" );
	deepEqual( Stem("cravioto"), "craviot" );
	deepEqual( Stem("crawford"), "crawford" );
	deepEqual( Stem("crayones"), "crayon" );
	deepEqual( Stem("crea"), "cre" );
	deepEqual( Stem("creacion"), "creacion" );
	deepEqual( Stem("creación"), "creacion" );
	deepEqual( Stem("creaciones"), "creacion" );
	deepEqual( Stem("creada"), "cre" );
	deepEqual( Stem("creadas"), "cre" );
	deepEqual( Stem("creado"), "cre" );
	deepEqual( Stem("creador"), "creador" );
	deepEqual( Stem("creadores"), "creador" );
	deepEqual( Stem("creame"), "cream" );
	deepEqual( Stem("creamos"), "cre" );
	deepEqual( Stem("crean"), "cre" );
	deepEqual( Stem("creando"), "cre" );
	deepEqual( Stem("crear"), "cre" );
	deepEqual( Stem("creara"), "cre" );
	deepEqual( Stem("creará"), "cre" );
	deepEqual( Stem("crearán"), "cre" );
	deepEqual( Stem("crearía"), "cre" );
	deepEqual( Stem("crearles"), "cre" );
	deepEqual( Stem("crearon"), "cre" );
	deepEqual( Stem("creativa"), "creativ" );
	deepEqual( Stem("creativas"), "creativ" );
	deepEqual( Stem("creatividad"), "creativ" );
	deepEqual( Stem("creativo"), "creativ" );
	deepEqual( Stem("creativos"), "creativ" );
	deepEqual( Stem("crece"), "crec" );
	deepEqual( Stem("crecen"), "crec" );
	deepEqual( Stem("crecer"), "crec" );
	deepEqual( Stem("crecerá"), "crec" );
	deepEqual( Stem("crecerán"), "crec" );
	deepEqual( Stem("creceremos"), "crec" );
	deepEqual( Stem("crecerían"), "crec" );
	deepEqual( Stem("creces"), "crec" );
	deepEqual( Stem("crecí"), "crec" );
	deepEqual( Stem("crecido"), "crec" );
	deepEqual( Stem("creciendo"), "crec" );
	deepEqual( Stem("creciente"), "crecient" );
	deepEqual( Stem("crecieron"), "crec" );
	deepEqual( Stem("crecimiento"), "crecimient" );
	deepEqual( Stem("crecimientos"), "crecimient" );
	deepEqual( Stem("creció"), "crec" );
	deepEqual( Stem("credencial"), "credencial" );
	deepEqual( Stem("credenciales"), "credencial" );
	deepEqual( Stem("credencialización"), "credencializ" );
	deepEqual( Stem("credencializados"), "credencializ" );
	deepEqual( Stem("credibilidad"), "credibil" );
	deepEqual( Stem("crediticia"), "creditici" );
	deepEqual( Stem("crediticias"), "creditici" );
	deepEqual( Stem("crediticio"), "creditici" );
	deepEqual( Stem("crediticios"), "creditici" );
	deepEqual( Stem("crédito"), "credit" );
	deepEqual( Stem("creditos"), "credit" );
	deepEqual( Stem("créditos"), "credit" );
	deepEqual( Stem("cree"), "cre" );
	deepEqual( Stem("créeme"), "creem" );
	deepEqual( Stem("creemos"), "cre" );
	deepEqual( Stem("creen"), "cre" );
	deepEqual( Stem("creencia"), "creenci" );
	deepEqual( Stem("creencias"), "creenci" );
	deepEqual( Stem("creer"), "cre" );
	deepEqual( Stem("creerán"), "cre" );
	deepEqual( Stem("creería"), "cre" );
	deepEqual( Stem("creerme"), "cre" );
	deepEqual( Stem("creía"), "cre" );
	deepEqual( Stem("creíamos"), "cre" );
	deepEqual( Stem("creíble"), "creibl" );
	deepEqual( Stem("creíbles"), "creibl" );
	deepEqual( Stem("creído"), "creid" );
	deepEqual( Stem("creímos"), "creim" );
	deepEqual( Stem("cremas"), "crem" );
	deepEqual( Stem("cremi"), "cremi" );
	deepEqual( Stem("creo"), "cre" );
	deepEqual( Stem("creó"), "cre" );
	deepEqual( Stem("creole"), "creol" );
	deepEqual( Stem("cretinismo"), "cretin" );
	deepEqual( Stem("creyendo"), "creyend" );
	deepEqual( Stem("creyó"), "crey" );
	deepEqual( Stem("crezca"), "crezc" );
	deepEqual( Stem("criada"), "cri" );
	deepEqual( Stem("criadas"), "cri" );
	deepEqual( Stem("criadero"), "criader" );
	deepEqual( Stem("criadita"), "criadit" );
	deepEqual( Stem("criadores"), "criador" );
	deepEqual( Stem("criatura"), "criatur" );
	deepEqual( Stem("criaturas"), "criatur" );
	deepEqual( Stem("crimen"), "crim" );
	deepEqual( Stem("crímenes"), "crimen" );
	deepEqual( Stem("criminal"), "criminal" );
	deepEqual( Stem("criminales"), "criminal" );
	deepEqual( Stem("criminalidad"), "criminal" );
	deepEqual( Stem("criminalista"), "criminal" );
	deepEqual( Stem("criocirugía"), "criocirug" );
	deepEqual( Stem("criollos"), "crioll" );
	deepEqual( Stem("crisantemo"), "crisantem" );
	deepEqual( Stem("crisantemos"), "crisant" );
	deepEqual( Stem("crisis"), "crisis" );
	deepEqual( Stem("cristal"), "cristal" );
	deepEqual( Stem("cristales"), "cristal" );
	deepEqual( Stem("cristalización"), "cristaliz" );
	deepEqual( Stem("cristalizado"), "cristaliz" );
	deepEqual( Stem("cristiana"), "cristian" );
	deepEqual( Stem("cristianismo"), "cristian" );
	deepEqual( Stem("cristiano"), "cristian" );
	deepEqual( Stem("cristianos"), "cristian" );
	deepEqual( Stem("cristina"), "cristin" );
	deepEqual( Stem("cristo"), "crist" );
	deepEqual( Stem("cristobal"), "cristobal" );
	deepEqual( Stem("criterio"), "criteri" );
	deepEqual( Stem("criterios"), "criteri" );
	deepEqual( Stem("critica"), "critic" );
	deepEqual( Stem("crítica"), "critic" );
	deepEqual( Stem("criticaban"), "critic" );
	deepEqual( Stem("criticado"), "critic" );
	deepEqual( Stem("criticamente"), "critic" );
	deepEqual( Stem("critican"), "critic" );
	deepEqual( Stem("criticando"), "critic" );
	deepEqual( Stem("criticar"), "critic" );
	deepEqual( Stem("criticará"), "critic" );
	deepEqual( Stem("criticarlos"), "critic" );
	deepEqual( Stem("criticaron"), "critic" );
	deepEqual( Stem("críticas"), "critic" );
	deepEqual( Stem("crítico"), "critic" );
	deepEqual( Stem("criticó"), "critic" );
	deepEqual( Stem("críticos"), "critic" );
	deepEqual( Stem("croacia"), "croaci" );
	deepEqual( Stem("croc"), "croc" );
	deepEqual( Stem("cromadas"), "crom" );
	deepEqual( Stem("cromadoras"), "cromador" );
	deepEqual( Stem("cromados"), "crom" );
	deepEqual( Stem("cromera"), "cromer" );
	deepEqual( Stem("crónica"), "cronic" );
	deepEqual( Stem("crónicas"), "cronic" );
	deepEqual( Stem("cronista"), "cronist" );
	deepEqual( Stem("cronistas"), "cronist" );
	deepEqual( Stem("cronometraron"), "cronometr" );
	deepEqual( Stem("cronómetro"), "cronometr" );
	deepEqual( Stem("cronometró"), "cronometr" );
	deepEqual( Stem("cronómetros"), "cronometr" );
	deepEqual( Stem("croquetas"), "croquet" );
	deepEqual( Stem("croquis"), "croquis" );
	deepEqual( Stem("croquistas"), "croquist" );
	deepEqual( Stem("croux"), "croux" );
	deepEqual( Stem("cruce"), "cruc" );
	deepEqual( Stem("crucero"), "crucer" );
	deepEqual( Stem("cruceros"), "crucer" );
	deepEqual( Stem("cruces"), "cruc" );
	deepEqual( Stem("crucial"), "crucial" );
	deepEqual( Stem("cruda"), "crud" );
	deepEqual( Stem("crudo"), "crud" );
	deepEqual( Stem("crue"), "cru" );
	deepEqual( Stem("cruel"), "cruel" );
	deepEqual( Stem("cruenta"), "cruent" );
	deepEqual( Stem("cruise"), "cruis" );
	deepEqual( Stem("cruz"), "cruz" );
	deepEqual( Stem("cruza"), "cruz" );
	deepEqual( Stem("cruzada"), "cruz" );
	deepEqual( Stem("cruzadas"), "cruz" );
	deepEqual( Stem("cruzado"), "cruz" );
	deepEqual( Stem("cruzados"), "cruz" );
	deepEqual( Stem("cruzan"), "cruz" );
	deepEqual( Stem("cruzando"), "cruz" );
	deepEqual( Stem("cruzar"), "cruz" );
	deepEqual( Stem("cruzará"), "cruz" );
	deepEqual( Stem("cruzaron"), "cruz" );
	deepEqual( Stem("cruzas"), "cruz" );
	deepEqual( Stem("cruzó"), "cruz" );
	deepEqual( Stem("crysel"), "crysel" );
	deepEqual( Stem("cse"), "cse" );
	deepEqual( Stem("csg"), "csg" );
	deepEqual( Stem("ctm"), "ctm" );
	deepEqual( Stem("cu"), "cu" );
	deepEqual( Stem("cuadra"), "cuadr" );
	deepEqual( Stem("cuadrado"), "cuadr" );
	deepEqual( Stem("cuadrados"), "cuadr" );
	deepEqual( Stem("cuadrangular"), "cuadrangul" );
	deepEqual( Stem("cuadras"), "cuadr" );
	deepEqual( Stem("cuadrilátero"), "cuadrilater" );
	deepEqual( Stem("cuadriláteros"), "cuadrilater" );
	deepEqual( Stem("cuadrilla"), "cuadrill" );
	deepEqual( Stem("cuadro"), "cuadr" );
	deepEqual( Stem("cuadros"), "cuadr" );
	deepEqual( Stem("cuadruplica"), "cuadrupl" );
	deepEqual( Stem("cuadruplicó"), "cuadruplic" );
	deepEqual( Stem("cuajar"), "cuaj" );
	deepEqual( Stem("cuajarle"), "cuaj" );
	deepEqual( Stem("cuajimalpa"), "cuajimalp" );
	deepEqual( Stem("cual"), "cual" );
	deepEqual( Stem("cuál"), "cual" );
	deepEqual( Stem("cuales"), "cual" );
	deepEqual( Stem("cuáles"), "cual" );
	deepEqual( Stem("cualesquier"), "cualesqui" );
	deepEqual( Stem("cualidad"), "cualid" );
	deepEqual( Stem("cualidades"), "cualidad" );
	deepEqual( Stem("cualquier"), "cualqui" );
	deepEqual( Stem("cualquiera"), "cualqu" );
	deepEqual( Stem("cuando"), "cuand" );
	deepEqual( Stem("cuándo"), "cuand" );
	deepEqual( Stem("cuánta"), "cuant" );
	deepEqual( Stem("cuantas"), "cuant" );
	deepEqual( Stem("cuántas"), "cuant" );
	deepEqual( Stem("cuantifica"), "cuantif" );
	deepEqual( Stem("cuantiosamente"), "cuanti" );
	deepEqual( Stem("cuantiosos"), "cuantios" );
	deepEqual( Stem("cuanto"), "cuant" );
	deepEqual( Stem("cuánto"), "cuant" );
	deepEqual( Stem("cuantos"), "cuant" );
	deepEqual( Stem("cuántos"), "cuant" );
	deepEqual( Stem("cuarenta"), "cuarent" );
	deepEqual( Stem("cuarta"), "cuart" );
	deepEqual( Stem("cuartel"), "cuartel" );
	deepEqual( Stem("cuarteles"), "cuartel" );
	deepEqual( Stem("cuarteto"), "cuartet" );
	deepEqual( Stem("cuartillas"), "cuartill" );
	deepEqual( Stem("cuartitos"), "cuartit" );
	deepEqual( Stem("cuarto"), "cuart" );
	deepEqual( Stem("cuartos"), "cuart" );
	deepEqual( Stem("cuarzo"), "cuarz" );
	deepEqual( Stem("cuatacho"), "cuatach" );
	deepEqual( Stem("cuate"), "cuat" );
	deepEqual( Stem("cuatro"), "cuatr" );
	deepEqual( Stem("cuauhtémoc"), "cuauhtemoc" );
	deepEqual( Stem("cuautitlán"), "cuautitlan" );
	deepEqual( Stem("cuba"), "cub" );
	deepEqual( Stem("cubana"), "cuban" );
	deepEqual( Stem("cubanas"), "cuban" );
	deepEqual( Stem("cubano"), "cuban" );
	deepEqual( Stem("cubanos"), "cuban" );
	deepEqual( Stem("cubas"), "cub" );
	deepEqual( Stem("cubero"), "cuber" );
	deepEqual( Stem("cúbicos"), "cubic" );
	deepEqual( Stem("cubículos"), "cubicul" );
	deepEqual( Stem("cubierta"), "cubiert" );
	deepEqual( Stem("cubiertas"), "cubiert" );
	deepEqual( Stem("cubierto"), "cubiert" );
	deepEqual( Stem("cubiertos"), "cubiert" );
	deepEqual( Stem("cubra"), "cubr" );
	deepEqual( Stem("cubran"), "cubr" );
	deepEqual( Stem("cubre"), "cubr" );
	deepEqual( Stem("cubren"), "cubr" );
	deepEqual( Stem("cubría"), "cubr" );
	deepEqual( Stem("cubrían"), "cubr" );
	deepEqual( Stem("cubriendo"), "cubr" );
	deepEqual( Stem("cubriéndonos"), "cubr" );
	deepEqual( Stem("cubrimos"), "cubr" );
	deepEqual( Stem("cubrió"), "cubr" );
	deepEqual( Stem("cubrir"), "cubr" );
	deepEqual( Stem("cubrirá"), "cubr" );
	deepEqual( Stem("cubrirán"), "cubr" );
	deepEqual( Stem("cuca"), "cuc" );
	deepEqual( Stem("cuchara"), "cuch" );
	deepEqual( Stem("cucharaditas"), "cucharadit" );
	deepEqual( Stem("cucharas"), "cuch" );
	deepEqual( Stem("cuchillada"), "cuchill" );
	deepEqual( Stem("cuchillería"), "cuchill" );
	deepEqual( Stem("cuchillo"), "cuchill" );
	deepEqual( Stem("cuchillos"), "cuchill" );
	deepEqual( Stem("cuco"), "cuc" );
	deepEqual( Stem("cuelgan"), "cuelg" );
	deepEqual( Stem("cuelgue"), "cuelg" );
	deepEqual( Stem("cuellar"), "cuell" );
	deepEqual( Stem("cuéllar"), "cuell" );
	deepEqual( Stem("cuello"), "cuell" );
	deepEqual( Stem("cuenca"), "cuenc" );
	deepEqual( Stem("cuenta"), "cuent" );
	deepEqual( Stem("cuentan"), "cuent" );
	deepEqual( Stem("cuentas"), "cuent" );
	deepEqual( Stem("cuente"), "cuent" );
	deepEqual( Stem("cuenten"), "cuent" );
	deepEqual( Stem("cuento"), "cuent" );
	deepEqual( Stem("cuentos"), "cuent" );
	deepEqual( Stem("cuerda"), "cuerd" );
	deepEqual( Stem("cuerdas"), "cuerd" );
	deepEqual( Stem("cuerdo"), "cuerd" );
	deepEqual( Stem("cuernavaca"), "cuernavac" );
	deepEqual( Stem("cuerno"), "cuern" );
	deepEqual( Stem("cuernos"), "cuern" );
	deepEqual( Stem("cuero"), "cuer" );
	deepEqual( Stem("cuerpo"), "cuerp" );
	deepEqual( Stem("cuerpos"), "cuerp" );
	deepEqual( Stem("cuervo"), "cuerv" );
	deepEqual( Stem("cuesta"), "cuest" );
	deepEqual( Stem("cuestan"), "cuest" );
	deepEqual( Stem("cuestas"), "cuest" );
	deepEqual( Stem("cuestion"), "cuestion" );
	deepEqual( Stem("cuestión"), "cuestion" );
	deepEqual( Stem("cuestiona"), "cuestion" );
	deepEqual( Stem("cuestionada"), "cuestion" );
	deepEqual( Stem("cuestionado"), "cuestion" );
	deepEqual( Stem("cuestionados"), "cuestion" );
	deepEqual( Stem("cuestionamiento"), "cuestion" );
	deepEqual( Stem("cuestionamientos"), "cuestion" );
	deepEqual( Stem("cuestionan"), "cuestion" );
	deepEqual( Stem("cuestiones"), "cuestion" );
	deepEqual( Stem("cuestionó"), "cuestion" );
	deepEqual( Stem("cueva"), "cuev" );
	deepEqual( Stem("cuevas"), "cuev" );
	deepEqual( Stem("cuicalli"), "cuicalli" );
	deepEqual( Stem("cuicuilco"), "cuicuilc" );
	deepEqual( Stem("cuida"), "cuid" );
	deepEqual( Stem("cuidaba"), "cuid" );
	deepEqual( Stem("cuidad"), "cuid" );
	deepEqual( Stem("cuidadas"), "cuid" );
	deepEqual( Stem("cuidado"), "cuid" );
	deepEqual( Stem("cuidador"), "cuidador" );
	deepEqual( Stem("cuidados"), "cuid" );
	deepEqual( Stem("cuidadosa"), "cuidad" );
	deepEqual( Stem("cuidadosamente"), "cuidad" );
	deepEqual( Stem("cuidadoso"), "cuidad" );
	deepEqual( Stem("cuidan"), "cuid" );
	deepEqual( Stem("cuidando"), "cuid" );
	deepEqual( Stem("cuidar"), "cuid" );
	deepEqual( Stem("cuidará"), "cuid" );
	deepEqual( Stem("cuidarlo"), "cuid" );
	deepEqual( Stem("cuide"), "cuid" );
	deepEqual( Stem("cuiden"), "cuid" );
	deepEqual( Stem("cuitlahuac"), "cuitlahuac" );
	deepEqual( Stem("culebra"), "culebr" );
	deepEqual( Stem("culiacan"), "culiac" );
	deepEqual( Stem("culiacán"), "culiacan" );
	deepEqual( Stem("culinarias"), "culinari" );
	deepEqual( Stem("culminada"), "culmin" );
	deepEqual( Stem("culminado"), "culmin" );
	deepEqual( Stem("culminante"), "culmin" );
	deepEqual( Stem("culminará"), "culmin" );
	deepEqual( Stem("culminarán"), "culmin" );
	deepEqual( Stem("culminó"), "culmin" );
	deepEqual( Stem("culpa"), "culp" );
	deepEqual( Stem("culpabilidad"), "culpabil" );
	deepEqual( Stem("culpable"), "culpabl" );
	deepEqual( Stem("culpables"), "culpabl" );
	deepEqual( Stem("culpar"), "culp" );
	deepEqual( Stem("culpó"), "culp" );
	deepEqual( Stem("culposos"), "culpos" );
	deepEqual( Stem("culta"), "cult" );
	deepEqual( Stem("cultiva"), "cultiv" );
	deepEqual( Stem("cultivable"), "cultiv" );
	deepEqual( Stem("cultivadas"), "cultiv" );
	deepEqual( Stem("cultivadores"), "cultiv" );
	deepEqual( Stem("cultivan"), "cultiv" );
	deepEqual( Stem("cultivar"), "cultiv" );
	deepEqual( Stem("cultivo"), "cultiv" );
	deepEqual( Stem("cultivos"), "cultiv" );
	deepEqual( Stem("culto"), "cult" );
	deepEqual( Stem("cultos"), "cult" );
	deepEqual( Stem("cultura"), "cultur" );
	deepEqual( Stem("cultural"), "cultural" );
	deepEqual( Stem("culturales"), "cultural" );
	deepEqual( Stem("culturas"), "cultur" );
	deepEqual( Stem("culturización"), "culturiz" );
	deepEqual( Stem("cumaná"), "cuman" );
	deepEqual( Stem("cumbre"), "cumbr" );
	deepEqual( Stem("cumbres"), "cumbr" );
	deepEqual( Stem("cumpla"), "cumpl" );
	deepEqual( Stem("cumplan"), "cumpl" );
	deepEqual( Stem("cumple"), "cumpl" );
	deepEqual( Stem("cumpleaños"), "cumpleañ" );
	deepEqual( Stem("cumplen"), "cumpl" );
	deepEqual( Stem("cumplí"), "cumpl" );
	deepEqual( Stem("cumplía"), "cumpl" );
	deepEqual( Stem("cumplían"), "cumpl" );
	deepEqual( Stem("cumplidas"), "cumpl" );
	deepEqual( Stem("cumplido"), "cumpl" );
	deepEqual( Stem("cumplidoras"), "cumplidor" );
	deepEqual( Stem("cumplidos"), "cumpl" );
	deepEqual( Stem("cumpliendo"), "cumpl" );
	deepEqual( Stem("cumpliéramos"), "cumpl" );
	deepEqual( Stem("cumplieron"), "cumpl" );
	deepEqual( Stem("cumplimiento"), "cumplimient" );
	deepEqual( Stem("cumplimientos"), "cumplimient" );
	deepEqual( Stem("cumplimos"), "cumpl" );
	deepEqual( Stem("cumplió"), "cumpl" );
	deepEqual( Stem("cumplir"), "cumpl" );
	deepEqual( Stem("cumplirá"), "cumpl" );
	deepEqual( Stem("cumplirles"), "cumpl" );
	deepEqual( Stem("cumplirse"), "cumpl" );
	deepEqual( Stem("cumplírsele"), "cumplirsel" );
	deepEqual( Stem("cuñada"), "cuñ" );
	deepEqual( Stem("cuñado"), "cuñ" );
	deepEqual( Stem("cuñados"), "cuñ" );
	deepEqual( Stem("cunda"), "cund" );
	deepEqual( Stem("cundió"), "cund" );
	deepEqual( Stem("cuño"), "cuñ" );
	deepEqual( Stem("cuota"), "cuot" );
	deepEqual( Stem("cuotas"), "cuot" );
	deepEqual( Stem("cupertino"), "cupertin" );
	deepEqual( Stem("cupo"), "cup" );
	deepEqual( Stem("cupón"), "cupon" );
	deepEqual( Stem("cúpula"), "cupul" );
	deepEqual( Stem("cúpulas"), "cupul" );
	deepEqual( Stem("cura"), "cur" );
	deepEqual( Stem("curaban"), "cur" );
	deepEqual( Stem("curandero"), "curander" );
	deepEqual( Stem("curar"), "cur" );
	deepEqual( Stem("cure"), "cur" );
	deepEqual( Stem("curia"), "curi" );
	deepEqual( Stem("curiosamente"), "curi" );
	deepEqual( Stem("curiosas"), "curi" );
	deepEqual( Stem("curiosidad"), "curi" );
	deepEqual( Stem("curiosidades"), "curi" );
	deepEqual( Stem("curioso"), "curios" );
	deepEqual( Stem("curriculum"), "curriculum" );
	deepEqual( Stem("currículum"), "curriculum" );
	deepEqual( Stem("curro"), "curr" );
	deepEqual( Stem("cursada"), "curs" );
	deepEqual( Stem("cursando"), "curs" );
	deepEqual( Stem("cursaron"), "curs" );
	deepEqual( Stem("curso"), "curs" );
	deepEqual( Stem("cursos"), "curs" );
	deepEqual( Stem("curva"), "curv" );
	deepEqual( Stem("curvatura"), "curvatur" );
	deepEqual( Stem("cuspinera"), "cuspiner" );
	deepEqual( Stem("custodia"), "custodi" );
	deepEqual( Stem("custodiado"), "custodi" );
	deepEqual( Stem("custodian"), "custodi" );
	deepEqual( Stem("custodiar"), "custodi" );
	deepEqual( Stem("customline"), "customlin" );
	deepEqual( Stem("cutáneas"), "cutan" );
	deepEqual( Stem("cutzamala"), "cutzamal" );
	deepEqual( Stem("cuya"), "cuy" );
	deepEqual( Stem("cuyas"), "cuy" );
	deepEqual( Stem("cuyo"), "cuy" );
	deepEqual( Stem("cuyos"), "cuy" );
	deepEqual( Stem("cydsa"), "cydsa" );
	deepEqual( Stem("cyrus"), "cyrus" );
	deepEqual( Stem("d"), "d" );
	deepEqual( Stem("da"), "da" );
	deepEqual( Stem("daba"), "dab" );
	deepEqual( Stem("daban"), "dab" );
	deepEqual( Stem("dacarett"), "dacarett" );
	deepEqual( Stem("dad"), "dad" );
	deepEqual( Stem("dada"), "dad" );
	deepEqual( Stem("dadas"), "dad" );
	deepEqual( Stem("dado"), "dad" );
	deepEqual( Stem("dados"), "dad" );
	deepEqual( Stem("dagoberto"), "dagobert" );
	deepEqual( Stem("dahn"), "dahn" );
	deepEqual( Stem("daihim"), "daihim" );
	deepEqual( Stem("daily"), "daily" );
	deepEqual( Stem("daimatsu"), "daimatsu" );
	deepEqual( Stem("daimler"), "daiml" );
	deepEqual( Stem("dalia"), "dali" );
	deepEqual( Stem("dallas"), "dall" );
	deepEqual( Stem("daltonismo"), "dalton" );
	deepEqual( Stem("dama"), "dam" );
	deepEqual( Stem("damas"), "dam" );
	deepEqual( Stem("dame"), "dam" );
	deepEqual( Stem("damnificada"), "damnific" );
	deepEqual( Stem("damnificados"), "damnific" );
	deepEqual( Stem("damos"), "dam" );
	deepEqual( Stem("dan"), "dan" );
	deepEqual( Stem("daña"), "dañ" );
	deepEqual( Stem("dañaban"), "dañ" );
	deepEqual( Stem("dañada"), "dañ" );
	deepEqual( Stem("dañadas"), "dañ" );
	deepEqual( Stem("dañado"), "dañ" );
	deepEqual( Stem("dañados"), "dañ" );
	deepEqual( Stem("dañan"), "dañ" );
	deepEqual( Stem("dañar"), "dañ" );
	deepEqual( Stem("dañará"), "dañ" );
	deepEqual( Stem("dañaran"), "dañ" );
	deepEqual( Stem("dañarse"), "dañ" );
	deepEqual( Stem("dando"), "dand" );
	deepEqual( Stem("dándole"), "dandol" );
	deepEqual( Stem("dándonos"), "dandon" );
	deepEqual( Stem("daniel"), "daniel" );
	deepEqual( Stem("daniela"), "daniel" );
	deepEqual( Stem("dañino"), "dañin" );
	deepEqual( Stem("dañinos"), "dañin" );
	deepEqual( Stem("danny"), "danny" );
	deepEqual( Stem("daño"), "dañ" );
	deepEqual( Stem("daños"), "dañ" );
	deepEqual( Stem("dante"), "dant" );
	deepEqual( Stem("danza"), "danz" );
	deepEqual( Stem("danzar"), "danz" );
	deepEqual( Stem("danzas"), "danz" );
	deepEqual( Stem("dar"), "dar" );
	deepEqual( Stem("dará"), "dar" );
	deepEqual( Stem("darán"), "daran" );
	deepEqual( Stem("darás"), "daras" );
	deepEqual( Stem("darci"), "darci" );
	deepEqual( Stem("daré"), "dar" );
	deepEqual( Stem("daría"), "dar" );
	deepEqual( Stem("darían"), "dar" );
	deepEqual( Stem("darío"), "dari" );
	deepEqual( Stem("darla"), "darl" );
	deepEqual( Stem("darle"), "darl" );
	deepEqual( Stem("darles"), "darl" );
	deepEqual( Stem("darnos"), "darn" );
	deepEqual( Stem("darse"), "dars" );
	deepEqual( Stem("dárselo"), "darsel" );
	deepEqual( Stem("dárselos"), "darsel" );
	deepEqual( Stem("das"), "das" );
	deepEqual( Stem("dasa"), "das" );
	deepEqual( Stem("dasd"), "dasd" );
	deepEqual( Stem("data"), "dat" );
	deepEqual( Stem("date"), "dat" );
	deepEqual( Stem("dato"), "dat" );
	deepEqual( Stem("datos"), "dat" );
	deepEqual( Stem("datsun"), "datsun" );
	deepEqual( Stem("datum"), "datum" );
	deepEqual( Stem("davalillo"), "davalill" );
	deepEqual( Stem("dávalos"), "daval" );
	deepEqual( Stem("dave"), "dav" );
	deepEqual( Stem("david"), "dav" );
	deepEqual( Stem("dávila"), "davil" );
	deepEqual( Stem("davis"), "davis" );
	deepEqual( Stem("day"), "day" );
	deepEqual( Stem("days"), "days" );
	deepEqual( Stem("daza"), "daz" );
	deepEqual( Stem("ddf"), "ddf" );
	deepEqual( Stem("de"), "de" );
	deepEqual( Stem("dé"), "de" );
	deepEqual( Stem("dean"), "dean" );
	deepEqual( Stem("deba"), "deb" );
	deepEqual( Stem("debajo"), "debaj" );
	deepEqual( Stem("deban"), "deb" );
	deepEqual( Stem("debate"), "debat" );
	deepEqual( Stem("debatido"), "debat" );
	deepEqual( Stem("debatir"), "debat" );
	deepEqual( Stem("debatirán"), "debat" );
	deepEqual( Stem("debe"), "deb" );
	deepEqual( Stem("debemos"), "deb" );
	deepEqual( Stem("deben"), "deb" );
	deepEqual( Stem("deber"), "deb" );
	deepEqual( Stem("deberá"), "deb" );
	deepEqual( Stem("deberán"), "deb" );
	deepEqual( Stem("deberás"), "deb" );
	deepEqual( Stem("deberes"), "deber" );
	deepEqual( Stem("debería"), "deb" );
	deepEqual( Stem("deberíamos"), "deb" );
	deepEqual( Stem("deberían"), "deb" );
	deepEqual( Stem("debes"), "deb" );
	deepEqual( Stem("debí"), "deb" );
	deepEqual( Stem("debía"), "deb" );
	deepEqual( Stem("debíamos"), "deb" );
	deepEqual( Stem("debían"), "deb" );
	deepEqual( Stem("debidamente"), "debid" );
	deepEqual( Stem("debido"), "deb" );
	deepEqual( Stem("debiera"), "deb" );
	deepEqual( Stem("debieran"), "deb" );
	deepEqual( Stem("debieron"), "deb" );
	deepEqual( Stem("débil"), "debil" );
	deepEqual( Stem("debiles"), "debil" );
	deepEqual( Stem("débiles"), "debil" );
	deepEqual( Stem("debilidad"), "debil" );
	deepEqual( Stem("debilidades"), "debil" );
	deepEqual( Stem("debilita"), "debilit" );
	deepEqual( Stem("debilitado"), "debilit" );
	deepEqual( Stem("debilitar"), "debilit" );
	deepEqual( Stem("debilitarnos"), "debilit" );
	deepEqual( Stem("debilite"), "debilit" );
	deepEqual( Stem("debió"), "deb" );
	deepEqual( Stem("débito"), "debit" );
	deepEqual( Stem("debo"), "deb" );
	deepEqual( Stem("debut"), "debut" );
	deepEqual( Stem("debutado"), "debut" );
	deepEqual( Stem("debutante"), "debut" );
	deepEqual( Stem("debutarán"), "debut" );
	deepEqual( Stem("debutó"), "debut" );
	deepEqual( Stem("década"), "dec" );
	deepEqual( Stem("décadas"), "dec" );
	deepEqual( Stem("decadencia"), "decadent" );
	deepEqual( Stem("decadente"), "decadent" );
	deepEqual( Stem("decaer"), "dec" );
	deepEqual( Stem("decaería"), "dec" );
	deepEqual( Stem("decaído"), "decaid" );
	deepEqual( Stem("decaiga"), "decaig" );
	deepEqual( Stem("decanini"), "decanini" );
	deepEqual( Stem("decano"), "decan" );
	deepEqual( Stem("decapitada"), "decapit" );
	deepEqual( Stem("decapitados"), "decapit" );
	deepEqual( Stem("decapitó"), "decapit" );
	deepEqual( Stem("decayó"), "decay" );
	deepEqual( Stem("decenas"), "decen" );
	deepEqual( Stem("decenso"), "decens" );
	deepEqual( Stem("decente"), "decent" );
	deepEqual( Stem("decepción"), "decepcion" );
	deepEqual( Stem("decepciona"), "decepcion" );
	deepEqual( Stem("decepcionada"), "decepcion" );
	deepEqual( Stem("decepcionadas"), "decepcion" );
	deepEqual( Stem("decepcionado"), "decepcion" );
	deepEqual( Stem("decía"), "dec" );
	deepEqual( Stem("decíamos"), "dec" );
	deepEqual( Stem("decían"), "dec" );
	deepEqual( Stem("decida"), "dec" );
	deepEqual( Stem("decidan"), "decid" );
	deepEqual( Stem("decide"), "decid" );
	deepEqual( Stem("deciden"), "decid" );
	deepEqual( Stem("decidí"), "decid" );
	deepEqual( Stem("decidida"), "decid" );
	deepEqual( Stem("decididamente"), "decidid" );
	deepEqual( Stem("decidido"), "decid" );
	deepEqual( Stem("decidieron"), "decid" );
	deepEqual( Stem("decidimos"), "decid" );
	deepEqual( Stem("decidió"), "decid" );
	deepEqual( Stem("decidir"), "decid" );
	deepEqual( Stem("decidirá"), "decid" );
	deepEqual( Stem("decidirán"), "decid" );
	deepEqual( Stem("decidiría"), "decid" );
	deepEqual( Stem("decidirse"), "decid" );
	deepEqual( Stem("decido"), "dec" );
	deepEqual( Stem("décima"), "decim" );
	deepEqual( Stem("décimas"), "decim" );
	deepEqual( Stem("décimo"), "decim" );
	deepEqual( Stem("decimos"), "dec" );
	deepEqual( Stem("decir"), "dec" );
	deepEqual( Stem("decirle"), "dec" );
	deepEqual( Stem("decirles"), "dec" );
	deepEqual( Stem("decirlo"), "dec" );
	deepEqual( Stem("decirme"), "dec" );
	deepEqual( Stem("decirnos"), "dec" );
	deepEqual( Stem("decirse"), "dec" );
	deepEqual( Stem("decírselo"), "dec" );
	deepEqual( Stem("decision"), "decision" );
	deepEqual( Stem("decisión"), "decision" );
	deepEqual( Stem("decisiones"), "decision" );
	deepEqual( Stem("decisioón"), "decisioon" );
	deepEqual( Stem("decisiva"), "decis" );
	deepEqual( Stem("decisivo"), "decis" );
	deepEqual( Stem("decisivos"), "decis" );
	deepEqual( Stem("declamaba"), "declam" );
	deepEqual( Stem("declara"), "decl" );
	deepEqual( Stem("declaraban"), "declar" );
	deepEqual( Stem("declaración"), "declar" );
	deepEqual( Stem("declaraciones"), "declar" );
	deepEqual( Stem("declarada"), "declar" );
	deepEqual( Stem("declaradas"), "declar" );
	deepEqual( Stem("declarado"), "declar" );
	deepEqual( Stem("declarante"), "declar" );
	deepEqual( Stem("declarar"), "declar" );
	deepEqual( Stem("declararon"), "declar" );
	deepEqual( Stem("declararse"), "declar" );
	deepEqual( Stem("declaratoria"), "declaratori" );
	deepEqual( Stem("declare"), "declar" );
	deepEqual( Stem("declaren"), "declar" );
	deepEqual( Stem("declaró"), "declar" );
	deepEqual( Stem("declinación"), "declin" );
	deepEqual( Stem("declinar"), "declin" );
	deepEqual( Stem("declinó"), "declin" );
	deepEqual( Stem("decomisadas"), "decomis" );
	deepEqual( Stem("decomisados"), "decomis" );
	deepEqual( Stem("decomisan"), "decomis" );
	deepEqual( Stem("decomisaron"), "decomis" );
	deepEqual( Stem("decomisó"), "decomis" );
	deepEqual( Stem("decoración"), "decor" );
	deepEqual( Stem("decorado"), "decor" );
	deepEqual( Stem("decorados"), "decor" );
	deepEqual( Stem("decorar"), "decor" );
	deepEqual( Stem("decorativo"), "decor" );
	deepEqual( Stem("decrecimiento"), "decrec" );
	deepEqual( Stem("decremento"), "decrement" );
	deepEqual( Stem("decrescenzo"), "decrescenz" );
	deepEqual( Stem("decretado"), "decret" );
	deepEqual( Stem("decretan"), "decret" );
	deepEqual( Stem("decretaron"), "decret" );
	deepEqual( Stem("decretarse"), "decret" );
	deepEqual( Stem("decreto"), "decret" );
	deepEqual( Stem("decretó"), "decret" );
	deepEqual( Stem("decretos"), "decret" );
	deepEqual( Stem("dedazo"), "dedaz" );
	deepEqual( Stem("dedazos"), "dedaz" );
	deepEqual( Stem("dedeó"), "dede" );
	deepEqual( Stem("dedica"), "dedic" );
	deepEqual( Stem("dedicación"), "dedic" );
	deepEqual( Stem("dedicada"), "dedic" );
	deepEqual( Stem("dedicadas"), "dedic" );
	deepEqual( Stem("dedicado"), "dedic" );
	deepEqual( Stem("dedicados"), "dedic" );
	deepEqual( Stem("dedicamos"), "dedic" );
	deepEqual( Stem("dedican"), "dedic" );
	deepEqual( Stem("dedicando"), "dedic" );
	deepEqual( Stem("dedicar"), "dedic" );
	deepEqual( Stem("dedicará"), "dedic" );
	deepEqual( Stem("dedicaran"), "dedic" );
	deepEqual( Stem("dedicaré"), "dedic" );
	deepEqual( Stem("dedicarme"), "dedic" );
	deepEqual( Stem("dedicarnos"), "dedic" );
	deepEqual( Stem("dedicaron"), "dedic" );
	deepEqual( Stem("dedicarse"), "dedic" );
	deepEqual( Stem("dedicarte"), "dedicart" );
	deepEqual( Stem("dedico"), "dedic" );
	deepEqual( Stem("dedicó"), "dedic" );
	deepEqual( Stem("dedillo"), "dedill" );
	deepEqual( Stem("dedique"), "dediqu" );
	deepEqual( Stem("dediqué"), "dediqu" );
	deepEqual( Stem("dedo"), "ded" );
	deepEqual( Stem("dedos"), "ded" );
	deepEqual( Stem("deducibles"), "deduc" );
	deepEqual( Stem("deduje"), "deduj" );
	deepEqual( Stem("dedúzcale"), "deduzcal" );
	deepEqual( Stem("deduzco"), "deduzc" );
	deepEqual( Stem("dee"), "dee" );
	deepEqual( Stem("defecto"), "defect" );
	deepEqual( Stem("defectos"), "defect" );
	deepEqual( Stem("defender"), "defend" );
	deepEqual( Stem("defenderá"), "defend" );
	deepEqual( Stem("defenderán"), "defend" );
	deepEqual( Stem("defenderse"), "defend" );
	deepEqual( Stem("defendía"), "defend" );
	deepEqual( Stem("defendida"), "defend" );
	deepEqual( Stem("defendido"), "defend" );
	deepEqual( Stem("defendiendo"), "defend" );
	deepEqual( Stem("defendió"), "defend" );
	deepEqual( Stem("defenestradas"), "defenestr" );
	deepEqual( Stem("defeños"), "defeñ" );
	deepEqual( Stem("defensa"), "defens" );
	deepEqual( Stem("defensas"), "defens" );
	deepEqual( Stem("defensiva"), "defens" );
	deepEqual( Stem("defensivas"), "defens" );
	deepEqual( Stem("defensivo"), "defens" );
	deepEqual( Stem("defensor"), "defensor" );
	deepEqual( Stem("defensora"), "defensor" );
	deepEqual( Stem("defensores"), "defensor" );
	deepEqual( Stem("defensorías"), "defensor" );
	deepEqual( Stem("deferencia"), "deferent" );
	deepEqual( Stem("deficiencia"), "deficient" );
	deepEqual( Stem("deficiencias"), "deficient" );
	deepEqual( Stem("deficiente"), "deficient" );
	deepEqual( Stem("deficientes"), "deficient" );
	deepEqual( Stem("deficit"), "deficit" );
	deepEqual( Stem("déficit"), "deficit" );
	deepEqual( Stem("defienda"), "defiend" );
	deepEqual( Stem("defiende"), "defiend" );
	deepEqual( Stem("defienden"), "defiend" );
	deepEqual( Stem("defina"), "defin" );
	deepEqual( Stem("define"), "defin" );
	deepEqual( Stem("definen"), "defin" );
	deepEqual( Stem("definía"), "defin" );
	deepEqual( Stem("definición"), "definicion" );
	deepEqual( Stem("definiciones"), "definicion" );
	deepEqual( Stem("definida"), "defin" );
	deepEqual( Stem("definidas"), "defin" );
	deepEqual( Stem("definido"), "defin" );
	deepEqual( Stem("definidos"), "defin" );
	deepEqual( Stem("definiendo"), "defin" );
	deepEqual( Stem("definió"), "defin" );
	deepEqual( Stem("definir"), "defin" );
	deepEqual( Stem("definirá"), "defin" );
	deepEqual( Stem("definirán"), "defin" );
	deepEqual( Stem("definiría"), "defin" );
	deepEqual( Stem("definirse"), "defin" );
	deepEqual( Stem("definitiva"), "definit" );
	deepEqual( Stem("definitivamente"), "definit" );
	deepEqual( Stem("definitivas"), "definit" );
	deepEqual( Stem("definitivo"), "definit" );
	deepEqual( Stem("definitivos"), "definit" );
	deepEqual( Stem("deforma"), "deform" );
	deepEqual( Stem("deformaciones"), "deform" );
	deepEqual( Stem("defraudador"), "defraud" );
	deepEqual( Stem("defraudadores"), "defraud" );
	deepEqual( Stem("defraudados"), "defraud" );
	deepEqual( Stem("defraudando"), "defraud" );
	deepEqual( Stem("defraudar"), "defraud" );
	deepEqual( Stem("defraudaré"), "defraud" );
	deepEqual( Stem("defraudarlos"), "defraud" );
	deepEqual( Stem("degollado"), "degoll" );
	deepEqual( Stem("degradación"), "degrad" );
	deepEqual( Stem("degradado"), "degrad" );
	deepEqual( Stem("degradando"), "degrad" );
	deepEqual( Stem("degüello"), "degüell" );
	deepEqual( Stem("dehesa"), "dehes" );
	deepEqual( Stem("deidad"), "deid" );
	deepEqual( Stem("deidades"), "deidad" );
	deepEqual( Stem("deificaron"), "deific" );
	deepEqual( Stem("déis"), "deis" );
	deepEqual( Stem("deja"), "dej" );
	deepEqual( Stem("dejaba"), "dej" );
	deepEqual( Stem("dejaban"), "dej" );
	deepEqual( Stem("dejada"), "dej" );
	deepEqual( Stem("dejadas"), "dej" );
	deepEqual( Stem("dejado"), "dej" );
	deepEqual( Stem("dejados"), "dej" );
	deepEqual( Stem("déjame"), "dejam" );
	deepEqual( Stem("dejamos"), "dej" );
	deepEqual( Stem("dejan"), "dej" );
	deepEqual( Stem("dejando"), "dej" );
	deepEqual( Stem("dejándolas"), "dej" );
	deepEqual( Stem("dejar"), "dej" );
	deepEqual( Stem("dejara"), "dej" );
	deepEqual( Stem("dejará"), "dej" );
	deepEqual( Stem("dejaran"), "dej" );
	deepEqual( Stem("dejarán"), "dej" );
	deepEqual( Stem("dejaría"), "dej" );
	deepEqual( Stem("dejarla"), "dej" );
	deepEqual( Stem("dejarlo"), "dej" );
	deepEqual( Stem("dejarlos"), "dej" );
	deepEqual( Stem("dejarme"), "dej" );
	deepEqual( Stem("dejaron"), "dej" );
	deepEqual( Stem("dejarse"), "dej" );
	deepEqual( Stem("deje"), "dej" );
	deepEqual( Stem("déjeme"), "dejem" );
	deepEqual( Stem("dejemos"), "dej" );
	deepEqual( Stem("dejen"), "dej" );
	deepEqual( Stem("dejó"), "dej" );
	deepEqual( Stem("del"), "del" );
	deepEqual( Stem("delano"), "delan" );
	deepEqual( Stem("delante"), "delant" );
	deepEqual( Stem("delantera"), "delanter" );
	deepEqual( Stem("delanteras"), "delanter" );
	deepEqual( Stem("delantero"), "delanter" );
	deepEqual( Stem("delanteros"), "delanter" );
	deepEqual( Stem("delatan"), "delat" );
	deepEqual( Stem("delató"), "delat" );
	deepEqual( Stem("delaware"), "delawar" );
	deepEqual( Stem("dele"), "del" );
	deepEqual( Stem("déle"), "del" );
	deepEqual( Stem("delega"), "deleg" );
	deepEqual( Stem("delegación"), "deleg" );
	deepEqual( Stem("delegaciones"), "deleg" );
	deepEqual( Stem("delegada"), "deleg" );
	deepEqual( Stem("delegado"), "deleg" );
	deepEqual( Stem("delegados"), "deleg" );
	deepEqual( Stem("deleitan"), "deleit" );
	deepEqual( Stem("deleitar"), "deleit" );
	deepEqual( Stem("deleite"), "deleit" );
	deepEqual( Stem("delfines"), "delfin" );
	deepEqual( Stem("delgada"), "delg" );
	deepEqual( Stem("delgado"), "delg" );
	deepEqual( Stem("delgados"), "delg" );
	deepEqual( Stem("delia"), "deli" );
	deepEqual( Stem("deliberaciones"), "deliber" );
	deepEqual( Stem("deliberada"), "deliber" );
	deepEqual( Stem("deliberadamente"), "deliber" );
	deepEqual( Stem("deliberado"), "deliber" );
	deepEqual( Stem("delicada"), "delic" );
	deepEqual( Stem("delicadas"), "delic" );
	deepEqual( Stem("delicado"), "delic" );
	deepEqual( Stem("delicias"), "delici" );
	deepEqual( Stem("delictivos"), "delict" );
	deepEqual( Stem("delimitada"), "delimit" );
	deepEqual( Stem("delimitar"), "delimit" );
	deepEqual( Stem("delimitó"), "delimit" );
	deepEqual( Stem("delincuencia"), "delincuent" );
	deepEqual( Stem("delincuente"), "delincuent" );
	deepEqual( Stem("delincuentes"), "delincuent" );
	deepEqual( Stem("delinea"), "deline" );
	deepEqual( Stem("delinquen"), "delinqu" );
	deepEqual( Stem("delinquir"), "delinqu" );
	deepEqual( Stem("deliquio"), "deliqui" );
	deepEqual( Stem("delirante"), "delir" );
	deepEqual( Stem("delirio"), "deliri" );
	deepEqual( Stem("delito"), "delit" );
	deepEqual( Stem("delitos"), "delit" );
	deepEqual( Stem("deliverpool"), "deliverpool" );
	deepEqual( Stem("dell"), "dell" );
	deepEqual( Stem("delon"), "delon" );
	deepEqual( Stem("delors"), "delors" );
	deepEqual( Stem("delsur"), "delsur" );
	deepEqual( Stem("delta"), "delt" );
	deepEqual( Stem("demagogia"), "demagogi" );
	deepEqual( Stem("demagógicamente"), "demagog" );
	deepEqual( Stem("demagógico"), "demagog" );
	deepEqual( Stem("demagógicos"), "demagog" );
	deepEqual( Stem("demanda"), "demand" );
	deepEqual( Stem("demandaba"), "demand" );
	deepEqual( Stem("demandado"), "demand" );
	deepEqual( Stem("demandan"), "demand" );
	deepEqual( Stem("demandando"), "demand" );
	deepEqual( Stem("demandante"), "demand" );
	deepEqual( Stem("demandantes"), "demand" );
	deepEqual( Stem("demandar"), "demand" );
	deepEqual( Stem("demandará"), "demand" );
	deepEqual( Stem("demandaron"), "demand" );
	deepEqual( Stem("demandas"), "demand" );
	deepEqual( Stem("demandé"), "demand" );
	deepEqual( Stem("demandó"), "demand" );
	deepEqual( Stem("demarcación"), "demarc" );
	deepEqual( Stem("demás"), "demas" );
	deepEqual( Stem("demasía"), "demas" );
	deepEqual( Stem("demasiada"), "demasi" );
	deepEqual( Stem("demasiadas"), "demasi" );
	deepEqual( Stem("demasiado"), "demasi" );
	deepEqual( Stem("demasiados"), "demasi" );
	deepEqual( Stem("déme"), "dem" );
	deepEqual( Stem("demencia"), "demenci" );
	deepEqual( Stem("demencial"), "demencial" );
	deepEqual( Stem("deming"), "deming" );
	deepEqual( Stem("democracia"), "democraci" );
	deepEqual( Stem("democracias"), "democraci" );
	deepEqual( Stem("demócrata"), "democrat" );
	deepEqual( Stem("demócratas"), "democrat" );
	deepEqual( Stem("democrática"), "democrat" );
	deepEqual( Stem("democráticamente"), "democrat" );
	deepEqual( Stem("democráticas"), "democrat" );
	deepEqual( Stem("democrático"), "democrat" );
	deepEqual( Stem("democráticos"), "democrat" );
	deepEqual( Stem("democratización"), "democratiz" );
	deepEqual( Stem("democratizador"), "democratiz" );
	deepEqual( Stem("democratizante"), "democratiz" );
	deepEqual( Stem("democratizar"), "democratiz" );
	deepEqual( Stem("democratizarla"), "democratiz" );
	deepEqual( Stem("democristiano"), "democristian" );
	deepEqual( Stem("demográfica"), "demograf" );
	deepEqual( Stem("demográficas"), "demograf" );
	deepEqual( Stem("demoníaca"), "demoniac" );
	deepEqual( Stem("demonio"), "demoni" );
	deepEqual( Stem("demonios"), "demoni" );
	deepEqual( Stem("demora"), "demor" );
	deepEqual( Stem("demorados"), "demor" );
	deepEqual( Stem("demorar"), "demor" );
	deepEqual( Stem("demostración"), "demostr" );
	deepEqual( Stem("demostraciones"), "demostr" );
	deepEqual( Stem("demostrado"), "demostr" );
	deepEqual( Stem("demostrando"), "demostr" );
	deepEqual( Stem("demostrar"), "demostr" );
	deepEqual( Stem("demostrará"), "demostr" );
	deepEqual( Stem("demostrarle"), "demostr" );
	deepEqual( Stem("demostrarnos"), "demostr" );
	deepEqual( Stem("demostraron"), "demostr" );
	deepEqual( Stem("demostremos"), "demostr" );
	deepEqual( Stem("demostró"), "demostr" );
	deepEqual( Stem("demuestra"), "demuestr" );
	deepEqual( Stem("demuestran"), "demuestr" );
	deepEqual( Stem("demuestre"), "demuestr" );
	deepEqual( Stem("demuestren"), "demuestr" );
	deepEqual( Stem("den"), "den" );
	deepEqual( Stem("denny"), "denny" );
	deepEqual( Stem("denomina"), "denomin" );
	deepEqual( Stem("denominada"), "denomin" );
	deepEqual( Stem("denominadas"), "denomin" );
	deepEqual( Stem("denominado"), "denomin" );
	deepEqual( Stem("denominados"), "denomin" );
	deepEqual( Stem("denostada"), "denost" );
	deepEqual( Stem("denotan"), "denot" );
	deepEqual( Stem("denotar"), "denot" );
	deepEqual( Stem("denotaron"), "denot" );
	deepEqual( Stem("denotó"), "denot" );
	deepEqual( Stem("densa"), "dens" );
	deepEqual( Stem("dense"), "dens" );
	deepEqual( Stem("densidad"), "densid" );
	deepEqual( Stem("densos"), "dens" );
	deepEqual( Stem("dental"), "dental" );
	deepEqual( Stem("dentales"), "dental" );
	deepEqual( Stem("dentelladas"), "dentell" );
	deepEqual( Stem("dentista"), "dentist" );
	deepEqual( Stem("dentro"), "dentr" );
	deepEqual( Stem("denuncia"), "denunci" );
	deepEqual( Stem("denunciada"), "denunci" );
	deepEqual( Stem("denunciado"), "denunci" );
	deepEqual( Stem("denunciados"), "denunci" );
	deepEqual( Stem("denuncian"), "denunci" );
	deepEqual( Stem("denunciante"), "denunci" );
	deepEqual( Stem("denunciantes"), "denunci" );
	deepEqual( Stem("denunciar"), "denunci" );
	deepEqual( Stem("denunciará"), "denunci" );
	deepEqual( Stem("denunciarán"), "denunci" );
	deepEqual( Stem("denunciaron"), "denunci" );
	deepEqual( Stem("denuncias"), "denunci" );
	deepEqual( Stem("denuncie"), "denunci" );
	deepEqual( Stem("denuncié"), "denunci" );
	deepEqual( Stem("denúncielo"), "denunciel" );
	deepEqual( Stem("denunció"), "denunc" );
	deepEqual( Stem("denzel"), "denzel" );
	deepEqual( Stem("deparado"), "depar" );
	deepEqual( Stem("deparará"), "depar" );
	deepEqual( Stem("departamentales"), "departamental" );
	deepEqual( Stem("departamento"), "departament" );
	deepEqual( Stem("departamentos"), "departament" );
	deepEqual( Stem("departió"), "depart" );
	deepEqual( Stem("depende"), "depend" );
	deepEqual( Stem("dependen"), "depend" );
	deepEqual( Stem("dependencia"), "dependent" );
	deepEqual( Stem("dependencias"), "dependent" );
	deepEqual( Stem("depender"), "depend" );
	deepEqual( Stem("dependerá"), "depend" );
	deepEqual( Stem("dependes"), "depend" );
	deepEqual( Stem("dependía"), "depend" );
	deepEqual( Stem("dependiendo"), "depend" );
	deepEqual( Stem("dependiente"), "dependient" );
	deepEqual( Stem("dependientes"), "dependient" );
	deepEqual( Stem("deplazamiento"), "deplaz" );
	deepEqual( Stem("deportaciones"), "deport" );
	deepEqual( Stem("deportado"), "deport" );
	deepEqual( Stem("deporte"), "deport" );
	deepEqual( Stem("deportes"), "deport" );
	deepEqual( Stem("deportista"), "deport" );
	deepEqual( Stem("deportistas"), "deport" );
	deepEqual( Stem("deportiva"), "deport" );
	deepEqual( Stem("deportivas"), "deport" );
	deepEqual( Stem("deportivo"), "deport" );
	deepEqual( Stem("deportivos"), "deport" );
	deepEqual( Stem("deposita"), "deposit" );
	deepEqual( Stem("depositada"), "deposit" );
	deepEqual( Stem("depositado"), "deposit" );
	deepEqual( Stem("depositados"), "deposit" );
	deepEqual( Stem("depositan"), "deposit" );
	deepEqual( Stem("depositantes"), "deposit" );
	deepEqual( Stem("depositar"), "deposit" );
	deepEqual( Stem("depositario"), "depositari" );
	deepEqual( Stem("depositarse"), "deposit" );
	deepEqual( Stem("deposite"), "deposit" );
	deepEqual( Stem("deposítele"), "depositel" );
	deepEqual( Stem("depósito"), "deposit" );
	deepEqual( Stem("depósitos"), "deposit" );
	deepEqual( Stem("depredadora"), "depred" );
	deepEqual( Stem("depredadores"), "depred" );
	deepEqual( Stem("depresión"), "depresion" );
	deepEqual( Stem("depresiones"), "depresion" );
	deepEqual( Stem("deprimente"), "depriment" );
	deepEqual( Stem("deprimido"), "deprim" );
	deepEqual( Stem("deprimidos"), "deprim" );
	deepEqual( Stem("depuracion"), "depuracion" );
	deepEqual( Stem("depuración"), "depur" );
	deepEqual( Stem("depuradísima"), "depuradisim" );
	deepEqual( Stem("depurado"), "depur" );
	deepEqual( Stem("depurar"), "depur" );
	deepEqual( Stem("der"), "der" );
	deepEqual( Stem("derecha"), "derech" );
	deepEqual( Stem("derechas"), "derech" );
	deepEqual( Stem("derechazo"), "derechaz" );
	deepEqual( Stem("derechazos"), "derechaz" );
	deepEqual( Stem("derecho"), "derech" );
	deepEqual( Stem("derechohabientes"), "derechohabient" );
	deepEqual( Stem("derechos"), "derech" );
	deepEqual( Stem("deregios"), "deregi" );
	deepEqual( Stem("derek"), "derek" );
	deepEqual( Stem("deri"), "deri" );
	deepEqual( Stem("deriva"), "deriv" );
	deepEqual( Stem("derivación"), "deriv" );
	deepEqual( Stem("derivadas"), "deriv" );
	deepEqual( Stem("derivado"), "deriv" );
	deepEqual( Stem("derivados"), "deriv" );
	deepEqual( Stem("derivan"), "deriv" );
	deepEqual( Stem("derivar"), "deriv" );
	deepEqual( Stem("derivará"), "deriv" );
	deepEqual( Stem("derivaron"), "deriv" );
	deepEqual( Stem("derivó"), "deriv" );
	deepEqual( Stem("derma"), "derm" );
	deepEqual( Stem("dermatitis"), "dermatitis" );
	deepEqual( Stem("dermatología"), "dermatolog" );
	deepEqual( Stem("dermatológica"), "dermatolog" );
	deepEqual( Stem("derrama"), "derram" );
	deepEqual( Stem("derramado"), "derram" );
	deepEqual( Stem("derramamiento"), "derram" );
	deepEqual( Stem("derraman"), "derram" );
	deepEqual( Stem("derramar"), "derram" );
	deepEqual( Stem("derrame"), "derram" );
	deepEqual( Stem("derrames"), "derram" );
	deepEqual( Stem("derrapante"), "derrap" );
	deepEqual( Stem("derrapar"), "derrap" );
	deepEqual( Stem("derrape"), "derrap" );
	deepEqual( Stem("derredor"), "derredor" );
	deepEqual( Stem("derretirse"), "derret" );
	deepEqual( Stem("derriba"), "derrib" );
	deepEqual( Stem("derribado"), "derrib" );
	deepEqual( Stem("derribar"), "derrib" );
	deepEqual( Stem("derribó"), "derrib" );
	deepEqual( Stem("derrochando"), "derroch" );
	deepEqual( Stem("derroche"), "derroch" );
	deepEqual( Stem("derrota"), "derrot" );
	deepEqual( Stem("derrotado"), "derrot" );
	deepEqual( Stem("derrotados"), "derrot" );
	deepEqual( Stem("derrotando"), "derrot" );
	deepEqual( Stem("derrotar"), "derrot" );
	deepEqual( Stem("derrotarlo"), "derrot" );
	deepEqual( Stem("derrotaron"), "derrot" );
	deepEqual( Stem("derrotas"), "derrot" );
	deepEqual( Stem("derrotero"), "derroter" );
	deepEqual( Stem("derrotó"), "derrot" );
	deepEqual( Stem("derrumban"), "derrumb" );
	deepEqual( Stem("derrumbe"), "derrumb" );
	deepEqual( Stem("derrumbes"), "derrumb" );
	deepEqual( Stem("desaceleración"), "desaceler" );
	deepEqual( Stem("desaciertos"), "desaciert" );
	deepEqual( Stem("desacredita"), "desacredit" );
	deepEqual( Stem("desacreditados"), "desacredit" );
	deepEqual( Stem("desactivar"), "desactiv" );
	deepEqual( Stem("desactivaron"), "desactiv" );
	deepEqual( Stem("desacuerdo"), "desacuerd" );
	deepEqual( Stem("desacuerdos"), "desacuerd" );
	deepEqual( Stem("desafiar"), "desafi" );
	deepEqual( Stem("desafíe"), "desafi" );
	deepEqual( Stem("desafinada"), "desafin" );
	deepEqual( Stem("desafío"), "desafi" );
	deepEqual( Stem("desafió"), "desaf" );
	deepEqual( Stem("desafíos"), "desafi" );
	deepEqual( Stem("desaforados"), "desafor" );
	deepEqual( Stem("desafortunadamente"), "desafortun" );
	deepEqual( Stem("desafortunado"), "desafortun" );
	deepEqual( Stem("desafortunados"), "desafortun" );
	deepEqual( Stem("desagradable"), "desagrad" );
	deepEqual( Stem("desagradables"), "desagrad" );
	deepEqual( Stem("desagüe"), "desagü" );
	deepEqual( Stem("desahogar"), "desahog" );
	deepEqual( Stem("desahogo"), "desahog" );
	deepEqual( Stem("desahogos"), "desahog" );
	deepEqual( Stem("desahucio"), "desahuci" );
	deepEqual( Stem("desairado"), "desair" );
	deepEqual( Stem("desaire"), "desair" );
	deepEqual( Stem("desalentado"), "desalent" );
	deepEqual( Stem("desalentadores"), "desalent" );
	deepEqual( Stem("desalentarán"), "desalent" );
	deepEqual( Stem("desalentó"), "desalent" );
	deepEqual( Stem("desaliento"), "desalient" );
	deepEqual( Stem("desalientos"), "desalient" );
	deepEqual( Stem("desalojados"), "desaloj" );
	deepEqual( Stem("desalojar"), "desaloj" );
	deepEqual( Stem("desalojará"), "desaloj" );
	deepEqual( Stem("desalojaran"), "desaloj" );
	deepEqual( Stem("desalojaron"), "desaloj" );
	deepEqual( Stem("desalojo"), "desaloj" );
	deepEqual( Stem("desalojó"), "desaloj" );
	deepEqual( Stem("desalojos"), "desaloj" );
	deepEqual( Stem("desamor"), "desamor" );
	deepEqual( Stem("desamparados"), "desampar" );
	deepEqual( Stem("desangraba"), "desangr" );
	deepEqual( Stem("desangrante"), "desangr" );
	deepEqual( Stem("desanima"), "desanim" );
	deepEqual( Stem("desanimada"), "desanim" );
	deepEqual( Stem("desánimo"), "desanim" );
	deepEqual( Stem("desaparecen"), "desaparec" );
	deepEqual( Stem("desaparecer"), "desaparec" );
	deepEqual( Stem("desaparecerá"), "desaparec" );
	deepEqual( Stem("desaparecerán"), "desaparec" );
	deepEqual( Stem("desaparecidas"), "desaparec" );
	deepEqual( Stem("desaparecido"), "desaparec" );
	deepEqual( Stem("desaparecidos"), "desaparec" );
	deepEqual( Stem("desaparecieron"), "desaparec" );
	deepEqual( Stem("desapareció"), "desaparec" );
	deepEqual( Stem("desaparezca"), "desaparezc" );
	deepEqual( Stem("desaparezcan"), "desaparezc" );
	deepEqual( Stem("desaparición"), "desaparicion" );
	deepEqual( Stem("desapariciones"), "desaparicion" );
	deepEqual( Stem("desapercibida"), "desapercib" );
	deepEqual( Stem("desaprobación"), "desaprob" );
	deepEqual( Stem("desaprovechando"), "desaprovech" );
	deepEqual( Stem("desaprovechar"), "desaprovech" );
	deepEqual( Stem("desaprovechó"), "desaprovech" );
	deepEqual( Stem("desaprueba"), "desaprueb" );
	deepEqual( Stem("desarme"), "des" );
	deepEqual( Stem("desarrolla"), "desarroll" );
	deepEqual( Stem("desarrollada"), "desarroll" );
	deepEqual( Stem("desarrolladas"), "desarroll" );
	deepEqual( Stem("desarrollado"), "desarroll" );
	deepEqual( Stem("desarrolladores"), "desarroll" );
	deepEqual( Stem("desarrollados"), "desarroll" );
	deepEqual( Stem("desarrollamos"), "desarroll" );
	deepEqual( Stem("desarrollan"), "desarroll" );
	deepEqual( Stem("desarrollando"), "desarroll" );
	deepEqual( Stem("desarrollar"), "desarroll" );
	deepEqual( Stem("desarrollará"), "desarroll" );
	deepEqual( Stem("desarrollaría"), "desarroll" );
	deepEqual( Stem("desarrollarnos"), "desarroll" );
	deepEqual( Stem("desarrollaron"), "desarroll" );
	deepEqual( Stem("desarrollarse"), "desarroll" );
	deepEqual( Stem("desarrolle"), "desarroll" );
	deepEqual( Stem("desarrollen"), "desarroll" );
	deepEqual( Stem("desarrollo"), "desarroll" );
	deepEqual( Stem("desarrolló"), "desarroll" );
	deepEqual( Stem("desastres"), "desastr" );
	deepEqual( Stem("desata"), "desat" );
	deepEqual( Stem("desatado"), "desat" );
	deepEqual( Stem("desatan"), "desat" );
	deepEqual( Stem("desatar"), "desat" );
	deepEqual( Stem("desatención"), "desatencion" );
	deepEqual( Stem("desatinos"), "desatin" );
	deepEqual( Stem("desató"), "desat" );
	deepEqual( Stem("desayunar"), "desayun" );
	deepEqual( Stem("desayuno"), "desayun" );
	deepEqual( Stem("desayunos"), "desayun" );
	deepEqual( Stem("desazolvar"), "desazolv" );
	deepEqual( Stem("desbalancean"), "desbalanc" );
	deepEqual( Stem("desbancarlo"), "desbanc" );
	deepEqual( Stem("desbaratado"), "desbarat" );
	deepEqual( Stem("desbordado"), "desbord" );
	deepEqual( Stem("desbordados"), "desbord" );
	deepEqual( Stem("desbordamiento"), "desbord" );
	deepEqual( Stem("desbordando"), "desbord" );
	deepEqual( Stem("desbordará"), "desbord" );
	deepEqual( Stem("desbordes"), "desbord" );
	deepEqual( Stem("desbordó"), "desbord" );
	deepEqual( Stem("desburocratizar"), "desburocratiz" );
	deepEqual( Stem("descabellada"), "descabell" );
	deepEqual( Stem("descabelladas"), "descabell" );
	deepEqual( Stem("descabello"), "descabell" );
	deepEqual( Stem("descalabro"), "descalabr" );
	deepEqual( Stem("descalificada"), "descalific" );
	deepEqual( Stem("descalificado"), "descalific" );
	deepEqual( Stem("descalzos"), "descalz" );
	deepEqual( Stem("descansaban"), "descans" );
	deepEqual( Stem("descansan"), "descans" );
	deepEqual( Stem("descansando"), "descans" );
	deepEqual( Stem("descansar"), "descans" );
	deepEqual( Stem("descansarán"), "descans" );
	deepEqual( Stem("descanso"), "descans" );
	deepEqual( Stem("descansó"), "descans" );
	deepEqual( Stem("descansos"), "descans" );
	deepEqual( Stem("descapitaliza"), "descapitaliz" );
	deepEqual( Stem("descarga"), "descarg" );
	deepEqual( Stem("descargan"), "descarg" );
	deepEqual( Stem("descargar"), "descarg" );
	deepEqual( Stem("descargas"), "descarg" );
	deepEqual( Stem("descargo"), "descarg" );
	deepEqual( Stem("descargue"), "descarg" );
	deepEqual( Stem("descarnado"), "descarn" );
	deepEqual( Stem("descarrilamiento"), "descarril" );
	deepEqual( Stem("descarriló"), "descarril" );
	deepEqual( Stem("descarta"), "descart" );
	deepEqual( Stem("descartaba"), "descart" );
	deepEqual( Stem("descartado"), "descart" );
	deepEqual( Stem("descartan"), "descart" );
	deepEqual( Stem("descartando"), "descart" );
	deepEqual( Stem("descartaron"), "descart" );
	deepEqual( Stem("descartó"), "descart" );
	deepEqual( Stem("descastados"), "descast" );
	deepEqual( Stem("descendencia"), "descendent" );
	deepEqual( Stem("descender"), "descend" );
	deepEqual( Stem("descenderá"), "descend" );
	deepEqual( Stem("descendientes"), "descendient" );
	deepEqual( Stem("descendió"), "descend" );
	deepEqual( Stem("descenso"), "descens" );
	deepEqual( Stem("descensos"), "descens" );
	deepEqual( Stem("descentralización"), "descentraliz" );
	deepEqual( Stem("descentralizarse"), "descentraliz" );
	deepEqual( Stem("desciende"), "desciend" );
	deepEqual( Stem("descienden"), "desciend" );
	deepEqual( Stem("descomponía"), "descompon" );
	deepEqual( Stem("descomposición"), "descomposicion" );
	deepEqual( Stem("descomposturas"), "descompostur" );
	deepEqual( Stem("descompuesto"), "descompuest" );
	deepEqual( Stem("descomunal"), "descomunal" );
	deepEqual( Stem("desconcertado"), "desconcert" );
	deepEqual( Stem("desconcertados"), "desconcert" );
	deepEqual( Stem("desconcertante"), "desconcert" );
	deepEqual( Stem("desconcierta"), "desconciert" );
	deepEqual( Stem("desconcierto"), "desconciert" );
	deepEqual( Stem("desconfianza"), "desconfi" );
	deepEqual( Stem("desconfiara"), "desconfi" );
	deepEqual( Stem("descongelación"), "descongel" );
	deepEqual( Stem("descongelar"), "descongel" );
	deepEqual( Stem("descongestionar"), "descongestion" );
	deepEqual( Stem("desconoce"), "desconoc" );
	deepEqual( Stem("desconocen"), "desconoc" );
	deepEqual( Stem("desconocer"), "desconoc" );
	deepEqual( Stem("desconocerlos"), "desconoc" );
	deepEqual( Stem("desconocía"), "desconoc" );
	deepEqual( Stem("desconocida"), "desconoc" );
	deepEqual( Stem("desconocidas"), "desconoc" );
	deepEqual( Stem("desconocido"), "desconoc" );
	deepEqual( Stem("desconocidos"), "desconoc" );
	deepEqual( Stem("desconocieron"), "desconoc" );
	deepEqual( Stem("desconocimiento"), "desconoc" );
	deepEqual( Stem("desconoció"), "desconoc" );
	deepEqual( Stem("desconozco"), "desconozc" );
	deepEqual( Stem("descontando"), "descont" );
	deepEqual( Stem("descontar"), "descont" );
	deepEqual( Stem("descontentas"), "descontent" );
	deepEqual( Stem("descontento"), "descontent" );
	deepEqual( Stem("descontentos"), "descontent" );
	deepEqual( Stem("descontrol"), "descontrol" );
	deepEqual( Stem("descrédito"), "descredit" );
	deepEqual( Stem("descreído"), "descreid" );
	deepEqual( Stem("describe"), "describ" );
	deepEqual( Stem("describen"), "describ" );
	deepEqual( Stem("describió"), "describ" );
	deepEqual( Stem("describir"), "describ" );
	deepEqual( Stem("descripción"), "descripcion" );
	deepEqual( Stem("descriptores"), "descriptor" );
	deepEqual( Stem("descrita"), "descrit" );
	deepEqual( Stem("descrito"), "descrit" );
	deepEqual( Stem("descritos"), "descrit" );
	deepEqual( Stem("descubierta"), "descubiert" );
	deepEqual( Stem("descubiertas"), "descubiert" );
	deepEqual( Stem("descubierto"), "descubiert" );
	deepEqual( Stem("descubiertos"), "descubiert" );
	deepEqual( Stem("descubran"), "descubr" );
	deepEqual( Stem("descubre"), "descubr" );
	deepEqual( Stem("descubridor"), "descubridor" );
	deepEqual( Stem("descubriendo"), "descubr" );
	deepEqual( Stem("descubrieron"), "descubr" );
	deepEqual( Stem("descubrimiento"), "descubr" );
	deepEqual( Stem("descubrimientos"), "descubr" );
	deepEqual( Stem("descubrió"), "descubr" );
	deepEqual( Stem("descubrir"), "descubr" );
	deepEqual( Stem("descuento"), "descuent" );
	deepEqual( Stem("descuentos"), "descuent" );
	deepEqual( Stem("descuidado"), "descuid" );
	deepEqual( Stem("descuidan"), "descuid" );
	deepEqual( Stem("descuide"), "descuid" );
	deepEqual( Stem("descuido"), "descu" );
	deepEqual( Stem("descuidos"), "descu" );
	deepEqual( Stem("desde"), "desd" );
	deepEqual( Stem("desdecir"), "desdec" );
	deepEqual( Stem("desdeñar"), "desdeñ" );
	deepEqual( Stem("desdeño"), "desdeñ" );
	deepEqual( Stem("desdice"), "desdic" );
	deepEqual( Stem("desdichada"), "desdich" );
	deepEqual( Stem("desdichado"), "desdich" );
	deepEqual( Stem("dése"), "des" );
	deepEqual( Stem("desea"), "dese" );
	deepEqual( Stem("deseaban"), "des" );
	deepEqual( Stem("deseable"), "deseabl" );
	deepEqual( Stem("deseada"), "des" );
	deepEqual( Stem("deseamos"), "des" );
	deepEqual( Stem("desean"), "des" );
	deepEqual( Stem("deseando"), "des" );
	deepEqual( Stem("deseándolo"), "des" );
	deepEqual( Stem("desearle"), "des" );
	deepEqual( Stem("desearon"), "des" );
	deepEqual( Stem("deseas"), "des" );
	deepEqual( Stem("desecha"), "desech" );
	deepEqual( Stem("desechaban"), "desech" );
	deepEqual( Stem("desechar"), "desech" );
	deepEqual( Stem("desecharon"), "desech" );
	deepEqual( Stem("desecho"), "desech" );
	deepEqual( Stem("desechó"), "desech" );
	deepEqual( Stem("desechos"), "desech" );
	deepEqual( Stem("desee"), "dese" );
	deepEqual( Stem("deseen"), "des" );
	deepEqual( Stem("desembarcar"), "desembarc" );
	deepEqual( Stem("desembarque"), "desembarqu" );
	deepEqual( Stem("desembocar"), "desemboc" );
	deepEqual( Stem("desempaña"), "desempañ" );
	deepEqual( Stem("desempate"), "desempat" );
	deepEqual( Stem("desempeña"), "desempeñ" );
	deepEqual( Stem("desempeñado"), "desempeñ" );
	deepEqual( Stem("desempeñan"), "desempeñ" );
	deepEqual( Stem("desempeñando"), "desempeñ" );
	deepEqual( Stem("desempeñar"), "desempeñ" );
	deepEqual( Stem("desempeñarse"), "desempeñ" );
	deepEqual( Stem("desempeño"), "desempeñ" );
	deepEqual( Stem("desempleado"), "desempl" );
	deepEqual( Stem("desempleados"), "desempl" );
	deepEqual( Stem("desempleo"), "desemple" );
	deepEqual( Stem("desencajado"), "desencaj" );
	deepEqual( Stem("desencantados"), "desencant" );
	deepEqual( Stem("desencanto"), "desencant" );
	deepEqual( Stem("desenfreno"), "desenfren" );
	deepEqual( Stem("desengaña"), "desengañ" );
	deepEqual( Stem("desenmascaran"), "desenmasc" );
	deepEqual( Stem("desentendido"), "desentend" );
	deepEqual( Stem("desenterrados"), "desenterr" );
	deepEqual( Stem("desentonado"), "desenton" );
	deepEqual( Stem("desentonados"), "desenton" );
	deepEqual( Stem("desenvolverse"), "desenvolv" );
	deepEqual( Stem("desenvolvimiento"), "desenvolv" );
	deepEqual( Stem("desenvuelve"), "desenvuelv" );
	deepEqual( Stem("deseo"), "dese" );
	deepEqual( Stem("deseos"), "dese" );
	deepEqual( Stem("desequilibrada"), "desequilibr" );
	deepEqual( Stem("desequilibrado"), "desequilibr" );
	deepEqual( Stem("desequilibrio"), "desequilibri" );
	deepEqual( Stem("desequilibrios"), "desequilibri" );
	deepEqual( Stem("deserciones"), "desercion" );
	deepEqual( Stem("desertar"), "desert" );
	deepEqual( Stem("desesperación"), "desesper" );
	deepEqual( Stem("desesperada"), "desesper" );
	deepEqual( Stem("desesperadamente"), "desesper" );
	deepEqual( Stem("desesperados"), "desesper" );
	deepEqual( Stem("desesperan"), "desesper" );
	deepEqual( Stem("desestabilizar"), "desestabiliz" );
	deepEqual( Stem("desestímulos"), "desestimul" );
	deepEqual( Stem("desfasan"), "desfas" );
	deepEqual( Stem("desfavorable"), "desfavor" );
	deepEqual( Stem("desfiguró"), "desfigur" );
	deepEqual( Stem("desfiguros"), "desfigur" );
	deepEqual( Stem("desfilan"), "desfil" );
	deepEqual( Stem("desfile"), "desfil" );
	deepEqual( Stem("desfiles"), "desfil" );
	deepEqual( Stem("desfondaría"), "desfond" );
	deepEqual( Stem("desgañitan"), "desgañit" );
	deepEqual( Stem("desgarra"), "desgarr" );
	deepEqual( Stem("desgarradoramente"), "desgarrador" );
	deepEqual( Stem("desgarradoras"), "desgarr" );
	deepEqual( Stem("desgarre"), "desgarr" );
	deepEqual( Stem("desgarros"), "desgarr" );
	deepEqual( Stem("desgastante"), "desgast" );
	deepEqual( Stem("desgastar"), "desgast" );
	deepEqual( Stem("desgaste"), "desg" );
	deepEqual( Stem("desglosado"), "desgl" );
	deepEqual( Stem("desglosados"), "desgl" );
	deepEqual( Stem("desgracia"), "desgraci" );
	deepEqual( Stem("desgraciadamente"), "desgraci" );
	deepEqual( Stem("desgracias"), "desgraci" );
	deepEqual( Stem("deshacer"), "deshac" );
	deepEqual( Stem("deshacerse"), "deshac" );
	deepEqual( Stem("desharía"), "desh" );
	deepEqual( Stem("deshilachar"), "deshilach" );
	deepEqual( Stem("deshilvanando"), "deshilvan" );
	deepEqual( Stem("deshizo"), "deshiz" );
	deepEqual( Stem("deshonestidad"), "deshonest" );
	deepEqual( Stem("deshonesto"), "deshonest" );
	deepEqual( Stem("deshumanizó"), "deshumaniz" );
	deepEqual( Stem("desierto"), "desiert" );
	deepEqual( Stem("desiertos"), "desiert" );
	deepEqual( Stem("designación"), "design" );
	deepEqual( Stem("designaciones"), "design" );
	deepEqual( Stem("designada"), "design" );
	deepEqual( Stem("designadas"), "design" );
	deepEqual( Stem("designado"), "design" );
	deepEqual( Stem("designador"), "design" );
	deepEqual( Stem("designados"), "design" );
	deepEqual( Stem("designar"), "design" );
	deepEqual( Stem("designe"), "design" );
	deepEqual( Stem("designio"), "designi" );
	deepEqual( Stem("designó"), "design" );
	deepEqual( Stem("desigualdad"), "desiguald" );
	deepEqual( Stem("desigualdades"), "desigualdad" );
	deepEqual( Stem("desincorporación"), "desincorpor" );
	deepEqual( Stem("desincorporó"), "desincorpor" );
	deepEqual( Stem("desindigenización"), "desindigeniz" );
	deepEqual( Stem("desinformación"), "desinform" );
	deepEqual( Stem("desinformados"), "desinform" );
	deepEqual( Stem("desintegración"), "desintegr" );
	deepEqual( Stem("desintegrar"), "desintegr" );
	deepEqual( Stem("desintegrará"), "desintegr" );
	deepEqual( Stem("desintegrarse"), "desintegr" );
	deepEqual( Stem("desinterés"), "desinteres" );
	deepEqual( Stem("desinterviniendo"), "desintervin" );
	deepEqual( Stem("desiste"), "des" );
	deepEqual( Stem("desistieran"), "desist" );
	deepEqual( Stem("desistieron"), "desist" );
	deepEqual( Stem("desistió"), "desist" );
	deepEqual( Stem("desistir"), "desist" );
	deepEqual( Stem("desistirse"), "desist" );
	deepEqual( Stem("deslaves"), "deslav" );
	deepEqual( Stem("desleal"), "desleal" );
	deepEqual( Stem("desleales"), "desleal" );
	deepEqual( Stem("deslices"), "deslic" );
	deepEqual( Stem("desligarme"), "deslig" );
	deepEqual( Stem("deslindar"), "deslind" );
	deepEqual( Stem("deslindarse"), "deslind" );
	deepEqual( Stem("deslinden"), "deslind" );
	deepEqual( Stem("deslizando"), "desliz" );
	deepEqual( Stem("deslizarse"), "desliz" );
	deepEqual( Stem("deslizó"), "desliz" );
	deepEqual( Stem("deslucido"), "desluc" );
	deepEqual( Stem("deslumbra"), "deslumbr" );
	deepEqual( Stem("desmantelamiento"), "desmantel" );
	deepEqual( Stem("desmarque"), "desmarqu" );
	deepEqual( Stem("desmembrada"), "desmembr" );
	deepEqual( Stem("desmembró"), "desmembr" );
	deepEqual( Stem("desmerece"), "desmerec" );
	deepEqual( Stem("desmintió"), "desmint" );
	deepEqual( Stem("desmitificado"), "desmitific" );
	deepEqual( Stem("desmontadas"), "desmont" );
	deepEqual( Stem("desmontarlo"), "desmont" );
	deepEqual( Stem("desmoralizar"), "desmoraliz" );
	deepEqual( Stem("desmoralizarnos"), "desmoraliz" );
	deepEqual( Stem("desmoronando"), "desmoron" );
	deepEqual( Stem("desmotivada"), "desmotiv" );
	deepEqual( Stem("desnaquización"), "desnaquiz" );
	deepEqual( Stem("desnivel"), "desnivel" );
	deepEqual( Stem("desnudarla"), "desnud" );
	deepEqual( Stem("desnudaron"), "desnud" );
	deepEqual( Stem("desnudos"), "desnud" );
	deepEqual( Stem("desnutrición"), "desnutricion" );
	deepEqual( Stem("desobedece"), "desobedec" );
	deepEqual( Stem("desocupación"), "desocup" );
	deepEqual( Stem("desocupar"), "desocup" );
	deepEqual( Stem("desolación"), "desol" );
	deepEqual( Stem("desolador"), "desol" );
	deepEqual( Stem("desorden"), "desord" );
	deepEqual( Stem("desordenado"), "desorden" );
	deepEqual( Stem("desórdenes"), "desorden" );
	deepEqual( Stem("desorganizados"), "desorganiz" );
	deepEqual( Stem("desorienta"), "desorient" );
	deepEqual( Stem("desorientación"), "desorient" );
	deepEqual( Stem("desorientada"), "desorient" );
	deepEqual( Stem("desorientados"), "desorient" );
	deepEqual( Stem("despachar"), "despach" );
	deepEqual( Stem("despacho"), "despach" );
	deepEqual( Stem("despacio"), "despaci" );
	deepEqual( Stem("despacito"), "despacit" );
	deepEqual( Stem("desparramaron"), "desparram" );
	deepEqual( Stem("despavorido"), "despavor" );
	deepEqual( Stem("despedazadas"), "despedaz" );
	deepEqual( Stem("despedía"), "desped" );
	deepEqual( Stem("despedida"), "desped" );
	deepEqual( Stem("despedidas"), "desped" );
	deepEqual( Stem("despedido"), "desped" );
	deepEqual( Stem("despedidos"), "desped" );
	deepEqual( Stem("despedir"), "desped" );
	deepEqual( Stem("despedirlas"), "desped" );
	deepEqual( Stem("despedirlos"), "desped" );
	deepEqual( Stem("despedirse"), "desped" );
	deepEqual( Stem("despegara"), "despeg" );
	deepEqual( Stem("despegue"), "despeg" );
	deepEqual( Stem("despeinada"), "despein" );
	deepEqual( Stem("despeinarse"), "despein" );
	deepEqual( Stem("despejando"), "despej" );
	deepEqual( Stem("despejar"), "despej" );
	deepEqual( Stem("despensa"), "despens" );
	deepEqual( Stem("despensas"), "despens" );
	deepEqual( Stem("desperdiciar"), "desperdici" );
	deepEqual( Stem("desperdicio"), "desperdici" );
	deepEqual( Stem("despertado"), "despert" );
	deepEqual( Stem("despertando"), "despert" );
	deepEqual( Stem("despertar"), "despert" );
	deepEqual( Stem("despertaron"), "despert" );
	deepEqual( Stem("despertó"), "despert" );
	deepEqual( Stem("despidan"), "despid" );
	deepEqual( Stem("despide"), "despid" );
	deepEqual( Stem("despidiendo"), "despid" );
	deepEqual( Stem("despidió"), "despid" );
	deepEqual( Stem("despido"), "desp" );
	deepEqual( Stem("despidos"), "desp" );
	deepEqual( Stem("despierta"), "despiert" );
	deepEqual( Stem("despiertan"), "despiert" );
	deepEqual( Stem("despierte"), "despiert" );
	deepEqual( Stem("desplace"), "desplac" );
	deepEqual( Stem("desplazaba"), "desplaz" );
	deepEqual( Stem("desplazado"), "desplaz" );
	deepEqual( Stem("desplazados"), "desplaz" );
	deepEqual( Stem("desplazamiento"), "desplaz" );
	deepEqual( Stem("desplazamientos"), "desplaz" );
	deepEqual( Stem("desplazan"), "desplaz" );
	deepEqual( Stem("desplazando"), "desplaz" );
	deepEqual( Stem("desplazándolo"), "desplaz" );
	deepEqual( Stem("desplazar"), "desplaz" );
	deepEqual( Stem("desplazarla"), "desplaz" );
	deepEqual( Stem("desplegado"), "despleg" );
	deepEqual( Stem("desplegará"), "despleg" );
	deepEqual( Stem("desplegarán"), "despleg" );
	deepEqual( Stem("despliegue"), "desplieg" );
	deepEqual( Stem("desplieguen"), "desplieg" );
	deepEqual( Stem("despoblado"), "despobl" );
	deepEqual( Stem("despojaba"), "despoj" );
	deepEqual( Stem("despojado"), "despoj" );
	deepEqual( Stem("despojando"), "despoj" );
	deepEqual( Stem("despojar"), "despoj" );
	deepEqual( Stem("despojarlo"), "despoj" );
	deepEqual( Stem("despojaron"), "despoj" );
	deepEqual( Stem("despojo"), "despoj" );
	deepEqual( Stem("despojó"), "despoj" );
	deepEqual( Stem("despotismo"), "despot" );
	deepEqual( Stem("despreciable"), "despreci" );
	deepEqual( Stem("despreciar"), "despreci" );
	deepEqual( Stem("despreciarse"), "despreci" );
	deepEqual( Stem("desprende"), "desprend" );
	deepEqual( Stem("desprenderse"), "desprend" );
	deepEqual( Stem("desprendía"), "desprend" );
	deepEqual( Stem("desprendió"), "desprend" );
	deepEqual( Stem("desprestigiando"), "desprestigi" );
	deepEqual( Stem("desprestigio"), "desprestigi" );
	deepEqual( Stem("desproporcionadas"), "desproporcion" );
	deepEqual( Stem("desproporcionado"), "desproporcion" );
	deepEqual( Stem("despropósito"), "desproposit" );
	deepEqual( Stem("desprotegerán"), "desproteg" );
	deepEqual( Stem("desprovisto"), "desprovist" );
	deepEqual( Stem("después"), "despues" );
	deepEqual( Stem("desquita"), "desquit" );
	deepEqual( Stem("desregulación"), "desregul" );
	deepEqual( Stem("desregulado"), "desregul" );
	deepEqual( Stem("desregulando"), "desregul" );
	deepEqual( Stem("desrregulación"), "desrregul" );
	deepEqual( Stem("destaca"), "destac" );
	deepEqual( Stem("destacaba"), "destac" );
	deepEqual( Stem("destacada"), "destac" );
	deepEqual( Stem("destacadas"), "destac" );
	deepEqual( Stem("destacado"), "destac" );
	deepEqual( Stem("destacados"), "destac" );
	deepEqual( Stem("destacamentados"), "destacament" );
	deepEqual( Stem("destacan"), "destac" );
	deepEqual( Stem("destacando"), "destac" );
	deepEqual( Stem("destacar"), "destac" );
	deepEqual( Stem("destacaron"), "destac" );
	deepEqual( Stem("destacó"), "destac" );
	deepEqual( Stem("destanteados"), "destant" );
	deepEqual( Stem("destapan"), "destap" );
	deepEqual( Stem("destaparon"), "destap" );
	deepEqual( Stem("destape"), "destap" );
	deepEqual( Stem("destapes"), "destap" );
	deepEqual( Stem("destaque"), "destaqu" );
	deepEqual( Stem("destemplada"), "destempl" );
	deepEqual( Stem("destemplado"), "destempl" );
	deepEqual( Stem("desterrarlas"), "desterr" );
	deepEqual( Stem("destinaban"), "destin" );
	deepEqual( Stem("destinada"), "destin" );
	deepEqual( Stem("destinadas"), "destin" );
	deepEqual( Stem("destinado"), "destin" );
	deepEqual( Stem("destinados"), "destin" );
	deepEqual( Stem("destinan"), "destin" );
	deepEqual( Stem("destinar"), "destin" );
	deepEqual( Stem("destinarán"), "destin" );
	deepEqual( Stem("destinarían"), "destin" );
	deepEqual( Stem("destinarlos"), "destin" );
	deepEqual( Stem("destinaron"), "destin" );
	deepEqual( Stem("destinatario"), "destinatari" );
	deepEqual( Stem("destinen"), "destin" );
	deepEqual( Stem("destino"), "destin" );
	deepEqual( Stem("destinó"), "destin" );
	deepEqual( Stem("destinos"), "destin" );
	deepEqual( Stem("destitución"), "destitu" );
	deepEqual( Stem("destreza"), "destrez" );
	deepEqual( Stem("destrozado"), "destroz" );
	deepEqual( Stem("destrozados"), "destroz" );
	deepEqual( Stem("destrucción"), "destruccion" );
	deepEqual( Stem("destructivo"), "destruct" );
	deepEqual( Stem("destruida"), "destru" );
	deepEqual( Stem("destruir"), "destru" );
	deepEqual( Stem("destruirá"), "destru" );
	deepEqual( Stem("destruirlo"), "destru" );
	deepEqual( Stem("destruye"), "destru" );
	deepEqual( Stem("destruyeron"), "destru" );
	deepEqual( Stem("destruyó"), "destru" );
	deepEqual( Stem("desulfuración"), "desulfur" );
	deepEqual( Stem("desvanecen"), "desvanec" );
	deepEqual( Stem("desvanecieran"), "desvanec" );
	deepEqual( Stem("desveladas"), "desvel" );
	deepEqual( Stem("desvelos"), "desvel" );
	deepEqual( Stem("desventaja"), "desventaj" );
	deepEqual( Stem("desventajosa"), "desventaj" );
	deepEqual( Stem("desventajosas"), "desventaj" );
	deepEqual( Stem("desviaciones"), "desviacion" );
	deepEqual( Stem("desviadas"), "desvi" );
	deepEqual( Stem("desviado"), "desvi" );
	deepEqual( Stem("desviándose"), "desvi" );
	deepEqual( Stem("desviar"), "desvi" );
	deepEqual( Stem("desviaremos"), "desvi" );
	deepEqual( Stem("desviaría"), "desvi" );
	deepEqual( Stem("desviarse"), "desvi" );
	deepEqual( Stem("desvíe"), "desvi" );
	deepEqual( Stem("desvinculaba"), "desvincul" );
	deepEqual( Stem("desvincular"), "desvincul" );
	deepEqual( Stem("desvió"), "desv" );
	deepEqual( Stem("desvirtúa"), "desvirtu" );
	deepEqual( Stem("desvirtuación"), "desvirtu" );
	deepEqual( Stem("desvirtuar"), "desvirtu" );
	deepEqual( Stem("detalla"), "detall" );
	deepEqual( Stem("detalladamente"), "detall" );
	deepEqual( Stem("detalladas"), "detall" );
	deepEqual( Stem("detallado"), "detall" );
	deepEqual( Stem("detalle"), "detall" );
	deepEqual( Stem("detalles"), "detall" );
	deepEqual( Stem("detallista"), "detall" );
	deepEqual( Stem("detallistas"), "detall" );
	deepEqual( Stem("detallitos"), "detallit" );
	deepEqual( Stem("detalló"), "detall" );
	deepEqual( Stem("detecciones"), "deteccion" );
	deepEqual( Stem("detecnología"), "detecnolog" );
	deepEqual( Stem("detecta"), "detect" );
	deepEqual( Stem("detectaba"), "detect" );
	deepEqual( Stem("detectada"), "detect" );
	deepEqual( Stem("detectado"), "detect" );
	deepEqual( Stem("detectados"), "detect" );
	deepEqual( Stem("detectan"), "detect" );
	deepEqual( Stem("detectando"), "detect" );
	deepEqual( Stem("detectar"), "detect" );
	deepEqual( Stem("detectara"), "detect" );
	deepEqual( Stem("detectaron"), "detect" );
	deepEqual( Stem("detectó"), "detect" );
	deepEqual( Stem("detención"), "detencion" );
	deepEqual( Stem("detenciones"), "detencion" );
	deepEqual( Stem("detendrá"), "detendr" );
	deepEqual( Stem("detener"), "deten" );
	deepEqual( Stem("detenerlo"), "deten" );
	deepEqual( Stem("detenerme"), "deten" );
	deepEqual( Stem("detenerse"), "deten" );
	deepEqual( Stem("detengan"), "deteng" );
	deepEqual( Stem("detenida"), "deten" );
	deepEqual( Stem("detenidas"), "deten" );
	deepEqual( Stem("detenido"), "deten" );
	deepEqual( Stem("detenidos"), "deten" );
	deepEqual( Stem("detenta"), "detent" );
	deepEqual( Stem("detentando"), "detent" );
	deepEqual( Stem("detergente"), "detergent" );
	deepEqual( Stem("detergentes"), "detergent" );
	deepEqual( Stem("deterioradas"), "deterior" );
	deepEqual( Stem("deterioran"), "deterior" );
	deepEqual( Stem("deterioro"), "deterior" );
	deepEqual( Stem("determina"), "determin" );
	deepEqual( Stem("determinación"), "determin" );
	deepEqual( Stem("determinaciones"), "determin" );
	deepEqual( Stem("determinada"), "determin" );
	deepEqual( Stem("determinado"), "determin" );
	deepEqual( Stem("determinados"), "determin" );
	deepEqual( Stem("determinan"), "determin" );
	deepEqual( Stem("determinante"), "determin" );
	deepEqual( Stem("determinantemente"), "determin" );
	deepEqual( Stem("determinantes"), "determin" );
	deepEqual( Stem("determinar"), "determin" );
	deepEqual( Stem("determinará"), "determin" );
	deepEqual( Stem("determinaran"), "determin" );
	deepEqual( Stem("determinaron"), "determin" );
	deepEqual( Stem("determinarse"), "determin" );
	deepEqual( Stem("determine"), "determin" );
	deepEqual( Stem("determinó"), "determin" );
	deepEqual( Stem("deterner"), "detern" );
	deepEqual( Stem("detestan"), "detest" );
	deepEqual( Stem("detiene"), "detien" );
	deepEqual( Stem("detienen"), "detien" );
	deepEqual( Stem("detonación"), "deton" );
	deepEqual( Stem("detrás"), "detras" );
	deepEqual( Stem("detuviera"), "detuv" );
	deepEqual( Stem("detuvieran"), "detuv" );
	deepEqual( Stem("detuvieron"), "detuv" );
	deepEqual( Stem("detuvo"), "detuv" );
	deepEqual( Stem("deuda"), "deud" );
	deepEqual( Stem("deudas"), "deud" );
	deepEqual( Stem("deuteronomio"), "deuteronomi" );
	deepEqual( Stem("devaluación"), "devalu" );
	deepEqual( Stem("devaluado"), "devalu" );
	deepEqual( Stem("devalúan"), "devalu" );
	deepEqual( Stem("devanándose"), "devan" );
	deepEqual( Stem("devant"), "devant" );
	deepEqual( Stem("devastada"), "devast" );
	deepEqual( Stem("devastador"), "devast" );
	deepEqual( Stem("develará"), "devel" );
	deepEqual( Stem("development"), "development" );
	deepEqual( Stem("devenido"), "deven" );
	deepEqual( Stem("devenir"), "deven" );
	deepEqual( Stem("devoción"), "devocion" );
	deepEqual( Stem("devociones"), "devocion" );
	deepEqual( Stem("devolución"), "devolu" );
	deepEqual( Stem("devolver"), "devolv" );
	deepEqual( Stem("devolvería"), "devolv" );
	deepEqual( Stem("devolverle"), "devolv" );
	deepEqual( Stem("devolvió"), "devolv" );
	deepEqual( Stem("devuelto"), "devuelt" );
	deepEqual( Stem("devueltos"), "devuelt" );
	deepEqual( Stem("devuelvan"), "devuelv" );
	deepEqual( Stem("devuelve"), "devuelv" );
	deepEqual( Stem("df"), "df" );
	deepEqual( Stem("dgo"), "dgo" );
	deepEqual( Stem("dhl"), "dhl" );
	deepEqual( Stem("di"), "di" );
	deepEqual( Stem("dí"), "di" );
	deepEqual( Stem("dia"), "dia" );
	deepEqual( Stem("día"), "dia" );
	deepEqual( Stem("diabetes"), "diabet" );
	deepEqual( Stem("diablo"), "diabl" );
	deepEqual( Stem("diablos"), "diabl" );
	deepEqual( Stem("diadema"), "diadem" );
	deepEqual( Stem("diagnosticamos"), "diagnostic" );
	deepEqual( Stem("diagnosticar"), "diagnostic" );
	deepEqual( Stem("diagnóstico"), "diagnost" );
	deepEqual( Stem("diagnósticos"), "diagnost" );
	deepEqual( Stem("diagrama"), "diagram" );
	deepEqual( Stem("dialogado"), "dialog" );
	deepEqual( Stem("dialogamos"), "dialog" );
	deepEqual( Stem("dialogar"), "dialog" );
	deepEqual( Stem("dialogaron"), "dialog" );
	deepEqual( Stem("diálogo"), "dialog" );
	deepEqual( Stem("diálogos"), "dialog" );
	deepEqual( Stem("diamante"), "diamant" );
	deepEqual( Stem("diámetro"), "diametr" );
	deepEqual( Stem("diana"), "dian" );
	deepEqual( Stem("diaria"), "diari" );
	deepEqual( Stem("diariamente"), "diari" );
	deepEqual( Stem("diarias"), "diari" );
	deepEqual( Stem("diario"), "diari" );
	deepEqual( Stem("diarios"), "diari" );
	deepEqual( Stem("días"), "dias" );
	deepEqual( Stem("díaz"), "diaz" );
	deepEqual( Stem("dibujando"), "dibuj" );
	deepEqual( Stem("dibujantes"), "dibuj" );
	deepEqual( Stem("dibujo"), "dibuj" );
	deepEqual( Stem("dibujó"), "dibuj" );
	deepEqual( Stem("dibujos"), "dibuj" );
	deepEqual( Stem("dicamex"), "dicamex" );
	deepEqual( Stem("diccionario"), "diccionari" );
	deepEqual( Stem("dice"), "dic" );
	deepEqual( Stem("dicen"), "dic" );
	deepEqual( Stem("dices"), "dic" );
	deepEqual( Stem("dicha"), "dich" );
	deepEqual( Stem("dichas"), "dich" );
	deepEqual( Stem("dicho"), "dich" );
	deepEqual( Stem("dichos"), "dich" );
	deepEqual( Stem("diciembre"), "diciembr" );
	deepEqual( Stem("diciendo"), "dic" );
	deepEqual( Stem("diciéndome"), "dic" );
	deepEqual( Stem("dickens"), "dickens" );
	deepEqual( Stem("dicom"), "dicom" );
	deepEqual( Stem("dicta"), "dict" );
	deepEqual( Stem("dictada"), "dict" );
	deepEqual( Stem("dictadas"), "dict" );
	deepEqual( Stem("dictado"), "dict" );
	deepEqual( Stem("dictador"), "dictador" );
	deepEqual( Stem("dictadura"), "dictadur" );
	deepEqual( Stem("dictaduras"), "dictadur" );
	deepEqual( Stem("dictamen"), "dictam" );
	deepEqual( Stem("dictaminaron"), "dictamin" );
	deepEqual( Stem("dictaminó"), "dictamin" );
	deepEqual( Stem("dictar"), "dict" );
	deepEqual( Stem("dictarnos"), "dict" );
	deepEqual( Stem("dictaron"), "dict" );
	deepEqual( Stem("dictatorial"), "dictatorial" );
	deepEqual( Stem("dictó"), "dict" );
	deepEqual( Stem("didáctico"), "didact" );
	deepEqual( Stem("diego"), "dieg" );
	deepEqual( Stem("dientes"), "dient" );
	deepEqual( Stem("diera"), "dier" );
	deepEqual( Stem("dieran"), "dier" );
	deepEqual( Stem("dieron"), "dieron" );
	deepEqual( Stem("diesel"), "diesel" );
	deepEqual( Stem("diestro"), "diestr" );
	deepEqual( Stem("dieta"), "diet" );
	deepEqual( Stem("diez"), "diez" );
	deepEqual( Stem("díez"), "diez" );
	deepEqual( Stem("diezmado"), "diezm" );
	deepEqual( Stem("dif"), "dif" );
	deepEqual( Stem("difamación"), "difam" );
	deepEqual( Stem("difamador"), "difam" );
	deepEqual( Stem("difame"), "difam" );
	deepEqual( Stem("diferencia"), "diferent" );
	deepEqual( Stem("diferenciado"), "diferenci" );
	deepEqual( Stem("diferencial"), "diferencial" );
	deepEqual( Stem("diferenciales"), "diferencial" );
	deepEqual( Stem("diferenciando"), "diferenci" );
	deepEqual( Stem("diferenciar"), "diferenci" );
	deepEqual( Stem("diferenciarse"), "diferenci" );
	deepEqual( Stem("diferencias"), "diferent" );
	deepEqual( Stem("diferendos"), "diferend" );
	deepEqual( Stem("diferente"), "diferent" );
	deepEqual( Stem("diferentes"), "diferent" );
	deepEqual( Stem("diferida"), "difer" );
	deepEqual( Stem("diferidos"), "difer" );
	deepEqual( Stem("dificil"), "dificil" );
	deepEqual( Stem("difícil"), "dificil" );
	deepEqual( Stem("difíciles"), "dificil" );
	deepEqual( Stem("dificilmente"), "dificil" );
	deepEqual( Stem("difícilmente"), "dificil" );
	deepEqual( Stem("dificultaba"), "dificult" );
	deepEqual( Stem("dificultad"), "dificult" );
	deepEqual( Stem("dificultades"), "dificultad" );
	deepEqual( Stem("dificultado"), "dificult" );
	deepEqual( Stem("dificultan"), "dificult" );
	deepEqual( Stem("dificultar"), "dificult" );
	deepEqual( Stem("dificultó"), "dificult" );
	deepEqual( Stem("difieren"), "difier" );
	deepEqual( Stem("difunda"), "difund" );
	deepEqual( Stem("difunde"), "difund" );
	deepEqual( Stem("difunden"), "difund" );
	deepEqual( Stem("difundida"), "difund" );
	deepEqual( Stem("difundido"), "difund" );
	deepEqual( Stem("difundir"), "difund" );
	deepEqual( Stem("difundirá"), "difund" );
	deepEqual( Stem("difundirlo"), "difund" );
	deepEqual( Stem("difunto"), "difunt" );
	deepEqual( Stem("difuntos"), "difunt" );
	deepEqual( Stem("difusión"), "difusion" );
	deepEqual( Stem("diga"), "dig" );
	deepEqual( Stem("dígale"), "digal" );
	deepEqual( Stem("dígales"), "digal" );
	deepEqual( Stem("dígame"), "digam" );
	deepEqual( Stem("digamos"), "dig" );
	deepEqual( Stem("digan"), "dig" );
	deepEqual( Stem("digerir"), "diger" );
	deepEqual( Stem("digestión"), "digestion" );
	deepEqual( Stem("digestivos"), "digest" );
	deepEqual( Stem("digital"), "digital" );
	deepEqual( Stem("digitales"), "digital" );
	deepEqual( Stem("digitalización"), "digitaliz" );
	deepEqual( Stem("dígito"), "digit" );
	deepEqual( Stem("digna"), "dign" );
	deepEqual( Stem("dignas"), "dign" );
	deepEqual( Stem("dignidad"), "dignid" );
	deepEqual( Stem("dignifica"), "dignif" );
	deepEqual( Stem("dignificar"), "dignific" );
	deepEqual( Stem("dignity"), "dignity" );
	deepEqual( Stem("digno"), "dign" );
	deepEqual( Stem("dignos"), "dign" );
	deepEqual( Stem("dignosticar"), "dignostic" );
	deepEqual( Stem("digo"), "dig" );
	deepEqual( Stem("dihigo"), "dihig" );
	deepEqual( Stem("dihlgo"), "dihlg" );
	deepEqual( Stem("dije"), "dij" );
	deepEqual( Stem("dijera"), "dijer" );
	deepEqual( Stem("dijeran"), "dijer" );
	deepEqual( Stem("dijeron"), "dijeron" );
	deepEqual( Stem("dijes"), "dij" );
	deepEqual( Stem("dijiste"), "dij" );
	deepEqual( Stem("dijo"), "dij" );
	deepEqual( Stem("dilatadas"), "dilat" );
	deepEqual( Stem("dilatar"), "dilat" );
	deepEqual( Stem("dilatorias"), "dilatori" );
	deepEqual( Stem("díle"), "dil" );
	deepEqual( Stem("dilema"), "dilem" );
	deepEqual( Stem("diligencia"), "diligent" );
	deepEqual( Stem("diligencias"), "diligent" );
	deepEqual( Stem("diligente"), "diligent" );
	deepEqual( Stem("dillo"), "dill" );
	deepEqual( Stem("dilucidar"), "dilucid" );
	deepEqual( Stem("diluido"), "dilu" );
	deepEqual( Stem("diluir"), "dilu" );
	deepEqual( Stem("dimas"), "dim" );
	deepEqual( Stem("dimensión"), "dimension" );
	deepEqual( Stem("dimensiones"), "dimension" );
	deepEqual( Stem("dimino"), "dimin" );
	deepEqual( Stem("diminutas"), "diminut" );
	deepEqual( Stem("diminutos"), "diminut" );
	deepEqual( Stem("dimisión"), "dimision" );
	deepEqual( Stem("dimitir"), "dimit" );
	deepEqual( Stem("dimitri"), "dimitri" );
	deepEqual( Stem("dimos"), "dim" );
	deepEqual( Stem("dina"), "din" );
	deepEqual( Stem("dinamarca"), "dinamarc" );
	deepEqual( Stem("dinámica"), "dinam" );
	deepEqual( Stem("dinámicas"), "dinam" );
	deepEqual( Stem("dinámico"), "dinam" );
	deepEqual( Stem("dinámicos"), "dinam" );
	deepEqual( Stem("dinamismo"), "dinam" );
	deepEqual( Stem("dinamiteros"), "dinamiter" );
	deepEqual( Stem("dinastía"), "dinast" );
	deepEqual( Stem("dinero"), "diner" );
	deepEqual( Stem("dineros"), "diner" );
	deepEqual( Stem("dinorah"), "dinorah" );
	deepEqual( Stem("dinosaurios"), "dinosauri" );
	deepEqual( Stem("dio"), "dio" );
	deepEqual( Stem("diócesis"), "diocesis" );
	deepEqual( Stem("dior"), "dior" );
	deepEqual( Stem("diorita"), "diorit" );
	deepEqual( Stem("dios"), "dios" );
	deepEqual( Stem("diosa"), "dios" );
	deepEqual( Stem("dioses"), "dios" );
	deepEqual( Stem("dióxido"), "diox" );
	deepEqual( Stem("diplomacia"), "diplomaci" );
	deepEqual( Stem("diplomado"), "diplom" );
	deepEqual( Stem("diplomados"), "diplom" );
	deepEqual( Stem("diplomática"), "diplomat" );
	deepEqual( Stem("diplomáticas"), "diplomat" );
	deepEqual( Stem("diplomático"), "diplomat" );
	deepEqual( Stem("diplomáticos"), "diplomat" );
	deepEqual( Stem("diputa"), "diput" );
	deepEqual( Stem("diputación"), "diput" );
	deepEqual( Stem("diputaciones"), "diput" );
	deepEqual( Stem("diputada"), "diput" );
	deepEqual( Stem("diputado"), "diput" );
	deepEqual( Stem("diputados"), "diput" );
	deepEqual( Stem("dirá"), "dir" );
	deepEqual( Stem("dirán"), "diran" );
	deepEqual( Stem("diré"), "dir" );
	deepEqual( Stem("dirección"), "direccion" );
	deepEqual( Stem("direccionales"), "direccional" );
	deepEqual( Stem("direcciones"), "direccion" );
	deepEqual( Stem("direct"), "direct" );
	deepEqual( Stem("directa"), "direct" );
	deepEqual( Stem("directamente"), "direct" );
	deepEqual( Stem("directas"), "direct" );
	deepEqual( Stem("directiva"), "direct" );
	deepEqual( Stem("directivas"), "direct" );
	deepEqual( Stem("directivo"), "direct" );
	deepEqual( Stem("directivos"), "direct" );
	deepEqual( Stem("directo"), "direct" );
	deepEqual( Stem("director"), "director" );
	deepEqual( Stem("directora"), "director" );
	deepEqual( Stem("directores"), "director" );
	deepEqual( Stem("directorio"), "directori" );
	deepEqual( Stem("directorios"), "directori" );
	deepEqual( Stem("directos"), "direct" );
	deepEqual( Stem("diría"), "dir" );
	deepEqual( Stem("dirige"), "dirig" );
	deepEqual( Stem("dirigencia"), "dirigent" );
	deepEqual( Stem("dirigente"), "dirigent" );
	deepEqual( Stem("dirigentes"), "dirigent" );
	deepEqual( Stem("dirigía"), "dirig" );
	deepEqual( Stem("dirigían"), "dirig" );
	deepEqual( Stem("dirigible"), "dirig" );
	deepEqual( Stem("dirigida"), "dirig" );
	deepEqual( Stem("dirigidas"), "dirig" );
	deepEqual( Stem("dirigido"), "dirig" );
	deepEqual( Stem("dirigidos"), "dirig" );
	deepEqual( Stem("dirigiendo"), "dirig" );
	deepEqual( Stem("dirigieron"), "dirig" );
	deepEqual( Stem("dirigió"), "dirig" );
	deepEqual( Stem("dirigir"), "dirig" );
	deepEqual( Stem("dirigirá"), "dirig" );
	deepEqual( Stem("dirigirla"), "dirig" );
	deepEqual( Stem("dirigirme"), "dirig" );
	deepEqual( Stem("dirigirse"), "dirig" );
	deepEqual( Stem("dirija"), "dirij" );
	deepEqual( Stem("dirimir"), "dirim" );
	deepEqual( Stem("disc"), "disc" );
	deepEqual( Stem("discapacidad"), "discapac" );
	deepEqual( Stem("discapacidades"), "discapac" );
	deepEqual( Stem("discapacitada"), "discapacit" );
	deepEqual( Stem("discapacitadas"), "discapacit" );
	deepEqual( Stem("discapacitado"), "discapacit" );
	deepEqual( Stem("discapacitados"), "discapacit" );
	deepEqual( Stem("disciplina"), "disciplin" );
	deepEqual( Stem("disciplinada"), "disciplin" );
	deepEqual( Stem("disciplinadas"), "disciplin" );
	deepEqual( Stem("disciplinaria"), "disciplinari" );
	deepEqual( Stem("disciplinario"), "disciplinari" );
	deepEqual( Stem("disciplinas"), "disciplin" );
	deepEqual( Stem("discípulos"), "discipul" );
	deepEqual( Stem("disco"), "disc" );
	deepEqual( Stem("discografía"), "discograf" );
	deepEqual( Stem("discográfico"), "discograf" );
	deepEqual( Stem("discos"), "disc" );
	deepEqual( Stem("discoteca"), "discotec" );
	deepEqual( Stem("discotecas"), "discotec" );
	deepEqual( Stem("discrepancia"), "discrep" );
	deepEqual( Stem("discreto"), "discret" );
	deepEqual( Stem("discretos"), "discret" );
	deepEqual( Stem("discriminación"), "discrimin" );
	deepEqual( Stem("discs"), "discs" );
	deepEqual( Stem("disculpa"), "disculp" );
	deepEqual( Stem("disculpaba"), "disculp" );
	deepEqual( Stem("disculpe"), "disculp" );
	deepEqual( Stem("discurso"), "discurs" );
	deepEqual( Stem("discursos"), "discurs" );
	deepEqual( Stem("discusión"), "discusion" );
	deepEqual( Stem("discusiones"), "discusion" );
	deepEqual( Stem("discuta"), "discut" );
	deepEqual( Stem("discutían"), "discut" );
	deepEqual( Stem("discutido"), "discut" );
	deepEqual( Stem("discutieron"), "discut" );
	deepEqual( Stem("discutió"), "discut" );
	deepEqual( Stem("discutir"), "discut" );
	deepEqual( Stem("discutirse"), "discut" );
	deepEqual( Stem("diseña"), "diseñ" );
	deepEqual( Stem("diseñada"), "diseñ" );
	deepEqual( Stem("diseñadas"), "diseñ" );
	deepEqual( Stem("diseñado"), "diseñ" );
	deepEqual( Stem("diseñador"), "diseñ" );
	deepEqual( Stem("diseñadores"), "diseñ" );
	deepEqual( Stem("diseñados"), "diseñ" );
	deepEqual( Stem("diseñan"), "diseñ" );
	deepEqual( Stem("diseñando"), "diseñ" );
	deepEqual( Stem("diseñar"), "diseñ" );
	deepEqual( Stem("diseñaron"), "diseñ" );
	deepEqual( Stem("diseñe"), "diseñ" );
	deepEqual( Stem("diseño"), "diseñ" );
	deepEqual( Stem("diseñó"), "diseñ" );
	deepEqual( Stem("diseños"), "diseñ" );
	deepEqual( Stem("disertará"), "disert" );
	deepEqual( Stem("disfrace"), "disfrac" );
	deepEqual( Stem("disfraces"), "disfrac" );
	deepEqual( Stem("disfrazada"), "disfraz" );
	deepEqual( Stem("disfrazados"), "disfraz" );
	deepEqual( Stem("disfrazar"), "disfraz" );
	deepEqual( Stem("disfrazaron"), "disfraz" );
	deepEqual( Stem("disfrazarse"), "disfraz" );
	deepEqual( Stem("disfruta"), "disfrut" );
	deepEqual( Stem("disfrutando"), "disfrut" );
	deepEqual( Stem("disfrutar"), "disfrut" );
	deepEqual( Stem("disfrutará"), "disfrut" );
	deepEqual( Stem("disfrutaron"), "disfrut" );
	deepEqual( Stem("disfrutarse"), "disfrut" );
	deepEqual( Stem("disfrute"), "disfrut" );
	deepEqual( Stem("disfrutó"), "disfrut" );
	deepEqual( Stem("disgregulación"), "disgregul" );
	deepEqual( Stem("disgusta"), "disgust" );
	deepEqual( Stem("disgustado"), "disgust" );
	deepEqual( Stem("disgustarle"), "disgust" );
	deepEqual( Stem("disgusto"), "disgust" );
	deepEqual( Stem("disidente"), "disident" );
	deepEqual( Stem("disidentes"), "disident" );
	deepEqual( Stem("disimular"), "disimul" );
	deepEqual( Stem("disipar"), "disip" );
	deepEqual( Stem("disipó"), "disip" );
	deepEqual( Stem("diskete"), "disket" );
	deepEqual( Stem("diskette"), "diskett" );
	deepEqual( Stem("diskettes"), "diskett" );
	deepEqual( Stem("disléxico"), "dislex" );
	deepEqual( Stem("disminución"), "disminu" );
	deepEqual( Stem("disminuidas"), "disminu" );
	deepEqual( Stem("disminuido"), "disminu" );
	deepEqual( Stem("disminuir"), "disminu" );
	deepEqual( Stem("disminuiría"), "disminu" );
	deepEqual( Stem("disminuye"), "disminu" );
	deepEqual( Stem("disminuyendo"), "disminu" );
	deepEqual( Stem("disminuyó"), "disminu" );
	deepEqual( Stem("disney"), "disney" );
	deepEqual( Stem("disolvió"), "disolv" );
	deepEqual( Stem("disparaba"), "dispar" );
	deepEqual( Stem("disparado"), "dispar" );
	deepEqual( Stem("disparan"), "disp" );
	deepEqual( Stem("disparando"), "dispar" );
	deepEqual( Stem("disparar"), "dispar" );
	deepEqual( Stem("dispararon"), "dispar" );
	deepEqual( Stem("dispararse"), "dispar" );
	deepEqual( Stem("disparate"), "disparat" );
	deepEqual( Stem("disparates"), "disparat" );
	deepEqual( Stem("disparo"), "dispar" );
	deepEqual( Stem("disparó"), "dispar" );
	deepEqual( Stem("disparos"), "dispar" );
	deepEqual( Stem("dispendio"), "dispendi" );
	deepEqual( Stem("dispendiosa"), "dispendi" );
	deepEqual( Stem("dispensa"), "dispens" );
	deepEqual( Stem("dispersan"), "dispers" );
	deepEqual( Stem("dispersión"), "dispersion" );
	deepEqual( Stem("disperso"), "dispers" );
	deepEqual( Stem("dispersó"), "dispers" );
	deepEqual( Stem("dispersos"), "dispers" );
	deepEqual( Stem("displays"), "displays" );
	deepEqual( Stem("displicencia"), "displicent" );
	deepEqual( Stem("dispone"), "dispon" );
	deepEqual( Stem("disponen"), "dispon" );
	deepEqual( Stem("disponga"), "dispong" );
	deepEqual( Stem("dispóngase"), "dispong" );
	deepEqual( Stem("dispongo"), "dispong" );
	deepEqual( Stem("disponía"), "dispon" );
	deepEqual( Stem("disponibilidad"), "disponibil" );
	deepEqual( Stem("disponible"), "dispon" );
	deepEqual( Stem("disponibles"), "dispon" );
	deepEqual( Stem("disposición"), "disposicion" );
	deepEqual( Stem("disposiciones"), "disposicion" );
	deepEqual( Stem("dispositivo"), "disposit" );
	deepEqual( Stem("dispositivos"), "disposit" );
	deepEqual( Stem("dispuesta"), "dispuest" );
	deepEqual( Stem("dispuesto"), "dispuest" );
	deepEqual( Stem("dispuestos"), "dispuest" );
	deepEqual( Stem("dispusieron"), "dispus" );
	deepEqual( Stem("dispuso"), "dispus" );
	deepEqual( Stem("disputa"), "disput" );
	deepEqual( Stem("disputadas"), "disput" );
	deepEqual( Stem("disputado"), "disput" );
	deepEqual( Stem("disputar"), "disput" );
	deepEqual( Stem("disputará"), "disput" );
	deepEqual( Stem("disputarán"), "disput" );
	deepEqual( Stem("disputarían"), "disput" );
	deepEqual( Stem("disputaron"), "disput" );
	deepEqual( Stem("disputas"), "disput" );
	deepEqual( Stem("disputó"), "disput" );
	deepEqual( Stem("disquera"), "disquer" );
	deepEqual( Stem("disqueras"), "disquer" );
	deepEqual( Stem("distancia"), "distanci" );
	deepEqual( Stem("distancias"), "distanci" );
	deepEqual( Stem("distensión"), "distension" );
	deepEqual( Stem("distinción"), "distincion" );
	deepEqual( Stem("distinciones"), "distincion" );
	deepEqual( Stem("distingos"), "disting" );
	deepEqual( Stem("distinguen"), "disting" );
	deepEqual( Stem("distinguida"), "distingu" );
	deepEqual( Stem("distinguidas"), "distingu" );
	deepEqual( Stem("distinguido"), "distingu" );
	deepEqual( Stem("distinguidos"), "distingu" );
	deepEqual( Stem("distinguimos"), "distingu" );
	deepEqual( Stem("distinguir"), "distingu" );
	deepEqual( Stem("distinta"), "distint" );
	deepEqual( Stem("distintas"), "distint" );
	deepEqual( Stem("distintivo"), "distint" );
	deepEqual( Stem("distinto"), "distint" );
	deepEqual( Stem("distintos"), "distint" );
	deepEqual( Stem("distorsione"), "distorsion" );
	deepEqual( Stem("distorsiones"), "distorsion" );
	deepEqual( Stem("distraen"), "distr" );
	deepEqual( Stem("distraer"), "distr" );
	deepEqual( Stem("distraída"), "distraid" );
	deepEqual( Stem("distrajo"), "distraj" );
	deepEqual( Stem("distribución"), "distribu" );
	deepEqual( Stem("distribuía"), "distribu" );
	deepEqual( Stem("distribuidas"), "distribu" );
	deepEqual( Stem("distribuido"), "distribu" );
	deepEqual( Stem("distribuidor"), "distribuidor" );
	deepEqual( Stem("distribuidora"), "distribuidor" );
	deepEqual( Stem("distribuidoras"), "distribuidor" );
	deepEqual( Stem("distribuidores"), "distribuidor" );
	deepEqual( Stem("distribuidos"), "distribu" );
	deepEqual( Stem("distribuimos"), "distribu" );
	deepEqual( Stem("distribuir"), "distribu" );
	deepEqual( Stem("distribuirán"), "distribu" );
	deepEqual( Stem("distribuirla"), "distribu" );
	deepEqual( Stem("distribuirse"), "distribu" );
	deepEqual( Stem("distribution"), "distribution" );
	deepEqual( Stem("distribuya"), "distribu" );
	deepEqual( Stem("distribuye"), "distribu" );
	deepEqual( Stem("distribuyen"), "distribu" );
	deepEqual( Stem("distribuyendo"), "distribu" );
	deepEqual( Stem("distribuyó"), "distribu" );
	deepEqual( Stem("distritales"), "distrital" );
	deepEqual( Stem("distrito"), "distrit" );
	deepEqual( Stem("distritos"), "distrit" );
	deepEqual( Stem("distrofia"), "distrofi" );
	deepEqual( Stem("disturbios"), "disturbi" );
	deepEqual( Stem("disyuntiva"), "disyunt" );
	deepEqual( Stem("dit"), "dit" );
	deepEqual( Stem("diva"), "div" );
	deepEqual( Stem("diván"), "divan" );
	deepEqual( Stem("divergencias"), "divergent" );
	deepEqual( Stem("diversa"), "divers" );
	deepEqual( Stem("diversas"), "divers" );
	deepEqual( Stem("diversidad"), "divers" );
	deepEqual( Stem("diversificación"), "diversif" );
	deepEqual( Stem("diversificándose"), "diversific" );
	deepEqual( Stem("diversificó"), "diversific" );
	deepEqual( Stem("diversión"), "diversion" );
	deepEqual( Stem("diverso"), "divers" );
	deepEqual( Stem("diversos"), "divers" );
	deepEqual( Stem("divertía"), "divert" );
	deepEqual( Stem("divertida"), "divert" );
	deepEqual( Stem("divertidas"), "divert" );
	deepEqual( Stem("divertido"), "divert" );
	deepEqual( Stem("divertir"), "divert" );
	deepEqual( Stem("divertirnos"), "divert" );
	deepEqual( Stem("divertirse"), "divert" );
	deepEqual( Stem("divide"), "divid" );
	deepEqual( Stem("dividendos"), "dividend" );
	deepEqual( Stem("dividido"), "divid" );
	deepEqual( Stem("divididos"), "divid" );
	deepEqual( Stem("dividiéndose"), "divid" );
	deepEqual( Stem("dividió"), "divid" );
	deepEqual( Stem("dividir"), "divid" );
	deepEqual( Stem("dividirnos"), "divid" );
	deepEqual( Stem("divina"), "divin" );
	deepEqual( Stem("divinas"), "divin" );
	deepEqual( Stem("divino"), "divin" );
	deepEqual( Stem("divirtieran"), "divirt" );
	deepEqual( Stem("divisas"), "divis" );
	deepEqual( Stem("división"), "division" );
	deepEqual( Stem("divisional"), "divisional" );
	deepEqual( Stem("divisiones"), "division" );
	deepEqual( Stem("divisoria"), "divisori" );
	deepEqual( Stem("divorciado"), "divorci" );
	deepEqual( Stem("divorciarme"), "divorci" );
	deepEqual( Stem("divorcio"), "divorci" );
	deepEqual( Stem("divorció"), "divorc" );
	deepEqual( Stem("divorcios"), "divorci" );
	deepEqual( Stem("divulgar"), "divulg" );
	deepEqual( Stem("diz"), "diz" );
	deepEqual( Stem("dizque"), "dizqu" );
	deepEqual( Stem("dizzie"), "dizzi" );
	deepEqual( Stem("dls"), "dls" );
	deepEqual( Stem("dnx"), "dnx" );
	deepEqual( Stem("dobla"), "dobl" );
	deepEqual( Stem("doblaje"), "doblaj" );
	deepEqual( Stem("doblajes"), "doblaj" );
	deepEqual( Stem("doblar"), "dobl" );
	deepEqual( Stem("doble"), "dobl" );
	deepEqual( Stem("doblegado"), "dobleg" );
	deepEqual( Stem("doblegamiento"), "dobleg" );
	deepEqual( Stem("doblegando"), "dobleg" );
	deepEqual( Stem("doblegar"), "dobleg" );
	deepEqual( Stem("doblemente"), "doblement" );
	deepEqual( Stem("dobles"), "dobl" );
	deepEqual( Stem("doblinger"), "dobling" );
	deepEqual( Stem("doblista"), "doblist" );
	deepEqual( Stem("doblistas"), "doblist" );
	deepEqual( Stem("dobson"), "dobson" );
	deepEqual( Stem("doce"), "doc" );
	deepEqual( Stem("docena"), "docen" );
	deepEqual( Stem("docenas"), "docen" );
	deepEqual( Stem("docencia"), "docenci" );
	deepEqual( Stem("docente"), "docent" );
	deepEqual( Stem("docentes"), "docent" );
	deepEqual( Stem("dócil"), "docil" );
	deepEqual( Stem("dock"), "dock" );
	deepEqual( Stem("docta"), "doct" );
	deepEqual( Stem("doctor"), "doctor" );
	deepEqual( Stem("doctora"), "doctor" );
	deepEqual( Stem("doctorados"), "doctor" );
	deepEqual( Stem("doctoral"), "doctoral" );
	deepEqual( Stem("doctores"), "doctor" );
	deepEqual( Stem("doctoró"), "doctor" );
	deepEqual( Stem("doctrina"), "doctrin" );
	deepEqual( Stem("doctrinario"), "doctrinari" );
	deepEqual( Stem("doctrinas"), "doctrin" );
	deepEqual( Stem("documentación"), "document" );
	deepEqual( Stem("documentada"), "document" );
	deepEqual( Stem("documentadas"), "document" );
	deepEqual( Stem("documental"), "documental" );
	deepEqual( Stem("documentales"), "documental" );
	deepEqual( Stem("documenté"), "document" );
	deepEqual( Stem("documento"), "document" );
	deepEqual( Stem("documentos"), "document" );
	deepEqual( Stem("dodgers"), "dodgers" );
	deepEqual( Stem("dog"), "dog" );
	deepEqual( Stem("doger"), "dog" );
	deepEqual( Stem("dogs"), "dogs" );
	deepEqual( Stem("dólar"), "dol" );
	deepEqual( Stem("dolares"), "dolar" );
	deepEqual( Stem("dólares"), "dolar" );
	deepEqual( Stem("dolce"), "dolc" );
	deepEqual( Stem("doliéndose"), "dol" );
	deepEqual( Stem("dolo"), "dol" );
	deepEqual( Stem("dolor"), "dolor" );
	deepEqual( Stem("dolores"), "dolor" );
	deepEqual( Stem("dolorido"), "dolor" );
	deepEqual( Stem("dolorosa"), "dolor" );
	deepEqual( Stem("dolosa"), "dolos" );
	deepEqual( Stem("doman"), "dom" );
	deepEqual( Stem("domar"), "dom" );
	deepEqual( Stem("domene"), "domen" );
	deepEqual( Stem("doméstica"), "domest" );
	deepEqual( Stem("domesticados"), "domestic" );
	deepEqual( Stem("domesticaron"), "domestic" );
	deepEqual( Stem("domésticas"), "domest" );
	deepEqual( Stem("doméstico"), "domest" );
	deepEqual( Stem("domésticos"), "domest" );
	deepEqual( Stem("domiciliado"), "domicili" );
	deepEqual( Stem("domiciliaria"), "domiciliari" );
	deepEqual( Stem("domiciliarias"), "domiciliari" );
	deepEqual( Stem("domicilio"), "domicili" );
	deepEqual( Stem("domicilios"), "domicili" );
	deepEqual( Stem("domina"), "domin" );
	deepEqual( Stem("dominada"), "domin" );
	deepEqual( Stem("dominado"), "domin" );
	deepEqual( Stem("dominador"), "domin" );
	deepEqual( Stem("dominan"), "domin" );
	deepEqual( Stem("dominando"), "domin" );
	deepEqual( Stem("dominantes"), "domin" );
	deepEqual( Stem("dominar"), "domin" );
	deepEqual( Stem("dominarlo"), "domin" );
	deepEqual( Stem("dominen"), "domin" );
	deepEqual( Stem("domingo"), "doming" );
	deepEqual( Stem("domingos"), "doming" );
	deepEqual( Stem("domínguez"), "dominguez" );
	deepEqual( Stem("dominical"), "dominical" );
	deepEqual( Stem("dominicana"), "dominican" );
	deepEqual( Stem("dominicano"), "dominican" );
	deepEqual( Stem("dominicanos"), "dominican" );
	deepEqual( Stem("dominio"), "domini" );
	deepEqual( Stem("dominó"), "domin" );
	deepEqual( Stem("domizzi"), "domizzi" );
	deepEqual( Stem("don"), "don" );
	deepEqual( Stem("dona"), "don" );
	deepEqual( Stem("doña"), "doñ" );
	deepEqual( Stem("donadas"), "don" );
	deepEqual( Stem("donado"), "don" );
	deepEqual( Stem("donados"), "don" );
	deepEqual( Stem("donald"), "donald" );
	deepEqual( Stem("donaldo"), "donald" );
	deepEqual( Stem("donan"), "don" );
	deepEqual( Stem("donantes"), "donant" );
	deepEqual( Stem("donar"), "don" );
	deepEqual( Stem("donará"), "don" );
	deepEqual( Stem("donas"), "don" );
	deepEqual( Stem("donativo"), "donat" );
	deepEqual( Stem("donativos"), "donat" );
	deepEqual( Stem("doncella"), "doncell" );
	deepEqual( Stem("donde"), "dond" );
	deepEqual( Stem("dónde"), "dond" );
	deepEqual( Stem("dones"), "don" );
	deepEqual( Stem("donna"), "donn" );
	deepEqual( Stem("donó"), "don" );
	deepEqual( Stem("doors"), "doors" );
	deepEqual( Stem("doquier"), "doqui" );
	deepEqual( Stem("dora"), "dor" );
	deepEqual( Stem("dorada"), "dor" );
	deepEqual( Stem("doradas"), "dor" );
	deepEqual( Stem("dorado"), "dor" );
	deepEqual( Stem("dorados"), "dor" );
	deepEqual( Stem("dorar"), "dor" );
	deepEqual( Stem("doria"), "dori" );
	deepEqual( Stem("doris"), "doris" );
	deepEqual( Stem("dormí"), "dorm" );
	deepEqual( Stem("dormía"), "dorm" );
	deepEqual( Stem("dormir"), "dorm" );
	deepEqual( Stem("dormirán"), "dorm" );
	deepEqual( Stem("dormirme"), "dorm" );
	deepEqual( Stem("dormitó"), "dormit" );
	deepEqual( Stem("dorsal"), "dorsal" );
	deepEqual( Stem("dorsets"), "dorsets" );
	deepEqual( Stem("dorsey"), "dorsey" );
	deepEqual( Stem("dos"), "dos" );
	deepEqual( Stem("dosamantes"), "dosam" );
	deepEqual( Stem("doscientas"), "doscient" );
	deepEqual( Stem("dosis"), "dosis" );
	deepEqual( Stem("dotación"), "dotacion" );
	deepEqual( Stem("dotadas"), "dot" );
	deepEqual( Stem("dotar"), "dot" );
	deepEqual( Stem("dotes"), "dot" );
	deepEqual( Stem("dow"), "dow" );
	deepEqual( Stem("down"), "down" );
	deepEqual( Stem("doy"), "doy" );
	deepEqual( Stem("dr"), "dr" );
	deepEqual( Stem("dra"), "dra" );
	deepEqual( Stem("drácula"), "dracul" );
	deepEqual( Stem("drag"), "drag" );
	deepEqual( Stem("dragón"), "dragon" );
	deepEqual( Stem("dragster"), "dragst" );
	deepEqual( Stem("drake"), "drak" );
	deepEqual( Stem("drama"), "dram" );
	deepEqual( Stem("dramas"), "dram" );
	deepEqual( Stem("dramática"), "dramat" );
	deepEqual( Stem("dramáticamente"), "dramat" );
	deepEqual( Stem("dramático"), "dramat" );
	deepEqual( Stem("dramáticos"), "dramat" );
	deepEqual( Stem("dramatismo"), "dramat" );
	deepEqual( Stem("dramaturgia"), "dramaturgi" );
	deepEqual( Stem("drástica"), "drastic" );
	deepEqual( Stem("drásticamente"), "drastic" );
	deepEqual( Stem("drásticas"), "drastic" );
	deepEqual( Stem("drásticos"), "drastic" );
	deepEqual( Stem("drenaje"), "drenaj" );
	deepEqual( Stem("drew"), "drew" );
	deepEqual( Stem("droga"), "drog" );
	deepEqual( Stem("drogadicción"), "drogadiccion" );
	deepEqual( Stem("drogadicto"), "drogadict" );
	deepEqual( Stem("drogadictos"), "drogadict" );
	deepEqual( Stem("drogado"), "drog" );
	deepEqual( Stem("drogan"), "drog" );
	deepEqual( Stem("drogarse"), "drog" );
	deepEqual( Stem("drogas"), "drog" );
	deepEqual( Stem("du"), "du" );
	deepEqual( Stem("dual"), "dual" );
	deepEqual( Stem("duarte"), "duart" );
	deepEqual( Stem("ducharme"), "duch" );
	deepEqual( Stem("ductilidad"), "ductil" );
	deepEqual( Stem("duda"), "dud" );
	deepEqual( Stem("dudaba"), "dud" );
	deepEqual( Stem("dudaban"), "dud" );
	deepEqual( Stem("dudamos"), "dud" );
	deepEqual( Stem("dudas"), "dud" );
	deepEqual( Stem("dudo"), "dud" );
	deepEqual( Stem("dudosos"), "dudos" );
	deepEqual( Stem("duela"), "duel" );
	deepEqual( Stem("duele"), "duel" );
	deepEqual( Stem("duelen"), "duel" );
	deepEqual( Stem("duelo"), "duel" );
	deepEqual( Stem("dueña"), "dueñ" );
	deepEqual( Stem("dueño"), "dueñ" );
	deepEqual( Stem("dueños"), "dueñ" );
	deepEqual( Stem("duke"), "duk" );
	deepEqual( Stem("dulce"), "dulc" );
	deepEqual( Stem("dulces"), "dulc" );
	deepEqual( Stem("dulles"), "dull" );
	deepEqual( Stem("dulzura"), "dulzur" );
	deepEqual( Stem("dumping"), "dumping" );
	deepEqual( Stem("dune"), "dun" );
	deepEqual( Stem("dunkin"), "dunkin" );
	deepEqual( Stem("duo"), "duo" );
	deepEqual( Stem("dúo"), "duo" );
	deepEqual( Stem("dupla"), "dupl" );
	deepEqual( Stem("duplicación"), "duplic" );
	deepEqual( Stem("duplicado"), "duplic" );
	deepEqual( Stem("duplicados"), "duplic" );
	deepEqual( Stem("duplicar"), "duplic" );
	deepEqual( Stem("duplicará"), "duplic" );
	deepEqual( Stem("duplicidad"), "duplic" );
	deepEqual( Stem("duplicidades"), "duplic" );
	deepEqual( Stem("duplicó"), "duplic" );
	deepEqual( Stem("dupont"), "dupont" );
	deepEqual( Stem("duque"), "duqu" );
	deepEqual( Stem("duques"), "duqu" );
	deepEqual( Stem("duquesa"), "duques" );
	deepEqual( Stem("dura"), "dur" );
	deepEqual( Stem("duraban"), "dur" );
	deepEqual( Stem("durabilidad"), "durabil" );
	deepEqual( Stem("duración"), "duracion" );
	deepEqual( Stem("duradero"), "durader" );
	deepEqual( Stem("duramente"), "dur" );
	deepEqual( Stem("duran"), "dur" );
	deepEqual( Stem("durán"), "duran" );
	deepEqual( Stem("durango"), "durang" );
	deepEqual( Stem("duranguense"), "duranguens" );
	deepEqual( Stem("durante"), "durant" );
	deepEqual( Stem("durar"), "dur" );
	deepEqual( Stem("durara"), "dur" );
	deepEqual( Stem("durará"), "dur" );
	deepEqual( Stem("durarán"), "dur" );
	deepEqual( Stem("duras"), "dur" );
	deepEqual( Stem("durazno"), "durazn" );
	deepEqual( Stem("durbin"), "durbin" );
	deepEqual( Stem("dúrcal"), "durcal" );
	deepEqual( Stem("dure"), "dur" );
	deepEqual( Stem("duren"), "dur" );
	deepEqual( Stem("dureza"), "durez" );
	deepEqual( Stem("durmió"), "durm" );
	deepEqual( Stem("duro"), "dur" );
	deepEqual( Stem("duró"), "dur" );
	deepEqual( Stem("duros"), "dur" );
	deepEqual( Stem("dury"), "dury" );
	deepEqual( Stem("dwyer"), "dwyer" );
	deepEqual( Stem("dye"), "dye" );
	deepEqual( Stem("dzul"), "dzul" );
	deepEqual( Stem("e"), "e" );
	deepEqual( Stem("eagles"), "eagl" );
	deepEqual( Stem("earl"), "earl" );
	deepEqual( Stem("eastwood"), "eastwood" );
	deepEqual( Stem("eau"), "eau" );
	deepEqual( Stem("ebanista"), "eban" );
	deepEqual( Stem("ebanitos"), "ebanit" );
	deepEqual( Stem("eberhard"), "eberhard" );
	deepEqual( Stem("ebriedad"), "ebried" );
	deepEqual( Stem("ebrio"), "ebri" );
	deepEqual( Stem("ebullición"), "ebullicion" );
	deepEqual( Stem("echa"), "echa" );
	deepEqual( Stem("echaban"), "echab" );
	deepEqual( Stem("echada"), "echad" );
	deepEqual( Stem("echado"), "echad" );
	deepEqual( Stem("echan"), "echan" );
	deepEqual( Stem("echando"), "echand" );
	deepEqual( Stem("echándole"), "echandol" );
	deepEqual( Stem("echao"), "echa" );
	deepEqual( Stem("echar"), "echar" );
	deepEqual( Stem("echara"), "echar" );
	deepEqual( Stem("echarán"), "echaran" );
	deepEqual( Stem("echarle"), "echarl" );
	deepEqual( Stem("echarnos"), "echarn" );
	deepEqual( Stem("echas"), "echas" );
	deepEqual( Stem("échate"), "echat" );
	deepEqual( Stem("echavarría"), "echavarr" );
	deepEqual( Stem("eche"), "eche" );
	deepEqual( Stem("echen"), "echen" );
	deepEqual( Stem("echeverría"), "echeverr" );
	deepEqual( Stem("echó"), "echo" );
	deepEqual( Stem("echoes"), "echo" );
	deepEqual( Stem("eckhard"), "eckhard" );
	deepEqual( Stem("eclesiásticas"), "eclesiast" );
	deepEqual( Stem("eclesíasticos"), "eclesiast" );
	deepEqual( Stem("eco"), "eco" );
	deepEqual( Stem("ecología"), "ecolog" );
	deepEqual( Stem("ecológica"), "ecolog" );
	deepEqual( Stem("ecológicas"), "ecolog" );
	deepEqual( Stem("ecológico"), "ecolog" );
	deepEqual( Stem("ecológicos"), "ecolog" );
	deepEqual( Stem("ecologista"), "ecolog" );
	deepEqual( Stem("ecologísta"), "ecologist" );
	deepEqual( Stem("ecologistas"), "ecolog" );
	deepEqual( Stem("econometristas"), "econometr" );
	deepEqual( Stem("economia"), "economi" );
	deepEqual( Stem("economía"), "econom" );
	deepEqual( Stem("economías"), "econom" );
	deepEqual( Stem("economic"), "economic" );
	deepEqual( Stem("económica"), "econom" );
	deepEqual( Stem("económicamente"), "econom" );
	deepEqual( Stem("económicas"), "econom" );
	deepEqual( Stem("económico"), "econom" );
	deepEqual( Stem("económicos"), "econom" );
	deepEqual( Stem("economist"), "economist" );
	deepEqual( Stem("economista"), "econom" );
	deepEqual( Stem("economistas"), "econom" );
	deepEqual( Stem("ecosistema"), "ecosistem" );
	deepEqual( Stem("ecosistemas"), "ecosistem" );
	deepEqual( Stem("ecotaxi"), "ecotaxi" );
	deepEqual( Stem("ecotaxis"), "ecotaxis" );
	deepEqual( Stem("ecotaxistas"), "ecotax" );
	deepEqual( Stem("ecotécnicas"), "ecotecn" );
	deepEqual( Stem("ecuaciones"), "ecuacion" );
	deepEqual( Stem("ecuador"), "ecuador" );
	deepEqual( Stem("ecuánime"), "ecuanim" );
	deepEqual( Stem("ecuatoriana"), "ecuatorian" );
	deepEqual( Stem("ecuatoriano"), "ecuatorian" );
	deepEqual( Stem("edad"), "edad" );
	deepEqual( Stem("edades"), "edad" );
	deepEqual( Stem("edecán"), "edecan" );
	deepEqual( Stem("edelmiro"), "edelmir" );
	deepEqual( Stem("eden"), "eden" );
	deepEqual( Stem("edén"), "eden" );
	deepEqual( Stem("eder"), "eder" );
	deepEqual( Stem("edgar"), "edgar" );
	deepEqual( Stem("edgardo"), "edgard" );
	deepEqual( Stem("edición"), "edicion" );
	deepEqual( Stem("ediciones"), "edicion" );
	deepEqual( Stem("edifica"), "edif" );
	deepEqual( Stem("edificación"), "edif" );
	deepEqual( Stem("edificaciones"), "edif" );
	deepEqual( Stem("edificar"), "edific" );
	deepEqual( Stem("edificio"), "edifici" );
	deepEqual( Stem("edificios"), "edifici" );
	deepEqual( Stem("edifico"), "edif" );
	deepEqual( Stem("edil"), "edil" );
	deepEqual( Stem("edilberto"), "edilbert" );
	deepEqual( Stem("ediles"), "edil" );
	deepEqual( Stem("edison"), "edison" );
	deepEqual( Stem("edit"), "edit" );
	deepEqual( Stem("edita"), "edit" );
	deepEqual( Stem("editada"), "edit" );
	deepEqual( Stem("editado"), "edit" );
	deepEqual( Stem("editados"), "edit" );
	deepEqual( Stem("editar"), "edit" );
	deepEqual( Stem("edith"), "edith" );
	deepEqual( Stem("editó"), "edit" );
	deepEqual( Stem("editor"), "editor" );
	deepEqual( Stem("editoras"), "editor" );
	deepEqual( Stem("editores"), "editor" );
	deepEqual( Stem("editorial"), "editorial" );
	deepEqual( Stem("editoriales"), "editorial" );
	deepEqual( Stem("editorialista"), "editorial" );
	deepEqual( Stem("editorialy"), "editorialy" );
	deepEqual( Stem("edmundo"), "edmund" );
	deepEqual( Stem("edomex"), "edomex" );
	deepEqual( Stem("edu"), "edu" );
	deepEqual( Stem("edú"), "edu" );
	deepEqual( Stem("eduard"), "eduard" );
	deepEqual( Stem("eduardo"), "eduard" );
	deepEqual( Stem("educación"), "educ" );
	deepEqual( Stem("educada"), "educ" );
	deepEqual( Stem("educador"), "educ" );
	deepEqual( Stem("educadores"), "educ" );
	deepEqual( Stem("educando"), "educ" );
	deepEqual( Stem("educar"), "educ" );
	deepEqual( Stem("educaron"), "educ" );
	deepEqual( Stem("educativa"), "educ" );
	deepEqual( Stem("educativas"), "educ" );
	deepEqual( Stem("educativo"), "educ" );
	deepEqual( Stem("educativos"), "educ" );
	deepEqual( Stem("eduque"), "eduqu" );
	deepEqual( Stem("edward"), "edward" );
	deepEqual( Stem("efe"), "efe" );
	deepEqual( Stem("efectiva"), "efect" );
	deepEqual( Stem("efectivamente"), "efect" );
	deepEqual( Stem("efectivas"), "efect" );
	deepEqual( Stem("efectividad"), "efect" );
	deepEqual( Stem("efectivo"), "efect" );
	deepEqual( Stem("efectivos"), "efect" );
	deepEqual( Stem("efecto"), "efect" );
	deepEqual( Stem("efectos"), "efect" );
	deepEqual( Stem("efectúa"), "efectu" );
	deepEqual( Stem("efectuaba"), "efectu" );
	deepEqual( Stem("efectuada"), "efectu" );
	deepEqual( Stem("efectuadas"), "efectu" );
	deepEqual( Stem("efectuado"), "efectu" );
	deepEqual( Stem("efectúan"), "efectu" );
	deepEqual( Stem("efectuar"), "efectu" );
	deepEqual( Stem("efectuará"), "efectu" );
	deepEqual( Stem("efectuarán"), "efectu" );
	deepEqual( Stem("efectuaría"), "efectu" );
	deepEqual( Stem("efectuaron"), "efectu" );
	deepEqual( Stem("efectuarse"), "efectu" );
	deepEqual( Stem("efectúen"), "efectu" );
	deepEqual( Stem("efectuo"), "efectu" );
	deepEqual( Stem("efectúo"), "efectu" );
	deepEqual( Stem("efectuó"), "efectu" );
	deepEqual( Stem("eficaces"), "eficac" );
	deepEqual( Stem("eficacia"), "eficaci" );
	deepEqual( Stem("eficaz"), "eficaz" );
	deepEqual( Stem("eficazmente"), "eficaz" );
	deepEqual( Stem("eficiencia"), "eficient" );
	deepEqual( Stem("eficientarlas"), "eficient" );
	deepEqual( Stem("eficiente"), "eficient" );
	deepEqual( Stem("eficientemente"), "eficient" );
	deepEqual( Stem("eficientes"), "eficient" );
	deepEqual( Stem("eficientización"), "eficientiz" );
	deepEqual( Stem("efigie"), "efigi" );
	deepEqual( Stem("efímero"), "efimer" );
	deepEqual( Stem("efluentes"), "efluent" );
	deepEqual( Stem("efraín"), "efrain" );
	deepEqual( Stem("efusivamente"), "efus" );
	deepEqual( Stem("egca"), "egca" );
	deepEqual( Stem("eggert"), "eggert" );
	deepEqual( Stem("égida"), "egid" );
	deepEqual( Stem("egipcios"), "egipci" );
	deepEqual( Stem("egipto"), "egipt" );
	deepEqual( Stem("ego"), "ego" );
	deepEqual( Stem("egocentrismo"), "egocentr" );
	deepEqual( Stem("egoísmo"), "egoism" );
	deepEqual( Stem("egoísta"), "egoist" );
	deepEqual( Stem("egresaban"), "egres" );
	deepEqual( Stem("egresada"), "egres" );
	deepEqual( Stem("egresados"), "egres" );
	deepEqual( Stem("egresan"), "egres" );
	deepEqual( Stem("egresaron"), "egres" );
	deepEqual( Stem("egresen"), "egres" );
	deepEqual( Stem("egreso"), "egres" );
	deepEqual( Stem("egresos"), "egres" );
	deepEqual( Stem("eiffel"), "eiffel" );
	deepEqual( Stem("eight"), "eight" );
	deepEqual( Stem("eje"), "eje" );
	deepEqual( Stem("ejecución"), "ejecu" );
	deepEqual( Stem("ejecuta"), "ejecut" );
	deepEqual( Stem("ejecutaba"), "ejecut" );
	deepEqual( Stem("ejecutable"), "ejecut" );
	deepEqual( Stem("ejecutada"), "ejecut" );
	deepEqual( Stem("ejecutado"), "ejecut" );
	deepEqual( Stem("ejecutados"), "ejecut" );
	deepEqual( Stem("ejecutando"), "ejecut" );
	deepEqual( Stem("ejecutantes"), "ejecut" );
	deepEqual( Stem("ejecutar"), "ejecut" );
	deepEqual( Stem("ejecutarán"), "ejecut" );
	deepEqual( Stem("ejecutarse"), "ejecut" );
	deepEqual( Stem("ejecutiva"), "ejecut" );
	deepEqual( Stem("ejecutivas"), "ejecut" );
	deepEqual( Stem("ejecutivo"), "ejecut" );
	deepEqual( Stem("ejecutivos"), "ejecut" );
	deepEqual( Stem("ejecutó"), "ejecut" );
	deepEqual( Stem("ejemplar"), "ejempl" );
	deepEqual( Stem("ejemplares"), "ejemplar" );
	deepEqual( Stem("ejemplarmente"), "ejemplar" );
	deepEqual( Stem("ejemplificó"), "ejemplific" );
	deepEqual( Stem("ejemplifique"), "ejemplifiqu" );
	deepEqual( Stem("ejemplo"), "ejempl" );
	deepEqual( Stem("ejemplos"), "ejempl" );
	deepEqual( Stem("ejerce"), "ejerc" );
	deepEqual( Stem("ejercen"), "ejerc" );
	deepEqual( Stem("ejercer"), "ejerc" );
	deepEqual( Stem("ejercerán"), "ejerc" );
	deepEqual( Stem("ejercían"), "ejerc" );
	deepEqual( Stem("ejercicio"), "ejercici" );
	deepEqual( Stem("ejercicios"), "ejercici" );
	deepEqual( Stem("ejerciendo"), "ejerc" );
	deepEqual( Stem("ejerciera"), "ejerc" );
	deepEqual( Stem("ejercitación"), "ejercit" );
	deepEqual( Stem("ejercito"), "ejercit" );
	deepEqual( Stem("ejército"), "ejercit" );
	deepEqual( Stem("ejércitos"), "ejercit" );
	deepEqual( Stem("ejidatarios"), "ejidatari" );
	deepEqual( Stem("ejido"), "ejid" );
	deepEqual( Stem("el"), "el" );
	deepEqual( Stem("él"), "el" );
	deepEqual( Stem("elaboración"), "elabor" );
	deepEqual( Stem("elaborada"), "elabor" );
	deepEqual( Stem("elaboradas"), "elabor" );
	deepEqual( Stem("elaborado"), "elabor" );
	deepEqual( Stem("elaborados"), "elabor" );
	deepEqual( Stem("elaborar"), "elabor" );
	deepEqual( Stem("elaborarán"), "elabor" );
	deepEqual( Stem("elabore"), "elabor" );
	deepEqual( Stem("elaboró"), "elabor" );
	deepEqual( Stem("elásticos"), "elast" );
	deepEqual( Stem("elba"), "elba" );
	deepEqual( Stem("elcrimen"), "elcrim" );
	deepEqual( Stem("eldridge"), "eldridg" );
	deepEqual( Stem("eleanor"), "eleanor" );
	deepEqual( Stem("elección"), "eleccion" );
	deepEqual( Stem("eleccionario"), "eleccionari" );
	deepEqual( Stem("elecciones"), "eleccion" );
	deepEqual( Stem("electa"), "elect" );
	deepEqual( Stem("electo"), "elect" );
	deepEqual( Stem("elector"), "elector" );
	deepEqual( Stem("electorado"), "elector" );
	deepEqual( Stem("electoral"), "electoral" );
	deepEqual( Stem("electorales"), "electoral" );
	deepEqual( Stem("electoralmente"), "electoral" );
	deepEqual( Stem("electores"), "elector" );
	deepEqual( Stem("electos"), "elect" );
	deepEqual( Stem("eléctrica"), "electr" );
	deepEqual( Stem("eléctricas"), "electr" );
	deepEqual( Stem("electricidad"), "electr" );
	deepEqual( Stem("electricistas"), "electric" );
	deepEqual( Stem("eléctrico"), "electr" );
	deepEqual( Stem("eléctricos"), "electr" );
	deepEqual( Stem("electroacústica"), "electroacust" );
	deepEqual( Stem("electrodomésticos"), "electrodomest" );
	deepEqual( Stem("electromagnéticas"), "electromagnet" );
	deepEqual( Stem("electronic"), "electronic" );
	deepEqual( Stem("electrónica"), "electron" );
	deepEqual( Stem("electrónicas"), "electron" );
	deepEqual( Stem("electrónico"), "electron" );
	deepEqual( Stem("electrónicos"), "electron" );
	deepEqual( Stem("elefante"), "elef" );
	deepEqual( Stem("elegancia"), "eleg" );
	deepEqual( Stem("elegante"), "eleg" );
	deepEqual( Stem("elegantemente"), "eleg" );
	deepEqual( Stem("elegantes"), "eleg" );
	deepEqual( Stem("elegidas"), "eleg" );
	deepEqual( Stem("elegido"), "eleg" );
	deepEqual( Stem("elegidos"), "eleg" );
	deepEqual( Stem("elegir"), "eleg" );
	deepEqual( Stem("elegirá"), "eleg" );
	deepEqual( Stem("elegirán"), "eleg" );
	deepEqual( Stem("elegirse"), "eleg" );
	deepEqual( Stem("elektra"), "elektr" );
	deepEqual( Stem("elemental"), "elemental" );
	deepEqual( Stem("elementales"), "elemental" );
	deepEqual( Stem("elemento"), "element" );
	deepEqual( Stem("elementos"), "element" );
	deepEqual( Stem("elena"), "elen" );
	deepEqual( Stem("elenco"), "elenc" );
	deepEqual( Stem("elencos"), "elenc" );
	deepEqual( Stem("elepé"), "elep" );
	deepEqual( Stem("elevaban"), "elev" );
	deepEqual( Stem("elevación"), "elev" );
	deepEqual( Stem("elevada"), "elev" );
	deepEqual( Stem("elevadas"), "elev" );
	deepEqual( Stem("elevado"), "elev" );
	deepEqual( Stem("elevados"), "elev" );
	deepEqual( Stem("elevamos"), "elev" );
	deepEqual( Stem("elevan"), "elev" );
	deepEqual( Stem("elevar"), "elev" );
	deepEqual( Stem("elevaran"), "elev" );
	deepEqual( Stem("elevaría"), "elev" );
	deepEqual( Stem("elevarse"), "elev" );
	deepEqual( Stem("elevó"), "elev" );
	deepEqual( Stem("elia"), "eli" );
	deepEqual( Stem("elías"), "eli" );
	deepEqual( Stem("elida"), "elid" );
	deepEqual( Stem("elie"), "eli" );
	deepEqual( Stem("elier"), "eli" );
	deepEqual( Stem("eligen"), "elig" );
	deepEqual( Stem("eligieron"), "elig" );
	deepEqual( Stem("eligió"), "elig" );
	deepEqual( Stem("eligirá"), "elig" );
	deepEqual( Stem("eligirán"), "elig" );
	deepEqual( Stem("elija"), "elij" );
	deepEqual( Stem("elijan"), "elij" );
	deepEqual( Stem("elimina"), "elimin" );
	deepEqual( Stem("eliminación"), "elimin" );
	deepEqual( Stem("eliminada"), "elimin" );
	deepEqual( Stem("eliminado"), "elimin" );
	deepEqual( Stem("eliminar"), "elimin" );
	deepEqual( Stem("eliminará"), "elimin" );
	deepEqual( Stem("eliminarán"), "elimin" );
	deepEqual( Stem("eliminarían"), "elimin" );
	deepEqual( Stem("eliminarla"), "elimin" );
	deepEqual( Stem("eliminarse"), "elimin" );
	deepEqual( Stem("eliminatoria"), "eliminatori" );
	deepEqual( Stem("eliminatorias"), "eliminatori" );
	deepEqual( Stem("eliminatorios"), "eliminatori" );
	deepEqual( Stem("elimine"), "elimin" );
	deepEqual( Stem("eliminó"), "elimin" );
	deepEqual( Stem("eliodoro"), "eliodor" );
	deepEqual( Stem("elisa"), "elis" );
	deepEqual( Stem("eliseo"), "elise" );
	deepEqual( Stem("élite"), "elit" );
	deepEqual( Stem("eliud"), "eliud" );
	deepEqual( Stem("elizondo"), "elizond" );
	deepEqual( Stem("ella"), "ella" );
	deepEqual( Stem("ellas"), "ellas" );
	deepEqual( Stem("ellington"), "ellington" );
	deepEqual( Stem("ello"), "ello" );
	deepEqual( Stem("ellos"), "ellos" );
	deepEqual( Stem("elmer"), "elmer" );
	deepEqual( Stem("elmo"), "elmo" );
	deepEqual( Stem("elocuencia"), "elocuent" );
	deepEqual( Stem("elogiado"), "elogi" );
	deepEqual( Stem("elogio"), "elogi" );
	deepEqual( Stem("elogios"), "elogi" );
	deepEqual( Stem("elogiosas"), "elogi" );
	deepEqual( Stem("eloisa"), "elois" );
	deepEqual( Stem("eloísa"), "elois" );
	deepEqual( Stem("elosúa"), "elosu" );
	deepEqual( Stem("elotitos"), "elotit" );
	deepEqual( Stem("eloxochitlán"), "eloxochitlan" );
	deepEqual( Stem("eloy"), "eloy" );
	deepEqual( Stem("elton"), "elton" );
	deepEqual( Stem("elude"), "elud" );
	deepEqual( Stem("eludir"), "elud" );
	deepEqual( Stem("elva"), "elva" );
	deepEqual( Stem("elvis"), "elvis" );
	deepEqual( Stem("em"), "em" );
	deepEqual( Stem("emana"), "eman" );
	deepEqual( Stem("emanadas"), "eman" );
	deepEqual( Stem("emanciparse"), "emancip" );
	deepEqual( Stem("ematografía"), "ematograf" );
	deepEqual( Stem("embajada"), "embaj" );
	deepEqual( Stem("embajadas"), "embaj" );
	deepEqual( Stem("embajador"), "embaj" );
	deepEqual( Stem("embajadora"), "embaj" );
	deepEqual( Stem("embajadores"), "embaj" );
	deepEqual( Stem("embalaje"), "embalaj" );
	deepEqual( Stem("embarazada"), "embaraz" );
	deepEqual( Stem("embarazarse"), "embaraz" );
	deepEqual( Stem("embarazo"), "embaraz" );
	deepEqual( Stem("embarazosa"), "embaraz" );
	deepEqual( Stem("embarazoso"), "embaraz" );
	deepEqual( Stem("embarcación"), "embarc" );
	deepEqual( Stem("embarcaciones"), "embarc" );
	deepEqual( Stem("embarcadas"), "embarc" );
	deepEqual( Stem("embarcar"), "embarc" );
	deepEqual( Stem("embargaron"), "embarg" );
	deepEqual( Stem("embargo"), "embarg" );
	deepEqual( Stem("embarrarnos"), "embarr" );
	deepEqual( Stem("embestía"), "embest" );
	deepEqual( Stem("embestida"), "embest" );
	deepEqual( Stem("embestidas"), "embest" );
	deepEqual( Stem("embestido"), "embest" );
	deepEqual( Stem("embistiendo"), "embist" );
	deepEqual( Stem("embistió"), "embist" );
	deepEqual( Stem("emblema"), "emblem" );
	deepEqual( Stem("embolsó"), "embols" );
	deepEqual( Stem("emboscada"), "embosc" );
	deepEqual( Stem("emboscado"), "embosc" );
	deepEqual( Stem("emboscados"), "embosc" );
	deepEqual( Stem("emboscan"), "embosc" );
	deepEqual( Stem("embotelladora"), "embotell" );
	deepEqual( Stem("embotelladoras"), "embotell" );
	deepEqual( Stem("embotellamientos"), "embotell" );
	deepEqual( Stem("embravecidas"), "embravec" );
	deepEqual( Stem("embriagantes"), "embriag" );
	deepEqual( Stem("embriagarse"), "embriag" );
	deepEqual( Stem("embriagas"), "embriag" );
	deepEqual( Stem("embutidos"), "embut" );
	deepEqual( Stem("emerge"), "emerg" );
	deepEqual( Stem("emergencia"), "emergent" );
	deepEqual( Stem("emergencias"), "emergent" );
	deepEqual( Stem("emergente"), "emergent" );
	deepEqual( Stem("emergentes"), "emergent" );
	deepEqual( Stem("emerson"), "emerson" );
	deepEqual( Stem("emes"), "emes" );
	deepEqual( Stem("emigramos"), "emigr" );
	deepEqual( Stem("emigrantes"), "emigr" );
	deepEqual( Stem("emigrar"), "emigr" );
	deepEqual( Stem("emigraron"), "emigr" );
	deepEqual( Stem("emiliano"), "emilian" );
	deepEqual( Stem("emilio"), "emili" );
	deepEqual( Stem("eminencia"), "eminent" );
	deepEqual( Stem("eminentemente"), "eminent" );
	deepEqual( Stem("emirato"), "emirat" );
	deepEqual( Stem("emisión"), "emision" );
	deepEqual( Stem("emisiones"), "emision" );
	deepEqual( Stem("emisora"), "emisor" );
	deepEqual( Stem("emisoras"), "emisor" );
	deepEqual( Stem("emisores"), "emisor" );
	deepEqual( Stem("emita"), "emit" );
	deepEqual( Stem("emitan"), "emit" );
	deepEqual( Stem("emiten"), "emit" );
	deepEqual( Stem("emitían"), "emit" );
	deepEqual( Stem("emitida"), "emit" );
	deepEqual( Stem("emitidas"), "emit" );
	deepEqual( Stem("emitido"), "emit" );
	deepEqual( Stem("emitidos"), "emit" );
	deepEqual( Stem("emitiendo"), "emit" );
	deepEqual( Stem("emitieron"), "emit" );
	deepEqual( Stem("emitió"), "emit" );
	deepEqual( Stem("emitir"), "emit" );
	deepEqual( Stem("emitirá"), "emit" );
	deepEqual( Stem("emitirán"), "emit" );
	deepEqual( Stem("emitiría"), "emit" );
	deepEqual( Stem("emmanuel"), "emmanuel" );
	deepEqual( Stem("emmitth"), "emmitth" );
	deepEqual( Stem("emoción"), "emocion" );
	deepEqual( Stem("emocionada"), "emocion" );
	deepEqual( Stem("emocionado"), "emocion" );
	deepEqual( Stem("emocionados"), "emocion" );
	deepEqual( Stem("emocional"), "emocional" );
	deepEqual( Stem("emocionante"), "emocion" );
	deepEqual( Stem("emocionaron"), "emocion" );
	deepEqual( Stem("emociones"), "emocion" );
	deepEqual( Stem("emocionó"), "emocion" );
	deepEqual( Stem("emory"), "emory" );
	deepEqual( Stem("emotivamente"), "emot" );
	deepEqual( Stem("empacadores"), "empac" );
	deepEqual( Stem("empacados"), "empac" );
	deepEqual( Stem("empacamex"), "empacamex" );
	deepEqual( Stem("empadronados"), "empadron" );
	deepEqual( Stem("empalagó"), "empalag" );
	deepEqual( Stem("empanadas"), "empan" );
	deepEqual( Stem("empantanadas"), "empantan" );
	deepEqual( Stem("empantanar"), "empantan" );
	deepEqual( Stem("empape"), "empap" );
	deepEqual( Stem("empapé"), "empap" );
	deepEqual( Stem("empaquetado"), "empaquet" );
	deepEqual( Stem("empatado"), "empat" );
	deepEqual( Stem("empatados"), "empat" );
	deepEqual( Stem("empatar"), "empat" );
	deepEqual( Stem("empatarles"), "empat" );
	deepEqual( Stem("empataron"), "empat" );
	deepEqual( Stem("empate"), "empat" );
	deepEqual( Stem("empates"), "empat" );
	deepEqual( Stem("empató"), "empat" );
	deepEqual( Stem("empecé"), "empec" );
	deepEqual( Stem("empecinan"), "empecin" );
	deepEqual( Stem("empeñado"), "empeñ" );
	deepEqual( Stem("empeñados"), "empeñ" );
	deepEqual( Stem("empeño"), "empeñ" );
	deepEqual( Stem("empeoran"), "empeor" );
	deepEqual( Stem("empeorar"), "empeor" );
	deepEqual( Stem("emperador"), "emper" );
	deepEqual( Stem("emperatriz"), "emperatriz" );
	deepEqual( Stem("empero"), "emper" );
	deepEqual( Stem("empezaba"), "empez" );
	deepEqual( Stem("empezaban"), "empez" );
	deepEqual( Stem("empezado"), "empez" );
	deepEqual( Stem("empezamos"), "empez" );
	deepEqual( Stem("empezando"), "empez" );
	deepEqual( Stem("empezar"), "empez" );
	deepEqual( Stem("empezará"), "empez" );
	deepEqual( Stem("empezarán"), "empez" );
	deepEqual( Stem("empezarlos"), "empez" );
	deepEqual( Stem("empezaron"), "empez" );
	deepEqual( Stem("empezó"), "empez" );
	deepEqual( Stem("empiece"), "empiec" );
	deepEqual( Stem("empiecen"), "empiec" );
	deepEqual( Stem("empieza"), "empiez" );
	deepEqual( Stem("empiezan"), "empiez" );
	deepEqual( Stem("emplazamiento"), "emplaz" );
	deepEqual( Stem("emplea"), "emple" );
	deepEqual( Stem("empleada"), "emple" );
	deepEqual( Stem("empleadas"), "emple" );
	deepEqual( Stem("empleado"), "emple" );
	deepEqual( Stem("empleados"), "emple" );
	deepEqual( Stem("empleando"), "emple" );
	deepEqual( Stem("emplear"), "emple" );
	deepEqual( Stem("empleo"), "emple" );
	deepEqual( Stem("empleó"), "emple" );
	deepEqual( Stem("empleos"), "emple" );
	deepEqual( Stem("empobrecido"), "empobrec" );
	deepEqual( Stem("emporio"), "empori" );
	deepEqual( Stem("emprendedor"), "emprendedor" );
	deepEqual( Stem("emprendedores"), "emprendedor" );
	deepEqual( Stem("emprender"), "emprend" );
	deepEqual( Stem("emprenderá"), "emprend" );
	deepEqual( Stem("emprendido"), "emprend" );
	deepEqual( Stem("emprendiendo"), "emprend" );
	deepEqual( Stem("emprendimos"), "emprend" );
	deepEqual( Stem("emprendió"), "emprend" );
	deepEqual( Stem("empresa"), "empres" );
	deepEqual( Stem("empresaria"), "empresari" );
	deepEqual( Stem("empresarial"), "empresarial" );
	deepEqual( Stem("empresariales"), "empresarial" );
	deepEqual( Stem("empresario"), "empresari" );
	deepEqual( Stem("empresarios"), "empresari" );
	deepEqual( Stem("empresas"), "empres" );
	deepEqual( Stem("empréstitos"), "emprestit" );
	deepEqual( Stem("empujamos"), "empuj" );
	deepEqual( Stem("empujan"), "empuj" );
	deepEqual( Stem("empujando"), "empuj" );
	deepEqual( Stem("empujar"), "empuj" );
	deepEqual( Stem("empujarlo"), "empuj" );
	deepEqual( Stem("emular"), "emul" );
	deepEqual( Stem("en"), "en" );
	deepEqual( Stem("enajenación"), "enajen" );
	deepEqual( Stem("enamora"), "enamor" );
	deepEqual( Stem("enamorado"), "enamor" );
	deepEqual( Stem("enamoró"), "enamor" );
	deepEqual( Stem("encabece"), "encabec" );
	deepEqual( Stem("encabeza"), "encabez" );
	deepEqual( Stem("encabezada"), "encabez" );
	deepEqual( Stem("encabezado"), "encabez" );
	deepEqual( Stem("encabezados"), "encabez" );
	deepEqual( Stem("encabezar"), "encabez" );
	deepEqual( Stem("encabezará"), "encabez" );
	deepEqual( Stem("encabezaron"), "encabez" );
	deepEqual( Stem("encabezó"), "encabez" );
	deepEqual( Stem("encadenaban"), "encaden" );
	deepEqual( Stem("encadenado"), "encaden" );
	deepEqual( Stem("encaja"), "encaj" );
	deepEqual( Stem("encajan"), "encaj" );
	deepEqual( Stem("encaje"), "encaj" );
	deepEqual( Stem("encajes"), "encaj" );
	deepEqual( Stem("encallados"), "encall" );
	deepEqual( Stem("encallar"), "encall" );
	deepEqual( Stem("encaminadas"), "encamin" );
	deepEqual( Stem("encaminará"), "encamin" );
	deepEqual( Stem("encaminaron"), "encamin" );
	deepEqual( Stem("encañonaron"), "encañon" );
	deepEqual( Stem("encanta"), "encant" );
	deepEqual( Stem("encantada"), "encant" );
	deepEqual( Stem("encantador"), "encant" );
	deepEqual( Stem("encantados"), "encant" );
	deepEqual( Stem("encantan"), "encant" );
	deepEqual( Stem("encantaría"), "encant" );
	deepEqual( Stem("encanto"), "encant" );
	deepEqual( Stem("encantos"), "encant" );
	deepEqual( Stem("encapricha"), "encaprich" );
	deepEqual( Stem("encara"), "encar" );
	deepEqual( Stem("encarcelado"), "encarcel" );
	deepEqual( Stem("encarcelados"), "encarcel" );
	deepEqual( Stem("encarcelamiento"), "encarcel" );
	deepEqual( Stem("encarecerá"), "encarec" );
	deepEqual( Stem("encarga"), "encarg" );
	deepEqual( Stem("encargaba"), "encarg" );
	deepEqual( Stem("encargaban"), "encarg" );
	deepEqual( Stem("encargada"), "encarg" );
	deepEqual( Stem("encargadas"), "encarg" );
	deepEqual( Stem("encargado"), "encarg" );
	deepEqual( Stem("encargados"), "encarg" );
	deepEqual( Stem("encargar"), "encarg" );
	deepEqual( Stem("encargara"), "encarg" );
	deepEqual( Stem("encargará"), "encarg" );
	deepEqual( Stem("encargarán"), "encarg" );
	deepEqual( Stem("encargaron"), "encarg" );
	deepEqual( Stem("encargo"), "encarg" );
	deepEqual( Stem("encargó"), "encarg" );
	deepEqual( Stem("encargue"), "encarg" );
	deepEqual( Stem("encargué"), "encarg" );
	deepEqual( Stem("encarna"), "encarn" );
	deepEqual( Stem("encarnado"), "encarn" );
	deepEqual( Stem("encarnan"), "encarn" );
	deepEqual( Stem("encarnizan"), "encarniz" );
	deepEqual( Stem("encarno"), "encarn" );
	deepEqual( Stem("encarnó"), "encarn" );
	deepEqual( Stem("encauce"), "encauc" );
	deepEqual( Stem("encendedor"), "encendedor" );
	deepEqual( Stem("encendedores"), "encendedor" );
	deepEqual( Stem("encendido"), "encend" );
	deepEqual( Stem("encendidos"), "encend" );
	deepEqual( Stem("encerar"), "encer" );
	deepEqual( Stem("enceren"), "encer" );
	deepEqual( Stem("encerrado"), "encerr" );
	deepEqual( Stem("encerrados"), "encerr" );
	deepEqual( Stem("encerrarnos"), "encerr" );
	deepEqual( Stem("encerraron"), "encerr" );
	deepEqual( Stem("encerrona"), "encerron" );
	deepEqual( Stem("enchalecados"), "enchalec" );
	deepEqual( Stem("enchinchar"), "enchinch" );
	deepEqual( Stem("enciclopedia"), "enciclopedi" );
	deepEqual( Stem("enciclopedias"), "enciclopedi" );
	deepEqual( Stem("enciclopédico"), "encicloped" );
	deepEqual( Stem("encienda"), "enciend" );
	deepEqual( Stem("encierra"), "encierr" );
	deepEqual( Stem("encierro"), "encierr" );
	deepEqual( Stem("encima"), "encim" );
	deepEqual( Stem("encke"), "encke" );
	deepEqual( Stem("enclaustrados"), "enclaustr" );
	deepEqual( Stem("encomendadas"), "encomend" );
	deepEqual( Stem("encomendando"), "encomend" );
	deepEqual( Stem("encomiable"), "encomi" );
	deepEqual( Stem("encomienda"), "encomiend" );
	deepEqual( Stem("encomiende"), "encomiend" );
	deepEqual( Stem("encontraba"), "encontr" );
	deepEqual( Stem("encontraban"), "encontr" );
	deepEqual( Stem("encontrada"), "encontr" );
	deepEqual( Stem("encontradas"), "encontr" );
	deepEqual( Stem("encontrado"), "encontr" );
	deepEqual( Stem("encontrados"), "encontr" );
	deepEqual( Stem("encontramos"), "encontr" );
	deepEqual( Stem("encontrar"), "encontr" );
	deepEqual( Stem("encontrara"), "encontr" );
	deepEqual( Stem("encontrará"), "encontr" );
	deepEqual( Stem("encontraran"), "encontr" );
	deepEqual( Stem("encontrarán"), "encontr" );
	deepEqual( Stem("encontrarás"), "encontr" );
	deepEqual( Stem("encontraremos"), "encontr" );
	deepEqual( Stem("encontrarle"), "encontr" );
	deepEqual( Stem("encontrarlo"), "encontr" );
	deepEqual( Stem("encontrarme"), "encontr" );
	deepEqual( Stem("encontraron"), "encontr" );
	deepEqual( Stem("encontrarse"), "encontr" );
	deepEqual( Stem("encontrársele"), "encontrarsel" );
	deepEqual( Stem("encontré"), "encontr" );
	deepEqual( Stem("encontró"), "encontr" );
	deepEqual( Stem("encriptación"), "encript" );
	deepEqual( Stem("encrucijada"), "encrucij" );
	deepEqual( Stem("encuadrados"), "encuadr" );
	deepEqual( Stem("encuadren"), "encuadr" );
	deepEqual( Stem("encubierta"), "encubiert" );
	deepEqual( Stem("encubiertos"), "encubiert" );
	deepEqual( Stem("encuentra"), "encuentr" );
	deepEqual( Stem("encuentran"), "encuentr" );
	deepEqual( Stem("encuentras"), "encuentr" );
	deepEqual( Stem("encuentre"), "encuentr" );
	deepEqual( Stem("encuentro"), "encuentr" );
	deepEqual( Stem("encuentros"), "encuentr" );
	deepEqual( Stem("encuesta"), "encuest" );
	deepEqual( Stem("encuestadora"), "encuest" );
	deepEqual( Stem("encuestados"), "encuest" );
	deepEqual( Stem("encuestaron"), "encuest" );
	deepEqual( Stem("encuestas"), "encuest" );
	deepEqual( Stem("encueste"), "encuest" );
	deepEqual( Stem("encumbran"), "encumbr" );
	deepEqual( Stem("endeavour"), "endeavour" );
	deepEqual( Stem("endebles"), "endebl" );
	deepEqual( Stem("enderezadas"), "enderez" );
	deepEqual( Stem("endeudamiento"), "endeud" );
	deepEqual( Stem("endiosado"), "endi" );
	deepEqual( Stem("endiosamiento"), "endi" );
	deepEqual( Stem("endocrinología"), "endocrinolog" );
	deepEqual( Stem("endocrinólogo"), "endocrinolog" );
	deepEqual( Stem("endulce"), "endulc" );
	deepEqual( Stem("endulzada"), "endulz" );
	deepEqual( Stem("enduro"), "endur" );
	deepEqual( Stem("enemiga"), "enemig" );
	deepEqual( Stem("enemigo"), "enemig" );
	deepEqual( Stem("enemigos"), "enemig" );
	deepEqual( Stem("energética"), "energet" );
	deepEqual( Stem("energético"), "energet" );
	deepEqual( Stem("energéticos"), "energet" );
	deepEqual( Stem("energía"), "energ" );
	deepEqual( Stem("enérgica"), "energ" );
	deepEqual( Stem("enérgicas"), "energ" );
	deepEqual( Stem("enérgico"), "energ" );
	deepEqual( Stem("enero"), "ener" );
	deepEqual( Stem("enervante"), "enerv" );
	deepEqual( Stem("enervantes"), "enerv" );
	deepEqual( Stem("enésima"), "enesim" );
	deepEqual( Stem("enfadaría"), "enfad" );
	deepEqual( Stem("énfasis"), "enfasis" );
	deepEqual( Stem("enfatiza"), "enfatiz" );
	deepEqual( Stem("enfatizará"), "enfatiz" );
	deepEqual( Stem("enfatizó"), "enfatiz" );
	deepEqual( Stem("enferma"), "enferm" );
	deepEqual( Stem("enfermarse"), "enferm" );
	deepEqual( Stem("enfermé"), "enferm" );
	deepEqual( Stem("enfermedad"), "enfermed" );
	deepEqual( Stem("enfermedades"), "enfermedad" );
	deepEqual( Stem("enfermera"), "enfermer" );
	deepEqual( Stem("enfermeras"), "enfermer" );
	deepEqual( Stem("enfermo"), "enferm" );
	deepEqual( Stem("enfermos"), "enferm" );
	deepEqual( Stem("enfiladas"), "enfil" );
	deepEqual( Stem("enfilamos"), "enfil" );
	deepEqual( Stem("enfoca"), "enfoc" );
	deepEqual( Stem("enfocadas"), "enfoc" );
	deepEqual( Stem("enfocado"), "enfoc" );
	deepEqual( Stem("enfocados"), "enfoc" );
	deepEqual( Stem("enfocan"), "enfoc" );
	deepEqual( Stem("enfocar"), "enfoc" );
	deepEqual( Stem("enfocará"), "enfoc" );
	deepEqual( Stem("enfocarán"), "enfoc" );
	deepEqual( Stem("enfocarse"), "enfoc" );
	deepEqual( Stem("enfoque"), "enfoqu" );
	deepEqual( Stem("enfoquen"), "enfoqu" );
	deepEqual( Stem("enfóquese"), "enfoques" );
	deepEqual( Stem("enfrascados"), "enfrasc" );
	deepEqual( Stem("enfrenta"), "enfrent" );
	deepEqual( Stem("enfrentaba"), "enfrent" );
	deepEqual( Stem("enfrentada"), "enfrent" );
	deepEqual( Stem("enfrentado"), "enfrent" );
	deepEqual( Stem("enfrentamiento"), "enfrent" );
	deepEqual( Stem("enfrentamientos"), "enfrent" );
	deepEqual( Stem("enfrentamos"), "enfrent" );
	deepEqual( Stem("enfrentan"), "enfrent" );
	deepEqual( Stem("enfrentando"), "enfrent" );
	deepEqual( Stem("enfrentándose"), "enfrent" );
	deepEqual( Stem("enfrentar"), "enfrent" );
	deepEqual( Stem("enfrentará"), "enfrent" );
	deepEqual( Stem("enfrentarán"), "enfrent" );
	deepEqual( Stem("enfrentaremos"), "enfrent" );
	deepEqual( Stem("enfrentarlos"), "enfrent" );
	deepEqual( Stem("enfrentarme"), "enfrent" );
	deepEqual( Stem("enfrentaron"), "enfrent" );
	deepEqual( Stem("enfrentarse"), "enfrent" );
	deepEqual( Stem("enfrente"), "enfrent" );
	deepEqual( Stem("enfrenten"), "enfrent" );
	deepEqual( Stem("enfrentó"), "enfrent" );
	deepEqual( Stem("enfriamiento"), "enfriamient" );
	deepEqual( Stem("enfundaron"), "enfund" );
	deepEqual( Stem("enfurecieron"), "enfurec" );
	deepEqual( Stem("engalana"), "engalan" );
	deepEqual( Stem("engañaba"), "engañ" );
	deepEqual( Stem("engañado"), "engañ" );
	deepEqual( Stem("engañar"), "engañ" );
	deepEqual( Stem("engancharle"), "enganch" );
	deepEqual( Stem("engaño"), "engañ" );
	deepEqual( Stem("engañosas"), "engañ" );
	deepEqual( Stem("engendra"), "engendr" );
	deepEqual( Stem("engineering"), "engineering" );
	deepEqual( Stem("englutidos"), "englut" );
	deepEqual( Stem("engomados"), "engom" );
	deepEqual( Stem("engordar"), "engord" );
	deepEqual( Stem("engordó"), "engord" );
	deepEqual( Stem("engorrosas"), "engorr" );
	deepEqual( Stem("engorrosos"), "engorr" );
	deepEqual( Stem("engracia"), "engraci" );
	deepEqual( Stem("engranaje"), "engranaj" );
	deepEqual( Stem("engrandecer"), "engrandec" );
	deepEqual( Stem("engrane"), "engran" );
	deepEqual( Stem("engrasen"), "engras" );
	deepEqual( Stem("enhorabuena"), "enhorabuen" );
	deepEqual( Stem("enigmático"), "enigmat" );
	deepEqual( Stem("enjambre"), "enjambr" );
	deepEqual( Stem("enjuiciado"), "enjuici" );
	deepEqual( Stem("enjuiciar"), "enjuici" );
	deepEqual( Stem("enlace"), "enlac" );
	deepEqual( Stem("enlatados"), "enlat" );
	deepEqual( Stem("enlaza"), "enlaz" );
	deepEqual( Stem("enlazadas"), "enlaz" );
	deepEqual( Stem("enlazado"), "enlaz" );
	deepEqual( Stem("enlistar"), "enlist" );
	deepEqual( Stem("enlisten"), "enlist" );
	deepEqual( Stem("enmarañado"), "enmarañ" );
	deepEqual( Stem("enmarca"), "enmarc" );
	deepEqual( Stem("enmarcarlos"), "enmarc" );
	deepEqual( Stem("enmarcaron"), "enmarc" );
	deepEqual( Stem("enmarcarse"), "enmarc" );
	deepEqual( Stem("enmascarado"), "enmascar" );
	deepEqual( Stem("enmedio"), "enmedi" );
	deepEqual( Stem("enmendar"), "enmend" );
	deepEqual( Stem("enoc"), "enoc" );
	deepEqual( Stem("enojaran"), "enoj" );
	deepEqual( Stem("enojo"), "enoj" );
	deepEqual( Stem("enojó"), "enoj" );
	deepEqual( Stem("enorme"), "enorm" );
	deepEqual( Stem("enormemente"), "enorm" );
	deepEqual( Stem("enormes"), "enorm" );
	deepEqual( Stem("enraizada"), "enraiz" );
	deepEqual( Stem("enrazado"), "enraz" );
	deepEqual( Stem("enrazados"), "enraz" );
	deepEqual( Stem("enreden"), "enred" );
	deepEqual( Stem("enrico"), "enric" );
	deepEqual( Stem("enrique"), "enriqu" );
	deepEqual( Stem("enriquece"), "enriquec" );
	deepEqual( Stem("enriquecer"), "enriquec" );
	deepEqual( Stem("enriquecerse"), "enriquec" );
	deepEqual( Stem("enriquecida"), "enriquec" );
	deepEqual( Stem("enriquecimiento"), "enriquec" );
	deepEqual( Stem("enriqueció"), "enriquec" );
	deepEqual( Stem("enríquez"), "enriquez" );
	deepEqual( Stem("ensambladora"), "ensambl" );
	deepEqual( Stem("ensamblar"), "ensambl" );
	deepEqual( Stem("ensamble"), "ensambl" );
	deepEqual( Stem("ensambles"), "ensambl" );
	deepEqual( Stem("ensanchado"), "ensanch" );
	deepEqual( Stem("ensangrentados"), "ensangrent" );
	deepEqual( Stem("ensaya"), "ensay" );
	deepEqual( Stem("ensayado"), "ensay" );
	deepEqual( Stem("ensayaron"), "ensay" );
	deepEqual( Stem("ensayista"), "ensay" );
	deepEqual( Stem("ensayistas"), "ensay" );
	deepEqual( Stem("ensayo"), "ensay" );
	deepEqual( Stem("enseguida"), "ensegu" );
	deepEqual( Stem("enseña"), "enseñ" );
	deepEqual( Stem("enseñaba"), "enseñ" );
	deepEqual( Stem("enseñaban"), "enseñ" );
	deepEqual( Stem("ensenada"), "ensen" );
	deepEqual( Stem("enseñado"), "enseñ" );
	deepEqual( Stem("enseñan"), "enseñ" );
	deepEqual( Stem("enseñando"), "enseñ" );
	deepEqual( Stem("enseñanza"), "enseñ" );
	deepEqual( Stem("enseñanzas"), "enseñ" );
	deepEqual( Stem("enseñar"), "enseñ" );
	deepEqual( Stem("enseñarles"), "enseñ" );
	deepEqual( Stem("enseñen"), "enseñ" );
	deepEqual( Stem("enseñes"), "enseñ" );
	deepEqual( Stem("enseñó"), "enseñ" );
	deepEqual( Stem("ensoberbecerse"), "ensoberbec" );
	deepEqual( Stem("ensombrecían"), "ensombrec" );
	deepEqual( Stem("ensorberbecera"), "ensorberbecer" );
	deepEqual( Stem("ensordecedores"), "ensordecedor" );
	deepEqual( Stem("ensuciar"), "ensuci" );
	deepEqual( Stem("entabladas"), "entabl" );
	deepEqual( Stem("entablar"), "entabl" );
	deepEqual( Stem("entablarse"), "entabl" );
	deepEqual( Stem("ente"), "ente" );
	deepEqual( Stem("entenados"), "enten" );
	deepEqual( Stem("entendederas"), "entendeder" );
	deepEqual( Stem("entendemos"), "entend" );
	deepEqual( Stem("entender"), "entend" );
	deepEqual( Stem("entenderá"), "entend" );
	deepEqual( Stem("entenderé"), "entend" );
	deepEqual( Stem("entenderíamos"), "entend" );
	deepEqual( Stem("entendí"), "entend" );
	deepEqual( Stem("entendible"), "entend" );
	deepEqual( Stem("entendibles"), "entend" );
	deepEqual( Stem("entendido"), "entend" );
	deepEqual( Stem("entendimiento"), "entend" );
	deepEqual( Stem("entera"), "enter" );
	deepEqual( Stem("enterada"), "enter" );
	deepEqual( Stem("enterado"), "enter" );
	deepEqual( Stem("enterados"), "enter" );
	deepEqual( Stem("enteramente"), "enter" );
	deepEqual( Stem("enteramos"), "enter" );
	deepEqual( Stem("enterar"), "enter" );
	deepEqual( Stem("enterarse"), "enter" );
	deepEqual( Stem("entere"), "enter" );
	deepEqual( Stem("enteremos"), "enter" );
	deepEqual( Stem("enteren"), "enter" );
	deepEqual( Stem("entereza"), "enterez" );
	deepEqual( Stem("entero"), "enter" );
	deepEqual( Stem("enteró"), "enter" );
	deepEqual( Stem("enteros"), "enter" );
	deepEqual( Stem("enterrarlos"), "enterr" );
	deepEqual( Stem("entes"), "entes" );
	deepEqual( Stem("entidad"), "entid" );
	deepEqual( Stem("entidades"), "entidad" );
	deepEqual( Stem("entienda"), "entiend" );
	deepEqual( Stem("entiendan"), "entiend" );
	deepEqual( Stem("entiende"), "entiend" );
	deepEqual( Stem("entienden"), "entiend" );
	deepEqual( Stem("entierro"), "entierr" );
	deepEqual( Stem("entonado"), "enton" );
	deepEqual( Stem("entonces"), "entonc" );
	deepEqual( Stem("entonen"), "enton" );
	deepEqual( Stem("entorno"), "entorn" );
	deepEqual( Stem("entorpece"), "entorpec" );
	deepEqual( Stem("entra"), "entra" );
	deepEqual( Stem("entraban"), "entrab" );
	deepEqual( Stem("entrada"), "entrad" );
	deepEqual( Stem("entradas"), "entrad" );
	deepEqual( Stem("entrado"), "entrad" );
	deepEqual( Stem("entramos"), "entram" );
	deepEqual( Stem("entran"), "entran" );
	deepEqual( Stem("entraña"), "entrañ" );
	deepEqual( Stem("entrañaría"), "entrañ" );
	deepEqual( Stem("entrando"), "entrand" );
	deepEqual( Stem("entrándole"), "entrandol" );
	deepEqual( Stem("entrante"), "entrant" );
	deepEqual( Stem("entrar"), "entrar" );
	deepEqual( Stem("entrará"), "entrar" );
	deepEqual( Stem("entraran"), "entrar" );
	deepEqual( Stem("entrarán"), "entraran" );
	deepEqual( Stem("entraría"), "entrar" );
	deepEqual( Stem("entrarían"), "entrar" );
	deepEqual( Stem("entrarle"), "entrarl" );
	deepEqual( Stem("entraron"), "entraron" );
	deepEqual( Stem("entre"), "entre" );
	deepEqual( Stem("entré"), "entre" );
	deepEqual( Stem("entrecano"), "entrecan" );
	deepEqual( Stem("entrecomillas"), "entrecomill" );
	deepEqual( Stem("entrecruzan"), "entrecruz" );
	deepEqual( Stem("entrega"), "entreg" );
	deepEqual( Stem("entregada"), "entreg" );
	deepEqual( Stem("entregadas"), "entreg" );
	deepEqual( Stem("entregado"), "entreg" );
	deepEqual( Stem("entregados"), "entreg" );
	deepEqual( Stem("entregan"), "entreg" );
	deepEqual( Stem("entregándoles"), "entreg" );
	deepEqual( Stem("entregar"), "entreg" );
	deepEqual( Stem("entregara"), "entreg" );
	deepEqual( Stem("entregará"), "entreg" );
	deepEqual( Stem("entregaran"), "entreg" );
	deepEqual( Stem("entregarán"), "entreg" );
	deepEqual( Stem("entregaría"), "entreg" );
	deepEqual( Stem("entregarían"), "entreg" );
	deepEqual( Stem("entregarla"), "entreg" );
	deepEqual( Stem("entregarle"), "entreg" );
	deepEqual( Stem("entregarme"), "entreg" );
	deepEqual( Stem("entregaron"), "entreg" );
	deepEqual( Stem("entregarse"), "entreg" );
	deepEqual( Stem("entregársela"), "entreg" );
	deepEqual( Stem("entregas"), "entreg" );
	deepEqual( Stem("entrego"), "entreg" );
	deepEqual( Stem("entregó"), "entreg" );
	deepEqual( Stem("entregue"), "entreg" );
	deepEqual( Stem("entreguen"), "entreg" );
	deepEqual( Stem("entréguenos"), "entreguen" );
	deepEqual( Stem("entrelazadas"), "entrelaz" );
	deepEqual( Stem("entrelíneas"), "entrelin" );
	deepEqual( Stem("entren"), "entren" );
	deepEqual( Stem("entrena"), "entren" );
	deepEqual( Stem("entrenaba"), "entren" );
	deepEqual( Stem("entrenado"), "entren" );
	deepEqual( Stem("entrenador"), "entren" );
	deepEqual( Stem("entrenadores"), "entren" );
	deepEqual( Stem("entrenados"), "entren" );
	deepEqual( Stem("entrenamiento"), "entren" );
	deepEqual( Stem("entrenamientos"), "entren" );
	deepEqual( Stem("entrenan"), "entren" );
	deepEqual( Stem("entrenando"), "entren" );
	deepEqual( Stem("entrenar"), "entren" );
	deepEqual( Stem("entrenará"), "entren" );
	deepEqual( Stem("entrenarán"), "entren" );
	deepEqual( Stem("entrenarlo"), "entren" );
	deepEqual( Stem("entrenarlos"), "entren" );
	deepEqual( Stem("entrenaron"), "entren" );
	deepEqual( Stem("entrenó"), "entren" );
	deepEqual( Stem("entretejida"), "entretej" );
	deepEqual( Stem("entretener"), "entreten" );
	deepEqual( Stem("entretenían"), "entreten" );
	deepEqual( Stem("entretenimiento"), "entreten" );
	deepEqual( Stem("entretenimientos"), "entreten" );
	deepEqual( Stem("entrever"), "entrev" );
	deepEqual( Stem("entrevista"), "entrev" );
	deepEqual( Stem("entrevistaba"), "entrevist" );
	deepEqual( Stem("entrevistada"), "entrevist" );
	deepEqual( Stem("entrevistado"), "entrevist" );
	deepEqual( Stem("entrevistados"), "entrevist" );
	deepEqual( Stem("entrevistar"), "entrevist" );
	deepEqual( Stem("entrevistaron"), "entrevist" );
	deepEqual( Stem("entrevistarse"), "entrevist" );
	deepEqual( Stem("entrevistas"), "entrev" );
	deepEqual( Stem("entrevistó"), "entrevist" );
	deepEqual( Stem("entró"), "entro" );
	deepEqual( Stem("entrometiera"), "entromet" );
	deepEqual( Stem("entusiasmada"), "entusiasm" );
	deepEqual( Stem("entusiasmado"), "entusiasm" );
	deepEqual( Stem("entusiasmo"), "entusiasm" );
	deepEqual( Stem("entusiasta"), "entusiast" );
	deepEqual( Stem("entusiastas"), "entusiast" );
	deepEqual( Stem("enumera"), "enumer" );
	deepEqual( Stem("enumerará"), "enumer" );
	deepEqual( Stem("envasadora"), "envas" );
	deepEqual( Stem("envase"), "envas" );
	deepEqual( Stem("envases"), "envas" );
	deepEqual( Stem("envejecen"), "envejec" );
	deepEqual( Stem("envejecimiento"), "envejec" );
	deepEqual( Stem("envenenada"), "envenen" );
	deepEqual( Stem("envenenarla"), "envenen" );
	deepEqual( Stem("envia"), "envi" );
	deepEqual( Stem("envía"), "envi" );
	deepEqual( Stem("enviada"), "envi" );
	deepEqual( Stem("enviadas"), "envi" );
	deepEqual( Stem("enviado"), "envi" );
	deepEqual( Stem("enviados"), "envi" );
	deepEqual( Stem("enviamos"), "envi" );
	deepEqual( Stem("envían"), "envi" );
	deepEqual( Stem("enviando"), "envi" );
	deepEqual( Stem("enviar"), "envi" );
	deepEqual( Stem("enviará"), "envi" );
	deepEqual( Stem("enviarán"), "envi" );
	deepEqual( Stem("enviaría"), "envi" );
	deepEqual( Stem("enviarlas"), "envi" );
	deepEqual( Stem("enviaron"), "envi" );
	deepEqual( Stem("envidia"), "envidi" );
	deepEqual( Stem("envidiables"), "envidi" );
	deepEqual( Stem("envidiamos"), "envidi" );
	deepEqual( Stem("envidias"), "envidi" );
	deepEqual( Stem("envidiosos"), "envidi" );
	deepEqual( Stem("envíe"), "envi" );
	deepEqual( Stem("envio"), "envi" );
	deepEqual( Stem("envío"), "envi" );
	deepEqual( Stem("envió"), "envi" );
	deepEqual( Stem("envoltorio"), "envoltori" );
	deepEqual( Stem("envoltura"), "envoltur" );
	deepEqual( Stem("envolturas"), "envoltur" );
	deepEqual( Stem("envolverse"), "envolv" );
	deepEqual( Stem("envolviéndose"), "envolv" );
	deepEqual( Stem("envueltos"), "envuelt" );
	deepEqual( Stem("enyesado"), "enyes" );
	deepEqual( Stem("eory"), "eory" );
	deepEqual( Stem("epazote"), "epazot" );
	deepEqual( Stem("episcopado"), "episcop" );
	deepEqual( Stem("episcopal"), "episcopal" );
	deepEqual( Stem("episodio"), "episodi" );
	deepEqual( Stem("episodios"), "episodi" );
	deepEqual( Stem("epístola"), "epistol" );
	deepEqual( Stem("epistolar"), "epistol" );
	deepEqual( Stem("época"), "epoc" );
	deepEqual( Stem("épocas"), "epoc" );
	deepEqual( Stem("equals"), "equals" );
	deepEqual( Stem("equidad"), "equid" );
	deepEqual( Stem("equilibrada"), "equilibr" );
	deepEqual( Stem("equilibrado"), "equilibr" );
	deepEqual( Stem("equilibrar"), "equilibr" );
	deepEqual( Stem("equilibrarlos"), "equilibr" );
	deepEqual( Stem("equilibrio"), "equilibri" );
	deepEqual( Stem("equipada"), "equip" );
	deepEqual( Stem("equipado"), "equip" );
	deepEqual( Stem("equipados"), "equip" );
	deepEqual( Stem("equipaje"), "equipaj" );
	deepEqual( Stem("equipan"), "equip" );
	deepEqual( Stem("equipar"), "equip" );
	deepEqual( Stem("equipararnos"), "equipar" );
	deepEqual( Stem("equipment"), "equipment" );
	deepEqual( Stem("equipo"), "equip" );
	deepEqual( Stem("equipos"), "equip" );
	deepEqual( Stem("equisetum"), "equisetum" );
	deepEqual( Stem("equitación"), "equit" );
	deepEqual( Stem("equivale"), "equival" );
	deepEqual( Stem("equivalen"), "equival" );
	deepEqual( Stem("equivalente"), "equivalent" );
	deepEqual( Stem("equivalentes"), "equivalent" );
	deepEqual( Stem("equivoca"), "equivoc" );
	deepEqual( Stem("equivocaba"), "equivoc" );
	deepEqual( Stem("equivocaban"), "equivoc" );
	deepEqual( Stem("equivocaciones"), "equivoc" );
	deepEqual( Stem("equivocados"), "equivoc" );
	deepEqual( Stem("equivocarse"), "equivoc" );
	deepEqual( Stem("equivocó"), "equivoc" );
	deepEqual( Stem("equivoqué"), "equivoqu" );
	deepEqual( Stem("er"), "er" );
	deepEqual( Stem("era"), "era" );
	deepEqual( Stem("eramos"), "eram" );
	deepEqual( Stem("eran"), "eran" );
	deepEqual( Stem("erario"), "erari" );
	deepEqual( Stem("eres"), "eres" );
	deepEqual( Stem("erhard"), "erhard" );
	deepEqual( Stem("eric"), "eric" );
	deepEqual( Stem("erick"), "erick" );
	deepEqual( Stem("erigido"), "erig" );
	deepEqual( Stem("erika"), "erik" );
	deepEqual( Stem("ermita"), "ermit" );
	deepEqual( Stem("ernesto"), "ernest" );
	deepEqual( Stem("erogaron"), "erog" );
	deepEqual( Stem("eros"), "eros" );
	deepEqual( Stem("erosionada"), "erosion" );
	deepEqual( Stem("erosionadas"), "erosion" );
	deepEqual( Stem("eróticas"), "erot" );
	deepEqual( Stem("erraban"), "errab" );
	deepEqual( Stem("erradica"), "errad" );
	deepEqual( Stem("erradicación"), "errad" );
	deepEqual( Stem("errado"), "errad" );
	deepEqual( Stem("errática"), "errat" );
	deepEqual( Stem("erráticos"), "errat" );
	deepEqual( Stem("errónea"), "errone" );
	deepEqual( Stem("erróneamente"), "erron" );
	deepEqual( Stem("erróneo"), "errone" );
	deepEqual( Stem("error"), "error" );
	deepEqual( Stem("errores"), "error" );
	deepEqual( Stem("erupción"), "erupcion" );
	deepEqual( Stem("es"), "es" );
	deepEqual( Stem("esa"), "esa" );
	deepEqual( Stem("ésa"), "esa" );
	deepEqual( Stem("esai"), "esai" );
	deepEqual( Stem("esas"), "esas" );
	deepEqual( Stem("ésas"), "esas" );
	deepEqual( Stem("esbozo"), "esboz" );
	deepEqual( Stem("escabrosos"), "escabr" );
	deepEqual( Stem("escala"), "escal" );
	deepEqual( Stem("escalada"), "escal" );
	deepEqual( Stem("escalafón"), "escalafon" );
	deepEqual( Stem("escalante"), "escal" );
	deepEqual( Stem("escalar"), "escal" );
	deepEqual( Stem("escalera"), "escaler" );
	deepEqual( Stem("escaleras"), "escaler" );
	deepEqual( Stem("escalinata"), "escalinat" );
	deepEqual( Stem("escalón"), "escalon" );
	deepEqual( Stem("escalona"), "escalon" );
	deepEqual( Stem("escalonados"), "escalon" );
	deepEqual( Stem("escalones"), "escalon" );
	deepEqual( Stem("escamilla"), "escamill" );
	deepEqual( Stem("escampavías"), "escampav" );
	deepEqual( Stem("escándalo"), "escandal" );
	deepEqual( Stem("escándalos"), "escandal" );
	deepEqual( Stem("escandalosas"), "escandal" );
	deepEqual( Stem("escaños"), "escañ" );
	deepEqual( Stem("escapa"), "escap" );
	deepEqual( Stem("escapada"), "escap" );
	deepEqual( Stem("escapado"), "escap" );
	deepEqual( Stem("escapando"), "escap" );
	deepEqual( Stem("escapar"), "escap" );
	deepEqual( Stem("escaparon"), "escap" );
	deepEqual( Stem("escape"), "escap" );
	deepEqual( Stem("escapó"), "escap" );
	deepEqual( Stem("escarmiento"), "escarmient" );
	deepEqual( Stem("escasa"), "escas" );
	deepEqual( Stem("escasas"), "escas" );
	deepEqual( Stem("escasez"), "escasez" );
	deepEqual( Stem("escaso"), "escas" );
	deepEqual( Stem("escasos"), "escas" );
	deepEqual( Stem("escena"), "escen" );
	deepEqual( Stem("escenario"), "escenari" );
	deepEqual( Stem("escenarios"), "escenari" );
	deepEqual( Stem("escenas"), "escen" );
	deepEqual( Stem("escenciales"), "escencial" );
	deepEqual( Stem("escénico"), "escen" );
	deepEqual( Stem("escenificará"), "escenific" );
	deepEqual( Stem("escenificarán"), "escenific" );
	deepEqual( Stem("escenografía"), "escenograf" );
	deepEqual( Stem("escenógrafos"), "escenograf" );
	deepEqual( Stem("escisiones"), "escision" );
	deepEqual( Stem("esclarecer"), "esclarec" );
	deepEqual( Stem("esclarecimiento"), "esclarec" );
	deepEqual( Stem("esclarezca"), "esclarezc" );
	deepEqual( Stem("esclava"), "esclav" );
	deepEqual( Stem("esclavas"), "esclav" );
	deepEqual( Stem("esclavitud"), "esclavitud" );
	deepEqual( Stem("esclavo"), "esclav" );
	deepEqual( Stem("escoba"), "escob" );
	deepEqual( Stem("escobar"), "escob" );
	deepEqual( Stem("escobas"), "escob" );
	deepEqual( Stem("escobedo"), "escobed" );
	deepEqual( Stem("escobera"), "escober" );
	deepEqual( Stem("escocés"), "escoces" );
	deepEqual( Stem("escoge"), "escog" );
	deepEqual( Stem("escoger"), "escog" );
	deepEqual( Stem("escogería"), "escog" );
	deepEqual( Stem("escoges"), "escog" );
	deepEqual( Stem("escogido"), "escog" );
	deepEqual( Stem("escogiendo"), "escog" );
	deepEqual( Stem("escogieron"), "escog" );
	deepEqual( Stem("escogimos"), "escog" );
	deepEqual( Stem("escogió"), "escog" );
	deepEqual( Stem("escojan"), "escoj" );
	deepEqual( Stem("escolar"), "escol" );
	deepEqual( Stem("escolares"), "escolar" );
	deepEqual( Stem("escolarización"), "escolariz" );
	deepEqual( Stem("escollo"), "escoll" );
	deepEqual( Stem("escoltado"), "escolt" );
	deepEqual( Stem("escombrera"), "escombrer" );
	deepEqual( Stem("escombros"), "escombr" );
	deepEqual( Stem("escondan"), "escond" );
	deepEqual( Stem("esconde"), "escond" );
	deepEqual( Stem("esconden"), "escond" );
	deepEqual( Stem("esconder"), "escond" );
	deepEqual( Stem("esconderse"), "escond" );
	deepEqual( Stem("escondida"), "escond" );
	deepEqual( Stem("escondidas"), "escond" );
	deepEqual( Stem("escondido"), "escond" );
	deepEqual( Stem("escondió"), "escond" );
	deepEqual( Stem("escondite"), "escondit" );
	deepEqual( Stem("escondrijos"), "escondrij" );
	deepEqual( Stem("escore"), "escor" );
	deepEqual( Stem("escoriaciones"), "escori" );
	deepEqual( Stem("escorpión"), "escorpion" );
	deepEqual( Stem("escote"), "escot" );
	deepEqual( Stem("escotes"), "escot" );
	deepEqual( Stem("escriba"), "escrib" );
	deepEqual( Stem("escríbanos"), "escriban" );
	deepEqual( Stem("escribe"), "escrib" );
	deepEqual( Stem("escriben"), "escrib" );
	deepEqual( Stem("escribía"), "escrib" );
	deepEqual( Stem("escribiendo"), "escrib" );
	deepEqual( Stem("escribieran"), "escrib" );
	deepEqual( Stem("escribieron"), "escrib" );
	deepEqual( Stem("escribió"), "escrib" );
	deepEqual( Stem("escribir"), "escrib" );
	deepEqual( Stem("escribirá"), "escrib" );
	deepEqual( Stem("escribirlas"), "escrib" );
	deepEqual( Stem("escribirle"), "escrib" );
	deepEqual( Stem("escribirse"), "escrib" );
	deepEqual( Stem("escribo"), "escrib" );
	deepEqual( Stem("escrita"), "escrit" );
	deepEqual( Stem("escritas"), "escrit" );
	deepEqual( Stem("escrito"), "escrit" );
	deepEqual( Stem("escritor"), "escritor" );
	deepEqual( Stem("escritora"), "escritor" );
	deepEqual( Stem("escritores"), "escritor" );
	deepEqual( Stem("escritorio"), "escritori" );
	deepEqual( Stem("escritos"), "escrit" );
	deepEqual( Stem("escritura"), "escritur" );
	deepEqual( Stem("escrituras"), "escritur" );
	deepEqual( Stem("escrutinio"), "escrutini" );
	deepEqual( Stem("escuadra"), "escuadr" );
	deepEqual( Stem("escuadras"), "escuadr" );
	deepEqual( Stem("escuadrones"), "escuadron" );
	deepEqual( Stem("escuálidas"), "escual" );
	deepEqual( Stem("escucha"), "escuch" );
	deepEqual( Stem("escuchaba"), "escuch" );
	deepEqual( Stem("escuchaban"), "escuch" );
	deepEqual( Stem("escuchadas"), "escuch" );
	deepEqual( Stem("escuchado"), "escuch" );
	deepEqual( Stem("escuchan"), "escuch" );
	deepEqual( Stem("escuchando"), "escuch" );
	deepEqual( Stem("escuchándolas"), "escuch" );
	deepEqual( Stem("escuchar"), "escuch" );
	deepEqual( Stem("escuchará"), "escuch" );
	deepEqual( Stem("escucharán"), "escuch" );
	deepEqual( Stem("escucharla"), "escuch" );
	deepEqual( Stem("escucharlos"), "escuch" );
	deepEqual( Stem("escucharon"), "escuch" );
	deepEqual( Stem("escuche"), "escuch" );
	deepEqual( Stem("escuché"), "escuch" );
	deepEqual( Stem("escuchen"), "escuch" );
	deepEqual( Stem("escuchó"), "escuch" );
	deepEqual( Stem("escudería"), "escud" );
	deepEqual( Stem("escudo"), "escud" );
	deepEqual( Stem("escudriñan"), "escudriñ" );
	deepEqual( Stem("escuela"), "escuel" );
	deepEqual( Stem("escuelas"), "escuel" );
	deepEqual( Stem("escuetamente"), "escuet" );
	deepEqual( Stem("escultor"), "escultor" );
	deepEqual( Stem("escultórico"), "escultor" );
	deepEqual( Stem("escultura"), "escultur" );
	deepEqual( Stem("esculturas"), "escultur" );
	deepEqual( Stem("escupir"), "escup" );
	deepEqual( Stem("escurridizo"), "escurridiz" );
	deepEqual( Stem("escurridizos"), "escurridiz" );
	deepEqual( Stem("escurridos"), "escurr" );
	deepEqual( Stem("esde"), "esde" );
	deepEqual( Stem("ese"), "ese" );
	deepEqual( Stem("ése"), "ese" );
	deepEqual( Stem("esencia"), "esenci" );
	deepEqual( Stem("esencial"), "esencial" );
	deepEqual( Stem("esencialmente"), "esencial" );
	deepEqual( Stem("esfera"), "esfer" );
	deepEqual( Stem("esférico"), "esfer" );
	deepEqual( Stem("esforzamos"), "esforz" );
	deepEqual( Stem("esforzarnos"), "esforz" );
	deepEqual( Stem("esforzaron"), "esforz" );
	deepEqual( Stem("esfuercen"), "esfuerc" );
	deepEqual( Stem("esfuerzo"), "esfuerz" );
	deepEqual( Stem("esfuerzos"), "esfuerz" );
	deepEqual( Stem("esfuman"), "esfum" );
	deepEqual( Stem("esgrimía"), "esgrim" );
	deepEqual( Stem("esguince"), "esguinc" );
	deepEqual( Stem("eslabonó"), "eslabon" );
	deepEqual( Stem("eslava"), "eslav" );
	deepEqual( Stem("esmaltes"), "esmalt" );
	deepEqual( Stem("esmeralda"), "esmerald" );
	deepEqual( Stem("esmeraldas"), "esmerald" );
	deepEqual( Stem("esmeran"), "esmer" );
	deepEqual( Stem("eso"), "eso" );
	deepEqual( Stem("esos"), "esos" );
	deepEqual( Stem("ésos"), "esos" );
	deepEqual( Stem("espacial"), "espacial" );
	deepEqual( Stem("espaciales"), "espacial" );
	deepEqual( Stem("espacio"), "espaci" );
	deepEqual( Stem("espacios"), "espaci" );
	deepEqual( Stem("espada"), "espad" );
	deepEqual( Stem("espalda"), "espald" );
	deepEqual( Stem("espaldas"), "espald" );
	deepEqual( Stem("españa"), "españ" );
	deepEqual( Stem("español"), "español" );
	deepEqual( Stem("española"), "español" );
	deepEqual( Stem("españolas"), "español" );
	deepEqual( Stem("españoles"), "español" );
	deepEqual( Stem("españolitos"), "españolit" );
	deepEqual( Stem("espansión"), "espansion" );
	deepEqual( Stem("espanta"), "espant" );
	deepEqual( Stem("espantadas"), "espant" );
	deepEqual( Stem("esparcimiento"), "esparc" );
	deepEqual( Stem("esparció"), "esparc" );
	deepEqual( Stem("esparza"), "esparz" );
	deepEqual( Stem("espasmo"), "espasm" );
	deepEqual( Stem("especial"), "especial" );
	deepEqual( Stem("especiales"), "especial" );
	deepEqual( Stem("especialidad"), "especial" );
	deepEqual( Stem("especialidades"), "especial" );
	deepEqual( Stem("especialista"), "especial" );
	deepEqual( Stem("especialistas"), "especial" );
	deepEqual( Stem("especializa"), "especializ" );
	deepEqual( Stem("especialización"), "especializ" );
	deepEqual( Stem("especializada"), "especializ" );
	deepEqual( Stem("especializadas"), "especializ" );
	deepEqual( Stem("especializado"), "especializ" );
	deepEqual( Stem("especializados"), "especializ" );
	deepEqual( Stem("especialmente"), "especial" );
	deepEqual( Stem("especie"), "especi" );
	deepEqual( Stem("especies"), "especi" );
	deepEqual( Stem("especifica"), "especif" );
	deepEqual( Stem("específica"), "especif" );
	deepEqual( Stem("especificaba"), "especific" );
	deepEqual( Stem("especificaciones"), "especif" );
	deepEqual( Stem("especificado"), "especific" );
	deepEqual( Stem("específicamente"), "especif" );
	deepEqual( Stem("especifican"), "especific" );
	deepEqual( Stem("especificar"), "especific" );
	deepEqual( Stem("específicas"), "especif" );
	deepEqual( Stem("específico"), "especif" );
	deepEqual( Stem("especificó"), "especific" );
	deepEqual( Stem("específicos"), "especif" );
	deepEqual( Stem("especifiquen"), "especifiqu" );
	deepEqual( Stem("espectacular"), "espectacul" );
	deepEqual( Stem("espectaculares"), "espectacular" );
	deepEqual( Stem("espectacularmente"), "espectacular" );
	deepEqual( Stem("espectáculo"), "espectacul" );
	deepEqual( Stem("espectáculos"), "espectacul" );
	deepEqual( Stem("espectador"), "espect" );
	deepEqual( Stem("espectadores"), "espect" );
	deepEqual( Stem("espectro"), "espectr" );
	deepEqual( Stem("espectrógrafo"), "espectrograf" );
	deepEqual( Stem("espectrómetro"), "espectrometr" );
	deepEqual( Stem("espectroredioeléctrico"), "espectroredioelectr" );
	deepEqual( Stem("especulador"), "especul" );
	deepEqual( Stem("especuladores"), "especul" );
	deepEqual( Stem("especular"), "especul" );
	deepEqual( Stem("especulativos"), "especul" );
	deepEqual( Stem("especuló"), "especul" );
	deepEqual( Stem("espejismo"), "espej" );
	deepEqual( Stem("espejo"), "espej" );
	deepEqual( Stem("espera"), "esper" );
	deepEqual( Stem("esperaba"), "esper" );
	deepEqual( Stem("esperábamos"), "esper" );
	deepEqual( Stem("esperaban"), "esper" );
	deepEqual( Stem("esperada"), "esper" );
	deepEqual( Stem("esperado"), "esper" );
	deepEqual( Stem("esperados"), "esper" );
	deepEqual( Stem("esperamos"), "esper" );
	deepEqual( Stem("esperan"), "esper" );
	deepEqual( Stem("esperando"), "esper" );
	deepEqual( Stem("esperanza"), "esper" );
	deepEqual( Stem("esperanzado"), "esperanz" );
	deepEqual( Stem("esperanzados"), "esperanz" );
	deepEqual( Stem("esperanzas"), "esper" );
	deepEqual( Stem("esperar"), "esper" );
	deepEqual( Stem("esperara"), "esper" );
	deepEqual( Stem("esperará"), "esper" );
	deepEqual( Stem("esperarán"), "esper" );
	deepEqual( Stem("esperaré"), "esper" );
	deepEqual( Stem("esperaremos"), "esper" );
	deepEqual( Stem("esperaría"), "esper" );
	deepEqual( Stem("esperarlos"), "esper" );
	deepEqual( Stem("esperaron"), "esper" );
	deepEqual( Stem("esperarse"), "esper" );
	deepEqual( Stem("espere"), "esper" );
	deepEqual( Stem("esperemos"), "esper" );
	deepEqual( Stem("espero"), "esper" );
	deepEqual( Stem("esperó"), "esper" );
	deepEqual( Stem("esperpénticas"), "esperpent" );
	deepEqual( Stem("espesa"), "espes" );
	deepEqual( Stem("espesor"), "espesor" );
	deepEqual( Stem("espetar"), "espet" );
	deepEqual( Stem("espía"), "espi" );
	deepEqual( Stem("espían"), "espi" );
	deepEqual( Stem("espiando"), "espi" );
	deepEqual( Stem("espina"), "espin" );
	deepEqual( Stem("espinal"), "espinal" );
	deepEqual( Stem("espinosa"), "espin" );
	deepEqual( Stem("espinoso"), "espin" );
	deepEqual( Stem("espinoza"), "espinoz" );
	deepEqual( Stem("espionaje"), "espionaj" );
	deepEqual( Stem("espiridión"), "espiridion" );
	deepEqual( Stem("espíritu"), "espiritu" );
	deepEqual( Stem("espiritual"), "espiritual" );
	deepEqual( Stem("espirituales"), "espiritual" );
	deepEqual( Stem("espiritualidad"), "espiritual" );
	deepEqual( Stem("espiritualmente"), "espiritual" );
	deepEqual( Stem("espíritus"), "espiritus" );
	deepEqual( Stem("esplendor"), "esplendor" );
	deepEqual( Stem("esplendores"), "esplendor" );
	deepEqual( Stem("espontánea"), "espontane" );
	deepEqual( Stem("espontáneamente"), "espontan" );
	deepEqual( Stem("espontáneo"), "espontane" );
	deepEqual( Stem("esporádica"), "esporad" );
	deepEqual( Stem("esposa"), "espos" );
	deepEqual( Stem("esposas"), "espos" );
	deepEqual( Stem("esposo"), "espos" );
	deepEqual( Stem("esposos"), "espos" );
	deepEqual( Stem("espuela"), "espuel" );
	deepEqual( Stem("espuma"), "espum" );
	deepEqual( Stem("esqueleto"), "esquelet" );
	deepEqual( Stem("esquema"), "esquem" );
	deepEqual( Stem("esquemas"), "esquem" );
	deepEqual( Stem("esquer"), "esqu" );
	deepEqual( Stem("esquiar"), "esqui" );
	deepEqual( Stem("esquimal"), "esquimal" );
	deepEqual( Stem("esquina"), "esquin" );
	deepEqual( Stem("esquinas"), "esquin" );
	deepEqual( Stem("esquivar"), "esquiv" );
	deepEqual( Stem("esquivel"), "esquivel" );
	deepEqual( Stem("esquizofrenia"), "esquizofreni" );
	deepEqual( Stem("esta"), "esta" );
	deepEqual( Stem("ésta"), "esta" );
	deepEqual( Stem("está"), "esta" );
	deepEqual( Stem("estaba"), "estab" );
	deepEqual( Stem("estábamos"), "estab" );
	deepEqual( Stem("estaban"), "estab" );
	deepEqual( Stem("estabilidad"), "estabil" );
	deepEqual( Stem("estabilizar"), "estabiliz" );
	deepEqual( Stem("estable"), "establ" );
	deepEqual( Stem("establece"), "establec" );
	deepEqual( Stem("establecemos"), "establec" );
	deepEqual( Stem("establecen"), "establec" );
	deepEqual( Stem("establecer"), "establec" );
	deepEqual( Stem("establecerá"), "establec" );
	deepEqual( Stem("establecerse"), "establec" );
	deepEqual( Stem("establecía"), "establec" );
	deepEqual( Stem("establecían"), "establec" );
	deepEqual( Stem("establecida"), "establec" );
	deepEqual( Stem("establecidas"), "establec" );
	deepEqual( Stem("establecido"), "establec" );
	deepEqual( Stem("establecidos"), "establec" );
	deepEqual( Stem("estableciendo"), "establec" );
	deepEqual( Stem("establecieron"), "establec" );
	deepEqual( Stem("establecimiento"), "establec" );
	deepEqual( Stem("establecimientos"), "establec" );
	deepEqual( Stem("estableció"), "establec" );
	deepEqual( Stem("establezca"), "establezc" );
	deepEqual( Stem("establezcan"), "establezc" );
	deepEqual( Stem("estación"), "estacion" );
	deepEqual( Stem("estacionado"), "estacion" );
	deepEqual( Stem("estacionados"), "estacion" );
	deepEqual( Stem("estacionamiento"), "estacion" );
	deepEqual( Stem("estacionamientos"), "estacion" );
	deepEqual( Stem("estacionar"), "estacion" );
	deepEqual( Stem("estacionarios"), "estacionari" );
	deepEqual( Stem("estacionarse"), "estacion" );
	deepEqual( Stem("estaciones"), "estacion" );
	deepEqual( Stem("estacionó"), "estacion" );
	deepEqual( Stem("estacón"), "estacon" );
	deepEqual( Stem("estadía"), "estad" );
	deepEqual( Stem("estadio"), "estadi" );
	deepEqual( Stem("estadios"), "estadi" );
	deepEqual( Stem("estadista"), "estad" );
	deepEqual( Stem("estadistas"), "estad" );
	deepEqual( Stem("estadística"), "estadist" );
	deepEqual( Stem("estadísticas"), "estadist" );
	deepEqual( Stem("estado"), "estad" );
	deepEqual( Stem("estados"), "estad" );
	deepEqual( Stem("estadounidense"), "estadounidens" );
	deepEqual( Stem("estadounidenses"), "estadounidens" );
	deepEqual( Stem("estafan"), "estaf" );
	deepEqual( Stem("estalla"), "estall" );
	deepEqual( Stem("estallar"), "estall" );
	deepEqual( Stem("estallaría"), "estall" );
	deepEqual( Stem("estallido"), "estall" );
	deepEqual( Stem("estalló"), "estall" );
	deepEqual( Stem("estambre"), "estambr" );
	deepEqual( Stem("estamos"), "estam" );
	deepEqual( Stem("estampas"), "estamp" );
	deepEqual( Stem("estampilla"), "estampill" );
	deepEqual( Stem("estampita"), "estampit" );
	deepEqual( Stem("están"), "estan" );
	deepEqual( Stem("estancadas"), "estanc" );
	deepEqual( Stem("estancamiento"), "estanc" );
	deepEqual( Stem("estancarse"), "estanc" );
	deepEqual( Stem("estancia"), "estanci" );
	deepEqual( Stem("estancias"), "estanci" );
	deepEqual( Stem("estandar"), "estand" );
	deepEqual( Stem("estándar"), "estand" );
	deepEqual( Stem("estándares"), "estandar" );
	deepEqual( Stem("estandarizadas"), "estandariz" );
	deepEqual( Stem("estandarte"), "estandart" );
	deepEqual( Stem("estando"), "estand" );
	deepEqual( Stem("estanques"), "estanqu" );
	deepEqual( Stem("estanzuela"), "estanzuel" );
	deepEqual( Stem("estar"), "estar" );
	deepEqual( Stem("estará"), "estar" );
	deepEqual( Stem("estarán"), "estaran" );
	deepEqual( Stem("estaremos"), "estar" );
	deepEqual( Stem("estaría"), "estar" );
	deepEqual( Stem("estaríamos"), "estar" );
	deepEqual( Stem("estarían"), "estar" );
	deepEqual( Stem("estarle"), "estarl" );
	deepEqual( Stem("estarse"), "estars" );
	deepEqual( Stem("estas"), "estas" );
	deepEqual( Stem("éstas"), "estas" );
	deepEqual( Stem("estás"), "estas" );
	deepEqual( Stem("estatal"), "estatal" );
	deepEqual( Stem("estatales"), "estatal" );
	deepEqual( Stem("estatua"), "estatu" );
	deepEqual( Stem("estatuas"), "estatu" );
	deepEqual( Stem("estatura"), "estatur" );
	deepEqual( Stem("estatuto"), "estatut" );
	deepEqual( Stem("estatutos"), "estatut" );
	deepEqual( Stem("este"), "este" );
	deepEqual( Stem("éste"), "este" );
	deepEqual( Stem("esté"), "este" );
	deepEqual( Stem("esteban"), "esteb" );
	deepEqual( Stem("estelar"), "estel" );
	deepEqual( Stem("estelares"), "estelar" );
	deepEqual( Stem("estelarizado"), "estelariz" );
	deepEqual( Stem("estelarizar"), "estelariz" );
	deepEqual( Stem("estemos"), "estem" );
	deepEqual( Stem("estén"), "esten" );
	deepEqual( Stem("estéreo"), "estere" );
	deepEqual( Stem("estereotipan"), "estereotip" );
	deepEqual( Stem("esterlinas"), "esterlin" );
	deepEqual( Stem("esternón"), "esternon" );
	deepEqual( Stem("estética"), "estet" );
	deepEqual( Stem("estéticamente"), "estet" );
	deepEqual( Stem("estéticas"), "estet" );
	deepEqual( Stem("estéticos"), "estet" );
	deepEqual( Stem("estévez"), "estevez" );
	deepEqual( Stem("esthela"), "esthel" );
	deepEqual( Stem("esther"), "esther" );
	deepEqual( Stem("estigma"), "estigm" );
	deepEqual( Stem("estilo"), "estil" );
	deepEqual( Stem("estilos"), "estil" );
	deepEqual( Stem("estima"), "estim" );
	deepEqual( Stem("estimaba"), "estim" );
	deepEqual( Stem("estimación"), "estim" );
	deepEqual( Stem("estimaciones"), "estim" );
	deepEqual( Stem("estimada"), "estim" );
	deepEqual( Stem("estimado"), "estim" );
	deepEqual( Stem("estimados"), "estim" );
	deepEqual( Stem("estimamos"), "estim" );
	deepEqual( Stem("estiman"), "estim" );
	deepEqual( Stem("estimando"), "estim" );
	deepEqual( Stem("estimarás"), "estim" );
	deepEqual( Stem("estimaron"), "estim" );
	deepEqual( Stem("estimé"), "estim" );
	deepEqual( Stem("estimó"), "estim" );
	deepEqual( Stem("estimula"), "estimul" );
	deepEqual( Stem("estimulación"), "estimul" );
	deepEqual( Stem("estimulada"), "estimul" );
	deepEqual( Stem("estimulado"), "estimul" );
	deepEqual( Stem("estimulados"), "estimul" );
	deepEqual( Stem("estimular"), "estimul" );
	deepEqual( Stem("estimulo"), "estimul" );
	deepEqual( Stem("estímulo"), "estimul" );
	deepEqual( Stem("estímulos"), "estimul" );
	deepEqual( Stem("estipula"), "estipul" );
	deepEqual( Stem("estipulaba"), "estipul" );
	deepEqual( Stem("estira"), "estir" );
	deepEqual( Stem("estiró"), "estir" );
	deepEqual( Stem("estirón"), "estiron" );
	deepEqual( Stem("estirpe"), "estirp" );
	deepEqual( Stem("esto"), "esto" );
	deepEqual( Stem("ésto"), "esto" );
	deepEqual( Stem("estocada"), "estoc" );
	deepEqual( Stem("estocolmo"), "estocolm" );
	deepEqual( Stem("estomacal"), "estomacal" );
	deepEqual( Stem("estómago"), "estomag" );
	deepEqual( Stem("estopa"), "estop" );
	deepEqual( Stem("estoperoles"), "estoperol" );
	deepEqual( Stem("estorba"), "estorb" );
	deepEqual( Stem("estorbaba"), "estorb" );
	deepEqual( Stem("estorbe"), "estorb" );
	deepEqual( Stem("estos"), "estos" );
	deepEqual( Stem("éstos"), "estos" );
	deepEqual( Stem("estoy"), "estoy" );
	deepEqual( Stem("estrada"), "estrad" );
	deepEqual( Stem("estrado"), "estrad" );
	deepEqual( Stem("estragos"), "estrag" );
	deepEqual( Stem("estrangulado"), "estrangul" );
	deepEqual( Stem("estrasburgo"), "estrasburg" );
	deepEqual( Stem("estratagemas"), "estratagem" );
	deepEqual( Stem("estratega"), "estrateg" );
	deepEqual( Stem("estrategia"), "estrategi" );
	deepEqual( Stem("estrategias"), "estrategi" );
	deepEqual( Stem("estratégica"), "estrateg" );
	deepEqual( Stem("estratégicas"), "estrateg" );
	deepEqual( Stem("estratégico"), "estrateg" );
	deepEqual( Stem("estratégicos"), "estrateg" );
	deepEqual( Stem("estratos"), "estrat" );
	deepEqual( Stem("estratosféricas"), "estratosfer" );
	deepEqual( Stem("estrecha"), "estrech" );
	deepEqual( Stem("estrechándose"), "estrech" );
	deepEqual( Stem("estrechar"), "estrech" );
	deepEqual( Stem("estrecharon"), "estrech" );
	deepEqual( Stem("estrechas"), "estrech" );
	deepEqual( Stem("estrecho"), "estrech" );
	deepEqual( Stem("estrechó"), "estrech" );
	deepEqual( Stem("estrechos"), "estrech" );
	deepEqual( Stem("estrella"), "estrell" );
	deepEqual( Stem("estrellado"), "estrell" );
	deepEqual( Stem("estrellamos"), "estrell" );
	deepEqual( Stem("estrellar"), "estrell" );
	deepEqual( Stem("estrellas"), "estrell" );
	deepEqual( Stem("estrelló"), "estrell" );
	deepEqual( Stem("estremeció"), "estremec" );
	deepEqual( Stem("estrena"), "estren" );
	deepEqual( Stem("estrenado"), "estren" );
	deepEqual( Stem("estrenan"), "estren" );
	deepEqual( Stem("estrenando"), "estren" );
	deepEqual( Stem("estrenándose"), "estren" );
	deepEqual( Stem("estrenar"), "estren" );
	deepEqual( Stem("estrenará"), "estren" );
	deepEqual( Stem("estrenaron"), "estren" );
	deepEqual( Stem("estreno"), "estren" );
	deepEqual( Stem("estrenó"), "estren" );
	deepEqual( Stem("estrenos"), "estren" );
	deepEqual( Stem("estrépito"), "estrepit" );
	deepEqual( Stem("estrepitosa"), "estrepit" );
	deepEqual( Stem("estrepitosamente"), "estrepit" );
	deepEqual( Stem("estribo"), "estrib" );
	deepEqual( Stem("estricta"), "estrict" );
	deepEqual( Stem("estrictamente"), "estrict" );
	deepEqual( Stem("estrictas"), "estrict" );
	deepEqual( Stem("estricto"), "estrict" );
	deepEqual( Stem("estrictos"), "estrict" );
	deepEqual( Stem("estropeadas"), "estrop" );
	deepEqual( Stem("estropear"), "estrop" );
	deepEqual( Stem("estructura"), "estructur" );
	deepEqual( Stem("estructuración"), "estructur" );
	deepEqual( Stem("estructural"), "estructural" );
	deepEqual( Stem("estructuras"), "estructur" );
	deepEqual( Stem("estruendo"), "estruend" );
	deepEqual( Stem("estudia"), "estudi" );
	deepEqual( Stem("estudiaba"), "estudi" );
	deepEqual( Stem("estudiaban"), "estudi" );
	deepEqual( Stem("estudiados"), "estudi" );
	deepEqual( Stem("estudian"), "estudi" );
	deepEqual( Stem("estudiando"), "estudi" );
	deepEqual( Stem("estudiante"), "estudi" );
	deepEqual( Stem("estudiantes"), "estudi" );
	deepEqual( Stem("estudiantil"), "estudiantil" );
	deepEqual( Stem("estudiantiles"), "estudiantil" );
	deepEqual( Stem("estudiar"), "estudi" );
	deepEqual( Stem("estudiará"), "estudi" );
	deepEqual( Stem("estudiaron"), "estudi" );
	deepEqual( Stem("estudiarse"), "estudi" );
	deepEqual( Stem("estudie"), "estudi" );
	deepEqual( Stem("estudié"), "estudi" );
	deepEqual( Stem("estudien"), "estudi" );
	deepEqual( Stem("estudio"), "estudi" );
	deepEqual( Stem("estudió"), "estud" );
	deepEqual( Stem("estudios"), "estudi" );
	deepEqual( Stem("estudioso"), "estudi" );
	deepEqual( Stem("estudiosos"), "estudi" );
	deepEqual( Stem("estupefacción"), "estupefaccion" );
	deepEqual( Stem("estupefacta"), "estupefact" );
	deepEqual( Stem("estupendo"), "estupend" );
	deepEqual( Stem("estúpida"), "estup" );
	deepEqual( Stem("estupideces"), "estupidec" );
	deepEqual( Stem("estuve"), "estuv" );
	deepEqual( Stem("estuviera"), "estuv" );
	deepEqual( Stem("estuviéramos"), "estuv" );
	deepEqual( Stem("estuvieran"), "estuv" );
	deepEqual( Stem("estuvieron"), "estuv" );
	deepEqual( Stem("estuviese"), "estuv" );
	deepEqual( Stem("estuvimos"), "estuv" );
	deepEqual( Stem("estuvo"), "estuv" );
	deepEqual( Stem("etapa"), "etap" );
	deepEqual( Stem("etapas"), "etap" );
	deepEqual( Stem("etc"), "etc" );
	deepEqual( Stem("etcétera"), "etceter" );
	deepEqual( Stem("etchohuaquila"), "etchohuaquil" );
	deepEqual( Stem("eternidad"), "etern" );
	deepEqual( Stem("eterno"), "etern" );
	deepEqual( Stem("ethernet"), "ethernet" );
	deepEqual( Stem("ethnology"), "ethnology" );
	deepEqual( Stem("ética"), "etic" );
	deepEqual( Stem("éticas"), "etic" );
	deepEqual( Stem("etienne"), "etienn" );
	deepEqual( Stem("etíope"), "etiop" );
	deepEqual( Stem("etiopía"), "etiop" );
	deepEqual( Stem("etiqueta"), "etiquet" );
	deepEqual( Stem("etiquetas"), "etiquet" );
	deepEqual( Stem("etnia"), "etni" );
	deepEqual( Stem("étnica"), "etnic" );
	deepEqual( Stem("étnicas"), "etnic" );
	deepEqual( Stem("étnico"), "etnic" );
	deepEqual( Stem("etnografía"), "etnograf" );
	deepEqual( Stem("etnohistórico"), "etnohistor" );
	deepEqual( Stem("ettiene"), "ettien" );
	deepEqual( Stem("eu"), "eu" );
	deepEqual( Stem("eucalipto"), "eucalipt" );
	deepEqual( Stem("eudelio"), "eudeli" );
	deepEqual( Stem("euforia"), "eufori" );
	deepEqual( Stem("eugéne"), "eugen" );
	deepEqual( Stem("eugenia"), "eugeni" );
	deepEqual( Stem("eugenio"), "eugeni" );
	deepEqual( Stem("eugui"), "eugui" );
	deepEqual( Stem("eulalio"), "eulali" );
	deepEqual( Stem("eurípides"), "euripid" );
	deepEqual( Stem("eurobonos"), "eurobon" );
	deepEqual( Stem("europa"), "europ" );
	deepEqual( Stem("europea"), "europe" );
	deepEqual( Stem("europeas"), "europ" );
	deepEqual( Stem("europeo"), "europe" );
	deepEqual( Stem("europeos"), "europe" );
	deepEqual( Stem("eurovisión"), "eurovision" );
	deepEqual( Stem("eusebio"), "eusebi" );
	deepEqual( Stem("eustolio"), "eustoli" );
	deepEqual( Stem("eva"), "eva" );
	deepEqual( Stem("evacuación"), "evacu" );
	deepEqual( Stem("evacuados"), "evacu" );
	deepEqual( Stem("evacuan"), "evacu" );
	deepEqual( Stem("evacuar"), "evacu" );
	deepEqual( Stem("evadía"), "evad" );
	deepEqual( Stem("evadió"), "evad" );
	deepEqual( Stem("evadir"), "evad" );
	deepEqual( Stem("evaluacion"), "evaluacion" );
	deepEqual( Stem("evaluación"), "evalu" );
	deepEqual( Stem("evaluaciones"), "evalu" );
	deepEqual( Stem("evaluado"), "evalu" );
	deepEqual( Stem("evaluador"), "evalu" );
	deepEqual( Stem("evaluados"), "evalu" );
	deepEqual( Stem("evalúan"), "evalu" );
	deepEqual( Stem("evaluar"), "evalu" );
	deepEqual( Stem("evaluarán"), "evalu" );
	deepEqual( Stem("evaluaron"), "evalu" );
	deepEqual( Stem("evangélicos"), "evangel" );
	deepEqual( Stem("evangelización"), "evangeliz" );
	deepEqual( Stem("evangelizan"), "evangeliz" );
	deepEqual( Stem("evangelizar"), "evangeliz" );
	deepEqual( Stem("evasión"), "evasion" );
	deepEqual( Stem("evasivas"), "evas" );
	deepEqual( Stem("evasivo"), "evas" );
	deepEqual( Stem("evento"), "event" );
	deepEqual( Stem("eventos"), "event" );
	deepEqual( Stem("eventual"), "eventual" );
	deepEqual( Stem("eventuales"), "eventual" );
	deepEqual( Stem("eventualmente"), "eventual" );
	deepEqual( Stem("ever"), "ever" );
	deepEqual( Stem("everardo"), "everard" );
	deepEqual( Stem("everman"), "everm" );
	deepEqual( Stem("everton"), "everton" );
	deepEqual( Stem("evidencia"), "evident" );
	deepEqual( Stem("evidenciado"), "evidenci" );
	deepEqual( Stem("evidencian"), "evidenci" );
	deepEqual( Stem("evidencias"), "evident" );
	deepEqual( Stem("evidenció"), "evidenc" );
	deepEqual( Stem("evidente"), "evident" );
	deepEqual( Stem("evidentemente"), "evident" );
	deepEqual( Stem("evidentes"), "evident" );
	deepEqual( Stem("evita"), "evit" );
	deepEqual( Stem("evitado"), "evit" );
	deepEqual( Stem("evitan"), "evit" );
	deepEqual( Stem("evitando"), "evit" );
	deepEqual( Stem("evitar"), "evit" );
	deepEqual( Stem("evitara"), "evit" );
	deepEqual( Stem("evitará"), "evit" );
	deepEqual( Stem("evitaremos"), "evit" );
	deepEqual( Stem("evitarla"), "evit" );
	deepEqual( Stem("evitarle"), "evit" );
	deepEqual( Stem("evitarlo"), "evit" );
	deepEqual( Stem("evitarse"), "evit" );
	deepEqual( Stem("evite"), "evit" );
	deepEqual( Stem("eviten"), "evit" );
	deepEqual( Stem("evitó"), "evit" );
	deepEqual( Stem("evocación"), "evoc" );
	deepEqual( Stem("evolución"), "evolu" );
	deepEqual( Stem("evolucionando"), "evolucion" );
	deepEqual( Stem("evolucionara"), "evolucion" );
	deepEqual( Stem("evolucionarios"), "evolucionari" );
	deepEqual( Stem("evolucionaron"), "evolucion" );
	deepEqual( Stem("evolucionen"), "evolucion" );
	deepEqual( Stem("ex"), "ex" );
	deepEqual( Stem("exacta"), "exact" );
	deepEqual( Stem("exactamente"), "exact" );
	deepEqual( Stem("exactas"), "exact" );
	deepEqual( Stem("exactitud"), "exactitud" );
	deepEqual( Stem("exacto"), "exact" );
	deepEqual( Stem("exageraciones"), "exager" );
	deepEqual( Stem("exagerada"), "exager" );
	deepEqual( Stem("exagerado"), "exager" );
	deepEqual( Stem("exagerados"), "exager" );
	deepEqual( Stem("exageraron"), "exager" );
	deepEqual( Stem("exalumnas"), "exalumn" );
	deepEqual( Stem("exalumnos"), "exalumn" );
	deepEqual( Stem("examen"), "exam" );
	deepEqual( Stem("exámenes"), "examen" );
	deepEqual( Stem("examina"), "examin" );
	deepEqual( Stem("examinado"), "examin" );
	deepEqual( Stem("examinados"), "examin" );
	deepEqual( Stem("examinando"), "examin" );
	deepEqual( Stem("examinar"), "examin" );
	deepEqual( Stem("examinen"), "examin" );
	deepEqual( Stem("examinó"), "examin" );
	deepEqual( Stem("exc"), "exc" );
	deepEqual( Stem("excandidato"), "excandidat" );
	deepEqual( Stem("excatedrático"), "excatedrat" );
	deepEqual( Stem("excavaciones"), "excav" );
	deepEqual( Stem("excavando"), "excav" );
	deepEqual( Stem("excede"), "exced" );
	deepEqual( Stem("exceden"), "exced" );
	deepEqual( Stem("excedernos"), "exced" );
	deepEqual( Stem("excediendo"), "exced" );
	deepEqual( Stem("excedieron"), "exced" );
	deepEqual( Stem("excel"), "excel" );
	deepEqual( Stem("excelencia"), "excelent" );
	deepEqual( Stem("excelente"), "excelent" );
	deepEqual( Stem("excelentemente"), "excelent" );
	deepEqual( Stem("excelentes"), "excelent" );
	deepEqual( Stem("excelsa"), "excels" );
	deepEqual( Stem("excélsior"), "excelsior" );
	deepEqual( Stem("excepción"), "excepcion" );
	deepEqual( Stem("excepcional"), "excepcional" );
	deepEqual( Stem("excepcionales"), "excepcional" );
	deepEqual( Stem("excepciones"), "excepcion" );
	deepEqual( Stem("excepto"), "except" );
	deepEqual( Stem("excesiva"), "exces" );
	deepEqual( Stem("excesivamente"), "exces" );
	deepEqual( Stem("excesivo"), "exces" );
	deepEqual( Stem("excesivos"), "exces" );
	deepEqual( Stem("exceso"), "exces" );
	deepEqual( Stem("excesos"), "exces" );
	deepEqual( Stem("exchange"), "exchang" );
	deepEqual( Stem("excita"), "excit" );
	deepEqual( Stem("excitación"), "excit" );
	deepEqual( Stem("excitan"), "excit" );
	deepEqual( Stem("excitante"), "excit" );
	deepEqual( Stem("excitantes"), "excit" );
	deepEqual( Stem("excitarse"), "excit" );
	deepEqual( Stem("exclama"), "exclam" );
	deepEqual( Stem("exclamación"), "exclam" );
	deepEqual( Stem("exclamó"), "exclam" );
	deepEqual( Stem("excluidos"), "exclu" );
	deepEqual( Stem("exclusión"), "exclusion" );
	deepEqual( Stem("exclusiva"), "exclus" );
	deepEqual( Stem("exclusivamente"), "exclus" );
	deepEqual( Stem("exclusivas"), "exclus" );
	deepEqual( Stem("exclusividad"), "exclus" );
	deepEqual( Stem("exclusividades"), "exclus" );
	deepEqual( Stem("exclusivo"), "exclus" );
	deepEqual( Stem("exclusivos"), "exclus" );
	deepEqual( Stem("excluyendo"), "exclu" );
	deepEqual( Stem("excolega"), "excoleg" );
	deepEqual( Stem("excomunión"), "excomunion" );
	deepEqual( Stem("excursiones"), "excursion" );
	deepEqual( Stem("excusarse"), "excus" );
	deepEqual( Stem("excusas"), "excus" );
	deepEqual( Stem("exención"), "exencion" );
	deepEqual( Stem("exenta"), "exent" );
	deepEqual( Stem("exento"), "exent" );
	deepEqual( Stem("exhala"), "exhal" );
	deepEqual( Stem("exhaustiva"), "exhaust" );
	deepEqual( Stem("exhibe"), "exhib" );
	deepEqual( Stem("exhiben"), "exhib" );
	deepEqual( Stem("exhibía"), "exhib" );
	deepEqual( Stem("exhibición"), "exhibicion" );
	deepEqual( Stem("exhibiciones"), "exhibicion" );
	deepEqual( Stem("exhibida"), "exhib" );
	deepEqual( Stem("exhibidas"), "exhib" );
	deepEqual( Stem("exhibido"), "exhib" );
	deepEqual( Stem("exhibiendo"), "exhib" );
	deepEqual( Stem("exhibiera"), "exhib" );
	deepEqual( Stem("exhibiere"), "exhibier" );
	deepEqual( Stem("exhibieren"), "exhibier" );
	deepEqual( Stem("exhibimos"), "exhib" );
	deepEqual( Stem("exhibió"), "exhib" );
	deepEqual( Stem("exhibirá"), "exhib" );
	deepEqual( Stem("exhibirán"), "exhib" );
	deepEqual( Stem("exhibirse"), "exhib" );
	deepEqual( Stem("exhoneración"), "exhoner" );
	deepEqual( Stem("exhorta"), "exhort" );
	deepEqual( Stem("exhortaban"), "exhort" );
	deepEqual( Stem("exhortan"), "exhort" );
	deepEqual( Stem("exhortando"), "exhort" );
	deepEqual( Stem("exhorto"), "exhort" );
	deepEqual( Stem("exhortó"), "exhort" );
	deepEqual( Stem("exige"), "exig" );
	deepEqual( Stem("exigen"), "exig" );
	deepEqual( Stem("exigencia"), "exigent" );
	deepEqual( Stem("exigencias"), "exigent" );
	deepEqual( Stem("exigente"), "exigent" );
	deepEqual( Stem("exigentes"), "exigent" );
	deepEqual( Stem("exigían"), "exig" );
	deepEqual( Stem("exigida"), "exig" );
	deepEqual( Stem("exigido"), "exig" );
	deepEqual( Stem("exigiendo"), "exig" );
	deepEqual( Stem("exigieran"), "exig" );
	deepEqual( Stem("exigieron"), "exig" );
	deepEqual( Stem("exigimos"), "exig" );
	deepEqual( Stem("exigió"), "exig" );
	deepEqual( Stem("exigir"), "exig" );
	deepEqual( Stem("exigira"), "exigir" );
	deepEqual( Stem("exigirá"), "exig" );
	deepEqual( Stem("exigiría"), "exig" );
	deepEqual( Stem("exigirle"), "exig" );
	deepEqual( Stem("exigirles"), "exig" );
	deepEqual( Stem("exigirse"), "exig" );
	deepEqual( Stem("exija"), "exij" );
	deepEqual( Stem("exijan"), "exij" );
	deepEqual( Stem("exilio"), "exili" );
	deepEqual( Stem("exime"), "exim" );
	deepEqual( Stem("eximir"), "exim" );
	deepEqual( Stem("eximirlos"), "exim" );
	deepEqual( Stem("exista"), "exist" );
	deepEqual( Stem("existan"), "exist" );
	deepEqual( Stem("existe"), "exist" );
	deepEqual( Stem("existen"), "exist" );
	deepEqual( Stem("existencia"), "existent" );
	deepEqual( Stem("existente"), "existent" );
	deepEqual( Stem("existentes"), "existent" );
	deepEqual( Stem("existía"), "exist" );
	deepEqual( Stem("existían"), "exist" );
	deepEqual( Stem("existido"), "exist" );
	deepEqual( Stem("existiendo"), "exist" );
	deepEqual( Stem("existió"), "exist" );
	deepEqual( Stem("existir"), "exist" );
	deepEqual( Stem("existirán"), "exist" );
	deepEqual( Stem("exito"), "exit" );
	deepEqual( Stem("éxito"), "exit" );
	deepEqual( Stem("éxitos"), "exit" );
	deepEqual( Stem("exitosa"), "exit" );
	deepEqual( Stem("exitosamente"), "exit" );
	deepEqual( Stem("exitosas"), "exit" );
	deepEqual( Stem("exitoso"), "exit" );
	deepEqual( Stem("exitosos"), "exit" );
	deepEqual( Stem("éxodo"), "exod" );
	deepEqual( Stem("exonera"), "exoner" );
	deepEqual( Stem("exóticas"), "exot" );
	deepEqual( Stem("exoticos"), "exot" );
	deepEqual( Stem("exóticos"), "exot" );
	deepEqual( Stem("expander"), "expand" );
	deepEqual( Stem("expandera"), "expander" );
	deepEqual( Stem("expandido"), "expand" );
	deepEqual( Stem("expandieron"), "expand" );
	deepEqual( Stem("expandirán"), "expand" );
	deepEqual( Stem("expandirse"), "expand" );
	deepEqual( Stem("expansion"), "expansion" );
	deepEqual( Stem("expansión"), "expansion" );
	deepEqual( Stem("expansiva"), "expans" );
	deepEqual( Stem("expectación"), "expect" );
	deepEqual( Stem("expectativa"), "expect" );
	deepEqual( Stem("expectativas"), "expect" );
	deepEqual( Stem("expedición"), "expedicion" );
	deepEqual( Stem("expedidas"), "exped" );
	deepEqual( Stem("expediente"), "expedient" );
	deepEqual( Stem("expedientes"), "expedient" );
	deepEqual( Stem("expedir"), "exped" );
	deepEqual( Stem("expedirse"), "exped" );
	deepEqual( Stem("expedito"), "expedit" );
	deepEqual( Stem("expenden"), "expend" );
	deepEqual( Stem("expendio"), "expendi" );
	deepEqual( Stem("experiencia"), "experient" );
	deepEqual( Stem("experiencias"), "experient" );
	deepEqual( Stem("experimenta"), "experiment" );
	deepEqual( Stem("experimentación"), "experiment" );
	deepEqual( Stem("experimentadas"), "experiment" );
	deepEqual( Stem("experimentado"), "experiment" );
	deepEqual( Stem("experimentados"), "experiment" );
	deepEqual( Stem("experimental"), "experimental" );
	deepEqual( Stem("experimentar"), "experiment" );
	deepEqual( Stem("experimentarse"), "experiment" );
	deepEqual( Stem("experimento"), "experiment" );
	deepEqual( Stem("experimentó"), "experiment" );
	deepEqual( Stem("experto"), "expert" );
	deepEqual( Stem("expertos"), "expert" );
	deepEqual( Stem("expidan"), "expid" );
	deepEqual( Stem("expide"), "expid" );
	deepEqual( Stem("expidieron"), "expid" );
	deepEqual( Stem("expira"), "expir" );
	deepEqual( Stem("expirar"), "expir" );
	deepEqual( Stem("explanada"), "explan" );
	deepEqual( Stem("explica"), "explic" );
	deepEqual( Stem("explicaban"), "explic" );
	deepEqual( Stem("explicación"), "explic" );
	deepEqual( Stem("explicaciones"), "explic" );
	deepEqual( Stem("explicado"), "explic" );
	deepEqual( Stem("explicamos"), "explic" );
	deepEqual( Stem("explican"), "explic" );
	deepEqual( Stem("explicando"), "explic" );
	deepEqual( Stem("explicar"), "explic" );
	deepEqual( Stem("explicara"), "explic" );
	deepEqual( Stem("explicará"), "explic" );
	deepEqual( Stem("explicarles"), "explic" );
	deepEqual( Stem("explicarlo"), "explic" );
	deepEqual( Stem("explicaron"), "explic" );
	deepEqual( Stem("explicó"), "explic" );
	deepEqual( Stem("explique"), "expliqu" );
	deepEqual( Stem("explora"), "explor" );
	deepEqual( Stem("exploraban"), "explor" );
	deepEqual( Stem("exploración"), "explor" );
	deepEqual( Stem("explorado"), "explor" );
	deepEqual( Stem("exploran"), "explor" );
	deepEqual( Stem("explorar"), "explor" );
	deepEqual( Stem("explosión"), "explosion" );
	deepEqual( Stem("explosiva"), "explos" );
	deepEqual( Stem("explosividad"), "explos" );
	deepEqual( Stem("explosivo"), "explos" );
	deepEqual( Stem("explosivos"), "explos" );
	deepEqual( Stem("explotación"), "explot" );
	deepEqual( Stem("explotado"), "explot" );
	deepEqual( Stem("explotan"), "explot" );
	deepEqual( Stem("explotar"), "explot" );
	deepEqual( Stem("explotará"), "explot" );
	deepEqual( Stem("explotarse"), "explot" );
	deepEqual( Stem("explotó"), "explot" );
	deepEqual( Stem("expo"), "expo" );
	deepEqual( Stem("expondrá"), "expondr" );
	deepEqual( Stem("expondrán"), "expondran" );
	deepEqual( Stem("expondremos"), "expondr" );
	deepEqual( Stem("expone"), "expon" );
	deepEqual( Stem("exponentes"), "exponent" );
	deepEqual( Stem("exponer"), "expon" );
	deepEqual( Stem("exponernos"), "expon" );
	deepEqual( Stem("exponerse"), "expon" );
	deepEqual( Stem("exponga"), "expong" );
	deepEqual( Stem("expongan"), "expong" );
	deepEqual( Stem("exponían"), "expon" );
	deepEqual( Stem("exponiéndose"), "expon" );
	deepEqual( Stem("expoplaza"), "expoplaz" );
	deepEqual( Stem("exporta"), "export" );
	deepEqual( Stem("exportación"), "export" );
	deepEqual( Stem("exportaciones"), "export" );
	deepEqual( Stem("exportado"), "export" );
	deepEqual( Stem("exportador"), "export" );
	deepEqual( Stem("exportadoras"), "export" );
	deepEqual( Stem("exportadores"), "export" );
	deepEqual( Stem("exportados"), "export" );
	deepEqual( Stem("exportamos"), "export" );
	deepEqual( Stem("exportan"), "export" );
	deepEqual( Stem("exportando"), "export" );
	deepEqual( Stem("exportar"), "export" );
	deepEqual( Stem("exporters"), "exporters" );
	deepEqual( Stem("exportó"), "export" );
	deepEqual( Stem("exposición"), "exposicion" );
	deepEqual( Stem("exposiciones"), "exposicion" );
	deepEqual( Stem("expresa"), "expres" );
	deepEqual( Stem("expresada"), "expres" );
	deepEqual( Stem("expresadas"), "expres" );
	deepEqual( Stem("expresado"), "expres" );
	deepEqual( Stem("expresamente"), "expres" );
	deepEqual( Stem("expresan"), "expres" );
	deepEqual( Stem("expresando"), "expres" );
	deepEqual( Stem("expresar"), "expres" );
	deepEqual( Stem("expresaron"), "expres" );
	deepEqual( Stem("expresarse"), "expres" );
	deepEqual( Stem("expresé"), "expres" );
	deepEqual( Stem("expresidentes"), "expresident" );
	deepEqual( Stem("expresión"), "expresion" );
	deepEqual( Stem("expresiones"), "expresion" );
	deepEqual( Stem("expresiva"), "expres" );
	deepEqual( Stem("expreso"), "expres" );
	deepEqual( Stem("expresó"), "expres" );
	deepEqual( Stem("express"), "express" );
	deepEqual( Stem("expropiar"), "expropi" );
	deepEqual( Stem("expuesta"), "expuest" );
	deepEqual( Stem("expuesto"), "expuest" );
	deepEqual( Stem("expuestos"), "expuest" );
	deepEqual( Stem("expulsada"), "expuls" );
	deepEqual( Stem("expulsado"), "expuls" );
	deepEqual( Stem("expulsados"), "expuls" );
	deepEqual( Stem("expulsar"), "expuls" );
	deepEqual( Stem("expulsarlo"), "expuls" );
	deepEqual( Stem("expulsarme"), "expuls" );
	deepEqual( Stem("expulsaron"), "expuls" );
	deepEqual( Stem("expulsión"), "expulsion" );
	deepEqual( Stem("expusiera"), "expus" );
	deepEqual( Stem("expusieron"), "expus" );
	deepEqual( Stem("expuso"), "expus" );
	deepEqual( Stem("exquisitamente"), "exquisit" );
	deepEqual( Stem("exquisiteces"), "exquisitec" );
	deepEqual( Stem("exquisitos"), "exquisit" );
	deepEqual( Stem("exsecretario"), "exsecretari" );
	deepEqual( Stem("extendemos"), "extend" );
	deepEqual( Stem("extender"), "extend" );
	deepEqual( Stem("extenderá"), "extend" );
	deepEqual( Stem("extenderse"), "extend" );
	deepEqual( Stem("extendido"), "extend" );
	deepEqual( Stem("extendieron"), "extend" );
	deepEqual( Stem("extendió"), "extend" );
	deepEqual( Stem("extensa"), "extens" );
	deepEqual( Stem("extensas"), "extens" );
	deepEqual( Stem("extensión"), "extension" );
	deepEqual( Stem("extensiones"), "extension" );
	deepEqual( Stem("extensivo"), "extens" );
	deepEqual( Stem("extenso"), "extens" );
	deepEqual( Stem("extenuación"), "extenu" );
	deepEqual( Stem("extenuar"), "extenu" );
	deepEqual( Stem("exterior"), "exterior" );
	deepEqual( Stem("exteriores"), "exterior" );
	deepEqual( Stem("externa"), "extern" );
	deepEqual( Stem("externado"), "extern" );
	deepEqual( Stem("externaron"), "extern" );
	deepEqual( Stem("externas"), "extern" );
	deepEqual( Stem("externo"), "extern" );
	deepEqual( Stem("externó"), "extern" );
	deepEqual( Stem("externos"), "extern" );
	deepEqual( Stem("extiendan"), "extiend" );
	deepEqual( Stem("extiende"), "extiend" );
	deepEqual( Stem("extienden"), "extiend" );
	deepEqual( Stem("extinción"), "extincion" );
	deepEqual( Stem("extinguidores"), "extinguidor" );
	deepEqual( Stem("extinta"), "extint" );
	deepEqual( Stem("extirpar"), "extirp" );
	deepEqual( Stem("extirparon"), "extirp" );
	deepEqual( Stem("extorsionando"), "extorsion" );
	deepEqual( Stem("extorsionar"), "extorsion" );
	deepEqual( Stem("extorsionaron"), "extorsion" );
	deepEqual( Stem("extorsiones"), "extorsion" );
	deepEqual( Stem("extosionando"), "extosion" );
	deepEqual( Stem("extra"), "extra" );
	deepEqual( Stem("extrabajadores"), "extrabaj" );
	deepEqual( Stem("extracción"), "extraccion" );
	deepEqual( Stem("extracto"), "extract" );
	deepEqual( Stem("extradición"), "extradicion" );
	deepEqual( Stem("extraer"), "extra" );
	deepEqual( Stem("extraerle"), "extra" );
	deepEqual( Stem("extraescolar"), "extraescol" );
	deepEqual( Stem("extraída"), "extraid" );
	deepEqual( Stem("extraído"), "extraid" );
	deepEqual( Stem("extrajo"), "extraj" );
	deepEqual( Stem("extraña"), "extrañ" );
	deepEqual( Stem("extrañaba"), "extrañ" );
	deepEqual( Stem("extrañados"), "extrañ" );
	deepEqual( Stem("extrañas"), "extrañ" );
	deepEqual( Stem("extrañe"), "extrañ" );
	deepEqual( Stem("extrañeza"), "extrañez" );
	deepEqual( Stem("extranjera"), "extranjer" );
	deepEqual( Stem("extranjeras"), "extranjer" );
	deepEqual( Stem("extranjero"), "extranjer" );
	deepEqual( Stem("extranjeros"), "extranjer" );
	deepEqual( Stem("extraño"), "extrañ" );
	deepEqual( Stem("extraños"), "extrañ" );
	deepEqual( Stem("extraoficial"), "extraoficial" );
	deepEqual( Stem("extraoficiales"), "extraoficial" );
	deepEqual( Stem("extraoficialmente"), "extraoficial" );
	deepEqual( Stem("extraordinaria"), "extraordinari" );
	deepEqual( Stem("extraordinariamente"), "extraordinari" );
	deepEqual( Stem("extraordinarias"), "extraordinari" );
	deepEqual( Stem("extraordinario"), "extraordinari" );
	deepEqual( Stem("extraordinarios"), "extraordinari" );
	deepEqual( Stem("extras"), "extras" );
	deepEqual( Stem("extraterrestres"), "extraterrestr" );
	deepEqual( Stem("extravagantes"), "extravag" );
	deepEqual( Stem("extraviadas"), "extravi" );
	deepEqual( Stem("extraviado"), "extravi" );
	deepEqual( Stem("extravío"), "extravi" );
	deepEqual( Stem("extravió"), "extrav" );
	deepEqual( Stem("extrema"), "extrem" );
	deepEqual( Stem("extremadamente"), "extrem" );
	deepEqual( Stem("extremo"), "extrem" );
	deepEqual( Stem("extremos"), "extrem" );
	deepEqual( Stem("exvotos"), "exvot" );
	deepEqual( Stem("exxon"), "exxon" );
	deepEqual( Stem("eye"), "eye" );
	deepEqual( Stem("ezeta"), "ezet" );
	deepEqual( Stem("f"), "f" );
	deepEqual( Stem("fabián"), "fabian" );
	deepEqual( Stem("fabiana"), "fabian" );
	deepEqual( Stem("fabio"), "fabi" );
	deepEqual( Stem("fabrica"), "fabric" );
	deepEqual( Stem("fábrica"), "fabric" );
	deepEqual( Stem("fabricación"), "fabric" );
	deepEqual( Stem("fabricadas"), "fabric" );
	deepEqual( Stem("fabricado"), "fabric" );
	deepEqual( Stem("fabricante"), "fabric" );
	deepEqual( Stem("fabricantes"), "fabric" );
	deepEqual( Stem("fabricar"), "fabric" );
	deepEqual( Stem("fabricará"), "fabric" );
	deepEqual( Stem("fabricarla"), "fabric" );
	deepEqual( Stem("fábricas"), "fabric" );
	deepEqual( Stem("fabricó"), "fabric" );
	deepEqual( Stem("fabrique"), "fabriqu" );
	deepEqual( Stem("fabulosas"), "fabul" );
	deepEqual( Stem("fabuloso"), "fabul" );
	deepEqual( Stem("fabulosos"), "fabul" );
	deepEqual( Stem("facciones"), "faccion" );
	deepEqual( Stem("faceta"), "facet" );
	deepEqual( Stem("facha"), "fach" );
	deepEqual( Stem("fachada"), "fach" );
	deepEqual( Stem("fácil"), "facil" );
	deepEqual( Stem("fáciles"), "facil" );
	deepEqual( Stem("facilidad"), "facil" );
	deepEqual( Stem("facilidades"), "facil" );
	deepEqual( Stem("facilita"), "facilit" );
	deepEqual( Stem("facilitaba"), "facilit" );
	deepEqual( Stem("facilitados"), "facilit" );
	deepEqual( Stem("facilitando"), "facilit" );
	deepEqual( Stem("facilitar"), "facilit" );
	deepEqual( Stem("facilitará"), "facilit" );
	deepEqual( Stem("facilitarán"), "facilit" );
	deepEqual( Stem("facilitarles"), "facilit" );
	deepEqual( Stem("facilitarlos"), "facilit" );
	deepEqual( Stem("facilite"), "facilit" );
	deepEqual( Stem("faciliten"), "facilit" );
	deepEqual( Stem("fácilmente"), "facil" );
	deepEqual( Stem("factible"), "factibl" );
	deepEqual( Stem("factibles"), "factibl" );
	deepEqual( Stem("facto"), "fact" );
	deepEqual( Stem("factor"), "factor" );
	deepEqual( Stem("factorajes"), "factoraj" );
	deepEqual( Stem("factores"), "factor" );
	deepEqual( Stem("facts"), "facts" );
	deepEqual( Stem("factura"), "factur" );
	deepEqual( Stem("facturación"), "factur" );
	deepEqual( Stem("facturada"), "factur" );
	deepEqual( Stem("facturados"), "factur" );
	deepEqual( Stem("facturar"), "factur" );
	deepEqual( Stem("facturas"), "factur" );
	deepEqual( Stem("facturó"), "factur" );
	deepEqual( Stem("faculta"), "facult" );
	deepEqual( Stem("facultad"), "facult" );
	deepEqual( Stem("facultades"), "facultad" );
	deepEqual( Stem("facultados"), "facult" );
	deepEqual( Stem("facultativos"), "facult" );
	deepEqual( Stem("facundo"), "facund" );
	deepEqual( Stem("faena"), "faen" );
	deepEqual( Stem("faenas"), "faen" );
	deepEqual( Stem("fagotistas"), "fagot" );
	deepEqual( Stem("fahr"), "fahr" );
	deepEqual( Stem("fairfax"), "fairfax" );
	deepEqual( Stem("faisán"), "faisan" );
	deepEqual( Stem("faja"), "faj" );
	deepEqual( Stem("fajarse"), "faj" );
	deepEqual( Stem("fajín"), "fajin" );
	deepEqual( Stem("fal"), "fal" );
	deepEqual( Stem("falacci"), "falacci" );
	deepEqual( Stem("falcón"), "falcon" );
	deepEqual( Stem("falda"), "fald" );
	deepEqual( Stem("faldas"), "fald" );
	deepEqual( Stem("falla"), "fall" );
	deepEqual( Stem("fallado"), "fall" );
	deepEqual( Stem("fallan"), "fall" );
	deepEqual( Stem("fallar"), "fall" );
	deepEqual( Stem("fallaron"), "fall" );
	deepEqual( Stem("fallas"), "fall" );
	deepEqual( Stem("fallece"), "fallec" );
	deepEqual( Stem("fallecido"), "fallec" );
	deepEqual( Stem("fallecidos"), "fallec" );
	deepEqual( Stem("falleciera"), "fallec" );
	deepEqual( Stem("fallecieron"), "fallec" );
	deepEqual( Stem("falleció"), "fallec" );
	deepEqual( Stem("fallen"), "fall" );
	deepEqual( Stem("fallida"), "fall" );
	deepEqual( Stem("fallido"), "fall" );
	deepEqual( Stem("fallo"), "fall" );
	deepEqual( Stem("falló"), "fall" );
	deepEqual( Stem("falls"), "falls" );
	deepEqual( Stem("falsa"), "fals" );
	deepEqual( Stem("falsas"), "fals" );
	deepEqual( Stem("falsete"), "falset" );
	deepEqual( Stem("falsificación"), "falsif" );
	deepEqual( Stem("falsificados"), "falsific" );
	deepEqual( Stem("falsificó"), "falsific" );
	deepEqual( Stem("falso"), "fals" );
	deepEqual( Stem("falsos"), "fals" );
	deepEqual( Stem("falta"), "falt" );
	deepEqual( Stem("faltaba"), "falt" );
	deepEqual( Stem("faltaban"), "falt" );
	deepEqual( Stem("faltado"), "falt" );
	deepEqual( Stem("faltan"), "falt" );
	deepEqual( Stem("faltando"), "falt" );
	deepEqual( Stem("faltándole"), "falt" );
	deepEqual( Stem("faltante"), "faltant" );
	deepEqual( Stem("faltar"), "falt" );
	deepEqual( Stem("faltara"), "falt" );
	deepEqual( Stem("faltas"), "falt" );
	deepEqual( Stem("falte"), "falt" );
	deepEqual( Stem("falté"), "falt" );
	deepEqual( Stem("falto"), "falt" );
	deepEqual( Stem("faltó"), "falt" );
	deepEqual( Stem("faltriquera"), "faltriquer" );
	deepEqual( Stem("fama"), "fam" );
	deepEqual( Stem("familia"), "famili" );
	deepEqual( Stem("familiar"), "famili" );
	deepEqual( Stem("familiares"), "familiar" );
	deepEqual( Stem("familiarice"), "familiaric" );
	deepEqual( Stem("familiarizado"), "familiariz" );
	deepEqual( Stem("familiarizarse"), "familiariz" );
	deepEqual( Stem("familias"), "famili" );
	deepEqual( Stem("famosa"), "famos" );
	deepEqual( Stem("famosas"), "fam" );
	deepEqual( Stem("famoso"), "famos" );
	deepEqual( Stem("famosos"), "famos" );
	deepEqual( Stem("fanaticada"), "fanatic" );
	deepEqual( Stem("fanáticas"), "fanat" );
	deepEqual( Stem("fanático"), "fanat" );
	deepEqual( Stem("fanáticos"), "fanat" );
	deepEqual( Stem("fanfarrias"), "fanfarri" );
	deepEqual( Stem("fango"), "fang" );
	deepEqual( Stem("fans"), "fans" );
	deepEqual( Stem("fantasía"), "fantas" );
	deepEqual( Stem("fantasmas"), "fantasm" );
	deepEqual( Stem("farías"), "far" );
	deepEqual( Stem("farinas"), "farin" );
	deepEqual( Stem("farmaceútica"), "farmaceut" );
	deepEqual( Stem("farmacia"), "farmaci" );
	deepEqual( Stem("farmacias"), "farmaci" );
	deepEqual( Stem("farmacodependientes"), "farmacodependient" );
	deepEqual( Stem("farmacología"), "farmacolog" );
	deepEqual( Stem("farmar"), "farm" );
	deepEqual( Stem("farrugia"), "farrugi" );
	deepEqual( Stem("farsa"), "fars" );
	deepEqual( Stem("farsante"), "farsant" );
	deepEqual( Stem("fascinación"), "fascin" );
	deepEqual( Stem("fascinante"), "fascin" );
	deepEqual( Stem("fase"), "fas" );
	deepEqual( Stem("fases"), "fas" );
	deepEqual( Stem("fast"), "fast" );
	deepEqual( Stem("fastuosos"), "fastuos" );
	deepEqual( Stem("fatal"), "fatal" );
	deepEqual( Stem("fatales"), "fatal" );
	deepEqual( Stem("fatalmente"), "fatal" );
	deepEqual( Stem("fatiga"), "fatig" );
	deepEqual( Stem("fatigado"), "fatig" );
	deepEqual( Stem("fátima"), "fatim" );
	deepEqual( Stem("fauna"), "faun" );
	deepEqual( Stem("faustino"), "faustin" );
	deepEqual( Stem("fausto"), "faust" );
	deepEqual( Stem("favor"), "favor" );
	deepEqual( Stem("favorable"), "favor" );
	deepEqual( Stem("favorablemente"), "favor" );
	deepEqual( Stem("favorables"), "favor" );
	deepEqual( Stem("favorece"), "favorec" );
	deepEqual( Stem("favorecer"), "favorec" );
	deepEqual( Stem("favorecerá"), "favorec" );
	deepEqual( Stem("favorecerán"), "favorec" );
	deepEqual( Stem("favorecía"), "favorec" );
	deepEqual( Stem("favorecían"), "favorec" );
	deepEqual( Stem("favorecieron"), "favorec" );
	deepEqual( Stem("favorecimiento"), "favorec" );
	deepEqual( Stem("favoreció"), "favorec" );
	deepEqual( Stem("favores"), "favor" );
	deepEqual( Stem("favorezcan"), "favorezc" );
	deepEqual( Stem("favorita"), "favorit" );
	deepEqual( Stem("favoritas"), "favorit" );
	deepEqual( Stem("favoritismo"), "favorit" );
	deepEqual( Stem("favorito"), "favorit" );
	deepEqual( Stem("favoritos"), "favorit" );
	deepEqual( Stem("fax"), "fax" );
	deepEqual( Stem("faxes"), "fax" );
	deepEqual( Stem("fbi"), "fbi" );
	deepEqual( Stem("fda"), "fda" );
	deepEqual( Stem("fe"), "fe" );
	deepEqual( Stem("fea"), "fea" );
	deepEqual( Stem("feas"), "feas" );
	deepEqual( Stem("feat"), "feat" );
	deepEqual( Stem("feb"), "feb" );
	deepEqual( Stem("febrero"), "febrer" );
	deepEqual( Stem("fecha"), "fech" );
	deepEqual( Stem("fechada"), "fech" );
	deepEqual( Stem("fechado"), "fech" );
	deepEqual( Stem("fechados"), "fech" );
	deepEqual( Stem("fechas"), "fech" );
	deepEqual( Stem("fechorías"), "fechor" );
	deepEqual( Stem("fecunda"), "fecund" );
	deepEqual( Stem("fecundación"), "fecund" );
	deepEqual( Stem("fecundando"), "fecund" );
	deepEqual( Stem("fecundidad"), "fecund" );
	deepEqual( Stem("fecundínez"), "fecundinez" );
	deepEqual( Stem("federación"), "feder" );
	deepEqual( Stem("federal"), "federal" );
	deepEqual( Stem("federales"), "federal" );
	deepEqual( Stem("federalismo"), "federal" );
	deepEqual( Stem("federalización"), "federaliz" );
	deepEqual( Stem("federativa"), "feder" );
	deepEqual( Stem("federativas"), "feder" );
	deepEqual( Stem("federativo"), "feder" );
	deepEqual( Stem("federica"), "feder" );
	deepEqual( Stem("federico"), "feder" );
	deepEqual( Stem("feeder"), "feed" );
	deepEqual( Stem("fehacientemente"), "fehacient" );
	deepEqual( Stem("feldhaus"), "feldhaus" );
	deepEqual( Stem("felguérez"), "felguerez" );
	deepEqual( Stem("felices"), "felic" );
	deepEqual( Stem("feliciano"), "felician" );
	deepEqual( Stem("felicidad"), "felic" );
	deepEqual( Stem("felicitación"), "felicit" );
	deepEqual( Stem("felicitaciones"), "felicit" );
	deepEqual( Stem("felicitada"), "felicit" );
	deepEqual( Stem("felicitadas"), "felicit" );
	deepEqual( Stem("felicitado"), "felicit" );
	deepEqual( Stem("felicitar"), "felicit" );
	deepEqual( Stem("felicitarla"), "felicit" );
	deepEqual( Stem("felicitarlo"), "felicit" );
	deepEqual( Stem("felicito"), "felicit" );
	deepEqual( Stem("felicitó"), "felicit" );
	deepEqual( Stem("felícitos"), "felicit" );
	deepEqual( Stem("feligreses"), "feligres" );
	deepEqual( Stem("felina"), "felin" );
	deepEqual( Stem("felino"), "felin" );
	deepEqual( Stem("felinos"), "felin" );
	deepEqual( Stem("felipe"), "felip" );
	deepEqual( Stem("félix"), "felix" );
	deepEqual( Stem("feliz"), "feliz" );
	deepEqual( Stem("femam"), "femam" );
	deepEqual( Stem("femenil"), "femenil" );
	deepEqual( Stem("femeniles"), "femenil" );
	deepEqual( Stem("femenina"), "femenin" );
	deepEqual( Stem("femenino"), "femenin" );
	deepEqual( Stem("femeninos"), "femenin" );
	deepEqual( Stem("femineidad"), "femin" );
	deepEqual( Stem("feminismo"), "femin" );
	deepEqual( Stem("feminista"), "femin" );
	deepEqual( Stem("feministas"), "femin" );
	deepEqual( Stem("femsa"), "fems" );
	deepEqual( Stem("fendick"), "fendick" );
	deepEqual( Stem("feneciendo"), "fenec" );
	deepEqual( Stem("fenómeno"), "fenomen" );
	deepEqual( Stem("fenómenos"), "fenomen" );
	deepEqual( Stem("feo"), "feo" );
	deepEqual( Stem("fer"), "fer" );
	deepEqual( Stem("fergie"), "fergi" );
	deepEqual( Stem("ferguson"), "ferguson" );
	deepEqual( Stem("feria"), "feri" );
	deepEqual( Stem("ferias"), "feri" );
	deepEqual( Stem("fermín"), "fermin" );
	deepEqual( Stem("fernanda"), "fernand" );
	deepEqual( Stem("fernandez"), "fernandez" );
	deepEqual( Stem("fernández"), "fernandez" );
	deepEqual( Stem("fernando"), "fern" );
	deepEqual( Stem("ferniza"), "ferniz" );
	deepEqual( Stem("feroz"), "feroz" );
	deepEqual( Stem("ferrara"), "ferr" );
	deepEqual( Stem("ferrat"), "ferrat" );
	deepEqual( Stem("férreo"), "ferre" );
	deepEqual( Stem("ferretería"), "ferret" );
	deepEqual( Stem("ferreterías"), "ferret" );
	deepEqual( Stem("ferriño"), "ferriñ" );
	deepEqual( Stem("ferrocarril"), "ferrocarril" );
	deepEqual( Stem("ferrocarrileros"), "ferrocarriler" );
	deepEqual( Stem("ferrocarriles"), "ferrocarril" );
	deepEqual( Stem("ferronales"), "ferronal" );
	deepEqual( Stem("ferroviaria"), "ferroviari" );
	deepEqual( Stem("ferroviarias"), "ferroviari" );
	deepEqual( Stem("ferroviario"), "ferroviari" );
	deepEqual( Stem("ferroviarios"), "ferroviari" );
	deepEqual( Stem("fértiles"), "fertil" );
	deepEqual( Stem("fertilidad"), "fertil" );
	deepEqual( Stem("fertilizante"), "fertiliz" );
	deepEqual( Stem("fertilizantes"), "fertiliz" );
	deepEqual( Stem("fesperman"), "fesperm" );
	deepEqual( Stem("festeja"), "festej" );
	deepEqual( Stem("festejada"), "festej" );
	deepEqual( Stem("festejar"), "festej" );
	deepEqual( Stem("festejaron"), "festej" );
	deepEqual( Stem("festejo"), "festej" );
	deepEqual( Stem("festejó"), "festej" );
	deepEqual( Stem("festejos"), "festej" );
	deepEqual( Stem("festiva"), "festiv" );
	deepEqual( Stem("festival"), "festival" );
	deepEqual( Stem("festivales"), "festival" );
	deepEqual( Stem("festividades"), "festiv" );
	deepEqual( Stem("festivo"), "festiv" );
	deepEqual( Stem("festivos"), "festiv" );
	deepEqual( Stem("fetales"), "fetal" );
	deepEqual( Stem("fetos"), "fet" );
	deepEqual( Stem("feudales"), "feudal" );
	deepEqual( Stem("ffcc"), "ffcc" );
	deepEqual( Stem("fían"), "fian" );
	deepEqual( Stem("fianza"), "fianz" );
	deepEqual( Stem("fib"), "fib" );
	deepEqual( Stem("fibra"), "fibr" );
	deepEqual( Stem("fibras"), "fibr" );
	deepEqual( Stem("fibrosarcomas"), "fibrosarcom" );
	deepEqual( Stem("ficción"), "ficcion" );
	deepEqual( Stem("ficha"), "fich" );
	deepEqual( Stem("fichado"), "fich" );
	deepEqual( Stem("ficóloga"), "ficolog" );
	deepEqual( Stem("fictícios"), "fictici" );
	deepEqual( Stem("fideicomiso"), "fideicomis" );
	deepEqual( Stem("fideicomisos"), "fideicomis" );
	deepEqual( Stem("fidel"), "fidel" );
	deepEqual( Stem("fidelidad"), "fidel" );
	deepEqual( Stem("fidencio"), "fidenci" );
	deepEqual( Stem("fidenor"), "fidenor" );
	deepEqual( Stem("fidler"), "fidl" );
	deepEqual( Stem("fiebre"), "fiebr" );
	deepEqual( Stem("fiel"), "fiel" );
	deepEqual( Stem("fieles"), "fiel" );
	deepEqual( Stem("fierro"), "fierr" );
	deepEqual( Stem("fiesta"), "fiest" );
	deepEqual( Stem("fiestas"), "fiest" );
	deepEqual( Stem("fiestota"), "fiestot" );
	deepEqual( Stem("fifa"), "fif" );
	deepEqual( Stem("fife"), "fif" );
	deepEqual( Stem("fignon"), "fignon" );
	deepEqual( Stem("figueroa"), "figuero" );
	deepEqual( Stem("figura"), "figur" );
	deepEqual( Stem("figuraba"), "figur" );
	deepEqual( Stem("figurado"), "figur" );
	deepEqual( Stem("figuran"), "figur" );
	deepEqual( Stem("figuraría"), "figur" );
	deepEqual( Stem("figuras"), "figur" );
	deepEqual( Stem("figurativamente"), "figur" );
	deepEqual( Stem("fija"), "fij" );
	deepEqual( Stem("fijación"), "fijacion" );
	deepEqual( Stem("fijadas"), "fij" );
	deepEqual( Stem("fijado"), "fij" );
	deepEqual( Stem("fijados"), "fij" );
	deepEqual( Stem("fijamos"), "fij" );
	deepEqual( Stem("fijan"), "fij" );
	deepEqual( Stem("fijar"), "fij" );
	deepEqual( Stem("fijará"), "fij" );
	deepEqual( Stem("fijaron"), "fij" );
	deepEqual( Stem("fijarse"), "fij" );
	deepEqual( Stem("fijas"), "fij" );
	deepEqual( Stem("fíjate"), "fijat" );
	deepEqual( Stem("fije"), "fij" );
	deepEqual( Stem("fíjese"), "fijes" );
	deepEqual( Stem("fijeza"), "fijez" );
	deepEqual( Stem("fijo"), "fij" );
	deepEqual( Stem("fijó"), "fij" );
	deepEqual( Stem("fijos"), "fij" );
	deepEqual( Stem("fila"), "fil" );
	deepEqual( Stem("filadelfia"), "filadelfi" );
	deepEqual( Stem("filas"), "fil" );
	deepEqual( Stem("filatelia"), "filateli" );
	deepEqual( Stem("filatélica"), "filatel" );
	deepEqual( Stem("filatélico"), "filatel" );
	deepEqual( Stem("filatélicos"), "filatel" );
	deepEqual( Stem("filatelismo"), "filatel" );
	deepEqual( Stem("filatelista"), "filatel" );
	deepEqual( Stem("filatelistas"), "filatel" );
	deepEqual( Stem("filete"), "filet" );
	deepEqual( Stem("filial"), "filial" );
	deepEqual( Stem("filiales"), "filial" );
	deepEqual( Stem("filiberto"), "filibert" );
	deepEqual( Stem("filipinas"), "filipin" );
	deepEqual( Stem("filipino"), "filipin" );
	deepEqual( Stem("film"), "film" );
	deepEqual( Stem("filmación"), "filmacion" );
	deepEqual( Stem("filmado"), "film" );
	deepEqual( Stem("filmados"), "film" );
	deepEqual( Stem("filmar"), "film" );
	deepEqual( Stem("filmaron"), "film" );
	deepEqual( Stem("filme"), "film" );
	deepEqual( Stem("fílmicos"), "filmic" );
	deepEqual( Stem("filosofía"), "filosof" );
	deepEqual( Stem("filosófica"), "filosof" );
	deepEqual( Stem("filósofo"), "filosof" );
	deepEqual( Stem("filósofos"), "filosof" );
	deepEqual( Stem("filtración"), "filtracion" );
	deepEqual( Stem("filtraciones"), "filtracion" );
	deepEqual( Stem("filtro"), "filtr" );
	deepEqual( Stem("filtros"), "filtr" );
	deepEqual( Stem("fin"), "fin" );
	deepEqual( Stem("fina"), "fin" );
	deepEqual( Stem("final"), "final" );
	deepEqual( Stem("finales"), "final" );
	deepEqual( Stem("finalice"), "finalic" );
	deepEqual( Stem("finalidad"), "final" );
	deepEqual( Stem("finalista"), "final" );
	deepEqual( Stem("finalistas"), "final" );
	deepEqual( Stem("finaliza"), "finaliz" );
	deepEqual( Stem("finalizado"), "finaliz" );
	deepEqual( Stem("finalizar"), "finaliz" );
	deepEqual( Stem("finalizara"), "finaliz" );
	deepEqual( Stem("finalizará"), "finaliz" );
	deepEqual( Stem("finalizaron"), "finaliz" );
	deepEqual( Stem("finalizó"), "finaliz" );
	deepEqual( Stem("finalmente"), "final" );
	deepEqual( Stem("finamex"), "finamex" );
	deepEqual( Stem("financiadas"), "financi" );
	deepEqual( Stem("financiado"), "financi" );
	deepEqual( Stem("financiados"), "financi" );
	deepEqual( Stem("financial"), "financial" );
	deepEqual( Stem("financiamiento"), "financi" );
	deepEqual( Stem("financiamientos"), "financi" );
	deepEqual( Stem("financiar"), "financi" );
	deepEqual( Stem("financiera"), "financ" );
	deepEqual( Stem("financieras"), "financ" );
	deepEqual( Stem("financiero"), "financier" );
	deepEqual( Stem("financieros"), "financier" );
	deepEqual( Stem("financing"), "financing" );
	deepEqual( Stem("financió"), "financ" );
	deepEqual( Stem("finanzas"), "finanz" );
	deepEqual( Stem("finas"), "fin" );
	deepEqual( Stem("finca"), "finc" );
	deepEqual( Stem("fincado"), "finc" );
	deepEqual( Stem("fincó"), "finc" );
	deepEqual( Stem("fines"), "fin" );
	deepEqual( Stem("fingiendo"), "fing" );
	deepEqual( Stem("fingieron"), "fing" );
	deepEqual( Stem("fingir"), "fing" );
	deepEqual( Stem("finiquitación"), "finiquit" );
	deepEqual( Stem("finiquito"), "finiquit" );
	deepEqual( Stem("finishing"), "finishing" );
	deepEqual( Stem("finland"), "finland" );
	deepEqual( Stem("fino"), "fin" );
	deepEqual( Stem("finos"), "fin" );
	deepEqual( Stem("fira"), "fir" );
	deepEqual( Stem("firma"), "firm" );
	deepEqual( Stem("firmaba"), "firm" );
	deepEqual( Stem("firmaban"), "firm" );
	deepEqual( Stem("firmada"), "firm" );
	deepEqual( Stem("firmadas"), "firm" );
	deepEqual( Stem("firmado"), "firm" );
	deepEqual( Stem("firmados"), "firm" );
	deepEqual( Stem("firmamos"), "firm" );
	deepEqual( Stem("firman"), "firm" );
	deepEqual( Stem("firmante"), "firmant" );
	deepEqual( Stem("firmantes"), "firmant" );
	deepEqual( Stem("firmar"), "firm" );
	deepEqual( Stem("firmara"), "firm" );
	deepEqual( Stem("firmará"), "firm" );
	deepEqual( Stem("firmarán"), "firm" );
	deepEqual( Stem("firmaron"), "firm" );
	deepEqual( Stem("firmarse"), "firm" );
	deepEqual( Stem("firmas"), "firm" );
	deepEqual( Stem("firme"), "firm" );
	deepEqual( Stem("firmemente"), "firmement" );
	deepEqual( Stem("firmen"), "firm" );
	deepEqual( Stem("firmes"), "firm" );
	deepEqual( Stem("firmó"), "firm" );
	deepEqual( Stem("first"), "first" );
	deepEqual( Stem("fiscal"), "fiscal" );
	deepEqual( Stem("fiscales"), "fiscal" );
	deepEqual( Stem("fiscalía"), "fiscal" );
	deepEqual( Stem("fiscalización"), "fiscaliz" );
	deepEqual( Stem("fiscalizado"), "fiscaliz" );
	deepEqual( Stem("fischer"), "fisch" );
	deepEqual( Stem("fisco"), "fisc" );
	deepEqual( Stem("física"), "fisic" );
	deepEqual( Stem("físicamente"), "fisic" );
	deepEqual( Stem("físicas"), "fisic" );
	deepEqual( Stem("físico"), "fisic" );
	deepEqual( Stem("físicodeportiva"), "fisicodeport" );
	deepEqual( Stem("físicos"), "fisic" );
	deepEqual( Stem("fisiológicamente"), "fisiolog" );
	deepEqual( Stem("fisk"), "fisk" );
	deepEqual( Stem("fisonomía"), "fisonom" );
	deepEqual( Stem("fisura"), "fisur" );
	deepEqual( Stem("fitopecuarias"), "fitopecuari" );
	deepEqual( Stem("flaco"), "flac" );
	deepEqual( Stem("flagrante"), "flagrant" );
	deepEqual( Stem("flamante"), "flamant" );
	deepEqual( Stem("flamenco"), "flamenc" );
	deepEqual( Stem("flandes"), "fland" );
	deepEqual( Stem("flannery"), "flannery" );
	deepEqual( Stem("flanquear"), "flanqu" );
	deepEqual( Stem("flaquito"), "flaquit" );
	deepEqual( Stem("flaubert"), "flaubert" );
	deepEqual( Stem("flavio"), "flavi" );
	deepEqual( Stem("flavorite"), "flavorit" );
	deepEqual( Stem("flavr"), "flavr" );
	deepEqual( Stem("flecha"), "flech" );
	deepEqual( Stem("flechazos"), "flechaz" );
	deepEqual( Stem("flecos"), "flec" );
	deepEqual( Stem("flemming"), "flemming" );
	deepEqual( Stem("fleteros"), "fleter" );
	deepEqual( Stem("fletes"), "flet" );
	deepEqual( Stem("flexibilidad"), "flexibil" );
	deepEqual( Stem("flexible"), "flexibl" );
	deepEqual( Stem("flexibles"), "flexibl" );
	deepEqual( Stem("flojos"), "floj" );
	deepEqual( Stem("flor"), "flor" );
	deepEqual( Stem("flora"), "flor" );
	deepEqual( Stem("floración"), "floracion" );
	deepEqual( Stem("florales"), "floral" );
	deepEqual( Stem("florecita"), "florecit" );
	deepEqual( Stem("florencia"), "florenci" );
	deepEqual( Stem("flores"), "flor" );
	deepEqual( Stem("florida"), "flor" );
	deepEqual( Stem("flota"), "flot" );
	deepEqual( Stem("flotación"), "flotacion" );
	deepEqual( Stem("flotando"), "flot" );
	deepEqual( Stem("flotantes"), "flotant" );
	deepEqual( Stem("flotilla"), "flotill" );
	deepEqual( Stem("flotillas"), "flotill" );
	deepEqual( Stem("floyd"), "floyd" );
	deepEqual( Stem("fluctuación"), "fluctuacion" );
	deepEqual( Stem("fluctúan"), "fluctu" );
	deepEqual( Stem("fluidez"), "fluidez" );
	deepEqual( Stem("fluido"), "flu" );
	deepEqual( Stem("fluído"), "fluid" );
	deepEqual( Stem("flujo"), "fluj" );
	deepEqual( Stem("flujos"), "fluj" );
	deepEqual( Stem("flume"), "flum" );
	deepEqual( Stem("fluordaniel"), "fluordaniel" );
	deepEqual( Stem("fluye"), "flu" );
	deepEqual( Stem("fm"), "fm" );
	deepEqual( Stem("fmf"), "fmf" );
	deepEqual( Stem("fmn"), "fmn" );
	deepEqual( Stem("fna"), "fna" );
	deepEqual( Stem("foco"), "foc" );
	deepEqual( Stem("focos"), "foc" );
	deepEqual( Stem("fofo"), "fof" );
	deepEqual( Stem("fogatas"), "fogat" );
	deepEqual( Stem("foggia"), "foggi" );
	deepEqual( Stem("fogueo"), "fogue" );
	deepEqual( Stem("folclórica"), "folclor" );
	deepEqual( Stem("folio"), "foli" );
	deepEqual( Stem("folklore"), "folklor" );
	deepEqual( Stem("folklórica"), "folklor" );
	deepEqual( Stem("folklórico"), "folklor" );
	deepEqual( Stem("folklorismo"), "folklor" );
	deepEqual( Stem("folleto"), "follet" );
	deepEqual( Stem("folletos"), "follet" );
	deepEqual( Stem("fomenta"), "foment" );
	deepEqual( Stem("fomentaba"), "foment" );
	deepEqual( Stem("fomentada"), "foment" );
	deepEqual( Stem("fomentado"), "foment" );
	deepEqual( Stem("fomentan"), "foment" );
	deepEqual( Stem("fomentar"), "foment" );
	deepEqual( Stem("fomento"), "foment" );
	deepEqual( Stem("fomerrey"), "fomerrey" );
	deepEqual( Stem("fonda"), "fond" );
	deepEqual( Stem("fondear"), "fond" );
	deepEqual( Stem("fondistas"), "fondist" );
	deepEqual( Stem("fondo"), "fond" );
	deepEqual( Stem("fondos"), "fond" );
	deepEqual( Stem("fonética"), "fonet" );
	deepEqual( Stem("fonhapo"), "fonhap" );
	deepEqual( Stem("fonméxico"), "fonmex" );
	deepEqual( Stem("fonseca"), "fonsec" );
	deepEqual( Stem("food"), "food" );
	deepEqual( Stem("foods"), "foods" );
	deepEqual( Stem("foquitos"), "foquit" );
	deepEqual( Stem("for"), "for" );
	deepEqual( Stem("foránea"), "forane" );
	deepEqual( Stem("foráneo"), "forane" );
	deepEqual( Stem("foráneos"), "forane" );
	deepEqual( Stem("forcados"), "forc" );
	deepEqual( Stem("force"), "forc" );
	deepEqual( Stem("ford"), "ford" );
	deepEqual( Stem("forest"), "forest" );
	deepEqual( Stem("forestación"), "forest" );
	deepEqual( Stem("forestal"), "forestal" );
	deepEqual( Stem("forestales"), "forestal" );
	deepEqual( Stem("forista"), "forist" );
	deepEqual( Stem("foristas"), "forist" );
	deepEqual( Stem("forja"), "forj" );
	deepEqual( Stem("forjan"), "forj" );
	deepEqual( Stem("forjarse"), "forj" );
	deepEqual( Stem("forma"), "form" );
	deepEqual( Stem("formaban"), "form" );
	deepEqual( Stem("formación"), "formacion" );
	deepEqual( Stem("formada"), "form" );
	deepEqual( Stem("formado"), "form" );
	deepEqual( Stem("formados"), "form" );
	deepEqual( Stem("formal"), "formal" );
	deepEqual( Stem("formales"), "formal" );
	deepEqual( Stem("formalidades"), "formal" );
	deepEqual( Stem("formalización"), "formaliz" );
	deepEqual( Stem("formalizar"), "formaliz" );
	deepEqual( Stem("formalizará"), "formaliz" );
	deepEqual( Stem("formalizarlo"), "formaliz" );
	deepEqual( Stem("formalmente"), "formal" );
	deepEqual( Stem("formamos"), "form" );
	deepEqual( Stem("forman"), "form" );
	deepEqual( Stem("formando"), "form" );
	deepEqual( Stem("formar"), "form" );
	deepEqual( Stem("formará"), "form" );
	deepEqual( Stem("formarán"), "form" );
	deepEqual( Stem("formarlo"), "form" );
	deepEqual( Stem("formaron"), "form" );
	deepEqual( Stem("formarse"), "form" );
	deepEqual( Stem("formas"), "form" );
	deepEqual( Stem("formativos"), "format" );
	deepEqual( Stem("formato"), "format" );
	deepEqual( Stem("formatos"), "format" );
	deepEqual( Stem("forme"), "form" );
	deepEqual( Stem("formen"), "form" );
	deepEqual( Stem("formó"), "form" );
	deepEqual( Stem("fórmula"), "formul" );
	deepEqual( Stem("formulación"), "formul" );
	deepEqual( Stem("formulado"), "formul" );
	deepEqual( Stem("formulan"), "formul" );
	deepEqual( Stem("formular"), "formul" );
	deepEqual( Stem("fórmulas"), "formul" );
	deepEqual( Stem("formuló"), "formul" );
	deepEqual( Stem("fornica"), "fornic" );
	deepEqual( Stem("fornicación"), "fornic" );
	deepEqual( Stem("fornicadora"), "fornic" );
	deepEqual( Stem("fornicadores"), "fornic" );
	deepEqual( Stem("fornicados"), "fornic" );
	deepEqual( Stem("foro"), "for" );
	deepEqual( Stem("foros"), "for" );
	deepEqual( Stem("forrada"), "forr" );
	deepEqual( Stem("forro"), "forr" );
	deepEqual( Stem("fors"), "fors" );
	deepEqual( Stem("fortalece"), "fortalec" );
	deepEqual( Stem("fortalecemos"), "fortalec" );
	deepEqual( Stem("fortalecen"), "fortalec" );
	deepEqual( Stem("fortalecer"), "fortalec" );
	deepEqual( Stem("fortalecidas"), "fortalec" );
	deepEqual( Stem("fortalecido"), "fortalec" );
	deepEqual( Stem("fortaleciendo"), "fortalec" );
	deepEqual( Stem("fortaleciéndose"), "fortalec" );
	deepEqual( Stem("fortalecimiento"), "fortalec" );
	deepEqual( Stem("fortaleció"), "fortalec" );
	deepEqual( Stem("fortaleza"), "fortalez" );
	deepEqual( Stem("fortalezca"), "fortalezc" );
	deepEqual( Stem("fortalezcan"), "fortalezc" );
	deepEqual( Stem("fortín"), "fortin" );
	deepEqual( Stem("fortines"), "fortin" );
	deepEqual( Stem("fortuna"), "fortun" );
	deepEqual( Stem("fortunas"), "fortun" );
	deepEqual( Stem("fortunato"), "fortunat" );
	deepEqual( Stem("forzada"), "forz" );
	deepEqual( Stem("forzadas"), "forz" );
	deepEqual( Stem("forzar"), "forz" );
	deepEqual( Stem("forzaron"), "forz" );
	deepEqual( Stem("forzosa"), "forzos" );
	deepEqual( Stem("forzosamente"), "forz" );
	deepEqual( Stem("forzoso"), "forzos" );
	deepEqual( Stem("fosas"), "fos" );
	deepEqual( Stem("fosforescente"), "fosforescent" );
	deepEqual( Stem("fosforescentes"), "fosforescent" );
	deepEqual( Stem("fósiles"), "fosil" );
	deepEqual( Stem("foster"), "fost" );
	deepEqual( Stem("foto"), "fot" );
	deepEqual( Stem("fotocopiadoras"), "fotocopi" );
	deepEqual( Stem("fotocredencialización"), "fotocredencializ" );
	deepEqual( Stem("fotocredencializadas"), "fotocredencializ" );
	deepEqual( Stem("fotocredencializados"), "fotocredencializ" );
	deepEqual( Stem("fotocredencializar"), "fotocredencializ" );
	deepEqual( Stem("fotografía"), "fotograf" );
	deepEqual( Stem("fotografiar"), "fotografi" );
	deepEqual( Stem("fotografías"), "fotograf" );
	deepEqual( Stem("fotográfica"), "fotograf" );
	deepEqual( Stem("fotográficas"), "fotograf" );
	deepEqual( Stem("fotógrafo"), "fotograf" );
	deepEqual( Stem("fotógrafos"), "fotograf" );
	deepEqual( Stem("fotomecánica"), "fotomecan" );
	deepEqual( Stem("fotoquímicos"), "fotoquim" );
	deepEqual( Stem("fotos"), "fot" );
	deepEqual( Stem("found"), "found" );
	deepEqual( Stem("foundation"), "foundation" );
	deepEqual( Stem("fovi"), "fovi" );
	deepEqual( Stem("fovissste"), "fovissst" );
	deepEqual( Stem("fox"), "fox" );
	deepEqual( Stem("foxpro"), "foxpr" );
	deepEqual( Stem("fracasado"), "fracas" );
	deepEqual( Stem("fracasar"), "fracas" );
	deepEqual( Stem("fracasaron"), "fracas" );
	deepEqual( Stem("fracase"), "frac" );
	deepEqual( Stem("fracaso"), "fracas" );
	deepEqual( Stem("fracasó"), "fracas" );
	deepEqual( Stem("fracasos"), "fracas" );
	deepEqual( Stem("fracc"), "fracc" );
	deepEqual( Stem("fracción"), "fraccion" );
	deepEqual( Stem("fraccionadas"), "fraccion" );
	deepEqual( Stem("fraccionador"), "fraccion" );
	deepEqual( Stem("fraccionadores"), "fraccion" );
	deepEqual( Stem("fraccionamiento"), "fraccion" );
	deepEqual( Stem("fraccionamientos"), "fraccion" );
	deepEqual( Stem("fraccionarios"), "fraccionari" );
	deepEqual( Stem("fracciones"), "fraccion" );
	deepEqual( Stem("fractura"), "fractur" );
	deepEqual( Stem("fracturado"), "fractur" );
	deepEqual( Stem("fracturados"), "fractur" );
	deepEqual( Stem("fracturarse"), "fractur" );
	deepEqual( Stem("fracturas"), "fractur" );
	deepEqual( Stem("fragancias"), "fraganci" );
	deepEqual( Stem("frágil"), "fragil" );
	deepEqual( Stem("frágiles"), "fragil" );
	deepEqual( Stem("fragmenta"), "fragment" );
	deepEqual( Stem("fragmentación"), "fragment" );
	deepEqual( Stem("fragmentos"), "fragment" );
	deepEqual( Stem("fragor"), "fragor" );
	deepEqual( Stem("fraguando"), "fragu" );
	deepEqual( Stem("franca"), "franc" );
	deepEqual( Stem("francamente"), "franc" );
	deepEqual( Stem("francas"), "franc" );
	deepEqual( Stem("france"), "franc" );
	deepEqual( Stem("francés"), "frances" );
	deepEqual( Stem("francesa"), "frances" );
	deepEqual( Stem("franceses"), "frances" );
	deepEqual( Stem("francia"), "franci" );
	deepEqual( Stem("francisco"), "francisc" );
	deepEqual( Stem("franco"), "franc" );
	deepEqual( Stem("francos"), "franc" );
	deepEqual( Stem("francotirador"), "francotir" );
	deepEqual( Stem("franela"), "franel" );
	deepEqual( Stem("frank"), "frank" );
	deepEqual( Stem("franklin"), "franklin" );
	deepEqual( Stem("franklyn"), "franklyn" );
	deepEqual( Stem("franqueó"), "franque" );
	deepEqual( Stem("franqueza"), "franquez" );
	deepEqual( Stem("franquicia"), "franquici" );
	deepEqual( Stem("franquiciaba"), "franquici" );
	deepEqual( Stem("franquicias"), "franquici" );
	deepEqual( Stem("franz"), "franz" );
	deepEqual( Stem("frapi"), "frapi" );
	deepEqual( Stem("frase"), "fras" );
	deepEqual( Stem("fraseo"), "frase" );
	deepEqual( Stem("frases"), "fras" );
	deepEqual( Stem("frasquito"), "frasquit" );
	deepEqual( Stem("fraterna"), "fratern" );
	deepEqual( Stem("fraternal"), "fraternal" );
	deepEqual( Stem("fraternidad"), "fratern" );
	deepEqual( Stem("fraude"), "fraud" );
	deepEqual( Stem("fraudes"), "fraud" );
	deepEqual( Stem("fraudulenta"), "fraudulent" );
	deepEqual( Stem("fraudulentas"), "fraudulent" );
	deepEqual( Stem("fraudulento"), "fraudulent" );
	deepEqual( Stem("frausto"), "fraust" );
	deepEqual( Stem("frayre"), "frayr" );
	deepEqual( Stem("frecuencia"), "frecuenci" );
	deepEqual( Stem("frecuencias"), "frecuenci" );
	deepEqual( Stem("frecuentada"), "frecuent" );
	deepEqual( Stem("frecuentado"), "frecuent" );
	deepEqual( Stem("frecuentan"), "frecuent" );
	deepEqual( Stem("frecuentando"), "frecuent" );
	deepEqual( Stem("frecuentaran"), "frecuent" );
	deepEqual( Stem("frecuente"), "frecuent" );
	deepEqual( Stem("frecuentemente"), "frecuent" );
	deepEqual( Stem("frecuentes"), "frecuent" );
	deepEqual( Stem("frederick"), "frederick" );
	deepEqual( Stem("freedom"), "freedom" );
	deepEqual( Stem("freeport"), "freeport" );
	deepEqual( Stem("fregado"), "freg" );
	deepEqual( Stem("fregonería"), "fregon" );
	deepEqual( Stem("frenado"), "fren" );
	deepEqual( Stem("frenados"), "fren" );
	deepEqual( Stem("frenar"), "fren" );
	deepEqual( Stem("freno"), "fren" );
	deepEqual( Stem("frenó"), "fren" );
	deepEqual( Stem("frenos"), "fren" );
	deepEqual( Stem("frente"), "frent" );
	deepEqual( Stem("frentes"), "frent" );
	deepEqual( Stem("fresas"), "fres" );
	deepEqual( Stem("fresca"), "fresc" );
	deepEqual( Stem("frescas"), "fresc" );
	deepEqual( Stem("fresco"), "fresc" );
	deepEqual( Stem("frescura"), "frescur" );
	deepEqual( Stem("fresh"), "fresh" );
	deepEqual( Stem("freud"), "freud" );
	deepEqual( Stem("fría"), "fri" );
	deepEqual( Stem("frias"), "fri" );
	deepEqual( Stem("frías"), "fri" );
	deepEqual( Stem("fricase"), "fric" );
	deepEqual( Stem("fricciones"), "friccion" );
	deepEqual( Stem("frida"), "frid" );
	deepEqual( Stem("fried"), "fri" );
	deepEqual( Stem("frijol"), "frijol" );
	deepEqual( Stem("frijoles"), "frijol" );
	deepEqual( Stem("frío"), "fri" );
	deepEqual( Stem("friolentas"), "friolent" );
	deepEqual( Stem("friolentos"), "friolent" );
	deepEqual( Stem("fríos"), "fri" );
	deepEqual( Stem("frisco"), "frisc" );
	deepEqual( Stem("fritos"), "frit" );
	deepEqual( Stem("fritz"), "fritz" );
	deepEqual( Stem("frivolidad"), "frivol" );
	deepEqual( Stem("frontal"), "frontal" );
	deepEqual( Stem("frontalmente"), "frontal" );
	deepEqual( Stem("frontera"), "fronter" );
	deepEqual( Stem("fronteras"), "fronter" );
	deepEqual( Stem("fronteriza"), "fronteriz" );
	deepEqual( Stem("fronterizo"), "fronteriz" );
	deepEqual( Stem("fronterizos"), "fronteriz" );
	deepEqual( Stem("fructificar"), "fructific" );
	deepEqual( Stem("fructuoso"), "fructuos" );
	deepEqual( Stem("frustración"), "frustracion" );
	deepEqual( Stem("frustrada"), "frustr" );
	deepEqual( Stem("frustradas"), "frustr" );
	deepEqual( Stem("frustrado"), "frustr" );
	deepEqual( Stem("fruta"), "frut" );
	deepEqual( Stem("frutales"), "frutal" );
	deepEqual( Stem("frutas"), "frut" );
	deepEqual( Stem("fruto"), "frut" );
	deepEqual( Stem("frutos"), "frut" );
	deepEqual( Stem("fstse"), "fstse" );
	deepEqual( Stem("fucsia"), "fucsi" );
	deepEqual( Stem("fue"), "fue" );
	deepEqual( Stem("fuego"), "fueg" );
	deepEqual( Stem("fuehrer"), "fuehr" );
	deepEqual( Stem("fuente"), "fuent" );
	deepEqual( Stem("fuentes"), "fuent" );
	deepEqual( Stem("fuera"), "fuer" );
	deepEqual( Stem("fueran"), "fuer" );
	deepEqual( Stem("fuere"), "fuer" );
	deepEqual( Stem("fuero"), "fuer" );
	deepEqual( Stem("fueron"), "fueron" );
	deepEqual( Stem("fuerte"), "fuert" );
	deepEqual( Stem("fuertemente"), "fuertement" );
	deepEqual( Stem("fuertes"), "fuert" );
	deepEqual( Stem("fuerza"), "fuerz" );
	deepEqual( Stem("fuerzas"), "fuerz" );
	deepEqual( Stem("fuese"), "fues" );
	deepEqual( Stem("fuesen"), "fues" );
	deepEqual( Stem("fuezas"), "fuez" );
	deepEqual( Stem("fuga"), "fug" );
	deepEqual( Stem("fui"), "fui" );
	deepEqual( Stem("fuiste"), "fuist" );
	deepEqual( Stem("fujimori"), "fujimori" );
	deepEqual( Stem("fujimorista"), "fujimor" );
	deepEqual( Stem("fukuoka"), "fukuok" );
	deepEqual( Stem("fulano"), "fulan" );
	deepEqual( Stem("fulgor"), "fulgor" );
	deepEqual( Stem("fuller"), "full" );
	deepEqual( Stem("fulminante"), "fulmin" );
	deepEqual( Stem("fulminantemente"), "fulmin" );
	deepEqual( Stem("fulminó"), "fulmin" );
	deepEqual( Stem("fuman"), "fum" );
	deepEqual( Stem("fumando"), "fum" );
	deepEqual( Stem("fumarolas"), "fumarol" );
	deepEqual( Stem("función"), "funcion" );
	deepEqual( Stem("funciona"), "funcion" );
	deepEqual( Stem("funcionaba"), "funcion" );
	deepEqual( Stem("funcional"), "funcional" );
	deepEqual( Stem("funcionalidad"), "funcional" );
	deepEqual( Stem("funcionalidades"), "funcional" );
	deepEqual( Stem("funcionamiento"), "funcion" );
	deepEqual( Stem("funcionan"), "funcion" );
	deepEqual( Stem("funcionando"), "funcion" );
	deepEqual( Stem("funcionar"), "funcion" );
	deepEqual( Stem("funcionará"), "funcion" );
	deepEqual( Stem("funcionaran"), "funcion" );
	deepEqual( Stem("funcionarán"), "funcion" );
	deepEqual( Stem("funcionaria"), "funcionari" );
	deepEqual( Stem("funcionarias"), "funcionari" );
	deepEqual( Stem("funcionario"), "funcionari" );
	deepEqual( Stem("funcionarios"), "funcionari" );
	deepEqual( Stem("funcionaron"), "funcion" );
	deepEqual( Stem("funcione"), "funcion" );
	deepEqual( Stem("funciones"), "funcion" );
	deepEqual( Stem("funcionó"), "funcion" );
	deepEqual( Stem("fund"), "fund" );
	deepEqual( Stem("funda"), "fund" );
	deepEqual( Stem("fundación"), "fundacion" );
	deepEqual( Stem("fundaciones"), "fundacion" );
	deepEqual( Stem("fundada"), "fund" );
	deepEqual( Stem("fundado"), "fund" );
	deepEqual( Stem("fundador"), "fundador" );
	deepEqual( Stem("fundadora"), "fundador" );
	deepEqual( Stem("fundadoras"), "fundador" );
	deepEqual( Stem("fundadores"), "fundador" );
	deepEqual( Stem("fundamenta"), "fundament" );
	deepEqual( Stem("fundamentados"), "fundament" );
	deepEqual( Stem("fundamental"), "fundamental" );
	deepEqual( Stem("fundamentales"), "fundamental" );
	deepEqual( Stem("fundamentalismo"), "fundamental" );
	deepEqual( Stem("fundamentalmente"), "fundamental" );
	deepEqual( Stem("fundamento"), "fundament" );
	deepEqual( Stem("fundamentos"), "fundament" );
	deepEqual( Stem("fundar"), "fund" );
	deepEqual( Stem("fundara"), "fund" );
	deepEqual( Stem("fundaran"), "fund" );
	deepEqual( Stem("fundarán"), "fund" );
	deepEqual( Stem("fundaron"), "fund" );
	deepEqual( Stem("fundarse"), "fund" );
	deepEqual( Stem("funde"), "fund" );
	deepEqual( Stem("funden"), "fund" );
	deepEqual( Stem("fundente"), "fundent" );
	deepEqual( Stem("fundición"), "fundicion" );
	deepEqual( Stem("fundiciones"), "fundicion" );
	deepEqual( Stem("fundidora"), "fundidor" );
	deepEqual( Stem("fundó"), "fund" );
	deepEqual( Stem("funerales"), "funeral" );
	deepEqual( Stem("funge"), "fung" );
	deepEqual( Stem("fungía"), "fung" );
	deepEqual( Stem("fungían"), "fung" );
	deepEqual( Stem("fungió"), "fung" );
	deepEqual( Stem("fungir"), "fung" );
	deepEqual( Stem("funk"), "funk" );
	deepEqual( Stem("funny"), "funny" );
	deepEqual( Stem("furgones"), "furgon" );
	deepEqual( Stem("furia"), "furi" );
	deepEqual( Stem("furibunda"), "furibund" );
	deepEqual( Stem("furibundo"), "furibund" );
	deepEqual( Stem("furioso"), "furios" );
	deepEqual( Stem("furtiva"), "furtiv" );
	deepEqual( Stem("furtivo"), "furtiv" );
	deepEqual( Stem("furtivos"), "furtiv" );
	deepEqual( Stem("fusión"), "fusion" );
	deepEqual( Stem("fusionada"), "fusion" );
	deepEqual( Stem("fusiones"), "fusion" );
	deepEqual( Stem("futbol"), "futbol" );
	deepEqual( Stem("futbolista"), "futbol" );
	deepEqual( Stem("futbolistas"), "futbol" );
	deepEqual( Stem("futbolística"), "futbolist" );
	deepEqual( Stem("futbolísticamente"), "futbolist" );
	deepEqual( Stem("futbolístico"), "futbolist" );
	deepEqual( Stem("futbolísticos"), "futbolist" );
	deepEqual( Stem("futura"), "futur" );
	deepEqual( Stem("futuras"), "futur" );
	deepEqual( Stem("futureando"), "futur" );
	deepEqual( Stem("futurismo"), "futur" );
	deepEqual( Stem("futurista"), "futur" );
	deepEqual( Stem("futuro"), "futur" );
	deepEqual( Stem("futuros"), "futur" );
	deepEqual( Stem("fxg"), "fxg" );
	deepEqual( Stem("g"), "g" );
	deepEqual( Stem("gabanna"), "gabann" );
	deepEqual( Stem("gabinete"), "gabinet" );
	deepEqual( Stem("gabriel"), "gabriel" );
	deepEqual( Stem("gabriela"), "gabriel" );
	deepEqual( Stem("gado"), "gad" );
	deepEqual( Stem("gafete"), "gafet" );
	deepEqual( Stem("gail"), "gail" );
	deepEqual( Stem("gala"), "gal" );
	deepEqual( Stem("galán"), "galan" );
	deepEqual( Stem("galanes"), "galan" );
	deepEqual( Stem("galante"), "galant" );
	deepEqual( Stem("galardón"), "galardon" );
	deepEqual( Stem("galardonada"), "galardon" );
	deepEqual( Stem("galardonado"), "galardon" );
	deepEqual( Stem("galardonados"), "galardon" );
	deepEqual( Stem("galardones"), "galardon" );
	deepEqual( Stem("galarza"), "galarz" );
	deepEqual( Stem("galeana"), "galean" );
	deepEqual( Stem("galenos"), "galen" );
	deepEqual( Stem("galeones"), "galeon" );
	deepEqual( Stem("galeras"), "galer" );
	deepEqual( Stem("galería"), "gal" );
	deepEqual( Stem("galerías"), "gal" );
	deepEqual( Stem("gales"), "gal" );
	deepEqual( Stem("galicia"), "galici" );
	deepEqual( Stem("galileo"), "galile" );
	deepEqual( Stem("galimanty"), "galimanty" );
	deepEqual( Stem("galindo"), "galind" );
	deepEqual( Stem("gallardo"), "gallard" );
	deepEqual( Stem("gallego"), "galleg" );
	deepEqual( Stem("gallegos"), "galleg" );
	deepEqual( Stem("galleta"), "gallet" );
	deepEqual( Stem("galletitas"), "galletit" );
	deepEqual( Stem("gallina"), "gallin" );
	deepEqual( Stem("gallinas"), "gallin" );
	deepEqual( Stem("gallinero"), "galliner" );
	deepEqual( Stem("gallo"), "gall" );
	deepEqual( Stem("gallont"), "gallont" );
	deepEqual( Stem("gallos"), "gall" );
	deepEqual( Stem("galvak"), "galvak" );
	deepEqual( Stem("galvamet"), "galvamet" );
	deepEqual( Stem("galván"), "galvan" );
	deepEqual( Stem("galvanizada"), "galvaniz" );
	deepEqual( Stem("gama"), "gam" );
	deepEqual( Stem("gámez"), "gamez" );
	deepEqual( Stem("gamma"), "gamm" );
	deepEqual( Stem("gamuza"), "gamuz" );
	deepEqual( Stem("gana"), "gan" );
	deepEqual( Stem("ganaban"), "gan" );
	deepEqual( Stem("ganada"), "gan" );
	deepEqual( Stem("ganadas"), "gan" );
	deepEqual( Stem("ganadera"), "ganader" );
	deepEqual( Stem("ganadería"), "ganad" );
	deepEqual( Stem("ganadero"), "ganader" );
	deepEqual( Stem("ganaderos"), "ganader" );
	deepEqual( Stem("ganado"), "gan" );
	deepEqual( Stem("ganador"), "ganador" );
	deepEqual( Stem("ganadora"), "ganador" );
	deepEqual( Stem("ganadores"), "ganador" );
	deepEqual( Stem("ganados"), "gan" );
	deepEqual( Stem("ganamos"), "gan" );
	deepEqual( Stem("ganan"), "gan" );
	deepEqual( Stem("ganancia"), "gananci" );
	deepEqual( Stem("ganancias"), "gananci" );
	deepEqual( Stem("ganando"), "gan" );
	deepEqual( Stem("ganar"), "gan" );
	deepEqual( Stem("ganará"), "gan" );
	deepEqual( Stem("ganarán"), "gan" );
	deepEqual( Stem("ganarla"), "gan" );
	deepEqual( Stem("ganarle"), "gan" );
	deepEqual( Stem("ganarles"), "gan" );
	deepEqual( Stem("ganaron"), "gan" );
	deepEqual( Stem("ganarse"), "gan" );
	deepEqual( Stem("ganas"), "gan" );
	deepEqual( Stem("gancho"), "ganch" );
	deepEqual( Stem("ganchó"), "ganch" );
	deepEqual( Stem("ganchos"), "ganch" );
	deepEqual( Stem("gane"), "gan" );
	deepEqual( Stem("ganen"), "gan" );
	deepEqual( Stem("gangas"), "gang" );
	deepEqual( Stem("gannet"), "gannet" );
	deepEqual( Stem("ganó"), "gan" );
	deepEqual( Stem("gaona"), "gaon" );
	deepEqual( Stem("garantía"), "garant" );
	deepEqual( Stem("garantías"), "garant" );
	deepEqual( Stem("garantice"), "garantic" );
	deepEqual( Stem("garantices"), "garantic" );
	deepEqual( Stem("garantiza"), "garantiz" );
	deepEqual( Stem("garantizaba"), "garantiz" );
	deepEqual( Stem("garantizaban"), "garantiz" );
	deepEqual( Stem("garantizada"), "garantiz" );
	deepEqual( Stem("garantizadas"), "garantiz" );
	deepEqual( Stem("garantizar"), "garantiz" );
	deepEqual( Stem("garantizarán"), "garantiz" );
	deepEqual( Stem("garantizaron"), "garantiz" );
	deepEqual( Stem("garantizarse"), "garantiz" );
	deepEqual( Stem("garantizo"), "garantiz" );
	deepEqual( Stem("garcía"), "garc" );
	deepEqual( Stem("gardenia"), "gardeni" );
	deepEqual( Stem("garduño"), "garduñ" );
	deepEqual( Stem("garfield"), "garfield" );
	deepEqual( Stem("garganta"), "gargant" );
	deepEqual( Stem("gargantilla"), "gargantill" );
	deepEqual( Stem("gari"), "gari" );
	deepEqual( Stem("garibay"), "garibay" );
	deepEqual( Stem("garitos"), "garit" );
	deepEqual( Stem("garma"), "garm" );
	deepEqual( Stem("garras"), "garr" );
	deepEqual( Stem("garrido"), "garr" );
	deepEqual( Stem("garrison"), "garrison" );
	deepEqual( Stem("garrocha"), "garroch" );
	deepEqual( Stem("garrotero"), "garroter" );
	deepEqual( Stem("garroteros"), "garroter" );
	deepEqual( Stem("gary"), "gary" );
	deepEqual( Stem("garza"), "garz" );
	deepEqual( Stem("gas"), "gas" );
	deepEqual( Stem("gasca"), "gasc" );
	deepEqual( Stem("gasera"), "gaser" );
	deepEqual( Stem("gaseras"), "gaser" );
	deepEqual( Stem("gases"), "gas" );
	deepEqual( Stem("gasoducto"), "gasoduct" );
	deepEqual( Stem("gasóleo"), "gasole" );
	deepEqual( Stem("gasolina"), "gasolin" );
	deepEqual( Stem("gasolinas"), "gasolin" );
	deepEqual( Stem("gasolinera"), "gasoliner" );
	deepEqual( Stem("gasolinerías"), "gasolin" );
	deepEqual( Stem("gaspar"), "gasp" );
	deepEqual( Stem("gasparini"), "gasparini" );
	deepEqual( Stem("gasset"), "gasset" );
	deepEqual( Stem("gastado"), "gast" );
	deepEqual( Stem("gastados"), "gast" );
	deepEqual( Stem("gastando"), "gast" );
	deepEqual( Stem("gastar"), "gast" );
	deepEqual( Stem("gastarán"), "gast" );
	deepEqual( Stem("gastarla"), "gast" );
	deepEqual( Stem("gastaron"), "gast" );
	deepEqual( Stem("gaste"), "gast" );
	deepEqual( Stem("gasto"), "gast" );
	deepEqual( Stem("gastó"), "gast" );
	deepEqual( Stem("gastolfo"), "gastolf" );
	deepEqual( Stem("gastón"), "gaston" );
	deepEqual( Stem("gastona"), "gaston" );
	deepEqual( Stem("gastos"), "gast" );
	deepEqual( Stem("gastritis"), "gastritis" );
	deepEqual( Stem("gastroenterología"), "gastroenterolog" );
	deepEqual( Stem("gatauline"), "gataulin" );
	deepEqual( Stem("gates"), "gat" );
	deepEqual( Stem("gatica"), "gatic" );
	deepEqual( Stem("gato"), "gat" );
	deepEqual( Stem("gatorade"), "gatorad" );
	deepEqual( Stem("gatos"), "gat" );
	deepEqual( Stem("gatt"), "gatt" );
	deepEqual( Stem("gaucho"), "gauch" );
	deepEqual( Stem("gauna"), "gaun" );
	deepEqual( Stem("gavaldon"), "gavaldon" );
	deepEqual( Stem("gavaldón"), "gavaldon" );
	deepEqual( Stem("gavica"), "gavic" );
	deepEqual( Stem("gaviria"), "gaviri" );
	deepEqual( Stem("gaytán"), "gaytan" );
	deepEqual( Stem("gazal"), "gazal" );
	deepEqual( Stem("gds"), "gds" );
	deepEqual( Stem("gehard"), "gehard" );
	deepEqual( Stem("geiser"), "geis" );
	deepEqual( Stem("gelasio"), "gelasi" );
	deepEqual( Stem("gélida"), "gel" );
	deepEqual( Stem("gélido"), "gel" );
	deepEqual( Stem("gemebundo"), "gemebund" );
	deepEqual( Stem("gemelas"), "gemel" );
	deepEqual( Stem("gemelos"), "gemel" );
	deepEqual( Stem("gemido"), "gem" );
	deepEqual( Stem("gemidos"), "gem" );
	deepEqual( Stem("genaro"), "genar" );
	deepEqual( Stem("gendarme"), "gend" );
	deepEqual( Stem("gene"), "gen" );
	deepEqual( Stem("genealógico"), "genealog" );
	deepEqual( Stem("genera"), "gener" );
	deepEqual( Stem("generación"), "gener" );
	deepEqual( Stem("generaciones"), "gener" );
	deepEqual( Stem("generada"), "gener" );
	deepEqual( Stem("generado"), "gener" );
	deepEqual( Stem("generador"), "gener" );
	deepEqual( Stem("generadora"), "gener" );
	deepEqual( Stem("generadores"), "gener" );
	deepEqual( Stem("generados"), "gener" );
	deepEqual( Stem("general"), "general" );
	deepEqual( Stem("generales"), "general" );
	deepEqual( Stem("generalidad"), "general" );
	deepEqual( Stem("generalista"), "general" );
	deepEqual( Stem("generalizaciones"), "generaliz" );
	deepEqual( Stem("generalizada"), "generaliz" );
	deepEqual( Stem("generalizado"), "generaliz" );
	deepEqual( Stem("generalizados"), "generaliz" );
	deepEqual( Stem("generalizar"), "generaliz" );
	deepEqual( Stem("generalmente"), "general" );
	deepEqual( Stem("generan"), "gener" );
	deepEqual( Stem("generando"), "gener" );
	deepEqual( Stem("generandoles"), "gener" );
	deepEqual( Stem("generar"), "gener" );
	deepEqual( Stem("generará"), "gener" );
	deepEqual( Stem("generarán"), "gener" );
	deepEqual( Stem("generaron"), "gener" );
	deepEqual( Stem("generarse"), "gener" );
	deepEqual( Stem("genérico"), "gener" );
	deepEqual( Stem("generis"), "generis" );
	deepEqual( Stem("género"), "gener" );
	deepEqual( Stem("generó"), "gener" );
	deepEqual( Stem("géneros"), "gener" );
	deepEqual( Stem("generosa"), "gener" );
	deepEqual( Stem("generosas"), "gener" );
	deepEqual( Stem("generoso"), "gener" );
	deepEqual( Stem("genes"), "gen" );
	deepEqual( Stem("genesio"), "genesi" );
	deepEqual( Stem("genetec"), "genetec" );
	deepEqual( Stem("genética"), "genet" );
	deepEqual( Stem("genéticamente"), "genet" );
	deepEqual( Stem("genético"), "genet" );
	deepEqual( Stem("genéticos"), "genet" );
	deepEqual( Stem("genetistas"), "genet" );
	deepEqual( Stem("genial"), "genial" );
	deepEqual( Stem("geniales"), "genial" );
	deepEqual( Stem("genio"), "geni" );
	deepEqual( Stem("genios"), "geni" );
	deepEqual( Stem("genital"), "genital" );
	deepEqual( Stem("genitales"), "genital" );
	deepEqual( Stem("geno"), "gen" );
	deepEqual( Stem("genocidio"), "genocidi" );
	deepEqual( Stem("genpham"), "genpham" );
	deepEqual( Stem("gente"), "gent" );
	deepEqual( Stem("gentes"), "gent" );
	deepEqual( Stem("gentor"), "gentor" );
	deepEqual( Stem("genuinamente"), "genuin" );
	deepEqual( Stem("geo"), "geo" );
	deepEqual( Stem("geográficas"), "geograf" );
	deepEqual( Stem("geográfico"), "geograf" );
	deepEqual( Stem("geographic"), "geographic" );
	deepEqual( Stem("geológicos"), "geolog" );
	deepEqual( Stem("geólogos"), "geolog" );
	deepEqual( Stem("george"), "georg" );
	deepEqual( Stem("georges"), "georg" );
	deepEqual( Stem("gephard"), "gephard" );
	deepEqual( Stem("gephardt"), "gephardt" );
	deepEqual( Stem("gerald"), "gerald" );
	deepEqual( Stem("gerardo"), "gerard" );
	deepEqual( Stem("gerda"), "gerd" );
	deepEqual( Stem("gerencia"), "gerenci" );
	deepEqual( Stem("gerencial"), "gerencial" );
	deepEqual( Stem("gerenciales"), "gerencial" );
	deepEqual( Stem("gerencias"), "gerenci" );
	deepEqual( Stem("gerente"), "gerent" );
	deepEqual( Stem("gerentes"), "gerent" );
	deepEqual( Stem("germán"), "german" );
	deepEqual( Stem("germen"), "germ" );
	deepEqual( Stem("geroncio"), "geronci" );
	deepEqual( Stem("gerónimo"), "geronim" );
	deepEqual( Stem("gestado"), "gest" );
	deepEqual( Stem("gestando"), "gest" );
	deepEqual( Stem("gestión"), "gestion" );
	deepEqual( Stem("gestionando"), "gestion" );
	deepEqual( Stem("gestionar"), "gestion" );
	deepEqual( Stem("gestiones"), "gestion" );
	deepEqual( Stem("gesto"), "gest" );
	deepEqual( Stem("gestor"), "gestor" );
	deepEqual( Stem("gestoras"), "gestor" );
	deepEqual( Stem("gestoría"), "gestor" );
	deepEqual( Stem("gfinbur"), "gfinbur" );
	deepEqual( Stem("ghali"), "ghali" );
	deepEqual( Stem("ghana"), "ghan" );
	deepEqual( Stem("ghanés"), "ghanes" );
	deepEqual( Stem("ghersi"), "ghersi" );
	deepEqual( Stem("giancana"), "giancan" );
	deepEqual( Stem("gianni"), "gianni" );
	deepEqual( Stem("gielgud"), "gielgud" );
	deepEqual( Stem("gigante"), "gigant" );
	deepEqual( Stem("gigantes"), "gigant" );
	deepEqual( Stem("gigantesco"), "gigantesc" );
	deepEqual( Stem("gigantescos"), "gigantesc" );
	deepEqual( Stem("gigantezca"), "gigantezc" );
	deepEqual( Stem("gijón"), "gijon" );
	deepEqual( Stem("gil"), "gil" );
	deepEqual( Stem("gilbert"), "gilbert" );
	deepEqual( Stem("gilberto"), "gilbert" );
	deepEqual( Stem("gime"), "gim" );
	deepEqual( Stem("gimnasia"), "gimnasi" );
	deepEqual( Stem("gimnasio"), "gimnasi" );
	deepEqual( Stem("gimnospermas"), "gimnosperm" );
	deepEqual( Stem("ginebra"), "ginebr" );
	deepEqual( Stem("ginecobstetricia"), "ginecobstetrici" );
	deepEqual( Stem("ginecólogo"), "ginecolog" );
	deepEqual( Stem("giovanni"), "giovanni" );
	deepEqual( Stem("gira"), "gir" );
	deepEqual( Stem("giraba"), "gir" );
	deepEqual( Stem("girado"), "gir" );
	deepEqual( Stem("giran"), "gir" );
	deepEqual( Stem("girar"), "gir" );
	deepEqual( Stem("girara"), "gir" );
	deepEqual( Stem("girará"), "gir" );
	deepEqual( Stem("giraron"), "gir" );
	deepEqual( Stem("giras"), "gir" );
	deepEqual( Stem("giro"), "gir" );
	deepEqual( Stem("giró"), "gir" );
	deepEqual( Stem("girolamo"), "girolam" );
	deepEqual( Stem("girolano"), "girolan" );
	deepEqual( Stem("giros"), "gir" );
	deepEqual( Stem("gises"), "gis" );
	deepEqual( Stem("giuseppe"), "giusepp" );
	deepEqual( Stem("gladiador"), "gladiador" );
	deepEqual( Stem("gladiadores"), "gladiador" );
	deepEqual( Stem("glamorosa"), "glamor" );
	deepEqual( Stem("glamour"), "glamour" );
	deepEqual( Stem("glamur"), "glamur" );
	deepEqual( Stem("glándula"), "glandul" );
	deepEqual( Stem("glen"), "glen" );
	deepEqual( Stem("glenn"), "glenn" );
	deepEqual( Stem("glioblastomas"), "glioblastom" );
	deepEqual( Stem("global"), "global" );
	deepEqual( Stem("globales"), "global" );
	deepEqual( Stem("globalización"), "globaliz" );
	deepEqual( Stem("globalizado"), "globaliz" );
	deepEqual( Stem("globalizarse"), "globaliz" );
	deepEqual( Stem("globe"), "glob" );
	deepEqual( Stem("globero"), "glober" );
	deepEqual( Stem("globo"), "glob" );
	deepEqual( Stem("globos"), "glob" );
	deepEqual( Stem("gloria"), "glori" );
	deepEqual( Stem("glorias"), "glori" );
	deepEqual( Stem("glorieta"), "gloriet" );
	deepEqual( Stem("gloriosísima"), "gloriosisim" );
	deepEqual( Stem("glosas"), "glos" );
	deepEqual( Stem("goave"), "goav" );
	deepEqual( Stem("gober"), "gob" );
	deepEqual( Stem("gobernaban"), "gobern" );
	deepEqual( Stem("gobernabilidad"), "gobern" );
	deepEqual( Stem("gobernación"), "gobern" );
	deepEqual( Stem("gobernada"), "gobern" );
	deepEqual( Stem("gobernado"), "gobern" );
	deepEqual( Stem("gobernador"), "gobern" );
	deepEqual( Stem("gobernadora"), "gobern" );
	deepEqual( Stem("gobernadores"), "gobern" );
	deepEqual( Stem("gobernante"), "gobern" );
	deepEqual( Stem("gobernantes"), "gobern" );
	deepEqual( Stem("gobernar"), "gobern" );
	deepEqual( Stem("gobernarse"), "gobern" );
	deepEqual( Stem("gobernícolas"), "gobernicol" );
	deepEqual( Stem("gobernó"), "gobern" );
	deepEqual( Stem("gobienro"), "gobienr" );
	deepEqual( Stem("gobierna"), "gobiern" );
	deepEqual( Stem("gobierne"), "gobiern" );
	deepEqual( Stem("gobierno"), "gobiern" );
	deepEqual( Stem("gobiernos"), "gobi" );
	deepEqual( Stem("goce"), "goc" );
	deepEqual( Stem("gocen"), "goc" );
	deepEqual( Stem("goddard"), "goddard" );
	deepEqual( Stem("godínez"), "godinez" );
	deepEqual( Stem("goering"), "goering" );
	deepEqual( Stem("goeter"), "goet" );
	deepEqual( Stem("goethe"), "goeth" );
	deepEqual( Stem("gol"), "gol" );
	deepEqual( Stem("golazo"), "golaz" );
	deepEqual( Stem("golden"), "gold" );
	deepEqual( Stem("goldsmith"), "goldsmith" );
	deepEqual( Stem("goleador"), "goleador" );
	deepEqual( Stem("goleadora"), "goleador" );
	deepEqual( Stem("goleadores"), "goleador" );
	deepEqual( Stem("golearon"), "gol" );
	deepEqual( Stem("goleo"), "gole" );
	deepEqual( Stem("goles"), "gol" );
	deepEqual( Stem("golf"), "golf" );
	deepEqual( Stem("golfistas"), "golfist" );
	deepEqual( Stem("golfo"), "golf" );
	deepEqual( Stem("golondrinas"), "golondrin" );
	deepEqual( Stem("golpe"), "golp" );
	deepEqual( Stem("golpeaba"), "golp" );
	deepEqual( Stem("golpeado"), "golp" );
	deepEqual( Stem("golpeador"), "golpeador" );
	deepEqual( Stem("golpeados"), "golp" );
	deepEqual( Stem("golpean"), "golp" );
	deepEqual( Stem("golpear"), "golp" );
	deepEqual( Stem("golpeara"), "golp" );
	deepEqual( Stem("golpearlo"), "golp" );
	deepEqual( Stem("golpearon"), "golp" );
	deepEqual( Stem("golpeo"), "golpe" );
	deepEqual( Stem("golpeó"), "golpe" );
	deepEqual( Stem("golpes"), "golp" );
	deepEqual( Stem("golpiza"), "golpiz" );
	deepEqual( Stem("goma"), "gom" );
	deepEqual( Stem("gomes"), "gom" );
	deepEqual( Stem("gómez"), "gomez" );
	deepEqual( Stem("gomiz"), "gomiz" );
	deepEqual( Stem("gonzalez"), "gonzalez" );
	deepEqual( Stem("gonzález"), "gonzalez" );
	deepEqual( Stem("gonzalitos"), "gonzalit" );
	deepEqual( Stem("gonzalo"), "gonzal" );
	deepEqual( Stem("goosen"), "goos" );
	deepEqual( Stem("gor"), "gor" );
	deepEqual( Stem("gorbachov"), "gorbachov" );
	deepEqual( Stem("gorda"), "gord" );
	deepEqual( Stem("gordillo"), "gordill" );
	deepEqual( Stem("gordo"), "gord" );
	deepEqual( Stem("gordolobo"), "gordolob" );
	deepEqual( Stem("gordon"), "gordon" );
	deepEqual( Stem("gorgona"), "gorgon" );
	deepEqual( Stem("gorgonia"), "gorgoni" );
	deepEqual( Stem("gorila"), "goril" );
	deepEqual( Stem("gorilas"), "goril" );
	deepEqual( Stem("gorios"), "gori" );
	deepEqual( Stem("gorra"), "gorr" );
	deepEqual( Stem("gorras"), "gorr" );
	deepEqual( Stem("gorro"), "gorr" );
	deepEqual( Stem("gortari"), "gortari" );
	deepEqual( Stem("gortázar"), "gortaz" );
	deepEqual( Stem("gorvachov"), "gorvachov" );
	deepEqual( Stem("gota"), "got" );
	deepEqual( Stem("gotas"), "got" );
	deepEqual( Stem("goteo"), "gote" );
	deepEqual( Stem("goteras"), "goter" );
	deepEqual( Stem("gourmet"), "gourmet" );
	deepEqual( Stem("gourmets"), "gourmets" );
	deepEqual( Stem("goya"), "goy" );
	deepEqual( Stem("goyesca"), "goyesc" );
	deepEqual( Stem("goyesco"), "goyesc" );
	deepEqual( Stem("goyo"), "goy" );
	deepEqual( Stem("goza"), "goz" );
	deepEqual( Stem("gozado"), "goz" );
	deepEqual( Stem("gozan"), "goz" );
	deepEqual( Stem("gozar"), "goz" );
	deepEqual( Stem("gozo"), "goz" );
	deepEqual( Stem("gozoso"), "gozos" );
	deepEqual( Stem("graba"), "grab" );
	deepEqual( Stem("grababan"), "grab" );
	deepEqual( Stem("grabación"), "grabacion" );
	deepEqual( Stem("grabaciones"), "grabacion" );
	deepEqual( Stem("grabada"), "grab" );
	deepEqual( Stem("grabadas"), "grab" );
	deepEqual( Stem("grabadista"), "grabad" );
	deepEqual( Stem("grabado"), "grab" );
	deepEqual( Stem("grabadora"), "grabador" );
	deepEqual( Stem("grabadoras"), "grabador" );
	deepEqual( Stem("grabados"), "grab" );
	deepEqual( Stem("grabamos"), "grab" );
	deepEqual( Stem("graban"), "grab" );
	deepEqual( Stem("grabar"), "grab" );
	deepEqual( Stem("grabara"), "grab" );
	deepEqual( Stem("grabará"), "grab" );
	deepEqual( Stem("grabarle"), "grab" );
	deepEqual( Stem("grabaron"), "grab" );
	deepEqual( Stem("grabó"), "grab" );
	deepEqual( Stem("gracia"), "graci" );
	deepEqual( Stem("graciano"), "gracian" );
	deepEqual( Stem("gracias"), "graci" );
	deepEqual( Stem("graciela"), "graciel" );
	deepEqual( Stem("gracilmente"), "gracil" );
	deepEqual( Stem("gradas"), "grad" );
	deepEqual( Stem("graderío"), "graderi" );
	deepEqual( Stem("grado"), "grad" );
	deepEqual( Stem("gradocon"), "gradocon" );
	deepEqual( Stem("grados"), "grad" );
	deepEqual( Stem("graduación"), "graduacion" );
	deepEqual( Stem("graduado"), "gradu" );
	deepEqual( Stem("graduados"), "gradu" );
	deepEqual( Stem("gradual"), "gradual" );
	deepEqual( Stem("gradualmente"), "gradual" );
	deepEqual( Stem("graduaron"), "gradu" );
	deepEqual( Stem("graduarse"), "gradu" );
	deepEqual( Stem("grafenberg"), "grafenberg" );
	deepEqual( Stem("grafiar"), "grafi" );
	deepEqual( Stem("gráfica"), "grafic" );
	deepEqual( Stem("gráficas"), "grafic" );
	deepEqual( Stem("gráfico"), "grafic" );
	deepEqual( Stem("grafito"), "grafit" );
	deepEqual( Stem("grajales"), "grajal" );
	deepEqual( Stem("grajeda"), "grajed" );
	deepEqual( Stem("gramajo"), "gramaj" );
	deepEqual( Stem("grammont"), "grammont" );
	deepEqual( Stem("grammy"), "grammy" );
	deepEqual( Stem("grammys"), "grammys" );
	deepEqual( Stem("gramos"), "gram" );
	deepEqual( Stem("grampus"), "grampus" );
	deepEqual( Stem("gran"), "gran" );
	deepEqual( Stem("grana"), "gran" );
	deepEqual( Stem("graña"), "grañ" );
	deepEqual( Stem("granada"), "gran" );
	deepEqual( Stem("granadas"), "gran" );
	deepEqual( Stem("granaderos"), "granader" );
	deepEqual( Stem("granados"), "gran" );
	deepEqual( Stem("granalguina"), "granalguin" );
	deepEqual( Stem("granata"), "granat" );
	deepEqual( Stem("granate"), "granat" );
	deepEqual( Stem("grand"), "grand" );
	deepEqual( Stem("grande"), "grand" );
	deepEqual( Stem("grandecito"), "grandecit" );
	deepEqual( Stem("grandes"), "grand" );
	deepEqual( Stem("grandeza"), "grandez" );
	deepEqual( Stem("grandguillhomme"), "grandguillhomm" );
	deepEqual( Stem("grandiosa"), "grandios" );
	deepEqual( Stem("grandiosas"), "grandi" );
	deepEqual( Stem("grandioso"), "grandios" );
	deepEqual( Stem("grandísimo"), "grandisim" );
	deepEqual( Stem("grandota"), "grandot" );
	deepEqual( Stem("grandote"), "grandot" );
	deepEqual( Stem("grandotes"), "grandot" );
	deepEqual( Stem("granero"), "graner" );
	deepEqual( Stem("granillo"), "granill" );
	deepEqual( Stem("granito"), "granit" );
	deepEqual( Stem("granja"), "granj" );
	deepEqual( Stem("granjas"), "granj" );
	deepEqual( Stem("granjeros"), "granjer" );
	deepEqual( Stem("granma"), "granm" );
	deepEqual( Stem("grano"), "gran" );
	deepEqual( Stem("granos"), "gran" );
	deepEqual( Stem("gratificaciones"), "gratif" );
	deepEqual( Stem("gratificante"), "gratif" );
	deepEqual( Stem("gratis"), "gratis" );
	deepEqual( Stem("gratitud"), "gratitud" );
	deepEqual( Stem("grato"), "grat" );
	deepEqual( Stem("gratuita"), "gratuit" );
	deepEqual( Stem("gratuitamente"), "gratuit" );
	deepEqual( Stem("gratuito"), "gratuit" );
	deepEqual( Stem("gravados"), "grav" );
	deepEqual( Stem("gravamen"), "gravam" );
	deepEqual( Stem("gravámenes"), "gravamen" );
	deepEqual( Stem("gravar"), "grav" );
	deepEqual( Stem("grave"), "grav" );
	deepEqual( Stem("gravedad"), "graved" );
	deepEqual( Stem("gravemente"), "gravement" );
	deepEqual( Stem("graves"), "grav" );
	deepEqual( Stem("gravísimo"), "gravisim" );
	deepEqual( Stem("gravitacionales"), "gravitacional" );
	deepEqual( Stem("gravoso"), "gravos" );
	deepEqual( Stem("gray"), "gray" );
	deepEqual( Stem("greatest"), "greatest" );
	deepEqual( Stem("grecia"), "greci" );
	deepEqual( Stem("grecorromano"), "grecorroman" );
	deepEqual( Stem("greenbelt"), "greenbelt" );
	deepEqual( Stem("greenspan"), "greensp" );
	deepEqual( Stem("greg"), "greg" );
	deepEqual( Stem("gregorianos"), "gregorian" );
	deepEqual( Stem("gregorio"), "gregori" );
	deepEqual( Stem("gregory"), "gregory" );
	deepEqual( Stem("greña"), "greñ" );
	deepEqual( Stem("griega"), "grieg" );
	deepEqual( Stem("griego"), "grieg" );
	deepEqual( Stem("griegos"), "grieg" );
	deepEqual( Stem("grieta"), "griet" );
	deepEqual( Stem("grijalva"), "grijalv" );
	deepEqual( Stem("grill"), "grill" );
	deepEqual( Stem("grilletes"), "grillet" );
	deepEqual( Stem("gripa"), "grip" );
	deepEqual( Stem("gripal"), "gripal" );
	deepEqual( Stem("gripe"), "grip" );
	deepEqual( Stem("gris"), "gris" );
	deepEqual( Stem("griselda"), "griseld" );
	deepEqual( Stem("grises"), "gris" );
	deepEqual( Stem("grita"), "grit" );
	deepEqual( Stem("gritaba"), "grit" );
	deepEqual( Stem("gritaban"), "grit" );
	deepEqual( Stem("gritando"), "grit" );
	deepEqual( Stem("gritar"), "grit" );
	deepEqual( Stem("gritarle"), "grit" );
	deepEqual( Stem("gritaron"), "grit" );
	deepEqual( Stem("gritería"), "grit" );
	deepEqual( Stem("grito"), "grit" );
	deepEqual( Stem("gritó"), "grit" );
	deepEqual( Stem("gritos"), "grit" );
	deepEqual( Stem("gro"), "gro" );
	deepEqual( Stem("grosera"), "groser" );
	deepEqual( Stem("grosería"), "gros" );
	deepEqual( Stem("groserías"), "gros" );
	deepEqual( Stem("grotewold"), "grotewold" );
	deepEqual( Stem("group"), "group" );
	deepEqual( Stem("grrrrr"), "grrrrr" );
	deepEqual( Stem("grúa"), "gru" );
	deepEqual( Stem("grúas"), "gru" );
	deepEqual( Stem("gruending"), "gruending" );
	deepEqual( Stem("gruesa"), "grues" );
	deepEqual( Stem("grueso"), "grues" );
	deepEqual( Stem("gruesos"), "grues" );
	deepEqual( Stem("grumos"), "grum" );
	deepEqual( Stem("grupo"), "grup" );
	deepEqual( Stem("grupos"), "grup" );
	deepEqual( Stem("guacamole"), "guacamol" );
	deepEqual( Stem("guadalajara"), "guadalaj" );
	deepEqual( Stem("guadalcanal"), "guadalcanal" );
	deepEqual( Stem("guadalupe"), "guadalup" );
	deepEqual( Stem("guajardo"), "guajard" );
	deepEqual( Stem("guamerú"), "guameru" );
	deepEqual( Stem("guan"), "guan" );
	deepEqual( Stem("guanajuatense"), "guanajuatens" );
	deepEqual( Stem("guanajuato"), "guanajuat" );
	deepEqual( Stem("guango"), "guang" );
	deepEqual( Stem("guantes"), "guant" );
	deepEqual( Stem("guapa"), "guap" );
	deepEqual( Stem("guapo"), "guap" );
	deepEqual( Stem("guarda"), "guard" );
	deepEqual( Stem("guardacostas"), "guardacost" );
	deepEqual( Stem("guardada"), "guard" );
	deepEqual( Stem("guardadita"), "guardadit" );
	deepEqual( Stem("guardados"), "guard" );
	deepEqual( Stem("guardameta"), "guardamet" );
	deepEqual( Stem("guardan"), "guard" );
	deepEqual( Stem("guardar"), "guard" );
	deepEqual( Stem("guardará"), "guard" );
	deepEqual( Stem("guardaran"), "guard" );
	deepEqual( Stem("guardarán"), "guard" );
	deepEqual( Stem("guardarlas"), "guard" );
	deepEqual( Stem("guardarropa"), "guardarrop" );
	deepEqual( Stem("guardarse"), "guard" );
	deepEqual( Stem("guardas"), "guard" );
	deepEqual( Stem("guardería"), "guard" );
	deepEqual( Stem("guardia"), "guardi" );
	deepEqual( Stem("guardián"), "guardian" );
	deepEqual( Stem("guardias"), "guardi" );
	deepEqual( Stem("guardó"), "guard" );
	deepEqual( Stem("guat"), "guat" );
	deepEqual( Stem("guatemala"), "guatemal" );
	deepEqual( Stem("guatemalteco"), "guatemaltec" );
	deepEqual( Stem("guatemaltecos"), "guatemaltec" );
	deepEqual( Stem("gubernamental"), "gubernamental" );
	deepEqual( Stem("gubernamentales"), "gubernamental" );
	deepEqual( Stem("gubernatura"), "gubernatur" );
	deepEqual( Stem("guccione"), "guccion" );
	deepEqual( Stem("güedad"), "güed" );
	deepEqual( Stem("güera"), "güer" );
	deepEqual( Stem("güerito"), "güerit" );
	deepEqual( Stem("güeritos"), "güerit" );
	deepEqual( Stem("güero"), "güer" );
	deepEqual( Stem("guerra"), "guerr" );
	deepEqual( Stem("guerras"), "guerr" );
	deepEqual( Stem("guerrerense"), "guerrerens" );
	deepEqual( Stem("guerreresnses"), "guerreresns" );
	deepEqual( Stem("guerrero"), "guerrer" );
	deepEqual( Stem("guerrilla"), "guerrill" );
	deepEqual( Stem("guerrillera"), "guerriller" );
	deepEqual( Stem("guerrillero"), "guerriller" );
	deepEqual( Stem("guerrilleros"), "guerriller" );
	deepEqual( Stem("guetiérrez"), "guetierrez" );
	deepEqual( Stem("guevara"), "guev" );
	deepEqual( Stem("guevarista"), "guevar" );
	deepEqual( Stem("guía"), "gui" );
	deepEqual( Stem("guiada"), "gui" );
	deepEqual( Stem("guiadas"), "gui" );
	deepEqual( Stem("guiar"), "gui" );
	deepEqual( Stem("guiaron"), "gui" );
	deepEqual( Stem("guíe"), "gui" );
	deepEqual( Stem("guillermina"), "guillermin" );
	deepEqual( Stem("guillermo"), "guillerm" );
	deepEqual( Stem("guillespie"), "guillespi" );
	deepEqual( Stem("guillotina"), "guillotin" );
	deepEqual( Stem("guío"), "gui" );
	deepEqual( Stem("guiomar"), "guiom" );
	deepEqual( Stem("guión"), "guion" );
	deepEqual( Stem("guiones"), "guion" );
	deepEqual( Stem("guitarra"), "guitarr" );
	deepEqual( Stem("guitarrista"), "guitarr" );
	deepEqual( Stem("guns"), "guns" );
	deepEqual( Stem("gurmets"), "gurmets" );
	deepEqual( Stem("gurría"), "gurr" );
	deepEqual( Stem("gurrola"), "gurrol" );
	deepEqual( Stem("gusano"), "gusan" );
	deepEqual( Stem("gusta"), "gust" );
	deepEqual( Stem("gustaba"), "gust" );
	deepEqual( Stem("gustaban"), "gust" );
	deepEqual( Stem("gustado"), "gust" );
	deepEqual( Stem("gustamos"), "gust" );
	deepEqual( Stem("gustan"), "gust" );
	deepEqual( Stem("gustando"), "gust" );
	deepEqual( Stem("gustar"), "gust" );
	deepEqual( Stem("gustaría"), "gust" );
	deepEqual( Stem("gustavo"), "gustav" );
	deepEqual( Stem("guste"), "gust" );
	deepEqual( Stem("gusten"), "gust" );
	deepEqual( Stem("gusto"), "gust" );
	deepEqual( Stem("gustó"), "gust" );
	deepEqual( Stem("gustos"), "gust" );
	deepEqual( Stem("gutierrez"), "gutierrez" );
	deepEqual( Stem("gutiérrez"), "gutierrez" );
	deepEqual( Stem("guzmán"), "guzman" );
	deepEqual( Stem("gyetko"), "gyetk" );
	deepEqual( Stem("h"), "h" );
	deepEqual( Stem("ha"), "ha" );
	deepEqual( Stem("habana"), "haban" );
	deepEqual( Stem("haber"), "hab" );
	deepEqual( Stem("haberlas"), "hab" );
	deepEqual( Stem("haberle"), "hab" );
	deepEqual( Stem("haberles"), "hab" );
	deepEqual( Stem("haberlo"), "hab" );
	deepEqual( Stem("haberlos"), "hab" );
	deepEqual( Stem("haberse"), "hab" );
	deepEqual( Stem("había"), "hab" );
	deepEqual( Stem("habíamos"), "hab" );
	deepEqual( Stem("habían"), "hab" );
	deepEqual( Stem("habidas"), "hab" );
	deepEqual( Stem("habido"), "hab" );
	deepEqual( Stem("habidos"), "hab" );
	deepEqual( Stem("habiendo"), "hab" );
	deepEqual( Stem("hábil"), "habil" );
	deepEqual( Stem("hábiles"), "habil" );
	deepEqual( Stem("habilidad"), "habil" );
	deepEqual( Stem("habilidades"), "habil" );
	deepEqual( Stem("habilitado"), "habilit" );
	deepEqual( Stem("habilitar"), "habilit" );
	deepEqual( Stem("habita"), "habit" );
	deepEqual( Stem("habitaban"), "habit" );
	deepEqual( Stem("habitables"), "habit" );
	deepEqual( Stem("habitación"), "habit" );
	deepEqual( Stem("habitacional"), "habitacional" );
	deepEqual( Stem("habitaciones"), "habit" );
	deepEqual( Stem("habitadas"), "habit" );
	deepEqual( Stem("habitado"), "habit" );
	deepEqual( Stem("habitantes"), "habit" );
	deepEqual( Stem("habitarán"), "habit" );
	deepEqual( Stem("hábito"), "habit" );
	deepEqual( Stem("hábitos"), "habit" );
	deepEqual( Stem("habituados"), "habitu" );
	deepEqual( Stem("habitual"), "habitual" );
	deepEqual( Stem("habla"), "habl" );
	deepEqual( Stem("hablaba"), "habl" );
	deepEqual( Stem("hablábamos"), "habl" );
	deepEqual( Stem("hablado"), "habl" );
	deepEqual( Stem("hablador"), "hablador" );
	deepEqual( Stem("hablados"), "habl" );
	deepEqual( Stem("háblame"), "hablam" );
	deepEqual( Stem("hablamos"), "habl" );
	deepEqual( Stem("hablan"), "habl" );
	deepEqual( Stem("hablando"), "habl" );
	deepEqual( Stem("hablándose"), "habl" );
	deepEqual( Stem("hablar"), "habl" );
	deepEqual( Stem("hablara"), "habl" );
	deepEqual( Stem("hablará"), "habl" );
	deepEqual( Stem("hablarán"), "habl" );
	deepEqual( Stem("hablarle"), "habl" );
	deepEqual( Stem("hablarme"), "habl" );
	deepEqual( Stem("hablarnos"), "habl" );
	deepEqual( Stem("hablaron"), "habl" );
	deepEqual( Stem("hable"), "habl" );
	deepEqual( Stem("hablé"), "habl" );
	deepEqual( Stem("hablen"), "habl" );
	deepEqual( Stem("hablo"), "habl" );
	deepEqual( Stem("habló"), "habl" );
	deepEqual( Stem("habra"), "habr" );
	deepEqual( Stem("habrá"), "habr" );
	deepEqual( Stem("habrán"), "habran" );
	deepEqual( Stem("habre"), "habr" );
	deepEqual( Stem("habremos"), "habr" );
	deepEqual( Stem("habría"), "habr" );
	deepEqual( Stem("habríamos"), "habr" );
	deepEqual( Stem("habrían"), "habr" );
	deepEqual( Stem("hace"), "hac" );
	deepEqual( Stem("hacemos"), "hac" );
	deepEqual( Stem("hacen"), "hac" );
	deepEqual( Stem("hacendarias"), "hacendari" );
	deepEqual( Stem("hacendario"), "hacendari" );
	deepEqual( Stem("hacendoso"), "hacend" );
	deepEqual( Stem("hacer"), "hac" );
	deepEqual( Stem("hacerla"), "hac" );
	deepEqual( Stem("hacerle"), "hac" );
	deepEqual( Stem("hacerles"), "hac" );
	deepEqual( Stem("hacerlo"), "hac" );
	deepEqual( Stem("hacerlos"), "hac" );
	deepEqual( Stem("hacerme"), "hac" );
	deepEqual( Stem("hacernos"), "hac" );
	deepEqual( Stem("hacerse"), "hac" );
	deepEqual( Stem("haces"), "hac" );
	deepEqual( Stem("hacha"), "hach" );
	deepEqual( Stem("hacia"), "haci" );
	deepEqual( Stem("hacía"), "hac" );
	deepEqual( Stem("hacíamos"), "hac" );
	deepEqual( Stem("hacían"), "hac" );
	deepEqual( Stem("hacienda"), "haciend" );
	deepEqual( Stem("haciendas"), "haciend" );
	deepEqual( Stem("haciendo"), "hac" );
	deepEqual( Stem("haciéndola"), "hac" );
	deepEqual( Stem("haciéndolas"), "hac" );
	deepEqual( Stem("haciéndoles"), "hac" );
	deepEqual( Stem("haciéndolo"), "hac" );
	deepEqual( Stem("haciéndolos"), "hac" );
	deepEqual( Stem("haciéndose"), "hac" );
	deepEqual( Stem("hacinamiento"), "hacin" );
	deepEqual( Stem("haddad"), "hadd" );
	deepEqual( Stem("haemophilus"), "haemophilus" );
	deepEqual( Stem("haga"), "hag" );
	deepEqual( Stem("hágalas"), "hagal" );
	deepEqual( Stem("hágalo"), "hagal" );
	deepEqual( Stem("hagamos"), "hag" );
	deepEqual( Stem("hagámosla"), "hagamosl" );
	deepEqual( Stem("hagámoslo"), "hagamosl" );
	deepEqual( Stem("hagan"), "hag" );
	deepEqual( Stem("hago"), "hag" );
	deepEqual( Stem("hainan"), "hain" );
	deepEqual( Stem("haití"), "hait" );
	deepEqual( Stem("haitianos"), "haitian" );
	deepEqual( Stem("halagadora"), "halag" );
	deepEqual( Stem("halago"), "halag" );
	deepEqual( Stem("halcion"), "halcion" );
	deepEqual( Stem("halcón"), "halcon" );
	deepEqual( Stem("halen"), "hal" );
	deepEqual( Stem("hall"), "hall" );
	deepEqual( Stem("halla"), "hall" );
	deepEqual( Stem("hallaba"), "hall" );
	deepEqual( Stem("hallado"), "hall" );
	deepEqual( Stem("hallados"), "hall" );
	deepEqual( Stem("hallamos"), "hall" );
	deepEqual( Stem("hallan"), "hall" );
	deepEqual( Stem("hallar"), "hall" );
	deepEqual( Stem("hallarle"), "hall" );
	deepEqual( Stem("hallazgo"), "hallazg" );
	deepEqual( Stem("hallazgos"), "hallazg" );
	deepEqual( Stem("halle"), "hall" );
	deepEqual( Stem("halley"), "halley" );
	deepEqual( Stem("halógeno"), "halogen" );
	deepEqual( Stem("hamaca"), "hamac" );
	deepEqual( Stem("hambre"), "hambr" );
	deepEqual( Stem("hambres"), "hambr" );
	deepEqual( Stem("hambriento"), "hambrient" );
	deepEqual( Stem("hambrientos"), "hambrient" );
	deepEqual( Stem("hamburguesa"), "hamburgues" );
	deepEqual( Stem("hamburguesas"), "hamburgues" );
	deepEqual( Stem("hamel"), "hamel" );
	deepEqual( Stem("hamilton"), "hamilton" );
	deepEqual( Stem("hampa"), "hamp" );
	deepEqual( Stem("hamponio"), "hamponi" );
	deepEqual( Stem("han"), "han" );
	deepEqual( Stem("hanchette"), "hanchett" );
	deepEqual( Stem("handicap"), "handicap" );
	deepEqual( Stem("hangar"), "hang" );
	deepEqual( Stem("hank"), "hank" );
	deepEqual( Stem("hannover"), "hannov" );
	deepEqual( Stem("hanover"), "hanov" );
	deepEqual( Stem("hans"), "hans" );
	deepEqual( Stem("hanse"), "hans" );
	deepEqual( Stem("hará"), "har" );
	deepEqual( Stem("harald"), "harald" );
	deepEqual( Stem("harán"), "haran" );
	deepEqual( Stem("harás"), "haras" );
	deepEqual( Stem("harbaugh"), "harbaugh" );
	deepEqual( Stem("hard"), "hard" );
	deepEqual( Stem("hardcore"), "hardcor" );
	deepEqual( Stem("hardware"), "hardwar" );
	deepEqual( Stem("haré"), "har" );
	deepEqual( Stem("harefield"), "harefield" );
	deepEqual( Stem("haremos"), "har" );
	deepEqual( Stem("haría"), "har" );
	deepEqual( Stem("haríamos"), "har" );
	deepEqual( Stem("harían"), "har" );
	deepEqual( Stem("harina"), "harin" );
	deepEqual( Stem("harlem"), "harlem" );
	deepEqual( Stem("haro"), "har" );
	deepEqual( Stem("harper"), "harp" );
	deepEqual( Stem("harry"), "harry" );
	deepEqual( Stem("hartazgo"), "hartazg" );
	deepEqual( Stem("hartmut"), "hartmut" );
	deepEqual( Stem("harto"), "hart" );
	deepEqual( Stem("harvard"), "harvard" );
	deepEqual( Stem("harvest"), "harvest" );
	deepEqual( Stem("harvey"), "harvey" );
	deepEqual( Stem("has"), "has" );
	deepEqual( Stem("hassan"), "hass" );
	deepEqual( Stem("hasta"), "hast" );
	deepEqual( Stem("haugen"), "haug" );
	deepEqual( Stem("hausser"), "hauss" );
	deepEqual( Stem("havelange"), "havelang" );
	deepEqual( Stem("hawai"), "hawai" );
	deepEqual( Stem("hawaiano"), "hawaian" );
	deepEqual( Stem("hay"), "hay" );
	deepEqual( Stem("haya"), "hay" );
	deepEqual( Stem("hayamos"), "hay" );
	deepEqual( Stem("hayan"), "hay" );
	deepEqual( Stem("hayas"), "hay" );
	deepEqual( Stem("hayat"), "hayat" );
	deepEqual( Stem("haz"), "haz" );
	deepEqual( Stem("hazaña"), "hazañ" );
	deepEqual( Stem("hboc"), "hboc" );
	deepEqual( Stem("hc"), "hc" );
	deepEqual( Stem("he"), "he" );
	deepEqual( Stem("headsh"), "headsh" );
	deepEqual( Stem("health"), "health" );
	deepEqual( Stem("heart"), "heart" );
	deepEqual( Stem("hearts"), "hearts" );
	deepEqual( Stem("heavy"), "heavy" );
	deepEqual( Stem("heberto"), "hebert" );
	deepEqual( Stem("hebilla"), "hebill" );
	deepEqual( Stem("hebillas"), "hebill" );
	deepEqual( Stem("hecha"), "hech" );
	deepEqual( Stem("hechas"), "hech" );
	deepEqual( Stem("hechizada"), "hechiz" );
	deepEqual( Stem("hecho"), "hech" );
	deepEqual( Stem("hechos"), "hech" );
	deepEqual( Stem("hectárea"), "hectare" );
	deepEqual( Stem("hectáreas"), "hectar" );
	deepEqual( Stem("hector"), "hector" );
	deepEqual( Stem("héctor"), "hector" );
	deepEqual( Stem("hedrick"), "hedrick" );
	deepEqual( Stem("hegel"), "hegel" );
	deepEqual( Stem("heidi"), "heidi" );
	deepEqual( Stem("heladas"), "hel" );
	deepEqual( Stem("helado"), "hel" );
	deepEqual( Stem("helados"), "hel" );
	deepEqual( Stem("helen"), "hel" );
	deepEqual( Stem("helicóptero"), "helicopter" );
	deepEqual( Stem("helicópteros"), "helicopter" );
	deepEqual( Stem("hembras"), "hembr" );
	deepEqual( Stem("hemerográficas"), "hemerograf" );
	deepEqual( Stem("hemiciclo"), "hemicicl" );
	deepEqual( Stem("hemisferio"), "hemisferi" );
	deepEqual( Stem("hemoglobina"), "hemoglobin" );
	deepEqual( Stem("hemorragias"), "hemorragi" );
	deepEqual( Stem("hemos"), "hem" );
	deepEqual( Stem("henderson"), "henderson" );
	deepEqual( Stem("henequenera"), "henequener" );
	deepEqual( Stem("henk"), "henk" );
	deepEqual( Stem("henrique"), "henriqu" );
	deepEqual( Stem("henry"), "henry" );
	deepEqual( Stem("hepática"), "hepat" );
	deepEqual( Stem("hepburn"), "hepburn" );
	deepEqual( Stem("heráclito"), "heraclit" );
	deepEqual( Stem("heralcor"), "heralcor" );
	deepEqual( Stem("herald"), "herald" );
	deepEqual( Stem("heráldico"), "herald" );
	deepEqual( Stem("herbicidas"), "herbic" );
	deepEqual( Stem("herbívoros"), "herbivor" );
	deepEqual( Stem("herce"), "herc" );
	deepEqual( Stem("hércules"), "hercul" );
	deepEqual( Stem("herdez"), "herdez" );
	deepEqual( Stem("hérdez"), "herdez" );
	deepEqual( Stem("heredados"), "hered" );
	deepEqual( Stem("heredero"), "hereder" );
	deepEqual( Stem("herederos"), "hereder" );
	deepEqual( Stem("heredia"), "heredi" );
	deepEqual( Stem("hereditario"), "hereditari" );
	deepEqual( Stem("herencia"), "herenci" );
	deepEqual( Stem("heriberto"), "heribert" );
	deepEqual( Stem("herida"), "her" );
	deepEqual( Stem("heridas"), "her" );
	deepEqual( Stem("herido"), "her" );
	deepEqual( Stem("heridos"), "her" );
	deepEqual( Stem("herir"), "her" );
	deepEqual( Stem("herirla"), "her" );
	deepEqual( Stem("heritage"), "heritag" );
	deepEqual( Stem("herman"), "herm" );
	deepEqual( Stem("hermana"), "herman" );
	deepEqual( Stem("hermanas"), "herman" );
	deepEqual( Stem("hermandad"), "hermand" );
	deepEqual( Stem("hermanitas"), "hermanit" );
	deepEqual( Stem("hermann"), "hermann" );
	deepEqual( Stem("hermano"), "herman" );
	deepEqual( Stem("hermanó"), "herman" );
	deepEqual( Stem("hermanos"), "herman" );
	deepEqual( Stem("hermenegildo"), "hermenegild" );
	deepEqual( Stem("hermética"), "hermet" );
	deepEqual( Stem("hermeticidad"), "hermet" );
	deepEqual( Stem("hermetismo"), "hermet" );
	deepEqual( Stem("hermila"), "hermil" );
	deepEqual( Stem("hermosa"), "hermos" );
	deepEqual( Stem("hermosamente"), "herm" );
	deepEqual( Stem("hermosas"), "herm" );
	deepEqual( Stem("hermosillo"), "hermosill" );
	deepEqual( Stem("hermoso"), "hermos" );
	deepEqual( Stem("hernán"), "hernan" );
	deepEqual( Stem("hernández"), "hernandez" );
	deepEqual( Stem("hernandéz"), "hernandez" );
	deepEqual( Stem("hernando"), "hern" );
	deepEqual( Stem("héroe"), "hero" );
	deepEqual( Stem("héroes"), "her" );
	deepEqual( Stem("heróicos"), "heroic" );
	deepEqual( Stem("heroísmo"), "heroism" );
	deepEqual( Stem("herradura"), "herradur" );
	deepEqual( Stem("herramental"), "herramental" );
	deepEqual( Stem("herramienta"), "herramient" );
	deepEqual( Stem("herramientas"), "herramient" );
	deepEqual( Stem("herrera"), "herrer" );
	deepEqual( Stem("herzfeld"), "herzfeld" );
	deepEqual( Stem("herzog"), "herzog" );
	deepEqual( Stem("heterosexual"), "heterosexual" );
	deepEqual( Stem("heterosexuales"), "heterosexual" );
	deepEqual( Stem("hewlett"), "hewlett" );
	deepEqual( Stem("hewlettpackard"), "hewlettpackard" );
	deepEqual( Stem("hgo"), "hgo" );
	deepEqual( Stem("híbrido"), "hibr" );
	deepEqual( Stem("híbridos"), "hibr" );
	deepEqual( Stem("hice"), "hic" );
	deepEqual( Stem("hiciera"), "hic" );
	deepEqual( Stem("hicieran"), "hic" );
	deepEqual( Stem("hicieron"), "hic" );
	deepEqual( Stem("hiciesen"), "hic" );
	deepEqual( Stem("hicimos"), "hic" );
	deepEqual( Stem("hiciste"), "hic" );
	deepEqual( Stem("hidalgo"), "hidalg" );
	deepEqual( Stem("hidalgos"), "hidalg" );
	deepEqual( Stem("hidalguense"), "hidalguens" );
	deepEqual( Stem("hidalguenses"), "hidalguens" );
	deepEqual( Stem("hidráulica"), "hidraul" );
	deepEqual( Stem("hidráulicos"), "hidraul" );
	deepEqual( Stem("hidrocarburo"), "hidrocarbur" );
	deepEqual( Stem("hidrocarburos"), "hidrocarbur" );
	deepEqual( Stem("hidroelectricidad"), "hidroelectr" );
	deepEqual( Stem("hidrológica"), "hidrolog" );
	deepEqual( Stem("hidrológicos"), "hidrolog" );
	deepEqual( Stem("hielo"), "hiel" );
	deepEqual( Stem("hierba"), "hierb" );
	deepEqual( Stem("hierbas"), "hierb" );
	deepEqual( Stem("hierro"), "hierr" );
	deepEqual( Stem("hierros"), "hierr" );
	deepEqual( Stem("hígado"), "hig" );
	deepEqual( Stem("hígados"), "hig" );
	deepEqual( Stem("higiene"), "higien" );
	deepEqual( Stem("higinio"), "higini" );
	deepEqual( Stem("hija"), "hij" );
	deepEqual( Stem("hijas"), "hij" );
	deepEqual( Stem("hijo"), "hij" );
	deepEqual( Stem("hijos"), "hij" );
	deepEqual( Stem("hilario"), "hilari" );
	deepEqual( Stem("hilburn"), "hilburn" );
	deepEqual( Stem("hilda"), "hild" );
	deepEqual( Stem("hilera"), "hiler" );
	deepEqual( Stem("hill"), "hill" );
	deepEqual( Stem("hillary"), "hillary" );
	deepEqual( Stem("hills"), "hills" );
	deepEqual( Stem("hilo"), "hil" );
	deepEqual( Stem("hilos"), "hil" );
	deepEqual( Stem("hilvanó"), "hilvan" );
	deepEqual( Stem("himenia"), "himeni" );
	deepEqual( Stem("himno"), "himn" );
	deepEqual( Stem("hinca"), "hinc" );
	deepEqual( Stem("hincapié"), "hincapi" );
	deepEqual( Stem("hines"), "hin" );
	deepEqual( Stem("hinojosa"), "hinoj" );
	deepEqual( Stem("hipersensibilidad"), "hipersensibil" );
	deepEqual( Stem("hipertensión"), "hipertension" );
	deepEqual( Stem("hipertiroidismo"), "hipertiroid" );
	deepEqual( Stem("hipo"), "hip" );
	deepEqual( Stem("hipólito"), "hipolit" );
	deepEqual( Stem("hiponacte"), "hiponact" );
	deepEqual( Stem("hipoteca"), "hipotec" );
	deepEqual( Stem("hipotecada"), "hipotec" );
	deepEqual( Stem("hipotecaria"), "hipotecari" );
	deepEqual( Stem("hipotecarias"), "hipotecari" );
	deepEqual( Stem("hipotecario"), "hipotecari" );
	deepEqual( Stem("hipótesis"), "hipotesis" );
	deepEqual( Stem("hipotéticamente"), "hipotet" );
	deepEqual( Stem("hipotéticos"), "hipotet" );
	deepEqual( Stem("hippie"), "hippi" );
	deepEqual( Stem("hippies"), "hippi" );
	deepEqual( Stem("hiriendo"), "hir" );
	deepEqual( Stem("hirió"), "hir" );
	deepEqual( Stem("hirofumi"), "hirofumi" );
	deepEqual( Stem("hiroshima"), "hiroshim" );
	deepEqual( Stem("hispana"), "hispan" );
	deepEqual( Stem("hispánicas"), "hispan" );
	deepEqual( Stem("hispanio"), "hispani" );
	deepEqual( Stem("hispanos"), "hispan" );
	deepEqual( Stem("histeria"), "histeri" );
	deepEqual( Stem("histéricamente"), "hister" );
	deepEqual( Stem("histérico"), "hister" );
	deepEqual( Stem("historia"), "histori" );
	deepEqual( Stem("historiadores"), "histori" );
	deepEqual( Stem("historial"), "historial" );
	deepEqual( Stem("historias"), "histori" );
	deepEqual( Stem("histórica"), "histor" );
	deepEqual( Stem("históricamente"), "histor" );
	deepEqual( Stem("históricas"), "histor" );
	deepEqual( Stem("historico"), "histor" );
	deepEqual( Stem("histórico"), "histor" );
	deepEqual( Stem("históricos"), "histor" );
	deepEqual( Stem("hit"), "hit" );
	deepEqual( Stem("hitazo"), "hitaz" );
	deepEqual( Stem("hitler"), "hitl" );
	deepEqual( Stem("hits"), "hits" );
	deepEqual( Stem("hizo"), "hiz" );
	deepEqual( Stem("ho"), "ho" );
	deepEqual( Stem("hobbie"), "hobbi" );
	deepEqual( Stem("hoc"), "hoc" );
	deepEqual( Stem("hocico"), "hocic" );
	deepEqual( Stem("hogar"), "hog" );
	deepEqual( Stem("hogares"), "hogar" );
	deepEqual( Stem("hogueras"), "hoguer" );
	deepEqual( Stem("hoja"), "hoj" );
	deepEqual( Stem("hojalata"), "hojalat" );
	deepEqual( Stem("hojas"), "hoj" );
	deepEqual( Stem("hojeo"), "hoje" );
	deepEqual( Stem("hojita"), "hojit" );
	deepEqual( Stem("hola"), "hol" );
	deepEqual( Stem("holanda"), "holand" );
	deepEqual( Stem("holandés"), "holandes" );
	deepEqual( Stem("holanes"), "holan" );
	deepEqual( Stem("holding"), "holding" );
	deepEqual( Stem("holgada"), "holg" );
	deepEqual( Stem("holgado"), "holg" );
	deepEqual( Stem("holguín"), "holguin" );
	deepEqual( Stem("holliday"), "holliday" );
	deepEqual( Stem("hollywood"), "hollywood" );
	deepEqual( Stem("holt"), "holt" );
	deepEqual( Stem("holzinger"), "holzing" );
	deepEqual( Stem("homar"), "hom" );
	deepEqual( Stem("hombre"), "hombr" );
	deepEqual( Stem("hombres"), "hombr" );
	deepEqual( Stem("hombro"), "hombr" );
	deepEqual( Stem("home"), "hom" );
	deepEqual( Stem("homenaje"), "homenaj" );
	deepEqual( Stem("homenajeado"), "homenaj" );
	deepEqual( Stem("homeóstasis"), "homeostasis" );
	deepEqual( Stem("homero"), "homer" );
	deepEqual( Stem("homicida"), "homic" );
	deepEqual( Stem("homicidas"), "homic" );
	deepEqual( Stem("homicidio"), "homicidi" );
	deepEqual( Stem("homicidios"), "homicidi" );
	deepEqual( Stem("homilía"), "homil" );
	deepEqual( Stem("homologación"), "homolog" );
	deepEqual( Stem("homologando"), "homolog" );
	deepEqual( Stem("homologarlas"), "homolog" );
	deepEqual( Stem("homologarlos"), "homolog" );
	deepEqual( Stem("homologarnos"), "homolog" );
	deepEqual( Stem("homólogo"), "homolog" );
	deepEqual( Stem("homólogos"), "homolog" );
	deepEqual( Stem("homónimo"), "homonim" );
	deepEqual( Stem("homosexual"), "homosexual" );
	deepEqual( Stem("homosexuales"), "homosexual" );
	deepEqual( Stem("homosexualismo"), "homosexual" );
	deepEqual( Stem("homs"), "homs" );
	deepEqual( Stem("honda"), "hond" );
	deepEqual( Stem("hondo"), "hond" );
	deepEqual( Stem("honduras"), "hondur" );
	deepEqual( Stem("hondureño"), "hondureñ" );
	deepEqual( Stem("hondureños"), "hondureñ" );
	deepEqual( Stem("honesta"), "honest" );
	deepEqual( Stem("honestamente"), "honest" );
	deepEqual( Stem("honestidad"), "honest" );
	deepEqual( Stem("honesto"), "honest" );
	deepEqual( Stem("honestos"), "honest" );
	deepEqual( Stem("hong"), "hong" );
	deepEqual( Stem("honor"), "honor" );
	deepEqual( Stem("honorabilidad"), "honor" );
	deepEqual( Stem("honorable"), "honor" );
	deepEqual( Stem("honorables"), "honor" );
	deepEqual( Stem("honorarios"), "honorari" );
	deepEqual( Stem("honores"), "honor" );
	deepEqual( Stem("honorífica"), "honorif" );
	deepEqual( Stem("honrada"), "honr" );
	deepEqual( Stem("honradez"), "honradez" );
	deepEqual( Stem("honrados"), "honr" );
	deepEqual( Stem("honrarlo"), "honr" );
	deepEqual( Stem("hopkins"), "hopkins" );
	deepEqual( Stem("hora"), "hor" );
	deepEqual( Stem("horacio"), "horaci" );
	deepEqual( Stem("horario"), "horari" );
	deepEqual( Stem("horarios"), "horari" );
	deepEqual( Stem("horas"), "hor" );
	deepEqual( Stem("horcada"), "horc" );
	deepEqual( Stem("horchata"), "horchat" );
	deepEqual( Stem("horizon"), "horizon" );
	deepEqual( Stem("horizontal"), "horizontal" );
	deepEqual( Stem("horizonte"), "horizont" );
	deepEqual( Stem("horizontes"), "horizont" );
	deepEqual( Stem("hormona"), "hormon" );
	deepEqual( Stem("hormonas"), "hormon" );
	deepEqual( Stem("horneados"), "horn" );
	deepEqual( Stem("hornos"), "horn" );
	deepEqual( Stem("horrenda"), "horrend" );
	deepEqual( Stem("horrendo"), "horrend" );
	deepEqual( Stem("horribles"), "horribl" );
	deepEqual( Stem("horror"), "horror" );
	deepEqual( Stem("horrorizado"), "horroriz" );
	deepEqual( Stem("hortalizas"), "hortaliz" );
	deepEqual( Stem("horwath"), "horwath" );
	deepEqual( Stem("hospedaba"), "hosped" );
	deepEqual( Stem("hospederos"), "hospeder" );
	deepEqual( Stem("hospicio"), "hospici" );
	deepEqual( Stem("hospital"), "hospital" );
	deepEqual( Stem("hospitalario"), "hospitalari" );
	deepEqual( Stem("hospitalarios"), "hospitalari" );
	deepEqual( Stem("hospitales"), "hospital" );
	deepEqual( Stem("hospitalización"), "hospitaliz" );
	deepEqual( Stem("hospitalizado"), "hospitaliz" );
	deepEqual( Stem("hospitalizados"), "hospitaliz" );
	deepEqual( Stem("hostile"), "hostil" );
	deepEqual( Stem("hostilidades"), "hostil" );
	deepEqual( Stem("hot"), "hot" );
	deepEqual( Stem("hotel"), "hotel" );
	deepEqual( Stem("hotelera"), "hoteler" );
	deepEqual( Stem("hoteleros"), "hoteler" );
	deepEqual( Stem("hoteles"), "hotel" );
	deepEqual( Stem("houston"), "houston" );
	deepEqual( Stem("howard"), "howard" );
	deepEqual( Stem("hoy"), "hoy" );
	deepEqual( Stem("hoyo"), "hoy" );
	deepEqual( Stem("hoyos"), "hoy" );
	deepEqual( Stem("hp"), "hp" );
	deepEqual( Stem("hristo"), "hrist" );
	deepEqual( Stem("huacho"), "huach" );
	deepEqual( Stem("huahutla"), "huahutl" );
	deepEqual( Stem("huamantla"), "huamantl" );
	deepEqual( Stem("huambo"), "huamb" );
	deepEqual( Stem("huang"), "huang" );
	deepEqual( Stem("huapango"), "huapang" );
	deepEqual( Stem("huasteca"), "huastec" );
	deepEqual( Stem("huautla"), "huautl" );
	deepEqual( Stem("huayami"), "huayami" );
	deepEqual( Stem("hub"), "hub" );
	deepEqual( Stem("hubiera"), "hub" );
	deepEqual( Stem("hubieran"), "hub" );
	deepEqual( Stem("hubiere"), "hubier" );
	deepEqual( Stem("hubiese"), "hub" );
	deepEqual( Stem("hubiesen"), "hub" );
	deepEqual( Stem("hubo"), "hub" );
	deepEqual( Stem("huecos"), "huec" );
	deepEqual( Stem("huehuetenango"), "huehuetenang" );
	deepEqual( Stem("huehuetlán"), "huehuetlan" );
	deepEqual( Stem("huehuetlatoa"), "huehuetlato" );
	deepEqual( Stem("huela"), "huel" );
	deepEqual( Stem("huele"), "huel" );
	deepEqual( Stem("huelen"), "huel" );
	deepEqual( Stem("huelga"), "huelg" );
	deepEqual( Stem("huelguistas"), "huelguist" );
	deepEqual( Stem("huella"), "huell" );
	deepEqual( Stem("huellas"), "huell" );
	deepEqual( Stem("huérfanos"), "huerfan" );
	deepEqual( Stem("huerta"), "huert" );
	deepEqual( Stem("huertas"), "huert" );
	deepEqual( Stem("huerto"), "huert" );
	deepEqual( Stem("huertos"), "huert" );
	deepEqual( Stem("huesca"), "huesc" );
	deepEqual( Stem("hueso"), "hues" );
	deepEqual( Stem("huésped"), "huesp" );
	deepEqual( Stem("huestes"), "huest" );
	deepEqual( Stem("huevazos"), "huevaz" );
	deepEqual( Stem("huevo"), "huev" );
	deepEqual( Stem("huevos"), "huev" );
	deepEqual( Stem("hufbauer"), "hufbau" );
	deepEqual( Stem("hugo"), "hug" );
	deepEqual( Stem("huichapan"), "huichap" );
	deepEqual( Stem("huichol"), "huichol" );
	deepEqual( Stem("huicholas"), "huichol" );
	deepEqual( Stem("huicholes"), "huichol" );
	deepEqual( Stem("huidizo"), "huidiz" );
	deepEqual( Stem("huinalá"), "huinal" );
	deepEqual( Stem("huir"), "huir" );
	deepEqual( Stem("huitzilopochtli"), "huitzilopochtli" );
	deepEqual( Stem("huitzuco"), "huitzuc" );
	deepEqual( Stem("hules"), "hul" );
	deepEqual( Stem("humana"), "human" );
	deepEqual( Stem("humanas"), "human" );
	deepEqual( Stem("humanidad"), "human" );
	deepEqual( Stem("humanidades"), "human" );
	deepEqual( Stem("humanista"), "human" );
	deepEqual( Stem("humanitario"), "humanitari" );
	deepEqual( Stem("humanitarios"), "humanitari" );
	deepEqual( Stem("humaniza"), "humaniz" );
	deepEqual( Stem("humanizar"), "humaniz" );
	deepEqual( Stem("humano"), "human" );
	deepEqual( Stem("humanos"), "human" );
	deepEqual( Stem("humberto"), "humbert" );
	deepEqual( Stem("humeante"), "humeant" );
	deepEqual( Stem("humedad"), "humed" );
	deepEqual( Stem("humildad"), "humild" );
	deepEqual( Stem("humilde"), "humild" );
	deepEqual( Stem("humillados"), "humill" );
	deepEqual( Stem("humillante"), "humill" );
	deepEqual( Stem("humillantemente"), "humill" );
	deepEqual( Stem("humillar"), "humill" );
	deepEqual( Stem("humo"), "hum" );
	deepEqual( Stem("humor"), "humor" );
	deepEqual( Stem("humorista"), "humor" );
	deepEqual( Stem("hundida"), "hund" );
	deepEqual( Stem("hundidas"), "hund" );
	deepEqual( Stem("hundido"), "hund" );
	deepEqual( Stem("hundidos"), "hund" );
	deepEqual( Stem("hundieron"), "hund" );
	deepEqual( Stem("hundimientos"), "hundimient" );
	deepEqual( Stem("hundió"), "hund" );
	deepEqual( Stem("hundir"), "hund" );
	deepEqual( Stem("húngaro"), "hungar" );
	deepEqual( Stem("hungo"), "hung" );
	deepEqual( Stem("hungría"), "hungr" );
	deepEqual( Stem("huntsville"), "huntsvill" );
	deepEqual( Stem("hurtadillas"), "hurtadill" );
	deepEqual( Stem("hurtado"), "hurt" );
	deepEqual( Stem("hurtic"), "hurtic" );
	deepEqual( Stem("huss"), "huss" );
	deepEqual( Stem("hussein"), "hussein" );
	deepEqual( Stem("huyeron"), "huyeron" );
	deepEqual( Stem("huyó"), "huy" );
	deepEqual( Stem("hylsa"), "hylsa" );
	deepEqual( Stem("i"), "i" );
	deepEqual( Stem("iaaf"), "iaaf" );
	deepEqual( Stem("iacocca"), "iacocc" );
	deepEqual( Stem("iannuzzelli"), "iannuzzelli" );
	deepEqual( Stem("iba"), "iba" );
	deepEqual( Stem("íbamos"), "ibam" );
	deepEqual( Stem("iban"), "iban" );
	deepEqual( Stem("ibargüengoitia"), "ibargüengoiti" );
	deepEqual( Stem("ibarra"), "ibarr" );
	deepEqual( Stem("ibéricos"), "iber" );
	deepEqual( Stem("ibm"), "ibm" );
	deepEqual( Stem("ibor"), "ibor" );
	deepEqual( Stem("ica"), "ica" );
	deepEqual( Stem("iceberg"), "iceberg" );
	deepEqual( Stem("ichi"), "ichi" );
	deepEqual( Stem("ici"), "ici" );
	deepEqual( Stem("iconografía"), "iconograf" );
	deepEqual( Stem("iconográfica"), "iconograf" );
	deepEqual( Stem("id"), "id" );
	deepEqual( Stem("ida"), "ida" );
	deepEqual( Stem("idaho"), "idah" );
	deepEqual( Stem("idalia"), "idali" );
	deepEqual( Stem("idea"), "ide" );
	deepEqual( Stem("ideal"), "ideal" );
	deepEqual( Stem("ideales"), "ideal" );
	deepEqual( Stem("idealistas"), "ideal" );
	deepEqual( Stem("ideario"), "ideari" );
	deepEqual( Stem("ideas"), "ide" );
	deepEqual( Stem("ídem"), "idem" );
	deepEqual( Stem("idéntica"), "ident" );
	deepEqual( Stem("idéntico"), "ident" );
	deepEqual( Stem("identidad"), "ident" );
	deepEqual( Stem("identifica"), "identif" );
	deepEqual( Stem("identificación"), "identif" );
	deepEqual( Stem("identificada"), "identific" );
	deepEqual( Stem("identificadas"), "identific" );
	deepEqual( Stem("identificado"), "identific" );
	deepEqual( Stem("identificados"), "identific" );
	deepEqual( Stem("identifican"), "identific" );
	deepEqual( Stem("identificando"), "identific" );
	deepEqual( Stem("identificar"), "identific" );
	deepEqual( Stem("identificarlo"), "identific" );
	deepEqual( Stem("identificaron"), "identific" );
	deepEqual( Stem("identificarse"), "identific" );
	deepEqual( Stem("identificó"), "identific" );
	deepEqual( Stem("identifique"), "identifiqu" );
	deepEqual( Stem("identifiquen"), "identifiqu" );
	deepEqual( Stem("ideó"), "ide" );
	deepEqual( Stem("ideología"), "ideolog" );
	deepEqual( Stem("ideologías"), "ideolog" );
	deepEqual( Stem("ideológica"), "ideolog" );
	deepEqual( Stem("ideológicas"), "ideolog" );
	deepEqual( Stem("ideológico"), "ideolog" );
	deepEqual( Stem("idioma"), "idiom" );
	deepEqual( Stem("idiomas"), "idiom" );
	deepEqual( Stem("idiosincrasia"), "idiosincrasi" );
	deepEqual( Stem("idiotas"), "idiot" );
	deepEqual( Stem("ido"), "ido" );
	deepEqual( Stem("idólatra"), "idolatr" );
	deepEqual( Stem("idolatría"), "idolatr" );
	deepEqual( Stem("ídolo"), "idol" );
	deepEqual( Stem("ídolos"), "idol" );
	deepEqual( Stem("idóneo"), "idone" );
	deepEqual( Stem("ife"), "ife" );
	deepEqual( Stem("ifigenia"), "ifigeni" );
	deepEqual( Stem("ifigenios"), "ifigeni" );
	deepEqual( Stem("iglesia"), "iglesi" );
	deepEqual( Stem("iglesiaestado"), "iglesiaest" );
	deepEqual( Stem("iglesias"), "iglesi" );
	deepEqual( Stem("ignacio"), "ignaci" );
	deepEqual( Stem("ignición"), "ignicion" );
	deepEqual( Stem("ignominia"), "ignomini" );
	deepEqual( Stem("ignora"), "ignor" );
	deepEqual( Stem("ignoran"), "ignor" );
	deepEqual( Stem("ignorancia"), "ignor" );
	deepEqual( Stem("ignorando"), "ignor" );
	deepEqual( Stem("ignorante"), "ignor" );
	deepEqual( Stem("ignorar"), "ignor" );
	deepEqual( Stem("ignore"), "ignor" );
	deepEqual( Stem("igor"), "igor" );
	deepEqual( Stem("igual"), "igual" );
	deepEqual( Stem("iguala"), "igual" );
	deepEqual( Stem("igualada"), "igual" );
	deepEqual( Stem("igualadas"), "igual" );
	deepEqual( Stem("igualan"), "igual" );
	deepEqual( Stem("igualar"), "igual" );
	deepEqual( Stem("igualarlo"), "igual" );
	deepEqual( Stem("igualarnos"), "igual" );
	deepEqual( Stem("igualaron"), "igual" );
	deepEqual( Stem("igualdad"), "iguald" );
	deepEqual( Stem("iguales"), "igual" );
	deepEqual( Stem("igualita"), "igualit" );
	deepEqual( Stem("igualmente"), "igual" );
	deepEqual( Stem("ii"), "ii" );
	deepEqual( Stem("iii"), "iii" );
	deepEqual( Stem("il"), "il" );
	deepEqual( Stem("ildefonso"), "ildefons" );
	deepEqual( Stem("ilegal"), "ilegal" );
	deepEqual( Stem("ilegales"), "ilegal" );
	deepEqual( Stem("ilegalmente"), "ilegal" );
	deepEqual( Stem("ilesa"), "iles" );
	deepEqual( Stem("ileso"), "iles" );
	deepEqual( Stem("ilícita"), "ilicit" );
	deepEqual( Stem("ilícito"), "ilicit" );
	deepEqual( Stem("ilícitos"), "ilicit" );
	deepEqual( Stem("ilimitada"), "ilimit" );
	deepEqual( Stem("ilimitadas"), "ilimit" );
	deepEqual( Stem("ilimitado"), "ilimit" );
	deepEqual( Stem("ilimitados"), "ilimit" );
	deepEqual( Stem("illinois"), "illinois" );
	deepEqual( Stem("ilógica"), "ilog" );
	deepEqual( Stem("ilógico"), "ilog" );
	deepEqual( Stem("iluminación"), "ilumin" );
	deepEqual( Stem("iluminadas"), "ilumin" );
	deepEqual( Stem("iluminaron"), "ilumin" );
	deepEqual( Stem("iluminó"), "ilumin" );
	deepEqual( Stem("ilusas"), "ilus" );
	deepEqual( Stem("ilusión"), "ilusion" );
	deepEqual( Stem("ilusiones"), "ilusion" );
	deepEqual( Stem("ilustra"), "ilustr" );
	deepEqual( Stem("ilustraciones"), "ilustr" );
	deepEqual( Stem("ilustran"), "ilustr" );
	deepEqual( Stem("ilustrar"), "ilustr" );
	deepEqual( Stem("ilustraría"), "ilustr" );
	deepEqual( Stem("im"), "im" );
	deepEqual( Stem("imagen"), "imag" );
	deepEqual( Stem("imágenes"), "imagen" );
	deepEqual( Stem("imagina"), "imagin" );
	deepEqual( Stem("imaginación"), "imagin" );
	deepEqual( Stem("imaginar"), "imagin" );
	deepEqual( Stem("imagínense"), "imaginens" );
	deepEqual( Stem("imagínese"), "imagines" );
	deepEqual( Stem("imagino"), "imagin" );
	deepEqual( Stem("imaginó"), "imagin" );
	deepEqual( Stem("imán"), "iman" );
	deepEqual( Stem("imax"), "imax" );
	deepEqual( Stem("imbécil"), "imbecil" );
	deepEqual( Stem("imecas"), "imec" );
	deepEqual( Stem("imelda"), "imeld" );
	deepEqual( Stem("imevisión"), "imevision" );
	deepEqual( Stem("imitable"), "imit" );
	deepEqual( Stem("imitación"), "imit" );
	deepEqual( Stem("imitaciones"), "imit" );
	deepEqual( Stem("imitan"), "imit" );
	deepEqual( Stem("imitar"), "imit" );
	deepEqual( Stem("imitarlo"), "imit" );
	deepEqual( Stem("imp"), "imp" );
	deepEqual( Stem("impaciencia"), "impacient" );
	deepEqual( Stem("impacta"), "impact" );
	deepEqual( Stem("impactar"), "impact" );
	deepEqual( Stem("impactaría"), "impact" );
	deepEqual( Stem("impactaron"), "impact" );
	deepEqual( Stem("impacten"), "impact" );
	deepEqual( Stem("impacto"), "impact" );
	deepEqual( Stem("impactó"), "impact" );
	deepEqual( Stem("impactos"), "impact" );
	deepEqual( Stem("imparcial"), "imparcial" );
	deepEqual( Stem("imparcialidad"), "imparcial" );
	deepEqual( Stem("impartan"), "impart" );
	deepEqual( Stem("imparte"), "impart" );
	deepEqual( Stem("imparten"), "impart" );
	deepEqual( Stem("impartía"), "impart" );
	deepEqual( Stem("impartida"), "impart" );
	deepEqual( Stem("impartiendo"), "impart" );
	deepEqual( Stem("impartieran"), "impart" );
	deepEqual( Stem("impartimos"), "impart" );
	deepEqual( Stem("impartir"), "impart" );
	deepEqual( Stem("impartirá"), "impart" );
	deepEqual( Stem("impartirán"), "impart" );
	deepEqual( Stem("impasse"), "impass" );
	deepEqual( Stem("impecable"), "impec" );
	deepEqual( Stem("impedido"), "imped" );
	deepEqual( Stem("impedimento"), "impediment" );
	deepEqual( Stem("impedimentos"), "impediment" );
	deepEqual( Stem("impedir"), "imped" );
	deepEqual( Stem("impedirá"), "imped" );
	deepEqual( Stem("impedirán"), "imped" );
	deepEqual( Stem("impediría"), "imped" );
	deepEqual( Stem("impedirle"), "imped" );
	deepEqual( Stem("imperan"), "imper" );
	deepEqual( Stem("imperdonable"), "imperdon" );
	deepEqual( Stem("imperfecto"), "imperfect" );
	deepEqual( Stem("imperial"), "imperial" );
	deepEqual( Stem("imperiales"), "imperial" );
	deepEqual( Stem("imperialismo"), "imperial" );
	deepEqual( Stem("imperialistas"), "imperial" );
	deepEqual( Stem("imperio"), "imperi" );
	deepEqual( Stem("impersonal"), "impersonal" );
	deepEqual( Stem("impida"), "impid" );
	deepEqual( Stem("impide"), "impid" );
	deepEqual( Stem("impiden"), "impid" );
	deepEqual( Stem("impidiera"), "impid" );
	deepEqual( Stem("impidieron"), "impid" );
	deepEqual( Stem("impidió"), "impid" );
	deepEqual( Stem("implacable"), "implac" );
	deepEqual( Stem("implacables"), "implac" );
	deepEqual( Stem("implantación"), "implant" );
	deepEqual( Stem("implantado"), "implant" );
	deepEqual( Stem("implantados"), "implant" );
	deepEqual( Stem("implantando"), "implant" );
	deepEqual( Stem("implantaremos"), "implant" );
	deepEqual( Stem("implanté"), "implant" );
	deepEqual( Stem("implementación"), "implement" );
	deepEqual( Stem("implementada"), "implement" );
	deepEqual( Stem("implementan"), "implement" );
	deepEqual( Stem("implementando"), "implement" );
	deepEqual( Stem("implementar"), "implement" );
	deepEqual( Stem("implementarán"), "implement" );
	deepEqual( Stem("implementarla"), "implement" );
	deepEqual( Stem("implementarse"), "implement" );
	deepEqual( Stem("implementó"), "implement" );
	deepEqual( Stem("implementos"), "implement" );
	deepEqual( Stem("implica"), "implic" );
	deepEqual( Stem("implicación"), "implic" );
	deepEqual( Stem("implicaciones"), "implic" );
	deepEqual( Stem("implicados"), "implic" );
	deepEqual( Stem("implican"), "implic" );
	deepEqual( Stem("implicando"), "implic" );
	deepEqual( Stem("implicar"), "implic" );
	deepEqual( Stem("implicará"), "implic" );
	deepEqual( Stem("implicaran"), "implic" );
	deepEqual( Stem("implícito"), "implicit" );
	deepEqual( Stem("implicó"), "implic" );
	deepEqual( Stem("impolutos"), "impolut" );
	deepEqual( Stem("impondrá"), "impondr" );
	deepEqual( Stem("impondrán"), "impondran" );
	deepEqual( Stem("impondría"), "impondr" );
	deepEqual( Stem("impone"), "impon" );
	deepEqual( Stem("imponemos"), "impon" );
	deepEqual( Stem("imponen"), "impon" );
	deepEqual( Stem("imponer"), "impon" );
	deepEqual( Stem("imponerse"), "impon" );
	deepEqual( Stem("impongan"), "impong" );
	deepEqual( Stem("imponiendo"), "impon" );
	deepEqual( Stem("imponiéndose"), "impon" );
	deepEqual( Stem("importa"), "import" );
	deepEqual( Stem("importaba"), "import" );
	deepEqual( Stem("importación"), "import" );
	deepEqual( Stem("importaciones"), "import" );
	deepEqual( Stem("importadas"), "import" );
	deepEqual( Stem("importado"), "import" );
	deepEqual( Stem("importadora"), "import" );
	deepEqual( Stem("importados"), "import" );
	deepEqual( Stem("importan"), "import" );
	deepEqual( Stem("importancia"), "import" );
	deepEqual( Stem("importando"), "import" );
	deepEqual( Stem("importante"), "import" );
	deepEqual( Stem("importantemente"), "import" );
	deepEqual( Stem("importantes"), "import" );
	deepEqual( Stem("importantísimas"), "importantisim" );
	deepEqual( Stem("importantísimo"), "importantisim" );
	deepEqual( Stem("importantísimos"), "importantis" );
	deepEqual( Stem("importar"), "import" );
	deepEqual( Stem("importará"), "import" );
	deepEqual( Stem("importaría"), "import" );
	deepEqual( Stem("importe"), "import" );
	deepEqual( Stem("importó"), "import" );
	deepEqual( Stem("imposibilidad"), "imposibil" );
	deepEqual( Stem("imposibilitada"), "imposibilit" );
	deepEqual( Stem("imposible"), "impos" );
	deepEqual( Stem("imposición"), "imposicion" );
	deepEqual( Stem("imposiciones"), "imposicion" );
	deepEqual( Stem("impositivos"), "imposit" );
	deepEqual( Stem("impostergable"), "imposterg" );
	deepEqual( Stem("impostergables"), "imposterg" );
	deepEqual( Stem("impotencia"), "impotent" );
	deepEqual( Stem("impotente"), "impotent" );
	deepEqual( Stem("impregnada"), "impregn" );
	deepEqual( Stem("impregnan"), "impregn" );
	deepEqual( Stem("imprenta"), "imprent" );
	deepEqual( Stem("impresa"), "impres" );
	deepEqual( Stem("impresas"), "impres" );
	deepEqual( Stem("impresión"), "impresion" );
	deepEqual( Stem("impresionable"), "impresion" );
	deepEqual( Stem("impresionada"), "impresion" );
	deepEqual( Stem("impresionado"), "impresion" );
	deepEqual( Stem("impresionante"), "impresion" );
	deepEqual( Stem("impresionantes"), "impresion" );
	deepEqual( Stem("impresiones"), "impresion" );
	deepEqual( Stem("impresionismo"), "impresion" );
	deepEqual( Stem("impresionista"), "impresion" );
	deepEqual( Stem("impresionó"), "impresion" );
	deepEqual( Stem("impreso"), "impres" );
	deepEqual( Stem("impresora"), "impresor" );
	deepEqual( Stem("impresoras"), "impresor" );
	deepEqual( Stem("impresores"), "impresor" );
	deepEqual( Stem("impresos"), "impres" );
	deepEqual( Stem("imprevisión"), "imprevision" );
	deepEqual( Stem("imprimió"), "imprim" );
	deepEqual( Stem("imprimir"), "imprim" );
	deepEqual( Stem("imprimirse"), "imprim" );
	deepEqual( Stem("improductiva"), "improduct" );
	deepEqual( Stem("impropiedades"), "impropiedad" );
	deepEqual( Stem("improvisación"), "improvis" );
	deepEqual( Stem("improvisada"), "improvis" );
	deepEqual( Stem("improvisados"), "improvis" );
	deepEqual( Stem("imprudencia"), "imprudent" );
	deepEqual( Stem("imprudencial"), "imprudencial" );
	deepEqual( Stem("imprudencialmente"), "imprudencial" );
	deepEqual( Stem("imprudentes"), "imprudent" );
	deepEqual( Stem("impuesta"), "impuest" );
	deepEqual( Stem("impuestas"), "impuest" );
	deepEqual( Stem("impuesto"), "impuest" );
	deepEqual( Stem("impuestos"), "impuest" );
	deepEqual( Stem("impugnaciones"), "impugn" );
	deepEqual( Stem("impugnado"), "impugn" );
	deepEqual( Stem("impulsa"), "impuls" );
	deepEqual( Stem("impulsan"), "impuls" );
	deepEqual( Stem("impulsando"), "impuls" );
	deepEqual( Stem("impulsar"), "impuls" );
	deepEqual( Stem("impulse"), "impuls" );
	deepEqual( Stem("impulsivo"), "impuls" );
	deepEqual( Stem("impulso"), "impuls" );
	deepEqual( Stem("impulsos"), "impuls" );
	deepEqual( Stem("impunemente"), "impun" );
	deepEqual( Stem("impunes"), "impun" );
	deepEqual( Stem("impunidad"), "impun" );
	deepEqual( Stem("impunidades"), "impun" );
	deepEqual( Stem("impuntualidad"), "impuntual" );
	deepEqual( Stem("impuras"), "impur" );
	deepEqual( Stem("impusieron"), "impus" );
	deepEqual( Stem("impuso"), "impus" );
	deepEqual( Stem("imputaciones"), "imput" );
	deepEqual( Stem("imputado"), "imput" );
	deepEqual( Stem("imsa"), "imsa" );
	deepEqual( Stem("imss"), "imss" );
	deepEqual( Stem("in"), "in" );
	deepEqual( Stem("inaccesible"), "inacces" );
	deepEqual( Stem("inaccesibles"), "inacces" );
	deepEqual( Stem("inacción"), "inaccion" );
	deepEqual( Stem("inaceptable"), "inacept" );
	deepEqual( Stem("inactividad"), "inact" );
	deepEqual( Stem("inadecuada"), "inadecu" );
	deepEqual( Stem("inadmisible"), "inadmis" );
	deepEqual( Stem("inadvertidas"), "inadvert" );
	deepEqual( Stem("inadvertidos"), "inadvert" );
	deepEqual( Stem("inah"), "inah" );
	deepEqual( Stem("inalámbrico"), "inalambr" );
	deepEqual( Stem("inalienables"), "inalien" );
	deepEqual( Stem("inamovible"), "inamov" );
	deepEqual( Stem("inamovibles"), "inamov" );
	deepEqual( Stem("inaplicables"), "inaplic" );
	deepEqual( Stem("inasistencia"), "inasistent" );
	deepEqual( Stem("inaudito"), "inaudit" );
	deepEqual( Stem("inaugura"), "inaugur" );
	deepEqual( Stem("inauguración"), "inaugur" );
	deepEqual( Stem("inauguraciones"), "inaugur" );
	deepEqual( Stem("inaugurada"), "inaugur" );
	deepEqual( Stem("inaugurado"), "inaugur" );
	deepEqual( Stem("inaugural"), "inaugural" );
	deepEqual( Stem("inauguran"), "inaugur" );
	deepEqual( Stem("inaugurar"), "inaugur" );
	deepEqual( Stem("inaugurará"), "inaugur" );
	deepEqual( Stem("inauguró"), "inaugur" );
	deepEqual( Stem("inba"), "inba" );
	deepEqual( Stem("inc"), "inc" );
	deepEqual( Stem("incalculable"), "incalcul" );
	deepEqual( Stem("incapaces"), "incapac" );
	deepEqual( Stem("incapacidad"), "incapac" );
	deepEqual( Stem("incapacitado"), "incapacit" );
	deepEqual( Stem("incapacitados"), "incapacit" );
	deepEqual( Stem("incapaz"), "incapaz" );
	deepEqual( Stem("incautada"), "incaut" );
	deepEqual( Stem("incautado"), "incaut" );
	deepEqual( Stem("incautan"), "incaut" );
	deepEqual( Stem("incauten"), "incaut" );
	deepEqual( Stem("incautó"), "incaut" );
	deepEqual( Stem("incendiarias"), "incendiari" );
	deepEqual( Stem("incendio"), "incendi" );
	deepEqual( Stem("incendió"), "incend" );
	deepEqual( Stem("incendios"), "incendi" );
	deepEqual( Stem("incentivar"), "incentiv" );
	deepEqual( Stem("incentivo"), "incent" );
	deepEqual( Stem("incentivos"), "incent" );
	deepEqual( Stem("incertidumbre"), "incertidumbr" );
	deepEqual( Stem("incesante"), "inces" );
	deepEqual( Stem("incesantemente"), "inces" );
	deepEqual( Stem("incian"), "inci" );
	deepEqual( Stem("incide"), "incid" );
	deepEqual( Stem("inciden"), "incid" );
	deepEqual( Stem("incidencia"), "incident" );
	deepEqual( Stem("incidental"), "incidental" );
	deepEqual( Stem("incidente"), "incident" );
	deepEqual( Stem("incidentes"), "incident" );
	deepEqual( Stem("incidido"), "incid" );
	deepEqual( Stem("incierto"), "inciert" );
	deepEqual( Stem("inciertos"), "inciert" );
	deepEqual( Stem("incinerador"), "inciner" );
	deepEqual( Stem("incisos"), "incis" );
	deepEqual( Stem("incitación"), "incit" );
	deepEqual( Stem("incitador"), "incit" );
	deepEqual( Stem("incitaron"), "incit" );
	deepEqual( Stem("inclán"), "inclan" );
	deepEqual( Stem("inclemencias"), "inclement" );
	deepEqual( Stem("inclina"), "inclin" );
	deepEqual( Stem("inclinaba"), "inclin" );
	deepEqual( Stem("inclinación"), "inclin" );
	deepEqual( Stem("inclinaciones"), "inclin" );
	deepEqual( Stem("inclinada"), "inclin" );
	deepEqual( Stem("inclinados"), "inclin" );
	deepEqual( Stem("inclinamos"), "inclin" );
	deepEqual( Stem("inclinan"), "inclin" );
	deepEqual( Stem("inclinándose"), "inclin" );
	deepEqual( Stem("inclinó"), "inclin" );
	deepEqual( Stem("incluía"), "inclu" );
	deepEqual( Stem("incluida"), "inclu" );
	deepEqual( Stem("incluidas"), "inclu" );
	deepEqual( Stem("incluido"), "inclu" );
	deepEqual( Stem("incluidos"), "inclu" );
	deepEqual( Stem("incluimos"), "inclu" );
	deepEqual( Stem("incluir"), "inclu" );
	deepEqual( Stem("incluír"), "incluir" );
	deepEqual( Stem("incluirá"), "inclu" );
	deepEqual( Stem("incluirán"), "inclu" );
	deepEqual( Stem("incluiría"), "inclu" );
	deepEqual( Stem("incluirlo"), "inclu" );
	deepEqual( Stem("incluirlos"), "inclu" );
	deepEqual( Stem("inclusión"), "inclusion" );
	deepEqual( Stem("inclusive"), "inclusiv" );
	deepEqual( Stem("incluso"), "inclus" );
	deepEqual( Stem("incluya"), "inclu" );
	deepEqual( Stem("incluyan"), "inclu" );
	deepEqual( Stem("incluye"), "inclu" );
	deepEqual( Stem("incluyen"), "inclu" );
	deepEqual( Stem("incluyendo"), "inclu" );
	deepEqual( Stem("incluyeron"), "inclu" );
	deepEqual( Stem("incluyó"), "inclu" );
	deepEqual( Stem("incoherencias"), "incoherent" );
	deepEqual( Stem("incómodo"), "incomod" );
	deepEqual( Stem("incompetentes"), "incompetent" );
	deepEqual( Stem("incompleta"), "incomplet" );
	deepEqual( Stem("incompleto"), "incomplet" );
	deepEqual( Stem("incomprendidos"), "incomprend" );
	deepEqual( Stem("incomprensibles"), "incomprens" );
	deepEqual( Stem("incomprensión"), "incomprension" );
	deepEqual( Stem("incomunicación"), "incomun" );
	deepEqual( Stem("incomunicada"), "incomunic" );
	deepEqual( Stem("incomunicadas"), "incomunic" );
	deepEqual( Stem("incondicional"), "incondicional" );
	deepEqual( Stem("incondicionales"), "incondicional" );
	deepEqual( Stem("inconformaron"), "inconform" );
	deepEqual( Stem("inconformes"), "inconform" );
	deepEqual( Stem("inconformidad"), "inconform" );
	deepEqual( Stem("inconformidades"), "inconform" );
	deepEqual( Stem("incongruencias"), "incongruent" );
	deepEqual( Stem("incongruente"), "incongruent" );
	deepEqual( Stem("inconmovibles"), "inconmov" );
	deepEqual( Stem("inconsciente"), "inconscient" );
	deepEqual( Stem("inconscientes"), "inconscient" );
	deepEqual( Stem("inconsecuencia"), "inconsecuent" );
	deepEqual( Stem("inconsistencia"), "inconsistent" );
	deepEqual( Stem("inconsistente"), "inconsistent" );
	deepEqual( Stem("inconstitucionales"), "inconstitucional" );
	deepEqual( Stem("inconstitucionalidad"), "inconstitucional" );
	deepEqual( Stem("incontenible"), "inconten" );
	deepEqual( Stem("incontrolable"), "incontrol" );
	deepEqual( Stem("incontrolables"), "incontrol" );
	deepEqual( Stem("incontrolado"), "incontrol" );
	deepEqual( Stem("inconveniente"), "inconvenient" );
	deepEqual( Stem("inconvenientes"), "inconvenient" );
	deepEqual( Stem("incora"), "incor" );
	deepEqual( Stem("incorpora"), "incorpor" );
	deepEqual( Stem("incorporación"), "incorpor" );
	deepEqual( Stem("incorporados"), "incorpor" );
	deepEqual( Stem("incorporan"), "incorpor" );
	deepEqual( Stem("incorporando"), "incorpor" );
	deepEqual( Stem("incorporar"), "incorpor" );
	deepEqual( Stem("incorporaron"), "incorpor" );
	deepEqual( Stem("incorporarse"), "incorpor" );
	deepEqual( Stem("incorporated"), "incorporat" );
	deepEqual( Stem("incorpore"), "incorpor" );
	deepEqual( Stem("incorporen"), "incorpor" );
	deepEqual( Stem("incorporó"), "incorpor" );
	deepEqual( Stem("incosteables"), "incost" );
	deepEqual( Stem("incredulidad"), "incredul" );
	deepEqual( Stem("increíble"), "increibl" );
	deepEqual( Stem("increíblemente"), "increibl" );
	deepEqual( Stem("increíbles"), "increibl" );
	deepEqual( Stem("incrementa"), "increment" );
	deepEqual( Stem("incrementadas"), "increment" );
	deepEqual( Stem("incrementado"), "increment" );
	deepEqual( Stem("incrementando"), "increment" );
	deepEqual( Stem("incrementándose"), "increment" );
	deepEqual( Stem("incrementar"), "increment" );
	deepEqual( Stem("incrementará"), "increment" );
	deepEqual( Stem("incrementarles"), "increment" );
	deepEqual( Stem("incrementaron"), "increment" );
	deepEqual( Stem("incrementarse"), "increment" );
	deepEqual( Stem("incremente"), "increment" );
	deepEqual( Stem("incrementen"), "increment" );
	deepEqual( Stem("incremento"), "increment" );
	deepEqual( Stem("incrementó"), "increment" );
	deepEqual( Stem("incrementos"), "increment" );
	deepEqual( Stem("increparan"), "increp" );
	deepEqual( Stem("incriminar"), "incrimin" );
	deepEqual( Stem("incrustación"), "incrust" );
	deepEqual( Stem("incrustaciones"), "incrust" );
	deepEqual( Stem("incrustó"), "incrust" );
	deepEqual( Stem("incubación"), "incub" );
	deepEqual( Stem("incuestionable"), "incuestion" );
	deepEqual( Stem("incuestionables"), "incuestion" );
	deepEqual( Stem("inculcar"), "inculc" );
	deepEqual( Stem("incumbe"), "incumb" );
	deepEqual( Stem("incumple"), "incumpl" );
	deepEqual( Stem("incumplen"), "incumpl" );
	deepEqual( Stem("incumplidas"), "incumpl" );
	deepEqual( Stem("incumplido"), "incumpl" );
	deepEqual( Stem("incumplieron"), "incumpl" );
	deepEqual( Stem("incumplimiento"), "incumpl" );
	deepEqual( Stem("incumplió"), "incumpl" );
	deepEqual( Stem("incurran"), "incurr" );
	deepEqual( Stem("incurre"), "incurr" );
	deepEqual( Stem("incurrido"), "incurr" );
	deepEqual( Stem("incurrieron"), "incurr" );
	deepEqual( Stem("incurrió"), "incurr" );
	deepEqual( Stem("incurrir"), "incurr" );
	deepEqual( Stem("incursión"), "incursion" );
	deepEqual( Stem("incursiona"), "incursion" );
	deepEqual( Stem("incursionamos"), "incursion" );
	deepEqual( Stem("incursionar"), "incursion" );
	deepEqual( Stem("inda"), "inda" );
	deepEqual( Stem("indagación"), "indag" );
	deepEqual( Stem("indagando"), "indag" );
	deepEqual( Stem("indebido"), "indeb" );
	deepEqual( Stem("indebidos"), "indeb" );
	deepEqual( Stem("indecibles"), "indec" );
	deepEqual( Stem("indecisa"), "indecis" );
	deepEqual( Stem("indecisión"), "indecision" );
	deepEqual( Stem("indeciso"), "indecis" );
	deepEqual( Stem("indefensión"), "indefension" );
	deepEqual( Stem("indefinida"), "indefin" );
	deepEqual( Stem("indefinidamente"), "indefinid" );
	deepEqual( Stem("indefinido"), "indefin" );
	deepEqual( Stem("indejo"), "indej" );
	deepEqual( Stem("indemnización"), "indemniz" );
	deepEqual( Stem("indemnizaciones"), "indemniz" );
	deepEqual( Stem("indemnizar"), "indemniz" );
	deepEqual( Stem("indemnizó"), "indemniz" );
	deepEqual( Stem("independencia"), "independent" );
	deepEqual( Stem("independiente"), "independient" );
	deepEqual( Stem("independientemente"), "independient" );
	deepEqual( Stem("independientes"), "independient" );
	deepEqual( Stem("independiza"), "independiz" );
	deepEqual( Stem("independizó"), "independiz" );
	deepEqual( Stem("indeseado"), "indes" );
	deepEqual( Stem("indeterminado"), "indetermin" );
	deepEqual( Stem("india"), "indi" );
	deepEqual( Stem("indiana"), "indian" );
	deepEqual( Stem("indianapolis"), "indianapolis" );
	deepEqual( Stem("indica"), "indic" );
	deepEqual( Stem("indicaba"), "indic" );
	deepEqual( Stem("indicaban"), "indic" );
	deepEqual( Stem("indicaciones"), "indic" );
	deepEqual( Stem("indicada"), "indic" );
	deepEqual( Stem("indicado"), "indic" );
	deepEqual( Stem("indicador"), "indic" );
	deepEqual( Stem("indicadores"), "indic" );
	deepEqual( Stem("indican"), "indic" );
	deepEqual( Stem("indicando"), "indic" );
	deepEqual( Stem("indicándome"), "indic" );
	deepEqual( Stem("indicar"), "indic" );
	deepEqual( Stem("indicará"), "indic" );
	deepEqual( Stem("indicarán"), "indic" );
	deepEqual( Stem("indicaron"), "indic" );
	deepEqual( Stem("indicativa"), "indic" );
	deepEqual( Stem("indicators"), "indicators" );
	deepEqual( Stem("índice"), "indic" );
	deepEqual( Stem("índices"), "indic" );
	deepEqual( Stem("indicio"), "indici" );
	deepEqual( Stem("indicios"), "indici" );
	deepEqual( Stem("indico"), "indic" );
	deepEqual( Stem("indicó"), "indic" );
	deepEqual( Stem("indiferencia"), "indiferent" );
	deepEqual( Stem("indiferente"), "indiferent" );
	deepEqual( Stem("indiferentes"), "indiferent" );
	deepEqual( Stem("indígena"), "indigen" );
	deepEqual( Stem("indígenas"), "indigen" );
	deepEqual( Stem("indigencia"), "indigent" );
	deepEqual( Stem("indigente"), "indigent" );
	deepEqual( Stem("indigentes"), "indigent" );
	deepEqual( Stem("indignación"), "indign" );
	deepEqual( Stem("indignado"), "indign" );
	deepEqual( Stem("indignidad"), "indign" );
	deepEqual( Stem("indigno"), "indign" );
	deepEqual( Stem("indignó"), "indign" );
	deepEqual( Stem("índigo"), "indig" );
	deepEqual( Stem("indio"), "indi" );
	deepEqual( Stem("indique"), "indiqu" );
	deepEqual( Stem("indirecta"), "indirect" );
	deepEqual( Stem("indirectamente"), "indirect" );
	deepEqual( Stem("indirectas"), "indirect" );
	deepEqual( Stem("indisciplina"), "indisciplin" );
	deepEqual( Stem("indiscreciones"), "indiscrecion" );
	deepEqual( Stem("indiscriminadamente"), "indiscrimin" );
	deepEqual( Stem("indiscutible"), "indiscut" );
	deepEqual( Stem("indiscutibles"), "indiscut" );
	deepEqual( Stem("indispensable"), "indispens" );
	deepEqual( Stem("indispensables"), "indispens" );
	deepEqual( Stem("indistintos"), "indistint" );
	deepEqual( Stem("individual"), "individual" );
	deepEqual( Stem("individuales"), "individual" );
	deepEqual( Stem("individualidades"), "individual" );
	deepEqual( Stem("individualista"), "individual" );
	deepEqual( Stem("individualistas"), "individual" );
	deepEqual( Stem("individualmente"), "individual" );
	deepEqual( Stem("individuo"), "individu" );
	deepEqual( Stem("individuos"), "individu" );
	deepEqual( Stem("índole"), "indol" );
	deepEqual( Stem("indonesia"), "indonesi" );
	deepEqual( Stem("indubitable"), "indubit" );
	deepEqual( Stem("inducción"), "induccion" );
	deepEqual( Stem("induce"), "induc" );
	deepEqual( Stem("inducir"), "induc" );
	deepEqual( Stem("inducirlo"), "induc" );
	deepEqual( Stem("indudablemente"), "indud" );
	deepEqual( Stem("indulgencias"), "indulgent" );
	deepEqual( Stem("indulto"), "indult" );
	deepEqual( Stem("indultó"), "indult" );
	deepEqual( Stem("indumentaria"), "indumentari" );
	deepEqual( Stem("industria"), "industri" );
	deepEqual( Stem("industrial"), "industrial" );
	deepEqual( Stem("industriales"), "industrial" );
	deepEqual( Stem("industrialización"), "industrializ" );
	deepEqual( Stem("industrializadas"), "industrializ" );
	deepEqual( Stem("industrializados"), "industrializ" );
	deepEqual( Stem("industrias"), "industri" );
	deepEqual( Stem("industries"), "industri" );
	deepEqual( Stem("industriosa"), "industri" );
	deepEqual( Stem("indy"), "indy" );
	deepEqual( Stem("inea"), "ine" );
	deepEqual( Stem("inédita"), "inedit" );
	deepEqual( Stem("inéditas"), "inedit" );
	deepEqual( Stem("inédito"), "inedit" );
	deepEqual( Stem("ineficaces"), "ineficac" );
	deepEqual( Stem("ineficacia"), "ineficaci" );
	deepEqual( Stem("ineficaz"), "ineficaz" );
	deepEqual( Stem("ineficiencia"), "ineficient" );
	deepEqual( Stem("ineficiencias"), "ineficient" );
	deepEqual( Stem("ineficiente"), "ineficient" );
	deepEqual( Stem("inegi"), "inegi" );
	deepEqual( Stem("inelegancias"), "ineleg" );
	deepEqual( Stem("ineludible"), "inelud" );
	deepEqual( Stem("ineptas"), "inept" );
	deepEqual( Stem("inequívoca"), "inequivoc" );
	deepEqual( Stem("inercia"), "inerci" );
	deepEqual( Stem("inés"), "ines" );
	deepEqual( Stem("inescrutable"), "inescrut" );
	deepEqual( Stem("inestabilidad"), "inest" );
	deepEqual( Stem("inestable"), "inest" );
	deepEqual( Stem("inevitable"), "inevit" );
	deepEqual( Stem("inevitablemente"), "inevit" );
	deepEqual( Stem("inevitables"), "inevit" );
	deepEqual( Stem("inexactitudes"), "inexactitud" );
	deepEqual( Stem("inexistente"), "inexistent" );
	deepEqual( Stem("inexorablemente"), "inexor" );
	deepEqual( Stem("inexplicable"), "inexplic" );
	deepEqual( Stem("inexplicablemente"), "inexplic" );
	deepEqual( Stem("inexploradas"), "inexplor" );
	deepEqual( Stem("infactibilidad"), "infactibil" );
	deepEqual( Stem("infalibilidad"), "infalibil" );
	deepEqual( Stem("infalsificables"), "infalsific" );
	deepEqual( Stem("infame"), "infam" );
	deepEqual( Stem("infamia"), "infami" );
	deepEqual( Stem("infancia"), "infanci" );
	deepEqual( Stem("infante"), "infant" );
	deepEqual( Stem("infantes"), "infant" );
	deepEqual( Stem("infantil"), "infantil" );
	deepEqual( Stem("infantiles"), "infantil" );
	deepEqual( Stem("infarto"), "infart" );
	deepEqual( Stem("infección"), "infeccion" );
	deepEqual( Stem("infecciones"), "infeccion" );
	deepEqual( Stem("infectología"), "infectolog" );
	deepEqual( Stem("inferido"), "infer" );
	deepEqual( Stem("inferior"), "inferior" );
	deepEqual( Stem("inferiores"), "inferior" );
	deepEqual( Stem("inferioridad"), "inferior" );
	deepEqual( Stem("infernal"), "infernal" );
	deepEqual( Stem("infernales"), "infernal" );
	deepEqual( Stem("infestadas"), "infest" );
	deepEqual( Stem("infidelidad"), "infidel" );
	deepEqual( Stem("infidelidades"), "infidel" );
	deepEqual( Stem("infiel"), "infiel" );
	deepEqual( Stem("infierno"), "infiern" );
	deepEqual( Stem("infiltrados"), "infiltr" );
	deepEqual( Stem("infiltraron"), "infiltr" );
	deepEqual( Stem("infinidad"), "infin" );
	deepEqual( Stem("infinitum"), "infinitum" );
	deepEqual( Stem("inflaba"), "inflab" );
	deepEqual( Stem("inflación"), "inflacion" );
	deepEqual( Stem("inflacionario"), "inflacionari" );
	deepEqual( Stem("inflacionarios"), "inflacionari" );
	deepEqual( Stem("inflamación"), "inflam" );
	deepEqual( Stem("inflar"), "inflar" );
	deepEqual( Stem("infle"), "infle" );
	deepEqual( Stem("influencia"), "influenci" );
	deepEqual( Stem("influenciada"), "influenci" );
	deepEqual( Stem("influencias"), "influenci" );
	deepEqual( Stem("influenzae"), "influenza" );
	deepEqual( Stem("influido"), "influ" );
	deepEqual( Stem("influir"), "influ" );
	deepEqual( Stem("influiría"), "influ" );
	deepEqual( Stem("influjo"), "influj" );
	deepEqual( Stem("influyen"), "influ" );
	deepEqual( Stem("influyente"), "influyent" );
	deepEqual( Stem("influyó"), "influ" );
	deepEqual( Stem("infonavit"), "infonavit" );
	deepEqual( Stem("informa"), "inform" );
	deepEqual( Stem("informaba"), "inform" );
	deepEqual( Stem("información"), "inform" );
	deepEqual( Stem("informaciones"), "inform" );
	deepEqual( Stem("informada"), "inform" );
	deepEqual( Stem("informado"), "inform" );
	deepEqual( Stem("informados"), "inform" );
	deepEqual( Stem("informal"), "informal" );
	deepEqual( Stem("informan"), "inform" );
	deepEqual( Stem("informándome"), "inform" );
	deepEqual( Stem("informante"), "inform" );
	deepEqual( Stem("informantes"), "inform" );
	deepEqual( Stem("informar"), "inform" );
	deepEqual( Stem("informará"), "inform" );
	deepEqual( Stem("informarán"), "inform" );
	deepEqual( Stem("informarle"), "inform" );
	deepEqual( Stem("informaron"), "inform" );
	deepEqual( Stem("informarse"), "inform" );
	deepEqual( Stem("informatica"), "informat" );
	deepEqual( Stem("informática"), "informat" );
	deepEqual( Stem("informático"), "informat" );
	deepEqual( Stem("informativa"), "inform" );
	deepEqual( Stem("informativas"), "inform" );
	deepEqual( Stem("informativo"), "inform" );
	deepEqual( Stem("informativos"), "inform" );
	deepEqual( Stem("informe"), "inform" );
	deepEqual( Stem("informé"), "inform" );
	deepEqual( Stem("informes"), "inform" );
	deepEqual( Stem("informó"), "inform" );
	deepEqual( Stem("inforrey"), "inforrey" );
	deepEqual( Stem("infortunadamente"), "infortun" );
	deepEqual( Stem("infortunado"), "infortun" );
	deepEqual( Stem("infracción"), "infraccion" );
	deepEqual( Stem("infraccionados"), "infraccion" );
	deepEqual( Stem("infraccionar"), "infraccion" );
	deepEqual( Stem("infractor"), "infractor" );
	deepEqual( Stem("infractores"), "infractor" );
	deepEqual( Stem("infraestructura"), "infraestructur" );
	deepEqual( Stem("infrarrojas"), "infrarroj" );
	deepEqual( Stem("infrarrojos"), "infrarroj" );
	deepEqual( Stem("infundados"), "infund" );
	deepEqual( Stem("infundios"), "infundi" );
	deepEqual( Stem("infundir"), "infund" );
	deepEqual( Stem("infusión"), "infusion" );
	deepEqual( Stem("infusiones"), "infusion" );
	deepEqual( Stem("ing"), "ing" );
	deepEqual( Stem("ingando"), "ingand" );
	deepEqual( Stem("ingeniería"), "ingeni" );
	deepEqual( Stem("ingeniero"), "ingenier" );
	deepEqual( Stem("ingenieros"), "ingenier" );
	deepEqual( Stem("ingenio"), "ingeni" );
	deepEqual( Stem("ingeniosa"), "ingeni" );
	deepEqual( Stem("ingenioso"), "ingeni" );
	deepEqual( Stem("ingenua"), "ingenu" );
	deepEqual( Stem("ingenuas"), "ingenu" );
	deepEqual( Stem("ingenuo"), "ingenu" );
	deepEqual( Stem("ingerencia"), "ingerent" );
	deepEqual( Stem("ingerir"), "inger" );
	deepEqual( Stem("inglaterra"), "inglaterr" );
	deepEqual( Stem("inglés"), "ingles" );
	deepEqual( Stem("inglesa"), "ingles" );
	deepEqual( Stem("inglesas"), "ingles" );
	deepEqual( Stem("ingleses"), "ingles" );
	deepEqual( Stem("ingratos"), "ingrat" );
	deepEqual( Stem("ingrediente"), "ingredient" );
	deepEqual( Stem("ingredientes"), "ingredient" );
	deepEqual( Stem("ingresa"), "ingres" );
	deepEqual( Stem("ingresaba"), "ingres" );
	deepEqual( Stem("ingresado"), "ingres" );
	deepEqual( Stem("ingresan"), "ingres" );
	deepEqual( Stem("ingresando"), "ingres" );
	deepEqual( Stem("ingresar"), "ingres" );
	deepEqual( Stem("ingresara"), "ingres" );
	deepEqual( Stem("ingresaron"), "ingres" );
	deepEqual( Stem("ingreso"), "ingres" );
	deepEqual( Stem("ingresó"), "ingres" );
	deepEqual( Stem("ingresos"), "ingres" );
	deepEqual( Stem("inhabilitados"), "inhabilit" );
	deepEqual( Stem("inhabilitan"), "inhabilit" );
	deepEqual( Stem("inhalaciones"), "inhal" );
	deepEqual( Stem("inhalámbricos"), "inhalambr" );
	deepEqual( Stem("inherente"), "inherent" );
	deepEqual( Stem("inherentes"), "inherent" );
	deepEqual( Stem("inhibiendo"), "inhib" );
	deepEqual( Stem("inicado"), "inic" );
	deepEqual( Stem("inicará"), "inic" );
	deepEqual( Stem("inicia"), "inici" );
	deepEqual( Stem("iniciaba"), "inici" );
	deepEqual( Stem("iniciación"), "inici" );
	deepEqual( Stem("iniciada"), "inici" );
	deepEqual( Stem("iniciadas"), "inici" );
	deepEqual( Stem("iniciado"), "inici" );
	deepEqual( Stem("iniciadores"), "inici" );
	deepEqual( Stem("inicial"), "inicial" );
	deepEqual( Stem("iniciales"), "inicial" );
	deepEqual( Stem("inicialización"), "inicializ" );
	deepEqual( Stem("inicialmente"), "inicial" );
	deepEqual( Stem("inician"), "inici" );
	deepEqual( Stem("iniciando"), "inici" );
	deepEqual( Stem("iniciar"), "inici" );
	deepEqual( Stem("iniciara"), "inici" );
	deepEqual( Stem("iniciará"), "inici" );
	deepEqual( Stem("iniciarán"), "inici" );
	deepEqual( Stem("iniciaría"), "inici" );
	deepEqual( Stem("iniciarían"), "inici" );
	deepEqual( Stem("iniciarme"), "inici" );
	deepEqual( Stem("iniciaron"), "inici" );
	deepEqual( Stem("iniciarse"), "inici" );
	deepEqual( Stem("iniciativa"), "inici" );
	deepEqual( Stem("iniciativas"), "inici" );
	deepEqual( Stem("inicie"), "inici" );
	deepEqual( Stem("iniciemos"), "inici" );
	deepEqual( Stem("inicien"), "inici" );
	deepEqual( Stem("inicio"), "inici" );
	deepEqual( Stem("inició"), "inic" );
	deepEqual( Stem("inicios"), "inici" );
	deepEqual( Stem("inimaginables"), "inimagin" );
	deepEqual( Stem("ininteligibles"), "inintelig" );
	deepEqual( Stem("ininterrumpida"), "ininterrump" );
	deepEqual( Stem("injerencia"), "injerent" );
	deepEqual( Stem("injude"), "injud" );
	deepEqual( Stem("injurias"), "injuri" );
	deepEqual( Stem("injusta"), "injust" );
	deepEqual( Stem("injustas"), "injust" );
	deepEqual( Stem("injusticia"), "injustici" );
	deepEqual( Stem("injusticias"), "injustici" );
	deepEqual( Stem("injustificada"), "injustific" );
	deepEqual( Stem("injustificados"), "injustific" );
	deepEqual( Stem("injusto"), "injust" );
	deepEqual( Stem("injustos"), "injust" );
	deepEqual( Stem("inmadurez"), "inmadurez" );
	deepEqual( Stem("inmaduros"), "inmadur" );
	deepEqual( Stem("inmediaciones"), "inmedi" );
	deepEqual( Stem("inmediata"), "inmediat" );
	deepEqual( Stem("inmediatamente"), "inmediat" );
	deepEqual( Stem("inmediatas"), "inmediat" );
	deepEqual( Stem("inmediato"), "inmediat" );
	deepEqual( Stem("inmediatos"), "inmediat" );
	deepEqual( Stem("inmenso"), "inmens" );
	deepEqual( Stem("inmensos"), "inmens" );
	deepEqual( Stem("inmigrantes"), "inmigr" );
	deepEqual( Stem("inminencia"), "inminent" );
	deepEqual( Stem("inminente"), "inminent" );
	deepEqual( Stem("inmiscuidos"), "inmiscu" );
	deepEqual( Stem("inmiscuirse"), "inmiscu" );
	deepEqual( Stem("inmobiliaria"), "inmobiliari" );
	deepEqual( Stem("inmobiliarias"), "inmobiliari" );
	deepEqual( Stem("inmobiliario"), "inmobiliari" );
	deepEqual( Stem("inmobiliarios"), "inmobiliari" );
	deepEqual( Stem("inmorales"), "inmoral" );
	deepEqual( Stem("inmortal"), "inmortal" );
	deepEqual( Stem("inmortales"), "inmortal" );
	deepEqual( Stem("inmortalidad"), "inmortal" );
	deepEqual( Stem("inmovilizó"), "inmoviliz" );
	deepEqual( Stem("inmueble"), "inmuebl" );
	deepEqual( Stem("inmuebles"), "inmuebl" );
	deepEqual( Stem("inmunes"), "inmun" );
	deepEqual( Stem("inmunidad"), "inmun" );
	deepEqual( Stem("inmunológica"), "inmunolog" );
	deepEqual( Stem("inmutable"), "inmut" );
	deepEqual( Stem("inn"), "inn" );
	deepEqual( Stem("innecesaria"), "innecesari" );
	deepEqual( Stem("innecesarias"), "innecesari" );
	deepEqual( Stem("innecesario"), "innecesari" );
	deepEqual( Stem("innecesarios"), "innecesari" );
	deepEqual( Stem("innova"), "innov" );
	deepEqual( Stem("innovación"), "innov" );
	deepEqual( Stem("innovaciones"), "innov" );
	deepEqual( Stem("innovador"), "innov" );
	deepEqual( Stem("innovadora"), "innov" );
	deepEqual( Stem("innovadores"), "innov" );
	deepEqual( Stem("innovar"), "innov" );
	deepEqual( Stem("inntienen"), "inntien" );
	deepEqual( Stem("innumerables"), "innumer" );
	deepEqual( Stem("inobservancia"), "inobserv" );
	deepEqual( Stem("inocencia"), "inocent" );
	deepEqual( Stem("inocente"), "inocent" );
	deepEqual( Stem("inocentes"), "inocent" );
	deepEqual( Stem("inocular"), "inocul" );
	deepEqual( Stem("inocularle"), "inocul" );
	deepEqual( Stem("inofensivos"), "inofens" );
	deepEqual( Stem("inolvidable"), "inolvid" );
	deepEqual( Stem("inoperantes"), "inoper" );
	deepEqual( Stem("inquiere"), "inquier" );
	deepEqual( Stem("inquieta"), "inquiet" );
	deepEqual( Stem("inquietas"), "inquiet" );
	deepEqual( Stem("inquieto"), "inquiet" );
	deepEqual( Stem("inquietos"), "inquiet" );
	deepEqual( Stem("inquietud"), "inquietud" );
	deepEqual( Stem("inquietudes"), "inquietud" );
	deepEqual( Stem("inquilinaria"), "inquilinari" );
	deepEqual( Stem("inquilino"), "inquilin" );
	deepEqual( Stem("inquilinos"), "inquilin" );
	deepEqual( Stem("inquina"), "inquin" );
	deepEqual( Stem("inquisición"), "inquisicion" );
	deepEqual( Stem("insaciable"), "insaci" );
	deepEqual( Stem("insalvables"), "insalv" );
	deepEqual( Stem("inscribe"), "inscrib" );
	deepEqual( Stem("inscribió"), "inscrib" );
	deepEqual( Stem("inscribir"), "inscrib" );
	deepEqual( Stem("inscribirse"), "inscrib" );
	deepEqual( Stem("inscripción"), "inscripcion" );
	deepEqual( Stem("inscripciones"), "inscripcion" );
	deepEqual( Stem("inscrita"), "inscrit" );
	deepEqual( Stem("inscritas"), "inscrit" );
	deepEqual( Stem("inscrito"), "inscrit" );
	deepEqual( Stem("inscritos"), "inscrit" );
	deepEqual( Stem("insecticida"), "insectic" );
	deepEqual( Stem("insecto"), "insect" );
	deepEqual( Stem("insectos"), "insect" );
	deepEqual( Stem("inseguridad"), "insegur" );
	deepEqual( Stem("insen"), "insen" );
	deepEqual( Stem("insensatez"), "insensatez" );
	deepEqual( Stem("inservibles"), "inserv" );
	deepEqual( Stem("insiders"), "insiders" );
	deepEqual( Stem("insidiosos"), "insidi" );
	deepEqual( Stem("insignia"), "insigni" );
	deepEqual( Stem("insignificante"), "insignif" );
	deepEqual( Stem("insinúa"), "insinu" );
	deepEqual( Stem("insinuó"), "insinu" );
	deepEqual( Stem("insípidos"), "insip" );
	deepEqual( Stem("insista"), "insist" );
	deepEqual( Stem("insiste"), "insist" );
	deepEqual( Stem("insisten"), "insist" );
	deepEqual( Stem("insistencia"), "insistent" );
	deepEqual( Stem("insistente"), "insistent" );
	deepEqual( Stem("insistía"), "insist" );
	deepEqual( Stem("insistían"), "insist" );
	deepEqual( Stem("insistieron"), "insist" );
	deepEqual( Stem("insistió"), "insist" );
	deepEqual( Stem("insistir"), "insist" );
	deepEqual( Stem("insistirá"), "insist" );
	deepEqual( Stem("insistiré"), "insist" );
	deepEqual( Stem("insistirse"), "insist" );
	deepEqual( Stem("insististe"), "insist" );
	deepEqual( Stem("insisto"), "insist" );
	deepEqual( Stem("insólito"), "insolit" );
	deepEqual( Stem("insospechado"), "insospech" );
	deepEqual( Stem("inspección"), "inspeccion" );
	deepEqual( Stem("inspeccionaba"), "inspeccion" );
	deepEqual( Stem("inspeccionado"), "inspeccion" );
	deepEqual( Stem("inspecciones"), "inspeccion" );
	deepEqual( Stem("inspector"), "inspector" );
	deepEqual( Stem("inspectores"), "inspector" );
	deepEqual( Stem("inspiraba"), "inspir" );
	deepEqual( Stem("inspiración"), "inspir" );
	deepEqual( Stem("inspiraciones"), "inspir" );
	deepEqual( Stem("inspirada"), "inspir" );
	deepEqual( Stem("inspirado"), "inspir" );
	deepEqual( Stem("instala"), "instal" );
	deepEqual( Stem("instalación"), "instal" );
	deepEqual( Stem("instalaciones"), "instal" );
	deepEqual( Stem("instalada"), "instal" );
	deepEqual( Stem("instaladas"), "instal" );
	deepEqual( Stem("instalado"), "instal" );
	deepEqual( Stem("instalados"), "instal" );
	deepEqual( Stem("instalamos"), "instal" );
	deepEqual( Stem("instalan"), "instal" );
	deepEqual( Stem("instalando"), "instal" );
	deepEqual( Stem("instalar"), "instal" );
	deepEqual( Stem("instalará"), "instal" );
	deepEqual( Stem("instalarán"), "instal" );
	deepEqual( Stem("instalarlo"), "instal" );
	deepEqual( Stem("instalarlos"), "instal" );
	deepEqual( Stem("instalaron"), "instal" );
	deepEqual( Stem("instalarse"), "instal" );
	deepEqual( Stem("instalen"), "instal" );
	deepEqual( Stem("instaló"), "instal" );
	deepEqual( Stem("instancia"), "instanci" );
	deepEqual( Stem("instancias"), "instanci" );
	deepEqual( Stem("instándolos"), "instandol" );
	deepEqual( Stem("instantánea"), "instantane" );
	deepEqual( Stem("instantáneamente"), "instantan" );
	deepEqual( Stem("instante"), "instant" );
	deepEqual( Stem("instantes"), "instant" );
	deepEqual( Stem("instará"), "instar" );
	deepEqual( Stem("instaurada"), "instaur" );
	deepEqual( Stem("instinto"), "instint" );
	deepEqual( Stem("institución"), "institu" );
	deepEqual( Stem("institucional"), "institucional" );
	deepEqual( Stem("institucionales"), "institucional" );
	deepEqual( Stem("institucionalizar"), "institucionaliz" );
	deepEqual( Stem("institucionalmente"), "institucional" );
	deepEqual( Stem("instituciones"), "institu" );
	deepEqual( Stem("instituida"), "institu" );
	deepEqual( Stem("instituír"), "instituir" );
	deepEqual( Stem("institute"), "institut" );
	deepEqual( Stem("instituto"), "institut" );
	deepEqual( Stem("institutos"), "institut" );
	deepEqual( Stem("instituya"), "institu" );
	deepEqual( Stem("instituyan"), "institu" );
	deepEqual( Stem("instó"), "insto" );
	deepEqual( Stem("instrucción"), "instruccion" );
	deepEqual( Stem("instrucciones"), "instruccion" );
	deepEqual( Stem("instructor"), "instructor" );
	deepEqual( Stem("instructora"), "instructor" );
	deepEqual( Stem("instrumentación"), "instrument" );
	deepEqual( Stem("instrumentado"), "instrument" );
	deepEqual( Stem("instrumentados"), "instrument" );
	deepEqual( Stem("instrumental"), "instrumental" );
	deepEqual( Stem("instrumentar"), "instrument" );
	deepEqual( Stem("instrumentaran"), "instrument" );
	deepEqual( Stem("instrumentistas"), "instrument" );
	deepEqual( Stem("instrumento"), "instrument" );
	deepEqual( Stem("instrumentó"), "instrument" );
	deepEqual( Stem("instrumentos"), "instrument" );
	deepEqual( Stem("instruments"), "instruments" );
	deepEqual( Stem("instruye"), "instru" );
	deepEqual( Stem("instruyó"), "instru" );
	deepEqual( Stem("insubordinación"), "insubordin" );
	deepEqual( Stem("insubstancial"), "insubstancial" );
	deepEqual( Stem("insuficiencia"), "insuficient" );
	deepEqual( Stem("insuficiente"), "insuficient" );
	deepEqual( Stem("insuficientes"), "insuficient" );
	deepEqual( Stem("insulta"), "insult" );
	deepEqual( Stem("insultaba"), "insult" );
	deepEqual( Stem("insultando"), "insult" );
	deepEqual( Stem("insulté"), "insult" );
	deepEqual( Stem("insulto"), "insult" );
	deepEqual( Stem("insultos"), "insult" );
	deepEqual( Stem("insumo"), "insum" );
	deepEqual( Stem("insuperable"), "insuper" );
	deepEqual( Stem("insurgencia"), "insurgent" );
	deepEqual( Stem("insurgentes"), "insurgent" );
	deepEqual( Stem("insurrección"), "insurreccion" );
	deepEqual( Stem("intachable"), "intach" );
	deepEqual( Stem("intacta"), "intact" );
	deepEqual( Stem("intactas"), "intact" );
	deepEqual( Stem("intacto"), "intact" );
	deepEqual( Stem("integra"), "integr" );
	deepEqual( Stem("integración"), "integr" );
	deepEqual( Stem("integracionista"), "integracion" );
	deepEqual( Stem("integrada"), "integr" );
	deepEqual( Stem("integradas"), "integr" );
	deepEqual( Stem("integrado"), "integr" );
	deepEqual( Stem("integrados"), "integr" );
	deepEqual( Stem("integral"), "integral" );
	deepEqual( Stem("integrales"), "integral" );
	deepEqual( Stem("íntegramente"), "integr" );
	deepEqual( Stem("integran"), "integr" );
	deepEqual( Stem("integrante"), "integr" );
	deepEqual( Stem("integrantes"), "integr" );
	deepEqual( Stem("integrar"), "integr" );
	deepEqual( Stem("integrará"), "integr" );
	deepEqual( Stem("integrarán"), "integr" );
	deepEqual( Stem("integraría"), "integr" );
	deepEqual( Stem("integrarlo"), "integr" );
	deepEqual( Stem("integrarlos"), "integr" );
	deepEqual( Stem("integraron"), "integr" );
	deepEqual( Stem("integrarse"), "integr" );
	deepEqual( Stem("integridad"), "integr" );
	deepEqual( Stem("integristas"), "integr" );
	deepEqual( Stem("íntegro"), "integr" );
	deepEqual( Stem("integró"), "integr" );
	deepEqual( Stem("intel"), "intel" );
	deepEqual( Stem("intelectual"), "intelectual" );
	deepEqual( Stem("intelectuales"), "intelectual" );
	deepEqual( Stem("intelectualmente"), "intelectual" );
	deepEqual( Stem("inteligencia"), "inteligent" );
	deepEqual( Stem("inteligente"), "inteligent" );
	deepEqual( Stem("inteligentes"), "inteligent" );
	deepEqual( Stem("intempestivamente"), "intempest" );
	deepEqual( Stem("intempestivo"), "intempest" );
	deepEqual( Stem("intención"), "intencion" );
	deepEqual( Stem("intencionado"), "intencion" );
	deepEqual( Stem("intencional"), "intencional" );
	deepEqual( Stem("intencionales"), "intencional" );
	deepEqual( Stem("intenciones"), "intencion" );
	deepEqual( Stem("intensa"), "intens" );
	deepEqual( Stem("intensamente"), "intens" );
	deepEqual( Stem("intensas"), "intens" );
	deepEqual( Stem("intensidad"), "intens" );
	deepEqual( Stem("intensificado"), "intensific" );
	deepEqual( Stem("intensificando"), "intensific" );
	deepEqual( Stem("intensificar"), "intensific" );
	deepEqual( Stem("intensificó"), "intensific" );
	deepEqual( Stem("intensifiquen"), "intensifiqu" );
	deepEqual( Stem("intensión"), "intension" );
	deepEqual( Stem("intensivamente"), "intens" );
	deepEqual( Stem("intenso"), "intens" );
	deepEqual( Stem("intensos"), "intens" );
	deepEqual( Stem("intenta"), "intent" );
	deepEqual( Stem("intentaba"), "intent" );
	deepEqual( Stem("intentaban"), "intent" );
	deepEqual( Stem("intentado"), "intent" );
	deepEqual( Stem("intentamos"), "intent" );
	deepEqual( Stem("intentan"), "intent" );
	deepEqual( Stem("intentando"), "intent" );
	deepEqual( Stem("intentar"), "intent" );
	deepEqual( Stem("intentará"), "intent" );
	deepEqual( Stem("intentarán"), "intent" );
	deepEqual( Stem("intentaré"), "intent" );
	deepEqual( Stem("intentarlo"), "intent" );
	deepEqual( Stem("intentaron"), "intent" );
	deepEqual( Stem("intento"), "intent" );
	deepEqual( Stem("intentó"), "intent" );
	deepEqual( Stem("intentos"), "intent" );
	deepEqual( Stem("inter"), "inter" );
	deepEqual( Stem("interacción"), "interaccion" );
	deepEqual( Stem("interaciones"), "inter" );
	deepEqual( Stem("interactiva"), "interact" );
	deepEqual( Stem("interactivo"), "interact" );
	deepEqual( Stem("interamericana"), "interamerican" );
	deepEqual( Stem("interbancaria"), "interbancari" );
	deepEqual( Stem("interbancarias"), "interbancari" );
	deepEqual( Stem("interbancario"), "interbancari" );
	deepEqual( Stem("intercambian"), "intercambi" );
	deepEqual( Stem("intercambiando"), "intercambi" );
	deepEqual( Stem("intercambiar"), "intercambi" );
	deepEqual( Stem("intercambié"), "intercambi" );
	deepEqual( Stem("intercambio"), "intercambi" );
	deepEqual( Stem("intercambió"), "intercamb" );
	deepEqual( Stem("interceder"), "interced" );
	deepEqual( Stem("intercedido"), "interced" );
	deepEqual( Stem("intercepción"), "intercepcion" );
	deepEqual( Stem("interceptado"), "intercept" );
	deepEqual( Stem("interceptados"), "intercept" );
	deepEqual( Stem("intercomunicará"), "intercomunic" );
	deepEqual( Stem("interconexión"), "interconexion" );
	deepEqual( Stem("interconstruido"), "interconstru" );
	deepEqual( Stem("intercontinental"), "intercontinental" );
	deepEqual( Stem("intercostal"), "intercostal" );
	deepEqual( Stem("intercostero"), "intercoster" );
	deepEqual( Stem("interdependiente"), "interdependient" );
	deepEqual( Stem("interdisciplinario"), "interdisciplinari" );
	deepEqual( Stem("interés"), "interes" );
	deepEqual( Stem("interesa"), "interes" );
	deepEqual( Stem("interesaba"), "interes" );
	deepEqual( Stem("interesada"), "interes" );
	deepEqual( Stem("interesadas"), "interes" );
	deepEqual( Stem("interesado"), "interes" );
	deepEqual( Stem("interesados"), "interes" );
	deepEqual( Stem("interesan"), "interes" );
	deepEqual( Stem("interesante"), "interes" );
	deepEqual( Stem("interesantes"), "interes" );
	deepEqual( Stem("interesara"), "interes" );
	deepEqual( Stem("interesaría"), "interes" );
	deepEqual( Stem("interesarme"), "interes" );
	deepEqual( Stem("interesaron"), "interes" );
	deepEqual( Stem("interescuadras"), "interescuadr" );
	deepEqual( Stem("interese"), "interes" );
	deepEqual( Stem("interesen"), "interes" );
	deepEqual( Stem("intereses"), "interes" );
	deepEqual( Stem("interfase"), "interf" );
	deepEqual( Stem("interferencia"), "interferent" );
	deepEqual( Stem("interfieran"), "interf" );
	deepEqual( Stem("interfieren"), "interfier" );
	deepEqual( Stem("interfronterizo"), "interfronteriz" );
	deepEqual( Stem("intergrupales"), "intergrupal" );
	deepEqual( Stem("interina"), "interin" );
	deepEqual( Stem("interinato"), "interinat" );
	deepEqual( Stem("interinatos"), "interinat" );
	deepEqual( Stem("interino"), "interin" );
	deepEqual( Stem("interior"), "interior" );
	deepEqual( Stem("interiores"), "interior" );
	deepEqual( Stem("interioridad"), "interior" );
	deepEqual( Stem("interiormente"), "interior" );
	deepEqual( Stem("interlocutora"), "interlocutor" );
	deepEqual( Stem("intermatrix"), "intermatrix" );
	deepEqual( Stem("intermedia"), "intermedi" );
	deepEqual( Stem("intermediación"), "intermedi" );
	deepEqual( Stem("intermediaria"), "intermediari" );
	deepEqual( Stem("intermediarias"), "intermediari" );
	deepEqual( Stem("intermediario"), "intermediari" );
	deepEqual( Stem("intermediarios"), "intermediari" );
	deepEqual( Stem("intermediarista"), "intermediar" );
	deepEqual( Stem("intermedio"), "intermedi" );
	deepEqual( Stem("intermedios"), "intermedi" );
	deepEqual( Stem("intermitentes"), "intermitent" );
	deepEqual( Stem("interna"), "intern" );
	deepEqual( Stem("internacional"), "internacional" );
	deepEqual( Stem("internacionales"), "internacional" );
	deepEqual( Stem("internacionalización"), "internacionaliz" );
	deepEqual( Stem("internacionalmente"), "internacional" );
	deepEqual( Stem("internado"), "intern" );
	deepEqual( Stem("internamente"), "intern" );
	deepEqual( Stem("internarnos"), "intern" );
	deepEqual( Stem("internaron"), "intern" );
	deepEqual( Stem("internas"), "intern" );
	deepEqual( Stem("international"), "international" );
	deepEqual( Stem("interno"), "intern" );
	deepEqual( Stem("internó"), "intern" );
	deepEqual( Stem("internos"), "intern" );
	deepEqual( Stem("interpeló"), "interpel" );
	deepEqual( Stem("interponer"), "interpon" );
	deepEqual( Stem("interpreta"), "interpret" );
	deepEqual( Stem("interpretaba"), "interpret" );
	deepEqual( Stem("interpretación"), "interpret" );
	deepEqual( Stem("interpretaciones"), "interpret" );
	deepEqual( Stem("interpretado"), "interpret" );
	deepEqual( Stem("interpretamos"), "interpret" );
	deepEqual( Stem("interpretan"), "interpret" );
	deepEqual( Stem("interpretando"), "interpret" );
	deepEqual( Stem("interpretándolo"), "interpret" );
	deepEqual( Stem("interpretar"), "interpret" );
	deepEqual( Stem("interpretara"), "interpret" );
	deepEqual( Stem("interpretará"), "interpret" );
	deepEqual( Stem("interpretarán"), "interpret" );
	deepEqual( Stem("interpretaremos"), "interpret" );
	deepEqual( Stem("interpretarlas"), "interpret" );
	deepEqual( Stem("interpretarse"), "interpret" );
	deepEqual( Stem("interprete"), "interpret" );
	deepEqual( Stem("intérprete"), "interpret" );
	deepEqual( Stem("interpreten"), "interpret" );
	deepEqual( Stem("intérpretes"), "interpret" );
	deepEqual( Stem("interpretó"), "interpret" );
	deepEqual( Stem("interpuestas"), "interpuest" );
	deepEqual( Stem("interpuestos"), "interpuest" );
	deepEqual( Stem("interpuso"), "interpus" );
	deepEqual( Stem("interrelacionarse"), "interrelacion" );
	deepEqual( Stem("interrogada"), "interrog" );
	deepEqual( Stem("interrogado"), "interrog" );
	deepEqual( Stem("interrogados"), "interrog" );
	deepEqual( Stem("interrogante"), "interrog" );
	deepEqual( Stem("interrogar"), "interrog" );
	deepEqual( Stem("interrogó"), "interrog" );
	deepEqual( Stem("interrumpa"), "interrump" );
	deepEqual( Stem("interrumpe"), "interrump" );
	deepEqual( Stem("interrumpía"), "interrump" );
	deepEqual( Stem("interrumpido"), "interrump" );
	deepEqual( Stem("interrumpidos"), "interrump" );
	deepEqual( Stem("interrumpieron"), "interrump" );
	deepEqual( Stem("interrumpió"), "interrump" );
	deepEqual( Stem("interrumpir"), "interrump" );
	deepEqual( Stem("interrupción"), "interrupcion" );
	deepEqual( Stem("interruptor"), "interruptor" );
	deepEqual( Stem("interticket"), "interticket" );
	deepEqual( Stem("intervalos"), "interval" );
	deepEqual( Stem("intervención"), "intervencion" );
	deepEqual( Stem("intervenciones"), "intervencion" );
	deepEqual( Stem("intervencionismo"), "intervencion" );
	deepEqual( Stem("intervendrá"), "intervendr" );
	deepEqual( Stem("intervenga"), "interveng" );
	deepEqual( Stem("intervengan"), "interveng" );
	deepEqual( Stem("intervenido"), "interven" );
	deepEqual( Stem("intervenidos"), "interven" );
	deepEqual( Stem("intervenir"), "interven" );
	deepEqual( Stem("intervenirse"), "interven" );
	deepEqual( Stem("interventores"), "interventor" );
	deepEqual( Stem("interviene"), "intervien" );
	deepEqual( Stem("intervienen"), "intervien" );
	deepEqual( Stem("interviniera"), "intervin" );
	deepEqual( Stem("intervinieron"), "intervin" );
	deepEqual( Stem("intervino"), "intervin" );
	deepEqual( Stem("intestino"), "intestin" );
	deepEqual( Stem("íntima"), "intim" );
	deepEqual( Stem("íntimas"), "intim" );
	deepEqual( Stem("intimate"), "intimat" );
	deepEqual( Stem("intimidad"), "intim" );
	deepEqual( Stem("intimidados"), "intimid" );
	deepEqual( Stem("intimidando"), "intimid" );
	deepEqual( Stem("íntimo"), "intim" );
	deepEqual( Stem("íntimos"), "intim" );
	deepEqual( Stem("intolerable"), "intoler" );
	deepEqual( Stem("intolerancia"), "intoler" );
	deepEqual( Stem("intoxicación"), "intox" );
	deepEqual( Stem("intoxicados"), "intoxic" );
	deepEqual( Stem("intoxicando"), "intoxic" );
	deepEqual( Stem("intralox"), "intralox" );
	deepEqual( Stem("intramuscular"), "intramuscul" );
	deepEqual( Stem("intransigencia"), "intransigent" );
	deepEqual( Stem("intransigentemente"), "intransigent" );
	deepEqual( Stem("intrascendente"), "intrascendent" );
	deepEqual( Stem("intrascendentes"), "intrascendent" );
	deepEqual( Stem("intrincadas"), "intrinc" );
	deepEqual( Stem("intrínseca"), "intrinsec" );
	deepEqual( Stem("introducción"), "introduccion" );
	deepEqual( Stem("introducido"), "introduc" );
	deepEqual( Stem("introduciendo"), "introduc" );
	deepEqual( Stem("introducir"), "introduc" );
	deepEqual( Stem("introducirán"), "introduc" );
	deepEqual( Stem("introducirles"), "introduc" );
	deepEqual( Stem("introducirse"), "introduc" );
	deepEqual( Stem("introductorio"), "introductori" );
	deepEqual( Stem("introdujera"), "introdujer" );
	deepEqual( Stem("introdujeron"), "introdujeron" );
	deepEqual( Stem("introdujo"), "introduj" );
	deepEqual( Stem("introduzca"), "introduzc" );
	deepEqual( Stem("introspectivo"), "introspect" );
	deepEqual( Stem("introvertido"), "introvert" );
	deepEqual( Stem("intrusión"), "intrusion" );
	deepEqual( Stem("intuición"), "intuicion" );
	deepEqual( Stem("intuitiva"), "intuit" );
	deepEqual( Stem("inundación"), "inund" );
	deepEqual( Stem("inundaciones"), "inund" );
	deepEqual( Stem("inundadas"), "inund" );
	deepEqual( Stem("inundado"), "inund" );
	deepEqual( Stem("inusitada"), "inusit" );
	deepEqual( Stem("inusitado"), "inusit" );
	deepEqual( Stem("inusual"), "inusual" );
	deepEqual( Stem("inútil"), "inutil" );
	deepEqual( Stem("inútiles"), "inutil" );
	deepEqual( Stem("inútilmente"), "inutil" );
	deepEqual( Stem("invadidas"), "invad" );
	deepEqual( Stem("invadido"), "invad" );
	deepEqual( Stem("invadieron"), "invad" );
	deepEqual( Stem("invadió"), "invad" );
	deepEqual( Stem("invadir"), "invad" );
	deepEqual( Stem("invalidan"), "invalid" );
	deepEqual( Stem("invaluable"), "invalu" );
	deepEqual( Stem("invasión"), "invasion" );
	deepEqual( Stem("invasiones"), "invasion" );
	deepEqual( Stem("invencible"), "invenc" );
	deepEqual( Stem("invención"), "invencion" );
	deepEqual( Stem("inventado"), "invent" );
	deepEqual( Stem("inventando"), "invent" );
	deepEqual( Stem("inventar"), "invent" );
	deepEqual( Stem("inventario"), "inventari" );
	deepEqual( Stem("invente"), "invent" );
	deepEqual( Stem("inventé"), "invent" );
	deepEqual( Stem("inventiva"), "invent" );
	deepEqual( Stem("invento"), "invent" );
	deepEqual( Stem("inventó"), "invent" );
	deepEqual( Stem("inverlat"), "inverlat" );
	deepEqual( Stem("inverméxico"), "invermex" );
	deepEqual( Stem("invernadero"), "invernader" );
	deepEqual( Stem("invernal"), "invernal" );
	deepEqual( Stem("inverosímil"), "inverosimil" );
	deepEqual( Stem("inversa"), "invers" );
	deepEqual( Stem("inversión"), "inversion" );
	deepEqual( Stem("inversiones"), "inversion" );
	deepEqual( Stem("inversionista"), "inversion" );
	deepEqual( Stem("inversionistas"), "inversion" );
	deepEqual( Stem("invertía"), "invert" );
	deepEqual( Stem("invertidas"), "invert" );
	deepEqual( Stem("invertido"), "invert" );
	deepEqual( Stem("invertidos"), "invert" );
	deepEqual( Stem("invertimos"), "invert" );
	deepEqual( Stem("invertir"), "invert" );
	deepEqual( Stem("invertirá"), "invert" );
	deepEqual( Stem("invertirán"), "invert" );
	deepEqual( Stem("invertiremos"), "invert" );
	deepEqual( Stem("invertirían"), "invert" );
	deepEqual( Stem("invertirla"), "invert" );
	deepEqual( Stem("invertirle"), "invert" );
	deepEqual( Stem("investidura"), "investidur" );
	deepEqual( Stem("investiga"), "investig" );
	deepEqual( Stem("investigaban"), "investig" );
	deepEqual( Stem("investigación"), "investig" );
	deepEqual( Stem("investigaciones"), "investig" );
	deepEqual( Stem("investigado"), "investig" );
	deepEqual( Stem("investigador"), "investig" );
	deepEqual( Stem("investigadora"), "investig" );
	deepEqual( Stem("investigadores"), "investig" );
	deepEqual( Stem("investigados"), "investig" );
	deepEqual( Stem("investigan"), "investig" );
	deepEqual( Stem("investigando"), "investig" );
	deepEqual( Stem("investigar"), "investig" );
	deepEqual( Stem("investigará"), "investig" );
	deepEqual( Stem("investigaran"), "investig" );
	deepEqual( Stem("investigarse"), "investig" );
	deepEqual( Stem("investigó"), "investig" );
	deepEqual( Stem("investigue"), "investig" );
	deepEqual( Stem("investiguen"), "investig" );
	deepEqual( Stem("invicta"), "invict" );
	deepEqual( Stem("invicto"), "invict" );
	deepEqual( Stem("invictos"), "invict" );
	deepEqual( Stem("invierno"), "inviern" );
	deepEqual( Stem("invierta"), "inviert" );
	deepEqual( Stem("invierte"), "inviert" );
	deepEqual( Stem("invierten"), "inviert" );
	deepEqual( Stem("invirtiendo"), "invirt" );
	deepEqual( Stem("invirtieron"), "invirt" );
	deepEqual( Stem("invirtió"), "invirt" );
	deepEqual( Stem("invisiblemente"), "invis" );
	deepEqual( Stem("invita"), "invit" );
	deepEqual( Stem("invitaba"), "invit" );
	deepEqual( Stem("invitación"), "invit" );
	deepEqual( Stem("invitaciones"), "invit" );
	deepEqual( Stem("invitadas"), "invit" );
	deepEqual( Stem("invitado"), "invit" );
	deepEqual( Stem("invitados"), "invit" );
	deepEqual( Stem("invitamos"), "invit" );
	deepEqual( Stem("invitan"), "invit" );
	deepEqual( Stem("invitando"), "invit" );
	deepEqual( Stem("invitar"), "invit" );
	deepEqual( Stem("invitarlo"), "invit" );
	deepEqual( Stem("invitaron"), "invit" );
	deepEqual( Stem("invite"), "invit" );
	deepEqual( Stem("inviten"), "invit" );
	deepEqual( Stem("invito"), "invit" );
	deepEqual( Stem("invitó"), "invit" );
	deepEqual( Stem("invocando"), "invoc" );
	deepEqual( Stem("involucra"), "involucr" );
	deepEqual( Stem("involucrada"), "involucr" );
	deepEqual( Stem("involucradas"), "involucr" );
	deepEqual( Stem("involucrado"), "involucr" );
	deepEqual( Stem("involucrados"), "involucr" );
	deepEqual( Stem("involucramiento"), "involucr" );
	deepEqual( Stem("involucran"), "involucr" );
	deepEqual( Stem("involucrar"), "involucr" );
	deepEqual( Stem("involucrarlo"), "involucr" );
	deepEqual( Stem("involucrarme"), "involucr" );
	deepEqual( Stem("involucrarse"), "involucr" );
	deepEqual( Stem("involucre"), "involucr" );
	deepEqual( Stem("involucro"), "involucr" );
	deepEqual( Stem("involuntario"), "involuntari" );
	deepEqual( Stem("inyección"), "inyeccion" );
	deepEqual( Stem("inyectar"), "inyect" );
	deepEqual( Stem("inyecte"), "inyect" );
	deepEqual( Stem("inyectó"), "inyect" );
	deepEqual( Stem("ionizados"), "ioniz" );
	deepEqual( Stem("ionizantes"), "ioniz" );
	deepEqual( Stem("ip"), "ip" );
	deepEqual( Stem("ipiña"), "ipiñ" );
	deepEqual( Stem("ir"), "ir" );
	deepEqual( Stem("ira"), "ira" );
	deepEqual( Stem("irá"), "ira" );
	deepEqual( Stem("iracheta"), "irachet" );
	deepEqual( Stem("iraheta"), "irahet" );
	deepEqual( Stem("iran"), "iran" );
	deepEqual( Stem("irán"), "iran" );
	deepEqual( Stem("iraní"), "iran" );
	deepEqual( Stem("iraníes"), "iran" );
	deepEqual( Stem("irapuato"), "irapuat" );
	deepEqual( Stem("iraq"), "iraq" );
	deepEqual( Stem("iraquí"), "iraqu" );
	deepEqual( Stem("iraquíes"), "iraqu" );
	deepEqual( Stem("iremos"), "irem" );
	deepEqual( Stem("iría"), "iri" );
	deepEqual( Stem("irían"), "iri" );
	deepEqual( Stem("iriarte"), "iriart" );
	deepEqual( Stem("irigoyen"), "irigoy" );
	deepEqual( Stem("irineo"), "irine" );
	deepEqual( Stem("irlandés"), "irlandes" );
	deepEqual( Stem("irlandeses"), "irlandes" );
	deepEqual( Stem("irlos"), "irlos" );
	deepEqual( Stem("irma"), "irma" );
	deepEqual( Stem("irme"), "irme" );
	deepEqual( Stem("irnos"), "irnos" );
	deepEqual( Stem("ironía"), "iron" );
	deepEqual( Stem("irónico"), "iron" );
	deepEqual( Stem("ironizaba"), "ironiz" );
	deepEqual( Stem("irracional"), "irracional" );
	deepEqual( Stem("irrealistas"), "irreal" );
	deepEqual( Stem("irrealizables"), "irrealiz" );
	deepEqual( Stem("irreconocible"), "irreconoc" );
	deepEqual( Stem("irrecuperable"), "irrecuper" );
	deepEqual( Stem("irredentos"), "irredent" );
	deepEqual( Stem("irrefutable"), "irrefut" );
	deepEqual( Stem("irregular"), "irregul" );
	deepEqual( Stem("irregulares"), "irregular" );
	deepEqual( Stem("irregularidad"), "irregular" );
	deepEqual( Stem("irregularidades"), "irregular" );
	deepEqual( Stem("irrelevante"), "irrelev" );
	deepEqual( Stem("irrelevantes"), "irrelev" );
	deepEqual( Stem("irremisiblemente"), "irremis" );
	deepEqual( Stem("irrenunciabilidad"), "irrenunci" );
	deepEqual( Stem("irresoluto"), "irresolut" );
	deepEqual( Stem("irresolutos"), "irresolut" );
	deepEqual( Stem("irresponsabilidad"), "irrespons" );
	deepEqual( Stem("irresponsable"), "irrespons" );
	deepEqual( Stem("irresponsables"), "irrespons" );
	deepEqual( Stem("irreversible"), "irrevers" );
	deepEqual( Stem("irrita"), "irrit" );
	deepEqual( Stem("irritación"), "irrit" );
	deepEqual( Stem("irritaciones"), "irrit" );
	deepEqual( Stem("irritado"), "irrit" );
	deepEqual( Stem("irritan"), "irrit" );
	deepEqual( Stem("irritantes"), "irrit" );
	deepEqual( Stem("irritarse"), "irrit" );
	deepEqual( Stem("irruga"), "irrug" );
	deepEqual( Stem("irse"), "irse" );
	deepEqual( Stem("irte"), "irte" );
	deepEqual( Stem("irvin"), "irvin" );
	deepEqual( Stem("isaac"), "isaac" );
	deepEqual( Stem("isabel"), "isabel" );
	deepEqual( Stem("isabela"), "isabel" );
	deepEqual( Stem("isaias"), "isai" );
	deepEqual( Stem("isidro"), "isidr" );
	deepEqual( Stem("isla"), "isla" );
	deepEqual( Stem("islam"), "islam" );
	deepEqual( Stem("islámico"), "islam" );
	deepEqual( Stem("island"), "island" );
	deepEqual( Stem("islandia"), "islandi" );
	deepEqual( Stem("islas"), "islas" );
	deepEqual( Stem("isleño"), "isleñ" );
	deepEqual( Stem("isleños"), "isleñ" );
	deepEqual( Stem("isley"), "isley" );
	deepEqual( Stem("ismael"), "ismael" );
	deepEqual( Stem("israel"), "israel" );
	deepEqual( Stem("israelí"), "israel" );
	deepEqual( Stem("israelíes"), "israel" );
	deepEqual( Stem("issste"), "issste" );
	deepEqual( Stem("isssteleon"), "isssteleon" );
	deepEqual( Stem("isssteleón"), "isssteleon" );
	deepEqual( Stem("istmo"), "istmo" );
	deepEqual( Stem("italia"), "itali" );
	deepEqual( Stem("italiana"), "italian" );
	deepEqual( Stem("italiano"), "italian" );
	deepEqual( Stem("italianos"), "italian" );
	deepEqual( Stem("itam"), "itam" );
	deepEqual( Stem("itamaraty"), "itamaraty" );
	deepEqual( Stem("itesm"), "itesm" );
	deepEqual( Stem("itinerante"), "itiner" );
	deepEqual( Stem("itinerantes"), "itiner" );
	deepEqual( Stem("itinerario"), "itinerari" );
	deepEqual( Stem("itinerarios"), "itinerari" );
	deepEqual( Stem("itoloca"), "itoloc" );
	deepEqual( Stem("itsmo"), "itsmo" );
	deepEqual( Stem("itzá"), "itza" );
	deepEqual( Stem("iv"), "iv" );
	deepEqual( Stem("iva"), "iva" );
	deepEqual( Stem("iván"), "ivan" );
	deepEqual( Stem("ivo"), "ivo" );
	deepEqual( Stem("iwai"), "iwai" );
	deepEqual( Stem("ix"), "ix" );
	deepEqual( Stem("ixalapa"), "ixalap" );
	deepEqual( Stem("ixcaquixtla"), "ixcaquixtl" );
	deepEqual( Stem("izar"), "izar" );
	deepEqual( Stem("izetbegovic"), "izetbegovic" );
	deepEqual( Stem("izquierda"), "izquierd" );
	deepEqual( Stem("izquierdas"), "izquierd" );
	deepEqual( Stem("izquierdo"), "izquierd" );
	deepEqual( Stem("iztapalapa"), "iztapalap" );
	deepEqual( Stem("izvestia"), "izvesti" );
	deepEqual( Stem("j"), "j" );
	deepEqual( Stem("jaafar"), "jaaf" );
	deepEqual( Stem("jaboneras"), "jaboner" );
	deepEqual( Stem("jacinta"), "jacint" );
	deepEqual( Stem("jack"), "jack" );
	deepEqual( Stem("jackeline"), "jackelin" );
	deepEqual( Stem("jackie"), "jacki" );
	deepEqual( Stem("jackson"), "jackson" );
	deepEqual( Stem("jacobo"), "jacob" );
	deepEqual( Stem("jacobs"), "jacobs" );
	deepEqual( Stem("jacques"), "jacqu" );
	deepEqual( Stem("jactancio"), "jactanci" );
	deepEqual( Stem("jacte"), "jact" );
	deepEqual( Stem("jade"), "jad" );
	deepEqual( Stem("jaguares"), "jaguar" );
	deepEqual( Stem("jaguarundis"), "jaguarundis" );
	deepEqual( Stem("jaibos"), "jaib" );
	deepEqual( Stem("jaime"), "jaim" );
	deepEqual( Stem("jalaba"), "jal" );
	deepEqual( Stem("jalado"), "jal" );
	deepEqual( Stem("jalando"), "jal" );
	deepEqual( Stem("jalapeños"), "jalapeñ" );
	deepEqual( Stem("jalar"), "jal" );
	deepEqual( Stem("jalarse"), "jal" );
	deepEqual( Stem("jale"), "jal" );
	deepEqual( Stem("jalisciense"), "jalisciens" );
	deepEqual( Stem("jalisco"), "jalisc" );
	deepEqual( Stem("jaló"), "jal" );
	deepEqual( Stem("jalones"), "jalon" );
	deepEqual( Stem("jam"), "jam" );
	deepEqual( Stem("jamaiquina"), "jamaiquin" );
	deepEqual( Stem("jamás"), "jamas" );
	deepEqual( Stem("james"), "jam" );
	deepEqual( Stem("jamón"), "jamon" );
	deepEqual( Stem("jana"), "jan" );
	deepEqual( Stem("janeiro"), "janeir" );
	deepEqual( Stem("janice"), "janic" );
	deepEqual( Stem("japon"), "japon" );
	deepEqual( Stem("japón"), "japon" );
	deepEqual( Stem("japonés"), "japones" );
	deepEqual( Stem("japonesa"), "japones" );
	deepEqual( Stem("japonesas"), "japones" );
	deepEqual( Stem("japoneses"), "japones" );
	deepEqual( Stem("jaque"), "jaqu" );
	deepEqual( Stem("jaramillo"), "jaramill" );
	deepEqual( Stem("jardín"), "jardin" );
	deepEqual( Stem("jardinería"), "jardin" );
	deepEqual( Stem("jardinero"), "jardiner" );
	deepEqual( Stem("jardines"), "jardin" );
	deepEqual( Stem("jarocha"), "jaroch" );
	deepEqual( Stem("jarochas"), "jaroch" );
	deepEqual( Stem("jarra"), "jarr" );
	deepEqual( Stem("jarro"), "jarr" );
	deepEqual( Stem("jarry"), "jarry" );
	deepEqual( Stem("jason"), "jason" );
	deepEqual( Stem("jasso"), "jass" );
	deepEqual( Stem("jaula"), "jaul" );
	deepEqual( Stem("javier"), "javi" );
	deepEqual( Stem("jazz"), "jazz" );
	deepEqual( Stem("jazzista"), "jazzist" );
	deepEqual( Stem("jc"), "jc" );
	deepEqual( Stem("jcpenney"), "jcpenney" );
	deepEqual( Stem("jean"), "jean" );
	deepEqual( Stem("jeans"), "jeans" );
	deepEqual( Stem("jefa"), "jef" );
	deepEqual( Stem("jefatura"), "jefatur" );
	deepEqual( Stem("jefaturados"), "jefatur" );
	deepEqual( Stem("jefe"), "jef" );
	deepEqual( Stem("jefes"), "jef" );
	deepEqual( Stem("jeff"), "jeff" );
	deepEqual( Stem("jefferson"), "jefferson" );
	deepEqual( Stem("jehová"), "jehov" );
	deepEqual( Stem("jerarcas"), "jerarc" );
	deepEqual( Stem("jerarquía"), "jerarqu" );
	deepEqual( Stem("jeremie"), "jeremi" );
	deepEqual( Stem("jeremy"), "jeremy" );
	deepEqual( Stem("jerga"), "jerg" );
	deepEqual( Stem("jerónimo"), "jeronim" );
	deepEqual( Stem("jersey"), "jersey" );
	deepEqual( Stem("jesés"), "jeses" );
	deepEqual( Stem("jesse"), "jess" );
	deepEqual( Stem("jessica"), "jessic" );
	deepEqual( Stem("jesús"), "jesus" );
	deepEqual( Stem("jethro"), "jethr" );
	deepEqual( Stem("jetta"), "jett" );
	deepEqual( Stem("jim"), "jim" );
	deepEqual( Stem("jiménez"), "jimenez" );
	deepEqual( Stem("jimmy"), "jimmy" );
	deepEqual( Stem("jinete"), "jinet" );
	deepEqual( Stem("jinetear"), "jinet" );
	deepEqual( Stem("jinetes"), "jinet" );
	deepEqual( Stem("jingles"), "jingl" );
	deepEqual( Stem("jo"), "jo" );
	deepEqual( Stem("joachim"), "joachim" );
	deepEqual( Stem("joao"), "joa" );
	deepEqual( Stem("joaquín"), "joaquin" );
	deepEqual( Stem("jobs"), "jobs" );
	deepEqual( Stem("joe"), "joe" );
	deepEqual( Stem("joel"), "joel" );
	deepEqual( Stem("john"), "john" );
	deepEqual( Stem("johnny"), "johnny" );
	deepEqual( Stem("johns"), "johns" );
	deepEqual( Stem("johnson"), "johnson" );
	deepEqual( Stem("jol"), "jol" );
	deepEqual( Stem("jolalpán"), "jolalpan" );
	deepEqual( Stem("jolopo"), "jolop" );
	deepEqual( Stem("jonas"), "jon" );
	deepEqual( Stem("jones"), "jon" );
	deepEqual( Stem("jonrón"), "jonron" );
	deepEqual( Stem("jorge"), "jorg" );
	deepEqual( Stem("jornada"), "jorn" );
	deepEqual( Stem("jornadas"), "jorn" );
	deepEqual( Stem("joroba"), "jorob" );
	deepEqual( Stem("jorobas"), "jorob" );
	deepEqual( Stem("josé"), "jos" );
	deepEqual( Stem("josefina"), "josefin" );
	deepEqual( Stem("joselito"), "joselit" );
	deepEqual( Stem("joseph"), "joseph" );
	deepEqual( Stem("jour"), "jour" );
	deepEqual( Stem("journal"), "journal" );
	deepEqual( Stem("joven"), "jov" );
	deepEqual( Stem("jóven"), "jov" );
	deepEqual( Stem("jovencita"), "jovencit" );
	deepEqual( Stem("jovencitas"), "jovencit" );
	deepEqual( Stem("jovencito"), "jovencit" );
	deepEqual( Stem("jovencitos"), "jovencit" );
	deepEqual( Stem("jóvenes"), "joven" );
	deepEqual( Stem("jovial"), "jovial" );
	deepEqual( Stem("joya"), "joy" );
	deepEqual( Stem("joyas"), "joy" );
	deepEqual( Stem("joyera"), "joyer" );
	deepEqual( Stem("joyería"), "joy" );
	deepEqual( Stem("joyero"), "joyer" );
	deepEqual( Stem("joyeros"), "joyer" );
	deepEqual( Stem("joyitas"), "joyit" );
	deepEqual( Stem("jr"), "jr" );
	deepEqual( Stem("juan"), "juan" );
	deepEqual( Stem("juana"), "juan" );
	deepEqual( Stem("juarez"), "juarez" );
	deepEqual( Stem("juárez"), "juarez" );
	deepEqual( Stem("jubilado"), "jubil" );
	deepEqual( Stem("jubilados"), "jubil" );
	deepEqual( Stem("júbilo"), "jubil" );
	deepEqual( Stem("jubilosa"), "jubil" );
	deepEqual( Stem("judicial"), "judicial" );
	deepEqual( Stem("judiciales"), "judicial" );
	deepEqual( Stem("judío"), "judi" );
	deepEqual( Stem("judíos"), "judi" );
	deepEqual( Stem("judith"), "judith" );
	deepEqual( Stem("judoka"), "judok" );
	deepEqual( Stem("jueceo"), "juece" );
	deepEqual( Stem("jueces"), "juec" );
	deepEqual( Stem("juega"), "jueg" );
	deepEqual( Stem("juegan"), "jueg" );
	deepEqual( Stem("juegas"), "jueg" );
	deepEqual( Stem("juego"), "jueg" );
	deepEqual( Stem("juegos"), "jueg" );
	deepEqual( Stem("juegue"), "jueg" );
	deepEqual( Stem("jueguen"), "jueg" );
	deepEqual( Stem("jueves"), "juev" );
	deepEqual( Stem("juez"), "juez" );
	deepEqual( Stem("jugaba"), "jug" );
	deepEqual( Stem("jugaban"), "jug" );
	deepEqual( Stem("jugada"), "jug" );
	deepEqual( Stem("jugado"), "jug" );
	deepEqual( Stem("jugador"), "jugador" );
	deepEqual( Stem("jugadoras"), "jugador" );
	deepEqual( Stem("jugadores"), "jugador" );
	deepEqual( Stem("jugados"), "jug" );
	deepEqual( Stem("jugando"), "jug" );
	deepEqual( Stem("jugar"), "jug" );
	deepEqual( Stem("jugará"), "jug" );
	deepEqual( Stem("jugaran"), "jug" );
	deepEqual( Stem("jugarán"), "jug" );
	deepEqual( Stem("jugaremos"), "jug" );
	deepEqual( Stem("jugaría"), "jug" );
	deepEqual( Stem("jugaron"), "jug" );
	deepEqual( Stem("jugo"), "jug" );
	deepEqual( Stem("jugó"), "jug" );
	deepEqual( Stem("jugosa"), "jugos" );
	deepEqual( Stem("jugué"), "jug" );
	deepEqual( Stem("juguete"), "juguet" );
	deepEqual( Stem("juguetes"), "juguet" );
	deepEqual( Stem("juguetito"), "juguetit" );
	deepEqual( Stem("juicio"), "juici" );
	deepEqual( Stem("juicios"), "juici" );
	deepEqual( Stem("julia"), "juli" );
	deepEqual( Stem("julián"), "julian" );
	deepEqual( Stem("julieta"), "juliet" );
	deepEqual( Stem("julio"), "juli" );
	deepEqual( Stem("julius"), "julius" );
	deepEqual( Stem("juncal"), "juncal" );
	deepEqual( Stem("junco"), "junc" );
	deepEqual( Stem("jung"), "jung" );
	deepEqual( Stem("junio"), "juni" );
	deepEqual( Stem("junior"), "junior" );
	deepEqual( Stem("junquia"), "junqui" );
	deepEqual( Stem("junta"), "junt" );
	deepEqual( Stem("juntando"), "junt" );
	deepEqual( Stem("juntar"), "junt" );
	deepEqual( Stem("juntaron"), "junt" );
	deepEqual( Stem("juntas"), "junt" );
	deepEqual( Stem("junto"), "junt" );
	deepEqual( Stem("juntos"), "junt" );
	deepEqual( Stem("jurado"), "jur" );
	deepEqual( Stem("juramentado"), "jurament" );
	deepEqual( Stem("juramentaron"), "jurament" );
	deepEqual( Stem("juramentó"), "jurament" );
	deepEqual( Stem("jurídica"), "jurid" );
	deepEqual( Stem("jurídicamente"), "jurid" );
	deepEqual( Stem("jurídicas"), "jurid" );
	deepEqual( Stem("jurídico"), "jurid" );
	deepEqual( Stem("jurídicos"), "jurid" );
	deepEqual( Stem("jurisdicción"), "jurisdiccion" );
	deepEqual( Stem("juristas"), "jurist" );
	deepEqual( Stem("juro"), "jur" );
	deepEqual( Stem("justa"), "just" );
	deepEqual( Stem("justice"), "justic" );
	deepEqual( Stem("justicia"), "justici" );
	deepEqual( Stem("justiciero"), "justicier" );
	deepEqual( Stem("justifica"), "justif" );
	deepEqual( Stem("justificable"), "justific" );
	deepEqual( Stem("justificación"), "justif" );
	deepEqual( Stem("justificada"), "justific" );
	deepEqual( Stem("justificadas"), "justific" );
	deepEqual( Stem("justifican"), "justific" );
	deepEqual( Stem("justificando"), "justific" );
	deepEqual( Stem("justificantes"), "justif" );
	deepEqual( Stem("justificar"), "justific" );
	deepEqual( Stem("justificará"), "justific" );
	deepEqual( Stem("justificarán"), "justific" );
	deepEqual( Stem("justificare"), "justificar" );
	deepEqual( Stem("justificó"), "justific" );
	deepEqual( Stem("justifique"), "justifiqu" );
	deepEqual( Stem("justino"), "justin" );
	deepEqual( Stem("justo"), "just" );
	deepEqual( Stem("justos"), "just" );
	deepEqual( Stem("juvenil"), "juvenil" );
	deepEqual( Stem("juveniles"), "juvenil" );
	deepEqual( Stem("juventino"), "juventin" );
	deepEqual( Stem("juventud"), "juventud" );
	deepEqual( Stem("juzgaban"), "juzg" );
	deepEqual( Stem("juzgada"), "juzg" );
	deepEqual( Stem("juzgado"), "juzg" );
	deepEqual( Stem("juzgador"), "juzgador" );
	deepEqual( Stem("juzgados"), "juzg" );
	deepEqual( Stem("juzgar"), "juzg" );
	deepEqual( Stem("juzgarlo"), "juzg" );
	deepEqual( Stem("juzgue"), "juzg" );
	deepEqual( Stem("k"), "k" );
	deepEqual( Stem("kahlo"), "kahl" );
	deepEqual( Stem("kaiman"), "kaim" );
	deepEqual( Stem("kansai"), "kansai" );
	deepEqual( Stem("kantor"), "kantor" );
	deepEqual( Stem("kaoteng"), "kaoteng" );
	deepEqual( Stem("karam"), "karam" );
	deepEqual( Stem("karate"), "karat" );
	deepEqual( Stem("karcz"), "karcz" );
	deepEqual( Stem("kardex"), "kardex" );
	deepEqual( Stem("karen"), "kar" );
	deepEqual( Stem("karina"), "karin" );
	deepEqual( Stem("karl"), "karl" );
	deepEqual( Stem("karla"), "karl" );
	deepEqual( Stem("katheyn"), "katheyn" );
	deepEqual( Stem("katia"), "kati" );
	deepEqual( Stem("kaveh"), "kaveh" );
	deepEqual( Stem("kay"), "kay" );
	deepEqual( Stem("kb"), "kb" );
	deepEqual( Stem("kbytes"), "kbytes" );
	deepEqual( Stem("keldvsh"), "keldvsh" );
	deepEqual( Stem("kelly"), "kelly" );
	deepEqual( Stem("kelso"), "kels" );
	deepEqual( Stem("kempes"), "kemp" );
	deepEqual( Stem("kenia"), "keni" );
	deepEqual( Stem("keniano"), "kenian" );
	deepEqual( Stem("kenianos"), "kenian" );
	deepEqual( Stem("keniata"), "keniat" );
	deepEqual( Stem("kennan"), "kenn" );
	deepEqual( Stem("kennedy"), "kennedy" );
	deepEqual( Stem("kenneth"), "kenneth" );
	deepEqual( Stem("kenny"), "kenny" );
	deepEqual( Stem("kensington"), "kensington" );
	deepEqual( Stem("kent"), "kent" );
	deepEqual( Stem("kentenich"), "kentenich" );
	deepEqual( Stem("kenworth"), "kenworth" );
	deepEqual( Stem("kerosina"), "kerosin" );
	deepEqual( Stem("kevin"), "kevin" );
	deepEqual( Stem("key"), "key" );
	deepEqual( Stem("keynesianismo"), "keynesian" );
	deepEqual( Stem("kg"), "kg" );
	deepEqual( Stem("kgb"), "kgb" );
	deepEqual( Stem("khasbulatov"), "khasbulatov" );
	deepEqual( Stem("kibeho"), "kibeh" );
	deepEqual( Stem("kidman"), "kidm" );
	deepEqual( Stem("kiko"), "kik" );
	deepEqual( Stem("kilo"), "kil" );
	deepEqual( Stem("kilogramos"), "kilogr" );
	deepEqual( Stem("kilometraje"), "kilometraj" );
	deepEqual( Stem("kilometro"), "kilometr" );
	deepEqual( Stem("kilómetro"), "kilometr" );
	deepEqual( Stem("kilómetros"), "kilometr" );
	deepEqual( Stem("kilos"), "kil" );
	deepEqual( Stem("kim"), "kim" );
	deepEqual( Stem("kima"), "kim" );
	deepEqual( Stem("king"), "king" );
	deepEqual( Stem("kinshasa"), "kinshas" );
	deepEqual( Stem("kipper"), "kipp" );
	deepEqual( Stem("kissinger"), "kissing" );
	deepEqual( Stem("kit"), "kit" );
	deepEqual( Stem("km"), "km" );
	deepEqual( Stem("kmart"), "kmart" );
	deepEqual( Stem("knight"), "knight" );
	deepEqual( Stem("ko"), "ko" );
	deepEqual( Stem("koblenz"), "koblenz" );
	deepEqual( Stem("koeman"), "koem" );
	deepEqual( Stem("kong"), "kong" );
	deepEqual( Stem("korshak"), "korshak" );
	deepEqual( Stem("kosovo"), "kosov" );
	deepEqual( Stem("krafchick"), "krafchick" );
	deepEqual( Stem("kremlin"), "kremlin" );
	deepEqual( Stem("kresak"), "kresak" );
	deepEqual( Stem("kretch"), "kretch" );
	deepEqual( Stem("krieger"), "krieg" );
	deepEqual( Stem("krill"), "krill" );
	deepEqual( Stem("kristof"), "kristof" );
	deepEqual( Stem("kruger"), "krug" );
	deepEqual( Stem("kruschev"), "kruschev" );
	deepEqual( Stem("kubli"), "kubli" );
	deepEqual( Stem("kuehnheim"), "kuehnheim" );
	deepEqual( Stem("kumate"), "kumat" );
	deepEqual( Stem("kuniaki"), "kuniaki" );
	deepEqual( Stem("kuperlmann"), "kuperlmann" );
	deepEqual( Stem("kuramura"), "kuramur" );
	deepEqual( Stem("kurdos"), "kurd" );
	deepEqual( Stem("kutugata"), "kutugat" );
	deepEqual( Stem("kuwait"), "kuwait" );
	deepEqual( Stem("kuwaití"), "kuwait" );
	deepEqual( Stem("kytty"), "kytty" );
	deepEqual( Stem("l"), "l" );
	deepEqual( Stem("la"), "la" );
	deepEqual( Stem("labastida"), "labast" );
	deepEqual( Stem("laberinto"), "laberint" );
	deepEqual( Stem("labiche"), "labich" );
	deepEqual( Stem("labor"), "labor" );
	deepEqual( Stem("labora"), "labor" );
	deepEqual( Stem("laboral"), "laboral" );
	deepEqual( Stem("laborales"), "laboral" );
	deepEqual( Stem("laborando"), "labor" );
	deepEqual( Stem("laborar"), "labor" );
	deepEqual( Stem("laboratorio"), "laboratori" );
	deepEqual( Stem("laboratorios"), "laboratori" );
	deepEqual( Stem("laborde"), "labord" );
	deepEqual( Stem("labores"), "labor" );
	deepEqual( Stem("laborioso"), "labori" );
	deepEqual( Stem("laboró"), "labor" );
	deepEqual( Stem("labra"), "labr" );
	deepEqual( Stem("labrecque"), "labrecqu" );
	deepEqual( Stem("lacónicos"), "lacon" );
	deepEqual( Stem("lácteos"), "lacte" );
	deepEqual( Stem("lada"), "lad" );
	deepEqual( Stem("ladarse"), "lad" );
	deepEqual( Stem("ladas"), "lad" );
	deepEqual( Stem("ladatel"), "ladatel" );
	deepEqual( Stem("ladera"), "lader" );
	deepEqual( Stem("laderas"), "lader" );
	deepEqual( Stem("ladino"), "ladin" );
	deepEqual( Stem("ladinos"), "ladin" );
	deepEqual( Stem("lado"), "lad" );
	deepEqual( Stem("lados"), "lad" );
	deepEqual( Stem("ladrón"), "ladron" );
	deepEqual( Stem("ladrones"), "ladron" );
	deepEqual( Stem("lagerfeld"), "lagerfeld" );
	deepEqual( Stem("lago"), "lag" );
	deepEqual( Stem("lagos"), "lag" );
	deepEqual( Stem("lágrimas"), "lagrim" );
	deepEqual( Stem("lagüera"), "lagüer" );
	deepEqual( Stem("laguna"), "lagun" );
	deepEqual( Stem("lagunas"), "lagun" );
	deepEqual( Stem("lagunera"), "laguner" );
	deepEqual( Stem("laguneros"), "laguner" );
	deepEqual( Stem("laicos"), "laic" );
	deepEqual( Stem("lajas"), "laj" );
	deepEqual( Stem("lajous"), "lajous" );
	deepEqual( Stem("lake"), "lak" );
	deepEqual( Stem("lala"), "lal" );
	deepEqual( Stem("lamadrid"), "lamadr" );
	deepEqual( Stem("lamarche"), "lamarch" );
	deepEqual( Stem("lambisconería"), "lambiscon" );
	deepEqual( Stem("lambretón"), "lambreton" );
	deepEqual( Stem("lamen"), "lam" );
	deepEqual( Stem("lamenta"), "lament" );
	deepEqual( Stem("lamentable"), "lament" );
	deepEqual( Stem("lamentablemente"), "lament" );
	deepEqual( Stem("lamentables"), "lament" );
	deepEqual( Stem("lamentaron"), "lament" );
	deepEqual( Stem("lamento"), "lament" );
	deepEqual( Stem("lamentó"), "lament" );
	deepEqual( Stem("lámina"), "lamin" );
	deepEqual( Stem("laminadora"), "lamin" );
	deepEqual( Stem("láminas"), "lamin" );
	deepEqual( Stem("lamosa"), "lamos" );
	deepEqual( Stem("lámparas"), "lamp" );
	deepEqual( Stem("lana"), "lan" );
	deepEqual( Stem("lanari"), "lanari" );
	deepEqual( Stem("lance"), "lanc" );
	deepEqual( Stem("lancé"), "lanc" );
	deepEqual( Stem("lancen"), "lanc" );
	deepEqual( Stem("lancha"), "lanch" );
	deepEqual( Stem("lanchero"), "lancher" );
	deepEqual( Stem("landois"), "landois" );
	deepEqual( Stem("landru"), "landru" );
	deepEqual( Stem("lang"), "lang" );
	deepEqual( Stem("langange"), "langang" );
	deepEqual( Stem("langley"), "langley" );
	deepEqual( Stem("lantana"), "lantan" );
	deepEqual( Stem("lantastic"), "lantastic" );
	deepEqual( Stem("lanz"), "lanz" );
	deepEqual( Stem("lanza"), "lanz" );
	deepEqual( Stem("lanzaba"), "lanz" );
	deepEqual( Stem("lanzada"), "lanz" );
	deepEqual( Stem("lanzadas"), "lanz" );
	deepEqual( Stem("lanzado"), "lanz" );
	deepEqual( Stem("lanzador"), "lanzador" );
	deepEqual( Stem("lanzadores"), "lanzador" );
	deepEqual( Stem("lanzagranadas"), "lanzagran" );
	deepEqual( Stem("lanzamiento"), "lanzamient" );
	deepEqual( Stem("lanzamientos"), "lanzamient" );
	deepEqual( Stem("lanzar"), "lanz" );
	deepEqual( Stem("lanzará"), "lanz" );
	deepEqual( Stem("lanzaran"), "lanz" );
	deepEqual( Stem("lanzarán"), "lanz" );
	deepEqual( Stem("lanzaron"), "lanz" );
	deepEqual( Stem("lanzarse"), "lanz" );
	deepEqual( Stem("lanzó"), "lanz" );
	deepEqual( Stem("lápiz"), "lapiz" );
	deepEqual( Stem("lapso"), "laps" );
	deepEqual( Stem("lara"), "lar" );
	deepEqual( Stem("lareau"), "lareau" );
	deepEqual( Stem("laredo"), "lared" );
	deepEqual( Stem("laredos"), "lared" );
	deepEqual( Stem("lares"), "lar" );
	deepEqual( Stem("larga"), "larg" );
	deepEqual( Stem("largamente"), "larg" );
	deepEqual( Stem("largas"), "larg" );
	deepEqual( Stem("largo"), "larg" );
	deepEqual( Stem("largometraje"), "largometraj" );
	deepEqual( Stem("largometrajes"), "largometraj" );
	deepEqual( Stem("largos"), "larg" );
	deepEqual( Stem("larguirucho"), "larguiruch" );
	deepEqual( Stem("larguísimo"), "larguisim" );
	deepEqual( Stem("larios"), "lari" );
	deepEqual( Stem("larralde"), "larrald" );
	deepEqual( Stem("larry"), "larry" );
	deepEqual( Stem("las"), "las" );
	deepEqual( Stem("lascivo"), "lasciv" );
	deepEqual( Stem("laser"), "las" );
	deepEqual( Stem("láser"), "las" );
	deepEqual( Stem("lasercard"), "lasercard" );
	deepEqual( Stem("láseres"), "laser" );
	deepEqual( Stem("lasser"), "lass" );
	deepEqual( Stem("lástima"), "lastim" );
	deepEqual( Stem("lastimada"), "lastim" );
	deepEqual( Stem("lastimadas"), "lastim" );
	deepEqual( Stem("lastimar"), "lastim" );
	deepEqual( Stem("lastimeramente"), "lastimer" );
	deepEqual( Stem("lata"), "lat" );
	deepEqual( Stem("latas"), "lat" );
	deepEqual( Stem("latente"), "latent" );
	deepEqual( Stem("lateral"), "lateral" );
	deepEqual( Stem("laterales"), "lateral" );
	deepEqual( Stem("lateralidad"), "lateral" );
	deepEqual( Stem("latido"), "lat" );
	deepEqual( Stem("latin"), "latin" );
	deepEqual( Stem("latina"), "latin" );
	deepEqual( Stem("latino"), "latin" );
	deepEqual( Stem("latinoamérica"), "latinoamer" );
	deepEqual( Stem("latinoamericanas"), "latinoamerican" );
	deepEqual( Stem("latinoamericano"), "latinoamerican" );
	deepEqual( Stem("latinoamericanos"), "latinoamerican" );
	deepEqual( Stem("latinos"), "latin" );
	deepEqual( Stem("latitudes"), "latitud" );
	deepEqual( Stem("latón"), "laton" );
	deepEqual( Stem("laudos"), "laud" );
	deepEqual( Stem("laudrup"), "laudrup" );
	deepEqual( Stem("laura"), "laur" );
	deepEqual( Stem("laureano"), "laurean" );
	deepEqual( Stem("lauren"), "laur" );
	deepEqual( Stem("laurence"), "laurenc" );
	deepEqual( Stem("laurent"), "laurent" );
	deepEqual( Stem("lava"), "lav" );
	deepEqual( Stem("lavacoches"), "lavacoch" );
	deepEqual( Stem("lavaderos"), "lavader" );
	deepEqual( Stem("lavado"), "lav" );
	deepEqual( Stem("lavadora"), "lavador" );
	deepEqual( Stem("lavalle"), "lavall" );
	deepEqual( Stem("lavan"), "lav" );
	deepEqual( Stem("lavar"), "lav" );
	deepEqual( Stem("lavarlo"), "lav" );
	deepEqual( Stem("lavercombe"), "lavercomb" );
	deepEqual( Stem("lavolpe"), "lavolp" );
	deepEqual( Stem("laxitud"), "laxitud" );
	deepEqual( Stem("layla"), "layl" );
	deepEqual( Stem("lázaro"), "lazar" );
	deepEqual( Stem("lazcano"), "lazcan" );
	deepEqual( Stem("lazo"), "laz" );
	deepEqual( Stem("lazos"), "laz" );
	deepEqual( Stem("le"), "le" );
	deepEqual( Stem("leal"), "leal" );
	deepEqual( Stem("leales"), "leal" );
	deepEqual( Stem("lealtad"), "lealt" );
	deepEqual( Stem("léase"), "leas" );
	deepEqual( Stem("leblanc"), "leblanc" );
	deepEqual( Stem("lección"), "leccion" );
	deepEqual( Stem("lecciones"), "leccion" );
	deepEqual( Stem("leche"), "lech" );
	deepEqual( Stem("lechería"), "lech" );
	deepEqual( Stem("lechero"), "lecher" );
	deepEqual( Stem("lecho"), "lech" );
	deepEqual( Stem("lechuga"), "lechug" );
	deepEqual( Stem("leckie"), "lecki" );
	deepEqual( Stem("lecomte"), "lecomt" );
	deepEqual( Stem("lector"), "lector" );
	deepEqual( Stem("lectores"), "lector" );
	deepEqual( Stem("lectura"), "lectur" );
	deepEqual( Stem("lecturas"), "lectur" );
	deepEqual( Stem("ledezma"), "ledezm" );
	deepEqual( Stem("ledo"), "led" );
	deepEqual( Stem("lee"), "lee" );
	deepEqual( Stem("leeds"), "leeds" );
	deepEqual( Stem("leen"), "leen" );
	deepEqual( Stem("leer"), "leer" );
	deepEqual( Stem("leerán"), "leeran" );
	deepEqual( Stem("leerlo"), "leerl" );
	deepEqual( Stem("legado"), "leg" );
	deepEqual( Stem("legal"), "legal" );
	deepEqual( Stem("legales"), "legal" );
	deepEqual( Stem("legalidad"), "legal" );
	deepEqual( Stem("legalizar"), "legaliz" );
	deepEqual( Stem("legalizó"), "legaliz" );
	deepEqual( Stem("legalmente"), "legal" );
	deepEqual( Stem("legar"), "leg" );
	deepEqual( Stem("legendario"), "legendari" );
	deepEqual( Stem("legisla"), "legisl" );
	deepEqual( Stem("legislación"), "legisl" );
	deepEqual( Stem("legislador"), "legisl" );
	deepEqual( Stem("legisladora"), "legisl" );
	deepEqual( Stem("legisladores"), "legisl" );
	deepEqual( Stem("legislan"), "legisl" );
	deepEqual( Stem("legislar"), "legisl" );
	deepEqual( Stem("legislativa"), "legisl" );
	deepEqual( Stem("legislativas"), "legisl" );
	deepEqual( Stem("legislativo"), "legisl" );
	deepEqual( Stem("legislativos"), "legisl" );
	deepEqual( Stem("legislatura"), "legislatur" );
	deepEqual( Stem("legislaturas"), "legislatur" );
	deepEqual( Stem("legisle"), "legisl" );
	deepEqual( Stem("legislen"), "legisl" );
	deepEqual( Stem("legista"), "legist" );
	deepEqual( Stem("legítima"), "legitim" );
	deepEqual( Stem("legítimadefensa"), "legitimadefens" );
	deepEqual( Stem("legítimamente"), "legitim" );
	deepEqual( Stem("legitimidad"), "legitim" );
	deepEqual( Stem("legítimo"), "legitim" );
	deepEqual( Stem("legorreta"), "legorret" );
	deepEqual( Stem("legrá"), "legr" );
	deepEqual( Stem("leguas"), "legu" );
	deepEqual( Stem("legue"), "leg" );
	deepEqual( Stem("legumbres"), "legumbr" );
	deepEqual( Stem("lehnert"), "lehnert" );
	deepEqual( Stem("leí"), "lei" );
	deepEqual( Stem("leía"), "lei" );
	deepEqual( Stem("leída"), "leid" );
	deepEqual( Stem("leído"), "leid" );
	deepEqual( Stem("lejana"), "lejan" );
	deepEqual( Stem("lejanas"), "lejan" );
	deepEqual( Stem("lejano"), "lejan" );
	deepEqual( Stem("lejanos"), "lejan" );
	deepEqual( Stem("lejos"), "lej" );
	deepEqual( Stem("lema"), "lem" );
	deepEqual( Stem("lemas"), "lem" );
	deepEqual( Stem("lemus"), "lemus" );
	deepEqual( Stem("leña"), "leñ" );
	deepEqual( Stem("lencería"), "lenc" );
	deepEqual( Stem("lendl"), "lendl" );
	deepEqual( Stem("leñero"), "leñer" );
	deepEqual( Stem("lengua"), "lengu" );
	deepEqual( Stem("lenguaje"), "lenguaj" );
	deepEqual( Stem("lennard"), "lennard" );
	deepEqual( Stem("lenny"), "lenny" );
	deepEqual( Stem("lenta"), "lent" );
	deepEqual( Stem("lentamente"), "lent" );
	deepEqual( Stem("lentejuela"), "lentejuel" );
	deepEqual( Stem("lentejuelas"), "lentejuel" );
	deepEqual( Stem("lentes"), "lent" );
	deepEqual( Stem("lentitud"), "lentitud" );
	deepEqual( Stem("lento"), "lent" );
	deepEqual( Stem("lentos"), "lent" );
	deepEqual( Stem("leo"), "leo" );
	deepEqual( Stem("león"), "leon" );
	deepEqual( Stem("leonard"), "leonard" );
	deepEqual( Stem("leonarda"), "leonard" );
	deepEqual( Stem("leonardo"), "leonard" );
	deepEqual( Stem("leones"), "leon" );
	deepEqual( Stem("leonor"), "leonor" );
	deepEqual( Stem("leopoldo"), "leopold" );
	deepEqual( Stem("leotardos"), "leotard" );
	deepEqual( Stem("léoz"), "leoz" );
	deepEqual( Stem("lerma"), "lerm" );
	deepEqual( Stem("lermas"), "lerm" );
	deepEqual( Stem("lerna"), "lern" );
	deepEqual( Stem("leroux"), "leroux" );
	deepEqual( Stem("les"), "les" );
	deepEqual( Stem("lesbianas"), "lesbian" );
	deepEqual( Stem("lesión"), "lesion" );
	deepEqual( Stem("lesiona"), "lesion" );
	deepEqual( Stem("lesionada"), "lesion" );
	deepEqual( Stem("lesionadas"), "lesion" );
	deepEqual( Stem("lesionado"), "lesion" );
	deepEqual( Stem("lesionados"), "lesion" );
	deepEqual( Stem("lesionan"), "lesion" );
	deepEqual( Stem("lesionando"), "lesion" );
	deepEqual( Stem("lesionar"), "lesion" );
	deepEqual( Stem("lesiones"), "lesion" );
	deepEqual( Stem("lesiono"), "lesion" );
	deepEqual( Stem("lesionó"), "lesion" );
	deepEqual( Stem("lessing"), "lessing" );
	deepEqual( Stem("letal"), "letal" );
	deepEqual( Stem("letales"), "letal" );
	deepEqual( Stem("leticia"), "letici" );
	deepEqual( Stem("letra"), "letr" );
	deepEqual( Stem("letras"), "letr" );
	deepEqual( Stem("letrero"), "letrer" );
	deepEqual( Stem("letreros"), "letrer" );
	deepEqual( Stem("letrina"), "letrin" );
	deepEqual( Stem("letrinas"), "letrin" );
	deepEqual( Stem("letrista"), "letrist" );
	deepEqual( Stem("lett"), "lett" );
	deepEqual( Stem("leucemia"), "leucemi" );
	deepEqual( Stem("levanta"), "levant" );
	deepEqual( Stem("levantaba"), "levant" );
	deepEqual( Stem("levantada"), "levant" );
	deepEqual( Stem("levantado"), "levant" );
	deepEqual( Stem("levantados"), "levant" );
	deepEqual( Stem("levantamiento"), "levant" );
	deepEqual( Stem("levantando"), "levant" );
	deepEqual( Stem("levantándose"), "levant" );
	deepEqual( Stem("levantante"), "levant" );
	deepEqual( Stem("levantar"), "levant" );
	deepEqual( Stem("levantaran"), "levant" );
	deepEqual( Stem("levantarán"), "levant" );
	deepEqual( Stem("levantarás"), "levant" );
	deepEqual( Stem("levantarme"), "levant" );
	deepEqual( Stem("levantaron"), "levant" );
	deepEqual( Stem("levantarse"), "levant" );
	deepEqual( Stem("levante"), "levant" );
	deepEqual( Stem("levanten"), "levant" );
	deepEqual( Stem("levantó"), "levant" );
	deepEqual( Stem("levati"), "levati" );
	deepEqual( Stem("leve"), "lev" );
	deepEqual( Stem("levemente"), "levement" );
	deepEqual( Stem("leves"), "lev" );
	deepEqual( Stem("levin"), "levin" );
	deepEqual( Stem("levín"), "levin" );
	deepEqual( Stem("levítico"), "levit" );
	deepEqual( Stem("levy"), "levy" );
	deepEqual( Stem("ley"), "ley" );
	deepEqual( Stem("leyenda"), "leyend" );
	deepEqual( Stem("leyendas"), "leyend" );
	deepEqual( Stem("leyendo"), "leyend" );
	deepEqual( Stem("leyeron"), "leyeron" );
	deepEqual( Stem("leyes"), "ley" );
	deepEqual( Stem("leyó"), "ley" );
	deepEqual( Stem("leyva"), "leyv" );
	deepEqual( Stem("lianas"), "lian" );
	deepEqual( Stem("libanés"), "libanes" );
	deepEqual( Stem("libanesa"), "libanes" );
	deepEqual( Stem("líbano"), "liban" );
	deepEqual( Stem("libera"), "liber" );
	deepEqual( Stem("liberación"), "liber" );
	deepEqual( Stem("liberada"), "liber" );
	deepEqual( Stem("liberado"), "liber" );
	deepEqual( Stem("liberal"), "liberal" );
	deepEqual( Stem("liberales"), "liberal" );
	deepEqual( Stem("liberalismo"), "liberal" );
	deepEqual( Stem("liberalización"), "liberaliz" );
	deepEqual( Stem("liberalizar"), "liberaliz" );
	deepEqual( Stem("liberan"), "liber" );
	deepEqual( Stem("liberar"), "liber" );
	deepEqual( Stem("liberará"), "liber" );
	deepEqual( Stem("liberarlo"), "liber" );
	deepEqual( Stem("liberaron"), "liber" );
	deepEqual( Stem("liberia"), "liberi" );
	deepEqual( Stem("libero"), "liber" );
	deepEqual( Stem("líbero"), "liber" );
	deepEqual( Stem("liberó"), "liber" );
	deepEqual( Stem("libertad"), "libert" );
	deepEqual( Stem("libertades"), "libertad" );
	deepEqual( Stem("libertador"), "libert" );
	deepEqual( Stem("libertario"), "libertari" );
	deepEqual( Stem("libidinosamente"), "libidin" );
	deepEqual( Stem("libidio"), "libidi" );
	deepEqual( Stem("libramiento"), "libramient" );
	deepEqual( Stem("libran"), "libr" );
	deepEqual( Stem("librando"), "libr" );
	deepEqual( Stem("librará"), "libr" );
	deepEqual( Stem("librarla"), "libr" );
	deepEqual( Stem("librarse"), "libr" );
	deepEqual( Stem("librarte"), "librart" );
	deepEqual( Stem("libras"), "libr" );
	deepEqual( Stem("libre"), "libr" );
	deepEqual( Stem("librerías"), "libr" );
	deepEqual( Stem("libres"), "libr" );
	deepEqual( Stem("libreta"), "libret" );
	deepEqual( Stem("librito"), "librit" );
	deepEqual( Stem("libro"), "libr" );
	deepEqual( Stem("libró"), "libr" );
	deepEqual( Stem("libros"), "libr" );
	deepEqual( Stem("lic"), "lic" );
	deepEqual( Stem("licea"), "lice" );
	deepEqual( Stem("licencia"), "licenci" );
	deepEqual( Stem("licenciado"), "licenci" );
	deepEqual( Stem("licencias"), "licenci" );
	deepEqual( Stem("licenciaturas"), "licenciatur" );
	deepEqual( Stem("licha"), "lich" );
	deepEqual( Stem("licitación"), "licit" );
	deepEqual( Stem("licitaciones"), "licit" );
	deepEqual( Stem("licitará"), "licit" );
	deepEqual( Stem("lícito"), "licit" );
	deepEqual( Stem("liconsa"), "licons" );
	deepEqual( Stem("licor"), "licor" );
	deepEqual( Stem("licuada"), "licu" );
	deepEqual( Stem("lid"), "lid" );
	deepEqual( Stem("líder"), "lid" );
	deepEqual( Stem("liderato"), "liderat" );
	deepEqual( Stem("liderazgo"), "liderazg" );
	deepEqual( Stem("liderazgos"), "liderazg" );
	deepEqual( Stem("lidereados"), "lider" );
	deepEqual( Stem("liderear"), "lider" );
	deepEqual( Stem("líderes"), "lider" );
	deepEqual( Stem("lideresa"), "lideres" );
	deepEqual( Stem("lideresas"), "lideres" );
	deepEqual( Stem("lidia"), "lidi" );
	deepEqual( Stem("lidiado"), "lidi" );
	deepEqual( Stem("lidiaron"), "lidi" );
	deepEqual( Stem("lidice"), "lidic" );
	deepEqual( Stem("lidió"), "lid" );
	deepEqual( Stem("lido"), "lid" );
	deepEqual( Stem("lienzo"), "lienz" );
	deepEqual( Stem("liera"), "lier" );
	deepEqual( Stem("lievin"), "lievin" );
	deepEqual( Stem("lifane"), "lifan" );
	deepEqual( Stem("life"), "lif" );
	deepEqual( Stem("liga"), "lig" );
	deepEqual( Stem("ligados"), "lig" );
	deepEqual( Stem("ligamayorista"), "ligamayor" );
	deepEqual( Stem("ligamento"), "ligament" );
	deepEqual( Stem("ligar"), "lig" );
	deepEqual( Stem("ligarde"), "ligard" );
	deepEqual( Stem("ligaron"), "lig" );
	deepEqual( Stem("ligas"), "lig" );
	deepEqual( Stem("ligera"), "liger" );
	deepEqual( Stem("ligeramente"), "liger" );
	deepEqual( Stem("ligeras"), "liger" );
	deepEqual( Stem("ligereza"), "ligerez" );
	deepEqual( Stem("ligero"), "liger" );
	deepEqual( Stem("light"), "light" );
	deepEqual( Stem("ligne"), "lign" );
	deepEqual( Stem("ligó"), "lig" );
	deepEqual( Stem("ligue"), "lig" );
	deepEqual( Stem("liguilla"), "liguill" );
	deepEqual( Stem("liliana"), "lilian" );
	deepEqual( Stem("lima"), "lim" );
	deepEqual( Stem("limar"), "lim" );
	deepEqual( Stem("limita"), "limit" );
	deepEqual( Stem("limitaba"), "limit" );
	deepEqual( Stem("limitaciones"), "limit" );
	deepEqual( Stem("limitado"), "limit" );
	deepEqual( Stem("limitados"), "limit" );
	deepEqual( Stem("limitan"), "limit" );
	deepEqual( Stem("limitar"), "limit" );
	deepEqual( Stem("limitará"), "limit" );
	deepEqual( Stem("limite"), "limit" );
	deepEqual( Stem("límite"), "limit" );
	deepEqual( Stem("limited"), "limit" );
	deepEqual( Stem("límites"), "limit" );
	deepEqual( Stem("limitó"), "limit" );
	deepEqual( Stem("limítrofes"), "limitrof" );
	deepEqual( Stem("limits"), "limits" );
	deepEqual( Stem("limón"), "limon" );
	deepEqual( Stem("limonada"), "limon" );
	deepEqual( Stem("limosine"), "limosin" );
	deepEqual( Stem("limosna"), "limosn" );
	deepEqual( Stem("limosnita"), "limosnit" );
	deepEqual( Stem("limpia"), "limpi" );
	deepEqual( Stem("limpiamente"), "limpi" );
	deepEqual( Stem("limpiando"), "limpi" );
	deepEqual( Stem("limpiaparabrisas"), "limpiaparabris" );
	deepEqual( Stem("limpiar"), "limpi" );
	deepEqual( Stem("limpiaron"), "limpi" );
	deepEqual( Stem("limpias"), "limpi" );
	deepEqual( Stem("limpieza"), "limpiez" );
	deepEqual( Stem("limpio"), "limpi" );
	deepEqual( Stem("lina"), "lin" );
	deepEqual( Stem("linares"), "linar" );
	deepEqual( Stem("linces"), "linc" );
	deepEqual( Stem("linchar"), "linch" );
	deepEqual( Stem("lincoln"), "lincoln" );
	deepEqual( Stem("linda"), "lind" );
	deepEqual( Stem("linduras"), "lindur" );
	deepEqual( Stem("line"), "lin" );
	deepEqual( Stem("linea"), "line" );
	deepEqual( Stem("línea"), "line" );
	deepEqual( Stem("lineal"), "lineal" );
	deepEqual( Stem("lineamiento"), "lineamient" );
	deepEqual( Stem("lineamientos"), "lineamient" );
	deepEqual( Stem("líneas"), "lin" );
	deepEqual( Stem("lineker"), "linek" );
	deepEqual( Stem("liner"), "lin" );
	deepEqual( Stem("ling"), "ling" );
	deepEqual( Stem("lingada"), "ling" );
	deepEqual( Stem("linterna"), "lintern" );
	deepEqual( Stem("líos"), "lios" );
	deepEqual( Stem("liquidación"), "liquid" );
	deepEqual( Stem("liquidaciones"), "liquid" );
	deepEqual( Stem("liquidar"), "liquid" );
	deepEqual( Stem("liquidará"), "liquid" );
	deepEqual( Stem("liquidez"), "liquidez" );
	deepEqual( Stem("liquido"), "liqu" );
	deepEqual( Stem("líquido"), "liqu" );
	deepEqual( Stem("líquidos"), "liqu" );
	deepEqual( Stem("lira"), "lir" );
	deepEqual( Stem("lisa"), "lis" );
	deepEqual( Stem("lista"), "list" );
	deepEqual( Stem("listado"), "list" );
	deepEqual( Stem("listados"), "list" );
	deepEqual( Stem("listas"), "list" );
	deepEqual( Stem("listo"), "list" );
	deepEqual( Stem("listón"), "liston" );
	deepEqual( Stem("listos"), "list" );
	deepEqual( Stem("literalmente"), "literal" );
	deepEqual( Stem("literaria"), "literari" );
	deepEqual( Stem("literarias"), "literari" );
	deepEqual( Stem("literarios"), "literari" );
	deepEqual( Stem("literatos"), "literat" );
	deepEqual( Stem("literatura"), "literatur" );
	deepEqual( Stem("litigios"), "litigi" );
	deepEqual( Stem("litoral"), "litoral" );
	deepEqual( Stem("litorales"), "litoral" );
	deepEqual( Stem("litro"), "litr" );
	deepEqual( Stem("litros"), "litr" );
	deepEqual( Stem("livas"), "liv" );
	deepEqual( Stem("liverpool"), "liverpool" );
	deepEqual( Stem("livestock"), "livestock" );
	deepEqual( Stem("liviano"), "livian" );
	deepEqual( Stem("llaguno"), "llagun" );
	deepEqual( Stem("llama"), "llam" );
	deepEqual( Stem("llamaba"), "llam" );
	deepEqual( Stem("llamaban"), "llam" );
	deepEqual( Stem("llamada"), "llam" );
	deepEqual( Stem("llamadas"), "llam" );
	deepEqual( Stem("llamado"), "llam" );
	deepEqual( Stem("llamados"), "llam" );
	deepEqual( Stem("llamáis"), "llam" );
	deepEqual( Stem("llamamiento"), "llamamient" );
	deepEqual( Stem("llamamos"), "llam" );
	deepEqual( Stem("llaman"), "llam" );
	deepEqual( Stem("llamando"), "llam" );
	deepEqual( Stem("llamar"), "llam" );
	deepEqual( Stem("llamara"), "llam" );
	deepEqual( Stem("llamará"), "llam" );
	deepEqual( Stem("llamaría"), "llam" );
	deepEqual( Stem("llamarían"), "llam" );
	deepEqual( Stem("llamarlo"), "llam" );
	deepEqual( Stem("llamarnos"), "llam" );
	deepEqual( Stem("llamaron"), "llam" );
	deepEqual( Stem("llamarse"), "llam" );
	deepEqual( Stem("llamas"), "llam" );
	deepEqual( Stem("llamativa"), "llamat" );
	deepEqual( Stem("llamativas"), "llamat" );
	deepEqual( Stem("llamativos"), "llamat" );
	deepEqual( Stem("llame"), "llam" );
	deepEqual( Stem("llamen"), "llam" );
	deepEqual( Stem("llamo"), "llam" );
	deepEqual( Stem("llamó"), "llam" );
	deepEqual( Stem("llanamente"), "llan" );
	deepEqual( Stem("llanas"), "llan" );
	deepEqual( Stem("llanes"), "llan" );
	deepEqual( Stem("llano"), "llan" );
	deepEqual( Stem("llanos"), "llan" );
	deepEqual( Stem("llanta"), "llant" );
	deepEqual( Stem("llantas"), "llant" );
	deepEqual( Stem("llanto"), "llant" );
	deepEqual( Stem("llave"), "llav" );
	deepEqual( Stem("llaveros"), "llaver" );
	deepEqual( Stem("llaves"), "llav" );
	deepEqual( Stem("lle"), "lle" );
	deepEqual( Stem("llega"), "lleg" );
	deepEqual( Stem("llegaba"), "lleg" );
	deepEqual( Stem("llegaban"), "lleg" );
	deepEqual( Stem("llegada"), "lleg" );
	deepEqual( Stem("llegadas"), "lleg" );
	deepEqual( Stem("llegado"), "lleg" );
	deepEqual( Stem("llegados"), "lleg" );
	deepEqual( Stem("llegamos"), "lleg" );
	deepEqual( Stem("llegan"), "lleg" );
	deepEqual( Stem("llegando"), "lleg" );
	deepEqual( Stem("llegar"), "lleg" );
	deepEqual( Stem("llegara"), "lleg" );
	deepEqual( Stem("llegará"), "lleg" );
	deepEqual( Stem("llegaran"), "lleg" );
	deepEqual( Stem("llegarán"), "lleg" );
	deepEqual( Stem("llegaré"), "lleg" );
	deepEqual( Stem("llegaremos"), "lleg" );
	deepEqual( Stem("llegaría"), "lleg" );
	deepEqual( Stem("llegarían"), "lleg" );
	deepEqual( Stem("llegaron"), "lleg" );
	deepEqual( Stem("llegarse"), "lleg" );
	deepEqual( Stem("llegas"), "lleg" );
	deepEqual( Stem("llego"), "lleg" );
	deepEqual( Stem("llegó"), "lleg" );
	deepEqual( Stem("llegue"), "lleg" );
	deepEqual( Stem("lleguemos"), "lleg" );
	deepEqual( Stem("lleguen"), "lleg" );
	deepEqual( Stem("llena"), "llen" );
	deepEqual( Stem("llenado"), "llen" );
	deepEqual( Stem("llenan"), "llen" );
	deepEqual( Stem("llenando"), "llen" );
	deepEqual( Stem("llenar"), "llen" );
	deepEqual( Stem("llenará"), "llen" );
	deepEqual( Stem("llenarla"), "llen" );
	deepEqual( Stem("llenarlas"), "llen" );
	deepEqual( Stem("llenaron"), "llen" );
	deepEqual( Stem("llenarse"), "llen" );
	deepEqual( Stem("llenas"), "llen" );
	deepEqual( Stem("lleno"), "llen" );
	deepEqual( Stem("llenó"), "llen" );
	deepEqual( Stem("llenos"), "llen" );
	deepEqual( Stem("llergo"), "llerg" );
	deepEqual( Stem("lleva"), "llev" );
	deepEqual( Stem("llevaba"), "llev" );
	deepEqual( Stem("llevaban"), "llev" );
	deepEqual( Stem("llevada"), "llev" );
	deepEqual( Stem("llevadas"), "llev" );
	deepEqual( Stem("llevado"), "llev" );
	deepEqual( Stem("llevados"), "llev" );
	deepEqual( Stem("llevamos"), "llev" );
	deepEqual( Stem("llevan"), "llev" );
	deepEqual( Stem("llevando"), "llev" );
	deepEqual( Stem("llevándolos"), "llev" );
	deepEqual( Stem("llevándose"), "llev" );
	deepEqual( Stem("llevar"), "llev" );
	deepEqual( Stem("llevara"), "llev" );
	deepEqual( Stem("llevará"), "llev" );
	deepEqual( Stem("llevaran"), "llev" );
	deepEqual( Stem("llevarán"), "llev" );
	deepEqual( Stem("llevaría"), "llev" );
	deepEqual( Stem("llevarían"), "llev" );
	deepEqual( Stem("llevarla"), "llev" );
	deepEqual( Stem("llevarlas"), "llev" );
	deepEqual( Stem("llevarle"), "llev" );
	deepEqual( Stem("llevarlo"), "llev" );
	deepEqual( Stem("llevarlos"), "llev" );
	deepEqual( Stem("llevaron"), "llev" );
	deepEqual( Stem("llevarse"), "llev" );
	deepEqual( Stem("llevárselo"), "llev" );
	deepEqual( Stem("llevas"), "llev" );
	deepEqual( Stem("llevase"), "llev" );
	deepEqual( Stem("lleve"), "llev" );
	deepEqual( Stem("llévelo"), "llevel" );
	deepEqual( Stem("lleven"), "llev" );
	deepEqual( Stem("llevo"), "llev" );
	deepEqual( Stem("llevó"), "llev" );
	deepEqual( Stem("llora"), "llor" );
	deepEqual( Stem("lloraba"), "llor" );
	deepEqual( Stem("lloran"), "llor" );
	deepEqual( Stem("llorando"), "llor" );
	deepEqual( Stem("llorar"), "llor" );
	deepEqual( Stem("lloraré"), "llor" );
	deepEqual( Stem("lloró"), "llor" );
	deepEqual( Stem("llorosa"), "lloros" );
	deepEqual( Stem("llosa"), "llos" );
	deepEqual( Stem("llover"), "llov" );
	deepEqual( Stem("lloviendo"), "llov" );
	deepEqual( Stem("llovió"), "llov" );
	deepEqual( Stem("llovizna"), "llovizn" );
	deepEqual( Stem("lloviznas"), "llovizn" );
	deepEqual( Stem("llueva"), "lluev" );
	deepEqual( Stem("llueve"), "lluev" );
	deepEqual( Stem("llueven"), "lluev" );
	deepEqual( Stem("lluvia"), "lluvi" );
	deepEqual( Stem("lluvias"), "lluvi" );
	deepEqual( Stem("lluvioso"), "lluvios" );
	deepEqual( Stem("lluviosos"), "lluvios" );
	deepEqual( Stem("lmkf"), "lmkf" );
	deepEqual( Stem("lo"), "lo" );
	deepEqual( Stem("loable"), "loabl" );
	deepEqual( Stem("loaeza"), "loaez" );
	deepEqual( Stem("lobeira"), "lobeir" );
	deepEqual( Stem("lobo"), "lob" );
	deepEqual( Stem("lobos"), "lob" );
	deepEqual( Stem("lóbulo"), "lobul" );
	deepEqual( Stem("loca"), "loc" );
	deepEqual( Stem("locación"), "locacion" );
	deepEqual( Stem("local"), "local" );
	deepEqual( Stem("locales"), "local" );
	deepEqual( Stem("localice"), "localic" );
	deepEqual( Stem("localidad"), "local" );
	deepEqual( Stem("localidades"), "local" );
	deepEqual( Stem("localiza"), "localiz" );
	deepEqual( Stem("localización"), "localiz" );
	deepEqual( Stem("localizada"), "localiz" );
	deepEqual( Stem("localizadas"), "localiz" );
	deepEqual( Stem("localizado"), "localiz" );
	deepEqual( Stem("localizados"), "localiz" );
	deepEqual( Stem("localizar"), "localiz" );
	deepEqual( Stem("localizará"), "localiz" );
	deepEqual( Stem("localizaron"), "localiz" );
	deepEqual( Stem("localizó"), "localiz" );
	deepEqual( Stem("localmente"), "local" );
	deepEqual( Stem("locka"), "lock" );
	deepEqual( Stem("loco"), "loc" );
	deepEqual( Stem("locos"), "loc" );
	deepEqual( Stem("locura"), "locur" );
	deepEqual( Stem("lodazal"), "lodazal" );
	deepEqual( Stem("lodo"), "lod" );
	deepEqual( Stem("lofton"), "lofton" );
	deepEqual( Stem("lógica"), "logic" );
	deepEqual( Stem("lógicamente"), "logic" );
	deepEqual( Stem("lógico"), "logic" );
	deepEqual( Stem("logo"), "log" );
	deepEqual( Stem("logotipo"), "logotip" );
	deepEqual( Stem("logra"), "logr" );
	deepEqual( Stem("lograba"), "logr" );
	deepEqual( Stem("lograban"), "logr" );
	deepEqual( Stem("lograda"), "logr" );
	deepEqual( Stem("logradas"), "logr" );
	deepEqual( Stem("logrado"), "logr" );
	deepEqual( Stem("logrados"), "logr" );
	deepEqual( Stem("logramos"), "logr" );
	deepEqual( Stem("logran"), "logr" );
	deepEqual( Stem("logrando"), "logr" );
	deepEqual( Stem("lograr"), "logr" );
	deepEqual( Stem("lograra"), "logr" );
	deepEqual( Stem("logrará"), "logr" );
	deepEqual( Stem("lograrán"), "logr" );
	deepEqual( Stem("lograremos"), "logr" );
	deepEqual( Stem("lograrlo"), "logr" );
	deepEqual( Stem("lograron"), "logr" );
	deepEqual( Stem("lograrse"), "logr" );
	deepEqual( Stem("logre"), "logr" );
	deepEqual( Stem("logré"), "logr" );
	deepEqual( Stem("logren"), "logr" );
	deepEqual( Stem("logro"), "logr" );
	deepEqual( Stem("logró"), "logr" );
	deepEqual( Stem("logronés"), "logrones" );
	deepEqual( Stem("logroñés"), "logroñes" );
	deepEqual( Stem("logros"), "logr" );
	deepEqual( Stem("lolita"), "lolit" );
	deepEqual( Stem("loma"), "lom" );
	deepEqual( Stem("lomas"), "lom" );
	deepEqual( Stem("lombardo"), "lombard" );
	deepEqual( Stem("lomelí"), "lomel" );
	deepEqual( Stem("lomos"), "lom" );
	deepEqual( Stem("lona"), "lon" );
	deepEqual( Stem("lonche"), "lonch" );
	deepEqual( Stem("lonches"), "lonch" );
	deepEqual( Stem("londinense"), "londinens" );
	deepEqual( Stem("londres"), "londr" );
	deepEqual( Stem("longevo"), "longev" );
	deepEqual( Stem("longitud"), "longitud" );
	deepEqual( Stem("longoria"), "longori" );
	deepEqual( Stem("lope"), "lop" );
	deepEqual( Stem("lopez"), "lopez" );
	deepEqual( Stem("lópez"), "lopez" );
	deepEqual( Stem("lópezfigueroa"), "lopezfiguero" );
	deepEqual( Stem("lopezportillista"), "lopezportill" );
	deepEqual( Stem("loredo"), "lored" );
	deepEqual( Stem("lorena"), "loren" );
	deepEqual( Stem("lorenzo"), "lorenz" );
	deepEqual( Stem("loreto"), "loret" );
	deepEqual( Stem("los"), "los" );
	deepEqual( Stem("losada"), "los" );
	deepEqual( Stem("lote"), "lot" );
	deepEqual( Stem("lotería"), "lot" );
	deepEqual( Stem("lotes"), "lot" );
	deepEqual( Stem("lotus"), "lotus" );
	deepEqual( Stem("louis"), "louis" );
	deepEqual( Stem("louisiana"), "louisian" );
	deepEqual( Stem("lourdes"), "lourd" );
	deepEqual( Stem("lover"), "lov" );
	deepEqual( Stem("loya"), "loy" );
	deepEqual( Stem("loyola"), "loyol" );
	deepEqual( Stem("lozano"), "lozan" );
	deepEqual( Stem("lsqb"), "lsqb" );
	deepEqual( Stem("ltd"), "ltd" );
	deepEqual( Stem("lubricación"), "lubric" );
	deepEqual( Stem("lucas"), "luc" );
	deepEqual( Stem("luce"), "luc" );
	deepEqual( Stem("lucen"), "luc" );
	deepEqual( Stem("lucero"), "lucer" );
	deepEqual( Stem("luces"), "luc" );
	deepEqual( Stem("lucha"), "luch" );
	deepEqual( Stem("luchaba"), "luch" );
	deepEqual( Stem("luchado"), "luch" );
	deepEqual( Stem("luchador"), "luchador" );
	deepEqual( Stem("luchadores"), "luchador" );
	deepEqual( Stem("luchando"), "luch" );
	deepEqual( Stem("luchar"), "luch" );
	deepEqual( Stem("luchará"), "luch" );
	deepEqual( Stem("lucharon"), "luch" );
	deepEqual( Stem("luchas"), "luch" );
	deepEqual( Stem("lucho"), "luch" );
	deepEqual( Stem("luchó"), "luch" );
	deepEqual( Stem("lucía"), "luc" );
	deepEqual( Stem("luciano"), "lucian" );
	deepEqual( Stem("lúcidamente"), "lucid" );
	deepEqual( Stem("lucido"), "luc" );
	deepEqual( Stem("luciendo"), "luc" );
	deepEqual( Stem("lucieron"), "luc" );
	deepEqual( Stem("lucila"), "lucil" );
	deepEqual( Stem("lucimiento"), "lucimient" );
	deepEqual( Stem("lucio"), "luci" );
	deepEqual( Stem("lució"), "luc" );
	deepEqual( Stem("lucir"), "luc" );
	deepEqual( Stem("lucrar"), "lucr" );
	deepEqual( Stem("lucro"), "lucr" );
	deepEqual( Stem("luctuosas"), "luctu" );
	deepEqual( Stem("lúdica"), "ludic" );
	deepEqual( Stem("lúdicos"), "ludic" );
	deepEqual( Stem("ludmila"), "ludmil" );
	deepEqual( Stem("luego"), "lueg" );
	deepEqual( Stem("lueguito"), "lueguit" );
	deepEqual( Stem("luévano"), "luevan" );
	deepEqual( Stem("lugar"), "lug" );
	deepEqual( Stem("lugares"), "lugar" );
	deepEqual( Stem("lugo"), "lug" );
	deepEqual( Stem("luis"), "luis" );
	deepEqual( Stem("luisa"), "luis" );
	deepEqual( Stem("luiz"), "luiz" );
	deepEqual( Stem("lujo"), "luj" );
	deepEqual( Stem("lujos"), "luj" );
	deepEqual( Stem("lujoso"), "lujos" );
	deepEqual( Stem("lumbreras"), "lumbrer" );
	deepEqual( Stem("luminosas"), "lumin" );
	deepEqual( Stem("luminosidad"), "lumin" );
	deepEqual( Stem("luminoso"), "lumin" );
	deepEqual( Stem("luminotécnicos"), "luminotecn" );
	deepEqual( Stem("luna"), "lun" );
	deepEqual( Stem("lunar"), "lun" );
	deepEqual( Stem("lunáticos"), "lunat" );
	deepEqual( Stem("lunes"), "lun" );
	deepEqual( Stem("luneta"), "lunet" );
	deepEqual( Stem("lupe"), "lup" );
	deepEqual( Stem("lupercio"), "luperci" );
	deepEqual( Stem("lupita"), "lupit" );
	deepEqual( Stem("lúpulo"), "lupul" );
	deepEqual( Stem("lusinchi"), "lusinchi" );
	deepEqual( Stem("lutero"), "luter" );
	deepEqual( Stem("luto"), "lut" );
	deepEqual( Stem("luviano"), "luvian" );
	deepEqual( Stem("luxemburgo"), "luxemburg" );
	deepEqual( Stem("luz"), "luz" );
	deepEqual( Stem("luzcan"), "luzc" );
	deepEqual( Stem("luzón"), "luzon" );
	deepEqual( Stem("lwdvig"), "lwdvig" );
	deepEqual( Stem("lydia"), "lydi" );
	deepEqual( Stem("lynch"), "lynch" );
	deepEqual( Stem("lyon"), "lyon" );
	deepEqual( Stem("m"), "m" );
	deepEqual( Stem("ma"), "ma" );
	deepEqual( Stem("mac"), "mac" );
	deepEqual( Stem("macabro"), "macabr" );
	deepEqual( Stem("macartismo"), "macart" );
	deepEqual( Stem("macedonia"), "macedoni" );
	deepEqual( Stem("macedonio"), "macedoni" );
	deepEqual( Stem("machado"), "mach" );
	deepEqual( Stem("machetero"), "macheter" );
	deepEqual( Stem("machiria"), "machiri" );
	deepEqual( Stem("machismo"), "machism" );
	deepEqual( Stem("machista"), "machist" );
	deepEqual( Stem("macho"), "mach" );
	deepEqual( Stem("machuca"), "machuc" );
	deepEqual( Stem("macías"), "mac" );
	deepEqual( Stem("macintosh"), "macintosh" );
	deepEqual( Stem("macizo"), "maciz" );
	deepEqual( Stem("macotela"), "macotel" );
	deepEqual( Stem("macroeconómica"), "macroeconom" );
	deepEqual( Stem("macroeconómicas"), "macroeconom" );
	deepEqual( Stem("macroplaza"), "macroplaz" );
	deepEqual( Stem("macrópolis"), "macropolis" );
	deepEqual( Stem("macumba"), "macumb" );
	deepEqual( Stem("madamme"), "madamm" );
	deepEqual( Stem("madariaga"), "madariag" );
	deepEqual( Stem("madeja"), "madej" );
	deepEqual( Stem("mademoiselle"), "mademoisell" );
	deepEqual( Stem("madera"), "mader" );
	deepEqual( Stem("maderámenes"), "maderamen" );
	deepEqual( Stem("maderas"), "mader" );
	deepEqual( Stem("madero"), "mader" );
	deepEqual( Stem("madrazo"), "madraz" );
	deepEqual( Stem("madre"), "madr" );
	deepEqual( Stem("madres"), "madr" );
	deepEqual( Stem("madrid"), "madr" );
	deepEqual( Stem("madrigal"), "madrigal" );
	deepEqual( Stem("madril"), "madril" );
	deepEqual( Stem("madrileñas"), "madrileñ" );
	deepEqual( Stem("madrileño"), "madrileñ" );
	deepEqual( Stem("madrileños"), "madrileñ" );
	deepEqual( Stem("madrina"), "madrin" );
	deepEqual( Stem("madrinas"), "madrin" );
	deepEqual( Stem("madrugada"), "madrug" );
	deepEqual( Stem("madura"), "madur" );
	deepEqual( Stem("maduración"), "madur" );
	deepEqual( Stem("madurar"), "madur" );
	deepEqual( Stem("madure"), "madur" );
	deepEqual( Stem("madurez"), "madurez" );
	deepEqual( Stem("maduro"), "madur" );
	deepEqual( Stem("maduros"), "madur" );
	deepEqual( Stem("maestra"), "maestr" );
	deepEqual( Stem("maestras"), "maestr" );
	deepEqual( Stem("maestría"), "maestr" );
	deepEqual( Stem("maestrías"), "maestr" );
	deepEqual( Stem("maestro"), "maestr" );
	deepEqual( Stem("maestros"), "maestr" );
	deepEqual( Stem("mafia"), "mafi" );
	deepEqual( Stem("mafiosos"), "mafios" );
	deepEqual( Stem("magala"), "magal" );
	deepEqual( Stem("magaña"), "magañ" );
	deepEqual( Stem("magdalena"), "magdalen" );
	deepEqual( Stem("magia"), "magi" );
	deepEqual( Stem("magic"), "magic" );
	deepEqual( Stem("mágica"), "magic" );
	deepEqual( Stem("mágicas"), "magic" );
	deepEqual( Stem("mágico"), "magic" );
	deepEqual( Stem("magisterial"), "magisterial" );
	deepEqual( Stem("magisteriales"), "magisterial" );
	deepEqual( Stem("magisterio"), "magisteri" );
	deepEqual( Stem("magistrado"), "magistr" );
	deepEqual( Stem("magistrados"), "magistr" );
	deepEqual( Stem("magistral"), "magistral" );
	deepEqual( Stem("magistrales"), "magistral" );
	deepEqual( Stem("magistralmente"), "magistral" );
	deepEqual( Stem("magma"), "magm" );
	deepEqual( Stem("magna"), "magn" );
	deepEqual( Stem("magnesia"), "magnesi" );
	deepEqual( Stem("magnética"), "magnet" );
	deepEqual( Stem("magnéticamente"), "magnet" );
	deepEqual( Stem("magnéticas"), "magnet" );
	deepEqual( Stem("magnéticos"), "magnet" );
	deepEqual( Stem("magneto"), "magnet" );
	deepEqual( Stem("magnetómetro"), "magnetometr" );
	deepEqual( Stem("magnífica"), "magnif" );
	deepEqual( Stem("magníficas"), "magnif" );
	deepEqual( Stem("magnificencia"), "magnificent" );
	deepEqual( Stem("magnífico"), "magnif" );
	deepEqual( Stem("magníficos"), "magnif" );
	deepEqual( Stem("magnitud"), "magnitud" );
	deepEqual( Stem("magno"), "magn" );
	deepEqual( Stem("magnolia"), "magnoli" );
	deepEqual( Stem("magnum"), "magnum" );
	deepEqual( Stem("magotteaux"), "magotteaux" );
	deepEqual( Stem("mague"), "mag" );
	deepEqual( Stem("mahoney"), "mahoney" );
	deepEqual( Stem("mahony"), "mahony" );
	deepEqual( Stem("maiz"), "maiz" );
	deepEqual( Stem("maíz"), "maiz" );
	deepEqual( Stem("majadería"), "majad" );
	deepEqual( Stem("majadero"), "majader" );
	deepEqual( Stem("majdel"), "majdel" );
	deepEqual( Stem("majestad"), "majest" );
	deepEqual( Stem("majestuosas"), "majestu" );
	deepEqual( Stem("majestuosidad"), "majestu" );
	deepEqual( Stem("majestuoso"), "majestu" );
	deepEqual( Stem("maksim"), "maksim" );
	deepEqual( Stem("mal"), "mal" );
	deepEqual( Stem("mala"), "mal" );
	deepEqual( Stem("malagón"), "malagon" );
	deepEqual( Stem("malas"), "mal" );
	deepEqual( Stem("malcolm"), "malcolm" );
	deepEqual( Stem("malcriada"), "malcri" );
	deepEqual( Stem("maldad"), "mald" );
	deepEqual( Stem("maldades"), "maldad" );
	deepEqual( Stem("maldición"), "maldicion" );
	deepEqual( Stem("maldiciones"), "maldicion" );
	deepEqual( Stem("maldito"), "maldit" );
	deepEqual( Stem("maldonado"), "maldon" );
	deepEqual( Stem("maleantes"), "maleant" );
	deepEqual( Stem("males"), "mal" );
	deepEqual( Stem("maletas"), "malet" );
	deepEqual( Stem("malicia"), "malici" );
	deepEqual( Stem("maligna"), "malign" );
	deepEqual( Stem("malignas"), "malign" );
	deepEqual( Stem("malignidad"), "malign" );
	deepEqual( Stem("maligno"), "malign" );
	deepEqual( Stem("malinche"), "malinch" );
	deepEqual( Stem("malinchista"), "malinch" );
	deepEqual( Stem("malintencionada"), "malintencion" );
	deepEqual( Stem("malla"), "mall" );
	deepEqual( Stem("mallas"), "mall" );
	deepEqual( Stem("malo"), "mal" );
	deepEqual( Stem("malograrlas"), "malogr" );
	deepEqual( Stem("malos"), "mal" );
	deepEqual( Stem("malta"), "malt" );
	deepEqual( Stem("maltratado"), "maltrat" );
	deepEqual( Stem("maltratados"), "maltrat" );
	deepEqual( Stem("maltrato"), "maltrat" );
	deepEqual( Stem("maltrecha"), "maltrech" );
	deepEqual( Stem("malva"), "malv" );
	deepEqual( Stem("malvada"), "malv" );
	deepEqual( Stem("malvavisco"), "malvavisc" );
	deepEqual( Stem("malversación"), "malvers" );
	deepEqual( Stem("malversaciones"), "malvers" );
	deepEqual( Stem("malvivientes"), "malvivient" );
	deepEqual( Stem("mamá"), "mam" );
	deepEqual( Stem("mamás"), "mamas" );
	deepEqual( Stem("mamíferos"), "mamifer" );
	deepEqual( Stem("mamilas"), "mamil" );
	deepEqual( Stem("mamparas"), "mamp" );
	deepEqual( Stem("maña"), "mañ" );
	deepEqual( Stem("maná"), "man" );
	deepEqual( Stem("management"), "management" );
	deepEqual( Stem("mánager"), "manag" );
	deepEqual( Stem("managers"), "managers" );
	deepEqual( Stem("mañana"), "mañan" );
	deepEqual( Stem("mañanas"), "mañan" );
	deepEqual( Stem("manazos"), "manaz" );
	deepEqual( Stem("mancha"), "manch" );
	deepEqual( Stem("manchada"), "manch" );
	deepEqual( Stem("manchar"), "manch" );
	deepEqual( Stem("manchas"), "manch" );
	deepEqual( Stem("mancillados"), "mancill" );
	deepEqual( Stem("mancomunada"), "mancomun" );
	deepEqual( Stem("mancuso"), "mancus" );
	deepEqual( Stem("manda"), "mand" );
	deepEqual( Stem("mandadas"), "mand" );
	deepEqual( Stem("mandado"), "mand" );
	deepEqual( Stem("mandamiento"), "mandamient" );
	deepEqual( Stem("mandamientos"), "mandamient" );
	deepEqual( Stem("mandamos"), "mand" );
	deepEqual( Stem("mandan"), "mand" );
	deepEqual( Stem("mandar"), "mand" );
	deepEqual( Stem("mandará"), "mand" );
	deepEqual( Stem("mandaríamos"), "mand" );
	deepEqual( Stem("mandarinas"), "mandarin" );
	deepEqual( Stem("mandarlas"), "mand" );
	deepEqual( Stem("mandarlo"), "mand" );
	deepEqual( Stem("mandaron"), "mand" );
	deepEqual( Stem("mandatario"), "mandatari" );
	deepEqual( Stem("mandatarios"), "mandatari" );
	deepEqual( Stem("mandato"), "mandat" );
	deepEqual( Stem("mandatos"), "mandat" );
	deepEqual( Stem("manden"), "mand" );
	deepEqual( Stem("mandíbula"), "mandibul" );
	deepEqual( Stem("mandíbulas"), "mandibul" );
	deepEqual( Stem("mandilones"), "mandilon" );
	deepEqual( Stem("mando"), "mand" );
	deepEqual( Stem("mandó"), "mand" );
	deepEqual( Stem("mandos"), "mand" );
	deepEqual( Stem("mandril"), "mandril" );
	deepEqual( Stem("maneja"), "manej" );
	deepEqual( Stem("manejaba"), "manej" );
	deepEqual( Stem("manejable"), "manej" );
	deepEqual( Stem("manejada"), "manej" );
	deepEqual( Stem("manejadas"), "manej" );
	deepEqual( Stem("manejado"), "manej" );
	deepEqual( Stem("manejador"), "manej" );
	deepEqual( Stem("manejadores"), "manej" );
	deepEqual( Stem("manejados"), "manej" );
	deepEqual( Stem("manejamos"), "manej" );
	deepEqual( Stem("manejan"), "manej" );
	deepEqual( Stem("manejando"), "manej" );
	deepEqual( Stem("manejar"), "manej" );
	deepEqual( Stem("manejará"), "manej" );
	deepEqual( Stem("manejaron"), "manej" );
	deepEqual( Stem("manejarse"), "manej" );
	deepEqual( Stem("maneje"), "manej" );
	deepEqual( Stem("manejen"), "manej" );
	deepEqual( Stem("manejes"), "manej" );
	deepEqual( Stem("manejo"), "manej" );
	deepEqual( Stem("manejó"), "manej" );
	deepEqual( Stem("manejos"), "manej" );
	deepEqual( Stem("manente"), "manent" );
	deepEqual( Stem("manera"), "maner" );
	deepEqual( Stem("maneras"), "maner" );
	deepEqual( Stem("manga"), "mang" );
	deepEqual( Stem("manganas"), "mangan" );
	deepEqual( Stem("mangas"), "mang" );
	deepEqual( Stem("manglares"), "manglar" );
	deepEqual( Stem("manguera"), "manguer" );
	deepEqual( Stem("manhattan"), "manhatt" );
	deepEqual( Stem("manía"), "man" );
	deepEqual( Stem("maniatar"), "maniat" );
	deepEqual( Stem("manieristas"), "manier" );
	deepEqual( Stem("manifestaban"), "manifest" );
	deepEqual( Stem("manifestación"), "manifest" );
	deepEqual( Stem("manifestaciones"), "manifest" );
	deepEqual( Stem("manifestada"), "manifest" );
	deepEqual( Stem("manifestadas"), "manifest" );
	deepEqual( Stem("manifestado"), "manifest" );
	deepEqual( Stem("manifestantes"), "manifest" );
	deepEqual( Stem("manifestar"), "manifest" );
	deepEqual( Stem("manifestaran"), "manifest" );
	deepEqual( Stem("manifestaron"), "manifest" );
	deepEqual( Stem("manifestarse"), "manifest" );
	deepEqual( Stem("manifestó"), "manifest" );
	deepEqual( Stem("manifiesta"), "manifiest" );
	deepEqual( Stem("manifiesto"), "manifiest" );
	deepEqual( Stem("manifold"), "manifold" );
	deepEqual( Stem("manila"), "manil" );
	deepEqual( Stem("maniobra"), "maniobr" );
	deepEqual( Stem("maniobras"), "maniobr" );
	deepEqual( Stem("manipulación"), "manipul" );
	deepEqual( Stem("manipulado"), "manipul" );
	deepEqual( Stem("manipular"), "manipul" );
	deepEqual( Stem("manita"), "manit" );
	deepEqual( Stem("manjar"), "manj" );
	deepEqual( Stem("manjarrez"), "manjarrez" );
	deepEqual( Stem("manneck"), "manneck" );
	deepEqual( Stem("mano"), "man" );
	deepEqual( Stem("manolita"), "manolit" );
	deepEqual( Stem("manolo"), "manol" );
	deepEqual( Stem("manos"), "man" );
	deepEqual( Stem("mañosamente"), "mañ" );
	deepEqual( Stem("manotas"), "manot" );
	deepEqual( Stem("manrique"), "manriqu" );
	deepEqual( Stem("manríquez"), "manriquez" );
	deepEqual( Stem("mansedumbre"), "mansedumbr" );
	deepEqual( Stem("mansión"), "mansion" );
	deepEqual( Stem("mansiones"), "mansion" );
	deepEqual( Stem("manso"), "mans" );
	deepEqual( Stem("mansos"), "mans" );
	deepEqual( Stem("mansur"), "mansur" );
	deepEqual( Stem("mantas"), "mant" );
	deepEqual( Stem("mantendrá"), "mantendr" );
	deepEqual( Stem("mantenemos"), "manten" );
	deepEqual( Stem("mantener"), "manten" );
	deepEqual( Stem("mantenerlas"), "manten" );
	deepEqual( Stem("mantenerlo"), "manten" );
	deepEqual( Stem("mantenerlos"), "manten" );
	deepEqual( Stem("mantenerme"), "manten" );
	deepEqual( Stem("mantenernos"), "manten" );
	deepEqual( Stem("mantenerse"), "manten" );
	deepEqual( Stem("mantenga"), "manteng" );
	deepEqual( Stem("mantengan"), "manteng" );
	deepEqual( Stem("mantenía"), "manten" );
	deepEqual( Stem("mantenidas"), "manten" );
	deepEqual( Stem("mantenido"), "manten" );
	deepEqual( Stem("manteniendo"), "manten" );
	deepEqual( Stem("manteniéndose"), "manten" );
	deepEqual( Stem("mantenimiento"), "manten" );
	deepEqual( Stem("mantiene"), "mantien" );
	deepEqual( Stem("mantienen"), "mantien" );
	deepEqual( Stem("manto"), "mant" );
	deepEqual( Stem("mantuvieron"), "mantuv" );
	deepEqual( Stem("mantuvo"), "mantuv" );
	deepEqual( Stem("manu"), "manu" );
	deepEqual( Stem("manual"), "manual" );
	deepEqual( Stem("manuales"), "manual" );
	deepEqual( Stem("manualidades"), "manual" );
	deepEqual( Stem("manuel"), "manuel" );
	deepEqual( Stem("manufactura"), "manufactur" );
	deepEqual( Stem("manufacturar"), "manufactur" );
	deepEqual( Stem("manufacturera"), "manufacturer" );
	deepEqual( Stem("manufactureros"), "manufacturer" );
	deepEqual( Stem("many"), "many" );
	deepEqual( Stem("manzana"), "manzan" );
	deepEqual( Stem("manzanas"), "manzan" );
	deepEqual( Stem("manzanillo"), "manzanill" );
	deepEqual( Stem("maoísta"), "maoist" );
	deepEqual( Stem("maoístas"), "maoist" );
	deepEqual( Stem("mapa"), "map" );
	deepEqual( Stem("mapas"), "map" );
	deepEqual( Stem("mapinfo"), "mapinf" );
	deepEqual( Stem("maqueta"), "maquet" );
	deepEqual( Stem("maquilada"), "maquil" );
	deepEqual( Stem("maquilador"), "maquil" );
	deepEqual( Stem("maquiladora"), "maquil" );
	deepEqual( Stem("maquiladoras"), "maquil" );
	deepEqual( Stem("maquilados"), "maquil" );
	deepEqual( Stem("maquilas"), "maquil" );
	deepEqual( Stem("maquillado"), "maquill" );
	deepEqual( Stem("maquillaje"), "maquillaj" );
	deepEqual( Stem("maquillarlas"), "maquill" );
	deepEqual( Stem("máquina"), "maquin" );
	deepEqual( Stem("maquinaria"), "maquinari" );
	deepEqual( Stem("maquinas"), "maquin" );
	deepEqual( Stem("máquinas"), "maquin" );
	deepEqual( Stem("maquinista"), "maquin" );
	deepEqual( Stem("mar"), "mar" );
	deepEqual( Stem("mara"), "mar" );
	deepEqual( Stem("maradona"), "maradon" );
	deepEqual( Stem("maraldo"), "marald" );
	deepEqual( Stem("marasmo"), "marasm" );
	deepEqual( Stem("maratón"), "maraton" );
	deepEqual( Stem("maravilla"), "maravill" );
	deepEqual( Stem("maravillando"), "maravill" );
	deepEqual( Stem("maravillosa"), "maravill" );
	deepEqual( Stem("maravillosamente"), "maravill" );
	deepEqual( Stem("maravillosas"), "maravill" );
	deepEqual( Stem("maravillosos"), "maravill" );
	deepEqual( Stem("marc"), "marc" );
	deepEqual( Stem("marca"), "marc" );
	deepEqual( Stem("marcaba"), "marc" );
	deepEqual( Stem("marcación"), "marcacion" );
	deepEqual( Stem("marcada"), "marc" );
	deepEqual( Stem("marcadas"), "marc" );
	deepEqual( Stem("marcado"), "marc" );
	deepEqual( Stem("marcador"), "marcador" );
	deepEqual( Stem("marcadores"), "marcador" );
	deepEqual( Stem("marcan"), "marc" );
	deepEqual( Stem("marcando"), "marc" );
	deepEqual( Stem("marcar"), "marc" );
	deepEqual( Stem("marcará"), "marc" );
	deepEqual( Stem("marcaron"), "marc" );
	deepEqual( Stem("marcas"), "marc" );
	deepEqual( Stem("marcela"), "marcel" );
	deepEqual( Stem("marcelino"), "marcelin" );
	deepEqual( Stem("marcelo"), "marcel" );
	deepEqual( Stem("marcha"), "march" );
	deepEqual( Stem("marchado"), "march" );
	deepEqual( Stem("marchan"), "march" );
	deepEqual( Stem("marcharían"), "march" );
	deepEqual( Stem("marcharon"), "march" );
	deepEqual( Stem("marcharse"), "march" );
	deepEqual( Stem("marchas"), "march" );
	deepEqual( Stem("marche"), "march" );
	deepEqual( Stem("marchó"), "march" );
	deepEqual( Stem("marcial"), "marcial" );
	deepEqual( Stem("marciano"), "marcian" );
	deepEqual( Stem("marcio"), "marci" );
	deepEqual( Stem("marco"), "marc" );
	deepEqual( Stem("marcó"), "marc" );
	deepEqual( Stem("marcos"), "marc" );
	deepEqual( Stem("marcus"), "marcus" );
	deepEqual( Stem("marcusse"), "marcuss" );
	deepEqual( Stem("mareadas"), "mar" );
	deepEqual( Stem("maremoto"), "maremot" );
	deepEqual( Stem("mares"), "mar" );
	deepEqual( Stem("marfil"), "marfil" );
	deepEqual( Stem("marga"), "marg" );
	deepEqual( Stem("margáin"), "margain" );
	deepEqual( Stem("margaret"), "margaret" );
	deepEqual( Stem("margaretha"), "margareth" );
	deepEqual( Stem("margarita"), "margarit" );
	deepEqual( Stem("margen"), "marg" );
	deepEqual( Stem("márgen"), "marg" );
	deepEqual( Stem("margenes"), "margen" );
	deepEqual( Stem("margina"), "margin" );
	deepEqual( Stem("marginación"), "margin" );
	deepEqual( Stem("marginaciones"), "margin" );
	deepEqual( Stem("marginadas"), "margin" );
	deepEqual( Stem("marginados"), "margin" );
	deepEqual( Stem("marginal"), "marginal" );
	deepEqual( Stem("marginara"), "margin" );
	deepEqual( Stem("marginó"), "margin" );
	deepEqual( Stem("marguerite"), "marguerit" );
	deepEqual( Stem("margules"), "margul" );
	deepEqual( Stem("mari"), "mari" );
	deepEqual( Stem("maria"), "mari" );
	deepEqual( Stem("maría"), "mar" );
	deepEqual( Stem("mariachi"), "mariachi" );
	deepEqual( Stem("marian"), "mari" );
	deepEqual( Stem("mariana"), "marian" );
	deepEqual( Stem("marianas"), "marian" );
	deepEqual( Stem("mariani"), "mariani" );
	deepEqual( Stem("mariano"), "marian" );
	deepEqual( Stem("marianos"), "marian" );
	deepEqual( Stem("mariateguista"), "mariategu" );
	deepEqual( Stem("maribel"), "maribel" );
	deepEqual( Stem("maricela"), "maricel" );
	deepEqual( Stem("maridito"), "maridit" );
	deepEqual( Stem("marido"), "mar" );
	deepEqual( Stem("maridos"), "mar" );
	deepEqual( Stem("marie"), "mari" );
	deepEqual( Stem("mariela"), "mariel" );
	deepEqual( Stem("mariguana"), "mariguan" );
	deepEqual( Stem("marihuana"), "marihuan" );
	deepEqual( Stem("marijo"), "marij" );
	deepEqual( Stem("marilyn"), "marilyn" );
	deepEqual( Stem("marin"), "marin" );
	deepEqual( Stem("marín"), "marin" );
	deepEqual( Stem("marina"), "marin" );
	deepEqual( Stem("marinas"), "marin" );
	deepEqual( Stem("marinera"), "mariner" );
	deepEqual( Stem("marineros"), "mariner" );
	deepEqual( Stem("marino"), "marin" );
	deepEqual( Stem("marinos"), "marin" );
	deepEqual( Stem("mario"), "mari" );
	deepEqual( Stem("marion"), "marion" );
	deepEqual( Stem("marionetero"), "marioneter" );
	deepEqual( Stem("mariposas"), "marip" );
	deepEqual( Stem("mariscal"), "mariscal" );
	deepEqual( Stem("mariscales"), "mariscal" );
	deepEqual( Stem("marisma"), "marism" );
	deepEqual( Stem("marissa"), "mariss" );
	deepEqual( Stem("marita"), "marit" );
	deepEqual( Stem("marítima"), "maritim" );
	deepEqual( Stem("marítimo"), "maritim" );
	deepEqual( Stem("marketing"), "marketing" );
	deepEqual( Stem("marley"), "marley" );
	deepEqual( Stem("marlines"), "marlin" );
	deepEqual( Stem("marlon"), "marlon" );
	deepEqual( Stem("mármol"), "marmol" );
	deepEqual( Stem("marque"), "marqu" );
	deepEqual( Stem("marqués"), "marques" );
	deepEqual( Stem("marquesina"), "marquesin" );
	deepEqual( Stem("márquez"), "marquez" );
	deepEqual( Stem("marquis"), "marquis" );
	deepEqual( Stem("marranos"), "marran" );
	deepEqual( Stem("marsalis"), "marsalis" );
	deepEqual( Stem("marshal"), "marshal" );
	deepEqual( Stem("marshall"), "marshall" );
	deepEqual( Stem("mart"), "mart" );
	deepEqual( Stem("marte"), "mart" );
	deepEqual( Stem("martellotto"), "martellott" );
	deepEqual( Stem("martens"), "martens" );
	deepEqual( Stem("martes"), "mart" );
	deepEqual( Stem("martha"), "marth" );
	deepEqual( Stem("martí"), "mart" );
	deepEqual( Stem("martillo"), "martill" );
	deepEqual( Stem("martin"), "martin" );
	deepEqual( Stem("martín"), "martin" );
	deepEqual( Stem("martinez"), "martinez" );
	deepEqual( Stem("martínez"), "martinez" );
	deepEqual( Stem("martinica"), "martin" );
	deepEqual( Stem("martiniqués"), "martiniques" );
	deepEqual( Stem("mártires"), "martir" );
	deepEqual( Stem("martirio"), "martiri" );
	deepEqual( Stem("marv"), "marv" );
	deepEqual( Stem("marx"), "marx" );
	deepEqual( Stem("mary"), "mary" );
	deepEqual( Stem("maryland"), "maryland" );
	deepEqual( Stem("marzo"), "marz" );
	deepEqual( Stem("mas"), "mas" );
	deepEqual( Stem("más"), "mas" );
	deepEqual( Stem("masa"), "mas" );
	deepEqual( Stem("masaaki"), "masaaki" );
	deepEqual( Stem("masacre"), "masacr" );
	deepEqual( Stem("masakre"), "masakr" );
	deepEqual( Stem("masas"), "mas" );
	deepEqual( Stem("mascadas"), "masc" );
	deepEqual( Stem("máscara"), "masc" );
	deepEqual( Stem("máscaras"), "masc" );
	deepEqual( Stem("mascota"), "mascot" );
	deepEqual( Stem("mascotas"), "mascot" );
	deepEqual( Stem("masculina"), "masculin" );
	deepEqual( Stem("masculino"), "masculin" );
	deepEqual( Stem("masiva"), "masiv" );
	deepEqual( Stem("masivamente"), "masiv" );
	deepEqual( Stem("masivas"), "masiv" );
	deepEqual( Stem("masivo"), "masiv" );
	deepEqual( Stem("masivos"), "masiv" );
	deepEqual( Stem("masoquismo"), "masoqu" );
	deepEqual( Stem("mass"), "mass" );
	deepEqual( Stem("massa"), "mass" );
	deepEqual( Stem("massacessi"), "massacessi" );
	deepEqual( Stem("massachusetts"), "massachusetts" );
	deepEqual( Stem("massachussets"), "massachussets" );
	deepEqual( Stem("massachussetts"), "massachussetts" );
	deepEqual( Stem("massieu"), "massieu" );
	deepEqual( Stem("masso"), "mass" );
	deepEqual( Stem("masterd"), "masterd" );
	deepEqual( Stem("masturbación"), "masturb" );
	deepEqual( Stem("mata"), "mat" );
	deepEqual( Stem("matado"), "mat" );
	deepEqual( Stem("matador"), "matador" );
	deepEqual( Stem("matadores"), "matador" );
	deepEqual( Stem("matamoros"), "matamor" );
	deepEqual( Stem("matando"), "mat" );
	deepEqual( Stem("matanzas"), "matanz" );
	deepEqual( Stem("matar"), "mat" );
	deepEqual( Stem("mátar"), "mat" );
	deepEqual( Stem("mataran"), "mat" );
	deepEqual( Stem("mataría"), "mat" );
	deepEqual( Stem("matarla"), "mat" );
	deepEqual( Stem("matarlo"), "mat" );
	deepEqual( Stem("matarme"), "mat" );
	deepEqual( Stem("matarnos"), "mat" );
	deepEqual( Stem("mataron"), "mat" );
	deepEqual( Stem("matarse"), "mat" );
	deepEqual( Stem("mate"), "mat" );
	deepEqual( Stem("matemática"), "matemat" );
	deepEqual( Stem("matemáticas"), "matemat" );
	deepEqual( Stem("matemático"), "matemat" );
	deepEqual( Stem("maten"), "mat" );
	deepEqual( Stem("mateo"), "mate" );
	deepEqual( Stem("mateos"), "mate" );
	deepEqual( Stem("mater"), "mat" );
	deepEqual( Stem("materia"), "materi" );
	deepEqual( Stem("material"), "material" );
	deepEqual( Stem("materiales"), "material" );
	deepEqual( Stem("materializarse"), "materializ" );
	deepEqual( Stem("materias"), "materi" );
	deepEqual( Stem("materna"), "matern" );
	deepEqual( Stem("maternal"), "maternal" );
	deepEqual( Stem("maternidad"), "matern" );
	deepEqual( Stem("matías"), "mat" );
	deepEqual( Stem("matices"), "matic" );
	deepEqual( Stem("matilde"), "matild" );
	deepEqual( Stem("matineé"), "matine" );
	deepEqual( Stem("matizada"), "matiz" );
	deepEqual( Stem("mató"), "mat" );
	deepEqual( Stem("matorrales"), "matorral" );
	deepEqual( Stem("matos"), "mat" );
	deepEqual( Stem("matriarcado"), "matriarc" );
	deepEqual( Stem("matrices"), "matric" );
	deepEqual( Stem("matrícula"), "matricul" );
	deepEqual( Stem("matriculen"), "matricul" );
	deepEqual( Stem("matrimonial"), "matrimonial" );
	deepEqual( Stem("matrimoniales"), "matrimonial" );
	deepEqual( Stem("matrimonio"), "matrimoni" );
	deepEqual( Stem("matrimonios"), "matrimoni" );
	deepEqual( Stem("matrix"), "matrix" );
	deepEqual( Stem("matriz"), "matriz" );
	deepEqual( Stem("matt"), "matt" );
	deepEqual( Stem("matthew"), "matthew" );
	deepEqual( Stem("matutina"), "matutin" );
	deepEqual( Stem("matutino"), "matutin" );
	deepEqual( Stem("maurice"), "mauric" );
	deepEqual( Stem("mauricio"), "maurici" );
	deepEqual( Stem("mauro"), "maur" );
	deepEqual( Stem("max"), "max" );
	deepEqual( Stem("maxi"), "maxi" );
	deepEqual( Stem("máxima"), "maxim" );
	deepEqual( Stem("máxime"), "maxim" );
	deepEqual( Stem("maximiliano"), "maximilian" );
	deepEqual( Stem("máximo"), "maxim" );
	deepEqual( Stem("máximos"), "max" );
	deepEqual( Stem("maximova"), "maximov" );
	deepEqual( Stem("may"), "may" );
	deepEqual( Stem("mayas"), "may" );
	deepEqual( Stem("mayela"), "mayel" );
	deepEqual( Stem("mayito"), "mayit" );
	deepEqual( Stem("mayo"), "may" );
	deepEqual( Stem("mayón"), "mayon" );
	deepEqual( Stem("mayonesa"), "mayones" );
	deepEqual( Stem("mayor"), "mayor" );
	deepEqual( Stem("mayoreo"), "mayore" );
	deepEqual( Stem("mayores"), "mayor" );
	deepEqual( Stem("mayoría"), "mayor" );
	deepEqual( Stem("mayorista"), "mayor" );
	deepEqual( Stem("mayoristas"), "mayor" );
	deepEqual( Stem("mayoritaria"), "mayoritari" );
	deepEqual( Stem("mayoritario"), "mayoritari" );
	deepEqual( Stem("mayoritarios"), "mayoritari" );
	deepEqual( Stem("mayos"), "may" );
	deepEqual( Stem("mayrán"), "mayran" );
	deepEqual( Stem("mays"), "mays" );
	deepEqual( Stem("mayúscula"), "mayuscul" );
	deepEqual( Stem("mayúsculas"), "mayuscul" );
	deepEqual( Stem("mayúsculo"), "mayuscul" );
	deepEqual( Stem("mayweather"), "mayweath" );
	deepEqual( Stem("maza"), "maz" );
	deepEqual( Stem("mazatlan"), "mazatl" );
	deepEqual( Stem("mazatlán"), "mazatlan" );
	deepEqual( Stem("mazatleco"), "mazatlec" );
	deepEqual( Stem("mc"), "mc" );
	deepEqual( Stem("mcallen"), "mcall" );
	deepEqual( Stem("mccann"), "mccann" );
	deepEqual( Stem("mcdonalds"), "mcdonalds" );
	deepEqual( Stem("mcdowell"), "mcdowell" );
	deepEqual( Stem("mcenroe"), "mcenro" );
	deepEqual( Stem("mcgregor"), "mcgregor" );
	deepEqual( Stem("mckesson"), "mckesson" );
	deepEqual( Stem("mcleod"), "mcleod" );
	deepEqual( Stem("md"), "md" );
	deepEqual( Stem("me"), "me" );
	deepEqual( Stem("mea"), "mea" );
	deepEqual( Stem("meat"), "meat" );
	deepEqual( Stem("mecánica"), "mecan" );
	deepEqual( Stem("mecánico"), "mecan" );
	deepEqual( Stem("mecánicos"), "mecan" );
	deepEqual( Stem("mecanismo"), "mecan" );
	deepEqual( Stem("mecanismos"), "mecan" );
	deepEqual( Stem("mecenazgo"), "mecenazg" );
	deepEqual( Stem("medalla"), "medall" );
	deepEqual( Stem("medallas"), "medall" );
	deepEqual( Stem("medallista"), "medall" );
	deepEqual( Stem("medallón"), "medallon" );
	deepEqual( Stem("medellín"), "medellin" );
	deepEqual( Stem("media"), "medi" );
	deepEqual( Stem("mediación"), "mediacion" );
	deepEqual( Stem("mediadora"), "mediador" );
	deepEqual( Stem("mediados"), "medi" );
	deepEqual( Stem("mediahermana"), "mediaherman" );
	deepEqual( Stem("mediana"), "median" );
	deepEqual( Stem("medianas"), "median" );
	deepEqual( Stem("mediano"), "median" );
	deepEqual( Stem("medianoche"), "medianoch" );
	deepEqual( Stem("medianos"), "median" );
	deepEqual( Stem("mediante"), "mediant" );
	deepEqual( Stem("medias"), "medi" );
	deepEqual( Stem("mediata"), "mediat" );
	deepEqual( Stem("médica"), "medic" );
	deepEqual( Stem("medical"), "medical" );
	deepEqual( Stem("medicamentos"), "medicament" );
	deepEqual( Stem("médicas"), "medic" );
	deepEqual( Stem("medicina"), "medicin" );
	deepEqual( Stem("medicinales"), "medicinal" );
	deepEqual( Stem("medicinas"), "medicin" );
	deepEqual( Stem("medición"), "medicion" );
	deepEqual( Stem("mediciones"), "medicion" );
	deepEqual( Stem("médico"), "medic" );
	deepEqual( Stem("médicos"), "medic" );
	deepEqual( Stem("medida"), "med" );
	deepEqual( Stem("medidas"), "med" );
	deepEqual( Stem("medido"), "med" );
	deepEqual( Stem("medievales"), "medieval" );
	deepEqual( Stem("medina"), "medin" );
	deepEqual( Stem("medio"), "medi" );
	deepEqual( Stem("mediocampista"), "mediocamp" );
	deepEqual( Stem("mediocampistas"), "mediocamp" );
	deepEqual( Stem("mediocre"), "mediocr" );
	deepEqual( Stem("mediocres"), "mediocr" );
	deepEqual( Stem("mediocridad"), "mediocr" );
	deepEqual( Stem("mediodía"), "mediod" );
	deepEqual( Stem("mediohermano"), "medioherman" );
	deepEqual( Stem("medios"), "medi" );
	deepEqual( Stem("medir"), "med" );
	deepEqual( Stem("medirá"), "med" );
	deepEqual( Stem("medirán"), "med" );
	deepEqual( Stem("medirse"), "med" );
	deepEqual( Stem("meditación"), "medit" );
	deepEqual( Stem("meditado"), "medit" );
	deepEqual( Stem("medite"), "medit" );
	deepEqual( Stem("mediterránea"), "mediterrane" );
	deepEqual( Stem("mediterráneo"), "mediterrane" );
	deepEqual( Stem("medrano"), "medran" );
	deepEqual( Stem("medugorie"), "medugori" );
	deepEqual( Stem("médula"), "medul" );
	deepEqual( Stem("medusia"), "medusi" );
	deepEqual( Stem("mefistófeles"), "mefistofel" );
	deepEqual( Stem("megabits"), "megabits" );
	deepEqual( Stem("megabytes"), "megabyt" );
	deepEqual( Stem("megahertz"), "megahertz" );
	deepEqual( Stem("mejía"), "mej" );
	deepEqual( Stem("mejilla"), "mejill" );
	deepEqual( Stem("mejillas"), "mejill" );
	deepEqual( Stem("mejor"), "mejor" );
	deepEqual( Stem("mejora"), "mejor" );
	deepEqual( Stem("mejorada"), "mejor" );
	deepEqual( Stem("mejorado"), "mejor" );
	deepEqual( Stem("mejorados"), "mejor" );
	deepEqual( Stem("mejoramiento"), "mejor" );
	deepEqual( Stem("mejoran"), "mejor" );
	deepEqual( Stem("mejorando"), "mejor" );
	deepEqual( Stem("mejorar"), "mejor" );
	deepEqual( Stem("mejorará"), "mejor" );
	deepEqual( Stem("mejoraran"), "mejor" );
	deepEqual( Stem("mejorarle"), "mejor" );
	deepEqual( Stem("mejorarlos"), "mejor" );
	deepEqual( Stem("mejoras"), "mejor" );
	deepEqual( Stem("mejore"), "mejor" );
	deepEqual( Stem("mejores"), "mejor" );
	deepEqual( Stem("mejoría"), "mejor" );
	deepEqual( Stem("mejrar"), "mejr" );
	deepEqual( Stem("melanoma"), "melanom" );
	deepEqual( Stem("melchor"), "melchor" );
	deepEqual( Stem("melé"), "mel" );
	deepEqual( Stem("meléndez"), "melendez" );
	deepEqual( Stem("melgar"), "melg" );
	deepEqual( Stem("melian"), "meli" );
	deepEqual( Stem("melisa"), "melis" );
	deepEqual( Stem("mella"), "mell" );
	deepEqual( Stem("mellizos"), "melliz" );
	deepEqual( Stem("mello"), "mell" );
	deepEqual( Stem("melodía"), "melod" );
	deepEqual( Stem("melódica"), "melod" );
	deepEqual( Stem("melón"), "melon" );
	deepEqual( Stem("melquiades"), "melquiad" );
	deepEqual( Stem("membretado"), "membret" );
	deepEqual( Stem("membrete"), "membret" );
	deepEqual( Stem("memo"), "mem" );
	deepEqual( Stem("memorable"), "memor" );
	deepEqual( Stem("memorándum"), "memorandum" );
	deepEqual( Stem("memoria"), "memori" );
	deepEqual( Stem("memorias"), "memori" );
	deepEqual( Stem("memorizar"), "memoriz" );
	deepEqual( Stem("mena"), "men" );
	deepEqual( Stem("ménagier"), "menagi" );
	deepEqual( Stem("menchú"), "menchu" );
	deepEqual( Stem("mención"), "mencion" );
	deepEqual( Stem("menciona"), "mencion" );
	deepEqual( Stem("mencionada"), "mencion" );
	deepEqual( Stem("mencionadas"), "mencion" );
	deepEqual( Stem("mencionado"), "mencion" );
	deepEqual( Stem("mencionados"), "mencion" );
	deepEqual( Stem("mencionan"), "mencion" );
	deepEqual( Stem("mencionar"), "mencion" );
	deepEqual( Stem("mencionaré"), "mencion" );
	deepEqual( Stem("mencionaremos"), "mencion" );
	deepEqual( Stem("mencionaron"), "mencion" );
	deepEqual( Stem("mencione"), "mencion" );
	deepEqual( Stem("mencioné"), "mencion" );
	deepEqual( Stem("menciones"), "mencion" );
	deepEqual( Stem("mencionó"), "mencion" );
	deepEqual( Stem("méndez"), "mendez" );
	deepEqual( Stem("mendigo"), "mendig" );
	deepEqual( Stem("mendiomas"), "mendiom" );
	deepEqual( Stem("mendoza"), "mendoz" );
	deepEqual( Stem("menem"), "menem" );
	deepEqual( Stem("meneses"), "menes" );
	deepEqual( Stem("mengano"), "mengan" );
	deepEqual( Stem("menguadas"), "mengu" );
	deepEqual( Stem("meninges"), "mening" );
	deepEqual( Stem("meningitis"), "meningitis" );
	deepEqual( Stem("meningoencefalitis"), "meningoencefalitis" );
	deepEqual( Stem("menopausia"), "menopausi" );
	deepEqual( Stem("menopáusica"), "menopaus" );
	deepEqual( Stem("menor"), "menor" );
	deepEqual( Stem("menores"), "menor" );
	deepEqual( Stem("menos"), "men" );
	deepEqual( Stem("menosprecian"), "menospreci" );
	deepEqual( Stem("menospreciarnos"), "menospreci" );
	deepEqual( Stem("menotti"), "menotti" );
	deepEqual( Stem("mensaje"), "mensaj" );
	deepEqual( Stem("mensajería"), "mensaj" );
	deepEqual( Stem("mensajes"), "mensaj" );
	deepEqual( Stem("mensual"), "mensual" );
	deepEqual( Stem("mensuales"), "mensual" );
	deepEqual( Stem("mensualidades"), "mensual" );
	deepEqual( Stem("mensualmente"), "mensual" );
	deepEqual( Stem("menta"), "ment" );
	deepEqual( Stem("mental"), "mental" );
	deepEqual( Stem("mentales"), "mental" );
	deepEqual( Stem("mentalidad"), "mental" );
	deepEqual( Stem("mentalidades"), "mental" );
	deepEqual( Stem("mente"), "ment" );
	deepEqual( Stem("mentha"), "menth" );
	deepEqual( Stem("mentimos"), "ment" );
	deepEqual( Stem("mentir"), "ment" );
	deepEqual( Stem("mentiras"), "mentir" );
	deepEqual( Stem("mentirosas"), "mentir" );
	deepEqual( Stem("mentiroso"), "mentir" );
	deepEqual( Stem("mentor"), "mentor" );
	deepEqual( Stem("mentores"), "mentor" );
	deepEqual( Stem("menú"), "menu" );
	deepEqual( Stem("menudeo"), "menude" );
	deepEqual( Stem("menudo"), "menud" );
	deepEqual( Stem("mera"), "mer" );
	deepEqual( Stem("meramente"), "mer" );
	deepEqual( Stem("mercadear"), "mercad" );
	deepEqual( Stem("mercadeo"), "mercade" );
	deepEqual( Stem("mercader"), "mercad" );
	deepEqual( Stem("mercaderes"), "mercader" );
	deepEqual( Stem("mercado"), "merc" );
	deepEqual( Stem("mercados"), "merc" );
	deepEqual( Stem("mercadotecnia"), "mercadotecni" );
	deepEqual( Stem("mercadotencia"), "mercadotent" );
	deepEqual( Stem("mercancía"), "mercanc" );
	deepEqual( Stem("mercancías"), "mercanc" );
	deepEqual( Stem("mercante"), "mercant" );
	deepEqual( Stem("mercantes"), "mercant" );
	deepEqual( Stem("mercantil"), "mercantil" );
	deepEqual( Stem("mercantiles"), "mercantil" );
	deepEqual( Stem("mercantilista"), "mercantil" );
	deepEqual( Stem("mercedes"), "merced" );
	deepEqual( Stem("mercomún"), "mercomun" );
	deepEqual( Stem("mercosur"), "mercosur" );
	deepEqual( Stem("mercurio"), "mercuri" );
	deepEqual( Stem("merece"), "merec" );
	deepEqual( Stem("merecedor"), "merecedor" );
	deepEqual( Stem("merecedores"), "merecedor" );
	deepEqual( Stem("merecen"), "merec" );
	deepEqual( Stem("merecerlo"), "merec" );
	deepEqual( Stem("merecía"), "merec" );
	deepEqual( Stem("merecida"), "merec" );
	deepEqual( Stem("merecido"), "merec" );
	deepEqual( Stem("merecimientos"), "merec" );
	deepEqual( Stem("mereció"), "merec" );
	deepEqual( Stem("merengue"), "mereng" );
	deepEqual( Stem("merengues"), "mereng" );
	deepEqual( Stem("merezcan"), "merezc" );
	deepEqual( Stem("merge"), "merg" );
	deepEqual( Stem("mérida"), "mer" );
	deepEqual( Stem("mérito"), "merit" );
	deepEqual( Stem("meritorio"), "meritori" );
	deepEqual( Stem("méritos"), "merit" );
	deepEqual( Stem("merlene"), "merlen" );
	deepEqual( Stem("merlis"), "merlis" );
	deepEqual( Stem("merman"), "merm" );
	deepEqual( Stem("mermeladas"), "mermel" );
	deepEqual( Stem("mero"), "mer" );
	deepEqual( Stem("merrill"), "merrill" );
	deepEqual( Stem("mes"), "mes" );
	deepEqual( Stem("mesa"), "mes" );
	deepEqual( Stem("mesas"), "mes" );
	deepEqual( Stem("mese"), "mes" );
	deepEqual( Stem("meseros"), "meser" );
	deepEqual( Stem("meses"), "mes" );
	deepEqual( Stem("mesiánica"), "mesian" );
	deepEqual( Stem("mesilla"), "mesill" );
	deepEqual( Stem("mesoamericana"), "mesoamerican" );
	deepEqual( Stem("mesoamericanas"), "mesoamerican" );
	deepEqual( Stem("mesoamericano"), "mesoamerican" );
	deepEqual( Stem("mesoamericanos"), "mesoamerican" );
	deepEqual( Stem("mestre"), "mestr" );
	deepEqual( Stem("meta"), "met" );
	deepEqual( Stem("metabolismo"), "metabol" );
	deepEqual( Stem("metafísica"), "metafis" );
	deepEqual( Stem("metáfora"), "metafor" );
	deepEqual( Stem("metal"), "metal" );
	deepEqual( Stem("metalero"), "metaler" );
	deepEqual( Stem("metales"), "metal" );
	deepEqual( Stem("metálica"), "metal" );
	deepEqual( Stem("metálico"), "metal" );
	deepEqual( Stem("metálicos"), "metal" );
	deepEqual( Stem("metallica"), "metall" );
	deepEqual( Stem("metamucil"), "metamucil" );
	deepEqual( Stem("metan"), "met" );
	deepEqual( Stem("metano"), "metan" );
	deepEqual( Stem("metas"), "met" );
	deepEqual( Stem("metate"), "metat" );
	deepEqual( Stem("mete"), "met" );
	deepEqual( Stem("meten"), "met" );
	deepEqual( Stem("meteorito"), "meteorit" );
	deepEqual( Stem("meteorológica"), "meteorolog" );
	deepEqual( Stem("meteorológico"), "meteorolog" );
	deepEqual( Stem("meteorológicos"), "meteorolog" );
	deepEqual( Stem("meteoros"), "meteor" );
	deepEqual( Stem("meter"), "met" );
	deepEqual( Stem("meterle"), "met" );
	deepEqual( Stem("meterlo"), "met" );
	deepEqual( Stem("meternos"), "met" );
	deepEqual( Stem("meterse"), "met" );
	deepEqual( Stem("metí"), "met" );
	deepEqual( Stem("metían"), "met" );
	deepEqual( Stem("meticulosamente"), "meticul" );
	deepEqual( Stem("metido"), "met" );
	deepEqual( Stem("metidos"), "met" );
	deepEqual( Stem("metiendo"), "met" );
	deepEqual( Stem("metiera"), "met" );
	deepEqual( Stem("metió"), "met" );
	deepEqual( Stem("metodista"), "metod" );
	deepEqual( Stem("método"), "metod" );
	deepEqual( Stem("metodología"), "metodolog" );
	deepEqual( Stem("metodologías"), "metodolog" );
	deepEqual( Stem("métodos"), "metod" );
	deepEqual( Stem("metrallas"), "metrall" );
	deepEqual( Stem("metralleta"), "metrallet" );
	deepEqual( Stem("metralletas"), "metrallet" );
	deepEqual( Stem("métricas"), "metric" );
	deepEqual( Stem("metro"), "metr" );
	deepEqual( Stem("metrología"), "metrolog" );
	deepEqual( Stem("metrópoli"), "metropoli" );
	deepEqual( Stem("metropolitana"), "metropolitan" );
	deepEqual( Stem("metropolitano"), "metropolitan" );
	deepEqual( Stem("metropolitanos"), "metropolitan" );
	deepEqual( Stem("metrorrey"), "metrorrey" );
	deepEqual( Stem("metros"), "metr" );
	deepEqual( Stem("metternich"), "metternich" );
	deepEqual( Stem("metzelaars"), "metzelaars" );
	deepEqual( Stem("mexica"), "mexic" );
	deepEqual( Stem("mexicali"), "mexicali" );
	deepEqual( Stem("mexican"), "mexic" );
	deepEqual( Stem("mexicana"), "mexican" );
	deepEqual( Stem("mexicanas"), "mexican" );
	deepEqual( Stem("mexicanidad"), "mexican" );
	deepEqual( Stem("mexicanismo"), "mexican" );
	deepEqual( Stem("mexicano"), "mexican" );
	deepEqual( Stem("mexicanos"), "mexican" );
	deepEqual( Stem("mexicas"), "mexic" );
	deepEqual( Stem("mexicayótl"), "mexicayotl" );
	deepEqual( Stem("mexico"), "mexic" );
	deepEqual( Stem("méxico"), "mexic" );
	deepEqual( Stem("méxicoestadounidense"), "mexicoestadounidens" );
	deepEqual( Stem("méxiconorteamericanos"), "mexiconorteamerican" );
	deepEqual( Stem("méxicoquerétaro"), "mexicoqueretar" );
	deepEqual( Stem("mexinox"), "mexinox" );
	deepEqual( Stem("mexiquense"), "mexiquens" );
	deepEqual( Stem("meyer"), "mey" );
	deepEqual( Stem("meza"), "mez" );
	deepEqual( Stem("mezcal"), "mezcal" );
	deepEqual( Stem("mezcla"), "mezcl" );
	deepEqual( Stem("mezclada"), "mezcl" );
	deepEqual( Stem("mezcladas"), "mezcl" );
	deepEqual( Stem("mezclado"), "mezcl" );
	deepEqual( Stem("mezclar"), "mezcl" );
	deepEqual( Stem("mezclilla"), "mezclill" );
	deepEqual( Stem("mezclo"), "mezcl" );
	deepEqual( Stem("mezquinas"), "mezquin" );
	deepEqual( Stem("mezquino"), "mezquin" );
	deepEqual( Stem("mezquinos"), "mezquin" );
	deepEqual( Stem("mezquital"), "mezquital" );
	deepEqual( Stem("mg"), "mg" );
	deepEqual( Stem("mi"), "mi" );
	deepEqual( Stem("mí"), "mi" );
	deepEqual( Stem("mia"), "mia" );
	deepEqual( Stem("miami"), "miami" );
	deepEqual( Stem("mich"), "mich" );
	deepEqual( Stem("michael"), "michael" );
	deepEqual( Stem("michel"), "michel" );
	deepEqual( Stem("michelle"), "michell" );
	deepEqual( Stem("michoacán"), "michoacan" );
	deepEqual( Stem("michoacanazo"), "michoacanaz" );
	deepEqual( Stem("michoacano"), "michoacan" );
	deepEqual( Stem("michoacanos"), "michoacan" );
	deepEqual( Stem("mickey"), "mickey" );
	deepEqual( Stem("mico"), "mic" );
	deepEqual( Stem("micosis"), "micosis" );
	deepEqual( Stem("micro"), "micr" );
	deepEqual( Stem("microbus"), "microbus" );
	deepEqual( Stem("microbús"), "microbus" );
	deepEqual( Stem("microbuses"), "microbus" );
	deepEqual( Stem("microcomputadoras"), "microcomput" );
	deepEqual( Stem("microelectronics"), "microelectronics" );
	deepEqual( Stem("microempresa"), "microempres" );
	deepEqual( Stem("microempresario"), "microempresari" );
	deepEqual( Stem("microempresarios"), "microempresari" );
	deepEqual( Stem("microempresas"), "microempres" );
	deepEqual( Stem("micrófono"), "microfon" );
	deepEqual( Stem("microindustriales"), "microindustrial" );
	deepEqual( Stem("microprocesador"), "microproces" );
	deepEqual( Stem("micros"), "micr" );
	deepEqual( Stem("microsoft"), "microsoft" );
	deepEqual( Stem("microsystems"), "microsystems" );
	deepEqual( Stem("middletown"), "middletown" );
	deepEqual( Stem("mide"), "mid" );
	deepEqual( Stem("midieron"), "mid" );
	deepEqual( Stem("midió"), "mid" );
	deepEqual( Stem("mie"), "mie" );
	deepEqual( Stem("miedo"), "mied" );
	deepEqual( Stem("miedos"), "mied" );
	deepEqual( Stem("miel"), "miel" );
	deepEqual( Stem("mielenización"), "mieleniz" );
	deepEqual( Stem("miembro"), "miembr" );
	deepEqual( Stem("miembros"), "miembr" );
	deepEqual( Stem("mientan"), "mient" );
	deepEqual( Stem("miente"), "mient" );
	deepEqual( Stem("mientras"), "mientr" );
	deepEqual( Stem("mier"), "mier" );
	deepEqual( Stem("miercoles"), "miercol" );
	deepEqual( Stem("miércoles"), "miercol" );
	deepEqual( Stem("migajas"), "migaj" );
	deepEqual( Stem("migdalia"), "migdali" );
	deepEqual( Stem("mignón"), "mignon" );
	deepEqual( Stem("migración"), "migracion" );
	deepEqual( Stem("migraciones"), "migracion" );
	deepEqual( Stem("migrante"), "migrant" );
	deepEqual( Stem("miguel"), "miguel" );
	deepEqual( Stem("miguelito"), "miguelit" );
	deepEqual( Stem("mijail"), "mijail" );
	deepEqual( Stem("mijares"), "mijar" );
	deepEqual( Stem("mike"), "mik" );
	deepEqual( Stem("mil"), "mil" );
	deepEqual( Stem("milagro"), "milagr" );
	deepEqual( Stem("milagros"), "milagr" );
	deepEqual( Stem("milagrosos"), "milagr" );
	deepEqual( Stem("milan"), "mil" );
	deepEqual( Stem("milán"), "milan" );
	deepEqual( Stem("milanés"), "milanes" );
	deepEqual( Stem("mildred"), "mildr" );
	deepEqual( Stem("mile"), "mil" );
	deepEqual( Stem("milenios"), "mileni" );
	deepEqual( Stem("miles"), "mil" );
	deepEqual( Stem("milésimas"), "milesim" );
	deepEqual( Stem("mililitros"), "mililitr" );
	deepEqual( Stem("milímetros"), "milimetr" );
	deepEqual( Stem("milita"), "milit" );
	deepEqual( Stem("militan"), "milit" );
	deepEqual( Stem("militancia"), "milit" );
	deepEqual( Stem("militante"), "milit" );
	deepEqual( Stem("militantes"), "milit" );
	deepEqual( Stem("militar"), "milit" );
	deepEqual( Stem("militares"), "militar" );
	deepEqual( Stem("militarización"), "militariz" );
	deepEqual( Stem("militarizada"), "militariz" );
	deepEqual( Stem("milla"), "mill" );
	deepEqual( Stem("millar"), "mill" );
	deepEqual( Stem("millares"), "millar" );
	deepEqual( Stem("millas"), "mill" );
	deepEqual( Stem("miller"), "mill" );
	deepEqual( Stem("milli"), "milli" );
	deepEqual( Stem("millón"), "millon" );
	deepEqual( Stem("millonarias"), "millonari" );
	deepEqual( Stem("millonario"), "millonari" );
	deepEqual( Stem("millonarios"), "millonari" );
	deepEqual( Stem("millones"), "millon" );
	deepEqual( Stem("milmo"), "milm" );
	deepEqual( Stem("milton"), "milton" );
	deepEqual( Stem("mima"), "mim" );
	deepEqual( Stem("mimi"), "mimi" );
	deepEqual( Stem("mimí"), "mim" );
	deepEqual( Stem("mimiahuápam"), "mimiahuapam" );
	deepEqual( Stem("mímica"), "mimic" );
	deepEqual( Stem("min"), "min" );
	deepEqual( Stem("mina"), "min" );
	deepEqual( Stem("mindes"), "mind" );
	deepEqual( Stem("minera"), "miner" );
	deepEqual( Stem("mineral"), "mineral" );
	deepEqual( Stem("minerales"), "mineral" );
	deepEqual( Stem("mineros"), "miner" );
	deepEqual( Stem("minerva"), "minerv" );
	deepEqual( Stem("minesota"), "minesot" );
	deepEqual( Stem("mini"), "mini" );
	deepEqual( Stem("minibuses"), "minibus" );
	deepEqual( Stem("minicomputadoras"), "minicomput" );
	deepEqual( Stem("minicumbre"), "minicumbr" );
	deepEqual( Stem("minilab"), "minilab" );
	deepEqual( Stem("minima"), "minim" );
	deepEqual( Stem("mínima"), "minim" );
	deepEqual( Stem("mínimas"), "minim" );
	deepEqual( Stem("minimizando"), "minimiz" );
	deepEqual( Stem("minimizar"), "minimiz" );
	deepEqual( Stem("mínimo"), "minim" );
	deepEqual( Stem("mínimos"), "min" );
	deepEqual( Stem("ministerial"), "ministerial" );
	deepEqual( Stem("ministerio"), "ministeri" );
	deepEqual( Stem("ministro"), "ministr" );
	deepEqual( Stem("ministros"), "ministr" );
	deepEqual( Stem("minisubmarinos"), "minisubmarin" );
	deepEqual( Stem("minivolei"), "minivolei" );
	deepEqual( Stem("minivoleibol"), "minivoleibol" );
	deepEqual( Stem("minnesota"), "minnesot" );
	deepEqual( Stem("minor"), "minor" );
	deepEqual( Stem("minorías"), "minor" );
	deepEqual( Stem("minoristas"), "minor" );
	deepEqual( Stem("minoritaria"), "minoritari" );
	deepEqual( Stem("minoritarios"), "minoritari" );
	deepEqual( Stem("mintió"), "mint" );
	deepEqual( Stem("minton"), "minton" );
	deepEqual( Stem("mintonette"), "mintonett" );
	deepEqual( Stem("minuciosa"), "minuci" );
	deepEqual( Stem("minúsculos"), "minuscul" );
	deepEqual( Stem("minusvalía"), "minusval" );
	deepEqual( Stem("minusválidos"), "minusval" );
	deepEqual( Stem("minuta"), "minut" );
	deepEqual( Stem("minuto"), "minut" );
	deepEqual( Stem("minutos"), "minut" );
	deepEqual( Stem("mío"), "mio" );
	deepEqual( Stem("miocardio"), "miocardi" );
	deepEqual( Stem("miopía"), "miop" );
	deepEqual( Stem("míos"), "mios" );
	deepEqual( Stem("mira"), "mir" );
	deepEqual( Stem("miraba"), "mir" );
	deepEqual( Stem("mirada"), "mir" );
	deepEqual( Stem("miradita"), "miradit" );
	deepEqual( Stem("mirador"), "mirador" );
	deepEqual( Stem("miragoane"), "miragoan" );
	deepEqual( Stem("mírale"), "miral" );
	deepEqual( Stem("miramón"), "miramon" );
	deepEqual( Stem("miramontes"), "miramont" );
	deepEqual( Stem("miranda"), "mirand" );
	deepEqual( Stem("mirando"), "mir" );
	deepEqual( Stem("mirar"), "mir" );
	deepEqual( Stem("miras"), "mir" );
	deepEqual( Stem("miravalle"), "miravall" );
	deepEqual( Stem("mire"), "mir" );
	deepEqual( Stem("miré"), "mir" );
	deepEqual( Stem("mireles"), "mirel" );
	deepEqual( Stem("miren"), "mir" );
	deepEqual( Stem("mireya"), "mirey" );
	deepEqual( Stem("miriam"), "miriam" );
	deepEqual( Stem("mirielle"), "miriell" );
	deepEqual( Stem("miró"), "mir" );
	deepEqual( Stem("miroslava"), "miroslav" );
	deepEqual( Stem("mirren"), "mirr" );
	deepEqual( Stem("mis"), "mis" );
	deepEqual( Stem("misa"), "mis" );
	deepEqual( Stem("misas"), "mis" );
	deepEqual( Stem("miscelanea"), "miscelane" );
	deepEqual( Stem("miserables"), "miser" );
	deepEqual( Stem("miseria"), "miseri" );
	deepEqual( Stem("misericordiosos"), "misericordi" );
	deepEqual( Stem("mishima"), "mishim" );
	deepEqual( Stem("misión"), "mision" );
	deepEqual( Stem("misionero"), "misioner" );
	deepEqual( Stem("misiones"), "mision" );
	deepEqual( Stem("misma"), "mism" );
	deepEqual( Stem("mismas"), "mism" );
	deepEqual( Stem("mismo"), "mism" );
	deepEqual( Stem("mismos"), "mism" );
	deepEqual( Stem("miss"), "miss" );
	deepEqual( Stem("missael"), "missael" );
	deepEqual( Stem("missisipi"), "missisipi" );
	deepEqual( Stem("mississippi"), "mississippi" );
	deepEqual( Stem("missouri"), "missouri" );
	deepEqual( Stem("misterio"), "misteri" );
	deepEqual( Stem("misterios"), "misteri" );
	deepEqual( Stem("misteriosa"), "misteri" );
	deepEqual( Stem("misterioso"), "misteri" );
	deepEqual( Stem("místico"), "mistic" );
	deepEqual( Stem("mit"), "mit" );
	deepEqual( Stem("mitad"), "mit" );
	deepEqual( Stem("mitades"), "mitad" );
	deepEqual( Stem("mítica"), "mitic" );
	deepEqual( Stem("mítico"), "mitic" );
	deepEqual( Stem("mitigantes"), "mitig" );
	deepEqual( Stem("mitin"), "mitin" );
	deepEqual( Stem("mito"), "mit" );
	deepEqual( Stem("mitología"), "mitolog" );
	deepEqual( Stem("mitológico"), "mitolog" );
	deepEqual( Stem("mitos"), "mit" );
	deepEqual( Stem("mitotes"), "mitot" );
	deepEqual( Stem("mitras"), "mitr" );
	deepEqual( Stem("mitsukoshi"), "mitsukoshi" );
	deepEqual( Stem("mitterrand"), "mitterrand" );
	deepEqual( Stem("mitzy"), "mitzy" );
	deepEqual( Stem("mixtas"), "mixt" );
	deepEqual( Stem("mka"), "mka" );
	deepEqual( Stem("mnp"), "mnp" );
	deepEqual( Stem("moais"), "moais" );
	deepEqual( Stem("moaré"), "moar" );
	deepEqual( Stem("mobiliario"), "mobiliari" );
	deepEqual( Stem("mobutu"), "mobutu" );
	deepEqual( Stem("moca"), "moc" );
	deepEqual( Stem("mochila"), "mochil" );
	deepEqual( Stem("mochilas"), "mochil" );
	deepEqual( Stem("mochis"), "mochis" );
	deepEqual( Stem("moción"), "mocion" );
	deepEqual( Stem("moctezuma"), "moctezum" );
	deepEqual( Stem("moda"), "mod" );
	deepEqual( Stem("modales"), "modal" );
	deepEqual( Stem("modalidad"), "modal" );
	deepEqual( Stem("modalidades"), "modal" );
	deepEqual( Stem("modas"), "mod" );
	deepEqual( Stem("mode"), "mod" );
	deepEqual( Stem("modelo"), "model" );
	deepEqual( Stem("modelos"), "model" );
	deepEqual( Stem("módem"), "modem" );
	deepEqual( Stem("modera"), "moder" );
	deepEqual( Stem("moderación"), "moder" );
	deepEqual( Stem("moderada"), "moder" );
	deepEqual( Stem("moderado"), "moder" );
	deepEqual( Stem("moderados"), "moder" );
	deepEqual( Stem("moderna"), "modern" );
	deepEqual( Stem("modernas"), "modern" );
	deepEqual( Stem("modernicen"), "modernic" );
	deepEqual( Stem("modernidad"), "modern" );
	deepEqual( Stem("modernismo"), "modern" );
	deepEqual( Stem("modernización"), "moderniz" );
	deepEqual( Stem("modernizada"), "moderniz" );
	deepEqual( Stem("modernizador"), "moderniz" );
	deepEqual( Stem("modernizar"), "moderniz" );
	deepEqual( Stem("modernizarla"), "moderniz" );
	deepEqual( Stem("modernizarse"), "moderniz" );
	deepEqual( Stem("moderno"), "modern" );
	deepEqual( Stem("modernos"), "mod" );
	deepEqual( Stem("modesta"), "modest" );
	deepEqual( Stem("modestas"), "modest" );
	deepEqual( Stem("modestia"), "modesti" );
	deepEqual( Stem("modesto"), "modest" );
	deepEqual( Stem("modestos"), "modest" );
	deepEqual( Stem("modifica"), "modif" );
	deepEqual( Stem("modificación"), "modif" );
	deepEqual( Stem("modificaciones"), "modif" );
	deepEqual( Stem("modificada"), "modific" );
	deepEqual( Stem("modificadas"), "modific" );
	deepEqual( Stem("modificados"), "modific" );
	deepEqual( Stem("modificando"), "modific" );
	deepEqual( Stem("modificar"), "modific" );
	deepEqual( Stem("modificarse"), "modific" );
	deepEqual( Stem("modificó"), "modific" );
	deepEqual( Stem("modista"), "modist" );
	deepEqual( Stem("modo"), "mod" );
	deepEqual( Stem("modos"), "mod" );
	deepEqual( Stem("modulada"), "modul" );
	deepEqual( Stem("modular"), "modul" );
	deepEqual( Stem("módulo"), "modul" );
	deepEqual( Stem("módulos"), "modul" );
	deepEqual( Stem("moisés"), "moises" );
	deepEqual( Stem("mol"), "mol" );
	deepEqual( Stem("moldeado"), "mold" );
	deepEqual( Stem("moldearon"), "mold" );
	deepEqual( Stem("mole"), "mol" );
	deepEqual( Stem("molesta"), "molest" );
	deepEqual( Stem("molestada"), "molest" );
	deepEqual( Stem("molestados"), "molest" );
	deepEqual( Stem("molestan"), "molest" );
	deepEqual( Stem("molestar"), "molest" );
	deepEqual( Stem("molestarán"), "molest" );
	deepEqual( Stem("molestarse"), "molest" );
	deepEqual( Stem("moleste"), "molest" );
	deepEqual( Stem("molestia"), "molesti" );
	deepEqual( Stem("molestias"), "molesti" );
	deepEqual( Stem("molesto"), "molest" );
	deepEqual( Stem("molestó"), "molest" );
	deepEqual( Stem("molestos"), "molest" );
	deepEqual( Stem("molida"), "mol" );
	deepEqual( Stem("moliere"), "molier" );
	deepEqual( Stem("molina"), "molin" );
	deepEqual( Stem("molino"), "molin" );
	deepEqual( Stem("moll"), "moll" );
	deepEqual( Stem("mollejas"), "mollej" );
	deepEqual( Stem("molones"), "molon" );
	deepEqual( Stem("mombasa"), "mombas" );
	deepEqual( Stem("momentánea"), "momentane" );
	deepEqual( Stem("momentáneamente"), "momentan" );
	deepEqual( Stem("momentáneo"), "momentane" );
	deepEqual( Stem("momento"), "moment" );
	deepEqual( Stem("momentos"), "moment" );
	deepEqual( Stem("monarca"), "monarc" );
	deepEqual( Stem("monarquía"), "monarqu" );
	deepEqual( Stem("monárquica"), "monarqu" );
	deepEqual( Stem("monas"), "mon" );
	deepEqual( Stem("moncada"), "monc" );
	deepEqual( Stem("monclova"), "monclov" );
	deepEqual( Stem("mondongo"), "mondong" );
	deepEqual( Stem("moneda"), "moned" );
	deepEqual( Stem("monedas"), "moned" );
	deepEqual( Stem("monederos"), "moneder" );
	deepEqual( Stem("monetaria"), "monetari" );
	deepEqual( Stem("monetarias"), "monetari" );
	deepEqual( Stem("monetario"), "monetari" );
	deepEqual( Stem("mónica"), "monic" );
	deepEqual( Stem("monipodio"), "monipodi" );
	deepEqual( Stem("monitor"), "monitor" );
	deepEqual( Stem("monitoreo"), "monitore" );
	deepEqual( Stem("monitoreos"), "monitore" );
	deepEqual( Stem("monitores"), "monitor" );
	deepEqual( Stem("monjaras"), "monj" );
	deepEqual( Stem("monjaraz"), "monjaraz" );
	deepEqual( Stem("monjas"), "monj" );
	deepEqual( Stem("monk"), "monk" );
	deepEqual( Stem("moño"), "moñ" );
	deepEqual( Stem("monogollas"), "monogoll" );
	deepEqual( Stem("monolito"), "monolit" );
	deepEqual( Stem("monoplaza"), "monoplaz" );
	deepEqual( Stem("monoplazas"), "monoplaz" );
	deepEqual( Stem("monopolio"), "monopoli" );
	deepEqual( Stem("monopolios"), "monopoli" );
	deepEqual( Stem("monóxido"), "monox" );
	deepEqual( Stem("monroy"), "monroy" );
	deepEqual( Stem("monsivais"), "monsivais" );
	deepEqual( Stem("monsiváis"), "monsiv" );
	deepEqual( Stem("monstruosidad"), "monstru" );
	deepEqual( Stem("monstruosos"), "monstruos" );
	deepEqual( Stem("monta"), "mont" );
	deepEqual( Stem("montada"), "mont" );
	deepEqual( Stem("montado"), "mont" );
	deepEqual( Stem("montaje"), "montaj" );
	deepEqual( Stem("montajes"), "montaj" );
	deepEqual( Stem("montalbán"), "montalban" );
	deepEqual( Stem("montalvo"), "montalv" );
	deepEqual( Stem("montana"), "montan" );
	deepEqual( Stem("montaña"), "montañ" );
	deepEqual( Stem("montañas"), "montañ" );
	deepEqual( Stem("montando"), "mont" );
	deepEqual( Stem("montaño"), "montañ" );
	deepEqual( Stem("montar"), "mont" );
	deepEqual( Stem("monte"), "mont" );
	deepEqual( Stem("monteleone"), "monteleon" );
	deepEqual( Stem("montemayor"), "montemayor" );
	deepEqual( Stem("montemorelos"), "montemorel" );
	deepEqual( Stem("monten"), "mont" );
	deepEqual( Stem("montepíos"), "montepi" );
	deepEqual( Stem("montera"), "monter" );
	deepEqual( Stem("montero"), "monter" );
	deepEqual( Stem("monterrey"), "monterrey" );
	deepEqual( Stem("monterreynuevo"), "monterreynuev" );
	deepEqual( Stem("monterrubio"), "monterrubi" );
	deepEqual( Stem("montes"), "mont" );
	deepEqual( Stem("montgomery"), "montgomery" );
	deepEqual( Stem("months"), "months" );
	deepEqual( Stem("montículo"), "monticul" );
	deepEqual( Stem("montiel"), "montiel" );
	deepEqual( Stem("monto"), "mont" );
	deepEqual( Stem("montó"), "mont" );
	deepEqual( Stem("montón"), "monton" );
	deepEqual( Stem("montos"), "mont" );
	deepEqual( Stem("montoya"), "montoy" );
	deepEqual( Stem("montreal"), "montreal" );
	deepEqual( Stem("montura"), "montur" );
	deepEqual( Stem("monumental"), "monumental" );
	deepEqual( Stem("monumentalidad"), "monumental" );
	deepEqual( Stem("monumento"), "monument" );
	deepEqual( Stem("monumentos"), "monument" );
	deepEqual( Stem("moodys"), "moodys" );
	deepEqual( Stem("mor"), "mor" );
	deepEqual( Stem("mora"), "mor" );
	deepEqual( Stem("morada"), "mor" );
	deepEqual( Stem("morado"), "mor" );
	deepEqual( Stem("moraes"), "mor" );
	deepEqual( Stem("moral"), "moral" );
	deepEqual( Stem("morales"), "moral" );
	deepEqual( Stem("moralidad"), "moral" );
	deepEqual( Stem("moralistas"), "moral" );
	deepEqual( Stem("moralización"), "moraliz" );
	deepEqual( Stem("moralizarse"), "moraliz" );
	deepEqual( Stem("moralmente"), "moral" );
	deepEqual( Stem("moranchel"), "moranchel" );
	deepEqual( Stem("moratoria"), "moratori" );
	deepEqual( Stem("morbilidad"), "morbil" );
	deepEqual( Stem("morbosa"), "morbos" );
	deepEqual( Stem("morbosos"), "morbos" );
	deepEqual( Stem("mordida"), "mord" );
	deepEqual( Stem("mordidas"), "mord" );
	deepEqual( Stem("mordiendo"), "mord" );
	deepEqual( Stem("mordiscos"), "mordisc" );
	deepEqual( Stem("morelenses"), "morelens" );
	deepEqual( Stem("morelia"), "moreli" );
	deepEqual( Stem("morell"), "morell" );
	deepEqual( Stem("morelos"), "morel" );
	deepEqual( Stem("morena"), "moren" );
	deepEqual( Stem("morenas"), "moren" );
	deepEqual( Stem("morenitos"), "morenit" );
	deepEqual( Stem("moreno"), "moren" );
	deepEqual( Stem("moresa"), "mores" );
	deepEqual( Stem("morgan"), "morg" );
	deepEqual( Stem("moría"), "mor" );
	deepEqual( Stem("morillo"), "morill" );
	deepEqual( Stem("morín"), "morin" );
	deepEqual( Stem("morir"), "mor" );
	deepEqual( Stem("morirse"), "mor" );
	deepEqual( Stem("morón"), "moron" );
	deepEqual( Stem("morones"), "moron" );
	deepEqual( Stem("moroso"), "moros" );
	deepEqual( Stem("morozoff"), "morozoff" );
	deepEqual( Stem("morris"), "morris" );
	deepEqual( Stem("morrison"), "morrison" );
	deepEqual( Stem("morros"), "morr" );
	deepEqual( Stem("mortal"), "mortal" );
	deepEqual( Stem("mortem"), "mortem" );
	deepEqual( Stem("moruecos"), "moruec" );
	deepEqual( Stem("mos"), "mos" );
	deepEqual( Stem("moschino"), "moschin" );
	deepEqual( Stem("moscovita"), "moscovit" );
	deepEqual( Stem("moscu"), "moscu" );
	deepEqual( Stem("moscú"), "moscu" );
	deepEqual( Stem("mosquito"), "mosquit" );
	deepEqual( Stem("mostaza"), "mostaz" );
	deepEqual( Stem("mostraba"), "mostr" );
	deepEqual( Stem("mostraban"), "mostr" );
	deepEqual( Stem("mostrada"), "mostr" );
	deepEqual( Stem("mostrado"), "mostr" );
	deepEqual( Stem("mostrando"), "mostr" );
	deepEqual( Stem("mostrándome"), "mostr" );
	deepEqual( Stem("mostrándose"), "mostr" );
	deepEqual( Stem("mostrar"), "mostr" );
	deepEqual( Stem("mostrará"), "mostr" );
	deepEqual( Stem("mostrarle"), "mostr" );
	deepEqual( Stem("mostrarles"), "mostr" );
	deepEqual( Stem("mostrarlo"), "mostr" );
	deepEqual( Stem("mostraron"), "mostr" );
	deepEqual( Stem("mostrarse"), "mostr" );
	deepEqual( Stem("mostró"), "mostr" );
	deepEqual( Stem("mota"), "mot" );
	deepEqual( Stem("moteles"), "motel" );
	deepEqual( Stem("motiva"), "motiv" );
	deepEqual( Stem("motivación"), "motiv" );
	deepEqual( Stem("motivacional"), "motivacional" );
	deepEqual( Stem("motivacionales"), "motivacional" );
	deepEqual( Stem("motivaciones"), "motiv" );
	deepEqual( Stem("motivado"), "motiv" );
	deepEqual( Stem("motivador"), "motiv" );
	deepEqual( Stem("motivante"), "motiv" );
	deepEqual( Stem("motivar"), "motiv" );
	deepEqual( Stem("motivarán"), "motiv" );
	deepEqual( Stem("motivarlas"), "motiv" );
	deepEqual( Stem("motivarlo"), "motiv" );
	deepEqual( Stem("motivarlos"), "motiv" );
	deepEqual( Stem("motive"), "motiv" );
	deepEqual( Stem("motivo"), "motiv" );
	deepEqual( Stem("motivó"), "motiv" );
	deepEqual( Stem("motivos"), "motiv" );
	deepEqual( Stem("moto"), "mot" );
	deepEqual( Stem("motocicleta"), "motociclet" );
	deepEqual( Stem("motociclismo"), "motocicl" );
	deepEqual( Stem("motociclista"), "motocicl" );
	deepEqual( Stem("motociclistas"), "motocicl" );
	deepEqual( Stem("motocross"), "motocross" );
	deepEqual( Stem("motolinía"), "motolin" );
	deepEqual( Stem("motor"), "motor" );
	deepEqual( Stem("motorenwerke"), "motorenwerk" );
	deepEqual( Stem("motores"), "motor" );
	deepEqual( Stem("motors"), "motors" );
	deepEqual( Stem("motos"), "mot" );
	deepEqual( Stem("motriz"), "motriz" );
	deepEqual( Stem("mountain"), "mountain" );
	deepEqual( Stem("mouse"), "mous" );
	deepEqual( Stem("moussavi"), "moussavi" );
	deepEqual( Stem("movamos"), "mov" );
	deepEqual( Stem("mover"), "mov" );
	deepEqual( Stem("moveré"), "mov" );
	deepEqual( Stem("movernos"), "mov" );
	deepEqual( Stem("moverse"), "mov" );
	deepEqual( Stem("movían"), "mov" );
	deepEqual( Stem("movida"), "mov" );
	deepEqual( Stem("movido"), "mov" );
	deepEqual( Stem("moviendo"), "mov" );
	deepEqual( Stem("moviéndose"), "mov" );
	deepEqual( Stem("movieron"), "mov" );
	deepEqual( Stem("móvil"), "movil" );
	deepEqual( Stem("móviles"), "movil" );
	deepEqual( Stem("movilidad"), "movil" );
	deepEqual( Stem("moviliza"), "moviliz" );
	deepEqual( Stem("movilización"), "moviliz" );
	deepEqual( Stem("movilizaciones"), "moviliz" );
	deepEqual( Stem("movilizar"), "moviliz" );
	deepEqual( Stem("movilizó"), "moviliz" );
	deepEqual( Stem("movimiento"), "movimient" );
	deepEqual( Stem("movimientos"), "movimient" );
	deepEqual( Stem("movió"), "mov" );
	deepEqual( Stem("moya"), "moy" );
	deepEqual( Stem("moyobamba"), "moyobamb" );
	deepEqual( Stem("moyssén"), "moyssen" );
	deepEqual( Stem("moza"), "moz" );
	deepEqual( Stem("mozart"), "mozart" );
	deepEqual( Stem("mozo"), "moz" );
	deepEqual( Stem("mozos"), "moz" );
	deepEqual( Stem("mr"), "mr" );
	deepEqual( Stem("mstislav"), "mstislav" );
	deepEqual( Stem("mtito"), "mtit" );
	deepEqual( Stem("mtley"), "mtley" );
	deepEqual( Stem("mu"), "mu" );
	deepEqual( Stem("mucha"), "much" );
	deepEqual( Stem("muchacha"), "muchach" );
	deepEqual( Stem("muchachas"), "muchach" );
	deepEqual( Stem("muchacho"), "muchach" );
	deepEqual( Stem("muchachos"), "muchach" );
	deepEqual( Stem("muchas"), "much" );
	deepEqual( Stem("muchedumbre"), "muchedumbr" );
	deepEqual( Stem("muchísima"), "muchisim" );
	deepEqual( Stem("muchísimas"), "muchisim" );
	deepEqual( Stem("muchísimo"), "muchisim" );
	deepEqual( Stem("muchísimos"), "muchis" );
	deepEqual( Stem("mucho"), "much" );
	deepEqual( Stem("muchos"), "much" );
	deepEqual( Stem("muda"), "mud" );
	deepEqual( Stem("mudanza"), "mudanz" );
	deepEqual( Stem("mudará"), "mud" );
	deepEqual( Stem("mudarse"), "mud" );
	deepEqual( Stem("mueble"), "muebl" );
	deepEqual( Stem("muebles"), "muebl" );
	deepEqual( Stem("mueca"), "muec" );
	deepEqual( Stem("muelle"), "muell" );
	deepEqual( Stem("muelles"), "muell" );
	deepEqual( Stem("muera"), "muer" );
	deepEqual( Stem("muérdago"), "muerdag" );
	deepEqual( Stem("muere"), "muer" );
	deepEqual( Stem("muerta"), "muert" );
	deepEqual( Stem("muertas"), "muert" );
	deepEqual( Stem("muerte"), "muert" );
	deepEqual( Stem("muertes"), "muert" );
	deepEqual( Stem("muerto"), "muert" );
	deepEqual( Stem("muertos"), "muert" );
	deepEqual( Stem("muestra"), "muestr" );
	deepEqual( Stem("muestran"), "muestr" );
	deepEqual( Stem("muestrario"), "muestrari" );
	deepEqual( Stem("muestras"), "muestr" );
	deepEqual( Stem("muestre"), "muestr" );
	deepEqual( Stem("muestren"), "muestr" );
	deepEqual( Stem("muestreo"), "muestre" );
	deepEqual( Stem("mueve"), "muev" );
	deepEqual( Stem("mueven"), "muev" );
	deepEqual( Stem("mugre"), "mugr" );
	deepEqual( Stem("muguerza"), "muguerz" );
	deepEqual( Stem("muguiro"), "muguir" );
	deepEqual( Stem("mujer"), "muj" );
	deepEqual( Stem("mujercita"), "mujercit" );
	deepEqual( Stem("mujeres"), "mujer" );
	deepEqual( Stem("mula"), "mul" );
	deepEqual( Stem("mulato"), "mulat" );
	deepEqual( Stem("muleta"), "mulet" );
	deepEqual( Stem("muletas"), "mulet" );
	deepEqual( Stem("muletazos"), "muletaz" );
	deepEqual( Stem("mulino"), "mulin" );
	deepEqual( Stem("mulitas"), "mulit" );
	deepEqual( Stem("muller"), "mull" );
	deepEqual( Stem("multa"), "mult" );
	deepEqual( Stem("multadas"), "mult" );
	deepEqual( Stem("multado"), "mult" );
	deepEqual( Stem("multados"), "mult" );
	deepEqual( Stem("multar"), "mult" );
	deepEqual( Stem("multas"), "mult" );
	deepEqual( Stem("multichip"), "multichip" );
	deepEqual( Stem("multicolor"), "multicolor" );
	deepEqual( Stem("multiculturalismo"), "multicultural" );
	deepEqual( Stem("multilateral"), "multilateral" );
	deepEqual( Stem("multilaterales"), "multilateral" );
	deepEqual( Stem("multimedia"), "multimedi" );
	deepEqual( Stem("multimedios"), "multimedi" );
	deepEqual( Stem("multimillonariamente"), "multimillonari" );
	deepEqual( Stem("multimillonario"), "multimillonari" );
	deepEqual( Stem("multimillonarios"), "multimillonari" );
	deepEqual( Stem("multimodal"), "multimodal" );
	deepEqual( Stem("multinacionales"), "multinacional" );
	deepEqual( Stem("multipanel"), "multipanel" );
	deepEqual( Stem("múltiple"), "multipl" );
	deepEqual( Stem("múltiples"), "multipl" );
	deepEqual( Stem("multiplicación"), "multipl" );
	deepEqual( Stem("multiplicado"), "multiplic" );
	deepEqual( Stem("multiplicar"), "multiplic" );
	deepEqual( Stem("multiplicaron"), "multiplic" );
	deepEqual( Stem("multiplicarse"), "multiplic" );
	deepEqual( Stem("multiplicó"), "multiplic" );
	deepEqual( Stem("multipliquen"), "multipliqu" );
	deepEqual( Stem("múltiplos"), "multipl" );
	deepEqual( Stem("multitarea"), "multitare" );
	deepEqual( Stem("multitud"), "multitud" );
	deepEqual( Stem("multitudes"), "multitud" );
	deepEqual( Stem("multitudinaria"), "multitudinari" );
	deepEqual( Stem("mundanales"), "mundanal" );
	deepEqual( Stem("mundial"), "mundial" );
	deepEqual( Stem("mundiales"), "mundial" );
	deepEqual( Stem("mundialista"), "mundial" );
	deepEqual( Stem("mundialmente"), "mundial" );
	deepEqual( Stem("mundillo"), "mundill" );
	deepEqual( Stem("mundo"), "mund" );
	deepEqual( Stem("mundos"), "mund" );
	deepEqual( Stem("mundy"), "mundy" );
	deepEqual( Stem("muñeca"), "muñec" );
	deepEqual( Stem("munguía"), "mungu" );
	deepEqual( Stem("munich"), "munich" );
	deepEqual( Stem("municipal"), "municipal" );
	deepEqual( Stem("municipales"), "municipal" );
	deepEqual( Stem("munícipe"), "municip" );
	deepEqual( Stem("municipio"), "municipi" );
	deepEqual( Stem("municipios"), "municipi" );
	deepEqual( Stem("muñiz"), "muñiz" );
	deepEqual( Stem("muñoz"), "muñoz" );
	deepEqual( Stem("mural"), "mural" );
	deepEqual( Stem("muralismo"), "mural" );
	deepEqual( Stem("murat"), "murat" );
	deepEqual( Stem("muriendo"), "mur" );
	deepEqual( Stem("muriera"), "mur" );
	deepEqual( Stem("murieron"), "mur" );
	deepEqual( Stem("murillo"), "murill" );
	deepEqual( Stem("murió"), "mur" );
	deepEqual( Stem("muro"), "mur" );
	deepEqual( Stem("muros"), "mur" );
	deepEqual( Stem("muscular"), "muscul" );
	deepEqual( Stem("musculares"), "muscular" );
	deepEqual( Stem("músculo"), "muscul" );
	deepEqual( Stem("museo"), "muse" );
	deepEqual( Stem("museografía"), "museograf" );
	deepEqual( Stem("museógrafo"), "museograf" );
	deepEqual( Stem("museos"), "muse" );
	deepEqual( Stem("museum"), "museum" );
	deepEqual( Stem("music"), "music" );
	deepEqual( Stem("musica"), "music" );
	deepEqual( Stem("música"), "music" );
	deepEqual( Stem("musical"), "musical" );
	deepEqual( Stem("musicales"), "musical" );
	deepEqual( Stem("músico"), "music" );
	deepEqual( Stem("músicos"), "music" );
	deepEqual( Stem("muslo"), "musl" );
	deepEqual( Stem("muslos"), "musl" );
	deepEqual( Stem("mussa"), "muss" );
	deepEqual( Stem("musset"), "musset" );
	deepEqual( Stem("mustang"), "mustang" );
	deepEqual( Stem("musulmán"), "musulman" );
	deepEqual( Stem("musulmana"), "musulman" );
	deepEqual( Stem("musulmanas"), "musulman" );
	deepEqual( Stem("musulmanes"), "musulman" );
	deepEqual( Stem("mutación"), "mutacion" );
	deepEqual( Stem("mutilados"), "mutil" );
	deepEqual( Stem("mutua"), "mutu" );
	deepEqual( Stem("mutualidad"), "mutual" );
	deepEqual( Stem("mutualista"), "mutual" );
	deepEqual( Stem("mutuamente"), "mutu" );
	deepEqual( Stem("mutuas"), "mutu" );
	deepEqual( Stem("mutuo"), "mutu" );
	deepEqual( Stem("muy"), "muy" );
	deepEqual( Stem("múzquiz"), "muzquiz" );
	deepEqual( Stem("my"), "my" );
	deepEqual( Stem("myers"), "myers" );
	deepEqual( Stem("mystic"), "mystic" );
	deepEqual( Stem("n"), "n" );
	deepEqual( Stem("na"), "na" );
	deepEqual( Stem("nabor"), "nabor" );
	deepEqual( Stem("nace"), "nac" );
	deepEqual( Stem("nacen"), "nac" );
	deepEqual( Stem("nacer"), "nac" );
	deepEqual( Stem("nacho"), "nach" );
	deepEqual( Stem("nací"), "nac" );
	deepEqual( Stem("nacida"), "nac" );
	deepEqual( Stem("nacido"), "nac" );
	deepEqual( Stem("nacidos"), "nac" );
	deepEqual( Stem("naciera"), "nac" );
	deepEqual( Stem("nacieran"), "nac" );
	deepEqual( Stem("nacieron"), "nac" );
	deepEqual( Stem("nacimiento"), "nacimient" );
	deepEqual( Stem("nacimos"), "nac" );
	deepEqual( Stem("nació"), "nac" );
	deepEqual( Stem("nación"), "nacion" );
	deepEqual( Stem("nacional"), "nacional" );
	deepEqual( Stem("nacionales"), "nacional" );
	deepEqual( Stem("nacionalidad"), "nacional" );
	deepEqual( Stem("nacionalista"), "nacional" );
	deepEqual( Stem("nacionalización"), "nacionaliz" );
	deepEqual( Stem("nacionalizada"), "nacionaliz" );
	deepEqual( Stem("naciones"), "nacion" );
	deepEqual( Stem("nada"), "nad" );
	deepEqual( Stem("nadador"), "nadador" );
	deepEqual( Stem("nadadores"), "nadador" );
	deepEqual( Stem("nadando"), "nad" );
	deepEqual( Stem("nadar"), "nad" );
	deepEqual( Stem("nadie"), "nadi" );
	deepEqual( Stem("nadores"), "nador" );
	deepEqual( Stem("nafin"), "nafin" );
	deepEqual( Stem("nafinsa"), "nafins" );
	deepEqual( Stem("nafta"), "naft" );
	deepEqual( Stem("naftacorporation"), "naftacorporation" );
	deepEqual( Stem("nagoya"), "nagoy" );
	deepEqual( Stem("nahuas"), "nahu" );
	deepEqual( Stem("nailon"), "nailon" );
	deepEqual( Stem("nairobi"), "nairobi" );
	deepEqual( Stem("naju"), "naju" );
	deepEqual( Stem("nancy"), "nancy" );
	deepEqual( Stem("nandin"), "nandin" );
	deepEqual( Stem("nandín"), "nandin" );
	deepEqual( Stem("napoleón"), "napoleon" );
	deepEqual( Stem("nápoles"), "napol" );
	deepEqual( Stem("naranja"), "naranj" );
	deepEqual( Stem("naranjas"), "naranj" );
	deepEqual( Stem("naranjo"), "naranj" );
	deepEqual( Stem("narco"), "narc" );
	deepEqual( Stem("narcoanálisis"), "narcoanalisis" );
	deepEqual( Stem("narcos"), "narc" );
	deepEqual( Stem("narcotraficante"), "narcotraf" );
	deepEqual( Stem("narcotraficantes"), "narcotraf" );
	deepEqual( Stem("narcotráfico"), "narcotraf" );
	deepEqual( Stem("nariz"), "nariz" );
	deepEqual( Stem("narozhilenko"), "narozhilenk" );
	deepEqual( Stem("narra"), "narr" );
	deepEqual( Stem("narrado"), "narr" );
	deepEqual( Stem("narrador"), "narrador" );
	deepEqual( Stem("narran"), "narr" );
	deepEqual( Stem("narrativa"), "narrat" );
	deepEqual( Stem("narrativo"), "narrat" );
	deepEqual( Stem("narró"), "narr" );
	deepEqual( Stem("nasa"), "nas" );
	deepEqual( Stem("nasal"), "nasal" );
	deepEqual( Stem("nasales"), "nasal" );
	deepEqual( Stem("nat"), "nat" );
	deepEqual( Stem("nata"), "nat" );
	deepEqual( Stem("natación"), "natacion" );
	deepEqual( Stem("natal"), "natal" );
	deepEqual( Stem("natalicio"), "natalici" );
	deepEqual( Stem("natalie"), "natali" );
	deepEqual( Stem("natalio"), "natali" );
	deepEqual( Stem("nate"), "nat" );
	deepEqual( Stem("national"), "national" );
	deepEqual( Stem("nativa"), "nativ" );
	deepEqual( Stem("nativas"), "nativ" );
	deepEqual( Stem("natividad"), "nativ" );
	deepEqual( Stem("nativo"), "nativ" );
	deepEqual( Stem("nativos"), "nativ" );
	deepEqual( Stem("nato"), "nat" );
	deepEqual( Stem("natural"), "natural" );
	deepEqual( Stem("naturales"), "natural" );
	deepEqual( Stem("naturaleza"), "naturalez" );
	deepEqual( Stem("naturalmente"), "natural" );
	deepEqual( Stem("nature"), "natur" );
	deepEqual( Stem("naturista"), "natur" );
	deepEqual( Stem("naucalpan"), "naucalp" );
	deepEqual( Stem("naufragaron"), "naufrag" );
	deepEqual( Stem("naufragio"), "naufragi" );
	deepEqual( Stem("naufragios"), "naufragi" );
	deepEqual( Stem("náufrago"), "naufrag" );
	deepEqual( Stem("naufragó"), "naufrag" );
	deepEqual( Stem("náutico"), "nautic" );
	deepEqual( Stem("náuticos"), "nautic" );
	deepEqual( Stem("nava"), "nav" );
	deepEqual( Stem("navaja"), "navaj" );
	deepEqual( Stem("navajas"), "navaj" );
	deepEqual( Stem("navajazo"), "navajaz" );
	deepEqual( Stem("navajearon"), "navaj" );
	deepEqual( Stem("naval"), "naval" );
	deepEqual( Stem("navales"), "naval" );
	deepEqual( Stem("navarrete"), "navarret" );
	deepEqual( Stem("navarro"), "navarr" );
	deepEqual( Stem("nave"), "nav" );
	deepEqual( Stem("naveda"), "naved" );
	deepEqual( Stem("navegación"), "naveg" );
	deepEqual( Stem("navegar"), "naveg" );
	deepEqual( Stem("naves"), "nav" );
	deepEqual( Stem("navidad"), "navid" );
	deepEqual( Stem("naviera"), "nav" );
	deepEqual( Stem("navieras"), "nav" );
	deepEqual( Stem("navieros"), "navier" );
	deepEqual( Stem("navío"), "navi" );
	deepEqual( Stem("navíos"), "navi" );
	deepEqual( Stem("navismo"), "navism" );
	deepEqual( Stem("navista"), "navist" );
	deepEqual( Stem("navojoa"), "navojo" );
	deepEqual( Stem("nayarit"), "nayarit" );
	deepEqual( Stem("nazis"), "nazis" );
	deepEqual( Stem("nbc"), "nbc" );
	deepEqual( Stem("near"), "near" );
	deepEqual( Stem("neblina"), "neblin" );
	deepEqual( Stem("necaxa"), "necax" );
	deepEqual( Stem("necaxistas"), "necax" );
	deepEqual( Stem("necedad"), "neced" );
	deepEqual( Stem("necesaria"), "necesari" );
	deepEqual( Stem("necesariamente"), "necesari" );
	deepEqual( Stem("necesarias"), "necesari" );
	deepEqual( Stem("necesario"), "necesari" );
	deepEqual( Stem("necesarios"), "necesari" );
	deepEqual( Stem("necesidad"), "neces" );
	deepEqual( Stem("necesidades"), "neces" );
	deepEqual( Stem("necesita"), "necesit" );
	deepEqual( Stem("necesitaba"), "necesit" );
	deepEqual( Stem("necesitábamos"), "necesit" );
	deepEqual( Stem("necesitaban"), "necesit" );
	deepEqual( Stem("necesitado"), "necesit" );
	deepEqual( Stem("necesitamos"), "necesit" );
	deepEqual( Stem("necesitan"), "necesit" );
	deepEqual( Stem("necesitará"), "necesit" );
	deepEqual( Stem("necesitarán"), "necesit" );
	deepEqual( Stem("necesitaría"), "necesit" );
	deepEqual( Stem("necesitarían"), "necesit" );
	deepEqual( Stem("necesitarlas"), "necesit" );
	deepEqual( Stem("necesite"), "necesit" );
	deepEqual( Stem("necesiten"), "necesit" );
	deepEqual( Stem("necesito"), "necesit" );
	deepEqual( Stem("necesitó"), "necesit" );
	deepEqual( Stem("necia"), "neci" );
	deepEqual( Stem("necrófilo"), "necrofil" );
	deepEqual( Stem("nedda"), "nedd" );
	deepEqual( Stem("nefasto"), "nefast" );
	deepEqual( Stem("nefrología"), "nefrolog" );
	deepEqual( Stem("negaba"), "neg" );
	deepEqual( Stem("negaban"), "neg" );
	deepEqual( Stem("negada"), "neg" );
	deepEqual( Stem("negado"), "neg" );
	deepEqual( Stem("negando"), "neg" );
	deepEqual( Stem("negar"), "neg" );
	deepEqual( Stem("negara"), "neg" );
	deepEqual( Stem("negarla"), "neg" );
	deepEqual( Stem("negarle"), "neg" );
	deepEqual( Stem("negaron"), "neg" );
	deepEqual( Stem("negarse"), "neg" );
	deepEqual( Stem("negativa"), "negat" );
	deepEqual( Stem("negativamente"), "negat" );
	deepEqual( Stem("negativas"), "negat" );
	deepEqual( Stem("negativo"), "negat" );
	deepEqual( Stem("negativos"), "negat" );
	deepEqual( Stem("negligencia"), "negligent" );
	deepEqual( Stem("negó"), "neg" );
	deepEqual( Stem("negocia"), "negoci" );
	deepEqual( Stem("negociables"), "negoci" );
	deepEqual( Stem("negociación"), "negoci" );
	deepEqual( Stem("negociaciones"), "negoci" );
	deepEqual( Stem("negociada"), "negoci" );
	deepEqual( Stem("negociado"), "negoci" );
	deepEqual( Stem("negociador"), "negoci" );
	deepEqual( Stem("negociadora"), "negoci" );
	deepEqual( Stem("negociadores"), "negoci" );
	deepEqual( Stem("negociando"), "negoci" );
	deepEqual( Stem("negociantes"), "negoci" );
	deepEqual( Stem("negociar"), "negoci" );
	deepEqual( Stem("negociarían"), "negoci" );
	deepEqual( Stem("negociarlo"), "negoci" );
	deepEqual( Stem("negociaron"), "negoci" );
	deepEqual( Stem("negociazo"), "negociaz" );
	deepEqual( Stem("negocio"), "negoci" );
	deepEqual( Stem("negoció"), "negoc" );
	deepEqual( Stem("negocios"), "negoci" );
	deepEqual( Stem("negra"), "negr" );
	deepEqual( Stem("negras"), "negr" );
	deepEqual( Stem("negrete"), "negret" );
	deepEqual( Stem("negro"), "negr" );
	deepEqual( Stem("negromex"), "negromex" );
	deepEqual( Stem("negroponte"), "negropont" );
	deepEqual( Stem("negros"), "negr" );
	deepEqual( Stem("nehru"), "nehru" );
	deepEqual( Stem("neil"), "neil" );
	deepEqual( Stem("nejedly"), "nejedly" );
	deepEqual( Stem("nelson"), "nelson" );
	deepEqual( Stem("neófito"), "neofit" );
	deepEqual( Stem("neográfica"), "neograf" );
	deepEqual( Stem("neoleonés"), "neoleones" );
	deepEqual( Stem("neoliberal"), "neoliberal" );
	deepEqual( Stem("neoliberales"), "neoliberal" );
	deepEqual( Stem("neoliberalismo"), "neoliberal" );
	deepEqual( Stem("neoloneses"), "neolones" );
	deepEqual( Stem("neomexicanismo"), "neomexican" );
	deepEqual( Stem("neón"), "neon" );
	deepEqual( Stem("neopopulistas"), "neopopul" );
	deepEqual( Stem("neoproteccionista"), "neoproteccion" );
	deepEqual( Stem("neosectores"), "neosector" );
	deepEqual( Stem("neoyorkina"), "neoyorkin" );
	deepEqual( Stem("neoyorkino"), "neoyorkin" );
	deepEqual( Stem("neoyorquina"), "neoyorquin" );
	deepEqual( Stem("neoyorquinas"), "neoyorquin" );
	deepEqual( Stem("neoyorquino"), "neoyorquin" );
	deepEqual( Stem("népotas"), "nepot" );
	deepEqual( Stem("nepotismo"), "nepot" );
	deepEqual( Stem("neptuno"), "neptun" );
	deepEqual( Stem("nereus"), "nereus" );
	deepEqual( Stem("neri"), "neri" );
	deepEqual( Stem("neruda"), "nerud" );
	deepEqual( Stem("nerviosa"), "nervios" );
	deepEqual( Stem("nerviosas"), "nervi" );
	deepEqual( Stem("nerviosismo"), "nervi" );
	deepEqual( Stem("nervioso"), "nervios" );
	deepEqual( Stem("nerviosos"), "nervios" );
	deepEqual( Stem("nestlé"), "nestl" );
	deepEqual( Stem("nestor"), "nestor" );
	deepEqual( Stem("neta"), "net" );
	deepEqual( Stem("netamente"), "net" );
	deepEqual( Stem("netas"), "net" );
	deepEqual( Stem("neto"), "net" );
	deepEqual( Stem("netos"), "net" );
	deepEqual( Stem("network"), "network" );
	deepEqual( Stem("neumología"), "neumolog" );
	deepEqual( Stem("neumonía"), "neumon" );
	deepEqual( Stem("neurastenia"), "neurasteni" );
	deepEqual( Stem("neurobiólogo"), "neurobiolog" );
	deepEqual( Stem("neurocirujanos"), "neurocirujan" );
	deepEqual( Stem("neurología"), "neurolog" );
	deepEqual( Stem("neurológicas"), "neurolog" );
	deepEqual( Stem("neurológico"), "neurolog" );
	deepEqual( Stem("neurona"), "neuron" );
	deepEqual( Stem("neuronales"), "neuronal" );
	deepEqual( Stem("neuronas"), "neuron" );
	deepEqual( Stem("neurosis"), "neurosis" );
	deepEqual( Stem("neutral"), "neutral" );
	deepEqual( Stem("neutralizar"), "neutraliz" );
	deepEqual( Stem("neutro"), "neutr" );
	deepEqual( Stem("neutros"), "neutr" );
	deepEqual( Stem("neuville"), "neuvill" );
	deepEqual( Stem("nevando"), "nev" );
	deepEqual( Stem("new"), "new" );
	deepEqual( Stem("newagers"), "newagers" );
	deepEqual( Stem("newagismo"), "newag" );
	deepEqual( Stem("newport"), "newport" );
	deepEqual( Stem("newquist"), "newquist" );
	deepEqual( Stem("news"), "news" );
	deepEqual( Stem("newsweek"), "newsweek" );
	deepEqual( Stem("newton"), "newton" );
	deepEqual( Stem("nexos"), "nex" );
	deepEqual( Stem("next"), "next" );
	deepEqual( Stem("nextstep"), "nextstep" );
	deepEqual( Stem("ney"), "ney" );
	deepEqual( Stem("neza"), "nez" );
	deepEqual( Stem("nfl"), "nfl" );
	deepEqual( Stem("nhra"), "nhra" );
	deepEqual( Stem("ni"), "ni" );
	deepEqual( Stem("nicaragua"), "nicaragu" );
	deepEqual( Stem("nicaragüense"), "nicaragüens" );
	deepEqual( Stem("nicho"), "nich" );
	deepEqual( Stem("nichols"), "nichols" );
	deepEqual( Stem("nichos"), "nich" );
	deepEqual( Stem("nickin"), "nickin" );
	deepEqual( Stem("ñico"), "ñic" );
	deepEqual( Stem("nicola"), "nicol" );
	deepEqual( Stem("nicolás"), "nicolas" );
	deepEqual( Stem("nicole"), "nicol" );
	deepEqual( Stem("nidas"), "nid" );
	deepEqual( Stem("nido"), "nid" );
	deepEqual( Stem("nidos"), "nid" );
	deepEqual( Stem("niebla"), "niebl" );
	deepEqual( Stem("niega"), "nieg" );
	deepEqual( Stem("niegan"), "nieg" );
	deepEqual( Stem("niegue"), "nieg" );
	deepEqual( Stem("nieguen"), "nieg" );
	deepEqual( Stem("nieta"), "niet" );
	deepEqual( Stem("nietecita"), "nietecit" );
	deepEqual( Stem("nieto"), "niet" );
	deepEqual( Stem("nietos"), "niet" );
	deepEqual( Stem("nieve"), "niev" );
	deepEqual( Stem("nieves"), "niev" );
	deepEqual( Stem("nikko"), "nikk" );
	deepEqual( Stem("nilda"), "nild" );
	deepEqual( Stem("nina"), "nin" );
	deepEqual( Stem("niña"), "niñ" );
	deepEqual( Stem("niñas"), "niñ" );
	deepEqual( Stem("niñez"), "niñez" );
	deepEqual( Stem("ningún"), "ningun" );
	deepEqual( Stem("ninguna"), "ningun" );
	deepEqual( Stem("ninguno"), "ningun" );
	deepEqual( Stem("niño"), "niñ" );
	deepEqual( Stem("niños"), "niñ" );
	deepEqual( Stem("nipón"), "nipon" );
	deepEqual( Stem("níquel"), "niquel" );
	deepEqual( Stem("nironenko"), "nironenk" );
	deepEqual( Stem("nirvana"), "nirvan" );
	deepEqual( Stem("nísperos"), "nisper" );
	deepEqual( Stem("nissan"), "niss" );
	deepEqual( Stem("nissho"), "nissh" );
	deepEqual( Stem("nitrógeno"), "nitrogen" );
	deepEqual( Stem("nivea"), "nive" );
	deepEqual( Stem("nivel"), "nivel" );
	deepEqual( Stem("nivelar"), "nivel" );
	deepEqual( Stem("niveles"), "nivel" );
	deepEqual( Stem("nixon"), "nixon" );
	deepEqual( Stem("nl"), "nl" );
	deepEqual( Stem("no"), "no" );
	deepEqual( Stem("nó"), "no" );
	deepEqual( Stem("nobel"), "nobel" );
	deepEqual( Stem("nobilísimo"), "nobilisim" );
	deepEqual( Stem("noble"), "nobl" );
	deepEqual( Stem("nobleza"), "noblez" );
	deepEqual( Stem("nocaut"), "nocaut" );
	deepEqual( Stem("nocauts"), "nocauts" );
	deepEqual( Stem("noche"), "noch" );
	deepEqual( Stem("nochebuena"), "nochebuen" );
	deepEqual( Stem("noches"), "noch" );
	deepEqual( Stem("noción"), "nocion" );
	deepEqual( Stem("nociones"), "nocion" );
	deepEqual( Stem("nocivas"), "nociv" );
	deepEqual( Stem("nocivo"), "nociv" );
	deepEqual( Stem("nocturna"), "nocturn" );
	deepEqual( Stem("nocturnas"), "nocturn" );
	deepEqual( Stem("nocturno"), "nocturn" );
	deepEqual( Stem("noé"), "noe" );
	deepEqual( Stem("nogalar"), "nogal" );
	deepEqual( Stem("nogales"), "nogal" );
	deepEqual( Stem("nolte"), "nolt" );
	deepEqual( Stem("nomás"), "nomas" );
	deepEqual( Stem("nombra"), "nombr" );
	deepEqual( Stem("nombradas"), "nombr" );
	deepEqual( Stem("nombrado"), "nombr" );
	deepEqual( Stem("nombrados"), "nombr" );
	deepEqual( Stem("nombramiento"), "nombramient" );
	deepEqual( Stem("nombramientos"), "nombramient" );
	deepEqual( Stem("nombrar"), "nombr" );
	deepEqual( Stem("nombraria"), "nombrari" );
	deepEqual( Stem("nombrarlos"), "nombr" );
	deepEqual( Stem("nombre"), "nombr" );
	deepEqual( Stem("nombré"), "nombr" );
	deepEqual( Stem("nombren"), "nombr" );
	deepEqual( Stem("nombres"), "nombr" );
	deepEqual( Stem("nombró"), "nombr" );
	deepEqual( Stem("nómina"), "nomin" );
	deepEqual( Stem("nominación"), "nomin" );
	deepEqual( Stem("nominaciones"), "nomin" );
	deepEqual( Stem("nominada"), "nomin" );
	deepEqual( Stem("nominado"), "nomin" );
	deepEqual( Stem("nominados"), "nomin" );
	deepEqual( Stem("nominal"), "nominal" );
	deepEqual( Stem("nominales"), "nominal" );
	deepEqual( Stem("nominará"), "nomin" );
	deepEqual( Stem("nonagenario"), "nonagenari" );
	deepEqual( Stem("nopales"), "nopal" );
	deepEqual( Stem("noquear"), "noqu" );
	deepEqual( Stem("noqueará"), "noqu" );
	deepEqual( Stem("nora"), "nor" );
	deepEqual( Stem("norah"), "norah" );
	deepEqual( Stem("noratlántico"), "noratlant" );
	deepEqual( Stem("norberta"), "norbert" );
	deepEqual( Stem("norberto"), "norbert" );
	deepEqual( Stem("norcarolinos"), "norcarolin" );
	deepEqual( Stem("norcoreano"), "norcorean" );
	deepEqual( Stem("noreste"), "norest" );
	deepEqual( Stem("norestense"), "norestens" );
	deepEqual( Stem("norias"), "nori" );
	deepEqual( Stem("noriega"), "norieg" );
	deepEqual( Stem("norma"), "norm" );
	deepEqual( Stem("normal"), "normal" );
	deepEqual( Stem("normales"), "normal" );
	deepEqual( Stem("normalidad"), "normal" );
	deepEqual( Stem("normalmente"), "normal" );
	deepEqual( Stem("normandía"), "normand" );
	deepEqual( Stem("normar"), "norm" );
	deepEqual( Stem("normas"), "norm" );
	deepEqual( Stem("normatividad"), "normat" );
	deepEqual( Stem("norme"), "norm" );
	deepEqual( Stem("noroccidental"), "noroccidental" );
	deepEqual( Stem("norris"), "norris" );
	deepEqual( Stem("norte"), "nort" );
	deepEqual( Stem("norteamérica"), "norteamer" );
	deepEqual( Stem("norteamericana"), "norteamerican" );
	deepEqual( Stem("norteamericanas"), "norteamerican" );
	deepEqual( Stem("norteamericano"), "norteamerican" );
	deepEqual( Stem("norteamericanos"), "norteamerican" );
	deepEqual( Stem("norteña"), "norteñ" );
	deepEqual( Stem("norteñas"), "norteñ" );
	deepEqual( Stem("norteño"), "norteñ" );
	deepEqual( Stem("norteños"), "norteñ" );
	deepEqual( Stem("northern"), "northern" );
	deepEqual( Stem("norwick"), "norwick" );
	deepEqual( Stem("nos"), "nos" );
	deepEqual( Stem("nosocomio"), "nosocomi" );
	deepEqual( Stem("nosotras"), "nosotr" );
	deepEqual( Stem("nosotros"), "nosotr" );
	deepEqual( Stem("nostalgias"), "nostalgi" );
	deepEqual( Stem("nota"), "not" );
	deepEqual( Stem("notable"), "notabl" );
	deepEqual( Stem("notablemente"), "notabl" );
	deepEqual( Stem("notables"), "notabl" );
	deepEqual( Stem("notado"), "not" );
	deepEqual( Stem("notamos"), "not" );
	deepEqual( Stem("notar"), "not" );
	deepEqual( Stem("notaria"), "notari" );
	deepEqual( Stem("notaría"), "not" );
	deepEqual( Stem("notariado"), "notari" );
	deepEqual( Stem("notario"), "notari" );
	deepEqual( Stem("notas"), "not" );
	deepEqual( Stem("noticia"), "notici" );
	deepEqual( Stem("noticias"), "notici" );
	deepEqual( Stem("noticiero"), "noticier" );
	deepEqual( Stem("noticiosa"), "notici" );
	deepEqual( Stem("noticiosos"), "notici" );
	deepEqual( Stem("notificación"), "notif" );
	deepEqual( Stem("notificado"), "notific" );
	deepEqual( Stem("notificar"), "notific" );
	deepEqual( Stem("notificarán"), "notific" );
	deepEqual( Stem("notificarle"), "notific" );
	deepEqual( Stem("notificaron"), "notific" );
	deepEqual( Stem("notificó"), "notific" );
	deepEqual( Stem("notimex"), "notimex" );
	deepEqual( Stem("notó"), "not" );
	deepEqual( Stem("notoria"), "notori" );
	deepEqual( Stem("notoriamente"), "notori" );
	deepEqual( Stem("notorias"), "notori" );
	deepEqual( Stem("notorio"), "notori" );
	deepEqual( Stem("nova"), "nov" );
	deepEqual( Stem("novacek"), "novacek" );
	deepEqual( Stem("novar"), "nov" );
	deepEqual( Stem("novatas"), "novat" );
	deepEqual( Stem("novatez"), "novatez" );
	deepEqual( Stem("novato"), "novat" );
	deepEqual( Stem("novatos"), "novat" );
	deepEqual( Stem("novedad"), "noved" );
	deepEqual( Stem("novedades"), "novedad" );
	deepEqual( Stem("novedosas"), "noved" );
	deepEqual( Stem("novedoso"), "noved" );
	deepEqual( Stem("novedosos"), "noved" );
	deepEqual( Stem("novel"), "novel" );
	deepEqual( Stem("novela"), "novel" );
	deepEqual( Stem("novelas"), "novel" );
	deepEqual( Stem("novelista"), "novel" );
	deepEqual( Stem("novell"), "novell" );
	deepEqual( Stem("novena"), "noven" );
	deepEqual( Stem("novenas"), "noven" );
	deepEqual( Stem("noveno"), "noven" );
	deepEqual( Stem("novia"), "novi" );
	deepEqual( Stem("novias"), "novi" );
	deepEqual( Stem("noviazgo"), "noviazg" );
	deepEqual( Stem("noviembre"), "noviembr" );
	deepEqual( Stem("novillada"), "novill" );
	deepEqual( Stem("novilladas"), "novill" );
	deepEqual( Stem("novillero"), "noviller" );
	deepEqual( Stem("novilleros"), "noviller" );
	deepEqual( Stem("novillo"), "novill" );
	deepEqual( Stem("novillos"), "novill" );
	deepEqual( Stem("novio"), "novi" );
	deepEqual( Stem("novios"), "novi" );
	deepEqual( Stem("novísimo"), "novisim" );
	deepEqual( Stem("novoa"), "novo" );
	deepEqual( Stem("nox"), "nox" );
	deepEqual( Stem("noyola"), "noyol" );
	deepEqual( Stem("np"), "np" );
	deepEqual( Stem("npp"), "npp" );
	deepEqual( Stem("nt"), "nt" );
	deepEqual( Stem("ntx"), "ntx" );
	deepEqual( Stem("nube"), "nub" );
	deepEqual( Stem("nubla"), "nubl" );
	deepEqual( Stem("nublados"), "nubl" );
	deepEqual( Stem("nuca"), "nuc" );
	deepEqual( Stem("nucleado"), "nucl" );
	deepEqual( Stem("nuclear"), "nucl" );
	deepEqual( Stem("núcleo"), "nucle" );
	deepEqual( Stem("núcleos"), "nucle" );
	deepEqual( Stem("nudillos"), "nudill" );
	deepEqual( Stem("nudos"), "nud" );
	deepEqual( Stem("nueces"), "nuec" );
	deepEqual( Stem("nuera"), "nuer" );
	deepEqual( Stem("nuestra"), "nuestr" );
	deepEqual( Stem("nuestras"), "nuestr" );
	deepEqual( Stem("nuestro"), "nuestr" );
	deepEqual( Stem("nuestros"), "nuestr" );
	deepEqual( Stem("nueva"), "nuev" );
	deepEqual( Stem("nuevamente"), "nuev" );
	deepEqual( Stem("nuevas"), "nuev" );
	deepEqual( Stem("nueve"), "nuev" );
	deepEqual( Stem("nuevo"), "nuev" );
	deepEqual( Stem("nuevoleonés"), "nuevoleones" );
	deepEqual( Stem("nuevoleonesa"), "nuevoleones" );
	deepEqual( Stem("nuevoleoneses"), "nuevoleones" );
	deepEqual( Stem("nuevos"), "nuev" );
	deepEqual( Stem("nuff"), "nuff" );
	deepEqual( Stem("nui"), "nui" );
	deepEqual( Stem("nula"), "nul" );
	deepEqual( Stem("nulas"), "nul" );
	deepEqual( Stem("nulo"), "nul" );
	deepEqual( Stem("numerales"), "numeral" );
	deepEqual( Stem("numeralia"), "numerali" );
	deepEqual( Stem("numérica"), "numer" );
	deepEqual( Stem("numeritos"), "numerit" );
	deepEqual( Stem("numero"), "numer" );
	deepEqual( Stem("número"), "numer" );
	deepEqual( Stem("numeros"), "numer" );
	deepEqual( Stem("números"), "numer" );
	deepEqual( Stem("numerosa"), "numer" );
	deepEqual( Stem("numerosas"), "numer" );
	deepEqual( Stem("numerosos"), "numer" );
	deepEqual( Stem("nunca"), "nunc" );
	deepEqual( Stem("nunciatura"), "nunciatur" );
	deepEqual( Stem("nuncio"), "nunci" );
	deepEqual( Stem("nuñez"), "nuñez" );
	deepEqual( Stem("núñez"), "nuñez" );
	deepEqual( Stem("nunn"), "nunn" );
	deepEqual( Stem("nupcial"), "nupcial" );
	deepEqual( Stem("nupcias"), "nupci" );
	deepEqual( Stem("nuremberg"), "nuremberg" );
	deepEqual( Stem("nurser"), "nurs" );
	deepEqual( Stem("nutrición"), "nutricion" );
	deepEqual( Stem("nutrientes"), "nutrient" );
	deepEqual( Stem("ny"), "ny" );
	deepEqual( Stem("nye"), "nye" );
	deepEqual( Stem("nylon"), "nylon" );
	deepEqual( Stem("nyrup"), "nyrup" );
	deepEqual( Stem("nyt"), "nyt" );
	deepEqual( Stem("o"), "o" );
	deepEqual( Stem("ó"), "o" );
	deepEqual( Stem("oajaca"), "oajac" );
	deepEqual( Stem("oaxaca"), "oaxac" );
	deepEqual( Stem("oaxaqueñas"), "oaxaqueñ" );
	deepEqual( Stem("obdulia"), "obduli" );
	deepEqual( Stem("obdulio"), "obduli" );
	deepEqual( Stem("obedece"), "obedec" );
	deepEqual( Stem("obedecen"), "obedec" );
	deepEqual( Stem("obedecer"), "obedec" );
	deepEqual( Stem("obedecerlo"), "obedec" );
	deepEqual( Stem("obedecía"), "obedec" );
	deepEqual( Stem("obedecían"), "obedec" );
	deepEqual( Stem("obedeció"), "obedec" );
	deepEqual( Stem("obediencia"), "obedient" );
	deepEqual( Stem("obispado"), "obisp" );
	deepEqual( Stem("obispo"), "obisp" );
	deepEqual( Stem("obispos"), "obisp" );
	deepEqual( Stem("objeciones"), "objecion" );
	deepEqual( Stem("objeta"), "objet" );
	deepEqual( Stem("objetar"), "objet" );
	deepEqual( Stem("objetare"), "objetar" );
	deepEqual( Stem("objetiva"), "objet" );
	deepEqual( Stem("objetividad"), "objet" );
	deepEqual( Stem("objetivo"), "objet" );
	deepEqual( Stem("objetivos"), "objet" );
	deepEqual( Stem("objeto"), "objet" );
	deepEqual( Stem("objetos"), "objet" );
	deepEqual( Stem("obliga"), "oblig" );
	deepEqual( Stem("obligaba"), "oblig" );
	deepEqual( Stem("obligaban"), "oblig" );
	deepEqual( Stem("obligación"), "oblig" );
	deepEqual( Stem("obligaciones"), "oblig" );
	deepEqual( Stem("obligada"), "oblig" );
	deepEqual( Stem("obligado"), "oblig" );
	deepEqual( Stem("obligados"), "oblig" );
	deepEqual( Stem("obligan"), "oblig" );
	deepEqual( Stem("obligando"), "oblig" );
	deepEqual( Stem("obligándolo"), "oblig" );
	deepEqual( Stem("obligar"), "oblig" );
	deepEqual( Stem("obligará"), "oblig" );
	deepEqual( Stem("obligaría"), "oblig" );
	deepEqual( Stem("obligarían"), "oblig" );
	deepEqual( Stem("obligaron"), "oblig" );
	deepEqual( Stem("obligatoria"), "obligatori" );
	deepEqual( Stem("obligatoriamente"), "obligatori" );
	deepEqual( Stem("obligatoriedad"), "obligatoried" );
	deepEqual( Stem("obligatorio"), "obligatori" );
	deepEqual( Stem("obligatorios"), "obligatori" );
	deepEqual( Stem("obligo"), "oblig" );
	deepEqual( Stem("obligó"), "oblig" );
	deepEqual( Stem("obligue"), "oblig" );
	deepEqual( Stem("oboe"), "obo" );
	deepEqual( Stem("oboístas"), "oboist" );
	deepEqual( Stem("obra"), "obra" );
	deepEqual( Stem("obrador"), "obrador" );
	deepEqual( Stem("obran"), "obran" );
	deepEqual( Stem("obrar"), "obrar" );
	deepEqual( Stem("obras"), "obras" );
	deepEqual( Stem("obregón"), "obregon" );
	deepEqual( Stem("obrera"), "obrer" );
	deepEqual( Stem("obrero"), "obrer" );
	deepEqual( Stem("obreros"), "obrer" );
	deepEqual( Stem("obscena"), "obscen" );
	deepEqual( Stem("obscenas"), "obscen" );
	deepEqual( Stem("obscenos"), "obscen" );
	deepEqual( Stem("obscurece"), "obscurec" );
	deepEqual( Stem("obscuro"), "obscur" );
	deepEqual( Stem("obscuros"), "obscur" );
	deepEqual( Stem("obsequian"), "obsequi" );
	deepEqual( Stem("obsequiar"), "obsequi" );
	deepEqual( Stem("obsequiarle"), "obsequi" );
	deepEqual( Stem("obsequiaron"), "obsequi" );
	deepEqual( Stem("obsequió"), "obsequ" );
	deepEqual( Stem("observa"), "observ" );
	deepEqual( Stem("observaba"), "observ" );
	deepEqual( Stem("observaban"), "observ" );
	deepEqual( Stem("observable"), "observ" );
	deepEqual( Stem("observación"), "observ" );
	deepEqual( Stem("observaciones"), "observ" );
	deepEqual( Stem("observada"), "observ" );
	deepEqual( Stem("observadas"), "observ" );
	deepEqual( Stem("observado"), "observ" );
	deepEqual( Stem("observador"), "observ" );
	deepEqual( Stem("observadora"), "observ" );
	deepEqual( Stem("observadores"), "observ" );
	deepEqual( Stem("observamos"), "observ" );
	deepEqual( Stem("observan"), "observ" );
	deepEqual( Stem("observancia"), "observ" );
	deepEqual( Stem("observando"), "observ" );
	deepEqual( Stem("observar"), "observ" );
	deepEqual( Stem("observaron"), "observ" );
	deepEqual( Stem("observé"), "observ" );
	deepEqual( Stem("observo"), "observ" );
	deepEqual( Stem("observó"), "observ" );
	deepEqual( Stem("obsesión"), "obsesion" );
	deepEqual( Stem("obsesionado"), "obsesion" );
	deepEqual( Stem("obsesionarse"), "obsesion" );
	deepEqual( Stem("obsesione"), "obsesion" );
	deepEqual( Stem("obsesiones"), "obsesion" );
	deepEqual( Stem("obsesiva"), "obses" );
	deepEqual( Stem("obsidiana"), "obsidian" );
	deepEqual( Stem("obsolescencia"), "obsolescent" );
	deepEqual( Stem("obstaculiza"), "obstaculiz" );
	deepEqual( Stem("obstaculización"), "obstaculiz" );
	deepEqual( Stem("obstaculizado"), "obstaculiz" );
	deepEqual( Stem("obstáculo"), "obstacul" );
	deepEqual( Stem("obstáculos"), "obstacul" );
	deepEqual( Stem("obstante"), "obstant" );
	deepEqual( Stem("obstinación"), "obstin" );
	deepEqual( Stem("obstinado"), "obstin" );
	deepEqual( Stem("obstine"), "obstin" );
	deepEqual( Stem("obstrucción"), "obstruccion" );
	deepEqual( Stem("obtención"), "obtencion" );
	deepEqual( Stem("obtendrá"), "obtendr" );
	deepEqual( Stem("obtendrán"), "obtendran" );
	deepEqual( Stem("obtener"), "obten" );
	deepEqual( Stem("obtenerla"), "obten" );
	deepEqual( Stem("obtenerlas"), "obten" );
	deepEqual( Stem("obtenerse"), "obten" );
	deepEqual( Stem("obtenga"), "obteng" );
	deepEqual( Stem("obtengan"), "obteng" );
	deepEqual( Stem("obtengo"), "obteng" );
	deepEqual( Stem("obtenía"), "obten" );
	deepEqual( Stem("obtenida"), "obten" );
	deepEqual( Stem("obtenidas"), "obten" );
	deepEqual( Stem("obtenido"), "obten" );
	deepEqual( Stem("obtenidos"), "obten" );
	deepEqual( Stem("obteniendo"), "obten" );
	deepEqual( Stem("obtiene"), "obtien" );
	deepEqual( Stem("obtienen"), "obtien" );
	deepEqual( Stem("obtuviera"), "obtuv" );
	deepEqual( Stem("obtuvieron"), "obtuv" );
	deepEqual( Stem("obtuvimos"), "obtuv" );
	deepEqual( Stem("obtuvo"), "obtuv" );
	deepEqual( Stem("obuses"), "obus" );
	deepEqual( Stem("obvia"), "obvi" );
	deepEqual( Stem("obviamente"), "obvi" );
	deepEqual( Stem("obvio"), "obvi" );
	deepEqual( Stem("oca"), "oca" );
	deepEqual( Stem("ocampo"), "ocamp" );
	deepEqual( Stem("ocasión"), "ocasion" );
	deepEqual( Stem("ocasiona"), "ocasion" );
	deepEqual( Stem("ocasionadas"), "ocasion" );
	deepEqual( Stem("ocasionado"), "ocasion" );
	deepEqual( Stem("ocasionados"), "ocasion" );
	deepEqual( Stem("ocasionalmente"), "ocasional" );
	deepEqual( Stem("ocasionar"), "ocasion" );
	deepEqual( Stem("ocasionará"), "ocasion" );
	deepEqual( Stem("ocasionarle"), "ocasion" );
	deepEqual( Stem("ocasionaron"), "ocasion" );
	deepEqual( Stem("ocasionarse"), "ocasion" );
	deepEqual( Stem("ocasiones"), "ocasion" );
	deepEqual( Stem("ocasionó"), "ocasion" );
	deepEqual( Stem("occidental"), "occidental" );
	deepEqual( Stem("occidentales"), "occidental" );
	deepEqual( Stem("occidente"), "occident" );
	deepEqual( Stem("occipital"), "occipital" );
	deepEqual( Stem("occisa"), "occis" );
	deepEqual( Stem("occiso"), "occis" );
	deepEqual( Stem("occisos"), "occis" );
	deepEqual( Stem("oceanía"), "ocean" );
	deepEqual( Stem("océanica"), "ocean" );
	deepEqual( Stem("oceánico"), "ocean" );
	deepEqual( Stem("oceano"), "ocean" );
	deepEqual( Stem("océano"), "ocean" );
	deepEqual( Stem("océanos"), "ocean" );
	deepEqual( Stem("ocejo"), "ocej" );
	deepEqual( Stem("oceransky"), "oceransky" );
	deepEqual( Stem("ochenta"), "ochent" );
	deepEqual( Stem("ochentas"), "ochent" );
	deepEqual( Stem("ocho"), "ocho" );
	deepEqual( Stem("ochoa"), "ocho" );
	deepEqual( Stem("ochos"), "ochos" );
	deepEqual( Stem("ochosi"), "ochosi" );
	deepEqual( Stem("ocio"), "oci" );
	deepEqual( Stem("ocremente"), "ocrement" );
	deepEqual( Stem("octava"), "octav" );
	deepEqual( Stem("octavio"), "octavi" );
	deepEqual( Stem("octavo"), "octav" );
	deepEqual( Stem("octubre"), "octubr" );
	deepEqual( Stem("oculta"), "ocult" );
	deepEqual( Stem("ocultaba"), "ocult" );
	deepEqual( Stem("ocultar"), "ocult" );
	deepEqual( Stem("ocultaron"), "ocult" );
	deepEqual( Stem("ocultas"), "ocult" );
	deepEqual( Stem("oculten"), "ocult" );
	deepEqual( Stem("oculto"), "ocult" );
	deepEqual( Stem("ocultó"), "ocult" );
	deepEqual( Stem("ocultos"), "ocult" );
	deepEqual( Stem("ocupa"), "ocup" );
	deepEqual( Stem("ocupaba"), "ocup" );
	deepEqual( Stem("ocupaban"), "ocup" );
	deepEqual( Stem("ocupación"), "ocup" );
	deepEqual( Stem("ocupacional"), "ocupacional" );
	deepEqual( Stem("ocupada"), "ocup" );
	deepEqual( Stem("ocupado"), "ocup" );
	deepEqual( Stem("ocupados"), "ocup" );
	deepEqual( Stem("ocupan"), "ocup" );
	deepEqual( Stem("ocupantes"), "ocup" );
	deepEqual( Stem("ocupar"), "ocup" );
	deepEqual( Stem("ocuparon"), "ocup" );
	deepEqual( Stem("ocuparse"), "ocup" );
	deepEqual( Stem("ocupen"), "ocup" );
	deepEqual( Stem("ocupó"), "ocup" );
	deepEqual( Stem("ocurra"), "ocurr" );
	deepEqual( Stem("ocurran"), "ocurr" );
	deepEqual( Stem("ocurre"), "ocurr" );
	deepEqual( Stem("ocurren"), "ocurr" );
	deepEqual( Stem("ocurrencia"), "ocurrent" );
	deepEqual( Stem("ocurría"), "ocurr" );
	deepEqual( Stem("ocurrida"), "ocurr" );
	deepEqual( Stem("ocurridas"), "ocurr" );
	deepEqual( Stem("ocurrido"), "ocurr" );
	deepEqual( Stem("ocurriendo"), "ocurr" );
	deepEqual( Stem("ocurrieron"), "ocurr" );
	deepEqual( Stem("ocurrió"), "ocurr" );
	deepEqual( Stem("ocurrir"), "ocurr" );
	deepEqual( Stem("ocurrirán"), "ocurr" );
	deepEqual( Stem("odio"), "odi" );
	deepEqual( Stem("odisea"), "odise" );
	deepEqual( Stem("odriozola"), "odriozol" );
	deepEqual( Stem("oea"), "oea" );
	deepEqual( Stem("oecd"), "oecd" );
	deepEqual( Stem("oeste"), "oest" );
	deepEqual( Stem("of"), "of" );
	deepEqual( Stem("ofelia"), "ofeli" );
	deepEqual( Stem("ofende"), "ofend" );
	deepEqual( Stem("ofenden"), "ofend" );
	deepEqual( Stem("ofender"), "ofend" );
	deepEqual( Stem("ofenderá"), "ofend" );
	deepEqual( Stem("ofendidas"), "ofend" );
	deepEqual( Stem("ofendido"), "ofend" );
	deepEqual( Stem("ofendió"), "ofend" );
	deepEqual( Stem("ofensa"), "ofens" );
	deepEqual( Stem("ofensiva"), "ofens" );
	deepEqual( Stem("ofensivas"), "ofens" );
	deepEqual( Stem("ofensivo"), "ofens" );
	deepEqual( Stem("ofensivos"), "ofens" );
	deepEqual( Stem("oferentes"), "oferent" );
	deepEqual( Stem("oferta"), "ofert" );
	deepEqual( Stem("ofertas"), "ofert" );
	deepEqual( Stem("ofertó"), "ofert" );
	deepEqual( Stem("officio"), "offici" );
	deepEqual( Stem("oficial"), "oficial" );
	deepEqual( Stem("oficiales"), "oficial" );
	deepEqual( Stem("oficialía"), "oficial" );
	deepEqual( Stem("oficialista"), "oficial" );
	deepEqual( Stem("oficializar"), "oficializ" );
	deepEqual( Stem("oficializo"), "oficializ" );
	deepEqual( Stem("oficializó"), "oficializ" );
	deepEqual( Stem("oficialmente"), "oficial" );
	deepEqual( Stem("oficiaría"), "ofici" );
	deepEqual( Stem("oficina"), "oficin" );
	deepEqual( Stem("oficinas"), "oficin" );
	deepEqual( Stem("oficinesco"), "oficinesc" );
	deepEqual( Stem("oficio"), "ofici" );
	deepEqual( Stem("oficiosas"), "ofici" );
	deepEqual( Stem("ofrece"), "ofrec" );
	deepEqual( Stem("ofrecen"), "ofrec" );
	deepEqual( Stem("ofrecer"), "ofrec" );
	deepEqual( Stem("ofrecerá"), "ofrec" );
	deepEqual( Stem("ofrecerán"), "ofrec" );
	deepEqual( Stem("ofreceré"), "ofrec" );
	deepEqual( Stem("ofrecería"), "ofrec" );
	deepEqual( Stem("ofrecerla"), "ofrec" );
	deepEqual( Stem("ofrecerle"), "ofrec" );
	deepEqual( Stem("ofrecerles"), "ofrec" );
	deepEqual( Stem("ofrecerlo"), "ofrec" );
	deepEqual( Stem("ofrecía"), "ofrec" );
	deepEqual( Stem("ofrecían"), "ofrec" );
	deepEqual( Stem("ofrecida"), "ofrec" );
	deepEqual( Stem("ofrecidas"), "ofrec" );
	deepEqual( Stem("ofrecido"), "ofrec" );
	deepEqual( Stem("ofrecidos"), "ofrec" );
	deepEqual( Stem("ofreciendo"), "ofrec" );
	deepEqual( Stem("ofreciera"), "ofrec" );
	deepEqual( Stem("ofrecieran"), "ofrec" );
	deepEqual( Stem("ofrecieron"), "ofrec" );
	deepEqual( Stem("ofrecimiento"), "ofrec" );
	deepEqual( Stem("ofrecimientos"), "ofrec" );
	deepEqual( Stem("ofreció"), "ofrec" );
	deepEqual( Stem("ofrendas"), "ofrend" );
	deepEqual( Stem("ofrezca"), "ofrezc" );
	deepEqual( Stem("ofrezcan"), "ofrezc" );
	deepEqual( Stem("ofrezco"), "ofrezc" );
	deepEqual( Stem("oftalmología"), "oftalmolog" );
	deepEqual( Stem("oh"), "oh" );
	deepEqual( Stem("ohio"), "ohi" );
	deepEqual( Stem("oído"), "oid" );
	deepEqual( Stem("oídos"), "oid" );
	deepEqual( Stem("oiga"), "oig" );
	deepEqual( Stem("oigame"), "oigam" );
	deepEqual( Stem("oímos"), "oim" );
	deepEqual( Stem("oír"), "oir" );
	deepEqual( Stem("ojalá"), "ojal" );
	deepEqual( Stem("ojales"), "ojal" );
	deepEqual( Stem("ojeda"), "ojed" );
	deepEqual( Stem("ojeras"), "ojer" );
	deepEqual( Stem("ojo"), "ojo" );
	deepEqual( Stem("ojos"), "ojos" );
	deepEqual( Stem("ojuelos"), "ojuel" );
	deepEqual( Stem("oklahoma"), "oklahom" );
	deepEqual( Stem("ola"), "ola" );
	deepEqual( Stem("olacyr"), "olacyr" );
	deepEqual( Stem("olas"), "olas" );
	deepEqual( Stem("olaya"), "olay" );
	deepEqual( Stem("olé"), "ole" );
	deepEqual( Stem("olea"), "ole" );
	deepEqual( Stem("oleaginoso"), "oleagin" );
	deepEqual( Stem("oleaginosos"), "oleagin" );
	deepEqual( Stem("oleaje"), "oleaj" );
	deepEqual( Stem("óleo"), "ole" );
	deepEqual( Stem("olga"), "olga" );
	deepEqual( Stem("oligopolio"), "oligopoli" );
	deepEqual( Stem("olimpiadas"), "olimpi" );
	deepEqual( Stem("olímpica"), "olimp" );
	deepEqual( Stem("olímpico"), "olimp" );
	deepEqual( Stem("olímpicos"), "olimp" );
	deepEqual( Stem("olimpo"), "olimp" );
	deepEqual( Stem("olivares"), "olivar" );
	deepEqual( Stem("olivas"), "oliv" );
	deepEqual( Stem("oliver"), "oliv" );
	deepEqual( Stem("olivera"), "oliver" );
	deepEqual( Stem("oliveras"), "oliver" );
	deepEqual( Stem("oliverio"), "oliveri" );
	deepEqual( Stem("olivia"), "olivi" );
	deepEqual( Stem("olivier"), "olivi" );
	deepEqual( Stem("olivo"), "oliv" );
	deepEqual( Stem("ollas"), "ollas" );
	deepEqual( Stem("olloqui"), "olloqui" );
	deepEqual( Stem("olmedo"), "olmed" );
	deepEqual( Stem("olor"), "olor" );
	deepEqual( Stem("olores"), "olor" );
	deepEqual( Stem("olvera"), "olver" );
	deepEqual( Stem("olvida"), "olvid" );
	deepEqual( Stem("olvidada"), "olvid" );
	deepEqual( Stem("olvidadizo"), "olvidadiz" );
	deepEqual( Stem("olvidado"), "olvid" );
	deepEqual( Stem("olvidamos"), "olvid" );
	deepEqual( Stem("olvidan"), "olvid" );
	deepEqual( Stem("olvidando"), "olvid" );
	deepEqual( Stem("olvidándose"), "olvid" );
	deepEqual( Stem("olvidar"), "olvid" );
	deepEqual( Stem("olvidaron"), "olvid" );
	deepEqual( Stem("olvídese"), "olvides" );
	deepEqual( Stem("olvido"), "olvid" );
	deepEqual( Stem("olvidó"), "olvid" );
	deepEqual( Stem("omán"), "oman" );
	deepEqual( Stem("omaña"), "omañ" );
	deepEqual( Stem("omar"), "omar" );
	deepEqual( Stem("omb"), "omb" );
	deepEqual( Stem("ominoso"), "omin" );
	deepEqual( Stem("omiso"), "omis" );
	deepEqual( Stem("omiten"), "omit" );
	deepEqual( Stem("omitir"), "omit" );
	deepEqual( Stem("omito"), "omit" );
	deepEqual( Stem("ómnibus"), "omnibus" );
	deepEqual( Stem("omnimax"), "omnimax" );
	deepEqual( Stem("oñate"), "oñat" );
	deepEqual( Stem("once"), "once" );
	deepEqual( Stem("onceavo"), "onceav" );
	deepEqual( Stem("oncena"), "oncen" );
	deepEqual( Stem("onda"), "onda" );
	deepEqual( Stem("ondarza"), "ondarz" );
	deepEqual( Stem("ondas"), "ondas" );
	deepEqual( Stem("one"), "one" );
	deepEqual( Stem("onix"), "onix" );
	deepEqual( Stem("ontario"), "ontari" );
	deepEqual( Stem("ontiveros"), "ontiver" );
	deepEqual( Stem("onu"), "onu" );
	deepEqual( Stem("onzas"), "onzas" );
	deepEqual( Stem("opa"), "opa" );
	deepEqual( Stem("ópalos"), "opal" );
	deepEqual( Stem("opción"), "opcion" );
	deepEqual( Stem("opcionado"), "opcion" );
	deepEqual( Stem("opcional"), "opcional" );
	deepEqual( Stem("opciones"), "opcion" );
	deepEqual( Stem("opera"), "oper" );
	deepEqual( Stem("ópera"), "oper" );
	deepEqual( Stem("operaba"), "oper" );
	deepEqual( Stem("operación"), "oper" );
	deepEqual( Stem("operacionales"), "operacional" );
	deepEqual( Stem("operaciones"), "oper" );
	deepEqual( Stem("operada"), "oper" );
	deepEqual( Stem("operadas"), "oper" );
	deepEqual( Stem("operado"), "oper" );
	deepEqual( Stem("operador"), "oper" );
	deepEqual( Stem("operadora"), "oper" );
	deepEqual( Stem("operadoras"), "oper" );
	deepEqual( Stem("operadores"), "oper" );
	deepEqual( Stem("operados"), "oper" );
	deepEqual( Stem("operan"), "oper" );
	deepEqual( Stem("operando"), "oper" );
	deepEqual( Stem("operar"), "oper" );
	deepEqual( Stem("operará"), "oper" );
	deepEqual( Stem("operaría"), "oper" );
	deepEqual( Stem("operarios"), "operari" );
	deepEqual( Stem("operas"), "oper" );
	deepEqual( Stem("operation"), "operation" );
	deepEqual( Stem("operativa"), "oper" );
	deepEqual( Stem("operativas"), "oper" );
	deepEqual( Stem("operativo"), "oper" );
	deepEqual( Stem("operativos"), "oper" );
	deepEqual( Stem("operen"), "oper" );
	deepEqual( Stem("opina"), "opin" );
	deepEqual( Stem("opinaban"), "opin" );
	deepEqual( Stem("opinar"), "opin" );
	deepEqual( Stem("opinas"), "opin" );
	deepEqual( Stem("opinen"), "opin" );
	deepEqual( Stem("opinión"), "opinion" );
	deepEqual( Stem("opiniones"), "opinion" );
	deepEqual( Stem("opiniónfinanciera"), "opinionfinanc" );
	deepEqual( Stem("opino"), "opin" );
	deepEqual( Stem("opinó"), "opin" );
	deepEqual( Stem("opondrá"), "opondr" );
	deepEqual( Stem("opone"), "opon" );
	deepEqual( Stem("oponen"), "opon" );
	deepEqual( Stem("oponentes"), "oponent" );
	deepEqual( Stem("oponga"), "opong" );
	deepEqual( Stem("opongo"), "opong" );
	deepEqual( Stem("oponíamos"), "opon" );
	deepEqual( Stem("oportuna"), "oportun" );
	deepEqual( Stem("oportunamente"), "oportun" );
	deepEqual( Stem("oportunidad"), "oportun" );
	deepEqual( Stem("oportunidades"), "oportun" );
	deepEqual( Stem("oportuno"), "oportun" );
	deepEqual( Stem("oposición"), "oposicion" );
	deepEqual( Stem("opositor"), "opositor" );
	deepEqual( Stem("opositores"), "opositor" );
	deepEqual( Stem("oprimir"), "oprim" );
	deepEqual( Stem("opta"), "opta" );
	deepEqual( Stem("optaba"), "optab" );
	deepEqual( Stem("optar"), "optar" );
	deepEqual( Stem("optarse"), "optars" );
	deepEqual( Stem("optativo"), "optat" );
	deepEqual( Stem("óptica"), "optic" );
	deepEqual( Stem("ópticas"), "optic" );
	deepEqual( Stem("óptico"), "optic" );
	deepEqual( Stem("optimismo"), "optim" );
	deepEqual( Stem("optimista"), "optim" );
	deepEqual( Stem("optimistas"), "optim" );
	deepEqual( Stem("optimización"), "optimiz" );
	deepEqual( Stem("optimizar"), "optimiz" );
	deepEqual( Stem("óptimo"), "optim" );
	deepEqual( Stem("optó"), "opto" );
	deepEqual( Stem("opuesta"), "opuest" );
	deepEqual( Stem("opuesto"), "opuest" );
	deepEqual( Stem("opuestos"), "opuest" );
	deepEqual( Stem("opusieron"), "opus" );
	deepEqual( Stem("or"), "or" );
	deepEqual( Stem("oraciones"), "oracion" );
	deepEqual( Stem("orador"), "orador" );
	deepEqual( Stem("oral"), "oral" );
	deepEqual( Stem("oralia"), "orali" );
	deepEqual( Stem("oralmente"), "oral" );
	deepEqual( Stem("oramos"), "oram" );
	deepEqual( Stem("orangután"), "orangutan" );
	deepEqual( Stem("orangutanes"), "orangutan" );
	deepEqual( Stem("oraría"), "orar" );
	deepEqual( Stem("orbe"), "orbe" );
	deepEqual( Stem("órbita"), "orbit" );
	deepEqual( Stem("orbitar"), "orbit" );
	deepEqual( Stem("orco"), "orco" );
	deepEqual( Stem("ordás"), "ordas" );
	deepEqual( Stem("ordaz"), "ordaz" );
	deepEqual( Stem("orden"), "orden" );
	deepEqual( Stem("ordena"), "orden" );
	deepEqual( Stem("ordenaban"), "orden" );
	deepEqual( Stem("ordenada"), "orden" );
	deepEqual( Stem("ordenadas"), "orden" );
	deepEqual( Stem("ordenado"), "orden" );
	deepEqual( Stem("ordenamos"), "orden" );
	deepEqual( Stem("ordenar"), "orden" );
	deepEqual( Stem("ordeñarás"), "ordeñ" );
	deepEqual( Stem("ordenaron"), "orden" );
	deepEqual( Stem("ordene"), "orden" );
	deepEqual( Stem("ordenen"), "orden" );
	deepEqual( Stem("ordenes"), "orden" );
	deepEqual( Stem("órdenes"), "orden" );
	deepEqual( Stem("ordenó"), "orden" );
	deepEqual( Stem("ordiales"), "ordial" );
	deepEqual( Stem("ordinaria"), "ordinari" );
	deepEqual( Stem("ordinario"), "ordinari" );
	deepEqual( Stem("ordóñez"), "ordoñez" );
	deepEqual( Stem("orduño"), "orduñ" );
	deepEqual( Stem("orea"), "ore" );
	deepEqual( Stem("oregón"), "oregon" );
	deepEqual( Stem("oreja"), "orej" );
	deepEqual( Stem("orejas"), "orej" );
	deepEqual( Stem("orejeras"), "orejer" );
	deepEqual( Stem("orfebres"), "orfebr" );
	deepEqual( Stem("orgánicas"), "organ" );
	deepEqual( Stem("organice"), "organic" );
	deepEqual( Stem("organismo"), "organ" );
	deepEqual( Stem("organismos"), "organ" );
	deepEqual( Stem("organiza"), "organiz" );
	deepEqual( Stem("organización"), "organiz" );
	deepEqual( Stem("organizacional"), "organizacional" );
	deepEqual( Stem("organizaciones"), "organiz" );
	deepEqual( Stem("organizada"), "organiz" );
	deepEqual( Stem("organizadas"), "organiz" );
	deepEqual( Stem("organizado"), "organiz" );
	deepEqual( Stem("organizador"), "organiz" );
	deepEqual( Stem("organizadora"), "organiz" );
	deepEqual( Stem("organizadoras"), "organiz" );
	deepEqual( Stem("organizadores"), "organiz" );
	deepEqual( Stem("organizados"), "organiz" );
	deepEqual( Stem("organizamos"), "organiz" );
	deepEqual( Stem("organizan"), "organiz" );
	deepEqual( Stem("organizando"), "organiz" );
	deepEqual( Stem("organizar"), "organiz" );
	deepEqual( Stem("organizará"), "organiz" );
	deepEqual( Stem("organizaría"), "organiz" );
	deepEqual( Stem("organizaron"), "organiz" );
	deepEqual( Stem("organizarse"), "organiz" );
	deepEqual( Stem("organizativa"), "organiz" );
	deepEqual( Stem("organizó"), "organiz" );
	deepEqual( Stem("órgano"), "organ" );
	deepEqual( Stem("órganos"), "organ" );
	deepEqual( Stem("orgásmico"), "orgasm" );
	deepEqual( Stem("orgasmo"), "orgasm" );
	deepEqual( Stem("orgía"), "orgi" );
	deepEqual( Stem("orgullo"), "orgull" );
	deepEqual( Stem("orgullosa"), "orgull" );
	deepEqual( Stem("orgullosamente"), "orgull" );
	deepEqual( Stem("orgulloso"), "orgull" );
	deepEqual( Stem("orgullosos"), "orgull" );
	deepEqual( Stem("oriana"), "orian" );
	deepEqual( Stem("orienta"), "orient" );
	deepEqual( Stem("orientació"), "orientac" );
	deepEqual( Stem("orientación"), "orient" );
	deepEqual( Stem("orientada"), "orient" );
	deepEqual( Stem("orientadas"), "orient" );
	deepEqual( Stem("orientado"), "orient" );
	deepEqual( Stem("orientadoras"), "orient" );
	deepEqual( Stem("orientadores"), "orient" );
	deepEqual( Stem("orientados"), "orient" );
	deepEqual( Stem("oriental"), "oriental" );
	deepEqual( Stem("orientales"), "oriental" );
	deepEqual( Stem("orientan"), "orient" );
	deepEqual( Stem("orientando"), "orient" );
	deepEqual( Stem("orientar"), "orient" );
	deepEqual( Stem("orientarte"), "orientart" );
	deepEqual( Stem("oriente"), "orient" );
	deepEqual( Stem("origen"), "orig" );
	deepEqual( Stem("orígenes"), "origen" );
	deepEqual( Stem("origina"), "origin" );
	deepEqual( Stem("originada"), "origin" );
	deepEqual( Stem("originadas"), "origin" );
	deepEqual( Stem("originado"), "origin" );
	deepEqual( Stem("originados"), "origin" );
	deepEqual( Stem("original"), "original" );
	deepEqual( Stem("originales"), "original" );
	deepEqual( Stem("originalidad"), "original" );
	deepEqual( Stem("originalmente"), "original" );
	deepEqual( Stem("originan"), "origin" );
	deepEqual( Stem("originando"), "origin" );
	deepEqual( Stem("originar"), "origin" );
	deepEqual( Stem("originará"), "origin" );
	deepEqual( Stem("originario"), "originari" );
	deepEqual( Stem("originarios"), "originari" );
	deepEqual( Stem("originarla"), "origin" );
	deepEqual( Stem("originaron"), "origin" );
	deepEqual( Stem("origine"), "origin" );
	deepEqual( Stem("originó"), "origin" );
	deepEqual( Stem("orilla"), "orill" );
	deepEqual( Stem("orillando"), "orill" );
	deepEqual( Stem("orillar"), "orill" );
	deepEqual( Stem("orillas"), "orill" );
	deepEqual( Stem("orilló"), "orill" );
	deepEqual( Stem("orina"), "orin" );
	deepEqual( Stem("orinar"), "orin" );
	deepEqual( Stem("orioles"), "oriol" );
	deepEqual( Stem("orishas"), "orish" );
	deepEqual( Stem("orizaba"), "oriz" );
	deepEqual( Stem("orlando"), "orland" );
	deepEqual( Stem("ornelas"), "ornel" );
	deepEqual( Stem("ornellas"), "ornell" );
	deepEqual( Stem("oro"), "oro" );
	deepEqual( Stem("oroinia"), "oroini" );
	deepEqual( Stem("oropel"), "oropel" );
	deepEqual( Stem("oropeza"), "oropez" );
	deepEqual( Stem("orozco"), "orozc" );
	deepEqual( Stem("orozquiana"), "orozquian" );
	deepEqual( Stem("orquesta"), "orquest" );
	deepEqual( Stem("orquestas"), "orquest" );
	deepEqual( Stem("orta"), "orta" );
	deepEqual( Stem("ortega"), "orteg" );
	deepEqual( Stem("ortigoza"), "ortigoz" );
	deepEqual( Stem("ortiz"), "ortiz" );
	deepEqual( Stem("ortíz"), "ortiz" );
	deepEqual( Stem("ortodoxa"), "ortodox" );
	deepEqual( Stem("ortodoxas"), "ortodox" );
	deepEqual( Stem("ortodoxia"), "ortodoxi" );
	deepEqual( Stem("ortografía"), "ortograf" );
	deepEqual( Stem("ortopedia"), "ortopedi" );
	deepEqual( Stem("orven"), "orven" );
	deepEqual( Stem("orwell"), "orwell" );
	deepEqual( Stem("os"), "os" );
	deepEqual( Stem("osadía"), "osad" );
	deepEqual( Stem("osados"), "osad" );
	deepEqual( Stem("osaka"), "osak" );
	deepEqual( Stem("osasuna"), "osasun" );
	deepEqual( Stem("oscar"), "oscar" );
	deepEqual( Stem("oscila"), "oscil" );
	deepEqual( Stem("oscilaba"), "oscil" );
	deepEqual( Stem("oscilaciones"), "oscil" );
	deepEqual( Stem("oscilan"), "oscil" );
	deepEqual( Stem("oscura"), "oscur" );
	deepEqual( Stem("oscuras"), "oscur" );
	deepEqual( Stem("oscurecer"), "oscurec" );
	deepEqual( Stem("oscuridad"), "oscur" );
	deepEqual( Stem("oscuro"), "oscur" );
	deepEqual( Stem("oscuros"), "oscur" );
	deepEqual( Stem("osorio"), "osori" );
	deepEqual( Stem("osos"), "osos" );
	deepEqual( Stem("osservatore"), "osservator" );
	deepEqual( Stem("ostensible"), "ostens" );
	deepEqual( Stem("ostensiblemente"), "ostens" );
	deepEqual( Stem("ostenta"), "ostent" );
	deepEqual( Stem("ostentar"), "ostent" );
	deepEqual( Stem("osuna"), "osun" );
	deepEqual( Stem("osvaldo"), "osvald" );
	deepEqual( Stem("oswald"), "oswald" );
	deepEqual( Stem("oswaldo"), "oswald" );
	deepEqual( Stem("otáez"), "otaez" );
	deepEqual( Stem("otan"), "otan" );
	deepEqual( Stem("ote"), "ote" );
	deepEqual( Stem("oteando"), "ote" );
	deepEqual( Stem("othon"), "othon" );
	deepEqual( Stem("othón"), "othon" );
	deepEqual( Stem("otila"), "otil" );
	deepEqual( Stem("otilia"), "otili" );
	deepEqual( Stem("otitis"), "otitis" );
	deepEqual( Stem("otoño"), "otoñ" );
	deepEqual( Stem("otorga"), "otorg" );
	deepEqual( Stem("otorgada"), "otorg" );
	deepEqual( Stem("otorgadas"), "otorg" );
	deepEqual( Stem("otorgado"), "otorg" );
	deepEqual( Stem("otorgados"), "otorg" );
	deepEqual( Stem("otorgamiento"), "otorg" );
	deepEqual( Stem("otorgan"), "otorg" );
	deepEqual( Stem("otorgando"), "otorg" );
	deepEqual( Stem("otorgar"), "otorg" );
	deepEqual( Stem("otorgará"), "otorg" );
	deepEqual( Stem("otorgaran"), "otorg" );
	deepEqual( Stem("otorgarán"), "otorg" );
	deepEqual( Stem("otorgarle"), "otorg" );
	deepEqual( Stem("otorgarles"), "otorg" );
	deepEqual( Stem("otorgarnos"), "otorg" );
	deepEqual( Stem("otorgaron"), "otorg" );
	deepEqual( Stem("otorgó"), "otorg" );
	deepEqual( Stem("otorguen"), "otorg" );
	deepEqual( Stem("otra"), "otra" );
	deepEqual( Stem("otras"), "otras" );
	deepEqual( Stem("otro"), "otro" );
	deepEqual( Stem("otrora"), "otror" );
	deepEqual( Stem("otros"), "otros" );
	deepEqual( Stem("ottawa"), "ottaw" );
	deepEqual( Stem("ottey"), "ottey" );
	deepEqual( Stem("otto"), "otto" );
	deepEqual( Stem("out"), "out" );
	deepEqual( Stem("outs"), "outs" );
	deepEqual( Stem("ovación"), "ovacion" );
	deepEqual( Stem("ovacionada"), "ovacion" );
	deepEqual( Stem("ovacionado"), "ovacion" );
	deepEqual( Stem("ovacionados"), "ovacion" );
	deepEqual( Stem("ovacionan"), "ovacion" );
	deepEqual( Stem("ovacionarlo"), "ovacion" );
	deepEqual( Stem("ovaciones"), "ovacion" );
	deepEqual( Stem("ovacionó"), "ovacion" );
	deepEqual( Stem("oval"), "oval" );
	deepEqual( Stem("ovalle"), "ovall" );
	deepEqual( Stem("ovejas"), "ovej" );
	deepEqual( Stem("over"), "over" );
	deepEqual( Stem("ovidio"), "ovidi" );
	deepEqual( Stem("oviedo"), "ovied" );
	deepEqual( Stem("ovoide"), "ovoid" );
	deepEqual( Stem("ovulación"), "ovul" );
	deepEqual( Stem("owen"), "owen" );
	deepEqual( Stem("oxford"), "oxford" );
	deepEqual( Stem("oxida"), "oxid" );
	deepEqual( Stem("oxidando"), "oxid" );
	deepEqual( Stem("oxidar"), "oxid" );
	deepEqual( Stem("óxidos"), "oxid" );
	deepEqual( Stem("oxígeno"), "oxigen" );
	deepEqual( Stem("oxxo"), "oxxo" );
	deepEqual( Stem("oyen"), "oyen" );
	deepEqual( Stem("oyentes"), "oyent" );
	deepEqual( Stem("oyeran"), "oyer" );
	deepEqual( Stem("oyó"), "oyo" );
	deepEqual( Stem("oziel"), "oziel" );
	deepEqual( Stem("ozono"), "ozon" );
	deepEqual( Stem("p"), "p" );
	deepEqual( Stem("pa"), "pa" );
	deepEqual( Stem("pabellón"), "pabellon" );
	deepEqual( Stem("pabilos"), "pabil" );
	deepEqual( Stem("pablo"), "pabl" );
	deepEqual( Stem("pacheco"), "pachec" );
	deepEqual( Stem("pacho"), "pach" );
	deepEqual( Stem("pachoneos"), "pachone" );
	deepEqual( Stem("pachuca"), "pachuc" );
	deepEqual( Stem("paciencia"), "pacienci" );
	deepEqual( Stem("paciente"), "pacient" );
	deepEqual( Stem("pacientes"), "pacient" );
	deepEqual( Stem("pacífica"), "pacif" );
	deepEqual( Stem("pacifico"), "pacif" );
	deepEqual( Stem("pacífico"), "pacif" );
	deepEqual( Stem("packaged"), "packag" );
	deepEqual( Stem("packard"), "packard" );
	deepEqual( Stem("paco"), "pac" );
	deepEqual( Stem("pactada"), "pact" );
	deepEqual( Stem("pactarán"), "pact" );
	deepEqual( Stem("pacto"), "pact" );
	deepEqual( Stem("pactó"), "pact" );
	deepEqual( Stem("padece"), "padec" );
	deepEqual( Stem("padecemos"), "padec" );
	deepEqual( Stem("padecen"), "padec" );
	deepEqual( Stem("padecer"), "padec" );
	deepEqual( Stem("padeciendo"), "padec" );
	deepEqual( Stem("padecieron"), "padec" );
	deepEqual( Stem("padecimiento"), "padec" );
	deepEqual( Stem("padecimientos"), "padec" );
	deepEqual( Stem("padilla"), "padill" );
	deepEqual( Stem("padre"), "padr" );
	deepEqual( Stem("padrecito"), "padrecit" );
	deepEqual( Stem("padres"), "padr" );
	deepEqual( Stem("padrino"), "padrin" );
	deepEqual( Stem("padró"), "padr" );
	deepEqual( Stem("padrón"), "padron" );
	deepEqual( Stem("padrones"), "padron" );
	deepEqual( Stem("páez"), "paez" );
	deepEqual( Stem("pag"), "pag" );
	deepEqual( Stem("pág"), "pag" );
	deepEqual( Stem("paga"), "pag" );
	deepEqual( Stem("pagaba"), "pag" );
	deepEqual( Stem("pagadas"), "pag" );
	deepEqual( Stem("pagado"), "pag" );
	deepEqual( Stem("pagados"), "pag" );
	deepEqual( Stem("pagamos"), "pag" );
	deepEqual( Stem("pagan"), "pag" );
	deepEqual( Stem("pagando"), "pag" );
	deepEqual( Stem("paganismo"), "pagan" );
	deepEqual( Stem("pagano"), "pagan" );
	deepEqual( Stem("paganos"), "pagan" );
	deepEqual( Stem("pagar"), "pag" );
	deepEqual( Stem("pagara"), "pag" );
	deepEqual( Stem("pagará"), "pag" );
	deepEqual( Stem("pagaran"), "pag" );
	deepEqual( Stem("pagarán"), "pag" );
	deepEqual( Stem("pagarían"), "pag" );
	deepEqual( Stem("pagarla"), "pag" );
	deepEqual( Stem("pagarle"), "pag" );
	deepEqual( Stem("pagarnos"), "pag" );
	deepEqual( Stem("pagaron"), "pag" );
	deepEqual( Stem("pagarte"), "pagart" );
	deepEqual( Stem("página"), "pagin" );
	deepEqual( Stem("páginas"), "pagin" );
	deepEqual( Stem("pago"), "pag" );
	deepEqual( Stem("pagó"), "pag" );
	deepEqual( Stem("pagos"), "pag" );
	deepEqual( Stem("pague"), "pag" );
	deepEqual( Stem("paguen"), "pag" );
	deepEqual( Stem("país"), "pais" );
	deepEqual( Stem("paisaje"), "paisaj" );
	deepEqual( Stem("paisajes"), "paisaj" );
	deepEqual( Stem("paisajista"), "paisaj" );
	deepEqual( Stem("paisajístico"), "paisajist" );
	deepEqual( Stem("paises"), "pais" );
	deepEqual( Stem("países"), "pais" );
	deepEqual( Stem("paja"), "paj" );
	deepEqual( Stem("pájaro"), "pajar" );
	deepEqual( Stem("pájaros"), "pajar" );
	deepEqual( Stem("pala"), "pal" );
	deepEqual( Stem("palabra"), "palabr" );
	deepEqual( Stem("palabras"), "palabr" );
	deepEqual( Stem("palabrería"), "palabr" );
	deepEqual( Stem("palacetes"), "palacet" );
	deepEqual( Stem("palacio"), "palaci" );
	deepEqual( Stem("palacios"), "palaci" );
	deepEqual( Stem("paladar"), "palad" );
	deepEqual( Stem("palanca"), "palanc" );
	deepEqual( Stem("palapa"), "palap" );
	deepEqual( Stem("palas"), "pal" );
	deepEqual( Stem("palaú"), "palau" );
	deepEqual( Stem("palazuelos"), "palazuel" );
	deepEqual( Stem("palco"), "palc" );
	deepEqual( Stem("palcos"), "palc" );
	deepEqual( Stem("pale"), "pal" );
	deepEqual( Stem("palencia"), "palenci" );
	deepEqual( Stem("palenque"), "palenqu" );
	deepEqual( Stem("palenques"), "palenqu" );
	deepEqual( Stem("paleros"), "paler" );
	deepEqual( Stem("palestino"), "palestin" );
	deepEqual( Stem("palestinos"), "palestin" );
	deepEqual( Stem("palestra"), "palestr" );
	deepEqual( Stem("paletones"), "paleton" );
	deepEqual( Stem("pálido"), "pal" );
	deepEqual( Stem("palillo"), "palill" );
	deepEqual( Stem("paliza"), "paliz" );
	deepEqual( Stem("palm"), "palm" );
	deepEqual( Stem("palma"), "palm" );
	deepEqual( Stem("palmas"), "palm" );
	deepEqual( Stem("palmeras"), "palmer" );
	deepEqual( Stem("palmitos"), "palmit" );
	deepEqual( Stem("palo"), "pal" );
	deepEqual( Stem("paloma"), "palom" );
	deepEqual( Stem("palomas"), "palom" );
	deepEqual( Stem("palomilla"), "palomill" );
	deepEqual( Stem("palomitas"), "palomit" );
	deepEqual( Stem("palomo"), "palom" );
	deepEqual( Stem("palos"), "pal" );
	deepEqual( Stem("palou"), "palou" );
	deepEqual( Stem("palpable"), "palpabl" );
	deepEqual( Stem("pam"), "pam" );
	deepEqual( Stem("pamela"), "pamel" );
	deepEqual( Stem("pampas"), "pamp" );
	deepEqual( Stem("pamplona"), "pamplon" );
	deepEqual( Stem("pan"), "pan" );
	deepEqual( Stem("pana"), "pan" );
	deepEqual( Stem("panacea"), "panace" );
	deepEqual( Stem("panadería"), "panad" );
	deepEqual( Stem("pañales"), "pañal" );
	deepEqual( Stem("panamá"), "panam" );
	deepEqual( Stem("panameño"), "panameñ" );
	deepEqual( Stem("panamericana"), "panamerican" );
	deepEqual( Stem("panamericanos"), "panamerican" );
	deepEqual( Stem("pancarta"), "pancart" );
	deepEqual( Stem("pancartas"), "pancart" );
	deepEqual( Stem("pancho"), "panch" );
	deepEqual( Stem("pancracio"), "pancraci" );
	deepEqual( Stem("pancrasio"), "pancrasi" );
	deepEqual( Stem("pandilla"), "pandill" );
	deepEqual( Stem("pandillas"), "pandill" );
	deepEqual( Stem("pandilleril"), "pandilleril" );
	deepEqual( Stem("pandillerismo"), "pandiller" );
	deepEqual( Stem("pandillero"), "pandiller" );
	deepEqual( Stem("pandilleros"), "pandiller" );
	deepEqual( Stem("panecillos"), "panecill" );
	deepEqual( Stem("panel"), "panel" );
	deepEqual( Stem("paneles"), "panel" );
	deepEqual( Stem("panes"), "pan" );
	deepEqual( Stem("paniagua"), "paniagu" );
	deepEqual( Stem("pánico"), "panic" );
	deepEqual( Stem("panista"), "panist" );
	deepEqual( Stem("panistas"), "panist" );
	deepEqual( Stem("panorama"), "panoram" );
	deepEqual( Stem("panorámicas"), "panoram" );
	deepEqual( Stem("panorámicos"), "panoram" );
	deepEqual( Stem("panqué"), "panqu" );
	deepEqual( Stem("pantalla"), "pantall" );
	deepEqual( Stem("pantallas"), "pantall" );
	deepEqual( Stem("pantalón"), "pantalon" );
	deepEqual( Stem("pantalones"), "pantalon" );
	deepEqual( Stem("panteón"), "panteon" );
	deepEqual( Stem("panteones"), "panteon" );
	deepEqual( Stem("panteras"), "panter" );
	deepEqual( Stem("pantorrilla"), "pantorrill" );
	deepEqual( Stem("pantro"), "pantr" );
	deepEqual( Stem("pants"), "pants" );
	deepEqual( Stem("pañuelos"), "pañuel" );
	deepEqual( Stem("panzas"), "panz" );
	deepEqual( Stem("paola"), "paol" );
	deepEqual( Stem("papa"), "pap" );
	deepEqual( Stem("papá"), "pap" );
	deepEqual( Stem("papal"), "papal" );
	deepEqual( Stem("papalotla"), "papalotl" );
	deepEqual( Stem("papás"), "papas" );
	deepEqual( Stem("papasquiaroa"), "papasquiaro" );
	deepEqual( Stem("papel"), "papel" );
	deepEqual( Stem("papelería"), "papel" );
	deepEqual( Stem("papelerías"), "papel" );
	deepEqual( Stem("papeles"), "papel" );
	deepEqual( Stem("papitas"), "papit" );
	deepEqual( Stem("paquete"), "paquet" );
	deepEqual( Stem("paquetería"), "paquet" );
	deepEqual( Stem("paquetes"), "paquet" );
	deepEqual( Stem("paquiro"), "paquir" );
	deepEqual( Stem("par"), "par" );
	deepEqual( Stem("para"), "par" );
	deepEqual( Stem("paraba"), "par" );
	deepEqual( Stem("parabólicas"), "parabol" );
	deepEqual( Stem("parabrisas"), "parabris" );
	deepEqual( Stem("paracaídas"), "paracaid" );
	deepEqual( Stem("parada"), "par" );
	deepEqual( Stem("paradas"), "par" );
	deepEqual( Stem("parado"), "par" );
	deepEqual( Stem("paradojas"), "paradoj" );
	deepEqual( Stem("paradójicamente"), "paradoj" );
	deepEqual( Stem("parados"), "par" );
	deepEqual( Stem("paraestatal"), "paraestatal" );
	deepEqual( Stem("parafinas"), "parafin" );
	deepEqual( Stem("parafraseando"), "parafras" );
	deepEqual( Stem("paráfrasis"), "parafrasis" );
	deepEqual( Stem("paraguay"), "paraguay" );
	deepEqual( Stem("paraguayo"), "paraguay" );
	deepEqual( Stem("paraíso"), "parais" );
	deepEqual( Stem("paraje"), "paraj" );
	deepEqual( Stem("paralela"), "paralel" );
	deepEqual( Stem("paralelamente"), "paralel" );
	deepEqual( Stem("paralelas"), "paralel" );
	deepEqual( Stem("paralelismo"), "paralel" );
	deepEqual( Stem("paralelo"), "paralel" );
	deepEqual( Stem("paralelos"), "paralel" );
	deepEqual( Stem("parálisis"), "paralisis" );
	deepEqual( Stem("paralítico"), "paralit" );
	deepEqual( Stem("paralizan"), "paraliz" );
	deepEqual( Stem("paralizando"), "paraliz" );
	deepEqual( Stem("paralizante"), "paraliz" );
	deepEqual( Stem("paralizar"), "paraliz" );
	deepEqual( Stem("paralizaron"), "paraliz" );
	deepEqual( Stem("paralizó"), "paraliz" );
	deepEqual( Stem("parámetro"), "parametr" );
	deepEqual( Stem("parámetros"), "parametr" );
	deepEqual( Stem("paran"), "par" );
	deepEqual( Stem("parando"), "par" );
	deepEqual( Stem("paraninfo"), "paraninf" );
	deepEqual( Stem("parar"), "par" );
	deepEqual( Stem("parara"), "par" );
	deepEqual( Stem("pararme"), "par" );
	deepEqual( Stem("pararse"), "par" );
	deepEqual( Stem("parás"), "paras" );
	deepEqual( Stem("parcial"), "parcial" );
	deepEqual( Stem("parciales"), "parcial" );
	deepEqual( Stem("parcialidad"), "parcial" );
	deepEqual( Stem("parcialmente"), "parcial" );
	deepEqual( Stem("parece"), "parec" );
	deepEqual( Stem("parecemos"), "parec" );
	deepEqual( Stem("parecen"), "parec" );
	deepEqual( Stem("parecer"), "parec" );
	deepEqual( Stem("parecería"), "parec" );
	deepEqual( Stem("parecerían"), "parec" );
	deepEqual( Stem("parecerse"), "parec" );
	deepEqual( Stem("parecía"), "parec" );
	deepEqual( Stem("parecían"), "parec" );
	deepEqual( Stem("parecida"), "parec" );
	deepEqual( Stem("parecidas"), "parec" );
	deepEqual( Stem("parecido"), "parec" );
	deepEqual( Stem("pareciendo"), "parec" );
	deepEqual( Stem("parecieron"), "parec" );
	deepEqual( Stem("pareciese"), "parec" );
	deepEqual( Stem("pareció"), "parec" );
	deepEqual( Stem("pared"), "par" );
	deepEqual( Stem("paredes"), "pared" );
	deepEqual( Stem("pareja"), "parej" );
	deepEqual( Stem("parejas"), "parej" );
	deepEqual( Stem("parejos"), "parej" );
	deepEqual( Stem("paremos"), "par" );
	deepEqual( Stem("paréntesis"), "parentesis" );
	deepEqual( Stem("pares"), "par" );
	deepEqual( Stem("parezca"), "parezc" );
	deepEqual( Stem("parga"), "parg" );
	deepEqual( Stem("pariente"), "parient" );
	deepEqual( Stem("parientes"), "parient" );
	deepEqual( Stem("parietal"), "parietal" );
	deepEqual( Stem("paris"), "paris" );
	deepEqual( Stem("parís"), "par" );
	deepEqual( Stem("parisino"), "parisin" );
	deepEqual( Stem("park"), "park" );
	deepEqual( Stem("parkas"), "park" );
	deepEqual( Stem("parker"), "park" );
	deepEqual( Stem("parlamentaria"), "parlamentari" );
	deepEqual( Stem("parlamentarias"), "parlamentari" );
	deepEqual( Stem("parlamentario"), "parlamentari" );
	deepEqual( Stem("parlamentarios"), "parlamentari" );
	deepEqual( Stem("parlamento"), "parlament" );
	deepEqual( Stem("parm"), "parm" );
	deepEqual( Stem("parmista"), "parmist" );
	deepEqual( Stem("paro"), "par" );
	deepEqual( Stem("paró"), "par" );
	deepEqual( Stem("parodiando"), "parodi" );
	deepEqual( Stem("paros"), "par" );
	deepEqual( Stem("párpados"), "parp" );
	deepEqual( Stem("parque"), "parqu" );
	deepEqual( Stem("parquedad"), "parqued" );
	deepEqual( Stem("parques"), "parqu" );
	deepEqual( Stem("parquimetrero"), "parquimetrer" );
	deepEqual( Stem("parquímetro"), "parquimetr" );
	deepEqual( Stem("parquímetros"), "parquimetr" );
	deepEqual( Stem("parra"), "parr" );
	deepEqual( Stem("párrafo"), "parraf" );
	deepEqual( Stem("parranda"), "parrand" );
	deepEqual( Stem("parricidas"), "parric" );
	deepEqual( Stem("parricidio"), "parricidi" );
	deepEqual( Stem("parrilla"), "parrill" );
	deepEqual( Stem("párroco"), "parroc" );
	deepEqual( Stem("parroquia"), "parroqui" );
	deepEqual( Stem("parroquiales"), "parroquial" );
	deepEqual( Stem("parroquiano"), "parroquian" );
	deepEqual( Stem("parroquias"), "parroqui" );
	deepEqual( Stem("parsons"), "parsons" );
	deepEqual( Stem("parte"), "part" );
	deepEqual( Stem("parteaguas"), "parteagu" );
	deepEqual( Stem("parten"), "part" );
	deepEqual( Stem("partes"), "part" );
	deepEqual( Stem("participa"), "particip" );
	deepEqual( Stem("participaba"), "particip" );
	deepEqual( Stem("participaban"), "particip" );
	deepEqual( Stem("participación"), "particip" );
	deepEqual( Stem("participaciones"), "particip" );
	deepEqual( Stem("participado"), "particip" );
	deepEqual( Stem("participamos"), "particip" );
	deepEqual( Stem("participan"), "particip" );
	deepEqual( Stem("participando"), "particip" );
	deepEqual( Stem("participante"), "particip" );
	deepEqual( Stem("participantes"), "particip" );
	deepEqual( Stem("participar"), "particip" );
	deepEqual( Stem("participara"), "particip" );
	deepEqual( Stem("participará"), "particip" );
	deepEqual( Stem("participarán"), "particip" );
	deepEqual( Stem("participarían"), "particip" );
	deepEqual( Stem("participaron"), "particip" );
	deepEqual( Stem("participativos"), "particip" );
	deepEqual( Stem("participe"), "particip" );
	deepEqual( Stem("participen"), "particip" );
	deepEqual( Stem("partícipes"), "particip" );
	deepEqual( Stem("participó"), "particip" );
	deepEqual( Stem("particular"), "particul" );
	deepEqual( Stem("particulares"), "particular" );
	deepEqual( Stem("particularmente"), "particular" );
	deepEqual( Stem("partículas"), "particul" );
	deepEqual( Stem("partida"), "part" );
	deepEqual( Stem("partidaria"), "partidari" );
	deepEqual( Stem("partidario"), "partidari" );
	deepEqual( Stem("partidarios"), "partidari" );
	deepEqual( Stem("partidas"), "part" );
	deepEqual( Stem("partidazo"), "partidaz" );
	deepEqual( Stem("partidero"), "partider" );
	deepEqual( Stem("partidistas"), "partid" );
	deepEqual( Stem("partido"), "part" );
	deepEqual( Stem("partidos"), "part" );
	deepEqual( Stem("partiendo"), "part" );
	deepEqual( Stem("partiera"), "part" );
	deepEqual( Stem("partieron"), "part" );
	deepEqual( Stem("partió"), "part" );
	deepEqual( Stem("partir"), "part" );
	deepEqual( Stem("partirá"), "part" );
	deepEqual( Stem("partirán"), "part" );
	deepEqual( Stem("parto"), "part" );
	deepEqual( Stem("partos"), "part" );
	deepEqual( Stem("parturienta"), "parturient" );
	deepEqual( Stem("parvada"), "parv" );
	deepEqual( Stem("pasa"), "pas" );
	deepEqual( Stem("pasaba"), "pas" );
	deepEqual( Stem("pasaban"), "pas" );
	deepEqual( Stem("pasacassettes"), "pasacassett" );
	deepEqual( Stem("pasada"), "pas" );
	deepEqual( Stem("pasadas"), "pas" );
	deepEqual( Stem("pasado"), "pas" );
	deepEqual( Stem("pasadores"), "pasador" );
	deepEqual( Stem("pasados"), "pas" );
	deepEqual( Stem("pasaje"), "pasaj" );
	deepEqual( Stem("pasajera"), "pasajer" );
	deepEqual( Stem("pasajeros"), "pasajer" );
	deepEqual( Stem("pasajes"), "pasaj" );
	deepEqual( Stem("pasamayo"), "pasamay" );
	deepEqual( Stem("pasamos"), "pas" );
	deepEqual( Stem("pasan"), "pas" );
	deepEqual( Stem("pasando"), "pas" );
	deepEqual( Stem("pasante"), "pasant" );
	deepEqual( Stem("pasaporte"), "pasaport" );
	deepEqual( Stem("pasar"), "pas" );
	deepEqual( Stem("pasara"), "pas" );
	deepEqual( Stem("pasará"), "pas" );
	deepEqual( Stem("pasarán"), "pas" );
	deepEqual( Stem("pasarela"), "pasarel" );
	deepEqual( Stem("pasarelas"), "pasarel" );
	deepEqual( Stem("pasaría"), "pas" );
	deepEqual( Stem("pasarían"), "pas" );
	deepEqual( Stem("pasarle"), "pas" );
	deepEqual( Stem("pasarles"), "pas" );
	deepEqual( Stem("pasaron"), "pas" );
	deepEqual( Stem("pasarse"), "pas" );
	deepEqual( Stem("pasatiempo"), "pasatiemp" );
	deepEqual( Stem("pascal"), "pascal" );
	deepEqual( Stem("pasco"), "pasc" );
	deepEqual( Stem("pascua"), "pascu" );
	deepEqual( Stem("pascual"), "pascual" );
	deepEqual( Stem("pascuense"), "pascuens" );
	deepEqual( Stem("pase"), "pas" );
	deepEqual( Stem("pasé"), "pas" );
	deepEqual( Stem("pasean"), "pas" );
	deepEqual( Stem("pasear"), "pas" );
	deepEqual( Stem("pasearon"), "pas" );
	deepEqual( Stem("pásele"), "pasel" );
	deepEqual( Stem("pasen"), "pas" );
	deepEqual( Stem("paseño"), "paseñ" );
	deepEqual( Stem("paseo"), "pase" );
	deepEqual( Stem("paseó"), "pase" );
	deepEqual( Stem("paseos"), "pase" );
	deepEqual( Stem("pases"), "pas" );
	deepEqual( Stem("pasillo"), "pasill" );
	deepEqual( Stem("pasillos"), "pasill" );
	deepEqual( Stem("pasión"), "pasion" );
	deepEqual( Stem("pasional"), "pasional" );
	deepEqual( Stem("pasiones"), "pasion" );
	deepEqual( Stem("pasiva"), "pasiv" );
	deepEqual( Stem("pasivo"), "pasiv" );
	deepEqual( Stem("pasivos"), "pasiv" );
	deepEqual( Stem("paso"), "pas" );
	deepEqual( Stem("pasó"), "pas" );
	deepEqual( Stem("pasos"), "pas" );
	deepEqual( Stem("pasquinal"), "pasquinal" );
	deepEqual( Stem("passarella"), "passarell" );
	deepEqual( Stem("pasta"), "past" );
	deepEqual( Stem("pastillas"), "pastill" );
	deepEqual( Stem("pasto"), "past" );
	deepEqual( Stem("pastor"), "pastor" );
	deepEqual( Stem("pastora"), "pastor" );
	deepEqual( Stem("pastoral"), "pastoral" );
	deepEqual( Stem("pastoriza"), "pastoriz" );
	deepEqual( Stem("pata"), "pat" );
	deepEqual( Stem("patadas"), "pat" );
	deepEqual( Stem("patas"), "pat" );
	deepEqual( Stem("pateadores"), "pateador" );
	deepEqual( Stem("patearon"), "pat" );
	deepEqual( Stem("patentara"), "patent" );
	deepEqual( Stem("patentarlo"), "patent" );
	deepEqual( Stem("patente"), "patent" );
	deepEqual( Stem("patentes"), "patent" );
	deepEqual( Stem("paternal"), "paternal" );
	deepEqual( Stem("paternalismo"), "paternal" );
	deepEqual( Stem("paternalista"), "paternal" );
	deepEqual( Stem("paternalistas"), "paternal" );
	deepEqual( Stem("paternos"), "pat" );
	deepEqual( Stem("patéticamente"), "patet" );
	deepEqual( Stem("patéticos"), "patet" );
	deepEqual( Stem("path"), "path" );
	deepEqual( Stem("patinamos"), "patin" );
	deepEqual( Stem("patiñazo"), "patiñaz" );
	deepEqual( Stem("patiño"), "patiñ" );
	deepEqual( Stem("patio"), "pati" );
	deepEqual( Stem("patito"), "patit" );
	deepEqual( Stem("pato"), "pat" );
	deepEqual( Stem("patológico"), "patolog" );
	deepEqual( Stem("patos"), "pat" );
	deepEqual( Stem("patria"), "patri" );
	deepEqual( Stem("patriarca"), "patriarc" );
	deepEqual( Stem("patriarcas"), "patriarc" );
	deepEqual( Stem("patricia"), "patrici" );
	deepEqual( Stem("patricio"), "patrici" );
	deepEqual( Stem("patricios"), "patrici" );
	deepEqual( Stem("patrick"), "patrick" );
	deepEqual( Stem("patrimonial"), "patrimonial" );
	deepEqual( Stem("patrimoniales"), "patrimonial" );
	deepEqual( Stem("patrimonio"), "patrimoni" );
	deepEqual( Stem("patrio"), "patri" );
	deepEqual( Stem("patrios"), "patri" );
	deepEqual( Stem("patriot"), "patriot" );
	deepEqual( Stem("patrocinada"), "patrocin" );
	deepEqual( Stem("patrocinado"), "patrocin" );
	deepEqual( Stem("patrocinador"), "patrocin" );
	deepEqual( Stem("patrocinadores"), "patrocin" );
	deepEqual( Stem("patrocinio"), "patrocini" );
	deepEqual( Stem("patrón"), "patron" );
	deepEqual( Stem("patrona"), "patron" );
	deepEqual( Stem("patronal"), "patronal" );
	deepEqual( Stem("patronales"), "patronal" );
	deepEqual( Stem("patronato"), "patronat" );
	deepEqual( Stem("patrones"), "patron" );
	deepEqual( Stem("patrulla"), "patrull" );
	deepEqual( Stem("patrullas"), "patrull" );
	deepEqual( Stem("patrulleros"), "patruller" );
	deepEqual( Stem("patty"), "patty" );
	deepEqual( Stem("paty"), "paty" );
	deepEqual( Stem("paul"), "paul" );
	deepEqual( Stem("paúl"), "paul" );
	deepEqual( Stem("paulatina"), "paulatin" );
	deepEqual( Stem("paulatinamente"), "paulatin" );
	deepEqual( Stem("paulatino"), "paulatin" );
	deepEqual( Stem("paulina"), "paulin" );
	deepEqual( Stem("paulino"), "paulin" );
	deepEqual( Stem("paullada"), "paull" );
	deepEqual( Stem("paulo"), "paul" );
	deepEqual( Stem("pausa"), "paus" );
	deepEqual( Stem("pausada"), "paus" );
	deepEqual( Stem("pausadamente"), "pausad" );
	deepEqual( Stem("pausas"), "paus" );
	deepEqual( Stem("pauta"), "paut" );
	deepEqual( Stem("pavimentación"), "paviment" );
	deepEqual( Stem("pavimentada"), "paviment" );
	deepEqual( Stem("pavimentado"), "paviment" );
	deepEqual( Stem("pavimentados"), "paviment" );
	deepEqual( Stem("pavimentar"), "paviment" );
	deepEqual( Stem("pavimento"), "paviment" );
	deepEqual( Stem("pavor"), "pavor" );
	deepEqual( Stem("payán"), "payan" );
	deepEqual( Stem("payasadas"), "payas" );
	deepEqual( Stem("paz"), "paz" );
	deepEqual( Stem("pc"), "pc" );
	deepEqual( Stem("pclab"), "pclab" );
	deepEqual( Stem("pdcc"), "pdcc" );
	deepEqual( Stem("pdm"), "pdm" );
	deepEqual( Stem("peabody"), "peabody" );
	deepEqual( Stem("peaje"), "peaj" );
	deepEqual( Stem("pearl"), "pearl" );
	deepEqual( Stem("peatones"), "peaton" );
	deepEqual( Stem("pecado"), "pec" );
	deepEqual( Stem("pecador"), "pecador" );
	deepEqual( Stem("pecadores"), "pecador" );
	deepEqual( Stem("pecaminosa"), "pecamin" );
	deepEqual( Stem("pecará"), "pec" );
	deepEqual( Stem("pece"), "pec" );
	deepEqual( Stem("peces"), "pec" );
	deepEqual( Stem("pechera"), "pecher" );
	deepEqual( Stem("pecho"), "pech" );
	deepEqual( Stem("pecina"), "pecin" );
	deepEqual( Stem("pectoral"), "pectoral" );
	deepEqual( Stem("pectorales"), "pectoral" );
	deepEqual( Stem("peculiar"), "peculi" );
	deepEqual( Stem("peculiares"), "peculiar" );
	deepEqual( Stem("peculiaridad"), "peculiar" );
	deepEqual( Stem("peculiaridades"), "peculiar" );
	deepEqual( Stem("pedagogía"), "pedagog" );
	deepEqual( Stem("pedagógica"), "pedagog" );
	deepEqual( Stem("pedagógicas"), "pedagog" );
	deepEqual( Stem("pedagógicos"), "pedagog" );
	deepEqual( Stem("pedalista"), "pedal" );
	deepEqual( Stem("pedalistas"), "pedal" );
	deepEqual( Stem("pedazos"), "pedaz" );
	deepEqual( Stem("pedía"), "ped" );
	deepEqual( Stem("pedían"), "ped" );
	deepEqual( Stem("pediatra"), "pediatr" );
	deepEqual( Stem("pediatría"), "pediatr" );
	deepEqual( Stem("pediátrica"), "pediatr" );
	deepEqual( Stem("pedida"), "ped" );
	deepEqual( Stem("pedido"), "ped" );
	deepEqual( Stem("pedidores"), "pedidor" );
	deepEqual( Stem("pedidos"), "ped" );
	deepEqual( Stem("pedimento"), "pediment" );
	deepEqual( Stem("pedimentos"), "pediment" );
	deepEqual( Stem("pedimos"), "ped" );
	deepEqual( Stem("pedir"), "ped" );
	deepEqual( Stem("pedirá"), "ped" );
	deepEqual( Stem("pedirán"), "ped" );
	deepEqual( Stem("pediré"), "ped" );
	deepEqual( Stem("pediría"), "ped" );
	deepEqual( Stem("pedirle"), "ped" );
	deepEqual( Stem("pedirles"), "ped" );
	deepEqual( Stem("pedirlo"), "ped" );
	deepEqual( Stem("pedomo"), "pedom" );
	deepEqual( Stem("pedrada"), "pedr" );
	deepEqual( Stem("pedradas"), "pedr" );
	deepEqual( Stem("pedraza"), "pedraz" );
	deepEqual( Stem("pedreras"), "pedrer" );
	deepEqual( Stem("pedrería"), "pedr" );
	deepEqual( Stem("pedrín"), "pedrin" );
	deepEqual( Stem("pedro"), "pedr" );
	deepEqual( Stem("pega"), "peg" );
	deepEqual( Stem("pegada"), "peg" );
	deepEqual( Stem("pegado"), "peg" );
	deepEqual( Stem("pegamento"), "pegament" );
	deepEqual( Stem("pegando"), "peg" );
	deepEqual( Stem("pegar"), "peg" );
	deepEqual( Stem("pegaran"), "peg" );
	deepEqual( Stem("pegarle"), "peg" );
	deepEqual( Stem("pegaron"), "peg" );
	deepEqual( Stem("pegó"), "peg" );
	deepEqual( Stem("pegote"), "pegot" );
	deepEqual( Stem("pegotes"), "pegot" );
	deepEqual( Stem("pegue"), "peg" );
	deepEqual( Stem("peinado"), "pein" );
	deepEqual( Stem("peinó"), "pein" );
	deepEqual( Stem("pelado"), "pel" );
	deepEqual( Stem("peláez"), "pelaez" );
	deepEqual( Stem("pelar"), "pel" );
	deepEqual( Stem("peldaños"), "peldañ" );
	deepEqual( Stem("pelé"), "pel" );
	deepEqual( Stem("pelea"), "pele" );
	deepEqual( Stem("peleado"), "pel" );
	deepEqual( Stem("pelean"), "pel" );
	deepEqual( Stem("peleando"), "pel" );
	deepEqual( Stem("pelear"), "pel" );
	deepEqual( Stem("peleará"), "pel" );
	deepEqual( Stem("pelearan"), "pel" );
	deepEqual( Stem("pelearon"), "pel" );
	deepEqual( Stem("peleas"), "pel" );
	deepEqual( Stem("peleen"), "pel" );
	deepEqual( Stem("peleles"), "pelel" );
	deepEqual( Stem("peleo"), "pele" );
	deepEqual( Stem("peleó"), "pele" );
	deepEqual( Stem("pelicula"), "pelicul" );
	deepEqual( Stem("película"), "pelicul" );
	deepEqual( Stem("películas"), "pelicul" );
	deepEqual( Stem("peligro"), "peligr" );
	deepEqual( Stem("peligros"), "peligr" );
	deepEqual( Stem("peligrosa"), "peligr" );
	deepEqual( Stem("peligrosamente"), "peligr" );
	deepEqual( Stem("peligrosas"), "peligr" );
	deepEqual( Stem("peligroso"), "peligr" );
	deepEqual( Stem("peligrosos"), "peligr" );
	deepEqual( Stem("pelletier"), "pelleti" );
	deepEqual( Stem("pello"), "pell" );
	deepEqual( Stem("pelo"), "pel" );
	deepEqual( Stem("pelos"), "pel" );
	deepEqual( Stem("pelota"), "pelot" );
	deepEqual( Stem("pelotero"), "peloter" );
	deepEqual( Stem("peloteros"), "peloter" );
	deepEqual( Stem("pelotón"), "peloton" );
	deepEqual( Stem("peluche"), "peluch" );
	deepEqual( Stem("peluquerías"), "peluqu" );
	deepEqual( Stem("pemex"), "pemex" );
	deepEqual( Stem("pena"), "pen" );
	deepEqual( Stem("peña"), "peñ" );
	deepEqual( Stem("penal"), "penal" );
	deepEqual( Stem("penales"), "penal" );
	deepEqual( Stem("penalidad"), "penal" );
	deepEqual( Stem("penalmente"), "penal" );
	deepEqual( Stem("penalty"), "penalty" );
	deepEqual( Stem("penas"), "pen" );
	deepEqual( Stem("peñascos"), "peñasc" );
	deepEqual( Stem("pendiente"), "pendient" );
	deepEqual( Stem("pendientes"), "pendient" );
	deepEqual( Stem("pendleton"), "pendleton" );
	deepEqual( Stem("penetracion"), "penetracion" );
	deepEqual( Stem("penetración"), "penetr" );
	deepEqual( Stem("penetrados"), "penetr" );
	deepEqual( Stem("penetran"), "penetr" );
	deepEqual( Stem("penetrante"), "penetr" );
	deepEqual( Stem("penetrar"), "penetr" );
	deepEqual( Stem("peniche"), "penich" );
	deepEqual( Stem("península"), "peninsul" );
	deepEqual( Stem("peninsulares"), "peninsular" );
	deepEqual( Stem("penitenciarios"), "penitenciari" );
	deepEqual( Stem("penn"), "penn" );
	deepEqual( Stem("pennsylvania"), "pennsylvani" );
	deepEqual( Stem("penoso"), "penos" );
	deepEqual( Stem("pensaba"), "pens" );
	deepEqual( Stem("pensabamos"), "pensab" );
	deepEqual( Stem("pensaban"), "pens" );
	deepEqual( Stem("pensado"), "pens" );
	deepEqual( Stem("pensadores"), "pensador" );
	deepEqual( Stem("pensamiento"), "pensamient" );
	deepEqual( Stem("pensamos"), "pens" );
	deepEqual( Stem("pensando"), "pens" );
	deepEqual( Stem("pensantes"), "pensant" );
	deepEqual( Stem("pensar"), "pens" );
	deepEqual( Stem("pensarse"), "pens" );
	deepEqual( Stem("pensativa"), "pensat" );
	deepEqual( Stem("pensé"), "pens" );
	deepEqual( Stem("pensemos"), "pens" );
	deepEqual( Stem("pensilvania"), "pensilvani" );
	deepEqual( Stem("pensión"), "pension" );
	deepEqual( Stem("pensionados"), "pension" );
	deepEqual( Stem("pensiones"), "pension" );
	deepEqual( Stem("pensó"), "pens" );
	deepEqual( Stem("pentágono"), "pentagon" );
	deepEqual( Stem("pentathlón"), "pentathlon" );
	deepEqual( Stem("pentecostés"), "pentecostes" );
	deepEqual( Stem("pentotal"), "pentotal" );
	deepEqual( Stem("penúltimo"), "penultim" );
	deepEqual( Stem("penurias"), "penuri" );
	deepEqual( Stem("peor"), "peor" );
	deepEqual( Stem("peores"), "peor" );
	deepEqual( Stem("pepe"), "pep" );
	deepEqual( Stem("peppers"), "peppers" );
	deepEqual( Stem("pequeña"), "pequeñ" );
	deepEqual( Stem("pequeñas"), "pequeñ" );
	deepEqual( Stem("pequeñísima"), "pequeñisim" );
	deepEqual( Stem("pequeñísimo"), "pequeñisim" );
	deepEqual( Stem("pequeñita"), "pequeñit" );
	deepEqual( Stem("pequeño"), "pequeñ" );
	deepEqual( Stem("pequeños"), "pequeñ" );
	deepEqual( Stem("per"), "per" );
	deepEqual( Stem("perales"), "peral" );
	deepEqual( Stem("peraza"), "peraz" );
	deepEqual( Stem("percance"), "percanc" );
	deepEqual( Stem("percances"), "percanc" );
	deepEqual( Stem("percata"), "percat" );
	deepEqual( Stem("percatado"), "percat" );
	deepEqual( Stem("percatarse"), "percat" );
	deepEqual( Stem("percató"), "percat" );
	deepEqual( Stem("percepción"), "percepcion" );
	deepEqual( Stem("percepciones"), "percepcion" );
	deepEqual( Stem("perciban"), "percib" );
	deepEqual( Stem("percibe"), "percib" );
	deepEqual( Stem("perciben"), "percib" );
	deepEqual( Stem("percusiones"), "percusion" );
	deepEqual( Stem("percusionistas"), "percusion" );
	deepEqual( Stem("perdedores"), "perdedor" );
	deepEqual( Stem("perdemos"), "perd" );
	deepEqual( Stem("perder"), "perd" );
	deepEqual( Stem("perderá"), "perd" );
	deepEqual( Stem("perderán"), "perd" );
	deepEqual( Stem("perderían"), "perd" );
	deepEqual( Stem("perderla"), "perd" );
	deepEqual( Stem("perderlo"), "perd" );
	deepEqual( Stem("perdí"), "perd" );
	deepEqual( Stem("perdición"), "perdicion" );
	deepEqual( Stem("perdida"), "perd" );
	deepEqual( Stem("pérdida"), "perd" );
	deepEqual( Stem("perdidas"), "perd" );
	deepEqual( Stem("pérdidas"), "perd" );
	deepEqual( Stem("perdido"), "perd" );
	deepEqual( Stem("perdidos"), "perd" );
	deepEqual( Stem("perdiendo"), "perd" );
	deepEqual( Stem("perdiera"), "perd" );
	deepEqual( Stem("perdieran"), "perd" );
	deepEqual( Stem("perdieron"), "perd" );
	deepEqual( Stem("perdió"), "perd" );
	deepEqual( Stem("perdomo"), "perdom" );
	deepEqual( Stem("perdón"), "perdon" );
	deepEqual( Stem("perdonarlos"), "perdon" );
	deepEqual( Stem("perdones"), "perdon" );
	deepEqual( Stem("perea"), "pere" );
	deepEqual( Stem("perecieron"), "perec" );
	deepEqual( Stem("pereda"), "pered" );
	deepEqual( Stem("peregrina"), "peregrin" );
	deepEqual( Stem("peregrinación"), "peregrin" );
	deepEqual( Stem("peregrino"), "peregrin" );
	deepEqual( Stem("perenne"), "perenn" );
	deepEqual( Stem("pereyra"), "pereyr" );
	deepEqual( Stem("perez"), "perez" );
	deepEqual( Stem("pérez"), "perez" );
	deepEqual( Stem("perfección"), "perfeccion" );
	deepEqual( Stem("perfeccionamiento"), "perfeccion" );
	deepEqual( Stem("perfeccionar"), "perfeccion" );
	deepEqual( Stem("perfeccionarlo"), "perfeccion" );
	deepEqual( Stem("perfeccione"), "perfeccion" );
	deepEqual( Stem("perfectamente"), "perfect" );
	deepEqual( Stem("perfecto"), "perfect" );
	deepEqual( Stem("perfectos"), "perfect" );
	deepEqual( Stem("perfidiana"), "perfidian" );
	deepEqual( Stem("perfil"), "perfil" );
	deepEqual( Stem("perfila"), "perfil" );
	deepEqual( Stem("perfilaba"), "perfil" );
	deepEqual( Stem("perfilan"), "perfil" );
	deepEqual( Stem("perfiles"), "perfil" );
	deepEqual( Stem("perfoliata"), "perfoliat" );
	deepEqual( Stem("perforación"), "perfor" );
	deepEqual( Stem("perforado"), "perfor" );
	deepEqual( Stem("perforar"), "perfor" );
	deepEqual( Stem("performance"), "performanc" );
	deepEqual( Stem("pergaminos"), "pergamin" );
	deepEqual( Stem("pericia"), "perici" );
	deepEqual( Stem("periciales"), "pericial" );
	deepEqual( Stem("pericos"), "peric" );
	deepEqual( Stem("periférica"), "perifer" );
	deepEqual( Stem("periféricas"), "perifer" );
	deepEqual( Stem("periférico"), "perifer" );
	deepEqual( Stem("periféricos"), "perifer" );
	deepEqual( Stem("perigord"), "perigord" );
	deepEqual( Stem("perillas"), "perill" );
	deepEqual( Stem("perimetral"), "perimetral" );
	deepEqual( Stem("periódicamente"), "period" );
	deepEqual( Stem("periódicas"), "period" );
	deepEqual( Stem("períodico"), "period" );
	deepEqual( Stem("periódico"), "period" );
	deepEqual( Stem("periódicos"), "period" );
	deepEqual( Stem("periodismo"), "period" );
	deepEqual( Stem("periodista"), "period" );
	deepEqual( Stem("periodistas"), "period" );
	deepEqual( Stem("periodística"), "periodist" );
	deepEqual( Stem("periodísticas"), "periodist" );
	deepEqual( Stem("periodístico"), "periodist" );
	deepEqual( Stem("periodo"), "period" );
	deepEqual( Stem("período"), "period" );
	deepEqual( Stem("periodos"), "period" );
	deepEqual( Stem("períodos"), "period" );
	deepEqual( Stem("perjudica"), "perjud" );
	deepEqual( Stem("perjudicada"), "perjudic" );
	deepEqual( Stem("perjudicado"), "perjudic" );
	deepEqual( Stem("perjudicados"), "perjudic" );
	deepEqual( Stem("perjudican"), "perjudic" );
	deepEqual( Stem("perjudicar"), "perjudic" );
	deepEqual( Stem("perjudicará"), "perjudic" );
	deepEqual( Stem("perjudicial"), "perjudicial" );
	deepEqual( Stem("perjudicó"), "perjudic" );
	deepEqual( Stem("perjuicio"), "perjuici" );
	deepEqual( Stem("perjuicios"), "perjuici" );
	deepEqual( Stem("perla"), "perl" );
	deepEqual( Stem("perlas"), "perl" );
	deepEqual( Stem("permanece"), "permanec" );
	deepEqual( Stem("permanecen"), "permanec" );
	deepEqual( Stem("permanecer"), "permanec" );
	deepEqual( Stem("permanecerá"), "permanec" );
	deepEqual( Stem("permanecerán"), "permanec" );
	deepEqual( Stem("permaneceremos"), "permanec" );
	deepEqual( Stem("permanecía"), "permanec" );
	deepEqual( Stem("permanecían"), "permanec" );
	deepEqual( Stem("permanecido"), "permanec" );
	deepEqual( Stem("permaneciendo"), "permanec" );
	deepEqual( Stem("permanecieran"), "permanec" );
	deepEqual( Stem("permanecieron"), "permanec" );
	deepEqual( Stem("permaneció"), "permanec" );
	deepEqual( Stem("permanencia"), "permanent" );
	deepEqual( Stem("permanente"), "permanent" );
	deepEqual( Stem("permanentemente"), "permanent" );
	deepEqual( Stem("permanentes"), "permanent" );
	deepEqual( Stem("permanezca"), "permanezc" );
	deepEqual( Stem("permanezcan"), "permanezc" );
	deepEqual( Stem("permisibles"), "permis" );
	deepEqual( Stem("permisionario"), "permisionari" );
	deepEqual( Stem("permisionarios"), "permisionari" );
	deepEqual( Stem("permiso"), "permis" );
	deepEqual( Stem("permisos"), "permis" );
	deepEqual( Stem("permita"), "permit" );
	deepEqual( Stem("permítame"), "permitam" );
	deepEqual( Stem("permitan"), "permit" );
	deepEqual( Stem("permite"), "permit" );
	deepEqual( Stem("permiten"), "permit" );
	deepEqual( Stem("permitía"), "permit" );
	deepEqual( Stem("permitida"), "permit" );
	deepEqual( Stem("permitidas"), "permit" );
	deepEqual( Stem("permitido"), "permit" );
	deepEqual( Stem("permitiendo"), "permit" );
	deepEqual( Stem("permitiéndole"), "permit" );
	deepEqual( Stem("permitiera"), "permit" );
	deepEqual( Stem("permitieron"), "permit" );
	deepEqual( Stem("permitió"), "permit" );
	deepEqual( Stem("permitir"), "permit" );
	deepEqual( Stem("permitirá"), "permit" );
	deepEqual( Stem("permitirán"), "permit" );
	deepEqual( Stem("permitiré"), "permit" );
	deepEqual( Stem("permitiría"), "permit" );
	deepEqual( Stem("permitirían"), "permit" );
	deepEqual( Stem("permitirles"), "permit" );
	deepEqual( Stem("permitirse"), "permit" );
	deepEqual( Stem("pernada"), "pern" );
	deepEqual( Stem("perniciosas"), "pernici" );
	deepEqual( Stem("pernicioso"), "pernici" );
	deepEqual( Stem("pernoctó"), "pernoct" );
	deepEqual( Stem("pero"), "per" );
	deepEqual( Stem("perpetra"), "perpetr" );
	deepEqual( Stem("perpetrada"), "perpetr" );
	deepEqual( Stem("perpetrados"), "perpetr" );
	deepEqual( Stem("perpetua"), "perpetu" );
	deepEqual( Stem("perpetúan"), "perpetu" );
	deepEqual( Stem("perpetuarse"), "perpetu" );
	deepEqual( Stem("perplejidad"), "perplej" );
	deepEqual( Stem("perplejo"), "perplej" );
	deepEqual( Stem("perredista"), "perred" );
	deepEqual( Stem("perredistas"), "perred" );
	deepEqual( Stem("perro"), "perr" );
	deepEqual( Stem("perros"), "perr" );
	deepEqual( Stem("perry"), "perry" );
	deepEqual( Stem("persecución"), "persecu" );
	deepEqual( Stem("persecutoria"), "persecutori" );
	deepEqual( Stem("persecutorias"), "persecutori" );
	deepEqual( Stem("perseguida"), "persegu" );
	deepEqual( Stem("perseguidor"), "perseguidor" );
	deepEqual( Stem("perseguidores"), "perseguidor" );
	deepEqual( Stem("perseguidos"), "persegu" );
	deepEqual( Stem("perseguirlos"), "persegu" );
	deepEqual( Stem("persiga"), "persig" );
	deepEqual( Stem("persiste"), "pers" );
	deepEqual( Stem("persisten"), "persist" );
	deepEqual( Stem("persistencia"), "persistent" );
	deepEqual( Stem("persistente"), "persistent" );
	deepEqual( Stem("persistir"), "persist" );
	deepEqual( Stem("persona"), "person" );
	deepEqual( Stem("personaje"), "personaj" );
	deepEqual( Stem("personajes"), "personaj" );
	deepEqual( Stem("personal"), "personal" );
	deepEqual( Stem("personales"), "personal" );
	deepEqual( Stem("personalidad"), "personal" );
	deepEqual( Stem("personalidades"), "personal" );
	deepEqual( Stem("personalizar"), "personaliz" );
	deepEqual( Stem("personalizarlo"), "personaliz" );
	deepEqual( Stem("personalmente"), "personal" );
	deepEqual( Stem("personas"), "person" );
	deepEqual( Stem("personifica"), "personif" );
	deepEqual( Stem("personificará"), "personific" );
	deepEqual( Stem("perspectiva"), "perspect" );
	deepEqual( Stem("perspectivas"), "perspect" );
	deepEqual( Stem("perspicacia"), "perspicaci" );
	deepEqual( Stem("persuadir"), "persuad" );
	deepEqual( Stem("pertenece"), "pertenec" );
	deepEqual( Stem("pertenecen"), "pertenec" );
	deepEqual( Stem("pertenecer"), "pertenec" );
	deepEqual( Stem("pertenecía"), "pertenec" );
	deepEqual( Stem("perteneciendo"), "pertenec" );
	deepEqual( Stem("perteneciente"), "pertenecient" );
	deepEqual( Stem("pertenecientes"), "pertenecient" );
	deepEqual( Stem("pertenecieron"), "pertenec" );
	deepEqual( Stem("perteneció"), "pertenec" );
	deepEqual( Stem("pertenencias"), "pertenent" );
	deepEqual( Stem("pértiga"), "pertig" );
	deepEqual( Stem("pertinaces"), "pertinac" );
	deepEqual( Stem("pertinente"), "pertinent" );
	deepEqual( Stem("pertinentes"), "pertinent" );
	deepEqual( Stem("perturba"), "perturb" );
	deepEqual( Stem("perturbación"), "perturb" );
	deepEqual( Stem("perturbemos"), "perturb" );
	deepEqual( Stem("perturbó"), "perturb" );
	deepEqual( Stem("perú"), "peru" );
	deepEqual( Stem("peruana"), "peruan" );
	deepEqual( Stem("peruano"), "peruan" );
	deepEqual( Stem("peruanos"), "peruan" );
	deepEqual( Stem("perversas"), "pervers" );
	deepEqual( Stem("perversión"), "perversion" );
	deepEqual( Stem("perversiones"), "perversion" );
	deepEqual( Stem("perversos"), "pervers" );
	deepEqual( Stem("pervivencia"), "pervivent" );
	deepEqual( Stem("pesa"), "pes" );
	deepEqual( Stem("pesadas"), "pes" );
	deepEqual( Stem("pesadez"), "pesadez" );
	deepEqual( Stem("pesadilla"), "pesadill" );
	deepEqual( Stem("pesado"), "pes" );
	deepEqual( Stem("pesados"), "pes" );
	deepEqual( Stem("pesaje"), "pesaj" );
	deepEqual( Stem("pesar"), "pes" );
	deepEqual( Stem("pesas"), "pes" );
	deepEqual( Stem("pesca"), "pesc" );
	deepEqual( Stem("pescadores"), "pescador" );
	deepEqual( Stem("pescados"), "pesc" );
	deepEqual( Stem("pese"), "pes" );
	deepEqual( Stem("peseras"), "peser" );
	deepEqual( Stem("peseta"), "peset" );
	deepEqual( Stem("pesetas"), "peset" );
	deepEqual( Stem("pésima"), "pesim" );
	deepEqual( Stem("pesimista"), "pesim" );
	deepEqual( Stem("pesimistas"), "pesim" );
	deepEqual( Stem("pésimo"), "pesim" );
	deepEqual( Stem("peso"), "pes" );
	deepEqual( Stem("pesó"), "pes" );
	deepEqual( Stem("pesos"), "pes" );
	deepEqual( Stem("pespuntes"), "pespunt" );
	deepEqual( Stem("pesqueira"), "pesqueir" );
	deepEqual( Stem("pesquería"), "pesqu" );
	deepEqual( Stem("pesqueros"), "pesquer" );
	deepEqual( Stem("pesticida"), "pestic" );
	deepEqual( Stem("pesticidas"), "pestic" );
	deepEqual( Stem("petate"), "petat" );
	deepEqual( Stem("pete"), "pet" );
	deepEqual( Stem("peter"), "pet" );
	deepEqual( Stem("petición"), "peticion" );
	deepEqual( Stem("peticiones"), "peticion" );
	deepEqual( Stem("petit"), "petit" );
	deepEqual( Stem("peto"), "pet" );
	deepEqual( Stem("petra"), "petr" );
	deepEqual( Stem("petrel"), "petrel" );
	deepEqual( Stem("petróleo"), "petrole" );
	deepEqual( Stem("petróleos"), "petrole" );
	deepEqual( Stem("petrolera"), "petroler" );
	deepEqual( Stem("petroleras"), "petroler" );
	deepEqual( Stem("petrolero"), "petroler" );
	deepEqual( Stem("petroleros"), "petroler" );
	deepEqual( Stem("petrolizar"), "petroliz" );
	deepEqual( Stem("petroquímica"), "petroquim" );
	deepEqual( Stem("petroquímicas"), "petroquim" );
	deepEqual( Stem("petrov"), "petrov" );
	deepEqual( Stem("peyote"), "peyot" );
	deepEqual( Stem("peza"), "pez" );
	deepEqual( Stem("pfcrn"), "pfcrn" );
	deepEqual( Stem("pfcyp"), "pfcyp" );
	deepEqual( Stem("pfeiffer"), "pfeiff" );
	deepEqual( Stem("pgjdf"), "pgjdf" );
	deepEqual( Stem("pgr"), "pgr" );
	deepEqual( Stem("ph"), "ph" );
	deepEqual( Stem("philip"), "philip" );
	deepEqual( Stem("philippe"), "philipp" );
	deepEqual( Stem("phillips"), "phillips" );
	deepEqual( Stem("philos"), "phil" );
	deepEqual( Stem("piales"), "pial" );
	deepEqual( Stem("pianista"), "pianist" );
	deepEqual( Stem("piano"), "pian" );
	deepEqual( Stem("pib"), "pib" );
	deepEqual( Stem("picaba"), "pic" );
	deepEqual( Stem("picado"), "pic" );
	deepEqual( Stem("picadores"), "picador" );
	deepEqual( Stem("pican"), "pic" );
	deepEqual( Stem("picante"), "picant" );
	deepEqual( Stem("pichardo"), "pichard" );
	deepEqual( Stem("pichichis"), "pichichis" );
	deepEqual( Stem("pick"), "pick" );
	deepEqual( Stem("pico"), "pic" );
	deepEqual( Stem("picos"), "pic" );
	deepEqual( Stem("pictórica"), "pictor" );
	deepEqual( Stem("pictóricas"), "pictor" );
	deepEqual( Stem("pida"), "pid" );
	deepEqual( Stem("pidan"), "pid" );
	deepEqual( Stem("pidas"), "pid" );
	deepEqual( Stem("pide"), "pid" );
	deepEqual( Stem("piden"), "pid" );
	deepEqual( Stem("pidiendo"), "pid" );
	deepEqual( Stem("pidiéndoles"), "pid" );
	deepEqual( Stem("pidieron"), "pid" );
	deepEqual( Stem("pidió"), "pid" );
	deepEqual( Stem("pido"), "pid" );
	deepEqual( Stem("pie"), "pie" );
	deepEqual( Stem("piedad"), "pied" );
	deepEqual( Stem("piedra"), "piedr" );
	deepEqual( Stem("piedras"), "piedr" );
	deepEqual( Stem("piedrecita"), "piedrecit" );
	deepEqual( Stem("piedritas"), "piedrit" );
	deepEqual( Stem("piel"), "piel" );
	deepEqual( Stem("pieles"), "piel" );
	deepEqual( Stem("pienda"), "piend" );
	deepEqual( Stem("piensa"), "piens" );
	deepEqual( Stem("piensan"), "piens" );
	deepEqual( Stem("piense"), "piens" );
	deepEqual( Stem("piensen"), "piens" );
	deepEqual( Stem("pienso"), "piens" );
	deepEqual( Stem("pierce"), "pierc" );
	deepEqual( Stem("pierda"), "pierd" );
	deepEqual( Stem("pierdan"), "pierd" );
	deepEqual( Stem("pierde"), "pierd" );
	deepEqual( Stem("pierden"), "pierd" );
	deepEqual( Stem("pierdo"), "pierd" );
	deepEqual( Stem("pierna"), "piern" );
	deepEqual( Stem("piernas"), "piern" );
	deepEqual( Stem("pierre"), "pierr" );
	deepEqual( Stem("pies"), "pies" );
	deepEqual( Stem("pieza"), "piez" );
	deepEqual( Stem("piezas"), "piez" );
	deepEqual( Stem("pifia"), "pifi" );
	deepEqual( Stem("pigmento"), "pigment" );
	deepEqual( Stem("pigmentosa"), "pigment" );
	deepEqual( Stem("pila"), "pil" );
	deepEqual( Stem("pilar"), "pil" );
	deepEqual( Stem("pilares"), "pilar" );
	deepEqual( Stem("pilas"), "pil" );
	deepEqual( Stem("píldora"), "pildor" );
	deepEqual( Stem("píldoras"), "pildor" );
	deepEqual( Stem("pillma"), "pillm" );
	deepEqual( Stem("pilón"), "pilon" );
	deepEqual( Stem("piloncillo"), "piloncill" );
	deepEqual( Stem("piloteando"), "pilot" );
	deepEqual( Stem("piloteó"), "pilote" );
	deepEqual( Stem("piloto"), "pilot" );
	deepEqual( Stem("pilotos"), "pilot" );
	deepEqual( Stem("pimentel"), "pimentel" );
	deepEqual( Stem("piña"), "piñ" );
	deepEqual( Stem("pinacoteca"), "pinacotec" );
	deepEqual( Stem("pinal"), "pinal" );
	deepEqual( Stem("piñaolayas"), "piñaolay" );
	deepEqual( Stem("piñas"), "piñ" );
	deepEqual( Stem("pinchado"), "pinch" );
	deepEqual( Stem("pinchazo"), "pinchaz" );
	deepEqual( Stem("pinchó"), "pinch" );
	deepEqual( Stem("pino"), "pin" );
	deepEqual( Stem("pinochet"), "pinochet" );
	deepEqual( Stem("pinos"), "pin" );
	deepEqual( Stem("pinta"), "pint" );
	deepEqual( Stem("pintaban"), "pint" );
	deepEqual( Stem("pintada"), "pint" );
	deepEqual( Stem("pintadas"), "pint" );
	deepEqual( Stem("pintado"), "pint" );
	deepEqual( Stem("pintados"), "pint" );
	deepEqual( Stem("pintan"), "pint" );
	deepEqual( Stem("pintando"), "pint" );
	deepEqual( Stem("pintar"), "pint" );
	deepEqual( Stem("pintarlas"), "pint" );
	deepEqual( Stem("pintarlo"), "pint" );
	deepEqual( Stem("pintaron"), "pint" );
	deepEqual( Stem("pintas"), "pint" );
	deepEqual( Stem("pintor"), "pintor" );
	deepEqual( Stem("pintora"), "pintor" );
	deepEqual( Stem("pintores"), "pintor" );
	deepEqual( Stem("pintura"), "pintur" );
	deepEqual( Stem("pinturas"), "pintur" );
	deepEqual( Stem("pinzón"), "pinzon" );
	deepEqual( Stem("pío"), "pio" );
	deepEqual( Stem("pionera"), "pioner" );
	deepEqual( Stem("pionero"), "pioner" );
	deepEqual( Stem("pioneros"), "pioner" );
	deepEqual( Stem("pipa"), "pip" );
	deepEqual( Stem("piquetes"), "piquet" );
	deepEqual( Stem("piramidal"), "piramidal" );
	deepEqual( Stem("pirata"), "pirat" );
	deepEqual( Stem("piratas"), "pirat" );
	deepEqual( Stem("pirate"), "pirat" );
	deepEqual( Stem("pirateando"), "pirat" );
	deepEqual( Stem("piretro"), "piretr" );
	deepEqual( Stem("piri"), "piri" );
	deepEqual( Stem("piropeado"), "pirop" );
	deepEqual( Stem("pirulina"), "pirulin" );
	deepEqual( Stem("pisaba"), "pis" );
	deepEqual( Stem("pisado"), "pis" );
	deepEqual( Stem("pisando"), "pis" );
	deepEqual( Stem("pisen"), "pis" );
	deepEqual( Stem("piso"), "pis" );
	deepEqual( Stem("pisos"), "pis" );
	deepEqual( Stem("pisoteaban"), "pisot" );
	deepEqual( Stem("pisoteada"), "pisot" );
	deepEqual( Stem("pisoteando"), "pisot" );
	deepEqual( Stem("pisotear"), "pisot" );
	deepEqual( Stem("pisoteen"), "pisot" );
	deepEqual( Stem("pista"), "pist" );
	deepEqual( Stem("pistas"), "pist" );
	deepEqual( Stem("pistola"), "pistol" );
	deepEqual( Stem("pistolas"), "pistol" );
	deepEqual( Stem("pitas"), "pit" );
	deepEqual( Stem("pitcheado"), "pitch" );
	deepEqual( Stem("pitcheo"), "pitche" );
	deepEqual( Stem("pitcher"), "pitch" );
	deepEqual( Stem("pítcher"), "pitch" );
	deepEqual( Stem("piti"), "piti" );
	deepEqual( Stem("pito"), "pit" );
	deepEqual( Stem("pitol"), "pitol" );
	deepEqual( Stem("pitoncitos"), "pitoncit" );
	deepEqual( Stem("pits"), "pits" );
	deepEqual( Stem("pittsburgh"), "pittsburgh" );
	deepEqual( Stem("pitufos"), "pituf" );
	deepEqual( Stem("pivote"), "pivot" );
	deepEqual( Stem("pizarro"), "pizarr" );
	deepEqual( Stem("pizarrón"), "pizarron" );
	deepEqual( Stem("pizpireta"), "pizpiret" );
	deepEqual( Stem("pizuto"), "pizut" );
	deepEqual( Stem("pizza"), "pizz" );
	deepEqual( Stem("pizzas"), "pizz" );
	deepEqual( Stem("pjf"), "pjf" );
	deepEqual( Stem("placa"), "plac" );
	deepEqual( Stem("placas"), "plac" );
	deepEqual( Stem("place"), "plac" );
	deepEqual( Stem("plácemes"), "placem" );
	deepEqual( Stem("placer"), "plac" );
	deepEqual( Stem("placet"), "placet" );
	deepEqual( Stem("plácida"), "plac" );
	deepEqual( Stem("plácidamente"), "placid" );
	deepEqual( Stem("placita"), "placit" );
	deepEqual( Stem("plaga"), "plag" );
	deepEqual( Stem("plagadas"), "plag" );
	deepEqual( Stem("plagas"), "plag" );
	deepEqual( Stem("plagiada"), "plagi" );
	deepEqual( Stem("plaguicidas"), "plaguic" );
	deepEqual( Stem("plainfield"), "plainfield" );
	deepEqual( Stem("plan"), "plan" );
	deepEqual( Stem("plana"), "plan" );
	deepEqual( Stem("planas"), "plan" );
	deepEqual( Stem("planauto"), "planaut" );
	deepEqual( Stem("planchar"), "planch" );
	deepEqual( Stem("planchará"), "planch" );
	deepEqual( Stem("planchas"), "planch" );
	deepEqual( Stem("planea"), "plane" );
	deepEqual( Stem("planeaban"), "plan" );
	deepEqual( Stem("planeación"), "planeacion" );
	deepEqual( Stem("planeada"), "plan" );
	deepEqual( Stem("planeadas"), "plan" );
	deepEqual( Stem("planeado"), "plan" );
	deepEqual( Stem("planeados"), "plan" );
	deepEqual( Stem("planean"), "plan" );
	deepEqual( Stem("planeando"), "plan" );
	deepEqual( Stem("planear"), "plan" );
	deepEqual( Stem("planee"), "plane" );
	deepEqual( Stem("planes"), "plan" );
	deepEqual( Stem("planeta"), "planet" );
	deepEqual( Stem("planetaria"), "planetari" );
	deepEqual( Stem("planificación"), "planif" );
	deepEqual( Stem("planilla"), "planill" );
	deepEqual( Stem("planillas"), "planill" );
	deepEqual( Stem("planiria"), "planiri" );
	deepEqual( Stem("plano"), "plan" );
	deepEqual( Stem("planos"), "plan" );
	deepEqual( Stem("planta"), "plant" );
	deepEqual( Stem("plantaciones"), "plantacion" );
	deepEqual( Stem("plantado"), "plant" );
	deepEqual( Stem("plantados"), "plant" );
	deepEqual( Stem("plantara"), "plant" );
	deepEqual( Stem("plantaron"), "plant" );
	deepEqual( Stem("plantas"), "plant" );
	deepEqual( Stem("plantea"), "plante" );
	deepEqual( Stem("planteada"), "plant" );
	deepEqual( Stem("planteadas"), "plant" );
	deepEqual( Stem("planteado"), "plant" );
	deepEqual( Stem("planteados"), "plant" );
	deepEqual( Stem("planteamientos"), "planteamient" );
	deepEqual( Stem("planteamos"), "plant" );
	deepEqual( Stem("plantean"), "plant" );
	deepEqual( Stem("plantear"), "plant" );
	deepEqual( Stem("plantearan"), "plant" );
	deepEqual( Stem("plantearon"), "plant" );
	deepEqual( Stem("plantearse"), "plant" );
	deepEqual( Stem("plantee"), "plante" );
	deepEqual( Stem("plantéeles"), "planteel" );
	deepEqual( Stem("planteen"), "plant" );
	deepEqual( Stem("plantel"), "plantel" );
	deepEqual( Stem("planteles"), "plantel" );
	deepEqual( Stem("planteó"), "plante" );
	deepEqual( Stem("plantón"), "planton" );
	deepEqual( Stem("plantones"), "planton" );
	deepEqual( Stem("plascencia"), "plascenci" );
	deepEqual( Stem("plasma"), "plasm" );
	deepEqual( Stem("plasmado"), "plasm" );
	deepEqual( Stem("plasmar"), "plasm" );
	deepEqual( Stem("plasme"), "plasm" );
	deepEqual( Stem("plasmó"), "plasm" );
	deepEqual( Stem("plastas"), "plast" );
	deepEqual( Stem("plástica"), "plastic" );
	deepEqual( Stem("plásticas"), "plastic" );
	deepEqual( Stem("plástico"), "plastic" );
	deepEqual( Stem("plásticos"), "plastic" );
	deepEqual( Stem("plastilina"), "plastilin" );
	deepEqual( Stem("plata"), "plat" );
	deepEqual( Stem("plataforma"), "plataform" );
	deepEqual( Stem("plataformas"), "plataform" );
	deepEqual( Stem("plataneras"), "plataner" );
	deepEqual( Stem("plátanos"), "platan" );
	deepEqual( Stem("platas"), "plat" );
	deepEqual( Stem("plate"), "plat" );
	deepEqual( Stem("plateadas"), "plat" );
	deepEqual( Stem("plateas"), "plat" );
	deepEqual( Stem("platería"), "plat" );
	deepEqual( Stem("plática"), "platic" );
	deepEqual( Stem("platicaba"), "platic" );
	deepEqual( Stem("platicábamos"), "platic" );
	deepEqual( Stem("platicaban"), "platic" );
	deepEqual( Stem("platicado"), "platic" );
	deepEqual( Stem("platicamos"), "platic" );
	deepEqual( Stem("platicando"), "platic" );
	deepEqual( Stem("platicar"), "platic" );
	deepEqual( Stem("platicas"), "platic" );
	deepEqual( Stem("pláticas"), "platic" );
	deepEqual( Stem("platicó"), "platic" );
	deepEqual( Stem("platillo"), "platill" );
	deepEqual( Stem("platillos"), "platill" );
	deepEqual( Stem("platinos"), "platin" );
	deepEqual( Stem("platique"), "platiqu" );
	deepEqual( Stem("plato"), "plat" );
	deepEqual( Stem("plausibles"), "plausibl" );
	deepEqual( Stem("playa"), "play" );
	deepEqual( Stem("playas"), "play" );
	deepEqual( Stem("playback"), "playback" );
	deepEqual( Stem("playera"), "player" );
	deepEqual( Stem("playeras"), "player" );
	deepEqual( Stem("playtex"), "playtex" );
	deepEqual( Stem("plaza"), "plaz" );
	deepEqual( Stem("plazas"), "plaz" );
	deepEqual( Stem("plazo"), "plaz" );
	deepEqual( Stem("plazos"), "plaz" );
	deepEqual( Stem("plebiscito"), "plebiscit" );
	deepEqual( Stem("plegables"), "plegabl" );
	deepEqual( Stem("pleitesía"), "pleites" );
	deepEqual( Stem("pleito"), "pleit" );
	deepEqual( Stem("pleitos"), "pleit" );
	deepEqual( Stem("plena"), "plen" );
	deepEqual( Stem("plenamente"), "plen" );
	deepEqual( Stem("plenaria"), "plenari" );
	deepEqual( Stem("pleno"), "plen" );
	deepEqual( Stem("plomería"), "plom" );
	deepEqual( Stem("plomo"), "plom" );
	deepEqual( Stem("pluma"), "plum" );
	deepEqual( Stem("plumas"), "plum" );
	deepEqual( Stem("plumones"), "plumon" );
	deepEqual( Stem("plural"), "plural" );
	deepEqual( Stem("plusmarca"), "plusmarc" );
	deepEqual( Stem("plusmarcas"), "plusmarc" );
	deepEqual( Stem("plusvalía"), "plusval" );
	deepEqual( Stem("plutarco"), "plutarc" );
	deepEqual( Stem("pluvial"), "pluvial" );
	deepEqual( Stem("pluviales"), "pluvial" );
	deepEqual( Stem("plymouth"), "plymouth" );
	deepEqual( Stem("pn"), "pn" );
	deepEqual( Stem("po"), "po" );
	deepEqual( Stem("población"), "poblacion" );
	deepEqual( Stem("poblacional"), "poblacional" );
	deepEqual( Stem("poblaciones"), "poblacion" );
	deepEqual( Stem("poblada"), "pobl" );
	deepEqual( Stem("pobladas"), "pobl" );
	deepEqual( Stem("poblado"), "pobl" );
	deepEqual( Stem("pobladores"), "poblador" );
	deepEqual( Stem("poblados"), "pobl" );
	deepEqual( Stem("poblano"), "poblan" );
	deepEqual( Stem("poblanos"), "poblan" );
	deepEqual( Stem("poblaron"), "pobl" );
	deepEqual( Stem("pobre"), "pobr" );
	deepEqual( Stem("pobres"), "pobr" );
	deepEqual( Stem("pobreza"), "pobrez" );
	deepEqual( Stem("poca"), "poc" );
	deepEqual( Stem("pocas"), "poc" );
	deepEqual( Stem("pocho"), "poch" );
	deepEqual( Stem("pochtecas"), "pochtec" );
	deepEqual( Stem("poco"), "poc" );
	deepEqual( Stem("pocos"), "poc" );
	deepEqual( Stem("poda"), "pod" );
	deepEqual( Stem("podamos"), "pod" );
	deepEqual( Stem("podemos"), "pod" );
	deepEqual( Stem("poder"), "pod" );
	deepEqual( Stem("poderes"), "poder" );
	deepEqual( Stem("poderío"), "poderi" );
	deepEqual( Stem("poderlas"), "pod" );
	deepEqual( Stem("poderosa"), "poder" );
	deepEqual( Stem("poderoso"), "poder" );
	deepEqual( Stem("poderosos"), "poder" );
	deepEqual( Stem("podía"), "pod" );
	deepEqual( Stem("podíamos"), "pod" );
	deepEqual( Stem("podían"), "pod" );
	deepEqual( Stem("podido"), "pod" );
	deepEqual( Stem("podrá"), "podr" );
	deepEqual( Stem("podrán"), "podran" );
	deepEqual( Stem("podrás"), "podras" );
	deepEqual( Stem("podré"), "podr" );
	deepEqual( Stem("podremos"), "podr" );
	deepEqual( Stem("podría"), "podr" );
	deepEqual( Stem("podríamos"), "podr" );
	deepEqual( Stem("podrían"), "podr" );
	deepEqual( Stem("podrías"), "podr" );
	deepEqual( Stem("poema"), "poem" );
	deepEqual( Stem("poemario"), "poemari" );
	deepEqual( Stem("poemas"), "poem" );
	deepEqual( Stem("poesía"), "poes" );
	deepEqual( Stem("poeta"), "poet" );
	deepEqual( Stem("poético"), "poetic" );
	deepEqual( Stem("poetisa"), "poetis" );
	deepEqual( Stem("point"), "point" );
	deepEqual( Stem("pókar"), "pok" );
	deepEqual( Stem("póker"), "pok" );
	deepEqual( Stem("polanco"), "polanc" );
	deepEqual( Stem("polar"), "pol" );
	deepEqual( Stem("polémica"), "polem" );
	deepEqual( Stem("polémicas"), "polem" );
	deepEqual( Stem("polemizan"), "polemiz" );
	deepEqual( Stem("polen"), "pol" );
	deepEqual( Stem("poleo"), "pole" );
	deepEqual( Stem("policarpo"), "policarp" );
	deepEqual( Stem("policia"), "polici" );
	deepEqual( Stem("policía"), "polic" );
	deepEqual( Stem("policiaca"), "policiac" );
	deepEqual( Stem("policíaca"), "policiac" );
	deepEqual( Stem("policiacas"), "policiac" );
	deepEqual( Stem("policíacas"), "policiac" );
	deepEqual( Stem("policiaco"), "policiac" );
	deepEqual( Stem("policíaco"), "policiac" );
	deepEqual( Stem("policiacos"), "policiac" );
	deepEqual( Stem("policíacos"), "policiac" );
	deepEqual( Stem("policial"), "policial" );
	deepEqual( Stem("policiales"), "policial" );
	deepEqual( Stem("policias"), "polici" );
	deepEqual( Stem("policías"), "polic" );
	deepEqual( Stem("polifonía"), "polifon" );
	deepEqual( Stem("poligono"), "poligon" );
	deepEqual( Stem("polígono"), "poligon" );
	deepEqual( Stem("polilla"), "polill" );
	deepEqual( Stem("polinésico"), "polines" );
	deepEqual( Stem("polinización"), "poliniz" );
	deepEqual( Stem("polio"), "poli" );
	deepEqual( Stem("poliomielitis"), "poliomielitis" );
	deepEqual( Stem("politécnico"), "politecn" );
	deepEqual( Stem("politeísta"), "politeist" );
	deepEqual( Stem("politeístas"), "politeist" );
	deepEqual( Stem("política"), "polit" );
	deepEqual( Stem("políticas"), "polit" );
	deepEqual( Stem("politico"), "polit" );
	deepEqual( Stem("político"), "polit" );
	deepEqual( Stem("políticos"), "polit" );
	deepEqual( Stem("politiquero"), "politiquer" );
	deepEqual( Stem("politólogos"), "politolog" );
	deepEqual( Stem("poliuretano"), "poliuretan" );
	deepEqual( Stem("polivalente"), "polivalent" );
	deepEqual( Stem("pollo"), "poll" );
	deepEqual( Stem("pollution"), "pollution" );
	deepEqual( Stem("polo"), "pol" );
	deepEqual( Stem("polonia"), "poloni" );
	deepEqual( Stem("polveras"), "polver" );
	deepEqual( Stem("polvo"), "polv" );
	deepEqual( Stem("polvos"), "polv" );
	deepEqual( Stem("pomadas"), "pom" );
	deepEqual( Stem("pomares"), "pomar" );
	deepEqual( Stem("pomperrier"), "pomperri" );
	deepEqual( Stem("pompeyo"), "pompey" );
	deepEqual( Stem("pompidou"), "pompidou" );
	deepEqual( Stem("ponce"), "ponc" );
	deepEqual( Stem("ponchando"), "ponch" );
	deepEqual( Stem("ponche"), "ponch" );
	deepEqual( Stem("pond"), "pond" );
	deepEqual( Stem("pondera"), "ponder" );
	deepEqual( Stem("ponderada"), "ponder" );
	deepEqual( Stem("pondrá"), "pondr" );
	deepEqual( Stem("pondrán"), "pondran" );
	deepEqual( Stem("pondrás"), "pondras" );
	deepEqual( Stem("pondremos"), "pondr" );
	deepEqual( Stem("pondrían"), "pondr" );
	deepEqual( Stem("ponds"), "ponds" );
	deepEqual( Stem("pone"), "pon" );
	deepEqual( Stem("ponemos"), "pon" );
	deepEqual( Stem("ponen"), "pon" );
	deepEqual( Stem("ponencia"), "ponenci" );
	deepEqual( Stem("ponencias"), "ponenci" );
	deepEqual( Stem("ponente"), "ponent" );
	deepEqual( Stem("ponentes"), "ponent" );
	deepEqual( Stem("poner"), "pon" );
	deepEqual( Stem("ponerla"), "pon" );
	deepEqual( Stem("ponerle"), "pon" );
	deepEqual( Stem("ponerles"), "pon" );
	deepEqual( Stem("ponerlo"), "pon" );
	deepEqual( Stem("ponerlos"), "pon" );
	deepEqual( Stem("ponernos"), "pon" );
	deepEqual( Stem("ponerse"), "pon" );
	deepEqual( Stem("pones"), "pon" );
	deepEqual( Stem("ponga"), "pong" );
	deepEqual( Stem("pongamos"), "pong" );
	deepEqual( Stem("pongan"), "pong" );
	deepEqual( Stem("póngase"), "pong" );
	deepEqual( Stem("pongo"), "pong" );
	deepEqual( Stem("ponía"), "pon" );
	deepEqual( Stem("poniatowska"), "poniatowsk" );
	deepEqual( Stem("poniendo"), "pon" );
	deepEqual( Stem("poniente"), "ponient" );
	deepEqual( Stem("pons"), "pons" );
	deepEqual( Stem("pontiac"), "pontiac" );
	deepEqual( Stem("pontier"), "ponti" );
	deepEqual( Stem("pontificado"), "pontific" );
	deepEqual( Stem("pontífice"), "pontific" );
	deepEqual( Stem("pontificia"), "pontifici" );
	deepEqual( Stem("pontificio"), "pontifici" );
	deepEqual( Stem("pony"), "pony" );
	deepEqual( Stem("pop"), "pop" );
	deepEqual( Stem("popa"), "pop" );
	deepEqual( Stem("pope"), "pop" );
	deepEqual( Stem("popo"), "pop" );
	deepEqual( Stem("poppe"), "popp" );
	deepEqual( Stem("popular"), "popul" );
	deepEqual( Stem("populares"), "popular" );
	deepEqual( Stem("popularidad"), "popular" );
	deepEqual( Stem("popularísimo"), "popularisim" );
	deepEqual( Stem("populismo"), "popul" );
	deepEqual( Stem("populista"), "popul" );
	deepEqual( Stem("populistas"), "popul" );
	deepEqual( Stem("populosos"), "popul" );
	deepEqual( Stem("poquísimo"), "poquisim" );
	deepEqual( Stem("poquitas"), "poquit" );
	deepEqual( Stem("poquitito"), "poquitit" );
	deepEqual( Stem("poquito"), "poquit" );
	deepEqual( Stem("por"), "por" );
	deepEqual( Stem("porcelana"), "porcelan" );
	deepEqual( Stem("porcentaje"), "porcentaj" );
	deepEqual( Stem("porcentajes"), "porcentaj" );
	deepEqual( Stem("porcentual"), "porcentual" );
	deepEqual( Stem("porcentuales"), "porcentual" );
	deepEqual( Stem("porcícolas"), "porcicol" );
	deepEqual( Stem("porciles"), "porcil" );
	deepEqual( Stem("porción"), "porcion" );
	deepEqual( Stem("porcioncita"), "porcioncit" );
	deepEqual( Stem("porciones"), "porcion" );
	deepEqual( Stem("porfesión"), "porfesion" );
	deepEqual( Stem("porfía"), "porf" );
	deepEqual( Stem("porfiriato"), "porfiriat" );
	deepEqual( Stem("porfirio"), "porfiri" );
	deepEqual( Stem("pormenores"), "pormenor" );
	deepEqual( Stem("pormenorizados"), "pormenoriz" );
	deepEqual( Stem("pornográficas"), "pornograf" );
	deepEqual( Stem("pornográficos"), "pornograf" );
	deepEqual( Stem("porque"), "porqu" );
	deepEqual( Stem("porqué"), "porqu" );
	deepEqual( Stem("porras"), "porr" );
	deepEqual( Stem("porros"), "porr" );
	deepEqual( Stem("porta"), "port" );
	deepEqual( Stem("portaba"), "port" );
	deepEqual( Stem("portaban"), "port" );
	deepEqual( Stem("portabilidad"), "portabil" );
	deepEqual( Stem("portación"), "portacion" );
	deepEqual( Stem("portador"), "portador" );
	deepEqual( Stem("portafolio"), "portafoli" );
	deepEqual( Stem("portal"), "portal" );
	deepEqual( Stem("portan"), "port" );
	deepEqual( Stem("portando"), "port" );
	deepEqual( Stem("portar"), "port" );
	deepEqual( Stem("portarlas"), "port" );
	deepEqual( Stem("portátil"), "portatil" );
	deepEqual( Stem("portátiles"), "portatil" );
	deepEqual( Stem("portavoz"), "portavoz" );
	deepEqual( Stem("porte"), "port" );
	deepEqual( Stem("porten"), "port" );
	deepEqual( Stem("porter"), "port" );
	deepEqual( Stem("portería"), "port" );
	deepEqual( Stem("portero"), "porter" );
	deepEqual( Stem("portezuela"), "portezuel" );
	deepEqual( Stem("portillo"), "portill" );
	deepEqual( Stem("portland"), "portland" );
	deepEqual( Stem("portuaria"), "portuari" );
	deepEqual( Stem("portuarias"), "portuari" );
	deepEqual( Stem("portuario"), "portuari" );
	deepEqual( Stem("portuarios"), "portuari" );
	deepEqual( Stem("portugal"), "portugal" );
	deepEqual( Stem("portugués"), "portugues" );
	deepEqual( Stem("porvenir"), "porven" );
	deepEqual( Stem("posada"), "pos" );
	deepEqual( Stem("posee"), "pose" );
	deepEqual( Stem("poseedor"), "poseedor" );
	deepEqual( Stem("poseen"), "pos" );
	deepEqual( Stem("poseer"), "pos" );
	deepEqual( Stem("poseían"), "pos" );
	deepEqual( Stem("poseidón"), "poseidon" );
	deepEqual( Stem("poses"), "pos" );
	deepEqual( Stem("posesión"), "posesion" );
	deepEqual( Stem("posesionar"), "posesion" );
	deepEqual( Stem("posesionase"), "posesion" );
	deepEqual( Stem("posesivas"), "poses" );
	deepEqual( Stem("posgrado"), "posgr" );
	deepEqual( Stem("posgrados"), "posgr" );
	deepEqual( Stem("posibilidad"), "posibil" );
	deepEqual( Stem("posibilidades"), "posibil" );
	deepEqual( Stem("posibilitan"), "posibilit" );
	deepEqual( Stem("posible"), "posibl" );
	deepEqual( Stem("posiblemente"), "posibl" );
	deepEqual( Stem("posibles"), "posibl" );
	deepEqual( Stem("posición"), "posicion" );
	deepEqual( Stem("posicionado"), "posicion" );
	deepEqual( Stem("posicionamiento"), "posicion" );
	deepEqual( Stem("posiciones"), "posicion" );
	deepEqual( Stem("posicionó"), "posicion" );
	deepEqual( Stem("positiva"), "posit" );
	deepEqual( Stem("positivamente"), "posit" );
	deepEqual( Stem("positivas"), "posit" );
	deepEqual( Stem("positivo"), "posit" );
	deepEqual( Stem("positivos"), "posit" );
	deepEqual( Stem("pospuesto"), "pospuest" );
	deepEqual( Stem("pospuso"), "pospus" );
	deepEqual( Stem("post"), "post" );
	deepEqual( Stem("postal"), "postal" );
	deepEqual( Stem("poste"), "post" );
	deepEqual( Stem("postelectoral"), "postelectoral" );
	deepEqual( Stem("postelectorales"), "postelectoral" );
	deepEqual( Stem("postergación"), "posterg" );
	deepEqual( Stem("posterior"), "posterior" );
	deepEqual( Stem("posteriores"), "posterior" );
	deepEqual( Stem("posteriormente"), "posterior" );
	deepEqual( Stem("posters"), "posters" );
	deepEqual( Stem("postes"), "post" );
	deepEqual( Stem("postguerra"), "postguerr" );
	deepEqual( Stem("postor"), "postor" );
	deepEqual( Stem("postores"), "postor" );
	deepEqual( Stem("postre"), "postr" );
	deepEqual( Stem("postulaban"), "postul" );
	deepEqual( Stem("postulación"), "postul" );
	deepEqual( Stem("postulada"), "postul" );
	deepEqual( Stem("postulado"), "postul" );
	deepEqual( Stem("postulados"), "postul" );
	deepEqual( Stem("postular"), "postul" );
	deepEqual( Stem("postularse"), "postul" );
	deepEqual( Stem("postuló"), "postul" );
	deepEqual( Stem("póstumo"), "postum" );
	deepEqual( Stem("postura"), "postur" );
	deepEqual( Stem("posturas"), "postur" );
	deepEqual( Stem("potabilizadora"), "potabiliz" );
	deepEqual( Stem("potabilizadoras"), "potabiliz" );
	deepEqual( Stem("potable"), "potabl" );
	deepEqual( Stem("potencia"), "potenci" );
	deepEqual( Stem("potencial"), "potencial" );
	deepEqual( Stem("potenciales"), "potencial" );
	deepEqual( Stem("potencialmente"), "potencial" );
	deepEqual( Stem("potente"), "potent" );
	deepEqual( Stem("potestad"), "potest" );
	deepEqual( Stem("potomac"), "potomac" );
	deepEqual( Stem("potosi"), "potosi" );
	deepEqual( Stem("potosí"), "potos" );
	deepEqual( Stem("potosino"), "potosin" );
	deepEqual( Stem("potrillo"), "potrill" );
	deepEqual( Stem("potrillos"), "potrill" );
	deepEqual( Stem("potros"), "potr" );
	deepEqual( Stem("pottlesberghe"), "pottlesbergh" );
	deepEqual( Stem("poul"), "poul" );
	deepEqual( Stem("powell"), "powell" );
	deepEqual( Stem("powerbook"), "powerbook" );
	deepEqual( Stem("powered"), "power" );
	deepEqual( Stem("pozas"), "poz" );
	deepEqual( Stem("pozo"), "poz" );
	deepEqual( Stem("pozole"), "pozol" );
	deepEqual( Stem("pozos"), "poz" );
	deepEqual( Stem("ppc"), "ppc" );
	deepEqual( Stem("pps"), "pps" );
	deepEqual( Stem("practica"), "practic" );
	deepEqual( Stem("práctica"), "practic" );
	deepEqual( Stem("practicaban"), "practic" );
	deepEqual( Stem("practicable"), "practic" );
	deepEqual( Stem("practicadas"), "practic" );
	deepEqual( Stem("prácticamente"), "practic" );
	deepEqual( Stem("practicamos"), "practic" );
	deepEqual( Stem("practican"), "practic" );
	deepEqual( Stem("practicar"), "practic" );
	deepEqual( Stem("practicaran"), "practic" );
	deepEqual( Stem("practicaron"), "practic" );
	deepEqual( Stem("practicas"), "practic" );
	deepEqual( Stem("prácticas"), "practic" );
	deepEqual( Stem("práctico"), "practic" );
	deepEqual( Stem("practicó"), "practic" );
	deepEqual( Stem("prácticos"), "practic" );
	deepEqual( Stem("practique"), "practiqu" );
	deepEqual( Stem("practiquen"), "practiqu" );
	deepEqual( Stem("praderas"), "prader" );
	deepEqual( Stem("prado"), "prad" );
	deepEqual( Stem("prampolini"), "prampolini" );
	deepEqual( Stem("praviel"), "praviel" );
	deepEqual( Stem("praxedis"), "praxedis" );
	deepEqual( Stem("prd"), "prd" );
	deepEqual( Stem("pre"), "pre" );
	deepEqual( Stem("preámbulo"), "preambul" );
	deepEqual( Stem("prebendas"), "prebend" );
	deepEqual( Stem("precandidato"), "precandidat" );
	deepEqual( Stem("precaria"), "precari" );
	deepEqual( Stem("precario"), "precari" );
	deepEqual( Stem("precaución"), "precaucion" );
	deepEqual( Stem("precautorio"), "precautori" );
	deepEqual( Stem("precavido"), "precav" );
	deepEqual( Stem("precavidos"), "precav" );
	deepEqual( Stem("precedente"), "precedent" );
	deepEqual( Stem("precedentes"), "precedent" );
	deepEqual( Stem("precedidas"), "preced" );
	deepEqual( Stem("precepto"), "precept" );
	deepEqual( Stem("preceptos"), "precept" );
	deepEqual( Stem("preciados"), "preci" );
	deepEqual( Stem("precio"), "preci" );
	deepEqual( Stem("precios"), "preci" );
	deepEqual( Stem("preciosas"), "preci" );
	deepEqual( Stem("precioso"), "precios" );
	deepEqual( Stem("precipitación"), "precipit" );
	deepEqual( Stem("precipitaciones"), "precipit" );
	deepEqual( Stem("precipitadamente"), "precipit" );
	deepEqual( Stem("precipitadas"), "precipit" );
	deepEqual( Stem("precipitándose"), "precipit" );
	deepEqual( Stem("precipitaron"), "precipit" );
	deepEqual( Stem("precipitarse"), "precipit" );
	deepEqual( Stem("precipitó"), "precipit" );
	deepEqual( Stem("precisa"), "precis" );
	deepEqual( Stem("precisado"), "precis" );
	deepEqual( Stem("precisamente"), "precis" );
	deepEqual( Stem("precísamente"), "precis" );
	deepEqual( Stem("precisan"), "precis" );
	deepEqual( Stem("precisando"), "precis" );
	deepEqual( Stem("precisar"), "precis" );
	deepEqual( Stem("precisaron"), "precis" );
	deepEqual( Stem("precisión"), "precision" );
	deepEqual( Stem("precisiones"), "precision" );
	deepEqual( Stem("preciso"), "precis" );
	deepEqual( Stem("precisó"), "precis" );
	deepEqual( Stem("precisos"), "precis" );
	deepEqual( Stem("preclaros"), "preclar" );
	deepEqual( Stem("precolombina"), "precolombin" );
	deepEqual( Stem("preconiza"), "preconiz" );
	deepEqual( Stem("precursora"), "precursor" );
	deepEqual( Stem("precursores"), "precursor" );
	deepEqual( Stem("predecir"), "predec" );
	deepEqual( Stem("predestinado"), "predestin" );
	deepEqual( Stem("predeterminado"), "predetermin" );
	deepEqual( Stem("predial"), "predial" );
	deepEqual( Stem("predica"), "predic" );
	deepEqual( Stem("predicación"), "predic" );
	deepEqual( Stem("predicador"), "predic" );
	deepEqual( Stem("predicar"), "predic" );
	deepEqual( Stem("predicciones"), "prediccion" );
	deepEqual( Stem("predice"), "predic" );
	deepEqual( Stem("predijo"), "predij" );
	deepEqual( Stem("predio"), "predi" );
	deepEqual( Stem("predispone"), "predispon" );
	deepEqual( Stem("predomina"), "predomin" );
	deepEqual( Stem("predominan"), "predomin" );
	deepEqual( Stem("predominante"), "predomin" );
	deepEqual( Stem("predominantes"), "predomin" );
	deepEqual( Stem("predominaron"), "predomin" );
	deepEqual( Stem("preelectorales"), "preelectoral" );
	deepEqual( Stem("preerupción"), "preerupcion" );
	deepEqual( Stem("preescolar"), "preescol" );
	deepEqual( Stem("preestablecido"), "preestablec" );
	deepEqual( Stem("preestablecidos"), "preestablec" );
	deepEqual( Stem("prefecto"), "prefect" );
	deepEqual( Stem("preferencia"), "preferent" );
	deepEqual( Stem("preferencial"), "preferencial" );
	deepEqual( Stem("preferencias"), "preferent" );
	deepEqual( Stem("preferentemente"), "preferent" );
	deepEqual( Stem("prefería"), "pref" );
	deepEqual( Stem("preferible"), "prefer" );
	deepEqual( Stem("preferida"), "prefer" );
	deepEqual( Stem("preferirán"), "prefer" );
	deepEqual( Stem("preferiría"), "prefer" );
	deepEqual( Stem("prefiera"), "pref" );
	deepEqual( Stem("prefieran"), "pref" );
	deepEqual( Stem("prefiere"), "prefier" );
	deepEqual( Stem("prefieren"), "prefier" );
	deepEqual( Stem("prefiero"), "prefier" );
	deepEqual( Stem("prefijado"), "prefij" );
	deepEqual( Stem("prefirieron"), "prefir" );
	deepEqual( Stem("prefirió"), "prefir" );
	deepEqual( Stem("pregrado"), "pregr" );
	deepEqual( Stem("pregunta"), "pregunt" );
	deepEqual( Stem("preguntaba"), "pregunt" );
	deepEqual( Stem("preguntamos"), "pregunt" );
	deepEqual( Stem("preguntan"), "pregunt" );
	deepEqual( Stem("preguntando"), "pregunt" );
	deepEqual( Stem("preguntar"), "pregunt" );
	deepEqual( Stem("preguntarle"), "pregunt" );
	deepEqual( Stem("preguntarnos"), "pregunt" );
	deepEqual( Stem("preguntaron"), "pregunt" );
	deepEqual( Stem("preguntarse"), "pregunt" );
	deepEqual( Stem("preguntas"), "pregunt" );
	deepEqual( Stem("pregunte"), "pregunt" );
	deepEqual( Stem("pregúnteles"), "preguntel" );
	deepEqual( Stem("pregunto"), "pregunt" );
	deepEqual( Stem("preguntó"), "pregunt" );
	deepEqual( Stem("prehispánica"), "prehispan" );
	deepEqual( Stem("prehispánicas"), "prehispan" );
	deepEqual( Stem("prehispánico"), "prehispan" );
	deepEqual( Stem("prejuicios"), "prejuici" );
	deepEqual( Stem("prejunior"), "prejunior" );
	deepEqual( Stem("prelado"), "prel" );
	deepEqual( Stem("prelavado"), "prelav" );
	deepEqual( Stem("preliminar"), "prelimin" );
	deepEqual( Stem("preliminares"), "preliminar" );
	deepEqual( Stem("prematuramente"), "prematur" );
	deepEqual( Stem("prematuro"), "prematur" );
	deepEqual( Stem("premestizo"), "premestiz" );
	deepEqual( Stem("premiaba"), "premi" );
	deepEqual( Stem("premiación"), "premiacion" );
	deepEqual( Stem("premiadas"), "premi" );
	deepEqual( Stem("premiado"), "premi" );
	deepEqual( Stem("premiados"), "premi" );
	deepEqual( Stem("premiaron"), "premi" );
	deepEqual( Stem("premie"), "premi" );
	deepEqual( Stem("premier"), "premi" );
	deepEqual( Stem("premio"), "premi" );
	deepEqual( Stem("premió"), "prem" );
	deepEqual( Stem("premios"), "premi" );
	deepEqual( Stem("premisa"), "premis" );
	deepEqual( Stem("premoderno"), "premodern" );
	deepEqual( Stem("premonición"), "premonicion" );
	deepEqual( Stem("premundialistas"), "premundial" );
	deepEqual( Stem("prenda"), "prend" );
	deepEqual( Stem("prendarios"), "prendari" );
	deepEqual( Stem("prendas"), "prend" );
	deepEqual( Stem("prende"), "prend" );
	deepEqual( Stem("prendedores"), "prendedor" );
	deepEqual( Stem("prender"), "prend" );
	deepEqual( Stem("prendido"), "prend" );
	deepEqual( Stem("prendieron"), "prend" );
	deepEqual( Stem("prensa"), "prens" );
	deepEqual( Stem("prensado"), "prens" );
	deepEqual( Stem("preocupa"), "preocup" );
	deepEqual( Stem("preocupaba"), "preocup" );
	deepEqual( Stem("preocupación"), "preocup" );
	deepEqual( Stem("preocupaciones"), "preocup" );
	deepEqual( Stem("preocupada"), "preocup" );
	deepEqual( Stem("preocupadas"), "preocup" );
	deepEqual( Stem("preocupado"), "preocup" );
	deepEqual( Stem("preocupados"), "preocup" );
	deepEqual( Stem("preocupan"), "preocup" );
	deepEqual( Stem("preocupar"), "preocup" );
	deepEqual( Stem("preocupara"), "preocup" );
	deepEqual( Stem("preocupará"), "preocup" );
	deepEqual( Stem("preocuparía"), "preocup" );
	deepEqual( Stem("preocuparle"), "preocup" );
	deepEqual( Stem("preocuparon"), "preocup" );
	deepEqual( Stem("preocuparse"), "preocup" );
	deepEqual( Stem("preocupe"), "preocup" );
	deepEqual( Stem("preocupen"), "preocup" );
	deepEqual( Stem("preocupes"), "preocup" );
	deepEqual( Stem("prepara"), "prep" );
	deepEqual( Stem("preparaba"), "prepar" );
	deepEqual( Stem("preparaban"), "prepar" );
	deepEqual( Stem("preparación"), "prepar" );
	deepEqual( Stem("preparada"), "prepar" );
	deepEqual( Stem("preparadas"), "prepar" );
	deepEqual( Stem("preparado"), "prepar" );
	deepEqual( Stem("preparados"), "prepar" );
	deepEqual( Stem("preparamos"), "prepar" );
	deepEqual( Stem("preparan"), "prep" );
	deepEqual( Stem("preparando"), "prepar" );
	deepEqual( Stem("preparar"), "prepar" );
	deepEqual( Stem("prepararán"), "prepar" );
	deepEqual( Stem("prepararla"), "prepar" );
	deepEqual( Stem("prepararse"), "prepar" );
	deepEqual( Stem("prepárate"), "preparat" );
	deepEqual( Stem("preparativos"), "prepar" );
	deepEqual( Stem("preparatoria"), "preparatori" );
	deepEqual( Stem("preparatorias"), "preparatori" );
	deepEqual( Stem("preparatorio"), "preparatori" );
	deepEqual( Stem("preparatorios"), "preparatori" );
	deepEqual( Stem("prepárele"), "preparel" );
	deepEqual( Stem("preparen"), "prepar" );
	deepEqual( Stem("prepárese"), "prepares" );
	deepEqual( Stem("preparó"), "prepar" );
	deepEqual( Stem("preponderantemente"), "preponder" );
	deepEqual( Stem("prepotencia"), "prepotent" );
	deepEqual( Stem("prepotente"), "prepotent" );
	deepEqual( Stem("prepotentes"), "prepotent" );
	deepEqual( Stem("preproducción"), "preproduccion" );
	deepEqual( Stem("prerequisitos"), "prerequisit" );
	deepEqual( Stem("prerregistro"), "prerregistr" );
	deepEqual( Stem("prerrogativa"), "prerrog" );
	deepEqual( Stem("prerrogativas"), "prerrog" );
	deepEqual( Stem("presa"), "pres" );
	deepEqual( Stem("presas"), "pres" );
	deepEqual( Stem("prescindir"), "prescind" );
	deepEqual( Stem("prescriben"), "prescrib" );
	deepEqual( Stem("prescritos"), "prescrit" );
	deepEqual( Stem("preseas"), "pres" );
	deepEqual( Stem("preselección"), "preseleccion" );
	deepEqual( Stem("presencia"), "presenci" );
	deepEqual( Stem("presenciado"), "presenci" );
	deepEqual( Stem("presenciados"), "presenci" );
	deepEqual( Stem("presencial"), "presencial" );
	deepEqual( Stem("presenciar"), "presenci" );
	deepEqual( Stem("presenciaron"), "presenci" );
	deepEqual( Stem("presenció"), "presenc" );
	deepEqual( Stem("presenta"), "present" );
	deepEqual( Stem("presentaba"), "present" );
	deepEqual( Stem("presentaban"), "present" );
	deepEqual( Stem("presentación"), "present" );
	deepEqual( Stem("presentaciones"), "present" );
	deepEqual( Stem("presentada"), "present" );
	deepEqual( Stem("presentadas"), "present" );
	deepEqual( Stem("presentado"), "present" );
	deepEqual( Stem("presentador"), "present" );
	deepEqual( Stem("presentadores"), "present" );
	deepEqual( Stem("presentados"), "present" );
	deepEqual( Stem("presentamos"), "present" );
	deepEqual( Stem("presentan"), "present" );
	deepEqual( Stem("presentando"), "present" );
	deepEqual( Stem("presentándolo"), "present" );
	deepEqual( Stem("presentándose"), "present" );
	deepEqual( Stem("presentar"), "present" );
	deepEqual( Stem("presentara"), "present" );
	deepEqual( Stem("presentará"), "present" );
	deepEqual( Stem("presentáramos"), "present" );
	deepEqual( Stem("presentarán"), "present" );
	deepEqual( Stem("presentaremos"), "present" );
	deepEqual( Stem("presentarla"), "present" );
	deepEqual( Stem("presentarlo"), "present" );
	deepEqual( Stem("presentarlos"), "present" );
	deepEqual( Stem("presentarme"), "present" );
	deepEqual( Stem("presentaron"), "present" );
	deepEqual( Stem("presentarse"), "present" );
	deepEqual( Stem("presente"), "present" );
	deepEqual( Stem("presenten"), "present" );
	deepEqual( Stem("presentes"), "present" );
	deepEqual( Stem("presentí"), "present" );
	deepEqual( Stem("presentó"), "present" );
	deepEqual( Stem("preservación"), "preserv" );
	deepEqual( Stem("preservado"), "preserv" );
	deepEqual( Stem("preservar"), "preserv" );
	deepEqual( Stem("preservarle"), "preserv" );
	deepEqual( Stem("presida"), "pres" );
	deepEqual( Stem("preside"), "presid" );
	deepEqual( Stem("presiden"), "presid" );
	deepEqual( Stem("presidencia"), "president" );
	deepEqual( Stem("presidenciable"), "presidenci" );
	deepEqual( Stem("presidenciables"), "presidenci" );
	deepEqual( Stem("presidencial"), "presidencial" );
	deepEqual( Stem("presidenciales"), "presidencial" );
	deepEqual( Stem("presidencialismo"), "presidencial" );
	deepEqual( Stem("presidencialista"), "presidencial" );
	deepEqual( Stem("presidenta"), "president" );
	deepEqual( Stem("presidente"), "president" );
	deepEqual( Stem("presidentes"), "president" );
	deepEqual( Stem("presidida"), "presid" );
	deepEqual( Stem("presidido"), "presid" );
	deepEqual( Stem("presidió"), "presid" );
	deepEqual( Stem("presidir"), "presid" );
	deepEqual( Stem("presidirá"), "presid" );
	deepEqual( Stem("presidium"), "presidium" );
	deepEqual( Stem("presión"), "presion" );
	deepEqual( Stem("presionado"), "presion" );
	deepEqual( Stem("presionando"), "presion" );
	deepEqual( Stem("presionar"), "presion" );
	deepEqual( Stem("presionará"), "presion" );
	deepEqual( Stem("presionarlos"), "presion" );
	deepEqual( Stem("presionaron"), "presion" );
	deepEqual( Stem("presione"), "presion" );
	deepEqual( Stem("presiones"), "presion" );
	deepEqual( Stem("presley"), "presley" );
	deepEqual( Stem("preso"), "pres" );
	deepEqual( Stem("presos"), "pres" );
	deepEqual( Stem("pressey"), "pressey" );
	deepEqual( Stem("presta"), "prest" );
	deepEqual( Stem("prestación"), "prestacion" );
	deepEqual( Stem("prestaciones"), "prestacion" );
	deepEqual( Stem("prestada"), "prest" );
	deepEqual( Stem("prestado"), "prest" );
	deepEqual( Stem("prestadores"), "prestador" );
	deepEqual( Stem("préstamo"), "prestam" );
	deepEqual( Stem("préstamos"), "prest" );
	deepEqual( Stem("prestan"), "prest" );
	deepEqual( Stem("prestancia"), "prestanci" );
	deepEqual( Stem("prestar"), "prest" );
	deepEqual( Stem("prestaría"), "prest" );
	deepEqual( Stem("prestaron"), "prest" );
	deepEqual( Stem("preste"), "prest" );
	deepEqual( Stem("prestigiado"), "prestigi" );
	deepEqual( Stem("prestigian"), "prestigi" );
	deepEqual( Stem("prestigio"), "prestigi" );
	deepEqual( Stem("prestigiosos"), "prestigi" );
	deepEqual( Stem("prestó"), "prest" );
	deepEqual( Stem("presume"), "presum" );
	deepEqual( Stem("presumiblemente"), "presum" );
	deepEqual( Stem("presumida"), "presum" );
	deepEqual( Stem("presumieron"), "presum" );
	deepEqual( Stem("presumir"), "presum" );
	deepEqual( Stem("presunción"), "presuncion" );
	deepEqual( Stem("presunta"), "presunt" );
	deepEqual( Stem("presuntamente"), "presunt" );
	deepEqual( Stem("presuntas"), "presunt" );
	deepEqual( Stem("presunto"), "presunt" );
	deepEqual( Stem("presuntos"), "presunt" );
	deepEqual( Stem("presuntuoso"), "presuntu" );
	deepEqual( Stem("presupuestadas"), "presupuest" );
	deepEqual( Stem("presupuestal"), "presupuestal" );
	deepEqual( Stem("presupuestario"), "presupuestari" );
	deepEqual( Stem("presupuesto"), "presupuest" );
	deepEqual( Stem("presurosamente"), "presur" );
	deepEqual( Stem("preta"), "pret" );
	deepEqual( Stem("pretel"), "pretel" );
	deepEqual( Stem("pretemporada"), "pretempor" );
	deepEqual( Stem("pretenda"), "pretend" );
	deepEqual( Stem("pretende"), "pretend" );
	deepEqual( Stem("pretendemos"), "pretend" );
	deepEqual( Stem("pretenden"), "pretend" );
	deepEqual( Stem("pretender"), "pretend" );
	deepEqual( Stem("pretendía"), "pretend" );
	deepEqual( Stem("pretendían"), "pretend" );
	deepEqual( Stem("pretendido"), "pretend" );
	deepEqual( Stem("pretendiente"), "pretendient" );
	deepEqual( Stem("pretendieran"), "pretend" );
	deepEqual( Stem("pretendieron"), "pretend" );
	deepEqual( Stem("pretendió"), "pretend" );
	deepEqual( Stem("pretensión"), "pretension" );
	deepEqual( Stem("pretexto"), "pretext" );
	deepEqual( Stem("prevalece"), "prevalec" );
	deepEqual( Stem("prevalecen"), "prevalec" );
	deepEqual( Stem("prevaleciendo"), "prevalec" );
	deepEqual( Stem("prevalecientes"), "prevalecient" );
	deepEqual( Stem("prevalezca"), "prevalezc" );
	deepEqual( Stem("preve"), "prev" );
	deepEqual( Stem("prevé"), "prev" );
	deepEqual( Stem("prevee"), "preve" );
	deepEqual( Stem("prevención"), "prevencion" );
	deepEqual( Stem("prevenida"), "preven" );
	deepEqual( Stem("prevenir"), "preven" );
	deepEqual( Stem("prevenirse"), "preven" );
	deepEqual( Stem("preventiva"), "prevent" );
	deepEqual( Stem("preventivas"), "prevent" );
	deepEqual( Stem("preventivo"), "prevent" );
	deepEqual( Stem("prever"), "prev" );
	deepEqual( Stem("preverificación"), "preverif" );
	deepEqual( Stem("previa"), "previ" );
	deepEqual( Stem("previamente"), "previ" );
	deepEqual( Stem("previas"), "previ" );
	deepEqual( Stem("previendo"), "prev" );
	deepEqual( Stem("previéndolo"), "prev" );
	deepEqual( Stem("previene"), "previen" );
	deepEqual( Stem("previno"), "previn" );
	deepEqual( Stem("previo"), "previ" );
	deepEqual( Stem("previó"), "prev" );
	deepEqual( Stem("previos"), "previ" );
	deepEqual( Stem("previsible"), "previs" );
	deepEqual( Stem("previsión"), "prevision" );
	deepEqual( Stem("prevista"), "previst" );
	deepEqual( Stem("previstas"), "previst" );
	deepEqual( Stem("previsto"), "previst" );
	deepEqual( Stem("previstos"), "previst" );
	deepEqual( Stem("prevoisin"), "prevoisin" );
	deepEqual( Stem("pri"), "pri" );
	deepEqual( Stem("pría"), "pri" );
	deepEqual( Stem("price"), "pric" );
	deepEqual( Stem("prieto"), "priet" );
	deepEqual( Stem("prigione"), "prigion" );
	deepEqual( Stem("prigobierno"), "prigobiern" );
	deepEqual( Stem("priísmo"), "priism" );
	deepEqual( Stem("priísta"), "priist" );
	deepEqual( Stem("priístas"), "priist" );
	deepEqual( Stem("prima"), "prim" );
	deepEqual( Stem("primaria"), "primari" );
	deepEqual( Stem("primarias"), "primari" );
	deepEqual( Stem("primario"), "primari" );
	deepEqual( Stem("primarios"), "primari" );
	deepEqual( Stem("primas"), "prim" );
	deepEqual( Stem("primates"), "primat" );
	deepEqual( Stem("primavera"), "primaver" );
	deepEqual( Stem("prime"), "prim" );
	deepEqual( Stem("primer"), "prim" );
	deepEqual( Stem("primera"), "primer" );
	deepEqual( Stem("primeramente"), "primer" );
	deepEqual( Stem("primeras"), "primer" );
	deepEqual( Stem("primeriza"), "primeriz" );
	deepEqual( Stem("primero"), "primer" );
	deepEqual( Stem("primeros"), "primer" );
	deepEqual( Stem("primex"), "primex" );
	deepEqual( Stem("primitivas"), "primit" );
	deepEqual( Stem("primitivismo"), "primitiv" );
	deepEqual( Stem("primitivo"), "primit" );
	deepEqual( Stem("primitivos"), "primit" );
	deepEqual( Stem("primo"), "prim" );
	deepEqual( Stem("primogénita"), "primogenit" );
	deepEqual( Stem("primogénito"), "primogenit" );
	deepEqual( Stem("primordial"), "primordial" );
	deepEqual( Stem("primordiales"), "primordial" );
	deepEqual( Stem("princesa"), "princes" );
	deepEqual( Stem("princesas"), "princes" );
	deepEqual( Stem("princeton"), "princeton" );
	deepEqual( Stem("principal"), "principal" );
	deepEqual( Stem("principales"), "principal" );
	deepEqual( Stem("principalmente"), "principal" );
	deepEqual( Stem("príncipe"), "princip" );
	deepEqual( Stem("príncipes"), "princip" );
	deepEqual( Stem("principesco"), "principesc" );
	deepEqual( Stem("principiante"), "principi" );
	deepEqual( Stem("principio"), "principi" );
	deepEqual( Stem("principios"), "principi" );
	deepEqual( Stem("prioridad"), "priorid" );
	deepEqual( Stem("prioridades"), "prioridad" );
	deepEqual( Stem("prioritaria"), "prioritari" );
	deepEqual( Stem("prioritario"), "prioritari" );
	deepEqual( Stem("prioritarios"), "prioritari" );
	deepEqual( Stem("prisa"), "pris" );
	deepEqual( Stem("prisión"), "prision" );
	deepEqual( Stem("prisionero"), "prisioner" );
	deepEqual( Stem("prisioneros"), "prisioner" );
	deepEqual( Stem("pristina"), "pristin" );
	deepEqual( Stem("priva"), "priv" );
	deepEqual( Stem("privacidad"), "privac" );
	deepEqual( Stem("privada"), "priv" );
	deepEqual( Stem("privadas"), "priv" );
	deepEqual( Stem("privado"), "priv" );
	deepEqual( Stem("privados"), "priv" );
	deepEqual( Stem("privan"), "priv" );
	deepEqual( Stem("privar"), "priv" );
	deepEqual( Stem("privativa"), "privat" );
	deepEqual( Stem("privativo"), "privat" );
	deepEqual( Stem("privatización"), "privatiz" );
	deepEqual( Stem("privatizaciones"), "privatiz" );
	deepEqual( Stem("privatizado"), "privatiz" );
	deepEqual( Stem("privatizar"), "privatiz" );
	deepEqual( Stem("privilegiada"), "privilegi" );
	deepEqual( Stem("privilegiado"), "privilegi" );
	deepEqual( Stem("privilegio"), "privilegi" );
	deepEqual( Stem("privilegios"), "privilegi" );
	deepEqual( Stem("privó"), "priv" );
	deepEqual( Stem("pro"), "pro" );
	deepEqual( Stem("probabilidades"), "probabil" );
	deepEqual( Stem("probable"), "probabl" );
	deepEqual( Stem("probablemente"), "probabl" );
	deepEqual( Stem("probables"), "probabl" );
	deepEqual( Stem("probada"), "prob" );
	deepEqual( Stem("probado"), "prob" );
	deepEqual( Stem("probados"), "prob" );
	deepEqual( Stem("probar"), "prob" );
	deepEqual( Stem("probara"), "prob" );
	deepEqual( Stem("probarle"), "prob" );
	deepEqual( Stem("probarlo"), "prob" );
	deepEqual( Stem("probaron"), "prob" );
	deepEqual( Stem("probarse"), "prob" );
	deepEqual( Stem("problema"), "problem" );
	deepEqual( Stem("problemas"), "problem" );
	deepEqual( Stem("problemática"), "problemat" );
	deepEqual( Stem("problemático"), "problemat" );
	deepEqual( Stem("probó"), "prob" );
	deepEqual( Stem("probursa"), "proburs" );
	deepEqual( Stem("proceda"), "proced" );
	deepEqual( Stem("procede"), "proced" );
	deepEqual( Stem("proceden"), "proced" );
	deepEqual( Stem("procedencia"), "procedent" );
	deepEqual( Stem("procedente"), "procedent" );
	deepEqual( Stem("procedentes"), "procedent" );
	deepEqual( Stem("proceder"), "proced" );
	deepEqual( Stem("procederá"), "proced" );
	deepEqual( Stem("procedimentales"), "procedimental" );
	deepEqual( Stem("procedimiento"), "proced" );
	deepEqual( Stem("procedimientos"), "proced" );
	deepEqual( Stem("procéntrico"), "procentr" );
	deepEqual( Stem("procentro"), "procentr" );
	deepEqual( Stem("procesa"), "proces" );
	deepEqual( Stem("procesaba"), "proces" );
	deepEqual( Stem("procesada"), "proces" );
	deepEqual( Stem("procesado"), "proces" );
	deepEqual( Stem("procesador"), "proces" );
	deepEqual( Stem("procesadora"), "proces" );
	deepEqual( Stem("procesadores"), "proces" );
	deepEqual( Stem("procesados"), "proces" );
	deepEqual( Stem("procesal"), "procesal" );
	deepEqual( Stem("procesales"), "procesal" );
	deepEqual( Stem("procesamiento"), "proces" );
	deepEqual( Stem("procesando"), "proces" );
	deepEqual( Stem("proceso"), "proces" );
	deepEqual( Stem("procesos"), "proces" );
	deepEqual( Stem("proclama"), "proclam" );
	deepEqual( Stem("proclamaciones"), "proclam" );
	deepEqual( Stem("proclamado"), "proclam" );
	deepEqual( Stem("proclamó"), "proclam" );
	deepEqual( Stem("procreación"), "procreacion" );
	deepEqual( Stem("procura"), "procur" );
	deepEqual( Stem("procuración"), "procur" );
	deepEqual( Stem("procurador"), "procur" );
	deepEqual( Stem("procuradora"), "procur" );
	deepEqual( Stem("procuraduria"), "procuraduri" );
	deepEqual( Stem("procuraduría"), "procuradur" );
	deepEqual( Stem("procuramos"), "procur" );
	deepEqual( Stem("procurar"), "procur" );
	deepEqual( Stem("procurarán"), "procur" );
	deepEqual( Stem("procurarse"), "procur" );
	deepEqual( Stem("procure"), "procur" );
	deepEqual( Stem("procuro"), "procur" );
	deepEqual( Stem("procuró"), "procur" );
	deepEqual( Stem("prodigiosa"), "prodigi" );
	deepEqual( Stem("producción"), "produccion" );
	deepEqual( Stem("producciones"), "produccion" );
	deepEqual( Stem("produce"), "produc" );
	deepEqual( Stem("producen"), "produc" );
	deepEqual( Stem("producían"), "produc" );
	deepEqual( Stem("producida"), "produc" );
	deepEqual( Stem("producidas"), "produc" );
	deepEqual( Stem("producido"), "produc" );
	deepEqual( Stem("producidos"), "produc" );
	deepEqual( Stem("produciendo"), "produc" );
	deepEqual( Stem("producir"), "produc" );
	deepEqual( Stem("producirá"), "produc" );
	deepEqual( Stem("producirían"), "produc" );
	deepEqual( Stem("producirse"), "produc" );
	deepEqual( Stem("productiva"), "product" );
	deepEqual( Stem("productivas"), "product" );
	deepEqual( Stem("productividad"), "product" );
	deepEqual( Stem("productivo"), "product" );
	deepEqual( Stem("productivos"), "product" );
	deepEqual( Stem("producto"), "product" );
	deepEqual( Stem("productor"), "productor" );
	deepEqual( Stem("productora"), "productor" );
	deepEqual( Stem("productoras"), "productor" );
	deepEqual( Stem("productores"), "productor" );
	deepEqual( Stem("productos"), "product" );
	deepEqual( Stem("produjera"), "produjer" );
	deepEqual( Stem("produjeron"), "produjeron" );
	deepEqual( Stem("produjo"), "produj" );
	deepEqual( Stem("produzca"), "produzc" );
	deepEqual( Stem("produzcan"), "produzc" );
	deepEqual( Stem("proeza"), "proez" );
	deepEqual( Stem("profeco"), "profec" );
	deepEqual( Stem("profesa"), "profes" );
	deepEqual( Stem("profesan"), "profes" );
	deepEqual( Stem("profesión"), "profesion" );
	deepEqual( Stem("profesional"), "profesional" );
	deepEqual( Stem("profesionales"), "profesional" );
	deepEqual( Stem("profesionalismo"), "profesional" );
	deepEqual( Stem("profesionalización"), "profesionaliz" );
	deepEqual( Stem("profesionalmente"), "profesional" );
	deepEqual( Stem("profesionista"), "profesion" );
	deepEqual( Stem("profesionistas"), "profesion" );
	deepEqual( Stem("profesor"), "profesor" );
	deepEqual( Stem("profesora"), "profesor" );
	deepEqual( Stem("profesorado"), "profesor" );
	deepEqual( Stem("profesores"), "profesor" );
	deepEqual( Stem("profeta"), "profet" );
	deepEqual( Stem("profetas"), "profet" );
	deepEqual( Stem("profr"), "profr" );
	deepEqual( Stem("prófugo"), "profug" );
	deepEqual( Stem("prófugos"), "profug" );
	deepEqual( Stem("profunda"), "profund" );
	deepEqual( Stem("profundamente"), "profund" );
	deepEqual( Stem("profundas"), "profund" );
	deepEqual( Stem("profundicen"), "profundic" );
	deepEqual( Stem("profundidad"), "profund" );
	deepEqual( Stem("profundidades"), "profund" );
	deepEqual( Stem("profundizado"), "profundiz" );
	deepEqual( Stem("profundizamos"), "profundiz" );
	deepEqual( Stem("profundizar"), "profundiz" );
	deepEqual( Stem("profundizará"), "profundiz" );
	deepEqual( Stem("profundo"), "profund" );
	deepEqual( Stem("profundos"), "profund" );
	deepEqual( Stem("progenitora"), "progenitor" );
	deepEqual( Stem("programa"), "program" );
	deepEqual( Stem("programación"), "program" );
	deepEqual( Stem("programada"), "program" );
	deepEqual( Stem("programadas"), "program" );
	deepEqual( Stem("programado"), "program" );
	deepEqual( Stem("programados"), "program" );
	deepEqual( Stem("programan"), "program" );
	deepEqual( Stem("programando"), "program" );
	deepEqual( Stem("programar"), "program" );
	deepEqual( Stem("programas"), "program" );
	deepEqual( Stem("programático"), "programat" );
	deepEqual( Stem("programmer"), "programm" );
	deepEqual( Stem("programó"), "program" );
	deepEqual( Stem("progresando"), "progres" );
	deepEqual( Stem("progresarán"), "progres" );
	deepEqual( Stem("progresista"), "progres" );
	deepEqual( Stem("progresivamente"), "progres" );
	deepEqual( Stem("progresivo"), "progres" );
	deepEqual( Stem("progreso"), "progres" );
	deepEqual( Stem("progresos"), "progres" );
	deepEqual( Stem("prohiba"), "prohib" );
	deepEqual( Stem("prohiban"), "prohib" );
	deepEqual( Stem("prohíbe"), "prohib" );
	deepEqual( Stem("prohibía"), "prohib" );
	deepEqual( Stem("prohibición"), "prohibicion" );
	deepEqual( Stem("prohibiciones"), "prohibicion" );
	deepEqual( Stem("prohibida"), "prohib" );
	deepEqual( Stem("prohibidas"), "prohib" );
	deepEqual( Stem("prohibido"), "prohib" );
	deepEqual( Stem("prohibidos"), "prohib" );
	deepEqual( Stem("prohibieron"), "prohib" );
	deepEqual( Stem("prohibió"), "prohib" );
	deepEqual( Stem("prohibir"), "prohib" );
	deepEqual( Stem("proletaria"), "proletari" );
	deepEqual( Stem("prolíder"), "prolid" );
	deepEqual( Stem("proliferación"), "prolifer" );
	deepEqual( Stem("proliferan"), "prolifer" );
	deepEqual( Stem("prolijas"), "prolij" );
	deepEqual( Stem("prologan"), "prolog" );
	deepEqual( Stem("prólogo"), "prolog" );
	deepEqual( Stem("prolongación"), "prolong" );
	deepEqual( Stem("prolongada"), "prolong" );
	deepEqual( Stem("prolongadas"), "prolong" );
	deepEqual( Stem("prolongado"), "prolong" );
	deepEqual( Stem("prolongan"), "prolong" );
	deepEqual( Stem("prolongar"), "prolong" );
	deepEqual( Stem("prolongarse"), "prolong" );
	deepEqual( Stem("prolongó"), "prolong" );
	deepEqual( Stem("promediar"), "promedi" );
	deepEqual( Stem("promedio"), "promedi" );
	deepEqual( Stem("promesa"), "promes" );
	deepEqual( Stem("promesas"), "promes" );
	deepEqual( Stem("prometan"), "promet" );
	deepEqual( Stem("promete"), "promet" );
	deepEqual( Stem("prometedor"), "prometedor" );
	deepEqual( Stem("prometen"), "promet" );
	deepEqual( Stem("prometerle"), "promet" );
	deepEqual( Stem("prometerles"), "promet" );
	deepEqual( Stem("prometidas"), "promet" );
	deepEqual( Stem("prometido"), "promet" );
	deepEqual( Stem("prometieron"), "promet" );
	deepEqual( Stem("prometimos"), "promet" );
	deepEqual( Stem("prometió"), "promet" );
	deepEqual( Stem("prometo"), "promet" );
	deepEqual( Stem("promex"), "promex" );
	deepEqual( Stem("promiscuidad"), "promiscu" );
	deepEqual( Stem("promiscuo"), "promiscu" );
	deepEqual( Stem("promoción"), "promocion" );
	deepEqual( Stem("promociona"), "promocion" );
	deepEqual( Stem("promocionado"), "promocion" );
	deepEqual( Stem("promocional"), "promocional" );
	deepEqual( Stem("promocionales"), "promocional" );
	deepEqual( Stem("promocionan"), "promocion" );
	deepEqual( Stem("promocionando"), "promocion" );
	deepEqual( Stem("promocionar"), "promocion" );
	deepEqual( Stem("promocionarlo"), "promocion" );
	deepEqual( Stem("promocionarse"), "promocion" );
	deepEqual( Stem("promociones"), "promocion" );
	deepEqual( Stem("promotor"), "promotor" );
	deepEqual( Stem("promotora"), "promotor" );
	deepEqual( Stem("promotoras"), "promotor" );
	deepEqual( Stem("promotores"), "promotor" );
	deepEqual( Stem("promovemos"), "promov" );
	deepEqual( Stem("promover"), "promov" );
	deepEqual( Stem("promoverá"), "promov" );
	deepEqual( Stem("promoverán"), "promov" );
	deepEqual( Stem("promovía"), "promov" );
	deepEqual( Stem("promovida"), "promov" );
	deepEqual( Stem("promovido"), "promov" );
	deepEqual( Stem("promovidos"), "promov" );
	deepEqual( Stem("promoviendo"), "promov" );
	deepEqual( Stem("promovieron"), "promov" );
	deepEqual( Stem("promovió"), "promov" );
	deepEqual( Stem("prompt"), "prompt" );
	deepEqual( Stem("promueva"), "promuev" );
	deepEqual( Stem("promueve"), "promuev" );
	deepEqual( Stem("promueven"), "promuev" );
	deepEqual( Stem("promulgación"), "promulg" );
	deepEqual( Stem("promulgada"), "promulg" );
	deepEqual( Stem("promvido"), "promv" );
	deepEqual( Stem("pronasol"), "pronasol" );
	deepEqual( Stem("pronostica"), "pronost" );
	deepEqual( Stem("pronosticada"), "pronostic" );
	deepEqual( Stem("pronosticado"), "pronostic" );
	deepEqual( Stem("pronosticaron"), "pronostic" );
	deepEqual( Stem("pronostico"), "pronost" );
	deepEqual( Stem("pronóstico"), "pronost" );
	deepEqual( Stem("pronósticos"), "pronost" );
	deepEqual( Stem("pronta"), "pront" );
	deepEqual( Stem("pronto"), "pront" );
	deepEqual( Stem("pronuciados"), "pronuci" );
	deepEqual( Stem("pronuncia"), "pronunci" );
	deepEqual( Stem("pronunciadas"), "pronunci" );
	deepEqual( Stem("pronunciamiento"), "pronunci" );
	deepEqual( Stem("pronunciamos"), "pronunci" );
	deepEqual( Stem("pronunciar"), "pronunci" );
	deepEqual( Stem("pronunciaron"), "pronunci" );
	deepEqual( Stem("pronuncie"), "pronunci" );
	deepEqual( Stem("pronunció"), "pronunc" );
	deepEqual( Stem("propagación"), "propag" );
	deepEqual( Stem("propaganda"), "propagand" );
	deepEqual( Stem("propagandísticas"), "propagandist" );
	deepEqual( Stem("propagaron"), "propag" );
	deepEqual( Stem("propensas"), "propens" );
	deepEqual( Stem("propia"), "propi" );
	deepEqual( Stem("propiamente"), "propi" );
	deepEqual( Stem("propias"), "propi" );
	deepEqual( Stem("propiciado"), "propici" );
	deepEqual( Stem("propiciando"), "propici" );
	deepEqual( Stem("propiciar"), "propici" );
	deepEqual( Stem("propiciará"), "propici" );
	deepEqual( Stem("propiciarse"), "propici" );
	deepEqual( Stem("propicien"), "propici" );
	deepEqual( Stem("propicio"), "propici" );
	deepEqual( Stem("propició"), "propic" );
	deepEqual( Stem("propiedad"), "propied" );
	deepEqual( Stem("propiedades"), "propiedad" );
	deepEqual( Stem("propietaria"), "propietari" );
	deepEqual( Stem("propietario"), "propietari" );
	deepEqual( Stem("propietarios"), "propietari" );
	deepEqual( Stem("propinándole"), "propin" );
	deepEqual( Stem("propinarle"), "propin" );
	deepEqual( Stem("propinaron"), "propin" );
	deepEqual( Stem("propinas"), "propin" );
	deepEqual( Stem("propinó"), "propin" );
	deepEqual( Stem("propio"), "propi" );
	deepEqual( Stem("propios"), "propi" );
	deepEqual( Stem("propone"), "propon" );
	deepEqual( Stem("proponemos"), "propon" );
	deepEqual( Stem("proponen"), "propon" );
	deepEqual( Stem("proponer"), "propon" );
	deepEqual( Stem("proponerle"), "propon" );
	deepEqual( Stem("proponernos"), "propon" );
	deepEqual( Stem("proponga"), "propong" );
	deepEqual( Stem("propongo"), "propong" );
	deepEqual( Stem("proponían"), "propon" );
	deepEqual( Stem("proporción"), "proporcion" );
	deepEqual( Stem("proporciona"), "proporcion" );
	deepEqual( Stem("proporcionaba"), "proporcion" );
	deepEqual( Stem("proporcionada"), "proporcion" );
	deepEqual( Stem("proporcionadas"), "proporcion" );
	deepEqual( Stem("proporcionado"), "proporcion" );
	deepEqual( Stem("proporcionados"), "proporcion" );
	deepEqual( Stem("proporcional"), "proporcional" );
	deepEqual( Stem("proporcionan"), "proporcion" );
	deepEqual( Stem("proporcionando"), "proporcion" );
	deepEqual( Stem("proporcionar"), "proporcion" );
	deepEqual( Stem("proporcionará"), "proporcion" );
	deepEqual( Stem("proporcionaría"), "proporcion" );
	deepEqual( Stem("proporcionarle"), "proporcion" );
	deepEqual( Stem("proporcionarles"), "proporcion" );
	deepEqual( Stem("proporcione"), "proporcion" );
	deepEqual( Stem("proporcionen"), "proporcion" );
	deepEqual( Stem("proporciones"), "proporcion" );
	deepEqual( Stem("proporcionó"), "proporcion" );
	deepEqual( Stem("proposición"), "proposicion" );
	deepEqual( Stem("propositivas"), "proposit" );
	deepEqual( Stem("propósito"), "proposit" );
	deepEqual( Stem("propósitos"), "proposit" );
	deepEqual( Stem("propuesta"), "propuest" );
	deepEqual( Stem("propuestas"), "propuest" );
	deepEqual( Stem("propuesto"), "propuest" );
	deepEqual( Stem("propuestos"), "propuest" );
	deepEqual( Stem("propulsor"), "propulsor" );
	deepEqual( Stem("propuse"), "propus" );
	deepEqual( Stem("propusieron"), "propus" );
	deepEqual( Stem("propuso"), "propus" );
	deepEqual( Stem("prórroga"), "prorrog" );
	deepEqual( Stem("prorrogada"), "prorrog" );
	deepEqual( Stem("prorrumpe"), "prorrump" );
	deepEqual( Stem("prosa"), "pros" );
	deepEqual( Stem("prose"), "pros" );
	deepEqual( Stem("proseguid"), "prosegu" );
	deepEqual( Stem("proseguir"), "prosegu" );
	deepEqual( Stem("proselitismo"), "proselit" );
	deepEqual( Stem("prosiga"), "prosig" );
	deepEqual( Stem("prosigue"), "prosig" );
	deepEqual( Stem("prosiguió"), "prosigu" );
	deepEqual( Stem("prosinecky"), "prosinecky" );
	deepEqual( Stem("prospectiva"), "prospect" );
	deepEqual( Stem("prospecto"), "prospect" );
	deepEqual( Stem("prospectos"), "prospect" );
	deepEqual( Stem("prosperado"), "prosper" );
	deepEqual( Stem("prosperan"), "prosper" );
	deepEqual( Stem("prospere"), "prosper" );
	deepEqual( Stem("prosperidades"), "prosper" );
	deepEqual( Stem("protagónicos"), "protagon" );
	deepEqual( Stem("protagonismo"), "protagon" );
	deepEqual( Stem("protagonista"), "protagon" );
	deepEqual( Stem("protagonistas"), "protagon" );
	deepEqual( Stem("protagonizado"), "protagoniz" );
	deepEqual( Stem("protagonizados"), "protagoniz" );
	deepEqual( Stem("protagonizará"), "protagoniz" );
	deepEqual( Stem("protagonizaron"), "protagoniz" );
	deepEqual( Stem("protagonizó"), "protagoniz" );
	deepEqual( Stem("protección"), "proteccion" );
	deepEqual( Stem("proteccionistas"), "proteccion" );
	deepEqual( Stem("protective"), "protectiv" );
	deepEqual( Stem("protecto"), "protect" );
	deepEqual( Stem("protector"), "protector" );
	deepEqual( Stem("protectora"), "protector" );
	deepEqual( Stem("protectorado"), "protector" );
	deepEqual( Stem("protectores"), "protector" );
	deepEqual( Stem("protege"), "proteg" );
	deepEqual( Stem("protegen"), "proteg" );
	deepEqual( Stem("proteger"), "proteg" );
	deepEqual( Stem("protegerán"), "proteg" );
	deepEqual( Stem("protegerían"), "proteg" );
	deepEqual( Stem("protegerse"), "proteg" );
	deepEqual( Stem("protegía"), "proteg" );
	deepEqual( Stem("protegido"), "proteg" );
	deepEqual( Stem("protegidos"), "proteg" );
	deepEqual( Stem("protegieron"), "proteg" );
	deepEqual( Stem("protein"), "protein" );
	deepEqual( Stem("proteína"), "protein" );
	deepEqual( Stem("proteínas"), "protein" );
	deepEqual( Stem("proteja"), "protej" );
	deepEqual( Stem("protejan"), "protej" );
	deepEqual( Stem("protesta"), "protest" );
	deepEqual( Stem("protestada"), "protest" );
	deepEqual( Stem("protestan"), "protest" );
	deepEqual( Stem("protestantes"), "protest" );
	deepEqual( Stem("protestar"), "protest" );
	deepEqual( Stem("protestaron"), "protest" );
	deepEqual( Stem("protestas"), "protest" );
	deepEqual( Stem("proteste"), "protest" );
	deepEqual( Stem("protesten"), "protest" );
	deepEqual( Stem("protestó"), "protest" );
	deepEqual( Stem("protocolo"), "protocol" );
	deepEqual( Stem("prototipo"), "prototip" );
	deepEqual( Stem("prototipos"), "prototip" );
	deepEqual( Stem("provea"), "prove" );
	deepEqual( Stem("provecho"), "provech" );
	deepEqual( Stem("provee"), "prove" );
	deepEqual( Stem("proveedor"), "proveedor" );
	deepEqual( Stem("proveedores"), "proveedor" );
	deepEqual( Stem("proveeduría"), "proveedur" );
	deepEqual( Stem("proveer"), "prov" );
	deepEqual( Stem("provenía"), "proven" );
	deepEqual( Stem("proveniente"), "provenient" );
	deepEqual( Stem("provenientes"), "provenient" );
	deepEqual( Stem("proverbio"), "proverbi" );
	deepEqual( Stem("proviene"), "provien" );
	deepEqual( Stem("provienen"), "provien" );
	deepEqual( Stem("provincia"), "provinci" );
	deepEqual( Stem("provincial"), "provincial" );
	deepEqual( Stem("provinciales"), "provincial" );
	deepEqual( Stem("provinciana"), "provincian" );
	deepEqual( Stem("provincias"), "provinci" );
	deepEqual( Stem("provisional"), "provisional" );
	deepEqual( Stem("provisionales"), "provisional" );
	deepEqual( Stem("provisiones"), "provision" );
	deepEqual( Stem("provoca"), "provoc" );
	deepEqual( Stem("provocaba"), "provoc" );
	deepEqual( Stem("provocación"), "provoc" );
	deepEqual( Stem("provocado"), "provoc" );
	deepEqual( Stem("provocador"), "provoc" );
	deepEqual( Stem("provocados"), "provoc" );
	deepEqual( Stem("provocan"), "provoc" );
	deepEqual( Stem("provocando"), "provoc" );
	deepEqual( Stem("provocar"), "provoc" );
	deepEqual( Stem("provocará"), "provoc" );
	deepEqual( Stem("provocaran"), "provoc" );
	deepEqual( Stem("provocarán"), "provoc" );
	deepEqual( Stem("provocaron"), "provoc" );
	deepEqual( Stem("provocativa"), "provoc" );
	deepEqual( Stem("provocó"), "provoc" );
	deepEqual( Stem("provoque"), "provoqu" );
	deepEqual( Stem("provoquen"), "provoqu" );
	deepEqual( Stem("provotel"), "provotel" );
	deepEqual( Stem("próxima"), "proxim" );
	deepEqual( Stem("próximamente"), "proxim" );
	deepEqual( Stem("próximas"), "proxim" );
	deepEqual( Stem("próximo"), "proxim" );
	deepEqual( Stem("próximos"), "prox" );
	deepEqual( Stem("proyección"), "proyeccion" );
	deepEqual( Stem("proyecta"), "proyect" );
	deepEqual( Stem("proyectaba"), "proyect" );
	deepEqual( Stem("proyectaban"), "proyect" );
	deepEqual( Stem("proyectada"), "proyect" );
	deepEqual( Stem("proyectado"), "proyect" );
	deepEqual( Stem("proyectan"), "proyect" );
	deepEqual( Stem("proyectar"), "proyect" );
	deepEqual( Stem("proyectará"), "proyect" );
	deepEqual( Stem("proyectarse"), "proyect" );
	deepEqual( Stem("proyectil"), "proyectil" );
	deepEqual( Stem("proyectito"), "proyectit" );
	deepEqual( Stem("proyecto"), "proyect" );
	deepEqual( Stem("proyectó"), "proyect" );
	deepEqual( Stem("proyectos"), "proyect" );
	deepEqual( Stem("prudente"), "prudent" );
	deepEqual( Stem("prudentemente"), "prudent" );
	deepEqual( Stem("prudentes"), "prudent" );
	deepEqual( Stem("prueba"), "prueb" );
	deepEqual( Stem("pruebas"), "prueb" );
	deepEqual( Stem("pruebita"), "pruebit" );
	deepEqual( Stem("pruneda"), "pruned" );
	deepEqual( Stem("prusia"), "prusi" );
	deepEqual( Stem("prusiana"), "prusian" );
	deepEqual( Stem("prusianos"), "prusian" );
	deepEqual( Stem("ps"), "ps" );
	deepEqual( Stem("pseudolíderes"), "pseudolider" );
	deepEqual( Stem("psicoanalista"), "psicoanal" );
	deepEqual( Stem("psicoanalítica"), "psicoanalit" );
	deepEqual( Stem("psicoanalítico"), "psicoanalit" );
	deepEqual( Stem("psicóloga"), "psicolog" );
	deepEqual( Stem("psicólogas"), "psicolog" );
	deepEqual( Stem("psicología"), "psicolog" );
	deepEqual( Stem("psicológica"), "psicolog" );
	deepEqual( Stem("psicológicamente"), "psicolog" );
	deepEqual( Stem("psicológicas"), "psicolog" );
	deepEqual( Stem("psicológico"), "psicolog" );
	deepEqual( Stem("psicológicos"), "psicolog" );
	deepEqual( Stem("psicólogo"), "psicolog" );
	deepEqual( Stem("psicoterapéutico"), "psicoterapeut" );
	deepEqual( Stem("psicoterapia"), "psicoterapi" );
	deepEqual( Stem("psicotrópicas"), "psicotrop" );
	deepEqual( Stem("psicotrópicos"), "psicotrop" );
	deepEqual( Stem("psique"), "psiqu" );
	deepEqual( Stem("psiquiátrico"), "psiquiatr" );
	deepEqual( Stem("psíquico"), "psiquic" );
	deepEqual( Stem("psoriasis"), "psoriasis" );
	deepEqual( Stem("pte"), "pte" );
	deepEqual( Stem("púber"), "pub" );
	deepEqual( Stem("public"), "public" );
	deepEqual( Stem("publica"), "public" );
	deepEqual( Stem("pública"), "public" );
	deepEqual( Stem("publicación"), "public" );
	deepEqual( Stem("publicaciones"), "public" );
	deepEqual( Stem("publicada"), "public" );
	deepEqual( Stem("publicadas"), "public" );
	deepEqual( Stem("publicado"), "public" );
	deepEqual( Stem("públicamente"), "public" );
	deepEqual( Stem("publican"), "public" );
	deepEqual( Stem("publicando"), "public" );
	deepEqual( Stem("publicar"), "public" );
	deepEqual( Stem("publicará"), "public" );
	deepEqual( Stem("publicaron"), "public" );
	deepEqual( Stem("públicas"), "public" );
	deepEqual( Stem("publicidad"), "public" );
	deepEqual( Stem("publicistas"), "public" );
	deepEqual( Stem("publicitada"), "publicit" );
	deepEqual( Stem("publicitaria"), "publicitari" );
	deepEqual( Stem("publicitario"), "publicitari" );
	deepEqual( Stem("público"), "public" );
	deepEqual( Stem("publicó"), "public" );
	deepEqual( Stem("públicos"), "public" );
	deepEqual( Stem("publio"), "publi" );
	deepEqual( Stem("publique"), "publiqu" );
	deepEqual( Stem("publishing"), "publishing" );
	deepEqual( Stem("puche"), "puch" );
	deepEqual( Stem("pude"), "pud" );
	deepEqual( Stem("pudiendo"), "pud" );
	deepEqual( Stem("pudiera"), "pud" );
	deepEqual( Stem("pudieran"), "pud" );
	deepEqual( Stem("pudieron"), "pud" );
	deepEqual( Stem("pudiese"), "pud" );
	deepEqual( Stem("pudimos"), "pud" );
	deepEqual( Stem("pudo"), "pud" );
	deepEqual( Stem("pudor"), "pudor" );
	deepEqual( Stem("pue"), "pue" );
	deepEqual( Stem("puebla"), "puebl" );
	deepEqual( Stem("pueblerina"), "pueblerin" );
	deepEqual( Stem("pueblerino"), "pueblerin" );
	deepEqual( Stem("pueblito"), "pueblit" );
	deepEqual( Stem("pueblo"), "puebl" );
	deepEqual( Stem("pueblos"), "puebl" );
	deepEqual( Stem("pueda"), "pued" );
	deepEqual( Stem("puedan"), "pued" );
	deepEqual( Stem("puede"), "pued" );
	deepEqual( Stem("pueden"), "pued" );
	deepEqual( Stem("puedes"), "pued" );
	deepEqual( Stem("puedo"), "pued" );
	deepEqual( Stem("puente"), "puent" );
	deepEqual( Stem("puentes"), "puent" );
	deepEqual( Stem("puerta"), "puert" );
	deepEqual( Stem("puertas"), "puert" );
	deepEqual( Stem("puerto"), "puert" );
	deepEqual( Stem("puertorriqueño"), "puertorriqueñ" );
	deepEqual( Stem("puertos"), "puert" );
	deepEqual( Stem("pues"), "pues" );
	deepEqual( Stem("puesta"), "puest" );
	deepEqual( Stem("puestas"), "puest" );
	deepEqual( Stem("puesteros"), "puester" );
	deepEqual( Stem("puesto"), "puest" );
	deepEqual( Stem("puestos"), "puest" );
	deepEqual( Stem("púgil"), "pugil" );
	deepEqual( Stem("pugilismo"), "pugil" );
	deepEqual( Stem("pugilista"), "pugil" );
	deepEqual( Stem("pugilística"), "pugilist" );
	deepEqual( Stem("pugnan"), "pugn" );
	deepEqual( Stem("pugnando"), "pugn" );
	deepEqual( Stem("pugnará"), "pugn" );
	deepEqual( Stem("pugnaré"), "pugn" );
	deepEqual( Stem("pugnas"), "pugn" );
	deepEqual( Stem("puig"), "puig" );
	deepEqual( Stem("pujante"), "pujant" );
	deepEqual( Stem("pulcro"), "pulcr" );
	deepEqual( Stem("pulgadas"), "pulg" );
	deepEqual( Stem("pulgar"), "pulg" );
	deepEqual( Stem("pulido"), "pul" );
	deepEqual( Stem("pulimos"), "pul" );
	deepEqual( Stem("pulir"), "pul" );
	deepEqual( Stem("pulirlos"), "pul" );
	deepEqual( Stem("pulitzer"), "pulitz" );
	deepEqual( Stem("pulmonares"), "pulmonar" );
	deepEqual( Stem("pulsar"), "puls" );
	deepEqual( Stem("pulso"), "puls" );
	deepEqual( Stem("pululan"), "pulul" );
	deepEqual( Stem("pulverizado"), "pulveriz" );
	deepEqual( Stem("pulverizadora"), "pulveriz" );
	deepEqual( Stem("pulverizar"), "pulveriz" );
	deepEqual( Stem("pulverizó"), "pulveriz" );
	deepEqual( Stem("pum"), "pum" );
	deepEqual( Stem("pumas"), "pum" );
	deepEqual( Stem("pump"), "pump" );
	deepEqual( Stem("puñado"), "puñ" );
	deepEqual( Stem("puñaladas"), "puñal" );
	deepEqual( Stem("puñales"), "puñal" );
	deepEqual( Stem("punk"), "punk" );
	deepEqual( Stem("puño"), "puñ" );
	deepEqual( Stem("punongbayan"), "punongbay" );
	deepEqual( Stem("punta"), "punt" );
	deepEqual( Stem("puntadón"), "puntadon" );
	deepEqual( Stem("puntapies"), "puntapi" );
	deepEqual( Stem("puntas"), "punt" );
	deepEqual( Stem("punteando"), "punt" );
	deepEqual( Stem("punteó"), "punte" );
	deepEqual( Stem("puntería"), "punt" );
	deepEqual( Stem("punterías"), "punt" );
	deepEqual( Stem("puntero"), "punter" );
	deepEqual( Stem("punteros"), "punter" );
	deepEqual( Stem("punto"), "punt" );
	deepEqual( Stem("puntos"), "punt" );
	deepEqual( Stem("puntual"), "puntual" );
	deepEqual( Stem("puntualizaciones"), "puntualiz" );
	deepEqual( Stem("puntualizó"), "puntualiz" );
	deepEqual( Stem("puntualmente"), "puntual" );
	deepEqual( Stem("punzo"), "punz" );
	deepEqual( Stem("punzocortantes"), "punzocort" );
	deepEqual( Stem("punzones"), "punzon" );
	deepEqual( Stem("pupila"), "pupil" );
	deepEqual( Stem("pupilas"), "pupil" );
	deepEqual( Stem("pupilo"), "pupil" );
	deepEqual( Stem("pura"), "pur" );
	deepEqual( Stem("puramente"), "pur" );
	deepEqual( Stem("puras"), "pur" );
	deepEqual( Stem("pureza"), "purez" );
	deepEqual( Stem("purga"), "purg" );
	deepEqual( Stem("purgar"), "purg" );
	deepEqual( Stem("puro"), "pur" );
	deepEqual( Stem("purón"), "puron" );
	deepEqual( Stem("puros"), "pur" );
	deepEqual( Stem("purpúreos"), "purpure" );
	deepEqual( Stem("puse"), "pus" );
	deepEqual( Stem("pusiera"), "pus" );
	deepEqual( Stem("pusiéramos"), "pus" );
	deepEqual( Stem("pusieran"), "pus" );
	deepEqual( Stem("pusieron"), "pus" );
	deepEqual( Stem("pusiese"), "pus" );
	deepEqual( Stem("pusilánime"), "pusilanim" );
	deepEqual( Stem("pusimos"), "pus" );
	deepEqual( Stem("puso"), "pus" );
	deepEqual( Stem("putz"), "putz" );
	deepEqual( Stem("pvc"), "pvc" );
	deepEqual( Stem("pyramid"), "pyram" );
	deepEqual( Stem("q"), "q" );
	deepEqual( Stem("qabrija"), "qabrij" );
	deepEqual( Stem("qi"), "qi" );
	deepEqual( Stem("que"), "que" );
	deepEqual( Stem("qué"), "que" );
	deepEqual( Stem("quebec"), "quebec" );
	deepEqual( Stem("quebradas"), "quebr" );
	deepEqual( Stem("quebrado"), "quebr" );
	deepEqual( Stem("quebrados"), "quebr" );
	deepEqual( Stem("quebrantar"), "quebrant" );
	deepEqual( Stem("quebrar"), "quebr" );
	deepEqual( Stem("quebraron"), "quebr" );
	deepEqual( Stem("quebró"), "quebr" );
	deepEqual( Stem("queda"), "qued" );
	deepEqual( Stem("quedaba"), "qued" );
	deepEqual( Stem("quedaban"), "qued" );
	deepEqual( Stem("quedado"), "qued" );
	deepEqual( Stem("quedamos"), "qued" );
	deepEqual( Stem("quedan"), "qued" );
	deepEqual( Stem("quedando"), "qued" );
	deepEqual( Stem("quedándoles"), "qued" );
	deepEqual( Stem("quedar"), "qued" );
	deepEqual( Stem("quedara"), "qued" );
	deepEqual( Stem("quedará"), "qued" );
	deepEqual( Stem("quedarán"), "qued" );
	deepEqual( Stem("quedaría"), "qued" );
	deepEqual( Stem("quedaríamos"), "qued" );
	deepEqual( Stem("quedarnos"), "qued" );
	deepEqual( Stem("quedaron"), "qued" );
	deepEqual( Stem("quedarse"), "qued" );
	deepEqual( Stem("quedas"), "qued" );
	deepEqual( Stem("quede"), "qued" );
	deepEqual( Stem("queden"), "qued" );
	deepEqual( Stem("quedes"), "qued" );
	deepEqual( Stem("quedó"), "qued" );
	deepEqual( Stem("quehacer"), "quehac" );
	deepEqual( Stem("quehaceres"), "quehacer" );
	deepEqual( Stem("queja"), "quej" );
	deepEqual( Stem("quejaba"), "quej" );
	deepEqual( Stem("quejado"), "quej" );
	deepEqual( Stem("quejamos"), "quej" );
	deepEqual( Stem("quejan"), "quej" );
	deepEqual( Stem("quejando"), "quej" );
	deepEqual( Stem("quejándose"), "quej" );
	deepEqual( Stem("quejaron"), "quej" );
	deepEqual( Stem("quejas"), "quej" );
	deepEqual( Stem("quejó"), "quej" );
	deepEqual( Stem("quejoso"), "quejos" );
	deepEqual( Stem("quejosos"), "quejos" );
	deepEqual( Stem("quela"), "quel" );
	deepEqual( Stem("quelonio"), "queloni" );
	deepEqual( Stem("quemacocos"), "quemacoc" );
	deepEqual( Stem("quemado"), "quem" );
	deepEqual( Stem("quemaduras"), "quemadur" );
	deepEqual( Stem("quemas"), "quem" );
	deepEqual( Stem("quemó"), "quem" );
	deepEqual( Stem("querella"), "querell" );
	deepEqual( Stem("queremos"), "quer" );
	deepEqual( Stem("querendas"), "querend" );
	deepEqual( Stem("querer"), "quer" );
	deepEqual( Stem("quererlo"), "quer" );
	deepEqual( Stem("queretanos"), "queretan" );
	deepEqual( Stem("queretaro"), "queretar" );
	deepEqual( Stem("querétaro"), "queretar" );
	deepEqual( Stem("querétaroi"), "queretaroi" );
	deepEqual( Stem("quería"), "quer" );
	deepEqual( Stem("queríamos"), "quer" );
	deepEqual( Stem("querían"), "quer" );
	deepEqual( Stem("queridas"), "quer" );
	deepEqual( Stem("querido"), "quer" );
	deepEqual( Stem("queriendo"), "quer" );
	deepEqual( Stem("querrá"), "querr" );
	deepEqual( Stem("querrían"), "querr" );
	deepEqual( Stem("queso"), "ques" );
	deepEqual( Stem("quesos"), "ques" );
	deepEqual( Stem("quesque"), "quesqu" );
	deepEqual( Stem("quezada"), "quez" );
	deepEqual( Stem("quiebra"), "quiebr" );
	deepEqual( Stem("quien"), "qui" );
	deepEqual( Stem("quién"), "quien" );
	deepEqual( Stem("quienes"), "quien" );
	deepEqual( Stem("quiénes"), "quien" );
	deepEqual( Stem("quiera"), "quier" );
	deepEqual( Stem("quieran"), "quier" );
	deepEqual( Stem("quieras"), "quier" );
	deepEqual( Stem("quiere"), "quier" );
	deepEqual( Stem("quieren"), "quier" );
	deepEqual( Stem("quieres"), "quier" );
	deepEqual( Stem("quiero"), "quier" );
	deepEqual( Stem("quiet"), "quiet" );
	deepEqual( Stem("quihubo"), "quihub" );
	deepEqual( Stem("quijano"), "quijan" );
	deepEqual( Stem("quijote"), "quijot" );
	deepEqual( Stem("química"), "quimic" );
	deepEqual( Stem("químicas"), "quimic" );
	deepEqual( Stem("químico"), "quimic" );
	deepEqual( Stem("quince"), "quinc" );
	deepEqual( Stem("quinceañero"), "quinceañer" );
	deepEqual( Stem("quincena"), "quincen" );
	deepEqual( Stem("quincenales"), "quincenal" );
	deepEqual( Stem("quinielas"), "quiniel" );
	deepEqual( Stem("quinta"), "quint" );
	deepEqual( Stem("quintana"), "quintan" );
	deepEqual( Stem("quintanilla"), "quintanill" );
	deepEqual( Stem("quinteto"), "quintet" );
	deepEqual( Stem("quintetos"), "quintet" );
	deepEqual( Stem("quinto"), "quint" );
	deepEqual( Stem("quiroga"), "quirog" );
	deepEqual( Stem("quiroz"), "quiroz" );
	deepEqual( Stem("quirúrgica"), "quirurg" );
	deepEqual( Stem("quirúrgicamente"), "quirurg" );
	deepEqual( Stem("quise"), "quis" );
	deepEqual( Stem("quisiera"), "quis" );
	deepEqual( Stem("quisiéramos"), "quis" );
	deepEqual( Stem("quisieran"), "quis" );
	deepEqual( Stem("quisieron"), "quis" );
	deepEqual( Stem("quiso"), "quis" );
	deepEqual( Stem("quisquillosos"), "quisquill" );
	deepEqual( Stem("quita"), "quit" );
	deepEqual( Stem("quitaba"), "quit" );
	deepEqual( Stem("quitadme"), "quitadm" );
	deepEqual( Stem("quitado"), "quit" );
	deepEqual( Stem("quitan"), "quit" );
	deepEqual( Stem("quitando"), "quit" );
	deepEqual( Stem("quitándole"), "quit" );
	deepEqual( Stem("quitándolos"), "quit" );
	deepEqual( Stem("quitándose"), "quit" );
	deepEqual( Stem("quitar"), "quit" );
	deepEqual( Stem("quitara"), "quit" );
	deepEqual( Stem("quitarían"), "quit" );
	deepEqual( Stem("quitarle"), "quit" );
	deepEqual( Stem("quitarles"), "quit" );
	deepEqual( Stem("quitarnos"), "quit" );
	deepEqual( Stem("quitaron"), "quit" );
	deepEqual( Stem("quitarse"), "quit" );
	deepEqual( Stem("quite"), "quit" );
	deepEqual( Stem("quiten"), "quit" );
	deepEqual( Stem("quitó"), "quit" );
	deepEqual( Stem("quitos"), "quit" );
	deepEqual( Stem("quizá"), "quiz" );
	deepEqual( Stem("quizás"), "quizas" );
	deepEqual( Stem("quo"), "quo" );
	deepEqual( Stem("qwarge"), "qwarg" );
	deepEqual( Stem("r"), "r" );
	deepEqual( Stem("rabaté"), "rabat" );
	deepEqual( Stem("rabatté"), "rabatt" );
	deepEqual( Stem("rabbit"), "rabbit" );
	deepEqual( Stem("rabia"), "rabi" );
	deepEqual( Stem("rabiar"), "rabi" );
	deepEqual( Stem("rabino"), "rabin" );
	deepEqual( Stem("rabo"), "rab" );
	deepEqual( Stem("racha"), "rach" );
	deepEqual( Stem("rachas"), "rach" );
	deepEqual( Stem("racial"), "racial" );
	deepEqual( Stem("raciales"), "racial" );
	deepEqual( Stem("racimo"), "racim" );
	deepEqual( Stem("racing"), "racing" );
	deepEqual( Stem("raciocinios"), "raciocini" );
	deepEqual( Stem("radar"), "rad" );
	deepEqual( Stem("radares"), "radar" );
	deepEqual( Stem("radiación"), "radiacion" );
	deepEqual( Stem("radiaciones"), "radiacion" );
	deepEqual( Stem("radiador"), "radiador" );
	deepEqual( Stem("radial"), "radial" );
	deepEqual( Stem("radiales"), "radial" );
	deepEqual( Stem("radiante"), "radiant" );
	deepEqual( Stem("radiantes"), "radiant" );
	deepEqual( Stem("radica"), "radic" );
	deepEqual( Stem("radicada"), "radic" );
	deepEqual( Stem("radicado"), "radic" );
	deepEqual( Stem("radical"), "radical" );
	deepEqual( Stem("radicalismo"), "radical" );
	deepEqual( Stem("radicalización"), "radicaliz" );
	deepEqual( Stem("radicalmente"), "radical" );
	deepEqual( Stem("radicar"), "radic" );
	deepEqual( Stem("radio"), "radi" );
	deepEqual( Stem("radioactiva"), "radioact" );
	deepEqual( Stem("radioactividad"), "radioact" );
	deepEqual( Stem("radioescucha"), "radioescuch" );
	deepEqual( Stem("radiofónica"), "radiofon" );
	deepEqual( Stem("radiofónico"), "radiofon" );
	deepEqual( Stem("radiografías"), "radiograf" );
	deepEqual( Stem("radiología"), "radiolog" );
	deepEqual( Stem("radios"), "radi" );
	deepEqual( Stem("radko"), "radk" );
	deepEqual( Stem("rads"), "rads" );
	deepEqual( Stem("rafael"), "rafael" );
	deepEqual( Stem("ráfagas"), "rafag" );
	deepEqual( Stem("rafi"), "rafi" );
	deepEqual( Stem("raí"), "rai" );
	deepEqual( Stem("raíces"), "raic" );
	deepEqual( Stem("raiz"), "raiz" );
	deepEqual( Stem("raíz"), "raiz" );
	deepEqual( Stem("rajado"), "raj" );
	deepEqual( Stem("rajko"), "rajk" );
	deepEqual( Stem("rajmunel"), "rajmunel" );
	deepEqual( Stem("rakenel"), "rakenel" );
	deepEqual( Stem("ram"), "ram" );
	deepEqual( Stem("rama"), "ram" );
	deepEqual( Stem("ramana"), "raman" );
	deepEqual( Stem("ramas"), "ram" );
	deepEqual( Stem("ramificaciones"), "ramif" );
	deepEqual( Stem("ramificado"), "ramific" );
	deepEqual( Stem("ramírez"), "ramirez" );
	deepEqual( Stem("ramiro"), "ramir" );
	deepEqual( Stem("ramo"), "ram" );
	deepEqual( Stem("ramon"), "ramon" );
	deepEqual( Stem("ramón"), "ramon" );
	deepEqual( Stem("ramos"), "ram" );
	deepEqual( Stem("rampas"), "ramp" );
	deepEqual( Stem("rams"), "rams" );
	deepEqual( Stem("ranchera"), "rancher" );
	deepEqual( Stem("rancheras"), "rancher" );
	deepEqual( Stem("rancherita"), "rancherit" );
	deepEqual( Stem("rancho"), "ranch" );
	deepEqual( Stem("rangel"), "rangel" );
	deepEqual( Stem("rango"), "rang" );
	deepEqual( Stem("rangos"), "rang" );
	deepEqual( Stem("rano"), "ran" );
	deepEqual( Stem("ranqueadas"), "ranqu" );
	deepEqual( Stem("ranulfo"), "ranulf" );
	deepEqual( Stem("rap"), "rap" );
	deepEqual( Stem("rapa"), "rap" );
	deepEqual( Stem("rapamontes"), "rapamont" );
	deepEqual( Stem("rapar"), "rap" );
	deepEqual( Stem("raphael"), "raphael" );
	deepEqual( Stem("rápida"), "rap" );
	deepEqual( Stem("rápidamente"), "rapid" );
	deepEqual( Stem("rápidas"), "rap" );
	deepEqual( Stem("rapidez"), "rapidez" );
	deepEqual( Stem("rápido"), "rap" );
	deepEqual( Stem("rápidos"), "rap" );
	deepEqual( Stem("rapport"), "rapport" );
	deepEqual( Stem("raquet"), "raquet" );
	deepEqual( Stem("raquítica"), "raquit" );
	deepEqual( Stem("raquítico"), "raquit" );
	deepEqual( Stem("rara"), "rar" );
	deepEqual( Stem("raraku"), "raraku" );
	deepEqual( Stem("raro"), "rar" );
	deepEqual( Stem("raros"), "rar" );
	deepEqual( Stem("rasca"), "rasc" );
	deepEqual( Stem("rascacielos"), "rascaciel" );
	deepEqual( Stem("rascón"), "rascon" );
	deepEqual( Stem("rasero"), "raser" );
	deepEqual( Stem("rasgaría"), "rasg" );
	deepEqual( Stem("rasgos"), "rasg" );
	deepEqual( Stem("rasmussen"), "rasmuss" );
	deepEqual( Stem("raspar"), "rasp" );
	deepEqual( Stem("rastrearlas"), "rastr" );
	deepEqual( Stem("rastro"), "rastr" );
	deepEqual( Stem("rateros"), "rater" );
	deepEqual( Stem("ratificación"), "ratif" );
	deepEqual( Stem("ratificado"), "ratific" );
	deepEqual( Stem("ratificar"), "ratific" );
	deepEqual( Stem("ratificará"), "ratific" );
	deepEqual( Stem("ratifico"), "ratif" );
	deepEqual( Stem("ratificó"), "ratific" );
	deepEqual( Stem("rating"), "rating" );
	deepEqual( Stem("ratito"), "ratit" );
	deepEqual( Stem("rato"), "rat" );
	deepEqual( Stem("raton"), "raton" );
	deepEqual( Stem("ratón"), "raton" );
	deepEqual( Stem("ratoncito"), "ratoncit" );
	deepEqual( Stem("ratones"), "raton" );
	deepEqual( Stem("ratos"), "rat" );
	deepEqual( Stem("rauda"), "raud" );
	deepEqual( Stem("raúl"), "raul" );
	deepEqual( Stem("raulito"), "raulit" );
	deepEqual( Stem("ravel"), "ravel" );
	deepEqual( Stem("ravines"), "ravin" );
	deepEqual( Stem("ray"), "ray" );
	deepEqual( Stem("raya"), "ray" );
	deepEqual( Stem("rayada"), "ray" );
	deepEqual( Stem("rayaditos"), "rayadit" );
	deepEqual( Stem("rayado"), "ray" );
	deepEqual( Stem("rayados"), "ray" );
	deepEqual( Stem("rayando"), "ray" );
	deepEqual( Stem("rayas"), "ray" );
	deepEqual( Stem("rayen"), "ray" );
	deepEqual( Stem("raymonde"), "raymond" );
	deepEqual( Stem("raymundo"), "raymund" );
	deepEqual( Stem("rayo"), "ray" );
	deepEqual( Stem("rayón"), "rayon" );
	deepEqual( Stem("rayones"), "rayon" );
	deepEqual( Stem("rayos"), "ray" );
	deepEqual( Stem("raytheon"), "raytheon" );
	deepEqual( Stem("raza"), "raz" );
	deepEqual( Stem("razón"), "razon" );
	deepEqual( Stem("razonable"), "razon" );
	deepEqual( Stem("razonablemente"), "razon" );
	deepEqual( Stem("razonables"), "razon" );
	deepEqual( Stem("razonada"), "razon" );
	deepEqual( Stem("razonamiento"), "razon" );
	deepEqual( Stem("razonan"), "razon" );
	deepEqual( Stem("razones"), "razon" );
	deepEqual( Stem("razos"), "raz" );
	deepEqual( Stem("re"), "re" );
	deepEqual( Stem("reabierta"), "reabiert" );
	deepEqual( Stem("reabra"), "reabr" );
	deepEqual( Stem("reabrir"), "reabr" );
	deepEqual( Stem("reabrirse"), "reabr" );
	deepEqual( Stem("reacaudarían"), "reacaud" );
	deepEqual( Stem("reacción"), "reaccion" );
	deepEqual( Stem("reaccionar"), "reaccion" );
	deepEqual( Stem("reaccionaria"), "reaccionari" );
	deepEqual( Stem("reaccionarios"), "reaccionari" );
	deepEqual( Stem("reacciones"), "reaccion" );
	deepEqual( Stem("reaccionó"), "reaccion" );
	deepEqual( Stem("reacomodados"), "reacomod" );
	deepEqual( Stem("reactivar"), "reactiv" );
	deepEqual( Stem("reactivarán"), "reactiv" );
	deepEqual( Stem("reactor"), "reactor" );
	deepEqual( Stem("readaptación"), "readapt" );
	deepEqual( Stem("readecuación"), "readecu" );
	deepEqual( Stem("reafirmar"), "reafirm" );
	deepEqual( Stem("reafirmaron"), "reafirm" );
	deepEqual( Stem("reafirmé"), "reafirm" );
	deepEqual( Stem("reafirmó"), "reafirm" );
	deepEqual( Stem("reagan"), "reag" );
	deepEqual( Stem("reajustados"), "reajust" );
	deepEqual( Stem("reajustarlas"), "reajust" );
	deepEqual( Stem("reajuste"), "reajust" );
	deepEqual( Stem("real"), "real" );
	deepEqual( Stem("realce"), "realc" );
	deepEqual( Stem("reales"), "real" );
	deepEqual( Stem("realeza"), "realez" );
	deepEqual( Stem("realice"), "realic" );
	deepEqual( Stem("realicé"), "realic" );
	deepEqual( Stem("realicen"), "realic" );
	deepEqual( Stem("realidad"), "realid" );
	deepEqual( Stem("realidades"), "realidad" );
	deepEqual( Stem("realismo"), "realism" );
	deepEqual( Stem("realista"), "realist" );
	deepEqual( Stem("realistas"), "realist" );
	deepEqual( Stem("realísticamente"), "realist" );
	deepEqual( Stem("realiza"), "realiz" );
	deepEqual( Stem("realizaba"), "realiz" );
	deepEqual( Stem("realizaban"), "realiz" );
	deepEqual( Stem("realización"), "realiz" );
	deepEqual( Stem("realizada"), "realiz" );
	deepEqual( Stem("realizadas"), "realiz" );
	deepEqual( Stem("realizado"), "realiz" );
	deepEqual( Stem("realizador"), "realiz" );
	deepEqual( Stem("realizados"), "realiz" );
	deepEqual( Stem("realizamos"), "realiz" );
	deepEqual( Stem("realizan"), "realiz" );
	deepEqual( Stem("realizando"), "realiz" );
	deepEqual( Stem("realizar"), "realiz" );
	deepEqual( Stem("realizara"), "realiz" );
	deepEqual( Stem("realizará"), "realiz" );
	deepEqual( Stem("realizarán"), "realiz" );
	deepEqual( Stem("realizaremos"), "realiz" );
	deepEqual( Stem("realizarían"), "realiz" );
	deepEqual( Stem("realizarlo"), "realiz" );
	deepEqual( Stem("realizarnos"), "realiz" );
	deepEqual( Stem("realizaron"), "realiz" );
	deepEqual( Stem("realizarse"), "realiz" );
	deepEqual( Stem("realizó"), "realiz" );
	deepEqual( Stem("realmente"), "realment" );
	deepEqual( Stem("realziados"), "realzi" );
	deepEqual( Stem("reanimar"), "reanim" );
	deepEqual( Stem("reanudándose"), "reanud" );
	deepEqual( Stem("reanudar"), "reanud" );
	deepEqual( Stem("reanudarán"), "reanud" );
	deepEqual( Stem("reanudó"), "reanud" );
	deepEqual( Stem("reaparecer"), "reaparec" );
	deepEqual( Stem("reaparecerá"), "reaparec" );
	deepEqual( Stem("reapareció"), "reaparec" );
	deepEqual( Stem("reaparezca"), "reaparezc" );
	deepEqual( Stem("reaparición"), "reaparicion" );
	deepEqual( Stem("reaprehensión"), "reaprehension" );
	deepEqual( Stem("reavalúo"), "reavalu" );
	deepEqual( Stem("rebajar"), "rebaj" );
	deepEqual( Stem("rebaño"), "rebañ" );
	deepEqual( Stem("rebasa"), "rebas" );
	deepEqual( Stem("rebasada"), "rebas" );
	deepEqual( Stem("rebasado"), "rebas" );
	deepEqual( Stem("rebasados"), "rebas" );
	deepEqual( Stem("rebasan"), "rebas" );
	deepEqual( Stem("rebasar"), "rebas" );
	deepEqual( Stem("rebasará"), "rebas" );
	deepEqual( Stem("rebasaron"), "rebas" );
	deepEqual( Stem("rebasen"), "reb" );
	deepEqual( Stem("rebasó"), "rebas" );
	deepEqual( Stem("rebeca"), "rebec" );
	deepEqual( Stem("rebelar"), "rebel" );
	deepEqual( Stem("rebelde"), "rebeld" );
	deepEqual( Stem("rebeldes"), "rebeld" );
	deepEqual( Stem("rebelión"), "rebelion" );
	deepEqual( Stem("rebobinar"), "rebobin" );
	deepEqual( Stem("rebolledo"), "rebolled" );
	deepEqual( Stem("rebonato"), "rebonat" );
	deepEqual( Stem("rebordados"), "rebord" );
	deepEqual( Stem("rebotará"), "rebot" );
	deepEqual( Stem("rebotarán"), "rebot" );
	deepEqual( Stem("rebote"), "rebot" );
	deepEqual( Stem("recaba"), "rec" );
	deepEqual( Stem("recaban"), "rec" );
	deepEqual( Stem("recado"), "rec" );
	deepEqual( Stem("recados"), "rec" );
	deepEqual( Stem("recalcar"), "recalc" );
	deepEqual( Stem("recalcitrante"), "recalcitr" );
	deepEqual( Stem("recalcó"), "recalc" );
	deepEqual( Stem("recalibren"), "recalibr" );
	deepEqual( Stem("recámara"), "recam" );
	deepEqual( Stem("recapacite"), "recapacit" );
	deepEqual( Stem("recapitalización"), "recapitaliz" );
	deepEqual( Stem("recargaron"), "recarg" );
	deepEqual( Stem("recargó"), "recarg" );
	deepEqual( Stem("recarpetear"), "recarpet" );
	deepEqual( Stem("recarpeteo"), "recarpete" );
	deepEqual( Stem("recaudaban"), "recaud" );
	deepEqual( Stem("recaudando"), "recaud" );
	deepEqual( Stem("recaudar"), "recaud" );
	deepEqual( Stem("recaudarían"), "recaud" );
	deepEqual( Stem("recaudaron"), "recaud" );
	deepEqual( Stem("recaude"), "recaud" );
	deepEqual( Stem("recaudó"), "recaud" );
	deepEqual( Stem("rece"), "rec" );
	deepEqual( Stem("recelar"), "recel" );
	deepEqual( Stem("recelos"), "recel" );
	deepEqual( Stem("recepción"), "recepcion" );
	deepEqual( Stem("receptor"), "receptor" );
	deepEqual( Stem("receptores"), "receptor" );
	deepEqual( Stem("receptoría"), "receptor" );
	deepEqual( Stem("recesión"), "recesion" );
	deepEqual( Stem("recesiones"), "recesion" );
	deepEqual( Stem("recesivo"), "reces" );
	deepEqual( Stem("receso"), "reces" );
	deepEqual( Stem("receta"), "recet" );
	deepEqual( Stem("rechace"), "rechac" );
	deepEqual( Stem("rechaza"), "rechaz" );
	deepEqual( Stem("rechazada"), "rechaz" );
	deepEqual( Stem("rechazadas"), "rechaz" );
	deepEqual( Stem("rechazamos"), "rechaz" );
	deepEqual( Stem("rechazan"), "rechaz" );
	deepEqual( Stem("rechazando"), "rechaz" );
	deepEqual( Stem("rechazar"), "rechaz" );
	deepEqual( Stem("rechazaron"), "rechaz" );
	deepEqual( Stem("rechazo"), "rechaz" );
	deepEqual( Stem("rechazó"), "rechaz" );
	deepEqual( Stem("rechifla"), "rechifl" );
	deepEqual( Stem("rechiflas"), "rechifl" );
	deepEqual( Stem("rechinan"), "rechin" );
	deepEqual( Stem("rechinar"), "rechin" );
	deepEqual( Stem("reciba"), "recib" );
	deepEqual( Stem("reciban"), "recib" );
	deepEqual( Stem("recibe"), "recib" );
	deepEqual( Stem("reciben"), "recib" );
	deepEqual( Stem("recibía"), "recib" );
	deepEqual( Stem("recibían"), "recib" );
	deepEqual( Stem("recibida"), "recib" );
	deepEqual( Stem("recibidas"), "recib" );
	deepEqual( Stem("recibido"), "recib" );
	deepEqual( Stem("recibidos"), "recib" );
	deepEqual( Stem("recibiendo"), "recib" );
	deepEqual( Stem("recibiera"), "recib" );
	deepEqual( Stem("recibieron"), "recib" );
	deepEqual( Stem("recibimiento"), "recib" );
	deepEqual( Stem("recibimos"), "recib" );
	deepEqual( Stem("recibió"), "recib" );
	deepEqual( Stem("recibir"), "recib" );
	deepEqual( Stem("recibirá"), "recib" );
	deepEqual( Stem("recibirán"), "recib" );
	deepEqual( Stem("recibiría"), "recib" );
	deepEqual( Stem("recibirían"), "recib" );
	deepEqual( Stem("recibirla"), "recib" );
	deepEqual( Stem("recibirlas"), "recib" );
	deepEqual( Stem("recibirlo"), "recib" );
	deepEqual( Stem("recibirnos"), "recib" );
	deepEqual( Stem("recibo"), "recib" );
	deepEqual( Stem("recibos"), "recib" );
	deepEqual( Stem("reciclaje"), "reciclaj" );
	deepEqual( Stem("reciclamos"), "recicl" );
	deepEqual( Stem("reciclando"), "recicl" );
	deepEqual( Stem("reciclar"), "recicl" );
	deepEqual( Stem("recién"), "recien" );
	deepEqual( Stem("reciente"), "recient" );
	deepEqual( Stem("recientemente"), "recient" );
	deepEqual( Stem("recientes"), "recient" );
	deepEqual( Stem("recientísima"), "recientisim" );
	deepEqual( Stem("recinto"), "recint" );
	deepEqual( Stem("recintos"), "recint" );
	deepEqual( Stem("recipiente"), "recipient" );
	deepEqual( Stem("recíprocas"), "reciproc" );
	deepEqual( Stem("reciprocidad"), "reciproc" );
	deepEqual( Stem("recíproco"), "reciproc" );
	deepEqual( Stem("recirculado"), "recircul" );
	deepEqual( Stem("recircularon"), "recircul" );
	deepEqual( Stem("recitar"), "recit" );
	deepEqual( Stem("recitarle"), "recit" );
	deepEqual( Stem("recitó"), "recit" );
	deepEqual( Stem("reclama"), "reclam" );
	deepEqual( Stem("reclamaba"), "reclam" );
	deepEqual( Stem("reclamación"), "reclam" );
	deepEqual( Stem("reclamadas"), "reclam" );
	deepEqual( Stem("reclamados"), "reclam" );
	deepEqual( Stem("reclaman"), "reclam" );
	deepEqual( Stem("reclamando"), "reclam" );
	deepEqual( Stem("reclamar"), "reclam" );
	deepEqual( Stem("reclamara"), "reclam" );
	deepEqual( Stem("reclamarle"), "reclam" );
	deepEqual( Stem("reclamarles"), "reclam" );
	deepEqual( Stem("reclamaron"), "reclam" );
	deepEqual( Stem("reclamen"), "reclam" );
	deepEqual( Stem("reclamó"), "reclam" );
	deepEqual( Stem("reclamos"), "recl" );
	deepEqual( Stem("recluido"), "reclu" );
	deepEqual( Stem("recluidos"), "reclu" );
	deepEqual( Stem("reclusorio"), "reclusori" );
	deepEqual( Stem("reclusorios"), "reclusori" );
	deepEqual( Stem("reclutadas"), "reclut" );
	deepEqual( Stem("recocido"), "recoc" );
	deepEqual( Stem("recogen"), "recog" );
	deepEqual( Stem("recoger"), "recog" );
	deepEqual( Stem("recogerla"), "recog" );
	deepEqual( Stem("recogerle"), "recog" );
	deepEqual( Stem("recogida"), "recog" );
	deepEqual( Stem("recogidas"), "recog" );
	deepEqual( Stem("recogido"), "recog" );
	deepEqual( Stem("recogidos"), "recog" );
	deepEqual( Stem("recogieron"), "recog" );
	deepEqual( Stem("recogió"), "recog" );
	deepEqual( Stem("recolección"), "recoleccion" );
	deepEqual( Stem("recolectando"), "recolect" );
	deepEqual( Stem("recolector"), "recolector" );
	deepEqual( Stem("recomedaciones"), "recomed" );
	deepEqual( Stem("recomendación"), "recomend" );
	deepEqual( Stem("recomendaciones"), "recomend" );
	deepEqual( Stem("recomendadas"), "recomend" );
	deepEqual( Stem("recomendado"), "recomend" );
	deepEqual( Stem("recomendamos"), "recomend" );
	deepEqual( Stem("recomendar"), "recomend" );
	deepEqual( Stem("recomendara"), "recomend" );
	deepEqual( Stem("recomendaron"), "recomend" );
	deepEqual( Stem("recomendó"), "recomend" );
	deepEqual( Stem("recomienda"), "recomiend" );
	deepEqual( Stem("recomiendan"), "recomiend" );
	deepEqual( Stem("recomiendo"), "recom" );
	deepEqual( Stem("recompensa"), "recompens" );
	deepEqual( Stem("recompra"), "recompr" );
	deepEqual( Stem("reconciliacion"), "reconciliacion" );
	deepEqual( Stem("reconciliación"), "reconcili" );
	deepEqual( Stem("reconcilió"), "reconcil" );
	deepEqual( Stem("reconducción"), "reconduccion" );
	deepEqual( Stem("reconformación"), "reconform" );
	deepEqual( Stem("reconfortante"), "reconfort" );
	deepEqual( Stem("reconoce"), "reconoc" );
	deepEqual( Stem("reconocemos"), "reconoc" );
	deepEqual( Stem("reconocer"), "reconoc" );
	deepEqual( Stem("reconocerlas"), "reconoc" );
	deepEqual( Stem("reconocerlos"), "reconoc" );
	deepEqual( Stem("reconocerse"), "reconoc" );
	deepEqual( Stem("reconocía"), "reconoc" );
	deepEqual( Stem("reconocida"), "reconoc" );
	deepEqual( Stem("reconocidamente"), "reconocid" );
	deepEqual( Stem("reconocidas"), "reconoc" );
	deepEqual( Stem("reconocido"), "reconoc" );
	deepEqual( Stem("reconocidos"), "reconoc" );
	deepEqual( Stem("reconociendo"), "reconoc" );
	deepEqual( Stem("reconocieron"), "reconoc" );
	deepEqual( Stem("reconocimiento"), "reconoc" );
	deepEqual( Stem("reconocimientos"), "reconoc" );
	deepEqual( Stem("reconoció"), "reconoc" );
	deepEqual( Stem("reconozca"), "reconozc" );
	deepEqual( Stem("reconozcan"), "reconozc" );
	deepEqual( Stem("reconozco"), "reconozc" );
	deepEqual( Stem("reconsidere"), "reconsider" );
	deepEqual( Stem("reconstrucción"), "reconstruccion" );
	deepEqual( Stem("reconstruir"), "reconstru" );
	deepEqual( Stem("reconstruirán"), "reconstru" );
	deepEqual( Stem("reconversión"), "reconversion" );
	deepEqual( Stem("recopa"), "recop" );
	deepEqual( Stem("recopila"), "recopil" );
	deepEqual( Stem("recopilación"), "recopil" );
	deepEqual( Stem("recopiló"), "recopil" );
	deepEqual( Stem("record"), "record" );
	deepEqual( Stem("récord"), "record" );
	deepEqual( Stem("recordaba"), "record" );
	deepEqual( Stem("recordado"), "record" );
	deepEqual( Stem("recordar"), "record" );
	deepEqual( Stem("recordarán"), "record" );
	deepEqual( Stem("recordemos"), "record" );
	deepEqual( Stem("recordó"), "record" );
	deepEqual( Stem("récords"), "records" );
	deepEqual( Stem("recorre"), "recorr" );
	deepEqual( Stem("recorrer"), "recorr" );
	deepEqual( Stem("recorrida"), "recorr" );
	deepEqual( Stem("recorrido"), "recorr" );
	deepEqual( Stem("recorridos"), "recorr" );
	deepEqual( Stem("recorrieron"), "recorr" );
	deepEqual( Stem("recorrió"), "recorr" );
	deepEqual( Stem("recortar"), "recort" );
	deepEqual( Stem("recorte"), "recort" );
	deepEqual( Stem("recortes"), "recort" );
	deepEqual( Stem("recostado"), "recost" );
	deepEqual( Stem("recostó"), "recost" );
	deepEqual( Stem("recreación"), "recreacion" );
	deepEqual( Stem("recreará"), "recr" );
	deepEqual( Stem("recreativas"), "recreat" );
	deepEqual( Stem("recreativo"), "recreat" );
	deepEqual( Stem("recrimina"), "recrimin" );
	deepEqual( Stem("recriminaba"), "recrimin" );
	deepEqual( Stem("recriminados"), "recrimin" );
	deepEqual( Stem("recronometraron"), "recronometr" );
	deepEqual( Stem("recrudecer"), "recrudec" );
	deepEqual( Stem("recrudecieron"), "recrudec" );
	deepEqual( Stem("recrudeció"), "recrudec" );
	deepEqual( Stem("recta"), "rect" );
	deepEqual( Stem("rectas"), "rect" );
	deepEqual( Stem("rectificada"), "rectific" );
	deepEqual( Stem("rectificar"), "rectific" );
	deepEqual( Stem("rectitud"), "rectitud" );
	deepEqual( Stem("rector"), "rector" );
	deepEqual( Stem("rectoría"), "rector" );
	deepEqual( Stem("rectos"), "rect" );
	deepEqual( Stem("recuerda"), "recuerd" );
	deepEqual( Stem("recuerdan"), "recuerd" );
	deepEqual( Stem("recuerde"), "recuerd" );
	deepEqual( Stem("recuérdele"), "recuerdel" );
	deepEqual( Stem("recuerden"), "recuerd" );
	deepEqual( Stem("recuerdo"), "recuerd" );
	deepEqual( Stem("recuerdos"), "recuerd" );
	deepEqual( Stem("recupera"), "recuper" );
	deepEqual( Stem("recuperable"), "recuper" );
	deepEqual( Stem("recuperación"), "recuper" );
	deepEqual( Stem("recuperado"), "recuper" );
	deepEqual( Stem("recuperando"), "recuper" );
	deepEqual( Stem("recuperar"), "recuper" );
	deepEqual( Stem("recuperarla"), "recuper" );
	deepEqual( Stem("recuperaron"), "recuper" );
	deepEqual( Stem("recuperarse"), "recuper" );
	deepEqual( Stem("recupere"), "recuper" );
	deepEqual( Stem("recurre"), "recurr" );
	deepEqual( Stem("recurrido"), "recurr" );
	deepEqual( Stem("recurrieron"), "recurr" );
	deepEqual( Stem("recurrir"), "recurr" );
	deepEqual( Stem("recurrirá"), "recurr" );
	deepEqual( Stem("recurso"), "recurs" );
	deepEqual( Stem("recursos"), "recurs" );
	deepEqual( Stem("red"), "red" );
	deepEqual( Stem("redacción"), "redaccion" );
	deepEqual( Stem("redactado"), "redact" );
	deepEqual( Stem("redactaron"), "redact" );
	deepEqual( Stem("redada"), "red" );
	deepEqual( Stem("redefinir"), "redefin" );
	deepEqual( Stem("redes"), "red" );
	deepEqual( Stem("redescuentos"), "redescuent" );
	deepEqual( Stem("redilas"), "redil" );
	deepEqual( Stem("rediseñar"), "rediseñ" );
	deepEqual( Stem("rediseños"), "rediseñ" );
	deepEqual( Stem("redistribución"), "redistribu" );
	deepEqual( Stem("reditúa"), "reditu" );
	deepEqual( Stem("redituable"), "reditu" );
	deepEqual( Stem("redobla"), "redobl" );
	deepEqual( Stem("redoblado"), "redobl" );
	deepEqual( Stem("redoblar"), "redobl" );
	deepEqual( Stem("redonda"), "redond" );
	deepEqual( Stem("redondear"), "redond" );
	deepEqual( Stem("redondez"), "redondez" );
	deepEqual( Stem("redondo"), "redond" );
	deepEqual( Stem("rédord"), "redord" );
	deepEqual( Stem("reduccion"), "reduccion" );
	deepEqual( Stem("reducción"), "reduccion" );
	deepEqual( Stem("reducciones"), "reduccion" );
	deepEqual( Stem("reduce"), "reduc" );
	deepEqual( Stem("reducen"), "reduc" );
	deepEqual( Stem("reducía"), "reduc" );
	deepEqual( Stem("reducida"), "reduc" );
	deepEqual( Stem("reducidas"), "reduc" );
	deepEqual( Stem("reducido"), "reduc" );
	deepEqual( Stem("reduciendo"), "reduc" );
	deepEqual( Stem("reducir"), "reduc" );
	deepEqual( Stem("reducirá"), "reduc" );
	deepEqual( Stem("reducirlas"), "reduc" );
	deepEqual( Stem("reducirles"), "reduc" );
	deepEqual( Stem("reducirse"), "reduc" );
	deepEqual( Stem("redujeron"), "redujeron" );
	deepEqual( Stem("redujo"), "reduj" );
	deepEqual( Stem("redunde"), "redund" );
	deepEqual( Stem("reduzca"), "reduzc" );
	deepEqual( Stem("reduzcan"), "reduzc" );
	deepEqual( Stem("reed"), "reed" );
	deepEqual( Stem("reedición"), "reedicion" );
	deepEqual( Stem("reeditará"), "reedit" );
	deepEqual( Stem("reelección"), "reeleccion" );
	deepEqual( Stem("reelecto"), "reelect" );
	deepEqual( Stem("reelegido"), "reeleg" );
	deepEqual( Stem("reelegirse"), "reeleg" );
	deepEqual( Stem("reemplaza"), "reemplaz" );
	deepEqual( Stem("reemplazable"), "reemplaz" );
	deepEqual( Stem("reemplazado"), "reemplaz" );
	deepEqual( Stem("reemplazados"), "reemplaz" );
	deepEqual( Stem("reemplazar"), "reemplaz" );
	deepEqual( Stem("reemplazo"), "reemplaz" );
	deepEqual( Stem("reencarnación"), "reencarn" );
	deepEqual( Stem("reencuentro"), "reencuentr" );
	deepEqual( Stem("reestablecieron"), "reestablec" );
	deepEqual( Stem("reestrenan"), "reestren" );
	deepEqual( Stem("reestreno"), "reestren" );
	deepEqual( Stem("reestructuración"), "reestructur" );
	deepEqual( Stem("reestructurar"), "reestructur" );
	deepEqual( Stem("reestructurará"), "reestructur" );
	deepEqual( Stem("reestructure"), "reestructur" );
	deepEqual( Stem("reestudiarse"), "reestudi" );
	deepEqual( Stem("refacción"), "refaccion" );
	deepEqual( Stem("refaccionarias"), "refaccionari" );
	deepEqual( Stem("refaccionarios"), "refaccionari" );
	deepEqual( Stem("refacciones"), "refaccion" );
	deepEqual( Stem("referencia"), "referent" );
	deepEqual( Stem("referencias"), "referent" );
	deepEqual( Stem("referéndum"), "referendum" );
	deepEqual( Stem("referente"), "referent" );
	deepEqual( Stem("referentes"), "referent" );
	deepEqual( Stem("réferi"), "referi" );
	deepEqual( Stem("referí"), "refer" );
	deepEqual( Stem("refería"), "ref" );
	deepEqual( Stem("referían"), "ref" );
	deepEqual( Stem("referidos"), "refer" );
	deepEqual( Stem("referirme"), "refer" );
	deepEqual( Stem("referirse"), "refer" );
	deepEqual( Stem("refiera"), "ref" );
	deepEqual( Stem("refiere"), "refier" );
	deepEqual( Stem("refieren"), "refier" );
	deepEqual( Stem("refiero"), "refier" );
	deepEqual( Stem("refinación"), "refin" );
	deepEqual( Stem("refinadora"), "refin" );
	deepEqual( Stem("refineria"), "refineri" );
	deepEqual( Stem("refinerías"), "refin" );
	deepEqual( Stem("refiriéndose"), "refir" );
	deepEqual( Stem("refirió"), "refir" );
	deepEqual( Stem("reflectores"), "reflector" );
	deepEqual( Stem("refleja"), "reflej" );
	deepEqual( Stem("reflejaba"), "reflej" );
	deepEqual( Stem("reflejaban"), "reflej" );
	deepEqual( Stem("reflejada"), "reflej" );
	deepEqual( Stem("reflejado"), "reflej" );
	deepEqual( Stem("reflejan"), "reflej" );
	deepEqual( Stem("reflejando"), "reflej" );
	deepEqual( Stem("reflejar"), "reflej" );
	deepEqual( Stem("reflejará"), "reflej" );
	deepEqual( Stem("reflejo"), "reflej" );
	deepEqual( Stem("reflejó"), "reflej" );
	deepEqual( Stem("reflejos"), "reflej" );
	deepEqual( Stem("reflexión"), "reflexion" );
	deepEqual( Stem("reflexiona"), "reflexion" );
	deepEqual( Stem("reflexionar"), "reflexion" );
	deepEqual( Stem("reflexionen"), "reflexion" );
	deepEqual( Stem("reflexiones"), "reflexion" );
	deepEqual( Stem("reflexionó"), "reflexion" );
	deepEqual( Stem("reforestarlas"), "reforest" );
	deepEqual( Stem("reforma"), "reform" );
	deepEqual( Stem("reformado"), "reform" );
	deepEqual( Stem("reformar"), "reform" );
	deepEqual( Stem("reformas"), "reform" );
	deepEqual( Stem("reforme"), "reform" );
	deepEqual( Stem("reformó"), "reform" );
	deepEqual( Stem("reforzada"), "reforz" );
	deepEqual( Stem("reforzadas"), "reforz" );
	deepEqual( Stem("reforzado"), "reforz" );
	deepEqual( Stem("reforzamiento"), "reforz" );
	deepEqual( Stem("reforzando"), "reforz" );
	deepEqual( Stem("reforzar"), "reforz" );
	deepEqual( Stem("reforzarlas"), "reforz" );
	deepEqual( Stem("reforzó"), "reforz" );
	deepEqual( Stem("refractarias"), "refractari" );
	deepEqual( Stem("refrán"), "refran" );
	deepEqual( Stem("refranes"), "refran" );
	deepEqual( Stem("refrenamiento"), "refren" );
	deepEqual( Stem("refrendaron"), "refrend" );
	deepEqual( Stem("refrendo"), "refrend" );
	deepEqual( Stem("refrendó"), "refrend" );
	deepEqual( Stem("refresca"), "refresc" );
	deepEqual( Stem("refrescos"), "refresc" );
	deepEqual( Stem("refriegas"), "refrieg" );
	deepEqual( Stem("refuercen"), "refuerc" );
	deepEqual( Stem("refuerzan"), "refuerz" );
	deepEqual( Stem("refuerzo"), "refuerz" );
	deepEqual( Stem("refuerzos"), "refuerz" );
	deepEqual( Stem("refugiados"), "refugi" );
	deepEqual( Stem("refugiar"), "refugi" );
	deepEqual( Stem("refugiarse"), "refugi" );
	deepEqual( Stem("refugio"), "refugi" );
	deepEqual( Stem("refugió"), "refug" );
	deepEqual( Stem("regadas"), "reg" );
	deepEqual( Stem("regalado"), "regal" );
	deepEqual( Stem("regalan"), "regal" );
	deepEqual( Stem("regalando"), "regal" );
	deepEqual( Stem("regalar"), "regal" );
	deepEqual( Stem("regalarnos"), "regal" );
	deepEqual( Stem("regalárselo"), "regal" );
	deepEqual( Stem("regalárselos"), "regal" );
	deepEqual( Stem("regalo"), "regal" );
	deepEqual( Stem("regaló"), "regal" );
	deepEqual( Stem("regalos"), "regal" );
	deepEqual( Stem("regañadientes"), "regañadient" );
	deepEqual( Stem("regañan"), "regañ" );
	deepEqual( Stem("regaños"), "regañ" );
	deepEqual( Stem("regente"), "regent" );
	deepEqual( Stem("regia"), "regi" );
	deepEqual( Stem("regido"), "reg" );
	deepEqual( Stem("regidor"), "regidor" );
	deepEqual( Stem("regidores"), "regidor" );
	deepEqual( Stem("régimen"), "regim" );
	deepEqual( Stem("regímenes"), "regimen" );
	deepEqual( Stem("regina"), "regin" );
	deepEqual( Stem("regio"), "regi" );
	deepEqual( Stem("regiomontana"), "regiomontan" );
	deepEqual( Stem("regiomontanas"), "regiomontan" );
	deepEqual( Stem("regiomontano"), "regiomontan" );
	deepEqual( Stem("regiomontanos"), "regiomontan" );
	deepEqual( Stem("region"), "region" );
	deepEqual( Stem("región"), "region" );
	deepEqual( Stem("regional"), "regional" );
	deepEqual( Stem("regionales"), "regional" );
	deepEqual( Stem("regionalismo"), "regional" );
	deepEqual( Stem("regiones"), "region" );
	deepEqual( Stem("regios"), "regi" );
	deepEqual( Stem("regiria"), "regiri" );
	deepEqual( Stem("regirnos"), "reg" );
	deepEqual( Stem("regirse"), "reg" );
	deepEqual( Stem("registra"), "registr" );
	deepEqual( Stem("registraba"), "registr" );
	deepEqual( Stem("registrada"), "registr" );
	deepEqual( Stem("registradas"), "registr" );
	deepEqual( Stem("registrado"), "registr" );
	deepEqual( Stem("registrador"), "registr" );
	deepEqual( Stem("registrados"), "registr" );
	deepEqual( Stem("registran"), "registr" );
	deepEqual( Stem("registrandose"), "registr" );
	deepEqual( Stem("registrándose"), "registr" );
	deepEqual( Stem("registrar"), "registr" );
	deepEqual( Stem("registrará"), "registr" );
	deepEqual( Stem("registrarán"), "registr" );
	deepEqual( Stem("registraron"), "registr" );
	deepEqual( Stem("registrarse"), "registr" );
	deepEqual( Stem("registre"), "registr" );
	deepEqual( Stem("registren"), "registr" );
	deepEqual( Stem("registro"), "registr" );
	deepEqual( Stem("registró"), "registr" );
	deepEqual( Stem("registros"), "registr" );
	deepEqual( Stem("regla"), "regl" );
	deepEqual( Stem("reglamentación"), "reglament" );
	deepEqual( Stem("reglamentar"), "reglament" );
	deepEqual( Stem("reglamentarios"), "reglamentari" );
	deepEqual( Stem("reglamente"), "regl" );
	deepEqual( Stem("reglamento"), "reglament" );
	deepEqual( Stem("reglamentos"), "reglament" );
	deepEqual( Stem("reglas"), "regl" );
	deepEqual( Stem("regresa"), "regres" );
	deepEqual( Stem("regresaba"), "regres" );
	deepEqual( Stem("regresaban"), "regres" );
	deepEqual( Stem("regresan"), "regres" );
	deepEqual( Stem("regresando"), "regres" );
	deepEqual( Stem("regresar"), "regres" );
	deepEqual( Stem("regresara"), "regres" );
	deepEqual( Stem("regresará"), "regres" );
	deepEqual( Stem("regresaran"), "regres" );
	deepEqual( Stem("regresarán"), "regres" );
	deepEqual( Stem("regresaremos"), "regres" );
	deepEqual( Stem("regresaría"), "regres" );
	deepEqual( Stem("regresaron"), "regres" );
	deepEqual( Stem("regresarse"), "regres" );
	deepEqual( Stem("regresas"), "regres" );
	deepEqual( Stem("regrese"), "regres" );
	deepEqual( Stem("regreselo"), "regresel" );
	deepEqual( Stem("regresen"), "regres" );
	deepEqual( Stem("regreses"), "regres" );
	deepEqual( Stem("regrésese"), "regreses" );
	deepEqual( Stem("regresiva"), "regres" );
	deepEqual( Stem("regreso"), "regres" );
	deepEqual( Stem("regresó"), "regres" );
	deepEqual( Stem("reguera"), "reguer" );
	deepEqual( Stem("regula"), "regul" );
	deepEqual( Stem("regulación"), "regul" );
	deepEqual( Stem("regulaciones"), "regul" );
	deepEqual( Stem("regulador"), "regul" );
	deepEqual( Stem("reguladora"), "regul" );
	deepEqual( Stem("reguladores"), "regul" );
	deepEqual( Stem("regular"), "regul" );
	deepEqual( Stem("regulares"), "regular" );
	deepEqual( Stem("regularización"), "regulariz" );
	deepEqual( Stem("regularizar"), "regulariz" );
	deepEqual( Stem("regularizará"), "regulariz" );
	deepEqual( Stem("regularizó"), "regulariz" );
	deepEqual( Stem("regularmente"), "regular" );
	deepEqual( Stem("regulatoria"), "regulatori" );
	deepEqual( Stem("regule"), "regul" );
	deepEqual( Stem("rehabilitación"), "rehabilit" );
	deepEqual( Stem("rehabilitaciones"), "rehabilit" );
	deepEqual( Stem("rehabilitado"), "rehabilit" );
	deepEqual( Stem("rehacer"), "rehac" );
	deepEqual( Stem("rehén"), "rehen" );
	deepEqual( Stem("rehenes"), "rehen" );
	deepEqual( Stem("rehiletes"), "rehilet" );
	deepEqual( Stem("rehuir"), "rehu" );
	deepEqual( Stem("rehusaban"), "rehus" );
	deepEqual( Stem("rehusaron"), "rehus" );
	deepEqual( Stem("reía"), "rei" );
	deepEqual( Stem("reían"), "rei" );
	deepEqual( Stem("reimplantó"), "reimplant" );
	deepEqual( Stem("reina"), "rein" );
	deepEqual( Stem("reinado"), "rein" );
	deepEqual( Stem("reinante"), "reinant" );
	deepEqual( Stem("reincidan"), "reincid" );
	deepEqual( Stem("reincidencia"), "reincident" );
	deepEqual( Stem("reincorporará"), "reincorpor" );
	deepEqual( Stem("reineros"), "reiner" );
	deepEqual( Stem("reingresó"), "reingres" );
	deepEqual( Stem("reiniciar"), "reinici" );
	deepEqual( Stem("reiniciaron"), "reinici" );
	deepEqual( Stem("reino"), "rein" );
	deepEqual( Stem("reinstalación"), "reinstal" );
	deepEqual( Stem("reintegración"), "reintegr" );
	deepEqual( Stem("reintegrar"), "reintegr" );
	deepEqual( Stem("reintegrarme"), "reintegr" );
	deepEqual( Stem("reinterpretar"), "reinterpret" );
	deepEqual( Stem("reinvertirá"), "reinvert" );
	deepEqual( Stem("reír"), "reir" );
	deepEqual( Stem("reírnos"), "reirn" );
	deepEqual( Stem("reírse"), "reirs" );
	deepEqual( Stem("reiteración"), "reiter" );
	deepEqual( Stem("reiteradamente"), "reiter" );
	deepEqual( Stem("reiterará"), "reiter" );
	deepEqual( Stem("reiteraron"), "reiter" );
	deepEqual( Stem("reiteró"), "reiter" );
	deepEqual( Stem("reivindicación"), "reivind" );
	deepEqual( Stem("reivindicar"), "reivindic" );
	deepEqual( Stem("reja"), "rej" );
	deepEqual( Stem("rejas"), "rej" );
	deepEqual( Stem("rejón"), "rejon" );
	deepEqual( Stem("rejoneador"), "rejon" );
	deepEqual( Stem("rejones"), "rejon" );
	deepEqual( Stem("rejuvenecedores"), "rejuvenecedor" );
	deepEqual( Stem("relación"), "relacion" );
	deepEqual( Stem("relaciona"), "relacion" );
	deepEqual( Stem("relacionada"), "relacion" );
	deepEqual( Stem("relacionadas"), "relacion" );
	deepEqual( Stem("relacionado"), "relacion" );
	deepEqual( Stem("relacionados"), "relacion" );
	deepEqual( Stem("relacionaron"), "relacion" );
	deepEqual( Stem("relacionarse"), "relacion" );
	deepEqual( Stem("relaciones"), "relacion" );
	deepEqual( Stem("relacionó"), "relacion" );
	deepEqual( Stem("relajado"), "relaj" );
	deepEqual( Stem("relajarse"), "relaj" );
	deepEqual( Stem("relamían"), "relam" );
	deepEqual( Stem("relampaguee"), "relampague" );
	deepEqual( Stem("relanzamiento"), "relanz" );
	deepEqual( Stem("relata"), "relat" );
	deepEqual( Stem("relatar"), "relat" );
	deepEqual( Stem("relativa"), "relat" );
	deepEqual( Stem("relativamente"), "relat" );
	deepEqual( Stem("relativas"), "relat" );
	deepEqual( Stem("relativo"), "relat" );
	deepEqual( Stem("relativos"), "relat" );
	deepEqual( Stem("relato"), "relat" );
	deepEqual( Stem("relató"), "relat" );
	deepEqual( Stem("relatos"), "relat" );
	deepEqual( Stem("relegada"), "releg" );
	deepEqual( Stem("relegado"), "releg" );
	deepEqual( Stem("relegue"), "releg" );
	deepEqual( Stem("relevado"), "relev" );
	deepEqual( Stem("relevancia"), "relev" );
	deepEqual( Stem("relevantes"), "relev" );
	deepEqual( Stem("relevar"), "relev" );
	deepEqual( Stem("relevista"), "relev" );
	deepEqual( Stem("relevo"), "relev" );
	deepEqual( Stem("relevó"), "relev" );
	deepEqual( Stem("relevos"), "relev" );
	deepEqual( Stem("relieve"), "reliev" );
	deepEqual( Stem("relieves"), "reliev" );
	deepEqual( Stem("religión"), "religion" );
	deepEqual( Stem("religiones"), "religion" );
	deepEqual( Stem("religiosa"), "religi" );
	deepEqual( Stem("religiosamente"), "religi" );
	deepEqual( Stem("religiosas"), "religi" );
	deepEqual( Stem("religioso"), "religi" );
	deepEqual( Stem("religiosos"), "religi" );
	deepEqual( Stem("rellenadas"), "rellen" );
	deepEqual( Stem("rellenarán"), "rellen" );
	deepEqual( Stem("relleno"), "rellen" );
	deepEqual( Stem("reloj"), "reloj" );
	deepEqual( Stem("relojito"), "relojit" );
	deepEqual( Stem("reluciente"), "relucient" );
	deepEqual( Stem("remache"), "remach" );
	deepEqual( Stem("remarcó"), "remarc" );
	deepEqual( Stem("rematar"), "remat" );
	deepEqual( Stem("remate"), "remat" );
	deepEqual( Stem("remates"), "remat" );
	deepEqual( Stem("rembolso"), "rembols" );
	deepEqual( Stem("remediada"), "remedi" );
	deepEqual( Stem("remediar"), "remedi" );
	deepEqual( Stem("remedio"), "remedi" );
	deepEqual( Stem("remedios"), "remedi" );
	deepEqual( Stem("remineralizante"), "remineraliz" );
	deepEqual( Stem("reminiscencia"), "reminiscent" );
	deepEqual( Stem("remite"), "remit" );
	deepEqual( Stem("remitente"), "remitent" );
	deepEqual( Stem("remitidas"), "remit" );
	deepEqual( Stem("remitidos"), "remit" );
	deepEqual( Stem("remitieron"), "remit" );
	deepEqual( Stem("remodelación"), "remodel" );
	deepEqual( Stem("remodelada"), "remodel" );
	deepEqual( Stem("remolques"), "remolqu" );
	deepEqual( Stem("remontan"), "remont" );
	deepEqual( Stem("rémoras"), "remor" );
	deepEqual( Stem("remota"), "remot" );
	deepEqual( Stem("remotamente"), "remot" );
	deepEqual( Stem("remotas"), "remot" );
	deepEqual( Stem("remoto"), "remot" );
	deepEqual( Stem("remotos"), "remot" );
	deepEqual( Stem("remover"), "remov" );
	deepEqual( Stem("removibles"), "remov" );
	deepEqual( Stem("removida"), "remov" );
	deepEqual( Stem("removidos"), "remov" );
	deepEqual( Stem("removió"), "remov" );
	deepEqual( Stem("remueve"), "remuev" );
	deepEqual( Stem("remuneración"), "remuner" );
	deepEqual( Stem("renace"), "renac" );
	deepEqual( Stem("renació"), "renac" );
	deepEqual( Stem("renales"), "renal" );
	deepEqual( Stem("renato"), "renat" );
	deepEqual( Stem("rencillas"), "rencill" );
	deepEqual( Stem("renconformación"), "renconform" );
	deepEqual( Stem("rencor"), "rencor" );
	deepEqual( Stem("rencores"), "rencor" );
	deepEqual( Stem("rencorosos"), "rencor" );
	deepEqual( Stem("rendía"), "rend" );
	deepEqual( Stem("rendido"), "rend" );
	deepEqual( Stem("rendimiento"), "rendimient" );
	deepEqual( Stem("rendimientos"), "rendimient" );
	deepEqual( Stem("rendir"), "rend" );
	deepEqual( Stem("rendirse"), "rend" );
	deepEqual( Stem("rendón"), "rendon" );
	deepEqual( Stem("rené"), "ren" );
	deepEqual( Stem("renee"), "rene" );
	deepEqual( Stem("renegar"), "reneg" );
	deepEqual( Stem("renegociación"), "renegoci" );
	deepEqual( Stem("renegociado"), "renegoci" );
	deepEqual( Stem("renegociar"), "renegoci" );
	deepEqual( Stem("renglón"), "renglon" );
	deepEqual( Stem("renglones"), "renglon" );
	deepEqual( Stem("reñida"), "reñ" );
	deepEqual( Stem("reñidas"), "reñ" );
	deepEqual( Stem("renombradas"), "renombr" );
	deepEqual( Stem("renombre"), "renombr" );
	deepEqual( Stem("renovables"), "renov" );
	deepEqual( Stem("renovación"), "renov" );
	deepEqual( Stem("renovada"), "renov" );
	deepEqual( Stem("renovado"), "renov" );
	deepEqual( Stem("renovadores"), "renov" );
	deepEqual( Stem("renovados"), "renov" );
	deepEqual( Stem("renovando"), "renov" );
	deepEqual( Stem("renovar"), "renov" );
	deepEqual( Stem("renovarvía"), "renovarv" );
	deepEqual( Stem("renta"), "rent" );
	deepEqual( Stem("rentabilidad"), "rentabil" );
	deepEqual( Stem("rentable"), "rentabl" );
	deepEqual( Stem("rentables"), "rentabl" );
	deepEqual( Stem("rentada"), "rent" );
	deepEqual( Stem("rentadas"), "rent" );
	deepEqual( Stem("rentados"), "rent" );
	deepEqual( Stem("rentando"), "rent" );
	deepEqual( Stem("rentarlas"), "rent" );
	deepEqual( Stem("rentas"), "rent" );
	deepEqual( Stem("rentería"), "rent" );
	deepEqual( Stem("renueve"), "renuev" );
	deepEqual( Stem("renuncia"), "renunci" );
	deepEqual( Stem("renunciar"), "renunci" );
	deepEqual( Stem("renunciara"), "renunci" );
	deepEqual( Stem("renunciarán"), "renunci" );
	deepEqual( Stem("renunciaría"), "renunci" );
	deepEqual( Stem("renunciaron"), "renunci" );
	deepEqual( Stem("renunció"), "renunc" );
	deepEqual( Stem("reo"), "reo" );
	deepEqual( Stem("reordenamiento"), "reorden" );
	deepEqual( Stem("reordenar"), "reorden" );
	deepEqual( Stem("reordene"), "reorden" );
	deepEqual( Stem("reorganice"), "reorganic" );
	deepEqual( Stem("reorganización"), "reorganiz" );
	deepEqual( Stem("reorganizar"), "reorganiz" );
	deepEqual( Stem("reorganizarnos"), "reorganiz" );
	deepEqual( Stem("reorganizarse"), "reorganiz" );
	deepEqual( Stem("reos"), "reos" );
	deepEqual( Stem("reparación"), "repar" );
	deepEqual( Stem("reparaciones"), "repar" );
	deepEqual( Stem("reparadas"), "repar" );
	deepEqual( Stem("reparando"), "repar" );
	deepEqual( Stem("reparar"), "repar" );
	deepEqual( Stem("repararlas"), "repar" );
	deepEqual( Stem("reparos"), "repar" );
	deepEqual( Stem("reparte"), "repart" );
	deepEqual( Stem("repartido"), "repart" );
	deepEqual( Stem("repartidor"), "repartidor" );
	deepEqual( Stem("repartidos"), "repart" );
	deepEqual( Stem("repartiendo"), "repart" );
	deepEqual( Stem("repartieron"), "repart" );
	deepEqual( Stem("repartimos"), "repart" );
	deepEqual( Stem("repartir"), "repart" );
	deepEqual( Stem("repartirán"), "repart" );
	deepEqual( Stem("repartirlos"), "repart" );
	deepEqual( Stem("repartirse"), "repart" );
	deepEqual( Stem("reparto"), "repart" );
	deepEqual( Stem("repatriación"), "repatri" );
	deepEqual( Stem("repatriados"), "repatri" );
	deepEqual( Stem("repavimentación"), "repaviment" );
	deepEqual( Stem("repavimentar"), "repaviment" );
	deepEqual( Stem("repente"), "repent" );
	deepEqual( Stem("repentina"), "repentin" );
	deepEqual( Stem("repentinamente"), "repentin" );
	deepEqual( Stem("repercusión"), "repercusion" );
	deepEqual( Stem("repercuten"), "repercut" );
	deepEqual( Stem("repertorio"), "repertori" );
	deepEqual( Stem("repetición"), "repeticion" );
	deepEqual( Stem("repeticiones"), "repeticion" );
	deepEqual( Stem("repetidamente"), "repetid" );
	deepEqual( Stem("repetidas"), "repet" );
	deepEqual( Stem("repetidísimas"), "repetidisim" );
	deepEqual( Stem("repetidoras"), "repetidor" );
	deepEqual( Stem("repetimos"), "repet" );
	deepEqual( Stem("repetir"), "repet" );
	deepEqual( Stem("repetira"), "repetir" );
	deepEqual( Stem("repetirá"), "repet" );
	deepEqual( Stem("repetirán"), "repet" );
	deepEqual( Stem("repetiría"), "repet" );
	deepEqual( Stem("repetirse"), "repet" );
	deepEqual( Stem("repita"), "repit" );
	deepEqual( Stem("repitan"), "repit" );
	deepEqual( Stem("repite"), "repit" );
	deepEqual( Stem("repitiéndome"), "repit" );
	deepEqual( Stem("repitió"), "repit" );
	deepEqual( Stem("repito"), "repit" );
	deepEqual( Stem("repleta"), "replet" );
	deepEqual( Stem("repleto"), "replet" );
	deepEqual( Stem("replica"), "replic" );
	deepEqual( Stem("réplica"), "replic" );
	deepEqual( Stem("replicar"), "replic" );
	deepEqual( Stem("replicarle"), "replic" );
	deepEqual( Stem("réplicas"), "replic" );
	deepEqual( Stem("repollos"), "repoll" );
	deepEqual( Stem("reponen"), "repon" );
	deepEqual( Stem("reponer"), "repon" );
	deepEqual( Stem("reporta"), "report" );
	deepEqual( Stem("reportadas"), "report" );
	deepEqual( Stem("reportado"), "report" );
	deepEqual( Stem("reportados"), "report" );
	deepEqual( Stem("reportaje"), "reportaj" );
	deepEqual( Stem("reportan"), "report" );
	deepEqual( Stem("reportar"), "report" );
	deepEqual( Stem("reportara"), "report" );
	deepEqual( Stem("reportarán"), "report" );
	deepEqual( Stem("reportaron"), "report" );
	deepEqual( Stem("reporte"), "report" );
	deepEqual( Stem("reportera"), "reporter" );
	deepEqual( Stem("reportero"), "reporter" );
	deepEqual( Stem("reporteros"), "reporter" );
	deepEqual( Stem("reportes"), "report" );
	deepEqual( Stem("repórtese"), "reportes" );
	deepEqual( Stem("reportó"), "report" );
	deepEqual( Stem("reportos"), "report" );
	deepEqual( Stem("reposo"), "repos" );
	deepEqual( Stem("reprendido"), "reprend" );
	deepEqual( Stem("represalias"), "represali" );
	deepEqual( Stem("representa"), "represent" );
	deepEqual( Stem("representaba"), "represent" );
	deepEqual( Stem("representación"), "represent" );
	deepEqual( Stem("representada"), "represent" );
	deepEqual( Stem("representadas"), "represent" );
	deepEqual( Stem("representado"), "represent" );
	deepEqual( Stem("representan"), "represent" );
	deepEqual( Stem("representando"), "represent" );
	deepEqual( Stem("representante"), "represent" );
	deepEqual( Stem("representantes"), "represent" );
	deepEqual( Stem("representar"), "represent" );
	deepEqual( Stem("representará"), "represent" );
	deepEqual( Stem("representarán"), "represent" );
	deepEqual( Stem("representaría"), "represent" );
	deepEqual( Stem("representativas"), "represent" );
	deepEqual( Stem("representatividad"), "representat" );
	deepEqual( Stem("representativo"), "represent" );
	deepEqual( Stem("representativos"), "represent" );
	deepEqual( Stem("representen"), "represent" );
	deepEqual( Stem("representó"), "represent" );
	deepEqual( Stem("represión"), "represion" );
	deepEqual( Stem("represivo"), "repres" );
	deepEqual( Stem("represivos"), "repres" );
	deepEqual( Stem("represores"), "represor" );
	deepEqual( Stem("reprimir"), "reprim" );
	deepEqual( Stem("reprobadas"), "reprob" );
	deepEqual( Stem("reprobado"), "reprob" );
	deepEqual( Stem("reprobaron"), "reprob" );
	deepEqual( Stem("reprobó"), "reprob" );
	deepEqual( Stem("reprocha"), "reproch" );
	deepEqual( Stem("reproches"), "reproch" );
	deepEqual( Stem("reprochó"), "reproch" );
	deepEqual( Stem("reproducción"), "reproduccion" );
	deepEqual( Stem("reproducciones"), "reproduccion" );
	deepEqual( Stem("reproduce"), "reproduc" );
	deepEqual( Stem("reproducen"), "reproduc" );
	deepEqual( Stem("reproducir"), "reproduc" );
	deepEqual( Stem("reproducirse"), "reproduc" );
	deepEqual( Stem("reproductor"), "reproductor" );
	deepEqual( Stem("reprodujo"), "reproduj" );
	deepEqual( Stem("reproduzca"), "reproduzc" );
	deepEqual( Stem("reprueba"), "reprueb" );
	deepEqual( Stem("reprueban"), "reprueb" );
	deepEqual( Stem("reptiles"), "reptil" );
	deepEqual( Stem("república"), "republ" );
	deepEqual( Stem("republicanas"), "republican" );
	deepEqual( Stem("republicano"), "republican" );
	deepEqual( Stem("repúblicanos"), "republican" );
	deepEqual( Stem("repúblicas"), "republ" );
	deepEqual( Stem("repudiando"), "repudi" );
	deepEqual( Stem("repudio"), "repudi" );
	deepEqual( Stem("repuesto"), "repuest" );
	deepEqual( Stem("repugnancia"), "repugn" );
	deepEqual( Stem("repuntando"), "repunt" );
	deepEqual( Stem("repunte"), "repunt" );
	deepEqual( Stem("reputación"), "reput" );
	deepEqual( Stem("requería"), "requ" );
	deepEqual( Stem("requerida"), "requer" );
	deepEqual( Stem("requerido"), "requer" );
	deepEqual( Stem("requeridos"), "requer" );
	deepEqual( Stem("requerimiento"), "requer" );
	deepEqual( Stem("requerimientos"), "requer" );
	deepEqual( Stem("requerimos"), "requer" );
	deepEqual( Stem("requerirá"), "requer" );
	deepEqual( Stem("requerirán"), "requer" );
	deepEqual( Stem("requiera"), "requ" );
	deepEqual( Stem("requieran"), "requ" );
	deepEqual( Stem("requiere"), "requier" );
	deepEqual( Stem("requieren"), "requier" );
	deepEqual( Stem("requinto"), "requint" );
	deepEqual( Stem("requirieran"), "requir" );
	deepEqual( Stem("requirió"), "requir" );
	deepEqual( Stem("requisito"), "requisit" );
	deepEqual( Stem("requisitos"), "requisit" );
	deepEqual( Stem("resalta"), "resalt" );
	deepEqual( Stem("resaltando"), "resalt" );
	deepEqual( Stem("resaltar"), "resalt" );
	deepEqual( Stem("resaltaron"), "resalt" );
	deepEqual( Stem("resalte"), "resalt" );
	deepEqual( Stem("resaltó"), "resalt" );
	deepEqual( Stem("resarcirán"), "resarc" );
	deepEqual( Stem("resbaladero"), "resbalader" );
	deepEqual( Stem("resbaladizo"), "resbaladiz" );
	deepEqual( Stem("resbalosas"), "resbal" );
	deepEqual( Stem("rescata"), "rescat" );
	deepEqual( Stem("rescatable"), "rescat" );
	deepEqual( Stem("rescatada"), "rescat" );
	deepEqual( Stem("rescatadas"), "rescat" );
	deepEqual( Stem("rescatado"), "rescat" );
	deepEqual( Stem("rescatados"), "rescat" );
	deepEqual( Stem("rescatar"), "rescat" );
	deepEqual( Stem("rescate"), "rescat" );
	deepEqual( Stem("rescates"), "rescat" );
	deepEqual( Stem("rescindirles"), "rescind" );
	deepEqual( Stem("rescindirlo"), "rescind" );
	deepEqual( Stem("rescindirse"), "rescind" );
	deepEqual( Stem("research"), "research" );
	deepEqual( Stem("reseca"), "resec" );
	deepEqual( Stem("reseña"), "reseñ" );
	deepEqual( Stem("reseñas"), "reseñ" );
	deepEqual( Stem("reséndez"), "resendez" );
	deepEqual( Stem("resentidos"), "resent" );
	deepEqual( Stem("resentimos"), "resent" );
	deepEqual( Stem("reserva"), "reserv" );
	deepEqual( Stem("reservaciones"), "reserv" );
	deepEqual( Stem("reservadas"), "reserv" );
	deepEqual( Stem("reservado"), "reserv" );
	deepEqual( Stem("reservados"), "reserv" );
	deepEqual( Stem("reservar"), "reserv" );
	deepEqual( Stem("reservas"), "reserv" );
	deepEqual( Stem("resguardado"), "resguard" );
	deepEqual( Stem("resguardando"), "resguard" );
	deepEqual( Stem("resguardarlo"), "resguard" );
	deepEqual( Stem("reside"), "resid" );
	deepEqual( Stem("residen"), "resid" );
	deepEqual( Stem("residencia"), "resident" );
	deepEqual( Stem("residencial"), "residencial" );
	deepEqual( Stem("residenciales"), "residencial" );
	deepEqual( Stem("residencias"), "resident" );
	deepEqual( Stem("residente"), "resident" );
	deepEqual( Stem("residentes"), "resident" );
	deepEqual( Stem("residió"), "resid" );
	deepEqual( Stem("residuales"), "residual" );
	deepEqual( Stem("residuos"), "residu" );
	deepEqual( Stem("resiente"), "resient" );
	deepEqual( Stem("resignación"), "resign" );
	deepEqual( Stem("resignada"), "resign" );
	deepEqual( Stem("resignado"), "resign" );
	deepEqual( Stem("resigno"), "resign" );
	deepEqual( Stem("resillas"), "resill" );
	deepEqual( Stem("resintiendo"), "resint" );
	deepEqual( Stem("resintiera"), "resint" );
	deepEqual( Stem("resiste"), "res" );
	deepEqual( Stem("resistencia"), "resistent" );
	deepEqual( Stem("resistente"), "resistent" );
	deepEqual( Stem("resistentes"), "resistent" );
	deepEqual( Stem("resistidas"), "resist" );
	deepEqual( Stem("resistiera"), "resist" );
	deepEqual( Stem("resistió"), "resist" );
	deepEqual( Stem("resolucion"), "resolucion" );
	deepEqual( Stem("resolución"), "resolu" );
	deepEqual( Stem("resoluciones"), "resolu" );
	deepEqual( Stem("resolver"), "resolv" );
	deepEqual( Stem("resolverá"), "resolv" );
	deepEqual( Stem("resolverla"), "resolv" );
	deepEqual( Stem("resolverlas"), "resolv" );
	deepEqual( Stem("resolverlo"), "resolv" );
	deepEqual( Stem("resolverse"), "resolv" );
	deepEqual( Stem("resolviendo"), "resolv" );
	deepEqual( Stem("resolviéndole"), "resolv" );
	deepEqual( Stem("resolvieron"), "resolv" );
	deepEqual( Stem("resolvió"), "resolv" );
	deepEqual( Stem("resonante"), "reson" );
	deepEqual( Stem("resortes"), "resort" );
	deepEqual( Stem("respalda"), "respald" );
	deepEqual( Stem("respaldaba"), "respald" );
	deepEqual( Stem("respaldada"), "respald" );
	deepEqual( Stem("respaldará"), "respald" );
	deepEqual( Stem("respaldo"), "respald" );
	deepEqual( Stem("respaldó"), "respald" );
	deepEqual( Stem("respaldos"), "respald" );
	deepEqual( Stem("respecta"), "respect" );
	deepEqual( Stem("respectiva"), "respect" );
	deepEqual( Stem("respectivamente"), "respect" );
	deepEqual( Stem("respectivas"), "respect" );
	deepEqual( Stem("respectivo"), "respect" );
	deepEqual( Stem("respectivos"), "respect" );
	deepEqual( Stem("respecto"), "respect" );
	deepEqual( Stem("respeta"), "respet" );
	deepEqual( Stem("respetaban"), "respet" );
	deepEqual( Stem("respetable"), "respet" );
	deepEqual( Stem("respetado"), "respet" );
	deepEqual( Stem("respetados"), "respet" );
	deepEqual( Stem("respetamos"), "respet" );
	deepEqual( Stem("respetan"), "respet" );
	deepEqual( Stem("respetando"), "respet" );
	deepEqual( Stem("respetar"), "respet" );
	deepEqual( Stem("respetará"), "respet" );
	deepEqual( Stem("respetaron"), "respet" );
	deepEqual( Stem("respetarse"), "respet" );
	deepEqual( Stem("respete"), "respet" );
	deepEqual( Stem("respeten"), "respet" );
	deepEqual( Stem("respeto"), "respet" );
	deepEqual( Stem("respetuosa"), "respetu" );
	deepEqual( Stem("respetuoso"), "respetu" );
	deepEqual( Stem("respiratoria"), "respiratori" );
	deepEqual( Stem("respiratorias"), "respiratori" );
	deepEqual( Stem("respiratorio"), "respiratori" );
	deepEqual( Stem("respiro"), "respir" );
	deepEqual( Stem("resplandecientes"), "resplandecient" );
	deepEqual( Stem("resplandor"), "resplandor" );
	deepEqual( Stem("responda"), "respond" );
	deepEqual( Stem("respondan"), "respond" );
	deepEqual( Stem("responde"), "respond" );
	deepEqual( Stem("responden"), "respond" );
	deepEqual( Stem("responder"), "respond" );
	deepEqual( Stem("responderá"), "respond" );
	deepEqual( Stem("responderle"), "respond" );
	deepEqual( Stem("respondí"), "respond" );
	deepEqual( Stem("respondido"), "respond" );
	deepEqual( Stem("respondiera"), "respond" );
	deepEqual( Stem("respondió"), "respond" );
	deepEqual( Stem("responsabilice"), "responsabilic" );
	deepEqual( Stem("responsabilidad"), "respons" );
	deepEqual( Stem("responsabilidades"), "respons" );
	deepEqual( Stem("responsabilizaba"), "responsabiliz" );
	deepEqual( Stem("responsabilizarlo"), "responsabiliz" );
	deepEqual( Stem("responsabilizaron"), "responsabiliz" );
	deepEqual( Stem("responsabilizó"), "responsabiliz" );
	deepEqual( Stem("responsable"), "respons" );
	deepEqual( Stem("responsables"), "respons" );
	deepEqual( Stem("respuesta"), "respuest" );
	deepEqual( Stem("respuestas"), "respuest" );
	deepEqual( Stem("resquicio"), "resquici" );
	deepEqual( Stem("resta"), "rest" );
	deepEqual( Stem("restablecer"), "restablec" );
	deepEqual( Stem("restablecerse"), "restablec" );
	deepEqual( Stem("restablezcan"), "restablezc" );
	deepEqual( Stem("restan"), "rest" );
	deepEqual( Stem("restante"), "restant" );
	deepEqual( Stem("restantes"), "restant" );
	deepEqual( Stem("restar"), "rest" );
	deepEqual( Stem("restarle"), "rest" );
	deepEqual( Stem("restas"), "rest" );
	deepEqual( Stem("restauración"), "restaur" );
	deepEqual( Stem("restaurant"), "restaurant" );
	deepEqual( Stem("restaurante"), "restaur" );
	deepEqual( Stem("restaurantera"), "restauranter" );
	deepEqual( Stem("restaurantero"), "restauranter" );
	deepEqual( Stem("restauranteros"), "restauranter" );
	deepEqual( Stem("restaurantes"), "restaur" );
	deepEqual( Stem("restaurarle"), "restaur" );
	deepEqual( Stem("restitución"), "restitu" );
	deepEqual( Stem("restituir"), "restitu" );
	deepEqual( Stem("resto"), "rest" );
	deepEqual( Stem("restos"), "rest" );
	deepEqual( Stem("restregárselo"), "restreg" );
	deepEqual( Stem("restricción"), "restriccion" );
	deepEqual( Stem("restricciones"), "restriccion" );
	deepEqual( Stem("restrictiva"), "restrict" );
	deepEqual( Stem("restructuración"), "restructur" );
	deepEqual( Stem("resuelta"), "resuelt" );
	deepEqual( Stem("resuelto"), "resuelt" );
	deepEqual( Stem("resueltos"), "resuelt" );
	deepEqual( Stem("resuelva"), "resuelv" );
	deepEqual( Stem("resuelve"), "resuelv" );
	deepEqual( Stem("resuelven"), "resuelv" );
	deepEqual( Stem("resulta"), "result" );
	deepEqual( Stem("resultaba"), "result" );
	deepEqual( Stem("resultado"), "result" );
	deepEqual( Stem("resultados"), "result" );
	deepEqual( Stem("resultan"), "result" );
	deepEqual( Stem("resultando"), "result" );
	deepEqual( Stem("resultante"), "result" );
	deepEqual( Stem("resultar"), "result" );
	deepEqual( Stem("resultara"), "result" );
	deepEqual( Stem("resultaran"), "result" );
	deepEqual( Stem("resultaría"), "result" );
	deepEqual( Stem("resultaron"), "result" );
	deepEqual( Stem("resulte"), "result" );
	deepEqual( Stem("resulten"), "result" );
	deepEqual( Stem("resulto"), "result" );
	deepEqual( Stem("resultó"), "result" );
	deepEqual( Stem("resumen"), "resum" );
	deepEqual( Stem("resumido"), "resum" );
	deepEqual( Stem("resumir"), "resum" );
	deepEqual( Stem("resumirse"), "resum" );
	deepEqual( Stem("resurgente"), "resurgent" );
	deepEqual( Stem("resurgir"), "resurg" );
	deepEqual( Stem("resurja"), "resurj" );
	deepEqual( Stem("resurrección"), "resurreccion" );
	deepEqual( Stem("retador"), "retador" );
	deepEqual( Stem("retardatario"), "retardatari" );
	deepEqual( Stem("retardo"), "retard" );
	deepEqual( Stem("retazos"), "retaz" );
	deepEqual( Stem("retener"), "reten" );
	deepEqual( Stem("retengan"), "reteng" );
	deepEqual( Stem("retenía"), "reten" );
	deepEqual( Stem("retenido"), "reten" );
	deepEqual( Stem("reticencia"), "reticent" );
	deepEqual( Stem("reticencias"), "reticent" );
	deepEqual( Stem("retiene"), "retien" );
	deepEqual( Stem("retinitis"), "retinitis" );
	deepEqual( Stem("retira"), "retir" );
	deepEqual( Stem("retiraba"), "retir" );
	deepEqual( Stem("retirada"), "retir" );
	deepEqual( Stem("retirado"), "retir" );
	deepEqual( Stem("retirados"), "retir" );
	deepEqual( Stem("retiramos"), "retir" );
	deepEqual( Stem("retirando"), "retir" );
	deepEqual( Stem("retirándose"), "retir" );
	deepEqual( Stem("retirar"), "retir" );
	deepEqual( Stem("retirara"), "retir" );
	deepEqual( Stem("retirará"), "retir" );
	deepEqual( Stem("retirarán"), "retir" );
	deepEqual( Stem("retiraré"), "retir" );
	deepEqual( Stem("retiraría"), "retir" );
	deepEqual( Stem("retirarlas"), "retir" );
	deepEqual( Stem("retiraron"), "retir" );
	deepEqual( Stem("retirarse"), "retir" );
	deepEqual( Stem("retire"), "retir" );
	deepEqual( Stem("retiro"), "retir" );
	deepEqual( Stem("retiró"), "retir" );
	deepEqual( Stem("retiros"), "retir" );
	deepEqual( Stem("reto"), "ret" );
	deepEqual( Stem("retó"), "ret" );
	deepEqual( Stem("retomado"), "retom" );
	deepEqual( Stem("retomados"), "retom" );
	deepEqual( Stem("retomando"), "retom" );
	deepEqual( Stem("retomar"), "retom" );
	deepEqual( Stem("retomarán"), "retom" );
	deepEqual( Stem("retomarla"), "retom" );
	deepEqual( Stem("retomé"), "retom" );
	deepEqual( Stem("retomo"), "retom" );
	deepEqual( Stem("retomó"), "retom" );
	deepEqual( Stem("retorcerse"), "retorc" );
	deepEqual( Stem("retorcidos"), "retorc" );
	deepEqual( Stem("retornados"), "retorn" );
	deepEqual( Stem("retornaría"), "retorn" );
	deepEqual( Stem("retorno"), "retorn" );
	deepEqual( Stem("retornó"), "retorn" );
	deepEqual( Stem("retos"), "ret" );
	deepEqual( Stem("retracta"), "retract" );
	deepEqual( Stem("retractado"), "retract" );
	deepEqual( Stem("retractarán"), "retract" );
	deepEqual( Stem("retractaré"), "retract" );
	deepEqual( Stem("retrasada"), "retras" );
	deepEqual( Stem("retrasado"), "retras" );
	deepEqual( Stem("retrasan"), "retras" );
	deepEqual( Stem("retrasando"), "retras" );
	deepEqual( Stem("retrasar"), "retras" );
	deepEqual( Stem("retrasará"), "retras" );
	deepEqual( Stem("retrase"), "retr" );
	deepEqual( Stem("retrasen"), "retr" );
	deepEqual( Stem("retraso"), "retras" );
	deepEqual( Stem("retrasó"), "retras" );
	deepEqual( Stem("retrasos"), "retras" );
	deepEqual( Stem("retratado"), "retrat" );
	deepEqual( Stem("retratar"), "retrat" );
	deepEqual( Stem("retratará"), "retrat" );
	deepEqual( Stem("retrataron"), "retrat" );
	deepEqual( Stem("retratarse"), "retrat" );
	deepEqual( Stem("retrato"), "retrat" );
	deepEqual( Stem("retrató"), "retrat" );
	deepEqual( Stem("retratos"), "retrat" );
	deepEqual( Stem("retribuido"), "retribu" );
	deepEqual( Stem("retribuye"), "retribu" );
	deepEqual( Stem("retroactiva"), "retroact" );
	deepEqual( Stem("retroactivo"), "retroact" );
	deepEqual( Stem("retroalimentan"), "retroaliment" );
	deepEqual( Stem("retroceder"), "retroced" );
	deepEqual( Stem("retrocedido"), "retroced" );
	deepEqual( Stem("retroceso"), "retroces" );
	deepEqual( Stem("retrospección"), "retrospeccion" );
	deepEqual( Stem("retrospectiva"), "retrospect" );
	deepEqual( Stem("retrotraerlas"), "retrotr" );
	deepEqual( Stem("retrovisor"), "retrovisor" );
	deepEqual( Stem("retuvieron"), "retuv" );
	deepEqual( Stem("retuvo"), "retuv" );
	deepEqual( Stem("reubicación"), "reubic" );
	deepEqual( Stem("reubicadas"), "reubic" );
	deepEqual( Stem("reubicado"), "reubic" );
	deepEqual( Stem("reubicados"), "reubic" );
	deepEqual( Stem("reubicar"), "reubic" );
	deepEqual( Stem("reubicarlos"), "reubic" );
	deepEqual( Stem("reubicarse"), "reubic" );
	deepEqual( Stem("reúna"), "reun" );
	deepEqual( Stem("reúnan"), "reun" );
	deepEqual( Stem("reune"), "reun" );
	deepEqual( Stem("reúne"), "reun" );
	deepEqual( Stem("reunen"), "reun" );
	deepEqual( Stem("reúnen"), "reun" );
	deepEqual( Stem("reunía"), "reun" );
	deepEqual( Stem("reunían"), "reun" );
	deepEqual( Stem("reunido"), "reun" );
	deepEqual( Stem("reunidos"), "reun" );
	deepEqual( Stem("reunieron"), "reun" );
	deepEqual( Stem("reunió"), "reun" );
	deepEqual( Stem("reunion"), "reunion" );
	deepEqual( Stem("reunión"), "reunion" );
	deepEqual( Stem("reuniones"), "reunion" );
	deepEqual( Stem("reunir"), "reun" );
	deepEqual( Stem("reunirá"), "reun" );
	deepEqual( Stem("reunirán"), "reun" );
	deepEqual( Stem("reunirnos"), "reun" );
	deepEqual( Stem("reunirse"), "reun" );
	deepEqual( Stem("reuter"), "reut" );
	deepEqual( Stem("reuters"), "reuters" );
	deepEqual( Stem("reutilización"), "reutiliz" );
	deepEqual( Stem("revaloración"), "revalor" );
	deepEqual( Stem("revalorarlo"), "revalor" );
	deepEqual( Stem("revaluándose"), "revalu" );
	deepEqual( Stem("revancha"), "revanch" );
	deepEqual( Stem("revela"), "revel" );
	deepEqual( Stem("revelaba"), "revel" );
	deepEqual( Stem("revelaban"), "revel" );
	deepEqual( Stem("revelación"), "revel" );
	deepEqual( Stem("revelada"), "revel" );
	deepEqual( Stem("reveladas"), "revel" );
	deepEqual( Stem("revelado"), "revel" );
	deepEqual( Stem("revelador"), "revel" );
	deepEqual( Stem("reveladora"), "revel" );
	deepEqual( Stem("revelan"), "revel" );
	deepEqual( Stem("revelarla"), "revel" );
	deepEqual( Stem("revelaron"), "revel" );
	deepEqual( Stem("reveló"), "revel" );
	deepEqual( Stem("revendedores"), "revendedor" );
	deepEqual( Stem("reventa"), "revent" );
	deepEqual( Stem("reventado"), "revent" );
	deepEqual( Stem("reventadores"), "revent" );
	deepEqual( Stem("reventó"), "revent" );
	deepEqual( Stem("reventón"), "reventon" );
	deepEqual( Stem("reverencia"), "reverent" );
	deepEqual( Stem("reverencial"), "reverencial" );
	deepEqual( Stem("reverenciales"), "reverencial" );
	deepEqual( Stem("reverenciarlo"), "reverenci" );
	deepEqual( Stem("reverendo"), "reverend" );
	deepEqual( Stem("reversa"), "revers" );
	deepEqual( Stem("revertido"), "revert" );
	deepEqual( Stem("revertir"), "revert" );
	deepEqual( Stem("reveses"), "reves" );
	deepEqual( Stem("revierten"), "reviert" );
	deepEqual( Stem("revillagigedo"), "revillagiged" );
	deepEqual( Stem("revisado"), "revis" );
	deepEqual( Stem("revisados"), "revis" );
	deepEqual( Stem("revisan"), "revis" );
	deepEqual( Stem("revisando"), "revis" );
	deepEqual( Stem("revisar"), "revis" );
	deepEqual( Stem("revisará"), "revis" );
	deepEqual( Stem("revisaran"), "revis" );
	deepEqual( Stem("revisarán"), "revis" );
	deepEqual( Stem("revisarla"), "revis" );
	deepEqual( Stem("revisarlos"), "revis" );
	deepEqual( Stem("revisaron"), "revis" );
	deepEqual( Stem("revisarse"), "revis" );
	deepEqual( Stem("revise"), "revis" );
	deepEqual( Stem("revisen"), "revis" );
	deepEqual( Stem("revisión"), "revision" );
	deepEqual( Stem("revisiones"), "revision" );
	deepEqual( Stem("reviso"), "revis" );
	deepEqual( Stem("revista"), "revist" );
	deepEqual( Stem("revistas"), "revist" );
	deepEqual( Stem("revitalizar"), "revitaliz" );
	deepEqual( Stem("revivir"), "reviv" );
	deepEqual( Stem("revocar"), "revoc" );
	deepEqual( Stem("revocó"), "revoc" );
	deepEqual( Stem("revolcón"), "revolcon" );
	deepEqual( Stem("revolución"), "revolu" );
	deepEqual( Stem("revolucionaban"), "revolucion" );
	deepEqual( Stem("revolucionar"), "revolucion" );
	deepEqual( Stem("revolucionaria"), "revolucionari" );
	deepEqual( Stem("revolucionarias"), "revolucionari" );
	deepEqual( Stem("revolucionario"), "revolucionari" );
	deepEqual( Stem("revolucionarios"), "revolucionari" );
	deepEqual( Stem("revoluciones"), "revolu" );
	deepEqual( Stem("revolucionó"), "revolucion" );
	deepEqual( Stem("revolufia"), "revolufi" );
	deepEqual( Stem("revolver"), "revolv" );
	deepEqual( Stem("revólver"), "revolv" );
	deepEqual( Stem("revólveres"), "revolver" );
	deepEqual( Stem("revolvió"), "revolv" );
	deepEqual( Stem("revuelo"), "revuel" );
	deepEqual( Stem("revuelta"), "revuelt" );
	deepEqual( Stem("revuelto"), "revuelt" );
	deepEqual( Stem("revuelva"), "revuelv" );
	deepEqual( Stem("revuelvo"), "revuelv" );
	deepEqual( Stem("rey"), "rey" );
	deepEqual( Stem("reyes"), "rey" );
	deepEqual( Stem("reyhlander"), "reyhland" );
	deepEqual( Stem("reyna"), "reyn" );
	deepEqual( Stem("reynaldo"), "reynald" );
	deepEqual( Stem("reynard"), "reynard" );
	deepEqual( Stem("reynolds"), "reynolds" );
	deepEqual( Stem("reynosa"), "reynos" );
	deepEqual( Stem("reynoso"), "reynos" );
	deepEqual( Stem("reza"), "rez" );
	deepEqual( Stem("rezagada"), "rezag" );
	deepEqual( Stem("rezago"), "rezag" );
	deepEqual( Stem("rezagos"), "rezag" );
	deepEqual( Stem("rezará"), "rez" );
	deepEqual( Stem("rezaremos"), "rez" );
	deepEqual( Stem("rezarlo"), "rez" );
	deepEqual( Stem("rezarte"), "rezart" );
	deepEqual( Stem("rezo"), "rez" );
	deepEqual( Stem("rezonificación"), "rezonif" );
	deepEqual( Stem("rhon"), "rhon" );
	deepEqual( Stem("riachuelo"), "riachuel" );
	deepEqual( Stem("riar"), "riar" );
	deepEqual( Stem("riazor"), "riazor" );
	deepEqual( Stem("rib"), "rib" );
	deepEqual( Stem("ribadeneyra"), "ribadeneyr" );
	deepEqual( Stem("ribbentrop"), "ribbentrop" );
	deepEqual( Stem("riberas"), "riber" );
	deepEqual( Stem("ribereña"), "ribereñ" );
	deepEqual( Stem("ribereños"), "ribereñ" );
	deepEqual( Stem("rica"), "ric" );
	deepEqual( Stem("ricacho"), "ricach" );
	deepEqual( Stem("ricachón"), "ricachon" );
	deepEqual( Stem("ricardo"), "ricard" );
	deepEqual( Stem("ricas"), "ric" );
	deepEqual( Stem("richard"), "richard" );
	deepEqual( Stem("richards"), "richards" );
	deepEqual( Stem("richardson"), "richardson" );
	deepEqual( Stem("ricky"), "ricky" );
	deepEqual( Stem("rico"), "ric" );
	deepEqual( Stem("ricos"), "ric" );
	deepEqual( Stem("ridiculiza"), "ridiculiz" );
	deepEqual( Stem("ridiculización"), "ridiculiz" );
	deepEqual( Stem("ridiculizado"), "ridiculiz" );
	deepEqual( Stem("ridiculizan"), "ridiculiz" );
	deepEqual( Stem("ríe"), "rie" );
	deepEqual( Stem("riegas"), "rieg" );
	deepEqual( Stem("riego"), "rieg" );
	deepEqual( Stem("rieles"), "riel" );
	deepEqual( Stem("riendas"), "riend" );
	deepEqual( Stem("rieron"), "rieron" );
	deepEqual( Stem("ries"), "ries" );
	deepEqual( Stem("riesgo"), "riesg" );
	deepEqual( Stem("riesgos"), "riesg" );
	deepEqual( Stem("riesgosa"), "riesgos" );
	deepEqual( Stem("riesgosísimo"), "riesgosisim" );
	deepEqual( Stem("rifa"), "rif" );
	deepEqual( Stem("rifadas"), "rif" );
	deepEqual( Stem("rifar"), "rif" );
	deepEqual( Stem("rifas"), "rif" );
	deepEqual( Stem("rifkin"), "rifkin" );
	deepEqual( Stem("rige"), "rig" );
	deepEqual( Stem("rigen"), "rig" );
	deepEqual( Stem("rígidas"), "rig" );
	deepEqual( Stem("rigidez"), "rigidez" );
	deepEqual( Stem("rígidos"), "rig" );
	deepEqual( Stem("rigoberta"), "rigobert" );
	deepEqual( Stem("rigor"), "rigor" );
	deepEqual( Stem("rigurosa"), "rigur" );
	deepEqual( Stem("riguroso"), "rigur" );
	deepEqual( Stem("rigurosos"), "rigur" );
	deepEqual( Stem("rijan"), "rij" );
	deepEqual( Stem("rime"), "rim" );
	deepEqual( Stem("riña"), "riñ" );
	deepEqual( Stem("riñas"), "riñ" );
	deepEqual( Stem("rincón"), "rincon" );
	deepEqual( Stem("rinconada"), "rincon" );
	deepEqual( Stem("rinden"), "rind" );
	deepEqual( Stem("rindiendo"), "rind" );
	deepEqual( Stem("rindiera"), "rind" );
	deepEqual( Stem("rindieran"), "rind" );
	deepEqual( Stem("rindieron"), "rind" );
	deepEqual( Stem("rindió"), "rind" );
	deepEqual( Stem("riñen"), "riñ" );
	deepEqual( Stem("rines"), "rin" );
	deepEqual( Stem("ring"), "ring" );
	deepEqual( Stem("rinker"), "rink" );
	deepEqual( Stem("riñones"), "riñon" );
	deepEqual( Stem("rio"), "rio" );
	deepEqual( Stem("río"), "rio" );
	deepEqual( Stem("rió"), "rio" );
	deepEqual( Stem("riojas"), "rioj" );
	deepEqual( Stem("ríos"), "rios" );
	deepEqual( Stem("rippey"), "rippey" );
	deepEqual( Stem("riqueza"), "riquez" );
	deepEqual( Stem("riquezas"), "riquez" );
	deepEqual( Stem("risa"), "ris" );
	deepEqual( Stem("risas"), "ris" );
	deepEqual( Stem("risca"), "risc" );
	deepEqual( Stem("ríspido"), "risp" );
	deepEqual( Stem("ristra"), "ristr" );
	deepEqual( Stem("ristre"), "ristr" );
	deepEqual( Stem("rita"), "rit" );
	deepEqual( Stem("ritchie"), "ritchi" );
	deepEqual( Stem("riteaid"), "rite" );
	deepEqual( Stem("rítmica"), "ritmic" );
	deepEqual( Stem("rítmico"), "ritmic" );
	deepEqual( Stem("ritmo"), "ritm" );
	deepEqual( Stem("ritmos"), "ritm" );
	deepEqual( Stem("rito"), "rit" );
	deepEqual( Stem("ritual"), "ritual" );
	deepEqual( Stem("riva"), "riv" );
	deepEqual( Stem("rivadeneira"), "rivadeneir" );
	deepEqual( Stem("rival"), "rival" );
	deepEqual( Stem("rivales"), "rival" );
	deepEqual( Stem("rivapalacio"), "rivapalaci" );
	deepEqual( Stem("river"), "riv" );
	deepEqual( Stem("rivera"), "river" );
	deepEqual( Stem("rivero"), "river" );
	deepEqual( Stem("riverside"), "riversid" );
	deepEqual( Stem("riviello"), "riviell" );
	deepEqual( Stem("rizado"), "riz" );
	deepEqual( Stem("rizzo"), "rizz" );
	deepEqual( Stem("rkc"), "rkc" );
	deepEqual( Stem("rke"), "rke" );
	deepEqual( Stem("rkl"), "rkl" );
	deepEqual( Stem("road"), "road" );
	deepEqual( Stem("robada"), "rob" );
	deepEqual( Stem("robadas"), "rob" );
	deepEqual( Stem("robado"), "rob" );
	deepEqual( Stem("robados"), "rob" );
	deepEqual( Stem("roban"), "rob" );
	deepEqual( Stem("robar"), "rob" );
	deepEqual( Stem("robarle"), "rob" );
	deepEqual( Stem("robe"), "rob" );
	deepEqual( Stem("roben"), "rob" );
	deepEqual( Stem("robert"), "robert" );
	deepEqual( Stem("roberta"), "robert" );
	deepEqual( Stem("roberto"), "robert" );
	deepEqual( Stem("roberts"), "roberts" );
	deepEqual( Stem("roble"), "robl" );
	deepEqual( Stem("robledo"), "robled" );
	deepEqual( Stem("robles"), "robl" );
	deepEqual( Stem("robo"), "rob" );
	deepEqual( Stem("robó"), "rob" );
	deepEqual( Stem("robocops"), "robocops" );
	deepEqual( Stem("robos"), "rob" );
	deepEqual( Stem("robot"), "robot" );
	deepEqual( Stem("robotizar"), "robotiz" );
	deepEqual( Stem("robots"), "robots" );
	deepEqual( Stem("robusta"), "robust" );
	deepEqual( Stem("robustecer"), "robustec" );
	deepEqual( Stem("rocaetti"), "rocaetti" );
	deepEqual( Stem("rocard"), "rocard" );
	deepEqual( Stem("rocas"), "roc" );
	deepEqual( Stem("roce"), "roc" );
	deepEqual( Stem("roces"), "roc" );
	deepEqual( Stem("rocha"), "roch" );
	deepEqual( Stem("roche"), "roch" );
	deepEqual( Stem("rochester"), "rochest" );
	deepEqual( Stem("rocío"), "roci" );
	deepEqual( Stem("rock"), "rock" );
	deepEqual( Stem("rockanroleros"), "rockanroler" );
	deepEqual( Stem("rockeras"), "rocker" );
	deepEqual( Stem("rockport"), "rockport" );
	deepEqual( Stem("rocoso"), "rocos" );
	deepEqual( Stem("rocosos"), "rocos" );
	deepEqual( Stem("rod"), "rod" );
	deepEqual( Stem("rodado"), "rod" );
	deepEqual( Stem("rodaje"), "rodaj" );
	deepEqual( Stem("rodal"), "rodal" );
	deepEqual( Stem("rodarse"), "rod" );
	deepEqual( Stem("rodarte"), "rodart" );
	deepEqual( Stem("rodea"), "rode" );
	deepEqual( Stem("rodeaba"), "rod" );
	deepEqual( Stem("rodeado"), "rod" );
	deepEqual( Stem("rodeados"), "rod" );
	deepEqual( Stem("rodean"), "rod" );
	deepEqual( Stem("rodear"), "rod" );
	deepEqual( Stem("rodeará"), "rod" );
	deepEqual( Stem("rodearon"), "rod" );
	deepEqual( Stem("rodearse"), "rod" );
	deepEqual( Stem("rodela"), "rodel" );
	deepEqual( Stem("rodeo"), "rode" );
	deepEqual( Stem("rodeos"), "rode" );
	deepEqual( Stem("rodilla"), "rodill" );
	deepEqual( Stem("rodillas"), "rodill" );
	deepEqual( Stem("rodillera"), "rodiller" );
	deepEqual( Stem("rodion"), "rodion" );
	deepEqual( Stem("rodisonato"), "rodisonat" );
	deepEqual( Stem("rodney"), "rodney" );
	deepEqual( Stem("rodolfo"), "rodolf" );
	deepEqual( Stem("rodrigo"), "rodrig" );
	deepEqual( Stem("rodríguez"), "rodriguez" );
	deepEqual( Stem("roedor"), "roedor" );
	deepEqual( Stem("roedores"), "roedor" );
	deepEqual( Stem("roel"), "roel" );
	deepEqual( Stem("rogelio"), "rogeli" );
	deepEqual( Stem("roger"), "rog" );
	deepEqual( Stem("rogers"), "rogers" );
	deepEqual( Stem("rogó"), "rog" );
	deepEqual( Stem("rogozinski"), "rogozinski" );
	deepEqual( Stem("roja"), "roj" );
	deepEqual( Stem("rojas"), "roj" );
	deepEqual( Stem("rojiblanca"), "rojiblanc" );
	deepEqual( Stem("rojinegra"), "rojinegr" );
	deepEqual( Stem("rojo"), "roj" );
	deepEqual( Stem("rojos"), "roj" );
	deepEqual( Stem("rol"), "rol" );
	deepEqual( Stem("rolada"), "rol" );
	deepEqual( Stem("rolando"), "rol" );
	deepEqual( Stem("roll"), "roll" );
	deepEqual( Stem("rolling"), "rolling" );
	deepEqual( Stem("rollo"), "roll" );
	deepEqual( Stem("rolls"), "rolls" );
	deepEqual( Stem("rom"), "rom" );
	deepEqual( Stem("roma"), "rom" );
	deepEqual( Stem("román"), "roman" );
	deepEqual( Stem("romana"), "roman" );
	deepEqual( Stem("romance"), "romanc" );
	deepEqual( Stem("romances"), "romanc" );
	deepEqual( Stem("romano"), "roman" );
	deepEqual( Stem("románticas"), "romant" );
	deepEqual( Stem("romanticismo"), "romantic" );
	deepEqual( Stem("romanticonas"), "romanticon" );
	deepEqual( Stem("románticos"), "romant" );
	deepEqual( Stem("romeo"), "rome" );
	deepEqual( Stem("romero"), "romer" );
	deepEqual( Stem("romilio"), "romili" );
	deepEqual( Stem("romo"), "rom" );
	deepEqual( Stem("rompe"), "romp" );
	deepEqual( Stem("rompebrechas"), "rompebrech" );
	deepEqual( Stem("rompen"), "romp" );
	deepEqual( Stem("romper"), "romp" );
	deepEqual( Stem("romperá"), "romp" );
	deepEqual( Stem("romperian"), "romperi" );
	deepEqual( Stem("romperles"), "romp" );
	deepEqual( Stem("romperlo"), "romp" );
	deepEqual( Stem("rompevientos"), "rompevient" );
	deepEqual( Stem("rompiendo"), "romp" );
	deepEqual( Stem("rompieron"), "romp" );
	deepEqual( Stem("rompimiento"), "rompimient" );
	deepEqual( Stem("rompió"), "romp" );
	deepEqual( Stem("rómulo"), "romul" );
	deepEqual( Stem("ronald"), "ronald" );
	deepEqual( Stem("roncaba"), "ronc" );
	deepEqual( Stem("ronda"), "rond" );
	deepEqual( Stem("rondallas"), "rondall" );
	deepEqual( Stem("rondando"), "rond" );
	deepEqual( Stem("ronzón"), "ronzon" );
	deepEqual( Stem("roo"), "roo" );
	deepEqual( Stem("roosevelt"), "roosevelt" );
	deepEqual( Stem("ropa"), "rop" );
	deepEqual( Stem("ropajes"), "ropaj" );
	deepEqual( Stem("roque"), "roqu" );
	deepEqual( Stem("rosa"), "ros" );
	deepEqual( Stem("rosales"), "rosal" );
	deepEqual( Stem("rosalinda"), "rosalind" );
	deepEqual( Stem("rosario"), "rosari" );
	deepEqual( Stem("rosarios"), "rosari" );
	deepEqual( Stem("rosas"), "ros" );
	deepEqual( Stem("rosaura"), "rosaur" );
	deepEqual( Stem("rosellini"), "rosellini" );
	deepEqual( Stem("rosencof"), "rosencof" );
	deepEqual( Stem("rosendo"), "rosend" );
	deepEqual( Stem("roses"), "ros" );
	deepEqual( Stem("rosibel"), "rosibel" );
	deepEqual( Stem("rosilí"), "rosil" );
	deepEqual( Stem("ross"), "ross" );
	deepEqual( Stem("rossela"), "rossel" );
	deepEqual( Stem("rossi"), "rossi" );
	deepEqual( Stem("rossin"), "rossin" );
	deepEqual( Stem("rossini"), "rossini" );
	deepEqual( Stem("roster"), "rost" );
	deepEqual( Stem("rosto"), "rost" );
	deepEqual( Stem("rostro"), "rostr" );
	deepEqual( Stem("rostros"), "rostr" );
	deepEqual( Stem("rota"), "rot" );
	deepEqual( Stem("rotación"), "rotacion" );
	deepEqual( Stem("rotario"), "rotari" );
	deepEqual( Stem("rotarios"), "rotari" );
	deepEqual( Stem("rotativo"), "rotat" );
	deepEqual( Stem("rotativos"), "rotat" );
	deepEqual( Stem("rotemberg"), "rotemberg" );
	deepEqual( Stem("roto"), "rot" );
	deepEqual( Stem("rotonda"), "rotond" );
	deepEqual( Stem("rotter"), "rott" );
	deepEqual( Stem("rotuliano"), "rotulian" );
	deepEqual( Stem("rotundamente"), "rotund" );
	deepEqual( Stem("rotura"), "rotur" );
	deepEqual( Stem("round"), "round" );
	deepEqual( Stem("rounds"), "rounds" );
	deepEqual( Stem("rousseau"), "rousseau" );
	deepEqual( Stem("roy"), "roy" );
	deepEqual( Stem("royce"), "royc" );
	deepEqual( Stem("rsm"), "rsm" );
	deepEqual( Stem("rsqb"), "rsqb" );
	deepEqual( Stem("ru"), "ru" );
	deepEqual( Stem("ruandeses"), "ruandes" );
	deepEqual( Stem("rubén"), "ruben" );
	deepEqual( Stem("rubí"), "rub" );
	deepEqual( Stem("rubia"), "rubi" );
	deepEqual( Stem("rubiales"), "rubial" );
	deepEqual( Stem("rubiano"), "rubian" );
	deepEqual( Stem("rubio"), "rubi" );
	deepEqual( Stem("rubor"), "rubor" );
	deepEqual( Stem("ruborizándose"), "ruboriz" );
	deepEqual( Stem("rubro"), "rubr" );
	deepEqual( Stem("rubros"), "rubr" );
	deepEqual( Stem("ruco"), "ruc" );
	deepEqual( Stem("rudos"), "rud" );
	deepEqual( Stem("rudyard"), "rudyard" );
	deepEqual( Stem("rueda"), "rued" );
	deepEqual( Stem("ruedas"), "rued" );
	deepEqual( Stem("ruedo"), "rued" );
	deepEqual( Stem("ruega"), "rueg" );
	deepEqual( Stem("ruego"), "rueg" );
	deepEqual( Stem("ruelas"), "ruel" );
	deepEqual( Stem("ruffo"), "ruff" );
	deepEqual( Stem("rufino"), "rufin" );
	deepEqual( Stem("ruge"), "rug" );
	deepEqual( Stem("ruggeri"), "ruggeri" );
	deepEqual( Stem("rugido"), "rug" );
	deepEqual( Stem("rugir"), "rug" );
	deepEqual( Stem("ruido"), "ruid" );
	deepEqual( Stem("ruidosas"), "ruid" );
	deepEqual( Stem("ruina"), "ruin" );
	deepEqual( Stem("ruinas"), "ruin" );
	deepEqual( Stem("ruindades"), "ruindad" );
	deepEqual( Stem("ruisz"), "ruisz" );
	deepEqual( Stem("ruiz"), "ruiz" );
	deepEqual( Stem("ruíz"), "ruiz" );
	deepEqual( Stem("rul"), "rul" );
	deepEqual( Stem("rumania"), "rumani" );
	deepEqual( Stem("rumanos"), "ruman" );
	deepEqual( Stem("rumberas"), "rumber" );
	deepEqual( Stem("rumbo"), "rumb" );
	deepEqual( Stem("rumor"), "rumor" );
	deepEqual( Stem("rumores"), "rumor" );
	deepEqual( Stem("ruperto"), "rupert" );
	deepEqual( Stem("ruptura"), "ruptur" );
	deepEqual( Stem("rural"), "rural" );
	deepEqual( Stem("rurales"), "rural" );
	deepEqual( Stem("rusa"), "rus" );
	deepEqual( Stem("rusas"), "rus" );
	deepEqual( Stem("rusia"), "rusi" );
	deepEqual( Stem("ruslan"), "rusl" );
	deepEqual( Stem("ruso"), "rus" );
	deepEqual( Stem("rusos"), "rus" );
	deepEqual( Stem("rústica"), "rustic" );
	deepEqual( Stem("rústico"), "rustic" );
	deepEqual( Stem("rústicos"), "rustic" );
	deepEqual( Stem("ruta"), "rut" );
	deepEqual( Stem("rutas"), "rut" );
	deepEqual( Stem("ruteador"), "ruteador" );
	deepEqual( Stem("rutina"), "rutin" );
	deepEqual( Stem("rutinario"), "rutinari" );
	deepEqual( Stem("rutinas"), "rutin" );
	deepEqual( Stem("rutskoi"), "rutskoi" );
	deepEqual( Stem("ruvalcaba"), "ruvalc" );
	deepEqual( Stem("ruy"), "ruy" );
	deepEqual( Stem("s"), "s" );
	deepEqual( Stem("sábado"), "sab" );
	deepEqual( Stem("sábados"), "sab" );
	deepEqual( Stem("sabastian"), "sabasti" );
	deepEqual( Stem("sabatino"), "sabatin" );
	deepEqual( Stem("sabe"), "sab" );
	deepEqual( Stem("sabedores"), "sabedor" );
	deepEqual( Stem("sabemos"), "sab" );
	deepEqual( Stem("saben"), "sab" );
	deepEqual( Stem("saber"), "sab" );
	deepEqual( Stem("saberlo"), "sab" );
	deepEqual( Stem("saberse"), "sab" );
	deepEqual( Stem("sabes"), "sab" );
	deepEqual( Stem("sabia"), "sabi" );
	deepEqual( Stem("sabía"), "sab" );
	deepEqual( Stem("sabíamos"), "sab" );
	deepEqual( Stem("sabían"), "sab" );
	deepEqual( Stem("sabidas"), "sab" );
	deepEqual( Stem("sabido"), "sab" );
	deepEqual( Stem("sabiduría"), "sabidur" );
	deepEqual( Stem("sabiendas"), "sabiend" );
	deepEqual( Stem("sabina"), "sabin" );
	deepEqual( Stem("sabinas"), "sabin" );
	deepEqual( Stem("sabino"), "sabin" );
	deepEqual( Stem("sabio"), "sabi" );
	deepEqual( Stem("sabios"), "sabi" );
	deepEqual( Stem("sabor"), "sabor" );
	deepEqual( Stem("saboreando"), "sabor" );
	deepEqual( Stem("sabores"), "sabor" );
	deepEqual( Stem("saborit"), "saborit" );
	deepEqual( Stem("saborizantes"), "saboriz" );
	deepEqual( Stem("sabotaje"), "sabotaj" );
	deepEqual( Stem("sabrá"), "sabr" );
	deepEqual( Stem("sabrán"), "sabran" );
	deepEqual( Stem("sabremos"), "sabr" );
	deepEqual( Stem("sabrosa"), "sabros" );
	deepEqual( Stem("sabroso"), "sabros" );
	deepEqual( Stem("saca"), "sac" );
	deepEqual( Stem("sacada"), "sac" );
	deepEqual( Stem("sacadas"), "sac" );
	deepEqual( Stem("sacado"), "sac" );
	deepEqual( Stem("sacamos"), "sac" );
	deepEqual( Stem("sacando"), "sac" );
	deepEqual( Stem("sacar"), "sac" );
	deepEqual( Stem("sacara"), "sac" );
	deepEqual( Stem("sacaran"), "sac" );
	deepEqual( Stem("sacaremos"), "sac" );
	deepEqual( Stem("sacarla"), "sac" );
	deepEqual( Stem("sacarle"), "sac" );
	deepEqual( Stem("sacarles"), "sac" );
	deepEqual( Stem("sacarlo"), "sac" );
	deepEqual( Stem("sacarme"), "sac" );
	deepEqual( Stem("sacaron"), "sac" );
	deepEqual( Stem("sacerdocio"), "sacerdoci" );
	deepEqual( Stem("sacerdotal"), "sacerdotal" );
	deepEqual( Stem("sacerdotales"), "sacerdotal" );
	deepEqual( Stem("sacerdote"), "sacerdot" );
	deepEqual( Stem("sacerdotes"), "sacerdot" );
	deepEqual( Stem("saco"), "sac" );
	deepEqual( Stem("sacó"), "sac" );
	deepEqual( Stem("sacos"), "sac" );
	deepEqual( Stem("sacra"), "sacr" );
	deepEqual( Stem("sacramento"), "sacrament" );
	deepEqual( Stem("sacrificado"), "sacrific" );
	deepEqual( Stem("sacrificar"), "sacrific" );
	deepEqual( Stem("sacrificarlo"), "sacrific" );
	deepEqual( Stem("sacrificio"), "sacrifici" );
	deepEqual( Stem("sacrificios"), "sacrifici" );
	deepEqual( Stem("sacrificó"), "sacrific" );
	deepEqual( Stem("sacristán"), "sacristan" );
	deepEqual( Stem("sacristía"), "sacrist" );
	deepEqual( Stem("sacro"), "sacr" );
	deepEqual( Stem("sacs"), "sacs" );
	deepEqual( Stem("sacudida"), "sacud" );
	deepEqual( Stem("sacudimiento"), "sacud" );
	deepEqual( Stem("sada"), "sad" );
	deepEqual( Stem("sadam"), "sadam" );
	deepEqual( Stem("sadomasoquistas"), "sadomasoqu" );
	deepEqual( Stem("saenz"), "saenz" );
	deepEqual( Stem("sáenz"), "saenz" );
	deepEqual( Stem("saeta"), "saet" );
	deepEqual( Stem("sagrada"), "sagr" );
	deepEqual( Stem("sagradas"), "sagr" );
	deepEqual( Stem("sagrado"), "sagr" );
	deepEqual( Stem("sahuayo"), "sahuay" );
	deepEqual( Stem("sain"), "sain" );
	deepEqual( Stem("saint"), "saint" );
	deepEqual( Stem("sainz"), "sainz" );
	deepEqual( Stem("sáinz"), "sainz" );
	deepEqual( Stem("saínz"), "sainz" );
	deepEqual( Stem("sal"), "sal" );
	deepEqual( Stem("sala"), "sal" );
	deepEqual( Stem("salacio"), "salaci" );
	deepEqual( Stem("salada"), "sal" );
	deepEqual( Stem("salais"), "salais" );
	deepEqual( Stem("salamandria"), "salamandri" );
	deepEqual( Stem("salarial"), "salarial" );
	deepEqual( Stem("salariales"), "salarial" );
	deepEqual( Stem("salario"), "salari" );
	deepEqual( Stem("salarios"), "salari" );
	deepEqual( Stem("salas"), "sal" );
	deepEqual( Stem("salaz"), "salaz" );
	deepEqual( Stem("salazar"), "salaz" );
	deepEqual( Stem("saldaña"), "saldañ" );
	deepEqual( Stem("saldar"), "sald" );
	deepEqual( Stem("saldarán"), "sald" );
	deepEqual( Stem("saldívar"), "saldiv" );
	deepEqual( Stem("saldo"), "sald" );
	deepEqual( Stem("saldos"), "sald" );
	deepEqual( Stem("saldrá"), "saldr" );
	deepEqual( Stem("saldrán"), "saldran" );
	deepEqual( Stem("saldría"), "saldr" );
	deepEqual( Stem("sale"), "sal" );
	deepEqual( Stem("salen"), "sal" );
	deepEqual( Stem("salesianas"), "salesian" );
	deepEqual( Stem("salga"), "salg" );
	deepEqual( Stem("salgado"), "salg" );
	deepEqual( Stem("salgamos"), "salg" );
	deepEqual( Stem("salgan"), "salg" );
	deepEqual( Stem("salgo"), "salg" );
	deepEqual( Stem("salí"), "sal" );
	deepEqual( Stem("salía"), "sal" );
	deepEqual( Stem("salían"), "sal" );
	deepEqual( Stem("salida"), "sal" );
	deepEqual( Stem("salidas"), "sal" );
	deepEqual( Stem("salido"), "sal" );
	deepEqual( Stem("saliendo"), "sal" );
	deepEqual( Stem("saliente"), "salient" );
	deepEqual( Stem("saliera"), "sal" );
	deepEqual( Stem("salieran"), "sal" );
	deepEqual( Stem("salieron"), "sal" );
	deepEqual( Stem("salimos"), "sal" );
	deepEqual( Stem("salinas"), "salin" );
	deepEqual( Stem("salinismo"), "salin" );
	deepEqual( Stem("salinista"), "salin" );
	deepEqual( Stem("salió"), "sal" );
	deepEqual( Stem("salir"), "sal" );
	deepEqual( Stem("salirse"), "sal" );
	deepEqual( Stem("salmón"), "salmon" );
	deepEqual( Stem("salmones"), "salmon" );
	deepEqual( Stem("salmos"), "salm" );
	deepEqual( Stem("salomon"), "salomon" );
	deepEqual( Stem("salomón"), "salomon" );
	deepEqual( Stem("salomónica"), "salomon" );
	deepEqual( Stem("salomónico"), "salomon" );
	deepEqual( Stem("salón"), "salon" );
	deepEqual( Stem("salones"), "salon" );
	deepEqual( Stem("salpicadas"), "salpic" );
	deepEqual( Stem("salsa"), "sals" );
	deepEqual( Stem("salsas"), "sals" );
	deepEqual( Stem("salta"), "salt" );
	deepEqual( Stem("saltándose"), "salt" );
	deepEqual( Stem("saltaron"), "salt" );
	deepEqual( Stem("salte"), "salt" );
	deepEqual( Stem("saltillense"), "saltillens" );
	deepEqual( Stem("saltillenses"), "saltillens" );
	deepEqual( Stem("saltillo"), "saltill" );
	deepEqual( Stem("salto"), "salt" );
	deepEqual( Stem("saltó"), "salt" );
	deepEqual( Stem("salubridad"), "salubr" );
	deepEqual( Stem("salud"), "salud" );
	deepEqual( Stem("saludable"), "salud" );
	deepEqual( Stem("saludables"), "salud" );
	deepEqual( Stem("saludando"), "salud" );
	deepEqual( Stem("saludar"), "salud" );
	deepEqual( Stem("saludarle"), "salud" );
	deepEqual( Stem("saludarlo"), "salud" );
	deepEqual( Stem("saludaron"), "salud" );
	deepEqual( Stem("saludemos"), "salud" );
	deepEqual( Stem("saludo"), "salud" );
	deepEqual( Stem("saludó"), "salud" );
	deepEqual( Stem("saludos"), "salud" );
	deepEqual( Stem("salutación"), "salut" );
	deepEqual( Stem("salva"), "salv" );
	deepEqual( Stem("salvación"), "salvacion" );
	deepEqual( Stem("salvado"), "salv" );
	deepEqual( Stem("salvador"), "salvador" );
	deepEqual( Stem("salvadoreña"), "salvadoreñ" );
	deepEqual( Stem("salvadoreños"), "salvadoreñ" );
	deepEqual( Stem("salvados"), "salv" );
	deepEqual( Stem("salvaguardas"), "salvaguard" );
	deepEqual( Stem("salvaje"), "salvaj" );
	deepEqual( Stem("salvamentos"), "salvament" );
	deepEqual( Stem("salvar"), "salv" );
	deepEqual( Stem("salvara"), "salv" );
	deepEqual( Stem("salvarle"), "salv" );
	deepEqual( Stem("salvarse"), "salv" );
	deepEqual( Stem("salve"), "salv" );
	deepEqual( Stem("salvedades"), "salvedad" );
	deepEqual( Stem("salvia"), "salvi" );
	deepEqual( Stem("salvo"), "salv" );
	deepEqual( Stem("salvó"), "salv" );
	deepEqual( Stem("sam"), "sam" );
	deepEqual( Stem("samaniego"), "samanieg" );
	deepEqual( Stem("samoa"), "samo" );
	deepEqual( Stem("sampetrinas"), "sampetrin" );
	deepEqual( Stem("sampetrino"), "sampetrin" );
	deepEqual( Stem("samuel"), "samuel" );
	deepEqual( Stem("samuelito"), "samuelit" );
	deepEqual( Stem("san"), "san" );
	deepEqual( Stem("sana"), "san" );
	deepEqual( Stem("sanchez"), "sanchez" );
	deepEqual( Stem("sánchez"), "sanchez" );
	deepEqual( Stem("sancho"), "sanch" );
	deepEqual( Stem("sanción"), "sancion" );
	deepEqual( Stem("sancionados"), "sancion" );
	deepEqual( Stem("sancionan"), "sancion" );
	deepEqual( Stem("sancionaría"), "sancion" );
	deepEqual( Stem("sancionarlo"), "sancion" );
	deepEqual( Stem("sancionarlos"), "sancion" );
	deepEqual( Stem("sancionaron"), "sancion" );
	deepEqual( Stem("sanciones"), "sancion" );
	deepEqual( Stem("sandalio"), "sandali" );
	deepEqual( Stem("sandinista"), "sandin" );
	deepEqual( Stem("sandoval"), "sandoval" );
	deepEqual( Stem("sandra"), "sandr" );
	deepEqual( Stem("sandrine"), "sandrin" );
	deepEqual( Stem("sandwich"), "sandwich" );
	deepEqual( Stem("saneado"), "san" );
	deepEqual( Stem("saneamiento"), "saneamient" );
	deepEqual( Stem("sanear"), "san" );
	deepEqual( Stem("saneara"), "san" );
	deepEqual( Stem("sanearlas"), "san" );
	deepEqual( Stem("sangrados"), "sangr" );
	deepEqual( Stem("sangrar"), "sangr" );
	deepEqual( Stem("sangre"), "sangr" );
	deepEqual( Stem("sangría"), "sangr" );
	deepEqual( Stem("sangrientas"), "sangrient" );
	deepEqual( Stem("sangriento"), "sangrient" );
	deepEqual( Stem("sanguinario"), "sanguinari" );
	deepEqual( Stem("sanidad"), "sanid" );
	deepEqual( Stem("sanidades"), "sanidad" );
	deepEqual( Stem("sanitaria"), "sanitari" );
	deepEqual( Stem("sanitario"), "sanitari" );
	deepEqual( Stem("sanitarios"), "sanitari" );
	deepEqual( Stem("sanjuana"), "sanjuan" );
	deepEqual( Stem("sano"), "san" );
	deepEqual( Stem("sansores"), "sansor" );
	deepEqual( Stem("santa"), "sant" );
	deepEqual( Stem("santana"), "santan" );
	deepEqual( Stem("santiago"), "santiag" );
	deepEqual( Stem("santidad"), "santid" );
	deepEqual( Stem("santiesteban"), "santiesteb" );
	deepEqual( Stem("santillán"), "santillan" );
	deepEqual( Stem("santísimo"), "santisim" );
	deepEqual( Stem("santiso"), "santis" );
	deepEqual( Stem("santistas"), "santist" );
	deepEqual( Stem("santo"), "sant" );
	deepEqual( Stem("santos"), "sant" );
	deepEqual( Stem("santuario"), "santuari" );
	deepEqual( Stem("santurce"), "santurc" );
	deepEqual( Stem("sao"), "sao" );
	deepEqual( Stem("sapién"), "sapien" );
	deepEqual( Stem("sapitos"), "sapit" );
	deepEqual( Stem("sapo"), "sap" );
	deepEqual( Stem("saqué"), "saqu" );
	deepEqual( Stem("saqueadas"), "saqu" );
	deepEqual( Stem("saquear"), "saqu" );
	deepEqual( Stem("saqueo"), "saque" );
	deepEqual( Stem("saqueos"), "saque" );
	deepEqual( Stem("sar"), "sar" );
	deepEqual( Stem("sarah"), "sarah" );
	deepEqual( Stem("sarajevo"), "sarajev" );
	deepEqual( Stem("sarcástica"), "sarcast" );
	deepEqual( Stem("sargentos"), "sargent" );
	deepEqual( Stem("sarh"), "sarh" );
	deepEqual( Stem("sartenes"), "sarten" );
	deepEqual( Stem("sastre"), "sastr" );
	deepEqual( Stem("sat"), "sat" );
	deepEqual( Stem("satanás"), "satanas" );
	deepEqual( Stem("satélite"), "satelit" );
	deepEqual( Stem("satelitel"), "satelitel" );
	deepEqual( Stem("satélites"), "satelit" );
	deepEqual( Stem("satín"), "satin" );
	deepEqual( Stem("satírica"), "satir" );
	deepEqual( Stem("satisfacción"), "satisfaccion" );
	deepEqual( Stem("satisfacciones"), "satisfaccion" );
	deepEqual( Stem("satisface"), "satisfac" );
	deepEqual( Stem("satisfacer"), "satisfac" );
	deepEqual( Stem("satisfactores"), "satisfactor" );
	deepEqual( Stem("satisfactoria"), "satisfactori" );
	deepEqual( Stem("satisfactoriamente"), "satisfactori" );
	deepEqual( Stem("satisfactorias"), "satisfactori" );
	deepEqual( Stem("satisfactorio"), "satisfactori" );
	deepEqual( Stem("satisfagan"), "satisfag" );
	deepEqual( Stem("satisfecho"), "satisfech" );
	deepEqual( Stem("sato"), "sat" );
	deepEqual( Stem("saturación"), "satur" );
	deepEqual( Stem("saturada"), "satur" );
	deepEqual( Stem("saturadas"), "satur" );
	deepEqual( Stem("saturado"), "satur" );
	deepEqual( Stem("saturados"), "satur" );
	deepEqual( Stem("saturó"), "satur" );
	deepEqual( Stem("sauceda"), "sauced" );
	deepEqual( Stem("saucedo"), "sauced" );
	deepEqual( Stem("sauco"), "sauc" );
	deepEqual( Stem("saúl"), "saul" );
	deepEqual( Stem("saunders"), "saunders" );
	deepEqual( Stem("sauzal"), "sauzal" );
	deepEqual( Stem("savimbi"), "savimbi" );
	deepEqual( Stem("savotino"), "savotin" );
	deepEqual( Stem("savoy"), "savoy" );
	deepEqual( Stem("savr"), "savr" );
	deepEqual( Stem("saxe"), "sax" );
	deepEqual( Stem("saxofón"), "saxofon" );
	deepEqual( Stem("saxofonista"), "saxofon" );
	deepEqual( Stem("saya"), "say" );
	deepEqual( Stem("sazón"), "sazon" );
	deepEqual( Stem("sc"), "sc" );
	deepEqual( Stem("scafadi"), "scafadi" );
	deepEqual( Stem("scalia"), "scali" );
	deepEqual( Stem("scatasta"), "scatast" );
	deepEqual( Stem("scheider"), "scheid" );
	deepEqual( Stem("schlesinghaus"), "schlesinghaus" );
	deepEqual( Stem("schmal"), "schmal" );
	deepEqual( Stem("schmall"), "schmall" );
	deepEqual( Stem("schoenstat"), "schoenstat" );
	deepEqual( Stem("schoenstatt"), "schoenstatt" );
	deepEqual( Stem("schooll"), "schooll" );
	deepEqual( Stem("schools"), "schools" );
	deepEqual( Stem("schopenhahuer"), "schopenhahu" );
	deepEqual( Stem("science"), "scienc" );
	deepEqual( Stem("scott"), "scott" );
	deepEqual( Stem("scout"), "scout" );
	deepEqual( Stem("scrooge"), "scroog" );
	deepEqual( Stem("sct"), "sct" );
	deepEqual( Stem("sculley"), "sculley" );
	deepEqual( Stem("se"), "se" );
	deepEqual( Stem("sé"), "se" );
	deepEqual( Stem("sea"), "sea" );
	deepEqual( Stem("seamos"), "seam" );
	deepEqual( Stem("sean"), "sean" );
	deepEqual( Stem("seas"), "seas" );
	deepEqual( Stem("seattle"), "seattl" );
	deepEqual( Stem("sebastian"), "sebasti" );
	deepEqual( Stem("sebastián"), "sebastian" );
	deepEqual( Stem("seca"), "sec" );
	deepEqual( Stem("secaba"), "sec" );
	deepEqual( Stem("secadora"), "secador" );
	deepEqual( Stem("secas"), "sec" );
	deepEqual( Stem("sección"), "seccion" );
	deepEqual( Stem("seccional"), "seccional" );
	deepEqual( Stem("seccionales"), "seccional" );
	deepEqual( Stem("seco"), "sec" );
	deepEqual( Stem("secofi"), "secofi" );
	deepEqual( Stem("secogef"), "secogef" );
	deepEqual( Stem("secos"), "sec" );
	deepEqual( Stem("secreta"), "secret" );
	deepEqual( Stem("secretaria"), "secretari" );
	deepEqual( Stem("secretaría"), "secret" );
	deepEqual( Stem("secretarías"), "secret" );
	deepEqual( Stem("secretario"), "secretari" );
	deepEqual( Stem("secretarios"), "secretari" );
	deepEqual( Stem("secretas"), "secret" );
	deepEqual( Stem("secreto"), "secret" );
	deepEqual( Stem("secretos"), "secret" );
	deepEqual( Stem("sectas"), "sect" );
	deepEqual( Stem("sector"), "sector" );
	deepEqual( Stem("sectores"), "sector" );
	deepEqual( Stem("sectoriales"), "sectorial" );
	deepEqual( Stem("secuela"), "secuel" );
	deepEqual( Stem("secuelas"), "secuel" );
	deepEqual( Stem("secuencial"), "secuencial" );
	deepEqual( Stem("secuestrada"), "secuestr" );
	deepEqual( Stem("secuestradas"), "secuestr" );
	deepEqual( Stem("secuestrado"), "secuestr" );
	deepEqual( Stem("secuestrador"), "secuestr" );
	deepEqual( Stem("secuestradores"), "secuestr" );
	deepEqual( Stem("secuestro"), "secuestr" );
	deepEqual( Stem("secuestró"), "secuestr" );
	deepEqual( Stem("secuestros"), "secuestr" );
	deepEqual( Stem("secular"), "secul" );
	deepEqual( Stem("secundada"), "secund" );
	deepEqual( Stem("secundados"), "secund" );
	deepEqual( Stem("secundaria"), "secundari" );
	deepEqual( Stem("secundarias"), "secundari" );
	deepEqual( Stem("secundario"), "secundari" );
	deepEqual( Stem("secundarios"), "secundari" );
	deepEqual( Stem("secundaron"), "secund" );
	deepEqual( Stem("securities"), "securiti" );
	deepEqual( Stem("sed"), "sed" );
	deepEqual( Stem("seda"), "sed" );
	deepEqual( Stem("sedán"), "sedan" );
	deepEqual( Stem("sedanes"), "sedan" );
	deepEqual( Stem("sedante"), "sedant" );
	deepEqual( Stem("sede"), "sed" );
	deepEqual( Stem("sedesol"), "sedesol" );
	deepEqual( Stem("sedientos"), "sedient" );
	deepEqual( Stem("sedona"), "sedon" );
	deepEqual( Stem("seducción"), "seduccion" );
	deepEqual( Stem("seducir"), "seduc" );
	deepEqual( Stem("seductoras"), "seductor" );
	deepEqual( Stem("sedujo"), "seduj" );
	deepEqual( Stem("seduop"), "seduop" );
	deepEqual( Stem("seelene"), "seelen" );
	deepEqual( Stem("segmentada"), "segment" );
	deepEqual( Stem("segmento"), "segment" );
	deepEqual( Stem("segmentos"), "segment" );
	deepEqual( Stem("segovia"), "segovi" );
	deepEqual( Stem("segueta"), "seguet" );
	deepEqual( Stem("seguí"), "segu" );
	deepEqual( Stem("seguía"), "segu" );
	deepEqual( Stem("seguían"), "segu" );
	deepEqual( Stem("seguida"), "segu" );
	deepEqual( Stem("seguido"), "segu" );
	deepEqual( Stem("seguidora"), "seguidor" );
	deepEqual( Stem("seguidores"), "seguidor" );
	deepEqual( Stem("seguidos"), "segu" );
	deepEqual( Stem("seguimiento"), "seguimient" );
	deepEqual( Stem("seguimos"), "segu" );
	deepEqual( Stem("seguir"), "segu" );
	deepEqual( Stem("seguirá"), "segu" );
	deepEqual( Stem("seguirán"), "segu" );
	deepEqual( Stem("seguiré"), "segu" );
	deepEqual( Stem("seguiremos"), "segu" );
	deepEqual( Stem("seguiría"), "segu" );
	deepEqual( Stem("seguirlas"), "segu" );
	deepEqual( Stem("seguirles"), "segu" );
	deepEqual( Stem("seguirse"), "segu" );
	deepEqual( Stem("según"), "segun" );
	deepEqual( Stem("segunda"), "segund" );
	deepEqual( Stem("segundas"), "segund" );
	deepEqual( Stem("segundo"), "segund" );
	deepEqual( Stem("segundones"), "segundon" );
	deepEqual( Stem("segundos"), "segund" );
	deepEqual( Stem("segura"), "segur" );
	deepEqual( Stem("seguramente"), "segur" );
	deepEqual( Stem("seguras"), "segur" );
	deepEqual( Stem("seguri"), "seguri" );
	deepEqual( Stem("seguridad"), "segur" );
	deepEqual( Stem("seguro"), "segur" );
	deepEqual( Stem("seguros"), "segur" );
	deepEqual( Stem("seguy"), "seguy" );
	deepEqual( Stem("seis"), "seis" );
	deepEqual( Stem("seiyu"), "seiyu" );
	deepEqual( Stem("seko"), "sek" );
	deepEqual( Stem("selección"), "seleccion" );
	deepEqual( Stem("seleccionada"), "seleccion" );
	deepEqual( Stem("seleccionadas"), "seleccion" );
	deepEqual( Stem("seleccionado"), "seleccion" );
	deepEqual( Stem("seleccionados"), "seleccion" );
	deepEqual( Stem("seleccionar"), "seleccion" );
	deepEqual( Stem("seleccionarán"), "seleccion" );
	deepEqual( Stem("selecciones"), "seleccion" );
	deepEqual( Stem("selectivo"), "select" );
	deepEqual( Stem("selecto"), "select" );
	deepEqual( Stem("sellada"), "sell" );
	deepEqual( Stem("sellar"), "sell" );
	deepEqual( Stem("seller"), "sell" );
	deepEqual( Stem("sello"), "sell" );
	deepEqual( Stem("selva"), "selv" );
	deepEqual( Stem("selvas"), "selv" );
	deepEqual( Stem("semáforos"), "semafor" );
	deepEqual( Stem("semana"), "seman" );
	deepEqual( Stem("semanal"), "semanal" );
	deepEqual( Stem("semanales"), "semanal" );
	deepEqual( Stem("semanalmente"), "semanal" );
	deepEqual( Stem("semanario"), "semanari" );
	deepEqual( Stem("semanas"), "seman" );
	deepEqual( Stem("semblantes"), "semblant" );
	deepEqual( Stem("sembraban"), "sembr" );
	deepEqual( Stem("sembrada"), "sembr" );
	deepEqual( Stem("sembradío"), "sembradi" );
	deepEqual( Stem("sembradíos"), "sembradi" );
	deepEqual( Stem("sembradores"), "sembrador" );
	deepEqual( Stem("sembrar"), "sembr" );
	deepEqual( Stem("sembremos"), "sembr" );
	deepEqual( Stem("semejante"), "semej" );
	deepEqual( Stem("semejantes"), "semej" );
	deepEqual( Stem("semejanza"), "semej" );
	deepEqual( Stem("semejanzas"), "semej" );
	deepEqual( Stem("semen"), "sem" );
	deepEqual( Stem("semental"), "semental" );
	deepEqual( Stem("semestral"), "semestral" );
	deepEqual( Stem("semestrales"), "semestral" );
	deepEqual( Stem("semestre"), "semestr" );
	deepEqual( Stem("semestres"), "semestr" );
	deepEqual( Stem("semi"), "semi" );
	deepEqual( Stem("semiautomática"), "semiautomat" );
	deepEqual( Stem("semicerrados"), "semicerr" );
	deepEqual( Stem("semidesértica"), "semidesert" );
	deepEqual( Stem("semidíos"), "semidi" );
	deepEqual( Stem("semifinal"), "semifinal" );
	deepEqual( Stem("semifinales"), "semifinal" );
	deepEqual( Stem("semifinalistas"), "semifinal" );
	deepEqual( Stem("semilla"), "semill" );
	deepEqual( Stem("semillas"), "semill" );
	deepEqual( Stem("seminal"), "seminal" );
	deepEqual( Stem("seminario"), "seminari" );
	deepEqual( Stem("seminarios"), "seminari" );
	deepEqual( Stem("seminaristas"), "seminar" );
	deepEqual( Stem("semioscuras"), "semioscur" );
	deepEqual( Stem("semipreciosa"), "semipreci" );
	deepEqual( Stem("semivacíos"), "semivaci" );
	deepEqual( Stem("seña"), "señ" );
	deepEqual( Stem("senado"), "sen" );
	deepEqual( Stem("senador"), "senador" );
	deepEqual( Stem("senadora"), "senador" );
	deepEqual( Stem("senadores"), "senador" );
	deepEqual( Stem("señal"), "señal" );
	deepEqual( Stem("señala"), "señal" );
	deepEqual( Stem("señalaban"), "señal" );
	deepEqual( Stem("señaladas"), "señal" );
	deepEqual( Stem("señalado"), "señal" );
	deepEqual( Stem("señalamiento"), "señal" );
	deepEqual( Stem("señalamientos"), "señal" );
	deepEqual( Stem("señalamos"), "señal" );
	deepEqual( Stem("señalan"), "señal" );
	deepEqual( Stem("señalar"), "señal" );
	deepEqual( Stem("señalarla"), "señal" );
	deepEqual( Stem("señalaron"), "señal" );
	deepEqual( Stem("señalarse"), "señal" );
	deepEqual( Stem("señalen"), "señal" );
	deepEqual( Stem("señales"), "señal" );
	deepEqual( Stem("señalo"), "señal" );
	deepEqual( Stem("señaló"), "señal" );
	deepEqual( Stem("señas"), "señ" );
	deepEqual( Stem("sencilla"), "sencill" );
	deepEqual( Stem("sencillamente"), "sencill" );
	deepEqual( Stem("sencillas"), "sencill" );
	deepEqual( Stem("sencillez"), "sencillez" );
	deepEqual( Stem("sencillo"), "sencill" );
	deepEqual( Stem("sencillos"), "sencill" );
	deepEqual( Stem("sendas"), "send" );
	deepEqual( Stem("senderista"), "sender" );
	deepEqual( Stem("senderistas"), "sender" );
	deepEqual( Stem("sendero"), "sender" );
	deepEqual( Stem("sendos"), "send" );
	deepEqual( Stem("seneam"), "seneam" );
	deepEqual( Stem("seno"), "sen" );
	deepEqual( Stem("señor"), "señor" );
	deepEqual( Stem("señora"), "señor" );
	deepEqual( Stem("señoras"), "señor" );
	deepEqual( Stem("señores"), "señor" );
	deepEqual( Stem("señoría"), "señor" );
	deepEqual( Stem("señorita"), "señorit" );
	deepEqual( Stem("senos"), "sen" );
	deepEqual( Stem("sensación"), "sensacion" );
	deepEqual( Stem("sensacionalismo"), "sensacional" );
	deepEqual( Stem("sensacionalista"), "sensacional" );
	deepEqual( Stem("sensaciones"), "sensacion" );
	deepEqual( Stem("sensata"), "sensat" );
	deepEqual( Stem("sensatas"), "sensat" );
	deepEqual( Stem("sensibilidad"), "sensibil" );
	deepEqual( Stem("sensibilidades"), "sensibil" );
	deepEqual( Stem("sensibilizar"), "sensibiliz" );
	deepEqual( Stem("sensible"), "sensibl" );
	deepEqual( Stem("sensiblemente"), "sensibl" );
	deepEqual( Stem("sensibles"), "sensibl" );
	deepEqual( Stem("sensores"), "sensor" );
	deepEqual( Stem("sensual"), "sensual" );
	deepEqual( Stem("sensualidad"), "sensual" );
	deepEqual( Stem("sentadas"), "sent" );
	deepEqual( Stem("sentado"), "sent" );
	deepEqual( Stem("sentados"), "sent" );
	deepEqual( Stem("sentamos"), "sent" );
	deepEqual( Stem("sentando"), "sent" );
	deepEqual( Stem("sentanes"), "sentan" );
	deepEqual( Stem("sentar"), "sent" );
	deepEqual( Stem("sentaran"), "sent" );
	deepEqual( Stem("sentarían"), "sent" );
	deepEqual( Stem("sentaron"), "sent" );
	deepEqual( Stem("sentarse"), "sent" );
	deepEqual( Stem("sentencia"), "sentenci" );
	deepEqual( Stem("sentenciada"), "sentenci" );
	deepEqual( Stem("sentenciado"), "sentenci" );
	deepEqual( Stem("sentenciados"), "sentenci" );
	deepEqual( Stem("sentenció"), "sentenc" );
	deepEqual( Stem("sentí"), "sent" );
	deepEqual( Stem("sentía"), "sent" );
	deepEqual( Stem("sentían"), "sent" );
	deepEqual( Stem("sentido"), "sent" );
	deepEqual( Stem("sentimental"), "sentimental" );
	deepEqual( Stem("sentimiento"), "sentimient" );
	deepEqual( Stem("sentimientos"), "sentimient" );
	deepEqual( Stem("sentimos"), "sent" );
	deepEqual( Stem("sentir"), "sent" );
	deepEqual( Stem("sentiría"), "sent" );
	deepEqual( Stem("sentirse"), "sent" );
	deepEqual( Stem("sentó"), "sent" );
	deepEqual( Stem("sep"), "sep" );
	deepEqual( Stem("sepa"), "sep" );
	deepEqual( Stem("sepamos"), "sep" );
	deepEqual( Stem("sepan"), "sep" );
	deepEqual( Stem("separa"), "sep" );
	deepEqual( Stem("separación"), "separ" );
	deepEqual( Stem("separaciones"), "separ" );
	deepEqual( Stem("separada"), "separ" );
	deepEqual( Stem("separadas"), "separ" );
	deepEqual( Stem("separado"), "separ" );
	deepEqual( Stem("separador"), "separ" );
	deepEqual( Stem("separados"), "separ" );
	deepEqual( Stem("separar"), "separ" );
	deepEqual( Stem("separará"), "separ" );
	deepEqual( Stem("separarán"), "separ" );
	deepEqual( Stem("separarlos"), "separ" );
	deepEqual( Stem("separaron"), "separ" );
	deepEqual( Stem("separarse"), "separ" );
	deepEqual( Stem("separe"), "separ" );
	deepEqual( Stem("separen"), "separ" );
	deepEqual( Stem("sepelio"), "sepeli" );
	deepEqual( Stem("sépticas"), "septic" );
	deepEqual( Stem("septiembre"), "septiembr" );
	deepEqual( Stem("séptima"), "septim" );
	deepEqual( Stem("séptimo"), "septim" );
	deepEqual( Stem("sepultado"), "sepult" );
	deepEqual( Stem("sepultan"), "sepult" );
	deepEqual( Stem("sepultó"), "sepult" );
	deepEqual( Stem("sepúlveda"), "sepulved" );
	deepEqual( Stem("séquito"), "sequit" );
	deepEqual( Stem("ser"), "ser" );
	deepEqual( Stem("sera"), "ser" );
	deepEqual( Stem("será"), "ser" );
	deepEqual( Stem("serán"), "seran" );
	deepEqual( Stem("serbia"), "serbi" );
	deepEqual( Stem("serbio"), "serbi" );
	deepEqual( Stem("serbios"), "serbi" );
	deepEqual( Stem("seremos"), "ser" );
	deepEqual( Stem("serena"), "seren" );
	deepEqual( Stem("serenata"), "serenat" );
	deepEqual( Stem("serenidad"), "seren" );
	deepEqual( Stem("seres"), "ser" );
	deepEqual( Stem("serfin"), "serfin" );
	deepEqual( Stem("serfín"), "serfin" );
	deepEqual( Stem("sergei"), "sergei" );
	deepEqual( Stem("sergi"), "sergi" );
	deepEqual( Stem("sergio"), "sergi" );
	deepEqual( Stem("seria"), "seri" );
	deepEqual( Stem("sería"), "ser" );
	deepEqual( Stem("serial"), "serial" );
	deepEqual( Stem("seriamente"), "seri" );
	deepEqual( Stem("seríamos"), "ser" );
	deepEqual( Stem("serían"), "ser" );
	deepEqual( Stem("serias"), "seri" );
	deepEqual( Stem("serie"), "seri" );
	deepEqual( Stem("seriedad"), "seried" );
	deepEqual( Stem("series"), "seri" );
	deepEqual( Stem("serio"), "seri" );
	deepEqual( Stem("serios"), "seri" );
	deepEqual( Stem("serlo"), "serl" );
	deepEqual( Stem("sermón"), "sermon" );
	deepEqual( Stem("sermonearlos"), "sermon" );
	deepEqual( Stem("serna"), "sern" );
	deepEqual( Stem("serpentinero"), "serpentiner" );
	deepEqual( Stem("serpiente"), "serpient" );
	deepEqual( Stem("serra"), "serr" );
	deepEqual( Stem("serrano"), "serran" );
	deepEqual( Stem("servia"), "servi" );
	deepEqual( Stem("service"), "servic" );
	deepEqual( Stem("servicial"), "servicial" );
	deepEqual( Stem("servicio"), "servici" );
	deepEqual( Stem("servicios"), "servici" );
	deepEqual( Stem("servido"), "serv" );
	deepEqual( Stem("servidor"), "servidor" );
	deepEqual( Stem("servidores"), "servidor" );
	deepEqual( Stem("servidumbre"), "servidumbr" );
	deepEqual( Stem("serviles"), "servil" );
	deepEqual( Stem("servilleta"), "servillet" );
	deepEqual( Stem("servimos"), "serv" );
	deepEqual( Stem("servín"), "servin" );
	deepEqual( Stem("servios"), "servi" );
	deepEqual( Stem("servir"), "serv" );
	deepEqual( Stem("servirá"), "serv" );
	deepEqual( Stem("servirán"), "serv" );
	deepEqual( Stem("serviría"), "serv" );
	deepEqual( Stem("servirnos"), "serv" );
	deepEqual( Stem("sese"), "ses" );
	deepEqual( Stem("sesentas"), "sesent" );
	deepEqual( Stem("sesgo"), "sesg" );
	deepEqual( Stem("sesión"), "sesion" );
	deepEqual( Stem("sesiones"), "sesion" );
	deepEqual( Stem("sesos"), "ses" );
	deepEqual( Stem("set"), "set" );
	deepEqual( Stem("setentas"), "setent" );
	deepEqual( Stem("sets"), "sets" );
	deepEqual( Stem("seudónimo"), "seudonim" );
	deepEqual( Stem("seul"), "seul" );
	deepEqual( Stem("seúl"), "seul" );
	deepEqual( Stem("severa"), "sever" );
	deepEqual( Stem("severamente"), "sever" );
	deepEqual( Stem("severas"), "sever" );
	deepEqual( Stem("severo"), "sever" );
	deepEqual( Stem("severos"), "sever" );
	deepEqual( Stem("sevilla"), "sevill" );
	deepEqual( Stem("sexenio"), "sexeni" );
	deepEqual( Stem("sexenios"), "sexeni" );
	deepEqual( Stem("sexista"), "sexist" );
	deepEqual( Stem("sexo"), "sex" );
	deepEqual( Stem("sexopatía"), "sexopat" );
	deepEqual( Stem("sexos"), "sex" );
	deepEqual( Stem("sexta"), "sext" );
	deepEqual( Stem("sextetas"), "sextet" );
	deepEqual( Stem("sexto"), "sext" );
	deepEqual( Stem("sexual"), "sexual" );
	deepEqual( Stem("sexuales"), "sexual" );
	deepEqual( Stem("sexualidad"), "sexual" );
	deepEqual( Stem("sexualmente"), "sexual" );
	deepEqual( Stem("sexy"), "sexy" );
	deepEqual( Stem("sexys"), "sexys" );
	deepEqual( Stem("sfara"), "sfar" );
	deepEqual( Stem("sgpv"), "sgpv" );
	deepEqual( Stem("shadow"), "shadow" );
	deepEqual( Stem("shannon"), "shannon" );
	deepEqual( Stem("shaw"), "shaw" );
	deepEqual( Stem("shcp"), "shcp" );
	deepEqual( Stem("sheehy"), "sheehy" );
	deepEqual( Stem("sheila"), "sheil" );
	deepEqual( Stem("shepard"), "shepard" );
	deepEqual( Stem("sherel"), "sherel" );
	deepEqual( Stem("sheriff"), "sheriff" );
	deepEqual( Stem("sherman"), "sherm" );
	deepEqual( Stem("sherrit"), "sherrit" );
	deepEqual( Stem("shibata"), "shibat" );
	deepEqual( Stem("shikang"), "shikang" );
	deepEqual( Stem("shimizu"), "shimizu" );
	deepEqual( Stem("shorts"), "shorts" );
	deepEqual( Stem("show"), "show" );
	deepEqual( Stem("shows"), "shows" );
	deepEqual( Stem("showtime"), "showtim" );
	deepEqual( Stem("shrine"), "shrin" );
	deepEqual( Stem("si"), "si" );
	deepEqual( Stem("sí"), "si" );
	deepEqual( Stem("siberia"), "siberi" );
	deepEqual( Stem("siberiana"), "siberian" );
	deepEqual( Stem("sica"), "sic" );
	deepEqual( Stem("siclo"), "sicl" );
	deepEqual( Stem("siclos"), "sicl" );
	deepEqual( Stem("sicológica"), "sicolog" );
	deepEqual( Stem("sida"), "sid" );
	deepEqual( Stem("sidente"), "sident" );
	deepEqual( Stem("siderúrgicas"), "siderurg" );
	deepEqual( Stem("sido"), "sid" );
	deepEqual( Stem("siembra"), "siembr" );
	deepEqual( Stem("siembran"), "siembr" );
	deepEqual( Stem("siemens"), "siemens" );
	deepEqual( Stem("siempre"), "siempr" );
	deepEqual( Stem("siendo"), "siend" );
	deepEqual( Stem("sienta"), "sient" );
	deepEqual( Stem("sientan"), "sient" );
	deepEqual( Stem("siente"), "sient" );
	deepEqual( Stem("sienten"), "sient" );
	deepEqual( Stem("siento"), "sient" );
	deepEqual( Stem("sierra"), "sierr" );
	deepEqual( Stem("sierva"), "sierv" );
	deepEqual( Stem("siervo"), "sierv" );
	deepEqual( Stem("siete"), "siet" );
	deepEqual( Stem("siga"), "sig" );
	deepEqual( Stem("sigamos"), "sig" );
	deepEqual( Stem("sigan"), "sig" );
	deepEqual( Stem("siglas"), "sigl" );
	deepEqual( Stem("siglo"), "sigl" );
	deepEqual( Stem("siglos"), "sigl" );
	deepEqual( Stem("significa"), "signif" );
	deepEqual( Stem("significación"), "signif" );
	deepEqual( Stem("significado"), "signific" );
	deepEqual( Stem("significados"), "signific" );
	deepEqual( Stem("significan"), "signific" );
	deepEqual( Stem("significar"), "signific" );
	deepEqual( Stem("significará"), "signific" );
	deepEqual( Stem("significaran"), "signific" );
	deepEqual( Stem("significaría"), "signific" );
	deepEqual( Stem("significativa"), "signific" );
	deepEqual( Stem("significativamente"), "signific" );
	deepEqual( Stem("significativas"), "signific" );
	deepEqual( Stem("significativo"), "signific" );
	deepEqual( Stem("significativos"), "signific" );
	deepEqual( Stem("significo"), "signif" );
	deepEqual( Stem("significó"), "signific" );
	deepEqual( Stem("signifique"), "signifiqu" );
	deepEqual( Stem("signo"), "sign" );
	deepEqual( Stem("signos"), "sign" );
	deepEqual( Stem("sigo"), "sig" );
	deepEqual( Stem("sigue"), "sig" );
	deepEqual( Stem("siguen"), "sig" );
	deepEqual( Stem("siguiendo"), "sigu" );
	deepEqual( Stem("siguiente"), "siguient" );
	deepEqual( Stem("siguientes"), "siguient" );
	deepEqual( Stem("siguiera"), "sigu" );
	deepEqual( Stem("siguieran"), "sigu" );
	deepEqual( Stem("siguieron"), "sigu" );
	deepEqual( Stem("siguió"), "sigu" );
	deepEqual( Stem("silbante"), "silbant" );
	deepEqual( Stem("silbaron"), "silb" );
	deepEqual( Stem("silbatazo"), "silbataz" );
	deepEqual( Stem("silber"), "silb" );
	deepEqual( Stem("silbes"), "silb" );
	deepEqual( Stem("silencio"), "silenci" );
	deepEqual( Stem("silencioso"), "silenci" );
	deepEqual( Stem("silla"), "sill" );
	deepEqual( Stem("sillas"), "sill" );
	deepEqual( Stem("sillón"), "sillon" );
	deepEqual( Stem("silos"), "sil" );
	deepEqual( Stem("silueta"), "siluet" );
	deepEqual( Stem("silva"), "silv" );
	deepEqual( Stem("silvestre"), "silvestr" );
	deepEqual( Stem("silvestris"), "silvestris" );
	deepEqual( Stem("silvia"), "silvi" );
	deepEqual( Stem("silviano"), "silvian" );
	deepEqual( Stem("silvio"), "silvi" );
	deepEqual( Stem("simbólica"), "simbol" );
	deepEqual( Stem("simbólico"), "simbol" );
	deepEqual( Stem("simbolización"), "simboliz" );
	deepEqual( Stem("símbolo"), "simbol" );
	deepEqual( Stem("símbolos"), "simbol" );
	deepEqual( Stem("simeone"), "simeon" );
	deepEqual( Stem("simeprode"), "simeprod" );
	deepEqual( Stem("similar"), "simil" );
	deepEqual( Stem("similares"), "similar" );
	deepEqual( Stem("simón"), "simon" );
	deepEqual( Stem("simpatía"), "simpat" );
	deepEqual( Stem("simpático"), "simpat" );
	deepEqual( Stem("simpatizantes"), "simpatiz" );
	deepEqual( Stem("simple"), "simpl" );
	deepEqual( Stem("simplemente"), "simplement" );
	deepEqual( Stem("simples"), "simpl" );
	deepEqual( Stem("simpliciano"), "simplician" );
	deepEqual( Stem("simplificación"), "simplif" );
	deepEqual( Stem("simplificado"), "simplific" );
	deepEqual( Stem("simplista"), "simplist" );
	deepEqual( Stem("simposiums"), "simposiums" );
	deepEqual( Stem("simulación"), "simul" );
	deepEqual( Stem("simulador"), "simul" );
	deepEqual( Stem("simulados"), "simul" );
	deepEqual( Stem("simular"), "simul" );
	deepEqual( Stem("simultánea"), "simultane" );
	deepEqual( Stem("simultáneamente"), "simultan" );
	deepEqual( Stem("simultáneos"), "simultane" );
	deepEqual( Stem("sin"), "sin" );
	deepEqual( Stem("sinagua"), "sinagu" );
	deepEqual( Stem("sinaí"), "sina" );
	deepEqual( Stem("sinaloa"), "sinalo" );
	deepEqual( Stem("sinaloense"), "sinaloens" );
	deepEqual( Stem("sinaloenses"), "sinaloens" );
	deepEqual( Stem("sinceramente"), "sincer" );
	deepEqual( Stem("sincero"), "sincer" );
	deepEqual( Stem("sinclair"), "sincl" );
	deepEqual( Stem("sincretismo"), "sincret" );
	deepEqual( Stem("sincronización"), "sincroniz" );
	deepEqual( Stem("sincronizados"), "sincroniz" );
	deepEqual( Stem("sindelfingen"), "sindelfing" );
	deepEqual( Stem("sindical"), "sindical" );
	deepEqual( Stem("sindicales"), "sindical" );
	deepEqual( Stem("sindicalismo"), "sindical" );
	deepEqual( Stem("sindicalista"), "sindical" );
	deepEqual( Stem("sindicalistas"), "sindical" );
	deepEqual( Stem("sindicato"), "sindicat" );
	deepEqual( Stem("sindicatos"), "sindicat" );
	deepEqual( Stem("sindicatura"), "sindicatur" );
	deepEqual( Stem("síndico"), "sindic" );
	deepEqual( Stem("síndicos"), "sindic" );
	deepEqual( Stem("sindo"), "sind" );
	deepEqual( Stem("síndrome"), "sindrom" );
	deepEqual( Stem("sinfonía"), "sinfon" );
	deepEqual( Stem("singapur"), "singapur" );
	deepEqual( Stem("singer"), "sing" );
	deepEqual( Stem("singles"), "singl" );
	deepEqual( Stem("singlista"), "singlist" );
	deepEqual( Stem("singular"), "singul" );
	deepEqual( Stem("siniestra"), "siniestr" );
	deepEqual( Stem("siniestro"), "siniestr" );
	deepEqual( Stem("sinnúmero"), "sinnumer" );
	deepEqual( Stem("sino"), "sin" );
	deepEqual( Stem("sinodal"), "sinodal" );
	deepEqual( Stem("sinónimo"), "sinonim" );
	deepEqual( Stem("sinovial"), "sinovial" );
	deepEqual( Stem("síntesis"), "sintesis" );
	deepEqual( Stem("sintética"), "sintet" );
	deepEqual( Stem("sintético"), "sintet" );
	deepEqual( Stem("sintéticos"), "sintet" );
	deepEqual( Stem("sintiéndome"), "sint" );
	deepEqual( Stem("sintió"), "sint" );
	deepEqual( Stem("síntoma"), "sintom" );
	deepEqual( Stem("síntomas"), "sintom" );
	deepEqual( Stem("sintomática"), "sintomat" );
	deepEqual( Stem("sintomáticas"), "sintomat" );
	deepEqual( Stem("sintomático"), "sintomat" );
	deepEqual( Stem("sinuosos"), "sinuos" );
	deepEqual( Stem("sinusitis"), "sinusitis" );
	deepEqual( Stem("siquiatra"), "siquiatr" );
	deepEqual( Stem("siquiera"), "siqu" );
	deepEqual( Stem("sir"), "sir" );
	deepEqual( Stem("sirgo"), "sirg" );
	deepEqual( Stem("sirloin"), "sirloin" );
	deepEqual( Stem("siro"), "sir" );
	deepEqual( Stem("sirva"), "sirv" );
	deepEqual( Stem("sirvan"), "sirv" );
	deepEqual( Stem("sirve"), "sirv" );
	deepEqual( Stem("sirven"), "sirv" );
	deepEqual( Stem("sirves"), "sirv" );
	deepEqual( Stem("sirvientas"), "sirvient" );
	deepEqual( Stem("sirvieran"), "sirv" );
	deepEqual( Stem("sirvieron"), "sirv" );
	deepEqual( Stem("sirvió"), "sirv" );
	deepEqual( Stem("siscohm"), "siscohm" );
	deepEqual( Stem("sísmica"), "sismic" );
	deepEqual( Stem("sísmicos"), "sismic" );
	deepEqual( Stem("sismógrafos"), "sismograf" );
	deepEqual( Stem("sismología"), "sismolog" );
	deepEqual( Stem("sistefin"), "sistefin" );
	deepEqual( Stem("sistema"), "sistem" );
	deepEqual( Stem("sistemas"), "sistem" );
	deepEqual( Stem("sistemática"), "sistemat" );
	deepEqual( Stem("sistemáticas"), "sistemat" );
	deepEqual( Stem("sistemático"), "sistemat" );
	deepEqual( Stem("sister"), "sist" );
	deepEqual( Stem("sitemáticamente"), "sitemat" );
	deepEqual( Stem("sitiado"), "siti" );
	deepEqual( Stem("sitiados"), "siti" );
	deepEqual( Stem("sitio"), "siti" );
	deepEqual( Stem("sitios"), "siti" );
	deepEqual( Stem("situación"), "situacion" );
	deepEqual( Stem("situaciones"), "situacion" );
	deepEqual( Stem("situada"), "situ" );
	deepEqual( Stem("situadas"), "situ" );
	deepEqual( Stem("situado"), "situ" );
	deepEqual( Stem("situándose"), "situ" );
	deepEqual( Stem("situar"), "situ" );
	deepEqual( Stem("situarlos"), "situ" );
	deepEqual( Stem("situarse"), "situ" );
	deepEqual( Stem("sixto"), "sixt" );
	deepEqual( Stem("sketches"), "sketch" );
	deepEqual( Stem("slam"), "slam" );
	deepEqual( Stem("sledge"), "sledg" );
	deepEqual( Stem("sli"), "sli" );
	deepEqual( Stem("slim"), "slim" );
	deepEqual( Stem("smc"), "smc" );
	deepEqual( Stem("smith"), "smith" );
	deepEqual( Stem("smuckers"), "smuckers" );
	deepEqual( Stem("snte"), "snte" );
	deepEqual( Stem("sobada"), "sob" );
	deepEqual( Stem("sobando"), "sob" );
	deepEqual( Stem("soberana"), "soberan" );
	deepEqual( Stem("soberanía"), "soberan" );
	deepEqual( Stem("soberano"), "soberan" );
	deepEqual( Stem("soberbia"), "soberbi" );
	deepEqual( Stem("sobornados"), "soborn" );
	deepEqual( Stem("sobornando"), "soborn" );
	deepEqual( Stem("soborno"), "soborn" );
	deepEqual( Stem("sobornos"), "soborn" );
	deepEqual( Stem("sobra"), "sobr" );
	deepEqual( Stem("sobraba"), "sobr" );
	deepEqual( Stem("sobradamente"), "sobrad" );
	deepEqual( Stem("sobran"), "sobr" );
	deepEqual( Stem("sobrando"), "sobr" );
	deepEqual( Stem("sobrar"), "sobr" );
	deepEqual( Stem("sobrarán"), "sobr" );
	deepEqual( Stem("sobre"), "sobr" );
	deepEqual( Stem("sobreasignación"), "sobreasign" );
	deepEqual( Stem("sobrecalentada"), "sobrecalent" );
	deepEqual( Stem("sobrecalentamiento"), "sobrecalent" );
	deepEqual( Stem("sobrecalentaron"), "sobrecalent" );
	deepEqual( Stem("sobrecarga"), "sobrecarg" );
	deepEqual( Stem("sobrecargaron"), "sobrecarg" );
	deepEqual( Stem("sobrecargas"), "sobrecarg" );
	deepEqual( Stem("sobrecosto"), "sobrecost" );
	deepEqual( Stem("sobrecostos"), "sobrecost" );
	deepEqual( Stem("sobrecupo"), "sobrecup" );
	deepEqual( Stem("sobrecupos"), "sobrecup" );
	deepEqual( Stem("sobreexplotación"), "sobreexplot" );
	deepEqual( Stem("sobregiro"), "sobregir" );
	deepEqual( Stem("sobregiros"), "sobregir" );
	deepEqual( Stem("sobrellevar"), "sobrellev" );
	deepEqual( Stem("sobremanera"), "sobremaner" );
	deepEqual( Stem("sobrenombre"), "sobrenombr" );
	deepEqual( Stem("sobrepasa"), "sobrepas" );
	deepEqual( Stem("sobrepasan"), "sobrepas" );
	deepEqual( Stem("sobrepasar"), "sobrepas" );
	deepEqual( Stem("sobrepase"), "sobrep" );
	deepEqual( Stem("sobrepasó"), "sobrepas" );
	deepEqual( Stem("sobrepoblación"), "sobrepobl" );
	deepEqual( Stem("sobreponen"), "sobrepon" );
	deepEqual( Stem("sobreponiéndose"), "sobrepon" );
	deepEqual( Stem("sobreposición"), "sobreposicion" );
	deepEqual( Stem("sobresale"), "sobresal" );
	deepEqual( Stem("sobresalen"), "sobresal" );
	deepEqual( Stem("sobresaliendo"), "sobresal" );
	deepEqual( Stem("sobresaliente"), "sobresalient" );
	deepEqual( Stem("sobresalió"), "sobresal" );
	deepEqual( Stem("sobresalir"), "sobresal" );
	deepEqual( Stem("sobresaltos"), "sobresalt" );
	deepEqual( Stem("sobreseída"), "sobreseid" );
	deepEqual( Stem("sobrestantes"), "sobrest" );
	deepEqual( Stem("sobresuscripcion"), "sobresuscripcion" );
	deepEqual( Stem("sobretasa"), "sobretas" );
	deepEqual( Stem("sobretodo"), "sobretod" );
	deepEqual( Stem("sobrevaluado"), "sobrevalu" );
	deepEqual( Stem("sobrevenga"), "sobreveng" );
	deepEqual( Stem("sobrevida"), "sobrev" );
	deepEqual( Stem("sobreviven"), "sobreviv" );
	deepEqual( Stem("sobrevivencia"), "sobrevivent" );
	deepEqual( Stem("sobrevivido"), "sobreviv" );
	deepEqual( Stem("sobrevivientes"), "sobrevivient" );
	deepEqual( Stem("sobrevivieron"), "sobreviv" );
	deepEqual( Stem("sobrevivir"), "sobreviv" );
	deepEqual( Stem("sobrevuelan"), "sobrevuel" );
	deepEqual( Stem("sobrevuelos"), "sobrevuel" );
	deepEqual( Stem("sobriedad"), "sobried" );
	deepEqual( Stem("sobrina"), "sobrin" );
	deepEqual( Stem("sobrino"), "sobrin" );
	deepEqual( Stem("sobrinos"), "sobrin" );
	deepEqual( Stem("socavamos"), "socav" );
	deepEqual( Stem("socavar"), "socav" );
	deepEqual( Stem("soccer"), "socc" );
	deepEqual( Stem("social"), "social" );
	deepEqual( Stem("socialdemócrata"), "socialdemocrat" );
	deepEqual( Stem("sociales"), "social" );
	deepEqual( Stem("socialismo"), "social" );
	deepEqual( Stem("socialista"), "social" );
	deepEqual( Stem("socialmente"), "social" );
	deepEqual( Stem("sociedad"), "socied" );
	deepEqual( Stem("sociedades"), "sociedad" );
	deepEqual( Stem("socio"), "soci" );
	deepEqual( Stem("socioeconómica"), "socioeconom" );
	deepEqual( Stem("socioeconómico"), "socioeconom" );
	deepEqual( Stem("socióloga"), "sociolog" );
	deepEqual( Stem("sociológico"), "sociolog" );
	deepEqual( Stem("sociológicos"), "sociolog" );
	deepEqual( Stem("sociólogo"), "sociolog" );
	deepEqual( Stem("sociopolítica"), "sociopolit" );
	deepEqual( Stem("socios"), "soci" );
	deepEqual( Stem("socorrista"), "socorr" );
	deepEqual( Stem("socorristas"), "socorr" );
	deepEqual( Stem("socorro"), "socorr" );
	deepEqual( Stem("socorros"), "socorr" );
	deepEqual( Stem("sócrates"), "socrat" );
	deepEqual( Stem("socrático"), "socrat" );
	deepEqual( Stem("socráticos"), "socrat" );
	deepEqual( Stem("sodas"), "sod" );
	deepEqual( Stem("sódico"), "sodic" );
	deepEqual( Stem("sodio"), "sodi" );
	deepEqual( Stem("sofá"), "sof" );
	deepEqual( Stem("sofía"), "sof" );
	deepEqual( Stem("sofisticación"), "sofist" );
	deepEqual( Stem("sofisticadas"), "sofistic" );
	deepEqual( Stem("sofisticado"), "sofistic" );
	deepEqual( Stem("sofisticados"), "sofistic" );
	deepEqual( Stem("sofocación"), "sofoc" );
	deepEqual( Stem("sofocado"), "sofoc" );
	deepEqual( Stem("sofocarlo"), "sofoc" );
	deepEqual( Stem("soft"), "soft" );
	deepEqual( Stem("softbol"), "softbol" );
	deepEqual( Stem("software"), "softwar" );
	deepEqual( Stem("sogem"), "sogem" );
	deepEqual( Stem("sojo"), "soj" );
	deepEqual( Stem("sol"), "sol" );
	deepEqual( Stem("sola"), "sol" );
	deepEqual( Stem("solamente"), "sol" );
	deepEqual( Stem("solana"), "solan" );
	deepEqual( Stem("solapados"), "solap" );
	deepEqual( Stem("solar"), "sol" );
	deepEqual( Stem("solares"), "solar" );
	deepEqual( Stem("solaris"), "solaris" );
	deepEqual( Stem("solas"), "sol" );
	deepEqual( Stem("solaza"), "solaz" );
	deepEqual( Stem("solazo"), "solaz" );
	deepEqual( Stem("soldada"), "sold" );
	deepEqual( Stem("soldado"), "sold" );
	deepEqual( Stem("soldador"), "soldador" );
	deepEqual( Stem("soldados"), "sold" );
	deepEqual( Stem("soldadura"), "soldadur" );
	deepEqual( Stem("soldan"), "sold" );
	deepEqual( Stem("soldando"), "sold" );
	deepEqual( Stem("soldar"), "sold" );
	deepEqual( Stem("soldarlos"), "sold" );
	deepEqual( Stem("soleado"), "sol" );
	deepEqual( Stem("soledad"), "soled" );
	deepEqual( Stem("solemne"), "solemn" );
	deepEqual( Stem("solemnidad"), "solemn" );
	deepEqual( Stem("solía"), "sol" );
	deepEqual( Stem("solían"), "sol" );
	deepEqual( Stem("solicita"), "solicit" );
	deepEqual( Stem("solicitaba"), "solicit" );
	deepEqual( Stem("solicitada"), "solicit" );
	deepEqual( Stem("solicitado"), "solicit" );
	deepEqual( Stem("solicitados"), "solicit" );
	deepEqual( Stem("solicitamos"), "solicit" );
	deepEqual( Stem("solicitan"), "solicit" );
	deepEqual( Stem("solicitando"), "solicit" );
	deepEqual( Stem("solicitar"), "solicit" );
	deepEqual( Stem("solicitará"), "solicit" );
	deepEqual( Stem("solicitarán"), "solicit" );
	deepEqual( Stem("solicitarle"), "solicit" );
	deepEqual( Stem("solicitaron"), "solicit" );
	deepEqual( Stem("solicite"), "solicit" );
	deepEqual( Stem("solicité"), "solicit" );
	deepEqual( Stem("solicito"), "solicit" );
	deepEqual( Stem("solícito"), "solicit" );
	deepEqual( Stem("solicitó"), "solicit" );
	deepEqual( Stem("solicitud"), "solicitud" );
	deepEqual( Stem("solicitudes"), "solicitud" );
	deepEqual( Stem("sólida"), "sol" );
	deepEqual( Stem("solidaria"), "solidari" );
	deepEqual( Stem("solidaridad"), "solidar" );
	deepEqual( Stem("solidario"), "solidari" );
	deepEqual( Stem("sólidas"), "sol" );
	deepEqual( Stem("solidez"), "solidez" );
	deepEqual( Stem("sólido"), "sol" );
	deepEqual( Stem("sólidos"), "sol" );
	deepEqual( Stem("solís"), "sol" );
	deepEqual( Stem("solista"), "solist" );
	deepEqual( Stem("solistas"), "solist" );
	deepEqual( Stem("solitario"), "solitari" );
	deepEqual( Stem("solitarios"), "solitari" );
	deepEqual( Stem("solito"), "solit" );
	deepEqual( Stem("sollozando"), "solloz" );
	deepEqual( Stem("solo"), "sol" );
	deepEqual( Stem("sólo"), "sol" );
	deepEqual( Stem("solórzano"), "solorzan" );
	deepEqual( Stem("solos"), "sol" );
	deepEqual( Stem("soltar"), "solt" );
	deepEqual( Stem("soltara"), "solt" );
	deepEqual( Stem("soltaran"), "solt" );
	deepEqual( Stem("soltera"), "solter" );
	deepEqual( Stem("solteras"), "solter" );
	deepEqual( Stem("soltó"), "solt" );
	deepEqual( Stem("solución"), "solucion" );
	deepEqual( Stem("solucionan"), "solucion" );
	deepEqual( Stem("solucionar"), "solucion" );
	deepEqual( Stem("solucionarse"), "solucion" );
	deepEqual( Stem("solucione"), "solucion" );
	deepEqual( Stem("soluciones"), "solucion" );
	deepEqual( Stem("solucionó"), "solucion" );
	deepEqual( Stem("solvencia"), "solvenci" );
	deepEqual( Stem("solventar"), "solvent" );
	deepEqual( Stem("somalia"), "somali" );
	deepEqual( Stem("sombra"), "sombr" );
	deepEqual( Stem("sombras"), "sombr" );
	deepEqual( Stem("sombrero"), "sombrer" );
	deepEqual( Stem("sombreros"), "sombrer" );
	deepEqual( Stem("sometan"), "somet" );
	deepEqual( Stem("somete"), "somet" );
	deepEqual( Stem("someter"), "somet" );
	deepEqual( Stem("someterá"), "somet" );
	deepEqual( Stem("someterán"), "somet" );
	deepEqual( Stem("someterlos"), "somet" );
	deepEqual( Stem("someterse"), "somet" );
	deepEqual( Stem("sometidas"), "somet" );
	deepEqual( Stem("sometido"), "somet" );
	deepEqual( Stem("sometidos"), "somet" );
	deepEqual( Stem("sometimiento"), "somet" );
	deepEqual( Stem("somos"), "som" );
	deepEqual( Stem("somoza"), "somoz" );
	deepEqual( Stem("son"), "son" );
	deepEqual( Stem("soñado"), "soñ" );
	deepEqual( Stem("soñadores"), "soñador" );
	deepEqual( Stem("sonados"), "son" );
	deepEqual( Stem("soñados"), "soñ" );
	deepEqual( Stem("soñando"), "soñ" );
	deepEqual( Stem("soñar"), "soñ" );
	deepEqual( Stem("sonda"), "sond" );
	deepEqual( Stem("sondas"), "sond" );
	deepEqual( Stem("sondeos"), "sonde" );
	deepEqual( Stem("soñé"), "soñ" );
	deepEqual( Stem("sonia"), "soni" );
	deepEqual( Stem("sonido"), "son" );
	deepEqual( Stem("sonidos"), "son" );
	deepEqual( Stem("soñó"), "soñ" );
	deepEqual( Stem("sonora"), "sonor" );
	deepEqual( Stem("sonorense"), "sonorens" );
	deepEqual( Stem("sonriente"), "sonrient" );
	deepEqual( Stem("sonríes"), "sonr" );
	deepEqual( Stem("sonrió"), "sonr" );
	deepEqual( Stem("sonrisa"), "sonris" );
	deepEqual( Stem("sonrisas"), "sonris" );
	deepEqual( Stem("sony"), "sony" );
	deepEqual( Stem("sonya"), "sony" );
	deepEqual( Stem("sopesar"), "sopes" );
	deepEqual( Stem("soplando"), "sopl" );
	deepEqual( Stem("soplarse"), "sopl" );
	deepEqual( Stem("soporta"), "soport" );
	deepEqual( Stem("soportaba"), "soport" );
	deepEqual( Stem("soportable"), "soport" );
	deepEqual( Stem("soportado"), "soport" );
	deepEqual( Stem("soportan"), "soport" );
	deepEqual( Stem("soportar"), "soport" );
	deepEqual( Stem("soportarán"), "soport" );
	deepEqual( Stem("soporte"), "soport" );
	deepEqual( Stem("soportes"), "soport" );
	deepEqual( Stem("soportó"), "soport" );
	deepEqual( Stem("sor"), "sor" );
	deepEqual( Stem("sorda"), "sord" );
	deepEqual( Stem("sordera"), "sorder" );
	deepEqual( Stem("sórdidas"), "sord" );
	deepEqual( Stem("sórdido"), "sord" );
	deepEqual( Stem("sordos"), "sord" );
	deepEqual( Stem("sorgo"), "sorg" );
	deepEqual( Stem("soriana"), "sorian" );
	deepEqual( Stem("soriano"), "sorian" );
	deepEqual( Stem("soros"), "sor" );
	deepEqual( Stem("sorprenda"), "sorprend" );
	deepEqual( Stem("sorprende"), "sorprend" );
	deepEqual( Stem("sorprenden"), "sorprend" );
	deepEqual( Stem("sorprendente"), "sorprendent" );
	deepEqual( Stem("sorprendentes"), "sorprendent" );
	deepEqual( Stem("sorprender"), "sorprend" );
	deepEqual( Stem("sorprenderá"), "sorprend" );
	deepEqual( Stem("sorprendí"), "sorprend" );
	deepEqual( Stem("sorprendidas"), "sorprend" );
	deepEqual( Stem("sorprendido"), "sorprend" );
	deepEqual( Stem("sorprendidos"), "sorprend" );
	deepEqual( Stem("sorprendieron"), "sorprend" );
	deepEqual( Stem("sorprendió"), "sorprend" );
	deepEqual( Stem("sorpresa"), "sorpres" );
	deepEqual( Stem("sorpresas"), "sorpres" );
	deepEqual( Stem("sorpresiva"), "sorpres" );
	deepEqual( Stem("sorpresivas"), "sorpres" );
	deepEqual( Stem("sorpresivo"), "sorpres" );
	deepEqual( Stem("sorpresivos"), "sorpres" );
	deepEqual( Stem("sortea"), "sorte" );
	deepEqual( Stem("sorteo"), "sorte" );
	deepEqual( Stem("sorteos"), "sorte" );
	deepEqual( Stem("sosa"), "sos" );
	deepEqual( Stem("soslayó"), "soslay" );
	deepEqual( Stem("sospecha"), "sospech" );
	deepEqual( Stem("sospechaba"), "sospech" );
	deepEqual( Stem("sospechamos"), "sospech" );
	deepEqual( Stem("sospecho"), "sospech" );
	deepEqual( Stem("sospechosa"), "sospech" );
	deepEqual( Stem("sospechoso"), "sospech" );
	deepEqual( Stem("sospechosos"), "sospech" );
	deepEqual( Stem("sostén"), "sosten" );
	deepEqual( Stem("sostendrá"), "sostendr" );
	deepEqual( Stem("sostendrán"), "sostendran" );
	deepEqual( Stem("sostener"), "sosten" );
	deepEqual( Stem("sostenerla"), "sosten" );
	deepEqual( Stem("sostenerse"), "sosten" );
	deepEqual( Stem("sostengo"), "sosteng" );
	deepEqual( Stem("sostenía"), "sosten" );
	deepEqual( Stem("sostenían"), "sosten" );
	deepEqual( Stem("sostenible"), "sosten" );
	deepEqual( Stem("sostenida"), "sosten" );
	deepEqual( Stem("sostenidas"), "sosten" );
	deepEqual( Stem("sostenido"), "sosten" );
	deepEqual( Stem("sosteniendo"), "sosten" );
	deepEqual( Stem("sostiene"), "sostien" );
	deepEqual( Stem("sostienen"), "sostien" );
	deepEqual( Stem("sostuvieron"), "sostuv" );
	deepEqual( Stem("sostuvo"), "sostuv" );
	deepEqual( Stem("sotanero"), "sotaner" );
	deepEqual( Stem("sotaneros"), "sotaner" );
	deepEqual( Stem("sotero"), "soter" );
	deepEqual( Stem("soto"), "sot" );
	deepEqual( Stem("soundgarden"), "soundgard" );
	deepEqual( Stem("south"), "south" );
	deepEqual( Stem("southern"), "southern" );
	deepEqual( Stem("southwest"), "southwest" );
	deepEqual( Stem("soviet"), "soviet" );
	deepEqual( Stem("soviética"), "soviet" );
	deepEqual( Stem("soviético"), "soviet" );
	deepEqual( Stem("soy"), "soy" );
	deepEqual( Stem("soya"), "soy" );
	deepEqual( Stem("sparcclassic"), "sparcclassic" );
	deepEqual( Stem("sparcservers"), "sparcservers" );
	deepEqual( Stem("sparcstations"), "sparcstations" );
	deepEqual( Stem("sparrings"), "sparrings" );
	deepEqual( Stem("special"), "special" );
	deepEqual( Stem("spike"), "spik" );
	deepEqual( Stem("spirit"), "spirit" );
	deepEqual( Stem("spivakov"), "spivakov" );
	deepEqual( Stem("sport"), "sport" );
	deepEqual( Stem("sporting"), "sporting" );
	deepEqual( Stem("spot"), "spot" );
	deepEqual( Stem("sprenger"), "spreng" );
	deepEqual( Stem("springbreakers"), "springbreakers" );
	deepEqual( Stem("sprint"), "sprint" );
	deepEqual( Stem("sprints"), "sprints" );
	deepEqual( Stem("sr"), "sr" );
	deepEqual( Stem("staff"), "staff" );
	deepEqual( Stem("stalin"), "stalin" );
	deepEqual( Stem("standard"), "standard" );
	deepEqual( Stem("stanley"), "stanley" );
	deepEqual( Stem("state"), "stat" );
	deepEqual( Stem("station"), "station" );
	deepEqual( Stem("statuo"), "statu" );
	deepEqual( Stem("status"), "status" );
	deepEqual( Stem("steels"), "steels" );
	deepEqual( Stem("stéfano"), "stefan" );
	deepEqual( Stem("stephan"), "steph" );
	deepEqual( Stem("stephanopoulos"), "stephanopoul" );
	deepEqual( Stem("stephen"), "steph" );
	deepEqual( Stem("stereo"), "stere" );
	deepEqual( Stem("stern"), "stern" );
	deepEqual( Stem("steve"), "stev" );
	deepEqual( Stem("steven"), "stev" );
	deepEqual( Stem("stl"), "stl" );
	deepEqual( Stem("stock"), "stock" );
	deepEqual( Stem("stoichkov"), "stoichkov" );
	deepEqual( Stem("stoickov"), "stoickov" );
	deepEqual( Stem("stoker"), "stok" );
	deepEqual( Stem("stólica"), "stolic" );
	deepEqual( Stem("stone"), "ston" );
	deepEqual( Stem("stor"), "stor" );
	deepEqual( Stem("straffon"), "straffon" );
	deepEqual( Stem("strauss"), "strauss" );
	deepEqual( Stem("stravinsky"), "stravinsky" );
	deepEqual( Stem("street"), "street" );
	deepEqual( Stem("strictly"), "strictly" );
	deepEqual( Stem("strikes"), "strik" );
	deepEqual( Stem("strindberg"), "strindberg" );
	deepEqual( Stem("studies"), "studi" );
	deepEqual( Stem("stup"), "stup" );
	deepEqual( Stem("stuttgart"), "stuttgart" );
	deepEqual( Stem("su"), "su" );
	deepEqual( Stem("suárez"), "suarez" );
	deepEqual( Stem("suave"), "suav" );
	deepEqual( Stem("suavemente"), "suavement" );
	deepEqual( Stem("suaves"), "suav" );
	deepEqual( Stem("suavidad"), "suavid" );
	deepEqual( Stem("suavizamos"), "suaviz" );
	deepEqual( Stem("suavizaron"), "suaviz" );
	deepEqual( Stem("sub"), "sub" );
	deepEqual( Stem("suba"), "sub" );
	deepEqual( Stem("subacuática"), "subacuat" );
	deepEqual( Stem("subalterna"), "subaltern" );
	deepEqual( Stem("subalterno"), "subaltern" );
	deepEqual( Stem("suban"), "sub" );
	deepEqual( Stem("subaru"), "subaru" );
	deepEqual( Stem("subasta"), "subast" );
	deepEqual( Stem("subastas"), "subast" );
	deepEqual( Stem("subcampeón"), "subcampeon" );
	deepEqual( Stem("subcomandante"), "subcomand" );
	deepEqual( Stem("subcomandantes"), "subcomand" );
	deepEqual( Stem("subcomisión"), "subcomision" );
	deepEqual( Stem("subcomité"), "subcomit" );
	deepEqual( Stem("subconsciente"), "subconscient" );
	deepEqual( Stem("subcontratación"), "subcontrat" );
	deepEqual( Stem("subdelegado"), "subdeleg" );
	deepEqual( Stem("subdesarrollada"), "subdesarroll" );
	deepEqual( Stem("subdesarrollados"), "subdesarroll" );
	deepEqual( Stem("subdirección"), "subdireccion" );
	deepEqual( Stem("subdirector"), "subdirector" );
	deepEqual( Stem("subdirectora"), "subdirector" );
	deepEqual( Stem("subdistribuidores"), "subdistribuidor" );
	deepEqual( Stem("subdivisión"), "subdivision" );
	deepEqual( Stem("suben"), "sub" );
	deepEqual( Stem("subes"), "sub" );
	deepEqual( Stem("subespecialidades"), "subespecial" );
	deepEqual( Stem("subestación"), "subest" );
	deepEqual( Stem("subfacturación"), "subfactur" );
	deepEqual( Stem("subgerente"), "subgerent" );
	deepEqual( Stem("subí"), "sub" );
	deepEqual( Stem("subían"), "sub" );
	deepEqual( Stem("subida"), "sub" );
	deepEqual( Stem("subidas"), "sub" );
	deepEqual( Stem("subido"), "sub" );
	deepEqual( Stem("subiendo"), "sub" );
	deepEqual( Stem("subieran"), "sub" );
	deepEqual( Stem("subieron"), "sub" );
	deepEqual( Stem("subió"), "sub" );
	deepEqual( Stem("subir"), "sub" );
	deepEqual( Stem("subirá"), "sub" );
	deepEqual( Stem("subirse"), "sub" );
	deepEqual( Stem("súbita"), "subit" );
	deepEqual( Stem("súbitamente"), "subit" );
	deepEqual( Stem("subjetiva"), "subjet" );
	deepEqual( Stem("subjetividad"), "subjet" );
	deepEqual( Stem("sublíder"), "sublid" );
	deepEqual( Stem("sublíderes"), "sublider" );
	deepEqual( Stem("sublime"), "sublim" );
	deepEqual( Stem("subliminal"), "subliminal" );
	deepEqual( Stem("submarina"), "submarin" );
	deepEqual( Stem("submarinas"), "submarin" );
	deepEqual( Stem("submarino"), "submarin" );
	deepEqual( Stem("submarinos"), "submarin" );
	deepEqual( Stem("subordinado"), "subordin" );
	deepEqual( Stem("subordinados"), "subordin" );
	deepEqual( Stem("subprocurador"), "subprocur" );
	deepEqual( Stem("subproductos"), "subproduct" );
	deepEqual( Stem("subrayar"), "subray" );
	deepEqual( Stem("subrayaron"), "subray" );
	deepEqual( Stem("subrayó"), "subray" );
	deepEqual( Stem("subregional"), "subregional" );
	deepEqual( Stem("subsana"), "subsan" );
	deepEqual( Stem("subsanables"), "subsan" );
	deepEqual( Stem("subsecretaria"), "subsecretari" );
	deepEqual( Stem("subsecretaría"), "subsecret" );
	deepEqual( Stem("subsecretario"), "subsecretari" );
	deepEqual( Stem("subsecretarios"), "subsecretari" );
	deepEqual( Stem("subsectores"), "subsector" );
	deepEqual( Stem("subsecuentes"), "subsecuent" );
	deepEqual( Stem("subsidiada"), "subsidi" );
	deepEqual( Stem("subsidiadas"), "subsidi" );
	deepEqual( Stem("subsidiar"), "subsidi" );
	deepEqual( Stem("subsidiaria"), "subsidiari" );
	deepEqual( Stem("subsidiarias"), "subsidiari" );
	deepEqual( Stem("subsidiarios"), "subsidiari" );
	deepEqual( Stem("subsidio"), "subsidi" );
	deepEqual( Stem("subsidios"), "subsidi" );
	deepEqual( Stem("substancia"), "substanci" );
	deepEqual( Stem("substancial"), "substancial" );
	deepEqual( Stem("substanciales"), "substancial" );
	deepEqual( Stem("substancias"), "substanci" );
	deepEqual( Stem("subsuelo"), "subsuel" );
	deepEqual( Stem("subtangente"), "subtangent" );
	deepEqual( Stem("subterránea"), "subterrane" );
	deepEqual( Stem("subterráneo"), "subterrane" );
	deepEqual( Stem("suburban"), "suburb" );
	deepEqual( Stem("suburbanos"), "suburban" );
	deepEqual( Stem("suburbias"), "suburbi" );
	deepEqual( Stem("suburbios"), "suburbi" );
	deepEqual( Stem("subvención"), "subvencion" );
	deepEqual( Stem("subversión"), "subversion" );
	deepEqual( Stem("subversivo"), "subvers" );
	deepEqual( Stem("subversivos"), "subvers" );
	deepEqual( Stem("subvertir"), "subvert" );
	deepEqual( Stem("subviertes"), "subviert" );
	deepEqual( Stem("suceda"), "suced" );
	deepEqual( Stem("sucede"), "suced" );
	deepEqual( Stem("suceden"), "suced" );
	deepEqual( Stem("suceder"), "suced" );
	deepEqual( Stem("sucederá"), "suced" );
	deepEqual( Stem("sucedería"), "suced" );
	deepEqual( Stem("sucederlo"), "suced" );
	deepEqual( Stem("sucedía"), "suced" );
	deepEqual( Stem("sucedido"), "suced" );
	deepEqual( Stem("sucediera"), "suced" );
	deepEqual( Stem("sucedieron"), "suced" );
	deepEqual( Stem("sucedió"), "suced" );
	deepEqual( Stem("sucesion"), "sucesion" );
	deepEqual( Stem("sucesión"), "sucesion" );
	deepEqual( Stem("sucesivamente"), "suces" );
	deepEqual( Stem("suceso"), "suces" );
	deepEqual( Stem("sucesor"), "sucesor" );
	deepEqual( Stem("sucesorio"), "sucesori" );
	deepEqual( Stem("sucesos"), "suces" );
	deepEqual( Stem("sucia"), "suci" );
	deepEqual( Stem("suciedad"), "sucied" );
	deepEqual( Stem("sucio"), "suci" );
	deepEqual( Stem("sucios"), "suci" );
	deepEqual( Stem("sucre"), "sucr" );
	deepEqual( Stem("sucumbir"), "sucumb" );
	deepEqual( Stem("sucursal"), "sucursal" );
	deepEqual( Stem("sucursales"), "sucursal" );
	deepEqual( Stem("sudamérica"), "sudamer" );
	deepEqual( Stem("sudamericana"), "sudamerican" );
	deepEqual( Stem("sudamericanas"), "sudamerican" );
	deepEqual( Stem("sudamericano"), "sudamerican" );
	deepEqual( Stem("sudar"), "sud" );
	deepEqual( Stem("sudeste"), "sudest" );
	deepEqual( Stem("sudoccidental"), "sudoccidental" );
	deepEqual( Stem("sudoeste"), "sudoest" );
	deepEqual( Stem("sudoración"), "sudor" );
	deepEqual( Stem("sudoroso"), "sudor" );
	deepEqual( Stem("suecia"), "sueci" );
	deepEqual( Stem("sueco"), "suec" );
	deepEqual( Stem("suecos"), "suec" );
	deepEqual( Stem("suegra"), "suegr" );
	deepEqual( Stem("suelas"), "suel" );
	deepEqual( Stem("sueldo"), "sueld" );
	deepEqual( Stem("sueldos"), "sueld" );
	deepEqual( Stem("suele"), "suel" );
	deepEqual( Stem("suelen"), "suel" );
	deepEqual( Stem("suelo"), "suel" );
	deepEqual( Stem("suelos"), "suel" );
	deepEqual( Stem("sueltan"), "suelt" );
	deepEqual( Stem("suena"), "suen" );
	deepEqual( Stem("sueña"), "sueñ" );
	deepEqual( Stem("suenen"), "suen" );
	deepEqual( Stem("sueño"), "sueñ" );
	deepEqual( Stem("sueños"), "sueñ" );
	deepEqual( Stem("suero"), "suer" );
	deepEqual( Stem("suerte"), "suert" );
	deepEqual( Stem("suéter"), "suet" );
	deepEqual( Stem("suéteres"), "sueter" );
	deepEqual( Stem("suficiente"), "suficient" );
	deepEqual( Stem("suficientemente"), "suficient" );
	deepEqual( Stem("suficientes"), "suficient" );
	deepEqual( Stem("sufragar"), "sufrag" );
	deepEqual( Stem("sufragaron"), "sufrag" );
	deepEqual( Stem("sufragio"), "sufragi" );
	deepEqual( Stem("sufragios"), "sufragi" );
	deepEqual( Stem("sufrague"), "sufrag" );
	deepEqual( Stem("sufre"), "sufr" );
	deepEqual( Stem("sufren"), "sufr" );
	deepEqual( Stem("sufrí"), "sufr" );
	deepEqual( Stem("sufría"), "sufr" );
	deepEqual( Stem("sufrido"), "sufr" );
	deepEqual( Stem("sufridos"), "sufr" );
	deepEqual( Stem("sufriendo"), "sufr" );
	deepEqual( Stem("sufrieron"), "sufr" );
	deepEqual( Stem("sufrimiento"), "sufrimient" );
	deepEqual( Stem("sufrió"), "sufr" );
	deepEqual( Stem("sufrir"), "sufr" );
	deepEqual( Stem("sugerencia"), "sugerent" );
	deepEqual( Stem("sugerencias"), "sugerent" );
	deepEqual( Stem("sugerentes"), "sugerent" );
	deepEqual( Stem("sugería"), "sug" );
	deepEqual( Stem("sugerido"), "suger" );
	deepEqual( Stem("sugeridos"), "suger" );
	deepEqual( Stem("sugerir"), "suger" );
	deepEqual( Stem("sugestivos"), "sugest" );
	deepEqual( Stem("sugiera"), "sug" );
	deepEqual( Stem("sugieran"), "sug" );
	deepEqual( Stem("sugiere"), "sugier" );
	deepEqual( Stem("sugieren"), "sugier" );
	deepEqual( Stem("sugiero"), "sugier" );
	deepEqual( Stem("sugiriendo"), "sugir" );
	deepEqual( Stem("sugirieron"), "sugir" );
	deepEqual( Stem("sugirió"), "sugir" );
	deepEqual( Stem("sui"), "sui" );
	deepEqual( Stem("suicida"), "suic" );
	deepEqual( Stem("suicidaron"), "suicid" );
	deepEqual( Stem("suicidarse"), "suicid" );
	deepEqual( Stem("suicidio"), "suicidi" );
	deepEqual( Stem("suite"), "suit" );
	deepEqual( Stem("suiza"), "suiz" );
	deepEqual( Stem("suizos"), "suiz" );
	deepEqual( Stem("sujeción"), "sujecion" );
	deepEqual( Stem("sujetar"), "sujet" );
	deepEqual( Stem("sujetarlo"), "sujet" );
	deepEqual( Stem("sujetarse"), "sujet" );
	deepEqual( Stem("sujeto"), "sujet" );
	deepEqual( Stem("sujetos"), "sujet" );
	deepEqual( Stem("sulaimán"), "sulaiman" );
	deepEqual( Stem("sulfito"), "sulfit" );
	deepEqual( Stem("sulfúrico"), "sulfur" );
	deepEqual( Stem("sultana"), "sultan" );
	deepEqual( Stem("sultanes"), "sultan" );
	deepEqual( Stem("suma"), "sum" );
	deepEqual( Stem("sumaban"), "sum" );
	deepEqual( Stem("sumado"), "sum" );
	deepEqual( Stem("sumados"), "sum" );
	deepEqual( Stem("sumamente"), "sum" );
	deepEqual( Stem("suman"), "sum" );
	deepEqual( Stem("sumando"), "sum" );
	deepEqual( Stem("sumar"), "sum" );
	deepEqual( Stem("sumarán"), "sum" );
	deepEqual( Stem("sumario"), "sumari" );
	deepEqual( Stem("sumaron"), "sum" );
	deepEqual( Stem("sumarse"), "sum" );
	deepEqual( Stem("sumas"), "sum" );
	deepEqual( Stem("sume"), "sum" );
	deepEqual( Stem("sumen"), "sum" );
	deepEqual( Stem("sumerge"), "sumerg" );
	deepEqual( Stem("sumergibles"), "sumerg" );
	deepEqual( Stem("sumergido"), "sumerg" );
	deepEqual( Stem("sumergió"), "sumerg" );
	deepEqual( Stem("sumerio"), "sumeri" );
	deepEqual( Stem("sumido"), "sum" );
	deepEqual( Stem("suministraba"), "suministr" );
	deepEqual( Stem("suministrada"), "suministr" );
	deepEqual( Stem("suministrar"), "suministr" );
	deepEqual( Stem("suministro"), "suministr" );
	deepEqual( Stem("suministró"), "suministr" );
	deepEqual( Stem("sumisa"), "sumis" );
	deepEqual( Stem("summers"), "summers" );
	deepEqual( Stem("sumo"), "sum" );
	deepEqual( Stem("sumó"), "sum" );
	deepEqual( Stem("sun"), "sun" );
	deepEqual( Stem("sung"), "sung" );
	deepEqual( Stem("sunny"), "sunny" );
	deepEqual( Stem("suntuoso"), "suntuos" );
	deepEqual( Stem("suoo"), "suo" );
	deepEqual( Stem("supe"), "sup" );
	deepEqual( Stem("super"), "sup" );
	deepEqual( Stem("súper"), "sup" );
	deepEqual( Stem("supera"), "super" );
	deepEqual( Stem("superación"), "super" );
	deepEqual( Stem("superada"), "super" );
	deepEqual( Stem("superado"), "super" );
	deepEqual( Stem("superamas"), "superam" );
	deepEqual( Stem("superamos"), "super" );
	deepEqual( Stem("superan"), "super" );
	deepEqual( Stem("superando"), "super" );
	deepEqual( Stem("superar"), "super" );
	deepEqual( Stem("superará"), "super" );
	deepEqual( Stem("superarla"), "super" );
	deepEqual( Stem("superarlo"), "super" );
	deepEqual( Stem("superarlos"), "super" );
	deepEqual( Stem("superarme"), "super" );
	deepEqual( Stem("superaron"), "super" );
	deepEqual( Stem("superavenida"), "superaven" );
	deepEqual( Stem("superávit"), "superavit" );
	deepEqual( Stem("superavitaria"), "superavitari" );
	deepEqual( Stem("supercenter"), "supercent" );
	deepEqual( Stem("supercenters"), "supercenters" );
	deepEqual( Stem("superdotados"), "superdot" );
	deepEqual( Stem("supere"), "super" );
	deepEqual( Stem("superficial"), "superficial" );
	deepEqual( Stem("superficiales"), "superficial" );
	deepEqual( Stem("superficie"), "superfici" );
	deepEqual( Stem("superficies"), "superfici" );
	deepEqual( Stem("superfluas"), "superflu" );
	deepEqual( Stem("superior"), "superior" );
	deepEqual( Stem("superiores"), "superior" );
	deepEqual( Stem("superioridad"), "superior" );
	deepEqual( Stem("superiorsubaru"), "superiorsubaru" );
	deepEqual( Stem("superlíder"), "superlid" );
	deepEqual( Stem("superliderato"), "superliderat" );
	deepEqual( Stem("superligero"), "superliger" );
	deepEqual( Stem("superligeros"), "superliger" );
	deepEqual( Stem("superliviano"), "superlivian" );
	deepEqual( Stem("supermediano"), "supermedian" );
	deepEqual( Stem("supermercado"), "supermerc" );
	deepEqual( Stem("supermercados"), "supermerc" );
	deepEqual( Stem("superó"), "super" );
	deepEqual( Stem("superpluma"), "superplum" );
	deepEqual( Stem("superpotencia"), "superpotent" );
	deepEqual( Stem("supersecretarios"), "supersecretari" );
	deepEqual( Stem("supersónicas"), "superson" );
	deepEqual( Stem("supervisa"), "supervis" );
	deepEqual( Stem("supervisar"), "supervis" );
	deepEqual( Stem("supervisará"), "supervis" );
	deepEqual( Stem("supervisarlos"), "supervis" );
	deepEqual( Stem("supervisión"), "supervision" );
	deepEqual( Stem("supervisó"), "supervis" );
	deepEqual( Stem("supervisor"), "supervisor" );
	deepEqual( Stem("supervisora"), "supervisor" );
	deepEqual( Stem("supervivencia"), "supervivent" );
	deepEqual( Stem("superwelter"), "superwelt" );
	deepEqual( Stem("supieran"), "sup" );
	deepEqual( Stem("supieron"), "sup" );
	deepEqual( Stem("suple"), "supl" );
	deepEqual( Stem("suplemento"), "suplement" );
	deepEqual( Stem("suplente"), "suplent" );
	deepEqual( Stem("suplentes"), "suplent" );
	deepEqual( Stem("suplicantes"), "suplic" );
	deepEqual( Stem("suplicar"), "suplic" );
	deepEqual( Stem("suplicará"), "suplic" );
	deepEqual( Stem("suplir"), "supl" );
	deepEqual( Stem("supo"), "sup" );
	deepEqual( Stem("supondría"), "supondr" );
	deepEqual( Stem("supone"), "supon" );
	deepEqual( Stem("suponemos"), "supon" );
	deepEqual( Stem("suponer"), "supon" );
	deepEqual( Stem("suponerse"), "supon" );
	deepEqual( Stem("suponga"), "supong" );
	deepEqual( Stem("supongo"), "supong" );
	deepEqual( Stem("suponía"), "supon" );
	deepEqual( Stem("suponiendo"), "supon" );
	deepEqual( Stem("suposiciones"), "suposicion" );
	deepEqual( Stem("supra"), "supr" );
	deepEqual( Stem("suprema"), "suprem" );
	deepEqual( Stem("supremacia"), "supremaci" );
	deepEqual( Stem("supremacía"), "supremac" );
	deepEqual( Stem("supremo"), "suprem" );
	deepEqual( Stem("suprimir"), "suprim" );
	deepEqual( Stem("suprimirlas"), "suprim" );
	deepEqual( Stem("supuesta"), "supuest" );
	deepEqual( Stem("supuestamente"), "supuest" );
	deepEqual( Stem("supuestas"), "supuest" );
	deepEqual( Stem("supuesto"), "supuest" );
	deepEqual( Stem("supuestos"), "supuest" );
	deepEqual( Stem("sur"), "sur" );
	deepEqual( Stem("surcaba"), "surc" );
	deepEqual( Stem("surcoreana"), "surcorean" );
	deepEqual( Stem("surcoreanas"), "surcorean" );
	deepEqual( Stem("surcoreanos"), "surcorean" );
	deepEqual( Stem("sureste"), "surest" );
	deepEqual( Stem("surge"), "surg" );
	deepEqual( Stem("surgen"), "surg" );
	deepEqual( Stem("surgida"), "surg" );
	deepEqual( Stem("surgido"), "surg" );
	deepEqual( Stem("surgidos"), "surg" );
	deepEqual( Stem("surgiendo"), "surg" );
	deepEqual( Stem("surgiera"), "surg" );
	deepEqual( Stem("surgieron"), "surg" );
	deepEqual( Stem("surgimiento"), "surgimient" );
	deepEqual( Stem("surgio"), "surgi" );
	deepEqual( Stem("surgió"), "surg" );
	deepEqual( Stem("surgir"), "surg" );
	deepEqual( Stem("surgirá"), "surg" );
	deepEqual( Stem("surgirían"), "surg" );
	deepEqual( Stem("surja"), "surj" );
	deepEqual( Stem("surjan"), "surj" );
	deepEqual( Stem("suroeste"), "suroest" );
	deepEqual( Stem("surrealista"), "surreal" );
	deepEqual( Stem("surta"), "surt" );
	deepEqual( Stem("surtido"), "surt" );
	deepEqual( Stem("surtiendo"), "surt" );
	deepEqual( Stem("surtió"), "surt" );
	deepEqual( Stem("surtir"), "surt" );
	deepEqual( Stem("sus"), "sus" );
	deepEqual( Stem("susan"), "sus" );
	deepEqual( Stem("susana"), "susan" );
	deepEqual( Stem("susceptible"), "suscept" );
	deepEqual( Stem("susceptibles"), "suscept" );
	deepEqual( Stem("suscitado"), "suscit" );
	deepEqual( Stem("suscitó"), "suscit" );
	deepEqual( Stem("suscribió"), "suscrib" );
	deepEqual( Stem("suscribir"), "suscrib" );
	deepEqual( Stem("suscripción"), "suscripcion" );
	deepEqual( Stem("suscrita"), "suscrit" );
	deepEqual( Stem("suscrito"), "suscrit" );
	deepEqual( Stem("susiflor"), "susiflor" );
	deepEqual( Stem("suspenda"), "suspend" );
	deepEqual( Stem("suspende"), "suspend" );
	deepEqual( Stem("suspenden"), "suspend" );
	deepEqual( Stem("suspender"), "suspend" );
	deepEqual( Stem("suspenderá"), "suspend" );
	deepEqual( Stem("suspenderán"), "suspend" );
	deepEqual( Stem("suspendida"), "suspend" );
	deepEqual( Stem("suspendidas"), "suspend" );
	deepEqual( Stem("suspendido"), "suspend" );
	deepEqual( Stem("suspendidos"), "suspend" );
	deepEqual( Stem("suspendiera"), "suspend" );
	deepEqual( Stem("suspendieron"), "suspend" );
	deepEqual( Stem("suspendió"), "suspend" );
	deepEqual( Stem("suspendo"), "suspend" );
	deepEqual( Stem("suspensión"), "suspension" );
	deepEqual( Stem("suspensiones"), "suspension" );
	deepEqual( Stem("suspiro"), "suspir" );
	deepEqual( Stem("sustancia"), "sustanci" );
	deepEqual( Stem("sustancial"), "sustancial" );
	deepEqual( Stem("sustancias"), "sustanci" );
	deepEqual( Stem("sustenta"), "sustent" );
	deepEqual( Stem("sustentables"), "sustent" );
	deepEqual( Stem("sustentación"), "sustent" );
	deepEqual( Stem("sustentado"), "sustent" );
	deepEqual( Stem("sustentar"), "sustent" );
	deepEqual( Stem("sustente"), "sustent" );
	deepEqual( Stem("sustento"), "sustent" );
	deepEqual( Stem("sustitución"), "sustitu" );
	deepEqual( Stem("sustituían"), "sustitu" );
	deepEqual( Stem("sustituido"), "sustitu" );
	deepEqual( Stem("sustituir"), "sustitu" );
	deepEqual( Stem("sustituirá"), "sustitu" );
	deepEqual( Stem("sustituiría"), "sustitu" );
	deepEqual( Stem("sustitutiva"), "sustitut" );
	deepEqual( Stem("sustituto"), "sustitut" );
	deepEqual( Stem("sustituyamos"), "sustitu" );
	deepEqual( Stem("sustituyan"), "sustitu" );
	deepEqual( Stem("sustituye"), "sustitu" );
	deepEqual( Stem("sustituyen"), "sustitu" );
	deepEqual( Stem("sustituyendo"), "sustitu" );
	deepEqual( Stem("sustituyó"), "sustitu" );
	deepEqual( Stem("susto"), "sust" );
	deepEqual( Stem("sustraía"), "sustr" );
	deepEqual( Stem("sustrajo"), "sustraj" );
	deepEqual( Stem("suya"), "suy" );
	deepEqual( Stem("suyas"), "suy" );
	deepEqual( Stem("suyo"), "suy" );
	deepEqual( Stem("suyos"), "suy" );
	deepEqual( Stem("svyt"), "svyt" );
	deepEqual( Stem("swahili"), "swahili" );
	deepEqual( Stem("swing"), "swing" );
	deepEqual( Stem("swycord"), "swycord" );
	deepEqual( Stem("sx"), "sx" );
	deepEqual( Stem("sybilla"), "sybill" );
	deepEqual( Stem("symington"), "symington" );
	deepEqual( Stem("system"), "system" );
	deepEqual( Stem("systems"), "systems" );
	deepEqual( Stem("szekely"), "szekely" );
	deepEqual( Stem("sznajder"), "sznajd" );
	deepEqual( Stem("t"), "t" );
	deepEqual( Stem("tabachín"), "tabachin" );
	deepEqual( Stem("tabaco"), "tabac" );
	deepEqual( Stem("tabasco"), "tabasc" );
	deepEqual( Stem("tabe"), "tab" );
	deepEqual( Stem("tabla"), "tabl" );
	deepEqual( Stem("tablante"), "tablant" );
	deepEqual( Stem("tablero"), "tabler" );
	deepEqual( Stem("tableros"), "tabler" );
	deepEqual( Stem("tablones"), "tablon" );
	deepEqual( Stem("taboada"), "tab" );
	deepEqual( Stem("tabulador"), "tabul" );
	deepEqual( Stem("tachado"), "tach" );
	deepEqual( Stem("tacho"), "tach" );
	deepEqual( Stem("tachuelas"), "tachuel" );
	deepEqual( Stem("tácita"), "tacit" );
	deepEqual( Stem("tácitamente"), "tacit" );
	deepEqual( Stem("taco"), "tac" );
	deepEqual( Stem("tacón"), "tacon" );
	deepEqual( Stem("tacos"), "tac" );
	deepEqual( Stem("táctica"), "tactic" );
	deepEqual( Stem("tácticas"), "tactic" );
	deepEqual( Stem("tácticos"), "tactic" );
	deepEqual( Stem("tacto"), "tact" );
	deepEqual( Stem("taesa"), "taes" );
	deepEqual( Stem("taffarel"), "taffarel" );
	deepEqual( Stem("tagamet"), "tagamet" );
	deepEqual( Stem("tagetes"), "taget" );
	deepEqual( Stem("taiga"), "taig" );
	deepEqual( Stem("tailandia"), "tailandi" );
	deepEqual( Stem("taiwan"), "taiw" );
	deepEqual( Stem("taiwán"), "taiwan" );
	deepEqual( Stem("taiwandeses"), "taiwandes" );
	deepEqual( Stem("tajante"), "tajant" );
	deepEqual( Stem("takatoshi"), "takatoshi" );
	deepEqual( Stem("take"), "tak" );
	deepEqual( Stem("tal"), "tal" );
	deepEqual( Stem("talada"), "tal" );
	deepEqual( Stem("taladores"), "talador" );
	deepEqual( Stem("taladro"), "taladr" );
	deepEqual( Stem("tálamo"), "talam" );
	deepEqual( Stem("talante"), "talant" );
	deepEqual( Stem("talento"), "talent" );
	deepEqual( Stem("talentos"), "talent" );
	deepEqual( Stem("talentoso"), "talent" );
	deepEqual( Stem("tales"), "tal" );
	deepEqual( Stem("talismán"), "talisman" );
	deepEqual( Stem("talla"), "tall" );
	deepEqual( Stem("tallando"), "tall" );
	deepEqual( Stem("tallar"), "tall" );
	deepEqual( Stem("taller"), "tall" );
	deepEqual( Stem("talleres"), "taller" );
	deepEqual( Stem("talón"), "talon" );
	deepEqual( Stem("talones"), "talon" );
	deepEqual( Stem("talusa"), "talus" );
	deepEqual( Stem("tamal"), "tamal" );
	deepEqual( Stem("tamaño"), "tamañ" );
	deepEqual( Stem("tamasopo"), "tamasop" );
	deepEqual( Stem("tamaulipas"), "tamaulip" );
	deepEqual( Stem("tamaulipeca"), "tamaulipec" );
	deepEqual( Stem("tamayo"), "tamay" );
	deepEqual( Stem("tambien"), "tambi" );
	deepEqual( Stem("también"), "tambien" );
	deepEqual( Stem("tambor"), "tambor" );
	deepEqual( Stem("tambores"), "tambor" );
	deepEqual( Stem("támesis"), "tamesis" );
	deepEqual( Stem("tamez"), "tamez" );
	deepEqual( Stem("tampico"), "tampic" );
	deepEqual( Stem("tampoco"), "tampoc" );
	deepEqual( Stem("tamps"), "tamps" );
	deepEqual( Stem("tan"), "tan" );
	deepEqual( Stem("tanasio"), "tanasi" );
	deepEqual( Stem("tancanhuitz"), "tancanhuitz" );
	deepEqual( Stem("tancredi"), "tancredi" );
	deepEqual( Stem("tanda"), "tand" );
	deepEqual( Stem("tane"), "tan" );
	deepEqual( Stem("tanganhuato"), "tanganhuat" );
	deepEqual( Stem("tangibles"), "tangibl" );
	deepEqual( Stem("tanque"), "tanqu" );
	deepEqual( Stem("tanques"), "tanqu" );
	deepEqual( Stem("tanta"), "tant" );
	deepEqual( Stem("tantas"), "tant" );
	deepEqual( Stem("tanto"), "tant" );
	deepEqual( Stem("tantos"), "tant" );
	deepEqual( Stem("tanzanios"), "tanzani" );
	deepEqual( Stem("tapa"), "tap" );
	deepEqual( Stem("tapacalles"), "tapacall" );
	deepEqual( Stem("tapachula"), "tapachul" );
	deepEqual( Stem("tapar"), "tap" );
	deepEqual( Stem("tapas"), "tap" );
	deepEqual( Stem("tapatía"), "tapat" );
	deepEqual( Stem("tapatías"), "tapat" );
	deepEqual( Stem("tapatío"), "tapati" );
	deepEqual( Stem("tapatíos"), "tapati" );
	deepEqual( Stem("tapete"), "tapet" );
	deepEqual( Stem("tapia"), "tapi" );
	deepEqual( Stem("tapicería"), "tapic" );
	deepEqual( Stem("tapitas"), "tapit" );
	deepEqual( Stem("tapiz"), "tapiz" );
	deepEqual( Stem("tapizados"), "tapiz" );
	deepEqual( Stem("taponaron"), "tapon" );
	deepEqual( Stem("taponeo"), "tapone" );
	deepEqual( Stem("taquería"), "taqu" );
	deepEqual( Stem("taquilla"), "taquill" );
	deepEqual( Stem("taquillas"), "taquill" );
	deepEqual( Stem("taquillera"), "taquiller" );
	deepEqual( Stem("taquillero"), "taquiller" );
	deepEqual( Stem("taquitos"), "taquit" );
	deepEqual( Stem("tarado"), "tar" );
	deepEqual( Stem("tarahumara"), "tarahum" );
	deepEqual( Stem("tarahumaras"), "tarahum" );
	deepEqual( Stem("tarasov"), "tarasov" );
	deepEqual( Stem("tarciso"), "tarcis" );
	deepEqual( Stem("tarda"), "tard" );
	deepEqual( Stem("tardamos"), "tard" );
	deepEqual( Stem("tardan"), "tard" );
	deepEqual( Stem("tardándose"), "tard" );
	deepEqual( Stem("tardanza"), "tardanz" );
	deepEqual( Stem("tardar"), "tard" );
	deepEqual( Stem("tardará"), "tard" );
	deepEqual( Stem("tardarían"), "tard" );
	deepEqual( Stem("tardaron"), "tard" );
	deepEqual( Stem("tarde"), "tard" );
	deepEqual( Stem("tardé"), "tard" );
	deepEqual( Stem("tardes"), "tard" );
	deepEqual( Stem("tardía"), "tard" );
	deepEqual( Stem("tardo"), "tard" );
	deepEqual( Stem("tardó"), "tard" );
	deepEqual( Stem("tarea"), "tare" );
	deepEqual( Stem("tareas"), "tar" );
	deepEqual( Stem("tarifa"), "tarif" );
	deepEqual( Stem("tarifario"), "tarifari" );
	deepEqual( Stem("tarifarios"), "tarifari" );
	deepEqual( Stem("tarifas"), "tarif" );
	deepEqual( Stem("tarjeta"), "tarjet" );
	deepEqual( Stem("tarjetahabientes"), "tarjetahabient" );
	deepEqual( Stem("tarjetas"), "tarjet" );
	deepEqual( Stem("tarjetón"), "tarjeton" );
	deepEqual( Stem("tartajoso"), "tartaj" );
	deepEqual( Stem("tasa"), "tas" );
	deepEqual( Stem("tasas"), "tas" );
	deepEqual( Stem("tascón"), "tascon" );
	deepEqual( Stem("tasmania"), "tasmani" );
	deepEqual( Stem("tataranietos"), "tataraniet" );
	deepEqual( Stem("tatiana"), "tatian" );
	deepEqual( Stem("tato"), "tat" );
	deepEqual( Stem("tatuajes"), "tatuaj" );
	deepEqual( Stem("tauro"), "taur" );
	deepEqual( Stem("tavares"), "tavar" );
	deepEqual( Stem("taxco"), "taxc" );
	deepEqual( Stem("taxi"), "taxi" );
	deepEqual( Stem("taxis"), "taxis" );
	deepEqual( Stem("taxista"), "taxist" );
	deepEqual( Stem("taxistas"), "taxist" );
	deepEqual( Stem("taza"), "taz" );
	deepEqual( Stem("tazas"), "taz" );
	deepEqual( Stem("tazcón"), "tazcon" );
	deepEqual( Stem("tazón"), "tazon" );
	deepEqual( Stem("tazones"), "tazon" );
	deepEqual( Stem("tcp"), "tcp" );
	deepEqual( Stem("te"), "te" );
	deepEqual( Stem("té"), "te" );
	deepEqual( Stem("teaanque"), "teaanqu" );
	deepEqual( Stem("team"), "team" );
	deepEqual( Stem("teatral"), "teatral" );
	deepEqual( Stem("teatrales"), "teatral" );
	deepEqual( Stem("teatralmente"), "teatral" );
	deepEqual( Stem("teatro"), "teatr" );
	deepEqual( Stem("teatros"), "teatr" );
	deepEqual( Stem("tec"), "tec" );
	deepEqual( Stem("tecate"), "tecat" );
	deepEqual( Stem("tech"), "tech" );
	deepEqual( Stem("techado"), "tech" );
	deepEqual( Stem("technologies"), "technologi" );
	deepEqual( Stem("technology"), "technology" );
	deepEqual( Stem("techo"), "tech" );
	deepEqual( Stem("techos"), "tech" );
	deepEqual( Stem("techumbre"), "techumbr" );
	deepEqual( Stem("tecihuatlanque"), "tecihuatlanqu" );
	deepEqual( Stem("tecla"), "tecl" );
	deepEqual( Stem("tecladista"), "teclad" );
	deepEqual( Stem("teclados"), "tecl" );
	deepEqual( Stem("técnica"), "tecnic" );
	deepEqual( Stem("técnicamente"), "tecnic" );
	deepEqual( Stem("técnicas"), "tecnic" );
	deepEqual( Stem("técnico"), "tecnic" );
	deepEqual( Stem("técnicos"), "tecnic" );
	deepEqual( Stem("tecnocracia"), "tecnocraci" );
	deepEqual( Stem("tecnócratas"), "tecnocrat" );
	deepEqual( Stem("tecnología"), "tecnolog" );
	deepEqual( Stem("tecnologías"), "tecnolog" );
	deepEqual( Stem("tecnológica"), "tecnolog" );
	deepEqual( Stem("tecnológicamente"), "tecnolog" );
	deepEqual( Stem("tecnológicas"), "tecnolog" );
	deepEqual( Stem("tecnológico"), "tecnolog" );
	deepEqual( Stem("tecnológicos"), "tecnolog" );
	deepEqual( Stem("tecos"), "tec" );
	deepEqual( Stem("tecpan"), "tecp" );
	deepEqual( Stem("tecuniapa"), "tecuniap" );
	deepEqual( Stem("teddy"), "teddy" );
	deepEqual( Stem("teddys"), "teddys" );
	deepEqual( Stem("tedioso"), "tedios" );
	deepEqual( Stem("teherán"), "teh" );
	deepEqual( Stem("tehuacan"), "tehuac" );
	deepEqual( Stem("tehuacán"), "tehuacan" );
	deepEqual( Stem("tehuitzingo"), "tehuitzing" );
	deepEqual( Stem("teissier"), "teissi" );
	deepEqual( Stem("tejado"), "tej" );
	deepEqual( Stem("tejas"), "tej" );
	deepEqual( Stem("tejeda"), "tejed" );
	deepEqual( Stem("tejido"), "tej" );
	deepEqual( Stem("tejidos"), "tej" );
	deepEqual( Stem("tel"), "tel" );
	deepEqual( Stem("tela"), "tel" );
	deepEqual( Stem("telas"), "tel" );
	deepEqual( Stem("tele"), "tel" );
	deepEqual( Stem("telecom"), "telecom" );
	deepEqual( Stem("telecomunicaciones"), "telecomun" );
	deepEqual( Stem("telefonía"), "telefon" );
	deepEqual( Stem("telefónica"), "telefon" );
	deepEqual( Stem("telefónicamente"), "telefon" );
	deepEqual( Stem("telefónicas"), "telefon" );
	deepEqual( Stem("telefónico"), "telefon" );
	deepEqual( Stem("telefónicos"), "telefon" );
	deepEqual( Stem("telefonistas"), "telefon" );
	deepEqual( Stem("teléfono"), "telefon" );
	deepEqual( Stem("teléfonos"), "telefon" );
	deepEqual( Stem("teleguía"), "telegu" );
	deepEqual( Stem("telehogares"), "telehogar" );
	deepEqual( Stem("telenovela"), "telenovel" );
	deepEqual( Stem("telenovelas"), "telenovel" );
	deepEqual( Stem("telesecundaria"), "telesecundari" );
	deepEqual( Stem("teleseries"), "teleseri" );
	deepEqual( Stem("televicine"), "televicin" );
	deepEqual( Stem("televidente"), "televident" );
	deepEqual( Stem("televidentes"), "televident" );
	deepEqual( Stem("televisa"), "televis" );
	deepEqual( Stem("televisar"), "televis" );
	deepEqual( Stem("televisión"), "television" );
	deepEqual( Stem("televisiones"), "television" );
	deepEqual( Stem("televisiva"), "televis" );
	deepEqual( Stem("televisivas"), "televis" );
	deepEqual( Stem("televisivo"), "televis" );
	deepEqual( Stem("televisivos"), "televis" );
	deepEqual( Stem("televisora"), "televisor" );
	deepEqual( Stem("telex"), "telex" );
	deepEqual( Stem("téllez"), "tellez" );
	deepEqual( Stem("tello"), "tell" );
	deepEqual( Stem("telmex"), "telmex" );
	deepEqual( Stem("teloloapan"), "teloloap" );
	deepEqual( Stem("teloloapense"), "teloloapens" );
	deepEqual( Stem("telones"), "telon" );
	deepEqual( Stem("tema"), "tem" );
	deepEqual( Stem("temas"), "tem" );
	deepEqual( Stem("temática"), "temat" );
	deepEqual( Stem("temáticas"), "temat" );
	deepEqual( Stem("temblar"), "tembl" );
	deepEqual( Stem("temblor"), "temblor" );
	deepEqual( Stem("temblores"), "temblor" );
	deepEqual( Stem("teme"), "tem" );
	deepEqual( Stem("temecula"), "temecul" );
	deepEqual( Stem("temen"), "tem" );
	deepEqual( Stem("temeraria"), "temerari" );
	deepEqual( Stem("temerariamente"), "temerari" );
	deepEqual( Stem("temerarios"), "temerari" );
	deepEqual( Stem("temeroso"), "temer" );
	deepEqual( Stem("temía"), "tem" );
	deepEqual( Stem("temible"), "temibl" );
	deepEqual( Stem("temido"), "tem" );
	deepEqual( Stem("temiendo"), "tem" );
	deepEqual( Stem("temo"), "tem" );
	deepEqual( Stem("temor"), "temor" );
	deepEqual( Stem("temores"), "temor" );
	deepEqual( Stem("témpano"), "tempan" );
	deepEqual( Stem("temperamento"), "temperament" );
	deepEqual( Stem("temperatura"), "temperatur" );
	deepEqual( Stem("temperaturas"), "temperatur" );
	deepEqual( Stem("tempestad"), "tempest" );
	deepEqual( Stem("templado"), "templ" );
	deepEqual( Stem("templados"), "templ" );
	deepEqual( Stem("temple"), "templ" );
	deepEqual( Stem("templete"), "templet" );
	deepEqual( Stem("templo"), "templ" );
	deepEqual( Stem("templos"), "templ" );
	deepEqual( Stem("temporada"), "tempor" );
	deepEqual( Stem("temporadas"), "tempor" );
	deepEqual( Stem("temporal"), "temporal" );
	deepEqual( Stem("temporales"), "temporal" );
	deepEqual( Stem("temporalmente"), "temporal" );
	deepEqual( Stem("temprana"), "tempran" );
	deepEqual( Stem("tempranamente"), "tempran" );
	deepEqual( Stem("tempranero"), "tempraner" );
	deepEqual( Stem("temprano"), "tempran" );
	deepEqual( Stem("tempranos"), "tempran" );
	deepEqual( Stem("temulento"), "temulent" );
	deepEqual( Stem("tención"), "tencion" );
	deepEqual( Stem("tendajones"), "tendajon" );
	deepEqual( Stem("tendencia"), "tendenci" );
	deepEqual( Stem("tendencias"), "tendenci" );
	deepEqual( Stem("tenderá"), "tend" );
	deepEqual( Stem("tenderán"), "tend" );
	deepEqual( Stem("tendido"), "tend" );
	deepEqual( Stem("tendientes"), "tendient" );
	deepEqual( Stem("tendimos"), "tend" );
	deepEqual( Stem("tendió"), "tend" );
	deepEqual( Stem("tendón"), "tendon" );
	deepEqual( Stem("tendrá"), "tendr" );
	deepEqual( Stem("tendrán"), "tendran" );
	deepEqual( Stem("tendré"), "tendr" );
	deepEqual( Stem("tendremos"), "tendr" );
	deepEqual( Stem("tendría"), "tendr" );
	deepEqual( Stem("tendríamos"), "tendr" );
	deepEqual( Stem("tendrían"), "tendr" );
	deepEqual( Stem("tenemos"), "ten" );
	deepEqual( Stem("tenencia"), "tenenci" );
	deepEqual( Stem("tenencias"), "tenenci" );
	deepEqual( Stem("tener"), "ten" );
	deepEqual( Stem("tenerife"), "tenerif" );
	deepEqual( Stem("tenerlas"), "ten" );
	deepEqual( Stem("tenessee"), "tenesse" );
	deepEqual( Stem("tenga"), "teng" );
	deepEqual( Stem("tengamos"), "teng" );
	deepEqual( Stem("tengan"), "teng" );
	deepEqual( Stem("tengas"), "teng" );
	deepEqual( Stem("tengo"), "teng" );
	deepEqual( Stem("tenia"), "teni" );
	deepEqual( Stem("tenía"), "ten" );
	deepEqual( Stem("teniamos"), "teni" );
	deepEqual( Stem("teníamos"), "ten" );
	deepEqual( Stem("tenían"), "ten" );
	deepEqual( Stem("tenida"), "ten" );
	deepEqual( Stem("tenido"), "ten" );
	deepEqual( Stem("teniendo"), "ten" );
	deepEqual( Stem("teniente"), "tenient" );
	deepEqual( Stem("tenis"), "tenis" );
	deepEqual( Stem("tenistas"), "tenist" );
	deepEqual( Stem("tenístico"), "tenist" );
	deepEqual( Stem("tennessee"), "tennesse" );
	deepEqual( Stem("tenochtitlan"), "tenochtitl" );
	deepEqual( Stem("tenor"), "tenor" );
	deepEqual( Stem("tensa"), "tens" );
	deepEqual( Stem("tensión"), "tension" );
	deepEqual( Stem("tensiones"), "tension" );
	deepEqual( Stem("tentación"), "tentacion" );
	deepEqual( Stem("tentativa"), "tentat" );
	deepEqual( Stem("teo"), "teo" );
	deepEqual( Stem("teodora"), "teodor" );
	deepEqual( Stem("teodoro"), "teodor" );
	deepEqual( Stem("teología"), "teolog" );
	deepEqual( Stem("teólogos"), "teolog" );
	deepEqual( Stem("teoría"), "teor" );
	deepEqual( Stem("teorías"), "teor" );
	deepEqual( Stem("teórica"), "teoric" );
	deepEqual( Stem("teóricamente"), "teoric" );
	deepEqual( Stem("teóricas"), "teoric" );
	deepEqual( Stem("teóricos"), "teoric" );
	deepEqual( Stem("tepanco"), "tepanc" );
	deepEqual( Stem("tepatitlán"), "tepatitlan" );
	deepEqual( Stem("tepeaca"), "tepeac" );
	deepEqual( Stem("tepehuanes"), "tepehuan" );
	deepEqual( Stem("tepeyac"), "tepeyac" );
	deepEqual( Stem("tepic"), "tepic" );
	deepEqual( Stem("tepochcalli"), "tepochcalli" );
	deepEqual( Stem("tepozotlán"), "tepozotlan" );
	deepEqual( Stem("tequila"), "tequil" );
	deepEqual( Stem("tequisquiápan"), "tequisquiap" );
	deepEqual( Stem("terán"), "teran" );
	deepEqual( Stem("terapéuticas"), "terapeut" );
	deepEqual( Stem("terapéuticos"), "terapeut" );
	deepEqual( Stem("terapia"), "terapi" );
	deepEqual( Stem("terapias"), "terapi" );
	deepEqual( Stem("tercer"), "terc" );
	deepEqual( Stem("tercera"), "tercer" );
	deepEqual( Stem("terceras"), "tercer" );
	deepEqual( Stem("tercero"), "tercer" );
	deepEqual( Stem("terceros"), "tercer" );
	deepEqual( Stem("tercia"), "terci" );
	deepEqual( Stem("tercias"), "terci" );
	deepEqual( Stem("tercio"), "terci" );
	deepEqual( Stem("terciopelo"), "terciopel" );
	deepEqual( Stem("tercios"), "terci" );
	deepEqual( Stem("teresa"), "teres" );
	deepEqual( Stem("tergiversado"), "tergivers" );
	deepEqual( Stem("termes"), "term" );
	deepEqual( Stem("térmica"), "termic" );
	deepEqual( Stem("térmicas"), "termic" );
	deepEqual( Stem("termina"), "termin" );
	deepEqual( Stem("terminación"), "termin" );
	deepEqual( Stem("terminaciones"), "termin" );
	deepEqual( Stem("terminada"), "termin" );
	deepEqual( Stem("terminadas"), "termin" );
	deepEqual( Stem("terminado"), "termin" );
	deepEqual( Stem("terminados"), "termin" );
	deepEqual( Stem("terminal"), "terminal" );
	deepEqual( Stem("terminales"), "terminal" );
	deepEqual( Stem("terminamos"), "termin" );
	deepEqual( Stem("terminan"), "termin" );
	deepEqual( Stem("terminando"), "termin" );
	deepEqual( Stem("terminar"), "termin" );
	deepEqual( Stem("terminará"), "termin" );
	deepEqual( Stem("terminarán"), "termin" );
	deepEqual( Stem("terminaría"), "termin" );
	deepEqual( Stem("terminarían"), "termin" );
	deepEqual( Stem("terminarlo"), "termin" );
	deepEqual( Stem("terminaron"), "termin" );
	deepEqual( Stem("terminarse"), "termin" );
	deepEqual( Stem("terminator"), "terminator" );
	deepEqual( Stem("termine"), "termin" );
	deepEqual( Stem("terminemos"), "termin" );
	deepEqual( Stem("terminen"), "termin" );
	deepEqual( Stem("termino"), "termin" );
	deepEqual( Stem("término"), "termin" );
	deepEqual( Stem("terminó"), "termin" );
	deepEqual( Stem("terminología"), "terminolog" );
	deepEqual( Stem("términos"), "termin" );
	deepEqual( Stem("termómetro"), "termometr" );
	deepEqual( Stem("terna"), "tern" );
	deepEqual( Stem("ternura"), "ternur" );
	deepEqual( Stem("térprete"), "terpret" );
	deepEqual( Stem("terracota"), "terracot" );
	deepEqual( Stem("terranova"), "terranov" );
	deepEqual( Stem("terrateniente"), "terratenient" );
	deepEqual( Stem("terratenientes"), "terratenient" );
	deepEqual( Stem("terrazas"), "terraz" );
	deepEqual( Stem("terremoto"), "terremot" );
	deepEqual( Stem("terrenales"), "terrenal" );
	deepEqual( Stem("terreno"), "terren" );
	deepEqual( Stem("terrenos"), "terren" );
	deepEqual( Stem("terrestre"), "terrestr" );
	deepEqual( Stem("terrible"), "terribl" );
	deepEqual( Stem("terribles"), "terribl" );
	deepEqual( Stem("territorial"), "territorial" );
	deepEqual( Stem("territorio"), "territori" );
	deepEqual( Stem("territorios"), "territori" );
	deepEqual( Stem("terror"), "terror" );
	deepEqual( Stem("terrorismo"), "terror" );
	deepEqual( Stem("terrorista"), "terror" );
	deepEqual( Stem("terroristas"), "terror" );
	deepEqual( Stem("terry"), "terry" );
	deepEqual( Stem("tés"), "tes" );
	deepEqual( Stem("tesis"), "tesis" );
	deepEqual( Stem("tésis"), "tesis" );
	deepEqual( Stem("tesitura"), "tesitur" );
	deepEqual( Stem("tesorería"), "tesor" );
	deepEqual( Stem("tesorero"), "tesorer" );
	deepEqual( Stem("tesoreros"), "tesorer" );
	deepEqual( Stem("tesoro"), "tesor" );
	deepEqual( Stem("tesoros"), "tesor" );
	deepEqual( Stem("testigo"), "testig" );
	deepEqual( Stem("testigos"), "testig" );
	deepEqual( Stem("testimonial"), "testimonial" );
	deepEqual( Stem("testimoniar"), "testimoni" );
	deepEqual( Stem("testimonio"), "testimoni" );
	deepEqual( Stem("testimonios"), "testimoni" );
	deepEqual( Stem("testosterona"), "testosteron" );
	deepEqual( Stem("tetela"), "tetel" );
	deepEqual( Stem("tetramestres"), "tetramestr" );
	deepEqual( Stem("texana"), "texan" );
	deepEqual( Stem("texano"), "texan" );
	deepEqual( Stem("texanos"), "texan" );
	deepEqual( Stem("texas"), "tex" );
	deepEqual( Stem("texcoco"), "texcoc" );
	deepEqual( Stem("textil"), "textil" );
	deepEqual( Stem("textilera"), "textiler" );
	deepEqual( Stem("textiles"), "textil" );
	deepEqual( Stem("texto"), "text" );
	deepEqual( Stem("textos"), "text" );
	deepEqual( Stem("textualmente"), "textual" );
	deepEqual( Stem("texturas"), "textur" );
	deepEqual( Stem("tez"), "tez" );
	deepEqual( Stem("tezoyuca"), "tezoyuc" );
	deepEqual( Stem("the"), "the" );
	deepEqual( Stem("thelonius"), "thelonius" );
	deepEqual( Stem("theodore"), "theodor" );
	deepEqual( Stem("therese"), "theres" );
	deepEqual( Stem("thiner"), "thin" );
	deepEqual( Stem("things"), "things" );
	deepEqual( Stem("thomas"), "thom" );
	deepEqual( Stem("thompson"), "thompson" );
	deepEqual( Stem("thomson"), "thomson" );
	deepEqual( Stem("thorn"), "thorn" );
	deepEqual( Stem("three"), "thre" );
	deepEqual( Stem("thriller"), "thrill" );
	deepEqual( Stem("thurlow"), "thurlow" );
	deepEqual( Stem("thurman"), "thurm" );
	deepEqual( Stem("ti"), "ti" );
	deepEqual( Stem("tía"), "tia" );
	deepEqual( Stem("tianguis"), "tianguis" );
	deepEqual( Stem("tías"), "tias" );
	deepEqual( Stem("tiberio"), "tiberi" );
	deepEqual( Stem("tibet"), "tibet" );
	deepEqual( Stem("tibio"), "tibi" );
	deepEqual( Stem("tichavski"), "tichavski" );
	deepEqual( Stem("ticktin"), "ticktin" );
	deepEqual( Stem("tiempecito"), "tiempecit" );
	deepEqual( Stem("tiempo"), "tiemp" );
	deepEqual( Stem("tiempos"), "tiemp" );
	deepEqual( Stem("tienda"), "tiend" );
	deepEqual( Stem("tiendas"), "tiend" );
	deepEqual( Stem("tiende"), "tiend" );
	deepEqual( Stem("tienden"), "tiend" );
	deepEqual( Stem("tiene"), "tien" );
	deepEqual( Stem("tienen"), "tien" );
	deepEqual( Stem("tienes"), "tien" );
	deepEqual( Stem("tienta"), "tient" );
	deepEqual( Stem("tiernamente"), "tiern" );
	deepEqual( Stem("tierra"), "tierr" );
	deepEqual( Stem("tierras"), "tierr" );
	deepEqual( Stem("tigre"), "tigr" );
	deepEqual( Stem("tigres"), "tigr" );
	deepEqual( Stem("tigrillas"), "tigrill" );
	deepEqual( Stem("tigrillos"), "tigrill" );
	deepEqual( Stem("tijerina"), "tijerin" );
	deepEqual( Stem("tijuana"), "tijuan" );
	deepEqual( Stem("tijuanenses"), "tijuanens" );
	deepEqual( Stem("tildar"), "tild" );
	deepEqual( Stem("tim"), "tim" );
	deepEqual( Stem("timbiriche"), "timbirich" );
	deepEqual( Stem("timbre"), "timbr" );
	deepEqual( Stem("timbres"), "timbr" );
	deepEqual( Stem("time"), "tim" );
	deepEqual( Stem("times"), "tim" );
	deepEqual( Stem("tímida"), "tim" );
	deepEqual( Stem("tímidamente"), "timid" );
	deepEqual( Stem("tímido"), "tim" );
	deepEqual( Stem("timón"), "timon" );
	deepEqual( Stem("timonel"), "timonel" );
	deepEqual( Stem("timorato"), "timorat" );
	deepEqual( Stem("timoteo"), "timote" );
	deepEqual( Stem("timothy"), "timothy" );
	deepEqual( Stem("tino"), "tin" );
	deepEqual( Stem("tinta"), "tint" );
	deepEqual( Stem("tintas"), "tint" );
	deepEqual( Stem("tinto"), "tint" );
	deepEqual( Stem("tío"), "tio" );
	deepEqual( Stem("tíos"), "tios" );
	deepEqual( Stem("tiosulfato"), "tiosulfat" );
	deepEqual( Stem("típicamente"), "tipic" );
	deepEqual( Stem("típico"), "tipic" );
	deepEqual( Stem("típicos"), "tipic" );
	deepEqual( Stem("tipifica"), "tipif" );
	deepEqual( Stem("tipo"), "tip" );
	deepEqual( Stem("tipos"), "tip" );
	deepEqual( Stem("tips"), "tips" );
	deepEqual( Stem("tira"), "tir" );
	deepEqual( Stem("tirada"), "tir" );
	deepEqual( Stem("tiradero"), "tirader" );
	deepEqual( Stem("tiraderos"), "tirader" );
	deepEqual( Stem("tirado"), "tir" );
	deepEqual( Stem("tirados"), "tir" );
	deepEqual( Stem("tirando"), "tir" );
	deepEqual( Stem("tiránica"), "tiran" );
	deepEqual( Stem("tirantes"), "tirant" );
	deepEqual( Stem("tirar"), "tir" );
	deepEqual( Stem("tirarán"), "tir" );
	deepEqual( Stem("tirarlos"), "tir" );
	deepEqual( Stem("tiras"), "tir" );
	deepEqual( Stem("tire"), "tir" );
	deepEqual( Stem("tiro"), "tir" );
	deepEqual( Stem("tiró"), "tir" );
	deepEqual( Stem("tiroideas"), "tiroid" );
	deepEqual( Stem("tiroides"), "tiroid" );
	deepEqual( Stem("tiros"), "tir" );
	deepEqual( Stem("tiroteo"), "tirote" );
	deepEqual( Stem("tiroteos"), "tirote" );
	deepEqual( Stem("tirzo"), "tirz" );
	deepEqual( Stem("tisa"), "tis" );
	deepEqual( Stem("titanic"), "titanic" );
	deepEqual( Stem("titanica"), "titan" );
	deepEqual( Stem("titánica"), "titan" );
	deepEqual( Stem("titanio"), "titani" );
	deepEqual( Stem("titipuchal"), "titipuchal" );
	deepEqual( Stem("tito"), "tit" );
	deepEqual( Stem("titula"), "titul" );
	deepEqual( Stem("titulada"), "titul" );
	deepEqual( Stem("titulado"), "titul" );
	deepEqual( Stem("titular"), "titul" );
	deepEqual( Stem("titulares"), "titular" );
	deepEqual( Stem("titularidad"), "titular" );
	deepEqual( Stem("título"), "titul" );
	deepEqual( Stem("tituló"), "titul" );
	deepEqual( Stem("títulos"), "titul" );
	deepEqual( Stem("tixkokob"), "tixkokob" );
	deepEqual( Stem("tlacamécatl"), "tlacamecatl" );
	deepEqual( Stem("tlacotepec"), "tlacotepec" );
	deepEqual( Stem("tlahuapán"), "tlahuapan" );
	deepEqual( Stem("tlalchapa"), "tlalchap" );
	deepEqual( Stem("tlalpan"), "tlalp" );
	deepEqual( Stem("tlaltenango"), "tlaltenang" );
	deepEqual( Stem("tlamacazques"), "tlamacazqu" );
	deepEqual( Stem("tlatelolco"), "tlatelolc" );
	deepEqual( Stem("tlatlahuquitepec"), "tlatlahuquitepec" );
	deepEqual( Stem("tlatoani"), "tlatoani" );
	deepEqual( Stem("tlatoanis"), "tlatoanis" );
	deepEqual( Stem("tlaxcala"), "tlaxcal" );
	deepEqual( Stem("tlaxcalteca"), "tlaxcaltec" );
	deepEqual( Stem("tlaxcaltecas"), "tlaxcaltec" );
	deepEqual( Stem("tlc"), "tlc" );
	deepEqual( Stem("to"), "to" );
	deepEqual( Stem("tobías"), "tob" );
	deepEqual( Stem("tobillo"), "tobill" );
	deepEqual( Stem("toca"), "toc" );
	deepEqual( Stem("tocaba"), "toc" );
	deepEqual( Stem("tocaban"), "toc" );
	deepEqual( Stem("tocado"), "toc" );
	deepEqual( Stem("tocan"), "toc" );
	deepEqual( Stem("tocar"), "toc" );
	deepEqual( Stem("tocará"), "toc" );
	deepEqual( Stem("tocarán"), "toc" );
	deepEqual( Stem("tocarle"), "toc" );
	deepEqual( Stem("tocco"), "tocc" );
	deepEqual( Stem("tocó"), "toc" );
	deepEqual( Stem("toda"), "tod" );
	deepEqual( Stem("todas"), "tod" );
	deepEqual( Stem("todavía"), "todav" );
	deepEqual( Stem("todd"), "todd" );
	deepEqual( Stem("todo"), "tod" );
	deepEqual( Stem("todos"), "tod" );
	deepEqual( Stem("toilette"), "toilett" );
	deepEqual( Stem("toji"), "toji" );
	deepEqual( Stem("tokio"), "toki" );
	deepEqual( Stem("toledo"), "toled" );
	deepEqual( Stem("tolerada"), "toler" );
	deepEqual( Stem("tolerancia"), "toler" );
	deepEqual( Stem("tolerando"), "toler" );
	deepEqual( Stem("tolerante"), "toler" );
	deepEqual( Stem("tolerantes"), "toler" );
	deepEqual( Stem("tolerarse"), "toler" );
	deepEqual( Stem("toletero"), "toleter" );
	deepEqual( Stem("toluca"), "toluc" );
	deepEqual( Stem("tom"), "tom" );
	deepEqual( Stem("toma"), "tom" );
	deepEqual( Stem("tomaba"), "tom" );
	deepEqual( Stem("tomaban"), "tom" );
	deepEqual( Stem("tomada"), "tom" );
	deepEqual( Stem("tomadas"), "tom" );
	deepEqual( Stem("tomado"), "tom" );
	deepEqual( Stem("tomadores"), "tomador" );
	deepEqual( Stem("tomados"), "tom" );
	deepEqual( Stem("toman"), "tom" );
	deepEqual( Stem("tomando"), "tom" );
	deepEqual( Stem("tomándola"), "tom" );
	deepEqual( Stem("tomar"), "tom" );
	deepEqual( Stem("tomara"), "tom" );
	deepEqual( Stem("tomará"), "tom" );
	deepEqual( Stem("tomaran"), "tom" );
	deepEqual( Stem("tomarán"), "tom" );
	deepEqual( Stem("tomaría"), "tom" );
	deepEqual( Stem("tomarían"), "tom" );
	deepEqual( Stem("tomarla"), "tom" );
	deepEqual( Stem("tomarle"), "tom" );
	deepEqual( Stem("tomarlo"), "tom" );
	deepEqual( Stem("tomarnos"), "tom" );
	deepEqual( Stem("tomaron"), "tom" );
	deepEqual( Stem("tomarse"), "tom" );
	deepEqual( Stem("tomas"), "tom" );
	deepEqual( Stem("tomás"), "tomas" );
	deepEqual( Stem("tomate"), "tomat" );
	deepEqual( Stem("tome"), "tom" );
	deepEqual( Stem("tomé"), "tom" );
	deepEqual( Stem("tomemos"), "tom" );
	deepEqual( Stem("tomen"), "tom" );
	deepEqual( Stem("tómese"), "tomes" );
	deepEqual( Stem("tomlinson"), "tomlinson" );
	deepEqual( Stem("tomo"), "tom" );
	deepEqual( Stem("tomó"), "tom" );
	deepEqual( Stem("tona"), "ton" );
	deepEqual( Stem("tonada"), "ton" );
	deepEqual( Stem("tonalidades"), "tonal" );
	deepEqual( Stem("tonelada"), "tonel" );
	deepEqual( Stem("toneladas"), "tonel" );
	deepEqual( Stem("tonelaje"), "tonelaj" );
	deepEqual( Stem("tónica"), "tonic" );
	deepEqual( Stem("tónicos"), "tonic" );
	deepEqual( Stem("toninho"), "toninh" );
	deepEqual( Stem("tono"), "ton" );
	deepEqual( Stem("toño"), "toñ" );
	deepEqual( Stem("tontería"), "tont" );
	deepEqual( Stem("tonto"), "tont" );
	deepEqual( Stem("tontos"), "tont" );
	deepEqual( Stem("tony"), "tony" );
	deepEqual( Stem("toole"), "tool" );
	deepEqual( Stem("topa"), "top" );
	deepEqual( Stem("toparon"), "top" );
	deepEqual( Stem("toparse"), "top" );
	deepEqual( Stem("topaz"), "topaz" );
	deepEqual( Stem("tope"), "top" );
	deepEqual( Stem("topes"), "top" );
	deepEqual( Stem("topete"), "topet" );
	deepEqual( Stem("topeteaba"), "topet" );
	deepEqual( Stem("topia"), "topi" );
	deepEqual( Stem("tópico"), "topic" );
	deepEqual( Stem("tópicos"), "topic" );
	deepEqual( Stem("topo"), "top" );
	deepEqual( Stem("topografía"), "topograf" );
	deepEqual( Stem("topologías"), "topolog" );
	deepEqual( Stem("toque"), "toqu" );
	deepEqual( Stem("toques"), "toqu" );
	deepEqual( Stem("toqui"), "toqui" );
	deepEqual( Stem("torá"), "tor" );
	deepEqual( Stem("tórax"), "torax" );
	deepEqual( Stem("torcer"), "torc" );
	deepEqual( Stem("toreado"), "tor" );
	deepEqual( Stem("toreados"), "tor" );
	deepEqual( Stem("toreándolo"), "tor" );
	deepEqual( Stem("torear"), "tor" );
	deepEqual( Stem("toreara"), "tor" );
	deepEqual( Stem("torearlo"), "tor" );
	deepEqual( Stem("toreó"), "tore" );
	deepEqual( Stem("torero"), "torer" );
	deepEqual( Stem("toreros"), "torer" );
	deepEqual( Stem("torio"), "tori" );
	deepEqual( Stem("tormenta"), "torment" );
	deepEqual( Stem("tormentas"), "torment" );
	deepEqual( Stem("tornado"), "torn" );
	deepEqual( Stem("tornados"), "torn" );
	deepEqual( Stem("tornar"), "torn" );
	deepEqual( Stem("tornen"), "torn" );
	deepEqual( Stem("torneo"), "torne" );
	deepEqual( Stem("torneos"), "torne" );
	deepEqual( Stem("tornillo"), "tornill" );
	deepEqual( Stem("tornillos"), "tornill" );
	deepEqual( Stem("torniquete"), "torniquet" );
	deepEqual( Stem("torno"), "torn" );
	deepEqual( Stem("toro"), "tor" );
	deepEqual( Stem("toronto"), "toront" );
	deepEqual( Stem("toros"), "tor" );
	deepEqual( Stem("torpedearon"), "torped" );
	deepEqual( Stem("torpeza"), "torpez" );
	deepEqual( Stem("torrado"), "torr" );
	deepEqual( Stem("torralba"), "torralb" );
	deepEqual( Stem("torre"), "torr" );
	deepEqual( Stem("torrencial"), "torrencial" );
	deepEqual( Stem("torrenciales"), "torrencial" );
	deepEqual( Stem("torrente"), "torrent" );
	deepEqual( Stem("torreon"), "torreon" );
	deepEqual( Stem("torreón"), "torreon" );
	deepEqual( Stem("torres"), "torr" );
	deepEqual( Stem("torrescano"), "torrescan" );
	deepEqual( Stem("torresmochas"), "torresmoch" );
	deepEqual( Stem("torricelli"), "torricelli" );
	deepEqual( Stem("tortícolis"), "torticolis" );
	deepEqual( Stem("tortilla"), "tortill" );
	deepEqual( Stem("tortillas"), "tortill" );
	deepEqual( Stem("tortillero"), "tortiller" );
	deepEqual( Stem("tortuga"), "tortug" );
	deepEqual( Stem("tortugueras"), "tortuguer" );
	deepEqual( Stem("tortuguismo"), "tortugu" );
	deepEqual( Stem("torturados"), "tortur" );
	deepEqual( Stem("torturaron"), "tortur" );
	deepEqual( Stem("torturas"), "tortur" );
	deepEqual( Stem("torturoso"), "tortur" );
	deepEqual( Stem("tos"), "tos" );
	deepEqual( Stem("toscano"), "toscan" );
	deepEqual( Stem("tosferina"), "tosferin" );
	deepEqual( Stem("tostado"), "tost" );
	deepEqual( Stem("tota"), "tot" );
	deepEqual( Stem("total"), "total" );
	deepEqual( Stem("totales"), "total" );
	deepEqual( Stem("totalidad"), "total" );
	deepEqual( Stem("totalizó"), "totaliz" );
	deepEqual( Stem("totalmente"), "total" );
	deepEqual( Stem("totopos"), "totop" );
	deepEqual( Stem("tottenham"), "tottenham" );
	deepEqual( Stem("touché"), "touch" );
	deepEqual( Stem("tour"), "tour" );
	deepEqual( Stem("tovar"), "tov" );
	deepEqual( Stem("tóxica"), "toxic" );
	deepEqual( Stem("tóxicas"), "toxic" );
	deepEqual( Stem("tóxicos"), "toxic" );
	deepEqual( Stem("toyota"), "toyot" );
	deepEqual( Stem("tpc"), "tpc" );
	deepEqual( Stem("tqm"), "tqm" );
	deepEqual( Stem("trabado"), "trab" );
	deepEqual( Stem("trabaja"), "trabaj" );
	deepEqual( Stem("trabajaba"), "trabaj" );
	deepEqual( Stem("trabajaban"), "trabaj" );
	deepEqual( Stem("trabajada"), "trabaj" );
	deepEqual( Stem("trabajado"), "trabaj" );
	deepEqual( Stem("trabajador"), "trabaj" );
	deepEqual( Stem("trabajadora"), "trabaj" );
	deepEqual( Stem("trabajadoras"), "trabaj" );
	deepEqual( Stem("trabajadores"), "trabaj" );
	deepEqual( Stem("trabajamos"), "trabaj" );
	deepEqual( Stem("trabajan"), "trabaj" );
	deepEqual( Stem("trabajando"), "trabaj" );
	deepEqual( Stem("trabajar"), "trabaj" );
	deepEqual( Stem("trabajara"), "trabaj" );
	deepEqual( Stem("trabajará"), "trabaj" );
	deepEqual( Stem("trabajarán"), "trabaj" );
	deepEqual( Stem("trabajaron"), "trabaj" );
	deepEqual( Stem("trabajemos"), "trabaj" );
	deepEqual( Stem("trabajen"), "trabaj" );
	deepEqual( Stem("trabajo"), "trabaj" );
	deepEqual( Stem("trabajó"), "trabaj" );
	deepEqual( Stem("trabajos"), "trabaj" );
	deepEqual( Stem("trabas"), "trab" );
	deepEqual( Stem("trabó"), "trab" );
	deepEqual( Stem("tracción"), "traccion" );
	deepEqual( Stem("tracen"), "trac" );
	deepEqual( Stem("track"), "track" );
	deepEqual( Stem("tractor"), "tractor" );
	deepEqual( Stem("tradición"), "tradicion" );
	deepEqual( Stem("tradicional"), "tradicional" );
	deepEqual( Stem("tradicionales"), "tradicional" );
	deepEqual( Stem("tradicionalmente"), "tradicional" );
	deepEqual( Stem("tradiciones"), "tradicion" );
	deepEqual( Stem("traducción"), "traduccion" );
	deepEqual( Stem("traducciones"), "traduccion" );
	deepEqual( Stem("traduce"), "traduc" );
	deepEqual( Stem("traducida"), "traduc" );
	deepEqual( Stem("traducido"), "traduc" );
	deepEqual( Stem("traducidos"), "traduc" );
	deepEqual( Stem("traducir"), "traduc" );
	deepEqual( Stem("traduciría"), "traduc" );
	deepEqual( Stem("traducirse"), "traduc" );
	deepEqual( Stem("tradujo"), "traduj" );
	deepEqual( Stem("trae"), "tra" );
	deepEqual( Stem("traemos"), "tra" );
	deepEqual( Stem("traen"), "tra" );
	deepEqual( Stem("traer"), "tra" );
	deepEqual( Stem("traerá"), "tra" );
	deepEqual( Stem("traerán"), "tra" );
	deepEqual( Stem("traeré"), "tra" );
	deepEqual( Stem("traería"), "tra" );
	deepEqual( Stem("traerla"), "tra" );
	deepEqual( Stem("traernos"), "tra" );
	deepEqual( Stem("traes"), "tra" );
	deepEqual( Stem("traficante"), "trafic" );
	deepEqual( Stem("trafico"), "trafic" );
	deepEqual( Stem("tráfico"), "trafic" );
	deepEqual( Stem("tragar"), "trag" );
	deepEqual( Stem("tragarse"), "trag" );
	deepEqual( Stem("tragedia"), "tragedi" );
	deepEqual( Stem("trágica"), "tragic" );
	deepEqual( Stem("trágico"), "tragic" );
	deepEqual( Stem("tragó"), "trag" );
	deepEqual( Stem("tragos"), "trag" );
	deepEqual( Stem("trague"), "trag" );
	deepEqual( Stem("traía"), "tra" );
	deepEqual( Stem("traían"), "tra" );
	deepEqual( Stem("traición"), "traicion" );
	deepEqual( Stem("traicionado"), "traicion" );
	deepEqual( Stem("traicionados"), "traicion" );
	deepEqual( Stem("traidor"), "traidor" );
	deepEqual( Stem("traídos"), "traid" );
	deepEqual( Stem("traiga"), "traig" );
	deepEqual( Stem("traigan"), "traig" );
	deepEqual( Stem("traigo"), "traig" );
	deepEqual( Stem("trailer"), "trail" );
	deepEqual( Stem("trailero"), "trailer" );
	deepEqual( Stem("traileros"), "trailer" );
	deepEqual( Stem("trailers"), "trailers" );
	deepEqual( Stem("traje"), "traj" );
	deepEqual( Stem("trajeron"), "trajeron" );
	deepEqual( Stem("trajes"), "traj" );
	deepEqual( Stem("trajo"), "traj" );
	deepEqual( Stem("trama"), "tram" );
	deepEqual( Stem("tramitación"), "tramit" );
	deepEqual( Stem("tramitando"), "tramit" );
	deepEqual( Stem("tramitar"), "tramit" );
	deepEqual( Stem("trámite"), "tramit" );
	deepEqual( Stem("trámites"), "tramit" );
	deepEqual( Stem("tramitó"), "tramit" );
	deepEqual( Stem("tramitología"), "tramitolog" );
	deepEqual( Stem("tramo"), "tram" );
	deepEqual( Stem("tramos"), "tram" );
	deepEqual( Stem("trampa"), "tramp" );
	deepEqual( Stem("trampas"), "tramp" );
	deepEqual( Stem("tramposo"), "trampos" );
	deepEqual( Stem("trancas"), "tranc" );
	deepEqual( Stem("trancazo"), "trancaz" );
	deepEqual( Stem("trance"), "tranc" );
	deepEqual( Stem("tranquila"), "tranquil" );
	deepEqual( Stem("tranquilamente"), "tranquil" );
	deepEqual( Stem("tranquilas"), "tranquil" );
	deepEqual( Stem("tranquilidad"), "tranquil" );
	deepEqual( Stem("tranquilizara"), "tranquiliz" );
	deepEqual( Stem("tranquilizarlo"), "tranquiliz" );
	deepEqual( Stem("tranquilizó"), "tranquiliz" );
	deepEqual( Stem("tranquilo"), "tranquil" );
	deepEqual( Stem("tranquilos"), "tranquil" );
	deepEqual( Stem("trans"), "trans" );
	deepEqual( Stem("transa"), "trans" );
	deepEqual( Stem("transacción"), "transaccion" );
	deepEqual( Stem("transacciones"), "transaccion" );
	deepEqual( Stem("transamos"), "trans" );
	deepEqual( Stem("transborda"), "transbord" );
	deepEqual( Stem("transbordador"), "transbord" );
	deepEqual( Stem("transbordadores"), "transbord" );
	deepEqual( Stem("transbordar"), "transbord" );
	deepEqual( Stem("transbordo"), "transbord" );
	deepEqual( Stem("transcribe"), "transcrib" );
	deepEqual( Stem("transcurra"), "transcurr" );
	deepEqual( Stem("transcurrido"), "transcurr" );
	deepEqual( Stem("transcurridos"), "transcurr" );
	deepEqual( Stem("transcurriendo"), "transcurr" );
	deepEqual( Stem("transcurrieron"), "transcurr" );
	deepEqual( Stem("transcurrir"), "transcurr" );
	deepEqual( Stem("transcurso"), "transcurs" );
	deepEqual( Stem("transero"), "transer" );
	deepEqual( Stem("transeros"), "transer" );
	deepEqual( Stem("transeúnte"), "transeunt" );
	deepEqual( Stem("transeúntes"), "transeunt" );
	deepEqual( Stem("transexual"), "transexual" );
	deepEqual( Stem("transexuales"), "transexual" );
	deepEqual( Stem("transferencia"), "transferent" );
	deepEqual( Stem("transferencias"), "transferent" );
	deepEqual( Stem("transferir"), "transfer" );
	deepEqual( Stem("transfieren"), "transfier" );
	deepEqual( Stem("transfirió"), "transfir" );
	deepEqual( Stem("transformación"), "transform" );
	deepEqual( Stem("transformaciones"), "transform" );
	deepEqual( Stem("transformado"), "transform" );
	deepEqual( Stem("transformador"), "transform" );
	deepEqual( Stem("transforman"), "transform" );
	deepEqual( Stem("transformando"), "transform" );
	deepEqual( Stem("transformar"), "transform" );
	deepEqual( Stem("transformaren"), "transformar" );
	deepEqual( Stem("transformaría"), "transform" );
	deepEqual( Stem("transformaron"), "transform" );
	deepEqual( Stem("transformarse"), "transform" );
	deepEqual( Stem("transfronterizas"), "transfronteriz" );
	deepEqual( Stem("transfusiones"), "transfusion" );
	deepEqual( Stem("transición"), "transicion" );
	deepEqual( Stem("transija"), "transij" );
	deepEqual( Stem("transita"), "transit" );
	deepEqual( Stem("transitaban"), "transit" );
	deepEqual( Stem("transitada"), "transit" );
	deepEqual( Stem("transitado"), "transit" );
	deepEqual( Stem("transitados"), "transit" );
	deepEqual( Stem("transitar"), "transit" );
	deepEqual( Stem("transitará"), "transit" );
	deepEqual( Stem("transitarán"), "transit" );
	deepEqual( Stem("tránsito"), "transit" );
	deepEqual( Stem("transitó"), "transit" );
	deepEqual( Stem("transitorio"), "transitori" );
	deepEqual( Stem("transmisión"), "transmision" );
	deepEqual( Stem("transmisiones"), "transmision" );
	deepEqual( Stem("transmita"), "transmit" );
	deepEqual( Stem("transmitan"), "transmit" );
	deepEqual( Stem("transmite"), "transmit" );
	deepEqual( Stem("transmiten"), "transmit" );
	deepEqual( Stem("transmitida"), "transmit" );
	deepEqual( Stem("transmitido"), "transmit" );
	deepEqual( Stem("transmitieran"), "transmit" );
	deepEqual( Stem("transmitieron"), "transmit" );
	deepEqual( Stem("transmitir"), "transmit" );
	deepEqual( Stem("transmitirá"), "transmit" );
	deepEqual( Stem("transmitirán"), "transmit" );
	deepEqual( Stem("transnacional"), "transnacional" );
	deepEqual( Stem("transnacionales"), "transnacional" );
	deepEqual( Stem("transparencia"), "transparent" );
	deepEqual( Stem("transparentar"), "transparent" );
	deepEqual( Stem("transparentarse"), "transparent" );
	deepEqual( Stem("transparente"), "transparent" );
	deepEqual( Stem("transparentes"), "transparent" );
	deepEqual( Stem("transpeninsular"), "transpeninsul" );
	deepEqual( Stem("transport"), "transport" );
	deepEqual( Stem("transporta"), "transport" );
	deepEqual( Stem("transportaba"), "transport" );
	deepEqual( Stem("transportaban"), "transport" );
	deepEqual( Stem("transportación"), "transport" );
	deepEqual( Stem("transportaciones"), "transport" );
	deepEqual( Stem("transportada"), "transport" );
	deepEqual( Stem("transportadoras"), "transport" );
	deepEqual( Stem("transportan"), "transport" );
	deepEqual( Stem("transportando"), "transport" );
	deepEqual( Stem("transportar"), "transport" );
	deepEqual( Stem("transportaría"), "transport" );
	deepEqual( Stem("transportarse"), "transport" );
	deepEqual( Stem("transporte"), "transport" );
	deepEqual( Stem("transportes"), "transport" );
	deepEqual( Stem("transportista"), "transport" );
	deepEqual( Stem("transportistas"), "transport" );
	deepEqual( Stem("transversales"), "transversal" );
	deepEqual( Stem("tranvías"), "tranv" );
	deepEqual( Stem("trapeadores"), "trapeador" );
	deepEqual( Stem("trapeas"), "trap" );
	deepEqual( Stem("tras"), "tras" );
	deepEqual( Stem("trasatlántico"), "trasatlant" );
	deepEqual( Stem("trascendencia"), "trascendent" );
	deepEqual( Stem("trascendental"), "trascendental" );
	deepEqual( Stem("trascendentales"), "trascendental" );
	deepEqual( Stem("trascender"), "trascend" );
	deepEqual( Stem("trasera"), "traser" );
	deepEqual( Stem("traseras"), "traser" );
	deepEqual( Stem("trasero"), "traser" );
	deepEqual( Stem("traseros"), "traser" );
	deepEqual( Stem("trasfondo"), "trasfond" );
	deepEqual( Stem("trasfondos"), "trasfond" );
	deepEqual( Stem("traslación"), "traslacion" );
	deepEqual( Stem("traslada"), "trasl" );
	deepEqual( Stem("trasladaba"), "traslad" );
	deepEqual( Stem("trasladado"), "traslad" );
	deepEqual( Stem("trasladados"), "traslad" );
	deepEqual( Stem("trasladar"), "traslad" );
	deepEqual( Stem("trasladarán"), "traslad" );
	deepEqual( Stem("trasladarla"), "traslad" );
	deepEqual( Stem("trasladarse"), "traslad" );
	deepEqual( Stem("trasládese"), "traslades" );
	deepEqual( Stem("traslado"), "trasl" );
	deepEqual( Stem("trasladó"), "traslad" );
	deepEqual( Stem("traslados"), "trasl" );
	deepEqual( Stem("trasmisión"), "trasmision" );
	deepEqual( Stem("trasmite"), "trasmit" );
	deepEqual( Stem("trasmitirlo"), "trasmit" );
	deepEqual( Stem("trasnacional"), "trasnacional" );
	deepEqual( Stem("trasnacionales"), "trasnacional" );
	deepEqual( Stem("trasnacionalización"), "trasnacionaliz" );
	deepEqual( Stem("trasplantados"), "trasplant" );
	deepEqual( Stem("trasplante"), "trasplant" );
	deepEqual( Stem("trasplantes"), "trasplant" );
	deepEqual( Stem("trasporte"), "trasport" );
	deepEqual( Stem("traste"), "trast" );
	deepEqual( Stem("trasteo"), "traste" );
	deepEqual( Stem("trastoca"), "trastoc" );
	deepEqual( Stem("trastocan"), "trastoc" );
	deepEqual( Stem("trastorna"), "trastorn" );
	deepEqual( Stem("trastornó"), "trastorn" );
	deepEqual( Stem("trastornos"), "trastorn" );
	deepEqual( Stem("trata"), "trat" );
	deepEqual( Stem("trataba"), "trat" );
	deepEqual( Stem("trataban"), "trat" );
	deepEqual( Stem("tratada"), "trat" );
	deepEqual( Stem("tratadas"), "trat" );
	deepEqual( Stem("tratado"), "trat" );
	deepEqual( Stem("tratadoras"), "tratador" );
	deepEqual( Stem("tratados"), "trat" );
	deepEqual( Stem("tratamiento"), "tratamient" );
	deepEqual( Stem("tratamientos"), "tratamient" );
	deepEqual( Stem("tratamos"), "trat" );
	deepEqual( Stem("tratan"), "trat" );
	deepEqual( Stem("tratando"), "trat" );
	deepEqual( Stem("tratándose"), "trat" );
	deepEqual( Stem("tratar"), "trat" );
	deepEqual( Stem("tratara"), "trat" );
	deepEqual( Stem("tratará"), "trat" );
	deepEqual( Stem("tratarán"), "trat" );
	deepEqual( Stem("trataremos"), "trat" );
	deepEqual( Stem("trataría"), "trat" );
	deepEqual( Stem("trataron"), "trat" );
	deepEqual( Stem("tratarse"), "trat" );
	deepEqual( Stem("tratas"), "trat" );
	deepEqual( Stem("trate"), "trat" );
	deepEqual( Stem("traté"), "trat" );
	deepEqual( Stem("traten"), "trat" );
	deepEqual( Stem("trato"), "trat" );
	deepEqual( Stem("trató"), "trat" );
	deepEqual( Stem("tratos"), "trat" );
	deepEqual( Stem("traumatismo"), "traumat" );
	deepEqual( Stem("traumatología"), "traumatolog" );
	deepEqual( Stem("través"), "traves" );
	deepEqual( Stem("travesaño"), "travesañ" );
	deepEqual( Stem("travieso"), "travies" );
	deepEqual( Stem("travis"), "travis" );
	deepEqual( Stem("trayecto"), "trayect" );
	deepEqual( Stem("trayectoria"), "trayectori" );
	deepEqual( Stem("trayendo"), "trayend" );
	deepEqual( Stem("trazadas"), "traz" );
	deepEqual( Stem("trazado"), "traz" );
	deepEqual( Stem("trazo"), "traz" );
	deepEqual( Stem("trazó"), "traz" );
	deepEqual( Stem("trazos"), "traz" );
	deepEqual( Stem("trece"), "trec" );
	deepEqual( Stem("trecho"), "trech" );
	deepEqual( Stem("trechos"), "trech" );
	deepEqual( Stem("tregua"), "tregu" );
	deepEqual( Stem("treinta"), "treint" );
	deepEqual( Stem("trejo"), "trej" );
	deepEqual( Stem("tremenda"), "tremend" );
	deepEqual( Stem("tremendamente"), "tremend" );
	deepEqual( Stem("tremendas"), "tremend" );
	deepEqual( Stem("tremendo"), "tremend" );
	deepEqual( Stem("tremendos"), "tremend" );
	deepEqual( Stem("tren"), "tren" );
	deepEqual( Stem("trenes"), "tren" );
	deepEqual( Stem("trenza"), "trenz" );
	deepEqual( Stem("trepó"), "trep" );
	deepEqual( Stem("tres"), "tres" );
	deepEqual( Stem("tress"), "tress" );
	deepEqual( Stem("treta"), "tret" );
	deepEqual( Stem("treto"), "tret" );
	deepEqual( Stem("trevi"), "trevi" );
	deepEqual( Stem("treviñada"), "treviñ" );
	deepEqual( Stem("treviñista"), "treviñ" );
	deepEqual( Stem("treviño"), "treviñ" );
	deepEqual( Stem("tri"), "tri" );
	deepEqual( Stem("triana"), "trian" );
	deepEqual( Stem("triángulo"), "triangul" );
	deepEqual( Stem("tribuna"), "tribun" );
	deepEqual( Stem("tribunal"), "tribunal" );
	deepEqual( Stem("tribunales"), "tribunal" );
	deepEqual( Stem("tribunas"), "tribun" );
	deepEqual( Stem("tributarias"), "tributari" );
	deepEqual( Stem("tributario"), "tributari" );
	deepEqual( Stem("tributarle"), "tribut" );
	deepEqual( Stem("tributos"), "tribut" );
	deepEqual( Stem("tricampeón"), "tricampeon" );
	deepEqual( Stem("tricolor"), "tricolor" );
	deepEqual( Stem("tricolores"), "tricolor" );
	deepEqual( Stem("tridimensional"), "tridimensional" );
	deepEqual( Stem("trigésimo"), "trigesim" );
	deepEqual( Stem("trigo"), "trig" );
	deepEqual( Stem("trigon"), "trigon" );
	deepEqual( Stem("trilateral"), "trilateral" );
	deepEqual( Stem("trillado"), "trill" );
	deepEqual( Stem("trimestre"), "trimestr" );
	deepEqual( Stem("trinchera"), "trincher" );
	deepEqual( Stem("trinidad"), "trinid" );
	deepEqual( Stem("trío"), "tri" );
	deepEqual( Stem("tríos"), "tri" );
	deepEqual( Stem("tripa"), "trip" );
	deepEqual( Stem("tripartita"), "tripartit" );
	deepEqual( Stem("triple"), "tripl" );
	deepEqual( Stem("tripleta"), "triplet" );
	deepEqual( Stem("triplicaron"), "triplic" );
	deepEqual( Stem("tripulación"), "tripul" );
	deepEqual( Stem("tripulado"), "tripul" );
	deepEqual( Stem("tripulados"), "tripul" );
	deepEqual( Stem("tripulando"), "tripul" );
	deepEqual( Stem("tripulantes"), "tripul" );
	deepEqual( Stem("tripular"), "tripul" );
	deepEqual( Stem("tripulará"), "tripul" );
	deepEqual( Stem("triquiñuela"), "triquiñuel" );
	deepEqual( Stem("tris"), "tris" );
	deepEqual( Stem("tristán"), "tristan" );
	deepEqual( Stem("triste"), "trist" );
	deepEqual( Stem("tristemente"), "tristement" );
	deepEqual( Stem("tristes"), "trist" );
	deepEqual( Stem("tristeza"), "tristez" );
	deepEqual( Stem("tritt"), "tritt" );
	deepEqual( Stem("triunfa"), "triunf" );
	deepEqual( Stem("triunfado"), "triunf" );
	deepEqual( Stem("triunfador"), "triunfador" );
	deepEqual( Stem("triunfadora"), "triunfador" );
	deepEqual( Stem("triunfadores"), "triunfador" );
	deepEqual( Stem("triunfal"), "triunfal" );
	deepEqual( Stem("triunfalismo"), "triunfal" );
	deepEqual( Stem("triunfalista"), "triunfal" );
	deepEqual( Stem("triunfalmente"), "triunfal" );
	deepEqual( Stem("triunfantes"), "triunfant" );
	deepEqual( Stem("triunfar"), "triunf" );
	deepEqual( Stem("triunfaría"), "triunf" );
	deepEqual( Stem("triunfaron"), "triunf" );
	deepEqual( Stem("triunfo"), "triunf" );
	deepEqual( Stem("triunfos"), "triunf" );
	deepEqual( Stem("trivial"), "trivial" );
	deepEqual( Stem("trizados"), "triz" );
	deepEqual( Stem("trofeo"), "trofe" );
	deepEqual( Stem("trofeos"), "trofe" );
	deepEqual( Stem("trolebús"), "trolebus" );
	deepEqual( Stem("trompeta"), "trompet" );
	deepEqual( Stem("trompetero"), "trompeter" );
	deepEqual( Stem("trompetista"), "trompet" );
	deepEqual( Stem("trompetística"), "trompetist" );
	deepEqual( Stem("troncales"), "troncal" );
	deepEqual( Stem("tronco"), "tronc" );
	deepEqual( Stem("troncos"), "tronc" );
	deepEqual( Stem("trono"), "tron" );
	deepEqual( Stem("tropa"), "trop" );
	deepEqual( Stem("tropas"), "trop" );
	deepEqual( Stem("tropezar"), "tropez" );
	deepEqual( Stem("tropezón"), "tropezon" );
	deepEqual( Stem("tropicosas"), "tropic" );
	deepEqual( Stem("tropiezos"), "tropiez" );
	deepEqual( Stem("trota"), "trot" );
	deepEqual( Stem("trotamundos"), "trotamund" );
	deepEqual( Stem("trotando"), "trot" );
	deepEqual( Stem("trotar"), "trot" );
	deepEqual( Stem("trote"), "trot" );
	deepEqual( Stem("trousseau"), "trousseau" );
	deepEqual( Stem("trout"), "trout" );
	deepEqual( Stem("troy"), "troy" );
	deepEqual( Stem("troyanos"), "troyan" );
	deepEqual( Stem("truenan"), "truen" );
	deepEqual( Stem("truene"), "truen" );
	deepEqual( Stem("trujillo"), "trujill" );
	deepEqual( Stem("truman"), "trum" );
	deepEqual( Stem("trump"), "trump" );
	deepEqual( Stem("trust"), "trust" );
	deepEqual( Stem("tryon"), "tryon" );
	deepEqual( Stem("tsi"), "tsi" );
	deepEqual( Stem("tsmbién"), "tsmbien" );
	deepEqual( Stem("tsubame"), "tsubam" );
	deepEqual( Stem("tsuru"), "tsuru" );
	deepEqual( Stem("tu"), "tu" );
	deepEqual( Stem("tú"), "tu" );
	deepEqual( Stem("tubacero"), "tubacer" );
	deepEqual( Stem("tubería"), "tub" );
	deepEqual( Stem("tuberías"), "tub" );
	deepEqual( Stem("tubo"), "tub" );
	deepEqual( Stem("tubos"), "tub" );
	deepEqual( Stem("tuercas"), "tuerc" );
	deepEqual( Stem("tuerto"), "tuert" );
	deepEqual( Stem("tulancingo"), "tulancing" );
	deepEqual( Stem("tules"), "tul" );
	deepEqual( Stem("tulin"), "tulin" );
	deepEqual( Stem("tull"), "tull" );
	deepEqual( Stem("tulle"), "tull" );
	deepEqual( Stem("tum"), "tum" );
	deepEqual( Stem("tumba"), "tumb" );
	deepEqual( Stem("tumbado"), "tumb" );
	deepEqual( Stem("tumbas"), "tumb" );
	deepEqual( Stem("tumor"), "tumor" );
	deepEqual( Stem("tumoral"), "tumoral" );
	deepEqual( Stem("tumores"), "tumor" );
	deepEqual( Stem("tumultuosa"), "tumultu" );
	deepEqual( Stem("túnel"), "tunel" );
	deepEqual( Stem("túneles"), "tunel" );
	deepEqual( Stem("tunguska"), "tungusk" );
	deepEqual( Stem("túnicas"), "tunic" );
	deepEqual( Stem("tupac"), "tupac" );
	deepEqual( Stem("tupamaros"), "tupamar" );
	deepEqual( Stem("turbias"), "turbi" );
	deepEqual( Stem("turbina"), "turbin" );
	deepEqual( Stem("turbo"), "turb" );
	deepEqual( Stem("turcos"), "turc" );
	deepEqual( Stem("turismo"), "turism" );
	deepEqual( Stem("turista"), "turist" );
	deepEqual( Stem("turistas"), "turist" );
	deepEqual( Stem("turística"), "turist" );
	deepEqual( Stem("turísticas"), "turist" );
	deepEqual( Stem("turistico"), "turist" );
	deepEqual( Stem("turístico"), "turist" );
	deepEqual( Stem("turísticos"), "turist" );
	deepEqual( Stem("turna"), "turn" );
	deepEqual( Stem("turnbull"), "turnbull" );
	deepEqual( Stem("turneriano"), "turnerian" );
	deepEqual( Stem("turno"), "turn" );
	deepEqual( Stem("turnó"), "turn" );
	deepEqual( Stem("turnos"), "turn" );
	deepEqual( Stem("turquía"), "turqu" );
	deepEqual( Stem("tus"), "tus" );
	deepEqual( Stem("tutelar"), "tutel" );
	deepEqual( Stem("tuve"), "tuv" );
	deepEqual( Stem("tuviera"), "tuv" );
	deepEqual( Stem("tuvieran"), "tuv" );
	deepEqual( Stem("tuvieron"), "tuv" );
	deepEqual( Stem("tuvimos"), "tuv" );
	deepEqual( Stem("tuvo"), "tuv" );
	deepEqual( Stem("tuxpan"), "tuxp" );
	deepEqual( Stem("tuxtla"), "tuxtl" );
	deepEqual( Stem("tuya"), "tuy" );
	deepEqual( Stem("tuyo"), "tuy" );
	deepEqual( Stem("tuzo"), "tuz" );
	deepEqual( Stem("tuzos"), "tuz" );
	deepEqual( Stem("tv"), "tv" );
	deepEqual( Stem("tyson"), "tyson" );
	deepEqual( Stem("u"), "u" );
	deepEqual( Stem("uag"), "uag" );
	deepEqual( Stem("uane"), "uan" );
	deepEqual( Stem("uanl"), "uanl" );
	deepEqual( Stem("uap"), "uap" );
	deepEqual( Stem("uat"), "uat" );
	deepEqual( Stem("ubica"), "ubic" );
	deepEqual( Stem("ubicaba"), "ubic" );
	deepEqual( Stem("ubicaban"), "ubic" );
	deepEqual( Stem("ubicación"), "ubic" );
	deepEqual( Stem("ubicada"), "ubic" );
	deepEqual( Stem("ubicadas"), "ubic" );
	deepEqual( Stem("ubicado"), "ubic" );
	deepEqual( Stem("ubicados"), "ubic" );
	deepEqual( Stem("ubican"), "ubic" );
	deepEqual( Stem("ubicando"), "ubic" );
	deepEqual( Stem("ubicándolo"), "ubic" );
	deepEqual( Stem("ubicar"), "ubic" );
	deepEqual( Stem("ubicara"), "ubic" );
	deepEqual( Stem("ubicará"), "ubic" );
	deepEqual( Stem("ubicarían"), "ubic" );
	deepEqual( Stem("ubicarlos"), "ubic" );
	deepEqual( Stem("ubicarnos"), "ubic" );
	deepEqual( Stem("ubicaron"), "ubic" );
	deepEqual( Stem("ubicarse"), "ubic" );
	deepEqual( Stem("ubicársele"), "ubicarsel" );
	deepEqual( Stem("ubicó"), "ubic" );
	deepEqual( Stem("ucalli"), "ucalli" );
	deepEqual( Stem("ucayali"), "ucayali" );
	deepEqual( Stem("ucimme"), "ucimm" );
	deepEqual( Stem("ucrania"), "ucrani" );
	deepEqual( Stem("ucraniano"), "ucranian" );
	deepEqual( Stem("udeg"), "udeg" );
	deepEqual( Stem("udem"), "udem" );
	deepEqual( Stem("udinese"), "udines" );
	deepEqual( Stem("ugalde"), "ugald" );
	deepEqual( Stem("ugarte"), "ugart" );
	deepEqual( Stem("uglilia"), "uglili" );
	deepEqual( Stem("ugocp"), "ugocp" );
	deepEqual( Stem("uhagon"), "uhagon" );
	deepEqual( Stem("uhf"), "uhf" );
	deepEqual( Stem("úlcera"), "ulcer" );
	deepEqual( Stem("ulises"), "ulis" );
	deepEqual( Stem("ullami"), "ullami" );
	deepEqual( Stem("ulloa"), "ullo" );
	deepEqual( Stem("última"), "ultim" );
	deepEqual( Stem("últimamente"), "ultim" );
	deepEqual( Stem("últimas"), "ultim" );
	deepEqual( Stem("ultimo"), "ultim" );
	deepEqual( Stem("último"), "ultim" );
	deepEqual( Stem("ultimos"), "ultim" );
	deepEqual( Stem("últimos"), "ultim" );
	deepEqual( Stem("ultra"), "ultra" );
	deepEqual( Stem("ultrajó"), "ultraj" );
	deepEqual( Stem("ultranza"), "ultranz" );
	deepEqual( Stem("ultravioleta"), "ultraviolet" );
	deepEqual( Stem("umbral"), "umbral" );
	deepEqual( Stem("un"), "un" );
	deepEqual( Stem("una"), "una" );
	deepEqual( Stem("unacolumna"), "unacolumn" );
	deepEqual( Stem("unam"), "unam" );
	deepEqual( Stem("unamitas"), "unamit" );
	deepEqual( Stem("unan"), "unan" );
	deepEqual( Stem("unánime"), "unanim" );
	deepEqual( Stem("unánimemente"), "unanim" );
	deepEqual( Stem("unanimidad"), "unanim" );
	deepEqual( Stem("unas"), "unas" );
	deepEqual( Stem("uñas"), "uñas" );
	deepEqual( Stem("undiano"), "undian" );
	deepEqual( Stem("une"), "une" );
	deepEqual( Stem("unesco"), "unesc" );
	deepEqual( Stem("unforgettable"), "unforgett" );
	deepEqual( Stem("unía"), "uni" );
	deepEqual( Stem("única"), "unic" );
	deepEqual( Stem("unicamente"), "unic" );
	deepEqual( Stem("únicamente"), "unic" );
	deepEqual( Stem("únicas"), "unic" );
	deepEqual( Stem("unico"), "unic" );
	deepEqual( Stem("único"), "unic" );
	deepEqual( Stem("únicos"), "unic" );
	deepEqual( Stem("unidad"), "unid" );
	deepEqual( Stem("unidades"), "unidad" );
	deepEqual( Stem("unidas"), "unid" );
	deepEqual( Stem("unidimensional"), "unidimensional" );
	deepEqual( Stem("unido"), "unid" );
	deepEqual( Stem("unidos"), "unid" );
	deepEqual( Stem("unieron"), "unieron" );
	deepEqual( Stem("unifamiliares"), "unifamiliar" );
	deepEqual( Stem("unificación"), "unif" );
	deepEqual( Stem("unificadas"), "unific" );
	deepEqual( Stem("unificado"), "unific" );
	deepEqual( Stem("unificar"), "unific" );
	deepEqual( Stem("uniformada"), "uniform" );
	deepEqual( Stem("uniformado"), "uniform" );
	deepEqual( Stem("uniformados"), "uniform" );
	deepEqual( Stem("uniformar"), "uniform" );
	deepEqual( Stem("uniforme"), "uniform" );
	deepEqual( Stem("uniformes"), "uniform" );
	deepEqual( Stem("unilateral"), "unilateral" );
	deepEqual( Stem("unilaterales"), "unilateral" );
	deepEqual( Stem("unilateralmente"), "unilateral" );
	deepEqual( Stem("unimóvil"), "unimovil" );
	deepEqual( Stem("unió"), "uni" );
	deepEqual( Stem("unión"), "union" );
	deepEqual( Stem("uniones"), "union" );
	deepEqual( Stem("unir"), "unir" );
	deepEqual( Stem("unirá"), "unir" );
	deepEqual( Stem("uniría"), "unir" );
	deepEqual( Stem("unirse"), "unirs" );
	deepEqual( Stem("unisex"), "unisex" );
	deepEqual( Stem("unitardos"), "unitard" );
	deepEqual( Stem("unitario"), "unitari" );
	deepEqual( Stem("united"), "unit" );
	deepEqual( Stem("univ"), "univ" );
	deepEqual( Stem("universal"), "universal" );
	deepEqual( Stem("universales"), "universal" );
	deepEqual( Stem("universalmente"), "universal" );
	deepEqual( Stem("universidad"), "univers" );
	deepEqual( Stem("universidades"), "univers" );
	deepEqual( Stem("universitaria"), "universitari" );
	deepEqual( Stem("universitarias"), "universitari" );
	deepEqual( Stem("universitario"), "universitari" );
	deepEqual( Stem("universitarios"), "universitari" );
	deepEqual( Stem("university"), "university" );
	deepEqual( Stem("universo"), "univers" );
	deepEqual( Stem("unix"), "unix" );
	deepEqual( Stem("uno"), "uno" );
	deepEqual( Stem("unos"), "unos" );
	deepEqual( Stem("unplugged"), "unplugg" );
	deepEqual( Stem("unzueta"), "unzuet" );
	deepEqual( Stem("up"), "up" );
	deepEqual( Stem("upi"), "upi" );
	deepEqual( Stem("ur"), "ur" );
	deepEqual( Stem("urbana"), "urban" );
	deepEqual( Stem("urbanas"), "urban" );
	deepEqual( Stem("urbanistas"), "urban" );
	deepEqual( Stem("urbanístico"), "urbanist" );
	deepEqual( Stem("urbanísticos"), "urbanist" );
	deepEqual( Stem("urbano"), "urban" );
	deepEqual( Stem("urbanos"), "urban" );
	deepEqual( Stem("urbieta"), "urbiet" );
	deepEqual( Stem("urdió"), "urdi" );
	deepEqual( Stem("urge"), "urge" );
	deepEqual( Stem("urgen"), "urgen" );
	deepEqual( Stem("urgencia"), "urgenci" );
	deepEqual( Stem("urgencias"), "urgenci" );
	deepEqual( Stem("urgente"), "urgent" );
	deepEqual( Stem("urgentes"), "urgent" );
	deepEqual( Stem("urgida"), "urgid" );
	deepEqual( Stem("uribe"), "urib" );
	deepEqual( Stem("urista"), "urist" );
	deepEqual( Stem("urna"), "urna" );
	deepEqual( Stem("urnas"), "urnas" );
	deepEqual( Stem("uro"), "uro" );
	deepEqual( Stem("urrea"), "urre" );
	deepEqual( Stem("urss"), "urss" );
	deepEqual( Stem("ursula"), "ursul" );
	deepEqual( Stem("urtiz"), "urtiz" );
	deepEqual( Stem("uruapan"), "uruap" );
	deepEqual( Stem("uruguay"), "uruguay" );
	deepEqual( Stem("uruguayo"), "uruguay" );
	deepEqual( Stem("urzúa"), "urzu" );
	deepEqual( Stem("usa"), "usa" );
	deepEqual( Stem("usaba"), "usab" );
	deepEqual( Stem("usaban"), "usab" );
	deepEqual( Stem("usada"), "usad" );
	deepEqual( Stem("usadas"), "usad" );
	deepEqual( Stem("usado"), "usad" );
	deepEqual( Stem("usados"), "usad" );
	deepEqual( Stem("usan"), "usan" );
	deepEqual( Stem("usando"), "usand" );
	deepEqual( Stem("usar"), "usar" );
	deepEqual( Stem("usara"), "usar" );
	deepEqual( Stem("usará"), "usar" );
	deepEqual( Stem("usarán"), "usaran" );
	deepEqual( Stem("usarla"), "usarl" );
	deepEqual( Stem("usarlos"), "usarl" );
	deepEqual( Stem("usaron"), "usaron" );
	deepEqual( Stem("usarse"), "usars" );
	deepEqual( Stem("use"), "use" );
	deepEqual( Stem("usen"), "usen" );
	deepEqual( Stem("usis"), "usis" );
	deepEqual( Stem("uso"), "uso" );
	deepEqual( Stem("usó"), "uso" );
	deepEqual( Stem("usos"), "usos" );
	deepEqual( Stem("usted"), "usted" );
	deepEqual( Stem("ustedes"), "usted" );
	deepEqual( Stem("usuales"), "usual" );
	deepEqual( Stem("usuario"), "usuari" );
	deepEqual( Stem("usuarios"), "usuari" );
	deepEqual( Stem("usura"), "usur" );
	deepEqual( Stem("usureros"), "usurer" );
	deepEqual( Stem("usurpación"), "usurp" );
	deepEqual( Stem("útero"), "uter" );
	deepEqual( Stem("útil"), "util" );
	deepEqual( Stem("utilería"), "util" );
	deepEqual( Stem("utilerías"), "util" );
	deepEqual( Stem("utilice"), "utilic" );
	deepEqual( Stem("utilidad"), "util" );
	deepEqual( Stem("utilidades"), "util" );
	deepEqual( Stem("utiliza"), "utiliz" );
	deepEqual( Stem("utilizaba"), "utiliz" );
	deepEqual( Stem("utilizaban"), "utiliz" );
	deepEqual( Stem("utilización"), "utiliz" );
	deepEqual( Stem("utilizada"), "utiliz" );
	deepEqual( Stem("utilizadas"), "utiliz" );
	deepEqual( Stem("utilizado"), "utiliz" );
	deepEqual( Stem("utilizados"), "utiliz" );
	deepEqual( Stem("utilizamos"), "utiliz" );
	deepEqual( Stem("utilizan"), "utiliz" );
	deepEqual( Stem("utilizando"), "utiliz" );
	deepEqual( Stem("utilizar"), "utiliz" );
	deepEqual( Stem("utilizará"), "utiliz" );
	deepEqual( Stem("utilizarán"), "utiliz" );
	deepEqual( Stem("utilizarla"), "utiliz" );
	deepEqual( Stem("utilizarlo"), "utiliz" );
	deepEqual( Stem("utilizaron"), "utiliz" );
	deepEqual( Stem("utilizarse"), "utiliz" );
	deepEqual( Stem("utilizó"), "utiliz" );
	deepEqual( Stem("utopía"), "utop" );
	deepEqual( Stem("utopías"), "utop" );
	deepEqual( Stem("utópicas"), "utop" );
	deepEqual( Stem("uy"), "uy" );
	deepEqual( Stem("v"), "v" );
	deepEqual( Stem("va"), "va" );
	deepEqual( Stem("vaca"), "vac" );
	deepEqual( Stem("vacacionar"), "vacacion" );
	deepEqual( Stem("vacaciones"), "vacacion" );
	deepEqual( Stem("vacas"), "vac" );
	deepEqual( Stem("vacía"), "vac" );
	deepEqual( Stem("vaciado"), "vaci" );
	deepEqual( Stem("vacías"), "vac" );
	deepEqual( Stem("vacila"), "vacil" );
	deepEqual( Stem("vacilada"), "vacil" );
	deepEqual( Stem("vacilan"), "vacil" );
	deepEqual( Stem("vacilando"), "vacil" );
	deepEqual( Stem("vacilante"), "vacil" );
	deepEqual( Stem("vacilar"), "vacil" );
	deepEqual( Stem("vaciló"), "vacil" );
	deepEqual( Stem("vacilón"), "vacilon" );
	deepEqual( Stem("vacío"), "vaci" );
	deepEqual( Stem("vació"), "vac" );
	deepEqual( Stem("vacíos"), "vaci" );
	deepEqual( Stem("vacuna"), "vacun" );
	deepEqual( Stem("vacunación"), "vacun" );
	deepEqual( Stem("vacunas"), "vacun" );
	deepEqual( Stem("vado"), "vad" );
	deepEqual( Stem("vagabundo"), "vagabund" );
	deepEqual( Stem("vagina"), "vagin" );
	deepEqual( Stem("vagones"), "vagon" );
	deepEqual( Stem("vagoneta"), "vagonet" );
	deepEqual( Stem("vagos"), "vag" );
	deepEqual( Stem("vaivenes"), "vaiven" );
	deepEqual( Stem("vajilla"), "vajill" );
	deepEqual( Stem("val"), "val" );
	deepEqual( Stem("valde"), "vald" );
	deepEqual( Stem("valdés"), "valdes" );
	deepEqual( Stem("valdez"), "valdez" );
	deepEqual( Stem("valdo"), "vald" );
	deepEqual( Stem("valdrá"), "valdr" );
	deepEqual( Stem("valdría"), "valdr" );
	deepEqual( Stem("vale"), "val" );
	deepEqual( Stem("valedores"), "valedor" );
	deepEqual( Stem("valegorrista"), "valegorr" );
	deepEqual( Stem("valemos"), "val" );
	deepEqual( Stem("valen"), "val" );
	deepEqual( Stem("valencia"), "valenci" );
	deepEqual( Stem("valens"), "valens" );
	deepEqual( Stem("valente"), "valent" );
	deepEqual( Stem("valentia"), "valenti" );
	deepEqual( Stem("valentía"), "valent" );
	deepEqual( Stem("valentín"), "valentin" );
	deepEqual( Stem("valentino"), "valentin" );
	deepEqual( Stem("valenzuela"), "valenzuel" );
	deepEqual( Stem("valer"), "val" );
	deepEqual( Stem("valeri"), "valeri" );
	deepEqual( Stem("valero"), "valer" );
	deepEqual( Stem("valet"), "valet" );
	deepEqual( Stem("valga"), "valg" );
	deepEqual( Stem("valgan"), "valg" );
	deepEqual( Stem("valía"), "val" );
	deepEqual( Stem("validez"), "validez" );
	deepEqual( Stem("valido"), "val" );
	deepEqual( Stem("válido"), "val" );
	deepEqual( Stem("valiente"), "valient" );
	deepEqual( Stem("valieron"), "val" );
	deepEqual( Stem("valió"), "val" );
	deepEqual( Stem("valiosa"), "valios" );
	deepEqual( Stem("valiosas"), "vali" );
	deepEqual( Stem("valioso"), "valios" );
	deepEqual( Stem("valiosos"), "valios" );
	deepEqual( Stem("valium"), "valium" );
	deepEqual( Stem("valla"), "vall" );
	deepEqual( Stem("valladares"), "valladar" );
	deepEqual( Stem("vallarta"), "vallart" );
	deepEqual( Stem("vallas"), "vall" );
	deepEqual( Stem("valle"), "vall" );
	deepEqual( Stem("vallecano"), "vallecan" );
	deepEqual( Stem("vallecillo"), "vallecill" );
	deepEqual( Stem("vallecillos"), "vallecill" );
	deepEqual( Stem("vallejo"), "vallej" );
	deepEqual( Stem("valles"), "vall" );
	deepEqual( Stem("valley"), "valley" );
	deepEqual( Stem("valor"), "valor" );
	deepEqual( Stem("valora"), "valor" );
	deepEqual( Stem("valoraba"), "valor" );
	deepEqual( Stem("valoración"), "valor" );
	deepEqual( Stem("valoradas"), "valor" );
	deepEqual( Stem("valorado"), "valor" );
	deepEqual( Stem("valorados"), "valor" );
	deepEqual( Stem("valorar"), "valor" );
	deepEqual( Stem("valorarlo"), "valor" );
	deepEqual( Stem("valoraron"), "valor" );
	deepEqual( Stem("valore"), "valor" );
	deepEqual( Stem("valores"), "valor" );
	deepEqual( Stem("valorizada"), "valoriz" );
	deepEqual( Stem("valparaíso"), "valparais" );
	deepEqual( Stem("valtierra"), "valtierr" );
	deepEqual( Stem("valuación"), "valuacion" );
	deepEqual( Stem("valuadas"), "valu" );
	deepEqual( Stem("value"), "valu" );
	deepEqual( Stem("válvulas"), "valvul" );
	deepEqual( Stem("vamos"), "vam" );
	deepEqual( Stem("vampiro"), "vampir" );
	deepEqual( Stem("vampiros"), "vampir" );
	deepEqual( Stem("van"), "van" );
	deepEqual( Stem("vandálicos"), "vandal" );
	deepEqual( Stem("vandalismo"), "vandal" );
	deepEqual( Stem("vanderley"), "vanderley" );
	deepEqual( Stem("vanette"), "vanett" );
	deepEqual( Stem("vanguardia"), "vanguardi" );
	deepEqual( Stem("vanguardista"), "vanguard" );
	deepEqual( Stem("vanguardistas"), "vanguard" );
	deepEqual( Stem("vanidad"), "vanid" );
	deepEqual( Stem("vanidades"), "vanidad" );
	deepEqual( Stem("vanilli"), "vanilli" );
	deepEqual( Stem("vánitas"), "vanit" );
	deepEqual( Stem("vanity"), "vanity" );
	deepEqual( Stem("vano"), "van" );
	deepEqual( Stem("vanos"), "van" );
	deepEqual( Stem("vapor"), "vapor" );
	deepEqual( Stem("vaporizaciones"), "vaporiz" );
	deepEqual( Stem("vaporizarlas"), "vaporiz" );
	deepEqual( Stem("vaporosa"), "vapor" );
	deepEqual( Stem("vaporosos"), "vapor" );
	deepEqual( Stem("vaquera"), "vaquer" );
	deepEqual( Stem("vaquerías"), "vaqu" );
	deepEqual( Stem("vaquero"), "vaquer" );
	deepEqual( Stem("vaqueros"), "vaquer" );
	deepEqual( Stem("varada"), "var" );
	deepEqual( Stem("varados"), "var" );
	deepEqual( Stem("varela"), "varel" );
	deepEqual( Stem("vargas"), "varg" );
	deepEqual( Stem("varía"), "var" );
	deepEqual( Stem("variable"), "variabl" );
	deepEqual( Stem("variables"), "variabl" );
	deepEqual( Stem("variación"), "variacion" );
	deepEqual( Stem("variaciones"), "variacion" );
	deepEqual( Stem("variada"), "vari" );
	deepEqual( Stem("variado"), "vari" );
	deepEqual( Stem("variados"), "vari" );
	deepEqual( Stem("varían"), "var" );
	deepEqual( Stem("variando"), "vari" );
	deepEqual( Stem("variantes"), "variant" );
	deepEqual( Stem("varias"), "vari" );
	deepEqual( Stem("varicela"), "varicel" );
	deepEqual( Stem("variedad"), "varied" );
	deepEqual( Stem("variedades"), "variedad" );
	deepEqual( Stem("variopinta"), "variopint" );
	deepEqual( Stem("varios"), "vari" );
	deepEqual( Stem("varita"), "varit" );
	deepEqual( Stem("varón"), "varon" );
	deepEqual( Stem("varones"), "varon" );
	deepEqual( Stem("varonil"), "varonil" );
	deepEqual( Stem("varoniles"), "varonil" );
	deepEqual( Stem("vas"), "vas" );
	deepEqual( Stem("vasco"), "vasc" );
	deepEqual( Stem("vasconcelos"), "vasconcel" );
	deepEqual( Stem("vaso"), "vas" );
	deepEqual( Stem("vasos"), "vas" );
	deepEqual( Stem("vásquez"), "vasquez" );
	deepEqual( Stem("vasto"), "vast" );
	deepEqual( Stem("vaticano"), "vatican" );
	deepEqual( Stem("vaticinado"), "vaticin" );
	deepEqual( Stem("vaticinar"), "vaticin" );
	deepEqual( Stem("vaticinaron"), "vaticin" );
	deepEqual( Stem("vaticinen"), "vaticin" );
	deepEqual( Stem("vaticinios"), "vaticini" );
	deepEqual( Stem("vaticinó"), "vaticin" );
	deepEqual( Stem("vax"), "vax" );
	deepEqual( Stem("vaxstations"), "vaxstations" );
	deepEqual( Stem("vaya"), "vay" );
	deepEqual( Stem("vayamos"), "vay" );
	deepEqual( Stem("vayan"), "vay" );
	deepEqual( Stem("vazquez"), "vazquez" );
	deepEqual( Stem("vázquez"), "vazquez" );
	deepEqual( Stem("vcr"), "vcr" );
	deepEqual( Stem("ve"), "ve" );
	deepEqual( Stem("vea"), "vea" );
	deepEqual( Stem("veamos"), "veam" );
	deepEqual( Stem("vean"), "vean" );
	deepEqual( Stem("veces"), "vec" );
	deepEqual( Stem("vecina"), "vecin" );
	deepEqual( Stem("vecinal"), "vecinal" );
	deepEqual( Stem("vecinales"), "vecinal" );
	deepEqual( Stem("vecinas"), "vecin" );
	deepEqual( Stem("vecindad"), "vecind" );
	deepEqual( Stem("vecindario"), "vecindari" );
	deepEqual( Stem("vecino"), "vecin" );
	deepEqual( Stem("vecinos"), "vecin" );
	deepEqual( Stem("vector"), "vector" );
	deepEqual( Stem("vega"), "veg" );
	deepEqual( Stem("vegetación"), "veget" );
	deepEqual( Stem("vegetales"), "vegetal" );
	deepEqual( Stem("vegetarianismo"), "vegetarian" );
	deepEqual( Stem("vegetarianos"), "vegetarian" );
	deepEqual( Stem("vegetativo"), "veget" );
	deepEqual( Stem("vehemencia"), "vehement" );
	deepEqual( Stem("vehemente"), "vehement" );
	deepEqual( Stem("vehicular"), "vehicul" );
	deepEqual( Stem("vehiculares"), "vehicular" );
	deepEqual( Stem("vehículo"), "vehicul" );
	deepEqual( Stem("vehículos"), "vehicul" );
	deepEqual( Stem("veía"), "vei" );
	deepEqual( Stem("veían"), "vei" );
	deepEqual( Stem("veinte"), "veint" );
	deepEqual( Stem("veinteañeros"), "veinteañer" );
	deepEqual( Stem("veintena"), "veinten" );
	deepEqual( Stem("veinticinco"), "veinticinc" );
	deepEqual( Stem("veintiseis"), "veintiseis" );
	deepEqual( Stem("vejarrón"), "vejarron" );
	deepEqual( Stem("vejez"), "vejez" );
	deepEqual( Stem("vela"), "vel" );
	deepEqual( Stem("velada"), "vel" );
	deepEqual( Stem("velador"), "velador" );
	deepEqual( Stem("velando"), "vel" );
	deepEqual( Stem("velarde"), "velard" );
	deepEqual( Stem("velas"), "vel" );
	deepEqual( Stem("velasco"), "velasc" );
	deepEqual( Stem("velázquez"), "velazquez" );
	deepEqual( Stem("velero"), "veler" );
	deepEqual( Stem("vélez"), "velez" );
	deepEqual( Stem("vellones"), "vellon" );
	deepEqual( Stem("velocidad"), "veloc" );
	deepEqual( Stem("velocidades"), "veloc" );
	deepEqual( Stem("velocímetro"), "velocimetr" );
	deepEqual( Stem("velos"), "vel" );
	deepEqual( Stem("veloso"), "velos" );
	deepEqual( Stem("vemos"), "vem" );
	deepEqual( Stem("ven"), "ven" );
	deepEqual( Stem("vena"), "ven" );
	deepEqual( Stem("venado"), "ven" );
	deepEqual( Stem("vence"), "venc" );
	deepEqual( Stem("vencedor"), "vencedor" );
	deepEqual( Stem("vencedores"), "vencedor" );
	deepEqual( Stem("vencer"), "venc" );
	deepEqual( Stem("vencerás"), "venc" );
	deepEqual( Stem("vencerse"), "venc" );
	deepEqual( Stem("vencida"), "venc" );
	deepEqual( Stem("vencidas"), "venc" );
	deepEqual( Stem("vencido"), "venc" );
	deepEqual( Stem("vencidos"), "venc" );
	deepEqual( Stem("vencieron"), "venc" );
	deepEqual( Stem("vencimiento"), "vencimient" );
	deepEqual( Stem("vencimientos"), "vencimient" );
	deepEqual( Stem("venció"), "venc" );
	deepEqual( Stem("venda"), "vend" );
	deepEqual( Stem("vendados"), "vend" );
	deepEqual( Stem("vendan"), "vend" );
	deepEqual( Stem("vendaron"), "vend" );
	deepEqual( Stem("vende"), "vend" );
	deepEqual( Stem("vendedor"), "vendedor" );
	deepEqual( Stem("vendedora"), "vendedor" );
	deepEqual( Stem("vendedores"), "vendedor" );
	deepEqual( Stem("vendemos"), "vend" );
	deepEqual( Stem("venden"), "vend" );
	deepEqual( Stem("vender"), "vend" );
	deepEqual( Stem("venderá"), "vend" );
	deepEqual( Stem("venderán"), "vend" );
	deepEqual( Stem("venderemos"), "vend" );
	deepEqual( Stem("vendería"), "vend" );
	deepEqual( Stem("venderla"), "vend" );
	deepEqual( Stem("venderlo"), "vend" );
	deepEqual( Stem("venderse"), "vend" );
	deepEqual( Stem("vendía"), "vend" );
	deepEqual( Stem("vendida"), "vend" );
	deepEqual( Stem("vendidas"), "vend" );
	deepEqual( Stem("vendido"), "vend" );
	deepEqual( Stem("vendidos"), "vend" );
	deepEqual( Stem("vendiendo"), "vend" );
	deepEqual( Stem("vendiéndose"), "vend" );
	deepEqual( Stem("vendiera"), "vend" );
	deepEqual( Stem("vendieron"), "vend" );
	deepEqual( Stem("vendió"), "vend" );
	deepEqual( Stem("vendo"), "vend" );
	deepEqual( Stem("vendrá"), "vendr" );
	deepEqual( Stem("vendrán"), "vendran" );
	deepEqual( Stem("venegas"), "veneg" );
	deepEqual( Stem("veneno"), "venen" );
	deepEqual( Stem("veneraban"), "vener" );
	deepEqual( Stem("veneración"), "vener" );
	deepEqual( Stem("venezolana"), "venezolan" );
	deepEqual( Stem("venezolano"), "venezolan" );
	deepEqual( Stem("venezolanos"), "venezolan" );
	deepEqual( Stem("venezuela"), "venezuel" );
	deepEqual( Stem("venga"), "veng" );
	deepEqual( Stem("vengadores"), "vengador" );
	deepEqual( Stem("vengan"), "veng" );
	deepEqual( Stem("venganza"), "venganz" );
	deepEqual( Stem("vengo"), "veng" );
	deepEqual( Stem("venía"), "ven" );
	deepEqual( Stem("venían"), "ven" );
	deepEqual( Stem("venicio"), "venici" );
	deepEqual( Stem("venida"), "ven" );
	deepEqual( Stem("venido"), "ven" );
	deepEqual( Stem("venidos"), "ven" );
	deepEqual( Stem("venimos"), "ven" );
	deepEqual( Stem("venir"), "ven" );
	deepEqual( Stem("venirse"), "ven" );
	deepEqual( Stem("venta"), "vent" );
	deepEqual( Stem("ventaja"), "ventaj" );
	deepEqual( Stem("ventajas"), "ventaj" );
	deepEqual( Stem("ventajosa"), "ventaj" );
	deepEqual( Stem("ventajosas"), "ventaj" );
	deepEqual( Stem("ventana"), "ventan" );
	deepEqual( Stem("ventanas"), "ventan" );
	deepEqual( Stem("ventanilla"), "ventanill" );
	deepEqual( Stem("ventas"), "vent" );
	deepEqual( Stem("ventila"), "ventil" );
	deepEqual( Stem("ventilación"), "ventil" );
	deepEqual( Stem("ventilar"), "ventil" );
	deepEqual( Stem("ventilaron"), "ventil" );
	deepEqual( Stem("ventilas"), "ventil" );
	deepEqual( Stem("ventre"), "ventr" );
	deepEqual( Stem("ventura"), "ventur" );
	deepEqual( Stem("venus"), "venus" );
	deepEqual( Stem("venustiano"), "venustian" );
	deepEqual( Stem("veo"), "veo" );
	deepEqual( Stem("ver"), "ver" );
	deepEqual( Stem("vera"), "ver" );
	deepEqual( Stem("verá"), "ver" );
	deepEqual( Stem("veracruz"), "veracruz" );
	deepEqual( Stem("veracruzana"), "veracruzan" );
	deepEqual( Stem("veracruzano"), "veracruzan" );
	deepEqual( Stem("veracruzanos"), "veracruzan" );
	deepEqual( Stem("verán"), "veran" );
	deepEqual( Stem("verano"), "veran" );
	deepEqual( Stem("veras"), "ver" );
	deepEqual( Stem("verbal"), "verbal" );
	deepEqual( Stem("verbales"), "verbal" );
	deepEqual( Stem("verbalista"), "verbal" );
	deepEqual( Stem("verbalmente"), "verbal" );
	deepEqual( Stem("verbo"), "verb" );
	deepEqual( Stem("verdad"), "verd" );
	deepEqual( Stem("verdadera"), "verdader" );
	deepEqual( Stem("verdaderamente"), "verdader" );
	deepEqual( Stem("verdaderas"), "verdader" );
	deepEqual( Stem("verdadero"), "verdader" );
	deepEqual( Stem("verdaderos"), "verdader" );
	deepEqual( Stem("verdades"), "verdad" );
	deepEqual( Stem("verde"), "verd" );
	deepEqual( Stem("verdes"), "verd" );
	deepEqual( Stem("verdirame"), "verdiram" );
	deepEqual( Stem("verdugo"), "verdug" );
	deepEqual( Stem("verduras"), "verdur" );
	deepEqual( Stem("verduzco"), "verduzc" );
	deepEqual( Stem("veré"), "ver" );
	deepEqual( Stem("veredalta"), "veredalt" );
	deepEqual( Stem("veredas"), "vered" );
	deepEqual( Stem("veredicto"), "veredict" );
	deepEqual( Stem("veremos"), "ver" );
	deepEqual( Stem("vergonzante"), "vergonz" );
	deepEqual( Stem("vergonzosos"), "vergonz" );
	deepEqual( Stem("vergüenza"), "vergüenz" );
	deepEqual( Stem("vería"), "ver" );
	deepEqual( Stem("veríamos"), "ver" );
	deepEqual( Stem("verificaba"), "verific" );
	deepEqual( Stem("verificación"), "verif" );
	deepEqual( Stem("verifican"), "verific" );
	deepEqual( Stem("verificar"), "verific" );
	deepEqual( Stem("verificaron"), "verific" );
	deepEqual( Stem("verificó"), "verific" );
	deepEqual( Stem("verla"), "verl" );
	deepEqual( Stem("verlas"), "verl" );
	deepEqual( Stem("verlo"), "verl" );
	deepEqual( Stem("verlos"), "verl" );
	deepEqual( Stem("verme"), "verm" );
	deepEqual( Stem("verónica"), "veron" );
	deepEqual( Stem("verónicas"), "veron" );
	deepEqual( Stem("verrugas"), "verrug" );
	deepEqual( Stem("versa"), "vers" );
	deepEqual( Stem("versace"), "versac" );
	deepEqual( Stem("versátil"), "versatil" );
	deepEqual( Stem("versatilidad"), "versatil" );
	deepEqual( Stem("verse"), "vers" );
	deepEqual( Stem("versificación"), "versif" );
	deepEqual( Stem("versión"), "version" );
	deepEqual( Stem("versiones"), "version" );
	deepEqual( Stem("versos"), "vers" );
	deepEqual( Stem("versus"), "versus" );
	deepEqual( Stem("verte"), "vert" );
	deepEqual( Stem("vertebral"), "vertebral" );
	deepEqual( Stem("vertical"), "vertical" );
	deepEqual( Stem("vertida"), "vert" );
	deepEqual( Stem("vertidas"), "vert" );
	deepEqual( Stem("vertido"), "vert" );
	deepEqual( Stem("vertientes"), "vertient" );
	deepEqual( Stem("very"), "very" );
	deepEqual( Stem("ves"), "ves" );
	deepEqual( Stem("vespertino"), "vespertin" );
	deepEqual( Stem("vestía"), "vest" );
	deepEqual( Stem("vestida"), "vest" );
	deepEqual( Stem("vestido"), "vest" );
	deepEqual( Stem("vestidos"), "vest" );
	deepEqual( Stem("vestidura"), "vestidur" );
	deepEqual( Stem("vestiduras"), "vestidur" );
	deepEqual( Stem("vestigio"), "vestigi" );
	deepEqual( Stem("vestimos"), "vest" );
	deepEqual( Stem("vestir"), "vest" );
	deepEqual( Stem("vestirse"), "vest" );
	deepEqual( Stem("vestuario"), "vestuari" );
	deepEqual( Stem("vetado"), "vet" );
	deepEqual( Stem("vetará"), "vet" );
	deepEqual( Stem("veterano"), "veteran" );
	deepEqual( Stem("veteranos"), "veteran" );
	deepEqual( Stem("veterinarias"), "veterinari" );
	deepEqual( Stem("veto"), "vet" );
	deepEqual( Stem("vetó"), "vet" );
	deepEqual( Stem("vez"), "vez" );
	deepEqual( Stem("vi"), "vi" );
	deepEqual( Stem("vía"), "via" );
	deepEqual( Stem("viabilidad"), "viabil" );
	deepEqual( Stem("viable"), "viabl" );
	deepEqual( Stem("viaducto"), "viaduct" );
	deepEqual( Stem("viaja"), "viaj" );
	deepEqual( Stem("viajaba"), "viaj" );
	deepEqual( Stem("viajaban"), "viaj" );
	deepEqual( Stem("viajado"), "viaj" );
	deepEqual( Stem("viajan"), "viaj" );
	deepEqual( Stem("viajar"), "viaj" );
	deepEqual( Stem("viajará"), "viaj" );
	deepEqual( Stem("viajarán"), "viaj" );
	deepEqual( Stem("viajarían"), "viaj" );
	deepEqual( Stem("viajaron"), "viaj" );
	deepEqual( Stem("viaje"), "viaj" );
	deepEqual( Stem("viajen"), "viaj" );
	deepEqual( Stem("viajero"), "viajer" );
	deepEqual( Stem("viajeros"), "viajer" );
	deepEqual( Stem("viajes"), "viaj" );
	deepEqual( Stem("viajó"), "viaj" );
	deepEqual( Stem("vial"), "vial" );
	deepEqual( Stem("viales"), "vial" );
	deepEqual( Stem("vialidad"), "vialid" );
	deepEqual( Stem("vialidades"), "vialidad" );
	deepEqual( Stem("viandas"), "viand" );
	deepEqual( Stem("vianey"), "vianey" );
	deepEqual( Stem("vías"), "vias" );
	deepEqual( Stem("víbora"), "vibor" );
	deepEqual( Stem("vibra"), "vibr" );
	deepEqual( Stem("vibraciones"), "vibracion" );
	deepEqual( Stem("vibradores"), "vibrador" );
	deepEqual( Stem("vibrar"), "vibr" );
	deepEqual( Stem("vicario"), "vicari" );
	deepEqual( Stem("vice"), "vic" );
	deepEqual( Stem("vicecanciller"), "vicecancill" );
	deepEqual( Stem("vicente"), "vicent" );
	deepEqual( Stem("vicepresidencia"), "vicepresident" );
	deepEqual( Stem("vicepresidente"), "vicepresident" );
	deepEqual( Stem("viceversa"), "vicevers" );
	deepEqual( Stem("vicio"), "vici" );
	deepEqual( Stem("vicios"), "vici" );
	deepEqual( Stem("viciosas"), "vici" );
	deepEqual( Stem("vícitma"), "vicitm" );
	deepEqual( Stem("vicky"), "vicky" );
	deepEqual( Stem("víctima"), "victim" );
	deepEqual( Stem("victimado"), "victim" );
	deepEqual( Stem("víctimas"), "victim" );
	deepEqual( Stem("víctor"), "victor" );
	deepEqual( Stem("victoria"), "victori" );
	deepEqual( Stem("victoriana"), "victorian" );
	deepEqual( Stem("victoriano"), "victorian" );
	deepEqual( Stem("victorias"), "victori" );
	deepEqual( Stem("victorioso"), "victori" );
	deepEqual( Stem("victoriosos"), "victori" );
	deepEqual( Stem("vida"), "vid" );
	deepEqual( Stem("vidal"), "vidal" );
	deepEqual( Stem("vidales"), "vidal" );
	deepEqual( Stem("vidas"), "vid" );
	deepEqual( Stem("vidente"), "vident" );
	deepEqual( Stem("videntes"), "vident" );
	deepEqual( Stem("video"), "vide" );
	deepEqual( Stem("videocasetera"), "videocaseter" );
	deepEqual( Stem("videocasetes"), "videocaset" );
	deepEqual( Stem("videocentros"), "videocentr" );
	deepEqual( Stem("videoclip"), "videoclip" );
	deepEqual( Stem("videoclubes"), "videoclub" );
	deepEqual( Stem("videohomes"), "videohom" );
	deepEqual( Stem("videomax"), "videomax" );
	deepEqual( Stem("videopelícula"), "videopelicul" );
	deepEqual( Stem("videos"), "vide" );
	deepEqual( Stem("vidrio"), "vidri" );
	deepEqual( Stem("vidrios"), "vidri" );
	deepEqual( Stem("vieira"), "vieir" );
	deepEqual( Stem("vieja"), "viej" );
	deepEqual( Stem("viejas"), "viej" );
	deepEqual( Stem("viejecita"), "viejecit" );
	deepEqual( Stem("viejita"), "viejit" );
	deepEqual( Stem("viejito"), "viejit" );
	deepEqual( Stem("viejitos"), "viejit" );
	deepEqual( Stem("viejo"), "viej" );
	deepEqual( Stem("viejón"), "viejon" );
	deepEqual( Stem("viejos"), "viej" );
	deepEqual( Stem("viena"), "vien" );
	deepEqual( Stem("viendo"), "viend" );
	deepEqual( Stem("viendose"), "viendos" );
	deepEqual( Stem("viene"), "vien" );
	deepEqual( Stem("vienen"), "vien" );
	deepEqual( Stem("viento"), "vient" );
	deepEqual( Stem("vientos"), "vient" );
	deepEqual( Stem("vientre"), "vientr" );
	deepEqual( Stem("vientres"), "vientr" );
	deepEqual( Stem("viera"), "vier" );
	deepEqual( Stem("viernes"), "viern" );
	deepEqual( Stem("vieron"), "vieron" );
	deepEqual( Stem("viesca"), "viesc" );
	deepEqual( Stem("vietnam"), "vietnam" );
	deepEqual( Stem("view"), "view" );
	deepEqual( Stem("vigas"), "vig" );
	deepEqual( Stem("vigencia"), "vigenci" );
	deepEqual( Stem("vigente"), "vigent" );
	deepEqual( Stem("vigentes"), "vigent" );
	deepEqual( Stem("vigésima"), "vigesim" );
	deepEqual( Stem("vigésimacuarta"), "vigesimacuart" );
	deepEqual( Stem("vigésimo"), "vigesim" );
	deepEqual( Stem("vigil"), "vigil" );
	deepEqual( Stem("vigila"), "vigil" );
	deepEqual( Stem("vigilaban"), "vigil" );
	deepEqual( Stem("vigilada"), "vigil" );
	deepEqual( Stem("vigiladas"), "vigil" );
	deepEqual( Stem("vigilado"), "vigil" );
	deepEqual( Stem("vigilados"), "vigil" );
	deepEqual( Stem("vigilancia"), "vigil" );
	deepEqual( Stem("vigilante"), "vigil" );
	deepEqual( Stem("vigilantes"), "vigil" );
	deepEqual( Stem("vigilar"), "vigil" );
	deepEqual( Stem("vigilará"), "vigil" );
	deepEqual( Stem("vigilarlas"), "vigil" );
	deepEqual( Stem("vigile"), "vigil" );
	deepEqual( Stem("vigilen"), "vigil" );
	deepEqual( Stem("vigilia"), "vigili" );
	deepEqual( Stem("vigo"), "vig" );
	deepEqual( Stem("vigor"), "vigor" );
	deepEqual( Stem("vigoroso"), "vigor" );
	deepEqual( Stem("viii"), "viii" );
	deepEqual( Stem("villa"), "vill" );
	deepEqual( Stem("villacaña"), "villacañ" );
	deepEqual( Stem("villada"), "vill" );
	deepEqual( Stem("villagómez"), "villagomez" );
	deepEqual( Stem("villagrán"), "villagran" );
	deepEqual( Stem("villahermosa"), "villaherm" );
	deepEqual( Stem("villalba"), "villalb" );
	deepEqual( Stem("villaldama"), "villaldam" );
	deepEqual( Stem("villalobos"), "villalob" );
	deepEqual( Stem("villamar"), "villam" );
	deepEqual( Stem("villán"), "villan" );
	deepEqual( Stem("villanueva"), "villanuev" );
	deepEqual( Stem("villar"), "vill" );
	deepEqual( Stem("villarreal"), "villarreal" );
	deepEqual( Stem("villasana"), "villasan" );
	deepEqual( Stem("villaseñor"), "villaseñor" );
	deepEqual( Stem("villauto"), "villaut" );
	deepEqual( Stem("villegas"), "villeg" );
	deepEqual( Stem("villuendas"), "villuend" );
	deepEqual( Stem("vimos"), "vim" );
	deepEqual( Stem("vimosa"), "vimos" );
	deepEqual( Stem("viña"), "viñ" );
	deepEqual( Stem("vincent"), "vincent" );
	deepEqual( Stem("vincula"), "vincul" );
	deepEqual( Stem("vinculación"), "vincul" );
	deepEqual( Stem("vinculadas"), "vincul" );
	deepEqual( Stem("vinculado"), "vincul" );
	deepEqual( Stem("vinculados"), "vincul" );
	deepEqual( Stem("vincular"), "vincul" );
	deepEqual( Stem("vincularse"), "vincul" );
	deepEqual( Stem("vinculo"), "vincul" );
	deepEqual( Stem("vínculo"), "vincul" );
	deepEqual( Stem("vínculos"), "vincul" );
	deepEqual( Stem("vine"), "vin" );
	deepEqual( Stem("viniendo"), "vin" );
	deepEqual( Stem("viniera"), "vin" );
	deepEqual( Stem("vinieran"), "vin" );
	deepEqual( Stem("vinieron"), "vin" );
	deepEqual( Stem("vino"), "vin" );
	deepEqual( Stem("vinyard"), "vinyard" );
	deepEqual( Stem("vio"), "vio" );
	deepEqual( Stem("violación"), "violacion" );
	deepEqual( Stem("violaciones"), "violacion" );
	deepEqual( Stem("violada"), "viol" );
	deepEqual( Stem("violado"), "viol" );
	deepEqual( Stem("violador"), "violador" );
	deepEqual( Stem("violadores"), "violador" );
	deepEqual( Stem("violan"), "viol" );
	deepEqual( Stem("violando"), "viol" );
	deepEqual( Stem("violar"), "viol" );
	deepEqual( Stem("violatorias"), "violatori" );
	deepEqual( Stem("violencia"), "violenci" );
	deepEqual( Stem("violenta"), "violent" );
	deepEqual( Stem("violentada"), "violent" );
	deepEqual( Stem("violentamente"), "violent" );
	deepEqual( Stem("violentaría"), "violent" );
	deepEqual( Stem("violentas"), "violent" );
	deepEqual( Stem("violento"), "violent" );
	deepEqual( Stem("violentos"), "violent" );
	deepEqual( Stem("violeta"), "violet" );
	deepEqual( Stem("violetina"), "violetin" );
	deepEqual( Stem("violín"), "violin" );
	deepEqual( Stem("violinista"), "violin" );
	deepEqual( Stem("violó"), "viol" );
	deepEqual( Stem("vips"), "vips" );
	deepEqual( Stem("virgen"), "virg" );
	deepEqual( Stem("vírgenes"), "virgen" );
	deepEqual( Stem("virginia"), "virgini" );
	deepEqual( Stem("virilidad"), "viril" );
	deepEqual( Stem("virreinato"), "virreinat" );
	deepEqual( Stem("virtual"), "virtual" );
	deepEqual( Stem("virtud"), "virtud" );
	deepEqual( Stem("virtudes"), "virtud" );
	deepEqual( Stem("virtuosa"), "virtuos" );
	deepEqual( Stem("virtuosos"), "virtuos" );
	deepEqual( Stem("virulentos"), "virulent" );
	deepEqual( Stem("visa"), "vis" );
	deepEqual( Stem("visag"), "visag" );
	deepEqual( Stem("viscatán"), "viscatan" );
	deepEqual( Stem("viscencio"), "viscenci" );
	deepEqual( Stem("viscerales"), "visceral" );
	deepEqual( Stem("visibilidad"), "visibil" );
	deepEqual( Stem("visible"), "visibl" );
	deepEqual( Stem("visiblemente"), "visibl" );
	deepEqual( Stem("visión"), "vision" );
	deepEqual( Stem("visionarios"), "visionari" );
	deepEqual( Stem("visiones"), "vision" );
	deepEqual( Stem("visires"), "visir" );
	deepEqual( Stem("visita"), "visit" );
	deepEqual( Stem("visitaba"), "visit" );
	deepEqual( Stem("visitadas"), "visit" );
	deepEqual( Stem("visitado"), "visit" );
	deepEqual( Stem("visitaduría"), "visitadur" );
	deepEqual( Stem("visitan"), "visit" );
	deepEqual( Stem("visitando"), "visit" );
	deepEqual( Stem("visitante"), "visit" );
	deepEqual( Stem("visitantes"), "visit" );
	deepEqual( Stem("visitar"), "visit" );
	deepEqual( Stem("visitara"), "visit" );
	deepEqual( Stem("visitará"), "visit" );
	deepEqual( Stem("visitarán"), "visit" );
	deepEqual( Stem("visitaría"), "visit" );
	deepEqual( Stem("visitarla"), "visit" );
	deepEqual( Stem("visitaron"), "visit" );
	deepEqual( Stem("visitas"), "visit" );
	deepEqual( Stem("visite"), "visit" );
	deepEqual( Stem("visiten"), "visit" );
	deepEqual( Stem("visiteo"), "visite" );
	deepEqual( Stem("visitiendo"), "visit" );
	deepEqual( Stem("visitó"), "visit" );
	deepEqual( Stem("viskin"), "viskin" );
	deepEqual( Stem("vislumbra"), "vislumbr" );
	deepEqual( Stem("vislumbran"), "vislumbr" );
	deepEqual( Stem("vislumbrar"), "vislumbr" );
	deepEqual( Stem("vislumbraron"), "vislumbr" );
	deepEqual( Stem("vislumbró"), "vislumbr" );
	deepEqual( Stem("visora"), "visor" );
	deepEqual( Stem("visos"), "vis" );
	deepEqual( Stem("víspera"), "visper" );
	deepEqual( Stem("vísperas"), "visper" );
	deepEqual( Stem("vista"), "vist" );
	deepEqual( Stem("vistas"), "vist" );
	deepEqual( Stem("vistazo"), "vistaz" );
	deepEqual( Stem("visten"), "vist" );
	deepEqual( Stem("vistiendo"), "vist" );
	deepEqual( Stem("vistió"), "vist" );
	deepEqual( Stem("visto"), "vist" );
	deepEqual( Stem("vistos"), "vist" );
	deepEqual( Stem("vistoso"), "vistos" );
	deepEqual( Stem("vistosos"), "vistos" );
	deepEqual( Stem("visual"), "visual" );
	deepEqual( Stem("visuales"), "visual" );
	deepEqual( Stem("visualice"), "visualic" );
	deepEqual( Stem("visualizaban"), "visualiz" );
	deepEqual( Stem("visualización"), "visualiz" );
	deepEqual( Stem("visualizado"), "visualiz" );
	deepEqual( Stem("visualizar"), "visualiz" );
	deepEqual( Stem("visualmente"), "visual" );
	deepEqual( Stem("vital"), "vital" );
	deepEqual( Stem("vitales"), "vital" );
	deepEqual( Stem("vitalicio"), "vitalici" );
	deepEqual( Stem("vitalidad"), "vital" );
	deepEqual( Stem("vitamina"), "vitamin" );
	deepEqual( Stem("vitaminas"), "vitamin" );
	deepEqual( Stem("vite"), "vit" );
	deepEqual( Stem("vito"), "vit" );
	deepEqual( Stem("vítores"), "vitor" );
	deepEqual( Stem("vitro"), "vitr" );
	deepEqual( Stem("vitroles"), "vitrol" );
	deepEqual( Stem("vittorio"), "vittori" );
	deepEqual( Stem("vituperado"), "vituper" );
	deepEqual( Stem("vituperados"), "vituper" );
	deepEqual( Stem("viuda"), "viud" );
	deepEqual( Stem("viudas"), "viud" );
	deepEqual( Stem("viudo"), "viud" );
	deepEqual( Stem("viva"), "viv" );
	deepEqual( Stem("vivales"), "vival" );
	deepEqual( Stem("vivan"), "viv" );
	deepEqual( Stem("vivas"), "viv" );
	deepEqual( Stem("vive"), "viv" );
	deepEqual( Stem("viven"), "viv" );
	deepEqual( Stem("víveres"), "viver" );
	deepEqual( Stem("vivero"), "viver" );
	deepEqual( Stem("viví"), "viv" );
	deepEqual( Stem("vivía"), "viv" );
	deepEqual( Stem("vivíamos"), "viv" );
	deepEqual( Stem("vivían"), "viv" );
	deepEqual( Stem("vivible"), "vivibl" );
	deepEqual( Stem("vivido"), "viv" );
	deepEqual( Stem("vividos"), "viv" );
	deepEqual( Stem("vivienda"), "viviend" );
	deepEqual( Stem("viviendas"), "viviend" );
	deepEqual( Stem("viviendo"), "viv" );
	deepEqual( Stem("viviente"), "vivient" );
	deepEqual( Stem("vivientes"), "vivient" );
	deepEqual( Stem("viviera"), "viv" );
	deepEqual( Stem("vivieran"), "viv" );
	deepEqual( Stem("vivieron"), "viv" );
	deepEqual( Stem("vivillos"), "vivill" );
	deepEqual( Stem("vivimos"), "viv" );
	deepEqual( Stem("vivió"), "viv" );
	deepEqual( Stem("vivir"), "viv" );
	deepEqual( Stem("vivirá"), "viv" );
	deepEqual( Stem("vivirse"), "viv" );
	deepEqual( Stem("vivo"), "viv" );
	deepEqual( Stem("vivos"), "viv" );
	deepEqual( Stem("vl"), "vl" );
	deepEqual( Stem("vladimir"), "vladim" );
	deepEqual( Stem("vocabulario"), "vocabulari" );
	deepEqual( Stem("vocación"), "vocacion" );
	deepEqual( Stem("vocacional"), "vocacional" );
	deepEqual( Stem("vocaciones"), "vocacion" );
	deepEqual( Stem("vocal"), "vocal" );
	deepEqual( Stem("vocalía"), "vocal" );
	deepEqual( Stem("vocalista"), "vocal" );
	deepEqual( Stem("vocera"), "vocer" );
	deepEqual( Stem("vocero"), "vocer" );
	deepEqual( Stem("voceros"), "vocer" );
	deepEqual( Stem("voces"), "voc" );
	deepEqual( Stem("voice"), "voic" );
	deepEqual( Stem("voices"), "voic" );
	deepEqual( Stem("voladeros"), "volader" );
	deepEqual( Stem("volando"), "vol" );
	deepEqual( Stem("volante"), "volant" );
	deepEqual( Stem("volantes"), "volant" );
	deepEqual( Stem("volar"), "vol" );
	deepEqual( Stem("volará"), "vol" );
	deepEqual( Stem("volaría"), "vol" );
	deepEqual( Stem("volátil"), "volatil" );
	deepEqual( Stem("volátiles"), "volatil" );
	deepEqual( Stem("volatilidad"), "volatil" );
	deepEqual( Stem("volcadura"), "volcadur" );
	deepEqual( Stem("volcamos"), "volc" );
	deepEqual( Stem("volcán"), "volcan" );
	deepEqual( Stem("volcanes"), "volcan" );
	deepEqual( Stem("volcánica"), "volcan" );
	deepEqual( Stem("volcánico"), "volcan" );
	deepEqual( Stem("volcar"), "volc" );
	deepEqual( Stem("volcaron"), "volc" );
	deepEqual( Stem("volcó"), "volc" );
	deepEqual( Stem("voleibol"), "voleibol" );
	deepEqual( Stem("volga"), "volg" );
	deepEqual( Stem("volkswagen"), "volkswag" );
	deepEqual( Stem("volmer"), "volm" );
	deepEqual( Stem("voltaire"), "voltair" );
	deepEqual( Stem("voltea"), "volte" );
	deepEqual( Stem("voltear"), "volt" );
	deepEqual( Stem("volteó"), "volte" );
	deepEqual( Stem("volteretas"), "volteret" );
	deepEqual( Stem("voltios"), "volti" );
	deepEqual( Stem("volts"), "volts" );
	deepEqual( Stem("voluble"), "volubl" );
	deepEqual( Stem("volumen"), "volum" );
	deepEqual( Stem("volumenes"), "volumen" );
	deepEqual( Stem("volúmenes"), "volumen" );
	deepEqual( Stem("voluminosísima"), "voluminosisim" );
	deepEqual( Stem("voluntad"), "volunt" );
	deepEqual( Stem("voluntades"), "voluntad" );
	deepEqual( Stem("voluntaria"), "voluntari" );
	deepEqual( Stem("voluntariado"), "voluntari" );
	deepEqual( Stem("voluntariamente"), "voluntari" );
	deepEqual( Stem("voluntarias"), "voluntari" );
	deepEqual( Stem("voluntario"), "voluntari" );
	deepEqual( Stem("voluntarios"), "voluntari" );
	deepEqual( Stem("voluntarioso"), "voluntari" );
	deepEqual( Stem("volvamos"), "volv" );
	deepEqual( Stem("volver"), "volv" );
	deepEqual( Stem("volverá"), "volv" );
	deepEqual( Stem("volverán"), "volv" );
	deepEqual( Stem("volveré"), "volv" );
	deepEqual( Stem("volvería"), "volv" );
	deepEqual( Stem("volverlas"), "volv" );
	deepEqual( Stem("volverse"), "volv" );
	deepEqual( Stem("volvía"), "volv" );
	deepEqual( Stem("volviendo"), "volv" );
	deepEqual( Stem("volvieron"), "volv" );
	deepEqual( Stem("volvimos"), "volv" );
	deepEqual( Stem("volvió"), "volv" );
	deepEqual( Stem("volvo"), "volv" );
	deepEqual( Stem("volvoramírez"), "volvoramirez" );
	deepEqual( Stem("vomitar"), "vomit" );
	deepEqual( Stem("vómitos"), "vomit" );
	deepEqual( Stem("von"), "von" );
	deepEqual( Stem("vorazmente"), "voraz" );
	deepEqual( Stem("vosso"), "voss" );
	deepEqual( Stem("vota"), "vot" );
	deepEqual( Stem("votación"), "votacion" );
	deepEqual( Stem("votaciones"), "votacion" );
	deepEqual( Stem("votantes"), "votant" );
	deepEqual( Stem("votar"), "vot" );
	deepEqual( Stem("votara"), "vot" );
	deepEqual( Stem("votará"), "vot" );
	deepEqual( Stem("votarán"), "vot" );
	deepEqual( Stem("votaría"), "vot" );
	deepEqual( Stem("votaron"), "vot" );
	deepEqual( Stem("votarse"), "vot" );
	deepEqual( Stem("vote"), "vot" );
	deepEqual( Stem("voten"), "vot" );
	deepEqual( Stem("voto"), "vot" );
	deepEqual( Stem("votó"), "vot" );
	deepEqual( Stem("votos"), "vot" );
	deepEqual( Stem("voy"), "voy" );
	deepEqual( Stem("voz"), "voz" );
	deepEqual( Stem("vs"), "vs" );
	deepEqual( Stem("vudú"), "vudu" );
	deepEqual( Stem("vuelas"), "vuel" );
	deepEqual( Stem("vuelca"), "vuelc" );
	deepEqual( Stem("vuele"), "vuel" );
	deepEqual( Stem("vuelo"), "vuel" );
	deepEqual( Stem("vuelos"), "vuel" );
	deepEqual( Stem("vuelta"), "vuelt" );
	deepEqual( Stem("vueltas"), "vuelt" );
	deepEqual( Stem("vuelto"), "vuelt" );
	deepEqual( Stem("vuelva"), "vuelv" );
	deepEqual( Stem("vuelvan"), "vuelv" );
	deepEqual( Stem("vuelve"), "vuelv" );
	deepEqual( Stem("vuelven"), "vuelv" );
	deepEqual( Stem("vuelvo"), "vuelv" );
	deepEqual( Stem("vuestro"), "vuestr" );
	deepEqual( Stem("vulcanología"), "vulcanolog" );
	deepEqual( Stem("vulcanólogos"), "vulcanolog" );
	deepEqual( Stem("vulgar"), "vulg" );
	deepEqual( Stem("vulgares"), "vulgar" );
	deepEqual( Stem("vulgaridad"), "vulgar" );
	deepEqual( Stem("vulgo"), "vulg" );
	deepEqual( Stem("vulnerabilidad"), "vulner" );
	deepEqual( Stem("vulnerable"), "vulner" );
	deepEqual( Stem("vulnerables"), "vulner" );
	deepEqual( Stem("vulneran"), "vulner" );
	deepEqual( Stem("vw"), "vw" );
	deepEqual( Stem("w"), "w" );
	deepEqual( Stem("wa"), "wa" );
	deepEqual( Stem("wal"), "wal" );
	deepEqual( Stem("walberto"), "walbert" );
	deepEqual( Stem("walcott"), "walcott" );
	deepEqual( Stem("wall"), "wall" );
	deepEqual( Stem("wallace"), "wallac" );
	deepEqual( Stem("walt"), "walt" );
	deepEqual( Stem("walter"), "walt" );
	deepEqual( Stem("walterio"), "walteri" );
	deepEqual( Stem("walton"), "walton" );
	deepEqual( Stem("ward"), "ward" );
	deepEqual( Stem("warner"), "warn" );
	deepEqual( Stem("warrants"), "warrants" );
	deepEqual( Stem("warren"), "warr" );
	deepEqual( Stem("washington"), "washington" );
	deepEqual( Stem("waterer"), "water" );
	deepEqual( Stem("we"), "we" );
	deepEqual( Stem("weisackaer"), "weisack" );
	deepEqual( Stem("weiss"), "weiss" );
	deepEqual( Stem("welch"), "welch" );
	deepEqual( Stem("wells"), "wells" );
	deepEqual( Stem("welsh"), "welsh" );
	deepEqual( Stem("wenceslao"), "wencesla" );
	deepEqual( Stem("wendy"), "wendy" );
	deepEqual( Stem("west"), "west" );
	deepEqual( Stem("western"), "western" );
	deepEqual( Stem("westh"), "westh" );
	deepEqual( Stem("westinghouse"), "westinghous" );
	deepEqual( Stem("wetherell"), "wetherell" );
	deepEqual( Stem("weule"), "weul" );
	deepEqual( Stem("whataburger"), "whataburg" );
	deepEqual( Stem("whisky"), "whisky" );
	deepEqual( Stem("widnall"), "widnall" );
	deepEqual( Stem("wiesel"), "wiesel" );
	deepEqual( Stem("wildlife"), "wildlif" );
	deepEqual( Stem("wilford"), "wilford" );
	deepEqual( Stem("william"), "william" );
	deepEqual( Stem("williams"), "williams" );
	deepEqual( Stem("williamson"), "williamson" );
	deepEqual( Stem("willie"), "willi" );
	deepEqual( Stem("wilson"), "wilson" );
	deepEqual( Stem("windows"), "windows" );
	deepEqual( Stem("winfield"), "winfield" );
	deepEqual( Stem("winston"), "winston" );
	deepEqual( Stem("winstone"), "winston" );
	deepEqual( Stem("wisconsin"), "wisconsin" );
	deepEqual( Stem("woldenberg"), "woldenberg" );
	deepEqual( Stem("wong"), "wong" );
	deepEqual( Stem("woody"), "woody" );
	deepEqual( Stem("worcester"), "worcest" );
	deepEqual( Stem("word"), "word" );
	deepEqual( Stem("works"), "works" );
	deepEqual( Stem("world"), "world" );
	deepEqual( Stem("worldnet"), "worldnet" );
	deepEqual( Stem("x"), "x" );
	deepEqual( Stem("xavier"), "xavi" );
	deepEqual( Stem("xenotransplantes"), "xenotranspl" );
	deepEqual( Stem("xenotrasplante"), "xenotraspl" );
	deepEqual( Stem("xenotrasplantes"), "xenotraspl" );
	deepEqual( Stem("xicoténcatl"), "xicotencatl" );
	deepEqual( Stem("xiii"), "xiii" );
	deepEqual( Stem("xilitla"), "xilitl" );
	deepEqual( Stem("xiv"), "xiv" );
	deepEqual( Stem("xix"), "xix" );
	deepEqual( Stem("xochimilco"), "xochimilc" );
	deepEqual( Stem("xochitl"), "xochitl" );
	deepEqual( Stem("xóchitl"), "xochitl" );
	deepEqual( Stem("xv"), "xv" );
	deepEqual( Stem("xvi"), "xvi" );
	deepEqual( Stem("xvii"), "xvii" );
	deepEqual( Stem("xviii"), "xviii" );
	deepEqual( Stem("xx"), "xx" );
	deepEqual( Stem("xxi"), "xxi" );
	deepEqual( Stem("xxiii"), "xxiii" );
	deepEqual( Stem("xxvi"), "xxvi" );
	deepEqual( Stem("y"), "y" );
	deepEqual( Stem("ya"), "ya" );
	deepEqual( Stem("yacía"), "yac" );
	deepEqual( Stem("yacimiento"), "yacimient" );
	deepEqual( Stem("yacimientos"), "yacimient" );
	deepEqual( Stem("yañez"), "yañez" );
	deepEqual( Stem("yanni"), "yanni" );
	deepEqual( Stem("yardas"), "yard" );
	deepEqual( Stem("yarmuch"), "yarmuch" );
	deepEqual( Stem("yaroslao"), "yarosla" );
	deepEqual( Stem("yate"), "yat" );
	deepEqual( Stem("ycosas"), "ycos" );
	deepEqual( Stem("years"), "years" );
	deepEqual( Stem("yeltsin"), "yeltsin" );
	deepEqual( Stem("yendo"), "yend" );
	deepEqual( Stem("yerbaniz"), "yerbaniz" );
	deepEqual( Stem("yerena"), "yeren" );
	deepEqual( Stem("yerno"), "yern" );
	deepEqual( Stem("yeso"), "yes" );
	deepEqual( Stem("yidish"), "yidish" );
	deepEqual( Stem("ylizaliturri"), "ylizaliturri" );
	deepEqual( Stem("yo"), "yo" );
	deepEqual( Stem("yodo"), "yod" );
	deepEqual( Stem("yoga"), "yog" );
	deepEqual( Stem("yogurt"), "yogurt" );
	deepEqual( Stem("yolanda"), "yoland" );
	deepEqual( Stem("yoltectl"), "yoltectl" );
	deepEqual( Stem("yonke"), "yonk" );
	deepEqual( Stem("yonquero"), "yonquer" );
	deepEqual( Stem("york"), "york" );
	deepEqual( Stem("yorky"), "yorky" );
	deepEqual( Stem("youshimatz"), "youshimatz" );
	deepEqual( Stem("yrapuato"), "yrapuat" );
	deepEqual( Stem("yuc"), "yuc" );
	deepEqual( Stem("yucatán"), "yucatan" );
	deepEqual( Stem("yucateca"), "yucatec" );
	deepEqual( Stem("yucateco"), "yucatec" );
	deepEqual( Stem("yucatecos"), "yucatec" );
	deepEqual( Stem("yugoslavia"), "yugoslavi" );
	deepEqual( Stem("yugoslavo"), "yugoslav" );
	deepEqual( Stem("yukio"), "yuki" );
	deepEqual( Stem("yunez"), "yunez" );
	deepEqual( Stem("yunta"), "yunt" );
	deepEqual( Stem("yuri"), "yuri" );
	deepEqual( Stem("yuxtapuesto"), "yuxtapuest" );
	deepEqual( Stem("yvonne"), "yvonn" );
	deepEqual( Stem("zabludowsky"), "zabludowsky" );
	deepEqual( Stem("zacarías"), "zac" );
	deepEqual( Stem("zacatecas"), "zacatec" );
	deepEqual( Stem("zacatepec"), "zacatepec" );
	deepEqual( Stem("zafra"), "zafr" );
	deepEqual( Stem("zag"), "zag" );
	deepEqual( Stem("zaga"), "zag" );
	deepEqual( Stem("zagas"), "zag" );
	deepEqual( Stem("zague"), "zag" );
	deepEqual( Stem("zaguero"), "zaguer" );
	deepEqual( Stem("zagueros"), "zaguer" );
	deepEqual( Stem("zahnle"), "zahnl" );
	deepEqual( Stem("zaid"), "zaid" );
	deepEqual( Stem("zaire"), "zair" );
	deepEqual( Stem("zalea"), "zale" );
	deepEqual( Stem("zambrano"), "zambran" );
	deepEqual( Stem("zamora"), "zamor" );
	deepEqual( Stem("zamorano"), "zamoran" );
	deepEqual( Stem("zamudio"), "zamudi" );
	deepEqual( Stem("zanabria"), "zanabri" );
	deepEqual( Stem("zancadilla"), "zancadill" );
	deepEqual( Stem("zancudos"), "zancud" );
	deepEqual( Stem("zanja"), "zanj" );
	deepEqual( Stem("zanjas"), "zanj" );
	deepEqual( Stem("zapalinamé"), "zapalinam" );
	deepEqual( Stem("zapata"), "zapat" );
	deepEqual( Stem("zapatera"), "zapater" );
	deepEqual( Stem("zapatilla"), "zapatill" );
	deepEqual( Stem("zapatitos"), "zapatit" );
	deepEqual( Stem("zapatos"), "zapat" );
	deepEqual( Stem("zapoteco"), "zapotec" );
	deepEqual( Stem("zar"), "zar" );
	deepEqual( Stem("zaragoza"), "zaragoz" );
	deepEqual( Stem("zarape"), "zarap" );
	deepEqual( Stem("zarapeados"), "zarap" );
	deepEqual( Stem("zárate"), "zarat" );
	deepEqual( Stem("zarazúa"), "zarazu" );
	deepEqual( Stem("zarco"), "zarc" );
	deepEqual( Stem("zarpó"), "zarp" );
	deepEqual( Stem("ze"), "ze" );
	deepEqual( Stem("zedillo"), "zedill" );
	deepEqual( Stem("zelanda"), "zeland" );
	deepEqual( Stem("zeltún"), "zeltun" );
	deepEqual( Stem("zenith"), "zenith" );
	deepEqual( Stem("zenón"), "zenon" );
	deepEqual( Stem("zepa"), "zep" );
	deepEqual( Stem("zepeda"), "zeped" );
	deepEqual( Stem("zertuche"), "zertuch" );
	deepEqual( Stem("zig"), "zig" );
	deepEqual( Stem("zimmerman"), "zimmerm" );
	deepEqual( Stem("zinser"), "zins" );
	deepEqual( Stem("zínser"), "zins" );
	deepEqual( Stem("zona"), "zon" );
	deepEqual( Stem("zonas"), "zon" );
	deepEqual( Stem("zoológico"), "zoolog" );
	deepEqual( Stem("zoológicos"), "zoolog" );
	deepEqual( Stem("zorkin"), "zorkin" );
	deepEqual( Stem("zorrilla"), "zorrill" );
	deepEqual( Stem("zorros"), "zorr" );
	deepEqual( Stem("zotoluca"), "zotoluc" );
	deepEqual( Stem("zotoluco"), "zotoluc" );
	deepEqual( Stem("zotolucos"), "zotoluc" );
	deepEqual( Stem("zuazua"), "zuazu" );
	deepEqual( Stem("zubillaga"), "zubillag" );
	deepEqual( Stem("zubizarreta"), "zubizarret" );
	deepEqual( Stem("zulia"), "zuli" );
	deepEqual( Stem("zúñiga"), "zuñig" );
	deepEqual( Stem("zurcos"), "zurc" );
	deepEqual( Stem("zurda"), "zurd" );
	deepEqual( Stem("zurdo"), "zurd" );
	deepEqual( Stem("zurdos"), "zurd" );
	deepEqual( Stem("zurita"), "zurit" );
	deepEqual( Stem("zutano"), "zutan" );
});
