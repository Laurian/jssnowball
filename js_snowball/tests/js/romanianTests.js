QUnit.test('romanian', function(){
	var Stem = snowballFactory.newStemmer('romanian').stem;
	deepEqual( Stem("a"), "a" );
	deepEqual( Stem("ab"), "ab" );
	deepEqual( Stem("abajur"), "abajur" );
	deepEqual( Stem("abajurul"), "abajur" );
	deepEqual( Stem("abandon"), "abandon" );
	deepEqual( Stem("abandoneze"), "abandon" );
	deepEqual( Stem("abat"), "abat" );
	deepEqual( Stem("abate"), "abat" );
	deepEqual( Stem("abatere"), "abat" );
	deepEqual( Stem("abateri"), "abater" );
	deepEqual( Stem("abator"), "abat" );
	deepEqual( Stem("abătut"), "abăt" );
	deepEqual( Stem("abătută"), "abăt" );
	deepEqual( Stem("abătuţi"), "abătuţ" );
	deepEqual( Stem("abces"), "abces" );
	deepEqual( Stem("aberaţie"), "aber" );
	deepEqual( Stem("aberaţii"), "aber" );
	deepEqual( Stem("aberaţiune"), "aber" );
	deepEqual( Stem("aberaţiuni"), "aberat" );
	deepEqual( Stem("abia"), "abi" );
	deepEqual( Stem("abil"), "abil" );
	deepEqual( Stem("abilă"), "abil" );
	deepEqual( Stem("abile"), "abil" );
	deepEqual( Stem("abilitate"), "abil" );
	deepEqual( Stem("abilitatea"), "abil" );
	deepEqual( Stem("abnegaţie"), "abneg" );
	deepEqual( Stem("abonamentul"), "abonament" );
	deepEqual( Stem("abruptă"), "abrupt" );
	deepEqual( Stem("absent"), "absent" );
	deepEqual( Stem("absentă"), "absent" );
	deepEqual( Stem("absente"), "absent" );
	deepEqual( Stem("absenţa"), "absenţ" );
	deepEqual( Stem("absenţă"), "absenţ" );
	deepEqual( Stem("absenţi"), "absenţ" );
	deepEqual( Stem("absolut"), "absol" );
	deepEqual( Stem("absoluta"), "absol" );
	deepEqual( Stem("absolută"), "absol" );
	deepEqual( Stem("absolute"), "absol" );
	deepEqual( Stem("absolutul"), "absol" );
	deepEqual( Stem("absolutului"), "absol" );
	deepEqual( Stem("absoluţi"), "absoluţ" );
	deepEqual( Stem("absolve"), "absolv" );
	deepEqual( Stem("absolvenţi"), "absolvenţ" );
	deepEqual( Stem("absolvenţii"), "absolvenţ" );
	deepEqual( Stem("absolvi"), "absolv" );
	deepEqual( Stem("absolvire"), "absolv" );
	deepEqual( Stem("absolvit"), "absolv" );
	deepEqual( Stem("absolvită"), "absolv" );
	deepEqual( Stem("absolviţi"), "absolv" );
	deepEqual( Stem("absorbant"), "absorb" );
	deepEqual( Stem("absorbantă"), "absorb" );
	deepEqual( Stem("absorbi"), "absorb" );
	deepEqual( Stem("absorbit"), "absorb" );
	deepEqual( Stem("absorbite"), "absorb" );
	deepEqual( Stem("absorbiţi"), "absorb" );
	deepEqual( Stem("absorbţia"), "absorbţ" );
	deepEqual( Stem("abstinent"), "abstinent" );
	deepEqual( Stem("abstract"), "abstract" );
	deepEqual( Stem("abstractă"), "abstract" );
	deepEqual( Stem("abstracte"), "abstract" );
	deepEqual( Stem("abstractiza"), "abstractiz" );
	deepEqual( Stem("abstractizare"), "abstractiz" );
	deepEqual( Stem("abstractizat"), "abstractiz" );
	deepEqual( Stem("abstractizăm"), "abstractiz" );
	deepEqual( Stem("abstracto"), "abstracto" );
	deepEqual( Stem("abstracţia"), "abstracţ" );
	deepEqual( Stem("abstracţii"), "abstracţ" );
	deepEqual( Stem("abstracţiune"), "abstract" );
	deepEqual( Stem("abstracţiuni"), "abstract" );
	deepEqual( Stem("abstrage"), "abstrag" );
	deepEqual( Stem("absurd"), "absurd" );
	deepEqual( Stem("absurdă"), "absurd" );
	deepEqual( Stem("absurde"), "absurd" );
	deepEqual( Stem("absurditate"), "absurd" );
	deepEqual( Stem("absurdităţi"), "absurd" );
	deepEqual( Stem("absurdităţilor"), "absurd" );
	deepEqual( Stem("absurdul"), "absurd" );
	deepEqual( Stem("abţină"), "abţin" );
	deepEqual( Stem("abţinem"), "abţin" );
	deepEqual( Stem("abţinere"), "abţin" );
	deepEqual( Stem("abundent"), "abundent" );
	deepEqual( Stem("abundentă"), "abundent" );
	deepEqual( Stem("abur"), "abur" );
	deepEqual( Stem("aburi"), "abur" );
	deepEqual( Stem("aburit"), "abur" );
	deepEqual( Stem("aburitoare"), "abur" );
	deepEqual( Stem("aburoase"), "abur" );
	deepEqual( Stem("aburul"), "abur" );
	deepEqual( Stem("abuza"), "abuz" );
	deepEqual( Stem("abuzez"), "abuz" );
	deepEqual( Stem("abuziv"), "abuz" );
	deepEqual( Stem("ac"), "ac" );
	deepEqual( Stem("academic"), "academ" );
	deepEqual( Stem("acar"), "acar" );
	deepEqual( Stem("acasă"), "acas" );
	deepEqual( Stem("accelerat"), "acceler" );
	deepEqual( Stem("accent"), "accent" );
	deepEqual( Stem("accentuat"), "accentu" );
	deepEqual( Stem("accentuată"), "accentu" );
	deepEqual( Stem("accentuate"), "accentu" );
	deepEqual( Stem("accentuaţi"), "accentu" );
	deepEqual( Stem("accentuez"), "accentu" );
	deepEqual( Stem("accentul"), "accent" );
	deepEqual( Stem("accept"), "accept" );
	deepEqual( Stem("acceptabile"), "accept" );
	deepEqual( Stem("acceptat"), "accept" );
	deepEqual( Stem("acceptată"), "accept" );
	deepEqual( Stem("acceptând"), "accept" );
	deepEqual( Stem("acceptă"), "accept" );
	deepEqual( Stem("accepţi"), "accepţ" );
	deepEqual( Stem("acces"), "acces" );
	deepEqual( Stem("accesele"), "acce" );
	deepEqual( Stem("accesibile"), "accesib" );
	deepEqual( Stem("accesorii"), "accesor" );
	deepEqual( Stem("accident"), "accident" );
	deepEqual( Stem("accidentul"), "accident" );
	deepEqual( Stem("acea"), "ace" );
	deepEqual( Stem("aceasta"), "aceast" );
	deepEqual( Stem("această"), "aceast" );
	deepEqual( Stem("aceea"), "ace" );
	deepEqual( Stem("aceeaşi"), "aceeaş" );
	deepEqual( Stem("acei"), "ace" );
	deepEqual( Stem("aceia"), "acei" );
	deepEqual( Stem("aceiaşi"), "acei" );
	deepEqual( Stem("acel"), "acel" );
	deepEqual( Stem("acela"), "acel" );
	deepEqual( Stem("acelaşi"), "acel" );
	deepEqual( Stem("acelaşti"), "acelaşt" );
	deepEqual( Stem("acele"), "ace" );
	deepEqual( Stem("acelea"), "acel" );
	deepEqual( Stem("aceleaşi"), "aceleaş" );
	deepEqual( Stem("acelei"), "acele" );
	deepEqual( Stem("aceleia"), "acelei" );
	deepEqual( Stem("aceleiaşi"), "acelei" );
	deepEqual( Stem("acelor"), "ace" );
	deepEqual( Stem("acelora"), "acelor" );
	deepEqual( Stem("aceloraşi"), "acelor" );
	deepEqual( Stem("acelui"), "acel" );
	deepEqual( Stem("aceluiaşi"), "acelui" );
	deepEqual( Stem("acerbă"), "acerb" );
	deepEqual( Stem("acerbe"), "acerb" );
	deepEqual( Stem("acest"), "acest" );
	deepEqual( Stem("acesta"), "acest" );
	deepEqual( Stem("acestă"), "acest" );
	deepEqual( Stem("aceste"), "acest" );
	deepEqual( Stem("acestea"), "acest" );
	deepEqual( Stem("acestei"), "aceste" );
	deepEqual( Stem("acesteia"), "acestei" );
	deepEqual( Stem("acestor"), "acestor" );
	deepEqual( Stem("acestora"), "acestor" );
	deepEqual( Stem("acestui"), "acest" );
	deepEqual( Stem("acestuia"), "acestui" );
	deepEqual( Stem("aceşti"), "aceşt" );
	deepEqual( Stem("aceştia"), "aceşt" );
	deepEqual( Stem("achile"), "achi" );
	deepEqual( Stem("achita"), "achit" );
	deepEqual( Stem("achitam"), "achit" );
	deepEqual( Stem("achitare"), "achit" );
	deepEqual( Stem("achitat"), "achit" );
	deepEqual( Stem("achitaters"), "achitaters" );
	deepEqual( Stem("achitaţi"), "achit" );
	deepEqual( Stem("achiţi"), "achiţ" );
	deepEqual( Stem("achiziţia"), "achiziţ" );
	deepEqual( Stem("achiziţie"), "achiziţ" );
	deepEqual( Stem("achiziţii"), "achiz" );
	deepEqual( Stem("achiziţionarea"), "achiziţion" );
	deepEqual( Stem("achiziţionat"), "achiziţion" );
	deepEqual( Stem("achiziţionată"), "achiziţion" );
	deepEqual( Stem("achiziţionării"), "achiziţionăr" );
	deepEqual( Stem("achiziţioneze"), "achiziţion" );
	deepEqual( Stem("aci"), "aci" );
	deepEqual( Stem("acid"), "acid" );
	deepEqual( Stem("acidulată"), "acidul" );
	deepEqual( Stem("acidulate"), "acidul" );
	deepEqual( Stem("aciest"), "aciest" );
	deepEqual( Stem("aciness"), "aciness" );
	deepEqual( Stem("aclamaţii"), "aclam" );
	deepEqual( Stem("aclamaţiile"), "aclam" );
	deepEqual( Stem("acolo"), "acolo" );
	deepEqual( Stem("acomodare"), "acomod" );
	deepEqual( Stem("acomodări"), "acomodăr" );
	deepEqual( Stem("acopăr"), "acopăr" );
	deepEqual( Stem("acoperă"), "acoper" );
	deepEqual( Stem("acopere"), "acop" );
	deepEqual( Stem("acoperindu"), "acoper" );
	deepEqual( Stem("acoperire"), "acoper" );
	deepEqual( Stem("acoperirea"), "acoper" );
	deepEqual( Stem("acoperişul"), "acoperiş" );
	deepEqual( Stem("acoperişurile"), "acoperişur" );
	deepEqual( Stem("acoperit"), "acoper" );
	deepEqual( Stem("acoperită"), "acoper" );
	deepEqual( Stem("acoperite"), "acoper" );
	deepEqual( Stem("acoperitor"), "acoper" );
	deepEqual( Stem("acoperiţi"), "acoper" );
	deepEqual( Stem("acord"), "acord" );
	deepEqual( Stem("acordat"), "acord" );
	deepEqual( Stem("acordă"), "acord" );
	deepEqual( Stem("acordăm"), "acord" );
	deepEqual( Stem("acorduri"), "acordur" );
	deepEqual( Stem("acostez"), "acost" );
	deepEqual( Stem("acră"), "acră" );
	deepEqual( Stem("acreala"), "acreal" );
	deepEqual( Stem("acreală"), "acreal" );
	deepEqual( Stem("acreditarea"), "acredit" );
	deepEqual( Stem("acrobat"), "acrob" );
	deepEqual( Stem("acru"), "acru" );
	deepEqual( Stem("act"), "act" );
	deepEqual( Stem("acte"), "acte" );
	deepEqual( Stem("actele"), "acte" );
	deepEqual( Stem("activ"), "activ" );
	deepEqual( Stem("activă"), "activ" );
	deepEqual( Stem("active"), "activ" );
	deepEqual( Stem("activează"), "activ" );
	deepEqual( Stem("activitate"), "activ" );
	deepEqual( Stem("activitatea"), "activ" );
	deepEqual( Stem("activităţi"), "activ" );
	deepEqual( Stem("activităţii"), "activ" );
	deepEqual( Stem("actor"), "actor" );
	deepEqual( Stem("actorul"), "actor" );
	deepEqual( Stem("actriţa"), "actriţ" );
	deepEqual( Stem("actriţă"), "actriţ" );
	deepEqual( Stem("actriţe"), "actriţ" );
	deepEqual( Stem("actual"), "actual" );
	deepEqual( Stem("actuala"), "actual" );
	deepEqual( Stem("actuală"), "actual" );
	deepEqual( Stem("actuale"), "actual" );
	deepEqual( Stem("actualele"), "actual" );
	deepEqual( Stem("actualitate"), "actual" );
	deepEqual( Stem("actualitatea"), "actual" );
	deepEqual( Stem("actualităţii"), "actual" );
	deepEqual( Stem("actualizare"), "actualiz" );
	deepEqual( Stem("actul"), "act" );
	deepEqual( Stem("acţionari"), "acţionar" );
	deepEqual( Stem("acţionăm"), "acţion" );
	deepEqual( Stem("acţionează"), "acţion" );
	deepEqual( Stem("acţionez"), "acţion" );
	deepEqual( Stem("acţiune"), "acţiun" );
	deepEqual( Stem("acţiunea"), "acţiun" );
	deepEqual( Stem("acţiuni"), "acţiun" );
	deepEqual( Stem("acţiunii"), "acţiun" );
	deepEqual( Stem("acţiunile"), "acţiun" );
	deepEqual( Stem("acu"), "acu" );
	deepEqual( Stem("acuarele"), "acuar" );
	deepEqual( Stem("acul"), "ac" );
	deepEqual( Stem("acum"), "acum" );
	deepEqual( Stem("acuma"), "acum" );
	deepEqual( Stem("acustic"), "acust" );
	deepEqual( Stem("acut"), "acut" );
	deepEqual( Stem("acută"), "acut" );
	deepEqual( Stem("acute"), "acut" );
	deepEqual( Stem("acuzat"), "acuz" );
	deepEqual( Stem("acuză"), "acuz" );
	deepEqual( Stem("acuzi"), "acuz" );
	deepEqual( Stem("acvilin"), "acvilin" );
	deepEqual( Stem("ad"), "ad" );
	deepEqual( Stem("adamici"), "adam" );
	deepEqual( Stem("adaose"), "adao" );
	deepEqual( Stem("adapta"), "adapt" );
	deepEqual( Stem("adaptabile"), "adapt" );
	deepEqual( Stem("adaptare"), "adapt" );
	deepEqual( Stem("adaptarea"), "adapt" );
	deepEqual( Stem("adaptase"), "adapt" );
	deepEqual( Stem("adaptat"), "adapt" );
	deepEqual( Stem("adapteze"), "adapt" );
	deepEqual( Stem("adaug"), "adaug" );
	deepEqual( Stem("adaugă"), "adaug" );
	deepEqual( Stem("adauge"), "adaug" );
	deepEqual( Stem("adânc"), "adânc" );
	deepEqual( Stem("adâncă"), "adânc" );
	deepEqual( Stem("adâncea"), "adânc" );
	deepEqual( Stem("adâncească"), "adânc" );
	deepEqual( Stem("adânci"), "adânc" );
	deepEqual( Stem("adâncime"), "adâncim" );
	deepEqual( Stem("adâncimea"), "adâncim" );
	deepEqual( Stem("adâncindu"), "adânc" );
	deepEqual( Stem("adâncit"), "adânc" );
	deepEqual( Stem("adâncite"), "adânc" );
	deepEqual( Stem("adâncituri"), "adâncitur" );
	deepEqual( Stem("adâncul"), "adânc" );
	deepEqual( Stem("adâncurilor"), "adâncur" );
	deepEqual( Stem("adăpa"), "adăp" );
	deepEqual( Stem("adăpost"), "adăpost" );
	deepEqual( Stem("adăpostea"), "adăpost" );
	deepEqual( Stem("adăposteşte"), "adăpost" );
	deepEqual( Stem("adăposti"), "adăpost" );
	deepEqual( Stem("adăpostim"), "adăpost" );
	deepEqual( Stem("adăpostită"), "adăpost" );
	deepEqual( Stem("adăpostiţi"), "adăpost" );
	deepEqual( Stem("adăpostul"), "adăpost" );
	deepEqual( Stem("adăposturi"), "adăpostur" );
	deepEqual( Stem("adăuga"), "adăug" );
	deepEqual( Stem("adăugat"), "adăug" );
	deepEqual( Stem("adăugăm"), "adăug" );
	deepEqual( Stem("adăugi"), "adăug" );
	deepEqual( Stem("adecvare"), "adecv" );
	deepEqual( Stem("adecvat"), "adecv" );
	deepEqual( Stem("adecvată"), "adecv" );
	deepEqual( Stem("adecvate"), "adecv" );
	deepEqual( Stem("adecvaţi"), "adecv" );
	deepEqual( Stem("ademeneşte"), "ademen" );
	deepEqual( Stem("ademenitoare"), "ademen" );
	deepEqual( Stem("ademeniţi"), "ademen" );
	deepEqual( Stem("adepţi"), "adepţ" );
	deepEqual( Stem("aderenţe"), "aderenţ" );
	deepEqual( Stem("adese"), "ade" );
	deepEqual( Stem("adesea"), "ade" );
	deepEqual( Stem("adeseori"), "adeseor" );
	deepEqual( Stem("adevăr"), "adevăr" );
	deepEqual( Stem("adevărat"), "adevăr" );
	deepEqual( Stem("adevărata"), "adevăr" );
	deepEqual( Stem("adevărată"), "adevăr" );
	deepEqual( Stem("adevărate"), "adevăr" );
	deepEqual( Stem("adevăratei"), "adevăr" );
	deepEqual( Stem("adevăratul"), "adevăr" );
	deepEqual( Stem("adevăraţi"), "adevăr" );
	deepEqual( Stem("adevăraţii"), "adevăr" );
	deepEqual( Stem("adevăru"), "adevăru" );
	deepEqual( Stem("adevărul"), "adevăr" );
	deepEqual( Stem("adevărului"), "adevăr" );
	deepEqual( Stem("adevăruri"), "adevărur" );
	deepEqual( Stem("adevărurile"), "adevărur" );
	deepEqual( Stem("adevărurilor"), "adevărur" );
	deepEqual( Stem("adevereau"), "adever" );
	deepEqual( Stem("adevereşte"), "adever" );
	deepEqual( Stem("adică"), "adic" );
	deepEqual( Stem("adiecto"), "adiecto" );
	deepEqual( Stem("adiere"), "adier" );
	deepEqual( Stem("adineauri"), "adineaur" );
	deepEqual( Stem("adiţionăm"), "adiţion" );
	deepEqual( Stem("adiţiune"), "adit" );
	deepEqual( Stem("adiţiunea"), "adit" );
	deepEqual( Stem("adjectiv"), "adject" );
	deepEqual( Stem("administrativ"), "administr" );
	deepEqual( Stem("administrativă"), "administr" );
	deepEqual( Stem("administrative"), "administr" );
	deepEqual( Stem("administrativi"), "administr" );
	deepEqual( Stem("administrator"), "administr" );
	deepEqual( Stem("administraţie"), "administr" );
	deepEqual( Stem("administraţiei"), "administr" );
	deepEqual( Stem("admir"), "admir" );
	deepEqual( Stem("admira"), "admir" );
	deepEqual( Stem("admirabil"), "admir" );
	deepEqual( Stem("admirabila"), "admir" );
	deepEqual( Stem("admirabilă"), "admir" );
	deepEqual( Stem("admirabilei"), "admirabile" );
	deepEqual( Stem("admiram"), "admir" );
	deepEqual( Stem("admirasem"), "admir" );
	deepEqual( Stem("admirativă"), "admir" );
	deepEqual( Stem("admirative"), "admir" );
	deepEqual( Stem("admiratori"), "admir" );
	deepEqual( Stem("admiratorilor"), "admir" );
	deepEqual( Stem("admiraţia"), "admir" );
	deepEqual( Stem("admiraţie"), "admir" );
	deepEqual( Stem("admiraţiei"), "admir" );
	deepEqual( Stem("admiraţiile"), "admir" );
	deepEqual( Stem("admiră"), "admir" );
	deepEqual( Stem("admirăm"), "admir" );
	deepEqual( Stem("admis"), "admis" );
	deepEqual( Stem("admisesem"), "admi" );
	deepEqual( Stem("admit"), "admit" );
	deepEqual( Stem("admită"), "admit" );
	deepEqual( Stem("admite"), "admit" );
	deepEqual( Stem("admitem"), "admit" );
	deepEqual( Stem("admiteţi"), "admit" );
	deepEqual( Stem("admiţi"), "admiţ" );
	deepEqual( Stem("admonestat"), "admonest" );
	deepEqual( Stem("adoarmă"), "adoarm" );
	deepEqual( Stem("adolescentă"), "adolescent" );
	deepEqual( Stem("adoptat"), "adopt" );
	deepEqual( Stem("adoptă"), "adopt" );
	deepEqual( Stem("ador"), "ador" );
	deepEqual( Stem("adorabil"), "ador" );
	deepEqual( Stem("adorabilă"), "ador" );
	deepEqual( Stem("adorată"), "ador" );
	deepEqual( Stem("adorate"), "ador" );
	deepEqual( Stem("adoratorii"), "ador" );
	deepEqual( Stem("adoraţie"), "ador" );
	deepEqual( Stem("adore"), "ador" );
	deepEqual( Stem("adorm"), "adorm" );
	deepEqual( Stem("adormi"), "adorm" );
	deepEqual( Stem("adormit"), "adorm" );
	deepEqual( Stem("adrenalină"), "adrenalin" );
	deepEqual( Stem("adresa"), "adres" );
	deepEqual( Stem("adresat"), "adres" );
	deepEqual( Stem("adresată"), "adres" );
	deepEqual( Stem("adresaţi"), "adres" );
	deepEqual( Stem("adrese"), "adre" );
	deepEqual( Stem("adu"), "adu" );
	deepEqual( Stem("aduc"), "aduc" );
	deepEqual( Stem("aducând"), "aduc" );
	deepEqual( Stem("aducă"), "aduc" );
	deepEqual( Stem("aducătoare"), "aduc" );
	deepEqual( Stem("aduce"), "aduc" );
	deepEqual( Stem("aducea"), "aduc" );
	deepEqual( Stem("aduceam"), "aduc" );
	deepEqual( Stem("aduceau"), "aduc" );
	deepEqual( Stem("aducem"), "aduc" );
	deepEqual( Stem("aducere"), "aduc" );
	deepEqual( Stem("aducerea"), "aduc" );
	deepEqual( Stem("aduceri"), "aducer" );
	deepEqual( Stem("aducerii"), "aducer" );
	deepEqual( Stem("aducerilor"), "aducer" );
	deepEqual( Stem("aduceţi"), "aduc" );
	deepEqual( Stem("aduci"), "aduc" );
	deepEqual( Stem("adulmecau"), "adulmec" );
	deepEqual( Stem("adult"), "adult" );
	deepEqual( Stem("adun"), "adun" );
	deepEqual( Stem("aduna"), "adun" );
	deepEqual( Stem("adunam"), "adun" );
	deepEqual( Stem("adunare"), "adun" );
	deepEqual( Stem("adunarea"), "adun" );
	deepEqual( Stem("adunase"), "adun" );
	deepEqual( Stem("adunat"), "adun" );
	deepEqual( Stem("adunată"), "adun" );
	deepEqual( Stem("adunate"), "adun" );
	deepEqual( Stem("adunaţi"), "adun" );
	deepEqual( Stem("adunau"), "adun" );
	deepEqual( Stem("adună"), "adun" );
	deepEqual( Stem("adunăm"), "adun" );
	deepEqual( Stem("adunării"), "adunăr" );
	deepEqual( Stem("adunările"), "adunăr" );
	deepEqual( Stem("adunărilor"), "adunăr" );
	deepEqual( Stem("adunător"), "adun" );
	deepEqual( Stem("adunătură"), "adunăt" );
	deepEqual( Stem("adune"), "adun" );
	deepEqual( Stem("adus"), "adus" );
	deepEqual( Stem("adusă"), "adus" );
	deepEqual( Stem("aduse"), "adu" );
	deepEqual( Stem("adusese"), "adu" );
	deepEqual( Stem("aduşi"), "aduş" );
	deepEqual( Stem("adversar"), "adversar" );
	deepEqual( Stem("adversarii"), "adversar" );
	deepEqual( Stem("adversarul"), "adversar" );
	deepEqual( Stem("aer"), "aer" );
	deepEqual( Stem("aeraţiei"), "aer" );
	deepEqual( Stem("aere"), "aer" );
	deepEqual( Stem("aerian"), "aerian" );
	deepEqual( Stem("aeroplan"), "aeroplan" );
	deepEqual( Stem("aeroplanele"), "aeroplan" );
	deepEqual( Stem("aeroplanul"), "aeroplan" );
	deepEqual( Stem("aerul"), "aer" );
	deepEqual( Stem("aerului"), "aer" );
	deepEqual( Stem("afacere"), "afac" );
	deepEqual( Stem("afacerea"), "afac" );
	deepEqual( Stem("afaceri"), "afacer" );
	deepEqual( Stem("afacerile"), "afacer" );
	deepEqual( Stem("afacerilor"), "afacer" );
	deepEqual( Stem("afara"), "afar" );
	deepEqual( Stem("afară"), "afar" );
	deepEqual( Stem("afânat"), "afân" );
	deepEqual( Stem("afect"), "afect" );
	deepEqual( Stem("afectare"), "afect" );
	deepEqual( Stem("afectat"), "afect" );
	deepEqual( Stem("afectată"), "afect" );
	deepEqual( Stem("afectate"), "afect" );
	deepEqual( Stem("afectaţi"), "afect" );
	deepEqual( Stem("afectează"), "afect" );
	deepEqual( Stem("afectuoasă"), "afectu" );
	deepEqual( Stem("afecţie"), "afecţ" );
	deepEqual( Stem("afecţiune"), "afect" );
	deepEqual( Stem("afecţiunea"), "afect" );
	deepEqual( Stem("afirm"), "afirm" );
	deepEqual( Stem("afirma"), "afirm" );
	deepEqual( Stem("afirmai"), "afirm" );
	deepEqual( Stem("afirmare"), "afirm" );
	deepEqual( Stem("afirmarea"), "afirm" );
	deepEqual( Stem("afirmat"), "afirm" );
	deepEqual( Stem("afirmativ"), "afirm" );
	deepEqual( Stem("afirmaţi"), "afirm" );
	deepEqual( Stem("afirmaţia"), "afirm" );
	deepEqual( Stem("afirmaţie"), "afirm" );
	deepEqual( Stem("afirmaţiei"), "afirm" );
	deepEqual( Stem("afirmaţii"), "afirm" );
	deepEqual( Stem("afirmaţiile"), "afirm" );
	deepEqual( Stem("afirmaţiune"), "afirm" );
	deepEqual( Stem("afirmaţiunea"), "afirm" );
	deepEqual( Stem("afirmaţiuni"), "afirmat" );
	deepEqual( Stem("afirmaţiunii"), "afirmat" );
	deepEqual( Stem("afirmaţiunilor"), "afirmat" );
	deepEqual( Stem("afirmau"), "afirm" );
	deepEqual( Stem("afirmând"), "afirm" );
	deepEqual( Stem("afirmă"), "afirm" );
	deepEqual( Stem("afirmăm"), "afirm" );
	deepEqual( Stem("afirmării"), "afirmăr" );
	deepEqual( Stem("afirme"), "afirm" );
	deepEqual( Stem("afirmi"), "afirm" );
	deepEqual( Stem("afiş"), "afiş" );
	deepEqual( Stem("afişat"), "afiş" );
	deepEqual( Stem("afişe"), "afiş" );
	deepEqual( Stem("afişeze"), "afiş" );
	deepEqual( Stem("afla"), "afla" );
	deepEqual( Stem("aflam"), "aflam" );
	deepEqual( Stem("aflat"), "aflat" );
	deepEqual( Stem("aflau"), "aflau" );
	deepEqual( Stem("aflând"), "aflând" );
	deepEqual( Stem("află"), "află" );
	deepEqual( Stem("aflăm"), "aflăm" );
	deepEqual( Stem("afle"), "afle" );
	deepEqual( Stem("afli"), "afli" );
	deepEqual( Stem("aflu"), "aflu" );
	deepEqual( Stem("aforismelor"), "aforist" );
	deepEqual( Stem("africa"), "afric" );
	deepEqual( Stem("afumată"), "afum" );
	deepEqual( Stem("afunda"), "afund" );
	deepEqual( Stem("afundă"), "afund" );
	deepEqual( Stem("afurisită"), "afuris" );
	deepEqual( Stem("afurisiţii"), "afuris" );
	deepEqual( Stem("agale"), "agal" );
	deepEqual( Stem("agaţe"), "agaţ" );
	deepEqual( Stem("agăţa"), "agăţ" );
	deepEqual( Stem("agăţă"), "agăţ" );
	deepEqual( Stem("agăţător"), "agăţ" );
	deepEqual( Stem("agendă"), "agend" );
	deepEqual( Stem("agende"), "agend" );
	deepEqual( Stem("agentul"), "agent" );
	deepEqual( Stem("agenţie"), "agenţ" );
	deepEqual( Stem("ager"), "ager" );
	deepEqual( Stem("agerime"), "agerim" );
	deepEqual( Stem("agerimea"), "agerim" );
	deepEqual( Stem("aghiotant"), "aghiot" );
	deepEqual( Stem("aghiotantul"), "aghiot" );
	deepEqual( Stem("aghiotantului"), "aghiot" );
	deepEqual( Stem("aghiotanţii"), "aghiotanţ" );
	deepEqual( Stem("aghiotanul"), "aghiotan" );
	deepEqual( Stem("agitat"), "agit" );
	deepEqual( Stem("agitată"), "agit" );
	deepEqual( Stem("agitate"), "agitat" );
	deepEqual( Stem("agitator"), "agit" );
	deepEqual( Stem("agitatorii"), "agit" );
	deepEqual( Stem("agitatorilor"), "agit" );
	deepEqual( Stem("agitaţia"), "agit" );
	deepEqual( Stem("agitaţie"), "agit" );
	deepEqual( Stem("agitând"), "agit" );
	deepEqual( Stem("agită"), "agit" );
	deepEqual( Stem("aglomeraţie"), "aglomer" );
	deepEqual( Stem("agonia"), "agon" );
	deepEqual( Stem("agonie"), "agon" );
	deepEqual( Stem("agoniei"), "agon" );
	deepEqual( Stem("agonisit"), "agonis" );
	deepEqual( Stem("agraveze"), "agrav" );
	deepEqual( Stem("agreabil"), "agreabil" );
	deepEqual( Stem("agreabile"), "agreabil" );
	deepEqual( Stem("agreabilul"), "agreabil" );
	deepEqual( Stem("agregaţie"), "agreg" );
	deepEqual( Stem("agremente"), "agrement" );
	deepEqual( Stem("agresivă"), "agres" );
	deepEqual( Stem("agreziune"), "agreziun" );
	deepEqual( Stem("agricultură"), "agricult" );
	deepEqual( Stem("ah"), "ah" );
	deepEqual( Stem("ai"), "ai" );
	deepEqual( Stem("aia"), "aia" );
	deepEqual( Stem("aibă"), "aib" );
	deepEqual( Stem("aici"), "aic" );
	deepEqual( Stem("ailaltă"), "ailalt" );
	deepEqual( Stem("aiment"), "aiment" );
	deepEqual( Stem("aiurea"), "aiur" );
	deepEqual( Stem("aiureală"), "aiureal" );
	deepEqual( Stem("aiurelei"), "aiurele" );
	deepEqual( Stem("aiurit"), "aiur" );
	deepEqual( Stem("aiuriţi"), "aiur" );
	deepEqual( Stem("ajun"), "ajun" );
	deepEqual( Stem("ajung"), "ajung" );
	deepEqual( Stem("ajungă"), "ajung" );
	deepEqual( Stem("ajunge"), "ajung" );
	deepEqual( Stem("ajungea"), "ajung" );
	deepEqual( Stem("ajungeai"), "ajung" );
	deepEqual( Stem("ajungeau"), "ajung" );
	deepEqual( Stem("ajungem"), "ajung" );
	deepEqual( Stem("ajungere"), "ajung" );
	deepEqual( Stem("ajungerea"), "ajung" );
	deepEqual( Stem("ajungeţi"), "ajung" );
	deepEqual( Stem("ajungi"), "ajung" );
	deepEqual( Stem("ajuns"), "ajuns" );
	deepEqual( Stem("ajunse"), "ajun" );
	deepEqual( Stem("ajunsese"), "ajun" );
	deepEqual( Stem("ajunsesem"), "ajun" );
	deepEqual( Stem("ajunşi"), "ajunş" );
	deepEqual( Stem("ajunul"), "ajun" );
	deepEqual( Stem("ajustate"), "ajust" );
	deepEqual( Stem("ajustări"), "ajustăr" );
	deepEqual( Stem("ajuta"), "ajut" );
	deepEqual( Stem("ajutase"), "ajut" );
	deepEqual( Stem("ajutat"), "ajut" );
	deepEqual( Stem("ajutându"), "ajut" );
	deepEqual( Stem("ajută"), "ajut" );
	deepEqual( Stem("ajutătoare"), "ajut" );
	deepEqual( Stem("ajutător"), "ajut" );
	deepEqual( Stem("ajute"), "ajut" );
	deepEqual( Stem("ajutoare"), "ajutoar" );
	deepEqual( Stem("ajutor"), "ajutor" );
	deepEqual( Stem("ajutorul"), "ajutor" );
	deepEqual( Stem("al"), "al" );
	deepEqual( Stem("alai"), "ala" );
	deepEqual( Stem("alaltăieri"), "alaltăier" );
	deepEqual( Stem("alamă"), "alam" );
	deepEqual( Stem("alarma"), "alarm" );
	deepEqual( Stem("alarmant"), "alarm" );
	deepEqual( Stem("alarmat"), "alarm" );
	deepEqual( Stem("alarmată"), "alarm" );
	deepEqual( Stem("alarmaţi"), "alarm" );
	deepEqual( Stem("alarmele"), "alarm" );
	deepEqual( Stem("alămie"), "alăm" );
	deepEqual( Stem("alămiul"), "alăm" );
	deepEqual( Stem("alăturată"), "alătur" );
	deepEqual( Stem("alăturate"), "alătur" );
	deepEqual( Stem("alăturaţi"), "alătur" );
	deepEqual( Stem("alătură"), "alăt" );
	deepEqual( Stem("alături"), "alătur" );
	deepEqual( Stem("alb"), "alb" );
	deepEqual( Stem("alba"), "alba" );
	deepEqual( Stem("albastră"), "albastr" );
	deepEqual( Stem("albastre"), "albastr" );
	deepEqual( Stem("albastru"), "albastru" );
	deepEqual( Stem("albastrul"), "albastr" );
	deepEqual( Stem("albaştri"), "albaştr" );
	deepEqual( Stem("albă"), "albă" );
	deepEqual( Stem("albăstrie"), "albăstr" );
	deepEqual( Stem("albăstrui"), "albăstr" );
	deepEqual( Stem("albăstruie"), "albăstrui" );
	deepEqual( Stem("albe"), "albe" );
	deepEqual( Stem("albească"), "albeasc" );
	deepEqual( Stem("albeaţa"), "albeaţ" );
	deepEqual( Stem("albi"), "albi" );
	deepEqual( Stem("albia"), "albi" );
	deepEqual( Stem("albicioasă"), "albic" );
	deepEqual( Stem("albicioase"), "albic" );
	deepEqual( Stem("albicios"), "albic" );
	deepEqual( Stem("albicioşi"), "albic" );
	deepEqual( Stem("albina"), "albin" );
	deepEqual( Stem("albină"), "albin" );
	deepEqual( Stem("albită"), "albit" );
	deepEqual( Stem("albul"), "alb" );
	deepEqual( Stem("albumul"), "album" );
	deepEqual( Stem("alburească"), "albur" );
	deepEqual( Stem("alburesc"), "albur" );
	deepEqual( Stem("alburiu"), "alburiu" );
	deepEqual( Stem("alburos"), "albur" );
	deepEqual( Stem("alcalay"), "alcalay" );
	deepEqual( Stem("alcătuieşte"), "alcătui" );
	deepEqual( Stem("alcătuirea"), "alcătu" );
	deepEqual( Stem("alcătuise"), "alcătu" );
	deepEqual( Stem("alcătuită"), "alcătu" );
	deepEqual( Stem("alcătuite"), "alcătu" );
	deepEqual( Stem("alcool"), "alcool" );
	deepEqual( Stem("ale"), "ale" );
	deepEqual( Stem("alea"), "ale" );
	deepEqual( Stem("aleagă"), "aleag" );
	deepEqual( Stem("aleargă"), "alearg" );
	deepEqual( Stem("aleasă"), "aleas" );
	deepEqual( Stem("alecu"), "alecu" );
	deepEqual( Stem("alee"), "ale" );
	deepEqual( Stem("aleea"), "ale" );
	deepEqual( Stem("aleg"), "aleg" );
	deepEqual( Stem("alegător"), "aleg" );
	deepEqual( Stem("alege"), "aleg" );
	deepEqual( Stem("alegea"), "aleg" );
	deepEqual( Stem("alegem"), "aleg" );
	deepEqual( Stem("alegere"), "aleg" );
	deepEqual( Stem("alegerea"), "aleg" );
	deepEqual( Stem("alegeţi"), "aleg" );
	deepEqual( Stem("alegi"), "aleg" );
	deepEqual( Stem("alegorie"), "alegor" );
	deepEqual( Stem("aleile"), "ale" );
	deepEqual( Stem("alerg"), "alerg" );
	deepEqual( Stem("alerga"), "alerg" );
	deepEqual( Stem("alergarea"), "alerg" );
	deepEqual( Stem("alergat"), "alerg" );
	deepEqual( Stem("alergau"), "alerg" );
	deepEqual( Stem("alergând"), "alerg" );
	deepEqual( Stem("alergăm"), "alerg" );
	deepEqual( Stem("alergător"), "alerg" );
	deepEqual( Stem("alerge"), "alerg" );
	deepEqual( Stem("alergi"), "alerg" );
	deepEqual( Stem("alernativ"), "alern" );
	deepEqual( Stem("ales"), "ales" );
	deepEqual( Stem("alese"), "ale" );
	deepEqual( Stem("alexandra"), "alexandr" );
	deepEqual( Stem("alexandria"), "alexandr" );
	deepEqual( Stem("alibi"), "alib" );
	deepEqual( Stem("alibiul"), "alib" );
	deepEqual( Stem("alienantă"), "alien" );
	deepEqual( Stem("alieze"), "aliez" );
	deepEqual( Stem("alifie"), "alif" );
	deepEqual( Stem("alifiile"), "alif" );
	deepEqual( Stem("aliment"), "aliment" );
	deepEqual( Stem("alimentar"), "alimentar" );
	deepEqual( Stem("alimentară"), "aliment" );
	deepEqual( Stem("alimentarei"), "alimentare" );
	deepEqual( Stem("alimentat"), "aliment" );
	deepEqual( Stem("alimentată"), "aliment" );
	deepEqual( Stem("alimentau"), "aliment" );
	deepEqual( Stem("alimentăm"), "aliment" );
	deepEqual( Stem("alimentării"), "alimentăr" );
	deepEqual( Stem("alimentează"), "aliment" );
	deepEqual( Stem("alimentelor"), "aliment" );
	deepEqual( Stem("alimentînd"), "alimentînd" );
	deepEqual( Stem("alina"), "alin" );
	deepEqual( Stem("alineat"), "alin" );
	deepEqual( Stem("aliniamentul"), "aliniament" );
	deepEqual( Stem("aliniat"), "alin" );
	deepEqual( Stem("aliniate"), "alin" );
	deepEqual( Stem("aliniatele"), "alin" );
	deepEqual( Stem("aliniaţi"), "alin" );
	deepEqual( Stem("aliniază"), "aliniaz" );
	deepEqual( Stem("aliniem"), "alin" );
	deepEqual( Stem("aliniere"), "alinier" );
	deepEqual( Stem("alinierii"), "alinier" );
	deepEqual( Stem("alinieze"), "aliniez" );
	deepEqual( Stem("alinta"), "alint" );
	deepEqual( Stem("alintată"), "alint" );
	deepEqual( Stem("alintau"), "alint" );
	deepEqual( Stem("alipesc"), "alip" );
	deepEqual( Stem("alipire"), "alip" );
	deepEqual( Stem("alivoar"), "alivoar" );
	deepEqual( Stem("alo"), "alo" );
	deepEqual( Stem("alois"), "alois" );
	deepEqual( Stem("alpenstockuri"), "alpenstockur" );
	deepEqual( Stem("als"), "als" );
	deepEqual( Stem("alsaciei"), "alsac" );
	deepEqual( Stem("alt"), "alt" );
	deepEqual( Stem("alta"), "alta" );
	deepEqual( Stem("altarului"), "altar" );
	deepEqual( Stem("altă"), "altă" );
	deepEqual( Stem("altădată"), "altăd" );
	deepEqual( Stem("altături"), "altătur" );
	deepEqual( Stem("altceva"), "altcev" );
	deepEqual( Stem("altcineva"), "altcinev" );
	deepEqual( Stem("alte"), "alte" );
	deepEqual( Stem("altei"), "alte" );
	deepEqual( Stem("alteia"), "altei" );
	deepEqual( Stem("altele"), "alte" );
	deepEqual( Stem("alteori"), "alteor" );
	deepEqual( Stem("alterat"), "alter" );
	deepEqual( Stem("alternativ"), "altern" );
	deepEqual( Stem("alteţa"), "alteţ" );
	deepEqual( Stem("altfel"), "altfel" );
	deepEqual( Stem("altitudine"), "altitudin" );
	deepEqual( Stem("altiţe"), "altiţ" );
	deepEqual( Stem("altminteri"), "altminter" );
	deepEqual( Stem("altoieşte"), "altoi" );
	deepEqual( Stem("altoirea"), "altoir" );
	deepEqual( Stem("altoită"), "altoit" );
	deepEqual( Stem("altor"), "altor" );
	deepEqual( Stem("altora"), "altor" );
	deepEqual( Stem("altruism"), "altruism" );
	deepEqual( Stem("altruismul"), "altruism" );
	deepEqual( Stem("altui"), "altu" );
	deepEqual( Stem("altuia"), "altui" );
	deepEqual( Stem("altul"), "alt" );
	deepEqual( Stem("altundeva"), "altundev" );
	deepEqual( Stem("alţi"), "alţi" );
	deepEqual( Stem("alţii"), "alţi" );
	deepEqual( Stem("alune"), "alun" );
	deepEqual( Stem("alunec"), "alunec" );
	deepEqual( Stem("aluneca"), "alunec" );
	deepEqual( Stem("alunecare"), "alunec" );
	deepEqual( Stem("alunecarea"), "alunec" );
	deepEqual( Stem("alunecat"), "alunec" );
	deepEqual( Stem("alunecaţi"), "alunec" );
	deepEqual( Stem("alunecau"), "alunec" );
	deepEqual( Stem("alunecând"), "alunec" );
	deepEqual( Stem("alunecă"), "alunec" );
	deepEqual( Stem("alunecăm"), "alunec" );
	deepEqual( Stem("alunecări"), "alunecăr" );
	deepEqual( Stem("alunecării"), "alunecăr" );
	deepEqual( Stem("alunecările"), "alunecăr" );
	deepEqual( Stem("alunecînd"), "alunecînd" );
	deepEqual( Stem("alunecoasă"), "alunec" );
	deepEqual( Stem("alungat"), "alung" );
	deepEqual( Stem("alungată"), "alung" );
	deepEqual( Stem("alunge"), "alung" );
	deepEqual( Stem("alura"), "alur" );
	deepEqual( Stem("aluvionar"), "aluvionar" );
	deepEqual( Stem("aluzia"), "aluz" );
	deepEqual( Stem("aluzianess"), "aluzianess" );
	deepEqual( Stem("aluzie"), "aluz" );
	deepEqual( Stem("aluzieness"), "aluzieness" );
	deepEqual( Stem("aluzii"), "aluz" );
	deepEqual( Stem("aluziile"), "aluz" );
	deepEqual( Stem("am"), "am" );
	deepEqual( Stem("amabil"), "amabil" );
	deepEqual( Stem("amabilă"), "amabil" );
	deepEqual( Stem("amabile"), "amabil" );
	deepEqual( Stem("amabili"), "amabil" );
	deepEqual( Stem("amabilitate"), "amabil" );
	deepEqual( Stem("amaneta"), "amanet" );
	deepEqual( Stem("amant"), "amant" );
	deepEqual( Stem("amanta"), "amant" );
	deepEqual( Stem("amantă"), "amant" );
	deepEqual( Stem("amante"), "amant" );
	deepEqual( Stem("amantul"), "amant" );
	deepEqual( Stem("amantului"), "amant" );
	deepEqual( Stem("amanţi"), "amanţ" );
	deepEqual( Stem("amanţii"), "amanţ" );
	deepEqual( Stem("amanţilor"), "amanţ" );
	deepEqual( Stem("amar"), "amar" );
	deepEqual( Stem("amara"), "amar" );
	deepEqual( Stem("amară"), "amar" );
	deepEqual( Stem("amare"), "amar" );
	deepEqual( Stem("amator"), "amat" );
	deepEqual( Stem("amânare"), "amân" );
	deepEqual( Stem("amânasem"), "amân" );
	deepEqual( Stem("amânat"), "amân" );
	deepEqual( Stem("amână"), "amân" );
	deepEqual( Stem("amândoi"), "amândo" );
	deepEqual( Stem("amândouă"), "amândou" );
	deepEqual( Stem("amândurora"), "amânduror" );
	deepEqual( Stem("amăgitoare"), "amăg" );
	deepEqual( Stem("amănunt"), "amănunt" );
	deepEqual( Stem("amănunte"), "amănunt" );
	deepEqual( Stem("amănuntele"), "amănunt" );
	deepEqual( Stem("amănunţită"), "amănunţ" );
	deepEqual( Stem("amănunţite"), "amănunţ" );
	deepEqual( Stem("amărâse"), "amăr" );
	deepEqual( Stem("amărât"), "amărât" );
	deepEqual( Stem("amărâtă"), "amărât" );
	deepEqual( Stem("amărâţi"), "amăr" );
	deepEqual( Stem("amărăciune"), "amărăciun" );
	deepEqual( Stem("amărăciunea"), "amărăciun" );
	deepEqual( Stem("amărăciunile"), "amărăciun" );
	deepEqual( Stem("ambe"), "ambe" );
	deepEqual( Stem("ambele"), "ambe" );
	deepEqual( Stem("ambelor"), "ambe" );
	deepEqual( Stem("ambiantă"), "ambiant" );
	deepEqual( Stem("ambiţia"), "ambiţ" );
	deepEqual( Stem("ambiţie"), "ambiţ" );
	deepEqual( Stem("ambiţii"), "ambiţ" );
	deepEqual( Stem("ambiţionat"), "ambiţion" );
	deepEqual( Stem("ambroziu"), "ambroziu" );
	deepEqual( Stem("ambulant"), "ambul" );
	deepEqual( Stem("ambulanţa"), "ambulanţ" );
	deepEqual( Stem("ambulanţe"), "ambulanţ" );
	deepEqual( Stem("amenajate"), "amenaj" );
	deepEqual( Stem("amenda"), "amend" );
	deepEqual( Stem("amendat"), "amend" );
	deepEqual( Stem("amendată"), "amend" );
	deepEqual( Stem("amendezi"), "amend" );
	deepEqual( Stem("ameninţa"), "ameninţ" );
	deepEqual( Stem("ameninţare"), "ameninţ" );
	deepEqual( Stem("ameninţarea"), "ameninţ" );
	deepEqual( Stem("ameninţat"), "ameninţ" );
	deepEqual( Stem("ameninţate"), "ameninţ" );
	deepEqual( Stem("ameninţaţi"), "ameninţ" );
	deepEqual( Stem("ameninţându"), "ameninţ" );
	deepEqual( Stem("ameninţă"), "ameninţ" );
	deepEqual( Stem("ameninţări"), "ameninţăr" );
	deepEqual( Stem("ameninţătoare"), "ameninţ" );
	deepEqual( Stem("ameninţător"), "ameninţ" );
	deepEqual( Stem("ameninţători"), "ameninţ" );
	deepEqual( Stem("america"), "amer" );
	deepEqual( Stem("american"), "american" );
	deepEqual( Stem("americană"), "american" );
	deepEqual( Stem("americane"), "american" );
	deepEqual( Stem("americanizare"), "americaniz" );
	deepEqual( Stem("amestec"), "amestec" );
	deepEqual( Stem("amestecat"), "amestec" );
	deepEqual( Stem("amestecată"), "amestec" );
	deepEqual( Stem("amestecate"), "amestec" );
	deepEqual( Stem("amestecă"), "amestec" );
	deepEqual( Stem("amesteci"), "amestec" );
	deepEqual( Stem("amestecul"), "amestec" );
	deepEqual( Stem("amestecului"), "amestec" );
	deepEqual( Stem("ameţeala"), "ameţeal" );
	deepEqual( Stem("ameţesc"), "ameţ" );
	deepEqual( Stem("ameţeşte"), "ameţ" );
	deepEqual( Stem("ameţind"), "ameţ" );
	deepEqual( Stem("ameţitoare"), "ameţ" );
	deepEqual( Stem("ameţitor"), "ameţ" );
	deepEqual( Stem("amfiteatrului"), "amfiteatr" );
	deepEqual( Stem("amiaza"), "amiaz" );
	deepEqual( Stem("amiază"), "amiaz" );
	deepEqual( Stem("amic"), "amic" );
	deepEqual( Stem("amicale"), "amic" );
	deepEqual( Stem("amică"), "amic" );
	deepEqual( Stem("amice"), "amic" );
	deepEqual( Stem("amicei"), "amice" );
	deepEqual( Stem("amicii"), "amic" );
	deepEqual( Stem("amicul"), "amic" );
	deepEqual( Stem("amiens"), "amiens" );
	deepEqual( Stem("amiezei"), "amieze" );
	deepEqual( Stem("amiezi"), "amiez" );
	deepEqual( Stem("aminte"), "amint" );
	deepEqual( Stem("amintea"), "amint" );
	deepEqual( Stem("aminteam"), "amint" );
	deepEqual( Stem("amintească"), "amint" );
	deepEqual( Stem("amintesc"), "amint" );
	deepEqual( Stem("aminteşte"), "amint" );
	deepEqual( Stem("aminti"), "amint" );
	deepEqual( Stem("amintim"), "amint" );
	deepEqual( Stem("amintin"), "amintin" );
	deepEqual( Stem("amintind"), "amint" );
	deepEqual( Stem("amintire"), "amint" );
	deepEqual( Stem("amintirea"), "amint" );
	deepEqual( Stem("amintiri"), "amintir" );
	deepEqual( Stem("amintirile"), "amintir" );
	deepEqual( Stem("amintirilor"), "amintir" );
	deepEqual( Stem("amintit"), "amint" );
	deepEqual( Stem("amintiţi"), "amint" );
	deepEqual( Stem("amor"), "amor" );
	deepEqual( Stem("amorfă"), "amorf" );
	deepEqual( Stem("amoroasă"), "amor" );
	deepEqual( Stem("amorţeală"), "amorţeal" );
	deepEqual( Stem("amorţeşte"), "amorţ" );
	deepEqual( Stem("amorţit"), "amorţ" );
	deepEqual( Stem("amorţită"), "amorţ" );
	deepEqual( Stem("amorţite"), "amorţ" );
	deepEqual( Stem("amorul"), "amor" );
	deepEqual( Stem("amorului"), "amor" );
	deepEqual( Stem("amoruri"), "amorur" );
	deepEqual( Stem("amplifica"), "amplif" );
	deepEqual( Stem("amplificând"), "amplific" );
	deepEqual( Stem("amputat"), "amput" );
	deepEqual( Stem("amurg"), "amurg" );
	deepEqual( Stem("amuţeşte"), "amuţ" );
	deepEqual( Stem("amuţit"), "amuţ" );
	deepEqual( Stem("amuza"), "amuz" );
	deepEqual( Stem("amuzant"), "amuz" );
	deepEqual( Stem("amuzantă"), "amuz" );
	deepEqual( Stem("amuzante"), "amuz" );
	deepEqual( Stem("amuzat"), "amuz" );
	deepEqual( Stem("amuzată"), "amuz" );
	deepEqual( Stem("amuzaţi"), "amuz" );
	deepEqual( Stem("amuzau"), "amuz" );
	deepEqual( Stem("amuză"), "amuz" );
	deepEqual( Stem("amuze"), "amuz" );
	deepEqual( Stem("an"), "an" );
	deepEqual( Stem("ana"), "ana" );
	deepEqual( Stem("anahronism"), "anahronist" );
	deepEqual( Stem("anahronismele"), "anahronist" );
	deepEqual( Stem("anahronismul"), "anahronist" );
	deepEqual( Stem("analitic"), "analit" );
	deepEqual( Stem("analitică"), "analit" );
	deepEqual( Stem("analiza"), "analiz" );
	deepEqual( Stem("analizasem"), "analiz" );
	deepEqual( Stem("analizat"), "analiz" );
	deepEqual( Stem("analizată"), "analiz" );
	deepEqual( Stem("analiză"), "analiz" );
	deepEqual( Stem("analizăm"), "analiz" );
	deepEqual( Stem("analize"), "analiz" );
	deepEqual( Stem("analizei"), "analize" );
	deepEqual( Stem("analizezi"), "analiz" );
	deepEqual( Stem("analoagă"), "analoag" );
	deepEqual( Stem("analog"), "analog" );
	deepEqual( Stem("analogat"), "analog" );
	deepEqual( Stem("analogia"), "analog" );
	deepEqual( Stem("analogie"), "analog" );
	deepEqual( Stem("analogiei"), "analog" );
	deepEqual( Stem("analogii"), "analog" );
	deepEqual( Stem("anapoda"), "anapod" );
	deepEqual( Stem("anarhic"), "anarh" );
	deepEqual( Stem("anarhice"), "anarh" );
	deepEqual( Stem("anatole"), "anatol" );
	deepEqual( Stem("anatolfranciană"), "anatolfrancian" );
	deepEqual( Stem("anatomia"), "anatom" );
	deepEqual( Stem("anchetă"), "anchet" );
	deepEqual( Stem("anchete"), "anchet" );
	deepEqual( Stem("andoaselea"), "andoasel" );
	deepEqual( Stem("anecdotă"), "anecdot" );
	deepEqual( Stem("anecdote"), "anecdot" );
	deepEqual( Stem("anestezia"), "anestez" );
	deepEqual( Stem("anesteziat"), "anestez" );
	deepEqual( Stem("anestezie"), "anestez" );
	deepEqual( Stem("anevoios"), "anevoi" );
	deepEqual( Stem("anex"), "anex" );
	deepEqual( Stem("anexată"), "anex" );
	deepEqual( Stem("anexării"), "anexăr" );
	deepEqual( Stem("anexe"), "anex" );
	deepEqual( Stem("angaja"), "angaj" );
	deepEqual( Stem("angajament"), "angajament" );
	deepEqual( Stem("angajat"), "angaj" );
	deepEqual( Stem("angajată"), "angaj" );
	deepEqual( Stem("angajând"), "angaj" );
	deepEqual( Stem("angajează"), "angaj" );
	deepEqual( Stem("angell"), "angell" );
	deepEqual( Stem("anglia"), "angli" );
	deepEqual( Stem("anglie"), "anglie" );
	deepEqual( Stem("anglo"), "anglo" );
	deepEqual( Stem("angrenajul"), "angrenaj" );
	deepEqual( Stem("angrenează"), "angren" );
	deepEqual( Stem("angrenez"), "angren" );
	deepEqual( Stem("ani"), "ani" );
	deepEqual( Stem("anico"), "anico" );
	deepEqual( Stem("anii"), "ani" );
	deepEqual( Stem("animal"), "animal" );
	deepEqual( Stem("animală"), "animal" );
	deepEqual( Stem("animale"), "animal" );
	deepEqual( Stem("animalele"), "animal" );
	deepEqual( Stem("animalelor"), "animal" );
	deepEqual( Stem("animalic"), "animal" );
	deepEqual( Stem("animalică"), "animal" );
	deepEqual( Stem("animalul"), "animal" );
	deepEqual( Stem("animaţie"), "anim" );
	deepEqual( Stem("animează"), "anim" );
	deepEqual( Stem("anişoara"), "anişoar" );
	deepEqual( Stem("anişoară"), "anişoar" );
	deepEqual( Stem("anişoarei"), "anişoare" );
	deepEqual( Stem("aniversări"), "aniversăr" );
	deepEqual( Stem("aniversările"), "aniversăr" );
	deepEqual( Stem("annie"), "annie" );
	deepEqual( Stem("anomalie"), "anomal" );
	deepEqual( Stem("anomalii"), "anomal" );
	deepEqual( Stem("anonim"), "anon" );
	deepEqual( Stem("anonimă"), "anonim" );
	deepEqual( Stem("ansamblu"), "ansamblu" );
	deepEqual( Stem("ansamblul"), "ansambl" );
	deepEqual( Stem("anselm"), "anselm" );
	deepEqual( Stem("antantist"), "antantist" );
	deepEqual( Stem("ante"), "ante" );
	deepEqual( Stem("antebraţul"), "antebraţ" );
	deepEqual( Stem("antepresupoziţiuni"), "antepresupozit" );
	deepEqual( Stem("anterioară"), "anterioar" );
	deepEqual( Stem("anterioare"), "anterioar" );
	deepEqual( Stem("anterior"), "anterior" );
	deepEqual( Stem("antică"), "antic" );
	deepEqual( Stem("antice"), "antic" );
	deepEqual( Stem("antici"), "antic" );
	deepEqual( Stem("anticipat"), "anticip" );
	deepEqual( Stem("anticipată"), "anticip" );
	deepEqual( Stem("anticipaţie"), "anticip" );
	deepEqual( Stem("anticipaţiilor"), "anticip" );
	deepEqual( Stem("anticipez"), "anticip" );
	deepEqual( Stem("antiintervenţionist"), "antiintervenţionist" );
	deepEqual( Stem("antilopă"), "antilop" );
	deepEqual( Stem("antinomie"), "antinom" );
	deepEqual( Stem("antipatic"), "antipat" );
	deepEqual( Stem("antipatica"), "antipat" );
	deepEqual( Stem("antipatică"), "antipat" );
	deepEqual( Stem("antipod"), "antipod" );
	deepEqual( Stem("antisemită"), "antisem" );
	deepEqual( Stem("antisemitismul"), "antisemitist" );
	deepEqual( Stem("antiteza"), "antitez" );
	deepEqual( Stem("antiteză"), "antitez" );
	deepEqual( Stem("antoaneta"), "antoanet" );
	deepEqual( Stem("antrenat"), "antren" );
	deepEqual( Stem("antrenez"), "antren" );
	deepEqual( Stem("antreprenor"), "antreprenor" );
	deepEqual( Stem("antreu"), "antreu" );
	deepEqual( Stem("antroposofie"), "antroposof" );
	deepEqual( Stem("antroposofilor"), "antroposof" );
	deepEqual( Stem("anual"), "anual" );
	deepEqual( Stem("anul"), "an" );
	deepEqual( Stem("anulare"), "anul" );
	deepEqual( Stem("anulată"), "anul" );
	deepEqual( Stem("anulate"), "anul" );
	deepEqual( Stem("anulează"), "anul" );
	deepEqual( Stem("anului"), "an" );
	deepEqual( Stem("anume"), "anum" );
	deepEqual( Stem("anumit"), "anum" );
	deepEqual( Stem("anumită"), "anum" );
	deepEqual( Stem("anumite"), "anum" );
	deepEqual( Stem("anunţam"), "anunţ" );
	deepEqual( Stem("anunţase"), "anunţ" );
	deepEqual( Stem("anunţat"), "anunţ" );
	deepEqual( Stem("anunţată"), "anunţ" );
	deepEqual( Stem("anunţate"), "anunţ" );
	deepEqual( Stem("anunţând"), "anunţ" );
	deepEqual( Stem("anunţă"), "anunţ" );
	deepEqual( Stem("anunţe"), "anunţ" );
	deepEqual( Stem("anunţul"), "anunţ" );
	deepEqual( Stem("anunţuri"), "anunţur" );
	deepEqual( Stem("anunţurile"), "anunţur" );
	deepEqual( Stem("apa"), "apa" );
	deepEqual( Stem("apar"), "apar" );
	deepEqual( Stem("aparat"), "apar" );
	deepEqual( Stem("aparate"), "apar" );
	deepEqual( Stem("aparatul"), "apar" );
	deepEqual( Stem("apară"), "apar" );
	deepEqual( Stem("apare"), "apar" );
	deepEqual( Stem("aparent"), "aparent" );
	deepEqual( Stem("aparentă"), "aparent" );
	deepEqual( Stem("aparente"), "aparent" );
	deepEqual( Stem("aparenţa"), "aparenţ" );
	deepEqual( Stem("aparenţă"), "aparenţ" );
	deepEqual( Stem("aparenţe"), "aparenţ" );
	deepEqual( Stem("aparenţei"), "aparenţe" );
	deepEqual( Stem("aparenţele"), "aparenţ" );
	deepEqual( Stem("apariţia"), "apariţ" );
	deepEqual( Stem("apariţie"), "apariţ" );
	deepEqual( Stem("apariţiune"), "apar" );
	deepEqual( Stem("apariţiunea"), "apar" );
	deepEqual( Stem("apartament"), "apartament" );
	deepEqual( Stem("aparte"), "apart" );
	deepEqual( Stem("aparţin"), "aparţin" );
	deepEqual( Stem("aparţine"), "aparţin" );
	deepEqual( Stem("apasă"), "apas" );
	deepEqual( Stem("apatia"), "apat" );
	deepEqual( Stem("apatie"), "apat" );
	deepEqual( Stem("apă"), "apă" );
	deepEqual( Stem("apăr"), "apăr" );
	deepEqual( Stem("apăram"), "apăr" );
	deepEqual( Stem("apărare"), "apăr" );
	deepEqual( Stem("apărarea"), "apăr" );
	deepEqual( Stem("apărat"), "apăr" );
	deepEqual( Stem("apărate"), "apăr" );
	deepEqual( Stem("apărau"), "apăr" );
	deepEqual( Stem("apără"), "apăr" );
	deepEqual( Stem("apărăm"), "apăr" );
	deepEqual( Stem("apărător"), "apăr" );
	deepEqual( Stem("apărea"), "apăr" );
	deepEqual( Stem("apăreau"), "apăr" );
	deepEqual( Stem("apărut"), "apăr" );
	deepEqual( Stem("apărută"), "apăr" );
	deepEqual( Stem("apărute"), "apăr" );
	deepEqual( Stem("apăruţi"), "apăruţ" );
	deepEqual( Stem("apăsam"), "apăs" );
	deepEqual( Stem("apăsare"), "apăs" );
	deepEqual( Stem("apăsarea"), "apăs" );
	deepEqual( Stem("apăsat"), "apăs" );
	deepEqual( Stem("apăsată"), "apăs" );
	deepEqual( Stem("apăsate"), "apăs" );
	deepEqual( Stem("apăsând"), "apăs" );
	deepEqual( Stem("apăsă"), "apăs" );
	deepEqual( Stem("apăsătoare"), "apăs" );
	deepEqual( Stem("ape"), "ape" );
	deepEqual( Stem("apei"), "ape" );
	deepEqual( Stem("apel"), "apel" );
	deepEqual( Stem("apele"), "ape" );
	deepEqual( Stem("apelul"), "apel" );
	deepEqual( Stem("apendicită"), "apendic" );
	deepEqual( Stem("apere"), "aper" );
	deepEqual( Stem("aperitive"), "aper" );
	deepEqual( Stem("apeşi"), "apeş" );
	deepEqual( Stem("apetit"), "apet" );
	deepEqual( Stem("apetituri"), "apetitur" );
	deepEqual( Stem("apetiturile"), "apetitur" );
	deepEqual( Stem("aplaudat"), "aplaud" );
	deepEqual( Stem("aplaudată"), "aplaud" );
	deepEqual( Stem("aplaudate"), "aplaud" );
	deepEqual( Stem("aplaudă"), "aplaud" );
	deepEqual( Stem("aplauze"), "aplauz" );
	deepEqual( Stem("aplecare"), "aplec" );
	deepEqual( Stem("aplecat"), "aplec" );
	deepEqual( Stem("aplecată"), "aplec" );
	deepEqual( Stem("aplecaţi"), "aplec" );
	deepEqual( Stem("aplic"), "aplic" );
	deepEqual( Stem("aplica"), "aplic" );
	deepEqual( Stem("aplicabilă"), "aplic" );
	deepEqual( Stem("aplicabilitate"), "aplic" );
	deepEqual( Stem("aplicabilităţii"), "aplic" );
	deepEqual( Stem("aplicare"), "aplic" );
	deepEqual( Stem("aplicarea"), "aplic" );
	deepEqual( Stem("aplicat"), "aplic" );
	deepEqual( Stem("aplicată"), "aplic" );
	deepEqual( Stem("aplicate"), "aplic" );
	deepEqual( Stem("aplicaţia"), "aplic" );
	deepEqual( Stem("aplicaţie"), "aplic" );
	deepEqual( Stem("aplicaţii"), "aplic" );
	deepEqual( Stem("aplicaţiune"), "aplic" );
	deepEqual( Stem("aplicându"), "aplic" );
	deepEqual( Stem("aplică"), "aplic" );
	deepEqual( Stem("aplicăm"), "aplic" );
	deepEqual( Stem("aplice"), "aplic" );
	deepEqual( Stem("aplici"), "aplic" );
	deepEqual( Stem("aplomb"), "aplomb" );
	deepEqual( Stem("apocaliptic"), "apocalipt" );
	deepEqual( Stem("apocaliptice"), "apocalipt" );
	deepEqual( Stem("apocrifă"), "apocrif" );
	deepEqual( Stem("apocrife"), "apocrif" );
	deepEqual( Stem("apodictică"), "apodict" );
	deepEqual( Stem("apogee"), "apoge" );
	deepEqual( Stem("apogeu"), "apogeu" );
	deepEqual( Stem("apoi"), "apo" );
	deepEqual( Stem("apoien"), "apoien" );
	deepEqual( Stem("apolinică"), "apolin" );
	deepEqual( Stem("apolitism"), "apolitist" );
	deepEqual( Stem("apollinaire"), "apollinair" );
	deepEqual( Stem("apologetic"), "apologet" );
	deepEqual( Stem("apologeţii"), "apolog" );
	deepEqual( Stem("apologii"), "apolog" );
	deepEqual( Stem("apoplexie"), "apoplex" );
	deepEqual( Stem("aport"), "aport" );
	deepEqual( Stem("aportul"), "aport" );
	deepEqual( Stem("apos"), "apos" );
	deepEqual( Stem("apostat"), "apost" );
	deepEqual( Stem("apostazie"), "apostaz" );
	deepEqual( Stem("aposteriori"), "aposterior" );
	deepEqual( Stem("apostol"), "apostol" );
	deepEqual( Stem("apostoli"), "apostol" );
	deepEqual( Stem("apostolii"), "apostol" );
	deepEqual( Stem("apostolilor"), "apostol" );
	deepEqual( Stem("apostolul"), "apostol" );
	deepEqual( Stem("apostolului"), "apostol" );
	deepEqual( Stem("apostroafe"), "apostroaf" );
	deepEqual( Stem("apostrof"), "apostrof" );
	deepEqual( Stem("apostrofat"), "apostrof" );
	deepEqual( Stem("apostrofaţi"), "apostrof" );
	deepEqual( Stem("apostrofe"), "apostrof" );
	deepEqual( Stem("apostrofează"), "apostrof" );
	deepEqual( Stem("apostrofeze"), "apostrof" );
	deepEqual( Stem("apoşi"), "apoş" );
	deepEqual( Stem("apoteoză"), "apoteoz" );
	deepEqual( Stem("aprecia"), "aprec" );
	deepEqual( Stem("apreciabilă"), "aprec" );
	deepEqual( Stem("apreciat"), "aprec" );
	deepEqual( Stem("apreciată"), "aprec" );
	deepEqual( Stem("apreciaţi"), "aprec" );
	deepEqual( Stem("apreciază"), "apreciaz" );
	deepEqual( Stem("apreciere"), "aprecier" );
	deepEqual( Stem("aprecieri"), "aprecier" );
	deepEqual( Stem("aprecierile"), "aprecier" );
	deepEqual( Stem("aprig"), "aprig" );
	deepEqual( Stem("aprigă"), "aprig" );
	deepEqual( Stem("aprige"), "aprig" );
	deepEqual( Stem("april"), "april" );
	deepEqual( Stem("aprilie"), "april" );
	deepEqual( Stem("aprind"), "aprind" );
	deepEqual( Stem("aprinde"), "aprind" );
	deepEqual( Stem("aprindea"), "aprind" );
	deepEqual( Stem("aprins"), "aprins" );
	deepEqual( Stem("aprinsă"), "aprins" );
	deepEqual( Stem("aprinse"), "aprin" );
	deepEqual( Stem("aprinzându"), "aprinz" );
	deepEqual( Stem("apriori"), "aprior" );
	deepEqual( Stem("aprioric"), "aprior" );
	deepEqual( Stem("apriorică"), "aprior" );
	deepEqual( Stem("apriorice"), "aprior" );
	deepEqual( Stem("apriorism"), "apriorist" );
	deepEqual( Stem("apriorismului"), "apriorist" );
	deepEqual( Stem("aproape"), "aproap" );
	deepEqual( Stem("aproba"), "aprob" );
	deepEqual( Stem("aprobare"), "aprob" );
	deepEqual( Stem("aprobarea"), "aprob" );
	deepEqual( Stem("aprobat"), "aprob" );
	deepEqual( Stem("aprobată"), "aprob" );
	deepEqual( Stem("aprobator"), "aprob" );
	deepEqual( Stem("aprobă"), "aprob" );
	deepEqual( Stem("aprobări"), "aprobăr" );
	deepEqual( Stem("aprobările"), "aprobăr" );
	deepEqual( Stem("aprofunda"), "aprofund" );
	deepEqual( Stem("aprofundate"), "aprofund" );
	deepEqual( Stem("apropia"), "aprop" );
	deepEqual( Stem("apropiam"), "aprop" );
	deepEqual( Stem("apropiat"), "aprop" );
	deepEqual( Stem("apropiată"), "aprop" );
	deepEqual( Stem("apropiate"), "aprop" );
	deepEqual( Stem("apropiaţi"), "aprop" );
	deepEqual( Stem("apropie"), "aprop" );
	deepEqual( Stem("apropiem"), "aprop" );
	deepEqual( Stem("apropierea"), "apropier" );
	deepEqual( Stem("apropierii"), "apropier" );
	deepEqual( Stem("apropii"), "aprop" );
	deepEqual( Stem("apropo"), "apropo" );
	deepEqual( Stem("aprovizionare"), "aprovizion" );
	deepEqual( Stem("aprovizionările"), "aprovizionăr" );
	deepEqual( Stem("aprovizionează"), "aprovizion" );
	deepEqual( Stem("aproximativ"), "aproxim" );
	deepEqual( Stem("aproximativă"), "aproxim" );
	deepEqual( Stem("aproximaţie"), "aproxim" );
	deepEqual( Stem("aproximaţiune"), "aproxim" );
	deepEqual( Stem("apte"), "apte" );
	deepEqual( Stem("aptitudinea"), "aptitudin" );
	deepEqual( Stem("aptitudinii"), "aptitudin" );
	deepEqual( Stem("apuc"), "apuc" );
	deepEqual( Stem("apuca"), "apuc" );
	deepEqual( Stem("apucat"), "apuc" );
	deepEqual( Stem("apucate"), "apuc" );
	deepEqual( Stem("apucă"), "apuc" );
	deepEqual( Stem("apucături"), "apucătur" );
	deepEqual( Stem("apucăturile"), "apucătur" );
	deepEqual( Stem("apune"), "apun" );
	deepEqual( Stem("apus"), "apus" );
	deepEqual( Stem("apuseană"), "apusean" );
	deepEqual( Stem("apusene"), "apusen" );
	deepEqual( Stem("apusul"), "apus" );
	deepEqual( Stem("apusului"), "apus" );
	deepEqual( Stem("aquino"), "aquino" );
	deepEqual( Stem("ar"), "ar" );
	deepEqual( Stem("arabă"), "arab" );
	deepEqual( Stem("arabi"), "arab" );
	deepEqual( Stem("arad"), "arad" );
	deepEqual( Stem("arama"), "aram" );
	deepEqual( Stem("aramă"), "aram" );
	deepEqual( Stem("aramei"), "arame" );
	deepEqual( Stem("aranjament"), "aranjament" );
	deepEqual( Stem("aranjamente"), "aranjament" );
	deepEqual( Stem("aranjasem"), "aranj" );
	deepEqual( Stem("aranjaseră"), "aranj" );
	deepEqual( Stem("aranjat"), "aranj" );
	deepEqual( Stem("aranjăm"), "aranj" );
	deepEqual( Stem("aranjeze"), "aranj" );
	deepEqual( Stem("arată"), "arat" );
	deepEqual( Stem("arate"), "arat" );
	deepEqual( Stem("arămăria"), "arămăr" );
	deepEqual( Stem("arămărie"), "arămăr" );
	deepEqual( Stem("arăt"), "arăt" );
	deepEqual( Stem("arăta"), "arăt" );
	deepEqual( Stem("arătai"), "arăt" );
	deepEqual( Stem("arătam"), "arăt" );
	deepEqual( Stem("arătare"), "arăt" );
	deepEqual( Stem("arătase"), "arăt" );
	deepEqual( Stem("arătasem"), "arăt" );
	deepEqual( Stem("arătat"), "arăt" );
	deepEqual( Stem("arătau"), "arăt" );
	deepEqual( Stem("arătând"), "arăt" );
	deepEqual( Stem("arătându"), "arăt" );
	deepEqual( Stem("arătă"), "arăt" );
	deepEqual( Stem("arătător"), "arăt" );
	deepEqual( Stem("arătătorul"), "arăt" );
	deepEqual( Stem("arătoasă"), "arăt" );
	deepEqual( Stem("arătoase"), "arăt" );
	deepEqual( Stem("arătos"), "arăt" );
	deepEqual( Stem("arături"), "arătur" );
	deepEqual( Stem("arăţi"), "arăţ" );
	deepEqual( Stem("arbitrar"), "arbitrar" );
	deepEqual( Stem("arbitrară"), "arbitr" );
	deepEqual( Stem("arbitrarul"), "arbitrar" );
	deepEqual( Stem("arbust"), "arbust" );
	deepEqual( Stem("arcuindu"), "arcuindu" );
	deepEqual( Stem("arcuire"), "arcuir" );
	deepEqual( Stem("arcuirilor"), "arcuir" );
	deepEqual( Stem("arcuită"), "arcuit" );
	deepEqual( Stem("arcuite"), "arcuit" );
	deepEqual( Stem("arcurilor"), "arcur" );
	deepEqual( Stem("ard"), "ard" );
	deepEqual( Stem("ardă"), "ardă" );
	deepEqual( Stem("arde"), "arde" );
	deepEqual( Stem("ardea"), "arde" );
	deepEqual( Stem("ardeal"), "ardeal" );
	deepEqual( Stem("ardealul"), "ardeal" );
	deepEqual( Stem("ardeam"), "ardeam" );
	deepEqual( Stem("ardei"), "arde" );
	deepEqual( Stem("ardeii"), "ardei" );
	deepEqual( Stem("ardelean"), "ardelean" );
	deepEqual( Stem("ardere"), "arder" );
	deepEqual( Stem("ardoare"), "ardoar" );
	deepEqual( Stem("are"), "are" );
	deepEqual( Stem("arendaş"), "arendaş" );
	deepEqual( Stem("arendă"), "arend" );
	deepEqual( Stem("arestarea"), "arest" );
	deepEqual( Stem("arestat"), "arest" );
	deepEqual( Stem("arestate"), "arest" );
	deepEqual( Stem("arestează"), "arest" );
	deepEqual( Stem("arestez"), "arest" );
	deepEqual( Stem("argeş"), "argeş" );
	deepEqual( Stem("argintie"), "argint" );
	deepEqual( Stem("argintiu"), "argintiu" );
	deepEqual( Stem("argintul"), "argint" );
	deepEqual( Stem("argument"), "argument" );
	deepEqual( Stem("argumentare"), "argument" );
	deepEqual( Stem("argumentarea"), "argument" );
	deepEqual( Stem("argumentării"), "argumentăr" );
	deepEqual( Stem("argumente"), "argument" );
	deepEqual( Stem("argumentele"), "argument" );
	deepEqual( Stem("argumentelor"), "argument" );
	deepEqual( Stem("argumentez"), "argument" );
	deepEqual( Stem("argumentul"), "argument" );
	deepEqual( Stem("argumentului"), "argument" );
	deepEqual( Stem("arhaisme"), "arhaism" );
	deepEqual( Stem("arhitectonice"), "arhitecton" );
	deepEqual( Stem("arhitectură"), "arhitect" );
	deepEqual( Stem("arhivarii"), "arhivar" );
	deepEqual( Stem("arhivarul"), "arhivar" );
	deepEqual( Stem("aride"), "arid" );
	deepEqual( Stem("arie"), "arie" );
	deepEqual( Stem("ariergarda"), "ariergard" );
	deepEqual( Stem("ariergardă"), "ariergard" );
	deepEqual( Stem("aripa"), "arip" );
	deepEqual( Stem("aripă"), "arip" );
	deepEqual( Stem("aripi"), "arip" );
	deepEqual( Stem("aripilor"), "arip" );
	deepEqual( Stem("aristocrată"), "aristocr" );
	deepEqual( Stem("aristocratic"), "aristocrat" );
	deepEqual( Stem("aristocratică"), "aristocrat" );
	deepEqual( Stem("aristocratizante"), "aristocratiz" );
	deepEqual( Stem("aristocratul"), "aristocr" );
	deepEqual( Stem("aristotel"), "aristotel" );
	deepEqual( Stem("aritmetica"), "aritmet" );
	deepEqual( Stem("aritmetică"), "aritmet" );
	deepEqual( Stem("arma"), "arma" );
	deepEqual( Stem("armament"), "armament" );
	deepEqual( Stem("armamentul"), "armament" );
	deepEqual( Stem("armata"), "armat" );
	deepEqual( Stem("armată"), "armat" );
	deepEqual( Stem("armatei"), "armat" );
	deepEqual( Stem("armatele"), "armat" );
	deepEqual( Stem("armatelor"), "armat" );
	deepEqual( Stem("armă"), "armă" );
	deepEqual( Stem("armăsari"), "armăsar" );
	deepEqual( Stem("arme"), "arme" );
	deepEqual( Stem("armei"), "arme" );
	deepEqual( Stem("armele"), "arme" );
	deepEqual( Stem("armistiţiu"), "armistiţiu" );
	deepEqual( Stem("armonie"), "armon" );
	deepEqual( Stem("armoniei"), "armon" );
	deepEqual( Stem("armonizată"), "armoniz" );
	deepEqual( Stem("armonizate"), "armoniz" );
	deepEqual( Stem("arnici"), "arnic" );
	deepEqual( Stem("arogantă"), "arog" );
	deepEqual( Stem("arome"), "arom" );
	deepEqual( Stem("aromeşte"), "arom" );
	deepEqual( Stem("ars"), "ars" );
	deepEqual( Stem("arsă"), "arsă" );
	deepEqual( Stem("arse"), "arse" );
	deepEqual( Stem("arta"), "arta" );
	deepEqual( Stem("artă"), "artă" );
	deepEqual( Stem("arte"), "arte" );
	deepEqual( Stem("artei"), "arte" );
	deepEqual( Stem("artelor"), "arte" );
	deepEqual( Stem("arteziană"), "artezian" );
	deepEqual( Stem("arthur"), "arthur" );
	deepEqual( Stem("articol"), "articol" );
	deepEqual( Stem("articole"), "articol" );
	deepEqual( Stem("articolele"), "articol" );
	deepEqual( Stem("articolul"), "articol" );
	deepEqual( Stem("articulaţie"), "articul" );
	deepEqual( Stem("articulaţiile"), "articul" );
	deepEqual( Stem("artificial"), "artificial" );
	deepEqual( Stem("artileria"), "artiler" );
	deepEqual( Stem("artilerie"), "artiler" );
	deepEqual( Stem("artileriei"), "artiler" );
	deepEqual( Stem("artilerişti"), "artilerist" );
	deepEqual( Stem("artileriştii"), "artilerist" );
	deepEqual( Stem("artist"), "artist" );
	deepEqual( Stem("artistică"), "artist" );
	deepEqual( Stem("artistice"), "artist" );
	deepEqual( Stem("artistului"), "artist" );
	deepEqual( Stem("artişti"), "artişt" );
	deepEqual( Stem("artiştii"), "artişt" );
	deepEqual( Stem("arunc"), "arunc" );
	deepEqual( Stem("arunca"), "arunc" );
	deepEqual( Stem("aruncam"), "arunc" );
	deepEqual( Stem("aruncasem"), "arunc" );
	deepEqual( Stem("aruncat"), "arunc" );
	deepEqual( Stem("aruncată"), "arunc" );
	deepEqual( Stem("aruncate"), "arunc" );
	deepEqual( Stem("aruncaţi"), "arunc" );
	deepEqual( Stem("aruncând"), "arunc" );
	deepEqual( Stem("aruncându"), "arunc" );
	deepEqual( Stem("aruncă"), "arunc" );
	deepEqual( Stem("aruncăm"), "arunc" );
	deepEqual( Stem("aruncătură"), "aruncăt" );
	deepEqual( Stem("arunce"), "arunc" );
	deepEqual( Stem("arunci"), "arunc" );
	deepEqual( Stem("arzătoare"), "arzat" );
	deepEqual( Stem("asalt"), "asalt" );
	deepEqual( Stem("asaltul"), "asalt" );
	deepEqual( Stem("asalturi"), "asaltur" );
	deepEqual( Stem("asasinat"), "asasin" );
	deepEqual( Stem("asasinată"), "asasin" );
	deepEqual( Stem("asasinate"), "asasin" );
	deepEqual( Stem("asasinatele"), "asasin" );
	deepEqual( Stem("asasinatelor"), "asasin" );
	deepEqual( Stem("asasineze"), "asasin" );
	deepEqual( Stem("ascende"), "ascend" );
	deepEqual( Stem("ascendent"), "ascendent" );
	deepEqual( Stem("ascendentă"), "ascendent" );
	deepEqual( Stem("ascendente"), "ascendent" );
	deepEqual( Stem("ascendenţa"), "ascendenţ" );
	deepEqual( Stem("ascensor"), "ascensor" );
	deepEqual( Stem("ascult"), "ascult" );
	deepEqual( Stem("asculta"), "ascult" );
	deepEqual( Stem("ascultam"), "ascult" );
	deepEqual( Stem("ascultare"), "ascult" );
	deepEqual( Stem("ascultarea"), "ascult" );
	deepEqual( Stem("ascultase"), "ascult" );
	deepEqual( Stem("ascultat"), "ascult" );
	deepEqual( Stem("ascultată"), "ascult" );
	deepEqual( Stem("ascultate"), "ascult" );
	deepEqual( Stem("ascultau"), "ascult" );
	deepEqual( Stem("ascultând"), "ascult" );
	deepEqual( Stem("ascultându"), "ascult" );
	deepEqual( Stem("ascultă"), "ascult" );
	deepEqual( Stem("ascultăm"), "ascult" );
	deepEqual( Stem("ascultători"), "ascult" );
	deepEqual( Stem("ascultătorii"), "ascult" );
	deepEqual( Stem("ascultătorilor"), "ascult" );
	deepEqual( Stem("ascultătorul"), "ascult" );
	deepEqual( Stem("ascultătorului"), "ascult" );
	deepEqual( Stem("asculte"), "ascult" );
	deepEqual( Stem("asculţi"), "asculţ" );
	deepEqual( Stem("ascund"), "ascund" );
	deepEqual( Stem("ascundă"), "ascund" );
	deepEqual( Stem("ascunde"), "ascund" );
	deepEqual( Stem("ascundea"), "ascund" );
	deepEqual( Stem("ascundeau"), "ascund" );
	deepEqual( Stem("ascuns"), "ascuns" );
	deepEqual( Stem("ascunsă"), "ascuns" );
	deepEqual( Stem("ascunse"), "ascun" );
	deepEqual( Stem("ascunşi"), "ascunş" );
	deepEqual( Stem("ascuţit"), "ascuţ" );
	deepEqual( Stem("ascuţită"), "ascuţ" );
	deepEqual( Stem("ascuţite"), "ascuţ" );
	deepEqual( Stem("aseară"), "asear" );
	deepEqual( Stem("asediaţi"), "ased" );
	deepEqual( Stem("asemănare"), "asemăn" );
	deepEqual( Stem("asemănări"), "asemănăr" );
	deepEqual( Stem("asemănările"), "asemănăr" );
	deepEqual( Stem("asemănătoare"), "asemăn" );
	deepEqual( Stem("asemănător"), "asemăn" );
	deepEqual( Stem("asemene"), "asemen" );
	deepEqual( Stem("asemenea"), "asemen" );
	deepEqual( Stem("asemeni"), "asemen" );
	deepEqual( Stem("asemuire"), "asemu" );
	deepEqual( Stem("asemuirile"), "asemuir" );
	deepEqual( Stem("asentimentul"), "asentiment" );
	deepEqual( Stem("aservită"), "aserv" );
	deepEqual( Stem("asfalt"), "asfalt" );
	deepEqual( Stem("asfaltul"), "asfalt" );
	deepEqual( Stem("asfaltului"), "asfalt" );
	deepEqual( Stem("asfinţit"), "asfinţ" );
	deepEqual( Stem("asfinţitul"), "asfinţ" );
	deepEqual( Stem("asfinţitului"), "asfinţ" );
	deepEqual( Stem("asia"), "asi" );
	deepEqual( Stem("asigna"), "asign" );
	deepEqual( Stem("asignat"), "asign" );
	deepEqual( Stem("asignăm"), "asign" );
	deepEqual( Stem("asignez"), "asign" );
	deepEqual( Stem("asigur"), "asigur" );
	deepEqual( Stem("asigura"), "asigur" );
	deepEqual( Stem("asigurare"), "asigur" );
	deepEqual( Stem("asigurat"), "asigur" );
	deepEqual( Stem("asigurată"), "asigur" );
	deepEqual( Stem("asiguraţi"), "asigur" );
	deepEqual( Stem("asigură"), "asig" );
	deepEqual( Stem("asigurări"), "asigurăr" );
	deepEqual( Stem("asigure"), "asigur" );
	deepEqual( Stem("asimilat"), "asimil" );
	deepEqual( Stem("asimilaţie"), "asimil" );
	deepEqual( Stem("asist"), "asist" );
	deepEqual( Stem("asista"), "asist" );
	deepEqual( Stem("asistat"), "asist" );
	deepEqual( Stem("asistăm"), "asist" );
	deepEqual( Stem("asiste"), "asist" );
	deepEqual( Stem("asocia"), "asoc" );
	deepEqual( Stem("asociat"), "asoc" );
	deepEqual( Stem("asociate"), "asoc" );
	deepEqual( Stem("asociatul"), "asoc" );
	deepEqual( Stem("asociaţia"), "asoc" );
	deepEqual( Stem("asociaţie"), "asoc" );
	deepEqual( Stem("asociaţiei"), "asoc" );
	deepEqual( Stem("asociaţii"), "asoc" );
	deepEqual( Stem("asolinelor"), "asolin" );
	deepEqual( Stem("asonanţă"), "asonanţ" );
	deepEqual( Stem("asortat"), "asort" );
	deepEqual( Stem("aspect"), "aspect" );
	deepEqual( Stem("aspecte"), "aspect" );
	deepEqual( Stem("aspectele"), "aspect" );
	deepEqual( Stem("aspectelor"), "aspect" );
	deepEqual( Stem("aspectul"), "aspect" );
	deepEqual( Stem("aspirată"), "aspir" );
	deepEqual( Stem("aspiraţi"), "aspir" );
	deepEqual( Stem("aspiraţiile"), "aspir" );
	deepEqual( Stem("aspiraţiilor"), "aspir" );
	deepEqual( Stem("aspră"), "aspră" );
	deepEqual( Stem("aspre"), "aspre" );
	deepEqual( Stem("asprime"), "asprim" );
	deepEqual( Stem("asprimea"), "asprim" );
	deepEqual( Stem("aspru"), "aspru" );
	deepEqual( Stem("assisi"), "assis" );
	deepEqual( Stem("asta"), "asta" );
	deepEqual( Stem("astaest"), "astaest" );
	deepEqual( Stem("astâmpăr"), "astâmpăr" );
	deepEqual( Stem("astâmpără"), "astâmpăr" );
	deepEqual( Stem("astâmpere"), "astâmp" );
	deepEqual( Stem("astă"), "astă" );
	deepEqual( Stem("astălaltă"), "astălalt" );
	deepEqual( Stem("astăzi"), "astăz" );
	deepEqual( Stem("astea"), "aste" );
	deepEqual( Stem("asterisc"), "asterisc" );
	deepEqual( Stem("astfel"), "astfel" );
	deepEqual( Stem("astral"), "astral" );
	deepEqual( Stem("astronomia"), "astronom" );
	deepEqual( Stem("astronomic"), "astronom" );
	deepEqual( Stem("astronomie"), "astronom" );
	deepEqual( Stem("astronomul"), "astronom" );
	deepEqual( Stem("astru"), "astru" );
	deepEqual( Stem("asudat"), "asud" );
	deepEqual( Stem("asupra"), "asupr" );
	deepEqual( Stem("asupririi"), "asuprir" );
	deepEqual( Stem("asurzitoare"), "asurz" );
	deepEqual( Stem("asurzitor"), "asurz" );
	deepEqual( Stem("aş"), "aş" );
	deepEqual( Stem("aşa"), "aşa" );
	deepEqual( Stem("aşadar"), "aşadar" );
	deepEqual( Stem("aşază"), "aşaz" );
	deepEqual( Stem("aşchii"), "aşchi" );
	deepEqual( Stem("aşează"), "aşeaz" );
	deepEqual( Stem("aşez"), "aşez" );
	deepEqual( Stem("aşeza"), "aşez" );
	deepEqual( Stem("aşezare"), "aşez" );
	deepEqual( Stem("aşezarea"), "aşez" );
	deepEqual( Stem("aşezase"), "aşez" );
	deepEqual( Stem("aşezasem"), "aşez" );
	deepEqual( Stem("aşezaseră"), "aşez" );
	deepEqual( Stem("aşezat"), "aşez" );
	deepEqual( Stem("aşezată"), "aşez" );
	deepEqual( Stem("aşezate"), "aşez" );
	deepEqual( Stem("aşezaţi"), "aşez" );
	deepEqual( Stem("aşezăm"), "aşez" );
	deepEqual( Stem("aşezării"), "aşezăr" );
	deepEqual( Stem("aşezi"), "aşez" );
	deepEqual( Stem("aşteaptă"), "aşteapt" );
	deepEqual( Stem("aştearnă"), "aştearn" );
	deepEqual( Stem("aştept"), "aştept" );
	deepEqual( Stem("aştepta"), "aştept" );
	deepEqual( Stem("aşteptam"), "aştept" );
	deepEqual( Stem("aşteptare"), "aştept" );
	deepEqual( Stem("aşteptarea"), "aştept" );
	deepEqual( Stem("aşteptat"), "aştept" );
	deepEqual( Stem("aşteptată"), "aştept" );
	deepEqual( Stem("aşteptate"), "aştept" );
	deepEqual( Stem("aşteptaţi"), "aştept" );
	deepEqual( Stem("aşteptau"), "aştept" );
	deepEqual( Stem("aşteptând"), "aştept" );
	deepEqual( Stem("aşteptându"), "aştept" );
	deepEqual( Stem("aşteptă"), "aştept" );
	deepEqual( Stem("aşteptăm"), "aştept" );
	deepEqual( Stem("aşteptări"), "aşteptăr" );
	deepEqual( Stem("aşteptările"), "aşteptăr" );
	deepEqual( Stem("aştepte"), "aştept" );
	deepEqual( Stem("aşteptînd"), "aşteptînd" );
	deepEqual( Stem("aştepţi"), "aştepţ" );
	deepEqual( Stem("aşterne"), "aştern" );
	deepEqual( Stem("aşternerea"), "aştern" );
	deepEqual( Stem("aşternut"), "aştern" );
	deepEqual( Stem("aşternută"), "aştern" );
	deepEqual( Stem("aşternute"), "aştern" );
	deepEqual( Stem("aşternutul"), "aştern" );
	deepEqual( Stem("aşternutului"), "aştern" );
	deepEqual( Stem("aştri"), "aştri" );
	deepEqual( Stem("atac"), "atac" );
	deepEqual( Stem("ataca"), "atac" );
	deepEqual( Stem("atacam"), "atac" );
	deepEqual( Stem("atacat"), "atac" );
	deepEqual( Stem("atacată"), "atac" );
	deepEqual( Stem("atacate"), "atac" );
	deepEqual( Stem("atacaţi"), "atac" );
	deepEqual( Stem("atacând"), "atac" );
	deepEqual( Stem("atacă"), "atac" );
	deepEqual( Stem("atacăm"), "atac" );
	deepEqual( Stem("atace"), "atac" );
	deepEqual( Stem("ataci"), "atac" );
	deepEqual( Stem("atacul"), "atac" );
	deepEqual( Stem("atacului"), "atac" );
	deepEqual( Stem("atacuri"), "atacur" );
	deepEqual( Stem("atare"), "atar" );
	deepEqual( Stem("ataşa"), "ataş" );
	deepEqual( Stem("ataşaţi"), "ataş" );
	deepEqual( Stem("atavică"), "atav" );
	deepEqual( Stem("atârna"), "atârn" );
	deepEqual( Stem("atârnat"), "atârn" );
	deepEqual( Stem("atârnată"), "atârn" );
	deepEqual( Stem("atârnate"), "atârn" );
	deepEqual( Stem("atârnaţi"), "atârn" );
	deepEqual( Stem("atârnând"), "atârn" );
	deepEqual( Stem("atârnă"), "atârn" );
	deepEqual( Stem("atârne"), "atârn" );
	deepEqual( Stem("atât"), "atât" );
	deepEqual( Stem("atâta"), "atât" );
	deepEqual( Stem("atâtea"), "atât" );
	deepEqual( Stem("atâtor"), "atâtor" );
	deepEqual( Stem("atâţi"), "atâţ" );
	deepEqual( Stem("atâţia"), "atâţ" );
	deepEqual( Stem("atelier"), "atelier" );
	deepEqual( Stem("atelierele"), "atelier" );
	deepEqual( Stem("atelierelor"), "atelier" );
	deepEqual( Stem("atelierul"), "atelier" );
	deepEqual( Stem("atena"), "aten" );
	deepEqual( Stem("atenei"), "atene" );
	deepEqual( Stem("ateniană"), "atenian" );
	deepEqual( Stem("ateniene"), "atenien" );
	deepEqual( Stem("atenienii"), "atenien" );
	deepEqual( Stem("atent"), "atent" );
	deepEqual( Stem("atentatele"), "atent" );
	deepEqual( Stem("atentatul"), "atent" );
	deepEqual( Stem("atentă"), "atent" );
	deepEqual( Stem("atenţi"), "atenţ" );
	deepEqual( Stem("atenţia"), "atenţ" );
	deepEqual( Stem("atenţie"), "atenţ" );
	deepEqual( Stem("atenţiunea"), "atent" );
	deepEqual( Stem("ating"), "ating" );
	deepEqual( Stem("atingându"), "ating" );
	deepEqual( Stem("atinge"), "ating" );
	deepEqual( Stem("atingem"), "ating" );
	deepEqual( Stem("atingere"), "ating" );
	deepEqual( Stem("atingerea"), "ating" );
	deepEqual( Stem("atins"), "atins" );
	deepEqual( Stem("atinşi"), "atinş" );
	deepEqual( Stem("atitudine"), "atitudin" );
	deepEqual( Stem("atitudinea"), "atitudin" );
	deepEqual( Stem("atitudini"), "atitudin" );
	deepEqual( Stem("atitudinii"), "atitudin" );
	deepEqual( Stem("atitudinile"), "atitudin" );
	deepEqual( Stem("atlazul"), "atlaz" );
	deepEqual( Stem("atlet"), "atlet" );
	deepEqual( Stem("atma"), "atma" );
	deepEqual( Stem("atmosfera"), "atmosfer" );
	deepEqual( Stem("atmosferă"), "atmosfer" );
	deepEqual( Stem("atomi"), "atom" );
	deepEqual( Stem("atomică"), "atom" );
	deepEqual( Stem("atomii"), "atom" );
	deepEqual( Stem("atomilor"), "atom" );
	deepEqual( Stem("atomul"), "atom" );
	deepEqual( Stem("atotputernică"), "atotputern" );
	deepEqual( Stem("atrag"), "atrag" );
	deepEqual( Stem("atragă"), "atrag" );
	deepEqual( Stem("atrage"), "atrag" );
	deepEqual( Stem("atras"), "atras" );
	deepEqual( Stem("atrasă"), "atras" );
	deepEqual( Stem("atrăgător"), "atrăg" );
	deepEqual( Stem("atrăgea"), "atrăg" );
	deepEqual( Stem("atrăgeam"), "atrăg" );
	deepEqual( Stem("atribui"), "atrib" );
	deepEqual( Stem("atribuia"), "atribui" );
	deepEqual( Stem("atribuie"), "atribui" );
	deepEqual( Stem("atribuim"), "atribu" );
	deepEqual( Stem("atribute"), "atrib" );
	deepEqual( Stem("atributul"), "atrib" );
	deepEqual( Stem("atroce"), "atroc" );
	deepEqual( Stem("atrofiere"), "atrofier" );
	deepEqual( Stem("atunci"), "atunc" );
	deepEqual( Stem("aţa"), "aţa" );
	deepEqual( Stem("aţâţare"), "aţâţ" );
	deepEqual( Stem("aţâţat"), "aţâţ" );
	deepEqual( Stem("aţă"), "aţă" );
	deepEqual( Stem("aţi"), "aţi" );
	deepEqual( Stem("aţintite"), "aţint" );
	deepEqual( Stem("aţipit"), "aţip" );
	deepEqual( Stem("au"), "au" );
	deepEqual( Stem("aud"), "aud" );
	deepEqual( Stem("aude"), "aud" );
	deepEqual( Stem("audia"), "audi" );
	deepEqual( Stem("audiat"), "audiat" );
	deepEqual( Stem("audienţe"), "audienţ" );
	deepEqual( Stem("audiez"), "audiez" );
	deepEqual( Stem("auditiv"), "audit" );
	deepEqual( Stem("auditivă"), "audit" );
	deepEqual( Stem("auditor"), "audit" );
	deepEqual( Stem("auditorilor"), "audit" );
	deepEqual( Stem("auf"), "auf" );
	deepEqual( Stem("august"), "august" );
	deepEqual( Stem("auguste"), "august" );
	deepEqual( Stem("augustin"), "augustin" );
	deepEqual( Stem("aur"), "aur" );
	deepEqual( Stem("aură"), "aur" );
	deepEqual( Stem("aureolă"), "aureol" );
	deepEqual( Stem("aurie"), "aur" );
	deepEqual( Stem("aurit"), "aurit" );
	deepEqual( Stem("aurită"), "aurit" );
	deepEqual( Stem("aurite"), "aurit" );
	deepEqual( Stem("auriu"), "auriu" );
	deepEqual( Stem("aurorei"), "aurore" );
	deepEqual( Stem("aurul"), "aur" );
	deepEqual( Stem("auspiciile"), "auspic" );
	deepEqual( Stem("austeră"), "auster" );
	deepEqual( Stem("austriacă"), "austriac" );
	deepEqual( Stem("austriace"), "austriac" );
	deepEqual( Stem("austriece"), "austriec" );
	deepEqual( Stem("austriei"), "austr" );
	deepEqual( Stem("autentic"), "autent" );
	deepEqual( Stem("autentică"), "autent" );
	deepEqual( Stem("autentice"), "autent" );
	deepEqual( Stem("autenticitatea"), "autent" );
	deepEqual( Stem("autenticităţii"), "autent" );
	deepEqual( Stem("autocamion"), "autocamion" );
	deepEqual( Stem("autocrată"), "autocr" );
	deepEqual( Stem("autocratică"), "autocrat" );
	deepEqual( Stem("autocratice"), "autocrat" );
	deepEqual( Stem("autocritic"), "autocrit" );
	deepEqual( Stem("autocritică"), "autocrit" );
	deepEqual( Stem("automat"), "autom" );
	deepEqual( Stem("automată"), "autom" );
	deepEqual( Stem("automatic"), "automat" );
	deepEqual( Stem("automatism"), "automatist" );
	deepEqual( Stem("automobil"), "automobil" );
	deepEqual( Stem("automobile"), "automob" );
	deepEqual( Stem("automobilele"), "automobil" );
	deepEqual( Stem("automobilelor"), "automobil" );
	deepEqual( Stem("automobilul"), "automobil" );
	deepEqual( Stem("automobilului"), "automobil" );
	deepEqual( Stem("autor"), "autor" );
	deepEqual( Stem("autori"), "autor" );
	deepEqual( Stem("autorii"), "autor" );
	deepEqual( Stem("autoritar"), "autoritar" );
	deepEqual( Stem("autoritare"), "autorit" );
	deepEqual( Stem("autoritate"), "autor" );
	deepEqual( Stem("autoritatea"), "autor" );
	deepEqual( Stem("autorităţi"), "autor" );
	deepEqual( Stem("autorităţii"), "autor" );
	deepEqual( Stem("autorul"), "autor" );
	deepEqual( Stem("autorului"), "autor" );
	deepEqual( Stem("autosugestie"), "autosugest" );
	deepEqual( Stem("autosugestionat"), "autosugestion" );
	deepEqual( Stem("autres"), "autres" );
	deepEqual( Stem("aux"), "aux" );
	deepEqual( Stem("auz"), "auz" );
	deepEqual( Stem("auză"), "auz" );
	deepEqual( Stem("auzea"), "auz" );
	deepEqual( Stem("auzeam"), "auzeam" );
	deepEqual( Stem("auzi"), "auz" );
	deepEqual( Stem("auzim"), "auz" );
	deepEqual( Stem("auzind"), "auzind" );
	deepEqual( Stem("auzisem"), "auzisem" );
	deepEqual( Stem("auzit"), "auzit" );
	deepEqual( Stem("auziţi"), "auz" );
	deepEqual( Stem("auzul"), "auz" );
	deepEqual( Stem("auzului"), "auz" );
	deepEqual( Stem("avalanşă"), "avalanş" );
	deepEqual( Stem("avangarda"), "avangard" );
	deepEqual( Stem("avangardă"), "avangard" );
	deepEqual( Stem("avangardei"), "avangarde" );
	deepEqual( Stem("avangărzii"), "avangărz" );
	deepEqual( Stem("avanposturi"), "avanpostur" );
	deepEqual( Stem("avanposturile"), "avanpostur" );
	deepEqual( Stem("avansurile"), "avansur" );
	deepEqual( Stem("avantaj"), "avantaj" );
	deepEqual( Stem("avar"), "avar" );
	deepEqual( Stem("având"), "având" );
	deepEqual( Stem("avânt"), "avânt" );
	deepEqual( Stem("avântă"), "avânt" );
	deepEqual( Stem("avântul"), "avânt" );
	deepEqual( Stem("avea"), "ave" );
	deepEqual( Stem("aveai"), "avea" );
	deepEqual( Stem("aveam"), "aveam" );
	deepEqual( Stem("aveaţi"), "ave" );
	deepEqual( Stem("aveau"), "aveau" );
	deepEqual( Stem("avem"), "avem" );
	deepEqual( Stem("avenarius"), "avenarius" );
	deepEqual( Stem("aventura"), "aventur" );
	deepEqual( Stem("aventurat"), "aventur" );
	deepEqual( Stem("aventură"), "avent" );
	deepEqual( Stem("aventuri"), "aventur" );
	deepEqual( Stem("aventurieri"), "aventurier" );
	deepEqual( Stem("aventurii"), "aventur" );
	deepEqual( Stem("aventuroasă"), "aventur" );
	deepEqual( Stem("avere"), "aver" );
	deepEqual( Stem("averea"), "aver" );
	deepEqual( Stem("aveţi"), "aveţ" );
	deepEqual( Stem("avizuri"), "avizur" );
	deepEqual( Stem("avocat"), "avoc" );
	deepEqual( Stem("avocatul"), "avoc" );
	deepEqual( Stem("avocatului"), "avoc" );
	deepEqual( Stem("avusese"), "avu" );
	deepEqual( Stem("avusesem"), "avu" );
	deepEqual( Stem("avut"), "avut" );
	deepEqual( Stem("avuzul"), "avuz" );
	deepEqual( Stem("axa"), "axa" );
	deepEqual( Stem("axe"), "axe" );
	deepEqual( Stem("axiomă"), "axiom" );
	deepEqual( Stem("azi"), "azi" );
	deepEqual( Stem("aziatice"), "aziat" );
	deepEqual( Stem("azist"), "azist" );
	deepEqual( Stem("azister"), "azister" );
	deepEqual( Stem("azot"), "azot" );
	deepEqual( Stem("azuga"), "azug" );
	deepEqual( Stem("azvârl"), "azvârl" );
	deepEqual( Stem("azvârle"), "azvârl" );
	deepEqual( Stem("azvârleau"), "azvârl" );
	deepEqual( Stem("azvârlit"), "azvârl" );
	deepEqual( Stem("âme"), "âme" );
	deepEqual( Stem("ăi"), "ăi" );
	deepEqual( Stem("ăia"), "ăia" );
	deepEqual( Stem("ăiă"), "ăiă" );
	deepEqual( Stem("ăl"), "ăl" );
	deepEqual( Stem("ăla"), "ăla" );
	deepEqual( Stem("ăleia"), "ălei" );
	deepEqual( Stem("ăsta"), "ăsta" );
	deepEqual( Stem("ăsteia"), "ăstei" );
	deepEqual( Stem("ăştia"), "ăşti" );
	deepEqual( Stem("b"), "b" );
	deepEqual( Stem("ba"), "ba" );
	deepEqual( Stem("babă"), "bab" );
	deepEqual( Stem("bacara"), "bacar" );
	deepEqual( Stem("backfischuri"), "backfischur" );
	deepEqual( Stem("bacon"), "bacon" );
	deepEqual( Stem("bacşiş"), "bacşiş" );
	deepEqual( Stem("bacşişuri"), "bacşişur" );
	deepEqual( Stem("bacterii"), "bacter" );
	deepEqual( Stem("badea"), "bad" );
	deepEqual( Stem("bag"), "bag" );
	deepEqual( Stem("bagaje"), "bagaj" );
	deepEqual( Stem("bagajele"), "bagaj" );
	deepEqual( Stem("bagajul"), "bagaj" );
	deepEqual( Stem("bagatelizeze"), "bagateliz" );
	deepEqual( Stem("bagă"), "bag" );
	deepEqual( Stem("bage"), "bag" );
	deepEqual( Stem("baia"), "bai" );
	deepEqual( Stem("baie"), "bai" );
	deepEqual( Stem("baioneta"), "baionet" );
	deepEqual( Stem("baionetă"), "baionet" );
	deepEqual( Stem("baionetei"), "baionete" );
	deepEqual( Stem("baionetele"), "baionet" );
	deepEqual( Stem("bal"), "bal" );
	deepEqual( Stem("balanţă"), "balanţ" );
	deepEqual( Stem("balcani"), "balcan" );
	deepEqual( Stem("balcanice"), "balcan" );
	deepEqual( Stem("balcoane"), "balcoan" );
	deepEqual( Stem("bale"), "bal" );
	deepEqual( Stem("baliverna"), "balivern" );
	deepEqual( Stem("balustradă"), "balustrad" );
	deepEqual( Stem("balustradele"), "balustrad" );
	deepEqual( Stem("banal"), "banal" );
	deepEqual( Stem("banală"), "banal" );
	deepEqual( Stem("banale"), "banal" );
	deepEqual( Stem("banali"), "banal" );
	deepEqual( Stem("banalitatea"), "banal" );
	deepEqual( Stem("banalităţi"), "banal" );
	deepEqual( Stem("banca"), "banc" );
	deepEqual( Stem("bancă"), "banc" );
	deepEqual( Stem("banchet"), "banchet" );
	deepEqual( Stem("banchete"), "banchet" );
	deepEqual( Stem("banchetul"), "banchet" );
	deepEqual( Stem("bancnote"), "bancnot" );
	deepEqual( Stem("banda"), "band" );
	deepEqual( Stem("bandaj"), "bandaj" );
	deepEqual( Stem("bandajat"), "bandaj" );
	deepEqual( Stem("bandajată"), "bandaj" );
	deepEqual( Stem("bandajate"), "bandaj" );
	deepEqual( Stem("bandaje"), "bandaj" );
	deepEqual( Stem("bandajează"), "bandaj" );
	deepEqual( Stem("bandă"), "band" );
	deepEqual( Stem("bani"), "ban" );
	deepEqual( Stem("banii"), "ban" );
	deepEqual( Stem("bank"), "bank" );
	deepEqual( Stem("banului"), "ban" );
	deepEqual( Stem("bara"), "bar" );
	deepEqual( Stem("baraj"), "baraj" );
	deepEqual( Stem("baraje"), "baraj" );
	deepEqual( Stem("barajul"), "baraj" );
	deepEqual( Stem("barajului"), "baraj" );
	deepEqual( Stem("barba"), "barb" );
	deepEqual( Stem("barbar"), "barbar" );
	deepEqual( Stem("barbari"), "barbar" );
	deepEqual( Stem("barbarii"), "barbar" );
	deepEqual( Stem("barbarism"), "barbarist" );
	deepEqual( Stem("barbă"), "barb" );
	deepEqual( Stem("barem"), "bar" );
	deepEqual( Stem("barieră"), "barier" );
	deepEqual( Stem("baros"), "baros" );
	deepEqual( Stem("baroului"), "baro" );
	deepEqual( Stem("baston"), "baston" );
	deepEqual( Stem("bat"), "bat" );
	deepEqual( Stem("batalioane"), "batalioan" );
	deepEqual( Stem("batalioanele"), "batalioan" );
	deepEqual( Stem("batalioanelor"), "batalioan" );
	deepEqual( Stem("batalion"), "batalion" );
	deepEqual( Stem("batalionul"), "batalion" );
	deepEqual( Stem("batalionului"), "batalion" );
	deepEqual( Stem("bată"), "bat" );
	deepEqual( Stem("bate"), "bat" );
	deepEqual( Stem("batem"), "bat" );
	deepEqual( Stem("batere"), "bater" );
	deepEqual( Stem("bateria"), "bater" );
	deepEqual( Stem("baterie"), "bater" );
	deepEqual( Stem("baterii"), "bater" );
	deepEqual( Stem("bateţi"), "bat" );
	deepEqual( Stem("batista"), "batist" );
	deepEqual( Stem("batistă"), "batist" );
	deepEqual( Stem("batiste"), "batist" );
	deepEqual( Stem("batistele"), "batist" );
	deepEqual( Stem("batistuţă"), "batistuţ" );
	deepEqual( Stem("batişte"), "batişt" );
	deepEqual( Stem("batjocorind"), "batjocor" );
	deepEqual( Stem("batjocorirea"), "batjocor" );
	deepEqual( Stem("batjocorit"), "batjocor" );
	deepEqual( Stem("batjocoritoare"), "batjocor" );
	deepEqual( Stem("batjocoritor"), "batjocor" );
	deepEqual( Stem("batjocoriţi"), "batjocor" );
	deepEqual( Stem("batjocură"), "batjoc" );
	deepEqual( Stem("batoza"), "batoz" );
	deepEqual( Stem("baţi"), "baţ" );
	deepEqual( Stem("baudelaireiană"), "baudelaireian" );
	deepEqual( Stem("bavarez"), "bavar" );
	deepEqual( Stem("bavareză"), "bavarez" );
	deepEqual( Stem("bavareze"), "bavar" );
	deepEqual( Stem("bavaria"), "bavar" );
	deepEqual( Stem("baza"), "baz" );
	deepEqual( Stem("bazaconiile"), "bazacon" );
	deepEqual( Stem("bazalt"), "bazalt" );
	deepEqual( Stem("bazar"), "bazar" );
	deepEqual( Stem("bazarul"), "bazar" );
	deepEqual( Stem("bazaruri"), "bazarur" );
	deepEqual( Stem("bază"), "baz" );
	deepEqual( Stem("bazează"), "bazeaz" );
	deepEqual( Stem("bazele"), "baz" );
	deepEqual( Stem("bazez"), "bazez" );
	deepEqual( Stem("bâjbâie"), "bâjbâi" );
	deepEqual( Stem("bâjbâim"), "bâjbâ" );
	deepEqual( Stem("bâjbâit"), "bâjbâit" );
	deepEqual( Stem("bâlbâită"), "bâlbâit" );
	deepEqual( Stem("bâlci"), "bâlc" );
	deepEqual( Stem("bâlciul"), "bâlc" );
	deepEqual( Stem("bârlad"), "bârlad" );
	deepEqual( Stem("bârsei"), "bâr" );
	deepEqual( Stem("băcănie"), "băcăn" );
	deepEqual( Stem("băga"), "băg" );
	deepEqual( Stem("băgare"), "băgar" );
	deepEqual( Stem("băgat"), "băgat" );
	deepEqual( Stem("băgaţi"), "băg" );
	deepEqual( Stem("băgau"), "băgau" );
	deepEqual( Stem("băgăm"), "băg" );
	deepEqual( Stem("băi"), "băi" );
	deepEqual( Stem("băiat"), "băiat" );
	deepEqual( Stem("băiatul"), "băiat" );
	deepEqual( Stem("băiatule"), "băiatul" );
	deepEqual( Stem("băiatului"), "băiat" );
	deepEqual( Stem("băietan"), "băietan" );
	deepEqual( Stem("băiete"), "băiet" );
	deepEqual( Stem("băieţandrul"), "băieţandr" );
	deepEqual( Stem("băieţaş"), "băieţaş" );
	deepEqual( Stem("băieţi"), "băi" );
	deepEqual( Stem("băieţii"), "băi" );
	deepEqual( Stem("băilor"), "băilor" );
	deepEqual( Stem("bălai"), "băla" );
	deepEqual( Stem("bălaie"), "bălai" );
	deepEqual( Stem("bălăbăneală"), "bălăbăneal" );
	deepEqual( Stem("băligar"), "băligar" );
	deepEqual( Stem("băltoace"), "băltoac" );
	deepEqual( Stem("bălţat"), "bălţat" );
	deepEqual( Stem("bănci"), "bănc" );
	deepEqual( Stem("băncii"), "bănc" );
	deepEqual( Stem("băncile"), "bănc" );
	deepEqual( Stem("bănească"), "băneasc" );
	deepEqual( Stem("bănui"), "bănu" );
	deepEqual( Stem("bănuiala"), "bănuial" );
	deepEqual( Stem("bănuială"), "bănuial" );
	deepEqual( Stem("bănuiam"), "bănui" );
	deepEqual( Stem("bănuiască"), "bănuiasc" );
	deepEqual( Stem("bănuiau"), "bănui" );
	deepEqual( Stem("bănuie"), "bănui" );
	deepEqual( Stem("bănuielii"), "bănuiel" );
	deepEqual( Stem("bănuiesc"), "bănui" );
	deepEqual( Stem("bănuieşte"), "bănui" );
	deepEqual( Stem("bănuieşti"), "bănui" );
	deepEqual( Stem("bănuim"), "bănu" );
	deepEqual( Stem("bănuind"), "bănu" );
	deepEqual( Stem("bănuise"), "bănu" );
	deepEqual( Stem("bănuit"), "bănuit" );
	deepEqual( Stem("bănuită"), "bănuit" );
	deepEqual( Stem("bănuite"), "bănuit" );
	deepEqual( Stem("bănuitoare"), "bănuit" );
	deepEqual( Stem("bănuitor"), "bănuit" );
	deepEqual( Stem("bănuiţi"), "bănu" );
	deepEqual( Stem("bărbat"), "bărbat" );
	deepEqual( Stem("bărbatu"), "bărbatu" );
	deepEqual( Stem("bărbatul"), "bărbat" );
	deepEqual( Stem("bărbatului"), "bărbat" );
	deepEqual( Stem("bărbaţi"), "bărb" );
	deepEqual( Stem("bărbaţii"), "bărb" );
	deepEqual( Stem("bărbaţilor"), "bărb" );
	deepEqual( Stem("bărbătească"), "bărbăt" );
	deepEqual( Stem("bărbătesc"), "bărbăt" );
	deepEqual( Stem("bărbăţie"), "bărbăţ" );
	deepEqual( Stem("bărbi"), "bărb" );
	deepEqual( Stem("bărbie"), "bărb" );
	deepEqual( Stem("bărbiereşte"), "bărbier" );
	deepEqual( Stem("bărcut"), "bărcut" );
	deepEqual( Stem("băşici"), "băşic" );
	deepEqual( Stem("bătaia"), "bătai" );
	deepEqual( Stem("bătaie"), "bătai" );
	deepEqual( Stem("bătând"), "bătând" );
	deepEqual( Stem("bătându"), "bătându" );
	deepEqual( Stem("bătăi"), "bătă" );
	deepEqual( Stem("bătăie"), "bătăi" );
	deepEqual( Stem("bătăii"), "bătăi" );
	deepEqual( Stem("bătăile"), "bătă" );
	deepEqual( Stem("bătălia"), "bătăl" );
	deepEqual( Stem("bătălie"), "bătăl" );
	deepEqual( Stem("bătăliei"), "bătăl" );
	deepEqual( Stem("bătălii"), "bătăl" );
	deepEqual( Stem("bătătura"), "bătătur" );
	deepEqual( Stem("bătătură"), "bătăt" );
	deepEqual( Stem("bătăuş"), "bătăuş" );
	deepEqual( Stem("bătăuşi"), "bătăuş" );
	deepEqual( Stem("bătea"), "băt" );
	deepEqual( Stem("băteau"), "băteau" );
	deepEqual( Stem("bătrâiori"), "bătrâior" );
	deepEqual( Stem("bătrân"), "bătrân" );
	deepEqual( Stem("bătrână"), "bătrân" );
	deepEqual( Stem("bătrâne"), "bătrân" );
	deepEqual( Stem("bătrâni"), "bătrân" );
	deepEqual( Stem("bătrânicioasă"), "bătrânic" );
	deepEqual( Stem("bătrânii"), "bătrân" );
	deepEqual( Stem("bătrânul"), "bătrân" );
	deepEqual( Stem("bătrânului"), "bătrân" );
	deepEqual( Stem("bătrîn"), "bătrîn" );
	deepEqual( Stem("bătrînă"), "bătrîn" );
	deepEqual( Stem("bătrînelul"), "bătrînel" );
	deepEqual( Stem("bătrîneşti"), "bătrîn" );
	deepEqual( Stem("bătrîneţe"), "bătrîneţ" );
	deepEqual( Stem("bătrîneţii"), "bătrîn" );
	deepEqual( Stem("bătrîni"), "bătrîn" );
	deepEqual( Stem("bătrînică"), "bătrîn" );
	deepEqual( Stem("bătut"), "bătut" );
	deepEqual( Stem("bătută"), "bătut" );
	deepEqual( Stem("bătute"), "bătut" );
	deepEqual( Stem("bătuţi"), "bătuţ" );
	deepEqual( Stem("băţos"), "băţos" );
	deepEqual( Stem("băţoşi"), "băţoş" );
	deepEqual( Stem("băut"), "băut" );
	deepEqual( Stem("băutură"), "băut" );
	deepEqual( Stem("băuturii"), "băutur" );
	deepEqual( Stem("bd"), "bd" );
	deepEqual( Stem("bea"), "bea" );
	deepEqual( Stem("beam"), "beam" );
	deepEqual( Stem("beat"), "beat" );
	deepEqual( Stem("beau"), "beau" );
	deepEqual( Stem("bebel"), "bebel" );
	deepEqual( Stem("beci"), "bec" );
	deepEqual( Stem("beciul"), "bec" );
	deepEqual( Stem("bela"), "bel" );
	deepEqual( Stem("belgie"), "belg" );
	deepEqual( Stem("belşugul"), "belşug" );
	deepEqual( Stem("bene"), "ben" );
	deepEqual( Stem("beneficiezi"), "beneficiez" );
	deepEqual( Stem("benzină"), "benzin" );
	deepEqual( Stem("berbeci"), "berbec" );
	deepEqual( Stem("bere"), "ber" );
	deepEqual( Stem("bergson"), "bergson" );
	deepEqual( Stem("bergsoniană"), "bergsonian" );
	deepEqual( Stem("bergsonismul"), "bergsonist" );
	deepEqual( Stem("bergsonismului"), "bergsonist" );
	deepEqual( Stem("bergsoniştii"), "bergsonist" );
	deepEqual( Stem("berkeley"), "berkeley" );
	deepEqual( Stem("berlin"), "berlin" );
	deepEqual( Stem("berlinez"), "berlin" );
	deepEqual( Stem("berlinul"), "berlin" );
	deepEqual( Stem("bernard"), "bernard" );
	deepEqual( Stem("besant"), "besant" );
	deepEqual( Stem("bestiali"), "bestial" );
	deepEqual( Stem("bestialitate"), "bestial" );
	deepEqual( Stem("beteag"), "beteag" );
	deepEqual( Stem("beton"), "beton" );
	deepEqual( Stem("beţi"), "beţ" );
	deepEqual( Stem("beţie"), "beţ" );
	deepEqual( Stem("beţigaş"), "beţigaş" );
	deepEqual( Stem("bezna"), "bezn" );
	deepEqual( Stem("beznă"), "bezn" );
	deepEqual( Stem("biata"), "biat" );
	deepEqual( Stem("biblie"), "bibl" );
	deepEqual( Stem("bibliei"), "bibl" );
	deepEqual( Stem("biblioteca"), "bibliotec" );
	deepEqual( Stem("bibliotecă"), "bibliotec" );
	deepEqual( Stem("biblioteci"), "bibliotec" );
	deepEqual( Stem("bice"), "bic" );
	deepEqual( Stem("bicele"), "bic" );
	deepEqual( Stem("biciuiesc"), "biciuiesc" );
	deepEqual( Stem("biciuit"), "biciu" );
	deepEqual( Stem("bideu"), "bideu" );
	deepEqual( Stem("bidimensional"), "bidimensional" );
	deepEqual( Stem("bidimensională"), "bidimensional" );
	deepEqual( Stem("bidoane"), "bidoan" );
	deepEqual( Stem("bidoanele"), "bidoan" );
	deepEqual( Stem("bietul"), "biet" );
	deepEqual( Stem("bieţii"), "bieţ" );
	deepEqual( Stem("bila"), "bil" );
	deepEqual( Stem("bilanţ"), "bilanţ" );
	deepEqual( Stem("bilanţul"), "bilanţ" );
	deepEqual( Stem("bilă"), "bil" );
	deepEqual( Stem("bile"), "bil" );
	deepEqual( Stem("bilei"), "bile" );
	deepEqual( Stem("bilet"), "bilet" );
	deepEqual( Stem("bilete"), "bilet" );
	deepEqual( Stem("biletele"), "bilet" );
	deepEqual( Stem("biletul"), "bilet" );
	deepEqual( Stem("bileţel"), "bileţel" );
	deepEqual( Stem("bileţelele"), "bileţel" );
	deepEqual( Stem("bileţelului"), "bileţel" );
	deepEqual( Stem("biliard"), "biliard" );
	deepEqual( Stem("bine"), "bin" );
	deepEqual( Stem("binecrescut"), "binecresc" );
	deepEqual( Stem("binecuvântat"), "binecuvânt" );
	deepEqual( Stem("binecuvântate"), "binecuvânt" );
	deepEqual( Stem("binefacerea"), "binefac" );
	deepEqual( Stem("binefăcătoare"), "binefăc" );
	deepEqual( Stem("bineînţeles"), "bineînţeles" );
	deepEqual( Stem("binele"), "bin" );
	deepEqual( Stem("binelea"), "binel" );
	deepEqual( Stem("binevoitoarei"), "binevoitoare" );
	deepEqual( Stem("binevoitor"), "binevo" );
	deepEqual( Stem("binevoitori"), "binevo" );
	deepEqual( Stem("binişorul"), "binişor" );
	deepEqual( Stem("binoclu"), "binoclu" );
	deepEqual( Stem("binoclul"), "binocl" );
	deepEqual( Stem("biograf"), "biograf" );
	deepEqual( Stem("biografismul"), "biografist" );
	deepEqual( Stem("biograful"), "biograf" );
	deepEqual( Stem("biologic"), "biolog" );
	deepEqual( Stem("biologice"), "biolog" );
	deepEqual( Stem("biologie"), "biolog" );
	deepEqual( Stem("biologiei"), "biolog" );
	deepEqual( Stem("biomecanică"), "biomecan" );
	deepEqual( Stem("bioxid"), "bioxid" );
	deepEqual( Stem("bipolar"), "bipolar" );
	deepEqual( Stem("birjari"), "birjar" );
	deepEqual( Stem("birjă"), "birj" );
	deepEqual( Stem("birou"), "birou" );
	deepEqual( Stem("biroul"), "biro" );
	deepEqual( Stem("biroului"), "biro" );
	deepEqual( Stem("birouri"), "birour" );
	deepEqual( Stem("birourile"), "birour" );
	deepEqual( Stem("birt"), "birt" );
	deepEqual( Stem("birui"), "biru" );
	deepEqual( Stem("biruiau"), "birui" );
	deepEqual( Stem("biruie"), "birui" );
	deepEqual( Stem("biruit"), "biruit" );
	deepEqual( Stem("biruitoare"), "biruit" );
	deepEqual( Stem("biruitor"), "biruit" );
	deepEqual( Stem("biruiţi"), "biru" );
	deepEqual( Stem("birurilor"), "birur" );
	deepEqual( Stem("bis"), "bis" );
	deepEqual( Stem("biserica"), "biser" );
	deepEqual( Stem("biserică"), "biser" );
	deepEqual( Stem("bisericească"), "biseric" );
	deepEqual( Stem("bisericeşti"), "biseric" );
	deepEqual( Stem("biserici"), "biser" );
	deepEqual( Stem("bisericuţa"), "bisericuţ" );
	deepEqual( Stem("bismarck"), "bismarck" );
	deepEqual( Stem("bisturiului"), "bistur" );
	deepEqual( Stem("bizar"), "bizar" );
	deepEqual( Stem("bizară"), "bizar" );
	deepEqual( Stem("blajină"), "blajin" );
	deepEqual( Stem("blana"), "blan" );
	deepEqual( Stem("blană"), "blan" );
	deepEqual( Stem("blazat"), "blazat" );
	deepEqual( Stem("blazată"), "blazat" );
	deepEqual( Stem("blazatul"), "blazat" );
	deepEqual( Stem("blând"), "blând" );
	deepEqual( Stem("blândeţea"), "blândeţ" );
	deepEqual( Stem("blândeţii"), "blând" );
	deepEqual( Stem("blestem"), "blest" );
	deepEqual( Stem("blestemat"), "blestem" );
	deepEqual( Stem("blestemată"), "blestem" );
	deepEqual( Stem("blestemaţii"), "blestem" );
	deepEqual( Stem("bleumarin"), "bleumarin" );
	deepEqual( Stem("bloc"), "bloc" );
	deepEqual( Stem("bloca"), "bloc" );
	deepEqual( Stem("blocant"), "blocant" );
	deepEqual( Stem("blocantă"), "blocant" );
	deepEqual( Stem("blocante"), "blocant" );
	deepEqual( Stem("blocare"), "bloc" );
	deepEqual( Stem("blocat"), "blocat" );
	deepEqual( Stem("blocată"), "blocat" );
	deepEqual( Stem("blocării"), "blocăr" );
	deepEqual( Stem("blochează"), "bloch" );
	deepEqual( Stem("blochez"), "bloch" );
	deepEqual( Stem("blocînd"), "blocînd" );
	deepEqual( Stem("blocul"), "bloc" );
	deepEqual( Stem("blocuri"), "blocur" );
	deepEqual( Stem("blond"), "blond" );
	deepEqual( Stem("blonda"), "blond" );
	deepEqual( Stem("blondă"), "blond" );
	deepEqual( Stem("blonde"), "blond" );
	deepEqual( Stem("blondei"), "blonde" );
	deepEqual( Stem("blondele"), "blond" );
	deepEqual( Stem("bluff"), "bluff" );
	deepEqual( Stem("blugi"), "blug" );
	deepEqual( Stem("bluza"), "bluz" );
	deepEqual( Stem("bluză"), "bluz" );
	deepEqual( Stem("bluze"), "bluz" );
	deepEqual( Stem("boabe"), "boab" );
	deepEqual( Stem("boabelor"), "boab" );
	deepEqual( Stem("boacănă"), "boacăn" );
	deepEqual( Stem("boala"), "boal" );
	deepEqual( Stem("boală"), "boal" );
	deepEqual( Stem("boale"), "boal" );
	deepEqual( Stem("boante"), "boant" );
	deepEqual( Stem("boaşele"), "boaş" );
	deepEqual( Stem("bobina"), "bobin" );
	deepEqual( Stem("bobină"), "bobin" );
	deepEqual( Stem("bobinele"), "bobin" );
	deepEqual( Stem("bobîrnac"), "bobîrnac" );
	deepEqual( Stem("bocanci"), "bocanc" );
	deepEqual( Stem("bocancii"), "bocanc" );
	deepEqual( Stem("boccaccio"), "boccaccio" );
	deepEqual( Stem("bocească"), "boceasc" );
	deepEqual( Stem("boceşte"), "boceşt" );
	deepEqual( Stem("bocet"), "bocet" );
	deepEqual( Stem("bocetul"), "bocet" );
	deepEqual( Stem("boci"), "boc" );
	deepEqual( Stem("bocind"), "bocind" );
	deepEqual( Stem("boem"), "boem" );
	deepEqual( Stem("boemă"), "boem" );
	deepEqual( Stem("bogat"), "bogat" );
	deepEqual( Stem("bogata"), "bogat" );
	deepEqual( Stem("bogată"), "bogat" );
	deepEqual( Stem("bogate"), "bogat" );
	deepEqual( Stem("bogatul"), "bogat" );
	deepEqual( Stem("bogatului"), "bogat" );
	deepEqual( Stem("bogaţilor"), "bog" );
	deepEqual( Stem("bogătaşul"), "bogătaş" );
	deepEqual( Stem("bogăţia"), "bogăţ" );
	deepEqual( Stem("bogăţie"), "bogăţ" );
	deepEqual( Stem("bogăţiei"), "bogăţ" );
	deepEqual( Stem("bogăţii"), "bogăţ" );
	deepEqual( Stem("bogăţiile"), "bogăţ" );
	deepEqual( Stem("boierească"), "boier" );
	deepEqual( Stem("boiereşti"), "boier" );
	deepEqual( Stem("boieri"), "boier" );
	deepEqual( Stem("boierii"), "boier" );
	deepEqual( Stem("boierilor"), "boier" );
	deepEqual( Stem("boieroaică"), "boiero" );
	deepEqual( Stem("boierul"), "boier" );
	deepEqual( Stem("boierului"), "boier" );
	deepEqual( Stem("boii"), "boi" );
	deepEqual( Stem("boite"), "boit" );
	deepEqual( Stem("bojoci"), "bojoc" );
	deepEqual( Stem("boldului"), "bold" );
	deepEqual( Stem("boli"), "bol" );
	deepEqual( Stem("bolnav"), "bolnav" );
	deepEqual( Stem("bolnavă"), "bolnav" );
	deepEqual( Stem("bolnave"), "bolnav" );
	deepEqual( Stem("bolnavi"), "bolnav" );
	deepEqual( Stem("bolnavilor"), "bolnav" );
	deepEqual( Stem("bolnavul"), "bolnav" );
	deepEqual( Stem("bolnavului"), "bolnav" );
	deepEqual( Stem("bolocănos"), "bolocăn" );
	deepEqual( Stem("bolovan"), "bolovan" );
	deepEqual( Stem("bolovani"), "bolovan" );
	deepEqual( Stem("bolovanul"), "bolovan" );
	deepEqual( Stem("bolovănindu"), "bolovăn" );
	deepEqual( Stem("bolovănoasă"), "bolovăn" );
	deepEqual( Stem("bolovănoase"), "bolovăn" );
	deepEqual( Stem("bolşevică"), "bolşev" );
	deepEqual( Stem("bolşevismul"), "bolşevist" );
	deepEqual( Stem("bombardament"), "bombardament" );
	deepEqual( Stem("bombardamentul"), "bombardament" );
	deepEqual( Stem("bombardată"), "bombard" );
	deepEqual( Stem("bombaţi"), "bomb" );
	deepEqual( Stem("bombonieră"), "bombonier" );
	deepEqual( Stem("bondoc"), "bondoc" );
	deepEqual( Stem("bonele"), "bon" );
	deepEqual( Stem("bonom"), "bonom" );
	deepEqual( Stem("bonomia"), "bonom" );
	deepEqual( Stem("bonomie"), "bonom" );
	deepEqual( Stem("bonvivanţii"), "bonvivanţ" );
	deepEqual( Stem("boole"), "bool" );
	deepEqual( Stem("borangic"), "borang" );
	deepEqual( Stem("bordei"), "borde" );
	deepEqual( Stem("bordeie"), "bordei" );
	deepEqual( Stem("bordeiele"), "bordei" );
	deepEqual( Stem("bordeielor"), "bordei" );
	deepEqual( Stem("borsalino"), "borsalino" );
	deepEqual( Stem("borşului"), "borş" );
	deepEqual( Stem("bossuet"), "bossuet" );
	deepEqual( Stem("boston"), "boston" );
	deepEqual( Stem("boşimanii"), "boşiman" );
	deepEqual( Stem("boşimanul"), "boşiman" );
	deepEqual( Stem("bot"), "bot" );
	deepEqual( Stem("botanica"), "botan" );
	deepEqual( Stem("botanică"), "botan" );
	deepEqual( Stem("botezată"), "botez" );
	deepEqual( Stem("botezate"), "botez" );
	deepEqual( Stem("boturi"), "botur" );
	deepEqual( Stem("boturile"), "botur" );
	deepEqual( Stem("boţ"), "boţ" );
	deepEqual( Stem("bou"), "bou" );
	deepEqual( Stem("boubouroche"), "boubouroch" );
	deepEqual( Stem("bovarisme"), "bovarist" );
	deepEqual( Stem("brad"), "brad" );
	deepEqual( Stem("braghină"), "braghin" );
	deepEqual( Stem("bran"), "bran" );
	deepEqual( Stem("branului"), "bran" );
	deepEqual( Stem("braşov"), "braşov" );
	deepEqual( Stem("braşovului"), "braşov" );
	deepEqual( Stem("braţ"), "braţ" );
	deepEqual( Stem("braţe"), "braţ" );
	deepEqual( Stem("braţele"), "braţ" );
	deepEqual( Stem("braţelor"), "braţ" );
	deepEqual( Stem("braţul"), "braţ" );
	deepEqual( Stem("bravi"), "brav" );
	deepEqual( Stem("bravo"), "bravo" );
	deepEqual( Stem("bravură"), "brav" );
	deepEqual( Stem("brazi"), "braz" );
	deepEqual( Stem("brânci"), "brânc" );
	deepEqual( Stem("brânză"), "brânz" );
	deepEqual( Stem("brânzeturi"), "brânzetur" );
	deepEqual( Stem("brânzoaice"), "brânzoaic" );
	deepEqual( Stem("brâu"), "brâu" );
	deepEqual( Stem("brăila"), "brăil" );
	deepEqual( Stem("brătianu"), "brătianu" );
	deepEqual( Stem("brăţară"), "brăţ" );
	deepEqual( Stem("bre"), "bre" );
	deepEqual( Stem("breşă"), "breş" );
	deepEqual( Stem("brevetezi"), "brevet" );
	deepEqual( Stem("brevetul"), "brevet" );
	deepEqual( Stem("bridge"), "bridg" );
	deepEqual( Stem("brigada"), "brigad" );
	deepEqual( Stem("brigadă"), "brigad" );
	deepEqual( Stem("brigadier"), "brigadier" );
	deepEqual( Stem("brigadieri"), "brigadier" );
	deepEqual( Stem("brigadierul"), "brigadier" );
	deepEqual( Stem("brigăzii"), "brigăz" );
	deepEqual( Stem("brio"), "brio" );
	deepEqual( Stem("britanică"), "britan" );
	deepEqual( Stem("broască"), "broasc" );
	deepEqual( Stem("brodate"), "brodat" );
	deepEqual( Stem("broderie"), "broder" );
	deepEqual( Stem("brodoadă"), "brodoad" );
	deepEqual( Stem("broşura"), "broşur" );
	deepEqual( Stem("broşură"), "broş" );
	deepEqual( Stem("broşurele"), "broşur" );
	deepEqual( Stem("broşuri"), "broşur" );
	deepEqual( Stem("broşurile"), "broşur" );
	deepEqual( Stem("browning"), "browning" );
	deepEqual( Stem("bruma"), "brum" );
	deepEqual( Stem("brumat"), "brumat" );
	deepEqual( Stem("brumă"), "brum" );
	deepEqual( Stem("bruna"), "brun" );
	deepEqual( Stem("brună"), "brun" );
	deepEqual( Stem("brune"), "brun" );
	deepEqual( Stem("bruno"), "bruno" );
	deepEqual( Stem("brusc"), "brusc" );
	deepEqual( Stem("bruscat"), "bruscat" );
	deepEqual( Stem("bruscă"), "brusc" );
	deepEqual( Stem("brut"), "brut" );
	deepEqual( Stem("brutal"), "brutal" );
	deepEqual( Stem("brutală"), "brutal" );
	deepEqual( Stem("brutale"), "brutal" );
	deepEqual( Stem("brutali"), "brutal" );
	deepEqual( Stem("brutalităţii"), "brutal" );
	deepEqual( Stem("brutării"), "brutăr" );
	deepEqual( Stem("brute"), "brut" );
	deepEqual( Stem("buboasă"), "buboas" );
	deepEqual( Stem("bubuitură"), "bubuit" );
	deepEqual( Stem("bubuiturilor"), "bubuitur" );
	deepEqual( Stem("bucata"), "bucat" );
	deepEqual( Stem("bucată"), "bucat" );
	deepEqual( Stem("bucătar"), "bucătar" );
	deepEqual( Stem("bucătarul"), "bucătar" );
	deepEqual( Stem("bucătăreasa"), "bucătăreas" );
	deepEqual( Stem("bucătăreasă"), "bucătăreas" );
	deepEqual( Stem("bucătărie"), "bucătăr" );
	deepEqual( Stem("bucătăriile"), "bucătăr" );
	deepEqual( Stem("bucăţi"), "bucăţ" );
	deepEqual( Stem("bucăţilor"), "bucăţ" );
	deepEqual( Stem("bucegii"), "buceg" );
	deepEqual( Stem("buchet"), "buchet" );
	deepEqual( Stem("buchii"), "buch" );
	deepEqual( Stem("bucile"), "buc" );
	deepEqual( Stem("bucla"), "bucl" );
	deepEqual( Stem("buclat"), "buclat" );
	deepEqual( Stem("buclează"), "bucl" );
	deepEqual( Stem("bucurat"), "bucur" );
	deepEqual( Stem("bucură"), "bucur" );
	deepEqual( Stem("bucureştean"), "bucureştean" );
	deepEqual( Stem("bucureşteană"), "bucureştean" );
	deepEqual( Stem("bucureştene"), "bucureşten" );
	deepEqual( Stem("bucureştenească"), "bucureşten" );
	deepEqual( Stem("bucureşteneşte"), "bucureşten" );
	deepEqual( Stem("bucureşti"), "bucur" );
	deepEqual( Stem("bucureştii"), "bucur" );
	deepEqual( Stem("bucureştilor"), "bucur" );
	deepEqual( Stem("bucuri"), "bucur" );
	deepEqual( Stem("bucuria"), "bucur" );
	deepEqual( Stem("bucurie"), "bucur" );
	deepEqual( Stem("bucurii"), "bucur" );
	deepEqual( Stem("bucuriile"), "bucur" );
	deepEqual( Stem("bucuroasă"), "bucur" );
	deepEqual( Stem("bucuros"), "bucur" );
	deepEqual( Stem("bucuroşi"), "bucur" );
	deepEqual( Stem("budapesta"), "budapest" );
	deepEqual( Stem("budget"), "budget" );
	deepEqual( Stem("budgete"), "budget" );
	deepEqual( Stem("budhi"), "budh" );
	deepEqual( Stem("budiu"), "budiu" );
	deepEqual( Stem("bufanţi"), "bufanţ" );
	deepEqual( Stem("bufet"), "bufet" );
	deepEqual( Stem("bufetul"), "bufet" );
	deepEqual( Stem("bufnitură"), "bufnit" );
	deepEqual( Stem("bufon"), "bufon" );
	deepEqual( Stem("bufoneria"), "bufoner" );
	deepEqual( Stem("buget"), "buget" );
	deepEqual( Stem("bugetar"), "bugetar" );
	deepEqual( Stem("bugetară"), "buget" );
	deepEqual( Stem("bugetele"), "buget" );
	deepEqual( Stem("buhai"), "buha" );
	deepEqual( Stem("buhăi"), "buhă" );
	deepEqual( Stem("buimac"), "buimac" );
	deepEqual( Stem("buimacă"), "buimac" );
	deepEqual( Stem("buimăcească"), "buimăc" );
	deepEqual( Stem("buimăcită"), "buimăc" );
	deepEqual( Stem("bujiile"), "buj" );
	deepEqual( Stem("bujor"), "bujor" );
	deepEqual( Stem("bula"), "bul" );
	deepEqual( Stem("bulă"), "bul" );
	deepEqual( Stem("buldog"), "buldog" );
	deepEqual( Stem("buldozer"), "buldozer" );
	deepEqual( Stem("buldozerele"), "buldoz" );
	deepEqual( Stem("bule"), "bul" );
	deepEqual( Stem("bulelor"), "bul" );
	deepEqual( Stem("buletinele"), "buletin" );
	deepEqual( Stem("buletinelor"), "buletin" );
	deepEqual( Stem("bulevard"), "bulevard" );
	deepEqual( Stem("bulevarde"), "bulevard" );
	deepEqual( Stem("bulevardiere"), "bulevardier" );
	deepEqual( Stem("bulevardul"), "bulevard" );
	deepEqual( Stem("bulevardului"), "bulevard" );
	deepEqual( Stem("bulgari"), "bulgar" );
	deepEqual( Stem("bulgarilor"), "bulgar" );
	deepEqual( Stem("bulumaci"), "bulumac" );
	deepEqual( Stem("bun"), "bun" );
	deepEqual( Stem("buna"), "bun" );
	deepEqual( Stem("bună"), "bun" );
	deepEqual( Stem("bunăstare"), "bunăst" );
	deepEqual( Stem("bunătate"), "bunăt" );
	deepEqual( Stem("bunătatea"), "bunăt" );
	deepEqual( Stem("bunătăţi"), "bunătăţ" );
	deepEqual( Stem("bunătăţile"), "bunătăţ" );
	deepEqual( Stem("bunătăţilor"), "bunătăţ" );
	deepEqual( Stem("bunăvoinţa"), "bunăvoinţ" );
	deepEqual( Stem("bunăvoinţă"), "bunăvoinţ" );
	deepEqual( Stem("bune"), "bun" );
	deepEqual( Stem("buni"), "bun" );
	deepEqual( Stem("bunica"), "bunic" );
	deepEqual( Stem("bunicei"), "bunice" );
	deepEqual( Stem("bunul"), "bun" );
	deepEqual( Stem("bunului"), "bun" );
	deepEqual( Stem("bunurile"), "bunur" );
	deepEqual( Stem("bunurilor"), "bunur" );
	deepEqual( Stem("burbonic"), "burbon" );
	deepEqual( Stem("burdufurile"), "burdufur" );
	deepEqual( Stem("burgez"), "burg" );
	deepEqual( Stem("burgeză"), "burgez" );
	deepEqual( Stem("burgeze"), "burg" );
	deepEqual( Stem("burgezi"), "burg" );
	deepEqual( Stem("burgezia"), "burgez" );
	deepEqual( Stem("burgezie"), "burgez" );
	deepEqual( Stem("burgeziei"), "burg" );
	deepEqual( Stem("burgezii"), "burg" );
	deepEqual( Stem("burgeziilor"), "burg" );
	deepEqual( Stem("burgezilor"), "burg" );
	deepEqual( Stem("burgezul"), "burg" );
	deepEqual( Stem("burgezului"), "burg" );
	deepEqual( Stem("burgheză"), "burghez" );
	deepEqual( Stem("burghiu"), "burghiu" );
	deepEqual( Stem("burlac"), "burlac" );
	deepEqual( Stem("burniţeze"), "burniţ" );
	deepEqual( Stem("bursa"), "burs" );
	deepEqual( Stem("burselor"), "bur" );
	deepEqual( Stem("burta"), "burt" );
	deepEqual( Stem("burtă"), "burt" );
	deepEqual( Stem("burţile"), "burţ" );
	deepEqual( Stem("buruieni"), "buruien" );
	deepEqual( Stem("business"), "business" );
	deepEqual( Stem("busoni"), "buson" );
	deepEqual( Stem("buşteni"), "buşten" );
	deepEqual( Stem("butoaie"), "butoai" );
	deepEqual( Stem("butoi"), "buto" );
	deepEqual( Stem("butoni"), "buton" );
	deepEqual( Stem("butonieră"), "butonier" );
	deepEqual( Stem("buturugă"), "buturug" );
	deepEqual( Stem("buza"), "buz" );
	deepEqual( Stem("buzat"), "buzat" );
	deepEqual( Stem("buzău"), "buzău" );
	deepEqual( Stem("buze"), "buz" );
	deepEqual( Stem("buzei"), "buze" );
	deepEqual( Stem("buzele"), "buz" );
	deepEqual( Stem("buzelor"), "buz" );
	deepEqual( Stem("buzna"), "buzn" );
	deepEqual( Stem("buzunar"), "buzunar" );
	deepEqual( Stem("buzunare"), "buzun" );
	deepEqual( Stem("buzunarele"), "buzun" );
	deepEqual( Stem("buzunarul"), "buzunar" );
	deepEqual( Stem("c"), "c" );
	deepEqual( Stem("ca"), "ca" );
	deepEqual( Stem("cabaliştilor"), "cabalist" );
	deepEqual( Stem("cabaretele"), "cabaret" );
	deepEqual( Stem("cabinet"), "cabinet" );
	deepEqual( Stem("cabotinaj"), "cabotinaj" );
	deepEqual( Stem("cabotine"), "cabotin" );
	deepEqual( Stem("cad"), "cad" );
	deepEqual( Stem("cadavre"), "cadavr" );
	deepEqual( Stem("cadavrele"), "cadavr" );
	deepEqual( Stem("cadavru"), "cadavru" );
	deepEqual( Stem("cadână"), "cadân" );
	deepEqual( Stem("cadă"), "cad" );
	deepEqual( Stem("cade"), "cad" );
	deepEqual( Stem("cadet"), "cadet" );
	deepEqual( Stem("cadou"), "cadou" );
	deepEqual( Stem("cadouri"), "cadour" );
	deepEqual( Stem("cadre"), "cadr" );
	deepEqual( Stem("cadril"), "cadril" );
	deepEqual( Stem("cadru"), "cadru" );
	deepEqual( Stem("cadrul"), "cadr" );
	deepEqual( Stem("cadrului"), "cadr" );
	deepEqual( Stem("cafea"), "caf" );
	deepEqual( Stem("cafeaua"), "cafeau" );
	deepEqual( Stem("cafele"), "caf" );
	deepEqual( Stem("cafelelor"), "cafel" );
	deepEqual( Stem("cafenea"), "cafen" );
	deepEqual( Stem("cafenele"), "cafen" );
	deepEqual( Stem("cafenelei"), "cafenele" );
	deepEqual( Stem("cafenelelor"), "cafenel" );
	deepEqual( Stem("cafenie"), "cafen" );
	deepEqual( Stem("cai"), "cai" );
	deepEqual( Stem("caii"), "cai" );
	deepEqual( Stem("caillaux"), "caillaux" );
	deepEqual( Stem("cailor"), "cailor" );
	deepEqual( Stem("caise"), "cai" );
	deepEqual( Stem("caisei"), "cai" );
	deepEqual( Stem("cal"), "cal" );
	deepEqual( Stem("calamburul"), "calambur" );
	deepEqual( Stem("calamitate"), "calam" );
	deepEqual( Stem("calapoade"), "calapoad" );
	deepEqual( Stem("calapoadelor"), "calapoad" );
	deepEqual( Stem("calapodul"), "calapod" );
	deepEqual( Stem("calc"), "calc" );
	deepEqual( Stem("calcar"), "calcar" );
	deepEqual( Stem("calce"), "calc" );
	deepEqual( Stem("calchiat"), "calchiat" );
	deepEqual( Stem("calchiată"), "calchiat" );
	deepEqual( Stem("calcinată"), "calcin" );
	deepEqual( Stem("calcul"), "calc" );
	deepEqual( Stem("calcula"), "calcul" );
	deepEqual( Stem("calculabilă"), "calcul" );
	deepEqual( Stem("calculabile"), "calcul" );
	deepEqual( Stem("calculabilitate"), "calcul" );
	deepEqual( Stem("calculabilităţii"), "calcul" );
	deepEqual( Stem("calcularea"), "calcul" );
	deepEqual( Stem("calculase"), "calcul" );
	deepEqual( Stem("calculat"), "calcul" );
	deepEqual( Stem("calculată"), "calcul" );
	deepEqual( Stem("calculăm"), "calcul" );
	deepEqual( Stem("calculării"), "calculăr" );
	deepEqual( Stem("calcule"), "calcul" );
	deepEqual( Stem("calculează"), "calcul" );
	deepEqual( Stem("calculele"), "calcul" );
	deepEqual( Stem("calculez"), "calcul" );
	deepEqual( Stem("calculezi"), "calcul" );
	deepEqual( Stem("calculul"), "calcul" );
	deepEqual( Stem("calculului"), "calcul" );
	deepEqual( Stem("cald"), "cald" );
	deepEqual( Stem("caldă"), "cald" );
	deepEqual( Stem("calde"), "cald" );
	deepEqual( Stem("cale"), "cal" );
	deepEqual( Stem("calea"), "cal" );
	deepEqual( Stem("calendar"), "calendar" );
	deepEqual( Stem("calendarul"), "calendar" );
	deepEqual( Stem("calibru"), "calibru" );
	deepEqual( Stem("california"), "californ" );
	deepEqual( Stem("caligrafică"), "caligraf" );
	deepEqual( Stem("caligrafice"), "caligraf" );
	deepEqual( Stem("calitate"), "calitat" );
	deepEqual( Stem("calitatea"), "calitat" );
	deepEqual( Stem("calitativ"), "calit" );
	deepEqual( Stem("calitativă"), "calit" );
	deepEqual( Stem("calitative"), "calit" );
	deepEqual( Stem("calităţi"), "calităţ" );
	deepEqual( Stem("calităţile"), "calităţ" );
	deepEqual( Stem("calităţilor"), "calităţ" );
	deepEqual( Stem("calm"), "calm" );
	deepEqual( Stem("calmat"), "calmat" );
	deepEqual( Stem("calmă"), "calm" );
	deepEqual( Stem("calme"), "calm" );
	deepEqual( Stem("calmul"), "calm" );
	deepEqual( Stem("calmului"), "calm" );
	deepEqual( Stem("calomniau"), "calomn" );
	deepEqual( Stem("calomnii"), "calomn" );
	deepEqual( Stem("calpe"), "calp" );
	deepEqual( Stem("calul"), "cal" );
	deepEqual( Stem("calului"), "cal" );
	deepEqual( Stem("calzi"), "calz" );
	deepEqual( Stem("cam"), "cam" );
	deepEqual( Stem("camarad"), "camarad" );
	deepEqual( Stem("camaradă"), "camarad" );
	deepEqual( Stem("camarade"), "camarad" );
	deepEqual( Stem("camaraderia"), "camarader" );
	deepEqual( Stem("camaradul"), "camarad" );
	deepEqual( Stem("camarazi"), "camaraz" );
	deepEqual( Stem("camarazii"), "camaraz" );
	deepEqual( Stem("camarazilor"), "camaraz" );
	deepEqual( Stem("camelii"), "camel" );
	deepEqual( Stem("camera"), "camer" );
	deepEqual( Stem("cameră"), "camer" );
	deepEqual( Stem("camerei"), "camere" );
	deepEqual( Stem("camerelor"), "camer" );
	deepEqual( Stem("camerii"), "camer" );
	deepEqual( Stem("cameristei"), "cameriste" );
	deepEqual( Stem("camioanele"), "camioan" );
	deepEqual( Stem("campanie"), "campan" );
	deepEqual( Stem("campaniei"), "campan" );
	deepEqual( Stem("campanii"), "campan" );
	deepEqual( Stem("campaniile"), "campan" );
	deepEqual( Stem("campoducelui"), "campoducel" );
	deepEqual( Stem("canalie"), "canal" );
	deepEqual( Stem("canalii"), "canal" );
	deepEqual( Stem("canapelei"), "canapele" );
	deepEqual( Stem("cancanuri"), "cancanur" );
	deepEqual( Stem("cancelarie"), "cancelar" );
	deepEqual( Stem("cancer"), "cancer" );
	deepEqual( Stem("canceros"), "cancer" );
	deepEqual( Stem("cancerului"), "cancer" );
	deepEqual( Stem("candelă"), "candel" );
	deepEqual( Stem("candid"), "candid" );
	deepEqual( Stem("candidă"), "candid" );
	deepEqual( Stem("candide"), "candid" );
	deepEqual( Stem("candoarea"), "candoar" );
	deepEqual( Stem("cangea"), "cang" );
	deepEqual( Stem("cantacuzino"), "cantacuzino" );
	deepEqual( Stem("cantitate"), "cantitat" );
	deepEqual( Stem("cantitatea"), "cantitat" );
	deepEqual( Stem("cantitatifiere"), "cantitatifier" );
	deepEqual( Stem("cantitatifierea"), "cantitatifier" );
	deepEqual( Stem("cantitatifierii"), "cantitatifier" );
	deepEqual( Stem("cantitativ"), "cantit" );
	deepEqual( Stem("cantitativă"), "cantit" );
	deepEqual( Stem("cantităţi"), "cantităţ" );
	deepEqual( Stem("cantoanelor"), "cantoan" );
	deepEqual( Stem("cantonament"), "cantonament" );
	deepEqual( Stem("cantonamentele"), "cantonament" );
	deepEqual( Stem("cantonamentul"), "cantonament" );
	deepEqual( Stem("cantonăm"), "canton" );
	deepEqual( Stem("cantonul"), "canton" );
	deepEqual( Stem("cap"), "cap" );
	deepEqual( Stem("capabil"), "capabil" );
	deepEqual( Stem("capabilă"), "capabil" );
	deepEqual( Stem("capabili"), "capabil" );
	deepEqual( Stem("capacitate"), "capac" );
	deepEqual( Stem("capacitatea"), "capac" );
	deepEqual( Stem("capacităţile"), "capac" );
	deepEqual( Stem("capăt"), "capăt" );
	deepEqual( Stem("capătă"), "capăt" );
	deepEqual( Stem("capătul"), "capăt" );
	deepEqual( Stem("capcana"), "capcan" );
	deepEqual( Stem("capete"), "capet" );
	deepEqual( Stem("capetele"), "capet" );
	deepEqual( Stem("capetelor"), "capet" );
	deepEqual( Stem("capital"), "capital" );
	deepEqual( Stem("capitală"), "capital" );
	deepEqual( Stem("capitale"), "capital" );
	deepEqual( Stem("capitalei"), "capitale" );
	deepEqual( Stem("capitalele"), "capital" );
	deepEqual( Stem("capitalism"), "capitalist" );
	deepEqual( Stem("capitalismului"), "capitalist" );
	deepEqual( Stem("capitalistă"), "capitalist" );
	deepEqual( Stem("capitaliste"), "capitalist" );
	deepEqual( Stem("capitalul"), "capital" );
	deepEqual( Stem("capitalului"), "capital" );
	deepEqual( Stem("capitaluri"), "capitalur" );
	deepEqual( Stem("capitol"), "capitol" );
	deepEqual( Stem("capitole"), "capitol" );
	deepEqual( Stem("capitolul"), "capitol" );
	deepEqual( Stem("capituleze"), "capitul" );
	deepEqual( Stem("capo"), "capo" );
	deepEqual( Stem("capodopere"), "capodop" );
	deepEqual( Stem("caporal"), "caporal" );
	deepEqual( Stem("caporalul"), "caporal" );
	deepEqual( Stem("capră"), "capr" );
	deepEqual( Stem("capre"), "capr" );
	deepEqual( Stem("capriciile"), "capric" );
	deepEqual( Stem("capricioase"), "capric" );
	deepEqual( Stem("capricios"), "capric" );
	deepEqual( Stem("capriciul"), "capric" );
	deepEqual( Stem("capşa"), "capş" );
	deepEqual( Stem("capta"), "capt" );
	deepEqual( Stem("captată"), "captat" );
	deepEqual( Stem("captiv"), "captiv" );
	deepEqual( Stem("captivi"), "captiv" );
	deepEqual( Stem("capturat"), "captur" );
	deepEqual( Stem("capturate"), "captur" );
	deepEqual( Stem("capturând"), "captur" );
	deepEqual( Stem("capul"), "cap" );
	deepEqual( Stem("capului"), "cap" );
	deepEqual( Stem("capural"), "capural" );
	deepEqual( Stem("caracter"), "caracter" );
	deepEqual( Stem("caractere"), "caract" );
	deepEqual( Stem("caracterele"), "caract" );
	deepEqual( Stem("caracteristic"), "caracterist" );
	deepEqual( Stem("caracteristica"), "caracterist" );
	deepEqual( Stem("caracteristică"), "caracterist" );
	deepEqual( Stem("caracteristice"), "caracterist" );
	deepEqual( Stem("caracteristicile"), "caracterist" );
	deepEqual( Stem("caracteriza"), "caracteriz" );
	deepEqual( Stem("caracterizat"), "caracteriz" );
	deepEqual( Stem("caracterizau"), "caracteriz" );
	deepEqual( Stem("caracterizează"), "caracteriz" );
	deepEqual( Stem("caracterul"), "caracter" );
	deepEqual( Stem("caracterului"), "caracter" );
	deepEqual( Stem("carafa"), "caraf" );
	deepEqual( Stem("caraghios"), "caragh" );
	deepEqual( Stem("caraghiosul"), "caragh" );
	deepEqual( Stem("caragiale"), "caragial" );
	deepEqual( Stem("carantină"), "carantin" );
	deepEqual( Stem("carbon"), "carbon" );
	deepEqual( Stem("cardinal"), "cardinal" );
	deepEqual( Stem("care"), "car" );
	deepEqual( Stem("carele"), "car" );
	deepEqual( Stem("carenţă"), "carenţ" );
	deepEqual( Stem("careu"), "careu" );
	deepEqual( Stem("careuri"), "careur" );
	deepEqual( Stem("careurile"), "careur" );
	deepEqual( Stem("cari"), "car" );
	deepEqual( Stem("caricatură"), "caricat" );
	deepEqual( Stem("caricaturist"), "caricaturist" );
	deepEqual( Stem("cariera"), "carier" );
	deepEqual( Stem("carieră"), "carier" );
	deepEqual( Stem("carierei"), "cariere" );
	deepEqual( Stem("caritate"), "caritat" );
	deepEqual( Stem("caritatea"), "caritat" );
	deepEqual( Stem("carl"), "carl" );
	deepEqual( Stem("carnaval"), "carnaval" );
	deepEqual( Stem("carne"), "carn" );
	deepEqual( Stem("carnea"), "carn" );
	deepEqual( Stem("carnet"), "carnet" );
	deepEqual( Stem("carol"), "carol" );
	deepEqual( Stem("carp"), "carp" );
	deepEqual( Stem("carpaţi"), "carp" );
	deepEqual( Stem("carpaţilor"), "carp" );
	deepEqual( Stem("carpen"), "carpen" );
	deepEqual( Stem("carte"), "cart" );
	deepEqual( Stem("cartea"), "cart" );
	deepEqual( Stem("cartezian"), "cartezian" );
	deepEqual( Stem("carteziană"), "cartezian" );
	deepEqual( Stem("carteziene"), "cartezien" );
	deepEqual( Stem("cartier"), "cartier" );
	deepEqual( Stem("cartierele"), "cartier" );
	deepEqual( Stem("cartierul"), "cartier" );
	deepEqual( Stem("cartierului"), "cartier" );
	deepEqual( Stem("cartofi"), "cartof" );
	deepEqual( Stem("carton"), "carton" );
	deepEqual( Stem("cartuş"), "cartuş" );
	deepEqual( Stem("cartuşe"), "cartuş" );
	deepEqual( Stem("cartuşele"), "cartuş" );
	deepEqual( Stem("carului"), "car" );
	deepEqual( Stem("caruso"), "caruso" );
	deepEqual( Stem("casa"), "cas" );
	deepEqual( Stem("casă"), "cas" );
	deepEqual( Stem("case"), "cas" );
	deepEqual( Stem("casei"), "case" );
	deepEqual( Stem("casele"), "cas" );
	deepEqual( Stem("caselor"), "cas" );
	deepEqual( Stem("caseta"), "caset" );
	deepEqual( Stem("casieria"), "casier" );
	deepEqual( Stem("casierul"), "casier" );
	deepEqual( Stem("casnică"), "casnic" );
	deepEqual( Stem("caspică"), "caspic" );
	deepEqual( Stem("casta"), "cast" );
	deepEqual( Stem("castagnetă"), "castagnet" );
	deepEqual( Stem("castani"), "castan" );
	deepEqual( Stem("castanilor"), "castan" );
	deepEqual( Stem("castaniu"), "castaniu" );
	deepEqual( Stem("castă"), "cast" );
	deepEqual( Stem("caste"), "cast" );
	deepEqual( Stem("castel"), "castel" );
	deepEqual( Stem("castraveţi"), "castrav" );
	deepEqual( Stem("castronul"), "castron" );
	deepEqual( Stem("caşcavalul"), "caşcaval" );
	deepEqual( Stem("cataclismală"), "cataclismal" );
	deepEqual( Stem("cataclismului"), "cataclist" );
	deepEqual( Stem("catafalc"), "catafalc" );
	deepEqual( Stem("catalog"), "catalog" );
	deepEqual( Stem("catargiu"), "catargiu" );
	deepEqual( Stem("catastrofa"), "catastrof" );
	deepEqual( Stem("catastrofal"), "catastrofal" );
	deepEqual( Stem("catastrofală"), "catastrofal" );
	deepEqual( Stem("catastrofale"), "catastrofal" );
	deepEqual( Stem("catastrofă"), "catastrof" );
	deepEqual( Stem("catastrofe"), "catastrof" );
	deepEqual( Stem("catastrofei"), "catastrofe" );
	deepEqual( Stem("catastrofele"), "catastrof" );
	deepEqual( Stem("catedrală"), "catedral" );
	deepEqual( Stem("catedră"), "catedr" );
	deepEqual( Stem("categoriale"), "categorial" );
	deepEqual( Stem("categoric"), "categor" );
	deepEqual( Stem("categorică"), "categor" );
	deepEqual( Stem("categorice"), "categor" );
	deepEqual( Stem("categorie"), "categor" );
	deepEqual( Stem("categorii"), "categor" );
	deepEqual( Stem("categoriile"), "categor" );
	deepEqual( Stem("categoriilor"), "categor" );
	deepEqual( Stem("catifelat"), "catifel" );
	deepEqual( Stem("catifelată"), "catifel" );
	deepEqual( Stem("catifelate"), "catifel" );
	deepEqual( Stem("catifelaţi"), "catifel" );
	deepEqual( Stem("catolice"), "catol" );
	deepEqual( Stem("catolicismul"), "catolicist" );
	deepEqual( Stem("cauciuc"), "cauciuc" );
	deepEqual( Stem("cauciucurile"), "cauciucur" );
	deepEqual( Stem("caut"), "caut" );
	deepEqual( Stem("caută"), "caut" );
	deepEqual( Stem("caute"), "caut" );
	deepEqual( Stem("cauţi"), "cauţ" );
	deepEqual( Stem("cauza"), "cauz" );
	deepEqual( Stem("cauzală"), "cauzal" );
	deepEqual( Stem("cauzale"), "cauzal" );
	deepEqual( Stem("cauzalitate"), "cauzal" );
	deepEqual( Stem("cauzalitatea"), "cauzal" );
	deepEqual( Stem("cauzalităţii"), "cauzal" );
	deepEqual( Stem("cauzare"), "cauz" );
	deepEqual( Stem("cauzarea"), "cauz" );
	deepEqual( Stem("cauzată"), "cauzat" );
	deepEqual( Stem("cauzaţie"), "cauz" );
	deepEqual( Stem("cauză"), "cauz" );
	deepEqual( Stem("cauze"), "cauz" );
	deepEqual( Stem("cauzează"), "cauz" );
	deepEqual( Stem("cauzei"), "cauze" );
	deepEqual( Stem("cauzele"), "cauz" );
	deepEqual( Stem("cauzelor"), "cauz" );
	deepEqual( Stem("cavalerie"), "cavaler" );
	deepEqual( Stem("cavou"), "cavou" );
	deepEqual( Stem("caz"), "caz" );
	deepEqual( Stem("cazan"), "cazan" );
	deepEqual( Stem("cazania"), "cazan" );
	deepEqual( Stem("cazarma"), "cazarm" );
	deepEqual( Stem("cazarmă"), "cazarm" );
	deepEqual( Stem("cazărmi"), "cazărm" );
	deepEqual( Stem("cazărmii"), "cazărm" );
	deepEqual( Stem("cazul"), "caz" );
	deepEqual( Stem("cazului"), "caz" );
	deepEqual( Stem("cazuri"), "cazur" );
	deepEqual( Stem("cazurile"), "cazur" );
	deepEqual( Stem("cazurilor"), "cazur" );
	deepEqual( Stem("câine"), "câin" );
	deepEqual( Stem("câinele"), "câin" );
	deepEqual( Stem("câini"), "câin" );
	deepEqual( Stem("câlţi"), "câlţ" );
	deepEqual( Stem("câmp"), "câmp" );
	deepEqual( Stem("câmpia"), "câmp" );
	deepEqual( Stem("câmpie"), "câmp" );
	deepEqual( Stem("câmpul"), "câmp" );
	deepEqual( Stem("câmpului"), "câmp" );
	deepEqual( Stem("câmpulung"), "câmpulung" );
	deepEqual( Stem("câmpulungului"), "câmpulung" );
	deepEqual( Stem("câmpurile"), "câmpur" );
	deepEqual( Stem("când"), "când" );
	deepEqual( Stem("cândva"), "cândv" );
	deepEqual( Stem("cânta"), "cânt" );
	deepEqual( Stem("cântar"), "cântar" );
	deepEqual( Stem("cântat"), "cântat" );
	deepEqual( Stem("cântă"), "cânt" );
	deepEqual( Stem("cântărea"), "cântăr" );
	deepEqual( Stem("cântăresc"), "cântăr" );
	deepEqual( Stem("cântăreţ"), "cântăreţ" );
	deepEqual( Stem("cântăreţi"), "cântăr" );
	deepEqual( Stem("cântăreţii"), "cântăr" );
	deepEqual( Stem("cântăreţul"), "cântăreţ" );
	deepEqual( Stem("cânte"), "cânt" );
	deepEqual( Stem("cântec"), "cântec" );
	deepEqual( Stem("cântece"), "cântec" );
	deepEqual( Stem("cântecele"), "cântec" );
	deepEqual( Stem("cântecul"), "cântec" );
	deepEqual( Stem("cântecului"), "cântec" );
	deepEqual( Stem("cârciuma"), "cârcium" );
	deepEqual( Stem("cârciumar"), "cârciumar" );
	deepEqual( Stem("cârciumari"), "cârciumar" );
	deepEqual( Stem("cârciumă"), "cârcium" );
	deepEqual( Stem("cârciumile"), "cârcium" );
	deepEqual( Stem("cârd"), "cârd" );
	deepEqual( Stem("cârduri"), "cârdur" );
	deepEqual( Stem("cârnatul"), "cârnat" );
	deepEqual( Stem("cârnaţi"), "cârn" );
	deepEqual( Stem("cârnă"), "cârn" );
	deepEqual( Stem("cârpă"), "cârp" );
	deepEqual( Stem("cârpit"), "cârpit" );
	deepEqual( Stem("câştig"), "câştig" );
	deepEqual( Stem("câştiga"), "câştig" );
	deepEqual( Stem("câştigam"), "câştig" );
	deepEqual( Stem("câştigat"), "câştig" );
	deepEqual( Stem("câştigată"), "câştig" );
	deepEqual( Stem("câştigate"), "câştig" );
	deepEqual( Stem("câştigaţi"), "câştig" );
	deepEqual( Stem("câştigând"), "câştig" );
	deepEqual( Stem("câştigă"), "câştig" );
	deepEqual( Stem("câştigăm"), "câştig" );
	deepEqual( Stem("câştige"), "câştig" );
	deepEqual( Stem("câştigi"), "câştig" );
	deepEqual( Stem("cât"), "cât" );
	deepEqual( Stem("câtă"), "cât" );
	deepEqual( Stem("câtăva"), "câtăv" );
	deepEqual( Stem("câte"), "cât" );
	deepEqual( Stem("câtelea"), "câtel" );
	deepEqual( Stem("câteodată"), "câteod" );
	deepEqual( Stem("câteva"), "câtev" );
	deepEqual( Stem("câtorva"), "câtorv" );
	deepEqual( Stem("câtva"), "câtv" );
	deepEqual( Stem("câţi"), "câţ" );
	deepEqual( Stem("câţiva"), "câţiv" );
	deepEqual( Stem("că"), "că" );
	deepEqual( Stem("căci"), "căc" );
	deepEqual( Stem("căciula"), "căciul" );
	deepEqual( Stem("căciulă"), "căciul" );
	deepEqual( Stem("cădea"), "căd" );
	deepEqual( Stem("cădeam"), "cădeam" );
	deepEqual( Stem("cădeau"), "cădeau" );
	deepEqual( Stem("cădem"), "căd" );
	deepEqual( Stem("cădere"), "căder" );
	deepEqual( Stem("căderea"), "căder" );
	deepEqual( Stem("căi"), "căi" );
	deepEqual( Stem("căile"), "căil" );
	deepEqual( Stem("călare"), "călar" );
	deepEqual( Stem("călăreţ"), "călăreţ" );
	deepEqual( Stem("călăreţi"), "călăr" );
	deepEqual( Stem("călăreţul"), "călăreţ" );
	deepEqual( Stem("călări"), "călăr" );
	deepEqual( Stem("călărie"), "călăr" );
	deepEqual( Stem("călător"), "călat" );
	deepEqual( Stem("călătoreşte"), "călător" );
	deepEqual( Stem("călători"), "călat" );
	deepEqual( Stem("călătoria"), "călător" );
	deepEqual( Stem("călătorie"), "călător" );
	deepEqual( Stem("călătorii"), "călat" );
	deepEqual( Stem("călătorit"), "călător" );
	deepEqual( Stem("călătorul"), "călat" );
	deepEqual( Stem("călău"), "călău" );
	deepEqual( Stem("călăuza"), "călăuz" );
	deepEqual( Stem("călăuză"), "călăuz" );
	deepEqual( Stem("călăuzească"), "călăuz" );
	deepEqual( Stem("călăuzit"), "călăuz" );
	deepEqual( Stem("călăuzită"), "călăuz" );
	deepEqual( Stem("călăuzitoare"), "călăuz" );
	deepEqual( Stem("călăuziţi"), "călăuz" );
	deepEqual( Stem("călca"), "călc" );
	deepEqual( Stem("călcam"), "călc" );
	deepEqual( Stem("călcase"), "călc" );
	deepEqual( Stem("călcat"), "călcat" );
	deepEqual( Stem("călcaţi"), "călc" );
	deepEqual( Stem("călcâi"), "călc" );
	deepEqual( Stem("călcâie"), "călcâi" );
	deepEqual( Stem("călcâile"), "călc" );
	deepEqual( Stem("călcăm"), "călc" );
	deepEqual( Stem("călcător"), "călcat" );
	deepEqual( Stem("călcîi"), "călcî" );
	deepEqual( Stem("călcînd"), "călcînd" );
	deepEqual( Stem("căldare"), "căld" );
	deepEqual( Stem("căldarea"), "căld" );
	deepEqual( Stem("căldăruşe"), "căldăruş" );
	deepEqual( Stem("căldura"), "căldur" );
	deepEqual( Stem("căldură"), "căld" );
	deepEqual( Stem("călduroase"), "căldur" );
	deepEqual( Stem("călduţ"), "călduţ" );
	deepEqual( Stem("călugăr"), "călugăr" );
	deepEqual( Stem("călugărească"), "călugăr" );
	deepEqual( Stem("călugăreni"), "călugăren" );
	deepEqual( Stem("căluşei"), "căluşe" );
	deepEqual( Stem("cămaşa"), "cămaş" );
	deepEqual( Stem("cămaşă"), "cămaş" );
	deepEqual( Stem("cămăşi"), "cămăş" );
	deepEqual( Stem("cămăşuţa"), "cămăşuţ" );
	deepEqual( Stem("cămăşuţă"), "cămăşuţ" );
	deepEqual( Stem("căngi"), "căng" );
	deepEqual( Stem("căpătase"), "căpăt" );
	deepEqual( Stem("căpătat"), "căpăt" );
	deepEqual( Stem("căpătâi"), "căpăt" );
	deepEqual( Stem("căpătâiul"), "căpătâi" );
	deepEqual( Stem("căpătăm"), "căpăt" );
	deepEqual( Stem("căpitan"), "căpitan" );
	deepEqual( Stem("căpitanii"), "căpitan" );
	deepEqual( Stem("căpitanilor"), "căpitan" );
	deepEqual( Stem("căpitanul"), "căpitan" );
	deepEqual( Stem("căpitanului"), "căpitan" );
	deepEqual( Stem("căpiţă"), "căpiţ" );
	deepEqual( Stem("căpiţe"), "căpiţ" );
	deepEqual( Stem("căpiţele"), "căpiţ" );
	deepEqual( Stem("căprioară"), "căprioar" );
	deepEqual( Stem("căprui"), "căpr" );
	deepEqual( Stem("căptuşit"), "căptuş" );
	deepEqual( Stem("căptuşită"), "căptuş" );
	deepEqual( Stem("căptuşite"), "căptuş" );
	deepEqual( Stem("căra"), "căr" );
	deepEqual( Stem("căratului"), "cărat" );
	deepEqual( Stem("cărămizii"), "cărămiz" );
	deepEqual( Stem("cărăruie"), "cărărui" );
	deepEqual( Stem("cărbunele"), "cărbun" );
	deepEqual( Stem("cărei"), "căre" );
	deepEqual( Stem("căreia"), "cărei" );
	deepEqual( Stem("cărnii"), "cărn" );
	deepEqual( Stem("cărnoase"), "cărnoas" );
	deepEqual( Stem("căror"), "căror" );
	deepEqual( Stem("cărora"), "căror" );
	deepEqual( Stem("cărturar"), "cărturar" );
	deepEqual( Stem("cărturari"), "cărturar" );
	deepEqual( Stem("cărturarii"), "cărturar" );
	deepEqual( Stem("cărturarului"), "cărturar" );
	deepEqual( Stem("cărţi"), "cărţ" );
	deepEqual( Stem("cărţile"), "cărţ" );
	deepEqual( Stem("cărţulii"), "cărţul" );
	deepEqual( Stem("cărui"), "căru" );
	deepEqual( Stem("căruia"), "cărui" );
	deepEqual( Stem("cărunt"), "cărunt" );
	deepEqual( Stem("căruntă"), "cărunt" );
	deepEqual( Stem("căruţa"), "căruţ" );
	deepEqual( Stem("căruţă"), "căruţ" );
	deepEqual( Stem("căruţe"), "căruţ" );
	deepEqual( Stem("căruţele"), "căruţ" );
	deepEqual( Stem("căsătoria"), "căsător" );
	deepEqual( Stem("căsătoriei"), "căsat" );
	deepEqual( Stem("căsătorit"), "căsător" );
	deepEqual( Stem("căsătoriţi"), "căsător" );
	deepEqual( Stem("căscat"), "căscat" );
	deepEqual( Stem("căscată"), "căscat" );
	deepEqual( Stem("căsnicia"), "căsnic" );
	deepEqual( Stem("căsnicie"), "căsnic" );
	deepEqual( Stem("căsniciei"), "căsnic" );
	deepEqual( Stem("căsuţa"), "căsuţ" );
	deepEqual( Stem("căsuţe"), "căsuţ" );
	deepEqual( Stem("cătră"), "cătr" );
	deepEqual( Stem("către"), "cătr" );
	deepEqual( Stem("cătun"), "cătun" );
	deepEqual( Stem("cătunele"), "cătun" );
	deepEqual( Stem("cătunul"), "cătun" );
	deepEqual( Stem("cătunului"), "cătun" );
	deepEqual( Stem("cătuşe"), "cătuş" );
	deepEqual( Stem("căţărată"), "căţăr" );
	deepEqual( Stem("căţăraţi"), "căţăr" );
	deepEqual( Stem("căţeluş"), "căţeluş" );
	deepEqual( Stem("căuta"), "căut" );
	deepEqual( Stem("căutai"), "căut" );
	deepEqual( Stem("căutam"), "căut" );
	deepEqual( Stem("căutasem"), "căut" );
	deepEqual( Stem("căutat"), "căutat" );
	deepEqual( Stem("căutata"), "căutat" );
	deepEqual( Stem("căutate"), "căutat" );
	deepEqual( Stem("căutaţi"), "căut" );
	deepEqual( Stem("căutau"), "căut" );
	deepEqual( Stem("căutând"), "căut" );
	deepEqual( Stem("căutându"), "căut" );
	deepEqual( Stem("căutăm"), "căut" );
	deepEqual( Stem("căzând"), "căzând" );
	deepEqual( Stem("căzându"), "căzându" );
	deepEqual( Stem("căzuse"), "căzus" );
	deepEqual( Stem("căzut"), "căzut" );
	deepEqual( Stem("căzută"), "căzut" );
	deepEqual( Stem("căzute"), "căzut" );
	deepEqual( Stem("căzuţi"), "căzuţ" );
	deepEqual( Stem("ce"), "ce" );
	deepEqual( Stem("cea"), "cea" );
	deepEqual( Stem("ceafă"), "ceaf" );
	deepEqual( Stem("ceai"), "cea" );
	deepEqual( Stem("ceaiului"), "ceai" );
	deepEqual( Stem("cealaltă"), "cealalt" );
	deepEqual( Stem("ceară"), "cear" );
	deepEqual( Stem("cearnă"), "cearn" );
	deepEqual( Stem("cearşaf"), "cearşaf" );
	deepEqual( Stem("cearşaful"), "cearşaf" );
	deepEqual( Stem("cearşafuri"), "cearşafur" );
	deepEqual( Stem("cearşafurilor"), "cearşafur" );
	deepEqual( Stem("cearta"), "ceart" );
	deepEqual( Stem("ceartă"), "ceart" );
	deepEqual( Stem("ceas"), "ceas" );
	deepEqual( Stem("ceasornic"), "ceasorn" );
	deepEqual( Stem("ceasornicul"), "ceasorn" );
	deepEqual( Stem("ceasornicului"), "ceasorn" );
	deepEqual( Stem("ceasul"), "ceas" );
	deepEqual( Stem("ceasuri"), "ceasur" );
	deepEqual( Stem("ceaţă"), "ceaţ" );
	deepEqual( Stem("cec"), "cec" );
	deepEqual( Stem("cecul"), "cec" );
	deepEqual( Stem("cecuri"), "cecur" );
	deepEqual( Stem("cecurile"), "cecur" );
	deepEqual( Stem("ceda"), "ced" );
	deepEqual( Stem("cedat"), "cedat" );
	deepEqual( Stem("cedezi"), "cedez" );
	deepEqual( Stem("cedrilor"), "cedr" );
	deepEqual( Stem("ceea"), "cee" );
	deepEqual( Stem("ceferistul"), "ceferist" );
	deepEqual( Stem("cehoslovacii"), "cehoslovac" );
	deepEqual( Stem("cei"), "cei" );
	deepEqual( Stem("ceilalţi"), "ceilalţ" );
	deepEqual( Stem("cel"), "cel" );
	deepEqual( Stem("celălalt"), "celălalt" );
	deepEqual( Stem("cele"), "cel" );
	deepEqual( Stem("celebra"), "celebr" );
	deepEqual( Stem("celebră"), "celebr" );
	deepEqual( Stem("celebre"), "celebr" );
	deepEqual( Stem("celebri"), "celebr" );
	deepEqual( Stem("celebru"), "celebru" );
	deepEqual( Stem("celebrul"), "celebr" );
	deepEqual( Stem("celebrului"), "celebr" );
	deepEqual( Stem("celei"), "cele" );
	deepEqual( Stem("celeilalte"), "celeilalt" );
	deepEqual( Stem("celelalte"), "celelalt" );
	deepEqual( Stem("celelate"), "celel" );
	deepEqual( Stem("celor"), "celor" );
	deepEqual( Stem("celorlalte"), "celorlalt" );
	deepEqual( Stem("celorlalţi"), "celorlalţ" );
	deepEqual( Stem("celui"), "celu" );
	deepEqual( Stem("celuilalt"), "celuilalt" );
	deepEqual( Stem("celulară"), "celul" );
	deepEqual( Stem("celule"), "celul" );
	deepEqual( Stem("celulele"), "celul" );
	deepEqual( Stem("central"), "central" );
	deepEqual( Stem("centrala"), "central" );
	deepEqual( Stem("centrală"), "central" );
	deepEqual( Stem("centrale"), "central" );
	deepEqual( Stem("centralei"), "centrale" );
	deepEqual( Stem("centru"), "centru" );
	deepEqual( Stem("centrul"), "centr" );
	deepEqual( Stem("cenuşă"), "cenuş" );
	deepEqual( Stem("cenuşie"), "cenuş" );
	deepEqual( Stem("cenuşii"), "cenuş" );
	deepEqual( Stem("cenuşiu"), "cenuşiu" );
	deepEqual( Stem("cenzură"), "cenz" );
	deepEqual( Stem("cer"), "cer" );
	deepEqual( Stem("cerând"), "cerând" );
	deepEqual( Stem("cerându"), "cerându" );
	deepEqual( Stem("cerbii"), "cerb" );
	deepEqual( Stem("cerc"), "cerc" );
	deepEqual( Stem("cercetare"), "cercet" );
	deepEqual( Stem("cercetarea"), "cercet" );
	deepEqual( Stem("cercetat"), "cercet" );
	deepEqual( Stem("cercetată"), "cercet" );
	deepEqual( Stem("cercetate"), "cercet" );
	deepEqual( Stem("cercetându"), "cercet" );
	deepEqual( Stem("cercetăm"), "cercet" );
	deepEqual( Stem("cercetări"), "cercetăr" );
	deepEqual( Stem("cercetările"), "cercetăr" );
	deepEqual( Stem("cercetărilor"), "cercetăr" );
	deepEqual( Stem("cercetător"), "cercet" );
	deepEqual( Stem("cercetători"), "cercet" );
	deepEqual( Stem("cercetătorilor"), "cercet" );
	deepEqual( Stem("cercetătorului"), "cercet" );
	deepEqual( Stem("cercetează"), "cercet" );
	deepEqual( Stem("cercetez"), "cercet" );
	deepEqual( Stem("cerceteze"), "cercet" );
	deepEqual( Stem("cercetezi"), "cercet" );
	deepEqual( Stem("cercul"), "cerc" );
	deepEqual( Stem("cercului"), "cerc" );
	deepEqual( Stem("cercuri"), "cercur" );
	deepEqual( Stem("cercurile"), "cercur" );
	deepEqual( Stem("cerdac"), "cerdac" );
	deepEqual( Stem("cerdacul"), "cerdac" );
	deepEqual( Stem("cere"), "cer" );
	deepEqual( Stem("cerea"), "cer" );
	deepEqual( Stem("ceream"), "ceream" );
	deepEqual( Stem("cerească"), "cereasc" );
	deepEqual( Stem("cereau"), "cereau" );
	deepEqual( Stem("cerebrală"), "cerebral" );
	deepEqual( Stem("cererea"), "cerer" );
	deepEqual( Stem("cererile"), "cerer" );
	deepEqual( Stem("ceri"), "cer" );
	deepEqual( Stem("cerinţele"), "cerinţ" );
	deepEqual( Stem("cerneală"), "cerneal" );
	deepEqual( Stem("cernii"), "cern" );
	deepEqual( Stem("cerşetori"), "cerşetor" );
	deepEqual( Stem("cert"), "cert" );
	deepEqual( Stem("certa"), "cert" );
	deepEqual( Stem("certase"), "cert" );
	deepEqual( Stem("certat"), "certat" );
	deepEqual( Stem("certată"), "certat" );
	deepEqual( Stem("certaţi"), "cert" );
	deepEqual( Stem("certându"), "cert" );
	deepEqual( Stem("certă"), "cert" );
	deepEqual( Stem("certitudine"), "certitudin" );
	deepEqual( Stem("certitudinea"), "certitudin" );
	deepEqual( Stem("certitudinii"), "certitudin" );
	deepEqual( Stem("certuri"), "certur" );
	deepEqual( Stem("certurile"), "certur" );
	deepEqual( Stem("cerţi"), "cerţ" );
	deepEqual( Stem("cerul"), "cer" );
	deepEqual( Stem("cerului"), "cer" );
	deepEqual( Stem("ceruse"), "cerus" );
	deepEqual( Stem("cerusem"), "cerusem" );
	deepEqual( Stem("cerut"), "cerut" );
	deepEqual( Stem("cerută"), "cerut" );
	deepEqual( Stem("cerute"), "cerut" );
	deepEqual( Stem("ceruţi"), "ceruţ" );
	deepEqual( Stem("cestiune"), "cestiun" );
	deepEqual( Stem("cestiunea"), "cestiun" );
	deepEqual( Stem("cestiuni"), "cestiun" );
	deepEqual( Stem("cestiunii"), "cestiun" );
	deepEqual( Stem("cestiunile"), "cestiun" );
	deepEqual( Stem("cetate"), "cetat" );
	deepEqual( Stem("cetatea"), "cetat" );
	deepEqual( Stem("cetăţeni"), "cetăţen" );
	deepEqual( Stem("cetăţenii"), "cetăţen" );
	deepEqual( Stem("cetăţenilor"), "cetăţen" );
	deepEqual( Stem("cetăţi"), "cetăţ" );
	deepEqual( Stem("cetăţii"), "cetăţ" );
	deepEqual( Stem("ceteam"), "ceteam" );
	deepEqual( Stem("cetească"), "ceteasc" );
	deepEqual( Stem("ceteau"), "ceteau" );
	deepEqual( Stem("ceteraş"), "ceteraş" );
	deepEqual( Stem("ceteşte"), "ceteşt" );
	deepEqual( Stem("cetirea"), "cetir" );
	deepEqual( Stem("cetise"), "cetis" );
	deepEqual( Stem("cetit"), "cetit" );
	deepEqual( Stem("cetitor"), "cetit" );
	deepEqual( Stem("cetitori"), "cetit" );
	deepEqual( Stem("cetitorii"), "cetit" );
	deepEqual( Stem("cetitorilor"), "cetit" );
	deepEqual( Stem("cetitorul"), "cetit" );
	deepEqual( Stem("cetitorule"), "cetitorul" );
	deepEqual( Stem("cetitorului"), "cetit" );
	deepEqual( Stem("cetitul"), "cetit" );
	deepEqual( Stem("cetitului"), "cetit" );
	deepEqual( Stem("ceva"), "cev" );
	deepEqual( Stem("cezar"), "cezar" );
	deepEqual( Stem("charles"), "charles" );
	deepEqual( Stem("cheag"), "cheag" );
	deepEqual( Stem("cheală"), "cheal" );
	deepEqual( Stem("cheamă"), "cheam" );
	deepEqual( Stem("chef"), "chef" );
	deepEqual( Stem("cheferistă"), "cheferist" );
	deepEqual( Stem("cheflii"), "chefl" );
	deepEqual( Stem("chefliilor"), "chefl" );
	deepEqual( Stem("chefliu"), "chefliu" );
	deepEqual( Stem("cheful"), "chef" );
	deepEqual( Stem("chefului"), "chef" );
	deepEqual( Stem("chefurile"), "chefur" );
	deepEqual( Stem("chei"), "che" );
	deepEqual( Stem("cheia"), "chei" );
	deepEqual( Stem("cheile"), "cheil" );
	deepEqual( Stem("chelie"), "chel" );
	deepEqual( Stem("chelner"), "chelner" );
	deepEqual( Stem("chelneri"), "chelner" );
	deepEqual( Stem("chelnerilor"), "chelner" );
	deepEqual( Stem("chelnerul"), "chelner" );
	deepEqual( Stem("cheltui"), "chelt" );
	deepEqual( Stem("cheltuia"), "cheltui" );
	deepEqual( Stem("cheltuiala"), "cheltuial" );
	deepEqual( Stem("cheltuiască"), "cheltuiasc" );
	deepEqual( Stem("cheltuielile"), "cheltuiel" );
	deepEqual( Stem("cheltuielilor"), "cheltuiel" );
	deepEqual( Stem("chem"), "chem" );
	deepEqual( Stem("chema"), "chem" );
	deepEqual( Stem("chemare"), "chem" );
	deepEqual( Stem("chemarea"), "chem" );
	deepEqual( Stem("chemase"), "chem" );
	deepEqual( Stem("chemat"), "chemat" );
	deepEqual( Stem("chemată"), "chemat" );
	deepEqual( Stem("chemate"), "chemat" );
	deepEqual( Stem("chemaţi"), "chem" );
	deepEqual( Stem("chemau"), "chem" );
	deepEqual( Stem("chemând"), "chem" );
	deepEqual( Stem("chemă"), "chem" );
	deepEqual( Stem("cheme"), "chem" );
	deepEqual( Stem("chemin"), "chemin" );
	deepEqual( Stem("chesoane"), "chesoan" );
	deepEqual( Stem("chesoanele"), "chesoan" );
	deepEqual( Stem("cheson"), "cheson" );
	deepEqual( Stem("chestia"), "chest" );
	deepEqual( Stem("chestie"), "chest" );
	deepEqual( Stem("chestii"), "chest" );
	deepEqual( Stem("chestiile"), "chest" );
	deepEqual( Stem("chestiune"), "chestiun" );
	deepEqual( Stem("chestiunea"), "chestiun" );
	deepEqual( Stem("chestiuni"), "chestiun" );
	deepEqual( Stem("chestiunii"), "chestiun" );
	deepEqual( Stem("chiar"), "chiar" );
	deepEqual( Stem("chibiţ"), "chibiţ" );
	deepEqual( Stem("chibrit"), "chibrit" );
	deepEqual( Stem("chibritul"), "chibrit" );
	deepEqual( Stem("chibritului"), "chibrit" );
	deepEqual( Stem("chibzuială"), "chibzuial" );
	deepEqual( Stem("chibzuinţă"), "chibzuinţ" );
	deepEqual( Stem("chica"), "chic" );
	deepEqual( Stem("chiftele"), "chift" );
	deepEqual( Stem("chifteluţe"), "chifteluţ" );
	deepEqual( Stem("chiftesc"), "chift" );
	deepEqual( Stem("chihlimbarului"), "chihlimbar" );
	deepEqual( Stem("chilă"), "chil" );
	deepEqual( Stem("chile"), "chil" );
	deepEqual( Stem("chilia"), "chil" );
	deepEqual( Stem("chilioară"), "chilioar" );
	deepEqual( Stem("chilipir"), "chilipir" );
	deepEqual( Stem("chiloţi"), "chiloţ" );
	deepEqual( Stem("chimia"), "chim" );
	deepEqual( Stem("chimic"), "chimic" );
	deepEqual( Stem("chimicală"), "chimic" );
	deepEqual( Stem("chimică"), "chimic" );
	deepEqual( Stem("chimice"), "chimic" );
	deepEqual( Stem("chimie"), "chim" );
	deepEqual( Stem("chimiştii"), "chimişt" );
	deepEqual( Stem("chin"), "chin" );
	deepEqual( Stem("china"), "chin" );
	deepEqual( Stem("chinei"), "chine" );
	deepEqual( Stem("chinejii"), "chinej" );
	deepEqual( Stem("chinez"), "chin" );
	deepEqual( Stem("chineză"), "chinez" );
	deepEqual( Stem("chinezească"), "chinez" );
	deepEqual( Stem("chinezesc"), "chinez" );
	deepEqual( Stem("chinezeşte"), "chinez" );
	deepEqual( Stem("chinezoaică"), "chinezo" );
	deepEqual( Stem("chintesenţă"), "chintesenţ" );
	deepEqual( Stem("chintesenţial"), "chintesenţial" );
	deepEqual( Stem("chinui"), "chin" );
	deepEqual( Stem("chinuială"), "chinuial" );
	deepEqual( Stem("chinuiam"), "chinui" );
	deepEqual( Stem("chinuiască"), "chinuiasc" );
	deepEqual( Stem("chinuie"), "chinui" );
	deepEqual( Stem("chinuiesc"), "chinui" );
	deepEqual( Stem("chinuieşte"), "chinui" );
	deepEqual( Stem("chinuim"), "chinu" );
	deepEqual( Stem("chinuind"), "chinu" );
	deepEqual( Stem("chinuindu"), "chinu" );
	deepEqual( Stem("chinuit"), "chinuit" );
	deepEqual( Stem("chinuită"), "chinuit" );
	deepEqual( Stem("chinuitoare"), "chinuit" );
	deepEqual( Stem("chinuitoarei"), "chinuitoare" );
	deepEqual( Stem("chinuitor"), "chinuit" );
	deepEqual( Stem("chinuiţi"), "chinu" );
	deepEqual( Stem("chinul"), "chin" );
	deepEqual( Stem("chinuri"), "chinur" );
	deepEqual( Stem("chinurile"), "chinur" );
	deepEqual( Stem("chioară"), "chioar" );
	deepEqual( Stem("chioare"), "chioar" );
	deepEqual( Stem("chiolhan"), "chiolhan" );
	deepEqual( Stem("chior"), "chior" );
	deepEqual( Stem("chiorîş"), "chiorîş" );
	deepEqual( Stem("chioşc"), "chioşc" );
	deepEqual( Stem("chioşcul"), "chioşc" );
	deepEqual( Stem("chioşcului"), "chioşc" );
	deepEqual( Stem("chioşcuri"), "chioşcur" );
	deepEqual( Stem("chiot"), "chiot" );
	deepEqual( Stem("chip"), "chip" );
	deepEqual( Stem("chipeş"), "chipeş" );
	deepEqual( Stem("chipiu"), "chipiu" );
	deepEqual( Stem("chipiul"), "chip" );
	deepEqual( Stem("chipul"), "chip" );
	deepEqual( Stem("chipuri"), "chipur" );
	deepEqual( Stem("chipurile"), "chipur" );
	deepEqual( Stem("chircesc"), "chirc" );
	deepEqual( Stem("chiria"), "chir" );
	deepEqual( Stem("chiriaş"), "chiriaş" );
	deepEqual( Stem("chiriaşi"), "chiriaş" );
	deepEqual( Stem("chiriaşilor"), "chiriaş" );
	deepEqual( Stem("chiriile"), "chir" );
	deepEqual( Stem("chiromanţi"), "chiromanţ" );
	deepEqual( Stem("chiromanţie"), "chiromanţ" );
	deepEqual( Stem("chirpici"), "chirpic" );
	deepEqual( Stem("chirurgi"), "chirurg" );
	deepEqual( Stem("chirurgicală"), "chirurg" );
	deepEqual( Stem("chirurgicale"), "chirurg" );
	deepEqual( Stem("chirurgie"), "chirurg" );
	deepEqual( Stem("chirurgul"), "chirurg" );
	deepEqual( Stem("chiseliţă"), "chiseliţ" );
	deepEqual( Stem("chişinău"), "chişinău" );
	deepEqual( Stem("chiştoc"), "chiştoc" );
	deepEqual( Stem("chit"), "chit" );
	deepEqual( Stem("chitară"), "chit" );
	deepEqual( Stem("chiţibuşare"), "chiţibuş" );
	deepEqual( Stem("chiu"), "chiu" );
	deepEqual( Stem("chiuie"), "chiu" );
	deepEqual( Stem("chivere"), "chiv" );
	deepEqual( Stem("chuliatikov"), "chuliatikov" );
	deepEqual( Stem("chvolson"), "chvolson" );
	deepEqual( Stem("ci"), "ci" );
	deepEqual( Stem("cicatrice"), "cicatr" );
	deepEqual( Stem("cicatricea"), "cicatr" );
	deepEqual( Stem("cicatrizează"), "cicatriz" );
	deepEqual( Stem("cică"), "cic" );
	deepEqual( Stem("cicăleală"), "cicăleal" );
	deepEqual( Stem("ciclu"), "ciclu" );
	deepEqual( Stem("cifra"), "cifr" );
	deepEqual( Stem("cifră"), "cifr" );
	deepEqual( Stem("cifre"), "cifr" );
	deepEqual( Stem("cifrează"), "cifr" );
	deepEqual( Stem("cifrei"), "cifre" );
	deepEqual( Stem("cifrelor"), "cifr" );
	deepEqual( Stem("cifru"), "cifru" );
	deepEqual( Stem("cifrul"), "cifr" );
	deepEqual( Stem("cifruri"), "cifrur" );
	deepEqual( Stem("cilindri"), "cilindr" );
	deepEqual( Stem("cilindrice"), "cilindr" );
	deepEqual( Stem("cilindru"), "cilindru" );
	deepEqual( Stem("ciment"), "ciment" );
	deepEqual( Stem("cimentate"), "ciment" );
	deepEqual( Stem("cimitir"), "cimitir" );
	deepEqual( Stem("cimitire"), "cimit" );
	deepEqual( Stem("cimitirelor"), "cimit" );
	deepEqual( Stem("cimitirul"), "cimitir" );
	deepEqual( Stem("cina"), "cin" );
	deepEqual( Stem("cină"), "cin" );
	deepEqual( Stem("cincea"), "cinc" );
	deepEqual( Stem("cinci"), "cinc" );
	deepEqual( Stem("cincilea"), "cincil" );
	deepEqual( Stem("cincinal"), "cincinal" );
	deepEqual( Stem("cincisprezece"), "cincisprezec" );
	deepEqual( Stem("cincisprezecelea"), "cincisprezecel" );
	deepEqual( Stem("cincizeci"), "cincizec" );
	deepEqual( Stem("cine"), "cin" );
	deepEqual( Stem("cinele"), "cin" );
	deepEqual( Stem("cinetică"), "cinet" );
	deepEqual( Stem("cineva"), "cinev" );
	deepEqual( Stem("cinste"), "cinst" );
	deepEqual( Stem("cinstea"), "cinst" );
	deepEqual( Stem("cinstit"), "cinstit" );
	deepEqual( Stem("cinstite"), "cinstit" );
	deepEqual( Stem("cinstiţi"), "cinst" );
	deepEqual( Stem("cinzano"), "cinzano" );
	deepEqual( Stem("cioban"), "cioban" );
	deepEqual( Stem("ciobani"), "cioban" );
	deepEqual( Stem("ciobanii"), "cioban" );
	deepEqual( Stem("cioburi"), "ciobur" );
	deepEqual( Stem("cioc"), "cioc" );
	deepEqual( Stem("ciocan"), "ciocan" );
	deepEqual( Stem("ciocane"), "ciocan" );
	deepEqual( Stem("ciocanul"), "ciocan" );
	deepEqual( Stem("ciocneau"), "ciocn" );
	deepEqual( Stem("ciocnesc"), "ciocn" );
	deepEqual( Stem("ciocni"), "ciocn" );
	deepEqual( Stem("ciocnim"), "ciocn" );
	deepEqual( Stem("ciocnind"), "ciocn" );
	deepEqual( Stem("ciocnire"), "ciocn" );
	deepEqual( Stem("ciocniri"), "ciocnir" );
	deepEqual( Stem("ciocnirile"), "ciocnir" );
	deepEqual( Stem("ciocnit"), "ciocnit" );
	deepEqual( Stem("ciocnite"), "ciocnit" );
	deepEqual( Stem("ciocolată"), "ciocol" );
	deepEqual( Stem("ciomege"), "ciomeg" );
	deepEqual( Stem("ciorapi"), "ciorap" );
	deepEqual( Stem("ciorapii"), "ciorap" );
	deepEqual( Stem("ciorapul"), "ciorap" );
	deepEqual( Stem("ciorbagiu"), "ciorbagiu" );
	deepEqual( Stem("ciornoiesotnik"), "ciornoiesotnik" );
	deepEqual( Stem("circ"), "circ" );
	deepEqual( Stem("circomflexe"), "circomflex" );
	deepEqual( Stem("circuit"), "circuit" );
	deepEqual( Stem("circuitul"), "circuit" );
	deepEqual( Stem("circulare"), "circul" );
	deepEqual( Stem("circulaţia"), "circul" );
	deepEqual( Stem("circulaţie"), "circul" );
	deepEqual( Stem("circulau"), "circul" );
	deepEqual( Stem("circulă"), "circul" );
	deepEqual( Stem("cireş"), "cireş" );
	deepEqual( Stem("ciripeşte"), "cirip" );
	deepEqual( Stem("cita"), "cit" );
	deepEqual( Stem("citea"), "cit" );
	deepEqual( Stem("citeam"), "citeam" );
	deepEqual( Stem("citească"), "citeasc" );
	deepEqual( Stem("citeau"), "citeau" );
	deepEqual( Stem("citează"), "citeaz" );
	deepEqual( Stem("citesc"), "citesc" );
	deepEqual( Stem("citeşte"), "citeşt" );
	deepEqual( Stem("citez"), "citez" );
	deepEqual( Stem("citi"), "cit" );
	deepEqual( Stem("citim"), "cit" );
	deepEqual( Stem("citind"), "citind" );
	deepEqual( Stem("citire"), "citir" );
	deepEqual( Stem("citit"), "citit" );
	deepEqual( Stem("citite"), "citit" );
	deepEqual( Stem("cititori"), "citit" );
	deepEqual( Stem("cititorii"), "citit" );
	deepEqual( Stem("cititorilor"), "citit" );
	deepEqual( Stem("cititului"), "citit" );
	deepEqual( Stem("citiţi"), "cit" );
	deepEqual( Stem("ciucalată"), "ciucal" );
	deepEqual( Stem("ciudat"), "ciudat" );
	deepEqual( Stem("ciudată"), "ciudat" );
	deepEqual( Stem("ciudate"), "ciudat" );
	deepEqual( Stem("ciudă"), "ciud" );
	deepEqual( Stem("ciudăţenie"), "ciudăţen" );
	deepEqual( Stem("ciudăţeniile"), "ciudăţen" );
	deepEqual( Stem("ciulama"), "ciulam" );
	deepEqual( Stem("ciulniţa"), "ciulniţ" );
	deepEqual( Stem("ciuperci"), "ciuperc" );
	deepEqual( Stem("ciupeşte"), "ciup" );
	deepEqual( Stem("ciupită"), "ciupit" );
	deepEqual( Stem("civil"), "civil" );
	deepEqual( Stem("civile"), "civ" );
	deepEqual( Stem("civilizat"), "civiliz" );
	deepEqual( Stem("civilizată"), "civiliz" );
	deepEqual( Stem("civilizaţi"), "civiliz" );
	deepEqual( Stem("civilizaţia"), "civiliz" );
	deepEqual( Stem("civilizaţie"), "civiliz" );
	deepEqual( Stem("civilizaţiei"), "civiliz" );
	deepEqual( Stem("civilizaţii"), "civiliz" );
	deepEqual( Stem("civilizaţiile"), "civiliz" );
	deepEqual( Stem("cizelaţi"), "cizel" );
	deepEqual( Stem("cizmari"), "cizmar" );
	deepEqual( Stem("cizmarul"), "cizmar" );
	deepEqual( Stem("cizme"), "cizm" );
	deepEqual( Stem("cizmei"), "cizme" );
	deepEqual( Stem("cizmele"), "cizm" );
	deepEqual( Stem("cizmuliţele"), "cizmuliţ" );
	deepEqual( Stem("cîine"), "cîin" );
	deepEqual( Stem("cîini"), "cîin" );
	deepEqual( Stem("cîmp"), "cîmp" );
	deepEqual( Stem("cîmpenească"), "cîmpen" );
	deepEqual( Stem("cîmpi"), "cîmp" );
	deepEqual( Stem("cîmpoi"), "cîmpo" );
	deepEqual( Stem("cîmpuri"), "cîmpur" );
	deepEqual( Stem("cîteodată"), "cîteod" );
	deepEqual( Stem("clapă"), "clap" );
	deepEqual( Stem("clar"), "clar" );
	deepEqual( Stem("clară"), "clar" );
	deepEqual( Stem("clare"), "clar" );
	deepEqual( Stem("clarificare"), "clarific" );
	deepEqual( Stem("clarificată"), "clarific" );
	deepEqual( Stem("clarifică"), "clarif" );
	deepEqual( Stem("clarifici"), "clarif" );
	deepEqual( Stem("claritate"), "claritat" );
	deepEqual( Stem("claritatea"), "claritat" );
	deepEqual( Stem("clasa"), "clas" );
	deepEqual( Stem("clasă"), "clas" );
	deepEqual( Stem("clase"), "cla" );
	deepEqual( Stem("clasei"), "cla" );
	deepEqual( Stem("clasele"), "cla" );
	deepEqual( Stem("claselor"), "cla" );
	deepEqual( Stem("clasic"), "clasic" );
	deepEqual( Stem("clasica"), "clasic" );
	deepEqual( Stem("clasică"), "clasic" );
	deepEqual( Stem("clasice"), "clasic" );
	deepEqual( Stem("clasici"), "clasic" );
	deepEqual( Stem("clasicilor"), "clasic" );
	deepEqual( Stem("clasicul"), "clasic" );
	deepEqual( Stem("clasificăm"), "clasific" );
	deepEqual( Stem("clasificării"), "clasificăr" );
	deepEqual( Stem("clatin"), "clatin" );
	deepEqual( Stem("clatină"), "clatin" );
	deepEqual( Stem("clavir"), "clavir" );
	deepEqual( Stem("claxonul"), "claxon" );
	deepEqual( Stem("clădeşte"), "clăd" );
	deepEqual( Stem("clădirea"), "clăd" );
	deepEqual( Stem("clădiseră"), "clăd" );
	deepEqual( Stem("clăi"), "clă" );
	deepEqual( Stem("clănţăne"), "clănţăn" );
	deepEqual( Stem("clătina"), "clătin" );
	deepEqual( Stem("clătinarea"), "clătin" );
	deepEqual( Stem("clătinase"), "clătin" );
	deepEqual( Stem("clătinatul"), "clătin" );
	deepEqual( Stem("clătinându"), "clătin" );
	deepEqual( Stem("clătite"), "clătit" );
	deepEqual( Stem("clei"), "cle" );
	deepEqual( Stem("cleios"), "cleios" );
	deepEqual( Stem("clement"), "clement" );
	deepEqual( Stem("clenciuri"), "clenciur" );
	deepEqual( Stem("cleştar"), "cleştar" );
	deepEqual( Stem("clienteală"), "clienteal" );
	deepEqual( Stem("clientul"), "client" );
	deepEqual( Stem("clienţii"), "clienţ" );
	deepEqual( Stem("clinchet"), "clinchet" );
	deepEqual( Stem("clinice"), "clinic" );
	deepEqual( Stem("clinuri"), "clinur" );
	deepEqual( Stem("clipa"), "clip" );
	deepEqual( Stem("clipă"), "clip" );
	deepEqual( Stem("clipe"), "clip" );
	deepEqual( Stem("clipei"), "clipe" );
	deepEqual( Stem("clipele"), "clip" );
	deepEqual( Stem("clipelor"), "clip" );
	deepEqual( Stem("clipită"), "clipit" );
	deepEqual( Stem("clipocesc"), "clipoc" );
	deepEqual( Stem("clocesc"), "cloc" );
	deepEqual( Stem("clocite"), "clocit" );
	deepEqual( Stem("clocotirea"), "clocot" );
	deepEqual( Stem("clopote"), "clopot" );
	deepEqual( Stem("clovnerie"), "clovner" );
	deepEqual( Stem("club"), "club" );
	deepEqual( Stem("clubului"), "club" );
	deepEqual( Stem("cluj"), "cluj" );
	deepEqual( Stem("coada"), "coad" );
	deepEqual( Stem("coafat"), "coafat" );
	deepEqual( Stem("coajă"), "coaj" );
	deepEqual( Stem("coama"), "coam" );
	deepEqual( Stem("coana"), "coan" );
	deepEqual( Stem("coane"), "coan" );
	deepEqual( Stem("coanei"), "coane" );
	deepEqual( Stem("coapsă"), "coaps" );
	deepEqual( Stem("coapse"), "coap" );
	deepEqual( Stem("coapsei"), "coap" );
	deepEqual( Stem("coapsele"), "coap" );
	deepEqual( Stem("coapselor"), "coap" );
	deepEqual( Stem("coarnelor"), "coarn" );
	deepEqual( Stem("coasei"), "coa" );
	deepEqual( Stem("coasta"), "coast" );
	deepEqual( Stem("coastă"), "coast" );
	deepEqual( Stem("coaste"), "coast" );
	deepEqual( Stem("coastele"), "coast" );
	deepEqual( Stem("coatele"), "coat" );
	deepEqual( Stem("coboară"), "coboar" );
	deepEqual( Stem("coboare"), "coboar" );
	deepEqual( Stem("cobor"), "cobor" );
	deepEqual( Stem("coboram"), "cobor" );
	deepEqual( Stem("coborau"), "cobor" );
	deepEqual( Stem("coborâm"), "cobor" );
	deepEqual( Stem("coborând"), "cobor" );
	deepEqual( Stem("coborâseră"), "cobor" );
	deepEqual( Stem("coborât"), "coborât" );
	deepEqual( Stem("coborâtă"), "coborât" );
	deepEqual( Stem("coborâţi"), "cobor" );
	deepEqual( Stem("coborî"), "coborî" );
	deepEqual( Stem("cobra"), "cobr" );
	deepEqual( Stem("cobzar"), "cobzar" );
	deepEqual( Stem("cocenii"), "cocen" );
	deepEqual( Stem("cocenilor"), "cocen" );
	deepEqual( Stem("cochetărie"), "cochetăr" );
	deepEqual( Stem("cochetării"), "cochetăr" );
	deepEqual( Stem("cochetează"), "cochet" );
	deepEqual( Stem("cochetelor"), "cochet" );
	deepEqual( Stem("coclauri"), "coclaur" );
	deepEqual( Stem("coclită"), "coclit" );
	deepEqual( Stem("coclite"), "coclit" );
	deepEqual( Stem("cocoanele"), "cocoan" );
	deepEqual( Stem("cocoaşă"), "cocoaş" );
	deepEqual( Stem("cocoşată"), "cocoş" );
	deepEqual( Stem("cocoşaţi"), "cocoş" );
	deepEqual( Stem("cocotă"), "cocot" );
	deepEqual( Stem("cocote"), "cocot" );
	deepEqual( Stem("codeală"), "codeal" );
	deepEqual( Stem("codeşte"), "codeşt" );
	deepEqual( Stem("codicil"), "codicil" );
	deepEqual( Stem("codicilul"), "codicil" );
	deepEqual( Stem("codificată"), "codific" );
	deepEqual( Stem("codificăm"), "codific" );
	deepEqual( Stem("codire"), "codir" );
	deepEqual( Stem("codirector"), "codirector" );
	deepEqual( Stem("codlea"), "codl" );
	deepEqual( Stem("codobature"), "codobatur" );
	deepEqual( Stem("codri"), "codr" );
	deepEqual( Stem("coeficient"), "coeficient" );
	deepEqual( Stem("coeficientul"), "coeficient" );
	deepEqual( Stem("coercitivă"), "coercit" );
	deepEqual( Stem("coeur"), "coeur" );
	deepEqual( Stem("coexistenţă"), "coexistenţ" );
	deepEqual( Stem("cofetăriei"), "cofetăr" );
	deepEqual( Stem("cofetăriile"), "cofetăr" );
	deepEqual( Stem("cogito"), "cogito" );
	deepEqual( Stem("cognoscibilitatea"), "cognosc" );
	deepEqual( Stem("cognoscientismul"), "cognoscientist" );
	deepEqual( Stem("cognoscientistă"), "cognoscientist" );
	deepEqual( Stem("cohalm"), "cohalm" );
	deepEqual( Stem("coifurile"), "coifur" );
	deepEqual( Stem("coincide"), "coincid" );
	deepEqual( Stem("coincidenţa"), "coincidenţ" );
	deepEqual( Stem("coincidenţă"), "coincidenţ" );
	deepEqual( Stem("coincidenţe"), "coincidenţ" );
	deepEqual( Stem("cointreau"), "cointr" );
	deepEqual( Stem("cojită"), "cojit" );
	deepEqual( Stem("cojiţi"), "coj" );
	deepEqual( Stem("colabora"), "colabor" );
	deepEqual( Stem("colaborare"), "colabor" );
	deepEqual( Stem("colaborasem"), "colabor" );
	deepEqual( Stem("colaborativ"), "colabor" );
	deepEqual( Stem("colaborator"), "colabor" );
	deepEqual( Stem("colaboratori"), "colabor" );
	deepEqual( Stem("colaboraţionism"), "colaboraţionist" );
	deepEqual( Stem("colaboraţioniste"), "colaboraţionist" );
	deepEqual( Stem("colaboraţionişti"), "colaboraţionist" );
	deepEqual( Stem("colaborau"), "colabor" );
	deepEqual( Stem("colaborăm"), "colabor" );
	deepEqual( Stem("colaborări"), "colaborăr" );
	deepEqual( Stem("colaborării"), "colaborăr" );
	deepEqual( Stem("colaborează"), "colabor" );
	deepEqual( Stem("colaborez"), "colabor" );
	deepEqual( Stem("colaborînd"), "colaborînd" );
	deepEqual( Stem("colac"), "colac" );
	deepEqual( Stem("colaci"), "colac" );
	deepEqual( Stem("colacii"), "colac" );
	deepEqual( Stem("colaps"), "colaps" );
	deepEqual( Stem("colapsului"), "colaps" );
	deepEqual( Stem("colateral"), "colateral" );
	deepEqual( Stem("colcăie"), "colcăi" );
	deepEqual( Stem("colcăitor"), "colcăit" );
	deepEqual( Stem("colea"), "col" );
	deepEqual( Stem("colecta"), "colect" );
	deepEqual( Stem("colectare"), "colect" );
	deepEqual( Stem("colectat"), "colect" );
	deepEqual( Stem("colectată"), "colect" );
	deepEqual( Stem("colectate"), "colect" );
	deepEqual( Stem("colectează"), "colect" );
	deepEqual( Stem("colectiv"), "colect" );
	deepEqual( Stem("colectivă"), "colect" );
	deepEqual( Stem("colective"), "colect" );
	deepEqual( Stem("colectivităţii"), "colect" );
	deepEqual( Stem("colecţia"), "colecţ" );
	deepEqual( Stem("colecţie"), "colecţ" );
	deepEqual( Stem("coleg"), "coleg" );
	deepEqual( Stem("colega"), "coleg" );
	deepEqual( Stem("colegă"), "coleg" );
	deepEqual( Stem("colegi"), "coleg" );
	deepEqual( Stem("colegii"), "coleg" );
	deepEqual( Stem("colegilor"), "coleg" );
	deepEqual( Stem("colegului"), "coleg" );
	deepEqual( Stem("colibă"), "colib" );
	deepEqual( Stem("colind"), "colind" );
	deepEqual( Stem("coline"), "colin" );
	deepEqual( Stem("colo"), "colo" );
	deepEqual( Stem("coloana"), "coloan" );
	deepEqual( Stem("coloană"), "coloan" );
	deepEqual( Stem("coloane"), "coloan" );
	deepEqual( Stem("coloanele"), "coloan" );
	deepEqual( Stem("colocviile"), "colocv" );
	deepEqual( Stem("colonel"), "colonel" );
	deepEqual( Stem("colonele"), "colon" );
	deepEqual( Stem("colonelul"), "colonel" );
	deepEqual( Stem("colonelului"), "colonel" );
	deepEqual( Stem("colonia"), "colon" );
	deepEqual( Stem("colonie"), "colon" );
	deepEqual( Stem("coloniei"), "colon" );
	deepEqual( Stem("colonizare"), "coloniz" );
	deepEqual( Stem("colorat"), "color" );
	deepEqual( Stem("colorată"), "color" );
	deepEqual( Stem("colorate"), "color" );
	deepEqual( Stem("coloratură"), "colorat" );
	deepEqual( Stem("coloreze"), "color" );
	deepEqual( Stem("colori"), "color" );
	deepEqual( Stem("colorile"), "color" );
	deepEqual( Stem("colorit"), "color" );
	deepEqual( Stem("colos"), "colos" );
	deepEqual( Stem("colosal"), "colosal" );
	deepEqual( Stem("coltu"), "coltu" );
	deepEqual( Stem("colţ"), "colţ" );
	deepEqual( Stem("colţi"), "colţ" );
	deepEqual( Stem("colţul"), "colţ" );
	deepEqual( Stem("colţuri"), "colţur" );
	deepEqual( Stem("colţurile"), "colţur" );
	deepEqual( Stem("comanda"), "comand" );
	deepEqual( Stem("comandamente"), "comandament" );
	deepEqual( Stem("comandant"), "comand" );
	deepEqual( Stem("comandantul"), "comand" );
	deepEqual( Stem("comandantului"), "comand" );
	deepEqual( Stem("comandanţi"), "comandanţ" );
	deepEqual( Stem("comandanţii"), "comandanţ" );
	deepEqual( Stem("comandatul"), "comand" );
	deepEqual( Stem("comandă"), "comand" );
	deepEqual( Stem("comandei"), "comande" );
	deepEqual( Stem("comanzi"), "comanz" );
	deepEqual( Stem("combatanţi"), "combatanţ" );
	deepEqual( Stem("combativ"), "combat" );
	deepEqual( Stem("combătut"), "combăt" );
	deepEqual( Stem("combina"), "combin" );
	deepEqual( Stem("combinare"), "combin" );
	deepEqual( Stem("combinat"), "combin" );
	deepEqual( Stem("combinaţie"), "combin" );
	deepEqual( Stem("combinaţii"), "combin" );
	deepEqual( Stem("comedia"), "comed" );
	deepEqual( Stem("comedie"), "comed" );
	deepEqual( Stem("comemoreze"), "comemor" );
	deepEqual( Stem("comentar"), "comentar" );
	deepEqual( Stem("comentarii"), "comentar" );
	deepEqual( Stem("comentariile"), "comentar" );
	deepEqual( Stem("comentariilor"), "comentar" );
	deepEqual( Stem("comentată"), "coment" );
	deepEqual( Stem("comenzi"), "comenz" );
	deepEqual( Stem("comercial"), "comercial" );
	deepEqual( Stem("comercială"), "comercial" );
	deepEqual( Stem("comerciant"), "comerc" );
	deepEqual( Stem("comerţ"), "comerţ" );
	deepEqual( Stem("comerţul"), "comerţ" );
	deepEqual( Stem("comerţului"), "comerţ" );
	deepEqual( Stem("comeseni"), "comesen" );
	deepEqual( Stem("comestibilelor"), "comest" );
	deepEqual( Stem("comete"), "comet" );
	deepEqual( Stem("cometei"), "comete" );
	deepEqual( Stem("comic"), "comic" );
	deepEqual( Stem("comicăria"), "comicăr" );
	deepEqual( Stem("comice"), "comic" );
	deepEqual( Stem("comis"), "comis" );
	deepEqual( Stem("comisionar"), "comisionar" );
	deepEqual( Stem("comisionarul"), "comisionar" );
	deepEqual( Stem("comisionarului"), "comisionar" );
	deepEqual( Stem("comisionul"), "comision" );
	deepEqual( Stem("comit"), "comit" );
	deepEqual( Stem("comod"), "comod" );
	deepEqual( Stem("comodă"), "comod" );
	deepEqual( Stem("compactă"), "compact" );
	deepEqual( Stem("compania"), "compan" );
	deepEqual( Stem("companie"), "compan" );
	deepEqual( Stem("companiei"), "compan" );
	deepEqual( Stem("companii"), "compan" );
	deepEqual( Stem("compar"), "compar" );
	deepEqual( Stem("compara"), "compar" );
	deepEqual( Stem("comparat"), "compar" );
	deepEqual( Stem("comparaţia"), "compar" );
	deepEqual( Stem("comparaţie"), "compar" );
	deepEqual( Stem("comparaţii"), "compar" );
	deepEqual( Stem("comparând"), "compar" );
	deepEqual( Stem("compară"), "comp" );
	deepEqual( Stem("comparăm"), "comp" );
	deepEqual( Stem("compari"), "compar" );
	deepEqual( Stem("compartimentul"), "compartiment" );
	deepEqual( Stem("compartimentului"), "compartiment" );
	deepEqual( Stem("compatrioţii"), "compatrioţ" );
	deepEqual( Stem("compatrioţilor"), "compatrioţ" );
	deepEqual( Stem("compănii"), "compăn" );
	deepEqual( Stem("compăniile"), "compăn" );
	deepEqual( Stem("compătimire"), "compătim" );
	deepEqual( Stem("compătimirea"), "compătim" );
	deepEqual( Stem("competintele"), "competint" );
	deepEqual( Stem("complementară"), "complement" );
	deepEqual( Stem("complet"), "complet" );
	deepEqual( Stem("completa"), "complet" );
	deepEqual( Stem("completare"), "complet" );
	deepEqual( Stem("completarea"), "complet" );
	deepEqual( Stem("completat"), "complet" );
	deepEqual( Stem("completă"), "complet" );
	deepEqual( Stem("completăm"), "complet" );
	deepEqual( Stem("completări"), "completăr" );
	deepEqual( Stem("completării"), "completăr" );
	deepEqual( Stem("complete"), "complet" );
	deepEqual( Stem("completează"), "complet" );
	deepEqual( Stem("completez"), "complet" );
	deepEqual( Stem("completezi"), "complet" );
	deepEqual( Stem("complex"), "complex" );
	deepEqual( Stem("complexe"), "complex" );
	deepEqual( Stem("complexităţi"), "complex" );
	deepEqual( Stem("complexul"), "complex" );
	deepEqual( Stem("complexului"), "complex" );
	deepEqual( Stem("complexuri"), "complexur" );
	deepEqual( Stem("complic"), "complic" );
	deepEqual( Stem("complica"), "complic" );
	deepEqual( Stem("complicat"), "complic" );
	deepEqual( Stem("complicată"), "complic" );
	deepEqual( Stem("complicate"), "complic" );
	deepEqual( Stem("complicaţia"), "complic" );
	deepEqual( Stem("complicaţie"), "complic" );
	deepEqual( Stem("complicaţii"), "complic" );
	deepEqual( Stem("complică"), "complic" );
	deepEqual( Stem("complice"), "complic" );
	deepEqual( Stem("complici"), "complic" );
	deepEqual( Stem("complicitate"), "complic" );
	deepEqual( Stem("complicităţi"), "complic" );
	deepEqual( Stem("compliment"), "compliment" );
	deepEqual( Stem("complimentele"), "compliment" );
	deepEqual( Stem("component"), "component" );
	deepEqual( Stem("comporta"), "comport" );
	deepEqual( Stem("comportat"), "comport" );
	deepEqual( Stem("comportă"), "comport" );
	deepEqual( Stem("compot"), "compot" );
	deepEqual( Stem("comprimat"), "comprim" );
	deepEqual( Stem("comprimată"), "comprim" );
	deepEqual( Stem("compromisă"), "compromis" );
	deepEqual( Stem("compromisese"), "comprom" );
	deepEqual( Stem("compromit"), "comprom" );
	deepEqual( Stem("compromite"), "comprom" );
	deepEqual( Stem("compune"), "compun" );
	deepEqual( Stem("compunerea"), "compun" );
	deepEqual( Stem("compus"), "compus" );
	deepEqual( Stem("compusă"), "compus" );
	deepEqual( Stem("compuşi"), "comp" );
	deepEqual( Stem("computaţional"), "computaţional" );
	deepEqual( Stem("computaţională"), "computaţional" );
	deepEqual( Stem("computaţionale"), "computaţional" );
	deepEqual( Stem("computer"), "computer" );
	deepEqual( Stem("computerizată"), "computeriz" );
	deepEqual( Stem("comte"), "comt" );
	deepEqual( Stem("comun"), "comun" );
	deepEqual( Stem("comunal"), "comunal" );
	deepEqual( Stem("comunale"), "comunal" );
	deepEqual( Stem("comună"), "comun" );
	deepEqual( Stem("comune"), "comun" );
	deepEqual( Stem("comunei"), "comune" );
	deepEqual( Stem("comunelor"), "comun" );
	deepEqual( Stem("comuni"), "comun" );
	deepEqual( Stem("comunic"), "comun" );
	deepEqual( Stem("comunica"), "comun" );
	deepEqual( Stem("comunicante"), "comunic" );
	deepEqual( Stem("comunicare"), "comunic" );
	deepEqual( Stem("comunicat"), "comunic" );
	deepEqual( Stem("comunicată"), "comunic" );
	deepEqual( Stem("comunicate"), "comunic" );
	deepEqual( Stem("comunicativitate"), "comunic" );
	deepEqual( Stem("comunicatul"), "comunic" );
	deepEqual( Stem("comunicatului"), "comunic" );
	deepEqual( Stem("comunicaţi"), "comunic" );
	deepEqual( Stem("comunicaţia"), "comunic" );
	deepEqual( Stem("comunicaţii"), "comunic" );
	deepEqual( Stem("comunicau"), "comunic" );
	deepEqual( Stem("comunică"), "comun" );
	deepEqual( Stem("comunicăm"), "comunic" );
	deepEqual( Stem("comunicări"), "comunicăr" );
	deepEqual( Stem("comunicării"), "comunicăr" );
	deepEqual( Stem("comunicărilor"), "comunicăr" );
	deepEqual( Stem("comunice"), "comun" );
	deepEqual( Stem("comunism"), "comunist" );
	deepEqual( Stem("comunismul"), "comunist" );
	deepEqual( Stem("comunismului"), "comunist" );
	deepEqual( Stem("comunistă"), "comunist" );
	deepEqual( Stem("comuniste"), "comunist" );
	deepEqual( Stem("comunişti"), "comunist" );
	deepEqual( Stem("comuniştii"), "comunist" );
	deepEqual( Stem("comunităţii"), "comun" );
	deepEqual( Stem("comunizării"), "comunizăr" );
	deepEqual( Stem("conacuri"), "conacur" );
	deepEqual( Stem("conceapă"), "conceap" );
	deepEqual( Stem("concediază"), "concediaz" );
	deepEqual( Stem("concediind"), "concediind" );
	deepEqual( Stem("concentrare"), "concentr" );
	deepEqual( Stem("concentrat"), "concentr" );
	deepEqual( Stem("concentrate"), "concentr" );
	deepEqual( Stem("concentrării"), "concentrăr" );
	deepEqual( Stem("concentrez"), "concentr" );
	deepEqual( Stem("concepe"), "concep" );
	deepEqual( Stem("concept"), "concept" );
	deepEqual( Stem("concepte"), "concept" );
	deepEqual( Stem("conceptele"), "concept" );
	deepEqual( Stem("conceptibilă"), "concept" );
	deepEqual( Stem("conceptuale"), "conceptual" );
	deepEqual( Stem("conceptul"), "concept" );
	deepEqual( Stem("conceptului"), "concept" );
	deepEqual( Stem("concepţia"), "concepţ" );
	deepEqual( Stem("concepţie"), "concepţ" );
	deepEqual( Stem("concepţiune"), "concept" );
	deepEqual( Stem("concepţiunilor"), "concept" );
	deepEqual( Stem("conceput"), "concep" );
	deepEqual( Stem("concepută"), "concep" );
	deepEqual( Stem("concert"), "concert" );
	deepEqual( Stem("concerte"), "concert" );
	deepEqual( Stem("concertelor"), "concert" );
	deepEqual( Stem("concertul"), "concert" );
	deepEqual( Stem("concesie"), "conces" );
	deepEqual( Stem("conceziune"), "conceziun" );
	deepEqual( Stem("conchid"), "conchid" );
	deepEqual( Stem("conchidă"), "conchid" );
	deepEqual( Stem("conchide"), "conchid" );
	deepEqual( Stem("conchidem"), "conchid" );
	deepEqual( Stem("conciliant"), "concil" );
	deepEqual( Stem("concilianţa"), "concilianţ" );
	deepEqual( Stem("concizia"), "conciz" );
	deepEqual( Stem("concludentă"), "concludent" );
	deepEqual( Stem("concludente"), "concludent" );
	deepEqual( Stem("concluzia"), "concluz" );
	deepEqual( Stem("concluzie"), "concluz" );
	deepEqual( Stem("concluzii"), "concluz" );
	deepEqual( Stem("concluziile"), "concluz" );
	deepEqual( Stem("concluziune"), "concluziun" );
	deepEqual( Stem("concluziunea"), "concluziun" );
	deepEqual( Stem("concordanţă"), "concordanţ" );
	deepEqual( Stem("concret"), "concret" );
	deepEqual( Stem("concretă"), "concret" );
	deepEqual( Stem("concrete"), "concret" );
	deepEqual( Stem("concretizează"), "concretiz" );
	deepEqual( Stem("concretul"), "concret" );
	deepEqual( Stem("concurăm"), "conc" );
	deepEqual( Stem("concurent"), "concurent" );
	deepEqual( Stem("concurenţă"), "concurenţ" );
	deepEqual( Stem("concurenţi"), "concurenţ" );
	deepEqual( Stem("concureze"), "concur" );
	deepEqual( Stem("concurs"), "concurs" );
	deepEqual( Stem("concursul"), "concurs" );
	deepEqual( Stem("concursurile"), "concursur" );
	deepEqual( Stem("condamna"), "condamn" );
	deepEqual( Stem("condamnabilă"), "condamn" );
	deepEqual( Stem("condamnarea"), "condamn" );
	deepEqual( Stem("condamnat"), "condamn" );
	deepEqual( Stem("condamnată"), "condamn" );
	deepEqual( Stem("condamnaţi"), "condamn" );
	deepEqual( Stem("condamnaţii"), "condamn" );
	deepEqual( Stem("condamnă"), "condamn" );
	deepEqual( Stem("condamnări"), "condamnăr" );
	deepEqual( Stem("condescendent"), "condescendent" );
	deepEqual( Stem("condescendenţă"), "condescendenţ" );
	deepEqual( Stem("condicuţă"), "condicuţ" );
	deepEqual( Stem("condiţia"), "condiţ" );
	deepEqual( Stem("condiţie"), "condiţ" );
	deepEqual( Stem("condiţii"), "cond" );
	deepEqual( Stem("condiţiile"), "cond" );
	deepEqual( Stem("condiţiilor"), "cond" );
	deepEqual( Stem("condiţiona"), "condiţion" );
	deepEqual( Stem("condiţionare"), "condiţion" );
	deepEqual( Stem("condiţionarea"), "condiţion" );
	deepEqual( Stem("condiţionat"), "condiţion" );
	deepEqual( Stem("condiţionată"), "condiţion" );
	deepEqual( Stem("condiţionate"), "condiţion" );
	deepEqual( Stem("condiţionării"), "condiţionăr" );
	deepEqual( Stem("condiţionează"), "condiţion" );
	deepEqual( Stem("condiţionez"), "condiţion" );
	deepEqual( Stem("condiţionezi"), "condiţion" );
	deepEqual( Stem("condiţiune"), "condit" );
	deepEqual( Stem("condiţiunea"), "condit" );
	deepEqual( Stem("condiţiuni"), "condit" );
	deepEqual( Stem("condiţiunile"), "condit" );
	deepEqual( Stem("conduc"), "conduc" );
	deepEqual( Stem("conducându"), "conduc" );
	deepEqual( Stem("conducătoare"), "conduc" );
	deepEqual( Stem("conducători"), "conduc" );
	deepEqual( Stem("conducătorii"), "conduc" );
	deepEqual( Stem("conduceam"), "conduc" );
	deepEqual( Stem("conducere"), "conduc" );
	deepEqual( Stem("conducerea"), "conduc" );
	deepEqual( Stem("conducerii"), "conducer" );
	deepEqual( Stem("condus"), "condus" );
	deepEqual( Stem("confecţiunile"), "confect" );
	deepEqual( Stem("conferenţiarului"), "conferenţiar" );
	deepEqual( Stem("conferinţă"), "conferinţ" );
	deepEqual( Stem("conferinţe"), "conferinţ" );
	deepEqual( Stem("confesionale"), "confesional" );
	deepEqual( Stem("confirmare"), "confirm" );
	deepEqual( Stem("confirmarea"), "confirm" );
	deepEqual( Stem("confirmat"), "confirm" );
	deepEqual( Stem("confirmă"), "confirm" );
	deepEqual( Stem("conflict"), "conflict" );
	deepEqual( Stem("conflicte"), "conflict" );
	deepEqual( Stem("conflictele"), "conflict" );
	deepEqual( Stem("conforma"), "conform" );
	deepEqual( Stem("conformă"), "conform" );
	deepEqual( Stem("conformăm"), "conform" );
	deepEqual( Stem("conformeze"), "conform" );
	deepEqual( Stem("conformist"), "conformist" );
	deepEqual( Stem("confortului"), "confort" );
	deepEqual( Stem("confraţii"), "confr" );
	deepEqual( Stem("confruntat"), "confrunt" );
	deepEqual( Stem("confruntând"), "confrunt" );
	deepEqual( Stem("confunda"), "confund" );
	deepEqual( Stem("confundă"), "confund" );
	deepEqual( Stem("confuză"), "confuz" );
	deepEqual( Stem("confuzia"), "confuz" );
	deepEqual( Stem("confuzie"), "confuz" );
	deepEqual( Stem("confuzii"), "confuz" );
	deepEqual( Stem("congestionat"), "congestion" );
	deepEqual( Stem("congestionaţi"), "congestion" );
	deepEqual( Stem("coniacuri"), "coniacur" );
	deepEqual( Stem("conica"), "conic" );
	deepEqual( Stem("conjugal"), "conjugal" );
	deepEqual( Stem("conjugalităţii"), "conjugal" );
	deepEqual( Stem("conjugare"), "conjug" );
	deepEqual( Stem("conjuraţie"), "conjur" );
	deepEqual( Stem("consacrare"), "consacr" );
	deepEqual( Stem("consacrată"), "consacr" );
	deepEqual( Stem("consacrate"), "consacr" );
	deepEqual( Stem("consacră"), "consacr" );
	deepEqual( Stem("consacrări"), "consacrăr" );
	deepEqual( Stem("conscienţialismul"), "conscienţialist" );
	deepEqual( Stem("conscienţialismului"), "conscienţialist" );
	deepEqual( Stem("consecinţa"), "consecinţ" );
	deepEqual( Stem("consecinţă"), "consecinţ" );
	deepEqual( Stem("consecinţe"), "consecinţ" );
	deepEqual( Stem("consecinţele"), "consecinţ" );
	deepEqual( Stem("consecvent"), "consecvent" );
	deepEqual( Stem("consecventă"), "consecvent" );
	deepEqual( Stem("consecvenţa"), "consecvenţ" );
	deepEqual( Stem("consecvenţă"), "consecvenţ" );
	deepEqual( Stem("consemne"), "consemn" );
	deepEqual( Stem("conservatoare"), "conserv" );
	deepEqual( Stem("conservator"), "conserv" );
	deepEqual( Stem("conservatorism"), "conservatorist" );
	deepEqual( Stem("consfătuiri"), "consfătuir" );
	deepEqual( Stem("consider"), "consider" );
	deepEqual( Stem("considera"), "consider" );
	deepEqual( Stem("considerabil"), "consider" );
	deepEqual( Stem("considerabile"), "consider" );
	deepEqual( Stem("consideram"), "consider" );
	deepEqual( Stem("considerare"), "consider" );
	deepEqual( Stem("considerarea"), "consider" );
	deepEqual( Stem("considerat"), "consider" );
	deepEqual( Stem("considerată"), "consider" );
	deepEqual( Stem("considerate"), "consider" );
	deepEqual( Stem("consideraţi"), "consider" );
	deepEqual( Stem("consideraţie"), "consider" );
	deepEqual( Stem("consideraţii"), "consider" );
	deepEqual( Stem("consideraţiuni"), "considerat" );
	deepEqual( Stem("consideraţiunile"), "considerat" );
	deepEqual( Stem("consideraţiunilor"), "considerat" );
	deepEqual( Stem("considerând"), "consider" );
	deepEqual( Stem("consideră"), "consider" );
	deepEqual( Stem("considerăm"), "consider" );
	deepEqual( Stem("considere"), "consid" );
	deepEqual( Stem("considerente"), "considerent" );
	deepEqual( Stem("consideri"), "consider" );
	deepEqual( Stem("consilier"), "consilier" );
	deepEqual( Stem("consilierii"), "consilier" );
	deepEqual( Stem("consilii"), "consil" );
	deepEqual( Stem("consiliile"), "consil" );
	deepEqual( Stem("consiliu"), "consiliu" );
	deepEqual( Stem("consiliul"), "consil" );
	deepEqual( Stem("consimţământ"), "consimţământ" );
	deepEqual( Stem("consola"), "consol" );
	deepEqual( Stem("consolare"), "consol" );
	deepEqual( Stem("consolator"), "consol" );
	deepEqual( Stem("consolează"), "consol" );
	deepEqual( Stem("conspiratori"), "conspir" );
	deepEqual( Stem("conspiraţia"), "conspir" );
	deepEqual( Stem("conspiraţie"), "conspir" );
	deepEqual( Stem("conspiraţiei"), "conspir" );
	deepEqual( Stem("conspiraţii"), "conspir" );
	deepEqual( Stem("conspiraţiilor"), "conspir" );
	deepEqual( Stem("conspiră"), "consp" );
	deepEqual( Stem("constant"), "constant" );
	deepEqual( Stem("constantă"), "constant" );
	deepEqual( Stem("constantin"), "constantin" );
	deepEqual( Stem("constantinopol"), "constantinopol" );
	deepEqual( Stem("constantinopolul"), "constantinopol" );
	deepEqual( Stem("constanţa"), "constanţ" );
	deepEqual( Stem("constanţă"), "constanţ" );
	deepEqual( Stem("constat"), "constat" );
	deepEqual( Stem("constata"), "constat" );
	deepEqual( Stem("constatabil"), "constat" );
	deepEqual( Stem("constatabilă"), "constat" );
	deepEqual( Stem("constatare"), "constat" );
	deepEqual( Stem("constatarea"), "constat" );
	deepEqual( Stem("constatat"), "constat" );
	deepEqual( Stem("constatată"), "constat" );
	deepEqual( Stem("constataţi"), "constat" );
	deepEqual( Stem("constată"), "constat" );
	deepEqual( Stem("constatăm"), "constat" );
	deepEqual( Stem("constatări"), "constatăr" );
	deepEqual( Stem("constatării"), "constatăr" );
	deepEqual( Stem("constate"), "constat" );
	deepEqual( Stem("constaţi"), "const" );
	deepEqual( Stem("constau"), "const" );
	deepEqual( Stem("constă"), "const" );
	deepEqual( Stem("consternare"), "constern" );
	deepEqual( Stem("consternat"), "constern" );
	deepEqual( Stem("constituentă"), "constituent" );
	deepEqual( Stem("constitui"), "constit" );
	deepEqual( Stem("constituia"), "constitui" );
	deepEqual( Stem("constituie"), "constitui" );
	deepEqual( Stem("constituim"), "constitu" );
	deepEqual( Stem("constituind"), "constitu" );
	deepEqual( Stem("constituire"), "constitu" );
	deepEqual( Stem("constituirea"), "constitu" );
	deepEqual( Stem("constituiri"), "constituir" );
	deepEqual( Stem("constituirile"), "constituir" );
	deepEqual( Stem("constituise"), "constitu" );
	deepEqual( Stem("constituit"), "constitu" );
	deepEqual( Stem("constituită"), "constitu" );
	deepEqual( Stem("constituite"), "constitu" );
	deepEqual( Stem("constitutiv"), "constitut" );
	deepEqual( Stem("constitutivă"), "constitut" );
	deepEqual( Stem("constitutive"), "constitut" );
	deepEqual( Stem("constituţia"), "constituţ" );
	deepEqual( Stem("constituţie"), "constituţ" );
	deepEqual( Stem("constituţiunea"), "constitut" );
	deepEqual( Stem("constrângere"), "constrâng" );
	deepEqual( Stem("constrângeri"), "constrânger" );
	deepEqual( Stem("constructiv"), "construct" );
	deepEqual( Stem("constructivă"), "construct" );
	deepEqual( Stem("constructuale"), "constructual" );
	deepEqual( Stem("construcţia"), "construcţ" );
	deepEqual( Stem("construcţie"), "construcţ" );
	deepEqual( Stem("construcţii"), "construcţ" );
	deepEqual( Stem("construcţiile"), "construcţ" );
	deepEqual( Stem("construcţiune"), "construct" );
	deepEqual( Stem("construcţiunea"), "construct" );
	deepEqual( Stem("construcţiunii"), "construct" );
	deepEqual( Stem("construi"), "constr" );
	deepEqual( Stem("construiască"), "construiasc" );
	deepEqual( Stem("construiesc"), "construi" );
	deepEqual( Stem("construieşte"), "construi" );
	deepEqual( Stem("construieşti"), "construi" );
	deepEqual( Stem("construim"), "constru" );
	deepEqual( Stem("construind"), "constru" );
	deepEqual( Stem("construire"), "constru" );
	deepEqual( Stem("construirea"), "constru" );
	deepEqual( Stem("construirii"), "construir" );
	deepEqual( Stem("construisem"), "constru" );
	deepEqual( Stem("construit"), "construit" );
	deepEqual( Stem("construită"), "construit" );
	deepEqual( Stem("consult"), "consult" );
	deepEqual( Stem("consultant"), "consult" );
	deepEqual( Stem("consultare"), "consult" );
	deepEqual( Stem("consultat"), "consult" );
	deepEqual( Stem("consultaţi"), "consult" );
	deepEqual( Stem("consultă"), "consult" );
	deepEqual( Stem("consulţi"), "consulţ" );
	deepEqual( Stem("consumat"), "consum" );
	deepEqual( Stem("consumată"), "consum" );
	deepEqual( Stem("consumatorii"), "consum" );
	deepEqual( Stem("consumaţie"), "consum" );
	deepEqual( Stem("consumă"), "consum" );
	deepEqual( Stem("consumării"), "consumăr" );
	deepEqual( Stem("consume"), "consum" );
	deepEqual( Stem("conştient"), "conştient" );
	deepEqual( Stem("conştientă"), "conştient" );
	deepEqual( Stem("conştiente"), "conştient" );
	deepEqual( Stem("conştienţi"), "conştienţ" );
	deepEqual( Stem("conştienţiale"), "conştienţial" );
	deepEqual( Stem("conştienţialism"), "conştienţialist" );
	deepEqual( Stem("conştienţialismul"), "conştienţialist" );
	deepEqual( Stem("conştienţialist"), "conştienţialist" );
	deepEqual( Stem("conştienţialistă"), "conştienţialist" );
	deepEqual( Stem("conştienţialistul"), "conştienţialist" );
	deepEqual( Stem("conştiincioasă"), "conştiinc" );
	deepEqual( Stem("conştiincioşi"), "conştiinc" );
	deepEqual( Stem("conştiinţa"), "conştiinţ" );
	deepEqual( Stem("conştiinţă"), "conştiinţ" );
	deepEqual( Stem("conştiinţe"), "conştiinţ" );
	deepEqual( Stem("conştiinţei"), "conştiinţe" );
	deepEqual( Stem("conştiinţele"), "conştiinţ" );
	deepEqual( Stem("conta"), "cont" );
	deepEqual( Stem("contabil"), "contabil" );
	deepEqual( Stem("contact"), "contact" );
	deepEqual( Stem("contaminată"), "contamin" );
	deepEqual( Stem("contase"), "cont" );
	deepEqual( Stem("contăm"), "cont" );
	deepEqual( Stem("conte"), "cont" );
	deepEqual( Stem("contează"), "cont" );
	deepEqual( Stem("contemplativ"), "contempl" );
	deepEqual( Stem("contemplative"), "contempl" );
	deepEqual( Stem("contemplativii"), "contempl" );
	deepEqual( Stem("contemplându"), "contempl" );
	deepEqual( Stem("contemporan"), "contemporan" );
	deepEqual( Stem("contemporanilor"), "contemporan" );
	deepEqual( Stem("contencios"), "contenc" );
	deepEqual( Stem("conteneau"), "conten" );
	deepEqual( Stem("contestată"), "contest" );
	deepEqual( Stem("contestaţii"), "contest" );
	deepEqual( Stem("contextualizate"), "contextualiz" );
	deepEqual( Stem("conteze"), "cont" );
	deepEqual( Stem("contiguă"), "contigu" );
	deepEqual( Stem("contigue"), "contigu" );
	deepEqual( Stem("contiguitate"), "contigu" );
	deepEqual( Stem("contiguu"), "contiguu" );
	deepEqual( Stem("contimporană"), "contimporan" );
	deepEqual( Stem("contimporane"), "contimporan" );
	deepEqual( Stem("contimporaneitate"), "contimporan" );
	deepEqual( Stem("contine"), "contin" );
	deepEqual( Stem("continent"), "continent" );
	deepEqual( Stem("continental"), "continental" );
	deepEqual( Stem("continentală"), "continental" );
	deepEqual( Stem("continente"), "continent" );
	deepEqual( Stem("contingent"), "contingent" );
	deepEqual( Stem("contingentului"), "contingent" );
	deepEqual( Stem("continua"), "continu" );
	deepEqual( Stem("continuai"), "continu" );
	deepEqual( Stem("continuam"), "continu" );
	deepEqual( Stem("continuare"), "continu" );
	deepEqual( Stem("continuarea"), "continu" );
	deepEqual( Stem("continuat"), "continu" );
	deepEqual( Stem("continuată"), "continu" );
	deepEqual( Stem("continuator"), "continu" );
	deepEqual( Stem("continuau"), "continu" );
	deepEqual( Stem("continuând"), "continu" );
	deepEqual( Stem("continuându"), "continu" );
	deepEqual( Stem("continuă"), "continu" );
	deepEqual( Stem("continuăm"), "continu" );
	deepEqual( Stem("continuări"), "continuăr" );
	deepEqual( Stem("continue"), "continu" );
	deepEqual( Stem("continuitate"), "continu" );
	deepEqual( Stem("continuităţii"), "continu" );
	deepEqual( Stem("continuităţile"), "continu" );
	deepEqual( Stem("continuînd"), "continuînd" );
	deepEqual( Stem("continuu"), "continuu" );
	deepEqual( Stem("continuului"), "continu" );
	deepEqual( Stem("contoare"), "contoar" );
	deepEqual( Stem("contoarele"), "contoar" );
	deepEqual( Stem("contoarelor"), "contoar" );
	deepEqual( Stem("contondent"), "contondent" );
	deepEqual( Stem("contopească"), "contop" );
	deepEqual( Stem("contopesc"), "contop" );
	deepEqual( Stem("contopeşte"), "contop" );
	deepEqual( Stem("contopind"), "contop" );
	deepEqual( Stem("contopire"), "contop" );
	deepEqual( Stem("contopirea"), "contop" );
	deepEqual( Stem("contor"), "contor" );
	deepEqual( Stem("contorizarea"), "contoriz" );
	deepEqual( Stem("contorizează"), "contoriz" );
	deepEqual( Stem("contorsionat"), "contorsion" );
	deepEqual( Stem("contorsionată"), "contorsion" );
	deepEqual( Stem("contra"), "contr" );
	deepEqual( Stem("contraargumente"), "contraargument" );
	deepEqual( Stem("contraatac"), "contraatac" );
	deepEqual( Stem("contraataca"), "contraatac" );
	deepEqual( Stem("contrabanda"), "contraband" );
	deepEqual( Stem("contrabandă"), "contraband" );
	deepEqual( Stem("contrabandişti"), "contrabandist" );
	deepEqual( Stem("contrabas"), "contrabas" );
	deepEqual( Stem("contracandidatului"), "contracandid" );
	deepEqual( Stem("contracandidaţi"), "contracandid" );
	deepEqual( Stem("contracara"), "contracar" );
	deepEqual( Stem("contracarată"), "contracar" );
	deepEqual( Stem("contracarate"), "contracar" );
	deepEqual( Stem("contract"), "contract" );
	deepEqual( Stem("contractase"), "contract" );
	deepEqual( Stem("contractat"), "contract" );
	deepEqual( Stem("contractată"), "contract" );
	deepEqual( Stem("contractate"), "contract" );
	deepEqual( Stem("contractaţi"), "contract" );
	deepEqual( Stem("contractează"), "contract" );
	deepEqual( Stem("contradictio"), "contradictio" );
	deepEqual( Stem("contradictoriu"), "contradictoriu" );
	deepEqual( Stem("contradicţia"), "contradicţ" );
	deepEqual( Stem("contradicţie"), "contradicţ" );
	deepEqual( Stem("contradicţiei"), "contradicţ" );
	deepEqual( Stem("contradicţiune"), "contradict" );
	deepEqual( Stem("contradicţiunii"), "contradict" );
	deepEqual( Stem("contramaistru"), "contramaistru" );
	deepEqual( Stem("contramaistrul"), "contramaistr" );
	deepEqual( Stem("contramaiştri"), "contramaiştr" );
	deepEqual( Stem("contramandat"), "contramand" );
	deepEqual( Stem("contrapunct"), "contrapunct" );
	deepEqual( Stem("contrar"), "contrar" );
	deepEqual( Stem("contrară"), "contr" );
	deepEqual( Stem("contrare"), "contr" );
	deepEqual( Stem("contrariază"), "contrariaz" );
	deepEqual( Stem("contrarii"), "contrar" );
	deepEqual( Stem("contrariul"), "contrar" );
	deepEqual( Stem("contrast"), "contrast" );
	deepEqual( Stem("contrastează"), "contrast" );
	deepEqual( Stem("contrastul"), "contrast" );
	deepEqual( Stem("contratimp"), "contratimp" );
	deepEqual( Stem("contravenind"), "contraven" );
	deepEqual( Stem("contravin"), "contravin" );
	deepEqual( Stem("contravine"), "contravin" );
	deepEqual( Stem("contrazică"), "contraz" );
	deepEqual( Stem("contrazice"), "contraz" );
	deepEqual( Stem("contrazicea"), "contraz" );
	deepEqual( Stem("contrazicere"), "contrazic" );
	deepEqual( Stem("contrazicerea"), "contrazic" );
	deepEqual( Stem("contraziceri"), "contrazicer" );
	deepEqual( Stem("contrazici"), "contraz" );
	deepEqual( Stem("contră"), "contr" );
	deepEqual( Stem("contribui"), "contrib" );
	deepEqual( Stem("contribuia"), "contribui" );
	deepEqual( Stem("contribuie"), "contribui" );
	deepEqual( Stem("contribuind"), "contribu" );
	deepEqual( Stem("contribuit"), "contribu" );
	deepEqual( Stem("contribuţiile"), "contribuţ" );
	deepEqual( Stem("contribuţiune"), "contribut" );
	deepEqual( Stem("control"), "control" );
	deepEqual( Stem("controla"), "control" );
	deepEqual( Stem("controlabil"), "control" );
	deepEqual( Stem("controlat"), "control" );
	deepEqual( Stem("controlând"), "control" );
	deepEqual( Stem("controlez"), "control" );
	deepEqual( Stem("controlul"), "control" );
	deepEqual( Stem("contura"), "contur" );
	deepEqual( Stem("conturam"), "contur" );
	deepEqual( Stem("conturul"), "contur" );
	deepEqual( Stem("contururile"), "conturur" );
	deepEqual( Stem("conţin"), "conţin" );
	deepEqual( Stem("conţină"), "conţin" );
	deepEqual( Stem("conţine"), "conţin" );
	deepEqual( Stem("conţinea"), "conţin" );
	deepEqual( Stem("conţineau"), "conţin" );
	deepEqual( Stem("conţinînd"), "conţinînd" );
	deepEqual( Stem("conţinut"), "conţin" );
	deepEqual( Stem("conţinută"), "conţin" );
	deepEqual( Stem("conţinute"), "conţin" );
	deepEqual( Stem("conţinutul"), "conţin" );
	deepEqual( Stem("conţinutului"), "conţin" );
	deepEqual( Stem("conţinuturi"), "conţinutur" );
	deepEqual( Stem("conţinuturile"), "conţinutur" );
	deepEqual( Stem("conţinuturilor"), "conţinutur" );
	deepEqual( Stem("conu"), "conu" );
	deepEqual( Stem("convalescent"), "convalescent" );
	deepEqual( Stem("conveargă"), "convearg" );
	deepEqual( Stem("convenabil"), "conven" );
	deepEqual( Stem("convenabilă"), "conven" );
	deepEqual( Stem("conveneam"), "conven" );
	deepEqual( Stem("conveni"), "conven" );
	deepEqual( Stem("convenind"), "conven" );
	deepEqual( Stem("convenit"), "conven" );
	deepEqual( Stem("convenţie"), "convenţ" );
	deepEqual( Stem("convenţional"), "convenţional" );
	deepEqual( Stem("convenţionale"), "convenţional" );
	deepEqual( Stem("convenţionalismul"), "convenţionalist" );
	deepEqual( Stem("convenţionalismului"), "convenţionalist" );
	deepEqual( Stem("convenţionalist"), "convenţionalist" );
	deepEqual( Stem("convenţionalistă"), "convenţionalist" );
	deepEqual( Stem("convenţionalişti"), "convenţionalist" );
	deepEqual( Stem("convenţiune"), "convent" );
	deepEqual( Stem("convenţiuni"), "convent" );
	deepEqual( Stem("convenţiunii"), "convent" );
	deepEqual( Stem("conversaţia"), "convers" );
	deepEqual( Stem("conversaţie"), "convers" );
	deepEqual( Stem("conversaţii"), "convers" );
	deepEqual( Stem("convin"), "convin" );
	deepEqual( Stem("convine"), "convin" );
	deepEqual( Stem("convingă"), "conving" );
	deepEqual( Stem("convingătoare"), "conving" );
	deepEqual( Stem("convinge"), "conving" );
	deepEqual( Stem("convingem"), "conving" );
	deepEqual( Stem("convingere"), "conving" );
	deepEqual( Stem("convingerea"), "conving" );
	deepEqual( Stem("convingeri"), "convinger" );
	deepEqual( Stem("convingerile"), "convinger" );
	deepEqual( Stem("convingi"), "conving" );
	deepEqual( Stem("convins"), "convins" );
	deepEqual( Stem("convinsă"), "convins" );
	deepEqual( Stem("convinşi"), "convinş" );
	deepEqual( Stem("convivii"), "conviv" );
	deepEqual( Stem("convocat"), "convoc" );
	deepEqual( Stem("convoi"), "convo" );
	deepEqual( Stem("convorbire"), "convorb" );
	deepEqual( Stem("convorbirea"), "convorb" );
	deepEqual( Stem("convorbiri"), "convorbir" );
	deepEqual( Stem("convorbirile"), "convorbir" );
	deepEqual( Stem("convorbirilor"), "convorbir" );
	deepEqual( Stem("convulsie"), "convuls" );
	deepEqual( Stem("convulsiile"), "convuls" );
	deepEqual( Stem("convulsiuni"), "convulsiun" );
	deepEqual( Stem("convulziv"), "convulz" );
	deepEqual( Stem("convulzive"), "convulz" );
	deepEqual( Stem("conzist"), "conzist" );
	deepEqual( Stem("cooperează"), "cooper" );
	deepEqual( Stem("coordonata"), "coordon" );
	deepEqual( Stem("coordonată"), "coordon" );
	deepEqual( Stem("coordonate"), "coordon" );
	deepEqual( Stem("coordonatele"), "coordon" );
	deepEqual( Stem("copac"), "copac" );
	deepEqual( Stem("copaci"), "copac" );
	deepEqual( Stem("copacii"), "copac" );
	deepEqual( Stem("copacilor"), "copac" );
	deepEqual( Stem("copăcei"), "copăce" );
	deepEqual( Stem("copăcel"), "copăcel" );
	deepEqual( Stem("copcile"), "copc" );
	deepEqual( Stem("copernic"), "copern" );
	deepEqual( Stem("copertă"), "copert" );
	deepEqual( Stem("coperte"), "copert" );
	deepEqual( Stem("copia"), "copi" );
	deepEqual( Stem("copiat"), "copiat" );
	deepEqual( Stem("copieze"), "copiez" );
	deepEqual( Stem("copii"), "cop" );
	deepEqual( Stem("copiii"), "copii" );
	deepEqual( Stem("copiile"), "cop" );
	deepEqual( Stem("copiilor"), "cop" );
	deepEqual( Stem("copil"), "copil" );
	deepEqual( Stem("copilaşi"), "copil" );
	deepEqual( Stem("copilărească"), "copilăr" );
	deepEqual( Stem("copilăresc"), "copilăr" );
	deepEqual( Stem("copilăreşti"), "copilăr" );
	deepEqual( Stem("copilăria"), "copilăr" );
	deepEqual( Stem("copilărie"), "copilăr" );
	deepEqual( Stem("copilăriei"), "copilăr" );
	deepEqual( Stem("copilăroasă"), "copilăr" );
	deepEqual( Stem("copilăros"), "copilăr" );
	deepEqual( Stem("copilăroşi"), "copilăr" );
	deepEqual( Stem("copilul"), "copil" );
	deepEqual( Stem("copilului"), "copil" );
	deepEqual( Stem("copioase"), "copioas" );
	deepEqual( Stem("copitele"), "copit" );
	deepEqual( Stem("copleşit"), "copleş" );
	deepEqual( Stem("copleşitoare"), "copleş" );
	deepEqual( Stem("copleşitor"), "copleş" );
	deepEqual( Stem("copoului"), "copo" );
	deepEqual( Stem("copt"), "copt" );
	deepEqual( Stem("cor"), "cor" );
	deepEqual( Stem("corabu"), "corabu" );
	deepEqual( Stem("corabule"), "corabul" );
	deepEqual( Stem("cordial"), "cordial" );
	deepEqual( Stem("cordialitate"), "cordial" );
	deepEqual( Stem("corectate"), "corect" );
	deepEqual( Stem("corectă"), "corect" );
	deepEqual( Stem("corectează"), "corect" );
	deepEqual( Stem("corectitudine"), "corectitudin" );
	deepEqual( Stem("corectiv"), "corect" );
	deepEqual( Stem("corectivă"), "corect" );
	deepEqual( Stem("corective"), "corect" );
	deepEqual( Stem("corespondent"), "corespondent" );
	deepEqual( Stem("corespondentă"), "corespondent" );
	deepEqual( Stem("corespondentul"), "corespondent" );
	deepEqual( Stem("corespondenţa"), "corespondenţ" );
	deepEqual( Stem("corespondenţă"), "corespondenţ" );
	deepEqual( Stem("corespund"), "corespund" );
	deepEqual( Stem("corespundă"), "corespund" );
	deepEqual( Stem("corespunde"), "corespund" );
	deepEqual( Stem("corespundea"), "corespund" );
	deepEqual( Stem("corespunzătoare"), "corespunz" );
	deepEqual( Stem("corespunzător"), "corespunz" );
	deepEqual( Stem("coridor"), "coridor" );
	deepEqual( Stem("corigentă"), "corigent" );
	deepEqual( Stem("corneliu"), "corneliu" );
	deepEqual( Stem("coroană"), "coroan" );
	deepEqual( Stem("corp"), "corp" );
	deepEqual( Stem("corpul"), "corp" );
	deepEqual( Stem("corpului"), "corp" );
	deepEqual( Stem("corpuri"), "corpur" );
	deepEqual( Stem("corpurile"), "corpur" );
	deepEqual( Stem("corpurilor"), "corpur" );
	deepEqual( Stem("cort"), "cort" );
	deepEqual( Stem("corturi"), "cortur" );
	deepEqual( Stem("corturile"), "cortur" );
	deepEqual( Stem("corturilor"), "cortur" );
	deepEqual( Stem("corul"), "cor" );
	deepEqual( Stem("corurilor"), "corur" );
	deepEqual( Stem("cosit"), "cosit" );
	deepEqual( Stem("cositor"), "cosit" );
	deepEqual( Stem("cosmică"), "cosmic" );
	deepEqual( Stem("cosmologie"), "cosmolog" );
	deepEqual( Stem("costa"), "cost" );
	deepEqual( Stem("costă"), "cost" );
	deepEqual( Stem("costică"), "costic" );
	deepEqual( Stem("costişă"), "costiş" );
	deepEqual( Stem("costului"), "cost" );
	deepEqual( Stem("costum"), "costum" );
	deepEqual( Stem("costume"), "costum" );
	deepEqual( Stem("costumul"), "costum" );
	deepEqual( Stem("coşciugele"), "coşciug" );
	deepEqual( Stem("coşciugul"), "coşciug" );
	deepEqual( Stem("coşul"), "coş" );
	deepEqual( Stem("coşuleţe"), "coşuleţ" );
	deepEqual( Stem("cot"), "cot" );
	deepEqual( Stem("cota"), "cot" );
	deepEqual( Stem("cotârcea"), "cotârc" );
	deepEqual( Stem("cotă"), "cot" );
	deepEqual( Stem("cotele"), "cot" );
	deepEqual( Stem("cotidian"), "cotidian" );
	deepEqual( Stem("cotidiane"), "cotidian" );
	deepEqual( Stem("cotidianelor"), "cotidian" );
	deepEqual( Stem("cotidiene"), "cotidien" );
	deepEqual( Stem("cotilioanele"), "cotilioan" );
	deepEqual( Stem("cotitura"), "cotitur" );
	deepEqual( Stem("cotitură"), "cotit" );
	deepEqual( Stem("cotroceni"), "cotrocen" );
	deepEqual( Stem("cotropitoare"), "cotrop" );
	deepEqual( Stem("cotul"), "cot" );
	deepEqual( Stem("country"), "country" );
	deepEqual( Stem("covârşitoare"), "covârş" );
	deepEqual( Stem("coviltir"), "coviltir" );
	deepEqual( Stem("coviltire"), "covilt" );
	deepEqual( Stem("covor"), "covor" );
	deepEqual( Stem("cracovia"), "cracov" );
	deepEqual( Stem("craiova"), "craiov" );
	deepEqual( Stem("craiului"), "crai" );
	deepEqual( Stem("cranii"), "cran" );
	deepEqual( Stem("craniu"), "craniu" );
	deepEqual( Stem("craniul"), "cran" );
	deepEqual( Stem("crapă"), "crap" );
	deepEqual( Stem("crasă"), "cras" );
	deepEqual( Stem("cratere"), "crat" );
	deepEqual( Stem("cravaşă"), "cravaş" );
	deepEqual( Stem("cravata"), "cravat" );
	deepEqual( Stem("cravată"), "cravat" );
	deepEqual( Stem("cravate"), "cravat" );
	deepEqual( Stem("cravatei"), "cravat" );
	deepEqual( Stem("crâmpeie"), "crâmpei" );
	deepEqual( Stem("crâncen"), "crâncen" );
	deepEqual( Stem("crâncenă"), "crâncen" );
	deepEqual( Stem("crâşmă"), "crâşm" );
	deepEqual( Stem("crăci"), "crăc" );
	deepEqual( Stem("crăcilor"), "crăc" );
	deepEqual( Stem("crăpa"), "crăp" );
	deepEqual( Stem("crăpate"), "crăpat" );
	deepEqual( Stem("crea"), "cre" );
	deepEqual( Stem("creadă"), "cread" );
	deepEqual( Stem("creangă"), "creang" );
	deepEqual( Stem("creare"), "crear" );
	deepEqual( Stem("crearea"), "crear" );
	deepEqual( Stem("crease"), "creas" );
	deepEqual( Stem("creasta"), "creast" );
	deepEqual( Stem("creastă"), "creast" );
	deepEqual( Stem("creat"), "creat" );
	deepEqual( Stem("creată"), "creat" );
	deepEqual( Stem("create"), "creat" );
	deepEqual( Stem("creatoare"), "creatoar" );
	deepEqual( Stem("creator"), "creator" );
	deepEqual( Stem("creatorul"), "creator" );
	deepEqual( Stem("creaturii"), "creatur" );
	deepEqual( Stem("creaţia"), "creaţ" );
	deepEqual( Stem("creaţie"), "creaţ" );
	deepEqual( Stem("creaţiune"), "creaţiun" );
	deepEqual( Stem("creaţiunii"), "creaţiun" );
	deepEqual( Stem("crează"), "creaz" );
	deepEqual( Stem("creând"), "creând" );
	deepEqual( Stem("creăm"), "cre" );
	deepEqual( Stem("creării"), "creăr" );
	deepEqual( Stem("cred"), "cred" );
	deepEqual( Stem("crede"), "cred" );
	deepEqual( Stem("credea"), "cred" );
	deepEqual( Stem("credeai"), "cred" );
	deepEqual( Stem("credeam"), "cred" );
	deepEqual( Stem("credeau"), "cred" );
	deepEqual( Stem("credem"), "cred" );
	deepEqual( Stem("credeţi"), "cred" );
	deepEqual( Stem("credincioase"), "credinc" );
	deepEqual( Stem("credincios"), "credinc" );
	deepEqual( Stem("credincioşi"), "credinc" );
	deepEqual( Stem("credinţa"), "credinţ" );
	deepEqual( Stem("credinţă"), "credinţ" );
	deepEqual( Stem("credinţe"), "credinţ" );
	deepEqual( Stem("credinţele"), "credinţ" );
	deepEqual( Stem("creditor"), "credit" );
	deepEqual( Stem("credulitatea"), "credul" );
	deepEqual( Stem("creează"), "creeaz" );
	deepEqual( Stem("creez"), "creez" );
	deepEqual( Stem("creeze"), "creez" );
	deepEqual( Stem("creier"), "creier" );
	deepEqual( Stem("creierii"), "creier" );
	deepEqual( Stem("creierul"), "creier" );
	deepEqual( Stem("creierului"), "creier" );
	deepEqual( Stem("creioane"), "creioan" );
	deepEqual( Stem("creionul"), "creion" );
	deepEqual( Stem("cremei"), "creme" );
	deepEqual( Stem("creneluri"), "crenelur" );
	deepEqual( Stem("crepusculare"), "crepuscul" );
	deepEqual( Stem("crepusculului"), "crepuscul" );
	deepEqual( Stem("cresc"), "cresc" );
	deepEqual( Stem("crescând"), "cresc" );
	deepEqual( Stem("crescendo"), "crescendo" );
	deepEqual( Stem("crescut"), "crescut" );
	deepEqual( Stem("crescută"), "crescut" );
	deepEqual( Stem("crescute"), "crescut" );
	deepEqual( Stem("crescuţi"), "crescuţ" );
	deepEqual( Stem("cresta"), "crest" );
	deepEqual( Stem("crestătură"), "crestăt" );
	deepEqual( Stem("crestături"), "crestătur" );
	deepEqual( Stem("creste"), "crest" );
	deepEqual( Stem("creşe"), "creş" );
	deepEqual( Stem("creşte"), "creşt" );
	deepEqual( Stem("creştea"), "creşt" );
	deepEqual( Stem("creşteau"), "creşt" );
	deepEqual( Stem("creştere"), "creşt" );
	deepEqual( Stem("creşterea"), "creşt" );
	deepEqual( Stem("creşteri"), "creşter" );
	deepEqual( Stem("creşterile"), "creşter" );
	deepEqual( Stem("creştet"), "creştet" );
	deepEqual( Stem("creşteţi"), "creşt" );
	deepEqual( Stem("creştin"), "creştin" );
	deepEqual( Stem("creştină"), "creştin" );
	deepEqual( Stem("creştinătăţii"), "creştinătăţ" );
	deepEqual( Stem("creştine"), "creştin" );
	deepEqual( Stem("creştinească"), "creştin" );
	deepEqual( Stem("creştini"), "creştin" );
	deepEqual( Stem("creştinism"), "creştinist" );
	deepEqual( Stem("creştinismul"), "creştinist" );
	deepEqual( Stem("creştinismului"), "creştinist" );
	deepEqual( Stem("creta"), "cret" );
	deepEqual( Stem("cretină"), "cretin" );
	deepEqual( Stem("cretinilor"), "cretin" );
	deepEqual( Stem("cretinizînd"), "cretinizînd" );
	deepEqual( Stem("creţ"), "creţ" );
	deepEqual( Stem("crevete"), "crevet" );
	deepEqual( Stem("creveţi"), "crev" );
	deepEqual( Stem("crez"), "crez" );
	deepEqual( Stem("crezând"), "crez" );
	deepEqual( Stem("crezându"), "crez" );
	deepEqual( Stem("crezi"), "crez" );
	deepEqual( Stem("crezînd"), "crezînd" );
	deepEqual( Stem("crezuse"), "crez" );
	deepEqual( Stem("crezusem"), "crez" );
	deepEqual( Stem("crezuseră"), "crez" );
	deepEqual( Stem("crezut"), "crezut" );
	deepEqual( Stem("crezută"), "crezut" );
	deepEqual( Stem("crichet"), "crichet" );
	deepEqual( Stem("crimă"), "crim" );
	deepEqual( Stem("crime"), "crim" );
	deepEqual( Stem("crimei"), "crime" );
	deepEqual( Stem("crimele"), "crim" );
	deepEqual( Stem("crin"), "crin" );
	deepEqual( Stem("crini"), "crin" );
	deepEqual( Stem("crispat"), "crispat" );
	deepEqual( Stem("crispată"), "crispat" );
	deepEqual( Stem("crispaţi"), "crisp" );
	deepEqual( Stem("cristal"), "cristal" );
	deepEqual( Stem("cristalină"), "cristalin" );
	deepEqual( Stem("cristalizare"), "cristaliz" );
	deepEqual( Stem("cristalizată"), "cristaliz" );
	deepEqual( Stem("cristaluri"), "cristalur" );
	deepEqual( Stem("criterii"), "criter" );
	deepEqual( Stem("criteriile"), "criter" );
	deepEqual( Stem("criteriu"), "criteriu" );
	deepEqual( Stem("criteriul"), "criter" );
	deepEqual( Stem("critic"), "critic" );
	deepEqual( Stem("critica"), "critic" );
	deepEqual( Stem("critică"), "critic" );
	deepEqual( Stem("criticăm"), "critic" );
	deepEqual( Stem("critice"), "critic" );
	deepEqual( Stem("criticii"), "critic" );
	deepEqual( Stem("criticilor"), "critic" );
	deepEqual( Stem("criticismul"), "criticist" );
	deepEqual( Stem("criticismului"), "criticist" );
	deepEqual( Stem("criticul"), "critic" );
	deepEqual( Stem("criza"), "criz" );
	deepEqual( Stem("criză"), "criz" );
	deepEqual( Stem("crize"), "criz" );
	deepEqual( Stem("crîcnire"), "crîcn" );
	deepEqual( Stem("croia"), "croi" );
	deepEqual( Stem("croită"), "croit" );
	deepEqual( Stem("croitoreasa"), "croitoreas" );
	deepEqual( Stem("croitoreasă"), "croitoreas" );
	deepEqual( Stem("cromolitografie"), "cromolitograf" );
	deepEqual( Stem("cromolitografiei"), "cromolitograf" );
	deepEqual( Stem("cronic"), "cronic" );
	deepEqual( Stem("cronicar"), "cronicar" );
	deepEqual( Stem("cronică"), "cronic" );
	deepEqual( Stem("cronice"), "cronic" );
	deepEqual( Stem("cross"), "cross" );
	deepEqual( Stem("cruce"), "cruc" );
	deepEqual( Stem("cruceşte"), "cruc" );
	deepEqual( Stem("cruci"), "cruc" );
	deepEqual( Stem("crucit"), "crucit" );
	deepEqual( Stem("crud"), "crud" );
	deepEqual( Stem("crudă"), "crud" );
	deepEqual( Stem("crude"), "crud" );
	deepEqual( Stem("crunt"), "crunt" );
	deepEqual( Stem("cruntă"), "crunt" );
	deepEqual( Stem("cruţare"), "cruţ" );
	deepEqual( Stem("cruţe"), "cruţ" );
	deepEqual( Stem("cruzi"), "cruz" );
	deepEqual( Stem("cruzimea"), "cruzim" );
	deepEqual( Stem("ctitorul"), "ctitor" );
	deepEqual( Stem("cu"), "cu" );
	deepEqual( Stem("cuburi"), "cubur" );
	deepEqual( Stem("cucerească"), "cucer" );
	deepEqual( Stem("cucereşti"), "cucer" );
	deepEqual( Stem("cucerire"), "cucer" );
	deepEqual( Stem("cucerirea"), "cucer" );
	deepEqual( Stem("cucerise"), "cucer" );
	deepEqual( Stem("cucerisem"), "cucer" );
	deepEqual( Stem("cucerit"), "cucer" );
	deepEqual( Stem("cucerite"), "cucer" );
	deepEqual( Stem("cuceritor"), "cucer" );
	deepEqual( Stem("cuceritori"), "cucer" );
	deepEqual( Stem("cucoană"), "cucoan" );
	deepEqual( Stem("cucoane"), "cucoan" );
	deepEqual( Stem("cucoanele"), "cucoan" );
	deepEqual( Stem("cugetare"), "cuget" );
	deepEqual( Stem("cugetarea"), "cuget" );
	deepEqual( Stem("cugetării"), "cugetăr" );
	deepEqual( Stem("cugetători"), "cuget" );
	deepEqual( Stem("cugetătorii"), "cuget" );
	deepEqual( Stem("cui"), "cui" );
	deepEqual( Stem("cuib"), "cuib" );
	deepEqual( Stem("cuibar"), "cuibar" );
	deepEqual( Stem("cuibarul"), "cuibar" );
	deepEqual( Stem("cuibul"), "cuib" );
	deepEqual( Stem("cuie"), "cui" );
	deepEqual( Stem("cuişoare"), "cuişoar" );
	deepEqual( Stem("cuiva"), "cuiv" );
	deepEqual( Stem("culc"), "culc" );
	deepEqual( Stem("culca"), "culc" );
	deepEqual( Stem("culcat"), "culcat" );
	deepEqual( Stem("culcată"), "culcat" );
	deepEqual( Stem("culcate"), "culcat" );
	deepEqual( Stem("culcaţi"), "culc" );
	deepEqual( Stem("culcă"), "culc" );
	deepEqual( Stem("culce"), "culc" );
	deepEqual( Stem("culcuş"), "culcuş" );
	deepEqual( Stem("culcuşul"), "culcuş" );
	deepEqual( Stem("culcuşurile"), "culcuşur" );
	deepEqual( Stem("culeagă"), "culeag" );
	deepEqual( Stem("culeasă"), "culeas" );
	deepEqual( Stem("culeg"), "culeg" );
	deepEqual( Stem("culegător"), "culeg" );
	deepEqual( Stem("culege"), "culeg" );
	deepEqual( Stem("culegere"), "culeg" );
	deepEqual( Stem("culeşi"), "culeş" );
	deepEqual( Stem("culise"), "culis" );
	deepEqual( Stem("culiselor"), "culis" );
	deepEqual( Stem("culme"), "culm" );
	deepEqual( Stem("culmea"), "culm" );
	deepEqual( Stem("culmi"), "culm" );
	deepEqual( Stem("culmii"), "culm" );
	deepEqual( Stem("culmile"), "culm" );
	deepEqual( Stem("culmilor"), "culm" );
	deepEqual( Stem("culminaţia"), "culmin" );
	deepEqual( Stem("culoar"), "culoar" );
	deepEqual( Stem("culoare"), "culoar" );
	deepEqual( Stem("culoarea"), "culoar" );
	deepEqual( Stem("culoarele"), "culoar" );
	deepEqual( Stem("culoarul"), "culoar" );
	deepEqual( Stem("culori"), "culor" );
	deepEqual( Stem("culorile"), "culor" );
	deepEqual( Stem("cult"), "cult" );
	deepEqual( Stem("culte"), "cult" );
	deepEqual( Stem("cultion"), "cultion" );
	deepEqual( Stem("cultiva"), "cultiv" );
	deepEqual( Stem("cultivarea"), "cultiv" );
	deepEqual( Stem("cultivat"), "cultiv" );
	deepEqual( Stem("cultivată"), "cultiv" );
	deepEqual( Stem("cultivate"), "cultiv" );
	deepEqual( Stem("cultivator"), "cultiv" );
	deepEqual( Stem("cultivaţi"), "cultiv" );
	deepEqual( Stem("cultivaţilor"), "cultiv" );
	deepEqual( Stem("cultivă"), "cultiv" );
	deepEqual( Stem("cultivăm"), "cultiv" );
	deepEqual( Stem("cultivării"), "cultivăr" );
	deepEqual( Stem("cultul"), "cult" );
	deepEqual( Stem("cultulen"), "cultulen" );
	deepEqual( Stem("cultura"), "cultur" );
	deepEqual( Stem("cultural"), "cultural" );
	deepEqual( Stem("culturală"), "cultural" );
	deepEqual( Stem("culturale"), "cultural" );
	deepEqual( Stem("cultură"), "cult" );
	deepEqual( Stem("culturăen"), "culturăen" );
	deepEqual( Stem("culturi"), "cultur" );
	deepEqual( Stem("culturii"), "cultur" );
	deepEqual( Stem("culturiien"), "culturiien" );
	deepEqual( Stem("culţien"), "culţien" );
	deepEqual( Stem("cum"), "cum" );
	deepEqual( Stem("cumetrii"), "cumetr" );
	deepEqual( Stem("cuminte"), "cumint" );
	deepEqual( Stem("cuminţele"), "cuminţ" );
	deepEqual( Stem("cuminţenia"), "cuminţen" );
	deepEqual( Stem("cuminţenie"), "cuminţen" );
	deepEqual( Stem("cuminţi"), "cuminţ" );
	deepEqual( Stem("cumnat"), "cumnat" );
	deepEqual( Stem("cumnată"), "cumnat" );
	deepEqual( Stem("cumnatei"), "cumnat" );
	deepEqual( Stem("cumnatu"), "cumnatu" );
	deepEqual( Stem("cumpănă"), "cumpăn" );
	deepEqual( Stem("cumpănesc"), "cumpăn" );
	deepEqual( Stem("cumpănire"), "cumpăn" );
	deepEqual( Stem("cumpănită"), "cumpăn" );
	deepEqual( Stem("cumpănite"), "cumpăn" );
	deepEqual( Stem("cumpăra"), "cumpăr" );
	deepEqual( Stem("cumpăram"), "cumpăr" );
	deepEqual( Stem("cumpărase"), "cumpăr" );
	deepEqual( Stem("cumpărat"), "cumpăr" );
	deepEqual( Stem("cumpărată"), "cumpăr" );
	deepEqual( Stem("cumpărate"), "cumpăr" );
	deepEqual( Stem("cumpără"), "cumpăr" );
	deepEqual( Stem("cumpărăm"), "cumpăr" );
	deepEqual( Stem("cumpărături"), "cumpărătur" );
	deepEqual( Stem("cumpere"), "cump" );
	deepEqual( Stem("cumperi"), "cumper" );
	deepEqual( Stem("cumplit"), "cumplit" );
	deepEqual( Stem("cumplită"), "cumplit" );
	deepEqual( Stem("cumplite"), "cumplit" );
	deepEqual( Stem("cumsecade"), "cumsecad" );
	deepEqual( Stem("cumva"), "cumv" );
	deepEqual( Stem("cunoască"), "cunoasc" );
	deepEqual( Stem("cunoaşte"), "cunoaşt" );
	deepEqual( Stem("cunoaştem"), "cunoaşt" );
	deepEqual( Stem("cunoaştere"), "cunoaşt" );
	deepEqual( Stem("cunoaşterea"), "cunoaşt" );
	deepEqual( Stem("cunoaşteri"), "cunoaşter" );
	deepEqual( Stem("cunoaşterii"), "cunoaşter" );
	deepEqual( Stem("cunoaşteţi"), "cunoaşt" );
	deepEqual( Stem("cunosc"), "cunosc" );
	deepEqual( Stem("cunoscând"), "cunosc" );
	deepEqual( Stem("cunoscători"), "cunosc" );
	deepEqual( Stem("cunoscuse"), "cunosc" );
	deepEqual( Stem("cunoscusem"), "cunosc" );
	deepEqual( Stem("cunoscut"), "cunosc" );
	deepEqual( Stem("cunoscuta"), "cunosc" );
	deepEqual( Stem("cunoscută"), "cunosc" );
	deepEqual( Stem("cunoscute"), "cunosc" );
	deepEqual( Stem("cunoscuţi"), "cunoscuţ" );
	deepEqual( Stem("cunoştea"), "cunoşt" );
	deepEqual( Stem("cunoşteam"), "cunoşt" );
	deepEqual( Stem("cunoştem"), "cunoşt" );
	deepEqual( Stem("cunoşti"), "cunoşt" );
	deepEqual( Stem("cunoştinţa"), "cunoştinţ" );
	deepEqual( Stem("cunoştinţă"), "cunoştinţ" );
	deepEqual( Stem("cunoştinţe"), "cunoştinţ" );
	deepEqual( Stem("cunoştinţei"), "cunoştinţe" );
	deepEqual( Stem("cunoştinţele"), "cunoştinţ" );
	deepEqual( Stem("cunoştinţelor"), "cunoştinţ" );
	deepEqual( Stem("cunoştinţi"), "cunoştinţ" );
	deepEqual( Stem("cupă"), "cup" );
	deepEqual( Stem("cupe"), "cup" );
	deepEqual( Stem("cupolă"), "cupol" );
	deepEqual( Stem("cupolei"), "cupole" );
	deepEqual( Stem("cuprinde"), "cuprind" );
	deepEqual( Stem("cuprindea"), "cuprind" );
	deepEqual( Stem("cuprins"), "cuprins" );
	deepEqual( Stem("cuprinsă"), "cuprins" );
	deepEqual( Stem("cuprinse"), "cuprin" );
	deepEqual( Stem("cuprinsul"), "cuprins" );
	deepEqual( Stem("cuprinzătoare"), "cuprinz" );
	deepEqual( Stem("cuptorul"), "cuptor" );
	deepEqual( Stem("curagios"), "curag" );
	deepEqual( Stem("curaj"), "curaj" );
	deepEqual( Stem("curajos"), "curaj" );
	deepEqual( Stem("curajoşi"), "curaj" );
	deepEqual( Stem("curajul"), "curaj" );
	deepEqual( Stem("curat"), "curat" );
	deepEqual( Stem("curată"), "curat" );
	deepEqual( Stem("curaţi"), "cur" );
	deepEqual( Stem("curând"), "curând" );
	deepEqual( Stem("curăţat"), "curăţ" );
	deepEqual( Stem("curăţenie"), "curăţen" );
	deepEqual( Stem("curăţi"), "curăţ" );
	deepEqual( Stem("curăţim"), "curăţ" );
	deepEqual( Stem("curăţind"), "curăţ" );
	deepEqual( Stem("curbă"), "curb" );
	deepEqual( Stem("curbe"), "curb" );
	deepEqual( Stem("curcan"), "curcan" );
	deepEqual( Stem("curcanului"), "curcan" );
	deepEqual( Stem("curea"), "cur" );
	deepEqual( Stem("cureaua"), "cureau" );
	deepEqual( Stem("curent"), "curent" );
	deepEqual( Stem("curentă"), "curent" );
	deepEqual( Stem("curente"), "curent" );
	deepEqual( Stem("curentul"), "curent" );
	deepEqual( Stem("curentului"), "curent" );
	deepEqual( Stem("cureţe"), "cureţ" );
	deepEqual( Stem("curg"), "curg" );
	deepEqual( Stem("curgă"), "curg" );
	deepEqual( Stem("curge"), "curg" );
	deepEqual( Stem("curgerii"), "curger" );
	deepEqual( Stem("curiaţi"), "curiaţ" );
	deepEqual( Stem("curieri"), "curier" );
	deepEqual( Stem("curioasă"), "curioas" );
	deepEqual( Stem("curioase"), "curioas" );
	deepEqual( Stem("curiozitate"), "curioz" );
	deepEqual( Stem("curiozitatea"), "curioz" );
	deepEqual( Stem("curiozităţi"), "curioz" );
	deepEqual( Stem("curmezişă"), "curmeziş" );
	deepEqual( Stem("curs"), "curs" );
	deepEqual( Stem("cursă"), "curs" );
	deepEqual( Stem("curse"), "cur" );
	deepEqual( Stem("cursul"), "curs" );
	deepEqual( Stem("cursului"), "curs" );
	deepEqual( Stem("cursuri"), "cursur" );
	deepEqual( Stem("cursurile"), "cursur" );
	deepEqual( Stem("curte"), "curt" );
	deepEqual( Stem("curtea"), "curt" );
	deepEqual( Stem("curtenilor"), "curten" );
	deepEqual( Stem("curţi"), "curţ" );
	deepEqual( Stem("curţile"), "curţ" );
	deepEqual( Stem("cusur"), "cusur" );
	deepEqual( Stem("cusururile"), "cusurur" );
	deepEqual( Stem("cusut"), "cusut" );
	deepEqual( Stem("cuşcă"), "cuşc" );
	deepEqual( Stem("cutare"), "cutar" );
	deepEqual( Stem("cută"), "cut" );
	deepEqual( Stem("cute"), "cut" );
	deepEqual( Stem("cuteza"), "cutez" );
	deepEqual( Stem("cutremur"), "cutremur" );
	deepEqual( Stem("cutremurare"), "cutremur" );
	deepEqual( Stem("cutremurat"), "cutremur" );
	deepEqual( Stem("cutremuraţi"), "cutremur" );
	deepEqual( Stem("cuţit"), "cuţit" );
	deepEqual( Stem("cuţite"), "cuţit" );
	deepEqual( Stem("cuţitul"), "cuţit" );
	deepEqual( Stem("cuvânt"), "cuvânt" );
	deepEqual( Stem("cuvântul"), "cuvânt" );
	deepEqual( Stem("cuvântului"), "cuvânt" );
	deepEqual( Stem("cuvenea"), "cuven" );
	deepEqual( Stem("cuvenit"), "cuven" );
	deepEqual( Stem("cuvenită"), "cuven" );
	deepEqual( Stem("cuvertura"), "cuvertur" );
	deepEqual( Stem("cuvertură"), "cuvert" );
	deepEqual( Stem("cuviincios"), "cuviinc" );
	deepEqual( Stem("cuviinţă"), "cuviinţ" );
	deepEqual( Stem("cuvin"), "cuvin" );
	deepEqual( Stem("cuvine"), "cuvin" );
	deepEqual( Stem("cuvinte"), "cuvint" );
	deepEqual( Stem("cuvintele"), "cuvint" );
	deepEqual( Stem("cuvintelor"), "cuvint" );
	deepEqual( Stem("cvadridimensională"), "cvadridimensional" );
	deepEqual( Stem("cvartetului"), "cvartet" );
	deepEqual( Stem("cyrano"), "cyrano" );
	deepEqual( Stem("d"), "d" );
	deepEqual( Stem("da"), "da" );
	deepEqual( Stem("daa"), "daa" );
	deepEqual( Stem("dac"), "dac" );
	deepEqual( Stem("dacă"), "dac" );
	deepEqual( Stem("daco"), "daco" );
	deepEqual( Stem("dactilografiarea"), "dactilografiar" );
	deepEqual( Stem("dai"), "dai" );
	deepEqual( Stem("daltonişti"), "daltonist" );
	deepEqual( Stem("daltoniştii"), "daltonist" );
	deepEqual( Stem("dam"), "dam" );
	deepEqual( Stem("dama"), "dam" );
	deepEqual( Stem("damă"), "dam" );
	deepEqual( Stem("damele"), "dam" );
	deepEqual( Stem("dancinguri"), "dancingur" );
	deepEqual( Stem("danezilor"), "danez" );
	deepEqual( Stem("danie"), "dan" );
	deepEqual( Stem("dans"), "dans" );
	deepEqual( Stem("dansa"), "dans" );
	deepEqual( Stem("dansam"), "dans" );
	deepEqual( Stem("dansat"), "dansat" );
	deepEqual( Stem("dansatoare"), "dansat" );
	deepEqual( Stem("dansator"), "dansat" );
	deepEqual( Stem("dansatorii"), "dansat" );
	deepEqual( Stem("dansatorul"), "dansat" );
	deepEqual( Stem("dansau"), "dans" );
	deepEqual( Stem("dansăm"), "dans" );
	deepEqual( Stem("dansează"), "dans" );
	deepEqual( Stem("dansez"), "dans" );
	deepEqual( Stem("danseze"), "dans" );
	deepEqual( Stem("dansul"), "dans" );
	deepEqual( Stem("dansului"), "dans" );
	deepEqual( Stem("dansuri"), "dansur" );
	deepEqual( Stem("dantelată"), "dantel" );
	deepEqual( Stem("dantelă"), "dantel" );
	deepEqual( Stem("danţul"), "danţ" );
	deepEqual( Stem("dar"), "dar" );
	deepEqual( Stem("darămite"), "darăm" );
	deepEqual( Stem("dare"), "dar" );
	deepEqual( Stem("darul"), "dar" );
	deepEqual( Stem("daruri"), "darur" );
	deepEqual( Stem("das"), "das" );
	deepEqual( Stem("dascăli"), "dascăl" );
	deepEqual( Stem("dascălul"), "dascăl" );
	deepEqual( Stem("dat"), "dat" );
	deepEqual( Stem("data"), "dat" );
	deepEqual( Stem("datat"), "datat" );
	deepEqual( Stem("dată"), "dat" );
	deepEqual( Stem("date"), "dat" );
	deepEqual( Stem("datele"), "dat" );
	deepEqual( Stem("datini"), "datin" );
	deepEqual( Stem("datoare"), "datoar" );
	deepEqual( Stem("dator"), "dator" );
	deepEqual( Stem("datoresc"), "dator" );
	deepEqual( Stem("datoreşte"), "dator" );
	deepEqual( Stem("datoria"), "dator" );
	deepEqual( Stem("datorii"), "dator" );
	deepEqual( Stem("datoriile"), "dator" );
	deepEqual( Stem("datorită"), "dator" );
	deepEqual( Stem("datul"), "dat" );
	deepEqual( Stem("daţi"), "daţ" );
	deepEqual( Stem("dau"), "dau" );
	deepEqual( Stem("daumesnil"), "daumesnil" );
	deepEqual( Stem("david"), "david" );
	deepEqual( Stem("dâmb"), "dâmb" );
	deepEqual( Stem("dâmbovicioara"), "dâmbovicioar" );
	deepEqual( Stem("dâmbovicioarei"), "dâmbovicioare" );
	deepEqual( Stem("dâmboviţa"), "dâmboviţ" );
	deepEqual( Stem("dâmbul"), "dâmb" );
	deepEqual( Stem("dâmburi"), "dâmbur" );
	deepEqual( Stem("dâmburile"), "dâmbur" );
	deepEqual( Stem("dând"), "dând" );
	deepEqual( Stem("dându"), "dându" );
	deepEqual( Stem("dânsa"), "dâns" );
	deepEqual( Stem("dânsele"), "dân" );
	deepEqual( Stem("dânsul"), "dâns" );
	deepEqual( Stem("dânşii"), "dânş" );
	deepEqual( Stem("dâră"), "dâr" );
	deepEqual( Stem("dârste"), "dârst" );
	deepEqual( Stem("dârz"), "dârz" );
	deepEqual( Stem("dârză"), "dârz" );
	deepEqual( Stem("dă"), "dă" );
	deepEqual( Stem("dădea"), "dăd" );
	deepEqual( Stem("dădeai"), "dădea" );
	deepEqual( Stem("dădeam"), "dădeam" );
	deepEqual( Stem("dădeau"), "dădeau" );
	deepEqual( Stem("dădu"), "dădu" );
	deepEqual( Stem("dăduse"), "dădus" );
	deepEqual( Stem("dăinuia"), "dăinui" );
	deepEqual( Stem("dăinuieşte"), "dăinui" );
	deepEqual( Stem("dăm"), "dăm" );
	deepEqual( Stem("dănciuci"), "dănciuc" );
	deepEqual( Stem("dănciucii"), "dănciuc" );
	deepEqual( Stem("dărâma"), "dărâm" );
	deepEqual( Stem("dărâme"), "dărâm" );
	deepEqual( Stem("dărui"), "dăru" );
	deepEqual( Stem("dăruieşte"), "dărui" );
	deepEqual( Stem("dăruise"), "dăru" );
	deepEqual( Stem("dăruit"), "dăruit" );
	deepEqual( Stem("dăsfă"), "dăsf" );
	deepEqual( Stem("dătătoare"), "dătat" );
	deepEqual( Stem("dăţi"), "dăţ" );
	deepEqual( Stem("dăunăzi"), "dăunăz" );
	deepEqual( Stem("de"), "de" );
	deepEqual( Stem("dea"), "dea" );
	deepEqual( Stem("deal"), "deal" );
	deepEqual( Stem("dealtfel"), "dealtfel" );
	deepEqual( Stem("dealtminteri"), "dealtminter" );
	deepEqual( Stem("dealul"), "deal" );
	deepEqual( Stem("dealului"), "deal" );
	deepEqual( Stem("dealuri"), "dealur" );
	deepEqual( Stem("dealurile"), "dealur" );
	deepEqual( Stem("dealurilor"), "dealur" );
	deepEqual( Stem("deasupra"), "deasupr" );
	deepEqual( Stem("debandada"), "debandad" );
	deepEqual( Stem("debarcării"), "debarcăr" );
	deepEqual( Stem("debitantul"), "debit" );
	deepEqual( Stem("debitanţii"), "debitanţ" );
	deepEqual( Stem("debitează"), "debit" );
	deepEqual( Stem("debitul"), "debit" );
	deepEqual( Stem("debordeze"), "debord" );
	deepEqual( Stem("debutant"), "debut" );
	deepEqual( Stem("decât"), "decât" );
	deepEqual( Stem("decembrie"), "decembr" );
	deepEqual( Stem("decenii"), "decen" );
	deepEqual( Stem("decent"), "decent" );
	deepEqual( Stem("decenţi"), "decenţ" );
	deepEqual( Stem("decepţia"), "decepţ" );
	deepEqual( Stem("decepţii"), "decepţ" );
	deepEqual( Stem("decepţionat"), "decepţion" );
	deepEqual( Stem("decepţionată"), "decepţion" );
	deepEqual( Stem("decerna"), "decern" );
	deepEqual( Stem("decernarea"), "decern" );
	deepEqual( Stem("decernării"), "decernăr" );
	deepEqual( Stem("deces"), "deces" );
	deepEqual( Stem("deci"), "dec" );
	deepEqual( Stem("decibeli"), "decibel" );
	deepEqual( Stem("decid"), "decid" );
	deepEqual( Stem("decidabilă"), "decid" );
	deepEqual( Stem("decidabile"), "decid" );
	deepEqual( Stem("decidabilitate"), "decid" );
	deepEqual( Stem("decidă"), "decid" );
	deepEqual( Stem("decide"), "decid" );
	deepEqual( Stem("decideau"), "decid" );
	deepEqual( Stem("decidem"), "decid" );
	deepEqual( Stem("deciderea"), "decid" );
	deepEqual( Stem("decideţi"), "decid" );
	deepEqual( Stem("decimat"), "decim" );
	deepEqual( Stem("decimată"), "decim" );
	deepEqual( Stem("decis"), "decis" );
	deepEqual( Stem("decisă"), "decis" );
	deepEqual( Stem("decise"), "decis" );
	deepEqual( Stem("decisen"), "decisen" );
	deepEqual( Stem("deciseseră"), "dec" );
	deepEqual( Stem("decisiv"), "decis" );
	deepEqual( Stem("decisivă"), "decis" );
	deepEqual( Stem("decişi"), "deciş" );
	deepEqual( Stem("decizia"), "deciz" );
	deepEqual( Stem("decît"), "decît" );
	deepEqual( Stem("declanşeze"), "declanş" );
	deepEqual( Stem("declar"), "declar" );
	deepEqual( Stem("declarat"), "declar" );
	deepEqual( Stem("declarate"), "declar" );
	deepEqual( Stem("declarând"), "declar" );
	deepEqual( Stem("declară"), "decl" );
	deepEqual( Stem("declare"), "decl" );
	deepEqual( Stem("declasaţii"), "declas" );
	deepEqual( Stem("declasările"), "declasăr" );
	deepEqual( Stem("decolorată"), "decolor" );
	deepEqual( Stem("decoltată"), "decolt" );
	deepEqual( Stem("decor"), "decor" );
	deepEqual( Stem("decorat"), "decor" );
	deepEqual( Stem("decorative"), "decor" );
	deepEqual( Stem("decretau"), "decret" );
	deepEqual( Stem("decupăm"), "decup" );
	deepEqual( Stem("decurg"), "decurg" );
	deepEqual( Stem("decurge"), "decurg" );
	deepEqual( Stem("decurs"), "decurs" );
	deepEqual( Stem("decursul"), "decurs" );
	deepEqual( Stem("deda"), "ded" );
	deepEqual( Stem("dedau"), "dedau" );
	deepEqual( Stem("dedesubt"), "dedesubt" );
	deepEqual( Stem("dedublat"), "dedubl" );
	deepEqual( Stem("dedublate"), "dedubl" );
	deepEqual( Stem("deduc"), "deduc" );
	deepEqual( Stem("deducând"), "deduc" );
	deepEqual( Stem("deducă"), "deduc" );
	deepEqual( Stem("deduce"), "deduc" );
	deepEqual( Stem("deducea"), "deduc" );
	deepEqual( Stem("deducem"), "deduc" );
	deepEqual( Stem("deducerea"), "deduc" );
	deepEqual( Stem("deduceţi"), "deduc" );
	deepEqual( Stem("deductiv"), "deduct" );
	deepEqual( Stem("deductivă"), "deduct" );
	deepEqual( Stem("deductive"), "deduct" );
	deepEqual( Stem("deducţiunea"), "deduct" );
	deepEqual( Stem("deducţiuni"), "deduct" );
	deepEqual( Stem("deducţiunii"), "deduct" );
	deepEqual( Stem("dedus"), "dedus" );
	deepEqual( Stem("dedusă"), "dedus" );
	deepEqual( Stem("deduse"), "dedus" );
	deepEqual( Stem("defect"), "defect" );
	deepEqual( Stem("defecte"), "defect" );
	deepEqual( Stem("defectuos"), "defectu" );
	deepEqual( Stem("defectuozităţii"), "defectuoz" );
	deepEqual( Stem("deferenţă"), "deferenţ" );
	deepEqual( Stem("deficitul"), "defic" );
	deepEqual( Stem("defilare"), "defil" );
	deepEqual( Stem("defilarea"), "defil" );
	deepEqual( Stem("defilau"), "defil" );
	deepEqual( Stem("defilând"), "defil" );
	deepEqual( Stem("defileu"), "defileu" );
	deepEqual( Stem("defileului"), "defil" );
	deepEqual( Stem("definească"), "defin" );
	deepEqual( Stem("definesc"), "defin" );
	deepEqual( Stem("defineşte"), "defin" );
	deepEqual( Stem("defineşti"), "defin" );
	deepEqual( Stem("defini"), "defin" );
	deepEqual( Stem("definim"), "defin" );
	deepEqual( Stem("definindu"), "defin" );
	deepEqual( Stem("definire"), "defin" );
	deepEqual( Stem("definirea"), "defin" );
	deepEqual( Stem("definirii"), "definir" );
	deepEqual( Stem("definit"), "defin" );
	deepEqual( Stem("definită"), "defin" );
	deepEqual( Stem("definite"), "defin" );
	deepEqual( Stem("definitiv"), "defin" );
	deepEqual( Stem("definitivă"), "defin" );
	deepEqual( Stem("definitorie"), "definitor" );
	deepEqual( Stem("definitorii"), "defin" );
	deepEqual( Stem("definitoriu"), "definitoriu" );
	deepEqual( Stem("definiţia"), "definiţ" );
	deepEqual( Stem("definiţie"), "definiţ" );
	deepEqual( Stem("definiţiune"), "defin" );
	deepEqual( Stem("definiţiunea"), "defin" );
	deepEqual( Stem("definiţiuni"), "definit" );
	deepEqual( Stem("deformează"), "deform" );
	deepEqual( Stem("defroque"), "defroqu" );
	deepEqual( Stem("degajat"), "degaj" );
	deepEqual( Stem("degeaba"), "degeab" );
	deepEqual( Stem("degenerat"), "degener" );
	deepEqual( Stem("deget"), "deget" );
	deepEqual( Stem("degete"), "deget" );
	deepEqual( Stem("degetele"), "deget" );
	deepEqual( Stem("degetelor"), "deget" );
	deepEqual( Stem("degetul"), "deget" );
	deepEqual( Stem("deghizat"), "deghiz" );
	deepEqual( Stem("degrabă"), "degrab" );
	deepEqual( Stem("degradării"), "degradăr" );
	deepEqual( Stem("deh"), "deh" );
	deepEqual( Stem("dein"), "dein" );
	deepEqual( Stem("deja"), "dej" );
	deepEqual( Stem("delectare"), "delect" );
	deepEqual( Stem("delicat"), "delic" );
	deepEqual( Stem("delicată"), "delic" );
	deepEqual( Stem("delicate"), "delic" );
	deepEqual( Stem("delicateţe"), "delicateţ" );
	deepEqual( Stem("delicatu"), "delicatu" );
	deepEqual( Stem("delicioasă"), "delic" );
	deepEqual( Stem("delicioase"), "delic" );
	deepEqual( Stem("delicios"), "delic" );
	deepEqual( Stem("deliciosule"), "deliciosul" );
	deepEqual( Stem("delicioşi"), "delic" );
	deepEqual( Stem("delict"), "delict" );
	deepEqual( Stem("delicte"), "delict" );
	deepEqual( Stem("delimita"), "delim" );
	deepEqual( Stem("delimitabil"), "delimit" );
	deepEqual( Stem("delimitare"), "delimit" );
	deepEqual( Stem("delimitarea"), "delimit" );
	deepEqual( Stem("delimitat"), "delimit" );
	deepEqual( Stem("delimitată"), "delimit" );
	deepEqual( Stem("delimitaţi"), "delimit" );
	deepEqual( Stem("delimităm"), "delimit" );
	deepEqual( Stem("delimitări"), "delimităr" );
	deepEqual( Stem("delimiteze"), "delimit" );
	deepEqual( Stem("delir"), "delir" );
	deepEqual( Stem("delirante"), "delir" );
	deepEqual( Stem("delirat"), "delir" );
	deepEqual( Stem("delirul"), "delir" );
	deepEqual( Stem("delirului"), "delir" );
	deepEqual( Stem("deloc"), "deloc" );
	deepEqual( Stem("deluros"), "delur" );
	deepEqual( Stem("dem"), "dem" );
	deepEqual( Stem("demascat"), "demasc" );
	deepEqual( Stem("demascată"), "demasc" );
	deepEqual( Stem("demascându"), "demasc" );
	deepEqual( Stem("demers"), "demers" );
	deepEqual( Stem("demersul"), "demers" );
	deepEqual( Stem("demersurile"), "demersur" );
	deepEqual( Stem("demisionase"), "demision" );
	deepEqual( Stem("demn"), "demn" );
	deepEqual( Stem("demne"), "demn" );
	deepEqual( Stem("demnitari"), "demnitar" );
	deepEqual( Stem("demnitate"), "demnitat" );
	deepEqual( Stem("demnitatea"), "demnitat" );
	deepEqual( Stem("demobilizare"), "demobiliz" );
	deepEqual( Stem("demobilizat"), "demobiliz" );
	deepEqual( Stem("democrat"), "democr" );
	deepEqual( Stem("democrate"), "democr" );
	deepEqual( Stem("democratic"), "democrat" );
	deepEqual( Stem("democratică"), "democrat" );
	deepEqual( Stem("demodat"), "demod" );
	deepEqual( Stem("demografii"), "demograf" );
	deepEqual( Stem("demonstra"), "demonstr" );
	deepEqual( Stem("demonstrare"), "demonstr" );
	deepEqual( Stem("demonstrat"), "demonstr" );
	deepEqual( Stem("demonstraţie"), "demonstr" );
	deepEqual( Stem("demonstraţii"), "demonstr" );
	deepEqual( Stem("demonstraţiile"), "demonstr" );
	deepEqual( Stem("demonstrează"), "demonstr" );
	deepEqual( Stem("demonstrez"), "demonstr" );
	deepEqual( Stem("demonstreze"), "demonstr" );
	deepEqual( Stem("demonul"), "demon" );
	deepEqual( Stem("demoralizat"), "demoraliz" );
	deepEqual( Stem("demult"), "demult" );
	deepEqual( Stem("denaturare"), "denatur" );
	deepEqual( Stem("densitatea"), "densitat" );
	deepEqual( Stem("dentistului"), "dentist" );
	deepEqual( Stem("denumeşte"), "denum" );
	deepEqual( Stem("denumim"), "denum" );
	deepEqual( Stem("denumiri"), "denumir" );
	deepEqual( Stem("denunţ"), "denunţ" );
	deepEqual( Stem("denunţa"), "denunţ" );
	deepEqual( Stem("denunţată"), "denunţ" );
	deepEqual( Stem("denunţă"), "denunţ" );
	deepEqual( Stem("denunţe"), "denunţ" );
	deepEqual( Stem("deoarece"), "deoarec" );
	deepEqual( Stem("deocamdată"), "deocamd" );
	deepEqual( Stem("deocheate"), "deocheat" );
	deepEqual( Stem("deochiate"), "deochiat" );
	deepEqual( Stem("deodată"), "deodat" );
	deepEqual( Stem("deoparte"), "deopart" );
	deepEqual( Stem("deopotrivă"), "deopotr" );
	deepEqual( Stem("deosebească"), "deoseb" );
	deepEqual( Stem("deosebesc"), "deoseb" );
	deepEqual( Stem("deosebeşte"), "deoseb" );
	deepEqual( Stem("deosebi"), "deoseb" );
	deepEqual( Stem("deosebim"), "deoseb" );
	deepEqual( Stem("deosebire"), "deoseb" );
	deepEqual( Stem("deosebirea"), "deoseb" );
	deepEqual( Stem("deosebiri"), "deosebir" );
	deepEqual( Stem("deosebirii"), "deosebir" );
	deepEqual( Stem("deosebirile"), "deosebir" );
	deepEqual( Stem("deosebit"), "deoseb" );
	deepEqual( Stem("deosebită"), "deoseb" );
	deepEqual( Stem("deosebite"), "deoseb" );
	deepEqual( Stem("deosebitele"), "deoseb" );
	deepEqual( Stem("deosebiţi"), "deoseb" );
	deepEqual( Stem("departe"), "depart" );
	deepEqual( Stem("depănau"), "depăn" );
	deepEqual( Stem("depărtam"), "depărt" );
	deepEqual( Stem("depărtare"), "depărt" );
	deepEqual( Stem("depărtarea"), "depărt" );
	deepEqual( Stem("depărtat"), "depărt" );
	deepEqual( Stem("depărtându"), "depărt" );
	deepEqual( Stem("depărtăm"), "depărt" );
	deepEqual( Stem("depărtează"), "depărt" );
	deepEqual( Stem("depăşeau"), "depăş" );
	deepEqual( Stem("depăşi"), "depăş" );
	deepEqual( Stem("depăşire"), "depăş" );
	deepEqual( Stem("depăşirii"), "depăşir" );
	deepEqual( Stem("depăşirile"), "depăşir" );
	deepEqual( Stem("depăşisem"), "depăş" );
	deepEqual( Stem("depăşit"), "depăş" );
	deepEqual( Stem("depăşită"), "depăş" );
	deepEqual( Stem("depăşiţi"), "depăş" );
	deepEqual( Stem("dependent"), "dependent" );
	deepEqual( Stem("dependentă"), "dependent" );
	deepEqual( Stem("dependentăen"), "dependentăen" );
	deepEqual( Stem("dependenten"), "dependenten" );
	deepEqual( Stem("dependention"), "dependention" );
	deepEqual( Stem("dependenţa"), "dependenţ" );
	deepEqual( Stem("dependenţă"), "dependenţ" );
	deepEqual( Stem("dependenţăen"), "dependenţăen" );
	deepEqual( Stem("dependenţe"), "dependenţ" );
	deepEqual( Stem("dependenţei"), "dependenţe" );
	deepEqual( Stem("dependenţelor"), "dependenţ" );
	deepEqual( Stem("dependenţien"), "dependenţien" );
	deepEqual( Stem("dependinţe"), "dependinţ" );
	deepEqual( Stem("depersonalizat"), "depersonaliz" );
	deepEqual( Stem("depind"), "depind" );
	deepEqual( Stem("depindă"), "depind" );
	deepEqual( Stem("depinde"), "depind" );
	deepEqual( Stem("depindea"), "depind" );
	deepEqual( Stem("depindeam"), "depind" );
	deepEqual( Stem("depins"), "depins" );
	deepEqual( Stem("depinzînd"), "depinzînd" );
	deepEqual( Stem("depistare"), "depist" );
	deepEqual( Stem("depistăm"), "depist" );
	deepEqual( Stem("deplasare"), "deplas" );
	deepEqual( Stem("deplasat"), "deplas" );
	deepEqual( Stem("deplin"), "deplin" );
	deepEqual( Stem("deplină"), "deplin" );
	deepEqual( Stem("depline"), "deplin" );
	deepEqual( Stem("depozit"), "depoz" );
	deepEqual( Stem("depozite"), "depoz" );
	deepEqual( Stem("depozitele"), "depoz" );
	deepEqual( Stem("depozitul"), "depoz" );
	deepEqual( Stem("deprimat"), "deprim" );
	deepEqual( Stem("deprindere"), "deprind" );
	deepEqual( Stem("deprinderi"), "deprinder" );
	deepEqual( Stem("deprinderile"), "deprinder" );
	deepEqual( Stem("deprins"), "deprins" );
	deepEqual( Stem("deprinsă"), "deprins" );
	deepEqual( Stem("depun"), "depun" );
	deepEqual( Stem("depunând"), "depun" );
	deepEqual( Stem("depună"), "depun" );
	deepEqual( Stem("depurative"), "depur" );
	deepEqual( Stem("depusese"), "depu" );
	deepEqual( Stem("deputat"), "deput" );
	deepEqual( Stem("deputatul"), "deput" );
	deepEqual( Stem("deputatului"), "deput" );
	deepEqual( Stem("deputaţi"), "deput" );
	deepEqual( Stem("der"), "der" );
	deepEqual( Stem("deranjat"), "deranj" );
	deepEqual( Stem("deranjează"), "deranj" );
	deepEqual( Stem("derby"), "derby" );
	deepEqual( Stem("deriva"), "deriv" );
	deepEqual( Stem("derivat"), "deriv" );
	deepEqual( Stem("derivativ"), "deriv" );
	deepEqual( Stem("derivativă"), "deriv" );
	deepEqual( Stem("des"), "des" );
	deepEqual( Stem("desaga"), "desag" );
	deepEqual( Stem("desagă"), "desag" );
	deepEqual( Stem("desăvârşire"), "desăvârş" );
	deepEqual( Stem("desăvârşit"), "desăvârş" );
	deepEqual( Stem("desăvârşită"), "desăvârş" );
	deepEqual( Stem("desăvârşite"), "desăvârş" );
	deepEqual( Stem("desăvârşiţi"), "desăvârş" );
	deepEqual( Stem("descalificare"), "descalific" );
	deepEqual( Stem("descarcă"), "descarc" );
	deepEqual( Stem("descarce"), "descarc" );
	deepEqual( Stem("descartes"), "descartes" );
	deepEqual( Stem("descălecat"), "descălec" );
	deepEqual( Stem("descărcarea"), "descărc" );
	deepEqual( Stem("descendenţă"), "descendenţ" );
	deepEqual( Stem("descheiat"), "deschei" );
	deepEqual( Stem("descheie"), "deschei" );
	deepEqual( Stem("descheiere"), "deschei" );
	deepEqual( Stem("deschid"), "deschid" );
	deepEqual( Stem("deschidă"), "deschid" );
	deepEqual( Stem("deschide"), "deschid" );
	deepEqual( Stem("deschidem"), "deschid" );
	deepEqual( Stem("deschiderea"), "deschid" );
	deepEqual( Stem("deschideţi"), "deschid" );
	deepEqual( Stem("deschis"), "deschis" );
	deepEqual( Stem("deschisă"), "deschis" );
	deepEqual( Stem("deschise"), "desch" );
	deepEqual( Stem("deschişi"), "desch" );
	deepEqual( Stem("descifrez"), "descifr" );
	deepEqual( Stem("descompun"), "descompun" );
	deepEqual( Stem("descompune"), "descompun" );
	deepEqual( Stem("descompunerea"), "descompun" );
	deepEqual( Stem("descompuns"), "descompuns" );
	deepEqual( Stem("desconsiderare"), "desconsider" );
	deepEqual( Stem("descopăr"), "descopăr" );
	deepEqual( Stem("descoperă"), "descoper" );
	deepEqual( Stem("descopere"), "descop" );
	deepEqual( Stem("descoperea"), "descop" );
	deepEqual( Stem("descopeream"), "descoper" );
	deepEqual( Stem("descoperi"), "descoper" );
	deepEqual( Stem("descoperim"), "descoper" );
	deepEqual( Stem("descoperire"), "descoper" );
	deepEqual( Stem("descoperise"), "descoper" );
	deepEqual( Stem("descoperisem"), "descoper" );
	deepEqual( Stem("descoperit"), "descoper" );
	deepEqual( Stem("descoperitor"), "descoper" );
	deepEqual( Stem("descreieraţii"), "descreier" );
	deepEqual( Stem("descreşte"), "descr" );
	deepEqual( Stem("descreţeşte"), "descreţ" );
	deepEqual( Stem("descria"), "descr" );
	deepEqual( Stem("descrie"), "descr" );
	deepEqual( Stem("descriem"), "descr" );
	deepEqual( Stem("descrieri"), "descrier" );
	deepEqual( Stem("descriptivă"), "descript" );
	deepEqual( Stem("descriptive"), "descript" );
	deepEqual( Stem("descris"), "descris" );
	deepEqual( Stem("descrise"), "descr" );
	deepEqual( Stem("descriu"), "descriu" );
	deepEqual( Stem("descruntat"), "descrunt" );
	deepEqual( Stem("desculţ"), "desculţ" );
	deepEqual( Stem("descurajat"), "descuraj" );
	deepEqual( Stem("descurajată"), "descuraj" );
	deepEqual( Stem("descurăjătoare"), "descurăj" );
	deepEqual( Stem("descurc"), "descurc" );
	deepEqual( Stem("descurcare"), "descurc" );
	deepEqual( Stem("descurcat"), "descurc" );
	deepEqual( Stem("descurcă"), "descurc" );
	deepEqual( Stem("descurcăm"), "descurc" );
	deepEqual( Stem("dese"), "des" );
	deepEqual( Stem("desemna"), "desemn" );
	deepEqual( Stem("desemnat"), "desemn" );
	deepEqual( Stem("desemnată"), "desemn" );
	deepEqual( Stem("desemnaţi"), "desemn" );
	deepEqual( Stem("desemnează"), "desemn" );
	deepEqual( Stem("desemneze"), "desemn" );
	deepEqual( Stem("desen"), "desen" );
	deepEqual( Stem("desena"), "desen" );
	deepEqual( Stem("desenare"), "desen" );
	deepEqual( Stem("desenarea"), "desen" );
	deepEqual( Stem("desenat"), "desen" );
	deepEqual( Stem("desenată"), "desen" );
	deepEqual( Stem("desenate"), "desen" );
	deepEqual( Stem("desenatorul"), "desen" );
	deepEqual( Stem("desenaţi"), "desen" );
	deepEqual( Stem("desenării"), "desenăr" );
	deepEqual( Stem("desene"), "desen" );
	deepEqual( Stem("desenează"), "desen" );
	deepEqual( Stem("desenelor"), "desen" );
	deepEqual( Stem("deseneze"), "desen" );
	deepEqual( Stem("deseori"), "deseor" );
	deepEqual( Stem("deservesc"), "deserv" );
	deepEqual( Stem("deserveşte"), "deserv" );
	deepEqual( Stem("deservi"), "deserv" );
	deepEqual( Stem("deservicii"), "deserv" );
	deepEqual( Stem("deservit"), "deserv" );
	deepEqual( Stem("desfac"), "desfac" );
	deepEqual( Stem("desfacă"), "desfac" );
	deepEqual( Stem("desface"), "desfac" );
	deepEqual( Stem("desfacem"), "desfac" );
	deepEqual( Stem("desfacerea"), "desfac" );
	deepEqual( Stem("desfaci"), "desfac" );
	deepEqual( Stem("desfăcea"), "desfăc" );
	deepEqual( Stem("desfăcut"), "desfăc" );
	deepEqual( Stem("desfăcută"), "desfăc" );
	deepEqual( Stem("desfăcute"), "desfăc" );
	deepEqual( Stem("desfăşoară"), "desfăşoar" );
	deepEqual( Stem("desfăşor"), "desfăşor" );
	deepEqual( Stem("desfăşori"), "desfăşor" );
	deepEqual( Stem("desfăşur"), "desfăşur" );
	deepEqual( Stem("desfăşurare"), "desfăşur" );
	deepEqual( Stem("desfăşurarea"), "desfăşur" );
	deepEqual( Stem("desfăşurată"), "desfăşur" );
	deepEqual( Stem("desfăşuraţi"), "desfăşur" );
	deepEqual( Stem("desfăşurând"), "desfăşur" );
	deepEqual( Stem("desfăşură"), "desfăş" );
	deepEqual( Stem("desfăşurăm"), "desfăş" );
	deepEqual( Stem("desfătare"), "desfăt" );
	deepEqual( Stem("desfid"), "desfid" );
	deepEqual( Stem("desfigurare"), "desfigur" );
	deepEqual( Stem("desfigurat"), "desfigur" );
	deepEqual( Stem("desfiinţarea"), "desfiinţ" );
	deepEqual( Stem("desfiinţând"), "desfiinţ" );
	deepEqual( Stem("desfundă"), "desfund" );
	deepEqual( Stem("desigur"), "desigur" );
	deepEqual( Stem("desmoulins"), "desmoulins" );
	deepEqual( Stem("desolidarizează"), "desolidariz" );
	deepEqual( Stem("despacheteze"), "despachet" );
	deepEqual( Stem("despart"), "despart" );
	deepEqual( Stem("despartă"), "despart" );
	deepEqual( Stem("desparţi"), "desparţ" );
	deepEqual( Stem("despăgubire"), "despăgub" );
	deepEqual( Stem("despăgubirea"), "despăgub" );
	deepEqual( Stem("despărţea"), "despărţ" );
	deepEqual( Stem("despărţi"), "despărţ" );
	deepEqual( Stem("despărţim"), "despărţ" );
	deepEqual( Stem("despărţire"), "despărţ" );
	deepEqual( Stem("despărţirea"), "despărţ" );
	deepEqual( Stem("despărţiri"), "despărţir" );
	deepEqual( Stem("despărţirii"), "despărţir" );
	deepEqual( Stem("despărţit"), "despărţ" );
	deepEqual( Stem("despărţită"), "despărţ" );
	deepEqual( Stem("despărţiţi"), "despărţ" );
	deepEqual( Stem("desperare"), "desper" );
	deepEqual( Stem("desperat"), "desper" );
	deepEqual( Stem("desperării"), "desperăr" );
	deepEqual( Stem("despicat"), "despic" );
	deepEqual( Stem("despică"), "despic" );
	deepEqual( Stem("despicăm"), "despic" );
	deepEqual( Stem("despletit"), "desplet" );
	deepEqual( Stem("despotul"), "despot" );
	deepEqual( Stem("despre"), "despr" );
	deepEqual( Stem("desprind"), "despr" );
	deepEqual( Stem("desprinde"), "desprind" );
	deepEqual( Stem("desprindem"), "desprind" );
	deepEqual( Stem("desprins"), "desprins" );
	deepEqual( Stem("desprinsă"), "desprins" );
	deepEqual( Stem("desprinse"), "desprin" );
	deepEqual( Stem("desprinzându"), "desprinz" );
	deepEqual( Stem("desrusit"), "desrus" );
	deepEqual( Stem("destinată"), "destin" );
	deepEqual( Stem("destinaţia"), "destin" );
	deepEqual( Stem("destinaţie"), "destin" );
	deepEqual( Stem("destinau"), "destin" );
	deepEqual( Stem("destindere"), "destind" );
	deepEqual( Stem("destinderile"), "destinder" );
	deepEqual( Stem("destinele"), "destin" );
	deepEqual( Stem("destinelor"), "destin" );
	deepEqual( Stem("destins"), "destins" );
	deepEqual( Stem("destinul"), "destin" );
	deepEqual( Stem("destramă"), "destram" );
	deepEqual( Stem("destructibilă"), "destruct" );
	deepEqual( Stem("destui"), "dest" );
	deepEqual( Stem("destul"), "dest" );
	deepEqual( Stem("destulă"), "destul" );
	deepEqual( Stem("destule"), "destul" );
	deepEqual( Stem("deşănţată"), "deşănţ" );
	deepEqual( Stem("deşănţate"), "deşănţ" );
	deepEqual( Stem("deşărtăciune"), "deşărtăciun" );
	deepEqual( Stem("deşert"), "deşert" );
	deepEqual( Stem("deşeuri"), "deşeur" );
	deepEqual( Stem("deşi"), "deş" );
	deepEqual( Stem("deşiră"), "deşir" );
	deepEqual( Stem("deşteaptă"), "deşteapt" );
	deepEqual( Stem("deştept"), "deştept" );
	deepEqual( Stem("deşteptam"), "deştept" );
	deepEqual( Stem("deşteptare"), "deştept" );
	deepEqual( Stem("deşteptat"), "deştept" );
	deepEqual( Stem("deşteptăciunii"), "deşteptăciun" );
	deepEqual( Stem("deştepţi"), "deştepţ" );
	deepEqual( Stem("deştepţii"), "deştepţ" );
	deepEqual( Stem("deşuchiate"), "deşuch" );
	deepEqual( Stem("detalii"), "detal" );
	deepEqual( Stem("detaliile"), "detal" );
	deepEqual( Stem("detaliilor"), "detal" );
	deepEqual( Stem("detaliu"), "detaliu" );
	deepEqual( Stem("detaşamentele"), "detaşament" );
	deepEqual( Stem("detaşat"), "detaş" );
	deepEqual( Stem("detectiv"), "detect" );
	deepEqual( Stem("detectivul"), "detect" );
	deepEqual( Stem("determina"), "determin" );
	deepEqual( Stem("determinant"), "determin" );
	deepEqual( Stem("determinare"), "determin" );
	deepEqual( Stem("determinarea"), "determin" );
	deepEqual( Stem("determinat"), "determin" );
	deepEqual( Stem("determinată"), "determin" );
	deepEqual( Stem("determinate"), "determin" );
	deepEqual( Stem("determină"), "determin" );
	deepEqual( Stem("determinării"), "determinăr" );
	deepEqual( Stem("determinările"), "determinăr" );
	deepEqual( Stem("determinismul"), "determinist" );
	deepEqual( Stem("detracat"), "detrac" );
	deepEqual( Stem("detunătură"), "detunăt" );
	deepEqual( Stem("detunături"), "detunătur" );
	deepEqual( Stem("deunăzi"), "deunăz" );
	deepEqual( Stem("deutschland"), "deutschland" );
	deepEqual( Stem("devale"), "deval" );
	deepEqual( Stem("devalorarea"), "devalor" );
	deepEqual( Stem("devasta"), "devast" );
	deepEqual( Stem("devastat"), "devast" );
	deepEqual( Stem("devenea"), "deven" );
	deepEqual( Stem("deveneai"), "deven" );
	deepEqual( Stem("deveneam"), "deven" );
	deepEqual( Stem("deveneau"), "deven" );
	deepEqual( Stem("deveni"), "deven" );
	deepEqual( Stem("devenind"), "deven" );
	deepEqual( Stem("devenire"), "deven" );
	deepEqual( Stem("devenirea"), "deven" );
	deepEqual( Stem("devenirile"), "devenir" );
	deepEqual( Stem("devenise"), "deven" );
	deepEqual( Stem("devenisem"), "deven" );
	deepEqual( Stem("deveniseră"), "deven" );
	deepEqual( Stem("devenit"), "deven" );
	deepEqual( Stem("devenită"), "deven" );
	deepEqual( Stem("devenite"), "deven" );
	deepEqual( Stem("deveniţi"), "deven" );
	deepEqual( Stem("devie"), "dev" );
	deepEqual( Stem("deviem"), "dev" );
	deepEqual( Stem("devin"), "devin" );
	deepEqual( Stem("devină"), "devin" );
	deepEqual( Stem("devine"), "devin" );
	deepEqual( Stem("devize"), "deviz" );
	deepEqual( Stem("devotamente"), "devotament" );
	deepEqual( Stem("devotamentul"), "devotament" );
	deepEqual( Stem("devotat"), "devot" );
	deepEqual( Stem("devotată"), "devot" );
	deepEqual( Stem("devotează"), "devot" );
	deepEqual( Stem("devreme"), "devrem" );
	deepEqual( Stem("dezagreabil"), "dezagr" );
	deepEqual( Stem("dezagreabilă"), "dezagr" );
	deepEqual( Stem("dezagreabile"), "dezagr" );
	deepEqual( Stem("dezaprobă"), "dezaprob" );
	deepEqual( Stem("dezaprobările"), "dezaprobăr" );
	deepEqual( Stem("dezarmare"), "dezarm" );
	deepEqual( Stem("dezarmarea"), "dezarm" );
	deepEqual( Stem("dezarmării"), "dezarmăr" );
	deepEqual( Stem("dezarmează"), "dezarm" );
	deepEqual( Stem("dezarticularea"), "dezarticul" );
	deepEqual( Stem("dezarticulate"), "dezarticul" );
	deepEqual( Stem("dezastre"), "dezastr" );
	deepEqual( Stem("dezastru"), "dezastru" );
	deepEqual( Stem("dezastruoasă"), "dezastru" );
	deepEqual( Stem("dezastruos"), "dezastru" );
	deepEqual( Stem("dezbateţi"), "dezbat" );
	deepEqual( Stem("dezbătut"), "dezbăt" );
	deepEqual( Stem("dezbătuta"), "dezbăt" );
	deepEqual( Stem("dezbătute"), "dezbăt" );
	deepEqual( Stem("dezbrac"), "dezbrac" );
	deepEqual( Stem("dezbrăca"), "dezbrăc" );
	deepEqual( Stem("dezbrăcat"), "dezbrăc" );
	deepEqual( Stem("dezbrăcatul"), "dezbrăc" );
	deepEqual( Stem("dezechilibrul"), "dezechilibr" );
	deepEqual( Stem("dezerta"), "dezert" );
	deepEqual( Stem("dezertare"), "dezert" );
	deepEqual( Stem("dezertat"), "dezert" );
	deepEqual( Stem("dezertând"), "dezert" );
	deepEqual( Stem("dezertăm"), "dezert" );
	deepEqual( Stem("dezertez"), "dezert" );
	deepEqual( Stem("dezertor"), "dezertor" );
	deepEqual( Stem("dezgheţat"), "dezgheţ" );
	deepEqual( Stem("dezgust"), "dezgust" );
	deepEqual( Stem("dezgustase"), "dezgust" );
	deepEqual( Stem("dezgustat"), "dezgust" );
	deepEqual( Stem("dezgustaţi"), "dezgust" );
	deepEqual( Stem("dezgustătoare"), "dezgust" );
	deepEqual( Stem("dezgustător"), "dezgust" );
	deepEqual( Stem("dezgustul"), "dezgust" );
	deepEqual( Stem("dezic"), "dezic" );
	deepEqual( Stem("deziluzii"), "deziluz" );
	deepEqual( Stem("deziluzionată"), "deziluzion" );
	deepEqual( Stem("dezinfecteze"), "dezinfect" );
	deepEqual( Stem("dezinteresa"), "dezinteres" );
	deepEqual( Stem("dezinteresarea"), "dezinteres" );
	deepEqual( Stem("dezinteresat"), "dezinteres" );
	deepEqual( Stem("dezinteresată"), "dezinteres" );
	deepEqual( Stem("dezlănţui"), "dezlănţ" );
	deepEqual( Stem("dezlănţuire"), "dezlănţu" );
	deepEqual( Stem("dezlănţuit"), "dezlănţu" );
	deepEqual( Stem("dezlănţuită"), "dezlănţu" );
	deepEqual( Stem("dezleagă"), "dezleag" );
	deepEqual( Stem("dezlegare"), "dezleg" );
	deepEqual( Stem("dezlegat"), "dezleg" );
	deepEqual( Stem("dezlipea"), "dezlip" );
	deepEqual( Stem("dezlipim"), "dezlip" );
	deepEqual( Stem("dezmăţată"), "dezmăţ" );
	deepEqual( Stem("dezmeticit"), "dezmetic" );
	deepEqual( Stem("dezmoşteneşte"), "dezmoşten" );
	deepEqual( Stem("dezmoştenit"), "dezmoşten" );
	deepEqual( Stem("deznădăjduiesc"), "deznădăjdui" );
	deepEqual( Stem("deznădăjduieşte"), "deznădăjdui" );
	deepEqual( Stem("deznădăjduit"), "deznădăjdu" );
	deepEqual( Stem("deznădăjduită"), "deznădăjdu" );
	deepEqual( Stem("deznădăjduite"), "deznădăjdu" );
	deepEqual( Stem("deznădăjduiţi"), "deznădăjdu" );
	deepEqual( Stem("deznădejde"), "deznădejd" );
	deepEqual( Stem("deznădejdea"), "deznădejd" );
	deepEqual( Stem("deznădejdi"), "deznădejd" );
	deepEqual( Stem("deznădejdile"), "deznădejd" );
	deepEqual( Stem("dezolat"), "dezol" );
	deepEqual( Stem("dezorganizată"), "dezorganiz" );
	deepEqual( Stem("dezorientare"), "dezorient" );
	deepEqual( Stem("dezorientarea"), "dezorient" );
	deepEqual( Stem("dezorientaţi"), "dezorient" );
	deepEqual( Stem("dezrobit"), "dezrob" );
	deepEqual( Stem("dezvelesc"), "dezvel" );
	deepEqual( Stem("dezvoltarea"), "dezvolt" );
	deepEqual( Stem("dezvoltă"), "dezvolt" );
	deepEqual( Stem("dezvoltări"), "dezvoltăr" );
	deepEqual( Stem("dezvoltării"), "dezvoltăr" );
	deepEqual( Stem("diabolic"), "diabol" );
	deepEqual( Stem("diagonala"), "diagonal" );
	deepEqual( Stem("diagonală"), "diagonal" );
	deepEqual( Stem("dialectic"), "dialect" );
	deepEqual( Stem("dialectica"), "dialect" );
	deepEqual( Stem("dialectice"), "dialect" );
	deepEqual( Stem("dialog"), "dialog" );
	deepEqual( Stem("dialogul"), "dialog" );
	deepEqual( Stem("dialogurile"), "dialogur" );
	deepEqual( Stem("diametru"), "diametru" );
	deepEqual( Stem("diametrul"), "diametr" );
	deepEqual( Stem("diatonismul"), "diatonist" );
	deepEqual( Stem("diavol"), "diavol" );
	deepEqual( Stem("diavoli"), "diavol" );
	deepEqual( Stem("diavolul"), "diavol" );
	deepEqual( Stem("diblar"), "diblar" );
	deepEqual( Stem("dibuit"), "dibuit" );
	deepEqual( Stem("dichisiţi"), "dichis" );
	deepEqual( Stem("dichisul"), "dichis" );
	deepEqual( Stem("dichisurile"), "dichisur" );
	deepEqual( Stem("dicta"), "dict" );
	deepEqual( Stem("dictată"), "dictat" );
	deepEqual( Stem("dictate"), "dictat" );
	deepEqual( Stem("dictator"), "dictat" );
	deepEqual( Stem("dictatoriale"), "dictatorial" );
	deepEqual( Stem("dictează"), "dict" );
	deepEqual( Stem("dictez"), "dict" );
	deepEqual( Stem("dictonul"), "dicton" );
	deepEqual( Stem("dicţionar"), "dicţionar" );
	deepEqual( Stem("dicţionarul"), "dicţionar" );
	deepEqual( Stem("dicţionarului"), "dicţionar" );
	deepEqual( Stem("didactică"), "didact" );
	deepEqual( Stem("die"), "die" );
	deepEqual( Stem("diferă"), "difer" );
	deepEqual( Stem("diferenţa"), "diferenţ" );
	deepEqual( Stem("diferenţelor"), "diferenţ" );
	deepEqual( Stem("diferenţia"), "diferenţ" );
	deepEqual( Stem("diferenţial"), "diferenţial" );
	deepEqual( Stem("diferenţiată"), "diferenţ" );
	deepEqual( Stem("diferenţiate"), "diferenţ" );
	deepEqual( Stem("diferenţiem"), "diferenţ" );
	deepEqual( Stem("diferenţierii"), "diferenţier" );
	deepEqual( Stem("diferit"), "difer" );
	deepEqual( Stem("diferită"), "difer" );
	deepEqual( Stem("diferite"), "difer" );
	deepEqual( Stem("diferitele"), "difer" );
	deepEqual( Stem("diferitelor"), "difer" );
	deepEqual( Stem("dificilă"), "dificil" );
	deepEqual( Stem("dificultate"), "dificult" );
	deepEqual( Stem("dificultăţi"), "dificultăţ" );
	deepEqual( Stem("dificultăţile"), "dificultăţ" );
	deepEqual( Stem("diformeze"), "diform" );
	deepEqual( Stem("difuze"), "difuz" );
	deepEqual( Stem("dig"), "dig" );
	deepEqual( Stem("digerate"), "diger" );
	deepEqual( Stem("digerăm"), "diger" );
	deepEqual( Stem("digereze"), "diger" );
	deepEqual( Stem("digestie"), "digest" );
	deepEqual( Stem("digresiune"), "digresiun" );
	deepEqual( Stem("digresiunea"), "digresiun" );
	deepEqual( Stem("dihănii"), "dihăn" );
	deepEqual( Stem("dilata"), "dilat" );
	deepEqual( Stem("dilată"), "dilat" );
	deepEqual( Stem("diletant"), "dilet" );
	deepEqual( Stem("diletantă"), "dilet" );
	deepEqual( Stem("diletantismul"), "diletantist" );
	deepEqual( Stem("diletanţii"), "diletanţ" );
	deepEqual( Stem("diligenţa"), "diligenţ" );
	deepEqual( Stem("dimensiile"), "dimens" );
	deepEqual( Stem("dimensional"), "dimensional" );
	deepEqual( Stem("dimensională"), "dimensional" );
	deepEqual( Stem("dimensiune"), "dimensiun" );
	deepEqual( Stem("dimensiunea"), "dimensiun" );
	deepEqual( Stem("dimensiuni"), "dimensiun" );
	deepEqual( Stem("dimineaţa"), "dimineaţ" );
	deepEqual( Stem("dimineaţă"), "dimineaţ" );
	deepEqual( Stem("dimineţii"), "dimin" );
	deepEqual( Stem("dimiu"), "dimiu" );
	deepEqual( Stem("dimiule"), "dimiul" );
	deepEqual( Stem("dimpotriva"), "dimpotr" );
	deepEqual( Stem("dimpotrivă"), "dimpotr" );
	deepEqual( Stem("dimpreună"), "dimpreun" );
	deepEqual( Stem("din"), "din" );
	deepEqual( Stem("dinadins"), "dinadins" );
	deepEqual( Stem("dinafară"), "dinaf" );
	deepEqual( Stem("dinainte"), "dinaint" );
	deepEqual( Stem("dinaintea"), "dinaint" );
	deepEqual( Stem("dinamic"), "dinam" );
	deepEqual( Stem("dinamismul"), "dinamist" );
	deepEqual( Stem("dinapoi"), "dinapo" );
	deepEqual( Stem("dinastii"), "dinast" );
	deepEqual( Stem("dinăuntru"), "dinăuntru" );
	deepEqual( Stem("dincoace"), "dincoac" );
	deepEqual( Stem("dincolo"), "dincolo" );
	deepEqual( Stem("dinculescu"), "dinculescu" );
	deepEqual( Stem("ding"), "ding" );
	deepEqual( Stem("dinspre"), "dinspr" );
	deepEqual( Stem("dintâi"), "dint" );
	deepEqual( Stem("dintr"), "dintr" );
	deepEqual( Stem("dintre"), "dintr" );
	deepEqual( Stem("dintru"), "dintru" );
	deepEqual( Stem("dinţi"), "dinţ" );
	deepEqual( Stem("dinţii"), "dinţ" );
	deepEqual( Stem("dionisie"), "dionis" );
	deepEqual( Stem("dioptrii"), "dioptr" );
	deepEqual( Stem("diplomatică"), "diplomat" );
	deepEqual( Stem("diplomatice"), "diplomat" );
	deepEqual( Stem("diplomaţia"), "diplom" );
	deepEqual( Stem("direct"), "direct" );
	deepEqual( Stem("directă"), "direct" );
	deepEqual( Stem("directe"), "direct" );
	deepEqual( Stem("director"), "director" );
	deepEqual( Stem("directorul"), "director" );
	deepEqual( Stem("direcţia"), "direcţ" );
	deepEqual( Stem("direcţie"), "direcţ" );
	deepEqual( Stem("direcţii"), "direcţ" );
	deepEqual( Stem("direcţiile"), "direcţ" );
	deepEqual( Stem("direcţiune"), "direct" );
	deepEqual( Stem("direcţiunea"), "direct" );
	deepEqual( Stem("direcţiuni"), "direct" );
	deepEqual( Stem("disciplina"), "disciplin" );
	deepEqual( Stem("disciplinabil"), "disciplin" );
	deepEqual( Stem("disciplinat"), "disciplin" );
	deepEqual( Stem("disciplină"), "disciplin" );
	deepEqual( Stem("discipline"), "disciplin" );
	deepEqual( Stem("disciplinează"), "disciplin" );
	deepEqual( Stem("disciplinei"), "discipline" );
	deepEqual( Stem("disciplinelor"), "disciplin" );
	deepEqual( Stem("disciplinii"), "disciplin" );
	deepEqual( Stem("discipolii"), "discipol" );
	deepEqual( Stem("discontinuitate"), "discontinu" );
	deepEqual( Stem("discrepanţa"), "discrepanţ" );
	deepEqual( Stem("discrepanţă"), "discrepanţ" );
	deepEqual( Stem("discret"), "discret" );
	deepEqual( Stem("discrete"), "discret" );
	deepEqual( Stem("discreţie"), "discreţ" );
	deepEqual( Stem("discul"), "disc" );
	deepEqual( Stem("discurează"), "discur" );
	deepEqual( Stem("discurs"), "discurs" );
	deepEqual( Stem("discursivă"), "discurs" );
	deepEqual( Stem("discursul"), "discurs" );
	deepEqual( Stem("discursului"), "discurs" );
	deepEqual( Stem("discursuri"), "discursur" );
	deepEqual( Stem("discut"), "discut" );
	deepEqual( Stem("discuta"), "discut" );
	deepEqual( Stem("discutabil"), "discut" );
	deepEqual( Stem("discutaserăm"), "discut" );
	deepEqual( Stem("discutat"), "discut" );
	deepEqual( Stem("discutaţi"), "discut" );
	deepEqual( Stem("discutau"), "discut" );
	deepEqual( Stem("discutând"), "discut" );
	deepEqual( Stem("discutăm"), "discut" );
	deepEqual( Stem("discuţi"), "discuţ" );
	deepEqual( Stem("discuţia"), "discuţ" );
	deepEqual( Stem("discuţie"), "discuţ" );
	deepEqual( Stem("discuţii"), "discuţ" );
	deepEqual( Stem("discuţiile"), "discuţ" );
	deepEqual( Stem("discuţiilor"), "discuţ" );
	deepEqual( Stem("discuţiune"), "discut" );
	deepEqual( Stem("discuţiunea"), "discut" );
	deepEqual( Stem("discuţiuni"), "discut" );
	deepEqual( Stem("diseară"), "disear" );
	deepEqual( Stem("disimulaţie"), "disimul" );
	deepEqual( Stem("disimulări"), "disimulăr" );
	deepEqual( Stem("disimulează"), "disimul" );
	deepEqual( Stem("disocierii"), "disocier" );
	deepEqual( Stem("disocieze"), "disociez" );
	deepEqual( Stem("dispară"), "disp" );
	deepEqual( Stem("dispare"), "disp" );
	deepEqual( Stem("dispărând"), "dispăr" );
	deepEqual( Stem("dispărea"), "dispăr" );
	deepEqual( Stem("dispăreau"), "dispăr" );
	deepEqual( Stem("dispăruse"), "dispăr" );
	deepEqual( Stem("dispărut"), "dispăr" );
	deepEqual( Stem("dispensa"), "dispens" );
	deepEqual( Stem("dispensează"), "dispens" );
	deepEqual( Stem("dispera"), "disper" );
	deepEqual( Stem("disperare"), "disper" );
	deepEqual( Stem("disperarea"), "disper" );
	deepEqual( Stem("disperat"), "disper" );
	deepEqual( Stem("disperată"), "disper" );
	deepEqual( Stem("disperate"), "disper" );
	deepEqual( Stem("disperaţi"), "disper" );
	deepEqual( Stem("disperaţii"), "disper" );
	deepEqual( Stem("displace"), "displac" );
	deepEqual( Stem("disponibilităţi"), "disponibil" );
	deepEqual( Stem("dispoziţia"), "dispoziţ" );
	deepEqual( Stem("dispoziţie"), "dispoziţ" );
	deepEqual( Stem("dispoziţiei"), "dispoz" );
	deepEqual( Stem("dispoziţii"), "dispoz" );
	deepEqual( Stem("dispoziţiunea"), "dispoz" );
	deepEqual( Stem("dispreţ"), "dispreţ" );
	deepEqual( Stem("dispreţuiesc"), "dispreţui" );
	deepEqual( Stem("dispreţuitoare"), "dispreţu" );
	deepEqual( Stem("dispreţuitor"), "dispreţu" );
	deepEqual( Stem("disproporţionate"), "disproporţion" );
	deepEqual( Stem("dispun"), "dispun" );
	deepEqual( Stem("dispune"), "dispun" );
	deepEqual( Stem("dispus"), "dispus" );
	deepEqual( Stem("dispuse"), "disp" );
	deepEqual( Stem("dispuşi"), "disp" );
	deepEqual( Stem("disputabile"), "disput" );
	deepEqual( Stem("disputat"), "disput" );
	deepEqual( Stem("dispută"), "disput" );
	deepEqual( Stem("dispute"), "disput" );
	deepEqual( Stem("disputelor"), "disput" );
	deepEqual( Stem("disraeli"), "disrael" );
	deepEqual( Stem("disruptivă"), "disrupt" );
	deepEqual( Stem("distant"), "distant" );
	deepEqual( Stem("distanţa"), "distanţ" );
	deepEqual( Stem("distanţare"), "distanţ" );
	deepEqual( Stem("distanţate"), "distanţ" );
	deepEqual( Stem("distanţă"), "distanţ" );
	deepEqual( Stem("distanţării"), "distanţăr" );
	deepEqual( Stem("distanţe"), "distanţ" );
	deepEqual( Stem("distanţează"), "distanţ" );
	deepEqual( Stem("distanţei"), "distanţe" );
	deepEqual( Stem("distanţele"), "distanţ" );
	deepEqual( Stem("distanţelor"), "distanţ" );
	deepEqual( Stem("distihul"), "distih" );
	deepEqual( Stem("distilat"), "distil" );
	deepEqual( Stem("distilată"), "distil" );
	deepEqual( Stem("distilate"), "distil" );
	deepEqual( Stem("distilării"), "distilăr" );
	deepEqual( Stem("distileze"), "distil" );
	deepEqual( Stem("distinct"), "distinct" );
	deepEqual( Stem("distinctă"), "distinct" );
	deepEqual( Stem("distinctăen"), "distinctăen" );
	deepEqual( Stem("distincte"), "distinct" );
	deepEqual( Stem("distinctiv"), "distinct" );
	deepEqual( Stem("distinctivă"), "distinct" );
	deepEqual( Stem("distincţia"), "distincţ" );
	deepEqual( Stem("distincţie"), "distincţ" );
	deepEqual( Stem("distincţii"), "distincţ" );
	deepEqual( Stem("distincţiile"), "distincţ" );
	deepEqual( Stem("distincţiion"), "distincţiion" );
	deepEqual( Stem("distincţiune"), "distinct" );
	deepEqual( Stem("distincţiunea"), "distinct" );
	deepEqual( Stem("disting"), "disting" );
	deepEqual( Stem("distingă"), "disting" );
	deepEqual( Stem("distinge"), "disting" );
	deepEqual( Stem("distingem"), "disting" );
	deepEqual( Stem("distingi"), "disting" );
	deepEqual( Stem("distins"), "distins" );
	deepEqual( Stem("distinsă"), "distins" );
	deepEqual( Stem("distinse"), "distin" );
	deepEqual( Stem("distractiv"), "distract" );
	deepEqual( Stem("distracţie"), "distracţ" );
	deepEqual( Stem("distras"), "distras" );
	deepEqual( Stem("distraţi"), "distr" );
	deepEqual( Stem("distrau"), "distr" );
	deepEqual( Stem("distribuiau"), "distribui" );
	deepEqual( Stem("distribuirea"), "distribu" );
	deepEqual( Stem("distribuirii"), "distribuir" );
	deepEqual( Stem("distribuise"), "distribu" );
	deepEqual( Stem("distribuite"), "distribu" );
	deepEqual( Stem("distrugătoare"), "distrug" );
	deepEqual( Stem("distrugător"), "distrug" );
	deepEqual( Stem("distruge"), "distrug" );
	deepEqual( Stem("distrus"), "distrus" );
	deepEqual( Stem("diurnele"), "diurn" );
	deepEqual( Stem("divagări"), "divagăr" );
	deepEqual( Stem("divan"), "divan" );
	deepEqual( Stem("divane"), "divan" );
	deepEqual( Stem("divanul"), "divan" );
	deepEqual( Stem("divanului"), "divan" );
	deepEqual( Stem("divanuri"), "divanur" );
	deepEqual( Stem("divergenţă"), "divergenţ" );
	deepEqual( Stem("diversă"), "divers" );
	deepEqual( Stem("diverse"), "diver" );
	deepEqual( Stem("diversele"), "diver" );
	deepEqual( Stem("diversitatea"), "divers" );
	deepEqual( Stem("diversităţi"), "divers" );
	deepEqual( Stem("diversităţii"), "divers" );
	deepEqual( Stem("diversiunea"), "diversiun" );
	deepEqual( Stem("divin"), "divin" );
	deepEqual( Stem("divină"), "divin" );
	deepEqual( Stem("divizia"), "diviz" );
	deepEqual( Stem("divizie"), "diviz" );
	deepEqual( Stem("diviziei"), "diviz" );
	deepEqual( Stem("diviziune"), "diviziun" );
	deepEqual( Stem("divorţ"), "divorţ" );
	deepEqual( Stem("divorţat"), "divorţ" );
	deepEqual( Stem("divorţăm"), "divorţ" );
	deepEqual( Stem("divorţeze"), "divorţ" );
	deepEqual( Stem("divorţezi"), "divorţ" );
	deepEqual( Stem("divorţul"), "divorţ" );
	deepEqual( Stem("dizgraţia"), "dizgr" );
	deepEqual( Stem("dizgraţioase"), "dizgraţ" );
	deepEqual( Stem("dizgraţios"), "dizgraţ" );
	deepEqual( Stem("dizolvat"), "dizolv" );
	deepEqual( Stem("dizolvată"), "dizolv" );
	deepEqual( Stem("dizolvă"), "dizolv" );
	deepEqual( Stem("do"), "do" );
	deepEqual( Stem("doamna"), "doamn" );
	deepEqual( Stem("doamnă"), "doamn" );
	deepEqual( Stem("doamne"), "doamn" );
	deepEqual( Stem("doamnei"), "doamne" );
	deepEqual( Stem("doamnele"), "doamn" );
	deepEqual( Stem("doamnelor"), "doamn" );
	deepEqual( Stem("doar"), "doar" );
	deepEqual( Stem("doară"), "doar" );
	deepEqual( Stem("doare"), "doar" );
	deepEqual( Stem("doarmă"), "doarm" );
	deepEqual( Stem("doarme"), "doarm" );
	deepEqual( Stem("dobitoc"), "dobitoc" );
	deepEqual( Stem("dobitocul"), "dobitoc" );
	deepEqual( Stem("dobitocului"), "dobitoc" );
	deepEqual( Stem("dobîndă"), "dobînd" );
	deepEqual( Stem("dobîndească"), "dobînd" );
	deepEqual( Stem("dobîndesc"), "dobînd" );
	deepEqual( Stem("dobîndi"), "dobînd" );
	deepEqual( Stem("dobîndind"), "dobînd" );
	deepEqual( Stem("dobîndirea"), "dobînd" );
	deepEqual( Stem("dobîndit"), "dobînd" );
	deepEqual( Stem("dobîndită"), "dobînd" );
	deepEqual( Stem("dobînzi"), "dobînz" );
	deepEqual( Stem("doboare"), "doboar" );
	deepEqual( Stem("doborând"), "dobor" );
	deepEqual( Stem("dobori"), "dobor" );
	deepEqual( Stem("doborî"), "doborî" );
	deepEqual( Stem("doborîrea"), "doborîr" );
	deepEqual( Stem("dobrogea"), "dobrog" );
	deepEqual( Stem("docent"), "docent" );
	deepEqual( Stem("docil"), "docil" );
	deepEqual( Stem("docilitate"), "docil" );
	deepEqual( Stem("docilitatea"), "docil" );
	deepEqual( Stem("doctor"), "doctor" );
	deepEqual( Stem("doctoral"), "doctoral" );
	deepEqual( Stem("doctorand"), "doctorand" );
	deepEqual( Stem("doctoranzi"), "doctoranz" );
	deepEqual( Stem("doctorat"), "doctor" );
	deepEqual( Stem("doctorate"), "doctor" );
	deepEqual( Stem("doctoratelor"), "doctor" );
	deepEqual( Stem("doctori"), "doctor" );
	deepEqual( Stem("doctoria"), "doctor" );
	deepEqual( Stem("doctorie"), "doctor" );
	deepEqual( Stem("doctoriţă"), "doctoriţ" );
	deepEqual( Stem("doctorul"), "doctor" );
	deepEqual( Stem("doctorului"), "doctor" );
	deepEqual( Stem("doctrina"), "doctrin" );
	deepEqual( Stem("doctrină"), "doctrin" );
	deepEqual( Stem("doctrine"), "doctrin" );
	deepEqual( Stem("documente"), "document" );
	deepEqual( Stem("documentează"), "document" );
	deepEqual( Stem("documentul"), "document" );
	deepEqual( Stem("dogma"), "dogm" );
	deepEqual( Stem("dogmatică"), "dogmat" );
	deepEqual( Stem("dogmă"), "dogm" );
	deepEqual( Stem("dogme"), "dogm" );
	deepEqual( Stem("dogmei"), "dogme" );
	deepEqual( Stem("doi"), "doi" );
	deepEqual( Stem("doilea"), "doil" );
	deepEqual( Stem("doina"), "doin" );
	deepEqual( Stem("doisprezece"), "doisprezec" );
	deepEqual( Stem("dolentă"), "dolent" );
	deepEqual( Stem("dolescu"), "dolescu" );
	deepEqual( Stem("dolescule"), "dolescul" );
	deepEqual( Stem("doliu"), "doliu" );
	deepEqual( Stem("dom"), "dom" );
	deepEqual( Stem("domenii"), "domen" );
	deepEqual( Stem("domeniile"), "domen" );
	deepEqual( Stem("domeniu"), "domeniu" );
	deepEqual( Stem("domeniul"), "domen" );
	deepEqual( Stem("domeniului"), "domen" );
	deepEqual( Stem("domesticită"), "domestic" );
	deepEqual( Stem("dominat"), "domin" );
	deepEqual( Stem("dominatoare"), "domin" );
	deepEqual( Stem("domină"), "domin" );
	deepEqual( Stem("dominican"), "dominican" );
	deepEqual( Stem("domino"), "domino" );
	deepEqual( Stem("domn"), "domn" );
	deepEqual( Stem("domnească"), "domn" );
	deepEqual( Stem("domni"), "domn" );
	deepEqual( Stem("domnia"), "domn" );
	deepEqual( Stem("domnii"), "domn" );
	deepEqual( Stem("domnilor"), "domn" );
	deepEqual( Stem("domnişoara"), "domnişoar" );
	deepEqual( Stem("domnu"), "domnu" );
	deepEqual( Stem("domnul"), "domn" );
	deepEqual( Stem("domnule"), "domnul" );
	deepEqual( Stem("domnului"), "domn" );
	deepEqual( Stem("domo"), "domo" );
	deepEqual( Stem("domol"), "domol" );
	deepEqual( Stem("domolit"), "domol" );
	deepEqual( Stem("domul"), "dom" );
	deepEqual( Stem("don"), "don" );
	deepEqual( Stem("donaţia"), "don" );
	deepEqual( Stem("donaţie"), "don" );
	deepEqual( Stem("donicioară"), "donicioar" );
	deepEqual( Stem("donicioare"), "donicioar" );
	deepEqual( Stem("doniţe"), "doniţ" );
	deepEqual( Stem("donnee"), "donne" );
	deepEqual( Stem("donner"), "donner" );
	deepEqual( Stem("dor"), "dor" );
	deepEqual( Stem("dorea"), "dor" );
	deepEqual( Stem("doream"), "doream" );
	deepEqual( Stem("doresc"), "doresc" );
	deepEqual( Stem("doreşte"), "doreşt" );
	deepEqual( Stem("doreşti"), "doreşt" );
	deepEqual( Stem("dorim"), "dor" );
	deepEqual( Stem("dorind"), "dorind" );
	deepEqual( Stem("dorinţa"), "dorinţ" );
	deepEqual( Stem("dorinţă"), "dorinţ" );
	deepEqual( Stem("dorinţe"), "dorinţ" );
	deepEqual( Stem("dorinţele"), "dorinţ" );
	deepEqual( Stem("dorise"), "doris" );
	deepEqual( Stem("dorit"), "dorit" );
	deepEqual( Stem("dorită"), "dorit" );
	deepEqual( Stem("dorite"), "dorit" );
	deepEqual( Stem("dorm"), "dorm" );
	deepEqual( Stem("dormi"), "dorm" );
	deepEqual( Stem("dormin"), "dormin" );
	deepEqual( Stem("dormind"), "dorm" );
	deepEqual( Stem("dormit"), "dormit" );
	deepEqual( Stem("dormitau"), "dormit" );
	deepEqual( Stem("dormitor"), "dormit" );
	deepEqual( Stem("dormitorul"), "dormit" );
	deepEqual( Stem("dormitorului"), "dormit" );
	deepEqual( Stem("dormitului"), "dormit" );
	deepEqual( Stem("dormiţi"), "dorm" );
	deepEqual( Stem("dornic"), "dornic" );
	deepEqual( Stem("dornică"), "dornic" );
	deepEqual( Stem("dorul"), "dor" );
	deepEqual( Stem("dorului"), "dor" );
	deepEqual( Stem("dos"), "dos" );
	deepEqual( Stem("dosar"), "dosar" );
	deepEqual( Stem("dospesc"), "dosp" );
	deepEqual( Stem("dospind"), "dosp" );
	deepEqual( Stem("dospire"), "dosp" );
	deepEqual( Stem("dospită"), "dospit" );
	deepEqual( Stem("dostoievski"), "dostoievsk" );
	deepEqual( Stem("dosul"), "dos" );
	deepEqual( Stem("doua"), "dou" );
	deepEqual( Stem("douairieră"), "douairier" );
	deepEqual( Stem("două"), "dou" );
	deepEqual( Stem("douăsprezece"), "douăsprezec" );
	deepEqual( Stem("douăzeci"), "douăzec" );
	deepEqual( Stem("douzaine"), "douzain" );
	deepEqual( Stem("dovada"), "dovad" );
	deepEqual( Stem("dovadă"), "dovad" );
	deepEqual( Stem("dovedea"), "doved" );
	deepEqual( Stem("dovedesc"), "doved" );
	deepEqual( Stem("dovedeşte"), "doved" );
	deepEqual( Stem("dovedi"), "doved" );
	deepEqual( Stem("dovedim"), "doved" );
	deepEqual( Stem("dovedind"), "doved" );
	deepEqual( Stem("dovedirea"), "doved" );
	deepEqual( Stem("dovedise"), "doved" );
	deepEqual( Stem("dovedit"), "doved" );
	deepEqual( Stem("dovedită"), "doved" );
	deepEqual( Stem("dovezi"), "dovez" );
	deepEqual( Stem("dovlecii"), "dovlec" );
	deepEqual( Stem("doză"), "doz" );
	deepEqual( Stem("dr"), "dr" );
	deepEqual( Stem("dracii"), "drac" );
	deepEqual( Stem("dracu"), "dracu" );
	deepEqual( Stem("dracului"), "drac" );
	deepEqual( Stem("drag"), "drag" );
	deepEqual( Stem("draga"), "drag" );
	deepEqual( Stem("dragă"), "drag" );
	deepEqual( Stem("dragi"), "drag" );
	deepEqual( Stem("dragii"), "drag" );
	deepEqual( Stem("dragoslavele"), "dragoslav" );
	deepEqual( Stem("dragoste"), "dragost" );
	deepEqual( Stem("dragostea"), "dragost" );
	deepEqual( Stem("dragostei"), "dragoste" );
	deepEqual( Stem("dragostele"), "dragost" );
	deepEqual( Stem("dragul"), "drag" );
	deepEqual( Stem("drama"), "dram" );
	deepEqual( Stem("dramatică"), "dramat" );
	deepEqual( Stem("dramatice"), "dramat" );
	deepEqual( Stem("dramatism"), "dramatist" );
	deepEqual( Stem("dramă"), "dram" );
	deepEqual( Stem("drame"), "dram" );
	deepEqual( Stem("drapel"), "drapel" );
	deepEqual( Stem("drapele"), "drap" );
	deepEqual( Stem("draperiilor"), "draper" );
	deepEqual( Stem("drastic"), "drastic" );
	deepEqual( Stem("drastică"), "drastic" );
	deepEqual( Stem("drăcia"), "drăc" );
	deepEqual( Stem("drăcos"), "drăcos" );
	deepEqual( Stem("drăgălăşenie"), "drăgălăşen" );
	deepEqual( Stem("drăgălăşeniile"), "drăgălăşen" );
	deepEqual( Stem("drăgăstoasă"), "drăgăst" );
	deepEqual( Stem("drăguţ"), "drăguţ" );
	deepEqual( Stem("drăguţă"), "drăguţ" );
	deepEqual( Stem("dreapta"), "dreapt" );
	deepEqual( Stem("dreaptă"), "dreapt" );
	deepEqual( Stem("dregătorii"), "dregat" );
	deepEqual( Stem("drept"), "drept" );
	deepEqual( Stem("dreptate"), "dreptat" );
	deepEqual( Stem("dreptatea"), "dreptat" );
	deepEqual( Stem("dreptăţii"), "dreptăţ" );
	deepEqual( Stem("drepte"), "drept" );
	deepEqual( Stem("dreptei"), "drepte" );
	deepEqual( Stem("dreptele"), "drept" );
	deepEqual( Stem("dreptul"), "drept" );
	deepEqual( Stem("dreptului"), "drept" );
	deepEqual( Stem("dreptunghic"), "dreptungh" );
	deepEqual( Stem("dreptunghiulară"), "dreptunghiul" );
	deepEqual( Stem("dreptunghiuri"), "dreptunghiur" );
	deepEqual( Stem("drepturi"), "dreptur" );
	deepEqual( Stem("drepţi"), "drepţ" );
	deepEqual( Stem("drese"), "dre" );
	deepEqual( Stem("dresorului"), "dresor" );
	deepEqual( Stem("dric"), "dric" );
	deepEqual( Stem("dricul"), "dric" );
	deepEqual( Stem("dril"), "dril" );
	deepEqual( Stem("drojdia"), "drojd" );
	deepEqual( Stem("drojdie"), "drojd" );
	deepEqual( Stem("drojdiile"), "drojd" );
	deepEqual( Stem("drum"), "drum" );
	deepEqual( Stem("drumu"), "drumu" );
	deepEqual( Stem("drumul"), "drum" );
	deepEqual( Stem("drumului"), "drum" );
	deepEqual( Stem("drumuri"), "drumur" );
	deepEqual( Stem("drumurile"), "drumur" );
	deepEqual( Stem("drumurilor"), "drumur" );
	deepEqual( Stem("dry"), "dry" );
	deepEqual( Stem("dt"), "dt" );
	deepEqual( Stem("du"), "du" );
	deepEqual( Stem("dublare"), "dubl" );
	deepEqual( Stem("dublate"), "dublat" );
	deepEqual( Stem("dublă"), "dubl" );
	deepEqual( Stem("dublării"), "dublăr" );
	deepEqual( Stem("dublează"), "dubl" );
	deepEqual( Stem("dublez"), "dubl" );
	deepEqual( Stem("dublu"), "dublu" );
	deepEqual( Stem("duc"), "duc" );
	deepEqual( Stem("ducând"), "ducând" );
	deepEqual( Stem("ducându"), "ducându" );
	deepEqual( Stem("ducă"), "duc" );
	deepEqual( Stem("duce"), "duc" );
	deepEqual( Stem("ducea"), "duc" );
	deepEqual( Stem("duceau"), "duceau" );
	deepEqual( Stem("ducere"), "ducer" );
	deepEqual( Stem("duceţi"), "duc" );
	deepEqual( Stem("duci"), "duc" );
	deepEqual( Stem("dudu"), "dudu" );
	deepEqual( Stem("duel"), "duel" );
	deepEqual( Stem("duelul"), "duel" );
	deepEqual( Stem("duh"), "duh" );
	deepEqual( Stem("duhul"), "duh" );
	deepEqual( Stem("duioasă"), "duioas" );
	deepEqual( Stem("duioase"), "duioas" );
	deepEqual( Stem("duios"), "duios" );
	deepEqual( Stem("duioşi"), "duioş" );
	deepEqual( Stem("duioşie"), "duioş" );
	deepEqual( Stem("dulce"), "dulc" );
	deepEqual( Stem("dulceaţa"), "dulceaţ" );
	deepEqual( Stem("dulceaţă"), "dulceaţ" );
	deepEqual( Stem("dulcei"), "dulce" );
	deepEqual( Stem("dulceţuri"), "dulceţur" );
	deepEqual( Stem("dulci"), "dulc" );
	deepEqual( Stem("duminica"), "dumin" );
	deepEqual( Stem("duminicală"), "dumin" );
	deepEqual( Stem("duminică"), "dumin" );
	deepEqual( Stem("dumitale"), "dumital" );
	deepEqual( Stem("dumitre"), "dumitr" );
	deepEqual( Stem("dumitru"), "dumitru" );
	deepEqual( Stem("dumme"), "dumm" );
	deepEqual( Stem("dumneaei"), "dumneae" );
	deepEqual( Stem("dumnealor"), "dumnealor" );
	deepEqual( Stem("dumnealui"), "dumneal" );
	deepEqual( Stem("dumneata"), "dumneat" );
	deepEqual( Stem("dumneavoastră"), "dumneavoastr" );
	deepEqual( Stem("dumnezeiască"), "dumnezeiasc" );
	deepEqual( Stem("dumnezeiesc"), "dumnezei" );
	deepEqual( Stem("dumnezeu"), "dumnezeu" );
	deepEqual( Stem("dumnezeule"), "dumnezeul" );
	deepEqual( Stem("dunării"), "dunăr" );
	deepEqual( Stem("după"), "dup" );
	deepEqual( Stem("duplicitatea"), "duplic" );
	deepEqual( Stem("duppel"), "duppel" );
	deepEqual( Stem("dur"), "dur" );
	deepEqual( Stem("dura"), "dur" );
	deepEqual( Stem("durabil"), "durabil" );
	deepEqual( Stem("durabilă"), "durabil" );
	deepEqual( Stem("durat"), "durat" );
	deepEqual( Stem("durata"), "durat" );
	deepEqual( Stem("durată"), "durat" );
	deepEqual( Stem("duratei"), "durat" );
	deepEqual( Stem("dură"), "dur" );
	deepEqual( Stem("durboren"), "durboren" );
	deepEqual( Stem("durboru"), "durboru" );
	deepEqual( Stem("durch"), "durch" );
	deepEqual( Stem("durează"), "dureaz" );
	deepEqual( Stem("durere"), "durer" );
	deepEqual( Stem("durerea"), "durer" );
	deepEqual( Stem("dureri"), "durer" );
	deepEqual( Stem("durerile"), "durer" );
	deepEqual( Stem("durerilor"), "durer" );
	deepEqual( Stem("dureroasă"), "durer" );
	deepEqual( Stem("dureroase"), "durer" );
	deepEqual( Stem("dureros"), "durer" );
	deepEqual( Stem("dureroşi"), "durer" );
	deepEqual( Stem("dureze"), "durez" );
	deepEqual( Stem("durkheim"), "durkh" );
	deepEqual( Stem("durut"), "durut" );
	deepEqual( Stem("dus"), "dus" );
	deepEqual( Stem("dusă"), "dus" );
	deepEqual( Stem("duse"), "dus" );
	deepEqual( Stem("dusese"), "dus" );
	deepEqual( Stem("duş"), "duş" );
	deepEqual( Stem("duşi"), "duş" );
	deepEqual( Stem("duşman"), "duşman" );
	deepEqual( Stem("duşmană"), "duşman" );
	deepEqual( Stem("duşmane"), "duşman" );
	deepEqual( Stem("duşmani"), "duşman" );
	deepEqual( Stem("duşmanii"), "duşman" );
	deepEqual( Stem("duşmanul"), "duşman" );
	deepEqual( Stem("duşmanului"), "duşman" );
	deepEqual( Stem("duşmănie"), "duşmăn" );
	deepEqual( Stem("duşmănos"), "duşmăn" );
	deepEqual( Stem("duşurile"), "duşur" );
	deepEqual( Stem("duzină"), "duzin" );
	deepEqual( Stem("duzinele"), "duzin" );
	deepEqual( Stem("dvorjak"), "dvorjak" );
	deepEqual( Stem("e"), "e" );
	deepEqual( Stem("ea"), "ea" );
	deepEqual( Stem("echilateral"), "echilateral" );
	deepEqual( Stem("echilibru"), "echilibru" );
	deepEqual( Stem("echilibrul"), "echilibr" );
	deepEqual( Stem("echipaje"), "echipaj" );
	deepEqual( Stem("echipare"), "echip" );
	deepEqual( Stem("echiparea"), "echip" );
	deepEqual( Stem("echipăm"), "echip" );
	deepEqual( Stem("echipe"), "echip" );
	deepEqual( Stem("echivalentă"), "echivalent" );
	deepEqual( Stem("echivalente"), "echivalent" );
	deepEqual( Stem("echivalenţa"), "echivalenţ" );
	deepEqual( Stem("echivalenţă"), "echivalenţ" );
	deepEqual( Stem("echivalenţei"), "echivalenţe" );
	deepEqual( Stem("echivalenţi"), "echivalenţ" );
	deepEqual( Stem("echivoc"), "echivoc" );
	deepEqual( Stem("echivoce"), "echivoc" );
	deepEqual( Stem("eclatant"), "eclat" );
	deepEqual( Stem("eclatantă"), "eclat" );
	deepEqual( Stem("eclipsează"), "eclips" );
	deepEqual( Stem("eclipsei"), "eclip" );
	deepEqual( Stem("economic"), "econom" );
	deepEqual( Stem("economică"), "econom" );
	deepEqual( Stem("economice"), "econom" );
	deepEqual( Stem("economie"), "econom" );
	deepEqual( Stem("economii"), "econom" );
	deepEqual( Stem("economistul"), "economist" );
	deepEqual( Stem("ecou"), "ecou" );
	deepEqual( Stem("ecoul"), "eco" );
	deepEqual( Stem("ecoului"), "eco" );
	deepEqual( Stem("ecouri"), "ecour" );
	deepEqual( Stem("ecourile"), "ecour" );
	deepEqual( Stem("ecuaţii"), "ecu" );
	deepEqual( Stem("eden"), "eden" );
	deepEqual( Stem("edenică"), "eden" );
	deepEqual( Stem("edificare"), "edific" );
	deepEqual( Stem("edificat"), "edific" );
	deepEqual( Stem("edificatoare"), "edific" );
	deepEqual( Stem("edificator"), "edif" );
	deepEqual( Stem("edificării"), "edificăr" );
	deepEqual( Stem("edificii"), "edif" );
	deepEqual( Stem("edificiu"), "edificiu" );
	deepEqual( Stem("edificiul"), "edif" );
	deepEqual( Stem("edificiului"), "edif" );
	deepEqual( Stem("edilitate"), "edil" );
	deepEqual( Stem("editare"), "edit" );
	deepEqual( Stem("editareaer"), "editareaer" );
	deepEqual( Stem("editat"), "edit" );
	deepEqual( Stem("editată"), "edit" );
	deepEqual( Stem("editater"), "editater" );
	deepEqual( Stem("edităm"), "edit" );
	deepEqual( Stem("editării"), "edităr" );
	deepEqual( Stem("editeaza"), "editeaz" );
	deepEqual( Stem("editoare"), "edit" );
	deepEqual( Stem("editoarelor"), "edit" );
	deepEqual( Stem("editor"), "edit" );
	deepEqual( Stem("editori"), "edit" );
	deepEqual( Stem("editorial"), "editorial" );
	deepEqual( Stem("editorială"), "editorial" );
	deepEqual( Stem("editoriale"), "editorial" );
	deepEqual( Stem("editorialist"), "editorialist" );
	deepEqual( Stem("editorialişti"), "editorialist" );
	deepEqual( Stem("editura"), "editur" );
	deepEqual( Stem("editură"), "edit" );
	deepEqual( Stem("edituri"), "editur" );
	deepEqual( Stem("ediţia"), "ediţ" );
	deepEqual( Stem("ediţie"), "ediţ" );
	deepEqual( Stem("ediţii"), "ediţ" );
	deepEqual( Stem("educatorului"), "educ" );
	deepEqual( Stem("educaţia"), "educ" );
	deepEqual( Stem("educaţie"), "educ" );
	deepEqual( Stem("educaţii"), "educ" );
	deepEqual( Stem("educaţiunea"), "educ" );
	deepEqual( Stem("ee"), "ee" );
	deepEqual( Stem("efect"), "efect" );
	deepEqual( Stem("efecte"), "efect" );
	deepEqual( Stem("efectele"), "efect" );
	deepEqual( Stem("efectelor"), "efect" );
	deepEqual( Stem("efectiv"), "efect" );
	deepEqual( Stem("efectivă"), "efect" );
	deepEqual( Stem("efective"), "efect" );
	deepEqual( Stem("efectivul"), "efect" );
	deepEqual( Stem("efectul"), "efect" );
	deepEqual( Stem("efectului"), "efect" );
	deepEqual( Stem("efervescentă"), "efervescent" );
	deepEqual( Stem("eficace"), "eficac" );
	deepEqual( Stem("eficacion"), "eficacion" );
	deepEqual( Stem("eficacitate"), "eficac" );
	deepEqual( Stem("eficacitatea"), "eficac" );
	deepEqual( Stem("eficacităţii"), "eficac" );
	deepEqual( Stem("eficient"), "eficient" );
	deepEqual( Stem("eficientă"), "eficient" );
	deepEqual( Stem("eficienten"), "eficienten" );
	deepEqual( Stem("eficienţa"), "eficienţ" );
	deepEqual( Stem("eficienţă"), "eficienţ" );
	deepEqual( Stem("eficienţei"), "eficienţe" );
	deepEqual( Stem("eficienţi"), "eficienţ" );
	deepEqual( Stem("efigie"), "efig" );
	deepEqual( Stem("efluvii"), "efluv" );
	deepEqual( Stem("efluviile"), "efluv" );
	deepEqual( Stem("efort"), "efort" );
	deepEqual( Stem("eforturi"), "efortur" );
	deepEqual( Stem("eftimiu"), "eftimiu" );
	deepEqual( Stem("egal"), "egal" );
	deepEqual( Stem("egala"), "egal" );
	deepEqual( Stem("egală"), "egal" );
	deepEqual( Stem("egale"), "egal" );
	deepEqual( Stem("egalează"), "egal" );
	deepEqual( Stem("egalen"), "egalen" );
	deepEqual( Stem("egalez"), "egal" );
	deepEqual( Stem("egali"), "egal" );
	deepEqual( Stem("egalitară"), "egalit" );
	deepEqual( Stem("egalitare"), "egalit" );
	deepEqual( Stem("egalitariste"), "egalitarist" );
	deepEqual( Stem("egalitate"), "egal" );
	deepEqual( Stem("egalitatea"), "egal" );
	deepEqual( Stem("egalitation"), "egalitation" );
	deepEqual( Stem("egalităţi"), "egal" );
	deepEqual( Stem("egalităţien"), "egalităţien" );
	deepEqual( Stem("egalizator"), "egaliz" );
	deepEqual( Stem("egiptene"), "egipten" );
	deepEqual( Stem("egoism"), "egoism" );
	deepEqual( Stem("egoismul"), "egoism" );
	deepEqual( Stem("egoist"), "egoist" );
	deepEqual( Stem("eh"), "eh" );
	deepEqual( Stem("ei"), "ei" );
	deepEqual( Stem("eiffel"), "eiffel" );
	deepEqual( Stem("ein"), "ein" );
	deepEqual( Stem("eine"), "ein" );
	deepEqual( Stem("einstein"), "einstein" );
	deepEqual( Stem("einsteinian"), "einsteinian" );
	deepEqual( Stem("eisner"), "eisner" );
	deepEqual( Stem("el"), "el" );
	deepEqual( Stem("ela"), "ela" );
	deepEqual( Stem("elaborări"), "elaborăr" );
	deepEqual( Stem("elan"), "elan" );
	deepEqual( Stem("elanul"), "elan" );
	deepEqual( Stem("elastic"), "elast" );
	deepEqual( Stem("elastice"), "elast" );
	deepEqual( Stem("elasticitate"), "elast" );
	deepEqual( Stem("elasticul"), "elast" );
	deepEqual( Stem("ele"), "ele" );
	deepEqual( Stem("eleatice"), "eleat" );
	deepEqual( Stem("electorale"), "electoral" );
	deepEqual( Stem("electric"), "electr" );
	deepEqual( Stem("electrică"), "electr" );
	deepEqual( Stem("electricitate"), "electr" );
	deepEqual( Stem("electron"), "electron" );
	deepEqual( Stem("electronul"), "electron" );
	deepEqual( Stem("electroscop"), "electroscop" );
	deepEqual( Stem("elegant"), "eleg" );
	deepEqual( Stem("elegantă"), "eleg" );
	deepEqual( Stem("elegante"), "eleg" );
	deepEqual( Stem("elegantisimă"), "elegantisim" );
	deepEqual( Stem("eleganţa"), "eleganţ" );
	deepEqual( Stem("eleganţă"), "eleganţ" );
	deepEqual( Stem("eleganţi"), "eleganţ" );
	deepEqual( Stem("elegiac"), "elegiac" );
	deepEqual( Stem("element"), "element" );
	deepEqual( Stem("elementar"), "elementar" );
	deepEqual( Stem("elementară"), "element" );
	deepEqual( Stem("elementare"), "element" );
	deepEqual( Stem("elemente"), "element" );
	deepEqual( Stem("elementele"), "element" );
	deepEqual( Stem("elementul"), "element" );
	deepEqual( Stem("elena"), "elen" );
	deepEqual( Stem("elev"), "elev" );
	deepEqual( Stem("elevele"), "elev" );
	deepEqual( Stem("elevii"), "elev" );
	deepEqual( Stem("elevul"), "elev" );
	deepEqual( Stem("eliberat"), "eliber" );
	deepEqual( Stem("elipsa"), "elips" );
	deepEqual( Stem("elipse"), "elip" );
	deepEqual( Stem("elită"), "elit" );
	deepEqual( Stem("elocventă"), "elocvent" );
	deepEqual( Stem("elocvente"), "elocvent" );
	deepEqual( Stem("elocvenţă"), "elocvenţ" );
	deepEqual( Stem("elogiul"), "elog" );
	deepEqual( Stem("elveţiană"), "elveţian" );
	deepEqual( Stem("elviră"), "elvir" );
	deepEqual( Stem("emanată"), "eman" );
	deepEqual( Stem("emanaţiuni"), "emanat" );
	deepEqual( Stem("emancipare"), "emancip" );
	deepEqual( Stem("emanciparea"), "emancip" );
	deepEqual( Stem("emancipată"), "emancip" );
	deepEqual( Stem("emancipării"), "emancipăr" );
	deepEqual( Stem("embleme"), "emblem" );
	deepEqual( Stem("emfatică"), "emfat" );
	deepEqual( Stem("emfaza"), "emfaz" );
	deepEqual( Stem("emfazei"), "emfaze" );
	deepEqual( Stem("eminamente"), "eminament" );
	deepEqual( Stem("eminent"), "eminent" );
	deepEqual( Stem("eminenţa"), "eminenţ" );
	deepEqual( Stem("eminenţi"), "eminenţ" );
	deepEqual( Stem("eminescu"), "eminescu" );
	deepEqual( Stem("emis"), "emis" );
	deepEqual( Stem("emit"), "emit" );
	deepEqual( Stem("emitem"), "emit" );
	deepEqual( Stem("emiterea"), "emit" );
	deepEqual( Stem("emoţia"), "emoţ" );
	deepEqual( Stem("emoţie"), "emoţ" );
	deepEqual( Stem("emoţiei"), "emoţ" );
	deepEqual( Stem("emoţionabilă"), "emoţion" );
	deepEqual( Stem("emoţionantă"), "emoţion" );
	deepEqual( Stem("emoţionat"), "emoţion" );
	deepEqual( Stem("emoţionată"), "emoţion" );
	deepEqual( Stem("emoţionează"), "emoţion" );
	deepEqual( Stem("empiric"), "empir" );
	deepEqual( Stem("empirică"), "empir" );
	deepEqual( Stem("empirice"), "empir" );
	deepEqual( Stem("empirie"), "empir" );
	deepEqual( Stem("empirismul"), "empirist" );
	deepEqual( Stem("en"), "en" );
	deepEqual( Stem("enciclopedia"), "encicloped" );
	deepEqual( Stem("enciclopedie"), "encicloped" );
	deepEqual( Stem("enciclopediei"), "encicloped" );
	deepEqual( Stem("energia"), "energ" );
	deepEqual( Stem("energic"), "energ" );
	deepEqual( Stem("energică"), "energ" );
	deepEqual( Stem("energie"), "energ" );
	deepEqual( Stem("energiei"), "energ" );
	deepEqual( Stem("energii"), "energ" );
	deepEqual( Stem("energiile"), "energ" );
	deepEqual( Stem("enervare"), "enerv" );
	deepEqual( Stem("enervaseră"), "enerv" );
	deepEqual( Stem("enervaseşi"), "enerv" );
	deepEqual( Stem("enervat"), "enerv" );
	deepEqual( Stem("enervată"), "enerv" );
	deepEqual( Stem("enescu"), "enescu" );
	deepEqual( Stem("engels"), "engels" );
	deepEqual( Stem("englez"), "englez" );
	deepEqual( Stem("englezească"), "englez" );
	deepEqual( Stem("englezesc"), "englez" );
	deepEqual( Stem("englezeşti"), "englez" );
	deepEqual( Stem("englezi"), "englez" );
	deepEqual( Stem("englezii"), "englez" );
	deepEqual( Stem("englezilor"), "englez" );
	deepEqual( Stem("englezul"), "englez" );
	deepEqual( Stem("enigmă"), "enigm" );
	deepEqual( Stem("enigmele"), "enigm" );
	deepEqual( Stem("enorm"), "enorm" );
	deepEqual( Stem("enorma"), "enorm" );
	deepEqual( Stem("enormă"), "enorm" );
	deepEqual( Stem("enorme"), "enorm" );
	deepEqual( Stem("enormitate"), "enorm" );
	deepEqual( Stem("enormitatea"), "enorm" );
	deepEqual( Stem("enormităţi"), "enorm" );
	deepEqual( Stem("entităţi"), "entităţ" );
	deepEqual( Stem("entomologul"), "entomolog" );
	deepEqual( Stem("entuziasm"), "entuziasm" );
	deepEqual( Stem("entuziasma"), "entuziasm" );
	deepEqual( Stem("entuziasmat"), "entuziasm" );
	deepEqual( Stem("entuziasme"), "entuziasm" );
	deepEqual( Stem("entuziasmează"), "entuziasm" );
	deepEqual( Stem("entuziasmeze"), "entuziasm" );
	deepEqual( Stem("entuziasmul"), "entuziasm" );
	deepEqual( Stem("entuziast"), "entuziast" );
	deepEqual( Stem("entuziastă"), "entuziast" );
	deepEqual( Stem("entuziaste"), "entuziast" );
	deepEqual( Stem("entuziaştii"), "entuziaşt" );
	deepEqual( Stem("enumerat"), "enumer" );
	deepEqual( Stem("enunţam"), "enunţ" );
	deepEqual( Stem("enunţat"), "enunţ" );
	deepEqual( Stem("enunţată"), "enunţ" );
	deepEqual( Stem("enunţă"), "enunţ" );
	deepEqual( Stem("epatant"), "epat" );
	deepEqual( Stem("epavă"), "epav" );
	deepEqual( Stem("epileptică"), "epilept" );
	deepEqual( Stem("episcopii"), "episcop" );
	deepEqual( Stem("episcopul"), "episcop" );
	deepEqual( Stem("epistemologic"), "epistemolog" );
	deepEqual( Stem("epistemologie"), "epistemolog" );
	deepEqual( Stem("epiteliale"), "epitelial" );
	deepEqual( Stem("epitete"), "epitet" );
	deepEqual( Stem("epitrop"), "epitrop" );
	deepEqual( Stem("epoca"), "epoc" );
	deepEqual( Stem("epocei"), "epoce" );
	deepEqual( Stem("epoci"), "epoc" );
	deepEqual( Stem("epocii"), "epoc" );
	deepEqual( Stem("epuizează"), "epuiz" );
	deepEqual( Stem("era"), "era" );
	deepEqual( Stem("erai"), "era" );
	deepEqual( Stem("eram"), "eram" );
	deepEqual( Stem("eraţi"), "eraţ" );
	deepEqual( Stem("erau"), "erau" );
	deepEqual( Stem("ereditar"), "ereditar" );
	deepEqual( Stem("ereditate"), "ered" );
	deepEqual( Stem("ereticilor"), "eret" );
	deepEqual( Stem("ergo"), "ergo" );
	deepEqual( Stem("erkenntniskritik"), "erkenntniskritik" );
	deepEqual( Stem("erkenntnissoziologie"), "erkenntnissoziolog" );
	deepEqual( Stem("erkenntnistheorie"), "erkenntnistheor" );
	deepEqual( Stem("erkenntnniss"), "erkenntnniss" );
	deepEqual( Stem("ernst"), "ernst" );
	deepEqual( Stem("eroi"), "ero" );
	deepEqual( Stem("eroic"), "eroic" );
	deepEqual( Stem("eroice"), "eroic" );
	deepEqual( Stem("eroii"), "eroi" );
	deepEqual( Stem("eroilor"), "ero" );
	deepEqual( Stem("eroine"), "eroin" );
	deepEqual( Stem("erotica"), "erot" );
	deepEqual( Stem("erotică"), "erot" );
	deepEqual( Stem("erotice"), "erot" );
	deepEqual( Stem("erotici"), "erot" );
	deepEqual( Stem("erou"), "erou" );
	deepEqual( Stem("eroul"), "ero" );
	deepEqual( Stem("erscheinung"), "erscheinung" );
	deepEqual( Stem("erudit"), "erud" );
	deepEqual( Stem("erudite"), "erud" );
	deepEqual( Stem("erudiţie"), "erudiţ" );
	deepEqual( Stem("erudiţiune"), "erud" );
	deepEqual( Stem("erupţia"), "erupţ" );
	deepEqual( Stem("erupţie"), "erupţ" );
	deepEqual( Stem("erwin"), "erwin" );
	deepEqual( Stem("es"), "es" );
	deepEqual( Stem("escadroane"), "escadroan" );
	deepEqual( Stem("escadron"), "escadron" );
	deepEqual( Stem("escroci"), "escroc" );
	deepEqual( Stem("esenţa"), "esenţ" );
	deepEqual( Stem("esenţă"), "esenţ" );
	deepEqual( Stem("esenţe"), "esenţ" );
	deepEqual( Stem("esenţei"), "esenţe" );
	deepEqual( Stem("esenţelor"), "esenţ" );
	deepEqual( Stem("esenţial"), "esenţial" );
	deepEqual( Stem("esenţiala"), "esenţial" );
	deepEqual( Stem("esenţială"), "esenţial" );
	deepEqual( Stem("esenţiale"), "esenţial" );
	deepEqual( Stem("esenţialist"), "esenţialist" );
	deepEqual( Stem("esenţialităţi"), "esenţial" );
	deepEqual( Stem("esenţializare"), "esenţializ" );
	deepEqual( Stem("esenţializat"), "esenţializ" );
	deepEqual( Stem("esenţializării"), "esenţializăr" );
	deepEqual( Stem("esenţializînd"), "esenţializînd" );
	deepEqual( Stem("esenţialmente"), "esenţialment" );
	deepEqual( Stem("esenţialul"), "esenţial" );
	deepEqual( Stem("eseu"), "eseu" );
	deepEqual( Stem("eseuri"), "eseur" );
	deepEqual( Stem("eseurile"), "eseur" );
	deepEqual( Stem("esofagului"), "esofag" );
	deepEqual( Stem("esoteric"), "esoter" );
	deepEqual( Stem("esoterică"), "esoter" );
	deepEqual( Stem("espectative"), "espect" );
	deepEqual( Stem("esprit"), "esprit" );
	deepEqual( Stem("esse"), "esse" );
	deepEqual( Stem("est"), "est" );
	deepEqual( Stem("estampele"), "estamp" );
	deepEqual( Stem("este"), "este" );
	deepEqual( Stem("estetic"), "estet" );
	deepEqual( Stem("estetică"), "estet" );
	deepEqual( Stem("estetice"), "estet" );
	deepEqual( Stem("estetism"), "estetist" );
	deepEqual( Stem("estetul"), "estet" );
	deepEqual( Stem("esteţi"), "esteţ" );
	deepEqual( Stem("esteţiers"), "esteţiers" );
	deepEqual( Stem("estic"), "estic" );
	deepEqual( Stem("estică"), "estic" );
	deepEqual( Stem("estima"), "estim" );
	deepEqual( Stem("estimare"), "estim" );
	deepEqual( Stem("estimăm"), "estim" );
	deepEqual( Stem("estimări"), "estimăr" );
	deepEqual( Stem("eşafod"), "eşafod" );
	deepEqual( Stem("eşafodaje"), "eşafodaj" );
	deepEqual( Stem("eşafodul"), "eşafod" );
	deepEqual( Stem("eşalonări"), "eşalonăr" );
	deepEqual( Stem("eşec"), "eşec" );
	deepEqual( Stem("eşichier"), "eşichier" );
	deepEqual( Stem("eşti"), "eşti" );
	deepEqual( Stem("etaj"), "etaj" );
	deepEqual( Stem("etaje"), "etaj" );
	deepEqual( Stem("etajera"), "etajer" );
	deepEqual( Stem("etajeră"), "etajer" );
	deepEqual( Stem("etaloane"), "etaloan" );
	deepEqual( Stem("etalon"), "etalon" );
	deepEqual( Stem("etapa"), "etap" );
	deepEqual( Stem("etapă"), "etap" );
	deepEqual( Stem("etape"), "etap" );
	deepEqual( Stem("etapelor"), "etap" );
	deepEqual( Stem("etatistă"), "etatist" );
	deepEqual( Stem("etc"), "etc" );
	deepEqual( Stem("eter"), "eter" );
	deepEqual( Stem("eteric"), "eter" );
	deepEqual( Stem("eteristă"), "eterist" );
	deepEqual( Stem("etern"), "etern" );
	deepEqual( Stem("eternă"), "etern" );
	deepEqual( Stem("eterne"), "etern" );
	deepEqual( Stem("eternelor"), "etern" );
	deepEqual( Stem("eternitate"), "etern" );
	deepEqual( Stem("eternitatea"), "etern" );
	deepEqual( Stem("eternităţii"), "etern" );
	deepEqual( Stem("eternizare"), "eterniz" );
	deepEqual( Stem("eternizînd"), "eternizînd" );
	deepEqual( Stem("eterogen"), "eterogen" );
	deepEqual( Stem("eterogenă"), "eterogen" );
	deepEqual( Stem("ethernet"), "ethernet" );
	deepEqual( Stem("etică"), "etic" );
	deepEqual( Stem("etice"), "etic" );
	deepEqual( Stem("eticheta"), "etichet" );
	deepEqual( Stem("etichetare"), "etichet" );
	deepEqual( Stem("etichetat"), "etichet" );
	deepEqual( Stem("etichetată"), "etichet" );
	deepEqual( Stem("etichetate"), "etichet" );
	deepEqual( Stem("etichetaţi"), "etichet" );
	deepEqual( Stem("etichetă"), "etichet" );
	deepEqual( Stem("etichete"), "etichet" );
	deepEqual( Stem("etichetează"), "etichet" );
	deepEqual( Stem("etichetelor"), "etichet" );
	deepEqual( Stem("etnografice"), "etnograf" );
	deepEqual( Stem("eu"), "eu" );
	deepEqual( Stem("euclid"), "euclid" );
	deepEqual( Stem("euclidian"), "euclidian" );
	deepEqual( Stem("euclidiană"), "euclidian" );
	deepEqual( Stem("euclidiene"), "euclidien" );
	deepEqual( Stem("eul"), "eul" );
	deepEqual( Stem("eului"), "eulu" );
	deepEqual( Stem("eunuc"), "eunuc" );
	deepEqual( Stem("euri"), "eur" );
	deepEqual( Stem("europa"), "europ" );
	deepEqual( Stem("european"), "european" );
	deepEqual( Stem("europeană"), "european" );
	deepEqual( Stem("europeanului"), "european" );
	deepEqual( Stem("europei"), "europe" );
	deepEqual( Stem("europene"), "europen" );
	deepEqual( Stem("europeni"), "europen" );
	deepEqual( Stem("europenii"), "europen" );
	deepEqual( Stem("europenizat"), "europeniz" );
	deepEqual( Stem("evacuarea"), "evacu" );
	deepEqual( Stem("evacuat"), "evacu" );
	deepEqual( Stem("evacuezi"), "evacu" );
	deepEqual( Stem("evada"), "evad" );
	deepEqual( Stem("evadat"), "evad" );
	deepEqual( Stem("evadez"), "evad" );
	deepEqual( Stem("evalua"), "evalu" );
	deepEqual( Stem("evaluare"), "evalu" );
	deepEqual( Stem("evaluarea"), "evalu" );
	deepEqual( Stem("evaluat"), "evalu" );
	deepEqual( Stem("evaluată"), "evalu" );
	deepEqual( Stem("evangelică"), "evangel" );
	deepEqual( Stem("evanghelică"), "evanghel" );
	deepEqual( Stem("evanghelie"), "evanghel" );
	deepEqual( Stem("evantai"), "evant" );
	deepEqual( Stem("evaporarea"), "evapor" );
	deepEqual( Stem("evaporaţie"), "evapor" );
	deepEqual( Stem("evaporează"), "evapor" );
	deepEqual( Stem("eveniment"), "eveniment" );
	deepEqual( Stem("evenimente"), "eveniment" );
	deepEqual( Stem("evenimentele"), "eveniment" );
	deepEqual( Stem("evenimentelor"), "eveniment" );
	deepEqual( Stem("evenimentul"), "eveniment" );
	deepEqual( Stem("evenimentului"), "eveniment" );
	deepEqual( Stem("eventual"), "eventual" );
	deepEqual( Stem("eventuală"), "eventual" );
	deepEqual( Stem("evident"), "evident" );
	deepEqual( Stem("evidentă"), "evident" );
	deepEqual( Stem("evidente"), "evident" );
	deepEqual( Stem("evidenţa"), "evidenţ" );
	deepEqual( Stem("evidenţă"), "evidenţ" );
	deepEqual( Stem("evidenţei"), "evidenţe" );
	deepEqual( Stem("evit"), "evit" );
	deepEqual( Stem("evita"), "evit" );
	deepEqual( Stem("evitam"), "evit" );
	deepEqual( Stem("evitat"), "evit" );
	deepEqual( Stem("evitau"), "evit" );
	deepEqual( Stem("evitând"), "evit" );
	deepEqual( Stem("evită"), "evit" );
	deepEqual( Stem("evităm"), "evit" );
	deepEqual( Stem("evite"), "evit" );
	deepEqual( Stem("evlavie"), "evlav" );
	deepEqual( Stem("evlavios"), "evlav" );
	deepEqual( Stem("evoluează"), "evolu" );
	deepEqual( Stem("evoluţie"), "evoluţ" );
	deepEqual( Stem("evoluţiei"), "evoluţ" );
	deepEqual( Stem("evoluţiune"), "evolut" );
	deepEqual( Stem("evoluţiunea"), "evolut" );
	deepEqual( Stem("evreiască"), "evreiasc" );
	deepEqual( Stem("evul"), "ev" );
	deepEqual( Stem("ewige"), "ewig" );
	deepEqual( Stem("ex"), "ex" );
	deepEqual( Stem("exact"), "exact" );
	deepEqual( Stem("exactă"), "exact" );
	deepEqual( Stem("exacte"), "exact" );
	deepEqual( Stem("exactitate"), "exact" );
	deepEqual( Stem("exactităţii"), "exact" );
	deepEqual( Stem("exageram"), "exager" );
	deepEqual( Stem("exagerare"), "exager" );
	deepEqual( Stem("exagerat"), "exager" );
	deepEqual( Stem("exagerata"), "exager" );
	deepEqual( Stem("exagerată"), "exager" );
	deepEqual( Stem("exagerează"), "exager" );
	deepEqual( Stem("exagerez"), "exager" );
	deepEqual( Stem("exagerezi"), "exager" );
	deepEqual( Stem("exaltă"), "exalt" );
	deepEqual( Stem("examen"), "examen" );
	deepEqual( Stem("examene"), "examen" );
	deepEqual( Stem("examenele"), "examen" );
	deepEqual( Stem("examenul"), "examen" );
	deepEqual( Stem("examina"), "examin" );
	deepEqual( Stem("examinat"), "examin" );
	deepEqual( Stem("examinau"), "examin" );
	deepEqual( Stem("examinându"), "examin" );
	deepEqual( Stem("examinări"), "examinăr" );
	deepEqual( Stem("examinează"), "examin" );
	deepEqual( Stem("examinez"), "examin" );
	deepEqual( Stem("examineze"), "examin" );
	deepEqual( Stem("examinezi"), "examin" );
	deepEqual( Stem("exaspera"), "exasper" );
	deepEqual( Stem("exasperante"), "exasper" );
	deepEqual( Stem("exasperarea"), "exasper" );
	deepEqual( Stem("exasperat"), "exasper" );
	deepEqual( Stem("exasperata"), "exasper" );
	deepEqual( Stem("exasperată"), "exasper" );
	deepEqual( Stem("exasperate"), "exasper" );
	deepEqual( Stem("exasperatele"), "exasper" );
	deepEqual( Stem("exasperează"), "exasper" );
	deepEqual( Stem("exceadă"), "excead" );
	deepEqual( Stem("excede"), "exced" );
	deepEqual( Stem("excelent"), "excelent" );
	deepEqual( Stem("excelentă"), "excelent" );
	deepEqual( Stem("excelenţa"), "excelenţ" );
	deepEqual( Stem("excelenţă"), "excelenţ" );
	deepEqual( Stem("excepţie"), "excepţ" );
	deepEqual( Stem("excepţii"), "excepţ" );
	deepEqual( Stem("excepţiile"), "excepţ" );
	deepEqual( Stem("excepţional"), "excepţional" );
	deepEqual( Stem("excepţionale"), "excepţional" );
	deepEqual( Stem("excepţiune"), "except" );
	deepEqual( Stem("excepţiunea"), "except" );
	deepEqual( Stem("excepţiuni"), "except" );
	deepEqual( Stem("excepţiunile"), "except" );
	deepEqual( Stem("exces"), "exces" );
	deepEqual( Stem("excesiv"), "exces" );
	deepEqual( Stem("excesivă"), "exces" );
	deepEqual( Stem("excesul"), "exces" );
	deepEqual( Stem("excesului"), "exces" );
	deepEqual( Stem("excitaţiune"), "excit" );
	deepEqual( Stem("excitaţiuni"), "excitat" );
	deepEqual( Stem("exclamare"), "exclam" );
	deepEqual( Stem("exclamat"), "exclam" );
	deepEqual( Stem("exclamaţia"), "exclam" );
	deepEqual( Stem("exclamaţii"), "exclam" );
	deepEqual( Stem("exclamă"), "exclam" );
	deepEqual( Stem("exclamăm"), "exclam" );
	deepEqual( Stem("exclud"), "exclud" );
	deepEqual( Stem("exclude"), "exclud" );
	deepEqual( Stem("excluderea"), "exclud" );
	deepEqual( Stem("exclus"), "exclus" );
	deepEqual( Stem("exclusiv"), "exclus" );
	deepEqual( Stem("exclusivă"), "exclus" );
	deepEqual( Stem("exclusive"), "exclus" );
	deepEqual( Stem("exclusivitate"), "exclus" );
	deepEqual( Stem("excluziv"), "excluz" );
	deepEqual( Stem("excursia"), "excurs" );
	deepEqual( Stem("excursie"), "excurs" );
	deepEqual( Stem("excursii"), "excurs" );
	deepEqual( Stem("excursiilor"), "excurs" );
	deepEqual( Stem("excursionişti"), "excursionist" );
	deepEqual( Stem("execut"), "exec" );
	deepEqual( Stem("executanţii"), "executanţ" );
	deepEqual( Stem("executare"), "execut" );
	deepEqual( Stem("executat"), "execut" );
	deepEqual( Stem("executau"), "execut" );
	deepEqual( Stem("execută"), "exec" );
	deepEqual( Stem("executăm"), "execut" );
	deepEqual( Stem("execute"), "exec" );
	deepEqual( Stem("execuţie"), "execuţ" );
	deepEqual( Stem("exemplar"), "exemplar" );
	deepEqual( Stem("exemplară"), "exempl" );
	deepEqual( Stem("exemplare"), "exempl" );
	deepEqual( Stem("exemplarului"), "exemplar" );
	deepEqual( Stem("exemple"), "exempl" );
	deepEqual( Stem("exemplele"), "exempl" );
	deepEqual( Stem("exemplificare"), "exemplific" );
	deepEqual( Stem("exemplu"), "exemplu" );
	deepEqual( Stem("exemplul"), "exempl" );
	deepEqual( Stem("exemplului"), "exempl" );
	deepEqual( Stem("exercita"), "exerc" );
	deepEqual( Stem("exercită"), "exerc" );
	deepEqual( Stem("exerciteze"), "exercit" );
	deepEqual( Stem("exerciţii"), "exerc" );
	deepEqual( Stem("exerciţiu"), "exerciţiu" );
	deepEqual( Stem("exhaustiv"), "exhaust" );
	deepEqual( Stem("exhibiţionism"), "exhibiţionist" );
	deepEqual( Stem("exilează"), "exil" );
	deepEqual( Stem("exilului"), "exil" );
	deepEqual( Stem("exist"), "exist" );
	deepEqual( Stem("exista"), "exist" );
	deepEqual( Stem("existase"), "exist" );
	deepEqual( Stem("existat"), "exist" );
	deepEqual( Stem("existau"), "exist" );
	deepEqual( Stem("existând"), "exist" );
	deepEqual( Stem("există"), "exist" );
	deepEqual( Stem("existăm"), "exist" );
	deepEqual( Stem("existe"), "exist" );
	deepEqual( Stem("existent"), "existent" );
	deepEqual( Stem("existentă"), "existent" );
	deepEqual( Stem("existentăen"), "existentăen" );
	deepEqual( Stem("existente"), "existent" );
	deepEqual( Stem("existenten"), "existenten" );
	deepEqual( Stem("existention"), "existention" );
	deepEqual( Stem("existenţa"), "existenţ" );
	deepEqual( Stem("existenţaen"), "existenţaen" );
	deepEqual( Stem("existenţă"), "existenţ" );
	deepEqual( Stem("existenţe"), "existenţ" );
	deepEqual( Stem("existenţei"), "existenţe" );
	deepEqual( Stem("existenţele"), "existenţ" );
	deepEqual( Stem("existenţelor"), "existenţ" );
	deepEqual( Stem("existenţial"), "existenţial" );
	deepEqual( Stem("existenţială"), "existenţial" );
	deepEqual( Stem("existînd"), "existînd" );
	deepEqual( Stem("exişti"), "exişt" );
	deepEqual( Stem("exmatricularea"), "exmatricul" );
	deepEqual( Stem("exmatriculat"), "exmatricul" );
	deepEqual( Stem("exodul"), "exod" );
	deepEqual( Stem("exonartexul"), "exonartex" );
	deepEqual( Stem("exonerat"), "exoner" );
	deepEqual( Stem("exorcizare"), "exorciz" );
	deepEqual( Stem("exotic"), "exot" );
	deepEqual( Stem("exotică"), "exot" );
	deepEqual( Stem("exotici"), "exot" );
	deepEqual( Stem("exotism"), "exotist" );
	deepEqual( Stem("exotisme"), "exotist" );
	deepEqual( Stem("expediat"), "exped" );
	deepEqual( Stem("experienţa"), "experienţ" );
	deepEqual( Stem("experienţă"), "experienţ" );
	deepEqual( Stem("experienţe"), "experienţ" );
	deepEqual( Stem("experienţei"), "experienţe" );
	deepEqual( Stem("experimental"), "experimental" );
	deepEqual( Stem("experimentală"), "experimental" );
	deepEqual( Stem("experimentat"), "experiment" );
	deepEqual( Stem("experţii"), "experţ" );
	deepEqual( Stem("explic"), "explic" );
	deepEqual( Stem("explica"), "explic" );
	deepEqual( Stem("explicabil"), "explic" );
	deepEqual( Stem("explicabilă"), "explic" );
	deepEqual( Stem("explicare"), "explic" );
	deepEqual( Stem("explicarea"), "explic" );
	deepEqual( Stem("explicat"), "explic" );
	deepEqual( Stem("explicată"), "explic" );
	deepEqual( Stem("explicativ"), "explic" );
	deepEqual( Stem("explicativă"), "explic" );
	deepEqual( Stem("explicaţia"), "explic" );
	deepEqual( Stem("explicaţie"), "explic" );
	deepEqual( Stem("explicaţii"), "explic" );
	deepEqual( Stem("explicaţiile"), "explic" );
	deepEqual( Stem("explicaţiilor"), "explic" );
	deepEqual( Stem("explicaţiune"), "explic" );
	deepEqual( Stem("explicaţiunea"), "explic" );
	deepEqual( Stem("explicaţiuni"), "explicat" );
	deepEqual( Stem("explicau"), "explic" );
	deepEqual( Stem("explică"), "explic" );
	deepEqual( Stem("explicăm"), "explic" );
	deepEqual( Stem("explice"), "explic" );
	deepEqual( Stem("explici"), "explic" );
	deepEqual( Stem("explicit"), "explic" );
	deepEqual( Stem("exploatate"), "exploat" );
	deepEqual( Stem("exploatării"), "exploatăr" );
	deepEqual( Stem("exploatărilor"), "exploatăr" );
	deepEqual( Stem("exploatează"), "exploat" );
	deepEqual( Stem("exploda"), "explod" );
	deepEqual( Stem("explodează"), "explod" );
	deepEqual( Stem("explozia"), "exploz" );
	deepEqual( Stem("explozie"), "exploz" );
	deepEqual( Stem("explozii"), "exploz" );
	deepEqual( Stem("exploziile"), "exploz" );
	deepEqual( Stem("exploziilor"), "exploz" );
	deepEqual( Stem("exportul"), "export" );
	deepEqual( Stem("expozitiv"), "expoz" );
	deepEqual( Stem("expoziţia"), "expoziţ" );
	deepEqual( Stem("expoziţie"), "expoziţ" );
	deepEqual( Stem("expres"), "expres" );
	deepEqual( Stem("expresia"), "expres" );
	deepEqual( Stem("expresie"), "expres" );
	deepEqual( Stem("expresionistă"), "expresionist" );
	deepEqual( Stem("expresiune"), "expresiun" );
	deepEqual( Stem("expresiunea"), "expresiun" );
	deepEqual( Stem("expresiunile"), "expresiun" );
	deepEqual( Stem("expresiv"), "expres" );
	deepEqual( Stem("expresivitate"), "expres" );
	deepEqual( Stem("exprim"), "exprim" );
	deepEqual( Stem("exprima"), "exprim" );
	deepEqual( Stem("exprimare"), "exprim" );
	deepEqual( Stem("exprimarea"), "exprim" );
	deepEqual( Stem("exprimat"), "exprim" );
	deepEqual( Stem("exprimată"), "exprim" );
	deepEqual( Stem("exprimate"), "exprim" );
	deepEqual( Stem("exprimă"), "exprim" );
	deepEqual( Stem("exprimăm"), "exprim" );
	deepEqual( Stem("exprime"), "exprim" );
	deepEqual( Stem("expun"), "expun" );
	deepEqual( Stem("expune"), "expun" );
	deepEqual( Stem("expunea"), "expun" );
	deepEqual( Stem("expunem"), "expun" );
	deepEqual( Stem("expunere"), "expun" );
	deepEqual( Stem("expunerea"), "expun" );
	deepEqual( Stem("expunerii"), "expuner" );
	deepEqual( Stem("expus"), "expus" );
	deepEqual( Stem("expusă"), "expus" );
	deepEqual( Stem("expuse"), "expu" );
	deepEqual( Stem("exquise"), "exquis" );
	deepEqual( Stem("extatică"), "extat" );
	deepEqual( Stem("extatici"), "extat" );
	deepEqual( Stem("extaz"), "extaz" );
	deepEqual( Stem("extensiune"), "extensiun" );
	deepEqual( Stem("extenuarea"), "extenu" );
	deepEqual( Stem("exterioară"), "exterioar" );
	deepEqual( Stem("exterioare"), "exterioar" );
	deepEqual( Stem("exterior"), "exterior" );
	deepEqual( Stem("exterminare"), "extermin" );
	deepEqual( Stem("externă"), "extern" );
	deepEqual( Stem("externe"), "extern" );
	deepEqual( Stem("extinde"), "extind" );
	deepEqual( Stem("extindem"), "extind" );
	deepEqual( Stem("extindere"), "extind" );
	deepEqual( Stem("extinderea"), "extind" );
	deepEqual( Stem("extraaristocratice"), "extraaristocrat" );
	deepEqual( Stem("extrage"), "extrag" );
	deepEqual( Stem("extragnoseologice"), "extragnoseolog" );
	deepEqual( Stem("extramuzicale"), "extramuz" );
	deepEqual( Stem("extraordinar"), "extraordinar" );
	deepEqual( Stem("extraordinara"), "extraordinar" );
	deepEqual( Stem("extraordinară"), "extraordin" );
	deepEqual( Stem("extraordinare"), "extraordin" );
	deepEqual( Stem("extrapolat"), "extrapol" );
	deepEqual( Stem("extrapolată"), "extrapol" );
	deepEqual( Stem("extrapolaţi"), "extrapol" );
	deepEqual( Stem("extrapolează"), "extrapol" );
	deepEqual( Stem("extras"), "extras" );
	deepEqual( Stem("extrasă"), "extras" );
	deepEqual( Stem("extrase"), "extra" );
	deepEqual( Stem("extraterestru"), "extraterestru" );
	deepEqual( Stem("extratereştri"), "extratereştr" );
	deepEqual( Stem("extravagant"), "extravag" );
	deepEqual( Stem("extravagante"), "extravag" );
	deepEqual( Stem("extravaganţa"), "extravaganţ" );
	deepEqual( Stem("extravaganţă"), "extravaganţ" );
	deepEqual( Stem("extrăgea"), "extrăg" );
	deepEqual( Stem("extrem"), "extrem" );
	deepEqual( Stem("extrema"), "extrem" );
	deepEqual( Stem("extremă"), "extrem" );
	deepEqual( Stem("extreme"), "extrem" );
	deepEqual( Stem("extremei"), "extreme" );
	deepEqual( Stem("extremelor"), "extrem" );
	deepEqual( Stem("extremi"), "extrem" );
	deepEqual( Stem("extremis"), "extremis" );
	deepEqual( Stem("extremism"), "extremist" );
	deepEqual( Stem("extremismelor"), "extremist" );
	deepEqual( Stem("extremist"), "extremist" );
	deepEqual( Stem("extremistă"), "extremist" );
	deepEqual( Stem("extremişti"), "extremist" );
	deepEqual( Stem("extremitatea"), "extrem" );
	deepEqual( Stem("extremităţi"), "extrem" );
	deepEqual( Stem("extrovertit"), "extrovert" );
	deepEqual( Stem("exuberanţă"), "exuberanţ" );
	deepEqual( Stem("exulta"), "exult" );
	deepEqual( Stem("exultantă"), "exult" );
	deepEqual( Stem("ezitant"), "ezit" );
	deepEqual( Stem("ezitare"), "ezit" );
	deepEqual( Stem("ezitarea"), "ezit" );
	deepEqual( Stem("ezită"), "ezit" );
	deepEqual( Stem("ezităm"), "ezit" );
	deepEqual( Stem("ezitări"), "ezităr" );
	deepEqual( Stem("f"), "f" );
	deepEqual( Stem("fabrica"), "fabric" );
	deepEqual( Stem("fabricat"), "fabric" );
	deepEqual( Stem("fabricaţie"), "fabric" );
	deepEqual( Stem("fabrică"), "fabric" );
	deepEqual( Stem("fabrice"), "fabric" );
	deepEqual( Stem("fabrici"), "fabric" );
	deepEqual( Stem("fabricii"), "fabric" );
	deepEqual( Stem("fabricilor"), "fabric" );
	deepEqual( Stem("fac"), "fac" );
	deepEqual( Stem("facă"), "fac" );
	deepEqual( Stem("face"), "fac" );
	deepEqual( Stem("facem"), "fac" );
	deepEqual( Stem("facerea"), "facer" );
	deepEqual( Stem("faceţi"), "fac" );
	deepEqual( Stem("fachir"), "fachir" );
	deepEqual( Stem("fachirilor"), "fachir" );
	deepEqual( Stem("faci"), "fac" );
	deepEqual( Stem("facile"), "fac" );
	deepEqual( Stem("facle"), "facl" );
	deepEqual( Stem("facsimil"), "facsimil" );
	deepEqual( Stem("facto"), "facto" );
	deepEqual( Stem("factor"), "factor" );
	deepEqual( Stem("factori"), "factor" );
	deepEqual( Stem("factorilor"), "factor" );
	deepEqual( Stem("facultate"), "facult" );
	deepEqual( Stem("facultatea"), "facult" );
	deepEqual( Stem("facultăţii"), "facultăţ" );
	deepEqual( Stem("fad"), "fad" );
	deepEqual( Stem("fade"), "fad" );
	deepEqual( Stem("faimoasă"), "faimoas" );
	deepEqual( Stem("faimosul"), "faimos" );
	deepEqual( Stem("faliment"), "faliment" );
	deepEqual( Stem("fals"), "fals" );
	deepEqual( Stem("falsă"), "fals" );
	deepEqual( Stem("false"), "fal" );
	deepEqual( Stem("falsifică"), "falsif" );
	deepEqual( Stem("falşa"), "falş" );
	deepEqual( Stem("falşă"), "falş" );
	deepEqual( Stem("familia"), "famil" );
	deepEqual( Stem("familial"), "familial" );
	deepEqual( Stem("familiar"), "familiar" );
	deepEqual( Stem("familiară"), "familiar" );
	deepEqual( Stem("familiaritate"), "familiar" );
	deepEqual( Stem("familiarităţile"), "familiar" );
	deepEqual( Stem("familie"), "famil" );
	deepEqual( Stem("familiei"), "famil" );
	deepEqual( Stem("familii"), "famil" );
	deepEqual( Stem("familiile"), "famil" );
	deepEqual( Stem("fanatic"), "fanat" );
	deepEqual( Stem("fanatică"), "fanat" );
	deepEqual( Stem("fanfara"), "fanfar" );
	deepEqual( Stem("fanfară"), "fanf" );
	deepEqual( Stem("fanfaronadă"), "fanfaronad" );
	deepEqual( Stem("fanion"), "fanion" );
	deepEqual( Stem("fantastic"), "fantast" );
	deepEqual( Stem("fantastică"), "fantast" );
	deepEqual( Stem("fantastice"), "fantast" );
	deepEqual( Stem("fantazia"), "fantaz" );
	deepEqual( Stem("fantaziei"), "fantaz" );
	deepEqual( Stem("fantaziilor"), "fantaz" );
	deepEqual( Stem("fante"), "fant" );
	deepEqual( Stem("fantezie"), "fantez" );
	deepEqual( Stem("fantezist"), "fantezist" );
	deepEqual( Stem("fantezistă"), "fantezist" );
	deepEqual( Stem("fantomatic"), "fantomat" );
	deepEqual( Stem("fapt"), "fapt" );
	deepEqual( Stem("fapta"), "fapt" );
	deepEqual( Stem("faptă"), "fapt" );
	deepEqual( Stem("fapte"), "fapt" );
	deepEqual( Stem("faptei"), "fapte" );
	deepEqual( Stem("faptele"), "fapt" );
	deepEqual( Stem("faptelor"), "fapt" );
	deepEqual( Stem("faptul"), "fapt" );
	deepEqual( Stem("faptului"), "fapt" );
	deepEqual( Stem("farfuria"), "farfur" );
	deepEqual( Stem("farfurie"), "farfur" );
	deepEqual( Stem("farfurii"), "farfur" );
	deepEqual( Stem("farfurioarele"), "farfurioar" );
	deepEqual( Stem("fariseism"), "fariseist" );
	deepEqual( Stem("farmacie"), "farmac" );
	deepEqual( Stem("farmaciilor"), "farmac" );
	deepEqual( Stem("farmec"), "farmec" );
	deepEqual( Stem("farmecele"), "farmec" );
	deepEqual( Stem("farmecul"), "farmec" );
	deepEqual( Stem("farsa"), "fars" );
	deepEqual( Stem("farsă"), "fars" );
	deepEqual( Stem("farsor"), "farsor" );
	deepEqual( Stem("farurile"), "farur" );
	deepEqual( Stem("fasole"), "fasol" );
	deepEqual( Stem("fast"), "fast" );
	deepEqual( Stem("fastidios"), "fastid" );
	deepEqual( Stem("faşă"), "faş" );
	deepEqual( Stem("fata"), "fat" );
	deepEqual( Stem("fatal"), "fatal" );
	deepEqual( Stem("fatale"), "fatal" );
	deepEqual( Stem("fatalistă"), "fatalist" );
	deepEqual( Stem("fatalitate"), "fatal" );
	deepEqual( Stem("fatalitatea"), "fatal" );
	deepEqual( Stem("fată"), "fat" );
	deepEqual( Stem("faţa"), "faţ" );
	deepEqual( Stem("faţade"), "faţad" );
	deepEqual( Stem("faţă"), "faţ" );
	deepEqual( Stem("favoare"), "favoar" );
	deepEqual( Stem("favoarea"), "favoar" );
	deepEqual( Stem("favorabile"), "favor" );
	deepEqual( Stem("favorit"), "favor" );
	deepEqual( Stem("favorită"), "favor" );
	deepEqual( Stem("favoriţi"), "favor" );
	deepEqual( Stem("favoriza"), "favoriz" );
	deepEqual( Stem("favorizare"), "favoriz" );
	deepEqual( Stem("favorizat"), "favoriz" );
	deepEqual( Stem("favorurile"), "favorur" );
	deepEqual( Stem("faza"), "faz" );
	deepEqual( Stem("fâlfâire"), "fâlfâir" );
	deepEqual( Stem("fâlfâiri"), "fâlfâir" );
	deepEqual( Stem("fân"), "fân" );
	deepEqual( Stem("fâneaţă"), "fâneaţ" );
	deepEqual( Stem("fâneţe"), "fâneţ" );
	deepEqual( Stem("fâneţele"), "fâneţ" );
	deepEqual( Stem("fâneţuri"), "fâneţur" );
	deepEqual( Stem("fântâna"), "fântân" );
	deepEqual( Stem("fântână"), "fântân" );
	deepEqual( Stem("fântâni"), "fântân" );
	deepEqual( Stem("fâsâind"), "fâsâind" );
	deepEqual( Stem("fâsâit"), "fâsâit" );
	deepEqual( Stem("fâsâituri"), "fâsâitur" );
	deepEqual( Stem("fâsâiturile"), "fâsâitur" );
	deepEqual( Stem("fă"), "fă" );
	deepEqual( Stem("făcând"), "făcând" );
	deepEqual( Stem("făcându"), "făcându" );
	deepEqual( Stem("făcea"), "făc" );
	deepEqual( Stem("făceai"), "făcea" );
	deepEqual( Stem("făceam"), "făceam" );
	deepEqual( Stem("făceau"), "făceau" );
	deepEqual( Stem("făcuse"), "făcus" );
	deepEqual( Stem("făcusem"), "făcusem" );
	deepEqual( Stem("făcuseră"), "făcuser" );
	deepEqual( Stem("făcut"), "făcut" );
	deepEqual( Stem("făcută"), "făcut" );
	deepEqual( Stem("făcute"), "făcut" );
	deepEqual( Stem("făcuţi"), "făcuţ" );
	deepEqual( Stem("făgaş"), "făgaş" );
	deepEqual( Stem("făgaşul"), "făgaş" );
	deepEqual( Stem("făgăduinţa"), "făgăduinţ" );
	deepEqual( Stem("făgăduinţă"), "făgăduinţ" );
	deepEqual( Stem("făgăduinţe"), "făgăduinţ" );
	deepEqual( Stem("făgăduinţele"), "făgăduinţ" );
	deepEqual( Stem("făgăduit"), "făgădu" );
	deepEqual( Stem("fălcile"), "fălc" );
	deepEqual( Stem("fărâmături"), "fărâmătur" );
	deepEqual( Stem("fărâmiţa"), "fărâmiţ" );
	deepEqual( Stem("fărâmiţat"), "fărâmiţ" );
	deepEqual( Stem("fărâmiţos"), "fărâmiţ" );
	deepEqual( Stem("fără"), "făr" );
	deepEqual( Stem("făţişă"), "făţiş" );
	deepEqual( Stem("făureşte"), "făur" );
	deepEqual( Stem("febră"), "febr" );
	deepEqual( Stem("febrei"), "febre" );
	deepEqual( Stem("febril"), "febril" );
	deepEqual( Stem("febrilă"), "febril" );
	deepEqual( Stem("februarie"), "februar" );
	deepEqual( Stem("fecioria"), "fecior" );
	deepEqual( Stem("feciorului"), "fecior" );
	deepEqual( Stem("fecunditate"), "fecund" );
	deepEqual( Stem("fehnenfluchtig"), "fehnenfluchtig" );
	deepEqual( Stem("fel"), "fel" );
	deepEqual( Stem("felia"), "feli" );
	deepEqual( Stem("felicitam"), "felicit" );
	deepEqual( Stem("felicitat"), "felicit" );
	deepEqual( Stem("felii"), "fel" );
	deepEqual( Stem("felinar"), "felinar" );
	deepEqual( Stem("felinarele"), "felin" );
	deepEqual( Stem("felinelor"), "felin" );
	deepEqual( Stem("felul"), "fel" );
	deepEqual( Stem("felului"), "fel" );
	deepEqual( Stem("feluri"), "felur" );
	deepEqual( Stem("felurile"), "felur" );
	deepEqual( Stem("felurime"), "felurim" );
	deepEqual( Stem("felurită"), "felur" );
	deepEqual( Stem("felurite"), "felur" );
	deepEqual( Stem("feluriţi"), "felur" );
	deepEqual( Stem("femei"), "feme" );
	deepEqual( Stem("femeia"), "femei" );
	deepEqual( Stem("femeie"), "femei" );
	deepEqual( Stem("femeii"), "femei" );
	deepEqual( Stem("femeile"), "feme" );
	deepEqual( Stem("femeilor"), "feme" );
	deepEqual( Stem("femeiuşca"), "femeiuşc" );
	deepEqual( Stem("femeiuşcă"), "femeiuşc" );
	deepEqual( Stem("femeiuştile"), "femeiuşt" );
	deepEqual( Stem("feminin"), "feminin" );
	deepEqual( Stem("feminină"), "feminin" );
	deepEqual( Stem("feminismului"), "feminist" );
	deepEqual( Stem("feminitate"), "femin" );
	deepEqual( Stem("feminitatea"), "femin" );
	deepEqual( Stem("feminităţii"), "femin" );
	deepEqual( Stem("fenomen"), "fenomen" );
	deepEqual( Stem("fenomenal"), "fenomenal" );
	deepEqual( Stem("fenomene"), "fenomen" );
	deepEqual( Stem("fenomenele"), "fenomen" );
	deepEqual( Stem("fenomenelor"), "fenomen" );
	deepEqual( Stem("fenomenolog"), "fenomenolog" );
	deepEqual( Stem("fenomenologi"), "fenomenolog" );
	deepEqual( Stem("fenomenologic"), "fenomenolog" );
	deepEqual( Stem("fenomenologică"), "fenomenolog" );
	deepEqual( Stem("fenomenologice"), "fenomenolog" );
	deepEqual( Stem("fenomenologie"), "fenomenolog" );
	deepEqual( Stem("fenomenologiei"), "fenomenolog" );
	deepEqual( Stem("fenomenologii"), "fenomenolog" );
	deepEqual( Stem("fenomenologismul"), "fenomenologist" );
	deepEqual( Stem("fenomenul"), "fenomen" );
	deepEqual( Stem("fenomenului"), "fenomen" );
	deepEqual( Stem("fer"), "fer" );
	deepEqual( Stem("ferată"), "ferat" );
	deepEqual( Stem("ferate"), "ferat" );
	deepEqual( Stem("ferăstraielor"), "ferăstrai" );
	deepEqual( Stem("ferdinand"), "ferdinand" );
	deepEqual( Stem("ferească"), "fereasc" );
	deepEqual( Stem("fereastra"), "fereastr" );
	deepEqual( Stem("fereastră"), "fereastr" );
	deepEqual( Stem("feresc"), "feresc" );
	deepEqual( Stem("ferestre"), "ferestr" );
	deepEqual( Stem("ferestrele"), "ferestr" );
	deepEqual( Stem("fereşte"), "fereşt" );
	deepEqual( Stem("feri"), "fer" );
	deepEqual( Stem("fericească"), "feric" );
	deepEqual( Stem("fericire"), "feric" );
	deepEqual( Stem("fericirea"), "feric" );
	deepEqual( Stem("fericiri"), "fericir" );
	deepEqual( Stem("fericirilor"), "fericir" );
	deepEqual( Stem("fericit"), "feric" );
	deepEqual( Stem("fericită"), "feric" );
	deepEqual( Stem("ferindu"), "ferindu" );
	deepEqual( Stem("ferit"), "ferit" );
	deepEqual( Stem("ferită"), "ferit" );
	deepEqual( Stem("feriţi"), "fer" );
	deepEqual( Stem("ferm"), "ferm" );
	deepEqual( Stem("fermă"), "ferm" );
	deepEqual( Stem("fermecată"), "fermec" );
	deepEqual( Stem("fermecătoare"), "fermec" );
	deepEqual( Stem("fermecător"), "fermec" );
	deepEqual( Stem("fermele"), "ferm" );
	deepEqual( Stem("fert"), "fert" );
	deepEqual( Stem("fervent"), "fervent" );
	deepEqual( Stem("fervenţi"), "fervenţ" );
	deepEqual( Stem("festiv"), "festiv" );
	deepEqual( Stem("festivalurile"), "festivalur" );
	deepEqual( Stem("fete"), "fet" );
	deepEqual( Stem("fetele"), "fet" );
	deepEqual( Stem("fetică"), "fetic" );
	deepEqual( Stem("fetiţă"), "fetiţ" );
	deepEqual( Stem("fetiţei"), "fetiţe" );
	deepEqual( Stem("fetiţo"), "fetiţo" );
	deepEqual( Stem("feţe"), "feţ" );
	deepEqual( Stem("feţei"), "feţe" );
	deepEqual( Stem("feţele"), "feţ" );
	deepEqual( Stem("feţelor"), "feţ" );
	deepEqual( Stem("feu"), "feu" );
	deepEqual( Stem("feudală"), "feudal" );
	deepEqual( Stem("feudale"), "feudal" );
	deepEqual( Stem("fi"), "fi" );
	deepEqual( Stem("fiară"), "fiar" );
	deepEqual( Stem("fiarbă"), "fiarb" );
	deepEqual( Stem("fichte"), "ficht" );
	deepEqual( Stem("fichtenau"), "fichten" );
	deepEqual( Stem("fictiv"), "fictiv" );
	deepEqual( Stem("fictivă"), "fictiv" );
	deepEqual( Stem("ficţiune"), "ficţiun" );
	deepEqual( Stem("ficţiunile"), "ficţiun" );
	deepEqual( Stem("fidelă"), "fidel" );
	deepEqual( Stem("fie"), "fie" );
	deepEqual( Stem("fiecare"), "fiec" );
	deepEqual( Stem("fiecărei"), "fiecăre" );
	deepEqual( Stem("fiecărui"), "fiecăr" );
	deepEqual( Stem("fiecăruia"), "fiecărui" );
	deepEqual( Stem("fiece"), "fiec" );
	deepEqual( Stem("fier"), "fier" );
	deepEqual( Stem("fierărie"), "fierăr" );
	deepEqual( Stem("fierb"), "fierb" );
	deepEqual( Stem("fierbând"), "fierb" );
	deepEqual( Stem("fierbe"), "fierb" );
	deepEqual( Stem("fierbea"), "fierb" );
	deepEqual( Stem("fierbeam"), "fierb" );
	deepEqual( Stem("fierbeau"), "fierb" );
	deepEqual( Stem("fierbere"), "fierb" );
	deepEqual( Stem("fierberea"), "fierb" );
	deepEqual( Stem("fierberei"), "fierbere" );
	deepEqual( Stem("fierberii"), "fierber" );
	deepEqual( Stem("fierberile"), "fierber" );
	deepEqual( Stem("fierbinte"), "fierbint" );
	deepEqual( Stem("fierbinţeală"), "fierbinţeal" );
	deepEqual( Stem("fierte"), "fiert" );
	deepEqual( Stem("fierului"), "fier" );
	deepEqual( Stem("fiesta"), "fiest" );
	deepEqual( Stem("fig"), "fig" );
	deepEqual( Stem("figura"), "figur" );
	deepEqual( Stem("figurant"), "figur" );
	deepEqual( Stem("figuranţi"), "figuranţ" );
	deepEqual( Stem("figuranţilor"), "figuranţ" );
	deepEqual( Stem("figurare"), "figur" );
	deepEqual( Stem("figurat"), "figur" );
	deepEqual( Stem("figurată"), "figur" );
	deepEqual( Stem("figurativă"), "figur" );
	deepEqual( Stem("figurative"), "figur" );
	deepEqual( Stem("figuraţie"), "figur" );
	deepEqual( Stem("figuraţiei"), "figur" );
	deepEqual( Stem("figură"), "figur" );
	deepEqual( Stem("figurări"), "figurăr" );
	deepEqual( Stem("figureaza"), "figureaz" );
	deepEqual( Stem("figureze"), "figur" );
	deepEqual( Stem("figuri"), "figur" );
	deepEqual( Stem("figurii"), "figur" );
	deepEqual( Stem("figurile"), "figur" );
	deepEqual( Stem("figurilor"), "figur" );
	deepEqual( Stem("figurine"), "figurin" );
	deepEqual( Stem("figurînd"), "figurînd" );
	deepEqual( Stem("fii"), "fii" );
	deepEqual( Stem("fiica"), "fiic" );
	deepEqual( Stem("fiice"), "fiic" );
	deepEqual( Stem("fiicei"), "fiice" );
	deepEqual( Stem("fiilor"), "fiilor" );
	deepEqual( Stem("fiind"), "fiind" );
	deepEqual( Stem("fiindcă"), "fiindc" );
	deepEqual( Stem("fiindu"), "fiindu" );
	deepEqual( Stem("fiinţa"), "fiinţ" );
	deepEqual( Stem("fiinţă"), "fiinţ" );
	deepEqual( Stem("fiinţe"), "fiinţ" );
	deepEqual( Stem("fiinţează"), "fiinţ" );
	deepEqual( Stem("fiinţelor"), "fiinţ" );
	deepEqual( Stem("filaj"), "filaj" );
	deepEqual( Stem("filantrop"), "filantrop" );
	deepEqual( Stem("filantropi"), "filantrop" );
	deepEqual( Stem("filantropice"), "filantrop" );
	deepEqual( Stem("filantropiei"), "filantrop" );
	deepEqual( Stem("filarmonică"), "filarmon" );
	deepEqual( Stem("filă"), "fil" );
	deepEqual( Stem("filările"), "filăr" );
	deepEqual( Stem("fildeş"), "fildeş" );
	deepEqual( Stem("file"), "fil" );
	deepEqual( Stem("fileu"), "fileu" );
	deepEqual( Stem("filială"), "filial" );
	deepEqual( Stem("filiale"), "filial" );
	deepEqual( Stem("filialei"), "filiale" );
	deepEqual( Stem("filiaţie"), "filiaţ" );
	deepEqual( Stem("filiera"), "filier" );
	deepEqual( Stem("filigran"), "filigran" );
	deepEqual( Stem("filipescu"), "filipescu" );
	deepEqual( Stem("filistină"), "filistin" );
	deepEqual( Stem("filistinii"), "filistin" );
	deepEqual( Stem("film"), "film" );
	deepEqual( Stem("filma"), "film" );
	deepEqual( Stem("filmată"), "filmat" );
	deepEqual( Stem("filmării"), "filmăr" );
	deepEqual( Stem("filme"), "film" );
	deepEqual( Stem("filmele"), "film" );
	deepEqual( Stem("filmelor"), "film" );
	deepEqual( Stem("filmic"), "filmic" );
	deepEqual( Stem("filoane"), "filoan" );
	deepEqual( Stem("filogeneză"), "filogenez" );
	deepEqual( Stem("filolog"), "filolog" );
	deepEqual( Stem("filologi"), "filolog" );
	deepEqual( Stem("filologia"), "filolog" );
	deepEqual( Stem("filologic"), "filolog" );
	deepEqual( Stem("filologică"), "filolog" );
	deepEqual( Stem("filologilor"), "filolog" );
	deepEqual( Stem("filomelei"), "filomele" );
	deepEqual( Stem("filosoafă"), "filosoaf" );
	deepEqual( Stem("filosof"), "filosof" );
	deepEqual( Stem("filosofa"), "filosof" );
	deepEqual( Stem("filosofare"), "filosof" );
	deepEqual( Stem("filosofarea"), "filosof" );
	deepEqual( Stem("filosofării"), "filosofăr" );
	deepEqual( Stem("filosofează"), "filosof" );
	deepEqual( Stem("filosofi"), "filosof" );
	deepEqual( Stem("filosofia"), "filosof" );
	deepEqual( Stem("filosofic"), "filosof" );
	deepEqual( Stem("filosofică"), "filosof" );
	deepEqual( Stem("filosofice"), "filosof" );
	deepEqual( Stem("filosoficească"), "filosofic" );
	deepEqual( Stem("filosoficeşte"), "filosofic" );
	deepEqual( Stem("filosofie"), "filosof" );
	deepEqual( Stem("filosofiei"), "filosof" );
	deepEqual( Stem("filosofii"), "filosof" );
	deepEqual( Stem("filosofilor"), "filosof" );
	deepEqual( Stem("filosoful"), "filosof" );
	deepEqual( Stem("filozof"), "filozof" );
	deepEqual( Stem("filozofa"), "filozof" );
	deepEqual( Stem("filozofat"), "filozof" );
	deepEqual( Stem("filozofă"), "filozof" );
	deepEqual( Stem("filozofi"), "filozof" );
	deepEqual( Stem("filozofia"), "filozof" );
	deepEqual( Stem("filozofic"), "filozof" );
	deepEqual( Stem("filozofică"), "filozof" );
	deepEqual( Stem("filozofice"), "filozof" );
	deepEqual( Stem("filozofie"), "filozof" );
	deepEqual( Stem("filozofiei"), "filozof" );
	deepEqual( Stem("filozofii"), "filozof" );
	deepEqual( Stem("filozofilor"), "filozof" );
	deepEqual( Stem("filozoful"), "filozof" );
	deepEqual( Stem("filozofului"), "filozof" );
	deepEqual( Stem("filtrării"), "filtrăr" );
	deepEqual( Stem("fim"), "fim" );
	deepEqual( Stem("fin"), "fin" );
	deepEqual( Stem("final"), "final" );
	deepEqual( Stem("finalurile"), "finalur" );
	deepEqual( Stem("financiar"), "financiar" );
	deepEqual( Stem("financiarii"), "financiar" );
	deepEqual( Stem("finanţe"), "finanţ" );
	deepEqual( Stem("finanţului"), "finanţ" );
	deepEqual( Stem("fină"), "fin" );
	deepEqual( Stem("fine"), "fin" );
	deepEqual( Stem("fineţea"), "fineţ" );
	deepEqual( Stem("finite"), "finit" );
	deepEqual( Stem("fior"), "fior" );
	deepEqual( Stem("fiorul"), "fior" );
	deepEqual( Stem("fir"), "fir" );
	deepEqual( Stem("fira"), "fir" );
	deepEqual( Stem("fire"), "fir" );
	deepEqual( Stem("firea"), "fir" );
	deepEqual( Stem("firească"), "fireasc" );
	deepEqual( Stem("firele"), "fir" );
	deepEqual( Stem("firesc"), "firesc" );
	deepEqual( Stem("fireşte"), "fireşt" );
	deepEqual( Stem("fireşti"), "fireşt" );
	deepEqual( Stem("firi"), "fir" );
	deepEqual( Stem("firile"), "fir" );
	deepEqual( Stem("firişor"), "firişor" );
	deepEqual( Stem("firmă"), "firm" );
	deepEqual( Stem("firme"), "firm" );
	deepEqual( Stem("firul"), "fir" );
	deepEqual( Stem("firului"), "fir" );
	deepEqual( Stem("fischer"), "fischer" );
	deepEqual( Stem("fise"), "fis" );
	deepEqual( Stem("fiţi"), "fiţ" );
	deepEqual( Stem("fiu"), "fiu" );
	deepEqual( Stem("fiul"), "fiul" );
	deepEqual( Stem("fix"), "fix" );
	deepEqual( Stem("fixa"), "fix" );
	deepEqual( Stem("fixase"), "fixas" );
	deepEqual( Stem("fixat"), "fixat" );
	deepEqual( Stem("fixată"), "fixat" );
	deepEqual( Stem("fixate"), "fixat" );
	deepEqual( Stem("fixă"), "fix" );
	deepEqual( Stem("fixăm"), "fix" );
	deepEqual( Stem("fixări"), "fixăr" );
	deepEqual( Stem("fixe"), "fix" );
	deepEqual( Stem("fixez"), "fixez" );
	deepEqual( Stem("fixezi"), "fixez" );
	deepEqual( Stem("fixitatea"), "fixitat" );
	deepEqual( Stem("fizic"), "fizic" );
	deepEqual( Stem("fizica"), "fizic" );
	deepEqual( Stem("fizicală"), "fizic" );
	deepEqual( Stem("fizică"), "fizic" );
	deepEqual( Stem("fizice"), "fizic" );
	deepEqual( Stem("fizicianul"), "fizician" );
	deepEqual( Stem("fizicieni"), "fizicien" );
	deepEqual( Stem("fizico"), "fizico" );
	deepEqual( Stem("fiziologică"), "fiziolog" );
	deepEqual( Stem("fiziologice"), "fiziolog" );
	deepEqual( Stem("fizionomia"), "fizionom" );
	deepEqual( Stem("flacon"), "flacon" );
	deepEqual( Stem("flaconul"), "flacon" );
	deepEqual( Stem("flagrant"), "flagrant" );
	deepEqual( Stem("flanc"), "flanc" );
	deepEqual( Stem("flancul"), "flanc" );
	deepEqual( Stem("flancuri"), "flancur" );
	deepEqual( Stem("flaşnetelor"), "flaşnet" );
	deepEqual( Stem("flaubert"), "flaubert" );
	deepEqual( Stem("flaut"), "flaut" );
	deepEqual( Stem("flautul"), "flaut" );
	deepEqual( Stem("flăcăiaş"), "flăcăiaş" );
	deepEqual( Stem("flăcări"), "flăcăr" );
	deepEqual( Stem("flăcările"), "flăcăr" );
	deepEqual( Stem("flăcărilor"), "flăcăr" );
	deepEqual( Stem("flăcău"), "flăcău" );
	deepEqual( Stem("flăcăul"), "flăc" );
	deepEqual( Stem("flămând"), "flăm" );
	deepEqual( Stem("fleac"), "fleac" );
	deepEqual( Stem("fleacuri"), "fleacur" );
	deepEqual( Stem("fleacurile"), "fleacur" );
	deepEqual( Stem("fleacurilor"), "fleacur" );
	deepEqual( Stem("flecari"), "flecar" );
	deepEqual( Stem("flecăreala"), "flecăreal" );
	deepEqual( Stem("fleşcăit"), "fleşcăit" );
	deepEqual( Stem("fleurs"), "fleurs" );
	deepEqual( Stem("flexibilă"), "flexibil" );
	deepEqual( Stem("flirt"), "flirt" );
	deepEqual( Stem("floare"), "floar" );
	deepEqual( Stem("floarea"), "floar" );
	deepEqual( Stem("flora"), "flor" );
	deepEqual( Stem("florea"), "flor" );
	deepEqual( Stem("florescu"), "florescu" );
	deepEqual( Stem("floretă"), "floret" );
	deepEqual( Stem("flori"), "flor" );
	deepEqual( Stem("florian"), "florian" );
	deepEqual( Stem("floricele"), "floric" );
	deepEqual( Stem("florile"), "flor" );
	deepEqual( Stem("florilor"), "flor" );
	deepEqual( Stem("floroiu"), "floroiu" );
	deepEqual( Stem("floroiule"), "floroiul" );
	deepEqual( Stem("fluentă"), "fluent" );
	deepEqual( Stem("fluid"), "fluid" );
	deepEqual( Stem("fluiera"), "fluier" );
	deepEqual( Stem("fluieri"), "fluier" );
	deepEqual( Stem("fluturi"), "flutur" );
	deepEqual( Stem("fluturii"), "flutur" );
	deepEqual( Stem("foaie"), "foai" );
	deepEqual( Stem("foame"), "foam" );
	deepEqual( Stem("foamea"), "foam" );
	deepEqual( Stem("foamei"), "foame" );
	deepEqual( Stem("foarte"), "foart" );
	deepEqual( Stem("foc"), "foc" );
	deepEqual( Stem("focare"), "focar" );
	deepEqual( Stem("focul"), "foc" );
	deepEqual( Stem("focului"), "foc" );
	deepEqual( Stem("focuri"), "focur" );
	deepEqual( Stem("focurile"), "focur" );
	deepEqual( Stem("focurilor"), "focur" );
	deepEqual( Stem("foi"), "foi" );
	deepEqual( Stem("foială"), "foial" );
	deepEqual( Stem("foiletonului"), "foileton" );
	deepEqual( Stem("foişorul"), "foişor" );
	deepEqual( Stem("foiţele"), "foiţ" );
	deepEqual( Stem("foloase"), "foloas" );
	deepEqual( Stem("folos"), "folos" );
	deepEqual( Stem("folosea"), "folo" );
	deepEqual( Stem("folosească"), "folos" );
	deepEqual( Stem("folosesc"), "folos" );
	deepEqual( Stem("folosindu"), "folos" );
	deepEqual( Stem("folosită"), "folos" );
	deepEqual( Stem("folositoare"), "folos" );
	deepEqual( Stem("folosiţi"), "folos" );
	deepEqual( Stem("folosul"), "folos" );
	deepEqual( Stem("fond"), "fond" );
	deepEqual( Stem("fondul"), "fond" );
	deepEqual( Stem("fonduri"), "fondur" );
	deepEqual( Stem("fonetic"), "fonet" );
	deepEqual( Stem("fonetică"), "fonet" );
	deepEqual( Stem("forfota"), "forfot" );
	deepEqual( Stem("forfotesc"), "forfot" );
	deepEqual( Stem("forfoteşte"), "forfot" );
	deepEqual( Stem("forma"), "form" );
	deepEqual( Stem("formal"), "formal" );
	deepEqual( Stem("formale"), "formal" );
	deepEqual( Stem("formalitate"), "formal" );
	deepEqual( Stem("formalităţi"), "formal" );
	deepEqual( Stem("formalităţilor"), "formal" );
	deepEqual( Stem("formarea"), "form" );
	deepEqual( Stem("formase"), "form" );
	deepEqual( Stem("format"), "format" );
	deepEqual( Stem("formată"), "format" );
	deepEqual( Stem("formaţia"), "form" );
	deepEqual( Stem("formaţiune"), "format" );
	deepEqual( Stem("formau"), "form" );
	deepEqual( Stem("formă"), "form" );
	deepEqual( Stem("forme"), "form" );
	deepEqual( Stem("formează"), "form" );
	deepEqual( Stem("formei"), "forme" );
	deepEqual( Stem("formele"), "form" );
	deepEqual( Stem("formelor"), "form" );
	deepEqual( Stem("formez"), "form" );
	deepEqual( Stem("formeze"), "form" );
	deepEqual( Stem("formidabil"), "formid" );
	deepEqual( Stem("formidabilă"), "formid" );
	deepEqual( Stem("formidabile"), "formid" );
	deepEqual( Stem("formula"), "formul" );
	deepEqual( Stem("formular"), "formular" );
	deepEqual( Stem("formulat"), "formul" );
	deepEqual( Stem("formulă"), "formul" );
	deepEqual( Stem("formule"), "formul" );
	deepEqual( Stem("formulează"), "formul" );
	deepEqual( Stem("formulele"), "formul" );
	deepEqual( Stem("fortificarea"), "fortific" );
	deepEqual( Stem("fortificasem"), "fortific" );
	deepEqual( Stem("fortificată"), "fortific" );
	deepEqual( Stem("fortificate"), "fortific" );
	deepEqual( Stem("fortificaţii"), "fortific" );
	deepEqual( Stem("fortificaţiile"), "fortific" );
	deepEqual( Stem("fortifice"), "fortif" );
	deepEqual( Stem("fortunei"), "fortune" );
	deepEqual( Stem("forţa"), "forţ" );
	deepEqual( Stem("forţat"), "forţat" );
	deepEqual( Stem("forţată"), "forţat" );
	deepEqual( Stem("forţă"), "forţ" );
	deepEqual( Stem("forţe"), "forţ" );
	deepEqual( Stem("forţei"), "forţe" );
	deepEqual( Stem("forţele"), "forţ" );
	deepEqual( Stem("forţelor"), "forţ" );
	deepEqual( Stem("fosforescentă"), "fosforescent" );
	deepEqual( Stem("fost"), "fost" );
	deepEqual( Stem("fosta"), "fost" );
	deepEqual( Stem("fostă"), "fost" );
	deepEqual( Stem("fostul"), "fost" );
	deepEqual( Stem("fotbal"), "fotbal" );
	deepEqual( Stem("fotografia"), "fotograf" );
	deepEqual( Stem("fotografiat"), "fotograf" );
	deepEqual( Stem("fotografiată"), "fotograf" );
	deepEqual( Stem("fotografic"), "fotograf" );
	deepEqual( Stem("fotografie"), "fotograf" );
	deepEqual( Stem("fotografii"), "fotograf" );
	deepEqual( Stem("fotolii"), "fotol" );
	deepEqual( Stem("fotoliile"), "fotol" );
	deepEqual( Stem("fotoliilor"), "fotol" );
	deepEqual( Stem("fotoliu"), "fotoliu" );
	deepEqual( Stem("fotoliul"), "fotol" );
	deepEqual( Stem("frac"), "frac" );
	deepEqual( Stem("fracţii"), "fracţ" );
	deepEqual( Stem("fracţiune"), "fracţiun" );
	deepEqual( Stem("fracţiuni"), "fracţiun" );
	deepEqual( Stem("fracul"), "frac" );
	deepEqual( Stem("fracului"), "frac" );
	deepEqual( Stem("frageda"), "fraged" );
	deepEqual( Stem("fragedă"), "fraged" );
	deepEqual( Stem("fragede"), "fraged" );
	deepEqual( Stem("fragi"), "frag" );
	deepEqual( Stem("fragile"), "frag" );
	deepEqual( Stem("fragment"), "fragment" );
	deepEqual( Stem("fragmentare"), "fragment" );
	deepEqual( Stem("fragmente"), "fragment" );
	deepEqual( Stem("france"), "franc" );
	deepEqual( Stem("francez"), "franc" );
	deepEqual( Stem("franceza"), "francez" );
	deepEqual( Stem("franceză"), "francez" );
	deepEqual( Stem("franceze"), "franc" );
	deepEqual( Stem("francezi"), "franc" );
	deepEqual( Stem("francezii"), "franc" );
	deepEqual( Stem("francezilor"), "franc" );
	deepEqual( Stem("francezul"), "franc" );
	deepEqual( Stem("francheţă"), "francheţ" );
	deepEqual( Stem("franci"), "franc" );
	deepEqual( Stem("francii"), "franc" );
	deepEqual( Stem("francis"), "francis" );
	deepEqual( Stem("francisc"), "francisc" );
	deepEqual( Stem("franco"), "franco" );
	deepEqual( Stem("franţa"), "franţ" );
	deepEqual( Stem("franţă"), "franţ" );
	deepEqual( Stem("franţei"), "franţe" );
	deepEqual( Stem("franţuzească"), "franţuz" );
	deepEqual( Stem("franţuzesc"), "franţuz" );
	deepEqual( Stem("franţuzeşte"), "franţuz" );
	deepEqual( Stem("franţuzeşti"), "franţuz" );
	deepEqual( Stem("franţuzul"), "franţuz" );
	deepEqual( Stem("franz"), "franz" );
	deepEqual( Stem("frapat"), "frapat" );
	deepEqual( Stem("frate"), "frat" );
	deepEqual( Stem("fratelui"), "fratel" );
	deepEqual( Stem("fraţi"), "fraţ" );
	deepEqual( Stem("fraţii"), "fraţ" );
	deepEqual( Stem("fraţilor"), "fraţ" );
	deepEqual( Stem("fraza"), "fraz" );
	deepEqual( Stem("frază"), "fraz" );
	deepEqual( Stem("fraze"), "fraz" );
	deepEqual( Stem("frazei"), "fraze" );
	deepEqual( Stem("frazelor"), "fraz" );
	deepEqual( Stem("frânar"), "frânar" );
	deepEqual( Stem("frânarul"), "frânar" );
	deepEqual( Stem("frângea"), "frâng" );
	deepEqual( Stem("frângere"), "frâng" );
	deepEqual( Stem("frânghii"), "frângh" );
	deepEqual( Stem("frânt"), "frânt" );
	deepEqual( Stem("frântă"), "frânt" );
	deepEqual( Stem("frâu"), "frâu" );
	deepEqual( Stem("frăgezime"), "frăgezim" );
	deepEqual( Stem("frăgezimi"), "frăgezim" );
	deepEqual( Stem("frământ"), "frământ" );
	deepEqual( Stem("frământare"), "frământ" );
	deepEqual( Stem("frământarea"), "frământ" );
	deepEqual( Stem("frământat"), "frământ" );
	deepEqual( Stem("frământând"), "frământ" );
	deepEqual( Stem("frământă"), "frământ" );
	deepEqual( Stem("frământării"), "frământăr" );
	deepEqual( Stem("frământe"), "frământ" );
	deepEqual( Stem("frămânţi"), "frămânţ" );
	deepEqual( Stem("frăţietate"), "frăţiet" );
	deepEqual( Stem("freacă"), "freac" );
	deepEqual( Stem("frecvent"), "frecvent" );
	deepEqual( Stem("frecventa"), "frecvent" );
	deepEqual( Stem("frecvente"), "frecvent" );
	deepEqual( Stem("frecventeze"), "frecvent" );
	deepEqual( Stem("frecventezi"), "frecvent" );
	deepEqual( Stem("freie"), "frei" );
	deepEqual( Stem("frenezia"), "frenez" );
	deepEqual( Stem("frenezie"), "frenez" );
	deepEqual( Stem("freud"), "freud" );
	deepEqual( Stem("frezmaşina"), "frezmaşin" );
	deepEqual( Stem("friabile"), "friabil" );
	deepEqual( Stem("frica"), "fric" );
	deepEqual( Stem("frică"), "fric" );
	deepEqual( Stem("fricii"), "fric" );
	deepEqual( Stem("fricoasă"), "fricoas" );
	deepEqual( Stem("fricos"), "fricos" );
	deepEqual( Stem("frig"), "frig" );
	deepEqual( Stem("frigare"), "frig" );
	deepEqual( Stem("frigul"), "frig" );
	deepEqual( Stem("frigului"), "frig" );
	deepEqual( Stem("frigurile"), "frigur" );
	deepEqual( Stem("friguros"), "frigur" );
	deepEqual( Stem("fript"), "fript" );
	deepEqual( Stem("friptă"), "fript" );
	deepEqual( Stem("fripte"), "fript" );
	deepEqual( Stem("friptura"), "friptur" );
	deepEqual( Stem("friptură"), "fript" );
	deepEqual( Stem("fripturi"), "friptur" );
	deepEqual( Stem("fripturii"), "friptur" );
	deepEqual( Stem("fripţi"), "fripţ" );
	deepEqual( Stem("frivolă"), "frivol" );
	deepEqual( Stem("frivoli"), "frivol" );
	deepEqual( Stem("frivolitatea"), "frivol" );
	deepEqual( Stem("frola"), "frol" );
	deepEqual( Stem("frondeur"), "frondeur" );
	deepEqual( Stem("front"), "front" );
	deepEqual( Stem("frontieră"), "frontier" );
	deepEqual( Stem("frontierei"), "frontiere" );
	deepEqual( Stem("frontul"), "front" );
	deepEqual( Stem("frontului"), "front" );
	deepEqual( Stem("fronturile"), "frontur" );
	deepEqual( Stem("fruct"), "fruct" );
	deepEqual( Stem("fructe"), "fruct" );
	deepEqual( Stem("fructul"), "fruct" );
	deepEqual( Stem("frumoasă"), "frumoas" );
	deepEqual( Stem("frumoase"), "frumoas" );
	deepEqual( Stem("frumos"), "frumos" );
	deepEqual( Stem("frumosul"), "frumos" );
	deepEqual( Stem("frumoşi"), "frumoş" );
	deepEqual( Stem("frumuseţe"), "frumuseţ" );
	deepEqual( Stem("frumuseţea"), "frumuseţ" );
	deepEqual( Stem("frumuseţii"), "frumus" );
	deepEqual( Stem("frumuseţile"), "frumus" );
	deepEqual( Stem("frumuşele"), "frumuş" );
	deepEqual( Stem("frumuşică"), "frumuş" );
	deepEqual( Stem("fruntaşii"), "frunt" );
	deepEqual( Stem("fruntaşilor"), "frunt" );
	deepEqual( Stem("frunte"), "frunt" );
	deepEqual( Stem("fruntea"), "frunt" );
	deepEqual( Stem("frunză"), "frunz" );
	deepEqual( Stem("frunze"), "frunz" );
	deepEqual( Stem("frunzele"), "frunz" );
	deepEqual( Stem("frunziş"), "frunziş" );
	deepEqual( Stem("frunzişuri"), "frunzişur" );
	deepEqual( Stem("frupturi"), "fruptur" );
	deepEqual( Stem("fruste"), "frust" );
	deepEqual( Stem("fu"), "fu" );
	deepEqual( Stem("fug"), "fug" );
	deepEqual( Stem("fuga"), "fug" );
	deepEqual( Stem("fugari"), "fugar" );
	deepEqual( Stem("fugă"), "fug" );
	deepEqual( Stem("fugărit"), "fugăr" );
	deepEqual( Stem("fuge"), "fug" );
	deepEqual( Stem("fugea"), "fug" );
	deepEqual( Stem("fugeam"), "fugeam" );
	deepEqual( Stem("fugi"), "fug" );
	deepEqual( Stem("fugii"), "fug" );
	deepEqual( Stem("fugim"), "fug" );
	deepEqual( Stem("fugind"), "fugind" );
	deepEqual( Stem("fugit"), "fugit" );
	deepEqual( Stem("fugiţi"), "fug" );
	deepEqual( Stem("fugos"), "fugos" );
	deepEqual( Stem("fulg"), "fulg" );
	deepEqual( Stem("fulgerare"), "fulger" );
	deepEqual( Stem("fulgeră"), "fulger" );
	deepEqual( Stem("fum"), "fum" );
	deepEqual( Stem("fuma"), "fum" );
	deepEqual( Stem("fumam"), "fumam" );
	deepEqual( Stem("fumat"), "fumat" );
	deepEqual( Stem("fumau"), "fumau" );
	deepEqual( Stem("fumăm"), "fum" );
	deepEqual( Stem("fumăria"), "fumăr" );
	deepEqual( Stem("fumează"), "fumeaz" );
	deepEqual( Stem("fumegarea"), "fumeg" );
	deepEqual( Stem("fumegând"), "fumeg" );
	deepEqual( Stem("fumez"), "fumez" );
	deepEqual( Stem("fumezi"), "fumez" );
	deepEqual( Stem("fumurie"), "fumur" );
	deepEqual( Stem("funcţia"), "funcţ" );
	deepEqual( Stem("funcţie"), "funcţ" );
	deepEqual( Stem("funcţiile"), "funcţ" );
	deepEqual( Stem("funcţiona"), "funcţion" );
	deepEqual( Stem("funcţională"), "funcţional" );
	deepEqual( Stem("funcţionale"), "funcţional" );
	deepEqual( Stem("funcţionar"), "funcţionar" );
	deepEqual( Stem("funcţionare"), "funcţion" );
	deepEqual( Stem("funcţionari"), "funcţionar" );
	deepEqual( Stem("funcţionează"), "funcţion" );
	deepEqual( Stem("funcţiune"), "funcţiun" );
	deepEqual( Stem("funcţiunea"), "funcţiun" );
	deepEqual( Stem("funcţiunei"), "funcţiune" );
	deepEqual( Stem("funcţiuni"), "funcţiun" );
	deepEqual( Stem("funcţiunii"), "funcţiun" );
	deepEqual( Stem("funcţiunile"), "funcţiun" );
	deepEqual( Stem("funcţiunilor"), "funcţiun" );
	deepEqual( Stem("fund"), "fund" );
	deepEqual( Stem("funda"), "fund" );
	deepEqual( Stem("fundament"), "fundament" );
	deepEqual( Stem("fundamental"), "fundamental" );
	deepEqual( Stem("fundamentală"), "fundamental" );
	deepEqual( Stem("fundamentale"), "fundamental" );
	deepEqual( Stem("fundamentarea"), "fundament" );
	deepEqual( Stem("fundamente"), "fundament" );
	deepEqual( Stem("fundamentele"), "fundament" );
	deepEqual( Stem("fundamentez"), "fundament" );
	deepEqual( Stem("fundamentul"), "fundament" );
	deepEqual( Stem("fundare"), "fund" );
	deepEqual( Stem("fundarea"), "fund" );
	deepEqual( Stem("fundat"), "fundat" );
	deepEqual( Stem("fundată"), "fundat" );
	deepEqual( Stem("fundate"), "fundat" );
	deepEqual( Stem("fundatus"), "fundatus" );
	deepEqual( Stem("fundaţia"), "fund" );
	deepEqual( Stem("fundaţii"), "fund" );
	deepEqual( Stem("fundăm"), "fund" );
	deepEqual( Stem("fundările"), "fundăr" );
	deepEqual( Stem("fundătura"), "fundătur" );
	deepEqual( Stem("fundătură"), "fundăt" );
	deepEqual( Stem("fundează"), "fund" );
	deepEqual( Stem("fundez"), "fund" );
	deepEqual( Stem("fundeze"), "fund" );
	deepEqual( Stem("fundmentale"), "fundmental" );
	deepEqual( Stem("fundul"), "fund" );
	deepEqual( Stem("funebre"), "funebr" );
	deepEqual( Stem("funebru"), "funebru" );
	deepEqual( Stem("funebrul"), "funebr" );
	deepEqual( Stem("funeralii"), "funeral" );
	deepEqual( Stem("funerar"), "funerar" );
	deepEqual( Stem("funerară"), "funer" );
	deepEqual( Stem("funestă"), "funest" );
	deepEqual( Stem("funestul"), "funest" );
	deepEqual( Stem("funia"), "funi" );
	deepEqual( Stem("funingine"), "funingin" );
	deepEqual( Stem("funinginos"), "funingin" );
	deepEqual( Stem("fura"), "fur" );
	deepEqual( Stem("furaj"), "furaj" );
	deepEqual( Stem("furase"), "furas" );
	deepEqual( Stem("furat"), "furat" );
	deepEqual( Stem("furată"), "furat" );
	deepEqual( Stem("furate"), "furat" );
	deepEqual( Stem("furaţi"), "fur" );
	deepEqual( Stem("furau"), "furau" );
	deepEqual( Stem("fură"), "fur" );
	deepEqual( Stem("furcă"), "furc" );
	deepEqual( Stem("furculiţa"), "furculiţ" );
	deepEqual( Stem("furculiţă"), "furculiţ" );
	deepEqual( Stem("furculiţe"), "furculiţ" );
	deepEqual( Stem("fure"), "fur" );
	deepEqual( Stem("furgoane"), "furgoan" );
	deepEqual( Stem("furgoanele"), "furgoan" );
	deepEqual( Stem("furgon"), "furgon" );
	deepEqual( Stem("furi"), "fur" );
	deepEqual( Stem("furia"), "furi" );
	deepEqual( Stem("furibund"), "furibund" );
	deepEqual( Stem("furibundă"), "furibund" );
	deepEqual( Stem("furie"), "fur" );
	deepEqual( Stem("furii"), "fur" );
	deepEqual( Stem("furiile"), "fur" );
	deepEqual( Stem("furioasă"), "furioas" );
	deepEqual( Stem("furioase"), "furioas" );
	deepEqual( Stem("furios"), "furios" );
	deepEqual( Stem("furioşi"), "furioş" );
	deepEqual( Stem("furiş"), "furiş" );
	deepEqual( Stem("furnicarului"), "furnicar" );
	deepEqual( Stem("furnizam"), "furniz" );
	deepEqual( Stem("furori"), "furor" );
	deepEqual( Stem("furt"), "furt" );
	deepEqual( Stem("furtunile"), "furtun" );
	deepEqual( Stem("furtunoase"), "furtun" );
	deepEqual( Stem("fusese"), "fus" );
	deepEqual( Stem("fusesem"), "fuses" );
	deepEqual( Stem("fuseseră"), "fus" );
	deepEqual( Stem("fusille"), "fusill" );
	deepEqual( Stem("futile"), "fut" );
	deepEqual( Stem("futilitate"), "futil" );
	deepEqual( Stem("fuzantă"), "fuzant" );
	deepEqual( Stem("fuzante"), "fuzant" );
	deepEqual( Stem("g"), "g" );
	deepEqual( Stem("gabaritul"), "gabar" );
	deepEqual( Stem("gafă"), "gaf" );
	deepEqual( Stem("galant"), "galant" );
	deepEqual( Stem("galaţi"), "gal" );
	deepEqual( Stem("galben"), "galben" );
	deepEqual( Stem("galbenă"), "galben" );
	deepEqual( Stem("galbene"), "galben" );
	deepEqual( Stem("galbeni"), "galben" );
	deepEqual( Stem("galia"), "gali" );
	deepEqual( Stem("galilei"), "galile" );
	deepEqual( Stem("galonul"), "galon" );
	deepEqual( Stem("galop"), "galop" );
	deepEqual( Stem("galoşi"), "galoş" );
	deepEqual( Stem("gama"), "gam" );
	deepEqual( Stem("gara"), "gar" );
	deepEqual( Stem("garaj"), "garaj" );
	deepEqual( Stem("garantat"), "garant" );
	deepEqual( Stem("garantate"), "garant" );
	deepEqual( Stem("garantează"), "garant" );
	deepEqual( Stem("garanţia"), "garanţ" );
	deepEqual( Stem("garanţie"), "garanţ" );
	deepEqual( Stem("garanţiile"), "garanţ" );
	deepEqual( Stem("gară"), "gar" );
	deepEqual( Stem("gard"), "gard" );
	deepEqual( Stem("gardă"), "gard" );
	deepEqual( Stem("gardienilor"), "gardien" );
	deepEqual( Stem("gardişti"), "gardişt" );
	deepEqual( Stem("gardul"), "gard" );
	deepEqual( Stem("garduri"), "gardur" );
	deepEqual( Stem("gardurile"), "gardur" );
	deepEqual( Stem("garibaldi"), "garibald" );
	deepEqual( Stem("garnizoana"), "garnizoan" );
	deepEqual( Stem("garoafa"), "garoaf" );
	deepEqual( Stem("garoafe"), "garoaf" );
	deepEqual( Stem("garsonieră"), "garsonier" );
	deepEqual( Stem("gata"), "gat" );
	deepEqual( Stem("gaura"), "gaur" );
	deepEqual( Stem("gaură"), "gaur" );
	deepEqual( Stem("gauss"), "gauss" );
	deepEqual( Stem("gaz"), "gaz" );
	deepEqual( Stem("gazda"), "gazd" );
	deepEqual( Stem("gazdele"), "gazd" );
	deepEqual( Stem("gazelor"), "gaz" );
	deepEqual( Stem("gazeta"), "gazet" );
	deepEqual( Stem("gazetar"), "gazetar" );
	deepEqual( Stem("gazetă"), "gazet" );
	deepEqual( Stem("gazetărea"), "gazetăr" );
	deepEqual( Stem("gazete"), "gazet" );
	deepEqual( Stem("gazetele"), "gazet" );
	deepEqual( Stem("gazetelor"), "gazet" );
	deepEqual( Stem("gazoasă"), "gazoas" );
	deepEqual( Stem("gâdilată"), "gâdil" );
	deepEqual( Stem("gâdilătură"), "gâdilăt" );
	deepEqual( Stem("gâfâi"), "gâfâ" );
	deepEqual( Stem("gâfâie"), "gâfâi" );
	deepEqual( Stem("gâfâind"), "gâfâind" );
	deepEqual( Stem("gâlgâie"), "gâlgâi" );
	deepEqual( Stem("gâlgâind"), "gâlgâind" );
	deepEqual( Stem("gând"), "gând" );
	deepEqual( Stem("gândac"), "gândac" );
	deepEqual( Stem("gândaci"), "gândac" );
	deepEqual( Stem("gândacii"), "gândac" );
	deepEqual( Stem("gândeai"), "gând" );
	deepEqual( Stem("gândeam"), "gând" );
	deepEqual( Stem("gândească"), "gând" );
	deepEqual( Stem("gândeau"), "gând" );
	deepEqual( Stem("gândesc"), "gând" );
	deepEqual( Stem("gândeşte"), "gând" );
	deepEqual( Stem("gândeşti"), "gând" );
	deepEqual( Stem("gândi"), "gând" );
	deepEqual( Stem("gândim"), "gând" );
	deepEqual( Stem("gândind"), "gând" );
	deepEqual( Stem("gândindu"), "gând" );
	deepEqual( Stem("gândire"), "gând" );
	deepEqual( Stem("gândirea"), "gând" );
	deepEqual( Stem("gândiri"), "gândir" );
	deepEqual( Stem("gândirii"), "gândir" );
	deepEqual( Stem("gândisem"), "gând" );
	deepEqual( Stem("gândiseră"), "gând" );
	deepEqual( Stem("gândit"), "gândit" );
	deepEqual( Stem("gânditoare"), "gândit" );
	deepEqual( Stem("gânditor"), "gândit" );
	deepEqual( Stem("gânditori"), "gândit" );
	deepEqual( Stem("gânditorii"), "gândit" );
	deepEqual( Stem("gânditorilor"), "gândit" );
	deepEqual( Stem("gândiţi"), "gând" );
	deepEqual( Stem("gândul"), "gând" );
	deepEqual( Stem("gândului"), "gând" );
	deepEqual( Stem("gânduri"), "gândur" );
	deepEqual( Stem("gândurile"), "gândur" );
	deepEqual( Stem("gândurilor"), "gândur" );
	deepEqual( Stem("gângănii"), "gângăn" );
	deepEqual( Stem("gângăvit"), "gângăv" );
	deepEqual( Stem("gângurea"), "gângur" );
	deepEqual( Stem("gâsca"), "gâsc" );
	deepEqual( Stem("gâşte"), "gâşt" );
	deepEqual( Stem("gâştele"), "gâşt" );
	deepEqual( Stem("gât"), "gât" );
	deepEqual( Stem("gâtlejul"), "gâtlej" );
	deepEqual( Stem("gâtroşi"), "gâtroş" );
	deepEqual( Stem("gâtuia"), "gâtui" );
	deepEqual( Stem("gâtuit"), "gâtuit" );
	deepEqual( Stem("gâtuite"), "gâtuit" );
	deepEqual( Stem("gâtul"), "gât" );
	deepEqual( Stem("gâtului"), "gât" );
	deepEqual( Stem("găini"), "găin" );
	deepEqual( Stem("gălăgia"), "gălăg" );
	deepEqual( Stem("gălăgie"), "gălăg" );
	deepEqual( Stem("gălăgios"), "gălăg" );
	deepEqual( Stem("gălbenii"), "gălben" );
	deepEqual( Stem("gălbui"), "gălb" );
	deepEqual( Stem("gălbuie"), "gălbui" );
	deepEqual( Stem("găleţi"), "găl" );
	deepEqual( Stem("gări"), "găr" );
	deepEqual( Stem("gării"), "găr" );
	deepEqual( Stem("gărilor"), "găr" );
	deepEqual( Stem("gărlici"), "gărlic" );
	deepEqual( Stem("găsea"), "găs" );
	deepEqual( Stem("găseam"), "găseam" );
	deepEqual( Stem("găsească"), "găseasc" );
	deepEqual( Stem("găseau"), "găseau" );
	deepEqual( Stem("găsesc"), "găsesc" );
	deepEqual( Stem("găseşte"), "găseşt" );
	deepEqual( Stem("găseşti"), "găseşt" );
	deepEqual( Stem("găsi"), "găs" );
	deepEqual( Stem("găsim"), "găs" );
	deepEqual( Stem("găsind"), "găsind" );
	deepEqual( Stem("găsindu"), "găsindu" );
	deepEqual( Stem("găsirea"), "găsir" );
	deepEqual( Stem("găsirii"), "găsir" );
	deepEqual( Stem("găsisem"), "găsisem" );
	deepEqual( Stem("găsit"), "găsit" );
	deepEqual( Stem("găsiţi"), "găs" );
	deepEqual( Stem("găteală"), "găteal" );
	deepEqual( Stem("găteşte"), "găteşt" );
	deepEqual( Stem("găti"), "găt" );
	deepEqual( Stem("gătit"), "gătit" );
	deepEqual( Stem("gătită"), "gătit" );
	deepEqual( Stem("gătite"), "gătit" );
	deepEqual( Stem("găuriţi"), "găur" );
	deepEqual( Stem("găvănescul"), "găvăn" );
	deepEqual( Stem("geam"), "geam" );
	deepEqual( Stem("geamul"), "geam" );
	deepEqual( Stem("geamuri"), "geamur" );
	deepEqual( Stem("geamurile"), "geamur" );
	deepEqual( Stem("geloasă"), "geloas" );
	deepEqual( Stem("gelos"), "gelos" );
	deepEqual( Stem("gem"), "gem" );
	deepEqual( Stem("geme"), "gem" );
	deepEqual( Stem("gemeni"), "gemen" );
	deepEqual( Stem("gemute"), "gemut" );
	deepEqual( Stem("gen"), "gen" );
	deepEqual( Stem("genele"), "gen" );
	deepEqual( Stem("general"), "general" );
	deepEqual( Stem("generală"), "general" );
	deepEqual( Stem("generale"), "general" );
	deepEqual( Stem("generali"), "general" );
	deepEqual( Stem("generalii"), "general" );
	deepEqual( Stem("generalitate"), "general" );
	deepEqual( Stem("generalitatea"), "general" );
	deepEqual( Stem("generalizam"), "generaliz" );
	deepEqual( Stem("generalizare"), "generaliz" );
	deepEqual( Stem("generalizarea"), "generaliz" );
	deepEqual( Stem("generalizată"), "generaliz" );
	deepEqual( Stem("generalizăm"), "generaliz" );
	deepEqual( Stem("generalizării"), "generalizăr" );
	deepEqual( Stem("generalizez"), "generaliz" );
	deepEqual( Stem("generalizezi"), "generaliz" );
	deepEqual( Stem("generalul"), "general" );
	deepEqual( Stem("generalului"), "general" );
	deepEqual( Stem("generaţiile"), "gener" );
	deepEqual( Stem("genere"), "gener" );
	deepEqual( Stem("generic"), "gener" );
	deepEqual( Stem("generoasă"), "gener" );
	deepEqual( Stem("generos"), "gener" );
	deepEqual( Stem("generoşi"), "gener" );
	deepEqual( Stem("generozitate"), "generoz" );
	deepEqual( Stem("generozitatea"), "generoz" );
	deepEqual( Stem("genială"), "genial" );
	deepEqual( Stem("genii"), "gen" );
	deepEqual( Stem("geniile"), "gen" );
	deepEqual( Stem("geniilor"), "gen" );
	deepEqual( Stem("geniu"), "geniu" );
	deepEqual( Stem("gentilă"), "gentil" );
	deepEqual( Stem("genul"), "gen" );
	deepEqual( Stem("genunchi"), "genunch" );
	deepEqual( Stem("genunchii"), "genunch" );
	deepEqual( Stem("genunchilor"), "genunch" );
	deepEqual( Stem("genunchiului"), "genunch" );
	deepEqual( Stem("genuri"), "genur" );
	deepEqual( Stem("geografică"), "geograf" );
	deepEqual( Stem("geografie"), "geograf" );
	deepEqual( Stem("geologie"), "geolog" );
	deepEqual( Stem("geometria"), "geometr" );
	deepEqual( Stem("geometric"), "geometr" );
	deepEqual( Stem("geometrică"), "geometr" );
	deepEqual( Stem("geometrice"), "geometr" );
	deepEqual( Stem("geometrie"), "geometr" );
	deepEqual( Stem("geometriei"), "geometr" );
	deepEqual( Stem("geometrii"), "geometr" );
	deepEqual( Stem("geometriile"), "geometr" );
	deepEqual( Stem("geometru"), "geometru" );
	deepEqual( Stem("georg"), "georg" );
	deepEqual( Stem("georgescu"), "georgescu" );
	deepEqual( Stem("gerlach"), "gerlach" );
	deepEqual( Stem("german"), "german" );
	deepEqual( Stem("germană"), "german" );
	deepEqual( Stem("germane"), "german" );
	deepEqual( Stem("germani"), "german" );
	deepEqual( Stem("germania"), "german" );
	deepEqual( Stem("germanice"), "german" );
	deepEqual( Stem("germanii"), "german" );
	deepEqual( Stem("germanilor"), "german" );
	deepEqual( Stem("germanul"), "german" );
	deepEqual( Stem("germen"), "germen" );
	deepEqual( Stem("germenii"), "germen" );
	deepEqual( Stem("gest"), "gest" );
	deepEqual( Stem("gesticulează"), "gesticul" );
	deepEqual( Stem("gestul"), "gest" );
	deepEqual( Stem("gestului"), "gest" );
	deepEqual( Stem("gesturi"), "gestur" );
	deepEqual( Stem("gesturile"), "gestur" );
	deepEqual( Stem("gesturilor"), "gestur" );
	deepEqual( Stem("gheara"), "ghear" );
	deepEqual( Stem("gheară"), "ghear" );
	deepEqual( Stem("gheare"), "ghear" );
	deepEqual( Stem("ghearele"), "ghear" );
	deepEqual( Stem("gheaţa"), "gheaţ" );
	deepEqual( Stem("gheaţă"), "gheaţ" );
	deepEqual( Stem("ghemuită"), "ghemuit" );
	deepEqual( Stem("ghemuiţi"), "ghemu" );
	deepEqual( Stem("gheorghe"), "gheorgh" );
	deepEqual( Stem("gheorghidiu"), "gheorghidiu" );
	deepEqual( Stem("gheorghidiule"), "gheorghidiul" );
	deepEqual( Stem("ghete"), "ghet" );
	deepEqual( Stem("ghetele"), "ghet" );
	deepEqual( Stem("gheţari"), "gheţar" );
	deepEqual( Stem("gheţarului"), "gheţar" );
	deepEqual( Stem("gheţei"), "gheţe" );
	deepEqual( Stem("ghiceam"), "ghic" );
	deepEqual( Stem("ghicească"), "ghic" );
	deepEqual( Stem("ghicesc"), "ghic" );
	deepEqual( Stem("ghici"), "ghic" );
	deepEqual( Stem("ghicind"), "ghic" );
	deepEqual( Stem("ghicit"), "ghicit" );
	deepEqual( Stem("ghicită"), "ghicit" );
	deepEqual( Stem("ghicitoare"), "ghicit" );
	deepEqual( Stem("ghicitor"), "ghicit" );
	deepEqual( Stem("ghicitori"), "ghicit" );
	deepEqual( Stem("ghicitul"), "ghicit" );
	deepEqual( Stem("ghiciţi"), "ghic" );
	deepEqual( Stem("ghid"), "ghid" );
	deepEqual( Stem("ghidarea"), "ghid" );
	deepEqual( Stem("ghidată"), "ghidat" );
	deepEqual( Stem("ghidaţi"), "ghid" );
	deepEqual( Stem("ghidează"), "ghid" );
	deepEqual( Stem("ghidona"), "ghidon" );
	deepEqual( Stem("ghiduri"), "ghidur" );
	deepEqual( Stem("ghidurile"), "ghidur" );
	deepEqual( Stem("ghiduşe"), "ghiduş" );
	deepEqual( Stem("ghiftui"), "ghift" );
	deepEqual( Stem("ghilimele"), "ghilim" );
	deepEqual( Stem("ghilotină"), "ghilotin" );
	deepEqual( Stem("ghimbavul"), "ghimbav" );
	deepEqual( Stem("ghimpe"), "ghimp" );
	deepEqual( Stem("ghinioane"), "ghinioan" );
	deepEqual( Stem("ghinion"), "ghinion" );
	deepEqual( Stem("ghinionul"), "ghinion" );
	deepEqual( Stem("ghiontuieli"), "ghiontuiel" );
	deepEqual( Stem("ghiontuiesc"), "ghiontui" );
	deepEqual( Stem("ghiotura"), "ghiotur" );
	deepEqual( Stem("ghiozdan"), "ghiozdan" );
	deepEqual( Stem("ghips"), "ghips" );
	deepEqual( Stem("ghişeelor"), "ghişe" );
	deepEqual( Stem("ghişeu"), "ghişeu" );
	deepEqual( Stem("ghişeuri"), "ghişeur" );
	deepEqual( Stem("ghiţă"), "ghiţ" );
	deepEqual( Stem("ghiulele"), "ghiul" );
	deepEqual( Stem("ghiveci"), "ghivec" );
	deepEqual( Stem("ghiveciul"), "ghivec" );
	deepEqual( Stem("gide"), "gid" );
	deepEqual( Stem("gingaş"), "gingaş" );
	deepEqual( Stem("gingaşe"), "gingaş" );
	deepEqual( Stem("gingăşia"), "gingăş" );
	deepEqual( Stem("gingăşii"), "gingăş" );
	deepEqual( Stem("giordano"), "giordano" );
	deepEqual( Stem("giovanni"), "giovann" );
	deepEqual( Stem("gira"), "gir" );
	deepEqual( Stem("giulgiu"), "giulgiu" );
	deepEqual( Stem("giumbuşlucuri"), "giumbuşlucur" );
	deepEqual( Stem("giurgiu"), "giurgiu" );
	deepEqual( Stem("giuvala"), "giuval" );
	deepEqual( Stem("gîdila"), "gîdil" );
	deepEqual( Stem("gîtuituri"), "gîtuitur" );
	deepEqual( Stem("gîze"), "gîz" );
	deepEqual( Stem("glacială"), "glacial" );
	deepEqual( Stem("glaciară"), "glaciar" );
	deepEqual( Stem("gladiatori"), "gladiat" );
	deepEqual( Stem("glandelor"), "gland" );
	deepEqual( Stem("glas"), "glas" );
	deepEqual( Stem("glasul"), "glas" );
	deepEqual( Stem("glasuri"), "glasur" );
	deepEqual( Stem("glazură"), "glaz" );
	deepEqual( Stem("glăsuind"), "glăsu" );
	deepEqual( Stem("glăsuire"), "glăsu" );
	deepEqual( Stem("glezne"), "glezn" );
	deepEqual( Stem("glia"), "gli" );
	deepEqual( Stem("glicine"), "glicin" );
	deepEqual( Stem("gligore"), "gligor" );
	deepEqual( Stem("glisantă"), "glisant" );
	deepEqual( Stem("glisante"), "glisant" );
	deepEqual( Stem("glisare"), "glis" );
	deepEqual( Stem("glisat"), "glisat" );
	deepEqual( Stem("glissando"), "glissando" );
	deepEqual( Stem("gloabă"), "gloab" );
	deepEqual( Stem("gloabele"), "gloab" );
	deepEqual( Stem("gloanţe"), "gloanţ" );
	deepEqual( Stem("gloanţele"), "gloanţ" );
	deepEqual( Stem("gloanţelor"), "gloanţ" );
	deepEqual( Stem("gloata"), "gloat" );
	deepEqual( Stem("gloată"), "gloat" );
	deepEqual( Stem("glob"), "glob" );
	deepEqual( Stem("global"), "global" );
	deepEqual( Stem("globală"), "global" );
	deepEqual( Stem("globale"), "global" );
	deepEqual( Stem("globali"), "global" );
	deepEqual( Stem("globalizarea"), "globaliz" );
	deepEqual( Stem("globule"), "globul" );
	deepEqual( Stem("glomerulă"), "glomerul" );
	deepEqual( Stem("glonte"), "glont" );
	deepEqual( Stem("glonţ"), "glonţ" );
	deepEqual( Stem("glonţul"), "glonţ" );
	deepEqual( Stem("gloria"), "glor" );
	deepEqual( Stem("glorie"), "glor" );
	deepEqual( Stem("gloriei"), "glor" );
	deepEqual( Stem("glorifică"), "glorif" );
	deepEqual( Stem("glorioasă"), "glorioas" );
	deepEqual( Stem("glorioase"), "glorioas" );
	deepEqual( Stem("glucozei"), "glucoze" );
	deepEqual( Stem("gluma"), "glum" );
	deepEqual( Stem("glumă"), "glum" );
	deepEqual( Stem("glume"), "glum" );
	deepEqual( Stem("glumea"), "glum" );
	deepEqual( Stem("glumeam"), "glum" );
	deepEqual( Stem("glumească"), "glum" );
	deepEqual( Stem("glumeaţă"), "glumeaţ" );
	deepEqual( Stem("glumesc"), "glum" );
	deepEqual( Stem("glumeşte"), "glum" );
	deepEqual( Stem("glumeşti"), "glum" );
	deepEqual( Stem("glumi"), "glum" );
	deepEqual( Stem("glumim"), "glum" );
	deepEqual( Stem("glumind"), "glum" );
	deepEqual( Stem("gneoseologic"), "gneoseolog" );
	deepEqual( Stem("gnoseologia"), "gnoseolog" );
	deepEqual( Stem("gnoseologic"), "gnoseolog" );
	deepEqual( Stem("gnoseologică"), "gnoseolog" );
	deepEqual( Stem("gnoseologie"), "gnoseolog" );
	deepEqual( Stem("gnoseologische"), "gnoseologisch" );
	deepEqual( Stem("goală"), "goal" );
	deepEqual( Stem("goale"), "goal" );
	deepEqual( Stem("goana"), "goan" );
	deepEqual( Stem("goană"), "goan" );
	deepEqual( Stem("goanei"), "goane" );
	deepEqual( Stem("goethe"), "goeth" );
	deepEqual( Stem("gogoşi"), "gogoş" );
	deepEqual( Stem("goi"), "goi" );
	deepEqual( Stem("gol"), "gol" );
	deepEqual( Stem("goleşti"), "goleşt" );
	deepEqual( Stem("goliciunea"), "goliciun" );
	deepEqual( Stem("golit"), "golit" );
	deepEqual( Stem("golul"), "gol" );
	deepEqual( Stem("goluri"), "golur" );
	deepEqual( Stem("golurile"), "golur" );
	deepEqual( Stem("gonea"), "gon" );
	deepEqual( Stem("goneam"), "goneam" );
	deepEqual( Stem("gonesc"), "gonesc" );
	deepEqual( Stem("goneşti"), "goneşt" );
	deepEqual( Stem("gore"), "gor" );
	deepEqual( Stem("gospodărească"), "gospodăr" );
	deepEqual( Stem("gospodăreşti"), "gospodăr" );
	deepEqual( Stem("gospodărie"), "gospodăr" );
	deepEqual( Stem("gotic"), "gotic" );
	deepEqual( Stem("gotthard"), "gotthard" );
	deepEqual( Stem("graba"), "grab" );
	deepEqual( Stem("grabă"), "grab" );
	deepEqual( Stem("grabnic"), "grabnic" );
	deepEqual( Stem("grabnică"), "grabnic" );
	deepEqual( Stem("grad"), "grad" );
	deepEqual( Stem("gradat"), "gradat" );
	deepEqual( Stem("gradaţi"), "grad" );
	deepEqual( Stem("grade"), "grad" );
	deepEqual( Stem("gradele"), "grad" );
	deepEqual( Stem("gradul"), "grad" );
	deepEqual( Stem("grafic"), "grafic" );
	deepEqual( Stem("graiului"), "grai" );
	deepEqual( Stem("grajd"), "grajd" );
	deepEqual( Stem("grajdul"), "grajd" );
	deepEqual( Stem("grajduri"), "grajdur" );
	deepEqual( Stem("grajdurile"), "grajdur" );
	deepEqual( Stem("granatele"), "granat" );
	deepEqual( Stem("grandioase"), "grandioas" );
	deepEqual( Stem("graniţa"), "graniţ" );
	deepEqual( Stem("graniţă"), "graniţ" );
	deepEqual( Stem("graniţe"), "graniţ" );
	deepEqual( Stem("graniţei"), "graniţe" );
	deepEqual( Stem("graniţelor"), "graniţ" );
	deepEqual( Stem("gras"), "gras" );
	deepEqual( Stem("grasă"), "gras" );
	deepEqual( Stem("grase"), "gra" );
	deepEqual( Stem("gratificat"), "gratific" );
	deepEqual( Stem("gratificaţie"), "gratific" );
	deepEqual( Stem("gratis"), "gratis" );
	deepEqual( Stem("gratuit"), "gratuit" );
	deepEqual( Stem("gratuitate"), "gratuitat" );
	deepEqual( Stem("gratuită"), "gratuit" );
	deepEqual( Stem("gratuităţii"), "gratuităţ" );
	deepEqual( Stem("gratuităţilor"), "gratuităţ" );
	deepEqual( Stem("gratulat"), "gratul" );
	deepEqual( Stem("gratulaţi"), "gratul" );
	deepEqual( Stem("graţia"), "graţ" );
	deepEqual( Stem("graţiaţi"), "graţ" );
	deepEqual( Stem("graţie"), "graţ" );
	deepEqual( Stem("graţiere"), "graţier" );
	deepEqual( Stem("graţii"), "graţ" );
	deepEqual( Stem("graţioasă"), "graţioas" );
	deepEqual( Stem("graţioase"), "graţioas" );
	deepEqual( Stem("graţioaselor"), "graţioas" );
	deepEqual( Stem("graţios"), "graţios" );
	deepEqual( Stem("graţiosului"), "graţios" );
	deepEqual( Stem("graunţă"), "graunţ" );
	deepEqual( Stem("grav"), "grav" );
	deepEqual( Stem("grava"), "grav" );
	deepEqual( Stem("gravă"), "grav" );
	deepEqual( Stem("grave"), "grav" );
	deepEqual( Stem("gravei"), "grave" );
	deepEqual( Stem("gravelor"), "grav" );
	deepEqual( Stem("gravide"), "gravid" );
	deepEqual( Stem("gravita"), "gravit" );
	deepEqual( Stem("gravitate"), "gravitat" );
	deepEqual( Stem("gravitatea"), "gravitat" );
	deepEqual( Stem("gravitaţia"), "gravit" );
	deepEqual( Stem("gravitaţie"), "gravit" );
	deepEqual( Stem("gravitaţiei"), "gravit" );
	deepEqual( Stem("gravitaţională"), "gravitaţional" );
	deepEqual( Stem("gravitaţiunii"), "gravitat" );
	deepEqual( Stem("gravitează"), "gravit" );
	deepEqual( Stem("grânele"), "grân" );
	deepEqual( Stem("grâu"), "grâu" );
	deepEqual( Stem("grâul"), "grâul" );
	deepEqual( Stem("grâului"), "grâul" );
	deepEqual( Stem("grăbesc"), "grăb" );
	deepEqual( Stem("grăbim"), "grăb" );
	deepEqual( Stem("grăbit"), "grăbit" );
	deepEqual( Stem("grăbită"), "grăbit" );
	deepEqual( Stem("grăbiţi"), "grăb" );
	deepEqual( Stem("grădina"), "grădin" );
	deepEqual( Stem("grădină"), "grădin" );
	deepEqual( Stem("grădini"), "grădin" );
	deepEqual( Stem("grădinii"), "grădin" );
	deepEqual( Stem("grăită"), "grăit" );
	deepEqual( Stem("grămada"), "grămad" );
	deepEqual( Stem("grămadă"), "grămad" );
	deepEqual( Stem("grămădea"), "grămăd" );
	deepEqual( Stem("grămădesc"), "grămăd" );
	deepEqual( Stem("grămezi"), "grăm" );
	deepEqual( Stem("grănicerul"), "grănicer" );
	deepEqual( Stem("grăsime"), "grăsim" );
	deepEqual( Stem("grătar"), "grătar" );
	deepEqual( Stem("grăunte"), "grăunt" );
	deepEqual( Stem("grăunţă"), "grăunţ" );
	deepEqual( Stem("grea"), "gre" );
	deepEqual( Stem("greacă"), "greac" );
	deepEqual( Stem("greaţă"), "greaţ" );
	deepEqual( Stem("grecească"), "grec" );
	deepEqual( Stem("greci"), "grec" );
	deepEqual( Stem("grecia"), "grec" );
	deepEqual( Stem("greciei"), "grec" );
	deepEqual( Stem("greco"), "greco" );
	deepEqual( Stem("grefa"), "gref" );
	deepEqual( Stem("grefează"), "gref" );
	deepEqual( Stem("grefeze"), "gref" );
	deepEqual( Stem("grei"), "gre" );
	deepEqual( Stem("grele"), "grel" );
	deepEqual( Stem("grenadă"), "grenad" );
	deepEqual( Stem("greoaie"), "greoai" );
	deepEqual( Stem("greoi"), "greo" );
	deepEqual( Stem("greş"), "greş" );
	deepEqual( Stem("greşeală"), "greşeal" );
	deepEqual( Stem("greşeli"), "greşel" );
	deepEqual( Stem("greşelile"), "greşel" );
	deepEqual( Stem("greşesc"), "greş" );
	deepEqual( Stem("greşim"), "greş" );
	deepEqual( Stem("greşit"), "greşit" );
	deepEqual( Stem("greşită"), "greşit" );
	deepEqual( Stem("gretchen"), "gretchen" );
	deepEqual( Stem("greu"), "greu" );
	deepEqual( Stem("greul"), "greul" );
	deepEqual( Stem("greutate"), "greutat" );
	deepEqual( Stem("greutatea"), "greutat" );
	deepEqual( Stem("greutăţi"), "greutăţ" );
	deepEqual( Stem("greutăţile"), "greutăţ" );
	deepEqual( Stem("greutăţilor"), "greutăţ" );
	deepEqual( Stem("grevei"), "greve" );
	deepEqual( Stem("greviştii"), "grevişt" );
	deepEqual( Stem("grigoriade"), "grigoriad" );
	deepEqual( Stem("grigoriţă"), "grigoriţ" );
	deepEqual( Stem("grija"), "grij" );
	deepEqual( Stem("grijă"), "grij" );
	deepEqual( Stem("grije"), "grij" );
	deepEqual( Stem("griji"), "grij" );
	deepEqual( Stem("grijulie"), "grijul" );
	deepEqual( Stem("grilaj"), "grilaj" );
	deepEqual( Stem("grilajul"), "grilaj" );
	deepEqual( Stem("grilajului"), "grilaj" );
	deepEqual( Stem("grimasă"), "grimas" );
	deepEqual( Stem("grimase"), "grim" );
	deepEqual( Stem("groapa"), "groap" );
	deepEqual( Stem("groapă"), "groap" );
	deepEqual( Stem("groapei"), "groape" );
	deepEqual( Stem("groasă"), "groas" );
	deepEqual( Stem("groase"), "groas" );
	deepEqual( Stem("groaza"), "groaz" );
	deepEqual( Stem("groază"), "groaz" );
	deepEqual( Stem("groazele"), "groaz" );
	deepEqual( Stem("groaznic"), "groaznic" );
	deepEqual( Stem("groaznică"), "groaznic" );
	deepEqual( Stem("groaznice"), "groaznic" );
	deepEqual( Stem("gropi"), "grop" );
	deepEqual( Stem("gropii"), "grop" );
	deepEqual( Stem("gropile"), "grop" );
	deepEqual( Stem("gros"), "gros" );
	deepEqual( Stem("grosolan"), "grosolan" );
	deepEqual( Stem("grosolană"), "grosolan" );
	deepEqual( Stem("grosolane"), "grosolan" );
	deepEqual( Stem("grosso"), "grosso" );
	deepEqual( Stem("grosul"), "gros" );
	deepEqual( Stem("groşi"), "groş" );
	deepEqual( Stem("grotesc"), "grot" );
	deepEqual( Stem("grotescului"), "grot" );
	deepEqual( Stem("grozav"), "grozav" );
	deepEqual( Stem("grozavă"), "grozav" );
	deepEqual( Stem("grozave"), "grozav" );
	deepEqual( Stem("grozavi"), "grozav" );
	deepEqual( Stem("grozăvia"), "grozăv" );
	deepEqual( Stem("grumazul"), "grumaz" );
	deepEqual( Stem("grup"), "grup" );
	deepEqual( Stem("grupa"), "grup" );
	deepEqual( Stem("gruparea"), "grup" );
	deepEqual( Stem("grupaţi"), "grup" );
	deepEqual( Stem("grupă"), "grup" );
	deepEqual( Stem("grupăm"), "grup" );
	deepEqual( Stem("grupările"), "grupăr" );
	deepEqual( Stem("grupe"), "grup" );
	deepEqual( Stem("grupele"), "grup" );
	deepEqual( Stem("grupelor"), "grup" );
	deepEqual( Stem("grupul"), "grup" );
	deepEqual( Stem("grupului"), "grup" );
	deepEqual( Stem("grupuri"), "grupur" );
	deepEqual( Stem("grupurile"), "grupur" );
	deepEqual( Stem("guler"), "guler" );
	deepEqual( Stem("gulerul"), "guler" );
	deepEqual( Stem("gumbel"), "gumbel" );
	deepEqual( Stem("gura"), "gur" );
	deepEqual( Stem("gură"), "gur" );
	deepEqual( Stem("gurguiul"), "gurgui" );
	deepEqual( Stem("gurii"), "gur" );
	deepEqual( Stem("gurile"), "gur" );
	deepEqual( Stem("gurilor"), "gur" );
	deepEqual( Stem("gust"), "gust" );
	deepEqual( Stem("gustare"), "gust" );
	deepEqual( Stem("gustarea"), "gust" );
	deepEqual( Stem("gustat"), "gustat" );
	deepEqual( Stem("gustă"), "gust" );
	deepEqual( Stem("gustări"), "gustăr" );
	deepEqual( Stem("gustările"), "gustăr" );
	deepEqual( Stem("gustul"), "gust" );
	deepEqual( Stem("gustului"), "gust" );
	deepEqual( Stem("gusturile"), "gustur" );
	deepEqual( Stem("gute"), "gut" );
	deepEqual( Stem("guturai"), "gutur" );
	deepEqual( Stem("guvern"), "guvern" );
	deepEqual( Stem("guverne"), "guvern" );
	deepEqual( Stem("guvernul"), "guvern" );
	deepEqual( Stem("guvernului"), "guvern" );
	deepEqual( Stem("h"), "h" );
	deepEqual( Stem("habar"), "habar" );
	deepEqual( Stem("haeckel"), "haeckel" );
	deepEqual( Stem("hai"), "hai" );
	deepEqual( Stem("haide"), "haid" );
	deepEqual( Stem("haideţi"), "haid" );
	deepEqual( Stem("haiduceşti"), "haiduc" );
	deepEqual( Stem("haiduci"), "haiduc" );
	deepEqual( Stem("haina"), "hain" );
	deepEqual( Stem("haină"), "hain" );
	deepEqual( Stem("haine"), "hain" );
	deepEqual( Stem("hainei"), "haine" );
	deepEqual( Stem("hainele"), "hain" );
	deepEqual( Stem("halaturile"), "halatur" );
	deepEqual( Stem("halaturilor"), "halatur" );
	deepEqual( Stem("halbe"), "halb" );
	deepEqual( Stem("halucinantă"), "halucin" );
	deepEqual( Stem("halucinat"), "halucin" );
	deepEqual( Stem("halucinaţie"), "halucin" );
	deepEqual( Stem("halucinaţii"), "halucin" );
	deepEqual( Stem("halul"), "hal" );
	deepEqual( Stem("hamali"), "hamal" );
	deepEqual( Stem("hamburg"), "hamburg" );
	deepEqual( Stem("hanovra"), "hanovr" );
	deepEqual( Stem("hanovrez"), "hanovr" );
	deepEqual( Stem("hanurilor"), "hanur" );
	deepEqual( Stem("haos"), "haos" );
	deepEqual( Stem("haosul"), "haos" );
	deepEqual( Stem("haosului"), "haos" );
	deepEqual( Stem("haotic"), "haotic" );
	deepEqual( Stem("hapsân"), "hapsân" );
	deepEqual( Stem("hapsine"), "hapsin" );
	deepEqual( Stem("haranoiu"), "haranoiu" );
	deepEqual( Stem("harden"), "harden" );
	deepEqual( Stem("harnic"), "harnic" );
	deepEqual( Stem("harta"), "hart" );
	deepEqual( Stem("hartă"), "hart" );
	deepEqual( Stem("hatârul"), "hatâr" );
	deepEqual( Stem("havană"), "havan" );
	deepEqual( Stem("haydn"), "haydn" );
	deepEqual( Stem("haz"), "haz" );
	deepEqual( Stem("hazlie"), "hazl" );
	deepEqual( Stem("hazliu"), "hazliu" );
	deepEqual( Stem("hârtia"), "hârt" );
	deepEqual( Stem("hârtie"), "hârt" );
	deepEqual( Stem("hârtii"), "hârt" );
	deepEqual( Stem("hârtiile"), "hârt" );
	deepEqual( Stem("hă"), "hă" );
	deepEqual( Stem("hăi"), "hăi" );
	deepEqual( Stem("hăinuţă"), "hăinuţ" );
	deepEqual( Stem("hărăzeşte"), "hărăz" );
	deepEqual( Stem("hău"), "hău" );
	deepEqual( Stem("hegeliană"), "hegelian" );
	deepEqual( Stem("hei"), "hei" );
	deepEqual( Stem("heidelberg"), "heidelberg" );
	deepEqual( Stem("heine"), "hein" );
	deepEqual( Stem("hellmut"), "hellmut" );
	deepEqual( Stem("helmholtz"), "helmholtz" );
	deepEqual( Stem("henri"), "henr" );
	deepEqual( Stem("heraclit"), "heracl" );
	deepEqual( Stem("heraclites"), "heraclites" );
	deepEqual( Stem("herghelie"), "herghel" );
	deepEqual( Stem("heringi"), "hering" );
	deepEqual( Stem("hernie"), "hern" );
	deepEqual( Stem("hibrid"), "hibrid" );
	deepEqual( Stem("hibride"), "hibrid" );
	deepEqual( Stem("hidrogen"), "hidrogen" );
	deepEqual( Stem("hidrogenul"), "hidrogen" );
	deepEqual( Stem("higienic"), "higien" );
	deepEqual( Stem("hindenburg"), "hindenburg" );
	deepEqual( Stem("hiperfuncţiune"), "hiperfunct" );
	deepEqual( Stem("hipersensibil"), "hipersens" );
	deepEqual( Stem("hipertrofia"), "hipertrof" );
	deepEqual( Stem("hipertrofiat"), "hipertrof" );
	deepEqual( Stem("hipertrofiau"), "hipertrof" );
	deepEqual( Stem("hipertrofic"), "hipertrof" );
	deepEqual( Stem("hipnotizaţi"), "hipnotiz" );
	deepEqual( Stem("hipodrom"), "hipodrom" );
	deepEqual( Stem("hipostaziat"), "hipostaz" );
	deepEqual( Stem("hipostaziate"), "hipostaz" );
	deepEqual( Stem("hipostaziază"), "hipostaziaz" );
	deepEqual( Stem("hipostaziere"), "hipostazier" );
	deepEqual( Stem("hî"), "hî" );
	deepEqual( Stem("hm"), "hm" );
	deepEqual( Stem("hoaţă"), "hoaţ" );
	deepEqual( Stem("hoaţo"), "hoaţo" );
	deepEqual( Stem("hoc"), "hoc" );
	deepEqual( Stem("hohot"), "hohot" );
	deepEqual( Stem("hohote"), "hohot" );
	deepEqual( Stem("hohotele"), "hohot" );
	deepEqual( Stem("hol"), "hol" );
	deepEqual( Stem("homosexual"), "homosexual" );
	deepEqual( Stem("horaţiu"), "horaţiu" );
	deepEqual( Stem("hotar"), "hotar" );
	deepEqual( Stem("hotarele"), "hotar" );
	deepEqual( Stem("hotarul"), "hotar" );
	deepEqual( Stem("hotărască"), "hotărasc" );
	deepEqual( Stem("hotărâm"), "hotăr" );
	deepEqual( Stem("hotărând"), "hotăr" );
	deepEqual( Stem("hotărâre"), "hotăr" );
	deepEqual( Stem("hotărârea"), "hotăr" );
	deepEqual( Stem("hotărârile"), "hotărâr" );
	deepEqual( Stem("hotărâseră"), "hotăr" );
	deepEqual( Stem("hotărât"), "hotărât" );
	deepEqual( Stem("hotărâtă"), "hotărât" );
	deepEqual( Stem("hotărâte"), "hotărât" );
	deepEqual( Stem("hotărâtoare"), "hotărâtoar" );
	deepEqual( Stem("hotărâtor"), "hotărâtor" );
	deepEqual( Stem("hotărâţi"), "hotăr" );
	deepEqual( Stem("hotărăsc"), "hotăr" );
	deepEqual( Stem("hotărăşte"), "hotăr" );
	deepEqual( Stem("hotel"), "hotel" );
	deepEqual( Stem("hotelul"), "hotel" );
	deepEqual( Stem("hotelurile"), "hotelur" );
	deepEqual( Stem("hoţ"), "hoţ" );
	deepEqual( Stem("hoţi"), "hoţ" );
	deepEqual( Stem("hoţia"), "hoţi" );
	deepEqual( Stem("hoţii"), "hoţ" );
	deepEqual( Stem("hrană"), "hran" );
	deepEqual( Stem("hrănea"), "hrăn" );
	deepEqual( Stem("hrănesc"), "hrăn" );
	deepEqual( Stem("hrăneşte"), "hrăn" );
	deepEqual( Stem("hrănită"), "hrănit" );
	deepEqual( Stem("hrănite"), "hrănit" );
	deepEqual( Stem("hrănitor"), "hrănit" );
	deepEqual( Stem("hrisostom"), "hrisostom" );
	deepEqual( Stem("hristos"), "hristos" );
	deepEqual( Stem("huiduieşte"), "huidui" );
	deepEqual( Stem("hulim"), "hul" );
	deepEqual( Stem("humă"), "hum" );
	deepEqual( Stem("hume"), "hum" );
	deepEqual( Stem("humoresca"), "humoresc" );
	deepEqual( Stem("humoristic"), "humorist" );
	deepEqual( Stem("husar"), "husar" );
	deepEqual( Stem("husari"), "husar" );
	deepEqual( Stem("husarii"), "husar" );
	deepEqual( Stem("husarului"), "husar" );
	deepEqual( Stem("hut"), "hut" );
	deepEqual( Stem("huzurit"), "huzur" );
	deepEqual( Stem("i"), "i" );
	deepEqual( Stem("ia"), "ia" );
	deepEqual( Stem("iacă"), "iac" );
	deepEqual( Stem("iad"), "iad" );
	deepEqual( Stem("iadul"), "iad" );
	deepEqual( Stem("iadului"), "iad" );
	deepEqual( Stem("iai"), "iai" );
	deepEqual( Stem("ialomicioara"), "ialomicioar" );
	deepEqual( Stem("ianuarie"), "ianuar" );
	deepEqual( Stem("iar"), "iar" );
	deepEqual( Stem("iarăşi"), "iarăş" );
	deepEqual( Stem("iarba"), "iarb" );
	deepEqual( Stem("iarbă"), "iarb" );
	deepEqual( Stem("iarna"), "iarn" );
	deepEqual( Stem("iarnă"), "iarn" );
	deepEqual( Stem("iartă"), "iart" );
	deepEqual( Stem("iasă"), "ias" );
	deepEqual( Stem("iasomie"), "iasom" );
	deepEqual( Stem("iaşi"), "iaş" );
	deepEqual( Stem("iată"), "iat" );
	deepEqual( Stem("iau"), "iau" );
	deepEqual( Stem("ich"), "ich" );
	deepEqual( Stem("ici"), "ici" );
	deepEqual( Stem("icoana"), "icoan" );
	deepEqual( Stem("icoană"), "icoan" );
	deepEqual( Stem("icusaru"), "icusaru" );
	deepEqual( Stem("ideal"), "ideal" );
	deepEqual( Stem("ideală"), "ideal" );
	deepEqual( Stem("idealismul"), "idealist" );
	deepEqual( Stem("idealist"), "idealist" );
	deepEqual( Stem("idealistă"), "idealist" );
	deepEqual( Stem("idealişti"), "idealist" );
	deepEqual( Stem("idealiştii"), "idealist" );
	deepEqual( Stem("idealul"), "ideal" );
	deepEqual( Stem("idealului"), "ideal" );
	deepEqual( Stem("idee"), "ide" );
	deepEqual( Stem("ideea"), "ide" );
	deepEqual( Stem("idei"), "ide" );
	deepEqual( Stem("ideii"), "idei" );
	deepEqual( Stem("ideile"), "ide" );
	deepEqual( Stem("ideilor"), "ide" );
	deepEqual( Stem("identic"), "ident" );
	deepEqual( Stem("identică"), "ident" );
	deepEqual( Stem("identice"), "ident" );
	deepEqual( Stem("identific"), "identif" );
	deepEqual( Stem("identifica"), "identif" );
	deepEqual( Stem("identificare"), "identific" );
	deepEqual( Stem("identificat"), "identific" );
	deepEqual( Stem("identificate"), "identific" );
	deepEqual( Stem("identifică"), "identif" );
	deepEqual( Stem("identificăm"), "identific" );
	deepEqual( Stem("identitate"), "ident" );
	deepEqual( Stem("identitatea"), "ident" );
	deepEqual( Stem("identităţi"), "ident" );
	deepEqual( Stem("identităţii"), "ident" );
	deepEqual( Stem("ideologia"), "ideolog" );
	deepEqual( Stem("ideologică"), "ideolog" );
	deepEqual( Stem("ideologice"), "ideolog" );
	deepEqual( Stem("ideologiei"), "ideolog" );
	deepEqual( Stem("ideologii"), "ideolog" );
	deepEqual( Stem("ideologiile"), "ideolog" );
	deepEqual( Stem("idila"), "idil" );
	deepEqual( Stem("idilic"), "idil" );
	deepEqual( Stem("idilică"), "idil" );
	deepEqual( Stem("idiotizat"), "idiotiz" );
	deepEqual( Stem("idiotizează"), "idiotiz" );
	deepEqual( Stem("idolatrie"), "idolatr" );
	deepEqual( Stem("idolul"), "idol" );
	deepEqual( Stem("ieftin"), "ieftin" );
	deepEqual( Stem("ieftină"), "ieftin" );
	deepEqual( Stem("ieftine"), "ieftin" );
	deepEqual( Stem("iei"), "iei" );
	deepEqual( Stem("iepuri"), "iepur" );
	deepEqual( Stem("iepurii"), "iepur" );
	deepEqual( Stem("ierarhia"), "ierarh" );
	deepEqual( Stem("ierarhic"), "ierarh" );
	deepEqual( Stem("ierarhie"), "ierarh" );
	deepEqual( Stem("ierbii"), "ierb" );
	deepEqual( Stem("ieri"), "ier" );
	deepEqual( Stem("ieronim"), "ieron" );
	deepEqual( Stem("iert"), "iert" );
	deepEqual( Stem("ierta"), "iert" );
	deepEqual( Stem("iertare"), "iert" );
	deepEqual( Stem("iertat"), "iertat" );
	deepEqual( Stem("iertaţi"), "iert" );
	deepEqual( Stem("iertau"), "iert" );
	deepEqual( Stem("iertători"), "iertat" );
	deepEqual( Stem("ierte"), "iert" );
	deepEqual( Stem("ies"), "ies" );
	deepEqual( Stem("iese"), "ies" );
	deepEqual( Stem("ieşea"), "ieş" );
	deepEqual( Stem("ieşeau"), "ieşeau" );
	deepEqual( Stem("ieşi"), "ieş" );
	deepEqual( Stem("ieşim"), "ieş" );
	deepEqual( Stem("ieşire"), "ieşir" );
	deepEqual( Stem("ieşirea"), "ieşir" );
	deepEqual( Stem("ieşirei"), "ieşire" );
	deepEqual( Stem("ieşiri"), "ieşir" );
	deepEqual( Stem("ieşise"), "ieşis" );
	deepEqual( Stem("ieşit"), "ieşit" );
	deepEqual( Stem("ieşiţi"), "ieş" );
	deepEqual( Stem("iezerului"), "iezer" );
	deepEqual( Stem("ignorant"), "ignor" );
	deepEqual( Stem("ignoranţa"), "ignoranţ" );
	deepEqual( Stem("ignoranţei"), "ignoranţe" );
	deepEqual( Stem("ignorând"), "ignor" );
	deepEqual( Stem("ignoră"), "ignor" );
	deepEqual( Stem("ignorăm"), "ignor" );
	deepEqual( Stem("ignorează"), "ignor" );
	deepEqual( Stem("ii"), "ii" );
	deepEqual( Stem("iii"), "iii" );
	deepEqual( Stem("ilaritate"), "ilar" );
	deepEqual( Stem("ilegalismul"), "ilegalist" );
	deepEqual( Stem("ilegalismului"), "ilegalist" );
	deepEqual( Stem("iliada"), "iliad" );
	deepEqual( Stem("ilie"), "ilie" );
	deepEqual( Stem("iluminat"), "ilumin" );
	deepEqual( Stem("iluminată"), "ilumin" );
	deepEqual( Stem("iluminaţi"), "ilumin" );
	deepEqual( Stem("ilustra"), "ilustr" );
	deepEqual( Stem("ilustrat"), "ilustr" );
	deepEqual( Stem("ilustrată"), "ilustr" );
	deepEqual( Stem("ilustrate"), "ilustr" );
	deepEqual( Stem("ilustrează"), "ilustr" );
	deepEqual( Stem("ilustreze"), "ilustr" );
	deepEqual( Stem("iluştri"), "iluştr" );
	deepEqual( Stem("iluzia"), "iluz" );
	deepEqual( Stem("iluzie"), "iluz" );
	deepEqual( Stem("iluziei"), "iluz" );
	deepEqual( Stem("iluzii"), "iluz" );
	deepEqual( Stem("iluziune"), "iluziun" );
	deepEqual( Stem("iluzorie"), "iluzor" );
	deepEqual( Stem("imagina"), "imagin" );
	deepEqual( Stem("imaginam"), "imagin" );
	deepEqual( Stem("imaginar"), "imaginar" );
	deepEqual( Stem("imaginaţie"), "imagin" );
	deepEqual( Stem("imaginaţiei"), "imagin" );
	deepEqual( Stem("imagine"), "imagin" );
	deepEqual( Stem("imaginea"), "imagin" );
	deepEqual( Stem("imaginează"), "imagin" );
	deepEqual( Stem("imaginei"), "imagine" );
	deepEqual( Stem("imaginez"), "imagin" );
	deepEqual( Stem("imaginezi"), "imagin" );
	deepEqual( Stem("imagini"), "imagin" );
	deepEqual( Stem("imaginii"), "imagin" );
	deepEqual( Stem("imaginile"), "imagin" );
	deepEqual( Stem("imaginilor"), "imagin" );
	deepEqual( Stem("imago"), "imago" );
	deepEqual( Stem("imanent"), "imanent" );
	deepEqual( Stem("imanentă"), "imanent" );
	deepEqual( Stem("imanente"), "imanent" );
	deepEqual( Stem("imanenţa"), "imanenţ" );
	deepEqual( Stem("imanenţă"), "imanenţ" );
	deepEqual( Stem("imanenţei"), "imanenţe" );
	deepEqual( Stem("imbecil"), "imbecil" );
	deepEqual( Stem("imbecilii"), "imbecil" );
	deepEqual( Stem("imbecililor"), "imbecil" );
	deepEqual( Stem("imbecilitate"), "imbecil" );
	deepEqual( Stem("imbecilitatea"), "imbecil" );
	deepEqual( Stem("imbecilul"), "imbecil" );
	deepEqual( Stem("imediat"), "imed" );
	deepEqual( Stem("imediată"), "imed" );
	deepEqual( Stem("imediate"), "imed" );
	deepEqual( Stem("imens"), "imens" );
	deepEqual( Stem("imensa"), "imens" );
	deepEqual( Stem("imensă"), "imens" );
	deepEqual( Stem("imensei"), "imen" );
	deepEqual( Stem("imensitatea"), "imens" );
	deepEqual( Stem("imenşii"), "imenş" );
	deepEqual( Stem("imita"), "imit" );
	deepEqual( Stem("imitator"), "imit" );
	deepEqual( Stem("imitatorie"), "imitator" );
	deepEqual( Stem("imitatorul"), "imit" );
	deepEqual( Stem("imitaţia"), "imit" );
	deepEqual( Stem("imitaţie"), "imit" );
	deepEqual( Stem("imitaţiei"), "imit" );
	deepEqual( Stem("imitaţii"), "imit" );
	deepEqual( Stem("imită"), "imit" );
	deepEqual( Stem("immediate"), "immed" );
	deepEqual( Stem("imn"), "imn" );
	deepEqual( Stem("imobilizată"), "imobiliz" );
	deepEqual( Stem("imobilizaţi"), "imobiliz" );
	deepEqual( Stem("impenetrabil"), "impenetr" );
	deepEqual( Stem("imperative"), "imper" );
	deepEqual( Stem("imperativul"), "imper" );
	deepEqual( Stem("imperceptibil"), "impercept" );
	deepEqual( Stem("imperceptibile"), "imperceptib" );
	deepEqual( Stem("imperfect"), "imperfect" );
	deepEqual( Stem("imperfecte"), "imperfect" );
	deepEqual( Stem("imperial"), "imperial" );
	deepEqual( Stem("imperialiste"), "imperialist" );
	deepEqual( Stem("imperiu"), "imperiu" );
	deepEqual( Stem("imperiul"), "imper" );
	deepEqual( Stem("imperiului"), "imper" );
	deepEqual( Stem("impertinenţă"), "impertinenţ" );
	deepEqual( Stem("imperturbabil"), "imperturb" );
	deepEqual( Stem("implicat"), "implic" );
	deepEqual( Stem("implică"), "implic" );
	deepEqual( Stem("implicit"), "implic" );
	deepEqual( Stem("implora"), "implor" );
	deepEqual( Stem("imploră"), "implor" );
	deepEqual( Stem("implorări"), "implorăr" );
	deepEqual( Stem("implore"), "implor" );
	deepEqual( Stem("imponderabil"), "imponder" );
	deepEqual( Stem("important"), "import" );
	deepEqual( Stem("importantă"), "import" );
	deepEqual( Stem("importante"), "import" );
	deepEqual( Stem("importanţa"), "importanţ" );
	deepEqual( Stem("importanţă"), "importanţ" );
	deepEqual( Stem("importanţi"), "importanţ" );
	deepEqual( Stem("importul"), "import" );
	deepEqual( Stem("imposibil"), "impos" );
	deepEqual( Stem("imposibilă"), "impos" );
	deepEqual( Stem("imposibile"), "imposib" );
	deepEqual( Stem("imposibilitate"), "impos" );
	deepEqual( Stem("imposibilitatea"), "impos" );
	deepEqual( Stem("imposibilităţi"), "imposibil" );
	deepEqual( Stem("imposibilul"), "impos" );
	deepEqual( Stem("impreciziei"), "impreciz" );
	deepEqual( Stem("impresia"), "impres" );
	deepEqual( Stem("impresie"), "impres" );
	deepEqual( Stem("impresiei"), "impres" );
	deepEqual( Stem("impresii"), "impres" );
	deepEqual( Stem("impresiile"), "impres" );
	deepEqual( Stem("impresiilor"), "impres" );
	deepEqual( Stem("impresionabili"), "impresion" );
	deepEqual( Stem("impresionant"), "impresion" );
	deepEqual( Stem("impresionantă"), "impresion" );
	deepEqual( Stem("impresionat"), "impresion" );
	deepEqual( Stem("impresionismului"), "impresionist" );
	deepEqual( Stem("impresionist"), "impresionist" );
	deepEqual( Stem("impresiune"), "impresiun" );
	deepEqual( Stem("impresiunea"), "impresiun" );
	deepEqual( Stem("impresiuni"), "impresiun" );
	deepEqual( Stem("impresiunile"), "impresiun" );
	deepEqual( Stem("impresiunilor"), "impresiun" );
	deepEqual( Stem("imprevu"), "imprevu" );
	deepEqual( Stem("imprim"), "imprim" );
	deepEqual( Stem("imprimat"), "imprim" );
	deepEqual( Stem("impropriu"), "impropriu" );
	deepEqual( Stem("improvizat"), "improviz" );
	deepEqual( Stem("improvizate"), "improviz" );
	deepEqual( Stem("imprudent"), "imprudent" );
	deepEqual( Stem("imprudenţă"), "imprudenţ" );
	deepEqual( Stem("imprudenţe"), "imprudenţ" );
	deepEqual( Stem("imprudenţele"), "imprudenţ" );
	deepEqual( Stem("impudic"), "impud" );
	deepEqual( Stem("impudice"), "impud" );
	deepEqual( Stem("impudoare"), "impudoar" );
	deepEqual( Stem("impui"), "impu" );
	deepEqual( Stem("impuls"), "impuls" );
	deepEqual( Stem("impulsiona"), "impulsion" );
	deepEqual( Stem("impulsionarea"), "impulsion" );
	deepEqual( Stem("impulsionaţi"), "impulsion" );
	deepEqual( Stem("impulsioneze"), "impulsion" );
	deepEqual( Stem("impulsiv"), "impuls" );
	deepEqual( Stem("impulsivă"), "impuls" );
	deepEqual( Stem("impulsivităţii"), "impuls" );
	deepEqual( Stem("impulsuri"), "impulsur" );
	deepEqual( Stem("impun"), "impun" );
	deepEqual( Stem("impună"), "impun" );
	deepEqual( Stem("impunătoare"), "impun" );
	deepEqual( Stem("impunător"), "impun" );
	deepEqual( Stem("impune"), "impun" );
	deepEqual( Stem("impunea"), "impun" );
	deepEqual( Stem("impuneau"), "impun" );
	deepEqual( Stem("impunerea"), "impun" );
	deepEqual( Stem("impunerii"), "impuner" );
	deepEqual( Stem("impunînd"), "impunînd" );
	deepEqual( Stem("impur"), "impur" );
	deepEqual( Stem("impuritate"), "impur" );
	deepEqual( Stem("impurităţi"), "impur" );
	deepEqual( Stem("impus"), "impus" );
	deepEqual( Stem("impusă"), "impus" );
	deepEqual( Stem("impuse"), "impu" );
	deepEqual( Stem("imuabil"), "imuabil" );
	deepEqual( Stem("imune"), "imun" );
	deepEqual( Stem("imutabilitatea"), "imut" );
	deepEqual( Stem("in"), "in" );
	deepEqual( Stem("inabordabilă"), "inabord" );
	deepEqual( Stem("inacceptabilă"), "inaccept" );
	deepEqual( Stem("inaccesibilă"), "inacces" );
	deepEqual( Stem("inactivă"), "inact" );
	deepEqual( Stem("inactuale"), "inactual" );
	deepEqual( Stem("inamic"), "inam" );
	deepEqual( Stem("inamică"), "inam" );
	deepEqual( Stem("inamice"), "inam" );
	deepEqual( Stem("inamici"), "inam" );
	deepEqual( Stem("inamicul"), "inam" );
	deepEqual( Stem("inamicului"), "inam" );
	deepEqual( Stem("inatacabila"), "inatac" );
	deepEqual( Stem("inaugurarea"), "inaugur" );
	deepEqual( Stem("incalificabil"), "incalific" );
	deepEqual( Stem("incandescent"), "incandescent" );
	deepEqual( Stem("incandescenţă"), "incandescenţ" );
	deepEqual( Stem("incapabil"), "incap" );
	deepEqual( Stem("incapabilă"), "incap" );
	deepEqual( Stem("incapabile"), "incap" );
	deepEqual( Stem("incapabili"), "incap" );
	deepEqual( Stem("incapacitatea"), "incapac" );
	deepEqual( Stem("incarnare"), "incarn" );
	deepEqual( Stem("incarnaţii"), "incarn" );
	deepEqual( Stem("incarnează"), "incarn" );
	deepEqual( Stem("incertă"), "incert" );
	deepEqual( Stem("incertitudinea"), "incertitudin" );
	deepEqual( Stem("incertitudinilor"), "incertitudin" );
	deepEqual( Stem("inchizitor"), "inchiz" );
	deepEqual( Stem("inchiziţioneze"), "inchiziţion" );
	deepEqual( Stem("incident"), "incident" );
	deepEqual( Stem("incidental"), "incidental" );
	deepEqual( Stem("incidentală"), "incidental" );
	deepEqual( Stem("incidente"), "incident" );
	deepEqual( Stem("incidentele"), "incident" );
	deepEqual( Stem("incinta"), "incint" );
	deepEqual( Stem("incintă"), "incint" );
	deepEqual( Stem("incluziv"), "incluz" );
	deepEqual( Stem("incnind"), "incnind" );
	deepEqual( Stem("incoerent"), "incoerent" );
	deepEqual( Stem("incomod"), "incomod" );
	deepEqual( Stem("incomparabil"), "incompar" );
	deepEqual( Stem("incomparabila"), "incompar" );
	deepEqual( Stem("incompetenţei"), "incompetenţe" );
	deepEqual( Stem("incompletă"), "incomplet" );
	deepEqual( Stem("incomunicabile"), "incomunic" );
	deepEqual( Stem("inconsecvenţa"), "inconsecvenţ" );
	deepEqual( Stem("inconsistente"), "inconsistent" );
	deepEqual( Stem("inconştient"), "inconştient" );
	deepEqual( Stem("inconştiente"), "inconştient" );
	deepEqual( Stem("inconştienţă"), "inconştienţ" );
	deepEqual( Stem("incontestabil"), "incontest" );
	deepEqual( Stem("incontestabilă"), "incontest" );
	deepEqual( Stem("incontinenţă"), "incontinenţ" );
	deepEqual( Stem("incorijibil"), "incorij" );
	deepEqual( Stem("incriminate"), "incrimin" );
	deepEqual( Stem("incult"), "incult" );
	deepEqual( Stem("incurabil"), "incur" );
	deepEqual( Stem("incursie"), "incurs" );
	deepEqual( Stem("indeniabilă"), "inden" );
	deepEqual( Stem("indentare"), "indent" );
	deepEqual( Stem("indentificarea"), "indentific" );
	deepEqual( Stem("indentitatea"), "indent" );
	deepEqual( Stem("independent"), "independent" );
	deepEqual( Stem("independentă"), "independent" );
	deepEqual( Stem("independente"), "independent" );
	deepEqual( Stem("independenţa"), "independenţ" );
	deepEqual( Stem("independenţă"), "independenţ" );
	deepEqual( Stem("independenţi"), "independenţ" );
	deepEqual( Stem("independeţa"), "independeţ" );
	deepEqual( Stem("independeţă"), "independeţ" );
	deepEqual( Stem("index"), "index" );
	deepEqual( Stem("india"), "indi" );
	deepEqual( Stem("indica"), "indic" );
	deepEqual( Stem("indicare"), "indic" );
	deepEqual( Stem("indicarea"), "indic" );
	deepEqual( Stem("indicat"), "indic" );
	deepEqual( Stem("indicată"), "indic" );
	deepEqual( Stem("indicate"), "indic" );
	deepEqual( Stem("indicatoare"), "indic" );
	deepEqual( Stem("indicaţia"), "indic" );
	deepEqual( Stem("indicaţiei"), "indic" );
	deepEqual( Stem("indicaţiile"), "indic" );
	deepEqual( Stem("indicaţiilor"), "indic" );
	deepEqual( Stem("indicaţiuni"), "indicat" );
	deepEqual( Stem("indicaţiunile"), "indicat" );
	deepEqual( Stem("indică"), "indic" );
	deepEqual( Stem("indice"), "indic" );
	deepEqual( Stem("indiciu"), "indiciu" );
	deepEqual( Stem("indie"), "indie" );
	deepEqual( Stem("indieni"), "indien" );
	deepEqual( Stem("indiferent"), "indiferent" );
	deepEqual( Stem("indiferentă"), "indiferent" );
	deepEqual( Stem("indiferente"), "indiferent" );
	deepEqual( Stem("indiferenţa"), "indiferenţ" );
	deepEqual( Stem("indiferenţă"), "indiferenţ" );
	deepEqual( Stem("indiferenţei"), "indiferenţe" );
	deepEqual( Stem("indigestaque"), "indigestaqu" );
	deepEqual( Stem("indignarea"), "indign" );
	deepEqual( Stem("indignat"), "indign" );
	deepEqual( Stem("indignată"), "indign" );
	deepEqual( Stem("indignaţi"), "indign" );
	deepEqual( Stem("indignează"), "indign" );
	deepEqual( Stem("indirect"), "indirect" );
	deepEqual( Stem("indirectă"), "indirect" );
	deepEqual( Stem("indiscretă"), "indiscret" );
	deepEqual( Stem("indiscrete"), "indiscret" );
	deepEqual( Stem("indiscreţie"), "indiscreţ" );
	deepEqual( Stem("indiscutabil"), "indiscut" );
	deepEqual( Stem("indisolubilă"), "indisolubil" );
	deepEqual( Stem("indispensabilă"), "indispens" );
	deepEqual( Stem("indisponibilitate"), "indispon" );
	deepEqual( Stem("individ"), "individ" );
	deepEqual( Stem("individual"), "individual" );
	deepEqual( Stem("individuală"), "individual" );
	deepEqual( Stem("individuale"), "individual" );
	deepEqual( Stem("individualism"), "individualist" );
	deepEqual( Stem("individualistă"), "individualist" );
	deepEqual( Stem("individualiste"), "individualist" );
	deepEqual( Stem("individualişti"), "individualist" );
	deepEqual( Stem("individualitate"), "individual" );
	deepEqual( Stem("individualitatea"), "individual" );
	deepEqual( Stem("individului"), "individ" );
	deepEqual( Stem("indivizi"), "indiviz" );
	deepEqual( Stem("indivizii"), "indiviz" );
	deepEqual( Stem("indivizilor"), "indiviz" );
	deepEqual( Stem("inductiv"), "induct" );
	deepEqual( Stem("inductive"), "induct" );
	deepEqual( Stem("inducţiune"), "induct" );
	deepEqual( Stem("inducţiunea"), "induct" );
	deepEqual( Stem("inducţiunii"), "induct" );
	deepEqual( Stem("indulgent"), "indulgent" );
	deepEqual( Stem("indulgentă"), "indulgent" );
	deepEqual( Stem("indulgenţa"), "indulgenţ" );
	deepEqual( Stem("indulgenţă"), "indulgenţ" );
	deepEqual( Stem("indulgenţi"), "indulgenţ" );
	deepEqual( Stem("indusă"), "indus" );
	deepEqual( Stem("industrială"), "industrial" );
	deepEqual( Stem("industriale"), "industrial" );
	deepEqual( Stem("industriali"), "industrial" );
	deepEqual( Stem("industriaşi"), "industriaş" );
	deepEqual( Stem("inedit"), "ined" );
	deepEqual( Stem("inedite"), "ined" );
	deepEqual( Stem("inefabilă"), "inef" );
	deepEqual( Stem("inel"), "inel" );
	deepEqual( Stem("ineleganţa"), "ineleganţ" );
	deepEqual( Stem("ineluctabilă"), "ineluct" );
	deepEqual( Stem("inept"), "inept" );
	deepEqual( Stem("inerent"), "inerent" );
	deepEqual( Stem("inerente"), "inerent" );
	deepEqual( Stem("inert"), "inert" );
	deepEqual( Stem("inerţia"), "inerţ" );
	deepEqual( Stem("inerţie"), "inerţ" );
	deepEqual( Stem("inevitabil"), "inevit" );
	deepEqual( Stem("inevitabilă"), "inevit" );
	deepEqual( Stem("inevitabile"), "inevit" );
	deepEqual( Stem("inexplicabilă"), "inexplic" );
	deepEqual( Stem("inexplicabile"), "inexplic" );
	deepEqual( Stem("inexpugnabilă"), "inexpugn" );
	deepEqual( Stem("infam"), "infam" );
	deepEqual( Stem("infame"), "infam" );
	deepEqual( Stem("infamie"), "infam" );
	deepEqual( Stem("infamii"), "infam" );
	deepEqual( Stem("infamiile"), "infam" );
	deepEqual( Stem("infanteria"), "infanter" );
	deepEqual( Stem("infanterie"), "infanter" );
	deepEqual( Stem("infanterii"), "infanter" );
	deepEqual( Stem("infanterişti"), "infanterist" );
	deepEqual( Stem("infanteriştii"), "infanterist" );
	deepEqual( Stem("inferioară"), "inferioar" );
	deepEqual( Stem("inferioare"), "inferioar" );
	deepEqual( Stem("inferior"), "inferior" );
	deepEqual( Stem("inferiori"), "inferior" );
	deepEqual( Stem("inferioritate"), "inferior" );
	deepEqual( Stem("inferiorităţi"), "inferior" );
	deepEqual( Stem("infern"), "infern" );
	deepEqual( Stem("infim"), "infim" );
	deepEqual( Stem("infimă"), "infim" );
	deepEqual( Stem("infinit"), "infin" );
	deepEqual( Stem("infinitate"), "infin" );
	deepEqual( Stem("infinite"), "infin" );
	deepEqual( Stem("infinitele"), "infin" );
	deepEqual( Stem("infinitezimală"), "infinitezimal" );
	deepEqual( Stem("infinitezimale"), "infinitezimal" );
	deepEqual( Stem("infinitul"), "infin" );
	deepEqual( Stem("infinitului"), "infin" );
	deepEqual( Stem("infinitum"), "infinitum" );
	deepEqual( Stem("infirmitate"), "infirm" );
	deepEqual( Stem("infirmităţi"), "infirm" );
	deepEqual( Stem("inflamabil"), "inflam" );
	deepEqual( Stem("inflamant"), "inflam" );
	deepEqual( Stem("inflamat"), "inflam" );
	deepEqual( Stem("inflamată"), "inflam" );
	deepEqual( Stem("inflamatoare"), "inflam" );
	deepEqual( Stem("inflameze"), "inflam" );
	deepEqual( Stem("inflaţia"), "inflaţ" );
	deepEqual( Stem("inflaţionist"), "inflaţionist" );
	deepEqual( Stem("inflăcărate"), "inflăcăr" );
	deepEqual( Stem("inflexibil"), "inflex" );
	deepEqual( Stem("inflexibile"), "inflexib" );
	deepEqual( Stem("inflexiuni"), "inflexiun" );
	deepEqual( Stem("infloresc"), "inflor" );
	deepEqual( Stem("influent"), "influent" );
	deepEqual( Stem("influentare"), "influent" );
	deepEqual( Stem("influenţa"), "influenţ" );
	deepEqual( Stem("influenţase"), "influenţ" );
	deepEqual( Stem("influenţat"), "influenţ" );
	deepEqual( Stem("influenţă"), "influenţ" );
	deepEqual( Stem("influenţeze"), "influenţ" );
	deepEqual( Stem("influenţi"), "influenţ" );
	deepEqual( Stem("inform"), "inform" );
	deepEqual( Stem("informarea"), "inform" );
	deepEqual( Stem("informaţi"), "inform" );
	deepEqual( Stem("informă"), "inform" );
	deepEqual( Stem("informează"), "inform" );
	deepEqual( Stem("inginer"), "inginer" );
	deepEqual( Stem("ingineri"), "inginer" );
	deepEqual( Stem("inginerul"), "inginer" );
	deepEqual( Stem("ingrat"), "ingrat" );
	deepEqual( Stem("ingrată"), "ingrat" );
	deepEqual( Stem("ingratitudine"), "ingratitudin" );
	deepEqual( Stem("ingraţi"), "ingraţ" );
	deepEqual( Stem("ingredient"), "ingredient" );
	deepEqual( Stem("ingrediente"), "ingredient" );
	deepEqual( Stem("ingredientele"), "ingredient" );
	deepEqual( Stem("ingredientul"), "ingredient" );
	deepEqual( Stem("inima"), "inim" );
	deepEqual( Stem("inimă"), "inim" );
	deepEqual( Stem("inimii"), "inim" );
	deepEqual( Stem("inimoase"), "inim" );
	deepEqual( Stem("ininteligibil"), "inintelig" );
	deepEqual( Stem("ininteligibili"), "inintelig" );
	deepEqual( Stem("iniţială"), "iniţial" );
	deepEqual( Stem("iniţialele"), "iniţial" );
	deepEqual( Stem("iniţiat"), "iniţ" );
	deepEqual( Stem("iniţiativa"), "iniţ" );
	deepEqual( Stem("iniţiativă"), "iniţ" );
	deepEqual( Stem("iniţiativei"), "iniţiative" );
	deepEqual( Stem("iniţiativele"), "iniţ" );
	deepEqual( Stem("iniţiaţi"), "iniţ" );
	deepEqual( Stem("injecţia"), "injecţ" );
	deepEqual( Stem("injecţie"), "injecţ" );
	deepEqual( Stem("injecţii"), "injecţ" );
	deepEqual( Stem("injurie"), "injur" );
	deepEqual( Stem("inocent"), "inocent" );
	deepEqual( Stem("inocenţa"), "inocenţ" );
	deepEqual( Stem("inocenţă"), "inocenţ" );
	deepEqual( Stem("inocenţei"), "inocenţe" );
	deepEqual( Stem("inofensivă"), "inofens" );
	deepEqual( Stem("inoportună"), "inoportun" );
	deepEqual( Stem("inovaţii"), "inov" );
	deepEqual( Stem("inovaţiile"), "inov" );
	deepEqual( Stem("inscripţii"), "inscripţ" );
	deepEqual( Stem("insensibilitate"), "insens" );
	deepEqual( Stem("insereze"), "inser" );
	deepEqual( Stem("insesizabilul"), "insesiz" );
	deepEqual( Stem("insigna"), "insign" );
	deepEqual( Stem("insinua"), "insinu" );
	deepEqual( Stem("insinuările"), "insinuăr" );
	deepEqual( Stem("insinuează"), "insinu" );
	deepEqual( Stem("insinuezi"), "insinu" );
	deepEqual( Stem("insipidă"), "insipid" );
	deepEqual( Stem("insist"), "insist" );
	deepEqual( Stem("insista"), "insist" );
	deepEqual( Stem("insistai"), "insist" );
	deepEqual( Stem("insistat"), "insist" );
	deepEqual( Stem("insistă"), "insist" );
	deepEqual( Stem("insistăm"), "insist" );
	deepEqual( Stem("insistent"), "insistent" );
	deepEqual( Stem("insistentă"), "insistent" );
	deepEqual( Stem("insistente"), "insistent" );
	deepEqual( Stem("insistenţe"), "insistenţ" );
	deepEqual( Stem("insistenţelor"), "insistenţ" );
	deepEqual( Stem("insistînd"), "insistînd" );
	deepEqual( Stem("insitutor"), "insitutor" );
	deepEqual( Stem("insolent"), "insolent" );
	deepEqual( Stem("insolentă"), "insolent" );
	deepEqual( Stem("insolenţă"), "insolenţ" );
	deepEqual( Stem("insolenţe"), "insolenţ" );
	deepEqual( Stem("insolit"), "insol" );
	deepEqual( Stem("insolubil"), "insolubil" );
	deepEqual( Stem("insolubilă"), "insolubil" );
	deepEqual( Stem("insolubile"), "insolub" );
	deepEqual( Stem("insolvabil"), "insolv" );
	deepEqual( Stem("insolvabilă"), "insolv" );
	deepEqual( Stem("insolvabilitate"), "insolv" );
	deepEqual( Stem("insomnie"), "insomn" );
	deepEqual( Stem("insomnii"), "insomn" );
	deepEqual( Stem("inspectând"), "inspect" );
	deepEqual( Stem("inspecţia"), "inspecţ" );
	deepEqual( Stem("inspecţie"), "inspecţ" );
	deepEqual( Stem("inspira"), "inspir" );
	deepEqual( Stem("inspirase"), "inspir" );
	deepEqual( Stem("inspirat"), "inspir" );
	deepEqual( Stem("inspirată"), "inspir" );
	deepEqual( Stem("inspirator"), "inspir" );
	deepEqual( Stem("inspiratorul"), "inspir" );
	deepEqual( Stem("inspiraţia"), "inspir" );
	deepEqual( Stem("inspiraţiei"), "inspir" );
	deepEqual( Stem("inspiră"), "inspir" );
	deepEqual( Stem("instantanee"), "instantane" );
	deepEqual( Stem("instanţele"), "instanţ" );
	deepEqual( Stem("instaurarea"), "instaur" );
	deepEqual( Stem("instinct"), "instinct" );
	deepEqual( Stem("instinctele"), "instinct" );
	deepEqual( Stem("instinctelor"), "instinct" );
	deepEqual( Stem("instinctului"), "instinct" );
	deepEqual( Stem("institut"), "instit" );
	deepEqual( Stem("institutoare"), "institutoar" );
	deepEqual( Stem("institutul"), "instit" );
	deepEqual( Stem("instituţiile"), "instituţ" );
	deepEqual( Stem("instructivă"), "instruct" );
	deepEqual( Stem("instrucţie"), "instrucţ" );
	deepEqual( Stem("instrui"), "instru" );
	deepEqual( Stem("instruim"), "instru" );
	deepEqual( Stem("instruiţi"), "instru" );
	deepEqual( Stem("instrument"), "instrument" );
	deepEqual( Stem("instrumente"), "instrument" );
	deepEqual( Stem("instrumentele"), "instrument" );
	deepEqual( Stem("instrumentul"), "instrument" );
	deepEqual( Stem("insubordonare"), "insubordon" );
	deepEqual( Stem("insuccese"), "insucc" );
	deepEqual( Stem("insuccesul"), "insucces" );
	deepEqual( Stem("insuficientă"), "insuficient" );
	deepEqual( Stem("insuficiente"), "insuficient" );
	deepEqual( Stem("insuflare"), "insufl" );
	deepEqual( Stem("insulă"), "insul" );
	deepEqual( Stem("insultă"), "insult" );
	deepEqual( Stem("insuportabil"), "insuport" );
	deepEqual( Stem("insuportabilă"), "insuport" );
	deepEqual( Stem("insuportabile"), "insuport" );
	deepEqual( Stem("insuportabilelor"), "insuport" );
	deepEqual( Stem("inşi"), "inşi" );
	deepEqual( Stem("intact"), "intact" );
	deepEqual( Stem("intactă"), "intact" );
	deepEqual( Stem("intangibile"), "intangib" );
	deepEqual( Stem("integrant"), "integr" );
	deepEqual( Stem("integrantă"), "integr" );
	deepEqual( Stem("integrare"), "integr" );
	deepEqual( Stem("integrându"), "integr" );
	deepEqual( Stem("integrăm"), "integr" );
	deepEqual( Stem("integrării"), "integrăr" );
	deepEqual( Stem("integrează"), "integr" );
	deepEqual( Stem("intelectual"), "intelectual" );
	deepEqual( Stem("intelectuală"), "intelectual" );
	deepEqual( Stem("intelectuale"), "intelectual" );
	deepEqual( Stem("intelectualele"), "intelectual" );
	deepEqual( Stem("intelectuali"), "intelectual" );
	deepEqual( Stem("intelectualii"), "intelectual" );
	deepEqual( Stem("intelectualilor"), "intelectual" );
	deepEqual( Stem("intelectualism"), "intelectualist" );
	deepEqual( Stem("intelectualismului"), "intelectualist" );
	deepEqual( Stem("intelectualităţii"), "intelectual" );
	deepEqual( Stem("intelectualul"), "intelectual" );
	deepEqual( Stem("intelectualului"), "intelectual" );
	deepEqual( Stem("intelectul"), "intelect" );
	deepEqual( Stem("intelectului"), "intelect" );
	deepEqual( Stem("inteligent"), "inteligent" );
	deepEqual( Stem("inteligentă"), "inteligent" );
	deepEqual( Stem("inteligenţa"), "inteligenţ" );
	deepEqual( Stem("inteligenţă"), "inteligenţ" );
	deepEqual( Stem("inteligenţe"), "inteligenţ" );
	deepEqual( Stem("inteligenţei"), "inteligenţe" );
	deepEqual( Stem("intendenţă"), "intendenţ" );
	deepEqual( Stem("intens"), "intens" );
	deepEqual( Stem("intensă"), "intens" );
	deepEqual( Stem("intensificarea"), "intensific" );
	deepEqual( Stem("intensitate"), "intens" );
	deepEqual( Stem("intensitatea"), "intens" );
	deepEqual( Stem("intensităţii"), "intens" );
	deepEqual( Stem("intenţia"), "intenţ" );
	deepEqual( Stem("intenţie"), "intenţ" );
	deepEqual( Stem("intenţii"), "intenţ" );
	deepEqual( Stem("intenţiile"), "intenţ" );
	deepEqual( Stem("intenţional"), "intenţional" );
	deepEqual( Stem("intenţionat"), "intenţion" );
	deepEqual( Stem("intenţionează"), "intenţion" );
	deepEqual( Stem("intenţiunea"), "intent" );
	deepEqual( Stem("intenţiuni"), "intent" );
	deepEqual( Stem("intercalată"), "intercal" );
	deepEqual( Stem("interes"), "interes" );
	deepEqual( Stem("interesa"), "interes" );
	deepEqual( Stem("interesant"), "interes" );
	deepEqual( Stem("interesantă"), "interes" );
	deepEqual( Stem("interesante"), "interes" );
	deepEqual( Stem("interesanţi"), "interesanţ" );
	deepEqual( Stem("interesat"), "interes" );
	deepEqual( Stem("interesată"), "interes" );
	deepEqual( Stem("interesau"), "interes" );
	deepEqual( Stem("interese"), "inter" );
	deepEqual( Stem("interesează"), "interes" );
	deepEqual( Stem("interesele"), "inter" );
	deepEqual( Stem("intereselor"), "inter" );
	deepEqual( Stem("interesez"), "interes" );
	deepEqual( Stem("intereseze"), "interes" );
	deepEqual( Stem("interesul"), "interes" );
	deepEqual( Stem("interesului"), "interes" );
	deepEqual( Stem("interimar"), "interimar" );
	deepEqual( Stem("interioară"), "interioar" );
	deepEqual( Stem("interioare"), "interioar" );
	deepEqual( Stem("interior"), "interior" );
	deepEqual( Stem("interiorizare"), "interioriz" );
	deepEqual( Stem("interiorul"), "interior" );
	deepEqual( Stem("interjecţie"), "interjecţ" );
	deepEqual( Stem("interjecţii"), "interjecţ" );
	deepEqual( Stem("interjecţiile"), "interjecţ" );
	deepEqual( Stem("intermediare"), "intermediar" );
	deepEqual( Stem("intermediu"), "intermediu" );
	deepEqual( Stem("interminabil"), "intermin" );
	deepEqual( Stem("interminabilă"), "intermin" );
	deepEqual( Stem("interminabile"), "intermin" );
	deepEqual( Stem("interminabilul"), "intermin" );
	deepEqual( Stem("intern"), "intern" );
	deepEqual( Stem("internaţi"), "intern" );
	deepEqual( Stem("internaţională"), "internaţional" );
	deepEqual( Stem("internă"), "intern" );
	deepEqual( Stem("interne"), "intern" );
	deepEqual( Stem("interogaţie"), "interog" );
	deepEqual( Stem("interpelat"), "interpel" );
	deepEqual( Stem("interpelează"), "interpel" );
	deepEqual( Stem("interpeleze"), "interpel" );
	deepEqual( Stem("interplanetar"), "interplanetar" );
	deepEqual( Stem("interpretare"), "interpret" );
	deepEqual( Stem("interpretarea"), "interpret" );
	deepEqual( Stem("interpretasem"), "interpret" );
	deepEqual( Stem("interpretat"), "interpret" );
	deepEqual( Stem("interpretate"), "interpret" );
	deepEqual( Stem("interpretând"), "interpret" );
	deepEqual( Stem("interpretându"), "interpret" );
	deepEqual( Stem("interpretăm"), "interpret" );
	deepEqual( Stem("interpretări"), "interpretăr" );
	deepEqual( Stem("interpretările"), "interpretăr" );
	deepEqual( Stem("interpretează"), "interpret" );
	deepEqual( Stem("interpună"), "interpun" );
	deepEqual( Stem("intersecţia"), "intersecţ" );
	deepEqual( Stem("intersecţiunii"), "intersect" );
	deepEqual( Stem("intersecţiunile"), "intersect" );
	deepEqual( Stem("intersecţiunilor"), "intersect" );
	deepEqual( Stem("interurbane"), "interurban" );
	deepEqual( Stem("interval"), "interval" );
	deepEqual( Stem("intervale"), "interval" );
	deepEqual( Stem("intervenea"), "interven" );
	deepEqual( Stem("interveni"), "interven" );
	deepEqual( Stem("intervenim"), "interven" );
	deepEqual( Stem("intervenit"), "interven" );
	deepEqual( Stem("intervenţia"), "intervenţ" );
	deepEqual( Stem("intervenţionist"), "intervenţionist" );
	deepEqual( Stem("intervertesc"), "intervert" );
	deepEqual( Stem("intervertire"), "intervert" );
	deepEqual( Stem("intervertit"), "intervert" );
	deepEqual( Stem("intervin"), "intervin" );
	deepEqual( Stem("intervină"), "intervin" );
	deepEqual( Stem("intervine"), "intervin" );
	deepEqual( Stem("interzice"), "interz" );
	deepEqual( Stem("interzicem"), "interzic" );
	deepEqual( Stem("interzis"), "interzis" );
	deepEqual( Stem("intestine"), "intestin" );
	deepEqual( Stem("intestinelor"), "intestin" );
	deepEqual( Stem("intim"), "intim" );
	deepEqual( Stem("intimă"), "intim" );
	deepEqual( Stem("intime"), "intim" );
	deepEqual( Stem("intimidaseră"), "intimid" );
	deepEqual( Stem("intimidată"), "intimid" );
	deepEqual( Stem("intimidează"), "intimid" );
	deepEqual( Stem("intimitatea"), "intim" );
	deepEqual( Stem("intimităţii"), "intim" );
	deepEqual( Stem("intitulat"), "intitul" );
	deepEqual( Stem("intolerante"), "intoler" );
	deepEqual( Stem("intoleranţa"), "intoleranţ" );
	deepEqual( Stem("intoleranţă"), "intoleranţ" );
	deepEqual( Stem("intonaţie"), "inton" );
	deepEqual( Stem("intonaţii"), "inton" );
	deepEqual( Stem("intonează"), "inton" );
	deepEqual( Stem("intra"), "intra" );
	deepEqual( Stem("intram"), "intram" );
	deepEqual( Stem("intransigenţă"), "intransigenţ" );
	deepEqual( Stem("intrare"), "intrar" );
	deepEqual( Stem("intrarea"), "intrar" );
	deepEqual( Stem("intrat"), "intrat" );
	deepEqual( Stem("intrată"), "intrat" );
	deepEqual( Stem("intraţi"), "intraţ" );
	deepEqual( Stem("intrau"), "intrau" );
	deepEqual( Stem("intrând"), "intrând" );
	deepEqual( Stem("intră"), "intră" );
	deepEqual( Stem("intrăm"), "intrăm" );
	deepEqual( Stem("intrării"), "intrăr" );
	deepEqual( Stem("intrările"), "intrăr" );
	deepEqual( Stem("intre"), "intre" );
	deepEqual( Stem("intrigată"), "intrig" );
	deepEqual( Stem("intrigaţi"), "intrig" );
	deepEqual( Stem("intrigile"), "intrig" );
	deepEqual( Stem("introduc"), "introduc" );
	deepEqual( Stem("introduce"), "introduc" );
	deepEqual( Stem("introducem"), "introduc" );
	deepEqual( Stem("introducere"), "introduc" );
	deepEqual( Stem("introducerea"), "introduc" );
	deepEqual( Stem("introducerii"), "introducer" );
	deepEqual( Stem("introdus"), "introdus" );
	deepEqual( Stem("intru"), "intru" );
	deepEqual( Stem("intrus"), "intrus" );
	deepEqual( Stem("intrusiunea"), "intrusiun" );
	deepEqual( Stem("intrusul"), "intrus" );
	deepEqual( Stem("intrusului"), "intrus" );
	deepEqual( Stem("intruşi"), "intruş" );
	deepEqual( Stem("intruziune"), "intruziun" );
	deepEqual( Stem("intruziuni"), "intruziun" );
	deepEqual( Stem("intui"), "intu" );
	deepEqual( Stem("intuieşte"), "intui" );
	deepEqual( Stem("intuise"), "intuis" );
	deepEqual( Stem("intuit"), "intuit" );
	deepEqual( Stem("intuitiv"), "intuit" );
	deepEqual( Stem("intuitivă"), "intuit" );
	deepEqual( Stem("intuitive"), "intuit" );
	deepEqual( Stem("intuiţia"), "intuiţ" );
	deepEqual( Stem("intuiţie"), "intuiţ" );
	deepEqual( Stem("intuiţiei"), "intu" );
	deepEqual( Stem("intuiţionism"), "intuiţionist" );
	deepEqual( Stem("intuiţionist"), "intuiţionist" );
	deepEqual( Stem("intuiţionistă"), "intuiţionist" );
	deepEqual( Stem("intuiţioniste"), "intuiţionist" );
	deepEqual( Stem("intuiţionişti"), "intuiţionist" );
	deepEqual( Stem("inumană"), "inuman" );
	deepEqual( Stem("inundată"), "inund" );
	deepEqual( Stem("inundaţie"), "inund" );
	deepEqual( Stem("inundaţiei"), "inund" );
	deepEqual( Stem("inutil"), "inutil" );
	deepEqual( Stem("inutilă"), "inutil" );
	deepEqual( Stem("inutile"), "inut" );
	deepEqual( Stem("inutilităţilor"), "inutil" );
	deepEqual( Stem("invariabilităţi"), "invar" );
	deepEqual( Stem("invariabilităţii"), "invar" );
	deepEqual( Stem("inventat"), "invent" );
	deepEqual( Stem("inventată"), "invent" );
	deepEqual( Stem("inventate"), "invent" );
	deepEqual( Stem("inventează"), "invent" );
	deepEqual( Stem("invenţia"), "invenţ" );
	deepEqual( Stem("invenţiile"), "invenţ" );
	deepEqual( Stem("invers"), "invers" );
	deepEqual( Stem("inversă"), "invers" );
	deepEqual( Stem("invidiază"), "invidiaz" );
	deepEqual( Stem("invidie"), "invid" );
	deepEqual( Stem("invit"), "invit" );
	deepEqual( Stem("invita"), "invit" );
	deepEqual( Stem("invitasem"), "invit" );
	deepEqual( Stem("invitat"), "invit" );
	deepEqual( Stem("invitată"), "invit" );
	deepEqual( Stem("invitaţi"), "invit" );
	deepEqual( Stem("invitaţia"), "invit" );
	deepEqual( Stem("invitaţie"), "invit" );
	deepEqual( Stem("invitaţii"), "invit" );
	deepEqual( Stem("invitând"), "invit" );
	deepEqual( Stem("invitându"), "invit" );
	deepEqual( Stem("invită"), "invit" );
	deepEqual( Stem("inviţi"), "inviţ" );
	deepEqual( Stem("invizibile"), "invizib" );
	deepEqual( Stem("invocare"), "invoc" );
	deepEqual( Stem("invocarea"), "invoc" );
	deepEqual( Stem("invocat"), "invoc" );
	deepEqual( Stem("invocate"), "invoc" );
	deepEqual( Stem("invocând"), "invoc" );
	deepEqual( Stem("invocăm"), "invoc" );
	deepEqual( Stem("invocări"), "invocăr" );
	deepEqual( Stem("involuntară"), "involunt" );
	deepEqual( Stem("invulnerabil"), "invulner" );
	deepEqual( Stem("inzister"), "inzister" );
	deepEqual( Stem("ioana"), "ioan" );
	deepEqual( Stem("ioanei"), "ioane" );
	deepEqual( Stem("ion"), "ion" );
	deepEqual( Stem("ionel"), "ionel" );
	deepEqual( Stem("ionescu"), "ionescu" );
	deepEqual( Stem("iorgu"), "iorgu" );
	deepEqual( Stem("iorgulescu"), "iorgulescu" );
	deepEqual( Stem("iosef"), "iosef" );
	deepEqual( Stem("ipocrit"), "ipocr" );
	deepEqual( Stem("ipocrită"), "ipocr" );
	deepEqual( Stem("ipocriţi"), "ipocr" );
	deepEqual( Stem("ipocrizie"), "ipocriz" );
	deepEqual( Stem("ipoteza"), "ipotez" );
	deepEqual( Stem("ipoteză"), "ipotez" );
	deepEqual( Stem("ipoteze"), "ipot" );
	deepEqual( Stem("ipotezele"), "ipot" );
	deepEqual( Stem("iradia"), "irad" );
	deepEqual( Stem("iradiază"), "iradiaz" );
	deepEqual( Stem("iraţional"), "iraţional" );
	deepEqual( Stem("ireale"), "ireal" );
	deepEqual( Stem("irealizabil"), "irealiz" );
	deepEqual( Stem("ireductibil"), "ireduct" );
	deepEqual( Stem("ireductibilă"), "ireduct" );
	deepEqual( Stem("iremediabil"), "iremed" );
	deepEqual( Stem("iremediabilă"), "iremed" );
	deepEqual( Stem("iremediabile"), "iremed" );
	deepEqual( Stem("ireparabilul"), "irepar" );
	deepEqual( Stem("ireproşabilă"), "ireproş" );
	deepEqual( Stem("irevocabilul"), "irevoc" );
	deepEqual( Stem("irezistibil"), "irezist" );
	deepEqual( Stem("irezistibilă"), "irezist" );
	deepEqual( Stem("irigator"), "irig" );
	deepEqual( Stem("irimescu"), "irimescu" );
	deepEqual( Stem("iritabil"), "irit" );
	deepEqual( Stem("iritabilă"), "irit" );
	deepEqual( Stem("iritabili"), "irit" );
	deepEqual( Stem("iritant"), "irit" );
	deepEqual( Stem("iritante"), "irit" );
	deepEqual( Stem("iritată"), "irit" );
	deepEqual( Stem("iritaţia"), "irit" );
	deepEqual( Stem("iritaţie"), "irit" );
	deepEqual( Stem("ironic"), "iron" );
	deepEqual( Stem("ironice"), "iron" );
	deepEqual( Stem("ironici"), "iron" );
	deepEqual( Stem("ironie"), "iron" );
	deepEqual( Stem("ironii"), "iron" );
	deepEqual( Stem("ironiile"), "iron" );
	deepEqual( Stem("ironizată"), "ironiz" );
	deepEqual( Stem("irrtum"), "irrtum" );
	deepEqual( Stem("irumpe"), "irump" );
	deepEqual( Stem("irumpea"), "irump" );
	deepEqual( Stem("iscat"), "iscat" );
	deepEqual( Stem("iscată"), "iscat" );
	deepEqual( Stem("iscând"), "iscând" );
	deepEqual( Stem("iscălea"), "iscăl" );
	deepEqual( Stem("iscălească"), "iscăl" );
	deepEqual( Stem("iscălesc"), "iscăl" );
	deepEqual( Stem("iscăleşte"), "iscăl" );
	deepEqual( Stem("iscăleşti"), "iscăl" );
	deepEqual( Stem("iscoditor"), "iscod" );
	deepEqual( Stem("iscusit"), "iscus" );
	deepEqual( Stem("ison"), "ison" );
	deepEqual( Stem("isoscel"), "isoscel" );
	deepEqual( Stem("ispirescu"), "ispirescu" );
	deepEqual( Stem("ispita"), "ispit" );
	deepEqual( Stem("ispitea"), "ispit" );
	deepEqual( Stem("ispiteşte"), "ispit" );
	deepEqual( Stem("ispitit"), "ispit" );
	deepEqual( Stem("ispititor"), "ispit" );
	deepEqual( Stem("ispitiţi"), "ispit" );
	deepEqual( Stem("ispravă"), "isprav" );
	deepEqual( Stem("isprăvi"), "isprăv" );
	deepEqual( Stem("isprăvile"), "isprăv" );
	deepEqual( Stem("isprăvit"), "isprăv" );
	deepEqual( Stem("isptit"), "isptit" );
	deepEqual( Stem("isterice"), "ister" );
	deepEqual( Stem("isteţe"), "isteţ" );
	deepEqual( Stem("istoria"), "istor" );
	deepEqual( Stem("istoric"), "istor" );
	deepEqual( Stem("istorică"), "istor" );
	deepEqual( Stem("istorice"), "istor" );
	deepEqual( Stem("istoriceşte"), "istoric" );
	deepEqual( Stem("istoricii"), "istor" );
	deepEqual( Stem("istorie"), "istor" );
	deepEqual( Stem("istoriei"), "istor" );
	deepEqual( Stem("istoriile"), "istor" );
	deepEqual( Stem("istorioară"), "istorioar" );
	deepEqual( Stem("istovire"), "istov" );
	deepEqual( Stem("istovirea"), "istov" );
	deepEqual( Stem("istoviri"), "istovir" );
	deepEqual( Stem("istovit"), "istov" );
	deepEqual( Stem("istovită"), "istov" );
	deepEqual( Stem("istovitoare"), "istov" );
	deepEqual( Stem("istovitor"), "istov" );
	deepEqual( Stem("isus"), "isus" );
	deepEqual( Stem("italia"), "ital" );
	deepEqual( Stem("italiei"), "ital" );
	deepEqual( Stem("italieni"), "italien" );
	deepEqual( Stem("italienii"), "italien" );
	deepEqual( Stem("iţari"), "iţar" );
	deepEqual( Stem("iubea"), "iub" );
	deepEqual( Stem("iubeam"), "iubeam" );
	deepEqual( Stem("iubească"), "iubeasc" );
	deepEqual( Stem("iubesc"), "iubesc" );
	deepEqual( Stem("iubeşte"), "iubeşt" );
	deepEqual( Stem("iubeşti"), "iubeşt" );
	deepEqual( Stem("iubi"), "iub" );
	deepEqual( Stem("iubire"), "iubir" );
	deepEqual( Stem("iubirea"), "iubir" );
	deepEqual( Stem("iubiri"), "iubir" );
	deepEqual( Stem("iubirii"), "iubir" );
	deepEqual( Stem("iubirile"), "iubir" );
	deepEqual( Stem("iubise"), "iubis" );
	deepEqual( Stem("iubit"), "iubit" );
	deepEqual( Stem("iubită"), "iubit" );
	deepEqual( Stem("iubite"), "iubit" );
	deepEqual( Stem("iubitori"), "iubit" );
	deepEqual( Stem("iubitorii"), "iubit" );
	deepEqual( Stem("iuda"), "iud" );
	deepEqual( Stem("iulie"), "iul" );
	deepEqual( Stem("iuliu"), "iuliu" );
	deepEqual( Stem("iunie"), "iun" );
	deepEqual( Stem("iureş"), "iureş" );
	deepEqual( Stem("iute"), "iut" );
	deepEqual( Stem("iuţeala"), "iuţeal" );
	deepEqual( Stem("iuţeală"), "iuţeal" );
	deepEqual( Stem("iuţi"), "iuţ" );
	deepEqual( Stem("iveală"), "iveal" );
	deepEqual( Stem("ivesc"), "ivesc" );
	deepEqual( Stem("ivi"), "ivi" );
	deepEqual( Stem("ivit"), "ivit" );
	deepEqual( Stem("iviţi"), "iviţ" );
	deepEqual( Stem("ivoriu"), "ivoriu" );
	deepEqual( Stem("iz"), "iz" );
	deepEqual( Stem("izbânda"), "izbând" );
	deepEqual( Stem("izbândă"), "izbând" );
	deepEqual( Stem("izbândesc"), "izbând" );
	deepEqual( Stem("izbânzile"), "izbânz" );
	deepEqual( Stem("izbăvirea"), "izbăv" );
	deepEqual( Stem("izbăvit"), "izbăv" );
	deepEqual( Stem("izbea"), "izbe" );
	deepEqual( Stem("izbească"), "izbeasc" );
	deepEqual( Stem("izbeau"), "izbeau" );
	deepEqual( Stem("izbelişte"), "izbelişt" );
	deepEqual( Stem("izbesc"), "izbesc" );
	deepEqual( Stem("izbeşte"), "izbeşt" );
	deepEqual( Stem("izbi"), "izbi" );
	deepEqual( Stem("izbind"), "izbind" );
	deepEqual( Stem("izbindu"), "izbindu" );
	deepEqual( Stem("izbit"), "izbit" );
	deepEqual( Stem("izbită"), "izbit" );
	deepEqual( Stem("izbitor"), "izbit" );
	deepEqual( Stem("izbitura"), "izbitur" );
	deepEqual( Stem("izbitură"), "izbit" );
	deepEqual( Stem("izbiturile"), "izbitur" );
	deepEqual( Stem("izbiţi"), "izbiţ" );
	deepEqual( Stem("izbîndă"), "izbînd" );
	deepEqual( Stem("izbîndească"), "izbînd" );
	deepEqual( Stem("izbîndesc"), "izbînd" );
	deepEqual( Stem("izbîndeşte"), "izbînd" );
	deepEqual( Stem("izbîndi"), "izbînd" );
	deepEqual( Stem("izbîndit"), "izbînd" );
	deepEqual( Stem("izbînzi"), "izbînz" );
	deepEqual( Stem("izbucnească"), "izbucn" );
	deepEqual( Stem("izbucnesc"), "izbucn" );
	deepEqual( Stem("izbucneşte"), "izbucn" );
	deepEqual( Stem("izbucni"), "izbucn" );
	deepEqual( Stem("izbucnind"), "izbucn" );
	deepEqual( Stem("izbucnire"), "izbucn" );
	deepEqual( Stem("izbucnirea"), "izbucn" );
	deepEqual( Stem("izbucniri"), "izbucnir" );
	deepEqual( Stem("izbucnirile"), "izbucnir" );
	deepEqual( Stem("izbucnit"), "izbucn" );
	deepEqual( Stem("izbutea"), "izbut" );
	deepEqual( Stem("izbuteam"), "izbut" );
	deepEqual( Stem("izbutească"), "izbut" );
	deepEqual( Stem("izbuteau"), "izbut" );
	deepEqual( Stem("izbutesc"), "izbut" );
	deepEqual( Stem("izbuteşte"), "izbut" );
	deepEqual( Stem("izbuti"), "izbut" );
	deepEqual( Stem("izbutind"), "izbut" );
	deepEqual( Stem("izbutisem"), "izbut" );
	deepEqual( Stem("izbutiseră"), "izbut" );
	deepEqual( Stem("izbutit"), "izbut" );
	deepEqual( Stem("izmană"), "izman" );
	deepEqual( Stem("izmenindu"), "izmen" );
	deepEqual( Stem("izmenit"), "izmen" );
	deepEqual( Stem("izmenite"), "izmen" );
	deepEqual( Stem("izola"), "izol" );
	deepEqual( Stem("izolate"), "izol" );
	deepEqual( Stem("izolaţi"), "izol" );
	deepEqual( Stem("izolări"), "izolăr" );
	deepEqual( Stem("izvoarele"), "izvoar" );
	deepEqual( Stem("izvor"), "izvor" );
	deepEqual( Stem("izvorâtă"), "izvorât" );
	deepEqual( Stem("izvorul"), "izvor" );
	deepEqual( Stem("îi"), "îi" );
	deepEqual( Stem("îl"), "îl" );
	deepEqual( Stem("îmbată"), "îmbat" );
	deepEqual( Stem("îmbătătoare"), "îmbăt" );
	deepEqual( Stem("îmbătrânesc"), "îmbătrân" );
	deepEqual( Stem("îmbătrâni"), "îmbătrân" );
	deepEqual( Stem("îmbătrânire"), "îmbătrân" );
	deepEqual( Stem("îmbătrânit"), "îmbătrân" );
	deepEqual( Stem("îmbătrânită"), "îmbătrân" );
	deepEqual( Stem("îmbelşugat"), "îmbelşug" );
	deepEqual( Stem("îmbelşugată"), "îmbelşug" );
	deepEqual( Stem("îmbia"), "îmbi" );
	deepEqual( Stem("îmbiau"), "îmbiau" );
	deepEqual( Stem("îmbietoare"), "îmbietoar" );
	deepEqual( Stem("îmbinare"), "îmbin" );
	deepEqual( Stem("îmbinări"), "îmbinăr" );
	deepEqual( Stem("îmblânzită"), "îmblânz" );
	deepEqual( Stem("îmbogăţeşte"), "îmbogăţ" );
	deepEqual( Stem("îmbogăţirea"), "îmbogăţ" );
	deepEqual( Stem("îmbogăţit"), "îmbogăţ" );
	deepEqual( Stem("îmbogăţiţi"), "îmbogăţ" );
	deepEqual( Stem("îmboldit"), "îmbold" );
	deepEqual( Stem("îmbolditor"), "îmbold" );
	deepEqual( Stem("îmbolnăvea"), "îmbolnăv" );
	deepEqual( Stem("îmbolnăveau"), "îmbolnăv" );
	deepEqual( Stem("îmbolnăvit"), "îmbolnăv" );
	deepEqual( Stem("îmbrac"), "îmbrac" );
	deepEqual( Stem("îmbracă"), "îmbrac" );
	deepEqual( Stem("îmbrace"), "îmbrac" );
	deepEqual( Stem("îmbrăca"), "îmbrăc" );
	deepEqual( Stem("îmbrăcaserăm"), "îmbrăc" );
	deepEqual( Stem("îmbrăcat"), "îmbrăc" );
	deepEqual( Stem("îmbrăcate"), "îmbrăc" );
	deepEqual( Stem("îmbrăcaţi"), "îmbrăc" );
	deepEqual( Stem("îmbrăcau"), "îmbrăc" );
	deepEqual( Stem("îmbrăcăminte"), "îmbrăcămint" );
	deepEqual( Stem("îmbrăcămintea"), "îmbrăcămint" );
	deepEqual( Stem("îmbrăţişa"), "îmbrăţiş" );
	deepEqual( Stem("îmbrăţişam"), "îmbrăţiş" );
	deepEqual( Stem("îmbrăţişare"), "îmbrăţiş" );
	deepEqual( Stem("îmbrăţişarea"), "îmbrăţiş" );
	deepEqual( Stem("îmbrăţişat"), "îmbrăţiş" );
	deepEqual( Stem("îmbrăţişaţi"), "îmbrăţiş" );
	deepEqual( Stem("îmbrăţişări"), "îmbrăţişăr" );
	deepEqual( Stem("îmbrăţişării"), "îmbrăţişăr" );
	deepEqual( Stem("îmbrăţişează"), "îmbrăţiş" );
	deepEqual( Stem("îmbrăţişez"), "îmbrăţiş" );
	deepEqual( Stem("îmbrăţişeze"), "îmbrăţiş" );
	deepEqual( Stem("îmbucăm"), "îmbuc" );
	deepEqual( Stem("îmbucătăţim"), "îmbucătăţ" );
	deepEqual( Stem("îmbucătăţire"), "îmbucătăţ" );
	deepEqual( Stem("îmbucătăţirea"), "îmbucătăţ" );
	deepEqual( Stem("îmbufnată"), "îmbufn" );
	deepEqual( Stem("îmbufnaţi"), "îmbufn" );
	deepEqual( Stem("îmbulzea"), "îmbulz" );
	deepEqual( Stem("îmi"), "îmi" );
	deepEqual( Stem("împac"), "împac" );
	deepEqual( Stem("împacă"), "împac" );
	deepEqual( Stem("împace"), "împac" );
	deepEqual( Stem("împacheta"), "împachet" );
	deepEqual( Stem("împacheteze"), "împachet" );
	deepEqual( Stem("împaci"), "împac" );
	deepEqual( Stem("împart"), "împart" );
	deepEqual( Stem("împartă"), "împart" );
	deepEqual( Stem("împăca"), "împăc" );
	deepEqual( Stem("împăcare"), "împăc" );
	deepEqual( Stem("împăcarea"), "împăc" );
	deepEqual( Stem("împăcase"), "împăc" );
	deepEqual( Stem("împăcasem"), "împăc" );
	deepEqual( Stem("împăcaseră"), "împăc" );
	deepEqual( Stem("împăcat"), "împăc" );
	deepEqual( Stem("împăcaţi"), "împăc" );
	deepEqual( Stem("împăcăm"), "împăc" );
	deepEqual( Stem("împăcări"), "împăcăr" );
	deepEqual( Stem("împăciuitoare"), "împăciu" );
	deepEqual( Stem("împăciuitor"), "împăciu" );
	deepEqual( Stem("împădurit"), "împădur" );
	deepEqual( Stem("împădurite"), "împădur" );
	deepEqual( Stem("împăiată"), "împăi" );
	deepEqual( Stem("împănată"), "împăn" );
	deepEqual( Stem("împăratul"), "împăr" );
	deepEqual( Stem("împărăţia"), "împărăţ" );
	deepEqual( Stem("împărăţie"), "împărăţ" );
	deepEqual( Stem("împărăţiei"), "împărăţ" );
	deepEqual( Stem("împărăţiile"), "împărăţ" );
	deepEqual( Stem("împărtăşesc"), "împărtăş" );
	deepEqual( Stem("împărtăşirea"), "împărtăş" );
	deepEqual( Stem("împărtăşit"), "împărtăş" );
	deepEqual( Stem("împărţea"), "împărţ" );
	deepEqual( Stem("împărţeala"), "împărţeal" );
	deepEqual( Stem("împărţeam"), "împărţ" );
	deepEqual( Stem("împărţi"), "împărţ" );
	deepEqual( Stem("împărţire"), "împărţ" );
	deepEqual( Stem("împărţirea"), "împărţ" );
	deepEqual( Stem("împărţirii"), "împărţir" );
	deepEqual( Stem("împărţită"), "împărţ" );
	deepEqual( Stem("împărţite"), "împărţ" );
	deepEqual( Stem("împărţiţi"), "împărţ" );
	deepEqual( Stem("împăturit"), "împătur" );
	deepEqual( Stem("împerecheate"), "împerech" );
	deepEqual( Stem("împerechere"), "împerech" );
	deepEqual( Stem("împiedecat"), "împiedec" );
	deepEqual( Stem("împiedica"), "împied" );
	deepEqual( Stem("împiedicat"), "împiedic" );
	deepEqual( Stem("împiedicată"), "împiedic" );
	deepEqual( Stem("împiedică"), "împied" );
	deepEqual( Stem("împiedice"), "împied" );
	deepEqual( Stem("împing"), "împing" );
	deepEqual( Stem("împingă"), "împing" );
	deepEqual( Stem("împinge"), "împing" );
	deepEqual( Stem("împingea"), "împing" );
	deepEqual( Stem("împingem"), "împing" );
	deepEqual( Stem("împingeri"), "împinger" );
	deepEqual( Stem("împins"), "împins" );
	deepEqual( Stem("împinse"), "împin" );
	deepEqual( Stem("împlântaţi"), "împlânt" );
	deepEqual( Stem("împleteau"), "împlet" );
	deepEqual( Stem("împletindu"), "împlet" );
	deepEqual( Stem("împletit"), "împlet" );
	deepEqual( Stem("împletite"), "împlet" );
	deepEqual( Stem("împlinească"), "împlin" );
	deepEqual( Stem("împlinesc"), "împlin" );
	deepEqual( Stem("împlineşte"), "împlin" );
	deepEqual( Stem("împlini"), "împlin" );
	deepEqual( Stem("împlinită"), "împlin" );
	deepEqual( Stem("împodobească"), "împodob" );
	deepEqual( Stem("împodobită"), "împodob" );
	deepEqual( Stem("împotmolesc"), "împotmol" );
	deepEqual( Stem("împotmolit"), "împotmol" );
	deepEqual( Stem("împotriva"), "împotr" );
	deepEqual( Stem("împotrivă"), "împotr" );
	deepEqual( Stem("împotriveşte"), "împotriv" );
	deepEqual( Stem("împotrivire"), "împotriv" );
	deepEqual( Stem("împotrivirii"), "împotrivir" );
	deepEqual( Stem("împrăştiase"), "împrăştias" );
	deepEqual( Stem("împrăştiat"), "împrăşt" );
	deepEqual( Stem("împrăştiate"), "împrăşt" );
	deepEqual( Stem("împrăştiaţi"), "împrăşt" );
	deepEqual( Stem("împrăştie"), "împrăşt" );
	deepEqual( Stem("împrăştiem"), "împrăşt" );
	deepEqual( Stem("împrejur"), "împrejur" );
	deepEqual( Stem("împrejurare"), "împrejur" );
	deepEqual( Stem("împrejurarea"), "împrejur" );
	deepEqual( Stem("împrejurări"), "împrejurăr" );
	deepEqual( Stem("împrejurările"), "împrejurăr" );
	deepEqual( Stem("împrejurimi"), "împrejurim" );
	deepEqual( Stem("împrejurimile"), "împrejurim" );
	deepEqual( Stem("împrejurul"), "împrejur" );
	deepEqual( Stem("împreumă"), "împreum" );
	deepEqual( Stem("împreunare"), "împreun" );
	deepEqual( Stem("împreună"), "împreun" );
	deepEqual( Stem("împrospătat"), "împrospăt" );
	deepEqual( Stem("împrospătează"), "împrospăt" );
	deepEqual( Stem("împrostiţilor"), "împrost" );
	deepEqual( Stem("împrumut"), "împrum" );
	deepEqual( Stem("împrumuta"), "împrum" );
	deepEqual( Stem("împrumutase"), "împrumut" );
	deepEqual( Stem("împrumutată"), "împrumut" );
	deepEqual( Stem("împrumute"), "împrum" );
	deepEqual( Stem("împrumuturi"), "împrumutur" );
	deepEqual( Stem("împungă"), "împung" );
	deepEqual( Stem("împungiţi"), "împung" );
	deepEqual( Stem("împuns"), "împuns" );
	deepEqual( Stem("împunsătură"), "împunsăt" );
	deepEqual( Stem("împurpuraţi"), "împurpur" );
	deepEqual( Stem("împuşc"), "împuşc" );
	deepEqual( Stem("împuşca"), "împuşc" );
	deepEqual( Stem("împuşcare"), "împuşc" );
	deepEqual( Stem("împuşcarea"), "împuşc" );
	deepEqual( Stem("împuşcat"), "împuşc" );
	deepEqual( Stem("împuşcaţi"), "împuşc" );
	deepEqual( Stem("împuşcă"), "împuşc" );
	deepEqual( Stem("împuşte"), "împuşt" );
	deepEqual( Stem("împuşti"), "împuşt" );
	deepEqual( Stem("împuţise"), "împuţ" );
	deepEqual( Stem("în"), "în" );
	deepEqual( Stem("înadins"), "înadins" );
	deepEqual( Stem("înainta"), "înaint" );
	deepEqual( Stem("înaintare"), "înaint" );
	deepEqual( Stem("înaintarea"), "înaint" );
	deepEqual( Stem("înaintat"), "înaint" );
	deepEqual( Stem("înaintată"), "înaint" );
	deepEqual( Stem("înaintaţi"), "înaint" );
	deepEqual( Stem("înaintau"), "înaint" );
	deepEqual( Stem("înaintăm"), "înaint" );
	deepEqual( Stem("înaintărilor"), "înaintăr" );
	deepEqual( Stem("înainte"), "înaint" );
	deepEqual( Stem("înaintea"), "înaint" );
	deepEqual( Stem("înaintează"), "înaint" );
	deepEqual( Stem("înaintez"), "înaint" );
	deepEqual( Stem("înalt"), "înalt" );
	deepEqual( Stem("înaltă"), "înalt" );
	deepEqual( Stem("înalte"), "înalt" );
	deepEqual( Stem("înaltei"), "înalte" );
	deepEqual( Stem("înaltului"), "înalt" );
	deepEqual( Stem("înalţă"), "înalţ" );
	deepEqual( Stem("înalţe"), "înalţ" );
	deepEqual( Stem("înalţi"), "înalţ" );
	deepEqual( Stem("înapoi"), "înapo" );
	deepEqual( Stem("înapoia"), "înapoi" );
	deepEqual( Stem("înapoiaţi"), "înapoi" );
	deepEqual( Stem("înarmarea"), "înarm" );
	deepEqual( Stem("înarmări"), "înarmăr" );
	deepEqual( Stem("înarmării"), "înarmăr" );
	deepEqual( Stem("înarmează"), "înarm" );
	deepEqual( Stem("înăbuşă"), "înăbuş" );
	deepEqual( Stem("înăbuşe"), "înăbuş" );
	deepEqual( Stem("înăbuşi"), "înăb" );
	deepEqual( Stem("înăbuşim"), "înăbuş" );
	deepEqual( Stem("înăbuşirea"), "înăbuş" );
	deepEqual( Stem("înăbuşit"), "înăbuş" );
	deepEqual( Stem("înăbuşiţi"), "înăbuş" );
	deepEqual( Stem("înălbit"), "înălb" );
	deepEqual( Stem("înălţat"), "înălţ" );
	deepEqual( Stem("înălţate"), "înălţ" );
	deepEqual( Stem("înălţatul"), "înălţ" );
	deepEqual( Stem("înălţaţi"), "înălţ" );
	deepEqual( Stem("înălţime"), "înălţim" );
	deepEqual( Stem("înălţimea"), "înălţim" );
	deepEqual( Stem("înălţimii"), "înălţim" );
	deepEqual( Stem("înălţimile"), "înălţim" );
	deepEqual( Stem("înăuntru"), "înăuntru" );
	deepEqual( Stem("înăuntrul"), "înăuntr" );
	deepEqual( Stem("încadrat"), "încadr" );
	deepEqual( Stem("încadrată"), "încadr" );
	deepEqual( Stem("încalce"), "încalc" );
	deepEqual( Stem("încalţă"), "încalţ" );
	deepEqual( Stem("încap"), "încap" );
	deepEqual( Stem("încapacitatea"), "încapac" );
	deepEqual( Stem("încape"), "încap" );
	deepEqual( Stem("încapsulare"), "încapsul" );
	deepEqual( Stem("încapsulării"), "încapsulăr" );
	deepEqual( Stem("încarcă"), "încarc" );
	deepEqual( Stem("încarce"), "încarc" );
	deepEqual( Stem("încarcerat"), "încarcer" );
	deepEqual( Stem("încarcerată"), "încarcer" );
	deepEqual( Stem("încarnare"), "încarn" );
	deepEqual( Stem("încarnat"), "încarn" );
	deepEqual( Stem("încarnată"), "încarn" );
	deepEqual( Stem("încarnări"), "încarnăr" );
	deepEqual( Stem("încarnează"), "încarn" );
	deepEqual( Stem("încasare"), "încas" );
	deepEqual( Stem("încasat"), "încas" );
	deepEqual( Stem("încasăm"), "încas" );
	deepEqual( Stem("încâlcite"), "încâlc" );
	deepEqual( Stem("încântat"), "încânt" );
	deepEqual( Stem("încântată"), "încânt" );
	deepEqual( Stem("încântaţi"), "încânt" );
	deepEqual( Stem("încântă"), "încânt" );
	deepEqual( Stem("încântătoare"), "încânt" );
	deepEqual( Stem("încât"), "încât" );
	deepEqual( Stem("încă"), "încă" );
	deepEqual( Stem("încăierare"), "încăier" );
	deepEqual( Stem("încăierări"), "încăierăr" );
	deepEqual( Stem("încălcat"), "încălc" );
	deepEqual( Stem("încălcau"), "încălc" );
	deepEqual( Stem("încălcînd"), "încălcînd" );
	deepEqual( Stem("încăleca"), "încălec" );
	deepEqual( Stem("încălecate"), "încălec" );
	deepEqual( Stem("încălecării"), "încălecăr" );
	deepEqual( Stem("încălecînd"), "încălecînd" );
	deepEqual( Stem("încălţa"), "încălţ" );
	deepEqual( Stem("încălţarea"), "încălţ" );
	deepEqual( Stem("încălţat"), "încălţ" );
	deepEqual( Stem("încălţămintea"), "încălţămint" );
	deepEqual( Stem("încălzea"), "încălz" );
	deepEqual( Stem("încălzească"), "încălz" );
	deepEqual( Stem("încălzesc"), "încălz" );
	deepEqual( Stem("încălzeşte"), "încălz" );
	deepEqual( Stem("încălzim"), "încălz" );
	deepEqual( Stem("încălzire"), "încălz" );
	deepEqual( Stem("încălzirii"), "încălzir" );
	deepEqual( Stem("încălzit"), "încălz" );
	deepEqual( Stem("încălzită"), "încălz" );
	deepEqual( Stem("încălzitul"), "încălz" );
	deepEqual( Stem("încălziţi"), "încălz" );
	deepEqual( Stem("încăpătoare"), "încăp" );
	deepEqual( Stem("încăpător"), "încăp" );
	deepEqual( Stem("încăpăţânare"), "încăpăţân" );
	deepEqual( Stem("încăpăţânarea"), "încăpăţân" );
	deepEqual( Stem("încăpăţânat"), "încăpăţân" );
	deepEqual( Stem("încăpăţânaţi"), "încăpăţân" );
	deepEqual( Stem("încăpăţîna"), "încăpăţîn" );
	deepEqual( Stem("încăpăţînare"), "încăpăţîn" );
	deepEqual( Stem("încăpăţînează"), "încăpăţîn" );
	deepEqual( Stem("încăpea"), "încăp" );
	deepEqual( Stem("încăpeau"), "încăp" );
	deepEqual( Stem("încăpere"), "încăp" );
	deepEqual( Stem("încăperea"), "încăp" );
	deepEqual( Stem("încăperi"), "încăper" );
	deepEqual( Stem("încăput"), "încăp" );
	deepEqual( Stem("încăpută"), "încăp" );
	deepEqual( Stem("încărca"), "încărc" );
	deepEqual( Stem("încărcare"), "încărc" );
	deepEqual( Stem("încărcarea"), "încărc" );
	deepEqual( Stem("încărcat"), "încărc" );
	deepEqual( Stem("încărcată"), "încărc" );
	deepEqual( Stem("încărcate"), "încărc" );
	deepEqual( Stem("încărcăm"), "încărc" );
	deepEqual( Stem("încărcării"), "încărcăr" );
	deepEqual( Stem("încărcătoare"), "încărc" );
	deepEqual( Stem("încărcător"), "încărc" );
	deepEqual( Stem("încărcătura"), "încărcătur" );
	deepEqual( Stem("încărcătură"), "încărcăt" );
	deepEqual( Stem("încărcături"), "încărcătur" );
	deepEqual( Stem("încărcînd"), "încărcînd" );
	deepEqual( Stem("încărunţită"), "încărunţ" );
	deepEqual( Stem("înceapă"), "înceap" );
	deepEqual( Stem("încearcă"), "încearc" );
	deepEqual( Stem("înceată"), "înceat" );
	deepEqual( Stem("încenuşarea"), "încenuş" );
	deepEqual( Stem("încenuşează"), "încenuş" );
	deepEqual( Stem("încenuşeze"), "încenuş" );
	deepEqual( Stem("încep"), "încep" );
	deepEqual( Stem("începând"), "încep" );
	deepEqual( Stem("începe"), "încep" );
	deepEqual( Stem("începea"), "încep" );
	deepEqual( Stem("începeam"), "încep" );
	deepEqual( Stem("începeau"), "încep" );
	deepEqual( Stem("începem"), "încep" );
	deepEqual( Stem("începere"), "încep" );
	deepEqual( Stem("începerea"), "încep" );
	deepEqual( Stem("începi"), "încep" );
	deepEqual( Stem("începu"), "începu" );
	deepEqual( Stem("începuse"), "încep" );
	deepEqual( Stem("începusem"), "încep" );
	deepEqual( Stem("începuseră"), "încep" );
	deepEqual( Stem("început"), "încep" );
	deepEqual( Stem("începută"), "încep" );
	deepEqual( Stem("începute"), "încep" );
	deepEqual( Stem("începutul"), "încep" );
	deepEqual( Stem("începuturile"), "începutur" );
	deepEqual( Stem("încerc"), "încerc" );
	deepEqual( Stem("încerca"), "încerc" );
	deepEqual( Stem("încercam"), "încerc" );
	deepEqual( Stem("încercare"), "încerc" );
	deepEqual( Stem("încercarea"), "încerc" );
	deepEqual( Stem("încercase"), "încerc" );
	deepEqual( Stem("încercasem"), "încerc" );
	deepEqual( Stem("încercat"), "încerc" );
	deepEqual( Stem("încercată"), "încerc" );
	deepEqual( Stem("încercaţi"), "încerc" );
	deepEqual( Stem("încercau"), "încerc" );
	deepEqual( Stem("încercând"), "încerc" );
	deepEqual( Stem("încercăm"), "încerc" );
	deepEqual( Stem("încercări"), "încercăr" );
	deepEqual( Stem("încercările"), "încercăr" );
	deepEqual( Stem("încerci"), "încerc" );
	deepEqual( Stem("încercuiască"), "încercuiasc" );
	deepEqual( Stem("încercuiesc"), "încercui" );
	deepEqual( Stem("încercuim"), "încercu" );
	deepEqual( Stem("încercuire"), "încercu" );
	deepEqual( Stem("încercuirea"), "încercu" );
	deepEqual( Stem("încercuiri"), "încercuir" );
	deepEqual( Stem("încercuit"), "încercu" );
	deepEqual( Stem("încet"), "încet" );
	deepEqual( Stem("încete"), "încet" );
	deepEqual( Stem("încetează"), "încet" );
	deepEqual( Stem("înceteze"), "încet" );
	deepEqual( Stem("încetineală"), "încetineal" );
	deepEqual( Stem("încetul"), "încet" );
	deepEqual( Stem("încheagă"), "încheag" );
	deepEqual( Stem("închegare"), "încheg" );
	deepEqual( Stem("închegat"), "încheg" );
	deepEqual( Stem("închegate"), "încheg" );
	deepEqual( Stem("închei"), "înche" );
	deepEqual( Stem("încheia"), "închei" );
	deepEqual( Stem("încheiam"), "închei" );
	deepEqual( Stem("încheiat"), "închei" );
	deepEqual( Stem("încheiate"), "închei" );
	deepEqual( Stem("încheie"), "închei" );
	deepEqual( Stem("încheiere"), "închei" );
	deepEqual( Stem("încheierea"), "închei" );
	deepEqual( Stem("încheieri"), "încheier" );
	deepEqual( Stem("încheietura"), "încheietur" );
	deepEqual( Stem("închid"), "închid" );
	deepEqual( Stem("închidă"), "închid" );
	deepEqual( Stem("închide"), "închid" );
	deepEqual( Stem("închidem"), "închid" );
	deepEqual( Stem("închiderea"), "închid" );
	deepEqual( Stem("închin"), "închin" );
	deepEqual( Stem("închina"), "închin" );
	deepEqual( Stem("închinare"), "închin" );
	deepEqual( Stem("închinat"), "închin" );
	deepEqual( Stem("închinată"), "închin" );
	deepEqual( Stem("închinându"), "închin" );
	deepEqual( Stem("închină"), "închin" );
	deepEqual( Stem("închipui"), "închip" );
	deepEqual( Stem("închipuiam"), "închipui" );
	deepEqual( Stem("închipuie"), "închipui" );
	deepEqual( Stem("închipuiesc"), "închipui" );
	deepEqual( Stem("închipuieşte"), "închipui" );
	deepEqual( Stem("închipuim"), "închipu" );
	deepEqual( Stem("închipuire"), "închipu" );
	deepEqual( Stem("închipuiri"), "închipuir" );
	deepEqual( Stem("închipuit"), "închipu" );
	deepEqual( Stem("închipuită"), "închipu" );
	deepEqual( Stem("închipuiţi"), "închipu" );
	deepEqual( Stem("închircite"), "închirc" );
	deepEqual( Stem("închiriasem"), "închiriasem" );
	deepEqual( Stem("închiriat"), "închir" );
	deepEqual( Stem("închis"), "închis" );
	deepEqual( Stem("închisă"), "închis" );
	deepEqual( Stem("închise"), "închi" );
	deepEqual( Stem("închisoare"), "închisoar" );
	deepEqual( Stem("închisorii"), "închisor" );
	deepEqual( Stem("închişi"), "închiş" );
	deepEqual( Stem("încingă"), "încing" );
	deepEqual( Stem("încinge"), "încing" );
	deepEqual( Stem("încins"), "încins" );
	deepEqual( Stem("încinsă"), "încins" );
	deepEqual( Stem("încleştare"), "încleşt" );
	deepEqual( Stem("încleştasem"), "încleşt" );
	deepEqual( Stem("încleştaseră"), "încleşt" );
	deepEqual( Stem("încleştat"), "încleşt" );
	deepEqual( Stem("încleştaţi"), "încleşt" );
	deepEqual( Stem("încleştează"), "încleşt" );
	deepEqual( Stem("încleştez"), "încleşt" );
	deepEqual( Stem("încleştezi"), "încleşt" );
	deepEqual( Stem("înclinat"), "înclin" );
	deepEqual( Stem("înclinată"), "înclin" );
	deepEqual( Stem("înclinaţi"), "înclin" );
	deepEqual( Stem("înclinările"), "înclinăr" );
	deepEqual( Stem("încoa"), "înco" );
	deepEqual( Stem("încoace"), "încoac" );
	deepEqual( Stem("încocârjaţi"), "încocârj" );
	deepEqual( Stem("încolăcirea"), "încolăc" );
	deepEqual( Stem("încolăcită"), "încolăc" );
	deepEqual( Stem("încolăcite"), "încolăc" );
	deepEqual( Stem("încolo"), "încolo" );
	deepEqual( Stem("încolonare"), "încolon" );
	deepEqual( Stem("încolonase"), "încolon" );
	deepEqual( Stem("încolonat"), "încolon" );
	deepEqual( Stem("încolonaţi"), "încolon" );
	deepEqual( Stem("încolonăm"), "încolon" );
	deepEqual( Stem("încolonează"), "încolon" );
	deepEqual( Stem("încondeiază"), "încondeiaz" );
	deepEqual( Stem("înconjoară"), "înconjoar" );
	deepEqual( Stem("înconjoare"), "înconjoar" );
	deepEqual( Stem("înconjur"), "înconjur" );
	deepEqual( Stem("înconjura"), "înconjur" );
	deepEqual( Stem("înconjurase"), "înconjur" );
	deepEqual( Stem("înconjurat"), "înconjur" );
	deepEqual( Stem("înconjurată"), "înconjur" );
	deepEqual( Stem("înconjuraţi"), "înconjur" );
	deepEqual( Stem("înconjurătoare"), "înconjur" );
	deepEqual( Stem("înconjure"), "înconjur" );
	deepEqual( Stem("înconjuri"), "înconjur" );
	deepEqual( Stem("încontinuu"), "încontinuu" );
	deepEqual( Stem("încordare"), "încord" );
	deepEqual( Stem("încordează"), "încord" );
	deepEqual( Stem("încornorat"), "încornor" );
	deepEqual( Stem("încorporat"), "încorpor" );
	deepEqual( Stem("încorporării"), "încorporăr" );
	deepEqual( Stem("încotro"), "încotro" );
	deepEqual( Stem("încredere"), "încred" );
	deepEqual( Stem("încrederea"), "încred" );
	deepEqual( Stem("încrederi"), "încreder" );
	deepEqual( Stem("încredinţam"), "încredinţ" );
	deepEqual( Stem("încredinţat"), "încredinţ" );
	deepEqual( Stem("încredinţate"), "încredinţ" );
	deepEqual( Stem("încredinţăm"), "încredinţ" );
	deepEqual( Stem("încremenesc"), "încremen" );
	deepEqual( Stem("încremeneşte"), "încremen" );
	deepEqual( Stem("încremenim"), "încremen" );
	deepEqual( Stem("încremenind"), "încremen" );
	deepEqual( Stem("încremeniri"), "încremenir" );
	deepEqual( Stem("încremenirii"), "încremenir" );
	deepEqual( Stem("încremenit"), "încremen" );
	deepEqual( Stem("încremenită"), "încremen" );
	deepEqual( Stem("încremeniţi"), "încremen" );
	deepEqual( Stem("încreţeşte"), "încreţ" );
	deepEqual( Stem("încrezut"), "încrez" );
	deepEqual( Stem("încrucişate"), "încruciş" );
	deepEqual( Stem("încrucişându"), "încruciş" );
	deepEqual( Stem("încrucişări"), "încrucişăr" );
	deepEqual( Stem("încrunt"), "încrunt" );
	deepEqual( Stem("încruntare"), "încrunt" );
	deepEqual( Stem("încruntat"), "încrunt" );
	deepEqual( Stem("încruntaţi"), "încrunt" );
	deepEqual( Stem("încruntă"), "încrunt" );
	deepEqual( Stem("încrustată"), "încrust" );
	deepEqual( Stem("încuie"), "încui" );
	deepEqual( Stem("încunoştinţez"), "încunoştinţ" );
	deepEqual( Stem("încununat"), "încunun" );
	deepEqual( Stem("încuraja"), "încuraj" );
	deepEqual( Stem("încurajează"), "încuraj" );
	deepEqual( Stem("încurajeze"), "încuraj" );
	deepEqual( Stem("încurc"), "încurc" );
	deepEqual( Stem("încurcase"), "încurc" );
	deepEqual( Stem("încurcat"), "încurc" );
	deepEqual( Stem("încurcată"), "încurc" );
	deepEqual( Stem("încurcaţi"), "încurc" );
	deepEqual( Stem("încurcându"), "încurc" );
	deepEqual( Stem("încurcă"), "încurc" );
	deepEqual( Stem("încurcăm"), "încurc" );
	deepEqual( Stem("încurcătură"), "încurcăt" );
	deepEqual( Stem("încurcăturile"), "încurcătur" );
	deepEqual( Stem("îndată"), "îndat" );
	deepEqual( Stem("îndatorat"), "îndator" );
	deepEqual( Stem("îndatorire"), "îndator" );
	deepEqual( Stem("îndârjeşte"), "îndârj" );
	deepEqual( Stem("îndârjire"), "îndârj" );
	deepEqual( Stem("îndârjirea"), "îndârj" );
	deepEqual( Stem("îndârjit"), "îndârj" );
	deepEqual( Stem("îndârjită"), "îndârj" );
	deepEqual( Stem("îndârjiţi"), "îndârj" );
	deepEqual( Stem("îndărăt"), "îndărăt" );
	deepEqual( Stem("îndărătnic"), "îndărătn" );
	deepEqual( Stem("îndărătnică"), "îndărătn" );
	deepEqual( Stem("îndărătnice"), "îndărătn" );
	deepEqual( Stem("îndărătnicia"), "îndărătnic" );
	deepEqual( Stem("îndeamnă"), "îndeamn" );
	deepEqual( Stem("îndeletnicesc"), "îndeletnic" );
	deepEqual( Stem("îndelung"), "îndelung" );
	deepEqual( Stem("îndelungat"), "îndelung" );
	deepEqual( Stem("îndelungată"), "îndelung" );
	deepEqual( Stem("îndelungate"), "îndelung" );
	deepEqual( Stem("îndelungaţi"), "îndelung" );
	deepEqual( Stem("îndelungă"), "îndelung" );
	deepEqual( Stem("îndelungi"), "îndelung" );
	deepEqual( Stem("îndemâna"), "îndemân" );
	deepEqual( Stem("îndemână"), "îndemân" );
	deepEqual( Stem("îndemîna"), "îndemîn" );
	deepEqual( Stem("îndemînă"), "îndemîn" );
	deepEqual( Stem("îndemn"), "îndemn" );
	deepEqual( Stem("îndemna"), "îndemn" );
	deepEqual( Stem("îndemnase"), "îndemn" );
	deepEqual( Stem("îndemnat"), "îndemn" );
	deepEqual( Stem("îndemnaţi"), "îndemn" );
	deepEqual( Stem("îndemne"), "îndemn" );
	deepEqual( Stem("îndemnul"), "îndemn" );
	deepEqual( Stem("îndemnuri"), "îndemnur" );
	deepEqual( Stem("îndeobşte"), "îndeobşt" );
	deepEqual( Stem("îndeosebi"), "îndeoseb" );
	deepEqual( Stem("îndepărta"), "îndepărt" );
	deepEqual( Stem("îndepărtare"), "îndepărt" );
	deepEqual( Stem("îndepărtat"), "îndepărt" );
	deepEqual( Stem("îndepărtată"), "îndepărt" );
	deepEqual( Stem("îndepărtate"), "îndepărt" );
	deepEqual( Stem("îndepărtăm"), "îndepărt" );
	deepEqual( Stem("îndepărtează"), "îndepărt" );
	deepEqual( Stem("îndepărtezi"), "îndepărt" );
	deepEqual( Stem("îndeplinea"), "îndeplin" );
	deepEqual( Stem("îndeplinească"), "îndeplin" );
	deepEqual( Stem("îndeplinesc"), "îndeplin" );
	deepEqual( Stem("îndeplineşte"), "îndeplin" );
	deepEqual( Stem("îndeplinim"), "îndeplin" );
	deepEqual( Stem("îndeplinită"), "îndeplin" );
	deepEqual( Stem("îndesat"), "îndes" );
	deepEqual( Stem("îndesate"), "îndes" );
	deepEqual( Stem("îndestul"), "îndest" );
	deepEqual( Stem("îndestulă"), "îndestul" );
	deepEqual( Stem("îndestulării"), "îndestulăr" );
	deepEqual( Stem("îndiguire"), "îndigu" );
	deepEqual( Stem("îndoaie"), "îndoai" );
	deepEqual( Stem("îndoi"), "îndo" );
	deepEqual( Stem("îndoiala"), "îndoial" );
	deepEqual( Stem("îndoială"), "îndoial" );
	deepEqual( Stem("îndoiam"), "îndoi" );
	deepEqual( Stem("îndoiască"), "îndoiasc" );
	deepEqual( Stem("îndoieli"), "îndoiel" );
	deepEqual( Stem("îndoielile"), "îndoiel" );
	deepEqual( Stem("îndoielilor"), "îndoiel" );
	deepEqual( Stem("îndoielnice"), "îndoieln" );
	deepEqual( Stem("îndoiesc"), "îndoi" );
	deepEqual( Stem("îndoieşte"), "îndoi" );
	deepEqual( Stem("îndoieşti"), "îndoi" );
	deepEqual( Stem("îndoind"), "îndoind" );
	deepEqual( Stem("îndoit"), "îndoit" );
	deepEqual( Stem("îndoită"), "îndoit" );
	deepEqual( Stem("îndoite"), "îndoit" );
	deepEqual( Stem("îndoliate"), "îndol" );
	deepEqual( Stem("îndoliaţi"), "îndol" );
	deepEqual( Stem("îndrăcită"), "îndrăc" );
	deepEqual( Stem("îndrăgosteşte"), "îndrăgost" );
	deepEqual( Stem("îndrăgostit"), "îndrăgost" );
	deepEqual( Stem("îndrăgostită"), "îndrăgost" );
	deepEqual( Stem("îndrăzneala"), "îndrăzneal" );
	deepEqual( Stem("îndrăzneală"), "îndrăzneal" );
	deepEqual( Stem("îndrăznească"), "îndrăzn" );
	deepEqual( Stem("îndrăzneaţă"), "îndrăzneaţ" );
	deepEqual( Stem("îndrăznesc"), "îndrăzn" );
	deepEqual( Stem("îndrăzneşti"), "îndrăzn" );
	deepEqual( Stem("îndrăznim"), "îndrăzn" );
	deepEqual( Stem("îndreaptă"), "îndreapt" );
	deepEqual( Stem("îndrept"), "îndrept" );
	deepEqual( Stem("îndrepta"), "îndrept" );
	deepEqual( Stem("îndreptat"), "îndrept" );
	deepEqual( Stem("îndreptate"), "îndrept" );
	deepEqual( Stem("îndreptări"), "îndreptăr" );
	deepEqual( Stem("îndreptăţească"), "îndreptăţ" );
	deepEqual( Stem("îndreptăţesc"), "îndreptăţ" );
	deepEqual( Stem("îndreptăţeşte"), "îndreptăţ" );
	deepEqual( Stem("îndreptăţire"), "îndreptăţ" );
	deepEqual( Stem("îndreptăţirea"), "îndreptăţ" );
	deepEqual( Stem("îndreptăţirei"), "îndreptăţire" );
	deepEqual( Stem("îndreptăţit"), "îndreptăţ" );
	deepEqual( Stem("îndreptăţită"), "îndreptăţ" );
	deepEqual( Stem("îndrepte"), "îndrept" );
	deepEqual( Stem("înduioşase"), "înduioş" );
	deepEqual( Stem("înduioşat"), "înduioş" );
	deepEqual( Stem("înduioşată"), "înduioş" );
	deepEqual( Stem("înduioşate"), "înduioş" );
	deepEqual( Stem("înduioşaţi"), "înduioş" );
	deepEqual( Stem("înduioşătoare"), "înduioş" );
	deepEqual( Stem("înduioşează"), "înduioş" );
	deepEqual( Stem("înduioşeze"), "înduioş" );
	deepEqual( Stem("îndulcită"), "îndulc" );
	deepEqual( Stem("îndulcite"), "îndulc" );
	deepEqual( Stem("înduplecaţi"), "înduplec" );
	deepEqual( Stem("îndur"), "îndur" );
	deepEqual( Stem("îndura"), "îndur" );
	deepEqual( Stem("înduram"), "îndur" );
	deepEqual( Stem("îndurat"), "îndur" );
	deepEqual( Stem("îndurau"), "îndur" );
	deepEqual( Stem("îndură"), "îndur" );
	deepEqual( Stem("îndure"), "îndur" );
	deepEqual( Stem("îndurerat"), "îndurer" );
	deepEqual( Stem("îndurerată"), "îndurer" );
	deepEqual( Stem("îndureraţi"), "îndurer" );
	deepEqual( Stem("înduşmănit"), "înduşmăn" );
	deepEqual( Stem("înece"), "înec" );
	deepEqual( Stem("îneci"), "înec" );
	deepEqual( Stem("înfăptuită"), "înfăptu" );
	deepEqual( Stem("înfăşat"), "înfăş" );
	deepEqual( Stem("înfăşaţi"), "înfăş" );
	deepEqual( Stem("înfăşur"), "înfăşur" );
	deepEqual( Stem("înfăşurat"), "înfăşur" );
	deepEqual( Stem("înfăţişa"), "înfăţiş" );
	deepEqual( Stem("înfăţişară"), "înfăţiş" );
	deepEqual( Stem("înfăţişare"), "înfăţiş" );
	deepEqual( Stem("înfăţişată"), "înfăţiş" );
	deepEqual( Stem("înfăţişaţi"), "înfăţiş" );
	deepEqual( Stem("înfăţişăm"), "înfăţiş" );
	deepEqual( Stem("înfăţişează"), "înfăţiş" );
	deepEqual( Stem("înfierbântat"), "înfierbânt" );
	deepEqual( Stem("înfierbântaţi"), "înfierbânt" );
	deepEqual( Stem("înfig"), "înfig" );
	deepEqual( Stem("înfigându"), "înfig" );
	deepEqual( Stem("înfigă"), "înfig" );
	deepEqual( Stem("înfige"), "înfig" );
	deepEqual( Stem("înfiorat"), "înfior" );
	deepEqual( Stem("înfiorată"), "înfior" );
	deepEqual( Stem("înfioraţi"), "înfior" );
	deepEqual( Stem("înfiorau"), "înfior" );
	deepEqual( Stem("înfiorătoare"), "înfior" );
	deepEqual( Stem("înfipt"), "înfipt" );
	deepEqual( Stem("înfipte"), "înfipt" );
	deepEqual( Stem("înfipţi"), "înfipţ" );
	deepEqual( Stem("înfiripat"), "înfirip" );
	deepEqual( Stem("înflăcărare"), "înflăcăr" );
	deepEqual( Stem("înflăcărat"), "înflăcăr" );
	deepEqual( Stem("înflăcărată"), "înflăcăr" );
	deepEqual( Stem("înflăcărează"), "înflăcăr" );
	deepEqual( Stem("înflorată"), "înflor" );
	deepEqual( Stem("înflorea"), "înflor" );
	deepEqual( Stem("înflorească"), "înflor" );
	deepEqual( Stem("înfloresc"), "înflor" );
	deepEqual( Stem("înfloreşte"), "înflor" );
	deepEqual( Stem("înflori"), "înflor" );
	deepEqual( Stem("înflorire"), "înflor" );
	deepEqual( Stem("înflorirea"), "înflor" );
	deepEqual( Stem("înflorise"), "înflor" );
	deepEqual( Stem("înflorit"), "înflor" );
	deepEqual( Stem("înflorită"), "înflor" );
	deepEqual( Stem("înflorite"), "înflor" );
	deepEqual( Stem("înfloritoare"), "înflor" );
	deepEqual( Stem("înflorituri"), "înfloritur" );
	deepEqual( Stem("înfrânările"), "înfrânăr" );
	deepEqual( Stem("înfrâng"), "înfrâng" );
	deepEqual( Stem("înfrângere"), "înfrâng" );
	deepEqual( Stem("înfrângerea"), "înfrâng" );
	deepEqual( Stem("înfrângerile"), "înfrânger" );
	deepEqual( Stem("înfrânt"), "înfrânt" );
	deepEqual( Stem("înfrânţi"), "înfrânţ" );
	deepEqual( Stem("înfricoşat"), "înfricoş" );
	deepEqual( Stem("înfrigurarea"), "înfrigur" );
	deepEqual( Stem("înfrigurat"), "înfrigur" );
	deepEqual( Stem("înfrumuseţa"), "înfrumuseţ" );
	deepEqual( Stem("înfrumuseţeze"), "înfrumuseţ" );
	deepEqual( Stem("înfundaseră"), "înfund" );
	deepEqual( Stem("înfundat"), "înfund" );
	deepEqual( Stem("înfundată"), "înfund" );
	deepEqual( Stem("înfundate"), "înfund" );
	deepEqual( Stem("înfuriat"), "înfur" );
	deepEqual( Stem("înfuriată"), "înfur" );
	deepEqual( Stem("înfurie"), "înfur" );
	deepEqual( Stem("îngâmfare"), "îngâmf" );
	deepEqual( Stem("îngâmfat"), "îngâmf" );
	deepEqual( Stem("îngânându"), "îngân" );
	deepEqual( Stem("îngândurat"), "îngândur" );
	deepEqual( Stem("îngândurată"), "îngândur" );
	deepEqual( Stem("îngăduie"), "îngădui" );
	deepEqual( Stem("îngăduinţa"), "îngăduinţ" );
	deepEqual( Stem("îngăduinţă"), "îngăduinţ" );
	deepEqual( Stem("îngăduit"), "îngădu" );
	deepEqual( Stem("îngăduite"), "îngădu" );
	deepEqual( Stem("îngăduitoare"), "îngădu" );
	deepEqual( Stem("îngăduitor"), "îngădu" );
	deepEqual( Stem("îngălbenite"), "îngălben" );
	deepEqual( Stem("îngenuncheat"), "îngenunch" );
	deepEqual( Stem("înger"), "înger" );
	deepEqual( Stem("îngeraş"), "îngeraş" );
	deepEqual( Stem("îngeri"), "înger" );
	deepEqual( Stem("îngerii"), "înger" );
	deepEqual( Stem("îngheaţă"), "îngheaţ" );
	deepEqual( Stem("înghesui"), "înghes" );
	deepEqual( Stem("înghesuia"), "înghesui" );
	deepEqual( Stem("înghesuiala"), "înghesuial" );
	deepEqual( Stem("înghesuiau"), "înghesui" );
	deepEqual( Stem("înghesuim"), "înghesu" );
	deepEqual( Stem("înghesuirea"), "înghesu" );
	deepEqual( Stem("înghesuit"), "înghesu" );
	deepEqual( Stem("înghesuiţi"), "înghesu" );
	deepEqual( Stem("îngheţ"), "îngheţ" );
	deepEqual( Stem("îngheţat"), "îngheţ" );
	deepEqual( Stem("îngheţată"), "îngheţ" );
	deepEqual( Stem("îngheţate"), "îngheţ" );
	deepEqual( Stem("înghit"), "înghit" );
	deepEqual( Stem("înghită"), "înghit" );
	deepEqual( Stem("înghite"), "înghit" );
	deepEqual( Stem("înghiţit"), "înghiţ" );
	deepEqual( Stem("înghiţita"), "înghiţ" );
	deepEqual( Stem("îngloba"), "înglob" );
	deepEqual( Stem("înglobare"), "înglob" );
	deepEqual( Stem("înglobarea"), "înglob" );
	deepEqual( Stem("înglobat"), "înglob" );
	deepEqual( Stem("înglobându"), "înglob" );
	deepEqual( Stem("înglobăm"), "înglob" );
	deepEqual( Stem("înglobării"), "înglobăr" );
	deepEqual( Stem("înglobează"), "înglob" );
	deepEqual( Stem("îngrădite"), "îngrăd" );
	deepEqual( Stem("îngrămădea"), "îngrămăd" );
	deepEqual( Stem("îngrămădească"), "îngrămăd" );
	deepEqual( Stem("îngrămădiseră"), "îngrămăd" );
	deepEqual( Stem("îngrămădite"), "îngrămăd" );
	deepEqual( Stem("îngrămădiţi"), "îngrămăd" );
	deepEqual( Stem("îngrăşa"), "îngrăş" );
	deepEqual( Stem("îngrăşare"), "îngrăş" );
	deepEqual( Stem("îngrăşat"), "îngrăş" );
	deepEqual( Stem("îngrăşăminte"), "îngrăşămint" );
	deepEqual( Stem("îngreuia"), "îngreu" );
	deepEqual( Stem("îngreuiază"), "îngreuiaz" );
	deepEqual( Stem("îngreuind"), "îngreu" );
	deepEqual( Stem("îngreunau"), "îngreun" );
	deepEqual( Stem("îngrijea"), "îngrij" );
	deepEqual( Stem("îngrijească"), "îngrij" );
	deepEqual( Stem("îngrijesc"), "îngrij" );
	deepEqual( Stem("îngrijeşte"), "îngrij" );
	deepEqual( Stem("îngriji"), "îngrij" );
	deepEqual( Stem("îngrijirea"), "îngrij" );
	deepEqual( Stem("îngrijit"), "îngrij" );
	deepEqual( Stem("îngrijită"), "îngrij" );
	deepEqual( Stem("îngrijiţi"), "îngrij" );
	deepEqual( Stem("îngrijora"), "îngrijor" );
	deepEqual( Stem("îngrijorare"), "îngrijor" );
	deepEqual( Stem("îngrijorarea"), "îngrijor" );
	deepEqual( Stem("îngrijorat"), "îngrijor" );
	deepEqual( Stem("îngrijorată"), "îngrijor" );
	deepEqual( Stem("îngrijorate"), "îngrijor" );
	deepEqual( Stem("îngrijoraţi"), "îngrijor" );
	deepEqual( Stem("îngrijorării"), "îngrijorăr" );
	deepEqual( Stem("îngrijorătoare"), "îngrijor" );
	deepEqual( Stem("îngrijorător"), "îngrijor" );
	deepEqual( Stem("îngrijorează"), "îngrijor" );
	deepEqual( Stem("îngrijoreze"), "îngrijor" );
	deepEqual( Stem("îngroapă"), "îngroap" );
	deepEqual( Stem("îngroaşă"), "îngroaş" );
	deepEqual( Stem("îngroaşe"), "îngroaş" );
	deepEqual( Stem("îngropat"), "îngrop" );
	deepEqual( Stem("îngropaţi"), "îngrop" );
	deepEqual( Stem("îngropându"), "îngrop" );
	deepEqual( Stem("îngroşare"), "îngroş" );
	deepEqual( Stem("îngrozea"), "îngroz" );
	deepEqual( Stem("îngrozesc"), "îngroz" );
	deepEqual( Stem("îngrozeşte"), "îngroz" );
	deepEqual( Stem("îngrozeşti"), "îngroz" );
	deepEqual( Stem("îngrozit"), "îngroz" );
	deepEqual( Stem("îngrozită"), "îngroz" );
	deepEqual( Stem("îngrozitoare"), "îngroz" );
	deepEqual( Stem("îngrozitor"), "îngroz" );
	deepEqual( Stem("îngroziţi"), "îngroz" );
	deepEqual( Stem("îngurgitate"), "îngurg" );
	deepEqual( Stem("îngustă"), "îngust" );
	deepEqual( Stem("înguste"), "îngust" );
	deepEqual( Stem("înhăţase"), "înhăţ" );
	deepEqual( Stem("înjghebare"), "înjgheb" );
	deepEqual( Stem("înjumătăţeşte"), "înjumătăţ" );
	deepEqual( Stem("înjumătăţi"), "înjumătăţ" );
	deepEqual( Stem("înjumătăţit"), "înjumătăţ" );
	deepEqual( Stem("înjumătăţită"), "înjumătăţ" );
	deepEqual( Stem("înjunghiată"), "înjungh" );
	deepEqual( Stem("înjunghie"), "înjungh" );
	deepEqual( Stem("înjunghiere"), "înjunghier" );
	deepEqual( Stem("înjura"), "înjur" );
	deepEqual( Stem("înjură"), "înjur" );
	deepEqual( Stem("înjurătura"), "înjurătur" );
	deepEqual( Stem("înjurături"), "înjurătur" );
	deepEqual( Stem("înjurăturile"), "înjurătur" );
	deepEqual( Stem("înlăcrămaţi"), "înlăcrăm" );
	deepEqual( Stem("înlăcrimat"), "înlăcrim" );
	deepEqual( Stem("înlăcrimată"), "înlăcrim" );
	deepEqual( Stem("înlăcrimate"), "înlăcrim" );
	deepEqual( Stem("înlăcrimaţi"), "înlăcrim" );
	deepEqual( Stem("înlănţuire"), "înlănţu" );
	deepEqual( Stem("înlănţuirea"), "înlănţu" );
	deepEqual( Stem("înlătura"), "înlătur" );
	deepEqual( Stem("înlăturat"), "înlătur" );
	deepEqual( Stem("înlătură"), "înlăt" );
	deepEqual( Stem("înlăturăm"), "înlăt" );
	deepEqual( Stem("înlăture"), "înlătur" );
	deepEqual( Stem("înlemnit"), "înlemn" );
	deepEqual( Stem("înlemniţi"), "înlemn" );
	deepEqual( Stem("înlesneşte"), "înlesn" );
	deepEqual( Stem("înlesnită"), "înlesn" );
	deepEqual( Stem("înlocui"), "înloc" );
	deepEqual( Stem("înlocuiam"), "înlocui" );
	deepEqual( Stem("înlocuiască"), "înlocuiasc" );
	deepEqual( Stem("înlocuim"), "înlocu" );
	deepEqual( Stem("înlocuiri"), "înlocuir" );
	deepEqual( Stem("înlocuit"), "înlocu" );
	deepEqual( Stem("înlocuită"), "înlocu" );
	deepEqual( Stem("înlocuite"), "înlocu" );
	deepEqual( Stem("înmănuşat"), "înmănuş" );
	deepEqual( Stem("înmormântare"), "înmormânt" );
	deepEqual( Stem("înmuiat"), "înmui" );
	deepEqual( Stem("înmuiată"), "înmui" );
	deepEqual( Stem("înmuiate"), "înmui" );
	deepEqual( Stem("înmuiaţi"), "înmui" );
	deepEqual( Stem("înmulţeşte"), "înmulţ" );
	deepEqual( Stem("înnebunea"), "înnebun" );
	deepEqual( Stem("înnebunească"), "înnebun" );
	deepEqual( Stem("înnebuneau"), "înnebun" );
	deepEqual( Stem("înnebunesc"), "înnebun" );
	deepEqual( Stem("înnebuni"), "înnebun" );
	deepEqual( Stem("înnebunit"), "înnebun" );
	deepEqual( Stem("înnebunită"), "înnebun" );
	deepEqual( Stem("înnebunite"), "înnebun" );
	deepEqual( Stem("înnebunitoare"), "înnebun" );
	deepEqual( Stem("înnebuniţi"), "înnebun" );
	deepEqual( Stem("înnegrea"), "înnegr" );
	deepEqual( Stem("înnegrit"), "înnegr" );
	deepEqual( Stem("înnod"), "înnod" );
	deepEqual( Stem("înnoiesc"), "înnoi" );
	deepEqual( Stem("înrâurirea"), "înrâur" );
	deepEqual( Stem("înrâurit"), "înrâur" );
	deepEqual( Stem("înrădăcinat"), "înrădăcin" );
	deepEqual( Stem("înregistreze"), "înregistr" );
	deepEqual( Stem("înroşit"), "înroş" );
	deepEqual( Stem("înroşite"), "înroş" );
	deepEqual( Stem("înrourat"), "înrour" );
	deepEqual( Stem("înrourată"), "înrour" );
	deepEqual( Stem("înrudire"), "înrud" );
	deepEqual( Stem("înrudirea"), "înrud" );
	deepEqual( Stem("înrudite"), "înrud" );
	deepEqual( Stem("însa"), "însa" );
	deepEqual( Stem("însângerată"), "însânger" );
	deepEqual( Stem("însă"), "însă" );
	deepEqual( Stem("însăileze"), "însăil" );
	deepEqual( Stem("însănătoşit"), "însănătoş" );
	deepEqual( Stem("însărcinare"), "însărcin" );
	deepEqual( Stem("însărcinată"), "însărcin" );
	deepEqual( Stem("însăşi"), "însăş" );
	deepEqual( Stem("însăţi"), "însăţ" );
	deepEqual( Stem("înscorţoşate"), "înscorţoş" );
	deepEqual( Stem("înscrie"), "înscrie" );
	deepEqual( Stem("înscris"), "înscris" );
	deepEqual( Stem("înseamnă"), "înseamn" );
	deepEqual( Stem("înseilat"), "înseil" );
	deepEqual( Stem("însele"), "înse" );
	deepEqual( Stem("însemna"), "însemn" );
	deepEqual( Stem("însemnare"), "însemn" );
	deepEqual( Stem("însemnarea"), "însemn" );
	deepEqual( Stem("însemnat"), "însemn" );
	deepEqual( Stem("însemnată"), "însemn" );
	deepEqual( Stem("însemnate"), "însemn" );
	deepEqual( Stem("însemnaţi"), "însemn" );
	deepEqual( Stem("însemnau"), "însemn" );
	deepEqual( Stem("însemnăm"), "însemn" );
	deepEqual( Stem("însemnătate"), "însemnăt" );
	deepEqual( Stem("însemne"), "însemn" );
	deepEqual( Stem("însemnează"), "însemn" );
	deepEqual( Stem("însemnez"), "însemn" );
	deepEqual( Stem("înserare"), "înser" );
	deepEqual( Stem("înserarea"), "înser" );
	deepEqual( Stem("înserat"), "înser" );
	deepEqual( Stem("înserate"), "înser" );
	deepEqual( Stem("înserează"), "înser" );
	deepEqual( Stem("înseriat"), "înser" );
	deepEqual( Stem("înseşi"), "înseş" );
	deepEqual( Stem("însor"), "însor" );
	deepEqual( Stem("însorită"), "însor" );
	deepEqual( Stem("însorite"), "însor" );
	deepEqual( Stem("însoţea"), "însoţ" );
	deepEqual( Stem("însoţeau"), "însoţ" );
	deepEqual( Stem("înspăimântat"), "înspăimânt" );
	deepEqual( Stem("înspăimântată"), "înspăimânt" );
	deepEqual( Stem("înspăimântătoare"), "înspăimânt" );
	deepEqual( Stem("înspre"), "înspre" );
	deepEqual( Stem("înspumate"), "înspum" );
	deepEqual( Stem("înstrăina"), "înstrăin" );
	deepEqual( Stem("înstrăinare"), "înstrăin" );
	deepEqual( Stem("înstrăinat"), "înstrăin" );
	deepEqual( Stem("înstrăineze"), "înstrăin" );
	deepEqual( Stem("însufleţit"), "însufleţ" );
	deepEqual( Stem("însul"), "îns" );
	deepEqual( Stem("însumi"), "însum" );
	deepEqual( Stem("însurat"), "însur" );
	deepEqual( Stem("însuşi"), "însuş" );
	deepEqual( Stem("însuşim"), "însuş" );
	deepEqual( Stem("însuţi"), "însuţ" );
	deepEqual( Stem("înşală"), "înşal" );
	deepEqual( Stem("înşeală"), "înşeal" );
	deepEqual( Stem("înşela"), "înşel" );
	deepEqual( Stem("înşelat"), "înşel" );
	deepEqual( Stem("înşelaţi"), "înşel" );
	deepEqual( Stem("înşelând"), "înşel" );
	deepEqual( Stem("înşelătoare"), "înşel" );
	deepEqual( Stem("înşelător"), "înşel" );
	deepEqual( Stem("înşele"), "înşe" );
	deepEqual( Stem("înşeli"), "înşel" );
	deepEqual( Stem("înşfăca"), "înşfăc" );
	deepEqual( Stem("înşine"), "înşin" );
	deepEqual( Stem("înşir"), "înşir" );
	deepEqual( Stem("înşirarea"), "înşir" );
	deepEqual( Stem("înşirat"), "înşir" );
	deepEqual( Stem("înşirate"), "înşir" );
	deepEqual( Stem("înşiraţi"), "înşir" );
	deepEqual( Stem("înşiră"), "înşir" );
	deepEqual( Stem("înşiruire"), "înşiru" );
	deepEqual( Stem("înşiruit"), "înşiru" );
	deepEqual( Stem("înşişi"), "înşiş" );
	deepEqual( Stem("înştiinţarea"), "înştiinţ" );
	deepEqual( Stem("înşurubare"), "înşurub" );
	deepEqual( Stem("întâi"), "întâ" );
	deepEqual( Stem("întâia"), "întâi" );
	deepEqual( Stem("întâie"), "întâi" );
	deepEqual( Stem("întâile"), "întâ" );
	deepEqual( Stem("întâiul"), "întâi" );
	deepEqual( Stem("întâlneam"), "întâln" );
	deepEqual( Stem("întâlnească"), "întâln" );
	deepEqual( Stem("întâlnesc"), "întâln" );
	deepEqual( Stem("întâlneşte"), "întâln" );
	deepEqual( Stem("întâlneşti"), "întâln" );
	deepEqual( Stem("întâlni"), "întâln" );
	deepEqual( Stem("întâlnim"), "întâln" );
	deepEqual( Stem("întâlnire"), "întâln" );
	deepEqual( Stem("întâlnirea"), "întâln" );
	deepEqual( Stem("întâlnisem"), "întâln" );
	deepEqual( Stem("întâlnit"), "întâln" );
	deepEqual( Stem("întâlnită"), "întâln" );
	deepEqual( Stem("întâmpina"), "întâmpin" );
	deepEqual( Stem("întâmpină"), "întâmpin" );
	deepEqual( Stem("întâmpinăm"), "întâmpin" );
	deepEqual( Stem("întâmpla"), "întâmpl" );
	deepEqual( Stem("întâmplare"), "întâmpl" );
	deepEqual( Stem("întâmplarea"), "întâmpl" );
	deepEqual( Stem("întâmplase"), "întâmpl" );
	deepEqual( Stem("întâmplat"), "întâmpl" );
	deepEqual( Stem("întâmplate"), "întâmpl" );
	deepEqual( Stem("întâmplau"), "întâmpl" );
	deepEqual( Stem("întâmplă"), "întâmpl" );
	deepEqual( Stem("întâmplări"), "întâmplăr" );
	deepEqual( Stem("întâmplării"), "întâmplăr" );
	deepEqual( Stem("întâmplările"), "întâmplăr" );
	deepEqual( Stem("întâmplărilor"), "întâmplăr" );
	deepEqual( Stem("întâmplătoare"), "întâmpl" );
	deepEqual( Stem("întâmplător"), "întâmpl" );
	deepEqual( Stem("întâmple"), "întâmpl" );
	deepEqual( Stem("întârzia"), "întârz" );
	deepEqual( Stem("întârziase"), "întârzias" );
	deepEqual( Stem("întârziasem"), "întârziasem" );
	deepEqual( Stem("întârziat"), "întârz" );
	deepEqual( Stem("întârziaţi"), "întârz" );
	deepEqual( Stem("întârzie"), "întârz" );
	deepEqual( Stem("întârziem"), "întârz" );
	deepEqual( Stem("întârziere"), "întârzier" );
	deepEqual( Stem("întârzierea"), "întârzier" );
	deepEqual( Stem("întârzierilor"), "întârzier" );
	deepEqual( Stem("întârzii"), "întârz" );
	deepEqual( Stem("întârziind"), "întârziind" );
	deepEqual( Stem("întărâtat"), "întărât" );
	deepEqual( Stem("întărâtată"), "întărât" );
	deepEqual( Stem("întărâtaţi"), "întărât" );
	deepEqual( Stem("întărâte"), "întărât" );
	deepEqual( Stem("întărească"), "întăr" );
	deepEqual( Stem("întăresc"), "întăr" );
	deepEqual( Stem("întăreşte"), "întăr" );
	deepEqual( Stem("întărim"), "întăr" );
	deepEqual( Stem("întărire"), "întăr" );
	deepEqual( Stem("întăriri"), "întărir" );
	deepEqual( Stem("întărit"), "întăr" );
	deepEqual( Stem("întărite"), "întăr" );
	deepEqual( Stem("întăriturile"), "întăritur" );
	deepEqual( Stem("întemeiate"), "întemei" );
	deepEqual( Stem("întemeiază"), "întemeiaz" );
	deepEqual( Stem("întemeiem"), "întemei" );
	deepEqual( Stem("întind"), "întind" );
	deepEqual( Stem("întindă"), "întind" );
	deepEqual( Stem("întinde"), "întind" );
	deepEqual( Stem("întindea"), "întind" );
	deepEqual( Stem("întinderea"), "întind" );
	deepEqual( Stem("întinderile"), "întinder" );
	deepEqual( Stem("întins"), "întins" );
	deepEqual( Stem("întinsă"), "întins" );
	deepEqual( Stem("întinse"), "întin" );
	deepEqual( Stem("întinşi"), "întinş" );
	deepEqual( Stem("întinzând"), "întinz" );
	deepEqual( Stem("întipăresc"), "întipăr" );
	deepEqual( Stem("întoarcă"), "întoarc" );
	deepEqual( Stem("întoarce"), "întoarc" );
	deepEqual( Stem("întoarcem"), "întoarc" );
	deepEqual( Stem("întoarcere"), "întoarc" );
	deepEqual( Stem("întoarcerea"), "întoarc" );
	deepEqual( Stem("întoarsă"), "întoars" );
	deepEqual( Stem("întoarse"), "întoar" );
	deepEqual( Stem("întocmai"), "întocm" );
	deepEqual( Stem("întocmită"), "întocm" );
	deepEqual( Stem("întorc"), "întorc" );
	deepEqual( Stem("întorcând"), "întorc" );
	deepEqual( Stem("întorcându"), "întorc" );
	deepEqual( Stem("întorcea"), "întorc" );
	deepEqual( Stem("întorceam"), "întorc" );
	deepEqual( Stem("întorci"), "întorc" );
	deepEqual( Stem("întors"), "întors" );
	deepEqual( Stem("întorsături"), "întorsătur" );
	deepEqual( Stem("întorşi"), "întorş" );
	deepEqual( Stem("întortocheat"), "întortoch" );
	deepEqual( Stem("întortocheată"), "întortoch" );
	deepEqual( Stem("întortocheate"), "întortoch" );
	deepEqual( Stem("întortocherile"), "întortocher" );
	deepEqual( Stem("întotdeaun"), "întotdeaun" );
	deepEqual( Stem("întotdeauna"), "întotdeaun" );
	deepEqual( Stem("întovărăşesc"), "întovărăş" );
	deepEqual( Stem("întovărăşeşte"), "întovărăş" );
	deepEqual( Stem("întovărăşit"), "întovărăş" );
	deepEqual( Stem("întovărăşită"), "întovărăş" );
	deepEqual( Stem("întovărăşite"), "întovărăş" );
	deepEqual( Stem("într"), "într" );
	deepEqual( Stem("între"), "între" );
	deepEqual( Stem("întreabă"), "întreab" );
	deepEqual( Stem("întreaga"), "întreag" );
	deepEqual( Stem("întreagă"), "întreag" );
	deepEqual( Stem("întreb"), "întreb" );
	deepEqual( Stem("întreba"), "întreb" );
	deepEqual( Stem("întrebam"), "întreb" );
	deepEqual( Stem("întrebare"), "întreb" );
	deepEqual( Stem("întrebarea"), "întreb" );
	deepEqual( Stem("întrebat"), "întreb" );
	deepEqual( Stem("întrebată"), "întreb" );
	deepEqual( Stem("întrebaţi"), "întreb" );
	deepEqual( Stem("întrebau"), "întreb" );
	deepEqual( Stem("întrebând"), "întreb" );
	deepEqual( Stem("întrebându"), "întreb" );
	deepEqual( Stem("întrebă"), "întreb" );
	deepEqual( Stem("întrebăm"), "întreb" );
	deepEqual( Stem("întrebări"), "întrebăr" );
	deepEqual( Stem("întrebării"), "întrebăr" );
	deepEqual( Stem("întrebările"), "întrebăr" );
	deepEqual( Stem("întrebătoare"), "întreb" );
	deepEqual( Stem("întrebătoarea"), "întreb" );
	deepEqual( Stem("întrebător"), "întreb" );
	deepEqual( Stem("întrebe"), "întreb" );
	deepEqual( Stem("întrebi"), "întreb" );
	deepEqual( Stem("întrebuinţa"), "întrebuinţ" );
	deepEqual( Stem("întrebuinţare"), "întrebuinţ" );
	deepEqual( Stem("întrebuinţarea"), "întrebuinţ" );
	deepEqual( Stem("întrebuinţat"), "întrebuinţ" );
	deepEqual( Stem("întrebuinţată"), "întrebuinţ" );
	deepEqual( Stem("întrebuinţăm"), "întrebuinţ" );
	deepEqual( Stem("întrebuinţări"), "întrebuinţăr" );
	deepEqual( Stem("întrebuinţării"), "întrebuinţăr" );
	deepEqual( Stem("întrebuinţează"), "întrebuinţ" );
	deepEqual( Stem("întrebuinţez"), "întrebuinţ" );
	deepEqual( Stem("întrecere"), "întrec" );
	deepEqual( Stem("întrecerea"), "întrec" );
	deepEqual( Stem("întrecut"), "întrec" );
	deepEqual( Stem("întredeschiderea"), "întredeschid" );
	deepEqual( Stem("întreg"), "întreg" );
	deepEqual( Stem("întregei"), "întrege" );
	deepEqual( Stem("întregesc"), "întreg" );
	deepEqual( Stem("întregeşte"), "întreg" );
	deepEqual( Stem("întregi"), "întreg" );
	deepEqual( Stem("întregii"), "întreg" );
	deepEqual( Stem("întregime"), "întregim" );
	deepEqual( Stem("întregire"), "întreg" );
	deepEqual( Stem("întregit"), "întreg" );
	deepEqual( Stem("întregul"), "întreg" );
	deepEqual( Stem("întregului"), "întreg" );
	deepEqual( Stem("întreprinderea"), "întreprind" );
	deepEqual( Stem("întreprinderi"), "întreprinder" );
	deepEqual( Stem("întreprinderii"), "întreprinder" );
	deepEqual( Stem("întreprinderilor"), "întreprinder" );
	deepEqual( Stem("întrerup"), "întrerup" );
	deepEqual( Stem("întrerupând"), "întrerup" );
	deepEqual( Stem("întrerupându"), "întrerup" );
	deepEqual( Stem("întrerupă"), "întrerup" );
	deepEqual( Stem("întrerupe"), "întrerup" );
	deepEqual( Stem("întrerupere"), "întrerup" );
	deepEqual( Stem("întrerupt"), "întrerupt" );
	deepEqual( Stem("întreruptă"), "întrerupt" );
	deepEqual( Stem("întrerupte"), "întrerupt" );
	deepEqual( Stem("întretaie"), "întretai" );
	deepEqual( Stem("întretăierea"), "întretăi" );
	deepEqual( Stem("întreţie"), "întreţ" );
	deepEqual( Stem("întreţin"), "întreţin" );
	deepEqual( Stem("întrevederea"), "întreved" );
	deepEqual( Stem("întrevederi"), "întreveder" );
	deepEqual( Stem("întrezărită"), "întrezăr" );
	deepEqual( Stem("întrista"), "întrist" );
	deepEqual( Stem("întru"), "întru" );
	deepEqual( Stem("întrucât"), "întrucât" );
	deepEqual( Stem("întrucâtva"), "întrucâtv" );
	deepEqual( Stem("întrucît"), "întrucît" );
	deepEqual( Stem("întrucîtva"), "întrucîtv" );
	deepEqual( Stem("întruna"), "întrun" );
	deepEqual( Stem("întrunea"), "întrun" );
	deepEqual( Stem("întrunesc"), "întrun" );
	deepEqual( Stem("întruneşte"), "întrun" );
	deepEqual( Stem("întrunire"), "întrun" );
	deepEqual( Stem("întruniri"), "întrunir" );
	deepEqual( Stem("întrunit"), "întrun" );
	deepEqual( Stem("întrunită"), "întrun" );
	deepEqual( Stem("întrunite"), "întrun" );
	deepEqual( Stem("întrupare"), "întrup" );
	deepEqual( Stem("întrupările"), "întrupăr" );
	deepEqual( Stem("întrupează"), "întrup" );
	deepEqual( Stem("întunec"), "întunec" );
	deepEqual( Stem("întunecarea"), "întunec" );
	deepEqual( Stem("întunecat"), "întunec" );
	deepEqual( Stem("întunecată"), "întunec" );
	deepEqual( Stem("întunecate"), "întunec" );
	deepEqual( Stem("întunecă"), "întunec" );
	deepEqual( Stem("întunece"), "întunec" );
	deepEqual( Stem("întunecimea"), "întunecim" );
	deepEqual( Stem("întunecoasă"), "întunec" );
	deepEqual( Stem("întunecos"), "întunec" );
	deepEqual( Stem("întuneric"), "întuner" );
	deepEqual( Stem("întunericul"), "întuner" );
	deepEqual( Stem("întunericului"), "întuner" );
	deepEqual( Stem("înţeleagă"), "înţeleag" );
	deepEqual( Stem("înţeleasă"), "înţeleas" );
	deepEqual( Stem("înţeleg"), "înţeleg" );
	deepEqual( Stem("înţelegând"), "înţeleg" );
	deepEqual( Stem("înţelegându"), "înţeleg" );
	deepEqual( Stem("înţelegătoarei"), "înţelegătoare" );
	deepEqual( Stem("înţelegători"), "înţeleg" );
	deepEqual( Stem("înţelege"), "înţeleg" );
	deepEqual( Stem("înţelegea"), "înţeleg" );
	deepEqual( Stem("înţelegeam"), "înţeleg" );
	deepEqual( Stem("înţelegeau"), "înţeleg" );
	deepEqual( Stem("înţelegem"), "înţeleg" );
	deepEqual( Stem("înţelegere"), "înţeleg" );
	deepEqual( Stem("înţelegerea"), "înţeleg" );
	deepEqual( Stem("înţelegeri"), "înţeleger" );
	deepEqual( Stem("înţelegerii"), "înţeleger" );
	deepEqual( Stem("înţelegeţi"), "înţeleg" );
	deepEqual( Stem("înţelegi"), "înţeleg" );
	deepEqual( Stem("înţelepciune"), "înţelepciun" );
	deepEqual( Stem("înţelepciunea"), "înţelepciun" );
	deepEqual( Stem("înţelept"), "înţelept" );
	deepEqual( Stem("înţelepte"), "înţelept" );
	deepEqual( Stem("înţeleptul"), "înţelept" );
	deepEqual( Stem("înţelepţi"), "înţelepţ" );
	deepEqual( Stem("înţelepţii"), "înţelepţ" );
	deepEqual( Stem("înţelepţilor"), "înţelepţ" );
	deepEqual( Stem("înţeles"), "înţeles" );
	deepEqual( Stem("înţeleseseră"), "înţel" );
	deepEqual( Stem("înţelesul"), "înţeles" );
	deepEqual( Stem("înţelesuri"), "înţelesur" );
	deepEqual( Stem("înţelesurile"), "înţelesur" );
	deepEqual( Stem("înţep"), "înţep" );
	deepEqual( Stem("înţepa"), "înţep" );
	deepEqual( Stem("înţepătura"), "înţepătur" );
	deepEqual( Stem("înţepătură"), "înţepăt" );
	deepEqual( Stem("înţepenesc"), "înţepen" );
	deepEqual( Stem("înţesată"), "înţes" );
	deepEqual( Stem("înţesate"), "înţes" );
	deepEqual( Stem("învaţă"), "învaţ" );
	deepEqual( Stem("învârstată"), "învârst" );
	deepEqual( Stem("învârte"), "învârt" );
	deepEqual( Stem("învârtesc"), "învârt" );
	deepEqual( Stem("învârteşte"), "învârt" );
	deepEqual( Stem("învârtim"), "învârt" );
	deepEqual( Stem("învârtind"), "învârt" );
	deepEqual( Stem("învârtit"), "învârt" );
	deepEqual( Stem("învălmăşeala"), "învălmăşeal" );
	deepEqual( Stem("învălmăşeală"), "învălmăşeal" );
	deepEqual( Stem("învălui"), "învăl" );
	deepEqual( Stem("învăluie"), "învălui" );
	deepEqual( Stem("învăluiri"), "învăluir" );
	deepEqual( Stem("învăluit"), "învălu" );
	deepEqual( Stem("învăluite"), "învălu" );
	deepEqual( Stem("învăpăiată"), "învăpăi" );
	deepEqual( Stem("învăţa"), "învăţ" );
	deepEqual( Stem("învăţase"), "învăţ" );
	deepEqual( Stem("învăţat"), "învăţ" );
	deepEqual( Stem("învăţaţi"), "învăţ" );
	deepEqual( Stem("învăţăm"), "învăţ" );
	deepEqual( Stem("învăţământul"), "învăţământ" );
	deepEqual( Stem("învăţăminte"), "învăţămint" );
	deepEqual( Stem("învăţătura"), "învăţătur" );
	deepEqual( Stem("învăţături"), "învăţătur" );
	deepEqual( Stem("învăţăturii"), "învăţătur" );
	deepEqual( Stem("învechite"), "învech" );
	deepEqual( Stem("învederează"), "înveder" );
	deepEqual( Stem("învelesc"), "învel" );
	deepEqual( Stem("înveli"), "învel" );
	deepEqual( Stem("învelitoare"), "învel" );
	deepEqual( Stem("înveliţi"), "învel" );
	deepEqual( Stem("înveninate"), "învenin" );
	deepEqual( Stem("înverşunare"), "înverşun" );
	deepEqual( Stem("înverşunarea"), "înverşun" );
	deepEqual( Stem("înverşunat"), "înverşun" );
	deepEqual( Stem("înverşunată"), "înverşun" );
	deepEqual( Stem("înverşunate"), "înverşun" );
	deepEqual( Stem("înveselit"), "învesel" );
	deepEqual( Stem("înveţe"), "înveţ" );
	deepEqual( Stem("învia"), "învi" );
	deepEqual( Stem("învie"), "învie" );
	deepEqual( Stem("învineţit"), "învineţ" );
	deepEqual( Stem("învingă"), "înving" );
	deepEqual( Stem("învingător"), "înving" );
	deepEqual( Stem("învingătorul"), "înving" );
	deepEqual( Stem("învinge"), "înving" );
	deepEqual( Stem("învins"), "învins" );
	deepEqual( Stem("învinsă"), "învins" );
	deepEqual( Stem("învinşi"), "învinş" );
	deepEqual( Stem("învinuire"), "învinu" );
	deepEqual( Stem("înviorat"), "învior" );
	deepEqual( Stem("învoiau"), "învoi" );
	deepEqual( Stem("învoieli"), "învoiel" );
	deepEqual( Stem("învoiesc"), "învoi" );
	deepEqual( Stem("învoire"), "învoir" );
	deepEqual( Stem("învoirea"), "învoir" );
	deepEqual( Stem("învolată"), "învol" );
	deepEqual( Stem("înzăpezite"), "înzăpez" );
	deepEqual( Stem("înzecită"), "înzec" );
	deepEqual( Stem("înzestrarea"), "înzestr" );
	deepEqual( Stem("înzestrat"), "înzestr" );
	deepEqual( Stem("înzestrată"), "înzestr" );
	deepEqual( Stem("înzestrate"), "înzestr" );
	deepEqual( Stem("înzestrează"), "înzestr" );
	deepEqual( Stem("înzorzonat"), "înzorzon" );
	deepEqual( Stem("îşi"), "îşi" );
	deepEqual( Stem("îţi"), "îţi" );
	deepEqual( Stem("jachetă"), "jachet" );
	deepEqual( Stem("jaf"), "jaf" );
	deepEqual( Stem("jahre"), "jahr" );
	deepEqual( Stem("jale"), "jal" );
	deepEqual( Stem("jalnică"), "jalnic" );
	deepEqual( Stem("jalnice"), "jalnic" );
	deepEqual( Stem("jandarmi"), "jandarm" );
	deepEqual( Stem("japca"), "japc" );
	deepEqual( Stem("japoneze"), "japon" );
	deepEqual( Stem("jargon"), "jargon" );
	deepEqual( Stem("jartierelor"), "jartier" );
	deepEqual( Stem("jăratic"), "jărat" );
	deepEqual( Stem("jefui"), "jefu" );
	deepEqual( Stem("jefuiesc"), "jefui" );
	deepEqual( Stem("jefuit"), "jefuit" );
	deepEqual( Stem("jefuite"), "jefuit" );
	deepEqual( Stem("jeluitoare"), "jeluit" );
	deepEqual( Stem("jertfise"), "jertf" );
	deepEqual( Stem("jerusalem"), "jerusal" );
	deepEqual( Stem("jgheab"), "jgheab" );
	deepEqual( Stem("jigărit"), "jigăr" );
	deepEqual( Stem("jignea"), "jign" );
	deepEqual( Stem("jigneşte"), "jign" );
	deepEqual( Stem("jigneşti"), "jign" );
	deepEqual( Stem("jigni"), "jign" );
	deepEqual( Stem("jignire"), "jign" );
	deepEqual( Stem("jignirile"), "jignir" );
	deepEqual( Stem("jignit"), "jignit" );
	deepEqual( Stem("jignitoare"), "jignit" );
	deepEqual( Stem("joacă"), "joac" );
	deepEqual( Stem("joace"), "joac" );
	deepEqual( Stem("joasă"), "joas" );
	deepEqual( Stem("joase"), "joa" );
	deepEqual( Stem("joc"), "joc" );
	deepEqual( Stem("joci"), "joc" );
	deepEqual( Stem("jockey"), "jockey" );
	deepEqual( Stem("jocul"), "joc" );
	deepEqual( Stem("jocului"), "joc" );
	deepEqual( Stem("jocuri"), "jocur" );
	deepEqual( Stem("jocurile"), "jocur" );
	deepEqual( Stem("jocurilor"), "jocur" );
	deepEqual( Stem("joffre"), "joffr" );
	deepEqual( Stem("john"), "john" );
	deepEqual( Stem("joi"), "joi" );
	deepEqual( Stem("joia"), "joi" );
	deepEqual( Stem("jos"), "jos" );
	deepEqual( Stem("josul"), "jos" );
	deepEqual( Stem("jubilează"), "jubil" );
	deepEqual( Stem("juca"), "juc" );
	deepEqual( Stem("jucam"), "jucam" );
	deepEqual( Stem("jucasem"), "jucasem" );
	deepEqual( Stem("jucaseră"), "jucaser" );
	deepEqual( Stem("jucat"), "jucat" );
	deepEqual( Stem("jucate"), "jucat" );
	deepEqual( Stem("jucau"), "jucau" );
	deepEqual( Stem("jucând"), "jucând" );
	deepEqual( Stem("jucându"), "jucându" );
	deepEqual( Stem("jucărie"), "jucăr" );
	deepEqual( Stem("jucării"), "jucăr" );
	deepEqual( Stem("jucător"), "jucat" );
	deepEqual( Stem("jucătorii"), "jucat" );
	deepEqual( Stem("jucătorului"), "jucat" );
	deepEqual( Stem("jucăuşă"), "jucăuş" );
	deepEqual( Stem("judec"), "judec" );
	deepEqual( Stem("judeca"), "judec" );
	deepEqual( Stem("judecare"), "judec" );
	deepEqual( Stem("judecarea"), "judec" );
	deepEqual( Stem("judecata"), "judec" );
	deepEqual( Stem("judecată"), "judec" );
	deepEqual( Stem("judecând"), "judec" );
	deepEqual( Stem("judecă"), "judec" );
	deepEqual( Stem("judecăm"), "judec" );
	deepEqual( Stem("judecător"), "judec" );
	deepEqual( Stem("judecătorii"), "judec" );
	deepEqual( Stem("judecătorul"), "judec" );
	deepEqual( Stem("judecăţi"), "judecăţ" );
	deepEqual( Stem("judecăţii"), "judecăţ" );
	deepEqual( Stem("judecăţile"), "judecăţ" );
	deepEqual( Stem("judece"), "judec" );
	deepEqual( Stem("judeci"), "judec" );
	deepEqual( Stem("judeţ"), "judeţ" );
	deepEqual( Stem("judeţean"), "judeţean" );
	deepEqual( Stem("judeţului"), "judeţ" );
	deepEqual( Stem("judicioase"), "judic" );
	deepEqual( Stem("julieta"), "juliet" );
	deepEqual( Stem("jumătate"), "jumăt" );
	deepEqual( Stem("jumătatea"), "jumăt" );
	deepEqual( Stem("jumătăţi"), "jumătăţ" );
	deepEqual( Stem("junglă"), "jungl" );
	deepEqual( Stem("junkeri"), "junker" );
	deepEqual( Stem("jupâneasă"), "jupâneas" );
	deepEqual( Stem("jupiter"), "jupiter" );
	deepEqual( Stem("jur"), "jur" );
	deepEqual( Stem("jura"), "jur" );
	deepEqual( Stem("juraseră"), "juraser" );
	deepEqual( Stem("jurat"), "jurat" );
	deepEqual( Stem("jurate"), "jurat" );
	deepEqual( Stem("juraţi"), "jur" );
	deepEqual( Stem("juraţii"), "jur" );
	deepEqual( Stem("juraţilor"), "jur" );
	deepEqual( Stem("jură"), "jur" );
	deepEqual( Stem("jurăminţile"), "jurăminţ" );
	deepEqual( Stem("juri"), "jur" );
	deepEqual( Stem("juridică"), "jurid" );
	deepEqual( Stem("jurisconsult"), "jurisconsult" );
	deepEqual( Stem("jurnal"), "jurnal" );
	deepEqual( Stem("jurnalist"), "jurnalist" );
	deepEqual( Stem("jurul"), "jur" );
	deepEqual( Stem("just"), "just" );
	deepEqual( Stem("justa"), "just" );
	deepEqual( Stem("justă"), "just" );
	deepEqual( Stem("juste"), "just" );
	deepEqual( Stem("justeţea"), "justeţ" );
	deepEqual( Stem("justificabilă"), "justific" );
	deepEqual( Stem("justificare"), "justific" );
	deepEqual( Stem("justificarea"), "justific" );
	deepEqual( Stem("justificat"), "justific" );
	deepEqual( Stem("justificată"), "justific" );
	deepEqual( Stem("justificând"), "justific" );
	deepEqual( Stem("justifică"), "justif" );
	deepEqual( Stem("justifice"), "justif" );
	deepEqual( Stem("justiţia"), "justiţ" );
	deepEqual( Stem("justiţiar"), "justiţiar" );
	deepEqual( Stem("k"), "k" );
	deepEqual( Stem("kaiser"), "kaiser" );
	deepEqual( Stem("kaiseriană"), "kaiserian" );
	deepEqual( Stem("kaiserul"), "kaiser" );
	deepEqual( Stem("kaiserului"), "kaiser" );
	deepEqual( Stem("kama"), "kam" );
	deepEqual( Stem("kann"), "kann" );
	deepEqual( Stem("kant"), "kant" );
	deepEqual( Stem("kantian"), "kantian" );
	deepEqual( Stem("kantiană"), "kantian" );
	deepEqual( Stem("kapp"), "kapp" );
	deepEqual( Stem("kautsky"), "kautsky" );
	deepEqual( Stem("kermeză"), "kermez" );
	deepEqual( Stem("keynes"), "keynes" );
	deepEqual( Stem("ki"), "ki" );
	deepEqual( Stem("kilograme"), "kilogram" );
	deepEqual( Stem("kilogrammetri"), "kilogrammetr" );
	deepEqual( Stem("kilometri"), "kilometr" );
	deepEqual( Stem("kilometru"), "kilometru" );
	deepEqual( Stem("kiss"), "kiss" );
	deepEqual( Stem("krihalma"), "krihalm" );
	deepEqual( Stem("l"), "l" );
	deepEqual( Stem("la"), "la" );
	deepEqual( Stem("laba"), "lab" );
	deepEqual( Stem("labe"), "lab" );
	deepEqual( Stem("laboratoriile"), "labor" );
	deepEqual( Stem("laboratoriilor"), "labor" );
	deepEqual( Stem("lac"), "lac" );
	deepEqual( Stem("lacăt"), "lacăt" );
	deepEqual( Stem("lacheu"), "lacheu" );
	deepEqual( Stem("lacom"), "lacom" );
	deepEqual( Stem("lacomă"), "lacom" );
	deepEqual( Stem("lacrimi"), "lacrim" );
	deepEqual( Stem("lacrimile"), "lacrim" );
	deepEqual( Stem("lacrimilor"), "lacrim" );
	deepEqual( Stem("lacurilor"), "lacur" );
	deepEqual( Stem("lada"), "lad" );
	deepEqual( Stem("lafargue"), "lafargu" );
	deepEqual( Stem("laibach"), "laibach" );
	deepEqual( Stem("lajos"), "lajos" );
	deepEqual( Stem("lamă"), "lam" );
	deepEqual( Stem("lame"), "lam" );
	deepEqual( Stem("lamentabile"), "lament" );
	deepEqual( Stem("lampa"), "lamp" );
	deepEqual( Stem("lampă"), "lamp" );
	deepEqual( Stem("lansată"), "lansat" );
	deepEqual( Stem("lanţ"), "lanţ" );
	deepEqual( Stem("lanţul"), "lanţ" );
	deepEqual( Stem("lanţurile"), "lanţur" );
	deepEqual( Stem("laolaltă"), "laolalt" );
	deepEqual( Stem("lapte"), "lapt" );
	deepEqual( Stem("larg"), "larg" );
	deepEqual( Stem("largă"), "larg" );
	deepEqual( Stem("largi"), "larg" );
	deepEqual( Stem("largul"), "larg" );
	deepEqual( Stem("larma"), "larm" );
	deepEqual( Stem("larmă"), "larm" );
	deepEqual( Stem("larmei"), "larme" );
	deepEqual( Stem("larvară"), "larv" );
	deepEqual( Stem("larvele"), "larv" );
	deepEqual( Stem("las"), "las" );
	deepEqual( Stem("lasă"), "las" );
	deepEqual( Stem("lascar"), "lascar" );
	deepEqual( Stem("lase"), "las" );
	deepEqual( Stem("laş"), "laş" );
	deepEqual( Stem("laşi"), "laş" );
	deepEqual( Stem("laşitate"), "laşitat" );
	deepEqual( Stem("laşitatea"), "laşitat" );
	deepEqual( Stem("lat"), "lat" );
	deepEqual( Stem("lată"), "lat" );
	deepEqual( Stem("latent"), "latent" );
	deepEqual( Stem("latin"), "latin" );
	deepEqual( Stem("latineasca"), "latineasc" );
	deepEqual( Stem("latini"), "latin" );
	deepEqual( Stem("latinii"), "latin" );
	deepEqual( Stem("latitudinea"), "latitudin" );
	deepEqual( Stem("latură"), "latur" );
	deepEqual( Stem("laturi"), "latur" );
	deepEqual( Stem("laturile"), "latur" );
	deepEqual( Stem("laţi"), "laţ" );
	deepEqual( Stem("lauda"), "laud" );
	deepEqual( Stem("laudă"), "laud" );
	deepEqual( Stem("laude"), "laud" );
	deepEqual( Stem("laudele"), "laud" );
	deepEqual( Stem("lavra"), "lavr" );
	deepEqual( Stem("lână"), "lân" );
	deepEqual( Stem("lânced"), "lânced" );
	deepEqual( Stem("lâncezea"), "lânc" );
	deepEqual( Stem("lângă"), "lâng" );
	deepEqual( Stem("lânos"), "lânos" );
	deepEqual( Stem("lăcuită"), "lăcuit" );
	deepEqual( Stem("lăcustele"), "lăcust" );
	deepEqual( Stem("lăieţ"), "lăieţ" );
	deepEqual( Stem("lămâie"), "lămâi" );
	deepEqual( Stem("lămpei"), "lămpe" );
	deepEqual( Stem("lămpi"), "lămp" );
	deepEqual( Stem("lămpii"), "lămp" );
	deepEqual( Stem("lămurească"), "lămur" );
	deepEqual( Stem("lămuresc"), "lămur" );
	deepEqual( Stem("lămureşte"), "lămur" );
	deepEqual( Stem("lămuri"), "lămur" );
	deepEqual( Stem("lămurim"), "lămur" );
	deepEqual( Stem("lămurind"), "lămur" );
	deepEqual( Stem("lămurire"), "lămur" );
	deepEqual( Stem("lămurirea"), "lămur" );
	deepEqual( Stem("lămuriri"), "lămurir" );
	deepEqual( Stem("lămuririle"), "lămurir" );
	deepEqual( Stem("lămurit"), "lămur" );
	deepEqual( Stem("lămurite"), "lămur" );
	deepEqual( Stem("lămuriţi"), "lămur" );
	deepEqual( Stem("lăptoasă"), "lăptoas" );
	deepEqual( Stem("lărgesc"), "lărg" );
	deepEqual( Stem("lărgeşte"), "lărg" );
	deepEqual( Stem("lărgeşti"), "lărg" );
	deepEqual( Stem("lărgim"), "lărg" );
	deepEqual( Stem("lărgime"), "lărgim" );
	deepEqual( Stem("lărgimea"), "lărgim" );
	deepEqual( Stem("lărgind"), "lărg" );
	deepEqual( Stem("lărgire"), "lărg" );
	deepEqual( Stem("lărgirea"), "lărg" );
	deepEqual( Stem("lărgiri"), "lărgir" );
	deepEqual( Stem("lărgit"), "lărgit" );
	deepEqual( Stem("lărgite"), "lărgit" );
	deepEqual( Stem("lăsa"), "lăs" );
	deepEqual( Stem("lăsam"), "lăsam" );
	deepEqual( Stem("lăsase"), "lăsas" );
	deepEqual( Stem("lăsasem"), "lăsasem" );
	deepEqual( Stem("lăsat"), "lăsat" );
	deepEqual( Stem("lăsată"), "lăsat" );
	deepEqual( Stem("lăsate"), "lăsat" );
	deepEqual( Stem("lăsaţi"), "lăs" );
	deepEqual( Stem("lăsau"), "lăsau" );
	deepEqual( Stem("lăsând"), "lăsând" );
	deepEqual( Stem("lăsându"), "lăsându" );
	deepEqual( Stem("lăsă"), "lăs" );
	deepEqual( Stem("lăsăm"), "lăs" );
	deepEqual( Stem("lăsător"), "lăsat" );
	deepEqual( Stem("lăstari"), "lăstar" );
	deepEqual( Stem("lătrând"), "lătr" );
	deepEqual( Stem("lăturalnică"), "lăturaln" );
	deepEqual( Stem("lăturalnice"), "lăturaln" );
	deepEqual( Stem("lături"), "lătur" );
	deepEqual( Stem("lăţeşte"), "lăţeşt" );
	deepEqual( Stem("lăţime"), "lăţim" );
	deepEqual( Stem("lăuda"), "lăud" );
	deepEqual( Stem("lăudată"), "lăudat" );
	deepEqual( Stem("lăudăros"), "lăudăr" );
	deepEqual( Stem("lăuntric"), "lăuntric" );
	deepEqual( Stem("lăuntrică"), "lăuntric" );
	deepEqual( Stem("lăutar"), "lăutar" );
	deepEqual( Stem("lăutari"), "lăutar" );
	deepEqual( Stem("lăutarii"), "lăutar" );
	deepEqual( Stem("le"), "le" );
	deepEqual( Stem("lea"), "lea" );
	deepEqual( Stem("leac"), "leac" );
	deepEqual( Stem("leacuri"), "leacur" );
	deepEqual( Stem("leafa"), "leaf" );
	deepEqual( Stem("leagă"), "leag" );
	deepEqual( Stem("leagăn"), "leagăn" );
	deepEqual( Stem("leandri"), "leandr" );
	deepEqual( Stem("leano"), "leano" );
	deepEqual( Stem("lebădă"), "lebăd" );
	deepEqual( Stem("lebedei"), "lebede" );
	deepEqual( Stem("lecturi"), "lectur" );
	deepEqual( Stem("lecturile"), "lectur" );
	deepEqual( Stem("lecţia"), "lecţ" );
	deepEqual( Stem("lecţie"), "lecţ" );
	deepEqual( Stem("lecţii"), "lecţ" );
	deepEqual( Stem("lecţiile"), "lecţ" );
	deepEqual( Stem("lecţiune"), "lecţiun" );
	deepEqual( Stem("lecţiunea"), "lecţiun" );
	deepEqual( Stem("lecţiuni"), "lecţiun" );
	deepEqual( Stem("lecţiunile"), "lecţiun" );
	deepEqual( Stem("leg"), "leg" );
	deepEqual( Stem("lega"), "leg" );
	deepEqual( Stem("legal"), "legal" );
	deepEqual( Stem("legală"), "legal" );
	deepEqual( Stem("legalmente"), "legalment" );
	deepEqual( Stem("legarea"), "legar" );
	deepEqual( Stem("legat"), "legat" );
	deepEqual( Stem("legată"), "legat" );
	deepEqual( Stem("legate"), "legat" );
	deepEqual( Stem("legatele"), "legat" );
	deepEqual( Stem("legaţi"), "leg" );
	deepEqual( Stem("legaţie"), "leg" );
	deepEqual( Stem("legăm"), "leg" );
	deepEqual( Stem("legămintele"), "legămint" );
	deepEqual( Stem("legănarea"), "legăn" );
	deepEqual( Stem("legănat"), "legăn" );
	deepEqual( Stem("legănată"), "legăn" );
	deepEqual( Stem("legănatul"), "legăn" );
	deepEqual( Stem("legănând"), "legăn" );
	deepEqual( Stem("legănându"), "legăn" );
	deepEqual( Stem("legătura"), "legătur" );
	deepEqual( Stem("legătură"), "legăt" );
	deepEqual( Stem("legături"), "legătur" );
	deepEqual( Stem("legăturii"), "legătur" );
	deepEqual( Stem("legăturile"), "legătur" );
	deepEqual( Stem("lege"), "leg" );
	deepEqual( Stem("legea"), "leg" );
	deepEqual( Stem("legenda"), "legend" );
	deepEqual( Stem("legendară"), "legend" );
	deepEqual( Stem("legendari"), "legendar" );
	deepEqual( Stem("legendă"), "legend" );
	deepEqual( Stem("legendele"), "legend" );
	deepEqual( Stem("legi"), "leg" );
	deepEqual( Stem("legiferat"), "legifer" );
	deepEqual( Stem("legiferăm"), "legifer" );
	deepEqual( Stem("legii"), "leg" );
	deepEqual( Stem("legile"), "leg" );
	deepEqual( Stem("legilor"), "leg" );
	deepEqual( Stem("legionar"), "legionar" );
	deepEqual( Stem("legionari"), "legionar" );
	deepEqual( Stem("legist"), "legist" );
	deepEqual( Stem("legiunea"), "legiun" );
	deepEqual( Stem("legume"), "legum" );
	deepEqual( Stem("lehrbuch"), "lehrbuch" );
	deepEqual( Stem("lei"), "lei" );
	deepEqual( Stem("leibniz"), "leibniz" );
	deepEqual( Stem("leit"), "leit" );
	deepEqual( Stem("lele"), "lel" );
	deepEqual( Stem("lemn"), "lemn" );
	deepEqual( Stem("lemnele"), "lemn" );
	deepEqual( Stem("lemnul"), "lemn" );
	deepEqual( Stem("lene"), "len" );
	deepEqual( Stem("lenea"), "len" );
	deepEqual( Stem("leneş"), "leneş" );
	deepEqual( Stem("leneşă"), "leneş" );
	deepEqual( Stem("lenevie"), "lenev" );
	deepEqual( Stem("lenevoase"), "lenev" );
	deepEqual( Stem("lenin"), "lenin" );
	deepEqual( Stem("leoarcă"), "leoarc" );
	deepEqual( Stem("lepăda"), "lepăd" );
	deepEqual( Stem("lepros"), "lepros" );
	deepEqual( Stem("leproşi"), "leproş" );
	deepEqual( Stem("lesne"), "lesn" );
	deepEqual( Stem("leşina"), "leşin" );
	deepEqual( Stem("leşinată"), "leşin" );
	deepEqual( Stem("leşios"), "leşios" );
	deepEqual( Stem("leu"), "leu" );
	deepEqual( Stem("leute"), "leut" );
	deepEqual( Stem("levantinilor"), "levantin" );
	deepEqual( Stem("li"), "li" );
	deepEqual( Stem("liber"), "liber" );
	deepEqual( Stem("libera"), "liber" );
	deepEqual( Stem("liberal"), "liberal" );
	deepEqual( Stem("liberă"), "liber" );
	deepEqual( Stem("libere"), "liber" );
	deepEqual( Stem("liberează"), "liber" );
	deepEqual( Stem("liberi"), "liber" );
	deepEqual( Stem("libertar"), "libertar" );
	deepEqual( Stem("libertare"), "libert" );
	deepEqual( Stem("libertate"), "libert" );
	deepEqual( Stem("libertatea"), "libert" );
	deepEqual( Stem("librărie"), "librăr" );
	deepEqual( Stem("licăriri"), "licărir" );
	deepEqual( Stem("liceeni"), "liceen" );
	deepEqual( Stem("licenţa"), "licenţ" );
	deepEqual( Stem("licenţă"), "licenţ" );
	deepEqual( Stem("licenţe"), "licenţ" );
	deepEqual( Stem("liceu"), "liceu" );
	deepEqual( Stem("liceul"), "lic" );
	deepEqual( Stem("liceului"), "lic" );
	deepEqual( Stem("lichefiase"), "lichefias" );
	deepEqual( Stem("lichelism"), "lichelist" );
	deepEqual( Stem("lichid"), "lichid" );
	deepEqual( Stem("lichidarea"), "lichid" );
	deepEqual( Stem("lichidă"), "lichid" );
	deepEqual( Stem("lichidez"), "lichid" );
	deepEqual( Stem("lichideze"), "lichid" );
	deepEqual( Stem("lichior"), "lichior" );
	deepEqual( Stem("lichioruri"), "lichiorur" );
	deepEqual( Stem("licitaţia"), "licit" );
	deepEqual( Stem("licitaţie"), "licit" );
	deepEqual( Stem("licurg"), "licurg" );
	deepEqual( Stem("liebermann"), "liebermann" );
	deepEqual( Stem("liebknecht"), "liebknecht" );
	deepEqual( Stem("ligheanul"), "lighean" );
	deepEqual( Stem("liliac"), "liliac" );
	deepEqual( Stem("liliachie"), "liliach" );
	deepEqual( Stem("liliacul"), "liliac" );
	deepEqual( Stem("limba"), "limb" );
	deepEqual( Stem("limbagiul"), "limbag" );
	deepEqual( Stem("limbaj"), "limbaj" );
	deepEqual( Stem("limbajul"), "limbaj" );
	deepEqual( Stem("limbajului"), "limbaj" );
	deepEqual( Stem("limbă"), "limb" );
	deepEqual( Stem("limbii"), "limb" );
	deepEqual( Stem("limbile"), "limb" );
	deepEqual( Stem("limita"), "limit" );
	deepEqual( Stem("limitare"), "limit" );
	deepEqual( Stem("limitat"), "limit" );
	deepEqual( Stem("limitată"), "limit" );
	deepEqual( Stem("limitativ"), "limit" );
	deepEqual( Stem("limită"), "limit" );
	deepEqual( Stem("limite"), "limit" );
	deepEqual( Stem("limitele"), "limit" );
	deepEqual( Stem("limitelor"), "limit" );
	deepEqual( Stem("limonadă"), "limonad" );
	deepEqual( Stem("limpede"), "limped" );
	deepEqual( Stem("limpezea"), "limp" );
	deepEqual( Stem("limpezească"), "limpez" );
	deepEqual( Stem("limpezi"), "limp" );
	deepEqual( Stem("limpezimi"), "limpezim" );
	deepEqual( Stem("limpiditate"), "limpid" );
	deepEqual( Stem("limuzine"), "limuzin" );
	deepEqual( Stem("line"), "lin" );
	deepEqual( Stem("linge"), "ling" );
	deepEqual( Stem("lingoare"), "lingoar" );
	deepEqual( Stem("lingurile"), "lingur" );
	deepEqual( Stem("linguşea"), "linguş" );
	deepEqual( Stem("linia"), "lini" );
	deepEqual( Stem("linie"), "lin" );
	deepEqual( Stem("liniei"), "lin" );
	deepEqual( Stem("linii"), "lin" );
	deepEqual( Stem("liniile"), "lin" );
	deepEqual( Stem("linişte"), "linişt" );
	deepEqual( Stem("liniştea"), "linişt" );
	deepEqual( Stem("liniştesc"), "linişt" );
	deepEqual( Stem("linişteşte"), "linişt" );
	deepEqual( Stem("liniştirea"), "linişt" );
	deepEqual( Stem("liniştit"), "linişt" );
	deepEqual( Stem("liniştită"), "linişt" );
	deepEqual( Stem("liniştitoare"), "linişt" );
	deepEqual( Stem("liniştitor"), "linişt" );
	deepEqual( Stem("liniştiţi"), "linişt" );
	deepEqual( Stem("liniuţa"), "liniuţ" );
	deepEqual( Stem("liniuţă"), "liniuţ" );
	deepEqual( Stem("lins"), "lins" );
	deepEqual( Stem("linsese"), "lin" );
	deepEqual( Stem("linşat"), "linşat" );
	deepEqual( Stem("linşeze"), "linş" );
	deepEqual( Stem("linux"), "linux" );
	deepEqual( Stem("linx"), "linx" );
	deepEqual( Stem("liota"), "liot" );
	deepEqual( Stem("lipea"), "lip" );
	deepEqual( Stem("lipeam"), "lipeam" );
	deepEqual( Stem("lipesc"), "lipesc" );
	deepEqual( Stem("lipeşte"), "lipeşt" );
	deepEqual( Stem("lipi"), "lip" );
	deepEqual( Stem("lipici"), "lipic" );
	deepEqual( Stem("lipicioasă"), "lipic" );
	deepEqual( Stem("lipicios"), "lipic" );
	deepEqual( Stem("lipiciul"), "lipic" );
	deepEqual( Stem("lipirea"), "lipir" );
	deepEqual( Stem("lipit"), "lipit" );
	deepEqual( Stem("lipită"), "lipit" );
	deepEqual( Stem("lipite"), "lipit" );
	deepEqual( Stem("lipitoare"), "lipit" );
	deepEqual( Stem("lipitoarea"), "lipit" );
	deepEqual( Stem("lipitorile"), "lipit" );
	deepEqual( Stem("lipitură"), "lipit" );
	deepEqual( Stem("lipituri"), "lipitur" );
	deepEqual( Stem("lipiţi"), "lip" );
	deepEqual( Stem("lipsa"), "lips" );
	deepEqual( Stem("lipsă"), "lips" );
	deepEqual( Stem("lipsea"), "lip" );
	deepEqual( Stem("lipsească"), "lips" );
	deepEqual( Stem("lipsei"), "lip" );
	deepEqual( Stem("lipsesc"), "lips" );
	deepEqual( Stem("lipseşte"), "lips" );
	deepEqual( Stem("lipsi"), "lips" );
	deepEqual( Stem("lipsit"), "lipsit" );
	deepEqual( Stem("lipsită"), "lipsit" );
	deepEqual( Stem("lipsiţi"), "lips" );
	deepEqual( Stem("lipsurile"), "lipsur" );
	deepEqual( Stem("liră"), "lir" );
	deepEqual( Stem("lirei"), "lire" );
	deepEqual( Stem("lirele"), "lir" );
	deepEqual( Stem("lirelor"), "lir" );
	deepEqual( Stem("lirică"), "liric" );
	deepEqual( Stem("lirice"), "liric" );
	deepEqual( Stem("lirism"), "lirism" );
	deepEqual( Stem("lisandru"), "lisandru" );
	deepEqual( Stem("lista"), "list" );
	deepEqual( Stem("litanie"), "litan" );
	deepEqual( Stem("litera"), "liter" );
	deepEqual( Stem("literal"), "literal" );
	deepEqual( Stem("literalmente"), "literalment" );
	deepEqual( Stem("literalului"), "literal" );
	deepEqual( Stem("literar"), "literar" );
	deepEqual( Stem("literară"), "liter" );
	deepEqual( Stem("literare"), "liter" );
	deepEqual( Stem("literari"), "literar" );
	deepEqual( Stem("literat"), "liter" );
	deepEqual( Stem("literato"), "literato" );
	deepEqual( Stem("literatori"), "liter" );
	deepEqual( Stem("literatorul"), "liter" );
	deepEqual( Stem("literatul"), "liter" );
	deepEqual( Stem("literatului"), "liter" );
	deepEqual( Stem("literatura"), "literatur" );
	deepEqual( Stem("literatură"), "literat" );
	deepEqual( Stem("literaturi"), "literatur" );
	deepEqual( Stem("literaturii"), "literatur" );
	deepEqual( Stem("literaţi"), "liter" );
	deepEqual( Stem("literaţilor"), "liter" );
	deepEqual( Stem("literă"), "liter" );
	deepEqual( Stem("litere"), "liter" );
	deepEqual( Stem("literelor"), "liter" );
	deepEqual( Stem("litigii"), "litig" );
	deepEqual( Stem("litigioase"), "litig" );
	deepEqual( Stem("litigiu"), "litigiu" );
	deepEqual( Stem("litografiate"), "litograf" );
	deepEqual( Stem("litografie"), "litograf" );
	deepEqual( Stem("litri"), "litr" );
	deepEqual( Stem("litru"), "litru" );
	deepEqual( Stem("litteram"), "litter" );
	deepEqual( Stem("liturghie"), "liturgh" );
	deepEqual( Stem("liturgică"), "liturg" );
	deepEqual( Stem("liturgice"), "liturg" );
	deepEqual( Stem("livadă"), "livad" );
	deepEqual( Stem("livezi"), "livez" );
	deepEqual( Stem("livezile"), "livez" );
	deepEqual( Stem("livid"), "livid" );
	deepEqual( Stem("lividă"), "livid" );
	deepEqual( Stem("livide"), "livid" );
	deepEqual( Stem("liviu"), "liviu" );
	deepEqual( Stem("livizi"), "liviz" );
	deepEqual( Stem("livra"), "livr" );
	deepEqual( Stem("livrare"), "livr" );
	deepEqual( Stem("livrat"), "livrat" );
	deepEqual( Stem("livrată"), "livrat" );
	deepEqual( Stem("livrăm"), "livr" );
	deepEqual( Stem("livrării"), "livrăr" );
	deepEqual( Stem("livrările"), "livrăr" );
	deepEqual( Stem("livrează"), "livr" );
	deepEqual( Stem("livresc"), "livr" );
	deepEqual( Stem("livrescă"), "livresc" );
	deepEqual( Stem("livreşti"), "livr" );
	deepEqual( Stem("livreze"), "livr" );
	deepEqual( Stem("livrînd"), "livrînd" );
	deepEqual( Stem("lizibil"), "lizibil" );
	deepEqual( Stem("lizibilă"), "lizibil" );
	deepEqual( Stem("lizibilitate"), "lizibil" );
	deepEqual( Stem("lizibilităţii"), "lizibil" );
	deepEqual( Stem("lizozomi"), "lizozom" );
	deepEqual( Stem("llosa"), "llos" );
	deepEqual( Stem("lobacevski"), "lobacevsk" );
	deepEqual( Stem("lobi"), "lob" );
	deepEqual( Stem("loc"), "loc" );
	deepEqual( Stem("local"), "local" );
	deepEqual( Stem("locală"), "local" );
	deepEqual( Stem("locale"), "local" );
	deepEqual( Stem("localitate"), "local" );
	deepEqual( Stem("localităţi"), "local" );
	deepEqual( Stem("localiza"), "localiz" );
	deepEqual( Stem("localizarea"), "localiz" );
	deepEqual( Stem("localizat"), "localiz" );
	deepEqual( Stem("localizată"), "localiz" );
	deepEqual( Stem("localizate"), "localiz" );
	deepEqual( Stem("localizării"), "localizăr" );
	deepEqual( Stem("localizeze"), "localiz" );
	deepEqual( Stem("localnic"), "localn" );
	deepEqual( Stem("localnicii"), "localn" );
	deepEqual( Stem("localul"), "local" );
	deepEqual( Stem("localurile"), "localur" );
	deepEqual( Stem("locaş"), "locaş" );
	deepEqual( Stem("locke"), "lock" );
	deepEqual( Stem("locomotivă"), "locomot" );
	deepEqual( Stem("locomotive"), "locomot" );
	deepEqual( Stem("locomoţiune"), "locomot" );
	deepEqual( Stem("locotenent"), "locotenent" );
	deepEqual( Stem("locotenentul"), "locotenent" );
	deepEqual( Stem("locuia"), "locui" );
	deepEqual( Stem("locuiesc"), "locui" );
	deepEqual( Stem("locuieşte"), "locui" );
	deepEqual( Stem("locuim"), "locu" );
	deepEqual( Stem("locuinţa"), "locuinţ" );
	deepEqual( Stem("locuinţă"), "locuinţ" );
	deepEqual( Stem("locuinţe"), "locuinţ" );
	deepEqual( Stem("locuise"), "locu" );
	deepEqual( Stem("locuite"), "locuit" );
	deepEqual( Stem("locuitori"), "locuit" );
	deepEqual( Stem("locuitorii"), "locuit" );
	deepEqual( Stem("locuitorilor"), "locuit" );
	deepEqual( Stem("locuitorul"), "locuit" );
	deepEqual( Stem("locul"), "loc" );
	deepEqual( Stem("locului"), "loc" );
	deepEqual( Stem("locuri"), "locur" );
	deepEqual( Stem("locurile"), "locur" );
	deepEqual( Stem("locurilor"), "locur" );
	deepEqual( Stem("locuţiune"), "locut" );
	deepEqual( Stem("logic"), "logic" );
	deepEqual( Stem("logica"), "logic" );
	deepEqual( Stem("logicae"), "logica" );
	deepEqual( Stem("logică"), "logic" );
	deepEqual( Stem("logice"), "logic" );
	deepEqual( Stem("logicei"), "logice" );
	deepEqual( Stem("logiceşte"), "logic" );
	deepEqual( Stem("logicieni"), "logicien" );
	deepEqual( Stem("logicienii"), "logicien" );
	deepEqual( Stem("logicii"), "logic" );
	deepEqual( Stem("logodnici"), "logodn" );
	deepEqual( Stem("loial"), "loial" );
	deepEqual( Stem("loială"), "loial" );
	deepEqual( Stem("loialitate"), "loial" );
	deepEqual( Stem("loialitatea"), "loial" );
	deepEqual( Stem("loialităţii"), "loial" );
	deepEqual( Stem("longevitatea"), "longev" );
	deepEqual( Stem("lopeţi"), "lop" );
	deepEqual( Stem("lor"), "lor" );
	deepEqual( Stem("lordului"), "lord" );
	deepEqual( Stem("lorenei"), "lorene" );
	deepEqual( Stem("lornion"), "lornion" );
	deepEqual( Stem("lornionul"), "lornion" );
	deepEqual( Stem("loterie"), "loter" );
	deepEqual( Stem("lotul"), "lot" );
	deepEqual( Stem("lovea"), "lov" );
	deepEqual( Stem("lovească"), "loveasc" );
	deepEqual( Stem("lovesc"), "lovesc" );
	deepEqual( Stem("loveşte"), "loveşt" );
	deepEqual( Stem("loveşti"), "loveşt" );
	deepEqual( Stem("lovi"), "lov" );
	deepEqual( Stem("lovim"), "lov" );
	deepEqual( Stem("lovind"), "lovind" );
	deepEqual( Stem("lovirii"), "lovir" );
	deepEqual( Stem("lovise"), "lovis" );
	deepEqual( Stem("lovit"), "lovit" );
	deepEqual( Stem("lovite"), "lovit" );
	deepEqual( Stem("lovitura"), "lovitur" );
	deepEqual( Stem("lovitură"), "lovit" );
	deepEqual( Stem("lovituri"), "lovitur" );
	deepEqual( Stem("loviturii"), "lovitur" );
	deepEqual( Stem("loviturile"), "lovitur" );
	deepEqual( Stem("loviţi"), "lov" );
	deepEqual( Stem("lua"), "lua" );
	deepEqual( Stem("luam"), "luam" );
	deepEqual( Stem("luare"), "luar" );
	deepEqual( Stem("luarea"), "luar" );
	deepEqual( Stem("luase"), "lua" );
	deepEqual( Stem("luasem"), "luas" );
	deepEqual( Stem("luat"), "luat" );
	deepEqual( Stem("luată"), "luat" );
	deepEqual( Stem("luate"), "luat" );
	deepEqual( Stem("luaţi"), "luaţ" );
	deepEqual( Stem("luau"), "luau" );
	deepEqual( Stem("luând"), "luând" );
	deepEqual( Stem("luându"), "luându" );
	deepEqual( Stem("luă"), "luă" );
	deepEqual( Stem("luăm"), "luăm" );
	deepEqual( Stem("lucica"), "lucic" );
	deepEqual( Stem("lucid"), "lucid" );
	deepEqual( Stem("lucidă"), "lucid" );
	deepEqual( Stem("lucide"), "lucid" );
	deepEqual( Stem("luciditate"), "lucid" );
	deepEqual( Stem("luciditatea"), "lucid" );
	deepEqual( Stem("lucilei"), "lucile" );
	deepEqual( Stem("lucioase"), "lucioas" );
	deepEqual( Stem("lucire"), "lucir" );
	deepEqual( Stem("luciri"), "lucir" );
	deepEqual( Stem("luciul"), "luc" );
	deepEqual( Stem("lucra"), "lucr" );
	deepEqual( Stem("lucrare"), "lucr" );
	deepEqual( Stem("lucrarea"), "lucr" );
	deepEqual( Stem("lucrase"), "lucr" );
	deepEqual( Stem("lucrat"), "lucrat" );
	deepEqual( Stem("lucrată"), "lucrat" );
	deepEqual( Stem("lucrate"), "lucrat" );
	deepEqual( Stem("lucraţi"), "lucr" );
	deepEqual( Stem("lucrând"), "lucr" );
	deepEqual( Stem("lucrăm"), "lucr" );
	deepEqual( Stem("lucrările"), "lucrăr" );
	deepEqual( Stem("lucrător"), "lucrat" );
	deepEqual( Stem("lucrători"), "lucrat" );
	deepEqual( Stem("lucrătorii"), "lucrat" );
	deepEqual( Stem("lucrătorilor"), "lucrat" );
	deepEqual( Stem("lucrătorul"), "lucrat" );
	deepEqual( Stem("lucrătorului"), "lucrat" );
	deepEqual( Stem("lucrează"), "lucr" );
	deepEqual( Stem("lucrez"), "lucr" );
	deepEqual( Stem("lucreze"), "lucr" );
	deepEqual( Stem("lucru"), "lucru" );
	deepEqual( Stem("lucrul"), "lucr" );
	deepEqual( Stem("lucrului"), "lucr" );
	deepEqual( Stem("lucruri"), "lucrur" );
	deepEqual( Stem("lucrurile"), "lucrur" );
	deepEqual( Stem("lucrurilor"), "lucrur" );
	deepEqual( Stem("ludendorff"), "ludendorff" );
	deepEqual( Stem("lugubră"), "lugubr" );
	deepEqual( Stem("lui"), "lui" );
	deepEqual( Stem("lujerilor"), "lujer" );
	deepEqual( Stem("lumânăraru"), "lumânăraru" );
	deepEqual( Stem("lumânărarule"), "lumânărarul" );
	deepEqual( Stem("lumânărarului"), "lumânărar" );
	deepEqual( Stem("lumânări"), "lumânăr" );
	deepEqual( Stem("lumânărilor"), "lumânăr" );
	deepEqual( Stem("lume"), "lum" );
	deepEqual( Stem("lumea"), "lum" );
	deepEqual( Stem("lumei"), "lume" );
	deepEqual( Stem("lumi"), "lum" );
	deepEqual( Stem("lumii"), "lum" );
	deepEqual( Stem("lumile"), "lum" );
	deepEqual( Stem("lumina"), "lumin" );
	deepEqual( Stem("luminarea"), "lumin" );
	deepEqual( Stem("luminat"), "lumin" );
	deepEqual( Stem("luminată"), "lumin" );
	deepEqual( Stem("luminate"), "lumin" );
	deepEqual( Stem("luminaţi"), "lumin" );
	deepEqual( Stem("lumină"), "lumin" );
	deepEqual( Stem("luminătorul"), "lumin" );
	deepEqual( Stem("luminează"), "lumin" );
	deepEqual( Stem("lumineze"), "lumin" );
	deepEqual( Stem("lumini"), "lumin" );
	deepEqual( Stem("luminii"), "lumin" );
	deepEqual( Stem("luminiş"), "luminiş" );
	deepEqual( Stem("luminişul"), "luminiş" );
	deepEqual( Stem("luminişuri"), "luminişur" );
	deepEqual( Stem("luminişurile"), "luminişur" );
	deepEqual( Stem("luminoasă"), "lumin" );
	deepEqual( Stem("luminoase"), "lumin" );
	deepEqual( Stem("luminos"), "lumin" );
	deepEqual( Stem("luna"), "lun" );
	deepEqual( Stem("lunare"), "lunar" );
	deepEqual( Stem("lună"), "lun" );
	deepEqual( Stem("lunca"), "lunc" );
	deepEqual( Stem("luncă"), "lunc" );
	deepEqual( Stem("luneca"), "lunec" );
	deepEqual( Stem("lunecând"), "lunec" );
	deepEqual( Stem("lunecuşuri"), "lunecuşur" );
	deepEqual( Stem("lung"), "lung" );
	deepEqual( Stem("lunga"), "lung" );
	deepEqual( Stem("lungă"), "lung" );
	deepEqual( Stem("lungea"), "lung" );
	deepEqual( Stem("lungesc"), "lung" );
	deepEqual( Stem("lungeşte"), "lung" );
	deepEqual( Stem("lungi"), "lung" );
	deepEqual( Stem("lungile"), "lung" );
	deepEqual( Stem("lungim"), "lung" );
	deepEqual( Stem("lungime"), "lungim" );
	deepEqual( Stem("lungimea"), "lungim" );
	deepEqual( Stem("lungind"), "lung" );
	deepEqual( Stem("lungisem"), "lung" );
	deepEqual( Stem("lungit"), "lungit" );
	deepEqual( Stem("lungită"), "lungit" );
	deepEqual( Stem("lungite"), "lungit" );
	deepEqual( Stem("lungiţi"), "lung" );
	deepEqual( Stem("lungul"), "lung" );
	deepEqual( Stem("luni"), "lun" );
	deepEqual( Stem("lunii"), "lun" );
	deepEqual( Stem("lup"), "lup" );
	deepEqual( Stem("lupaşcu"), "lupaşcu" );
	deepEqual( Stem("lupă"), "lup" );
	deepEqual( Stem("lupi"), "lup" );
	deepEqual( Stem("lupt"), "lupt" );
	deepEqual( Stem("lupta"), "lupt" );
	deepEqual( Stem("luptam"), "lupt" );
	deepEqual( Stem("luptasem"), "lupt" );
	deepEqual( Stem("luptat"), "luptat" );
	deepEqual( Stem("luptând"), "lupt" );
	deepEqual( Stem("luptându"), "lupt" );
	deepEqual( Stem("luptă"), "lupt" );
	deepEqual( Stem("luptăm"), "lupt" );
	deepEqual( Stem("luptători"), "luptat" );
	deepEqual( Stem("luptătorii"), "luptat" );
	deepEqual( Stem("lupte"), "lupt" );
	deepEqual( Stem("luptei"), "lupte" );
	deepEqual( Stem("luptele"), "lupt" );
	deepEqual( Stem("luptelor"), "lupt" );
	deepEqual( Stem("lupţi"), "lupţ" );
	deepEqual( Stem("lupul"), "lup" );
	deepEqual( Stem("lustru"), "lustru" );
	deepEqual( Stem("lut"), "lut" );
	deepEqual( Stem("lux"), "lux" );
	deepEqual( Stem("luxemburg"), "luxemburg" );
	deepEqual( Stem("luxoasă"), "luxoas" );
	deepEqual( Stem("luxoase"), "luxoas" );
	deepEqual( Stem("luxului"), "lux" );
	deepEqual( Stem("lys"), "lys" );
	deepEqual( Stem("m"), "m" );
	deepEqual( Stem("ma"), "ma" );
	deepEqual( Stem("macagiu"), "macagiu" );
	deepEqual( Stem("macaroane"), "macaroan" );
	deepEqual( Stem("macdonald"), "macdonald" );
	deepEqual( Stem("macedoneană"), "macedonean" );
	deepEqual( Stem("mach"), "mach" );
	deepEqual( Stem("machiat"), "machiat" );
	deepEqual( Stem("machiată"), "machiat" );
	deepEqual( Stem("macină"), "macin" );
	deepEqual( Stem("mackensen"), "mackensen" );
	deepEqual( Stem("madam"), "madam" );
	deepEqual( Stem("madeleine"), "madelein" );
	deepEqual( Stem("madona"), "madon" );
	deepEqual( Stem("madonă"), "madon" );
	deepEqual( Stem("magazia"), "magaz" );
	deepEqual( Stem("magazin"), "magazin" );
	deepEqual( Stem("magazinelor"), "magazin" );
	deepEqual( Stem("magică"), "magic" );
	deepEqual( Stem("magii"), "mag" );
	deepEqual( Stem("magilor"), "mag" );
	deepEqual( Stem("magistrat"), "magistr" );
	deepEqual( Stem("magistraţi"), "magistr" );
	deepEqual( Stem("magnetic"), "magnet" );
	deepEqual( Stem("magnetism"), "magnetist" );
	deepEqual( Stem("magnific"), "magnif" );
	deepEqual( Stem("magnifică"), "magnif" );
	deepEqual( Stem("mahala"), "mahal" );
	deepEqual( Stem("mahalagiul"), "mahalag" );
	deepEqual( Stem("mahalaua"), "mahalau" );
	deepEqual( Stem("mahmuri"), "mahmur" );
	deepEqual( Stem("mahrholz"), "mahrholz" );
	deepEqual( Stem("mai"), "mai" );
	deepEqual( Stem("maica"), "maic" );
	deepEqual( Stem("maiestate"), "maiest" );
	deepEqual( Stem("maiestuos"), "maiestu" );
	deepEqual( Stem("maimuţăreală"), "maimuţăreal" );
	deepEqual( Stem("maimuţărească"), "maimuţăr" );
	deepEqual( Stem("maior"), "maior" );
	deepEqual( Stem("maiori"), "maior" );
	deepEqual( Stem("maiorul"), "maior" );
	deepEqual( Stem("maiorului"), "maior" );
	deepEqual( Stem("maioul"), "maio" );
	deepEqual( Stem("maistru"), "maistru" );
	deepEqual( Stem("maistrul"), "maistr" );
	deepEqual( Stem("maiştri"), "maiştr" );
	deepEqual( Stem("maiul"), "mai" );
	deepEqual( Stem("majestatea"), "majest" );
	deepEqual( Stem("majolică"), "majol" );
	deepEqual( Stem("major"), "major" );
	deepEqual( Stem("majorat"), "major" );
	deepEqual( Stem("majore"), "major" );
	deepEqual( Stem("majori"), "major" );
	deepEqual( Stem("majoritate"), "major" );
	deepEqual( Stem("majoritatea"), "major" );
	deepEqual( Stem("majorităţi"), "major" );
	deepEqual( Stem("majorităţii"), "major" );
	deepEqual( Stem("mal"), "mal" );
	deepEqual( Stem("maladii"), "malad" );
	deepEqual( Stem("maleabilitatea"), "maleabil" );
	deepEqual( Stem("maltratate"), "maltrat" );
	deepEqual( Stem("maltratează"), "maltrat" );
	deepEqual( Stem("malul"), "mal" );
	deepEqual( Stem("malului"), "mal" );
	deepEqual( Stem("maluri"), "malur" );
	deepEqual( Stem("mama"), "mam" );
	deepEqual( Stem("mamaia"), "mamai" );
	deepEqual( Stem("mamă"), "mam" );
	deepEqual( Stem("mame"), "mam" );
	deepEqual( Stem("mamei"), "mame" );
	deepEqual( Stem("manas"), "manas" );
	deepEqual( Stem("manechin"), "manechin" );
	deepEqual( Stem("manechine"), "manechin" );
	deepEqual( Stem("manejuri"), "manejur" );
	deepEqual( Stem("manevrat"), "manevr" );
	deepEqual( Stem("manevră"), "manevr" );
	deepEqual( Stem("manevre"), "manevr" );
	deepEqual( Stem("manevrează"), "manevr" );
	deepEqual( Stem("manevreze"), "manevr" );
	deepEqual( Stem("mania"), "mani" );
	deepEqual( Stem("maniac"), "maniac" );
	deepEqual( Stem("maniacul"), "maniac" );
	deepEqual( Stem("manieră"), "manier" );
	deepEqual( Stem("manifesta"), "manifest" );
	deepEqual( Stem("manifestare"), "manifest" );
	deepEqual( Stem("manifestat"), "manifest" );
	deepEqual( Stem("manifestate"), "manifest" );
	deepEqual( Stem("manifestaţiilor"), "manifest" );
	deepEqual( Stem("manifestă"), "manifest" );
	deepEqual( Stem("manifestări"), "manifestăr" );
	deepEqual( Stem("manifeste"), "manifest" );
	deepEqual( Stem("manifestează"), "manifest" );
	deepEqual( Stem("manivelele"), "manivel" );
	deepEqual( Stem("manopere"), "manop" );
	deepEqual( Stem("manşetele"), "manşet" );
	deepEqual( Stem("manta"), "mant" );
	deepEqual( Stem("mantale"), "mantal" );
	deepEqual( Stem("mantalei"), "mantale" );
	deepEqual( Stem("mantaua"), "mantau" );
	deepEqual( Stem("manuale"), "manual" );
	deepEqual( Stem("manufactură"), "manufact" );
	deepEqual( Stem("manufacturismului"), "manufacturist" );
	deepEqual( Stem("manufacturist"), "manufacturist" );
	deepEqual( Stem("manuscris"), "manuscris" );
	deepEqual( Stem("marame"), "maram" );
	deepEqual( Stem("marburg"), "marburg" );
	deepEqual( Stem("marca"), "marc" );
	deepEqual( Stem("marcat"), "marcat" );
	deepEqual( Stem("marcă"), "marc" );
	deepEqual( Stem("marchitani"), "marchitan" );
	deepEqual( Stem("marchiză"), "marchiz" );
	deepEqual( Stem("marda"), "mard" );
	deepEqual( Stem("mare"), "mar" );
	deepEqual( Stem("marea"), "mar" );
	deepEqual( Stem("marele"), "mar" );
	deepEqual( Stem("marelui"), "marel" );
	deepEqual( Stem("marfă"), "marf" );
	deepEqual( Stem("margine"), "margin" );
	deepEqual( Stem("marginea"), "margin" );
	deepEqual( Stem("margini"), "margin" );
	deepEqual( Stem("marginile"), "margin" );
	deepEqual( Stem("marginilor"), "margin" );
	deepEqual( Stem("marginirile"), "marginir" );
	deepEqual( Stem("mari"), "mar" );
	deepEqual( Stem("maria"), "mari" );
	deepEqual( Stem("mariaj"), "mariaj" );
	deepEqual( Stem("mariale"), "marial" );
	deepEqual( Stem("marie"), "mar" );
	deepEqual( Stem("mariei"), "mar" );
	deepEqual( Stem("marii"), "mar" );
	deepEqual( Stem("marile"), "mar" );
	deepEqual( Stem("marilor"), "mar" );
	deepEqual( Stem("marimbafon"), "marimbafon" );
	deepEqual( Stem("marin"), "marin" );
	deepEqual( Stem("marinar"), "marinar" );
	deepEqual( Stem("marinate"), "marin" );
	deepEqual( Stem("marină"), "marin" );
	deepEqual( Stem("marine"), "marin" );
	deepEqual( Stem("marinescu"), "marinescu" );
	deepEqual( Stem("marionetă"), "marionet" );
	deepEqual( Stem("marionete"), "marionet" );
	deepEqual( Stem("marital"), "marital" );
	deepEqual( Stem("maritimă"), "maritim" );
	deepEqual( Stem("maritime"), "maritim" );
	deepEqual( Stem("marius"), "marius" );
	deepEqual( Stem("marjă"), "marj" );
	deepEqual( Stem("markov"), "markov" );
	deepEqual( Stem("marmotă"), "marmot" );
	deepEqual( Stem("marmură"), "marm" );
	deepEqual( Stem("marmurelor"), "marmur" );
	deepEqual( Stem("marna"), "marn" );
	deepEqual( Stem("maro"), "maro" );
	deepEqual( Stem("marocan"), "marocan" );
	deepEqual( Stem("marocul"), "maroc" );
	deepEqual( Stem("maroniu"), "maroniu" );
	deepEqual( Stem("marquez"), "marqu" );
	deepEqual( Stem("marş"), "marş" );
	deepEqual( Stem("marşa"), "marş" );
	deepEqual( Stem("marşat"), "marşat" );
	deepEqual( Stem("marşul"), "marş" );
	deepEqual( Stem("marşului"), "marş" );
	deepEqual( Stem("marşuri"), "marşur" );
	deepEqual( Stem("marte"), "mart" );
	deepEqual( Stem("martie"), "mart" );
	deepEqual( Stem("martir"), "martir" );
	deepEqual( Stem("martiraj"), "martiraj" );
	deepEqual( Stem("martirajul"), "martiraj" );
	deepEqual( Stem("martiri"), "martir" );
	deepEqual( Stem("martirice"), "martir" );
	deepEqual( Stem("martirii"), "martir" );
	deepEqual( Stem("martiriu"), "martiriu" );
	deepEqual( Stem("martori"), "martor" );
	deepEqual( Stem("marţi"), "marţ" );
	deepEqual( Stem("marţială"), "marţial" );
	deepEqual( Stem("marţiale"), "marţial" );
	deepEqual( Stem("marţian"), "marţian" );
	deepEqual( Stem("marţiană"), "marţian" );
	deepEqual( Stem("marx"), "marx" );
	deepEqual( Stem("marxismului"), "marxism" );
	deepEqual( Stem("marxist"), "marxist" );
	deepEqual( Stem("marxiste"), "marxist" );
	deepEqual( Stem("marxistul"), "marxist" );
	deepEqual( Stem("masa"), "mas" );
	deepEqual( Stem("masaje"), "masaj" );
	deepEqual( Stem("masă"), "mas" );
	deepEqual( Stem("mascarada"), "mascarad" );
	deepEqual( Stem("mascare"), "masc" );
	deepEqual( Stem("mascat"), "mascat" );
	deepEqual( Stem("mască"), "masc" );
	deepEqual( Stem("mascheze"), "masch" );
	deepEqual( Stem("mase"), "mas" );
	deepEqual( Stem("masei"), "mase" );
	deepEqual( Stem("masele"), "mas" );
	deepEqual( Stem("maselor"), "mas" );
	deepEqual( Stem("masiv"), "masiv" );
	deepEqual( Stem("masivă"), "masiv" );
	deepEqual( Stem("maslu"), "maslu" );
	deepEqual( Stem("maşina"), "maşin" );
	deepEqual( Stem("maşinal"), "maşinal" );
	deepEqual( Stem("maşină"), "maşin" );
	deepEqual( Stem("maşinăria"), "maşinăr" );
	deepEqual( Stem("maşini"), "maşin" );
	deepEqual( Stem("maşinile"), "maşin" );
	deepEqual( Stem("matei"), "mate" );
	deepEqual( Stem("mateiaş"), "mateiaş" );
	deepEqual( Stem("mateiaşul"), "mateiaş" );
	deepEqual( Stem("mateiaşului"), "mateiaş" );
	deepEqual( Stem("matematic"), "matemat" );
	deepEqual( Stem("matematica"), "matemat" );
	deepEqual( Stem("matematică"), "matemat" );
	deepEqual( Stem("matematice"), "matemat" );
	deepEqual( Stem("matematicei"), "matematice" );
	deepEqual( Stem("matematiceşte"), "matematic" );
	deepEqual( Stem("matematici"), "matemat" );
	deepEqual( Stem("matematicianul"), "matematician" );
	deepEqual( Stem("matematicieni"), "matematicien" );
	deepEqual( Stem("matematicii"), "matemat" );
	deepEqual( Stem("matematicile"), "matemat" );
	deepEqual( Stem("matematicilor"), "matemat" );
	deepEqual( Stem("materia"), "mater" );
	deepEqual( Stem("material"), "material" );
	deepEqual( Stem("materială"), "material" );
	deepEqual( Stem("materiale"), "material" );
	deepEqual( Stem("materialism"), "materialist" );
	deepEqual( Stem("materialiste"), "materialist" );
	deepEqual( Stem("materialitatea"), "material" );
	deepEqual( Stem("materialul"), "material" );
	deepEqual( Stem("materialului"), "material" );
	deepEqual( Stem("materie"), "mater" );
	deepEqual( Stem("materiile"), "mater" );
	deepEqual( Stem("matură"), "matur" );
	deepEqual( Stem("maturitate"), "matur" );
	deepEqual( Stem("maţele"), "maţ" );
	deepEqual( Stem("max"), "max" );
	deepEqual( Stem("maxime"), "maxim" );
	deepEqual( Stem("maximilian"), "maximilian" );
	deepEqual( Stem("maximul"), "max" );
	deepEqual( Stem("maximum"), "maximum" );
	deepEqual( Stem("mazuriene"), "mazurien" );
	deepEqual( Stem("mâine"), "mâin" );
	deepEqual( Stem("mâini"), "mâin" );
	deepEqual( Stem("mâinii"), "mâin" );
	deepEqual( Stem("mâinile"), "mâin" );
	deepEqual( Stem("mâlul"), "mâl" );
	deepEqual( Stem("mâna"), "mân" );
	deepEqual( Stem("mânat"), "mânat" );
	deepEqual( Stem("mânaţi"), "mân" );
	deepEqual( Stem("mânându"), "mânându" );
	deepEqual( Stem("mână"), "mân" );
	deepEqual( Stem("mânăstirei"), "mânăstire" );
	deepEqual( Stem("mânca"), "mânc" );
	deepEqual( Stem("mâncare"), "mânc" );
	deepEqual( Stem("mâncat"), "mâncat" );
	deepEqual( Stem("mâncau"), "mânc" );
	deepEqual( Stem("mâncând"), "mânc" );
	deepEqual( Stem("mâncăm"), "mânc" );
	deepEqual( Stem("mâncării"), "mâncăr" );
	deepEqual( Stem("mâncăruri"), "mâncărur" );
	deepEqual( Stem("mâncărurile"), "mâncărur" );
	deepEqual( Stem("mândră"), "mândr" );
	deepEqual( Stem("mândri"), "mândr" );
	deepEqual( Stem("mândria"), "mândr" );
	deepEqual( Stem("mândrie"), "mândr" );
	deepEqual( Stem("mândriei"), "mândr" );
	deepEqual( Stem("mândro"), "mândro" );
	deepEqual( Stem("mândru"), "mândru" );
	deepEqual( Stem("mândruliţă"), "mândruliţ" );
	deepEqual( Stem("mâne"), "mân" );
	deepEqual( Stem("mânei"), "mâne" );
	deepEqual( Stem("mângâia"), "mângâi" );
	deepEqual( Stem("mângâiat"), "mângâi" );
	deepEqual( Stem("mângâiate"), "mângâi" );
	deepEqual( Stem("mângâie"), "mângâi" );
	deepEqual( Stem("mângâiere"), "mângâi" );
	deepEqual( Stem("mângâieri"), "mângâier" );
	deepEqual( Stem("mângâierile"), "mângâier" );
	deepEqual( Stem("mângâietoare"), "mângâietoar" );
	deepEqual( Stem("mângâietor"), "mângâietor" );
	deepEqual( Stem("mângâioasă"), "mângâi" );
	deepEqual( Stem("mânie"), "mân" );
	deepEqual( Stem("mânioasă"), "mânioas" );
	deepEqual( Stem("mânios"), "mânios" );
	deepEqual( Stem("mânjită"), "mânjit" );
	deepEqual( Stem("mânjite"), "mânjit" );
	deepEqual( Stem("mântuim"), "mântu" );
	deepEqual( Stem("mântuirea"), "mântu" );
	deepEqual( Stem("mântuirii"), "mântuir" );
	deepEqual( Stem("mântuitoare"), "mântuit" );
	deepEqual( Stem("mântuitorul"), "mântuit" );
	deepEqual( Stem("mânui"), "mânu" );
	deepEqual( Stem("mânuim"), "mânu" );
	deepEqual( Stem("mânuţele"), "mânuţ" );
	deepEqual( Stem("mârâia"), "mârâi" );
	deepEqual( Stem("mârţoage"), "mârţoag" );
	deepEqual( Stem("mă"), "mă" );
	deepEqual( Stem("măcar"), "măcar" );
	deepEqual( Stem("măcelăreau"), "măcelăr" );
	deepEqual( Stem("măcelul"), "măcel" );
	deepEqual( Stem("măcinare"), "măcin" );
	deepEqual( Stem("măcinarea"), "măcin" );
	deepEqual( Stem("măcinat"), "măcin" );
	deepEqual( Stem("măduva"), "măduv" );
	deepEqual( Stem("măgulit"), "măgul" );
	deepEqual( Stem("măgura"), "măgur" );
	deepEqual( Stem("măgurei"), "măgure" );
	deepEqual( Stem("măgurii"), "măgur" );
	deepEqual( Stem("măi"), "măi" );
	deepEqual( Stem("măiculiţă"), "măiculiţ" );
	deepEqual( Stem("mămăligă"), "mămălig" );
	deepEqual( Stem("mănânc"), "mănânc" );
	deepEqual( Stem("mănâncă"), "mănânc" );
	deepEqual( Stem("mănânce"), "mănânc" );
	deepEqual( Stem("mănânci"), "mănânc" );
	deepEqual( Stem("mănăstire"), "mănăst" );
	deepEqual( Stem("mănciulea"), "mănciul" );
	deepEqual( Stem("mănuşa"), "mănuş" );
	deepEqual( Stem("mănuşă"), "mănuş" );
	deepEqual( Stem("mănuşi"), "mănuş" );
	deepEqual( Stem("mănuşile"), "mănuş" );
	deepEqual( Stem("măr"), "măr" );
	deepEqual( Stem("măraru"), "măraru" );
	deepEqual( Stem("mărcii"), "mărc" );
	deepEqual( Stem("măresc"), "măresc" );
	deepEqual( Stem("măreşte"), "măreşt" );
	deepEqual( Stem("măreţ"), "măreţ" );
	deepEqual( Stem("mărginească"), "mărgin" );
	deepEqual( Stem("mărginesc"), "mărgin" );
	deepEqual( Stem("mărgineşte"), "mărgin" );
	deepEqual( Stem("mărginim"), "mărgin" );
	deepEqual( Stem("mărginit"), "mărgin" );
	deepEqual( Stem("mărginită"), "mărgin" );
	deepEqual( Stem("mărginite"), "mărgin" );
	deepEqual( Stem("mări"), "măr" );
	deepEqual( Stem("măricele"), "măric" );
	deepEqual( Stem("măricică"), "măric" );
	deepEqual( Stem("mărie"), "măr" );
	deepEqual( Stem("măriei"), "măr" );
	deepEqual( Stem("mării"), "măr" );
	deepEqual( Stem("mărim"), "măr" );
	deepEqual( Stem("mărime"), "mărim" );
	deepEqual( Stem("mărimea"), "mărim" );
	deepEqual( Stem("mărimi"), "mărim" );
	deepEqual( Stem("mărimile"), "mărim" );
	deepEqual( Stem("mărind"), "mărind" );
	deepEqual( Stem("mărinimie"), "mărinim" );
	deepEqual( Stem("mărioară"), "mărioar" );
	deepEqual( Stem("mărire"), "mărir" );
	deepEqual( Stem("măririle"), "mărir" );
	deepEqual( Stem("măriseră"), "măriser" );
	deepEqual( Stem("mărişoară"), "mărişoar" );
	deepEqual( Stem("mărit"), "mărit" );
	deepEqual( Stem("măritat"), "mărit" );
	deepEqual( Stem("măritată"), "mărit" );
	deepEqual( Stem("măritate"), "măritat" );
	deepEqual( Stem("mărită"), "mărit" );
	deepEqual( Stem("mărite"), "mărit" );
	deepEqual( Stem("măritoare"), "mărit" );
	deepEqual( Stem("măriţi"), "măr" );
	deepEqual( Stem("mărşăluiască"), "mărşăluiasc" );
	deepEqual( Stem("mărşăluim"), "mărşălu" );
	deepEqual( Stem("mărturisesc"), "mărturis" );
	deepEqual( Stem("mărturisim"), "mărturis" );
	deepEqual( Stem("mărturisind"), "mărturis" );
	deepEqual( Stem("mărturisire"), "mărturis" );
	deepEqual( Stem("mărturisiri"), "mărturisir" );
	deepEqual( Stem("mărturisit"), "mărturis" );
	deepEqual( Stem("mărturisită"), "mărturis" );
	deepEqual( Stem("mărunt"), "mărunt" );
	deepEqual( Stem("măruntaiele"), "măruntai" );
	deepEqual( Stem("măruntaielor"), "măruntai" );
	deepEqual( Stem("măruntă"), "mărunt" );
	deepEqual( Stem("mărunte"), "mărunt" );
	deepEqual( Stem("mărunţişuri"), "mărunţişur" );
	deepEqual( Stem("măslinele"), "măslin" );
	deepEqual( Stem("măsliniu"), "măsliniu" );
	deepEqual( Stem("măsoară"), "măsoar" );
	deepEqual( Stem("măsor"), "măsor" );
	deepEqual( Stem("măsura"), "măsur" );
	deepEqual( Stem("măsurabil"), "măsur" );
	deepEqual( Stem("măsurabilă"), "măsur" );
	deepEqual( Stem("măsurare"), "măsur" );
	deepEqual( Stem("măsurarea"), "măsur" );
	deepEqual( Stem("măsurat"), "măsur" );
	deepEqual( Stem("măsurată"), "măsur" );
	deepEqual( Stem("măsurate"), "măsur" );
	deepEqual( Stem("măsurau"), "măsur" );
	deepEqual( Stem("măsură"), "măsur" );
	deepEqual( Stem("măsurăm"), "măsurăm" );
	deepEqual( Stem("măsurătoare"), "măsur" );
	deepEqual( Stem("măsurătoarea"), "măsur" );
	deepEqual( Stem("măsurătorii"), "măsur" );
	deepEqual( Stem("măsurătorile"), "măsur" );
	deepEqual( Stem("măsuri"), "măsur" );
	deepEqual( Stem("măsurii"), "măsur" );
	deepEqual( Stem("măsurile"), "măsur" );
	deepEqual( Stem("măsurilor"), "măsur" );
	deepEqual( Stem("măsuţa"), "măsuţ" );
	deepEqual( Stem("măşti"), "măşt" );
	deepEqual( Stem("mătase"), "mătas" );
	deepEqual( Stem("măturând"), "mătur" );
	deepEqual( Stem("mătuşa"), "mătuş" );
	deepEqual( Stem("mătuşă"), "mătuş" );
	deepEqual( Stem("mătuşi"), "mătuş" );
	deepEqual( Stem("mătuşii"), "mătuş" );
	deepEqual( Stem("mătuşile"), "mătuş" );
	deepEqual( Stem("mea"), "mea" );
	deepEqual( Stem("meargă"), "mearg" );
	deepEqual( Stem("mecanica"), "mecan" );
	deepEqual( Stem("mecanică"), "mecan" );
	deepEqual( Stem("mecanici"), "mecan" );
	deepEqual( Stem("mecanism"), "mecanist" );
	deepEqual( Stem("mecanismul"), "mecanist" );
	deepEqual( Stem("mecanismului"), "mecanist" );
	deepEqual( Stem("mediată"), "mediat" );
	deepEqual( Stem("medic"), "medic" );
	deepEqual( Stem("medical"), "medic" );
	deepEqual( Stem("medicală"), "medic" );
	deepEqual( Stem("medicamentaţie"), "medicament" );
	deepEqual( Stem("medicaţia"), "medic" );
	deepEqual( Stem("medici"), "medic" );
	deepEqual( Stem("medicii"), "medic" );
	deepEqual( Stem("medicina"), "medicin" );
	deepEqual( Stem("medicină"), "medicin" );
	deepEqual( Stem("medicul"), "medic" );
	deepEqual( Stem("medieval"), "medieval" );
	deepEqual( Stem("medievale"), "medieval" );
	deepEqual( Stem("mediocră"), "mediocr" );
	deepEqual( Stem("mediocre"), "mediocr" );
	deepEqual( Stem("mediocri"), "mediocr" );
	deepEqual( Stem("mediocru"), "mediocru" );
	deepEqual( Stem("meditaţie"), "medit" );
	deepEqual( Stem("meditaţiei"), "medit" );
	deepEqual( Stem("medităm"), "medit" );
	deepEqual( Stem("mediteze"), "medit" );
	deepEqual( Stem("mediu"), "mediu" );
	deepEqual( Stem("mediul"), "med" );
	deepEqual( Stem("meduză"), "meduz" );
	deepEqual( Stem("mei"), "mei" );
	deepEqual( Stem("melancolic"), "melancol" );
	deepEqual( Stem("melancolică"), "melancol" );
	deepEqual( Stem("melancolie"), "melancol" );
	deepEqual( Stem("melancoliei"), "melancol" );
	deepEqual( Stem("melancolii"), "melancol" );
	deepEqual( Stem("melci"), "melc" );
	deepEqual( Stem("mele"), "mel" );
	deepEqual( Stem("melodiei"), "melod" );
	deepEqual( Stem("melodramatic"), "melodramat" );
	deepEqual( Stem("melodramă"), "melodram" );
	deepEqual( Stem("membrele"), "membr" );
	deepEqual( Stem("membri"), "membr" );
	deepEqual( Stem("membrii"), "membr" );
	deepEqual( Stem("membru"), "membru" );
	deepEqual( Stem("memel"), "memel" );
	deepEqual( Stem("memento"), "memento" );
	deepEqual( Stem("memorabil"), "memor" );
	deepEqual( Stem("memorabilă"), "memor" );
	deepEqual( Stem("memorează"), "memor" );
	deepEqual( Stem("memoria"), "memor" );
	deepEqual( Stem("memorie"), "memor" );
	deepEqual( Stem("memoriei"), "memor" );
	deepEqual( Stem("memorizează"), "memoriz" );
	deepEqual( Stem("menită"), "menit" );
	deepEqual( Stem("menite"), "menit" );
	deepEqual( Stem("meniul"), "men" );
	deepEqual( Stem("mental"), "mental" );
	deepEqual( Stem("mentalitate"), "mental" );
	deepEqual( Stem("mentalitatea"), "mental" );
	deepEqual( Stem("mentalităţilor"), "mental" );
	deepEqual( Stem("menţinerea"), "menţin" );
	deepEqual( Stem("menţinute"), "menţin" );
	deepEqual( Stem("mere"), "mer" );
	deepEqual( Stem("merele"), "mer" );
	deepEqual( Stem("mereu"), "mereu" );
	deepEqual( Stem("merg"), "merg" );
	deepEqual( Stem("mergând"), "merg" );
	deepEqual( Stem("merge"), "merg" );
	deepEqual( Stem("mergea"), "merg" );
	deepEqual( Stem("mergeam"), "merg" );
	deepEqual( Stem("mergeau"), "merg" );
	deepEqual( Stem("mergem"), "merg" );
	deepEqual( Stem("mergeţi"), "merg" );
	deepEqual( Stem("mergi"), "merg" );
	deepEqual( Stem("meri"), "mer" );
	deepEqual( Stem("meridian"), "meridian" );
	deepEqual( Stem("meridional"), "meridional" );
	deepEqual( Stem("meridionali"), "meridional" );
	deepEqual( Stem("merinde"), "merind" );
	deepEqual( Stem("merit"), "merit" );
	deepEqual( Stem("merita"), "merit" );
	deepEqual( Stem("meritam"), "merit" );
	deepEqual( Stem("merită"), "merit" );
	deepEqual( Stem("merite"), "merit" );
	deepEqual( Stem("meritul"), "merit" );
	deepEqual( Stem("mers"), "mers" );
	deepEqual( Stem("mersese"), "mer" );
	deepEqual( Stem("mersul"), "mers" );
	deepEqual( Stem("meschină"), "meschin" );
	deepEqual( Stem("meschinăriile"), "meschinăr" );
	deepEqual( Stem("meschinăriilor"), "meschinăr" );
	deepEqual( Stem("mescioară"), "mescioar" );
	deepEqual( Stem("mese"), "mes" );
	deepEqual( Stem("mesei"), "mese" );
	deepEqual( Stem("mesele"), "mes" );
	deepEqual( Stem("meselor"), "mes" );
	deepEqual( Stem("meserie"), "meser" );
	deepEqual( Stem("meseriilor"), "meser" );
	deepEqual( Stem("mesteacăn"), "mesteacăn" );
	deepEqual( Stem("meşter"), "meşter" );
	deepEqual( Stem("meşterului"), "meşter" );
	deepEqual( Stem("meşteşug"), "meşteşug" );
	deepEqual( Stem("meşteşugari"), "meşteşugar" );
	deepEqual( Stem("meşteşugul"), "meşteşug" );
	deepEqual( Stem("meşteşugului"), "meşteşug" );
	deepEqual( Stem("metafizic"), "metafiz" );
	deepEqual( Stem("metafizica"), "metafiz" );
	deepEqual( Stem("metafizică"), "metafiz" );
	deepEqual( Stem("metafizice"), "metafiz" );
	deepEqual( Stem("metafizicei"), "metafizice" );
	deepEqual( Stem("metafora"), "metafor" );
	deepEqual( Stem("metaforă"), "metafor" );
	deepEqual( Stem("metafore"), "metafor" );
	deepEqual( Stem("metageometriei"), "metageometr" );
	deepEqual( Stem("metal"), "metal" );
	deepEqual( Stem("metalic"), "metal" );
	deepEqual( Stem("metalice"), "metal" );
	deepEqual( Stem("metalului"), "metal" );
	deepEqual( Stem("metalurgie"), "metalurg" );
	deepEqual( Stem("meticuloasă"), "meticul" );
	deepEqual( Stem("metoda"), "metod" );
	deepEqual( Stem("metodă"), "metod" );
	deepEqual( Stem("metode"), "metod" );
	deepEqual( Stem("metodei"), "metode" );
	deepEqual( Stem("metodele"), "metod" );
	deepEqual( Stem("metodelor"), "metod" );
	deepEqual( Stem("metodică"), "metod" );
	deepEqual( Stem("metresă"), "metres" );
	deepEqual( Stem("metri"), "metr" );
	deepEqual( Stem("metric"), "metric" );
	deepEqual( Stem("metru"), "metru" );
	deepEqual( Stem("metrul"), "metr" );
	deepEqual( Stem("meu"), "meu" );
	deepEqual( Stem("mi"), "mi" );
	deepEqual( Stem("miaună"), "miaun" );
	deepEqual( Stem("miazăzi"), "miazăz" );
	deepEqual( Stem("mic"), "mic" );
	deepEqual( Stem("mica"), "mic" );
	deepEqual( Stem("mică"), "mic" );
	deepEqual( Stem("michelin"), "michelin" );
	deepEqual( Stem("mici"), "mic" );
	deepEqual( Stem("micii"), "mic" );
	deepEqual( Stem("micile"), "mic" );
	deepEqual( Stem("microbii"), "microb" );
	deepEqual( Stem("micron"), "micron" );
	deepEqual( Stem("micronilor"), "micron" );
	deepEqual( Stem("microprocesoare"), "microprocesoar" );
	deepEqual( Stem("microprocesoarelor"), "microprocesoar" );
	deepEqual( Stem("microprocesor"), "microprocesor" );
	deepEqual( Stem("microscop"), "microscop" );
	deepEqual( Stem("microscopic"), "microscop" );
	deepEqual( Stem("microsecundă"), "microsecund" );
	deepEqual( Stem("microsecunde"), "microsecund" );
	deepEqual( Stem("microsoft"), "microsoft" );
	deepEqual( Stem("microstructura"), "microstructur" );
	deepEqual( Stem("microunde"), "micround" );
	deepEqual( Stem("microuniversul"), "microunivers" );
	deepEqual( Stem("micşora"), "micşor" );
	deepEqual( Stem("micşorată"), "micşor" );
	deepEqual( Stem("micşorează"), "micşor" );
	deepEqual( Stem("micşoreze"), "micşor" );
	deepEqual( Stem("micşorînd"), "micşorînd" );
	deepEqual( Stem("micul"), "mic" );
	deepEqual( Stem("micului"), "mic" );
	deepEqual( Stem("micuţ"), "micuţ" );
	deepEqual( Stem("micuţa"), "micuţ" );
	deepEqual( Stem("micuţă"), "micuţ" );
	deepEqual( Stem("micuţii"), "micuţ" );
	deepEqual( Stem("mie"), "mie" );
	deepEqual( Stem("mielul"), "miel" );
	deepEqual( Stem("miercurea"), "miercur" );
	deepEqual( Stem("miercuri"), "miercur" );
	deepEqual( Stem("mieroase"), "mieroas" );
	deepEqual( Stem("mieros"), "mieros" );
	deepEqual( Stem("mieunat"), "mieunat" );
	deepEqual( Stem("mieunând"), "mieun" );
	deepEqual( Stem("miez"), "miez" );
	deepEqual( Stem("miezul"), "miez" );
	deepEqual( Stem("migală"), "migal" );
	deepEqual( Stem("migăloşiei"), "migăl" );
	deepEqual( Stem("migdale"), "migdal" );
	deepEqual( Stem("migdalei"), "migdale" );
	deepEqual( Stem("migrator"), "migrat" );
	deepEqual( Stem("migraţie"), "migr" );
	deepEqual( Stem("migrări"), "migrăr" );
	deepEqual( Stem("mihai"), "miha" );
	deepEqual( Stem("mii"), "mii" );
	deepEqual( Stem("miile"), "miil" );
	deepEqual( Stem("miilor"), "miilor" );
	deepEqual( Stem("mijită"), "mijit" );
	deepEqual( Stem("mijloace"), "mijloac" );
	deepEqual( Stem("mijloacele"), "mijloac" );
	deepEqual( Stem("mijloacelor"), "mijloac" );
	deepEqual( Stem("mijloc"), "mijloc" );
	deepEqual( Stem("mijlocie"), "mijloc" );
	deepEqual( Stem("mijlocire"), "mijloc" );
	deepEqual( Stem("mijlocit"), "mijloc" );
	deepEqual( Stem("mijlociu"), "mijlociu" );
	deepEqual( Stem("mijlocul"), "mijloc" );
	deepEqual( Stem("mila"), "mil" );
	deepEqual( Stem("milă"), "mil" );
	deepEqual( Stem("milet"), "milet" );
	deepEqual( Stem("miliard"), "miliard" );
	deepEqual( Stem("milimetri"), "milimetr" );
	deepEqual( Stem("milioana"), "milioan" );
	deepEqual( Stem("milioane"), "milioan" );
	deepEqual( Stem("milioanelor"), "milioan" );
	deepEqual( Stem("milion"), "milion" );
	deepEqual( Stem("milionar"), "milionar" );
	deepEqual( Stem("milionare"), "milion" );
	deepEqual( Stem("militant"), "milit" );
	deepEqual( Stem("militar"), "militar" );
	deepEqual( Stem("militară"), "milit" );
	deepEqual( Stem("militare"), "milit" );
	deepEqual( Stem("militari"), "militar" );
	deepEqual( Stem("militarizării"), "militarizăr" );
	deepEqual( Stem("militarul"), "militar" );
	deepEqual( Stem("militărească"), "milităr" );
	deepEqual( Stem("milităreşte"), "milităr" );
	deepEqual( Stem("milităreşti"), "milităr" );
	deepEqual( Stem("militărie"), "milităr" );
	deepEqual( Stem("milităriei"), "milităr" );
	deepEqual( Stem("militez"), "milit" );
	deepEqual( Stem("miliţiilor"), "mil" );
	deepEqual( Stem("miloagă"), "miloag" );
	deepEqual( Stem("mimică"), "mimic" );
	deepEqual( Stem("mina"), "min" );
	deepEqual( Stem("minat"), "minat" );
	deepEqual( Stem("minate"), "minat" );
	deepEqual( Stem("mină"), "min" );
	deepEqual( Stem("mincinoasă"), "mincin" );
	deepEqual( Stem("mincinoase"), "mincin" );
	deepEqual( Stem("mincinos"), "mincin" );
	deepEqual( Stem("minciuna"), "minciun" );
	deepEqual( Stem("minciună"), "minciun" );
	deepEqual( Stem("minciuni"), "minciun" );
	deepEqual( Stem("minciunile"), "minciun" );
	deepEqual( Stem("mine"), "min" );
	deepEqual( Stem("minge"), "ming" );
	deepEqual( Stem("miniaturală"), "miniatural" );
	deepEqual( Stem("miniaturale"), "miniatural" );
	deepEqual( Stem("miniaturalul"), "miniatural" );
	deepEqual( Stem("miniatură"), "miniat" );
	deepEqual( Stem("miniaturizarea"), "miniaturiz" );
	deepEqual( Stem("miniaturizat"), "miniaturiz" );
	deepEqual( Stem("miniaturizării"), "miniaturizăr" );
	deepEqual( Stem("minicalculatoare"), "minicalcul" );
	deepEqual( Stem("minicalculatoarelor"), "minicalcul" );
	deepEqual( Stem("minier"), "minier" );
	deepEqual( Stem("minieră"), "minier" );
	deepEqual( Stem("minim"), "min" );
	deepEqual( Stem("minima"), "minim" );
	deepEqual( Stem("minimal"), "minimal" );
	deepEqual( Stem("minimalismului"), "minimalist" );
	deepEqual( Stem("minimalist"), "minimalist" );
	deepEqual( Stem("minimaliza"), "minimaliz" );
	deepEqual( Stem("minimalizante"), "minimaliz" );
	deepEqual( Stem("minimalizate"), "minimaliz" );
	deepEqual( Stem("minimalizatoare"), "minimaliz" );
	deepEqual( Stem("minimalizeze"), "minimaliz" );
	deepEqual( Stem("minimă"), "minim" );
	deepEqual( Stem("minime"), "minim" );
	deepEqual( Stem("minimiza"), "minimiz" );
	deepEqual( Stem("minimizat"), "minimiz" );
	deepEqual( Stem("minimizată"), "minimiz" );
	deepEqual( Stem("minimizaţi"), "minimiz" );
	deepEqual( Stem("minimizăm"), "minimiz" );
	deepEqual( Stem("minimizează"), "minimiz" );
	deepEqual( Stem("minimum"), "minimum" );
	deepEqual( Stem("minister"), "minister" );
	deepEqual( Stem("ministere"), "minist" );
	deepEqual( Stem("ministerelor"), "minist" );
	deepEqual( Stem("ministerial"), "ministerial" );
	deepEqual( Stem("ministerială"), "ministerial" );
	deepEqual( Stem("ministerul"), "minister" );
	deepEqual( Stem("ministerului"), "minister" );
	deepEqual( Stem("ministru"), "ministru" );
	deepEqual( Stem("ministrul"), "ministr" );
	deepEqual( Stem("miniştri"), "miniştr" );
	deepEqual( Stem("miniu"), "miniu" );
	deepEqual( Stem("minkowski"), "minkowsk" );
	deepEqual( Stem("minor"), "minor" );
	deepEqual( Stem("minoră"), "minor" );
	deepEqual( Stem("minore"), "minor" );
	deepEqual( Stem("minoritar"), "minoritar" );
	deepEqual( Stem("minoritară"), "minorit" );
	deepEqual( Stem("minoritate"), "minor" );
	deepEqual( Stem("minorităţi"), "minor" );
	deepEqual( Stem("minovici"), "minov" );
	deepEqual( Stem("mint"), "mint" );
	deepEqual( Stem("mintal"), "mintal" );
	deepEqual( Stem("mintală"), "mintal" );
	deepEqual( Stem("mintale"), "mintal" );
	deepEqual( Stem("mintă"), "mint" );
	deepEqual( Stem("minte"), "mint" );
	deepEqual( Stem("mintea"), "mint" );
	deepEqual( Stem("mintenaş"), "mintenaş" );
	deepEqual( Stem("minţeam"), "minţ" );
	deepEqual( Stem("minţi"), "minţ" );
	deepEqual( Stem("minţii"), "minţ" );
	deepEqual( Stem("minţile"), "minţ" );
	deepEqual( Stem("minţim"), "minţ" );
	deepEqual( Stem("minţind"), "minţ" );
	deepEqual( Stem("minţisem"), "minţ" );
	deepEqual( Stem("minţiseră"), "minţ" );
	deepEqual( Stem("minţit"), "minţit" );
	deepEqual( Stem("minţită"), "minţit" );
	deepEqual( Stem("minunat"), "minun" );
	deepEqual( Stem("minunată"), "minun" );
	deepEqual( Stem("minunate"), "minun" );
	deepEqual( Stem("minune"), "minun" );
	deepEqual( Stem("minunea"), "minun" );
	deepEqual( Stem("minunează"), "minun" );
	deepEqual( Stem("minuni"), "minun" );
	deepEqual( Stem("minunile"), "minun" );
	deepEqual( Stem("minunilor"), "minun" );
	deepEqual( Stem("minuscule"), "minuscul" );
	deepEqual( Stem("minut"), "minut" );
	deepEqual( Stem("minute"), "minut" );
	deepEqual( Stem("minuţioşi"), "minuţ" );
	deepEqual( Stem("minuţiozitate"), "minuţioz" );
	deepEqual( Stem("mioapă"), "mioap" );
	deepEqual( Stem("mioară"), "mioar" );
	deepEqual( Stem("miop"), "miop" );
	deepEqual( Stem("miopia"), "miop" );
	deepEqual( Stem("mioritică"), "miorit" );
	deepEqual( Stem("mioritice"), "miorit" );
	deepEqual( Stem("mioriţa"), "mioriţ" );
	deepEqual( Stem("miorlăie"), "miorlăi" );
	deepEqual( Stem("miorlăitul"), "miorlăit" );
	deepEqual( Stem("miorlăiturile"), "miorlăitur" );
	deepEqual( Stem("mira"), "mir" );
	deepEqual( Stem("mirabil"), "mirabil" );
	deepEqual( Stem("miracol"), "miracol" );
	deepEqual( Stem("miracolul"), "miracol" );
	deepEqual( Stem("miracolului"), "miracol" );
	deepEqual( Stem("miracule"), "miracul" );
	deepEqual( Stem("miraculoasă"), "miracul" );
	deepEqual( Stem("miraculoase"), "miracul" );
	deepEqual( Stem("miraculos"), "miracul" );
	deepEqual( Stem("miraj"), "miraj" );
	deepEqual( Stem("miram"), "miram" );
	deepEqual( Stem("mirare"), "mirar" );
	deepEqual( Stem("mirarea"), "mirar" );
	deepEqual( Stem("mirase"), "miras" );
	deepEqual( Stem("mirat"), "mirat" );
	deepEqual( Stem("mirată"), "mirat" );
	deepEqual( Stem("miraţi"), "mir" );
	deepEqual( Stem("miră"), "mir" );
	deepEqual( Stem("mirăm"), "mir" );
	deepEqual( Stem("mircea"), "mirc" );
	deepEqual( Stem("mireasă"), "mireas" );
	deepEqual( Stem("mireasmă"), "mireasm" );
	deepEqual( Stem("miresei"), "mir" );
	deepEqual( Stem("miresele"), "mir" );
	deepEqual( Stem("miresmat"), "miresm" );
	deepEqual( Stem("miresmele"), "miresm" );
	deepEqual( Stem("miriapod"), "miriapod" );
	deepEqual( Stem("mirific"), "mirif" );
	deepEqual( Stem("mirifică"), "mirif" );
	deepEqual( Stem("miriştii"), "mirişt" );
	deepEqual( Stem("miroasă"), "miroas" );
	deepEqual( Stem("miroase"), "miroas" );
	deepEqual( Stem("miros"), "miros" );
	deepEqual( Stem("mirosind"), "miros" );
	deepEqual( Stem("mirosit"), "miros" );
	deepEqual( Stem("mirosul"), "miros" );
	deepEqual( Stem("mirosului"), "miros" );
	deepEqual( Stem("mirosuri"), "mirosur" );
	deepEqual( Stem("misiunile"), "misiun" );
	deepEqual( Stem("mister"), "mister" );
	deepEqual( Stem("misterioasă"), "mister" );
	deepEqual( Stem("misterioase"), "mister" );
	deepEqual( Stem("misterios"), "mister" );
	deepEqual( Stem("misterul"), "mister" );
	deepEqual( Stem("mistic"), "mistic" );
	deepEqual( Stem("mistică"), "mistic" );
	deepEqual( Stem("mistice"), "mistic" );
	deepEqual( Stem("misticismul"), "misticist" );
	deepEqual( Stem("mistuindu"), "mistu" );
	deepEqual( Stem("mistuire"), "mistu" );
	deepEqual( Stem("mistuitoare"), "mistuit" );
	deepEqual( Stem("mistuitoarea"), "mistuit" );
	deepEqual( Stem("mistuitor"), "mistuit" );
	deepEqual( Stem("mişc"), "mişc" );
	deepEqual( Stem("mişca"), "mişc" );
	deepEqual( Stem("mişcare"), "mişc" );
	deepEqual( Stem("mişcarea"), "mişc" );
	deepEqual( Stem("mişcat"), "mişcat" );
	deepEqual( Stem("mişcau"), "mişc" );
	deepEqual( Stem("mişcă"), "mişc" );
	deepEqual( Stem("mişcăm"), "mişc" );
	deepEqual( Stem("mişcări"), "mişcăr" );
	deepEqual( Stem("mişcării"), "mişcăr" );
	deepEqual( Stem("mişcările"), "mişcăr" );
	deepEqual( Stem("mişcărilor"), "mişcăr" );
	deepEqual( Stem("mişoiu"), "mişoiu" );
	deepEqual( Stem("mişte"), "mişt" );
	deepEqual( Stem("mişună"), "mişun" );
	deepEqual( Stem("mişune"), "mişun" );
	deepEqual( Stem("mitică"), "mitic" );
	deepEqual( Stem("miticismele"), "miticist" );
	deepEqual( Stem("mitingurile"), "mitingur" );
	deepEqual( Stem("mitocan"), "mitocan" );
	deepEqual( Stem("mitocănos"), "mitocăn" );
	deepEqual( Stem("mitologie"), "mitolog" );
	deepEqual( Stem("mitologiei"), "mitolog" );
	deepEqual( Stem("mitraliera"), "mitralier" );
	deepEqual( Stem("mitralieră"), "mitralier" );
	deepEqual( Stem("mitraliere"), "mitralier" );
	deepEqual( Stem("mitralierei"), "mitraliere" );
	deepEqual( Stem("mitralierele"), "mitralier" );
	deepEqual( Stem("mitralierelor"), "mitralier" );
	deepEqual( Stem("mitralii"), "mitral" );
	deepEqual( Stem("mizează"), "mizeaz" );
	deepEqual( Stem("mizerabil"), "mizer" );
	deepEqual( Stem("mizerabilă"), "mizer" );
	deepEqual( Stem("mizerabile"), "mizer" );
	deepEqual( Stem("mizeria"), "mizer" );
	deepEqual( Stem("mizerie"), "mizer" );
	deepEqual( Stem("mizeriei"), "mizer" );
	deepEqual( Stem("mizerii"), "mizer" );
	deepEqual( Stem("mizeriile"), "mizer" );
	deepEqual( Stem("mînios"), "mînios" );
	deepEqual( Stem("mînji"), "mînj" );
	deepEqual( Stem("mîntuire"), "mîntu" );
	deepEqual( Stem("mîntuirii"), "mîntuir" );
	deepEqual( Stem("mîrîia"), "mîrîi" );
	deepEqual( Stem("mlaştină"), "mlaştin" );
	deepEqual( Stem("mlădioasă"), "mlădioas" );
	deepEqual( Stem("mmda"), "mmda" );
	deepEqual( Stem("moale"), "moal" );
	deepEqual( Stem("moalele"), "moal" );
	deepEqual( Stem("moara"), "moar" );
	deepEqual( Stem("moară"), "moar" );
	deepEqual( Stem("moare"), "moar" );
	deepEqual( Stem("moartă"), "moart" );
	deepEqual( Stem("moarte"), "moart" );
	deepEqual( Stem("moartea"), "moart" );
	deepEqual( Stem("moaşei"), "moaşe" );
	deepEqual( Stem("mobil"), "mobil" );
	deepEqual( Stem("mobila"), "mobil" );
	deepEqual( Stem("mobilasem"), "mobil" );
	deepEqual( Stem("mobilitate"), "mobil" );
	deepEqual( Stem("mobilitatea"), "mobil" );
	deepEqual( Stem("mobilizare"), "mobiliz" );
	deepEqual( Stem("mobilizat"), "mobiliz" );
	deepEqual( Stem("mobilul"), "mobil" );
	deepEqual( Stem("mobilului"), "mobil" );
	deepEqual( Stem("mocirlă"), "mocirl" );
	deepEqual( Stem("mocirloasă"), "mocirl" );
	deepEqual( Stem("mocirlos"), "mocirl" );
	deepEqual( Stem("mocnisem"), "mocn" );
	deepEqual( Stem("mod"), "mod" );
	deepEqual( Stem("modalităţile"), "modal" );
	deepEqual( Stem("modă"), "mod" );
	deepEqual( Stem("mode"), "mod" );
	deepEqual( Stem("modei"), "mode" );
	deepEqual( Stem("model"), "model" );
	deepEqual( Stem("modela"), "model" );
	deepEqual( Stem("modelator"), "model" );
	deepEqual( Stem("modele"), "mod" );
	deepEqual( Stem("modelează"), "model" );
	deepEqual( Stem("modelele"), "model" );
	deepEqual( Stem("modelelor"), "model" );
	deepEqual( Stem("modeleze"), "model" );
	deepEqual( Stem("modelul"), "model" );
	deepEqual( Stem("modem"), "mod" );
	deepEqual( Stem("moderat"), "moder" );
	deepEqual( Stem("moderată"), "moder" );
	deepEqual( Stem("moderate"), "moder" );
	deepEqual( Stem("moderator"), "moder" );
	deepEqual( Stem("moderaţi"), "moder" );
	deepEqual( Stem("moderaţie"), "moder" );
	deepEqual( Stem("moderează"), "moder" );
	deepEqual( Stem("modern"), "modern" );
	deepEqual( Stem("modernă"), "modern" );
	deepEqual( Stem("moderne"), "modern" );
	deepEqual( Stem("modernii"), "modern" );
	deepEqual( Stem("modernism"), "modernist" );
	deepEqual( Stem("modernismul"), "modernist" );
	deepEqual( Stem("modernist"), "modernist" );
	deepEqual( Stem("modernistă"), "modernist" );
	deepEqual( Stem("moderniştilor"), "modernist" );
	deepEqual( Stem("modernitate"), "modern" );
	deepEqual( Stem("modernitatea"), "modern" );
	deepEqual( Stem("modernităţii"), "modern" );
	deepEqual( Stem("moderniza"), "moderniz" );
	deepEqual( Stem("modernizant"), "moderniz" );
	deepEqual( Stem("modernizare"), "moderniz" );
	deepEqual( Stem("modernizator"), "moderniz" );
	deepEqual( Stem("modernizării"), "modernizăr" );
	deepEqual( Stem("modernizeze"), "moderniz" );
	deepEqual( Stem("modest"), "modest" );
	deepEqual( Stem("modestă"), "modest" );
	deepEqual( Stem("modeste"), "modest" );
	deepEqual( Stem("modestelor"), "modest" );
	deepEqual( Stem("modestia"), "modest" );
	deepEqual( Stem("modeşti"), "modeşt" );
	deepEqual( Stem("modice"), "modic" );
	deepEqual( Stem("modific"), "modif" );
	deepEqual( Stem("modifica"), "modif" );
	deepEqual( Stem("modificabilă"), "modific" );
	deepEqual( Stem("modificare"), "modific" );
	deepEqual( Stem("modificarea"), "modific" );
	deepEqual( Stem("modificat"), "modific" );
	deepEqual( Stem("modificată"), "modific" );
	deepEqual( Stem("modificate"), "modific" );
	deepEqual( Stem("modificatoare"), "modific" );
	deepEqual( Stem("modificatorul"), "modif" );
	deepEqual( Stem("modificaţi"), "modific" );
	deepEqual( Stem("modifică"), "modif" );
	deepEqual( Stem("modificăm"), "modific" );
	deepEqual( Stem("modificări"), "modificăr" );
	deepEqual( Stem("modificările"), "modificăr" );
	deepEqual( Stem("modifice"), "modif" );
	deepEqual( Stem("modificînd"), "modificînd" );
	deepEqual( Stem("modistă"), "modist" );
	deepEqual( Stem("modo"), "modo" );
	deepEqual( Stem("modul"), "mod" );
	deepEqual( Stem("modular"), "modular" );
	deepEqual( Stem("modulară"), "modul" );
	deepEqual( Stem("modulare"), "modul" );
	deepEqual( Stem("modularitate"), "modular" );
	deepEqual( Stem("modularităţii"), "modular" );
	deepEqual( Stem("modulat"), "modul" );
	deepEqual( Stem("modulată"), "modul" );
	deepEqual( Stem("module"), "modul" );
	deepEqual( Stem("modulelor"), "modul" );
	deepEqual( Stem("modulii"), "modul" );
	deepEqual( Stem("modulo"), "modulo" );
	deepEqual( Stem("moduri"), "modur" );
	deepEqual( Stem("moft"), "moft" );
	deepEqual( Stem("moftul"), "moft" );
	deepEqual( Stem("mofturi"), "moftur" );
	deepEqual( Stem("mofturile"), "moftur" );
	deepEqual( Stem("mofturoase"), "moftur" );
	deepEqual( Stem("mofturos"), "moftur" );
	deepEqual( Stem("mogâldeţe"), "mogâldeţ" );
	deepEqual( Stem("mohorâtă"), "mohorât" );
	deepEqual( Stem("mohrat"), "mohrat" );
	deepEqual( Stem("moi"), "moi" );
	deepEqual( Stem("moissan"), "moissan" );
	deepEqual( Stem("molatic"), "molat" );
	deepEqual( Stem("molatică"), "molat" );
	deepEqual( Stem("molatici"), "molat" );
	deepEqual( Stem("molcome"), "molcom" );
	deepEqual( Stem("moldova"), "moldov" );
	deepEqual( Stem("moldoveanul"), "moldovean" );
	deepEqual( Stem("moldovei"), "moldove" );
	deepEqual( Stem("moldovenească"), "moldoven" );
	deepEqual( Stem("moldovenilor"), "moldoven" );
	deepEqual( Stem("moles"), "moles" );
	deepEqual( Stem("moletiere"), "moletier" );
	deepEqual( Stem("moletierele"), "moletier" );
	deepEqual( Stem("molifţi"), "molifţ" );
	deepEqual( Stem("molimilor"), "molim" );
	deepEqual( Stem("molipsitoare"), "molips" );
	deepEqual( Stem("momeala"), "momeal" );
	deepEqual( Stem("momene"), "momen" );
	deepEqual( Stem("moment"), "moment" );
	deepEqual( Stem("momentana"), "momentan" );
	deepEqual( Stem("momente"), "moment" );
	deepEqual( Stem("momentele"), "moment" );
	deepEqual( Stem("momentelor"), "moment" );
	deepEqual( Stem("momentul"), "moment" );
	deepEqual( Stem("momentului"), "moment" );
	deepEqual( Stem("mona"), "mon" );
	deepEqual( Stem("monadelor"), "monad" );
	deepEqual( Stem("monarchen"), "monarchen" );
	deepEqual( Stem("monarhiei"), "monarh" );
	deepEqual( Stem("monarhismul"), "monarhist" );
	deepEqual( Stem("monde"), "mond" );
	deepEqual( Stem("monden"), "monden" );
	deepEqual( Stem("mondenă"), "monden" );
	deepEqual( Stem("mondene"), "monden" );
	deepEqual( Stem("mondeni"), "monden" );
	deepEqual( Stem("mondenităţi"), "monden" );
	deepEqual( Stem("mondială"), "mondial" );
	deepEqual( Stem("mondirului"), "mondir" );
	deepEqual( Stem("monedă"), "moned" );
	deepEqual( Stem("monede"), "moned" );
	deepEqual( Stem("monetă"), "monet" );
	deepEqual( Stem("mongolii"), "mongol" );
	deepEqual( Stem("monoclu"), "monoclu" );
	deepEqual( Stem("monogenetic"), "monogenet" );
	deepEqual( Stem("monogenie"), "monogen" );
	deepEqual( Stem("monografice"), "monograf" );
	deepEqual( Stem("monograma"), "monogram" );
	deepEqual( Stem("monoideism"), "monoideist" );
	deepEqual( Stem("monolit"), "monol" );
	deepEqual( Stem("monolitic"), "monolit" );
	deepEqual( Stem("monolitică"), "monolit" );
	deepEqual( Stem("monoliţi"), "monol" );
	deepEqual( Stem("monolog"), "monolog" );
	deepEqual( Stem("monologal"), "monologal" );
	deepEqual( Stem("monologurile"), "monologur" );
	deepEqual( Stem("monoman"), "monoman" );
	deepEqual( Stem("monongahela"), "monongahel" );
	deepEqual( Stem("monopol"), "monopol" );
	deepEqual( Stem("monopolist"), "monopolist" );
	deepEqual( Stem("monopoliza"), "monopoliz" );
	deepEqual( Stem("monopolizat"), "monopoliz" );
	deepEqual( Stem("monopolizeze"), "monopoliz" );
	deepEqual( Stem("monopolurilor"), "monopolur" );
	deepEqual( Stem("monoteismul"), "monoteist" );
	deepEqual( Stem("monoton"), "monoton" );
	deepEqual( Stem("monotonă"), "monoton" );
	deepEqual( Stem("monotonie"), "monoton" );
	deepEqual( Stem("monstru"), "monstru" );
	deepEqual( Stem("monstrul"), "monstr" );
	deepEqual( Stem("monstruoasă"), "monstruoas" );
	deepEqual( Stem("monstruoase"), "monstruoas" );
	deepEqual( Stem("monstruos"), "monstruos" );
	deepEqual( Stem("monstruozitate"), "monstruoz" );
	deepEqual( Stem("monstruozităţi"), "monstruoz" );
	deepEqual( Stem("monştri"), "monştr" );
	deepEqual( Stem("monta"), "mont" );
	deepEqual( Stem("montaigne"), "montaign" );
	deepEqual( Stem("montaje"), "montaj" );
	deepEqual( Stem("montajului"), "montaj" );
	deepEqual( Stem("montană"), "montan" );
	deepEqual( Stem("monumentale"), "monumental" );
	deepEqual( Stem("monumente"), "monument" );
	deepEqual( Stem("monumentului"), "monument" );
	deepEqual( Stem("mor"), "mor" );
	deepEqual( Stem("moral"), "moral" );
	deepEqual( Stem("morala"), "moral" );
	deepEqual( Stem("morală"), "moral" );
	deepEqual( Stem("morale"), "moral" );
	deepEqual( Stem("moralistice"), "moralist" );
	deepEqual( Stem("moralizeze"), "moraliz" );
	deepEqual( Stem("moralmente"), "moralment" );
	deepEqual( Stem("moralo"), "moralo" );
	deepEqual( Stem("morarul"), "morar" );
	deepEqual( Stem("morav"), "morav" );
	deepEqual( Stem("moravurile"), "moravur" );
	deepEqual( Stem("morcovi"), "morcov" );
	deepEqual( Stem("mord"), "mord" );
	deepEqual( Stem("morfeu"), "morfeu" );
	deepEqual( Stem("morfina"), "morfin" );
	deepEqual( Stem("morga"), "morg" );
	deepEqual( Stem("morgă"), "morg" );
	deepEqual( Stem("mori"), "mor" );
	deepEqual( Stem("morile"), "mor" );
	deepEqual( Stem("morişcă"), "morişc" );
	deepEqual( Stem("mormane"), "morman" );
	deepEqual( Stem("mormânt"), "mormânt" );
	deepEqual( Stem("mormăie"), "mormăi" );
	deepEqual( Stem("morminte"), "mormint" );
	deepEqual( Stem("mort"), "mort" );
	deepEqual( Stem("mortal"), "mortal" );
	deepEqual( Stem("mortală"), "mortal" );
	deepEqual( Stem("mortăciuni"), "mortăciun" );
	deepEqual( Stem("morthomme"), "morthomm" );
	deepEqual( Stem("mortului"), "mort" );
	deepEqual( Stem("morţi"), "morţ" );
	deepEqual( Stem("morţii"), "morţ" );
	deepEqual( Stem("morţilor"), "morţ" );
	deepEqual( Stem("morţiş"), "morţiş" );
	deepEqual( Stem("moschee"), "mosche" );
	deepEqual( Stem("mosoare"), "mosoar" );
	deepEqual( Stem("moşească"), "moşeasc" );
	deepEqual( Stem("moşi"), "moş" );
	deepEqual( Stem("moşie"), "moş" );
	deepEqual( Stem("moşieri"), "moşier" );
	deepEqual( Stem("moşioară"), "moşioar" );
	deepEqual( Stem("moşneag"), "moşneag" );
	deepEqual( Stem("moştenire"), "moşten" );
	deepEqual( Stem("moştenirea"), "moşten" );
	deepEqual( Stem("moştenirii"), "moştenir" );
	deepEqual( Stem("moştenirile"), "moştenir" );
	deepEqual( Stem("moştenit"), "moşten" );
	deepEqual( Stem("moştenitoarea"), "moşten" );
	deepEqual( Stem("moştenitori"), "moşten" );
	deepEqual( Stem("motiv"), "motiv" );
	deepEqual( Stem("motive"), "motiv" );
	deepEqual( Stem("motivele"), "motiv" );
	deepEqual( Stem("motivul"), "motiv" );
	deepEqual( Stem("motoarele"), "motoar" );
	deepEqual( Stem("motocicletă"), "motociclet" );
	deepEqual( Stem("motor"), "motor" );
	deepEqual( Stem("motorul"), "motor" );
	deepEqual( Stem("mototolit"), "mototol" );
	deepEqual( Stem("mototolită"), "mototol" );
	deepEqual( Stem("mototolite"), "mototol" );
	deepEqual( Stem("motru"), "motru" );
	deepEqual( Stem("moţ"), "moţ" );
	deepEqual( Stem("moţăie"), "moţăi" );
	deepEqual( Stem("mov"), "mov" );
	deepEqual( Stem("movile"), "mov" );
	deepEqual( Stem("mprejur"), "mprejur" );
	deepEqual( Stem("mr"), "mr" );
	deepEqual( Stem("mreană"), "mrean" );
	deepEqual( Stem("mucenic"), "mucen" );
	deepEqual( Stem("muche"), "much" );
	deepEqual( Stem("muchia"), "much" );
	deepEqual( Stem("muchie"), "much" );
	deepEqual( Stem("muchii"), "much" );
	deepEqual( Stem("muchiile"), "much" );
	deepEqual( Stem("mucius"), "mucius" );
	deepEqual( Stem("mucul"), "muc" );
	deepEqual( Stem("mucuri"), "mucur" );
	deepEqual( Stem("mugurii"), "mugur" );
	deepEqual( Stem("muiat"), "muiat" );
	deepEqual( Stem("mulată"), "mulat" );
	deepEqual( Stem("mulează"), "muleaz" );
	deepEqual( Stem("mult"), "mult" );
	deepEqual( Stem("multă"), "mult" );
	deepEqual( Stem("multe"), "mult" );
	deepEqual( Stem("multiplă"), "multipl" );
	deepEqual( Stem("multiplicare"), "multiplic" );
	deepEqual( Stem("multiplicat"), "multiplic" );
	deepEqual( Stem("multiplică"), "multipl" );
	deepEqual( Stem("multiplicăm"), "multiplic" );
	deepEqual( Stem("multiplicitate"), "multipl" );
	deepEqual( Stem("multiplicitatea"), "multipl" );
	deepEqual( Stem("multiplicităţi"), "multipl" );
	deepEqual( Stem("multiplicităţii"), "multipl" );
	deepEqual( Stem("multiplii"), "multipl" );
	deepEqual( Stem("multiplilor"), "multipl" );
	deepEqual( Stem("multor"), "multor" );
	deepEqual( Stem("mulţi"), "mulţ" );
	deepEqual( Stem("mulţime"), "mulţim" );
	deepEqual( Stem("mulţimea"), "mulţim" );
	deepEqual( Stem("mulţimii"), "mulţim" );
	deepEqual( Stem("mulţimile"), "mulţim" );
	deepEqual( Stem("mulţimilor"), "mulţim" );
	deepEqual( Stem("mulţume"), "mulţum" );
	deepEqual( Stem("mulţumeam"), "mulţum" );
	deepEqual( Stem("mulţumească"), "mulţum" );
	deepEqual( Stem("mulţumesc"), "mulţum" );
	deepEqual( Stem("mulţumeşte"), "mulţum" );
	deepEqual( Stem("mulţumi"), "mulţum" );
	deepEqual( Stem("mulţumim"), "mulţum" );
	deepEqual( Stem("mulţumire"), "mulţum" );
	deepEqual( Stem("mulţumiri"), "mulţumir" );
	deepEqual( Stem("mulţumirii"), "mulţumir" );
	deepEqual( Stem("mulţumit"), "mulţum" );
	deepEqual( Stem("mulţumită"), "mulţum" );
	deepEqual( Stem("mulţumitor"), "mulţum" );
	deepEqual( Stem("mumii"), "mum" );
	deepEqual( Stem("mumm"), "mumm" );
	deepEqual( Stem("munca"), "munc" );
	deepEqual( Stem("muncă"), "munc" );
	deepEqual( Stem("munceşti"), "munc" );
	deepEqual( Stem("muncile"), "munc" );
	deepEqual( Stem("muncim"), "munc" );
	deepEqual( Stem("muncind"), "munc" );
	deepEqual( Stem("muncit"), "muncit" );
	deepEqual( Stem("muncitoare"), "muncit" );
	deepEqual( Stem("muncitor"), "muncit" );
	deepEqual( Stem("muncitoresc"), "muncitor" );
	deepEqual( Stem("muncitoreşti"), "muncitor" );
	deepEqual( Stem("muncitori"), "muncit" );
	deepEqual( Stem("muncitorimea"), "muncitorim" );
	deepEqual( Stem("municipal"), "municipal" );
	deepEqual( Stem("municipală"), "municipal" );
	deepEqual( Stem("municipii"), "municip" );
	deepEqual( Stem("municipiul"), "municip" );
	deepEqual( Stem("municipiului"), "municip" );
	deepEqual( Stem("munificent"), "munificent" );
	deepEqual( Stem("muniţia"), "muniţ" );
	deepEqual( Stem("muniţie"), "muniţ" );
	deepEqual( Stem("muniţii"), "mun" );
	deepEqual( Stem("muniţiile"), "mun" );
	deepEqual( Stem("munte"), "munt" );
	deepEqual( Stem("muntean"), "muntean" );
	deepEqual( Stem("munteanu"), "munteanu" );
	deepEqual( Stem("muntele"), "munt" );
	deepEqual( Stem("muntelui"), "muntel" );
	deepEqual( Stem("muntence"), "muntenc" );
	deepEqual( Stem("muntene"), "munten" );
	deepEqual( Stem("muntenegrii"), "muntenegr" );
	deepEqual( Stem("muntenegru"), "muntenegru" );
	deepEqual( Stem("munteni"), "munten" );
	deepEqual( Stem("muntenia"), "munten" );
	deepEqual( Stem("muntoase"), "muntoas" );
	deepEqual( Stem("muntos"), "muntos" );
	deepEqual( Stem("munţi"), "munţ" );
	deepEqual( Stem("munţii"), "munţ" );
	deepEqual( Stem("munţilor"), "munţ" );
	deepEqual( Stem("mural"), "mural" );
	deepEqual( Stem("murată"), "murat" );
	deepEqual( Stem("muraţi"), "mur" );
	deepEqual( Stem("mură"), "mur" );
	deepEqual( Stem("murături"), "murătur" );
	deepEqual( Stem("murăturilor"), "murătur" );
	deepEqual( Stem("murdar"), "murdar" );
	deepEqual( Stem("murdară"), "murd" );
	deepEqual( Stem("murdare"), "murd" );
	deepEqual( Stem("murdărea"), "murdăr" );
	deepEqual( Stem("murdăria"), "murdăr" );
	deepEqual( Stem("murdărie"), "murdăr" );
	deepEqual( Stem("murdărit"), "murdăr" );
	deepEqual( Stem("mure"), "mur" );
	deepEqual( Stem("murg"), "murg" );
	deepEqual( Stem("muri"), "mur" );
	deepEqual( Stem("murillo"), "murillo" );
	deepEqual( Stem("murim"), "mur" );
	deepEqual( Stem("murise"), "muris" );
	deepEqual( Stem("murit"), "murit" );
	deepEqual( Stem("muritoare"), "murit" );
	deepEqual( Stem("muritor"), "murit" );
	deepEqual( Stem("muritori"), "murit" );
	deepEqual( Stem("murmură"), "murm" );
	deepEqual( Stem("murmure"), "murmur" );
	deepEqual( Stem("musafir"), "musafir" );
	deepEqual( Stem("musafiri"), "musafir" );
	deepEqual( Stem("musafirii"), "musafir" );
	deepEqual( Stem("musai"), "musa" );
	deepEqual( Stem("mustaţa"), "mustaţ" );
	deepEqual( Stem("mustaţă"), "mustaţ" );
	deepEqual( Stem("mustăcioase"), "mustăc" );
	deepEqual( Stem("mustăcios"), "mustăc" );
	deepEqual( Stem("mustăţi"), "mustăţ" );
	deepEqual( Stem("mustăţii"), "mustăţ" );
	deepEqual( Stem("mustăţile"), "mustăţ" );
	deepEqual( Stem("musteala"), "musteal" );
	deepEqual( Stem("mustre"), "mustr" );
	deepEqual( Stem("muşc"), "muşc" );
	deepEqual( Stem("muşca"), "muşc" );
	deepEqual( Stem("muşcat"), "muşcat" );
	deepEqual( Stem("muşcând"), "muşc" );
	deepEqual( Stem("muşcă"), "muşc" );
	deepEqual( Stem("muşchi"), "muşch" );
	deepEqual( Stem("muşchii"), "muşch" );
	deepEqual( Stem("muşchilor"), "muşch" );
	deepEqual( Stem("muşchiulară"), "muşchiul" );
	deepEqual( Stem("muşchiulare"), "muşchiul" );
	deepEqual( Stem("muşte"), "muşt" );
	deepEqual( Stem("muştele"), "muşt" );
	deepEqual( Stem("muşteriii"), "muşterii" );
	deepEqual( Stem("muşti"), "muşt" );
	deepEqual( Stem("muşuroaiele"), "muşuroai" );
	deepEqual( Stem("muşuroi"), "muşuro" );
	deepEqual( Stem("mutarea"), "mutar" );
	deepEqual( Stem("mutat"), "mutat" );
	deepEqual( Stem("mutate"), "mutat" );
	deepEqual( Stem("mutând"), "mutând" );
	deepEqual( Stem("mută"), "mut" );
	deepEqual( Stem("mutăm"), "mut" );
	deepEqual( Stem("mute"), "mut" );
	deepEqual( Stem("muteşte"), "muteşt" );
	deepEqual( Stem("mutra"), "mutr" );
	deepEqual( Stem("mutră"), "mutr" );
	deepEqual( Stem("mutre"), "mutr" );
	deepEqual( Stem("mutrele"), "mutr" );
	deepEqual( Stem("mutual"), "mutual" );
	deepEqual( Stem("muţi"), "muţ" );
	deepEqual( Stem("muză"), "muz" );
	deepEqual( Stem("muzeele"), "muze" );
	deepEqual( Stem("muzeu"), "muzeu" );
	deepEqual( Stem("muzica"), "muzic" );
	deepEqual( Stem("muzicală"), "muzic" );
	deepEqual( Stem("muzicale"), "muzic" );
	deepEqual( Stem("muzicalităţii"), "muzical" );
	deepEqual( Stem("muzică"), "muzic" );
	deepEqual( Stem("muzician"), "muzician" );
	deepEqual( Stem("muzicii"), "muzic" );
	deepEqual( Stem("n"), "n" );
	deepEqual( Stem("nae"), "nae" );
	deepEqual( Stem("nagy"), "nagy" );
	deepEqual( Stem("nai"), "nai" );
	deepEqual( Stem("naiba"), "naib" );
	deepEqual( Stem("naibii"), "naib" );
	deepEqual( Stem("naiv"), "naiv" );
	deepEqual( Stem("naivă"), "naiv" );
	deepEqual( Stem("naive"), "naiv" );
	deepEqual( Stem("naivi"), "naiv" );
	deepEqual( Stem("naivitate"), "naivitat" );
	deepEqual( Stem("naivitatea"), "naivitat" );
	deepEqual( Stem("naivităţi"), "naivităţ" );
	deepEqual( Stem("namilă"), "namil" );
	deepEqual( Stem("napoleon"), "napoleon" );
	deepEqual( Stem("napoleoni"), "napoleon" );
	deepEqual( Stem("napoleonian"), "napoleonian" );
	deepEqual( Stem("narcotic"), "narcot" );
	deepEqual( Stem("nas"), "nas" );
	deepEqual( Stem("nasc"), "nasc" );
	deepEqual( Stem("nască"), "nasc" );
	deepEqual( Stem("nastratin"), "nastratin" );
	deepEqual( Stem("nasture"), "nastur" );
	deepEqual( Stem("nasturi"), "nastur" );
	deepEqual( Stem("nasul"), "nas" );
	deepEqual( Stem("naşte"), "naşt" );
	deepEqual( Stem("naştere"), "naşt" );
	deepEqual( Stem("naşterea"), "naşt" );
	deepEqual( Stem("naşti"), "naşt" );
	deepEqual( Stem("nativ"), "nativ" );
	deepEqual( Stem("nativă"), "nativ" );
	deepEqual( Stem("natura"), "natur" );
	deepEqual( Stem("natural"), "natural" );
	deepEqual( Stem("naturală"), "natural" );
	deepEqual( Stem("naturale"), "natural" );
	deepEqual( Stem("naturaleţe"), "naturaleţ" );
	deepEqual( Stem("naturaliste"), "naturalist" );
	deepEqual( Stem("naturalizarea"), "naturaliz" );
	deepEqual( Stem("naturalizării"), "naturalizăr" );
	deepEqual( Stem("naturalului"), "natural" );
	deepEqual( Stem("natură"), "natur" );
	deepEqual( Stem("naturei"), "nature" );
	deepEqual( Stem("naturi"), "natur" );
	deepEqual( Stem("naturii"), "natur" );
	deepEqual( Stem("naturile"), "natur" );
	deepEqual( Stem("naţie"), "naţ" );
	deepEqual( Stem("naţiei"), "naţ" );
	deepEqual( Stem("naţii"), "naţ" );
	deepEqual( Stem("naţional"), "naţional" );
	deepEqual( Stem("naţională"), "naţional" );
	deepEqual( Stem("naţionale"), "naţional" );
	deepEqual( Stem("naţionalism"), "naţionalist" );
	deepEqual( Stem("naţionalist"), "naţionalist" );
	deepEqual( Stem("naţionalistă"), "naţionalist" );
	deepEqual( Stem("naţionalişti"), "naţionalist" );
	deepEqual( Stem("naţionalitate"), "naţional" );
	deepEqual( Stem("naţionalităţi"), "naţional" );
	deepEqual( Stem("naţionalizarea"), "naţionaliz" );
	deepEqual( Stem("naţionalizate"), "naţionaliz" );
	deepEqual( Stem("naţionalizări"), "naţionalizăr" );
	deepEqual( Stem("naţiune"), "naţiun" );
	deepEqual( Stem("naţiuni"), "naţiun" );
	deepEqual( Stem("naţiunii"), "naţiun" );
	deepEqual( Stem("naufragiat"), "naufrag" );
	deepEqual( Stem("naufragiez"), "naufragiez" );
	deepEqual( Stem("naufragiu"), "naufragiu" );
	deepEqual( Stem("naveta"), "navet" );
	deepEqual( Stem("năbuşită"), "năbuş" );
	deepEqual( Stem("nădăjduiesc"), "nădăjdui" );
	deepEqual( Stem("nădăjduim"), "nădăjdu" );
	deepEqual( Stem("nădăjduind"), "nădăjdu" );
	deepEqual( Stem("nădejde"), "nădejd" );
	deepEqual( Stem("nădejdea"), "nădejd" );
	deepEqual( Stem("nădejdile"), "nădejd" );
	deepEqual( Stem("năduşeală"), "năduşeal" );
	deepEqual( Stem("năduşit"), "năduş" );
	deepEqual( Stem("năduşită"), "năduş" );
	deepEqual( Stem("năduşiţi"), "năduş" );
	deepEqual( Stem("nămăeşti"), "nămăeşt" );
	deepEqual( Stem("năpădit"), "năpăd" );
	deepEqual( Stem("năprasnic"), "năprasn" );
	deepEqual( Stem("năpraznică"), "năprazn" );
	deepEqual( Stem("năpustesc"), "năpust" );
	deepEqual( Stem("năpusteşte"), "năpust" );
	deepEqual( Stem("năpustise"), "năpust" );
	deepEqual( Stem("nările"), "năr" );
	deepEqual( Stem("năruire"), "năru" );
	deepEqual( Stem("năruite"), "năruit" );
	deepEqual( Stem("născare"), "născ" );
	deepEqual( Stem("născiorul"), "născior" );
	deepEqual( Stem("născoceşte"), "născoc" );
	deepEqual( Stem("născut"), "născut" );
	deepEqual( Stem("născută"), "născut" );
	deepEqual( Stem("născute"), "născut" );
	deepEqual( Stem("născuţi"), "născuţ" );
	deepEqual( Stem("năuc"), "năuc" );
	deepEqual( Stem("năucea"), "năuc" );
	deepEqual( Stem("năucesc"), "năuc" );
	deepEqual( Stem("năuceşte"), "năuc" );
	deepEqual( Stem("năucindu"), "năuc" );
	deepEqual( Stem("năucit"), "năucit" );
	deepEqual( Stem("năucitoare"), "năucit" );
	deepEqual( Stem("năucitor"), "năucit" );
	deepEqual( Stem("năut"), "năut" );
	deepEqual( Stem("năvală"), "năval" );
	deepEqual( Stem("năvalnic"), "năvaln" );
	deepEqual( Stem("năvăleam"), "năvăl" );
	deepEqual( Stem("năvălesc"), "năvăl" );
	deepEqual( Stem("năvăleşte"), "năvăl" );
	deepEqual( Stem("năvăli"), "năvăl" );
	deepEqual( Stem("năvălim"), "năvăl" );
	deepEqual( Stem("năvălit"), "năvăl" );
	deepEqual( Stem("năzbâtii"), "năzbât" );
	deepEqual( Stem("năzdrăvană"), "năzdrăvan" );
	deepEqual( Stem("năzdrăvănii"), "năzdrăvăn" );
	deepEqual( Stem("năzdrăvăniile"), "năzdrăvăn" );
	deepEqual( Stem("ncep"), "ncep" );
	deepEqual( Stem("ncerc"), "ncerc" );
	deepEqual( Stem("ncoa"), "nco" );
	deepEqual( Stem("ncolo"), "ncolo" );
	deepEqual( Stem("ndaratelea"), "ndaratel" );
	deepEqual( Stem("ndemâna"), "ndemân" );
	deepEqual( Stem("ndemână"), "ndemân" );
	deepEqual( Stem("ne"), "ne" );
	deepEqual( Stem("neadaptată"), "neadapt" );
	deepEqual( Stem("neadăpostiţi"), "neadăpost" );
	deepEqual( Stem("neadecvată"), "neadecv" );
	deepEqual( Stem("neadevărată"), "neadevăr" );
	deepEqual( Stem("neafişată"), "neafiş" );
	deepEqual( Stem("neagă"), "neag" );
	deepEqual( Stem("neagoe"), "neago" );
	deepEqual( Stem("neagră"), "neagr" );
	deepEqual( Stem("neagu"), "neagu" );
	deepEqual( Stem("neagule"), "neagul" );
	deepEqual( Stem("neajuns"), "neajuns" );
	deepEqual( Stem("nealambicate"), "nealambic" );
	deepEqual( Stem("nealese"), "neal" );
	deepEqual( Stem("nealterat"), "nealter" );
	deepEqual( Stem("nealterată"), "nealter" );
	deepEqual( Stem("neam"), "neam" );
	deepEqual( Stem("neamţ"), "neamţ" );
	deepEqual( Stem("neamţul"), "neamţ" );
	deepEqual( Stem("neamul"), "neam" );
	deepEqual( Stem("neamului"), "neam" );
	deepEqual( Stem("neamurilor"), "neamur" );
	deepEqual( Stem("neangrenat"), "neangren" );
	deepEqual( Stem("neantul"), "neant" );
	deepEqual( Stem("neaoş"), "neaoş" );
	deepEqual( Stem("neapărat"), "neapăr" );
	deepEqual( Stem("neapărată"), "neapăr" );
	deepEqual( Stem("neaprins"), "neaprins" );
	deepEqual( Stem("neaprioric"), "neaprior" );
	deepEqual( Stem("nears"), "nears" );
	deepEqual( Stem("neascunsă"), "neascuns" );
	deepEqual( Stem("neasemănat"), "neasemăn" );
	deepEqual( Stem("neasemănată"), "neasemăn" );
	deepEqual( Stem("neasemănate"), "neasemăn" );
	deepEqual( Stem("neasemuit"), "neasemu" );
	deepEqual( Stem("neastâmpăr"), "neastâmpăr" );
	deepEqual( Stem("neastâmpărat"), "neastâmpăr" );
	deepEqual( Stem("neastâmpărata"), "neastâmpăr" );
	deepEqual( Stem("neastâmpărată"), "neastâmpăr" );
	deepEqual( Stem("neastâmpăraţi"), "neastâmpăr" );
	deepEqual( Stem("neastâmpărul"), "neastâmpăr" );
	deepEqual( Stem("neaşteptat"), "neaştept" );
	deepEqual( Stem("neaşteptată"), "neaştept" );
	deepEqual( Stem("neaşteptate"), "neaştept" );
	deepEqual( Stem("neatenţia"), "neatenţ" );
	deepEqual( Stem("neauzită"), "neauzit" );
	deepEqual( Stem("neavând"), "neav" );
	deepEqual( Stem("nebăgare"), "nebăg" );
	deepEqual( Stem("nebăgaţi"), "nebăg" );
	deepEqual( Stem("nebănuite"), "nebănu" );
	deepEqual( Stem("nebărbierit"), "nebărbier" );
	deepEqual( Stem("nebuloasa"), "nebul" );
	deepEqual( Stem("nebuloasă"), "nebul" );
	deepEqual( Stem("nebun"), "nebun" );
	deepEqual( Stem("nebună"), "nebun" );
	deepEqual( Stem("nebune"), "nebun" );
	deepEqual( Stem("nebunesc"), "nebun" );
	deepEqual( Stem("nebuneşte"), "nebun" );
	deepEqual( Stem("nebunia"), "nebun" );
	deepEqual( Stem("nebunie"), "nebun" );
	deepEqual( Stem("nebuniei"), "nebun" );
	deepEqual( Stem("nebunii"), "nebun" );
	deepEqual( Stem("nebuniilor"), "nebun" );
	deepEqual( Stem("nebunul"), "nebun" );
	deepEqual( Stem("nebunului"), "nebun" );
	deepEqual( Stem("necalculabilă"), "necalcul" );
	deepEqual( Stem("necaz"), "necaz" );
	deepEqual( Stem("necazul"), "necaz" );
	deepEqual( Stem("necazuri"), "necazur" );
	deepEqual( Stem("necazurile"), "necazur" );
	deepEqual( Stem("necăjeşte"), "necăj" );
	deepEqual( Stem("necăjit"), "necăj" );
	deepEqual( Stem("necăjită"), "necăj" );
	deepEqual( Stem("necăjiţi"), "necăj" );
	deepEqual( Stem("necercetate"), "necercet" );
	deepEqual( Stem("necesar"), "necesar" );
	deepEqual( Stem("necesară"), "neces" );
	deepEqual( Stem("necesare"), "neces" );
	deepEqual( Stem("necesari"), "necesar" );
	deepEqual( Stem("necesitate"), "neces" );
	deepEqual( Stem("necesitatea"), "neces" );
	deepEqual( Stem("necesităţi"), "neces" );
	deepEqual( Stem("necesităţii"), "neces" );
	deepEqual( Stem("necesităţile"), "neces" );
	deepEqual( Stem("necesităţilor"), "neces" );
	deepEqual( Stem("neclar"), "neclar" );
	deepEqual( Stem("neclintită"), "neclint" );
	deepEqual( Stem("necognoscibil"), "necognosc" );
	deepEqual( Stem("neconformă"), "neconform" );
	deepEqual( Stem("necontenit"), "neconten" );
	deepEqual( Stem("necontrolabilă"), "necontrol" );
	deepEqual( Stem("necredincioasă"), "necredinc" );
	deepEqual( Stem("necredincioase"), "necredinc" );
	deepEqual( Stem("necredinţa"), "necredinţ" );
	deepEqual( Stem("necrezut"), "necrez" );
	deepEqual( Stem("necruţătoare"), "necruţ" );
	deepEqual( Stem("neculcaţi"), "neculc" );
	deepEqual( Stem("necum"), "necum" );
	deepEqual( Stem("necunoscut"), "necunosc" );
	deepEqual( Stem("necunoscută"), "necunosc" );
	deepEqual( Stem("necunoscute"), "necunosc" );
	deepEqual( Stem("necunoscutul"), "necunosc" );
	deepEqual( Stem("necunoscutului"), "necunosc" );
	deepEqual( Stem("necuprins"), "necuprins" );
	deepEqual( Stem("necurat"), "necur" );
	deepEqual( Stem("nedelicat"), "nedelic" );
	deepEqual( Stem("nedelicate"), "nedelic" );
	deepEqual( Stem("nedelicateţea"), "nedelicateţ" );
	deepEqual( Stem("nedemonstrabil"), "nedemonstr" );
	deepEqual( Stem("nedemonstrabilă"), "nedemonstr" );
	deepEqual( Stem("nedeprinşi"), "nedeprinş" );
	deepEqual( Stem("nedespărţiţi"), "nedespărţ" );
	deepEqual( Stem("nedestoinicia"), "nedestoinic" );
	deepEqual( Stem("nedestupate"), "nedestup" );
	deepEqual( Stem("nedezlegat"), "nedezleg" );
	deepEqual( Stem("nedezorganizată"), "nedezorganiz" );
	deepEqual( Stem("nedibaci"), "nedibac" );
	deepEqual( Stem("nediferenţiat"), "nediferenţ" );
	deepEqual( Stem("nediferenţiate"), "nediferenţ" );
	deepEqual( Stem("nedisciplinat"), "nedisciplin" );
	deepEqual( Stem("nediscutată"), "nediscut" );
	deepEqual( Stem("nedormite"), "nedorm" );
	deepEqual( Stem("nedovedită"), "nedoved" );
	deepEqual( Stem("nedrept"), "nedrept" );
	deepEqual( Stem("nedreptatea"), "nedrept" );
	deepEqual( Stem("nedreptăţeşte"), "nedreptăţ" );
	deepEqual( Stem("nedreptăţiţi"), "nedreptăţ" );
	deepEqual( Stem("nedumerire"), "nedumer" );
	deepEqual( Stem("nedumerirea"), "nedumer" );
	deepEqual( Stem("nedumeriri"), "nedumerir" );
	deepEqual( Stem("nedumerit"), "nedumer" );
	deepEqual( Stem("nedumerită"), "nedumer" );
	deepEqual( Stem("nedumeriţi"), "nedumer" );
	deepEqual( Stem("neempirică"), "neempir" );
	deepEqual( Stem("neempirie"), "neempir" );
	deepEqual( Stem("neeuclidian"), "neeuclidian" );
	deepEqual( Stem("neeuclidiană"), "neeuclidian" );
	deepEqual( Stem("neeuclidiene"), "neeuclidien" );
	deepEqual( Stem("neevoluaţi"), "neevolu" );
	deepEqual( Stem("neexistenţa"), "neexistenţ" );
	deepEqual( Stem("neexprimat"), "neexprim" );
	deepEqual( Stem("nefericit"), "neferic" );
	deepEqual( Stem("nefericită"), "neferic" );
	deepEqual( Stem("nefericitul"), "neferic" );
	deepEqual( Stem("nefiind"), "nefiind" );
	deepEqual( Stem("nefiresc"), "nefir" );
	deepEqual( Stem("nefolositor"), "nefolos" );
	deepEqual( Stem("nefundată"), "nefund" );
	deepEqual( Stem("nefurării"), "nefurăr" );
	deepEqual( Stem("neg"), "neg" );
	deepEqual( Stem("nega"), "neg" );
	deepEqual( Stem("negare"), "negar" );
	deepEqual( Stem("negarea"), "negar" );
	deepEqual( Stem("negat"), "negat" );
	deepEqual( Stem("negate"), "negat" );
	deepEqual( Stem("negativ"), "negat" );
	deepEqual( Stem("negatorul"), "negat" );
	deepEqual( Stem("negaţiilor"), "neg" );
	deepEqual( Stem("negaţiune"), "negat" );
	deepEqual( Stem("negaţiunile"), "negat" );
	deepEqual( Stem("negau"), "negau" );
	deepEqual( Stem("negând"), "negând" );
	deepEqual( Stem("negăm"), "neg" );
	deepEqual( Stem("negări"), "negăr" );
	deepEqual( Stem("negăsind"), "negăs" );
	deepEqual( Stem("nege"), "neg" );
	deepEqual( Stem("neghiob"), "neghiob" );
	deepEqual( Stem("neglijabil"), "neglij" );
	deepEqual( Stem("neglijabilă"), "neglij" );
	deepEqual( Stem("neglijare"), "neglij" );
	deepEqual( Stem("neglijarea"), "neglij" );
	deepEqual( Stem("neglijat"), "neglij" );
	deepEqual( Stem("neglijăm"), "neglij" );
	deepEqual( Stem("neglijează"), "neglij" );
	deepEqual( Stem("neglijenţa"), "neglijenţ" );
	deepEqual( Stem("neglijenţi"), "neglijenţ" );
	deepEqual( Stem("negoţ"), "negoţ" );
	deepEqual( Stem("negre"), "negr" );
	deepEqual( Stem("negreşit"), "negreş" );
	deepEqual( Stem("negri"), "negr" );
	deepEqual( Stem("negricioasă"), "negric" );
	deepEqual( Stem("negricios"), "negric" );
	deepEqual( Stem("negru"), "negru" );
	deepEqual( Stem("negrul"), "negr" );
	deepEqual( Stem("negustor"), "negustor" );
	deepEqual( Stem("negustoreasă"), "negustoreas" );
	deepEqual( Stem("negustori"), "negustor" );
	deepEqual( Stem("negustoria"), "negustor" );
	deepEqual( Stem("negustorie"), "negustor" );
	deepEqual( Stem("negustorul"), "negustor" );
	deepEqual( Stem("nehotărâre"), "nehotăr" );
	deepEqual( Stem("neimaginate"), "neimagin" );
	deepEqual( Stem("neinfluenţat"), "neinfluenţ" );
	deepEqual( Stem("neinteligibile"), "neinteligib" );
	deepEqual( Stem("neistovit"), "neistov" );
	deepEqual( Stem("neistovita"), "neistov" );
	deepEqual( Stem("neistovită"), "neistov" );
	deepEqual( Stem("neizbutind"), "neizbut" );
	deepEqual( Stem("neizbutită"), "neizbut" );
	deepEqual( Stem("neîmpăcaţi"), "neîmpăc" );
	deepEqual( Stem("neîncetat"), "neîncet" );
	deepEqual( Stem("neîncetată"), "neîncet" );
	deepEqual( Stem("neînchipuit"), "neînchipu" );
	deepEqual( Stem("neînchipuită"), "neînchipu" );
	deepEqual( Stem("neîncredere"), "neîncred" );
	deepEqual( Stem("neîncrederea"), "neîncred" );
	deepEqual( Stem("neîncrezându"), "neîncrez" );
	deepEqual( Stem("neîndemânatic"), "neîndemânat" );
	deepEqual( Stem("neîndemânatici"), "neîndemânat" );
	deepEqual( Stem("neîndoielnic"), "neîndoieln" );
	deepEqual( Stem("neîndoios"), "neîndoi" );
	deepEqual( Stem("neîndreptat"), "neîndrept" );
	deepEqual( Stem("neînduplecabil"), "neînduplec" );
	deepEqual( Stem("neînduplecat"), "neînduplec" );
	deepEqual( Stem("neînduplecată"), "neînduplec" );
	deepEqual( Stem("neîndurat"), "neîndur" );
	deepEqual( Stem("neîngrădit"), "neîngrăd" );
	deepEqual( Stem("neînjumătăţită"), "neînjumătăţ" );
	deepEqual( Stem("neînlăturat"), "neînlătur" );
	deepEqual( Stem("neînsemnat"), "neînsemn" );
	deepEqual( Stem("neînsemnată"), "neînsemn" );
	deepEqual( Stem("neînsemnate"), "neînsemn" );
	deepEqual( Stem("neînsufleţit"), "neînsufleţ" );
	deepEqual( Stem("neîntârziat"), "neîntârz" );
	deepEqual( Stem("neîntemeiată"), "neîntemei" );
	deepEqual( Stem("neîntrerupt"), "neîntrerupt" );
	deepEqual( Stem("neîntrerupta"), "neîntrerupt" );
	deepEqual( Stem("neîntreruptă"), "neîntrerupt" );
	deepEqual( Stem("neîntrerupte"), "neîntrerupt" );
	deepEqual( Stem("neînţeleaptă"), "neînţeleapt" );
	deepEqual( Stem("neînţeleasă"), "neînţeleas" );
	deepEqual( Stem("neînţelegere"), "neînţeleg" );
	deepEqual( Stem("neînţelegerea"), "neînţeleg" );
	deepEqual( Stem("neînţelegerile"), "neînţeleger" );
	deepEqual( Stem("neînţeles"), "neînţeles" );
	deepEqual( Stem("neînţelese"), "neînţel" );
	deepEqual( Stem("neînvins"), "neînvins" );
	deepEqual( Stem("nejucat"), "nejuc" );
	deepEqual( Stem("nejudecate"), "nejudec" );
	deepEqual( Stem("nejustificat"), "nejustific" );
	deepEqual( Stem("nejustificată"), "nejustific" );
	deepEqual( Stem("nelaîndemâna"), "nelaîndemân" );
	deepEqual( Stem("nelalocul"), "nelaloc" );
	deepEqual( Stem("nelămurire"), "nelămur" );
	deepEqual( Stem("nelămurită"), "nelămur" );
	deepEqual( Stem("nelămurite"), "nelămur" );
	deepEqual( Stem("nelăsate"), "nelăs" );
	deepEqual( Stem("nelegiuire"), "nelegiu" );
	deepEqual( Stem("nelegiuirea"), "nelegiu" );
	deepEqual( Stem("nelinişte"), "nelinişt" );
	deepEqual( Stem("neliniştea"), "nelinişt" );
	deepEqual( Stem("neliniştit"), "nelinişt" );
	deepEqual( Stem("neliniştite"), "nelinişt" );
	deepEqual( Stem("neliniştiţi"), "nelinişt" );
	deepEqual( Stem("nelipsit"), "nelips" );
	deepEqual( Stem("nelipsite"), "nelips" );
	deepEqual( Stem("nelocalizat"), "nelocaliz" );
	deepEqual( Stem("nelogic"), "nelog" );
	deepEqual( Stem("nelovit"), "nelov" );
	deepEqual( Stem("nelumesc"), "nelum" );
	deepEqual( Stem("nemaiavând"), "nemaiav" );
	deepEqual( Stem("nemaigăsind"), "nemaigăs" );
	deepEqual( Stem("nemaipomenit"), "nemaipomen" );
	deepEqual( Stem("nemaipomenită"), "nemaipomen" );
	deepEqual( Stem("nemaiputându"), "nemaiput" );
	deepEqual( Stem("nematur"), "nematur" );
	deepEqual( Stem("nemângâiat"), "nemângâi" );
	deepEqual( Stem("nemângâiată"), "nemângâi" );
	deepEqual( Stem("nemărginirii"), "nemărginir" );
	deepEqual( Stem("nemărginit"), "nemărgin" );
	deepEqual( Stem("nemărginită"), "nemărgin" );
	deepEqual( Stem("nemăritată"), "nemărit" );
	deepEqual( Stem("nemărturisit"), "nemărturis" );
	deepEqual( Stem("nemărturisită"), "nemărturis" );
	deepEqual( Stem("nemărturisite"), "nemărturis" );
	deepEqual( Stem("nemăsurat"), "nemăsur" );
	deepEqual( Stem("nemeditată"), "nemedit" );
	deepEqual( Stem("nemereşte"), "nemer" );
	deepEqual( Stem("nemeritată"), "nemerit" );
	deepEqual( Stem("nemeşteşugit"), "nemeşteşug" );
	deepEqual( Stem("nemijlocire"), "nemijloc" );
	deepEqual( Stem("nemijlocirea"), "nemijloc" );
	deepEqual( Stem("nemijlocit"), "nemijloc" );
	deepEqual( Stem("nemijlocite"), "nemijloc" );
	deepEqual( Stem("nemilităreşti"), "nemilităr" );
	deepEqual( Stem("nemilos"), "nemil" );
	deepEqual( Stem("nemiluita"), "nemilu" );
	deepEqual( Stem("nemişcare"), "nemişc" );
	deepEqual( Stem("nemişcat"), "nemişc" );
	deepEqual( Stem("nemişcată"), "nemişc" );
	deepEqual( Stem("nemişcaţi"), "nemişc" );
	deepEqual( Stem("nemţească"), "nemţ" );
	deepEqual( Stem("nemţeşte"), "nemţ" );
	deepEqual( Stem("nemţeşti"), "nemţ" );
	deepEqual( Stem("nemţi"), "nemţ" );
	deepEqual( Stem("nemţii"), "nemţ" );
	deepEqual( Stem("nemţilor"), "nemţ" );
	deepEqual( Stem("nemţofil"), "nemţofil" );
	deepEqual( Stem("nemulţumea"), "nemulţum" );
	deepEqual( Stem("nemulţumi"), "nemulţum" );
	deepEqual( Stem("nemulţumire"), "nemulţum" );
	deepEqual( Stem("nemulţumirea"), "nemulţum" );
	deepEqual( Stem("nemulţumit"), "nemulţum" );
	deepEqual( Stem("nenatural"), "nenatural" );
	deepEqual( Stem("nenaţionale"), "nenaţional" );
	deepEqual( Stem("nene"), "nen" );
	deepEqual( Stem("nenorocească"), "nenoroc" );
	deepEqual( Stem("nenorocire"), "nenoroc" );
	deepEqual( Stem("nenorocirea"), "nenoroc" );
	deepEqual( Stem("nenorociri"), "nenorocir" );
	deepEqual( Stem("nenorocirii"), "nenorocir" );
	deepEqual( Stem("nenorocirile"), "nenorocir" );
	deepEqual( Stem("nenorocit"), "nenoroc" );
	deepEqual( Stem("nenorocită"), "nenoroc" );
	deepEqual( Stem("nenorociţi"), "nenoroc" );
	deepEqual( Stem("nenorociţii"), "nenoroc" );
	deepEqual( Stem("nenumărate"), "nenumăr" );
	deepEqual( Stem("nenumăraţi"), "nenumăr" );
	deepEqual( Stem("neobicinuit"), "neobicinu" );
	deepEqual( Stem("neobişnuit"), "neobişnu" );
	deepEqual( Stem("neobişnuită"), "neobişnu" );
	deepEqual( Stem("neobosit"), "neobos" );
	deepEqual( Stem("neobosită"), "neobos" );
	deepEqual( Stem("neobosite"), "neobos" );
	deepEqual( Stem("neochite"), "neochit" );
	deepEqual( Stem("neocolit"), "neocol" );
	deepEqual( Stem("neocolită"), "neocol" );
	deepEqual( Stem("neocupat"), "neocup" );
	deepEqual( Stem("neocupată"), "neocup" );
	deepEqual( Stem("neofeudalism"), "neofeudalist" );
	deepEqual( Stem("neofeudalismul"), "neofeudalist" );
	deepEqual( Stem("neologismelor"), "neologist" );
	deepEqual( Stem("neopozitiviştii"), "neopozitivist" );
	deepEqual( Stem("neortodoxe"), "neortodox" );
	deepEqual( Stem("neostenit"), "neosten" );
	deepEqual( Stem("nepământească"), "nepământ" );
	deepEqual( Stem("nepăsare"), "nepăs" );
	deepEqual( Stem("nepăsătoare"), "nepăs" );
	deepEqual( Stem("nepătruns"), "nepătruns" );
	deepEqual( Stem("nepermis"), "nepermis" );
	deepEqual( Stem("neplăcere"), "neplăc" );
	deepEqual( Stem("neplăcerea"), "neplăc" );
	deepEqual( Stem("neplăcut"), "neplăc" );
	deepEqual( Stem("neplăcută"), "neplăc" );
	deepEqual( Stem("neplăcute"), "neplăc" );
	deepEqual( Stem("neplăcutei"), "neplăcute" );
	deepEqual( Stem("nepoatele"), "nepoat" );
	deepEqual( Stem("nepolitic"), "nepolit" );
	deepEqual( Stem("nepoliticos"), "nepolitic" );
	deepEqual( Stem("nepot"), "nepot" );
	deepEqual( Stem("nepotrivit"), "nepotriv" );
	deepEqual( Stem("nepotul"), "nepot" );
	deepEqual( Stem("nepotului"), "nepot" );
	deepEqual( Stem("nepoţii"), "nepoţ" );
	deepEqual( Stem("nepractic"), "nepract" );
	deepEqual( Stem("neprecis"), "neprecis" );
	deepEqual( Stem("nepreciziune"), "nepreciziun" );
	deepEqual( Stem("nepreţuit"), "nepreţu" );
	deepEqual( Stem("neprevăzut"), "neprevăz" );
	deepEqual( Stem("neprevăzută"), "neprevăz" );
	deepEqual( Stem("neprevăzute"), "neprevăz" );
	deepEqual( Stem("neprevăzutul"), "neprevăz" );
	deepEqual( Stem("neprevenit"), "nepreven" );
	deepEqual( Stem("neprevenită"), "nepreven" );
	deepEqual( Stem("nepricepere"), "nepricep" );
	deepEqual( Stem("neprihăniţi"), "neprihăn" );
	deepEqual( Stem("neptun"), "neptun" );
	deepEqual( Stem("nepusă"), "nepus" );
	deepEqual( Stem("nepuse"), "nepus" );
	deepEqual( Stem("neputincios"), "neputinc" );
	deepEqual( Stem("neputinţa"), "neputinţ" );
	deepEqual( Stem("neputinţă"), "neputinţ" );
	deepEqual( Stem("neputinţei"), "neputinţe" );
	deepEqual( Stem("nerăbdare"), "nerăbd" );
	deepEqual( Stem("nerăbdarea"), "nerăbd" );
	deepEqual( Stem("nerăbdările"), "nerăbdăr" );
	deepEqual( Stem("nerăbdător"), "nerăbd" );
	deepEqual( Stem("nereale"), "nereal" );
	deepEqual( Stem("nerealizabilă"), "nerealiz" );
	deepEqual( Stem("nerecunoscut"), "nerecunosc" );
	deepEqual( Stem("neredus"), "neredus" );
	deepEqual( Stem("nereflectată"), "nereflect" );
	deepEqual( Stem("neregularitate"), "neregular" );
	deepEqual( Stem("neregularităţi"), "neregular" );
	deepEqual( Stem("neregulat"), "neregul" );
	deepEqual( Stem("neregulate"), "neregul" );
	deepEqual( Stem("nereparat"), "nerepar" );
	deepEqual( Stem("nereuşit"), "nereuş" );
	deepEqual( Stem("nereuşite"), "nereuş" );
	deepEqual( Stem("neroadă"), "neroad" );
	deepEqual( Stem("neroade"), "neroad" );
	deepEqual( Stem("nerozi"), "neroz" );
	deepEqual( Stem("nerozie"), "neroz" );
	deepEqual( Stem("nerozii"), "neroz" );
	deepEqual( Stem("neruşinare"), "neruşin" );
	deepEqual( Stem("neruşinarea"), "neruşin" );
	deepEqual( Stem("neruşinat"), "neruşin" );
	deepEqual( Stem("neruşinările"), "neruşinăr" );
	deepEqual( Stem("nervi"), "nerv" );
	deepEqual( Stem("nervii"), "nerv" );
	deepEqual( Stem("nervilor"), "nerv" );
	deepEqual( Stem("nervoasă"), "nervoas" );
	deepEqual( Stem("nervoase"), "nervoas" );
	deepEqual( Stem("nervos"), "nervos" );
	deepEqual( Stem("nervoşi"), "nervoş" );
	deepEqual( Stem("nervozitate"), "nervoz" );
	deepEqual( Stem("nervozitatea"), "nervoz" );
	deepEqual( Stem("nesaţiu"), "nesaţiu" );
	deepEqual( Stem("nesăbuite"), "nesăbu" );
	deepEqual( Stem("nesănătoase"), "nesănăt" );
	deepEqual( Stem("nesecată"), "nesec" );
	deepEqual( Stem("neserioasă"), "neser" );
	deepEqual( Stem("neserioase"), "neser" );
	deepEqual( Stem("neserios"), "neser" );
	deepEqual( Stem("neseriozitatea"), "neserioz" );
	deepEqual( Stem("nesfârşirea"), "nesfârş" );
	deepEqual( Stem("nesfârşit"), "nesfârş" );
	deepEqual( Stem("nesfârşită"), "nesfârş" );
	deepEqual( Stem("nesfârşite"), "nesfârş" );
	deepEqual( Stem("nesigur"), "nesigur" );
	deepEqual( Stem("nesiguranţa"), "nesiguranţ" );
	deepEqual( Stem("nesigură"), "nesig" );
	deepEqual( Stem("nesigure"), "nesigur" );
	deepEqual( Stem("nesilit"), "nesil" );
	deepEqual( Stem("nesiliţi"), "nesil" );
	deepEqual( Stem("nesimţire"), "nesimţ" );
	deepEqual( Stem("nesimţirii"), "nesimţir" );
	deepEqual( Stem("nesimţit"), "nesimţ" );
	deepEqual( Stem("nesimţite"), "nesimţ" );
	deepEqual( Stem("nesimţitori"), "nesimţ" );
	deepEqual( Stem("nesimţiţi"), "nesimţ" );
	deepEqual( Stem("nesincere"), "nesinc" );
	deepEqual( Stem("nesincerităţii"), "nesincer" );
	deepEqual( Stem("nesocotească"), "nesocot" );
	deepEqual( Stem("nesocotinţă"), "nesocotinţ" );
	deepEqual( Stem("nesocotirea"), "nesocot" );
	deepEqual( Stem("nesocotitelor"), "nesocot" );
	deepEqual( Stem("nesolicitate"), "nesol" );
	deepEqual( Stem("nesomn"), "nesomn" );
	deepEqual( Stem("nespălat"), "nespăl" );
	deepEqual( Stem("nespecificate"), "nespecific" );
	deepEqual( Stem("nespecificaţi"), "nespecific" );
	deepEqual( Stem("nespecifice"), "nespecif" );
	deepEqual( Stem("nesperat"), "nesper" );
	deepEqual( Stem("nesperată"), "nesper" );
	deepEqual( Stem("nespus"), "nespus" );
	deepEqual( Stem("nespusă"), "nespus" );
	deepEqual( Stem("nestabil"), "nestabil" );
	deepEqual( Stem("nestandardizată"), "nestandardiz" );
	deepEqual( Stem("nestatornică"), "nestatorn" );
	deepEqual( Stem("nestatornicia"), "nestatornic" );
	deepEqual( Stem("nestavilită"), "nestavil" );
	deepEqual( Stem("nestăpânită"), "nestăpân" );
	deepEqual( Stem("nestăpînită"), "nestăpîn" );
	deepEqual( Stem("nestăvilit"), "nestăvil" );
	deepEqual( Stem("nestrămutat"), "nestrămut" );
	deepEqual( Stem("nesuferind"), "nesufer" );
	deepEqual( Stem("nesuferită"), "nesufer" );
	deepEqual( Stem("nesuferite"), "nesufer" );
	deepEqual( Stem("nesuportat"), "nesuport" );
	deepEqual( Stem("neşlefuit"), "neşlefu" );
	deepEqual( Stem("neşovăitoare"), "neşov" );
	deepEqual( Stem("neşters"), "neşters" );
	deepEqual( Stem("neştiind"), "neştiind" );
	deepEqual( Stem("neştiinţa"), "neştiinţ" );
	deepEqual( Stem("neştiinţă"), "neştiinţ" );
	deepEqual( Stem("neştiinţifizate"), "neştiinţifiz" );
	deepEqual( Stem("neştiut"), "neştiut" );
	deepEqual( Stem("neştiuţi"), "neştiuţ" );
	deepEqual( Stem("net"), "net" );
	deepEqual( Stem("netăgăduită"), "netăgădu" );
	deepEqual( Stem("neted"), "neted" );
	deepEqual( Stem("netedă"), "neted" );
	deepEqual( Stem("netezind"), "netez" );
	deepEqual( Stem("netransformat"), "netransform" );
	deepEqual( Stem("netrăite"), "netrăit" );
	deepEqual( Stem("netrimisă"), "netrimis" );
	deepEqual( Stem("netulburat"), "netulbur" );
	deepEqual( Stem("netulburaţi"), "netulbur" );
	deepEqual( Stem("netuns"), "netuns" );
	deepEqual( Stem("neturburat"), "neturbur" );
	deepEqual( Stem("neturburaţi"), "neturbur" );
	deepEqual( Stem("neţinând"), "neţin" );
	deepEqual( Stem("neue"), "neu" );
	deepEqual( Stem("neuitată"), "neuit" );
	deepEqual( Stem("neuniformitatea"), "neuniform" );
	deepEqual( Stem("neutralitate"), "neutral" );
	deepEqual( Stem("neutralitatea"), "neutral" );
	deepEqual( Stem("neutralităţii"), "neutral" );
	deepEqual( Stem("neutră"), "neutr" );
	deepEqual( Stem("neutri"), "neutr" );
	deepEqual( Stem("nevalabile"), "neval" );
	deepEqual( Stem("nevasta"), "nevast" );
	deepEqual( Stem("nevastă"), "nevast" );
	deepEqual( Stem("nevârstnică"), "nevârstn" );
	deepEqual( Stem("nevăzut"), "nevăz" );
	deepEqual( Stem("nevăzută"), "nevăz" );
	deepEqual( Stem("nevăzuţi"), "nevăzuţ" );
	deepEqual( Stem("neverbală"), "neverbal" );
	deepEqual( Stem("neverbale"), "neverbal" );
	deepEqual( Stem("neverosimilă"), "neverosimil" );
	deepEqual( Stem("neveste"), "nevest" );
	deepEqual( Stem("nevestei"), "neveste" );
	deepEqual( Stem("nevestele"), "nevest" );
	deepEqual( Stem("nevestelor"), "nevest" );
	deepEqual( Stem("nevesti"), "nevest" );
	deepEqual( Stem("nevinovat"), "nevinov" );
	deepEqual( Stem("nevinovată"), "nevinov" );
	deepEqual( Stem("nevoi"), "nevo" );
	deepEqual( Stem("nevoia"), "nevoi" );
	deepEqual( Stem("nevoiaşă"), "nevoiaş" );
	deepEqual( Stem("nevoie"), "nevoi" );
	deepEqual( Stem("nevoile"), "nevo" );
	deepEqual( Stem("nevoit"), "nevoit" );
	deepEqual( Stem("nevoiţi"), "nevo" );
	deepEqual( Stem("nevrând"), "nevr" );
	deepEqual( Stem("nevroză"), "nevroz" );
	deepEqual( Stem("newtonian"), "newtonian" );
	deepEqual( Stem("ni"), "ni" );
	deepEqual( Stem("nicăieri"), "nicăier" );
	deepEqual( Stem("nici"), "nic" );
	deepEqual( Stem("nicidecum"), "nicidecum" );
	deepEqual( Stem("niciodată"), "niciod" );
	deepEqual( Stem("nicolae"), "nicola" );
	deepEqual( Stem("niculae"), "nicula" );
	deepEqual( Stem("nicule"), "nicul" );
	deepEqual( Stem("nicuşor"), "nicuşor" );
	deepEqual( Stem("nien"), "nien" );
	deepEqual( Stem("nietzsche"), "nietzsch" );
	deepEqual( Stem("nietzscheism"), "nietzscheism" );
	deepEqual( Stem("nihil"), "nihil" );
	deepEqual( Stem("nihilo"), "nihilo" );
	deepEqual( Stem("nimănui"), "nimăn" );
	deepEqual( Stem("nimeni"), "nimen" );
	deepEqual( Stem("nimeresc"), "nimer" );
	deepEqual( Stem("nimeri"), "nimer" );
	deepEqual( Stem("nimerit"), "nimer" );
	deepEqual( Stem("nimeriţi"), "nimer" );
	deepEqual( Stem("nimfele"), "nimf" );
	deepEqual( Stem("nimic"), "nimic" );
	deepEqual( Stem("nimicuri"), "nimicur" );
	deepEqual( Stem("nisip"), "nisip" );
	deepEqual( Stem("nisipoase"), "nisip" );
	deepEqual( Stem("nisipului"), "nisip" );
	deepEqual( Stem("nistor"), "nistor" );
	deepEqual( Stem("nistore"), "nistor" );
	deepEqual( Stem("nişte"), "nişt" );
	deepEqual( Stem("nituri"), "nitur" );
	deepEqual( Stem("niţeasca"), "niţeasc" );
	deepEqual( Stem("niţel"), "niţel" );
	deepEqual( Stem("niţică"), "niţic" );
	deepEqual( Stem("nivelare"), "nivel" );
	deepEqual( Stem("nivelului"), "nivel" );
	deepEqual( Stem("noapte"), "noapt" );
	deepEqual( Stem("noaptea"), "noapt" );
	deepEqual( Stem("noaste"), "noast" );
	deepEqual( Stem("noastră"), "noastr" );
	deepEqual( Stem("noastre"), "noastr" );
	deepEqual( Stem("nobil"), "nobil" );
	deepEqual( Stem("nobilă"), "nobil" );
	deepEqual( Stem("nobiliare"), "nobiliar" );
	deepEqual( Stem("nobilimea"), "nobilim" );
	deepEqual( Stem("nobilimii"), "nobilim" );
	deepEqual( Stem("nobilul"), "nobil" );
	deepEqual( Stem("nobilului"), "nobil" );
	deepEqual( Stem("nobleţe"), "nobleţ" );
	deepEqual( Stem("nobleţea"), "nobleţ" );
	deepEqual( Stem("nod"), "nod" );
	deepEqual( Stem("nodul"), "nod" );
	deepEqual( Stem("noi"), "noi" );
	deepEqual( Stem("noii"), "noi" );
	deepEqual( Stem("noimă"), "noim" );
	deepEqual( Stem("nomenclatura"), "nomenclatur" );
	deepEqual( Stem("non"), "non" );
	deepEqual( Stem("noo"), "noo" );
	deepEqual( Stem("nopţei"), "nopţe" );
	deepEqual( Stem("nopţi"), "nopţ" );
	deepEqual( Stem("nopţii"), "nopţ" );
	deepEqual( Stem("nopţile"), "nopţ" );
	deepEqual( Stem("nopţilor"), "nopţ" );
	deepEqual( Stem("nor"), "nor" );
	deepEqual( Stem("nord"), "nord" );
	deepEqual( Stem("nordul"), "nord" );
	deepEqual( Stem("nori"), "nor" );
	deepEqual( Stem("norişorii"), "norişor" );
	deepEqual( Stem("normal"), "normal" );
	deepEqual( Stem("normală"), "normal" );
	deepEqual( Stem("normale"), "normal" );
	deepEqual( Stem("normalitate"), "normal" );
	deepEqual( Stem("normalul"), "normal" );
	deepEqual( Stem("norman"), "norman" );
	deepEqual( Stem("normare"), "norm" );
	deepEqual( Stem("normativ"), "normat" );
	deepEqual( Stem("normativă"), "normat" );
	deepEqual( Stem("normă"), "norm" );
	deepEqual( Stem("norme"), "norm" );
	deepEqual( Stem("normele"), "norm" );
	deepEqual( Stem("normelor"), "norm" );
	deepEqual( Stem("noroc"), "noroc" );
	deepEqual( Stem("norocul"), "noroc" );
	deepEqual( Stem("norocului"), "noroc" );
	deepEqual( Stem("norodul"), "norod" );
	deepEqual( Stem("noroi"), "noro" );
	deepEqual( Stem("noroioşi"), "noroi" );
	deepEqual( Stem("noroiul"), "noroi" );
	deepEqual( Stem("noroiului"), "noroi" );
	deepEqual( Stem("norvegiei"), "norveg" );
	deepEqual( Stem("nostru"), "nostru" );
	deepEqual( Stem("noştri"), "noştr" );
	deepEqual( Stem("nota"), "not" );
	deepEqual( Stem("notari"), "notar" );
	deepEqual( Stem("notau"), "notau" );
	deepEqual( Stem("notă"), "not" );
	deepEqual( Stem("notăm"), "not" );
	deepEqual( Stem("note"), "not" );
	deepEqual( Stem("notele"), "not" );
	deepEqual( Stem("notez"), "notez" );
	deepEqual( Stem("noţiune"), "noţiun" );
	deepEqual( Stem("noţiunea"), "noţiun" );
	deepEqual( Stem("noţiuni"), "noţiun" );
	deepEqual( Stem("noţiunile"), "noţiun" );
	deepEqual( Stem("nou"), "nou" );
	deepEqual( Stem("noua"), "nou" );
	deepEqual( Stem("nouă"), "nou" );
	deepEqual( Stem("nouăzeci"), "nouăzec" );
	deepEqual( Stem("noul"), "noul" );
	deepEqual( Stem("noumen"), "noumen" );
	deepEqual( Stem("noumenului"), "noumen" );
	deepEqual( Stem("nour"), "nour" );
	deepEqual( Stem("noutate"), "noutat" );
	deepEqual( Stem("noutatea"), "noutat" );
	deepEqual( Stem("noutăţi"), "noutăţ" );
	deepEqual( Stem("noutăţii"), "noutăţ" );
	deepEqual( Stem("novicea"), "novic" );
	deepEqual( Stem("novicii"), "novic" );
	deepEqual( Stem("nşală"), "nşal" );
	deepEqual( Stem("nşel"), "nşel" );
	deepEqual( Stem("ntreabă"), "ntreab" );
	deepEqual( Stem("ntregi"), "ntreg" );
	deepEqual( Stem("nţelege"), "nţeleg" );
	deepEqual( Stem("nu"), "nu" );
	deepEqual( Stem("nuanţa"), "nuanţ" );
	deepEqual( Stem("nuanţă"), "nuanţ" );
	deepEqual( Stem("nuanţe"), "nuanţ" );
	deepEqual( Stem("nuanţele"), "nuanţ" );
	deepEqual( Stem("nucleu"), "nucleu" );
	deepEqual( Stem("nud"), "nud" );
	deepEqual( Stem("nuiaua"), "nuiau" );
	deepEqual( Stem("nuiele"), "nui" );
	deepEqual( Stem("nul"), "nul" );
	deepEqual( Stem("nule"), "nul" );
	deepEqual( Stem("numai"), "numa" );
	deepEqual( Stem("numaidecât"), "numaidecât" );
	deepEqual( Stem("număr"), "număr" );
	deepEqual( Stem("numărând"), "număr" );
	deepEqual( Stem("numără"), "număr" );
	deepEqual( Stem("numărul"), "număr" );
	deepEqual( Stem("numărului"), "număr" );
	deepEqual( Stem("nume"), "num" );
	deepEqual( Stem("numea"), "num" );
	deepEqual( Stem("numeam"), "numeam" );
	deepEqual( Stem("numească"), "numeasc" );
	deepEqual( Stem("numeau"), "numeau" );
	deepEqual( Stem("numele"), "num" );
	deepEqual( Stem("numelui"), "numel" );
	deepEqual( Stem("numen"), "numen" );
	deepEqual( Stem("numenul"), "numen" );
	deepEqual( Stem("numere"), "numer" );
	deepEqual( Stem("numerele"), "numer" );
	deepEqual( Stem("numerelor"), "numer" );
	deepEqual( Stem("numeric"), "numer" );
	deepEqual( Stem("numerică"), "numer" );
	deepEqual( Stem("numeroase"), "numer" );
	deepEqual( Stem("numeroasele"), "numer" );
	deepEqual( Stem("numeros"), "numer" );
	deepEqual( Stem("numeroşi"), "numer" );
	deepEqual( Stem("numesc"), "numesc" );
	deepEqual( Stem("numeşte"), "numeşt" );
	deepEqual( Stem("numi"), "num" );
	deepEqual( Stem("numim"), "num" );
	deepEqual( Stem("numirea"), "numir" );
	deepEqual( Stem("numiri"), "numir" );
	deepEqual( Stem("numise"), "numis" );
	deepEqual( Stem("numit"), "numit" );
	deepEqual( Stem("numita"), "numit" );
	deepEqual( Stem("numită"), "numit" );
	deepEqual( Stem("numite"), "numit" );
	deepEqual( Stem("numitei"), "numite" );
	deepEqual( Stem("numitele"), "numit" );
	deepEqual( Stem("numitelor"), "numit" );
	deepEqual( Stem("numitul"), "numit" );
	deepEqual( Stem("numiţii"), "num" );
	deepEqual( Stem("nunta"), "nunt" );
	deepEqual( Stem("nutreţ"), "nutreţ" );
	deepEqual( Stem("nutrită"), "nutrit" );
	deepEqual( Stem("nvăţa"), "nvăţ" );
	deepEqual( Stem("o"), "o" );
	deepEqual( Stem("oacheşă"), "oacheş" );
	deepEqual( Stem("oaie"), "oai" );
	deepEqual( Stem("oala"), "oal" );
	deepEqual( Stem("oală"), "oal" );
	deepEqual( Stem("oameni"), "oamen" );
	deepEqual( Stem("oamenii"), "oamen" );
	deepEqual( Stem("oamenilor"), "oamen" );
	deepEqual( Stem("oancea"), "oanc" );
	deepEqual( Stem("oară"), "oar" );
	deepEqual( Stem("oarbă"), "oarb" );
	deepEqual( Stem("oarbe"), "oarb" );
	deepEqual( Stem("oare"), "oar" );
	deepEqual( Stem("oarecare"), "oarec" );
	deepEqual( Stem("oarecari"), "oarecar" );
	deepEqual( Stem("oarece"), "oarec" );
	deepEqual( Stem("oarecum"), "oarecum" );
	deepEqual( Stem("oase"), "oas" );
	deepEqual( Stem("oaselor"), "oas" );
	deepEqual( Stem("oaspete"), "oaspet" );
	deepEqual( Stem("oaspetelui"), "oaspetel" );
	deepEqual( Stem("oaspeţi"), "oasp" );
	deepEqual( Stem("oaste"), "oast" );
	deepEqual( Stem("oastea"), "oast" );
	deepEqual( Stem("oază"), "oaz" );
	deepEqual( Stem("oazei"), "oaze" );
	deepEqual( Stem("obedient"), "obedient" );
	deepEqual( Stem("obedienţă"), "obedienţ" );
	deepEqual( Stem("obeze"), "obez" );
	deepEqual( Stem("obicei"), "obice" );
	deepEqual( Stem("obiceiul"), "obicei" );
	deepEqual( Stem("obiceiuri"), "obiceiur" );
	deepEqual( Stem("obiceiurile"), "obiceiur" );
	deepEqual( Stem("obicinuia"), "obicinui" );
	deepEqual( Stem("obicinuit"), "obicinu" );
	deepEqual( Stem("obicinuită"), "obicinu" );
	deepEqual( Stem("obidă"), "obid" );
	deepEqual( Stem("obiect"), "obiect" );
	deepEqual( Stem("obiecta"), "obiect" );
	deepEqual( Stem("obiectat"), "obiect" );
	deepEqual( Stem("obiecte"), "obiect" );
	deepEqual( Stem("obiectează"), "obiect" );
	deepEqual( Stem("obiectele"), "obiect" );
	deepEqual( Stem("obiectelor"), "obiect" );
	deepEqual( Stem("obiectez"), "obiect" );
	deepEqual( Stem("obiectiv"), "obiect" );
	deepEqual( Stem("obiectivă"), "obiect" );
	deepEqual( Stem("obiective"), "obiect" );
	deepEqual( Stem("obiectivelor"), "obiect" );
	deepEqual( Stem("obiectivitate"), "obiect" );
	deepEqual( Stem("obiectivitatea"), "obiect" );
	deepEqual( Stem("obiectul"), "obiect" );
	deepEqual( Stem("obiectului"), "obiect" );
	deepEqual( Stem("obiecţia"), "obiecţ" );
	deepEqual( Stem("obiecţie"), "obiecţ" );
	deepEqual( Stem("obiecţii"), "obiecţ" );
	deepEqual( Stem("obiecţiile"), "obiecţ" );
	deepEqual( Stem("obiecţiune"), "obiect" );
	deepEqual( Stem("obiecţiunea"), "obiect" );
	deepEqual( Stem("obişnui"), "obişn" );
	deepEqual( Stem("obişnuia"), "obişnui" );
	deepEqual( Stem("obişnuieşte"), "obişnui" );
	deepEqual( Stem("obişnuieşti"), "obişnui" );
	deepEqual( Stem("obişnuinţe"), "obişnuinţ" );
	deepEqual( Stem("obişnuit"), "obişnu" );
	deepEqual( Stem("obişnuită"), "obişnu" );
	deepEqual( Stem("obişnuite"), "obişnu" );
	deepEqual( Stem("obişnuiţi"), "obişnu" );
	deepEqual( Stem("oblic"), "oblic" );
	deepEqual( Stem("oblică"), "oblic" );
	deepEqual( Stem("obliga"), "oblig" );
	deepEqual( Stem("obligase"), "oblig" );
	deepEqual( Stem("obligat"), "oblig" );
	deepEqual( Stem("obligativităţi"), "oblig" );
	deepEqual( Stem("obligator"), "oblig" );
	deepEqual( Stem("obligatorie"), "obligator" );
	deepEqual( Stem("obligaţia"), "oblig" );
	deepEqual( Stem("obligaţie"), "oblig" );
	deepEqual( Stem("obligaţii"), "oblig" );
	deepEqual( Stem("obligaţiile"), "oblig" );
	deepEqual( Stem("obligaţiune"), "oblig" );
	deepEqual( Stem("obligă"), "oblig" );
	deepEqual( Stem("oblige"), "oblig" );
	deepEqual( Stem("obloane"), "obloan" );
	deepEqual( Stem("obor"), "obor" );
	deepEqual( Stem("oborului"), "obor" );
	deepEqual( Stem("oboseala"), "oboseal" );
	deepEqual( Stem("oboseală"), "oboseal" );
	deepEqual( Stem("oboselii"), "obosel" );
	deepEqual( Stem("obosim"), "obos" );
	deepEqual( Stem("obosit"), "obos" );
	deepEqual( Stem("obosită"), "obos" );
	deepEqual( Stem("obosite"), "obos" );
	deepEqual( Stem("obositoare"), "obos" );
	deepEqual( Stem("obosiţi"), "obos" );
	deepEqual( Stem("obraji"), "obraj" );
	deepEqual( Stem("obrajii"), "obraj" );
	deepEqual( Stem("obrajilor"), "obraj" );
	deepEqual( Stem("obraz"), "obraz" );
	deepEqual( Stem("obraznic"), "obrazn" );
	deepEqual( Stem("obraznică"), "obrazn" );
	deepEqual( Stem("obraznice"), "obrazn" );
	deepEqual( Stem("obrazul"), "obraz" );
	deepEqual( Stem("obrazurile"), "obrazur" );
	deepEqual( Stem("obrăzniceşte"), "obrăznic" );
	deepEqual( Stem("obrăznicie"), "obrăznic" );
	deepEqual( Stem("obscure"), "obscur" );
	deepEqual( Stem("obscuri"), "obscur" );
	deepEqual( Stem("obsedante"), "obsed" );
	deepEqual( Stem("obsedat"), "obsed" );
	deepEqual( Stem("obsedaţi"), "obsed" );
	deepEqual( Stem("observ"), "observ" );
	deepEqual( Stem("observa"), "observ" );
	deepEqual( Stem("observabil"), "observ" );
	deepEqual( Stem("observam"), "observ" );
	deepEqual( Stem("observarea"), "observ" );
	deepEqual( Stem("observat"), "observ" );
	deepEqual( Stem("observată"), "observ" );
	deepEqual( Stem("observatorii"), "observ" );
	deepEqual( Stem("observatorul"), "observ" );
	deepEqual( Stem("observaţia"), "observ" );
	deepEqual( Stem("observaţie"), "observ" );
	deepEqual( Stem("observaţiei"), "observ" );
	deepEqual( Stem("observaţii"), "observ" );
	deepEqual( Stem("observaţiile"), "observ" );
	deepEqual( Stem("observând"), "observ" );
	deepEqual( Stem("observă"), "observ" );
	deepEqual( Stem("observăm"), "observ" );
	deepEqual( Stem("observe"), "observ" );
	deepEqual( Stem("observi"), "observ" );
	deepEqual( Stem("obsesia"), "obses" );
	deepEqual( Stem("obsesie"), "obses" );
	deepEqual( Stem("obsesii"), "obses" );
	deepEqual( Stem("obsesiune"), "obsesiun" );
	deepEqual( Stem("obsesiuni"), "obsesiun" );
	deepEqual( Stem("obstacolele"), "obstacol" );
	deepEqual( Stem("obştesc"), "obştesc" );
	deepEqual( Stem("obtuzi"), "obtuz" );
	deepEqual( Stem("obţin"), "obţin" );
	deepEqual( Stem("obţină"), "obţin" );
	deepEqual( Stem("obţine"), "obţin" );
	deepEqual( Stem("obţinusem"), "obţin" );
	deepEqual( Stem("obţinut"), "obţin" );
	deepEqual( Stem("obţinute"), "obţin" );
	deepEqual( Stem("obuz"), "obuz" );
	deepEqual( Stem("obuze"), "obuz" );
	deepEqual( Stem("obuzele"), "obuz" );
	deepEqual( Stem("obuzul"), "obuz" );
	deepEqual( Stem("obuzului"), "obuz" );
	deepEqual( Stem("ocazia"), "ocaz" );
	deepEqual( Stem("ocazie"), "ocaz" );
	deepEqual( Stem("ocazii"), "ocaz" );
	deepEqual( Stem("ocaziune"), "ocaziun" );
	deepEqual( Stem("ocărască"), "ocărasc" );
	deepEqual( Stem("ocări"), "ocăr" );
	deepEqual( Stem("occidental"), "occidental" );
	deepEqual( Stem("occidentale"), "occidental" );
	deepEqual( Stem("ocean"), "ocean" );
	deepEqual( Stem("ochească"), "ocheasc" );
	deepEqual( Stem("ochelari"), "ochelar" );
	deepEqual( Stem("ochelarii"), "ochelar" );
	deepEqual( Stem("ochesc"), "ochesc" );
	deepEqual( Stem("ocheşte"), "ocheşt" );
	deepEqual( Stem("ochi"), "ochi" );
	deepEqual( Stem("ochii"), "ochi" );
	deepEqual( Stem("ochilor"), "ochi" );
	deepEqual( Stem("ochit"), "ochit" );
	deepEqual( Stem("ochite"), "ochit" );
	deepEqual( Stem("ochiul"), "ochi" );
	deepEqual( Stem("ochiului"), "ochi" );
	deepEqual( Stem("ocna"), "ocna" );
	deepEqual( Stem("ocnaşi"), "ocnaş" );
	deepEqual( Stem("ocnaşii"), "ocnaş" );
	deepEqual( Stem("ocnă"), "ocnă" );
	deepEqual( Stem("ocnele"), "ocne" );
	deepEqual( Stem("ocol"), "ocol" );
	deepEqual( Stem("ocolea"), "ocol" );
	deepEqual( Stem("ocolesc"), "ocol" );
	deepEqual( Stem("ocoleşte"), "ocol" );
	deepEqual( Stem("ocoleşti"), "ocol" );
	deepEqual( Stem("ocoli"), "ocol" );
	deepEqual( Stem("ocolim"), "ocol" );
	deepEqual( Stem("ocolind"), "ocol" );
	deepEqual( Stem("ocolire"), "ocol" );
	deepEqual( Stem("ocolişuri"), "ocolişur" );
	deepEqual( Stem("ocolit"), "ocol" );
	deepEqual( Stem("ocolită"), "ocol" );
	deepEqual( Stem("ocoliţi"), "ocol" );
	deepEqual( Stem("ocolul"), "ocol" );
	deepEqual( Stem("ocoluri"), "ocolur" );
	deepEqual( Stem("ocolurile"), "ocolur" );
	deepEqual( Stem("ocrotit"), "ocrot" );
	deepEqual( Stem("ocrotitoare"), "ocrot" );
	deepEqual( Stem("ocrotitor"), "ocrot" );
	deepEqual( Stem("ocrotiţi"), "ocrot" );
	deepEqual( Stem("octavă"), "octav" );
	deepEqual( Stem("octavian"), "octavian" );
	deepEqual( Stem("octet"), "octet" );
	deepEqual( Stem("octeţi"), "octeţ" );
	deepEqual( Stem("octogenarul"), "octogenar" );
	deepEqual( Stem("octombrie"), "octombr" );
	deepEqual( Stem("ocular"), "ocular" );
	deepEqual( Stem("ocult"), "ocult" );
	deepEqual( Stem("ocultarea"), "ocult" );
	deepEqual( Stem("ocultat"), "ocult" );
	deepEqual( Stem("ocultă"), "ocult" );
	deepEqual( Stem("ocultării"), "ocultăr" );
	deepEqual( Stem("oculţi"), "oculţ" );
	deepEqual( Stem("ocup"), "ocup" );
	deepEqual( Stem("ocupa"), "ocup" );
	deepEqual( Stem("ocupai"), "ocup" );
	deepEqual( Stem("ocupanţi"), "ocupanţ" );
	deepEqual( Stem("ocupanţii"), "ocupanţ" );
	deepEqual( Stem("ocupase"), "ocup" );
	deepEqual( Stem("ocupat"), "ocup" );
	deepEqual( Stem("ocupată"), "ocup" );
	deepEqual( Stem("ocupaţi"), "ocup" );
	deepEqual( Stem("ocupaţie"), "ocup" );
	deepEqual( Stem("ocupând"), "ocup" );
	deepEqual( Stem("ocupă"), "ocup" );
	deepEqual( Stem("ocupăm"), "ocup" );
	deepEqual( Stem("ocupe"), "ocup" );
	deepEqual( Stem("odaia"), "odai" );
	deepEqual( Stem("odaie"), "odai" );
	deepEqual( Stem("odată"), "odat" );
	deepEqual( Stem("odăi"), "odă" );
	deepEqual( Stem("odăii"), "odăi" );
	deepEqual( Stem("odăiţa"), "odăiţ" );
	deepEqual( Stem("odicolonului"), "odicolon" );
	deepEqual( Stem("odihna"), "odihn" );
	deepEqual( Stem("odihnă"), "odihn" );
	deepEqual( Stem("odihneai"), "odihn" );
	deepEqual( Stem("odihnească"), "odihn" );
	deepEqual( Stem("odihnesc"), "odihn" );
	deepEqual( Stem("odihnit"), "odihn" );
	deepEqual( Stem("odinioară"), "odinioar" );
	deepEqual( Stem("odioasă"), "odioas" );
	deepEqual( Stem("odobeşti"), "odob" );
	deepEqual( Stem("odobeştilor"), "odob" );
	deepEqual( Stem("odraslele"), "odrasl" );
	deepEqual( Stem("of"), "of" );
	deepEqual( Stem("ofensate"), "ofens" );
	deepEqual( Stem("ofensator"), "ofens" );
	deepEqual( Stem("ofensă"), "ofens" );
	deepEqual( Stem("ofense"), "ofen" );
	deepEqual( Stem("ofensiva"), "ofens" );
	deepEqual( Stem("ofensivă"), "ofens" );
	deepEqual( Stem("ofer"), "ofer" );
	deepEqual( Stem("oferă"), "ofer" );
	deepEqual( Stem("ofere"), "ofer" );
	deepEqual( Stem("oferea"), "ofer" );
	deepEqual( Stem("oferi"), "ofer" );
	deepEqual( Stem("oferim"), "ofer" );
	deepEqual( Stem("oferind"), "ofer" );
	deepEqual( Stem("oferisem"), "ofer" );
	deepEqual( Stem("oferit"), "ofer" );
	deepEqual( Stem("oferite"), "ofer" );
	deepEqual( Stem("oferiţi"), "ofer" );
	deepEqual( Stem("oferta"), "ofert" );
	deepEqual( Stem("ofertă"), "ofert" );
	deepEqual( Stem("oficial"), "oficial" );
	deepEqual( Stem("oficială"), "oficial" );
	deepEqual( Stem("oficiale"), "oficial" );
	deepEqual( Stem("oficializare"), "oficializ" );
	deepEqual( Stem("ofiţer"), "ofiţer" );
	deepEqual( Stem("ofiţeresc"), "ofiţer" );
	deepEqual( Stem("ofiţeri"), "ofiţer" );
	deepEqual( Stem("ofiţerii"), "ofiţer" );
	deepEqual( Stem("ofiţerilor"), "ofiţer" );
	deepEqual( Stem("ofiţerimea"), "ofiţerim" );
	deepEqual( Stem("ofiţerul"), "ofiţer" );
	deepEqual( Stem("ofiţerului"), "ofiţer" );
	deepEqual( Stem("ofta"), "ofta" );
	deepEqual( Stem("oftică"), "oftic" );
	deepEqual( Stem("ofuri"), "ofur" );
	deepEqual( Stem("oglinda"), "oglind" );
	deepEqual( Stem("oglindă"), "oglind" );
	deepEqual( Stem("oglinjoara"), "oglinjoar" );
	deepEqual( Stem("oglinzi"), "oglinz" );
	deepEqual( Stem("oglinzile"), "oglinz" );
	deepEqual( Stem("oglinzilor"), "oglinz" );
	deepEqual( Stem("ogor"), "ogor" );
	deepEqual( Stem("ograda"), "ograd" );
	deepEqual( Stem("oh"), "oh" );
	deepEqual( Stem("oi"), "oi" );
	deepEqual( Stem("olanda"), "oland" );
	deepEqual( Stem("olandă"), "oland" );
	deepEqual( Stem("olandeze"), "oland" );
	deepEqual( Stem("olari"), "olar" );
	deepEqual( Stem("olfactive"), "olfact" );
	deepEqual( Stem("olimpică"), "olimp" );
	deepEqual( Stem("olt"), "olt" );
	deepEqual( Stem("oltenesc"), "olten" );
	deepEqual( Stem("oltul"), "olt" );
	deepEqual( Stem("oltului"), "olt" );
	deepEqual( Stem("om"), "om" );
	deepEqual( Stem("omagiile"), "omag" );
	deepEqual( Stem("omega"), "omeg" );
	deepEqual( Stem("omenească"), "omen" );
	deepEqual( Stem("omenesc"), "omen" );
	deepEqual( Stem("omenescului"), "omen" );
	deepEqual( Stem("omeneşti"), "omen" );
	deepEqual( Stem("omenie"), "omen" );
	deepEqual( Stem("omenire"), "omen" );
	deepEqual( Stem("omenirea"), "omen" );
	deepEqual( Stem("omeniri"), "omenir" );
	deepEqual( Stem("omenirii"), "omenir" );
	deepEqual( Stem("omoară"), "omoar" );
	deepEqual( Stem("omoare"), "omoar" );
	deepEqual( Stem("omogen"), "omogen" );
	deepEqual( Stem("omogenitate"), "omogen" );
	deepEqual( Stem("omogenităţii"), "omogen" );
	deepEqual( Stem("omogenizarea"), "omogeniz" );
	deepEqual( Stem("omogenizat"), "omogeniz" );
	deepEqual( Stem("omogenizează"), "omogeniz" );
	deepEqual( Stem("omologare"), "omolog" );
	deepEqual( Stem("omologii"), "omolog" );
	deepEqual( Stem("omologilor"), "omolog" );
	deepEqual( Stem("omologul"), "omolog" );
	deepEqual( Stem("omomastică"), "omomast" );
	deepEqual( Stem("omonim"), "omon" );
	deepEqual( Stem("omonimia"), "omonim" );
	deepEqual( Stem("omonimii"), "omonim" );
	deepEqual( Stem("omoplatului"), "omopl" );
	deepEqual( Stem("omor"), "omor" );
	deepEqual( Stem("omorâm"), "omor" );
	deepEqual( Stem("omorât"), "omorât" );
	deepEqual( Stem("omorâtoare"), "omorâtoar" );
	deepEqual( Stem("omori"), "omor" );
	deepEqual( Stem("omorî"), "omorî" );
	deepEqual( Stem("omorîm"), "omorîm" );
	deepEqual( Stem("omorîre"), "omorîr" );
	deepEqual( Stem("omorît"), "omorît" );
	deepEqual( Stem("omorîtă"), "omorît" );
	deepEqual( Stem("omul"), "om" );
	deepEqual( Stem("omule"), "omul" );
	deepEqual( Stem("omuleţul"), "omuleţ" );
	deepEqual( Stem("omului"), "om" );
	deepEqual( Stem("on"), "on" );
	deepEqual( Stem("onctuos"), "onctuos" );
	deepEqual( Stem("ondulat"), "ondul" );
	deepEqual( Stem("oneroase"), "oner" );
	deepEqual( Stem("onest"), "onest" );
	deepEqual( Stem("onestă"), "onest" );
	deepEqual( Stem("onestitate"), "onest" );
	deepEqual( Stem("onestităţi"), "onest" );
	deepEqual( Stem("onestităţii"), "onest" );
	deepEqual( Stem("oneşti"), "oneşt" );
	deepEqual( Stem("oniric"), "onir" );
	deepEqual( Stem("onirică"), "onir" );
	deepEqual( Stem("onoare"), "onoar" );
	deepEqual( Stem("onoarea"), "onoar" );
	deepEqual( Stem("onomastic"), "onomast" );
	deepEqual( Stem("onomastică"), "onomast" );
	deepEqual( Stem("onomatopee"), "onomatope" );
	deepEqual( Stem("onomatopeelor"), "onomatope" );
	deepEqual( Stem("onomatopeic"), "onomatop" );
	deepEqual( Stem("onomatopeică"), "onomatop" );
	deepEqual( Stem("onor"), "onor" );
	deepEqual( Stem("onora"), "onor" );
	deepEqual( Stem("onorabil"), "onor" );
	deepEqual( Stem("onorabilă"), "onor" );
	deepEqual( Stem("onorabile"), "onor" );
	deepEqual( Stem("onorabili"), "onor" );
	deepEqual( Stem("onorabilitate"), "onor" );
	deepEqual( Stem("onorabilităţii"), "onor" );
	deepEqual( Stem("onorabilului"), "onor" );
	deepEqual( Stem("onorarea"), "onor" );
	deepEqual( Stem("onorariilor"), "onorar" );
	deepEqual( Stem("onorariu"), "onorariu" );
	deepEqual( Stem("onorat"), "onor" );
	deepEqual( Stem("onoratul"), "onor" );
	deepEqual( Stem("onoraţii"), "onor" );
	deepEqual( Stem("onorau"), "onor" );
	deepEqual( Stem("onorează"), "onor" );
	deepEqual( Stem("onorific"), "onorif" );
	deepEqual( Stem("onorifică"), "onorif" );
	deepEqual( Stem("onorifice"), "onorif" );
	deepEqual( Stem("onoruri"), "onorur" );
	deepEqual( Stem("onorurile"), "onorur" );
	deepEqual( Stem("ontogeneză"), "ontogenez" );
	deepEqual( Stem("ontologia"), "ontolog" );
	deepEqual( Stem("ontologic"), "ontolog" );
	deepEqual( Stem("ontologică"), "ontolog" );
	deepEqual( Stem("ontologice"), "ontolog" );
	deepEqual( Stem("ontologizat"), "ontologiz" );
	deepEqual( Stem("opac"), "opac" );
	deepEqual( Stem("opera"), "oper" );
	deepEqual( Stem("operat"), "oper" );
	deepEqual( Stem("operaţia"), "oper" );
	deepEqual( Stem("operaţie"), "oper" );
	deepEqual( Stem("operaţii"), "oper" );
	deepEqual( Stem("operaţiile"), "oper" );
	deepEqual( Stem("operaţiune"), "oper" );
	deepEqual( Stem("operaţiunea"), "oper" );
	deepEqual( Stem("operaţiuni"), "operat" );
	deepEqual( Stem("operaţiunile"), "operat" );
	deepEqual( Stem("operă"), "oper" );
	deepEqual( Stem("operează"), "oper" );
	deepEqual( Stem("operei"), "opere" );
	deepEqual( Stem("operelor"), "oper" );
	deepEqual( Stem("operetă"), "operet" );
	deepEqual( Stem("opinci"), "opinc" );
	deepEqual( Stem("opinia"), "opin" );
	deepEqual( Stem("opinie"), "opin" );
	deepEqual( Stem("opinii"), "opin" );
	deepEqual( Stem("opiniile"), "opin" );
	deepEqual( Stem("opintindu"), "opint" );
	deepEqual( Stem("opozant"), "opoz" );
	deepEqual( Stem("opoziţie"), "opoziţ" );
	deepEqual( Stem("opoziţiei"), "opoz" );
	deepEqual( Stem("opoziţii"), "opoz" );
	deepEqual( Stem("opoziţionist"), "opoziţionist" );
	deepEqual( Stem("oprească"), "opreasc" );
	deepEqual( Stem("opresc"), "opresc" );
	deepEqual( Stem("opreşte"), "opreşt" );
	deepEqual( Stem("opreşti"), "opreşt" );
	deepEqual( Stem("opri"), "opri" );
	deepEqual( Stem("oprim"), "oprim" );
	deepEqual( Stem("oprind"), "oprind" );
	deepEqual( Stem("oprindu"), "oprindu" );
	deepEqual( Stem("oprire"), "oprir" );
	deepEqual( Stem("oprirea"), "oprir" );
	deepEqual( Stem("opriri"), "oprir" );
	deepEqual( Stem("oprise"), "opri" );
	deepEqual( Stem("oprit"), "oprit" );
	deepEqual( Stem("oprită"), "oprit" );
	deepEqual( Stem("opriţi"), "opriţ" );
	deepEqual( Stem("opt"), "opt" );
	deepEqual( Stem("opta"), "opta" );
	deepEqual( Stem("optat"), "optat" );
	deepEqual( Stem("optimism"), "optimist" );
	deepEqual( Stem("optimismul"), "optimist" );
	deepEqual( Stem("optimistă"), "optimist" );
	deepEqual( Stem("optimişti"), "optimist" );
	deepEqual( Stem("optzeci"), "optzec" );
	deepEqual( Stem("opune"), "opun" );
	deepEqual( Stem("opunere"), "opun" );
	deepEqual( Stem("opunerea"), "opun" );
	deepEqual( Stem("opus"), "opus" );
	deepEqual( Stem("opusă"), "opus" );
	deepEqual( Stem("opuse"), "opu" );
	deepEqual( Stem("or"), "or" );
	deepEqual( Stem("ora"), "ora" );
	deepEqual( Stem("oraş"), "oraş" );
	deepEqual( Stem("oraşe"), "oraş" );
	deepEqual( Stem("oraşele"), "oraş" );
	deepEqual( Stem("oraşelor"), "oraş" );
	deepEqual( Stem("oraşul"), "oraş" );
	deepEqual( Stem("oraşului"), "oraş" );
	deepEqual( Stem("orator"), "orat" );
	deepEqual( Stem("oratori"), "orat" );
	deepEqual( Stem("oratoriei"), "orat" );
	deepEqual( Stem("oratorul"), "orat" );
	deepEqual( Stem("orânduială"), "orânduial" );
	deepEqual( Stem("oră"), "oră" );
	deepEqual( Stem("orăşel"), "orăşel" );
	deepEqual( Stem("orăşelul"), "orăşel" );
	deepEqual( Stem("orăşenească"), "orăşen" );
	deepEqual( Stem("orăşenilor"), "orăşen" );
	deepEqual( Stem("orăşenizate"), "orăşeniz" );
	deepEqual( Stem("orb"), "orb" );
	deepEqual( Stem("orbeşte"), "orbeşt" );
	deepEqual( Stem("orbi"), "orbi" );
	deepEqual( Stem("orbire"), "orbir" );
	deepEqual( Stem("orbita"), "orbit" );
	deepEqual( Stem("orbite"), "orbit" );
	deepEqual( Stem("orbitei"), "orbite" );
	deepEqual( Stem("orchestra"), "orchestr" );
	deepEqual( Stem("orchestră"), "orchestr" );
	deepEqual( Stem("ordin"), "ordin" );
	deepEqual( Stem("ordinal"), "ordinal" );
	deepEqual( Stem("ordinar"), "ordinar" );
	deepEqual( Stem("ordine"), "ordin" );
	deepEqual( Stem("ordinea"), "ordin" );
	deepEqual( Stem("ordinei"), "ordine" );
	deepEqual( Stem("ordinele"), "ordin" );
	deepEqual( Stem("ordinul"), "ordin" );
	deepEqual( Stem("ordon"), "ordon" );
	deepEqual( Stem("ordonanţa"), "ordonanţ" );
	deepEqual( Stem("ordonanţă"), "ordonanţ" );
	deepEqual( Stem("ordonanţe"), "ordonanţ" );
	deepEqual( Stem("ordonanţei"), "ordonanţe" );
	deepEqual( Stem("ordonanţele"), "ordonanţ" );
	deepEqual( Stem("ordonarea"), "ordon" );
	deepEqual( Stem("ordonată"), "ordon" );
	deepEqual( Stem("ore"), "ore" );
	deepEqual( Stem("orei"), "ore" );
	deepEqual( Stem("orele"), "ore" );
	deepEqual( Stem("orelor"), "ore" );
	deepEqual( Stem("orfeu"), "orfeu" );
	deepEqual( Stem("organ"), "organ" );
	deepEqual( Stem("organe"), "organ" );
	deepEqual( Stem("organelor"), "organ" );
	deepEqual( Stem("organică"), "organ" );
	deepEqual( Stem("organice"), "organ" );
	deepEqual( Stem("organism"), "organist" );
	deepEqual( Stem("organisme"), "organist" );
	deepEqual( Stem("organismul"), "organist" );
	deepEqual( Stem("organismului"), "organist" );
	deepEqual( Stem("organiza"), "organiz" );
	deepEqual( Stem("organizarea"), "organiz" );
	deepEqual( Stem("organizat"), "organiz" );
	deepEqual( Stem("organizată"), "organiz" );
	deepEqual( Stem("organizate"), "organiz" );
	deepEqual( Stem("organizatori"), "organiz" );
	deepEqual( Stem("organizaţia"), "organiz" );
	deepEqual( Stem("organizaţii"), "organiz" );
	deepEqual( Stem("organizări"), "organizăr" );
	deepEqual( Stem("organizării"), "organizăr" );
	deepEqual( Stem("organizează"), "organiz" );
	deepEqual( Stem("organizeze"), "organiz" );
	deepEqual( Stem("orgie"), "orgie" );
	deepEqual( Stem("orgiilor"), "orgi" );
	deepEqual( Stem("orgolios"), "orgol" );
	deepEqual( Stem("orgoliu"), "orgoliu" );
	deepEqual( Stem("orgoliul"), "orgol" );
	deepEqual( Stem("orgoliului"), "orgol" );
	deepEqual( Stem("ori"), "ori" );
	deepEqual( Stem("oricare"), "oric" );
	deepEqual( Stem("oricând"), "oric" );
	deepEqual( Stem("oricât"), "oricât" );
	deepEqual( Stem("oricărei"), "oricăre" );
	deepEqual( Stem("oricăreia"), "oricărei" );
	deepEqual( Stem("oricăror"), "oricăror" );
	deepEqual( Stem("oricărui"), "oricăr" );
	deepEqual( Stem("oricăruia"), "oricărui" );
	deepEqual( Stem("orice"), "oric" );
	deepEqual( Stem("oricine"), "oricin" );
	deepEqual( Stem("oricui"), "oric" );
	deepEqual( Stem("oricum"), "oricum" );
	deepEqual( Stem("oriental"), "oriental" );
	deepEqual( Stem("orientale"), "oriental" );
	deepEqual( Stem("orientalii"), "oriental" );
	deepEqual( Stem("orientare"), "orient" );
	deepEqual( Stem("orientarea"), "orient" );
	deepEqual( Stem("orientat"), "orient" );
	deepEqual( Stem("orientate"), "orient" );
	deepEqual( Stem("orientării"), "orientăr" );
	deepEqual( Stem("orientează"), "orient" );
	deepEqual( Stem("orientez"), "orient" );
	deepEqual( Stem("orienteze"), "orient" );
	deepEqual( Stem("original"), "original" );
	deepEqual( Stem("originală"), "original" );
	deepEqual( Stem("originale"), "original" );
	deepEqual( Stem("originalitate"), "original" );
	deepEqual( Stem("originalitatea"), "original" );
	deepEqual( Stem("originalităţii"), "original" );
	deepEqual( Stem("originalităţile"), "original" );
	deepEqual( Stem("originalul"), "original" );
	deepEqual( Stem("originar"), "originar" );
	deepEqual( Stem("originară"), "origin" );
	deepEqual( Stem("origine"), "origin" );
	deepEqual( Stem("originea"), "origin" );
	deepEqual( Stem("originei"), "origine" );
	deepEqual( Stem("originii"), "origin" );
	deepEqual( Stem("originilor"), "origin" );
	deepEqual( Stem("orişan"), "orişan" );
	deepEqual( Stem("orişicare"), "orişic" );
	deepEqual( Stem("orişicât"), "orişicât" );
	deepEqual( Stem("oriunde"), "oriund" );
	deepEqual( Stem("orizont"), "orizont" );
	deepEqual( Stem("orizontul"), "orizont" );
	deepEqual( Stem("orizontului"), "orizont" );
	deepEqual( Stem("ornament"), "ornament" );
	deepEqual( Stem("ornamental"), "ornamental" );
	deepEqual( Stem("ornamentală"), "ornamental" );
	deepEqual( Stem("ornamentale"), "ornamental" );
	deepEqual( Stem("ornamentul"), "ornament" );
	deepEqual( Stem("oroare"), "oroar" );
	deepEqual( Stem("oroarea"), "oroar" );
	deepEqual( Stem("orori"), "oror" );
	deepEqual( Stem("orşova"), "orşov" );
	deepEqual( Stem("ortodoxii"), "ortodox" );
	deepEqual( Stem("ortografică"), "ortograf" );
	deepEqual( Stem("orzaru"), "orzaru" );
	deepEqual( Stem("os"), "os" );
	deepEqual( Stem("osândiţi"), "osând" );
	deepEqual( Stem("osebit"), "oseb" );
	deepEqual( Stem("osiile"), "osi" );
	deepEqual( Stem("osiris"), "osiris" );
	deepEqual( Stem("osoasă"), "osoas" );
	deepEqual( Stem("ospitalier"), "ospitalier" );
	deepEqual( Stem("ostatic"), "ostat" );
	deepEqual( Stem("osteneala"), "osteneal" );
	deepEqual( Stem("osteneală"), "osteneal" );
	deepEqual( Stem("ostenească"), "osten" );
	deepEqual( Stem("ostenesc"), "osten" );
	deepEqual( Stem("ostenit"), "osten" );
	deepEqual( Stem("ostentativ"), "ostent" );
	deepEqual( Stem("ostentative"), "ostent" );
	deepEqual( Stem("ostentaţia"), "ostent" );
	deepEqual( Stem("ostentaţie"), "ostent" );
	deepEqual( Stem("ostilă"), "ostil" );
	deepEqual( Stem("ostile"), "osti" );
	deepEqual( Stem("ostilitate"), "ostil" );
	deepEqual( Stem("ostilitatea"), "ostil" );
	deepEqual( Stem("oştenilor"), "oşten" );
	deepEqual( Stem("oşti"), "oşti" );
	deepEqual( Stem("oştirii"), "oştir" );
	deepEqual( Stem("otravă"), "otrav" );
	deepEqual( Stem("otrăvit"), "otrăv" );
	deepEqual( Stem("otrăvitoare"), "otrăv" );
	deepEqual( Stem("otrăvurile"), "otrăvur" );
	deepEqual( Stem("oţel"), "oţel" );
	deepEqual( Stem("ou"), "ou" );
	deepEqual( Stem("ouă"), "ouă" );
	deepEqual( Stem("ouăle"), "ouăl" );
	deepEqual( Stem("oval"), "oval" );
	deepEqual( Stem("ovarele"), "ovar" );
	deepEqual( Stem("ovarita"), "ovar" );
	deepEqual( Stem("ovidiu"), "ovidiu" );
	deepEqual( Stem("ovină"), "ovin" );
	deepEqual( Stem("ovrei"), "ovre" );
	deepEqual( Stem("ovreii"), "ovrei" );
	deepEqual( Stem("oxford"), "oxford" );
	deepEqual( Stem("oxigen"), "oxigen" );
	deepEqual( Stem("oxigenat"), "oxigen" );
	deepEqual( Stem("oxigenul"), "oxigen" );
	deepEqual( Stem("p"), "p" );
	deepEqual( Stem("pace"), "pac" );
	deepEqual( Stem("pacea"), "pac" );
	deepEqual( Stem("pachet"), "pachet" );
	deepEqual( Stem("pachete"), "pachet" );
	deepEqual( Stem("pachetele"), "pachet" );
	deepEqual( Stem("pachetul"), "pachet" );
	deepEqual( Stem("pacienţei"), "pacienţe" );
	deepEqual( Stem("paddoc"), "paddoc" );
	deepEqual( Stem("paddocului"), "paddoc" );
	deepEqual( Stem("pagina"), "pagin" );
	deepEqual( Stem("pagină"), "pagin" );
	deepEqual( Stem("paginei"), "pagine" );
	deepEqual( Stem("pagini"), "pagin" );
	deepEqual( Stem("pagubă"), "pagub" );
	deepEqual( Stem("pahar"), "pahar" );
	deepEqual( Stem("pahare"), "pahar" );
	deepEqual( Stem("paharele"), "pahar" );
	deepEqual( Stem("paharul"), "pahar" );
	deepEqual( Stem("paie"), "pai" );
	deepEqual( Stem("paisprezece"), "paisprezec" );
	deepEqual( Stem("pajişte"), "pajişt" );
	deepEqual( Stem("pajiştei"), "pajişte" );
	deepEqual( Stem("pajiştii"), "pajişt" );
	deepEqual( Stem("palace"), "palac" );
	deepEqual( Stem("palat"), "palat" );
	deepEqual( Stem("palele"), "pal" );
	deepEqual( Stem("paliativ"), "paliat" );
	deepEqual( Stem("palid"), "palid" );
	deepEqual( Stem("palidă"), "palid" );
	deepEqual( Stem("paliere"), "palier" );
	deepEqual( Stem("palizi"), "paliz" );
	deepEqual( Stem("palma"), "palm" );
	deepEqual( Stem("palmă"), "palm" );
	deepEqual( Stem("palme"), "palm" );
	deepEqual( Stem("palmei"), "palme" );
	deepEqual( Stem("palmele"), "palm" );
	deepEqual( Stem("palmelor"), "palm" );
	deepEqual( Stem("paloare"), "paloar" );
	deepEqual( Stem("paloşul"), "paloş" );
	deepEqual( Stem("palpabil"), "palpabil" );
	deepEqual( Stem("palpabilă"), "palpabil" );
	deepEqual( Stem("palpabile"), "palpabil" );
	deepEqual( Stem("pană"), "pan" );
	deepEqual( Stem("pandant"), "pandant" );
	deepEqual( Stem("panglici"), "panglic" );
	deepEqual( Stem("panica"), "panic" );
	deepEqual( Stem("panică"), "panic" );
	deepEqual( Stem("pansamente"), "pansament" );
	deepEqual( Stem("pansamentului"), "pansament" );
	deepEqual( Stem("pansexualismul"), "pansexualist" );
	deepEqual( Stem("pantaloni"), "pantalon" );
	deepEqual( Stem("pantalonii"), "pantalon" );
	deepEqual( Stem("panteismul"), "panteism" );
	deepEqual( Stem("panteră"), "panter" );
	deepEqual( Stem("pantof"), "pantof" );
	deepEqual( Stem("pantofi"), "pantof" );
	deepEqual( Stem("pantoful"), "pantof" );
	deepEqual( Stem("paparudă"), "paparud" );
	deepEqual( Stem("papei"), "pape" );
	deepEqual( Stem("papini"), "papin" );
	deepEqual( Stem("papuci"), "papuc" );
	deepEqual( Stem("papucii"), "papuc" );
	deepEqual( Stem("par"), "par" );
	deepEqual( Stem("para"), "par" );
	deepEqual( Stem("paradă"), "parad" );
	deepEqual( Stem("paradisul"), "paradis" );
	deepEqual( Stem("paradoxal"), "paradoxal" );
	deepEqual( Stem("paradoxală"), "paradoxal" );
	deepEqual( Stem("paragraf"), "paragraf" );
	deepEqual( Stem("paragrafe"), "paragraf" );
	deepEqual( Stem("parale"), "paral" );
	deepEqual( Stem("paralel"), "paralel" );
	deepEqual( Stem("paralelă"), "paralel" );
	deepEqual( Stem("paralele"), "paral" );
	deepEqual( Stem("paralelele"), "paralel" );
	deepEqual( Stem("paralelogramul"), "paralelogr" );
	deepEqual( Stem("paralitic"), "paralit" );
	deepEqual( Stem("paraliticului"), "paralit" );
	deepEqual( Stem("paralizat"), "paraliz" );
	deepEqual( Stem("paralizate"), "paraliz" );
	deepEqual( Stem("paralizia"), "paraliz" );
	deepEqual( Stem("paranteza"), "parantez" );
	deepEqual( Stem("paranteză"), "parantez" );
	deepEqual( Stem("paranteze"), "parant" );
	deepEqual( Stem("parapetele"), "parapet" );
	deepEqual( Stem("paraschiv"), "parasch" );
	deepEqual( Stem("paraschive"), "parasch" );
	deepEqual( Stem("parastasului"), "parastas" );
	deepEqual( Stem("paratrăsnet"), "paratrăsnet" );
	deepEqual( Stem("parazitară"), "parazit" );
	deepEqual( Stem("pară"), "par" );
	deepEqual( Stem("parc"), "parc" );
	deepEqual( Stem("parcă"), "parc" );
	deepEqual( Stem("parcul"), "parc" );
	deepEqual( Stem("parcurgea"), "parcurg" );
	deepEqual( Stem("parcurgerea"), "parcurg" );
	deepEqual( Stem("parcurs"), "parcurs" );
	deepEqual( Stem("pardon"), "pardon" );
	deepEqual( Stem("pare"), "par" );
	deepEqual( Stem("paremiologică"), "paremiolog" );
	deepEqual( Stem("parfum"), "parfum" );
	deepEqual( Stem("parfumate"), "parfum" );
	deepEqual( Stem("parfumuri"), "parfumur" );
	deepEqual( Stem("pari"), "par" );
	deepEqual( Stem("pariase"), "parias" );
	deepEqual( Stem("pariază"), "pariaz" );
	deepEqual( Stem("pariez"), "pariez" );
	deepEqual( Stem("paris"), "paris" );
	deepEqual( Stem("parisului"), "paris" );
	deepEqual( Stem("paritate"), "paritat" );
	deepEqual( Stem("parităţii"), "parităţ" );
	deepEqual( Stem("pariu"), "pariu" );
	deepEqual( Stem("pariului"), "par" );
	deepEqual( Stem("pariurilor"), "pariur" );
	deepEqual( Stem("parizian"), "parizian" );
	deepEqual( Stem("pariziană"), "parizian" );
	deepEqual( Stem("parizianului"), "parizian" );
	deepEqual( Stem("pariziene"), "parizien" );
	deepEqual( Stem("parizieni"), "parizien" );
	deepEqual( Stem("parîme"), "parîm" );
	deepEqual( Stem("parlamentar"), "parlamentar" );
	deepEqual( Stem("parlamentară"), "parlament" );
	deepEqual( Stem("parlamentare"), "parlament" );
	deepEqual( Stem("parlamentari"), "parlamentar" );
	deepEqual( Stem("parlamentarism"), "parlamentarist" );
	deepEqual( Stem("parlamentări"), "parlamentăr" );
	deepEqual( Stem("parlamentele"), "parlament" );
	deepEqual( Stem("parlamentul"), "parlament" );
	deepEqual( Stem("parmalâc"), "parmalâc" );
	deepEqual( Stem("parodiam"), "parod" );
	deepEqual( Stem("parodie"), "parod" );
	deepEqual( Stem("parodieze"), "parodiez" );
	deepEqual( Stem("paroxism"), "paroxist" );
	deepEqual( Stem("parte"), "part" );
	deepEqual( Stem("partea"), "part" );
	deepEqual( Stem("partener"), "partener" );
	deepEqual( Stem("partenera"), "partener" );
	deepEqual( Stem("partenerii"), "partener" );
	deepEqual( Stem("partenerul"), "partener" );
	deepEqual( Stem("partenerului"), "partener" );
	deepEqual( Stem("participare"), "particip" );
	deepEqual( Stem("participaţiei"), "particip" );
	deepEqual( Stem("participă"), "particip" );
	deepEqual( Stem("participiului"), "particip" );
	deepEqual( Stem("particular"), "particular" );
	deepEqual( Stem("particularitate"), "particular" );
	deepEqual( Stem("particularului"), "particular" );
	deepEqual( Stem("particule"), "particul" );
	deepEqual( Stem("partid"), "partid" );
	deepEqual( Stem("partida"), "partid" );
	deepEqual( Stem("partidă"), "partid" );
	deepEqual( Stem("partide"), "partid" );
	deepEqual( Stem("partidele"), "partid" );
	deepEqual( Stem("partidelor"), "partid" );
	deepEqual( Stem("partidul"), "partid" );
	deepEqual( Stem("partidului"), "partid" );
	deepEqual( Stem("partizan"), "partizan" );
	deepEqual( Stem("partizanii"), "partizan" );
	deepEqual( Stem("partizanul"), "partizan" );
	deepEqual( Stem("parvenit"), "parven" );
	deepEqual( Stem("parvenitism"), "parvenitist" );
	deepEqual( Stem("parvenitismul"), "parvenitist" );
	deepEqual( Stem("parvenitismului"), "parvenitist" );
	deepEqual( Stem("parvenitul"), "parven" );
	deepEqual( Stem("parvenitului"), "parven" );
	deepEqual( Stem("parveniţi"), "parven" );
	deepEqual( Stem("pas"), "pas" );
	deepEqual( Stem("pasă"), "pas" );
	deepEqual( Stem("pasămite"), "pasăm" );
	deepEqual( Stem("pasăre"), "pasăr" );
	deepEqual( Stem("pasărea"), "pasăr" );
	deepEqual( Stem("pascal"), "pascal" );
	deepEqual( Stem("pasibilă"), "pasibil" );
	deepEqual( Stem("pasibile"), "pasib" );
	deepEqual( Stem("pasibili"), "pasibil" );
	deepEqual( Stem("pasiona"), "pasion" );
	deepEqual( Stem("pasional"), "pasional" );
	deepEqual( Stem("pasionalitatea"), "pasional" );
	deepEqual( Stem("pasionat"), "pasion" );
	deepEqual( Stem("pasionată"), "pasion" );
	deepEqual( Stem("pasionaţi"), "pasion" );
	deepEqual( Stem("pasionezi"), "pasion" );
	deepEqual( Stem("pasiune"), "pasiun" );
	deepEqual( Stem("pasiunea"), "pasiun" );
	deepEqual( Stem("pasiuni"), "pasiun" );
	deepEqual( Stem("pasiunii"), "pasiun" );
	deepEqual( Stem("pasiunile"), "pasiun" );
	deepEqual( Stem("pasiv"), "pasiv" );
	deepEqual( Stem("pasivă"), "pasiv" );
	deepEqual( Stem("pasivitatea"), "pasiv" );
	deepEqual( Stem("pastă"), "past" );
	deepEqual( Stem("pastelurile"), "pastelur" );
	deepEqual( Stem("pastiş"), "pastiş" );
	deepEqual( Stem("pastor"), "pastor" );
	deepEqual( Stem("pastori"), "pastor" );
	deepEqual( Stem("pasul"), "pas" );
	deepEqual( Stem("paşaport"), "paşaport" );
	deepEqual( Stem("paşi"), "paş" );
	deepEqual( Stem("paşii"), "paş" );
	deepEqual( Stem("paşnică"), "paşnic" );
	deepEqual( Stem("paşnice"), "paşnic" );
	deepEqual( Stem("paşte"), "paşt" );
	deepEqual( Stem("paşti"), "paşt" );
	deepEqual( Stem("paştilor"), "paşt" );
	deepEqual( Stem("pat"), "pat" );
	deepEqual( Stem("pata"), "pat" );
	deepEqual( Stem("pată"), "pat" );
	deepEqual( Stem("patentă"), "patent" );
	deepEqual( Stem("paterne"), "patern" );
	deepEqual( Stem("patetice"), "patet" );
	deepEqual( Stem("pateticul"), "patet" );
	deepEqual( Stem("patima"), "patim" );
	deepEqual( Stem("patimă"), "patim" );
	deepEqual( Stem("patologic"), "patolog" );
	deepEqual( Stem("patologică"), "patolog" );
	deepEqual( Stem("patos"), "patos" );
	deepEqual( Stem("patra"), "patr" );
	deepEqual( Stem("patria"), "patr" );
	deepEqual( Stem("patriarhal"), "patriarhal" );
	deepEqual( Stem("patriarhală"), "patriarhal" );
	deepEqual( Stem("patriarhale"), "patriarhal" );
	deepEqual( Stem("patriarhului"), "patriarh" );
	deepEqual( Stem("patrie"), "patr" );
	deepEqual( Stem("patriei"), "patr" );
	deepEqual( Stem("patriot"), "patriot" );
	deepEqual( Stem("patriotic"), "patriot" );
	deepEqual( Stem("patriotică"), "patriot" );
	deepEqual( Stem("patriotice"), "patriot" );
	deepEqual( Stem("patrioţilor"), "patrioţ" );
	deepEqual( Stem("patroni"), "patron" );
	deepEqual( Stem("patronul"), "patron" );
	deepEqual( Stem("patru"), "patru" );
	deepEqual( Stem("patrula"), "patrul" );
	deepEqual( Stem("patrulare"), "patrul" );
	deepEqual( Stem("patrulă"), "patrul" );
	deepEqual( Stem("patrule"), "patrul" );
	deepEqual( Stem("patrulea"), "patrul" );
	deepEqual( Stem("patrulele"), "patrul" );
	deepEqual( Stem("patrulelor"), "patrul" );
	deepEqual( Stem("patruzeci"), "patruzec" );
	deepEqual( Stem("patul"), "pat" );
	deepEqual( Stem("patului"), "pat" );
	deepEqual( Stem("paturi"), "patur" );
	deepEqual( Stem("paul"), "paul" );
	deepEqual( Stem("pauză"), "pauz" );
	deepEqual( Stem("pauze"), "pauz" );
	deepEqual( Stem("pavată"), "pavat" );
	deepEqual( Stem("pavate"), "pavat" );
	deepEqual( Stem("pavilion"), "pavilion" );
	deepEqual( Stem("paza"), "paz" );
	deepEqual( Stem("pază"), "paz" );
	deepEqual( Stem("pâine"), "pâin" );
	deepEqual( Stem("pâinea"), "pâin" );
	deepEqual( Stem("pâini"), "pâin" );
	deepEqual( Stem("pâinii"), "pâin" );
	deepEqual( Stem("pâlcul"), "pâlc" );
	deepEqual( Stem("pâlcuri"), "pâlcur" );
	deepEqual( Stem("pâlpâire"), "pâlpâir" );
	deepEqual( Stem("până"), "pân" );
	deepEqual( Stem("pândă"), "pând" );
	deepEqual( Stem("pândea"), "pând" );
	deepEqual( Stem("pândeam"), "pând" );
	deepEqual( Stem("pândesc"), "pând" );
	deepEqual( Stem("pândeşte"), "pând" );
	deepEqual( Stem("pândim"), "pând" );
	deepEqual( Stem("pândind"), "pând" );
	deepEqual( Stem("pândisem"), "pând" );
	deepEqual( Stem("pândit"), "pândit" );
	deepEqual( Stem("pângăriri"), "pângărir" );
	deepEqual( Stem("pântec"), "pântec" );
	deepEqual( Stem("pântece"), "pântec" );
	deepEqual( Stem("pântecele"), "pântec" );
	deepEqual( Stem("pântecul"), "pântec" );
	deepEqual( Stem("pânza"), "pânz" );
	deepEqual( Stem("pânză"), "pânz" );
	deepEqual( Stem("pânze"), "pânz" );
	deepEqual( Stem("pâraiele"), "pârai" );
	deepEqual( Stem("pârâiaş"), "pârâiaş" );
	deepEqual( Stem("pârâiaşe"), "pârâiaş" );
	deepEqual( Stem("pârâiaşul"), "pârâiaş" );
	deepEqual( Stem("pârâituri"), "pârâitur" );
	deepEqual( Stem("pârâu"), "pârâu" );
	deepEqual( Stem("pârâul"), "pârâ" );
	deepEqual( Stem("pârâului"), "pârâ" );
	deepEqual( Stem("pârăiaş"), "pârăiaş" );
	deepEqual( Stem("pâslă"), "pâsl" );
	deepEqual( Stem("păcaliţi"), "păcal" );
	deepEqual( Stem("păcat"), "păcat" );
	deepEqual( Stem("păcatele"), "păcat" );
	deepEqual( Stem("păcatului"), "păcat" );
	deepEqual( Stem("păcălesc"), "păcăl" );
	deepEqual( Stem("păcălim"), "păcăl" );
	deepEqual( Stem("păcălită"), "păcăl" );
	deepEqual( Stem("păcănituri"), "păcănitur" );
	deepEqual( Stem("păcătoşi"), "păcăt" );
	deepEqual( Stem("păcătoşilor"), "păcăt" );
	deepEqual( Stem("păcii"), "păc" );
	deepEqual( Stem("păcura"), "păcur" );
	deepEqual( Stem("păcură"), "păcur" );
	deepEqual( Stem("păduchi"), "păduch" );
	deepEqual( Stem("pădurar"), "pădurar" );
	deepEqual( Stem("pădure"), "pădur" );
	deepEqual( Stem("pădurea"), "pădur" );
	deepEqual( Stem("păduri"), "pădur" );
	deepEqual( Stem("pădurice"), "pădur" );
	deepEqual( Stem("păduricea"), "pădur" );
	deepEqual( Stem("pădurii"), "pădur" );
	deepEqual( Stem("pădurile"), "pădur" );
	deepEqual( Stem("pădurilor"), "pădur" );
	deepEqual( Stem("păduros"), "pădur" );
	deepEqual( Stem("păgân"), "păgân" );
	deepEqual( Stem("păgubos"), "păgub" );
	deepEqual( Stem("păhărele"), "păhăr" );
	deepEqual( Stem("păhăruţ"), "păhăruţ" );
	deepEqual( Stem("păi"), "păi" );
	deepEqual( Stem("păioasă"), "păioas" );
	deepEqual( Stem("pălăria"), "pălăr" );
	deepEqual( Stem("pălărie"), "pălăr" );
	deepEqual( Stem("pălăriei"), "pălăr" );
	deepEqual( Stem("pălării"), "pălăr" );
	deepEqual( Stem("pălăriile"), "pălăr" );
	deepEqual( Stem("pălăriilor"), "pălăr" );
	deepEqual( Stem("pălăriuţe"), "pălăriuţ" );
	deepEqual( Stem("pălmuieşti"), "pălmui" );
	deepEqual( Stem("pământ"), "pământ" );
	deepEqual( Stem("pământeşti"), "pământ" );
	deepEqual( Stem("pământul"), "pământ" );
	deepEqual( Stem("pământului"), "pământ" );
	deepEqual( Stem("păpuşa"), "păpuş" );
	deepEqual( Stem("păpuşii"), "păpuş" );
	deepEqual( Stem("păr"), "păr" );
	deepEqual( Stem("părându"), "părându" );
	deepEqual( Stem("părăsească"), "părăs" );
	deepEqual( Stem("părăsesc"), "părăs" );
	deepEqual( Stem("părăseşte"), "părăs" );
	deepEqual( Stem("părăseşti"), "părăs" );
	deepEqual( Stem("părăsim"), "părăs" );
	deepEqual( Stem("părăsindu"), "părăs" );
	deepEqual( Stem("părăsirii"), "părăsir" );
	deepEqual( Stem("părăsisem"), "părăs" );
	deepEqual( Stem("părăsit"), "părăs" );
	deepEqual( Stem("părăsită"), "părăs" );
	deepEqual( Stem("părăsite"), "părăs" );
	deepEqual( Stem("părea"), "păr" );
	deepEqual( Stem("păream"), "păream" );
	deepEqual( Stem("păreau"), "păreau" );
	deepEqual( Stem("părere"), "părer" );
	deepEqual( Stem("părerea"), "părer" );
	deepEqual( Stem("păreri"), "părer" );
	deepEqual( Stem("părerile"), "părer" );
	deepEqual( Stem("păreţi"), "păr" );
	deepEqual( Stem("părinte"), "părint" );
	deepEqual( Stem("părintele"), "părint" );
	deepEqual( Stem("părintelui"), "părintel" );
	deepEqual( Stem("părintesc"), "părint" );
	deepEqual( Stem("părinteşte"), "părint" );
	deepEqual( Stem("părinţi"), "părinţ" );
	deepEqual( Stem("părinţii"), "părinţ" );
	deepEqual( Stem("părînd"), "părînd" );
	deepEqual( Stem("părţi"), "părţ" );
	deepEqual( Stem("părţii"), "părţ" );
	deepEqual( Stem("părţile"), "părţ" );
	deepEqual( Stem("părul"), "păr" );
	deepEqual( Stem("părului"), "păr" );
	deepEqual( Stem("păruse"), "părus" );
	deepEqual( Stem("părut"), "părut" );
	deepEqual( Stem("păsărilor"), "păsăr" );
	deepEqual( Stem("păscând"), "păsc" );
	deepEqual( Stem("păstra"), "păstr" );
	deepEqual( Stem("păstram"), "păstr" );
	deepEqual( Stem("păstrarea"), "păstr" );
	deepEqual( Stem("păstrat"), "păstrat" );
	deepEqual( Stem("păstrate"), "păstrat" );
	deepEqual( Stem("păstraţi"), "păstr" );
	deepEqual( Stem("păstrăm"), "păstr" );
	deepEqual( Stem("păstrăv"), "păstrăv" );
	deepEqual( Stem("păstrăvii"), "păstrăv" );
	deepEqual( Stem("păstrăvilor"), "păstrăv" );
	deepEqual( Stem("păstrăvul"), "păstrăv" );
	deepEqual( Stem("păstrează"), "păstr" );
	deepEqual( Stem("păstrez"), "păstr" );
	deepEqual( Stem("păstreze"), "păstr" );
	deepEqual( Stem("păstrezi"), "păstr" );
	deepEqual( Stem("păşească"), "păşeasc" );
	deepEqual( Stem("păşune"), "păşun" );
	deepEqual( Stem("păşunea"), "păşun" );
	deepEqual( Stem("păşuni"), "păşun" );
	deepEqual( Stem("păşunilor"), "păşun" );
	deepEqual( Stem("pătată"), "pătat" );
	deepEqual( Stem("pătimaş"), "pătimaş" );
	deepEqual( Stem("pătimaşa"), "pătimaş" );
	deepEqual( Stem("pătimit"), "pătim" );
	deepEqual( Stem("pătrată"), "pătrat" );
	deepEqual( Stem("pătrate"), "pătrat" );
	deepEqual( Stem("pătratul"), "pătrat" );
	deepEqual( Stem("pătrăţel"), "pătrăţel" );
	deepEqual( Stem("pătrund"), "pătrund" );
	deepEqual( Stem("pătrundă"), "pătrund" );
	deepEqual( Stem("pătrunde"), "pătrund" );
	deepEqual( Stem("pătrundem"), "pătrund" );
	deepEqual( Stem("pătrundere"), "pătrund" );
	deepEqual( Stem("pătruns"), "pătruns" );
	deepEqual( Stem("pătrunsă"), "pătruns" );
	deepEqual( Stem("pătrunseseră"), "pătrun" );
	deepEqual( Stem("pătrunză"), "pătrunz" );
	deepEqual( Stem("pătrunzătoare"), "pătrunz" );
	deepEqual( Stem("pătrunzător"), "pătrunz" );
	deepEqual( Stem("pătrunzi"), "pătrunz" );
	deepEqual( Stem("pătura"), "pătur" );
	deepEqual( Stem("pătură"), "pătur" );
	deepEqual( Stem("pături"), "pătur" );
	deepEqual( Stem("păturile"), "pătur" );
	deepEqual( Stem("păţanii"), "păţan" );
	deepEqual( Stem("păţit"), "păţit" );
	deepEqual( Stem("păzesc"), "păzesc" );
	deepEqual( Stem("păzeşte"), "păzeşt" );
	deepEqual( Stem("păzeşti"), "păzeşt" );
	deepEqual( Stem("păzit"), "păzit" );
	deepEqual( Stem("păzită"), "păzit" );
	deepEqual( Stem("păzite"), "păzit" );
	deepEqual( Stem("păziţi"), "păz" );
	deepEqual( Stem("pe"), "pe" );
	deepEqual( Stem("pecetea"), "pecet" );
	deepEqual( Stem("pecetluită"), "pecetlu" );
	deepEqual( Stem("pedagog"), "pedagog" );
	deepEqual( Stem("pedagogul"), "pedagog" );
	deepEqual( Stem("pedant"), "pedant" );
	deepEqual( Stem("pedantă"), "pedant" );
	deepEqual( Stem("pedeapsa"), "pedeaps" );
	deepEqual( Stem("pedeapsă"), "pedeaps" );
	deepEqual( Stem("pedepse"), "pedep" );
	deepEqual( Stem("pedepsească"), "pedeps" );
	deepEqual( Stem("pedepsise"), "pedeps" );
	deepEqual( Stem("pedepsite"), "pedeps" );
	deepEqual( Stem("pederaşti"), "pederaşt" );
	deepEqual( Stem("peisaj"), "peisaj" );
	deepEqual( Stem("peisaje"), "peisaj" );
	deepEqual( Stem("peisajele"), "peisaj" );
	deepEqual( Stem("peisajul"), "peisaj" );
	deepEqual( Stem("pelagră"), "pelagr" );
	deepEqual( Stem("pelerinaj"), "pelerinaj" );
	deepEqual( Stem("pelerină"), "pelerin" );
	deepEqual( Stem("pelerinul"), "pelerin" );
	deepEqual( Stem("peleş"), "peleş" );
	deepEqual( Stem("peliculă"), "pelicul" );
	deepEqual( Stem("peliculei"), "pelicule" );
	deepEqual( Stem("pelin"), "pelin" );
	deepEqual( Stem("peloponesului"), "pelopones" );
	deepEqual( Stem("peloponezului"), "pelopon" );
	deepEqual( Stem("penal"), "penal" );
	deepEqual( Stem("penală"), "penal" );
	deepEqual( Stem("penalizare"), "penaliz" );
	deepEqual( Stem("penalizat"), "penaliz" );
	deepEqual( Stem("penalizatoare"), "penaliz" );
	deepEqual( Stem("pendularea"), "pendul" );
	deepEqual( Stem("pendulat"), "pendul" );
	deepEqual( Stem("pendulă"), "pendul" );
	deepEqual( Stem("pendulului"), "pendul" );
	deepEqual( Stem("pene"), "pen" );
	deepEqual( Stem("penelopa"), "penelop" );
	deepEqual( Stem("penetra"), "penetr" );
	deepEqual( Stem("penetrarea"), "penetr" );
	deepEqual( Stem("penetrat"), "penetr" );
	deepEqual( Stem("penetraţi"), "penetr" );
	deepEqual( Stem("penetraţiei"), "penetr" );
	deepEqual( Stem("penibil"), "penibil" );
	deepEqual( Stem("penibilă"), "penibil" );
	deepEqual( Stem("penibile"), "penib" );
	deepEqual( Stem("peninsulari"), "peninsular" );
	deepEqual( Stem("peninsulă"), "peninsul" );
	deepEqual( Stem("peninsule"), "peninsul" );
	deepEqual( Stem("peninsulei"), "peninsule" );
	deepEqual( Stem("penisurile"), "penisur" );
	deepEqual( Stem("penitenciar"), "penitenciar" );
	deepEqual( Stem("penitenciare"), "penitenciar" );
	deepEqual( Stem("penitenţă"), "penitenţ" );
	deepEqual( Stem("peniţe"), "peniţ" );
	deepEqual( Stem("peniţei"), "peniţe" );
	deepEqual( Stem("pennsylvania"), "pennsylvan" );
	deepEqual( Stem("pensetă"), "penset" );
	deepEqual( Stem("pensete"), "penset" );
	deepEqual( Stem("pensia"), "pens" );
	deepEqual( Stem("pensie"), "pens" );
	deepEqual( Stem("pensii"), "pens" );
	deepEqual( Stem("pension"), "pension" );
	deepEqual( Stem("pensionar"), "pensionar" );
	deepEqual( Stem("pensionară"), "pension" );
	deepEqual( Stem("pensionarii"), "pensionar" );
	deepEqual( Stem("pensiune"), "pensiun" );
	deepEqual( Stem("pentagonal"), "pentagonal" );
	deepEqual( Stem("pentagonul"), "pentagon" );
	deepEqual( Stem("pentagonului"), "pentagon" );
	deepEqual( Stem("pentasilab"), "pentasilab" );
	deepEqual( Stem("pentium"), "pentium" );
	deepEqual( Stem("pentru"), "pentru" );
	deepEqual( Stem("penultim"), "penult" );
	deepEqual( Stem("penultima"), "penultim" );
	deepEqual( Stem("penumbra"), "penumbr" );
	deepEqual( Stem("penumbră"), "penumbr" );
	deepEqual( Stem("penumbre"), "penumbr" );
	deepEqual( Stem("penurie"), "penur" );
	deepEqual( Stem("pepene"), "pepen" );
	deepEqual( Stem("pepinieră"), "pepinier" );
	deepEqual( Stem("perceapă"), "perceap" );
	deepEqual( Stem("percep"), "percep" );
	deepEqual( Stem("percepe"), "percep" );
	deepEqual( Stem("percepeam"), "percep" );
	deepEqual( Stem("percepem"), "percep" );
	deepEqual( Stem("perceperea"), "percep" );
	deepEqual( Stem("perceptibil"), "percept" );
	deepEqual( Stem("perceptibilă"), "percept" );
	deepEqual( Stem("perceptibile"), "perceptib" );
	deepEqual( Stem("perceptibilitate"), "percept" );
	deepEqual( Stem("percepţia"), "percepţ" );
	deepEqual( Stem("percepţie"), "percepţ" );
	deepEqual( Stem("percepţii"), "percepţ" );
	deepEqual( Stem("percepţiile"), "percepţ" );
	deepEqual( Stem("percepţiune"), "percept" );
	deepEqual( Stem("percepţiunea"), "percept" );
	deepEqual( Stem("percepţiuni"), "percept" );
	deepEqual( Stem("percepţiunii"), "percept" );
	deepEqual( Stem("percepţiunile"), "percept" );
	deepEqual( Stem("percepţiunilor"), "percept" );
	deepEqual( Stem("perceput"), "percep" );
	deepEqual( Stem("percepută"), "percep" );
	deepEqual( Stem("percheziţie"), "percheziţ" );
	deepEqual( Stem("percheziţiile"), "perchez" );
	deepEqual( Stem("percipi"), "percip" );
	deepEqual( Stem("percutante"), "percut" );
	deepEqual( Stem("perdea"), "perd" );
	deepEqual( Stem("perdeaua"), "perdeau" );
	deepEqual( Stem("perdele"), "perd" );
	deepEqual( Stem("perdelele"), "perdel" );
	deepEqual( Stem("perdeluţele"), "perdeluţ" );
	deepEqual( Stem("pere"), "per" );
	deepEqual( Stem("pereche"), "perech" );
	deepEqual( Stem("perechea"), "perech" );
	deepEqual( Stem("perechi"), "perech" );
	deepEqual( Stem("perechilor"), "perech" );
	deepEqual( Stem("perete"), "peret" );
	deepEqual( Stem("peretele"), "peret" );
	deepEqual( Stem("pereţi"), "per" );
	deepEqual( Stem("pereţii"), "per" );
	deepEqual( Stem("perfect"), "perfect" );
	deepEqual( Stem("perfecta"), "perfect" );
	deepEqual( Stem("perfectare"), "perfect" );
	deepEqual( Stem("perfectarea"), "perfect" );
	deepEqual( Stem("perfectat"), "perfect" );
	deepEqual( Stem("perfectă"), "perfect" );
	deepEqual( Stem("perfecte"), "perfect" );
	deepEqual( Stem("perfecţie"), "perfecţ" );
	deepEqual( Stem("perfecţionat"), "perfecţion" );
	deepEqual( Stem("perfid"), "perfid" );
	deepEqual( Stem("perfide"), "perfid" );
	deepEqual( Stem("peri"), "per" );
	deepEqual( Stem("pericol"), "pericol" );
	deepEqual( Stem("pericolele"), "pericol" );
	deepEqual( Stem("pericolul"), "pericol" );
	deepEqual( Stem("periculoasă"), "pericul" );
	deepEqual( Stem("periculos"), "pericul" );
	deepEqual( Stem("periculoşi"), "pericul" );
	deepEqual( Stem("periferică"), "perifer" );
	deepEqual( Stem("periferice"), "perifer" );
	deepEqual( Stem("perioada"), "perioad" );
	deepEqual( Stem("perioadă"), "perioad" );
	deepEqual( Stem("peripeţii"), "perip" );
	deepEqual( Stem("peritonită"), "periton" );
	deepEqual( Stem("perlele"), "perl" );
	deepEqual( Stem("permanentă"), "permanent" );
	deepEqual( Stem("permanenţă"), "permanenţ" );
	deepEqual( Stem("permis"), "permis" );
	deepEqual( Stem("permise"), "perm" );
	deepEqual( Stem("permisie"), "permis" );
	deepEqual( Stem("permit"), "permit" );
	deepEqual( Stem("permite"), "permit" );
	deepEqual( Stem("permitea"), "permit" );
	deepEqual( Stem("permutări"), "permutăr" );
	deepEqual( Stem("perna"), "pern" );
	deepEqual( Stem("pernă"), "pern" );
	deepEqual( Stem("perne"), "pern" );
	deepEqual( Stem("pernele"), "pern" );
	deepEqual( Stem("pernelor"), "pern" );
	deepEqual( Stem("pernicioasă"), "pernic" );
	deepEqual( Stem("pernicioase"), "pernic" );
	deepEqual( Stem("pernicioasele"), "pernic" );
	deepEqual( Stem("peroane"), "peroan" );
	deepEqual( Stem("peron"), "peron" );
	deepEqual( Stem("perpendicular"), "perpendicular" );
	deepEqual( Stem("perpendiculara"), "perpendicular" );
	deepEqual( Stem("perpendiculară"), "perpendicul" );
	deepEqual( Stem("perpendiculare"), "perpendicul" );
	deepEqual( Stem("perpetue"), "perpetu" );
	deepEqual( Stem("perpetuează"), "perpetu" );
	deepEqual( Stem("perpetuu"), "perpetuu" );
	deepEqual( Stem("perplexitate"), "perplex" );
	deepEqual( Stem("perplexitatea"), "perplex" );
	deepEqual( Stem("persista"), "persist" );
	deepEqual( Stem("persistă"), "persist" );
	deepEqual( Stem("persistente"), "persistent" );
	deepEqual( Stem("persistenţa"), "persistenţ" );
	deepEqual( Stem("persistenţă"), "persistenţ" );
	deepEqual( Stem("persistenţe"), "persistenţ" );
	deepEqual( Stem("persistenţei"), "persistenţe" );
	deepEqual( Stem("persistenţele"), "persistenţ" );
	deepEqual( Stem("persoana"), "persoan" );
	deepEqual( Stem("persoană"), "persoan" );
	deepEqual( Stem("persoane"), "persoan" );
	deepEqual( Stem("persoanei"), "persoane" );
	deepEqual( Stem("persoanele"), "persoan" );
	deepEqual( Stem("persoanelor"), "persoan" );
	deepEqual( Stem("personaj"), "personaj" );
	deepEqual( Stem("personajelor"), "personaj" );
	deepEqual( Stem("personal"), "personal" );
	deepEqual( Stem("personală"), "personal" );
	deepEqual( Stem("personale"), "personal" );
	deepEqual( Stem("personalitate"), "personal" );
	deepEqual( Stem("personalitatea"), "personal" );
	deepEqual( Stem("personalităţii"), "personal" );
	deepEqual( Stem("personalităţilor"), "personal" );
	deepEqual( Stem("perspectiva"), "perspect" );
	deepEqual( Stem("perspectivă"), "perspect" );
	deepEqual( Stem("perspective"), "perspect" );
	deepEqual( Stem("perspectivele"), "perspect" );
	deepEqual( Stem("perspicacitatea"), "perspicac" );
	deepEqual( Stem("perturbare"), "perturb" );
	deepEqual( Stem("perturbată"), "perturb" );
	deepEqual( Stem("perturbaţiunea"), "perturb" );
	deepEqual( Stem("perturbaţiuni"), "perturbat" );
	deepEqual( Stem("perturbări"), "perturbăr" );
	deepEqual( Stem("perului"), "per" );
	deepEqual( Stem("perversă"), "pervers" );
	deepEqual( Stem("perversitate"), "pervers" );
	deepEqual( Stem("perversiune"), "perversiun" );
	deepEqual( Stem("perverşi"), "perverş" );
	deepEqual( Stem("pervertiţi"), "pervert" );
	deepEqual( Stem("pesemne"), "pesemn" );
	deepEqual( Stem("pesimism"), "pesimist" );
	deepEqual( Stem("pesimismul"), "pesimist" );
	deepEqual( Stem("pesimist"), "pesimist" );
	deepEqual( Stem("pesimişti"), "pesimist" );
	deepEqual( Stem("pesmet"), "pesmet" );
	deepEqual( Stem("peste"), "pest" );
	deepEqual( Stem("pestriţă"), "pestriţ" );
	deepEqual( Stem("peşte"), "peşt" );
	deepEqual( Stem("peştele"), "peşt" );
	deepEqual( Stem("peştera"), "peşter" );
	deepEqual( Stem("petala"), "petal" );
	deepEqual( Stem("petală"), "petal" );
	deepEqual( Stem("petale"), "petal" );
	deepEqual( Stem("pete"), "pet" );
	deepEqual( Stem("petic"), "petic" );
	deepEqual( Stem("petice"), "petic" );
	deepEqual( Stem("petiţia"), "petiţ" );
	deepEqual( Stem("petiţie"), "petiţ" );
	deepEqual( Stem("petre"), "petr" );
	deepEqual( Stem("petreacă"), "petreac" );
	deepEqual( Stem("petrec"), "petrec" );
	deepEqual( Stem("petrecându"), "petrec" );
	deepEqual( Stem("petrece"), "petrec" );
	deepEqual( Stem("petrecea"), "petrec" );
	deepEqual( Stem("petreceam"), "petrec" );
	deepEqual( Stem("petreceau"), "petrec" );
	deepEqual( Stem("petrecem"), "petrec" );
	deepEqual( Stem("petrecere"), "petrec" );
	deepEqual( Stem("petrecerea"), "petrec" );
	deepEqual( Stem("petreceri"), "petrecer" );
	deepEqual( Stem("petrecerile"), "petrecer" );
	deepEqual( Stem("petrecuse"), "petrec" );
	deepEqual( Stem("petrecut"), "petrec" );
	deepEqual( Stem("petrecute"), "petrec" );
	deepEqual( Stem("petrograd"), "petrograd" );
	deepEqual( Stem("petrol"), "petrol" );
	deepEqual( Stem("petru"), "petru" );
	deepEqual( Stem("petzoldt"), "petzoldt" );
	deepEqual( Stem("pezevenghi"), "pezevengh" );
	deepEqual( Stem("phenomenon"), "phenomenon" );
	deepEqual( Stem("pian"), "pian" );
	deepEqual( Stem("pianişti"), "pianişt" );
	deepEqual( Stem("pianul"), "pian" );
	deepEqual( Stem("piară"), "piar" );
	deepEqual( Stem("piardă"), "piard" );
	deepEqual( Stem("piarză"), "piarz" );
	deepEqual( Stem("piatra"), "piatr" );
	deepEqual( Stem("piatră"), "piatr" );
	deepEqual( Stem("piaţa"), "piaţ" );
	deepEqual( Stem("piaţă"), "piaţ" );
	deepEqual( Stem("piaţeta"), "piaţet" );
	deepEqual( Stem("pic"), "pic" );
	deepEqual( Stem("picătură"), "picăt" );
	deepEqual( Stem("picheri"), "picher" );
	deepEqual( Stem("picioare"), "picioar" );
	deepEqual( Stem("picioarele"), "picioar" );
	deepEqual( Stem("picioarelor"), "picioar" );
	deepEqual( Stem("picior"), "picior" );
	deepEqual( Stem("piciorul"), "picior" );
	deepEqual( Stem("pictată"), "pictat" );
	deepEqual( Stem("pictate"), "pictat" );
	deepEqual( Stem("pictor"), "pictor" );
	deepEqual( Stem("pictorul"), "pictor" );
	deepEqual( Stem("pictura"), "pictur" );
	deepEqual( Stem("picturală"), "pictural" );
	deepEqual( Stem("pictură"), "pict" );
	deepEqual( Stem("picură"), "picur" );
	deepEqual( Stem("piedestalul"), "piedestal" );
	deepEqual( Stem("piedică"), "piedic" );
	deepEqual( Stem("piedici"), "piedic" );
	deepEqual( Stem("piedicile"), "piedic" );
	deepEqual( Stem("piei"), "pie" );
	deepEqual( Stem("pieilor"), "pieilor" );
	deepEqual( Stem("pieire"), "pieir" );
	deepEqual( Stem("piele"), "piel" );
	deepEqual( Stem("pielea"), "piel" );
	deepEqual( Stem("pielii"), "piel" );
	deepEqual( Stem("pieliţa"), "pieliţ" );
	deepEqual( Stem("piept"), "piept" );
	deepEqual( Stem("pieptănat"), "pieptăn" );
	deepEqual( Stem("piepteni"), "piepten" );
	deepEqual( Stem("pieptenii"), "piepten" );
	deepEqual( Stem("pieptiş"), "pieptiş" );
	deepEqual( Stem("pieptul"), "piept" );
	deepEqual( Stem("pieptului"), "piept" );
	deepEqual( Stem("pierd"), "pierd" );
	deepEqual( Stem("pierde"), "pierd" );
	deepEqual( Stem("pierdea"), "pierd" );
	deepEqual( Stem("pierdeam"), "pierd" );
	deepEqual( Stem("pierdeau"), "pierd" );
	deepEqual( Stem("pierdem"), "pierd" );
	deepEqual( Stem("pierdere"), "pierd" );
	deepEqual( Stem("pierderea"), "pierd" );
	deepEqual( Stem("pierderi"), "pierder" );
	deepEqual( Stem("pierderile"), "pierder" );
	deepEqual( Stem("pierderilor"), "pierder" );
	deepEqual( Stem("pierdeţi"), "pierd" );
	deepEqual( Stem("pierduse"), "pierd" );
	deepEqual( Stem("pierdut"), "pierdut" );
	deepEqual( Stem("pierdută"), "pierdut" );
	deepEqual( Stem("pierdute"), "pierdut" );
	deepEqual( Stem("pierduţi"), "pierduţ" );
	deepEqual( Stem("pieri"), "pier" );
	deepEqual( Stem("pierim"), "pier" );
	deepEqual( Stem("pierit"), "pierit" );
	deepEqual( Stem("pieritori"), "pierit" );
	deepEqual( Stem("pierson"), "pierson" );
	deepEqual( Stem("pierzând"), "pierz" );
	deepEqual( Stem("pierzându"), "pierz" );
	deepEqual( Stem("pierzi"), "pierz" );
	deepEqual( Stem("pierzînd"), "pierzînd" );
	deepEqual( Stem("piesa"), "pies" );
	deepEqual( Stem("piesă"), "pies" );
	deepEqual( Stem("piese"), "pie" );
	deepEqual( Stem("piesele"), "pie" );
	deepEqual( Stem("pietate"), "pietat" );
	deepEqual( Stem("pietoni"), "pieton" );
	deepEqual( Stem("pietre"), "pietr" );
	deepEqual( Stem("pietrei"), "pietre" );
	deepEqual( Stem("pietrele"), "pietr" );
	deepEqual( Stem("pietriş"), "pietriş" );
	deepEqual( Stem("pietroaie"), "pietroai" );
	deepEqual( Stem("pietroasă"), "pietroas" );
	deepEqual( Stem("pietroi"), "pietro" );
	deepEqual( Stem("pietruită"), "pietruit" );
	deepEqual( Stem("pieţii"), "pieţ" );
	deepEqual( Stem("pieziş"), "pieziş" );
	deepEqual( Stem("piezişă"), "pieziş" );
	deepEqual( Stem("piezişe"), "pieziş" );
	deepEqual( Stem("pijamale"), "pijamal" );
	deepEqual( Stem("pilda"), "pild" );
	deepEqual( Stem("pildă"), "pild" );
	deepEqual( Stem("pingeleam"), "pingel" );
	deepEqual( Stem("pingeli"), "pingel" );
	deepEqual( Stem("pintenog"), "pintenog" );
	deepEqual( Stem("pioasă"), "pioas" );
	deepEqual( Stem("pionierului"), "pionier" );
	deepEqual( Stem("pionii"), "pion" );
	deepEqual( Stem("pioşi"), "pioş" );
	deepEqual( Stem("pipă"), "pip" );
	deepEqual( Stem("pipăi"), "pipă" );
	deepEqual( Stem("pipăie"), "pipăi" );
	deepEqual( Stem("pipăire"), "pipăir" );
	deepEqual( Stem("pipăiri"), "pipăir" );
	deepEqual( Stem("pipăit"), "pipăit" );
	deepEqual( Stem("pipăite"), "pipăit" );
	deepEqual( Stem("pipăitul"), "pipăit" );
	deepEqual( Stem("pipărate"), "pipăr" );
	deepEqual( Stem("pipernicit"), "pipernic" );
	deepEqual( Stem("piperul"), "piper" );
	deepEqual( Stem("piramida"), "piramid" );
	deepEqual( Stem("piramidal"), "piramidal" );
	deepEqual( Stem("piramidă"), "piramid" );
	deepEqual( Stem("piramidelor"), "piramid" );
	deepEqual( Stem("pirandello"), "pirandello" );
	deepEqual( Stem("pirateria"), "pirater" );
	deepEqual( Stem("piraţi"), "pir" );
	deepEqual( Stem("pirmassens"), "pirmassens" );
	deepEqual( Stem("pirogravată"), "pirograv" );
	deepEqual( Stem("piroman"), "piroman" );
	deepEqual( Stem("piron"), "piron" );
	deepEqual( Stem("pironesc"), "piron" );
	deepEqual( Stem("pirpirie"), "pirpir" );
	deepEqual( Stem("piruetă"), "piruet" );
	deepEqual( Stem("piscurile"), "piscur" );
	deepEqual( Stem("pisemne"), "pisemn" );
	deepEqual( Stem("pisică"), "pisic" );
	deepEqual( Stem("pisicilor"), "pisic" );
	deepEqual( Stem("pişcă"), "pişc" );
	deepEqual( Stem("pitagora"), "pitagor" );
	deepEqual( Stem("piteşti"), "piteşt" );
	deepEqual( Stem("pitici"), "pitic" );
	deepEqual( Stem("pitorească"), "pitor" );
	deepEqual( Stem("pitoresc"), "pitor" );
	deepEqual( Stem("pitorescul"), "pitor" );
	deepEqual( Stem("pitoreşti"), "pitor" );
	deepEqual( Stem("piuit"), "piuit" );
	deepEqual( Stem("piuitul"), "piuit" );
	deepEqual( Stem("piuituri"), "piuitur" );
	deepEqual( Stem("pivniţă"), "pivniţ" );
	deepEqual( Stem("pivniţele"), "pivniţ" );
	deepEqual( Stem("pivniţi"), "pivn" );
	deepEqual( Stem("pîră"), "pîr" );
	deepEqual( Stem("pîrghie"), "pîrgh" );
	deepEqual( Stem("pîrghiile"), "pîrgh" );
	deepEqual( Stem("pîrghiilor"), "pîrgh" );
	deepEqual( Stem("pîrî"), "pîrî" );
	deepEqual( Stem("pîrîu"), "pîrîu" );
	deepEqual( Stem("pîrjolit"), "pîrjol" );
	deepEqual( Stem("pîrjolită"), "pîrjol" );
	deepEqual( Stem("pîrlit"), "pîrlit" );
	deepEqual( Stem("pîrliţi"), "pîrl" );
	deepEqual( Stem("pîrtia"), "pîrt" );
	deepEqual( Stem("plac"), "plac" );
	deepEqual( Stem("placă"), "plac" );
	deepEqual( Stem("place"), "plac" );
	deepEqual( Stem("placi"), "plac" );
	deepEqual( Stem("plai"), "pla" );
	deepEqual( Stem("plaiul"), "plai" );
	deepEqual( Stem("plaiului"), "plai" );
	deepEqual( Stem("plaiuri"), "plaiur" );
	deepEqual( Stem("plaiurile"), "plaiur" );
	deepEqual( Stem("plajă"), "plaj" );
	deepEqual( Stem("plan"), "plan" );
	deepEqual( Stem("planau"), "plan" );
	deepEqual( Stem("plană"), "plan" );
	deepEqual( Stem("planelor"), "plan" );
	deepEqual( Stem("planeta"), "planet" );
	deepEqual( Stem("planetar"), "planetar" );
	deepEqual( Stem("planetă"), "planet" );
	deepEqual( Stem("planete"), "planet" );
	deepEqual( Stem("planetei"), "planete" );
	deepEqual( Stem("planetele"), "planet" );
	deepEqual( Stem("planetelor"), "planet" );
	deepEqual( Stem("plantaţii"), "plant" );
	deepEqual( Stem("plante"), "plant" );
	deepEqual( Stem("plantele"), "plant" );
	deepEqual( Stem("planton"), "planton" );
	deepEqual( Stem("planul"), "plan" );
	deepEqual( Stem("planului"), "plan" );
	deepEqual( Stem("planuri"), "planur" );
	deepEqual( Stem("planurile"), "planur" );
	deepEqual( Stem("planurilor"), "planur" );
	deepEqual( Stem("plapuma"), "plapum" );
	deepEqual( Stem("plasa"), "plas" );
	deepEqual( Stem("plasat"), "plasat" );
	deepEqual( Stem("plasă"), "plas" );
	deepEqual( Stem("plasează"), "plas" );
	deepEqual( Stem("plasez"), "plas" );
	deepEqual( Stem("plaseze"), "plas" );
	deepEqual( Stem("plastic"), "plastic" );
	deepEqual( Stem("plastice"), "plastic" );
	deepEqual( Stem("plastron"), "plastron" );
	deepEqual( Stem("plastronare"), "plastron" );
	deepEqual( Stem("plată"), "plat" );
	deepEqual( Stem("platelor"), "plat" );
	deepEqual( Stem("platitudinea"), "platitudin" );
	deepEqual( Stem("platitudini"), "platitudin" );
	deepEqual( Stem("platitudinilor"), "platitudin" );
	deepEqual( Stem("platon"), "platon" );
	deepEqual( Stem("platonic"), "platon" );
	deepEqual( Stem("platonica"), "platon" );
	deepEqual( Stem("platonică"), "platon" );
	deepEqual( Stem("platonice"), "platon" );
	deepEqual( Stem("platoniciană"), "platonician" );
	deepEqual( Stem("platoniciene"), "platonicien" );
	deepEqual( Stem("platonismul"), "platonist" );
	deepEqual( Stem("platou"), "platou" );
	deepEqual( Stem("platoul"), "plato" );
	deepEqual( Stem("platouri"), "platour" );
	deepEqual( Stem("plâng"), "plâng" );
	deepEqual( Stem("plângând"), "plâng" );
	deepEqual( Stem("plângându"), "plâng" );
	deepEqual( Stem("plângă"), "plâng" );
	deepEqual( Stem("plângăreţ"), "plângăreţ" );
	deepEqual( Stem("plânge"), "plâng" );
	deepEqual( Stem("plângea"), "plâng" );
	deepEqual( Stem("plângeau"), "plâng" );
	deepEqual( Stem("plângerea"), "plâng" );
	deepEqual( Stem("plâns"), "plâns" );
	deepEqual( Stem("plăcea"), "plăc" );
	deepEqual( Stem("plăceau"), "plăc" );
	deepEqual( Stem("plăcere"), "plăc" );
	deepEqual( Stem("plăcerea"), "plăc" );
	deepEqual( Stem("plăcerii"), "plăcer" );
	deepEqual( Stem("plăcerile"), "plăcer" );
	deepEqual( Stem("plăcile"), "plăc" );
	deepEqual( Stem("plăcuse"), "plăc" );
	deepEqual( Stem("plăcut"), "plăcut" );
	deepEqual( Stem("plăcută"), "plăcut" );
	deepEqual( Stem("plămânii"), "plămân" );
	deepEqual( Stem("plămădeală"), "plămădeal" );
	deepEqual( Stem("plăpândă"), "plăpând" );
	deepEqual( Stem("plătea"), "plăt" );
	deepEqual( Stem("plăteam"), "plăt" );
	deepEqual( Stem("plătească"), "plăt" );
	deepEqual( Stem("plătesc"), "plăt" );
	deepEqual( Stem("plăteşte"), "plăt" );
	deepEqual( Stem("plătind"), "plăt" );
	deepEqual( Stem("plătit"), "plătit" );
	deepEqual( Stem("plătite"), "plătit" );
	deepEqual( Stem("plăţi"), "plăţ" );
	deepEqual( Stem("plăzmui"), "plăzm" );
	deepEqual( Stem("pleacă"), "pleac" );
	deepEqual( Stem("plebee"), "plebe" );
	deepEqual( Stem("plebeizare"), "plebeiz" );
	deepEqual( Stem("plec"), "plec" );
	deepEqual( Stem("pleca"), "plec" );
	deepEqual( Stem("plecam"), "plec" );
	deepEqual( Stem("plecare"), "plec" );
	deepEqual( Stem("plecarea"), "plec" );
	deepEqual( Stem("plecase"), "plec" );
	deepEqual( Stem("plecasem"), "plec" );
	deepEqual( Stem("plecaseră"), "plec" );
	deepEqual( Stem("plecat"), "plecat" );
	deepEqual( Stem("plecată"), "plecat" );
	deepEqual( Stem("plecaţi"), "plec" );
	deepEqual( Stem("plecau"), "plec" );
	deepEqual( Stem("plecând"), "plec" );
	deepEqual( Stem("plecăm"), "plec" );
	deepEqual( Stem("plecări"), "plecăr" );
	deepEqual( Stem("plecării"), "plecăr" );
	deepEqual( Stem("plece"), "plec" );
	deepEqual( Stem("pleci"), "plec" );
	deepEqual( Stem("pledează"), "pled" );
	deepEqual( Stem("plehanov"), "plehanov" );
	deepEqual( Stem("pleoape"), "pleoap" );
	deepEqual( Stem("pleoapele"), "pleoap" );
	deepEqual( Stem("plescăind"), "plescăind" );
	deepEqual( Stem("plesnească"), "plesn" );
	deepEqual( Stem("plesneau"), "plesn" );
	deepEqual( Stem("plesnesc"), "plesn" );
	deepEqual( Stem("plesneşte"), "plesn" );
	deepEqual( Stem("plesnet"), "plesnet" );
	deepEqual( Stem("plesnete"), "plesnet" );
	deepEqual( Stem("plesnetele"), "plesnet" );
	deepEqual( Stem("plesni"), "plesn" );
	deepEqual( Stem("plesnit"), "plesnit" );
	deepEqual( Stem("plesnite"), "plesnit" );
	deepEqual( Stem("plesnituri"), "plesnitur" );
	deepEqual( Stem("pletos"), "pletos" );
	deepEqual( Stem("pleziristă"), "plezirist" );
	deepEqual( Stem("plic"), "plic" );
	deepEqual( Stem("plicticoasă"), "plictic" );
	deepEqual( Stem("plicticos"), "plictic" );
	deepEqual( Stem("plictisea"), "plict" );
	deepEqual( Stem("plictiseala"), "plictiseal" );
	deepEqual( Stem("plictiseală"), "plictiseal" );
	deepEqual( Stem("plictiseau"), "plictis" );
	deepEqual( Stem("plictisesc"), "plictis" );
	deepEqual( Stem("plictiseşte"), "plictis" );
	deepEqual( Stem("plictiseşti"), "plictis" );
	deepEqual( Stem("plictisit"), "plictis" );
	deepEqual( Stem("plictisită"), "plictis" );
	deepEqual( Stem("plictisite"), "plictis" );
	deepEqual( Stem("plictisitoare"), "plictis" );
	deepEqual( Stem("plictisiţi"), "plictis" );
	deepEqual( Stem("plicul"), "plic" );
	deepEqual( Stem("plimba"), "plimb" );
	deepEqual( Stem("plimbam"), "plimb" );
	deepEqual( Stem("plimbare"), "plimb" );
	deepEqual( Stem("plimbarea"), "plimb" );
	deepEqual( Stem("plimbase"), "plimb" );
	deepEqual( Stem("plimbat"), "plimbat" );
	deepEqual( Stem("plimbaţi"), "plimb" );
	deepEqual( Stem("plimbau"), "plimb" );
	deepEqual( Stem("plimbându"), "plimb" );
	deepEqual( Stem("plimbă"), "plimb" );
	deepEqual( Stem("plimbăm"), "plimb" );
	deepEqual( Stem("plimbări"), "plimbăr" );
	deepEqual( Stem("plimbării"), "plimbăr" );
	deepEqual( Stem("plimbările"), "plimbăr" );
	deepEqual( Stem("plin"), "plin" );
	deepEqual( Stem("plina"), "plin" );
	deepEqual( Stem("plină"), "plin" );
	deepEqual( Stem("pline"), "plin" );
	deepEqual( Stem("plini"), "plin" );
	deepEqual( Stem("plinul"), "plin" );
	deepEqual( Stem("plinuţ"), "plinuţ" );
	deepEqual( Stem("plinuţe"), "plinuţ" );
	deepEqual( Stem("pliscul"), "plisc" );
	deepEqual( Stem("ploaia"), "ploai" );
	deepEqual( Stem("ploaie"), "ploai" );
	deepEqual( Stem("ploi"), "plo" );
	deepEqual( Stem("ploieşti"), "ploi" );
	deepEqual( Stem("ploii"), "ploi" );
	deepEqual( Stem("ploile"), "ploil" );
	deepEqual( Stem("ploioasă"), "ploioas" );
	deepEqual( Stem("plotin"), "plotin" );
	deepEqual( Stem("plotonier"), "plotonier" );
	deepEqual( Stem("plotonierul"), "plotonier" );
	deepEqual( Stem("plotonul"), "ploton" );
	deepEqual( Stem("plouase"), "plou" );
	deepEqual( Stem("plouat"), "plouat" );
	deepEqual( Stem("plouată"), "plouat" );
	deepEqual( Stem("plouate"), "plouat" );
	deepEqual( Stem("plouă"), "plou" );
	deepEqual( Stem("plumb"), "plumb" );
	deepEqual( Stem("plumbul"), "plumb" );
	deepEqual( Stem("plus"), "plus" );
	deepEqual( Stem("plusurile"), "plusur" );
	deepEqual( Stem("plutea"), "plut" );
	deepEqual( Stem("pluteau"), "plut" );
	deepEqual( Stem("pluteşte"), "plut" );
	deepEqual( Stem("plutim"), "plut" );
	deepEqual( Stem("plutind"), "plut" );
	deepEqual( Stem("plutire"), "plut" );
	deepEqual( Stem("plutit"), "plutit" );
	deepEqual( Stem("plutoane"), "plutoan" );
	deepEqual( Stem("pluton"), "pluton" );
	deepEqual( Stem("plutonier"), "plutonier" );
	deepEqual( Stem("plutonierii"), "plutonier" );
	deepEqual( Stem("plutonierilor"), "plutonier" );
	deepEqual( Stem("plutonierul"), "plutonier" );
	deepEqual( Stem("plutonul"), "pluton" );
	deepEqual( Stem("pneu"), "pneu" );
	deepEqual( Stem("poalele"), "poal" );
	deepEqual( Stem("poarta"), "poart" );
	deepEqual( Stem("poartă"), "poart" );
	deepEqual( Stem("poarte"), "poart" );
	deepEqual( Stem("poată"), "poat" );
	deepEqual( Stem("poate"), "poat" );
	deepEqual( Stem("pocăită"), "pocăit" );
	deepEqual( Stem("pocească"), "poceasc" );
	deepEqual( Stem("pocher"), "pocher" );
	deepEqual( Stem("pocker"), "pocker" );
	deepEqual( Stem("pod"), "pod" );
	deepEqual( Stem("podea"), "pod" );
	deepEqual( Stem("podeala"), "podeal" );
	deepEqual( Stem("podeţe"), "podeţ" );
	deepEqual( Stem("podeţele"), "podeţ" );
	deepEqual( Stem("podeţul"), "podeţ" );
	deepEqual( Stem("podgorean"), "podgorean" );
	deepEqual( Stem("podgorenilor"), "podgoren" );
	deepEqual( Stem("podiş"), "podiş" );
	deepEqual( Stem("podişul"), "podiş" );
	deepEqual( Stem("podişului"), "podiş" );
	deepEqual( Stem("podul"), "pod" );
	deepEqual( Stem("poem"), "poem" );
	deepEqual( Stem("poemele"), "poem" );
	deepEqual( Stem("poet"), "poet" );
	deepEqual( Stem("poetic"), "poetic" );
	deepEqual( Stem("poetică"), "poetic" );
	deepEqual( Stem("poetice"), "poetic" );
	deepEqual( Stem("poetico"), "poetico" );
	deepEqual( Stem("poetizabil"), "poetiz" );
	deepEqual( Stem("poetizată"), "poetiz" );
	deepEqual( Stem("poetizări"), "poetizăr" );
	deepEqual( Stem("poetizează"), "poetiz" );
	deepEqual( Stem("poetul"), "poet" );
	deepEqual( Stem("poetului"), "poet" );
	deepEqual( Stem("poeţi"), "poeţ" );
	deepEqual( Stem("poeţii"), "poeţ" );
	deepEqual( Stem("poeţilor"), "poeţ" );
	deepEqual( Stem("poezia"), "poez" );
	deepEqual( Stem("poezie"), "poez" );
	deepEqual( Stem("poeziei"), "poez" );
	deepEqual( Stem("poeziile"), "poez" );
	deepEqual( Stem("pofta"), "poft" );
	deepEqual( Stem("poftă"), "poft" );
	deepEqual( Stem("pofte"), "poft" );
	deepEqual( Stem("poftele"), "poft" );
	deepEqual( Stem("poftim"), "poft" );
	deepEqual( Stem("poftit"), "poftit" );
	deepEqual( Stem("poftiţi"), "poft" );
	deepEqual( Stem("poiana"), "poian" );
	deepEqual( Stem("poiană"), "poian" );
	deepEqual( Stem("poienii"), "poien" );
	deepEqual( Stem("poienile"), "poien" );
	deepEqual( Stem("poimâine"), "poimâin" );
	deepEqual( Stem("poincare"), "poinc" );
	deepEqual( Stem("pojghiţa"), "pojghiţ" );
	deepEqual( Stem("pol"), "pol" );
	deepEqual( Stem("poleia"), "polei" );
	deepEqual( Stem("poleit"), "poleit" );
	deepEqual( Stem("polemică"), "polem" );
	deepEqual( Stem("polemice"), "polem" );
	deepEqual( Stem("polemizează"), "polemiz" );
	deepEqual( Stem("poli"), "pol" );
	deepEqual( Stem("poligoane"), "poligoan" );
	deepEqual( Stem("poligon"), "poligon" );
	deepEqual( Stem("poligonul"), "poligon" );
	deepEqual( Stem("polii"), "pol" );
	deepEqual( Stem("politeţea"), "politeţ" );
	deepEqual( Stem("politic"), "polit" );
	deepEqual( Stem("politica"), "polit" );
	deepEqual( Stem("politică"), "polit" );
	deepEqual( Stem("politice"), "polit" );
	deepEqual( Stem("politici"), "polit" );
	deepEqual( Stem("politiciani"), "politician" );
	deepEqual( Stem("politicianii"), "politician" );
	deepEqual( Stem("politicii"), "polit" );
	deepEqual( Stem("politico"), "politico" );
	deepEqual( Stem("politicos"), "politic" );
	deepEqual( Stem("politischer"), "politischer" );
	deepEqual( Stem("poliţaiul"), "poliţai" );
	deepEqual( Stem("poliţă"), "poliţ" );
	deepEqual( Stem("poliţia"), "poliţ" );
	deepEqual( Stem("poliţie"), "poliţ" );
	deepEqual( Stem("poliţiei"), "pol" );
	deepEqual( Stem("poliţişti"), "poliţist" );
	deepEqual( Stem("polonez"), "polon" );
	deepEqual( Stem("poloneze"), "polon" );
	deepEqual( Stem("polonezilor"), "polon" );
	deepEqual( Stem("poluat"), "poluat" );
	deepEqual( Stem("polul"), "pol" );
	deepEqual( Stem("pom"), "pom" );
	deepEqual( Stem("pomeneam"), "pomen" );
	deepEqual( Stem("pomenesc"), "pomen" );
	deepEqual( Stem("pomeneşte"), "pomen" );
	deepEqual( Stem("pomenim"), "pomen" );
	deepEqual( Stem("pomenire"), "pomen" );
	deepEqual( Stem("pomenit"), "pomen" );
	deepEqual( Stem("pomenite"), "pomen" );
	deepEqual( Stem("pomi"), "pom" );
	deepEqual( Stem("pompă"), "pomp" );
	deepEqual( Stem("pompos"), "pompos" );
	deepEqual( Stem("poncife"), "poncif" );
	deepEqual( Stem("poni"), "pon" );
	deepEqual( Stem("popas"), "popas" );
	deepEqual( Stem("popescu"), "popescu" );
	deepEqual( Stem("popescule"), "popescul" );
	deepEqual( Stem("popice"), "popic" );
	deepEqual( Stem("popoare"), "popoar" );
	deepEqual( Stem("popoarele"), "popoar" );
	deepEqual( Stem("popoarelor"), "popoar" );
	deepEqual( Stem("popor"), "popor" );
	deepEqual( Stem("poporul"), "popor" );
	deepEqual( Stem("poporului"), "popor" );
	deepEqual( Stem("poposim"), "popos" );
	deepEqual( Stem("popota"), "popot" );
	deepEqual( Stem("popotar"), "popotar" );
	deepEqual( Stem("popotarul"), "popotar" );
	deepEqual( Stem("popotarului"), "popotar" );
	deepEqual( Stem("popotă"), "popot" );
	deepEqual( Stem("popote"), "popot" );
	deepEqual( Stem("popotei"), "popote" );
	deepEqual( Stem("poprire"), "popr" );
	deepEqual( Stem("popular"), "popular" );
	deepEqual( Stem("populară"), "popul" );
	deepEqual( Stem("populare"), "popul" );
	deepEqual( Stem("populaţia"), "popul" );
	deepEqual( Stem("populaţiei"), "popul" );
	deepEqual( Stem("populaţii"), "popul" );
	deepEqual( Stem("populaţiile"), "popul" );
	deepEqual( Stem("populăm"), "popul" );
	deepEqual( Stem("populează"), "popul" );
	deepEqual( Stem("porc"), "porc" );
	deepEqual( Stem("porcărie"), "porcăr" );
	deepEqual( Stem("porci"), "porc" );
	deepEqual( Stem("porcine"), "porcin" );
	deepEqual( Stem("porecla"), "porecl" );
	deepEqual( Stem("poreclim"), "porecl" );
	deepEqual( Stem("poreclise"), "porecl" );
	deepEqual( Stem("pornea"), "porn" );
	deepEqual( Stem("pornească"), "porn" );
	deepEqual( Stem("porneaţi"), "porn" );
	deepEqual( Stem("pornesc"), "porn" );
	deepEqual( Stem("porneşte"), "porn" );
	deepEqual( Stem("porni"), "porn" );
	deepEqual( Stem("pornim"), "porn" );
	deepEqual( Stem("pornind"), "porn" );
	deepEqual( Stem("pornire"), "porn" );
	deepEqual( Stem("pornirea"), "porn" );
	deepEqual( Stem("porniri"), "pornir" );
	deepEqual( Stem("pornirile"), "pornir" );
	deepEqual( Stem("pornirilor"), "pornir" );
	deepEqual( Stem("pornise"), "porn" );
	deepEqual( Stem("porniseră"), "porn" );
	deepEqual( Stem("porniserăm"), "porn" );
	deepEqual( Stem("pornit"), "pornit" );
	deepEqual( Stem("pornite"), "pornit" );
	deepEqual( Stem("porniţi"), "porn" );
	deepEqual( Stem("poroasă"), "poroas" );
	deepEqual( Stem("port"), "port" );
	deepEqual( Stem("portar"), "portar" );
	deepEqual( Stem("portativ"), "portat" );
	deepEqual( Stem("portiţe"), "portiţ" );
	deepEqual( Stem("portocală"), "portocal" );
	deepEqual( Stem("portofel"), "portofel" );
	deepEqual( Stem("portrete"), "portret" );
	deepEqual( Stem("portretul"), "portret" );
	deepEqual( Stem("portul"), "port" );
	deepEqual( Stem("porturile"), "portur" );
	deepEqual( Stem("porţelan"), "porţelan" );
	deepEqual( Stem("porţi"), "porţ" );
	deepEqual( Stem("porţii"), "porţ" );
	deepEqual( Stem("porţile"), "porţ" );
	deepEqual( Stem("porţiune"), "porţiun" );
	deepEqual( Stem("porţiuni"), "porţiun" );
	deepEqual( Stem("porumb"), "porumb" );
	deepEqual( Stem("porumbei"), "porumbe" );
	deepEqual( Stem("porumbişte"), "porumbişt" );
	deepEqual( Stem("porumbul"), "porumb" );
	deepEqual( Stem("porumbului"), "porumb" );
	deepEqual( Stem("poruncă"), "porunc" );
	deepEqual( Stem("poruncesc"), "porunc" );
	deepEqual( Stem("porunceşte"), "porunc" );
	deepEqual( Stem("porunci"), "porunc" );
	deepEqual( Stem("poruncind"), "porunc" );
	deepEqual( Stem("poruncitor"), "porunc" );
	deepEqual( Stem("porunciţi"), "porunc" );
	deepEqual( Stem("posedăm"), "posed" );
	deepEqual( Stem("posede"), "posed" );
	deepEqual( Stem("posesiuni"), "posesiun" );
	deepEqual( Stem("posesiunii"), "posesiun" );
	deepEqual( Stem("posesorul"), "posesor" );
	deepEqual( Stem("posibil"), "posibil" );
	deepEqual( Stem("posibilă"), "posibil" );
	deepEqual( Stem("posibile"), "posib" );
	deepEqual( Stem("posibilitate"), "posibil" );
	deepEqual( Stem("posibilitatea"), "posibil" );
	deepEqual( Stem("posibilităţi"), "posibil" );
	deepEqual( Stem("posibilităţii"), "posibil" );
	deepEqual( Stem("posibilităţile"), "posibil" );
	deepEqual( Stem("posibilităţilor"), "posibil" );
	deepEqual( Stem("posomorâtă"), "posomorât" );
	deepEqual( Stem("post"), "post" );
	deepEqual( Stem("postăvar"), "postăvar" );
	deepEqual( Stem("postul"), "post" );
	deepEqual( Stem("postula"), "postul" );
	deepEqual( Stem("postulare"), "postul" );
	deepEqual( Stem("postularea"), "postul" );
	deepEqual( Stem("postulat"), "postul" );
	deepEqual( Stem("postulate"), "postul" );
	deepEqual( Stem("postulatele"), "postul" );
	deepEqual( Stem("postulatelor"), "postul" );
	deepEqual( Stem("postulatul"), "postul" );
	deepEqual( Stem("postulatului"), "postul" );
	deepEqual( Stem("postulăm"), "postul" );
	deepEqual( Stem("postulează"), "postul" );
	deepEqual( Stem("postulez"), "postul" );
	deepEqual( Stem("postuleze"), "postul" );
	deepEqual( Stem("posturi"), "postur" );
	deepEqual( Stem("posturile"), "postur" );
	deepEqual( Stem("posturilor"), "postur" );
	deepEqual( Stem("poşetă"), "poşet" );
	deepEqual( Stem("poştală"), "poştal" );
	deepEqual( Stem("poştali"), "poştal" );
	deepEqual( Stem("poştă"), "poşt" );
	deepEqual( Stem("poşte"), "poşt" );
	deepEqual( Stem("pot"), "pot" );
	deepEqual( Stem("potcoavă"), "potcoav" );
	deepEqual( Stem("potcoave"), "potcoav" );
	deepEqual( Stem("potcovarului"), "potcovar" );
	deepEqual( Stem("potcovii"), "potcov" );
	deepEqual( Stem("potcovioară"), "potcovioar" );
	deepEqual( Stem("poteca"), "potec" );
	deepEqual( Stem("potecă"), "potec" );
	deepEqual( Stem("poteci"), "potec" );
	deepEqual( Stem("potenţă"), "potenţ" );
	deepEqual( Stem("poticneşte"), "poticn" );
	deepEqual( Stem("poticnit"), "poticn" );
	deepEqual( Stem("potolească"), "potol" );
	deepEqual( Stem("potoleşte"), "potol" );
	deepEqual( Stem("potolim"), "potol" );
	deepEqual( Stem("potolit"), "potol" );
	deepEqual( Stem("potolită"), "potol" );
	deepEqual( Stem("potolite"), "potol" );
	deepEqual( Stem("potop"), "potop" );
	deepEqual( Stem("potriva"), "potriv" );
	deepEqual( Stem("potrivea"), "potriv" );
	deepEqual( Stem("potrivească"), "potriv" );
	deepEqual( Stem("potrivesc"), "potriv" );
	deepEqual( Stem("potriveşte"), "potriv" );
	deepEqual( Stem("potriviri"), "potrivir" );
	deepEqual( Stem("potrivit"), "potriv" );
	deepEqual( Stem("potrivită"), "potriv" );
	deepEqual( Stem("potrivite"), "potriv" );
	deepEqual( Stem("potul"), "pot" );
	deepEqual( Stem("poţi"), "poţ" );
	deepEqual( Stem("pour"), "pour" );
	deepEqual( Stem("pouvoir"), "pouvoir" );
	deepEqual( Stem("povara"), "povar" );
	deepEqual( Stem("povară"), "povar" );
	deepEqual( Stem("povârniş"), "povârniş" );
	deepEqual( Stem("povârnişul"), "povârniş" );
	deepEqual( Stem("povârnişuri"), "povârnişur" );
	deepEqual( Stem("povârnişurile"), "povârnişur" );
	deepEqual( Stem("poveste"), "povest" );
	deepEqual( Stem("povestea"), "povest" );
	deepEqual( Stem("povestească"), "povest" );
	deepEqual( Stem("povesteau"), "povest" );
	deepEqual( Stem("povestesc"), "povest" );
	deepEqual( Stem("povesteşte"), "povest" );
	deepEqual( Stem("povesti"), "povest" );
	deepEqual( Stem("povestim"), "povest" );
	deepEqual( Stem("povestindu"), "povest" );
	deepEqual( Stem("povestire"), "povest" );
	deepEqual( Stem("povestit"), "povest" );
	deepEqual( Stem("povestite"), "povest" );
	deepEqual( Stem("povestitorul"), "povest" );
	deepEqual( Stem("poveşti"), "poveşt" );
	deepEqual( Stem("poveştile"), "poveşt" );
	deepEqual( Stem("poza"), "poz" );
	deepEqual( Stem("poze"), "poz" );
	deepEqual( Stem("pozitiv"), "pozit" );
	deepEqual( Stem("pozitive"), "pozit" );
	deepEqual( Stem("pozitivismului"), "pozitivist" );
	deepEqual( Stem("pozitiviste"), "pozitivist" );
	deepEqual( Stem("pozitiviştilor"), "pozitivist" );
	deepEqual( Stem("poziţia"), "poziţ" );
	deepEqual( Stem("poziţie"), "poziţ" );
	deepEqual( Stem("poziţii"), "poz" );
	deepEqual( Stem("poziţiile"), "poz" );
	deepEqual( Stem("poziţiune"), "pozit" );
	deepEqual( Stem("poziţiunea"), "pozit" );
	deepEqual( Stem("poziţiuni"), "pozit" );
	deepEqual( Stem("poznaş"), "poznaş" );
	deepEqual( Stem("pozne"), "pozn" );
	deepEqual( Stem("poznele"), "pozn" );
	deepEqual( Stem("practic"), "practic" );
	deepEqual( Stem("practica"), "practic" );
	deepEqual( Stem("practicat"), "practic" );
	deepEqual( Stem("practicată"), "practic" );
	deepEqual( Stem("practică"), "practic" );
	deepEqual( Stem("practice"), "practic" );
	deepEqual( Stem("practici"), "practic" );
	deepEqual( Stem("practicii"), "practic" );
	deepEqual( Stem("prada"), "prad" );
	deepEqual( Stem("pradă"), "prad" );
	deepEqual( Stem("praf"), "praf" );
	deepEqual( Stem("praful"), "praf" );
	deepEqual( Stem("prag"), "prag" );
	deepEqual( Stem("pragmatismul"), "pragmatist" );
	deepEqual( Stem("pragul"), "prag" );
	deepEqual( Stem("prahovei"), "prahove" );
	deepEqual( Stem("prana"), "pran" );
	deepEqual( Stem("praştie"), "praşt" );
	deepEqual( Stem("prânz"), "prânz" );
	deepEqual( Stem("prânzim"), "prânz" );
	deepEqual( Stem("prânzului"), "prânz" );
	deepEqual( Stem("prânzurile"), "prânzur" );
	deepEqual( Stem("prăbuşesc"), "prăbuş" );
	deepEqual( Stem("prăbuşeşte"), "prăbuş" );
	deepEqual( Stem("prăbuşim"), "prăbuş" );
	deepEqual( Stem("prăbuşind"), "prăbuş" );
	deepEqual( Stem("prăbuşire"), "prăbuş" );
	deepEqual( Stem("prăbuşirea"), "prăbuş" );
	deepEqual( Stem("prăbuşiri"), "prăbuşir" );
	deepEqual( Stem("prăbuşirile"), "prăbuşir" );
	deepEqual( Stem("prăbuşise"), "prăbuş" );
	deepEqual( Stem("prăbuşit"), "prăbuş" );
	deepEqual( Stem("prăbuşită"), "prăbuş" );
	deepEqual( Stem("prăbuşite"), "prăbuş" );
	deepEqual( Stem("prăfuit"), "prăfuit" );
	deepEqual( Stem("prăfuite"), "prăfuit" );
	deepEqual( Stem("prăfuroasă"), "prăfur" );
	deepEqual( Stem("prăjite"), "prăjit" );
	deepEqual( Stem("prăjitura"), "prăjitur" );
	deepEqual( Stem("prăpădea"), "prăpăd" );
	deepEqual( Stem("prăpădim"), "prăpăd" );
	deepEqual( Stem("prăpădit"), "prăpăd" );
	deepEqual( Stem("prăpădiţi"), "prăpăd" );
	deepEqual( Stem("prăpăstii"), "prăpăst" );
	deepEqual( Stem("prăpăstiile"), "prăpăst" );
	deepEqual( Stem("prăpăstiilor"), "prăpăst" );
	deepEqual( Stem("prăpăstioasă"), "prăpăst" );
	deepEqual( Stem("prăpăstios"), "prăpăst" );
	deepEqual( Stem("prăsele"), "pră" );
	deepEqual( Stem("prăvălească"), "prăvăl" );
	deepEqual( Stem("prăvălie"), "prăvăl" );
	deepEqual( Stem("prăvăliei"), "prăvăl" );
	deepEqual( Stem("prăvălii"), "prăvăl" );
	deepEqual( Stem("prea"), "pre" );
	deepEqual( Stem("preajma"), "preajm" );
	deepEqual( Stem("preaplinul"), "preaplin" );
	deepEqual( Stem("precauţie"), "precauţ" );
	deepEqual( Stem("precădere"), "precăd" );
	deepEqual( Stem("precedat"), "preced" );
	deepEqual( Stem("precede"), "preced" );
	deepEqual( Stem("precedent"), "precedent" );
	deepEqual( Stem("precedentă"), "precedent" );
	deepEqual( Stem("precedente"), "precedent" );
	deepEqual( Stem("precedenţi"), "precedenţ" );
	deepEqual( Stem("preceptul"), "precept" );
	deepEqual( Stem("precipitatul"), "precipit" );
	deepEqual( Stem("precipită"), "precip" );
	deepEqual( Stem("precis"), "precis" );
	deepEqual( Stem("precisă"), "precis" );
	deepEqual( Stem("precise"), "prec" );
	deepEqual( Stem("preciz"), "preciz" );
	deepEqual( Stem("preciza"), "preciz" );
	deepEqual( Stem("precizare"), "preciz" );
	deepEqual( Stem("precizarea"), "preciz" );
	deepEqual( Stem("precizat"), "preciz" );
	deepEqual( Stem("preciză"), "preciz" );
	deepEqual( Stem("precizări"), "precizăr" );
	deepEqual( Stem("precize"), "preciz" );
	deepEqual( Stem("precizează"), "preciz" );
	deepEqual( Stem("precizez"), "preciz" );
	deepEqual( Stem("precizeze"), "preciz" );
	deepEqual( Stem("precizia"), "preciz" );
	deepEqual( Stem("precizie"), "preciz" );
	deepEqual( Stem("preciziune"), "preciziun" );
	deepEqual( Stem("preciziuni"), "preciziun" );
	deepEqual( Stem("preconcepute"), "preconcep" );
	deepEqual( Stem("precum"), "precum" );
	deepEqual( Stem("predabile"), "predabil" );
	deepEqual( Stem("predat"), "predat" );
	deepEqual( Stem("predă"), "pred" );
	deepEqual( Stem("predea"), "pred" );
	deepEqual( Stem("predeal"), "predeal" );
	deepEqual( Stem("predescu"), "predescu" );
	deepEqual( Stem("predestinat"), "predestin" );
	deepEqual( Stem("predestinaţi"), "predestin" );
	deepEqual( Stem("predicatul"), "predic" );
	deepEqual( Stem("predicatului"), "predic" );
	deepEqual( Stem("preexistă"), "preexist" );
	deepEqual( Stem("preexiste"), "preexist" );
	deepEqual( Stem("preexistent"), "preexistent" );
	deepEqual( Stem("preexistentă"), "preexistent" );
	deepEqual( Stem("preexistente"), "preexistent" );
	deepEqual( Stem("prefac"), "prefac" );
	deepEqual( Stem("prefacă"), "prefac" );
	deepEqual( Stem("prefacere"), "prefac" );
	deepEqual( Stem("prefaceri"), "prefacer" );
	deepEqual( Stem("prefăcându"), "prefăc" );
	deepEqual( Stem("prefăcătorie"), "prefăcător" );
	deepEqual( Stem("prefăcea"), "prefăc" );
	deepEqual( Stem("prefăceau"), "prefăc" );
	deepEqual( Stem("prefăcut"), "prefăc" );
	deepEqual( Stem("prefăcută"), "prefăc" );
	deepEqual( Stem("prefectului"), "prefect" );
	deepEqual( Stem("prefectură"), "prefect" );
	deepEqual( Stem("prefecturilor"), "prefectur" );
	deepEqual( Stem("prefer"), "prefer" );
	deepEqual( Stem("prefera"), "prefer" );
	deepEqual( Stem("preferam"), "prefer" );
	deepEqual( Stem("preferasem"), "prefer" );
	deepEqual( Stem("preferat"), "prefer" );
	deepEqual( Stem("preferată"), "prefer" );
	deepEqual( Stem("preferau"), "prefer" );
	deepEqual( Stem("preferă"), "prefer" );
	deepEqual( Stem("preferi"), "prefer" );
	deepEqual( Stem("preferinţa"), "preferinţ" );
	deepEqual( Stem("preferinţă"), "preferinţ" );
	deepEqual( Stem("preferinţe"), "preferinţ" );
	deepEqual( Stem("preferinţei"), "preferinţe" );
	deepEqual( Stem("preferinţele"), "preferinţ" );
	deepEqual( Stem("pregătea"), "pregăt" );
	deepEqual( Stem("pregătească"), "pregăt" );
	deepEqual( Stem("pregătesc"), "pregăt" );
	deepEqual( Stem("pregăteşti"), "pregăt" );
	deepEqual( Stem("pregătim"), "pregăt" );
	deepEqual( Stem("pregătire"), "pregăt" );
	deepEqual( Stem("pregătirea"), "pregăt" );
	deepEqual( Stem("pregătiri"), "pregătir" );
	deepEqual( Stem("pregătirilor"), "pregătir" );
	deepEqual( Stem("pregătit"), "pregăt" );
	deepEqual( Stem("pregătită"), "pregăt" );
	deepEqual( Stem("pregătite"), "pregăt" );
	deepEqual( Stem("pregătiţi"), "pregăt" );
	deepEqual( Stem("preget"), "preget" );
	deepEqual( Stem("preistoric"), "preistor" );
	deepEqual( Stem("preistorice"), "preistor" );
	deepEqual( Stem("prejudec"), "prejudec" );
	deepEqual( Stem("prejudecare"), "prejudec" );
	deepEqual( Stem("prejudecăm"), "prejudec" );
	deepEqual( Stem("prejudiciile"), "prejud" );
	deepEqual( Stem("prejudiciilor"), "prejud" );
	deepEqual( Stem("prelegerea"), "preleg" );
	deepEqual( Stem("prelegeri"), "preleger" );
	deepEqual( Stem("prelegerile"), "preleger" );
	deepEqual( Stem("prelungă"), "prelung" );
	deepEqual( Stem("prelungeam"), "prelung" );
	deepEqual( Stem("prelungească"), "prelung" );
	deepEqual( Stem("prelungeau"), "prelung" );
	deepEqual( Stem("prelungesc"), "prelung" );
	deepEqual( Stem("prelungi"), "prelung" );
	deepEqual( Stem("prelungind"), "prelung" );
	deepEqual( Stem("prelungire"), "prelung" );
	deepEqual( Stem("prelungirea"), "prelung" );
	deepEqual( Stem("prelungiri"), "prelungir" );
	deepEqual( Stem("prelungit"), "prelung" );
	deepEqual( Stem("prelungite"), "prelung" );
	deepEqual( Stem("prematur"), "prematur" );
	deepEqual( Stem("premeditarea"), "premedit" );
	deepEqual( Stem("premierele"), "premier" );
	deepEqual( Stem("premii"), "prem" );
	deepEqual( Stem("premise"), "prem" );
	deepEqual( Stem("premisele"), "prem" );
	deepEqual( Stem("preocupare"), "preocup" );
	deepEqual( Stem("preocuparea"), "preocup" );
	deepEqual( Stem("preocupat"), "preocup" );
	deepEqual( Stem("preocupată"), "preocup" );
	deepEqual( Stem("preocupă"), "preocup" );
	deepEqual( Stem("preocupări"), "preocupăr" );
	deepEqual( Stem("preocupările"), "preocupăr" );
	deepEqual( Stem("preocupărilor"), "preocupăr" );
	deepEqual( Stem("preopinent"), "preopinent" );
	deepEqual( Stem("preotului"), "preot" );
	deepEqual( Stem("preoţi"), "preoţ" );
	deepEqual( Stem("preoţii"), "preoţ" );
	deepEqual( Stem("preparat"), "prepar" );
	deepEqual( Stem("prepară"), "prep" );
	deepEqual( Stem("presa"), "pres" );
	deepEqual( Stem("presă"), "pres" );
	deepEqual( Stem("presărat"), "presăr" );
	deepEqual( Stem("prescrie"), "prescr" );
	deepEqual( Stem("prescripţiile"), "prescripţ" );
	deepEqual( Stem("prescris"), "prescris" );
	deepEqual( Stem("presimţire"), "presimţ" );
	deepEqual( Stem("presiune"), "presiun" );
	deepEqual( Stem("pressan"), "pressan" );
	deepEqual( Stem("presse"), "pres" );
	deepEqual( Stem("prestigioase"), "prestig" );
	deepEqual( Stem("prestigiu"), "prestigiu" );
	deepEqual( Stem("prestigiul"), "prestig" );
	deepEqual( Stem("presupozarea"), "presupoz" );
	deepEqual( Stem("presupoziţia"), "presupoziţ" );
	deepEqual( Stem("presupoziţie"), "presupoziţ" );
	deepEqual( Stem("presupoziţii"), "presupoz" );
	deepEqual( Stem("presupoziţiile"), "presupoz" );
	deepEqual( Stem("presupun"), "presupun" );
	deepEqual( Stem("presupunând"), "presupun" );
	deepEqual( Stem("presupună"), "presupun" );
	deepEqual( Stem("presupune"), "presupun" );
	deepEqual( Stem("presupunem"), "presupun" );
	deepEqual( Stem("presupunere"), "presupun" );
	deepEqual( Stem("presupunerea"), "presupun" );
	deepEqual( Stem("presupuneţi"), "presupun" );
	deepEqual( Stem("presupus"), "presupus" );
	deepEqual( Stem("presupusă"), "presupus" );
	deepEqual( Stem("presupuse"), "presup" );
	deepEqual( Stem("presus"), "presus" );
	deepEqual( Stem("preşedinte"), "preşedint" );
	deepEqual( Stem("preşedintele"), "preşedint" );
	deepEqual( Stem("preşedinţii"), "preşedinţ" );
	deepEqual( Stem("preştiinţifică"), "preştiinţif" );
	deepEqual( Stem("preta"), "pret" );
	deepEqual( Stem("pretenţia"), "pretenţ" );
	deepEqual( Stem("pretenţie"), "pretenţ" );
	deepEqual( Stem("pretenţii"), "pretenţ" );
	deepEqual( Stem("pretenţioase"), "pretenţ" );
	deepEqual( Stem("pretenţios"), "pretenţ" );
	deepEqual( Stem("pretenţiune"), "pretent" );
	deepEqual( Stem("pretenţiunea"), "pretent" );
	deepEqual( Stem("pretenţiuni"), "pretent" );
	deepEqual( Stem("pretext"), "pretext" );
	deepEqual( Stem("pretexte"), "pretext" );
	deepEqual( Stem("pretind"), "pret" );
	deepEqual( Stem("pretinde"), "pretind" );
	deepEqual( Stem("pretindea"), "pretind" );
	deepEqual( Stem("pretinse"), "pretin" );
	deepEqual( Stem("pretinsele"), "pretin" );
	deepEqual( Stem("pretinsul"), "pretins" );
	deepEqual( Stem("pretinzându"), "pretinz" );
	deepEqual( Stem("pretutindeni"), "pretutinden" );
	deepEqual( Stem("preţ"), "preţ" );
	deepEqual( Stem("preţioasă"), "preţioas" );
	deepEqual( Stem("preţioase"), "preţioas" );
	deepEqual( Stem("preţios"), "preţios" );
	deepEqual( Stem("preţui"), "preţ" );
	deepEqual( Stem("preţuia"), "preţui" );
	deepEqual( Stem("preţuiască"), "preţuiasc" );
	deepEqual( Stem("preţuiau"), "preţui" );
	deepEqual( Stem("preţuiesc"), "preţui" );
	deepEqual( Stem("preţuieşte"), "preţui" );
	deepEqual( Stem("preţuire"), "preţu" );
	deepEqual( Stem("preţuit"), "preţuit" );
	deepEqual( Stem("preţuite"), "preţuit" );
	deepEqual( Stem("preţul"), "preţ" );
	deepEqual( Stem("preţuri"), "preţur" );
	deepEqual( Stem("prevadă"), "prevad" );
	deepEqual( Stem("prevăd"), "prevăd" );
	deepEqual( Stem("prevăzând"), "prevăz" );
	deepEqual( Stem("prevăzut"), "prevăz" );
	deepEqual( Stem("prevedea"), "preved" );
	deepEqual( Stem("prevedem"), "preved" );
	deepEqual( Stem("prevedere"), "preved" );
	deepEqual( Stem("prevederea"), "preved" );
	deepEqual( Stem("prevederi"), "preveder" );
	deepEqual( Stem("prevederii"), "preveder" );
	deepEqual( Stem("prevederile"), "preveder" );
	deepEqual( Stem("prevenit"), "preven" );
	deepEqual( Stem("prevezi"), "prev" );
	deepEqual( Stem("previe"), "prev" );
	deepEqual( Stem("previu"), "previu" );
	deepEqual( Stem("previzibile"), "previzib" );
	deepEqual( Stem("prezan"), "prezan" );
	deepEqual( Stem("prezent"), "prezent" );
	deepEqual( Stem("prezenta"), "prezent" );
	deepEqual( Stem("prezentare"), "prezent" );
	deepEqual( Stem("prezentarea"), "prezent" );
	deepEqual( Stem("prezentat"), "prezent" );
	deepEqual( Stem("prezentată"), "prezent" );
	deepEqual( Stem("prezentau"), "prezent" );
	deepEqual( Stem("prezentându"), "prezent" );
	deepEqual( Stem("prezentă"), "prezent" );
	deepEqual( Stem("prezente"), "prezent" );
	deepEqual( Stem("prezentul"), "prezent" );
	deepEqual( Stem("prezentului"), "prezent" );
	deepEqual( Stem("prezenţa"), "prezenţ" );
	deepEqual( Stem("prezenţă"), "prezenţ" );
	deepEqual( Stem("prezenţei"), "prezenţe" );
	deepEqual( Stem("preziceri"), "prezicer" );
	deepEqual( Stem("prezidenţială"), "prezidenţial" );
	deepEqual( Stem("prezint"), "prezint" );
	deepEqual( Stem("prezintă"), "prezint" );
	deepEqual( Stem("prezinte"), "prezint" );
	deepEqual( Stem("priceapă"), "priceap" );
	deepEqual( Stem("pricep"), "pricep" );
	deepEqual( Stem("pricepe"), "pricep" );
	deepEqual( Stem("pricepea"), "pricep" );
	deepEqual( Stem("pricepere"), "pricep" );
	deepEqual( Stem("pricepeţi"), "pricep" );
	deepEqual( Stem("pricepi"), "pricep" );
	deepEqual( Stem("priceput"), "pricep" );
	deepEqual( Stem("pricepută"), "pricep" );
	deepEqual( Stem("pricepuţi"), "pricepuţ" );
	deepEqual( Stem("pricina"), "pricin" );
	deepEqual( Stem("pricină"), "pricin" );
	deepEqual( Stem("pricinuită"), "pricinu" );
	deepEqual( Stem("pridvor"), "pridvor" );
	deepEqual( Stem("pridvorul"), "pridvor" );
	deepEqual( Stem("pridvorului"), "pridvor" );
	deepEqual( Stem("prielnic"), "prielnic" );
	deepEqual( Stem("prielnice"), "prielnic" );
	deepEqual( Stem("prieten"), "prieten" );
	deepEqual( Stem("prietena"), "prieten" );
	deepEqual( Stem("prietenă"), "prieten" );
	deepEqual( Stem("prietene"), "prieten" );
	deepEqual( Stem("prietenei"), "prietene" );
	deepEqual( Stem("prietenele"), "prieten" );
	deepEqual( Stem("prieteneşti"), "prieten" );
	deepEqual( Stem("prieteni"), "prieten" );
	deepEqual( Stem("prietenia"), "prieten" );
	deepEqual( Stem("prietenie"), "prieten" );
	deepEqual( Stem("prietenii"), "prieten" );
	deepEqual( Stem("prieteniile"), "prieten" );
	deepEqual( Stem("prietenilor"), "prieten" );
	deepEqual( Stem("prietenoasa"), "prieten" );
	deepEqual( Stem("prietenos"), "prieten" );
	deepEqual( Stem("prietenosul"), "prieten" );
	deepEqual( Stem("prietenul"), "prieten" );
	deepEqual( Stem("prigonitor"), "prigon" );
	deepEqual( Stem("prilej"), "prilej" );
	deepEqual( Stem("prilejul"), "prilej" );
	deepEqual( Stem("prilejuri"), "prilejur" );
	deepEqual( Stem("prim"), "prim" );
	deepEqual( Stem("prima"), "prim" );
	deepEqual( Stem("primar"), "primar" );
	deepEqual( Stem("primară"), "prim" );
	deepEqual( Stem("primare"), "prim" );
	deepEqual( Stem("primarul"), "primar" );
	deepEqual( Stem("primarului"), "primar" );
	deepEqual( Stem("primat"), "primat" );
	deepEqual( Stem("primatul"), "primat" );
	deepEqual( Stem("primă"), "prim" );
	deepEqual( Stem("primăria"), "primăr" );
	deepEqual( Stem("primărie"), "primăr" );
	deepEqual( Stem("primăvara"), "primăvar" );
	deepEqual( Stem("primăvară"), "primăv" );
	deepEqual( Stem("primăvăratică"), "primăvărat" );
	deepEqual( Stem("primeam"), "prim" );
	deepEqual( Stem("primească"), "prim" );
	deepEqual( Stem("primejdia"), "primejd" );
	deepEqual( Stem("primejdie"), "primejd" );
	deepEqual( Stem("primejduită"), "primejdu" );
	deepEqual( Stem("primele"), "prim" );
	deepEqual( Stem("primelor"), "prim" );
	deepEqual( Stem("primenite"), "primen" );
	deepEqual( Stem("primesc"), "prim" );
	deepEqual( Stem("primeşte"), "prim" );
	deepEqual( Stem("primeşti"), "prim" );
	deepEqual( Stem("primi"), "prim" );
	deepEqual( Stem("primii"), "prim" );
	deepEqual( Stem("primim"), "prim" );
	deepEqual( Stem("primire"), "prim" );
	deepEqual( Stem("primirea"), "prim" );
	deepEqual( Stem("primise"), "prim" );
	deepEqual( Stem("primisem"), "prim" );
	deepEqual( Stem("primiseră"), "prim" );
	deepEqual( Stem("primit"), "primit" );
	deepEqual( Stem("primite"), "primit" );
	deepEqual( Stem("primitiv"), "primit" );
	deepEqual( Stem("primitivă"), "primit" );
	deepEqual( Stem("primitive"), "primit" );
	deepEqual( Stem("primitivi"), "primit" );
	deepEqual( Stem("primitor"), "primit" );
	deepEqual( Stem("primul"), "prim" );
	deepEqual( Stem("primului"), "prim" );
	deepEqual( Stem("prin"), "prin" );
	deepEqual( Stem("principal"), "principal" );
	deepEqual( Stem("principală"), "principal" );
	deepEqual( Stem("principale"), "principal" );
	deepEqual( Stem("principalele"), "principal" );
	deepEqual( Stem("principali"), "principal" );
	deepEqual( Stem("principalul"), "principal" );
	deepEqual( Stem("principe"), "princip" );
	deepEqual( Stem("principial"), "principial" );
	deepEqual( Stem("principială"), "principial" );
	deepEqual( Stem("principiale"), "principial" );
	deepEqual( Stem("principii"), "princip" );
	deepEqual( Stem("principiile"), "princip" );
	deepEqual( Stem("principiilor"), "princip" );
	deepEqual( Stem("principiu"), "principiu" );
	deepEqual( Stem("principiul"), "princip" );
	deepEqual( Stem("principiului"), "princip" );
	deepEqual( Stem("prind"), "prind" );
	deepEqual( Stem("prindă"), "prind" );
	deepEqual( Stem("prinde"), "prind" );
	deepEqual( Stem("prindeam"), "prind" );
	deepEqual( Stem("prindeau"), "prind" );
	deepEqual( Stem("prindem"), "prind" );
	deepEqual( Stem("prins"), "prins" );
	deepEqual( Stem("prinsă"), "prins" );
	deepEqual( Stem("prinse"), "prin" );
	deepEqual( Stem("prinsesem"), "prin" );
	deepEqual( Stem("prinsoare"), "prinsoar" );
	deepEqual( Stem("prinsoarea"), "prinsoar" );
	deepEqual( Stem("prinşi"), "prinş" );
	deepEqual( Stem("printr"), "printr" );
	deepEqual( Stem("printre"), "printr" );
	deepEqual( Stem("prinţ"), "prinţ" );
	deepEqual( Stem("prinţesă"), "prinţes" );
	deepEqual( Stem("prinzi"), "prinz" );
	deepEqual( Stem("pripit"), "pripit" );
	deepEqual( Stem("pripită"), "pripit" );
	deepEqual( Stem("prisos"), "prisos" );
	deepEqual( Stem("prisosinţă"), "prisosinţ" );
	deepEqual( Stem("prisosul"), "prisos" );
	deepEqual( Stem("prispă"), "prisp" );
	deepEqual( Stem("privată"), "privat" );
	deepEqual( Stem("privea"), "priv" );
	deepEqual( Stem("priveai"), "priv" );
	deepEqual( Stem("priveam"), "priv" );
	deepEqual( Stem("privească"), "priv" );
	deepEqual( Stem("priveau"), "priv" );
	deepEqual( Stem("privelişte"), "privelişt" );
	deepEqual( Stem("priveliştea"), "privelişt" );
	deepEqual( Stem("privelişti"), "privelist" );
	deepEqual( Stem("priveliştii"), "privelist" );
	deepEqual( Stem("privesc"), "priv" );
	deepEqual( Stem("priveşte"), "priv" );
	deepEqual( Stem("priveşti"), "priv" );
	deepEqual( Stem("privi"), "priv" );
	deepEqual( Stem("privim"), "priv" );
	deepEqual( Stem("privind"), "priv" );
	deepEqual( Stem("privindu"), "priv" );
	deepEqual( Stem("privinţa"), "privinţ" );
	deepEqual( Stem("privinţă"), "privinţ" );
	deepEqual( Stem("privinţi"), "privinţ" );
	deepEqual( Stem("privire"), "priv" );
	deepEqual( Stem("privirea"), "priv" );
	deepEqual( Stem("priviri"), "privir" );
	deepEqual( Stem("privirii"), "privir" );
	deepEqual( Stem("privirile"), "privir" );
	deepEqual( Stem("privirilor"), "privir" );
	deepEqual( Stem("privisem"), "priv" );
	deepEqual( Stem("privit"), "privit" );
	deepEqual( Stem("privită"), "privit" );
	deepEqual( Stem("privite"), "privit" );
	deepEqual( Stem("privitoare"), "privit" );
	deepEqual( Stem("priviţi"), "priv" );
	deepEqual( Stem("prizonier"), "prizonier" );
	deepEqual( Stem("prizonieră"), "prizonier" );
	deepEqual( Stem("prizonieri"), "prizonier" );
	deepEqual( Stem("prizonierul"), "prizonier" );
	deepEqual( Stem("pro"), "pro" );
	deepEqual( Stem("proaspăt"), "proaspăt" );
	deepEqual( Stem("proaspătă"), "proaspăt" );
	deepEqual( Stem("proaspătul"), "proaspăt" );
	deepEqual( Stem("proaspete"), "proaspet" );
	deepEqual( Stem("proaspeţi"), "proasp" );
	deepEqual( Stem("proastă"), "proast" );
	deepEqual( Stem("proba"), "prob" );
	deepEqual( Stem("probabil"), "probabil" );
	deepEqual( Stem("probabilă"), "probabil" );
	deepEqual( Stem("probabilitate"), "probabil" );
	deepEqual( Stem("probabilitatea"), "probabil" );
	deepEqual( Stem("probabilităţi"), "probabil" );
	deepEqual( Stem("probă"), "prob" );
	deepEqual( Stem("probele"), "prob" );
	deepEqual( Stem("problema"), "problem" );
	deepEqual( Stem("problematica"), "problemat" );
	deepEqual( Stem("problematică"), "problemat" );
	deepEqual( Stem("problemă"), "problem" );
	deepEqual( Stem("probleme"), "problem" );
	deepEqual( Stem("problemei"), "probleme" );
	deepEqual( Stem("problemele"), "problem" );
	deepEqual( Stem("problemelor"), "problem" );
	deepEqual( Stem("procedăm"), "proced" );
	deepEqual( Stem("procedările"), "procedăr" );
	deepEqual( Stem("procede"), "proced" );
	deepEqual( Stem("procedează"), "proced" );
	deepEqual( Stem("procedeele"), "procede" );
	deepEqual( Stem("procedeu"), "procedeu" );
	deepEqual( Stem("procedeul"), "proced" );
	deepEqual( Stem("procedez"), "proced" );
	deepEqual( Stem("procedeze"), "proced" );
	deepEqual( Stem("procedura"), "procedur" );
	deepEqual( Stem("procedură"), "proced" );
	deepEqual( Stem("proces"), "proces" );
	deepEqual( Stem("procese"), "proc" );
	deepEqual( Stem("proceselor"), "proc" );
	deepEqual( Stem("procesul"), "proces" );
	deepEqual( Stem("procesului"), "proces" );
	deepEqual( Stem("proclamat"), "proclam" );
	deepEqual( Stem("proclamau"), "proclam" );
	deepEqual( Stem("procură"), "proc" );
	deepEqual( Stem("procuror"), "procuror" );
	deepEqual( Stem("produc"), "produc" );
	deepEqual( Stem("producă"), "produc" );
	deepEqual( Stem("produce"), "produc" );
	deepEqual( Stem("producerea"), "produc" );
	deepEqual( Stem("producerii"), "producer" );
	deepEqual( Stem("producerile"), "producer" );
	deepEqual( Stem("producţia"), "producţ" );
	deepEqual( Stem("producţie"), "producţ" );
	deepEqual( Stem("producţiei"), "producţ" );
	deepEqual( Stem("produs"), "produs" );
	deepEqual( Stem("produse"), "prod" );
	deepEqual( Stem("produsele"), "prod" );
	deepEqual( Stem("profanare"), "profan" );
	deepEqual( Stem("profanării"), "profanăr" );
	deepEqual( Stem("profanez"), "profan" );
	deepEqual( Stem("profaneze"), "profan" );
	deepEqual( Stem("profanii"), "profan" );
	deepEqual( Stem("profanilor"), "profan" );
	deepEqual( Stem("profesie"), "profes" );
	deepEqual( Stem("profesii"), "profes" );
	deepEqual( Stem("profesională"), "profesional" );
	deepEqual( Stem("profesionist"), "profesionist" );
	deepEqual( Stem("profesioniste"), "profesionist" );
	deepEqual( Stem("profesionişti"), "profesionist" );
	deepEqual( Stem("profesioniştii"), "profesionist" );
	deepEqual( Stem("profesor"), "profesor" );
	deepEqual( Stem("profesori"), "profesor" );
	deepEqual( Stem("profesorii"), "profesor" );
	deepEqual( Stem("profesorul"), "profesor" );
	deepEqual( Stem("profesorului"), "profesor" );
	deepEqual( Stem("profet"), "profet" );
	deepEqual( Stem("profetism"), "profetist" );
	deepEqual( Stem("profetizat"), "profetiz" );
	deepEqual( Stem("profetul"), "profet" );
	deepEqual( Stem("profetului"), "profet" );
	deepEqual( Stem("profeţi"), "prof" );
	deepEqual( Stem("profeţia"), "profeţ" );
	deepEqual( Stem("profeţii"), "prof" );
	deepEqual( Stem("profil"), "profil" );
	deepEqual( Stem("profilează"), "profil" );
	deepEqual( Stem("profilul"), "profil" );
	deepEqual( Stem("profit"), "profit" );
	deepEqual( Stem("profitând"), "profit" );
	deepEqual( Stem("profite"), "profit" );
	deepEqual( Stem("profund"), "profund" );
	deepEqual( Stem("profunda"), "profund" );
	deepEqual( Stem("profundă"), "profund" );
	deepEqual( Stem("profunde"), "profund" );
	deepEqual( Stem("profunzime"), "profunzim" );
	deepEqual( Stem("profunzimea"), "profunzim" );
	deepEqual( Stem("progenitură"), "progenit" );
	deepEqual( Stem("program"), "progr" );
	deepEqual( Stem("programatic"), "programat" );
	deepEqual( Stem("programe"), "program" );
	deepEqual( Stem("progres"), "progres" );
	deepEqual( Stem("progresului"), "progres" );
	deepEqual( Stem("proiectarea"), "proiect" );
	deepEqual( Stem("proiectat"), "proiect" );
	deepEqual( Stem("proiectaţi"), "proiect" );
	deepEqual( Stem("proiectându"), "proiect" );
	deepEqual( Stem("proiectează"), "proiect" );
	deepEqual( Stem("proiectez"), "proiect" );
	deepEqual( Stem("proiectil"), "proiectil" );
	deepEqual( Stem("proiectilul"), "proiectil" );
	deepEqual( Stem("proiectilului"), "proiectil" );
	deepEqual( Stem("proiectoare"), "proiectoar" );
	deepEqual( Stem("proiecţie"), "proiecţ" );
	deepEqual( Stem("proiecţiune"), "proiect" );
	deepEqual( Stem("proletară"), "prolet" );
	deepEqual( Stem("proletari"), "proletar" );
	deepEqual( Stem("proletariatului"), "proletar" );
	deepEqual( Stem("proletarizare"), "proletariz" );
	deepEqual( Stem("proletarizarea"), "proletariz" );
	deepEqual( Stem("proletarizaţi"), "proletariz" );
	deepEqual( Stem("proletarizări"), "proletarizăr" );
	deepEqual( Stem("proletarizează"), "proletariz" );
	deepEqual( Stem("proletarului"), "proletar" );
	deepEqual( Stem("prombul"), "promb" );
	deepEqual( Stem("promenadă"), "promenad" );
	deepEqual( Stem("promis"), "promis" );
	deepEqual( Stem("promiscuitate"), "promiscu" );
	deepEqual( Stem("promisiile"), "promis" );
	deepEqual( Stem("promisiune"), "promisiun" );
	deepEqual( Stem("promisiunea"), "promisiun" );
	deepEqual( Stem("promisiuni"), "promisiun" );
	deepEqual( Stem("promite"), "promit" );
	deepEqual( Stem("promitea"), "promit" );
	deepEqual( Stem("promiţătoare"), "promiţ" );
	deepEqual( Stem("promptă"), "prompt" );
	deepEqual( Stem("prompte"), "prompt" );
	deepEqual( Stem("pronosticuri"), "pronosticur" );
	deepEqual( Stem("pronunţa"), "pronunţ" );
	deepEqual( Stem("pronunţare"), "pronunţ" );
	deepEqual( Stem("pronunţată"), "pronunţ" );
	deepEqual( Stem("pronunţăm"), "pronunţ" );
	deepEqual( Stem("pronunţări"), "pronunţăr" );
	deepEqual( Stem("propaga"), "propag" );
	deepEqual( Stem("propagandă"), "propagand" );
	deepEqual( Stem("propagarea"), "propag" );
	deepEqual( Stem("propagat"), "propag" );
	deepEqual( Stem("propagator"), "propag" );
	deepEqual( Stem("propagării"), "propagăr" );
	deepEqual( Stem("propăşire"), "propăş" );
	deepEqual( Stem("propedeutică"), "propedeut" );
	deepEqual( Stem("propedeutice"), "propedeut" );
	deepEqual( Stem("propensiunea"), "propensiun" );
	deepEqual( Stem("propice"), "propic" );
	deepEqual( Stem("proporţia"), "proporţ" );
	deepEqual( Stem("proporţie"), "proporţ" );
	deepEqual( Stem("proporţii"), "proporţ" );
	deepEqual( Stem("proporţiile"), "proporţ" );
	deepEqual( Stem("proporţional"), "proporţional" );
	deepEqual( Stem("proporţională"), "proporţional" );
	deepEqual( Stem("proporţionalitate"), "proporţional" );
	deepEqual( Stem("proporţionalitatea"), "proporţional" );
	deepEqual( Stem("proporţionalităţii"), "proporţional" );
	deepEqual( Stem("propovăduind"), "propovădu" );
	deepEqual( Stem("propovăduitor"), "propovădu" );
	deepEqual( Stem("propoziţia"), "propoziţ" );
	deepEqual( Stem("propoziţii"), "propoz" );
	deepEqual( Stem("propoziţiile"), "propoz" );
	deepEqual( Stem("propoziţiilor"), "propoz" );
	deepEqual( Stem("propoziţiune"), "propoz" );
	deepEqual( Stem("propoziţiunea"), "propoz" );
	deepEqual( Stem("propoziţiuni"), "propozit" );
	deepEqual( Stem("propria"), "propr" );
	deepEqual( Stem("proprie"), "propr" );
	deepEqual( Stem("propriei"), "propr" );
	deepEqual( Stem("proprietar"), "proprietar" );
	deepEqual( Stem("proprietară"), "propriet" );
	deepEqual( Stem("proprietari"), "proprietar" );
	deepEqual( Stem("proprietarii"), "proprietar" );
	deepEqual( Stem("proprietarul"), "proprietar" );
	deepEqual( Stem("proprietate"), "propriet" );
	deepEqual( Stem("proprietatea"), "propriet" );
	deepEqual( Stem("proprietăreasă"), "proprietăreas" );
	deepEqual( Stem("proprietăţi"), "proprietăţ" );
	deepEqual( Stem("proprietăţile"), "proprietăţ" );
	deepEqual( Stem("proprii"), "propr" );
	deepEqual( Stem("propriile"), "propr" );
	deepEqual( Stem("propriu"), "propriu" );
	deepEqual( Stem("propriul"), "propr" );
	deepEqual( Stem("propter"), "propter" );
	deepEqual( Stem("proptesc"), "propt" );
	deepEqual( Stem("propulsa"), "propuls" );
	deepEqual( Stem("propulsat"), "propuls" );
	deepEqual( Stem("propulseze"), "propuls" );
	deepEqual( Stem("propun"), "propun" );
	deepEqual( Stem("propunerea"), "propun" );
	deepEqual( Stem("propus"), "propus" );
	deepEqual( Stem("prospectarea"), "prospect" );
	deepEqual( Stem("prosperă"), "prosper" );
	deepEqual( Stem("prosperitatea"), "prosper" );
	deepEqual( Stem("prospeţime"), "prospeţim" );
	deepEqual( Stem("prost"), "prost" );
	deepEqual( Stem("prostcrescut"), "prostcresc" );
	deepEqual( Stem("prosteşte"), "prost" );
	deepEqual( Stem("prostia"), "prost" );
	deepEqual( Stem("prostie"), "prost" );
	deepEqual( Stem("prostii"), "prost" );
	deepEqual( Stem("prostiile"), "prost" );
	deepEqual( Stem("prostituarea"), "prostitu" );
	deepEqual( Stem("prostituate"), "prostitu" );
	deepEqual( Stem("proşti"), "proşt" );
	deepEqual( Stem("proştii"), "proşt" );
	deepEqual( Stem("protectoare"), "protectoar" );
	deepEqual( Stem("protector"), "protector" );
	deepEqual( Stem("protecţia"), "protecţ" );
	deepEqual( Stem("protecţie"), "protecţ" );
	deepEqual( Stem("proteja"), "protej" );
	deepEqual( Stem("protejare"), "protej" );
	deepEqual( Stem("protejat"), "protej" );
	deepEqual( Stem("protejată"), "protej" );
	deepEqual( Stem("protejatul"), "protej" );
	deepEqual( Stem("protesta"), "protest" );
	deepEqual( Stem("protestante"), "protest" );
	deepEqual( Stem("protestare"), "protest" );
	deepEqual( Stem("protestări"), "protestăr" );
	deepEqual( Stem("protestează"), "protest" );
	deepEqual( Stem("protestez"), "protest" );
	deepEqual( Stem("protesteze"), "protest" );
	deepEqual( Stem("protestezi"), "protest" );
	deepEqual( Stem("protivnic"), "protivn" );
	deepEqual( Stem("prototipul"), "prototip" );
	deepEqual( Stem("provenienţă"), "provenienţ" );
	deepEqual( Stem("provenind"), "proven" );
	deepEqual( Stem("proverb"), "proverb" );
	deepEqual( Stem("proverbiabili"), "proverb" );
	deepEqual( Stem("proverbial"), "proverbial" );
	deepEqual( Stem("proverbul"), "proverb" );
	deepEqual( Stem("provincia"), "provinc" );
	deepEqual( Stem("provinciali"), "provincial" );
	deepEqual( Stem("provincialii"), "provincial" );
	deepEqual( Stem("provincie"), "provinc" );
	deepEqual( Stem("provinciile"), "provinc" );
	deepEqual( Stem("provine"), "provin" );
	deepEqual( Stem("provizorie"), "provizor" );
	deepEqual( Stem("provizorii"), "provizor" );
	deepEqual( Stem("provoacă"), "provoac" );
	deepEqual( Stem("provoace"), "provoac" );
	deepEqual( Stem("provoc"), "provoc" );
	deepEqual( Stem("provoca"), "provoc" );
	deepEqual( Stem("provocant"), "provoc" );
	deepEqual( Stem("provocat"), "provoc" );
	deepEqual( Stem("provocată"), "provoc" );
	deepEqual( Stem("provocate"), "provoc" );
	deepEqual( Stem("provocând"), "provoc" );
	deepEqual( Stem("provocându"), "provoc" );
	deepEqual( Stem("provoci"), "provoc" );
	deepEqual( Stem("prudent"), "prudent" );
	deepEqual( Stem("prudenţă"), "prudenţ" );
	deepEqual( Stem("prudenţei"), "prudenţe" );
	deepEqual( Stem("prundiş"), "prundiş" );
	deepEqual( Stem("prundişul"), "prundiş" );
	deepEqual( Stem("prundişuri"), "prundişur" );
	deepEqual( Stem("prune"), "prun" );
	deepEqual( Stem("pruni"), "prun" );
	deepEqual( Stem("prusac"), "prusac" );
	deepEqual( Stem("prusacii"), "prusac" );
	deepEqual( Stem("prusian"), "prusian" );
	deepEqual( Stem("prusiană"), "prusian" );
	deepEqual( Stem("prusie"), "prus" );
	deepEqual( Stem("prusiei"), "prus" );
	deepEqual( Stem("prusiene"), "prusien" );
	deepEqual( Stem("prusienilor"), "prusien" );
	deepEqual( Stem("pseudobunătate"), "pseudobunăt" );
	deepEqual( Stem("pseudolux"), "pseudolux" );
	deepEqual( Stem("pseudosubstanţă"), "pseudosubstanţ" );
	deepEqual( Stem("psihiatrii"), "psihiatr" );
	deepEqual( Stem("psihică"), "psihic" );
	deepEqual( Stem("psihice"), "psihic" );
	deepEqual( Stem("psiholog"), "psiholog" );
	deepEqual( Stem("psihologia"), "psiholog" );
	deepEqual( Stem("psihologic"), "psiholog" );
	deepEqual( Stem("psihologică"), "psiholog" );
	deepEqual( Stem("psihologice"), "psiholog" );
	deepEqual( Stem("psihologiceşte"), "psihologic" );
	deepEqual( Stem("psihologie"), "psiholog" );
	deepEqual( Stem("psihologii"), "psiholog" );
	deepEqual( Stem("psihologistă"), "psihologist" );
	deepEqual( Stem("psychologie"), "psycholog" );
	deepEqual( Stem("public"), "public" );
	deepEqual( Stem("publicase"), "public" );
	deepEqual( Stem("publicat"), "public" );
	deepEqual( Stem("publicată"), "public" );
	deepEqual( Stem("publicaţia"), "public" );
	deepEqual( Stem("publică"), "public" );
	deepEqual( Stem("publice"), "public" );
	deepEqual( Stem("publicist"), "publicist" );
	deepEqual( Stem("publicitate"), "public" );
	deepEqual( Stem("publiciza"), "publiciz" );
	deepEqual( Stem("publicul"), "public" );
	deepEqual( Stem("publicului"), "public" );
	deepEqual( Stem("pudoare"), "pudoar" );
	deepEqual( Stem("pudra"), "pudr" );
	deepEqual( Stem("pudrat"), "pudrat" );
	deepEqual( Stem("pudră"), "pudr" );
	deepEqual( Stem("pudreze"), "pudr" );
	deepEqual( Stem("pueril"), "pueril" );
	deepEqual( Stem("puerilă"), "pueril" );
	deepEqual( Stem("puerile"), "puer" );
	deepEqual( Stem("puerilitatea"), "pueril" );
	deepEqual( Stem("puerilităţii"), "pueril" );
	deepEqual( Stem("puf"), "puf" );
	deepEqual( Stem("pufneşte"), "pufn" );
	deepEqual( Stem("pugilatorii"), "pugil" );
	deepEqual( Stem("puhav"), "puhav" );
	deepEqual( Stem("puhoi"), "puho" );
	deepEqual( Stem("puhoiul"), "puhoi" );
	deepEqual( Stem("pui"), "pui" );
	deepEqual( Stem("puica"), "puic" );
	deepEqual( Stem("puie"), "pui" );
	deepEqual( Stem("puii"), "pui" );
	deepEqual( Stem("puişorul"), "puişor" );
	deepEqual( Stem("puiul"), "pui" );
	deepEqual( Stem("puiule"), "puiul" );
	deepEqual( Stem("pulbere"), "pulb" );
	deepEqual( Stem("pulpei"), "pulpe" );
	deepEqual( Stem("pulpele"), "pulp" );
	deepEqual( Stem("pulsează"), "puls" );
	deepEqual( Stem("pulsul"), "puls" );
	deepEqual( Stem("pulverizează"), "pulveriz" );
	deepEqual( Stem("pumn"), "pumn" );
	deepEqual( Stem("pumni"), "pumn" );
	deepEqual( Stem("pumnii"), "pumn" );
	deepEqual( Stem("pumnul"), "pumn" );
	deepEqual( Stem("pun"), "pun" );
	deepEqual( Stem("punând"), "punând" );
	deepEqual( Stem("punându"), "punându" );
	deepEqual( Stem("pună"), "pun" );
	deepEqual( Stem("punct"), "punct" );
	deepEqual( Stem("punctată"), "punctat" );
	deepEqual( Stem("puncte"), "punct" );
	deepEqual( Stem("punctele"), "punct" );
	deepEqual( Stem("punctelor"), "punct" );
	deepEqual( Stem("punctul"), "punct" );
	deepEqual( Stem("punctului"), "punct" );
	deepEqual( Stem("pune"), "pun" );
	deepEqual( Stem("punea"), "pun" );
	deepEqual( Stem("punem"), "pun" );
	deepEqual( Stem("punere"), "puner" );
	deepEqual( Stem("punerea"), "puner" );
	deepEqual( Stem("puneri"), "puner" );
	deepEqual( Stem("puneţi"), "pun" );
	deepEqual( Stem("pungi"), "pung" );
	deepEqual( Stem("punte"), "punt" );
	deepEqual( Stem("puntea"), "punt" );
	deepEqual( Stem("pur"), "pur" );
	deepEqual( Stem("pură"), "pur" );
	deepEqual( Stem("pure"), "pur" );
	deepEqual( Stem("puri"), "pur" );
	deepEqual( Stem("purificare"), "purific" );
	deepEqual( Stem("purificatoare"), "purific" );
	deepEqual( Stem("purificări"), "purificăr" );
	deepEqual( Stem("purismul"), "purism" );
	deepEqual( Stem("purismului"), "purism" );
	deepEqual( Stem("puritană"), "puritan" );
	deepEqual( Stem("puritanii"), "puritan" );
	deepEqual( Stem("puritanismul"), "puritanist" );
	deepEqual( Stem("puritate"), "puritat" );
	deepEqual( Stem("purităţii"), "purităţ" );
	deepEqual( Stem("puroi"), "puro" );
	deepEqual( Stem("purpură"), "purp" );
	deepEqual( Stem("pursângelui"), "pursângel" );
	deepEqual( Stem("purta"), "purt" );
	deepEqual( Stem("purtam"), "purt" );
	deepEqual( Stem("purtare"), "purt" );
	deepEqual( Stem("purtarea"), "purt" );
	deepEqual( Stem("purtase"), "purt" );
	deepEqual( Stem("purtat"), "purtat" );
	deepEqual( Stem("purtată"), "purtat" );
	deepEqual( Stem("purtaţi"), "purt" );
	deepEqual( Stem("purtau"), "purt" );
	deepEqual( Stem("purtând"), "purt" );
	deepEqual( Stem("purtându"), "purt" );
	deepEqual( Stem("purtăm"), "purt" );
	deepEqual( Stem("purtări"), "purtăr" );
	deepEqual( Stem("purtării"), "purtăr" );
	deepEqual( Stem("purtătoare"), "purtat" );
	deepEqual( Stem("purtător"), "purtat" );
	deepEqual( Stem("purtători"), "purtat" );
	deepEqual( Stem("purtînd"), "purtînd" );
	deepEqual( Stem("purulent"), "purulent" );
	deepEqual( Stem("pururea"), "purur" );
	deepEqual( Stem("pus"), "pus" );
	deepEqual( Stem("pusă"), "pus" );
	deepEqual( Stem("puse"), "pus" );
	deepEqual( Stem("pusese"), "pus" );
	deepEqual( Stem("pusesem"), "puses" );
	deepEqual( Stem("pustii"), "pust" );
	deepEqual( Stem("pustiit"), "pustiit" );
	deepEqual( Stem("pustiu"), "pustiu" );
	deepEqual( Stem("pustiurile"), "pustiur" );
	deepEqual( Stem("puşca"), "puşc" );
	deepEqual( Stem("puşcă"), "puşc" );
	deepEqual( Stem("puşcărie"), "puşcăr" );
	deepEqual( Stem("puşcoace"), "puşcoac" );
	deepEqual( Stem("puşi"), "puş" );
	deepEqual( Stem("putând"), "putând" );
	deepEqual( Stem("putea"), "put" );
	deepEqual( Stem("puteai"), "putea" );
	deepEqual( Stem("puteam"), "puteam" );
	deepEqual( Stem("puteau"), "puteau" );
	deepEqual( Stem("putem"), "put" );
	deepEqual( Stem("putere"), "puter" );
	deepEqual( Stem("puterea"), "puter" );
	deepEqual( Stem("puteri"), "puter" );
	deepEqual( Stem("puterii"), "puter" );
	deepEqual( Stem("puterile"), "puter" );
	deepEqual( Stem("puterilor"), "puter" );
	deepEqual( Stem("puternic"), "putern" );
	deepEqual( Stem("puternică"), "putern" );
	deepEqual( Stem("puternice"), "putern" );
	deepEqual( Stem("puteţi"), "put" );
	deepEqual( Stem("putifar"), "putifar" );
	deepEqual( Stem("putineiul"), "putinei" );
	deepEqual( Stem("putini"), "putin" );
	deepEqual( Stem("putinile"), "putin" );
	deepEqual( Stem("putinţa"), "putinţ" );
	deepEqual( Stem("putinţă"), "putinţ" );
	deepEqual( Stem("putrede"), "putred" );
	deepEqual( Stem("putrezesc"), "putrez" );
	deepEqual( Stem("putu"), "putu" );
	deepEqual( Stem("puturoase"), "putur" );
	deepEqual( Stem("puturoşi"), "putur" );
	deepEqual( Stem("putusem"), "putusem" );
	deepEqual( Stem("putuseră"), "putuser" );
	deepEqual( Stem("putut"), "putut" );
	deepEqual( Stem("puţin"), "puţin" );
	deepEqual( Stem("puţină"), "puţin" );
	deepEqual( Stem("puţinătatea"), "puţinăt" );
	deepEqual( Stem("puţine"), "puţin" );
	deepEqual( Stem("puţinele"), "puţin" );
	deepEqual( Stem("puţini"), "puţin" );
	deepEqual( Stem("puţinii"), "puţin" );
	deepEqual( Stem("puţintel"), "puţintel" );
	deepEqual( Stem("puţuri"), "puţur" );
	deepEqual( Stem("pytagora"), "pytagor" );
	deepEqual( Stem("que"), "que" );
	deepEqual( Stem("quelques"), "quelques" );
	deepEqual( Stem("qui"), "qui" );
	deepEqual( Stem("quotitate"), "quotitat" );
	deepEqual( Stem("quotitatea"), "quotitat" );
	deepEqual( Stem("r"), "r" );
	deepEqual( Stem("rachetă"), "rachet" );
	deepEqual( Stem("rachetele"), "rachet" );
	deepEqual( Stem("radă"), "rad" );
	deepEqual( Stem("radical"), "radic" );
	deepEqual( Stem("radicală"), "radic" );
	deepEqual( Stem("radicale"), "radic" );
	deepEqual( Stem("radioactivă"), "radioact" );
	deepEqual( Stem("radioactive"), "radioact" );
	deepEqual( Stem("radios"), "radios" );
	deepEqual( Stem("radium"), "radium" );
	deepEqual( Stem("rafael"), "rafael" );
	deepEqual( Stem("rafinată"), "rafin" );
	deepEqual( Stem("rahitismul"), "rahitist" );
	deepEqual( Stem("raicu"), "raicu" );
	deepEqual( Stem("raidurile"), "raidur" );
	deepEqual( Stem("raitcort"), "raitcort" );
	deepEqual( Stem("ramificare"), "ramific" );
	deepEqual( Stem("rampă"), "ramp" );
	deepEqual( Stem("ramură"), "ramur" );
	deepEqual( Stem("ramuri"), "ramur" );
	deepEqual( Stem("ramurile"), "ramur" );
	deepEqual( Stem("rana"), "ran" );
	deepEqual( Stem("rană"), "ran" );
	deepEqual( Stem("rang"), "rang" );
	deepEqual( Stem("raniţa"), "raniţ" );
	deepEqual( Stem("raniţă"), "raniţ" );
	deepEqual( Stem("raniţe"), "raniţ" );
	deepEqual( Stem("raniţele"), "raniţ" );
	deepEqual( Stem("rapidă"), "rapid" );
	deepEqual( Stem("rapoarte"), "rapoart" );
	deepEqual( Stem("raport"), "raport" );
	deepEqual( Stem("raporta"), "raport" );
	deepEqual( Stem("raportare"), "raport" );
	deepEqual( Stem("raportarea"), "raport" );
	deepEqual( Stem("raportate"), "raport" );
	deepEqual( Stem("raportă"), "raport" );
	deepEqual( Stem("raportăm"), "raport" );
	deepEqual( Stem("raportează"), "raport" );
	deepEqual( Stem("raportez"), "raport" );
	deepEqual( Stem("raporteze"), "raport" );
	deepEqual( Stem("raportul"), "raport" );
	deepEqual( Stem("raportului"), "raport" );
	deepEqual( Stem("raporturi"), "raportur" );
	deepEqual( Stem("raporturile"), "raportur" );
	deepEqual( Stem("raporturilor"), "raportur" );
	deepEqual( Stem("rar"), "rar" );
	deepEqual( Stem("rară"), "rar" );
	deepEqual( Stem("rare"), "rar" );
	deepEqual( Stem("rareori"), "rareor" );
	deepEqual( Stem("rari"), "rar" );
	deepEqual( Stem("raritate"), "raritat" );
	deepEqual( Stem("ras"), "ras" );
	deepEqual( Stem("rasa"), "ras" );
	deepEqual( Stem("rasă"), "ras" );
	deepEqual( Stem("rathenau"), "rathen" );
	deepEqual( Stem("ratific"), "ratif" );
	deepEqual( Stem("raţiile"), "raţ" );
	deepEqual( Stem("raţional"), "raţional" );
	deepEqual( Stem("raţională"), "raţional" );
	deepEqual( Stem("raţionalism"), "raţionalist" );
	deepEqual( Stem("raţionalismul"), "raţionalist" );
	deepEqual( Stem("raţionalist"), "raţionalist" );
	deepEqual( Stem("raţionalistă"), "raţionalist" );
	deepEqual( Stem("raţionaliştii"), "raţionalist" );
	deepEqual( Stem("raţionalitate"), "raţional" );
	deepEqual( Stem("raţionalitatea"), "raţional" );
	deepEqual( Stem("raţionament"), "raţionament" );
	deepEqual( Stem("raţionamente"), "raţionament" );
	deepEqual( Stem("raţionamentele"), "raţionament" );
	deepEqual( Stem("raţionamentul"), "raţionament" );
	deepEqual( Stem("raţionamentului"), "raţionament" );
	deepEqual( Stem("raţionare"), "raţion" );
	deepEqual( Stem("raţionez"), "raţion" );
	deepEqual( Stem("raţiune"), "raţiun" );
	deepEqual( Stem("raţiunea"), "raţiun" );
	deepEqual( Stem("raţiunei"), "raţiune" );
	deepEqual( Stem("raţiunii"), "raţiun" );
	deepEqual( Stem("rază"), "raz" );
	deepEqual( Stem("raze"), "raz" );
	deepEqual( Stem("razna"), "razn" );
	deepEqual( Stem("râcâie"), "râcâi" );
	deepEqual( Stem("râd"), "râd" );
	deepEqual( Stem("râdă"), "râd" );
	deepEqual( Stem("râde"), "râd" );
	deepEqual( Stem("râdea"), "râd" );
	deepEqual( Stem("râdem"), "râd" );
	deepEqual( Stem("râmat"), "râmat" );
	deepEqual( Stem("râme"), "râm" );
	deepEqual( Stem("râmnicu"), "râmnicu" );
	deepEqual( Stem("rână"), "rân" );
	deepEqual( Stem("rând"), "rând" );
	deepEqual( Stem("rânduit"), "rânduit" );
	deepEqual( Stem("rândul"), "rând" );
	deepEqual( Stem("rândului"), "rând" );
	deepEqual( Stem("rândunele"), "rândun" );
	deepEqual( Stem("rânduri"), "rândur" );
	deepEqual( Stem("rândurile"), "rândur" );
	deepEqual( Stem("rânjeşte"), "rânj" );
	deepEqual( Stem("rânza"), "rânz" );
	deepEqual( Stem("râpa"), "râp" );
	deepEqual( Stem("râpă"), "râp" );
	deepEqual( Stem("râpei"), "râpe" );
	deepEqual( Stem("râpi"), "râp" );
	deepEqual( Stem("râpii"), "râp" );
	deepEqual( Stem("râpoasă"), "râpoas" );
	deepEqual( Stem("râpos"), "râpos" );
	deepEqual( Stem("râs"), "râs" );
	deepEqual( Stem("râsete"), "râset" );
	deepEqual( Stem("râşnov"), "râşnov" );
	deepEqual( Stem("râturi"), "râtur" );
	deepEqual( Stem("râu"), "râu" );
	deepEqual( Stem("râului"), "râul" );
	deepEqual( Stem("râuri"), "râur" );
	deepEqual( Stem("râvna"), "râvn" );
	deepEqual( Stem("râvneşte"), "râvn" );
	deepEqual( Stem("râzând"), "râzând" );
	deepEqual( Stem("râzători"), "râzat" );
	deepEqual( Stem("răbda"), "răbd" );
	deepEqual( Stem("răbdam"), "răbd" );
	deepEqual( Stem("răbdare"), "răbd" );
	deepEqual( Stem("răbdarea"), "răbd" );
	deepEqual( Stem("răbdat"), "răbdat" );
	deepEqual( Stem("răcească"), "răceasc" );
	deepEqual( Stem("răceşte"), "răceşt" );
	deepEqual( Stem("răchită"), "răchit" );
	deepEqual( Stem("răchite"), "răchit" );
	deepEqual( Stem("răchiţi"), "răch" );
	deepEqual( Stem("răcit"), "răcit" );
	deepEqual( Stem("răcnesc"), "răcn" );
	deepEqual( Stem("răcnetul"), "răcnet" );
	deepEqual( Stem("răcnind"), "răcn" );
	deepEqual( Stem("răcnite"), "răcnit" );
	deepEqual( Stem("răcniţi"), "răcn" );
	deepEqual( Stem("răcoare"), "răcoar" );
	deepEqual( Stem("răcoresc"), "răcor" );
	deepEqual( Stem("răcori"), "răcor" );
	deepEqual( Stem("răcoritor"), "răcor" );
	deepEqual( Stem("răcoros"), "răcor" );
	deepEqual( Stem("rădăcina"), "rădăcin" );
	deepEqual( Stem("rădăcini"), "rădăcin" );
	deepEqual( Stem("rădăcinile"), "rădăcin" );
	deepEqual( Stem("rădulescu"), "rădulescu" );
	deepEqual( Stem("răfuială"), "răfuial" );
	deepEqual( Stem("răfuiesc"), "răfui" );
	deepEqual( Stem("răgazuri"), "răgazur" );
	deepEqual( Stem("răi"), "răi" );
	deepEqual( Stem("rămas"), "rămas" );
	deepEqual( Stem("rămasă"), "rămas" );
	deepEqual( Stem("rămase"), "rămas" );
	deepEqual( Stem("rămaşi"), "rămaş" );
	deepEqual( Stem("rămâi"), "rămâ" );
	deepEqual( Stem("rămâie"), "rămâi" );
	deepEqual( Stem("rămân"), "rămân" );
	deepEqual( Stem("rămânând"), "rămân" );
	deepEqual( Stem("rămână"), "rămân" );
	deepEqual( Stem("rămâne"), "rămân" );
	deepEqual( Stem("rămânea"), "rămân" );
	deepEqual( Stem("rămâneam"), "rămân" );
	deepEqual( Stem("rămânem"), "rămân" );
	deepEqual( Stem("rămânere"), "rămân" );
	deepEqual( Stem("rămânerea"), "rămân" );
	deepEqual( Stem("rămâneţi"), "rămân" );
	deepEqual( Stem("rămăsese"), "răm" );
	deepEqual( Stem("rămăsesem"), "răm" );
	deepEqual( Stem("rămăseseră"), "răm" );
	deepEqual( Stem("răneşte"), "răneşt" );
	deepEqual( Stem("răni"), "răn" );
	deepEqual( Stem("rănii"), "răn" );
	deepEqual( Stem("rănile"), "răn" );
	deepEqual( Stem("rănit"), "rănit" );
	deepEqual( Stem("rănită"), "rănit" );
	deepEqual( Stem("răniţi"), "răn" );
	deepEqual( Stem("răniţii"), "răn" );
	deepEqual( Stem("răpăiala"), "răpăial" );
	deepEqual( Stem("răpăială"), "răpăial" );
	deepEqual( Stem("răpăieli"), "răpăiel" );
	deepEqual( Stem("răpăielile"), "răpăiel" );
	deepEqual( Stem("răpăit"), "răpăit" );
	deepEqual( Stem("răpăitura"), "răpăitur" );
	deepEqual( Stem("răposate"), "răpos" );
	deepEqual( Stem("răposatul"), "răpos" );
	deepEqual( Stem("răposaţii"), "răpos" );
	deepEqual( Stem("răpune"), "răpun" );
	deepEqual( Stem("răresc"), "răresc" );
	deepEqual( Stem("răreşte"), "răreşt" );
	deepEqual( Stem("răriseră"), "răriser" );
	deepEqual( Stem("rărit"), "rărit" );
	deepEqual( Stem("rărită"), "rărit" );
	deepEqual( Stem("rărunchi"), "rărunch" );
	deepEqual( Stem("rărunchii"), "rărunch" );
	deepEqual( Stem("răsaduri"), "răsadur" );
	deepEqual( Stem("răsar"), "răsar" );
	deepEqual( Stem("răsăreau"), "răsăr" );
	deepEqual( Stem("răsărise"), "răsăr" );
	deepEqual( Stem("răsărit"), "răsăr" );
	deepEqual( Stem("răsărite"), "răsăr" );
	deepEqual( Stem("răsăritul"), "răsăr" );
	deepEqual( Stem("răscoalelor"), "răscoal" );
	deepEqual( Stem("răscolind"), "răscol" );
	deepEqual( Stem("răscolire"), "răscol" );
	deepEqual( Stem("răscoliri"), "răscolir" );
	deepEqual( Stem("răscolit"), "răscol" );
	deepEqual( Stem("răscolitor"), "răscol" );
	deepEqual( Stem("răsculaţii"), "răscul" );
	deepEqual( Stem("răsfăţa"), "răsfăţ" );
	deepEqual( Stem("răsfăţatul"), "răsfăţ" );
	deepEqual( Stem("răsfrânge"), "răsfrâng" );
	deepEqual( Stem("răsfrângere"), "răsfrâng" );
	deepEqual( Stem("răsfrângerea"), "răsfrâng" );
	deepEqual( Stem("răsfrânt"), "răsfrânt" );
	deepEqual( Stem("răsfrântă"), "răsfrânt" );
	deepEqual( Stem("răsfrânte"), "răsfrânt" );
	deepEqual( Stem("răspândirea"), "răspând" );
	deepEqual( Stem("răspândit"), "răspând" );
	deepEqual( Stem("răspândită"), "răspând" );
	deepEqual( Stem("răspândiţi"), "răspând" );
	deepEqual( Stem("răspântia"), "răspânt" );
	deepEqual( Stem("răspântie"), "răspânt" );
	deepEqual( Stem("răspicat"), "răspic" );
	deepEqual( Stem("răspică"), "răspic" );
	deepEqual( Stem("răsplătit"), "răsplăt" );
	deepEqual( Stem("răspund"), "răspund" );
	deepEqual( Stem("răspundă"), "răspund" );
	deepEqual( Stem("răspunde"), "răspund" );
	deepEqual( Stem("răspundea"), "răspund" );
	deepEqual( Stem("răspundeau"), "răspund" );
	deepEqual( Stem("răspundem"), "răspund" );
	deepEqual( Stem("răspundere"), "răspund" );
	deepEqual( Stem("răspunderea"), "răspund" );
	deepEqual( Stem("răspunderii"), "răspunder" );
	deepEqual( Stem("răspundeţi"), "răspund" );
	deepEqual( Stem("răspuns"), "răspuns" );
	deepEqual( Stem("răspunse"), "răspun" );
	deepEqual( Stem("răspunsese"), "răspun" );
	deepEqual( Stem("răspunsul"), "răspuns" );
	deepEqual( Stem("răspunsului"), "răspuns" );
	deepEqual( Stem("răspunsuri"), "răspunsur" );
	deepEqual( Stem("răspunsurile"), "răspunsur" );
	deepEqual( Stem("răspunzător"), "răspunz" );
	deepEqual( Stem("răspunzi"), "răspunz" );
	deepEqual( Stem("răstimpuri"), "răstimpur" );
	deepEqual( Stem("răstit"), "răstit" );
	deepEqual( Stem("răstoarnă"), "răstoarn" );
	deepEqual( Stem("răstoarne"), "răstoarn" );
	deepEqual( Stem("răsturna"), "răsturn" );
	deepEqual( Stem("răsturnare"), "răsturn" );
	deepEqual( Stem("răsturnat"), "răsturn" );
	deepEqual( Stem("răsturnată"), "răsturn" );
	deepEqual( Stem("răsturnate"), "răsturn" );
	deepEqual( Stem("răsturnaţi"), "răsturn" );
	deepEqual( Stem("răsturnările"), "răsturnăr" );
	deepEqual( Stem("răsucea"), "răsuc" );
	deepEqual( Stem("răsucească"), "răsuc" );
	deepEqual( Stem("răsucesc"), "răsuc" );
	deepEqual( Stem("răsuciri"), "răsucir" );
	deepEqual( Stem("răsucit"), "răsuc" );
	deepEqual( Stem("răsucită"), "răsuc" );
	deepEqual( Stem("răsucite"), "răsuc" );
	deepEqual( Stem("răsuflarea"), "răsufl" );
	deepEqual( Stem("răsuflate"), "răsufl" );
	deepEqual( Stem("răsuflând"), "răsufl" );
	deepEqual( Stem("răsuflă"), "răsufl" );
	deepEqual( Stem("răsuflăm"), "răsufl" );
	deepEqual( Stem("răsuflet"), "răsuflet" );
	deepEqual( Stem("răsuflu"), "răsuflu" );
	deepEqual( Stem("răsunat"), "răsun" );
	deepEqual( Stem("răsună"), "răsun" );
	deepEqual( Stem("răsunătoare"), "răsun" );
	deepEqual( Stem("răşina"), "răşin" );
	deepEqual( Stem("rătăcească"), "rătăc" );
	deepEqual( Stem("rătăcirii"), "rătăcir" );
	deepEqual( Stem("rătăcise"), "rătăc" );
	deepEqual( Stem("rătăcit"), "rătăc" );
	deepEqual( Stem("rătăciţi"), "rătăc" );
	deepEqual( Stem("rău"), "rău" );
	deepEqual( Stem("răul"), "răul" );
	deepEqual( Stem("răutate"), "răutat" );
	deepEqual( Stem("răvăşită"), "răvăş" );
	deepEqual( Stem("răzbată"), "răzbat" );
	deepEqual( Stem("răzbătea"), "răzbăt" );
	deepEqual( Stem("răzbească"), "răzb" );
	deepEqual( Stem("răzbi"), "răzb" );
	deepEqual( Stem("răzbind"), "răzb" );
	deepEqual( Stem("războaie"), "războai" );
	deepEqual( Stem("războaiele"), "războai" );
	deepEqual( Stem("războaielor"), "războai" );
	deepEqual( Stem("război"), "războ" );
	deepEqual( Stem("războinică"), "războin" );
	deepEqual( Stem("războinice"), "războin" );
	deepEqual( Stem("războinicilor"), "războin" );
	deepEqual( Stem("războinicului"), "războin" );
	deepEqual( Stem("războiul"), "război" );
	deepEqual( Stem("războiului"), "război" );
	deepEqual( Stem("răzbunare"), "răzbun" );
	deepEqual( Stem("răzbună"), "răzbun" );
	deepEqual( Stem("răzbunării"), "răzbunăr" );
	deepEqual( Stem("răzgândeşte"), "răzgând" );
	deepEqual( Stem("răzvrătind"), "răzvrăt" );
	deepEqual( Stem("răzvrătirea"), "răzvrăt" );
	deepEqual( Stem("răzvrătiţi"), "răzvrăt" );
	deepEqual( Stem("re"), "re" );
	deepEqual( Stem("rea"), "rea" );
	deepEqual( Stem("reabilitând"), "reabilit" );
	deepEqual( Stem("reacţiona"), "reacţion" );
	deepEqual( Stem("reacţionară"), "reacţion" );
	deepEqual( Stem("reacţionare"), "reacţion" );
	deepEqual( Stem("reacţionari"), "reacţionar" );
	deepEqual( Stem("reacţiune"), "reacţiun" );
	deepEqual( Stem("reacţiuni"), "reacţiun" );
	deepEqual( Stem("reacţiunii"), "reacţiun" );
	deepEqual( Stem("readuc"), "readuc" );
	deepEqual( Stem("readucă"), "readuc" );
	deepEqual( Stem("readuce"), "readuc" );
	deepEqual( Stem("readus"), "readus" );
	deepEqual( Stem("real"), "real" );
	deepEqual( Stem("reală"), "real" );
	deepEqual( Stem("reale"), "real" );
	deepEqual( Stem("realist"), "realist" );
	deepEqual( Stem("realistă"), "realist" );
	deepEqual( Stem("realitate"), "realitat" );
	deepEqual( Stem("realitatea"), "realitat" );
	deepEqual( Stem("realităţi"), "realităţ" );
	deepEqual( Stem("realităţii"), "realităţ" );
	deepEqual( Stem("realităţile"), "realităţ" );
	deepEqual( Stem("realităţilor"), "realităţ" );
	deepEqual( Stem("realiter"), "realiter" );
	deepEqual( Stem("realiza"), "realiz" );
	deepEqual( Stem("realizabile"), "realiz" );
	deepEqual( Stem("realizam"), "realiz" );
	deepEqual( Stem("realizare"), "realiz" );
	deepEqual( Stem("realizarea"), "realiz" );
	deepEqual( Stem("realizase"), "realiz" );
	deepEqual( Stem("realizaseră"), "realiz" );
	deepEqual( Stem("realizat"), "realiz" );
	deepEqual( Stem("realizată"), "realiz" );
	deepEqual( Stem("realizate"), "realiz" );
	deepEqual( Stem("realizatoare"), "realiz" );
	deepEqual( Stem("realizatoarei"), "realizatoare" );
	deepEqual( Stem("realizator"), "realiz" );
	deepEqual( Stem("realizatori"), "realiz" );
	deepEqual( Stem("realizaţi"), "realiz" );
	deepEqual( Stem("realizări"), "realizăr" );
	deepEqual( Stem("realizării"), "realizăr" );
	deepEqual( Stem("realizările"), "realizăr" );
	deepEqual( Stem("realizează"), "realiz" );
	deepEqual( Stem("realizez"), "realiz" );
	deepEqual( Stem("realizeze"), "realiz" );
	deepEqual( Stem("realizînd"), "realizînd" );
	deepEqual( Stem("realmente"), "realment" );
	deepEqual( Stem("realocare"), "realoc" );
	deepEqual( Stem("realulers"), "realulers" );
	deepEqual( Stem("reaminti"), "reamint" );
	deepEqual( Stem("reamintită"), "reamint" );
	deepEqual( Stem("reanimarea"), "reanim" );
	deepEqual( Stem("reapăreau"), "reapăr" );
	deepEqual( Stem("reapărut"), "reapăr" );
	deepEqual( Stem("rearanja"), "rearanj" );
	deepEqual( Stem("rearanjăm"), "rearanj" );
	deepEqual( Stem("reasamblările"), "reasamblăr" );
	deepEqual( Stem("reasamblînd"), "reasamblînd" );
	deepEqual( Stem("reaua"), "reau" );
	deepEqual( Stem("reazem"), "reaz" );
	deepEqual( Stem("reba"), "reb" );
	deepEqual( Stem("rebarbativ"), "rebarb" );
	deepEqual( Stem("rebătut"), "rebăt" );
	deepEqual( Stem("rebegiţi"), "rebeg" );
	deepEqual( Stem("rebours"), "rebours" );
	deepEqual( Stem("rece"), "rec" );
	deepEqual( Stem("recent"), "recent" );
	deepEqual( Stem("recente"), "recent" );
	deepEqual( Stem("recenzentul"), "recenzent" );
	deepEqual( Stem("recenzeze"), "recenz" );
	deepEqual( Stem("recenzie"), "recenz" );
	deepEqual( Stem("recenzii"), "recenz" );
	deepEqual( Stem("recepta"), "recept" );
	deepEqual( Stem("receptare"), "recept" );
	deepEqual( Stem("receptat"), "recept" );
	deepEqual( Stem("receptată"), "recept" );
	deepEqual( Stem("receptaţi"), "recept" );
	deepEqual( Stem("receptăm"), "recept" );
	deepEqual( Stem("receptării"), "receptăr" );
	deepEqual( Stem("receptează"), "recept" );
	deepEqual( Stem("recepteze"), "recept" );
	deepEqual( Stem("receptivă"), "recept" );
	deepEqual( Stem("receptivi"), "recept" );
	deepEqual( Stem("receptor"), "receptor" );
	deepEqual( Stem("receptori"), "receptor" );
	deepEqual( Stem("receptorul"), "receptor" );
	deepEqual( Stem("recepţia"), "recepţ" );
	deepEqual( Stem("recepţie"), "recepţ" );
	deepEqual( Stem("recepţii"), "recepţ" );
	deepEqual( Stem("recepţiona"), "recepţion" );
	deepEqual( Stem("recepţionarea"), "recepţion" );
	deepEqual( Stem("recepţionat"), "recepţion" );
	deepEqual( Stem("recepţionată"), "recepţion" );
	deepEqual( Stem("recepţionează"), "recepţion" );
	deepEqual( Stem("recepţioneze"), "recepţion" );
	deepEqual( Stem("rechini"), "rechin" );
	deepEqual( Stem("rechizit"), "rechiz" );
	deepEqual( Stem("rechizitoriu"), "rechizitoriu" );
	deepEqual( Stem("rechiziţie"), "rechiziţ" );
	deepEqual( Stem("rechiziţionate"), "rechiziţion" );
	deepEqual( Stem("rechiziţionând"), "rechiziţion" );
	deepEqual( Stem("reci"), "rec" );
	deepEqual( Stem("reciclat"), "recicl" );
	deepEqual( Stem("reciclaţi"), "recicl" );
	deepEqual( Stem("recipient"), "recipient" );
	deepEqual( Stem("recipienţi"), "recipienţ" );
	deepEqual( Stem("reciproc"), "reciproc" );
	deepEqual( Stem("reciprocă"), "reciproc" );
	deepEqual( Stem("reciproce"), "reciproc" );
	deepEqual( Stem("reciprocitate"), "reciproc" );
	deepEqual( Stem("reciprocitatea"), "reciproc" );
	deepEqual( Stem("recital"), "recital" );
	deepEqual( Stem("recitară"), "recit" );
	deepEqual( Stem("recite"), "recit" );
	deepEqual( Stem("recitesc"), "recit" );
	deepEqual( Stem("reciteşte"), "recit" );
	deepEqual( Stem("reciteşti"), "recit" );
	deepEqual( Stem("recitit"), "recit" );
	deepEqual( Stem("recitînd"), "recitînd" );
	deepEqual( Stem("reclama"), "reclam" );
	deepEqual( Stem("reclamaţie"), "reclam" );
	deepEqual( Stem("reclamaţii"), "reclam" );
	deepEqual( Stem("reclamă"), "reclam" );
	deepEqual( Stem("reclame"), "reclam" );
	deepEqual( Stem("reclamînd"), "reclamînd" );
	deepEqual( Stem("reclădească"), "reclăd" );
	deepEqual( Stem("reclădite"), "reclăd" );
	deepEqual( Stem("recluziunea"), "recluziun" );
	deepEqual( Stem("recognoscibilă"), "recognosc" );
	deepEqual( Stem("recolta"), "recolt" );
	deepEqual( Stem("recoltat"), "recolt" );
	deepEqual( Stem("recoltaţi"), "recolt" );
	deepEqual( Stem("recoltau"), "recolt" );
	deepEqual( Stem("recoltă"), "recolt" );
	deepEqual( Stem("recolte"), "recolt" );
	deepEqual( Stem("recomandabil"), "recomand" );
	deepEqual( Stem("recomandabilă"), "recomand" );
	deepEqual( Stem("recomandare"), "recomand" );
	deepEqual( Stem("recomandat"), "recomand" );
	deepEqual( Stem("recomandă"), "recomand" );
	deepEqual( Stem("recomandăm"), "recomand" );
	deepEqual( Stem("recomandări"), "recomandăr" );
	deepEqual( Stem("reconfortant"), "reconfort" );
	deepEqual( Stem("reconfortantă"), "reconfort" );
	deepEqual( Stem("reconstitui"), "reconstit" );
	deepEqual( Stem("reconstituim"), "reconstitu" );
	deepEqual( Stem("reconstituiţi"), "reconstitu" );
	deepEqual( Stem("reconstrui"), "reconstr" );
	deepEqual( Stem("reconstruiesc"), "reconstrui" );
	deepEqual( Stem("reconstruieşti"), "reconstrui" );
	deepEqual( Stem("reconstruim"), "reconstru" );
	deepEqual( Stem("reconstruirea"), "reconstru" );
	deepEqual( Stem("rectangulaţie"), "rectangul" );
	deepEqual( Stem("recucerit"), "recucer" );
	deepEqual( Stem("recunoască"), "recunoasc" );
	deepEqual( Stem("recunoaşte"), "recunoaşt" );
	deepEqual( Stem("recunoaştem"), "recunoaşt" );
	deepEqual( Stem("recunoaştere"), "recunoaşt" );
	deepEqual( Stem("recunoaşterea"), "recunoaşt" );
	deepEqual( Stem("recunoaşterilor"), "recunoaşter" );
	deepEqual( Stem("recunosc"), "recunosc" );
	deepEqual( Stem("recunoscător"), "recunosc" );
	deepEqual( Stem("recunoscut"), "recunosc" );
	deepEqual( Stem("recunoscute"), "recunosc" );
	deepEqual( Stem("recunoşteam"), "recunoşt" );
	deepEqual( Stem("recunoşti"), "recunoşt" );
	deepEqual( Stem("recunoştinţă"), "recunoştinţ" );
	deepEqual( Stem("recurgă"), "recurg" );
	deepEqual( Stem("recurge"), "recurg" );
	deepEqual( Stem("redactat"), "redact" );
	deepEqual( Stem("redactor"), "redactor" );
	deepEqual( Stem("redau"), "redau" );
	deepEqual( Stem("redea"), "red" );
	deepEqual( Stem("redelea"), "redel" );
	deepEqual( Stem("redeşteaptă"), "redeşteapt" );
	deepEqual( Stem("redevenit"), "redeven" );
	deepEqual( Stem("reducă"), "reduc" );
	deepEqual( Stem("reduce"), "reduc" );
	deepEqual( Stem("reducem"), "reduc" );
	deepEqual( Stem("reducere"), "reduc" );
	deepEqual( Stem("reduceri"), "reducer" );
	deepEqual( Stem("reducţiune"), "reduct" );
	deepEqual( Stem("reducţiunea"), "reduct" );
	deepEqual( Stem("redus"), "redus" );
	deepEqual( Stem("redusă"), "redus" );
	deepEqual( Stem("reduse"), "redus" );
	deepEqual( Stem("reduşi"), "reduş" );
	deepEqual( Stem("reedita"), "reedit" );
	deepEqual( Stem("reeditat"), "reedit" );
	deepEqual( Stem("refac"), "refac" );
	deepEqual( Stem("refacă"), "refac" );
	deepEqual( Stem("reface"), "refac" );
	deepEqual( Stem("refăcea"), "refăc" );
	deepEqual( Stem("refăceau"), "refăc" );
	deepEqual( Stem("refăcută"), "refăc" );
	deepEqual( Stem("refăcute"), "refăc" );
	deepEqual( Stem("referat"), "refer" );
	deepEqual( Stem("referă"), "refer" );
	deepEqual( Stem("reflectează"), "reflect" );
	deepEqual( Stem("reflecteze"), "reflect" );
	deepEqual( Stem("reflecţia"), "reflecţ" );
	deepEqual( Stem("reflecţie"), "reflecţ" );
	deepEqual( Stem("reflecţiei"), "reflecţ" );
	deepEqual( Stem("reflecţiune"), "reflect" );
	deepEqual( Stem("reflex"), "reflex" );
	deepEqual( Stem("reflexe"), "reflex" );
	deepEqual( Stem("reflexivă"), "reflex" );
	deepEqual( Stem("reflexul"), "reflex" );
	deepEqual( Stem("refugiu"), "refugiu" );
	deepEqual( Stem("refulate"), "reful" );
	deepEqual( Stem("refuza"), "refuz" );
	deepEqual( Stem("refuzasem"), "refuz" );
	deepEqual( Stem("refuzat"), "refuz" );
	deepEqual( Stem("refuzate"), "refuz" );
	deepEqual( Stem("refuzând"), "refuz" );
	deepEqual( Stem("refuză"), "refuz" );
	deepEqual( Stem("refuzăm"), "refuz" );
	deepEqual( Stem("refuze"), "refuz" );
	deepEqual( Stem("refuzi"), "refuz" );
	deepEqual( Stem("refuzul"), "refuz" );
	deepEqual( Stem("regat"), "regat" );
	deepEqual( Stem("regăsesc"), "regăs" );
	deepEqual( Stem("regăseşte"), "regăs" );
	deepEqual( Stem("regăsirăm"), "regăs" );
	deepEqual( Stem("regăsiri"), "regăsir" );
	deepEqual( Stem("regăsise"), "regăs" );
	deepEqual( Stem("rege"), "reg" );
	deepEqual( Stem("regele"), "reg" );
	deepEqual( Stem("regelui"), "regel" );
	deepEqual( Stem("regenerării"), "regenerăr" );
	deepEqual( Stem("regim"), "reg" );
	deepEqual( Stem("regiment"), "regiment" );
	deepEqual( Stem("regimentare"), "regiment" );
	deepEqual( Stem("regimente"), "regiment" );
	deepEqual( Stem("regimentele"), "regiment" );
	deepEqual( Stem("regimentelor"), "regiment" );
	deepEqual( Stem("regimentul"), "regiment" );
	deepEqual( Stem("regimentului"), "regiment" );
	deepEqual( Stem("regina"), "regin" );
	deepEqual( Stem("reginei"), "regine" );
	deepEqual( Stem("registre"), "registr" );
	deepEqual( Stem("regitur"), "regitur" );
	deepEqual( Stem("regiunea"), "regiun" );
	deepEqual( Stem("regizor"), "regizor" );
	deepEqual( Stem("reglementar"), "reglementar" );
	deepEqual( Stem("reglementare"), "reglement" );
	deepEqual( Stem("regnier"), "regnier" );
	deepEqual( Stem("regnurilor"), "regnur" );
	deepEqual( Stem("regresiune"), "regresiun" );
	deepEqual( Stem("regret"), "regret" );
	deepEqual( Stem("regretabil"), "regret" );
	deepEqual( Stem("regretat"), "regret" );
	deepEqual( Stem("regretă"), "regret" );
	deepEqual( Stem("regretăm"), "regret" );
	deepEqual( Stem("regretul"), "regret" );
	deepEqual( Stem("regrupări"), "regrupăr" );
	deepEqual( Stem("regula"), "regul" );
	deepEqual( Stem("regulament"), "regulament" );
	deepEqual( Stem("regulamentele"), "regulament" );
	deepEqual( Stem("regulamentelor"), "regulament" );
	deepEqual( Stem("regulamentul"), "regulament" );
	deepEqual( Stem("regularea"), "regul" );
	deepEqual( Stem("regularitate"), "regular" );
	deepEqual( Stem("regularitatea"), "regular" );
	deepEqual( Stem("regularităţi"), "regular" );
	deepEqual( Stem("regularităţii"), "regular" );
	deepEqual( Stem("regularităţile"), "regular" );
	deepEqual( Stem("regulat"), "regul" );
	deepEqual( Stem("regulată"), "regul" );
	deepEqual( Stem("regulate"), "regul" );
	deepEqual( Stem("regulativ"), "regul" );
	deepEqual( Stem("regulativă"), "regul" );
	deepEqual( Stem("regulative"), "regul" );
	deepEqual( Stem("regulaţi"), "regul" );
	deepEqual( Stem("regulă"), "regul" );
	deepEqual( Stem("regulele"), "regul" );
	deepEqual( Stem("reguli"), "regul" );
	deepEqual( Stem("regulile"), "regul" );
	deepEqual( Stem("reia"), "rei" );
	deepEqual( Stem("reiau"), "reiau" );
	deepEqual( Stem("reid"), "reid" );
	deepEqual( Stem("reiei"), "reie" );
	deepEqual( Stem("reieşea"), "reieş" );
	deepEqual( Stem("reintegrată"), "reintegr" );
	deepEqual( Stem("reîncep"), "reîncep" );
	deepEqual( Stem("reîncepe"), "reîncep" );
	deepEqual( Stem("reîncepea"), "reîncep" );
	deepEqual( Stem("reînfiinţeze"), "reînfiinţ" );
	deepEqual( Stem("reînvia"), "reînv" );
	deepEqual( Stem("reînviere"), "reînvier" );
	deepEqual( Stem("reînvierea"), "reînvier" );
	deepEqual( Stem("reînvieri"), "reînvier" );
	deepEqual( Stem("relansam"), "relans" );
	deepEqual( Stem("relatau"), "relat" );
	deepEqual( Stem("relativ"), "relat" );
	deepEqual( Stem("relativă"), "relat" );
	deepEqual( Stem("relative"), "relat" );
	deepEqual( Stem("relativităţii"), "relat" );
	deepEqual( Stem("relativizată"), "relativiz" );
	deepEqual( Stem("relaţii"), "rel" );
	deepEqual( Stem("relaţiile"), "rel" );
	deepEqual( Stem("relaţiunea"), "relat" );
	deepEqual( Stem("relaţiunile"), "relat" );
	deepEqual( Stem("relaxau"), "relax" );
	deepEqual( Stem("relaxez"), "relax" );
	deepEqual( Stem("rele"), "rel" );
	deepEqual( Stem("relee"), "rele" );
	deepEqual( Stem("releg"), "releg" );
	deepEqual( Stem("relelor"), "rel" );
	deepEqual( Stem("relev"), "relev" );
	deepEqual( Stem("releva"), "relev" );
	deepEqual( Stem("relevabile"), "relev" );
	deepEqual( Stem("relevant"), "relev" );
	deepEqual( Stem("relevantă"), "relev" );
	deepEqual( Stem("relevanters"), "relevanters" );
	deepEqual( Stem("relevanţa"), "relevanţ" );
	deepEqual( Stem("relevanţă"), "relevanţ" );
	deepEqual( Stem("relevarea"), "relev" );
	deepEqual( Stem("relevat"), "relev" );
	deepEqual( Stem("relevăm"), "relev" );
	deepEqual( Stem("releveze"), "relev" );
	deepEqual( Stem("relevînd"), "relevînd" );
	deepEqual( Stem("relicvă"), "relicv" );
	deepEqual( Stem("relicve"), "relicv" );
	deepEqual( Stem("relief"), "relief" );
	deepEqual( Stem("reliefat"), "relief" );
	deepEqual( Stem("reliefate"), "relief" );
	deepEqual( Stem("reliefau"), "relief" );
	deepEqual( Stem("religia"), "relig" );
	deepEqual( Stem("religie"), "relig" );
	deepEqual( Stem("religiilor"), "relig" );
	deepEqual( Stem("religioasă"), "relig" );
	deepEqual( Stem("religioase"), "relig" );
	deepEqual( Stem("religios"), "relig" );
	deepEqual( Stem("religioşi"), "relig" );
	deepEqual( Stem("religious"), "religious" );
	deepEqual( Stem("religiozitatea"), "religioz" );
	deepEqual( Stem("relinia"), "relin" );
	deepEqual( Stem("relua"), "relu" );
	deepEqual( Stem("reluam"), "relu" );
	deepEqual( Stem("reluasem"), "relu" );
	deepEqual( Stem("reluat"), "reluat" );
	deepEqual( Stem("reluată"), "reluat" );
	deepEqual( Stem("reluând"), "relu" );
	deepEqual( Stem("reluăm"), "relu" );
	deepEqual( Stem("remanieri"), "remanier" );
	deepEqual( Stem("remarcabilă"), "remarc" );
	deepEqual( Stem("remarcabile"), "remarc" );
	deepEqual( Stem("remarcându"), "remarc" );
	deepEqual( Stem("remarcă"), "remarc" );
	deepEqual( Stem("rembrandt"), "rembrandt" );
	deepEqual( Stem("remorcher"), "remorcher" );
	deepEqual( Stem("remorţi"), "remorţ" );
	deepEqual( Stem("remuşcare"), "remuşc" );
	deepEqual( Stem("remuşcării"), "remuşcăr" );
	deepEqual( Stem("remuşcările"), "remuşcăr" );
	deepEqual( Stem("renală"), "renal" );
	deepEqual( Stem("renană"), "renan" );
	deepEqual( Stem("renascentismului"), "renascentist" );
	deepEqual( Stem("renascentistă"), "renascentist" );
	deepEqual( Stem("renaştere"), "renaşt" );
	deepEqual( Stem("renaşterii"), "renaşter" );
	deepEqual( Stem("rendez"), "rend" );
	deepEqual( Stem("renegat"), "reneg" );
	deepEqual( Stem("renevoie"), "renevoi" );
	deepEqual( Stem("renormal"), "renormal" );
	deepEqual( Stem("renouvier"), "renouvier" );
	deepEqual( Stem("renova"), "renov" );
	deepEqual( Stem("renovată"), "renov" );
	deepEqual( Stem("renovatorul"), "renov" );
	deepEqual( Stem("renscentistă"), "renscentist" );
	deepEqual( Stem("rentabil"), "rentabil" );
	deepEqual( Stem("rentabilă"), "rentabil" );
	deepEqual( Stem("rentabilitatea"), "rentabil" );
	deepEqual( Stem("rentabilizate"), "rentabiliz" );
	deepEqual( Stem("rentabilizării"), "rentabilizăr" );
	deepEqual( Stem("rentă"), "rent" );
	deepEqual( Stem("rente"), "rent" );
	deepEqual( Stem("rentează"), "rent" );
	deepEqual( Stem("rentele"), "rent" );
	deepEqual( Stem("rentieri"), "rentier" );
	deepEqual( Stem("rentierii"), "rentier" );
	deepEqual( Stem("rentierilor"), "rentier" );
	deepEqual( Stem("rentierul"), "rentier" );
	deepEqual( Stem("rentierului"), "rentier" );
	deepEqual( Stem("renul"), "ren" );
	deepEqual( Stem("renume"), "renum" );
	deepEqual( Stem("renumit"), "renum" );
	deepEqual( Stem("renumită"), "renum" );
	deepEqual( Stem("renumitor"), "renum" );
	deepEqual( Stem("renumiţi"), "renum" );
	deepEqual( Stem("renunţ"), "renunţ" );
	deepEqual( Stem("renunţa"), "renunţ" );
	deepEqual( Stem("renunţare"), "renunţ" );
	deepEqual( Stem("renunţat"), "renunţ" );
	deepEqual( Stem("renunţând"), "renunţ" );
	deepEqual( Stem("renunţă"), "renunţ" );
	deepEqual( Stem("renunţăm"), "renunţ" );
	deepEqual( Stem("renunţe"), "renunţ" );
	deepEqual( Stem("repaos"), "repaos" );
	deepEqual( Stem("repaosul"), "repaos" );
	deepEqual( Stem("repaosurilor"), "repaosur" );
	deepEqual( Stem("reparată"), "repar" );
	deepEqual( Stem("repară"), "repar" );
	deepEqual( Stem("repare"), "repar" );
	deepEqual( Stem("repeadă"), "repead" );
	deepEqual( Stem("reped"), "reped" );
	deepEqual( Stem("repede"), "reped" );
	deepEqual( Stem("reper"), "reper" );
	deepEqual( Stem("repera"), "reper" );
	deepEqual( Stem("reperarea"), "reper" );
	deepEqual( Stem("repercusiuni"), "repercusiun" );
	deepEqual( Stem("repere"), "reper" );
	deepEqual( Stem("reperează"), "reper" );
	deepEqual( Stem("repereze"), "reper" );
	deepEqual( Stem("repertoriu"), "repertoriu" );
	deepEqual( Stem("repet"), "repet" );
	deepEqual( Stem("repeta"), "repet" );
	deepEqual( Stem("repetam"), "repet" );
	deepEqual( Stem("repetarea"), "repet" );
	deepEqual( Stem("repetat"), "repet" );
	deepEqual( Stem("repetată"), "repet" );
	deepEqual( Stem("repetate"), "repet" );
	deepEqual( Stem("repetă"), "repet" );
	deepEqual( Stem("repetăm"), "repet" );
	deepEqual( Stem("repetări"), "repetăr" );
	deepEqual( Stem("repete"), "repet" );
	deepEqual( Stem("repetent"), "repetent" );
	deepEqual( Stem("repetenţi"), "repetenţ" );
	deepEqual( Stem("repetitiv"), "repet" );
	deepEqual( Stem("repetitivă"), "repet" );
	deepEqual( Stem("repetivitatea"), "repet" );
	deepEqual( Stem("repetînd"), "repetînd" );
	deepEqual( Stem("repeţi"), "rep" );
	deepEqual( Stem("repezeală"), "repezeal" );
	deepEqual( Stem("repezi"), "repez" );
	deepEqual( Stem("repezim"), "repez" );
	deepEqual( Stem("repezindu"), "repez" );
	deepEqual( Stem("repezirea"), "repez" );
	deepEqual( Stem("repezit"), "repez" );
	deepEqual( Stem("repezite"), "repez" );
	deepEqual( Stem("replantări"), "replantăr" );
	deepEqual( Stem("repleca"), "replec" );
	deepEqual( Stem("replica"), "replic" );
	deepEqual( Stem("replicarea"), "replic" );
	deepEqual( Stem("replicat"), "replic" );
	deepEqual( Stem("replică"), "replic" );
	deepEqual( Stem("replicelor"), "replic" );
	deepEqual( Stem("replicile"), "replic" );
	deepEqual( Stem("reportajul"), "reportaj" );
	deepEqual( Stem("represalii"), "represal" );
	deepEqual( Stem("represiunea"), "represiun" );
	deepEqual( Stem("represiunile"), "represiun" );
	deepEqual( Stem("reprezenta"), "reprezent" );
	deepEqual( Stem("reprezentantul"), "reprezent" );
	deepEqual( Stem("reprezentantului"), "reprezent" );
	deepEqual( Stem("reprezentanţii"), "reprezentanţ" );
	deepEqual( Stem("reprezentare"), "reprezent" );
	deepEqual( Stem("reprezentarea"), "reprezent" );
	deepEqual( Stem("reprezentat"), "reprezent" );
	deepEqual( Stem("reprezentată"), "reprezent" );
	deepEqual( Stem("reprezentate"), "reprezent" );
	deepEqual( Stem("reprezentativ"), "reprezent" );
	deepEqual( Stem("reprezentativă"), "reprezent" );
	deepEqual( Stem("reprezentativi"), "reprezent" );
	deepEqual( Stem("reprezentativitate"), "reprezent" );
	deepEqual( Stem("reprezentaţie"), "reprezent" );
	deepEqual( Stem("reprezentând"), "reprezent" );
	deepEqual( Stem("reprezentări"), "reprezentăr" );
	deepEqual( Stem("reprezentării"), "reprezentăr" );
	deepEqual( Stem("reprezentările"), "reprezentăr" );
	deepEqual( Stem("reprezentărilor"), "reprezentăr" );
	deepEqual( Stem("reprezint"), "reprezint" );
	deepEqual( Stem("reprezintă"), "reprezint" );
	deepEqual( Stem("reprezinte"), "reprezint" );
	deepEqual( Stem("reprimarea"), "reprim" );
	deepEqual( Stem("reprimate"), "reprim" );
	deepEqual( Stem("reprimăm"), "reprim" );
	deepEqual( Stem("reprime"), "reprim" );
	deepEqual( Stem("reprimea"), "reprim" );
	deepEqual( Stem("reprize"), "repriz" );
	deepEqual( Stem("reprizei"), "reprize" );
	deepEqual( Stem("reprobabilă"), "reprob" );
	deepEqual( Stem("reprobarea"), "reprob" );
	deepEqual( Stem("reproduc"), "reproduc" );
	deepEqual( Stem("reproduce"), "reproduc" );
	deepEqual( Stem("reproducem"), "reproduc" );
	deepEqual( Stem("reproducere"), "reproduc" );
	deepEqual( Stem("reproducerea"), "reproduc" );
	deepEqual( Stem("reproduceri"), "reproducer" );
	deepEqual( Stem("reproducerii"), "reproducer" );
	deepEqual( Stem("reproducerile"), "reproducer" );
	deepEqual( Stem("reproducţie"), "reproducţ" );
	deepEqual( Stem("reprodus"), "reprodus" );
	deepEqual( Stem("reprogramat"), "reprogram" );
	deepEqual( Stem("reproş"), "reproş" );
	deepEqual( Stem("reproşa"), "reproş" );
	deepEqual( Stem("reproşam"), "reproş" );
	deepEqual( Stem("reproşat"), "reproş" );
	deepEqual( Stem("reproşează"), "reproş" );
	deepEqual( Stem("reproşez"), "reproş" );
	deepEqual( Stem("reproşuri"), "reproşur" );
	deepEqual( Stem("republica"), "republ" );
	deepEqual( Stem("republican"), "republican" );
	deepEqual( Stem("republicană"), "republican" );
	deepEqual( Stem("republică"), "republ" );
	deepEqual( Stem("republicii"), "republ" );
	deepEqual( Stem("repugna"), "repugn" );
	deepEqual( Stem("reputat"), "reput" );
	deepEqual( Stem("reputate"), "reput" );
	deepEqual( Stem("reputaţi"), "reput" );
	deepEqual( Stem("reputaţia"), "reput" );
	deepEqual( Stem("reputaţie"), "reput" );
	deepEqual( Stem("resemnare"), "resemn" );
	deepEqual( Stem("resemnat"), "resemn" );
	deepEqual( Stem("resemnate"), "resemn" );
	deepEqual( Stem("resentiment"), "resentiment" );
	deepEqual( Stem("resfirate"), "resfir" );
	deepEqual( Stem("resignare"), "resign" );
	deepEqual( Stem("resimte"), "resimt" );
	deepEqual( Stem("resort"), "resort" );
	deepEqual( Stem("resortul"), "resort" );
	deepEqual( Stem("resorturile"), "resortur" );
	deepEqual( Stem("respect"), "respect" );
	deepEqual( Stem("respecta"), "respect" );
	deepEqual( Stem("respectabil"), "respect" );
	deepEqual( Stem("respectabilă"), "respect" );
	deepEqual( Stem("respectat"), "respect" );
	deepEqual( Stem("respectate"), "respect" );
	deepEqual( Stem("respectând"), "respect" );
	deepEqual( Stem("respectându"), "respect" );
	deepEqual( Stem("respectiv"), "respect" );
	deepEqual( Stem("respectivă"), "respect" );
	deepEqual( Stem("respectivele"), "respect" );
	deepEqual( Stem("respectivul"), "respect" );
	deepEqual( Stem("respectul"), "respect" );
	deepEqual( Stem("respectuos"), "respectu" );
	deepEqual( Stem("respecţi"), "respecţ" );
	deepEqual( Stem("resping"), "resping" );
	deepEqual( Stem("respingând"), "resping" );
	deepEqual( Stem("respingătoare"), "resping" );
	deepEqual( Stem("respins"), "respins" );
	deepEqual( Stem("respira"), "respir" );
	deepEqual( Stem("respiraţia"), "respir" );
	deepEqual( Stem("respiraţie"), "respir" );
	deepEqual( Stem("respirăm"), "resp" );
	deepEqual( Stem("respire"), "resp" );
	deepEqual( Stem("responsabilă"), "respons" );
	deepEqual( Stem("rest"), "rest" );
	deepEqual( Stem("restabilesc"), "restabil" );
	deepEqual( Stem("restaurant"), "restaur" );
	deepEqual( Stem("restaurante"), "restaur" );
	deepEqual( Stem("restaurantele"), "restaur" );
	deepEqual( Stem("restaurantelor"), "restaur" );
	deepEqual( Stem("restaurantul"), "restaur" );
	deepEqual( Stem("restaurarea"), "restaur" );
	deepEqual( Stem("restituie"), "restitui" );
	deepEqual( Stem("restrânge"), "restrâng" );
	deepEqual( Stem("restul"), "rest" );
	deepEqual( Stem("restului"), "rest" );
	deepEqual( Stem("resturi"), "restur" );
	deepEqual( Stem("resturile"), "restur" );
	deepEqual( Stem("reşedinţa"), "reşedinţ" );
	deepEqual( Stem("retează"), "reteaz" );
	deepEqual( Stem("retezat"), "retez" );
	deepEqual( Stem("retezate"), "retez" );
	deepEqual( Stem("reteze"), "retez" );
	deepEqual( Stem("reticenţe"), "reticenţ" );
	deepEqual( Stem("retoric"), "retor" );
	deepEqual( Stem("retorică"), "retor" );
	deepEqual( Stem("retractez"), "retract" );
	deepEqual( Stem("retrag"), "retrag" );
	deepEqual( Stem("retrage"), "retrag" );
	deepEqual( Stem("retragem"), "retrag" );
	deepEqual( Stem("retragere"), "retrag" );
	deepEqual( Stem("retragerea"), "retrag" );
	deepEqual( Stem("retrageri"), "retrager" );
	deepEqual( Stem("retragerii"), "retrager" );
	deepEqual( Stem("retragi"), "retrag" );
	deepEqual( Stem("retransform"), "retransform" );
	deepEqual( Stem("retranşantă"), "retranş" );
	deepEqual( Stem("retras"), "retras" );
	deepEqual( Stem("retrasă"), "retras" );
	deepEqual( Stem("retrase"), "retr" );
	deepEqual( Stem("retroactivă"), "retroact" );
	deepEqual( Stem("retten"), "retten" );
	deepEqual( Stem("reţea"), "reţ" );
	deepEqual( Stem("reţele"), "reţ" );
	deepEqual( Stem("reţete"), "reţet" );
	deepEqual( Stem("reţetelor"), "reţet" );
	deepEqual( Stem("reţie"), "reţ" );
	deepEqual( Stem("reţin"), "reţin" );
	deepEqual( Stem("reţinându"), "reţin" );
	deepEqual( Stem("reţine"), "reţin" );
	deepEqual( Stem("reţineţi"), "reţin" );
	deepEqual( Stem("reţinut"), "reţin" );
	deepEqual( Stem("reţinute"), "reţin" );
	deepEqual( Stem("reumatic"), "reumat" );
	deepEqual( Stem("reuşeşte"), "reuş" );
	deepEqual( Stem("reuşit"), "reuşit" );
	deepEqual( Stem("revarsă"), "revars" );
	deepEqual( Stem("revărsa"), "revărs" );
	deepEqual( Stem("revărsat"), "revărs" );
	deepEqual( Stem("revărsată"), "revărs" );
	deepEqual( Stem("revedea"), "reved" );
	deepEqual( Stem("revedem"), "reved" );
	deepEqual( Stem("revederea"), "reved" );
	deepEqual( Stem("revederii"), "reveder" );
	deepEqual( Stem("revelator"), "revel" );
	deepEqual( Stem("reveneau"), "reven" );
	deepEqual( Stem("reveni"), "reven" );
	deepEqual( Stem("revenim"), "reven" );
	deepEqual( Stem("revenire"), "reven" );
	deepEqual( Stem("reveniri"), "revenir" );
	deepEqual( Stem("revenirii"), "revenir" );
	deepEqual( Stem("revenit"), "reven" );
	deepEqual( Stem("revenită"), "reven" );
	deepEqual( Stem("reveniţi"), "reven" );
	deepEqual( Stem("reverberaţii"), "reverber" );
	deepEqual( Stem("reverii"), "rever" );
	deepEqual( Stem("reverul"), "rever" );
	deepEqual( Stem("revie"), "rev" );
	deepEqual( Stem("revin"), "revin" );
	deepEqual( Stem("revină"), "revin" );
	deepEqual( Stem("revine"), "revin" );
	deepEqual( Stem("revistă"), "revist" );
	deepEqual( Stem("revistele"), "revist" );
	deepEqual( Stem("reviu"), "reviu" );
	deepEqual( Stem("revoltat"), "revolt" );
	deepEqual( Stem("revoltau"), "revolt" );
	deepEqual( Stem("revoltă"), "revolt" );
	deepEqual( Stem("revoltător"), "revolt" );
	deepEqual( Stem("revoluţia"), "revoluţ" );
	deepEqual( Stem("revoluţie"), "revoluţ" );
	deepEqual( Stem("revoluţiei"), "revoluţ" );
	deepEqual( Stem("revoluţiile"), "revoluţ" );
	deepEqual( Stem("revoluţionar"), "revoluţionar" );
	deepEqual( Stem("revoluţionară"), "revoluţion" );
	deepEqual( Stem("revoluţionare"), "revoluţion" );
	deepEqual( Stem("revoluţionarii"), "revoluţionar" );
	deepEqual( Stem("revoluţionarilor"), "revoluţionar" );
	deepEqual( Stem("revoluţioneze"), "revoluţion" );
	deepEqual( Stem("revolver"), "revolver" );
	deepEqual( Stem("revolverele"), "revolv" );
	deepEqual( Stem("revolverelor"), "revolv" );
	deepEqual( Stem("revolverul"), "revolver" );
	deepEqual( Stem("revuistice"), "revuist" );
	deepEqual( Stem("rezema"), "rezem" );
	deepEqual( Stem("rezemat"), "rezem" );
	deepEqual( Stem("rezemată"), "rezem" );
	deepEqual( Stem("rezemându"), "rezem" );
	deepEqual( Stem("rezerva"), "rezerv" );
	deepEqual( Stem("rezervasem"), "rezerv" );
	deepEqual( Stem("rezervat"), "rezerv" );
	deepEqual( Stem("rezervată"), "rezerv" );
	deepEqual( Stem("rezervate"), "rezerv" );
	deepEqual( Stem("rezervă"), "rezerv" );
	deepEqual( Stem("rezerve"), "rezerv" );
	deepEqual( Stem("rezervei"), "rezerve" );
	deepEqual( Stem("rezervele"), "rezerv" );
	deepEqual( Stem("rezervoarele"), "rezervoar" );
	deepEqual( Stem("rezilientă"), "rezilient" );
	deepEqual( Stem("rezilienţi"), "rezilienţ" );
	deepEqual( Stem("rezista"), "rezist" );
	deepEqual( Stem("rezistam"), "rezist" );
	deepEqual( Stem("rezistat"), "rezist" );
	deepEqual( Stem("rezistau"), "rezist" );
	deepEqual( Stem("rezistând"), "rezist" );
	deepEqual( Stem("rezistă"), "rezist" );
	deepEqual( Stem("reziste"), "rezist" );
	deepEqual( Stem("rezistent"), "rezistent" );
	deepEqual( Stem("rezistente"), "rezistent" );
	deepEqual( Stem("rezistenţa"), "rezistenţ" );
	deepEqual( Stem("rezistenţă"), "rezistenţ" );
	deepEqual( Stem("rezistenţe"), "rezistenţ" );
	deepEqual( Stem("rezistenţei"), "rezistenţe" );
	deepEqual( Stem("rezistenţi"), "rezistenţ" );
	deepEqual( Stem("rezistînd"), "rezistînd" );
	deepEqual( Stem("rezistori"), "rezistor" );
	deepEqual( Stem("rezoluţia"), "rezoluţ" );
	deepEqual( Stem("rezoluţii"), "rezoluţ" );
	deepEqual( Stem("rezolva"), "rezolv" );
	deepEqual( Stem("rezolvabile"), "rezolv" );
	deepEqual( Stem("rezolvare"), "rezolv" );
	deepEqual( Stem("rezolvat"), "rezolv" );
	deepEqual( Stem("rezolvată"), "rezolv" );
	deepEqual( Stem("rezolvaţi"), "rezolv" );
	deepEqual( Stem("rezolvau"), "rezolv" );
	deepEqual( Stem("rezolvă"), "rezolv" );
	deepEqual( Stem("rezolvăm"), "rezolv" );
	deepEqual( Stem("rezolvări"), "rezolvăr" );
	deepEqual( Stem("rezolve"), "rezolv" );
	deepEqual( Stem("rezolvim"), "rezolv" );
	deepEqual( Stem("rezolvire"), "rezolv" );
	deepEqual( Stem("rezolvirea"), "rezolv" );
	deepEqual( Stem("rezolvînd"), "rezolvînd" );
	deepEqual( Stem("rezonabil"), "rezon" );
	deepEqual( Stem("rezonabilă"), "rezon" );
	deepEqual( Stem("rezonant"), "rezon" );
	deepEqual( Stem("rezulta"), "rezult" );
	deepEqual( Stem("rezultat"), "rezult" );
	deepEqual( Stem("rezultate"), "rezult" );
	deepEqual( Stem("rezultatele"), "rezult" );
	deepEqual( Stem("rezultatelor"), "rezult" );
	deepEqual( Stem("rezultatul"), "rezult" );
	deepEqual( Stem("rezultă"), "rezult" );
	deepEqual( Stem("rezum"), "rezum" );
	deepEqual( Stem("rezumare"), "rezum" );
	deepEqual( Stem("rezumat"), "rezum" );
	deepEqual( Stem("rezumate"), "rezum" );
	deepEqual( Stem("rezumă"), "rezum" );
	deepEqual( Stem("ridic"), "ridic" );
	deepEqual( Stem("ridica"), "ridic" );
	deepEqual( Stem("ridicare"), "ridic" );
	deepEqual( Stem("ridicarea"), "ridic" );
	deepEqual( Stem("ridicat"), "ridic" );
	deepEqual( Stem("ridicată"), "ridic" );
	deepEqual( Stem("ridicate"), "ridic" );
	deepEqual( Stem("ridicaţi"), "ridic" );
	deepEqual( Stem("ridicau"), "ridic" );
	deepEqual( Stem("ridicând"), "ridic" );
	deepEqual( Stem("ridicându"), "ridic" );
	deepEqual( Stem("ridică"), "ridic" );
	deepEqual( Stem("ridicăm"), "ridic" );
	deepEqual( Stem("ridicături"), "ridicătur" );
	deepEqual( Stem("ridice"), "ridic" );
	deepEqual( Stem("ridici"), "ridic" );
	deepEqual( Stem("ridicole"), "ridicol" );
	deepEqual( Stem("ridicolul"), "ridicol" );
	deepEqual( Stem("ridicul"), "ridic" );
	deepEqual( Stem("ridiculă"), "ridicul" );
	deepEqual( Stem("ridicule"), "ridicul" );
	deepEqual( Stem("ridiculi"), "ridicul" );
	deepEqual( Stem("riehl"), "riehl" );
	deepEqual( Stem("riemann"), "riemann" );
	deepEqual( Stem("riemannian"), "riemannian" );
	deepEqual( Stem("rigid"), "rigid" );
	deepEqual( Stem("rigidă"), "rigid" );
	deepEqual( Stem("rigoare"), "rigoar" );
	deepEqual( Stem("rigoarea"), "rigoar" );
	deepEqual( Stem("riguroasă"), "rigur" );
	deepEqual( Stem("riguroase"), "rigur" );
	deepEqual( Stem("riguros"), "rigur" );
	deepEqual( Stem("rinocerului"), "rinocer" );
	deepEqual( Stem("riposta"), "ripost" );
	deepEqual( Stem("ripostează"), "ripost" );
	deepEqual( Stem("risc"), "risc" );
	deepEqual( Stem("riscam"), "risc" );
	deepEqual( Stem("riscase"), "risc" );
	deepEqual( Stem("riscă"), "risc" );
	deepEqual( Stem("riscăm"), "risc" );
	deepEqual( Stem("riscul"), "risc" );
	deepEqual( Stem("riscurile"), "riscur" );
	deepEqual( Stem("risipa"), "risip" );
	deepEqual( Stem("risipea"), "risip" );
	deepEqual( Stem("risipesc"), "risip" );
	deepEqual( Stem("risipi"), "risip" );
	deepEqual( Stem("risipit"), "risip" );
	deepEqual( Stem("risipite"), "risip" );
	deepEqual( Stem("risipiţi"), "risip" );
	deepEqual( Stem("ritmic"), "ritmic" );
	deepEqual( Stem("ritmică"), "ritmic" );
	deepEqual( Stem("ritmul"), "ritm" );
	deepEqual( Stem("rivalizare"), "rivaliz" );
	deepEqual( Stem("ro"), "ro" );
	deepEqual( Stem("roadele"), "road" );
	deepEqual( Stem("roagă"), "roag" );
	deepEqual( Stem("roata"), "roat" );
	deepEqual( Stem("roate"), "roat" );
	deepEqual( Stem("robească"), "robeasc" );
	deepEqual( Stem("robi"), "rob" );
	deepEqual( Stem("robit"), "robit" );
	deepEqual( Stem("robite"), "robit" );
	deepEqual( Stem("robust"), "robust" );
	deepEqual( Stem("robustă"), "robust" );
	deepEqual( Stem("robuste"), "robust" );
	deepEqual( Stem("robuşti"), "robuşt" );
	deepEqual( Stem("rochia"), "roch" );
	deepEqual( Stem("rochie"), "roch" );
	deepEqual( Stem("rochii"), "roch" );
	deepEqual( Stem("rochiile"), "roch" );
	deepEqual( Stem("rodea"), "rod" );
	deepEqual( Stem("rodească"), "rodeasc" );
	deepEqual( Stem("rodnică"), "rodnic" );
	deepEqual( Stem("rodul"), "rod" );
	deepEqual( Stem("rog"), "rog" );
	deepEqual( Stem("roger"), "roger" );
	deepEqual( Stem("rohde"), "rohd" );
	deepEqual( Stem("roi"), "roi" );
	deepEqual( Stem("roib"), "roib" );
	deepEqual( Stem("roibul"), "roib" );
	deepEqual( Stem("roibului"), "roib" );
	deepEqual( Stem("roiul"), "roi" );
	deepEqual( Stem("rol"), "rol" );
	deepEqual( Stem("rolul"), "rol" );
	deepEqual( Stem("rolului"), "rol" );
	deepEqual( Stem("roma"), "rom" );
	deepEqual( Stem("roman"), "roman" );
	deepEqual( Stem("romanaţi"), "roman" );
	deepEqual( Stem("romană"), "roman" );
	deepEqual( Stem("romancierilor"), "romancier" );
	deepEqual( Stem("romane"), "roman" );
	deepEqual( Stem("romanele"), "roman" );
	deepEqual( Stem("romani"), "roman" );
	deepEqual( Stem("romanii"), "roman" );
	deepEqual( Stem("romanilor"), "roman" );
	deepEqual( Stem("romantică"), "romant" );
	deepEqual( Stem("romantice"), "romant" );
	deepEqual( Stem("romantici"), "romant" );
	deepEqual( Stem("romanticilor"), "romant" );
	deepEqual( Stem("romantism"), "romantist" );
	deepEqual( Stem("romantismul"), "romantist" );
	deepEqual( Stem("romanţa"), "romanţ" );
	deepEqual( Stem("romanul"), "roman" );
	deepEqual( Stem("român"), "român" );
	deepEqual( Stem("româna"), "român" );
	deepEqual( Stem("română"), "român" );
	deepEqual( Stem("româncă"), "românc" );
	deepEqual( Stem("românce"), "românc" );
	deepEqual( Stem("româncele"), "românc" );
	deepEqual( Stem("române"), "român" );
	deepEqual( Stem("românească"), "român" );
	deepEqual( Stem("românesc"), "român" );
	deepEqual( Stem("româneşte"), "român" );
	deepEqual( Stem("româneşti"), "român" );
	deepEqual( Stem("români"), "român" );
	deepEqual( Stem("românia"), "român" );
	deepEqual( Stem("românie"), "român" );
	deepEqual( Stem("româniei"), "român" );
	deepEqual( Stem("românii"), "român" );
	deepEqual( Stem("românul"), "român" );
	deepEqual( Stem("românului"), "român" );
	deepEqual( Stem("romburi"), "rombur" );
	deepEqual( Stem("rond"), "rond" );
	deepEqual( Stem("rondul"), "rond" );
	deepEqual( Stem("ropot"), "ropot" );
	deepEqual( Stem("ros"), "ros" );
	deepEqual( Stem("rose"), "ros" );
	deepEqual( Stem("rosetti"), "rosett" );
	deepEqual( Stem("rossetti"), "rossett" );
	deepEqual( Stem("rost"), "rost" );
	deepEqual( Stem("rostea"), "rost" );
	deepEqual( Stem("rosteşte"), "rost" );
	deepEqual( Stem("rostim"), "rost" );
	deepEqual( Stem("rostit"), "rostit" );
	deepEqual( Stem("rostoganisme"), "rostoganist" );
	deepEqual( Stem("rostogolindu"), "rostogol" );
	deepEqual( Stem("rostogolit"), "rostogol" );
	deepEqual( Stem("rostogoliţi"), "rostogol" );
	deepEqual( Stem("rostul"), "rost" );
	deepEqual( Stem("rosturi"), "rostur" );
	deepEqual( Stem("rosturile"), "rostur" );
	deepEqual( Stem("rosturilor"), "rostur" );
	deepEqual( Stem("roş"), "roş" );
	deepEqual( Stem("roşcată"), "roşcat" );
	deepEqual( Stem("roşiatic"), "roşiat" );
	deepEqual( Stem("roşiatică"), "roşiat" );
	deepEqual( Stem("roşie"), "roş" );
	deepEqual( Stem("roşii"), "roş" );
	deepEqual( Stem("roşu"), "roşu" );
	deepEqual( Stem("roşul"), "roş" );
	deepEqual( Stem("rotesc"), "rotesc" );
	deepEqual( Stem("roteşte"), "roteşt" );
	deepEqual( Stem("rothschild"), "rothschild" );
	deepEqual( Stem("roti"), "rot" );
	deepEqual( Stem("rotim"), "rot" );
	deepEqual( Stem("rotind"), "rotind" );
	deepEqual( Stem("rotire"), "rotir" );
	deepEqual( Stem("rotite"), "rotit" );
	deepEqual( Stem("rotiţă"), "rotiţ" );
	deepEqual( Stem("rotiţele"), "rotiţ" );
	deepEqual( Stem("rotocoală"), "rotocoal" );
	deepEqual( Stem("rotund"), "rotund" );
	deepEqual( Stem("rotundă"), "rotund" );
	deepEqual( Stem("rotunjească"), "rotunj" );
	deepEqual( Stem("rotunjesc"), "rotunj" );
	deepEqual( Stem("rotunjeste"), "rotunjest" );
	deepEqual( Stem("rotunjeşte"), "rotunj" );
	deepEqual( Stem("rotunji"), "rotunj" );
	deepEqual( Stem("rotunjimi"), "rotunjim" );
	deepEqual( Stem("rotunjimile"), "rotunjim" );
	deepEqual( Stem("rotunjind"), "rotunj" );
	deepEqual( Stem("rotunjire"), "rotunj" );
	deepEqual( Stem("rotunjirii"), "rotunjir" );
	deepEqual( Stem("rotunjit"), "rotunj" );
	deepEqual( Stem("rotunjită"), "rotunj" );
	deepEqual( Stem("rotunzi"), "rotunz" );
	deepEqual( Stem("rotunzimile"), "rotunzim" );
	deepEqual( Stem("roţi"), "roţ" );
	deepEqual( Stem("roţii"), "roţ" );
	deepEqual( Stem("roţile"), "roţ" );
	deepEqual( Stem("roţilor"), "roţ" );
	deepEqual( Stem("roua"), "rou" );
	deepEqual( Stem("rouă"), "rou" );
	deepEqual( Stem("rouge"), "roug" );
	deepEqual( Stem("rousseau"), "rouss" );
	deepEqual( Stem("roz"), "roz" );
	deepEqual( Stem("rozei"), "roze" );
	deepEqual( Stem("rozelor"), "roz" );
	deepEqual( Stem("rozetti"), "rozett" );
	deepEqual( Stem("ruajul"), "ruaj" );
	deepEqual( Stem("rubedeniilor"), "rubeden" );
	deepEqual( Stem("rubrici"), "rubric" );
	deepEqual( Stem("rucăr"), "rucăr" );
	deepEqual( Stem("rucărului"), "rucăr" );
	deepEqual( Stem("rude"), "rud" );
	deepEqual( Stem("rudele"), "rud" );
	deepEqual( Stem("rudelor"), "rud" );
	deepEqual( Stem("rudenie"), "ruden" );
	deepEqual( Stem("rudenii"), "ruden" );
	deepEqual( Stem("rudimentarele"), "rudiment" );
	deepEqual( Stem("rudis"), "rudis" );
	deepEqual( Stem("rufăria"), "rufăr" );
	deepEqual( Stem("ruga"), "rug" );
	deepEqual( Stem("rugam"), "rugam" );
	deepEqual( Stem("rugasem"), "rugasem" );
	deepEqual( Stem("rugat"), "rugat" );
	deepEqual( Stem("rugate"), "rugat" );
	deepEqual( Stem("rugaţi"), "rug" );
	deepEqual( Stem("rugăciune"), "rugăciun" );
	deepEqual( Stem("rugul"), "rug" );
	deepEqual( Stem("ruine"), "ruin" );
	deepEqual( Stem("rula"), "rul" );
	deepEqual( Stem("ruletă"), "rulet" );
	deepEqual( Stem("rum"), "rum" );
	deepEqual( Stem("rumanien"), "rumanien" );
	deepEqual( Stem("rumene"), "rumen" );
	deepEqual( Stem("rumeni"), "rumen" );
	deepEqual( Stem("rumenită"), "rumen" );
	deepEqual( Stem("rumeoară"), "rumeoar" );
	deepEqual( Stem("rumoarea"), "rumoar" );
	deepEqual( Stem("rup"), "rup" );
	deepEqual( Stem("rupa"), "rup" );
	deepEqual( Stem("rupând"), "rupând" );
	deepEqual( Stem("rupându"), "rupându" );
	deepEqual( Stem("rupă"), "rup" );
	deepEqual( Stem("rupe"), "rup" );
	deepEqual( Stem("rupere"), "ruper" );
	deepEqual( Stem("ruperea"), "ruper" );
	deepEqual( Stem("rupi"), "rup" );
	deepEqual( Stem("rupsese"), "rup" );
	deepEqual( Stem("rupt"), "rupt" );
	deepEqual( Stem("ruptă"), "rupt" );
	deepEqual( Stem("rupte"), "rupt" );
	deepEqual( Stem("ruptura"), "ruptur" );
	deepEqual( Stem("ruptură"), "rupt" );
	deepEqual( Stem("rupturi"), "ruptur" );
	deepEqual( Stem("rural"), "rural" );
	deepEqual( Stem("rurală"), "rural" );
	deepEqual( Stem("ruralii"), "rural" );
	deepEqual( Stem("ruralul"), "rural" );
	deepEqual( Stem("ruralului"), "rural" );
	deepEqual( Stem("rus"), "rus" );
	deepEqual( Stem("rusă"), "rus" );
	deepEqual( Stem("ruse"), "rus" );
	deepEqual( Stem("rusească"), "ruseasc" );
	deepEqual( Stem("rusesc"), "rusesc" );
	deepEqual( Stem("rusia"), "rusi" );
	deepEqual( Stem("rusiei"), "rus" );
	deepEqual( Stem("rusoaică"), "rusoaic" );
	deepEqual( Stem("rustice"), "rustic" );
	deepEqual( Stem("rusul"), "rus" );
	deepEqual( Stem("rusului"), "rus" );
	deepEqual( Stem("ruşi"), "ruş" );
	deepEqual( Stem("ruşii"), "ruş" );
	deepEqual( Stem("ruşilor"), "ruş" );
	deepEqual( Stem("ruşine"), "ruşin" );
	deepEqual( Stem("ruşinea"), "ruşin" );
	deepEqual( Stem("ruşinoasă"), "ruşin" );
	deepEqual( Stem("ruşinos"), "ruşin" );
	deepEqual( Stem("s"), "s" );
	deepEqual( Stem("sa"), "sa" );
	deepEqual( Stem("sabia"), "sabi" );
	deepEqual( Stem("sabie"), "sab" );
	deepEqual( Stem("sac"), "sac" );
	deepEqual( Stem("sacadele"), "sacad" );
	deepEqual( Stem("saci"), "sac" );
	deepEqual( Stem("sacoul"), "saco" );
	deepEqual( Stem("sacrific"), "sacrif" );
	deepEqual( Stem("sacrificii"), "sacrif" );
	deepEqual( Stem("sacrificiile"), "sacrif" );
	deepEqual( Stem("sacrificiu"), "sacrificiu" );
	deepEqual( Stem("sacrificiul"), "sacrif" );
	deepEqual( Stem("sacul"), "sac" );
	deepEqual( Stem("sala"), "sal" );
	deepEqual( Stem("salariaţii"), "salar" );
	deepEqual( Stem("sală"), "sal" );
	deepEqual( Stem("salcie"), "salc" );
	deepEqual( Stem("sale"), "sal" );
	deepEqual( Stem("saloane"), "saloan" );
	deepEqual( Stem("saloanele"), "saloan" );
	deepEqual( Stem("saloanelor"), "saloan" );
	deepEqual( Stem("salon"), "salon" );
	deepEqual( Stem("salonaş"), "salonaş" );
	deepEqual( Stem("salonaşul"), "salonaş" );
	deepEqual( Stem("salonic"), "salon" );
	deepEqual( Stem("salt"), "salt" );
	deepEqual( Stem("saltă"), "salt" );
	deepEqual( Stem("salturi"), "saltur" );
	deepEqual( Stem("salut"), "salut" );
	deepEqual( Stem("salutară"), "salut" );
	deepEqual( Stem("salutare"), "salut" );
	deepEqual( Stem("salutat"), "salut" );
	deepEqual( Stem("salută"), "salut" );
	deepEqual( Stem("saluturi"), "salutur" );
	deepEqual( Stem("saluţi"), "saluţ" );
	deepEqual( Stem("salva"), "salv" );
	deepEqual( Stem("salvare"), "salv" );
	deepEqual( Stem("salvarea"), "salv" );
	deepEqual( Stem("salvase"), "salv" );
	deepEqual( Stem("salvat"), "salvat" );
	deepEqual( Stem("salvată"), "salvat" );
	deepEqual( Stem("salvator"), "salvat" );
	deepEqual( Stem("salvaţi"), "salv" );
	deepEqual( Stem("salvă"), "salv" );
	deepEqual( Stem("salvăm"), "salv" );
	deepEqual( Stem("salvării"), "salvăr" );
	deepEqual( Stem("salve"), "salv" );
	deepEqual( Stem("salvează"), "salv" );
	deepEqual( Stem("salvele"), "salv" );
	deepEqual( Stem("samsarii"), "samsar" );
	deepEqual( Stem("samsarlâcuri"), "samsarlâcur" );
	deepEqual( Stem("sanatoriu"), "sanatoriu" );
	deepEqual( Stem("sanatoriului"), "sanat" );
	deepEqual( Stem("sancţiuni"), "sancţiun" );
	deepEqual( Stem("sanfter"), "sanfter" );
	deepEqual( Stem("sania"), "sani" );
	deepEqual( Stem("sanitar"), "sanitar" );
	deepEqual( Stem("sanitare"), "sanit" );
	deepEqual( Stem("sankt"), "sankt" );
	deepEqual( Stem("sanscrită"), "sanscrit" );
	deepEqual( Stem("santinela"), "santinel" );
	deepEqual( Stem("santinelă"), "santinel" );
	deepEqual( Stem("santinele"), "santin" );
	deepEqual( Stem("sap"), "sap" );
	deepEqual( Stem("sapă"), "sap" );
	deepEqual( Stem("sapienţei"), "sapienţe" );
	deepEqual( Stem("sar"), "sar" );
	deepEqual( Stem("sarabandă"), "saraband" );
	deepEqual( Stem("sarajevo"), "sarajevo" );
	deepEqual( Stem("saramură"), "saram" );
	deepEqual( Stem("sară"), "sar" );
	deepEqual( Stem("sarăcită"), "sarăc" );
	deepEqual( Stem("sarbede"), "sarbed" );
	deepEqual( Stem("sarcasm"), "sarcasm" );
	deepEqual( Stem("sarcasmul"), "sarcasm" );
	deepEqual( Stem("sarcastic"), "sarcast" );
	deepEqual( Stem("sarcina"), "sarcin" );
	deepEqual( Stem("sarcină"), "sarcin" );
	deepEqual( Stem("sarcini"), "sarcin" );
	deepEqual( Stem("sarcofagele"), "sarcofag" );
	deepEqual( Stem("sardele"), "sard" );
	deepEqual( Stem("sardinia"), "sardin" );
	deepEqual( Stem("sardonic"), "sardon" );
	deepEqual( Stem("sare"), "sar" );
	deepEqual( Stem("sas"), "sas" );
	deepEqual( Stem("sasă"), "sas" );
	deepEqual( Stem("sasul"), "sas" );
	deepEqual( Stem("sasului"), "sas" );
	deepEqual( Stem("saşi"), "saş" );
	deepEqual( Stem("saşii"), "saş" );
	deepEqual( Stem("sat"), "sat" );
	deepEqual( Stem("sate"), "sat" );
	deepEqual( Stem("satele"), "sat" );
	deepEqual( Stem("satiric"), "satir" );
	deepEqual( Stem("satisfac"), "satisfac" );
	deepEqual( Stem("satisfacă"), "satisfac" );
	deepEqual( Stem("satisface"), "satisfac" );
	deepEqual( Stem("satisfacerea"), "satisfac" );
	deepEqual( Stem("satisfacţia"), "satisfacţ" );
	deepEqual( Stem("satisfacţie"), "satisfacţ" );
	deepEqual( Stem("satisfacţii"), "satisfacţ" );
	deepEqual( Stem("satisfacţiion"), "satisfacţiion" );
	deepEqual( Stem("satisfăcătoare"), "satisfăc" );
	deepEqual( Stem("satisfăcînd"), "satisfăcînd" );
	deepEqual( Stem("satisfăcut"), "satisfăc" );
	deepEqual( Stem("satisfăcută"), "satisfăc" );
	deepEqual( Stem("satisfăcuţi"), "satisfăcuţ" );
	deepEqual( Stem("satisfiabilă"), "satisf" );
	deepEqual( Stem("satisfiabile"), "satisf" );
	deepEqual( Stem("satisfiabilitate"), "satisf" );
	deepEqual( Stem("satisfiabilităţii"), "satisf" );
	deepEqual( Stem("satrapi"), "satrap" );
	deepEqual( Stem("satul"), "sat" );
	deepEqual( Stem("satului"), "sat" );
	deepEqual( Stem("saturat"), "satur" );
	deepEqual( Stem("saturate"), "satur" );
	deepEqual( Stem("saturaţie"), "satur" );
	deepEqual( Stem("sature"), "satur" );
	deepEqual( Stem("saturn"), "saturn" );
	deepEqual( Stem("sau"), "sau" );
	deepEqual( Stem("sauer"), "sauer" );
	deepEqual( Stem("savana"), "savan" );
	deepEqual( Stem("savant"), "savant" );
	deepEqual( Stem("savantă"), "savant" );
	deepEqual( Stem("savante"), "savant" );
	deepEqual( Stem("savanţi"), "savanţ" );
	deepEqual( Stem("savanţii"), "savanţ" );
	deepEqual( Stem("savanţilor"), "savanţ" );
	deepEqual( Stem("savoare"), "savoar" );
	deepEqual( Stem("savoarea"), "savoar" );
	deepEqual( Stem("savopol"), "savopol" );
	deepEqual( Stem("saxa"), "sax" );
	deepEqual( Stem("saxonă"), "saxon" );
	deepEqual( Stem("saxoni"), "saxon" );
	deepEqual( Stem("sâcâit"), "sâcâit" );
	deepEqual( Stem("sâcâită"), "sâcâit" );
	deepEqual( Stem("sâcâitoare"), "sâcâit" );
	deepEqual( Stem("sâcâiţi"), "sâcâ" );
	deepEqual( Stem("sâmbăta"), "sâmbăt" );
	deepEqual( Stem("sâmbătă"), "sâmbăt" );
	deepEqual( Stem("sân"), "sân" );
	deepEqual( Stem("sânge"), "sâng" );
	deepEqual( Stem("sângele"), "sâng" );
	deepEqual( Stem("sângerat"), "sânger" );
	deepEqual( Stem("sângeros"), "sânger" );
	deepEqual( Stem("sâni"), "sân" );
	deepEqual( Stem("sânii"), "sân" );
	deepEqual( Stem("sânilor"), "sân" );
	deepEqual( Stem("sânta"), "sânt" );
	deepEqual( Stem("sânul"), "sân" );
	deepEqual( Stem("sârb"), "sârb" );
	deepEqual( Stem("sârbii"), "sârb" );
	deepEqual( Stem("sârma"), "sârm" );
	deepEqual( Stem("sârmă"), "sârm" );
	deepEqual( Stem("sârme"), "sârm" );
	deepEqual( Stem("sârmele"), "sârm" );
	deepEqual( Stem("să"), "să" );
	deepEqual( Stem("săbii"), "săb" );
	deepEqual( Stem("sădită"), "sădit" );
	deepEqual( Stem("săgeţi"), "săg" );
	deepEqual( Stem("săgeţile"), "săg" );
	deepEqual( Stem("săi"), "săi" );
	deepEqual( Stem("sălbatic"), "sălbat" );
	deepEqual( Stem("sălcii"), "sălc" );
	deepEqual( Stem("săli"), "săl" );
	deepEqual( Stem("sălile"), "săl" );
	deepEqual( Stem("săliţa"), "săliţ" );
	deepEqual( Stem("sălta"), "sălt" );
	deepEqual( Stem("săltat"), "săltat" );
	deepEqual( Stem("săltate"), "săltat" );
	deepEqual( Stem("săltând"), "sălt" );
	deepEqual( Stem("săltăreţ"), "săltăreţ" );
	deepEqual( Stem("sănătate"), "sănăt" );
	deepEqual( Stem("sănătoasă"), "sănăt" );
	deepEqual( Stem("sănătos"), "sănăt" );
	deepEqual( Stem("săpa"), "săp" );
	deepEqual( Stem("săparea"), "săpar" );
	deepEqual( Stem("săpate"), "săpat" );
	deepEqual( Stem("săpatură"), "săpat" );
	deepEqual( Stem("săpătură"), "săpăt" );
	deepEqual( Stem("săptămâna"), "săptămân" );
	deepEqual( Stem("săptămână"), "săptămân" );
	deepEqual( Stem("săptămâni"), "săptămân" );
	deepEqual( Stem("săptămânile"), "săptămân" );
	deepEqual( Stem("săptămîna"), "săptămîn" );
	deepEqual( Stem("săptămînal"), "săptămînal" );
	deepEqual( Stem("săptămînală"), "săptămînal" );
	deepEqual( Stem("săptămînale"), "săptămînal" );
	deepEqual( Stem("săptămînalelor"), "săptămînal" );
	deepEqual( Stem("săptămînă"), "săptămîn" );
	deepEqual( Stem("săptămîni"), "săptămîn" );
	deepEqual( Stem("săpun"), "săpun" );
	deepEqual( Stem("sărac"), "sărac" );
	deepEqual( Stem("săracă"), "sărac" );
	deepEqual( Stem("sărace"), "sărac" );
	deepEqual( Stem("săraci"), "sărac" );
	deepEqual( Stem("săracii"), "sărac" );
	deepEqual( Stem("sărat"), "sărat" );
	deepEqual( Stem("sărăcăcioasă"), "sărăcăc" );
	deepEqual( Stem("sărăcăcios"), "sărăcăc" );
	deepEqual( Stem("sărăcea"), "sărăc" );
	deepEqual( Stem("sărăcia"), "sărăc" );
	deepEqual( Stem("sărăcie"), "sărăc" );
	deepEqual( Stem("sărăcimea"), "sărăcim" );
	deepEqual( Stem("sărăcimii"), "sărăcim" );
	deepEqual( Stem("sărăcire"), "sărăc" );
	deepEqual( Stem("sărăcit"), "sărăc" );
	deepEqual( Stem("sărăcute"), "sărăc" );
	deepEqual( Stem("sărăcuţ"), "sărăcuţ" );
	deepEqual( Stem("sărăcuţă"), "sărăcuţ" );
	deepEqual( Stem("sărăntoc"), "sărăntoc" );
	deepEqual( Stem("sărbătoare"), "sărbat" );
	deepEqual( Stem("sărbătoarea"), "sărbat" );
	deepEqual( Stem("sărbătorească"), "sărbător" );
	deepEqual( Stem("sărbătoresc"), "sărbător" );
	deepEqual( Stem("sărbători"), "sărbat" );
	deepEqual( Stem("sărbătorire"), "sărbător" );
	deepEqual( Stem("sărbătoririi"), "sărbătorir" );
	deepEqual( Stem("sărbătorisem"), "sărbător" );
	deepEqual( Stem("sărbătorit"), "sărbător" );
	deepEqual( Stem("sărbătoriţi"), "sărbător" );
	deepEqual( Stem("sărea"), "săr" );
	deepEqual( Stem("săream"), "săream" );
	deepEqual( Stem("săreau"), "săreau" );
	deepEqual( Stem("sări"), "săr" );
	deepEqual( Stem("sărim"), "săr" );
	deepEqual( Stem("sărise"), "săris" );
	deepEqual( Stem("sărit"), "sărit" );
	deepEqual( Stem("sărite"), "sărit" );
	deepEqual( Stem("săritoare"), "sărit" );
	deepEqual( Stem("săritură"), "sărit" );
	deepEqual( Stem("sărituri"), "săritur" );
	deepEqual( Stem("săriturii"), "săritur" );
	deepEqual( Stem("sărut"), "sărut" );
	deepEqual( Stem("săruta"), "sărut" );
	deepEqual( Stem("sărutam"), "sărut" );
	deepEqual( Stem("sărutat"), "sărut" );
	deepEqual( Stem("sărutându"), "sărut" );
	deepEqual( Stem("sărută"), "sărut" );
	deepEqual( Stem("sărutăm"), "sărut" );
	deepEqual( Stem("sărutări"), "sărutăr" );
	deepEqual( Stem("sărute"), "sărut" );
	deepEqual( Stem("sărutul"), "sărut" );
	deepEqual( Stem("sărutului"), "sărut" );
	deepEqual( Stem("săruţi"), "săruţ" );
	deepEqual( Stem("săsăuş"), "săsăuş" );
	deepEqual( Stem("săsăuşul"), "săsăuş" );
	deepEqual( Stem("săsească"), "săseasc" );
	deepEqual( Stem("săseşti"), "săseşt" );
	deepEqual( Stem("săsoaica"), "săsoaic" );
	deepEqual( Stem("săsoaică"), "săsoaic" );
	deepEqual( Stem("săsoaicele"), "săsoaic" );
	deepEqual( Stem("sătească"), "săteasc" );
	deepEqual( Stem("săteni"), "săten" );
	deepEqual( Stem("sătui"), "sătu" );
	deepEqual( Stem("sătulă"), "sătul" );
	deepEqual( Stem("săturaseră"), "sătur" );
	deepEqual( Stem("săturat"), "sătur" );
	deepEqual( Stem("săţios"), "săţios" );
	deepEqual( Stem("său"), "său" );
	deepEqual( Stem("săvârşise"), "săvârş" );
	deepEqual( Stem("săvîrşesc"), "săvîrş" );
	deepEqual( Stem("săvîrşeşte"), "săvîrş" );
	deepEqual( Stem("săvulescu"), "săvulescu" );
	deepEqual( Stem("scad"), "scad" );
	deepEqual( Stem("scade"), "scad" );
	deepEqual( Stem("scald"), "scald" );
	deepEqual( Stem("scalen"), "scalen" );
	deepEqual( Stem("scamator"), "scamat" );
	deepEqual( Stem("scamatorie"), "scamator" );
	deepEqual( Stem("scandal"), "scandal" );
	deepEqual( Stem("scandalizaţi"), "scandaliz" );
	deepEqual( Stem("scandaloasă"), "scandal" );
	deepEqual( Stem("scandalos"), "scandal" );
	deepEqual( Stem("scandalului"), "scandal" );
	deepEqual( Stem("scandaluri"), "scandalur" );
	deepEqual( Stem("scandă"), "scand" );
	deepEqual( Stem("scap"), "scap" );
	deepEqual( Stem("scapă"), "scap" );
	deepEqual( Stem("scape"), "scap" );
	deepEqual( Stem("scapi"), "scap" );
	deepEqual( Stem("scara"), "scar" );
	deepEqual( Stem("scară"), "scar" );
	deepEqual( Stem("scarpine"), "scarpin" );
	deepEqual( Stem("scaun"), "scaun" );
	deepEqual( Stem("scaune"), "scaun" );
	deepEqual( Stem("scaunele"), "scaun" );
	deepEqual( Stem("scaunul"), "scaun" );
	deepEqual( Stem("scaunului"), "scaun" );
	deepEqual( Stem("scâlciaseră"), "scâlciaser" );
	deepEqual( Stem("scâncesc"), "scânc" );
	deepEqual( Stem("scâncit"), "scâncit" );
	deepEqual( Stem("scâncite"), "scâncit" );
	deepEqual( Stem("scânduri"), "scândur" );
	deepEqual( Stem("scânteia"), "scântei" );
	deepEqual( Stem("scârboase"), "scârboas" );
	deepEqual( Stem("scădea"), "scăd" );
	deepEqual( Stem("scădere"), "scăd" );
	deepEqual( Stem("scăderi"), "scăder" );
	deepEqual( Stem("scăfârlie"), "scăfârl" );
	deepEqual( Stem("scăldat"), "scăldat" );
	deepEqual( Stem("scăldată"), "scăldat" );
	deepEqual( Stem("scăldate"), "scăldat" );
	deepEqual( Stem("scăpa"), "scăp" );
	deepEqual( Stem("scăpat"), "scăpat" );
	deepEqual( Stem("scăpaţi"), "scăp" );
	deepEqual( Stem("scăpăm"), "scăp" );
	deepEqual( Stem("scării"), "scăr" );
	deepEqual( Stem("scările"), "scăr" );
	deepEqual( Stem("scăzut"), "scăzut" );
	deepEqual( Stem("scăzută"), "scăzut" );
	deepEqual( Stem("scena"), "scen" );
	deepEqual( Stem("scenă"), "scen" );
	deepEqual( Stem("scene"), "scen" );
	deepEqual( Stem("scenele"), "scen" );
	deepEqual( Stem("sceptic"), "sceptic" );
	deepEqual( Stem("scepticism"), "scepticist" );
	deepEqual( Stem("scepticismul"), "scepticist" );
	deepEqual( Stem("scepticul"), "sceptic" );
	deepEqual( Stem("scevola"), "scevol" );
	deepEqual( Stem("scheler"), "scheler" );
	deepEqual( Stem("scheletul"), "schelet" );
	deepEqual( Stem("schema"), "schem" );
	deepEqual( Stem("schematic"), "schemat" );
	deepEqual( Stem("schematică"), "schemat" );
	deepEqual( Stem("schemă"), "schem" );
	deepEqual( Stem("schijă"), "schij" );
	deepEqual( Stem("schimb"), "schimb" );
	deepEqual( Stem("schimba"), "schimb" );
	deepEqual( Stem("schimbam"), "schimb" );
	deepEqual( Stem("schimbare"), "schimb" );
	deepEqual( Stem("schimbarea"), "schimb" );
	deepEqual( Stem("schimbase"), "schimb" );
	deepEqual( Stem("schimbat"), "schimbat" );
	deepEqual( Stem("schimbată"), "schimbat" );
	deepEqual( Stem("schimbate"), "schimbat" );
	deepEqual( Stem("schimbaţi"), "schimb" );
	deepEqual( Stem("schimbau"), "schimb" );
	deepEqual( Stem("schimbând"), "schimb" );
	deepEqual( Stem("schimbându"), "schimb" );
	deepEqual( Stem("schimbă"), "schimb" );
	deepEqual( Stem("schimbăm"), "schimb" );
	deepEqual( Stem("schimbări"), "schimbăr" );
	deepEqual( Stem("schimbării"), "schimbăr" );
	deepEqual( Stem("schimbările"), "schimbăr" );
	deepEqual( Stem("schimbărilor"), "schimbăr" );
	deepEqual( Stem("schimbe"), "schimb" );
	deepEqual( Stem("schimbul"), "schimb" );
	deepEqual( Stem("schimburi"), "schimbur" );
	deepEqual( Stem("schimonosirea"), "schimonos" );
	deepEqual( Stem("schitului"), "schit" );
	deepEqual( Stem("schiţat"), "schiţat" );
	deepEqual( Stem("schiţă"), "schiţ" );
	deepEqual( Stem("schlief"), "schlief" );
	deepEqual( Stem("schnorchen"), "schnorchen" );
	deepEqual( Stem("schopenhauer"), "schopenhauer" );
	deepEqual( Stem("schulpforta"), "schulpfort" );
	deepEqual( Stem("schweizer"), "schweizer" );
	deepEqual( Stem("sclav"), "sclav" );
	deepEqual( Stem("sclipitoare"), "sclipit" );
	deepEqual( Stem("scoală"), "scoal" );
	deepEqual( Stem("scoale"), "scoal" );
	deepEqual( Stem("scoarţă"), "scoarţ" );
	deepEqual( Stem("scoarţe"), "scoarţ" );
	deepEqual( Stem("scoasă"), "scoas" );
	deepEqual( Stem("scoase"), "scoas" );
	deepEqual( Stem("scoată"), "scoat" );
	deepEqual( Stem("scoate"), "scoat" );
	deepEqual( Stem("scoatem"), "scoat" );
	deepEqual( Stem("scoaţă"), "scoaţ" );
	deepEqual( Stem("scobirea"), "scob" );
	deepEqual( Stem("scobitoare"), "scobit" );
	deepEqual( Stem("scoboare"), "scoboar" );
	deepEqual( Stem("scocul"), "scoc" );
	deepEqual( Stem("scol"), "scol" );
	deepEqual( Stem("scolastică"), "scolast" );
	deepEqual( Stem("scolasticii"), "scolast" );
	deepEqual( Stem("scop"), "scop" );
	deepEqual( Stem("scormonind"), "scormon" );
	deepEqual( Stem("scornitură"), "scornit" );
	deepEqual( Stem("scorojit"), "scoroj" );
	deepEqual( Stem("scorojiţi"), "scoroj" );
	deepEqual( Stem("scorţoase"), "scorţoas" );
	deepEqual( Stem("scorţos"), "scorţos" );
	deepEqual( Stem("scos"), "scos" );
	deepEqual( Stem("scosese"), "sco" );
	deepEqual( Stem("scoşi"), "scoş" );
	deepEqual( Stem("scot"), "scot" );
	deepEqual( Stem("scotea"), "scot" );
	deepEqual( Stem("scoteau"), "scot" );
	deepEqual( Stem("scotocesc"), "scotoc" );
	deepEqual( Stem("scotocind"), "scotoc" );
	deepEqual( Stem("scotociri"), "scotocir" );
	deepEqual( Stem("scoţând"), "scoţ" );
	deepEqual( Stem("scoţi"), "scoţ" );
	deepEqual( Stem("scoţiene"), "scoţien" );
	deepEqual( Stem("scria"), "scri" );
	deepEqual( Stem("scriau"), "scriau" );
	deepEqual( Stem("scribe"), "scrib" );
	deepEqual( Stem("scribi"), "scrib" );
	deepEqual( Stem("scrie"), "scrie" );
	deepEqual( Stem("scrierii"), "scrier" );
	deepEqual( Stem("scrii"), "scri" );
	deepEqual( Stem("scriind"), "scriind" );
	deepEqual( Stem("scriitoare"), "scriitoar" );
	deepEqual( Stem("scriitor"), "scriitor" );
	deepEqual( Stem("scriitorii"), "scriitor" );
	deepEqual( Stem("scriitorul"), "scriitor" );
	deepEqual( Stem("scriitorului"), "scriitor" );
	deepEqual( Stem("scrijelat"), "scrijel" );
	deepEqual( Stem("scris"), "scris" );
	deepEqual( Stem("scrisă"), "scris" );
	deepEqual( Stem("scrise"), "scri" );
	deepEqual( Stem("scrisoare"), "scrisoar" );
	deepEqual( Stem("scrisoarea"), "scrisoar" );
	deepEqual( Stem("scrisori"), "scrisor" );
	deepEqual( Stem("scrisul"), "scris" );
	deepEqual( Stem("scriu"), "scriu" );
	deepEqual( Stem("scrobit"), "scrobit" );
	deepEqual( Stem("scrobită"), "scrobit" );
	deepEqual( Stem("scrumiera"), "scrumier" );
	deepEqual( Stem("scrumiere"), "scrumier" );
	deepEqual( Stem("scrumierele"), "scrumier" );
	deepEqual( Stem("scrupul"), "scrup" );
	deepEqual( Stem("scrupule"), "scrupul" );
	deepEqual( Stem("scrupulele"), "scrupul" );
	deepEqual( Stem("scrutează"), "scrut" );
	deepEqual( Stem("scrutin"), "scrutin" );
	deepEqual( Stem("scrutine"), "scrutin" );
	deepEqual( Stem("scrutinelor"), "scrutin" );
	deepEqual( Stem("scrutinurilor"), "scrutinur" );
	deepEqual( Stem("scufia"), "scuf" );
	deepEqual( Stem("scufiţă"), "scufiţ" );
	deepEqual( Stem("scufunda"), "scufund" );
	deepEqual( Stem("scufundare"), "scufund" );
	deepEqual( Stem("scufundarea"), "scufund" );
	deepEqual( Stem("scufundă"), "scufund" );
	deepEqual( Stem("scufundări"), "scufundăr" );
	deepEqual( Stem("scufunzi"), "scufunz" );
	deepEqual( Stem("scuipa"), "scuip" );
	deepEqual( Stem("scuipară"), "scuip" );
	deepEqual( Stem("scuipat"), "scuipat" );
	deepEqual( Stem("scula"), "scul" );
	deepEqual( Stem("sculat"), "sculat" );
	deepEqual( Stem("sculă"), "scul" );
	deepEqual( Stem("scule"), "scul" );
	deepEqual( Stem("sculelor"), "scul" );
	deepEqual( Stem("sculpta"), "sculpt" );
	deepEqual( Stem("sculptate"), "sculptat" );
	deepEqual( Stem("sculptează"), "sculpt" );
	deepEqual( Stem("sculptor"), "sculptor" );
	deepEqual( Stem("sculptură"), "sculpt" );
	deepEqual( Stem("sculpturi"), "sculptur" );
	deepEqual( Stem("scump"), "scump" );
	deepEqual( Stem("scumpă"), "scump" );
	deepEqual( Stem("scumpe"), "scump" );
	deepEqual( Stem("scumpesc"), "scump" );
	deepEqual( Stem("scumpire"), "scump" );
	deepEqual( Stem("scumpiri"), "scumpir" );
	deepEqual( Stem("scumpit"), "scumpit" );
	deepEqual( Stem("scund"), "scund" );
	deepEqual( Stem("scundă"), "scund" );
	deepEqual( Stem("scurgă"), "scurg" );
	deepEqual( Stem("scurge"), "scurg" );
	deepEqual( Stem("scurgere"), "scurg" );
	deepEqual( Stem("scurgerea"), "scurg" );
	deepEqual( Stem("scurs"), "scurs" );
	deepEqual( Stem("scurt"), "scurt" );
	deepEqual( Stem("scurtat"), "scurtat" );
	deepEqual( Stem("scurtă"), "scurt" );
	deepEqual( Stem("scurte"), "scurt" );
	deepEqual( Stem("scutite"), "scutit" );
	deepEqual( Stem("scutur"), "scutur" );
	deepEqual( Stem("scuturate"), "scutur" );
	deepEqual( Stem("scuturi"), "scutur" );
	deepEqual( Stem("scuza"), "scuz" );
	deepEqual( Stem("scuză"), "scuz" );
	deepEqual( Stem("scuze"), "scuz" );
	deepEqual( Stem("se"), "se" );
	deepEqual( Stem("seacă"), "seac" );
	deepEqual( Stem("seama"), "seam" );
	deepEqual( Stem("seamă"), "seam" );
	deepEqual( Stem("seamăn"), "seamăn" );
	deepEqual( Stem("seamănă"), "seamăn" );
	deepEqual( Stem("seara"), "sear" );
	deepEqual( Stem("seară"), "sear" );
	deepEqual( Stem("sec"), "sec" );
	deepEqual( Stem("secătuită"), "secătu" );
	deepEqual( Stem("sechsunddreissig"), "sechsunddreissig" );
	deepEqual( Stem("secol"), "secol" );
	deepEqual( Stem("secolele"), "secol" );
	deepEqual( Stem("secolul"), "secol" );
	deepEqual( Stem("secolului"), "secol" );
	deepEqual( Stem("secret"), "secret" );
	deepEqual( Stem("secretar"), "secretar" );
	deepEqual( Stem("secretarul"), "secretar" );
	deepEqual( Stem("secretarului"), "secretar" );
	deepEqual( Stem("secretă"), "secret" );
	deepEqual( Stem("secrete"), "secret" );
	deepEqual( Stem("secretează"), "secret" );
	deepEqual( Stem("secretul"), "secret" );
	deepEqual( Stem("sectar"), "sectar" );
	deepEqual( Stem("sectoare"), "sectoar" );
	deepEqual( Stem("secţie"), "secţ" );
	deepEqual( Stem("secţiunea"), "secţiun" );
	deepEqual( Stem("secţiunile"), "secţiun" );
	deepEqual( Stem("secundar"), "secundar" );
	deepEqual( Stem("secundară"), "secund" );
	deepEqual( Stem("secundare"), "secund" );
	deepEqual( Stem("secundarele"), "secund" );
	deepEqual( Stem("secundari"), "secundar" );
	deepEqual( Stem("secundă"), "secund" );
	deepEqual( Stem("secunde"), "secund" );
	deepEqual( Stem("secvenţă"), "secvenţ" );
	deepEqual( Stem("secvenţe"), "secvenţ" );
	deepEqual( Stem("sedentară"), "sedent" );
	deepEqual( Stem("seducţie"), "seducţ" );
	deepEqual( Stem("seducţiilor"), "seducţ" );
	deepEqual( Stem("sedus"), "sedus" );
	deepEqual( Stem("segmente"), "segment" );
	deepEqual( Stem("segmentului"), "segment" );
	deepEqual( Stem("sejurului"), "sejur" );
	deepEqual( Stem("selecta"), "select" );
	deepEqual( Stem("selectare"), "select" );
	deepEqual( Stem("selectat"), "select" );
	deepEqual( Stem("selectaţi"), "select" );
	deepEqual( Stem("selectează"), "select" );
	deepEqual( Stem("selectiv"), "select" );
	deepEqual( Stem("selectînd"), "selectînd" );
	deepEqual( Stem("selector"), "selector" );
	deepEqual( Stem("selectorul"), "selector" );
	deepEqual( Stem("selecţia"), "selecţ" );
	deepEqual( Stem("selecţii"), "selecţ" );
	deepEqual( Stem("selecţionare"), "selecţion" );
	deepEqual( Stem("selecţionat"), "selecţion" );
	deepEqual( Stem("selecţionează"), "selecţion" );
	deepEqual( Stem("selecţiuni"), "select" );
	deepEqual( Stem("selenară"), "selen" );
	deepEqual( Stem("semafoare"), "semafoar" );
	deepEqual( Stem("semafoarelor"), "semafoar" );
	deepEqual( Stem("semafor"), "semafor" );
	deepEqual( Stem("semantic"), "semant" );
	deepEqual( Stem("semantica"), "semant" );
	deepEqual( Stem("semantică"), "semant" );
	deepEqual( Stem("semăna"), "semăn" );
	deepEqual( Stem("semănată"), "semăn" );
	deepEqual( Stem("semănînd"), "semănînd" );
	deepEqual( Stem("semeaţă"), "semeaţ" );
	deepEqual( Stem("semene"), "semen" );
	deepEqual( Stem("semeni"), "semen" );
	deepEqual( Stem("semenii"), "semen" );
	deepEqual( Stem("semenul"), "semen" );
	deepEqual( Stem("semenului"), "semen" );
	deepEqual( Stem("semeţ"), "semeţ" );
	deepEqual( Stem("semeţie"), "semeţ" );
	deepEqual( Stem("semidocţi"), "semidocţ" );
	deepEqual( Stem("seminar"), "seminar" );
	deepEqual( Stem("semipercutantă"), "semipercut" );
	deepEqual( Stem("semitonuri"), "semitonur" );
	deepEqual( Stem("semn"), "semn" );
	deepEqual( Stem("semnal"), "semnal" );
	deepEqual( Stem("semnalată"), "semnal" );
	deepEqual( Stem("semnale"), "semnal" );
	deepEqual( Stem("semnalează"), "semnal" );
	deepEqual( Stem("semnalul"), "semnal" );
	deepEqual( Stem("semnat"), "semnat" );
	deepEqual( Stem("semnate"), "semnat" );
	deepEqual( Stem("semnând"), "semn" );
	deepEqual( Stem("semnării"), "semnăr" );
	deepEqual( Stem("semnătura"), "semnătur" );
	deepEqual( Stem("semnăturile"), "semnătur" );
	deepEqual( Stem("semne"), "semn" );
	deepEqual( Stem("semnează"), "semn" );
	deepEqual( Stem("semnele"), "semn" );
	deepEqual( Stem("semneze"), "semn" );
	deepEqual( Stem("semnificativ"), "semnific" );
	deepEqual( Stem("semnificativă"), "semnific" );
	deepEqual( Stem("semnificaţie"), "semnific" );
	deepEqual( Stem("semnifică"), "semnif" );
	deepEqual( Stem("semnul"), "semn" );
	deepEqual( Stem("senat"), "senat" );
	deepEqual( Stem("senin"), "senin" );
	deepEqual( Stem("senină"), "senin" );
	deepEqual( Stem("seninătate"), "seninăt" );
	deepEqual( Stem("seninătatea"), "seninăt" );
	deepEqual( Stem("sens"), "sens" );
	deepEqual( Stem("sensibil"), "sensibil" );
	deepEqual( Stem("sensibilă"), "sensibil" );
	deepEqual( Stem("sensibile"), "sensib" );
	deepEqual( Stem("sensibili"), "sensibil" );
	deepEqual( Stem("sensibilitate"), "sensibil" );
	deepEqual( Stem("sensibilitatea"), "sensibil" );
	deepEqual( Stem("sensibilităţii"), "sensibil" );
	deepEqual( Stem("sensibilite"), "sensibil" );
	deepEqual( Stem("sensibilizat"), "sensibiliz" );
	deepEqual( Stem("sensu"), "sensu" );
	deepEqual( Stem("sensul"), "sens" );
	deepEqual( Stem("sensului"), "sens" );
	deepEqual( Stem("sensuri"), "sensur" );
	deepEqual( Stem("sensurile"), "sensur" );
	deepEqual( Stem("sentiment"), "sentiment" );
	deepEqual( Stem("sentimental"), "sentimental" );
	deepEqual( Stem("sentimentală"), "sentimental" );
	deepEqual( Stem("sentimentale"), "sentimental" );
	deepEqual( Stem("sentimentali"), "sentimental" );
	deepEqual( Stem("sentimentalism"), "sentimentalist" );
	deepEqual( Stem("sentimentalismul"), "sentimentalist" );
	deepEqual( Stem("sentimente"), "sentiment" );
	deepEqual( Stem("sentimentele"), "sentiment" );
	deepEqual( Stem("sentimentelor"), "sentiment" );
	deepEqual( Stem("sentimentul"), "sentiment" );
	deepEqual( Stem("sentimentului"), "sentiment" );
	deepEqual( Stem("sentinţă"), "sentinţ" );
	deepEqual( Stem("sentinţe"), "sentinţ" );
	deepEqual( Stem("senzaţia"), "senz" );
	deepEqual( Stem("senzaţie"), "senz" );
	deepEqual( Stem("senzaţiei"), "senz" );
	deepEqual( Stem("senzaţii"), "senz" );
	deepEqual( Stem("senzaţiile"), "senz" );
	deepEqual( Stem("senzaţiilor"), "senz" );
	deepEqual( Stem("senzaţionale"), "senzaţional" );
	deepEqual( Stem("senzaţiune"), "senzat" );
	deepEqual( Stem("senzaţiunea"), "senzat" );
	deepEqual( Stem("senzaţiunile"), "senzat" );
	deepEqual( Stem("senzoriale"), "senzorial" );
	deepEqual( Stem("senzual"), "senzual" );
	deepEqual( Stem("senzualism"), "senzualist" );
	deepEqual( Stem("senzualitate"), "senzual" );
	deepEqual( Stem("separat"), "separ" );
	deepEqual( Stem("separată"), "separ" );
	deepEqual( Stem("separatiste"), "separatist" );
	deepEqual( Stem("separaţi"), "separ" );
	deepEqual( Stem("separaţia"), "separ" );
	deepEqual( Stem("septembrie"), "septembr" );
	deepEqual( Stem("septuagenarilor"), "septuagenar" );
	deepEqual( Stem("serbare"), "serb" );
	deepEqual( Stem("sergent"), "sergent" );
	deepEqual( Stem("sergentul"), "sergent" );
	deepEqual( Stem("sergentului"), "sergent" );
	deepEqual( Stem("sergenţi"), "sergenţ" );
	deepEqual( Stem("sergenţii"), "sergenţ" );
	deepEqual( Stem("seri"), "ser" );
	deepEqual( Stem("seria"), "seri" );
	deepEqual( Stem("serie"), "ser" );
	deepEqual( Stem("serii"), "ser" );
	deepEqual( Stem("seriile"), "ser" );
	deepEqual( Stem("serioasă"), "serioas" );
	deepEqual( Stem("serioase"), "serioas" );
	deepEqual( Stem("serios"), "serios" );
	deepEqual( Stem("serioşi"), "serioş" );
	deepEqual( Stem("seriozitatea"), "serioz" );
	deepEqual( Stem("sertare"), "sert" );
	deepEqual( Stem("sertarele"), "sert" );
	deepEqual( Stem("servea"), "serv" );
	deepEqual( Stem("servească"), "serv" );
	deepEqual( Stem("servesc"), "serv" );
	deepEqual( Stem("serveşte"), "serv" );
	deepEqual( Stem("servi"), "serv" );
	deepEqual( Stem("servicii"), "servic" );
	deepEqual( Stem("serviciile"), "servic" );
	deepEqual( Stem("serviciu"), "serviciu" );
	deepEqual( Stem("serviciul"), "servic" );
	deepEqual( Stem("serviciului"), "servic" );
	deepEqual( Stem("servil"), "servil" );
	deepEqual( Stem("servilitate"), "servil" );
	deepEqual( Stem("servise"), "serv" );
	deepEqual( Stem("servit"), "servit" );
	deepEqual( Stem("servitoare"), "servit" );
	deepEqual( Stem("servitoarea"), "servit" );
	deepEqual( Stem("servitoarei"), "servitoare" );
	deepEqual( Stem("servitor"), "servit" );
	deepEqual( Stem("servitorului"), "servit" );
	deepEqual( Stem("servituţii"), "servituţ" );
	deepEqual( Stem("sesiunea"), "sesiun" );
	deepEqual( Stem("sete"), "set" );
	deepEqual( Stem("setea"), "set" );
	deepEqual( Stem("setoasă"), "setoas" );
	deepEqual( Stem("seu"), "seu" );
	deepEqual( Stem("seva"), "sev" );
	deepEqual( Stem("sevă"), "sev" );
	deepEqual( Stem("sever"), "sever" );
	deepEqual( Stem("severă"), "sever" );
	deepEqual( Stem("severe"), "sever" );
	deepEqual( Stem("severitate"), "sever" );
	deepEqual( Stem("severitatea"), "sever" );
	deepEqual( Stem("sexe"), "sex" );
	deepEqual( Stem("sexual"), "sexual" );
	deepEqual( Stem("sexuală"), "sexual" );
	deepEqual( Stem("sexuale"), "sexual" );
	deepEqual( Stem("sexualiste"), "sexualist" );
	deepEqual( Stem("sexul"), "sex" );
	deepEqual( Stem("sezion"), "sezion" );
	deepEqual( Stem("seziune"), "seziun" );
	deepEqual( Stem("sfanţ"), "sfanţ" );
	deepEqual( Stem("sfat"), "sfat" );
	deepEqual( Stem("sfatul"), "sfat" );
	deepEqual( Stem("sfaturi"), "sfatur" );
	deepEqual( Stem("sfânt"), "sfânt" );
	deepEqual( Stem("sfânta"), "sfânt" );
	deepEqual( Stem("sfântă"), "sfânt" );
	deepEqual( Stem("sfântu"), "sfântu" );
	deepEqual( Stem("sfântul"), "sfânt" );
	deepEqual( Stem("sfârşeală"), "sfârşeal" );
	deepEqual( Stem("sfârşească"), "sfârş" );
	deepEqual( Stem("sfârşesc"), "sfârş" );
	deepEqual( Stem("sfârşeşte"), "sfârş" );
	deepEqual( Stem("sfârşi"), "sfârş" );
	deepEqual( Stem("sfârşise"), "sfârş" );
	deepEqual( Stem("sfârşit"), "sfârşit" );
	deepEqual( Stem("sfârşită"), "sfârşit" );
	deepEqual( Stem("sfârşite"), "sfârşit" );
	deepEqual( Stem("sfârşitul"), "sfârşit" );
	deepEqual( Stem("sfârşiturile"), "sfârşitur" );
	deepEqual( Stem("sfârşiţi"), "sfârş" );
	deepEqual( Stem("sfâşia"), "sfâş" );
	deepEqual( Stem("sfâşiat"), "sfâşiat" );
	deepEqual( Stem("sfâşiată"), "sfâşiat" );
	deepEqual( Stem("sfâşie"), "sfâş" );
	deepEqual( Stem("sfâşietor"), "sfâşietor" );
	deepEqual( Stem("sfărâmat"), "sfărâm" );
	deepEqual( Stem("sfărâmate"), "sfărâm" );
	deepEqual( Stem("sfărâmături"), "sfărâmătur" );
	deepEqual( Stem("sfărâme"), "sfărâm" );
	deepEqual( Stem("sfătos"), "sfătos" );
	deepEqual( Stem("sfătuiesc"), "sfătui" );
	deepEqual( Stem("sfătuieşte"), "sfătui" );
	deepEqual( Stem("sfeclă"), "sfecl" );
	deepEqual( Stem("sfera"), "sfer" );
	deepEqual( Stem("sferă"), "sfer" );
	deepEqual( Stem("sfere"), "sfer" );
	deepEqual( Stem("sferei"), "sfere" );
	deepEqual( Stem("sferele"), "sfer" );
	deepEqual( Stem("sferic"), "sferic" );
	deepEqual( Stem("sferică"), "sferic" );
	deepEqual( Stem("sfert"), "sfert" );
	deepEqual( Stem("sfertul"), "sfert" );
	deepEqual( Stem("sferturi"), "sfertur" );
	deepEqual( Stem("sfiala"), "sfial" );
	deepEqual( Stem("sfială"), "sfial" );
	deepEqual( Stem("sfiiciune"), "sfiiciun" );
	deepEqual( Stem("sfinte"), "sfint" );
	deepEqual( Stem("sfinţenie"), "sfinţen" );
	deepEqual( Stem("sfinţii"), "sfinţ" );
	deepEqual( Stem("sfinţilor"), "sfinţ" );
	deepEqual( Stem("sfinţite"), "sfinţit" );
	deepEqual( Stem("sfioasă"), "sfioas" );
	deepEqual( Stem("sfioase"), "sfioas" );
	deepEqual( Stem("sfios"), "sfios" );
	deepEqual( Stem("sfînt"), "sfînt" );
	deepEqual( Stem("sfîrc"), "sfîrc" );
	deepEqual( Stem("sfîrşeau"), "sfîrş" );
	deepEqual( Stem("sfîrşesc"), "sfîrş" );
	deepEqual( Stem("sfîrşeşte"), "sfîrş" );
	deepEqual( Stem("sfîrşi"), "sfîrş" );
	deepEqual( Stem("sfîrşind"), "sfîrş" );
	deepEqual( Stem("sfîrşirea"), "sfîrş" );
	deepEqual( Stem("sfîrşit"), "sfîrşit" );
	deepEqual( Stem("sfîrşită"), "sfîrşit" );
	deepEqual( Stem("sfîrtecat"), "sfîrtec" );
	deepEqual( Stem("sfîşia"), "sfîş" );
	deepEqual( Stem("sfîşiat"), "sfîşiat" );
	deepEqual( Stem("sfîşierii"), "sfîşier" );
	deepEqual( Stem("sfoară"), "sfoar" );
	deepEqual( Stem("sforăitoare"), "sforăit" );
	deepEqual( Stem("sforăitului"), "sforăit" );
	deepEqual( Stem("sfori"), "sfor" );
	deepEqual( Stem("sforţa"), "sforţ" );
	deepEqual( Stem("sforţare"), "sforţ" );
	deepEqual( Stem("sforţări"), "sforţăr" );
	deepEqual( Stem("sforţările"), "sforţăr" );
	deepEqual( Stem("sfredeli"), "sfredel" );
	deepEqual( Stem("sfrijit"), "sfrijit" );
	deepEqual( Stem("sfruntată"), "sfruntat" );
	deepEqual( Stem("sfruntate"), "sfruntat" );
	deepEqual( Stem("shakespeare"), "shakespear" );
	deepEqual( Stem("shostacovitch"), "shostacovitch" );
	deepEqual( Stem("shotokan"), "shotokan" );
	deepEqual( Stem("shylock"), "shylock" );
	deepEqual( Stem("si"), "si" );
	deepEqual( Stem("siberia"), "siber" );
	deepEqual( Stem("sibilinic"), "sibilin" );
	deepEqual( Stem("sibiu"), "sibiu" );
	deepEqual( Stem("sich"), "sich" );
	deepEqual( Stem("sidef"), "sidef" );
	deepEqual( Stem("sidneyului"), "sidney" );
	deepEqual( Stem("sie"), "sie" );
	deepEqual( Stem("siesta"), "siest" );
	deepEqual( Stem("siestă"), "siest" );
	deepEqual( Stem("sighişoara"), "sighişoar" );
	deepEqual( Stem("sigiliu"), "sigiliu" );
	deepEqual( Stem("sigismund"), "sigismund" );
	deepEqual( Stem("sigur"), "sigur" );
	deepEqual( Stem("siguranţa"), "siguranţ" );
	deepEqual( Stem("siguranţă"), "siguranţ" );
	deepEqual( Stem("sigură"), "sigur" );
	deepEqual( Stem("sigure"), "sigur" );
	deepEqual( Stem("siguri"), "sigur" );
	deepEqual( Stem("sila"), "sil" );
	deepEqual( Stem("silabă"), "silab" );
	deepEqual( Stem("silabe"), "silab" );
	deepEqual( Stem("silabele"), "silab" );
	deepEqual( Stem("silabisea"), "silab" );
	deepEqual( Stem("silabisind"), "silabis" );
	deepEqual( Stem("silă"), "sil" );
	deepEqual( Stem("silească"), "sileasc" );
	deepEqual( Stem("silesc"), "silesc" );
	deepEqual( Stem("siliciului"), "silic" );
	deepEqual( Stem("silindu"), "silindu" );
	deepEqual( Stem("silinţele"), "silinţ" );
	deepEqual( Stem("silit"), "silit" );
	deepEqual( Stem("silită"), "silit" );
	deepEqual( Stem("silnică"), "silnic" );
	deepEqual( Stem("silnicie"), "silnic" );
	deepEqual( Stem("silueta"), "siluet" );
	deepEqual( Stem("siluetă"), "siluet" );
	deepEqual( Stem("siluete"), "siluet" );
	deepEqual( Stem("siluetele"), "siluet" );
	deepEqual( Stem("siluieşti"), "silui" );
	deepEqual( Stem("siluindu"), "silu" );
	deepEqual( Stem("siluirea"), "silu" );
	deepEqual( Stem("siluit"), "siluit" );
	deepEqual( Stem("siluitor"), "siluit" );
	deepEqual( Stem("simbioză"), "simbioz" );
	deepEqual( Stem("simboalele"), "simboal" );
	deepEqual( Stem("simboalelor"), "simboal" );
	deepEqual( Stem("simbolic"), "simbol" );
	deepEqual( Stem("simbolică"), "simbol" );
	deepEqual( Stem("simbolice"), "simbol" );
	deepEqual( Stem("simbolizează"), "simboliz" );
	deepEqual( Stem("simbolului"), "simbol" );
	deepEqual( Stem("simboluri"), "simbolur" );
	deepEqual( Stem("simfonic"), "simfon" );
	deepEqual( Stem("simfonică"), "simfon" );
	deepEqual( Stem("simpatic"), "simpat" );
	deepEqual( Stem("simpatie"), "simpat" );
	deepEqual( Stem("simpatizat"), "simpatiz" );
	deepEqual( Stem("simpla"), "simpl" );
	deepEqual( Stem("simplă"), "simpl" );
	deepEqual( Stem("simple"), "simpl" );
	deepEqual( Stem("simplei"), "simple" );
	deepEqual( Stem("simplele"), "simpl" );
	deepEqual( Stem("simpli"), "simpl" );
	deepEqual( Stem("simplicitatea"), "simplic" );
	deepEqual( Stem("simplific"), "simplif" );
	deepEqual( Stem("simplificate"), "simplific" );
	deepEqual( Stem("simplifică"), "simplif" );
	deepEqual( Stem("simplismul"), "simplism" );
	deepEqual( Stem("simplist"), "simplist" );
	deepEqual( Stem("simplistă"), "simplist" );
	deepEqual( Stem("simpliste"), "simplist" );
	deepEqual( Stem("simplişti"), "simplişt" );
	deepEqual( Stem("simplitate"), "simplitat" );
	deepEqual( Stem("simplu"), "simplu" );
	deepEqual( Stem("simplul"), "simpl" );
	deepEqual( Stem("simptom"), "simptom" );
	deepEqual( Stem("simptomatic"), "simptomat" );
	deepEqual( Stem("simptomatică"), "simptomat" );
	deepEqual( Stem("simt"), "simt" );
	deepEqual( Stem("simtă"), "simt" );
	deepEqual( Stem("simte"), "simt" );
	deepEqual( Stem("simţ"), "simţ" );
	deepEqual( Stem("simţă"), "simţ" );
	deepEqual( Stem("simţăminte"), "simţămint" );
	deepEqual( Stem("simţea"), "simţ" );
	deepEqual( Stem("simţeai"), "simţ" );
	deepEqual( Stem("simţeam"), "simţ" );
	deepEqual( Stem("simţeau"), "simţ" );
	deepEqual( Stem("simţi"), "simţ" );
	deepEqual( Stem("simţim"), "simţ" );
	deepEqual( Stem("simţind"), "simţ" );
	deepEqual( Stem("simţindu"), "simţ" );
	deepEqual( Stem("simţirea"), "simţ" );
	deepEqual( Stem("simţiri"), "simţir" );
	deepEqual( Stem("simţit"), "simţit" );
	deepEqual( Stem("simţită"), "simţit" );
	deepEqual( Stem("simţitoare"), "simţit" );
	deepEqual( Stem("simţitori"), "simţit" );
	deepEqual( Stem("simţiţi"), "simţ" );
	deepEqual( Stem("simţul"), "simţ" );
	deepEqual( Stem("simţului"), "simţ" );
	deepEqual( Stem("simţuri"), "simţur" );
	deepEqual( Stem("simţurile"), "simţur" );
	deepEqual( Stem("simţurilor"), "simţur" );
	deepEqual( Stem("simulează"), "simul" );
	deepEqual( Stem("simultan"), "simultan" );
	deepEqual( Stem("sinaia"), "sinai" );
	deepEqual( Stem("sincer"), "sincer" );
	deepEqual( Stem("sinceră"), "sincer" );
	deepEqual( Stem("sincere"), "sinc" );
	deepEqual( Stem("sinceri"), "sincer" );
	deepEqual( Stem("sinceritate"), "sincer" );
	deepEqual( Stem("sincerităţii"), "sincer" );
	deepEqual( Stem("sincerităţile"), "sincer" );
	deepEqual( Stem("sinchisească"), "sinchis" );
	deepEqual( Stem("sine"), "sin" );
	deepEqual( Stem("sinea"), "sin" );
	deepEqual( Stem("singular"), "singular" );
	deepEqual( Stem("singur"), "singur" );
	deepEqual( Stem("singura"), "singur" );
	deepEqual( Stem("singuratice"), "singurat" );
	deepEqual( Stem("singuratici"), "singurat" );
	deepEqual( Stem("singură"), "sing" );
	deepEqual( Stem("singurătate"), "singurăt" );
	deepEqual( Stem("singurătatea"), "singurăt" );
	deepEqual( Stem("singure"), "singur" );
	deepEqual( Stem("singurele"), "singur" );
	deepEqual( Stem("singuri"), "singur" );
	deepEqual( Stem("singurii"), "singur" );
	deepEqual( Stem("singurul"), "singur" );
	deepEqual( Stem("sinistră"), "sinistr" );
	deepEqual( Stem("sinistru"), "sinistru" );
	deepEqual( Stem("sinoadele"), "sinoad" );
	deepEqual( Stem("sintetic"), "sintet" );
	deepEqual( Stem("sintetică"), "sintet" );
	deepEqual( Stem("sintetice"), "sintet" );
	deepEqual( Stem("sinteza"), "sintez" );
	deepEqual( Stem("sinteză"), "sintez" );
	deepEqual( Stem("sinucid"), "sinucid" );
	deepEqual( Stem("sinucidă"), "sinucid" );
	deepEqual( Stem("sinucide"), "sinucid" );
	deepEqual( Stem("sinucigaş"), "sinucigaş" );
	deepEqual( Stem("sirenelor"), "siren" );
	deepEqual( Stem("siscovitz"), "siscovitz" );
	deepEqual( Stem("sistem"), "sist" );
	deepEqual( Stem("sistematic"), "sistemat" );
	deepEqual( Stem("sistematica"), "sistemat" );
	deepEqual( Stem("sistematică"), "sistemat" );
	deepEqual( Stem("sistematizat"), "sistematiz" );
	deepEqual( Stem("sistematizate"), "sistematiz" );
	deepEqual( Stem("sistematizăm"), "sistematiz" );
	deepEqual( Stem("sistematizării"), "sistematizăr" );
	deepEqual( Stem("sistemă"), "sistem" );
	deepEqual( Stem("sisteme"), "sistem" );
	deepEqual( Stem("sistemele"), "sistem" );
	deepEqual( Stem("sistemelor"), "sistem" );
	deepEqual( Stem("sistemul"), "sist" );
	deepEqual( Stem("sistemului"), "sist" );
	deepEqual( Stem("situaţi"), "situ" );
	deepEqual( Stem("situaţia"), "situ" );
	deepEqual( Stem("situaţie"), "situ" );
	deepEqual( Stem("situaţiei"), "situ" );
	deepEqual( Stem("situaţii"), "situ" );
	deepEqual( Stem("situaţiile"), "situ" );
	deepEqual( Stem("situaţiune"), "situat" );
	deepEqual( Stem("situaţiunea"), "situat" );
	deepEqual( Stem("sixtină"), "sixtin" );
	deepEqual( Stem("slab"), "slab" );
	deepEqual( Stem("slabă"), "slab" );
	deepEqual( Stem("slabe"), "slab" );
	deepEqual( Stem("slabele"), "slab" );
	deepEqual( Stem("slabi"), "slab" );
	deepEqual( Stem("slatina"), "slatin" );
	deepEqual( Stem("slav"), "slav" );
	deepEqual( Stem("slavă"), "slav" );
	deepEqual( Stem("slave"), "slav" );
	deepEqual( Stem("slavii"), "slav" );
	deepEqual( Stem("slăbiciune"), "slăbiciun" );
	deepEqual( Stem("slăbiciunea"), "slăbiciun" );
	deepEqual( Stem("slăbire"), "slăb" );
	deepEqual( Stem("slăbise"), "slăb" );
	deepEqual( Stem("slăbisem"), "slăb" );
	deepEqual( Stem("slăbit"), "slăbit" );
	deepEqual( Stem("sleeping"), "sleeping" );
	deepEqual( Stem("sleit"), "sleit" );
	deepEqual( Stem("sleitoare"), "sleitoar" );
	deepEqual( Stem("sleiţi"), "sle" );
	deepEqual( Stem("slobodă"), "slobod" );
	deepEqual( Stem("slovele"), "slov" );
	deepEqual( Stem("slugă"), "slug" );
	deepEqual( Stem("slugeru"), "slugeru" );
	deepEqual( Stem("slujba"), "slujb" );
	deepEqual( Stem("slujbă"), "slujb" );
	deepEqual( Stem("slujea"), "sluj" );
	deepEqual( Stem("slujesc"), "sluj" );
	deepEqual( Stem("slujeşte"), "sluj" );
	deepEqual( Stem("sluji"), "sluj" );
	deepEqual( Stem("slujit"), "slujit" );
	deepEqual( Stem("slută"), "slut" );
	deepEqual( Stem("sluţenia"), "sluţen" );
	deepEqual( Stem("sluţenie"), "sluţen" );
	deepEqual( Stem("sluţi"), "sluţ" );
	deepEqual( Stem("sluţită"), "sluţit" );
	deepEqual( Stem("smalţ"), "smalţ" );
	deepEqual( Stem("smintit"), "smintit" );
	deepEqual( Stem("smintita"), "smintit" );
	deepEqual( Stem("smoc"), "smoc" );
	deepEqual( Stem("smocuri"), "smocur" );
	deepEqual( Stem("smocurile"), "smocur" );
	deepEqual( Stem("smucea"), "smuc" );
	deepEqual( Stem("smucesc"), "smuc" );
	deepEqual( Stem("smucit"), "smucit" );
	deepEqual( Stem("smulg"), "smulg" );
	deepEqual( Stem("smulgă"), "smulg" );
	deepEqual( Stem("smulgeţi"), "smulg" );
	deepEqual( Stem("smuls"), "smuls" );
	deepEqual( Stem("smulse"), "smul" );
	deepEqual( Stem("snob"), "snob" );
	deepEqual( Stem("snobii"), "snob" );
	deepEqual( Stem("snop"), "snop" );
	deepEqual( Stem("snopul"), "snop" );
	deepEqual( Stem("so"), "so" );
	deepEqual( Stem("soacră"), "soacr" );
	deepEqual( Stem("soare"), "soar" );
	deepEqual( Stem("soarele"), "soar" );
	deepEqual( Stem("soarelui"), "soarel" );
	deepEqual( Stem("soarta"), "soart" );
	deepEqual( Stem("soba"), "sob" );
	deepEqual( Stem("sociabil"), "sociabil" );
	deepEqual( Stem("sociabilitate"), "sociabil" );
	deepEqual( Stem("sociabilitatea"), "sociabil" );
	deepEqual( Stem("social"), "social" );
	deepEqual( Stem("socială"), "social" );
	deepEqual( Stem("sociale"), "social" );
	deepEqual( Stem("sociali"), "social" );
	deepEqual( Stem("socialism"), "socialist" );
	deepEqual( Stem("socialismul"), "socialist" );
	deepEqual( Stem("socialismului"), "socialist" );
	deepEqual( Stem("socialist"), "socialist" );
	deepEqual( Stem("socialiste"), "socialist" );
	deepEqual( Stem("socialiştii"), "socialist" );
	deepEqual( Stem("societate"), "societ" );
	deepEqual( Stem("societatea"), "societ" );
	deepEqual( Stem("societăţi"), "societăţ" );
	deepEqual( Stem("societăţii"), "societăţ" );
	deepEqual( Stem("societăţile"), "societăţ" );
	deepEqual( Stem("societăţilor"), "societăţ" );
	deepEqual( Stem("sociologia"), "sociolog" );
	deepEqual( Stem("sociologic"), "sociolog" );
	deepEqual( Stem("sociologică"), "sociolog" );
	deepEqual( Stem("sociologie"), "sociolog" );
	deepEqual( Stem("sociologiei"), "sociolog" );
	deepEqual( Stem("soclu"), "soclu" );
	deepEqual( Stem("socoată"), "socoat" );
	deepEqual( Stem("socoate"), "socoat" );
	deepEqual( Stem("socot"), "socot" );
	deepEqual( Stem("socotea"), "socot" );
	deepEqual( Stem("socoteala"), "socoteal" );
	deepEqual( Stem("socoteală"), "socoteal" );
	deepEqual( Stem("socoteam"), "socot" );
	deepEqual( Stem("socoteau"), "socot" );
	deepEqual( Stem("socoteli"), "socotel" );
	deepEqual( Stem("socotelile"), "socotel" );
	deepEqual( Stem("socotesc"), "socot" );
	deepEqual( Stem("socoteşte"), "socot" );
	deepEqual( Stem("socotim"), "socot" );
	deepEqual( Stem("socotind"), "socot" );
	deepEqual( Stem("socotise"), "socot" );
	deepEqual( Stem("socotit"), "socot" );
	deepEqual( Stem("socotită"), "socot" );
	deepEqual( Stem("socotiţi"), "socot" );
	deepEqual( Stem("socoţi"), "socoţ" );
	deepEqual( Stem("socrat"), "socrat" );
	deepEqual( Stem("socrate"), "socrat" );
	deepEqual( Stem("sofa"), "sof" );
	deepEqual( Stem("sofale"), "sofal" );
	deepEqual( Stem("sofalei"), "sofale" );
	deepEqual( Stem("sofaua"), "sofau" );
	deepEqual( Stem("sofia"), "sofi" );
	deepEqual( Stem("sofica"), "sofic" );
	deepEqual( Stem("sofism"), "sofism" );
	deepEqual( Stem("sofisme"), "sofism" );
	deepEqual( Stem("sofismele"), "sofism" );
	deepEqual( Stem("sofismelor"), "sofism" );
	deepEqual( Stem("sofismului"), "sofism" );
	deepEqual( Stem("sofistică"), "sofist" );
	deepEqual( Stem("sofistul"), "sofist" );
	deepEqual( Stem("sofiştii"), "sofişt" );
	deepEqual( Stem("sofiştilor"), "sofişt" );
	deepEqual( Stem("soi"), "soi" );
	deepEqual( Stem("soiul"), "soi" );
	deepEqual( Stem("soiuri"), "soiur" );
	deepEqual( Stem("solar"), "solar" );
	deepEqual( Stem("solches"), "solches" );
	deepEqual( Stem("solda"), "sold" );
	deepEqual( Stem("soldat"), "soldat" );
	deepEqual( Stem("soldatul"), "soldat" );
	deepEqual( Stem("soldaţi"), "sold" );
	deepEqual( Stem("soldaţii"), "sold" );
	deepEqual( Stem("soldaţilor"), "sold" );
	deepEqual( Stem("soldăţească"), "soldăţ" );
	deepEqual( Stem("soldăţeşte"), "soldăţ" );
	deepEqual( Stem("soldele"), "sold" );
	deepEqual( Stem("solemn"), "solemn" );
	deepEqual( Stem("solemnă"), "solemn" );
	deepEqual( Stem("solemne"), "solemn" );
	deepEqual( Stem("solemnitate"), "solemn" );
	deepEqual( Stem("solid"), "solid" );
	deepEqual( Stem("solidaritate"), "solidar" );
	deepEqual( Stem("solidă"), "solid" );
	deepEqual( Stem("solidificată"), "solidific" );
	deepEqual( Stem("solie"), "sol" );
	deepEqual( Stem("solipsism"), "solipsist" );
	deepEqual( Stem("solipsismul"), "solipsist" );
	deepEqual( Stem("solipsismului"), "solipsist" );
	deepEqual( Stem("solipsist"), "solipsist" );
	deepEqual( Stem("solipsistă"), "solipsist" );
	deepEqual( Stem("solipsiste"), "solipsist" );
	deepEqual( Stem("solipsistul"), "solipsist" );
	deepEqual( Stem("solitare"), "solit" );
	deepEqual( Stem("sollest"), "sollest" );
	deepEqual( Stem("solniţa"), "solniţ" );
	deepEqual( Stem("soluţia"), "soluţ" );
	deepEqual( Stem("soluţie"), "soluţ" );
	deepEqual( Stem("soluţiile"), "soluţ" );
	deepEqual( Stem("soluţionare"), "soluţion" );
	deepEqual( Stem("soluţionarea"), "soluţion" );
	deepEqual( Stem("soluţionări"), "soluţionăr" );
	deepEqual( Stem("soluţiune"), "solut" );
	deepEqual( Stem("soluţiuni"), "solut" );
	deepEqual( Stem("soluţiunii"), "solut" );
	deepEqual( Stem("somată"), "somat" );
	deepEqual( Stem("sombart"), "sombart" );
	deepEqual( Stem("somme"), "somm" );
	deepEqual( Stem("somn"), "somn" );
	deepEqual( Stem("somnambul"), "somnamb" );
	deepEqual( Stem("somnoroase"), "somnor" );
	deepEqual( Stem("somnoroşilor"), "somnor" );
	deepEqual( Stem("somnul"), "somn" );
	deepEqual( Stem("somnului"), "somn" );
	deepEqual( Stem("soneriile"), "soner" );
	deepEqual( Stem("sonet"), "sonet" );
	deepEqual( Stem("sonia"), "soni" );
	deepEqual( Stem("sonor"), "sonor" );
	deepEqual( Stem("sonoră"), "sonor" );
	deepEqual( Stem("sonore"), "sonor" );
	deepEqual( Stem("sonoritate"), "sonor" );
	deepEqual( Stem("sonorităţi"), "sonor" );
	deepEqual( Stem("sonorităţilor"), "sonor" );
	deepEqual( Stem("sora"), "sor" );
	deepEqual( Stem("soră"), "sor" );
	deepEqual( Stem("sorbim"), "sorb" );
	deepEqual( Stem("sortează"), "sort" );
	deepEqual( Stem("sortimente"), "sortiment" );
	deepEqual( Stem("sortimentul"), "sortiment" );
	deepEqual( Stem("sortit"), "sortit" );
	deepEqual( Stem("sortită"), "sortit" );
	deepEqual( Stem("sortiţi"), "sort" );
	deepEqual( Stem("sorţi"), "sorţ" );
	deepEqual( Stem("sos"), "sos" );
	deepEqual( Stem("sosească"), "soseasc" );
	deepEqual( Stem("sosesc"), "sosesc" );
	deepEqual( Stem("soseşte"), "soseşt" );
	deepEqual( Stem("sosi"), "sos" );
	deepEqual( Stem("sosim"), "sos" );
	deepEqual( Stem("sosind"), "sosind" );
	deepEqual( Stem("sosire"), "sosir" );
	deepEqual( Stem("sosirea"), "sosir" );
	deepEqual( Stem("sosirii"), "sosir" );
	deepEqual( Stem("sosise"), "sosis" );
	deepEqual( Stem("sosisem"), "sosisem" );
	deepEqual( Stem("sosit"), "sosit" );
	deepEqual( Stem("sosiţi"), "sos" );
	deepEqual( Stem("sosul"), "sos" );
	deepEqual( Stem("soţ"), "soţ" );
	deepEqual( Stem("soţia"), "soţi" );
	deepEqual( Stem("soţie"), "soţ" );
	deepEqual( Stem("soţii"), "soţ" );
	deepEqual( Stem("soţiile"), "soţ" );
	deepEqual( Stem("soţioară"), "soţioar" );
	deepEqual( Stem("soţul"), "soţ" );
	deepEqual( Stem("sovietice"), "soviet" );
	deepEqual( Stem("sovietici"), "soviet" );
	deepEqual( Stem("spaima"), "spaim" );
	deepEqual( Stem("spaimă"), "spaim" );
	deepEqual( Stem("spală"), "spal" );
	deepEqual( Stem("spanacul"), "spanac" );
	deepEqual( Stem("spaniei"), "span" );
	deepEqual( Stem("spargă"), "sparg" );
	deepEqual( Stem("sparge"), "sparg" );
	deepEqual( Stem("spargem"), "sparg" );
	deepEqual( Stem("spart"), "spart" );
	deepEqual( Stem("spartachismului"), "spartachist" );
	deepEqual( Stem("spartă"), "spart" );
	deepEqual( Stem("sparte"), "spart" );
	deepEqual( Stem("spasm"), "spasm" );
	deepEqual( Stem("spate"), "spat" );
	deepEqual( Stem("spatele"), "spat" );
	deepEqual( Stem("spaţial"), "spaţial" );
	deepEqual( Stem("spaţială"), "spaţial" );
	deepEqual( Stem("spaţiale"), "spaţial" );
	deepEqual( Stem("spaţialitate"), "spaţial" );
	deepEqual( Stem("spaţialitatea"), "spaţial" );
	deepEqual( Stem("spaţiile"), "spaţ" );
	deepEqual( Stem("spaţiu"), "spaţiu" );
	deepEqual( Stem("spaţiul"), "spaţ" );
	deepEqual( Stem("spaţiului"), "spaţ" );
	deepEqual( Stem("spânzurat"), "spânzur" );
	deepEqual( Stem("spânzuraţi"), "spânzur" );
	deepEqual( Stem("spânzurătoare"), "spânzur" );
	deepEqual( Stem("spăl"), "spăl" );
	deepEqual( Stem("spăla"), "spăl" );
	deepEqual( Stem("spălat"), "spălat" );
	deepEqual( Stem("spălate"), "spălat" );
	deepEqual( Stem("spălături"), "spălătur" );
	deepEqual( Stem("spărtura"), "spărtur" );
	deepEqual( Stem("spărturi"), "spărtur" );
	deepEqual( Stem("spătarul"), "spătar" );
	deepEqual( Stem("specia"), "spec" );
	deepEqual( Stem("special"), "special" );
	deepEqual( Stem("specială"), "special" );
	deepEqual( Stem("speciale"), "special" );
	deepEqual( Stem("specialist"), "specialist" );
	deepEqual( Stem("specialiştii"), "specialist" );
	deepEqual( Stem("specialitate"), "special" );
	deepEqual( Stem("specie"), "spec" );
	deepEqual( Stem("speciei"), "spec" );
	deepEqual( Stem("specific"), "specif" );
	deepEqual( Stem("specifică"), "specif" );
	deepEqual( Stem("specificării"), "specificăr" );
	deepEqual( Stem("specifice"), "specif" );
	deepEqual( Stem("specificii"), "specif" );
	deepEqual( Stem("specii"), "spec" );
	deepEqual( Stem("specimenelor"), "specimen" );
	deepEqual( Stem("spectacol"), "spectacol" );
	deepEqual( Stem("spectacole"), "spectacol" );
	deepEqual( Stem("spectacolele"), "spectacol" );
	deepEqual( Stem("spectacolul"), "spectacol" );
	deepEqual( Stem("spectacolului"), "spectacol" );
	deepEqual( Stem("spectator"), "spectat" );
	deepEqual( Stem("spectatori"), "spectat" );
	deepEqual( Stem("speculat"), "specul" );
	deepEqual( Stem("speculativă"), "specul" );
	deepEqual( Stem("speculative"), "specul" );
	deepEqual( Stem("speculaţiei"), "specul" );
	deepEqual( Stem("speculaţiune"), "specul" );
	deepEqual( Stem("speculaţiuni"), "speculat" );
	deepEqual( Stem("speculaţiunile"), "speculat" );
	deepEqual( Stem("speculează"), "specul" );
	deepEqual( Stem("speculeze"), "specul" );
	deepEqual( Stem("spele"), "spel" );
	deepEqual( Stem("spencer"), "spencer" );
	deepEqual( Stem("spengler"), "spengler" );
	deepEqual( Stem("sper"), "sper" );
	deepEqual( Stem("spera"), "sper" );
	deepEqual( Stem("speram"), "sper" );
	deepEqual( Stem("speranţa"), "speranţ" );
	deepEqual( Stem("speranţe"), "speranţ" );
	deepEqual( Stem("speranţei"), "speranţe" );
	deepEqual( Stem("speranţele"), "speranţ" );
	deepEqual( Stem("speră"), "sper" );
	deepEqual( Stem("sperăm"), "sper" );
	deepEqual( Stem("speriat"), "speriat" );
	deepEqual( Stem("speriată"), "speriat" );
	deepEqual( Stem("speriaţi"), "sper" );
	deepEqual( Stem("sperie"), "sper" );
	deepEqual( Stem("sperioase"), "sperioas" );
	deepEqual( Stem("sperios"), "sperios" );
	deepEqual( Stem("sperioşi"), "sperioş" );
	deepEqual( Stem("speţa"), "speţ" );
	deepEqual( Stem("spinare"), "spin" );
	deepEqual( Stem("spinarea"), "spin" );
	deepEqual( Stem("spinării"), "spinăr" );
	deepEqual( Stem("spinoza"), "spinoz" );
	deepEqual( Stem("spinozismului"), "spinozist" );
	deepEqual( Stem("spinozist"), "spinozist" );
	deepEqual( Stem("spinozistă"), "spinozist" );
	deepEqual( Stem("spinoziste"), "spinozist" );
	deepEqual( Stem("spintecat"), "spintec" );
	deepEqual( Stem("spintecate"), "spintec" );
	deepEqual( Stem("spintecând"), "spintec" );
	deepEqual( Stem("spioana"), "spioan" );
	deepEqual( Stem("spioane"), "spioan" );
	deepEqual( Stem("spioanele"), "spioan" );
	deepEqual( Stem("spion"), "spion" );
	deepEqual( Stem("spionaj"), "spionaj" );
	deepEqual( Stem("spionat"), "spionat" );
	deepEqual( Stem("spionându"), "spion" );
	deepEqual( Stem("spionii"), "spion" );
	deepEqual( Stem("spionilor"), "spion" );
	deepEqual( Stem("spirală"), "spiral" );
	deepEqual( Stem("spirea"), "spir" );
	deepEqual( Stem("spirit"), "spirit" );
	deepEqual( Stem("spirite"), "spirit" );
	deepEqual( Stem("spiritele"), "spirit" );
	deepEqual( Stem("spiritism"), "spiritist" );
	deepEqual( Stem("spiritismului"), "spiritist" );
	deepEqual( Stem("spiritual"), "spiritual" );
	deepEqual( Stem("spirituală"), "spiritual" );
	deepEqual( Stem("spirituale"), "spiritual" );
	deepEqual( Stem("spiritul"), "spirit" );
	deepEqual( Stem("spiritului"), "spirit" );
	deepEqual( Stem("spital"), "spital" );
	deepEqual( Stem("spitale"), "spital" );
	deepEqual( Stem("spitalelor"), "spital" );
	deepEqual( Stem("spitalul"), "spital" );
	deepEqual( Stem("spitalurile"), "spitalur" );
	deepEqual( Stem("spitteler"), "spitteler" );
	deepEqual( Stem("spiţa"), "spiţ" );
	deepEqual( Stem("splendid"), "splendid" );
	deepEqual( Stem("splendida"), "splendid" );
	deepEqual( Stem("splendidă"), "splendid" );
	deepEqual( Stem("splendide"), "splendid" );
	deepEqual( Stem("spontană"), "spontan" );
	deepEqual( Stem("spontane"), "spontan" );
	deepEqual( Stem("spontaneitate"), "spontan" );
	deepEqual( Stem("spontaneitatea"), "spontan" );
	deepEqual( Stem("spor"), "spor" );
	deepEqual( Stem("sporească"), "spor" );
	deepEqual( Stem("sporesc"), "spor" );
	deepEqual( Stem("sporeşte"), "spor" );
	deepEqual( Stem("sporind"), "spor" );
	deepEqual( Stem("sporire"), "spor" );
	deepEqual( Stem("sporise"), "spor" );
	deepEqual( Stem("sporit"), "sporit" );
	deepEqual( Stem("sporită"), "sporit" );
	deepEqual( Stem("sport"), "sport" );
	deepEqual( Stem("sportivă"), "sportiv" );
	deepEqual( Stem("sportmen"), "sportmen" );
	deepEqual( Stem("sporturi"), "sportur" );
	deepEqual( Stem("sprâncene"), "sprâncen" );
	deepEqual( Stem("sprâncenele"), "sprâncen" );
	deepEqual( Stem("sprâncenelor"), "sprâncen" );
	deepEqual( Stem("spre"), "spre" );
	deepEqual( Stem("sprijin"), "sprijin" );
	deepEqual( Stem("sprijină"), "sprijin" );
	deepEqual( Stem("sprijinim"), "sprijin" );
	deepEqual( Stem("sprijinit"), "sprijin" );
	deepEqual( Stem("sprijinită"), "sprijin" );
	deepEqual( Stem("sprijiniţi"), "sprijin" );
	deepEqual( Stem("sprinten"), "sprinten" );
	deepEqual( Stem("sprintene"), "sprinten" );
	deepEqual( Stem("sprinteneala"), "sprinteneal" );
	deepEqual( Stem("spui"), "spu" );
	deepEqual( Stem("spuie"), "spui" );
	deepEqual( Stem("spumă"), "spum" );
	deepEqual( Stem("spumoasă"), "spumoas" );
	deepEqual( Stem("spumoase"), "spumoas" );
	deepEqual( Stem("spun"), "spun" );
	deepEqual( Stem("spunând"), "spun" );
	deepEqual( Stem("spunându"), "spun" );
	deepEqual( Stem("spună"), "spun" );
	deepEqual( Stem("spune"), "spun" );
	deepEqual( Stem("spunea"), "spun" );
	deepEqual( Stem("spuneai"), "spun" );
	deepEqual( Stem("spuneam"), "spun" );
	deepEqual( Stem("spuneau"), "spun" );
	deepEqual( Stem("spunei"), "spune" );
	deepEqual( Stem("spunem"), "spun" );
	deepEqual( Stem("spuneţi"), "spun" );
	deepEqual( Stem("spus"), "spus" );
	deepEqual( Stem("spusă"), "spus" );
	deepEqual( Stem("spuse"), "spu" );
	deepEqual( Stem("spusei"), "spu" );
	deepEqual( Stem("spusese"), "spu" );
	deepEqual( Stem("spusesem"), "spu" );
	deepEqual( Stem("spuzeală"), "spuzeal" );
	deepEqual( Stem("sta"), "sta" );
	deepEqual( Stem("stabil"), "stabil" );
	deepEqual( Stem("stabilea"), "stabil" );
	deepEqual( Stem("stabilească"), "stabil" );
	deepEqual( Stem("stabilesc"), "stabil" );
	deepEqual( Stem("stabileşte"), "stabil" );
	deepEqual( Stem("stabileşti"), "stabil" );
	deepEqual( Stem("stabili"), "stabil" );
	deepEqual( Stem("stabilim"), "stabil" );
	deepEqual( Stem("stabiliment"), "stabiliment" );
	deepEqual( Stem("stabilimente"), "stabiliment" );
	deepEqual( Stem("stabilimentelor"), "stabiliment" );
	deepEqual( Stem("stabilind"), "stabil" );
	deepEqual( Stem("stabilion"), "stabilion" );
	deepEqual( Stem("stabilire"), "stabil" );
	deepEqual( Stem("stabilirea"), "stabil" );
	deepEqual( Stem("stabilirii"), "stabilir" );
	deepEqual( Stem("stabilise"), "stabil" );
	deepEqual( Stem("stabilisem"), "stabil" );
	deepEqual( Stem("stabilit"), "stabil" );
	deepEqual( Stem("stabilitate"), "stabil" );
	deepEqual( Stem("stabilitateaen"), "stabilitateaen" );
	deepEqual( Stem("stabilitation"), "stabilitation" );
	deepEqual( Stem("stabilită"), "stabil" );
	deepEqual( Stem("stabilităţii"), "stabil" );
	deepEqual( Stem("stabilite"), "stabil" );
	deepEqual( Stem("stabiliţi"), "stabil" );
	deepEqual( Stem("stabiliza"), "stabiliz" );
	deepEqual( Stem("stabilizare"), "stabiliz" );
	deepEqual( Stem("stabilizarea"), "stabiliz" );
	deepEqual( Stem("stabilizatoare"), "stabiliz" );
	deepEqual( Stem("stabilizator"), "stabiliz" );
	deepEqual( Stem("stabilizeze"), "stabiliz" );
	deepEqual( Stem("stacojise"), "stacoj" );
	deepEqual( Stem("stacojiu"), "stacojiu" );
	deepEqual( Stem("stadii"), "stad" );
	deepEqual( Stem("stadioanele"), "stadioan" );
	deepEqual( Stem("stadion"), "stadion" );
	deepEqual( Stem("stadiu"), "stadiu" );
	deepEqual( Stem("stadiul"), "stad" );
	deepEqual( Stem("stafia"), "staf" );
	deepEqual( Stem("stafide"), "stafid" );
	deepEqual( Stem("stafie"), "staf" );
	deepEqual( Stem("stafii"), "staf" );
	deepEqual( Stem("stafiile"), "staf" );
	deepEqual( Stem("stai"), "sta" );
	deepEqual( Stem("stam"), "stam" );
	deepEqual( Stem("stanca"), "stanc" );
	deepEqual( Stem("stancii"), "stanc" );
	deepEqual( Stem("stand"), "stand" );
	deepEqual( Stem("stare"), "star" );
	deepEqual( Stem("starea"), "star" );
	deepEqual( Stem("stareţul"), "stareţ" );
	deepEqual( Stem("stat"), "stat" );
	deepEqual( Stem("statală"), "statal" );
	deepEqual( Stem("statale"), "statal" );
	deepEqual( Stem("state"), "stat" );
	deepEqual( Stem("statele"), "stat" );
	deepEqual( Stem("statelor"), "stat" );
	deepEqual( Stem("static"), "static" );
	deepEqual( Stem("statică"), "static" );
	deepEqual( Stem("staticismul"), "staticist" );
	deepEqual( Stem("statistic"), "statist" );
	deepEqual( Stem("statistica"), "statist" );
	deepEqual( Stem("statistică"), "statist" );
	deepEqual( Stem("statistici"), "statist" );
	deepEqual( Stem("statisticieni"), "statisticien" );
	deepEqual( Stem("statisticile"), "statist" );
	deepEqual( Stem("statornic"), "statorn" );
	deepEqual( Stem("statornică"), "statorn" );
	deepEqual( Stem("statornice"), "statorn" );
	deepEqual( Stem("statornicească"), "statornic" );
	deepEqual( Stem("statornicite"), "statornic" );
	deepEqual( Stem("statuetă"), "statuet" );
	deepEqual( Stem("statuie"), "statui" );
	deepEqual( Stem("statul"), "stat" );
	deepEqual( Stem("statului"), "stat" );
	deepEqual( Stem("statură"), "stat" );
	deepEqual( Stem("staţi"), "staţ" );
	deepEqual( Stem("staţia"), "staţ" );
	deepEqual( Stem("staţie"), "staţ" );
	deepEqual( Stem("staţii"), "staţ" );
	deepEqual( Stem("staţiile"), "staţ" );
	deepEqual( Stem("staţiona"), "staţion" );
	deepEqual( Stem("staţionar"), "staţionar" );
	deepEqual( Stem("staţionare"), "staţion" );
	deepEqual( Stem("staţioneze"), "staţion" );
	deepEqual( Stem("staţiune"), "staţiun" );
	deepEqual( Stem("staţiunea"), "staţiun" );
	deepEqual( Stem("stau"), "stau" );
	deepEqual( Stem("stâlp"), "stâlp" );
	deepEqual( Stem("stâlpi"), "stâlp" );
	deepEqual( Stem("stâna"), "stân" );
	deepEqual( Stem("stână"), "stân" );
	deepEqual( Stem("stâncă"), "stânc" );
	deepEqual( Stem("stânci"), "stânc" );
	deepEqual( Stem("stâncile"), "stânc" );
	deepEqual( Stem("stâncoase"), "stâncoas" );
	deepEqual( Stem("stâncos"), "stâncos" );
	deepEqual( Stem("stâncoşi"), "stâncoş" );
	deepEqual( Stem("stând"), "stând" );
	deepEqual( Stem("stâng"), "stâng" );
	deepEqual( Stem("stânga"), "stâng" );
	deepEqual( Stem("stângaci"), "stângac" );
	deepEqual( Stem("stângă"), "stâng" );
	deepEqual( Stem("stângăcia"), "stângăc" );
	deepEqual( Stem("stânjenea"), "stânjen" );
	deepEqual( Stem("stânjeni"), "stânjen" );
	deepEqual( Stem("stânjenire"), "stânjen" );
	deepEqual( Stem("stânjenit"), "stânjen" );
	deepEqual( Stem("stânjenita"), "stânjen" );
	deepEqual( Stem("stânjenitor"), "stânjen" );
	deepEqual( Stem("stârneşte"), "stârn" );
	deepEqual( Stem("stârnind"), "stârn" );
	deepEqual( Stem("stârnit"), "stârnit" );
	deepEqual( Stem("stă"), "stă" );
	deepEqual( Stem("stăm"), "stăm" );
	deepEqual( Stem("stănescu"), "stănescu" );
	deepEqual( Stem("stăpân"), "stăpân" );
	deepEqual( Stem("stăpâna"), "stăpân" );
	deepEqual( Stem("stăpână"), "stăpân" );
	deepEqual( Stem("stăpânea"), "stăpân" );
	deepEqual( Stem("stăpânească"), "stăpân" );
	deepEqual( Stem("stăpâneau"), "stăpân" );
	deepEqual( Stem("stăpânesc"), "stăpân" );
	deepEqual( Stem("stăpâneşte"), "stăpân" );
	deepEqual( Stem("stăpâni"), "stăpân" );
	deepEqual( Stem("stăpânii"), "stăpân" );
	deepEqual( Stem("stăpânim"), "stăpân" );
	deepEqual( Stem("stăpânindu"), "stăpân" );
	deepEqual( Stem("stăpânire"), "stăpân" );
	deepEqual( Stem("stăpânirea"), "stăpân" );
	deepEqual( Stem("stăpânirii"), "stăpânir" );
	deepEqual( Stem("stăpânit"), "stăpân" );
	deepEqual( Stem("stăpânită"), "stăpân" );
	deepEqual( Stem("stăpânitoare"), "stăpân" );
	deepEqual( Stem("stăpânul"), "stăpân" );
	deepEqual( Stem("stăpânului"), "stăpân" );
	deepEqual( Stem("stări"), "stăr" );
	deepEqual( Stem("stările"), "stăr" );
	deepEqual( Stem("stărilor"), "stăr" );
	deepEqual( Stem("stărui"), "stăr" );
	deepEqual( Stem("stăruia"), "stărui" );
	deepEqual( Stem("stăruie"), "stărui" );
	deepEqual( Stem("stăruim"), "stăru" );
	deepEqual( Stem("stăruinţa"), "stăruinţ" );
	deepEqual( Stem("stăruinţă"), "stăruinţ" );
	deepEqual( Stem("stăruinţe"), "stăruinţ" );
	deepEqual( Stem("stăruinţele"), "stăruinţ" );
	deepEqual( Stem("stăruit"), "stăruit" );
	deepEqual( Stem("stăruitoare"), "stăruit" );
	deepEqual( Stem("stăruitor"), "stăruit" );
	deepEqual( Stem("stătătoare"), "stătat" );
	deepEqual( Stem("stătător"), "stătat" );
	deepEqual( Stem("stătea"), "stăt" );
	deepEqual( Stem("stăteai"), "stăt" );
	deepEqual( Stem("stăteam"), "stăt" );
	deepEqual( Stem("stăteau"), "stăt" );
	deepEqual( Stem("stătuse"), "stăt" );
	deepEqual( Stem("stătut"), "stătut" );
	deepEqual( Stem("stea"), "ste" );
	deepEqual( Stem("steag"), "steag" );
	deepEqual( Stem("steaguri"), "steagur" );
	deepEqual( Stem("steaua"), "steau" );
	deepEqual( Stem("stegar"), "stegar" );
	deepEqual( Stem("stegarul"), "stegar" );
	deepEqual( Stem("stejar"), "stejar" );
	deepEqual( Stem("stejăriş"), "stejăriş" );
	deepEqual( Stem("stelară"), "stel" );
	deepEqual( Stem("stele"), "stel" );
	deepEqual( Stem("stelei"), "stele" );
	deepEqual( Stem("stelele"), "stel" );
	deepEqual( Stem("stelelor"), "stel" );
	deepEqual( Stem("steluţa"), "steluţ" );
	deepEqual( Stem("steluţă"), "steluţ" );
	deepEqual( Stem("stemă"), "stem" );
	deepEqual( Stem("stena"), "sten" );
	deepEqual( Stem("stenograf"), "stenograf" );
	deepEqual( Stem("stenografiase"), "stenografias" );
	deepEqual( Stem("stenografiate"), "stenograf" );
	deepEqual( Stem("stenogramă"), "stenogram" );
	deepEqual( Stem("stenograme"), "stenogram" );
	deepEqual( Stem("stenogramei"), "stenograme" );
	deepEqual( Stem("stepele"), "step" );
	deepEqual( Stem("stepelor"), "step" );
	deepEqual( Stem("stereo"), "stereo" );
	deepEqual( Stem("stereoscopia"), "stereoscop" );
	deepEqual( Stem("stereoscopic"), "stereoscop" );
	deepEqual( Stem("stereoscopică"), "stereoscop" );
	deepEqual( Stem("stereoscopice"), "stereoscop" );
	deepEqual( Stem("stereoscopie"), "stereoscop" );
	deepEqual( Stem("stereoscopiei"), "stereoscop" );
	deepEqual( Stem("stereosimetrie"), "stereosimetr" );
	deepEqual( Stem("stereotip"), "stereotip" );
	deepEqual( Stem("stereotipă"), "stereotip" );
	deepEqual( Stem("stereotipii"), "stereotip" );
	deepEqual( Stem("stereotipurile"), "stereotipur" );
	deepEqual( Stem("steril"), "steril" );
	deepEqual( Stem("sterilă"), "steril" );
	deepEqual( Stem("sterpe"), "sterp" );
	deepEqual( Stem("steyerul"), "steyer" );
	deepEqual( Stem("sticla"), "sticl" );
	deepEqual( Stem("sticlă"), "sticl" );
	deepEqual( Stem("sticle"), "sticl" );
	deepEqual( Stem("sticleau"), "sticl" );
	deepEqual( Stem("sticlei"), "sticle" );
	deepEqual( Stem("sticlele"), "sticl" );
	deepEqual( Stem("sticloşi"), "sticloş" );
	deepEqual( Stem("stil"), "stil" );
	deepEqual( Stem("stilet"), "stilet" );
	deepEqual( Stem("stilistică"), "stilist" );
	deepEqual( Stem("stilizare"), "stiliz" );
	deepEqual( Stem("stilizată"), "stiliz" );
	deepEqual( Stem("stilul"), "stil" );
	deepEqual( Stem("stilului"), "stil" );
	deepEqual( Stem("stilurile"), "stilur" );
	deepEqual( Stem("stilurilor"), "stilur" );
	deepEqual( Stem("stimabile"), "stimabil" );
	deepEqual( Stem("stimă"), "stim" );
	deepEqual( Stem("stimez"), "stim" );
	deepEqual( Stem("stimulent"), "stimulent" );
	deepEqual( Stem("stimulente"), "stimulent" );
	deepEqual( Stem("sting"), "sting" );
	deepEqual( Stem("stinge"), "sting" );
	deepEqual( Stem("stingher"), "stingher" );
	deepEqual( Stem("stingherească"), "stingher" );
	deepEqual( Stem("stingheritoare"), "stingher" );
	deepEqual( Stem("stingheritor"), "stingher" );
	deepEqual( Stem("stinghie"), "stingh" );
	deepEqual( Stem("stinjeniţi"), "stinjen" );
	deepEqual( Stem("stins"), "stins" );
	deepEqual( Stem("stinsă"), "stins" );
	deepEqual( Stem("stinse"), "stin" );
	deepEqual( Stem("stipendii"), "stipend" );
	deepEqual( Stem("stipula"), "stipul" );
	deepEqual( Stem("stipulează"), "stipul" );
	deepEqual( Stem("stipulînd"), "stipulînd" );
	deepEqual( Stem("stîngul"), "stîng" );
	deepEqual( Stem("stînjen"), "stînjen" );
	deepEqual( Stem("stînjenit"), "stînjen" );
	deepEqual( Stem("stînjenitoare"), "stînjen" );
	deepEqual( Stem("stîrnea"), "stîrn" );
	deepEqual( Stem("stîrnească"), "stîrn" );
	deepEqual( Stem("stîrnesc"), "stîrn" );
	deepEqual( Stem("stîrneşte"), "stîrn" );
	deepEqual( Stem("stîrni"), "stîrn" );
	deepEqual( Stem("stîrnim"), "stîrn" );
	deepEqual( Stem("stîrnind"), "stîrn" );
	deepEqual( Stem("stoarsă"), "stoars" );
	deepEqual( Stem("stofă"), "stof" );
	deepEqual( Stem("stofei"), "stofe" );
	deepEqual( Stem("stol"), "stol" );
	deepEqual( Stem("stomac"), "stomac" );
	deepEqual( Stem("stomacul"), "stomac" );
	deepEqual( Stem("stomacului"), "stomac" );
	deepEqual( Stem("storurile"), "storur" );
	deepEqual( Stem("stosmaşine"), "stosmaşin" );
	deepEqual( Stem("str"), "str" );
	deepEqual( Stem("strachină"), "strachin" );
	deepEqual( Stem("strada"), "strad" );
	deepEqual( Stem("stradă"), "strad" );
	deepEqual( Stem("strade"), "strad" );
	deepEqual( Stem("strania"), "stran" );
	deepEqual( Stem("stranie"), "stran" );
	deepEqual( Stem("stranietate"), "straniet" );
	deepEqual( Stem("straniu"), "straniu" );
	deepEqual( Stem("strapontinele"), "strapontin" );
	deepEqual( Stem("strasbourg"), "strasbourg" );
	deepEqual( Stem("straşnic"), "straşnic" );
	deepEqual( Stem("straşnică"), "straşnic" );
	deepEqual( Stem("straşnice"), "straşnic" );
	deepEqual( Stem("strat"), "strat" );
	deepEqual( Stem("stratagemă"), "stratagem" );
	deepEqual( Stem("strateg"), "strateg" );
	deepEqual( Stem("strategi"), "strateg" );
	deepEqual( Stem("strategia"), "strateg" );
	deepEqual( Stem("strategic"), "strateg" );
	deepEqual( Stem("strategică"), "strateg" );
	deepEqual( Stem("strategie"), "strateg" );
	deepEqual( Stem("strategii"), "strateg" );
	deepEqual( Stem("stratificare"), "stratific" );
	deepEqual( Stem("stratificat"), "stratific" );
	deepEqual( Stem("straturi"), "stratur" );
	deepEqual( Stem("straturile"), "stratur" );
	deepEqual( Stem("strâmba"), "strâmb" );
	deepEqual( Stem("strâmbai"), "strâmb" );
	deepEqual( Stem("strâmbare"), "strâmb" );
	deepEqual( Stem("strâmbaseră"), "strâmb" );
	deepEqual( Stem("strâmbat"), "strâmbat" );
	deepEqual( Stem("strâmbă"), "strâmb" );
	deepEqual( Stem("strâmbături"), "strâmbătur" );
	deepEqual( Stem("strâmbăturile"), "strâmbătur" );
	deepEqual( Stem("strâmbe"), "strâmb" );
	deepEqual( Stem("strâmt"), "strâmt" );
	deepEqual( Stem("strâmtare"), "strâmt" );
	deepEqual( Stem("strâmtorat"), "strâmtor" );
	deepEqual( Stem("strâng"), "strâng" );
	deepEqual( Stem("strângă"), "strâng" );
	deepEqual( Stem("strângător"), "strângat" );
	deepEqual( Stem("strânge"), "strâng" );
	deepEqual( Stem("strângea"), "strâng" );
	deepEqual( Stem("strângere"), "strâng" );
	deepEqual( Stem("strângerea"), "strâng" );
	deepEqual( Stem("strângeri"), "strânger" );
	deepEqual( Stem("strâns"), "strâns" );
	deepEqual( Stem("strânsă"), "strâns" );
	deepEqual( Stem("strânsoare"), "strânsoar" );
	deepEqual( Stem("strânsoarea"), "strânsoar" );
	deepEqual( Stem("strânşi"), "strânş" );
	deepEqual( Stem("străbat"), "străbat" );
	deepEqual( Stem("străbatem"), "străbat" );
	deepEqual( Stem("străbătut"), "străbăt" );
	deepEqual( Stem("străbunii"), "străbun" );
	deepEqual( Stem("străchini"), "străchin" );
	deepEqual( Stem("străfulgerări"), "străfulgerăr" );
	deepEqual( Stem("străin"), "străin" );
	deepEqual( Stem("străină"), "străin" );
	deepEqual( Stem("străinătate"), "străinăt" );
	deepEqual( Stem("străine"), "străin" );
	deepEqual( Stem("străini"), "străin" );
	deepEqual( Stem("strălucească"), "străluc" );
	deepEqual( Stem("strălucind"), "străluc" );
	deepEqual( Stem("strălucire"), "străluc" );
	deepEqual( Stem("străluciri"), "strălucir" );
	deepEqual( Stem("strălucit"), "străluc" );
	deepEqual( Stem("strălucită"), "străluc" );
	deepEqual( Stem("strălucitoare"), "străluc" );
	deepEqual( Stem("strălucitori"), "străluc" );
	deepEqual( Stem("strămoş"), "strămoş" );
	deepEqual( Stem("strămoşesc"), "strămoş" );
	deepEqual( Stem("strămoşeşti"), "strămoş" );
	deepEqual( Stem("strămoşi"), "strămoş" );
	deepEqual( Stem("strămoşii"), "strămoş" );
	deepEqual( Stem("strămoşul"), "strămoş" );
	deepEqual( Stem("strămutare"), "strămut" );
	deepEqual( Stem("strămutaţi"), "strămut" );
	deepEqual( Stem("străngulaţi"), "străngul" );
	deepEqual( Stem("strănuta"), "strănut" );
	deepEqual( Stem("străpezită"), "străpez" );
	deepEqual( Stem("străpung"), "străpung" );
	deepEqual( Stem("străpunge"), "străpung" );
	deepEqual( Stem("străpungerea"), "străpung" );
	deepEqual( Stem("străpunse"), "străpun" );
	deepEqual( Stem("străşnicie"), "străşnic" );
	deepEqual( Stem("străveche"), "străvech" );
	deepEqual( Stem("străvechi"), "străvech" );
	deepEqual( Stem("străvedeam"), "străved" );
	deepEqual( Stem("străvezii"), "străv" );
	deepEqual( Stem("străveziu"), "străveziu" );
	deepEqual( Stem("străzi"), "străz" );
	deepEqual( Stem("străzii"), "străz" );
	deepEqual( Stem("străzile"), "străz" );
	deepEqual( Stem("străzilor"), "străz" );
	deepEqual( Stem("strecoară"), "strecoar" );
	deepEqual( Stem("strecoare"), "strecoar" );
	deepEqual( Stem("strecura"), "strecur" );
	deepEqual( Stem("strecurându"), "strecur" );
	deepEqual( Stem("strica"), "stric" );
	deepEqual( Stem("stricarea"), "stric" );
	deepEqual( Stem("stricat"), "stricat" );
	deepEqual( Stem("stricau"), "stric" );
	deepEqual( Stem("strică"), "stric" );
	deepEqual( Stem("stricătoare"), "stricat" );
	deepEqual( Stem("strice"), "stric" );
	deepEqual( Stem("strict"), "strict" );
	deepEqual( Stem("strictă"), "strict" );
	deepEqual( Stem("stricteţă"), "stricteţ" );
	deepEqual( Stem("stricteţe"), "stricteţ" );
	deepEqual( Stem("stricteţea"), "stricteţ" );
	deepEqual( Stem("stricto"), "stricto" );
	deepEqual( Stem("stridentele"), "strident" );
	deepEqual( Stem("strig"), "strig" );
	deepEqual( Stem("striga"), "strig" );
	deepEqual( Stem("strigat"), "strigat" );
	deepEqual( Stem("strigate"), "strigat" );
	deepEqual( Stem("strigaţi"), "strig" );
	deepEqual( Stem("strigau"), "strig" );
	deepEqual( Stem("strigând"), "strig" );
	deepEqual( Stem("strigându"), "strig" );
	deepEqual( Stem("strigă"), "strig" );
	deepEqual( Stem("strigăm"), "strig" );
	deepEqual( Stem("strigăt"), "strigăt" );
	deepEqual( Stem("strigăte"), "strigăt" );
	deepEqual( Stem("strigătele"), "strigăt" );
	deepEqual( Stem("strigătoare"), "strigat" );
	deepEqual( Stem("strigătul"), "strigăt" );
	deepEqual( Stem("strigătură"), "strigăt" );
	deepEqual( Stem("strigînd"), "strigînd" );
	deepEqual( Stem("strigoi"), "strigo" );
	deepEqual( Stem("strindberg"), "strindberg" );
	deepEqual( Stem("stringent"), "stringent" );
	deepEqual( Stem("stringente"), "stringent" );
	deepEqual( Stem("stringenţă"), "stringenţ" );
	deepEqual( Stem("stringenţe"), "stringenţ" );
	deepEqual( Stem("strivească"), "striv" );
	deepEqual( Stem("strivesc"), "striv" );
	deepEqual( Stem("strivită"), "strivit" );
	deepEqual( Stem("strîmbat"), "strîmbat" );
	deepEqual( Stem("strîmbă"), "strîmb" );
	deepEqual( Stem("strîmbătură"), "strîmbăt" );
	deepEqual( Stem("strîmbe"), "strîmb" );
	deepEqual( Stem("strîmt"), "strîmt" );
	deepEqual( Stem("strîmtă"), "strîmt" );
	deepEqual( Stem("strîmtoare"), "strîmtoar" );
	deepEqual( Stem("strîmtorat"), "strîmtor" );
	deepEqual( Stem("strîngă"), "strîng" );
	deepEqual( Stem("strîngător"), "strîngat" );
	deepEqual( Stem("strînge"), "strîng" );
	deepEqual( Stem("strîngeau"), "strîng" );
	deepEqual( Stem("strîngem"), "strîng" );
	deepEqual( Stem("strop"), "strop" );
	deepEqual( Stem("stropea"), "strop" );
	deepEqual( Stem("stropit"), "stropit" );
	deepEqual( Stem("structura"), "structur" );
	deepEqual( Stem("structural"), "structural" );
	deepEqual( Stem("structurală"), "structural" );
	deepEqual( Stem("structurale"), "structural" );
	deepEqual( Stem("structură"), "struct" );
	deepEqual( Stem("structurii"), "structur" );
	deepEqual( Stem("strungă"), "strung" );
	deepEqual( Stem("struţi"), "struţ" );
	deepEqual( Stem("student"), "student" );
	deepEqual( Stem("studentă"), "student" );
	deepEqual( Stem("studente"), "student" );
	deepEqual( Stem("studentul"), "student" );
	deepEqual( Stem("studenţească"), "studenţ" );
	deepEqual( Stem("studenţii"), "studenţ" );
	deepEqual( Stem("studia"), "stud" );
	deepEqual( Stem("studiat"), "studiat" );
	deepEqual( Stem("studiată"), "studiat" );
	deepEqual( Stem("studiaţi"), "stud" );
	deepEqual( Stem("studiază"), "studiaz" );
	deepEqual( Stem("studiem"), "stud" );
	deepEqual( Stem("studiez"), "studiez" );
	deepEqual( Stem("studieze"), "studiez" );
	deepEqual( Stem("studii"), "stud" );
	deepEqual( Stem("studiile"), "stud" );
	deepEqual( Stem("studiu"), "studiu" );
	deepEqual( Stem("studiul"), "stud" );
	deepEqual( Stem("studiului"), "stud" );
	deepEqual( Stem("stufoase"), "stufoas" );
	deepEqual( Stem("stupid"), "stupid" );
	deepEqual( Stem("stupidă"), "stupid" );
	deepEqual( Stem("stupide"), "stupid" );
	deepEqual( Stem("stupiditatea"), "stupid" );
	deepEqual( Stem("stupidităţi"), "stupid" );
	deepEqual( Stem("suav"), "suav" );
	deepEqual( Stem("suavă"), "suav" );
	deepEqual( Stem("sub"), "sub" );
	deepEqual( Stem("subaltern"), "subaltern" );
	deepEqual( Stem("subevenimente"), "subeveniment" );
	deepEqual( Stem("subiect"), "subiect" );
	deepEqual( Stem("subiecte"), "subiect" );
	deepEqual( Stem("subiectiv"), "subiect" );
	deepEqual( Stem("subiectivă"), "subiect" );
	deepEqual( Stem("subiectul"), "subiect" );
	deepEqual( Stem("subiectului"), "subiect" );
	deepEqual( Stem("subit"), "subit" );
	deepEqual( Stem("subînţelege"), "subînţeleg" );
	deepEqual( Stem("sublim"), "subl" );
	deepEqual( Stem("sublimă"), "sublim" );
	deepEqual( Stem("sublime"), "sublim" );
	deepEqual( Stem("sublimi"), "sublim" );
	deepEqual( Stem("sublinia"), "sublin" );
	deepEqual( Stem("subliniat"), "sublin" );
	deepEqual( Stem("subliniez"), "subliniez" );
	deepEqual( Stem("sublinieze"), "subliniez" );
	deepEqual( Stem("subliniind"), "subliniind" );
	deepEqual( Stem("sublocotenent"), "sublocotenent" );
	deepEqual( Stem("sublocotenentul"), "sublocotenent" );
	deepEqual( Stem("sublocotenenţi"), "sublocotenenţ" );
	deepEqual( Stem("sublocotenenţii"), "sublocotenenţ" );
	deepEqual( Stem("subordonează"), "subordon" );
	deepEqual( Stem("subprefecţi"), "subprefecţ" );
	deepEqual( Stem("subsol"), "subsol" );
	deepEqual( Stem("substanţa"), "substanţ" );
	deepEqual( Stem("substanţă"), "substanţ" );
	deepEqual( Stem("substanţe"), "substanţ" );
	deepEqual( Stem("substanţei"), "substanţe" );
	deepEqual( Stem("substanţele"), "substanţ" );
	deepEqual( Stem("substanţială"), "substanţial" );
	deepEqual( Stem("substanţialistă"), "substanţialist" );
	deepEqual( Stem("substrat"), "substrat" );
	deepEqual( Stem("substratul"), "substrat" );
	deepEqual( Stem("substraturi"), "substratur" );
	deepEqual( Stem("subsuoară"), "subsuoar" );
	deepEqual( Stem("subteran"), "subteran" );
	deepEqual( Stem("subterane"), "subteran" );
	deepEqual( Stem("subtil"), "subtil" );
	deepEqual( Stem("subtilă"), "subtil" );
	deepEqual( Stem("subtile"), "subt" );
	deepEqual( Stem("subtilitate"), "subtil" );
	deepEqual( Stem("subtilizat"), "subtiliz" );
	deepEqual( Stem("subtilizări"), "subtilizăr" );
	deepEqual( Stem("subţiat"), "subţiat" );
	deepEqual( Stem("subţire"), "subţ" );
	deepEqual( Stem("subţirel"), "subţirel" );
	deepEqual( Stem("subţiri"), "subţir" );
	deepEqual( Stem("subţirică"), "subţir" );
	deepEqual( Stem("subţirimea"), "subţirim" );
	deepEqual( Stem("subversiv"), "subvers" );
	deepEqual( Stem("subversivă"), "subvers" );
	deepEqual( Stem("subversivi"), "subvers" );
	deepEqual( Stem("subzistă"), "subzist" );
	deepEqual( Stem("subziste"), "subzist" );
	deepEqual( Stem("succeadă"), "succead" );
	deepEqual( Stem("succed"), "succed" );
	deepEqual( Stem("succede"), "succed" );
	deepEqual( Stem("succes"), "succes" );
	deepEqual( Stem("succese"), "succ" );
	deepEqual( Stem("succesiune"), "succesiun" );
	deepEqual( Stem("succesiunea"), "succesiun" );
	deepEqual( Stem("succesiunei"), "succesiune" );
	deepEqual( Stem("succesiuni"), "succesiun" );
	deepEqual( Stem("succesiunii"), "succesiun" );
	deepEqual( Stem("succesive"), "succes" );
	deepEqual( Stem("succesul"), "succes" );
	deepEqual( Stem("suceşte"), "suceşt" );
	deepEqual( Stem("sucind"), "sucind" );
	deepEqual( Stem("sucit"), "sucit" );
	deepEqual( Stem("sucită"), "sucit" );
	deepEqual( Stem("sucite"), "sucit" );
	deepEqual( Stem("sud"), "sud" );
	deepEqual( Stem("sudare"), "sudar" );
	deepEqual( Stem("sudălmi"), "sudălm" );
	deepEqual( Stem("sudorile"), "sudor" );
	deepEqual( Stem("sufăr"), "sufăr" );
	deepEqual( Stem("suferă"), "sufer" );
	deepEqual( Stem("sufere"), "sufer" );
	deepEqual( Stem("suferea"), "sufer" );
	deepEqual( Stem("sufeream"), "sufer" );
	deepEqual( Stem("suferi"), "sufer" );
	deepEqual( Stem("suferinde"), "suferind" );
	deepEqual( Stem("suferindei"), "suferinde" );
	deepEqual( Stem("suferinţa"), "suferinţ" );
	deepEqual( Stem("suferinţă"), "suferinţ" );
	deepEqual( Stem("suferinţe"), "suferinţ" );
	deepEqual( Stem("suferinţi"), "suferinţ" );
	deepEqual( Stem("suferisem"), "sufer" );
	deepEqual( Stem("suferit"), "sufer" );
	deepEqual( Stem("suficient"), "suficient" );
	deepEqual( Stem("suficientă"), "suficient" );
	deepEqual( Stem("suficiente"), "suficient" );
	deepEqual( Stem("suflăm"), "sufl" );
	deepEqual( Stem("suflet"), "suflet" );
	deepEqual( Stem("suflete"), "suflet" );
	deepEqual( Stem("sufletească"), "suflet" );
	deepEqual( Stem("sufletele"), "suflet" );
	deepEqual( Stem("sufletelor"), "suflet" );
	deepEqual( Stem("sufletesc"), "suflet" );
	deepEqual( Stem("sufleteşti"), "suflet" );
	deepEqual( Stem("sufletul"), "suflet" );
	deepEqual( Stem("sufletului"), "suflet" );
	deepEqual( Stem("suflu"), "suflu" );
	deepEqual( Stem("sufocau"), "sufoc" );
	deepEqual( Stem("sufrageria"), "sufrager" );
	deepEqual( Stem("sufragerie"), "sufrager" );
	deepEqual( Stem("suge"), "sug" );
	deepEqual( Stem("sugerat"), "suger" );
	deepEqual( Stem("sugestia"), "sugest" );
	deepEqual( Stem("sugestibil"), "sugest" );
	deepEqual( Stem("sugestie"), "sugest" );
	deepEqual( Stem("sugestii"), "sugest" );
	deepEqual( Stem("sugestiile"), "sugest" );
	deepEqual( Stem("sugestiilor"), "sugest" );
	deepEqual( Stem("sugestivă"), "sugest" );
	deepEqual( Stem("sugrumate"), "sugrum" );
	deepEqual( Stem("sugrume"), "sugrum" );
	deepEqual( Stem("suia"), "sui" );
	deepEqual( Stem("suie"), "sui" );
	deepEqual( Stem("suii"), "sui" );
	deepEqual( Stem("suit"), "suit" );
	deepEqual( Stem("sul"), "sul" );
	deepEqual( Stem("sulemenite"), "sulemen" );
	deepEqual( Stem("suliţe"), "suliţ" );
	deepEqual( Stem("suluri"), "sulur" );
	deepEqual( Stem("suma"), "sum" );
	deepEqual( Stem("sumar"), "sumar" );
	deepEqual( Stem("sumarul"), "sumar" );
	deepEqual( Stem("sumă"), "sum" );
	deepEqual( Stem("sumbre"), "sumbr" );
	deepEqual( Stem("sume"), "sum" );
	deepEqual( Stem("sumei"), "sume" );
	deepEqual( Stem("suna"), "sun" );
	deepEqual( Stem("sunase"), "sunas" );
	deepEqual( Stem("sunat"), "sunat" );
	deepEqual( Stem("sunând"), "sunând" );
	deepEqual( Stem("sună"), "sun" );
	deepEqual( Stem("sune"), "sun" );
	deepEqual( Stem("sunet"), "sunet" );
	deepEqual( Stem("sunetelor"), "sunet" );
	deepEqual( Stem("sunetul"), "sunet" );
	deepEqual( Stem("sunt"), "sunt" );
	deepEqual( Stem("suntem"), "sunt" );
	deepEqual( Stem("sunteţi"), "sunt" );
	deepEqual( Stem("supă"), "sup" );
	deepEqual( Stem("supăr"), "supăr" );
	deepEqual( Stem("supăra"), "supăr" );
	deepEqual( Stem("supărare"), "supăr" );
	deepEqual( Stem("supărarea"), "supăr" );
	deepEqual( Stem("supărase"), "supăr" );
	deepEqual( Stem("supărat"), "supăr" );
	deepEqual( Stem("supărată"), "supăr" );
	deepEqual( Stem("supăraţi"), "supăr" );
	deepEqual( Stem("supără"), "supăr" );
	deepEqual( Stem("supărări"), "supărăr" );
	deepEqual( Stem("supărătoare"), "supăr" );
	deepEqual( Stem("supărător"), "supăr" );
	deepEqual( Stem("super"), "super" );
	deepEqual( Stem("superb"), "superb" );
	deepEqual( Stem("superba"), "superb" );
	deepEqual( Stem("superbă"), "superb" );
	deepEqual( Stem("superdelicaţii"), "superdelic" );
	deepEqual( Stem("supere"), "super" );
	deepEqual( Stem("superficială"), "superficial" );
	deepEqual( Stem("superficialii"), "superficial" );
	deepEqual( Stem("superi"), "super" );
	deepEqual( Stem("superioară"), "superioar" );
	deepEqual( Stem("superioare"), "superioar" );
	deepEqual( Stem("superior"), "superior" );
	deepEqual( Stem("superiori"), "superior" );
	deepEqual( Stem("superiorii"), "superior" );
	deepEqual( Stem("superiorilor"), "superior" );
	deepEqual( Stem("superioritate"), "superior" );
	deepEqual( Stem("superioritatea"), "superior" );
	deepEqual( Stem("superiorităţi"), "superior" );
	deepEqual( Stem("superiorului"), "superior" );
	deepEqual( Stem("superlativ"), "superl" );
	deepEqual( Stem("superstiţia"), "superstiţ" );
	deepEqual( Stem("superstiţie"), "superstiţ" );
	deepEqual( Stem("superstiţii"), "superst" );
	deepEqual( Stem("supeu"), "supeu" );
	deepEqual( Stem("supliment"), "supliment" );
	deepEqual( Stem("suport"), "suport" );
	deepEqual( Stem("suporta"), "suport" );
	deepEqual( Stem("suportabil"), "suport" );
	deepEqual( Stem("suportabile"), "suport" );
	deepEqual( Stem("suportam"), "suport" );
	deepEqual( Stem("suportat"), "suport" );
	deepEqual( Stem("suportă"), "suport" );
	deepEqual( Stem("suportul"), "suport" );
	deepEqual( Stem("suportului"), "suport" );
	deepEqual( Stem("suporturi"), "suportur" );
	deepEqual( Stem("supraevaluasem"), "supraevalu" );
	deepEqual( Stem("suprafaţa"), "suprafaţ" );
	deepEqual( Stem("suprafaţă"), "suprafaţ" );
	deepEqual( Stem("supranaturală"), "supranatural" );
	deepEqual( Stem("supraoameni"), "supraoamen" );
	deepEqual( Stem("suprapun"), "suprapun" );
	deepEqual( Stem("suprapune"), "suprapun" );
	deepEqual( Stem("suprapunea"), "suprapun" );
	deepEqual( Stem("suprapunere"), "suprapun" );
	deepEqual( Stem("suprapuneri"), "suprapuner" );
	deepEqual( Stem("suprapus"), "suprapus" );
	deepEqual( Stem("suprapuse"), "suprap" );
	deepEqual( Stem("supravalorizare"), "supravaloriz" );
	deepEqual( Stem("supraveghea"), "supravegh" );
	deepEqual( Stem("supraveghează"), "supravegh" );
	deepEqual( Stem("supravegherea"), "supravegh" );
	deepEqual( Stem("supravegheze"), "supravegh" );
	deepEqual( Stem("supraveghind"), "supravegh" );
	deepEqual( Stem("supravieţuiam"), "supravieţui" );
	deepEqual( Stem("suprem"), "supr" );
	deepEqual( Stem("supremă"), "suprem" );
	deepEqual( Stem("supreme"), "suprem" );
	deepEqual( Stem("supremul"), "supr" );
	deepEqual( Stem("suprimarea"), "suprim" );
	deepEqual( Stem("suprimată"), "suprim" );
	deepEqual( Stem("suprimăm"), "suprim" );
	deepEqual( Stem("supt"), "supt" );
	deepEqual( Stem("supui"), "supu" );
	deepEqual( Stem("supuie"), "supui" );
	deepEqual( Stem("supun"), "supun" );
	deepEqual( Stem("supună"), "supun" );
	deepEqual( Stem("supune"), "supun" );
	deepEqual( Stem("supunem"), "supun" );
	deepEqual( Stem("supunere"), "supun" );
	deepEqual( Stem("supunerea"), "supun" );
	deepEqual( Stem("supus"), "supus" );
	deepEqual( Stem("supusă"), "supus" );
	deepEqual( Stem("supuse"), "supus" );
	deepEqual( Stem("supusul"), "supus" );
	deepEqual( Stem("supusului"), "supus" );
	deepEqual( Stem("supuşii"), "supuş" );
	deepEqual( Stem("surâd"), "surâd" );
	deepEqual( Stem("surâde"), "surâd" );
	deepEqual( Stem("surâdea"), "surâd" );
	deepEqual( Stem("surâdeam"), "surâd" );
	deepEqual( Stem("surâdeau"), "surâd" );
	deepEqual( Stem("surâs"), "surâs" );
	deepEqual( Stem("surâsul"), "surâs" );
	deepEqual( Stem("surâsului"), "surâs" );
	deepEqual( Stem("surâsuri"), "surâsur" );
	deepEqual( Stem("surâsurile"), "surâsur" );
	deepEqual( Stem("surâzând"), "surâz" );
	deepEqual( Stem("surâzătoare"), "surâz" );
	deepEqual( Stem("surâzător"), "surâz" );
	deepEqual( Stem("sură"), "sur" );
	deepEqual( Stem("surd"), "surd" );
	deepEqual( Stem("surdină"), "surdin" );
	deepEqual( Stem("sure"), "sur" );
	deepEqual( Stem("surogate"), "surog" );
	deepEqual( Stem("surori"), "suror" );
	deepEqual( Stem("surorile"), "suror" );
	deepEqual( Stem("surpat"), "surpat" );
	deepEqual( Stem("surpă"), "surp" );
	deepEqual( Stem("surpături"), "surpătur" );
	deepEqual( Stem("surpe"), "surp" );
	deepEqual( Stem("surprinde"), "surprind" );
	deepEqual( Stem("surprindem"), "surprind" );
	deepEqual( Stem("surprindere"), "surprind" );
	deepEqual( Stem("surprinderea"), "surprind" );
	deepEqual( Stem("surprins"), "surprins" );
	deepEqual( Stem("surprinsă"), "surprins" );
	deepEqual( Stem("surprinse"), "surprin" );
	deepEqual( Stem("surprinşi"), "surprinş" );
	deepEqual( Stem("surprinzătoare"), "surprinz" );
	deepEqual( Stem("surprinzător"), "surprinz" );
	deepEqual( Stem("surpriza"), "surpriz" );
	deepEqual( Stem("surpriză"), "surpriz" );
	deepEqual( Stem("surprize"), "surpriz" );
	deepEqual( Stem("surprizele"), "surpriz" );
	deepEqual( Stem("surprizelor"), "surpriz" );
	deepEqual( Stem("surtucarul"), "surtucar" );
	deepEqual( Stem("sus"), "sus" );
	deepEqual( Stem("suspect"), "suspect" );
	deepEqual( Stem("suspecta"), "suspect" );
	deepEqual( Stem("suspectând"), "suspect" );
	deepEqual( Stem("suspectă"), "suspect" );
	deepEqual( Stem("suspend"), "suspend" );
	deepEqual( Stem("suspenda"), "suspend" );
	deepEqual( Stem("suspendat"), "suspend" );
	deepEqual( Stem("suspendată"), "suspend" );
	deepEqual( Stem("suspensie"), "suspens" );
	deepEqual( Stem("suspensiune"), "suspensiun" );
	deepEqual( Stem("suspensiunea"), "suspensiun" );
	deepEqual( Stem("suspină"), "suspin" );
	deepEqual( Stem("sustragă"), "sustrag" );
	deepEqual( Stem("sustrage"), "sustrag" );
	deepEqual( Stem("susţii"), "susţ" );
	deepEqual( Stem("susţin"), "susţin" );
	deepEqual( Stem("susţină"), "susţin" );
	deepEqual( Stem("susţine"), "susţin" );
	deepEqual( Stem("susţineau"), "susţin" );
	deepEqual( Stem("susţinem"), "susţin" );
	deepEqual( Stem("susţineţi"), "susţin" );
	deepEqual( Stem("susţinuse"), "susţin" );
	deepEqual( Stem("susţinut"), "susţin" );
	deepEqual( Stem("susţinută"), "susţin" );
	deepEqual( Stem("susţinute"), "susţin" );
	deepEqual( Stem("suta"), "sut" );
	deepEqual( Stem("sută"), "sut" );
	deepEqual( Stem("sute"), "sut" );
	deepEqual( Stem("sutele"), "sut" );
	deepEqual( Stem("suveică"), "suveic" );
	deepEqual( Stem("suveran"), "suveran" );
	deepEqual( Stem("sviţera"), "sviţer" );
	deepEqual( Stem("ş"), "ş" );
	deepEqual( Stem("şa"), "şa" );
	deepEqual( Stem("şabace"), "şabac" );
	deepEqual( Stem("şablon"), "şablon" );
	deepEqual( Stem("şablonul"), "şablon" );
	deepEqual( Stem("şade"), "şad" );
	deepEqual( Stem("şah"), "şah" );
	deepEqual( Stem("şaisprezece"), "şaisprezec" );
	deepEqual( Stem("şaizeci"), "şaizec" );
	deepEqual( Stem("şal"), "şal" );
	deepEqual( Stem("şamanilor"), "şaman" );
	deepEqual( Stem("şampania"), "şampan" );
	deepEqual( Stem("şampanie"), "şampan" );
	deepEqual( Stem("şampionului"), "şampion" );
	deepEqual( Stem("şansă"), "şans" );
	deepEqual( Stem("şantierele"), "şantier" );
	deepEqual( Stem("şanţ"), "şanţ" );
	deepEqual( Stem("şanţul"), "şanţ" );
	deepEqual( Stem("şanţuri"), "şanţur" );
	deepEqual( Stem("şanţurile"), "şanţur" );
	deepEqual( Stem("şapca"), "şapc" );
	deepEqual( Stem("şapte"), "şapt" );
	deepEqual( Stem("şaptea"), "şapt" );
	deepEqual( Stem("şaptesprezece"), "şaptesprezec" );
	deepEqual( Stem("şaptesprezecelea"), "şaptesprezecel" );
	deepEqual( Stem("şaptezeci"), "şaptezec" );
	deepEqual( Stem("şarlatanilor"), "şarlatan" );
	deepEqual( Stem("şarmantă"), "şarmant" );
	deepEqual( Stem("şarmante"), "şarmant" );
	deepEqual( Stem("şarpe"), "şarp" );
	deepEqual( Stem("şarpele"), "şarp" );
	deepEqual( Stem("şase"), "şas" );
	deepEqual( Stem("şasea"), "şas" );
	deepEqual( Stem("şaua"), "şau" );
	deepEqual( Stem("şază"), "şaz" );
	deepEqual( Stem("şăgalnic"), "şăgaln" );
	deepEqual( Stem("şănţuleţ"), "şănţuleţ" );
	deepEqual( Stem("şănţuleţe"), "şănţuleţ" );
	deepEqual( Stem("şchioapătă"), "şchioapăt" );
	deepEqual( Stem("şchiopătând"), "şchiopăt" );
	deepEqual( Stem("şcoala"), "şcoal" );
	deepEqual( Stem("şcoală"), "şcoal" );
	deepEqual( Stem("şcoalei"), "şcoale" );
	deepEqual( Stem("şcolăreşte"), "şcolăr" );
	deepEqual( Stem("şcolăriţă"), "şcolăriţ" );
	deepEqual( Stem("şcoli"), "şcol" );
	deepEqual( Stem("şcolii"), "şcol" );
	deepEqual( Stem("şea"), "şea" );
	deepEqual( Stem("şedea"), "şed" );
	deepEqual( Stem("şedinţă"), "şedinţ" );
	deepEqual( Stem("şedinţele"), "şedinţ" );
	deepEqual( Stem("şef"), "şef" );
	deepEqual( Stem("şefii"), "şef" );
	deepEqual( Stem("şeful"), "şef" );
	deepEqual( Stem("şefului"), "şef" );
	deepEqual( Stem("şei"), "şei" );
	deepEqual( Stem("şeile"), "şeil" );
	deepEqual( Stem("şerpi"), "şerp" );
	deepEqual( Stem("şerpilor"), "şerp" );
	deepEqual( Stem("şerpoaică"), "şerpoaic" );
	deepEqual( Stem("şerpuieşte"), "şerpui" );
	deepEqual( Stem("şervetul"), "şervet" );
	deepEqual( Stem("şes"), "şes" );
	deepEqual( Stem("şeviot"), "şeviot" );
	deepEqual( Stem("şevro"), "şevro" );
	deepEqual( Stem("şi"), "şi" );
	deepEqual( Stem("şic"), "şic" );
	deepEqual( Stem("şicană"), "şican" );
	deepEqual( Stem("şicul"), "şic" );
	deepEqual( Stem("şicului"), "şic" );
	deepEqual( Stem("şifon"), "şifon" );
	deepEqual( Stem("şipci"), "şipc" );
	deepEqual( Stem("şir"), "şir" );
	deepEqual( Stem("şiră"), "şir" );
	deepEqual( Stem("şire"), "şir" );
	deepEqual( Stem("şireată"), "şireat" );
	deepEqual( Stem("şiretlicul"), "şiretl" );
	deepEqual( Stem("şireturi"), "şiretur" );
	deepEqual( Stem("şiroaie"), "şiroai" );
	deepEqual( Stem("şirul"), "şir" );
	deepEqual( Stem("şiruri"), "şirur" );
	deepEqual( Stem("şirurile"), "şirur" );
	deepEqual( Stem("şivoaie"), "şivoai" );
	deepEqual( Stem("şivoi"), "şivo" );
	deepEqual( Stem("şivoiul"), "şivoi" );
	deepEqual( Stem("şoaptă"), "şoapt" );
	deepEqual( Stem("şoapte"), "şoapt" );
	deepEqual( Stem("şoaptele"), "şoapt" );
	deepEqual( Stem("şoarece"), "şoarec" );
	deepEqual( Stem("şofer"), "şofer" );
	deepEqual( Stem("şoferului"), "şofer" );
	deepEqual( Stem("şold"), "şold" );
	deepEqual( Stem("şoldul"), "şold" );
	deepEqual( Stem("şolduri"), "şoldur" );
	deepEqual( Stem("şoldurile"), "şoldur" );
	deepEqual( Stem("şoldurilor"), "şoldur" );
	deepEqual( Stem("şopârle"), "şopârl" );
	deepEqual( Stem("şoptea"), "şopt" );
	deepEqual( Stem("şoptesc"), "şopt" );
	deepEqual( Stem("şopteşte"), "şopt" );
	deepEqual( Stem("şoptind"), "şopt" );
	deepEqual( Stem("şoptit"), "şoptit" );
	deepEqual( Stem("şoptită"), "şoptit" );
	deepEqual( Stem("şorţ"), "şorţ" );
	deepEqual( Stem("şorţul"), "şorţ" );
	deepEqual( Stem("şorţuleţul"), "şorţuleţ" );
	deepEqual( Stem("şosea"), "şos" );
	deepEqual( Stem("şoseaua"), "şoseau" );
	deepEqual( Stem("şosele"), "şos" );
	deepEqual( Stem("şoselei"), "şosele" );
	deepEqual( Stem("şoselele"), "şosel" );
	deepEqual( Stem("şoselelor"), "şosel" );
	deepEqual( Stem("şosete"), "şoset" );
	deepEqual( Stem("şovăie"), "şovăi" );
	deepEqual( Stem("şovăieli"), "şovăiel" );
	deepEqual( Stem("şovăielnic"), "şovăieln" );
	deepEqual( Stem("şovăire"), "şovăir" );
	deepEqual( Stem("şpioană"), "şpioan" );
	deepEqual( Stem("şpriţ"), "şpriţ" );
	deepEqual( Stem("şpriţuri"), "şpriţur" );
	deepEqual( Stem("ştachetă"), "ştachet" );
	deepEqual( Stem("ştafetă"), "ştafet" );
	deepEqual( Stem("şteargă"), "ştearg" );
	deepEqual( Stem("ştearsă"), "ştears" );
	deepEqual( Stem("ştef"), "ştef" );
	deepEqual( Stem("ştefan"), "ştefan" );
	deepEqual( Stem("ştefane"), "ştefan" );
	deepEqual( Stem("ştefănescu"), "ştefănescu" );
	deepEqual( Stem("ştergându"), "şterg" );
	deepEqual( Stem("şterge"), "şterg" );
	deepEqual( Stem("şters"), "şters" );
	deepEqual( Stem("şterse"), "şter" );
	deepEqual( Stem("ştersese"), "şter" );
	deepEqual( Stem("şterşi"), "şterş" );
	deepEqual( Stem("şti"), "şti" );
	deepEqual( Stem("ştia"), "şti" );
	deepEqual( Stem("ştiam"), "ştiam" );
	deepEqual( Stem("ştiau"), "ştiau" );
	deepEqual( Stem("ştie"), "ştie" );
	deepEqual( Stem("ştienţifist"), "ştienţifist" );
	deepEqual( Stem("ştii"), "şti" );
	deepEqual( Stem("ştiind"), "ştiind" );
	deepEqual( Stem("ştiinţa"), "ştiinţ" );
	deepEqual( Stem("ştiinţă"), "ştiinţ" );
	deepEqual( Stem("ştiinţe"), "ştiinţ" );
	deepEqual( Stem("ştiinţei"), "ştiinţe" );
	deepEqual( Stem("ştiinţele"), "ştiinţ" );
	deepEqual( Stem("ştiinţelor"), "ştiinţ" );
	deepEqual( Stem("ştiinţific"), "ştiinţif" );
	deepEqual( Stem("ştiinţifică"), "ştiinţif" );
	deepEqual( Stem("ştiinţifice"), "ştiinţif" );
	deepEqual( Stem("ştiinţificeşte"), "ştiinţific" );
	deepEqual( Stem("ştim"), "ştim" );
	deepEqual( Stem("ştirbă"), "ştirb" );
	deepEqual( Stem("ştirbei"), "ştirbe" );
	deepEqual( Stem("ştirbesc"), "ştirb" );
	deepEqual( Stem("ştirbi"), "ştirb" );
	deepEqual( Stem("ştirbită"), "ştirbit" );
	deepEqual( Stem("ştire"), "ştir" );
	deepEqual( Stem("ştirea"), "ştir" );
	deepEqual( Stem("ştiri"), "ştir" );
	deepEqual( Stem("ştirile"), "ştir" );
	deepEqual( Stem("ştiţi"), "ştiţ" );
	deepEqual( Stem("ştiu"), "ştiu" );
	deepEqual( Stem("ştiut"), "ştiut" );
	deepEqual( Stem("ştiută"), "ştiut" );
	deepEqual( Stem("ştiutor"), "ştiutor" );
	deepEqual( Stem("ştiutul"), "ştiut" );
	deepEqual( Stem("ştiuţi"), "ştiuţ" );
	deepEqual( Stem("ştrandul"), "ştrand" );
	deepEqual( Stem("ştrengăria"), "ştrengăr" );
	deepEqual( Stem("şubredă"), "şubred" );
	deepEqual( Stem("şuierat"), "şuier" );
	deepEqual( Stem("şuierate"), "şuier" );
	deepEqual( Stem("şuierătoare"), "şuier" );
	deepEqual( Stem("şuierături"), "şuierătur" );
	deepEqual( Stem("şuierăturile"), "şuierătur" );
	deepEqual( Stem("şurupuri"), "şurupur" );
	deepEqual( Stem("şurupurile"), "şurupur" );
	deepEqual( Stem("şuviţe"), "şuviţ" );
	deepEqual( Stem("şuvoaie"), "şuvoai" );
	deepEqual( Stem("şuvoi"), "şuvo" );
	deepEqual( Stem("t"), "t" );
	deepEqual( Stem("ta"), "ta" );
	deepEqual( Stem("tabacheră"), "tabacher" );
	deepEqual( Stem("tabără"), "tabăr" );
	deepEqual( Stem("tabelă"), "tabel" );
	deepEqual( Stem("tabere"), "taber" );
	deepEqual( Stem("taberei"), "tabere" );
	deepEqual( Stem("tablă"), "tabl" );
	deepEqual( Stem("table"), "tabl" );
	deepEqual( Stem("tablei"), "table" );
	deepEqual( Stem("tablou"), "tablou" );
	deepEqual( Stem("tabloul"), "tablo" );
	deepEqual( Stem("tabloului"), "tablo" );
	deepEqual( Stem("tablouri"), "tablour" );
	deepEqual( Stem("tablourilor"), "tablour" );
	deepEqual( Stem("tabolul"), "tabol" );
	deepEqual( Stem("tabula"), "tabul" );
	deepEqual( Stem("taburele"), "tabur" );
	deepEqual( Stem("tac"), "tac" );
	deepEqual( Stem("tacâm"), "tac" );
	deepEqual( Stem("tacâmul"), "tac" );
	deepEqual( Stem("tacâmuri"), "tacâmur" );
	deepEqual( Stem("tacâmurile"), "tacâmur" );
	deepEqual( Stem("tacă"), "tac" );
	deepEqual( Stem("tace"), "tac" );
	deepEqual( Stem("tache"), "tach" );
	deepEqual( Stem("tachinerie"), "tachiner" );
	deepEqual( Stem("taci"), "tac" );
	deepEqual( Stem("tacită"), "tacit" );
	deepEqual( Stem("tacite"), "tacit" );
	deepEqual( Stem("tact"), "tact" );
	deepEqual( Stem("tactic"), "tactic" );
	deepEqual( Stem("tactica"), "tactic" );
	deepEqual( Stem("tactică"), "tactic" );
	deepEqual( Stem("tactice"), "tactic" );
	deepEqual( Stem("tacticei"), "tactice" );
	deepEqual( Stem("tacticos"), "tactic" );
	deepEqual( Stem("tactilă"), "tactil" );
	deepEqual( Stem("tagma"), "tagm" );
	deepEqual( Stem("tai"), "tai" );
	deepEqual( Stem("taică"), "taic" );
	deepEqual( Stem("taie"), "tai" );
	deepEqual( Stem("taifas"), "taifas" );
	deepEqual( Stem("taină"), "tain" );
	deepEqual( Stem("taine"), "tain" );
	deepEqual( Stem("tainele"), "tain" );
	deepEqual( Stem("tainic"), "tainic" );
	deepEqual( Stem("tainică"), "tainic" );
	deepEqual( Stem("tainul"), "tain" );
	deepEqual( Stem("taiorul"), "taior" );
	deepEqual( Stem("taipei"), "taipe" );
	deepEqual( Stem("taivan"), "taivan" );
	deepEqual( Stem("taiwaneze"), "taiwan" );
	deepEqual( Stem("take"), "tak" );
	deepEqual( Stem("talaz"), "talaz" );
	deepEqual( Stem("talc"), "talc" );
	deepEqual( Stem("talciocurile"), "talciocur" );
	deepEqual( Stem("tale"), "tal" );
	deepEqual( Stem("talent"), "talent" );
	deepEqual( Stem("talente"), "talent" );
	deepEqual( Stem("talentele"), "talent" );
	deepEqual( Stem("talentul"), "talent" );
	deepEqual( Stem("talentului"), "talent" );
	deepEqual( Stem("tales"), "tales" );
	deepEqual( Stem("talger"), "talger" );
	deepEqual( Stem("talia"), "tali" );
	deepEqual( Stem("talie"), "tal" );
	deepEqual( Stem("taliei"), "tal" );
	deepEqual( Stem("talpa"), "talp" );
	deepEqual( Stem("talpă"), "talp" );
	deepEqual( Stem("tamponul"), "tampon" );
	deepEqual( Stem("tandră"), "tandr" );
	deepEqual( Stem("tandre"), "tandr" );
	deepEqual( Stem("tandru"), "tandru" );
	deepEqual( Stem("tango"), "tango" );
	deepEqual( Stem("tanti"), "tant" );
	deepEqual( Stem("tanţi"), "tanţ" );
	deepEqual( Stem("tapează"), "tapeaz" );
	deepEqual( Stem("tapeusele"), "tapeus" );
	deepEqual( Stem("tarabe"), "tarab" );
	deepEqual( Stem("tarasconade"), "tarasconad" );
	deepEqual( Stem("tară"), "tar" );
	deepEqual( Stem("tare"), "tar" );
	deepEqual( Stem("targa"), "targ" );
	deepEqual( Stem("tari"), "tar" );
	deepEqual( Stem("tarlalei"), "tarlale" );
	deepEqual( Stem("tarlalele"), "tarlal" );
	deepEqual( Stem("tarlalelor"), "tarlal" );
	deepEqual( Stem("tarlaua"), "tarlau" );
	deepEqual( Stem("tata"), "tat" );
	deepEqual( Stem("tată"), "tat" );
	deepEqual( Stem("tatăl"), "tatăl" );
	deepEqual( Stem("tatălui"), "tatăl" );
	deepEqual( Stem("tatei"), "tate" );
	deepEqual( Stem("taumaturgi"), "taumaturg" );
	deepEqual( Stem("tautologie"), "tautolog" );
	deepEqual( Stem("tavan"), "tavan" );
	deepEqual( Stem("tavă"), "tav" );
	deepEqual( Stem("taxate"), "taxat" );
	deepEqual( Stem("taxezi"), "taxez" );
	deepEqual( Stem("tâlcul"), "tâlc" );
	deepEqual( Stem("tâlhar"), "tâlhar" );
	deepEqual( Stem("tâmpa"), "tâmp" );
	deepEqual( Stem("tâmpenie"), "tâmpen" );
	deepEqual( Stem("tâmpite"), "tâmpit" );
	deepEqual( Stem("tâmpla"), "tâmpl" );
	deepEqual( Stem("tâmplă"), "tâmpl" );
	deepEqual( Stem("tâmple"), "tâmpl" );
	deepEqual( Stem("tâmplele"), "tâmpl" );
	deepEqual( Stem("tânăr"), "tânăr" );
	deepEqual( Stem("tânăra"), "tânăr" );
	deepEqual( Stem("tânără"), "tânăr" );
	deepEqual( Stem("tânărul"), "tânăr" );
	deepEqual( Stem("tânărului"), "tânăr" );
	deepEqual( Stem("tânguirea"), "tângu" );
	deepEqual( Stem("târând"), "târând" );
	deepEqual( Stem("târându"), "târându" );
	deepEqual( Stem("târât"), "târât" );
	deepEqual( Stem("târâte"), "târât" );
	deepEqual( Stem("târăsc"), "târăsc" );
	deepEqual( Stem("târăşte"), "târăşt" );
	deepEqual( Stem("târfă"), "târf" );
	deepEqual( Stem("târg"), "târg" );
	deepEqual( Stem("târgoveţ"), "târgoveţ" );
	deepEqual( Stem("târguieli"), "târguiel" );
	deepEqual( Stem("târguielile"), "târguiel" );
	deepEqual( Stem("târguind"), "târgu" );
	deepEqual( Stem("târgul"), "târg" );
	deepEqual( Stem("târgului"), "târg" );
	deepEqual( Stem("târzie"), "târz" );
	deepEqual( Stem("târzii"), "târz" );
	deepEqual( Stem("târziu"), "târziu" );
	deepEqual( Stem("tăbăcăriei"), "tăbăcăr" );
	deepEqual( Stem("tăbliţa"), "tăbliţ" );
	deepEqual( Stem("tăcând"), "tăcând" );
	deepEqual( Stem("tăceam"), "tăceam" );
	deepEqual( Stem("tăcem"), "tăc" );
	deepEqual( Stem("tăcere"), "tăcer" );
	deepEqual( Stem("tăcerea"), "tăcer" );
	deepEqual( Stem("tăceţi"), "tăc" );
	deepEqual( Stem("tăcut"), "tăcut" );
	deepEqual( Stem("tăcută"), "tăcut" );
	deepEqual( Stem("tăcute"), "tăcut" );
	deepEqual( Stem("tăcuţi"), "tăcuţ" );
	deepEqual( Stem("tăgăduială"), "tăgăduial" );
	deepEqual( Stem("tăgăduiască"), "tăgăduiasc" );
	deepEqual( Stem("tăgăduiau"), "tăgădui" );
	deepEqual( Stem("tăgăduieşte"), "tăgădui" );
	deepEqual( Stem("tăgăduit"), "tăgădu" );
	deepEqual( Stem("tăi"), "tăi" );
	deepEqual( Stem("tăia"), "tăi" );
	deepEqual( Stem("tăiat"), "tăiat" );
	deepEqual( Stem("tăiată"), "tăiat" );
	deepEqual( Stem("tăiate"), "tăiat" );
	deepEqual( Stem("tăiaţi"), "tăi" );
	deepEqual( Stem("tăiau"), "tăiau" );
	deepEqual( Stem("tăiem"), "tăi" );
	deepEqual( Stem("tăiere"), "tăier" );
	deepEqual( Stem("tăierii"), "tăier" );
	deepEqual( Stem("tăierilor"), "tăier" );
	deepEqual( Stem("tăietor"), "tăietor" );
	deepEqual( Stem("tăietura"), "tăietur" );
	deepEqual( Stem("tăieturi"), "tăietur" );
	deepEqual( Stem("tăind"), "tăind" );
	deepEqual( Stem("tăinui"), "tăin" );
	deepEqual( Stem("tăinuirea"), "tăinu" );
	deepEqual( Stem("tăinuită"), "tăinuit" );
	deepEqual( Stem("tăioasă"), "tăioas" );
	deepEqual( Stem("tăios"), "tăios" );
	deepEqual( Stem("tăiş"), "tăiş" );
	deepEqual( Stem("tălăzuim"), "tălăzu" );
	deepEqual( Stem("tălpi"), "tălp" );
	deepEqual( Stem("tămâieze"), "tămâi" );
	deepEqual( Stem("tămâioasă"), "tămâi" );
	deepEqual( Stem("tănase"), "tănas" );
	deepEqual( Stem("tărâm"), "tăr" );
	deepEqual( Stem("tărâmul"), "tăr" );
	deepEqual( Stem("tărâmurile"), "tărâmur" );
	deepEqual( Stem("tărăgănat"), "tărăgăn" );
	deepEqual( Stem("tărăgănate"), "tărăgăn" );
	deepEqual( Stem("tărgi"), "tărg" );
	deepEqual( Stem("tăria"), "tări" );
	deepEqual( Stem("tăriei"), "tăr" );
	deepEqual( Stem("tătarii"), "tătar" );
	deepEqual( Stem("tăticule"), "tăticul" );
	deepEqual( Stem("tău"), "tău" );
	deepEqual( Stem("tăvălug"), "tăvălug" );
	deepEqual( Stem("te"), "te" );
	deepEqual( Stem("teafăr"), "teafăr" );
	deepEqual( Stem("teama"), "team" );
	deepEqual( Stem("teamă"), "team" );
	deepEqual( Stem("teanc"), "teanc" );
	deepEqual( Stem("teancurile"), "teancur" );
	deepEqual( Stem("teapa"), "teap" );
	deepEqual( Stem("teatrală"), "teatral" );
	deepEqual( Stem("teatre"), "teatr" );
	deepEqual( Stem("teatrele"), "teatr" );
	deepEqual( Stem("teatru"), "teatru" );
	deepEqual( Stem("teatrul"), "teatr" );
	deepEqual( Stem("tehnic"), "tehnic" );
	deepEqual( Stem("tehnica"), "tehnic" );
	deepEqual( Stem("tehnică"), "tehnic" );
	deepEqual( Stem("tehnice"), "tehnic" );
	deepEqual( Stem("tehnici"), "tehnic" );
	deepEqual( Stem("tehnicianului"), "tehnician" );
	deepEqual( Stem("tehnicieni"), "tehnicien" );
	deepEqual( Stem("tehnicii"), "tehnic" );
	deepEqual( Stem("teilor"), "teilor" );
	deepEqual( Stem("telefoanelor"), "telefoan" );
	deepEqual( Stem("telefon"), "telefon" );
	deepEqual( Stem("telefona"), "telefon" );
	deepEqual( Stem("telefonat"), "telefon" );
	deepEqual( Stem("telefonez"), "telefon" );
	deepEqual( Stem("telefonică"), "telefon" );
	deepEqual( Stem("telefonul"), "telefon" );
	deepEqual( Stem("telefonului"), "telefon" );
	deepEqual( Stem("telegraf"), "telegraf" );
	deepEqual( Stem("telegrafia"), "telegraf" );
	deepEqual( Stem("telegrama"), "telegram" );
	deepEqual( Stem("telegramă"), "telegram" );
	deepEqual( Stem("telegrame"), "telegram" );
	deepEqual( Stem("telegramele"), "telegram" );
	deepEqual( Stem("teleleică"), "telel" );
	deepEqual( Stem("tem"), "tem" );
	deepEqual( Stem("tema"), "tem" );
	deepEqual( Stem("temă"), "tem" );
	deepEqual( Stem("temeau"), "temeau" );
	deepEqual( Stem("temei"), "teme" );
	deepEqual( Stem("temeinic"), "temein" );
	deepEqual( Stem("temele"), "tem" );
	deepEqual( Stem("temelia"), "temel" );
	deepEqual( Stem("temere"), "temer" );
	deepEqual( Stem("temerilor"), "temer" );
	deepEqual( Stem("temniţă"), "temniţ" );
	deepEqual( Stem("temniţe"), "temniţ" );
	deepEqual( Stem("temperament"), "temperament" );
	deepEqual( Stem("temperamentul"), "temperament" );
	deepEqual( Stem("temperamentului"), "temperament" );
	deepEqual( Stem("temperatura"), "temperatur" );
	deepEqual( Stem("temperatură"), "temperat" );
	deepEqual( Stem("temperaturi"), "temperatur" );
	deepEqual( Stem("temperaturii"), "temperatur" );
	deepEqual( Stem("temperări"), "temperăr" );
	deepEqual( Stem("templu"), "templu" );
	deepEqual( Stem("tempo"), "tempo" );
	deepEqual( Stem("temporal"), "temporal" );
	deepEqual( Stem("temporală"), "temporal" );
	deepEqual( Stem("temporale"), "temporal" );
	deepEqual( Stem("temporalitate"), "temporal" );
	deepEqual( Stem("temporalitatea"), "temporal" );
	deepEqual( Stem("temporar"), "temporar" );
	deepEqual( Stem("temporară"), "tempor" );
	deepEqual( Stem("temură"), "temur" );
	deepEqual( Stem("temut"), "temut" );
	deepEqual( Stem("temutei"), "temute" );
	deepEqual( Stem("temuţi"), "temuţ" );
	deepEqual( Stem("ten"), "ten" );
	deepEqual( Stem("tenace"), "tenac" );
	deepEqual( Stem("tenacitate"), "tenac" );
	deepEqual( Stem("tenacitatea"), "tenac" );
	deepEqual( Stem("tenculeţe"), "tenculeţ" );
	deepEqual( Stem("tendenţioasă"), "tendenţ" );
	deepEqual( Stem("tendenţioase"), "tendenţ" );
	deepEqual( Stem("tendenţios"), "tendenţ" );
	deepEqual( Stem("tendinţa"), "tendinţ" );
	deepEqual( Stem("tendinţă"), "tendinţ" );
	deepEqual( Stem("tendinţele"), "tendinţ" );
	deepEqual( Stem("tenebre"), "tenebr" );
	deepEqual( Stem("tenebrelor"), "tenebr" );
	deepEqual( Stem("tenebros"), "tenebr" );
	deepEqual( Stem("tenis"), "tenis" );
	deepEqual( Stem("tensional"), "tensional" );
	deepEqual( Stem("tensională"), "tensional" );
	deepEqual( Stem("tensionată"), "tension" );
	deepEqual( Stem("tensionate"), "tension" );
	deepEqual( Stem("tensionează"), "tension" );
	deepEqual( Stem("tentaculele"), "tentacul" );
	deepEqual( Stem("tentat"), "tentat" );
	deepEqual( Stem("tentată"), "tentat" );
	deepEqual( Stem("teodorescu"), "teodorescu" );
	deepEqual( Stem("teologi"), "teolog" );
	deepEqual( Stem("teologia"), "teolog" );
	deepEqual( Stem("teoreme"), "teorem" );
	deepEqual( Stem("teoretic"), "teoret" );
	deepEqual( Stem("teoretică"), "teoret" );
	deepEqual( Stem("teoretice"), "teoret" );
	deepEqual( Stem("teoreticeşte"), "teoretic" );
	deepEqual( Stem("teoretiza"), "teoretiz" );
	deepEqual( Stem("teoretizarea"), "teoretiz" );
	deepEqual( Stem("teoretizări"), "teoretizăr" );
	deepEqual( Stem("teoretizează"), "teoretiz" );
	deepEqual( Stem("teoria"), "teor" );
	deepEqual( Stem("teorie"), "teor" );
	deepEqual( Stem("teoriei"), "teor" );
	deepEqual( Stem("teorii"), "teor" );
	deepEqual( Stem("teoriilor"), "teor" );
	deepEqual( Stem("teosofie"), "teosof" );
	deepEqual( Stem("teosofilor"), "teosof" );
	deepEqual( Stem("terasamentul"), "terasament" );
	deepEqual( Stem("terasamentului"), "terasament" );
	deepEqual( Stem("terci"), "terc" );
	deepEqual( Stem("teren"), "teren" );
	deepEqual( Stem("terenul"), "teren" );
	deepEqual( Stem("terenuri"), "terenur" );
	deepEqual( Stem("teribil"), "teribil" );
	deepEqual( Stem("teribilă"), "teribil" );
	deepEqual( Stem("termen"), "termen" );
	deepEqual( Stem("termeni"), "termen" );
	deepEqual( Stem("termenii"), "termen" );
	deepEqual( Stem("termenul"), "termen" );
	deepEqual( Stem("termenului"), "termen" );
	deepEqual( Stem("termin"), "termin" );
	deepEqual( Stem("termina"), "termin" );
	deepEqual( Stem("terminase"), "termin" );
	deepEqual( Stem("terminat"), "termin" );
	deepEqual( Stem("terminau"), "termin" );
	deepEqual( Stem("termină"), "termin" );
	deepEqual( Stem("terminăm"), "termin" );
	deepEqual( Stem("termine"), "termin" );
	deepEqual( Stem("terminologiei"), "terminolog" );
	deepEqual( Stem("termocauterul"), "termocauter" );
	deepEqual( Stem("termopile"), "termop" );
	deepEqual( Stem("tern"), "tern" );
	deepEqual( Stem("terţiu"), "terţiu" );
	deepEqual( Stem("terţiului"), "terţ" );
	deepEqual( Stem("tescui"), "tesc" );
	deepEqual( Stem("test"), "test" );
	deepEqual( Stem("testament"), "testament" );
	deepEqual( Stem("testamentar"), "testamentar" );
	deepEqual( Stem("testamentul"), "testament" );
	deepEqual( Stem("testamentului"), "testament" );
	deepEqual( Stem("testare"), "test" );
	deepEqual( Stem("testat"), "testat" );
	deepEqual( Stem("testată"), "testat" );
	deepEqual( Stem("testaţi"), "test" );
	deepEqual( Stem("testăm"), "test" );
	deepEqual( Stem("testări"), "testăr" );
	deepEqual( Stem("teste"), "test" );
	deepEqual( Stem("testează"), "test" );
	deepEqual( Stem("testelor"), "test" );
	deepEqual( Stem("testez"), "test" );
	deepEqual( Stem("testezi"), "test" );
	deepEqual( Stem("testiculele"), "testicul" );
	deepEqual( Stem("testînd"), "testînd" );
	deepEqual( Stem("teşit"), "teşit" );
	deepEqual( Stem("teşite"), "teşit" );
	deepEqual( Stem("tetanos"), "tetan" );
	deepEqual( Stem("tetanosului"), "tetan" );
	deepEqual( Stem("tevatură"), "tevat" );
	deepEqual( Stem("texas"), "texas" );
	deepEqual( Stem("text"), "text" );
	deepEqual( Stem("texte"), "text" );
	deepEqual( Stem("textelor"), "text" );
	deepEqual( Stem("textual"), "textual" );
	deepEqual( Stem("textuală"), "textual" );
	deepEqual( Stem("textuale"), "textual" );
	deepEqual( Stem("textul"), "text" );
	deepEqual( Stem("textului"), "text" );
	deepEqual( Stem("textura"), "textur" );
	deepEqual( Stem("teza"), "tez" );
	deepEqual( Stem("teză"), "tez" );
	deepEqual( Stem("thomas"), "thomas" );
	deepEqual( Stem("tic"), "tic" );
	deepEqual( Stem("ticălosule"), "ticălosul" );
	deepEqual( Stem("ticluită"), "ticluit" );
	deepEqual( Stem("ticsit"), "ticsit" );
	deepEqual( Stem("ticsite"), "ticsit" );
	deepEqual( Stem("ticuri"), "ticur" );
	deepEqual( Stem("ticurile"), "ticur" );
	deepEqual( Stem("tifoidă"), "tifoid" );
	deepEqual( Stem("tifos"), "tifos" );
	deepEqual( Stem("tifosului"), "tifos" );
	deepEqual( Stem("tigroaică"), "tigroaic" );
	deepEqual( Stem("tigru"), "tigru" );
	deepEqual( Stem("tigrului"), "tigr" );
	deepEqual( Stem("tihnă"), "tihn" );
	deepEqual( Stem("tihnit"), "tihnit" );
	deepEqual( Stem("tihnita"), "tihnit" );
	deepEqual( Stem("tihnită"), "tihnit" );
	deepEqual( Stem("tihnite"), "tihnit" );
	deepEqual( Stem("timid"), "timid" );
	deepEqual( Stem("timidă"), "timid" );
	deepEqual( Stem("timiditate"), "timid" );
	deepEqual( Stem("timiditatea"), "timid" );
	deepEqual( Stem("timp"), "timp" );
	deepEqual( Stem("timpane"), "timpan" );
	deepEqual( Stem("timpul"), "timp" );
	deepEqual( Stem("timpului"), "timp" );
	deepEqual( Stem("timpuri"), "timpur" );
	deepEqual( Stem("timpurie"), "timpur" );
	deepEqual( Stem("timpurile"), "timpur" );
	deepEqual( Stem("timpuriu"), "timpuriu" );
	deepEqual( Stem("tind"), "tind" );
	deepEqual( Stem("tinde"), "tind" );
	deepEqual( Stem("tine"), "tin" );
	deepEqual( Stem("tinere"), "tiner" );
	deepEqual( Stem("tinerei"), "tinere" );
	deepEqual( Stem("tinerele"), "tiner" );
	deepEqual( Stem("tineretul"), "tineret" );
	deepEqual( Stem("tinereţe"), "tinereţ" );
	deepEqual( Stem("tinereţii"), "tiner" );
	deepEqual( Stem("tineri"), "tiner" );
	deepEqual( Stem("tinerii"), "tiner" );
	deepEqual( Stem("tinichea"), "tinich" );
	deepEqual( Stem("tip"), "tip" );
	deepEqual( Stem("tipărea"), "tipăr" );
	deepEqual( Stem("tipăresc"), "tipăr" );
	deepEqual( Stem("tipăreşte"), "tipăr" );
	deepEqual( Stem("tipărit"), "tipăr" );
	deepEqual( Stem("tipărite"), "tipăr" );
	deepEqual( Stem("tipic"), "tipic" );
	deepEqual( Stem("tipică"), "tipic" );
	deepEqual( Stem("tipograf"), "tipograf" );
	deepEqual( Stem("tipografie"), "tipograf" );
	deepEqual( Stem("tipograful"), "tipograf" );
	deepEqual( Stem("tipul"), "tip" );
	deepEqual( Stem("tipului"), "tip" );
	deepEqual( Stem("tipuri"), "tipur" );
	deepEqual( Stem("tir"), "tir" );
	deepEqual( Stem("tirania"), "tiran" );
	deepEqual( Stem("tirul"), "tir" );
	deepEqual( Stem("tirului"), "tir" );
	deepEqual( Stem("titanică"), "titan" );
	deepEqual( Stem("titlu"), "titlu" );
	deepEqual( Stem("titlul"), "titl" );
	deepEqual( Stem("titluri"), "titlur" );
	deepEqual( Stem("titlurile"), "titlur" );
	deepEqual( Stem("titular"), "titular" );
	deepEqual( Stem("titulatură"), "titulat" );
	deepEqual( Stem("tiveşte"), "tiveşt" );
	deepEqual( Stem("tivit"), "tivit" );
	deepEqual( Stem("tiviţi"), "tiv" );
	deepEqual( Stem("toacă"), "toac" );
	deepEqual( Stem("toaletă"), "toalet" );
	deepEqual( Stem("toamna"), "toamn" );
	deepEqual( Stem("toamnă"), "toamn" );
	deepEqual( Stem("toamnei"), "toamne" );
	deepEqual( Stem("toane"), "toan" );
	deepEqual( Stem("toante"), "toant" );
	deepEqual( Stem("toarcem"), "toarc" );
	deepEqual( Stem("toarnă"), "toarn" );
	deepEqual( Stem("toarne"), "toarn" );
	deepEqual( Stem("toasturi"), "toastur" );
	deepEqual( Stem("toată"), "toat" );
	deepEqual( Stem("toate"), "toat" );
	deepEqual( Stem("tobă"), "tob" );
	deepEqual( Stem("toc"), "toc" );
	deepEqual( Stem("tocat"), "tocat" );
	deepEqual( Stem("tocată"), "tocat" );
	deepEqual( Stem("tocând"), "tocând" );
	deepEqual( Stem("tocător"), "tocat" );
	deepEqual( Stem("toceşte"), "toceşt" );
	deepEqual( Stem("tocmai"), "tocm" );
	deepEqual( Stem("tocmească"), "tocm" );
	deepEqual( Stem("tocmiţi"), "tocm" );
	deepEqual( Stem("tocul"), "toc" );
	deepEqual( Stem("tocului"), "toc" );
	deepEqual( Stem("tohanul"), "tohan" );
	deepEqual( Stem("toi"), "toi" );
	deepEqual( Stem("tolănească"), "tolăn" );
	deepEqual( Stem("tolănită"), "tolăn" );
	deepEqual( Stem("tolera"), "toler" );
	deepEqual( Stem("tolerabile"), "toler" );
	deepEqual( Stem("tolerantă"), "toler" );
	deepEqual( Stem("toleranţa"), "toleranţ" );
	deepEqual( Stem("toleranţei"), "toleranţe" );
	deepEqual( Stem("tolerat"), "toler" );
	deepEqual( Stem("toma"), "tom" );
	deepEqual( Stem("tomnatică"), "tomnat" );
	deepEqual( Stem("tomnatice"), "tomnat" );
	deepEqual( Stem("ton"), "ton" );
	deepEqual( Stem("tonă"), "ton" );
	deepEqual( Stem("tone"), "ton" );
	deepEqual( Stem("tonitu"), "tonitu" );
	deepEqual( Stem("tonul"), "ton" );
	deepEqual( Stem("tonului"), "ton" );
	deepEqual( Stem("tonuri"), "tonur" );
	deepEqual( Stem("tonurile"), "tonur" );
	deepEqual( Stem("topaz"), "topaz" );
	deepEqual( Stem("topească"), "topeasc" );
	deepEqual( Stem("topire"), "topir" );
	deepEqual( Stem("topirea"), "topir" );
	deepEqual( Stem("topit"), "topit" );
	deepEqual( Stem("topită"), "topit" );
	deepEqual( Stem("topor"), "topor" );
	deepEqual( Stem("toptanul"), "toptan" );
	deepEqual( Stem("torente"), "torent" );
	deepEqual( Stem("torni"), "torn" );
	deepEqual( Stem("toropeşte"), "torop" );
	deepEqual( Stem("tortură"), "tort" );
	deepEqual( Stem("torţe"), "torţ" );
	deepEqual( Stem("tot"), "tot" );
	deepEqual( Stem("total"), "total" );
	deepEqual( Stem("totală"), "total" );
	deepEqual( Stem("totale"), "total" );
	deepEqual( Stem("totalitate"), "total" );
	deepEqual( Stem("totalitatea"), "total" );
	deepEqual( Stem("totalităţii"), "total" );
	deepEqual( Stem("totalizare"), "totaliz" );
	deepEqual( Stem("totdeauna"), "totdeaun" );
	deepEqual( Stem("totdeodată"), "totdeod" );
	deepEqual( Stem("totodată"), "totod" );
	deepEqual( Stem("totul"), "tot" );
	deepEqual( Stem("totuna"), "totun" );
	deepEqual( Stem("totuşi"), "totuş" );
	deepEqual( Stem("toţi"), "toţ" );
	deepEqual( Stem("toţii"), "toţ" );
	deepEqual( Stem("tournoi"), "tourno" );
	deepEqual( Stem("tout"), "tout" );
	deepEqual( Stem("tovarăş"), "tovarăş" );
	deepEqual( Stem("tovarăşa"), "tovarăş" );
	deepEqual( Stem("tovarăşi"), "tovarăş" );
	deepEqual( Stem("tovarăşii"), "tovarăş" );
	deepEqual( Stem("tovarăşilor"), "tovarăş" );
	deepEqual( Stem("tovarăşul"), "tovarăş" );
	deepEqual( Stem("tovarăşului"), "tovarăş" );
	deepEqual( Stem("tovărăşia"), "tovărăş" );
	deepEqual( Stem("tovărăşie"), "tovărăş" );
	deepEqual( Stem("tradiţie"), "tradiţ" );
	deepEqual( Stem("tradiţii"), "trad" );
	deepEqual( Stem("tradiţional"), "tradiţional" );
	deepEqual( Stem("tradiţională"), "tradiţional" );
	deepEqual( Stem("tradiţionale"), "tradiţional" );
	deepEqual( Stem("tradiţionalismului"), "tradiţionalist" );
	deepEqual( Stem("tradiţiunea"), "tradit" );
	deepEqual( Stem("traducă"), "traduc" );
	deepEqual( Stem("traduce"), "traduc" );
	deepEqual( Stem("traducea"), "traduc" );
	deepEqual( Stem("traducere"), "traduc" );
	deepEqual( Stem("traducerea"), "traduc" );
	deepEqual( Stem("traduceri"), "traducer" );
	deepEqual( Stem("tradus"), "tradus" );
	deepEqual( Stem("trag"), "trag" );
	deepEqual( Stem("tragă"), "trag" );
	deepEqual( Stem("trage"), "trag" );
	deepEqual( Stem("tragedia"), "traged" );
	deepEqual( Stem("tragedie"), "traged" );
	deepEqual( Stem("tragedii"), "traged" );
	deepEqual( Stem("tragediile"), "traged" );
	deepEqual( Stem("tragem"), "trag" );
	deepEqual( Stem("tragere"), "trag" );
	deepEqual( Stem("tragerea"), "trag" );
	deepEqual( Stem("trageţi"), "trag" );
	deepEqual( Stem("tragic"), "tragic" );
	deepEqual( Stem("tragică"), "tragic" );
	deepEqual( Stem("tragicii"), "tragic" );
	deepEqual( Stem("trai"), "tra" );
	deepEqual( Stem("traiectoria"), "traiector" );
	deepEqual( Stem("traiectorie"), "traiector" );
	deepEqual( Stem("traiul"), "trai" );
	deepEqual( Stem("traiului"), "trai" );
	deepEqual( Stem("tramvai"), "tramv" );
	deepEqual( Stem("tramvaielor"), "tramvai" );
	deepEqual( Stem("tramvaiul"), "tramvai" );
	deepEqual( Stem("trandafir"), "trandafir" );
	deepEqual( Stem("trandafiri"), "trandafir" );
	deepEqual( Stem("trandafiriu"), "trandafiriu" );
	deepEqual( Stem("trandafirul"), "trandafir" );
	deepEqual( Stem("transceandă"), "transceand" );
	deepEqual( Stem("transcend"), "transcend" );
	deepEqual( Stem("transcende"), "transcend" );
	deepEqual( Stem("transcendem"), "transcend" );
	deepEqual( Stem("transcendent"), "transcendent" );
	deepEqual( Stem("transcendental"), "transcendental" );
	deepEqual( Stem("transcendentale"), "transcendental" );
	deepEqual( Stem("transcendentă"), "transcendent" );
	deepEqual( Stem("transcendente"), "transcendent" );
	deepEqual( Stem("transcendenţa"), "transcendenţ" );
	deepEqual( Stem("transcendenţă"), "transcendenţ" );
	deepEqual( Stem("transcendenţe"), "transcendenţ" );
	deepEqual( Stem("transcris"), "transcris" );
	deepEqual( Stem("transform"), "transform" );
	deepEqual( Stem("transforma"), "transform" );
	deepEqual( Stem("transformare"), "transform" );
	deepEqual( Stem("transformarea"), "transform" );
	deepEqual( Stem("transformat"), "transform" );
	deepEqual( Stem("transformată"), "transform" );
	deepEqual( Stem("transformate"), "transform" );
	deepEqual( Stem("transformând"), "transform" );
	deepEqual( Stem("transformându"), "transform" );
	deepEqual( Stem("transformă"), "transform" );
	deepEqual( Stem("transformări"), "transformăr" );
	deepEqual( Stem("transformării"), "transformăr" );
	deepEqual( Stem("transformările"), "transformăr" );
	deepEqual( Stem("transforme"), "transform" );
	deepEqual( Stem("transfug"), "transfug" );
	deepEqual( Stem("transgresa"), "transgres" );
	deepEqual( Stem("transgresarea"), "transgres" );
	deepEqual( Stem("transgresăm"), "transgres" );
	deepEqual( Stem("transgresează"), "transgres" );
	deepEqual( Stem("transilvania"), "transilvan" );
	deepEqual( Stem("transmis"), "transmis" );
	deepEqual( Stem("transmite"), "transmit" );
	deepEqual( Stem("transport"), "transport" );
	deepEqual( Stem("transportat"), "transport" );
	deepEqual( Stem("transportată"), "transport" );
	deepEqual( Stem("transportaţi"), "transport" );
	deepEqual( Stem("transportă"), "transport" );
	deepEqual( Stem("transportul"), "transport" );
	deepEqual( Stem("transportului"), "transport" );
	deepEqual( Stem("transporturile"), "transportur" );
	deepEqual( Stem("transpun"), "transpun" );
	deepEqual( Stem("transpunere"), "transpun" );
	deepEqual( Stem("transpuneri"), "transpuner" );
	deepEqual( Stem("transpus"), "transpus" );
	deepEqual( Stem("transpusă"), "transpus" );
	deepEqual( Stem("tranşee"), "tranşe" );
	deepEqual( Stem("tranşeele"), "tranşe" );
	deepEqual( Stem("tranşeelor"), "tranşe" );
	deepEqual( Stem("trap"), "trap" );
	deepEqual( Stem("trapul"), "trap" );
	deepEqual( Stem("tras"), "tras" );
	deepEqual( Stem("trasă"), "tras" );
	deepEqual( Stem("trase"), "tra" );
	deepEqual( Stem("traşi"), "traş" );
	deepEqual( Stem("tratament"), "tratament" );
	deepEqual( Stem("tratamentul"), "tratament" );
	deepEqual( Stem("tratamentului"), "tratament" );
	deepEqual( Stem("tratarea"), "trat" );
	deepEqual( Stem("tratat"), "tratat" );
	deepEqual( Stem("tratată"), "tratat" );
	deepEqual( Stem("tratate"), "tratat" );
	deepEqual( Stem("tratăm"), "trat" );
	deepEqual( Stem("tratează"), "trat" );
	deepEqual( Stem("traversa"), "travers" );
	deepEqual( Stem("traversat"), "travers" );
	deepEqual( Stem("traversând"), "travers" );
	deepEqual( Stem("traversăm"), "travers" );
	deepEqual( Stem("trâmbă"), "trâmb" );
	deepEqual( Stem("trâmbe"), "trâmb" );
	deepEqual( Stem("trândave"), "trândav" );
	deepEqual( Stem("trândăvia"), "trândăv" );
	deepEqual( Stem("trândăviei"), "trândăv" );
	deepEqual( Stem("trântea"), "trânt" );
	deepEqual( Stem("trântească"), "trânt" );
	deepEqual( Stem("trântesc"), "trânt" );
	deepEqual( Stem("trânteşte"), "trânt" );
	deepEqual( Stem("trânti"), "trânt" );
	deepEqual( Stem("trântim"), "trânt" );
	deepEqual( Stem("trântind"), "trânt" );
	deepEqual( Stem("trântise"), "trânt" );
	deepEqual( Stem("trântit"), "trântit" );
	deepEqual( Stem("trântite"), "trântit" );
	deepEqual( Stem("trântiţi"), "trânt" );
	deepEqual( Stem("trădează"), "trăd" );
	deepEqual( Stem("trădez"), "trăd" );
	deepEqual( Stem("trădeze"), "trăd" );
	deepEqual( Stem("trăgaciul"), "trăgac" );
	deepEqual( Stem("trăgând"), "trăg" );
	deepEqual( Stem("trăgător"), "trăgat" );
	deepEqual( Stem("trăgători"), "trăgat" );
	deepEqual( Stem("trăgea"), "trăg" );
	deepEqual( Stem("trăgeam"), "trăg" );
	deepEqual( Stem("trăi"), "tră" );
	deepEqual( Stem("trăia"), "trăi" );
	deepEqual( Stem("trăiască"), "trăiasc" );
	deepEqual( Stem("trăiau"), "trăi" );
	deepEqual( Stem("trăiesc"), "trăi" );
	deepEqual( Stem("trăieşte"), "trăi" );
	deepEqual( Stem("trăieşti"), "trăi" );
	deepEqual( Stem("trăim"), "tră" );
	deepEqual( Stem("trăirea"), "trăir" );
	deepEqual( Stem("trăiseră"), "trăiser" );
	deepEqual( Stem("trăit"), "trăit" );
	deepEqual( Stem("trăite"), "trăit" );
	deepEqual( Stem("trăiţi"), "tră" );
	deepEqual( Stem("trăsătură"), "trăsăt" );
	deepEqual( Stem("trăsături"), "trăsătur" );
	deepEqual( Stem("trăsăturile"), "trăsătur" );
	deepEqual( Stem("trăsăturilor"), "trăsătur" );
	deepEqual( Stem("trăsese"), "tră" );
	deepEqual( Stem("trăsnet"), "trăsnet" );
	deepEqual( Stem("trăsnete"), "trăsnet" );
	deepEqual( Stem("trăsnetele"), "trăsnet" );
	deepEqual( Stem("trăsnetul"), "trăsnet" );
	deepEqual( Stem("trăsni"), "trăsn" );
	deepEqual( Stem("trăsnind"), "trăsn" );
	deepEqual( Stem("trăsnit"), "trăsnit" );
	deepEqual( Stem("trăsura"), "trăsur" );
	deepEqual( Stem("trăsură"), "trăs" );
	deepEqual( Stem("trăsuri"), "trăsur" );
	deepEqual( Stem("trăsurii"), "trăsur" );
	deepEqual( Stem("trăsurilor"), "trăsur" );
	deepEqual( Stem("treaba"), "treab" );
	deepEqual( Stem("treabă"), "treab" );
	deepEqual( Stem("treacă"), "treac" );
	deepEqual( Stem("treacăt"), "treacăt" );
	deepEqual( Stem("treapta"), "treapt" );
	deepEqual( Stem("treaptă"), "treapt" );
	deepEqual( Stem("treaz"), "treaz" );
	deepEqual( Stem("trebilor"), "treb" );
	deepEqual( Stem("trebui"), "treb" );
	deepEqual( Stem("trebuia"), "trebui" );
	deepEqual( Stem("trebuiască"), "trebuiasc" );
	deepEqual( Stem("trebuiau"), "trebui" );
	deepEqual( Stem("trebuie"), "trebui" );
	deepEqual( Stem("trebuiesc"), "trebui" );
	deepEqual( Stem("trebuieşte"), "trebui" );
	deepEqual( Stem("trebuinţa"), "trebuinţ" );
	deepEqual( Stem("trebuinţă"), "trebuinţ" );
	deepEqual( Stem("trebuinţe"), "trebuinţ" );
	deepEqual( Stem("trebuinţelor"), "trebuinţ" );
	deepEqual( Stem("trebuit"), "trebuit" );
	deepEqual( Stem("treburi"), "trebur" );
	deepEqual( Stem("trec"), "trec" );
	deepEqual( Stem("trecând"), "trec" );
	deepEqual( Stem("trecându"), "trec" );
	deepEqual( Stem("trecătoare"), "trecat" );
	deepEqual( Stem("trecător"), "trecat" );
	deepEqual( Stem("trecătorii"), "trecat" );
	deepEqual( Stem("trece"), "trec" );
	deepEqual( Stem("trecea"), "trec" );
	deepEqual( Stem("treceam"), "trec" );
	deepEqual( Stem("treceau"), "trec" );
	deepEqual( Stem("trecem"), "trec" );
	deepEqual( Stem("trecere"), "trec" );
	deepEqual( Stem("trecerea"), "trec" );
	deepEqual( Stem("treceri"), "trecer" );
	deepEqual( Stem("trecerii"), "trecer" );
	deepEqual( Stem("treceţi"), "trec" );
	deepEqual( Stem("treci"), "trec" );
	deepEqual( Stem("trecu"), "trecu" );
	deepEqual( Stem("trecuse"), "trec" );
	deepEqual( Stem("trecusem"), "trec" );
	deepEqual( Stem("trecuseră"), "trec" );
	deepEqual( Stem("trecuserăm"), "trec" );
	deepEqual( Stem("trecut"), "trecut" );
	deepEqual( Stem("trecută"), "trecut" );
	deepEqual( Stem("trecute"), "trecut" );
	deepEqual( Stem("trecutul"), "trecut" );
	deepEqual( Stem("trecutului"), "trecut" );
	deepEqual( Stem("trecuţi"), "trecuţ" );
	deepEqual( Stem("trei"), "tre" );
	deepEqual( Stem("treia"), "trei" );
	deepEqual( Stem("treilea"), "treil" );
	deepEqual( Stem("treimii"), "treim" );
	deepEqual( Stem("treizeci"), "treizec" );
	deepEqual( Stem("treji"), "trej" );
	deepEqual( Stem("tremur"), "tremur" );
	deepEqual( Stem("tremura"), "tremur" );
	deepEqual( Stem("tremuram"), "tremur" );
	deepEqual( Stem("tremurând"), "tremur" );
	deepEqual( Stem("tremură"), "trem" );
	deepEqual( Stem("tremurăm"), "trem" );
	deepEqual( Stem("tren"), "tren" );
	deepEqual( Stem("trenul"), "tren" );
	deepEqual( Stem("trenului"), "tren" );
	deepEqual( Stem("trenuri"), "trenur" );
	deepEqual( Stem("trenurile"), "trenur" );
	deepEqual( Stem("trepidaţia"), "trepid" );
	deepEqual( Stem("treptat"), "treptat" );
	deepEqual( Stem("trepte"), "trept" );
	deepEqual( Stem("tresar"), "tresar" );
	deepEqual( Stem("tresară"), "tres" );
	deepEqual( Stem("tresărea"), "tresăr" );
	deepEqual( Stem("tresăreau"), "tresăr" );
	deepEqual( Stem("tresări"), "tresăr" );
	deepEqual( Stem("tresărim"), "tresăr" );
	deepEqual( Stem("tresărind"), "tresăr" );
	deepEqual( Stem("tresărirea"), "tresăr" );
	deepEqual( Stem("tresărit"), "tresăr" );
	deepEqual( Stem("tresăriţi"), "tresăr" );
	deepEqual( Stem("trestie"), "trest" );
	deepEqual( Stem("trezea"), "trez" );
	deepEqual( Stem("trezească"), "trez" );
	deepEqual( Stem("trezesc"), "trez" );
	deepEqual( Stem("trezeşte"), "trez" );
	deepEqual( Stem("trezeşti"), "trez" );
	deepEqual( Stem("trezi"), "trez" );
	deepEqual( Stem("trezim"), "trez" );
	deepEqual( Stem("treziră"), "trez" );
	deepEqual( Stem("trezire"), "trez" );
	deepEqual( Stem("trezirii"), "trezir" );
	deepEqual( Stem("trezise"), "trez" );
	deepEqual( Stem("trezit"), "trezit" );
	deepEqual( Stem("trezită"), "trezit" );
	deepEqual( Stem("trezite"), "trezit" );
	deepEqual( Stem("treziţi"), "trez" );
	deepEqual( Stem("tria"), "tri" );
	deepEqual( Stem("triadă"), "triad" );
	deepEqual( Stem("triadei"), "triade" );
	deepEqual( Stem("triaj"), "triaj" );
	deepEqual( Stem("triajul"), "triaj" );
	deepEqual( Stem("trib"), "trib" );
	deepEqual( Stem("tribal"), "tribal" );
	deepEqual( Stem("tribală"), "tribal" );
	deepEqual( Stem("tribalităţi"), "tribal" );
	deepEqual( Stem("tribord"), "tribord" );
	deepEqual( Stem("tribulaţiile"), "tribul" );
	deepEqual( Stem("tribuna"), "tribun" );
	deepEqual( Stem("tribunal"), "tribunal" );
	deepEqual( Stem("tribunale"), "tribunal" );
	deepEqual( Stem("tribunalelor"), "tribunal" );
	deepEqual( Stem("tribună"), "tribun" );
	deepEqual( Stem("tribunei"), "tribune" );
	deepEqual( Stem("tribunele"), "tribun" );
	deepEqual( Stem("tricolore"), "tricolor" );
	deepEqual( Stem("tridimensional"), "tridimensional" );
	deepEqual( Stem("trimis"), "trimis" );
	deepEqual( Stem("trimise"), "trim" );
	deepEqual( Stem("trimisese"), "trim" );
	deepEqual( Stem("trimisesem"), "trim" );
	deepEqual( Stem("trimişi"), "trim" );
	deepEqual( Stem("trimit"), "trimit" );
	deepEqual( Stem("trimită"), "trimit" );
	deepEqual( Stem("trimite"), "trimit" );
	deepEqual( Stem("trimitem"), "trimit" );
	deepEqual( Stem("trimiteri"), "trimiter" );
	deepEqual( Stem("trimiţându"), "trimiţ" );
	deepEqual( Stem("trimiţi"), "trim" );
	deepEqual( Stem("tripticul"), "triptic" );
	deepEqual( Stem("trist"), "trist" );
	deepEqual( Stem("tristă"), "trist" );
	deepEqual( Stem("triste"), "trist" );
	deepEqual( Stem("tristeţe"), "tristeţ" );
	deepEqual( Stem("tristeţi"), "trist" );
	deepEqual( Stem("tristeţile"), "trist" );
	deepEqual( Stem("trişajul"), "trişaj" );
	deepEqual( Stem("trişti"), "trişt" );
	deepEqual( Stem("triumfase"), "triumf" );
	deepEqual( Stem("triumfător"), "triumfat" );
	deepEqual( Stem("triumfe"), "triumf" );
	deepEqual( Stem("triumful"), "triumf" );
	deepEqual( Stem("triumfurile"), "triumfur" );
	deepEqual( Stem("triunghi"), "triungh" );
	deepEqual( Stem("triunghiul"), "triungh" );
	deepEqual( Stem("triunghiului"), "triungh" );
	deepEqual( Stem("triungi"), "triung" );
	deepEqual( Stem("trivial"), "trivial" );
	deepEqual( Stem("trivială"), "trivial" );
	deepEqual( Stem("triviale"), "trivial" );
	deepEqual( Stem("trivialitatea"), "trivial" );
	deepEqual( Stem("trivialităţile"), "trivial" );
	deepEqual( Stem("troienise"), "troien" );
	deepEqual( Stem("trombă"), "tromb" );
	deepEqual( Stem("trombe"), "tromb" );
	deepEqual( Stem("trombele"), "tromb" );
	deepEqual( Stem("trommelfeuer"), "trommelfeuer" );
	deepEqual( Stem("trompetele"), "trompet" );
	deepEqual( Stem("trompetică"), "trompet" );
	deepEqual( Stem("tropical"), "tropic" );
	deepEqual( Stem("tropot"), "tropot" );
	deepEqual( Stem("trosnitor"), "trosnit" );
	deepEqual( Stem("trotuar"), "trotuar" );
	deepEqual( Stem("trotuarul"), "trotuar" );
	deepEqual( Stem("truc"), "truc" );
	deepEqual( Stem("truda"), "trud" );
	deepEqual( Stem("trudă"), "trud" );
	deepEqual( Stem("trudeam"), "trud" );
	deepEqual( Stem("trudesc"), "trud" );
	deepEqual( Stem("trudi"), "trud" );
	deepEqual( Stem("trudnici"), "trudnic" );
	deepEqual( Stem("trufanda"), "trufand" );
	deepEqual( Stem("trufandalele"), "trufandal" );
	deepEqual( Stem("trunchi"), "trunch" );
	deepEqual( Stem("trunchiul"), "trunch" );
	deepEqual( Stem("trunchiuri"), "trunchiur" );
	deepEqual( Stem("trunchiurile"), "trunchiur" );
	deepEqual( Stem("trup"), "trup" );
	deepEqual( Stem("trupa"), "trup" );
	deepEqual( Stem("trupă"), "trup" );
	deepEqual( Stem("trupe"), "trup" );
	deepEqual( Stem("trupei"), "trupe" );
	deepEqual( Stem("trupele"), "trup" );
	deepEqual( Stem("trupelor"), "trup" );
	deepEqual( Stem("trupeşă"), "trupeş" );
	deepEqual( Stem("trupul"), "trup" );
	deepEqual( Stem("trupului"), "trup" );
	deepEqual( Stem("trupuri"), "trupur" );
	deepEqual( Stem("trupurile"), "trupur" );
	deepEqual( Stem("trupurilor"), "trupur" );
	deepEqual( Stem("tu"), "tu" );
	deepEqual( Stem("tuberculoşilor"), "tubercul" );
	deepEqual( Stem("tuberculoză"), "tuberculoz" );
	deepEqual( Stem("tuburi"), "tubur" );
	deepEqual( Stem("tuchei"), "tuche" );
	deepEqual( Stem("tudor"), "tudor" );
	deepEqual( Stem("tudora"), "tudor" );
	deepEqual( Stem("tudose"), "tudo" );
	deepEqual( Stem("tufă"), "tuf" );
	deepEqual( Stem("tufele"), "tuf" );
	deepEqual( Stem("tufiş"), "tufiş" );
	deepEqual( Stem("tufişuri"), "tufişur" );
	deepEqual( Stem("tulburarea"), "tulbur" );
	deepEqual( Stem("tulburat"), "tulbur" );
	deepEqual( Stem("tulburau"), "tulbur" );
	deepEqual( Stem("tulbură"), "tulb" );
	deepEqual( Stem("tulburări"), "tulburăr" );
	deepEqual( Stem("tulburătoare"), "tulbur" );
	deepEqual( Stem("tulburător"), "tulbur" );
	deepEqual( Stem("tulbure"), "tulbur" );
	deepEqual( Stem("tulburi"), "tulbur" );
	deepEqual( Stem("tulpan"), "tulpan" );
	deepEqual( Stem("tumbe"), "tumb" );
	deepEqual( Stem("tumultuoasă"), "tumultu" );
	deepEqual( Stem("tumultuoase"), "tumultu" );
	deepEqual( Stem("tun"), "tun" );
	deepEqual( Stem("tunari"), "tunar" );
	deepEqual( Stem("tună"), "tun" );
	deepEqual( Stem("tunde"), "tund" );
	deepEqual( Stem("tunel"), "tunel" );
	deepEqual( Stem("tuns"), "tuns" );
	deepEqual( Stem("tunsă"), "tuns" );
	deepEqual( Stem("tunul"), "tun" );
	deepEqual( Stem("tunuri"), "tunur" );
	deepEqual( Stem("tunurile"), "tunur" );
	deepEqual( Stem("turbarea"), "turb" );
	deepEqual( Stem("turbat"), "turbat" );
	deepEqual( Stem("turbată"), "turbat" );
	deepEqual( Stem("turbate"), "turbat" );
	deepEqual( Stem("turburată"), "turbur" );
	deepEqual( Stem("turbură"), "turb" );
	deepEqual( Stem("turci"), "turc" );
	deepEqual( Stem("turcii"), "turc" );
	deepEqual( Stem("tureatca"), "tureatc" );
	deepEqual( Stem("turla"), "turl" );
	deepEqual( Stem("turlă"), "turl" );
	deepEqual( Stem("turmă"), "turm" );
	deepEqual( Stem("turn"), "turn" );
	deepEqual( Stem("turnat"), "turnat" );
	deepEqual( Stem("turnând"), "turn" );
	deepEqual( Stem("turnându"), "turn" );
	deepEqual( Stem("turnătoria"), "turnător" );
	deepEqual( Stem("turnul"), "turn" );
	deepEqual( Stem("turnuri"), "turnur" );
	deepEqual( Stem("turtă"), "turt" );
	deepEqual( Stem("turtit"), "turtit" );
	deepEqual( Stem("turtite"), "turtit" );
	deepEqual( Stem("turtucaia"), "turtucai" );
	deepEqual( Stem("turtucaiei"), "turtucaie" );
	deepEqual( Stem("tutun"), "tutun" );
	deepEqual( Stem("tutunaru"), "tutunaru" );
	deepEqual( Stem("tutungerie"), "tutunger" );
	deepEqual( Stem("tuturor"), "tuturor" );
	deepEqual( Stem("ţambalagiu"), "ţambalagiu" );
	deepEqual( Stem("ţambalul"), "ţambal" );
	deepEqual( Stem("ţap"), "ţap" );
	deepEqual( Stem("ţara"), "ţar" );
	deepEqual( Stem("ţară"), "ţar" );
	deepEqual( Stem("ţarc"), "ţarc" );
	deepEqual( Stem("ţarcuri"), "ţarcur" );
	deepEqual( Stem("ţarismului"), "ţarism" );
	deepEqual( Stem("ţânţar"), "ţânţar" );
	deepEqual( Stem("ţârcovnic"), "ţârcovn" );
	deepEqual( Stem("ţâşnesc"), "ţâşn" );
	deepEqual( Stem("ţâşnirea"), "ţâşn" );
	deepEqual( Stem("ţâşnit"), "ţâşnit" );
	deepEqual( Stem("ţâşnitoare"), "ţâşnit" );
	deepEqual( Stem("ţâşnitură"), "ţâşnit" );
	deepEqual( Stem("ţăran"), "ţăran" );
	deepEqual( Stem("ţărance"), "ţăranc" );
	deepEqual( Stem("ţărani"), "ţăran" );
	deepEqual( Stem("ţăranii"), "ţăran" );
	deepEqual( Stem("ţăranilor"), "ţăran" );
	deepEqual( Stem("ţăranul"), "ţăran" );
	deepEqual( Stem("ţăranului"), "ţăran" );
	deepEqual( Stem("ţărână"), "ţărân" );
	deepEqual( Stem("ţărăncuţă"), "ţărăncuţ" );
	deepEqual( Stem("ţărănească"), "ţărăn" );
	deepEqual( Stem("ţărănesc"), "ţărăn" );
	deepEqual( Stem("ţărăneşte"), "ţărăn" );
	deepEqual( Stem("ţărăneşti"), "ţărăn" );
	deepEqual( Stem("ţărănimea"), "ţărănim" );
	deepEqual( Stem("ţărănisme"), "ţărănist" );
	deepEqual( Stem("ţărănizare"), "ţărăniz" );
	deepEqual( Stem("ţări"), "ţăr" );
	deepEqual( Stem("ţării"), "ţăr" );
	deepEqual( Stem("ţările"), "ţăr" );
	deepEqual( Stem("ţăruş"), "ţăruş" );
	deepEqual( Stem("ţeapă"), "ţeap" );
	deepEqual( Stem("ţeasta"), "ţeast" );
	deepEqual( Stem("ţeavă"), "ţeav" );
	deepEqual( Stem("ţepeni"), "ţepen" );
	deepEqual( Stem("ţepeş"), "ţepeş" );
	deepEqual( Stem("ţepi"), "ţep" );
	deepEqual( Stem("ţes"), "ţes" );
	deepEqual( Stem("ţesătură"), "ţesăt" );
	deepEqual( Stem("ţestoase"), "ţestoas" );
	deepEqual( Stem("ţesuse"), "ţesus" );
	deepEqual( Stem("ţesut"), "ţesut" );
	deepEqual( Stem("ţesută"), "ţesut" );
	deepEqual( Stem("ţesuturi"), "ţesutur" );
	deepEqual( Stem("ţevi"), "ţev" );
	deepEqual( Stem("ţevile"), "ţev" );
	deepEqual( Stem("ţi"), "ţi" );
	deepEqual( Stem("ţie"), "ţie" );
	deepEqual( Stem("ţigan"), "ţigan" );
	deepEqual( Stem("ţigane"), "ţigan" );
	deepEqual( Stem("ţigani"), "ţigan" );
	deepEqual( Stem("ţiganiada"), "ţiganiad" );
	deepEqual( Stem("ţiganii"), "ţigan" );
	deepEqual( Stem("ţigara"), "ţigar" );
	deepEqual( Stem("ţigară"), "ţigar" );
	deepEqual( Stem("ţigarete"), "ţigaret" );
	deepEqual( Stem("ţigaretul"), "ţigaret" );
	deepEqual( Stem("ţigăncuşă"), "ţigăncuş" );
	deepEqual( Stem("ţigăneşte"), "ţigăn" );
	deepEqual( Stem("ţigăneşti"), "ţigăn" );
	deepEqual( Stem("ţigănimea"), "ţigănim" );
	deepEqual( Stem("ţigănimii"), "ţigănim" );
	deepEqual( Stem("ţigănuşi"), "ţigăn" );
	deepEqual( Stem("ţigănuşii"), "ţigăn" );
	deepEqual( Stem("ţigări"), "ţigăr" );
	deepEqual( Stem("ţigările"), "ţigăr" );
	deepEqual( Stem("ţiglă"), "ţigl" );
	deepEqual( Stem("ţignale"), "ţignal" );
	deepEqual( Stem("ţii"), "ţii" );
	deepEqual( Stem("ţin"), "ţin" );
	deepEqual( Stem("ţinând"), "ţinând" );
	deepEqual( Stem("ţinându"), "ţinându" );
	deepEqual( Stem("ţină"), "ţin" );
	deepEqual( Stem("ţine"), "ţin" );
	deepEqual( Stem("ţinea"), "ţin" );
	deepEqual( Stem("ţineam"), "ţineam" );
	deepEqual( Stem("ţineau"), "ţineau" );
	deepEqual( Stem("ţinem"), "ţin" );
	deepEqual( Stem("ţinere"), "ţiner" );
	deepEqual( Stem("ţineţi"), "ţin" );
	deepEqual( Stem("ţinta"), "ţint" );
	deepEqual( Stem("ţintă"), "ţint" );
	deepEqual( Stem("ţintea"), "ţint" );
	deepEqual( Stem("ţintele"), "ţint" );
	deepEqual( Stem("ţintisem"), "ţint" );
	deepEqual( Stem("ţinut"), "ţinut" );
	deepEqual( Stem("ţinuta"), "ţinut" );
	deepEqual( Stem("ţinută"), "ţinut" );
	deepEqual( Stem("ţinutul"), "ţinut" );
	deepEqual( Stem("ţinuturile"), "ţinutur" );
	deepEqual( Stem("ţinuţi"), "ţinuţ" );
	deepEqual( Stem("ţipat"), "ţipat" );
	deepEqual( Stem("ţipă"), "ţip" );
	deepEqual( Stem("ţipăcioasă"), "ţipăc" );
	deepEqual( Stem("ţipete"), "ţipet" );
	deepEqual( Stem("ţuguiată"), "ţugui" );
	deepEqual( Stem("ţuica"), "ţuic" );
	deepEqual( Stem("ţuică"), "ţuic" );
	deepEqual( Stem("uchronia"), "uchron" );
	deepEqual( Stem("ucid"), "ucid" );
	deepEqual( Stem("ucidă"), "ucid" );
	deepEqual( Stem("ucide"), "ucid" );
	deepEqual( Stem("uciderea"), "ucid" );
	deepEqual( Stem("ucis"), "ucis" );
	deepEqual( Stem("ucisă"), "ucis" );
	deepEqual( Stem("ucizi"), "uciz" );
	deepEqual( Stem("ud"), "ud" );
	deepEqual( Stem("udă"), "udă" );
	deepEqual( Stem("ude"), "ude" );
	deepEqual( Stem("uf"), "uf" );
	deepEqual( Stem("uimească"), "uimeasc" );
	deepEqual( Stem("uimeşte"), "uimeşt" );
	deepEqual( Stem("uimire"), "uimir" );
	deepEqual( Stem("uimirea"), "uimir" );
	deepEqual( Stem("uimit"), "uimit" );
	deepEqual( Stem("uimită"), "uimit" );
	deepEqual( Stem("uimitoare"), "uimit" );
	deepEqual( Stem("uimitor"), "uimit" );
	deepEqual( Stem("uimiţi"), "uim" );
	deepEqual( Stem("uit"), "uit" );
	deepEqual( Stem("uita"), "uit" );
	deepEqual( Stem("uitam"), "uitam" );
	deepEqual( Stem("uitare"), "uitar" );
	deepEqual( Stem("uitasem"), "uitasem" );
	deepEqual( Stem("uitat"), "uitat" );
	deepEqual( Stem("uitată"), "uitat" );
	deepEqual( Stem("uitate"), "uitat" );
	deepEqual( Stem("uitaţi"), "uit" );
	deepEqual( Stem("uitând"), "uitând" );
	deepEqual( Stem("uitându"), "uitându" );
	deepEqual( Stem("uită"), "uit" );
	deepEqual( Stem("uităm"), "uit" );
	deepEqual( Stem("uite"), "uit" );
	deepEqual( Stem("uiţi"), "uiţ" );
	deepEqual( Stem("ulcelele"), "ulcel" );
	deepEqual( Stem("ulcer"), "ulcer" );
	deepEqual( Stem("ulceroase"), "ulcer" );
	deepEqual( Stem("uleioasă"), "ulei" );
	deepEqual( Stem("ulguz"), "ulguz" );
	deepEqual( Stem("uliţa"), "uliţ" );
	deepEqual( Stem("uliţă"), "uliţ" );
	deepEqual( Stem("uliţele"), "uliţ" );
	deepEqual( Stem("ulterioare"), "ulterioar" );
	deepEqual( Stem("ulterior"), "ulterior" );
	deepEqual( Stem("ultim"), "ultim" );
	deepEqual( Stem("ultima"), "ultim" );
	deepEqual( Stem("ultimă"), "ultim" );
	deepEqual( Stem("ultime"), "ultim" );
	deepEqual( Stem("ultimei"), "ultime" );
	deepEqual( Stem("ultimele"), "ultim" );
	deepEqual( Stem("ultimii"), "ultim" );
	deepEqual( Stem("ultimul"), "ultim" );
	deepEqual( Stem("ultralucizi"), "ultraluciz" );
	deepEqual( Stem("ultramodernă"), "ultramodern" );
	deepEqual( Stem("ultraoccidentale"), "ultraoccidental" );
	deepEqual( Stem("uluc"), "uluc" );
	deepEqual( Stem("ulucile"), "uluc" );
	deepEqual( Stem("ului"), "ulu" );
	deepEqual( Stem("uluieşte"), "ului" );
	deepEqual( Stem("uluit"), "uluit" );
	deepEqual( Stem("uluită"), "uluit" );
	deepEqual( Stem("uluitoare"), "uluit" );
	deepEqual( Stem("uluitoarea"), "uluit" );
	deepEqual( Stem("uluitoarei"), "uluitoare" );
	deepEqual( Stem("uluitor"), "uluit" );
	deepEqual( Stem("uluiţi"), "ulu" );
	deepEqual( Stem("uman"), "uman" );
	deepEqual( Stem("umană"), "uman" );
	deepEqual( Stem("umane"), "uman" );
	deepEqual( Stem("umanist"), "umanist" );
	deepEqual( Stem("umaniste"), "umanist" );
	deepEqual( Stem("umanitar"), "umanitar" );
	deepEqual( Stem("umanitare"), "umanit" );
	deepEqual( Stem("umanitate"), "uman" );
	deepEqual( Stem("umanităţi"), "uman" );
	deepEqual( Stem("umăr"), "umăr" );
	deepEqual( Stem("umărul"), "umăr" );
	deepEqual( Stem("umbla"), "umbla" );
	deepEqual( Stem("umblam"), "umblam" );
	deepEqual( Stem("umblat"), "umblat" );
	deepEqual( Stem("umblau"), "umblau" );
	deepEqual( Stem("umblă"), "umblă" );
	deepEqual( Stem("umbli"), "umbli" );
	deepEqual( Stem("umblu"), "umblu" );
	deepEqual( Stem("umbra"), "umbra" );
	deepEqual( Stem("umbrar"), "umbrar" );
	deepEqual( Stem("umbrarul"), "umbrar" );
	deepEqual( Stem("umbră"), "umbră" );
	deepEqual( Stem("umbre"), "umbre" );
	deepEqual( Stem("umbrela"), "umbrel" );
	deepEqual( Stem("umbrelă"), "umbrel" );
	deepEqual( Stem("umbrele"), "umbre" );
	deepEqual( Stem("umbreluţa"), "umbreluţ" );
	deepEqual( Stem("umbreluţă"), "umbreluţ" );
	deepEqual( Stem("umbrit"), "umbrit" );
	deepEqual( Stem("umbrită"), "umbrit" );
	deepEqual( Stem("umbroase"), "umbroas" );
	deepEqual( Stem("umed"), "umed" );
	deepEqual( Stem("umedă"), "umed" );
	deepEqual( Stem("umede"), "umed" );
	deepEqual( Stem("umeri"), "umer" );
	deepEqual( Stem("umerii"), "umer" );
	deepEqual( Stem("umezeala"), "umezeal" );
	deepEqual( Stem("umezeală"), "umezeal" );
	deepEqual( Stem("umezi"), "umez" );
	deepEqual( Stem("umflate"), "umflat" );
	deepEqual( Stem("umflă"), "umflă" );
	deepEqual( Stem("umilească"), "umil" );
	deepEqual( Stem("umilesc"), "umil" );
	deepEqual( Stem("umileşte"), "umil" );
	deepEqual( Stem("umilinţă"), "umilinţ" );
	deepEqual( Stem("umilinţe"), "umilinţ" );
	deepEqual( Stem("umilit"), "umil" );
	deepEqual( Stem("umilită"), "umil" );
	deepEqual( Stem("umilitoare"), "umil" );
	deepEqual( Stem("umilitor"), "umil" );
	deepEqual( Stem("umorul"), "umor" );
	deepEqual( Stem("umplând"), "umplând" );
	deepEqual( Stem("umplându"), "umplându" );
	deepEqual( Stem("umple"), "umple" );
	deepEqual( Stem("umplea"), "umple" );
	deepEqual( Stem("umpleau"), "umpleau" );
	deepEqual( Stem("umplut"), "umplut" );
	deepEqual( Stem("umpluţi"), "umpluţ" );
	deepEqual( Stem("un"), "un" );
	deepEqual( Stem("una"), "una" );
	deepEqual( Stem("unchi"), "unchi" );
	deepEqual( Stem("unchiaş"), "unchiaş" );
	deepEqual( Stem("unchiaşul"), "unchiaş" );
	deepEqual( Stem("unchiaşului"), "unchiaş" );
	deepEqual( Stem("unchiu"), "unchiu" );
	deepEqual( Stem("unchiul"), "unchi" );
	deepEqual( Stem("unchiule"), "unchiul" );
	deepEqual( Stem("unchiului"), "unchi" );
	deepEqual( Stem("und"), "und" );
	deepEqual( Stem("unda"), "unda" );
	deepEqual( Stem("undă"), "undă" );
	deepEqual( Stem("unde"), "unde" );
	deepEqual( Stem("undeva"), "undev" );
	deepEqual( Stem("unduit"), "unduit" );
	deepEqual( Stem("une"), "une" );
	deepEqual( Stem("unei"), "une" );
	deepEqual( Stem("uneia"), "unei" );
	deepEqual( Stem("unele"), "une" );
	deepEqual( Stem("uneori"), "uneor" );
	deepEqual( Stem("unghia"), "unghi" );
	deepEqual( Stem("unghiile"), "unghi" );
	deepEqual( Stem("unghiul"), "unghi" );
	deepEqual( Stem("unghiuri"), "unghiur" );
	deepEqual( Stem("unghiurilor"), "unghiur" );
	deepEqual( Stem("ungur"), "ungur" );
	deepEqual( Stem("ungurească"), "ungur" );
	deepEqual( Stem("ungureşti"), "ungur" );
	deepEqual( Stem("unguri"), "ungur" );
	deepEqual( Stem("ungurii"), "ungur" );
	deepEqual( Stem("ungurilor"), "ungur" );
	deepEqual( Stem("ungurul"), "ungur" );
	deepEqual( Stem("uni"), "uni" );
	deepEqual( Stem("unic"), "unic" );
	deepEqual( Stem("unică"), "unic" );
	deepEqual( Stem("unice"), "unic" );
	deepEqual( Stem("unidimensional"), "unidimensional" );
	deepEqual( Stem("unidimensională"), "unidimensional" );
	deepEqual( Stem("unifică"), "unif" );
	deepEqual( Stem("uniform"), "uniform" );
	deepEqual( Stem("uniforma"), "uniform" );
	deepEqual( Stem("uniformă"), "uniform" );
	deepEqual( Stem("uniforme"), "uniform" );
	deepEqual( Stem("uniformele"), "uniform" );
	deepEqual( Stem("uniformitate"), "uniform" );
	deepEqual( Stem("uniformitatea"), "uniform" );
	deepEqual( Stem("uniformităţi"), "uniform" );
	deepEqual( Stem("uniformităţii"), "uniform" );
	deepEqual( Stem("unii"), "uni" );
	deepEqual( Stem("unilaterală"), "unilateral" );
	deepEqual( Stem("unilaterale"), "unilateral" );
	deepEqual( Stem("unilineară"), "unilinear" );
	deepEqual( Stem("uniliniară"), "uniliniar" );
	deepEqual( Stem("unirea"), "unir" );
	deepEqual( Stem("unitar"), "unitar" );
	deepEqual( Stem("unitate"), "unitat" );
	deepEqual( Stem("unitatea"), "unitat" );
	deepEqual( Stem("unităţi"), "unităţ" );
	deepEqual( Stem("unităţii"), "unităţ" );
	deepEqual( Stem("unităţile"), "unităţ" );
	deepEqual( Stem("uniţi"), "uniţ" );
	deepEqual( Stem("univers"), "univers" );
	deepEqual( Stem("universală"), "universal" );
	deepEqual( Stem("universale"), "universal" );
	deepEqual( Stem("universalitate"), "universal" );
	deepEqual( Stem("universalitatea"), "universal" );
	deepEqual( Stem("universalităţii"), "universal" );
	deepEqual( Stem("universitar"), "universitar" );
	deepEqual( Stem("universitate"), "univers" );
	deepEqual( Stem("universitatea"), "univers" );
	deepEqual( Stem("universităţii"), "univers" );
	deepEqual( Stem("universul"), "univers" );
	deepEqual( Stem("universului"), "univers" );
	deepEqual( Stem("univoc"), "univoc" );
	deepEqual( Stem("univocitatea"), "univoc" );
	deepEqual( Stem("unor"), "unor" );
	deepEqual( Stem("unora"), "unor" );
	deepEqual( Stem("unsprezece"), "unsprezec" );
	deepEqual( Stem("unsuroşi"), "unsur" );
	deepEqual( Stem("untărofiţeri"), "untărofiţer" );
	deepEqual( Stem("untdelemnul"), "untdelemn" );
	deepEqual( Stem("unter"), "unter" );
	deepEqual( Stem("untul"), "unt" );
	deepEqual( Stem("untură"), "untur" );
	deepEqual( Stem("unu"), "unu" );
	deepEqual( Stem("unui"), "unu" );
	deepEqual( Stem("unuia"), "unui" );
	deepEqual( Stem("unul"), "un" );
	deepEqual( Stem("ura"), "ura" );
	deepEqual( Stem("uragan"), "uragan" );
	deepEqual( Stem("uragane"), "uragan" );
	deepEqual( Stem("uraganul"), "uragan" );
	deepEqual( Stem("uraganului"), "uragan" );
	deepEqual( Stem("urale"), "ural" );
	deepEqual( Stem("uranus"), "uranus" );
	deepEqual( Stem("urâciunea"), "urâciun" );
	deepEqual( Stem("urâciuni"), "urâciun" );
	deepEqual( Stem("urât"), "urât" );
	deepEqual( Stem("urâtă"), "urât" );
	deepEqual( Stem("urâţi"), "urâţ" );
	deepEqual( Stem("urâţică"), "urâţ" );
	deepEqual( Stem("ură"), "ură" );
	deepEqual( Stem("urări"), "urăr" );
	deepEqual( Stem("urbană"), "urban" );
	deepEqual( Stem("urbane"), "urban" );
	deepEqual( Stem("urbea"), "urbe" );
	deepEqual( Stem("urbei"), "urbe" );
	deepEqual( Stem("urc"), "urc" );
	deepEqual( Stem("urca"), "urca" );
	deepEqual( Stem("urcam"), "urcam" );
	deepEqual( Stem("urcarea"), "urcar" );
	deepEqual( Stem("urcat"), "urcat" );
	deepEqual( Stem("urcată"), "urcat" );
	deepEqual( Stem("urcate"), "urcat" );
	deepEqual( Stem("urcaţi"), "urcaţ" );
	deepEqual( Stem("urcau"), "urcau" );
	deepEqual( Stem("urcând"), "urcând" );
	deepEqual( Stem("urcă"), "urcă" );
	deepEqual( Stem("urcăm"), "urcăm" );
	deepEqual( Stem("urce"), "urce" );
	deepEqual( Stem("urcuş"), "urcuş" );
	deepEqual( Stem("urcuşul"), "urcuş" );
	deepEqual( Stem("ureche"), "urech" );
	deepEqual( Stem("urechea"), "urech" );
	deepEqual( Stem("urecheat"), "urech" );
	deepEqual( Stem("urechi"), "urech" );
	deepEqual( Stem("urechii"), "urech" );
	deepEqual( Stem("urechile"), "urech" );
	deepEqual( Stem("urechiuşe"), "urechiuş" );
	deepEqual( Stem("uremie"), "urem" );
	deepEqual( Stem("urgent"), "urgent" );
	deepEqual( Stem("uri"), "uri" );
	deepEqual( Stem("uriaş"), "uriaş" );
	deepEqual( Stem("uriaşă"), "uriaş" );
	deepEqual( Stem("uriaşe"), "uriaş" );
	deepEqual( Stem("uriaşi"), "uriaş" );
	deepEqual( Stem("urlam"), "urlam" );
	deepEqual( Stem("urlat"), "urlat" );
	deepEqual( Stem("urlând"), "urlând" );
	deepEqual( Stem("urlându"), "urlându" );
	deepEqual( Stem("urlă"), "urlă" );
	deepEqual( Stem("urlător"), "urlat" );
	deepEqual( Stem("urle"), "urle" );
	deepEqual( Stem("urlet"), "urlet" );
	deepEqual( Stem("urlete"), "urlet" );
	deepEqual( Stem("urletele"), "urlet" );
	deepEqual( Stem("urletul"), "urlet" );
	deepEqual( Stem("urlu"), "urlu" );
	deepEqual( Stem("urma"), "urma" );
	deepEqual( Stem("urmare"), "urmar" );
	deepEqual( Stem("urmarea"), "urmar" );
	deepEqual( Stem("urmaşii"), "urmaş" );
	deepEqual( Stem("urmat"), "urmat" );
	deepEqual( Stem("urmată"), "urmat" );
	deepEqual( Stem("urmate"), "urmat" );
	deepEqual( Stem("urmând"), "urmând" );
	deepEqual( Stem("urmă"), "urmă" );
	deepEqual( Stem("urmăm"), "urmăm" );
	deepEqual( Stem("urmărea"), "urmăr" );
	deepEqual( Stem("urmărească"), "urmăr" );
	deepEqual( Stem("urmăreau"), "urmăr" );
	deepEqual( Stem("urmăresc"), "urmăr" );
	deepEqual( Stem("urmăreşte"), "urmăr" );
	deepEqual( Stem("urmări"), "urmăr" );
	deepEqual( Stem("urmărim"), "urmăr" );
	deepEqual( Stem("urmărind"), "urmăr" );
	deepEqual( Stem("urmărindu"), "urmăr" );
	deepEqual( Stem("urmărirea"), "urmăr" );
	deepEqual( Stem("urmăririi"), "urmărir" );
	deepEqual( Stem("urmărit"), "urmăr" );
	deepEqual( Stem("urmăriţi"), "urmăr" );
	deepEqual( Stem("următoare"), "urmat" );
	deepEqual( Stem("următoarele"), "urmat" );
	deepEqual( Stem("următor"), "urmat" );
	deepEqual( Stem("următori"), "urmat" );
	deepEqual( Stem("următorul"), "urmat" );
	deepEqual( Stem("urme"), "urme" );
	deepEqual( Stem("urmează"), "urmeaz" );
	deepEqual( Stem("urmei"), "urme" );
	deepEqual( Stem("urmele"), "urme" );
	deepEqual( Stem("urmelor"), "urme" );
	deepEqual( Stem("urmeze"), "urmez" );
	deepEqual( Stem("urs"), "urs" );
	deepEqual( Stem("ursuz"), "ursuz" );
	deepEqual( Stem("urşi"), "urşi" );
	deepEqual( Stem("uruială"), "uruial" );
	deepEqual( Stem("uruie"), "urui" );
	deepEqual( Stem("uruind"), "uruind" );
	deepEqual( Stem("uruit"), "uruit" );
	deepEqual( Stem("uruitul"), "uruit" );
	deepEqual( Stem("urzeala"), "urzeal" );
	deepEqual( Stem("uscase"), "usca" );
	deepEqual( Stem("uscat"), "uscat" );
	deepEqual( Stem("uscată"), "uscat" );
	deepEqual( Stem("uscate"), "uscat" );
	deepEqual( Stem("uscaţi"), "uscaţ" );
	deepEqual( Stem("usturătoare"), "ustur" );
	deepEqual( Stem("usuc"), "usuc" );
	deepEqual( Stem("usucă"), "usuc" );
	deepEqual( Stem("uşa"), "uşa" );
	deepEqual( Stem("uşă"), "uşă" );
	deepEqual( Stem("uşile"), "uşi" );
	deepEqual( Stem("uşoară"), "uşoar" );
	deepEqual( Stem("uşoare"), "uşoar" );
	deepEqual( Stem("uşor"), "uşor" );
	deepEqual( Stem("uşori"), "uşor" );
	deepEqual( Stem("uşurare"), "uşur" );
	deepEqual( Stem("uşurat"), "uşur" );
	deepEqual( Stem("uşuratic"), "uşurat" );
	deepEqual( Stem("uşuraţi"), "uşur" );
	deepEqual( Stem("uşurinţa"), "uşurinţ" );
	deepEqual( Stem("uşurinţă"), "uşurinţ" );
	deepEqual( Stem("ut"), "ut" );
	deepEqual( Stem("utilă"), "util" );
	deepEqual( Stem("utile"), "uti" );
	deepEqual( Stem("utilitate"), "util" );
	deepEqual( Stem("utilitatea"), "util" );
	deepEqual( Stem("utopia"), "utop" );
	deepEqual( Stem("utopii"), "utop" );
	deepEqual( Stem("uvrieri"), "uvrier" );
	deepEqual( Stem("uvrierilor"), "uvrier" );
	deepEqual( Stem("uza"), "uza" );
	deepEqual( Stem("uzat"), "uzat" );
	deepEqual( Stem("uzi"), "uzi" );
	deepEqual( Stem("uzina"), "uzin" );
	deepEqual( Stem("uzină"), "uzin" );
	deepEqual( Stem("uzinei"), "uzine" );
	deepEqual( Stem("uzul"), "uz" );
	deepEqual( Stem("uzurpare"), "uzurp" );
	deepEqual( Stem("v"), "v" );
	deepEqual( Stem("va"), "va" );
	deepEqual( Stem("vacanţă"), "vacanţ" );
	deepEqual( Stem("vacă"), "vac" );
	deepEqual( Stem("vad"), "vad" );
	deepEqual( Stem("vadă"), "vad" );
	deepEqual( Stem("vadul"), "vad" );
	deepEqual( Stem("vag"), "vag" );
	deepEqual( Stem("vagabonzi"), "vagabonz" );
	deepEqual( Stem("vagă"), "vag" );
	deepEqual( Stem("vagi"), "vag" );
	deepEqual( Stem("vagoane"), "vagoan" );
	deepEqual( Stem("vagoanele"), "vagoan" );
	deepEqual( Stem("vagon"), "vagon" );
	deepEqual( Stem("vagonete"), "vagonet" );
	deepEqual( Stem("vagonul"), "vagon" );
	deepEqual( Stem("vagonului"), "vagon" );
	deepEqual( Stem("vai"), "vai" );
	deepEqual( Stem("vaietă"), "vaiet" );
	deepEqual( Stem("vaiete"), "vaiet" );
	deepEqual( Stem("vaită"), "vait" );
	deepEqual( Stem("vajnici"), "vajnic" );
	deepEqual( Stem("val"), "val" );
	deepEqual( Stem("valabil"), "valabil" );
	deepEqual( Stem("valabilă"), "valabil" );
	deepEqual( Stem("valabile"), "valabil" );
	deepEqual( Stem("valabilitate"), "valabil" );
	deepEqual( Stem("valabilitatea"), "valabil" );
	deepEqual( Stem("valabilităţii"), "valabil" );
	deepEqual( Stem("valah"), "valah" );
	deepEqual( Stem("valahia"), "valah" );
	deepEqual( Stem("vale"), "val" );
	deepEqual( Stem("valea"), "val" );
	deepEqual( Stem("valentin"), "valentin" );
	deepEqual( Stem("valenţe"), "valenţ" );
	deepEqual( Stem("valenţelor"), "valenţ" );
	deepEqual( Stem("valeriu"), "valeriu" );
	deepEqual( Stem("valery"), "valery" );
	deepEqual( Stem("valet"), "valet" );
	deepEqual( Stem("valid"), "valid" );
	deepEqual( Stem("valida"), "valid" );
	deepEqual( Stem("validare"), "valid" );
	deepEqual( Stem("validareaen"), "validareaen" );
	deepEqual( Stem("validau"), "valid" );
	deepEqual( Stem("validă"), "valid" );
	deepEqual( Stem("validării"), "validăr" );
	deepEqual( Stem("valideaza"), "valideaz" );
	deepEqual( Stem("validen"), "validen" );
	deepEqual( Stem("validitate"), "valid" );
	deepEqual( Stem("validităţii"), "valid" );
	deepEqual( Stem("valiză"), "valiz" );
	deepEqual( Stem("valma"), "valm" );
	deepEqual( Stem("valoare"), "valoar" );
	deepEqual( Stem("valoarea"), "valoar" );
	deepEqual( Stem("valon"), "valon" );
	deepEqual( Stem("valora"), "valor" );
	deepEqual( Stem("valorează"), "valor" );
	deepEqual( Stem("valori"), "valor" );
	deepEqual( Stem("valorică"), "valor" );
	deepEqual( Stem("valorific"), "valorif" );
	deepEqual( Stem("valorifica"), "valorif" );
	deepEqual( Stem("valorificare"), "valorific" );
	deepEqual( Stem("valorificarea"), "valorific" );
	deepEqual( Stem("valorifică"), "valorif" );
	deepEqual( Stem("valorificările"), "valorificăr" );
	deepEqual( Stem("valorii"), "valor" );
	deepEqual( Stem("valorile"), "valor" );
	deepEqual( Stem("valorilor"), "valor" );
	deepEqual( Stem("valoros"), "valor" );
	deepEqual( Stem("vals"), "vals" );
	deepEqual( Stem("valurile"), "valur" );
	deepEqual( Stem("valută"), "valut" );
	deepEqual( Stem("valutelor"), "valut" );
	deepEqual( Stem("vama"), "vam" );
	deepEqual( Stem("vamă"), "vam" );
	deepEqual( Stem("vameşul"), "vameş" );
	deepEqual( Stem("vana"), "van" );
	deepEqual( Stem("vanitate"), "vanitat" );
	deepEqual( Stem("vanitatea"), "vanitat" );
	deepEqual( Stem("vanităţi"), "vanităţ" );
	deepEqual( Stem("vanităţii"), "vanităţ" );
	deepEqual( Stem("vanitoase"), "vanit" );
	deepEqual( Stem("vapoarele"), "vapoar" );
	deepEqual( Stem("vapori"), "vapor" );
	deepEqual( Stem("var"), "var" );
	deepEqual( Stem("vara"), "var" );
	deepEqual( Stem("vară"), "var" );
	deepEqual( Stem("vargă"), "varg" );
	deepEqual( Stem("varia"), "vari" );
	deepEqual( Stem("variate"), "variat" );
	deepEqual( Stem("variaţia"), "variaţ" );
	deepEqual( Stem("variaţie"), "variaţ" );
	deepEqual( Stem("variaţii"), "variaţ" );
	deepEqual( Stem("varietate"), "variet" );
	deepEqual( Stem("varietatea"), "variet" );
	deepEqual( Stem("varietăţi"), "varietăţ" );
	deepEqual( Stem("varietăţile"), "varietăţ" );
	deepEqual( Stem("variez"), "variez" );
	deepEqual( Stem("varniţele"), "varniţ" );
	deepEqual( Stem("varosului"), "varos" );
	deepEqual( Stem("varşovia"), "varşov" );
	deepEqual( Stem("varul"), "var" );
	deepEqual( Stem("varză"), "varz" );
	deepEqual( Stem("vas"), "vas" );
	deepEqual( Stem("vasăzică"), "vasăz" );
	deepEqual( Stem("vase"), "vas" );
	deepEqual( Stem("vasile"), "vas" );
	deepEqual( Stem("vasilescu"), "vasilescu" );
	deepEqual( Stem("vasilică"), "vasil" );
	deepEqual( Stem("vasiliu"), "vasiliu" );
	deepEqual( Stem("vasiliule"), "vasiliul" );
	deepEqual( Stem("vaslui"), "vasl" );
	deepEqual( Stem("vast"), "vast" );
	deepEqual( Stem("vasta"), "vast" );
	deepEqual( Stem("vastă"), "vast" );
	deepEqual( Stem("vaste"), "vast" );
	deepEqual( Stem("vastei"), "vaste" );
	deepEqual( Stem("vastele"), "vast" );
	deepEqual( Stem("vasu"), "vasu" );
	deepEqual( Stem("vasul"), "vas" );
	deepEqual( Stem("vată"), "vat" );
	deepEqual( Stem("vaterland"), "vaterland" );
	deepEqual( Stem("vatra"), "vatr" );
	deepEqual( Stem("vatră"), "vatr" );
	deepEqual( Stem("vază"), "vaz" );
	deepEqual( Stem("vâjâie"), "vâjâi" );
	deepEqual( Stem("vâjâind"), "vâjâind" );
	deepEqual( Stem("vâjâit"), "vâjâit" );
	deepEqual( Stem("vâjâitoare"), "vâjâit" );
	deepEqual( Stem("vâjâitura"), "vâjâitur" );
	deepEqual( Stem("vâjâituri"), "vâjâitur" );
	deepEqual( Stem("vâjâiturile"), "vâjâitur" );
	deepEqual( Stem("vâlcea"), "vâlc" );
	deepEqual( Stem("vâlceaua"), "vâlceau" );
	deepEqual( Stem("vâlceluşa"), "vâlceluş" );
	deepEqual( Stem("vâlceluşă"), "vâlceluş" );
	deepEqual( Stem("vâlceluşe"), "vâlceluş" );
	deepEqual( Stem("vâlceluşei"), "vâlceluşe" );
	deepEqual( Stem("vâlceluşile"), "vâlcel" );
	deepEqual( Stem("vâlvătăi"), "vâlvătă" );
	deepEqual( Stem("vânam"), "vânam" );
	deepEqual( Stem("vânat"), "vânat" );
	deepEqual( Stem("vânatul"), "vânat" );
	deepEqual( Stem("vânătaia"), "vânătai" );
	deepEqual( Stem("vânătă"), "vânăt" );
	deepEqual( Stem("vânătoare"), "vânat" );
	deepEqual( Stem("vânător"), "vânat" );
	deepEqual( Stem("vânători"), "vânat" );
	deepEqual( Stem("vânătorii"), "vânat" );
	deepEqual( Stem("vând"), "vând" );
	deepEqual( Stem("vândut"), "vândut" );
	deepEqual( Stem("vândute"), "vândut" );
	deepEqual( Stem("vânează"), "vâneaz" );
	deepEqual( Stem("vâneze"), "vânez" );
	deepEqual( Stem("vânjoase"), "vânjoas" );
	deepEqual( Stem("vânjos"), "vânjos" );
	deepEqual( Stem("vânt"), "vânt" );
	deepEqual( Stem("vântul"), "vânt" );
	deepEqual( Stem("vânzare"), "vânz" );
	deepEqual( Stem("vânzolea"), "vânzol" );
	deepEqual( Stem("vâr"), "vâr" );
	deepEqual( Stem("vârând"), "vârând" );
	deepEqual( Stem("vârâte"), "vârât" );
	deepEqual( Stem("vâră"), "vâr" );
	deepEqual( Stem("vâre"), "vâr" );
	deepEqual( Stem("vârf"), "vârf" );
	deepEqual( Stem("vârful"), "vârf" );
	deepEqual( Stem("vârfurile"), "vârfur" );
	deepEqual( Stem("vârsta"), "vârst" );
	deepEqual( Stem("vârstă"), "vârst" );
	deepEqual( Stem("vârtos"), "vârtos" );
	deepEqual( Stem("vâslind"), "vâsl" );
	deepEqual( Stem("vă"), "vă" );
	deepEqual( Stem("văcăreşti"), "văcăr" );
	deepEqual( Stem("văd"), "văd" );
	deepEqual( Stem("vădea"), "văd" );
	deepEqual( Stem("vădind"), "vădind" );
	deepEqual( Stem("vădit"), "vădit" );
	deepEqual( Stem("vădite"), "vădit" );
	deepEqual( Stem("văduva"), "văduv" );
	deepEqual( Stem("văduvă"), "văduv" );
	deepEqual( Stem("văi"), "văi" );
	deepEqual( Stem("văicărească"), "văicăr" );
	deepEqual( Stem("văicăresc"), "văicăr" );
	deepEqual( Stem("văii"), "văi" );
	deepEqual( Stem("văile"), "văil" );
	deepEqual( Stem("văilor"), "văilor" );
	deepEqual( Stem("văleni"), "vălen" );
	deepEqual( Stem("vămii"), "văm" );
	deepEqual( Stem("văpaie"), "văpai" );
	deepEqual( Stem("văr"), "văr" );
	deepEqual( Stem("văraru"), "văraru" );
	deepEqual( Stem("vărarule"), "vărarul" );
	deepEqual( Stem("văratice"), "vărat" );
	deepEqual( Stem("vărgată"), "vărgat" );
	deepEqual( Stem("văros"), "văros" );
	deepEqual( Stem("vărsat"), "vărsat" );
	deepEqual( Stem("vărsau"), "vărs" );
	deepEqual( Stem("vărsându"), "vărs" );
	deepEqual( Stem("văru"), "văru" );
	deepEqual( Stem("văruită"), "văruit" );
	deepEqual( Stem("vătămătoare"), "vătăm" );
	deepEqual( Stem("văz"), "văz" );
	deepEqual( Stem("văzând"), "văzând" );
	deepEqual( Stem("văzându"), "văzându" );
	deepEqual( Stem("văzduh"), "văzduh" );
	deepEqual( Stem("văzduhul"), "văzduh" );
	deepEqual( Stem("văzduhului"), "văzduh" );
	deepEqual( Stem("văzului"), "văz" );
	deepEqual( Stem("văzuse"), "văzus" );
	deepEqual( Stem("văzusem"), "văzusem" );
	deepEqual( Stem("văzuseră"), "văzuser" );
	deepEqual( Stem("văzut"), "văzut" );
	deepEqual( Stem("văzută"), "văzut" );
	deepEqual( Stem("văzute"), "văzut" );
	deepEqual( Stem("văzuţi"), "văzuţ" );
	deepEqual( Stem("veac"), "veac" );
	deepEqual( Stem("veacul"), "veac" );
	deepEqual( Stem("veacului"), "veac" );
	deepEqual( Stem("veacuri"), "veacur" );
	deepEqual( Stem("veacurile"), "veacur" );
	deepEqual( Stem("veacurilor"), "veacur" );
	deepEqual( Stem("veche"), "vech" );
	deepEqual( Stem("vechea"), "vech" );
	deepEqual( Stem("vechi"), "vech" );
	deepEqual( Stem("vechii"), "vech" );
	deepEqual( Stem("vechile"), "vech" );
	deepEqual( Stem("vechime"), "vechim" );
	deepEqual( Stem("vechimea"), "vechim" );
	deepEqual( Stem("vechimii"), "vechim" );
	deepEqual( Stem("vechiul"), "vech" );
	deepEqual( Stem("veci"), "vec" );
	deepEqual( Stem("vecii"), "vec" );
	deepEqual( Stem("vecilor"), "vec" );
	deepEqual( Stem("vecin"), "vecin" );
	deepEqual( Stem("vecina"), "vecin" );
	deepEqual( Stem("vecină"), "vecin" );
	deepEqual( Stem("vecine"), "vecin" );
	deepEqual( Stem("vecinei"), "vecine" );
	deepEqual( Stem("vecini"), "vecin" );
	deepEqual( Stem("vecinii"), "vecin" );
	deepEqual( Stem("vecinilor"), "vecin" );
	deepEqual( Stem("vecinul"), "vecin" );
	deepEqual( Stem("vecinului"), "vecin" );
	deepEqual( Stem("vectori"), "vector" );
	deepEqual( Stem("vede"), "ved" );
	deepEqual( Stem("vedea"), "ved" );
	deepEqual( Stem("vedeam"), "vedeam" );
	deepEqual( Stem("vedeau"), "vedeau" );
	deepEqual( Stem("vedem"), "ved" );
	deepEqual( Stem("vedenii"), "veden" );
	deepEqual( Stem("vedere"), "veder" );
	deepEqual( Stem("vederea"), "veder" );
	deepEqual( Stem("vederi"), "veder" );
	deepEqual( Stem("vederilor"), "veder" );
	deepEqual( Stem("vedete"), "vedet" );
	deepEqual( Stem("vedeţi"), "ved" );
	deepEqual( Stem("vegetal"), "vegetal" );
	deepEqual( Stem("vegetaţie"), "veget" );
	deepEqual( Stem("veghe"), "vegh" );
	deepEqual( Stem("vegheaseră"), "vegheaser" );
	deepEqual( Stem("vehementă"), "vehement" );
	deepEqual( Stem("vehemenţă"), "vehemenţ" );
	deepEqual( Stem("vehemenţi"), "vehemenţ" );
	deepEqual( Stem("vehicule"), "vehicul" );
	deepEqual( Stem("vei"), "vei" );
	deepEqual( Stem("velinţe"), "velinţ" );
	deepEqual( Stem("venea"), "ven" );
	deepEqual( Stem("veneam"), "veneam" );
	deepEqual( Stem("veneau"), "veneau" );
	deepEqual( Stem("venerabila"), "vener" );
	deepEqual( Stem("veneratul"), "vener" );
	deepEqual( Stem("venerei"), "venere" );
	deepEqual( Stem("veneţia"), "veneţ" );
	deepEqual( Stem("veni"), "ven" );
	deepEqual( Stem("venim"), "ven" );
	deepEqual( Stem("venin"), "venin" );
	deepEqual( Stem("venind"), "venind" );
	deepEqual( Stem("veninoasă"), "venin" );
	deepEqual( Stem("veninoase"), "venin" );
	deepEqual( Stem("venire"), "venir" );
	deepEqual( Stem("venirea"), "venir" );
	deepEqual( Stem("venirilor"), "venir" );
	deepEqual( Stem("venise"), "venis" );
	deepEqual( Stem("venit"), "venit" );
	deepEqual( Stem("venită"), "venit" );
	deepEqual( Stem("venite"), "venit" );
	deepEqual( Stem("venituri"), "venitur" );
	deepEqual( Stem("veniturile"), "venitur" );
	deepEqual( Stem("veniţi"), "ven" );
	deepEqual( Stem("verbal"), "verbal" );
	deepEqual( Stem("verbală"), "verbal" );
	deepEqual( Stem("verbale"), "verbal" );
	deepEqual( Stem("verbali"), "verbal" );
	deepEqual( Stem("verbalism"), "verbalist" );
	deepEqual( Stem("verbalismul"), "verbalist" );
	deepEqual( Stem("verbalismului"), "verbalist" );
	deepEqual( Stem("verbalist"), "verbalist" );
	deepEqual( Stem("verbaliste"), "verbalist" );
	deepEqual( Stem("verde"), "verd" );
	deepEqual( Stem("verdeaţă"), "verdeaţ" );
	deepEqual( Stem("verdele"), "verd" );
	deepEqual( Stem("verdun"), "verdun" );
	deepEqual( Stem("verdunul"), "verdun" );
	deepEqual( Stem("verifica"), "verif" );
	deepEqual( Stem("verificare"), "verific" );
	deepEqual( Stem("verificarea"), "verific" );
	deepEqual( Stem("verificat"), "verific" );
	deepEqual( Stem("verificată"), "verific" );
	deepEqual( Stem("verificatoare"), "verific" );
	deepEqual( Stem("verifică"), "verif" );
	deepEqual( Stem("verificăm"), "verific" );
	deepEqual( Stem("verificări"), "verificăr" );
	deepEqual( Stem("verifice"), "verif" );
	deepEqual( Stem("verifici"), "verif" );
	deepEqual( Stem("verii"), "ver" );
	deepEqual( Stem("verişoară"), "verişoar" );
	deepEqual( Stem("verişoare"), "verişoar" );
	deepEqual( Stem("verlaineiană"), "verlaineian" );
	deepEqual( Stem("verminei"), "vermine" );
	deepEqual( Stem("vermouth"), "vermouth" );
	deepEqual( Stem("veroase"), "veroas" );
	deepEqual( Stem("verosimilă"), "verosimil" );
	deepEqual( Stem("verrier"), "verrier" );
	deepEqual( Stem("versailles"), "versailles" );
	deepEqual( Stem("versuri"), "versur" );
	deepEqual( Stem("versurile"), "versur" );
	deepEqual( Stem("vertiginoasă"), "vertigin" );
	deepEqual( Stem("vertiginoase"), "vertigin" );
	deepEqual( Stem("vervă"), "verv" );
	deepEqual( Stem("very"), "very" );
	deepEqual( Stem("verzi"), "verz" );
	deepEqual( Stem("verzui"), "verz" );
	deepEqual( Stem("verzuie"), "verzui" );
	deepEqual( Stem("vesel"), "vesel" );
	deepEqual( Stem("veselă"), "vesel" );
	deepEqual( Stem("vesele"), "ves" );
	deepEqual( Stem("veseli"), "vesel" );
	deepEqual( Stem("veselia"), "vesel" );
	deepEqual( Stem("veselie"), "vesel" );
	deepEqual( Stem("vest"), "vest" );
	deepEqual( Stem("veste"), "vest" );
	deepEqual( Stem("vestea"), "vest" );
	deepEqual( Stem("vestei"), "veste" );
	deepEqual( Stem("vesteji"), "vestej" );
	deepEqual( Stem("vestesc"), "vest" );
	deepEqual( Stem("vestit"), "vestit" );
	deepEqual( Stem("vestită"), "vestit" );
	deepEqual( Stem("vestite"), "vestit" );
	deepEqual( Stem("vestitul"), "vestit" );
	deepEqual( Stem("vestoane"), "vestoan" );
	deepEqual( Stem("veston"), "veston" );
	deepEqual( Stem("vestonul"), "veston" );
	deepEqual( Stem("vestonului"), "veston" );
	deepEqual( Stem("veşnic"), "veşnic" );
	deepEqual( Stem("veşnică"), "veşnic" );
	deepEqual( Stem("veşnice"), "veşnic" );
	deepEqual( Stem("veşnicia"), "veşnic" );
	deepEqual( Stem("veşnicie"), "veşnic" );
	deepEqual( Stem("veşniciei"), "veşnic" );
	deepEqual( Stem("veşnicii"), "veşnic" );
	deepEqual( Stem("veştejitului"), "veştej" );
	deepEqual( Stem("veşti"), "veşt" );
	deepEqual( Stem("veştile"), "veşt" );
	deepEqual( Stem("veţi"), "veţ" );
	deepEqual( Stem("vezi"), "vez" );
	deepEqual( Stem("vi"), "vi" );
	deepEqual( Stem("via"), "via" );
	deepEqual( Stem("viaţa"), "viaţ" );
	deepEqual( Stem("viaţă"), "viaţ" );
	deepEqual( Stem("viceversa"), "vicevers" );
	deepEqual( Stem("vicioasă"), "vicioas" );
	deepEqual( Stem("viclean"), "viclean" );
	deepEqual( Stem("vicleană"), "viclean" );
	deepEqual( Stem("vicleniile"), "viclen" );
	deepEqual( Stem("vicleşug"), "vicleşug" );
	deepEqual( Stem("victima"), "victim" );
	deepEqual( Stem("victimă"), "victim" );
	deepEqual( Stem("victime"), "victim" );
	deepEqual( Stem("victimei"), "victime" );
	deepEqual( Stem("victimele"), "victim" );
	deepEqual( Stem("victimelor"), "victim" );
	deepEqual( Stem("victimizarea"), "victimiz" );
	deepEqual( Stem("victimizării"), "victimizăr" );
	deepEqual( Stem("victor"), "victor" );
	deepEqual( Stem("victoria"), "victor" );
	deepEqual( Stem("victoriei"), "victor" );
	deepEqual( Stem("victoriene"), "victorien" );
	deepEqual( Stem("victorii"), "victor" );
	deepEqual( Stem("victorioasă"), "victor" );
	deepEqual( Stem("victorioase"), "victor" );
	deepEqual( Stem("victorios"), "victor" );
	deepEqual( Stem("victorioşi"), "victor" );
	deepEqual( Stem("vid"), "vid" );
	deepEqual( Stem("vidă"), "vid" );
	deepEqual( Stem("video"), "video" );
	deepEqual( Stem("vie"), "vie" );
	deepEqual( Stem("viena"), "vien" );
	deepEqual( Stem("vienez"), "vien" );
	deepEqual( Stem("vieneză"), "vienez" );
	deepEqual( Stem("vier"), "vier" );
	deepEqual( Stem("vierme"), "vierm" );
	deepEqual( Stem("viermuielii"), "viermuiel" );
	deepEqual( Stem("viermuire"), "viermu" );
	deepEqual( Stem("viers"), "viers" );
	deepEqual( Stem("viesparul"), "viespar" );
	deepEqual( Stem("viespe"), "viesp" );
	deepEqual( Stem("viespea"), "viesp" );
	deepEqual( Stem("vietate"), "vietat" );
	deepEqual( Stem("vietăţile"), "vietăţ" );
	deepEqual( Stem("vietnam"), "vietn" );
	deepEqual( Stem("vieţi"), "vieţ" );
	deepEqual( Stem("vieţii"), "vieţ" );
	deepEqual( Stem("vigoarea"), "vigoar" );
	deepEqual( Stem("viguroasă"), "vigur" );
	deepEqual( Stem("viguros"), "vigur" );
	deepEqual( Stem("vigurosul"), "vigur" );
	deepEqual( Stem("viguroşi"), "vigur" );
	deepEqual( Stem("vii"), "vii" );
	deepEqual( Stem("viilor"), "viilor" );
	deepEqual( Stem("viitoare"), "viitoar" );
	deepEqual( Stem("viitoarea"), "viitoar" );
	deepEqual( Stem("viitoarei"), "viitoare" );
	deepEqual( Stem("viitor"), "viitor" );
	deepEqual( Stem("viitorul"), "viitor" );
	deepEqual( Stem("viitorului"), "viitor" );
	deepEqual( Stem("vijelioasă"), "vijel" );
	deepEqual( Stem("vila"), "vil" );
	deepEqual( Stem("vilă"), "vil" );
	deepEqual( Stem("vile"), "vil" );
	deepEqual( Stem("vilegiatură"), "vilegiat" );
	deepEqual( Stem("vilegiaturişti"), "vilegiaturist" );
	deepEqual( Stem("vilegiaturiştilor"), "vilegiaturist" );
	deepEqual( Stem("vin"), "vin" );
	deepEqual( Stem("vina"), "vin" );
	deepEqual( Stem("vină"), "vin" );
	deepEqual( Stem("vinde"), "vind" );
	deepEqual( Stem("vindea"), "vind" );
	deepEqual( Stem("vindeam"), "vind" );
	deepEqual( Stem("vindeca"), "vindec" );
	deepEqual( Stem("vindecare"), "vindec" );
	deepEqual( Stem("vindecat"), "vindec" );
	deepEqual( Stem("vindecă"), "vindec" );
	deepEqual( Stem("vine"), "vin" );
	deepEqual( Stem("vinei"), "vine" );
	deepEqual( Stem("vinele"), "vin" );
	deepEqual( Stem("vineri"), "viner" );
	deepEqual( Stem("vinete"), "vinet" );
	deepEqual( Stem("vino"), "vino" );
	deepEqual( Stem("vinovat"), "vinov" );
	deepEqual( Stem("vinovată"), "vinov" );
	deepEqual( Stem("vinovate"), "vinov" );
	deepEqual( Stem("vinovaţi"), "vinov" );
	deepEqual( Stem("vinovaţii"), "vinov" );
	deepEqual( Stem("vinovăţie"), "vinovăţ" );
	deepEqual( Stem("vinul"), "vin" );
	deepEqual( Stem("vinului"), "vin" );
	deepEqual( Stem("vinzi"), "vinz" );
	deepEqual( Stem("vioaie"), "vioai" );
	deepEqual( Stem("vioară"), "vioar" );
	deepEqual( Stem("vioi"), "vio" );
	deepEqual( Stem("vioiciunea"), "vioiciun" );
	deepEqual( Stem("violent"), "violent" );
	deepEqual( Stem("violentă"), "violent" );
	deepEqual( Stem("violente"), "violent" );
	deepEqual( Stem("violenţa"), "violenţ" );
	deepEqual( Stem("violenţă"), "violenţ" );
	deepEqual( Stem("violenţei"), "violenţe" );
	deepEqual( Stem("violenţele"), "violenţ" );
	deepEqual( Stem("violetă"), "violet" );
	deepEqual( Stem("violete"), "violet" );
	deepEqual( Stem("violonist"), "violonist" );
	deepEqual( Stem("viorie"), "vior" );
	deepEqual( Stem("viorii"), "vior" );
	deepEqual( Stem("viorist"), "viorist" );
	deepEqual( Stem("virajului"), "viraj" );
	deepEqual( Stem("viran"), "viran" );
	deepEqual( Stem("virtual"), "virtual" );
	deepEqual( Stem("virtualitatea"), "virtual" );
	deepEqual( Stem("virtuozitate"), "virtuoz" );
	deepEqual( Stem("virtutea"), "virtut" );
	deepEqual( Stem("virus"), "virus" );
	deepEqual( Stem("vis"), "vis" );
	deepEqual( Stem("visa"), "vis" );
	deepEqual( Stem("visam"), "visam" );
	deepEqual( Stem("visările"), "visăr" );
	deepEqual( Stem("visătoare"), "visat" );
	deepEqual( Stem("visător"), "visat" );
	deepEqual( Stem("viscol"), "viscol" );
	deepEqual( Stem("vise"), "vis" );
	deepEqual( Stem("visează"), "viseaz" );
	deepEqual( Stem("visele"), "vis" );
	deepEqual( Stem("visez"), "visez" );
	deepEqual( Stem("viseze"), "visez" );
	deepEqual( Stem("visteria"), "vister" );
	deepEqual( Stem("visul"), "vis" );
	deepEqual( Stem("visului"), "vis" );
	deepEqual( Stem("visurile"), "visur" );
	deepEqual( Stem("visurilor"), "visur" );
	deepEqual( Stem("vişinie"), "vişin" );
	deepEqual( Stem("vital"), "vital" );
	deepEqual( Stem("vitală"), "vital" );
	deepEqual( Stem("vitale"), "vital" );
	deepEqual( Stem("vitalitate"), "vital" );
	deepEqual( Stem("vitaminele"), "vitamin" );
	deepEqual( Stem("vite"), "vit" );
	deepEqual( Stem("viteaz"), "viteaz" );
	deepEqual( Stem("viteazul"), "viteaz" );
	deepEqual( Stem("vitele"), "vit" );
	deepEqual( Stem("vitelor"), "vit" );
	deepEqual( Stem("viteză"), "vitez" );
	deepEqual( Stem("vitraliu"), "vitraliu" );
	deepEqual( Stem("vitrina"), "vitrin" );
	deepEqual( Stem("vitrină"), "vitrin" );
	deepEqual( Stem("vitrine"), "vitrin" );
	deepEqual( Stem("vitrinei"), "vitrine" );
	deepEqual( Stem("viţios"), "viţios" );
	deepEqual( Stem("viu"), "viu" );
	deepEqual( Stem("vivacitate"), "vivac" );
	deepEqual( Stem("vivacitatea"), "vivac" );
	deepEqual( Stem("vizavi"), "vizav" );
	deepEqual( Stem("vizibil"), "vizibil" );
	deepEqual( Stem("vizibile"), "vizib" );
	deepEqual( Stem("vizita"), "vizit" );
	deepEqual( Stem("vizitat"), "vizit" );
	deepEqual( Stem("vizitatorii"), "vizit" );
	deepEqual( Stem("vizită"), "vizit" );
	deepEqual( Stem("vizităm"), "vizit" );
	deepEqual( Stem("vizite"), "vizit" );
	deepEqual( Stem("vizitează"), "vizit" );
	deepEqual( Stem("vizitei"), "vizite" );
	deepEqual( Stem("vizitiu"), "vizitiu" );
	deepEqual( Stem("vizitiului"), "vizit" );
	deepEqual( Stem("viziune"), "viziun" );
	deepEqual( Stem("viziunea"), "viziun" );
	deepEqual( Stem("viziuni"), "viziun" );
	deepEqual( Stem("viziunii"), "viziun" );
	deepEqual( Stem("vizuală"), "vizual" );
	deepEqual( Stem("vizuale"), "vizual" );
	deepEqual( Stem("vizualitate"), "vizual" );
	deepEqual( Stem("voaluri"), "voalur" );
	deepEqual( Stem("voastră"), "voastr" );
	deepEqual( Stem("voastre"), "voastr" );
	deepEqual( Stem("vocabularul"), "vocabular" );
	deepEqual( Stem("vocabule"), "vocabul" );
	deepEqual( Stem("vocală"), "vocal" );
	deepEqual( Stem("vocale"), "vocal" );
	deepEqual( Stem("vocaţie"), "voc" );
	deepEqual( Stem("vocaţii"), "voc" );
	deepEqual( Stem("voce"), "voc" );
	deepEqual( Stem("vocea"), "voc" );
	deepEqual( Stem("vocifereze"), "vocifer" );
	deepEqual( Stem("vocii"), "voc" );
	deepEqual( Stem("vocile"), "voc" );
	deepEqual( Stem("voi"), "voi" );
	deepEqual( Stem("voia"), "voi" );
	deepEqual( Stem("voiajor"), "voiajor" );
	deepEqual( Stem("voiau"), "voiau" );
	deepEqual( Stem("voicu"), "voicu" );
	deepEqual( Stem("voiculescule"), "voiculescul" );
	deepEqual( Stem("voie"), "voi" );
	deepEqual( Stem("voiesc"), "voiesc" );
	deepEqual( Stem("voim"), "voim" );
	deepEqual( Stem("voinic"), "voinic" );
	deepEqual( Stem("voinică"), "voinic" );
	deepEqual( Stem("voinţa"), "voinţ" );
	deepEqual( Stem("voinţă"), "voinţ" );
	deepEqual( Stem("voinţei"), "voinţe" );
	deepEqual( Stem("voit"), "voit" );
	deepEqual( Stem("voiţi"), "voiţ" );
	deepEqual( Stem("vollmar"), "vollmar" );
	deepEqual( Stem("voltaire"), "voltair" );
	deepEqual( Stem("volum"), "volum" );
	deepEqual( Stem("volume"), "volum" );
	deepEqual( Stem("volumul"), "volum" );
	deepEqual( Stem("volumului"), "volum" );
	deepEqual( Stem("voluntar"), "voluntar" );
	deepEqual( Stem("voluntari"), "voluntar" );
	deepEqual( Stem("voluptate"), "volupt" );
	deepEqual( Stem("voluptatea"), "volupt" );
	deepEqual( Stem("voluptăţii"), "voluptăţ" );
	deepEqual( Stem("voluptăţile"), "voluptăţ" );
	deepEqual( Stem("voluptuoasă"), "voluptu" );
	deepEqual( Stem("voluptuos"), "voluptu" );
	deepEqual( Stem("voluptuoşi"), "voluptu" );
	deepEqual( Stem("volută"), "volut" );
	deepEqual( Stem("vom"), "vom" );
	deepEqual( Stem("vomitive"), "vomit" );
	deepEqual( Stem("vomiţiuni"), "vomit" );
	deepEqual( Stem("von"), "von" );
	deepEqual( Stem("vopsea"), "vop" );
	deepEqual( Stem("vopseala"), "vopseal" );
	deepEqual( Stem("vopseaua"), "vopseau" );
	deepEqual( Stem("vopsit"), "vopsit" );
	deepEqual( Stem("vopsită"), "vopsit" );
	deepEqual( Stem("vopsite"), "vopsit" );
	deepEqual( Stem("vor"), "vor" );
	deepEqual( Stem("vorba"), "vorb" );
	deepEqual( Stem("vorbă"), "vorb" );
	deepEqual( Stem("vorbăreaţă"), "vorbăreaţ" );
	deepEqual( Stem("vorbăreţ"), "vorbăreţ" );
	deepEqual( Stem("vorbărie"), "vorbăr" );
	deepEqual( Stem("vorbe"), "vorb" );
	deepEqual( Stem("vorbea"), "vorb" );
	deepEqual( Stem("vorbeai"), "vorb" );
	deepEqual( Stem("vorbeam"), "vorb" );
	deepEqual( Stem("vorbească"), "vorb" );
	deepEqual( Stem("vorbeau"), "vorb" );
	deepEqual( Stem("vorbei"), "vorbe" );
	deepEqual( Stem("vorbele"), "vorb" );
	deepEqual( Stem("vorbesc"), "vorb" );
	deepEqual( Stem("vorbeşte"), "vorb" );
	deepEqual( Stem("vorbeşti"), "vorb" );
	deepEqual( Stem("vorbi"), "vorb" );
	deepEqual( Stem("vorbim"), "vorb" );
	deepEqual( Stem("vorbind"), "vorb" );
	deepEqual( Stem("vorbindu"), "vorb" );
	deepEqual( Stem("vorbire"), "vorb" );
	deepEqual( Stem("vorbirea"), "vorb" );
	deepEqual( Stem("vorbirii"), "vorbir" );
	deepEqual( Stem("vorbise"), "vorb" );
	deepEqual( Stem("vorbisem"), "vorb" );
	deepEqual( Stem("vorbit"), "vorbit" );
	deepEqual( Stem("vorbitor"), "vorbit" );
	deepEqual( Stem("vorwaerts"), "vorwaerts" );
	deepEqual( Stem("vossische"), "vossisch" );
	deepEqual( Stem("votul"), "vot" );
	deepEqual( Stem("voturi"), "votur" );
	deepEqual( Stem("vouă"), "vou" );
	deepEqual( Stem("vous"), "vous" );
	deepEqual( Stem("vrabia"), "vrab" );
	deepEqual( Stem("vrând"), "vrând" );
	deepEqual( Stem("vrăjmaşi"), "vrăjm" );
	deepEqual( Stem("vrăjmăşie"), "vrăjmăş" );
	deepEqual( Stem("vrea"), "vre" );
	deepEqual( Stem("vreai"), "vrea" );
	deepEqual( Stem("vream"), "vream" );
	deepEqual( Stem("vreau"), "vreau" );
	deepEqual( Stem("vrednică"), "vrednic" );
	deepEqual( Stem("vrednice"), "vrednic" );
	deepEqual( Stem("vrei"), "vre" );
	deepEqual( Stem("vrem"), "vrem" );
	deepEqual( Stem("vreme"), "vrem" );
	deepEqual( Stem("vremea"), "vrem" );
	deepEqual( Stem("vremi"), "vrem" );
	deepEqual( Stem("vremii"), "vrem" );
	deepEqual( Stem("vremilor"), "vrem" );
	deepEqual( Stem("vremuri"), "vremur" );
	deepEqual( Stem("vremurile"), "vremur" );
	deepEqual( Stem("vremurilor"), "vremur" );
	deepEqual( Stem("vreo"), "vreo" );
	deepEqual( Stem("vreodată"), "vreodat" );
	deepEqual( Stem("vreţi"), "vreţ" );
	deepEqual( Stem("vreun"), "vreun" );
	deepEqual( Stem("vreuna"), "vreun" );
	deepEqual( Stem("vreunui"), "vreun" );
	deepEqual( Stem("vreunul"), "vreun" );
	deepEqual( Stem("vroia"), "vroi" );
	deepEqual( Stem("vroiam"), "vroi" );
	deepEqual( Stem("vroim"), "vro" );
	deepEqual( Stem("vroit"), "vroit" );
	deepEqual( Stem("vrusese"), "vru" );
	deepEqual( Stem("vrut"), "vrut" );
	deepEqual( Stem("vuiască"), "vuiasc" );
	deepEqual( Stem("vuieşte"), "vuieşt" );
	deepEqual( Stem("vulcan"), "vulcan" );
	deepEqual( Stem("vulcani"), "vulcan" );
	deepEqual( Stem("vulcanic"), "vulcan" );
	deepEqual( Stem("vulgar"), "vulgar" );
	deepEqual( Stem("vulgară"), "vulg" );
	deepEqual( Stem("vulgare"), "vulg" );
	deepEqual( Stem("vulgaritate"), "vulgar" );
	deepEqual( Stem("vulgaritatea"), "vulgar" );
	deepEqual( Stem("vultur"), "vultur" );
	deepEqual( Stem("vulturii"), "vultur" );
	deepEqual( Stem("weimar"), "weimar" );
	deepEqual( Stem("wer"), "wer" );
	deepEqual( Stem("werner"), "werner" );
	deepEqual( Stem("wiederkunft"), "wiederkunft" );
	deepEqual( Stem("wilamowitz"), "wilamowitz" );
	deepEqual( Stem("wilde"), "wild" );
	deepEqual( Stem("wilhelm"), "wilhelm" );
	deepEqual( Stem("wundt"), "wundt" );
	deepEqual( Stem("x"), "x" );
	deepEqual( Stem("xiv"), "xiv" );
	deepEqual( Stem("xix"), "xix" );
	deepEqual( Stem("xm"), "xm" );
	deepEqual( Stem("xn"), "xn" );
	deepEqual( Stem("xr"), "xr" );
	deepEqual( Stem("xvi"), "xvi" );
	deepEqual( Stem("xviii"), "xvii" );
	deepEqual( Stem("xx"), "xx" );
	deepEqual( Stem("xy"), "xy" );
	deepEqual( Stem("y"), "y" );
	deepEqual( Stem("ypres"), "ypres" );
	deepEqual( Stem("z"), "z" );
	deepEqual( Stem("zac"), "zac" );
	deepEqual( Stem("zace"), "zac" );
	deepEqual( Stem("zadarnic"), "zadarn" );
	deepEqual( Stem("zahăr"), "zahăr" );
	deepEqual( Stem("zamfir"), "zamfir" );
	deepEqual( Stem("zamfire"), "zamf" );
	deepEqual( Stem("zar"), "zar" );
	deepEqual( Stem("zarul"), "zar" );
	deepEqual( Stem("zarului"), "zar" );
	deepEqual( Stem("zarurile"), "zarur" );
	deepEqual( Stem("zarzavaturi"), "zarzavatur" );
	deepEqual( Stem("zarzărele"), "zarzăr" );
	deepEqual( Stem("zâmbeam"), "zâmb" );
	deepEqual( Stem("zâmbească"), "zâmb" );
	deepEqual( Stem("zâmbesc"), "zâmb" );
	deepEqual( Stem("zâmbeşte"), "zâmb" );
	deepEqual( Stem("zâmbeşti"), "zâmb" );
	deepEqual( Stem("zâmbet"), "zâmbet" );
	deepEqual( Stem("zâmbetul"), "zâmbet" );
	deepEqual( Stem("zâmbim"), "zâmb" );
	deepEqual( Stem("zâmbind"), "zâmb" );
	deepEqual( Stem("zâmbit"), "zâmbit" );
	deepEqual( Stem("zâmbitoare"), "zâmbit" );
	deepEqual( Stem("zâzâieli"), "zâzâiel" );
	deepEqual( Stem("zăbranic"), "zăbran" );
	deepEqual( Stem("zăcând"), "zăcând" );
	deepEqual( Stem("zăcătorilor"), "zăcat" );
	deepEqual( Stem("zăceam"), "zăceam" );
	deepEqual( Stem("zăceau"), "zăceau" );
	deepEqual( Stem("zăcusem"), "zăcusem" );
	deepEqual( Stem("zădărire"), "zădăr" );
	deepEqual( Stem("zădărniceşte"), "zădărnic" );
	deepEqual( Stem("zădărnici"), "zădărn" );
	deepEqual( Stem("zămislesc"), "zămisl" );
	deepEqual( Stem("zănatic"), "zănat" );
	deepEqual( Stem("zăpada"), "zăpad" );
	deepEqual( Stem("zăpăceala"), "zăpăceal" );
	deepEqual( Stem("zăpăceşte"), "zăpăc" );
	deepEqual( Stem("zăpăcim"), "zăpăc" );
	deepEqual( Stem("zăpăcit"), "zăpăc" );
	deepEqual( Stem("zăpăcită"), "zăpăc" );
	deepEqual( Stem("zăpăcite"), "zăpăc" );
	deepEqual( Stem("zăpezii"), "zăpez" );
	deepEqual( Stem("zăpuşeală"), "zăpuşeal" );
	deepEqual( Stem("zărească"), "zăreasc" );
	deepEqual( Stem("zăresc"), "zăresc" );
	deepEqual( Stem("zău"), "zău" );
	deepEqual( Stem("zăvor"), "zăvor" );
	deepEqual( Stem("zăvorâte"), "zăvorât" );
	deepEqual( Stem("zbat"), "zbat" );
	deepEqual( Stem("zbate"), "zbat" );
	deepEqual( Stem("zbătându"), "zbăt" );
	deepEqual( Stem("zbiară"), "zbiar" );
	deepEqual( Stem("zbierăt"), "zbierăt" );
	deepEqual( Stem("zboară"), "zboar" );
	deepEqual( Stem("zbor"), "zbor" );
	deepEqual( Stem("zboruri"), "zborur" );
	deepEqual( Stem("zbucium"), "zbucium" );
	deepEqual( Stem("zbuciuma"), "zbucium" );
	deepEqual( Stem("zbuciumat"), "zbucium" );
	deepEqual( Stem("zbuciumul"), "zbucium" );
	deepEqual( Stem("zburat"), "zburat" );
	deepEqual( Stem("zdravănă"), "zdravăn" );
	deepEqual( Stem("zdraveni"), "zdraven" );
	deepEqual( Stem("zdrobi"), "zdrob" );
	deepEqual( Stem("zdrobim"), "zdrob" );
	deepEqual( Stem("zdrobit"), "zdrobit" );
	deepEqual( Stem("zdrobită"), "zdrobit" );
	deepEqual( Stem("zdrobiţi"), "zdrob" );
	deepEqual( Stem("zdruncinarea"), "zdruncin" );
	deepEqual( Stem("zdruncinat"), "zdruncin" );
	deepEqual( Stem("zece"), "zec" );
	deepEqual( Stem("zecea"), "zec" );
	deepEqual( Stem("zeci"), "zec" );
	deepEqual( Stem("zecile"), "zec" );
	deepEqual( Stem("zefir"), "zefir" );
	deepEqual( Stem("zefirului"), "zefir" );
	deepEqual( Stem("zeit"), "zeit" );
	deepEqual( Stem("zeitung"), "zeitung" );
	deepEqual( Stem("zel"), "zel" );
	deepEqual( Stem("zelosul"), "zelos" );
	deepEqual( Stem("zelul"), "zel" );
	deepEqual( Stem("zemuit"), "zemuit" );
	deepEqual( Stem("zenit"), "zenit" );
	deepEqual( Stem("zenon"), "zenon" );
	deepEqual( Stem("zepelinurilor"), "zepelinur" );
	deepEqual( Stem("zestre"), "zestr" );
	deepEqual( Stem("zgâlţâia"), "zgâlţâi" );
	deepEqual( Stem("zgâria"), "zgâr" );
	deepEqual( Stem("zgomot"), "zgomot" );
	deepEqual( Stem("zgomotoasă"), "zgomot" );
	deepEqual( Stem("zgomotoase"), "zgomot" );
	deepEqual( Stem("zgomotos"), "zgomot" );
	deepEqual( Stem("zgomotul"), "zgomot" );
	deepEqual( Stem("zgrunţuros"), "zgrunţur" );
	deepEqual( Stem("zgudui"), "zgud" );
	deepEqual( Stem("zguduie"), "zgudui" );
	deepEqual( Stem("zguduitor"), "zguduit" );
	deepEqual( Stem("zi"), "zi" );
	deepEqual( Stem("ziar"), "ziar" );
	deepEqual( Stem("ziare"), "ziar" );
	deepEqual( Stem("ziarele"), "ziar" );
	deepEqual( Stem("ziarist"), "ziarist" );
	deepEqual( Stem("ziaristică"), "ziarist" );
	deepEqual( Stem("ziaristul"), "ziarist" );
	deepEqual( Stem("ziarişti"), "ziarişt" );
	deepEqual( Stem("ziarul"), "ziar" );
	deepEqual( Stem("ziarului"), "ziar" );
	deepEqual( Stem("zic"), "zic" );
	deepEqual( Stem("zică"), "zic" );
	deepEqual( Stem("zicătoare"), "zicat" );
	deepEqual( Stem("zicătorii"), "zicat" );
	deepEqual( Stem("zice"), "zic" );
	deepEqual( Stem("zicea"), "zic" );
	deepEqual( Stem("ziceai"), "zicea" );
	deepEqual( Stem("ziceam"), "ziceam" );
	deepEqual( Stem("ziceaţi"), "ziceaţ" );
	deepEqual( Stem("ziceau"), "ziceau" );
	deepEqual( Stem("zicem"), "zic" );
	deepEqual( Stem("ziceţi"), "zic" );
	deepEqual( Stem("zici"), "zic" );
	deepEqual( Stem("zid"), "zid" );
	deepEqual( Stem("ziduri"), "zidur" );
	deepEqual( Stem("zidurile"), "zidur" );
	deepEqual( Stem("ziegler"), "ziegler" );
	deepEqual( Stem("zile"), "zil" );
	deepEqual( Stem("zilei"), "zile" );
	deepEqual( Stem("zilele"), "zil" );
	deepEqual( Stem("zilelor"), "zil" );
	deepEqual( Stem("zilnic"), "zilnic" );
	deepEqual( Stem("zilnică"), "zilnic" );
	deepEqual( Stem("zis"), "zis" );
	deepEqual( Stem("zisa"), "zis" );
	deepEqual( Stem("zisă"), "zis" );
	deepEqual( Stem("zise"), "zis" );
	deepEqual( Stem("zişi"), "ziş" );
	deepEqual( Stem("zişii"), "ziş" );
	deepEqual( Stem("ziua"), "ziu" );
	deepEqual( Stem("ziuă"), "ziu" );
	deepEqual( Stem("zloţi"), "zloţ" );
	deepEqual( Stem("zmeilor"), "zmeilor" );
	deepEqual( Stem("zmeu"), "zmeu" );
	deepEqual( Stem("zmeul"), "zmeul" );
	deepEqual( Stem("zmeură"), "zmeur" );
	deepEqual( Stem("zodia"), "zodi" );
	deepEqual( Stem("zodiilor"), "zod" );
	deepEqual( Stem("zoica"), "zoic" );
	deepEqual( Stem("zona"), "zon" );
	deepEqual( Stem("zonă"), "zon" );
	deepEqual( Stem("zone"), "zon" );
	deepEqual( Stem("zonelor"), "zon" );
	deepEqual( Stem("zonia"), "zoni" );
	deepEqual( Stem("zoologia"), "zoolog" );
	deepEqual( Stem("zoologice"), "zoolog" );
	deepEqual( Stem("zoologie"), "zoolog" );
	deepEqual( Stem("zootehnic"), "zootehn" );
	deepEqual( Stem("zootehnică"), "zootehn" );
	deepEqual( Stem("zootehniei"), "zootehn" );
	deepEqual( Stem("zor"), "zor" );
	deepEqual( Stem("zorele"), "zor" );
	deepEqual( Stem("zori"), "zor" );
	deepEqual( Stem("zorii"), "zor" );
	deepEqual( Stem("zorile"), "zor" );
	deepEqual( Stem("zorilor"), "zor" );
	deepEqual( Stem("zorit"), "zorit" );
	deepEqual( Stem("zornăit"), "zornăit" );
	deepEqual( Stem("zorzoanele"), "zorzoan" );
	deepEqual( Stem("zossima"), "zossim" );
	deepEqual( Stem("zugrăvesc"), "zugrăv" );
	deepEqual( Stem("zugrăveşte"), "zugrăv" );
	deepEqual( Stem("zugrăvi"), "zugrăv" );
	deepEqual( Stem("zugrăvită"), "zugrăv" );
	deepEqual( Stem("zumzet"), "zumzet" );
	deepEqual( Stem("zumzetul"), "zumzet" );
	deepEqual( Stem("zvâcneşte"), "zvâcn" );
	deepEqual( Stem("zvâcnind"), "zvâcn" );
	deepEqual( Stem("zvâcnirile"), "zvâcnir" );
	deepEqual( Stem("zvâcnit"), "zvâcnit" );
	deepEqual( Stem("zvântate"), "zvântat" );
	deepEqual( Stem("zvârlind"), "zvârl" );
	deepEqual( Stem("zvârlite"), "zvârlit" );
	deepEqual( Stem("zvârlugă"), "zvârlug" );
	deepEqual( Stem("zvîcneau"), "zvîcn" );
	deepEqual( Stem("zvîcni"), "zvîcn" );
	deepEqual( Stem("zvîcnind"), "zvîcn" );
	deepEqual( Stem("zvîcniri"), "zvîcnir" );
	deepEqual( Stem("zvîcnit"), "zvîcnit" );
	deepEqual( Stem("zvîrcoli"), "zvîrcol" );
	deepEqual( Stem("zvîrcolirile"), "zvîrcolir" );
	deepEqual( Stem("zvîrle"), "zvîrl" );
	deepEqual( Stem("zvîrlînd"), "zvîrlînd" );
	deepEqual( Stem("zvonul"), "zvon" );
	deepEqual( Stem("zvonuri"), "zvonur" );
	deepEqual( Stem("zvonurile"), "zvonur" );
});
