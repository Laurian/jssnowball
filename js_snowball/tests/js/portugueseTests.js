QUnit.test('portuguese', function(){
	var Stem = snowballFactory.newStemmer('portuguese').stem;
	deepEqual( Stem("a"), "a" );
	deepEqual( Stem("á"), "á" );
	deepEqual( Stem("à"), "à" );
	deepEqual( Stem("ã"), "ã" );
	deepEqual( Stem("aacho"), "aach" );
	deepEqual( Stem("aacute"), "aacut" );
	deepEqual( Stem("abacaxi"), "abacax" );
	deepEqual( Stem("abade"), "abad" );
	deepEqual( Stem("abaeté"), "abaet" );
	deepEqual( Stem("abafar"), "abaf" );
	deepEqual( Stem("abafaram"), "abaf" );
	deepEqual( Stem("abaixa"), "abaix" );
	deepEqual( Stem("abaixe"), "abaix" );
	deepEqual( Stem("abaixei"), "abaix" );
	deepEqual( Stem("abaixo"), "abaix" );
	deepEqual( Stem("abaixou"), "abaix" );
	deepEqual( Stem("abalada"), "abal" );
	deepEqual( Stem("abalado"), "abal" );
	deepEqual( Stem("abalaram"), "abal" );
	deepEqual( Stem("abalos"), "abal" );
	deepEqual( Stem("abalou"), "abal" );
	deepEqual( Stem("abalroado"), "abalro" );
	deepEqual( Stem("abandona"), "abandon" );
	deepEqual( Stem("abandoná"), "abandon" );
	deepEqual( Stem("abandonada"), "abandon" );
	deepEqual( Stem("abandonadas"), "abandon" );
	deepEqual( Stem("abandonado"), "abandon" );
	deepEqual( Stem("abandonados"), "abandon" );
	deepEqual( Stem("abandonam"), "abandon" );
	deepEqual( Stem("abandonando"), "abandon" );
	deepEqual( Stem("abandonar"), "abandon" );
	deepEqual( Stem("abandonara"), "abandon" );
	deepEqual( Stem("abandonaram"), "abandon" );
	deepEqual( Stem("abandonasse"), "abandon" );
	deepEqual( Stem("abandono"), "abandon" );
	deepEqual( Stem("abandonou"), "abandon" );
	deepEqual( Stem("abarrotado"), "abarrot" );
	deepEqual( Stem("abarrotados"), "abarrot" );
	deepEqual( Stem("abarrotou"), "abarrot" );
	deepEqual( Stem("abastada"), "abast" );
	deepEqual( Stem("abastado"), "abast" );
	deepEqual( Stem("abastados"), "abast" );
	deepEqual( Stem("abastecem"), "abastec" );
	deepEqual( Stem("abastecer"), "abastec" );
	deepEqual( Stem("abastecida"), "abastec" );
	deepEqual( Stem("abastecimento"), "abastec" );
	deepEqual( Stem("abata"), "abat" );
	deepEqual( Stem("abate"), "abat" );
	deepEqual( Stem("abatedouro"), "abatedour" );
	deepEqual( Stem("abatem"), "abat" );
	deepEqual( Stem("abatendo"), "abat" );
	deepEqual( Stem("abater"), "abat" );
	deepEqual( Stem("abateram"), "abat" );
	deepEqual( Stem("abates"), "abat" );
	deepEqual( Stem("abateu"), "abat" );
	deepEqual( Stem("abatia"), "abat" );
	deepEqual( Stem("abatidas"), "abat" );
	deepEqual( Stem("abatido"), "abat" );
	deepEqual( Stem("abatidos"), "abat" );
	deepEqual( Stem("abaulado"), "abaul" );
	deepEqual( Stem("abbé"), "abbé" );
	deepEqual( Stem("abbey"), "abbey" );
	deepEqual( Stem("abc"), "abc" );
	deepEqual( Stem("abcesso"), "abcess" );
	deepEqual( Stem("abdel"), "abdel" );
	deepEqual( Stem("abdela"), "abdel" );
	deepEqual( Stem("abdias"), "abdi" );
	deepEqual( Stem("abdicação"), "abdic" );
	deepEqual( Stem("abdicar"), "abdic" );
	deepEqual( Stem("abdomen"), "abdomen" );
	deepEqual( Stem("abdômen"), "abdômen" );
	deepEqual( Stem("abdominais"), "abdomin" );
	deepEqual( Stem("abdominal"), "abdominal" );
	deepEqual( Stem("abecafé"), "abecaf" );
	deepEqual( Stem("abel"), "abel" );
	deepEqual( Stem("abençoadas"), "abenço" );
	deepEqual( Stem("aberrações"), "aberr" );
	deepEqual( Stem("aberta"), "abert" );
	deepEqual( Stem("abertamente"), "abert" );
	deepEqual( Stem("abertas"), "abert" );
	deepEqual( Stem("aberto"), "abert" );
	deepEqual( Stem("abertos"), "abert" );
	deepEqual( Stem("abertura"), "abertur" );
	deepEqual( Stem("abic"), "abic" );
	deepEqual( Stem("abicair"), "abica" );
	deepEqual( Stem("abichequer"), "abichequ" );
	deepEqual( Stem("abifarma"), "abifarm" );
	deepEqual( Stem("abih"), "abih" );
	deepEqual( Stem("abilio"), "abili" );
	deepEqual( Stem("abílio"), "abíli" );
	deepEqual( Stem("abismo"), "abism" );
	deepEqual( Stem("abissais"), "abiss" );
	deepEqual( Stem("abissal"), "abissal" );
	deepEqual( Stem("abnegação"), "abneg" );
	deepEqual( Stem("abocanhar"), "abocanh" );
	deepEqual( Stem("abolição"), "aboliçã" );
	deepEqual( Stem("abolicionistas"), "abolicion" );
	deepEqual( Stem("abolido"), "abol" );
	deepEqual( Stem("abolir"), "abol" );
	deepEqual( Stem("abomina"), "abomin" );
	deepEqual( Stem("abominação"), "abomin" );
	deepEqual( Stem("abomináveis"), "abomin" );
	deepEqual( Stem("abominável"), "abomin" );
	deepEqual( Stem("abono"), "abon" );
	deepEqual( Stem("aborda"), "abord" );
	deepEqual( Stem("abordada"), "abord" );
	deepEqual( Stem("abordadas"), "abord" );
	deepEqual( Stem("abordado"), "abord" );
	deepEqual( Stem("abordagem"), "abordag" );
	deepEqual( Stem("abordagens"), "abordagens" );
	deepEqual( Stem("abordando"), "abord" );
	deepEqual( Stem("abordar"), "abord" );
	deepEqual( Stem("abordava"), "abord" );
	deepEqual( Stem("abordavam"), "abord" );
	deepEqual( Stem("aborígines"), "aborígin" );
	deepEqual( Stem("aborrece"), "aborrec" );
	deepEqual( Stem("aborrecidíssima"), "aborrecidíssim" );
	deepEqual( Stem("aborrecido"), "aborrec" );
	deepEqual( Stem("aborrecidos"), "aborrec" );
	deepEqual( Stem("aborrecimentos"), "aborrec" );
	deepEqual( Stem("aborto"), "abort" );
	deepEqual( Stem("abortos"), "abort" );
	deepEqual( Stem("abouch"), "abouch" );
	deepEqual( Stem("abra"), "abra" );
	deepEqual( Stem("abraão"), "abraã" );
	deepEqual( Stem("abraçada"), "abrac" );
	deepEqual( Stem("abracadabra"), "abracadabr" );
	deepEqual( Stem("abraçando"), "abrac" );
	deepEqual( Stem("abraçaram"), "abrac" );
	deepEqual( Stem("abraço"), "abrac" );
	deepEqual( Stem("abraços"), "abrac" );
	deepEqual( Stem("abrafe"), "abraf" );
	deepEqual( Stem("abrahão"), "abrahã" );
	deepEqual( Stem("abram"), "abram" );
	deepEqual( Stem("abrandar"), "abrand" );
	deepEqual( Stem("abrange"), "abrang" );
	deepEqual( Stem("abrangência"), "abrangent" );
	deepEqual( Stem("abrangendo"), "abrang" );
	deepEqual( Stem("abrangente"), "abrangent" );
	deepEqual( Stem("abranger"), "abrang" );
	deepEqual( Stem("abrasador"), "abras" );
	deepEqual( Stem("abrasivo"), "abras" );
	deepEqual( Stem("abre"), "abre" );
	deepEqual( Stem("abrem"), "abrem" );
	deepEqual( Stem("abresi"), "abres" );
	deepEqual( Stem("abreu"), "abreu" );
	deepEqual( Stem("abreviação"), "abrevi" );
	deepEqual( Stem("abreviado"), "abrevi" );
	deepEqual( Stem("abri"), "abri" );
	deepEqual( Stem("abriga"), "abrig" );
	deepEqual( Stem("abrigada"), "abrig" );
	deepEqual( Stem("abrigam"), "abrig" );
	deepEqual( Stem("abrigar"), "abrig" );
	deepEqual( Stem("abrigaram"), "abrig" );
	deepEqual( Stem("abrigarem"), "abrig" );
	deepEqual( Stem("abrigaria"), "abrig" );
	deepEqual( Stem("abrigo"), "abrig" );
	deepEqual( Stem("abrigou"), "abrig" );
	deepEqual( Stem("abril"), "abril" );
	deepEqual( Stem("abrimos"), "abrim" );
	deepEqual( Stem("abrindo"), "abrind" );
	deepEqual( Stem("abrinq"), "abrinq" );
	deepEqual( Stem("abrir"), "abrir" );
	deepEqual( Stem("abrirá"), "abrir" );
	deepEqual( Stem("abriram"), "abrir" );
	deepEqual( Stem("abrirão"), "abrirã" );
	deepEqual( Stem("abrisse"), "abriss" );
	deepEqual( Stem("abriu"), "abriu" );
	deepEqual( Stem("abrolhos"), "abrolh" );
	deepEqual( Stem("abrucio"), "abruci" );
	deepEqual( Stem("abruptamente"), "abrupt" );
	deepEqual( Stem("absoluta"), "absolut" );
	deepEqual( Stem("absolutamente"), "absolut" );
	deepEqual( Stem("absolutas"), "absolut" );
	deepEqual( Stem("absoluto"), "absolut" );
	deepEqual( Stem("absolutos"), "absolut" );
	deepEqual( Stem("absolve"), "absolv" );
	deepEqual( Stem("absolvem"), "absolv" );
	deepEqual( Stem("absolver"), "absolv" );
	deepEqual( Stem("absolveram"), "absolv" );
	deepEqual( Stem("absolverem"), "absolv" );
	deepEqual( Stem("absolveu"), "absolv" );
	deepEqual( Stem("absolvido"), "absolv" );
	deepEqual( Stem("absorção"), "absorçã" );
	deepEqual( Stem("absorvam"), "absorv" );
	deepEqual( Stem("absorve"), "absorv" );
	deepEqual( Stem("absorvente"), "absorvent" );
	deepEqual( Stem("absorventes"), "absorvent" );
	deepEqual( Stem("absorver"), "absorv" );
	deepEqual( Stem("absorviam"), "absorv" );
	deepEqual( Stem("absorvida"), "absorv" );
	deepEqual( Stem("abstem"), "abstem" );
	deepEqual( Stem("abstêmio"), "abstêmi" );
	deepEqual( Stem("abstenção"), "abstençã" );
	deepEqual( Stem("absteve"), "abstev" );
	deepEqual( Stem("abstinência"), "abstinent" );
	deepEqual( Stem("abstratamente"), "abstrat" );
	deepEqual( Stem("abstratas"), "abstrat" );
	deepEqual( Stem("absurda"), "absurd" );
	deepEqual( Stem("absurdamente"), "absurd" );
	deepEqual( Stem("absurdas"), "absurd" );
	deepEqual( Stem("absurdo"), "absurd" );
	deepEqual( Stem("absurdos"), "absurd" );
	deepEqual( Stem("abuelita"), "abuelit" );
	deepEqual( Stem("abujamra"), "abujamr" );
	deepEqual( Stem("abundância"), "abund" );
	deepEqual( Stem("abundante"), "abund" );
	deepEqual( Stem("abusando"), "abus" );
	deepEqual( Stem("abusar"), "abus" );
	deepEqual( Stem("abuse"), "abus" );
	deepEqual( Stem("abuso"), "abus" );
	deepEqual( Stem("abusos"), "abus" );
	deepEqual( Stem("abusou"), "abus" );
	deepEqual( Stem("acaba"), "acab" );
	deepEqual( Stem("acabadas"), "acab" );
	deepEqual( Stem("acabado"), "acab" );
	deepEqual( Stem("acabados"), "acab" );
	deepEqual( Stem("acabam"), "acab" );
	deepEqual( Stem("acabamento"), "acab" );
	deepEqual( Stem("acabamos"), "acab" );
	deepEqual( Stem("acabando"), "acab" );
	deepEqual( Stem("acabar"), "acab" );
	deepEqual( Stem("acabara"), "acab" );
	deepEqual( Stem("acabaram"), "acab" );
	deepEqual( Stem("acabaria"), "acab" );
	deepEqual( Stem("acabasse"), "acab" );
	deepEqual( Stem("acabassem"), "acab" );
	deepEqual( Stem("acabava"), "acab" );
	deepEqual( Stem("acabavam"), "acab" );
	deepEqual( Stem("acabe"), "acab" );
	deepEqual( Stem("acabei"), "acab" );
	deepEqual( Stem("acabemos"), "acab" );
	deepEqual( Stem("acabo"), "acab" );
	deepEqual( Stem("acabou"), "acab" );
	deepEqual( Stem("acabrunham"), "acabrunh" );
	deepEqual( Stem("academia"), "academ" );
	deepEqual( Stem("academias"), "academ" );
	deepEqual( Stem("acadêmica"), "acadêm" );
	deepEqual( Stem("acadêmicas"), "acadêm" );
	deepEqual( Stem("acadêmico"), "acadêm" );
	deepEqual( Stem("acadêmicos"), "acadêm" );
	deepEqual( Stem("acahuazú"), "acahuazú" );
	deepEqual( Stem("acalantado"), "acalant" );
	deepEqual( Stem("acalmar"), "acalm" );
	deepEqual( Stem("acampada"), "acamp" );
	deepEqual( Stem("acampamento"), "acamp" );
	deepEqual( Stem("acampamentos"), "acamp" );
	deepEqual( Stem("acampamos"), "acamp" );
	deepEqual( Stem("acampando"), "acamp" );
	deepEqual( Stem("acampem"), "acamp" );
	deepEqual( Stem("acanhadas"), "acanh" );
	deepEqual( Stem("acanhado"), "acanh" );
	deepEqual( Stem("ação"), "açã" );
	deepEqual( Stem("acareação"), "acar" );
	deepEqual( Stem("acari"), "acar" );
	deepEqual( Stem("acarpetada"), "acarpet" );
	deepEqual( Stem("acarreta"), "acarret" );
	deepEqual( Stem("acarretar"), "acarret" );
	deepEqual( Stem("acasalam"), "acasal" );
	deepEqual( Stem("acaso"), "acas" );
	deepEqual( Stem("acatada"), "acat" );
	deepEqual( Stem("acatará"), "acat" );
	deepEqual( Stem("acatou"), "acat" );
	deepEqual( Stem("accelerati"), "accelerat" );
	deepEqual( Stem("accor"), "accor" );
	deepEqual( Stem("ace"), "ace" );
	deepEqual( Stem("aceita"), "aceit" );
	deepEqual( Stem("aceitá"), "aceit" );
	deepEqual( Stem("aceitação"), "aceit" );
	deepEqual( Stem("aceitam"), "aceit" );
	deepEqual( Stem("aceitamos"), "aceit" );
	deepEqual( Stem("aceitando"), "aceit" );
	deepEqual( Stem("aceitar"), "aceit" );
	deepEqual( Stem("aceitaram"), "aceit" );
	deepEqual( Stem("aceitarão"), "aceit" );
	deepEqual( Stem("aceitaria"), "aceit" );
	deepEqual( Stem("aceitariam"), "aceit" );
	deepEqual( Stem("aceitava"), "aceit" );
	deepEqual( Stem("aceitável"), "aceit" );
	deepEqual( Stem("aceitei"), "aceit" );
	deepEqual( Stem("aceitem"), "aceit" );
	deepEqual( Stem("aceito"), "aceit" );
	deepEqual( Stem("aceitos"), "aceit" );
	deepEqual( Stem("aceitou"), "aceit" );
	deepEqual( Stem("acelera"), "acel" );
	deepEqual( Stem("aceleração"), "aceler" );
	deepEqual( Stem("acelerada"), "aceler" );
	deepEqual( Stem("acelerado"), "aceler" );
	deepEqual( Stem("acelerador"), "aceler" );
	deepEqual( Stem("aceleramento"), "aceler" );
	deepEqual( Stem("acelerar"), "aceler" );
	deepEqual( Stem("aceleraram"), "aceler" );
	deepEqual( Stem("acelerava"), "aceler" );
	deepEqual( Stem("acelerou"), "aceler" );
	deepEqual( Stem("acena"), "acen" );
	deepEqual( Stem("acenam"), "acen" );
	deepEqual( Stem("acenar"), "acen" );
	deepEqual( Stem("acendê"), "acend" );
	deepEqual( Stem("acender"), "acend" );
	deepEqual( Stem("acenderam"), "acend" );
	deepEqual( Stem("acendeu"), "acend" );
	deepEqual( Stem("acendiam"), "acend" );
	deepEqual( Stem("acendo"), "acend" );
	deepEqual( Stem("acentuada"), "acentu" );
	deepEqual( Stem("acentuadas"), "acentu" );
	deepEqual( Stem("acentuado"), "acentu" );
	deepEqual( Stem("acentuados"), "acentu" );
	deepEqual( Stem("acentuem"), "acentu" );
	deepEqual( Stem("acerca"), "acerc" );
	deepEqual( Stem("acertado"), "acert" );
	deepEqual( Stem("acertados"), "acert" );
	deepEqual( Stem("acertando"), "acert" );
	deepEqual( Stem("acertar"), "acert" );
	deepEqual( Stem("acertaram"), "acert" );
	deepEqual( Stem("acertasse"), "acert" );
	deepEqual( Stem("acertava"), "acert" );
	deepEqual( Stem("acerto"), "acert" );
	deepEqual( Stem("acertou"), "acert" );
	deepEqual( Stem("acesa"), "aces" );
	deepEqual( Stem("acessadas"), "acess" );
	deepEqual( Stem("acessado"), "acess" );
	deepEqual( Stem("acessar"), "acess" );
	deepEqual( Stem("acessível"), "acess" );
	deepEqual( Stem("acesso"), "acess" );
	deepEqual( Stem("acessórias"), "acessór" );
	deepEqual( Stem("acessório"), "acessóri" );
	deepEqual( Stem("acessórios"), "acessóri" );
	deepEqual( Stem("acessos"), "acess" );
	deepEqual( Stem("acetona"), "aceton" );
	deepEqual( Stem("acha"), "acha" );
	deepEqual( Stem("achá"), "achá" );
	deepEqual( Stem("achacando"), "achac" );
	deepEqual( Stem("achado"), "achad" );
	deepEqual( Stem("achados"), "achad" );
	deepEqual( Stem("acham"), "acham" );
	deepEqual( Stem("achamos"), "acham" );
	deepEqual( Stem("achando"), "achand" );
	deepEqual( Stem("achaque"), "achaqu" );
	deepEqual( Stem("achar"), "achar" );
	deepEqual( Stem("achará"), "achar" );
	deepEqual( Stem("acharam"), "achar" );
	deepEqual( Stem("acharem"), "achar" );
	deepEqual( Stem("achasse"), "achass" );
	deepEqual( Stem("achava"), "achav" );
	deepEqual( Stem("achavam"), "achav" );
	deepEqual( Stem("ache"), "ache" );
	deepEqual( Stem("aché"), "aché" );
	deepEqual( Stem("achei"), "ache" );
	deepEqual( Stem("achismo"), "achism" );
	deepEqual( Stem("acho"), "acho" );
	deepEqual( Stem("achou"), "achou" );
	deepEqual( Stem("ácidas"), "ácid" );
	deepEqual( Stem("acidentado"), "acident" );
	deepEqual( Stem("acidentados"), "acident" );
	deepEqual( Stem("acidental"), "acidental" );
	deepEqual( Stem("acidente"), "acident" );
	deepEqual( Stem("acidentes"), "acident" );
	deepEqual( Stem("acidez"), "acidez" );
	deepEqual( Stem("ácido"), "ácid" );
	deepEqual( Stem("acima"), "acim" );
	deepEqual( Stem("acionadas"), "acion" );
	deepEqual( Stem("acionado"), "acion" );
	deepEqual( Stem("acionar"), "acion" );
	deepEqual( Stem("acionaram"), "acion" );
	deepEqual( Stem("acionário"), "acionári" );
	deepEqual( Stem("acionei"), "acion" );
	deepEqual( Stem("acionista"), "acion" );
	deepEqual( Stem("acionistas"), "acion" );
	deepEqual( Stem("acionou"), "acion" );
	deepEqual( Stem("acirrada"), "acirr" );
	deepEqual( Stem("acirram"), "acirr" );
	deepEqual( Stem("acirrava"), "acirr" );
	deepEqual( Stem("ackerman"), "ackerman" );
	deepEqual( Stem("aclamado"), "aclam" );
	deepEqual( Stem("aclarados"), "aclar" );
	deepEqual( Stem("aclarar"), "aclar" );
	deepEqual( Stem("acm"), "acm" );
	deepEqual( Stem("acne"), "acne" );
	deepEqual( Stem("aço"), "aço" );
	deepEqual( Stem("acobertar"), "acobert" );
	deepEqual( Stem("ações"), "açõ" );
	deepEqual( Stem("açoitado"), "açoit" );
	deepEqual( Stem("açoites"), "açoit" );
	deepEqual( Stem("acolhê"), "acolh" );
	deepEqual( Stem("acolhedor"), "acolhedor" );
	deepEqual( Stem("acolhem"), "acolh" );
	deepEqual( Stem("acomete"), "acomet" );
	deepEqual( Stem("acometem"), "acomet" );
	deepEqual( Stem("acometido"), "acomet" );
	deepEqual( Stem("açominas"), "açomin" );
	deepEqual( Stem("acomoda"), "acomod" );
	deepEqual( Stem("acomodação"), "acomod" );
	deepEqual( Stem("acomodações"), "acomod" );
	deepEqual( Stem("acomodadas"), "acomod" );
	deepEqual( Stem("acomodado"), "acomod" );
	deepEqual( Stem("acomodar"), "acomod" );
	deepEqual( Stem("acomodaram"), "acomod" );
	deepEqual( Stem("acomodaria"), "acomod" );
	deepEqual( Stem("acomodava"), "acomod" );
	deepEqual( Stem("acomodo"), "acomod" );
	deepEqual( Stem("acompanha"), "acompanh" );
	deepEqual( Stem("acompanhá"), "acompanh" );
	deepEqual( Stem("acompanhada"), "acompanh" );
	deepEqual( Stem("acompanhadas"), "acompanh" );
	deepEqual( Stem("acompanhado"), "acompanh" );
	deepEqual( Stem("acompanhados"), "acompanh" );
	deepEqual( Stem("acompanham"), "acompanh" );
	deepEqual( Stem("acompanhamento"), "acompanh" );
	deepEqual( Stem("acompanhando"), "acompanh" );
	deepEqual( Stem("acompanhante"), "acompanh" );
	deepEqual( Stem("acompanhantes"), "acompanh" );
	deepEqual( Stem("acompanhar"), "acompanh" );
	deepEqual( Stem("acompanhará"), "acompanh" );
	deepEqual( Stem("acompanhava"), "acompanh" );
	deepEqual( Stem("acompanhe"), "acompanh" );
	deepEqual( Stem("acompanhei"), "acompanh" );
	deepEqual( Stem("acompanho"), "acompanh" );
	deepEqual( Stem("acompanhou"), "acompanh" );
	deepEqual( Stem("aconcágua"), "aconcágu" );
	deepEqual( Stem("aconchegante"), "aconcheg" );
	deepEqual( Stem("aconchegantes"), "aconcheg" );
	deepEqual( Stem("aconchego"), "aconcheg" );
	deepEqual( Stem("aconselha"), "aconselh" );
	deepEqual( Stem("aconselhada"), "aconselh" );
	deepEqual( Stem("aconselhadas"), "aconselh" );
	deepEqual( Stem("aconselhado"), "aconselh" );
	deepEqual( Stem("aconselhados"), "aconselh" );
	deepEqual( Stem("aconselham"), "aconselh" );
	deepEqual( Stem("aconselhar"), "aconselh" );
	deepEqual( Stem("aconselhara"), "aconselh" );
	deepEqual( Stem("aconselhavam"), "aconselh" );
	deepEqual( Stem("aconselhável"), "aconselh" );
	deepEqual( Stem("aconselhou"), "aconselh" );
	deepEqual( Stem("aconteça"), "acontec" );
	deepEqual( Stem("aconteçam"), "acontec" );
	deepEqual( Stem("acontece"), "acontec" );
	deepEqual( Stem("acontecem"), "acontec" );
	deepEqual( Stem("acontecendo"), "acontec" );
	deepEqual( Stem("acontecer"), "acontec" );
	deepEqual( Stem("acontecera"), "acontec" );
	deepEqual( Stem("acontecerá"), "acontec" );
	deepEqual( Stem("aconteceram"), "acontec" );
	deepEqual( Stem("aconteceria"), "acontec" );
	deepEqual( Stem("aconteceu"), "acontec" );
	deepEqual( Stem("acontecia"), "acontec" );
	deepEqual( Stem("aconteciam"), "acontec" );
	deepEqual( Stem("acontecido"), "acontec" );
	deepEqual( Stem("acontecimento"), "acontec" );
	deepEqual( Stem("acontecimentos"), "acontec" );
	deepEqual( Stem("acoplada"), "acopl" );
	deepEqual( Stem("acoplado"), "acopl" );
	deepEqual( Stem("acoplados"), "acopl" );
	deepEqual( Stem("acoplamento"), "acopl" );
	deepEqual( Stem("acoplando"), "acopl" );
	deepEqual( Stem("acorda"), "acord" );
	deepEqual( Stem("acordadas"), "acord" );
	deepEqual( Stem("acordados"), "acord" );
	deepEqual( Stem("acordam"), "acord" );
	deepEqual( Stem("acordamos"), "acord" );
	deepEqual( Stem("acordar"), "acord" );
	deepEqual( Stem("acordaram"), "acord" );
	deepEqual( Stem("acordava"), "acord" );
	deepEqual( Stem("acordes"), "acord" );
	deepEqual( Stem("acordo"), "acord" );
	deepEqual( Stem("acordos"), "acord" );
	deepEqual( Stem("acordou"), "acord" );
	deepEqual( Stem("acostuma"), "acostum" );
	deepEqual( Stem("acostumada"), "acostum" );
	deepEqual( Stem("acostumadas"), "acostum" );
	deepEqual( Stem("acostumado"), "acostum" );
	deepEqual( Stem("acostumados"), "acostum" );
	deepEqual( Stem("acostumam"), "acostum" );
	deepEqual( Stem("acostumar"), "acostum" );
	deepEqual( Stem("acostumaram"), "acostum" );
	deepEqual( Stem("acostumou"), "acostum" );
	deepEqual( Stem("açougue"), "açoug" );
	deepEqual( Stem("acovardada"), "acovard" );
	deepEqual( Stem("acre"), "acre" );
	deepEqual( Stem("acredita"), "acredit" );
	deepEqual( Stem("acreditam"), "acredit" );
	deepEqual( Stem("acreditamos"), "acredit" );
	deepEqual( Stem("acreditando"), "acredit" );
	deepEqual( Stem("acreditar"), "acredit" );
	deepEqual( Stem("acreditará"), "acredit" );
	deepEqual( Stem("acreditarmos"), "acredit" );
	deepEqual( Stem("acreditava"), "acredit" );
	deepEqual( Stem("acreditavam"), "acredit" );
	deepEqual( Stem("acredite"), "acredit" );
	deepEqual( Stem("acreditei"), "acredit" );
	deepEqual( Stem("acreditem"), "acredit" );
	deepEqual( Stem("acredito"), "acredit" );
	deepEqual( Stem("acreditou"), "acredit" );
	deepEqual( Stem("acrescenta"), "acrescent" );
	deepEqual( Stem("acrescentada"), "acrescent" );
	deepEqual( Stem("acrescentado"), "acrescent" );
	deepEqual( Stem("acrescentam"), "acrescent" );
	deepEqual( Stem("acrescentando"), "acrescent" );
	deepEqual( Stem("acrescentar"), "acrescent" );
	deepEqual( Stem("acrescentava"), "acrescent" );
	deepEqual( Stem("acrescente"), "acrescent" );
	deepEqual( Stem("acrescentou"), "acrescent" );
	deepEqual( Stem("acrescida"), "acresc" );
	deepEqual( Stem("acréscimo"), "acréscim" );
	deepEqual( Stem("acrobáticas"), "acrobát" );
	deepEqual( Stem("activation"), "activation" );
	deepEqual( Stem("actor"), "actor" );
	deepEqual( Stem("actors"), "actors" );
	deepEqual( Stem("acuada"), "acu" );
	deepEqual( Stem("açucar"), "açuc" );
	deepEqual( Stem("açúcar"), "açúc" );
	deepEqual( Stem("açúcares"), "açúc" );
	deepEqual( Stem("aculturado"), "acultur" );
	deepEqual( Stem("acumula"), "acumul" );
	deepEqual( Stem("acumulação"), "acumul" );
	deepEqual( Stem("acumuladas"), "acumul" );
	deepEqual( Stem("acumulado"), "acumul" );
	deepEqual( Stem("acumulador"), "acumul" );
	deepEqual( Stem("acumulados"), "acumul" );
	deepEqual( Stem("acumulam"), "acumul" );
	deepEqual( Stem("acumulando"), "acumul" );
	deepEqual( Stem("acumular"), "acumul" );
	deepEqual( Stem("acumulavam"), "acumul" );
	deepEqual( Stem("acumule"), "acumul" );
	deepEqual( Stem("acúmulo"), "acúmul" );
	deepEqual( Stem("acumulou"), "acumul" );
	deepEqual( Stem("acupuntura"), "acupuntur" );
	deepEqual( Stem("acupunturista"), "acupuntur" );
	deepEqual( Stem("acupunturistas"), "acupuntur" );
	deepEqual( Stem("acusa"), "acus" );
	deepEqual( Stem("acusação"), "acus" );
	deepEqual( Stem("acusações"), "acus" );
	deepEqual( Stem("acusada"), "acus" );
	deepEqual( Stem("acusado"), "acus" );
	deepEqual( Stem("acusados"), "acus" );
	deepEqual( Stem("acusam"), "acus" );
	deepEqual( Stem("acusamos"), "acus" );
	deepEqual( Stem("acusando"), "acus" );
	deepEqual( Stem("acusar"), "acus" );
	deepEqual( Stem("acusaram"), "acus" );
	deepEqual( Stem("acusava"), "acus" );
	deepEqual( Stem("acusavam"), "acus" );
	deepEqual( Stem("acusou"), "acus" );
	deepEqual( Stem("acústica"), "acúst" );
	deepEqual( Stem("adair"), "ada" );
	deepEqual( Stem("adami"), "adam" );
	deepEqual( Stem("adams"), "adams" );
	deepEqual( Stem("adão"), "adã" );
	deepEqual( Stem("adaptação"), "adapt" );
	deepEqual( Stem("adaptações"), "adapt" );
	deepEqual( Stem("adaptada"), "adapt" );
	deepEqual( Stem("adaptadas"), "adapt" );
	deepEqual( Stem("adaptado"), "adapt" );
	deepEqual( Stem("adaptados"), "adapt" );
	deepEqual( Stem("adaptar"), "adapt" );
	deepEqual( Stem("adaptara"), "adapt" );
	deepEqual( Stem("adaptaram"), "adapt" );
	deepEqual( Stem("adaptou"), "adapt" );
	deepEqual( Stem("adauto"), "adaut" );
	deepEqual( Stem("adega"), "adeg" );
	deepEqual( Stem("adegas"), "adeg" );
	deepEqual( Stem("adelaide"), "adelaid" );
	deepEqual( Stem("adélia"), "adél" );
	deepEqual( Stem("adelmo"), "adelm" );
	deepEqual( Stem("ademais"), "adem" );
	deepEqual( Stem("adensar"), "adens" );
	deepEqual( Stem("adepta"), "adept" );
	deepEqual( Stem("adepto"), "adept" );
	deepEqual( Stem("adeptos"), "adept" );
	deepEqual( Stem("adequação"), "adequ" );
	deepEqual( Stem("adequada"), "adequ" );
	deepEqual( Stem("adequadamente"), "adequ" );
	deepEqual( Stem("adequadas"), "adequ" );
	deepEqual( Stem("adequado"), "adequ" );
	deepEqual( Stem("adequados"), "adequ" );
	deepEqual( Stem("adequar"), "adequ" );
	deepEqual( Stem("adere"), "ader" );
	deepEqual( Stem("aderem"), "ader" );
	deepEqual( Stem("aderência"), "aderent" );
	deepEqual( Stem("aderente"), "aderent" );
	deepEqual( Stem("aderir"), "ader" );
	deepEqual( Stem("aderiram"), "ader" );
	deepEqual( Stem("aderirem"), "ader" );
	deepEqual( Stem("aderiu"), "ader" );
	deepEqual( Stem("ades"), "ades" );
	deepEqual( Stem("adesão"), "adesã" );
	deepEqual( Stem("adesistas"), "ades" );
	deepEqual( Stem("adesiva"), "ades" );
	deepEqual( Stem("adesivo"), "ades" );
	deepEqual( Stem("adesivos"), "ades" );
	deepEqual( Stem("adesões"), "adesõ" );
	deepEqual( Stem("adeus"), "adeus" );
	deepEqual( Stem("adhemar"), "adhem" );
	deepEqual( Stem("adiada"), "adi" );
	deepEqual( Stem("adiamentos"), "adiament" );
	deepEqual( Stem("adiando"), "adi" );
	deepEqual( Stem("adianta"), "adiant" );
	deepEqual( Stem("adiantado"), "adiant" );
	deepEqual( Stem("adiantamento"), "adiant" );
	deepEqual( Stem("adiantar"), "adiant" );
	deepEqual( Stem("adiante"), "adiant" );
	deepEqual( Stem("adiantou"), "adiant" );
	deepEqual( Stem("adiar"), "adi" );
	deepEqual( Stem("adib"), "adib" );
	deepEqual( Stem("adiciona"), "adicion" );
	deepEqual( Stem("adicionada"), "adicion" );
	deepEqual( Stem("adicionado"), "adicion" );
	deepEqual( Stem("adicionais"), "adicion" );
	deepEqual( Stem("adicional"), "adicional" );
	deepEqual( Stem("adicionam"), "adicion" );
	deepEqual( Stem("adicionando"), "adicion" );
	deepEqual( Stem("adicionar"), "adicion" );
	deepEqual( Stem("adicionasse"), "adicion" );
	deepEqual( Stem("adido"), "adid" );
	deepEqual( Stem("adilson"), "adilson" );
	deepEqual( Stem("adiou"), "adi" );
	deepEqual( Stem("adir"), "adir" );
	deepEqual( Stem("adivinhação"), "adivinh" );
	deepEqual( Stem("adivinhar"), "adivinh" );
	deepEqual( Stem("adivinhatório"), "adivinhatóri" );
	deepEqual( Stem("adjetivo"), "adjet" );
	deepEqual( Stem("adjetivos"), "adjet" );
	deepEqual( Stem("adjudicar"), "adjudic" );
	deepEqual( Stem("adjunto"), "adjunt" );
	deepEqual( Stem("adler"), "adler" );
	deepEqual( Stem("administra"), "administr" );
	deepEqual( Stem("administração"), "administr" );
	deepEqual( Stem("administrações"), "administr" );
	deepEqual( Stem("administrada"), "administr" );
	deepEqual( Stem("administrado"), "administr" );
	deepEqual( Stem("administrador"), "administr" );
	deepEqual( Stem("administradora"), "administr" );
	deepEqual( Stem("administradoras"), "administr" );
	deepEqual( Stem("administradores"), "administr" );
	deepEqual( Stem("administrados"), "administr" );
	deepEqual( Stem("administram"), "administr" );
	deepEqual( Stem("administrar"), "administr" );
	deepEqual( Stem("administrativa"), "administr" );
	deepEqual( Stem("administrativamente"), "administr" );
	deepEqual( Stem("administrativas"), "administr" );
	deepEqual( Stem("administrativo"), "administr" );
	deepEqual( Stem("administrativos"), "administr" );
	deepEqual( Stem("adminstração"), "adminstr" );
	deepEqual( Stem("admira"), "admir" );
	deepEqual( Stem("admiração"), "admir" );
	deepEqual( Stem("admirada"), "admir" );
	deepEqual( Stem("admiradas"), "admir" );
	deepEqual( Stem("admirado"), "admir" );
	deepEqual( Stem("admirador"), "admir" );
	deepEqual( Stem("admiradores"), "admir" );
	deepEqual( Stem("admirando"), "admir" );
	deepEqual( Stem("admirar"), "admir" );
	deepEqual( Stem("admirei"), "admir" );
	deepEqual( Stem("admiro"), "admir" );
	deepEqual( Stem("admissão"), "admissã" );
	deepEqual( Stem("admite"), "admit" );
	deepEqual( Stem("admitem"), "admit" );
	deepEqual( Stem("admitia"), "admit" );
	deepEqual( Stem("admitida"), "admit" );
	deepEqual( Stem("admitido"), "admit" );
	deepEqual( Stem("admitidos"), "admit" );
	deepEqual( Stem("admitimos"), "admit" );
	deepEqual( Stem("admitindo"), "admit" );
	deepEqual( Stem("admitir"), "admit" );
	deepEqual( Stem("admitiram"), "admit" );
	deepEqual( Stem("admitiu"), "admit" );
	deepEqual( Stem("admito"), "admit" );
	deepEqual( Stem("adobe"), "adob" );
	deepEqual( Stem("adoçante"), "adoc" );
	deepEqual( Stem("adoção"), "adoçã" );
	deepEqual( Stem("adoçaram"), "adoc" );
	deepEqual( Stem("adocicado"), "adocic" );
	deepEqual( Stem("adoecem"), "adoec" );
	deepEqual( Stem("adoecer"), "adoec" );
	deepEqual( Stem("adolescência"), "adolescent" );
	deepEqual( Stem("adolescente"), "adolescent" );
	deepEqual( Stem("adolescentes"), "adolescent" );
	deepEqual( Stem("adolfo"), "adolf" );
	deepEqual( Stem("adolph"), "adolph" );
	deepEqual( Stem("adora"), "ador" );
	deepEqual( Stem("adoração"), "ador" );
	deepEqual( Stem("adoradores"), "ador" );
	deepEqual( Stem("adorados"), "ador" );
	deepEqual( Stem("adoram"), "ador" );
	deepEqual( Stem("adoramos"), "ador" );
	deepEqual( Stem("adoraria"), "ador" );
	deepEqual( Stem("adorava"), "ador" );
	deepEqual( Stem("adoravam"), "ador" );
	deepEqual( Stem("adorei"), "ador" );
	deepEqual( Stem("adormecer"), "adormec" );
	deepEqual( Stem("adormecida"), "adormec" );
	deepEqual( Stem("adornadas"), "adorn" );
	deepEqual( Stem("adoro"), "ador" );
	deepEqual( Stem("adota"), "adot" );
	deepEqual( Stem("adotada"), "adot" );
	deepEqual( Stem("adotadas"), "adot" );
	deepEqual( Stem("adotado"), "adot" );
	deepEqual( Stem("adotados"), "adot" );
	deepEqual( Stem("adotam"), "adot" );
	deepEqual( Stem("adotando"), "adot" );
	deepEqual( Stem("adotar"), "adot" );
	deepEqual( Stem("adotaram"), "adot" );
	deepEqual( Stem("adotarem"), "adot" );
	deepEqual( Stem("adotasse"), "adot" );
	deepEqual( Stem("adotássemos"), "adot" );
	deepEqual( Stem("adotei"), "adot" );
	deepEqual( Stem("adotiva"), "adot" );
	deepEqual( Stem("adotivo"), "adot" );
	deepEqual( Stem("adotivos"), "adot" );
	deepEqual( Stem("adotou"), "adot" );
	deepEqual( Stem("adquire"), "adquir" );
	deepEqual( Stem("adquirem"), "adqu" );
	deepEqual( Stem("adquiri"), "adquir" );
	deepEqual( Stem("adquirida"), "adquir" );
	deepEqual( Stem("adquiridas"), "adquir" );
	deepEqual( Stem("adquiridos"), "adquir" );
	deepEqual( Stem("adquirir"), "adquir" );
	deepEqual( Stem("adquirira"), "adquir" );
	deepEqual( Stem("adquiriu"), "adquir" );
	deepEqual( Stem("adre"), "adre" );
	deepEqual( Stem("adrenalina"), "adrenalin" );
	deepEqual( Stem("adrian"), "adrian" );
	deepEqual( Stem("adriana"), "adrian" );
	deepEqual( Stem("adriane"), "adrian" );
	deepEqual( Stem("adriano"), "adrian" );
	deepEqual( Stem("adstringentes"), "adstringent" );
	deepEqual( Stem("aduaneira"), "aduaneir" );
	deepEqual( Stem("adubo"), "adub" );
	deepEqual( Stem("adular"), "adul" );
	deepEqual( Stem("adulta"), "adult" );
	deepEqual( Stem("adultas"), "adult" );
	deepEqual( Stem("adúlteras"), "adúlt" );
	deepEqual( Stem("adultério"), "adultéri" );
	deepEqual( Stem("adultérios"), "adultéri" );
	deepEqual( Stem("adúltero"), "adúlter" );
	deepEqual( Stem("adúlteros"), "adúlter" );
	deepEqual( Stem("adulto"), "adult" );
	deepEqual( Stem("adultos"), "adult" );
	deepEqual( Stem("adulyadej"), "adulyadej" );
	deepEqual( Stem("adversa"), "advers" );
	deepEqual( Stem("adversárias"), "adversár" );
	deepEqual( Stem("adversário"), "adversári" );
	deepEqual( Stem("adversários"), "adversári" );
	deepEqual( Stem("adversas"), "advers" );
	deepEqual( Stem("adversidade"), "advers" );
	deepEqual( Stem("adversos"), "advers" );
	deepEqual( Stem("adverte"), "advert" );
	deepEqual( Stem("advertência"), "advertent" );
	deepEqual( Stem("advertências"), "advertent" );
	deepEqual( Stem("advertia"), "advert" );
	deepEqual( Stem("advindas"), "advind" );
	deepEqual( Stem("advirto"), "advirt" );
	deepEqual( Stem("advocacia"), "advocac" );
	deepEqual( Stem("advogada"), "advog" );
	deepEqual( Stem("advogado"), "advog" );
	deepEqual( Stem("advogados"), "advog" );
	deepEqual( Stem("aê"), "aê" );
	deepEqual( Stem("aécio"), "aéci" );
	deepEqual( Stem("aérea"), "aér" );
	deepEqual( Stem("aéreas"), "aér" );
	deepEqual( Stem("aéreo"), "aér" );
	deepEqual( Stem("aéreos"), "aér" );
	deepEqual( Stem("aeróbica"), "aerób" );
	deepEqual( Stem("aeróbicos"), "aerób" );
	deepEqual( Stem("aerodinâmico"), "aerodinâm" );
	deepEqual( Stem("aeroespaciais"), "aeroespac" );
	deepEqual( Stem("aeroespacial"), "aeroespacial" );
	deepEqual( Stem("aerolineas"), "aerolin" );
	deepEqual( Stem("aeromoça"), "aeromoc" );
	deepEqual( Stem("aeronautas"), "aeronaut" );
	deepEqual( Stem("aeronáutica"), "aeronáut" );
	deepEqual( Stem("aeronáuticas"), "aeronáut" );
	deepEqual( Stem("aeronáutico"), "aeronáut" );
	deepEqual( Stem("aeronáuticos"), "aeronáut" );
	deepEqual( Stem("aeronave"), "aeronav" );
	deepEqual( Stem("aeronaves"), "aeronav" );
	deepEqual( Stem("aeroporto"), "aeroport" );
	deepEqual( Stem("aeroportos"), "aeroport" );
	deepEqual( Stem("aeroviário"), "aeroviári" );
	deepEqual( Stem("aês"), "aês" );
	deepEqual( Stem("aeudf"), "aeudf" );
	deepEqual( Stem("afã"), "afã" );
	deepEqual( Stem("afamada"), "afam" );
	deepEqual( Stem("afanar"), "afan" );
	deepEqual( Stem("afanasio"), "afanasi" );
	deepEqual( Stem("afasia"), "afas" );
	deepEqual( Stem("afasta"), "afast" );
	deepEqual( Stem("afastá"), "afast" );
	deepEqual( Stem("afastada"), "afast" );
	deepEqual( Stem("afastadas"), "afast" );
	deepEqual( Stem("afastado"), "afast" );
	deepEqual( Stem("afastados"), "afast" );
	deepEqual( Stem("afastam"), "afast" );
	deepEqual( Stem("afastamento"), "afast" );
	deepEqual( Stem("afastamos"), "afast" );
	deepEqual( Stem("afastar"), "afast" );
	deepEqual( Stem("afasto"), "afast" );
	deepEqual( Stem("afastou"), "afast" );
	deepEqual( Stem("afável"), "afável" );
	deepEqual( Stem("afazeres"), "afaz" );
	deepEqual( Stem("afbec"), "afbec" );
	deepEqual( Stem("afeito"), "afeit" );
	deepEqual( Stem("afeminados"), "afemin" );
	deepEqual( Stem("aferidos"), "afer" );
	deepEqual( Stem("aferir"), "afer" );
	deepEqual( Stem("aferrar"), "aferr" );
	deepEqual( Stem("afeta"), "afet" );
	deepEqual( Stem("afetada"), "afet" );
	deepEqual( Stem("afetadas"), "afet" );
	deepEqual( Stem("afetado"), "afet" );
	deepEqual( Stem("afetados"), "afet" );
	deepEqual( Stem("afetam"), "afet" );
	deepEqual( Stem("afetar"), "afet" );
	deepEqual( Stem("afetaria"), "afet" );
	deepEqual( Stem("afetasse"), "afet" );
	deepEqual( Stem("afetiva"), "afet" );
	deepEqual( Stem("afetivamente"), "afet" );
	deepEqual( Stem("afetivas"), "afet" );
	deepEqual( Stem("afetividade"), "afet" );
	deepEqual( Stem("afetivo"), "afet" );
	deepEqual( Stem("afetivos"), "afet" );
	deepEqual( Stem("afeto"), "afet" );
	deepEqual( Stem("afetou"), "afet" );
	deepEqual( Stem("afetuosamente"), "afetu" );
	deepEqual( Stem("affair"), "affa" );
	deepEqual( Stem("affini"), "affin" );
	deepEqual( Stem("afiados"), "afi" );
	deepEqual( Stem("afiando"), "afi" );
	deepEqual( Stem("aficionado"), "aficion" );
	deepEqual( Stem("aficionados"), "aficion" );
	deepEqual( Stem("afilhada"), "afilh" );
	deepEqual( Stem("afinadas"), "afin" );
	deepEqual( Stem("afinal"), "afinal" );
	deepEqual( Stem("afinam"), "afin" );
	deepEqual( Stem("afinco"), "afinc" );
	deepEqual( Stem("afinidade"), "afin" );
	deepEqual( Stem("afinidades"), "afin" );
	deepEqual( Stem("afins"), "afins" );
	deepEqual( Stem("afirma"), "afirm" );
	deepEqual( Stem("afirmação"), "afirm" );
	deepEqual( Stem("afirmam"), "afirm" );
	deepEqual( Stem("afirmando"), "afirm" );
	deepEqual( Stem("afirmar"), "afirm" );
	deepEqual( Stem("afirmaram"), "afirm" );
	deepEqual( Stem("afirmativa"), "afirm" );
	deepEqual( Stem("afirmativas"), "afirm" );
	deepEqual( Stem("afirmava"), "afirm" );
	deepEqual( Stem("afirmou"), "afirm" );
	deepEqual( Stem("afivelados"), "afivel" );
	deepEqual( Stem("afixado"), "afix" );
	deepEqual( Stem("afixou"), "afix" );
	deepEqual( Stem("aflição"), "afliçã" );
	deepEqual( Stem("aflitas"), "aflit" );
	deepEqual( Stem("aflorou"), "aflor" );
	deepEqual( Stem("afluentes"), "afluent" );
	deepEqual( Stem("afogada"), "afog" );
	deepEqual( Stem("afogado"), "afog" );
	deepEqual( Stem("afogueadas"), "afog" );
	deepEqual( Stem("afonjá"), "afonj" );
	deepEqual( Stem("afonso"), "afons" );
	deepEqual( Stem("afora"), "afor" );
	deepEqual( Stem("aforismo"), "afor" );
	deepEqual( Stem("afrescos"), "afresc" );
	deepEqual( Stem("áfrica"), "áfric" );
	deepEqual( Stem("africana"), "african" );
	deepEqual( Stem("africanas"), "african" );
	deepEqual( Stem("africanizado"), "africaniz" );
	deepEqual( Stem("africano"), "african" );
	deepEqual( Stem("africanos"), "african" );
	deepEqual( Stem("afro"), "afro" );
	deepEqual( Stem("afronta"), "afront" );
	deepEqual( Stem("afros"), "afros" );
	deepEqual( Stem("after"), "after" );
	deepEqual( Stem("afundado"), "afund" );
	deepEqual( Stem("afundamento"), "afund" );
	deepEqual( Stem("afundar"), "afund" );
	deepEqual( Stem("afundaram"), "afund" );
	deepEqual( Stem("afundou"), "afund" );
	deepEqual( Stem("ag"), "ag" );
	deepEqual( Stem("agachado"), "agach" );
	deepEqual( Stem("against"), "against" );
	deepEqual( Stem("agarrado"), "agarr" );
	deepEqual( Stem("agarrados"), "agarr" );
	deepEqual( Stem("agarrar"), "agarr" );
	deepEqual( Stem("agarras"), "agarr" );
	deepEqual( Stem("agasalhar"), "agasalh" );
	deepEqual( Stem("agasalho"), "agasalh" );
	deepEqual( Stem("agassi"), "agass" );
	deepEqual( Stem("agaxtur"), "agaxtur" );
	deepEqual( Stem("age"), "age" );
	deepEqual( Stem("ágeis"), "áge" );
	deepEqual( Stem("agem"), "agem" );
	deepEqual( Stem("agência"), "agênc" );
	deepEqual( Stem("agências"), "agênc" );
	deepEqual( Stem("agenciava"), "agenc" );
	deepEqual( Stem("agencom"), "agencom" );
	deepEqual( Stem("agenda"), "agend" );
	deepEqual( Stem("agendados"), "agend" );
	deepEqual( Stem("agendar"), "agend" );
	deepEqual( Stem("agendas"), "agend" );
	deepEqual( Stem("agente"), "agent" );
	deepEqual( Stem("agentes"), "agent" );
	deepEqual( Stem("agiam"), "agi" );
	deepEqual( Stem("agigantava"), "agigant" );
	deepEqual( Stem("ágil"), "ágil" );
	deepEqual( Stem("agilidade"), "agil" );
	deepEqual( Stem("agilizar"), "agiliz" );
	deepEqual( Stem("agilizou"), "agiliz" );
	deepEqual( Stem("agilson"), "agilson" );
	deepEqual( Stem("agindo"), "agind" );
	deepEqual( Stem("agins"), "agins" );
	deepEqual( Stem("ágio"), "ági" );
	deepEqual( Stem("agir"), "agir" );
	deepEqual( Stem("agiram"), "agir" );
	deepEqual( Stem("agisse"), "agiss" );
	deepEqual( Stem("agita"), "agit" );
	deepEqual( Stem("agitação"), "agit" );
	deepEqual( Stem("agitada"), "agit" );
	deepEqual( Stem("agitado"), "agit" );
	deepEqual( Stem("agitador"), "agit" );
	deepEqual( Stem("agitados"), "agit" );
	deepEqual( Stem("agito"), "agit" );
	deepEqual( Stem("agiu"), "agiu" );
	deepEqual( Stem("aglomerações"), "aglomer" );
	deepEqual( Stem("aglomeram"), "aglom" );
	deepEqual( Stem("aglutina"), "aglutin" );
	deepEqual( Stem("agnaldo"), "agnald" );
	deepEqual( Stem("agnelli"), "agnell" );
	deepEqual( Stem("agonia"), "agon" );
	deepEqual( Stem("agora"), "agor" );
	deepEqual( Stem("agostim"), "agostim" );
	deepEqual( Stem("agostinho"), "agostinh" );
	deepEqual( Stem("agosto"), "agost" );
	deepEqual( Stem("agraciada"), "agrac" );
	deepEqual( Stem("agraciado"), "agrac" );
	deepEqual( Stem("agraciados"), "agrac" );
	deepEqual( Stem("agrada"), "agrad" );
	deepEqual( Stem("agradá"), "agrad" );
	deepEqual( Stem("agradabilíssimo"), "agradabilíssim" );
	deepEqual( Stem("agradam"), "agrad" );
	deepEqual( Stem("agradar"), "agrad" );
	deepEqual( Stem("agradáveis"), "agrad" );
	deepEqual( Stem("agradável"), "agrad" );
	deepEqual( Stem("agrade"), "agrad" );
	deepEqual( Stem("agradece"), "agradec" );
	deepEqual( Stem("agradecer"), "agradec" );
	deepEqual( Stem("agradeci"), "agradec" );
	deepEqual( Stem("agradecimento"), "agradec" );
	deepEqual( Stem("agrados"), "agrad" );
	deepEqual( Stem("agradou"), "agrad" );
	deepEqual( Stem("agrária"), "agrár" );
	deepEqual( Stem("agrava"), "agrav" );
	deepEqual( Stem("agravada"), "agrav" );
	deepEqual( Stem("agravam"), "agrav" );
	deepEqual( Stem("agravamento"), "agrav" );
	deepEqual( Stem("agravantes"), "agrav" );
	deepEqual( Stem("agravar"), "agrav" );
	deepEqual( Stem("agravou"), "agrav" );
	deepEqual( Stem("agredida"), "agred" );
	deepEqual( Stem("agredidas"), "agred" );
	deepEqual( Stem("agredido"), "agred" );
	deepEqual( Stem("agredir"), "agred" );
	deepEqual( Stem("agrega"), "agreg" );
	deepEqual( Stem("agregação"), "agreg" );
	deepEqual( Stem("agregado"), "agreg" );
	deepEqual( Stem("agregador"), "agreg" );
	deepEqual( Stem("agregados"), "agreg" );
	deepEqual( Stem("agregando"), "agreg" );
	deepEqual( Stem("agregar"), "agreg" );
	deepEqual( Stem("agregou"), "agreg" );
	deepEqual( Stem("agregue"), "agreg" );
	deepEqual( Stem("agressão"), "agressã" );
	deepEqual( Stem("agressiva"), "agress" );
	deepEqual( Stem("agressivamente"), "agress" );
	deepEqual( Stem("agressivas"), "agress" );
	deepEqual( Stem("agressividade"), "agress" );
	deepEqual( Stem("agressivo"), "agress" );
	deepEqual( Stem("agressivos"), "agress" );
	deepEqual( Stem("agressões"), "agressõ" );
	deepEqual( Stem("agressor"), "agressor" );
	deepEqual( Stem("agreste"), "agrest" );
	deepEqual( Stem("agrícola"), "agrícol" );
	deepEqual( Stem("agrícolas"), "agrícol" );
	deepEqual( Stem("agricultor"), "agricultor" );
	deepEqual( Stem("agricultores"), "agricultor" );
	deepEqual( Stem("agricultura"), "agricultur" );
	deepEqual( Stem("agridoce"), "agridoc" );
	deepEqual( Stem("agrocentro"), "agrocentr" );
	deepEqual( Stem("agroindústria"), "agroindústr" );
	deepEqual( Stem("agrônomo"), "agrônom" );
	deepEqual( Stem("agruras"), "agrur" );
	deepEqual( Stem("água"), "águ" );
	deepEqual( Stem("aguados"), "agu" );
	deepEqual( Stem("aguarda"), "aguard" );
	deepEqual( Stem("aguardam"), "aguard" );
	deepEqual( Stem("aguardar"), "aguard" );
	deepEqual( Stem("aguardava"), "aguard" );
	deepEqual( Stem("aguardavam"), "aguard" );
	deepEqual( Stem("aguardou"), "aguard" );
	deepEqual( Stem("águas"), "águ" );
	deepEqual( Stem("aguçada"), "aguc" );
	deepEqual( Stem("agudas"), "agud" );
	deepEqual( Stem("agudos"), "agud" );
	deepEqual( Stem("aguenta"), "aguent" );
	deepEqual( Stem("agüenta"), "agüent" );
	deepEqual( Stem("aguentam"), "aguent" );
	deepEqual( Stem("aguentamos"), "aguent" );
	deepEqual( Stem("aguentar"), "aguent" );
	deepEqual( Stem("aguentava"), "aguent" );
	deepEqual( Stem("agüentava"), "agüent" );
	deepEqual( Stem("aguente"), "aguent" );
	deepEqual( Stem("agüente"), "agüent" );
	deepEqual( Stem("aguento"), "aguent" );
	deepEqual( Stem("agüento"), "agüent" );
	deepEqual( Stem("aguentou"), "aguent" );
	deepEqual( Stem("agüentou"), "agüent" );
	deepEqual( Stem("aguiar"), "agui" );
	deepEqual( Stem("aguinaldo"), "aguinald" );
	deepEqual( Stem("agulha"), "agulh" );
	deepEqual( Stem("agulhas"), "agulh" );
	deepEqual( Stem("ah"), "ah" );
	deepEqual( Stem("ahouagi"), "ahouag" );
	deepEqual( Stem("ahuasca"), "ahuasc" );
	deepEqual( Stem("ai"), "ai" );
	deepEqual( Stem("aí"), "aí" );
	deepEqual( Stem("aidéticas"), "aidét" );
	deepEqual( Stem("aidético"), "aidét" );
	deepEqual( Stem("aidéticos"), "aidét" );
	deepEqual( Stem("aids"), "aids" );
	deepEqual( Stem("ailson"), "ailson" );
	deepEqual( Stem("ailton"), "ailton" );
	deepEqual( Stem("aílton"), "aílton" );
	deepEqual( Stem("ainda"), "aind" );
	deepEqual( Stem("air"), "air" );
	deepEqual( Stem("airbus"), "airbus" );
	deepEqual( Stem("aires"), "air" );
	deepEqual( Stem("airès"), "airès" );
	deepEqual( Stem("airlines"), "airlin" );
	deepEqual( Stem("ajeita"), "ajeit" );
	deepEqual( Stem("ajeitadinha"), "ajeitadinh" );
	deepEqual( Stem("ajeitando"), "ajeit" );
	deepEqual( Stem("ajoelharam"), "ajoelh" );
	deepEqual( Stem("ajuda"), "ajud" );
	deepEqual( Stem("ajudá"), "ajud" );
	deepEqual( Stem("ajudado"), "ajud" );
	deepEqual( Stem("ajudam"), "ajud" );
	deepEqual( Stem("ajudamos"), "ajud" );
	deepEqual( Stem("ajudando"), "ajud" );
	deepEqual( Stem("ajudante"), "ajud" );
	deepEqual( Stem("ajudar"), "ajud" );
	deepEqual( Stem("ajudará"), "ajud" );
	deepEqual( Stem("ajudaram"), "ajud" );
	deepEqual( Stem("ajudarão"), "ajud" );
	deepEqual( Stem("ajudaria"), "ajud" );
	deepEqual( Stem("ajudava"), "ajud" );
	deepEqual( Stem("ajudavam"), "ajud" );
	deepEqual( Stem("ajude"), "ajud" );
	deepEqual( Stem("ajudem"), "ajud" );
	deepEqual( Stem("ajudo"), "ajud" );
	deepEqual( Stem("ajudou"), "ajud" );
	deepEqual( Stem("ajusta"), "ajust" );
	deepEqual( Stem("ajustado"), "ajust" );
	deepEqual( Stem("ajustar"), "ajust" );
	deepEqual( Stem("ajuste"), "ajust" );
	deepEqual( Stem("ajustes"), "ajust" );
	deepEqual( Stem("ajustou"), "ajust" );
	deepEqual( Stem("ak"), "ak" );
	deepEqual( Stem("akihito"), "akihit" );
	deepEqual( Stem("akira"), "akir" );
	deepEqual( Stem("al"), "al" );
	deepEqual( Stem("ala"), "ala" );
	deepEqual( Stem("alá"), "alá" );
	deepEqual( Stem("alagoana"), "alagoan" );
	deepEqual( Stem("alagoano"), "alagoan" );
	deepEqual( Stem("alagoanos"), "alagoan" );
	deepEqual( Stem("alagoas"), "alago" );
	deepEqual( Stem("alaíde"), "alaíd" );
	deepEqual( Stem("alain"), "alain" );
	deepEqual( Stem("alambique"), "alambiqu" );
	deepEqual( Stem("alamogordo"), "alamogord" );
	deepEqual( Stem("alan"), "alan" );
	deepEqual( Stem("alarcón"), "alarcón" );
	deepEqual( Stem("alardeada"), "alard" );
	deepEqual( Stem("alardear"), "alard" );
	deepEqual( Stem("alardeassem"), "alard" );
	deepEqual( Stem("alargamento"), "alarg" );
	deepEqual( Stem("alargar"), "alarg" );
	deepEqual( Stem("alarmado"), "alarm" );
	deepEqual( Stem("alarmados"), "alarm" );
	deepEqual( Stem("alarme"), "alarm" );
	deepEqual( Stem("alarmes"), "alarm" );
	deepEqual( Stem("alasca"), "alasc" );
	deepEqual( Stem("alavanca"), "alavanc" );
	deepEqual( Stem("alavancar"), "alavanc" );
	deepEqual( Stem("alavancas"), "alavanc" );
	deepEqual( Stem("albarello"), "albarell" );
	deepEqual( Stem("albendazol"), "albendazol" );
	deepEqual( Stem("albergue"), "alberg" );
	deepEqual( Stem("alberico"), "alber" );
	deepEqual( Stem("albert"), "albert" );
	deepEqual( Stem("alberto"), "albert" );
	deepEqual( Stem("albertoni"), "alberton" );
	deepEqual( Stem("albiero"), "albier" );
	deepEqual( Stem("albino"), "albin" );
	deepEqual( Stem("álbum"), "álbum" );
	deepEqual( Stem("álbuns"), "álbuns" );
	deepEqual( Stem("albuquerque"), "albuquerqu" );
	deepEqual( Stem("alca"), "alca" );
	deepEqual( Stem("alça"), "alça" );
	deepEqual( Stem("alcaçuzz"), "alcaçuzz" );
	deepEqual( Stem("alçada"), "alçad" );
	deepEqual( Stem("alçado"), "alçad" );
	deepEqual( Stem("alcança"), "alcanc" );
	deepEqual( Stem("alcançá"), "alcanc" );
	deepEqual( Stem("alcançado"), "alcanc" );
	deepEqual( Stem("alcançamos"), "alcanc" );
	deepEqual( Stem("alcançar"), "alcanc" );
	deepEqual( Stem("alcançasse"), "alcanc" );
	deepEqual( Stem("alcance"), "alcanc" );
	deepEqual( Stem("alcancei"), "alcanc" );
	deepEqual( Stem("alcancem"), "alcanc" );
	deepEqual( Stem("alcançou"), "alcanc" );
	deepEqual( Stem("alcântara"), "alcânt" );
	deepEqual( Stem("alçapão"), "alçapã" );
	deepEqual( Stem("alçar"), "alçar" );
	deepEqual( Stem("alccólatra"), "alccólatr" );
	deepEqual( Stem("alcides"), "alcid" );
	deepEqual( Stem("alcoa"), "alco" );
	deepEqual( Stem("álcool"), "álcool" );
	deepEqual( Stem("alcoólatra"), "alcoólatr" );
	deepEqual( Stem("alcoólatras"), "alcoólatr" );
	deepEqual( Stem("alcoólica"), "alcoól" );
	deepEqual( Stem("alcoólicas"), "alcoól" );
	deepEqual( Stem("alcoólico"), "alcoól" );
	deepEqual( Stem("alcoólicos"), "alcoól" );
	deepEqual( Stem("alcoolismo"), "alcool" );
	deepEqual( Stem("alcoolizados"), "alcooliz" );
	deepEqual( Stem("alcoquímica"), "alcoquím" );
	deepEqual( Stem("alcorão"), "alcorã" );
	deepEqual( Stem("alçou"), "alçou" );
	deepEqual( Stem("alcova"), "alcov" );
	deepEqual( Stem("alcovitice"), "alcovitic" );
	deepEqual( Stem("alcunha"), "alcunh" );
	deepEqual( Stem("alcyr"), "alcyr" );
	deepEqual( Stem("aldeia"), "alde" );
	deepEqual( Stem("aldeota"), "aldeot" );
	deepEqual( Stem("aldo"), "aldo" );
	deepEqual( Stem("aldunate"), "aldunat" );
	deepEqual( Stem("alê"), "alê" );
	deepEqual( Stem("aleatória"), "aleatór" );
	deepEqual( Stem("alecrim"), "alecrim" );
	deepEqual( Stem("alega"), "aleg" );
	deepEqual( Stem("alegação"), "aleg" );
	deepEqual( Stem("alegadas"), "aleg" );
	deepEqual( Stem("alegado"), "aleg" );
	deepEqual( Stem("alegam"), "aleg" );
	deepEqual( Stem("alegando"), "aleg" );
	deepEqual( Stem("alegar"), "aleg" );
	deepEqual( Stem("alegaram"), "aleg" );
	deepEqual( Stem("alegava"), "aleg" );
	deepEqual( Stem("alegoria"), "alegor" );
	deepEqual( Stem("alegou"), "aleg" );
	deepEqual( Stem("alegra"), "alegr" );
	deepEqual( Stem("alegrasse"), "alegr" );
	deepEqual( Stem("alegre"), "alegr" );
	deepEqual( Stem("alegres"), "alegr" );
	deepEqual( Stem("alegrete"), "alegret" );
	deepEqual( Stem("alegria"), "alegr" );
	deepEqual( Stem("alegrias"), "alegr" );
	deepEqual( Stem("alegro"), "alegr" );
	deepEqual( Stem("aleida"), "ale" );
	deepEqual( Stem("aleijado"), "aleij" );
	deepEqual( Stem("aleixo"), "aleix" );
	deepEqual( Stem("alejandro"), "alejandr" );
	deepEqual( Stem("além"), "além" );
	deepEqual( Stem("alemã"), "alemã" );
	deepEqual( Stem("alemães"), "alemã" );
	deepEqual( Stem("alemanha"), "alemanh" );
	deepEqual( Stem("alemão"), "alemã" );
	deepEqual( Stem("alencar"), "alenc" );
	deepEqual( Stem("alencastro"), "alencastr" );
	deepEqual( Stem("alenquer"), "alenqu" );
	deepEqual( Stem("alentado"), "alent" );
	deepEqual( Stem("alentejo"), "alentej" );
	deepEqual( Stem("alento"), "alent" );
	deepEqual( Stem("alergia"), "alerg" );
	deepEqual( Stem("alergias"), "alerg" );
	deepEqual( Stem("alerta"), "alert" );
	deepEqual( Stem("alertadas"), "alert" );
	deepEqual( Stem("alertado"), "alert" );
	deepEqual( Stem("alertam"), "alert" );
	deepEqual( Stem("alertava"), "alert" );
	deepEqual( Stem("alertou"), "alert" );
	deepEqual( Stem("alessandra"), "alessandr" );
	deepEqual( Stem("alessandro"), "alessandr" );
	deepEqual( Stem("alessio"), "alessi" );
	deepEqual( Stem("alex"), "alex" );
	deepEqual( Stem("alexander"), "alexand" );
	deepEqual( Stem("alexandra"), "alexandr" );
	deepEqual( Stem("alexandre"), "alexandr" );
	deepEqual( Stem("alexim"), "alexim" );
	deepEqual( Stem("alfabetização"), "alfabetiz" );
	deepEqual( Stem("alfabetizado"), "alfabetiz" );
	deepEqual( Stem("alfabetizadora"), "alfabetiz" );
	deepEqual( Stem("alfabetizadores"), "alfabetiz" );
	deepEqual( Stem("alfabetizados"), "alfabetiz" );
	deepEqual( Stem("alfabetizar"), "alfabetiz" );
	deepEqual( Stem("alfabeto"), "alfabet" );
	deepEqual( Stem("alface"), "alfac" );
	deepEqual( Stem("alfaiates"), "alfaiat" );
	deepEqual( Stem("alfândega"), "alfândeg" );
	deepEqual( Stem("alfandegárias"), "alfandegár" );
	deepEqual( Stem("alfândegas"), "alfândeg" );
	deepEqual( Stem("alfer"), "alfer" );
	deepEqual( Stem("alferes"), "alfer" );
	deepEqual( Stem("alfineta"), "alfinet" );
	deepEqual( Stem("alforria"), "alforr" );
	deepEqual( Stem("alfred"), "alfred" );
	deepEqual( Stem("alfredo"), "alfred" );
	deepEqual( Stem("algarismos"), "algar" );
	deepEqual( Stem("algas"), "algas" );
	deepEqual( Stem("algema"), "algem" );
	deepEqual( Stem("algemados"), "algem" );
	deepEqual( Stem("algo"), "algo" );
	deepEqual( Stem("algodão"), "algodã" );
	deepEqual( Stem("alguém"), "alguém" );
	deepEqual( Stem("algum"), "algum" );
	deepEqual( Stem("alguma"), "algum" );
	deepEqual( Stem("algumas"), "algum" );
	deepEqual( Stem("alguns"), "alguns" );
	deepEqual( Stem("alheia"), "alhe" );
	deepEqual( Stem("alheias"), "alhe" );
	deepEqual( Stem("alheio"), "alhei" );
	deepEqual( Stem("alheios"), "alhei" );
	deepEqual( Stem("alho"), "alho" );
	deepEqual( Stem("ali"), "ali" );
	deepEqual( Stem("aliadas"), "ali" );
	deepEqual( Stem("aliado"), "ali" );
	deepEqual( Stem("aliados"), "ali" );
	deepEqual( Stem("aliança"), "alianc" );
	deepEqual( Stem("alianças"), "alianc" );
	deepEqual( Stem("aliar"), "ali" );
	deepEqual( Stem("aliaram"), "ali" );
	deepEqual( Stem("aliás"), "aliás" );
	deepEqual( Stem("álibi"), "álib" );
	deepEqual( Stem("álibis"), "álib" );
	deepEqual( Stem("alice"), "alic" );
	deepEqual( Stem("alicerces"), "alicerc" );
	deepEqual( Stem("alien"), "alien" );
	deepEqual( Stem("alienação"), "alien" );
	deepEqual( Stem("alienados"), "alien" );
	deepEqual( Stem("alienígena"), "alienígen" );
	deepEqual( Stem("alienígenas"), "alienígen" );
	deepEqual( Stem("alimenta"), "aliment" );
	deepEqual( Stem("alimentação"), "aliment" );
	deepEqual( Stem("alimentada"), "aliment" );
	deepEqual( Stem("alimentadas"), "aliment" );
	deepEqual( Stem("alimentado"), "aliment" );
	deepEqual( Stem("alimentados"), "aliment" );
	deepEqual( Stem("alimentam"), "aliment" );
	deepEqual( Stem("alimentando"), "aliment" );
	deepEqual( Stem("alimentar"), "aliment" );
	deepEqual( Stem("alimentaram"), "aliment" );
	deepEqual( Stem("alimentares"), "aliment" );
	deepEqual( Stem("alimentos"), "aliment" );
	deepEqual( Stem("aline"), "alin" );
	deepEqual( Stem("alinhado"), "alinh" );
	deepEqual( Stem("alinhados"), "alinh" );
	deepEqual( Stem("alinhou"), "alinh" );
	deepEqual( Stem("alíquota"), "alíquot" );
	deepEqual( Stem("alíquotas"), "alíquot" );
	deepEqual( Stem("alisia"), "alis" );
	deepEqual( Stem("alitalia"), "alital" );
	deepEqual( Stem("alivia"), "aliv" );
	deepEqual( Stem("aliviada"), "alivi" );
	deepEqual( Stem("aliviado"), "alivi" );
	deepEqual( Stem("aliviar"), "alivi" );
	deepEqual( Stem("aliviava"), "alivi" );
	deepEqual( Stem("alívio"), "alívi" );
	deepEqual( Stem("alka"), "alka" );
	deepEqual( Stem("allan"), "allan" );
	deepEqual( Stem("allen"), "allen" );
	deepEqual( Stem("alliance"), "allianc" );
	deepEqual( Stem("alma"), "alma" );
	deepEqual( Stem("almanaque"), "almanaqu" );
	deepEqual( Stem("almas"), "almas" );
	deepEqual( Stem("almeida"), "alme" );
	deepEqual( Stem("almeja"), "almej" );
	deepEqual( Stem("almejada"), "almej" );
	deepEqual( Stem("almejado"), "almej" );
	deepEqual( Stem("almejam"), "almej" );
	deepEqual( Stem("almirantado"), "almirant" );
	deepEqual( Stem("almirante"), "almir" );
	deepEqual( Stem("almoça"), "almoc" );
	deepEqual( Stem("almoçar"), "almoc" );
	deepEqual( Stem("almoço"), "almoc" );
	deepEqual( Stem("almoços"), "almoc" );
	deepEqual( Stem("almoçou"), "almoc" );
	deepEqual( Stem("almofada"), "almof" );
	deepEqual( Stem("aln"), "aln" );
	deepEqual( Stem("alô"), "alô" );
	deepEqual( Stem("aloe"), "alo" );
	deepEqual( Stem("aloha"), "aloh" );
	deepEqual( Stem("aloisio"), "aloisi" );
	deepEqual( Stem("aloizio"), "aloizi" );
	deepEqual( Stem("alojados"), "aloj" );
	deepEqual( Stem("alojamento"), "aloj" );
	deepEqual( Stem("alojamentos"), "aloj" );
	deepEqual( Stem("alone"), "alon" );
	deepEqual( Stem("alongamento"), "along" );
	deepEqual( Stem("alopata"), "alopat" );
	deepEqual( Stem("alopatas"), "alopat" );
	deepEqual( Stem("alopáticas"), "alopát" );
	deepEqual( Stem("alopáticos"), "alopát" );
	deepEqual( Stem("aloprado"), "alopr" );
	deepEqual( Stem("aloysio"), "aloysi" );
	deepEqual( Stem("alpargatas"), "alpargat" );
	deepEqual( Stem("alpha"), "alpha" );
	deepEqual( Stem("alphatem"), "alphat" );
	deepEqual( Stem("alphaville"), "alphavill" );
	deepEqual( Stem("alpinismo"), "alpin" );
	deepEqual( Stem("alpinista"), "alpin" );
	deepEqual( Stem("alpinistas"), "alpin" );
	deepEqual( Stem("alqueires"), "alqu" );
	deepEqual( Stem("alquimia"), "alquim" );
	deepEqual( Stem("alta"), "alta" );
	deepEqual( Stem("altair"), "alta" );
	deepEqual( Stem("altamair"), "altama" );
	deepEqual( Stem("altamente"), "alt" );
	deepEqual( Stem("altaneiro"), "altaneir" );
	deepEqual( Stem("altar"), "altar" );
	deepEqual( Stem("altas"), "altas" );
	deepEqual( Stem("alter"), "alter" );
	deepEqual( Stem("altera"), "alter" );
	deepEqual( Stem("alteração"), "alter" );
	deepEqual( Stem("alterações"), "alter" );
	deepEqual( Stem("alterado"), "alter" );
	deepEqual( Stem("alteram"), "alter" );
	deepEqual( Stem("alterar"), "alter" );
	deepEqual( Stem("alteravam"), "alter" );
	deepEqual( Stem("alternadamente"), "altern" );
	deepEqual( Stem("alternam"), "altern" );
	deepEqual( Stem("alternância"), "altern" );
	deepEqual( Stem("alternativa"), "altern" );
	deepEqual( Stem("alternativas"), "altern" );
	deepEqual( Stem("alternativo"), "altern" );
	deepEqual( Stem("alternativos"), "altern" );
	deepEqual( Stem("alternava"), "altern" );
	deepEqual( Stem("alternavam"), "altern" );
	deepEqual( Stem("altinópolis"), "altinópol" );
	deepEqual( Stem("altiplano"), "altiplan" );
	deepEqual( Stem("altíssima"), "altíssim" );
	deepEqual( Stem("altíssimas"), "altíssim" );
	deepEqual( Stem("altíssimo"), "altíssim" );
	deepEqual( Stem("altíssimos"), "altíss" );
	deepEqual( Stem("altissonantes"), "altisson" );
	deepEqual( Stem("altitude"), "altitud" );
	deepEqual( Stem("altitudes"), "altitud" );
	deepEqual( Stem("altiva"), "altiv" );
	deepEqual( Stem("alto"), "alto" );
	deepEqual( Stem("altoé"), "alto" );
	deepEqual( Stem("altos"), "altos" );
	deepEqual( Stem("altura"), "altur" );
	deepEqual( Stem("alturas"), "altur" );
	deepEqual( Stem("alucinada"), "alucin" );
	deepEqual( Stem("alucinado"), "alucin" );
	deepEqual( Stem("alucinados"), "alucin" );
	deepEqual( Stem("alucinante"), "alucin" );
	deepEqual( Stem("alucinógena"), "alucinógen" );
	deepEqual( Stem("alucinógenas"), "alucinógen" );
	deepEqual( Stem("aluga"), "alug" );
	deepEqual( Stem("alugada"), "alug" );
	deepEqual( Stem("alugadas"), "alug" );
	deepEqual( Stem("alugado"), "alug" );
	deepEqual( Stem("alugados"), "alug" );
	deepEqual( Stem("alugam"), "alug" );
	deepEqual( Stem("alugando"), "alug" );
	deepEqual( Stem("alugar"), "alug" );
	deepEqual( Stem("alugo"), "alug" );
	deepEqual( Stem("alugou"), "alug" );
	deepEqual( Stem("aluguei"), "alugu" );
	deepEqual( Stem("aluguéis"), "alug" );
	deepEqual( Stem("aluguel"), "aluguel" );
	deepEqual( Stem("aluminart"), "aluminart" );
	deepEqual( Stem("alumínio"), "alumíni" );
	deepEqual( Stem("alumni"), "alumn" );
	deepEqual( Stem("aluna"), "alun" );
	deepEqual( Stem("alunas"), "alun" );
	deepEqual( Stem("aluno"), "alun" );
	deepEqual( Stem("alunos"), "alun" );
	deepEqual( Stem("alusão"), "alusã" );
	deepEqual( Stem("alvará"), "alvar" );
	deepEqual( Stem("alvares"), "alvar" );
	deepEqual( Stem("álvares"), "álvar" );
	deepEqual( Stem("alvarez"), "alvarez" );
	deepEqual( Stem("álvaro"), "álvar" );
	deepEqual( Stem("alvejou"), "alvej" );
	deepEqual( Stem("alves"), "alves" );
	deepEqual( Stem("alvim"), "alvim" );
	deepEqual( Stem("alvíssimas"), "alvíssim" );
	deepEqual( Stem("alvo"), "alvo" );
	deepEqual( Stem("alvorada"), "alvor" );
	deepEqual( Stem("alvoroço"), "alvoroc" );
	deepEqual( Stem("alvos"), "alvos" );
	deepEqual( Stem("alzheimer"), "alzheim" );
	deepEqual( Stem("am"), "am" );
	deepEqual( Stem("ama"), "ama" );
	deepEqual( Stem("amable"), "amabl" );
	deepEqual( Stem("amada"), "amad" );
	deepEqual( Stem("amado"), "amad" );
	deepEqual( Stem("amador"), "amador" );
	deepEqual( Stem("amadores"), "amador" );
	deepEqual( Stem("amadurece"), "amadurec" );
	deepEqual( Stem("amadurecem"), "amadurec" );
	deepEqual( Stem("amadurecendo"), "amadurec" );
	deepEqual( Stem("amadurecer"), "amadurec" );
	deepEqual( Stem("amalia"), "amal" );
	deepEqual( Stem("amam"), "amam" );
	deepEqual( Stem("amamentando"), "amament" );
	deepEqual( Stem("amamentar"), "amament" );
	deepEqual( Stem("amâncio"), "amânci" );
	deepEqual( Stem("amanda"), "amand" );
	deepEqual( Stem("amanhã"), "amanhã" );
	deepEqual( Stem("amanhecidos"), "amanhec" );
	deepEqual( Stem("amansa"), "amans" );
	deepEqual( Stem("amante"), "amant" );
	deepEqual( Stem("amantes"), "amant" );
	deepEqual( Stem("amar"), "amar" );
	deepEqual( Stem("amaral"), "amaral" );
	deepEqual( Stem("amarela"), "amarel" );
	deepEqual( Stem("amarelada"), "amarel" );
	deepEqual( Stem("amarelas"), "amarel" );
	deepEqual( Stem("amarelo"), "amarel" );
	deepEqual( Stem("amarga"), "amarg" );
	deepEqual( Stem("amargam"), "amarg" );
	deepEqual( Stem("amargando"), "amarg" );
	deepEqual( Stem("amargas"), "amarg" );
	deepEqual( Stem("amargava"), "amarg" );
	deepEqual( Stem("amargo"), "amarg" );
	deepEqual( Stem("amargor"), "amargor" );
	deepEqual( Stem("amargos"), "amarg" );
	deepEqual( Stem("amargou"), "amarg" );
	deepEqual( Stem("amarguíssimas"), "amarguíssim" );
	deepEqual( Stem("amargurado"), "amargur" );
	deepEqual( Stem("amaro"), "amar" );
	deepEqual( Stem("amarra"), "amarr" );
	deepEqual( Stem("amarrada"), "amarr" );
	deepEqual( Stem("amarrado"), "amarr" );
	deepEqual( Stem("amarrados"), "amarr" );
	deepEqual( Stem("amarras"), "amarr" );
	deepEqual( Stem("amassado"), "amass" );
	deepEqual( Stem("amassando"), "amass" );
	deepEqual( Stem("amassar"), "amass" );
	deepEqual( Stem("amassava"), "amass" );
	deepEqual( Stem("amassos"), "amass" );
	deepEqual( Stem("amassou"), "amass" );
	deepEqual( Stem("amato"), "amat" );
	deepEqual( Stem("amava"), "amav" );
	deepEqual( Stem("amável"), "amável" );
	deepEqual( Stem("amazonas"), "amazon" );
	deepEqual( Stem("amazonense"), "amazonens" );
	deepEqual( Stem("amazonenses"), "amazonens" );
	deepEqual( Stem("amazônia"), "amazôn" );
	deepEqual( Stem("amazônica"), "amazôn" );
	deepEqual( Stem("amazônicas"), "amazôn" );
	deepEqual( Stem("amazônico"), "amazôn" );
	deepEqual( Stem("amazônicos"), "amazôn" );
	deepEqual( Stem("amazonino"), "amazonin" );
	deepEqual( Stem("âmbar"), "âmbar" );
	deepEqual( Stem("ambas"), "ambas" );
	deepEqual( Stem("ambição"), "ambiçã" );
	deepEqual( Stem("ambiciosa"), "ambic" );
	deepEqual( Stem("ambiciosas"), "ambic" );
	deepEqual( Stem("ambicioso"), "ambic" );
	deepEqual( Stem("ambições"), "ambiçõ" );
	deepEqual( Stem("ambiel"), "ambiel" );
	deepEqual( Stem("ambientação"), "ambient" );
	deepEqual( Stem("ambientais"), "ambient" );
	deepEqual( Stem("ambiental"), "ambiental" );
	deepEqual( Stem("ambientalista"), "ambiental" );
	deepEqual( Stem("ambientalistas"), "ambiental" );
	deepEqual( Stem("ambiente"), "ambient" );
	deepEqual( Stem("ambientes"), "ambient" );
	deepEqual( Stem("âmbito"), "âmbit" );
	deepEqual( Stem("ambivalência"), "ambivalent" );
	deepEqual( Stem("ambos"), "ambos" );
	deepEqual( Stem("ambulância"), "ambul" );
	deepEqual( Stem("ambulante"), "ambul" );
	deepEqual( Stem("ambulantes"), "ambul" );
	deepEqual( Stem("ambulatoriais"), "ambulatori" );
	deepEqual( Stem("ambulatorial"), "ambulatorial" );
	deepEqual( Stem("ameaça"), "ameac" );
	deepEqual( Stem("ameaçá"), "ameac" );
	deepEqual( Stem("ameaçada"), "ameac" );
	deepEqual( Stem("ameaçadas"), "ameac" );
	deepEqual( Stem("ameaçado"), "ameac" );
	deepEqual( Stem("ameaçador"), "ameac" );
	deepEqual( Stem("ameaçadora"), "ameac" );
	deepEqual( Stem("ameaçadores"), "ameac" );
	deepEqual( Stem("ameaçados"), "ameac" );
	deepEqual( Stem("ameaçam"), "ameac" );
	deepEqual( Stem("ameaçando"), "ameac" );
	deepEqual( Stem("ameaçar"), "ameac" );
	deepEqual( Stem("ameaçaram"), "ameac" );
	deepEqual( Stem("ameaças"), "ameac" );
	deepEqual( Stem("ameaçava"), "ameac" );
	deepEqual( Stem("ameaçou"), "ameac" );
	deepEqual( Stem("amealha"), "amealh" );
	deepEqual( Stem("amealhou"), "amealh" );
	deepEqual( Stem("amedrontada"), "amedront" );
	deepEqual( Stem("amedrontadoras"), "amedront" );
	deepEqual( Stem("amei"), "ame" );
	deepEqual( Stem("amélia"), "amél" );
	deepEqual( Stem("amélio"), "améli" );
	deepEqual( Stem("amém"), "amém" );
	deepEqual( Stem("amena"), "amen" );
	deepEqual( Stem("amêndoa"), "amêndo" );
	deepEqual( Stem("amendoados"), "amendo" );
	deepEqual( Stem("ameniza"), "ameniz" );
	deepEqual( Stem("amenizar"), "ameniz" );
	deepEqual( Stem("ameno"), "amen" );
	deepEqual( Stem("america"), "amer" );
	deepEqual( Stem("américa"), "amér" );
	deepEqual( Stem("american"), "american" );
	deepEqual( Stem("americana"), "american" );
	deepEqual( Stem("americanas"), "american" );
	deepEqual( Stem("americano"), "american" );
	deepEqual( Stem("americanópolis"), "americanópol" );
	deepEqual( Stem("americanos"), "american" );
	deepEqual( Stem("américas"), "amér" );
	deepEqual( Stem("américo"), "amér" );
	deepEqual( Stem("amesi"), "ames" );
	deepEqual( Stem("amesma"), "amesm" );
	deepEqual( Stem("amico"), "amic" );
	deepEqual( Stem("amiga"), "amig" );
	deepEqual( Stem("amigas"), "amig" );
	deepEqual( Stem("amigáveis"), "amig" );
	deepEqual( Stem("amigável"), "amig" );
	deepEqual( Stem("amigo"), "amig" );
	deepEqual( Stem("amigos"), "amig" );
	deepEqual( Stem("amiguinho"), "amiguinh" );
	deepEqual( Stem("amiguinhos"), "amiguinh" );
	deepEqual( Stem("amilcar"), "amilc" );
	deepEqual( Stem("amílcar"), "amílc" );
	deepEqual( Stem("amin"), "amin" );
	deepEqual( Stem("aminoácidos"), "aminoác" );
	deepEqual( Stem("amistosa"), "amist" );
	deepEqual( Stem("amistoso"), "amist" );
	deepEqual( Stem("amistosos"), "amist" );
	deepEqual( Stem("amix"), "amix" );
	deepEqual( Stem("amizade"), "amizad" );
	deepEqual( Stem("amizades"), "amizad" );
	deepEqual( Stem("amma"), "amma" );
	deepEqual( Stem("amnésica"), "amnés" );
	deepEqual( Stem("amo"), "amo" );
	deepEqual( Stem("amodeo"), "amod" );
	deepEqual( Stem("amolece"), "amolec" );
	deepEqual( Stem("amontoado"), "amonto" );
	deepEqual( Stem("amor"), "amor" );
	deepEqual( Stem("amores"), "amor" );
	deepEqual( Stem("amorim"), "amorim" );
	deepEqual( Stem("amorosa"), "amor" );
	deepEqual( Stem("amorosas"), "amor" );
	deepEqual( Stem("amoroso"), "amor" );
	deepEqual( Stem("amortecida"), "amortec" );
	deepEqual( Stem("amortização"), "amortiz" );
	deepEqual( Stem("amos"), "amos" );
	deepEqual( Stem("amostra"), "amostr" );
	deepEqual( Stem("amostras"), "amostr" );
	deepEqual( Stem("ampara"), "ampar" );
	deepEqual( Stem("amparadas"), "ampar" );
	deepEqual( Stem("amparado"), "ampar" );
	deepEqual( Stem("amparar"), "ampar" );
	deepEqual( Stem("ampla"), "ampla" );
	deepEqual( Stem("amplamente"), "ampl" );
	deepEqual( Stem("amplia"), "ampli" );
	deepEqual( Stem("ampliação"), "ampliaçã" );
	deepEqual( Stem("ampliado"), "ampli" );
	deepEqual( Stem("ampliam"), "ampli" );
	deepEqual( Stem("ampliando"), "ampli" );
	deepEqual( Stem("ampliar"), "ampli" );
	deepEqual( Stem("ampliava"), "ampli" );
	deepEqual( Stem("amplificar"), "amplific" );
	deepEqual( Stem("ampliou"), "ampli" );
	deepEqual( Stem("amplitude"), "amplitud" );
	deepEqual( Stem("amplo"), "amplo" );
	deepEqual( Stem("amplos"), "amplos" );
	deepEqual( Stem("ampola"), "ampol" );
	deepEqual( Stem("amputar"), "amput" );
	deepEqual( Stem("amsterdã"), "amsterdã" );
	deepEqual( Stem("amuletos"), "amulet" );
	deepEqual( Stem("amx"), "amx" );
	deepEqual( Stem("amy"), "amy" );
	deepEqual( Stem("an"), "an" );
	deepEqual( Stem("ana"), "ana" );
	deepEqual( Stem("anã"), "anã" );
	deepEqual( Stem("anabólico"), "anaból" );
	deepEqual( Stem("anabolizante"), "anaboliz" );
	deepEqual( Stem("anafranil"), "anafranil" );
	deepEqual( Stem("anal"), "anal" );
	deepEqual( Stem("analfabeta"), "analfabet" );
	deepEqual( Stem("analfabetismo"), "analfabet" );
	deepEqual( Stem("analfabetos"), "analfabet" );
	deepEqual( Stem("analgésico"), "analgés" );
	deepEqual( Stem("analgésicos"), "analgés" );
	deepEqual( Stem("analisa"), "analis" );
	deepEqual( Stem("analisá"), "analis" );
	deepEqual( Stem("analisada"), "analis" );
	deepEqual( Stem("analisadas"), "analis" );
	deepEqual( Stem("analisado"), "analis" );
	deepEqual( Stem("analisados"), "analis" );
	deepEqual( Stem("analisam"), "analis" );
	deepEqual( Stem("analisando"), "analis" );
	deepEqual( Stem("analisar"), "analis" );
	deepEqual( Stem("analisaram"), "analis" );
	deepEqual( Stem("analise"), "analis" );
	deepEqual( Stem("análise"), "anális" );
	deepEqual( Stem("análises"), "anális" );
	deepEqual( Stem("analisou"), "analis" );
	deepEqual( Stem("analista"), "anal" );
	deepEqual( Stem("analistas"), "anal" );
	deepEqual( Stem("anamburucu"), "anamburucu" );
	deepEqual( Stem("anão"), "anã" );
	deepEqual( Stem("anápolis"), "anápol" );
	deepEqual( Stem("anarquismo"), "anarqu" );
	deepEqual( Stem("anarquista"), "anarqu" );
	deepEqual( Stem("anarquizando"), "anarquiz" );
	deepEqual( Stem("anas"), "anas" );
	deepEqual( Stem("anastácia"), "anastác" );
	deepEqual( Stem("anastassiadis"), "anastassiad" );
	deepEqual( Stem("anatel"), "anatel" );
	deepEqual( Stem("anátemas"), "anátem" );
	deepEqual( Stem("anatólia"), "anatól" );
	deepEqual( Stem("anatomia"), "anatom" );
	deepEqual( Stem("anatomicamente"), "anatom" );
	deepEqual( Stem("anatômicas"), "anatôm" );
	deepEqual( Stem("anatômico"), "anatôm" );
	deepEqual( Stem("anatômicos"), "anatôm" );
	deepEqual( Stem("anbid"), "anbid" );
	deepEqual( Stem("ancestrais"), "ancestr" );
	deepEqual( Stem("ancestral"), "ancestral" );
	deepEqual( Stem("anchieta"), "anchiet" );
	deepEqual( Stem("anchovas"), "anchov" );
	deepEqual( Stem("ancora"), "ancor" );
	deepEqual( Stem("âncora"), "âncor" );
	deepEqual( Stem("ancorada"), "ancor" );
	deepEqual( Stem("ancorado"), "ancor" );
	deepEqual( Stem("ancoradouros"), "ancoradour" );
	deepEqual( Stem("ancoram"), "ancor" );
	deepEqual( Stem("and"), "and" );
	deepEqual( Stem("anda"), "anda" );
	deepEqual( Stem("andado"), "andad" );
	deepEqual( Stem("andam"), "andam" );
	deepEqual( Stem("andamento"), "andament" );
	deepEqual( Stem("andamos"), "andam" );
	deepEqual( Stem("andanças"), "andanc" );
	deepEqual( Stem("andando"), "andand" );
	deepEqual( Stem("andar"), "andar" );
	deepEqual( Stem("andará"), "andar" );
	deepEqual( Stem("andares"), "andar" );
	deepEqual( Stem("andassem"), "andass" );
	deepEqual( Stem("andava"), "andav" );
	deepEqual( Stem("andei"), "ande" );
	deepEqual( Stem("andersen"), "andersen" );
	deepEqual( Stem("anderson"), "anderson" );
	deepEqual( Stem("andes"), "andes" );
	deepEqual( Stem("andina"), "andin" );
	deepEqual( Stem("andinho"), "andinh" );
	deepEqual( Stem("ando"), "ando" );
	deepEqual( Stem("andor"), "andor" );
	deepEqual( Stem("andou"), "andou" );
	deepEqual( Stem("andrade"), "andrad" );
	deepEqual( Stem("andrajos"), "andraj" );
	deepEqual( Stem("andre"), "andre" );
	deepEqual( Stem("andré"), "andré" );
	deepEqual( Stem("andrea"), "andre" );
	deepEqual( Stem("andréa"), "andré" );
	deepEqual( Stem("andreazza"), "andreazz" );
	deepEqual( Stem("andrei"), "andre" );
	deepEqual( Stem("andreoli"), "andreol" );
	deepEqual( Stem("andreolli"), "andreoll" );
	deepEqual( Stem("andy"), "andy" );
	deepEqual( Stem("anéas"), "ané" );
	deepEqual( Stem("anedota"), "anedot" );
	deepEqual( Stem("anedotário"), "anedotári" );
	deepEqual( Stem("anéis"), "ané" );
	deepEqual( Stem("anel"), "anel" );
	deepEqual( Stem("anelados"), "anel" );
	deepEqual( Stem("anemia"), "anem" );
	deepEqual( Stem("anêmico"), "anêm" );
	deepEqual( Stem("anestesia"), "anestes" );
	deepEqual( Stem("anestésico"), "anestés" );
	deepEqual( Stem("aneurisma"), "aneurism" );
	deepEqual( Stem("aneurismas"), "aneurism" );
	deepEqual( Stem("anexadas"), "anex" );
	deepEqual( Stem("anexados"), "anex" );
	deepEqual( Stem("anexo"), "anex" );
	deepEqual( Stem("anfetamina"), "anfetamin" );
	deepEqual( Stem("anfetaminas"), "anfetamin" );
	deepEqual( Stem("anfetamínica"), "anfetamín" );
	deepEqual( Stem("anfetamínico"), "anfetamín" );
	deepEqual( Stem("anfetamínicos"), "anfetamín" );
	deepEqual( Stem("angariar"), "angari" );
	deepEqual( Stem("angariou"), "angari" );
	deepEqual( Stem("angel"), "angel" );
	deepEqual( Stem("angela"), "angel" );
	deepEqual( Stem("ângela"), "ângel" );
	deepEqual( Stem("angeles"), "angel" );
	deepEqual( Stem("angélica"), "angél" );
	deepEqual( Stem("angelical"), "angelical" );
	deepEqual( Stem("angelina"), "angelin" );
	deepEqual( Stem("angelo"), "angel" );
	deepEqual( Stem("ângelo"), "ângel" );
	deepEqual( Stem("angelotto"), "angelott" );
	deepEqual( Stem("angiotensina"), "angiotensin" );
	deepEqual( Stem("anglo"), "anglo" );
	deepEqual( Stem("angola"), "angol" );
	deepEqual( Stem("angolanas"), "angolan" );
	deepEqual( Stem("angolanos"), "angolan" );
	deepEqual( Stem("angra"), "angra" );
	deepEqual( Stem("ângulo"), "ângul" );
	deepEqual( Stem("ângulos"), "ângul" );
	deepEqual( Stem("angústia"), "angúst" );
	deepEqual( Stem("angustiada"), "angusti" );
	deepEqual( Stem("angustiadas"), "angusti" );
	deepEqual( Stem("angustiados"), "angusti" );
	deepEqual( Stem("angustiantes"), "angusti" );
	deepEqual( Stem("angústias"), "angúst" );
	deepEqual( Stem("anhanduí"), "anhandu" );
	deepEqual( Stem("anhangabaú"), "anhangabaú" );
	deepEqual( Stem("anhanguera"), "anhangu" );
	deepEqual( Stem("anhembi"), "anhemb" );
	deepEqual( Stem("anheuser"), "anheus" );
	deepEqual( Stem("anibal"), "anibal" );
	deepEqual( Stem("anima"), "anim" );
	deepEqual( Stem("animação"), "anim" );
	deepEqual( Stem("animações"), "anim" );
	deepEqual( Stem("animada"), "anim" );
	deepEqual( Stem("animadamente"), "anim" );
	deepEqual( Stem("animado"), "anim" );
	deepEqual( Stem("animador"), "anim" );
	deepEqual( Stem("animadores"), "anim" );
	deepEqual( Stem("animados"), "anim" );
	deepEqual( Stem("animais"), "anim" );
	deepEqual( Stem("animal"), "animal" );
	deepEqual( Stem("animam"), "anim" );
	deepEqual( Stem("animando"), "anim" );
	deepEqual( Stem("animar"), "anim" );
	deepEqual( Stem("ânimo"), "ânim" );
	deepEqual( Stem("ânimos"), "ânim" );
	deepEqual( Stem("animosidade"), "animos" );
	deepEqual( Stem("animou"), "anim" );
	deepEqual( Stem("aninha"), "aninh" );
	deepEqual( Stem("aniquile"), "aniquil" );
	deepEqual( Stem("anísio"), "anísi" );
	deepEqual( Stem("anistia"), "anist" );
	deepEqual( Stem("aniversário"), "aniversári" );
	deepEqual( Stem("aniversários"), "aniversári" );
	deepEqual( Stem("aniz"), "aniz" );
	deepEqual( Stem("anja"), "anja" );
	deepEqual( Stem("anjinho"), "anjinh" );
	deepEqual( Stem("anjo"), "anjo" );
	deepEqual( Stem("anlong"), "anlong" );
	deepEqual( Stem("anna"), "anna" );
	deepEqual( Stem("annie"), "anni" );
	deepEqual( Stem("anno"), "anno" );
	deepEqual( Stem("ano"), "ano" );
	deepEqual( Stem("anões"), "anõ" );
	deepEqual( Stem("anomalias"), "anomal" );
	deepEqual( Stem("anonimamente"), "anonim" );
	deepEqual( Stem("anônimas"), "anônim" );
	deepEqual( Stem("anonimato"), "anonimat" );
	deepEqual( Stem("anônimo"), "anônim" );
	deepEqual( Stem("anônimos"), "anôn" );
	deepEqual( Stem("anorexia"), "anorex" );
	deepEqual( Stem("anormal"), "anormal" );
	deepEqual( Stem("anos"), "anos" );
	deepEqual( Stem("anotá"), "anot" );
	deepEqual( Stem("anotações"), "anot" );
	deepEqual( Stem("anotados"), "anot" );
	deepEqual( Stem("anotam"), "anot" );
	deepEqual( Stem("anotar"), "anot" );
	deepEqual( Stem("anotava"), "anot" );
	deepEqual( Stem("anote"), "anot" );
	deepEqual( Stem("anotou"), "anot" );
	deepEqual( Stem("ansaldi"), "ansald" );
	deepEqual( Stem("anseia"), "anse" );
	deepEqual( Stem("anseiam"), "anse" );
	deepEqual( Stem("anseio"), "ansei" );
	deepEqual( Stem("anseios"), "ansei" );
	deepEqual( Stem("ansiedade"), "ansiedad" );
	deepEqual( Stem("ansiedades"), "ansiedad" );
	deepEqual( Stem("ansiolíticos"), "ansiolít" );
	deepEqual( Stem("ansiosa"), "ansios" );
	deepEqual( Stem("ansiosamente"), "ansios" );
	deepEqual( Stem("ansiosas"), "ansios" );
	deepEqual( Stem("ansioso"), "ansios" );
	deepEqual( Stem("ansiosos"), "ansios" );
	deepEqual( Stem("anta"), "anta" );
	deepEqual( Stem("antagônicas"), "antagôn" );
	deepEqual( Stem("antarctica"), "antarct" );
	deepEqual( Stem("antártica"), "antárt" );
	deepEqual( Stem("antártico"), "antárt" );
	deepEqual( Stem("antártida"), "antárt" );
	deepEqual( Stem("antebraço"), "antebrac" );
	deepEqual( Stem("antecede"), "anteced" );
	deepEqual( Stem("antecedem"), "anteced" );
	deepEqual( Stem("antecedência"), "antecedent" );
	deepEqual( Stem("antecedentes"), "antecedent" );
	deepEqual( Stem("antecederam"), "anteced" );
	deepEqual( Stem("antecedeu"), "anteced" );
	deepEqual( Stem("antecessor"), "antecessor" );
	deepEqual( Stem("antecessores"), "antecessor" );
	deepEqual( Stem("antecipa"), "antecip" );
	deepEqual( Stem("antecipação"), "antecip" );
	deepEqual( Stem("antecipações"), "antecip" );
	deepEqual( Stem("antecipada"), "antecip" );
	deepEqual( Stem("antecipadamente"), "antecip" );
	deepEqual( Stem("antecipadas"), "antecip" );
	deepEqual( Stem("antecipado"), "antecip" );
	deepEqual( Stem("antecipador"), "antecip" );
	deepEqual( Stem("antecipando"), "antecip" );
	deepEqual( Stem("antecipar"), "antecip" );
	deepEqual( Stem("antecipou"), "antecip" );
	deepEqual( Stem("antena"), "anten" );
	deepEqual( Stem("antenadas"), "anten" );
	deepEqual( Stem("antenado"), "anten" );
	deepEqual( Stem("antenas"), "anten" );
	deepEqual( Stem("antenor"), "antenor" );
	deepEqual( Stem("anteontem"), "anteont" );
	deepEqual( Stem("antepassados"), "antepass" );
	deepEqual( Stem("antepunham"), "antepunh" );
	deepEqual( Stem("anterior"), "anterior" );
	deepEqual( Stem("anteriores"), "anterior" );
	deepEqual( Stem("anteriormente"), "anterior" );
	deepEqual( Stem("antes"), "antes" );
	deepEqual( Stem("antevendo"), "antev" );
	deepEqual( Stem("anthony"), "anthony" );
	deepEqual( Stem("anti"), "anti" );
	deepEqual( Stem("antiarmas"), "antiarm" );
	deepEqual( Stem("antibélicas"), "antibél" );
	deepEqual( Stem("antibióticos"), "antibiót" );
	deepEqual( Stem("anticomunista"), "anticomun" );
	deepEqual( Stem("anticoncepção"), "anticoncepçã" );
	deepEqual( Stem("anticoncepcionais"), "anticoncepcion" );
	deepEqual( Stem("anticoncepcional"), "anticoncepcional" );
	deepEqual( Stem("anticonvulsivos"), "anticonvuls" );
	deepEqual( Stem("antidepressiva"), "antidepress" );
	deepEqual( Stem("antidepressivo"), "antidepress" );
	deepEqual( Stem("antidepressivos"), "antidepress" );
	deepEqual( Stem("antídotos"), "antídot" );
	deepEqual( Stem("antidrogas"), "antidrog" );
	deepEqual( Stem("antiespasmódico"), "antiespasmód" );
	deepEqual( Stem("antiético"), "antiét" );
	deepEqual( Stem("antiga"), "antig" );
	deepEqual( Stem("antigamente"), "antig" );
	deepEqual( Stem("antigas"), "antig" );
	deepEqual( Stem("antigen"), "antigen" );
	deepEqual( Stem("antígeno"), "antígen" );
	deepEqual( Stem("antigo"), "antig" );
	deepEqual( Stem("antigos"), "antig" );
	deepEqual( Stem("antigovernistas"), "antigovern" );
	deepEqual( Stem("antiguidade"), "antigu" );
	deepEqual( Stem("antiguidades"), "antigu" );
	deepEqual( Stem("antiinflamatório"), "antiinflamatóri" );
	deepEqual( Stem("antilusitanos"), "antilusitan" );
	deepEqual( Stem("antimonotonia"), "antimonoton" );
	deepEqual( Stem("antinarcotráfico"), "antinarcotráf" );
	deepEqual( Stem("antipatia"), "antipat" );
	deepEqual( Stem("antipatias"), "antipat" );
	deepEqual( Stem("antipático"), "antipát" );
	deepEqual( Stem("antipessoais"), "antipesso" );
	deepEqual( Stem("antiquado"), "antiqu" );
	deepEqual( Stem("antiquados"), "antiqu" );
	deepEqual( Stem("antiquários"), "antiquári" );
	deepEqual( Stem("antiquarius"), "antiquarius" );
	deepEqual( Stem("antissépticos"), "antissépt" );
	deepEqual( Stem("antitabagista"), "antitabag" );
	deepEqual( Stem("antitabagistas"), "antitabag" );
	deepEqual( Stem("antitérmico"), "antitérm" );
	deepEqual( Stem("antológica"), "antológ" );
	deepEqual( Stem("antonia"), "anton" );
	deepEqual( Stem("antônia"), "antôn" );
	deepEqual( Stem("antoninho"), "antoninh" );
	deepEqual( Stem("antonio"), "antoni" );
	deepEqual( Stem("antônio"), "antôni" );
	deepEqual( Stem("antropóloga"), "antropólog" );
	deepEqual( Stem("antropologia"), "antropolog" );
	deepEqual( Stem("antropólogo"), "antropólog" );
	deepEqual( Stem("antropólogos"), "antropólog" );
	deepEqual( Stem("antunes"), "antun" );
	deepEqual( Stem("anuais"), "anu" );
	deepEqual( Stem("anual"), "anual" );
	deepEqual( Stem("anualmente"), "anual" );
	deepEqual( Stem("anuário"), "anuári" );
	deepEqual( Stem("anuidade"), "anuidad" );
	deepEqual( Stem("anulação"), "anul" );
	deepEqual( Stem("anulado"), "anul" );
	deepEqual( Stem("anulam"), "anul" );
	deepEqual( Stem("anulando"), "anul" );
	deepEqual( Stem("anular"), "anul" );
	deepEqual( Stem("anularam"), "anul" );
	deepEqual( Stem("anulei"), "anul" );
	deepEqual( Stem("anulou"), "anul" );
	deepEqual( Stem("anuncia"), "anunc" );
	deepEqual( Stem("anunciada"), "anunc" );
	deepEqual( Stem("anunciadas"), "anunc" );
	deepEqual( Stem("anunciado"), "anunc" );
	deepEqual( Stem("anunciam"), "anunc" );
	deepEqual( Stem("anunciando"), "anunc" );
	deepEqual( Stem("anunciantes"), "anunc" );
	deepEqual( Stem("anunciar"), "anunc" );
	deepEqual( Stem("anunciaram"), "anunc" );
	deepEqual( Stem("anunciava"), "anunc" );
	deepEqual( Stem("anúncio"), "anúnci" );
	deepEqual( Stem("anúncios"), "anúnci" );
	deepEqual( Stem("anunciou"), "anunc" );
	deepEqual( Stem("anysio"), "anysi" );
	deepEqual( Stem("ao"), "ao" );
	deepEqual( Stem("ão"), "ão" );
	deepEqual( Stem("aonde"), "aond" );
	deepEqual( Stem("aorta"), "aort" );
	deepEqual( Stem("aórtico"), "aórtic" );
	deepEqual( Stem("aos"), "aos" );
	deepEqual( Stem("ap"), "ap" );
	deepEqual( Stem("apadrinhamento"), "apadrinh" );
	deepEqual( Stem("apadrinhou"), "apadrinh" );
	deepEqual( Stem("apagado"), "apag" );
	deepEqual( Stem("apagam"), "apag" );
	deepEqual( Stem("apagando"), "apag" );
	deepEqual( Stem("apagar"), "apag" );
	deepEqual( Stem("apagavam"), "apag" );
	deepEqual( Stem("apagou"), "apag" );
	deepEqual( Stem("apaixona"), "apaixon" );
	deepEqual( Stem("apaixonada"), "apaixon" );
	deepEqual( Stem("apaixonadas"), "apaixon" );
	deepEqual( Stem("apaixonadíssima"), "apaixonadíssim" );
	deepEqual( Stem("apaixonado"), "apaixon" );
	deepEqual( Stem("apaixonados"), "apaixon" );
	deepEqual( Stem("apaixonam"), "apaixon" );
	deepEqual( Stem("apaixonar"), "apaixon" );
	deepEqual( Stem("apaixonara"), "apaixon" );
	deepEqual( Stem("apaixone"), "apaixon" );
	deepEqual( Stem("apaixonei"), "apaixon" );
	deepEqual( Stem("apaixonou"), "apaixon" );
	deepEqual( Stem("apalpação"), "apalp" );
	deepEqual( Stem("apalpado"), "apalp" );
	deepEqual( Stem("apanha"), "apanh" );
	deepEqual( Stem("apanhado"), "apanh" );
	deepEqual( Stem("apanham"), "apanh" );
	deepEqual( Stem("apanhando"), "apanh" );
	deepEqual( Stem("apanhar"), "apanh" );
	deepEqual( Stem("apanhei"), "apanh" );
	deepEqual( Stem("apanhou"), "apanh" );
	deepEqual( Stem("aparacer"), "aparac" );
	deepEqual( Stem("aparar"), "apar" );
	deepEqual( Stem("aparato"), "aparat" );
	deepEqual( Stem("apareçam"), "aparec" );
	deepEqual( Stem("aparece"), "aparec" );
	deepEqual( Stem("aparecem"), "aparec" );
	deepEqual( Stem("aparecendo"), "aparec" );
	deepEqual( Stem("aparecer"), "aparec" );
	deepEqual( Stem("apareceram"), "aparec" );
	deepEqual( Stem("aparecerem"), "aparec" );
	deepEqual( Stem("apareceria"), "aparec" );
	deepEqual( Stem("aparecesse"), "aparec" );
	deepEqual( Stem("aparecessem"), "aparec" );
	deepEqual( Stem("apareceu"), "aparec" );
	deepEqual( Stem("apareci"), "aparec" );
	deepEqual( Stem("aparecia"), "aparec" );
	deepEqual( Stem("apareciam"), "aparec" );
	deepEqual( Stem("aparecida"), "aparec" );
	deepEqual( Stem("aparecido"), "aparec" );
	deepEqual( Stem("aparecimento"), "aparec" );
	deepEqual( Stem("aparelhada"), "aparelh" );
	deepEqual( Stem("aparelhagem"), "aparelhag" );
	deepEqual( Stem("aparelhinho"), "aparelhinh" );
	deepEqual( Stem("aparelho"), "aparelh" );
	deepEqual( Stem("aparelhos"), "aparelh" );
	deepEqual( Stem("aparência"), "aparent" );
	deepEqual( Stem("aparências"), "aparent" );
	deepEqual( Stem("aparenta"), "aparent" );
	deepEqual( Stem("aparentam"), "aparent" );
	deepEqual( Stem("aparente"), "aparent" );
	deepEqual( Stem("aparentemente"), "aparent" );
	deepEqual( Stem("aparentes"), "aparent" );
	deepEqual( Stem("aparição"), "apariçã" );
	deepEqual( Stem("aparições"), "apariçõ" );
	deepEqual( Stem("apartamento"), "apart" );
	deepEqual( Stem("apartamentos"), "apart" );
	deepEqual( Stem("apartava"), "apart" );
	deepEqual( Stem("apatia"), "apat" );
	deepEqual( Stem("apáticas"), "apát" );
	deepEqual( Stem("apáticos"), "apát" );
	deepEqual( Stem("apavora"), "apavor" );
	deepEqual( Stem("apavorada"), "apavor" );
	deepEqual( Stem("apavorou"), "apavor" );
	deepEqual( Stem("apaziguador"), "apazigu" );
	deepEqual( Stem("apeá"), "ape" );
	deepEqual( Stem("apec"), "apec" );
	deepEqual( Stem("apega"), "apeg" );
	deepEqual( Stem("apegada"), "apeg" );
	deepEqual( Stem("apegados"), "apeg" );
	deepEqual( Stem("apegar"), "apeg" );
	deepEqual( Stem("apego"), "apeg" );
	deepEqual( Stem("apela"), "apel" );
	deepEqual( Stem("apelação"), "apel" );
	deepEqual( Stem("apelar"), "apel" );
	deepEqual( Stem("apelei"), "apel" );
	deepEqual( Stem("apelem"), "apel" );
	deepEqual( Stem("apelidados"), "apelid" );
	deepEqual( Stem("apelidaram"), "apelid" );
	deepEqual( Stem("apelido"), "apel" );
	deepEqual( Stem("apelo"), "apel" );
	deepEqual( Stem("apelos"), "apel" );
	deepEqual( Stem("apelou"), "apel" );
	deepEqual( Stem("apenas"), "apen" );
	deepEqual( Stem("apêndice"), "apêndic" );
	deepEqual( Stem("aperfeiçoamento"), "aperfeiço" );
	deepEqual( Stem("aperfeiçoando"), "aperfeiço" );
	deepEqual( Stem("aperfeiçoar"), "aperfeiço" );
	deepEqual( Stem("aperfeiçoei"), "aperfeiço" );
	deepEqual( Stem("aperitivos"), "aperit" );
	deepEqual( Stem("aperreados"), "aperr" );
	deepEqual( Stem("aperta"), "apert" );
	deepEqual( Stem("apertada"), "apert" );
	deepEqual( Stem("apertado"), "apert" );
	deepEqual( Stem("apertados"), "apert" );
	deepEqual( Stem("apertam"), "apert" );
	deepEqual( Stem("apertar"), "apert" );
	deepEqual( Stem("apertou"), "apert" );
	deepEqual( Stem("apesar"), "apes" );
	deepEqual( Stem("apetite"), "apetit" );
	deepEqual( Stem("apetitoso"), "apetit" );
	deepEqual( Stem("apetrechos"), "apetrech" );
	deepEqual( Stem("ápice"), "ápic" );
	deepEqual( Stem("apinhado"), "apinh" );
	deepEqual( Stem("apitava"), "apit" );
	deepEqual( Stem("apito"), "apit" );
	deepEqual( Stem("aplaca"), "aplac" );
	deepEqual( Stem("aplacando"), "aplac" );
	deepEqual( Stem("aplacar"), "aplac" );
	deepEqual( Stem("aplacou"), "aplac" );
	deepEqual( Stem("aplaudida"), "aplaud" );
	deepEqual( Stem("aplausos"), "aplaus" );
	deepEqual( Stem("aplica"), "aplic" );
	deepEqual( Stem("aplicação"), "aplic" );
	deepEqual( Stem("aplicações"), "aplic" );
	deepEqual( Stem("aplicada"), "aplic" );
	deepEqual( Stem("aplicadas"), "aplic" );
	deepEqual( Stem("aplicado"), "aplic" );
	deepEqual( Stem("aplicadores"), "aplic" );
	deepEqual( Stem("aplicam"), "aplic" );
	deepEqual( Stem("aplicando"), "aplic" );
	deepEqual( Stem("aplicar"), "aplic" );
	deepEqual( Stem("aplicaram"), "aplic" );
	deepEqual( Stem("aplicativos"), "aplic" );
	deepEqual( Stem("aplicava"), "aplic" );
	deepEqual( Stem("aplicável"), "aplic" );
	deepEqual( Stem("aplicou"), "aplic" );
	deepEqual( Stem("aplique"), "apliqu" );
	deepEqual( Stem("apliquem"), "apliqu" );
	deepEqual( Stem("apliques"), "apliqu" );
	deepEqual( Stem("apnéia"), "apné" );
	deepEqual( Stem("apocalipse"), "apocalips" );
	deepEqual( Stem("apoderaram"), "apoder" );
	deepEqual( Stem("apoenan"), "apoenan" );
	deepEqual( Stem("apogeu"), "apog" );
	deepEqual( Stem("apóia"), "apó" );
	deepEqual( Stem("apoiá"), "apoi" );
	deepEqual( Stem("apoiadas"), "apoi" );
	deepEqual( Stem("apoiado"), "apoi" );
	deepEqual( Stem("apoiados"), "apoi" );
	deepEqual( Stem("apóiam"), "apó" );
	deepEqual( Stem("apoiar"), "apoi" );
	deepEqual( Stem("apoiarem"), "apoi" );
	deepEqual( Stem("apoiaria"), "apoi" );
	deepEqual( Stem("apoio"), "apoi" );
	deepEqual( Stem("apoiou"), "apoi" );
	deepEqual( Stem("apólice"), "apólic" );
	deepEqual( Stem("apolítico"), "apolít" );
	deepEqual( Stem("apollinari"), "apollinar" );
	deepEqual( Stem("apologia"), "apolog" );
	deepEqual( Stem("apologista"), "apolog" );
	deepEqual( Stem("aponta"), "apont" );
	deepEqual( Stem("apontá"), "apont" );
	deepEqual( Stem("apontada"), "apont" );
	deepEqual( Stem("apontadas"), "apont" );
	deepEqual( Stem("apontado"), "apont" );
	deepEqual( Stem("apontadores"), "apont" );
	deepEqual( Stem("apontados"), "apont" );
	deepEqual( Stem("apontam"), "apont" );
	deepEqual( Stem("apontando"), "apont" );
	deepEqual( Stem("apontar"), "apont" );
	deepEqual( Stem("apontava"), "apont" );
	deepEqual( Stem("apontem"), "apont" );
	deepEqual( Stem("apontou"), "apont" );
	deepEqual( Stem("apoplético"), "apoplét" );
	deepEqual( Stem("aportar"), "aport" );
	deepEqual( Stem("aportou"), "aport" );
	deepEqual( Stem("após"), "após" );
	deepEqual( Stem("aposentada"), "aposent" );
	deepEqual( Stem("aposentado"), "aposent" );
	deepEqual( Stem("aposentadoria"), "aposentador" );
	deepEqual( Stem("aposentados"), "aposent" );
	deepEqual( Stem("aposentam"), "aposent" );
	deepEqual( Stem("aposentar"), "aposent" );
	deepEqual( Stem("aposentos"), "aposent" );
	deepEqual( Stem("aposentou"), "aposent" );
	deepEqual( Stem("apossado"), "aposs" );
	deepEqual( Stem("aposta"), "apost" );
	deepEqual( Stem("apostador"), "apost" );
	deepEqual( Stem("apostadores"), "apost" );
	deepEqual( Stem("apostam"), "apost" );
	deepEqual( Stem("apostamos"), "apost" );
	deepEqual( Stem("apostando"), "apost" );
	deepEqual( Stem("apostar"), "apost" );
	deepEqual( Stem("apostaram"), "apost" );
	deepEqual( Stem("apostas"), "apost" );
	deepEqual( Stem("aposte"), "apost" );
	deepEqual( Stem("apostilas"), "apostil" );
	deepEqual( Stem("aposto"), "apost" );
	deepEqual( Stem("apóstolo"), "apóstol" );
	deepEqual( Stem("apóstolos"), "apóstol" );
	deepEqual( Stem("apostou"), "apost" );
	deepEqual( Stem("apoteose"), "apoteos" );
	deepEqual( Stem("apple"), "apple" );
	deepEqual( Stem("aprazível"), "apraz" );
	deepEqual( Stem("aprecia"), "aprec" );
	deepEqual( Stem("apreciação"), "aprec" );
	deepEqual( Stem("apreciações"), "aprec" );
	deepEqual( Stem("apreciada"), "aprec" );
	deepEqual( Stem("apreciado"), "aprec" );
	deepEqual( Stem("apreciando"), "aprec" );
	deepEqual( Stem("apreciar"), "aprec" );
	deepEqual( Stem("apreciaram"), "aprec" );
	deepEqual( Stem("apreciou"), "aprec" );
	deepEqual( Stem("apreço"), "aprec" );
	deepEqual( Stem("apreendem"), "apreend" );
	deepEqual( Stem("apreender"), "apreend" );
	deepEqual( Stem("apreenderam"), "apreend" );
	deepEqual( Stem("apreendida"), "apreend" );
	deepEqual( Stem("apreensão"), "apreensã" );
	deepEqual( Stem("apreensivo"), "apreens" );
	deepEqual( Stem("apreensivos"), "apreens" );
	deepEqual( Stem("apreensões"), "apreensõ" );
	deepEqual( Stem("apregoa"), "aprego" );
	deepEqual( Stem("apregoam"), "aprego" );
	deepEqual( Stem("aprenda"), "aprend" );
	deepEqual( Stem("aprendam"), "aprend" );
	deepEqual( Stem("aprende"), "aprend" );
	deepEqual( Stem("aprendem"), "aprend" );
	deepEqual( Stem("aprendemos"), "aprend" );
	deepEqual( Stem("aprendendo"), "aprend" );
	deepEqual( Stem("aprender"), "aprend" );
	deepEqual( Stem("aprenderam"), "aprend" );
	deepEqual( Stem("aprenderia"), "aprend" );
	deepEqual( Stem("aprendesse"), "aprend" );
	deepEqual( Stem("aprendeu"), "aprend" );
	deepEqual( Stem("aprendi"), "aprend" );
	deepEqual( Stem("aprendiam"), "aprend" );
	deepEqual( Stem("aprendíamos"), "aprend" );
	deepEqual( Stem("aprendida"), "aprend" );
	deepEqual( Stem("aprendidas"), "aprend" );
	deepEqual( Stem("aprendido"), "aprend" );
	deepEqual( Stem("aprendiz"), "aprendiz" );
	deepEqual( Stem("aprendizado"), "aprendiz" );
	deepEqual( Stem("aprendizagem"), "aprendizag" );
	deepEqual( Stem("aprendizes"), "aprendiz" );
	deepEqual( Stem("apresenta"), "apresent" );
	deepEqual( Stem("apresentação"), "apresent" );
	deepEqual( Stem("apresentações"), "apresent" );
	deepEqual( Stem("apresentada"), "apresent" );
	deepEqual( Stem("apresentadas"), "apresent" );
	deepEqual( Stem("apresentado"), "apresent" );
	deepEqual( Stem("apresentador"), "apresent" );
	deepEqual( Stem("apresentadora"), "apresent" );
	deepEqual( Stem("apresentadoras"), "apresent" );
	deepEqual( Stem("apresentados"), "apresent" );
	deepEqual( Stem("apresentam"), "apresent" );
	deepEqual( Stem("apresentamos"), "apresent" );
	deepEqual( Stem("apresentando"), "apresent" );
	deepEqual( Stem("apresentar"), "apresent" );
	deepEqual( Stem("apresentará"), "apresent" );
	deepEqual( Stem("apresentaram"), "apresent" );
	deepEqual( Stem("apresentarão"), "apresent" );
	deepEqual( Stem("apresentaria"), "apresent" );
	deepEqual( Stem("apresentasse"), "apresent" );
	deepEqual( Stem("apresentassem"), "apresent" );
	deepEqual( Stem("apresentava"), "apresent" );
	deepEqual( Stem("apresentavam"), "apresent" );
	deepEqual( Stem("apresentável"), "apresent" );
	deepEqual( Stem("apresente"), "apresent" );
	deepEqual( Stem("apresento"), "apresent" );
	deepEqual( Stem("apresentou"), "apresent" );
	deepEqual( Stem("apressada"), "apress" );
	deepEqual( Stem("apressadas"), "apress" );
	deepEqual( Stem("apressadinha"), "apressadinh" );
	deepEqual( Stem("apressadinhos"), "apressadinh" );
	deepEqual( Stem("apressado"), "apress" );
	deepEqual( Stem("apressados"), "apress" );
	deepEqual( Stem("apressam"), "apress" );
	deepEqual( Stem("apressamento"), "apress" );
	deepEqual( Stem("apressar"), "apress" );
	deepEqual( Stem("apresse"), "apress" );
	deepEqual( Stem("apressou"), "apress" );
	deepEqual( Stem("aprimoradas"), "aprimor" );
	deepEqual( Stem("aprimoramento"), "aprimor" );
	deepEqual( Stem("aprimorar"), "aprimor" );
	deepEqual( Stem("aprimorou"), "aprimor" );
	deepEqual( Stem("aprisionados"), "aprision" );
	deepEqual( Stem("aprisionassem"), "aprision" );
	deepEqual( Stem("aprofundar"), "aprofund" );
	deepEqual( Stem("aprofundou"), "aprofund" );
	deepEqual( Stem("aprontasse"), "apront" );
	deepEqual( Stem("aprontou"), "apront" );
	deepEqual( Stem("apropriação"), "apropri" );
	deepEqual( Stem("apropriada"), "apropri" );
	deepEqual( Stem("apropriadamente"), "apropri" );
	deepEqual( Stem("apropriadas"), "apropri" );
	deepEqual( Stem("apropriado"), "apropri" );
	deepEqual( Stem("aprova"), "aprov" );
	deepEqual( Stem("aprová"), "aprov" );
	deepEqual( Stem("aprovação"), "aprov" );
	deepEqual( Stem("aprovada"), "aprov" );
	deepEqual( Stem("aprovadas"), "aprov" );
	deepEqual( Stem("aprovado"), "aprov" );
	deepEqual( Stem("aprovados"), "aprov" );
	deepEqual( Stem("aprovando"), "aprov" );
	deepEqual( Stem("aprovar"), "aprov" );
	deepEqual( Stem("aprovaram"), "aprov" );
	deepEqual( Stem("aprovassem"), "aprov" );
	deepEqual( Stem("aprovavam"), "aprov" );
	deepEqual( Stem("aproveita"), "aproveit" );
	deepEqual( Stem("aproveitado"), "aproveit" );
	deepEqual( Stem("aproveitam"), "aproveit" );
	deepEqual( Stem("aproveitamento"), "aproveit" );
	deepEqual( Stem("aproveitamos"), "aproveit" );
	deepEqual( Stem("aproveitando"), "aproveit" );
	deepEqual( Stem("aproveitar"), "aproveit" );
	deepEqual( Stem("aproveitaria"), "aproveit" );
	deepEqual( Stem("aproveito"), "aproveit" );
	deepEqual( Stem("aproveitou"), "aproveit" );
	deepEqual( Stem("aprovou"), "aprov" );
	deepEqual( Stem("aproxima"), "aproxim" );
	deepEqual( Stem("aproximação"), "aproxim" );
	deepEqual( Stem("aproximações"), "aproxim" );
	deepEqual( Stem("aproximadamente"), "aproxim" );
	deepEqual( Stem("aproximado"), "aproxim" );
	deepEqual( Stem("aproximam"), "aproxim" );
	deepEqual( Stem("aproximando"), "aproxim" );
	deepEqual( Stem("aproximar"), "aproxim" );
	deepEqual( Stem("aproximava"), "aproxim" );
	deepEqual( Stem("aproximei"), "aproxim" );
	deepEqual( Stem("aproximou"), "aproxim" );
	deepEqual( Stem("apta"), "apta" );
	deepEqual( Stem("aptas"), "aptas" );
	deepEqual( Stem("aptidão"), "aptidã" );
	deepEqual( Stem("apto"), "apto" );
	deepEqual( Stem("aptos"), "aptos" );
	deepEqual( Stem("apura"), "apur" );
	deepEqual( Stem("apuração"), "apur" );
	deepEqual( Stem("apurações"), "apur" );
	deepEqual( Stem("apurada"), "apur" );
	deepEqual( Stem("apuradas"), "apur" );
	deepEqual( Stem("apurado"), "apur" );
	deepEqual( Stem("apurar"), "apur" );
	deepEqual( Stem("apuro"), "apur" );
	deepEqual( Stem("apuros"), "apur" );
	deepEqual( Stem("apurou"), "apur" );
	deepEqual( Stem("aqualung"), "aqualung" );
	deepEqual( Stem("aquarteladas"), "aquartel" );
	deepEqual( Stem("aquartelamento"), "aquartel" );
	deepEqual( Stem("aquartelar"), "aquartel" );
	deepEqual( Stem("aquartelou"), "aquartel" );
	deepEqual( Stem("aquática"), "aquát" );
	deepEqual( Stem("aquático"), "aquát" );
	deepEqual( Stem("aquecesse"), "aquec" );
	deepEqual( Stem("aquecidos"), "aquec" );
	deepEqual( Stem("aquecimento"), "aquec" );
	deepEqual( Stem("aquela"), "aquel" );
	deepEqual( Stem("àquela"), "àquel" );
	deepEqual( Stem("aquelas"), "aquel" );
	deepEqual( Stem("àquelas"), "àquel" );
	deepEqual( Stem("aquele"), "aquel" );
	deepEqual( Stem("àquele"), "àquel" );
	deepEqual( Stem("aqueles"), "aquel" );
	deepEqual( Stem("aquém"), "aquém" );
	deepEqual( Stem("aqui"), "aqu" );
	deepEqual( Stem("aquidauana"), "aquidauan" );
	deepEqual( Stem("aquilo"), "aquil" );
	deepEqual( Stem("aquino"), "aquin" );
	deepEqual( Stem("aquisição"), "aquisiçã" );
	deepEqual( Stem("aquisições"), "aquisiçõ" );
	deepEqual( Stem("aquisitivo"), "aquisit" );
	deepEqual( Stem("ar"), "ar" );
	deepEqual( Stem("árabe"), "árab" );
	deepEqual( Stem("árabes"), "árab" );
	deepEqual( Stem("arabi"), "arab" );
	deepEqual( Stem("arabica"), "arab" );
	deepEqual( Stem("arábica"), "aráb" );
	deepEqual( Stem("aracaju"), "aracaju" );
	deepEqual( Stem("aracruz"), "aracruz" );
	deepEqual( Stem("araçuaí"), "araçua" );
	deepEqual( Stem("aracy"), "aracy" );
	deepEqual( Stem("aragão"), "aragã" );
	deepEqual( Stem("araguaia"), "aragua" );
	deepEqual( Stem("aramaçã"), "aramaçã" );
	deepEqual( Stem("arandu"), "arandu" );
	deepEqual( Stem("aranha"), "aranh" );
	deepEqual( Stem("aranhas"), "aranh" );
	deepEqual( Stem("aranovich"), "aranovich" );
	deepEqual( Stem("arantes"), "arant" );
	deepEqual( Stem("arap"), "arap" );
	deepEqual( Stem("araponga"), "arapong" );
	deepEqual( Stem("arapongas"), "arapong" );
	deepEqual( Stem("arapuã"), "arapuã" );
	deepEqual( Stem("arara"), "arar" );
	deepEqual( Stem("araranguá"), "ararangu" );
	deepEqual( Stem("araraquara"), "araraqu" );
	deepEqual( Stem("araras"), "arar" );
	deepEqual( Stem("aratangy"), "aratangy" );
	deepEqual( Stem("arau"), "arau" );
	deepEqual( Stem("araujo"), "arauj" );
	deepEqual( Stem("araújo"), "araúj" );
	deepEqual( Stem("araxá"), "arax" );
	deepEqual( Stem("arbitragem"), "arbitrag" );
	deepEqual( Stem("arbitrar"), "arbitr" );
	deepEqual( Stem("arbitrara"), "arbitr" );
	deepEqual( Stem("arbitrária"), "arbitrár" );
	deepEqual( Stem("arbitrariamente"), "arbitrari" );
	deepEqual( Stem("árbitros"), "árbitr" );
	deepEqual( Stem("arbusto"), "arbust" );
	deepEqual( Stem("arca"), "arca" );
	deepEqual( Stem("arcada"), "arcad" );
	deepEqual( Stem("arcaica"), "arcaic" );
	deepEqual( Stem("arcaicas"), "arcaic" );
	deepEqual( Stem("arcaico"), "arcaic" );
	deepEqual( Stem("arcar"), "arcar" );
	deepEqual( Stem("arcebispo"), "arcebisp" );
	deepEqual( Stem("arco"), "arco" );
	deepEqual( Stem("ardente"), "ardent" );
	deepEqual( Stem("arderá"), "arder" );
	deepEqual( Stem("ardidas"), "ardid" );
	deepEqual( Stem("ardidinha"), "ardidinh" );
	deepEqual( Stem("ardil"), "ardil" );
	deepEqual( Stem("ardilosa"), "ardil" );
	deepEqual( Stem("ardor"), "ardor" );
	deepEqual( Stem("ardorosas"), "ardor" );
	deepEqual( Stem("árdua"), "árdu" );
	deepEqual( Stem("árduo"), "árdu" );
	deepEqual( Stem("área"), "áre" );
	deepEqual( Stem("áreas"), "áre" );
	deepEqual( Stem("areia"), "are" );
	deepEqual( Stem("areias"), "are" );
	deepEqual( Stem("arejado"), "arej" );
	deepEqual( Stem("arena"), "aren" );
	deepEqual( Stem("ares"), "ares" );
	deepEqual( Stem("arestas"), "arest" );
	deepEqual( Stem("argelich"), "argelich" );
	deepEqual( Stem("argentária"), "argentár" );
	deepEqual( Stem("argentina"), "argentin" );
	deepEqual( Stem("argentinas"), "argentin" );
	deepEqual( Stem("argentino"), "argentin" );
	deepEqual( Stem("argentinos"), "argentin" );
	deepEqual( Stem("argila"), "argil" );
	deepEqual( Stem("argola"), "argol" );
	deepEqual( Stem("argolas"), "argol" );
	deepEqual( Stem("argonauta"), "argonaut" );
	deepEqual( Stem("argumenta"), "argument" );
	deepEqual( Stem("argumentação"), "argument" );
	deepEqual( Stem("argumentações"), "argument" );
	deepEqual( Stem("argumentando"), "argument" );
	deepEqual( Stem("argumento"), "argument" );
	deepEqual( Stem("argumentos"), "argument" );
	deepEqual( Stem("argumentou"), "argument" );
	deepEqual( Stem("ari"), "ari" );
	deepEqual( Stem("ária"), "ári" );
	deepEqual( Stem("ariano"), "arian" );
	deepEqual( Stem("arias"), "ari" );
	deepEqual( Stem("árias"), "ári" );
	deepEqual( Stem("arida"), "arid" );
	deepEqual( Stem("árida"), "árid" );
	deepEqual( Stem("áridas"), "árid" );
	deepEqual( Stem("ariel"), "ariel" );
	deepEqual( Stem("aripuanã"), "aripuanã" );
	deepEqual( Stem("ariranhas"), "ariranh" );
	deepEqual( Stem("arisco"), "arisc" );
	deepEqual( Stem("aristo"), "arist" );
	deepEqual( Stem("aristocráticos"), "aristocrát" );
	deepEqual( Stem("aristodemo"), "aristodem" );
	deepEqual( Stem("aristóteles"), "aristótel" );
	deepEqual( Stem("arkin"), "arkin" );
	deepEqual( Stem("arlie"), "arli" );
	deepEqual( Stem("arlindo"), "arlind" );
	deepEqual( Stem("arliss"), "arliss" );
	deepEqual( Stem("arma"), "arma" );
	deepEqual( Stem("armação"), "armaçã" );
	deepEqual( Stem("armada"), "armad" );
	deepEqual( Stem("armadas"), "armad" );
	deepEqual( Stem("armadilha"), "armadilh" );
	deepEqual( Stem("armadilhas"), "armadilh" );
	deepEqual( Stem("armado"), "armad" );
	deepEqual( Stem("armador"), "armador" );
	deepEqual( Stem("armadores"), "armador" );
	deepEqual( Stem("armados"), "armad" );
	deepEqual( Stem("armam"), "armam" );
	deepEqual( Stem("armamentista"), "armament" );
	deepEqual( Stem("armamento"), "armament" );
	deepEqual( Stem("armamentos"), "armament" );
	deepEqual( Stem("armando"), "armand" );
	deepEqual( Stem("armani"), "arman" );
	deepEqual( Stem("armar"), "armar" );
	deepEqual( Stem("armário"), "armári" );
	deepEqual( Stem("armários"), "armári" );
	deepEqual( Stem("armas"), "armas" );
	deepEqual( Stem("armavam"), "armav" );
	deepEqual( Stem("armazém"), "armazém" );
	deepEqual( Stem("armazenadas"), "armazen" );
	deepEqual( Stem("armazenado"), "armazen" );
	deepEqual( Stem("armazenagem"), "armazenag" );
	deepEqual( Stem("armazenam"), "armazen" );
	deepEqual( Stem("armazenamento"), "armazen" );
	deepEqual( Stem("armazenamos"), "armazen" );
	deepEqual( Stem("armazenar"), "armazen" );
	deepEqual( Stem("armazéns"), "armazéns" );
	deepEqual( Stem("armênio"), "armêni" );
	deepEqual( Stem("armênios"), "armêni" );
	deepEqual( Stem("armentano"), "armentan" );
	deepEqual( Stem("armo"), "armo" );
	deepEqual( Stem("armório"), "armóri" );
	deepEqual( Stem("armstrong"), "armstrong" );
	deepEqual( Stem("arnaldo"), "arnald" );
	deepEqual( Stem("arno"), "arno" );
	deepEqual( Stem("arnoldo"), "arnold" );
	deepEqual( Stem("arnon"), "arnon" );
	deepEqual( Stem("aro"), "aro" );
	deepEqual( Stem("aroma"), "arom" );
	deepEqual( Stem("aromas"), "arom" );
	deepEqual( Stem("aromática"), "aromát" );
	deepEqual( Stem("aronson"), "aronson" );
	deepEqual( Stem("aros"), "aros" );
	deepEqual( Stem("arósio"), "arósi" );
	deepEqual( Stem("arqueologia"), "arqueolog" );
	deepEqual( Stem("arqueológicos"), "arqueológ" );
	deepEqual( Stem("arqueólogos"), "arqueólog" );
	deepEqual( Stem("arquibancada"), "arquibanc" );
	deepEqual( Stem("arquibancadas"), "arquibanc" );
	deepEqual( Stem("arquidiocese"), "arquidioces" );
	deepEqual( Stem("arquidioceses"), "arquidioces" );
	deepEqual( Stem("arquiinimigos"), "arquiinimig" );
	deepEqual( Stem("arquipélago"), "arquipélag" );
	deepEqual( Stem("arquiteta"), "arquitet" );
	deepEqual( Stem("arquitetada"), "arquitet" );
	deepEqual( Stem("arquitetado"), "arquitet" );
	deepEqual( Stem("arquiteto"), "arquitet" );
	deepEqual( Stem("arquitetônica"), "arquitetôn" );
	deepEqual( Stem("arquitetônicas"), "arquitetôn" );
	deepEqual( Stem("arquitetônicos"), "arquitetôn" );
	deepEqual( Stem("arquitetos"), "arquitet" );
	deepEqual( Stem("arquitetura"), "arquitetur" );
	deepEqual( Stem("arquivado"), "arquiv" );
	deepEqual( Stem("arquivados"), "arquiv" );
	deepEqual( Stem("arquivam"), "arquiv" );
	deepEqual( Stem("arquivamento"), "arquiv" );
	deepEqual( Stem("arquivo"), "arquiv" );
	deepEqual( Stem("arquivos"), "arquiv" );
	deepEqual( Stem("arrabal"), "arrabal" );
	deepEqual( Stem("arraial"), "arraial" );
	deepEqual( Stem("arrancada"), "arranc" );
	deepEqual( Stem("arrancadas"), "arranc" );
	deepEqual( Stem("arrancado"), "arranc" );
	deepEqual( Stem("arrancados"), "arranc" );
	deepEqual( Stem("arrancando"), "arranc" );
	deepEqual( Stem("arrancar"), "arranc" );
	deepEqual( Stem("arrancou"), "arranc" );
	deepEqual( Stem("arranha"), "arranh" );
	deepEqual( Stem("arranhada"), "arranh" );
	deepEqual( Stem("arranhando"), "arranh" );
	deepEqual( Stem("arranhão"), "arranhã" );
	deepEqual( Stem("arranhar"), "arranh" );
	deepEqual( Stem("arranja"), "arranj" );
	deepEqual( Stem("arranjada"), "arranj" );
	deepEqual( Stem("arranjador"), "arranj" );
	deepEqual( Stem("arranjadores"), "arranj" );
	deepEqual( Stem("arranjando"), "arranj" );
	deepEqual( Stem("arranjar"), "arranj" );
	deepEqual( Stem("arranjo"), "arranj" );
	deepEqual( Stem("arranjos"), "arranj" );
	deepEqual( Stem("arranque"), "arranqu" );
	deepEqual( Stem("arrasa"), "arras" );
	deepEqual( Stem("arrasada"), "arras" );
	deepEqual( Stem("arrasado"), "arras" );
	deepEqual( Stem("arrasando"), "arras" );
	deepEqual( Stem("arrasar"), "arras" );
	deepEqual( Stem("arrasaram"), "arras" );
	deepEqual( Stem("arrasta"), "arrast" );
	deepEqual( Stem("arrastá"), "arrast" );
	deepEqual( Stem("arrastada"), "arrast" );
	deepEqual( Stem("arrastado"), "arrast" );
	deepEqual( Stem("arrastados"), "arrast" );
	deepEqual( Stem("arrastam"), "arrast" );
	deepEqual( Stem("arrastando"), "arrast" );
	deepEqual( Stem("arrastão"), "arrastã" );
	deepEqual( Stem("arrastaria"), "arrast" );
	deepEqual( Stem("arrastões"), "arrastõ" );
	deepEqual( Stem("arrastou"), "arrast" );
	deepEqual( Stem("arrazoado"), "arrazo" );
	deepEqual( Stem("arrebanhar"), "arrebanh" );
	deepEqual( Stem("arrebanhou"), "arrebanh" );
	deepEqual( Stem("arrebatadas"), "arrebat" );
	deepEqual( Stem("arrebatadora"), "arrebat" );
	deepEqual( Stem("arrebatadores"), "arrebat" );
	deepEqual( Stem("arrebatava"), "arrebat" );
	deepEqual( Stem("arrebatou"), "arrebat" );
	deepEqual( Stem("arrebentando"), "arrebent" );
	deepEqual( Stem("arrebentar"), "arrebent" );
	deepEqual( Stem("arrebitam"), "arrebit" );
	deepEqual( Stem("arrecada"), "arrec" );
	deepEqual( Stem("arrecadação"), "arrecad" );
	deepEqual( Stem("arrecadado"), "arrecad" );
	deepEqual( Stem("arrecadadores"), "arrecad" );
	deepEqual( Stem("arrecadados"), "arrecad" );
	deepEqual( Stem("arrecadar"), "arrecad" );
	deepEqual( Stem("arrecadaram"), "arrecad" );
	deepEqual( Stem("arrecadavam"), "arrecad" );
	deepEqual( Stem("arrecadávamos"), "arrecad" );
	deepEqual( Stem("arrecadou"), "arrecad" );
	deepEqual( Stem("arrecifes"), "arrecif" );
	deepEqual( Stem("arredar"), "arred" );
	deepEqual( Stem("arredias"), "arred" );
	deepEqual( Stem("arredio"), "arredi" );
	deepEqual( Stem("arredores"), "arredor" );
	deepEqual( Stem("arregaçadas"), "arregac" );
	deepEqual( Stem("arregaçar"), "arregac" );
	deepEqual( Stem("arregimentar"), "arregiment" );
	deepEqual( Stem("arremata"), "arremat" );
	deepEqual( Stem("arrematado"), "arremat" );
	deepEqual( Stem("arrematados"), "arremat" );
	deepEqual( Stem("arrematar"), "arremat" );
	deepEqual( Stem("arremate"), "arremat" );
	deepEqual( Stem("arremates"), "arremat" );
	deepEqual( Stem("arrematou"), "arremat" );
	deepEqual( Stem("arremedo"), "arremed" );
	deepEqual( Stem("arremessada"), "arremess" );
	deepEqual( Stem("arremessar"), "arremess" );
	deepEqual( Stem("arremessos"), "arremess" );
	deepEqual( Stem("arrendadas"), "arrend" );
	deepEqual( Stem("arrendados"), "arrend" );
	deepEqual( Stem("arrepende"), "arrepend" );
	deepEqual( Stem("arrependeu"), "arrepend" );
	deepEqual( Stem("arrependi"), "arrepend" );
	deepEqual( Stem("arrependidas"), "arrepend" );
	deepEqual( Stem("arrependido"), "arrepend" );
	deepEqual( Stem("arrependimento"), "arrepend" );
	deepEqual( Stem("arrependo"), "arrep" );
	deepEqual( Stem("arrepiados"), "arrepi" );
	deepEqual( Stem("arrepiar"), "arrepi" );
	deepEqual( Stem("arrepios"), "arrepi" );
	deepEqual( Stem("arriadas"), "arri" );
	deepEqual( Stem("arrisca"), "arrisc" );
	deepEqual( Stem("arriscada"), "arrisc" );
	deepEqual( Stem("arriscadas"), "arrisc" );
	deepEqual( Stem("arriscado"), "arrisc" );
	deepEqual( Stem("arriscam"), "arrisc" );
	deepEqual( Stem("arriscando"), "arrisc" );
	deepEqual( Stem("arriscar"), "arrisc" );
	deepEqual( Stem("arriscaria"), "arrisc" );
	deepEqual( Stem("arriscava"), "arrisc" );
	deepEqual( Stem("arriscou"), "arrisc" );
	deepEqual( Stem("arrisque"), "arrisqu" );
	deepEqual( Stem("arrogância"), "arrog" );
	deepEqual( Stem("arrogante"), "arrog" );
	deepEqual( Stem("arrogantes"), "arrog" );
	deepEqual( Stem("arrojada"), "arroj" );
	deepEqual( Stem("arroladas"), "arrol" );
	deepEqual( Stem("arromba"), "arromb" );
	deepEqual( Stem("arrombamento"), "arromb" );
	deepEqual( Stem("arrombaram"), "arromb" );
	deepEqual( Stem("arroubos"), "arroub" );
	deepEqual( Stem("arroz"), "arroz" );
	deepEqual( Stem("arruaça"), "arruac" );
	deepEqual( Stem("arruaceiros"), "arruaceir" );
	deepEqual( Stem("arruda"), "arrud" );
	deepEqual( Stem("arruinando"), "arruin" );
	deepEqual( Stem("arruinar"), "arruin" );
	deepEqual( Stem("arruma"), "arrum" );
	deepEqual( Stem("arrumada"), "arrum" );
	deepEqual( Stem("arrumados"), "arrum" );
	deepEqual( Stem("arrumando"), "arrum" );
	deepEqual( Stem("arrumar"), "arrum" );
	deepEqual( Stem("arrumaria"), "arrum" );
	deepEqual( Stem("arrumava"), "arrum" );
	deepEqual( Stem("arrumo"), "arrum" );
	deepEqual( Stem("arrumou"), "arrum" );
	deepEqual( Stem("arsenal"), "arsenal" );
	deepEqual( Stem("art"), "art" );
	deepEqual( Stem("arte"), "arte" );
	deepEqual( Stem("artefacto"), "artefact" );
	deepEqual( Stem("artefato"), "artefat" );
	deepEqual( Stem("artefatos"), "artefat" );
	deepEqual( Stem("artéria"), "artér" );
	deepEqual( Stem("arterial"), "arterial" );
	deepEqual( Stem("artérias"), "artér" );
	deepEqual( Stem("artes"), "artes" );
	deepEqual( Stem("artesanal"), "artesanal" );
	deepEqual( Stem("artesanalmente"), "artesanal" );
	deepEqual( Stem("artesanato"), "artesanat" );
	deepEqual( Stem("artesão"), "artesã" );
	deepEqual( Stem("arthur"), "arthur" );
	deepEqual( Stem("articulação"), "articul" );
	deepEqual( Stem("articuladas"), "articul" );
	deepEqual( Stem("articulador"), "articul" );
	deepEqual( Stem("articuladores"), "articul" );
	deepEqual( Stem("articulando"), "articul" );
	deepEqual( Stem("articular"), "articul" );
	deepEqual( Stem("articulares"), "articul" );
	deepEqual( Stem("articulava"), "articul" );
	deepEqual( Stem("articulista"), "articul" );
	deepEqual( Stem("artificiais"), "artific" );
	deepEqual( Stem("artificial"), "artificial" );
	deepEqual( Stem("artificialmente"), "artificial" );
	deepEqual( Stem("artifício"), "artifíci" );
	deepEqual( Stem("artifícios"), "artifíci" );
	deepEqual( Stem("artigo"), "artig" );
	deepEqual( Stem("artigos"), "artig" );
	deepEqual( Stem("artilheiro"), "artilheir" );
	deepEqual( Stem("artista"), "artist" );
	deepEqual( Stem("artistas"), "artist" );
	deepEqual( Stem("artística"), "artíst" );
	deepEqual( Stem("artisticamente"), "artist" );
	deepEqual( Stem("artísticas"), "artíst" );
	deepEqual( Stem("artístico"), "artíst" );
	deepEqual( Stem("artrite"), "artrit" );
	deepEqual( Stem("arts"), "arts" );
	deepEqual( Stem("artur"), "artur" );
	deepEqual( Stem("aruba"), "arub" );
	deepEqual( Stem("arvin"), "arvin" );
	deepEqual( Stem("arvorar"), "arvor" );
	deepEqual( Stem("árvore"), "árvor" );
	deepEqual( Stem("árvores"), "árvor" );
	deepEqual( Stem("ary"), "ary" );
	deepEqual( Stem("as"), "as" );
	deepEqual( Stem("às"), "às" );
	deepEqual( Stem("asa"), "asa" );
	deepEqual( Stem("asas"), "asas" );
	deepEqual( Stem("ascedente"), "ascedent" );
	deepEqual( Stem("ascendência"), "ascendent" );
	deepEqual( Stem("ascensão"), "ascensã" );
	deepEqual( Stem("ascensorista"), "ascensor" );
	deepEqual( Stem("asceta"), "ascet" );
	deepEqual( Stem("ascética"), "ascét" );
	deepEqual( Stem("ascetismo"), "ascet" );
	deepEqual( Stem("ascher"), "ascher" );
	deepEqual( Stem("asemoções"), "asemoçõ" );
	deepEqual( Stem("asfaltadas"), "asfalt" );
	deepEqual( Stem("asfalto"), "asfalt" );
	deepEqual( Stem("ash"), "ash" );
	deepEqual( Stem("ashg"), "ashg" );
	deepEqual( Stem("ashkenazim"), "ashkenazim" );
	deepEqual( Stem("asia"), "asi" );
	deepEqual( Stem("ásia"), "ási" );
	deepEqual( Stem("asiática"), "asiát" );
	deepEqual( Stem("asiáticas"), "asiát" );
	deepEqual( Stem("asiático"), "asiát" );
	deepEqual( Stem("asiáticos"), "asiát" );
	deepEqual( Stem("asma"), "asma" );
	deepEqual( Stem("asmática"), "asmát" );
	deepEqual( Stem("asombrosos"), "asombr" );
	deepEqual( Stem("aspas"), "aspas" );
	deepEqual( Stem("aspecto"), "aspect" );
	deepEqual( Stem("aspectos"), "aspect" );
	deepEqual( Stem("aspem"), "aspem" );
	deepEqual( Stem("aspereza"), "asper" );
	deepEqual( Stem("áspero"), "ásper" );
	deepEqual( Stem("aspirantes"), "aspir" );
	deepEqual( Stem("aspirar"), "aspir" );
	deepEqual( Stem("aspirina"), "aspirin" );
	deepEqual( Stem("aspirinas"), "aspirin" );
	deepEqual( Stem("assalariado"), "assalari" );
	deepEqual( Stem("assalta"), "assalt" );
	deepEqual( Stem("assaltados"), "assalt" );
	deepEqual( Stem("assaltante"), "assalt" );
	deepEqual( Stem("assaltantes"), "assalt" );
	deepEqual( Stem("assalto"), "assalt" );
	deepEqual( Stem("assaltos"), "assalt" );
	deepEqual( Stem("assaltou"), "assalt" );
	deepEqual( Stem("assassinada"), "assassin" );
	deepEqual( Stem("assassinado"), "assassin" );
	deepEqual( Stem("assassinados"), "assassin" );
	deepEqual( Stem("assassinam"), "assassin" );
	deepEqual( Stem("assassinará"), "assassin" );
	deepEqual( Stem("assassinas"), "assassin" );
	deepEqual( Stem("assassinato"), "assassinat" );
	deepEqual( Stem("assassinatos"), "assassinat" );
	deepEqual( Stem("assassinavam"), "assassin" );
	deepEqual( Stem("assassino"), "assassin" );
	deepEqual( Stem("assassinos"), "assassin" );
	deepEqual( Stem("assassinou"), "assassin" );
	deepEqual( Stem("assediada"), "assedi" );
	deepEqual( Stem("assediado"), "assedi" );
	deepEqual( Stem("assediar"), "assedi" );
	deepEqual( Stem("assédio"), "assédi" );
	deepEqual( Stem("assegura"), "assegur" );
	deepEqual( Stem("assegurada"), "assegur" );
	deepEqual( Stem("assegurado"), "assegur" );
	deepEqual( Stem("assegurar"), "assegur" );
	deepEqual( Stem("asseguraram"), "assegur" );
	deepEqual( Stem("asseguraria"), "assegur" );
	deepEqual( Stem("assegurou"), "assegur" );
	deepEqual( Stem("assembléia"), "assembl" );
	deepEqual( Stem("assembleiano"), "assembleian" );
	deepEqual( Stem("assembléias"), "assembl" );
	deepEqual( Stem("assemelha"), "assemelh" );
	deepEqual( Stem("assemelham"), "assemelh" );
	deepEqual( Stem("assentadas"), "assent" );
	deepEqual( Stem("assentado"), "assent" );
	deepEqual( Stem("assentados"), "assent" );
	deepEqual( Stem("assentamento"), "assent" );
	deepEqual( Stem("assentamentos"), "assent" );
	deepEqual( Stem("assentando"), "assent" );
	deepEqual( Stem("assentar"), "assent" );
	deepEqual( Stem("assentaram"), "assent" );
	deepEqual( Stem("assento"), "assent" );
	deepEqual( Stem("assentos"), "assent" );
	deepEqual( Stem("assepsia"), "asseps" );
	deepEqual( Stem("assertivo"), "assert" );
	deepEqual( Stem("assessor"), "assessor" );
	deepEqual( Stem("assessora"), "assessor" );
	deepEqual( Stem("assessores"), "assessor" );
	deepEqual( Stem("assessoria"), "assessor" );
	deepEqual( Stem("assestaram"), "assest" );
	deepEqual( Stem("assexuado"), "assexu" );
	deepEqual( Stem("assídua"), "assídu" );
	deepEqual( Stem("assíduo"), "assídu" );
	deepEqual( Stem("assíduos"), "assídu" );
	deepEqual( Stem("assim"), "assim" );
	deepEqual( Stem("assimilação"), "assimil" );
	deepEqual( Stem("assimilados"), "assimil" );
	deepEqual( Stem("assimilar"), "assimil" );
	deepEqual( Stem("assimiláveis"), "assimil" );
	deepEqual( Stem("assina"), "assin" );
	deepEqual( Stem("assinada"), "assin" );
	deepEqual( Stem("assinado"), "assin" );
	deepEqual( Stem("assinados"), "assin" );
	deepEqual( Stem("assinala"), "assinal" );
	deepEqual( Stem("assinalado"), "assinal" );
	deepEqual( Stem("assinalar"), "assinal" );
	deepEqual( Stem("assinam"), "assin" );
	deepEqual( Stem("assinando"), "assin" );
	deepEqual( Stem("assinantes"), "assin" );
	deepEqual( Stem("assinar"), "assin" );
	deepEqual( Stem("assinaram"), "assin" );
	deepEqual( Stem("assinasse"), "assin" );
	deepEqual( Stem("assinatura"), "assinatur" );
	deepEqual( Stem("assinaturas"), "assinatur" );
	deepEqual( Stem("assinava"), "assin" );
	deepEqual( Stem("assine"), "assin" );
	deepEqual( Stem("assinei"), "assin" );
	deepEqual( Stem("assinou"), "assin" );
	deepEqual( Stem("assintomático"), "assintomát" );
	deepEqual( Stem("assíria"), "assír" );
	deepEqual( Stem("assírios"), "assíri" );
	deepEqual( Stem("assis"), "assis" );
	deepEqual( Stem("assiste"), "assist" );
	deepEqual( Stem("assistem"), "assist" );
	deepEqual( Stem("assistência"), "assistent" );
	deepEqual( Stem("assistenciais"), "assistenc" );
	deepEqual( Stem("assistente"), "assistent" );
	deepEqual( Stem("assistentes"), "assistent" );
	deepEqual( Stem("assisti"), "assist" );
	deepEqual( Stem("assistia"), "assist" );
	deepEqual( Stem("assistida"), "assist" );
	deepEqual( Stem("assistimos"), "assist" );
	deepEqual( Stem("assistindo"), "assist" );
	deepEqual( Stem("assistir"), "assist" );
	deepEqual( Stem("assistirá"), "assist" );
	deepEqual( Stem("assistiram"), "assist" );
	deepEqual( Stem("assistiria"), "assist" );
	deepEqual( Stem("assistiu"), "assist" );
	deepEqual( Stem("assisto"), "assist" );
	deepEqual( Stem("assoalho"), "assoalh" );
	deepEqual( Stem("associá"), "associ" );
	deepEqual( Stem("associação"), "assoc" );
	deepEqual( Stem("associações"), "assoc" );
	deepEqual( Stem("associada"), "assoc" );
	deepEqual( Stem("associadas"), "assoc" );
	deepEqual( Stem("associado"), "assoc" );
	deepEqual( Stem("associados"), "assoc" );
	deepEqual( Stem("associando"), "assoc" );
	deepEqual( Stem("associar"), "assoc" );
	deepEqual( Stem("association"), "association" );
	deepEqual( Stem("associo"), "associ" );
	deepEqual( Stem("associou"), "assoc" );
	deepEqual( Stem("assolando"), "assol" );
	deepEqual( Stem("assombra"), "assombr" );
	deepEqual( Stem("assombrado"), "assombr" );
	deepEqual( Stem("assombrar"), "assombr" );
	deepEqual( Stem("assombro"), "assombr" );
	deepEqual( Stem("assombrosa"), "assombr" );
	deepEqual( Stem("assombroso"), "assombr" );
	deepEqual( Stem("assoprou"), "assopr" );
	deepEqual( Stem("assuero"), "assuer" );
	deepEqual( Stem("assumam"), "assum" );
	deepEqual( Stem("assume"), "assum" );
	deepEqual( Stem("assumia"), "assum" );
	deepEqual( Stem("assumida"), "assum" );
	deepEqual( Stem("assumido"), "assum" );
	deepEqual( Stem("assumimos"), "assum" );
	deepEqual( Stem("assumindo"), "assum" );
	deepEqual( Stem("assumir"), "assum" );
	deepEqual( Stem("assumiram"), "assum" );
	deepEqual( Stem("assumiria"), "assum" );
	deepEqual( Stem("assumisse"), "assum" );
	deepEqual( Stem("assumissem"), "assum" );
	deepEqual( Stem("assumiu"), "assum" );
	deepEqual( Stem("assumo"), "assum" );
	deepEqual( Stem("assunção"), "assunçã" );
	deepEqual( Stem("assunto"), "assunt" );
	deepEqual( Stem("assuntos"), "assunt" );
	deepEqual( Stem("assusta"), "assust" );
	deepEqual( Stem("assustada"), "assust" );
	deepEqual( Stem("assustadas"), "assust" );
	deepEqual( Stem("assustado"), "assust" );
	deepEqual( Stem("assustadora"), "assust" );
	deepEqual( Stem("assustadoramente"), "assustador" );
	deepEqual( Stem("assustadores"), "assust" );
	deepEqual( Stem("assustados"), "assust" );
	deepEqual( Stem("assustam"), "assust" );
	deepEqual( Stem("assustar"), "assust" );
	deepEqual( Stem("assustaram"), "assust" );
	deepEqual( Stem("assustava"), "assust" );
	deepEqual( Stem("assuste"), "assust" );
	deepEqual( Stem("astolft"), "astolft" );
	deepEqual( Stem("aston"), "aston" );
	deepEqual( Stem("astral"), "astral" );
	deepEqual( Stem("astro"), "astro" );
	deepEqual( Stem("astrofísicos"), "astrofís" );
	deepEqual( Stem("astróloga"), "astrólog" );
	deepEqual( Stem("astrologia"), "astrolog" );
	deepEqual( Stem("astrólogos"), "astrólog" );
	deepEqual( Stem("astronauta"), "astronaut" );
	deepEqual( Stem("astronautas"), "astronaut" );
	deepEqual( Stem("astronáutica"), "astronáut" );
	deepEqual( Stem("astronomia"), "astronom" );
	deepEqual( Stem("astronômica"), "astronôm" );
	deepEqual( Stem("astronômicos"), "astronôm" );
	deepEqual( Stem("astrônomo"), "astrônom" );
	deepEqual( Stem("astrônomos"), "astrônom" );
	deepEqual( Stem("astros"), "astros" );
	deepEqual( Stem("astuto"), "astut" );
	deepEqual( Stem("at"), "at" );
	deepEqual( Stem("ata"), "ata" );
	deepEqual( Stem("atabaques"), "atabaqu" );
	deepEqual( Stem("ataca"), "atac" );
	deepEqual( Stem("atacado"), "atac" );
	deepEqual( Stem("atacados"), "atac" );
	deepEqual( Stem("atacam"), "atac" );
	deepEqual( Stem("atacando"), "atac" );
	deepEqual( Stem("atacante"), "atac" );
	deepEqual( Stem("atacar"), "atac" );
	deepEqual( Stem("atacaram"), "atac" );
	deepEqual( Stem("atacou"), "atac" );
	deepEqual( Stem("atadas"), "atad" );
	deepEqual( Stem("atalho"), "atalh" );
	deepEqual( Stem("ataque"), "ataqu" );
	deepEqual( Stem("ataques"), "ataqu" );
	deepEqual( Stem("atarefado"), "ataref" );
	deepEqual( Stem("atarracada"), "atarrac" );
	deepEqual( Stem("atarracado"), "atarrac" );
	deepEqual( Stem("atas"), "atas" );
	deepEqual( Stem("ataturk"), "ataturk" );
	deepEqual( Stem("até"), "até" );
	deepEqual( Stem("ateado"), "ate" );
	deepEqual( Stem("atear"), "ate" );
	deepEqual( Stem("ateliê"), "ateli" );
	deepEqual( Stem("atenas"), "aten" );
	deepEqual( Stem("atenção"), "atençã" );
	deepEqual( Stem("atenções"), "atençõ" );
	deepEqual( Stem("atende"), "atend" );
	deepEqual( Stem("atendem"), "atend" );
	deepEqual( Stem("atendendo"), "atend" );
	deepEqual( Stem("atender"), "atend" );
	deepEqual( Stem("atenderam"), "atend" );
	deepEqual( Stem("atendeu"), "atend" );
	deepEqual( Stem("atendi"), "atend" );
	deepEqual( Stem("atendia"), "atend" );
	deepEqual( Stem("atendida"), "atend" );
	deepEqual( Stem("atendidas"), "atend" );
	deepEqual( Stem("atendido"), "atend" );
	deepEqual( Stem("atendidos"), "atend" );
	deepEqual( Stem("atendimento"), "atend" );
	deepEqual( Stem("atendimentos"), "atend" );
	deepEqual( Stem("atenta"), "atent" );
	deepEqual( Stem("atentado"), "atent" );
	deepEqual( Stem("atentados"), "atent" );
	deepEqual( Stem("atentamente"), "atent" );
	deepEqual( Stem("atentaram"), "atent" );
	deepEqual( Stem("atentas"), "atent" );
	deepEqual( Stem("atente"), "atent" );
	deepEqual( Stem("atento"), "atent" );
	deepEqual( Stem("atentos"), "atent" );
	deepEqual( Stem("atenua"), "atenu" );
	deepEqual( Stem("atenuado"), "atenu" );
	deepEqual( Stem("atenuados"), "atenu" );
	deepEqual( Stem("atenuantes"), "atenu" );
	deepEqual( Stem("aterrisar"), "aterris" );
	deepEqual( Stem("aterrissado"), "aterriss" );
	deepEqual( Stem("aterrissagens"), "aterrissagens" );
	deepEqual( Stem("aterrissar"), "aterriss" );
	deepEqual( Stem("aterrorizá"), "aterroriz" );
	deepEqual( Stem("aterrorizar"), "aterroriz" );
	deepEqual( Stem("atesta"), "atest" );
	deepEqual( Stem("atestada"), "atest" );
	deepEqual( Stem("atestado"), "atest" );
	deepEqual( Stem("atestar"), "atest" );
	deepEqual( Stem("atibaia"), "atiba" );
	deepEqual( Stem("ática"), "átic" );
	deepEqual( Stem("átila"), "átil" );
	deepEqual( Stem("atilio"), "atili" );
	deepEqual( Stem("atílio"), "atíli" );
	deepEqual( Stem("atinge"), "ating" );
	deepEqual( Stem("atingi"), "ating" );
	deepEqual( Stem("atingia"), "ating" );
	deepEqual( Stem("atingida"), "ating" );
	deepEqual( Stem("atingidas"), "ating" );
	deepEqual( Stem("atingido"), "ating" );
	deepEqual( Stem("atingidos"), "ating" );
	deepEqual( Stem("atingir"), "ating" );
	deepEqual( Stem("atingiram"), "ating" );
	deepEqual( Stem("atingisse"), "ating" );
	deepEqual( Stem("atingissem"), "ating" );
	deepEqual( Stem("atingiu"), "ating" );
	deepEqual( Stem("atípica"), "atíp" );
	deepEqual( Stem("atípico"), "atíp" );
	deepEqual( Stem("atira"), "atir" );
	deepEqual( Stem("atirado"), "atir" );
	deepEqual( Stem("atirador"), "atir" );
	deepEqual( Stem("atirados"), "atir" );
	deepEqual( Stem("atirando"), "atir" );
	deepEqual( Stem("atirar"), "atir" );
	deepEqual( Stem("atirasse"), "atir" );
	deepEqual( Stem("atire"), "atir" );
	deepEqual( Stem("atirei"), "atir" );
	deepEqual( Stem("atirou"), "atir" );
	deepEqual( Stem("atitude"), "atitud" );
	deepEqual( Stem("atitudes"), "atitud" );
	deepEqual( Stem("ativa"), "ativ" );
	deepEqual( Stem("ativada"), "ativ" );
	deepEqual( Stem("ativadas"), "ativ" );
	deepEqual( Stem("ativamente"), "ativ" );
	deepEqual( Stem("ativar"), "ativ" );
	deepEqual( Stem("ativas"), "ativ" );
	deepEqual( Stem("atividade"), "ativ" );
	deepEqual( Stem("atividades"), "ativ" );
	deepEqual( Stem("ativista"), "ativ" );
	deepEqual( Stem("ativo"), "ativ" );
	deepEqual( Stem("ativos"), "ativ" );
	deepEqual( Stem("atlanta"), "atlant" );
	deepEqual( Stem("atlântico"), "atlânt" );
	deepEqual( Stem("atleta"), "atlet" );
	deepEqual( Stem("atletas"), "atlet" );
	deepEqual( Stem("atlética"), "atlét" );
	deepEqual( Stem("atlético"), "atlét" );
	deepEqual( Stem("atmosfera"), "atmosf" );
	deepEqual( Stem("atmosférica"), "atmosfér" );
	deepEqual( Stem("ato"), "ato" );
	deepEqual( Stem("atol"), "atol" );
	deepEqual( Stem("atolada"), "atol" );
	deepEqual( Stem("atolado"), "atol" );
	deepEqual( Stem("atoleiro"), "atoleir" );
	deepEqual( Stem("atoll"), "atoll" );
	deepEqual( Stem("atômica"), "atôm" );
	deepEqual( Stem("atômicas"), "atôm" );
	deepEqual( Stem("atômico"), "atôm" );
	deepEqual( Stem("atônito"), "atônit" );
	deepEqual( Stem("atônitos"), "atônit" );
	deepEqual( Stem("ator"), "ator" );
	deepEqual( Stem("atores"), "ator" );
	deepEqual( Stem("atormenta"), "atorment" );
	deepEqual( Stem("atormentada"), "atorment" );
	deepEqual( Stem("atormentado"), "atorment" );
	deepEqual( Stem("atormentam"), "atorment" );
	deepEqual( Stem("atormentar"), "atorment" );
	deepEqual( Stem("atormentou"), "atorment" );
	deepEqual( Stem("atos"), "atos" );
	deepEqual( Stem("atp"), "atp" );
	deepEqual( Stem("atraca"), "atrac" );
	deepEqual( Stem("atracadas"), "atrac" );
	deepEqual( Stem("atracados"), "atrac" );
	deepEqual( Stem("atração"), "atraçã" );
	deepEqual( Stem("atrações"), "atraçõ" );
	deepEqual( Stem("atraem"), "atra" );
	deepEqual( Stem("atraente"), "atraent" );
	deepEqual( Stem("atraentes"), "atraent" );
	deepEqual( Stem("atrai"), "atra" );
	deepEqual( Stem("atraída"), "atraíd" );
	deepEqual( Stem("atraídas"), "atraíd" );
	deepEqual( Stem("atraído"), "atraíd" );
	deepEqual( Stem("atraídos"), "atraíd" );
	deepEqual( Stem("atraindo"), "atra" );
	deepEqual( Stem("atrair"), "atra" );
	deepEqual( Stem("atrairá"), "atra" );
	deepEqual( Stem("atraíram"), "atraír" );
	deepEqual( Stem("atrairia"), "atra" );
	deepEqual( Stem("atraísse"), "atraíss" );
	deepEqual( Stem("atraiu"), "atra" );
	deepEqual( Stem("atrapalha"), "atrapalh" );
	deepEqual( Stem("atrapalhado"), "atrapalh" );
	deepEqual( Stem("atrapalhando"), "atrapalh" );
	deepEqual( Stem("atrapalhar"), "atrapalh" );
	deepEqual( Stem("atrapalharem"), "atrapalh" );
	deepEqual( Stem("atrapalhasse"), "atrapalh" );
	deepEqual( Stem("atrapalhem"), "atrapalh" );
	deepEqual( Stem("atrás"), "atrás" );
	deepEqual( Stem("atrasada"), "atras" );
	deepEqual( Stem("atrasadas"), "atras" );
	deepEqual( Stem("atrasado"), "atras" );
	deepEqual( Stem("atrasados"), "atras" );
	deepEqual( Stem("atrasar"), "atras" );
	deepEqual( Stem("atrasaria"), "atras" );
	deepEqual( Stem("atrasariam"), "atras" );
	deepEqual( Stem("atraso"), "atras" );
	deepEqual( Stem("atrasos"), "atras" );
	deepEqual( Stem("atrativo"), "atrat" );
	deepEqual( Stem("atrativos"), "atrat" );
	deepEqual( Stem("atravancado"), "atravanc" );
	deepEqual( Stem("através"), "através" );
	deepEqual( Stem("atravessa"), "atravess" );
	deepEqual( Stem("atravessado"), "atravess" );
	deepEqual( Stem("atravessar"), "atravess" );
	deepEqual( Stem("atravessaram"), "atravess" );
	deepEqual( Stem("atravessaria"), "atravess" );
	deepEqual( Stem("atravessava"), "atravess" );
	deepEqual( Stem("atravessavam"), "atravess" );
	deepEqual( Stem("atravessei"), "atravess" );
	deepEqual( Stem("atravessou"), "atravess" );
	deepEqual( Stem("atrelada"), "atrel" );
	deepEqual( Stem("atrelado"), "atrel" );
	deepEqual( Stem("atrelados"), "atrel" );
	deepEqual( Stem("atrelando"), "atrel" );
	deepEqual( Stem("atrelaram"), "atrel" );
	deepEqual( Stem("atreveu"), "atrev" );
	deepEqual( Stem("atribuem"), "atribu" );
	deepEqual( Stem("atribui"), "atribu" );
	deepEqual( Stem("atribuição"), "atribuiçã" );
	deepEqual( Stem("atribuições"), "atribuiçõ" );
	deepEqual( Stem("atribuída"), "atribuíd" );
	deepEqual( Stem("atribuído"), "atribuíd" );
	deepEqual( Stem("atribuídos"), "atribuíd" );
	deepEqual( Stem("atribuir"), "atribu" );
	deepEqual( Stem("atribuíram"), "atribuír" );
	deepEqual( Stem("atribuiu"), "atribu" );
	deepEqual( Stem("atribulada"), "atribul" );
	deepEqual( Stem("atributo"), "atribut" );
	deepEqual( Stem("atributos"), "atribut" );
	deepEqual( Stem("atrito"), "atrit" );
	deepEqual( Stem("atritos"), "atrit" );
	deepEqual( Stem("atriz"), "atriz" );
	deepEqual( Stem("atrizes"), "atriz" );
	deepEqual( Stem("atrocidade"), "atroc" );
	deepEqual( Stem("atrocidades"), "atroc" );
	deepEqual( Stem("atrofiadas"), "atrofi" );
	deepEqual( Stem("atrofiar"), "atrofi" );
	deepEqual( Stem("atropelado"), "atropel" );
	deepEqual( Stem("atropelamentos"), "atropel" );
	deepEqual( Stem("atropelou"), "atropel" );
	deepEqual( Stem("atroz"), "atroz" );
	deepEqual( Stem("atrriz"), "atrriz" );
	deepEqual( Stem("atua"), "atu" );
	deepEqual( Stem("atuação"), "atuaçã" );
	deepEqual( Stem("atuações"), "atuaçõ" );
	deepEqual( Stem("atuais"), "atu" );
	deepEqual( Stem("atual"), "atual" );
	deepEqual( Stem("atualidade"), "atual" );
	deepEqual( Stem("atualização"), "atualiz" );
	deepEqual( Stem("atualizando"), "atualiz" );
	deepEqual( Stem("atualizar"), "atualiz" );
	deepEqual( Stem("atualizei"), "atualiz" );
	deepEqual( Stem("atualizo"), "atualiz" );
	deepEqual( Stem("atualmente"), "atual" );
	deepEqual( Stem("atuam"), "atu" );
	deepEqual( Stem("atuando"), "atu" );
	deepEqual( Stem("atuante"), "atuant" );
	deepEqual( Stem("atuantes"), "atuant" );
	deepEqual( Stem("atuar"), "atu" );
	deepEqual( Stem("atuava"), "atu" );
	deepEqual( Stem("atuavam"), "atu" );
	deepEqual( Stem("atum"), "atum" );
	deepEqual( Stem("atuou"), "atu" );
	deepEqual( Stem("aturá"), "atur" );
	deepEqual( Stem("aturdido"), "aturd" );
	deepEqual( Stem("audaciosa"), "audac" );
	deepEqual( Stem("audacioso"), "audac" );
	deepEqual( Stem("audaciosos"), "audac" );
	deepEqual( Stem("auden"), "auden" );
	deepEqual( Stem("audi"), "aud" );
	deepEqual( Stem("audição"), "audiçã" );
	deepEqual( Stem("audiência"), "audiênc" );
	deepEqual( Stem("audiências"), "audiênc" );
	deepEqual( Stem("audio"), "audi" );
	deepEqual( Stem("audiovisuais"), "audiovisu" );
	deepEqual( Stem("auditiva"), "audit" );
	deepEqual( Stem("auditivo"), "audit" );
	deepEqual( Stem("auditor"), "auditor" );
	deepEqual( Stem("auditores"), "auditor" );
	deepEqual( Stem("auditoria"), "auditor" );
	deepEqual( Stem("auditorias"), "auditor" );
	deepEqual( Stem("auditório"), "auditóri" );
	deepEqual( Stem("auditórios"), "auditóri" );
	deepEqual( Stem("auditpharma"), "auditpharm" );
	deepEqual( Stem("auge"), "aug" );
	deepEqual( Stem("augusta"), "august" );
	deepEqual( Stem("augusti"), "august" );
	deepEqual( Stem("augusto"), "august" );
	deepEqual( Stem("aula"), "aul" );
	deepEqual( Stem("aulas"), "aul" );
	deepEqual( Stem("aumenta"), "aument" );
	deepEqual( Stem("aumentada"), "aument" );
	deepEqual( Stem("aumentado"), "aument" );
	deepEqual( Stem("aumentados"), "aument" );
	deepEqual( Stem("aumentam"), "aument" );
	deepEqual( Stem("aumentando"), "aument" );
	deepEqual( Stem("aumentar"), "aument" );
	deepEqual( Stem("aumentará"), "aument" );
	deepEqual( Stem("aumentaram"), "aument" );
	deepEqual( Stem("aumentarem"), "aument" );
	deepEqual( Stem("aumentaria"), "aument" );
	deepEqual( Stem("aumentasse"), "aument" );
	deepEqual( Stem("aumentava"), "aument" );
	deepEqual( Stem("aumente"), "aument" );
	deepEqual( Stem("aumentem"), "aument" );
	deepEqual( Stem("aumento"), "aument" );
	deepEqual( Stem("aumentos"), "aument" );
	deepEqual( Stem("aumentou"), "aument" );
	deepEqual( Stem("aura"), "aur" );
	deepEqual( Stem("áurea"), "áur" );
	deepEqual( Stem("aureliano"), "aurelian" );
	deepEqual( Stem("aurélio"), "auréli" );
	deepEqual( Stem("áureos"), "áur" );
	deepEqual( Stem("aurora"), "auror" );
	deepEqual( Stem("auschwitz"), "auschwitz" );
	deepEqual( Stem("ausência"), "ausênc" );
	deepEqual( Stem("ausências"), "ausênc" );
	deepEqual( Stem("ausente"), "ausent" );
	deepEqual( Stem("austeridade"), "auster" );
	deepEqual( Stem("austero"), "auster" );
	deepEqual( Stem("austin"), "austin" );
	deepEqual( Stem("austolft"), "austolft" );
	deepEqual( Stem("austrália"), "austrál" );
	deepEqual( Stem("australian"), "australian" );
	deepEqual( Stem("australiana"), "australian" );
	deepEqual( Stem("australiano"), "australian" );
	deepEqual( Stem("áustria"), "áustr" );
	deepEqual( Stem("austríaco"), "austríac" );
	deepEqual( Stem("austríacos"), "austríac" );
	deepEqual( Stem("autarquia"), "autarqu" );
	deepEqual( Stem("autárquica"), "autárqu" );
	deepEqual( Stem("autêntica"), "autênt" );
	deepEqual( Stem("autênticas"), "autênt" );
	deepEqual( Stem("autenticidade"), "autent" );
	deepEqual( Stem("autêntico"), "autênt" );
	deepEqual( Stem("autismo"), "autism" );
	deepEqual( Stem("auto"), "aut" );
	deepEqual( Stem("autobahns"), "autobahns" );
	deepEqual( Stem("autobiografia"), "autobiograf" );
	deepEqual( Stem("autobiográfico"), "autobiográf" );
	deepEqual( Stem("autocandidato"), "autocandidat" );
	deepEqual( Stem("autoconhecimento"), "autoconhec" );
	deepEqual( Stem("autocrítica"), "autocrít" );
	deepEqual( Stem("autóctone"), "autócton" );
	deepEqual( Stem("autóctones"), "autócton" );
	deepEqual( Stem("autodidata"), "autodidat" );
	deepEqual( Stem("autódromo"), "autódrom" );
	deepEqual( Stem("autogozação"), "autogoz" );
	deepEqual( Stem("autógrafo"), "autógraf" );
	deepEqual( Stem("autógrafos"), "autógraf" );
	deepEqual( Stem("automação"), "autom" );
	deepEqual( Stem("automática"), "automát" );
	deepEqual( Stem("automaticamente"), "automat" );
	deepEqual( Stem("automáticas"), "automát" );
	deepEqual( Stem("automático"), "automát" );
	deepEqual( Stem("automatizar"), "automatiz" );
	deepEqual( Stem("automedicação"), "automedic" );
	deepEqual( Stem("automedicar"), "automedic" );
	deepEqual( Stem("automobilismo"), "automobil" );
	deepEqual( Stem("automobilística"), "automobilíst" );
	deepEqual( Stem("automobilísticos"), "automobilíst" );
	deepEqual( Stem("automodelismo"), "automodel" );
	deepEqual( Stem("automotiva"), "automot" );
	deepEqual( Stem("automotivo"), "automot" );
	deepEqual( Stem("automóveis"), "automóv" );
	deepEqual( Stem("automóvel"), "automóvel" );
	deepEqual( Stem("autônoma"), "autônom" );
	deepEqual( Stem("autonomia"), "autonom" );
	deepEqual( Stem("autônomo"), "autônom" );
	deepEqual( Stem("autopeças"), "autopec" );
	deepEqual( Stem("autoproteção"), "autoproteçã" );
	deepEqual( Stem("autópsia"), "autóps" );
	deepEqual( Stem("autópsias"), "autóps" );
	deepEqual( Stem("autopsy"), "autopsy" );
	deepEqual( Stem("autor"), "autor" );
	deepEqual( Stem("autora"), "autor" );
	deepEqual( Stem("autorais"), "autor" );
	deepEqual( Stem("autoral"), "autoral" );
	deepEqual( Stem("autores"), "autor" );
	deepEqual( Stem("autoria"), "autor" );
	deepEqual( Stem("autoridade"), "autor" );
	deepEqual( Stem("autoridades"), "autor" );
	deepEqual( Stem("autoritária"), "autoritár" );
	deepEqual( Stem("autoritários"), "autoritári" );
	deepEqual( Stem("autorizá"), "autoriz" );
	deepEqual( Stem("autorização"), "autoriz" );
	deepEqual( Stem("autorizações"), "autoriz" );
	deepEqual( Stem("autorizada"), "autoriz" );
	deepEqual( Stem("autorizadas"), "autoriz" );
	deepEqual( Stem("autorizado"), "autoriz" );
	deepEqual( Stem("autorizados"), "autoriz" );
	deepEqual( Stem("autorizando"), "autoriz" );
	deepEqual( Stem("autorizar"), "autoriz" );
	deepEqual( Stem("autorizou"), "autoriz" );
	deepEqual( Stem("autos"), "aut" );
	deepEqual( Stem("autran"), "autran" );
	deepEqual( Stem("autuados"), "autu" );
	deepEqual( Stem("autuar"), "autu" );
	deepEqual( Stem("auxiliado"), "auxili" );
	deepEqual( Stem("auxiliar"), "auxili" );
	deepEqual( Stem("auxílio"), "auxíli" );
	deepEqual( Stem("auxiliou"), "auxili" );
	deepEqual( Stem("av"), "av" );
	deepEqual( Stem("avabens"), "avabens" );
	deepEqual( Stem("avaí"), "ava" );
	deepEqual( Stem("aval"), "aval" );
	deepEqual( Stem("avalanche"), "avalanch" );
	deepEqual( Stem("avalia"), "aval" );
	deepEqual( Stem("avaliação"), "avali" );
	deepEqual( Stem("avaliações"), "avali" );
	deepEqual( Stem("avaliada"), "avali" );
	deepEqual( Stem("avaliadas"), "avali" );
	deepEqual( Stem("avaliado"), "avali" );
	deepEqual( Stem("avaliadores"), "avali" );
	deepEqual( Stem("avaliados"), "avali" );
	deepEqual( Stem("avaliam"), "aval" );
	deepEqual( Stem("avaliando"), "avali" );
	deepEqual( Stem("avaliar"), "avali" );
	deepEqual( Stem("avaliarem"), "avali" );
	deepEqual( Stem("avaliou"), "avali" );
	deepEqual( Stem("avalista"), "aval" );
	deepEqual( Stem("avalizou"), "avaliz" );
	deepEqual( Stem("avallone"), "avallon" );
	deepEqual( Stem("avança"), "avanc" );
	deepEqual( Stem("avançada"), "avanc" );
	deepEqual( Stem("avançadas"), "avanc" );
	deepEqual( Stem("avançado"), "avanc" );
	deepEqual( Stem("avançados"), "avanc" );
	deepEqual( Stem("avançam"), "avanc" );
	deepEqual( Stem("avançando"), "avanc" );
	deepEqual( Stem("avançar"), "avanc" );
	deepEqual( Stem("avançaram"), "avanc" );
	deepEqual( Stem("avançavam"), "avanc" );
	deepEqual( Stem("avance"), "avanc" );
	deepEqual( Stem("avancini"), "avancin" );
	deepEqual( Stem("avanço"), "avanc" );
	deepEqual( Stem("avanços"), "avanc" );
	deepEqual( Stem("avançou"), "avanc" );
	deepEqual( Stem("avantajado"), "avantaj" );
	deepEqual( Stem("avante"), "avant" );
	deepEqual( Stem("avaré"), "avar" );
	deepEqual( Stem("avariado"), "avari" );
	deepEqual( Stem("avariou"), "avari" );
	deepEqual( Stem("avassaladora"), "avassal" );
	deepEqual( Stem("ave"), "ave" );
	deepEqual( Stem("avedon"), "avedon" );
	deepEqual( Stem("avelino"), "avelin" );
	deepEqual( Stem("avenida"), "aven" );
	deepEqual( Stem("avenidas"), "aven" );
	deepEqual( Stem("avenidona"), "avenidon" );
	deepEqual( Stem("aventura"), "aventur" );
	deepEqual( Stem("aventuram"), "aventur" );
	deepEqual( Stem("aventuras"), "aventur" );
	deepEqual( Stem("aventureiro"), "aventureir" );
	deepEqual( Stem("aventureiros"), "aventureir" );
	deepEqual( Stem("aventuresca"), "aventuresc" );
	deepEqual( Stem("aventurou"), "aventur" );
	deepEqual( Stem("avenue"), "avenu" );
	deepEqual( Stem("averiguadas"), "averigu" );
	deepEqual( Stem("avermelhada"), "avermelh" );
	deepEqual( Stem("avermelhadas"), "avermelh" );
	deepEqual( Stem("aversão"), "aversã" );
	deepEqual( Stem("aves"), "aves" );
	deepEqual( Stem("avessas"), "avess" );
	deepEqual( Stem("avesso"), "avess" );
	deepEqual( Stem("avestruz"), "avestruz" );
	deepEqual( Stem("avestruzes"), "avestruz" );
	deepEqual( Stem("avestuz"), "avestuz" );
	deepEqual( Stem("avi"), "avi" );
	deepEqual( Stem("aviação"), "aviaçã" );
	deepEqual( Stem("aviador"), "aviador" );
	deepEqual( Stem("avião"), "aviã" );
	deepEqual( Stem("aviãozinho"), "aviãozinh" );
	deepEqual( Stem("aviation"), "aviation" );
	deepEqual( Stem("ávida"), "ávid" );
	deepEqual( Stem("avidamente"), "avid" );
	deepEqual( Stem("ávidas"), "ávid" );
	deepEqual( Stem("avidez"), "avidez" );
	deepEqual( Stem("ávido"), "ávid" );
	deepEqual( Stem("ávila"), "ávil" );
	deepEqual( Stem("avinagrar"), "avinagr" );
	deepEqual( Stem("aviões"), "aviõ" );
	deepEqual( Stem("avisa"), "avis" );
	deepEqual( Stem("avisá"), "avis" );
	deepEqual( Stem("avisado"), "avis" );
	deepEqual( Stem("avisados"), "avis" );
	deepEqual( Stem("avisamos"), "avis" );
	deepEqual( Stem("avisando"), "avis" );
	deepEqual( Stem("avisar"), "avis" );
	deepEqual( Stem("avisasse"), "avis" );
	deepEqual( Stem("avisei"), "avis" );
	deepEqual( Stem("aviso"), "avis" );
	deepEqual( Stem("avisou"), "avis" );
	deepEqual( Stem("avista"), "avist" );
	deepEqual( Stem("avistados"), "avist" );
	deepEqual( Stem("avistara"), "avist" );
	deepEqual( Stem("avistaram"), "avist" );
	deepEqual( Stem("avistou"), "avist" );
	deepEqual( Stem("aviv"), "aviv" );
	deepEqual( Stem("avó"), "avó" );
	deepEqual( Stem("avô"), "avô" );
	deepEqual( Stem("avon"), "avon" );
	deepEqual( Stem("avós"), "avós" );
	deepEqual( Stem("avulsas"), "avuls" );
	deepEqual( Stem("award"), "award" );
	deepEqual( Stem("awards"), "awards" );
	deepEqual( Stem("axé"), "axé" );
	deepEqual( Stem("axila"), "axil" );
	deepEqual( Stem("axilas"), "axil" );
	deepEqual( Stem("ayres"), "ayres" );
	deepEqual( Stem("ayrton"), "ayrton" );
	deepEqual( Stem("azar"), "azar" );
	deepEqual( Stem("azarados"), "azar" );
	deepEqual( Stem("azarão"), "azarã" );
	deepEqual( Stem("azarar"), "azar" );
	deepEqual( Stem("azedam"), "azed" );
	deepEqual( Stem("azedo"), "azed" );
	deepEqual( Stem("azeitada"), "azeit" );
	deepEqual( Stem("azeitado"), "azeit" );
	deepEqual( Stem("azeitona"), "azeiton" );
	deepEqual( Stem("azeredo"), "azered" );
	deepEqual( Stem("azevedo"), "azeved" );
	deepEqual( Stem("azia"), "azi" );
	deepEqual( Stem("azt"), "azt" );
	deepEqual( Stem("azuis"), "azu" );
	deepEqual( Stem("azul"), "azul" );
	deepEqual( Stem("azulados"), "azul" );
	deepEqual( Stem("azulejos"), "azulej" );
	deepEqual( Stem("b"), "b" );
	deepEqual( Stem("ba"), "ba" );
	deepEqual( Stem("bá"), "bá" );
	deepEqual( Stem("baba"), "bab" );
	deepEqual( Stem("babá"), "bab" );
	deepEqual( Stem("babaçu"), "babaçu" );
	deepEqual( Stem("babados"), "bab" );
	deepEqual( Stem("babalaô"), "babalaô" );
	deepEqual( Stem("babalorixá"), "babalorix" );
	deepEqual( Stem("babaquice"), "babaquic" );
	deepEqual( Stem("babás"), "babás" );
	deepEqual( Stem("babel"), "babel" );
	deepEqual( Stem("baby"), "baby" );
	deepEqual( Stem("bacalhau"), "bacalhau" );
	deepEqual( Stem("bacana"), "bacan" );
	deepEqual( Stem("bach"), "bach" );
	deepEqual( Stem("bacha"), "bach" );
	deepEqual( Stem("bacharel"), "bacharel" );
	deepEqual( Stem("bacia"), "bac" );
	deepEqual( Stem("bacias"), "bac" );
	deepEqual( Stem("bacilógena"), "bacilógen" );
	deepEqual( Stem("back"), "back" );
	deepEqual( Stem("backar"), "back" );
	deepEqual( Stem("bactérias"), "bactér" );
	deepEqual( Stem("bad"), "bad" );
	deepEqual( Stem("bada"), "bad" );
	deepEqual( Stem("badalação"), "badal" );
	deepEqual( Stem("badalações"), "badal" );
	deepEqual( Stem("badalada"), "badal" );
	deepEqual( Stem("badaladas"), "badal" );
	deepEqual( Stem("badalado"), "badal" );
	deepEqual( Stem("badalados"), "badal" );
	deepEqual( Stem("badan"), "badan" );
	deepEqual( Stem("baden"), "baden" );
	deepEqual( Stem("baderna"), "badern" );
	deepEqual( Stem("baderneiros"), "baderneir" );
	deepEqual( Stem("badulaques"), "badulaqu" );
	deepEqual( Stem("bafo"), "baf" );
	deepEqual( Stem("baforada"), "bafor" );
	deepEqual( Stem("baforadas"), "bafor" );
	deepEqual( Stem("bag"), "bag" );
	deepEqual( Stem("bagageiro"), "bagageir" );
	deepEqual( Stem("bagageiros"), "bagageir" );
	deepEqual( Stem("bagagem"), "bagag" );
	deepEqual( Stem("bagagens"), "bagagens" );
	deepEqual( Stem("bagatela"), "bagatel" );
	deepEqual( Stem("bagrezinho"), "bagrezinh" );
	deepEqual( Stem("bagunça"), "bagunc" );
	deepEqual( Stem("bagunçar"), "bagunc" );
	deepEqual( Stem("bahamas"), "baham" );
	deepEqual( Stem("bahia"), "bah" );
	deepEqual( Stem("baht"), "baht" );
	deepEqual( Stem("bahts"), "bahts" );
	deepEqual( Stem("baía"), "baí" );
	deepEqual( Stem("baiana"), "baian" );
	deepEqual( Stem("baianinho"), "baianinh" );
	deepEqual( Stem("baiano"), "baian" );
	deepEqual( Stem("baianos"), "baian" );
	deepEqual( Stem("baigal"), "baigal" );
	deepEqual( Stem("baikal"), "baikal" );
	deepEqual( Stem("baikonur"), "baikonur" );
	deepEqual( Stem("bailarina"), "bailarin" );
	deepEqual( Stem("bailarino"), "bailarin" );
	deepEqual( Stem("bailarinos"), "bailarin" );
	deepEqual( Stem("baile"), "bail" );
	deepEqual( Stem("bailes"), "bail" );
	deepEqual( Stem("bailo"), "bail" );
	deepEqual( Stem("bairro"), "bairr" );
	deepEqual( Stem("bairros"), "bairr" );
	deepEqual( Stem("baisch"), "baisch" );
	deepEqual( Stem("baita"), "bait" );
	deepEqual( Stem("baixa"), "baix" );
	deepEqual( Stem("baixada"), "baix" );
	deepEqual( Stem("baixar"), "baix" );
	deepEqual( Stem("baixaria"), "baix" );
	deepEqual( Stem("baixarias"), "baix" );
	deepEqual( Stem("baixas"), "baix" );
	deepEqual( Stem("baixe"), "baix" );
	deepEqual( Stem("baixelas"), "baixel" );
	deepEqual( Stem("baixinha"), "baixinh" );
	deepEqual( Stem("baixinhas"), "baixinh" );
	deepEqual( Stem("baixinho"), "baixinh" );
	deepEqual( Stem("baixinhos"), "baixinh" );
	deepEqual( Stem("baixo"), "baix" );
	deepEqual( Stem("baixos"), "baix" );
	deepEqual( Stem("baixou"), "baix" );
	deepEqual( Stem("bala"), "bal" );
	deepEqual( Stem("balabanian"), "balabanian" );
	deepEqual( Stem("balada"), "bal" );
	deepEqual( Stem("balança"), "balanc" );
	deepEqual( Stem("balançado"), "balanc" );
	deepEqual( Stem("balançando"), "balanc" );
	deepEqual( Stem("balanço"), "balanc" );
	deepEqual( Stem("balanços"), "balanc" );
	deepEqual( Stem("balão"), "balã" );
	deepEqual( Stem("balas"), "bal" );
	deepEqual( Stem("balbuciam"), "balbuc" );
	deepEqual( Stem("balbuciar"), "balbuc" );
	deepEqual( Stem("balbuciou"), "balbuc" );
	deepEqual( Stem("balbúrdia"), "balbúrd" );
	deepEqual( Stem("balcão"), "balcã" );
	deepEqual( Stem("balconista"), "balcon" );
	deepEqual( Stem("balconistas"), "balcon" );
	deepEqual( Stem("baldaracci"), "baldaracc" );
	deepEqual( Stem("balde"), "bald" );
	deepEqual( Stem("baldes"), "bald" );
	deepEqual( Stem("baldio"), "baldi" );
	deepEqual( Stem("balé"), "bal" );
	deepEqual( Stem("baleado"), "bal" );
	deepEqual( Stem("balear"), "bal" );
	deepEqual( Stem("baleia"), "bal" );
	deepEqual( Stem("baleias"), "bal" );
	deepEqual( Stem("baleiro"), "baleir" );
	deepEqual( Stem("bali"), "bal" );
	deepEqual( Stem("balido"), "bal" );
	deepEqual( Stem("balizamento"), "baliz" );
	deepEqual( Stem("balizar"), "baliz" );
	deepEqual( Stem("balneário"), "balneári" );
	deepEqual( Stem("balneários"), "balneári" );
	deepEqual( Stem("balões"), "balõ" );
	deepEqual( Stem("balsa"), "bals" );
	deepEqual( Stem("bálsamos"), "báls" );
	deepEqual( Stem("baltimore"), "baltimor" );
	deepEqual( Stem("baluarte"), "baluart" );
	deepEqual( Stem("bamba"), "bamb" );
	deepEqual( Stem("bambas"), "bamb" );
	deepEqual( Stem("bambi"), "bamb" );
	deepEqual( Stem("bamerindus"), "bamerindus" );
	deepEqual( Stem("ban"), "ban" );
	deepEqual( Stem("banais"), "ban" );
	deepEqual( Stem("banal"), "banal" );
	deepEqual( Stem("banalização"), "banaliz" );
	deepEqual( Stem("banalizar"), "banaliz" );
	deepEqual( Stem("banana"), "banan" );
	deepEqual( Stem("bananas"), "banan" );
	deepEqual( Stem("bananeiras"), "bananeir" );
	deepEqual( Stem("banca"), "banc" );
	deepEqual( Stem("bancada"), "banc" );
	deepEqual( Stem("bancadas"), "banc" );
	deepEqual( Stem("bancados"), "banc" );
	deepEqual( Stem("bancaire"), "bancair" );
	deepEqual( Stem("bancar"), "banc" );
	deepEqual( Stem("bancária"), "bancár" );
	deepEqual( Stem("bancárias"), "bancár" );
	deepEqual( Stem("bancário"), "bancári" );
	deepEqual( Stem("bancários"), "bancári" );
	deepEqual( Stem("bancas"), "banc" );
	deepEqual( Stem("banco"), "banc" );
	deepEqual( Stem("bancos"), "banc" );
	deepEqual( Stem("bancou"), "banc" );
	deepEqual( Stem("band"), "band" );
	deepEqual( Stem("banda"), "band" );
	deepEqual( Stem("bandana"), "bandan" );
	deepEqual( Stem("bandas"), "band" );
	deepEqual( Stem("bandeia"), "band" );
	deepEqual( Stem("bandeira"), "bandeir" );
	deepEqual( Stem("bandeirantes"), "bandeir" );
	deepEqual( Stem("bandeiras"), "bandeir" );
	deepEqual( Stem("bandeirinha"), "bandeirinh" );
	deepEqual( Stem("bandeja"), "bandej" );
	deepEqual( Stem("bandeou"), "band" );
	deepEqual( Stem("bandido"), "band" );
	deepEqual( Stem("bandidos"), "band" );
	deepEqual( Stem("bando"), "band" );
	deepEqual( Stem("bandos"), "band" );
	deepEqual( Stem("banerj"), "banerj" );
	deepEqual( Stem("banespa"), "banesp" );
	deepEqual( Stem("bang"), "bang" );
	deepEqual( Stem("bangalôs"), "bangalôs" );
	deepEqual( Stem("bangcoc"), "bangcoc" );
	deepEqual( Stem("bangoc"), "bangoc" );
	deepEqual( Stem("bangu"), "bangu" );
	deepEqual( Stem("bangue"), "bang" );
	deepEqual( Stem("bangues"), "bangu" );
	deepEqual( Stem("banha"), "banh" );
	deepEqual( Stem("banhas"), "banh" );
	deepEqual( Stem("banheira"), "banheir" );
	deepEqual( Stem("banheiro"), "banheir" );
	deepEqual( Stem("banheiros"), "banheir" );
	deepEqual( Stem("banho"), "banh" );
	deepEqual( Stem("banhos"), "banh" );
	deepEqual( Stem("banido"), "ban" );
	deepEqual( Stem("banir"), "ban" );
	deepEqual( Stem("banis"), "ban" );
	deepEqual( Stem("baniu"), "ban" );
	deepEqual( Stem("bank"), "bank" );
	deepEqual( Stem("banking"), "banking" );
	deepEqual( Stem("banks"), "banks" );
	deepEqual( Stem("banque"), "banqu" );
	deepEqual( Stem("banqueiro"), "banqueir" );
	deepEqual( Stem("banqueiros"), "banqueir" );
	deepEqual( Stem("banqueteira"), "banqueteir" );
	deepEqual( Stem("bantim"), "bantim" );
	deepEqual( Stem("banzeco"), "banzec" );
	deepEqual( Stem("banzer"), "banz" );
	deepEqual( Stem("baptista"), "baptist" );
	deepEqual( Stem("baque"), "baqu" );
	deepEqual( Stem("bar"), "bar" );
	deepEqual( Stem("baralho"), "baralh" );
	deepEqual( Stem("barão"), "barã" );
	deepEqual( Stem("barassal"), "barassal" );
	deepEqual( Stem("barata"), "barat" );
	deepEqual( Stem("baratas"), "barat" );
	deepEqual( Stem("barateará"), "barat" );
	deepEqual( Stem("barateia"), "barat" );
	deepEqual( Stem("baratíssimos"), "baratíss" );
	deepEqual( Stem("barato"), "barat" );
	deepEqual( Stem("baratos"), "barat" );
	deepEqual( Stem("barba"), "barb" );
	deepEqual( Stem("barbacena"), "barbacen" );
	deepEqual( Stem("barbalho"), "barbalh" );
	deepEqual( Stem("barbara"), "barb" );
	deepEqual( Stem("barbaridades"), "barbar" );
	deepEqual( Stem("barbárie"), "barbári" );
	deepEqual( Stem("barbarismo"), "barbar" );
	deepEqual( Stem("barbariza"), "barbariz" );
	deepEqual( Stem("bárbaro"), "bárbar" );
	deepEqual( Stem("bárbaros"), "bárbar" );
	deepEqual( Stem("barbas"), "barb" );
	deepEqual( Stem("barbeado"), "barb" );
	deepEqual( Stem("barbear"), "barb" );
	deepEqual( Stem("barbearias"), "barb" );
	deepEqual( Stem("barbeiragem"), "barbeirag" );
	deepEqual( Stem("barbeiro"), "barbeir" );
	deepEqual( Stem("barbeiros"), "barbeir" );
	deepEqual( Stem("barbie"), "barbi" );
	deepEqual( Stem("barbitúricos"), "barbitúr" );
	deepEqual( Stem("barbosa"), "barbos" );
	deepEqual( Stem("barbudos"), "barbud" );
	deepEqual( Stem("barcaças"), "barcac" );
	deepEqual( Stem("barcelos"), "barcel" );
	deepEqual( Stem("barco"), "barc" );
	deepEqual( Stem("barcos"), "barc" );
	deepEqual( Stem("bardo"), "bard" );
	deepEqual( Stem("bares"), "bar" );
	deepEqual( Stem("barganha"), "barganh" );
	deepEqual( Stem("barganhar"), "barganh" );
	deepEqual( Stem("bariloche"), "bariloch" );
	deepEqual( Stem("barítono"), "baríton" );
	deepEqual( Stem("barkopolos"), "barkopol" );
	deepEqual( Stem("barman"), "barman" );
	deepEqual( Stem("barn"), "barn" );
	deepEqual( Stem("barnes"), "barn" );
	deepEqual( Stem("barões"), "barõ" );
	deepEqual( Stem("baron"), "baron" );
	deepEqual( Stem("baroni"), "baron" );
	deepEqual( Stem("barra"), "barr" );
	deepEqual( Stem("barraca"), "barrac" );
	deepEqual( Stem("barracas"), "barrac" );
	deepEqual( Stem("barraco"), "barrac" );
	deepEqual( Stem("barracões"), "barracõ" );
	deepEqual( Stem("barracos"), "barrac" );
	deepEqual( Stem("barrado"), "barr" );
	deepEqual( Stem("barrados"), "barr" );
	deepEqual( Stem("barragens"), "barragens" );
	deepEqual( Stem("barram"), "barr" );
	deepEqual( Stem("barranco"), "barranc" );
	deepEqual( Stem("barrancos"), "barranc" );
	deepEqual( Stem("barrando"), "barr" );
	deepEqual( Stem("barrar"), "barr" );
	deepEqual( Stem("barras"), "barr" );
	deepEqual( Stem("barraviera"), "barravi" );
	deepEqual( Stem("barre"), "barr" );
	deepEqual( Stem("barreira"), "barreir" );
	deepEqual( Stem("barreiras"), "barreir" );
	deepEqual( Stem("barrentas"), "barrent" );
	deepEqual( Stem("barreto"), "barret" );
	deepEqual( Stem("barriga"), "barrig" );
	deepEqual( Stem("barrigudo"), "barrigud" );
	deepEqual( Stem("barril"), "barril" );
	deepEqual( Stem("barris"), "barr" );
	deepEqual( Stem("barro"), "barr" );
	deepEqual( Stem("barros"), "barr" );
	deepEqual( Stem("barroso"), "barros" );
	deepEqual( Stem("bartolomeu"), "bartolom" );
	deepEqual( Stem("barulhento"), "barulhent" );
	deepEqual( Stem("barulhentos"), "barulhent" );
	deepEqual( Stem("barulho"), "barulh" );
	deepEqual( Stem("barulhos"), "barulh" );
	deepEqual( Stem("barzinho"), "barzinh" );
	deepEqual( Stem("barzinhos"), "barzinh" );
	deepEqual( Stem("basbaum"), "basbaum" );
	deepEqual( Stem("base"), "bas" );
	deepEqual( Stem("baseada"), "bas" );
	deepEqual( Stem("baseadas"), "bas" );
	deepEqual( Stem("baseado"), "bas" );
	deepEqual( Stem("baseia"), "bas" );
	deepEqual( Stem("baseiam"), "bas" );
	deepEqual( Stem("baseou"), "bas" );
	deepEqual( Stem("bases"), "bas" );
	deepEqual( Stem("básica"), "básic" );
	deepEqual( Stem("basicamente"), "basic" );
	deepEqual( Stem("básicas"), "básic" );
	deepEqual( Stem("básico"), "básic" );
	deepEqual( Stem("básicos"), "básic" );
	deepEqual( Stem("basílica"), "basíl" );
	deepEqual( Stem("basquete"), "basquet" );
	deepEqual( Stem("basso"), "bass" );
	deepEqual( Stem("bassoleil"), "bassoleil" );
	deepEqual( Stem("basta"), "bast" );
	deepEqual( Stem("bastante"), "bastant" );
	deepEqual( Stem("bastaria"), "bast" );
	deepEqual( Stem("bastasse"), "bast" );
	deepEqual( Stem("bastassem"), "bast" );
	deepEqual( Stem("bastava"), "bast" );
	deepEqual( Stem("bastidores"), "bastidor" );
	deepEqual( Stem("bastos"), "bast" );
	deepEqual( Stem("bastou"), "bast" );
	deepEqual( Stem("batalha"), "batalh" );
	deepEqual( Stem("batalham"), "batalh" );
	deepEqual( Stem("batalhão"), "batalhã" );
	deepEqual( Stem("batalhar"), "batalh" );
	deepEqual( Stem("batalhas"), "batalh" );
	deepEqual( Stem("batalhões"), "batalhõ" );
	deepEqual( Stem("batalhou"), "batalh" );
	deepEqual( Stem("batata"), "batat" );
	deepEqual( Stem("batatas"), "batat" );
	deepEqual( Stem("bate"), "bat" );
	deepEqual( Stem("batedores"), "batedor" );
	deepEqual( Stem("batelada"), "batel" );
	deepEqual( Stem("batem"), "bat" );
	deepEqual( Stem("batendo"), "bat" );
	deepEqual( Stem("batente"), "batent" );
	deepEqual( Stem("bater"), "bat" );
	deepEqual( Stem("baterá"), "bat" );
	deepEqual( Stem("bateria"), "bat" );
	deepEqual( Stem("baterias"), "bat" );
	deepEqual( Stem("baterista"), "bater" );
	deepEqual( Stem("batesse"), "bat" );
	deepEqual( Stem("bateu"), "bat" );
	deepEqual( Stem("bati"), "bat" );
	deepEqual( Stem("batia"), "bat" );
	deepEqual( Stem("batiam"), "bat" );
	deepEqual( Stem("batida"), "bat" );
	deepEqual( Stem("batido"), "bat" );
	deepEqual( Stem("batidos"), "bat" );
	deepEqual( Stem("batimento"), "batiment" );
	deepEqual( Stem("batismo"), "batism" );
	deepEqual( Stem("batismos"), "batism" );
	deepEqual( Stem("batista"), "batist" );
	deepEqual( Stem("batistas"), "batist" );
	deepEqual( Stem("batiza"), "batiz" );
	deepEqual( Stem("batizada"), "batiz" );
	deepEqual( Stem("batizadas"), "batiz" );
	deepEqual( Stem("batizado"), "batiz" );
	deepEqual( Stem("batizados"), "batiz" );
	deepEqual( Stem("batizou"), "batiz" );
	deepEqual( Stem("batom"), "batom" );
	deepEqual( Stem("batons"), "batons" );
	deepEqual( Stem("battistella"), "battistell" );
	deepEqual( Stem("batucada"), "batuc" );
	deepEqual( Stem("batucar"), "batuc" );
	deepEqual( Stem("batuta"), "batut" );
	deepEqual( Stem("baumgarten"), "baumgarten" );
	deepEqual( Stem("baunilha"), "baunilh" );
	deepEqual( Stem("bauzys"), "bauzys" );
	deepEqual( Stem("bavária"), "bavár" );
	deepEqual( Stem("bazaar"), "baza" );
	deepEqual( Stem("bazar"), "baz" );
	deepEqual( Stem("bb"), "bb" );
	deepEqual( Stem("bba"), "bba" );
	deepEqual( Stem("bbc"), "bbc" );
	deepEqual( Stem("bc"), "bc" );
	deepEqual( Stem("bchara"), "bchar" );
	deepEqual( Stem("bcn"), "bcn" );
	deepEqual( Stem("bcr"), "bcr" );
	deepEqual( Stem("be"), "be" );
	deepEqual( Stem("bê"), "bê" );
	deepEqual( Stem("bea"), "bea" );
	deepEqual( Stem("beak"), "beak" );
	deepEqual( Stem("beat"), "beat" );
	deepEqual( Stem("beatificação"), "beatific" );
	deepEqual( Stem("beatificados"), "beatific" );
	deepEqual( Stem("beatlemaníaco"), "beatlemaníac" );
	deepEqual( Stem("beatles"), "beatl" );
	deepEqual( Stem("beato"), "beat" );
	deepEqual( Stem("beatos"), "beat" );
	deepEqual( Stem("beatriz"), "beatriz" );
	deepEqual( Stem("beautiful"), "beautiful" );
	deepEqual( Stem("beauvoir"), "beauvo" );
	deepEqual( Stem("beaux"), "beaux" );
	deepEqual( Stem("bêbada"), "bêb" );
	deepEqual( Stem("bêbado"), "bêb" );
	deepEqual( Stem("bêbados"), "bêb" );
	deepEqual( Stem("bebam"), "beb" );
	deepEqual( Stem("bebe"), "beb" );
	deepEqual( Stem("bebê"), "beb" );
	deepEqual( Stem("bebedeira"), "bebedeir" );
	deepEqual( Stem("bebedeiras"), "bebedeir" );
	deepEqual( Stem("bebedouro"), "bebedour" );
	deepEqual( Stem("bebem"), "beb" );
	deepEqual( Stem("bebendo"), "beb" );
	deepEqual( Stem("beber"), "beb" );
	deepEqual( Stem("bebericar"), "beberic" );
	deepEqual( Stem("bebes"), "beb" );
	deepEqual( Stem("bebês"), "bebês" );
	deepEqual( Stem("bebesse"), "beb" );
	deepEqual( Stem("bebete"), "bebet" );
	deepEqual( Stem("bebeto"), "bebet" );
	deepEqual( Stem("bebia"), "beb" );
	deepEqual( Stem("bebiam"), "beb" );
	deepEqual( Stem("bebida"), "beb" );
	deepEqual( Stem("bebidas"), "beb" );
	deepEqual( Stem("bec"), "bec" );
	deepEqual( Stem("beca"), "bec" );
	deepEqual( Stem("becker"), "beck" );
	deepEqual( Stem("beco"), "bec" );
	deepEqual( Stem("becomes"), "becom" );
	deepEqual( Stem("becos"), "bec" );
	deepEqual( Stem("bege"), "beg" );
	deepEqual( Stem("beihai"), "beiha" );
	deepEqual( Stem("beija"), "beij" );
	deepEqual( Stem("beijá"), "beij" );
	deepEqual( Stem("beijado"), "beij" );
	deepEqual( Stem("beijando"), "beij" );
	deepEqual( Stem("beijar"), "beij" );
	deepEqual( Stem("beijaram"), "beij" );
	deepEqual( Stem("beijinhos"), "beijinh" );
	deepEqual( Stem("beijo"), "beij" );
	deepEqual( Stem("beijos"), "beij" );
	deepEqual( Stem("beijou"), "beij" );
	deepEqual( Stem("beira"), "beir" );
	deepEqual( Stem("beiram"), "beir" );
	deepEqual( Stem("beirute"), "beirut" );
	deepEqual( Stem("beisebol"), "beisebol" );
	deepEqual( Stem("beisiegel"), "beisiegel" );
	deepEqual( Stem("beitszaerhu"), "beitszaerhu" );
	deepEqual( Stem("bekaa"), "beka" );
	deepEqual( Stem("bekierman"), "bekierman" );
	deepEqual( Stem("bel"), "bel" );
	deepEqual( Stem("bela"), "bel" );
	deepEqual( Stem("belas"), "bel" );
	deepEqual( Stem("belchior"), "belchior" );
	deepEqual( Stem("beldades"), "beldad" );
	deepEqual( Stem("beleléu"), "beleléu" );
	deepEqual( Stem("belém"), "belém" );
	deepEqual( Stem("beleza"), "belez" );
	deepEqual( Stem("belezas"), "belez" );
	deepEqual( Stem("belga"), "belg" );
	deepEqual( Stem("bélgica"), "bélgic" );
	deepEqual( Stem("belgo"), "belg" );
	deepEqual( Stem("beliches"), "belich" );
	deepEqual( Stem("belicosa"), "belic" );
	deepEqual( Stem("belicoso"), "belic" );
	deepEqual( Stem("beliscam"), "belisc" );
	deepEqual( Stem("beliscamos"), "belisc" );
	deepEqual( Stem("beliscando"), "belisc" );
	deepEqual( Stem("beliscão"), "beliscã" );
	deepEqual( Stem("beliscar"), "belisc" );
	deepEqual( Stem("beliscões"), "beliscõ" );
	deepEqual( Stem("belíssimo"), "belíssim" );
	deepEqual( Stem("bell"), "bell" );
	deepEqual( Stem("bellini"), "bellin" );
	deepEqual( Stem("bellsouth"), "bellsouth" );
	deepEqual( Stem("belmondo"), "belmond" );
	deepEqual( Stem("belo"), "bel" );
	deepEqual( Stem("belos"), "bel" );
	deepEqual( Stem("beltrame"), "beltram" );
	deepEqual( Stem("beltran"), "beltran" );
	deepEqual( Stem("beltrão"), "beltrã" );
	deepEqual( Stem("bem"), "bem" );
	deepEqual( Stem("ben"), "ben" );
	deepEqual( Stem("benatti"), "benatt" );
	deepEqual( Stem("bênção"), "bênçã" );
	deepEqual( Stem("benedita"), "benedit" );
	deepEqual( Stem("benedito"), "benedit" );
	deepEqual( Stem("beneducci"), "beneducc" );
	deepEqual( Stem("benéfica"), "benéf" );
	deepEqual( Stem("beneficência"), "beneficent" );
	deepEqual( Stem("beneficente"), "beneficent" );
	deepEqual( Stem("beneficentes"), "beneficent" );
	deepEqual( Stem("beneficia"), "benefic" );
	deepEqual( Stem("beneficiada"), "benefic" );
	deepEqual( Stem("beneficiado"), "benefic" );
	deepEqual( Stem("beneficiados"), "benefic" );
	deepEqual( Stem("beneficiamento"), "benefic" );
	deepEqual( Stem("beneficiando"), "benefic" );
	deepEqual( Stem("beneficiar"), "benefic" );
	deepEqual( Stem("beneficiaram"), "benefic" );
	deepEqual( Stem("beneficiários"), "beneficiári" );
	deepEqual( Stem("beneficiava"), "benefic" );
	deepEqual( Stem("beneficiavam"), "benefic" );
	deepEqual( Stem("benefício"), "benefíci" );
	deepEqual( Stem("benefícios"), "benefíci" );
	deepEqual( Stem("beneficiou"), "benefic" );
	deepEqual( Stem("benéfico"), "benéf" );
	deepEqual( Stem("benesses"), "ben" );
	deepEqual( Stem("benevolência"), "benevolent" );
	deepEqual( Stem("benfeitor"), "benfeitor" );
	deepEqual( Stem("benfeitores"), "benfeitor" );
	deepEqual( Stem("benigna"), "benign" );
	deepEqual( Stem("benigno"), "benign" );
	deepEqual( Stem("benignos"), "benign" );
	deepEqual( Stem("benin"), "benin" );
	deepEqual( Stem("benitez"), "benitez" );
	deepEqual( Stem("benito"), "benit" );
	deepEqual( Stem("benja"), "benj" );
	deepEqual( Stem("benjamim"), "benjamim" );
	deepEqual( Stem("benjamin"), "benjamin" );
	deepEqual( Stem("bens"), "bens" );
	deepEqual( Stem("bento"), "bent" );
	deepEqual( Stem("benz"), "benz" );
	deepEqual( Stem("benzedeira"), "benzedeir" );
	deepEqual( Stem("benzedeiras"), "benzedeir" );
	deepEqual( Stem("benzedura"), "benzedur" );
	deepEqual( Stem("benzer"), "benz" );
	deepEqual( Stem("benzidos"), "benz" );
	deepEqual( Stem("beraldo"), "berald" );
	deepEqual( Stem("berço"), "berc" );
	deepEqual( Stem("beredo"), "bered" );
	deepEqual( Stem("berenice"), "berenic" );
	deepEqual( Stem("bergamin"), "bergamin" );
	deepEqual( Stem("bergen"), "bergen" );
	deepEqual( Stem("bergkamp"), "bergkamp" );
	deepEqual( Stem("bergman"), "bergman" );
	deepEqual( Stem("béria"), "bér" );
	deepEqual( Stem("berimbau"), "berimbau" );
	deepEqual( Stem("berimbaus"), "berimbaus" );
	deepEqual( Stem("berkeley"), "berkeley" );
	deepEqual( Stem("berlim"), "berlim" );
	deepEqual( Stem("berlinda"), "berlind" );
	deepEqual( Stem("bermuda"), "bermud" );
	deepEqual( Stem("bermudão"), "bermudã" );
	deepEqual( Stem("bermudas"), "bermud" );
	deepEqual( Stem("bernard"), "bernard" );
	deepEqual( Stem("bernarda"), "bernard" );
	deepEqual( Stem("bernardes"), "bern" );
	deepEqual( Stem("bernardino"), "bernardin" );
	deepEqual( Stem("bernardo"), "bernard" );
	deepEqual( Stem("beron"), "beron" );
	deepEqual( Stem("berra"), "berr" );
	deepEqual( Stem("berrante"), "berrant" );
	deepEqual( Stem("berrio"), "berri" );
	deepEqual( Stem("berro"), "berr" );
	deepEqual( Stem("bert"), "bert" );
	deepEqual( Stem("bertoli"), "bertol" );
	deepEqual( Stem("bertolozzi"), "bertolozz" );
	deepEqual( Stem("bertrand"), "bertrand" );
	deepEqual( Stem("besc"), "besc" );
	deepEqual( Stem("bessa"), "bess" );
	deepEqual( Stem("besserman"), "besserman" );
	deepEqual( Stem("bessie"), "bessi" );
	deepEqual( Stem("best"), "best" );
	deepEqual( Stem("besta"), "best" );
	deepEqual( Stem("besteira"), "besteir" );
	deepEqual( Stem("beta"), "bet" );
	deepEqual( Stem("betaendorfinas"), "betaendorfin" );
	deepEqual( Stem("betancourt"), "betancourt" );
	deepEqual( Stem("betânia"), "betân" );
	deepEqual( Stem("bete"), "bet" );
	deepEqual( Stem("beterraba"), "beterrab" );
	deepEqual( Stem("beth"), "beth" );
	deepEqual( Stem("bethânia"), "bethân" );
	deepEqual( Stem("bethesda"), "bethesd" );
	deepEqual( Stem("betim"), "betim" );
	deepEqual( Stem("betinho"), "betinh" );
	deepEqual( Stem("beto"), "bet" );
	deepEqual( Stem("betti"), "bett" );
	deepEqual( Stem("betto"), "bett" );
	deepEqual( Stem("betty"), "betty" );
	deepEqual( Stem("bétulas"), "bétul" );
	deepEqual( Stem("betzig"), "betzig" );
	deepEqual( Stem("bexiga"), "bexig" );
	deepEqual( Stem("bezerra"), "bezerr" );
	deepEqual( Stem("bezerros"), "bezerr" );
	deepEqual( Stem("bh"), "bh" );
	deepEqual( Stem("bhopal"), "bhopal" );
	deepEqual( Stem("bhumibol"), "bhumibol" );
	deepEqual( Stem("bia"), "bia" );
	deepEqual( Stem("bial"), "bial" );
	deepEqual( Stem("biancarelli"), "biancarell" );
	deepEqual( Stem("bianchi"), "bianch" );
	deepEqual( Stem("bianco"), "bianc" );
	deepEqual( Stem("biba"), "bib" );
	deepEqual( Stem("bibelôs"), "bibelôs" );
	deepEqual( Stem("bibi"), "bib" );
	deepEqual( Stem("bible"), "bibl" );
	deepEqual( Stem("bíblia"), "bíbl" );
	deepEqual( Stem("bíblias"), "bíbl" );
	deepEqual( Stem("bíblica"), "bíblic" );
	deepEqual( Stem("bíblicas"), "bíblic" );
	deepEqual( Stem("bíblico"), "bíblic" );
	deepEqual( Stem("bíblicos"), "bíblic" );
	deepEqual( Stem("bibliófila"), "bibliófil" );
	deepEqual( Stem("biblioteca"), "bibliotec" );
	deepEqual( Stem("bibliotecas"), "bibliotec" );
	deepEqual( Stem("bicampeão"), "bicampeã" );
	deepEqual( Stem("bicha"), "bich" );
	deepEqual( Stem("bicheiro"), "bicheir" );
	deepEqual( Stem("bicheiros"), "bicheir" );
	deepEqual( Stem("bichinhos"), "bichinh" );
	deepEqual( Stem("bicho"), "bich" );
	deepEqual( Stem("bichões"), "bichõ" );
	deepEqual( Stem("bichos"), "bich" );
	deepEqual( Stem("bichou"), "bich" );
	deepEqual( Stem("bicicleta"), "biciclet" );
	deepEqual( Stem("bicicletas"), "biciclet" );
	deepEqual( Stem("bico"), "bic" );
	deepEqual( Stem("bicos"), "bic" );
	deepEqual( Stem("bicudo"), "bicud" );
	deepEqual( Stem("bidê"), "bid" );
	deepEqual( Stem("bié"), "bié" );
	deepEqual( Stem("bienal"), "bienal" );
	deepEqual( Stem("bier"), "bier" );
	deepEqual( Stem("bife"), "bif" );
	deepEqual( Stem("big"), "big" );
	deepEqual( Stem("bigodão"), "bigodã" );
	deepEqual( Stem("bigode"), "bigod" );
	deepEqual( Stem("bigodudos"), "bigodud" );
	deepEqual( Stem("bijuterias"), "bijut" );
	deepEqual( Stem("bikini"), "bikin" );
	deepEqual( Stem("bikinianos"), "bikinian" );
	deepEqual( Stem("bilhão"), "bilhã" );
	deepEqual( Stem("bilhete"), "bilhet" );
	deepEqual( Stem("bilheteria"), "bilhet" );
	deepEqual( Stem("bilhetes"), "bilhet" );
	deepEqual( Stem("bilhões"), "bilhõ" );
	deepEqual( Stem("bilíngue"), "bilíng" );
	deepEqual( Stem("bilíngues"), "bilíngu" );
	deepEqual( Stem("bilionárias"), "bilionár" );
	deepEqual( Stem("bilionário"), "bilionári" );
	deepEqual( Stem("bilionários"), "bilionári" );
	deepEqual( Stem("bill"), "bill" );
	deepEqual( Stem("billings"), "billings" );
	deepEqual( Stem("billo"), "bill" );
	deepEqual( Stem("billy"), "billy" );
	deepEqual( Stem("bilro"), "bilr" );
	deepEqual( Stem("bimestre"), "bimestr" );
	deepEqual( Stem("bimotores"), "bimotor" );
	deepEqual( Stem("bind"), "bind" );
	deepEqual( Stem("bingo"), "bing" );
	deepEqual( Stem("binoche"), "binoch" );
	deepEqual( Stem("bio"), "bio" );
	deepEqual( Stem("biodiversidade"), "biodivers" );
	deepEqual( Stem("biografia"), "biograf" );
	deepEqual( Stem("biográfico"), "biográf" );
	deepEqual( Stem("biógrafos"), "biógraf" );
	deepEqual( Stem("bióloga"), "biólog" );
	deepEqual( Stem("biologia"), "biolog" );
	deepEqual( Stem("biológica"), "biológ" );
	deepEqual( Stem("biológicas"), "biológ" );
	deepEqual( Stem("biológico"), "biológ" );
	deepEqual( Stem("biológicos"), "biológ" );
	deepEqual( Stem("biólogo"), "biólog" );
	deepEqual( Stem("biólogos"), "biólog" );
	deepEqual( Stem("biomédica"), "bioméd" );
	deepEqual( Stem("biomédico"), "bioméd" );
	deepEqual( Stem("biópsia"), "bióps" );
	deepEqual( Stem("bioquímica"), "bioquím" );
	deepEqual( Stem("bioquímicos"), "bioquím" );
	deepEqual( Stem("biotecnologia"), "biotecnolog" );
	deepEqual( Stem("biotipo"), "biotip" );
	deepEqual( Stem("bip"), "bip" );
	deepEqual( Stem("bípede"), "bíped" );
	deepEqual( Stem("bips"), "bips" );
	deepEqual( Stem("biquíni"), "biquín" );
	deepEqual( Stem("biquínis"), "biquín" );
	deepEqual( Stem("birulio"), "biruli" );
	deepEqual( Stem("bis"), "bis" );
	deepEqual( Stem("bisavô"), "bisavô" );
	deepEqual( Stem("bisavós"), "bisavós" );
	deepEqual( Stem("bisbilhotar"), "bisbilhot" );
	deepEqual( Stem("biscoito"), "biscoit" );
	deepEqual( Stem("biscoitos"), "biscoit" );
	deepEqual( Stem("bismarck"), "bismarck" );
	deepEqual( Stem("bispa"), "bisp" );
	deepEqual( Stem("bispo"), "bisp" );
	deepEqual( Stem("bispos"), "bisp" );
	deepEqual( Stem("bissexto"), "bissext" );
	deepEqual( Stem("bissexuais"), "bissexu" );
	deepEqual( Stem("bistrô"), "bistrô" );
	deepEqual( Stem("bistrôs"), "bistrôs" );
	deepEqual( Stem("bisturi"), "bistur" );
	deepEqual( Stem("bita"), "bit" );
	deepEqual( Stem("bits"), "bits" );
	deepEqual( Stem("bixiga"), "bixig" );
	deepEqual( Stem("bizantina"), "bizantin" );
	deepEqual( Stem("bizantino"), "bizantin" );
	deepEqual( Stem("bizantinos"), "bizantin" );
	deepEqual( Stem("bizarra"), "bizarr" );
	deepEqual( Stem("bizarras"), "bizarr" );
	deepEqual( Stem("bizarrices"), "bizarric" );
	deepEqual( Stem("bizz"), "bizz" );
	deepEqual( Stem("bjorn"), "bjorn" );
	deepEqual( Stem("black"), "black" );
	deepEqual( Stem("blague"), "blag" );
	deepEqual( Stem("blair"), "bla" );
	deepEqual( Stem("blairo"), "blair" );
	deepEqual( Stem("blanc"), "blanc" );
	deepEqual( Stem("blanchard"), "blanchard" );
	deepEqual( Stem("blanco"), "blanc" );
	deepEqual( Stem("blanqui"), "blanqu" );
	deepEqual( Stem("blazer"), "blaz" );
	deepEqual( Stem("blazers"), "blazers" );
	deepEqual( Stem("blecaute"), "blecaut" );
	deepEqual( Stem("blecautes"), "blecaut" );
	deepEqual( Stem("blecher"), "blech" );
	deepEqual( Stem("blefe"), "blef" );
	deepEqual( Stem("blend"), "blend" );
	deepEqual( Stem("blends"), "blends" );
	deepEqual( Stem("blindado"), "blind" );
	deepEqual( Stem("blindados"), "blind" );
	deepEqual( Stem("blitz"), "blitz" );
	deepEqual( Stem("bloch"), "bloch" );
	deepEqual( Stem("blocker"), "block" );
	deepEqual( Stem("bloco"), "bloc" );
	deepEqual( Stem("blocos"), "bloc" );
	deepEqual( Stem("bloqueadoras"), "bloqueador" );
	deepEqual( Stem("bloqueadores"), "bloqueador" );
	deepEqual( Stem("bloquear"), "bloqu" );
	deepEqual( Stem("bloqueia"), "bloqu" );
	deepEqual( Stem("bloqueiam"), "bloqu" );
	deepEqual( Stem("bloqueio"), "bloquei" );
	deepEqual( Stem("bloquinho"), "bloquinh" );
	deepEqual( Stem("bloris"), "blor" );
	deepEqual( Stem("blue"), "blu" );
	deepEqual( Stem("blues"), "blu" );
	deepEqual( Stem("blumenau"), "blumenau" );
	deepEqual( Stem("blusa"), "blus" );
	deepEqual( Stem("blush"), "blush" );
	deepEqual( Stem("blushes"), "blush" );
	deepEqual( Stem("blusinhas"), "blusinh" );
	deepEqual( Stem("bmc"), "bmc" );
	deepEqual( Stem("bmg"), "bmg" );
	deepEqual( Stem("bmi"), "bmi" );
	deepEqual( Stem("bmw"), "bmw" );
	deepEqual( Stem("bndes"), "bndes" );
	deepEqual( Stem("boa"), "boa" );
	deepEqual( Stem("boainain"), "boainain" );
	deepEqual( Stem("boas"), "boas" );
	deepEqual( Stem("bôas"), "bôas" );
	deepEqual( Stem("boassu"), "boassu" );
	deepEqual( Stem("boataria"), "boat" );
	deepEqual( Stem("boate"), "boat" );
	deepEqual( Stem("boates"), "boat" );
	deepEqual( Stem("boatos"), "boat" );
	deepEqual( Stem("bob"), "bob" );
	deepEqual( Stem("boba"), "bob" );
	deepEqual( Stem("bobagem"), "bobag" );
	deepEqual( Stem("bobagens"), "bobagens" );
	deepEqual( Stem("bobalhões"), "bobalhõ" );
	deepEqual( Stem("bobear"), "bob" );
	deepEqual( Stem("bobeira"), "bobeir" );
	deepEqual( Stem("bobinho"), "bobinh" );
	deepEqual( Stem("bobinhos"), "bobinh" );
	deepEqual( Stem("bobo"), "bob" );
	deepEqual( Stem("bobs"), "bobs" );
	deepEqual( Stem("boca"), "boc" );
	deepEqual( Stem("bocadas"), "boc" );
	deepEqual( Stem("bocadinho"), "bocadinh" );
	deepEqual( Stem("bocado"), "boc" );
	deepEqual( Stem("bocaiúva"), "bocaiúv" );
	deepEqual( Stem("boçal"), "boçal" );
	deepEqual( Stem("bocarra"), "bocarr" );
	deepEqual( Stem("bocas"), "boc" );
	deepEqual( Stem("bode"), "bod" );
	deepEqual( Stem("bodoque"), "bodoqu" );
	deepEqual( Stem("body"), "body" );
	deepEqual( Stem("boeing"), "boeing" );
	deepEqual( Stem("boem"), "boem" );
	deepEqual( Stem("boemia"), "boem" );
	deepEqual( Stem("boêmio"), "boêmi" );
	deepEqual( Stem("boêmios"), "boêmi" );
	deepEqual( Stem("bogotá"), "bogot" );
	deepEqual( Stem("boi"), "boi" );
	deepEqual( Stem("bóia"), "bói" );
	deepEqual( Stem("boiando"), "boi" );
	deepEqual( Stem("boicotar"), "boicot" );
	deepEqual( Stem("boicote"), "boicot" );
	deepEqual( Stem("boieng"), "boieng" );
	deepEqual( Stem("bois"), "bois" );
	deepEqual( Stem("bola"), "bol" );
	deepEqual( Stem("bolachas"), "bolach" );
	deepEqual( Stem("bolada"), "bol" );
	deepEqual( Stem("bolão"), "bolã" );
	deepEqual( Stem("bolar"), "bol" );
	deepEqual( Stem("bolaram"), "bol" );
	deepEqual( Stem("bolas"), "bol" );
	deepEqual( Stem("bolero"), "boler" );
	deepEqual( Stem("boletim"), "boletim" );
	deepEqual( Stem("bolha"), "bolh" );
	deepEqual( Stem("bolhas"), "bolh" );
	deepEqual( Stem("bolinha"), "bolinh" );
	deepEqual( Stem("bolinhas"), "bolinh" );
	deepEqual( Stem("bolinhos"), "bolinh" );
	deepEqual( Stem("bolívia"), "bolív" );
	deepEqual( Stem("boliviana"), "bolivian" );
	deepEqual( Stem("boliviano"), "bolivian" );
	deepEqual( Stem("bolivianos"), "bolivian" );
	deepEqual( Stem("bolkan"), "bolkan" );
	deepEqual( Stem("bolo"), "bol" );
	deepEqual( Stem("bolonha"), "bolonh" );
	deepEqual( Stem("bolsa"), "bols" );
	deepEqual( Stem("bolsas"), "bols" );
	deepEqual( Stem("bolso"), "bols" );
	deepEqual( Stem("bolsos"), "bols" );
	deepEqual( Stem("bom"), "bom" );
	deepEqual( Stem("bomb"), "bomb" );
	deepEqual( Stem("bomba"), "bomb" );
	deepEqual( Stem("bombardeada"), "bombard" );
	deepEqual( Stem("bombardeado"), "bombard" );
	deepEqual( Stem("bombardear"), "bombard" );
	deepEqual( Stem("bombardeia"), "bombard" );
	deepEqual( Stem("bombardeio"), "bombardei" );
	deepEqual( Stem("bombardeiro"), "bombardeir" );
	deepEqual( Stem("bombardeiros"), "bombardeir" );
	deepEqual( Stem("bombardeou"), "bombard" );
	deepEqual( Stem("bombardier"), "bombardi" );
	deepEqual( Stem("bombas"), "bomb" );
	deepEqual( Stem("bombástica"), "bombást" );
	deepEqual( Stem("bombásticas"), "bombást" );
	deepEqual( Stem("bombástico"), "bombást" );
	deepEqual( Stem("bombeado"), "bomb" );
	deepEqual( Stem("bombear"), "bomb" );
	deepEqual( Stem("bombeiro"), "bombeir" );
	deepEqual( Stem("bombeiros"), "bombeir" );
	deepEqual( Stem("bombinha"), "bombinh" );
	deepEqual( Stem("bombinhas"), "bombinh" );
	deepEqual( Stem("bombons"), "bombons" );
	deepEqual( Stem("bompreço"), "bomprec" );
	deepEqual( Stem("bonadone"), "bonadon" );
	deepEqual( Stem("bonano"), "bonan" );
	deepEqual( Stem("bonde"), "bond" );
	deepEqual( Stem("bonder"), "bond" );
	deepEqual( Stem("bondes"), "bond" );
	deepEqual( Stem("bonds"), "bonds" );
	deepEqual( Stem("boné"), "bon" );
	deepEqual( Stem("boneca"), "bonec" );
	deepEqual( Stem("bonecas"), "bonec" );
	deepEqual( Stem("boneco"), "bonec" );
	deepEqual( Stem("bonecos"), "bonec" );
	deepEqual( Stem("bonequinhas"), "bonequinh" );
	deepEqual( Stem("bonés"), "bonés" );
	deepEqual( Stem("bonfim"), "bonfim" );
	deepEqual( Stem("boni"), "bon" );
	deepEqual( Stem("bonifácio"), "bonifáci" );
	deepEqual( Stem("boninho"), "boninh" );
	deepEqual( Stem("bonita"), "bonit" );
	deepEqual( Stem("bonitão"), "bonitã" );
	deepEqual( Stem("bonitas"), "bonit" );
	deepEqual( Stem("bonitinha"), "bonitinh" );
	deepEqual( Stem("bonitinho"), "bonitinh" );
	deepEqual( Stem("bonito"), "bonit" );
	deepEqual( Stem("bonitões"), "bonitõ" );
	deepEqual( Stem("bonitos"), "bonit" );
	deepEqual( Stem("bonn"), "bonn" );
	deepEqual( Stem("bonomi"), "bonom" );
	deepEqual( Stem("bons"), "bons" );
	deepEqual( Stem("bonzinho"), "bonzinh" );
	deepEqual( Stem("book"), "book" );
	deepEqual( Stem("books"), "books" );
	deepEqual( Stem("boom"), "boom" );
	deepEqual( Stem("booz"), "booz" );
	deepEqual( Stem("bora"), "bor" );
	deepEqual( Stem("borba"), "borb" );
	deepEqual( Stem("borboleta"), "borbolet" );
	deepEqual( Stem("borda"), "bord" );
	deepEqual( Stem("bordado"), "bord" );
	deepEqual( Stem("bordão"), "bordã" );
	deepEqual( Stem("bordas"), "bord" );
	deepEqual( Stem("bordeaux"), "bordeaux" );
	deepEqual( Stem("bordo"), "bord" );
	deepEqual( Stem("bordões"), "bordõ" );
	deepEqual( Stem("borg"), "borg" );
	deepEqual( Stem("borges"), "borg" );
	deepEqual( Stem("borghese"), "borghes" );
	deepEqual( Stem("boris"), "bor" );
	deepEqual( Stem("borja"), "borj" );
	deepEqual( Stem("borjalo"), "borjal" );
	deepEqual( Stem("bornéu"), "bornéu" );
	deepEqual( Stem("bornhausen"), "bornhausen" );
	deepEqual( Stem("borra"), "borr" );
	deepEqual( Stem("borracha"), "borrach" );
	deepEqual( Stem("borrada"), "borr" );
	deepEqual( Stem("borrados"), "borr" );
	deepEqual( Stem("borrifada"), "borrif" );
	deepEqual( Stem("borsoi"), "borso" );
	deepEqual( Stem("bosc"), "bosc" );
	deepEqual( Stem("bosco"), "bosc" );
	deepEqual( Stem("boseggia"), "bosegg" );
	deepEqual( Stem("bósforo"), "bósfor" );
	deepEqual( Stem("bósnia"), "bósn" );
	deepEqual( Stem("bosques"), "bosqu" );
	deepEqual( Stem("bossa"), "boss" );
	deepEqual( Stem("boston"), "boston" );
	deepEqual( Stem("bota"), "bot" );
	deepEqual( Stem("botafogo"), "botafog" );
	deepEqual( Stem("botando"), "bot" );
	deepEqual( Stem("botânico"), "botân" );
	deepEqual( Stem("botão"), "botã" );
	deepEqual( Stem("botar"), "bot" );
	deepEqual( Stem("botas"), "bot" );
	deepEqual( Stem("bote"), "bot" );
	deepEqual( Stem("boteco"), "botec" );
	deepEqual( Stem("botecos"), "botec" );
	deepEqual( Stem("botei"), "bot" );
	deepEqual( Stem("botelho"), "botelh" );
	deepEqual( Stem("botequim"), "botequim" );
	deepEqual( Stem("botero"), "boter" );
	deepEqual( Stem("boticelli"), "boticell" );
	deepEqual( Stem("botijão"), "botijã" );
	deepEqual( Stem("botinha"), "botinh" );
	deepEqual( Stem("boto"), "bot" );
	deepEqual( Stem("botões"), "botõ" );
	deepEqual( Stem("botou"), "bot" );
	deepEqual( Stem("botteghin"), "botteghin" );
	deepEqual( Stem("botton"), "botton" );
	deepEqual( Stem("botucatu"), "botucatu" );
	deepEqual( Stem("boucinhas"), "boucinh" );
	deepEqual( Stem("boulevard"), "boulevard" );
	deepEqual( Stem("bouquet"), "bouquet" );
	deepEqual( Stem("bourget"), "bourget" );
	deepEqual( Stem("bouterse"), "bouters" );
	deepEqual( Stem("bovary"), "bovary" );
	deepEqual( Stem("bovespa"), "bovesp" );
	deepEqual( Stem("bovina"), "bovin" );
	deepEqual( Stem("bovino"), "bovin" );
	deepEqual( Stem("bowie"), "bowi" );
	deepEqual( Stem("bowl"), "bowl" );
	deepEqual( Stem("box"), "box" );
	deepEqual( Stem("boxe"), "box" );
	deepEqual( Stem("boxeador"), "boxeador" );
	deepEqual( Stem("boxes"), "box" );
	deepEqual( Stem("boy"), "boy" );
	deepEqual( Stem("bozano"), "bozan" );
	deepEqual( Stem("bozzano"), "bozzan" );
	deepEqual( Stem("bps"), "bps" );
	deepEqual( Stem("br"), "br" );
	deepEqual( Stem("braçal"), "braçal" );
	deepEqual( Stem("braço"), "brac" );
	deepEqual( Stem("braços"), "brac" );
	deepEqual( Stem("bradesco"), "bradesc" );
	deepEqual( Stem("bradicinina"), "bradicinin" );
	deepEqual( Stem("bradley"), "bradley" );
	deepEqual( Stem("bradou"), "brad" );
	deepEqual( Stem("braga"), "brag" );
	deepEqual( Stem("bragança"), "braganc" );
	deepEqual( Stem("braganças"), "braganc" );
	deepEqual( Stem("brahma"), "brahm" );
	deepEqual( Stem("branca"), "branc" );
	deepEqual( Stem("brancaleone"), "brancaleon" );
	deepEqual( Stem("brancas"), "branc" );
	deepEqual( Stem("branco"), "branc" );
	deepEqual( Stem("brancos"), "branc" );
	deepEqual( Stem("branda"), "brand" );
	deepEqual( Stem("brandão"), "brandã" );
	deepEqual( Stem("brandindo"), "brand" );
	deepEqual( Stem("brando"), "brand" );
	deepEqual( Stem("brandt"), "brandt" );
	deepEqual( Stem("branqueamento"), "branqueament" );
	deepEqual( Stem("branquinho"), "branquinh" );
	deepEqual( Stem("brant"), "brant" );
	deepEqual( Stem("brantes"), "brant" );
	deepEqual( Stem("braquiterapia"), "braquiterap" );
	deepEqual( Stem("brás"), "brás" );
	deepEqual( Stem("brasil"), "brasil" );
	deepEqual( Stem("brasilândia"), "brasilând" );
	deepEqual( Stem("brasileira"), "brasileir" );
	deepEqual( Stem("brasileirada"), "brasileir" );
	deepEqual( Stem("brasileiras"), "brasileir" );
	deepEqual( Stem("brasileirinho"), "brasileirinh" );
	deepEqual( Stem("brasileirismo"), "brasileir" );
	deepEqual( Stem("brasileiro"), "brasileir" );
	deepEqual( Stem("brasileiros"), "brasileir" );
	deepEqual( Stem("brasília"), "brasíl" );
	deepEqual( Stem("brasiliano"), "brasilian" );
	deepEqual( Stem("brasílicas"), "brasíl" );
	deepEqual( Stem("brasilidade"), "brasil" );
	deepEqual( Stem("brasiliense"), "brasiliens" );
	deepEqual( Stem("brasiloche"), "brasiloch" );
	deepEqual( Stem("brasilpar"), "brasilp" );
	deepEqual( Stem("brasmarket"), "brasmarket" );
	deepEqual( Stem("brava"), "brav" );
	deepEqual( Stem("bravio"), "bravi" );
	deepEqual( Stem("bravo"), "brav" );
	deepEqual( Stem("bravos"), "brav" );
	deepEqual( Stem("braz"), "braz" );
	deepEqual( Stem("brazel"), "brazel" );
	deepEqual( Stem("brazil"), "brazil" );
	deepEqual( Stem("braziliense"), "braziliens" );
	deepEqual( Stem("brazucas"), "brazuc" );
	deepEqual( Stem("brca"), "brca" );
	deepEqual( Stem("brecar"), "brec" );
	deepEqual( Stem("brecha"), "brech" );
	deepEqual( Stem("brechas"), "brech" );
	deepEqual( Stem("brecht"), "brecht" );
	deepEqual( Stem("brega"), "breg" );
	deepEqual( Stem("breguices"), "breguic" );
	deepEqual( Stem("brejo"), "brej" );
	deepEqual( Stem("breno"), "bren" );
	deepEqual( Stem("bressan"), "bressan" );
	deepEqual( Stem("bresser"), "bress" );
	deepEqual( Stem("bretanha"), "bretanh" );
	deepEqual( Stem("brett"), "brett" );
	deepEqual( Stem("breuer"), "breu" );
	deepEqual( Stem("breve"), "brev" );
	deepEqual( Stem("brevemente"), "brevement" );
	deepEqual( Stem("breves"), "brev" );
	deepEqual( Stem("brevetado"), "brevet" );
	deepEqual( Stem("brevetagem"), "brevetag" );
	deepEqual( Stem("briefing"), "briefing" );
	deepEqual( Stem("briga"), "brig" );
	deepEqual( Stem("brigada"), "brig" );
	deepEqual( Stem("brigadeiro"), "brigadeir" );
	deepEqual( Stem("brigado"), "brig" );
	deepEqual( Stem("brigam"), "brig" );
	deepEqual( Stem("brigamos"), "brig" );
	deepEqual( Stem("brigar"), "brig" );
	deepEqual( Stem("brigaram"), "brig" );
	deepEqual( Stem("brigas"), "brig" );
	deepEqual( Stem("brigávamos"), "brig" );
	deepEqual( Stem("brigou"), "brig" );
	deepEqual( Stem("briguei"), "brigu" );
	deepEqual( Stem("briguenta"), "briguent" );
	deepEqual( Stem("brilha"), "brilh" );
	deepEqual( Stem("brilham"), "brilh" );
	deepEqual( Stem("brilhando"), "brilh" );
	deepEqual( Stem("brilhante"), "brilhant" );
	deepEqual( Stem("brilhantes"), "brilhant" );
	deepEqual( Stem("brilhantina"), "brilhantin" );
	deepEqual( Stem("brilho"), "brilh" );
	deepEqual( Stem("brinca"), "brinc" );
	deepEqual( Stem("brincadeira"), "brincadeir" );
	deepEqual( Stem("brincadeiras"), "brincadeir" );
	deepEqual( Stem("brincalhão"), "brincalhã" );
	deepEqual( Stem("brincam"), "brinc" );
	deepEqual( Stem("brincando"), "brinc" );
	deepEqual( Stem("brincar"), "brinc" );
	deepEqual( Stem("brincava"), "brinc" );
	deepEqual( Stem("brinco"), "brinc" );
	deepEqual( Stem("brincos"), "brinc" );
	deepEqual( Stem("brincou"), "brinc" );
	deepEqual( Stem("brindados"), "brind" );
	deepEqual( Stem("brinde"), "brind" );
	deepEqual( Stem("brindes"), "brind" );
	deepEqual( Stem("brinque"), "brinqu" );
	deepEqual( Stem("brinquedo"), "brinqued" );
	deepEqual( Stem("brinquedos"), "brinqued" );
	deepEqual( Stem("brinquinho"), "brinquinh" );
	deepEqual( Stem("brisa"), "bris" );
	deepEqual( Stem("brissac"), "brissac" );
	deepEqual( Stem("brita"), "brit" );
	deepEqual( Stem("britânica"), "britân" );
	deepEqual( Stem("britânico"), "britân" );
	deepEqual( Stem("britânicos"), "britân" );
	deepEqual( Stem("britannia"), "britann" );
	deepEqual( Stem("british"), "british" );
	deepEqual( Stem("brito"), "brit" );
	deepEqual( Stem("brittes"), "britt" );
	deepEqual( Stem("britto"), "britt" );
	deepEqual( Stem("brizola"), "brizol" );
	deepEqual( Stem("broadway"), "broadway" );
	deepEqual( Stem("brocas"), "broc" );
	deepEqual( Stem("brocca"), "brocc" );
	deepEqual( Stem("brochar"), "broch" );
	deepEqual( Stem("brócolis"), "brócol" );
	deepEqual( Stem("broderbund"), "broderbund" );
	deepEqual( Stem("bronca"), "bronc" );
	deepEqual( Stem("broncas"), "bronc" );
	deepEqual( Stem("bronco"), "bronc" );
	deepEqual( Stem("broncodilatadores"), "broncodilat" );
	deepEqual( Stem("brondi"), "brond" );
	deepEqual( Stem("bronquite"), "bronquit" );
	deepEqual( Stem("bronstein"), "bronstein" );
	deepEqual( Stem("bronx"), "bronx" );
	deepEqual( Stem("bronze"), "bronz" );
	deepEqual( Stem("bronzeada"), "bronz" );
	deepEqual( Stem("bronzeado"), "bronz" );
	deepEqual( Stem("bronzeadores"), "bronzeador" );
	deepEqual( Stem("bronzeamento"), "bronzeament" );
	deepEqual( Stem("brookhaven"), "brookhaven" );
	deepEqual( Stem("brooklin"), "brooklin" );
	deepEqual( Stem("brooklyn"), "brooklyn" );
	deepEqual( Stem("bros"), "bros" );
	deepEqual( Stem("brotado"), "brot" );
	deepEqual( Stem("brotam"), "brot" );
	deepEqual( Stem("brotando"), "brot" );
	deepEqual( Stem("brotar"), "brot" );
	deepEqual( Stem("brotará"), "brot" );
	deepEqual( Stem("brotaram"), "brot" );
	deepEqual( Stem("brotas"), "brot" );
	deepEqual( Stem("brotero"), "broter" );
	deepEqual( Stem("brothers"), "brothers" );
	deepEqual( Stem("broto"), "brot" );
	deepEqual( Stem("brotou"), "brot" );
	deepEqual( Stem("brown"), "brown" );
	deepEqual( Stem("browser"), "brows" );
	deepEqual( Stem("browsing"), "browsing" );
	deepEqual( Stem("bruce"), "bruc" );
	deepEqual( Stem("bruços"), "bruc" );
	deepEqual( Stem("brueghel"), "brueghel" );
	deepEqual( Stem("bruguera"), "brugu" );
	deepEqual( Stem("brum"), "brum" );
	deepEqual( Stem("brumas"), "brum" );
	deepEqual( Stem("bruna"), "brun" );
	deepEqual( Stem("brunet"), "brunet" );
	deepEqual( Stem("brunete"), "brunet" );
	deepEqual( Stem("brunini"), "brunin" );
	deepEqual( Stem("brunnhilde"), "brunnhild" );
	deepEqual( Stem("bruno"), "brun" );
	deepEqual( Stem("bruns"), "bruns" );
	deepEqual( Stem("bruscamente"), "brusc" );
	deepEqual( Stem("bruscas"), "brusc" );
	deepEqual( Stem("brusque"), "brusqu" );
	deepEqual( Stem("brut"), "brut" );
	deepEqual( Stem("bruta"), "brut" );
	deepEqual( Stem("brutais"), "brut" );
	deepEqual( Stem("brutal"), "brutal" );
	deepEqual( Stem("brutalidade"), "brutal" );
	deepEqual( Stem("brutalmente"), "brutal" );
	deepEqual( Stem("bruto"), "brut" );
	deepEqual( Stem("bruxa"), "brux" );
	deepEqual( Stem("bruxas"), "brux" );
	deepEqual( Stem("bruxismo"), "bruxism" );
	deepEqual( Stem("bryan"), "bryan" );
	deepEqual( Stem("bu"), "bu" );
	deepEqual( Stem("buaiz"), "buaiz" );
	deepEqual( Stem("buarque"), "buarqu" );
	deepEqual( Stem("bucal"), "bucal" );
	deepEqual( Stem("bucci"), "bucc" );
	deepEqual( Stem("buchadas"), "buch" );
	deepEqual( Stem("buchecha"), "buchech" );
	deepEqual( Stem("bucho"), "buch" );
	deepEqual( Stem("buchwald"), "buchwald" );
	deepEqual( Stem("buckup"), "buckup" );
	deepEqual( Stem("bucólica"), "bucól" );
	deepEqual( Stem("bucolicamente"), "bucol" );
	deepEqual( Stem("budismo"), "budism" );
	deepEqual( Stem("budista"), "budist" );
	deepEqual( Stem("buena"), "buen" );
	deepEqual( Stem("bueno"), "buen" );
	deepEqual( Stem("buenos"), "buen" );
	deepEqual( Stem("búfalo"), "búfal" );
	deepEqual( Stem("bufantes"), "bufant" );
	deepEqual( Stem("bufê"), "buf" );
	deepEqual( Stem("buger"), "bug" );
	deepEqual( Stem("bugigangas"), "bugigang" );
	deepEqual( Stem("buick"), "buick" );
	deepEqual( Stem("buíque"), "buíqu" );
	deepEqual( Stem("bujanda"), "bujand" );
	deepEqual( Stem("bula"), "bul" );
	deepEqual( Stem("buléu"), "buléu" );
	deepEqual( Stem("bulgari"), "bulgar" );
	deepEqual( Stem("bulgária"), "bulgár" );
	deepEqual( Stem("bulhufas"), "bulhuf" );
	deepEqual( Stem("bum"), "bum" );
	deepEqual( Stem("bumbum"), "bumbum" );
	deepEqual( Stem("bumbuns"), "bumbuns" );
	deepEqual( Stem("bunda"), "bund" );
	deepEqual( Stem("bundas"), "bund" );
	deepEqual( Stem("bundinha"), "bundinh" );
	deepEqual( Stem("bundudo"), "bundud" );
	deepEqual( Stem("bunkers"), "bunkers" );
	deepEqual( Stem("buquê"), "buqu" );
	deepEqual( Stem("buraco"), "burac" );
	deepEqual( Stem("buracos"), "burac" );
	deepEqual( Stem("buraqueira"), "buraqueir" );
	deepEqual( Stem("buraqueiras"), "buraqueir" );
	deepEqual( Stem("burgos"), "burg" );
	deepEqual( Stem("burguesa"), "burgues" );
	deepEqual( Stem("burgueses"), "burgues" );
	deepEqual( Stem("buriatas"), "buriat" );
	deepEqual( Stem("buriátia"), "buriát" );
	deepEqual( Stem("buriatos"), "buriat" );
	deepEqual( Stem("burin"), "burin" );
	deepEqual( Stem("buritis"), "burit" );
	deepEqual( Stem("burla"), "burl" );
	deepEqual( Stem("burlando"), "burl" );
	deepEqual( Stem("burlesco"), "burlesc" );
	deepEqual( Stem("burocracia"), "burocrac" );
	deepEqual( Stem("burocrata"), "burocrat" );
	deepEqual( Stem("burocratas"), "burocrat" );
	deepEqual( Stem("burocráticos"), "burocrát" );
	deepEqual( Stem("burra"), "burr" );
	deepEqual( Stem("burrice"), "burric" );
	deepEqual( Stem("burro"), "burr" );
	deepEqual( Stem("bursite"), "bursit" );
	deepEqual( Stem("buruma"), "burum" );
	deepEqual( Stem("busca"), "busc" );
	deepEqual( Stem("buscá"), "busc" );
	deepEqual( Stem("buscam"), "busc" );
	deepEqual( Stem("buscando"), "busc" );
	deepEqual( Stem("buscar"), "busc" );
	deepEqual( Stem("buscaram"), "busc" );
	deepEqual( Stem("buscava"), "busc" );
	deepEqual( Stem("buscopan"), "buscopan" );
	deepEqual( Stem("buscou"), "busc" );
	deepEqual( Stem("bush"), "bush" );
	deepEqual( Stem("business"), "business" );
	deepEqual( Stem("buss"), "buss" );
	deepEqual( Stem("bússola"), "bússol" );
	deepEqual( Stem("bussunda"), "bussund" );
	deepEqual( Stem("bustamante"), "bustam" );
	deepEqual( Stem("busto"), "bust" );
	deepEqual( Stem("bustos"), "bust" );
	deepEqual( Stem("butantã"), "butantã" );
	deepEqual( Stem("butantan"), "butantan" );
	deepEqual( Stem("butão"), "butã" );
	deepEqual( Stem("butique"), "butiqu" );
	deepEqual( Stem("butox"), "butox" );
	deepEqual( Stem("buttons"), "buttons" );
	deepEqual( Stem("buuááááá"), "buuáááá" );
	deepEqual( Stem("buying"), "buying" );
	deepEqual( Stem("buzaid"), "buzaid" );
	deepEqual( Stem("búzios"), "búzi" );
	deepEqual( Stem("bvrj"), "bvrj" );
	deepEqual( Stem("by"), "by" );
	deepEqual( Stem("bydlowski"), "bydlowsk" );
	deepEqual( Stem("bye"), "bye" );
	deepEqual( Stem("bytes"), "bytes" );
	deepEqual( Stem("c"), "c" );
	deepEqual( Stem("cá"), "cá" );
	deepEqual( Stem("caatinga"), "caating" );
	deepEqual( Stem("cabana"), "caban" );
	deepEqual( Stem("cabanas"), "caban" );
	deepEqual( Stem("cabaré"), "cabar" );
	deepEqual( Stem("cabarés"), "cabarés" );
	deepEqual( Stem("cabe"), "cab" );
	deepEqual( Stem("cabeça"), "cabec" );
	deepEqual( Stem("cabeças"), "cabec" );
	deepEqual( Stem("cabeceira"), "cabeceir" );
	deepEqual( Stem("cabeçudos"), "cabeçud" );
	deepEqual( Stem("cabeleira"), "cabeleir" );
	deepEqual( Stem("cabeleireira"), "cabeleireir" );
	deepEqual( Stem("cabeleireiro"), "cabeleireir" );
	deepEqual( Stem("cabelereiro"), "cabelereir" );
	deepEqual( Stem("cabello"), "cabell" );
	deepEqual( Stem("cabelo"), "cabel" );
	deepEqual( Stem("cabelos"), "cabel" );
	deepEqual( Stem("cabeludo"), "cabelud" );
	deepEqual( Stem("cabem"), "cab" );
	deepEqual( Stem("cabendo"), "cab" );
	deepEqual( Stem("caber"), "cab" );
	deepEqual( Stem("caberá"), "cab" );
	deepEqual( Stem("caberão"), "cab" );
	deepEqual( Stem("caberia"), "cab" );
	deepEqual( Stem("cabernet"), "cabernet" );
	deepEqual( Stem("cabide"), "cabid" );
	deepEqual( Stem("cabine"), "cabin" );
	deepEqual( Stem("cabines"), "cabin" );
	deepEqual( Stem("cabíria"), "cabír" );
	deepEqual( Stem("cabisbaixo"), "cabisbaix" );
	deepEqual( Stem("cabo"), "cab" );
	deepEqual( Stem("caboclo"), "cabocl" );
	deepEqual( Stem("cabos"), "cab" );
	deepEqual( Stem("cabotagem"), "cabotag" );
	deepEqual( Stem("cabra"), "cabr" );
	deepEqual( Stem("cabral"), "cabral" );
	deepEqual( Stem("cabras"), "cabr" );
	deepEqual( Stem("cabrini"), "cabrin" );
	deepEqual( Stem("cabriolet"), "cabriolet" );
	deepEqual( Stem("cabrita"), "cabrit" );
	deepEqual( Stem("cabritinhas"), "cabritinh" );
	deepEqual( Stem("cabuçu"), "cabuçu" );
	deepEqual( Stem("caça"), "cac" );
	deepEqual( Stem("cacá"), "cac" );
	deepEqual( Stem("caçada"), "cac" );
	deepEqual( Stem("caçado"), "cac" );
	deepEqual( Stem("caçador"), "caçador" );
	deepEqual( Stem("caçadores"), "caçador" );
	deepEqual( Stem("caçam"), "cac" );
	deepEqual( Stem("caçando"), "cac" );
	deepEqual( Stem("caçar"), "cac" );
	deepEqual( Stem("caçaram"), "cac" );
	deepEqual( Stem("caças"), "cac" );
	deepEqual( Stem("cacau"), "cacau" );
	deepEqual( Stem("cáceres"), "các" );
	deepEqual( Stem("cachaça"), "cachac" );
	deepEqual( Stem("cachaças"), "cachac" );
	deepEqual( Stem("cachê"), "cach" );
	deepEqual( Stem("cacheados"), "cach" );
	deepEqual( Stem("cachimbo"), "cachimb" );
	deepEqual( Stem("cachinhos"), "cachinh" );
	deepEqual( Stem("cachoeira"), "cachoeir" );
	deepEqual( Stem("cachoeiras"), "cachoeir" );
	deepEqual( Stem("cachorrinho"), "cachorrinh" );
	deepEqual( Stem("cachorrinhos"), "cachorrinh" );
	deepEqual( Stem("cachorro"), "cachorr" );
	deepEqual( Stem("cachorros"), "cachorr" );
	deepEqual( Stem("cacife"), "cacif" );
	deepEqual( Stem("cacique"), "caciqu" );
	deepEqual( Stem("caciques"), "caciqu" );
	deepEqual( Stem("cacoetes"), "cacoet" );
	deepEqual( Stem("cacos"), "cac" );
	deepEqual( Stem("cacto"), "cact" );
	deepEqual( Stem("cactos"), "cact" );
	deepEqual( Stem("caçula"), "caçul" );
	deepEqual( Stem("cada"), "cad" );
	deepEqual( Stem("cadastradas"), "cadastr" );
	deepEqual( Stem("cadastrado"), "cadastr" );
	deepEqual( Stem("cadastrados"), "cadastr" );
	deepEqual( Stem("cadastramento"), "cadastr" );
	deepEqual( Stem("cadastrando"), "cadastr" );
	deepEqual( Stem("cadastrar"), "cadastr" );
	deepEqual( Stem("cadastraram"), "cadastr" );
	deepEqual( Stem("cadastro"), "cadastr" );
	deepEqual( Stem("cadáver"), "cadáv" );
	deepEqual( Stem("cadáveres"), "cadáv" );
	deepEqual( Stem("cadavéricos"), "cadavér" );
	deepEqual( Stem("cade"), "cad" );
	deepEqual( Stem("cadê"), "cad" );
	deepEqual( Stem("cadeia"), "cad" );
	deepEqual( Stem("cadeira"), "cadeir" );
	deepEqual( Stem("cadeiras"), "cadeir" );
	deepEqual( Stem("caderneta"), "cadernet" );
	deepEqual( Stem("cadernetas"), "cadernet" );
	deepEqual( Stem("caderno"), "cadern" );
	deepEqual( Stem("cadernos"), "cadern" );
	deepEqual( Stem("cadet"), "cadet" );
	deepEqual( Stem("cadetes"), "cadet" );
	deepEqual( Stem("cadillac"), "cadillac" );
	deepEqual( Stem("cádmio"), "cádmi" );
	deepEqual( Stem("cae"), "cae" );
	deepEqual( Stem("caem"), "caem" );
	deepEqual( Stem("caemi"), "caem" );
	deepEqual( Stem("cães"), "cã" );
	deepEqual( Stem("caesar"), "caes" );
	deepEqual( Stem("caetano"), "caetan" );
	deepEqual( Stem("café"), "caf" );
	deepEqual( Stem("cafeicultor"), "cafeicultor" );
	deepEqual( Stem("cafeicultores"), "cafeicultor" );
	deepEqual( Stem("cafés"), "cafés" );
	deepEqual( Stem("cafetão"), "cafetã" );
	deepEqual( Stem("cafeterie"), "cafeteri" );
	deepEqual( Stem("cafetina"), "cafetin" );
	deepEqual( Stem("cafezais"), "cafez" );
	deepEqual( Stem("cafezinho"), "cafezinh" );
	deepEqual( Stem("cafezinhos"), "cafezinh" );
	deepEqual( Stem("caffé"), "caff" );
	deepEqual( Stem("cafonice"), "cafonic" );
	deepEqual( Stem("cagada"), "cag" );
	deepEqual( Stem("cai"), "cai" );
	deepEqual( Stem("caí"), "caí" );
	deepEqual( Stem("caía"), "caí" );
	deepEqual( Stem("caído"), "caíd" );
	deepEqual( Stem("caiena"), "caien" );
	deepEqual( Stem("caindo"), "caind" );
	deepEqual( Stem("caio"), "cai" );
	deepEqual( Stem("caipira"), "caip" );
	deepEqual( Stem("caipirinha"), "caipirinh" );
	deepEqual( Stem("cair"), "cair" );
	deepEqual( Stem("cairá"), "cair" );
	deepEqual( Stem("caíram"), "caír" );
	deepEqual( Stem("cairia"), "cair" );
	deepEqual( Stem("cairo"), "cair" );
	deepEqual( Stem("cais"), "cais" );
	deepEqual( Stem("caísse"), "caíss" );
	deepEqual( Stem("caiu"), "caiu" );
	deepEqual( Stem("caixa"), "caix" );
	deepEqual( Stem("caixão"), "caixã" );
	deepEqual( Stem("caixas"), "caix" );
	deepEqual( Stem("caixinha"), "caixinh" );
	deepEqual( Stem("caixotes"), "caixot" );
	deepEqual( Stem("cajá"), "caj" );
	deepEqual( Stem("cajado"), "caj" );
	deepEqual( Stem("cajueiro"), "cajueir" );
	deepEqual( Stem("cakoff"), "cakoff" );
	deepEqual( Stem("cal"), "cal" );
	deepEqual( Stem("calabria"), "calabr" );
	deepEqual( Stem("caladão"), "caladã" );
	deepEqual( Stem("calado"), "cal" );
	deepEqual( Stem("calados"), "cal" );
	deepEqual( Stem("calamina"), "calamin" );
	deepEqual( Stem("calamitosa"), "calamit" );
	deepEqual( Stem("calamitoso"), "calamit" );
	deepEqual( Stem("calango"), "calang" );
	deepEqual( Stem("calar"), "cal" );
	deepEqual( Stem("calça"), "calc" );
	deepEqual( Stem("calcada"), "calc" );
	deepEqual( Stem("calçada"), "calc" );
	deepEqual( Stem("calçadas"), "calc" );
	deepEqual( Stem("calcado"), "calc" );
	deepEqual( Stem("calçados"), "calc" );
	deepEqual( Stem("calcanhar"), "calcanh" );
	deepEqual( Stem("calção"), "calçã" );
	deepEqual( Stem("calçaram"), "calc" );
	deepEqual( Stem("calcária"), "calcár" );
	deepEqual( Stem("calças"), "calc" );
	deepEqual( Stem("calcinha"), "calcinh" );
	deepEqual( Stem("cálcio"), "cálci" );
	deepEqual( Stem("calcula"), "calcul" );
	deepEqual( Stem("calculada"), "calcul" );
	deepEqual( Stem("calculado"), "calcul" );
	deepEqual( Stem("calculadora"), "calcul" );
	deepEqual( Stem("calculadoras"), "calcul" );
	deepEqual( Stem("calculados"), "calcul" );
	deepEqual( Stem("calculam"), "calcul" );
	deepEqual( Stem("calcular"), "calcul" );
	deepEqual( Stem("calculava"), "calcul" );
	deepEqual( Stem("cálculo"), "cálcul" );
	deepEqual( Stem("cálculos"), "cálcul" );
	deepEqual( Stem("calculou"), "calcul" );
	deepEqual( Stem("calcutá"), "calcut" );
	deepEqual( Stem("caldas"), "cald" );
	deepEqual( Stem("caldeira"), "caldeir" );
	deepEqual( Stem("caldeirão"), "cald" );
	deepEqual( Stem("caldo"), "cald" );
	deepEqual( Stem("calendário"), "calendári" );
	deepEqual( Stem("calendários"), "calendári" );
	deepEqual( Stem("calendas"), "calend" );
	deepEqual( Stem("calhou"), "calh" );
	deepEqual( Stem("cali"), "cal" );
	deepEqual( Stem("calibre"), "calibr" );
	deepEqual( Stem("calicute"), "calicut" );
	deepEqual( Stem("california"), "californ" );
	deepEqual( Stem("califórnia"), "califórn" );
	deepEqual( Stem("calil"), "calil" );
	deepEqual( Stem("callas"), "call" );
	deepEqual( Stem("callegari"), "callegar" );
	deepEqual( Stem("callepso"), "calleps" );
	deepEqual( Stem("calligaris"), "calligar" );
	deepEqual( Stem("calma"), "calm" );
	deepEqual( Stem("calmamente"), "calm" );
	deepEqual( Stem("calmante"), "calmant" );
	deepEqual( Stem("calmantes"), "calmant" );
	deepEqual( Stem("calmaria"), "calm" );
	deepEqual( Stem("calmas"), "calm" );
	deepEqual( Stem("calminhas"), "calminh" );
	deepEqual( Stem("calor"), "calor" );
	deepEqual( Stem("caloria"), "calor" );
	deepEqual( Stem("calorias"), "calor" );
	deepEqual( Stem("calórico"), "calór" );
	deepEqual( Stem("calóricos"), "calór" );
	deepEqual( Stem("caloroso"), "calor" );
	deepEqual( Stem("calote"), "calot" );
	deepEqual( Stem("caloura"), "calour" );
	deepEqual( Stem("calouros"), "calour" );
	deepEqual( Stem("cals"), "cals" );
	deepEqual( Stem("calúnia"), "calún" );
	deepEqual( Stem("calvacom"), "calvacom" );
	deepEqual( Stem("calvário"), "calvári" );
	deepEqual( Stem("calvin"), "calvin" );
	deepEqual( Stem("calvo"), "calv" );
	deepEqual( Stem("calypso"), "calyps" );
	deepEqual( Stem("calzadilla"), "calzadill" );
	deepEqual( Stem("cama"), "cam" );
	deepEqual( Stem("camacho"), "camach" );
	deepEqual( Stem("camada"), "cam" );
	deepEqual( Stem("camadas"), "cam" );
	deepEqual( Stem("camaleônica"), "camaleôn" );
	deepEqual( Stem("camapuã"), "camapuã" );
	deepEqual( Stem("câmara"), "câm" );
	deepEqual( Stem("camarada"), "camar" );
	deepEqual( Stem("camarão"), "cam" );
	deepEqual( Stem("câmaras"), "câm" );
	deepEqual( Stem("camarena"), "camaren" );
	deepEqual( Stem("camargo"), "camarg" );
	deepEqual( Stem("camarim"), "camarim" );
	deepEqual( Stem("camarins"), "camarins" );
	deepEqual( Stem("camarote"), "camarot" );
	deepEqual( Stem("camas"), "cam" );
	deepEqual( Stem("cambará"), "camb" );
	deepEqual( Stem("cambial"), "cambial" );
	deepEqual( Stem("câmbio"), "câmbi" );
	deepEqual( Stem("camboja"), "camboj" );
	deepEqual( Stem("cambojana"), "cambojan" );
	deepEqual( Stem("cambojano"), "cambojan" );
	deepEqual( Stem("cambojanos"), "cambojan" );
	deepEqual( Stem("cambridge"), "cambridg" );
	deepEqual( Stem("camburão"), "camburã" );
	deepEqual( Stem("camburi"), "cambur" );
	deepEqual( Stem("camburões"), "camburõ" );
	deepEqual( Stem("camélia"), "camél" );
	deepEqual( Stem("camélias"), "camél" );
	deepEqual( Stem("camelo"), "camel" );
	deepEqual( Stem("camelô"), "camelô" );
	deepEqual( Stem("camelôs"), "camelôs" );
	deepEqual( Stem("camera"), "cam" );
	deepEqual( Stem("câmera"), "câm" );
	deepEqual( Stem("câmeras"), "câm" );
	deepEqual( Stem("camila"), "camil" );
	deepEqual( Stem("camilla"), "camill" );
	deepEqual( Stem("camilo"), "camil" );
	deepEqual( Stem("caminha"), "caminh" );
	deepEqual( Stem("caminhada"), "caminh" );
	deepEqual( Stem("caminham"), "caminh" );
	deepEqual( Stem("caminhando"), "caminh" );
	deepEqual( Stem("caminhão"), "caminhã" );
	deepEqual( Stem("caminhar"), "caminh" );
	deepEqual( Stem("caminhavam"), "caminh" );
	deepEqual( Stem("caminho"), "caminh" );
	deepEqual( Stem("caminhões"), "caminhõ" );
	deepEqual( Stem("caminhoneiro"), "caminhoneir" );
	deepEqual( Stem("caminhoneiros"), "caminhoneir" );
	deepEqual( Stem("caminhonete"), "caminhonet" );
	deepEqual( Stem("caminhonetes"), "caminhonet" );
	deepEqual( Stem("caminhos"), "caminh" );
	deepEqual( Stem("camino"), "camin" );
	deepEqual( Stem("camisa"), "camis" );
	deepEqual( Stem("camisaria"), "camis" );
	deepEqual( Stem("camisas"), "camis" );
	deepEqual( Stem("camiseta"), "camiset" );
	deepEqual( Stem("camisetas"), "camiset" );
	deepEqual( Stem("camisetinha"), "camisetinh" );
	deepEqual( Stem("camisinha"), "camisinh" );
	deepEqual( Stem("camisinhas"), "camisinh" );
	deepEqual( Stem("camisola"), "camisol" );
	deepEqual( Stem("camões"), "camõ" );
	deepEqual( Stem("camomila"), "camomil" );
	deepEqual( Stem("camp"), "camp" );
	deepEqual( Stem("campainha"), "campainh" );
	deepEqual( Stem("campana"), "campan" );
	deepEqual( Stem("campanha"), "campanh" );
	deepEqual( Stem("campanhas"), "campanh" );
	deepEqual( Stem("campeã"), "campeã" );
	deepEqual( Stem("campeão"), "campeã" );
	deepEqual( Stem("campearam"), "camp" );
	deepEqual( Stem("campeava"), "camp" );
	deepEqual( Stem("campelo"), "campel" );
	deepEqual( Stem("campeões"), "campeõ" );
	deepEqual( Stem("campeonato"), "campeonat" );
	deepEqual( Stem("campeonatos"), "campeonat" );
	deepEqual( Stem("campesinos"), "campesin" );
	deepEqual( Stem("campestre"), "campestr" );
	deepEqual( Stem("campina"), "campin" );
	deepEqual( Stem("campinas"), "campin" );
	deepEqual( Stem("camping"), "camping" );
	deepEqual( Stem("campings"), "campings" );
	deepEqual( Stem("campo"), "camp" );
	deepEqual( Stem("camponesas"), "campones" );
	deepEqual( Stem("camponeses"), "campones" );
	deepEqual( Stem("campos"), "camp" );
	deepEqual( Stem("campus"), "campus" );
	deepEqual( Stem("campuzana"), "campuzan" );
	deepEqual( Stem("camuflada"), "camufl" );
	deepEqual( Stem("camuflado"), "camufl" );
	deepEqual( Stem("camuflar"), "camufl" );
	deepEqual( Stem("camurças"), "camurc" );
	deepEqual( Stem("cana"), "can" );
	deepEqual( Stem("canadá"), "canad" );
	deepEqual( Stem("canadair"), "canada" );
	deepEqual( Stem("canadense"), "canadens" );
	deepEqual( Stem("canadenses"), "canadens" );
	deepEqual( Stem("canais"), "can" );
	deepEqual( Stem("canal"), "canal" );
	deepEqual( Stem("canale"), "canal" );
	deepEqual( Stem("canalha"), "canalh" );
	deepEqual( Stem("canalizado"), "canaliz" );
	deepEqual( Stem("canaqua"), "canaqu" );
	deepEqual( Stem("canário"), "canári" );
	deepEqual( Stem("canastrões"), "canastrõ" );
	deepEqual( Stem("canavieira"), "canavieir" );
	deepEqual( Stem("canção"), "cançã" );
	deepEqual( Stem("cancelado"), "cancel" );
	deepEqual( Stem("cancelados"), "cancel" );
	deepEqual( Stem("cancelam"), "cancel" );
	deepEqual( Stem("cancelar"), "cancel" );
	deepEqual( Stem("cancelou"), "cancel" );
	deepEqual( Stem("cancer"), "canc" );
	deepEqual( Stem("câncer"), "cânc" );
	deepEqual( Stem("cancerígena"), "cancerígen" );
	deepEqual( Stem("cancerígenas"), "cancerígen" );
	deepEqual( Stem("cancerígeno"), "cancerígen" );
	deepEqual( Stem("cancernet"), "cancernet" );
	deepEqual( Stem("cancerosas"), "cancer" );
	deepEqual( Stem("cancioneiro"), "cancioneir" );
	deepEqual( Stem("canções"), "cançõ" );
	deepEqual( Stem("cancún"), "cancún" );
	deepEqual( Stem("candeeira"), "candeeir" );
	deepEqual( Stem("candelabros"), "candelabr" );
	deepEqual( Stem("candelária"), "candelár" );
	deepEqual( Stem("candice"), "candic" );
	deepEqual( Stem("candidata"), "candidat" );
	deepEqual( Stem("candidatar"), "candidat" );
	deepEqual( Stem("candidataram"), "candidat" );
	deepEqual( Stem("candidatas"), "candidat" );
	deepEqual( Stem("candidatasse"), "candidat" );
	deepEqual( Stem("candidatei"), "candidat" );
	deepEqual( Stem("candidato"), "candidat" );
	deepEqual( Stem("candidatos"), "candidat" );
	deepEqual( Stem("candidatura"), "candidatur" );
	deepEqual( Stem("candido"), "cand" );
	deepEqual( Stem("cândido"), "când" );
	deepEqual( Stem("candomblé"), "candombl" );
	deepEqual( Stem("candomblés"), "candomblés" );
	deepEqual( Stem("canela"), "canel" );
	deepEqual( Stem("canelada"), "canel" );
	deepEqual( Stem("caneta"), "canet" );
	deepEqual( Stem("canetas"), "canet" );
	deepEqual( Stem("canetinhas"), "canetinh" );
	deepEqual( Stem("cangaceiro"), "cangaceir" );
	deepEqual( Stem("cangaço"), "cangac" );
	deepEqual( Stem("cangalo"), "cangal" );
	deepEqual( Stem("cangurus"), "cangurus" );
	deepEqual( Stem("canhão"), "canhã" );
	deepEqual( Stem("canhestra"), "canhestr" );
	deepEqual( Stem("canhões"), "canhõ" );
	deepEqual( Stem("canhonear"), "canhon" );
	deepEqual( Stem("canibalização"), "canibaliz" );
	deepEqual( Stem("canindé"), "canind" );
	deepEqual( Stem("cânion"), "cânion" );
	deepEqual( Stem("cânions"), "cânions" );
	deepEqual( Stem("cannes"), "cann" );
	deepEqual( Stem("canônica"), "canôn" );
	deepEqual( Stem("canônicas"), "canôn" );
	deepEqual( Stem("canônico"), "canôn" );
	deepEqual( Stem("canonização"), "canoniz" );
	deepEqual( Stem("canova"), "canov" );
	deepEqual( Stem("cansa"), "cans" );
	deepEqual( Stem("cansaço"), "cansac" );
	deepEqual( Stem("cansada"), "cans" );
	deepEqual( Stem("cansado"), "cans" );
	deepEqual( Stem("cansar"), "cans" );
	deepEqual( Stem("cansaram"), "cans" );
	deepEqual( Stem("cansativo"), "cansat" );
	deepEqual( Stem("canseira"), "canseir" );
	deepEqual( Stem("cansou"), "cans" );
	deepEqual( Stem("canta"), "cant" );
	deepEqual( Stem("cantada"), "cant" );
	deepEqual( Stem("cantadas"), "cant" );
	deepEqual( Stem("cantado"), "cant" );
	deepEqual( Stem("cantalice"), "cantalic" );
	deepEqual( Stem("cantaloup"), "cantaloup" );
	deepEqual( Stem("cantando"), "cant" );
	deepEqual( Stem("cantante"), "cantant" );
	deepEqual( Stem("cantar"), "cant" );
	deepEqual( Stem("cantaram"), "cant" );
	deepEqual( Stem("cantarolando"), "cantarol" );
	deepEqual( Stem("cantarolar"), "cantarol" );
	deepEqual( Stem("cantei"), "cant" );
	deepEqual( Stem("canteiros"), "canteir" );
	deepEqual( Stem("cânticos"), "cântic" );
	deepEqual( Stem("cantinho"), "cantinh" );
	deepEqual( Stem("canto"), "cant" );
	deepEqual( Stem("cantona"), "canton" );
	deepEqual( Stem("cantonês"), "cantonês" );
	deepEqual( Stem("cantor"), "cantor" );
	deepEqual( Stem("cantora"), "cantor" );
	deepEqual( Stem("cantoras"), "cantor" );
	deepEqual( Stem("cantores"), "cantor" );
	deepEqual( Stem("cantoria"), "cantor" );
	deepEqual( Stem("cantos"), "cant" );
	deepEqual( Stem("cantou"), "cant" );
	deepEqual( Stem("canudo"), "canud" );
	deepEqual( Stem("canudos"), "canud" );
	deepEqual( Stem("cao"), "cao" );
	deepEqual( Stem("cão"), "cã" );
	deepEqual( Stem("caos"), "caos" );
	deepEqual( Stem("caótica"), "caótic" );
	deepEqual( Stem("caótico"), "caótic" );
	deepEqual( Stem("capa"), "cap" );
	deepEqual( Stem("capacetes"), "capacet" );
	deepEqual( Stem("capacidade"), "capac" );
	deepEqual( Stem("capacitação"), "capacit" );
	deepEqual( Stem("capadócia"), "capadóc" );
	deepEqual( Stem("capão"), "capã" );
	deepEqual( Stem("capas"), "cap" );
	deepEqual( Stem("capaz"), "capaz" );
	deepEqual( Stem("capazes"), "capaz" );
	deepEqual( Stem("capcure"), "capcur" );
	deepEqual( Stem("capela"), "capel" );
	deepEqual( Stem("capelão"), "capelã" );
	deepEqual( Stem("capenga"), "capeng" );
	deepEqual( Stem("capes"), "cap" );
	deepEqual( Stem("capi"), "cap" );
	deepEqual( Stem("capilar"), "capil" );
	deepEqual( Stem("capim"), "capim" );
	deepEqual( Stem("capita"), "capit" );
	deepEqual( Stem("capitã"), "capitã" );
	deepEqual( Stem("capitais"), "capit" );
	deepEqual( Stem("capital"), "capital" );
	deepEqual( Stem("capitalismo"), "capital" );
	deepEqual( Stem("capitalista"), "capital" );
	deepEqual( Stem("capitalizada"), "capitaliz" );
	deepEqual( Stem("capitânia"), "capitân" );
	deepEqual( Stem("capitanias"), "capitan" );
	deepEqual( Stem("capitão"), "capitã" );
	deepEqual( Stem("capitólio"), "capitóli" );
	deepEqual( Stem("capítulo"), "capítul" );
	deepEqual( Stem("capítulos"), "capítul" );
	deepEqual( Stem("capitulou"), "capitul" );
	deepEqual( Stem("capo"), "cap" );
	deepEqual( Stem("capoeira"), "capoeir" );
	deepEqual( Stem("capoeirista"), "capoeir" );
	deepEqual( Stem("capone"), "capon" );
	deepEqual( Stem("caporegime"), "caporegim" );
	deepEqual( Stem("capos"), "cap" );
	deepEqual( Stem("capoten"), "capoten" );
	deepEqual( Stem("caprera"), "capr" );
	deepEqual( Stem("caprichada"), "caprich" );
	deepEqual( Stem("caprichado"), "caprich" );
	deepEqual( Stem("capricham"), "caprich" );
	deepEqual( Stem("caprichando"), "caprich" );
	deepEqual( Stem("capricho"), "caprich" );
	deepEqual( Stem("caprichosos"), "caprich" );
	deepEqual( Stem("caprichou"), "caprich" );
	deepEqual( Stem("capriglione"), "capriglion" );
	deepEqual( Stem("cápsulas"), "cápsul" );
	deepEqual( Stem("capta"), "capt" );
	deepEqual( Stem("captação"), "captaçã" );
	deepEqual( Stem("captações"), "captaçõ" );
	deepEqual( Stem("captada"), "capt" );
	deepEqual( Stem("captadores"), "captador" );
	deepEqual( Stem("captados"), "capt" );
	deepEqual( Stem("captam"), "capt" );
	deepEqual( Stem("captando"), "capt" );
	deepEqual( Stem("captar"), "capt" );
	deepEqual( Stem("captariam"), "capt" );
	deepEqual( Stem("captopril"), "captopril" );
	deepEqual( Stem("captores"), "captor" );
	deepEqual( Stem("captou"), "capt" );
	deepEqual( Stem("captura"), "captur" );
	deepEqual( Stem("capturado"), "captur" );
	deepEqual( Stem("capturar"), "captur" );
	deepEqual( Stem("capuano"), "capuan" );
	deepEqual( Stem("capuchinho"), "capuchinh" );
	deepEqual( Stem("capuchinhos"), "capuchinh" );
	deepEqual( Stem("capuz"), "capuz" );
	deepEqual( Stem("caquinhos"), "caquinh" );
	deepEqual( Stem("cara"), "car" );
	deepEqual( Stem("cará"), "car" );
	deepEqual( Stem("caracas"), "carac" );
	deepEqual( Stem("caracteres"), "caract" );
	deepEqual( Stem("característica"), "característ" );
	deepEqual( Stem("características"), "característ" );
	deepEqual( Stem("característico"), "característ" );
	deepEqual( Stem("caracteriza"), "caracteriz" );
	deepEqual( Stem("caracterização"), "caracteriz" );
	deepEqual( Stem("caracterizou"), "caracteriz" );
	deepEqual( Stem("caraguata"), "caraguat" );
	deepEqual( Stem("carajás"), "carajás" );
	deepEqual( Stem("caramba"), "caramb" );
	deepEqual( Stem("caramujo"), "caramuj" );
	deepEqual( Stem("caramujos"), "caramuj" );
	deepEqual( Stem("carão"), "carã" );
	deepEqual( Stem("carapuça"), "carapuc" );
	deepEqual( Stem("caras"), "car" );
	deepEqual( Stem("caratê"), "carat" );
	deepEqual( Stem("caráter"), "carát" );
	deepEqual( Stem("caravalle"), "caravall" );
	deepEqual( Stem("caravana"), "caravan" );
	deepEqual( Stem("caravanas"), "caravan" );
	deepEqual( Stem("caravela"), "caravel" );
	deepEqual( Stem("caravelas"), "caravel" );
	deepEqual( Stem("caravelle"), "caravell" );
	deepEqual( Stem("carbide"), "carbid" );
	deepEqual( Stem("carboidrato"), "carboidrat" );
	deepEqual( Stem("carboidratos"), "carboidrat" );
	deepEqual( Stem("carbonato"), "carbonat" );
	deepEqual( Stem("carbone"), "carbon" );
	deepEqual( Stem("carbonizados"), "carboniz" );
	deepEqual( Stem("carcaças"), "carcac" );
	deepEqual( Stem("carcará"), "carc" );
	deepEqual( Stem("carcerária"), "carcerár" );
	deepEqual( Stem("carcerário"), "carcerári" );
	deepEqual( Stem("carcereiras"), "carcereir" );
	deepEqual( Stem("carcereiros"), "carcereir" );
	deepEqual( Stem("card"), "card" );
	deepEqual( Stem("cardápio"), "cardápi" );
	deepEqual( Stem("cardeais"), "card" );
	deepEqual( Stem("cardeal"), "cardeal" );
	deepEqual( Stem("cardíaca"), "cardíac" );
	deepEqual( Stem("cardíacas"), "cardíac" );
	deepEqual( Stem("cardíaco"), "cardíac" );
	deepEqual( Stem("cardíacos"), "cardíac" );
	deepEqual( Stem("cardiologia"), "cardiolog" );
	deepEqual( Stem("cardiologista"), "cardiolog" );
	deepEqual( Stem("cardiorrespiratória"), "cardiorrespiratór" );
	deepEqual( Stem("cardiovascular"), "cardiovascul" );
	deepEqual( Stem("cardiovasculares"), "cardiovascul" );
	deepEqual( Stem("cardoso"), "cardos" );
	deepEqual( Stem("carducci"), "carducc" );
	deepEqual( Stem("cardume"), "cardum" );
	deepEqual( Stem("cardumes"), "cardum" );
	deepEqual( Stem("careca"), "carec" );
	deepEqual( Stem("carecas"), "carec" );
	deepEqual( Stem("carece"), "carec" );
	deepEqual( Stem("carência"), "carênc" );
	deepEqual( Stem("carências"), "carênc" );
	deepEqual( Stem("carente"), "carent" );
	deepEqual( Stem("carentes"), "carent" );
	deepEqual( Stem("careta"), "caret" );
	deepEqual( Stem("caretas"), "caret" );
	deepEqual( Stem("caretice"), "caretic" );
	deepEqual( Stem("caretta"), "carett" );
	deepEqual( Stem("carga"), "carg" );
	deepEqual( Stem("cargas"), "carg" );
	deepEqual( Stem("cargo"), "carg" );
	deepEqual( Stem("cargos"), "carg" );
	deepEqual( Stem("cargueiro"), "cargueir" );
	deepEqual( Stem("caribe"), "carib" );
	deepEqual( Stem("caribenhos"), "caribenh" );
	deepEqual( Stem("caricatura"), "caricatur" );
	deepEqual( Stem("caricatural"), "caricatural" );
	deepEqual( Stem("caricaturas"), "caricatur" );
	deepEqual( Stem("carícias"), "caríc" );
	deepEqual( Stem("caridade"), "caridad" );
	deepEqual( Stem("caridosa"), "carid" );
	deepEqual( Stem("carimbada"), "carimb" );
	deepEqual( Stem("carimbado"), "carimb" );
	deepEqual( Stem("carimbavam"), "carimb" );
	deepEqual( Stem("carimbo"), "carimb" );
	deepEqual( Stem("carimbó"), "carimb" );
	deepEqual( Stem("carina"), "carin" );
	deepEqual( Stem("carinho"), "carinh" );
	deepEqual( Stem("carinhosa"), "carinh" );
	deepEqual( Stem("carinhosamente"), "carinh" );
	deepEqual( Stem("carinhosas"), "carinh" );
	deepEqual( Stem("carinhoso"), "carinh" );
	deepEqual( Stem("carioca"), "carioc" );
	deepEqual( Stem("cariocas"), "carioc" );
	deepEqual( Stem("carisma"), "carism" );
	deepEqual( Stem("carismática"), "carismát" );
	deepEqual( Stem("carismáticos"), "carismát" );
	deepEqual( Stem("caríssimas"), "caríssim" );
	deepEqual( Stem("caríssimo"), "caríssim" );
	deepEqual( Stem("caríssimos"), "caríss" );
	deepEqual( Stem("carl"), "carl" );
	deepEqual( Stem("carla"), "carl" );
	deepEqual( Stem("carli"), "carl" );
	deepEqual( Stem("carlinhos"), "carlinh" );
	deepEqual( Stem("carlini"), "carlin" );
	deepEqual( Stem("carlos"), "carl" );
	deepEqual( Stem("carlota"), "carlot" );
	deepEqual( Stem("carmem"), "carm" );
	deepEqual( Stem("carmen"), "carmen" );
	deepEqual( Stem("carmo"), "carm" );
	deepEqual( Stem("carnal"), "carnal" );
	deepEqual( Stem("carnavais"), "carnav" );
	deepEqual( Stem("carnaval"), "carnaval" );
	deepEqual( Stem("carne"), "carn" );
	deepEqual( Stem("carnegie"), "carnegi" );
	deepEqual( Stem("carneiro"), "carneir" );
	deepEqual( Stem("carnejo"), "carnej" );
	deepEqual( Stem("carnes"), "carn" );
	deepEqual( Stem("carniceiro"), "carniceir" );
	deepEqual( Stem("carnificina"), "carnificin" );
	deepEqual( Stem("caro"), "car" );
	deepEqual( Stem("carol"), "carol" );
	deepEqual( Stem("carola"), "carol" );
	deepEqual( Stem("carolina"), "carolin" );
	deepEqual( Stem("caroline"), "carolin" );
	deepEqual( Stem("carolíssimo"), "carolíssim" );
	deepEqual( Stem("carolyn"), "carolyn" );
	deepEqual( Stem("carona"), "caron" );
	deepEqual( Stem("caros"), "car" );
	deepEqual( Stem("carpaccio"), "carpacci" );
	deepEqual( Stem("carpetes"), "carpet" );
	deepEqual( Stem("carpintaria"), "carpint" );
	deepEqual( Stem("carpinteiro"), "carpinteir" );
	deepEqual( Stem("carpir"), "carp" );
	deepEqual( Stem("carrão"), "carrã" );
	deepEqual( Stem("carrasco"), "carrasc" );
	deepEqual( Stem("carré"), "carr" );
	deepEqual( Stem("carrefour"), "carrefour" );
	deepEqual( Stem("carrega"), "carreg" );
	deepEqual( Stem("carregá"), "carreg" );
	deepEqual( Stem("carregada"), "carreg" );
	deepEqual( Stem("carregadas"), "carreg" );
	deepEqual( Stem("carregado"), "carreg" );
	deepEqual( Stem("carregados"), "carreg" );
	deepEqual( Stem("carregam"), "carreg" );
	deepEqual( Stem("carregamentos"), "carreg" );
	deepEqual( Stem("carregando"), "carreg" );
	deepEqual( Stem("carregar"), "carreg" );
	deepEqual( Stem("carregaram"), "carreg" );
	deepEqual( Stem("carregassem"), "carreg" );
	deepEqual( Stem("carregava"), "carreg" );
	deepEqual( Stem("carrego"), "carreg" );
	deepEqual( Stem("carregou"), "carreg" );
	deepEqual( Stem("carregue"), "carreg" );
	deepEqual( Stem("carreira"), "carreir" );
	deepEqual( Stem("carreiras"), "carreir" );
	deepEqual( Stem("carrero"), "carrer" );
	deepEqual( Stem("carreteiro"), "carreteir" );
	deepEqual( Stem("carrinheiro"), "carrinheir" );
	deepEqual( Stem("carrinheiros"), "carrinheir" );
	deepEqual( Stem("carrinho"), "carrinh" );
	deepEqual( Stem("carrinhos"), "carrinh" );
	deepEqual( Stem("carro"), "carr" );
	deepEqual( Stem("carroceria"), "carroc" );
	deepEqual( Stem("carrocinha"), "carrocinh" );
	deepEqual( Stem("carrocinhas"), "carrocinh" );
	deepEqual( Stem("carrões"), "carrõ" );
	deepEqual( Stem("carros"), "carr" );
	deepEqual( Stem("carrossel"), "carrossel" );
	deepEqual( Stem("carruagem"), "carruag" );
	deepEqual( Stem("carstensz"), "carstensz" );
	deepEqual( Stem("carta"), "cart" );
	deepEqual( Stem("cartão"), "cartã" );
	deepEqual( Stem("cartas"), "cart" );
	deepEqual( Stem("cartaz"), "cartaz" );
	deepEqual( Stem("cartazes"), "cartaz" );
	deepEqual( Stem("carteira"), "carteir" );
	deepEqual( Stem("carteiras"), "carteir" );
	deepEqual( Stem("carteirinha"), "carteirinh" );
	deepEqual( Stem("cartéis"), "cart" );
	deepEqual( Stem("cartel"), "cartel" );
	deepEqual( Stem("cartela"), "cartel" );
	deepEqual( Stem("carter"), "cart" );
	deepEqual( Stem("cartilha"), "cartilh" );
	deepEqual( Stem("cartilhas"), "cartilh" );
	deepEqual( Stem("cartões"), "cartõ" );
	deepEqual( Stem("cartografia"), "cartograf" );
	deepEqual( Stem("cartográficas"), "cartográf" );
	deepEqual( Stem("cartola"), "cartol" );
	deepEqual( Stem("cartorários"), "cartorári" );
	deepEqual( Stem("cartório"), "cartóri" );
	deepEqual( Stem("cartórios"), "cartóri" );
	deepEqual( Stem("cartum"), "cartum" );
	deepEqual( Stem("cartunista"), "cartun" );
	deepEqual( Stem("cartunistas"), "cartun" );
	deepEqual( Stem("cartuns"), "cartuns" );
	deepEqual( Stem("caruso"), "carus" );
	deepEqual( Stem("carvalho"), "carvalh" );
	deepEqual( Stem("carvalhos"), "carvalh" );
	deepEqual( Stem("carvana"), "carvan" );
	deepEqual( Stem("carvão"), "carvã" );
	deepEqual( Stem("carvoaria"), "carvo" );
	deepEqual( Stem("carvoeiros"), "carvoeir" );
	deepEqual( Stem("casa"), "cas" );
	deepEqual( Stem("casablancas"), "casablanc" );
	deepEqual( Stem("casaca"), "casac" );
	deepEqual( Stem("casaco"), "casac" );
	deepEqual( Stem("casacos"), "casac" );
	deepEqual( Stem("casada"), "cas" );
	deepEqual( Stem("casadas"), "cas" );
	deepEqual( Stem("casado"), "cas" );
	deepEqual( Stem("casados"), "cas" );
	deepEqual( Stem("casagrande"), "casagrand" );
	deepEqual( Stem("casais"), "cas" );
	deepEqual( Stem("casal"), "casal" );
	deepEqual( Stem("casam"), "cas" );
	deepEqual( Stem("casamento"), "casament" );
	deepEqual( Stem("casamentos"), "casament" );
	deepEqual( Stem("casando"), "cas" );
	deepEqual( Stem("casaquistão"), "casaquistã" );
	deepEqual( Stem("casar"), "cas" );
	deepEqual( Stem("casara"), "cas" );
	deepEqual( Stem("casaram"), "cas" );
	deepEqual( Stem("casarão"), "cas" );
	deepEqual( Stem("casarões"), "casarõ" );
	deepEqual( Stem("casas"), "cas" );
	deepEqual( Stem("casasse"), "cas" );
	deepEqual( Stem("casca"), "casc" );
	deepEqual( Stem("cascata"), "cascat" );
	deepEqual( Stem("cascatas"), "cascat" );
	deepEqual( Stem("cascateiro"), "cascateir" );
	deepEqual( Stem("cascavel"), "cascavel" );
	deepEqual( Stem("casco"), "casc" );
	deepEqual( Stem("casé"), "cas" );
	deepEqual( Stem("casebre"), "casebr" );
	deepEqual( Stem("casebres"), "casebr" );
	deepEqual( Stem("casei"), "cas" );
	deepEqual( Stem("caseira"), "caseir" );
	deepEqual( Stem("caseiro"), "caseir" );
	deepEqual( Stem("caseiros"), "caseir" );
	deepEqual( Stem("casernas"), "casern" );
	deepEqual( Stem("casildo"), "casild" );
	deepEqual( Stem("casinha"), "casinh" );
	deepEqual( Stem("casinhas"), "casinh" );
	deepEqual( Stem("casinhola"), "casinhol" );
	deepEqual( Stem("casini"), "casin" );
	deepEqual( Stem("casmurro"), "casmurr" );
	deepEqual( Stem("caso"), "cas" );
	deepEqual( Stem("casos"), "cas" );
	deepEqual( Stem("casou"), "cas" );
	deepEqual( Stem("casoy"), "casoy" );
	deepEqual( Stem("cassação"), "cassaçã" );
	deepEqual( Stem("casseb"), "casseb" );
	deepEqual( Stem("casseta"), "casset" );
	deepEqual( Stem("cassetas"), "casset" );
	deepEqual( Stem("cassetosos"), "casset" );
	deepEqual( Stem("cássia"), "cáss" );
	deepEqual( Stem("cassiano"), "cassian" );
	deepEqual( Stem("cassino"), "cassin" );
	deepEqual( Stem("cassinos"), "cassin" );
	deepEqual( Stem("cassio"), "cassi" );
	deepEqual( Stem("cássio"), "cássi" );
	deepEqual( Stem("cassou"), "cass" );
	deepEqual( Stem("casta"), "cast" );
	deepEqual( Stem("castanho"), "castanh" );
	deepEqual( Stem("castanhos"), "castanh" );
	deepEqual( Stem("castaño"), "castañ" );
	deepEqual( Stem("castelano"), "castelan" );
	deepEqual( Stem("castelhano"), "castelhan" );
	deepEqual( Stem("casteli"), "castel" );
	deepEqual( Stem("castelli"), "castell" );
	deepEqual( Stem("castelo"), "castel" );
	deepEqual( Stem("castelos"), "castel" );
	deepEqual( Stem("castiga"), "castig" );
	deepEqual( Stem("castigado"), "castig" );
	deepEqual( Stem("castigados"), "castig" );
	deepEqual( Stem("castigar"), "castig" );
	deepEqual( Stem("castigo"), "castig" );
	deepEqual( Stem("castilho"), "castilh" );
	deepEqual( Stem("casting"), "casting" );
	deepEqual( Stem("casto"), "cast" );
	deepEqual( Stem("castor"), "castor" );
	deepEqual( Stem("castratti"), "castratt" );
	deepEqual( Stem("castro"), "castr" );
	deepEqual( Stem("casualidades"), "casual" );
	deepEqual( Stem("casulo"), "casul" );
	deepEqual( Stem("cata"), "cat" );
	deepEqual( Stem("catador"), "catador" );
	deepEqual( Stem("cataflan"), "cataflan" );
	deepEqual( Stem("catalogadas"), "catalog" );
	deepEqual( Stem("catálogo"), "catálog" );
	deepEqual( Stem("catálogos"), "catálog" );
	deepEqual( Stem("catalogou"), "catalog" );
	deepEqual( Stem("catanduva"), "catanduv" );
	deepEqual( Stem("catão"), "catã" );
	deepEqual( Stem("catapulta"), "catapult" );
	deepEqual( Stem("catarata"), "catarat" );
	deepEqual( Stem("catarina"), "catarin" );
	deepEqual( Stem("catarinense"), "catarinens" );
	deepEqual( Stem("catarinenses"), "catarinens" );
	deepEqual( Stem("catarino"), "catarin" );
	deepEqual( Stem("catarse"), "catars" );
	deepEqual( Stem("catástrofe"), "catástrof" );
	deepEqual( Stem("catástrofes"), "catástrof" );
	deepEqual( Stem("catastróficas"), "catastróf" );
	deepEqual( Stem("catastrófico"), "catastróf" );
	deepEqual( Stem("catedral"), "catedral" );
	deepEqual( Stem("categoria"), "categor" );
	deepEqual( Stem("categorias"), "categor" );
	deepEqual( Stem("categórica"), "categór" );
	deepEqual( Stem("categóricos"), "categór" );
	deepEqual( Stem("catei"), "cat" );
	deepEqual( Stem("catequese"), "cateques" );
	deepEqual( Stem("cateter"), "catet" );
	deepEqual( Stem("cateterismo"), "cateter" );
	deepEqual( Stem("catherine"), "catherin" );
	deepEqual( Stem("catho"), "cath" );
	deepEqual( Stem("catholique"), "catholiqu" );
	deepEqual( Stem("cativa"), "cativ" );
	deepEqual( Stem("cativantes"), "cativ" );
	deepEqual( Stem("cativas"), "cativ" );
	deepEqual( Stem("cativeiro"), "cativeir" );
	deepEqual( Stem("católica"), "catól" );
	deepEqual( Stem("catolicismo"), "catolic" );
	deepEqual( Stem("católico"), "catól" );
	deepEqual( Stem("católicos"), "catól" );
	deepEqual( Stem("catorze"), "catorz" );
	deepEqual( Stem("catraca"), "catrac" );
	deepEqual( Stem("caução"), "cauçã" );
	deepEqual( Stem("cauda"), "caud" );
	deepEqual( Stem("caudalosas"), "caudal" );
	deepEqual( Stem("caudalosos"), "caudal" );
	deepEqual( Stem("causa"), "caus" );
	deepEqual( Stem("causada"), "caus" );
	deepEqual( Stem("causadas"), "caus" );
	deepEqual( Stem("causado"), "caus" );
	deepEqual( Stem("causador"), "causador" );
	deepEqual( Stem("causados"), "caus" );
	deepEqual( Stem("causam"), "caus" );
	deepEqual( Stem("causando"), "caus" );
	deepEqual( Stem("causar"), "caus" );
	deepEqual( Stem("causará"), "caus" );
	deepEqual( Stem("causaram"), "caus" );
	deepEqual( Stem("causas"), "caus" );
	deepEqual( Stem("causava"), "caus" );
	deepEqual( Stem("causou"), "caus" );
	deepEqual( Stem("cautela"), "cautel" );
	deepEqual( Stem("cautelas"), "cautel" );
	deepEqual( Stem("cauteloso"), "cautel" );
	deepEqual( Stem("cavada"), "cav" );
	deepEqual( Stem("cavado"), "cav" );
	deepEqual( Stem("cavalar"), "caval" );
	deepEqual( Stem("cavalares"), "caval" );
	deepEqual( Stem("cavalaria"), "caval" );
	deepEqual( Stem("cavalcante"), "cavalc" );
	deepEqual( Stem("cavalcanti"), "cavalcant" );
	deepEqual( Stem("cavaleiro"), "cavaleir" );
	deepEqual( Stem("cavaleiros"), "cavaleir" );
	deepEqual( Stem("cavalgadas"), "cavalg" );
	deepEqual( Stem("cavalheiro"), "cavalheir" );
	deepEqual( Stem("cavalheiros"), "cavalheir" );
	deepEqual( Stem("cavalinho"), "cavalinh" );
	deepEqual( Stem("cavalo"), "caval" );
	deepEqual( Stem("cavalos"), "caval" );
	deepEqual( Stem("cavanhaque"), "cavanhaqu" );
	deepEqual( Stem("cavar"), "cav" );
	deepEqual( Stem("cavava"), "cav" );
	deepEqual( Stem("caveira"), "caveir" );
	deepEqual( Stem("caveiras"), "caveir" );
	deepEqual( Stem("caverna"), "cavern" );
	deepEqual( Stem("cavernas"), "cavern" );
	deepEqual( Stem("caviar"), "cavi" );
	deepEqual( Stem("cavidade"), "cavidad" );
	deepEqual( Stem("cavidades"), "cavidad" );
	deepEqual( Stem("caxias"), "cax" );
	deepEqual( Stem("caymmi"), "caymm" );
	deepEqual( Stem("cazuza"), "cazuz" );
	deepEqual( Stem("cbf"), "cbf" );
	deepEqual( Stem("cbmm"), "cbmm" );
	deepEqual( Stem("cbs"), "cbs" );
	deepEqual( Stem("ccedil"), "ccedil" );
	deepEqual( Stem("ccf"), "ccf" );
	deepEqual( Stem("cd"), "cd" );
	deepEqual( Stem("cda"), "cda" );
	deepEqual( Stem("cdb"), "cdb" );
	deepEqual( Stem("cds"), "cds" );
	deepEqual( Stem("ce"), "ce" );
	deepEqual( Stem("cê"), "cê" );
	deepEqual( Stem("ceagesp"), "ceagesp" );
	deepEqual( Stem("ceará"), "cear" );
	deepEqual( Stem("cearense"), "cearens" );
	deepEqual( Stem("cebola"), "cebol" );
	deepEqual( Stem("cebolas"), "cebol" );
	deepEqual( Stem("cecilia"), "cecil" );
	deepEqual( Stem("cecília"), "cecíl" );
	deepEqual( Stem("cede"), "ced" );
	deepEqual( Stem("cedendo"), "ced" );
	deepEqual( Stem("ceder"), "ced" );
	deepEqual( Stem("cedeu"), "ced" );
	deepEqual( Stem("cedido"), "ced" );
	deepEqual( Stem("cedo"), "ced" );
	deepEqual( Stem("cedric"), "cedric" );
	deepEqual( Stem("cédula"), "cédul" );
	deepEqual( Stem("cédulas"), "cédul" );
	deepEqual( Stem("cef"), "cef" );
	deepEqual( Stem("cefaléia"), "cefal" );
	deepEqual( Stem("cega"), "ceg" );
	deepEqual( Stem("cegamente"), "ceg" );
	deepEqual( Stem("cego"), "ceg" );
	deepEqual( Stem("cegos"), "ceg" );
	deepEqual( Stem("cegueira"), "cegueir" );
	deepEqual( Stem("ceia"), "cei" );
	deepEqual( Stem("ceias"), "cei" );
	deepEqual( Stem("cela"), "cel" );
	deepEqual( Stem("celas"), "cel" );
	deepEqual( Stem("celebração"), "celebr" );
	deepEqual( Stem("celebrações"), "celebr" );
	deepEqual( Stem("celebrada"), "celebr" );
	deepEqual( Stem("celebradas"), "celebr" );
	deepEqual( Stem("celebram"), "celebr" );
	deepEqual( Stem("celebrar"), "celebr" );
	deepEqual( Stem("celebraram"), "celebr" );
	deepEqual( Stem("celebration"), "celebration" );
	deepEqual( Stem("célebre"), "célebr" );
	deepEqual( Stem("célebres"), "célebr" );
	deepEqual( Stem("celebridades"), "celebr" );
	deepEqual( Stem("celebrizaram"), "celebriz" );
	deepEqual( Stem("celebrizou"), "celebriz" );
	deepEqual( Stem("celeiro"), "celeir" );
	deepEqual( Stem("celesc"), "celesc" );
	deepEqual( Stem("celeste"), "cel" );
	deepEqual( Stem("celestial"), "celestial" );
	deepEqual( Stem("célia"), "cél" );
	deepEqual( Stem("celina"), "celin" );
	deepEqual( Stem("celsius"), "celsius" );
	deepEqual( Stem("celso"), "cels" );
	deepEqual( Stem("celson"), "celson" );
	deepEqual( Stem("célula"), "célul" );
	deepEqual( Stem("celular"), "celul" );
	deepEqual( Stem("celulares"), "celul" );
	deepEqual( Stem("celulari"), "celular" );
	deepEqual( Stem("células"), "célul" );
	deepEqual( Stem("celulite"), "celulit" );
	deepEqual( Stem("celulites"), "celulit" );
	deepEqual( Stem("celulose"), "celulos" );
	deepEqual( Stem("cem"), "cem" );
	deepEqual( Stem("cemig"), "cemig" );
	deepEqual( Stem("cemitério"), "cemitéri" );
	deepEqual( Stem("cemitérios"), "cemitéri" );
	deepEqual( Stem("cena"), "cen" );
	deepEqual( Stem("cenáculo"), "cenácul" );
	deepEqual( Stem("cenário"), "cenári" );
	deepEqual( Stem("cenários"), "cenári" );
	deepEqual( Stem("cenas"), "cen" );
	deepEqual( Stem("cênica"), "cênic" );
	deepEqual( Stem("cenimar"), "cenim" );
	deepEqual( Stem("cenipa"), "cenip" );
	deepEqual( Stem("cenógrafa"), "cenógraf" );
	deepEqual( Stem("cenoura"), "cenour" );
	deepEqual( Stem("cens"), "cens" );
	deepEqual( Stem("censo"), "cens" );
	deepEqual( Stem("censorship"), "censorship" );
	deepEqual( Stem("censura"), "censur" );
	deepEqual( Stem("censurá"), "censur" );
	deepEqual( Stem("centavo"), "centav" );
	deepEqual( Stem("centavos"), "centav" );
	deepEqual( Stem("centelha"), "centelh" );
	deepEqual( Stem("centena"), "centen" );
	deepEqual( Stem("centenária"), "centenár" );
	deepEqual( Stem("centenário"), "centenári" );
	deepEqual( Stem("centenários"), "centenári" );
	deepEqual( Stem("centenas"), "centen" );
	deepEqual( Stem("center"), "cent" );
	deepEqual( Stem("centers"), "centers" );
	deepEqual( Stem("centígrados"), "centígr" );
	deepEqual( Stem("centímetro"), "centímetr" );
	deepEqual( Stem("centímetros"), "centímetr" );
	deepEqual( Stem("cento"), "cent" );
	deepEqual( Stem("centra"), "centr" );
	deepEqual( Stem("centrada"), "centr" );
	deepEqual( Stem("centrais"), "centr" );
	deepEqual( Stem("central"), "central" );
	deepEqual( Stem("centraliza"), "centraliz" );
	deepEqual( Stem("centralização"), "centraliz" );
	deepEqual( Stem("centralizada"), "centraliz" );
	deepEqual( Stem("centre"), "centr" );
	deepEqual( Stem("centro"), "centr" );
	deepEqual( Stem("centroavante"), "centroav" );
	deepEqual( Stem("centros"), "centr" );
	deepEqual( Stem("centrus"), "centrus" );
	deepEqual( Stem("centurion"), "centurion" );
	deepEqual( Stem("cera"), "cer" );
	deepEqual( Stem("cerâmica"), "cerâm" );
	deepEqual( Stem("cerca"), "cerc" );
	deepEqual( Stem("cercada"), "cerc" );
	deepEqual( Stem("cercadas"), "cerc" );
	deepEqual( Stem("cercado"), "cerc" );
	deepEqual( Stem("cercados"), "cerc" );
	deepEqual( Stem("cercam"), "cerc" );
	deepEqual( Stem("cercando"), "cerc" );
	deepEqual( Stem("cercanias"), "cercan" );
	deepEqual( Stem("cercaram"), "cerc" );
	deepEqual( Stem("cerco"), "cerc" );
	deepEqual( Stem("cercou"), "cerc" );
	deepEqual( Stem("cereais"), "cer" );
	deepEqual( Stem("cerebrais"), "cerebr" );
	deepEqual( Stem("cerebral"), "cerebral" );
	deepEqual( Stem("cérebro"), "cérebr" );
	deepEqual( Stem("cérebros"), "cérebr" );
	deepEqual( Stem("cerefolho"), "cerefolh" );
	deepEqual( Stem("ceregatti"), "ceregatt" );
	deepEqual( Stem("cerimônia"), "cerimôn" );
	deepEqual( Stem("cerimonial"), "cerimonial" );
	deepEqual( Stem("cerimônias"), "cerimôn" );
	deepEqual( Stem("cerqueira"), "cerqueir" );
	deepEqual( Stem("cerrada"), "cerr" );
	deepEqual( Stem("cerradas"), "cerr" );
	deepEqual( Stem("cerrado"), "cerr" );
	deepEqual( Stem("cerro"), "cerr" );
	deepEqual( Stem("certa"), "cert" );
	deepEqual( Stem("certamente"), "cert" );
	deepEqual( Stem("certas"), "cert" );
	deepEqual( Stem("certeira"), "certeir" );
	deepEqual( Stem("certeiramente"), "certeir" );
	deepEqual( Stem("certeiro"), "certeir" );
	deepEqual( Stem("certeza"), "certez" );
	deepEqual( Stem("certezas"), "certez" );
	deepEqual( Stem("certidão"), "certidã" );
	deepEqual( Stem("certifica"), "certif" );
	deepEqual( Stem("certificação"), "certific" );
	deepEqual( Stem("certificadas"), "certific" );
	deepEqual( Stem("certificado"), "certific" );
	deepEqual( Stem("certinhas"), "certinh" );
	deepEqual( Stem("certinho"), "certinh" );
	deepEqual( Stem("certo"), "cert" );
	deepEqual( Stem("certos"), "cert" );
	deepEqual( Stem("cervantes"), "cervant" );
	deepEqual( Stem("cerveja"), "cervej" );
	deepEqual( Stem("cervejaria"), "cervej" );
	deepEqual( Stem("cervejarias"), "cervej" );
	deepEqual( Stem("cervejas"), "cervej" );
	deepEqual( Stem("cervejinha"), "cervejinh" );
	deepEqual( Stem("cesar"), "ces" );
	deepEqual( Stem("césar"), "cés" );
	deepEqual( Stem("cesáreas"), "cesár" );
	deepEqual( Stem("cesarianas"), "cesarian" );
	deepEqual( Stem("cesário"), "cesári" );
	deepEqual( Stem("cesarismo"), "cesar" );
	deepEqual( Stem("césio"), "cési" );
	deepEqual( Stem("cesp"), "cesp" );
	deepEqual( Stem("cessão"), "cessã" );
	deepEqual( Stem("cessar"), "cess" );
	deepEqual( Stem("cessna"), "cessn" );
	deepEqual( Stem("cesta"), "cest" );
	deepEqual( Stem("cestafe"), "cestaf" );
	deepEqual( Stem("cestas"), "cest" );
	deepEqual( Stem("cesto"), "cest" );
	deepEqual( Stem("cestos"), "cest" );
	deepEqual( Stem("cet"), "cet" );
	deepEqual( Stem("cetesb"), "cetesb" );
	deepEqual( Stem("ceticismo"), "cetic" );
	deepEqual( Stem("cético"), "cétic" );
	deepEqual( Stem("céticos"), "cétic" );
	deepEqual( Stem("cetim"), "cetim" );
	deepEqual( Stem("cetro"), "cetr" );
	deepEqual( Stem("céu"), "céu" );
	deepEqual( Stem("céus"), "céus" );
	deepEqual( Stem("cevada"), "cev" );
	deepEqual( Stem("cevap"), "cevap" );
	deepEqual( Stem("cevar"), "cev" );
	deepEqual( Stem("cezar"), "cez" );
	deepEqual( Stem("cézar"), "céz" );
	deepEqual( Stem("cgc"), "cgc" );
	deepEqual( Stem("chá"), "chá" );
	deepEqual( Stem("chácara"), "chác" );
	deepEqual( Stem("chácaras"), "chác" );
	deepEqual( Stem("chacina"), "chacin" );
	deepEqual( Stem("chacinas"), "chacin" );
	deepEqual( Stem("chaco"), "chac" );
	deepEqual( Stem("chacoalhar"), "chacoalh" );
	deepEqual( Stem("chacrete"), "chacret" );
	deepEqual( Stem("chagas"), "chag" );
	deepEqual( Stem("chairman"), "chairman" );
	deepEqual( Stem("chalés"), "chalés" );
	deepEqual( Stem("challenger"), "challeng" );
	deepEqual( Stem("chama"), "cham" );
	deepEqual( Stem("chamá"), "cham" );
	deepEqual( Stem("chamada"), "cham" );
	deepEqual( Stem("chamadas"), "cham" );
	deepEqual( Stem("chamado"), "cham" );
	deepEqual( Stem("chamados"), "cham" );
	deepEqual( Stem("chamam"), "cham" );
	deepEqual( Stem("chamamos"), "cham" );
	deepEqual( Stem("chamando"), "cham" );
	deepEqual( Stem("chamar"), "cham" );
	deepEqual( Stem("chamará"), "cham" );
	deepEqual( Stem("chamaram"), "cham" );
	deepEqual( Stem("chamarizes"), "chamariz" );
	deepEqual( Stem("chamas"), "cham" );
	deepEqual( Stem("chamativas"), "chamat" );
	deepEqual( Stem("chamativo"), "chamat" );
	deepEqual( Stem("chamava"), "cham" );
	deepEqual( Stem("chamavam"), "cham" );
	deepEqual( Stem("chambord"), "chambord" );
	deepEqual( Stem("chame"), "cham" );
	deepEqual( Stem("chamegos"), "chameg" );
	deepEqual( Stem("chamei"), "cham" );
	deepEqual( Stem("chamo"), "cham" );
	deepEqual( Stem("chamou"), "cham" );
	deepEqual( Stem("champanha"), "champanh" );
	deepEqual( Stem("champanhe"), "champanh" );
	deepEqual( Stem("champanhes"), "champanh" );
	deepEqual( Stem("chamuscada"), "chamusc" );
	deepEqual( Stem("chance"), "chanc" );
	deepEqual( Stem("chancela"), "chancel" );
	deepEqual( Stem("chanceler"), "chancel" );
	deepEqual( Stem("chances"), "chanc" );
	deepEqual( Stem("chanchada"), "chanch" );
	deepEqual( Stem("chandon"), "chandon" );
	deepEqual( Stem("chanel"), "chanel" );
	deepEqual( Stem("chang"), "chang" );
	deepEqual( Stem("channel"), "channel" );
	deepEqual( Stem("chantageavam"), "chantag" );
	deepEqual( Stem("chantagem"), "chantag" );
	deepEqual( Stem("chantagista"), "chantag" );
	deepEqual( Stem("chantal"), "chantal" );
	deepEqual( Stem("chão"), "chã" );
	deepEqual( Stem("chapa"), "chap" );
	deepEqual( Stem("chapada"), "chap" );
	deepEqual( Stem("chapadeiro"), "chapadeir" );
	deepEqual( Stem("chapéu"), "chapéu" );
	deepEqual( Stem("chapéus"), "chapéus" );
	deepEqual( Stem("chapeuzinho"), "chapeuzinh" );
	deepEqual( Stem("chaplin"), "chaplin" );
	deepEqual( Stem("chardonnay"), "chardonnay" );
	deepEqual( Stem("charges"), "charg" );
	deepEqual( Stem("charlab"), "charlab" );
	deepEqual( Stem("charlatães"), "charlatã" );
	deepEqual( Stem("charlatanismo"), "charlatan" );
	deepEqual( Stem("charlatão"), "charlatã" );
	deepEqual( Stem("charles"), "charl" );
	deepEqual( Stem("charlton"), "charlton" );
	deepEqual( Stem("charme"), "charm" );
	deepEqual( Stem("charmes"), "charm" );
	deepEqual( Stem("charmoso"), "charmos" );
	deepEqual( Stem("charretes"), "charret" );
	deepEqual( Stem("charutaria"), "charut" );
	deepEqual( Stem("charuteiros"), "charuteir" );
	deepEqual( Stem("charuto"), "charut" );
	deepEqual( Stem("charutos"), "charut" );
	deepEqual( Stem("chás"), "chás" );
	deepEqual( Stem("chase"), "chas" );
	deepEqual( Stem("chassi"), "chass" );
	deepEqual( Stem("chat"), "chat" );
	deepEqual( Stem("chateado"), "chat" );
	deepEqual( Stem("chatíssimas"), "chatíssim" );
	deepEqual( Stem("chato"), "chat" );
	deepEqual( Stem("chatos"), "chat" );
	deepEqual( Stem("chavall"), "chavall" );
	deepEqual( Stem("chave"), "chav" );
	deepEqual( Stem("chaveco"), "chavec" );
	deepEqual( Stem("chaveiro"), "chaveir" );
	deepEqual( Stem("chaveiros"), "chaveir" );
	deepEqual( Stem("chaves"), "chav" );
	deepEqual( Stem("che"), "che" );
	deepEqual( Stem("checados"), "chec" );
	deepEqual( Stem("checagem"), "checag" );
	deepEqual( Stem("checamos"), "chec" );
	deepEqual( Stem("checar"), "chec" );
	deepEqual( Stem("check"), "check" );
	deepEqual( Stem("checo"), "chec" );
	deepEqual( Stem("checou"), "chec" );
	deepEqual( Stem("chee"), "che" );
	deepEqual( Stem("cheesecake"), "cheesecak" );
	deepEqual( Stem("chef"), "chef" );
	deepEqual( Stem("chefão"), "chefã" );
	deepEqual( Stem("chefe"), "chef" );
	deepEqual( Stem("chefes"), "chef" );
	deepEqual( Stem("chefia"), "chef" );
	deepEqual( Stem("chefiada"), "chefi" );
	deepEqual( Stem("chefiado"), "chefi" );
	deepEqual( Stem("chefiados"), "chefi" );
	deepEqual( Stem("chefiar"), "chefi" );
	deepEqual( Stem("chefiava"), "chefi" );
	deepEqual( Stem("chefiei"), "chefi" );
	deepEqual( Stem("chefões"), "chefõ" );
	deepEqual( Stem("chega"), "cheg" );
	deepEqual( Stem("chegada"), "cheg" );
	deepEqual( Stem("chegado"), "cheg" );
	deepEqual( Stem("chegados"), "cheg" );
	deepEqual( Stem("chegam"), "cheg" );
	deepEqual( Stem("chegamos"), "cheg" );
	deepEqual( Stem("chegando"), "cheg" );
	deepEqual( Stem("chegar"), "cheg" );
	deepEqual( Stem("chegara"), "cheg" );
	deepEqual( Stem("chegará"), "cheg" );
	deepEqual( Stem("chegaram"), "cheg" );
	deepEqual( Stem("chegarão"), "cheg" );
	deepEqual( Stem("chegarem"), "cheg" );
	deepEqual( Stem("chegaremos"), "cheg" );
	deepEqual( Stem("chegaria"), "cheg" );
	deepEqual( Stem("chegasse"), "cheg" );
	deepEqual( Stem("chegava"), "cheg" );
	deepEqual( Stem("chegavam"), "cheg" );
	deepEqual( Stem("chegávamos"), "cheg" );
	deepEqual( Stem("chego"), "cheg" );
	deepEqual( Stem("chegou"), "cheg" );
	deepEqual( Stem("chegue"), "cheg" );
	deepEqual( Stem("cheguei"), "chegu" );
	deepEqual( Stem("cheguem"), "chegu" );
	deepEqual( Stem("cheia"), "che" );
	deepEqual( Stem("cheias"), "che" );
	deepEqual( Stem("cheinhos"), "cheinh" );
	deepEqual( Stem("cheio"), "chei" );
	deepEqual( Stem("cheios"), "chei" );
	deepEqual( Stem("cheira"), "cheir" );
	deepEqual( Stem("cheirando"), "cheir" );
	deepEqual( Stem("cheirar"), "cheir" );
	deepEqual( Stem("cheirava"), "cheir" );
	deepEqual( Stem("cheiro"), "cheir" );
	deepEqual( Stem("cheirosinho"), "cheirosinh" );
	deepEqual( Stem("cheirou"), "cheir" );
	deepEqual( Stem("chek"), "chek" );
	deepEqual( Stem("chelotti"), "chelott" );
	deepEqual( Stem("cheque"), "chequ" );
	deepEqual( Stem("cheques"), "chequ" );
	deepEqual( Stem("cher"), "cher" );
	deepEqual( Stem("chereze"), "cherez" );
	deepEqual( Stem("chermont"), "chermont" );
	deepEqual( Stem("cherokee"), "cheroke" );
	deepEqual( Stem("chester"), "chest" );
	deepEqual( Stem("chia"), "chi" );
	deepEqual( Stem("chiang"), "chiang" );
	deepEqual( Stem("chianti"), "chiant" );
	deepEqual( Stem("chiapas"), "chiap" );
	deepEqual( Stem("chiaram"), "chi" );
	deepEqual( Stem("chiarina"), "chiarin" );
	deepEqual( Stem("chiarini"), "chiarin" );
	deepEqual( Stem("chiaro"), "chiar" );
	deepEqual( Stem("chicago"), "chicag" );
	deepEqual( Stem("chicão"), "chicã" );
	deepEqual( Stem("chicletes"), "chiclet" );
	deepEqual( Stem("chico"), "chic" );
	deepEqual( Stem("chicotadas"), "chicot" );
	deepEqual( Stem("chicoteá"), "chicot" );
	deepEqual( Stem("chief"), "chief" );
	deepEqual( Stem("chien"), "chien" );
	deepEqual( Stem("chiga"), "chig" );
	deepEqual( Stem("children"), "children" );
	deepEqual( Stem("chile"), "chil" );
	deepEqual( Stem("chilena"), "chilen" );
	deepEqual( Stem("chileno"), "chilen" );
	deepEqual( Stem("chimanovitch"), "chimanovitch" );
	deepEqual( Stem("china"), "chin" );
	deepEqual( Stem("chinelo"), "chinel" );
	deepEqual( Stem("chinelões"), "chinelõ" );
	deepEqual( Stem("chinelos"), "chinel" );
	deepEqual( Stem("chinês"), "chinês" );
	deepEqual( Stem("chinesa"), "chines" );
	deepEqual( Stem("chinesas"), "chines" );
	deepEqual( Stem("chineses"), "chines" );
	deepEqual( Stem("chip"), "chip" );
	deepEqual( Stem("chips"), "chips" );
	deepEqual( Stem("chiquamanga"), "chiquamang" );
	deepEqual( Stem("chique"), "chiqu" );
	deepEqual( Stem("chiquérrima"), "chiquérrim" );
	deepEqual( Stem("chiquérrimo"), "chiquérrim" );
	deepEqual( Stem("chiques"), "chiqu" );
	deepEqual( Stem("chiquinho"), "chiquinh" );
	deepEqual( Stem("chirac"), "chirac" );
	deepEqual( Stem("chispasse"), "chisp" );
	deepEqual( Stem("chiyoda"), "chiyod" );
	deepEqual( Stem("chnaiderman"), "chnaiderman" );
	deepEqual( Stem("choca"), "choc" );
	deepEqual( Stem("chocada"), "choc" );
	deepEqual( Stem("chocado"), "choc" );
	deepEqual( Stem("chocam"), "choc" );
	deepEqual( Stem("chocando"), "choc" );
	deepEqual( Stem("chocante"), "chocant" );
	deepEqual( Stem("chocar"), "choc" );
	deepEqual( Stem("chocava"), "choc" );
	deepEqual( Stem("choco"), "choc" );
	deepEqual( Stem("chocolate"), "chocolat" );
	deepEqual( Stem("chocolates"), "chocolat" );
	deepEqual( Stem("chocou"), "choc" );
	deepEqual( Stem("chofer"), "chof" );
	deepEqual( Stem("chope"), "chop" );
	deepEqual( Stem("chopes"), "chop" );
	deepEqual( Stem("chopinot"), "chopinot" );
	deepEqual( Stem("chopnics"), "chopnics" );
	deepEqual( Stem("choque"), "choqu" );
	deepEqual( Stem("choques"), "choqu" );
	deepEqual( Stem("chora"), "chor" );
	deepEqual( Stem("chorando"), "chor" );
	deepEqual( Stem("chorar"), "chor" );
	deepEqual( Stem("choraram"), "chor" );
	deepEqual( Stem("chorava"), "chor" );
	deepEqual( Stem("chorei"), "chor" );
	deepEqual( Stem("chorizo"), "choriz" );
	deepEqual( Stem("choro"), "chor" );
	deepEqual( Stem("choros"), "chor" );
	deepEqual( Stem("chorou"), "chor" );
	deepEqual( Stem("chove"), "chov" );
	deepEqual( Stem("chovendo"), "chov" );
	deepEqual( Stem("chover"), "chov" );
	deepEqual( Stem("choveram"), "chov" );
	deepEqual( Stem("choveu"), "chov" );
	deepEqual( Stem("chovia"), "chov" );
	deepEqual( Stem("chovido"), "chov" );
	deepEqual( Stem("chris"), "chris" );
	deepEqual( Stem("christ"), "christ" );
	deepEqual( Stem("christian"), "christian" );
	deepEqual( Stem("christianity"), "christianity" );
	deepEqual( Stem("christina"), "christin" );
	deepEqual( Stem("christopher"), "christoph" );
	deepEqual( Stem("chronos"), "chron" );
	deepEqual( Stem("chrysler"), "chrysler" );
	deepEqual( Stem("chrystian"), "chrystian" );
	deepEqual( Stem("chuchu"), "chuchu" );
	deepEqual( Stem("chuí"), "chu" );
	deepEqual( Stem("chulas"), "chul" );
	deepEqual( Stem("chumbo"), "chumb" );
	deepEqual( Stem("chupar"), "chup" );
	deepEqual( Stem("chupei"), "chup" );
	deepEqual( Stem("chuquisaca"), "chuquisac" );
	deepEqual( Stem("church"), "church" );
	deepEqual( Stem("churchill"), "churchill" );
	deepEqual( Stem("churo"), "chur" );
	deepEqual( Stem("churrascaria"), "churrasc" );
	deepEqual( Stem("churrascarias"), "churrasc" );
	deepEqual( Stem("churrasco"), "churrasc" );
	deepEqual( Stem("churrascos"), "churrasc" );
	deepEqual( Stem("churrasqueiras"), "churrasqueir" );
	deepEqual( Stem("chuta"), "chut" );
	deepEqual( Stem("chutar"), "chut" );
	deepEqual( Stem("chute"), "chut" );
	deepEqual( Stem("chutei"), "chut" );
	deepEqual( Stem("chuteira"), "chuteir" );
	deepEqual( Stem("chuteiras"), "chuteir" );
	deepEqual( Stem("chutes"), "chut" );
	deepEqual( Stem("chutou"), "chut" );
	deepEqual( Stem("chuva"), "chuv" );
	deepEqual( Stem("chuvas"), "chuv" );
	deepEqual( Stem("chuveiro"), "chuveir" );
	deepEqual( Stem("chuvoso"), "chuvos" );
	deepEqual( Stem("cia"), "cia" );
	deepEqual( Stem("ciac"), "ciac" );
	deepEqual( Stem("cianê"), "cian" );
	deepEqual( Stem("cianogênio"), "cianogêni" );
	deepEqual( Stem("ciao"), "cia" );
	deepEqual( Stem("ciberbar"), "ciberb" );
	deepEqual( Stem("ciberespaço"), "ciberespac" );
	deepEqual( Stem("cibernética"), "cibernét" );
	deepEqual( Stem("cibernético"), "cibernét" );
	deepEqual( Stem("cic"), "cic" );
	deepEqual( Stem("cicatriz"), "cicatriz" );
	deepEqual( Stem("cicatrização"), "cicatriz" );
	deepEqual( Stem("cicatrizar"), "cicatriz" );
	deepEqual( Stem("cicatrizei"), "cicatriz" );
	deepEqual( Stem("cicatrizes"), "cicatriz" );
	deepEqual( Stem("cícero"), "cícer" );
	deepEqual( Stem("cíclico"), "cíclic" );
	deepEqual( Stem("ciclismo"), "ciclism" );
	deepEqual( Stem("ciclista"), "ciclist" );
	deepEqual( Stem("ciclo"), "cicl" );
	deepEqual( Stem("cics"), "cics" );
	deepEqual( Stem("cid"), "cid" );
	deepEqual( Stem("cidadania"), "cidadan" );
	deepEqual( Stem("cidadão"), "cidadã" );
	deepEqual( Stem("cidadãos"), "cidadã" );
	deepEqual( Stem("cidade"), "cidad" );
	deepEqual( Stem("cidades"), "cidad" );
	deepEqual( Stem("cidadezinha"), "cidadezinh" );
	deepEqual( Stem("cidadezinhas"), "cidadezinh" );
	deepEqual( Stem("cidinha"), "cidinh" );
	deepEqual( Stem("cie"), "cie" );
	deepEqual( Stem("ciência"), "ciênc" );
	deepEqual( Stem("ciências"), "ciênc" );
	deepEqual( Stem("científica"), "científ" );
	deepEqual( Stem("cientificamente"), "cientif" );
	deepEqual( Stem("científicas"), "científ" );
	deepEqual( Stem("científico"), "científ" );
	deepEqual( Stem("científicos"), "científ" );
	deepEqual( Stem("cientista"), "cientist" );
	deepEqual( Stem("cientistas"), "cientist" );
	deepEqual( Stem("cieps"), "cieps" );
	deepEqual( Stem("cifali"), "cifal" );
	deepEqual( Stem("cifra"), "cifr" );
	deepEqual( Stem("cifras"), "cifr" );
	deepEqual( Stem("cifrões"), "cifrõ" );
	deepEqual( Stem("cigana"), "cigan" );
	deepEqual( Stem("ciganas"), "cigan" );
	deepEqual( Stem("cigar"), "cig" );
	deepEqual( Stem("cigarro"), "cigarr" );
	deepEqual( Stem("cigarros"), "cigarr" );
	deepEqual( Stem("ciladas"), "cil" );
	deepEqual( Stem("cilene"), "cilen" );
	deepEqual( Stem("cilíndrica"), "cilíndr" );
	deepEqual( Stem("cilindro"), "cilindr" );
	deepEqual( Stem("cilindros"), "cilindr" );
	deepEqual( Stem("cima"), "cim" );
	deepEqual( Stem("cimento"), "ciment" );
	deepEqual( Stem("cimentos"), "ciment" );
	deepEqual( Stem("cincinnati"), "cincinnat" );
	deepEqual( Stem("cinco"), "cinc" );
	deepEqual( Stem("cinderela"), "cinderel" );
	deepEqual( Stem("cindy"), "cindy" );
	deepEqual( Stem("cine"), "cin" );
	deepEqual( Stem("cinearte"), "cineart" );
	deepEqual( Stem("cineasta"), "cineast" );
	deepEqual( Stem("cineastas"), "cineast" );
	deepEqual( Stem("cinecittà"), "cinecittà" );
	deepEqual( Stem("cineclube"), "cineclub" );
	deepEqual( Stem("cinéfilo"), "cinéfil" );
	deepEqual( Stem("cinema"), "cinem" );
	deepEqual( Stem("cinemas"), "cinem" );
	deepEqual( Stem("cinematográfica"), "cinematográf" );
	deepEqual( Stem("cineminha"), "cineminh" );
	deepEqual( Stem("cinep"), "cinep" );
	deepEqual( Stem("cingapura"), "cingapur" );
	deepEqual( Stem("cinismo"), "cinism" );
	deepEqual( Stem("cinquenta"), "cinquent" );
	deepEqual( Stem("cinqüenta"), "cinqüent" );
	deepEqual( Stem("cinquentão"), "cinquentã" );
	deepEqual( Stem("cinquentenário"), "cinquentenári" );
	deepEqual( Stem("cinqüentenário"), "cinqüentenári" );
	deepEqual( Stem("cinqüentões"), "cinqüentõ" );
	deepEqual( Stem("cinta"), "cint" );
	deepEqual( Stem("cinthya"), "cinthy" );
	deepEqual( Stem("cintilante"), "cintil" );
	deepEqual( Stem("cintilografia"), "cintilograf" );
	deepEqual( Stem("cinto"), "cint" );
	deepEqual( Stem("cintos"), "cint" );
	deepEqual( Stem("cintra"), "cintr" );
	deepEqual( Stem("cintura"), "cintur" );
	deepEqual( Stem("cinturinha"), "cinturinh" );
	deepEqual( Stem("cinza"), "cinz" );
	deepEqual( Stem("cinzas"), "cinz" );
	deepEqual( Stem("cinzeiro"), "cinzeir" );
	deepEqual( Stem("cinzeiros"), "cinzeir" );
	deepEqual( Stem("cinzenta"), "cinzent" );
	deepEqual( Stem("cinzento"), "cinzent" );
	deepEqual( Stem("cinzentos"), "cinzent" );
	deepEqual( Stem("cio"), "cio" );
	deepEqual( Stem("cios"), "cios" );
	deepEqual( Stem("cip"), "cip" );
	deepEqual( Stem("cipó"), "cip" );
	deepEqual( Stem("cipriano"), "ciprian" );
	deepEqual( Stem("ciranda"), "cirand" );
	deepEqual( Stem("circo"), "circ" );
	deepEqual( Stem("circuito"), "circuit" );
	deepEqual( Stem("circuitos"), "circuit" );
	deepEqual( Stem("circula"), "circul" );
	deepEqual( Stem("circulação"), "circul" );
	deepEqual( Stem("circulam"), "circul" );
	deepEqual( Stem("circulando"), "circul" );
	deepEqual( Stem("circular"), "circul" );
	deepEqual( Stem("circularem"), "circul" );
	deepEqual( Stem("circulatória"), "circulatór" );
	deepEqual( Stem("circulatório"), "circulatóri" );
	deepEqual( Stem("circulava"), "circul" );
	deepEqual( Stem("circulem"), "circul" );
	deepEqual( Stem("círculo"), "círcul" );
	deepEqual( Stem("círculos"), "círcul" );
	deepEqual( Stem("circulou"), "circul" );
	deepEqual( Stem("circundante"), "circund" );
	deepEqual( Stem("circundavam"), "circund" );
	deepEqual( Stem("circunstância"), "circunst" );
	deepEqual( Stem("circunstancial"), "circunstancial" );
	deepEqual( Stem("circunstâncias"), "circunstânc" );
	deepEqual( Stem("cirillo"), "cirill" );
	deepEqual( Stem("ciro"), "cir" );
	deepEqual( Stem("cirrose"), "cirros" );
	deepEqual( Stem("cirugia"), "cirug" );
	deepEqual( Stem("cirugião"), "cirugiã" );
	deepEqual( Stem("cirurgia"), "cirurg" );
	deepEqual( Stem("cirurgiã"), "cirurgiã" );
	deepEqual( Stem("cirurgião"), "cirurgiã" );
	deepEqual( Stem("cirurgias"), "cirurg" );
	deepEqual( Stem("cirúrgica"), "cirúrg" );
	deepEqual( Stem("cirúrgicas"), "cirúrg" );
	deepEqual( Stem("cirúrgico"), "cirúrg" );
	deepEqual( Stem("cirúrgicos"), "cirúrg" );
	deepEqual( Stem("cis"), "cis" );
	deepEqual( Stem("cisjordânia"), "cisjordân" );
	deepEqual( Stem("cisma"), "cism" );
	deepEqual( Stem("cismaram"), "cism" );
	deepEqual( Stem("cisne"), "cisn" );
	deepEqual( Stem("cisões"), "cisõ" );
	deepEqual( Stem("cística"), "cístic" );
	deepEqual( Stem("cisto"), "cist" );
	deepEqual( Stem("cistos"), "cist" );
	deepEqual( Stem("cita"), "cit" );
	deepEqual( Stem("citação"), "citaçã" );
	deepEqual( Stem("citadas"), "cit" );
	deepEqual( Stem("citado"), "cit" );
	deepEqual( Stem("citados"), "cit" );
	deepEqual( Stem("citando"), "cit" );
	deepEqual( Stem("citar"), "cit" );
	deepEqual( Stem("citation"), "citation" );
	deepEqual( Stem("cites"), "cit" );
	deepEqual( Stem("citiações"), "citiaçõ" );
	deepEqual( Stem("citibank"), "citibank" );
	deepEqual( Stem("citou"), "cit" );
	deepEqual( Stem("cítrico"), "cítric" );
	deepEqual( Stem("cítricos"), "cítric" );
	deepEqual( Stem("citrocar"), "citroc" );
	deepEqual( Stem("city"), "city" );
	deepEqual( Stem("ciúme"), "ciúm" );
	deepEqual( Stem("ciumento"), "ciument" );
	deepEqual( Stem("ciúmes"), "ciúm" );
	deepEqual( Stem("cível"), "cível" );
	deepEqual( Stem("civic"), "civic" );
	deepEqual( Stem("cívicas"), "cívic" );
	deepEqual( Stem("cívico"), "cívic" );
	deepEqual( Stem("civil"), "civil" );
	deepEqual( Stem("civilização"), "civiliz" );
	deepEqual( Stem("civilizações"), "civiliz" );
	deepEqual( Stem("civilizadas"), "civiliz" );
	deepEqual( Stem("civis"), "civ" );
	deepEqual( Stem("cl"), "cl" );
	deepEqual( Stem("clã"), "clã" );
	deepEqual( Stem("clamor"), "clamor" );
	deepEqual( Stem("clamorosos"), "clamor" );
	deepEqual( Stem("clandestina"), "clandestin" );
	deepEqual( Stem("clandestinamente"), "clandestin" );
	deepEqual( Stem("clandestinas"), "clandestin" );
	deepEqual( Stem("clandestinidade"), "clandestin" );
	deepEqual( Stem("clandestino"), "clandestin" );
	deepEqual( Stem("clandestinos"), "clandestin" );
	deepEqual( Stem("clapton"), "clapton" );
	deepEqual( Stem("clara"), "clar" );
	deepEqual( Stem("claramente"), "clar" );
	deepEqual( Stem("claras"), "clar" );
	deepEqual( Stem("clareada"), "clar" );
	deepEqual( Stem("clareando"), "clar" );
	deepEqual( Stem("clarear"), "clar" );
	deepEqual( Stem("clareiam"), "clar" );
	deepEqual( Stem("clareira"), "clareir" );
	deepEqual( Stem("clareza"), "clarez" );
	deepEqual( Stem("clarice"), "claric" );
	deepEqual( Stem("claridade"), "claridad" );
	deepEqual( Stem("claridge"), "claridg" );
	deepEqual( Stem("claríssimo"), "claríssim" );
	deepEqual( Stem("clark"), "clark" );
	deepEqual( Stem("clarke"), "clark" );
	deepEqual( Stem("claro"), "clar" );
	deepEqual( Stem("claros"), "clar" );
	deepEqual( Stem("classe"), "class" );
	deepEqual( Stem("classes"), "class" );
	deepEqual( Stem("clássica"), "clássic" );
	deepEqual( Stem("clássicas"), "clássic" );
	deepEqual( Stem("clássico"), "clássic" );
	deepEqual( Stem("clássicos"), "clássic" );
	deepEqual( Stem("classics"), "classics" );
	deepEqual( Stem("classifica"), "classif" );
	deepEqual( Stem("classificação"), "classific" );
	deepEqual( Stem("classificada"), "classific" );
	deepEqual( Stem("classificadas"), "classific" );
	deepEqual( Stem("classificado"), "classific" );
	deepEqual( Stem("classificador"), "classific" );
	deepEqual( Stem("classificados"), "classific" );
	deepEqual( Stem("classificam"), "classific" );
	deepEqual( Stem("classificando"), "classific" );
	deepEqual( Stem("classificar"), "classific" );
	deepEqual( Stem("classificaria"), "classific" );
	deepEqual( Stem("classiline"), "classilin" );
	deepEqual( Stem("claucerlei"), "claucerl" );
	deepEqual( Stem("claudeir"), "claud" );
	deepEqual( Stem("claudete"), "claudet" );
	deepEqual( Stem("claudia"), "claud" );
	deepEqual( Stem("cláudia"), "cláud" );
	deepEqual( Stem("claudinho"), "claudinh" );
	deepEqual( Stem("claudino"), "claudin" );
	deepEqual( Stem("claudio"), "claudi" );
	deepEqual( Stem("cláudio"), "cláudi" );
	deepEqual( Stem("claúdio"), "claúdi" );
	deepEqual( Stem("claudius"), "claudius" );
	deepEqual( Stem("cláusula"), "cláusul" );
	deepEqual( Stem("clayton"), "clayton" );
	deepEqual( Stem("clean"), "clean" );
	deepEqual( Stem("cleber"), "cleb" );
	deepEqual( Stem("cledson"), "cledson" );
	deepEqual( Stem("cléo"), "clé" );
	deepEqual( Stem("clérigo"), "clérig" );
	deepEqual( Stem("clérigos"), "clérig" );
	deepEqual( Stem("clero"), "cler" );
	deepEqual( Stem("cleto"), "clet" );
	deepEqual( Stem("cleusa"), "cleus" );
	deepEqual( Stem("cleveland"), "cleveland" );
	deepEqual( Stem("cleverson"), "cleverson" );
	deepEqual( Stem("cliente"), "client" );
	deepEqual( Stem("clientela"), "clientel" );
	deepEqual( Stem("clientelismo"), "clientel" );
	deepEqual( Stem("clientes"), "client" );
	deepEqual( Stem("clima"), "clim" );
	deepEqual( Stem("climas"), "clim" );
	deepEqual( Stem("climatério"), "climatéri" );
	deepEqual( Stem("climatizada"), "climatiz" );
	deepEqual( Stem("climatizadas"), "climatiz" );
	deepEqual( Stem("climatizado"), "climatiz" );
	deepEqual( Stem("clímax"), "clímax" );
	deepEqual( Stem("clínica"), "clínic" );
	deepEqual( Stem("clinicamente"), "clinic" );
	deepEqual( Stem("clínicas"), "clínic" );
	deepEqual( Stem("clínico"), "clínic" );
	deepEqual( Stem("clínicos"), "clínic" );
	deepEqual( Stem("clinics"), "clinics" );
	deepEqual( Stem("clinton"), "clinton" );
	deepEqual( Stem("clio"), "cli" );
	deepEqual( Stem("clip"), "clip" );
	deepEqual( Stem("clipe"), "clip" );
	deepEqual( Stem("clipes"), "clip" );
	deepEqual( Stem("clique"), "cliqu" );
	deepEqual( Stem("cliques"), "cliqu" );
	deepEqual( Stem("clitóris"), "clitór" );
	deepEqual( Stem("clitoromegalia"), "clitoromegal" );
	deepEqual( Stem("clô"), "clô" );
	deepEqual( Stem("clock"), "clock" );
	deepEqual( Stem("cloé"), "clo" );
	deepEqual( Stem("clonada"), "clon" );
	deepEqual( Stem("clonagem"), "clonag" );
	deepEqual( Stem("clone"), "clon" );
	deepEqual( Stem("clorofórmio"), "clorofórmi" );
	deepEqual( Stem("clos"), "clos" );
	deepEqual( Stem("close"), "clos" );
	deepEqual( Stem("closes"), "clos" );
	deepEqual( Stem("closet"), "closet" );
	deepEqual( Stem("clouseau"), "clouseau" );
	deepEqual( Stem("clovis"), "clov" );
	deepEqual( Stem("clóvis"), "clóv" );
	deepEqual( Stem("club"), "club" );
	deepEqual( Stem("clubber"), "clubb" );
	deepEqual( Stem("clubbers"), "clubbers" );
	deepEqual( Stem("clube"), "club" );
	deepEqual( Stem("clubes"), "club" );
	deepEqual( Stem("clylton"), "clylton" );
	deepEqual( Stem("cm"), "cm" );
	deepEqual( Stem("cnbb"), "cnbb" );
	deepEqual( Stem("cnn"), "cnn" );
	deepEqual( Stem("cnpq"), "cnpq" );
	deepEqual( Stem("cnt"), "cnt" );
	deepEqual( Stem("co"), "co" );
	deepEqual( Stem("coabitação"), "coabit" );
	deepEqual( Stem("coadjuvante"), "coadjuv" );
	deepEqual( Stem("coagida"), "coag" );
	deepEqual( Stem("coagulação"), "coagul" );
	deepEqual( Stem("coágulos"), "coágul" );
	deepEqual( Stem("coalhado"), "coalh" );
	deepEqual( Stem("coalho"), "coalh" );
	deepEqual( Stem("coalition"), "coalition" );
	deepEqual( Stem("coalizão"), "coalizã" );
	deepEqual( Stem("cobaia"), "coba" );
	deepEqual( Stem("cobaias"), "coba" );
	deepEqual( Stem("cobain"), "cobain" );
	deepEqual( Stem("coberta"), "cobert" );
	deepEqual( Stem("cobertas"), "cobert" );
	deepEqual( Stem("coberto"), "cobert" );
	deepEqual( Stem("cobertor"), "cobertor" );
	deepEqual( Stem("cobertos"), "cobert" );
	deepEqual( Stem("cobertura"), "cobertur" );
	deepEqual( Stem("coberturas"), "cobertur" );
	deepEqual( Stem("cobiça"), "cobic" );
	deepEqual( Stem("cobiçadas"), "cobic" );
	deepEqual( Stem("cobiçados"), "cobic" );
	deepEqual( Stem("cobiçaram"), "cobic" );
	deepEqual( Stem("cobra"), "cobr" );
	deepEqual( Stem("cobradas"), "cobr" );
	deepEqual( Stem("cobrado"), "cobr" );
	deepEqual( Stem("cobrados"), "cobr" );
	deepEqual( Stem("cobram"), "cobr" );
	deepEqual( Stem("cobrança"), "cobranc" );
	deepEqual( Stem("cobranças"), "cobranc" );
	deepEqual( Stem("cobrando"), "cobr" );
	deepEqual( Stem("cobrar"), "cobr" );
	deepEqual( Stem("cobras"), "cobr" );
	deepEqual( Stem("cobrava"), "cobr" );
	deepEqual( Stem("cobravam"), "cobr" );
	deepEqual( Stem("cobravem"), "cobrav" );
	deepEqual( Stem("cobre"), "cobr" );
	deepEqual( Stem("cobrem"), "cobr" );
	deepEqual( Stem("cobria"), "cobr" );
	deepEqual( Stem("cobrir"), "cobr" );
	deepEqual( Stem("cobriu"), "cobr" );
	deepEqual( Stem("cobro"), "cobr" );
	deepEqual( Stem("cobrou"), "cobr" );
	deepEqual( Stem("coca"), "coc" );
	deepEqual( Stem("cocaína"), "cocaín" );
	deepEqual( Stem("cochabamba"), "cochabamb" );
	deepEqual( Stem("cochichou"), "cochich" );
	deepEqual( Stem("cochilam"), "cochil" );
	deepEqual( Stem("cochilo"), "cochil" );
	deepEqual( Stem("cochin"), "cochin" );
	deepEqual( Stem("coco"), "coc" );
	deepEqual( Stem("cocô"), "cocô" );
	deepEqual( Stem("cocoa"), "coco" );
	deepEqual( Stem("cocoricó"), "cocoric" );
	deepEqual( Stem("cocos"), "coc" );
	deepEqual( Stem("code"), "cod" );
	deepEqual( Stem("codec"), "codec" );
	deepEqual( Stem("codi"), "cod" );
	deepEqual( Stem("codificadora"), "codific" );
	deepEqual( Stem("código"), "códig" );
	deepEqual( Stem("códigos"), "códig" );
	deepEqual( Stem("codinome"), "codinom" );
	deepEqual( Stem("codinomes"), "codinom" );
	deepEqual( Stem("codis"), "cod" );
	deepEqual( Stem("coelho"), "coelh" );
	deepEqual( Stem("coelhos"), "coelh" );
	deepEqual( Stem("coentro"), "coentr" );
	deepEqual( Stem("coerção"), "coerçã" );
	deepEqual( Stem("coerente"), "coerent" );
	deepEqual( Stem("coeso"), "coes" );
	deepEqual( Stem("coffee"), "coffe" );
	deepEqual( Stem("cofre"), "cofr" );
	deepEqual( Stem("cofres"), "cofr" );
	deepEqual( Stem("cogitado"), "cogit" );
	deepEqual( Stem("cogitar"), "cogit" );
	deepEqual( Stem("cogitou"), "cogit" );
	deepEqual( Stem("cohabs"), "cohabs" );
	deepEqual( Stem("cohen"), "cohen" );
	deepEqual( Stem("coi"), "coi" );
	deepEqual( Stem("coibir"), "coib" );
	deepEqual( Stem("coimbra"), "coimbr" );
	deepEqual( Stem("coincidam"), "coincid" );
	deepEqual( Stem("coincidência"), "coincident" );
	deepEqual( Stem("coincidências"), "coincident" );
	deepEqual( Stem("coincidentemente"), "coincident" );
	deepEqual( Stem("coincidia"), "coincid" );
	deepEqual( Stem("coincidiu"), "coincid" );
	deepEqual( Stem("coisa"), "cois" );
	deepEqual( Stem("coisas"), "cois" );
	deepEqual( Stem("coita"), "coit" );
	deepEqual( Stem("cola"), "col" );
	deepEqual( Stem("colabora"), "colabor" );
	deepEqual( Stem("colaboração"), "colabor" );
	deepEqual( Stem("colaborações"), "colabor" );
	deepEqual( Stem("colaborador"), "colabor" );
	deepEqual( Stem("colaboradores"), "colabor" );
	deepEqual( Stem("colaboram"), "colabor" );
	deepEqual( Stem("colaborando"), "colabor" );
	deepEqual( Stem("colaborar"), "colabor" );
	deepEqual( Stem("colaboraram"), "colabor" );
	deepEqual( Stem("colaboravam"), "colabor" );
	deepEqual( Stem("colaborou"), "colabor" );
	deepEqual( Stem("colada"), "col" );
	deepEqual( Stem("colado"), "col" );
	deepEqual( Stem("colagem"), "colag" );
	deepEqual( Stem("colágeno"), "colágen" );
	deepEqual( Stem("colando"), "col" );
	deepEqual( Stem("colantes"), "colant" );
	deepEqual( Stem("colapso"), "colaps" );
	deepEqual( Stem("colar"), "col" );
	deepEqual( Stem("colares"), "col" );
	deepEqual( Stem("colarinho"), "colarinh" );
	deepEqual( Stem("colarinhos"), "colarinh" );
	deepEqual( Stem("colas"), "col" );
	deepEqual( Stem("colaterais"), "colater" );
	deepEqual( Stem("colateral"), "colateral" );
	deepEqual( Stem("colava"), "col" );
	deepEqual( Stem("colchão"), "colchã" );
	deepEqual( Stem("colchões"), "colchõ" );
	deepEqual( Stem("cole"), "col" );
	deepEqual( Stem("coleção"), "coleçã" );
	deepEqual( Stem("coleciona"), "colecion" );
	deepEqual( Stem("colecionando"), "colecion" );
	deepEqual( Stem("colecionava"), "colecion" );
	deepEqual( Stem("coleções"), "coleçõ" );
	deepEqual( Stem("colega"), "coleg" );
	deepEqual( Stem("colegas"), "coleg" );
	deepEqual( Stem("colegiado"), "colegi" );
	deepEqual( Stem("colegial"), "colegial" );
	deepEqual( Stem("colégio"), "colégi" );
	deepEqual( Stem("colégios"), "colégi" );
	deepEqual( Stem("coleguinha"), "coleguinh" );
	deepEqual( Stem("coleguinhas"), "coleguinh" );
	deepEqual( Stem("cólera"), "cól" );
	deepEqual( Stem("coléricas"), "colér" );
	deepEqual( Stem("coles"), "col" );
	deepEqual( Stem("colesterol"), "colesterol" );
	deepEqual( Stem("coleta"), "colet" );
	deepEqual( Stem("coletado"), "colet" );
	deepEqual( Stem("coletados"), "colet" );
	deepEqual( Stem("coletando"), "colet" );
	deepEqual( Stem("coletâneas"), "coletân" );
	deepEqual( Stem("colete"), "colet" );
	deepEqual( Stem("coletes"), "colet" );
	deepEqual( Stem("coletiva"), "colet" );
	deepEqual( Stem("coletivas"), "colet" );
	deepEqual( Stem("coletivo"), "colet" );
	deepEqual( Stem("coletivos"), "colet" );
	deepEqual( Stem("colhe"), "colh" );
	deepEqual( Stem("colhedeira"), "colhedeir" );
	deepEqual( Stem("colhedeiras"), "colhedeir" );
	deepEqual( Stem("colheita"), "colheit" );
	deepEqual( Stem("colheitas"), "colheit" );
	deepEqual( Stem("colhem"), "colh" );
	deepEqual( Stem("colhendo"), "colh" );
	deepEqual( Stem("colher"), "colh" );
	deepEqual( Stem("colherá"), "colh" );
	deepEqual( Stem("colheu"), "colh" );
	deepEqual( Stem("colhidas"), "colh" );
	deepEqual( Stem("colhido"), "colh" );
	deepEqual( Stem("colhidos"), "colh" );
	deepEqual( Stem("colho"), "colh" );
	deepEqual( Stem("cólicas"), "cólic" );
	deepEqual( Stem("colidem"), "colid" );
	deepEqual( Stem("colidindo"), "colid" );
	deepEqual( Stem("colidiu"), "colid" );
	deepEqual( Stem("coligações"), "colig" );
	deepEqual( Stem("coligadas"), "colig" );
	deepEqual( Stem("coligará"), "colig" );
	deepEqual( Stem("colin"), "colin" );
	deepEqual( Stem("colina"), "colin" );
	deepEqual( Stem("colírio"), "colíri" );
	deepEqual( Stem("colisão"), "colisã" );
	deepEqual( Stem("collaborative"), "collaborativ" );
	deepEqual( Stem("collares"), "coll" );
	deepEqual( Stem("colli"), "coll" );
	deepEqual( Stem("collin"), "collin" );
	deepEqual( Stem("collor"), "collor" );
	deepEqual( Stem("colo"), "col" );
	deepEqual( Stem("coloboravam"), "colobor" );
	deepEqual( Stem("coloca"), "coloc" );
	deepEqual( Stem("colocá"), "coloc" );
	deepEqual( Stem("colocação"), "coloc" );
	deepEqual( Stem("colocada"), "coloc" );
	deepEqual( Stem("colocadas"), "coloc" );
	deepEqual( Stem("colocado"), "coloc" );
	deepEqual( Stem("colocados"), "coloc" );
	deepEqual( Stem("colocam"), "coloc" );
	deepEqual( Stem("colocamos"), "coloc" );
	deepEqual( Stem("colocando"), "coloc" );
	deepEqual( Stem("colocar"), "coloc" );
	deepEqual( Stem("colocaram"), "coloc" );
	deepEqual( Stem("colocarão"), "coloc" );
	deepEqual( Stem("colocaria"), "coloc" );
	deepEqual( Stem("colocariam"), "coloc" );
	deepEqual( Stem("colocarmos"), "coloc" );
	deepEqual( Stem("colocasse"), "coloc" );
	deepEqual( Stem("colocava"), "coloc" );
	deepEqual( Stem("coloco"), "coloc" );
	deepEqual( Stem("colocou"), "coloc" );
	deepEqual( Stem("colômbia"), "colômb" );
	deepEqual( Stem("colombiana"), "colombian" );
	deepEqual( Stem("colombianas"), "colombian" );
	deepEqual( Stem("colombiano"), "colombian" );
	deepEqual( Stem("colombianos"), "colombian" );
	deepEqual( Stem("colombo"), "colomb" );
	deepEqual( Stem("cólon"), "cólon" );
	deepEqual( Stem("colônia"), "colôn" );
	deepEqual( Stem("coloniais"), "coloni" );
	deepEqual( Stem("colonial"), "colonial" );
	deepEqual( Stem("colonialismo"), "colonial" );
	deepEqual( Stem("colonização"), "coloniz" );
	deepEqual( Stem("colonizado"), "coloniz" );
	deepEqual( Stem("colonizadores"), "coloniz" );
	deepEqual( Stem("colonizar"), "coloniz" );
	deepEqual( Stem("colono"), "colon" );
	deepEqual( Stem("colonos"), "colon" );
	deepEqual( Stem("coloque"), "coloqu" );
	deepEqual( Stem("coloquem"), "coloqu" );
	deepEqual( Stem("coloração"), "color" );
	deepEqual( Stem("colorado"), "color" );
	deepEqual( Stem("coloratura"), "coloratur" );
	deepEqual( Stem("colorida"), "color" );
	deepEqual( Stem("coloridas"), "color" );
	deepEqual( Stem("colorido"), "color" );
	deepEqual( Stem("coloridos"), "color" );
	deepEqual( Stem("colors"), "colors" );
	deepEqual( Stem("colortel"), "colortel" );
	deepEqual( Stem("colossais"), "coloss" );
	deepEqual( Stem("colossal"), "colossal" );
	deepEqual( Stem("columbia"), "columb" );
	deepEqual( Stem("colúmbia"), "colúmb" );
	deepEqual( Stem("coluna"), "colun" );
	deepEqual( Stem("colunas"), "colun" );
	deepEqual( Stem("colunáveis"), "colun" );
	deepEqual( Stem("colunista"), "colun" );
	deepEqual( Stem("com"), "com" );
	deepEqual( Stem("coma"), "com" );
	deepEqual( Stem("comam"), "com" );
	deepEqual( Stem("comanche"), "comanch" );
	deepEqual( Stem("comanda"), "comand" );
	deepEqual( Stem("comandada"), "comand" );
	deepEqual( Stem("comandadas"), "comand" );
	deepEqual( Stem("comandado"), "comand" );
	deepEqual( Stem("comandados"), "comand" );
	deepEqual( Stem("comandam"), "comand" );
	deepEqual( Stem("comandande"), "comandand" );
	deepEqual( Stem("comandante"), "comand" );
	deepEqual( Stem("comandantes"), "comand" );
	deepEqual( Stem("comandar"), "comand" );
	deepEqual( Stem("comandará"), "comand" );
	deepEqual( Stem("comandarem"), "comand" );
	deepEqual( Stem("comando"), "com" );
	deepEqual( Stem("comandos"), "comand" );
	deepEqual( Stem("comandou"), "comand" );
	deepEqual( Stem("comarca"), "comarc" );
	deepEqual( Stem("comarcas"), "comarc" );
	deepEqual( Stem("combalida"), "combal" );
	deepEqual( Stem("combalido"), "combal" );
	deepEqual( Stem("combate"), "combat" );
	deepEqual( Stem("combatê"), "combat" );
	deepEqual( Stem("combatem"), "combat" );
	deepEqual( Stem("combatendo"), "combat" );
	deepEqual( Stem("combatente"), "combatent" );
	deepEqual( Stem("combatentes"), "combatent" );
	deepEqual( Stem("combater"), "combat" );
	deepEqual( Stem("combateram"), "combat" );
	deepEqual( Stem("combates"), "combat" );
	deepEqual( Stem("combateu"), "combat" );
	deepEqual( Stem("combatiam"), "combat" );
	deepEqual( Stem("combatida"), "combat" );
	deepEqual( Stem("combatido"), "combat" );
	deepEqual( Stem("combativa"), "combat" );
	deepEqual( Stem("combativo"), "combat" );
	deepEqual( Stem("combativos"), "combat" );
	deepEqual( Stem("combina"), "combin" );
	deepEqual( Stem("combiná"), "combin" );
	deepEqual( Stem("combinação"), "combin" );
	deepEqual( Stem("combinações"), "combin" );
	deepEqual( Stem("combinada"), "combin" );
	deepEqual( Stem("combinadas"), "combin" );
	deepEqual( Stem("combinado"), "combin" );
	deepEqual( Stem("combinador"), "combin" );
	deepEqual( Stem("combinam"), "combin" );
	deepEqual( Stem("combinamos"), "combin" );
	deepEqual( Stem("combinando"), "combin" );
	deepEqual( Stem("combinar"), "combin" );
	deepEqual( Stem("combinaram"), "combin" );
	deepEqual( Stem("combinem"), "combin" );
	deepEqual( Stem("combinou"), "combin" );
	deepEqual( Stem("comboio"), "comboi" );
	deepEqual( Stem("comboios"), "comboi" );
	deepEqual( Stem("combustão"), "combustã" );
	deepEqual( Stem("combustível"), "combust" );
	deepEqual( Stem("come"), "com" );
	deepEqual( Stem("comê"), "com" );
	deepEqual( Stem("começa"), "comec" );
	deepEqual( Stem("começá"), "comec" );
	deepEqual( Stem("começado"), "comec" );
	deepEqual( Stem("começam"), "comec" );
	deepEqual( Stem("começamos"), "comec" );
	deepEqual( Stem("começando"), "comec" );
	deepEqual( Stem("começar"), "comec" );
	deepEqual( Stem("começará"), "comec" );
	deepEqual( Stem("começaram"), "comec" );
	deepEqual( Stem("começarão"), "comec" );
	deepEqual( Stem("começarem"), "comec" );
	deepEqual( Stem("começaremos"), "comec" );
	deepEqual( Stem("começasse"), "comec" );
	deepEqual( Stem("começava"), "comec" );
	deepEqual( Stem("começavam"), "comec" );
	deepEqual( Stem("comece"), "comec" );
	deepEqual( Stem("comecei"), "comec" );
	deepEqual( Stem("comecem"), "comec" );
	deepEqual( Stem("comecemos"), "comec" );
	deepEqual( Stem("começo"), "comec" );
	deepEqual( Stem("começou"), "comec" );
	deepEqual( Stem("comédia"), "coméd" );
	deepEqual( Stem("comediante"), "comedi" );
	deepEqual( Stem("comediantes"), "comedi" );
	deepEqual( Stem("comedido"), "comed" );
	deepEqual( Stem("comedores"), "comedor" );
	deepEqual( Stem("comem"), "com" );
	deepEqual( Stem("comemora"), "comemor" );
	deepEqual( Stem("comemoração"), "comemor" );
	deepEqual( Stem("comemorações"), "comemor" );
	deepEqual( Stem("comemorada"), "comemor" );
	deepEqual( Stem("comemorado"), "comemor" );
	deepEqual( Stem("comemoram"), "comemor" );
	deepEqual( Stem("comemorando"), "comemor" );
	deepEqual( Stem("comemorar"), "comemor" );
	deepEqual( Stem("comemoraram"), "comemor" );
	deepEqual( Stem("comemorativa"), "comemor" );
	deepEqual( Stem("comemorava"), "comemor" );
	deepEqual( Stem("comemoravam"), "comemor" );
	deepEqual( Stem("comemorou"), "comemor" );
	deepEqual( Stem("comemos"), "com" );
	deepEqual( Stem("comendo"), "com" );
	deepEqual( Stem("comenta"), "coment" );
	deepEqual( Stem("comentada"), "coment" );
	deepEqual( Stem("comentam"), "coment" );
	deepEqual( Stem("comentando"), "coment" );
	deepEqual( Stem("comentar"), "coment" );
	deepEqual( Stem("comentaram"), "coment" );
	deepEqual( Stem("comentário"), "comentári" );
	deepEqual( Stem("comentários"), "comentári" );
	deepEqual( Stem("comentarista"), "comentar" );
	deepEqual( Stem("comentaristas"), "comentar" );
	deepEqual( Stem("comentou"), "coment" );
	deepEqual( Stem("comer"), "com" );
	deepEqual( Stem("comeram"), "com" );
	deepEqual( Stem("comerciais"), "comerc" );
	deepEqual( Stem("comercial"), "comercial" );
	deepEqual( Stem("comercializa"), "comercializ" );
	deepEqual( Stem("comercialização"), "comercializ" );
	deepEqual( Stem("comercializadas"), "comercializ" );
	deepEqual( Stem("comercializados"), "comercializ" );
	deepEqual( Stem("comercializam"), "comercializ" );
	deepEqual( Stem("comercializando"), "comercializ" );
	deepEqual( Stem("comercializar"), "comercializ" );
	deepEqual( Stem("comercialmente"), "comercial" );
	deepEqual( Stem("comerciante"), "comerc" );
	deepEqual( Stem("comerciantes"), "comerc" );
	deepEqual( Stem("comerciar"), "comerc" );
	deepEqual( Stem("comércio"), "comérci" );
	deepEqual( Stem("comeria"), "com" );
	deepEqual( Stem("comes"), "com" );
	deepEqual( Stem("cometa"), "comet" );
	deepEqual( Stem("cometas"), "comet" );
	deepEqual( Stem("comete"), "comet" );
	deepEqual( Stem("cometem"), "comet" );
	deepEqual( Stem("cometemos"), "comet" );
	deepEqual( Stem("cometendo"), "comet" );
	deepEqual( Stem("cometer"), "comet" );
	deepEqual( Stem("cometeram"), "comet" );
	deepEqual( Stem("cometerem"), "comet" );
	deepEqual( Stem("cometeu"), "comet" );
	deepEqual( Stem("cometi"), "comet" );
	deepEqual( Stem("cometida"), "comet" );
	deepEqual( Stem("cometidas"), "comet" );
	deepEqual( Stem("cometido"), "comet" );
	deepEqual( Stem("cometidos"), "comet" );
	deepEqual( Stem("comeu"), "com" );
	deepEqual( Stem("comi"), "com" );
	deepEqual( Stem("comia"), "com" );
	deepEqual( Stem("comiam"), "com" );
	deepEqual( Stem("comíamos"), "com" );
	deepEqual( Stem("cômica"), "cômic" );
	deepEqual( Stem("comicidade"), "comic" );
	deepEqual( Stem("comício"), "comíci" );
	deepEqual( Stem("cômico"), "cômic" );
	deepEqual( Stem("comida"), "com" );
	deepEqual( Stem("comidas"), "com" );
	deepEqual( Stem("comido"), "com" );
	deepEqual( Stem("comigo"), "comig" );
	deepEqual( Stem("comissão"), "comissã" );
	deepEqual( Stem("comissária"), "comissár" );
	deepEqual( Stem("comissárias"), "comissár" );
	deepEqual( Stem("comissário"), "comissári" );
	deepEqual( Stem("comissários"), "comissári" );
	deepEqual( Stem("comission"), "comission" );
	deepEqual( Stem("comissões"), "comissõ" );
	deepEqual( Stem("comitê"), "comit" );
	deepEqual( Stem("comitiva"), "comit" );
	deepEqual( Stem("comjár"), "comjár" );
	deepEqual( Stem("commander"), "command" );
	deepEqual( Stem("commercial"), "commercial" );
	deepEqual( Stem("communicator"), "communicator" );
	deepEqual( Stem("como"), "com" );
	deepEqual( Stem("comoção"), "comoçã" );
	deepEqual( Stem("cômoda"), "cômod" );
	deepEqual( Stem("comodidade"), "comod" );
	deepEqual( Stem("comodidades"), "comod" );
	deepEqual( Stem("comodismo"), "comod" );
	deepEqual( Stem("comodo"), "comod" );
	deepEqual( Stem("cômodo"), "cômod" );
	deepEqual( Stem("cômodos"), "cômod" );
	deepEqual( Stem("comovem"), "comov" );
	deepEqual( Stem("comovente"), "comovent" );
	deepEqual( Stem("comoveu"), "comov" );
	deepEqual( Stem("compactas"), "compact" );
	deepEqual( Stem("compactos"), "compact" );
	deepEqual( Stem("compaixão"), "compaixã" );
	deepEqual( Stem("compañero"), "compañer" );
	deepEqual( Stem("companheira"), "companheir" );
	deepEqual( Stem("companheirada"), "companheir" );
	deepEqual( Stem("companheiro"), "companheir" );
	deepEqual( Stem("companheiros"), "companheir" );
	deepEqual( Stem("companhia"), "companh" );
	deepEqual( Stem("companhias"), "companh" );
	deepEqual( Stem("company"), "company" );
	deepEqual( Stem("compaq"), "compaq" );
	deepEqual( Stem("compara"), "comp" );
	deepEqual( Stem("compará"), "comp" );
	deepEqual( Stem("comparação"), "compar" );
	deepEqual( Stem("comparações"), "compar" );
	deepEqual( Stem("comparada"), "compar" );
	deepEqual( Stem("comparado"), "compar" );
	deepEqual( Stem("comparados"), "compar" );
	deepEqual( Stem("comparam"), "comp" );
	deepEqual( Stem("comparando"), "compar" );
	deepEqual( Stem("comparar"), "compar" );
	deepEqual( Stem("comparará"), "compar" );
	deepEqual( Stem("compararem"), "compar" );
	deepEqual( Stem("comparativamente"), "compar" );
	deepEqual( Stem("comparativo"), "compar" );
	deepEqual( Stem("comparato"), "comparat" );
	deepEqual( Stem("comparáveis"), "compar" );
	deepEqual( Stem("comparável"), "compar" );
	deepEqual( Stem("compare"), "compar" );
	deepEqual( Stem("comparecer"), "comparec" );
	deepEqual( Stem("compareceram"), "comparec" );
	deepEqual( Stem("comparecia"), "comparec" );
	deepEqual( Stem("comparou"), "compar" );
	deepEqual( Stem("comparsa"), "compars" );
	deepEqual( Stem("compartilha"), "compartilh" );
	deepEqual( Stem("compartilhada"), "compartilh" );
	deepEqual( Stem("compartilhado"), "compartilh" );
	deepEqual( Stem("compartilhados"), "compartilh" );
	deepEqual( Stem("compartilhamento"), "compartilh" );
	deepEqual( Stem("compartilhar"), "compartilh" );
	deepEqual( Stem("compartilharam"), "compartilh" );
	deepEqual( Stem("compartilhem"), "compartilh" );
	deepEqual( Stem("compartimentada"), "compartiment" );
	deepEqual( Stem("compartimentaram"), "compartiment" );
	deepEqual( Stem("compartimento"), "compart" );
	deepEqual( Stem("compatibilizar"), "compatibiliz" );
	deepEqual( Stem("compenetrado"), "compenetr" );
	deepEqual( Stem("compensa"), "compens" );
	deepEqual( Stem("compensá"), "compens" );
	deepEqual( Stem("compensação"), "compens" );
	deepEqual( Stem("compensações"), "compens" );
	deepEqual( Stem("compensada"), "compens" );
	deepEqual( Stem("compensado"), "compens" );
	deepEqual( Stem("compensados"), "compens" );
	deepEqual( Stem("compensam"), "compens" );
	deepEqual( Stem("compensar"), "compens" );
	deepEqual( Stem("compensasse"), "compens" );
	deepEqual( Stem("compenso"), "compens" );
	deepEqual( Stem("compensou"), "compens" );
	deepEqual( Stem("compete"), "compet" );
	deepEqual( Stem("competência"), "competent" );
	deepEqual( Stem("competente"), "competent" );
	deepEqual( Stem("competentes"), "competent" );
	deepEqual( Stem("competia"), "compet" );
	deepEqual( Stem("competiam"), "compet" );
	deepEqual( Stem("competição"), "competiçã" );
	deepEqual( Stem("competições"), "competiçõ" );
	deepEqual( Stem("competidores"), "competidor" );
	deepEqual( Stem("competir"), "compet" );
	deepEqual( Stem("competitiva"), "competit" );
	deepEqual( Stem("competitivas"), "competit" );
	deepEqual( Stem("competitividade"), "competit" );
	deepEqual( Stem("competitivo"), "competit" );
	deepEqual( Stem("competitivos"), "competit" );
	deepEqual( Stem("compiladas"), "compil" );
	deepEqual( Stem("compilado"), "compil" );
	deepEqual( Stem("complacência"), "complacent" );
	deepEqual( Stem("complementa"), "complement" );
	deepEqual( Stem("complementação"), "complement" );
	deepEqual( Stem("complementar"), "complement" );
	deepEqual( Stem("complementares"), "complement" );
	deepEqual( Stem("complemento"), "complement" );
	deepEqual( Stem("complementos"), "complement" );
	deepEqual( Stem("complementou"), "complement" );
	deepEqual( Stem("completa"), "complet" );
	deepEqual( Stem("completada"), "complet" );
	deepEqual( Stem("completado"), "complet" );
	deepEqual( Stem("completados"), "complet" );
	deepEqual( Stem("completam"), "complet" );
	deepEqual( Stem("completamente"), "complet" );
	deepEqual( Stem("completando"), "complet" );
	deepEqual( Stem("completar"), "complet" );
	deepEqual( Stem("completará"), "complet" );
	deepEqual( Stem("completas"), "complet" );
	deepEqual( Stem("completava"), "complet" );
	deepEqual( Stem("completinho"), "completinh" );
	deepEqual( Stem("completo"), "complet" );
	deepEqual( Stem("completos"), "complet" );
	deepEqual( Stem("completou"), "complet" );
	deepEqual( Stem("complexa"), "complex" );
	deepEqual( Stem("complexada"), "complex" );
	deepEqual( Stem("complexas"), "complex" );
	deepEqual( Stem("complexidade"), "complex" );
	deepEqual( Stem("complexidades"), "complex" );
	deepEqual( Stem("complexo"), "complex" );
	deepEqual( Stem("complexos"), "complex" );
	deepEqual( Stem("complica"), "complic" );
	deepEqual( Stem("complicação"), "complic" );
	deepEqual( Stem("complicações"), "complic" );
	deepEqual( Stem("complicada"), "complic" );
	deepEqual( Stem("complicadas"), "complic" );
	deepEqual( Stem("complicadíssima"), "complicadíssim" );
	deepEqual( Stem("complicado"), "complic" );
	deepEqual( Stem("complicador"), "complic" );
	deepEqual( Stem("complicados"), "complic" );
	deepEqual( Stem("complicando"), "complic" );
	deepEqual( Stem("complicar"), "complic" );
	deepEqual( Stem("complicava"), "complic" );
	deepEqual( Stem("complicou"), "complic" );
	deepEqual( Stem("complô"), "complô" );
	deepEqual( Stem("compõe"), "compõ" );
	deepEqual( Stem("compõem"), "compõ" );
	deepEqual( Stem("compondo"), "compond" );
	deepEqual( Stem("componente"), "component" );
	deepEqual( Stem("componentes"), "component" );
	deepEqual( Stem("compor"), "compor" );
	deepEqual( Stem("comporta"), "comport" );
	deepEqual( Stem("comportada"), "comport" );
	deepEqual( Stem("comportadíssima"), "comportadíssim" );
	deepEqual( Stem("comportado"), "comport" );
	deepEqual( Stem("comportamental"), "comportamental" );
	deepEqual( Stem("comportamento"), "comport" );
	deepEqual( Stem("comportamentos"), "comport" );
	deepEqual( Stem("comportar"), "comport" );
	deepEqual( Stem("comportava"), "comport" );
	deepEqual( Stem("compôs"), "compôs" );
	deepEqual( Stem("composição"), "composiçã" );
	deepEqual( Stem("composições"), "composiçõ" );
	deepEqual( Stem("compositor"), "compositor" );
	deepEqual( Stem("compositores"), "compositor" );
	deepEqual( Stem("composta"), "compost" );
	deepEqual( Stem("compostas"), "compost" );
	deepEqual( Stem("composto"), "compost" );
	deepEqual( Stem("compostos"), "compost" );
	deepEqual( Stem("compra"), "compr" );
	deepEqual( Stem("comprá"), "compr" );
	deepEqual( Stem("comprada"), "compr" );
	deepEqual( Stem("compradas"), "compr" );
	deepEqual( Stem("comprado"), "compr" );
	deepEqual( Stem("comprador"), "comprador" );
	deepEqual( Stem("compradoras"), "comprador" );
	deepEqual( Stem("compradores"), "comprador" );
	deepEqual( Stem("comprados"), "compr" );
	deepEqual( Stem("compram"), "compr" );
	deepEqual( Stem("compramos"), "compr" );
	deepEqual( Stem("comprando"), "compr" );
	deepEqual( Stem("comprar"), "compr" );
	deepEqual( Stem("compraram"), "compr" );
	deepEqual( Stem("compraria"), "compr" );
	deepEqual( Stem("compras"), "compr" );
	deepEqual( Stem("comprasse"), "compr" );
	deepEqual( Stem("comprava"), "compr" );
	deepEqual( Stem("compravam"), "compr" );
	deepEqual( Stem("compre"), "compr" );
	deepEqual( Stem("compreende"), "compreend" );
	deepEqual( Stem("compreendem"), "compreend" );
	deepEqual( Stem("compreendemos"), "compreend" );
	deepEqual( Stem("compreender"), "compreend" );
	deepEqual( Stem("compreenderam"), "compreend" );
	deepEqual( Stem("compreendidas"), "compreend" );
	deepEqual( Stem("compreendido"), "compreend" );
	deepEqual( Stem("compreensão"), "compreensã" );
	deepEqual( Stem("compreensiva"), "compreens" );
	deepEqual( Stem("compreensível"), "compreens" );
	deepEqual( Stem("compreensivo"), "compreens" );
	deepEqual( Stem("comprei"), "compr" );
	deepEqual( Stem("compresp"), "compresp" );
	deepEqual( Stem("compressão"), "compressã" );
	deepEqual( Stem("compressas"), "compress" );
	deepEqual( Stem("compressor"), "compressor" );
	deepEqual( Stem("comprida"), "compr" );
	deepEqual( Stem("compridão"), "compridã" );
	deepEqual( Stem("compridas"), "compr" );
	deepEqual( Stem("comprido"), "compr" );
	deepEqual( Stem("compridos"), "compr" );
	deepEqual( Stem("comprimento"), "compriment" );
	deepEqual( Stem("comprimidas"), "comprim" );
	deepEqual( Stem("comprimido"), "comprim" );
	deepEqual( Stem("comprimidos"), "comprim" );
	deepEqual( Stem("compro"), "compr" );
	deepEqual( Stem("compromete"), "compromet" );
	deepEqual( Stem("comprometedor"), "comprometedor" );
	deepEqual( Stem("comprometedoras"), "comprometedor" );
	deepEqual( Stem("comprometedores"), "comprometedor" );
	deepEqual( Stem("comprometem"), "compromet" );
	deepEqual( Stem("comprometendo"), "compromet" );
	deepEqual( Stem("comprometer"), "compromet" );
	deepEqual( Stem("comprometeu"), "compromet" );
	deepEqual( Stem("comprometiam"), "compromet" );
	deepEqual( Stem("comprometida"), "compromet" );
	deepEqual( Stem("comprometido"), "compromet" );
	deepEqual( Stem("comprometimento"), "compromet" );
	deepEqual( Stem("compromisso"), "compromiss" );
	deepEqual( Stem("compromissos"), "compromiss" );
	deepEqual( Stem("comprou"), "compr" );
	deepEqual( Stem("comprova"), "comprov" );
	deepEqual( Stem("comprovação"), "comprov" );
	deepEqual( Stem("comprovada"), "comprov" );
	deepEqual( Stem("comprovadamente"), "comprov" );
	deepEqual( Stem("comprovadas"), "comprov" );
	deepEqual( Stem("comprovado"), "comprov" );
	deepEqual( Stem("comprovados"), "comprov" );
	deepEqual( Stem("comprovam"), "comprov" );
	deepEqual( Stem("comprovar"), "comprov" );
	deepEqual( Stem("comprovaram"), "comprov" );
	deepEqual( Stem("comprovaria"), "comprov" );
	deepEqual( Stem("comprovou"), "comprov" );
	deepEqual( Stem("compulsão"), "compulsã" );
	deepEqual( Stem("compulsivamente"), "compuls" );
	deepEqual( Stem("compulsivo"), "compuls" );
	deepEqual( Stem("compulsivos"), "compuls" );
	deepEqual( Stem("compulsoriamente"), "compulsori" );
	deepEqual( Stem("compulsório"), "compulsóri" );
	deepEqual( Stem("compunha"), "compunh" );
	deepEqual( Stem("computação"), "comput" );
	deepEqual( Stem("computador"), "comput" );
	deepEqual( Stem("computadores"), "comput" );
	deepEqual( Stem("computadorizada"), "computadoriz" );
	deepEqual( Stem("computadorizado"), "computadoriz" );
	deepEqual( Stem("computando"), "comput" );
	deepEqual( Stem("computar"), "comput" );
	deepEqual( Stem("computava"), "comput" );
	deepEqual( Stem("computável"), "comput" );
	deepEqual( Stem("computer"), "comput" );
	deepEqual( Stem("comum"), "comum" );
	deepEqual( Stem("comungar"), "comung" );
	deepEqual( Stem("comunhão"), "comunhã" );
	deepEqual( Stem("comunica"), "comun" );
	deepEqual( Stem("comunicação"), "comunic" );
	deepEqual( Stem("comunicações"), "comunic" );
	deepEqual( Stem("comunicada"), "comunic" );
	deepEqual( Stem("comunicador"), "comunic" );
	deepEqual( Stem("comunicam"), "comunic" );
	deepEqual( Stem("comunicar"), "comunic" );
	deepEqual( Stem("comunicaram"), "comunic" );
	deepEqual( Stem("comunicou"), "comunic" );
	deepEqual( Stem("comunidade"), "comun" );
	deepEqual( Stem("comunidades"), "comun" );
	deepEqual( Stem("comunismo"), "comun" );
	deepEqual( Stem("comunista"), "comun" );
	deepEqual( Stem("comunistas"), "comun" );
	deepEqual( Stem("comunitária"), "comunitár" );
	deepEqual( Stem("comunitárias"), "comunitár" );
	deepEqual( Stem("comunitário"), "comunitári" );
	deepEqual( Stem("comunitários"), "comunitári" );
	deepEqual( Stem("comuns"), "comuns" );
	deepEqual( Stem("conab"), "conab" );
	deepEqual( Stem("conaf"), "conaf" );
	deepEqual( Stem("concebeu"), "conceb" );
	deepEqual( Stem("concebido"), "conceb" );
	deepEqual( Stem("concede"), "conced" );
	deepEqual( Stem("concedei"), "conced" );
	deepEqual( Stem("concedendo"), "conced" );
	deepEqual( Stem("conceder"), "conced" );
	deepEqual( Stem("concederá"), "conced" );
	deepEqual( Stem("concedeu"), "conced" );
	deepEqual( Stem("concedi"), "conced" );
	deepEqual( Stem("concedida"), "conced" );
	deepEqual( Stem("concedido"), "conced" );
	deepEqual( Stem("concedidos"), "conced" );
	deepEqual( Stem("conceição"), "conceiçã" );
	deepEqual( Stem("conceito"), "conceit" );
	deepEqual( Stem("conceitos"), "conceit" );
	deepEqual( Stem("conceituada"), "conceitu" );
	deepEqual( Stem("conceituado"), "conceitu" );
	deepEqual( Stem("conceituados"), "conceitu" );
	deepEqual( Stem("conceitual"), "conceitual" );
	deepEqual( Stem("concentra"), "concentr" );
	deepEqual( Stem("concentração"), "concentr" );
	deepEqual( Stem("concentrações"), "concentr" );
	deepEqual( Stem("concentrada"), "concentr" );
	deepEqual( Stem("concentrado"), "concentr" );
	deepEqual( Stem("concentrados"), "concentr" );
	deepEqual( Stem("concentram"), "concentr" );
	deepEqual( Stem("concentrando"), "concentr" );
	deepEqual( Stem("concentrar"), "concentr" );
	deepEqual( Stem("concentravam"), "concentr" );
	deepEqual( Stem("concentrou"), "concentr" );
	deepEqual( Stem("concepção"), "concepçã" );
	deepEqual( Stem("concert"), "concert" );
	deepEqual( Stem("concertos"), "concert" );
	deepEqual( Stem("concessão"), "concessã" );
	deepEqual( Stem("concessionária"), "concessionár" );
	deepEqual( Stem("concessões"), "concessõ" );
	deepEqual( Stem("conchas"), "conch" );
	deepEqual( Stem("conciliar"), "concili" );
	deepEqual( Stem("conciliou"), "concili" );
	deepEqual( Stem("conclui"), "conclu" );
	deepEqual( Stem("concluía"), "concluí" );
	deepEqual( Stem("concluídas"), "concluíd" );
	deepEqual( Stem("concluído"), "concluíd" );
	deepEqual( Stem("concluindo"), "conclu" );
	deepEqual( Stem("concluir"), "conclu" );
	deepEqual( Stem("concluíram"), "concluír" );
	deepEqual( Stem("concluiriam"), "conclu" );
	deepEqual( Stem("concluiu"), "conclu" );
	deepEqual( Stem("conclusão"), "conclusã" );
	deepEqual( Stem("conclusivo"), "conclus" );
	deepEqual( Stem("conclusivos"), "conclus" );
	deepEqual( Stem("conclusões"), "conclusõ" );
	deepEqual( Stem("concone"), "concon" );
	deepEqual( Stem("concorda"), "concord" );
	deepEqual( Stem("concordado"), "concord" );
	deepEqual( Stem("concordam"), "concord" );
	deepEqual( Stem("concordar"), "concord" );
	deepEqual( Stem("concordassem"), "concord" );
	deepEqual( Stem("concordata"), "concordat" );
	deepEqual( Stem("concordava"), "concord" );
	deepEqual( Stem("concórdia"), "concórd" );
	deepEqual( Stem("concordo"), "concord" );
	deepEqual( Stem("concordou"), "concord" );
	deepEqual( Stem("concorre"), "concorr" );
	deepEqual( Stem("concorrem"), "concorr" );
	deepEqual( Stem("concorrência"), "concorrent" );
	deepEqual( Stem("concorrendo"), "concorr" );
	deepEqual( Stem("concorrente"), "concorrent" );
	deepEqual( Stem("concorrentes"), "concorrent" );
	deepEqual( Stem("concorrer"), "concorr" );
	deepEqual( Stem("concorria"), "concorr" );
	deepEqual( Stem("concorrida"), "concorr" );
	deepEqual( Stem("concorrido"), "concorr" );
	deepEqual( Stem("concreta"), "concret" );
	deepEqual( Stem("concretamente"), "concret" );
	deepEqual( Stem("concretas"), "concret" );
	deepEqual( Stem("concretista"), "concret" );
	deepEqual( Stem("concretizá"), "concretiz" );
	deepEqual( Stem("concretização"), "concretiz" );
	deepEqual( Stem("concretizado"), "concretiz" );
	deepEqual( Stem("concretizando"), "concretiz" );
	deepEqual( Stem("concretizar"), "concretiz" );
	deepEqual( Stem("concreto"), "concret" );
	deepEqual( Stem("concretos"), "concret" );
	deepEqual( Stem("concurso"), "concurs" );
	deepEqual( Stem("concursos"), "concurs" );
	deepEqual( Stem("condão"), "condã" );
	deepEqual( Stem("conde"), "cond" );
	deepEqual( Stem("condecoração"), "condecor" );
	deepEqual( Stem("condena"), "conden" );
	deepEqual( Stem("condenação"), "conden" );
	deepEqual( Stem("condenações"), "conden" );
	deepEqual( Stem("condenada"), "conden" );
	deepEqual( Stem("condenado"), "conden" );
	deepEqual( Stem("condenados"), "conden" );
	deepEqual( Stem("condenam"), "conden" );
	deepEqual( Stem("condenando"), "conden" );
	deepEqual( Stem("condenar"), "conden" );
	deepEqual( Stem("condenava"), "conden" );
	deepEqual( Stem("condenável"), "conden" );
	deepEqual( Stem("condenou"), "conden" );
	deepEqual( Stem("condensa"), "condens" );
	deepEqual( Stem("condephaat"), "condephaat" );
	deepEqual( Stem("condescendente"), "condescendent" );
	deepEqual( Stem("condição"), "condiçã" );
	deepEqual( Stem("condicionada"), "condicion" );
	deepEqual( Stem("condicionado"), "condicion" );
	deepEqual( Stem("condicional"), "condicional" );
	deepEqual( Stem("condicionamento"), "condicion" );
	deepEqual( Stem("condicionou"), "condicion" );
	deepEqual( Stem("condições"), "condiçõ" );
	deepEqual( Stem("condimentar"), "condiment" );
	deepEqual( Stem("condizente"), "condizent" );
	deepEqual( Stem("condomínio"), "condomíni" );
	deepEqual( Stem("condomínios"), "condomíni" );
	deepEqual( Stem("condução"), "conduçã" );
	deepEqual( Stem("conduções"), "conduçõ" );
	deepEqual( Stem("conduta"), "condut" );
	deepEqual( Stem("condutas"), "condut" );
	deepEqual( Stem("conduz"), "conduz" );
	deepEqual( Stem("conduzia"), "conduz" );
	deepEqual( Stem("conduzidas"), "conduz" );
	deepEqual( Stem("conduzidos"), "conduz" );
	deepEqual( Stem("conduzindo"), "conduz" );
	deepEqual( Stem("conduzir"), "conduz" );
	deepEqual( Stem("conduziria"), "conduz" );
	deepEqual( Stem("conduziu"), "conduz" );
	deepEqual( Stem("cone"), "con" );
	deepEqual( Stem("conecta"), "conect" );
	deepEqual( Stem("conectadas"), "conect" );
	deepEqual( Stem("conectassem"), "conect" );
	deepEqual( Stem("conectava"), "conect" );
	deepEqual( Stem("conexão"), "conexã" );
	deepEqual( Stem("conexões"), "conexõ" );
	deepEqual( Stem("confecção"), "confecçã" );
	deepEqual( Stem("confeccionadas"), "confeccion" );
	deepEqual( Stem("confeccionado"), "confeccion" );
	deepEqual( Stem("confeccionar"), "confeccion" );
	deepEqual( Stem("confeccionistas"), "confeccion" );
	deepEqual( Stem("confecções"), "confecçõ" );
	deepEqual( Stem("confederação"), "confeder" );
	deepEqual( Stem("confederações"), "confeder" );
	deepEqual( Stem("conference"), "conferenc" );
	deepEqual( Stem("conferência"), "conferent" );
	deepEqual( Stem("conferenciaram"), "conferenc" );
	deepEqual( Stem("conferências"), "conferent" );
	deepEqual( Stem("conferiam"), "conf" );
	deepEqual( Stem("conferido"), "confer" );
	deepEqual( Stem("conferimos"), "confer" );
	deepEqual( Stem("conferindo"), "confer" );
	deepEqual( Stem("conferir"), "confer" );
	deepEqual( Stem("conferisse"), "confer" );
	deepEqual( Stem("conferíssemos"), "confer" );
	deepEqual( Stem("conferiu"), "confer" );
	deepEqual( Stem("confessa"), "confess" );
	deepEqual( Stem("confessado"), "confess" );
	deepEqual( Stem("confessam"), "confess" );
	deepEqual( Stem("confessando"), "confess" );
	deepEqual( Stem("confessasse"), "confess" );
	deepEqual( Stem("confessional"), "confessional" );
	deepEqual( Stem("confesso"), "confess" );
	deepEqual( Stem("confessos"), "confess" );
	deepEqual( Stem("confessou"), "confess" );
	deepEqual( Stem("confia"), "conf" );
	deepEqual( Stem("confiabilidade"), "confiabil" );
	deepEqual( Stem("confiada"), "confi" );
	deepEqual( Stem("confiança"), "confianc" );
	deepEqual( Stem("confiante"), "confiant" );
	deepEqual( Stem("confiantes"), "confiant" );
	deepEqual( Stem("confiar"), "confi" );
	deepEqual( Stem("confiava"), "confi" );
	deepEqual( Stem("confiáveis"), "confi" );
	deepEqual( Stem("confiável"), "confiável" );
	deepEqual( Stem("confidenciais"), "confidenc" );
	deepEqual( Stem("confidencial"), "confidencial" );
	deepEqual( Stem("confidenciam"), "confidenc" );
	deepEqual( Stem("configura"), "configur" );
	deepEqual( Stem("configuração"), "configur" );
	deepEqual( Stem("confinado"), "confin" );
	deepEqual( Stem("confinados"), "confin" );
	deepEqual( Stem("confinamento"), "confin" );
	deepEqual( Stem("confins"), "confins" );
	deepEqual( Stem("confio"), "confi" );
	deepEqual( Stem("confiou"), "confi" );
	deepEqual( Stem("confirma"), "confirm" );
	deepEqual( Stem("confirmação"), "confirm" );
	deepEqual( Stem("confirmada"), "confirm" );
	deepEqual( Stem("confirmadas"), "confirm" );
	deepEqual( Stem("confirmado"), "confirm" );
	deepEqual( Stem("confirmados"), "confirm" );
	deepEqual( Stem("confirmam"), "confirm" );
	deepEqual( Stem("confirmando"), "confirm" );
	deepEqual( Stem("confirmar"), "confirm" );
	deepEqual( Stem("confirmasse"), "confirm" );
	deepEqual( Stem("confirme"), "confirm" );
	deepEqual( Stem("confirmou"), "confirm" );
	deepEqual( Stem("confiscadas"), "confisc" );
	deepEqual( Stem("confiscado"), "confisc" );
	deepEqual( Stem("confiscar"), "confisc" );
	deepEqual( Stem("confiscaram"), "confisc" );
	deepEqual( Stem("confissão"), "confissã" );
	deepEqual( Stem("confissões"), "confissõ" );
	deepEqual( Stem("conflitantes"), "conflit" );
	deepEqual( Stem("conflito"), "conflit" );
	deepEqual( Stem("conflitos"), "conflit" );
	deepEqual( Stem("conflituosas"), "conflitu" );
	deepEqual( Stem("confluíram"), "confluír" );
	deepEqual( Stem("conforma"), "conform" );
	deepEqual( Stem("conformacional"), "conformacional" );
	deepEqual( Stem("conformando"), "conform" );
	deepEqual( Stem("conformar"), "conform" );
	deepEqual( Stem("conforme"), "conform" );
	deepEqual( Stem("conformei"), "conform" );
	deepEqual( Stem("conformou"), "conform" );
	deepEqual( Stem("confortá"), "confort" );
	deepEqual( Stem("confortáveis"), "confort" );
	deepEqual( Stem("confortável"), "confort" );
	deepEqual( Stem("confortavelmente"), "confort" );
	deepEqual( Stem("conforto"), "confort" );
	deepEqual( Stem("confraternizar"), "confraterniz" );
	deepEqual( Stem("confronta"), "confront" );
	deepEqual( Stem("confrontada"), "confront" );
	deepEqual( Stem("confrontado"), "confront" );
	deepEqual( Stem("confrontar"), "confront" );
	deepEqual( Stem("confronto"), "confront" );
	deepEqual( Stem("confrontos"), "confront" );
	deepEqual( Stem("confunde"), "confund" );
	deepEqual( Stem("confundem"), "confund" );
	deepEqual( Stem("confundida"), "confund" );
	deepEqual( Stem("confundidas"), "confund" );
	deepEqual( Stem("confundido"), "confund" );
	deepEqual( Stem("confundindo"), "confund" );
	deepEqual( Stem("confundiu"), "confund" );
	deepEqual( Stem("confusa"), "confus" );
	deepEqual( Stem("confusão"), "confusã" );
	deepEqual( Stem("confuso"), "confus" );
	deepEqual( Stem("confusões"), "confusõ" );
	deepEqual( Stem("confusos"), "confus" );
	deepEqual( Stem("congela"), "congel" );
	deepEqual( Stem("congeladas"), "congel" );
	deepEqual( Stem("congelado"), "congel" );
	deepEqual( Stem("congelados"), "congel" );
	deepEqual( Stem("congelamento"), "congel" );
	deepEqual( Stem("congelando"), "congel" );
	deepEqual( Stem("congelar"), "congel" );
	deepEqual( Stem("congestiona"), "congestion" );
	deepEqual( Stem("congestionada"), "congestion" );
	deepEqual( Stem("congestionam"), "congestion" );
	deepEqual( Stem("congestionamento"), "congestion" );
	deepEqual( Stem("congestionamentos"), "congestion" );
	deepEqual( Stem("conglomerado"), "conglomer" );
	deepEqual( Stem("congonhas"), "congonh" );
	deepEqual( Stem("congratulo"), "congratul" );
	deepEqual( Stem("congrega"), "congreg" );
	deepEqual( Stem("congregação"), "congreg" );
	deepEqual( Stem("congregacional"), "congregacional" );
	deepEqual( Stem("congregações"), "congreg" );
	deepEqual( Stem("congregava"), "congreg" );
	deepEqual( Stem("congressistas"), "congress" );
	deepEqual( Stem("congresso"), "congress" );
	deepEqual( Stem("congressos"), "congress" );
	deepEqual( Stem("conhaque"), "conhaqu" );
	deepEqual( Stem("conheça"), "conhec" );
	deepEqual( Stem("conheçam"), "conhec" );
	deepEqual( Stem("conhece"), "conhec" );
	deepEqual( Stem("conhecê"), "conhec" );
	deepEqual( Stem("conhecedor"), "conhecedor" );
	deepEqual( Stem("conhecem"), "conhec" );
	deepEqual( Stem("conhecemos"), "conhec" );
	deepEqual( Stem("conhecendo"), "conhec" );
	deepEqual( Stem("conhecer"), "conhec" );
	deepEqual( Stem("conhecera"), "conhec" );
	deepEqual( Stem("conheceram"), "conhec" );
	deepEqual( Stem("conhecerem"), "conhec" );
	deepEqual( Stem("conhecesse"), "conhec" );
	deepEqual( Stem("conheceu"), "conhec" );
	deepEqual( Stem("conheci"), "conhec" );
	deepEqual( Stem("conhecia"), "conhec" );
	deepEqual( Stem("conheciam"), "conhec" );
	deepEqual( Stem("conhecida"), "conhec" );
	deepEqual( Stem("conhecidas"), "conhec" );
	deepEqual( Stem("conhecido"), "conhec" );
	deepEqual( Stem("conhecidos"), "conhec" );
	deepEqual( Stem("conhecimento"), "conhec" );
	deepEqual( Stem("conhecimentos"), "conhec" );
	deepEqual( Stem("conheço"), "conhec" );
	deepEqual( Stem("conivência"), "conivent" );
	deepEqual( Stem("conivente"), "conivent" );
	deepEqual( Stem("conjectura"), "conjectur" );
	deepEqual( Stem("conjugais"), "conjug" );
	deepEqual( Stem("conjugal"), "conjugal" );
	deepEqual( Stem("cônjuge"), "cônjug" );
	deepEqual( Stem("cônjuges"), "cônjug" );
	deepEqual( Stem("conjunção"), "conjunçã" );
	deepEqual( Stem("conjunta"), "conjunt" );
	deepEqual( Stem("conjuntas"), "conjunt" );
	deepEqual( Stem("conjunto"), "conjunt" );
	deepEqual( Stem("conjuntos"), "conjunt" );
	deepEqual( Stem("conjuntura"), "conjuntur" );
	deepEqual( Stem("conluio"), "conlui" );
	deepEqual( Stem("connery"), "connery" );
	deepEqual( Stem("conosco"), "conosc" );
	deepEqual( Stem("conquista"), "conquist" );
	deepEqual( Stem("conquistá"), "conquist" );
	deepEqual( Stem("conquistada"), "conquist" );
	deepEqual( Stem("conquistado"), "conquist" );
	deepEqual( Stem("conquistador"), "conquist" );
	deepEqual( Stem("conquistados"), "conquist" );
	deepEqual( Stem("conquistam"), "conquist" );
	deepEqual( Stem("conquistando"), "conquist" );
	deepEqual( Stem("conquistar"), "conquist" );
	deepEqual( Stem("conquistaram"), "conquist" );
	deepEqual( Stem("conquistas"), "conquist" );
	deepEqual( Stem("conquistei"), "conquist" );
	deepEqual( Stem("conquistou"), "conquist" );
	deepEqual( Stem("conrado"), "conr" );
	deepEqual( Stem("consagração"), "consagr" );
	deepEqual( Stem("consagrada"), "consagr" );
	deepEqual( Stem("consagradas"), "consagr" );
	deepEqual( Stem("consagrado"), "consagr" );
	deepEqual( Stem("consagrados"), "consagr" );
	deepEqual( Stem("consagrar"), "consagr" );
	deepEqual( Stem("consagrou"), "consagr" );
	deepEqual( Stem("consciência"), "consciênc" );
	deepEqual( Stem("consciente"), "conscient" );
	deepEqual( Stem("conscientemente"), "conscient" );
	deepEqual( Stem("conscientes"), "conscient" );
	deepEqual( Stem("conscientização"), "conscientiz" );
	deepEqual( Stem("conscientizar"), "conscientiz" );
	deepEqual( Stem("consecutivo"), "consecut" );
	deepEqual( Stem("consecutivos"), "consecut" );
	deepEqual( Stem("consegue"), "conseg" );
	deepEqual( Stem("conseguem"), "consegu" );
	deepEqual( Stem("consegui"), "consegu" );
	deepEqual( Stem("conseguia"), "consegu" );
	deepEqual( Stem("conseguiam"), "consegu" );
	deepEqual( Stem("conseguida"), "consegu" );
	deepEqual( Stem("conseguido"), "consegu" );
	deepEqual( Stem("conseguimos"), "consegu" );
	deepEqual( Stem("conseguindo"), "consegu" );
	deepEqual( Stem("conseguir"), "consegu" );
	deepEqual( Stem("conseguira"), "consegu" );
	deepEqual( Stem("conseguirá"), "consegu" );
	deepEqual( Stem("conseguiram"), "consegu" );
	deepEqual( Stem("conseguirão"), "consegu" );
	deepEqual( Stem("conseguirei"), "consegu" );
	deepEqual( Stem("conseguirem"), "consegu" );
	deepEqual( Stem("conseguiria"), "consegu" );
	deepEqual( Stem("conseguiriam"), "consegu" );
	deepEqual( Stem("conseguisse"), "consegu" );
	deepEqual( Stem("conseguissem"), "consegu" );
	deepEqual( Stem("conseguiu"), "consegu" );
	deepEqual( Stem("conselheiro"), "conselheir" );
	deepEqual( Stem("conselheiros"), "conselheir" );
	deepEqual( Stem("conselho"), "conselh" );
	deepEqual( Stem("conselhos"), "conselh" );
	deepEqual( Stem("consenso"), "consens" );
	deepEqual( Stem("consensual"), "consensual" );
	deepEqual( Stem("consente"), "consent" );
	deepEqual( Stem("consequência"), "consequent" );
	deepEqual( Stem("conseqüência"), "conseqüent" );
	deepEqual( Stem("consequências"), "consequent" );
	deepEqual( Stem("conseqüências"), "conseqüent" );
	deepEqual( Stem("consequente"), "consequent" );
	deepEqual( Stem("conseqüente"), "conseqüent" );
	deepEqual( Stem("conseqüentemente"), "conseqüent" );
	deepEqual( Stem("conserta"), "consert" );
	deepEqual( Stem("consertá"), "consert" );
	deepEqual( Stem("consertando"), "consert" );
	deepEqual( Stem("consertar"), "consert" );
	deepEqual( Stem("consertos"), "consert" );
	deepEqual( Stem("consertou"), "consert" );
	deepEqual( Stem("conserva"), "conserv" );
	deepEqual( Stem("conservação"), "conserv" );
	deepEqual( Stem("conservada"), "conserv" );
	deepEqual( Stem("conservado"), "conserv" );
	deepEqual( Stem("conservador"), "conserv" );
	deepEqual( Stem("conservadora"), "conserv" );
	deepEqual( Stem("conservadoras"), "conserv" );
	deepEqual( Stem("conservadores"), "conserv" );
	deepEqual( Stem("conservadorismo"), "conservador" );
	deepEqual( Stem("conservados"), "conserv" );
	deepEqual( Stem("conservam"), "conserv" );
	deepEqual( Stem("conservantes"), "conserv" );
	deepEqual( Stem("conservar"), "conserv" );
	deepEqual( Stem("conservation"), "conservation" );
	deepEqual( Stem("conservatório"), "conservatóri" );
	deepEqual( Stem("considera"), "consid" );
	deepEqual( Stem("considerá"), "consid" );
	deepEqual( Stem("consideração"), "consider" );
	deepEqual( Stem("considerações"), "consider" );
	deepEqual( Stem("considerada"), "consider" );
	deepEqual( Stem("consideradas"), "consider" );
	deepEqual( Stem("considerado"), "consider" );
	deepEqual( Stem("considerados"), "consider" );
	deepEqual( Stem("consideram"), "consid" );
	deepEqual( Stem("consideramos"), "consider" );
	deepEqual( Stem("considerando"), "consider" );
	deepEqual( Stem("considerar"), "consider" );
	deepEqual( Stem("considerava"), "consider" );
	deepEqual( Stem("consideravam"), "consider" );
	deepEqual( Stem("considerável"), "consider" );
	deepEqual( Stem("consideravelmente"), "consider" );
	deepEqual( Stem("considere"), "consider" );
	deepEqual( Stem("considerei"), "consid" );
	deepEqual( Stem("considero"), "consider" );
	deepEqual( Stem("considerou"), "consider" );
	deepEqual( Stem("consiga"), "consig" );
	deepEqual( Stem("consigam"), "consig" );
	deepEqual( Stem("consigo"), "consig" );
	deepEqual( Stem("consiste"), "cons" );
	deepEqual( Stem("consistem"), "consist" );
	deepEqual( Stem("consistência"), "consistent" );
	deepEqual( Stem("consistente"), "consistent" );
	deepEqual( Stem("consistentes"), "consistent" );
	deepEqual( Stem("consistia"), "consist" );
	deepEqual( Stem("consolando"), "consol" );
	deepEqual( Stem("consolar"), "consol" );
	deepEqual( Stem("consoles"), "consol" );
	deepEqual( Stem("consolida"), "consol" );
	deepEqual( Stem("consolidação"), "consolid" );
	deepEqual( Stem("consolidada"), "consolid" );
	deepEqual( Stem("consolidadas"), "consolid" );
	deepEqual( Stem("consolidar"), "consolid" );
	deepEqual( Stem("consolidasse"), "consolid" );
	deepEqual( Stem("consolo"), "consol" );
	deepEqual( Stem("consome"), "consom" );
	deepEqual( Stem("consomem"), "consom" );
	deepEqual( Stem("consórcio"), "consórci" );
	deepEqual( Stem("consórcios"), "consórci" );
	deepEqual( Stem("consortium"), "consortium" );
	deepEqual( Stem("conspiração"), "conspir" );
	deepEqual( Stem("conspurcando"), "conspurc" );
	deepEqual( Stem("consta"), "const" );
	deepEqual( Stem("constam"), "const" );
	deepEqual( Stem("constança"), "constanc" );
	deepEqual( Stem("constância"), "constânc" );
	deepEqual( Stem("constante"), "constant" );
	deepEqual( Stem("constantemente"), "constant" );
	deepEqual( Stem("constantes"), "constant" );
	deepEqual( Stem("constantinopla"), "constantinopl" );
	deepEqual( Stem("constata"), "constat" );
	deepEqual( Stem("constatação"), "constat" );
	deepEqual( Stem("constatada"), "constat" );
	deepEqual( Stem("constatadas"), "constat" );
	deepEqual( Stem("constatado"), "constat" );
	deepEqual( Stem("constatamos"), "constat" );
	deepEqual( Stem("constatando"), "constat" );
	deepEqual( Stem("constatar"), "constat" );
	deepEqual( Stem("constataram"), "constat" );
	deepEqual( Stem("constatarmos"), "constat" );
	deepEqual( Stem("constatou"), "constat" );
	deepEqual( Stem("constava"), "const" );
	deepEqual( Stem("constelação"), "constel" );
	deepEqual( Stem("constestador"), "constest" );
	deepEqual( Stem("constitucionais"), "constitucion" );
	deepEqual( Stem("constitucional"), "constitucional" );
	deepEqual( Stem("constitucionalmente"), "constitucional" );
	deepEqual( Stem("constitui"), "constitu" );
	deepEqual( Stem("constituição"), "constituiçã" );
	deepEqual( Stem("constituída"), "constituíd" );
	deepEqual( Stem("constituído"), "constituíd" );
	deepEqual( Stem("constituinte"), "constituint" );
	deepEqual( Stem("constituintes"), "constituint" );
	deepEqual( Stem("constrange"), "constrang" );
	deepEqual( Stem("constrangedor"), "constrangedor" );
	deepEqual( Stem("constrangedora"), "constrangedor" );
	deepEqual( Stem("constrangedoras"), "constrangedor" );
	deepEqual( Stem("constrangido"), "constrang" );
	deepEqual( Stem("constrangidos"), "constrang" );
	deepEqual( Stem("constrangimento"), "constrang" );
	deepEqual( Stem("constrangimentos"), "constrang" );
	deepEqual( Stem("constroem"), "constro" );
	deepEqual( Stem("constrói"), "constró" );
	deepEqual( Stem("construa"), "constru" );
	deepEqual( Stem("construção"), "construçã" );
	deepEqual( Stem("construcionismo"), "construcion" );
	deepEqual( Stem("construções"), "construçõ" );
	deepEqual( Stem("construí"), "constru" );
	deepEqual( Stem("construída"), "construíd" );
	deepEqual( Stem("construídas"), "construíd" );
	deepEqual( Stem("construído"), "construíd" );
	deepEqual( Stem("construídos"), "construíd" );
	deepEqual( Stem("construímos"), "construím" );
	deepEqual( Stem("construindo"), "constru" );
	deepEqual( Stem("construir"), "constru" );
	deepEqual( Stem("construirá"), "constru" );
	deepEqual( Stem("construíram"), "construír" );
	deepEqual( Stem("construiu"), "constru" );
	deepEqual( Stem("construtiva"), "construt" );
	deepEqual( Stem("construtor"), "construtor" );
	deepEqual( Stem("construtora"), "construtor" );
	deepEqual( Stem("construtoras"), "construtor" );
	deepEqual( Stem("consuelo"), "consuel" );
	deepEqual( Stem("cônsul"), "cônsul" );
	deepEqual( Stem("consulado"), "consul" );
	deepEqual( Stem("consulados"), "consul" );
	deepEqual( Stem("consulta"), "consult" );
	deepEqual( Stem("consultá"), "consult" );
	deepEqual( Stem("consultadas"), "consult" );
	deepEqual( Stem("consultado"), "consult" );
	deepEqual( Stem("consultados"), "consult" );
	deepEqual( Stem("consultam"), "consult" );
	deepEqual( Stem("consultar"), "consult" );
	deepEqual( Stem("consultaram"), "consult" );
	deepEqual( Stem("consultarem"), "consult" );
	deepEqual( Stem("consultas"), "consult" );
	deepEqual( Stem("consultava"), "consult" );
	deepEqual( Stem("consulting"), "consulting" );
	deepEqual( Stem("consultivo"), "consult" );
	deepEqual( Stem("consulto"), "consult" );
	deepEqual( Stem("consultor"), "consultor" );
	deepEqual( Stem("consultora"), "consultor" );
	deepEqual( Stem("consultores"), "consultor" );
	deepEqual( Stem("consultoria"), "consultor" );
	deepEqual( Stem("consultorias"), "consultor" );
	deepEqual( Stem("consultório"), "consultóri" );
	deepEqual( Stem("consultórios"), "consultóri" );
	deepEqual( Stem("consultou"), "consult" );
	deepEqual( Stem("consumação"), "consum" );
	deepEqual( Stem("consumando"), "consum" );
	deepEqual( Stem("consumar"), "consum" );
	deepEqual( Stem("consumida"), "consum" );
	deepEqual( Stem("consumidas"), "consum" );
	deepEqual( Stem("consumido"), "consum" );
	deepEqual( Stem("consumidor"), "consumidor" );
	deepEqual( Stem("consumidores"), "consumidor" );
	deepEqual( Stem("consumidos"), "consum" );
	deepEqual( Stem("consumindo"), "consum" );
	deepEqual( Stem("consumir"), "consum" );
	deepEqual( Stem("consumiram"), "consum" );
	deepEqual( Stem("consumismo"), "consum" );
	deepEqual( Stem("consumista"), "consum" );
	deepEqual( Stem("consumistas"), "consum" );
	deepEqual( Stem("consumiu"), "consum" );
	deepEqual( Stem("consumo"), "consum" );
	deepEqual( Stem("conta"), "cont" );
	deepEqual( Stem("contá"), "cont" );
	deepEqual( Stem("contábeis"), "contáb" );
	deepEqual( Stem("contábil"), "contábil" );
	deepEqual( Stem("contabilidade"), "contabil" );
	deepEqual( Stem("contabiliza"), "contabiliz" );
	deepEqual( Stem("contabilizada"), "contabiliz" );
	deepEqual( Stem("contabilizado"), "contabiliz" );
	deepEqual( Stem("contabilizados"), "contabiliz" );
	deepEqual( Stem("contabilizar"), "contabiliz" );
	deepEqual( Stem("contabilizaram"), "contabiliz" );
	deepEqual( Stem("contabilizou"), "contabiliz" );
	deepEqual( Stem("contact"), "contact" );
	deepEqual( Stem("contada"), "cont" );
	deepEqual( Stem("contadas"), "cont" );
	deepEqual( Stem("contado"), "cont" );
	deepEqual( Stem("contador"), "contador" );
	deepEqual( Stem("contadora"), "contador" );
	deepEqual( Stem("contadores"), "contador" );
	deepEqual( Stem("contados"), "cont" );
	deepEqual( Stem("contagem"), "contag" );
	deepEqual( Stem("contagiante"), "contagi" );
	deepEqual( Stem("contágio"), "contági" );
	deepEqual( Stem("contam"), "cont" );
	deepEqual( Stem("contamina"), "contamin" );
	deepEqual( Stem("contaminação"), "contamin" );
	deepEqual( Stem("contaminada"), "contamin" );
	deepEqual( Stem("contaminado"), "contamin" );
	deepEqual( Stem("contaminados"), "contamin" );
	deepEqual( Stem("contaminam"), "contamin" );
	deepEqual( Stem("contaminou"), "contamin" );
	deepEqual( Stem("contamos"), "cont" );
	deepEqual( Stem("contando"), "cont" );
	deepEqual( Stem("contar"), "cont" );
	deepEqual( Stem("contara"), "cont" );
	deepEqual( Stem("contará"), "cont" );
	deepEqual( Stem("contaram"), "cont" );
	deepEqual( Stem("contardo"), "contard" );
	deepEqual( Stem("contas"), "cont" );
	deepEqual( Stem("contasse"), "cont" );
	deepEqual( Stem("contataram"), "contat" );
	deepEqual( Stem("contato"), "contat" );
	deepEqual( Stem("contatos"), "contat" );
	deepEqual( Stem("contatou"), "contat" );
	deepEqual( Stem("contava"), "cont" );
	deepEqual( Stem("contavam"), "cont" );
	deepEqual( Stem("conte"), "cont" );
	deepEqual( Stem("contê"), "cont" );
	deepEqual( Stem("contei"), "cont" );
	deepEqual( Stem("contêineres"), "contêin" );
	deepEqual( Stem("contem"), "cont" );
	deepEqual( Stem("contém"), "contém" );
	deepEqual( Stem("contêm"), "contêm" );
	deepEqual( Stem("contempla"), "contempl" );
	deepEqual( Stem("contemplada"), "contempl" );
	deepEqual( Stem("contemplados"), "contempl" );
	deepEqual( Stem("contemplando"), "contempl" );
	deepEqual( Stem("contemporânea"), "contemporân" );
	deepEqual( Stem("contemporâneo"), "contemporân" );
	deepEqual( Stem("contemporâneos"), "contemporân" );
	deepEqual( Stem("contenção"), "contençã" );
	deepEqual( Stem("contendo"), "cont" );
	deepEqual( Stem("contentar"), "content" );
	deepEqual( Stem("contente"), "content" );
	deepEqual( Stem("contentes"), "content" );
	deepEqual( Stem("conter"), "cont" );
	deepEqual( Stem("conterrâneas"), "conterrân" );
	deepEqual( Stem("conterrâneo"), "conterrân" );
	deepEqual( Stem("conterrâneos"), "conterrân" );
	deepEqual( Stem("contesta"), "contest" );
	deepEqual( Stem("contestada"), "contest" );
	deepEqual( Stem("contestado"), "contest" );
	deepEqual( Stem("contestadora"), "contest" );
	deepEqual( Stem("contestamos"), "contest" );
	deepEqual( Stem("contestando"), "contest" );
	deepEqual( Stem("contestar"), "contest" );
	deepEqual( Stem("contestou"), "contest" );
	deepEqual( Stem("conteúdo"), "conteúd" );
	deepEqual( Stem("conteúdos"), "conteúd" );
	deepEqual( Stem("conteve"), "contev" );
	deepEqual( Stem("contexto"), "context" );
	deepEqual( Stem("conti"), "cont" );
	deepEqual( Stem("contida"), "cont" );
	deepEqual( Stem("contidas"), "cont" );
	deepEqual( Stem("contido"), "cont" );
	deepEqual( Stem("contigente"), "contigent" );
	deepEqual( Stem("contigo"), "contig" );
	deepEqual( Stem("contíguos"), "contígu" );
	deepEqual( Stem("continências"), "continent" );
	deepEqual( Stem("continental"), "continental" );
	deepEqual( Stem("continente"), "continent" );
	deepEqual( Stem("continentes"), "continent" );
	deepEqual( Stem("contingências"), "contingent" );
	deepEqual( Stem("contingente"), "contingent" );
	deepEqual( Stem("continha"), "continh" );
	deepEqual( Stem("continua"), "continu" );
	deepEqual( Stem("contínua"), "contínu" );
	deepEqual( Stem("continuação"), "continu" );
	deepEqual( Stem("continuações"), "continu" );
	deepEqual( Stem("continuada"), "continu" );
	deepEqual( Stem("continuado"), "continu" );
	deepEqual( Stem("continuam"), "continu" );
	deepEqual( Stem("continuando"), "continu" );
	deepEqual( Stem("continuar"), "continu" );
	deepEqual( Stem("continuará"), "continu" );
	deepEqual( Stem("continuaram"), "continu" );
	deepEqual( Stem("continuarão"), "continu" );
	deepEqual( Stem("continuarei"), "continu" );
	deepEqual( Stem("continuaria"), "continu" );
	deepEqual( Stem("continuarmos"), "continu" );
	deepEqual( Stem("continuasse"), "continu" );
	deepEqual( Stem("continuava"), "continu" );
	deepEqual( Stem("continuavam"), "continu" );
	deepEqual( Stem("continue"), "continu" );
	deepEqual( Stem("continuidade"), "continu" );
	deepEqual( Stem("continuo"), "continu" );
	deepEqual( Stem("contínuo"), "contínu" );
	deepEqual( Stem("contínuos"), "contínu" );
	deepEqual( Stem("continuou"), "continu" );
	deepEqual( Stem("contive"), "contiv" );
	deepEqual( Stem("conto"), "cont" );
	deepEqual( Stem("contornado"), "contorn" );
	deepEqual( Stem("contornar"), "contorn" );
	deepEqual( Stem("contornara"), "contorn" );
	deepEqual( Stem("contorno"), "contorn" );
	deepEqual( Stem("contornos"), "contorn" );
	deepEqual( Stem("contos"), "cont" );
	deepEqual( Stem("contou"), "cont" );
	deepEqual( Stem("contra"), "contr" );
	deepEqual( Stem("contrabalança"), "contrabalanc" );
	deepEqual( Stem("contrabalançar"), "contrabalanc" );
	deepEqual( Stem("contrabalançarem"), "contrabalanc" );
	deepEqual( Stem("contrabandeadas"), "contraband" );
	deepEqual( Stem("contrabandeou"), "contraband" );
	deepEqual( Stem("contrabando"), "contrab" );
	deepEqual( Stem("contracapa"), "contracap" );
	deepEqual( Stem("contracena"), "contracen" );
	deepEqual( Stem("contraceptivos"), "contracept" );
	deepEqual( Stem("contradição"), "contradiçã" );
	deepEqual( Stem("contradições"), "contradiçõ" );
	deepEqual( Stem("contraditória"), "contraditór" );
	deepEqual( Stem("contraditórias"), "contraditór" );
	deepEqual( Stem("contraditório"), "contraditóri" );
	deepEqual( Stem("contragosto"), "contragost" );
	deepEqual( Stem("contraídas"), "contraíd" );
	deepEqual( Stem("contraindo"), "contra" );
	deepEqual( Stem("contrair"), "contra" );
	deepEqual( Stem("contraíram"), "contraír" );
	deepEqual( Stem("contramão"), "contramã" );
	deepEqual( Stem("contramaré"), "contramar" );
	deepEqual( Stem("contrapartida"), "contrapart" );
	deepEqual( Stem("contrapeso"), "contrapes" );
	deepEqual( Stem("contraponha"), "contraponh" );
	deepEqual( Stem("contrapor"), "contrapor" );
	deepEqual( Stem("contraposições"), "contraposiçõ" );
	deepEqual( Stem("contrapropôs"), "contrapropôs" );
	deepEqual( Stem("contraria"), "contr" );
	deepEqual( Stem("contrária"), "contrár" );
	deepEqual( Stem("contrariado"), "contrari" );
	deepEqual( Stem("contrariados"), "contrari" );
	deepEqual( Stem("contrariamente"), "contrari" );
	deepEqual( Stem("contrariando"), "contrari" );
	deepEqual( Stem("contrariar"), "contrari" );
	deepEqual( Stem("contrárias"), "contrár" );
	deepEqual( Stem("contrariedades"), "contrariedad" );
	deepEqual( Stem("contrário"), "contrári" );
	deepEqual( Stem("contrários"), "contrári" );
	deepEqual( Stem("contras"), "contr" );
	deepEqual( Stem("contrasenso"), "contrasens" );
	deepEqual( Stem("contrasta"), "contrast" );
	deepEqual( Stem("contrastantes"), "contrast" );
	deepEqual( Stem("contrastava"), "contrast" );
	deepEqual( Stem("contraste"), "contr" );
	deepEqual( Stem("contrastes"), "contr" );
	deepEqual( Stem("contrata"), "contrat" );
	deepEqual( Stem("contratação"), "contrat" );
	deepEqual( Stem("contratações"), "contrat" );
	deepEqual( Stem("contratada"), "contrat" );
	deepEqual( Stem("contratadas"), "contrat" );
	deepEqual( Stem("contratado"), "contrat" );
	deepEqual( Stem("contratador"), "contrat" );
	deepEqual( Stem("contratados"), "contrat" );
	deepEqual( Stem("contratam"), "contrat" );
	deepEqual( Stem("contratando"), "contrat" );
	deepEqual( Stem("contratar"), "contrat" );
	deepEqual( Stem("contrataram"), "contrat" );
	deepEqual( Stem("contrataria"), "contrat" );
	deepEqual( Stem("contratei"), "contrat" );
	deepEqual( Stem("contratempo"), "contratemp" );
	deepEqual( Stem("contratempos"), "contratemp" );
	deepEqual( Stem("contrato"), "contrat" );
	deepEqual( Stem("contratos"), "contrat" );
	deepEqual( Stem("contratou"), "contrat" );
	deepEqual( Stem("contravenção"), "contravençã" );
	deepEqual( Stem("contraventor"), "contraventor" );
	deepEqual( Stem("contraventores"), "contraventor" );
	deepEqual( Stem("contreiras"), "contreir" );
	deepEqual( Stem("contribui"), "contribu" );
	deepEqual( Stem("contribuição"), "contribuiçã" );
	deepEqual( Stem("contribuições"), "contribuiçõ" );
	deepEqual( Stem("contribuído"), "contribuíd" );
	deepEqual( Stem("contribuinte"), "contribuint" );
	deepEqual( Stem("contribuintes"), "contribuint" );
	deepEqual( Stem("contribuir"), "contribu" );
	deepEqual( Stem("contribuíram"), "contribuír" );
	deepEqual( Stem("contribuiu"), "contribu" );
	deepEqual( Stem("controla"), "control" );
	deepEqual( Stem("controlada"), "control" );
	deepEqual( Stem("controladas"), "control" );
	deepEqual( Stem("controlado"), "control" );
	deepEqual( Stem("controlador"), "control" );
	deepEqual( Stem("controladora"), "control" );
	deepEqual( Stem("controladores"), "control" );
	deepEqual( Stem("controlados"), "control" );
	deepEqual( Stem("controlam"), "control" );
	deepEqual( Stem("controlando"), "control" );
	deepEqual( Stem("controlar"), "control" );
	deepEqual( Stem("controlavam"), "control" );
	deepEqual( Stem("controle"), "control" );
	deepEqual( Stem("controles"), "control" );
	deepEqual( Stem("controlo"), "control" );
	deepEqual( Stem("controlou"), "control" );
	deepEqual( Stem("controversa"), "controvers" );
	deepEqual( Stem("controvérsia"), "controvérs" );
	deepEqual( Stem("controvérsias"), "controvérs" );
	deepEqual( Stem("controverso"), "controvers" );
	deepEqual( Stem("controvertida"), "controvert" );
	deepEqual( Stem("contudo"), "contud" );
	deepEqual( Stem("contundente"), "contundent" );
	deepEqual( Stem("contundentes"), "contundent" );
	deepEqual( Stem("conturbada"), "conturb" );
	deepEqual( Stem("conturbado"), "conturb" );
	deepEqual( Stem("contusão"), "contusã" );
	deepEqual( Stem("convalescendo"), "convalesc" );
	deepEqual( Stem("convém"), "convém" );
	deepEqual( Stem("convenção"), "convençã" );
	deepEqual( Stem("convence"), "convenc" );
	deepEqual( Stem("convencê"), "convenc" );
	deepEqual( Stem("convencer"), "convenc" );
	deepEqual( Stem("convenceram"), "convenc" );
	deepEqual( Stem("convenceu"), "convenc" );
	deepEqual( Stem("convencia"), "convenc" );
	deepEqual( Stem("convencido"), "convenc" );
	deepEqual( Stem("convencidos"), "convenc" );
	deepEqual( Stem("convencionais"), "convencion" );
	deepEqual( Stem("convencional"), "convencional" );
	deepEqual( Stem("convencionou"), "convencion" );
	deepEqual( Stem("convenções"), "convençõ" );
	deepEqual( Stem("conveniência"), "convenient" );
	deepEqual( Stem("conveniente"), "convenient" );
	deepEqual( Stem("convenientes"), "convenient" );
	deepEqual( Stem("convênio"), "convêni" );
	deepEqual( Stem("convênios"), "convêni" );
	deepEqual( Stem("convento"), "convent" );
	deepEqual( Stem("conventos"), "convent" );
	deepEqual( Stem("convergências"), "convergent" );
	deepEqual( Stem("conversa"), "convers" );
	deepEqual( Stem("conversado"), "convers" );
	deepEqual( Stem("conversam"), "convers" );
	deepEqual( Stem("conversamos"), "convers" );
	deepEqual( Stem("conversando"), "convers" );
	deepEqual( Stem("conversão"), "conversã" );
	deepEqual( Stem("conversar"), "convers" );
	deepEqual( Stem("conversarmos"), "convers" );
	deepEqual( Stem("conversas"), "convers" );
	deepEqual( Stem("conversava"), "convers" );
	deepEqual( Stem("conversavam"), "convers" );
	deepEqual( Stem("conversei"), "convers" );
	deepEqual( Stem("conversinhas"), "conversinh" );
	deepEqual( Stem("conversíveis"), "conversív" );
	deepEqual( Stem("conversível"), "convers" );
	deepEqual( Stem("converso"), "convers" );
	deepEqual( Stem("conversões"), "conversõ" );
	deepEqual( Stem("conversora"), "conversor" );
	deepEqual( Stem("conversou"), "convers" );
	deepEqual( Stem("convertê"), "convert" );
	deepEqual( Stem("converter"), "convert" );
	deepEqual( Stem("converteram"), "convert" );
	deepEqual( Stem("converteu"), "convert" );
	deepEqual( Stem("convertida"), "convert" );
	deepEqual( Stem("convertidas"), "convert" );
	deepEqual( Stem("convertido"), "convert" );
	deepEqual( Stem("convertidos"), "convert" );
	deepEqual( Stem("convés"), "convés" );
	deepEqual( Stem("convicção"), "convicçã" );
	deepEqual( Stem("convicções"), "convicçõ" );
	deepEqual( Stem("convicência"), "convicent" );
	deepEqual( Stem("convicta"), "convict" );
	deepEqual( Stem("convicto"), "convict" );
	deepEqual( Stem("convida"), "conv" );
	deepEqual( Stem("convidá"), "convid" );
	deepEqual( Stem("convidada"), "convid" );
	deepEqual( Stem("convidadas"), "convid" );
	deepEqual( Stem("convidado"), "convid" );
	deepEqual( Stem("convidados"), "convid" );
	deepEqual( Stem("convidando"), "convid" );
	deepEqual( Stem("convidar"), "convid" );
	deepEqual( Stem("convidaram"), "convid" );
	deepEqual( Stem("convidaria"), "convid" );
	deepEqual( Stem("convidativa"), "convid" );
	deepEqual( Stem("convidativo"), "convid" );
	deepEqual( Stem("convidei"), "convid" );
	deepEqual( Stem("convidou"), "convid" );
	deepEqual( Stem("convincente"), "convincent" );
	deepEqual( Stem("convincentes"), "convincent" );
	deepEqual( Stem("convite"), "convit" );
	deepEqual( Stem("convites"), "convit" );
	deepEqual( Stem("convive"), "conviv" );
	deepEqual( Stem("convivem"), "conviv" );
	deepEqual( Stem("convivemos"), "conviv" );
	deepEqual( Stem("convivência"), "convivent" );
	deepEqual( Stem("convivências"), "convivent" );
	deepEqual( Stem("convivendo"), "conviv" );
	deepEqual( Stem("conviver"), "conviv" );
	deepEqual( Stem("conviverá"), "conviv" );
	deepEqual( Stem("conviveu"), "conviv" );
	deepEqual( Stem("conviviam"), "conviv" );
	deepEqual( Stem("convívio"), "convívi" );
	deepEqual( Stem("convivo"), "conviv" );
	deepEqual( Stem("convoca"), "convoc" );
	deepEqual( Stem("convocação"), "convoc" );
	deepEqual( Stem("convocada"), "convoc" );
	deepEqual( Stem("convocadas"), "convoc" );
	deepEqual( Stem("convocado"), "convoc" );
	deepEqual( Stem("convocados"), "convoc" );
	deepEqual( Stem("convocam"), "convoc" );
	deepEqual( Stem("convocando"), "convoc" );
	deepEqual( Stem("convocar"), "convoc" );
	deepEqual( Stem("convocara"), "convoc" );
	deepEqual( Stem("convocaram"), "convoc" );
	deepEqual( Stem("convocava"), "convoc" );
	deepEqual( Stem("convocou"), "convoc" );
	deepEqual( Stem("cony"), "cony" );
	deepEqual( Stem("cool"), "cool" );
	deepEqual( Stem("cooper"), "coop" );
	deepEqual( Stem("cooperação"), "cooper" );
	deepEqual( Stem("cooperada"), "cooper" );
	deepEqual( Stem("cooperado"), "cooper" );
	deepEqual( Stem("cooperados"), "cooper" );
	deepEqual( Stem("cooperativa"), "cooper" );
	deepEqual( Stem("cooperativas"), "cooper" );
	deepEqual( Stem("coordena"), "coorden" );
	deepEqual( Stem("coordenação"), "coorden" );
	deepEqual( Stem("coordenada"), "coorden" );
	deepEqual( Stem("coordenado"), "coorden" );
	deepEqual( Stem("coordenador"), "coorden" );
	deepEqual( Stem("coordenadora"), "coorden" );
	deepEqual( Stem("coordenadores"), "coorden" );
	deepEqual( Stem("coordenamos"), "coorden" );
	deepEqual( Stem("coordenar"), "coorden" );
	deepEqual( Stem("coordenava"), "coorden" );
	deepEqual( Stem("coordeno"), "coorden" );
	deepEqual( Stem("coordenou"), "coorden" );
	deepEqual( Stem("copa"), "cop" );
	deepEqual( Stem("copacabana"), "copacaban" );
	deepEqual( Stem("copas"), "cop" );
	deepEqual( Stem("copia"), "cop" );
	deepEqual( Stem("cópia"), "cóp" );
	deepEqual( Stem("copiá"), "copi" );
	deepEqual( Stem("copiada"), "copi" );
	deepEqual( Stem("copiado"), "copi" );
	deepEqual( Stem("copiam"), "cop" );
	deepEqual( Stem("copiando"), "copi" );
	deepEqual( Stem("copiar"), "copi" );
	deepEqual( Stem("cópias"), "cóp" );
	deepEqual( Stem("copiem"), "copi" );
	deepEqual( Stem("copioso"), "copios" );
	deepEqual( Stem("copiou"), "copi" );
	deepEqual( Stem("copo"), "cop" );
	deepEqual( Stem("copos"), "cop" );
	deepEqual( Stem("copperfield"), "copperfield" );
	deepEqual( Stem("cópula"), "cópul" );
	deepEqual( Stem("copulando"), "copul" );
	deepEqual( Stem("copular"), "copul" );
	deepEqual( Stem("copyright"), "copyright" );
	deepEqual( Stem("coqueiro"), "coqueir" );
	deepEqual( Stem("coqueiros"), "coqueir" );
	deepEqual( Stem("coqueluche"), "coqueluch" );
	deepEqual( Stem("coquetéis"), "coquet" );
	deepEqual( Stem("coquetel"), "coquetel" );
	deepEqual( Stem("cor"), "cor" );
	deepEqual( Stem("coração"), "coraçã" );
	deepEqual( Stem("corações"), "coraçõ" );
	deepEqual( Stem("coragem"), "corag" );
	deepEqual( Stem("corais"), "cor" );
	deepEqual( Stem("corajosa"), "coraj" );
	deepEqual( Stem("corajosamente"), "coraj" );
	deepEqual( Stem("corajosas"), "coraj" );
	deepEqual( Stem("corajoso"), "coraj" );
	deepEqual( Stem("corajosos"), "coraj" );
	deepEqual( Stem("coral"), "coral" );
	deepEqual( Stem("corcovado"), "corcov" );
	deepEqual( Stem("corda"), "cord" );
	deepEqual( Stem("cordão"), "cordã" );
	deepEqual( Stem("cordas"), "cord" );
	deepEqual( Stem("cordata"), "cordat" );
	deepEqual( Stem("cordato"), "cordat" );
	deepEqual( Stem("cordeiro"), "cordeir" );
	deepEqual( Stem("cordial"), "cordial" );
	deepEqual( Stem("cordilheira"), "cordilheir" );
	deepEqual( Stem("cordilheiras"), "cordilheir" );
	deepEqual( Stem("córdoba"), "córdob" );
	deepEqual( Stem("coreano"), "corean" );
	deepEqual( Stem("coreanos"), "corean" );
	deepEqual( Stem("coréia"), "cor" );
	deepEqual( Stem("corel"), "corel" );
	deepEqual( Stem("coreografia"), "coreograf" );
	deepEqual( Stem("coreografias"), "coreograf" );
	deepEqual( Stem("coreógrafos"), "coreógraf" );
	deepEqual( Stem("cores"), "cor" );
	deepEqual( Stem("corey"), "corey" );
	deepEqual( Stem("corgan"), "corgan" );
	deepEqual( Stem("corine"), "corin" );
	deepEqual( Stem("corinthiana"), "corinthian" );
	deepEqual( Stem("corinthians"), "corinthians" );
	deepEqual( Stem("corisco"), "corisc" );
	deepEqual( Stem("corn"), "corn" );
	deepEqual( Stem("cornell"), "cornell" );
	deepEqual( Stem("corner"), "corn" );
	deepEqual( Stem("cornhill"), "cornhill" );
	deepEqual( Stem("coro"), "cor" );
	deepEqual( Stem("coroa"), "coro" );
	deepEqual( Stem("coroada"), "coro" );
	deepEqual( Stem("coroado"), "coro" );
	deepEqual( Stem("coroamento"), "coroament" );
	deepEqual( Stem("coroar"), "coro" );
	deepEqual( Stem("coroas"), "coro" );
	deepEqual( Stem("corolário"), "corolári" );
	deepEqual( Stem("coronária"), "coronár" );
	deepEqual( Stem("coronel"), "coronel" );
	deepEqual( Stem("coros"), "cor" );
	deepEqual( Stem("corpinho"), "corpinh" );
	deepEqual( Stem("corpo"), "corp" );
	deepEqual( Stem("corporação"), "corpor" );
	deepEqual( Stem("corporações"), "corpor" );
	deepEqual( Stem("corporal"), "corporal" );
	deepEqual( Stem("corporation"), "corporation" );
	deepEqual( Stem("corporativa"), "corpor" );
	deepEqual( Stem("corporativismo"), "corporativ" );
	deepEqual( Stem("corporativo"), "corpor" );
	deepEqual( Stem("corporativos"), "corpor" );
	deepEqual( Stem("corpórea"), "corpór" );
	deepEqual( Stem("corpos"), "corp" );
	deepEqual( Stem("corps"), "corps" );
	deepEqual( Stem("corpus"), "corpus" );
	deepEqual( Stem("corradini"), "corradin" );
	deepEqual( Stem("corre"), "corr" );
	deepEqual( Stem("correa"), "corr" );
	deepEqual( Stem("corrêa"), "corr" );
	deepEqual( Stem("correção"), "correçã" );
	deepEqual( Stem("correções"), "correçõ" );
	deepEqual( Stem("corredor"), "corredor" );
	deepEqual( Stem("corredores"), "corredor" );
	deepEqual( Stem("corregedor"), "corregedor" );
	deepEqual( Stem("corregedoria"), "corregedor" );
	deepEqual( Stem("correia"), "corr" );
	deepEqual( Stem("correição"), "correiçã" );
	deepEqual( Stem("correições"), "correiçõ" );
	deepEqual( Stem("correio"), "correi" );
	deepEqual( Stem("correios"), "correi" );
	deepEqual( Stem("correlatos"), "correlat" );
	deepEqual( Stem("correligionários"), "correligionári" );
	deepEqual( Stem("correm"), "corr" );
	deepEqual( Stem("correndo"), "corr" );
	deepEqual( Stem("corrente"), "corrent" );
	deepEqual( Stem("correntes"), "corrent" );
	deepEqual( Stem("correnteza"), "corrent" );
	deepEqual( Stem("correntistas"), "corrent" );
	deepEqual( Stem("correr"), "corr" );
	deepEqual( Stem("correram"), "corr" );
	deepEqual( Stem("correria"), "corr" );
	deepEqual( Stem("correriam"), "corr" );
	deepEqual( Stem("corresponde"), "correspond" );
	deepEqual( Stem("correspondem"), "correspond" );
	deepEqual( Stem("correspondência"), "correspondent" );
	deepEqual( Stem("correspondências"), "correspondent" );
	deepEqual( Stem("correspondente"), "correspondent" );
	deepEqual( Stem("corresponder"), "correspond" );
	deepEqual( Stem("correspondida"), "correspond" );
	deepEqual( Stem("correspondido"), "correspond" );
	deepEqual( Stem("correta"), "corret" );
	deepEqual( Stem("corretamente"), "corret" );
	deepEqual( Stem("corretas"), "corret" );
	deepEqual( Stem("corretivo"), "corret" );
	deepEqual( Stem("correto"), "corret" );
	deepEqual( Stem("corretor"), "corretor" );
	deepEqual( Stem("corretora"), "corretor" );
	deepEqual( Stem("corretoras"), "corretor" );
	deepEqual( Stem("corretores"), "corretor" );
	deepEqual( Stem("corretos"), "corret" );
	deepEqual( Stem("correu"), "corr" );
	deepEqual( Stem("corri"), "corr" );
	deepEqual( Stem("corria"), "corr" );
	deepEqual( Stem("corriam"), "corr" );
	deepEqual( Stem("corrida"), "corr" );
	deepEqual( Stem("corridas"), "corr" );
	deepEqual( Stem("corrido"), "corr" );
	deepEqual( Stem("corrigi"), "corrig" );
	deepEqual( Stem("corrigido"), "corrig" );
	deepEqual( Stem("corrigidos"), "corrig" );
	deepEqual( Stem("corrigir"), "corrig" );
	deepEqual( Stem("corrigirmos"), "corrig" );
	deepEqual( Stem("corrimentos"), "corriment" );
	deepEqual( Stem("corriqueira"), "corriqueir" );
	deepEqual( Stem("corriqueiras"), "corriqueir" );
	deepEqual( Stem("corriqueiros"), "corriqueir" );
	deepEqual( Stem("corriveau"), "corriveau" );
	deepEqual( Stem("corroborada"), "corrobor" );
	deepEqual( Stem("corroem"), "corro" );
	deepEqual( Stem("corroída"), "corroíd" );
	deepEqual( Stem("corrompendo"), "corromp" );
	deepEqual( Stem("corrupção"), "corrupçã" );
	deepEqual( Stem("corrupto"), "corrupt" );
	deepEqual( Stem("corruptos"), "corrupt" );
	deepEqual( Stem("corta"), "cort" );
	deepEqual( Stem("cortada"), "cort" );
	deepEqual( Stem("cortadas"), "cort" );
	deepEqual( Stem("cortado"), "cort" );
	deepEqual( Stem("cortador"), "cortador" );
	deepEqual( Stem("cortados"), "cort" );
	deepEqual( Stem("cortam"), "cort" );
	deepEqual( Stem("cortamos"), "cort" );
	deepEqual( Stem("cortando"), "cort" );
	deepEqual( Stem("cortante"), "cortant" );
	deepEqual( Stem("cortar"), "cort" );
	deepEqual( Stem("cortaram"), "cort" );
	deepEqual( Stem("cortava"), "cort" );
	deepEqual( Stem("corte"), "cort" );
	deepEqual( Stem("cortei"), "cort" );
	deepEqual( Stem("cortejada"), "cortej" );
	deepEqual( Stem("cortejo"), "cortej" );
	deepEqual( Stem("cortes"), "cort" );
	deepEqual( Stem("côrtes"), "côrt" );
	deepEqual( Stem("cortês"), "cortês" );
	deepEqual( Stem("cortesãos"), "cortesã" );
	deepEqual( Stem("cortesia"), "cortes" );
	deepEqual( Stem("cortiços"), "cortic" );
	deepEqual( Stem("cortinas"), "cortin" );
	deepEqual( Stem("cortisona"), "cortison" );
	deepEqual( Stem("cortou"), "cort" );
	deepEqual( Stem("coruja"), "coruj" );
	deepEqual( Stem("cos"), "cos" );
	deepEqual( Stem("cosette"), "cosett" );
	deepEqual( Stem("cosidera"), "cosid" );
	deepEqual( Stem("cosmética"), "cosmét" );
	deepEqual( Stem("cosmético"), "cosmét" );
	deepEqual( Stem("cosméticos"), "cosmét" );
	deepEqual( Stem("cósmica"), "cósmic" );
	deepEqual( Stem("cósmico"), "cósmic" );
	deepEqual( Stem("cosmo"), "cosm" );
	deepEqual( Stem("cosmódromo"), "cosmódrom" );
	deepEqual( Stem("cosmologia"), "cosmolog" );
	deepEqual( Stem("cosmológica"), "cosmológ" );
	deepEqual( Stem("cosmologista"), "cosmolog" );
	deepEqual( Stem("cosmopolitan"), "cosmopolitan" );
	deepEqual( Stem("cosmopolitismo"), "cosmopolit" );
	deepEqual( Stem("cosmos"), "cosm" );
	deepEqual( Stem("cossacos"), "cossac" );
	deepEqual( Stem("costa"), "cost" );
	deepEqual( Stem("costanza"), "costanz" );
	deepEqual( Stem("costas"), "cost" );
	deepEqual( Stem("costeiras"), "costeir" );
	deepEqual( Stem("costeiros"), "costeir" );
	deepEqual( Stem("costela"), "costel" );
	deepEqual( Stem("costelas"), "costel" );
	deepEqual( Stem("costeletas"), "costelet" );
	deepEqual( Stem("costello"), "costell" );
	deepEqual( Stem("costi"), "cost" );
	deepEqual( Stem("costuma"), "costum" );
	deepEqual( Stem("costumam"), "costum" );
	deepEqual( Stem("costumava"), "costum" );
	deepEqual( Stem("costumavam"), "costum" );
	deepEqual( Stem("costume"), "costum" );
	deepEqual( Stem("costumes"), "costum" );
	deepEqual( Stem("costumo"), "costum" );
	deepEqual( Stem("costura"), "costur" );
	deepEqual( Stem("costurada"), "costur" );
	deepEqual( Stem("costurado"), "costur" );
	deepEqual( Stem("costurar"), "costur" );
	deepEqual( Stem("costuras"), "costur" );
	deepEqual( Stem("costureira"), "costureir" );
	deepEqual( Stem("costureiras"), "costureir" );
	deepEqual( Stem("costureiros"), "costureir" );
	deepEqual( Stem("costuro"), "costur" );
	deepEqual( Stem("costurou"), "costur" );
	deepEqual( Stem("cota"), "cot" );
	deepEqual( Stem("cotação"), "cotaçã" );
	deepEqual( Stem("cotações"), "cotaçõ" );
	deepEqual( Stem("cotado"), "cot" );
	deepEqual( Stem("cotados"), "cot" );
	deepEqual( Stem("cotas"), "cot" );
	deepEqual( Stem("côte"), "côt" );
	deepEqual( Stem("cotecchino"), "cotecchin" );
	deepEqual( Stem("cotejadas"), "cotej" );
	deepEqual( Stem("cotidiana"), "cotidian" );
	deepEqual( Stem("cotidianas"), "cotidian" );
	deepEqual( Stem("cotidiano"), "cotidian" );
	deepEqual( Stem("cotovelo"), "cotovel" );
	deepEqual( Stem("coube"), "coub" );
	deepEqual( Stem("coubesse"), "coub" );
	deepEqual( Stem("couraça"), "courac" );
	deepEqual( Stem("couro"), "cour" );
	deepEqual( Stem("cours"), "cours" );
	deepEqual( Stem("courtney"), "courtney" );
	deepEqual( Stem("cousteau"), "cousteau" );
	deepEqual( Stem("couto"), "cout" );
	deepEqual( Stem("couturié"), "couturi" );
	deepEqual( Stem("covarde"), "covard" );
	deepEqual( Stem("covardemente"), "covard" );
	deepEqual( Stem("covas"), "cov" );
	deepEqual( Stem("coveiro"), "coveir" );
	deepEqual( Stem("covello"), "covell" );
	deepEqual( Stem("covers"), "covers" );
	deepEqual( Stem("covo"), "cov" );
	deepEqual( Stem("coxa"), "cox" );
	deepEqual( Stem("coxas"), "cox" );
	deepEqual( Stem("cozidas"), "coz" );
	deepEqual( Stem("cozido"), "coz" );
	deepEqual( Stem("cozimento"), "coziment" );
	deepEqual( Stem("cozinha"), "cozinh" );
	deepEqual( Stem("cozinhando"), "cozinh" );
	deepEqual( Stem("cozinhar"), "cozinh" );
	deepEqual( Stem("cozinhe"), "cozinh" );
	deepEqual( Stem("cozinheira"), "cozinheir" );
	deepEqual( Stem("cozinheiras"), "cozinheir" );
	deepEqual( Stem("cozinheiro"), "cozinheir" );
	deepEqual( Stem("cozinheiros"), "cozinheir" );
	deepEqual( Stem("cpi"), "cpi" );
	deepEqual( Stem("cpis"), "cpis" );
	deepEqual( Stem("cpmf"), "cpmf" );
	deepEqual( Stem("cptzão"), "cptzã" );
	deepEqual( Stem("cpu"), "cpu" );
	deepEqual( Stem("cr"), "cr" );
	deepEqual( Stem("cracão"), "cracã" );
	deepEqual( Stem("crack"), "crack" );
	deepEqual( Stem("craft"), "craft" );
	deepEqual( Stem("craig"), "craig" );
	deepEqual( Stem("craniano"), "cranian" );
	deepEqual( Stem("crânio"), "crâni" );
	deepEqual( Stem("crânios"), "crâni" );
	deepEqual( Stem("craque"), "craqu" );
	deepEqual( Stem("craques"), "craqu" );
	deepEqual( Stem("cratera"), "crat" );
	deepEqual( Stem("crateras"), "crat" );
	deepEqual( Stem("cravá"), "crav" );
	deepEqual( Stem("cravados"), "crav" );
	deepEqual( Stem("cravarmos"), "crav" );
	deepEqual( Stem("craveiro"), "craveir" );
	deepEqual( Stem("cravo"), "crav" );
	deepEqual( Stem("cravou"), "crav" );
	deepEqual( Stem("crawford"), "crawford" );
	deepEqual( Stem("creche"), "crech" );
	deepEqual( Stem("creches"), "crech" );
	deepEqual( Stem("credencia"), "credenc" );
	deepEqual( Stem("credenciado"), "credenc" );
	deepEqual( Stem("credenciados"), "credenc" );
	deepEqual( Stem("credenciais"), "credenc" );
	deepEqual( Stem("credenciamento"), "credenc" );
	deepEqual( Stem("crediário"), "crediári" );
	deepEqual( Stem("credibilidade"), "credibil" );
	deepEqual( Stem("credicard"), "credicard" );
	deepEqual( Stem("credita"), "credit" );
	deepEqual( Stem("creditar"), "credit" );
	deepEqual( Stem("crédito"), "crédit" );
	deepEqual( Stem("créditos"), "crédit" );
	deepEqual( Stem("creditou"), "credit" );
	deepEqual( Stem("credor"), "credor" );
	deepEqual( Stem("credores"), "credor" );
	deepEqual( Stem("crêem"), "crê" );
	deepEqual( Stem("crefisul"), "crefisul" );
	deepEqual( Stem("creio"), "crei" );
	deepEqual( Stem("cremação"), "cremaçã" );
	deepEqual( Stem("cremado"), "crem" );
	deepEqual( Stem("cremar"), "crem" );
	deepEqual( Stem("cremasco"), "cremasc" );
	deepEqual( Stem("crematório"), "crematóri" );
	deepEqual( Stem("creme"), "crem" );
	deepEqual( Stem("cremes"), "crem" );
	deepEqual( Stem("cremesp"), "cremesp" );
	deepEqual( Stem("cremilda"), "cremild" );
	deepEqual( Stem("cremosos"), "cremos" );
	deepEqual( Stem("crença"), "crenc" );
	deepEqual( Stem("crenças"), "crenc" );
	deepEqual( Stem("crente"), "crent" );
	deepEqual( Stem("crentes"), "crent" );
	deepEqual( Stem("crepe"), "crep" );
	deepEqual( Stem("crer"), "crer" );
	deepEqual( Stem("cresça"), "cresc" );
	deepEqual( Stem("cresçam"), "cresc" );
	deepEqual( Stem("cresce"), "cresc" );
	deepEqual( Stem("crescem"), "cresc" );
	deepEqual( Stem("crescendo"), "cresc" );
	deepEqual( Stem("crescente"), "crescent" );
	deepEqual( Stem("crescentes"), "crescent" );
	deepEqual( Stem("crescer"), "cresc" );
	deepEqual( Stem("cresceram"), "cresc" );
	deepEqual( Stem("cresceu"), "cresc" );
	deepEqual( Stem("cresciam"), "cresc" );
	deepEqual( Stem("crescidinha"), "crescidinh" );
	deepEqual( Stem("crescido"), "cresc" );
	deepEqual( Stem("crescidos"), "cresc" );
	deepEqual( Stem("crescimento"), "cresciment" );
	deepEqual( Stem("crespos"), "cresp" );
	deepEqual( Stem("cria"), "cri" );
	deepEqual( Stem("criá"), "cri" );
	deepEqual( Stem("criação"), "criaçã" );
	deepEqual( Stem("criacionista"), "criacion" );
	deepEqual( Stem("criações"), "criaçõ" );
	deepEqual( Stem("criada"), "cri" );
	deepEqual( Stem("criadas"), "cri" );
	deepEqual( Stem("criado"), "cri" );
	deepEqual( Stem("criador"), "criador" );
	deepEqual( Stem("criadores"), "criador" );
	deepEqual( Stem("criados"), "cri" );
	deepEqual( Stem("criadouros"), "criadour" );
	deepEqual( Stem("criam"), "cri" );
	deepEqual( Stem("criança"), "crianc" );
	deepEqual( Stem("criançada"), "crianc" );
	deepEqual( Stem("crianças"), "crianc" );
	deepEqual( Stem("criancinha"), "criancinh" );
	deepEqual( Stem("criancinhas"), "criancinh" );
	deepEqual( Stem("criando"), "cri" );
	deepEqual( Stem("criar"), "cri" );
	deepEqual( Stem("criará"), "cri" );
	deepEqual( Stem("criaram"), "cri" );
	deepEqual( Stem("criariam"), "cri" );
	deepEqual( Stem("criasse"), "cri" );
	deepEqual( Stem("criativas"), "criativ" );
	deepEqual( Stem("criatividade"), "criativ" );
	deepEqual( Stem("criativo"), "criativ" );
	deepEqual( Stem("criativos"), "criativ" );
	deepEqual( Stem("criatura"), "criatur" );
	deepEqual( Stem("criaturas"), "criatur" );
	deepEqual( Stem("criavam"), "cri" );
	deepEqual( Stem("crichton"), "crichton" );
	deepEqual( Stem("crick"), "crick" );
	deepEqual( Stem("crie"), "cri" );
	deepEqual( Stem("criem"), "cri" );
	deepEqual( Stem("crigor"), "crigor" );
	deepEqual( Stem("crime"), "crim" );
	deepEqual( Stem("crimes"), "crim" );
	deepEqual( Stem("criminais"), "crimin" );
	deepEqual( Stem("criminal"), "criminal" );
	deepEqual( Stem("criminalidade"), "criminal" );
	deepEqual( Stem("criminalista"), "criminal" );
	deepEqual( Stem("criminalistas"), "criminal" );
	deepEqual( Stem("criminalística"), "criminalíst" );
	deepEqual( Stem("criminosas"), "crimin" );
	deepEqual( Stem("criminoso"), "crimin" );
	deepEqual( Stem("criminosos"), "crimin" );
	deepEqual( Stem("crio"), "cri" );
	deepEqual( Stem("crioterapia"), "crioterap" );
	deepEqual( Stem("criou"), "cri" );
	deepEqual( Stem("criptográfica"), "criptográf" );
	deepEqual( Stem("cris"), "cris" );
	deepEqual( Stem("crise"), "cris" );
	deepEqual( Stem("crises"), "cris" );
	deepEqual( Stem("crisma"), "crism" );
	deepEqual( Stem("crispim"), "crispim" );
	deepEqual( Stem("cristã"), "cristã" );
	deepEqual( Stem("cristais"), "crist" );
	deepEqual( Stem("cristal"), "cristal" );
	deepEqual( Stem("cristalinas"), "cristalin" );
	deepEqual( Stem("cristalizar"), "cristaliz" );
	deepEqual( Stem("cristão"), "cristã" );
	deepEqual( Stem("cristãos"), "cristã" );
	deepEqual( Stem("cristian"), "cristian" );
	deepEqual( Stem("cristiana"), "cristian" );
	deepEqual( Stem("cristianismo"), "cristian" );
	deepEqual( Stem("cristiano"), "cristian" );
	deepEqual( Stem("cristina"), "cristin" );
	deepEqual( Stem("cristo"), "crist" );
	deepEqual( Stem("cristobal"), "cristobal" );
	deepEqual( Stem("cristóvão"), "cristóvã" );
	deepEqual( Stem("critério"), "critéri" );
	deepEqual( Stem("critérios"), "critéri" );
	deepEqual( Stem("criteriosa"), "criteri" );
	deepEqual( Stem("criteriosos"), "criteri" );
	deepEqual( Stem("critica"), "critic" );
	deepEqual( Stem("crítica"), "crític" );
	deepEqual( Stem("criticá"), "critic" );
	deepEqual( Stem("criticado"), "critic" );
	deepEqual( Stem("criticam"), "critic" );
	deepEqual( Stem("criticando"), "critic" );
	deepEqual( Stem("criticar"), "critic" );
	deepEqual( Stem("críticas"), "crític" );
	deepEqual( Stem("criticava"), "critic" );
	deepEqual( Stem("crítico"), "crític" );
	deepEqual( Stem("críticos"), "crític" );
	deepEqual( Stem("criticou"), "critic" );
	deepEqual( Stem("crivada"), "criv" );
	deepEqual( Stem("crivo"), "criv" );
	deepEqual( Stem("crixás"), "crixás" );
	deepEqual( Stem("crj"), "crj" );
	deepEqual( Stem("crochê"), "croch" );
	deepEqual( Stem("crocodile"), "crocodil" );
	deepEqual( Stem("croissant"), "croissant" );
	deepEqual( Stem("cromo"), "crom" );
	deepEqual( Stem("cromossomo"), "cromossom" );
	deepEqual( Stem("cromossomos"), "cromossom" );
	deepEqual( Stem("cromwell"), "cromwell" );
	deepEqual( Stem("crônica"), "crônic" );
	deepEqual( Stem("crônicas"), "crônic" );
	deepEqual( Stem("crônico"), "crônic" );
	deepEqual( Stem("cronista"), "cronist" );
	deepEqual( Stem("cronograma"), "cronogram" );
	deepEqual( Stem("cronologia"), "cronolog" );
	deepEqual( Stem("cronológica"), "cronológ" );
	deepEqual( Stem("crooner"), "croon" );
	deepEqual( Stem("croqui"), "croqu" );
	deepEqual( Stem("croquis"), "croqu" );
	deepEqual( Stem("crosby"), "crosby" );
	deepEqual( Stem("cru"), "cru" );
	deepEqual( Stem("cruciais"), "cruc" );
	deepEqual( Stem("crucial"), "crucial" );
	deepEqual( Stem("crucificado"), "crucific" );
	deepEqual( Stem("crucificar"), "crucific" );
	deepEqual( Stem("crucifixo"), "crucifix" );
	deepEqual( Stem("crúcis"), "crúc" );
	deepEqual( Stem("cruéis"), "cru" );
	deepEqual( Stem("cruel"), "cruel" );
	deepEqual( Stem("crueldade"), "crueldad" );
	deepEqual( Stem("cruenta"), "cruent" );
	deepEqual( Stem("crusp"), "crusp" );
	deepEqual( Stem("crustáceos"), "crustác" );
	deepEqual( Stem("cruz"), "cruz" );
	deepEqual( Stem("cruza"), "cruz" );
	deepEqual( Stem("cruzada"), "cruz" );
	deepEqual( Stem("cruzadas"), "cruz" );
	deepEqual( Stem("cruzado"), "cruz" );
	deepEqual( Stem("cruzados"), "cruz" );
	deepEqual( Stem("cruzam"), "cruz" );
	deepEqual( Stem("cruzamento"), "cruzament" );
	deepEqual( Stem("cruzamentos"), "cruzament" );
	deepEqual( Stem("cruzar"), "cruz" );
	deepEqual( Stem("cruzavam"), "cruz" );
	deepEqual( Stem("cruze"), "cruz" );
	deepEqual( Stem("cruzeiro"), "cruzeir" );
	deepEqual( Stem("cruzem"), "cruz" );
	deepEqual( Stem("cruzes"), "cruz" );
	deepEqual( Stem("cruzi"), "cruz" );
	deepEqual( Stem("csn"), "csn" );
	deepEqual( Stem("cst"), "cst" );
	deepEqual( Stem("ct"), "ct" );
	deepEqual( Stem("cuba"), "cub" );
	deepEqual( Stem("cubana"), "cuban" );
	deepEqual( Stem("cubano"), "cuban" );
	deepEqual( Stem("cubanos"), "cuban" );
	deepEqual( Stem("cubas"), "cub" );
	deepEqual( Stem("cubatão"), "cubatã" );
	deepEqual( Stem("cúbico"), "cúbic" );
	deepEqual( Stem("cúbicos"), "cúbic" );
	deepEqual( Stem("cubzac"), "cubzac" );
	deepEqual( Stem("cuca"), "cuc" );
	deepEqual( Stem("cucarachas"), "cucarach" );
	deepEqual( Stem("cucco"), "cucc" );
	deepEqual( Stem("cuchê"), "cuch" );
	deepEqual( Stem("cueca"), "cuec" );
	deepEqual( Stem("cuecas"), "cuec" );
	deepEqual( Stem("cuiabá"), "cuiab" );
	deepEqual( Stem("cuida"), "cuid" );
	deepEqual( Stem("cuidadas"), "cuid" );
	deepEqual( Stem("cuidado"), "cuid" );
	deepEqual( Stem("cuidados"), "cuid" );
	deepEqual( Stem("cuidadosa"), "cuidad" );
	deepEqual( Stem("cuidadosamente"), "cuidad" );
	deepEqual( Stem("cuidadoso"), "cuidad" );
	deepEqual( Stem("cuidadosos"), "cuidad" );
	deepEqual( Stem("cuidam"), "cuid" );
	deepEqual( Stem("cuidando"), "cuid" );
	deepEqual( Stem("cuidar"), "cuid" );
	deepEqual( Stem("cuidarem"), "cuid" );
	deepEqual( Stem("cuidava"), "cuid" );
	deepEqual( Stem("cuidavam"), "cuid" );
	deepEqual( Stem("cuidei"), "cuid" );
	deepEqual( Stem("cuidem"), "cuid" );
	deepEqual( Stem("cuido"), "cuid" );
	deepEqual( Stem("cuidou"), "cuid" );
	deepEqual( Stem("cuisine"), "cuisin" );
	deepEqual( Stem("cuíto"), "cuít" );
	deepEqual( Stem("cuja"), "cuj" );
	deepEqual( Stem("cujas"), "cuj" );
	deepEqual( Stem("cujo"), "cuj" );
	deepEqual( Stem("cujos"), "cuj" );
	deepEqual( Stem("culatra"), "culatr" );
	deepEqual( Stem("culinária"), "culinár" );
	deepEqual( Stem("culinárias"), "culinár" );
	deepEqual( Stem("culminação"), "culmin" );
	deepEqual( Stem("culminante"), "culmin" );
	deepEqual( Stem("culminar"), "culmin" );
	deepEqual( Stem("culminou"), "culmin" );
	deepEqual( Stem("culote"), "culot" );
	deepEqual( Stem("culpa"), "culp" );
	deepEqual( Stem("culpado"), "culp" );
	deepEqual( Stem("culpados"), "culp" );
	deepEqual( Stem("culpar"), "culp" );
	deepEqual( Stem("culpava"), "culp" );
	deepEqual( Stem("culpo"), "culp" );
	deepEqual( Stem("culpou"), "culp" );
	deepEqual( Stem("cult"), "cult" );
	deepEqual( Stem("cultiva"), "cultiv" );
	deepEqual( Stem("cultivada"), "cultiv" );
	deepEqual( Stem("cultivados"), "cultiv" );
	deepEqual( Stem("cultivar"), "cultiv" );
	deepEqual( Stem("culto"), "cult" );
	deepEqual( Stem("cultores"), "cultor" );
	deepEqual( Stem("cultos"), "cult" );
	deepEqual( Stem("cultua"), "cultu" );
	deepEqual( Stem("cultuada"), "cultu" );
	deepEqual( Stem("cultuados"), "cultu" );
	deepEqual( Stem("cultuar"), "cultu" );
	deepEqual( Stem("cultura"), "cultur" );
	deepEqual( Stem("culturais"), "cultur" );
	deepEqual( Stem("cultural"), "cultural" );
	deepEqual( Stem("culturalmente"), "cultural" );
	deepEqual( Stem("culturas"), "cultur" );
	deepEqual( Stem("cumbica"), "cumbic" );
	deepEqual( Stem("cume"), "cum" );
	deepEqual( Stem("cúmplice"), "cúmplic" );
	deepEqual( Stem("cumplicidade"), "cumplic" );
	deepEqual( Stem("cumpra"), "cumpr" );
	deepEqual( Stem("cumprá"), "cumpr" );
	deepEqual( Stem("cumpre"), "cumpr" );
	deepEqual( Stem("cumprem"), "cumpr" );
	deepEqual( Stem("cumpri"), "cumpr" );
	deepEqual( Stem("cumprí"), "cumpr" );
	deepEqual( Stem("cumpria"), "cumpr" );
	deepEqual( Stem("cumprida"), "cumpr" );
	deepEqual( Stem("cumpridas"), "cumpr" );
	deepEqual( Stem("cumprido"), "cumpr" );
	deepEqual( Stem("cumprimentar"), "cumpriment" );
	deepEqual( Stem("cumprimento"), "cumpriment" );
	deepEqual( Stem("cumprimentos"), "cumpriment" );
	deepEqual( Stem("cumprindo"), "cumpr" );
	deepEqual( Stem("cumprir"), "cumpr" );
	deepEqual( Stem("cumprirem"), "cumpr" );
	deepEqual( Stem("cumprirmos"), "cumpr" );
	deepEqual( Stem("cumpriu"), "cumpr" );
	deepEqual( Stem("cumpulsório"), "cumpulsóri" );
	deepEqual( Stem("cumulativo"), "cumul" );
	deepEqual( Stem("cunha"), "cunh" );
	deepEqual( Stem("cunhada"), "cunh" );
	deepEqual( Stem("cunhado"), "cunh" );
	deepEqual( Stem("cunhos"), "cunh" );
	deepEqual( Stem("cunhou"), "cunh" );
	deepEqual( Stem("cupim"), "cupim" );
	deepEqual( Stem("cúpula"), "cúpul" );
	deepEqual( Stem("cura"), "cur" );
	deepEqual( Stem("curá"), "cur" );
	deepEqual( Stem("curada"), "cur" );
	deepEqual( Stem("curadas"), "cur" );
	deepEqual( Stem("curado"), "cur" );
	deepEqual( Stem("curador"), "curador" );
	deepEqual( Stem("curadora"), "curador" );
	deepEqual( Stem("curam"), "cur" );
	deepEqual( Stem("curandeirismo"), "curandeir" );
	deepEqual( Stem("curandeiro"), "curandeir" );
	deepEqual( Stem("curandeiros"), "curandeir" );
	deepEqual( Stem("curar"), "cur" );
	deepEqual( Stem("curas"), "cur" );
	deepEqual( Stem("curável"), "curável" );
	deepEqual( Stem("curei"), "cur" );
	deepEqual( Stem("curió"), "curi" );
	deepEqual( Stem("curiosa"), "curios" );
	deepEqual( Stem("curiosamente"), "curios" );
	deepEqual( Stem("curiosas"), "curios" );
	deepEqual( Stem("curiosidade"), "curios" );
	deepEqual( Stem("curiosidades"), "curios" );
	deepEqual( Stem("curioso"), "curios" );
	deepEqual( Stem("curiosos"), "curios" );
	deepEqual( Stem("curitiba"), "curitib" );
	deepEqual( Stem("curou"), "cur" );
	deepEqual( Stem("curral"), "curral" );
	deepEqual( Stem("curricular"), "curricul" );
	deepEqual( Stem("currículo"), "currícul" );
	deepEqual( Stem("currículos"), "currícul" );
	deepEqual( Stem("cursa"), "curs" );
	deepEqual( Stem("cursam"), "curs" );
	deepEqual( Stem("cursando"), "curs" );
	deepEqual( Stem("cursar"), "curs" );
	deepEqual( Stem("cursava"), "curs" );
	deepEqual( Stem("cursinho"), "cursinh" );
	deepEqual( Stem("curso"), "curs" );
	deepEqual( Stem("cursos"), "curs" );
	deepEqual( Stem("cursou"), "curs" );
	deepEqual( Stem("curta"), "curt" );
	deepEqual( Stem("curtas"), "curt" );
	deepEqual( Stem("curtem"), "curt" );
	deepEqual( Stem("curtindo"), "curt" );
	deepEqual( Stem("curtir"), "curt" );
	deepEqual( Stem("curtirem"), "curt" );
	deepEqual( Stem("curto"), "curt" );
	deepEqual( Stem("curtos"), "curt" );
	deepEqual( Stem("curva"), "curv" );
	deepEqual( Stem("curvado"), "curv" );
	deepEqual( Stem("curvar"), "curv" );
	deepEqual( Stem("curvas"), "curv" );
	deepEqual( Stem("curvou"), "curv" );
	deepEqual( Stem("cury"), "cury" );
	deepEqual( Stem("cuschnir"), "cuschn" );
	deepEqual( Stem("cushman"), "cushman" );
	deepEqual( Stem("cuspidas"), "cusp" );
	deepEqual( Stem("custa"), "cust" );
	deepEqual( Stem("custado"), "cust" );
	deepEqual( Stem("custam"), "cust" );
	deepEqual( Stem("custar"), "cust" );
	deepEqual( Stem("custará"), "cust" );
	deepEqual( Stem("custas"), "cust" );
	deepEqual( Stem("custava"), "cust" );
	deepEqual( Stem("custavam"), "cust" );
	deepEqual( Stem("custe"), "cust" );
	deepEqual( Stem("custeadas"), "cust" );
	deepEqual( Stem("custeado"), "cust" );
	deepEqual( Stem("custear"), "cust" );
	deepEqual( Stem("custei"), "cust" );
	deepEqual( Stem("custeia"), "cust" );
	deepEqual( Stem("custeio"), "custei" );
	deepEqual( Stem("custeou"), "cust" );
	deepEqual( Stem("custo"), "cust" );
	deepEqual( Stem("custódia"), "custód" );
	deepEqual( Stem("custódio"), "custódi" );
	deepEqual( Stem("custos"), "cust" );
	deepEqual( Stem("custou"), "cust" );
	deepEqual( Stem("cutícula"), "cutícul" );
	deepEqual( Stem("cutucando"), "cutuc" );
	deepEqual( Stem("cybex"), "cybex" );
	deepEqual( Stem("cynthia"), "cynthi" );
	deepEqual( Stem("cyntia"), "cynti" );
	deepEqual( Stem("cypel"), "cypel" );
	deepEqual( Stem("cyro"), "cyro" );
	deepEqual( Stem("cyrus"), "cyrus" );
	deepEqual( Stem("cz"), "cz" );
	deepEqual( Stem("d"), "d" );
	deepEqual( Stem("da"), "da" );
	deepEqual( Stem("dá"), "dá" );
	deepEqual( Stem("dabdab"), "dabdab" );
	deepEqual( Stem("dac"), "dac" );
	deepEqual( Stem("dachas"), "dach" );
	deepEqual( Stem("dacta"), "dact" );
	deepEqual( Stem("dada"), "dad" );
	deepEqual( Stem("dadá"), "dad" );
	deepEqual( Stem("dadas"), "dad" );
	deepEqual( Stem("dadi"), "dad" );
	deepEqual( Stem("dado"), "dad" );
	deepEqual( Stem("dados"), "dad" );
	deepEqual( Stem("dagueneide"), "dagueneid" );
	deepEqual( Stem("daí"), "daí" );
	deepEqual( Stem("daily"), "daily" );
	deepEqual( Stem("daisy"), "daisy" );
	deepEqual( Stem("dal"), "dal" );
	deepEqual( Stem("dalai"), "dala" );
	deepEqual( Stem("dali"), "dal" );
	deepEqual( Stem("dalí"), "dal" );
	deepEqual( Stem("dallari"), "dallar" );
	deepEqual( Stem("dallas"), "dall" );
	deepEqual( Stem("dalmo"), "dalm" );
	deepEqual( Stem("dalton"), "dalton" );
	deepEqual( Stem("dalva"), "dalv" );
	deepEqual( Stem("dama"), "dam" );
	deepEqual( Stem("damasco"), "damasc" );
	deepEqual( Stem("damiana"), "damian" );
	deepEqual( Stem("damião"), "damiã" );
	deepEqual( Stem("daminhas"), "daminh" );
	deepEqual( Stem("damos"), "dam" );
	deepEqual( Stem("danado"), "dan" );
	deepEqual( Stem("dança"), "danc" );
	deepEqual( Stem("dançam"), "danc" );
	deepEqual( Stem("dançando"), "danc" );
	deepEqual( Stem("dançante"), "dançant" );
	deepEqual( Stem("dançar"), "danc" );
	deepEqual( Stem("dançaram"), "danc" );
	deepEqual( Stem("dançarina"), "dançarin" );
	deepEqual( Stem("dançarinas"), "dançarin" );
	deepEqual( Stem("dançarinos"), "dançarin" );
	deepEqual( Stem("danças"), "danc" );
	deepEqual( Stem("dançava"), "danc" );
	deepEqual( Stem("dançavam"), "danc" );
	deepEqual( Stem("dance"), "danc" );
	deepEqual( Stem("danceteria"), "dancet" );
	deepEqual( Stem("danço"), "danc" );
	deepEqual( Stem("dançou"), "danc" );
	deepEqual( Stem("dando"), "dand" );
	deepEqual( Stem("dani"), "dan" );
	deepEqual( Stem("daniel"), "daniel" );
	deepEqual( Stem("daniela"), "daniel" );
	deepEqual( Stem("daniella"), "daniell" );
	deepEqual( Stem("danielle"), "daniell" );
	deepEqual( Stem("danifica"), "danif" );
	deepEqual( Stem("danificado"), "danific" );
	deepEqual( Stem("danificava"), "danific" );
	deepEqual( Stem("danilo"), "danil" );
	deepEqual( Stem("dano"), "dan" );
	deepEqual( Stem("danone"), "danon" );
	deepEqual( Stem("danos"), "dan" );
	deepEqual( Stem("danosos"), "danos" );
	deepEqual( Stem("danou"), "dan" );
	deepEqual( Stem("danse"), "dans" );
	deepEqual( Stem("dantas"), "dant" );
	deepEqual( Stem("dante"), "dant" );
	deepEqual( Stem("dantescas"), "dantesc" );
	deepEqual( Stem("danton"), "danton" );
	deepEqual( Stem("dão"), "dã" );
	deepEqual( Stem("dapartamento"), "dapart" );
	deepEqual( Stem("daphne"), "daphn" );
	deepEqual( Stem("daquela"), "daquel" );
	deepEqual( Stem("daquelas"), "daquel" );
	deepEqual( Stem("daquele"), "daquel" );
	deepEqual( Stem("daqueles"), "daquel" );
	deepEqual( Stem("daqui"), "daqu" );
	deepEqual( Stem("daquilo"), "daquil" );
	deepEqual( Stem("dar"), "dar" );
	deepEqual( Stem("dará"), "dar" );
	deepEqual( Stem("darão"), "darã" );
	deepEqual( Stem("darci"), "darc" );
	deepEqual( Stem("darcio"), "darci" );
	deepEqual( Stem("dárcio"), "dárci" );
	deepEqual( Stem("darcy"), "darcy" );
	deepEqual( Stem("dardanelos"), "dardanel" );
	deepEqual( Stem("darem"), "dar" );
	deepEqual( Stem("daria"), "dar" );
	deepEqual( Stem("dariel"), "dariel" );
	deepEqual( Stem("dark"), "dark" );
	deepEqual( Stem("darlene"), "darlen" );
	deepEqual( Stem("darmos"), "darm" );
	deepEqual( Stem("darwin"), "darwin" );
	deepEqual( Stem("darwiniana"), "darwinian" );
	deepEqual( Stem("darwinista"), "darwin" );
	deepEqual( Stem("das"), "das" );
	deepEqual( Stem("daslu"), "daslu" );
	deepEqual( Stem("dastem"), "dast" );
	deepEqual( Stem("data"), "dat" );
	deepEqual( Stem("datado"), "dat" );
	deepEqual( Stem("datafolha"), "datafolh" );
	deepEqual( Stem("dataprev"), "dataprev" );
	deepEqual( Stem("datas"), "dat" );
	deepEqual( Stem("datasus"), "datasus" );
	deepEqual( Stem("date"), "dat" );
	deepEqual( Stem("datelli"), "datell" );
	deepEqual( Stem("datilografado"), "datilograf" );
	deepEqual( Stem("datilografar"), "datilograf" );
	deepEqual( Stem("datilógrafas"), "datilógraf" );
	deepEqual( Stem("datilografei"), "datilograf" );
	deepEqual( Stem("datilografia"), "datilograf" );
	deepEqual( Stem("datilógrafo"), "datilógraf" );
	deepEqual( Stem("datou"), "dat" );
	deepEqual( Stem("dava"), "dav" );
	deepEqual( Stem("davam"), "dav" );
	deepEqual( Stem("dave"), "dav" );
	deepEqual( Stem("davi"), "dav" );
	deepEqual( Stem("david"), "david" );
	deepEqual( Stem("davide"), "david" );
	deepEqual( Stem("dávila"), "dávil" );
	deepEqual( Stem("davis"), "dav" );
	deepEqual( Stem("dawkins"), "dawkins" );
	deepEqual( Stem("day"), "day" );
	deepEqual( Stem("dbm"), "dbm" );
	deepEqual( Stem("dc"), "dc" );
	deepEqual( Stem("dce"), "dce" );
	deepEqual( Stem("dd"), "dd" );
	deepEqual( Stem("ddd"), "ddd" );
	deepEqual( Stem("de"), "de" );
	deepEqual( Stem("dê"), "dê" );
	deepEqual( Stem("deaconess"), "deaconess" );
	deepEqual( Stem("dean"), "dean" );
	deepEqual( Stem("debaixo"), "debaix" );
	deepEqual( Stem("debandou"), "deband" );
	deepEqual( Stem("debate"), "debat" );
	deepEqual( Stem("debatem"), "debat" );
	deepEqual( Stem("debater"), "debat" );
	deepEqual( Stem("debates"), "debat" );
	deepEqual( Stem("debateu"), "debat" );
	deepEqual( Stem("debatido"), "debat" );
	deepEqual( Stem("debelado"), "debel" );
	deepEqual( Stem("debêntures"), "debêntur" );
	deepEqual( Stem("débil"), "débil" );
	deepEqual( Stem("debilitada"), "debilit" );
	deepEqual( Stem("debilitado"), "debilit" );
	deepEqual( Stem("debilóide"), "debilóid" );
	deepEqual( Stem("debitadas"), "debit" );
	deepEqual( Stem("debitado"), "debit" );
	deepEqual( Stem("débito"), "débit" );
	deepEqual( Stem("débitos"), "débit" );
	deepEqual( Stem("debocha"), "deboch" );
	deepEqual( Stem("debochados"), "deboch" );
	deepEqual( Stem("deboche"), "deboch" );
	deepEqual( Stem("débora"), "débor" );
	deepEqual( Stem("deborah"), "deborah" );
	deepEqual( Stem("debray"), "debray" );
	deepEqual( Stem("debruçada"), "debruc" );
	deepEqual( Stem("debruçou"), "debruc" );
	deepEqual( Stem("début"), "début" );
	deepEqual( Stem("debutante"), "debut" );
	deepEqual( Stem("dec"), "dec" );
	deepEqual( Stem("década"), "déc" );
	deepEqual( Stem("décadas"), "déc" );
	deepEqual( Stem("decadência"), "decadent" );
	deepEqual( Stem("decadente"), "decadent" );
	deepEqual( Stem("decadentes"), "decadent" );
	deepEqual( Stem("decaída"), "decaíd" );
	deepEqual( Stem("decaiu"), "deca" );
	deepEqual( Stem("decência"), "decênc" );
	deepEqual( Stem("decente"), "decent" );
	deepEqual( Stem("decentemente"), "decent" );
	deepEqual( Stem("decepações"), "decep" );
	deepEqual( Stem("decepadas"), "decep" );
	deepEqual( Stem("decepção"), "decepçã" );
	deepEqual( Stem("decepcionadas"), "decepcion" );
	deepEqual( Stem("decepcionado"), "decepcion" );
	deepEqual( Stem("decepcionam"), "decepcion" );
	deepEqual( Stem("decepcionante"), "decepcion" );
	deepEqual( Stem("decepções"), "decepçõ" );
	deepEqual( Stem("decerto"), "decert" );
	deepEqual( Stem("decibéis"), "decib" );
	deepEqual( Stem("decide"), "decid" );
	deepEqual( Stem("decidem"), "decid" );
	deepEqual( Stem("decidi"), "decid" );
	deepEqual( Stem("decidiam"), "decid" );
	deepEqual( Stem("decidida"), "decid" );
	deepEqual( Stem("decididamente"), "decidid" );
	deepEqual( Stem("decidido"), "decid" );
	deepEqual( Stem("decidimos"), "decid" );
	deepEqual( Stem("decidir"), "decid" );
	deepEqual( Stem("decidirá"), "decid" );
	deepEqual( Stem("decidiram"), "decid" );
	deepEqual( Stem("decidirem"), "decid" );
	deepEqual( Stem("decidiu"), "decid" );
	deepEqual( Stem("decido"), "dec" );
	deepEqual( Stem("decifrada"), "decifr" );
	deepEqual( Stem("decifrados"), "decifr" );
	deepEqual( Stem("decifrar"), "decifr" );
	deepEqual( Stem("decifraremos"), "decifr" );
	deepEqual( Stem("decifrou"), "decifr" );
	deepEqual( Stem("decilitro"), "decilitr" );
	deepEqual( Stem("décima"), "décim" );
	deepEqual( Stem("decimal"), "decimal" );
	deepEqual( Stem("décimo"), "décim" );
	deepEqual( Stem("décimos"), "déc" );
	deepEqual( Stem("décio"), "déci" );
	deepEqual( Stem("decisão"), "decisã" );
	deepEqual( Stem("decisiva"), "decis" );
	deepEqual( Stem("decisivamente"), "decis" );
	deepEqual( Stem("decisivas"), "decis" );
	deepEqual( Stem("decisivo"), "decis" );
	deepEqual( Stem("decisivos"), "decis" );
	deepEqual( Stem("decisões"), "decisõ" );
	deepEqual( Stem("declara"), "decl" );
	deepEqual( Stem("declaração"), "declar" );
	deepEqual( Stem("declarações"), "declar" );
	deepEqual( Stem("declarada"), "declar" );
	deepEqual( Stem("declarado"), "declar" );
	deepEqual( Stem("declaram"), "decl" );
	deepEqual( Stem("declarar"), "declar" );
	deepEqual( Stem("declararam"), "declar" );
	deepEqual( Stem("declarasse"), "declar" );
	deepEqual( Stem("declarava"), "declar" );
	deepEqual( Stem("declarou"), "declar" );
	deepEqual( Stem("declinar"), "declin" );
	deepEqual( Stem("declínio"), "declíni" );
	deepEqual( Stem("decola"), "decol" );
	deepEqual( Stem("decolagem"), "decolag" );
	deepEqual( Stem("decolagens"), "decolagens" );
	deepEqual( Stem("decolando"), "decol" );
	deepEqual( Stem("decolar"), "decol" );
	deepEqual( Stem("decolara"), "decol" );
	deepEqual( Stem("decolaram"), "decol" );
	deepEqual( Stem("decolou"), "decol" );
	deepEqual( Stem("decora"), "decor" );
	deepEqual( Stem("decoração"), "decor" );
	deepEqual( Stem("decorada"), "decor" );
	deepEqual( Stem("decorado"), "decor" );
	deepEqual( Stem("decorador"), "decor" );
	deepEqual( Stem("decoradora"), "decor" );
	deepEqual( Stem("decoradoras"), "decor" );
	deepEqual( Stem("decoradores"), "decor" );
	deepEqual( Stem("decorar"), "decor" );
	deepEqual( Stem("decorativo"), "decor" );
	deepEqual( Stem("decorou"), "decor" );
	deepEqual( Stem("decorre"), "decorr" );
	deepEqual( Stem("decorrência"), "decorrent" );
	deepEqual( Stem("decorrentes"), "decorrent" );
	deepEqual( Stem("decorrer"), "decorr" );
	deepEqual( Stem("decorreu"), "decorr" );
	deepEqual( Stem("decorridos"), "decorr" );
	deepEqual( Stem("decotada"), "decot" );
	deepEqual( Stem("decreta"), "decret" );
	deepEqual( Stem("decretação"), "decret" );
	deepEqual( Stem("decretada"), "decret" );
	deepEqual( Stem("decretar"), "decret" );
	deepEqual( Stem("decretaram"), "decret" );
	deepEqual( Stem("decreto"), "decret" );
	deepEqual( Stem("decretou"), "decret" );
	deepEqual( Stem("decuplicar"), "decuplic" );
	deepEqual( Stem("dedica"), "dedic" );
	deepEqual( Stem("dedicação"), "dedic" );
	deepEqual( Stem("dedicada"), "dedic" );
	deepEqual( Stem("dedicadas"), "dedic" );
	deepEqual( Stem("dedicado"), "dedic" );
	deepEqual( Stem("dedicados"), "dedic" );
	deepEqual( Stem("dedicam"), "dedic" );
	deepEqual( Stem("dedicando"), "dedic" );
	deepEqual( Stem("dedicar"), "dedic" );
	deepEqual( Stem("dedicaram"), "dedic" );
	deepEqual( Stem("dedico"), "dedic" );
	deepEqual( Stem("dedicou"), "dedic" );
	deepEqual( Stem("dedinho"), "dedinh" );
	deepEqual( Stem("dediquei"), "dediqu" );
	deepEqual( Stem("dedo"), "ded" );
	deepEqual( Stem("dedos"), "ded" );
	deepEqual( Stem("deduraram"), "dedur" );
	deepEqual( Stem("deduz"), "deduz" );
	deepEqual( Stem("deduzir"), "deduz" );
	deepEqual( Stem("dêem"), "dêem" );
	deepEqual( Stem("deep"), "deep" );
	deepEqual( Stem("defamation"), "defamation" );
	deepEqual( Stem("defasagem"), "defasag" );
	deepEqual( Stem("defecar"), "defec" );
	deepEqual( Stem("defeito"), "defeit" );
	deepEqual( Stem("defeitos"), "defeit" );
	deepEqual( Stem("defeituosas"), "defeitu" );
	deepEqual( Stem("defeituoso"), "defeitu" );
	deepEqual( Stem("defeituosos"), "defeitu" );
	deepEqual( Stem("defenda"), "defend" );
	deepEqual( Stem("defende"), "defend" );
	deepEqual( Stem("defendê"), "defend" );
	deepEqual( Stem("defendem"), "defend" );
	deepEqual( Stem("defendendo"), "defend" );
	deepEqual( Stem("defender"), "defend" );
	deepEqual( Stem("defenderá"), "defend" );
	deepEqual( Stem("defenderte"), "defendert" );
	deepEqual( Stem("defendesse"), "defend" );
	deepEqual( Stem("defendeu"), "defend" );
	deepEqual( Stem("defendi"), "defend" );
	deepEqual( Stem("defendida"), "defend" );
	deepEqual( Stem("defendo"), "def" );
	deepEqual( Stem("defensiva"), "defens" );
	deepEqual( Stem("defensor"), "defensor" );
	deepEqual( Stem("defensora"), "defensor" );
	deepEqual( Stem("defensores"), "defensor" );
	deepEqual( Stem("deferência"), "deferent" );
	deepEqual( Stem("defesa"), "defes" );
	deepEqual( Stem("defesas"), "defes" );
	deepEqual( Stem("deff"), "deff" );
	deepEqual( Stem("deficiência"), "deficient" );
	deepEqual( Stem("deficiências"), "deficient" );
	deepEqual( Stem("deficiente"), "deficient" );
	deepEqual( Stem("deficientes"), "deficient" );
	deepEqual( Stem("déficit"), "déficit" );
	deepEqual( Stem("déficits"), "déficits" );
	deepEqual( Stem("define"), "defin" );
	deepEqual( Stem("definem"), "defin" );
	deepEqual( Stem("definham"), "definh" );
	deepEqual( Stem("definição"), "definiçã" );
	deepEqual( Stem("definida"), "defin" );
	deepEqual( Stem("definidas"), "defin" );
	deepEqual( Stem("definido"), "defin" );
	deepEqual( Stem("definidos"), "defin" );
	deepEqual( Stem("definindo"), "defin" );
	deepEqual( Stem("definir"), "defin" );
	deepEqual( Stem("definiram"), "defin" );
	deepEqual( Stem("definirmos"), "defin" );
	deepEqual( Stem("definitiva"), "definit" );
	deepEqual( Stem("definitivamente"), "definit" );
	deepEqual( Stem("definitivo"), "definit" );
	deepEqual( Stem("definitivos"), "definit" );
	deepEqual( Stem("definiu"), "defin" );
	deepEqual( Stem("deflagrada"), "deflagr" );
	deepEqual( Stem("deflagrador"), "deflagr" );
	deepEqual( Stem("deflagradores"), "deflagr" );
	deepEqual( Stem("deformados"), "deform" );
	deepEqual( Stem("deformar"), "deform" );
	deepEqual( Stem("defronta"), "defront" );
	deepEqual( Stem("defunta"), "defunt" );
	deepEqual( Stem("defuntos"), "defunt" );
	deepEqual( Stem("degase"), "degas" );
	deepEqual( Stem("degenera"), "degen" );
	deepEqual( Stem("degeneris"), "degener" );
	deepEqual( Stem("degolados"), "degol" );
	deepEqual( Stem("degradadas"), "degrad" );
	deepEqual( Stem("degradando"), "degrad" );
	deepEqual( Stem("degradar"), "degrad" );
	deepEqual( Stem("degradaram"), "degrad" );
	deepEqual( Stem("degradeè"), "degradeè" );
	deepEqual( Stem("degrau"), "degrau" );
	deepEqual( Stem("degraus"), "degraus" );
	deepEqual( Stem("degredado"), "degred" );
	deepEqual( Stem("degredados"), "degred" );
	deepEqual( Stem("degustação"), "degust" );
	deepEqual( Stem("degustador"), "degust" );
	deepEqual( Stem("degustam"), "degust" );
	deepEqual( Stem("degustar"), "degust" );
	deepEqual( Stem("deheinzelin"), "deheinzelin" );
	deepEqual( Stem("dei"), "dei" );
	deepEqual( Stem("deitada"), "deit" );
	deepEqual( Stem("deitar"), "deit" );
	deepEqual( Stem("deixa"), "deix" );
	deepEqual( Stem("deixá"), "deix" );
	deepEqual( Stem("deixada"), "deix" );
	deepEqual( Stem("deixadas"), "deix" );
	deepEqual( Stem("deixado"), "deix" );
	deepEqual( Stem("deixam"), "deix" );
	deepEqual( Stem("deixamos"), "deix" );
	deepEqual( Stem("deixando"), "deix" );
	deepEqual( Stem("deixar"), "deix" );
	deepEqual( Stem("deixara"), "deix" );
	deepEqual( Stem("deixará"), "deix" );
	deepEqual( Stem("deixaram"), "deix" );
	deepEqual( Stem("deixarão"), "deix" );
	deepEqual( Stem("deixarem"), "deix" );
	deepEqual( Stem("deixaria"), "deix" );
	deepEqual( Stem("deixariam"), "deix" );
	deepEqual( Stem("deixasse"), "deix" );
	deepEqual( Stem("deixava"), "deix" );
	deepEqual( Stem("deixavam"), "deix" );
	deepEqual( Stem("deixe"), "deix" );
	deepEqual( Stem("deixei"), "deix" );
	deepEqual( Stem("deixem"), "deix" );
	deepEqual( Stem("deixo"), "deix" );
	deepEqual( Stem("deixou"), "deix" );
	deepEqual( Stem("dejanir"), "dejan" );
	deepEqual( Stem("dejenane"), "dejenan" );
	deepEqual( Stem("dejetos"), "dejet" );
	deepEqual( Stem("del"), "del" );
	deepEqual( Stem("dela"), "del" );
	deepEqual( Stem("delano"), "delan" );
	deepEqual( Stem("delas"), "del" );
	deepEqual( Stem("delata"), "delat" );
	deepEqual( Stem("delatando"), "delat" );
	deepEqual( Stem("dele"), "del" );
	deepEqual( Stem("delega"), "deleg" );
	deepEqual( Stem("delegação"), "deleg" );
	deepEqual( Stem("delegacia"), "delegac" );
	deepEqual( Stem("delegada"), "deleg" );
	deepEqual( Stem("delegado"), "deleg" );
	deepEqual( Stem("delegados"), "deleg" );
	deepEqual( Stem("delegar"), "deleg" );
	deepEqual( Stem("deleitando"), "deleit" );
	deepEqual( Stem("deleites"), "deleit" );
	deepEqual( Stem("deles"), "del" );
	deepEqual( Stem("deletar"), "delet" );
	deepEqual( Stem("delfim"), "delfim" );
	deepEqual( Stem("delgar"), "delg" );
	deepEqual( Stem("déli"), "dél" );
	deepEqual( Stem("deliberadamente"), "deliber" );
	deepEqual( Stem("delicada"), "delic" );
	deepEqual( Stem("delicado"), "delic" );
	deepEqual( Stem("delicados"), "delic" );
	deepEqual( Stem("delicatessen"), "delicatessen" );
	deepEqual( Stem("delícia"), "delíc" );
	deepEqual( Stem("deliciar"), "delic" );
	deepEqual( Stem("deliciosa"), "delic" );
	deepEqual( Stem("deliciosamente"), "delic" );
	deepEqual( Stem("deliciosas"), "delic" );
	deepEqual( Stem("delicioso"), "delic" );
	deepEqual( Stem("delineada"), "delin" );
	deepEqual( Stem("delinear"), "delin" );
	deepEqual( Stem("delinquência"), "delinquent" );
	deepEqual( Stem("delinquente"), "delinquent" );
	deepEqual( Stem("delinquentes"), "delinquent" );
	deepEqual( Stem("délio"), "déli" );
	deepEqual( Stem("deliram"), "del" );
	deepEqual( Stem("delirante"), "delir" );
	deepEqual( Stem("delirantes"), "delir" );
	deepEqual( Stem("delirava"), "delir" );
	deepEqual( Stem("delírio"), "delíri" );
	deepEqual( Stem("delito"), "delit" );
	deepEqual( Stem("delitos"), "delit" );
	deepEqual( Stem("della"), "dell" );
	deepEqual( Stem("delmar"), "delm" );
	deepEqual( Stem("delors"), "delors" );
	deepEqual( Stem("delta"), "delt" );
	deepEqual( Stem("deltacid"), "deltacid" );
	deepEqual( Stem("dema"), "dem" );
	deepEqual( Stem("demagógico"), "demagóg" );
	deepEqual( Stem("demagogo"), "demagog" );
	deepEqual( Stem("demais"), "dem" );
	deepEqual( Stem("demanda"), "demand" );
	deepEqual( Stem("demandar"), "demand" );
	deepEqual( Stem("demandas"), "demand" );
	deepEqual( Stem("demarcações"), "demarc" );
	deepEqual( Stem("demarcado"), "demarc" );
	deepEqual( Stem("demarcou"), "demarc" );
	deepEqual( Stem("demasia"), "demas" );
	deepEqual( Stem("demasiado"), "demasi" );
	deepEqual( Stem("demétrio"), "demétri" );
	deepEqual( Stem("demi"), "dem" );
	deepEqual( Stem("demissão"), "demissã" );
	deepEqual( Stem("demissionários"), "demissionári" );
	deepEqual( Stem("demissões"), "demissõ" );
	deepEqual( Stem("demitem"), "demit" );
	deepEqual( Stem("demitiam"), "demit" );
	deepEqual( Stem("demitida"), "demit" );
	deepEqual( Stem("demitido"), "demit" );
	deepEqual( Stem("demitir"), "demit" );
	deepEqual( Stem("demitiram"), "demit" );
	deepEqual( Stem("demitiu"), "demit" );
	deepEqual( Stem("democracia"), "democrac" );
	deepEqual( Stem("democracias"), "democrac" );
	deepEqual( Stem("democrata"), "democrat" );
	deepEqual( Stem("democrática"), "democrát" );
	deepEqual( Stem("democraticamente"), "democrat" );
	deepEqual( Stem("democrático"), "democrát" );
	deepEqual( Stem("democráticos"), "democrát" );
	deepEqual( Stem("democratismo"), "democrat" );
	deepEqual( Stem("democratização"), "democratiz" );
	deepEqual( Stem("démodé"), "démod" );
	deepEqual( Stem("demografia"), "demograf" );
	deepEqual( Stem("demográfica"), "demográf" );
	deepEqual( Stem("demográficos"), "demográf" );
	deepEqual( Stem("demógrafos"), "demógraf" );
	deepEqual( Stem("demolida"), "demol" );
	deepEqual( Stem("demoliu"), "demol" );
	deepEqual( Stem("demoníaco"), "demoníac" );
	deepEqual( Stem("demônio"), "demôni" );
	deepEqual( Stem("demônios"), "demôni" );
	deepEqual( Stem("demonstra"), "demonstr" );
	deepEqual( Stem("demonstração"), "demonstr" );
	deepEqual( Stem("demonstrado"), "demonstr" );
	deepEqual( Stem("demonstram"), "demonstr" );
	deepEqual( Stem("demonstrando"), "demonstr" );
	deepEqual( Stem("demonstrar"), "demonstr" );
	deepEqual( Stem("demonstraram"), "demonstr" );
	deepEqual( Stem("demonstrava"), "demonstr" );
	deepEqual( Stem("demonstrou"), "demonstr" );
	deepEqual( Stem("demora"), "demor" );
	deepEqual( Stem("demorada"), "demor" );
	deepEqual( Stem("demoradamente"), "demor" );
	deepEqual( Stem("demorado"), "demor" );
	deepEqual( Stem("demorados"), "demor" );
	deepEqual( Stem("demoram"), "demor" );
	deepEqual( Stem("demorando"), "demor" );
	deepEqual( Stem("demorar"), "demor" );
	deepEqual( Stem("demoravam"), "demor" );
	deepEqual( Stem("demore"), "demor" );
	deepEqual( Stem("demorei"), "demor" );
	deepEqual( Stem("demoro"), "demor" );
	deepEqual( Stem("demorou"), "demor" );
	deepEqual( Stem("demos"), "dem" );
	deepEqual( Stem("demoura"), "demour" );
	deepEqual( Stem("demovem"), "demov" );
	deepEqual( Stem("dendê"), "dend" );
	deepEqual( Stem("denegridor"), "denegridor" );
	deepEqual( Stem("deneuve"), "deneuv" );
	deepEqual( Stem("deng"), "deng" );
	deepEqual( Stem("dengo"), "deng" );
	deepEqual( Stem("dengosa"), "dengos" );
	deepEqual( Stem("dengoso"), "dengos" );
	deepEqual( Stem("dengue"), "deng" );
	deepEqual( Stem("denílson"), "denílson" );
	deepEqual( Stem("denise"), "denis" );
	deepEqual( Stem("dennis"), "denn" );
	deepEqual( Stem("denominação"), "denomin" );
	deepEqual( Stem("denominações"), "denomin" );
	deepEqual( Stem("denominado"), "denomin" );
	deepEqual( Stem("denominador"), "denomin" );
	deepEqual( Stem("denominados"), "denomin" );
	deepEqual( Stem("denominando"), "denomin" );
	deepEqual( Stem("densa"), "dens" );
	deepEqual( Stem("densidade"), "densidad" );
	deepEqual( Stem("densitometria"), "densitometr" );
	deepEqual( Stem("densitômetro"), "densitômetr" );
	deepEqual( Stem("denso"), "dens" );
	deepEqual( Stem("dentária"), "dentár" );
	deepEqual( Stem("dente"), "dent" );
	deepEqual( Stem("dentes"), "dent" );
	deepEqual( Stem("dentista"), "dentist" );
	deepEqual( Stem("dentistas"), "dentist" );
	deepEqual( Stem("dentre"), "dentr" );
	deepEqual( Stem("dentro"), "dentr" );
	deepEqual( Stem("denuncia"), "denunc" );
	deepEqual( Stem("denúncia"), "denúnc" );
	deepEqual( Stem("denunciadas"), "denunc" );
	deepEqual( Stem("denunciado"), "denunc" );
	deepEqual( Stem("denunciando"), "denunc" );
	deepEqual( Stem("denunciar"), "denunc" );
	deepEqual( Stem("denúncias"), "denúnc" );
	deepEqual( Stem("denunciavam"), "denunc" );
	deepEqual( Stem("denuncie"), "denunc" );
	deepEqual( Stem("denunciou"), "denunc" );
	deepEqual( Stem("denuncismo"), "denunc" );
	deepEqual( Stem("denver"), "denv" );
	deepEqual( Stem("deodoro"), "deodor" );
	deepEqual( Stem("deon"), "deon" );
	deepEqual( Stem("deops"), "deops" );
	deepEqual( Stem("depara"), "dep" );
	deepEqual( Stem("deparamos"), "depar" );
	deepEqual( Stem("deparar"), "depar" );
	deepEqual( Stem("deparou"), "depar" );
	deepEqual( Stem("departamentalização"), "departamentaliz" );
	deepEqual( Stem("departamento"), "depart" );
	deepEqual( Stem("departamentos"), "depart" );
	deepEqual( Stem("dependa"), "depend" );
	deepEqual( Stem("depende"), "depend" );
	deepEqual( Stem("dependem"), "depend" );
	deepEqual( Stem("dependemos"), "depend" );
	deepEqual( Stem("dependência"), "dependent" );
	deepEqual( Stem("dependências"), "dependent" );
	deepEqual( Stem("dependendo"), "depend" );
	deepEqual( Stem("dependente"), "dependent" );
	deepEqual( Stem("dependentes"), "dependent" );
	deepEqual( Stem("depender"), "depend" );
	deepEqual( Stem("dependerá"), "depend" );
	deepEqual( Stem("dependerão"), "depend" );
	deepEqual( Stem("dependeria"), "depend" );
	deepEqual( Stem("dependeu"), "depend" );
	deepEqual( Stem("dependi"), "depend" );
	deepEqual( Stem("dependia"), "depend" );
	deepEqual( Stem("dependuram"), "dependur" );
	deepEqual( Stem("dependurar"), "dependur" );
	deepEqual( Stem("depila"), "depil" );
	deepEqual( Stem("depiladas"), "depil" );
	deepEqual( Stem("depoente"), "depoent" );
	deepEqual( Stem("depoentes"), "depoent" );
	deepEqual( Stem("depoimento"), "depoiment" );
	deepEqual( Stem("depoimentos"), "depoiment" );
	deepEqual( Stem("depois"), "depo" );
	deepEqual( Stem("depor"), "depor" );
	deepEqual( Stem("deportação"), "deport" );
	deepEqual( Stem("deportado"), "deport" );
	deepEqual( Stem("deportaram"), "deport" );
	deepEqual( Stem("deposição"), "deposiçã" );
	deepEqual( Stem("deposita"), "deposit" );
	deepEqual( Stem("depositadas"), "deposit" );
	deepEqual( Stem("depositado"), "deposit" );
	deepEqual( Stem("depositados"), "deposit" );
	deepEqual( Stem("depositar"), "deposit" );
	deepEqual( Stem("deposito"), "deposit" );
	deepEqual( Stem("depósito"), "depósit" );
	deepEqual( Stem("depósitos"), "depósit" );
	deepEqual( Stem("deprê"), "depr" );
	deepEqual( Stem("depreciação"), "deprec" );
	deepEqual( Stem("depressa"), "depress" );
	deepEqual( Stem("depressão"), "depressã" );
	deepEqual( Stem("depressiva"), "depress" );
	deepEqual( Stem("depressivo"), "depress" );
	deepEqual( Stem("depressivos"), "depress" );
	deepEqual( Stem("depressões"), "depressõ" );
	deepEqual( Stem("deprimida"), "deprim" );
	deepEqual( Stem("deprimidas"), "deprim" );
	deepEqual( Stem("depuração"), "depur" );
	deepEqual( Stem("depurar"), "depur" );
	deepEqual( Stem("depuseram"), "depus" );
	deepEqual( Stem("deputada"), "deput" );
	deepEqual( Stem("deputado"), "deput" );
	deepEqual( Stem("deputados"), "deput" );
	deepEqual( Stem("der"), "der" );
	deepEqual( Stem("dera"), "der" );
	deepEqual( Stem("deram"), "der" );
	deepEqual( Stem("derci"), "derc" );
	deepEqual( Stem("derivada"), "deriv" );
	deepEqual( Stem("derivado"), "deriv" );
	deepEqual( Stem("derivados"), "deriv" );
	deepEqual( Stem("dermatológicos"), "dermatológ" );
	deepEqual( Stem("dermatologista"), "dermatolog" );
	deepEqual( Stem("dermatologistas"), "dermatolog" );
	deepEqual( Stem("derradeira"), "derradeir" );
	deepEqual( Stem("derradeiras"), "derradeir" );
	deepEqual( Stem("derradeiros"), "derradeir" );
	deepEqual( Stem("derrama"), "derram" );
	deepEqual( Stem("derramam"), "derram" );
	deepEqual( Stem("derramamento"), "derram" );
	deepEqual( Stem("derrame"), "derram" );
	deepEqual( Stem("derrames"), "derram" );
	deepEqual( Stem("derramou"), "derram" );
	deepEqual( Stem("derrapou"), "derrap" );
	deepEqual( Stem("derretida"), "derret" );
	deepEqual( Stem("derrocada"), "derroc" );
	deepEqual( Stem("derrota"), "derrot" );
	deepEqual( Stem("derrotá"), "derrot" );
	deepEqual( Stem("derrotada"), "derrot" );
	deepEqual( Stem("derrotado"), "derrot" );
	deepEqual( Stem("derrotados"), "derrot" );
	deepEqual( Stem("derrotas"), "derrot" );
	deepEqual( Stem("derrotista"), "derrot" );
	deepEqual( Stem("derrotou"), "derrot" );
	deepEqual( Stem("derruba"), "derrub" );
	deepEqual( Stem("derrubá"), "derrub" );
	deepEqual( Stem("derrubados"), "derrub" );
	deepEqual( Stem("derrubam"), "derrub" );
	deepEqual( Stem("derrubando"), "derrub" );
	deepEqual( Stem("derrubar"), "derrub" );
	deepEqual( Stem("derrubaram"), "derrub" );
	deepEqual( Stem("derrubou"), "derrub" );
	deepEqual( Stem("dertouzos"), "dertouz" );
	deepEqual( Stem("des"), "des" );
	deepEqual( Stem("desaba"), "desab" );
	deepEqual( Stem("desabado"), "desab" );
	deepEqual( Stem("desabafa"), "desabaf" );
	deepEqual( Stem("desabafo"), "desabaf" );
	deepEqual( Stem("desabafou"), "desabaf" );
	deepEqual( Stem("desabamento"), "desab" );
	deepEqual( Stem("desabaram"), "desab" );
	deepEqual( Stem("desabastecimento"), "desabastec" );
	deepEqual( Stem("desabou"), "desab" );
	deepEqual( Stem("desabrido"), "desabr" );
	deepEqual( Stem("desaconselha"), "desaconselh" );
	deepEqual( Stem("desaconselhado"), "desaconselh" );
	deepEqual( Stem("desaconselhável"), "desaconselh" );
	deepEqual( Stem("desacordado"), "desacord" );
	deepEqual( Stem("desacredito"), "desacredit" );
	deepEqual( Stem("desafeto"), "desafet" );
	deepEqual( Stem("desafetos"), "desafet" );
	deepEqual( Stem("desafia"), "desaf" );
	deepEqual( Stem("desafiadoras"), "desafi" );
	deepEqual( Stem("desafiam"), "desaf" );
	deepEqual( Stem("desafiando"), "desafi" );
	deepEqual( Stem("desafiar"), "desafi" );
	deepEqual( Stem("desafina"), "desafin" );
	deepEqual( Stem("desafinado"), "desafin" );
	deepEqual( Stem("desafio"), "desafi" );
	deepEqual( Stem("desafios"), "desafi" );
	deepEqual( Stem("desaforo"), "desafor" );
	deepEqual( Stem("deságio"), "desági" );
	deepEqual( Stem("desagrada"), "desagr" );
	deepEqual( Stem("desagradará"), "desagrad" );
	deepEqual( Stem("desagradáveis"), "desagrad" );
	deepEqual( Stem("desagradável"), "desagrad" );
	deepEqual( Stem("desagravo"), "desagrav" );
	deepEqual( Stem("deságuam"), "deságu" );
	deepEqual( Stem("desaguar"), "desagu" );
	deepEqual( Stem("desajeitado"), "desajeit" );
	deepEqual( Stem("desajustada"), "desajust" );
	deepEqual( Stem("desalentador"), "desalent" );
	deepEqual( Stem("desalinhados"), "desalinh" );
	deepEqual( Stem("desalinho"), "desalinh" );
	deepEqual( Stem("desamparadas"), "desampar" );
	deepEqual( Stem("desamparo"), "desampar" );
	deepEqual( Stem("desandou"), "desand" );
	deepEqual( Stem("desanimado"), "desanim" );
	deepEqual( Stem("desanimar"), "desanim" );
	deepEqual( Stem("desânimos"), "desân" );
	deepEqual( Stem("desanimou"), "desanim" );
	deepEqual( Stem("desapareça"), "desaparec" );
	deepEqual( Stem("desaparece"), "desaparec" );
	deepEqual( Stem("desaparecem"), "desaparec" );
	deepEqual( Stem("desaparecendo"), "desaparec" );
	deepEqual( Stem("desaparecer"), "desaparec" );
	deepEqual( Stem("desapareceu"), "desaparec" );
	deepEqual( Stem("desaparecido"), "desaparec" );
	deepEqual( Stem("desapontada"), "desapont" );
	deepEqual( Stem("desapontados"), "desapont" );
	deepEqual( Stem("desapontamento"), "desapont" );
	deepEqual( Stem("desaprovar"), "desaprov" );
	deepEqual( Stem("desarmá"), "desarm" );
	deepEqual( Stem("desarmada"), "desarm" );
	deepEqual( Stem("desarmado"), "desarm" );
	deepEqual( Stem("desarranjos"), "desarranj" );
	deepEqual( Stem("desarrumação"), "desarrum" );
	deepEqual( Stem("desarrumados"), "desarrum" );
	deepEqual( Stem("desarticula"), "desarticul" );
	deepEqual( Stem("desarticulação"), "desarticul" );
	deepEqual( Stem("desassombrada"), "desassombr" );
	deepEqual( Stem("desastrado"), "desastr" );
	deepEqual( Stem("desastrados"), "desastr" );
	deepEqual( Stem("desastre"), "desastr" );
	deepEqual( Stem("desastres"), "desastr" );
	deepEqual( Stem("desastrosas"), "desastr" );
	deepEqual( Stem("desastroso"), "desastr" );
	deepEqual( Stem("desatá"), "desat" );
	deepEqual( Stem("desatar"), "desat" );
	deepEqual( Stem("desativada"), "desativ" );
	deepEqual( Stem("desativado"), "desativ" );
	deepEqual( Stem("desativados"), "desativ" );
	deepEqual( Stem("desatracar"), "desatrac" );
	deepEqual( Stem("desatualizada"), "desatualiz" );
	deepEqual( Stem("desavenças"), "desavenc" );
	deepEqual( Stem("desavisado"), "desavis" );
	deepEqual( Stem("desavisados"), "desavis" );
	deepEqual( Stem("desbancar"), "desbanc" );
	deepEqual( Stem("desbancou"), "desbanc" );
	deepEqual( Stem("desbaratar"), "desbarat" );
	deepEqual( Stem("desbloquear"), "desbloqu" );
	deepEqual( Stem("desbravadora"), "desbrav" );
	deepEqual( Stem("desbravamento"), "desbrav" );
	deepEqual( Stem("desbravando"), "desbrav" );
	deepEqual( Stem("desbunde"), "desbund" );
	deepEqual( Stem("descalça"), "descalc" );
	deepEqual( Stem("descalcificação"), "descalcific" );
	deepEqual( Stem("descalço"), "descalc" );
	deepEqual( Stem("descalços"), "descalc" );
	deepEqual( Stem("descalvado"), "descalv" );
	deepEqual( Stem("descampado"), "descamp" );
	deepEqual( Stem("descansa"), "descans" );
	deepEqual( Stem("descansada"), "descans" );
	deepEqual( Stem("descansam"), "descans" );
	deepEqual( Stem("descansar"), "descans" );
	deepEqual( Stem("descanso"), "descans" );
	deepEqual( Stem("descansou"), "descans" );
	deepEqual( Stem("descaracterizaria"), "descaracteriz" );
	deepEqual( Stem("descarga"), "descarg" );
	deepEqual( Stem("descargas"), "descarg" );
	deepEqual( Stem("descarrega"), "descarreg" );
	deepEqual( Stem("descarregamento"), "descarreg" );
	deepEqual( Stem("descarregar"), "descarreg" );
	deepEqual( Stem("descartada"), "descart" );
	deepEqual( Stem("descartam"), "descart" );
	deepEqual( Stem("descartar"), "descart" );
	deepEqual( Stem("descartou"), "descart" );
	deepEqual( Stem("descasa"), "descas" );
	deepEqual( Stem("descasado"), "descas" );
	deepEqual( Stem("descasando"), "descas" );
	deepEqual( Stem("descascá"), "descasc" );
	deepEqual( Stem("descascado"), "descasc" );
	deepEqual( Stem("descascar"), "descasc" );
	deepEqual( Stem("descaso"), "descas" );
	deepEqual( Stem("descasque"), "descasqu" );
	deepEqual( Stem("descem"), "desc" );
	deepEqual( Stem("descendente"), "descendent" );
	deepEqual( Stem("descendentes"), "descendent" );
	deepEqual( Stem("descendo"), "desc" );
	deepEqual( Stem("descentraliza"), "descentraliz" );
	deepEqual( Stem("descentralização"), "descentraliz" );
	deepEqual( Stem("descentralizada"), "descentraliz" );
	deepEqual( Stem("descentralizado"), "descentraliz" );
	deepEqual( Stem("descer"), "desc" );
	deepEqual( Stem("desceram"), "desc" );
	deepEqual( Stem("descertificação"), "descertific" );
	deepEqual( Stem("descertificaram"), "descertific" );
	deepEqual( Stem("descesse"), "desc" );
	deepEqual( Stem("desceu"), "desc" );
	deepEqual( Stem("descida"), "desc" );
	deepEqual( Stem("desclassificado"), "desclassific" );
	deepEqual( Stem("desclassificam"), "desclassific" );
	deepEqual( Stem("desço"), "desc" );
	deepEqual( Stem("descoberta"), "descobert" );
	deepEqual( Stem("descobertas"), "descobert" );
	deepEqual( Stem("descoberto"), "descobert" );
	deepEqual( Stem("descobertos"), "descobert" );
	deepEqual( Stem("descobre"), "descobr" );
	deepEqual( Stem("descobrem"), "descobr" );
	deepEqual( Stem("descobri"), "descobr" );
	deepEqual( Stem("descobria"), "descobr" );
	deepEqual( Stem("descobridor"), "descobridor" );
	deepEqual( Stem("descobrimento"), "descobr" );
	deepEqual( Stem("descobrimentos"), "descobr" );
	deepEqual( Stem("descobrimos"), "descobr" );
	deepEqual( Stem("descobrindo"), "descobr" );
	deepEqual( Stem("descobrir"), "descobr" );
	deepEqual( Stem("descobriram"), "descobr" );
	deepEqual( Stem("descobrirem"), "descobr" );
	deepEqual( Stem("descobrirmos"), "descobr" );
	deepEqual( Stem("descobrisse"), "descobr" );
	deepEqual( Stem("descobrissem"), "descobr" );
	deepEqual( Stem("descobriu"), "descobr" );
	deepEqual( Stem("descompasso"), "descompass" );
	deepEqual( Stem("descomprometidas"), "descompromet" );
	deepEqual( Stem("descomprometidos"), "descompromet" );
	deepEqual( Stem("descompromissada"), "descompromiss" );
	deepEqual( Stem("descompromisso"), "descompromiss" );
	deepEqual( Stem("desconcentrar"), "desconcentr" );
	deepEqual( Stem("desconfia"), "desconf" );
	deepEqual( Stem("desconfiada"), "desconfi" );
	deepEqual( Stem("desconfiado"), "desconfi" );
	deepEqual( Stem("desconfiados"), "desconfi" );
	deepEqual( Stem("desconfiam"), "desconf" );
	deepEqual( Stem("desconfiança"), "desconfianc" );
	deepEqual( Stem("desconfianças"), "desconfianc" );
	deepEqual( Stem("desconfiar"), "desconfi" );
	deepEqual( Stem("desconfie"), "desconfi" );
	deepEqual( Stem("desconfiei"), "desconfi" );
	deepEqual( Stem("desconfiou"), "desconfi" );
	deepEqual( Stem("desconfortáveis"), "desconfort" );
	deepEqual( Stem("desconfortável"), "desconfort" );
	deepEqual( Stem("desconforto"), "desconfort" );
	deepEqual( Stem("descongestionante"), "descongestion" );
	deepEqual( Stem("desconhecia"), "desconhec" );
	deepEqual( Stem("desconheciam"), "desconhec" );
	deepEqual( Stem("desconhecida"), "desconhec" );
	deepEqual( Stem("desconhecidas"), "desconhec" );
	deepEqual( Stem("desconhecido"), "desconhec" );
	deepEqual( Stem("desconhecidos"), "desconhec" );
	deepEqual( Stem("desconhecimento"), "desconhec" );
	deepEqual( Stem("desconsidera"), "desconsid" );
	deepEqual( Stem("descontando"), "descont" );
	deepEqual( Stem("descontar"), "descont" );
	deepEqual( Stem("desconte"), "descont" );
	deepEqual( Stem("descontentamento"), "descontent" );
	deepEqual( Stem("descontente"), "descontent" );
	deepEqual( Stem("descontentes"), "descontent" );
	deepEqual( Stem("descontos"), "descont" );
	deepEqual( Stem("descontração"), "descontr" );
	deepEqual( Stem("descontraída"), "descontraíd" );
	deepEqual( Stem("descontraído"), "descontraíd" );
	deepEqual( Stem("descontraídos"), "descontraíd" );
	deepEqual( Stem("descontrolada"), "descontrol" );
	deepEqual( Stem("descontroladas"), "descontrol" );
	deepEqual( Stem("descontrolado"), "descontrol" );
	deepEqual( Stem("descontrole"), "descontrol" );
	deepEqual( Stem("desconversa"), "desconvers" );
	deepEqual( Stem("desconversar"), "desconvers" );
	deepEqual( Stem("desconversava"), "desconvers" );
	deepEqual( Stem("descrédito"), "descrédit" );
	deepEqual( Stem("descrença"), "descrenc" );
	deepEqual( Stem("descrente"), "descrent" );
	deepEqual( Stem("descreve"), "descrev" );
	deepEqual( Stem("descrevem"), "descrev" );
	deepEqual( Stem("descrever"), "descrev" );
	deepEqual( Stem("descrevera"), "descrev" );
	deepEqual( Stem("descreveu"), "descrev" );
	deepEqual( Stem("descrição"), "descriçã" );
	deepEqual( Stem("descrições"), "descriçõ" );
	deepEqual( Stem("descrita"), "descrit" );
	deepEqual( Stem("descritas"), "descrit" );
	deepEqual( Stem("descritivo"), "descrit" );
	deepEqual( Stem("descrito"), "descrit" );
	deepEqual( Stem("descubra"), "descubr" );
	deepEqual( Stem("descubram"), "descubr" );
	deepEqual( Stem("descubrir"), "descubr" );
	deepEqual( Stem("descubro"), "descubr" );
	deepEqual( Stem("descuido"), "descu" );
	deepEqual( Stem("descuidos"), "descu" );
	deepEqual( Stem("desculpa"), "desculp" );
	deepEqual( Stem("desculpada"), "desculp" );
	deepEqual( Stem("desculpas"), "desculp" );
	deepEqual( Stem("desculpava"), "desculp" );
	deepEqual( Stem("descumprido"), "descumpr" );
	deepEqual( Stem("descumprimento"), "descumpr" );
	deepEqual( Stem("descumprirem"), "descumpr" );
	deepEqual( Stem("descumpriu"), "descumpr" );
	deepEqual( Stem("desde"), "desd" );
	deepEqual( Stem("desditoso"), "desdit" );
	deepEqual( Stem("deseja"), "desej" );
	deepEqual( Stem("desejada"), "desej" );
	deepEqual( Stem("desejadas"), "desej" );
	deepEqual( Stem("desejado"), "desej" );
	deepEqual( Stem("desejam"), "desej" );
	deepEqual( Stem("desejando"), "desej" );
	deepEqual( Stem("desejar"), "desej" );
	deepEqual( Stem("desejarem"), "desej" );
	deepEqual( Stem("desejaria"), "desej" );
	deepEqual( Stem("desejava"), "desej" );
	deepEqual( Stem("desejável"), "desej" );
	deepEqual( Stem("desejo"), "desej" );
	deepEqual( Stem("desejos"), "desej" );
	deepEqual( Stem("desembarca"), "desembarc" );
	deepEqual( Stem("desembarcam"), "desembarc" );
	deepEqual( Stem("desembarcamos"), "desembarc" );
	deepEqual( Stem("desembarcar"), "desembarc" );
	deepEqual( Stem("desembarcará"), "desembarc" );
	deepEqual( Stem("desembarcaram"), "desembarc" );
	deepEqual( Stem("desembarcava"), "desembarc" );
	deepEqual( Stem("desembarcou"), "desembarc" );
	deepEqual( Stem("desembargador"), "desembarg" );
	deepEqual( Stem("desembargadores"), "desembarg" );
	deepEqual( Stem("desembarque"), "desembarqu" );
	deepEqual( Stem("desembocar"), "desemboc" );
	deepEqual( Stem("desembolsa"), "desembols" );
	deepEqual( Stem("desembolsando"), "desembols" );
	deepEqual( Stem("desembolsar"), "desembols" );
	deepEqual( Stem("desembolsaram"), "desembols" );
	deepEqual( Stem("desembolso"), "desembols" );
	deepEqual( Stem("desembolsou"), "desembols" );
	deepEqual( Stem("desempatou"), "desempat" );
	deepEqual( Stem("desempenha"), "desempenh" );
	deepEqual( Stem("desempenhando"), "desempenh" );
	deepEqual( Stem("desempenhar"), "desempenh" );
	deepEqual( Stem("desempenhavam"), "desempenh" );
	deepEqual( Stem("desempenho"), "desempenh" );
	deepEqual( Stem("desempenhou"), "desempenh" );
	deepEqual( Stem("desempregada"), "desempreg" );
	deepEqual( Stem("desempregadas"), "desempreg" );
	deepEqual( Stem("desempregado"), "desempreg" );
	deepEqual( Stem("desempregados"), "desempreg" );
	deepEqual( Stem("desemprego"), "desempreg" );
	deepEqual( Stem("desencadeado"), "desencad" );
	deepEqual( Stem("desencadear"), "desencad" );
	deepEqual( Stem("desencadearam"), "desencad" );
	deepEqual( Stem("desencadeia"), "desencad" );
	deepEqual( Stem("desencadeou"), "desencad" );
	deepEqual( Stem("desencanada"), "desencan" );
	deepEqual( Stem("desencanto"), "desencant" );
	deepEqual( Stem("desenfreada"), "desenfr" );
	deepEqual( Stem("desenfreado"), "desenfr" );
	deepEqual( Stem("desenganado"), "desengan" );
	deepEqual( Stem("desenganados"), "desengan" );
	deepEqual( Stem("desengavetou"), "desengavet" );
	deepEqual( Stem("desengonçado"), "desengonc" );
	deepEqual( Stem("desenhá"), "desenh" );
	deepEqual( Stem("desenhada"), "desenh" );
	deepEqual( Stem("desenhadas"), "desenh" );
	deepEqual( Stem("desenhado"), "desenh" );
	deepEqual( Stem("desenhar"), "desenh" );
	deepEqual( Stem("desenharam"), "desenh" );
	deepEqual( Stem("desenhava"), "desenh" );
	deepEqual( Stem("desenhista"), "desenh" );
	deepEqual( Stem("desenhistas"), "desenh" );
	deepEqual( Stem("desenho"), "desenh" );
	deepEqual( Stem("desenhos"), "desenh" );
	deepEqual( Stem("desenhou"), "desenh" );
	deepEqual( Stem("desenrola"), "desenrol" );
	deepEqual( Stem("desenrolada"), "desenrol" );
	deepEqual( Stem("desenrolar"), "desenrol" );
	deepEqual( Stem("desensibilizar"), "desensibiliz" );
	deepEqual( Stem("desentende"), "desentend" );
	deepEqual( Stem("desentender"), "desentend" );
	deepEqual( Stem("desentendimento"), "desentend" );
	deepEqual( Stem("desenterrarem"), "desenterr" );
	deepEqual( Stem("desentupido"), "desentup" );
	deepEqual( Stem("desentupir"), "desentup" );
	deepEqual( Stem("desenvoltura"), "desenvoltur" );
	deepEqual( Stem("desenvolva"), "desenvolv" );
	deepEqual( Stem("desenvolve"), "desenvolv" );
	deepEqual( Stem("desenvolvem"), "desenvolv" );
	deepEqual( Stem("desenvolvendo"), "desenvolv" );
	deepEqual( Stem("desenvolver"), "desenvolv" );
	deepEqual( Stem("desenvolveram"), "desenvolv" );
	deepEqual( Stem("desenvolveu"), "desenvolv" );
	deepEqual( Stem("desenvolvida"), "desenvolv" );
	deepEqual( Stem("desenvolvidas"), "desenvolv" );
	deepEqual( Stem("desenvolvido"), "desenvolv" );
	deepEqual( Stem("desenvolvidos"), "desenvolv" );
	deepEqual( Stem("desenvolvimentista"), "desenvolviment" );
	deepEqual( Stem("desenvolvimento"), "desenvolv" );
	deepEqual( Stem("desequilibra"), "desequilibr" );
	deepEqual( Stem("desequilibrado"), "desequilibr" );
	deepEqual( Stem("desequilibrados"), "desequilibr" );
	deepEqual( Stem("desequilíbrio"), "desequilíbri" );
	deepEqual( Stem("deserdavam"), "deserd" );
	deepEqual( Stem("deserta"), "desert" );
	deepEqual( Stem("deserto"), "desert" );
	deepEqual( Stem("desertores"), "desertor" );
	deepEqual( Stem("desesperada"), "desesper" );
	deepEqual( Stem("desesperadamente"), "desesper" );
	deepEqual( Stem("desesperado"), "desesper" );
	deepEqual( Stem("desesperadora"), "desesper" );
	deepEqual( Stem("desesperados"), "desesper" );
	deepEqual( Stem("desesperam"), "desesp" );
	deepEqual( Stem("desesperançados"), "desesperanc" );
	deepEqual( Stem("desesperando"), "desesper" );
	deepEqual( Stem("desesperar"), "desesper" );
	deepEqual( Stem("desesperem"), "desesp" );
	deepEqual( Stem("desespero"), "desesper" );
	deepEqual( Stem("desestatização"), "desestatiz" );
	deepEqual( Stem("desestimula"), "desestimul" );
	deepEqual( Stem("desestimulam"), "desestimul" );
	deepEqual( Stem("desestímulo"), "desestímul" );
	deepEqual( Stem("desestimulou"), "desestimul" );
	deepEqual( Stem("desfalcavam"), "desfalc" );
	deepEqual( Stem("desfalque"), "desfalqu" );
	deepEqual( Stem("desfavorável"), "desfavor" );
	deepEqual( Stem("desfaz"), "desfaz" );
	deepEqual( Stem("desfazem"), "desfaz" );
	deepEqual( Stem("desfazendo"), "desfaz" );
	deepEqual( Stem("desfazer"), "desfaz" );
	deepEqual( Stem("desfaziam"), "desfaz" );
	deepEqual( Stem("desfechada"), "desfech" );
	deepEqual( Stem("desfecho"), "desfech" );
	deepEqual( Stem("desfeita"), "desfeit" );
	deepEqual( Stem("desfeito"), "desfeit" );
	deepEqual( Stem("desferido"), "desfer" );
	deepEqual( Stem("desferir"), "desfer" );
	deepEqual( Stem("desferiu"), "desfer" );
	deepEqual( Stem("desfez"), "desfez" );
	deepEqual( Stem("desfiguração"), "desfigur" );
	deepEqual( Stem("desfila"), "desfil" );
	deepEqual( Stem("desfiladeiros"), "desfiladeir" );
	deepEqual( Stem("desfilando"), "desfil" );
	deepEqual( Stem("desfilar"), "desfil" );
	deepEqual( Stem("desfilaram"), "desfil" );
	deepEqual( Stem("desfilava"), "desfil" );
	deepEqual( Stem("desfile"), "desfil" );
	deepEqual( Stem("desfiles"), "desfil" );
	deepEqual( Stem("desfilou"), "desfil" );
	deepEqual( Stem("desfiou"), "desfi" );
	deepEqual( Stem("desfocadas"), "desfoc" );
	deepEqual( Stem("desfralda"), "desfrald" );
	deepEqual( Stem("desfraldada"), "desfrald" );
	deepEqual( Stem("desfraldadas"), "desfrald" );
	deepEqual( Stem("desfrutam"), "desfrut" );
	deepEqual( Stem("desfrutar"), "desfrut" );
	deepEqual( Stem("desgasta"), "desgast" );
	deepEqual( Stem("desgastadas"), "desgast" );
	deepEqual( Stem("desgastando"), "desgast" );
	deepEqual( Stem("desgastante"), "desgast" );
	deepEqual( Stem("desgastar"), "desgast" );
	deepEqual( Stem("desgaste"), "desg" );
	deepEqual( Stem("desgovernado"), "desgovern" );
	deepEqual( Stem("desgraça"), "desgrac" );
	deepEqual( Stem("desgraças"), "desgrac" );
	deepEqual( Stem("desgruda"), "desgrud" );
	deepEqual( Stem("desi"), "des" );
	deepEqual( Stem("desideologização"), "desideologiz" );
	deepEqual( Stem("desidério"), "desidéri" );
	deepEqual( Stem("desidratação"), "desidrat" );
	deepEqual( Stem("desidrogenase"), "desidrogenas" );
	deepEqual( Stem("design"), "design" );
	deepEqual( Stem("designa"), "design" );
	deepEqual( Stem("designação"), "design" );
	deepEqual( Stem("designada"), "design" );
	deepEqual( Stem("designado"), "design" );
	deepEqual( Stem("designados"), "design" );
	deepEqual( Stem("designar"), "design" );
	deepEqual( Stem("designava"), "design" );
	deepEqual( Stem("designer"), "design" );
	deepEqual( Stem("designers"), "designers" );
	deepEqual( Stem("designs"), "designs" );
	deepEqual( Stem("desigual"), "desigual" );
	deepEqual( Stem("desigualdade"), "desigualdad" );
	deepEqual( Stem("desigualdades"), "desigualdad" );
	deepEqual( Stem("desilusão"), "desilusã" );
	deepEqual( Stem("desilusões"), "desilusõ" );
	deepEqual( Stem("desimpedida"), "desimped" );
	deepEqual( Stem("desimportante"), "desimport" );
	deepEqual( Stem("desincompatibilização"), "desincompatibiliz" );
	deepEqual( Stem("desincompatibilizar"), "desincompatibiliz" );
	deepEqual( Stem("desinformação"), "desinform" );
	deepEqual( Stem("desinformadas"), "desinform" );
	deepEqual( Stem("desinibida"), "desinib" );
	deepEqual( Stem("desinteligência"), "desinteligent" );
	deepEqual( Stem("desinteressada"), "desinteress" );
	deepEqual( Stem("desinteressado"), "desinteress" );
	deepEqual( Stem("desinteressam"), "desinteress" );
	deepEqual( Stem("desintoxicação"), "desintoxic" );
	deepEqual( Stem("desiste"), "des" );
	deepEqual( Stem("desistência"), "desistent" );
	deepEqual( Stem("desisti"), "desist" );
	deepEqual( Stem("desistiam"), "desist" );
	deepEqual( Stem("desistindo"), "desist" );
	deepEqual( Stem("desistir"), "desist" );
	deepEqual( Stem("desistiram"), "desist" );
	deepEqual( Stem("desistiria"), "desist" );
	deepEqual( Stem("desistisse"), "desist" );
	deepEqual( Stem("desistiu"), "desist" );
	deepEqual( Stem("desisto"), "desist" );
	deepEqual( Stem("deslanchar"), "deslanch" );
	deepEqual( Stem("desleal"), "desleal" );
	deepEqual( Stem("desleixado"), "desleix" );
	deepEqual( Stem("desligado"), "deslig" );
	deepEqual( Stem("desligados"), "deslig" );
	deepEqual( Stem("desligamento"), "deslig" );
	deepEqual( Stem("desligar"), "deslig" );
	deepEqual( Stem("desligará"), "deslig" );
	deepEqual( Stem("desligaram"), "deslig" );
	deepEqual( Stem("desligaria"), "deslig" );
	deepEqual( Stem("desligassem"), "deslig" );
	deepEqual( Stem("desligo"), "deslig" );
	deepEqual( Stem("desligou"), "deslig" );
	deepEqual( Stem("desliguei"), "desligu" );
	deepEqual( Stem("deslise"), "deslis" );
	deepEqual( Stem("deslizando"), "desliz" );
	deepEqual( Stem("deslizar"), "desliz" );
	deepEqual( Stem("deslize"), "desliz" );
	deepEqual( Stem("deslizes"), "desliz" );
	deepEqual( Stem("desloca"), "desloc" );
	deepEqual( Stem("deslocada"), "desloc" );
	deepEqual( Stem("deslocados"), "desloc" );
	deepEqual( Stem("deslocamento"), "desloc" );
	deepEqual( Stem("deslocar"), "desloc" );
	deepEqual( Stem("deslocava"), "desloc" );
	deepEqual( Stem("deslocou"), "desloc" );
	deepEqual( Stem("deslumbrada"), "deslumbr" );
	deepEqual( Stem("deslumbrado"), "deslumbr" );
	deepEqual( Stem("deslumbrados"), "deslumbr" );
	deepEqual( Stem("deslumbrante"), "deslumbr" );
	deepEqual( Stem("deslumbrar"), "deslumbr" );
	deepEqual( Stem("desmaiar"), "desmai" );
	deepEqual( Stem("desmaiava"), "desmai" );
	deepEqual( Stem("desmaiavam"), "desmai" );
	deepEqual( Stem("desmaios"), "desmai" );
	deepEqual( Stem("desmaiou"), "desmai" );
	deepEqual( Stem("desmanchar"), "desmanch" );
	deepEqual( Stem("desmanche"), "desmanch" );
	deepEqual( Stem("desmantelamento"), "desmantel" );
	deepEqual( Stem("desmantelar"), "desmantel" );
	deepEqual( Stem("desmar"), "desm" );
	deepEqual( Stem("desmascaramento"), "desmascar" );
	deepEqual( Stem("desmascarar"), "desmascar" );
	deepEqual( Stem("desmata"), "desmat" );
	deepEqual( Stem("desmatadas"), "desmat" );
	deepEqual( Stem("desmatamento"), "desmat" );
	deepEqual( Stem("desmatamentos"), "desmat" );
	deepEqual( Stem("desmatando"), "desmat" );
	deepEqual( Stem("desmedidas"), "desmed" );
	deepEqual( Stem("desmembram"), "desmembr" );
	deepEqual( Stem("desmente"), "desment" );
	deepEqual( Stem("desmentindo"), "desment" );
	deepEqual( Stem("desmentir"), "desment" );
	deepEqual( Stem("desmerece"), "desmerec" );
	deepEqual( Stem("desmesuradamente"), "desmesur" );
	deepEqual( Stem("desmilitarizada"), "desmilitariz" );
	deepEqual( Stem("desmistificação"), "desmistific" );
	deepEqual( Stem("desmistificar"), "desmistific" );
	deepEqual( Stem("desmitificação"), "desmitific" );
	deepEqual( Stem("desmontando"), "desmont" );
	deepEqual( Stem("desmontar"), "desmont" );
	deepEqual( Stem("desmontaram"), "desmont" );
	deepEqual( Stem("desmoralização"), "desmoraliz" );
	deepEqual( Stem("desmoronou"), "desmoron" );
	deepEqual( Stem("desmunhecar"), "desmunhec" );
	deepEqual( Stem("desnatado"), "desnat" );
	deepEqual( Stem("desnecessária"), "desnecessár" );
	deepEqual( Stem("desnecessárias"), "desnecessár" );
	deepEqual( Stem("desnecessário"), "desnecessári" );
	deepEqual( Stem("desnecessários"), "desnecessári" );
	deepEqual( Stem("desnorteamento"), "desnort" );
	deepEqual( Stem("desnuclearizada"), "desnucleariz" );
	deepEqual( Stem("desnutrição"), "desnutriçã" );
	deepEqual( Stem("desobedeceu"), "desobedec" );
	deepEqual( Stem("desobediências"), "desobedient" );
	deepEqual( Stem("desobediente"), "desobedient" );
	deepEqual( Stem("desobese"), "desobes" );
	deepEqual( Stem("desocupadas"), "desocup" );
	deepEqual( Stem("desodorados"), "desodor" );
	deepEqual( Stem("desodorante"), "desodor" );
	deepEqual( Stem("desodorantes"), "desodor" );
	deepEqual( Stem("desolado"), "desol" );
	deepEqual( Stem("desonesta"), "desonest" );
	deepEqual( Stem("desonestidade"), "desonest" );
	deepEqual( Stem("desonesto"), "desonest" );
	deepEqual( Stem("desonrosa"), "desonr" );
	deepEqual( Stem("desordem"), "desord" );
	deepEqual( Stem("desordenadas"), "desorden" );
	deepEqual( Stem("desordenado"), "desorden" );
	deepEqual( Stem("desorganizadas"), "desorganiz" );
	deepEqual( Stem("desorientação"), "desorient" );
	deepEqual( Stem("desorientada"), "desorient" );
	deepEqual( Stem("desorientado"), "desorient" );
	deepEqual( Stem("desorientados"), "desorient" );
	deepEqual( Stem("desorientou"), "desorient" );
	deepEqual( Stem("desoxirribonucléico"), "desoxirribonucl" );
	deepEqual( Stem("despacha"), "despach" );
	deepEqual( Stem("despachá"), "despach" );
	deepEqual( Stem("despachada"), "despach" );
	deepEqual( Stem("despachado"), "despach" );
	deepEqual( Stem("despachados"), "despach" );
	deepEqual( Stem("despachar"), "despach" );
	deepEqual( Stem("despachara"), "despach" );
	deepEqual( Stem("despachava"), "despach" );
	deepEqual( Stem("despachei"), "despach" );
	deepEqual( Stem("despacho"), "despach" );
	deepEqual( Stem("despachos"), "despach" );
	deepEqual( Stem("despachou"), "despach" );
	deepEqual( Stem("despe"), "desp" );
	deepEqual( Stem("despedaçada"), "despedac" );
	deepEqual( Stem("despedaçando"), "despedac" );
	deepEqual( Stem("despedida"), "desped" );
	deepEqual( Stem("despedidas"), "desped" );
	deepEqual( Stem("despedido"), "desped" );
	deepEqual( Stem("despedir"), "desped" );
	deepEqual( Stem("despediu"), "desped" );
	deepEqual( Stem("despeito"), "despeit" );
	deepEqual( Stem("despeja"), "despej" );
	deepEqual( Stem("despejados"), "despej" );
	deepEqual( Stem("despejando"), "despej" );
	deepEqual( Stem("despejar"), "despej" );
	deepEqual( Stem("despejo"), "despej" );
	deepEqual( Stem("despejou"), "despej" );
	deepEqual( Stem("despencando"), "despenc" );
	deepEqual( Stem("despencaram"), "despenc" );
	deepEqual( Stem("despencou"), "despenc" );
	deepEqual( Stem("despender"), "despend" );
	deepEqual( Stem("despensas"), "despens" );
	deepEqual( Stem("despercebida"), "desperceb" );
	deepEqual( Stem("despercebidas"), "desperceb" );
	deepEqual( Stem("despercebido"), "desperceb" );
	deepEqual( Stem("despercebidos"), "desperceb" );
	deepEqual( Stem("desperdiça"), "desperdic" );
	deepEqual( Stem("desperdiçando"), "desperdic" );
	deepEqual( Stem("desperdiçar"), "desperdic" );
	deepEqual( Stem("desperdício"), "desperdíci" );
	deepEqual( Stem("desperdiçou"), "desperdic" );
	deepEqual( Stem("desperta"), "despert" );
	deepEqual( Stem("despertado"), "despert" );
	deepEqual( Stem("despertando"), "despert" );
	deepEqual( Stem("despertar"), "despert" );
	deepEqual( Stem("despertaram"), "despert" );
	deepEqual( Stem("desperte"), "despert" );
	deepEqual( Stem("desperto"), "despert" );
	deepEqual( Stem("despertou"), "despert" );
	deepEqual( Stem("despesa"), "despes" );
	deepEqual( Stem("despesas"), "despes" );
	deepEqual( Stem("despindo"), "desp" );
	deepEqual( Stem("despistar"), "despist" );
	deepEqual( Stem("desplugados"), "desplug" );
	deepEqual( Stem("despojar"), "despoj" );
	deepEqual( Stem("despolitizada"), "despolitiz" );
	deepEqual( Stem("desponta"), "despont" );
	deepEqual( Stem("despontar"), "despont" );
	deepEqual( Stem("despontaram"), "despont" );
	deepEqual( Stem("despontava"), "despont" );
	deepEqual( Stem("despontou"), "despont" );
	deepEqual( Stem("desportos"), "desport" );
	deepEqual( Stem("déspotas"), "déspot" );
	deepEqual( Stem("desprendem"), "desprend" );
	deepEqual( Stem("despreparada"), "desprepar" );
	deepEqual( Stem("despreparado"), "desprepar" );
	deepEqual( Stem("despreparados"), "desprepar" );
	deepEqual( Stem("despressurização"), "despressuriz" );
	deepEqual( Stem("desprestigiado"), "desprestigi" );
	deepEqual( Stem("despretensiosamente"), "despretensi" );
	deepEqual( Stem("despretensioso"), "despretensi" );
	deepEqual( Stem("desprevenidos"), "despreven" );
	deepEqual( Stem("desprezar"), "desprez" );
	deepEqual( Stem("desprezível"), "desprez" );
	deepEqual( Stem("desprezo"), "desprez" );
	deepEqual( Stem("desprezou"), "desprez" );
	deepEqual( Stem("desproporcionais"), "desproporcion" );
	deepEqual( Stem("despropositada"), "desproposit" );
	deepEqual( Stem("desprotegida"), "desproteg" );
	deepEqual( Stem("desprotegidas"), "desproteg" );
	deepEqual( Stem("desprovido"), "desprov" );
	deepEqual( Stem("despudor"), "despudor" );
	deepEqual( Stem("desqualificada"), "desqualific" );
	deepEqual( Stem("desqualificado"), "desqualific" );
	deepEqual( Stem("desquitada"), "desquit" );
	deepEqual( Stem("desquitado"), "desquit" );
	deepEqual( Stem("desregulamentação"), "desregulament" );
	deepEqual( Stem("desrespeita"), "desrespeit" );
	deepEqual( Stem("desrespeitassem"), "desrespeit" );
	deepEqual( Stem("desrespeito"), "desrespeit" );
	deepEqual( Stem("dessa"), "dess" );
	deepEqual( Stem("dessas"), "dess" );
	deepEqual( Stem("desse"), "dess" );
	deepEqual( Stem("dessem"), "dess" );
	deepEqual( Stem("desserve"), "desserv" );
	deepEqual( Stem("desses"), "dess" );
	deepEqual( Stem("desta"), "dest" );
	deepEqual( Stem("destaca"), "destac" );
	deepEqual( Stem("destacada"), "destac" );
	deepEqual( Stem("destacado"), "destac" );
	deepEqual( Stem("destacam"), "destac" );
	deepEqual( Stem("destacando"), "destac" );
	deepEqual( Stem("destacar"), "destac" );
	deepEqual( Stem("destacaram"), "destac" );
	deepEqual( Stem("destacassem"), "destac" );
	deepEqual( Stem("destacava"), "destac" );
	deepEqual( Stem("destacavam"), "destac" );
	deepEqual( Stem("destacável"), "destac" );
	deepEqual( Stem("destacou"), "destac" );
	deepEqual( Stem("destaque"), "destaqu" );
	deepEqual( Stem("destaques"), "destaqu" );
	deepEqual( Stem("destas"), "dest" );
	deepEqual( Stem("deste"), "dest" );
	deepEqual( Stem("destelhar"), "destelh" );
	deepEqual( Stem("destemida"), "destem" );
	deepEqual( Stem("destemido"), "destem" );
	deepEqual( Stem("destes"), "dest" );
	deepEqual( Stem("destilar"), "destil" );
	deepEqual( Stem("destilarias"), "destil" );
	deepEqual( Stem("destina"), "destin" );
	deepEqual( Stem("destinada"), "destin" );
	deepEqual( Stem("destinadas"), "destin" );
	deepEqual( Stem("destinado"), "destin" );
	deepEqual( Stem("destinados"), "destin" );
	deepEqual( Stem("destinam"), "destin" );
	deepEqual( Stem("destinamos"), "destin" );
	deepEqual( Stem("destinará"), "destin" );
	deepEqual( Stem("destinava"), "destin" );
	deepEqual( Stem("destino"), "destin" );
	deepEqual( Stem("destinos"), "destin" );
	deepEqual( Stem("destinou"), "destin" );
	deepEqual( Stem("destituição"), "destituiçã" );
	deepEqual( Stem("destoa"), "desto" );
	deepEqual( Stem("destoam"), "desto" );
	deepEqual( Stem("destrambelhados"), "destrambelh" );
	deepEqual( Stem("destrincha"), "destrinch" );
	deepEqual( Stem("destroçados"), "destroc" );
	deepEqual( Stem("destroços"), "destroc" );
	deepEqual( Stem("destroçou"), "destroc" );
	deepEqual( Stem("destrói"), "destró" );
	deepEqual( Stem("destronou"), "destron" );
	deepEqual( Stem("destruí"), "destru" );
	deepEqual( Stem("destruição"), "destruiçã" );
	deepEqual( Stem("destruída"), "destruíd" );
	deepEqual( Stem("destruídas"), "destruíd" );
	deepEqual( Stem("destruído"), "destruíd" );
	deepEqual( Stem("destruidor"), "destruidor" );
	deepEqual( Stem("destruídos"), "destruíd" );
	deepEqual( Stem("destruímos"), "destruím" );
	deepEqual( Stem("destruindo"), "destru" );
	deepEqual( Stem("destruir"), "destru" );
	deepEqual( Stem("destruirá"), "destru" );
	deepEqual( Stem("destruísse"), "destruíss" );
	deepEqual( Stem("destruiu"), "destru" );
	deepEqual( Stem("destrutiva"), "destrut" );
	deepEqual( Stem("destrutivos"), "destrut" );
	deepEqual( Stem("desumano"), "desuman" );
	deepEqual( Stem("desuso"), "desus" );
	deepEqual( Stem("desvaloriza"), "desvaloriz" );
	deepEqual( Stem("desvalorização"), "desvaloriz" );
	deepEqual( Stem("desvalorizados"), "desvaloriz" );
	deepEqual( Stem("desvantagem"), "desvantag" );
	deepEqual( Stem("desvantagens"), "desvantagens" );
	deepEqual( Stem("desvantajosas"), "desvantaj" );
	deepEqual( Stem("desvarios"), "desvari" );
	deepEqual( Stem("desvencilhar"), "desvencilh" );
	deepEqual( Stem("desvenda"), "desvend" );
	deepEqual( Stem("desvendados"), "desvend" );
	deepEqual( Stem("desvendamos"), "desvend" );
	deepEqual( Stem("desvendar"), "desvend" );
	deepEqual( Stem("desviada"), "desvi" );
	deepEqual( Stem("desviados"), "desvi" );
	deepEqual( Stem("desviar"), "desvi" );
	deepEqual( Stem("desviei"), "desvi" );
	deepEqual( Stem("desviem"), "desvi" );
	deepEqual( Stem("desvinculados"), "desvincul" );
	deepEqual( Stem("desvio"), "desvi" );
	deepEqual( Stem("desvios"), "desvi" );
	deepEqual( Stem("desviou"), "desvi" );
	deepEqual( Stem("desvirtuar"), "desvirtu" );
	deepEqual( Stem("details"), "details" );
	deepEqual( Stem("detalha"), "detalh" );
	deepEqual( Stem("detalhada"), "detalh" );
	deepEqual( Stem("detalhadas"), "detalh" );
	deepEqual( Stem("detalhadíssima"), "detalhadíssim" );
	deepEqual( Stem("detalhar"), "detalh" );
	deepEqual( Stem("detalharmos"), "detalh" );
	deepEqual( Stem("detalhe"), "detalh" );
	deepEqual( Stem("detalhes"), "detalh" );
	deepEqual( Stem("detalhista"), "detalh" );
	deepEqual( Stem("detalhistas"), "detalh" );
	deepEqual( Stem("detecção"), "detecçã" );
	deepEqual( Stem("detecta"), "detect" );
	deepEqual( Stem("detectada"), "detect" );
	deepEqual( Stem("detectadas"), "detect" );
	deepEqual( Stem("detectado"), "detect" );
	deepEqual( Stem("detectados"), "detect" );
	deepEqual( Stem("detectam"), "detect" );
	deepEqual( Stem("detectar"), "detect" );
	deepEqual( Stem("detectaram"), "detect" );
	deepEqual( Stem("detectaria"), "detect" );
	deepEqual( Stem("detectável"), "detect" );
	deepEqual( Stem("detector"), "detector" );
	deepEqual( Stem("detectores"), "detector" );
	deepEqual( Stem("detectou"), "detect" );
	deepEqual( Stem("detém"), "detém" );
	deepEqual( Stem("detenção"), "detençã" );
	deepEqual( Stem("detenha"), "detenh" );
	deepEqual( Stem("detentas"), "detent" );
	deepEqual( Stem("detentor"), "detentor" );
	deepEqual( Stem("detentora"), "detentor" );
	deepEqual( Stem("deter"), "det" );
	deepEqual( Stem("deteriora"), "deterior" );
	deepEqual( Stem("deterioração"), "deterior" );
	deepEqual( Stem("determina"), "determin" );
	deepEqual( Stem("determinação"), "determin" );
	deepEqual( Stem("determinações"), "determin" );
	deepEqual( Stem("determinada"), "determin" );
	deepEqual( Stem("determinadas"), "determin" );
	deepEqual( Stem("determinado"), "determin" );
	deepEqual( Stem("determinados"), "determin" );
	deepEqual( Stem("determinam"), "determin" );
	deepEqual( Stem("determinando"), "determin" );
	deepEqual( Stem("determinante"), "determin" );
	deepEqual( Stem("determinantes"), "determin" );
	deepEqual( Stem("determinar"), "determin" );
	deepEqual( Stem("determinara"), "determin" );
	deepEqual( Stem("determinasse"), "determin" );
	deepEqual( Stem("determinava"), "determin" );
	deepEqual( Stem("determinou"), "determin" );
	deepEqual( Stem("detesta"), "detest" );
	deepEqual( Stem("detestam"), "detest" );
	deepEqual( Stem("detestem"), "detest" );
	deepEqual( Stem("detesto"), "detest" );
	deepEqual( Stem("detetive"), "detetiv" );
	deepEqual( Stem("detetives"), "detetiv" );
	deepEqual( Stem("detida"), "det" );
	deepEqual( Stem("detido"), "det" );
	deepEqual( Stem("detinha"), "detinh" );
	deepEqual( Stem("detinham"), "detinh" );
	deepEqual( Stem("detona"), "deton" );
	deepEqual( Stem("detonação"), "deton" );
	deepEqual( Stem("detonada"), "deton" );
	deepEqual( Stem("detonadas"), "deton" );
	deepEqual( Stem("detonadores"), "deton" );
	deepEqual( Stem("detonam"), "deton" );
	deepEqual( Stem("detonar"), "deton" );
	deepEqual( Stem("detour"), "detour" );
	deepEqual( Stem("detran"), "detran" );
	deepEqual( Stem("detrans"), "detrans" );
	deepEqual( Stem("detratores"), "detrator" );
	deepEqual( Stem("detrimento"), "detriment" );
	deepEqual( Stem("detroit"), "detroit" );
	deepEqual( Stem("deturpação"), "deturp" );
	deepEqual( Stem("deturpadas"), "deturp" );
	deepEqual( Stem("deu"), "deu" );
	deepEqual( Stem("deus"), "deus" );
	deepEqual( Stem("deusa"), "deus" );
	deepEqual( Stem("deuses"), "deus" );
	deepEqual( Stem("deva"), "dev" );
	deepEqual( Stem("devagar"), "devag" );
	deepEqual( Stem("devagarinho"), "devagarinh" );
	deepEqual( Stem("devassa"), "devass" );
	deepEqual( Stem("devassada"), "devass" );
	deepEqual( Stem("devastação"), "devast" );
	deepEqual( Stem("devastado"), "devast" );
	deepEqual( Stem("devastador"), "devast" );
	deepEqual( Stem("devastadora"), "devast" );
	deepEqual( Stem("devastadores"), "devast" );
	deepEqual( Stem("devastam"), "devast" );
	deepEqual( Stem("devastando"), "devast" );
	deepEqual( Stem("devaste"), "dev" );
	deepEqual( Stem("devastou"), "devast" );
	deepEqual( Stem("deve"), "dev" );
	deepEqual( Stem("devedor"), "devedor" );
	deepEqual( Stem("devem"), "dev" );
	deepEqual( Stem("devemos"), "dev" );
	deepEqual( Stem("devendo"), "dev" );
	deepEqual( Stem("dever"), "dev" );
	deepEqual( Stem("deverá"), "dev" );
	deepEqual( Stem("deverão"), "dev" );
	deepEqual( Stem("deveres"), "dev" );
	deepEqual( Stem("deveria"), "dev" );
	deepEqual( Stem("deveriam"), "dev" );
	deepEqual( Stem("deveríamos"), "dev" );
	deepEqual( Stem("devesse"), "dev" );
	deepEqual( Stem("devêssemos"), "dev" );
	deepEqual( Stem("devia"), "dev" );
	deepEqual( Stem("deviam"), "dev" );
	deepEqual( Stem("devida"), "dev" );
	deepEqual( Stem("devidamente"), "devid" );
	deepEqual( Stem("devido"), "dev" );
	deepEqual( Stem("devidos"), "dev" );
	deepEqual( Stem("devo"), "dev" );
	deepEqual( Stem("devoção"), "devoçã" );
	deepEqual( Stem("devolução"), "devoluçã" );
	deepEqual( Stem("devoluta"), "devolut" );
	deepEqual( Stem("devolve"), "devolv" );
	deepEqual( Stem("devolvem"), "devolv" );
	deepEqual( Stem("devolvendo"), "devolv" );
	deepEqual( Stem("devolver"), "devolv" );
	deepEqual( Stem("devolveram"), "devolv" );
	deepEqual( Stem("devolveu"), "devolv" );
	deepEqual( Stem("devolvido"), "devolv" );
	deepEqual( Stem("devolvidos"), "devolv" );
	deepEqual( Stem("devora"), "devor" );
	deepEqual( Stem("devorado"), "devor" );
	deepEqual( Stem("devoravam"), "devor" );
	deepEqual( Stem("devore"), "devor" );
	deepEqual( Stem("dévoré"), "dévor" );
	deepEqual( Stem("devotados"), "devot" );
	deepEqual( Stem("devotos"), "devot" );
	deepEqual( Stem("dewulf"), "dewulf" );
	deepEqual( Stem("dexfenfluramina"), "dexfenfluramin" );
	deepEqual( Stem("dez"), "dez" );
	deepEqual( Stem("dezembro"), "dezembr" );
	deepEqual( Stem("dezena"), "dezen" );
	deepEqual( Stem("dezenas"), "dezen" );
	deepEqual( Stem("dezenove"), "dezenov" );
	deepEqual( Stem("dezesseis"), "dezess" );
	deepEqual( Stem("dezessete"), "dezesset" );
	deepEqual( Stem("dezoito"), "dezoit" );
	deepEqual( Stem("df"), "df" );
	deepEqual( Stem("di"), "di" );
	deepEqual( Stem("dia"), "dia" );
	deepEqual( Stem("diabetes"), "diabet" );
	deepEqual( Stem("diabética"), "diabét" );
	deepEqual( Stem("diabético"), "diabét" );
	deepEqual( Stem("diablo"), "diabl" );
	deepEqual( Stem("diabo"), "diab" );
	deepEqual( Stem("diabólica"), "diaból" );
	deepEqual( Stem("diabólico"), "diaból" );
	deepEqual( Stem("diabos"), "diab" );
	deepEqual( Stem("diácono"), "diácon" );
	deepEqual( Stem("diagnosis"), "diagnos" );
	deepEqual( Stem("diagnostica"), "diagnost" );
	deepEqual( Stem("diagnosticá"), "diagnostic" );
	deepEqual( Stem("diagnosticado"), "diagnostic" );
	deepEqual( Stem("diagnosticam"), "diagnostic" );
	deepEqual( Stem("diagnosticando"), "diagnostic" );
	deepEqual( Stem("diagnosticar"), "diagnostic" );
	deepEqual( Stem("diagnóstico"), "diagnóst" );
	deepEqual( Stem("diagnósticos"), "diagnóst" );
	deepEqual( Stem("diagnosticou"), "diagnostic" );
	deepEqual( Stem("diagonal"), "diagonal" );
	deepEqual( Stem("diagramação"), "diagram" );
	deepEqual( Stem("diagramadora"), "diagram" );
	deepEqual( Stem("dialdata"), "dialdat" );
	deepEqual( Stem("dialética"), "dialét" );
	deepEqual( Stem("dialetos"), "dialet" );
	deepEqual( Stem("dialoga"), "dialog" );
	deepEqual( Stem("diálogo"), "diálog" );
	deepEqual( Stem("diálogos"), "diálog" );
	deepEqual( Stem("diamante"), "diamant" );
	deepEqual( Stem("diâmetro"), "diâmetr" );
	deepEqual( Stem("diana"), "dian" );
	deepEqual( Stem("diante"), "diant" );
	deepEqual( Stem("dianteira"), "dianteir" );
	deepEqual( Stem("diária"), "diár" );
	deepEqual( Stem("diariamente"), "diari" );
	deepEqual( Stem("diárias"), "diár" );
	deepEqual( Stem("diário"), "diári" );
	deepEqual( Stem("diários"), "diári" );
	deepEqual( Stem("diarista"), "diarist" );
	deepEqual( Stem("diarréia"), "diarr" );
	deepEqual( Stem("diarréias"), "diarr" );
	deepEqual( Stem("dias"), "dias" );
	deepEqual( Stem("diasa"), "dias" );
	deepEqual( Stem("diaz"), "diaz" );
	deepEqual( Stem("dica"), "dic" );
	deepEqual( Stem("dicaprio"), "dicapri" );
	deepEqual( Stem("dicas"), "dic" );
	deepEqual( Stem("dicção"), "dicçã" );
	deepEqual( Stem("didática"), "didát" );
	deepEqual( Stem("didáticas"), "didát" );
	deepEqual( Stem("didático"), "didát" );
	deepEqual( Stem("didáticos"), "didát" );
	deepEqual( Stem("didi"), "did" );
	deepEqual( Stem("dieckman"), "dieckman" );
	deepEqual( Stem("dieese"), "diees" );
	deepEqual( Stem("diego"), "dieg" );
	deepEqual( Stem("diegues"), "diegu" );
	deepEqual( Stem("diempax"), "diempax" );
	deepEqual( Stem("diesel"), "diesel" );
	deepEqual( Stem("diet"), "diet" );
	deepEqual( Stem("dieta"), "diet" );
	deepEqual( Stem("dietas"), "diet" );
	deepEqual( Stem("dietilpropiona"), "dietilpropion" );
	deepEqual( Stem("difamação"), "difam" );
	deepEqual( Stem("difere"), "difer" );
	deepEqual( Stem("diferem"), "dif" );
	deepEqual( Stem("diferença"), "diferenc" );
	deepEqual( Stem("diferenças"), "diferenc" );
	deepEqual( Stem("diferencia"), "diferenc" );
	deepEqual( Stem("diferenciação"), "diferenc" );
	deepEqual( Stem("diferenciada"), "diferenc" );
	deepEqual( Stem("diferenciadas"), "diferenc" );
	deepEqual( Stem("diferenciado"), "diferenc" );
	deepEqual( Stem("diferenciais"), "diferenc" );
	deepEqual( Stem("diferencial"), "diferencial" );
	deepEqual( Stem("diferenciam"), "diferenc" );
	deepEqual( Stem("diferenciar"), "diferenc" );
	deepEqual( Stem("diferente"), "diferent" );
	deepEqual( Stem("diferentemente"), "diferent" );
	deepEqual( Stem("diferentes"), "diferent" );
	deepEqual( Stem("difíceis"), "difíc" );
	deepEqual( Stem("difícieis"), "difíc" );
	deepEqual( Stem("difícil"), "difícil" );
	deepEqual( Stem("dificílimas"), "dificílim" );
	deepEqual( Stem("dificílimo"), "dificílim" );
	deepEqual( Stem("dificilmente"), "dificil" );
	deepEqual( Stem("dificulade"), "dificulad" );
	deepEqual( Stem("dificuldade"), "dificuldad" );
	deepEqual( Stem("dificuldades"), "dificuldad" );
	deepEqual( Stem("dificulta"), "dificult" );
	deepEqual( Stem("dificultam"), "dificult" );
	deepEqual( Stem("dificultar"), "dificult" );
	deepEqual( Stem("dificultará"), "dificult" );
	deepEqual( Stem("dificultava"), "dificult" );
	deepEqual( Stem("difunde"), "difund" );
	deepEqual( Stem("difundem"), "difund" );
	deepEqual( Stem("difundida"), "difund" );
	deepEqual( Stem("difundido"), "difund" );
	deepEqual( Stem("difusão"), "difusã" );
	deepEqual( Stem("diga"), "dig" );
	deepEqual( Stem("digamos"), "dig" );
	deepEqual( Stem("digerida"), "diger" );
	deepEqual( Stem("digerindo"), "diger" );
	deepEqual( Stem("digestão"), "digestã" );
	deepEqual( Stem("digestivo"), "digest" );
	deepEqual( Stem("digimarc"), "digimarc" );
	deepEqual( Stem("digitais"), "digit" );
	deepEqual( Stem("digital"), "digital" );
	deepEqual( Stem("digitalizada"), "digitaliz" );
	deepEqual( Stem("digitalizar"), "digitaliz" );
	deepEqual( Stem("digite"), "digit" );
	deepEqual( Stem("dígitos"), "dígit" );
	deepEqual( Stem("digna"), "dign" );
	deepEqual( Stem("dignamente"), "dign" );
	deepEqual( Stem("dignas"), "dign" );
	deepEqual( Stem("dignidade"), "dignidad" );
	deepEqual( Stem("digno"), "dign" );
	deepEqual( Stem("dignos"), "dign" );
	deepEqual( Stem("digo"), "dig" );
	deepEqual( Stem("diguem"), "digu" );
	deepEqual( Stem("dilacerado"), "dilacer" );
	deepEqual( Stem("dilatador"), "dilat" );
	deepEqual( Stem("dilatadores"), "dilat" );
	deepEqual( Stem("dilatar"), "dilat" );
	deepEqual( Stem("dilbert"), "dilbert" );
	deepEqual( Stem("dilema"), "dilem" );
	deepEqual( Stem("diligentemente"), "diligent" );
	deepEqual( Stem("dillon"), "dillon" );
	deepEqual( Stem("dilly"), "dilly" );
	deepEqual( Stem("dilton"), "dilton" );
	deepEqual( Stem("diluídas"), "diluíd" );
	deepEqual( Stem("diluir"), "dilu" );
	deepEqual( Stem("dilza"), "dilz" );
	deepEqual( Stem("dimensão"), "dimensã" );
	deepEqual( Stem("dimensionar"), "dimension" );
	deepEqual( Stem("dimensões"), "dimensõ" );
	deepEqual( Stem("dimenstein"), "dimenstein" );
	deepEqual( Stem("dimes"), "dim" );
	deepEqual( Stem("diminuem"), "diminu" );
	deepEqual( Stem("diminui"), "diminu" );
	deepEqual( Stem("diminuição"), "diminuiçã" );
	deepEqual( Stem("diminuído"), "diminuíd" );
	deepEqual( Stem("diminuindo"), "diminu" );
	deepEqual( Stem("diminuir"), "diminu" );
	deepEqual( Stem("diminuíram"), "diminuír" );
	deepEqual( Stem("diminuísse"), "diminuíss" );
	deepEqual( Stem("diminuiu"), "diminu" );
	deepEqual( Stem("dinamarquês"), "dinamarquês" );
	deepEqual( Stem("dinamarquesa"), "dinamarques" );
	deepEqual( Stem("dinâmica"), "dinâm" );
	deepEqual( Stem("dinâmicas"), "dinâm" );
	deepEqual( Stem("dinâmico"), "dinâm" );
	deepEqual( Stem("dinamismo"), "dinam" );
	deepEqual( Stem("dínamo"), "dínam" );
	deepEqual( Stem("dinastia"), "dinast" );
	deepEqual( Stem("dinda"), "dind" );
	deepEqual( Stem("dinheirama"), "dinheiram" );
	deepEqual( Stem("dinheirão"), "dinh" );
	deepEqual( Stem("dinheirinho"), "dinheirinh" );
	deepEqual( Stem("dinheiro"), "dinheir" );
	deepEqual( Stem("diniz"), "diniz" );
	deepEqual( Stem("dino"), "din" );
	deepEqual( Stem("dinorah"), "dinorah" );
	deepEqual( Stem("dinos"), "din" );
	deepEqual( Stem("dinossauro"), "dinossaur" );
	deepEqual( Stem("dinossauros"), "dinossaur" );
	deepEqual( Stem("diocese"), "dioces" );
	deepEqual( Stem("dioceses"), "dioces" );
	deepEqual( Stem("diogo"), "diog" );
	deepEqual( Stem("dionisíacas"), "dionisíac" );
	deepEqual( Stem("dionísio"), "dionísi" );
	deepEqual( Stem("dionysius"), "dionysius" );
	deepEqual( Stem("dior"), "dior" );
	deepEqual( Stem("dios"), "dios" );
	deepEqual( Stem("diploma"), "diplom" );
	deepEqual( Stem("diplomacia"), "diplomac" );
	deepEqual( Stem("diplomas"), "diplom" );
	deepEqual( Stem("diplomata"), "diplomat" );
	deepEqual( Stem("diplomatas"), "diplomat" );
	deepEqual( Stem("diplomática"), "diplomát" );
	deepEqual( Stem("diplomáticas"), "diplomát" );
	deepEqual( Stem("dirá"), "dir" );
	deepEqual( Stem("dirão"), "dirã" );
	deepEqual( Stem("dirceu"), "dirc" );
	deepEqual( Stem("direção"), "direçã" );
	deepEqual( Stem("direciona"), "direcion" );
	deepEqual( Stem("direcionado"), "direcion" );
	deepEqual( Stem("direcional"), "direcional" );
	deepEqual( Stem("direciono"), "direcion" );
	deepEqual( Stem("direções"), "direçõ" );
	deepEqual( Stem("direita"), "direit" );
	deepEqual( Stem("direitinho"), "direitinh" );
	deepEqual( Stem("direitista"), "direit" );
	deepEqual( Stem("direito"), "direit" );
	deepEqual( Stem("direitos"), "direit" );
	deepEqual( Stem("direta"), "diret" );
	deepEqual( Stem("diretamente"), "diret" );
	deepEqual( Stem("diretas"), "diret" );
	deepEqual( Stem("direto"), "diret" );
	deepEqual( Stem("diretor"), "diretor" );
	deepEqual( Stem("diretora"), "diretor" );
	deepEqual( Stem("diretoras"), "diretor" );
	deepEqual( Stem("diretores"), "diretor" );
	deepEqual( Stem("diretoria"), "diretor" );
	deepEqual( Stem("diretorias"), "diretor" );
	deepEqual( Stem("diretórios"), "diretóri" );
	deepEqual( Stem("diretos"), "diret" );
	deepEqual( Stem("diretrizes"), "diretriz" );
	deepEqual( Stem("diria"), "dir" );
	deepEqual( Stem("dirige"), "dirig" );
	deepEqual( Stem("dirigem"), "dirig" );
	deepEqual( Stem("dirigente"), "dirigent" );
	deepEqual( Stem("dirigentes"), "dirigent" );
	deepEqual( Stem("dirigi"), "dirig" );
	deepEqual( Stem("dirigia"), "dirig" );
	deepEqual( Stem("dirigiam"), "dirig" );
	deepEqual( Stem("dirigida"), "dirig" );
	deepEqual( Stem("dirigidas"), "dirig" );
	deepEqual( Stem("dirigido"), "dirig" );
	deepEqual( Stem("dirigidos"), "dirig" );
	deepEqual( Stem("dirigindo"), "dirig" );
	deepEqual( Stem("dirigir"), "dirig" );
	deepEqual( Stem("dirigiu"), "dirig" );
	deepEqual( Stem("dirijam"), "dirij" );
	deepEqual( Stem("dirijo"), "dirij" );
	deepEqual( Stem("dirimir"), "dirim" );
	deepEqual( Stem("dirty"), "dirty" );
	deepEqual( Stem("discagem"), "discag" );
	deepEqual( Stem("discar"), "disc" );
	deepEqual( Stem("discernimento"), "discern" );
	deepEqual( Stem("disciplina"), "disciplin" );
	deepEqual( Stem("disciplinada"), "disciplin" );
	deepEqual( Stem("disciplinado"), "disciplin" );
	deepEqual( Stem("disciplinador"), "disciplin" );
	deepEqual( Stem("disciplinar"), "disciplin" );
	deepEqual( Stem("disciplinou"), "disciplin" );
	deepEqual( Stem("discípulo"), "discípul" );
	deepEqual( Stem("discípulos"), "discípul" );
	deepEqual( Stem("disco"), "disc" );
	deepEqual( Stem("discografia"), "discograf" );
	deepEqual( Stem("discordam"), "discord" );
	deepEqual( Stem("discordâncias"), "discordânc" );
	deepEqual( Stem("discordar"), "discord" );
	deepEqual( Stem("discórdia"), "discórd" );
	deepEqual( Stem("discordo"), "discord" );
	deepEqual( Stem("discos"), "disc" );
	deepEqual( Stem("discoteca"), "discotec" );
	deepEqual( Stem("discotecas"), "discotec" );
	deepEqual( Stem("discovery"), "discovery" );
	deepEqual( Stem("discrepância"), "discrep" );
	deepEqual( Stem("discreta"), "discret" );
	deepEqual( Stem("discretamente"), "discret" );
	deepEqual( Stem("discretas"), "discret" );
	deepEqual( Stem("discreto"), "discret" );
	deepEqual( Stem("discretos"), "discret" );
	deepEqual( Stem("discrição"), "discriçã" );
	deepEqual( Stem("discrimina"), "discrimin" );
	deepEqual( Stem("discriminação"), "discrimin" );
	deepEqual( Stem("discriminações"), "discrimin" );
	deepEqual( Stem("discriminada"), "discrimin" );
	deepEqual( Stem("discriminam"), "discrimin" );
	deepEqual( Stem("discriminar"), "discrimin" );
	deepEqual( Stem("discrografia"), "discrograf" );
	deepEqual( Stem("discursão"), "discursã" );
	deepEqual( Stem("discursar"), "discurs" );
	deepEqual( Stem("discurso"), "discurs" );
	deepEqual( Stem("discursos"), "discurs" );
	deepEqual( Stem("discussão"), "discussã" );
	deepEqual( Stem("discussões"), "discussõ" );
	deepEqual( Stem("discuta"), "discut" );
	deepEqual( Stem("discute"), "discut" );
	deepEqual( Stem("discutem"), "discut" );
	deepEqual( Stem("discuti"), "discut" );
	deepEqual( Stem("discutida"), "discut" );
	deepEqual( Stem("discutido"), "discut" );
	deepEqual( Stem("discutimos"), "discut" );
	deepEqual( Stem("discutindo"), "discut" );
	deepEqual( Stem("discutir"), "discut" );
	deepEqual( Stem("discutiram"), "discut" );
	deepEqual( Stem("discutirmos"), "discut" );
	deepEqual( Stem("discutiu"), "discut" );
	deepEqual( Stem("discutível"), "discut" );
	deepEqual( Stem("discuto"), "discut" );
	deepEqual( Stem("disfarça"), "disfarc" );
	deepEqual( Stem("disfarçada"), "disfarc" );
	deepEqual( Stem("disfarçado"), "disfarc" );
	deepEqual( Stem("disfarçados"), "disfarc" );
	deepEqual( Stem("disfarçam"), "disfarc" );
	deepEqual( Stem("disfarçando"), "disfarc" );
	deepEqual( Stem("disfarçar"), "disfarc" );
	deepEqual( Stem("disfarce"), "disfarc" );
	deepEqual( Stem("disfarces"), "disfarc" );
	deepEqual( Stem("disfarçou"), "disfarc" );
	deepEqual( Stem("disfunções"), "disfunçõ" );
	deepEqual( Stem("disktem"), "diskt" );
	deepEqual( Stem("disney"), "disney" );
	deepEqual( Stem("disneylândia"), "disneylând" );
	deepEqual( Stem("disneyworld"), "disneyworld" );
	deepEqual( Stem("dispara"), "disp" );
	deepEqual( Stem("disparada"), "dispar" );
	deepEqual( Stem("disparado"), "dispar" );
	deepEqual( Stem("disparados"), "dispar" );
	deepEqual( Stem("disparam"), "disp" );
	deepEqual( Stem("disparando"), "dispar" );
	deepEqual( Stem("dispararam"), "dispar" );
	deepEqual( Stem("disparava"), "dispar" );
	deepEqual( Stem("díspares"), "dísp" );
	deepEqual( Stem("disparidade"), "dispar" );
	deepEqual( Stem("disparidades"), "dispar" );
	deepEqual( Stem("disparo"), "dispar" );
	deepEqual( Stem("disparos"), "dispar" );
	deepEqual( Stem("disparou"), "dispar" );
	deepEqual( Stem("dispendioso"), "dispendi" );
	deepEqual( Stem("dispensa"), "dispens" );
	deepEqual( Stem("dispensada"), "dispens" );
	deepEqual( Stem("dispensado"), "dispens" );
	deepEqual( Stem("dispensados"), "dispens" );
	deepEqual( Stem("dispensam"), "dispens" );
	deepEqual( Stem("dispensar"), "dispens" );
	deepEqual( Stem("dispensaram"), "dispens" );
	deepEqual( Stem("dispensáveis"), "dispens" );
	deepEqual( Stem("dispensável"), "dispens" );
	deepEqual( Stem("dispenso"), "dispens" );
	deepEqual( Stem("dispensou"), "dispens" );
	deepEqual( Stem("displicentemente"), "displicent" );
	deepEqual( Stem("dispõe"), "dispõ" );
	deepEqual( Stem("dispõem"), "dispõ" );
	deepEqual( Stem("dispomos"), "dispom" );
	deepEqual( Stem("dispondo"), "dispond" );
	deepEqual( Stem("disponibilidade"), "disponibil" );
	deepEqual( Stem("disponibilizado"), "disponibiliz" );
	deepEqual( Stem("disponíveis"), "disponív" );
	deepEqual( Stem("disponível"), "dispon" );
	deepEqual( Stem("dispor"), "dispor" );
	deepEqual( Stem("dispôs"), "dispôs" );
	deepEqual( Stem("disposição"), "disposiçã" );
	deepEqual( Stem("dispositivos"), "disposit" );
	deepEqual( Stem("disposta"), "dispost" );
	deepEqual( Stem("dispostas"), "dispost" );
	deepEqual( Stem("disposto"), "dispost" );
	deepEqual( Stem("dispostos"), "dispost" );
	deepEqual( Stem("dispunha"), "dispunh" );
	deepEqual( Stem("dispunham"), "dispunh" );
	deepEqual( Stem("dispuseram"), "dispus" );
	deepEqual( Stem("disputa"), "disput" );
	deepEqual( Stem("disputada"), "disput" );
	deepEqual( Stem("disputado"), "disput" );
	deepEqual( Stem("disputados"), "disput" );
	deepEqual( Stem("disputam"), "disput" );
	deepEqual( Stem("disputar"), "disput" );
	deepEqual( Stem("disputará"), "disput" );
	deepEqual( Stem("disputaram"), "disput" );
	deepEqual( Stem("disputas"), "disput" );
	deepEqual( Stem("disputou"), "disput" );
	deepEqual( Stem("disquete"), "disquet" );
	deepEqual( Stem("disse"), "diss" );
	deepEqual( Stem("dissecação"), "dissec" );
	deepEqual( Stem("dissecando"), "dissec" );
	deepEqual( Stem("dissecar"), "dissec" );
	deepEqual( Stem("disseminado"), "dissemin" );
	deepEqual( Stem("disseminados"), "dissemin" );
	deepEqual( Stem("disser"), "diss" );
	deepEqual( Stem("dissera"), "diss" );
	deepEqual( Stem("disseram"), "diss" );
	deepEqual( Stem("disserem"), "diss" );
	deepEqual( Stem("dissesse"), "diss" );
	deepEqual( Stem("dissidência"), "dissident" );
	deepEqual( Stem("dissidências"), "dissident" );
	deepEqual( Stem("dissidentes"), "dissident" );
	deepEqual( Stem("dissimulou"), "dissimul" );
	deepEqual( Stem("disso"), "diss" );
	deepEqual( Stem("dissociada"), "dissoc" );
	deepEqual( Stem("dissolver"), "dissolv" );
	deepEqual( Stem("dissolveu"), "dissolv" );
	deepEqual( Stem("dissonância"), "disson" );
	deepEqual( Stem("dissuadido"), "dissuad" );
	deepEqual( Stem("distância"), "distânc" );
	deepEqual( Stem("distanciado"), "distanc" );
	deepEqual( Stem("distanciamento"), "distanc" );
	deepEqual( Stem("distâncias"), "distânc" );
	deepEqual( Stem("distante"), "distant" );
	deepEqual( Stem("distantes"), "distant" );
	deepEqual( Stem("distensão"), "distensã" );
	deepEqual( Stem("distinção"), "distinçã" );
	deepEqual( Stem("distinguido"), "distingu" );
	deepEqual( Stem("distinguir"), "distingu" );
	deepEqual( Stem("distingüir"), "distingü" );
	deepEqual( Stem("distintamente"), "distint" );
	deepEqual( Stem("distintas"), "distint" );
	deepEqual( Stem("distintos"), "distint" );
	deepEqual( Stem("disto"), "dist" );
	deepEqual( Stem("distorção"), "distorçã" );
	deepEqual( Stem("distorce"), "distorc" );
	deepEqual( Stem("distorcem"), "distorc" );
	deepEqual( Stem("distorcendo"), "distorc" );
	deepEqual( Stem("distorcida"), "distorc" );
	deepEqual( Stem("distorcidas"), "distorc" );
	deepEqual( Stem("distorcido"), "distorc" );
	deepEqual( Stem("distorções"), "distorçõ" );
	deepEqual( Stem("distração"), "distraçã" );
	deepEqual( Stem("distribuem"), "distribu" );
	deepEqual( Stem("distribui"), "distribu" );
	deepEqual( Stem("distribuía"), "distribuí" );
	deepEqual( Stem("distribuíam"), "distribuí" );
	deepEqual( Stem("distribuição"), "distribuiçã" );
	deepEqual( Stem("distribuída"), "distribuíd" );
	deepEqual( Stem("distribuídas"), "distribuíd" );
	deepEqual( Stem("distribuidora"), "distribuidor" );
	deepEqual( Stem("distribuidoras"), "distribuidor" );
	deepEqual( Stem("distribuídos"), "distribuíd" );
	deepEqual( Stem("distribuindo"), "distribu" );
	deepEqual( Stem("distribuir"), "distribu" );
	deepEqual( Stem("distribuiu"), "distribu" );
	deepEqual( Stem("distrito"), "distrit" );
	deepEqual( Stem("distúrbios"), "distúrbi" );
	deepEqual( Stem("dita"), "dit" );
	deepEqual( Stem("ditada"), "dit" );
	deepEqual( Stem("ditado"), "dit" );
	deepEqual( Stem("ditador"), "ditador" );
	deepEqual( Stem("ditadores"), "ditador" );
	deepEqual( Stem("ditadura"), "ditadur" );
	deepEqual( Stem("ditaduras"), "ditadur" );
	deepEqual( Stem("ditas"), "dit" );
	deepEqual( Stem("ditatorial"), "ditatorial" );
	deepEqual( Stem("ditatorialmente"), "ditatorial" );
	deepEqual( Stem("ditava"), "dit" );
	deepEqual( Stem("dito"), "dit" );
	deepEqual( Stem("diuturna"), "diuturn" );
	deepEqual( Stem("diva"), "div" );
	deepEqual( Stem("divã"), "divã" );
	deepEqual( Stem("divagando"), "divag" );
	deepEqual( Stem("divaldo"), "divald" );
	deepEqual( Stem("divas"), "div" );
	deepEqual( Stem("diverge"), "diverg" );
	deepEqual( Stem("divergem"), "diverg" );
	deepEqual( Stem("divergências"), "divergent" );
	deepEqual( Stem("diversa"), "divers" );
	deepEqual( Stem("diversão"), "diversã" );
	deepEqual( Stem("diversas"), "divers" );
	deepEqual( Stem("diversidade"), "divers" );
	deepEqual( Stem("diversificação"), "diversific" );
	deepEqual( Stem("diversificada"), "diversific" );
	deepEqual( Stem("diversificado"), "diversific" );
	deepEqual( Stem("diversificando"), "diversific" );
	deepEqual( Stem("diversificar"), "diversific" );
	deepEqual( Stem("diversificou"), "diversific" );
	deepEqual( Stem("diversifiquem"), "diversifiqu" );
	deepEqual( Stem("diversionista"), "diversion" );
	deepEqual( Stem("diversões"), "diversõ" );
	deepEqual( Stem("diversos"), "divers" );
	deepEqual( Stem("diverte"), "divert" );
	deepEqual( Stem("divertem"), "divert" );
	deepEqual( Stem("divertia"), "divert" );
	deepEqual( Stem("divertida"), "divert" );
	deepEqual( Stem("divertidas"), "divert" );
	deepEqual( Stem("divertidíssima"), "divertidíssim" );
	deepEqual( Stem("divertido"), "divert" );
	deepEqual( Stem("divertidos"), "divert" );
	deepEqual( Stem("divertimento"), "divert" );
	deepEqual( Stem("divertindo"), "divert" );
	deepEqual( Stem("divertir"), "divert" );
	deepEqual( Stem("dívida"), "dív" );
	deepEqual( Stem("dívidas"), "dív" );
	deepEqual( Stem("divide"), "divid" );
	deepEqual( Stem("dividem"), "divid" );
	deepEqual( Stem("dividendos"), "dividend" );
	deepEqual( Stem("dividi"), "divid" );
	deepEqual( Stem("dividia"), "divid" );
	deepEqual( Stem("dividida"), "divid" );
	deepEqual( Stem("divididas"), "divid" );
	deepEqual( Stem("dividido"), "divid" );
	deepEqual( Stem("divididos"), "divid" );
	deepEqual( Stem("dividimos"), "divid" );
	deepEqual( Stem("dividindo"), "divid" );
	deepEqual( Stem("dividir"), "divid" );
	deepEqual( Stem("dividiram"), "divid" );
	deepEqual( Stem("divido"), "div" );
	deepEqual( Stem("divina"), "divin" );
	deepEqual( Stem("divindade"), "divindad" );
	deepEqual( Stem("diving"), "diving" );
	deepEqual( Stem("divino"), "divin" );
	deepEqual( Stem("divinolândia"), "divinolând" );
	deepEqual( Stem("divirjo"), "divirj" );
	deepEqual( Stem("divisa"), "divis" );
	deepEqual( Stem("divisão"), "divisã" );
	deepEqual( Stem("divisas"), "divis" );
	deepEqual( Stem("divisões"), "divisõ" );
	deepEqual( Stem("divisor"), "divisor" );
	deepEqual( Stem("divorciada"), "divorc" );
	deepEqual( Stem("divorciado"), "divorc" );
	deepEqual( Stem("divorciando"), "divorc" );
	deepEqual( Stem("divorciaram"), "divorc" );
	deepEqual( Stem("divórcio"), "divórci" );
	deepEqual( Stem("divórcios"), "divórci" );
	deepEqual( Stem("divorciou"), "divorc" );
	deepEqual( Stem("divulga"), "divulg" );
	deepEqual( Stem("divulgação"), "divulg" );
	deepEqual( Stem("divulgada"), "divulg" );
	deepEqual( Stem("divulgadas"), "divulg" );
	deepEqual( Stem("divulgado"), "divulg" );
	deepEqual( Stem("divulgador"), "divulg" );
	deepEqual( Stem("divulgadores"), "divulg" );
	deepEqual( Stem("divulgados"), "divulg" );
	deepEqual( Stem("divulgam"), "divulg" );
	deepEqual( Stem("divulgar"), "divulg" );
	deepEqual( Stem("divulgaram"), "divulg" );
	deepEqual( Stem("divulgarem"), "divulg" );
	deepEqual( Stem("divulgou"), "divulg" );
	deepEqual( Stem("diz"), "diz" );
	deepEqual( Stem("dizem"), "diz" );
	deepEqual( Stem("dizendo"), "diz" );
	deepEqual( Stem("dizer"), "diz" );
	deepEqual( Stem("dizerem"), "diz" );
	deepEqual( Stem("dizia"), "diz" );
	deepEqual( Stem("diziam"), "diz" );
	deepEqual( Stem("dizimadas"), "dizim" );
	deepEqual( Stem("dizimado"), "dizim" );
	deepEqual( Stem("dizimaram"), "dizim" );
	deepEqual( Stem("dízimo"), "dízim" );
	deepEqual( Stem("dizzy"), "dizzy" );
	deepEqual( Stem("dj"), "dj" );
	deepEqual( Stem("djair"), "dja" );
	deepEqual( Stem("djanira"), "djan" );
	deepEqual( Stem("djavan"), "djavan" );
	deepEqual( Stem("dkw"), "dkw" );
	deepEqual( Stem("dl"), "dl" );
	deepEqual( Stem("dm"), "dm" );
	deepEqual( Stem("dna"), "dna" );
	deepEqual( Stem("do"), "do" );
	deepEqual( Stem("dó"), "dó" );
	deepEqual( Stem("doa"), "doa" );
	deepEqual( Stem("doação"), "doaçã" );
	deepEqual( Stem("doações"), "doaçõ" );
	deepEqual( Stem("doada"), "doad" );
	deepEqual( Stem("doado"), "doad" );
	deepEqual( Stem("doador"), "doador" );
	deepEqual( Stem("doadores"), "doador" );
	deepEqual( Stem("doados"), "doad" );
	deepEqual( Stem("doam"), "doam" );
	deepEqual( Stem("doando"), "doand" );
	deepEqual( Stem("doar"), "doar" );
	deepEqual( Stem("doaram"), "doar" );
	deepEqual( Stem("dobra"), "dobr" );
	deepEqual( Stem("dobradas"), "dobr" );
	deepEqual( Stem("dobradiças"), "dobradic" );
	deepEqual( Stem("dobram"), "dobr" );
	deepEqual( Stem("dobrar"), "dobr" );
	deepEqual( Stem("dobrará"), "dobr" );
	deepEqual( Stem("dobraram"), "dobr" );
	deepEqual( Stem("dobre"), "dobr" );
	deepEqual( Stem("dobro"), "dobr" );
	deepEqual( Stem("dobrou"), "dobr" );
	deepEqual( Stem("doca"), "doc" );
	deepEqual( Stem("doce"), "doc" );
	deepEqual( Stem("dóceis"), "dóc" );
	deepEqual( Stem("docente"), "docent" );
	deepEqual( Stem("doces"), "doc" );
	deepEqual( Stem("documenta"), "document" );
	deepEqual( Stem("documentação"), "document" );
	deepEqual( Stem("documentada"), "document" );
	deepEqual( Stem("documentário"), "documentári" );
	deepEqual( Stem("documentários"), "documentári" );
	deepEqual( Stem("documento"), "document" );
	deepEqual( Stem("documentos"), "document" );
	deepEqual( Stem("doçura"), "doçur" );
	deepEqual( Stem("doe"), "doe" );
	deepEqual( Stem("doença"), "doenc" );
	deepEqual( Stem("doenças"), "doenc" );
	deepEqual( Stem("doente"), "doent" );
	deepEqual( Stem("doentes"), "doent" );
	deepEqual( Stem("doentia"), "doent" );
	deepEqual( Stem("doentio"), "doenti" );
	deepEqual( Stem("doer"), "doer" );
	deepEqual( Stem("dogmas"), "dogm" );
	deepEqual( Stem("doi"), "doi" );
	deepEqual( Stem("dói"), "dói" );
	deepEqual( Stem("doía"), "doí" );
	deepEqual( Stem("doida"), "doid" );
	deepEqual( Stem("doido"), "doid" );
	deepEqual( Stem("dois"), "dois" );
	deepEqual( Stem("dólar"), "dól" );
	deepEqual( Stem("dólares"), "dól" );
	deepEqual( Stem("dolce"), "dolc" );
	deepEqual( Stem("doleiros"), "doleir" );
	deepEqual( Stem("dolly"), "dolly" );
	deepEqual( Stem("dolores"), "dolor" );
	deepEqual( Stem("dolorida"), "dolor" );
	deepEqual( Stem("dolorido"), "dolor" );
	deepEqual( Stem("dolorosa"), "dolor" );
	deepEqual( Stem("dolorosas"), "dolor" );
	deepEqual( Stem("doloroso"), "dolor" );
	deepEqual( Stem("dom"), "dom" );
	deepEqual( Stem("domada"), "dom" );
	deepEqual( Stem("domaine"), "domain" );
	deepEqual( Stem("domenecci"), "domenecc" );
	deepEqual( Stem("doméstica"), "domést" );
	deepEqual( Stem("domésticas"), "domést" );
	deepEqual( Stem("doméstico"), "domést" );
	deepEqual( Stem("domésticos"), "domést" );
	deepEqual( Stem("domicí"), "domic" );
	deepEqual( Stem("domiciliar"), "domicili" );
	deepEqual( Stem("domicílio"), "domicíli" );
	deepEqual( Stem("domícilios"), "domícili" );
	deepEqual( Stem("domicílios"), "domicíli" );
	deepEqual( Stem("domina"), "domin" );
	deepEqual( Stem("dominada"), "domin" );
	deepEqual( Stem("dominadas"), "domin" );
	deepEqual( Stem("dominado"), "domin" );
	deepEqual( Stem("dominadores"), "domin" );
	deepEqual( Stem("dominam"), "domin" );
	deepEqual( Stem("dominando"), "domin" );
	deepEqual( Stem("dominante"), "domin" );
	deepEqual( Stem("dominar"), "domin" );
	deepEqual( Stem("dominaram"), "domin" );
	deepEqual( Stem("dominarem"), "domin" );
	deepEqual( Stem("dominavam"), "domin" );
	deepEqual( Stem("domine"), "domin" );
	deepEqual( Stem("domingão"), "domingã" );
	deepEqual( Stem("domingo"), "doming" );
	deepEqual( Stem("domingos"), "doming" );
	deepEqual( Stem("domingues"), "domingu" );
	deepEqual( Stem("dominguinhos"), "dominguinh" );
	deepEqual( Stem("domini"), "domin" );
	deepEqual( Stem("dominicais"), "dominic" );
	deepEqual( Stem("dominical"), "dominical" );
	deepEqual( Stem("dominicana"), "dominican" );
	deepEqual( Stem("domínio"), "domíni" );
	deepEqual( Stem("domínios"), "domíni" );
	deepEqual( Stem("domus"), "domus" );
	deepEqual( Stem("dona"), "don" );
	deepEqual( Stem("donald"), "donald" );
	deepEqual( Stem("donas"), "don" );
	deepEqual( Stem("dondoca"), "dondoc" );
	deepEqual( Stem("donnely"), "donnely" );
	deepEqual( Stem("dono"), "don" );
	deepEqual( Stem("donos"), "don" );
	deepEqual( Stem("dons"), "dons" );
	deepEqual( Stem("donzela"), "donzel" );
	deepEqual( Stem("doo"), "doo" );
	deepEqual( Stem("doou"), "doou" );
	deepEqual( Stem("dopá"), "dop" );
	deepEqual( Stem("dopamina"), "dopamin" );
	deepEqual( Stem("dops"), "dops" );
	deepEqual( Stem("dor"), "dor" );
	deepEqual( Stem("dora"), "dor" );
	deepEqual( Stem("dórea"), "dór" );
	deepEqual( Stem("dores"), "dor" );
	deepEqual( Stem("doreste"), "dor" );
	deepEqual( Stem("dorfman"), "dorfman" );
	deepEqual( Stem("dorival"), "dorival" );
	deepEqual( Stem("dorme"), "dorm" );
	deepEqual( Stem("dormem"), "dorm" );
	deepEqual( Stem("dormia"), "dorm" );
	deepEqual( Stem("dormiam"), "dorm" );
	deepEqual( Stem("dormido"), "dorm" );
	deepEqual( Stem("dormidos"), "dorm" );
	deepEqual( Stem("dormimos"), "dorm" );
	deepEqual( Stem("dormindo"), "dorm" );
	deepEqual( Stem("dormir"), "dorm" );
	deepEqual( Stem("dormiram"), "dorm" );
	deepEqual( Stem("dormirem"), "dorm" );
	deepEqual( Stem("dormitório"), "dormitóri" );
	deepEqual( Stem("dormitórios"), "dormitóri" );
	deepEqual( Stem("dormiu"), "dorm" );
	deepEqual( Stem("dorrit"), "dorrit" );
	deepEqual( Stem("dorsal"), "dorsal" );
	deepEqual( Stem("dorso"), "dors" );
	deepEqual( Stem("dos"), "dos" );
	deepEqual( Stem("dosada"), "dos" );
	deepEqual( Stem("dosagem"), "dosag" );
	deepEqual( Stem("dosar"), "dos" );
	deepEqual( Stem("dose"), "dos" );
	deepEqual( Stem("dosedel"), "dosedel" );
	deepEqual( Stem("doses"), "dos" );
	deepEqual( Stem("dossiê"), "dossi" );
	deepEqual( Stem("dotação"), "dotaçã" );
	deepEqual( Stem("dotes"), "dot" );
	deepEqual( Stem("dou"), "dou" );
	deepEqual( Stem("douglas"), "dougl" );
	deepEqual( Stem("dourada"), "dour" );
	deepEqual( Stem("douradas"), "dour" );
	deepEqual( Stem("dourado"), "dour" );
	deepEqual( Stem("dourados"), "dour" );
	deepEqual( Stem("douram"), "dour" );
	deepEqual( Stem("dourar"), "dour" );
	deepEqual( Stem("doutor"), "doutor" );
	deepEqual( Stem("doutora"), "doutor" );
	deepEqual( Stem("doutorado"), "doutor" );
	deepEqual( Stem("doutores"), "doutor" );
	deepEqual( Stem("doutrina"), "doutrin" );
	deepEqual( Stem("down"), "down" );
	deepEqual( Stem("downhill"), "downhill" );
	deepEqual( Stem("downsizing"), "downsizing" );
	deepEqual( Stem("downtown"), "downtown" );
	deepEqual( Stem("doxorubicina"), "doxorubicin" );
	deepEqual( Stem("doze"), "doz" );
	deepEqual( Stem("dpca"), "dpca" );
	deepEqual( Stem("dpz"), "dpz" );
	deepEqual( Stem("dr"), "dr" );
	deepEqual( Stem("dra"), "dra" );
	deepEqual( Stem("dracena"), "dracen" );
	deepEqual( Stem("drag"), "drag" );
	deepEqual( Stem("drama"), "dram" );
	deepEqual( Stem("dramas"), "dram" );
	deepEqual( Stem("dramática"), "dramát" );
	deepEqual( Stem("dramaticamente"), "dramat" );
	deepEqual( Stem("dramáticas"), "dramát" );
	deepEqual( Stem("dramaticidade"), "dramat" );
	deepEqual( Stem("dramático"), "dramát" );
	deepEqual( Stem("dramáticos"), "dramát" );
	deepEqual( Stem("dramaturga"), "dramaturg" );
	deepEqual( Stem("dramaturgia"), "dramaturg" );
	deepEqual( Stem("dramatúrgica"), "dramatúrg" );
	deepEqual( Stem("dramaturgo"), "dramaturg" );
	deepEqual( Stem("drástica"), "drástic" );
	deepEqual( Stem("drasticamente"), "drastic" );
	deepEqual( Stem("drásticas"), "drástic" );
	deepEqual( Stem("drásticos"), "drástic" );
	deepEqual( Stem("drblava"), "drblav" );
	deepEqual( Stem("drc"), "drc" );
	deepEqual( Stem("drenado"), "dren" );
	deepEqual( Stem("drenagem"), "drenag" );
	deepEqual( Stem("drenou"), "dren" );
	deepEqual( Stem("dressing"), "dressing" );
	deepEqual( Stem("dreyfuss"), "dreyfuss" );
	deepEqual( Stem("driblando"), "dribl" );
	deepEqual( Stem("driblar"), "dribl" );
	deepEqual( Stem("drinque"), "drinqu" );
	deepEqual( Stem("drinques"), "drinqu" );
	deepEqual( Stem("droga"), "drog" );
	deepEqual( Stem("drogado"), "drog" );
	deepEqual( Stem("drogados"), "drog" );
	deepEqual( Stem("drogando"), "drog" );
	deepEqual( Stem("drogar"), "drog" );
	deepEqual( Stem("drogaria"), "drog" );
	deepEqual( Stem("drogarias"), "drog" );
	deepEqual( Stem("drogas"), "drog" );
	deepEqual( Stem("dronbusch"), "dronbusch" );
	deepEqual( Stem("drosnin"), "drosnin" );
	deepEqual( Stem("drug"), "drug" );
	deepEqual( Stem("drugstores"), "drugstor" );
	deepEqual( Stem("drummond"), "drummond" );
	deepEqual( Stem("ds"), "ds" );
	deepEqual( Stem("du"), "du" );
	deepEqual( Stem("dualib"), "dualib" );
	deepEqual( Stem("dualid"), "dualid" );
	deepEqual( Stem("dualidade"), "dualidad" );
	deepEqual( Stem("duarte"), "duart" );
	deepEqual( Stem("duas"), "duas" );
	deepEqual( Stem("dúbia"), "dúb" );
	deepEqual( Stem("dúbias"), "dúb" );
	deepEqual( Stem("dublê"), "dubl" );
	deepEqual( Stem("dublin"), "dublin" );
	deepEqual( Stem("duby"), "duby" );
	deepEqual( Stem("ducado"), "duc" );
	deepEqual( Stem("duchemin"), "duchemin" );
	deepEqual( Stem("ducruet"), "ducruet" );
	deepEqual( Stem("duda"), "dud" );
	deepEqual( Stem("dudu"), "dudu" );
	deepEqual( Stem("duek"), "duek" );
	deepEqual( Stem("dukta"), "dukt" );
	deepEqual( Stem("dulce"), "dulc" );
	deepEqual( Stem("dumont"), "dumont" );
	deepEqual( Stem("dumping"), "dumping" );
	deepEqual( Stem("dundee"), "dunde" );
	deepEqual( Stem("dupla"), "dupl" );
	deepEqual( Stem("duplas"), "dupl" );
	deepEqual( Stem("duplicando"), "duplic" );
	deepEqual( Stem("duplicar"), "duplic" );
	deepEqual( Stem("duplicidade"), "duplic" );
	deepEqual( Stem("duplo"), "dupl" );
	deepEqual( Stem("duplos"), "dupl" );
	deepEqual( Stem("dupré"), "dupr" );
	deepEqual( Stem("duque"), "duqu" );
	deepEqual( Stem("dura"), "dur" );
	deepEqual( Stem("durabilidade"), "durabil" );
	deepEqual( Stem("duração"), "duraçã" );
	deepEqual( Stem("durado"), "dur" );
	deepEqual( Stem("duram"), "dur" );
	deepEqual( Stem("duramente"), "dur" );
	deepEqual( Stem("duran"), "duran" );
	deepEqual( Stem("durante"), "durant" );
	deepEqual( Stem("durantes"), "durant" );
	deepEqual( Stem("durão"), "durã" );
	deepEqual( Stem("durar"), "dur" );
	deepEqual( Stem("duraria"), "dur" );
	deepEqual( Stem("duras"), "dur" );
	deepEqual( Stem("durava"), "dur" );
	deepEqual( Stem("duravam"), "dur" );
	deepEqual( Stem("dure"), "dur" );
	deepEqual( Stem("durinho"), "durinh" );
	deepEqual( Stem("duríssima"), "duríssim" );
	deepEqual( Stem("durma"), "durm" );
	deepEqual( Stem("duro"), "dur" );
	deepEqual( Stem("durou"), "dur" );
	deepEqual( Stem("durval"), "durval" );
	deepEqual( Stem("dusek"), "dusek" );
	deepEqual( Stem("dustin"), "dustin" );
	deepEqual( Stem("duti"), "dut" );
	deepEqual( Stem("dutos"), "dut" );
	deepEqual( Stem("dutra"), "dutr" );
	deepEqual( Stem("duvernoy"), "duvernoy" );
	deepEqual( Stem("duvida"), "duv" );
	deepEqual( Stem("dúvida"), "dúv" );
	deepEqual( Stem("dúvidas"), "dúv" );
	deepEqual( Stem("duvide"), "duvid" );
	deepEqual( Stem("duvidem"), "duvid" );
	deepEqual( Stem("duvido"), "duv" );
	deepEqual( Stem("duvidosa"), "duvid" );
	deepEqual( Stem("duvidoso"), "duvid" );
	deepEqual( Stem("duvidosos"), "duvid" );
	deepEqual( Stem("duvidou"), "duvid" );
	deepEqual( Stem("duzentas"), "duzent" );
	deepEqual( Stem("dúzia"), "dúz" );
	deepEqual( Stem("dúzias"), "dúz" );
	deepEqual( Stem("dwight"), "dwight" );
	deepEqual( Stem("dyat"), "dyat" );
	deepEqual( Stem("e"), "e" );
	deepEqual( Stem("é"), "é" );
	deepEqual( Stem("ê"), "ê" );
	deepEqual( Stem("eagle"), "eagl" );
	deepEqual( Stem("east"), "east" );
	deepEqual( Stem("eboli"), "ebol" );
	deepEqual( Stem("éboli"), "ébol" );
	deepEqual( Stem("ebulição"), "ebuliçã" );
	deepEqual( Stem("eça"), "eça" );
	deepEqual( Stem("eclesiástico"), "eclesiást" );
	deepEqual( Stem("eclético"), "eclét" );
	deepEqual( Stem("ecletismo"), "eclet" );
	deepEqual( Stem("eclosão"), "eclosã" );
	deepEqual( Stem("eclusa"), "eclus" );
	deepEqual( Stem("eco"), "eco" );
	deepEqual( Stem("ecolista"), "ecol" );
	deepEqual( Stem("ecologia"), "ecolog" );
	deepEqual( Stem("ecológica"), "ecológ" );
	deepEqual( Stem("ecologicamente"), "ecolog" );
	deepEqual( Stem("ecológicas"), "ecológ" );
	deepEqual( Stem("ecológico"), "ecológ" );
	deepEqual( Stem("ecológicos"), "ecológ" );
	deepEqual( Stem("ecologista"), "ecolog" );
	deepEqual( Stem("ecologistas"), "ecolog" );
	deepEqual( Stem("economia"), "econom" );
	deepEqual( Stem("economias"), "econom" );
	deepEqual( Stem("economic"), "economic" );
	deepEqual( Stem("econômica"), "econôm" );
	deepEqual( Stem("econômicas"), "econôm" );
	deepEqual( Stem("econômico"), "econôm" );
	deepEqual( Stem("econômicos"), "econôm" );
	deepEqual( Stem("economista"), "econom" );
	deepEqual( Stem("economistas"), "econom" );
	deepEqual( Stem("economiza"), "economiz" );
	deepEqual( Stem("economizam"), "economiz" );
	deepEqual( Stem("economizando"), "economiz" );
	deepEqual( Stem("economizar"), "economiz" );
	deepEqual( Stem("economizo"), "economiz" );
	deepEqual( Stem("ecoou"), "eco" );
	deepEqual( Stem("ecos"), "ecos" );
	deepEqual( Stem("ecoturismo"), "ecotur" );
	deepEqual( Stem("ecoxiitas"), "ecoxiit" );
	deepEqual( Stem("ecstasy"), "ecstasy" );
	deepEqual( Stem("ecumênicos"), "ecumên" );
	deepEqual( Stem("edaival"), "edaival" );
	deepEqual( Stem("éden"), "éden" );
	deepEqual( Stem("eder"), "eder" );
	deepEqual( Stem("éder"), "éder" );
	deepEqual( Stem("edevaldo"), "edevald" );
	deepEqual( Stem("edgar"), "edgar" );
	deepEqual( Stem("edição"), "ediçã" );
	deepEqual( Stem("edições"), "ediçõ" );
	deepEqual( Stem("edificações"), "edific" );
	deepEqual( Stem("edifício"), "edifíci" );
	deepEqual( Stem("edifícios"), "edifíci" );
	deepEqual( Stem("edileusa"), "edileus" );
	deepEqual( Stem("edinir"), "edin" );
	deepEqual( Stem("edir"), "edir" );
	deepEqual( Stem("edison"), "edison" );
	deepEqual( Stem("edita"), "edit" );
	deepEqual( Stem("editada"), "edit" );
	deepEqual( Stem("editado"), "edit" );
	deepEqual( Stem("editados"), "edit" );
	deepEqual( Stem("editais"), "edit" );
	deepEqual( Stem("edital"), "edital" );
	deepEqual( Stem("editar"), "edit" );
	deepEqual( Stem("editava"), "edit" );
	deepEqual( Stem("edite"), "edit" );
	deepEqual( Stem("edith"), "edith" );
	deepEqual( Stem("editor"), "editor" );
	deepEqual( Stem("editora"), "editor" );
	deepEqual( Stem("editoras"), "editor" );
	deepEqual( Stem("editores"), "editor" );
	deepEqual( Stem("editoria"), "editor" );
	deepEqual( Stem("editoriais"), "editori" );
	deepEqual( Stem("editorial"), "editorial" );
	deepEqual( Stem("editorias"), "editor" );
	deepEqual( Stem("edivaldo"), "edivald" );
	deepEqual( Stem("edlich"), "edlich" );
	deepEqual( Stem("edlinger"), "edling" );
	deepEqual( Stem("edmar"), "edmar" );
	deepEqual( Stem("edmilson"), "edmilson" );
	deepEqual( Stem("edmund"), "edmund" );
	deepEqual( Stem("edmundo"), "edmund" );
	deepEqual( Stem("ednilton"), "ednilton" );
	deepEqual( Stem("edson"), "edson" );
	deepEqual( Stem("edu"), "edu" );
	deepEqual( Stem("eduarda"), "eduard" );
	deepEqual( Stem("eduardo"), "eduard" );
	deepEqual( Stem("eduardos"), "eduard" );
	deepEqual( Stem("educá"), "educ" );
	deepEqual( Stem("educação"), "educ" );
	deepEqual( Stem("educacionais"), "educacion" );
	deepEqual( Stem("educacional"), "educacional" );
	deepEqual( Stem("educada"), "educ" );
	deepEqual( Stem("educadamente"), "educ" );
	deepEqual( Stem("educado"), "educ" );
	deepEqual( Stem("educador"), "educ" );
	deepEqual( Stem("educadora"), "educ" );
	deepEqual( Stem("educadores"), "educ" );
	deepEqual( Stem("educar"), "educ" );
	deepEqual( Stem("educativa"), "educ" );
	deepEqual( Stem("educativo"), "educ" );
	deepEqual( Stem("educativos"), "educ" );
	deepEqual( Stem("edusp"), "edusp" );
	deepEqual( Stem("edvar"), "edvar" );
	deepEqual( Stem("edward"), "edward" );
	deepEqual( Stem("efe"), "efe" );
	deepEqual( Stem("efeito"), "efeit" );
	deepEqual( Stem("efeitos"), "efeit" );
	deepEqual( Stem("efêmera"), "efêm" );
	deepEqual( Stem("efervescência"), "efervescent" );
	deepEqual( Stem("efervescendo"), "efervesc" );
	deepEqual( Stem("éfesos"), "éfes" );
	deepEqual( Stem("efetiva"), "efet" );
	deepEqual( Stem("efetivamente"), "efet" );
	deepEqual( Stem("efetivo"), "efet" );
	deepEqual( Stem("efetivos"), "efet" );
	deepEqual( Stem("efetuadas"), "efetu" );
	deepEqual( Stem("eficácia"), "eficác" );
	deepEqual( Stem("eficaz"), "eficaz" );
	deepEqual( Stem("eficazes"), "eficaz" );
	deepEqual( Stem("eficiência"), "eficient" );
	deepEqual( Stem("eficiente"), "eficient" );
	deepEqual( Stem("eficientemente"), "eficient" );
	deepEqual( Stem("eficientes"), "eficient" );
	deepEqual( Stem("egberto"), "egbert" );
	deepEqual( Stem("egeu"), "egeu" );
	deepEqual( Stem("eggon"), "eggon" );
	deepEqual( Stem("egito"), "egit" );
	deepEqual( Stem("ego"), "ego" );
	deepEqual( Stem("egoísmo"), "egoísm" );
	deepEqual( Stem("egoísta"), "egoíst" );
	deepEqual( Stem("egoístas"), "egoíst" );
	deepEqual( Stem("egon"), "egon" );
	deepEqual( Stem("egos"), "egos" );
	deepEqual( Stem("egressos"), "egress" );
	deepEqual( Stem("eiffel"), "eiffel" );
	deepEqual( Stem("eigg"), "eigg" );
	deepEqual( Stem("eike"), "eik" );
	deepEqual( Stem("einstein"), "einstein" );
	deepEqual( Stem("eis"), "eis" );
	deepEqual( Stem("eisenhower"), "eisenhow" );
	deepEqual( Stem("eit"), "eit" );
	deepEqual( Stem("eixo"), "eix" );
	deepEqual( Stem("eixos"), "eix" );
	deepEqual( Stem("ejaculação"), "ejacul" );
	deepEqual( Stem("ejetada"), "ejet" );
	deepEqual( Stem("ejetado"), "ejet" );
	deepEqual( Stem("el"), "el" );
	deepEqual( Stem("ela"), "ela" );
	deepEqual( Stem("elabora"), "elabor" );
	deepEqual( Stem("elaboração"), "elabor" );
	deepEqual( Stem("elaboradas"), "elabor" );
	deepEqual( Stem("elaborado"), "elabor" );
	deepEqual( Stem("elaborados"), "elabor" );
	deepEqual( Stem("elaborar"), "elabor" );
	deepEqual( Stem("elaboraram"), "elabor" );
	deepEqual( Stem("elaboravam"), "elabor" );
	deepEqual( Stem("elaboro"), "elabor" );
	deepEqual( Stem("elaborou"), "elabor" );
	deepEqual( Stem("elache"), "elach" );
	deepEqual( Stem("elaine"), "elain" );
	deepEqual( Stem("elas"), "elas" );
	deepEqual( Stem("elásticas"), "elást" );
	deepEqual( Stem("elástico"), "elást" );
	deepEqual( Stem("elastina"), "elastin" );
	deepEqual( Stem("elastoderme"), "elastoderm" );
	deepEqual( Stem("elba"), "elba" );
	deepEqual( Stem("elbrick"), "elbrick" );
	deepEqual( Stem("elbrus"), "elbrus" );
	deepEqual( Stem("elda"), "elda" );
	deepEqual( Stem("eldorado"), "eldor" );
	deepEqual( Stem("ele"), "ele" );
	deepEqual( Stem("electric"), "electric" );
	deepEqual( Stem("electronics"), "electronics" );
	deepEqual( Stem("elefante"), "elef" );
	deepEqual( Stem("elefantes"), "elef" );
	deepEqual( Stem("elegância"), "eleg" );
	deepEqual( Stem("elegante"), "eleg" );
	deepEqual( Stem("elegantes"), "eleg" );
	deepEqual( Stem("elegantíssimo"), "elegantíssim" );
	deepEqual( Stem("elege"), "eleg" );
	deepEqual( Stem("elegendo"), "eleg" );
	deepEqual( Stem("eleger"), "eleg" );
	deepEqual( Stem("elegeram"), "eleg" );
	deepEqual( Stem("elegerem"), "eleg" );
	deepEqual( Stem("elegessem"), "eleg" );
	deepEqual( Stem("elegeu"), "eleg" );
	deepEqual( Stem("eleição"), "eleiçã" );
	deepEqual( Stem("eleições"), "eleiçõ" );
	deepEqual( Stem("eleita"), "eleit" );
	deepEqual( Stem("eleito"), "eleit" );
	deepEqual( Stem("eleitor"), "eleitor" );
	deepEqual( Stem("eleitorado"), "eleitor" );
	deepEqual( Stem("eleitorais"), "eleitor" );
	deepEqual( Stem("eleitoral"), "eleitoral" );
	deepEqual( Stem("eleitores"), "eleitor" );
	deepEqual( Stem("eleitos"), "eleit" );
	deepEqual( Stem("elek"), "elek" );
	deepEqual( Stem("elementais"), "element" );
	deepEqual( Stem("elemento"), "element" );
	deepEqual( Stem("elementos"), "element" );
	deepEqual( Stem("elena"), "elen" );
	deepEqual( Stem("elenco"), "elenc" );
	deepEqual( Stem("elenilda"), "elenild" );
	deepEqual( Stem("eleonor"), "eleonor" );
	deepEqual( Stem("eleotório"), "eleotóri" );
	deepEqual( Stem("elephante"), "eleph" );
	deepEqual( Stem("eles"), "eles" );
	deepEqual( Stem("elétrica"), "elétr" );
	deepEqual( Stem("elétricas"), "elétr" );
	deepEqual( Stem("eletricidade"), "eletr" );
	deepEqual( Stem("eletricista"), "eletric" );
	deepEqual( Stem("eletricistas"), "eletric" );
	deepEqual( Stem("elétrico"), "elétr" );
	deepEqual( Stem("elétricos"), "elétr" );
	deepEqual( Stem("eletrizante"), "eletriz" );
	deepEqual( Stem("eletro"), "eletr" );
	deepEqual( Stem("eletrobrás"), "eletrobrás" );
	deepEqual( Stem("eletrodomésticos"), "eletrodomést" );
	deepEqual( Stem("eletrodos"), "eletrod" );
	deepEqual( Stem("eletrolipo"), "eletrolip" );
	deepEqual( Stem("eletromagnética"), "eletromagnét" );
	deepEqual( Stem("eletromagnéticas"), "eletromagnét" );
	deepEqual( Stem("eletromecânicos"), "eletromecân" );
	deepEqual( Stem("elétron"), "elétron" );
	deepEqual( Stem("eletrônica"), "eletrôn" );
	deepEqual( Stem("eletronicamente"), "eletron" );
	deepEqual( Stem("eletrônicas"), "eletrôn" );
	deepEqual( Stem("eletrônico"), "eletrôn" );
	deepEqual( Stem("eletrônicos"), "eletrôn" );
	deepEqual( Stem("eletropaulo"), "eletropaul" );
	deepEqual( Stem("eletrosul"), "eletrosul" );
	deepEqual( Stem("elevação"), "elev" );
	deepEqual( Stem("elevadas"), "elev" );
	deepEqual( Stem("elevado"), "elev" );
	deepEqual( Stem("elevador"), "elev" );
	deepEqual( Stem("elevados"), "elev" );
	deepEqual( Stem("elevar"), "elev" );
	deepEqual( Stem("elevaram"), "elev" );
	deepEqual( Stem("elgarten"), "elgarten" );
	deepEqual( Stem("eli"), "eli" );
	deepEqual( Stem("eliachar"), "eliach" );
	deepEqual( Stem("eliade"), "eliad" );
	deepEqual( Stem("eliakim"), "eliakim" );
	deepEqual( Stem("eliana"), "elian" );
	deepEqual( Stem("eliane"), "elian" );
	deepEqual( Stem("elias"), "eli" );
	deepEqual( Stem("eliel"), "eliel" );
	deepEqual( Stem("elimina"), "elimin" );
	deepEqual( Stem("eliminação"), "elimin" );
	deepEqual( Stem("eliminada"), "elimin" );
	deepEqual( Stem("eliminado"), "elimin" );
	deepEqual( Stem("eliminados"), "elimin" );
	deepEqual( Stem("eliminando"), "elimin" );
	deepEqual( Stem("eliminar"), "elimin" );
	deepEqual( Stem("eliminaria"), "elimin" );
	deepEqual( Stem("eliminatória"), "eliminatór" );
	deepEqual( Stem("eliminatórias"), "eliminatór" );
	deepEqual( Stem("eliminou"), "elimin" );
	deepEqual( Stem("élio"), "éli" );
	deepEqual( Stem("elioneide"), "elioneid" );
	deepEqual( Stem("eliot"), "eliot" );
	deepEqual( Stem("elisa"), "elis" );
	deepEqual( Stem("elisabeth"), "elisabeth" );
	deepEqual( Stem("elisaldo"), "elisald" );
	deepEqual( Stem("elíseos"), "elís" );
	deepEqual( Stem("eliseu"), "elis" );
	deepEqual( Stem("elite"), "elit" );
	deepEqual( Stem("elites"), "elit" );
	deepEqual( Stem("elitista"), "elit" );
	deepEqual( Stem("elixir"), "elix" );
	deepEqual( Stem("elizabetano"), "elizabetan" );
	deepEqual( Stem("elizabete"), "elizabet" );
	deepEqual( Stem("elizabeth"), "elizabeth" );
	deepEqual( Stem("elizeth"), "elizeth" );
	deepEqual( Stem("ella"), "ella" );
	deepEqual( Stem("elle"), "elle" );
	deepEqual( Stem("ellen"), "ellen" );
	deepEqual( Stem("eller"), "eller" );
	deepEqual( Stem("ellis"), "ellis" );
	deepEqual( Stem("ellius"), "ellius" );
	deepEqual( Stem("ellus"), "ellus" );
	deepEqual( Stem("elo"), "elo" );
	deepEqual( Stem("elogia"), "elog" );
	deepEqual( Stem("elogiada"), "elogi" );
	deepEqual( Stem("elogiado"), "elogi" );
	deepEqual( Stem("elogiam"), "elog" );
	deepEqual( Stem("elogiar"), "elogi" );
	deepEqual( Stem("elogiaram"), "elogi" );
	deepEqual( Stem("elogiava"), "elogi" );
	deepEqual( Stem("elógica"), "elóg" );
	deepEqual( Stem("elogie"), "elogi" );
	deepEqual( Stem("elogio"), "elogi" );
	deepEqual( Stem("elogios"), "elogi" );
	deepEqual( Stem("elogiou"), "elogi" );
	deepEqual( Stem("eloneide"), "eloneid" );
	deepEqual( Stem("eloquência"), "eloquent" );
	deepEqual( Stem("elpídio"), "elpídi" );
	deepEqual( Stem("elucidar"), "elucid" );
	deepEqual( Stem("elucubrações"), "elucubr" );
	deepEqual( Stem("elvis"), "elvis" );
	deepEqual( Stem("ely"), "ely" );
	deepEqual( Stem("elza"), "elza" );
	deepEqual( Stem("em"), "em" );
	deepEqual( Stem("emagracer"), "emagrac" );
	deepEqual( Stem("emagreça"), "emagrec" );
	deepEqual( Stem("emagreçam"), "emagrec" );
	deepEqual( Stem("emagrece"), "emagrec" );
	deepEqual( Stem("emagrecer"), "emagrec" );
	deepEqual( Stem("emagreceu"), "emagrec" );
	deepEqual( Stem("emagreci"), "emagrec" );
	deepEqual( Stem("emagrecia"), "emagrec" );
	deepEqual( Stem("emagreciam"), "emagrec" );
	deepEqual( Stem("emagrecimento"), "emagrec" );
	deepEqual( Stem("emagreço"), "emagrec" );
	deepEqual( Stem("email"), "email" );
	deepEqual( Stem("emana"), "eman" );
	deepEqual( Stem("emanam"), "eman" );
	deepEqual( Stem("emancipador"), "emancip" );
	deepEqual( Stem("emanoel"), "emanoel" );
	deepEqual( Stem("emaranhado"), "emaranh" );
	deepEqual( Stem("emaús"), "emaús" );
	deepEqual( Stem("emb"), "emb" );
	deepEqual( Stem("embaixada"), "embaix" );
	deepEqual( Stem("embaixadas"), "embaix" );
	deepEqual( Stem("embaixador"), "embaix" );
	deepEqual( Stem("embaixo"), "embaix" );
	deepEqual( Stem("embalados"), "embal" );
	deepEqual( Stem("embalagem"), "embalag" );
	deepEqual( Stem("embalagens"), "embalagens" );
	deepEqual( Stem("embalam"), "embal" );
	deepEqual( Stem("embalava"), "embal" );
	deepEqual( Stem("embalo"), "embal" );
	deepEqual( Stem("embalou"), "embal" );
	deepEqual( Stem("embaraça"), "embarac" );
	deepEqual( Stem("embaraços"), "embarac" );
	deepEqual( Stem("embaraçosos"), "embarac" );
	deepEqual( Stem("embaralhando"), "embaralh" );
	deepEqual( Stem("embarca"), "embarc" );
	deepEqual( Stem("embarcações"), "embarc" );
	deepEqual( Stem("embarcado"), "embarc" );
	deepEqual( Stem("embarcados"), "embarc" );
	deepEqual( Stem("embarcam"), "embarc" );
	deepEqual( Stem("embarcamos"), "embarc" );
	deepEqual( Stem("embarcar"), "embarc" );
	deepEqual( Stem("embarcaram"), "embarc" );
	deepEqual( Stem("embarcaria"), "embarc" );
	deepEqual( Stem("embarcou"), "embarc" );
	deepEqual( Stem("embargada"), "embarg" );
	deepEqual( Stem("embargadas"), "embarg" );
	deepEqual( Stem("embargando"), "embarg" );
	deepEqual( Stem("embargar"), "embarg" );
	deepEqual( Stem("embargo"), "embarg" );
	deepEqual( Stem("embargou"), "embarg" );
	deepEqual( Stem("embarque"), "embarqu" );
	deepEqual( Stem("embarques"), "embarqu" );
	deepEqual( Stem("embasar"), "embas" );
	deepEqual( Stem("embasou"), "embas" );
	deepEqual( Stem("embate"), "embat" );
	deepEqual( Stem("embates"), "embat" );
	deepEqual( Stem("embebedassem"), "embebed" );
	deepEqual( Stem("embebido"), "embeb" );
	deepEqual( Stem("embelezamento"), "embelez" );
	deepEqual( Stem("embelezar"), "embelez" );
	deepEqual( Stem("embicando"), "embic" );
	deepEqual( Stem("emblema"), "emblem" );
	deepEqual( Stem("emblemática"), "emblemát" );
	deepEqual( Stem("emblemáticas"), "emblemát" );
	deepEqual( Stem("emblemático"), "emblemát" );
	deepEqual( Stem("emboca"), "emboc" );
	deepEqual( Stem("embolado"), "embol" );
	deepEqual( Stem("embolia"), "embol" );
	deepEqual( Stem("embolsa"), "embols" );
	deepEqual( Stem("embolsam"), "embols" );
	deepEqual( Stem("embolsar"), "embols" );
	deepEqual( Stem("embolsarem"), "embols" );
	deepEqual( Stem("embolsou"), "embols" );
	deepEqual( Stem("embora"), "embor" );
	deepEqual( Stem("emboscada"), "embosc" );
	deepEqual( Stem("embraer"), "embra" );
	deepEqual( Stem("embrapa"), "embrap" );
	deepEqual( Stem("embratel"), "embratel" );
	deepEqual( Stem("embrater"), "embrat" );
	deepEqual( Stem("embratur"), "embratur" );
	deepEqual( Stem("embreagem"), "embreag" );
	deepEqual( Stem("embrenhou"), "embrenh" );
	deepEqual( Stem("embriaga"), "embriag" );
	deepEqual( Stem("embriagado"), "embriag" );
	deepEqual( Stem("embriagar"), "embriag" );
	deepEqual( Stem("embriague"), "embriag" );
	deepEqual( Stem("embriaguez"), "embriaguez" );
	deepEqual( Stem("embrião"), "embriã" );
	deepEqual( Stem("embriologia"), "embriolog" );
	deepEqual( Stem("embrionária"), "embrionár" );
	deepEqual( Stem("embrionárias"), "embrionár" );
	deepEqual( Stem("embrionário"), "embrionári" );
	deepEqual( Stem("embrulhada"), "embrulh" );
	deepEqual( Stem("embrutecidos"), "embrutec" );
	deepEqual( Stem("emburaca"), "emburac" );
	deepEqual( Stem("emburacado"), "emburac" );
	deepEqual( Stem("embuste"), "embust" );
	deepEqual( Stem("embutido"), "embut" );
	deepEqual( Stem("embutidos"), "embut" );
	deepEqual( Stem("embutir"), "embut" );
	deepEqual( Stem("emenda"), "emend" );
	deepEqual( Stem("emendo"), "emend" );
	deepEqual( Stem("emendou"), "emend" );
	deepEqual( Stem("emergência"), "emergent" );
	deepEqual( Stem("emergente"), "emergent" );
	deepEqual( Stem("emergentes"), "emergent" );
	deepEqual( Stem("emergindo"), "emerg" );
	deepEqual( Stem("emergiu"), "emerg" );
	deepEqual( Stem("emérito"), "emérit" );
	deepEqual( Stem("emerson"), "emerson" );
	deepEqual( Stem("émerson"), "émerson" );
	deepEqual( Stem("emfa"), "emfa" );
	deepEqual( Stem("emi"), "emi" );
	deepEqual( Stem("emidio"), "emidi" );
	deepEqual( Stem("emídio"), "emídi" );
	deepEqual( Stem("emigração"), "emigr" );
	deepEqual( Stem("emigrados"), "emigr" );
	deepEqual( Stem("emigrantes"), "emigr" );
	deepEqual( Stem("emílio"), "emíli" );
	deepEqual( Stem("eminentemente"), "eminent" );
	deepEqual( Stem("emirados"), "emir" );
	deepEqual( Stem("emissão"), "emissã" );
	deepEqual( Stem("emissária"), "emissár" );
	deepEqual( Stem("emissários"), "emissári" );
	deepEqual( Stem("emissões"), "emissõ" );
	deepEqual( Stem("emissora"), "emissor" );
	deepEqual( Stem("emissoras"), "emissor" );
	deepEqual( Stem("emissores"), "emissor" );
	deepEqual( Stem("emitam"), "emit" );
	deepEqual( Stem("emite"), "emit" );
	deepEqual( Stem("emitia"), "emit" );
	deepEqual( Stem("emitidas"), "emit" );
	deepEqual( Stem("emitido"), "emit" );
	deepEqual( Stem("emitidos"), "emit" );
	deepEqual( Stem("emitir"), "emit" );
	deepEqual( Stem("emitissem"), "emit" );
	deepEqual( Stem("emitiu"), "emit" );
	deepEqual( Stem("emma"), "emma" );
	deepEqual( Stem("emmanuel"), "emmanuel" );
	deepEqual( Stem("emmanuelle"), "emmanuell" );
	deepEqual( Stem("emoção"), "emoçã" );
	deepEqual( Stem("emociona"), "emocion" );
	deepEqual( Stem("emocionada"), "emocion" );
	deepEqual( Stem("emocionado"), "emocion" );
	deepEqual( Stem("emocionais"), "emocion" );
	deepEqual( Stem("emocional"), "emocional" );
	deepEqual( Stem("emocionalmente"), "emocional" );
	deepEqual( Stem("emocionante"), "emocion" );
	deepEqual( Stem("emocionou"), "emocion" );
	deepEqual( Stem("emoções"), "emoçõ" );
	deepEqual( Stem("emotivamente"), "emot" );
	deepEqual( Stem("emparelhou"), "emparelh" );
	deepEqual( Stem("empatada"), "empat" );
	deepEqual( Stem("empatado"), "empat" );
	deepEqual( Stem("empatados"), "empat" );
	deepEqual( Stem("empatam"), "empat" );
	deepEqual( Stem("empatar"), "empat" );
	deepEqual( Stem("empatia"), "empat" );
	deepEqual( Stem("empatou"), "empat" );
	deepEqual( Stem("empedernido"), "empedern" );
	deepEqual( Stem("empenha"), "empenh" );
	deepEqual( Stem("empenhado"), "empenh" );
	deepEqual( Stem("empenhados"), "empenh" );
	deepEqual( Stem("empenhando"), "empenh" );
	deepEqual( Stem("empenhar"), "empenh" );
	deepEqual( Stem("empenho"), "empenh" );
	deepEqual( Stem("emperrado"), "emperr" );
	deepEqual( Stem("emperram"), "emperr" );
	deepEqual( Stem("empertigado"), "empertig" );
	deepEqual( Stem("empetecando"), "empetec" );
	deepEqual( Stem("empilhada"), "empilh" );
	deepEqual( Stem("empilhadeira"), "empilhadeir" );
	deepEqual( Stem("empilhar"), "empilh" );
	deepEqual( Stem("empiricamente"), "empir" );
	deepEqual( Stem("empírico"), "empír" );
	deepEqual( Stem("emplacam"), "emplac" );
	deepEqual( Stem("emplacou"), "emplac" );
	deepEqual( Stem("emplaque"), "emplaqu" );
	deepEqual( Stem("empoado"), "empo" );
	deepEqual( Stem("empobrece"), "empobrec" );
	deepEqual( Stem("empoeiradas"), "empoeir" );
	deepEqual( Stem("empoeirado"), "empoeir" );
	deepEqual( Stem("empoeirados"), "empoeir" );
	deepEqual( Stem("empolga"), "empolg" );
	deepEqual( Stem("empolgação"), "empolg" );
	deepEqual( Stem("empolgados"), "empolg" );
	deepEqual( Stem("empolgam"), "empolg" );
	deepEqual( Stem("empolgante"), "empolg" );
	deepEqual( Stem("empolgantes"), "empolg" );
	deepEqual( Stem("empolgou"), "empolg" );
	deepEqual( Stem("emporio"), "empori" );
	deepEqual( Stem("empório"), "empóri" );
	deepEqual( Stem("empossado"), "emposs" );
	deepEqual( Stem("empreendedor"), "empreendedor" );
	deepEqual( Stem("empreendedores"), "empreendedor" );
	deepEqual( Stem("empreendendo"), "empreend" );
	deepEqual( Stem("empreender"), "empreend" );
	deepEqual( Stem("empreendeu"), "empreend" );
	deepEqual( Stem("empreendimento"), "empreend" );
	deepEqual( Stem("empreendimentos"), "empreend" );
	deepEqual( Stem("emprega"), "empreg" );
	deepEqual( Stem("empregabilidade"), "empreg" );
	deepEqual( Stem("empregada"), "empreg" );
	deepEqual( Stem("empregadas"), "empreg" );
	deepEqual( Stem("empregado"), "empreg" );
	deepEqual( Stem("empregador"), "empreg" );
	deepEqual( Stem("empregadores"), "empreg" );
	deepEqual( Stem("empregados"), "empreg" );
	deepEqual( Stem("empregam"), "empreg" );
	deepEqual( Stem("empregar"), "empreg" );
	deepEqual( Stem("empregatício"), "empregatíci" );
	deepEqual( Stem("empregava"), "empreg" );
	deepEqual( Stem("emprego"), "empreg" );
	deepEqual( Stem("empregos"), "empreg" );
	deepEqual( Stem("empregou"), "empreg" );
	deepEqual( Stem("empreitada"), "empreit" );
	deepEqual( Stem("empreitadas"), "empreit" );
	deepEqual( Stem("empreiteira"), "empreiteir" );
	deepEqual( Stem("empreiteiras"), "empreiteir" );
	deepEqual( Stem("empresa"), "empres" );
	deepEqual( Stem("empresária"), "empresár" );
	deepEqual( Stem("empresariado"), "empresari" );
	deepEqual( Stem("empresariais"), "empresari" );
	deepEqual( Stem("empresarial"), "empresarial" );
	deepEqual( Stem("empresárias"), "empresár" );
	deepEqual( Stem("empresário"), "empresári" );
	deepEqual( Stem("empresários"), "empresári" );
	deepEqual( Stem("empresas"), "empres" );
	deepEqual( Stem("empresta"), "emprest" );
	deepEqual( Stem("emprestada"), "emprest" );
	deepEqual( Stem("emprestado"), "emprest" );
	deepEqual( Stem("emprestados"), "emprest" );
	deepEqual( Stem("emprestar"), "emprest" );
	deepEqual( Stem("empréstimo"), "empréstim" );
	deepEqual( Stem("empréstimos"), "emprést" );
	deepEqual( Stem("emprestou"), "emprest" );
	deepEqual( Stem("empulhação"), "empulh" );
	deepEqual( Stem("empunha"), "empunh" );
	deepEqual( Stem("empunhar"), "empunh" );
	deepEqual( Stem("empunhou"), "empunh" );
	deepEqual( Stem("empurra"), "empurr" );
	deepEqual( Stem("empurrá"), "empurr" );
	deepEqual( Stem("empurrada"), "empurr" );
	deepEqual( Stem("empurradas"), "empurr" );
	deepEqual( Stem("empurrado"), "empurr" );
	deepEqual( Stem("empurradores"), "empurr" );
	deepEqual( Stem("empurrados"), "empurr" );
	deepEqual( Stem("empurrando"), "empurr" );
	deepEqual( Stem("empurrão"), "empurrã" );
	deepEqual( Stem("empurrãozinho"), "empurrãozinh" );
	deepEqual( Stem("empurrar"), "empurr" );
	deepEqual( Stem("empurraram"), "empurr" );
	deepEqual( Stem("empurroterapia"), "empurroterap" );
	deepEqual( Stem("empurrou"), "empurr" );
	deepEqual( Stem("empuxo"), "empux" );
	deepEqual( Stem("emulavam"), "emul" );
	deepEqual( Stem("emulsões"), "emulsõ" );
	deepEqual( Stem("en"), "en" );
	deepEqual( Stem("enaltecem"), "enaltec" );
	deepEqual( Stem("enamorado"), "enamor" );
	deepEqual( Stem("encabeçado"), "encabec" );
	deepEqual( Stem("encabeçam"), "encabec" );
	deepEqual( Stem("encabeçassem"), "encabec" );
	deepEqual( Stem("encabeçou"), "encabec" );
	deepEqual( Stem("encabulado"), "encabul" );
	deepEqual( Stem("encaixa"), "encaix" );
	deepEqual( Stem("encaixadas"), "encaix" );
	deepEqual( Stem("encaixam"), "encaix" );
	deepEqual( Stem("encaixar"), "encaix" );
	deepEqual( Stem("encaixaria"), "encaix" );
	deepEqual( Stem("encaixava"), "encaix" );
	deepEqual( Stem("encaixe"), "encaix" );
	deepEqual( Stem("encaixem"), "encaix" );
	deepEqual( Stem("encaixotador"), "encaixot" );
	deepEqual( Stem("encalhadas"), "encalh" );
	deepEqual( Stem("encaminha"), "encaminh" );
	deepEqual( Stem("encaminhadas"), "encaminh" );
	deepEqual( Stem("encaminhado"), "encaminh" );
	deepEqual( Stem("encaminhados"), "encaminh" );
	deepEqual( Stem("encaminhamento"), "encaminh" );
	deepEqual( Stem("encaminhamos"), "encaminh" );
	deepEqual( Stem("encaminhar"), "encaminh" );
	deepEqual( Stem("encaminharam"), "encaminh" );
	deepEqual( Stem("encaminhasse"), "encaminh" );
	deepEqual( Stem("encaminhou"), "encaminh" );
	deepEqual( Stem("encampada"), "encamp" );
	deepEqual( Stem("encanada"), "encan" );
	deepEqual( Stem("encanar"), "encan" );
	deepEqual( Stem("encanta"), "encant" );
	deepEqual( Stem("encantada"), "encant" );
	deepEqual( Stem("encantadas"), "encant" );
	deepEqual( Stem("encantado"), "encant" );
	deepEqual( Stem("encantadora"), "encant" );
	deepEqual( Stem("encantados"), "encant" );
	deepEqual( Stem("encante"), "encant" );
	deepEqual( Stem("encantei"), "encant" );
	deepEqual( Stem("encanto"), "encant" );
	deepEqual( Stem("encantou"), "encant" );
	deepEqual( Stem("encapo"), "encap" );
	deepEqual( Stem("encara"), "encar" );
	deepEqual( Stem("encará"), "encar" );
	deepEqual( Stem("encarada"), "encar" );
	deepEqual( Stem("encaradas"), "encar" );
	deepEqual( Stem("encarado"), "encar" );
	deepEqual( Stem("encarados"), "encar" );
	deepEqual( Stem("encaram"), "encar" );
	deepEqual( Stem("encarando"), "encar" );
	deepEqual( Stem("encarapitadas"), "encarapit" );
	deepEqual( Stem("encarapitados"), "encarapit" );
	deepEqual( Stem("encarar"), "encar" );
	deepEqual( Stem("encarariam"), "encar" );
	deepEqual( Stem("encarceradores"), "encarcer" );
	deepEqual( Stem("encarcerados"), "encarcer" );
	deepEqual( Stem("encarceramento"), "encarcer" );
	deepEqual( Stem("encarcerar"), "encarcer" );
	deepEqual( Stem("encarcerou"), "encarcer" );
	deepEqual( Stem("encarece"), "encarec" );
	deepEqual( Stem("encareceu"), "encarec" );
	deepEqual( Stem("encarem"), "encar" );
	deepEqual( Stem("encaremos"), "encar" );
	deepEqual( Stem("encargos"), "encarg" );
	deepEqual( Stem("encarnado"), "encarn" );
	deepEqual( Stem("encarnar"), "encarn" );
	deepEqual( Stem("encarnava"), "encarn" );
	deepEqual( Stem("encarnou"), "encarn" );
	deepEqual( Stem("encaro"), "encar" );
	deepEqual( Stem("encarou"), "encar" );
	deepEqual( Stem("encarrega"), "encarreg" );
	deepEqual( Stem("encarregada"), "encarreg" );
	deepEqual( Stem("encarregadas"), "encarreg" );
	deepEqual( Stem("encarregado"), "encarreg" );
	deepEqual( Stem("encarregados"), "encarreg" );
	deepEqual( Stem("encarregam"), "encarreg" );
	deepEqual( Stem("encarregou"), "encarreg" );
	deepEqual( Stem("encarta"), "encart" );
	deepEqual( Stem("encastelados"), "encastel" );
	deepEqual( Stem("encefálico"), "encefál" );
	deepEqual( Stem("encenação"), "encen" );
	deepEqual( Stem("encenado"), "encen" );
	deepEqual( Stem("encerra"), "encerr" );
	deepEqual( Stem("encerrada"), "encerr" );
	deepEqual( Stem("encerradas"), "encerr" );
	deepEqual( Stem("encerrado"), "encerr" );
	deepEqual( Stem("encerramento"), "encerr" );
	deepEqual( Stem("encerrando"), "encerr" );
	deepEqual( Stem("encerrar"), "encerr" );
	deepEqual( Stem("encerrará"), "encerr" );
	deepEqual( Stem("encerraram"), "encerr" );
	deepEqual( Stem("encerro"), "encerr" );
	deepEqual( Stem("encerrou"), "encerr" );
	deepEqual( Stem("encharcado"), "encharc" );
	deepEqual( Stem("enchem"), "enchem" );
	deepEqual( Stem("enchendo"), "enchend" );
	deepEqual( Stem("enchente"), "enchent" );
	deepEqual( Stem("enchentes"), "enchent" );
	deepEqual( Stem("encher"), "encher" );
	deepEqual( Stem("encheu"), "encheu" );
	deepEqual( Stem("enchi"), "enchi" );
	deepEqual( Stem("enchia"), "enchi" );
	deepEqual( Stem("enchimento"), "enchiment" );
	deepEqual( Stem("enciclopédia"), "enciclopéd" );
	deepEqual( Stem("enciclopédias"), "enciclopéd" );
	deepEqual( Stem("enciclopédica"), "enciclopéd" );
	deepEqual( Stem("enciclopéias"), "enciclop" );
	deepEqual( Stem("enclausura"), "enclausur" );
	deepEqual( Stem("enclausurada"), "enclausur" );
	deepEqual( Stem("enclave"), "enclav" );
	deepEqual( Stem("encobertas"), "encobert" );
	deepEqual( Stem("encobre"), "encobr" );
	deepEqual( Stem("encobrir"), "encobr" );
	deepEqual( Stem("encobriram"), "encobr" );
	deepEqual( Stem("encol"), "encol" );
	deepEqual( Stem("encolhem"), "encolh" );
	deepEqual( Stem("encolhesse"), "encolh" );
	deepEqual( Stem("encolhida"), "encolh" );
	deepEqual( Stem("encomenda"), "encomend" );
	deepEqual( Stem("encomendada"), "encomend" );
	deepEqual( Stem("encomendadas"), "encomend" );
	deepEqual( Stem("encomendado"), "encomend" );
	deepEqual( Stem("encomendar"), "encomend" );
	deepEqual( Stem("encomendas"), "encomend" );
	deepEqual( Stem("encomendei"), "encomend" );
	deepEqual( Stem("encomendou"), "encomend" );
	deepEqual( Stem("encontra"), "encontr" );
	deepEqual( Stem("encontrá"), "encontr" );
	deepEqual( Stem("encontrada"), "encontr" );
	deepEqual( Stem("encontradas"), "encontr" );
	deepEqual( Stem("encontrado"), "encontr" );
	deepEqual( Stem("encontrados"), "encontr" );
	deepEqual( Stem("encontram"), "encontr" );
	deepEqual( Stem("encontramos"), "encontr" );
	deepEqual( Stem("encontrando"), "encontr" );
	deepEqual( Stem("encontrar"), "encontr" );
	deepEqual( Stem("encontrará"), "encontr" );
	deepEqual( Stem("encontraram"), "encontr" );
	deepEqual( Stem("encontrarem"), "encontr" );
	deepEqual( Stem("encontrasse"), "encontr" );
	deepEqual( Stem("encontrava"), "encontr" );
	deepEqual( Stem("encontre"), "encontr" );
	deepEqual( Stem("encontrei"), "encontr" );
	deepEqual( Stem("encontro"), "encontr" );
	deepEqual( Stem("encontros"), "encontr" );
	deepEqual( Stem("encontrou"), "encontr" );
	deepEqual( Stem("encorajadas"), "encoraj" );
	deepEqual( Stem("encorajaram"), "encoraj" );
	deepEqual( Stem("encorpado"), "encorp" );
	deepEqual( Stem("encorpados"), "encorp" );
	deepEqual( Stem("encostado"), "encost" );
	deepEqual( Stem("encostados"), "encost" );
	deepEqual( Stem("encostar"), "encost" );
	deepEqual( Stem("encosto"), "encost" );
	deepEqual( Stem("encravada"), "encrav" );
	deepEqual( Stem("encravadas"), "encrav" );
	deepEqual( Stem("encravado"), "encrav" );
	deepEqual( Stem("encravados"), "encrav" );
	deepEqual( Stem("encrenca"), "encrenc" );
	deepEqual( Stem("encrencas"), "encrenc" );
	deepEqual( Stem("encrespados"), "encresp" );
	deepEqual( Stem("encruzilhadas"), "encruzilh" );
	deepEqual( Stem("encurralada"), "encurral" );
	deepEqual( Stem("encurralado"), "encurral" );
	deepEqual( Stem("encurtamento"), "encurt" );
	deepEqual( Stem("encurtar"), "encurt" );
	deepEqual( Stem("encurtou"), "encurt" );
	deepEqual( Stem("end"), "end" );
	deepEqual( Stem("endêmica"), "endêm" );
	deepEqual( Stem("ender"), "ender" );
	deepEqual( Stem("endereçada"), "enderec" );
	deepEqual( Stem("endereço"), "enderec" );
	deepEqual( Stem("endereços"), "enderec" );
	deepEqual( Stem("endinheirado"), "endinheir" );
	deepEqual( Stem("endinheirados"), "endinheir" );
	deepEqual( Stem("endividada"), "endivid" );
	deepEqual( Stem("endividadas"), "endivid" );
	deepEqual( Stem("endividamento"), "endivid" );
	deepEqual( Stem("endividando"), "endivid" );
	deepEqual( Stem("endocrinologia"), "endocrinolog" );
	deepEqual( Stem("endocrinologista"), "endocrinolog" );
	deepEqual( Stem("endocrinologistas"), "endocrinolog" );
	deepEqual( Stem("endométrio"), "endométri" );
	deepEqual( Stem("endometriose"), "endometrios" );
	deepEqual( Stem("endorfina"), "endorfin" );
	deepEqual( Stem("endoscopia"), "endoscop" );
	deepEqual( Stem("endossa"), "endoss" );
	deepEqual( Stem("endossado"), "endoss" );
	deepEqual( Stem("endress"), "endress" );
	deepEqual( Stem("eneide"), "eneid" );
	deepEqual( Stem("energética"), "energét" );
	deepEqual( Stem("energéticas"), "energét" );
	deepEqual( Stem("energético"), "energét" );
	deepEqual( Stem("energia"), "energ" );
	deepEqual( Stem("energias"), "energ" );
	deepEqual( Stem("enérgicas"), "enérg" );
	deepEqual( Stem("energiza"), "energiz" );
	deepEqual( Stem("energização"), "energiz" );
	deepEqual( Stem("energizações"), "energiz" );
	deepEqual( Stem("energizado"), "energiz" );
	deepEqual( Stem("eneu"), "eneu" );
	deepEqual( Stem("enfadonho"), "enfadonh" );
	deepEqual( Stem("enfant"), "enfant" );
	deepEqual( Stem("enfarta"), "enfart" );
	deepEqual( Stem("enfartado"), "enfart" );
	deepEqual( Stem("ênfase"), "ênfas" );
	deepEqual( Stem("enfático"), "enfát" );
	deepEqual( Stem("enfatiza"), "enfatiz" );
	deepEqual( Stem("enfatizados"), "enfatiz" );
	deepEqual( Stem("enfatizar"), "enfatiz" );
	deepEqual( Stem("enfatizo"), "enfatiz" );
	deepEqual( Stem("enfatizou"), "enfatiz" );
	deepEqual( Stem("enfeita"), "enfeit" );
	deepEqual( Stem("enfeitada"), "enfeit" );
	deepEqual( Stem("enfeitar"), "enfeit" );
	deepEqual( Stem("enfeite"), "enfeit" );
	deepEqual( Stem("enfeites"), "enfeit" );
	deepEqual( Stem("enfeitiçado"), "enfeitic" );
	deepEqual( Stem("enfermas"), "enferm" );
	deepEqual( Stem("enfermeira"), "enfermeir" );
	deepEqual( Stem("enfermeiras"), "enfermeir" );
	deepEqual( Stem("enfermeiros"), "enfermeir" );
	deepEqual( Stem("enfermidade"), "enferm" );
	deepEqual( Stem("enfermidades"), "enferm" );
	deepEqual( Stem("enferrujadas"), "enferruj" );
	deepEqual( Stem("enfia"), "enfi" );
	deepEqual( Stem("enfiam"), "enfi" );
	deepEqual( Stem("enfiar"), "enfi" );
	deepEqual( Stem("enfileirá"), "enfil" );
	deepEqual( Stem("enfileirados"), "enfileir" );
	deepEqual( Stem("enfim"), "enfim" );
	deepEqual( Stem("enfiou"), "enfi" );
	deepEqual( Stem("enfisema"), "enfisem" );
	deepEqual( Stem("enfocando"), "enfoc" );
	deepEqual( Stem("enfocou"), "enfoc" );
	deepEqual( Stem("enfoque"), "enfoqu" );
	deepEqual( Stem("enforcado"), "enforc" );
	deepEqual( Stem("enforcou"), "enforc" );
	deepEqual( Stem("enfraquecem"), "enfraquec" );
	deepEqual( Stem("enfraquecendo"), "enfraquec" );
	deepEqual( Stem("enfraquecimento"), "enfraquec" );
	deepEqual( Stem("enfrenta"), "enfrent" );
	deepEqual( Stem("enfrentada"), "enfrent" );
	deepEqual( Stem("enfrentado"), "enfrent" );
	deepEqual( Stem("enfrentam"), "enfrent" );
	deepEqual( Stem("enfrentamos"), "enfrent" );
	deepEqual( Stem("enfrentando"), "enfrent" );
	deepEqual( Stem("enfrentar"), "enfrent" );
	deepEqual( Stem("enfrentará"), "enfrent" );
	deepEqual( Stem("enfrentaram"), "enfrent" );
	deepEqual( Stem("enfrentarmos"), "enfrent" );
	deepEqual( Stem("enfrentava"), "enfrent" );
	deepEqual( Stem("enfrente"), "enfrent" );
	deepEqual( Stem("enfrentei"), "enfrent" );
	deepEqual( Stem("enfrento"), "enfrent" );
	deepEqual( Stem("enfrentou"), "enfrent" );
	deepEqual( Stem("enfurecer"), "enfurec" );
	deepEqual( Stem("engabelar"), "engabel" );
	deepEqual( Stem("engajadas"), "engaj" );
	deepEqual( Stem("engajado"), "engaj" );
	deepEqual( Stem("engajados"), "engaj" );
	deepEqual( Stem("engajamento"), "engaj" );
	deepEqual( Stem("engajamentos"), "engaj" );
	deepEqual( Stem("engajou"), "engaj" );
	deepEqual( Stem("engalfinham"), "engalfinh" );
	deepEqual( Stem("engalfinhar"), "engalfinh" );
	deepEqual( Stem("engana"), "engan" );
	deepEqual( Stem("enganação"), "engan" );
	deepEqual( Stem("enganada"), "engan" );
	deepEqual( Stem("enganados"), "engan" );
	deepEqual( Stem("engano"), "engan" );
	deepEqual( Stem("enganosa"), "engan" );
	deepEqual( Stem("enganou"), "engan" );
	deepEqual( Stem("engarrafa"), "engarraf" );
	deepEqual( Stem("engarrafadas"), "engarraf" );
	deepEqual( Stem("engarrafado"), "engarraf" );
	deepEqual( Stem("engarrafados"), "engarraf" );
	deepEqual( Stem("engarrafamento"), "engarraf" );
	deepEqual( Stem("engarrafamentos"), "engarraf" );
	deepEqual( Stem("engasga"), "engasg" );
	deepEqual( Stem("engatado"), "engat" );
	deepEqual( Stem("engatinhando"), "engatinh" );
	deepEqual( Stem("engatinhava"), "engatinh" );
	deepEqual( Stem("engendrar"), "engendr" );
	deepEqual( Stem("engenharia"), "engenh" );
	deepEqual( Stem("engenheira"), "engenheir" );
	deepEqual( Stem("engenheiro"), "engenheir" );
	deepEqual( Stem("engenheiros"), "engenheir" );
	deepEqual( Stem("engenho"), "engenh" );
	deepEqual( Stem("engenhocas"), "engenhoc" );
	deepEqual( Stem("engenhosidade"), "engenhos" );
	deepEqual( Stem("engenhoso"), "engenh" );
	deepEqual( Stem("england"), "england" );
	deepEqual( Stem("engloba"), "englob" );
	deepEqual( Stem("englobam"), "englob" );
	deepEqual( Stem("englobará"), "englob" );
	deepEqual( Stem("engolido"), "engol" );
	deepEqual( Stem("engolidos"), "engol" );
	deepEqual( Stem("engolir"), "engol" );
	deepEqual( Stem("engoliram"), "engol" );
	deepEqual( Stem("engoliu"), "engol" );
	deepEqual( Stem("engomadinho"), "engomadinh" );
	deepEqual( Stem("engorda"), "engord" );
	deepEqual( Stem("engordado"), "engord" );
	deepEqual( Stem("engordam"), "engord" );
	deepEqual( Stem("engordando"), "engord" );
	deepEqual( Stem("engordar"), "engord" );
	deepEqual( Stem("engordarem"), "engord" );
	deepEqual( Stem("engordava"), "engord" );
	deepEqual( Stem("engordavam"), "engord" );
	deepEqual( Stem("engordei"), "engord" );
	deepEqual( Stem("engordo"), "engord" );
	deepEqual( Stem("engordou"), "engord" );
	deepEqual( Stem("engraçada"), "engrac" );
	deepEqual( Stem("engraçadas"), "engrac" );
	deepEqual( Stem("engraçadíssima"), "engraçadíssim" );
	deepEqual( Stem("engraçadíssimo"), "engraçadíssim" );
	deepEqual( Stem("engraçado"), "engrac" );
	deepEqual( Stem("engrandecer"), "engrandec" );
	deepEqual( Stem("engrandecido"), "engrandec" );
	deepEqual( Stem("engravatados"), "engravat" );
	deepEqual( Stem("engravidar"), "engravid" );
	deepEqual( Stem("engravidaram"), "engravid" );
	deepEqual( Stem("engravidei"), "engravid" );
	deepEqual( Stem("engravidou"), "engravid" );
	deepEqual( Stem("engraxate"), "engraxat" );
	deepEqual( Stem("engrenagem"), "engrenag" );
	deepEqual( Stem("engrenagens"), "engrenagens" );
	deepEqual( Stem("engrenar"), "engren" );
	deepEqual( Stem("engrossa"), "engross" );
	deepEqual( Stem("enguiçado"), "enguic" );
	deepEqual( Stem("engulo"), "engul" );
	deepEqual( Stem("enigma"), "enigm" );
	deepEqual( Stem("enigmas"), "enigm" );
	deepEqual( Stem("enigmático"), "enigmát" );
	deepEqual( Stem("enjoada"), "enjo" );
	deepEqual( Stem("enjôo"), "enjô" );
	deepEqual( Stem("enlace"), "enlac" );
	deepEqual( Stem("enlouquece"), "enlouquec" );
	deepEqual( Stem("enlouquecer"), "enlouquec" );
	deepEqual( Stem("enlouqueceram"), "enlouquec" );
	deepEqual( Stem("enlouqueceu"), "enlouquec" );
	deepEqual( Stem("enlouqueciam"), "enlouquec" );
	deepEqual( Stem("enlouquecido"), "enlouquec" );
	deepEqual( Stem("enobrece"), "enobrec" );
	deepEqual( Stem("enola"), "enol" );
	deepEqual( Stem("enólogo"), "enólog" );
	deepEqual( Stem("enorme"), "enorm" );
	deepEqual( Stem("enormemente"), "enorm" );
	deepEqual( Stem("enormes"), "enorm" );
	deepEqual( Stem("enough"), "enough" );
	deepEqual( Stem("enquadra"), "enquadr" );
	deepEqual( Stem("enquadradas"), "enquadr" );
	deepEqual( Stem("enquadrar"), "enquadr" );
	deepEqual( Stem("enquadrou"), "enquadr" );
	deepEqual( Stem("enquanto"), "enquant" );
	deepEqual( Stem("enquete"), "enquet" );
	deepEqual( Stem("enraivecessem"), "enraivec" );
	deepEqual( Stem("enrascada"), "enrasc" );
	deepEqual( Stem("enredo"), "enred" );
	deepEqual( Stem("enredos"), "enred" );
	deepEqual( Stem("enriquece"), "enriquec" );
	deepEqual( Stem("enriquecer"), "enriquec" );
	deepEqual( Stem("enriqueceram"), "enriquec" );
	deepEqual( Stem("enriqueceu"), "enriquec" );
	deepEqual( Stem("enriquecido"), "enriquec" );
	deepEqual( Stem("enrolada"), "enrol" );
	deepEqual( Stem("enrolado"), "enrol" );
	deepEqual( Stem("enrolar"), "enrol" );
	deepEqual( Stem("enrolaram"), "enrol" );
	deepEqual( Stem("enroscado"), "enrosc" );
	deepEqual( Stem("enroscando"), "enrosc" );
	deepEqual( Stem("enrustido"), "enrust" );
	deepEqual( Stem("enrustidos"), "enrust" );
	deepEqual( Stem("ensaiar"), "ensai" );
	deepEqual( Stem("ensaiaram"), "ensai" );
	deepEqual( Stem("ensaiava"), "ensai" );
	deepEqual( Stem("ensaio"), "ensai" );
	deepEqual( Stem("ensaios"), "ensai" );
	deepEqual( Stem("ensaiou"), "ensai" );
	deepEqual( Stem("ensaísmo"), "ensaísm" );
	deepEqual( Stem("ensaísta"), "ensaíst" );
	deepEqual( Stem("ensaístas"), "ensaíst" );
	deepEqual( Stem("ensangüentado"), "ensangüent" );
	deepEqual( Stem("ensina"), "ensin" );
	deepEqual( Stem("ensiná"), "ensin" );
	deepEqual( Stem("ensinam"), "ensin" );
	deepEqual( Stem("ensinamentos"), "ensin" );
	deepEqual( Stem("ensinamos"), "ensin" );
	deepEqual( Stem("ensinando"), "ensin" );
	deepEqual( Stem("ensinar"), "ensin" );
	deepEqual( Stem("ensinavam"), "ensin" );
	deepEqual( Stem("ensino"), "ensin" );
	deepEqual( Stem("ensinou"), "ensin" );
	deepEqual( Stem("ensolarado"), "ensolar" );
	deepEqual( Stem("ensurdecedor"), "ensurdecedor" );
	deepEqual( Stem("ensurdecedora"), "ensurdecedor" );
	deepEqual( Stem("entalar"), "ental" );
	deepEqual( Stem("entanto"), "entant" );
	deepEqual( Stem("então"), "entã" );
	deepEqual( Stem("entardecer"), "entardec" );
	deepEqual( Stem("ente"), "ente" );
	deepEqual( Stem("entediante"), "entedi" );
	deepEqual( Stem("entenda"), "entend" );
	deepEqual( Stem("entende"), "entend" );
	deepEqual( Stem("entendê"), "entend" );
	deepEqual( Stem("entendedor"), "entendedor" );
	deepEqual( Stem("entendem"), "entend" );
	deepEqual( Stem("entendemos"), "entend" );
	deepEqual( Stem("entendendo"), "entend" );
	deepEqual( Stem("entender"), "entend" );
	deepEqual( Stem("entenderam"), "entend" );
	deepEqual( Stem("entenderão"), "entend" );
	deepEqual( Stem("entenderem"), "entend" );
	deepEqual( Stem("entenderia"), "entend" );
	deepEqual( Stem("entenderiam"), "entend" );
	deepEqual( Stem("entendesse"), "entend" );
	deepEqual( Stem("entendeu"), "entend" );
	deepEqual( Stem("entendi"), "entend" );
	deepEqual( Stem("entendia"), "entend" );
	deepEqual( Stem("entendiadas"), "entendi" );
	deepEqual( Stem("entendíamos"), "entend" );
	deepEqual( Stem("entendida"), "entend" );
	deepEqual( Stem("entendido"), "entend" );
	deepEqual( Stem("entendidos"), "entend" );
	deepEqual( Stem("entendimento"), "entend" );
	deepEqual( Stem("entendo"), "entend" );
	deepEqual( Stem("enterprise"), "enterpris" );
	deepEqual( Stem("enterrado"), "enterr" );
	deepEqual( Stem("enterrados"), "enterr" );
	deepEqual( Stem("enterrar"), "enterr" );
	deepEqual( Stem("enterraria"), "enterr" );
	deepEqual( Stem("enterro"), "enterr" );
	deepEqual( Stem("enterros"), "enterr" );
	deepEqual( Stem("entidade"), "entidad" );
	deepEqual( Stem("entidades"), "entidad" );
	deepEqual( Stem("entoa"), "ento" );
	deepEqual( Stem("entoado"), "ento" );
	deepEqual( Stem("entoam"), "ento" );
	deepEqual( Stem("entoando"), "ento" );
	deepEqual( Stem("entoar"), "ento" );
	deepEqual( Stem("entonação"), "enton" );
	deepEqual( Stem("entope"), "entop" );
	deepEqual( Stem("entopem"), "entop" );
	deepEqual( Stem("entorno"), "entorn" );
	deepEqual( Stem("entorpecente"), "entorpecent" );
	deepEqual( Stem("entorpecentes"), "entorpecent" );
	deepEqual( Stem("entorpecido"), "entorpec" );
	deepEqual( Stem("entortado"), "entort" );
	deepEqual( Stem("entortava"), "entort" );
	deepEqual( Stem("entra"), "entra" );
	deepEqual( Stem("entrada"), "entrad" );
	deepEqual( Stem("entrado"), "entrad" );
	deepEqual( Stem("entram"), "entram" );
	deepEqual( Stem("entramos"), "entram" );
	deepEqual( Stem("entrando"), "entrand" );
	deepEqual( Stem("entranhas"), "entranh" );
	deepEqual( Stem("entrar"), "entrar" );
	deepEqual( Stem("entrará"), "entrar" );
	deepEqual( Stem("entraram"), "entrar" );
	deepEqual( Stem("entraremos"), "entrar" );
	deepEqual( Stem("entraria"), "entrar" );
	deepEqual( Stem("entrariam"), "entrar" );
	deepEqual( Stem("entrarmos"), "entrarm" );
	deepEqual( Stem("entrassem"), "entrass" );
	deepEqual( Stem("entrava"), "entrav" );
	deepEqual( Stem("entravam"), "entrav" );
	deepEqual( Stem("entraves"), "entrav" );
	deepEqual( Stem("entre"), "entre" );
	deepEqual( Stem("entrecortado"), "entrecort" );
	deepEqual( Stem("entrega"), "entreg" );
	deepEqual( Stem("entregá"), "entreg" );
	deepEqual( Stem("entregado"), "entreg" );
	deepEqual( Stem("entregador"), "entreg" );
	deepEqual( Stem("entregadores"), "entreg" );
	deepEqual( Stem("entregam"), "entreg" );
	deepEqual( Stem("entregando"), "entreg" );
	deepEqual( Stem("entregar"), "entreg" );
	deepEqual( Stem("entregaram"), "entreg" );
	deepEqual( Stem("entregas"), "entreg" );
	deepEqual( Stem("entregasse"), "entreg" );
	deepEqual( Stem("entregou"), "entreg" );
	deepEqual( Stem("entregue"), "entreg" );
	deepEqual( Stem("entreguei"), "entregu" );
	deepEqual( Stem("entregues"), "entregu" );
	deepEqual( Stem("entrei"), "entre" );
	deepEqual( Stem("entrem"), "entrem" );
	deepEqual( Stem("entrepostos"), "entrepost" );
	deepEqual( Stem("entretanto"), "entretant" );
	deepEqual( Stem("entretenimento"), "entreten" );
	deepEqual( Stem("entrevista"), "entrev" );
	deepEqual( Stem("entrevistá"), "entrevist" );
	deepEqual( Stem("entrevistadas"), "entrevist" );
	deepEqual( Stem("entrevistado"), "entrevist" );
	deepEqual( Stem("entrevistador"), "entrevist" );
	deepEqual( Stem("entrevistados"), "entrevist" );
	deepEqual( Stem("entrevistar"), "entrevist" );
	deepEqual( Stem("entrevistas"), "entrev" );
	deepEqual( Stem("entrevistou"), "entrevist" );
	deepEqual( Stem("entrincheirados"), "entrincheir" );
	deepEqual( Stem("entristece"), "entristec" );
	deepEqual( Stem("entristeceu"), "entristec" );
	deepEqual( Stem("entro"), "entro" );
	deepEqual( Stem("entroncamentos"), "entronc" );
	deepEqual( Stem("entrosou"), "entros" );
	deepEqual( Stem("entrou"), "entrou" );
	deepEqual( Stem("entulhados"), "entulh" );
	deepEqual( Stem("entulhos"), "entulh" );
	deepEqual( Stem("entupi"), "entup" );
	deepEqual( Stem("entupida"), "entup" );
	deepEqual( Stem("entupido"), "entup" );
	deepEqual( Stem("entupimento"), "entup" );
	deepEqual( Stem("entupindo"), "entup" );
	deepEqual( Stem("entupir"), "entup" );
	deepEqual( Stem("entupiram"), "entup" );
	deepEqual( Stem("entusiasma"), "entusiasm" );
	deepEqual( Stem("entusiasmada"), "entusiasm" );
	deepEqual( Stem("entusiasmado"), "entusiasm" );
	deepEqual( Stem("entusiasmo"), "entusiasm" );
	deepEqual( Stem("entusiasmou"), "entusiasm" );
	deepEqual( Stem("entusiasta"), "entusiast" );
	deepEqual( Stem("enumera"), "enum" );
	deepEqual( Stem("enunciando"), "enunc" );
	deepEqual( Stem("envelheçam"), "envelhec" );
	deepEqual( Stem("envelhece"), "envelhec" );
	deepEqual( Stem("envelhecem"), "envelhec" );
	deepEqual( Stem("envelhecer"), "envelhec" );
	deepEqual( Stem("envelheceram"), "envelhec" );
	deepEqual( Stem("envelhecida"), "envelhec" );
	deepEqual( Stem("envelhecidos"), "envelhec" );
	deepEqual( Stem("envelhecimento"), "envelhec" );
	deepEqual( Stem("envelheço"), "envelhec" );
	deepEqual( Stem("envelope"), "envelop" );
	deepEqual( Stem("envenenaram"), "envenen" );
	deepEqual( Stem("envenenou"), "envenen" );
	deepEqual( Stem("envergonhado"), "envergonh" );
	deepEqual( Stem("envergonham"), "envergonh" );
	deepEqual( Stem("envergonhem"), "envergonh" );
	deepEqual( Stem("envia"), "envi" );
	deepEqual( Stem("enviada"), "envi" );
	deepEqual( Stem("enviado"), "envi" );
	deepEqual( Stem("enviando"), "envi" );
	deepEqual( Stem("enviar"), "envi" );
	deepEqual( Stem("envidraçada"), "envidrac" );
	deepEqual( Stem("enviei"), "envi" );
	deepEqual( Stem("enviesados"), "envies" );
	deepEqual( Stem("envio"), "envi" );
	deepEqual( Stem("enviou"), "envi" );
	deepEqual( Stem("envira"), "envir" );
	deepEqual( Stem("envoltos"), "envolt" );
	deepEqual( Stem("envolve"), "envolv" );
	deepEqual( Stem("envolvem"), "envolv" );
	deepEqual( Stem("envolvendo"), "envolv" );
	deepEqual( Stem("envolver"), "envolv" );
	deepEqual( Stem("envolveram"), "envolv" );
	deepEqual( Stem("envolveu"), "envolv" );
	deepEqual( Stem("envolvia"), "envolv" );
	deepEqual( Stem("envolviam"), "envolv" );
	deepEqual( Stem("envolvida"), "envolv" );
	deepEqual( Stem("envolvidas"), "envolv" );
	deepEqual( Stem("envolvido"), "envolv" );
	deepEqual( Stem("envolvidos"), "envolv" );
	deepEqual( Stem("envolvimento"), "envolv" );
	deepEqual( Stem("enxada"), "enxad" );
	deepEqual( Stem("enxaqueca"), "enxaquec" );
	deepEqual( Stem("enxerga"), "enxerg" );
	deepEqual( Stem("enxergam"), "enxerg" );
	deepEqual( Stem("enxergando"), "enxerg" );
	deepEqual( Stem("enxergar"), "enxerg" );
	deepEqual( Stem("enxergarem"), "enxerg" );
	deepEqual( Stem("enxerto"), "enxert" );
	deepEqual( Stem("enxugamento"), "enxug" );
	deepEqual( Stem("enxugamos"), "enxug" );
	deepEqual( Stem("enxugasse"), "enxug" );
	deepEqual( Stem("enxurrada"), "enxurr" );
	deepEqual( Stem("enxuta"), "enxut" );
	deepEqual( Stem("enxutas"), "enxut" );
	deepEqual( Stem("eny"), "eny" );
	deepEqual( Stem("enya"), "enya" );
	deepEqual( Stem("enzima"), "enzim" );
	deepEqual( Stem("epcot"), "epcot" );
	deepEqual( Stem("epega"), "epeg" );
	deepEqual( Stem("epelman"), "epelman" );
	deepEqual( Stem("ephigênia"), "ephigên" );
	deepEqual( Stem("epi"), "epi" );
	deepEqual( Stem("epicentro"), "epicentr" );
	deepEqual( Stem("épicos"), "épic" );
	deepEqual( Stem("epidemia"), "epidem" );
	deepEqual( Stem("epifania"), "epifan" );
	deepEqual( Stem("episódio"), "episódi" );
	deepEqual( Stem("episódios"), "episódi" );
	deepEqual( Stem("epiteliais"), "epiteli" );
	deepEqual( Stem("epíteto"), "epítet" );
	deepEqual( Stem("epoca"), "epoc" );
	deepEqual( Stem("época"), "époc" );
	deepEqual( Stem("épocas"), "époc" );
	deepEqual( Stem("epopéia"), "epop" );
	deepEqual( Stem("epopéias"), "epop" );
	deepEqual( Stem("equação"), "equaçã" );
	deepEqual( Stem("equador"), "equador" );
	deepEqual( Stem("equalizador"), "equaliz" );
	deepEqual( Stem("equatorial"), "equatorial" );
	deepEqual( Stem("equilibra"), "equilibr" );
	deepEqual( Stem("equilibrá"), "equilibr" );
	deepEqual( Stem("equilibrada"), "equilibr" );
	deepEqual( Stem("equilibradas"), "equilibr" );
	deepEqual( Stem("equilibrados"), "equilibr" );
	deepEqual( Stem("equilibrar"), "equilibr" );
	deepEqual( Stem("equilíbrio"), "equilíbri" );
	deepEqual( Stem("equimoses"), "equimos" );
	deepEqual( Stem("equinócio"), "equinóci" );
	deepEqual( Stem("equinócios"), "equinóci" );
	deepEqual( Stem("equipadas"), "equip" );
	deepEqual( Stem("equipado"), "equip" );
	deepEqual( Stem("equipados"), "equip" );
	deepEqual( Stem("equipamento"), "equip" );
	deepEqual( Stem("equipamentos"), "equip" );
	deepEqual( Stem("equipe"), "equip" );
	deepEqual( Stem("equipes"), "equip" );
	deepEqual( Stem("equipou"), "equip" );
	deepEqual( Stem("eqüitativa"), "eqüit" );
	deepEqual( Stem("equity"), "equity" );
	deepEqual( Stem("equivale"), "equival" );
	deepEqual( Stem("equivalência"), "equivalent" );
	deepEqual( Stem("equivalente"), "equivalent" );
	deepEqual( Stem("equivalentes"), "equivalent" );
	deepEqual( Stem("equivaler"), "equival" );
	deepEqual( Stem("equivaleria"), "equival" );
	deepEqual( Stem("equivalia"), "equival" );
	deepEqual( Stem("equivocada"), "equivoc" );
	deepEqual( Stem("equivocadas"), "equivoc" );
	deepEqual( Stem("equivocados"), "equivoc" );
	deepEqual( Stem("equívoco"), "equívoc" );
	deepEqual( Stem("equívocos"), "equívoc" );
	deepEqual( Stem("era"), "era" );
	deepEqual( Stem("eram"), "eram" );
	deepEqual( Stem("éramos"), "éram" );
	deepEqual( Stem("erário"), "erári" );
	deepEqual( Stem("eras"), "eras" );
	deepEqual( Stem("ereção"), "ereçã" );
	deepEqual( Stem("eremita"), "eremit" );
	deepEqual( Stem("ergométrica"), "ergométr" );
	deepEqual( Stem("erguê"), "ergu" );
	deepEqual( Stem("erguendo"), "ergu" );
	deepEqual( Stem("erguer"), "ergu" );
	deepEqual( Stem("ergueram"), "ergu" );
	deepEqual( Stem("ergueu"), "ergu" );
	deepEqual( Stem("erguida"), "ergu" );
	deepEqual( Stem("erguido"), "ergu" );
	deepEqual( Stem("eric"), "eric" );
	deepEqual( Stem("erica"), "eric" );
	deepEqual( Stem("erich"), "erich" );
	deepEqual( Stem("eris"), "eris" );
	deepEqual( Stem("erisvalda"), "erisvald" );
	deepEqual( Stem("erkki"), "erkki" );
	deepEqual( Stem("ermelino"), "ermelin" );
	deepEqual( Stem("ermírio"), "ermíri" );
	deepEqual( Stem("ermo"), "ermo" );
	deepEqual( Stem("ermos"), "ermos" );
	deepEqual( Stem("ernesto"), "ernest" );
	deepEqual( Stem("eron"), "eron" );
	deepEqual( Stem("eronivaldo"), "eronivald" );
	deepEqual( Stem("eros"), "eros" );
	deepEqual( Stem("erosão"), "erosã" );
	deepEqual( Stem("erótica"), "erót" );
	deepEqual( Stem("eróticas"), "erót" );
	deepEqual( Stem("erótico"), "erót" );
	deepEqual( Stem("eróticos"), "erót" );
	deepEqual( Stem("erotildes"), "erotild" );
	deepEqual( Stem("erotismo"), "erot" );
	deepEqual( Stem("erotização"), "erotiz" );
	deepEqual( Stem("erotizada"), "erotiz" );
	deepEqual( Stem("erra"), "erra" );
	deepEqual( Stem("errada"), "errad" );
	deepEqual( Stem("erradas"), "errad" );
	deepEqual( Stem("erradicação"), "erradic" );
	deepEqual( Stem("erradicar"), "erradic" );
	deepEqual( Stem("errado"), "errad" );
	deepEqual( Stem("errados"), "errad" );
	deepEqual( Stem("erramos"), "erram" );
	deepEqual( Stem("errante"), "errant" );
	deepEqual( Stem("errar"), "errar" );
	deepEqual( Stem("erraram"), "errar" );
	deepEqual( Stem("errei"), "erre" );
	deepEqual( Stem("errinho"), "errinh" );
	deepEqual( Stem("erro"), "erro" );
	deepEqual( Stem("erroneamente"), "erron" );
	deepEqual( Stem("erros"), "erros" );
	deepEqual( Stem("errou"), "errou" );
	deepEqual( Stem("eruditas"), "erudit" );
	deepEqual( Stem("erudito"), "erudit" );
	deepEqual( Stem("erundina"), "erundin" );
	deepEqual( Stem("erupções"), "erupçõ" );
	deepEqual( Stem("erva"), "erva" );
	deepEqual( Stem("ervas"), "ervas" );
	deepEqual( Stem("ervilha"), "ervilh" );
	deepEqual( Stem("es"), "es" );
	deepEqual( Stem("esa"), "esa" );
	deepEqual( Stem("esaú"), "esaú" );
	deepEqual( Stem("esbaforido"), "esbafor" );
	deepEqual( Stem("esbanja"), "esbanj" );
	deepEqual( Stem("esbarra"), "esbarr" );
	deepEqual( Stem("esbarram"), "esbarr" );
	deepEqual( Stem("esbarrando"), "esbarr" );
	deepEqual( Stem("esbarrou"), "esbarr" );
	deepEqual( Stem("esbelta"), "esbelt" );
	deepEqual( Stem("esbeltos"), "esbelt" );
	deepEqual( Stem("esboça"), "esboc" );
	deepEqual( Stem("esboçada"), "esboc" );
	deepEqual( Stem("esboçava"), "esboc" );
	deepEqual( Stem("esboço"), "esboc" );
	deepEqual( Stem("esboços"), "esboc" );
	deepEqual( Stem("esboçou"), "esboc" );
	deepEqual( Stem("esborrachou"), "esborrach" );
	deepEqual( Stem("esbugalhados"), "esbugalh" );
	deepEqual( Stem("escabroso"), "escabr" );
	deepEqual( Stem("escadarias"), "escad" );
	deepEqual( Stem("escadas"), "escad" );
	deepEqual( Stem("escafandro"), "escafandr" );
	deepEqual( Stem("escafedeu"), "escafed" );
	deepEqual( Stem("escala"), "escal" );
	deepEqual( Stem("escalá"), "escal" );
	deepEqual( Stem("escalada"), "escal" );
	deepEqual( Stem("escaladas"), "escal" );
	deepEqual( Stem("escalado"), "escal" );
	deepEqual( Stem("escalador"), "escal" );
	deepEqual( Stem("escalam"), "escal" );
	deepEqual( Stem("escalante"), "escal" );
	deepEqual( Stem("escalão"), "escalã" );
	deepEqual( Stem("escalar"), "escal" );
	deepEqual( Stem("escalas"), "escal" );
	deepEqual( Stem("escalava"), "escal" );
	deepEqual( Stem("escaldante"), "escald" );
	deepEqual( Stem("escalou"), "escal" );
	deepEqual( Stem("escancara"), "escanc" );
	deepEqual( Stem("escancarada"), "escancar" );
	deepEqual( Stem("escancaradas"), "escancar" );
	deepEqual( Stem("escancarou"), "escancar" );
	deepEqual( Stem("escandalizando"), "escandaliz" );
	deepEqual( Stem("escandalizou"), "escandaliz" );
	deepEqual( Stem("escândalo"), "escândal" );
	deepEqual( Stem("escândalos"), "escândal" );
	deepEqual( Stem("escandalosamente"), "escandal" );
	deepEqual( Stem("escandinávia"), "escandináv" );
	deepEqual( Stem("escanteio"), "escantei" );
	deepEqual( Stem("escapa"), "escap" );
	deepEqual( Stem("escapadas"), "escap" );
	deepEqual( Stem("escapado"), "escap" );
	deepEqual( Stem("escapam"), "escap" );
	deepEqual( Stem("escapar"), "escap" );
	deepEqual( Stem("escapariam"), "escap" );
	deepEqual( Stem("escapavam"), "escap" );
	deepEqual( Stem("escape"), "escap" );
	deepEqual( Stem("escapou"), "escap" );
	deepEqual( Stem("escapular"), "escapul" );
	deepEqual( Stem("escaramuças"), "escaramuc" );
	deepEqual( Stem("escarpas"), "escarp" );
	deepEqual( Stem("escassa"), "escass" );
	deepEqual( Stem("escassez"), "escassez" );
	deepEqual( Stem("escasso"), "escass" );
	deepEqual( Stem("escassos"), "escass" );
	deepEqual( Stem("escatológica"), "escatológ" );
	deepEqual( Stem("escavações"), "escav" );
	deepEqual( Stem("escavadas"), "escav" );
	deepEqual( Stem("escavadeira"), "escavadeir" );
	deepEqual( Stem("esclareça"), "esclarec" );
	deepEqual( Stem("esclarece"), "esclarec" );
	deepEqual( Stem("esclarecedor"), "esclarecedor" );
	deepEqual( Stem("esclarecedora"), "esclarecedor" );
	deepEqual( Stem("esclarecem"), "esclarec" );
	deepEqual( Stem("esclarecer"), "esclarec" );
	deepEqual( Stem("esclareceu"), "esclarec" );
	deepEqual( Stem("esclarecida"), "esclarec" );
	deepEqual( Stem("esclarecido"), "esclarec" );
	deepEqual( Stem("esclarecidos"), "esclarec" );
	deepEqual( Stem("esclarecimento"), "esclarec" );
	deepEqual( Stem("esclerosadas"), "escleros" );
	deepEqual( Stem("esclerose"), "escleros" );
	deepEqual( Stem("escoados"), "esco" );
	deepEqual( Stem("escoamento"), "escoament" );
	deepEqual( Stem("escoar"), "esco" );
	deepEqual( Stem("escobar"), "escob" );
	deepEqual( Stem("escocês"), "escocês" );
	deepEqual( Stem("escócia"), "escóc" );
	deepEqual( Stem("escola"), "escol" );
	deepEqual( Stem("escoladas"), "escol" );
	deepEqual( Stem("escolar"), "escol" );
	deepEqual( Stem("escolares"), "escol" );
	deepEqual( Stem("escolaridade"), "escolar" );
	deepEqual( Stem("escolas"), "escol" );
	deepEqual( Stem("escolástica"), "escolást" );
	deepEqual( Stem("escolha"), "escolh" );
	deepEqual( Stem("escolhas"), "escolh" );
	deepEqual( Stem("escolhe"), "escolh" );
	deepEqual( Stem("escolhê"), "escolh" );
	deepEqual( Stem("escolhem"), "escolh" );
	deepEqual( Stem("escolhendo"), "escolh" );
	deepEqual( Stem("escolher"), "escolh" );
	deepEqual( Stem("escolherem"), "escolh" );
	deepEqual( Stem("escolheria"), "escolh" );
	deepEqual( Stem("escolheriam"), "escolh" );
	deepEqual( Stem("escolheu"), "escolh" );
	deepEqual( Stem("escolhi"), "escolh" );
	deepEqual( Stem("escolhida"), "escolh" );
	deepEqual( Stem("escolhidas"), "escolh" );
	deepEqual( Stem("escolhido"), "escolh" );
	deepEqual( Stem("escolhidos"), "escolh" );
	deepEqual( Stem("escolho"), "escolh" );
	deepEqual( Stem("escolinha"), "escolinh" );
	deepEqual( Stem("escoliose"), "escolios" );
	deepEqual( Stem("escolta"), "escolt" );
	deepEqual( Stem("escoltada"), "escolt" );
	deepEqual( Stem("esconde"), "escond" );
	deepEqual( Stem("escondem"), "escond" );
	deepEqual( Stem("escondemos"), "escond" );
	deepEqual( Stem("escondendo"), "escond" );
	deepEqual( Stem("esconder"), "escond" );
	deepEqual( Stem("escondera"), "escond" );
	deepEqual( Stem("escondeu"), "escond" );
	deepEqual( Stem("escondia"), "escond" );
	deepEqual( Stem("escondiam"), "escond" );
	deepEqual( Stem("escondida"), "escond" );
	deepEqual( Stem("escondidas"), "escond" );
	deepEqual( Stem("escondido"), "escond" );
	deepEqual( Stem("escondidos"), "escond" );
	deepEqual( Stem("escondo"), "escond" );
	deepEqual( Stem("escorar"), "escor" );
	deepEqual( Stem("escorbuto"), "escorbut" );
	deepEqual( Stem("escoriações"), "escori" );
	deepEqual( Stem("escorpião"), "escorpiã" );
	deepEqual( Stem("escort"), "escort" );
	deepEqual( Stem("escóssia"), "escóss" );
	deepEqual( Stem("escova"), "escov" );
	deepEqual( Stem("escovar"), "escov" );
	deepEqual( Stem("escovas"), "escov" );
	deepEqual( Stem("escrachada"), "escrach" );
	deepEqual( Stem("escrava"), "escrav" );
	deepEqual( Stem("escravatura"), "escravatur" );
	deepEqual( Stem("escravidão"), "escravidã" );
	deepEqual( Stem("escravo"), "escrav" );
	deepEqual( Stem("escravos"), "escrav" );
	deepEqual( Stem("escreve"), "escrev" );
	deepEqual( Stem("escrevem"), "escrev" );
	deepEqual( Stem("escrevendo"), "escrev" );
	deepEqual( Stem("escreventes"), "escrevent" );
	deepEqual( Stem("escrever"), "escrev" );
	deepEqual( Stem("escreveram"), "escrev" );
	deepEqual( Stem("escreveria"), "escrev" );
	deepEqual( Stem("escrevesse"), "escrev" );
	deepEqual( Stem("escreveu"), "escrev" );
	deepEqual( Stem("escrevi"), "escrev" );
	deepEqual( Stem("escrevia"), "escrev" );
	deepEqual( Stem("escreviam"), "escrev" );
	deepEqual( Stem("escrevo"), "escrev" );
	deepEqual( Stem("escrita"), "escrit" );
	deepEqual( Stem("escritas"), "escrit" );
	deepEqual( Stem("escrito"), "escrit" );
	deepEqual( Stem("escritor"), "escritor" );
	deepEqual( Stem("escritora"), "escritor" );
	deepEqual( Stem("escritores"), "escritor" );
	deepEqual( Stem("escritório"), "escritóri" );
	deepEqual( Stem("escritórios"), "escritóri" );
	deepEqual( Stem("escritos"), "escrit" );
	deepEqual( Stem("escritura"), "escritur" );
	deepEqual( Stem("escriturário"), "escriturári" );
	deepEqual( Stem("escrituras"), "escritur" );
	deepEqual( Stem("escrivão"), "escrivã" );
	deepEqual( Stem("escrúpulo"), "escrúpul" );
	deepEqual( Stem("escrúpulos"), "escrúpul" );
	deepEqual( Stem("escrutínio"), "escrutíni" );
	deepEqual( Stem("escudado"), "escud" );
	deepEqual( Stem("escudeira"), "escudeir" );
	deepEqual( Stem("escudeiro"), "escudeir" );
	deepEqual( Stem("escudo"), "escud" );
	deepEqual( Stem("esculacho"), "esculach" );
	deepEqual( Stem("esculhambar"), "esculhamb" );
	deepEqual( Stem("escultor"), "escultor" );
	deepEqual( Stem("escultura"), "escultur" );
	deepEqual( Stem("esculturas"), "escultur" );
	deepEqual( Stem("escura"), "escur" );
	deepEqual( Stem("escuras"), "escur" );
	deepEqual( Stem("escurecendo"), "escurec" );
	deepEqual( Stem("escuridão"), "escuridã" );
	deepEqual( Stem("escuro"), "escur" );
	deepEqual( Stem("escuros"), "escur" );
	deepEqual( Stem("escuta"), "escut" );
	deepEqual( Stem("escutam"), "escut" );
	deepEqual( Stem("escutando"), "escut" );
	deepEqual( Stem("escutar"), "escut" );
	deepEqual( Stem("escutava"), "escut" );
	deepEqual( Stem("esdras"), "esdras" );
	deepEqual( Stem("esdrúxula"), "esdrúxul" );
	deepEqual( Stem("esdrúxulas"), "esdrúxul" );
	deepEqual( Stem("esfaqueada"), "esfaqu" );
	deepEqual( Stem("esfarrapada"), "esfarrap" );
	deepEqual( Stem("esfarrapados"), "esfarrap" );
	deepEqual( Stem("esfera"), "esfer" );
	deepEqual( Stem("esferas"), "esfer" );
	deepEqual( Stem("esférico"), "esfér" );
	deepEqual( Stem("esfolar"), "esfol" );
	deepEqual( Stem("esfolem"), "esfol" );
	deepEqual( Stem("esfoliantes"), "esfoli" );
	deepEqual( Stem("esforçado"), "esforc" );
	deepEqual( Stem("esforçam"), "esforc" );
	deepEqual( Stem("esforçar"), "esforc" );
	deepEqual( Stem("esforçava"), "esforc" );
	deepEqual( Stem("esforce"), "esforc" );
	deepEqual( Stem("esforço"), "esforc" );
	deepEqual( Stem("esforços"), "esforc" );
	deepEqual( Stem("esforçou"), "esforc" );
	deepEqual( Stem("esfriando"), "esfri" );
	deepEqual( Stem("esgarçada"), "esgarc" );
	deepEqual( Stem("esgazeado"), "esgaz" );
	deepEqual( Stem("esgotá"), "esgot" );
	deepEqual( Stem("esgotada"), "esgot" );
	deepEqual( Stem("esgotadas"), "esgot" );
	deepEqual( Stem("esgotado"), "esgot" );
	deepEqual( Stem("esgotam"), "esgot" );
	deepEqual( Stem("esgotamento"), "esgot" );
	deepEqual( Stem("esgotarem"), "esgot" );
	deepEqual( Stem("esgotem"), "esgot" );
	deepEqual( Stem("esgoto"), "esgot" );
	deepEqual( Stem("esgotou"), "esgot" );
	deepEqual( Stem("esgrime"), "esgrim" );
	deepEqual( Stem("esgueirando"), "esgueir" );
	deepEqual( Stem("esmaecer"), "esmaec" );
	deepEqual( Stem("esmaga"), "esmag" );
	deepEqual( Stem("esmagada"), "esmag" );
	deepEqual( Stem("esmagadora"), "esmag" );
	deepEqual( Stem("esmagamento"), "esmag" );
	deepEqual( Stem("esmalte"), "esmalt" );
	deepEqual( Stem("esmaltes"), "esmalt" );
	deepEqual( Stem("esmerado"), "esmer" );
	deepEqual( Stem("esmerilhada"), "esmerilh" );
	deepEqual( Stem("esmero"), "esmer" );
	deepEqual( Stem("esmigalhados"), "esmigalh" );
	deepEqual( Stem("esmola"), "esmol" );
	deepEqual( Stem("esmolas"), "esmol" );
	deepEqual( Stem("esmorece"), "esmorec" );
	deepEqual( Stem("esnobe"), "esnob" );
	deepEqual( Stem("esnobes"), "esnob" );
	deepEqual( Stem("esôfago"), "esôfag" );
	deepEqual( Stem("esotéricas"), "esotér" );
	deepEqual( Stem("espaciais"), "espac" );
	deepEqual( Stem("espacial"), "espacial" );
	deepEqual( Stem("espaço"), "espac" );
	deepEqual( Stem("espaços"), "espac" );
	deepEqual( Stem("espaçosa"), "espac" );
	deepEqual( Stem("espaçoso"), "espac" );
	deepEqual( Stem("espadim"), "espadim" );
	deepEqual( Stem("espaldar"), "espald" );
	deepEqual( Stem("espalha"), "espalh" );
	deepEqual( Stem("espalhada"), "espalh" );
	deepEqual( Stem("espalhadas"), "espalh" );
	deepEqual( Stem("espalhado"), "espalh" );
	deepEqual( Stem("espalhados"), "espalh" );
	deepEqual( Stem("espalhafatosa"), "espalhafat" );
	deepEqual( Stem("espalhafatosas"), "espalhafat" );
	deepEqual( Stem("espalham"), "espalh" );
	deepEqual( Stem("espalhando"), "espalh" );
	deepEqual( Stem("espalhar"), "espalh" );
	deepEqual( Stem("espalhou"), "espalh" );
	deepEqual( Stem("espanca"), "espanc" );
	deepEqual( Stem("espancá"), "espanc" );
	deepEqual( Stem("espancada"), "espanc" );
	deepEqual( Stem("espancado"), "espanc" );
	deepEqual( Stem("espanha"), "espanh" );
	deepEqual( Stem("espanhas"), "espanh" );
	deepEqual( Stem("espanhóis"), "espanhó" );
	deepEqual( Stem("espanhol"), "espanhol" );
	deepEqual( Stem("espanhola"), "espanhol" );
	deepEqual( Stem("espanta"), "espant" );
	deepEqual( Stem("espantada"), "espant" );
	deepEqual( Stem("espantadas"), "espant" );
	deepEqual( Stem("espantado"), "espant" );
	deepEqual( Stem("espantam"), "espant" );
	deepEqual( Stem("espanto"), "espant" );
	deepEqual( Stem("espantosa"), "espant" );
	deepEqual( Stem("espantoso"), "espant" );
	deepEqual( Stem("espantosos"), "espant" );
	deepEqual( Stem("espantou"), "espant" );
	deepEqual( Stem("esparsas"), "espars" );
	deepEqual( Stem("esparsos"), "espars" );
	deepEqual( Stem("espartana"), "espartan" );
	deepEqual( Stem("espartanas"), "espartan" );
	deepEqual( Stem("espasmos"), "espasm" );
	deepEqual( Stem("espatifaram"), "espatif" );
	deepEqual( Stem("espatifou"), "espatif" );
	deepEqual( Stem("espátulas"), "espátul" );
	deepEqual( Stem("especiais"), "espec" );
	deepEqual( Stem("especial"), "especial" );
	deepEqual( Stem("especialidade"), "especial" );
	deepEqual( Stem("especialista"), "especial" );
	deepEqual( Stem("especialistas"), "especial" );
	deepEqual( Stem("especialização"), "especializ" );
	deepEqual( Stem("especializações"), "especializ" );
	deepEqual( Stem("especializada"), "especializ" );
	deepEqual( Stem("especializadas"), "especializ" );
	deepEqual( Stem("especializado"), "especializ" );
	deepEqual( Stem("especializados"), "especializ" );
	deepEqual( Stem("especializando"), "especializ" );
	deepEqual( Stem("especializou"), "especializ" );
	deepEqual( Stem("especialmente"), "especial" );
	deepEqual( Stem("especiarias"), "espec" );
	deepEqual( Stem("espécie"), "espéc" );
	deepEqual( Stem("espécies"), "espéc" );
	deepEqual( Stem("específica"), "específ" );
	deepEqual( Stem("especificações"), "especific" );
	deepEqual( Stem("especificada"), "especific" );
	deepEqual( Stem("especificamente"), "especif" );
	deepEqual( Stem("especificar"), "especific" );
	deepEqual( Stem("específicas"), "específ" );
	deepEqual( Stem("específico"), "específ" );
	deepEqual( Stem("específicos"), "específ" );
	deepEqual( Stem("espécime"), "espécim" );
	deepEqual( Stem("espécimes"), "espécim" );
	deepEqual( Stem("espectador"), "espect" );
	deepEqual( Stem("espectadora"), "espect" );
	deepEqual( Stem("espectadores"), "espect" );
	deepEqual( Stem("espectro"), "espectr" );
	deepEqual( Stem("especula"), "especul" );
	deepEqual( Stem("especulação"), "especul" );
	deepEqual( Stem("especulações"), "especul" );
	deepEqual( Stem("especuladores"), "especul" );
	deepEqual( Stem("especulando"), "especul" );
	deepEqual( Stem("especular"), "especul" );
	deepEqual( Stem("especulativa"), "especul" );
	deepEqual( Stem("espelha"), "espelh" );
	deepEqual( Stem("espelhar"), "espelh" );
	deepEqual( Stem("espelho"), "espelh" );
	deepEqual( Stem("espelhos"), "espelh" );
	deepEqual( Stem("espera"), "esper" );
	deepEqual( Stem("esperada"), "esper" );
	deepEqual( Stem("esperadas"), "esper" );
	deepEqual( Stem("esperado"), "esper" );
	deepEqual( Stem("esperados"), "esper" );
	deepEqual( Stem("esperam"), "esper" );
	deepEqual( Stem("esperamos"), "esper" );
	deepEqual( Stem("esperança"), "esperanc" );
	deepEqual( Stem("esperanças"), "esperanc" );
	deepEqual( Stem("esperançosa"), "esperanc" );
	deepEqual( Stem("esperando"), "esper" );
	deepEqual( Stem("esperar"), "esper" );
	deepEqual( Stem("esperas"), "esper" );
	deepEqual( Stem("esperava"), "esper" );
	deepEqual( Stem("esperavam"), "esper" );
	deepEqual( Stem("esperávamos"), "esper" );
	deepEqual( Stem("espere"), "esper" );
	deepEqual( Stem("esperidião"), "esperidiã" );
	deepEqual( Stem("esperma"), "esperm" );
	deepEqual( Stem("espermatozóides"), "espermatozóid" );
	deepEqual( Stem("espermograma"), "espermogram" );
	deepEqual( Stem("espermogramas"), "espermogram" );
	deepEqual( Stem("espermópolis"), "espermópol" );
	deepEqual( Stem("espero"), "esper" );
	deepEqual( Stem("esperou"), "esper" );
	deepEqual( Stem("esperta"), "espert" );
	deepEqual( Stem("espertalhões"), "espertalhõ" );
	deepEqual( Stem("espertamente"), "espert" );
	deepEqual( Stem("esperteza"), "espert" );
	deepEqual( Stem("esperto"), "espert" );
	deepEqual( Stem("espertos"), "espert" );
	deepEqual( Stem("espessa"), "espess" );
	deepEqual( Stem("espeta"), "espet" );
	deepEqual( Stem("espetacular"), "espetacul" );
	deepEqual( Stem("espetaculares"), "espetacul" );
	deepEqual( Stem("espetacularmente"), "espetacular" );
	deepEqual( Stem("espetáculo"), "espetácul" );
	deepEqual( Stem("espetáculos"), "espetácul" );
	deepEqual( Stem("espetado"), "espet" );
	deepEqual( Stem("espiã"), "espiã" );
	deepEqual( Stem("espiando"), "espi" );
	deepEqual( Stem("espião"), "espiã" );
	deepEqual( Stem("espiar"), "espi" );
	deepEqual( Stem("espinha"), "espinh" );
	deepEqual( Stem("espinhas"), "espinh" );
	deepEqual( Stem("espinhentos"), "espinhent" );
	deepEqual( Stem("espinhosa"), "espinh" );
	deepEqual( Stem("espinhosas"), "espinh" );
	deepEqual( Stem("espiões"), "espiõ" );
	deepEqual( Stem("espionagem"), "espionag" );
	deepEqual( Stem("espionar"), "espion" );
	deepEqual( Stem("espiral"), "espiral" );
	deepEqual( Stem("espíritas"), "espírit" );
	deepEqual( Stem("espírito"), "espírit" );
	deepEqual( Stem("espíritos"), "espírit" );
	deepEqual( Stem("espirituais"), "espiritu" );
	deepEqual( Stem("espiritual"), "espiritual" );
	deepEqual( Stem("espiritualmente"), "espiritual" );
	deepEqual( Stem("espirro"), "espirr" );
	deepEqual( Stem("esplanada"), "esplan" );
	deepEqual( Stem("esplêndida"), "esplênd" );
	deepEqual( Stem("esplêndido"), "esplênd" );
	deepEqual( Stem("esplendor"), "esplendor" );
	deepEqual( Stem("espn"), "espn" );
	deepEqual( Stem("espocaram"), "espoc" );
	deepEqual( Stem("espoliação"), "espoli" );
	deepEqual( Stem("espólio"), "espóli" );
	deepEqual( Stem("espontânea"), "espontân" );
	deepEqual( Stem("espontaneamente"), "espontan" );
	deepEqual( Stem("espontaneidade"), "espontan" );
	deepEqual( Stem("espontâneo"), "espontân" );
	deepEqual( Stem("esporte"), "esport" );
	deepEqual( Stem("esportes"), "esport" );
	deepEqual( Stem("esportista"), "esport" );
	deepEqual( Stem("esportistas"), "esport" );
	deepEqual( Stem("esportiva"), "esport" );
	deepEqual( Stem("esportivas"), "esport" );
	deepEqual( Stem("esportivo"), "esport" );
	deepEqual( Stem("esportivos"), "esport" );
	deepEqual( Stem("esposa"), "espos" );
	deepEqual( Stem("esposas"), "espos" );
	deepEqual( Stem("esposo"), "espos" );
	deepEqual( Stem("espreguiçando"), "espreguic" );
	deepEqual( Stem("espreita"), "espreit" );
	deepEqual( Stem("espreme"), "esprem" );
	deepEqual( Stem("espremer"), "esprem" );
	deepEqual( Stem("espremeram"), "esprem" );
	deepEqual( Stem("espremida"), "esprem" );
	deepEqual( Stem("espremido"), "esprem" );
	deepEqual( Stem("espresso"), "espress" );
	deepEqual( Stem("espuma"), "espum" );
	deepEqual( Stem("espumante"), "espum" );
	deepEqual( Stem("esq"), "esq" );
	deepEqual( Stem("esquadra"), "esquadr" );
	deepEqual( Stem("esquadrias"), "esquadr" );
	deepEqual( Stem("esquadrilha"), "esquadrilh" );
	deepEqual( Stem("esquadrinhar"), "esquadrinh" );
	deepEqual( Stem("esquálidas"), "esquál" );
	deepEqual( Stem("esqueça"), "esquec" );
	deepEqual( Stem("esquece"), "esquec" );
	deepEqual( Stem("esquecê"), "esquec" );
	deepEqual( Stem("esquecem"), "esquec" );
	deepEqual( Stem("esquecemos"), "esquec" );
	deepEqual( Stem("esquecendo"), "esquec" );
	deepEqual( Stem("esquecer"), "esquec" );
	deepEqual( Stem("esqueceram"), "esquec" );
	deepEqual( Stem("esqueceria"), "esquec" );
	deepEqual( Stem("esquecermos"), "esquec" );
	deepEqual( Stem("esquecesse"), "esquec" );
	deepEqual( Stem("esqueceu"), "esquec" );
	deepEqual( Stem("esqueci"), "esquec" );
	deepEqual( Stem("esquecia"), "esquec" );
	deepEqual( Stem("esqueciam"), "esquec" );
	deepEqual( Stem("esquecida"), "esquec" );
	deepEqual( Stem("esquecidas"), "esquec" );
	deepEqual( Stem("esquecido"), "esquec" );
	deepEqual( Stem("esquecidos"), "esquec" );
	deepEqual( Stem("esqueda"), "esqued" );
	deepEqual( Stem("esquedo"), "esqued" );
	deepEqual( Stem("esqueleto"), "esquelet" );
	deepEqual( Stem("esqueletos"), "esquelet" );
	deepEqual( Stem("esquema"), "esquem" );
	deepEqual( Stem("esquemas"), "esquem" );
	deepEqual( Stem("esquenta"), "esquent" );
	deepEqual( Stem("esquentam"), "esquent" );
	deepEqual( Stem("esquentar"), "esquent" );
	deepEqual( Stem("esquentei"), "esquent" );
	deepEqual( Stem("esquentou"), "esquent" );
	deepEqual( Stem("esquerda"), "esquerd" );
	deepEqual( Stem("esquerdista"), "esquerd" );
	deepEqual( Stem("esquerdistas"), "esquerd" );
	deepEqual( Stem("esquerdo"), "esquerd" );
	deepEqual( Stem("esquetes"), "esquet" );
	deepEqual( Stem("esqui"), "esqu" );
	deepEqual( Stem("esquiador"), "esquiador" );
	deepEqual( Stem("esquiadores"), "esquiador" );
	deepEqual( Stem("esquiar"), "esqui" );
	deepEqual( Stem("esquina"), "esquin" );
	deepEqual( Stem("esquinas"), "esquin" );
	deepEqual( Stem("esquire"), "esquir" );
	deepEqual( Stem("esquisitas"), "esquisit" );
	deepEqual( Stem("esquisitices"), "esquisitic" );
	deepEqual( Stem("esquisito"), "esquisit" );
	deepEqual( Stem("esquisitos"), "esquisit" );
	deepEqual( Stem("esquistossomose"), "esquistossomos" );
	deepEqual( Stem("esquiva"), "esquiv" );
	deepEqual( Stem("esquivar"), "esquiv" );
	deepEqual( Stem("esquivou"), "esquiv" );
	deepEqual( Stem("esquizofrenia"), "esquizofren" );
	deepEqual( Stem("esquizofrênico"), "esquizofrên" );
	deepEqual( Stem("essa"), "essa" );
	deepEqual( Stem("essas"), "essas" );
	deepEqual( Stem("esse"), "esse" );
	deepEqual( Stem("essência"), "essênc" );
	deepEqual( Stem("essenciais"), "essenc" );
	deepEqual( Stem("essencial"), "essencial" );
	deepEqual( Stem("essências"), "essênc" );
	deepEqual( Stem("esses"), "esses" );
	deepEqual( Stem("esso"), "esso" );
	deepEqual( Stem("esta"), "esta" );
	deepEqual( Stem("está"), "está" );
	deepEqual( Stem("estabelece"), "estabelec" );
	deepEqual( Stem("estabelecem"), "estabelec" );
	deepEqual( Stem("estabelecer"), "estabelec" );
	deepEqual( Stem("estabeleceram"), "estabelec" );
	deepEqual( Stem("estabeleceu"), "estabelec" );
	deepEqual( Stem("estabelecia"), "estabelec" );
	deepEqual( Stem("estabelecida"), "estabelec" );
	deepEqual( Stem("estabelecidas"), "estabelec" );
	deepEqual( Stem("estabelecido"), "estabelec" );
	deepEqual( Stem("estabelecidos"), "estabelec" );
	deepEqual( Stem("estabelecimento"), "estabelec" );
	deepEqual( Stem("estabelecimentos"), "estabelec" );
	deepEqual( Stem("estabilidade"), "estabil" );
	deepEqual( Stem("estabiliza"), "estabiliz" );
	deepEqual( Stem("estabilização"), "estabiliz" );
	deepEqual( Stem("estabilizada"), "estabiliz" );
	deepEqual( Stem("estabilizadas"), "estabiliz" );
	deepEqual( Stem("estabilizado"), "estabiliz" );
	deepEqual( Stem("estabilizar"), "estabiliz" );
	deepEqual( Stem("estabilizou"), "estabiliz" );
	deepEqual( Stem("establishment"), "establishment" );
	deepEqual( Stem("estaca"), "estac" );
	deepEqual( Stem("estação"), "estaçã" );
	deepEqual( Stem("estacas"), "estac" );
	deepEqual( Stem("estaciona"), "estacion" );
	deepEqual( Stem("estacioná"), "estacion" );
	deepEqual( Stem("estacionado"), "estacion" );
	deepEqual( Stem("estacionamento"), "estacion" );
	deepEqual( Stem("estacionamentos"), "estacion" );
	deepEqual( Stem("estacionando"), "estacion" );
	deepEqual( Stem("estacionar"), "estacion" );
	deepEqual( Stem("estacionou"), "estacion" );
	deepEqual( Stem("estações"), "estaçõ" );
	deepEqual( Stem("estada"), "estad" );
	deepEqual( Stem("estádio"), "estádi" );
	deepEqual( Stem("estádios"), "estádi" );
	deepEqual( Stem("estadistas"), "estad" );
	deepEqual( Stem("estado"), "estad" );
	deepEqual( Stem("estados"), "estad" );
	deepEqual( Stem("estaduais"), "estadu" );
	deepEqual( Stem("estadual"), "estadual" );
	deepEqual( Stem("estafa"), "estaf" );
	deepEqual( Stem("estafante"), "estaf" );
	deepEqual( Stem("estágio"), "estági" );
	deepEqual( Stem("estágios"), "estági" );
	deepEqual( Stem("estagnação"), "estagn" );
	deepEqual( Stem("estagnada"), "estagn" );
	deepEqual( Stem("estagnadas"), "estagn" );
	deepEqual( Stem("estagnado"), "estagn" );
	deepEqual( Stem("estala"), "estal" );
	deepEqual( Stem("estalado"), "estal" );
	deepEqual( Stem("estalinho"), "estalinh" );
	deepEqual( Stem("estamos"), "estam" );
	deepEqual( Stem("estampada"), "estamp" );
	deepEqual( Stem("estampado"), "estamp" );
	deepEqual( Stem("estampados"), "estamp" );
	deepEqual( Stem("estampam"), "estamp" );
	deepEqual( Stem("estampas"), "estamp" );
	deepEqual( Stem("estampava"), "estamp" );
	deepEqual( Stem("estancamento"), "estanc" );
	deepEqual( Stem("estande"), "estand" );
	deepEqual( Stem("estandes"), "estand" );
	deepEqual( Stem("estando"), "estand" );
	deepEqual( Stem("estante"), "estant" );
	deepEqual( Stem("estão"), "estã" );
	deepEqual( Stem("estar"), "estar" );
	deepEqual( Stem("estará"), "estar" );
	deepEqual( Stem("estarão"), "estarã" );
	deepEqual( Stem("estardalhaço"), "estardalhac" );
	deepEqual( Stem("estarei"), "estar" );
	deepEqual( Stem("estarem"), "estar" );
	deepEqual( Stem("estaremos"), "estar" );
	deepEqual( Stem("estaria"), "estar" );
	deepEqual( Stem("estariam"), "estar" );
	deepEqual( Stem("estaríamos"), "estar" );
	deepEqual( Stem("estarrecedor"), "estarrecedor" );
	deepEqual( Stem("estarrecido"), "estarrec" );
	deepEqual( Stem("estas"), "estas" );
	deepEqual( Stem("estatais"), "estat" );
	deepEqual( Stem("estatal"), "estatal" );
	deepEqual( Stem("estatelar"), "estatel" );
	deepEqual( Stem("estatelou"), "estatel" );
	deepEqual( Stem("estática"), "estát" );
	deepEqual( Stem("estatismo"), "estat" );
	deepEqual( Stem("estatística"), "estatíst" );
	deepEqual( Stem("estatísticas"), "estatíst" );
	deepEqual( Stem("estatístico"), "estatíst" );
	deepEqual( Stem("estatísticos"), "estatíst" );
	deepEqual( Stem("estátua"), "estátu" );
	deepEqual( Stem("estatura"), "estatur" );
	deepEqual( Stem("estatuto"), "estatut" );
	deepEqual( Stem("estava"), "estav" );
	deepEqual( Stem("estavam"), "estav" );
	deepEqual( Stem("estávamos"), "estáv" );
	deepEqual( Stem("estáveis"), "estáv" );
	deepEqual( Stem("estável"), "estável" );
	deepEqual( Stem("este"), "este" );
	deepEqual( Stem("estée"), "esté" );
	deepEqual( Stem("estefani"), "estefan" );
	deepEqual( Stem("esteira"), "esteir" );
	deepEqual( Stem("esteiras"), "esteir" );
	deepEqual( Stem("esteja"), "estej" );
	deepEqual( Stem("estejam"), "estej" );
	deepEqual( Stem("estela"), "estel" );
	deepEqual( Stem("estelares"), "estel" );
	deepEqual( Stem("estelionatários"), "estelionatári" );
	deepEqual( Stem("estelionato"), "estelionat" );
	deepEqual( Stem("estende"), "estend" );
	deepEqual( Stem("estendem"), "estend" );
	deepEqual( Stem("estendendo"), "estend" );
	deepEqual( Stem("estender"), "estend" );
	deepEqual( Stem("estenderá"), "estend" );
	deepEqual( Stem("estenderam"), "estend" );
	deepEqual( Stem("estendia"), "estend" );
	deepEqual( Stem("estendida"), "estend" );
	deepEqual( Stem("estendido"), "estend" );
	deepEqual( Stem("estênio"), "estêni" );
	deepEqual( Stem("estepe"), "estep" );
	deepEqual( Stem("estepes"), "estep" );
	deepEqual( Stem("ester"), "ester" );
	deepEqual( Stem("estéreis"), "estér" );
	deepEqual( Stem("estereofonizou"), "estereofoniz" );
	deepEqual( Stem("estereotipada"), "estereotip" );
	deepEqual( Stem("estereótipo"), "estereótip" );
	deepEqual( Stem("estereótipos"), "estereótip" );
	deepEqual( Stem("estéril"), "estéril" );
	deepEqual( Stem("esterilidade"), "esteril" );
	deepEqual( Stem("esterilizar"), "esteriliz" );
	deepEqual( Stem("esterlina"), "esterlin" );
	deepEqual( Stem("esteróide"), "esteróid" );
	deepEqual( Stem("esterzinha"), "esterzinh" );
	deepEqual( Stem("estes"), "estes" );
	deepEqual( Stem("estética"), "estét" );
	deepEqual( Stem("esteticamente"), "estet" );
	deepEqual( Stem("estético"), "estét" );
	deepEqual( Stem("estéticos"), "estét" );
	deepEqual( Stem("estevam"), "estev" );
	deepEqual( Stem("estevão"), "estevã" );
	deepEqual( Stem("esteve"), "estev" );
	deepEqual( Stem("esteves"), "estev" );
	deepEqual( Stem("estevez"), "estevez" );
	deepEqual( Stem("esther"), "esther" );
	deepEqual( Stem("estherzinha"), "estherzinh" );
	deepEqual( Stem("esticada"), "estic" );
	deepEqual( Stem("esticadas"), "estic" );
	deepEqual( Stem("esticar"), "estic" );
	deepEqual( Stem("estico"), "estic" );
	deepEqual( Stem("estigma"), "estigm" );
	deepEqual( Stem("estigmatizada"), "estigmatiz" );
	deepEqual( Stem("estilhaços"), "estilhac" );
	deepEqual( Stem("estilingue"), "estiling" );
	deepEqual( Stem("estilista"), "estil" );
	deepEqual( Stem("estilistas"), "estil" );
	deepEqual( Stem("estilo"), "estil" );
	deepEqual( Stem("estilos"), "estil" );
	deepEqual( Stem("estima"), "estim" );
	deepEqual( Stem("estimação"), "estim" );
	deepEqual( Stem("estimada"), "estim" );
	deepEqual( Stem("estimado"), "estim" );
	deepEqual( Stem("estimados"), "estim" );
	deepEqual( Stem("estimam"), "estim" );
	deepEqual( Stem("estimara"), "estim" );
	deepEqual( Stem("estimativa"), "estim" );
	deepEqual( Stem("estimativas"), "estim" );
	deepEqual( Stem("estimavam"), "estim" );
	deepEqual( Stem("estimula"), "estimul" );
	deepEqual( Stem("estimulá"), "estimul" );
	deepEqual( Stem("estimulação"), "estimul" );
	deepEqual( Stem("estimulada"), "estimul" );
	deepEqual( Stem("estimuladas"), "estimul" );
	deepEqual( Stem("estimulado"), "estimul" );
	deepEqual( Stem("estimulador"), "estimul" );
	deepEqual( Stem("estimulados"), "estimul" );
	deepEqual( Stem("estimulam"), "estimul" );
	deepEqual( Stem("estimulando"), "estimul" );
	deepEqual( Stem("estimular"), "estimul" );
	deepEqual( Stem("estimule"), "estimul" );
	deepEqual( Stem("estímulo"), "estímul" );
	deepEqual( Stem("estímulos"), "estímul" );
	deepEqual( Stem("estimulou"), "estimul" );
	deepEqual( Stem("estipula"), "estipul" );
	deepEqual( Stem("estipulada"), "estipul" );
	deepEqual( Stem("estipulado"), "estipul" );
	deepEqual( Stem("estipular"), "estipul" );
	deepEqual( Stem("estiramento"), "estir" );
	deepEqual( Stem("estirpe"), "estirp" );
	deepEqual( Stem("estivador"), "estiv" );
	deepEqual( Stem("estivas"), "estiv" );
	deepEqual( Stem("estive"), "estiv" );
	deepEqual( Stem("estivemos"), "estiv" );
	deepEqual( Stem("estiver"), "estiv" );
	deepEqual( Stem("estiveram"), "estiv" );
	deepEqual( Stem("estiverem"), "estiv" );
	deepEqual( Stem("estivermos"), "estiv" );
	deepEqual( Stem("estivesse"), "estiv" );
	deepEqual( Stem("estivessem"), "estiv" );
	deepEqual( Stem("estivéssemos"), "estivéss" );
	deepEqual( Stem("estocadas"), "estoc" );
	deepEqual( Stem("estocados"), "estoc" );
	deepEqual( Stem("estocagem"), "estocag" );
	deepEqual( Stem("estojo"), "estoj" );
	deepEqual( Stem("estomacal"), "estomacal" );
	deepEqual( Stem("estômago"), "estômag" );
	deepEqual( Stem("estonteante"), "estont" );
	deepEqual( Stem("estonteantes"), "estont" );
	deepEqual( Stem("estopim"), "estopim" );
	deepEqual( Stem("estoque"), "estoqu" );
	deepEqual( Stem("estoques"), "estoqu" );
	deepEqual( Stem("estórias"), "estór" );
	deepEqual( Stem("estorvo"), "estorv" );
	deepEqual( Stem("estou"), "estou" );
	deepEqual( Stem("estoura"), "estour" );
	deepEqual( Stem("estourado"), "estour" );
	deepEqual( Stem("estourar"), "estour" );
	deepEqual( Stem("estouro"), "estour" );
	deepEqual( Stem("estourou"), "estour" );
	deepEqual( Stem("estoy"), "estoy" );
	deepEqual( Stem("estrabismo"), "estrab" );
	deepEqual( Stem("estrada"), "estrad" );
	deepEqual( Stem("estradas"), "estrad" );
	deepEqual( Stem("estradinha"), "estradinh" );
	deepEqual( Stem("estrados"), "estrad" );
	deepEqual( Stem("estraga"), "estrag" );
	deepEqual( Stem("estragados"), "estrag" );
	deepEqual( Stem("estragam"), "estrag" );
	deepEqual( Stem("estragar"), "estrag" );
	deepEqual( Stem("estrago"), "estrag" );
	deepEqual( Stem("estragos"), "estrag" );
	deepEqual( Stem("estrangeira"), "estrangeir" );
	deepEqual( Stem("estrangeiras"), "estrangeir" );
	deepEqual( Stem("estrangeiro"), "estrangeir" );
	deepEqual( Stem("estrangeiros"), "estrangeir" );
	deepEqual( Stem("estrangulado"), "estrangul" );
	deepEqual( Stem("estrangularam"), "estrangul" );
	deepEqual( Stem("estranha"), "estranh" );
	deepEqual( Stem("estranham"), "estranh" );
	deepEqual( Stem("estranhamento"), "estranh" );
	deepEqual( Stem("estranhar"), "estranh" );
	deepEqual( Stem("estranhas"), "estranh" );
	deepEqual( Stem("estranheza"), "estranh" );
	deepEqual( Stem("estranho"), "estranh" );
	deepEqual( Stem("estranhos"), "estranh" );
	deepEqual( Stem("estranhou"), "estranh" );
	deepEqual( Stem("estratagemas"), "estratagem" );
	deepEqual( Stem("estratégia"), "estratég" );
	deepEqual( Stem("estratégias"), "estratég" );
	deepEqual( Stem("estratégica"), "estratég" );
	deepEqual( Stem("estrategicamente"), "estrateg" );
	deepEqual( Stem("estratégicas"), "estratég" );
	deepEqual( Stem("estratégicos"), "estratég" );
	deepEqual( Stem("estreante"), "estreant" );
	deepEqual( Stem("estrear"), "estre" );
	deepEqual( Stem("estréia"), "estré" );
	deepEqual( Stem("estréiam"), "estré" );
	deepEqual( Stem("estreita"), "estreit" );
	deepEqual( Stem("estreitamente"), "estreit" );
	deepEqual( Stem("estreitando"), "estreit" );
	deepEqual( Stem("estreitar"), "estreit" );
	deepEqual( Stem("estreitas"), "estreit" );
	deepEqual( Stem("estreito"), "estreit" );
	deepEqual( Stem("estreitos"), "estreit" );
	deepEqual( Stem("estrela"), "estrel" );
	deepEqual( Stem("estrelado"), "estrel" );
	deepEqual( Stem("estrelados"), "estrel" );
	deepEqual( Stem("estrelar"), "estrel" );
	deepEqual( Stem("estrelas"), "estrel" );
	deepEqual( Stem("estrelato"), "estrelat" );
	deepEqual( Stem("estrelismos"), "estrel" );
	deepEqual( Stem("estremeciam"), "estremec" );
	deepEqual( Stem("estreou"), "estre" );
	deepEqual( Stem("estrepem"), "estrep" );
	deepEqual( Stem("estressa"), "estress" );
	deepEqual( Stem("estressada"), "estress" );
	deepEqual( Stem("estressadas"), "estress" );
	deepEqual( Stem("estressado"), "estress" );
	deepEqual( Stem("estressante"), "estress" );
	deepEqual( Stem("estressantes"), "estress" );
	deepEqual( Stem("estresse"), "estress" );
	deepEqual( Stem("estria"), "estri" );
	deepEqual( Stem("estrias"), "estri" );
	deepEqual( Stem("estridentes"), "estrident" );
	deepEqual( Stem("estripulias"), "estripul" );
	deepEqual( Stem("estritamente"), "estrit" );
	deepEqual( Stem("estrito"), "estrit" );
	deepEqual( Stem("estrofe"), "estrof" );
	deepEqual( Stem("estrofes"), "estrof" );
	deepEqual( Stem("estrógeno"), "estrógen" );
	deepEqual( Stem("estrondo"), "estrond" );
	deepEqual( Stem("estrondoso"), "estrond" );
	deepEqual( Stem("estrutura"), "estrutur" );
	deepEqual( Stem("estruturadas"), "estrutur" );
	deepEqual( Stem("estruturadora"), "estrutur" );
	deepEqual( Stem("estruturadores"), "estrutur" );
	deepEqual( Stem("estruturais"), "estrutur" );
	deepEqual( Stem("estrutural"), "estrutural" );
	deepEqual( Stem("estruturando"), "estrutur" );
	deepEqual( Stem("estruturas"), "estrutur" );
	deepEqual( Stem("estuda"), "estud" );
	deepEqual( Stem("estudada"), "estud" );
	deepEqual( Stem("estudadas"), "estud" );
	deepEqual( Stem("estudado"), "estud" );
	deepEqual( Stem("estudam"), "estud" );
	deepEqual( Stem("estudando"), "estud" );
	deepEqual( Stem("estudante"), "estud" );
	deepEqual( Stem("estudantes"), "estud" );
	deepEqual( Stem("estudantis"), "estudant" );
	deepEqual( Stem("estudar"), "estud" );
	deepEqual( Stem("estudaram"), "estud" );
	deepEqual( Stem("estudava"), "estud" );
	deepEqual( Stem("estúdio"), "estúdi" );
	deepEqual( Stem("estúdios"), "estúdi" );
	deepEqual( Stem("estudioso"), "estudi" );
	deepEqual( Stem("estudiosos"), "estudi" );
	deepEqual( Stem("estudo"), "estud" );
	deepEqual( Stem("estudos"), "estud" );
	deepEqual( Stem("estudou"), "estud" );
	deepEqual( Stem("estufa"), "estuf" );
	deepEqual( Stem("estupenda"), "estupend" );
	deepEqual( Stem("estúpidas"), "estúp" );
	deepEqual( Stem("estupidez"), "estupidez" );
	deepEqual( Stem("estuprada"), "estupr" );
	deepEqual( Stem("estupravam"), "estupr" );
	deepEqual( Stem("estupro"), "estupr" );
	deepEqual( Stem("esturricada"), "esturric" );
	deepEqual( Stem("estvez"), "estvez" );
	deepEqual( Stem("esvair"), "esva" );
	deepEqual( Stem("esvazia"), "esvaz" );
	deepEqual( Stem("esvaziado"), "esvazi" );
	deepEqual( Stem("esvaziamos"), "esvazi" );
	deepEqual( Stem("esvaziar"), "esvazi" );
	deepEqual( Stem("esvaziaram"), "esvazi" );
	deepEqual( Stem("esvaziou"), "esvazi" );
	deepEqual( Stem("esverdeada"), "esverd" );
	deepEqual( Stem("esverdeado"), "esverd" );
	deepEqual( Stem("esverdeados"), "esverd" );
	deepEqual( Stem("et"), "et" );
	deepEqual( Stem("etanol"), "etanol" );
	deepEqual( Stem("etapa"), "etap" );
	deepEqual( Stem("etapas"), "etap" );
	deepEqual( Stem("etária"), "etár" );
	deepEqual( Stem("etc"), "etc" );
	deepEqual( Stem("etelma"), "etelm" );
	deepEqual( Stem("éter"), "éter" );
	deepEqual( Stem("eterna"), "etern" );
	deepEqual( Stem("eternamente"), "etern" );
	deepEqual( Stem("eternidade"), "etern" );
	deepEqual( Stem("eternit"), "eternit" );
	deepEqual( Stem("eternizam"), "eterniz" );
	deepEqual( Stem("eterno"), "etern" );
	deepEqual( Stem("etezinhos"), "etezinh" );
	deepEqual( Stem("ética"), "étic" );
	deepEqual( Stem("éticas"), "étic" );
	deepEqual( Stem("ético"), "étic" );
	deepEqual( Stem("éticos"), "étic" );
	deepEqual( Stem("etiqueta"), "etiquet" );
	deepEqual( Stem("etiquetas"), "etiquet" );
	deepEqual( Stem("etnia"), "etni" );
	deepEqual( Stem("etnias"), "etni" );
	deepEqual( Stem("étnica"), "étnic" );
	deepEqual( Stem("étnicas"), "étnic" );
	deepEqual( Stem("étnico"), "étnic" );
	deepEqual( Stem("étnicos"), "étnic" );
	deepEqual( Stem("etno"), "etno" );
	deepEqual( Stem("ets"), "ets" );
	deepEqual( Stem("eu"), "eu" );
	deepEqual( Stem("eua"), "eua" );
	deepEqual( Stem("euclides"), "euclid" );
	deepEqual( Stem("eudes"), "eud" );
	deepEqual( Stem("eufemismos"), "eufem" );
	deepEqual( Stem("euforia"), "eufor" );
	deepEqual( Stem("eufóricas"), "eufór" );
	deepEqual( Stem("eufórico"), "eufór" );
	deepEqual( Stem("eugênia"), "eugên" );
	deepEqual( Stem("eugenio"), "eugeni" );
	deepEqual( Stem("eugênio"), "eugêni" );
	deepEqual( Stem("eumano"), "euman" );
	deepEqual( Stem("eunice"), "eunic" );
	deepEqual( Stem("eureka"), "eurek" );
	deepEqual( Stem("eurico"), "euric" );
	deepEqual( Stem("eurídice"), "eurídic" );
	deepEqual( Stem("eurípedes"), "euríped" );
	deepEqual( Stem("euro"), "eur" );
	deepEqual( Stem("eurocentrismo"), "eurocentr" );
	deepEqual( Stem("eurocéticos"), "eurocét" );
	deepEqual( Stem("europa"), "europ" );
	deepEqual( Stem("européia"), "europ" );
	deepEqual( Stem("européias"), "europ" );
	deepEqual( Stem("europeu"), "europ" );
	deepEqual( Stem("europeus"), "europeus" );
	deepEqual( Stem("eusébio"), "eusébi" );
	deepEqual( Stem("eustáquio"), "eustáqui" );
	deepEqual( Stem("eva"), "eva" );
	deepEqual( Stem("evacuada"), "evacu" );
	deepEqual( Stem("evander"), "evand" );
	deepEqual( Stem("evandro"), "evandr" );
	deepEqual( Stem("evangelho"), "evangelh" );
	deepEqual( Stem("evangélica"), "evangél" );
	deepEqual( Stem("evangélicas"), "evangél" );
	deepEqual( Stem("evangélico"), "evangél" );
	deepEqual( Stem("evangélicos"), "evangél" );
	deepEqual( Stem("evangelista"), "evangel" );
	deepEqual( Stem("evangelização"), "evangeliz" );
	deepEqual( Stem("evans"), "evans" );
	deepEqual( Stem("evelin"), "evelin" );
	deepEqual( Stem("evenks"), "evenks" );
	deepEqual( Stem("evento"), "event" );
	deepEqual( Stem("eventos"), "event" );
	deepEqual( Stem("eventuais"), "eventu" );
	deepEqual( Stem("eventual"), "eventual" );
	deepEqual( Stem("eventualmente"), "eventual" );
	deepEqual( Stem("everest"), "everest" );
	deepEqual( Stem("evidência"), "evident" );
	deepEqual( Stem("evidenciada"), "evidenc" );
	deepEqual( Stem("evidenciam"), "evidenc" );
	deepEqual( Stem("evidências"), "evident" );
	deepEqual( Stem("evidente"), "evident" );
	deepEqual( Stem("evidentemente"), "evident" );
	deepEqual( Stem("evidentes"), "evident" );
	deepEqual( Stem("evita"), "evit" );
	deepEqual( Stem("evitá"), "evit" );
	deepEqual( Stem("evitado"), "evit" );
	deepEqual( Stem("evitam"), "evit" );
	deepEqual( Stem("evitando"), "evit" );
	deepEqual( Stem("evitar"), "evit" );
	deepEqual( Stem("evitará"), "evit" );
	deepEqual( Stem("evitaria"), "evit" );
	deepEqual( Stem("evitariam"), "evit" );
	deepEqual( Stem("evitava"), "evit" );
	deepEqual( Stem("evitavam"), "evit" );
	deepEqual( Stem("evite"), "evit" );
	deepEqual( Stem("evitou"), "evit" );
	deepEqual( Stem("evocam"), "evoc" );
	deepEqual( Stem("evocando"), "evoc" );
	deepEqual( Stem("evocar"), "evoc" );
	deepEqual( Stem("evocativa"), "evoc" );
	deepEqual( Stem("evolução"), "evoluçã" );
	deepEqual( Stem("evoluem"), "evolu" );
	deepEqual( Stem("evolui"), "evolu" );
	deepEqual( Stem("evoluir"), "evolu" );
	deepEqual( Stem("evoluirá"), "evolu" );
	deepEqual( Stem("evoluíram"), "evoluír" );
	deepEqual( Stem("evoluísse"), "evoluíss" );
	deepEqual( Stem("evoluiu"), "evolu" );
	deepEqual( Stem("evolutiva"), "evolut" );
	deepEqual( Stem("ex"), "ex" );
	deepEqual( Stem("exacerbada"), "exacerb" );
	deepEqual( Stem("exacerbadas"), "exacerb" );
	deepEqual( Stem("exacerbar"), "exacerb" );
	deepEqual( Stem("exagera"), "exag" );
	deepEqual( Stem("exagerada"), "exager" );
	deepEqual( Stem("exageradamente"), "exager" );
	deepEqual( Stem("exageradas"), "exager" );
	deepEqual( Stem("exagerado"), "exager" );
	deepEqual( Stem("exagerados"), "exager" );
	deepEqual( Stem("exageram"), "exag" );
	deepEqual( Stem("exagerando"), "exager" );
	deepEqual( Stem("exagerar"), "exager" );
	deepEqual( Stem("exagero"), "exager" );
	deepEqual( Stem("exageros"), "exager" );
	deepEqual( Stem("exala"), "exal" );
	deepEqual( Stem("exalando"), "exal" );
	deepEqual( Stem("exalta"), "exalt" );
	deepEqual( Stem("exaltação"), "exalt" );
	deepEqual( Stem("exaltações"), "exalt" );
	deepEqual( Stem("exaltar"), "exalt" );
	deepEqual( Stem("exame"), "exam" );
	deepEqual( Stem("exames"), "exam" );
	deepEqual( Stem("examina"), "examin" );
	deepEqual( Stem("examinada"), "examin" );
	deepEqual( Stem("examinadas"), "examin" );
	deepEqual( Stem("examinado"), "examin" );
	deepEqual( Stem("examinador"), "examin" );
	deepEqual( Stem("examinadora"), "examin" );
	deepEqual( Stem("examinados"), "examin" );
	deepEqual( Stem("examinam"), "examin" );
	deepEqual( Stem("examinar"), "examin" );
	deepEqual( Stem("examinaram"), "examin" );
	deepEqual( Stem("examinassem"), "examin" );
	deepEqual( Stem("examinei"), "examin" );
	deepEqual( Stem("examinou"), "examin" );
	deepEqual( Stem("exata"), "exat" );
	deepEqual( Stem("exatamente"), "exat" );
	deepEqual( Stem("exatas"), "exat" );
	deepEqual( Stem("exato"), "exat" );
	deepEqual( Stem("exatos"), "exat" );
	deepEqual( Stem("exaurido"), "exaur" );
	deepEqual( Stem("exaustão"), "exaustã" );
	deepEqual( Stem("exaustiva"), "exaust" );
	deepEqual( Stem("exaustivamente"), "exaust" );
	deepEqual( Stem("exaustivo"), "exaust" );
	deepEqual( Stem("exaustivos"), "exaust" );
	deepEqual( Stem("exausto"), "exaust" );
	deepEqual( Stem("exaustos"), "exaust" );
	deepEqual( Stem("exceção"), "exceçã" );
	deepEqual( Stem("exceções"), "exceçõ" );
	deepEqual( Stem("excedente"), "excedent" );
	deepEqual( Stem("excedentes"), "excedent" );
	deepEqual( Stem("excel"), "excel" );
	deepEqual( Stem("excelência"), "excelent" );
	deepEqual( Stem("excelente"), "excelent" );
	deepEqual( Stem("excelentes"), "excelent" );
	deepEqual( Stem("excentricidade"), "excentr" );
	deepEqual( Stem("excepcionais"), "excepcion" );
	deepEqual( Stem("excepcional"), "excepcional" );
	deepEqual( Stem("excepcionalmente"), "excepcional" );
	deepEqual( Stem("excessiva"), "excess" );
	deepEqual( Stem("excessivamente"), "excess" );
	deepEqual( Stem("excessivas"), "excess" );
	deepEqual( Stem("excessivo"), "excess" );
	deepEqual( Stem("excessivos"), "excess" );
	deepEqual( Stem("excesso"), "excess" );
	deepEqual( Stem("excessos"), "excess" );
	deepEqual( Stem("exceto"), "excet" );
	deepEqual( Stem("exchange"), "exchang" );
	deepEqual( Stem("excita"), "excit" );
	deepEqual( Stem("excitação"), "excit" );
	deepEqual( Stem("excitada"), "excit" );
	deepEqual( Stem("excitado"), "excit" );
	deepEqual( Stem("excitante"), "excit" );
	deepEqual( Stem("exclamação"), "exclam" );
	deepEqual( Stem("exclamou"), "exclam" );
	deepEqual( Stem("excludente"), "excludent" );
	deepEqual( Stem("exclui"), "exclu" );
	deepEqual( Stem("excluído"), "excluíd" );
	deepEqual( Stem("excluídos"), "excluíd" );
	deepEqual( Stem("excluindo"), "exclu" );
	deepEqual( Stem("exclusão"), "exclusã" );
	deepEqual( Stem("exclusiva"), "exclus" );
	deepEqual( Stem("exclusivamente"), "exclus" );
	deepEqual( Stem("exclusivas"), "exclus" );
	deepEqual( Stem("exclusividade"), "exclus" );
	deepEqual( Stem("exclusivo"), "exclus" );
	deepEqual( Stem("exclusivos"), "exclus" );
	deepEqual( Stem("exclusões"), "exclusõ" );
	deepEqual( Stem("excrementos"), "excrement" );
	deepEqual( Stem("excrescência"), "excrescent" );
	deepEqual( Stem("excursão"), "excursã" );
	deepEqual( Stem("excursões"), "excursõ" );
	deepEqual( Stem("execução"), "execuçã" );
	deepEqual( Stem("execuções"), "execuçõ" );
	deepEqual( Stem("executa"), "execut" );
	deepEqual( Stem("executada"), "execut" );
	deepEqual( Stem("executado"), "execut" );
	deepEqual( Stem("executar"), "execut" );
	deepEqual( Stem("executarão"), "execut" );
	deepEqual( Stem("executavam"), "execut" );
	deepEqual( Stem("executável"), "execut" );
	deepEqual( Stem("executiva"), "execut" );
	deepEqual( Stem("executivas"), "execut" );
	deepEqual( Stem("executivo"), "execut" );
	deepEqual( Stem("executivos"), "execut" );
	deepEqual( Stem("executo"), "execut" );
	deepEqual( Stem("executou"), "execut" );
	deepEqual( Stem("exemplar"), "exempl" );
	deepEqual( Stem("exemplares"), "exempl" );
	deepEqual( Stem("exemplificando"), "exemplific" );
	deepEqual( Stem("exemplo"), "exempl" );
	deepEqual( Stem("exemplos"), "exempl" );
	deepEqual( Stem("exerce"), "exerc" );
	deepEqual( Stem("exercem"), "exerc" );
	deepEqual( Stem("exercendo"), "exerc" );
	deepEqual( Stem("exercer"), "exerc" );
	deepEqual( Stem("exerceu"), "exerc" );
	deepEqual( Stem("exerciam"), "exerc" );
	deepEqual( Stem("exercício"), "exercíci" );
	deepEqual( Stem("exercícios"), "exercíci" );
	deepEqual( Stem("exercida"), "exerc" );
	deepEqual( Stem("exercidas"), "exerc" );
	deepEqual( Stem("exercido"), "exerc" );
	deepEqual( Stem("exercita"), "exercit" );
	deepEqual( Stem("exercitada"), "exercit" );
	deepEqual( Stem("exercitam"), "exercit" );
	deepEqual( Stem("exercitando"), "exercit" );
	deepEqual( Stem("exercitar"), "exercit" );
	deepEqual( Stem("exército"), "exércit" );
	deepEqual( Stem("exércitos"), "exércit" );
	deepEqual( Stem("exerço"), "exerc" );
	deepEqual( Stem("exibe"), "exib" );
	deepEqual( Stem("exibem"), "exib" );
	deepEqual( Stem("exibia"), "exib" );
	deepEqual( Stem("exibiam"), "exib" );
	deepEqual( Stem("exibição"), "exibiçã" );
	deepEqual( Stem("exibicionismo"), "exibicion" );
	deepEqual( Stem("exibicionista"), "exibicion" );
	deepEqual( Stem("exibições"), "exibiçõ" );
	deepEqual( Stem("exibida"), "exib" );
	deepEqual( Stem("exibidas"), "exib" );
	deepEqual( Stem("exibido"), "exib" );
	deepEqual( Stem("exibidos"), "exib" );
	deepEqual( Stem("exibindo"), "exib" );
	deepEqual( Stem("exibir"), "exib" );
	deepEqual( Stem("exibirá"), "exib" );
	deepEqual( Stem("exibiu"), "exib" );
	deepEqual( Stem("exige"), "exig" );
	deepEqual( Stem("exigem"), "exig" );
	deepEqual( Stem("exigência"), "exigent" );
	deepEqual( Stem("exigências"), "exigent" );
	deepEqual( Stem("exigente"), "exigent" );
	deepEqual( Stem("exigentes"), "exigent" );
	deepEqual( Stem("exigia"), "exig" );
	deepEqual( Stem("exigiam"), "exig" );
	deepEqual( Stem("exigida"), "exig" );
	deepEqual( Stem("exigido"), "exig" );
	deepEqual( Stem("exigidos"), "exig" );
	deepEqual( Stem("exigindo"), "exig" );
	deepEqual( Stem("exigir"), "exig" );
	deepEqual( Stem("exigirá"), "exig" );
	deepEqual( Stem("exigiram"), "exig" );
	deepEqual( Stem("exigiria"), "exig" );
	deepEqual( Stem("exigisse"), "exig" );
	deepEqual( Stem("exigiu"), "exig" );
	deepEqual( Stem("exígua"), "exígu" );
	deepEqual( Stem("exiguus"), "exiguus" );
	deepEqual( Stem("exijam"), "exij" );
	deepEqual( Stem("exijo"), "exij" );
	deepEqual( Stem("exilado"), "exil" );
	deepEqual( Stem("exilados"), "exil" );
	deepEqual( Stem("exilei"), "exil" );
	deepEqual( Stem("exílio"), "exíli" );
	deepEqual( Stem("exilou"), "exil" );
	deepEqual( Stem("eximbank"), "eximbank" );
	deepEqual( Stem("eximindo"), "exim" );
	deepEqual( Stem("exímio"), "exími" );
	deepEqual( Stem("exista"), "exist" );
	deepEqual( Stem("existam"), "exist" );
	deepEqual( Stem("existe"), "exist" );
	deepEqual( Stem("existem"), "exist" );
	deepEqual( Stem("existência"), "existent" );
	deepEqual( Stem("existenciais"), "existenc" );
	deepEqual( Stem("existencial"), "existencial" );
	deepEqual( Stem("existencialista"), "existencial" );
	deepEqual( Stem("existente"), "existent" );
	deepEqual( Stem("existentes"), "existent" );
	deepEqual( Stem("existia"), "exist" );
	deepEqual( Stem("existiam"), "exist" );
	deepEqual( Stem("existindo"), "exist" );
	deepEqual( Stem("existir"), "exist" );
	deepEqual( Stem("existiram"), "exist" );
	deepEqual( Stem("existirão"), "exist" );
	deepEqual( Stem("existiria"), "exist" );
	deepEqual( Stem("existiriam"), "exist" );
	deepEqual( Stem("existisse"), "exist" );
	deepEqual( Stem("existissem"), "exist" );
	deepEqual( Stem("existiu"), "exist" );
	deepEqual( Stem("êxito"), "êxit" );
	deepEqual( Stem("êxitos"), "êxit" );
	deepEqual( Stem("êxodo"), "êxod" );
	deepEqual( Stem("exorbitantes"), "exorbit" );
	deepEqual( Stem("exorcismo"), "exorc" );
	deepEqual( Stem("exorcizada"), "exorciz" );
	deepEqual( Stem("exortando"), "exort" );
	deepEqual( Stem("exótica"), "exót" );
	deepEqual( Stem("exóticas"), "exót" );
	deepEqual( Stem("exótico"), "exót" );
	deepEqual( Stem("exóticos"), "exót" );
	deepEqual( Stem("expand"), "expand" );
	deepEqual( Stem("expande"), "expand" );
	deepEqual( Stem("expandindo"), "expand" );
	deepEqual( Stem("expandir"), "expand" );
	deepEqual( Stem("expandiu"), "expand" );
	deepEqual( Stem("expansão"), "expansã" );
	deepEqual( Stem("expansionista"), "expansion" );
	deepEqual( Stem("expansões"), "expansõ" );
	deepEqual( Stem("expectante"), "expect" );
	deepEqual( Stem("expectativa"), "expect" );
	deepEqual( Stem("expectativas"), "expect" );
	deepEqual( Stem("expedição"), "expediçã" );
	deepEqual( Stem("expedições"), "expediçõ" );
	deepEqual( Stem("expedida"), "exped" );
	deepEqual( Stem("expedido"), "exped" );
	deepEqual( Stem("expedidos"), "exped" );
	deepEqual( Stem("expediente"), "expedient" );
	deepEqual( Stem("expediu"), "exped" );
	deepEqual( Stem("expelida"), "expel" );
	deepEqual( Stem("expelido"), "expel" );
	deepEqual( Stem("expelir"), "expel" );
	deepEqual( Stem("experiência"), "experient" );
	deepEqual( Stem("experiências"), "experient" );
	deepEqual( Stem("experiente"), "experient" );
	deepEqual( Stem("experientes"), "experient" );
	deepEqual( Stem("experimenta"), "experiment" );
	deepEqual( Stem("experimentação"), "experiment" );
	deepEqual( Stem("experimentadas"), "experiment" );
	deepEqual( Stem("experimentado"), "experiment" );
	deepEqual( Stem("experimentados"), "experiment" );
	deepEqual( Stem("experimentais"), "experiment" );
	deepEqual( Stem("experimental"), "experimental" );
	deepEqual( Stem("experimentam"), "experiment" );
	deepEqual( Stem("experimentando"), "experiment" );
	deepEqual( Stem("experimentar"), "experiment" );
	deepEqual( Stem("experimentaram"), "experiment" );
	deepEqual( Stem("experimentava"), "experiment" );
	deepEqual( Stem("experimente"), "experi" );
	deepEqual( Stem("experimentei"), "experiment" );
	deepEqual( Stem("experimento"), "exper" );
	deepEqual( Stem("experimentos"), "exper" );
	deepEqual( Stem("experimentou"), "experiment" );
	deepEqual( Stem("experts"), "experts" );
	deepEqual( Stem("expiração"), "expir" );
	deepEqual( Stem("expiratória"), "expiratór" );
	deepEqual( Stem("explica"), "explic" );
	deepEqual( Stem("explicação"), "explic" );
	deepEqual( Stem("explicações"), "explic" );
	deepEqual( Stem("explicada"), "explic" );
	deepEqual( Stem("explicado"), "explic" );
	deepEqual( Stem("explicados"), "explic" );
	deepEqual( Stem("explicam"), "explic" );
	deepEqual( Stem("explicando"), "explic" );
	deepEqual( Stem("explicar"), "explic" );
	deepEqual( Stem("explicativo"), "explic" );
	deepEqual( Stem("explicava"), "explic" );
	deepEqual( Stem("explícita"), "explícit" );
	deepEqual( Stem("explicitar"), "explicit" );
	deepEqual( Stem("explícito"), "explícit" );
	deepEqual( Stem("explico"), "explic" );
	deepEqual( Stem("explicou"), "explic" );
	deepEqual( Stem("explique"), "expliqu" );
	deepEqual( Stem("explode"), "explod" );
	deepEqual( Stem("explodem"), "explod" );
	deepEqual( Stem("explodi"), "explod" );
	deepEqual( Stem("explodido"), "explod" );
	deepEqual( Stem("explodir"), "explod" );
	deepEqual( Stem("explodira"), "explod" );
	deepEqual( Stem("explodiram"), "explod" );
	deepEqual( Stem("explodiu"), "explod" );
	deepEqual( Stem("explora"), "explor" );
	deepEqual( Stem("exploração"), "explor" );
	deepEqual( Stem("explorado"), "explor" );
	deepEqual( Stem("explorador"), "explor" );
	deepEqual( Stem("exploradora"), "explor" );
	deepEqual( Stem("exploradores"), "explor" );
	deepEqual( Stem("exploram"), "explor" );
	deepEqual( Stem("explorando"), "explor" );
	deepEqual( Stem("explorar"), "explor" );
	deepEqual( Stem("explorariam"), "explor" );
	deepEqual( Stem("explorer"), "explor" );
	deepEqual( Stem("explosão"), "explosã" );
	deepEqual( Stem("explosiva"), "explos" );
	deepEqual( Stem("explosivas"), "explos" );
	deepEqual( Stem("explosivo"), "explos" );
	deepEqual( Stem("explosivos"), "explos" );
	deepEqual( Stem("explosões"), "explosõ" );
	deepEqual( Stem("expõe"), "expõ" );
	deepEqual( Stem("expoente"), "expoent" );
	deepEqual( Stem("expondo"), "expond" );
	deepEqual( Stem("exponha"), "exponh" );
	deepEqual( Stem("expor"), "expor" );
	deepEqual( Stem("exporia"), "expor" );
	deepEqual( Stem("exporta"), "export" );
	deepEqual( Stem("exportação"), "export" );
	deepEqual( Stem("exportações"), "export" );
	deepEqual( Stem("exportada"), "export" );
	deepEqual( Stem("exportado"), "export" );
	deepEqual( Stem("exportador"), "export" );
	deepEqual( Stem("exportadora"), "export" );
	deepEqual( Stem("exportadores"), "export" );
	deepEqual( Stem("exportados"), "export" );
	deepEqual( Stem("exportam"), "export" );
	deepEqual( Stem("exportar"), "export" );
	deepEqual( Stem("exportou"), "export" );
	deepEqual( Stem("expôs"), "expôs" );
	deepEqual( Stem("exposição"), "exposiçã" );
	deepEqual( Stem("exposições"), "exposiçõ" );
	deepEqual( Stem("expositores"), "expositor" );
	deepEqual( Stem("exposto"), "expost" );
	deepEqual( Stem("expostos"), "expost" );
	deepEqual( Stem("express"), "express" );
	deepEqual( Stem("expressa"), "express" );
	deepEqual( Stem("expressam"), "express" );
	deepEqual( Stem("expressamente"), "express" );
	deepEqual( Stem("expressando"), "express" );
	deepEqual( Stem("expressão"), "expressã" );
	deepEqual( Stem("expressar"), "express" );
	deepEqual( Stem("expressas"), "express" );
	deepEqual( Stem("expressionistas"), "expression" );
	deepEqual( Stem("expressiva"), "express" );
	deepEqual( Stem("expressivíssima"), "expressivíssim" );
	deepEqual( Stem("expressivo"), "express" );
	deepEqual( Stem("expressões"), "expressõ" );
	deepEqual( Stem("expressos"), "express" );
	deepEqual( Stem("exprima"), "exprim" );
	deepEqual( Stem("exprimir"), "exprim" );
	deepEqual( Stem("expulsá"), "expuls" );
	deepEqual( Stem("expulsando"), "expuls" );
	deepEqual( Stem("expulsar"), "expuls" );
	deepEqual( Stem("expulsasse"), "expuls" );
	deepEqual( Stem("expulsavam"), "expuls" );
	deepEqual( Stem("expulso"), "expuls" );
	deepEqual( Stem("expulsos"), "expuls" );
	deepEqual( Stem("expurgada"), "expurg" );
	deepEqual( Stem("expus"), "expus" );
	deepEqual( Stem("extensa"), "extens" );
	deepEqual( Stem("extensão"), "extensã" );
	deepEqual( Stem("extensas"), "extens" );
	deepEqual( Stem("extenso"), "extens" );
	deepEqual( Stem("extensos"), "extens" );
	deepEqual( Stem("extenuantes"), "extenu" );
	deepEqual( Stem("exterior"), "exterior" );
	deepEqual( Stem("exteriores"), "exterior" );
	deepEqual( Stem("exterminador"), "extermin" );
	deepEqual( Stem("extermínio"), "extermíni" );
	deepEqual( Stem("externa"), "extern" );
	deepEqual( Stem("externas"), "extern" );
	deepEqual( Stem("externo"), "extern" );
	deepEqual( Stem("externos"), "extern" );
	deepEqual( Stem("extinção"), "extinçã" );
	deepEqual( Stem("extinta"), "extint" );
	deepEqual( Stem("extinto"), "extint" );
	deepEqual( Stem("extintor"), "extintor" );
	deepEqual( Stem("extirpado"), "extirp" );
	deepEqual( Stem("extirpar"), "extirp" );
	deepEqual( Stem("extirpei"), "extirp" );
	deepEqual( Stem("extorquidas"), "extorqu" );
	deepEqual( Stem("extorsão"), "extorsã" );
	deepEqual( Stem("extra"), "extra" );
	deepEqual( Stem("extração"), "extraçã" );
	deepEqual( Stem("extrações"), "extraçõ" );
	deepEqual( Stem("extraconjugais"), "extraconjug" );
	deepEqual( Stem("extradição"), "extradiçã" );
	deepEqual( Stem("extraem"), "extra" );
	deepEqual( Stem("extrai"), "extra" );
	deepEqual( Stem("extraiam"), "extra" );
	deepEqual( Stem("extraída"), "extraíd" );
	deepEqual( Stem("extraídas"), "extraíd" );
	deepEqual( Stem("extraído"), "extraíd" );
	deepEqual( Stem("extrair"), "extra" );
	deepEqual( Stem("extraiu"), "extra" );
	deepEqual( Stem("extraordinária"), "extraordinár" );
	deepEqual( Stem("extraordinariamente"), "extraordinari" );
	deepEqual( Stem("extraordinário"), "extraordinári" );
	deepEqual( Stem("extraordinários"), "extraordinári" );
	deepEqual( Stem("extrapola"), "extrapol" );
	deepEqual( Stem("extras"), "extras" );
	deepEqual( Stem("extraterrestes"), "extraterr" );
	deepEqual( Stem("extraterrestre"), "extraterrestr" );
	deepEqual( Stem("extraterrestres"), "extraterrestr" );
	deepEqual( Stem("extrato"), "extrat" );
	deepEqual( Stem("extratoras"), "extrator" );
	deepEqual( Stem("extratos"), "extrat" );
	deepEqual( Stem("extratrabalho"), "extratrabalh" );
	deepEqual( Stem("extravagância"), "extravag" );
	deepEqual( Stem("extravagante"), "extravag" );
	deepEqual( Stem("extravagantes"), "extravag" );
	deepEqual( Stem("extravasamento"), "extravas" );
	deepEqual( Stem("extrema"), "extrem" );
	deepEqual( Stem("extremado"), "extrem" );
	deepEqual( Stem("extremamente"), "extrem" );
	deepEqual( Stem("extremidade"), "extrem" );
	deepEqual( Stem("extremidades"), "extrem" );
	deepEqual( Stem("extremo"), "extrem" );
	deepEqual( Stem("extremos"), "extrem" );
	deepEqual( Stem("extrovertida"), "extrovert" );
	deepEqual( Stem("extrovertidas"), "extrovert" );
	deepEqual( Stem("exu"), "exu" );
	deepEqual( Stem("exuberância"), "exuber" );
	deepEqual( Stem("exuberantes"), "exuber" );
	deepEqual( Stem("exulta"), "exult" );
	deepEqual( Stem("exultei"), "exult" );
	deepEqual( Stem("exultou"), "exult" );
	deepEqual( Stem("exumação"), "exum" );
	deepEqual( Stem("exxon"), "exxon" );
	deepEqual( Stem("eye"), "eye" );
	deepEqual( Stem("eymar"), "eymar" );
	deepEqual( Stem("ezequiel"), "ezequiel" );
	deepEqual( Stem("f"), "f" );
	deepEqual( Stem("fã"), "fã" );
	deepEqual( Stem("faa"), "faa" );
	deepEqual( Stem("faap"), "faap" );
	deepEqual( Stem("fab"), "fab" );
	deepEqual( Stem("fabergé"), "faberg" );
	deepEqual( Stem("fabiana"), "fabian" );
	deepEqual( Stem("fábio"), "fábi" );
	deepEqual( Stem("fabri"), "fabr" );
	deepEqual( Stem("fabrica"), "fabric" );
	deepEqual( Stem("fábrica"), "fábric" );
	deepEqual( Stem("fabricação"), "fabric" );
	deepEqual( Stem("fabricada"), "fabric" );
	deepEqual( Stem("fabricadas"), "fabric" );
	deepEqual( Stem("fabricado"), "fabric" );
	deepEqual( Stem("fabricados"), "fabric" );
	deepEqual( Stem("fabricam"), "fabric" );
	deepEqual( Stem("fabricando"), "fabric" );
	deepEqual( Stem("fabricante"), "fabric" );
	deepEqual( Stem("fabricantes"), "fabric" );
	deepEqual( Stem("fabricar"), "fabric" );
	deepEqual( Stem("fábricas"), "fábric" );
	deepEqual( Stem("fabricasse"), "fabric" );
	deepEqual( Stem("fabricavam"), "fabric" );
	deepEqual( Stem("fabrício"), "fabríci" );
	deepEqual( Stem("fabricou"), "fabric" );
	deepEqual( Stem("fabriquetas"), "fabriquet" );
	deepEqual( Stem("fabrizia"), "fabriz" );
	deepEqual( Stem("fábula"), "fábul" );
	deepEqual( Stem("fabuloso"), "fabul" );
	deepEqual( Stem("fabulosos"), "fabul" );
	deepEqual( Stem("faca"), "fac" );
	deepEqual( Stem("faça"), "fac" );
	deepEqual( Stem("facadas"), "fac" );
	deepEqual( Stem("façam"), "fac" );
	deepEqual( Stem("façanha"), "façanh" );
	deepEqual( Stem("facção"), "facçã" );
	deepEqual( Stem("facções"), "facçõ" );
	deepEqual( Stem("face"), "fac" );
	deepEqual( Stem("fáceis"), "fác" );
	deepEqual( Stem("faces"), "fac" );
	deepEqual( Stem("facet"), "facet" );
	deepEqual( Stem("faceta"), "facet" );
	deepEqual( Stem("fachada"), "fach" );
	deepEqual( Stem("facho"), "fach" );
	deepEqual( Stem("facial"), "facial" );
	deepEqual( Stem("fácil"), "fácil" );
	deepEqual( Stem("facilidade"), "facil" );
	deepEqual( Stem("facilidades"), "facil" );
	deepEqual( Stem("facilita"), "facilit" );
	deepEqual( Stem("facilitado"), "facilit" );
	deepEqual( Stem("facilitando"), "facilit" );
	deepEqual( Stem("facilitar"), "facilit" );
	deepEqual( Stem("facilitaria"), "facilit" );
	deepEqual( Stem("facilito"), "facilit" );
	deepEqual( Stem("facilmente"), "facil" );
	deepEqual( Stem("faço"), "fac" );
	deepEqual( Stem("factóides"), "factóid" );
	deepEqual( Stem("factory"), "factory" );
	deepEqual( Stem("faculdade"), "faculdad" );
	deepEqual( Stem("faculdades"), "faculdad" );
	deepEqual( Stem("fadado"), "fad" );
	deepEqual( Stem("fadados"), "fad" );
	deepEqual( Stem("fadas"), "fad" );
	deepEqual( Stem("fadiga"), "fadig" );
	deepEqual( Stem("fadlo"), "fadl" );
	deepEqual( Stem("fagolipo"), "fagolip" );
	deepEqual( Stem("fagundes"), "fagund" );
	deepEqual( Stem("faildes"), "faild" );
	deepEqual( Stem("faire"), "fair" );
	deepEqual( Stem("fairlane"), "fairlan" );
	deepEqual( Stem("faiscantes"), "faiscant" );
	deepEqual( Stem("faisões"), "faisõ" );
	deepEqual( Stem("faith"), "faith" );
	deepEqual( Stem("faixa"), "faix" );
	deepEqual( Stem("faixas"), "faix" );
	deepEqual( Stem("fajuto"), "fajut" );
	deepEqual( Stem("fala"), "fal" );
	deepEqual( Stem("falada"), "fal" );
	deepEqual( Stem("faladas"), "fal" );
	deepEqual( Stem("falado"), "fal" );
	deepEqual( Stem("falam"), "fal" );
	deepEqual( Stem("falamos"), "fal" );
	deepEqual( Stem("falando"), "fal" );
	deepEqual( Stem("falante"), "falant" );
	deepEqual( Stem("falantes"), "falant" );
	deepEqual( Stem("falar"), "fal" );
	deepEqual( Stem("falaram"), "fal" );
	deepEqual( Stem("falaremos"), "fal" );
	deepEqual( Stem("falaria"), "fal" );
	deepEqual( Stem("falas"), "fal" );
	deepEqual( Stem("falatório"), "falatóri" );
	deepEqual( Stem("falava"), "fal" );
	deepEqual( Stem("falavam"), "fal" );
	deepEqual( Stem("falcão"), "falcã" );
	deepEqual( Stem("falcatrua"), "falcatru" );
	deepEqual( Stem("falcatruas"), "falcatru" );
	deepEqual( Stem("falco"), "falc" );
	deepEqual( Stem("fale"), "fal" );
	deepEqual( Stem("falecer"), "falec" );
	deepEqual( Stem("falecida"), "falec" );
	deepEqual( Stem("falecido"), "falec" );
	deepEqual( Stem("falecimento"), "falec" );
	deepEqual( Stem("falei"), "fal" );
	deepEqual( Stem("falem"), "fal" );
	deepEqual( Stem("falência"), "falênc" );
	deepEqual( Stem("falha"), "falh" );
	deepEqual( Stem("falhas"), "falh" );
	deepEqual( Stem("falhou"), "falh" );
	deepEqual( Stem("falida"), "fal" );
	deepEqual( Stem("falidas"), "fal" );
	deepEqual( Stem("falido"), "fal" );
	deepEqual( Stem("falidos"), "fal" );
	deepEqual( Stem("falimentar"), "faliment" );
	deepEqual( Stem("faliram"), "fal" );
	deepEqual( Stem("faliu"), "fal" );
	deepEqual( Stem("falo"), "fal" );
	deepEqual( Stem("falou"), "fal" );
	deepEqual( Stem("falsa"), "fals" );
	deepEqual( Stem("falsários"), "falsári" );
	deepEqual( Stem("falsas"), "fals" );
	deepEqual( Stem("falseando"), "fals" );
	deepEqual( Stem("falsidade"), "falsidad" );
	deepEqual( Stem("falsificação"), "falsific" );
	deepEqual( Stem("falsificações"), "falsific" );
	deepEqual( Stem("falsificadas"), "falsific" );
	deepEqual( Stem("falsificado"), "falsific" );
	deepEqual( Stem("falsificar"), "falsific" );
	deepEqual( Stem("falsificaram"), "falsific" );
	deepEqual( Stem("falso"), "fals" );
	deepEqual( Stem("falsos"), "fals" );
	deepEqual( Stem("falta"), "falt" );
	deepEqual( Stem("faltado"), "falt" );
	deepEqual( Stem("faltam"), "falt" );
	deepEqual( Stem("faltando"), "falt" );
	deepEqual( Stem("faltar"), "falt" );
	deepEqual( Stem("faltará"), "falt" );
	deepEqual( Stem("faltariam"), "falt" );
	deepEqual( Stem("faltas"), "falt" );
	deepEqual( Stem("faltava"), "falt" );
	deepEqual( Stem("faltavam"), "falt" );
	deepEqual( Stem("faltei"), "falt" );
	deepEqual( Stem("faltou"), "falt" );
	deepEqual( Stem("fama"), "fam" );
	deepEqual( Stem("fambrini"), "fambrin" );
	deepEqual( Stem("fame"), "fam" );
	deepEqual( Stem("famí"), "fam" );
	deepEqual( Stem("famigerada"), "famiger" );
	deepEqual( Stem("família"), "famíl" );
	deepEqual( Stem("familiar"), "famili" );
	deepEqual( Stem("familiares"), "famili" );
	deepEqual( Stem("familiarizando"), "familiariz" );
	deepEqual( Stem("famílias"), "famíl" );
	deepEqual( Stem("family"), "family" );
	deepEqual( Stem("faminto"), "famint" );
	deepEqual( Stem("famintos"), "famint" );
	deepEqual( Stem("famosa"), "famos" );
	deepEqual( Stem("famosas"), "famos" );
	deepEqual( Stem("famoso"), "famos" );
	deepEqual( Stem("famosos"), "famos" );
	deepEqual( Stem("fan"), "fan" );
	deepEqual( Stem("fanática"), "fanát" );
	deepEqual( Stem("fanático"), "fanát" );
	deepEqual( Stem("fanáticos"), "fanát" );
	deepEqual( Stem("fanatismo"), "fanat" );
	deepEqual( Stem("fanhosa"), "fanhos" );
	deepEqual( Stem("fanini"), "fanin" );
	deepEqual( Stem("fantasia"), "fantas" );
	deepEqual( Stem("fantasiado"), "fantasi" );
	deepEqual( Stem("fantasias"), "fantas" );
	deepEqual( Stem("fantasio"), "fantasi" );
	deepEqual( Stem("fantasiosa"), "fantasi" );
	deepEqual( Stem("fantasioso"), "fantasi" );
	deepEqual( Stem("fantasma"), "fantasm" );
	deepEqual( Stem("fantasmas"), "fantasm" );
	deepEqual( Stem("fantástica"), "fantást" );
	deepEqual( Stem("fantásticas"), "fantást" );
	deepEqual( Stem("fantástico"), "fantást" );
	deepEqual( Stem("fantásticos"), "fantást" );
	deepEqual( Stem("fapesp"), "fapesp" );
	deepEqual( Stem("fará"), "far" );
	deepEqual( Stem("farah"), "farah" );
	deepEqual( Stem("farão"), "farã" );
	deepEqual( Stem("farda"), "fard" );
	deepEqual( Stem("fardado"), "fard" );
	deepEqual( Stem("fardas"), "fard" );
	deepEqual( Stem("fardo"), "fard" );
	deepEqual( Stem("farei"), "far" );
	deepEqual( Stem("fareja"), "farej" );
	deepEqual( Stem("faremos"), "far" );
	deepEqual( Stem("fares"), "far" );
	deepEqual( Stem("faria"), "far" );
	deepEqual( Stem("fariam"), "far" );
	deepEqual( Stem("faríamos"), "far" );
	deepEqual( Stem("farias"), "far" );
	deepEqual( Stem("faringe"), "faring" );
	deepEqual( Stem("farinha"), "farinh" );
	deepEqual( Stem("farkas"), "fark" );
	deepEqual( Stem("farmacêutica"), "farmacêut" );
	deepEqual( Stem("farmacêuticas"), "farmacêut" );
	deepEqual( Stem("farmacêutico"), "farmacêut" );
	deepEqual( Stem("farmacêuticos"), "farmacêut" );
	deepEqual( Stem("farmácia"), "farmác" );
	deepEqual( Stem("farmácias"), "farmác" );
	deepEqual( Stem("farmacologista"), "farmacolog" );
	deepEqual( Stem("farmacologistas"), "farmacolog" );
	deepEqual( Stem("farmaton"), "farmaton" );
	deepEqual( Stem("faro"), "far" );
	deepEqual( Stem("faroeste"), "faro" );
	deepEqual( Stem("faroestes"), "faro" );
	deepEqual( Stem("farofa"), "farof" );
	deepEqual( Stem("faróis"), "faró" );
	deepEqual( Stem("farol"), "farol" );
	deepEqual( Stem("farra"), "farr" );
	deepEqual( Stem("farrah"), "farrah" );
	deepEqual( Stem("farrakhan"), "farrakhan" );
	deepEqual( Stem("farras"), "farr" );
	deepEqual( Stem("farsa"), "fars" );
	deepEqual( Stem("farta"), "fart" );
	deepEqual( Stem("fartando"), "fart" );
	deepEqual( Stem("fartas"), "fart" );
	deepEqual( Stem("farto"), "fart" );
	deepEqual( Stem("fartos"), "fart" );
	deepEqual( Stem("fãs"), "fãs" );
	deepEqual( Stem("fasano"), "fasan" );
	deepEqual( Stem("fascículos"), "fascícul" );
	deepEqual( Stem("fascina"), "fascin" );
	deepEqual( Stem("fascinação"), "fascin" );
	deepEqual( Stem("fascinado"), "fascin" );
	deepEqual( Stem("fascinam"), "fascin" );
	deepEqual( Stem("fascinante"), "fascin" );
	deepEqual( Stem("fascinava"), "fascin" );
	deepEqual( Stem("fascínio"), "fascíni" );
	deepEqual( Stem("fascinou"), "fascin" );
	deepEqual( Stem("fase"), "fas" );
	deepEqual( Stem("fases"), "fas" );
	deepEqual( Stem("fashion"), "fashion" );
	deepEqual( Stem("fast"), "fast" );
	deepEqual( Stem("fat"), "fat" );
	deepEqual( Stem("fatais"), "fat" );
	deepEqual( Stem("fatal"), "fatal" );
	deepEqual( Stem("fatalidade"), "fatal" );
	deepEqual( Stem("fatalidades"), "fatal" );
	deepEqual( Stem("fatia"), "fat" );
	deepEqual( Stem("fatiadas"), "fati" );
	deepEqual( Stem("fatias"), "fat" );
	deepEqual( Stem("fatídico"), "fatíd" );
	deepEqual( Stem("fátima"), "fátim" );
	deepEqual( Stem("fato"), "fat" );
	deepEqual( Stem("fator"), "fator" );
	deepEqual( Stem("fatores"), "fator" );
	deepEqual( Stem("fatos"), "fat" );
	deepEqual( Stem("fatura"), "fatur" );
	deepEqual( Stem("faturado"), "fatur" );
	deepEqual( Stem("faturados"), "fatur" );
	deepEqual( Stem("faturam"), "fatur" );
	deepEqual( Stem("faturamento"), "fatur" );
	deepEqual( Stem("faturando"), "fatur" );
	deepEqual( Stem("faturar"), "fatur" );
	deepEqual( Stem("faturaram"), "fatur" );
	deepEqual( Stem("faturariam"), "fatur" );
	deepEqual( Stem("faturava"), "fatur" );
	deepEqual( Stem("faturou"), "fatur" );
	deepEqual( Stem("fauna"), "faun" );
	deepEqual( Stem("faustini"), "faustin" );
	deepEqual( Stem("faustino"), "faustin" );
	deepEqual( Stem("fausto"), "faust" );
	deepEqual( Stem("fava"), "fav" );
	deepEqual( Stem("favas"), "fav" );
	deepEqual( Stem("favela"), "favel" );
	deepEqual( Stem("favelado"), "favel" );
	deepEqual( Stem("favelas"), "favel" );
	deepEqual( Stem("fávero"), "fáver" );
	deepEqual( Stem("favor"), "favor" );
	deepEqual( Stem("favoráveis"), "favor" );
	deepEqual( Stem("favorável"), "favor" );
	deepEqual( Stem("favoravelmente"), "favor" );
	deepEqual( Stem("favorece"), "favorec" );
	deepEqual( Stem("favorecem"), "favorec" );
	deepEqual( Stem("favorecendo"), "favorec" );
	deepEqual( Stem("favorecer"), "favorec" );
	deepEqual( Stem("favorecida"), "favorec" );
	deepEqual( Stem("favorecidas"), "favorec" );
	deepEqual( Stem("favorecimento"), "favorec" );
	deepEqual( Stem("favores"), "favor" );
	deepEqual( Stem("favorito"), "favorit" );
	deepEqual( Stem("fawcett"), "fawcett" );
	deepEqual( Stem("fax"), "fax" );
	deepEqual( Stem("faxineira"), "faxineir" );
	deepEqual( Stem("faxineiro"), "faxineir" );
	deepEqual( Stem("faxineiros"), "faxineir" );
	deepEqual( Stem("faz"), "faz" );
	deepEqual( Stem("fazê"), "faz" );
	deepEqual( Stem("fazem"), "faz" );
	deepEqual( Stem("fazemos"), "faz" );
	deepEqual( Stem("fazenda"), "fazend" );
	deepEqual( Stem("fazendas"), "fazend" );
	deepEqual( Stem("fazendeiro"), "fazendeir" );
	deepEqual( Stem("fazendeiros"), "fazendeir" );
	deepEqual( Stem("fazendo"), "faz" );
	deepEqual( Stem("fazendola"), "fazendol" );
	deepEqual( Stem("fazer"), "faz" );
	deepEqual( Stem("fazermos"), "faz" );
	deepEqual( Stem("fazia"), "faz" );
	deepEqual( Stem("faziam"), "faz" );
	deepEqual( Stem("fazíamos"), "faz" );
	deepEqual( Stem("fbi"), "fbi" );
	deepEqual( Stem("fda"), "fda" );
	deepEqual( Stem("fé"), "fé" );
	deepEqual( Stem("fearnside"), "fearnsid" );
	deepEqual( Stem("febem"), "feb" );
	deepEqual( Stem("febre"), "febr" );
	deepEqual( Stem("fecha"), "fech" );
	deepEqual( Stem("fechá"), "fech" );
	deepEqual( Stem("fechada"), "fech" );
	deepEqual( Stem("fechadas"), "fech" );
	deepEqual( Stem("fechado"), "fech" );
	deepEqual( Stem("fechados"), "fech" );
	deepEqual( Stem("fechadura"), "fechadur" );
	deepEqual( Stem("fecham"), "fech" );
	deepEqual( Stem("fechamento"), "fechament" );
	deepEqual( Stem("fechando"), "fech" );
	deepEqual( Stem("fechar"), "fech" );
	deepEqual( Stem("fechara"), "fech" );
	deepEqual( Stem("fecharam"), "fech" );
	deepEqual( Stem("fechassem"), "fech" );
	deepEqual( Stem("fechava"), "fech" );
	deepEqual( Stem("feche"), "fech" );
	deepEqual( Stem("fechou"), "fech" );
	deepEqual( Stem("fecundada"), "fecund" );
	deepEqual( Stem("fecundas"), "fecund" );
	deepEqual( Stem("federação"), "feder" );
	deepEqual( Stem("federações"), "feder" );
	deepEqual( Stem("federais"), "feder" );
	deepEqual( Stem("federal"), "federal" );
	deepEqual( Stem("federativo"), "feder" );
	deepEqual( Stem("federico"), "feder" );
	deepEqual( Stem("fedido"), "fed" );
	deepEqual( Stem("feedback"), "feedback" );
	deepEqual( Stem("feia"), "fei" );
	deepEqual( Stem("feição"), "feiçã" );
	deepEqual( Stem("feições"), "feiçõ" );
	deepEqual( Stem("feijão"), "feijã" );
	deepEqual( Stem("feijó"), "feij" );
	deepEqual( Stem("feijoada"), "feijo" );
	deepEqual( Stem("feio"), "fei" );
	deepEqual( Stem("feios"), "fei" );
	deepEqual( Stem("feira"), "feir" );
	deepEqual( Stem("feirante"), "feirant" );
	deepEqual( Stem("feiras"), "feir" );
	deepEqual( Stem("feita"), "feit" );
	deepEqual( Stem("feitas"), "feit" );
	deepEqual( Stem("feitiçaria"), "feitic" );
	deepEqual( Stem("feitiço"), "feitic" );
	deepEqual( Stem("feitiços"), "feitic" );
	deepEqual( Stem("feitler"), "feitl" );
	deepEqual( Stem("feito"), "feit" );
	deepEqual( Stem("feitores"), "feitor" );
	deepEqual( Stem("feitorias"), "feitor" );
	deepEqual( Stem("feitos"), "feit" );
	deepEqual( Stem("feitosa"), "feitos" );
	deepEqual( Stem("feiúra"), "feiúr" );
	deepEqual( Stem("feix"), "feix" );
	deepEqual( Stem("feixe"), "feix" );
	deepEqual( Stem("feldmann"), "feldmann" );
	deepEqual( Stem("felicidade"), "felic" );
	deepEqual( Stem("felicíssimos"), "felicíss" );
	deepEqual( Stem("felino"), "felin" );
	deepEqual( Stem("felinos"), "felin" );
	deepEqual( Stem("felinto"), "felint" );
	deepEqual( Stem("felipe"), "felip" );
	deepEqual( Stem("félix"), "félix" );
	deepEqual( Stem("feliz"), "feliz" );
	deepEqual( Stem("felizardos"), "felizard" );
	deepEqual( Stem("felizes"), "feliz" );
	deepEqual( Stem("felizmente"), "feliz" );
	deepEqual( Stem("fellini"), "fellin" );
	deepEqual( Stem("fêmea"), "fêm" );
	deepEqual( Stem("fêmeas"), "fêm" );
	deepEqual( Stem("feminilidade"), "feminil" );
	deepEqual( Stem("feminina"), "feminin" );
	deepEqual( Stem("femininas"), "feminin" );
	deepEqual( Stem("feminino"), "feminin" );
	deepEqual( Stem("femininos"), "feminin" );
	deepEqual( Stem("feminismo"), "femin" );
	deepEqual( Stem("feminista"), "femin" );
	deepEqual( Stem("feministas"), "femin" );
	deepEqual( Stem("femme"), "femm" );
	deepEqual( Stem("fêmur"), "fêmur" );
	deepEqual( Stem("fêmures"), "fêmur" );
	deepEqual( Stem("fendas"), "fend" );
	deepEqual( Stem("fenecem"), "fenec" );
	deepEqual( Stem("fenecessem"), "fenec" );
	deepEqual( Stem("fenerich"), "fenerich" );
	deepEqual( Stem("fenomenais"), "fenomen" );
	deepEqual( Stem("fenomenal"), "fenomenal" );
	deepEqual( Stem("fenômeno"), "fenômen" );
	deepEqual( Stem("fenômenos"), "fenômen" );
	deepEqual( Stem("fenproporex"), "fenproporex" );
	deepEqual( Stem("fera"), "fer" );
	deepEqual( Stem("feras"), "fer" );
	deepEqual( Stem("ferdinando"), "ferdin" );
	deepEqual( Stem("fere"), "fer" );
	deepEqual( Stem("ferguson"), "ferguson" );
	deepEqual( Stem("feriado"), "feri" );
	deepEqual( Stem("feriados"), "feri" );
	deepEqual( Stem("férias"), "fér" );
	deepEqual( Stem("ferida"), "fer" );
	deepEqual( Stem("feridas"), "fer" );
	deepEqual( Stem("ferido"), "fer" );
	deepEqual( Stem("feridos"), "fer" );
	deepEqual( Stem("ferimento"), "feriment" );
	deepEqual( Stem("ferimentos"), "feriment" );
	deepEqual( Stem("ferir"), "fer" );
	deepEqual( Stem("feriu"), "fer" );
	deepEqual( Stem("fermentação"), "ferment" );
	deepEqual( Stem("fermentando"), "ferment" );
	deepEqual( Stem("fernanda"), "fernand" );
	deepEqual( Stem("fernandes"), "fernand" );
	deepEqual( Stem("fernandez"), "fernandez" );
	deepEqual( Stem("fernando"), "fern" );
	deepEqual( Stem("ferocidade"), "feroc" );
	deepEqual( Stem("feroz"), "feroz" );
	deepEqual( Stem("ferragano"), "ferragan" );
	deepEqual( Stem("ferramenta"), "ferrament" );
	deepEqual( Stem("ferramentaria"), "ferrament" );
	deepEqual( Stem("ferramentas"), "ferrament" );
	deepEqual( Stem("ferrari"), "ferrar" );
	deepEqual( Stem("ferraz"), "ferraz" );
	deepEqual( Stem("férreas"), "férr" );
	deepEqual( Stem("ferreira"), "ferreir" );
	deepEqual( Stem("ferrenhos"), "ferrenh" );
	deepEqual( Stem("ferro"), "ferr" );
	deepEqual( Stem("ferrovia"), "ferrov" );
	deepEqual( Stem("ferroviária"), "ferroviár" );
	deepEqual( Stem("ferroviárias"), "ferroviár" );
	deepEqual( Stem("ferroviário"), "ferroviári" );
	deepEqual( Stem("ferrovias"), "ferrov" );
	deepEqual( Stem("ferry"), "ferry" );
	deepEqual( Stem("fértil"), "fértil" );
	deepEqual( Stem("fertilidade"), "fertil" );
	deepEqual( Stem("fervente"), "fervent" );
	deepEqual( Stem("ferver"), "ferv" );
	deepEqual( Stem("fervilhante"), "fervilh" );
	deepEqual( Stem("fervilhantes"), "fervilh" );
	deepEqual( Stem("fervilhavam"), "fervilh" );
	deepEqual( Stem("fervor"), "fervor" );
	deepEqual( Stem("fervoroso"), "fervor" );
	deepEqual( Stem("fervorosos"), "fervor" );
	deepEqual( Stem("fes"), "fes" );
	deepEqual( Stem("festa"), "fest" );
	deepEqual( Stem("festança"), "festanc" );
	deepEqual( Stem("festas"), "fest" );
	deepEqual( Stem("festeja"), "festej" );
	deepEqual( Stem("festejada"), "festej" );
	deepEqual( Stem("festejam"), "festej" );
	deepEqual( Stem("festejar"), "festej" );
	deepEqual( Stem("festejaram"), "festej" );
	deepEqual( Stem("festejava"), "festej" );
	deepEqual( Stem("festejos"), "festej" );
	deepEqual( Stem("festinha"), "festinh" );
	deepEqual( Stem("festinhas"), "festinh" );
	deepEqual( Stem("festiva"), "festiv" );
	deepEqual( Stem("festivais"), "festiv" );
	deepEqual( Stem("festival"), "festival" );
	deepEqual( Stem("fethyie"), "fethyi" );
	deepEqual( Stem("fetiche"), "fetich" );
	deepEqual( Stem("fétido"), "fét" );
	deepEqual( Stem("feto"), "fet" );
	deepEqual( Stem("fevereiro"), "fevereir" );
	deepEqual( Stem("fez"), "fez" );
	deepEqual( Stem("fezes"), "fez" );
	deepEqual( Stem("fezinha"), "fezinh" );
	deepEqual( Stem("fgts"), "fgts" );
	deepEqual( Stem("fgv"), "fgv" );
	deepEqual( Stem("fhc"), "fhc" );
	deepEqual( Stem("fiada"), "fiad" );
	deepEqual( Stem("fiador"), "fiador" );
	deepEqual( Stem("fiança"), "fianc" );
	deepEqual( Stem("fiapo"), "fiap" );
	deepEqual( Stem("fiat"), "fiat" );
	deepEqual( Stem("fiats"), "fiats" );
	deepEqual( Stem("fibe"), "fib" );
	deepEqual( Stem("fibra"), "fibr" );
	deepEqual( Stem("fibras"), "fibr" );
	deepEqual( Stem("fibrasil"), "fibrasil" );
	deepEqual( Stem("fibrinogênio"), "fibrinogêni" );
	deepEqual( Stem("fibroblastos"), "fibroblast" );
	deepEqual( Stem("fibromas"), "fibrom" );
	deepEqual( Stem("fibrose"), "fibros" );
	deepEqual( Stem("fica"), "fic" );
	deepEqual( Stem("ficado"), "fic" );
	deepEqual( Stem("ficam"), "fic" );
	deepEqual( Stem("ficamos"), "fic" );
	deepEqual( Stem("ficando"), "fic" );
	deepEqual( Stem("ficar"), "fic" );
	deepEqual( Stem("ficara"), "fic" );
	deepEqual( Stem("ficará"), "fic" );
	deepEqual( Stem("ficaram"), "fic" );
	deepEqual( Stem("ficarão"), "fic" );
	deepEqual( Stem("ficarem"), "fic" );
	deepEqual( Stem("ficaria"), "fic" );
	deepEqual( Stem("ficariam"), "fic" );
	deepEqual( Stem("ficarmos"), "fic" );
	deepEqual( Stem("ficasse"), "fic" );
	deepEqual( Stem("ficassem"), "fic" );
	deepEqual( Stem("ficássemos"), "fic" );
	deepEqual( Stem("ficava"), "fic" );
	deepEqual( Stem("ficavam"), "fic" );
	deepEqual( Stem("ficção"), "ficçã" );
	deepEqual( Stem("ficcional"), "ficcional" );
	deepEqual( Stem("ficha"), "fich" );
	deepEqual( Stem("fichário"), "fichári" );
	deepEqual( Stem("fichas"), "fich" );
	deepEqual( Stem("fichtner"), "fichtn" );
	deepEqual( Stem("fico"), "fic" );
	deepEqual( Stem("ficou"), "fic" );
	deepEqual( Stem("fictícia"), "fictíc" );
	deepEqual( Stem("fictícias"), "fictíc" );
	deepEqual( Stem("fictício"), "fictíci" );
	deepEqual( Stem("fictícios"), "fictíci" );
	deepEqual( Stem("fidalgo"), "fidalg" );
	deepEqual( Stem("fidalgos"), "fidalg" );
	deepEqual( Stem("fidalguia"), "fidalgu" );
	deepEqual( Stem("fidel"), "fidel" );
	deepEqual( Stem("fidelidade"), "fidel" );
	deepEqual( Stem("fiéis"), "fié" );
	deepEqual( Stem("fiel"), "fiel" );
	deepEqual( Stem("fiesp"), "fiesp" );
	deepEqual( Stem("fiesta"), "fiest" );
	deepEqual( Stem("fígado"), "fíg" );
	deepEqual( Stem("figaro"), "figar" );
	deepEqual( Stem("figueira"), "figueir" );
	deepEqual( Stem("figueiredo"), "figueired" );
	deepEqual( Stem("figura"), "figur" );
	deepEqual( Stem("figuração"), "figur" );
	deepEqual( Stem("figuradamente"), "figur" );
	deepEqual( Stem("figuram"), "figur" );
	deepEqual( Stem("figurantes"), "figur" );
	deepEqual( Stem("figurão"), "figurã" );
	deepEqual( Stem("figurar"), "figur" );
	deepEqual( Stem("figuraria"), "figur" );
	deepEqual( Stem("figuras"), "figur" );
	deepEqual( Stem("figurinhas"), "figurinh" );
	deepEqual( Stem("figurinista"), "figurin" );
	deepEqual( Stem("figurino"), "figurin" );
	deepEqual( Stem("figurinos"), "figurin" );
	deepEqual( Stem("figurões"), "figurõ" );
	deepEqual( Stem("fiji"), "fij" );
	deepEqual( Stem("fila"), "fil" );
	deepEqual( Stem("filadélfia"), "filadélf" );
	deepEqual( Stem("filantrópica"), "filantróp" );
	deepEqual( Stem("filantrópicos"), "filantróp" );
	deepEqual( Stem("filão"), "filã" );
	deepEqual( Stem("filarmônicas"), "filarmôn" );
	deepEqual( Stem("filas"), "fil" );
	deepEqual( Stem("filé"), "fil" );
	deepEqual( Stem("fileira"), "fileir" );
	deepEqual( Stem("fileiras"), "fileir" );
	deepEqual( Stem("filezão"), "filezã" );
	deepEqual( Stem("filha"), "filh" );
	deepEqual( Stem("filhas"), "filh" );
	deepEqual( Stem("filhinho"), "filhinh" );
	deepEqual( Stem("filho"), "filh" );
	deepEqual( Stem("filhos"), "filh" );
	deepEqual( Stem("filhote"), "filhot" );
	deepEqual( Stem("filhotes"), "filhot" );
	deepEqual( Stem("filiação"), "filiaçã" );
	deepEqual( Stem("filiado"), "fili" );
	deepEqual( Stem("filiados"), "fili" );
	deepEqual( Stem("filiais"), "fili" );
	deepEqual( Stem("filial"), "filial" );
	deepEqual( Stem("filinto"), "filint" );
	deepEqual( Stem("filiou"), "fili" );
	deepEqual( Stem("filip"), "filip" );
	deepEqual( Stem("filipe"), "filip" );
	deepEqual( Stem("filipeck"), "filipeck" );
	deepEqual( Stem("filipinas"), "filipin" );
	deepEqual( Stem("filippo"), "filipp" );
	deepEqual( Stem("filisofia"), "filisof" );
	deepEqual( Stem("film"), "film" );
	deepEqual( Stem("filmada"), "film" );
	deepEqual( Stem("filmados"), "film" );
	deepEqual( Stem("filmagem"), "filmag" );
	deepEqual( Stem("filmagens"), "filmagens" );
	deepEqual( Stem("filmar"), "film" );
	deepEqual( Stem("filme"), "film" );
	deepEqual( Stem("filmes"), "film" );
	deepEqual( Stem("filmou"), "film" );
	deepEqual( Stem("filomena"), "filomen" );
	deepEqual( Stem("filós"), "filós" );
	deepEqual( Stem("filosofa"), "filosof" );
	deepEqual( Stem("filósofa"), "filósof" );
	deepEqual( Stem("filosofia"), "filosof" );
	deepEqual( Stem("filosóficas"), "filosóf" );
	deepEqual( Stem("filósofo"), "filósof" );
	deepEqual( Stem("filósofos"), "filósof" );
	deepEqual( Stem("filtra"), "filtr" );
	deepEqual( Stem("filtragem"), "filtrag" );
	deepEqual( Stem("filtrar"), "filtr" );
	deepEqual( Stem("filtro"), "filtr" );
	deepEqual( Stem("fim"), "fim" );
	deepEqual( Stem("fimose"), "fimos" );
	deepEqual( Stem("fin"), "fin" );
	deepEqual( Stem("fina"), "fin" );
	deepEqual( Stem("finais"), "fin" );
	deepEqual( Stem("final"), "final" );
	deepEqual( Stem("finalidade"), "final" );
	deepEqual( Stem("finalidades"), "final" );
	deepEqual( Stem("finalistas"), "final" );
	deepEqual( Stem("finalização"), "finaliz" );
	deepEqual( Stem("finalizado"), "finaliz" );
	deepEqual( Stem("finalizando"), "finaliz" );
	deepEqual( Stem("finalizar"), "finaliz" );
	deepEqual( Stem("finalmente"), "final" );
	deepEqual( Stem("finança"), "financ" );
	deepEqual( Stem("finanças"), "financ" );
	deepEqual( Stem("financeira"), "financeir" );
	deepEqual( Stem("financeiramente"), "financeir" );
	deepEqual( Stem("financeiras"), "financeir" );
	deepEqual( Stem("financeiro"), "financeir" );
	deepEqual( Stem("financeiros"), "financeir" );
	deepEqual( Stem("financia"), "financ" );
	deepEqual( Stem("financiadas"), "financ" );
	deepEqual( Stem("financiado"), "financ" );
	deepEqual( Stem("financiador"), "financ" );
	deepEqual( Stem("financiadoras"), "financ" );
	deepEqual( Stem("financiados"), "financ" );
	deepEqual( Stem("financiam"), "financ" );
	deepEqual( Stem("financiamento"), "financ" );
	deepEqual( Stem("financiamentos"), "financ" );
	deepEqual( Stem("financiando"), "financ" );
	deepEqual( Stem("financiar"), "financ" );
	deepEqual( Stem("financiava"), "financ" );
	deepEqual( Stem("financiei"), "financ" );
	deepEqual( Stem("financiou"), "financ" );
	deepEqual( Stem("finas"), "fin" );
	deepEqual( Stem("finasterida"), "finaster" );
	deepEqual( Stem("fincada"), "finc" );
	deepEqual( Stem("fincar"), "finc" );
	deepEqual( Stem("fincato"), "fincat" );
	deepEqual( Stem("fincou"), "finc" );
	deepEqual( Stem("finep"), "finep" );
	deepEqual( Stem("finge"), "fing" );
	deepEqual( Stem("fingi"), "fing" );
	deepEqual( Stem("fingia"), "fing" );
	deepEqual( Stem("fingindo"), "fing" );
	deepEqual( Stem("fingir"), "fing" );
	deepEqual( Stem("fininho"), "fininh" );
	deepEqual( Stem("finíssimo"), "finíssim" );
	deepEqual( Stem("fino"), "fin" );
	deepEqual( Stem("finos"), "fin" );
	deepEqual( Stem("fins"), "fins" );
	deepEqual( Stem("fio"), "fio" );
	deepEqual( Stem("fiona"), "fion" );
	deepEqual( Stem("fiorentini"), "fiorentin" );
	deepEqual( Stem("fios"), "fios" );
	deepEqual( Stem("fique"), "fiqu" );
	deepEqual( Stem("fiquei"), "fiqu" );
	deepEqual( Stem("fiquem"), "fiqu" );
	deepEqual( Stem("firma"), "firm" );
	deepEqual( Stem("firmada"), "firm" );
	deepEqual( Stem("firmado"), "firm" );
	deepEqual( Stem("firmados"), "firm" );
	deepEqual( Stem("firmam"), "firm" );
	deepEqual( Stem("firmamento"), "firmament" );
	deepEqual( Stem("firmará"), "firm" );
	deepEqual( Stem("firmaram"), "firm" );
	deepEqual( Stem("firmas"), "firm" );
	deepEqual( Stem("firmavam"), "firm" );
	deepEqual( Stem("firme"), "firm" );
	deepEqual( Stem("firmem"), "firm" );
	deepEqual( Stem("firmemente"), "firmement" );
	deepEqual( Stem("firmes"), "firm" );
	deepEqual( Stem("firmeza"), "firmez" );
	deepEqual( Stem("firmou"), "firm" );
	deepEqual( Stem("fiscais"), "fisc" );
	deepEqual( Stem("fiscal"), "fiscal" );
	deepEqual( Stem("fiscaliza"), "fiscaliz" );
	deepEqual( Stem("fiscalização"), "fiscaliz" );
	deepEqual( Stem("fiscalizações"), "fiscaliz" );
	deepEqual( Stem("fiscalizado"), "fiscaliz" );
	deepEqual( Stem("fiscalizadora"), "fiscaliz" );
	deepEqual( Stem("fiscalizar"), "fiscaliz" );
	deepEqual( Stem("fiscalizavam"), "fiscaliz" );
	deepEqual( Stem("fiscalizou"), "fiscaliz" );
	deepEqual( Stem("fischer"), "fisch" );
	deepEqual( Stem("fisco"), "fisc" );
	deepEqual( Stem("fisgado"), "fisg" );
	deepEqual( Stem("fisgando"), "fisg" );
	deepEqual( Stem("fisgar"), "fisg" );
	deepEqual( Stem("fisher"), "fish" );
	deepEqual( Stem("física"), "físic" );
	deepEqual( Stem("fisicamente"), "fisic" );
	deepEqual( Stem("físicas"), "físic" );
	deepEqual( Stem("físico"), "físic" );
	deepEqual( Stem("físicos"), "físic" );
	deepEqual( Stem("fisiculturista"), "fisicultur" );
	deepEqual( Stem("fisiologia"), "fisiolog" );
	deepEqual( Stem("fisiologismo"), "fisiolog" );
	deepEqual( Stem("fisiologista"), "fisiolog" );
	deepEqual( Stem("fisionomia"), "fisionom" );
	deepEqual( Stem("fisioterapeuta"), "fisioterapeut" );
	deepEqual( Stem("fisioterapia"), "fisioterap" );
	deepEqual( Stem("fissura"), "fissur" );
	deepEqual( Stem("fissurado"), "fissur" );
	deepEqual( Stem("fit"), "fit" );
	deepEqual( Stem("fita"), "fit" );
	deepEqual( Stem("fitas"), "fit" );
	deepEqual( Stem("fitinhas"), "fitinh" );
	deepEqual( Stem("fitness"), "fitness" );
	deepEqual( Stem("fitoterapia"), "fitoterap" );
	deepEqual( Stem("fitoterápico"), "fitoteráp" );
	deepEqual( Stem("fittipaldi"), "fittipald" );
	deepEqual( Stem("fitzgerald"), "fitzgerald" );
	deepEqual( Stem("fivela"), "fivel" );
	deepEqual( Stem("fixa"), "fix" );
	deepEqual( Stem("fixação"), "fixaçã" );
	deepEqual( Stem("fixada"), "fix" );
	deepEqual( Stem("fixado"), "fix" );
	deepEqual( Stem("fixador"), "fixador" );
	deepEqual( Stem("fixam"), "fix" );
	deepEqual( Stem("fixar"), "fix" );
	deepEqual( Stem("fixas"), "fix" );
	deepEqual( Stem("fixe"), "fix" );
	deepEqual( Stem("fixo"), "fix" );
	deepEqual( Stem("fixos"), "fix" );
	deepEqual( Stem("fixou"), "fix" );
	deepEqual( Stem("fiz"), "fiz" );
	deepEqual( Stem("fizemos"), "fiz" );
	deepEqual( Stem("fizer"), "fiz" );
	deepEqual( Stem("fizeram"), "fiz" );
	deepEqual( Stem("fizermos"), "fiz" );
	deepEqual( Stem("fizesse"), "fiz" );
	deepEqual( Stem("fizessem"), "fiz" );
	deepEqual( Stem("fizéssemos"), "fizéss" );
	deepEqual( Stem("flacidez"), "flacidez" );
	deepEqual( Stem("flácido"), "flác" );
	deepEqual( Stem("flag"), "flag" );
	deepEqual( Stem("flagra"), "flagr" );
	deepEqual( Stem("flagrado"), "flagr" );
	deepEqual( Stem("flagrante"), "flagrant" );
	deepEqual( Stem("flagrantemente"), "flagrant" );
	deepEqual( Stem("flagrantes"), "flagrant" );
	deepEqual( Stem("flagrar"), "flagr" );
	deepEqual( Stem("flagrava"), "flagr" );
	deepEqual( Stem("flagre"), "flagr" );
	deepEqual( Stem("flagrou"), "flagr" );
	deepEqual( Stem("flamenca"), "flamenc" );
	deepEqual( Stem("flamengo"), "flameng" );
	deepEqual( Stem("flandres"), "flandr" );
	deepEqual( Stem("flanelinha"), "flanelinh" );
	deepEqual( Stem("flash"), "flash" );
	deepEqual( Stem("flashes"), "flash" );
	deepEqual( Stem("flats"), "flats" );
	deepEqual( Stem("flauta"), "flaut" );
	deepEqual( Stem("flávai"), "fláva" );
	deepEqual( Stem("flávia"), "fláv" );
	deepEqual( Stem("flavio"), "flavi" );
	deepEqual( Stem("flávio"), "flávi" );
	deepEqual( Stem("flecha"), "flech" );
	deepEqual( Stem("flertar"), "flert" );
	deepEqual( Stem("flerte"), "flert" );
	deepEqual( Stem("fleugma"), "fleugm" );
	deepEqual( Stem("fleuma"), "fleum" );
	deepEqual( Stem("fleury"), "fleury" );
	deepEqual( Stem("flexibilidade"), "flexibil" );
	deepEqual( Stem("flexibilização"), "flexibiliz" );
	deepEqual( Stem("flexibilizada"), "flexibiliz" );
	deepEqual( Stem("flexibilizamos"), "flexibiliz" );
	deepEqual( Stem("flexibilizar"), "flexibiliz" );
	deepEqual( Stem("flexionando"), "flexion" );
	deepEqual( Stem("flexíveis"), "flexív" );
	deepEqual( Stem("flexível"), "flexível" );
	deepEqual( Stem("flexões"), "flexõ" );
	deepEqual( Stem("flinn"), "flinn" );
	deepEqual( Stem("fliperama"), "fliperam" );
	deepEqual( Stem("flipperama"), "flipperam" );
	deepEqual( Stem("flor"), "flor" );
	deepEqual( Stem("floreados"), "flor" );
	deepEqual( Stem("florença"), "florenc" );
	deepEqual( Stem("florência"), "florênc" );
	deepEqual( Stem("florêncio"), "florênci" );
	deepEqual( Stem("florent"), "florent" );
	deepEqual( Stem("flores"), "flor" );
	deepEqual( Stem("floresas"), "flores" );
	deepEqual( Stem("florescem"), "floresc" );
	deepEqual( Stem("florescer"), "floresc" );
	deepEqual( Stem("florescido"), "floresc" );
	deepEqual( Stem("florescimento"), "floresc" );
	deepEqual( Stem("floresta"), "florest" );
	deepEqual( Stem("florestal"), "florestal" );
	deepEqual( Stem("florestas"), "florest" );
	deepEqual( Stem("florestta"), "florestt" );
	deepEqual( Stem("floriano"), "florian" );
	deepEqual( Stem("florianópolis"), "florianópol" );
	deepEqual( Stem("florida"), "flor" );
	deepEqual( Stem("flórida"), "flór" );
	deepEqual( Stem("floridi"), "florid" );
	deepEqual( Stem("florisbela"), "florisbel" );
	deepEqual( Stem("florisval"), "florisval" );
	deepEqual( Stem("flow"), "flow" );
	deepEqual( Stem("flower"), "flow" );
	deepEqual( Stem("flui"), "flu" );
	deepEqual( Stem("fluidos"), "flu" );
	deepEqual( Stem("fluir"), "flu" );
	deepEqual( Stem("fluminense"), "fluminens" );
	deepEqual( Stem("fluoretos"), "fluoret" );
	deepEqual( Stem("fluoxetina"), "fluoxetin" );
	deepEqual( Stem("fluril"), "fluril" );
	deepEqual( Stem("flutuações"), "flutuaçõ" );
	deepEqual( Stem("flutuando"), "flutu" );
	deepEqual( Stem("flutuante"), "flutuant" );
	deepEqual( Stem("flutuantes"), "flutuant" );
	deepEqual( Stem("flutuasse"), "flutu" );
	deepEqual( Stem("fluvial"), "fluvial" );
	deepEqual( Stem("fluxo"), "flux" );
	deepEqual( Stem("fm"), "fm" );
	deepEqual( Stem("fmi"), "fmi" );
	deepEqual( Stem("fms"), "fms" );
	deepEqual( Stem("fmu"), "fmu" );
	deepEqual( Stem("foale"), "foal" );
	deepEqual( Stem("foca"), "foc" );
	deepEqual( Stem("foça"), "foc" );
	deepEqual( Stem("focados"), "foc" );
	deepEqual( Stem("foco"), "foc" );
	deepEqual( Stem("focos"), "foc" );
	deepEqual( Stem("fodor"), "fodor" );
	deepEqual( Stem("fofinhos"), "fofinh" );
	deepEqual( Stem("fofoca"), "fofoc" );
	deepEqual( Stem("fofocar"), "fofoc" );
	deepEqual( Stem("fofocas"), "fofoc" );
	deepEqual( Stem("fogaça"), "fogac" );
	deepEqual( Stem("fogão"), "fogã" );
	deepEqual( Stem("foge"), "fog" );
	deepEqual( Stem("fogem"), "fog" );
	deepEqual( Stem("fogleman"), "fogleman" );
	deepEqual( Stem("fogo"), "fog" );
	deepEqual( Stem("fogos"), "fog" );
	deepEqual( Stem("fogosas"), "fogos" );
	deepEqual( Stem("fogueira"), "fogueir" );
	deepEqual( Stem("foguete"), "foguet" );
	deepEqual( Stem("foguetes"), "foguet" );
	deepEqual( Stem("foguetório"), "foguetóri" );
	deepEqual( Stem("foi"), "foi" );
	deepEqual( Stem("foice"), "foic" );
	deepEqual( Stem("fok"), "fok" );
	deepEqual( Stem("fokker"), "fokk" );
	deepEqual( Stem("folclore"), "folclor" );
	deepEqual( Stem("folclórica"), "folclór" );
	deepEqual( Stem("folclórico"), "folclór" );
	deepEqual( Stem("fôlego"), "fôleg" );
	deepEqual( Stem("folga"), "folg" );
	deepEqual( Stem("folgada"), "folg" );
	deepEqual( Stem("folgadas"), "folg" );
	deepEqual( Stem("folgar"), "folg" );
	deepEqual( Stem("folha"), "folh" );
	deepEqual( Stem("folhas"), "folh" );
	deepEqual( Stem("folhearam"), "folh" );
	deepEqual( Stem("folheiam"), "folh" );
	deepEqual( Stem("folhetim"), "folhetim" );
	deepEqual( Stem("folheto"), "folhet" );
	deepEqual( Stem("folhetos"), "folhet" );
	deepEqual( Stem("folião"), "foliã" );
	deepEqual( Stem("folio"), "foli" );
	deepEqual( Stem("fome"), "fom" );
	deepEqual( Stem("fomos"), "fom" );
	deepEqual( Stem("fonaudiologia"), "fonaudiolog" );
	deepEqual( Stem("fonda"), "fond" );
	deepEqual( Stem("fone"), "fon" );
	deepEqual( Stem("fonemas"), "fonem" );
	deepEqual( Stem("fones"), "fon" );
	deepEqual( Stem("fonética"), "fonét" );
	deepEqual( Stem("fonoaudióloga"), "fonoaudiólog" );
	deepEqual( Stem("fonoaudiologia"), "fonoaudiolog" );
	deepEqual( Stem("fonográfico"), "fonográf" );
	deepEqual( Stem("fonógrafo"), "fonógraf" );
	deepEqual( Stem("fonseca"), "fonsec" );
	deepEqual( Stem("fontana"), "fontan" );
	deepEqual( Stem("fonte"), "font" );
	deepEqual( Stem("fontecindam"), "fontecind" );
	deepEqual( Stem("fontenelle"), "fontenell" );
	deepEqual( Stem("fontes"), "font" );
	deepEqual( Stem("fontoura"), "fontour" );
	deepEqual( Stem("food"), "food" );
	deepEqual( Stem("foods"), "foods" );
	deepEqual( Stem("football"), "football" );
	deepEqual( Stem("for"), "for" );
	deepEqual( Stem("fora"), "for" );
	deepEqual( Stem("foragida"), "forag" );
	deepEqual( Stem("foragido"), "forag" );
	deepEqual( Stem("foram"), "for" );
	deepEqual( Stem("forbes"), "forb" );
	deepEqual( Stem("forca"), "forc" );
	deepEqual( Stem("força"), "forc" );
	deepEqual( Stem("forçada"), "forc" );
	deepEqual( Stem("forçadas"), "forc" );
	deepEqual( Stem("forçado"), "forc" );
	deepEqual( Stem("forçados"), "forc" );
	deepEqual( Stem("forçando"), "forc" );
	deepEqual( Stem("forçar"), "forc" );
	deepEqual( Stem("forçaram"), "forc" );
	deepEqual( Stem("forças"), "forc" );
	deepEqual( Stem("force"), "forc" );
	deepEqual( Stem("forcei"), "forc" );
	deepEqual( Stem("forçosamente"), "forços" );
	deepEqual( Stem("ford"), "ford" );
	deepEqual( Stem("forem"), "for" );
	deepEqual( Stem("forense"), "forens" );
	deepEqual( Stem("forest"), "forest" );
	deepEqual( Stem("forja"), "forj" );
	deepEqual( Stem("forjada"), "forj" );
	deepEqual( Stem("forjadas"), "forj" );
	deepEqual( Stem("forjado"), "forj" );
	deepEqual( Stem("forjados"), "forj" );
	deepEqual( Stem("forjam"), "forj" );
	deepEqual( Stem("forjar"), "forj" );
	deepEqual( Stem("forma"), "form" );
	deepEqual( Stem("formação"), "formaçã" );
	deepEqual( Stem("formações"), "formaçõ" );
	deepEqual( Stem("formada"), "form" );
	deepEqual( Stem("formadas"), "form" );
	deepEqual( Stem("formado"), "form" );
	deepEqual( Stem("formador"), "formador" );
	deepEqual( Stem("formadores"), "formador" );
	deepEqual( Stem("formados"), "form" );
	deepEqual( Stem("formais"), "form" );
	deepEqual( Stem("formal"), "formal" );
	deepEqual( Stem("formalidade"), "formal" );
	deepEqual( Stem("formalmente"), "formal" );
	deepEqual( Stem("formam"), "form" );
	deepEqual( Stem("formamos"), "form" );
	deepEqual( Stem("formando"), "form" );
	deepEqual( Stem("formar"), "form" );
	deepEqual( Stem("formas"), "form" );
	deepEqual( Stem("formatação"), "format" );
	deepEqual( Stem("formato"), "format" );
	deepEqual( Stem("formatos"), "format" );
	deepEqual( Stem("formatura"), "formatur" );
	deepEqual( Stem("formava"), "form" );
	deepEqual( Stem("forme"), "form" );
	deepEqual( Stem("fórmica"), "fórmic" );
	deepEqual( Stem("formidáveis"), "formid" );
	deepEqual( Stem("formidável"), "formid" );
	deepEqual( Stem("formiga"), "formig" );
	deepEqual( Stem("formigas"), "formig" );
	deepEqual( Stem("formigoni"), "formigon" );
	deepEqual( Stem("formol"), "formol" );
	deepEqual( Stem("formos"), "form" );
	deepEqual( Stem("formosa"), "formos" );
	deepEqual( Stem("formou"), "form" );
	deepEqual( Stem("fórmula"), "fórmul" );
	deepEqual( Stem("formulação"), "formul" );
	deepEqual( Stem("formulações"), "formul" );
	deepEqual( Stem("formulada"), "formul" );
	deepEqual( Stem("formuladas"), "formul" );
	deepEqual( Stem("formulados"), "formul" );
	deepEqual( Stem("formular"), "formul" );
	deepEqual( Stem("formulários"), "formulári" );
	deepEqual( Stem("fórmulas"), "fórmul" );
	deepEqual( Stem("formule"), "formul" );
	deepEqual( Stem("fornada"), "forn" );
	deepEqual( Stem("forncedores"), "forncedor" );
	deepEqual( Stem("fornece"), "fornec" );
	deepEqual( Stem("fornecedor"), "fornecedor" );
	deepEqual( Stem("fornecedora"), "fornecedor" );
	deepEqual( Stem("fornecedoras"), "fornecedor" );
	deepEqual( Stem("fornecedores"), "fornecedor" );
	deepEqual( Stem("fornecem"), "fornec" );
	deepEqual( Stem("fornecendo"), "fornec" );
	deepEqual( Stem("fornecer"), "fornec" );
	deepEqual( Stem("forneceu"), "fornec" );
	deepEqual( Stem("forneciam"), "fornec" );
	deepEqual( Stem("fornecidos"), "fornec" );
	deepEqual( Stem("fornecimento"), "fornec" );
	deepEqual( Stem("fornicando"), "fornic" );
	deepEqual( Stem("forno"), "forn" );
	deepEqual( Stem("foro"), "for" );
	deepEqual( Stem("forração"), "forraçã" );
	deepEqual( Stem("forrar"), "forr" );
	deepEqual( Stem("forrest"), "forrest" );
	deepEqual( Stem("forro"), "forr" );
	deepEqual( Stem("forró"), "forr" );
	deepEqual( Stem("forrós"), "forrós" );
	deepEqual( Stem("fort"), "fort" );
	deepEqual( Stem("fortalece"), "fortalec" );
	deepEqual( Stem("fortalecem"), "fortalec" );
	deepEqual( Stem("fortalecer"), "fortalec" );
	deepEqual( Stem("fortaleceria"), "fortalec" );
	deepEqual( Stem("fortaleceu"), "fortalec" );
	deepEqual( Stem("fortalecido"), "fortalec" );
	deepEqual( Stem("fortalecimento"), "fortalec" );
	deepEqual( Stem("fortaleza"), "fortal" );
	deepEqual( Stem("forte"), "fort" );
	deepEqual( Stem("fortemente"), "fortement" );
	deepEqual( Stem("fortes"), "fort" );
	deepEqual( Stem("fortuita"), "fortuit" );
	deepEqual( Stem("fortuito"), "fortuit" );
	deepEqual( Stem("fortuna"), "fortun" );
	deepEqual( Stem("fortunas"), "fortun" );
	deepEqual( Stem("fortunato"), "fortunat" );
	deepEqual( Stem("fortune"), "fortun" );
	deepEqual( Stem("forum"), "forum" );
	deepEqual( Stem("fórum"), "fórum" );
	deepEqual( Stem("fósforos"), "fósfor" );
	deepEqual( Stem("fossa"), "foss" );
	deepEqual( Stem("fosse"), "foss" );
	deepEqual( Stem("fósseis"), "fóss" );
	deepEqual( Stem("fossem"), "foss" );
	deepEqual( Stem("fóssil"), "fóssil" );
	deepEqual( Stem("foster"), "fost" );
	deepEqual( Stem("foto"), "fot" );
	deepEqual( Stem("fotógrafa"), "fotógraf" );
	deepEqual( Stem("fotografá"), "fotograf" );
	deepEqual( Stem("fotografada"), "fotograf" );
	deepEqual( Stem("fotografadas"), "fotograf" );
	deepEqual( Stem("fotografados"), "fotograf" );
	deepEqual( Stem("fotografar"), "fotograf" );
	deepEqual( Stem("fotografia"), "fotograf" );
	deepEqual( Stem("fotografias"), "fotograf" );
	deepEqual( Stem("fotográfica"), "fotográf" );
	deepEqual( Stem("fotográficas"), "fotográf" );
	deepEqual( Stem("fotográfico"), "fotográf" );
	deepEqual( Stem("fotográficos"), "fotográf" );
	deepEqual( Stem("fotógrafo"), "fotógraf" );
	deepEqual( Stem("fotógrafos"), "fotógraf" );
	deepEqual( Stem("fotogramas"), "fotogram" );
	deepEqual( Stem("fotolitos"), "fotolit" );
	deepEqual( Stem("fotonovelas"), "fotonovel" );
	deepEqual( Stem("fotos"), "fot" );
	deepEqual( Stem("fotossensível"), "fotossens" );
	deepEqual( Stem("foundation"), "foundation" );
	deepEqual( Stem("four"), "four" );
	deepEqual( Stem("foxmeyer"), "foxmey" );
	deepEqual( Stem("foz"), "foz" );
	deepEqual( Stem("fr"), "fr" );
	deepEqual( Stem("fracarolli"), "fracaroll" );
	deepEqual( Stem("fracas"), "frac" );
	deepEqual( Stem("fracassado"), "fracass" );
	deepEqual( Stem("fracassados"), "fracass" );
	deepEqual( Stem("fracassasse"), "fracass" );
	deepEqual( Stem("fracasso"), "fracass" );
	deepEqual( Stem("fracassos"), "fracass" );
	deepEqual( Stem("fracassou"), "fracass" );
	deepEqual( Stem("fraco"), "frac" );
	deepEqual( Stem("fracos"), "frac" );
	deepEqual( Stem("frade"), "frad" );
	deepEqual( Stem("frades"), "frad" );
	deepEqual( Stem("fraga"), "frag" );
	deepEqual( Stem("fragata"), "fragat" );
	deepEqual( Stem("frágeis"), "frág" );
	deepEqual( Stem("frágil"), "frágil" );
	deepEqual( Stem("fragilidade"), "fragil" );
	deepEqual( Stem("fragmentos"), "fragment" );
	deepEqual( Stem("fragrância"), "fragrânc" );
	deepEqual( Stem("fraige"), "fraig" );
	deepEqual( Stem("fraldário"), "fraldári" );
	deepEqual( Stem("fraldas"), "frald" );
	deepEqual( Stem("franca"), "franc" );
	deepEqual( Stem("frança"), "franc" );
	deepEqual( Stem("francal"), "francal" );
	deepEqual( Stem("francamente"), "franc" );
	deepEqual( Stem("franças"), "franc" );
	deepEqual( Stem("france"), "franc" );
	deepEqual( Stem("francês"), "francês" );
	deepEqual( Stem("francesa"), "frances" );
	deepEqual( Stem("francesas"), "frances" );
	deepEqual( Stem("francesco"), "francesc" );
	deepEqual( Stem("franceses"), "frances" );
	deepEqual( Stem("francesinha"), "francesinh" );
	deepEqual( Stem("francial"), "francial" );
	deepEqual( Stem("francine"), "francin" );
	deepEqual( Stem("francis"), "franc" );
	deepEqual( Stem("francisca"), "francisc" );
	deepEqual( Stem("franciscano"), "franciscan" );
	deepEqual( Stem("francisco"), "francisc" );
	deepEqual( Stem("franco"), "franc" );
	deepEqual( Stem("françois"), "franço" );
	deepEqual( Stem("françoise"), "françois" );
	deepEqual( Stem("francos"), "franc" );
	deepEqual( Stem("frangalhos"), "frangalh" );
	deepEqual( Stem("frango"), "frang" );
	deepEqual( Stem("franguinho"), "franguinh" );
	deepEqual( Stem("franja"), "franj" );
	deepEqual( Stem("frank"), "frank" );
	deepEqual( Stem("frankfurt"), "frankfurt" );
	deepEqual( Stem("franklin"), "franklin" );
	deepEqual( Stem("franqueadas"), "franqu" );
	deepEqual( Stem("franquedas"), "franqued" );
	deepEqual( Stem("franqui"), "franqu" );
	deepEqual( Stem("franquia"), "franqu" );
	deepEqual( Stem("franquias"), "franqu" );
	deepEqual( Stem("franz"), "franz" );
	deepEqual( Stem("franzina"), "franzin" );
	deepEqual( Stem("fraquejar"), "fraquej" );
	deepEqual( Stem("fraqueza"), "fraquez" );
	deepEqual( Stem("fraquezas"), "fraquez" );
	deepEqual( Stem("frascino"), "frascin" );
	deepEqual( Stem("frasco"), "frasc" );
	deepEqual( Stem("frase"), "fras" );
	deepEqual( Stem("frases"), "fras" );
	deepEqual( Stem("fraterna"), "fratern" );
	deepEqual( Stem("fraternal"), "fraternal" );
	deepEqual( Stem("fraternidade"), "fratern" );
	deepEqual( Stem("fratura"), "fratur" );
	deepEqual( Stem("fraturadas"), "fratur" );
	deepEqual( Stem("fraturas"), "fratur" );
	deepEqual( Stem("fraudadas"), "fraud" );
	deepEqual( Stem("fraudado"), "fraud" );
	deepEqual( Stem("fraudadores"), "fraudador" );
	deepEqual( Stem("fraudar"), "fraud" );
	deepEqual( Stem("fraude"), "fraud" );
	deepEqual( Stem("fraudes"), "fraud" );
	deepEqual( Stem("fraudou"), "fraud" );
	deepEqual( Stem("fraudulenta"), "fraudulent" );
	deepEqual( Stem("fraudulentos"), "fraudulent" );
	deepEqual( Stem("freak"), "freak" );
	deepEqual( Stem("frear"), "fre" );
	deepEqual( Stem("frechette"), "frechett" );
	deepEqual( Stem("frederic"), "frederic" );
	deepEqual( Stem("frederico"), "freder" );
	deepEqual( Stem("fredy"), "fredy" );
	deepEqual( Stem("free"), "fre" );
	deepEqual( Stem("freedom"), "freedom" );
	deepEqual( Stem("freguês"), "freguês" );
	deepEqual( Stem("freguesas"), "fregues" );
	deepEqual( Stem("fregueses"), "fregues" );
	deepEqual( Stem("freguesia"), "fregues" );
	deepEqual( Stem("frei"), "fre" );
	deepEqual( Stem("freio"), "frei" );
	deepEqual( Stem("freios"), "frei" );
	deepEqual( Stem("freiras"), "freir" );
	deepEqual( Stem("freire"), "freir" );
	deepEqual( Stem("freirinha"), "freirinh" );
	deepEqual( Stem("freitas"), "freit" );
	deepEqual( Stem("frejat"), "frejat" );
	deepEqual( Stem("frenesi"), "frenes" );
	deepEqual( Stem("freneticamente"), "frenet" );
	deepEqual( Stem("frenéticas"), "frenét" );
	deepEqual( Stem("frenético"), "frenét" );
	deepEqual( Stem("frente"), "frent" );
	deepEqual( Stem("frentes"), "frent" );
	deepEqual( Stem("frequência"), "frequênc" );
	deepEqual( Stem("freqüência"), "freqüênc" );
	deepEqual( Stem("frequenta"), "frequent" );
	deepEqual( Stem("freqüenta"), "freqüent" );
	deepEqual( Stem("frequentada"), "frequent" );
	deepEqual( Stem("frequentado"), "frequent" );
	deepEqual( Stem("frequentador"), "frequent" );
	deepEqual( Stem("freqüentador"), "freqüent" );
	deepEqual( Stem("frequentadora"), "frequent" );
	deepEqual( Stem("frequentadores"), "frequent" );
	deepEqual( Stem("freqüentadores"), "freqüent" );
	deepEqual( Stem("frequentados"), "frequent" );
	deepEqual( Stem("freqüentados"), "freqüent" );
	deepEqual( Stem("frequentam"), "frequent" );
	deepEqual( Stem("freqüentam"), "freqüent" );
	deepEqual( Stem("frequentando"), "frequent" );
	deepEqual( Stem("freqüentando"), "freqüent" );
	deepEqual( Stem("frequentar"), "frequent" );
	deepEqual( Stem("freqüentar"), "freqüent" );
	deepEqual( Stem("frequentaram"), "frequent" );
	deepEqual( Stem("frequentasse"), "frequent" );
	deepEqual( Stem("frequentava"), "frequent" );
	deepEqual( Stem("freqüentava"), "freqüent" );
	deepEqual( Stem("freqüentávamos"), "freqüent" );
	deepEqual( Stem("frequente"), "frequent" );
	deepEqual( Stem("freqüente"), "freqüent" );
	deepEqual( Stem("freqüentei"), "freqüent" );
	deepEqual( Stem("frequentemente"), "frequent" );
	deepEqual( Stem("freqüentemente"), "freqüent" );
	deepEqual( Stem("frequentes"), "frequent" );
	deepEqual( Stem("freqüentes"), "freqüent" );
	deepEqual( Stem("frequento"), "frequent" );
	deepEqual( Stem("freqüento"), "freqüent" );
	deepEqual( Stem("frequentou"), "frequent" );
	deepEqual( Stem("freqüentou"), "freqüent" );
	deepEqual( Stem("fresca"), "fresc" );
	deepEqual( Stem("fresco"), "fresc" );
	deepEqual( Stem("frescos"), "fresc" );
	deepEqual( Stem("frescuras"), "frescur" );
	deepEqual( Stem("fresta"), "frest" );
	deepEqual( Stem("frestas"), "frest" );
	deepEqual( Stem("fretada"), "fret" );
	deepEqual( Stem("fretado"), "fret" );
	deepEqual( Stem("fretamentos"), "fretament" );
	deepEqual( Stem("frete"), "fret" );
	deepEqual( Stem("freud"), "freud" );
	deepEqual( Stem("freudiana"), "freudian" );
	deepEqual( Stem("freudiano"), "freudian" );
	deepEqual( Stem("frevo"), "frev" );
	deepEqual( Stem("freyre"), "freyr" );
	deepEqual( Stem("fria"), "fri" );
	deepEqual( Stem("frias"), "fri" );
	deepEqual( Stem("friburgo"), "friburg" );
	deepEqual( Stem("fricção"), "fricçã" );
	deepEqual( Stem("fridlin"), "fridlin" );
	deepEqual( Stem("friedlander"), "friedland" );
	deepEqual( Stem("friedman"), "friedman" );
	deepEqual( Stem("frigideira"), "frigideir" );
	deepEqual( Stem("frígios"), "frígi" );
	deepEqual( Stem("frigir"), "frig" );
	deepEqual( Stem("frigobar"), "frigob" );
	deepEqual( Stem("frio"), "fri" );
	deepEqual( Stem("frios"), "fri" );
	deepEqual( Stem("frisa"), "fris" );
	deepEqual( Stem("frisar"), "fris" );
	deepEqual( Stem("frisson"), "frisson" );
	deepEqual( Stem("frita"), "frit" );
	deepEqual( Stem("fritar"), "frit" );
	deepEqual( Stem("fritas"), "frit" );
	deepEqual( Stem("fritz"), "fritz" );
	deepEqual( Stem("frívolo"), "frívol" );
	deepEqual( Stem("frommer"), "fromm" );
	deepEqual( Stem("frondoso"), "frondos" );
	deepEqual( Stem("front"), "front" );
	deepEqual( Stem("frontalmente"), "frontal" );
	deepEqual( Stem("fronteira"), "fronteir" );
	deepEqual( Stem("fronteiras"), "fronteir" );
	deepEqual( Stem("fronteires"), "front" );
	deepEqual( Stem("fronteiriço"), "fronteiric" );
	deepEqual( Stem("fronteiriços"), "fronteiric" );
	deepEqual( Stem("frontières"), "frontièr" );
	deepEqual( Stem("frossard"), "frossard" );
	deepEqual( Stem("frota"), "frot" );
	deepEqual( Stem("frugal"), "frugal" );
	deepEqual( Stem("fruição"), "fruiçã" );
	deepEqual( Stem("frustação"), "frustaçã" );
	deepEqual( Stem("frustração"), "frustraçã" );
	deepEqual( Stem("frustrações"), "frustraçõ" );
	deepEqual( Stem("frustradas"), "frustr" );
	deepEqual( Stem("frustrado"), "frustr" );
	deepEqual( Stem("frustrante"), "frustrant" );
	deepEqual( Stem("frustrar"), "frustr" );
	deepEqual( Stem("fruta"), "frut" );
	deepEqual( Stem("frutado"), "frut" );
	deepEqual( Stem("frutas"), "frut" );
	deepEqual( Stem("fruticultura"), "fruticultur" );
	deepEqual( Stem("fruto"), "frut" );
	deepEqual( Stem("frutos"), "frut" );
	deepEqual( Stem("fry"), "fry" );
	deepEqual( Stem("fsf"), "fsf" );
	deepEqual( Stem("ftc"), "ftc" );
	deepEqual( Stem("fu"), "fu" );
	deepEqual( Stem("fuçar"), "fuc" );
	deepEqual( Stem("fuga"), "fug" );
	deepEqual( Stem("fugas"), "fug" );
	deepEqual( Stem("fugaz"), "fugaz" );
	deepEqual( Stem("fugi"), "fug" );
	deepEqual( Stem("fugia"), "fug" );
	deepEqual( Stem("fugiam"), "fug" );
	deepEqual( Stem("fugido"), "fug" );
	deepEqual( Stem("fugidos"), "fug" );
	deepEqual( Stem("fugimos"), "fug" );
	deepEqual( Stem("fugir"), "fug" );
	deepEqual( Stem("fugisse"), "fug" );
	deepEqual( Stem("fugiu"), "fug" );
	deepEqual( Stem("fui"), "fui" );
	deepEqual( Stem("fuja"), "fuj" );
	deepEqual( Stem("fujimori"), "fujimor" );
	deepEqual( Stem("fujita"), "fujit" );
	deepEqual( Stem("fulano"), "fulan" );
	deepEqual( Stem("fulgurante"), "fulgur" );
	deepEqual( Stem("fuligem"), "fulig" );
	deepEqual( Stem("fulmina"), "fulmin" );
	deepEqual( Stem("fulminado"), "fulmin" );
	deepEqual( Stem("fulton"), "fulton" );
	deepEqual( Stem("fuma"), "fum" );
	deepEqual( Stem("fumaça"), "fumac" );
	deepEqual( Stem("fumacê"), "fumac" );
	deepEqual( Stem("fumacinha"), "fumacinh" );
	deepEqual( Stem("fumado"), "fum" );
	deepEqual( Stem("fumam"), "fum" );
	deepEqual( Stem("fumando"), "fum" );
	deepEqual( Stem("fumante"), "fumant" );
	deepEqual( Stem("fumantes"), "fumant" );
	deepEqual( Stem("fumar"), "fum" );
	deepEqual( Stem("fumassem"), "fum" );
	deepEqual( Stem("fumava"), "fum" );
	deepEqual( Stem("fumei"), "fum" );
	deepEqual( Stem("fumo"), "fum" );
	deepEqual( Stem("fumou"), "fum" );
	deepEqual( Stem("funai"), "funa" );
	deepEqual( Stem("funarte"), "funart" );
	deepEqual( Stem("função"), "funçã" );
	deepEqual( Stem("funcef"), "funcef" );
	deepEqual( Stem("funcesp"), "funcesp" );
	deepEqual( Stem("funciona"), "funcion" );
	deepEqual( Stem("funcionado"), "funcion" );
	deepEqual( Stem("funcional"), "funcional" );
	deepEqual( Stem("funcionalismo"), "funcional" );
	deepEqual( Stem("funcionam"), "funcion" );
	deepEqual( Stem("funcionamento"), "funcion" );
	deepEqual( Stem("funcionando"), "funcion" );
	deepEqual( Stem("funcionar"), "funcion" );
	deepEqual( Stem("funcionará"), "funcion" );
	deepEqual( Stem("funcionarem"), "funcion" );
	deepEqual( Stem("funcionaria"), "funcion" );
	deepEqual( Stem("funcionária"), "funcionár" );
	deepEqual( Stem("funcionárias"), "funcionár" );
	deepEqual( Stem("funcionário"), "funcionári" );
	deepEqual( Stem("funcionários"), "funcionári" );
	deepEqual( Stem("funcionava"), "funcion" );
	deepEqual( Stem("funcionavam"), "funcion" );
	deepEqual( Stem("funcionem"), "funcion" );
	deepEqual( Stem("funcionou"), "funcion" );
	deepEqual( Stem("funções"), "funçõ" );
	deepEqual( Stem("fund"), "fund" );
	deepEqual( Stem("funda"), "fund" );
	deepEqual( Stem("fundação"), "fundaçã" );
	deepEqual( Stem("fundações"), "fundaçõ" );
	deepEqual( Stem("fundada"), "fund" );
	deepEqual( Stem("fundadas"), "fund" );
	deepEqual( Stem("fundado"), "fund" );
	deepEqual( Stem("fundador"), "fundador" );
	deepEqual( Stem("fundadora"), "fundador" );
	deepEqual( Stem("fundadoras"), "fundador" );
	deepEqual( Stem("fundadores"), "fundador" );
	deepEqual( Stem("fundamentada"), "fundament" );
	deepEqual( Stem("fundamentais"), "fundament" );
	deepEqual( Stem("fundamental"), "fundamental" );
	deepEqual( Stem("fundamentalistas"), "fundamental" );
	deepEqual( Stem("fundamentalmente"), "fundamental" );
	deepEqual( Stem("fundamento"), "fundament" );
	deepEqual( Stem("fundamentos"), "fundament" );
	deepEqual( Stem("fundar"), "fund" );
	deepEqual( Stem("funde"), "fund" );
	deepEqual( Stem("fundi"), "fund" );
	deepEqual( Stem("fundir"), "fund" );
	deepEqual( Stem("fundiram"), "fund" );
	deepEqual( Stem("fundo"), "fund" );
	deepEqual( Stem("fundos"), "fund" );
	deepEqual( Stem("fundou"), "fund" );
	deepEqual( Stem("funeral"), "funeral" );
	deepEqual( Stem("funerária"), "funerár" );
	deepEqual( Stem("funerário"), "funerári" );
	deepEqual( Stem("funil"), "funil" );
	deepEqual( Stem("funk"), "funk" );
	deepEqual( Stem("funkeira"), "funkeir" );
	deepEqual( Stem("funkeiro"), "funkeir" );
	deepEqual( Stem("funkeiros"), "funkeir" );
	deepEqual( Stem("funks"), "funks" );
	deepEqual( Stem("fura"), "fur" );
	deepEqual( Stem("furacão"), "furacã" );
	deepEqual( Stem("furada"), "fur" );
	deepEqual( Stem("furadas"), "fur" );
	deepEqual( Stem("furado"), "fur" );
	deepEqual( Stem("furar"), "fur" );
	deepEqual( Stem("fúria"), "fúr" );
	deepEqual( Stem("furiosa"), "furios" );
	deepEqual( Stem("furioso"), "furios" );
	deepEqual( Stem("furiosos"), "furios" );
	deepEqual( Stem("furlanetto"), "furlanett" );
	deepEqual( Stem("furnas"), "furn" );
	deepEqual( Stem("furo"), "fur" );
	deepEqual( Stem("furor"), "furor" );
	deepEqual( Stem("furta"), "furt" );
	deepEqual( Stem("furtado"), "furt" );
	deepEqual( Stem("furtar"), "furt" );
	deepEqual( Stem("furto"), "furt" );
	deepEqual( Stem("fusão"), "fusã" );
	deepEqual( Stem("fusca"), "fusc" );
	deepEqual( Stem("fuseau"), "fuseau" );
	deepEqual( Stem("fuseaus"), "fuseaus" );
	deepEqual( Stem("fuselagem"), "fuselag" );
	deepEqual( Stem("fusões"), "fusõ" );
	deepEqual( Stem("futebol"), "futebol" );
	deepEqual( Stem("fútil"), "fútil" );
	deepEqual( Stem("futura"), "futur" );
	deepEqual( Stem("futuramente"), "futur" );
	deepEqual( Stem("futuras"), "futur" );
	deepEqual( Stem("futurística"), "futuríst" );
	deepEqual( Stem("futuro"), "futur" );
	deepEqual( Stem("futurologia"), "futurolog" );
	deepEqual( Stem("futuros"), "futur" );
	deepEqual( Stem("fuvest"), "fuvest" );
	deepEqual( Stem("fuzil"), "fuzil" );
	deepEqual( Stem("fuzilamento"), "fuzil" );
	deepEqual( Stem("fuzileiros"), "fuzileir" );
	deepEqual( Stem("fuzis"), "fuz" );
	deepEqual( Stem("fv"), "fv" );
	deepEqual( Stem("g"), "g" );
	deepEqual( Stem("gabanna"), "gabann" );
	deepEqual( Stem("gabaritado"), "gabarit" );
	deepEqual( Stem("gabaritados"), "gabarit" );
	deepEqual( Stem("gabaritos"), "gabarit" );
	deepEqual( Stem("gabeira"), "gabeir" );
	deepEqual( Stem("gabinete"), "gabinet" );
	deepEqual( Stem("gabriel"), "gabriel" );
	deepEqual( Stem("gabriela"), "gabriel" );
	deepEqual( Stem("gabrielle"), "gabriell" );
	deepEqual( Stem("gado"), "gad" );
	deepEqual( Stem("gaguinho"), "gaguinh" );
	deepEqual( Stem("gaiger"), "gaig" );
	deepEqual( Stem("gaio"), "gai" );
	deepEqual( Stem("gaiola"), "gaiol" );
	deepEqual( Stem("gaita"), "gait" );
	deepEqual( Stem("gal"), "gal" );
	deepEqual( Stem("galã"), "galã" );
	deepEqual( Stem("galáctico"), "galáct" );
	deepEqual( Stem("galamba"), "galamb" );
	deepEqual( Stem("galanin"), "galanin" );
	deepEqual( Stem("galanteio"), "galantei" );
	deepEqual( Stem("galãs"), "galãs" );
	deepEqual( Stem("galdino"), "galdin" );
	deepEqual( Stem("galembeck"), "galembeck" );
	deepEqual( Stem("galera"), "gal" );
	deepEqual( Stem("galeras"), "gal" );
	deepEqual( Stem("galeria"), "gal" );
	deepEqual( Stem("galerias"), "gal" );
	deepEqual( Stem("galgando"), "galg" );
	deepEqual( Stem("galho"), "galh" );
	deepEqual( Stem("galhos"), "galh" );
	deepEqual( Stem("galilei"), "galil" );
	deepEqual( Stem("galileu"), "galil" );
	deepEqual( Stem("galinha"), "galinh" );
	deepEqual( Stem("galinhas"), "galinh" );
	deepEqual( Stem("galisteu"), "galist" );
	deepEqual( Stem("gall"), "gall" );
	deepEqual( Stem("galliano"), "gallian" );
	deepEqual( Stem("gallup"), "gallup" );
	deepEqual( Stem("galo"), "gal" );
	deepEqual( Stem("galopante"), "galop" );
	deepEqual( Stem("galope"), "galop" );
	deepEqual( Stem("galos"), "gal" );
	deepEqual( Stem("galpão"), "galpã" );
	deepEqual( Stem("galpões"), "galpõ" );
	deepEqual( Stem("galtier"), "galti" );
	deepEqual( Stem("galtieri"), "galtier" );
	deepEqual( Stem("galuppo"), "galupp" );
	deepEqual( Stem("galvão"), "galvã" );
	deepEqual( Stem("galvez"), "galvez" );
	deepEqual( Stem("gam"), "gam" );
	deepEqual( Stem("gama"), "gam" );
	deepEqual( Stem("gamão"), "gamã" );
	deepEqual( Stem("gambá"), "gamb" );
	deepEqual( Stem("gambino"), "gambin" );
	deepEqual( Stem("game"), "gam" );
	deepEqual( Stem("games"), "gam" );
	deepEqual( Stem("gana"), "gan" );
	deepEqual( Stem("ganância"), "ganânc" );
	deepEqual( Stem("gananciosos"), "gananc" );
	deepEqual( Stem("gancho"), "ganch" );
	deepEqual( Stem("gandra"), "gandr" );
	deepEqual( Stem("gangorra"), "gangorr" );
	deepEqual( Stem("gângsteres"), "gângst" );
	deepEqual( Stem("gangue"), "gang" );
	deepEqual( Stem("gangues"), "gangu" );
	deepEqual( Stem("ganha"), "ganh" );
	deepEqual( Stem("ganhado"), "ganh" );
	deepEqual( Stem("ganhador"), "ganhador" );
	deepEqual( Stem("ganham"), "ganh" );
	deepEqual( Stem("ganhamos"), "ganh" );
	deepEqual( Stem("ganhando"), "ganh" );
	deepEqual( Stem("ganhar"), "ganh" );
	deepEqual( Stem("ganharam"), "ganh" );
	deepEqual( Stem("ganharão"), "ganh" );
	deepEqual( Stem("ganharem"), "ganh" );
	deepEqual( Stem("ganharia"), "ganh" );
	deepEqual( Stem("ganhariam"), "ganh" );
	deepEqual( Stem("ganhas"), "ganh" );
	deepEqual( Stem("ganhassem"), "ganh" );
	deepEqual( Stem("ganhava"), "ganh" );
	deepEqual( Stem("ganhavam"), "ganh" );
	deepEqual( Stem("ganhe"), "ganh" );
	deepEqual( Stem("ganhei"), "ganh" );
	deepEqual( Stem("ganhem"), "ganh" );
	deepEqual( Stem("ganho"), "ganh" );
	deepEqual( Stem("ganhos"), "ganh" );
	deepEqual( Stem("ganhou"), "ganh" );
	deepEqual( Stem("ganon"), "ganon" );
	deepEqual( Stem("gantois"), "ganto" );
	deepEqual( Stem("garagem"), "garag" );
	deepEqual( Stem("garagens"), "garagens" );
	deepEqual( Stem("garambone"), "garambon" );
	deepEqual( Stem("garanhão"), "garanhã" );
	deepEqual( Stem("garanta"), "garant" );
	deepEqual( Stem("garantam"), "garant" );
	deepEqual( Stem("garante"), "garant" );
	deepEqual( Stem("garantem"), "garant" );
	deepEqual( Stem("garantia"), "garant" );
	deepEqual( Stem("garantias"), "garant" );
	deepEqual( Stem("garantida"), "garant" );
	deepEqual( Stem("garantidas"), "garant" );
	deepEqual( Stem("garantido"), "garant" );
	deepEqual( Stem("garantidos"), "garant" );
	deepEqual( Stem("garantindo"), "garant" );
	deepEqual( Stem("garantir"), "garant" );
	deepEqual( Stem("garantiria"), "garant" );
	deepEqual( Stem("garantiriam"), "garant" );
	deepEqual( Stem("garantiu"), "garant" );
	deepEqual( Stem("garanto"), "garant" );
	deepEqual( Stem("garbo"), "garb" );
	deepEqual( Stem("garbosos"), "garbos" );
	deepEqual( Stem("garça"), "garc" );
	deepEqual( Stem("garças"), "garc" );
	deepEqual( Stem("garcia"), "garc" );
	deepEqual( Stem("garcía"), "garcí" );
	deepEqual( Stem("garçom"), "garçom" );
	deepEqual( Stem("garçons"), "garçons" );
	deepEqual( Stem("gardenal"), "gardenal" );
	deepEqual( Stem("gardenberg"), "gardenberg" );
	deepEqual( Stem("gardner"), "gardn" );
	deepEqual( Stem("gargalhada"), "gargalh" );
	deepEqual( Stem("gargalhadas"), "gargalh" );
	deepEqual( Stem("garganta"), "gargant" );
	deepEqual( Stem("garibada"), "garib" );
	deepEqual( Stem("garibaldi"), "garibald" );
	deepEqual( Stem("garimpados"), "garimp" );
	deepEqual( Stem("garimpando"), "garimp" );
	deepEqual( Stem("garimpavam"), "garimp" );
	deepEqual( Stem("garimpeiros"), "garimpeir" );
	deepEqual( Stem("garimpo"), "garimp" );
	deepEqual( Stem("garimpos"), "garimp" );
	deepEqual( Stem("garmatter"), "garmatt" );
	deepEqual( Stem("garoa"), "garo" );
	deepEqual( Stem("garota"), "garot" );
	deepEqual( Stem("garotada"), "garot" );
	deepEqual( Stem("garotas"), "garot" );
	deepEqual( Stem("garotinha"), "garotinh" );
	deepEqual( Stem("garotinho"), "garotinh" );
	deepEqual( Stem("garotinhos"), "garotinh" );
	deepEqual( Stem("garoto"), "garot" );
	deepEqual( Stem("garotões"), "garotõ" );
	deepEqual( Stem("garotos"), "garot" );
	deepEqual( Stem("garrafa"), "garraf" );
	deepEqual( Stem("garrafada"), "garraf" );
	deepEqual( Stem("garrafas"), "garraf" );
	deepEqual( Stem("garrafinha"), "garrafinh" );
	deepEqual( Stem("garrafinhas"), "garrafinh" );
	deepEqual( Stem("garranchos"), "garranch" );
	deepEqual( Stem("garras"), "garr" );
	deepEqual( Stem("garrincha"), "garrinch" );
	deepEqual( Stem("garros"), "garr" );
	deepEqual( Stem("garry"), "garry" );
	deepEqual( Stem("gartner"), "gartn" );
	deepEqual( Stem("garton"), "garton" );
	deepEqual( Stem("gary"), "gary" );
	deepEqual( Stem("gás"), "gás" );
	deepEqual( Stem("gases"), "gas" );
	deepEqual( Stem("gasolina"), "gasolin" );
	deepEqual( Stem("gasparetto"), "gasparett" );
	deepEqual( Stem("gaspari"), "gaspar" );
	deepEqual( Stem("gasta"), "gast" );
	deepEqual( Stem("gastadora"), "gastador" );
	deepEqual( Stem("gastadores"), "gastador" );
	deepEqual( Stem("gastam"), "gast" );
	deepEqual( Stem("gastando"), "gast" );
	deepEqual( Stem("gastão"), "gastã" );
	deepEqual( Stem("gastar"), "gast" );
	deepEqual( Stem("gastará"), "gast" );
	deepEqual( Stem("gastarem"), "gast" );
	deepEqual( Stem("gastaria"), "gast" );
	deepEqual( Stem("gastas"), "gast" );
	deepEqual( Stem("gastava"), "gast" );
	deepEqual( Stem("gastávamos"), "gast" );
	deepEqual( Stem("gaste"), "gast" );
	deepEqual( Stem("gasto"), "gast" );
	deepEqual( Stem("gastos"), "gast" );
	deepEqual( Stem("gastou"), "gast" );
	deepEqual( Stem("gástrico"), "gástric" );
	deepEqual( Stem("gastrite"), "gastrit" );
	deepEqual( Stem("gastrointestinais"), "gastrointestin" );
	deepEqual( Stem("gastrointestinal"), "gastrointestinal" );
	deepEqual( Stem("gastronomia"), "gastronom" );
	deepEqual( Stem("gastronômica"), "gastronôm" );
	deepEqual( Stem("gastronômicas"), "gastronôm" );
	deepEqual( Stem("gastronômico"), "gastronôm" );
	deepEqual( Stem("gate"), "gat" );
	deepEqual( Stem("gates"), "gat" );
	deepEqual( Stem("gatilho"), "gatilh" );
	deepEqual( Stem("gato"), "gat" );
	deepEqual( Stem("gatos"), "gat" );
	deepEqual( Stem("gatunagem"), "gatunag" );
	deepEqual( Stem("gaúcha"), "gaúch" );
	deepEqual( Stem("gaucher"), "gauch" );
	deepEqual( Stem("gaúcho"), "gaúch" );
	deepEqual( Stem("gauderer"), "gauder" );
	deepEqual( Stem("gaulle"), "gaull" );
	deepEqual( Stem("gaullista"), "gaullist" );
	deepEqual( Stem("gaultier"), "gaulti" );
	deepEqual( Stem("gávea"), "gáv" );
	deepEqual( Stem("gaveta"), "gavet" );
	deepEqual( Stem("gavetas"), "gavet" );
	deepEqual( Stem("gavio"), "gavi" );
	deepEqual( Stem("gaviões"), "gaviõ" );
	deepEqual( Stem("gay"), "gay" );
	deepEqual( Stem("gays"), "gays" );
	deepEqual( Stem("gaza"), "gaz" );
	deepEqual( Stem("gazeta"), "gazet" );
	deepEqual( Stem("gazolla"), "gazoll" );
	deepEqual( Stem("gb"), "gb" );
	deepEqual( Stem("ge"), "ge" );
	deepEqual( Stem("geada"), "gead" );
	deepEqual( Stem("geadas"), "gead" );
	deepEqual( Stem("gehorke"), "gehork" );
	deepEqual( Stem("géis"), "géis" );
	deepEqual( Stem("geisel"), "geisel" );
	deepEqual( Stem("gel"), "gel" );
	deepEqual( Stem("gelada"), "gel" );
	deepEqual( Stem("geladas"), "gel" );
	deepEqual( Stem("geladeira"), "geladeir" );
	deepEqual( Stem("geladeiras"), "geladeir" );
	deepEqual( Stem("gelado"), "gel" );
	deepEqual( Stem("gelatinosa"), "gelatin" );
	deepEqual( Stem("geléia"), "gel" );
	deepEqual( Stem("geller"), "gell" );
	deepEqual( Stem("gelo"), "gel" );
	deepEqual( Stem("gelol"), "gelol" );
	deepEqual( Stem("gêmea"), "gêm" );
	deepEqual( Stem("gêmeas"), "gêm" );
	deepEqual( Stem("gêmeos"), "gêm" );
	deepEqual( Stem("gemidos"), "gem" );
	deepEqual( Stem("gen"), "gen" );
	deepEqual( Stem("gencor"), "gencor" );
	deepEqual( Stem("gene"), "gen" );
	deepEqual( Stem("genealogia"), "genealog" );
	deepEqual( Stem("genebra"), "genebr" );
	deepEqual( Stem("generais"), "gener" );
	deepEqual( Stem("general"), "general" );
	deepEqual( Stem("generalização"), "generaliz" );
	deepEqual( Stem("generalizada"), "generaliz" );
	deepEqual( Stem("generalizado"), "generaliz" );
	deepEqual( Stem("generalizados"), "generaliz" );
	deepEqual( Stem("generis"), "gener" );
	deepEqual( Stem("gênero"), "gêner" );
	deepEqual( Stem("gêneros"), "gêner" );
	deepEqual( Stem("generosa"), "gener" );
	deepEqual( Stem("generosamente"), "gener" );
	deepEqual( Stem("generosidade"), "generos" );
	deepEqual( Stem("generoso"), "gener" );
	deepEqual( Stem("generosos"), "gener" );
	deepEqual( Stem("genes"), "gen" );
	deepEqual( Stem("genesis"), "genes" );
	deepEqual( Stem("gênesis"), "gênes" );
	deepEqual( Stem("genetic"), "genetic" );
	deepEqual( Stem("genética"), "genét" );
	deepEqual( Stem("geneticamente"), "genet" );
	deepEqual( Stem("genéticas"), "genét" );
	deepEqual( Stem("geneticista"), "genetic" );
	deepEqual( Stem("genético"), "genét" );
	deepEqual( Stem("genéticos"), "genét" );
	deepEqual( Stem("gengibre"), "gengibr" );
	deepEqual( Stem("geni"), "gen" );
	deepEqual( Stem("geniais"), "geni" );
	deepEqual( Stem("genial"), "genial" );
	deepEqual( Stem("genialidade"), "genial" );
	deepEqual( Stem("gênica"), "gênic" );
	deepEqual( Stem("geniculado"), "genicul" );
	deepEqual( Stem("genículos"), "genícul" );
	deepEqual( Stem("genildo"), "genild" );
	deepEqual( Stem("gênio"), "gêni" );
	deepEqual( Stem("gênios"), "gêni" );
	deepEqual( Stem("genitais"), "genit" );
	deepEqual( Stem("genital"), "genital" );
	deepEqual( Stem("genitália"), "genitál" );
	deepEqual( Stem("genival"), "genival" );
	deepEqual( Stem("genivaldo"), "genivald" );
	deepEqual( Stem("genocídio"), "genocídi" );
	deepEqual( Stem("genoma"), "genom" );
	deepEqual( Stem("genomas"), "genom" );
	deepEqual( Stem("genomic"), "genomic" );
	deepEqual( Stem("genovês"), "genovês" );
	deepEqual( Stem("genovese"), "genoves" );
	deepEqual( Stem("genoveses"), "genoves" );
	deepEqual( Stem("genro"), "genr" );
	deepEqual( Stem("gente"), "gent" );
	deepEqual( Stem("gentil"), "gentil" );
	deepEqual( Stem("gentileza"), "gentil" );
	deepEqual( Stem("gentilmente"), "gentil" );
	deepEqual( Stem("genuína"), "genuín" );
	deepEqual( Stem("genuinamente"), "genuin" );
	deepEqual( Stem("genuíno"), "genuín" );
	deepEqual( Stem("genuínos"), "genuín" );
	deepEqual( Stem("genus"), "genus" );
	deepEqual( Stem("geny"), "geny" );
	deepEqual( Stem("geofísico"), "geofís" );
	deepEqual( Stem("geografia"), "geograf" );
	deepEqual( Stem("geográfica"), "geográf" );
	deepEqual( Stem("geograficamente"), "geograf" );
	deepEqual( Stem("geográficas"), "geográf" );
	deepEqual( Stem("geográficos"), "geográf" );
	deepEqual( Stem("geologia"), "geolog" );
	deepEqual( Stem("geológicas"), "geológ" );
	deepEqual( Stem("geométricos"), "geométr" );
	deepEqual( Stem("geopolítico"), "geopolít" );
	deepEqual( Stem("george"), "georg" );
	deepEqual( Stem("georges"), "georg" );
	deepEqual( Stem("georgetown"), "georgetown" );
	deepEqual( Stem("georgette"), "georgett" );
	deepEqual( Stem("geórgia"), "geórg" );
	deepEqual( Stem("gera"), "ger" );
	deepEqual( Stem("geração"), "geraçã" );
	deepEqual( Stem("gerações"), "geraçõ" );
	deepEqual( Stem("gerada"), "ger" );
	deepEqual( Stem("geradas"), "ger" );
	deepEqual( Stem("gerado"), "ger" );
	deepEqual( Stem("gerador"), "gerador" );
	deepEqual( Stem("geradora"), "gerador" );
	deepEqual( Stem("geradoras"), "gerador" );
	deepEqual( Stem("gerados"), "ger" );
	deepEqual( Stem("gerais"), "ger" );
	deepEqual( Stem("geral"), "geral" );
	deepEqual( Stem("gerald"), "gerald" );
	deepEqual( Stem("geraldo"), "gerald" );
	deepEqual( Stem("geralmente"), "geral" );
	deepEqual( Stem("geram"), "ger" );
	deepEqual( Stem("gerando"), "ger" );
	deepEqual( Stem("gerar"), "ger" );
	deepEqual( Stem("geraram"), "ger" );
	deepEqual( Stem("gerardus"), "gerardus" );
	deepEqual( Stem("geraria"), "ger" );
	deepEqual( Stem("gerdau"), "gerdau" );
	deepEqual( Stem("gere"), "ger" );
	deepEqual( Stem("gerencia"), "gerenc" );
	deepEqual( Stem("gerência"), "gerênc" );
	deepEqual( Stem("gerenciado"), "gerenc" );
	deepEqual( Stem("gerencial"), "gerencial" );
	deepEqual( Stem("gerenciam"), "gerenc" );
	deepEqual( Stem("gerenciamento"), "gerenc" );
	deepEqual( Stem("gerenciar"), "gerenc" );
	deepEqual( Stem("gerente"), "gerent" );
	deepEqual( Stem("gerentes"), "gerent" );
	deepEqual( Stem("gergelim"), "gergelim" );
	deepEqual( Stem("geriavit"), "geriavit" );
	deepEqual( Stem("geringonça"), "geringonc" );
	deepEqual( Stem("gerir"), "ger" );
	deepEqual( Stem("germano"), "german" );
	deepEqual( Stem("gero"), "ger" );
	deepEqual( Stem("gerou"), "ger" );
	deepEqual( Stem("gerson"), "gerson" );
	deepEqual( Stem("gérson"), "gérson" );
	deepEqual( Stem("gerusa"), "gerus" );
	deepEqual( Stem("gesner"), "gesn" );
	deepEqual( Stem("gesso"), "gess" );
	deepEqual( Stem("gestante"), "gestant" );
	deepEqual( Stem("gestantes"), "gestant" );
	deepEqual( Stem("gestão"), "gestã" );
	deepEqual( Stem("gesticula"), "gesticul" );
	deepEqual( Stem("gesticulava"), "gesticul" );
	deepEqual( Stem("gesto"), "gest" );
	deepEqual( Stem("gestor"), "gestor" );
	deepEqual( Stem("gestores"), "gestor" );
	deepEqual( Stem("gestos"), "gest" );
	deepEqual( Stem("getúlio"), "getúli" );
	deepEqual( Stem("gft"), "gft" );
	deepEqual( Stem("gg"), "gg" );
	deepEqual( Stem("gher"), "gher" );
	deepEqual( Stem("ghia"), "ghi" );
	deepEqual( Stem("gholmia"), "gholm" );
	deepEqual( Stem("ghorayeb"), "ghorayeb" );
	deepEqual( Stem("ghost"), "ghost" );
	deepEqual( Stem("giacomo"), "giacom" );
	deepEqual( Stem("gianetti"), "gianett" );
	deepEqual( Stem("gianfrancesco"), "gianfrancesc" );
	deepEqual( Stem("giangrande"), "giangrand" );
	deepEqual( Stem("gianinni"), "gianinn" );
	deepEqual( Stem("gianne"), "giann" );
	deepEqual( Stem("gianni"), "giann" );
	deepEqual( Stem("giannini"), "giannin" );
	deepEqual( Stem("giardini"), "giardin" );
	deepEqual( Stem("gif"), "gif" );
	deepEqual( Stem("gigabytes"), "gigabyt" );
	deepEqual( Stem("gigante"), "gigant" );
	deepEqual( Stem("gigantes"), "gigant" );
	deepEqual( Stem("gigantesca"), "gigantesc" );
	deepEqual( Stem("gigantescas"), "gigantesc" );
	deepEqual( Stem("gigantesco"), "gigantesc" );
	deepEqual( Stem("gigolozinho"), "gigolozinh" );
	deepEqual( Stem("gil"), "gil" );
	deepEqual( Stem("gilbert"), "gilbert" );
	deepEqual( Stem("gilberto"), "gilbert" );
	deepEqual( Stem("gillespie"), "gillespi" );
	deepEqual( Stem("gilmar"), "gilm" );
	deepEqual( Stem("gilney"), "gilney" );
	deepEqual( Stem("gilson"), "gilson" );
	deepEqual( Stem("gim"), "gim" );
	deepEqual( Stem("gimenes"), "gimen" );
	deepEqual( Stem("ginásio"), "ginási" );
	deepEqual( Stem("ginasta"), "ginast" );
	deepEqual( Stem("ginástica"), "ginást" );
	deepEqual( Stem("ginecologia"), "ginecolog" );
	deepEqual( Stem("ginecológica"), "ginecológ" );
	deepEqual( Stem("ginecologista"), "ginecolog" );
	deepEqual( Stem("ginga"), "ging" );
	deepEqual( Stem("ginola"), "ginol" );
	deepEqual( Stem("giorgio"), "giorgi" );
	deepEqual( Stem("giovane"), "giovan" );
	deepEqual( Stem("giovanna"), "giovann" );
	deepEqual( Stem("giovanni"), "giovann" );
	deepEqual( Stem("gira"), "gir" );
	deepEqual( Stem("girafinhas"), "girafinh" );
	deepEqual( Stem("giraldez"), "giraldez" );
	deepEqual( Stem("girar"), "gir" );
	deepEqual( Stem("giratório"), "giratóri" );
	deepEqual( Stem("girava"), "gir" );
	deepEqual( Stem("giro"), "gir" );
	deepEqual( Stem("girsz"), "girsz" );
	deepEqual( Stem("gisela"), "gisel" );
	deepEqual( Stem("giselda"), "giseld" );
	deepEqual( Stem("gisele"), "gisel" );
	deepEqual( Stem("giuletta"), "giulett" );
	deepEqual( Stem("giulia"), "giul" );
	deepEqual( Stem("giuliani"), "giulian" );
	deepEqual( Stem("giuseppe"), "giusepp" );
	deepEqual( Stem("giz"), "giz" );
	deepEqual( Stem("glamour"), "glamour" );
	deepEqual( Stem("glamourizar"), "glamouriz" );
	deepEqual( Stem("glândulas"), "glândul" );
	deepEqual( Stem("glasgow"), "glasgow" );
	deepEqual( Stem("glat"), "glat" );
	deepEqual( Stem("glauco"), "glauc" );
	deepEqual( Stem("gleason"), "gleason" );
	deepEqual( Stem("glenda"), "glend" );
	deepEqual( Stem("glenn"), "glenn" );
	deepEqual( Stem("glepf"), "glepf" );
	deepEqual( Stem("glicólico"), "glicól" );
	deepEqual( Stem("glicoproteínas"), "glicoproteín" );
	deepEqual( Stem("glicose"), "glicos" );
	deepEqual( Stem("glina"), "glin" );
	deepEqual( Stem("glinardello"), "glinardell" );
	deepEqual( Stem("globais"), "glob" );
	deepEqual( Stem("global"), "global" );
	deepEqual( Stem("globalização"), "globaliz" );
	deepEqual( Stem("globalizada"), "globaliz" );
	deepEqual( Stem("globalizado"), "globaliz" );
	deepEqual( Stem("globalizaram"), "globaliz" );
	deepEqual( Stem("globalmente"), "global" );
	deepEqual( Stem("globe"), "glob" );
	deepEqual( Stem("globeleza"), "globel" );
	deepEqual( Stem("globo"), "glob" );
	deepEqual( Stem("globonews"), "globonews" );
	deepEqual( Stem("glóbulos"), "glóbul" );
	deepEqual( Stem("glombek"), "glombek" );
	deepEqual( Stem("gloria"), "glor" );
	deepEqual( Stem("glória"), "glór" );
	deepEqual( Stem("glórias"), "glór" );
	deepEqual( Stem("glorificação"), "glorific" );
	deepEqual( Stem("glorificam"), "glorific" );
	deepEqual( Stem("gloriosa"), "glorios" );
	deepEqual( Stem("glossário"), "glossári" );
	deepEqual( Stem("gls"), "gls" );
	deepEqual( Stem("gluck"), "gluck" );
	deepEqual( Stem("glutamato"), "glutamat" );
	deepEqual( Stem("glúteos"), "glút" );
	deepEqual( Stem("gm"), "gm" );
	deepEqual( Stem("gnatalli"), "gnatall" );
	deepEqual( Stem("go"), "go" );
	deepEqual( Stem("goa"), "goa" );
	deepEqual( Stem("gobbi"), "gobb" );
	deepEqual( Stem("god"), "god" );
	deepEqual( Stem("godói"), "godó" );
	deepEqual( Stem("godoy"), "godoy" );
	deepEqual( Stem("godzilla"), "godzill" );
	deepEqual( Stem("goering"), "goering" );
	deepEqual( Stem("góes"), "góes" );
	deepEqual( Stem("goi"), "goi" );
	deepEqual( Stem("goiabada"), "goiab" );
	deepEqual( Stem("goiânia"), "goiân" );
	deepEqual( Stem("goiano"), "goian" );
	deepEqual( Stem("goiás"), "goiás" );
	deepEqual( Stem("going"), "going" );
	deepEqual( Stem("gol"), "gol" );
	deepEqual( Stem("golbery"), "golbery" );
	deepEqual( Stem("goldberg"), "goldberg" );
	deepEqual( Stem("goldblatt"), "goldblatt" );
	deepEqual( Stem("goldblum"), "goldblum" );
	deepEqual( Stem("golden"), "golden" );
	deepEqual( Stem("goldin"), "goldin" );
	deepEqual( Stem("goldoni"), "goldon" );
	deepEqual( Stem("gole"), "gol" );
	deepEqual( Stem("goleada"), "gol" );
	deepEqual( Stem("goleiro"), "goleir" );
	deepEqual( Stem("goles"), "gol" );
	deepEqual( Stem("golfe"), "golf" );
	deepEqual( Stem("golfinhos"), "golfinh" );
	deepEqual( Stem("golfo"), "golf" );
	deepEqual( Stem("gollop"), "gollop" );
	deepEqual( Stem("golpe"), "golp" );
	deepEqual( Stem("golpes"), "golp" );
	deepEqual( Stem("golpista"), "golpist" );
	deepEqual( Stem("golpistas"), "golpist" );
	deepEqual( Stem("gols"), "gols" );
	deepEqual( Stem("golubic"), "golubic" );
	deepEqual( Stem("gomes"), "gom" );
	deepEqual( Stem("gompas"), "gomp" );
	deepEqual( Stem("gonçalo"), "gonçal" );
	deepEqual( Stem("gonçalves"), "gonçalv" );
	deepEqual( Stem("gonodal"), "gonodal" );
	deepEqual( Stem("gonzaga"), "gonzag" );
	deepEqual( Stem("gonzales"), "gonzal" );
	deepEqual( Stem("gonzalez"), "gonzalez" );
	deepEqual( Stem("gonzalo"), "gonzal" );
	deepEqual( Stem("gorda"), "gord" );
	deepEqual( Stem("gordas"), "gord" );
	deepEqual( Stem("gordinha"), "gordinh" );
	deepEqual( Stem("gordinhas"), "gordinh" );
	deepEqual( Stem("gordinho"), "gordinh" );
	deepEqual( Stem("gordinhos"), "gordinh" );
	deepEqual( Stem("gordo"), "gord" );
	deepEqual( Stem("gordos"), "gord" );
	deepEqual( Stem("gorduchos"), "gorduch" );
	deepEqual( Stem("gordura"), "gordur" );
	deepEqual( Stem("gordurão"), "gordurã" );
	deepEqual( Stem("gorduras"), "gordur" );
	deepEqual( Stem("gordurinha"), "gordurinh" );
	deepEqual( Stem("gordurosas"), "gordur" );
	deepEqual( Stem("gordurosos"), "gordur" );
	deepEqual( Stem("gorgulho"), "gorgulh" );
	deepEqual( Stem("gorila"), "goril" );
	deepEqual( Stem("goró"), "gor" );
	deepEqual( Stem("gospel"), "gospel" );
	deepEqual( Stem("gosta"), "gost" );
	deepEqual( Stem("gostado"), "gost" );
	deepEqual( Stem("gostam"), "gost" );
	deepEqual( Stem("gostamos"), "gost" );
	deepEqual( Stem("gostando"), "gost" );
	deepEqual( Stem("gostar"), "gost" );
	deepEqual( Stem("gostaram"), "gost" );
	deepEqual( Stem("gostaria"), "gost" );
	deepEqual( Stem("gostariam"), "gost" );
	deepEqual( Stem("gostasse"), "gost" );
	deepEqual( Stem("gostassem"), "gost" );
	deepEqual( Stem("gostava"), "gost" );
	deepEqual( Stem("gostavam"), "gost" );
	deepEqual( Stem("gostávamos"), "gost" );
	deepEqual( Stem("gostei"), "gost" );
	deepEqual( Stem("gostem"), "gost" );
	deepEqual( Stem("gostinho"), "gostinh" );
	deepEqual( Stem("gosto"), "gost" );
	deepEqual( Stem("gostos"), "gost" );
	deepEqual( Stem("gostosa"), "gostos" );
	deepEqual( Stem("gostosamente"), "gostos" );
	deepEqual( Stem("gostoso"), "gostos" );
	deepEqual( Stem("gostou"), "gost" );
	deepEqual( Stem("gota"), "got" );
	deepEqual( Stem("gotas"), "got" );
	deepEqual( Stem("gotinha"), "gotinh" );
	deepEqual( Stem("gotinhas"), "gotinh" );
	deepEqual( Stem("gott"), "gott" );
	deepEqual( Stem("gotti"), "gott" );
	deepEqual( Stem("goulart"), "goulart" );
	deepEqual( Stem("gourmet"), "gourmet" );
	deepEqual( Stem("gouvea"), "gouv" );
	deepEqual( Stem("gouvêa"), "gouv" );
	deepEqual( Stem("gov"), "gov" );
	deepEqual( Stem("governa"), "govern" );
	deepEqual( Stem("governada"), "govern" );
	deepEqual( Stem("governado"), "govern" );
	deepEqual( Stem("governador"), "govern" );
	deepEqual( Stem("governadores"), "govern" );
	deepEqual( Stem("governados"), "govern" );
	deepEqual( Stem("governamentais"), "governament" );
	deepEqual( Stem("governamental"), "governamental" );
	deepEqual( Stem("governantes"), "govern" );
	deepEqual( Stem("governar"), "govern" );
	deepEqual( Stem("governaram"), "govern" );
	deepEqual( Stem("governista"), "govern" );
	deepEqual( Stem("governo"), "govern" );
	deepEqual( Stem("governos"), "govern" );
	deepEqual( Stem("governou"), "govern" );
	deepEqual( Stem("goza"), "goz" );
	deepEqual( Stem("gozador"), "gozador" );
	deepEqual( Stem("gozando"), "goz" );
	deepEqual( Stem("gozar"), "goz" );
	deepEqual( Stem("gozava"), "goz" );
	deepEqual( Stem("gozo"), "goz" );
	deepEqual( Stem("gozou"), "goz" );
	deepEqual( Stem("gps"), "gps" );
	deepEqual( Stem("grã"), "grã" );
	deepEqual( Stem("graça"), "grac" );
	deepEqual( Stem("graças"), "grac" );
	deepEqual( Stem("grace"), "grac" );
	deepEqual( Stem("graciliano"), "gracilian" );
	deepEqual( Stem("gracinha"), "gracinh" );
	deepEqual( Stem("gracioso"), "gracios" );
	deepEqual( Stem("gradativa"), "gradat" );
	deepEqual( Stem("gradativamente"), "gradat" );
	deepEqual( Stem("grades"), "grad" );
	deepEqual( Stem("graduação"), "graduaçã" );
	deepEqual( Stem("graduada"), "gradu" );
	deepEqual( Stem("graduado"), "gradu" );
	deepEqual( Stem("graduais"), "gradu" );
	deepEqual( Stem("gradual"), "gradual" );
	deepEqual( Stem("gradualmente"), "gradual" );
	deepEqual( Stem("graduando"), "gradu" );
	deepEqual( Stem("graf"), "graf" );
	deepEqual( Stem("grafar"), "graf" );
	deepEqual( Stem("grafias"), "graf" );
	deepEqual( Stem("gráfica"), "gráfic" );
	deepEqual( Stem("gráficas"), "gráfic" );
	deepEqual( Stem("gráfico"), "gráfic" );
	deepEqual( Stem("gráficos"), "gráfic" );
	deepEqual( Stem("grafista"), "grafist" );
	deepEqual( Stem("grafite"), "grafit" );
	deepEqual( Stem("grafites"), "grafit" );
	deepEqual( Stem("grafotécnico"), "grafotécn" );
	deepEqual( Stem("grahan"), "grahan" );
	deepEqual( Stem("gralha"), "gralh" );
	deepEqual( Stem("grama"), "gram" );
	deepEqual( Stem("gramado"), "gram" );
	deepEqual( Stem("gramados"), "gram" );
	deepEqual( Stem("gramas"), "gram" );
	deepEqual( Stem("grammont"), "grammont" );
	deepEqual( Stem("grampeadas"), "gramp" );
	deepEqual( Stem("grampeados"), "gramp" );
	deepEqual( Stem("grampeei"), "gramp" );
	deepEqual( Stem("grampo"), "gramp" );
	deepEqual( Stem("grampos"), "gramp" );
	deepEqual( Stem("grana"), "gran" );
	deepEqual( Stem("granada"), "gran" );
	deepEqual( Stem("granadas"), "gran" );
	deepEqual( Stem("granatieri"), "granatier" );
	deepEqual( Stem("grand"), "grand" );
	deepEqual( Stem("grande"), "grand" );
	deepEqual( Stem("grandemente"), "grandement" );
	deepEqual( Stem("grandes"), "grand" );
	deepEqual( Stem("grandeza"), "grandez" );
	deepEqual( Stem("grandiosa"), "grandios" );
	deepEqual( Stem("grando"), "grand" );
	deepEqual( Stem("grandões"), "grandõ" );
	deepEqual( Stem("graneleiro"), "graneleir" );
	deepEqual( Stem("granítica"), "granít" );
	deepEqual( Stem("granito"), "granit" );
	deepEqual( Stem("granizo"), "graniz" );
	deepEqual( Stem("granja"), "granj" );
	deepEqual( Stem("grant"), "grant" );
	deepEqual( Stem("grão"), "grã" );
	deepEqual( Stem("grãos"), "grã" );
	deepEqual( Stem("grape"), "grap" );
	deepEqual( Stem("grata"), "grat" );
	deepEqual( Stem("gratidão"), "gratidã" );
	deepEqual( Stem("gratificado"), "gratific" );
	deepEqual( Stem("gratificante"), "gratific" );
	deepEqual( Stem("grátis"), "grát" );
	deepEqual( Stem("grato"), "grat" );
	deepEqual( Stem("gratuita"), "gratuit" );
	deepEqual( Stem("gratuitamente"), "gratuit" );
	deepEqual( Stem("gratuitas"), "gratuit" );
	deepEqual( Stem("gratuito"), "gratuit" );
	deepEqual( Stem("gratuitos"), "gratuit" );
	deepEqual( Stem("grau"), "grau" );
	deepEqual( Stem("graus"), "graus" );
	deepEqual( Stem("grava"), "grav" );
	deepEqual( Stem("gravação"), "gravaçã" );
	deepEqual( Stem("gravações"), "gravaçõ" );
	deepEqual( Stem("gravada"), "grav" );
	deepEqual( Stem("gravadas"), "grav" );
	deepEqual( Stem("gravado"), "grav" );
	deepEqual( Stem("gravador"), "gravador" );
	deepEqual( Stem("gravadora"), "gravador" );
	deepEqual( Stem("gravadoras"), "gravador" );
	deepEqual( Stem("gravadores"), "gravador" );
	deepEqual( Stem("gravados"), "grav" );
	deepEqual( Stem("gravando"), "grav" );
	deepEqual( Stem("gravar"), "grav" );
	deepEqual( Stem("gravaram"), "grav" );
	deepEqual( Stem("gravata"), "gravat" );
	deepEqual( Stem("gravatas"), "gravat" );
	deepEqual( Stem("gravava"), "grav" );
	deepEqual( Stem("grave"), "grav" );
	deepEqual( Stem("gravemente"), "gravement" );
	deepEqual( Stem("graves"), "grav" );
	deepEqual( Stem("gravetos"), "gravet" );
	deepEqual( Stem("grávida"), "gráv" );
	deepEqual( Stem("gravidade"), "gravidad" );
	deepEqual( Stem("grávidas"), "gráv" );
	deepEqual( Stem("gravidez"), "gravidez" );
	deepEqual( Stem("gravitam"), "gravit" );
	deepEqual( Stem("gravitando"), "gravit" );
	deepEqual( Stem("gravou"), "grav" );
	deepEqual( Stem("gravuras"), "gravur" );
	deepEqual( Stem("graziano"), "grazian" );
	deepEqual( Stem("grease"), "greas" );
	deepEqual( Stem("grecco"), "grecc" );
	deepEqual( Stem("green"), "green" );
	deepEqual( Stem("greenpeace"), "greenpeac" );
	deepEqual( Stem("greenville"), "greenvill" );
	deepEqual( Stem("greenwich"), "greenwich" );
	deepEqual( Stem("grega"), "greg" );
	deepEqual( Stem("grego"), "greg" );
	deepEqual( Stem("gregoriano"), "gregorian" );
	deepEqual( Stem("gregório"), "gregóri" );
	deepEqual( Stem("gregos"), "greg" );
	deepEqual( Stem("grelhadas"), "grelh" );
	deepEqual( Stem("grelhado"), "grelh" );
	deepEqual( Stem("grelhados"), "grelh" );
	deepEqual( Stem("grelhar"), "grelh" );
	deepEqual( Stem("grêmio"), "grêmi" );
	deepEqual( Stem("grendene"), "grenden" );
	deepEqual( Stem("greta"), "gret" );
	deepEqual( Stem("gretchen"), "gretchen" );
	deepEqual( Stem("greve"), "grev" );
	deepEqual( Stem("greves"), "grev" );
	deepEqual( Stem("grid"), "grid" );
	deepEqual( Stem("grife"), "grif" );
	deepEqual( Stem("grifes"), "grif" );
	deepEqual( Stem("griffe"), "griff" );
	deepEqual( Stem("griffes"), "griff" );
	deepEqual( Stem("grilo"), "gril" );
	deepEqual( Stem("grinalda"), "grinald" );
	deepEqual( Stem("grinbaum"), "grinbaum" );
	deepEqual( Stem("gripado"), "grip" );
	deepEqual( Stem("gripe"), "grip" );
	deepEqual( Stem("grisalho"), "grisalh" );
	deepEqual( Stem("grisi"), "gris" );
	deepEqual( Stem("grisolia"), "grisol" );
	deepEqual( Stem("grita"), "grit" );
	deepEqual( Stem("gritam"), "grit" );
	deepEqual( Stem("gritando"), "grit" );
	deepEqual( Stem("gritante"), "gritant" );
	deepEqual( Stem("gritantes"), "gritant" );
	deepEqual( Stem("gritar"), "grit" );
	deepEqual( Stem("gritaria"), "grit" );
	deepEqual( Stem("gritava"), "grit" );
	deepEqual( Stem("gritavam"), "grit" );
	deepEqual( Stem("grito"), "grit" );
	deepEqual( Stem("gritos"), "grit" );
	deepEqual( Stem("gritou"), "grit" );
	deepEqual( Stem("gros"), "gros" );
	deepEqual( Stem("grossa"), "gross" );
	deepEqual( Stem("grossas"), "gross" );
	deepEqual( Stem("grosseiros"), "grosseir" );
	deepEqual( Stem("grossense"), "grossens" );
	deepEqual( Stem("grosseria"), "gross" );
	deepEqual( Stem("grosso"), "gross" );
	deepEqual( Stem("grossos"), "gross" );
	deepEqual( Stem("grotesca"), "grotesc" );
	deepEqual( Stem("grotescos"), "grotesc" );
	deepEqual( Stem("groto"), "grot" );
	deepEqual( Stem("grotões"), "grotõ" );
	deepEqual( Stem("group"), "group" );
	deepEqual( Stem("grove"), "grov" );
	deepEqual( Stem("grozes"), "groz" );
	deepEqual( Stem("grudado"), "grud" );
	deepEqual( Stem("grudados"), "grud" );
	deepEqual( Stem("grudam"), "grud" );
	deepEqual( Stem("grunge"), "grung" );
	deepEqual( Stem("grupinho"), "grupinh" );
	deepEqual( Stem("grupo"), "grup" );
	deepEqual( Stem("grupos"), "grup" );
	deepEqual( Stem("gruta"), "grut" );
	deepEqual( Stem("guadalupe"), "guadalup" );
	deepEqual( Stem("guagliardi"), "guagliard" );
	deepEqual( Stem("guanabara"), "guanab" );
	deepEqual( Stem("guanabaras"), "guanab" );
	deepEqual( Stem("guanaes"), "guana" );
	deepEqual( Stem("guantchaco"), "guantchac" );
	deepEqual( Stem("guanxi"), "guanx" );
	deepEqual( Stem("guaraciaba"), "guaraciab" );
	deepEqual( Stem("guaraná"), "guaran" );
	deepEqual( Stem("guaranis"), "guaran" );
	deepEqual( Stem("guarapiranga"), "guarapirang" );
	deepEqual( Stem("guararema"), "guararem" );
	deepEqual( Stem("guarda"), "guard" );
	deepEqual( Stem("guardá"), "guard" );
	deepEqual( Stem("guardada"), "guard" );
	deepEqual( Stem("guardadas"), "guard" );
	deepEqual( Stem("guardados"), "guard" );
	deepEqual( Stem("guardam"), "guard" );
	deepEqual( Stem("guardanapo"), "guardanap" );
	deepEqual( Stem("guardar"), "guard" );
	deepEqual( Stem("guardaram"), "guard" );
	deepEqual( Stem("guardas"), "guard" );
	deepEqual( Stem("guarde"), "guard" );
	deepEqual( Stem("guardei"), "guard" );
	deepEqual( Stem("guardo"), "guard" );
	deepEqual( Stem("guardou"), "guard" );
	deepEqual( Stem("guarita"), "guarit" );
	deepEqual( Stem("guarnição"), "guarniçã" );
	deepEqual( Stem("guarnieri"), "guarnier" );
	deepEqual( Stem("guarujá"), "guaruj" );
	deepEqual( Stem("guarulhos"), "guarulh" );
	deepEqual( Stem("guaxuma"), "guaxum" );
	deepEqual( Stem("gucci"), "gucc" );
	deepEqual( Stem("guccione"), "guccion" );
	deepEqual( Stem("guedes"), "gued" );
	deepEqual( Stem("gueller"), "guell" );
	deepEqual( Stem("guerra"), "guerr" );
	deepEqual( Stem("guerras"), "guerr" );
	deepEqual( Stem("guerreira"), "guerreir" );
	deepEqual( Stem("guerreiro"), "guerreir" );
	deepEqual( Stem("guerreiros"), "guerreir" );
	deepEqual( Stem("guerrilha"), "guerrilh" );
	deepEqual( Stem("guerrilhas"), "guerrilh" );
	deepEqual( Stem("guerrilheira"), "guerrilheir" );
	deepEqual( Stem("guerrilheiro"), "guerrilheir" );
	deepEqual( Stem("guerrilheiros"), "guerrilheir" );
	deepEqual( Stem("guess"), "guess" );
	deepEqual( Stem("gueto"), "guet" );
	deepEqual( Stem("guetos"), "guet" );
	deepEqual( Stem("guevara"), "guev" );
	deepEqual( Stem("guevarista"), "guevar" );
	deepEqual( Stem("guevaristas"), "guevar" );
	deepEqual( Stem("guga"), "gug" );
	deepEqual( Stem("gugu"), "gugu" );
	deepEqual( Stem("guia"), "gui" );
	deepEqual( Stem("guiá"), "gui" );
	deepEqual( Stem("guiado"), "gui" );
	deepEqual( Stem("guiana"), "guian" );
	deepEqual( Stem("guiar"), "gui" );
	deepEqual( Stem("guias"), "gui" );
	deepEqual( Stem("guichê"), "guich" );
	deepEqual( Stem("guide"), "guid" );
	deepEqual( Stem("guido"), "guid" );
	deepEqual( Stem("guignard"), "guignard" );
	deepEqual( Stem("guilherme"), "guilherm" );
	deepEqual( Stem("guilhon"), "guilhon" );
	deepEqual( Stem("guillaume"), "guillaum" );
	deepEqual( Stem("guillermo"), "guillerm" );
	deepEqual( Stem("guimarães"), "guimarã" );
	deepEqual( Stem("guimil"), "guimil" );
	deepEqual( Stem("guinada"), "guin" );
	deepEqual( Stem("guincha"), "guinch" );
	deepEqual( Stem("guinchados"), "guinch" );
	deepEqual( Stem("guindastes"), "guind" );
	deepEqual( Stem("guiné"), "guin" );
	deepEqual( Stem("guinness"), "guinness" );
	deepEqual( Stem("guitarra"), "guitarr" );
	deepEqual( Stem("guitarrista"), "guitarr" );
	deepEqual( Stem("gul"), "gul" );
	deepEqual( Stem("gula"), "gul" );
	deepEqual( Stem("gulfstream"), "gulfstr" );
	deepEqual( Stem("gullit"), "gullit" );
	deepEqual( Stem("gullo"), "gull" );
	deepEqual( Stem("gullova"), "gullov" );
	deepEqual( Stem("gulosa"), "gulos" );
	deepEqual( Stem("guloseimas"), "guloseim" );
	deepEqual( Stem("gulosos"), "gulos" );
	deepEqual( Stem("gumes"), "gum" );
	deepEqual( Stem("gump"), "gump" );
	deepEqual( Stem("günter"), "günter" );
	deepEqual( Stem("gur"), "gur" );
	deepEqual( Stem("gurovitz"), "gurovitz" );
	deepEqual( Stem("guru"), "guru" );
	deepEqual( Stem("gurus"), "gurus" );
	deepEqual( Stem("gusmão"), "gusmã" );
	deepEqual( Stem("gustativa"), "gustat" );
	deepEqual( Stem("gustavo"), "gustav" );
	deepEqual( Stem("guth"), "guth" );
	deepEqual( Stem("gutierrez"), "gutierrez" );
	deepEqual( Stem("guto"), "gut" );
	deepEqual( Stem("guzik"), "guzik" );
	deepEqual( Stem("guzzo"), "guzz" );
	deepEqual( Stem("gv"), "gv" );
	deepEqual( Stem("gyaoppi"), "gyaopp" );
	deepEqual( Stem("gyaoppis"), "gyaopp" );
	deepEqual( Stem("h"), "h" );
	deepEqual( Stem("há"), "há" );
	deepEqual( Stem("haar"), "haar" );
	deepEqual( Stem("habano"), "haban" );
	deepEqual( Stem("habeas"), "hab" );
	deepEqual( Stem("habeyche"), "habeych" );
	deepEqual( Stem("habilidade"), "habil" );
	deepEqual( Stem("habilidades"), "habil" );
	deepEqual( Stem("habilidosos"), "habilid" );
	deepEqual( Stem("habilitação"), "habilit" );
	deepEqual( Stem("habilitaram"), "habilit" );
	deepEqual( Stem("habitação"), "habit" );
	deepEqual( Stem("habitacionais"), "habitacion" );
	deepEqual( Stem("habitada"), "habit" );
	deepEqual( Stem("habitadas"), "habit" );
	deepEqual( Stem("habitado"), "habit" );
	deepEqual( Stem("habitam"), "habit" );
	deepEqual( Stem("habitante"), "habit" );
	deepEqual( Stem("habitantes"), "habit" );
	deepEqual( Stem("habitat"), "habitat" );
	deepEqual( Stem("hábitat"), "hábitat" );
	deepEqual( Stem("hábito"), "hábit" );
	deepEqual( Stem("hábitos"), "hábit" );
	deepEqual( Stem("habituado"), "habitu" );
	deepEqual( Stem("habituados"), "habitu" );
	deepEqual( Stem("habituais"), "habitu" );
	deepEqual( Stem("habitual"), "habitual" );
	deepEqual( Stem("habitualmente"), "habitual" );
	deepEqual( Stem("habituando"), "habitu" );
	deepEqual( Stem("habituou"), "habitu" );
	deepEqual( Stem("haddad"), "haddad" );
	deepEqual( Stem("hage"), "hag" );
	deepEqual( Stem("hagia"), "hag" );
	deepEqual( Stem("haja"), "haj" );
	deepEqual( Stem("hajj"), "hajj" );
	deepEqual( Stem("hall"), "hall" );
	deepEqual( Stem("halley"), "halley" );
	deepEqual( Stem("halpern"), "halpern" );
	deepEqual( Stem("hamburger"), "hamburg" );
	deepEqual( Stem("hamburgo"), "hamburg" );
	deepEqual( Stem("hamer"), "ham" );
	deepEqual( Stem("hamilton"), "hamilton" );
	deepEqual( Stem("hamlet"), "hamlet" );
	deepEqual( Stem("hammond"), "hammond" );
	deepEqual( Stem("hamuman"), "hamuman" );
	deepEqual( Stem("hangar"), "hang" );
	deepEqual( Stem("hangares"), "hang" );
	deepEqual( Stem("hanks"), "hanks" );
	deepEqual( Stem("hans"), "hans" );
	deepEqual( Stem("hão"), "hã" );
	deepEqual( Stem("happy"), "happy" );
	deepEqual( Stem("hara"), "har" );
	deepEqual( Stem("harare"), "harar" );
	deepEqual( Stem("harazim"), "harazim" );
	deepEqual( Stem("harbor"), "harbor" );
	deepEqual( Stem("harding"), "harding" );
	deepEqual( Stem("hardware"), "hardwar" );
	deepEqual( Stem("harém"), "harém" );
	deepEqual( Stem("harley"), "harley" );
	deepEqual( Stem("harmonia"), "harmon" );
	deepEqual( Stem("harold"), "harold" );
	deepEqual( Stem("haroldo"), "harold" );
	deepEqual( Stem("harpa"), "harp" );
	deepEqual( Stem("harper"), "harp" );
	deepEqual( Stem("harrad"), "harrad" );
	deepEqual( Stem("harrison"), "harrison" );
	deepEqual( Stem("harry"), "harry" );
	deepEqual( Stem("hart"), "hart" );
	deepEqual( Stem("hartmann"), "hartmann" );
	deepEqual( Stem("harvard"), "harvard" );
	deepEqual( Stem("haryella"), "haryell" );
	deepEqual( Stem("hasta"), "hast" );
	deepEqual( Stem("haste"), "hast" );
	deepEqual( Stem("hatanaka"), "hatanak" );
	deepEqual( Stem("haten"), "haten" );
	deepEqual( Stem("hathaway"), "hathaway" );
	deepEqual( Stem("haupt"), "haupt" );
	deepEqual( Stem("haut"), "haut" );
	deepEqual( Stem("havaí"), "hava" );
	deepEqual( Stem("havana"), "havan" );
	deepEqual( Stem("havanas"), "havan" );
	deepEqual( Stem("havendo"), "hav" );
	deepEqual( Stem("haver"), "hav" );
	deepEqual( Stem("haverá"), "hav" );
	deepEqual( Stem("haveria"), "hav" );
	deepEqual( Stem("havia"), "hav" );
	deepEqual( Stem("haviam"), "hav" );
	deepEqual( Stem("havíamos"), "hav" );
	deepEqual( Stem("havido"), "hav" );
	deepEqual( Stem("haxixe"), "haxix" );
	deepEqual( Stem("hay"), "hay" );
	deepEqual( Stem("haydée"), "haydé" );
	deepEqual( Stem("hazen"), "hazen" );
	deepEqual( Stem("hbp"), "hbp" );
	deepEqual( Stem("hdl"), "hdl" );
	deepEqual( Stem("hea"), "hea" );
	deepEqual( Stem("headhunter"), "headhunt" );
	deepEqual( Stem("headhunting"), "headhunting" );
	deepEqual( Stem("heavy"), "heavy" );
	deepEqual( Stem("hebe"), "heb" );
	deepEqual( Stem("hebraica"), "hebraic" );
	deepEqual( Stem("hebraico"), "hebraic" );
	deepEqual( Stem("hebraicos"), "hebraic" );
	deepEqual( Stem("hebron"), "hebron" );
	deepEqual( Stem("hecatombe"), "hecatomb" );
	deepEqual( Stem("hectare"), "hectar" );
	deepEqual( Stem("hectares"), "hect" );
	deepEqual( Stem("hector"), "hector" );
	deepEqual( Stem("hedgus"), "hedgus" );
	deepEqual( Stem("hediondo"), "hediond" );
	deepEqual( Stem("hedonismo"), "hedon" );
	deepEqual( Stem("hedonista"), "hedon" );
	deepEqual( Stem("hegemonia"), "hegemon" );
	deepEqual( Stem("hegou"), "heg" );
	deepEqual( Stem("hein"), "hein" );
	deepEqual( Stem("heinrich"), "heinrich" );
	deepEqual( Stem("heitor"), "heitor" );
	deepEqual( Stem("helde"), "held" );
	deepEqual( Stem("helen"), "helen" );
	deepEqual( Stem("helena"), "helen" );
	deepEqual( Stem("hélène"), "hélèn" );
	deepEqual( Stem("helênica"), "helên" );
	deepEqual( Stem("helicóptero"), "helicópter" );
	deepEqual( Stem("helicópteros"), "helicópter" );
	deepEqual( Stem("helio"), "heli" );
	deepEqual( Stem("hélio"), "héli" );
	deepEqual( Stem("heliodora"), "heliodor" );
	deepEqual( Stem("heliópolis"), "heliópol" );
	deepEqual( Stem("helmut"), "helmut" );
	deepEqual( Stem("heloisa"), "helois" );
	deepEqual( Stem("help"), "help" );
	deepEqual( Stem("helvécio"), "helvéci" );
	deepEqual( Stem("hemingway"), "hemingway" );
	deepEqual( Stem("hemisfério"), "hemisféri" );
	deepEqual( Stem("hemocromatose"), "hemocromatos" );
	deepEqual( Stem("hemofilia"), "hemofil" );
	deepEqual( Stem("hemorragia"), "hemorrag" );
	deepEqual( Stem("hemorragias"), "hemorrag" );
	deepEqual( Stem("henderson"), "henderson" );
	deepEqual( Stem("hendricks"), "hendricks" );
	deepEqual( Stem("hendrix"), "hendrix" );
	deepEqual( Stem("henfil"), "henfil" );
	deepEqual( Stem("henrique"), "henriqu" );
	deepEqual( Stem("henriques"), "henriqu" );
	deepEqual( Stem("henry"), "henry" );
	deepEqual( Stem("hepática"), "hepát" );
	deepEqual( Stem("hepáticas"), "hepát" );
	deepEqual( Stem("hepatite"), "hepatit" );
	deepEqual( Stem("hepburn"), "hepburn" );
	deepEqual( Stem("hera"), "her" );
	deepEqual( Stem("herança"), "heranc" );
	deepEqual( Stem("heranças"), "heranc" );
	deepEqual( Stem("herbarium"), "herbarium" );
	deepEqual( Stem("herbert"), "herbert" );
	deepEqual( Stem("herchcovich"), "herchcovich" );
	deepEqual( Stem("herchcovitch"), "herchcovitch" );
	deepEqual( Stem("herculano"), "herculan" );
	deepEqual( Stem("hércules"), "hércul" );
	deepEqual( Stem("herdadas"), "herd" );
	deepEqual( Stem("herdar"), "herd" );
	deepEqual( Stem("herdeira"), "herdeir" );
	deepEqual( Stem("herdeiras"), "herdeir" );
	deepEqual( Stem("herdeiro"), "herdeir" );
	deepEqual( Stem("herdeiros"), "herdeir" );
	deepEqual( Stem("herdou"), "herd" );
	deepEqual( Stem("hereditária"), "hereditár" );
	deepEqual( Stem("hereditariamente"), "hereditari" );
	deepEqual( Stem("hereditárias"), "hereditár" );
	deepEqual( Stem("hereditário"), "hereditári" );
	deepEqual( Stem("hereditários"), "hereditári" );
	deepEqual( Stem("hereges"), "hereg" );
	deepEqual( Stem("heresia"), "heres" );
	deepEqual( Stem("hermann"), "hermann" );
	deepEqual( Stem("hermeticamente"), "hermet" );
	deepEqual( Stem("hermitage"), "hermitag" );
	deepEqual( Stem("hermon"), "hermon" );
	deepEqual( Stem("hernandes"), "hernand" );
	deepEqual( Stem("hérnia"), "hérn" );
	deepEqual( Stem("herodes"), "herod" );
	deepEqual( Stem("herói"), "heró" );
	deepEqual( Stem("heróicas"), "heróic" );
	deepEqual( Stem("heróicos"), "heróic" );
	deepEqual( Stem("heroína"), "heroín" );
	deepEqual( Stem("heróis"), "heró" );
	deepEqual( Stem("heron"), "heron" );
	deepEqual( Stem("herrmann"), "herrmann" );
	deepEqual( Stem("herton"), "herton" );
	deepEqual( Stem("herzog"), "herzog" );
	deepEqual( Stem("hesita"), "hesit" );
	deepEqual( Stem("hesitação"), "hesit" );
	deepEqual( Stem("hesitam"), "hesit" );
	deepEqual( Stem("hesitou"), "hesit" );
	deepEqual( Stem("heslander"), "hesland" );
	deepEqual( Stem("hespanha"), "hespanh" );
	deepEqual( Stem("heston"), "heston" );
	deepEqual( Stem("hetero"), "heter" );
	deepEqual( Stem("heterodoxos"), "heterodox" );
	deepEqual( Stem("heterossexuais"), "heterossexu" );
	deepEqual( Stem("heterossexual"), "heterossexual" );
	deepEqual( Stem("hewlett"), "hewlett" );
	deepEqual( Stem("heymann"), "heymann" );
	deepEqual( Stem("hidrante"), "hidrant" );
	deepEqual( Stem("hidrata"), "hidrat" );
	deepEqual( Stem("hidratação"), "hidrat" );
	deepEqual( Stem("hidratam"), "hidrat" );
	deepEqual( Stem("hidratante"), "hidrat" );
	deepEqual( Stem("hidratantes"), "hidrat" );
	deepEqual( Stem("hidráulica"), "hidrául" );
	deepEqual( Stem("hidráulico"), "hidrául" );
	deepEqual( Stem("hidrelétrica"), "hidrelétr" );
	deepEqual( Stem("hidroavião"), "hidroaviã" );
	deepEqual( Stem("hidrogênio"), "hidrogêni" );
	deepEqual( Stem("hidroginástica"), "hidroginást" );
	deepEqual( Stem("hidroterapia"), "hidroterap" );
	deepEqual( Stem("hidrovia"), "hidrov" );
	deepEqual( Stem("hierarquia"), "hierarqu" );
	deepEqual( Stem("hierarquias"), "hierarqu" );
	deepEqual( Stem("hieróglifos"), "hieróglif" );
	deepEqual( Stem("high"), "high" );
	deepEqual( Stem("higiene"), "higien" );
	deepEqual( Stem("higienicamente"), "higien" );
	deepEqual( Stem("higienópolis"), "higienópol" );
	deepEqual( Stem("higuera"), "higu" );
	deepEqual( Stem("hijo"), "hij" );
	deepEqual( Stem("hilariante"), "hilari" );
	deepEqual( Stem("hilários"), "hilári" );
	deepEqual( Stem("hilda"), "hild" );
	deepEqual( Stem("hildete"), "hildet" );
	deepEqual( Stem("hilleshein"), "hilleshein" );
	deepEqual( Stem("hills"), "hills" );
	deepEqual( Stem("hilton"), "hilton" );
	deepEqual( Stem("hilux"), "hilux" );
	deepEqual( Stem("himachal"), "himachal" );
	deepEqual( Stem("himalaia"), "himala" );
	deepEqual( Stem("hinduístas"), "hinduíst" );
	deepEqual( Stem("hino"), "hin" );
	deepEqual( Stem("hióide"), "hióid" );
	deepEqual( Stem("hipericão"), "hipericã" );
	deepEqual( Stem("hipericina"), "hipericin" );
	deepEqual( Stem("hipérico"), "hipér" );
	deepEqual( Stem("hiperinflação"), "hiperinfl" );
	deepEqual( Stem("hiperinsulinemia"), "hiperinsulinem" );
	deepEqual( Stem("hiperpigmentação"), "hiperpigment" );
	deepEqual( Stem("hiperplasia"), "hiperplas" );
	deepEqual( Stem("hipertensão"), "hipertensã" );
	deepEqual( Stem("hipertrofiado"), "hipertrofi" );
	deepEqual( Stem("hipertrofina"), "hipertrofin" );
	deepEqual( Stem("hípica"), "hípic" );
	deepEqual( Stem("hípico"), "hípic" );
	deepEqual( Stem("hipnotiza"), "hipnotiz" );
	deepEqual( Stem("hipnotizador"), "hipnotiz" );
	deepEqual( Stem("hipnotizar"), "hipnotiz" );
	deepEqual( Stem("hipocampo"), "hipocamp" );
	deepEqual( Stem("hipocrisia"), "hipocris" );
	deepEqual( Stem("hipofagin"), "hipofagin" );
	deepEqual( Stem("hipoglós"), "hipoglós" );
	deepEqual( Stem("hipopótamos"), "hipopót" );
	deepEqual( Stem("hipotálamo"), "hipotálam" );
	deepEqual( Stem("hipótese"), "hipótes" );
	deepEqual( Stem("hipóteses"), "hipótes" );
	deepEqual( Stem("hipoteticamente"), "hipotet" );
	deepEqual( Stem("hippie"), "hippi" );
	deepEqual( Stem("hiroshima"), "hiroshim" );
	deepEqual( Stem("hispânicos"), "hispân" );
	deepEqual( Stem("histerectomia"), "histerectom" );
	deepEqual( Stem("histerectomias"), "histerectom" );
	deepEqual( Stem("histeria"), "hist" );
	deepEqual( Stem("histérica"), "histér" );
	deepEqual( Stem("histérico"), "histér" );
	deepEqual( Stem("histéricos"), "histér" );
	deepEqual( Stem("histerismo"), "hister" );
	deepEqual( Stem("histopatológico"), "histopatológ" );
	deepEqual( Stem("história"), "histór" );
	deepEqual( Stem("historiador"), "histori" );
	deepEqual( Stem("historiadora"), "histori" );
	deepEqual( Stem("historiadores"), "histori" );
	deepEqual( Stem("histórias"), "histór" );
	deepEqual( Stem("histórica"), "histór" );
	deepEqual( Stem("historicamente"), "histor" );
	deepEqual( Stem("históricas"), "histór" );
	deepEqual( Stem("histórico"), "histór" );
	deepEqual( Stem("históricos"), "histór" );
	deepEqual( Stem("hit"), "hit" );
	deepEqual( Stem("hititas"), "hitit" );
	deepEqual( Stem("hitler"), "hitl" );
	deepEqual( Stem("hits"), "hits" );
	deepEqual( Stem("hiv"), "hiv" );
	deepEqual( Stem("hlx"), "hlx" );
	deepEqual( Stem("hoare"), "hoar" );
	deepEqual( Stem("hobbies"), "hobbi" );
	deepEqual( Stem("hobby"), "hobby" );
	deepEqual( Stem("hobsbawn"), "hobsbawn" );
	deepEqual( Stem("hochgraf"), "hochgraf" );
	deepEqual( Stem("hochschild"), "hochschild" );
	deepEqual( Stem("hoffa"), "hoff" );
	deepEqual( Stem("hoffman"), "hoffman" );
	deepEqual( Stem("hohendorff"), "hohendorff" );
	deepEqual( Stem("hoje"), "hoj" );
	deepEqual( Stem("holanda"), "holand" );
	deepEqual( Stem("holandês"), "holandês" );
	deepEqual( Stem("holandesa"), "holandes" );
	deepEqual( Stem("holandeses"), "holandes" );
	deepEqual( Stem("holding"), "holding" );
	deepEqual( Stem("holerite"), "holerit" );
	deepEqual( Stem("holerites"), "holerit" );
	deepEqual( Stem("holística"), "holíst" );
	deepEqual( Stem("hollanda"), "holland" );
	deepEqual( Stem("hollywood"), "hollywood" );
	deepEqual( Stem("hollywoodiano"), "hollywoodian" );
	deepEqual( Stem("hollywoodianos"), "hollywoodian" );
	deepEqual( Stem("holofotes"), "holofot" );
	deepEqual( Stem("holtz"), "holtz" );
	deepEqual( Stem("holyfield"), "holyfield" );
	deepEqual( Stem("home"), "hom" );
	deepEqual( Stem("homem"), "hom" );
	deepEqual( Stem("homems"), "homems" );
	deepEqual( Stem("homenageá"), "homenag" );
	deepEqual( Stem("homenageado"), "homenag" );
	deepEqual( Stem("homenagear"), "homenag" );
	deepEqual( Stem("homenageia"), "homenag" );
	deepEqual( Stem("homenagem"), "homenag" );
	deepEqual( Stem("homenagens"), "homenagens" );
	deepEqual( Stem("homens"), "homens" );
	deepEqual( Stem("homeopata"), "homeopat" );
	deepEqual( Stem("homeopatas"), "homeopat" );
	deepEqual( Stem("homeopatia"), "homeopat" );
	deepEqual( Stem("homeopatias"), "homeopat" );
	deepEqual( Stem("homeopáticas"), "homeopát" );
	deepEqual( Stem("homeopático"), "homeopát" );
	deepEqual( Stem("homeopáticos"), "homeopát" );
	deepEqual( Stem("homéricos"), "homér" );
	deepEqual( Stem("homero"), "homer" );
	deepEqual( Stem("homicídio"), "homicídi" );
	deepEqual( Stem("homicídios"), "homicídi" );
	deepEqual( Stem("homoerotismo"), "homoerot" );
	deepEqual( Stem("homogênea"), "homogên" );
	deepEqual( Stem("homologação"), "homolog" );
	deepEqual( Stem("homologações"), "homolog" );
	deepEqual( Stem("homologado"), "homolog" );
	deepEqual( Stem("homologar"), "homolog" );
	deepEqual( Stem("homologaram"), "homolog" );
	deepEqual( Stem("homologou"), "homolog" );
	deepEqual( Stem("homologuei"), "homologu" );
	deepEqual( Stem("homônima"), "homônim" );
	deepEqual( Stem("homossexuais"), "homossexu" );
	deepEqual( Stem("homossexual"), "homossexual" );
	deepEqual( Stem("homossexualidade"), "homossexual" );
	deepEqual( Stem("homossexualismo"), "homossexual" );
	deepEqual( Stem("honda"), "hond" );
	deepEqual( Stem("honesta"), "honest" );
	deepEqual( Stem("honestamente"), "honest" );
	deepEqual( Stem("honestidade"), "honest" );
	deepEqual( Stem("honesto"), "honest" );
	deepEqual( Stem("hong"), "hong" );
	deepEqual( Stem("honolulu"), "honolulu" );
	deepEqual( Stem("honorários"), "honorári" );
	deepEqual( Stem("honorato"), "honorat" );
	deepEqual( Stem("honorilton"), "honorilton" );
	deepEqual( Stem("honra"), "honr" );
	deepEqual( Stem("honram"), "honr" );
	deepEqual( Stem("honrando"), "honr" );
	deepEqual( Stem("honrar"), "honr" );
	deepEqual( Stem("honraria"), "honr" );
	deepEqual( Stem("honrosa"), "honros" );
	deepEqual( Stem("honroso"), "honros" );
	deepEqual( Stem("honrosos"), "honros" );
	deepEqual( Stem("honrou"), "honr" );
	deepEqual( Stem("hood"), "hood" );
	deepEqual( Stem("hooki"), "hook" );
	deepEqual( Stem("hooligans"), "hooligans" );
	deepEqual( Stem("hopkins"), "hopkins" );
	deepEqual( Stem("hora"), "hor" );
	deepEqual( Stem("horária"), "horár" );
	deepEqual( Stem("horário"), "horári" );
	deepEqual( Stem("horários"), "horári" );
	deepEqual( Stem("horas"), "hor" );
	deepEqual( Stem("hordas"), "hord" );
	deepEqual( Stem("horgan"), "horgan" );
	deepEqual( Stem("horizontal"), "horizontal" );
	deepEqual( Stem("horizonte"), "horizont" );
	deepEqual( Stem("horizontes"), "horizont" );
	deepEqual( Stem("hormonais"), "hormon" );
	deepEqual( Stem("hormonal"), "hormonal" );
	deepEqual( Stem("hormônio"), "hormôni" );
	deepEqual( Stem("hormônios"), "hormôni" );
	deepEqual( Stem("hormonioterapia"), "hormonioterap" );
	deepEqual( Stem("horner"), "horn" );
	deepEqual( Stem("horripilante"), "horripil" );
	deepEqual( Stem("horríveis"), "horrív" );
	deepEqual( Stem("horrível"), "horrível" );
	deepEqual( Stem("horror"), "horror" );
	deepEqual( Stem("horrores"), "horror" );
	deepEqual( Stem("horrorosa"), "horror" );
	deepEqual( Stem("horroroso"), "horror" );
	deepEqual( Stem("horst"), "horst" );
	deepEqual( Stem("horta"), "hort" );
	deepEqual( Stem("hospeda"), "hosped" );
	deepEqual( Stem("hospedagem"), "hospedag" );
	deepEqual( Stem("hospedar"), "hosped" );
	deepEqual( Stem("hospedava"), "hosped" );
	deepEqual( Stem("hóspedes"), "hósped" );
	deepEqual( Stem("hospedou"), "hosped" );
	deepEqual( Stem("hospício"), "hospíci" );
	deepEqual( Stem("hospitais"), "hospit" );
	deepEqual( Stem("hospital"), "hospital" );
	deepEqual( Stem("hospitalar"), "hospital" );
	deepEqual( Stem("hospitalares"), "hospital" );
	deepEqual( Stem("hospitaleiro"), "hospitaleir" );
	deepEqual( Stem("hospitalidade"), "hospital" );
	deepEqual( Stem("hostes"), "host" );
	deepEqual( Stem("hostil"), "hostil" );
	deepEqual( Stem("hostilidade"), "hostil" );
	deepEqual( Stem("hostilidades"), "hostil" );
	deepEqual( Stem("hotéis"), "hot" );
	deepEqual( Stem("hotel"), "hotel" );
	deepEqual( Stem("hotelaria"), "hotel" );
	deepEqual( Stem("hoteleira"), "hoteleir" );
	deepEqual( Stem("hoteleiro"), "hoteleir" );
	deepEqual( Stem("hour"), "hour" );
	deepEqual( Stem("house"), "hous" );
	deepEqual( Stem("houston"), "houston" );
	deepEqual( Stem("houve"), "houv" );
	deepEqual( Stem("houver"), "houv" );
	deepEqual( Stem("houvesse"), "houv" );
	deepEqual( Stem("how"), "how" );
	deepEqual( Stem("howard"), "howard" );
	deepEqual( Stem("hoy"), "hoy" );
	deepEqual( Stem("hpb"), "hpb" );
	deepEqual( Stem("hpp"), "hpp" );
	deepEqual( Stem("hsbc"), "hsbc" );
	deepEqual( Stem("htm"), "htm" );
	deepEqual( Stem("html"), "html" );
	deepEqual( Stem("http"), "http" );
	deepEqual( Stem("huambo"), "huamb" );
	deepEqual( Stem("huapi"), "huap" );
	deepEqual( Stem("hub"), "hub" );
	deepEqual( Stem("hubert"), "hubert" );
	deepEqual( Stem("hucitec"), "hucitec" );
	deepEqual( Stem("hudson"), "hudson" );
	deepEqual( Stem("hue"), "hue" );
	deepEqual( Stem("hugel"), "hugel" );
	deepEqual( Stem("hugh"), "hugh" );
	deepEqual( Stem("hughes"), "hugh" );
	deepEqual( Stem("hugo"), "hug" );
	deepEqual( Stem("huis"), "huis" );
	deepEqual( Stem("human"), "human" );
	deepEqual( Stem("humana"), "human" );
	deepEqual( Stem("humanas"), "human" );
	deepEqual( Stem("humanidade"), "human" );
	deepEqual( Stem("humanista"), "human" );
	deepEqual( Stem("humanística"), "humaníst" );
	deepEqual( Stem("humanitários"), "humanitári" );
	deepEqual( Stem("humano"), "human" );
	deepEqual( Stem("humanos"), "human" );
	deepEqual( Stem("humberto"), "humbert" );
	deepEqual( Stem("humildade"), "humildad" );
	deepEqual( Stem("humilde"), "humild" );
	deepEqual( Stem("humildemente"), "humild" );
	deepEqual( Stem("humildes"), "humild" );
	deepEqual( Stem("humilhação"), "humilh" );
	deepEqual( Stem("humilhado"), "humilh" );
	deepEqual( Stem("humilhante"), "humilh" );
	deepEqual( Stem("humm"), "humm" );
	deepEqual( Stem("hummm"), "hummm" );
	deepEqual( Stem("humor"), "humor" );
	deepEqual( Stem("humorada"), "humor" );
	deepEqual( Stem("humoradíssima"), "humoradíssim" );
	deepEqual( Stem("humorado"), "humor" );
	deepEqual( Stem("humorados"), "humor" );
	deepEqual( Stem("humorismo"), "humor" );
	deepEqual( Stem("humorista"), "humor" );
	deepEqual( Stem("humoristas"), "humor" );
	deepEqual( Stem("hun"), "hun" );
	deepEqual( Stem("húngaro"), "húngar" );
	deepEqual( Stem("huno"), "hun" );
	deepEqual( Stem("huntington"), "huntington" );
	deepEqual( Stem("hunts"), "hunts" );
	deepEqual( Stem("hurd"), "hurd" );
	deepEqual( Stem("hurley"), "hurley" );
	deepEqual( Stem("hurried"), "hurried" );
	deepEqual( Stem("hussein"), "hussein" );
	deepEqual( Stem("huster"), "hust" );
	deepEqual( Stem("hut"), "hut" );
	deepEqual( Stem("hutton"), "hutton" );
	deepEqual( Stem("hwa"), "hwa" );
	deepEqual( Stem("hyde"), "hyde" );
	deepEqual( Stem("hypericum"), "hypericum" );
	deepEqual( Stem("hystera"), "hyster" );
	deepEqual( Stem("i"), "i" );
	deepEqual( Stem("ia"), "ia" );
	deepEqual( Stem("iacocca"), "iacocc" );
	deepEqual( Stem("iacomini"), "iacomin" );
	deepEqual( Stem("iain"), "iain" );
	deepEqual( Stem("ialorixá"), "ialorix" );
	deepEqual( Stem("iam"), "iam" );
	deepEqual( Stem("íamos"), "íam" );
	deepEqual( Stem("ian"), "ian" );
	deepEqual( Stem("ianques"), "ianqu" );
	deepEqual( Stem("iansã"), "iansã" );
	deepEqual( Stem("iaque"), "iaqu" );
	deepEqual( Stem("iara"), "iar" );
	deepEqual( Stem("iate"), "iat" );
	deepEqual( Stem("ibama"), "ibam" );
	deepEqual( Stem("ibase"), "ibas" );
	deepEqual( Stem("ibep"), "ibep" );
	deepEqual( Stem("iberê"), "iber" );
	deepEqual( Stem("ibge"), "ibge" );
	deepEqual( Stem("ibirapuera"), "ibirapu" );
	deepEqual( Stem("ibiúna"), "ibiún" );
	deepEqual( Stem("ibiza"), "ibiz" );
	deepEqual( Stem("iblon"), "iblon" );
	deepEqual( Stem("ibm"), "ibm" );
	deepEqual( Stem("ibope"), "ibop" );
	deepEqual( Stem("ibrahim"), "ibrahim" );
	deepEqual( Stem("ica"), "ica" );
	deepEqual( Stem("içando"), "içand" );
	deepEqual( Stem("icaraí"), "icara" );
	deepEqual( Stem("ícaro"), "ícar" );
	deepEqual( Stem("iceberg"), "iceberg" );
	deepEqual( Stem("icms"), "icms" );
	deepEqual( Stem("ícone"), "ícon" );
	deepEqual( Stem("ícones"), "ícon" );
	deepEqual( Stem("iconoclasta"), "iconoclast" );
	deepEqual( Stem("ics"), "ics" );
	deepEqual( Stem("ida"), "ida" );
	deepEqual( Stem("idade"), "idad" );
	deepEqual( Stem("idades"), "idad" );
	deepEqual( Stem("idas"), "idas" );
	deepEqual( Stem("ideais"), "ide" );
	deepEqual( Stem("ideal"), "ideal" );
	deepEqual( Stem("idealistas"), "ideal" );
	deepEqual( Stem("idealização"), "idealiz" );
	deepEqual( Stem("idealizado"), "idealiz" );
	deepEqual( Stem("idealizador"), "idealiz" );
	deepEqual( Stem("idealizadores"), "idealiz" );
	deepEqual( Stem("idealizados"), "idealiz" );
	deepEqual( Stem("idealizou"), "idealiz" );
	deepEqual( Stem("idéia"), "idé" );
	deepEqual( Stem("idéias"), "idé" );
	deepEqual( Stem("idelcio"), "idelci" );
	deepEqual( Stem("ideli"), "idel" );
	deepEqual( Stem("idem"), "idem" );
	deepEqual( Stem("idêntica"), "idênt" );
	deepEqual( Stem("idênticas"), "idênt" );
	deepEqual( Stem("idêntico"), "idênt" );
	deepEqual( Stem("idênticos"), "idênt" );
	deepEqual( Stem("identidade"), "ident" );
	deepEqual( Stem("identidades"), "ident" );
	deepEqual( Stem("identifica"), "identif" );
	deepEqual( Stem("identificá"), "identific" );
	deepEqual( Stem("identificação"), "identific" );
	deepEqual( Stem("identificada"), "identific" );
	deepEqual( Stem("identificadas"), "identific" );
	deepEqual( Stem("identificado"), "identific" );
	deepEqual( Stem("identificados"), "identific" );
	deepEqual( Stem("identificam"), "identific" );
	deepEqual( Stem("identificando"), "identific" );
	deepEqual( Stem("identificar"), "identific" );
	deepEqual( Stem("identificaram"), "identific" );
	deepEqual( Stem("identificasse"), "identific" );
	deepEqual( Stem("identificassem"), "identific" );
	deepEqual( Stem("identificou"), "identific" );
	deepEqual( Stem("identifique"), "identifiqu" );
	deepEqual( Stem("identifiquei"), "identifiqu" );
	deepEqual( Stem("ideologia"), "ideolog" );
	deepEqual( Stem("ideologias"), "ideolog" );
	deepEqual( Stem("ideológica"), "ideológ" );
	deepEqual( Stem("ideologicamente"), "ideolog" );
	deepEqual( Stem("ideológicas"), "ideológ" );
	deepEqual( Stem("ideológico"), "ideológ" );
	deepEqual( Stem("ideológicos"), "ideológ" );
	deepEqual( Stem("idesp"), "idesp" );
	deepEqual( Stem("idh"), "idh" );
	deepEqual( Stem("idioma"), "idiom" );
	deepEqual( Stem("idiomas"), "idiom" );
	deepEqual( Stem("idiota"), "idiot" );
	deepEqual( Stem("idiotice"), "idiotic" );
	deepEqual( Stem("ido"), "ido" );
	deepEqual( Stem("idolatrados"), "idolatr" );
	deepEqual( Stem("idolatria"), "idolatr" );
	deepEqual( Stem("ídolo"), "ídol" );
	deepEqual( Stem("ídolos"), "ídol" );
	deepEqual( Stem("idôneo"), "idôn" );
	deepEqual( Stem("idoso"), "idos" );
	deepEqual( Stem("idosos"), "idos" );
	deepEqual( Stem("iemanjá"), "iemanj" );
	deepEqual( Stem("iêmen"), "iêmen" );
	deepEqual( Stem("ifá"), "ifá" );
	deepEqual( Stem("igarapé"), "igarap" );
	deepEqual( Stem("ignacio"), "ignaci" );
	deepEqual( Stem("ignácio"), "ignáci" );
	deepEqual( Stem("ignorada"), "ignor" );
	deepEqual( Stem("ignoradas"), "ignor" );
	deepEqual( Stem("ignorado"), "ignor" );
	deepEqual( Stem("ignorados"), "ignor" );
	deepEqual( Stem("ignoram"), "ignor" );
	deepEqual( Stem("ignorância"), "ignor" );
	deepEqual( Stem("ignorando"), "ignor" );
	deepEqual( Stem("ignorante"), "ignor" );
	deepEqual( Stem("ignorar"), "ignor" );
	deepEqual( Stem("igor"), "igor" );
	deepEqual( Stem("igreja"), "igrej" );
	deepEqual( Stem("igrejas"), "igrej" );
	deepEqual( Stem("iguaçu"), "iguaçu" );
	deepEqual( Stem("iguais"), "igu" );
	deepEqual( Stem("igual"), "igual" );
	deepEqual( Stem("igualitarismo"), "igualitar" );
	deepEqual( Stem("igualmente"), "igual" );
	deepEqual( Stem("iguaria"), "igu" );
	deepEqual( Stem("iguatemi"), "iguatem" );
	deepEqual( Stem("ih"), "ih" );
	deepEqual( Stem("ii"), "ii" );
	deepEqual( Stem("iii"), "iii" );
	deepEqual( Stem("ike"), "ike" );
	deepEqual( Stem("il"), "il" );
	deepEqual( Stem("ilações"), "ilaçõ" );
	deepEqual( Stem("ilari"), "ilar" );
	deepEqual( Stem("ilariê"), "ilari" );
	deepEqual( Stem("ildeo"), "ilde" );
	deepEqual( Stem("ile"), "ile" );
	deepEqual( Stem("ilê"), "ilê" );
	deepEqual( Stem("ilegais"), "ileg" );
	deepEqual( Stem("ilegal"), "ilegal" );
	deepEqual( Stem("ilegalidade"), "ilegal" );
	deepEqual( Stem("ilegalidades"), "ilegal" );
	deepEqual( Stem("ilegalmente"), "ilegal" );
	deepEqual( Stem("ilesa"), "iles" );
	deepEqual( Stem("ileso"), "iles" );
	deepEqual( Stem("ilesos"), "iles" );
	deepEqual( Stem("iletrada"), "iletr" );
	deepEqual( Stem("iletrados"), "iletr" );
	deepEqual( Stem("ilha"), "ilha" );
	deepEqual( Stem("ilhas"), "ilhas" );
	deepEqual( Stem("ilhéus"), "ilhéus" );
	deepEqual( Stem("ilhota"), "ilhot" );
	deepEqual( Stem("ilícita"), "ilícit" );
	deepEqual( Stem("ilícitas"), "ilícit" );
	deepEqual( Stem("ilimitados"), "ilimit" );
	deepEqual( Stem("illimani"), "illiman" );
	deepEqual( Stem("illyccaffé"), "illyccaff" );
	deepEqual( Stem("ilm"), "ilm" );
	deepEqual( Stem("ilma"), "ilma" );
	deepEqual( Stem("ilson"), "ilson" );
	deepEqual( Stem("iludem"), "ilud" );
	deepEqual( Stem("ilumina"), "ilumin" );
	deepEqual( Stem("iluminação"), "ilumin" );
	deepEqual( Stem("iluminada"), "ilumin" );
	deepEqual( Stem("iluminadas"), "ilumin" );
	deepEqual( Stem("iluminado"), "ilumin" );
	deepEqual( Stem("iluminador"), "ilumin" );
	deepEqual( Stem("iluminando"), "ilumin" );
	deepEqual( Stem("iluminar"), "ilumin" );
	deepEqual( Stem("iluminaram"), "ilumin" );
	deepEqual( Stem("ilusão"), "ilusã" );
	deepEqual( Stem("ilusionista"), "ilusion" );
	deepEqual( Stem("ilusões"), "ilusõ" );
	deepEqual( Stem("ilustra"), "ilustr" );
	deepEqual( Stem("ilustrá"), "ilustr" );
	deepEqual( Stem("ilustração"), "ilustr" );
	deepEqual( Stem("ilustrações"), "ilustr" );
	deepEqual( Stem("ilustrada"), "ilustr" );
	deepEqual( Stem("ilustrava"), "ilustr" );
	deepEqual( Stem("ilustre"), "ilustr" );
	deepEqual( Stem("ilustres"), "ilustr" );
	deepEqual( Stem("ilustrou"), "ilustr" );
	deepEqual( Stem("imaculados"), "imacul" );
	deepEqual( Stem("imaflora"), "imaflor" );
	deepEqual( Stem("image"), "imag" );
	deepEqual( Stem("imagem"), "imag" );
	deepEqual( Stem("imagens"), "imagens" );
	deepEqual( Stem("imagina"), "imagin" );
	deepEqual( Stem("imaginação"), "imagin" );
	deepEqual( Stem("imaginadas"), "imagin" );
	deepEqual( Stem("imaginam"), "imagin" );
	deepEqual( Stem("imaginando"), "imagin" );
	deepEqual( Stem("imaginar"), "imagin" );
	deepEqual( Stem("imaginaram"), "imagin" );
	deepEqual( Stem("imaginária"), "imaginár" );
	deepEqual( Stem("imaginariam"), "imagin" );
	deepEqual( Stem("imaginário"), "imaginári" );
	deepEqual( Stem("imaginava"), "imagin" );
	deepEqual( Stem("imaginavam"), "imagin" );
	deepEqual( Stem("imagine"), "imagin" );
	deepEqual( Stem("imaginei"), "imagin" );
	deepEqual( Stem("imagino"), "imagin" );
	deepEqual( Stem("imaginou"), "imagin" );
	deepEqual( Stem("ímãs"), "ímãs" );
	deepEqual( Stem("imateriais"), "imateri" );
	deepEqual( Stem("imatura"), "imatur" );
	deepEqual( Stem("imaturo"), "imatur" );
	deepEqual( Stem("imbatível"), "imbat" );
	deepEqual( Stem("imbecil"), "imbecil" );
	deepEqual( Stem("imbróglio"), "imbrógli" );
	deepEqual( Stem("imbróglios"), "imbrógli" );
	deepEqual( Stem("imbuído"), "imbuíd" );
	deepEqual( Stem("imc"), "imc" );
	deepEqual( Stem("imediações"), "imedi" );
	deepEqual( Stem("imediata"), "imediat" );
	deepEqual( Stem("imediatamente"), "imediat" );
	deepEqual( Stem("imediatas"), "imediat" );
	deepEqual( Stem("imediato"), "imediat" );
	deepEqual( Stem("imemoriais"), "imemori" );
	deepEqual( Stem("imensa"), "imens" );
	deepEqual( Stem("imensamente"), "imens" );
	deepEqual( Stem("imensas"), "imens" );
	deepEqual( Stem("imensidão"), "imensidã" );
	deepEqual( Stem("imenso"), "imens" );
	deepEqual( Stem("imensos"), "imens" );
	deepEqual( Stem("imensurável"), "imensur" );
	deepEqual( Stem("imersa"), "imers" );
	deepEqual( Stem("imersão"), "imersã" );
	deepEqual( Stem("imerso"), "imers" );
	deepEqual( Stem("imigração"), "imigr" );
	deepEqual( Stem("imigrante"), "imigr" );
	deepEqual( Stem("imigrantes"), "imigr" );
	deepEqual( Stem("iminente"), "iminent" );
	deepEqual( Stem("imirim"), "imirim" );
	deepEqual( Stem("imita"), "imit" );
	deepEqual( Stem("imitação"), "imit" );
	deepEqual( Stem("imitações"), "imit" );
	deepEqual( Stem("imitado"), "imit" );
	deepEqual( Stem("imitadora"), "imit" );
	deepEqual( Stem("imitadores"), "imit" );
	deepEqual( Stem("imitam"), "imit" );
	deepEqual( Stem("imitando"), "imit" );
	deepEqual( Stem("imitar"), "imit" );
	deepEqual( Stem("imitava"), "imit" );
	deepEqual( Stem("imitável"), "imit" );
	deepEqual( Stem("iml"), "iml" );
	deepEqual( Stem("imobiliária"), "imobiliár" );
	deepEqual( Stem("imobiliárias"), "imobiliár" );
	deepEqual( Stem("imobiliário"), "imobiliári" );
	deepEqual( Stem("imortal"), "imortal" );
	deepEqual( Stem("imortalidade"), "imortal" );
	deepEqual( Stem("imóveis"), "imóv" );
	deepEqual( Stem("imóvel"), "imóvel" );
	deepEqual( Stem("impaciência"), "impacient" );
	deepEqual( Stem("impacientes"), "impacient" );
	deepEqual( Stem("impacta"), "impact" );
	deepEqual( Stem("impactante"), "impact" );
	deepEqual( Stem("impacto"), "impact" );
	deepEqual( Stem("impactos"), "impact" );
	deepEqual( Stem("impagável"), "impag" );
	deepEqual( Stem("imparcialidade"), "imparcial" );
	deepEqual( Stem("impasse"), "impass" );
	deepEqual( Stem("impassível"), "impass" );
	deepEqual( Stem("impeachment"), "impeachment" );
	deepEqual( Stem("impeçam"), "impec" );
	deepEqual( Stem("impecáveis"), "impec" );
	deepEqual( Stem("impecável"), "impec" );
	deepEqual( Stem("impecavelmente"), "impec" );
	deepEqual( Stem("impedância"), "imped" );
	deepEqual( Stem("impede"), "imped" );
	deepEqual( Stem("impedem"), "imped" );
	deepEqual( Stem("impedia"), "imped" );
	deepEqual( Stem("impediam"), "imped" );
	deepEqual( Stem("impedido"), "imped" );
	deepEqual( Stem("impedidos"), "imped" );
	deepEqual( Stem("impedimento"), "imped" );
	deepEqual( Stem("impedindo"), "imped" );
	deepEqual( Stem("impedir"), "imped" );
	deepEqual( Stem("impediram"), "imped" );
	deepEqual( Stem("impedirmos"), "imped" );
	deepEqual( Stem("impedisse"), "imped" );
	deepEqual( Stem("impediu"), "imped" );
	deepEqual( Stem("impelidas"), "impel" );
	deepEqual( Stem("impensados"), "impens" );
	deepEqual( Stem("impensável"), "impens" );
	deepEqual( Stem("impera"), "imper" );
	deepEqual( Stem("imperador"), "imper" );
	deepEqual( Stem("imperam"), "imper" );
	deepEqual( Stem("imperativo"), "imper" );
	deepEqual( Stem("imperativos"), "imper" );
	deepEqual( Stem("imperatriz"), "imperatriz" );
	deepEqual( Stem("imperceptíveis"), "imperceptív" );
	deepEqual( Stem("imperdoável"), "imperdo" );
	deepEqual( Stem("imperfeição"), "imperfeiçã" );
	deepEqual( Stem("imperfeições"), "imperfeiçõ" );
	deepEqual( Stem("imperial"), "imperial" );
	deepEqual( Stem("imperialista"), "imperial" );
	deepEqual( Stem("império"), "impéri" );
	deepEqual( Stem("impérios"), "impéri" );
	deepEqual( Stem("impermeáveis"), "imperm" );
	deepEqual( Stem("imperou"), "imper" );
	deepEqual( Stem("impessoais"), "impesso" );
	deepEqual( Stem("ímpeto"), "ímpet" );
	deepEqual( Stem("ímpetos"), "ímpet" );
	deepEqual( Stem("impetrada"), "impetr" );
	deepEqual( Stem("impiedosa"), "impied" );
	deepEqual( Stem("impingir"), "imping" );
	deepEqual( Stem("implacáveis"), "implac" );
	deepEqual( Stem("implacável"), "implac" );
	deepEqual( Stem("implacavelmente"), "implac" );
	deepEqual( Stem("implantá"), "implant" );
	deepEqual( Stem("implantação"), "implant" );
	deepEqual( Stem("implantada"), "implant" );
	deepEqual( Stem("implantadas"), "implant" );
	deepEqual( Stem("implantado"), "implant" );
	deepEqual( Stem("implantados"), "implant" );
	deepEqual( Stem("implantar"), "implant" );
	deepEqual( Stem("implantaram"), "implant" );
	deepEqual( Stem("implantes"), "implant" );
	deepEqual( Stem("implantou"), "implant" );
	deepEqual( Stem("implementem"), "implement" );
	deepEqual( Stem("implica"), "implic" );
	deepEqual( Stem("implicações"), "implic" );
	deepEqual( Stem("implicam"), "implic" );
	deepEqual( Stem("implicará"), "implic" );
	deepEqual( Stem("implicaria"), "implic" );
	deepEqual( Stem("implícita"), "implícit" );
	deepEqual( Stem("implícito"), "implícit" );
	deepEqual( Stem("implicou"), "implic" );
	deepEqual( Stem("implique"), "impliqu" );
	deepEqual( Stem("implodiria"), "implod" );
	deepEqual( Stem("implodiu"), "implod" );
	deepEqual( Stem("implorando"), "implor" );
	deepEqual( Stem("implorou"), "implor" );
	deepEqual( Stem("impõe"), "impõ" );
	deepEqual( Stem("impondo"), "impond" );
	deepEqual( Stem("imponência"), "imponent" );
	deepEqual( Stem("imponente"), "imponent" );
	deepEqual( Stem("imponha"), "imponh" );
	deepEqual( Stem("impopulares"), "impopul" );
	deepEqual( Stem("impopularidade"), "impopular" );
	deepEqual( Stem("impor"), "impor" );
	deepEqual( Stem("importa"), "import" );
	deepEqual( Stem("importá"), "import" );
	deepEqual( Stem("importação"), "import" );
	deepEqual( Stem("importações"), "import" );
	deepEqual( Stem("importada"), "import" );
	deepEqual( Stem("importadas"), "import" );
	deepEqual( Stem("importado"), "import" );
	deepEqual( Stem("importador"), "import" );
	deepEqual( Stem("importadora"), "import" );
	deepEqual( Stem("importadoras"), "import" );
	deepEqual( Stem("importadores"), "import" );
	deepEqual( Stem("importados"), "import" );
	deepEqual( Stem("importam"), "import" );
	deepEqual( Stem("importância"), "import" );
	deepEqual( Stem("importando"), "import" );
	deepEqual( Stem("importante"), "import" );
	deepEqual( Stem("importantes"), "import" );
	deepEqual( Stem("importantíssimo"), "importantíssim" );
	deepEqual( Stem("importar"), "import" );
	deepEqual( Stem("importaram"), "import" );
	deepEqual( Stem("importassem"), "import" );
	deepEqual( Stem("importo"), "import" );
	deepEqual( Stem("importou"), "import" );
	deepEqual( Stem("impôs"), "impôs" );
	deepEqual( Stem("imposição"), "imposiçã" );
	deepEqual( Stem("imposições"), "imposiçõ" );
	deepEqual( Stem("impossibilidade"), "impossibil" );
	deepEqual( Stem("impossibilitado"), "impossibilit" );
	deepEqual( Stem("impossibilitados"), "impossibilit" );
	deepEqual( Stem("impossíveis"), "impossív" );
	deepEqual( Stem("impossível"), "imposs" );
	deepEqual( Stem("imposta"), "impost" );
	deepEqual( Stem("impostas"), "impost" );
	deepEqual( Stem("imposto"), "impost" );
	deepEqual( Stem("impostos"), "impost" );
	deepEqual( Stem("impotência"), "impotent" );
	deepEqual( Stem("impotente"), "impotent" );
	deepEqual( Stem("impotentes"), "impotent" );
	deepEqual( Stem("impregnado"), "impregn" );
	deepEqual( Stem("imprensa"), "imprens" );
	deepEqual( Stem("imprensanet"), "imprensanet" );
	deepEqual( Stem("imprescindível"), "imprescind" );
	deepEqual( Stem("impressa"), "impress" );
	deepEqual( Stem("impressão"), "impressã" );
	deepEqual( Stem("impressiona"), "impression" );
	deepEqual( Stem("impressioná"), "impression" );
	deepEqual( Stem("impressionadíssimo"), "impressionadíssim" );
	deepEqual( Stem("impressionados"), "impression" );
	deepEqual( Stem("impressionante"), "impression" );
	deepEqual( Stem("impressionantes"), "impression" );
	deepEqual( Stem("impressionar"), "impression" );
	deepEqual( Stem("impressionistas"), "impression" );
	deepEqual( Stem("impressionou"), "impression" );
	deepEqual( Stem("impressões"), "impressõ" );
	deepEqual( Stem("impressos"), "impress" );
	deepEqual( Stem("imprevidência"), "imprevident" );
	deepEqual( Stem("imprevisível"), "imprevis" );
	deepEqual( Stem("imprevistos"), "imprevist" );
	deepEqual( Stem("imprime"), "imprim" );
	deepEqual( Stem("imprimiam"), "imprim" );
	deepEqual( Stem("imprimindo"), "imprim" );
	deepEqual( Stem("imprimir"), "imprim" );
	deepEqual( Stem("imprimiu"), "imprim" );
	deepEqual( Stem("improcedente"), "improcedent" );
	deepEqual( Stem("improdutivo"), "improdut" );
	deepEqual( Stem("impropérios"), "impropéri" );
	deepEqual( Stem("impropriedades"), "impropriedad" );
	deepEqual( Stem("impróprio"), "imprópri" );
	deepEqual( Stem("improváveis"), "improv" );
	deepEqual( Stem("improvável"), "improv" );
	deepEqual( Stem("improviso"), "improvis" );
	deepEqual( Stem("imprudência"), "imprudent" );
	deepEqual( Stem("impulsionada"), "impulsion" );
	deepEqual( Stem("impulsionado"), "impulsion" );
	deepEqual( Stem("impulsionam"), "impulsion" );
	deepEqual( Stem("impulsiva"), "impuls" );
	deepEqual( Stem("impulsivamente"), "impuls" );
	deepEqual( Stem("impulso"), "impuls" );
	deepEqual( Stem("impulsos"), "impuls" );
	deepEqual( Stem("impune"), "impun" );
	deepEqual( Stem("impunidade"), "impun" );
	deepEqual( Stem("impurezas"), "impur" );
	deepEqual( Stem("impusesse"), "impus" );
	deepEqual( Stem("imputada"), "imput" );
	deepEqual( Stem("imsdd"), "imsdd" );
	deepEqual( Stem("imundos"), "imund" );
	deepEqual( Stem("imune"), "imun" );
	deepEqual( Stem("imunologia"), "imunolog" );
	deepEqual( Stem("imunológicas"), "imunológ" );
	deepEqual( Stem("in"), "in" );
	deepEqual( Stem("inabaláveis"), "inabal" );
	deepEqual( Stem("inabalável"), "inabal" );
	deepEqual( Stem("inabilidade"), "inabil" );
	deepEqual( Stem("inacabado"), "inacab" );
	deepEqual( Stem("inacabados"), "inacab" );
	deepEqual( Stem("inaceitável"), "inaceit" );
	deepEqual( Stem("inácio"), "ináci" );
	deepEqual( Stem("inacreditáveis"), "inacredit" );
	deepEqual( Stem("inacreditável"), "inacredit" );
	deepEqual( Stem("inadequação"), "inadequ" );
	deepEqual( Stem("inadequada"), "inadequ" );
	deepEqual( Stem("inadequado"), "inadequ" );
	deepEqual( Stem("inadiável"), "inadi" );
	deepEqual( Stem("inadimplência"), "inadimplent" );
	deepEqual( Stem("inadmissível"), "inadmiss" );
	deepEqual( Stem("inalados"), "inal" );
	deepEqual( Stem("inalcançáveis"), "inalcanc" );
	deepEqual( Stem("inalcançável"), "inalcanc" );
	deepEqual( Stem("inamistosos"), "inamist" );
	deepEqual( Stem("inamovíveis"), "inamovív" );
	deepEqual( Stem("inamps"), "inamps" );
	deepEqual( Stem("inativação"), "inativ" );
	deepEqual( Stem("inaudíveis"), "inaudív" );
	deepEqual( Stem("inauguração"), "inaugur" );
	deepEqual( Stem("inaugurada"), "inaugur" );
	deepEqual( Stem("inaugurado"), "inaugur" );
	deepEqual( Stem("inauguram"), "inaugur" );
	deepEqual( Stem("inauguranda"), "inaugurand" );
	deepEqual( Stem("inaugurar"), "inaugur" );
	deepEqual( Stem("inaugurou"), "inaugur" );
	deepEqual( Stem("inc"), "inc" );
	deepEqual( Stem("inca"), "inca" );
	deepEqual( Stem("incansável"), "incans" );
	deepEqual( Stem("incapacidade"), "incapac" );
	deepEqual( Stem("incapacitados"), "incapacit" );
	deepEqual( Stem("incapacitar"), "incapacit" );
	deepEqual( Stem("incapaz"), "incapaz" );
	deepEqual( Stem("incapazes"), "incapaz" );
	deepEqual( Stem("incendiada"), "incendi" );
	deepEqual( Stem("incendiados"), "incendi" );
	deepEqual( Stem("incendiário"), "incendiári" );
	deepEqual( Stem("incendiavam"), "incendi" );
	deepEqual( Stem("incêndio"), "incêndi" );
	deepEqual( Stem("incêndios"), "incêndi" );
	deepEqual( Stem("incendiou"), "incendi" );
	deepEqual( Stem("incensada"), "incens" );
	deepEqual( Stem("incenso"), "incens" );
	deepEqual( Stem("incentiva"), "incent" );
	deepEqual( Stem("incentivá"), "incentiv" );
	deepEqual( Stem("incentivado"), "incentiv" );
	deepEqual( Stem("incentivadora"), "incentiv" );
	deepEqual( Stem("incentivam"), "incentiv" );
	deepEqual( Stem("incentivamos"), "incentiv" );
	deepEqual( Stem("incentivando"), "incentiv" );
	deepEqual( Stem("incentivar"), "incentiv" );
	deepEqual( Stem("incentivem"), "incentiv" );
	deepEqual( Stem("incentivo"), "incent" );
	deepEqual( Stem("incentivos"), "incent" );
	deepEqual( Stem("incentivou"), "incentiv" );
	deepEqual( Stem("incerteza"), "incert" );
	deepEqual( Stem("incertezas"), "incert" );
	deepEqual( Stem("incerto"), "incert" );
	deepEqual( Stem("incessantes"), "incess" );
	deepEqual( Stem("incesto"), "incest" );
	deepEqual( Stem("incestuosos"), "incestu" );
	deepEqual( Stem("inchaço"), "inchac" );
	deepEqual( Stem("inchaços"), "inchac" );
	deepEqual( Stem("inchadade"), "inchadad" );
	deepEqual( Stem("inchado"), "inchad" );
	deepEqual( Stem("inchados"), "inchad" );
	deepEqual( Stem("inchou"), "inchou" );
	deepEqual( Stem("incide"), "incid" );
	deepEqual( Stem("incidência"), "incident" );
	deepEqual( Stem("incidente"), "incident" );
	deepEqual( Stem("incidentes"), "incident" );
	deepEqual( Stem("incipiente"), "incipient" );
	deepEqual( Stem("incipientes"), "incipient" );
	deepEqual( Stem("incisivo"), "incis" );
	deepEqual( Stem("incisões"), "incisõ" );
	deepEqual( Stem("inclemente"), "inclement" );
	deepEqual( Stem("inclinação"), "inclin" );
	deepEqual( Stem("inclinada"), "inclin" );
	deepEqual( Stem("inclinados"), "inclin" );
	deepEqual( Stem("inclinam"), "inclin" );
	deepEqual( Stem("inclinar"), "inclin" );
	deepEqual( Stem("inclinou"), "inclin" );
	deepEqual( Stem("inclua"), "inclu" );
	deepEqual( Stem("incluam"), "inclu" );
	deepEqual( Stem("incluem"), "inclu" );
	deepEqual( Stem("inclui"), "inclu" );
	deepEqual( Stem("incluí"), "inclu" );
	deepEqual( Stem("incluía"), "incluí" );
	deepEqual( Stem("incluída"), "incluíd" );
	deepEqual( Stem("incluídas"), "incluíd" );
	deepEqual( Stem("incluído"), "incluíd" );
	deepEqual( Stem("incluídos"), "incluíd" );
	deepEqual( Stem("incluindo"), "inclu" );
	deepEqual( Stem("incluir"), "inclu" );
	deepEqual( Stem("incluíram"), "incluír" );
	deepEqual( Stem("incluirmos"), "inclu" );
	deepEqual( Stem("incluiu"), "inclu" );
	deepEqual( Stem("inclusão"), "inclusã" );
	deepEqual( Stem("inclusive"), "inclusiv" );
	deepEqual( Stem("incluso"), "inclus" );
	deepEqual( Stem("incógnita"), "incógnit" );
	deepEqual( Stem("incógnito"), "incógnit" );
	deepEqual( Stem("incolor"), "incolor" );
	deepEqual( Stem("incomoda"), "incomod" );
	deepEqual( Stem("incômoda"), "incômod" );
	deepEqual( Stem("incomodados"), "incomod" );
	deepEqual( Stem("incomodam"), "incomod" );
	deepEqual( Stem("incomodar"), "incomod" );
	deepEqual( Stem("incomodaram"), "incomod" );
	deepEqual( Stem("incomodarem"), "incomod" );
	deepEqual( Stem("incomodasse"), "incomod" );
	deepEqual( Stem("incomodo"), "incomod" );
	deepEqual( Stem("incômodo"), "incômod" );
	deepEqual( Stem("incomodou"), "incomod" );
	deepEqual( Stem("incomparavelmente"), "incompar" );
	deepEqual( Stem("incompatíveis"), "incompatív" );
	deepEqual( Stem("incompatível"), "incompat" );
	deepEqual( Stem("incompetência"), "incompetent" );
	deepEqual( Stem("incompetente"), "incompetent" );
	deepEqual( Stem("incompetentes"), "incompetent" );
	deepEqual( Stem("incompleta"), "incomplet" );
	deepEqual( Stem("incompreendida"), "incompreend" );
	deepEqual( Stem("incompreensão"), "incompreensã" );
	deepEqual( Stem("incomum"), "incomum" );
	deepEqual( Stem("incomunicabilidade"), "incomunic" );
	deepEqual( Stem("incomunicável"), "incomunic" );
	deepEqual( Stem("incomuns"), "incomuns" );
	deepEqual( Stem("inconclusa"), "inconclus" );
	deepEqual( Stem("inconclusivas"), "inconclus" );
	deepEqual( Stem("incondicionalmente"), "incondicional" );
	deepEqual( Stem("inconformada"), "inconform" );
	deepEqual( Stem("inconformado"), "inconform" );
	deepEqual( Stem("inconformados"), "inconform" );
	deepEqual( Stem("incongruente"), "incongruent" );
	deepEqual( Stem("inconsciência"), "inconscient" );
	deepEqual( Stem("inconsciente"), "inconscient" );
	deepEqual( Stem("inconscientemente"), "inconscient" );
	deepEqual( Stem("inconsequência"), "inconsequent" );
	deepEqual( Stem("inconstitucional"), "inconstitucional" );
	deepEqual( Stem("incontáveis"), "incont" );
	deepEqual( Stem("incontestáveis"), "incontest" );
	deepEqual( Stem("incontida"), "incont" );
	deepEqual( Stem("incontinência"), "incontinent" );
	deepEqual( Stem("incontroláveis"), "incontrol" );
	deepEqual( Stem("incontrolável"), "incontrol" );
	deepEqual( Stem("incontroversas"), "incontrovers" );
	deepEqual( Stem("inconvenientes"), "inconvenient" );
	deepEqual( Stem("incor"), "incor" );
	deepEqual( Stem("incorpora"), "incorpor" );
	deepEqual( Stem("incorporá"), "incorpor" );
	deepEqual( Stem("incorporação"), "incorpor" );
	deepEqual( Stem("incorporada"), "incorpor" );
	deepEqual( Stem("incorporado"), "incorpor" );
	deepEqual( Stem("incorporadores"), "incorpor" );
	deepEqual( Stem("incorporados"), "incorpor" );
	deepEqual( Stem("incorporam"), "incorpor" );
	deepEqual( Stem("incorporando"), "incorpor" );
	deepEqual( Stem("incorporar"), "incorpor" );
	deepEqual( Stem("incorporaram"), "incorpor" );
	deepEqual( Stem("incorporo"), "incorpor" );
	deepEqual( Stem("incorporou"), "incorpor" );
	deepEqual( Stem("incorreta"), "incorret" );
	deepEqual( Stem("incorreto"), "incorret" );
	deepEqual( Stem("incra"), "incra" );
	deepEqual( Stem("incredulidade"), "incredul" );
	deepEqual( Stem("incrédulo"), "incrédul" );
	deepEqual( Stem("incrementados"), "increment" );
	deepEqual( Stem("incrementar"), "increment" );
	deepEqual( Stem("incrementaram"), "increment" );
	deepEqual( Stem("incriminadora"), "incrimin" );
	deepEqual( Stem("incríveis"), "incrív" );
	deepEqual( Stem("incrível"), "incrível" );
	deepEqual( Stem("incrivelmente"), "incrivel" );
	deepEqual( Stem("incrustado"), "incrust" );
	deepEqual( Stem("incubação"), "incub" );
	deepEqual( Stem("incumbência"), "incumbent" );
	deepEqual( Stem("incumbido"), "incumb" );
	deepEqual( Stem("incuráveis"), "incur" );
	deepEqual( Stem("incurável"), "incur" );
	deepEqual( Stem("incúria"), "incúr" );
	deepEqual( Stem("incursão"), "incursã" );
	deepEqual( Stem("incursões"), "incursõ" );
	deepEqual( Stem("indaga"), "indag" );
	deepEqual( Stem("indagação"), "indag" );
	deepEqual( Stem("indagações"), "indag" );
	deepEqual( Stem("indagaria"), "indag" );
	deepEqual( Stem("indagava"), "indag" );
	deepEqual( Stem("indarte"), "indart" );
	deepEqual( Stem("indecentes"), "indecent" );
	deepEqual( Stem("indecifrável"), "indecifr" );
	deepEqual( Stem("indeciso"), "indecis" );
	deepEqual( Stem("indecisos"), "indecis" );
	deepEqual( Stem("indefectível"), "indefect" );
	deepEqual( Stem("indefensável"), "indefens" );
	deepEqual( Stem("indefinições"), "indefiniçõ" );
	deepEqual( Stem("indefinido"), "indefin" );
	deepEqual( Stem("indenização"), "indeniz" );
	deepEqual( Stem("indenizações"), "indeniz" );
	deepEqual( Stem("indenizadas"), "indeniz" );
	deepEqual( Stem("indenizado"), "indeniz" );
	deepEqual( Stem("indenizaram"), "indeniz" );
	deepEqual( Stem("independence"), "independenc" );
	deepEqual( Stem("independência"), "independent" );
	deepEqual( Stem("independendo"), "independ" );
	deepEqual( Stem("independent"), "independent" );
	deepEqual( Stem("independente"), "independent" );
	deepEqual( Stem("independentemente"), "independent" );
	deepEqual( Stem("independentes"), "independent" );
	deepEqual( Stem("indescritível"), "indescrit" );
	deepEqual( Stem("indesejável"), "indesej" );
	deepEqual( Stem("indeterminado"), "indetermin" );
	deepEqual( Stem("indevidamente"), "indevid" );
	deepEqual( Stem("indevido"), "indev" );
	deepEqual( Stem("index"), "index" );
	deepEqual( Stem("índia"), "índi" );
	deepEqual( Stem("indiana"), "indian" );
	deepEqual( Stem("indianápolis"), "indianápol" );
	deepEqual( Stem("indianas"), "indian" );
	deepEqual( Stem("indiano"), "indian" );
	deepEqual( Stem("indianos"), "indian" );
	deepEqual( Stem("índias"), "índi" );
	deepEqual( Stem("indica"), "indic" );
	deepEqual( Stem("indicação"), "indic" );
	deepEqual( Stem("indicações"), "indic" );
	deepEqual( Stem("indicada"), "indic" );
	deepEqual( Stem("indicadas"), "indic" );
	deepEqual( Stem("indicado"), "indic" );
	deepEqual( Stem("indicador"), "indic" );
	deepEqual( Stem("indicadores"), "indic" );
	deepEqual( Stem("indicados"), "indic" );
	deepEqual( Stem("indicam"), "indic" );
	deepEqual( Stem("indicando"), "indic" );
	deepEqual( Stem("indicar"), "indic" );
	deepEqual( Stem("indicaria"), "indic" );
	deepEqual( Stem("indicativo"), "indic" );
	deepEqual( Stem("indicator"), "indicator" );
	deepEqual( Stem("indicava"), "indic" );
	deepEqual( Stem("indicavam"), "indic" );
	deepEqual( Stem("índice"), "índic" );
	deepEqual( Stem("índices"), "índic" );
	deepEqual( Stem("indício"), "indíci" );
	deepEqual( Stem("indícios"), "indíci" );
	deepEqual( Stem("indiciou"), "indic" );
	deepEqual( Stem("indico"), "indic" );
	deepEqual( Stem("índico"), "índic" );
	deepEqual( Stem("indicou"), "indic" );
	deepEqual( Stem("indiferença"), "indiferenc" );
	deepEqual( Stem("indiferente"), "indiferent" );
	deepEqual( Stem("indiferentes"), "indiferent" );
	deepEqual( Stem("indígena"), "indígen" );
	deepEqual( Stem("indígenas"), "indígen" );
	deepEqual( Stem("indigência"), "indigent" );
	deepEqual( Stem("indigestão"), "indigestã" );
	deepEqual( Stem("indignação"), "indign" );
	deepEqual( Stem("indignada"), "indign" );
	deepEqual( Stem("indignado"), "indign" );
	deepEqual( Stem("indignou"), "indign" );
	deepEqual( Stem("indigo"), "indig" );
	deepEqual( Stem("índio"), "índi" );
	deepEqual( Stem("índios"), "índi" );
	deepEqual( Stem("indireta"), "indiret" );
	deepEqual( Stem("indiretamente"), "indiret" );
	deepEqual( Stem("indiretas"), "indiret" );
	deepEqual( Stem("indiretos"), "indiret" );
	deepEqual( Stem("indisciplina"), "indisciplin" );
	deepEqual( Stem("indiscreta"), "indiscret" );
	deepEqual( Stem("indiscretas"), "indiscret" );
	deepEqual( Stem("indiscriminada"), "indiscrimin" );
	deepEqual( Stem("indiscriminadamente"), "indiscrimin" );
	deepEqual( Stem("indiscutível"), "indiscut" );
	deepEqual( Stem("indispensáveis"), "indispens" );
	deepEqual( Stem("indispensável"), "indispens" );
	deepEqual( Stem("indissolúvel"), "indissolúvel" );
	deepEqual( Stem("individuais"), "individu" );
	deepEqual( Stem("individual"), "individual" );
	deepEqual( Stem("individualidade"), "individual" );
	deepEqual( Stem("individualismo"), "individual" );
	deepEqual( Stem("individualista"), "individual" );
	deepEqual( Stem("individualistas"), "individual" );
	deepEqual( Stem("individualiza"), "individualiz" );
	deepEqual( Stem("individualizado"), "individualiz" );
	deepEqual( Stem("individualmente"), "individual" );
	deepEqual( Stem("indíviduo"), "indívidu" );
	deepEqual( Stem("indivíduo"), "indivídu" );
	deepEqual( Stem("indivíduos"), "indivídu" );
	deepEqual( Stem("indizíveis"), "indizív" );
	deepEqual( Stem("indo"), "indo" );
	deepEqual( Stem("índole"), "índol" );
	deepEqual( Stem("indomada"), "indom" );
	deepEqual( Stem("indomável"), "indom" );
	deepEqual( Stem("indonésia"), "indonés" );
	deepEqual( Stem("indulgências"), "indulgent" );
	deepEqual( Stem("indumentária"), "indumentár" );
	deepEqual( Stem("indústria"), "indústr" );
	deepEqual( Stem("industriais"), "industri" );
	deepEqual( Stem("industrial"), "industrial" );
	deepEqual( Stem("industrialização"), "industrializ" );
	deepEqual( Stem("industrializadas"), "industrializ" );
	deepEqual( Stem("industrializado"), "industrializ" );
	deepEqual( Stem("industrializados"), "industrializ" );
	deepEqual( Stem("indústrias"), "indústr" );
	deepEqual( Stem("indusval"), "indusval" );
	deepEqual( Stem("induz"), "induz" );
	deepEqual( Stem("induzem"), "induz" );
	deepEqual( Stem("induzida"), "induz" );
	deepEqual( Stem("induzido"), "induz" );
	deepEqual( Stem("induzir"), "induz" );
	deepEqual( Stem("induzo"), "induz" );
	deepEqual( Stem("indy"), "indy" );
	deepEqual( Stem("inédita"), "inédit" );
	deepEqual( Stem("ineditismo"), "inedit" );
	deepEqual( Stem("inédito"), "inédit" );
	deepEqual( Stem("inéditos"), "inédit" );
	deepEqual( Stem("ineficaz"), "ineficaz" );
	deepEqual( Stem("ineficiência"), "ineficient" );
	deepEqual( Stem("ineficiências"), "ineficient" );
	deepEqual( Stem("ineficientes"), "ineficient" );
	deepEqual( Stem("inegáveis"), "ineg" );
	deepEqual( Stem("inegável"), "ineg" );
	deepEqual( Stem("inei"), "ine" );
	deepEqual( Stem("inelutável"), "inelut" );
	deepEqual( Stem("inépcia"), "inépc" );
	deepEqual( Stem("inequívoca"), "inequívoc" );
	deepEqual( Stem("inerte"), "inert" );
	deepEqual( Stem("inès"), "inès" );
	deepEqual( Stem("inês"), "inês" );
	deepEqual( Stem("inescrupuloso"), "inescrupul" );
	deepEqual( Stem("inesperada"), "inesper" );
	deepEqual( Stem("inesperadamente"), "inesper" );
	deepEqual( Stem("inesperadas"), "inesper" );
	deepEqual( Stem("inesperado"), "inesper" );
	deepEqual( Stem("inestimável"), "inestim" );
	deepEqual( Stem("inevitável"), "inevit" );
	deepEqual( Stem("inevitavelmente"), "inevit" );
	deepEqual( Stem("inexato"), "inexat" );
	deepEqual( Stem("inexistente"), "inexistent" );
	deepEqual( Stem("inexistentes"), "inexistent" );
	deepEqual( Stem("inexorável"), "inexor" );
	deepEqual( Stem("inexperiente"), "inexperient" );
	deepEqual( Stem("inexperientes"), "inexperient" );
	deepEqual( Stem("inexplicáveis"), "inexplic" );
	deepEqual( Stem("inexplicável"), "inexplic" );
	deepEqual( Stem("inexpressiva"), "inexpress" );
	deepEqual( Stem("inf"), "inf" );
	deepEqual( Stem("infame"), "infam" );
	deepEqual( Stem("infância"), "infânc" );
	deepEqual( Stem("infantaria"), "infant" );
	deepEqual( Stem("infantil"), "infantil" );
	deepEqual( Stem("infantilizado"), "infantiliz" );
	deepEqual( Stem("infantilizados"), "infantiliz" );
	deepEqual( Stem("infantis"), "infant" );
	deepEqual( Stem("infanto"), "infant" );
	deepEqual( Stem("infarta"), "infart" );
	deepEqual( Stem("infarto"), "infart" );
	deepEqual( Stem("infartos"), "infart" );
	deepEqual( Stem("infecção"), "infecçã" );
	deepEqual( Stem("infecções"), "infecçõ" );
	deepEqual( Stem("infectadas"), "infect" );
	deepEqual( Stem("infectado"), "infect" );
	deepEqual( Stem("infectados"), "infect" );
	deepEqual( Stem("infectologista"), "infectolog" );
	deepEqual( Stem("infelicidade"), "infel" );
	deepEqual( Stem("infeliz"), "infeliz" );
	deepEqual( Stem("infelizes"), "infeliz" );
	deepEqual( Stem("infelizmente"), "infeliz" );
	deepEqual( Stem("inferior"), "inferior" );
	deepEqual( Stem("inferiores"), "inferior" );
	deepEqual( Stem("inferioridade"), "inferior" );
	deepEqual( Stem("inferir"), "infer" );
	deepEqual( Stem("infernal"), "infernal" );
	deepEqual( Stem("inferninhos"), "inferninh" );
	deepEqual( Stem("inferno"), "infern" );
	deepEqual( Stem("infestada"), "infest" );
	deepEqual( Stem("infestam"), "infest" );
	deepEqual( Stem("infidelidade"), "infidel" );
	deepEqual( Stem("infiéis"), "infi" );
	deepEqual( Stem("infiel"), "infiel" );
	deepEqual( Stem("infiltra"), "infiltr" );
	deepEqual( Stem("infiltrações"), "infiltr" );
	deepEqual( Stem("infiltrando"), "infiltr" );
	deepEqual( Stem("infiltrar"), "infiltr" );
	deepEqual( Stem("infiltrou"), "infiltr" );
	deepEqual( Stem("ínfimo"), "ínfim" );
	deepEqual( Stem("ínfimos"), "ínfim" );
	deepEqual( Stem("infindável"), "infind" );
	deepEqual( Stem("infinidade"), "infin" );
	deepEqual( Stem("infinita"), "infinit" );
	deepEqual( Stem("infinitamente"), "infinit" );
	deepEqual( Stem("infinitas"), "infinit" );
	deepEqual( Stem("inflação"), "inflaçã" );
	deepEqual( Stem("inflacionou"), "inflacion" );
	deepEqual( Stem("infladas"), "inflad" );
	deepEqual( Stem("inflamação"), "inflam" );
	deepEqual( Stem("inflamada"), "inflam" );
	deepEqual( Stem("inflamado"), "inflam" );
	deepEqual( Stem("inflamados"), "inflam" );
	deepEqual( Stem("inflamar"), "inflam" );
	deepEqual( Stem("inflamatória"), "inflamatór" );
	deepEqual( Stem("inflamáveis"), "inflam" );
	deepEqual( Stem("inflamável"), "inflam" );
	deepEqual( Stem("inflexível"), "inflex" );
	deepEqual( Stem("influencia"), "influenc" );
	deepEqual( Stem("influência"), "influênc" );
	deepEqual( Stem("influenciada"), "influenc" );
	deepEqual( Stem("influenciado"), "influenc" );
	deepEqual( Stem("influenciados"), "influenc" );
	deepEqual( Stem("influenciam"), "influenc" );
	deepEqual( Stem("influenciando"), "influenc" );
	deepEqual( Stem("influenciar"), "influenc" );
	deepEqual( Stem("influências"), "influênc" );
	deepEqual( Stem("influenciável"), "influenc" );
	deepEqual( Stem("influenciem"), "influenc" );
	deepEqual( Stem("influencio"), "influenci" );
	deepEqual( Stem("influenciou"), "influenc" );
	deepEqual( Stem("influente"), "influent" );
	deepEqual( Stem("influentes"), "influent" );
	deepEqual( Stem("influi"), "influ" );
	deepEqual( Stem("influindo"), "influ" );
	deepEqual( Stem("influir"), "influ" );
	deepEqual( Stem("infográfico"), "infográf" );
	deepEqual( Stem("infolab"), "infolab" );
	deepEqual( Stem("informa"), "inform" );
	deepEqual( Stem("informaç"), "informac" );
	deepEqual( Stem("informação"), "inform" );
	deepEqual( Stem("informações"), "inform" );
	deepEqual( Stem("informada"), "inform" );
	deepEqual( Stem("informadas"), "inform" );
	deepEqual( Stem("informadíssimos"), "informadíss" );
	deepEqual( Stem("informado"), "inform" );
	deepEqual( Stem("informados"), "inform" );
	deepEqual( Stem("informal"), "informal" );
	deepEqual( Stem("informalmente"), "informal" );
	deepEqual( Stem("informam"), "inform" );
	deepEqual( Stem("informando"), "inform" );
	deepEqual( Stem("informantes"), "inform" );
	deepEqual( Stem("informar"), "inform" );
	deepEqual( Stem("informaram"), "inform" );
	deepEqual( Stem("informática"), "informát" );
	deepEqual( Stem("information"), "information" );
	deepEqual( Stem("informativo"), "inform" );
	deepEqual( Stem("informativos"), "inform" );
	deepEqual( Stem("informatização"), "informatiz" );
	deepEqual( Stem("informatizada"), "informatiz" );
	deepEqual( Stem("informatizado"), "informatiz" );
	deepEqual( Stem("informatizou"), "informatiz" );
	deepEqual( Stem("informava"), "inform" );
	deepEqual( Stem("informe"), "inform" );
	deepEqual( Stem("informes"), "inform" );
	deepEqual( Stem("informestado"), "informest" );
	deepEqual( Stem("informou"), "inform" );
	deepEqual( Stem("infortunadamente"), "infortun" );
	deepEqual( Stem("infoway"), "infoway" );
	deepEqual( Stem("infra"), "infra" );
	deepEqual( Stem("infração"), "infraçã" );
	deepEqual( Stem("infrações"), "infraçõ" );
	deepEqual( Stem("infratores"), "infrator" );
	deepEqual( Stem("infrutíferas"), "infrutíf" );
	deepEqual( Stem("infundada"), "infund" );
	deepEqual( Stem("infundadas"), "infund" );
	deepEqual( Stem("ing"), "ing" );
	deepEqual( Stem("ingen"), "ingen" );
	deepEqual( Stem("ingênua"), "ingênu" );
	deepEqual( Stem("ingenuidade"), "ingenu" );
	deepEqual( Stem("ingênuo"), "ingênu" );
	deepEqual( Stem("ingeri"), "inger" );
	deepEqual( Stem("ingerida"), "inger" );
	deepEqual( Stem("ingerido"), "inger" );
	deepEqual( Stem("ingeridos"), "inger" );
	deepEqual( Stem("ingerindo"), "inger" );
	deepEqual( Stem("ingerir"), "inger" );
	deepEqual( Stem("ingestão"), "ingestã" );
	deepEqual( Stem("inglaterra"), "inglaterr" );
	deepEqual( Stem("inglês"), "inglês" );
	deepEqual( Stem("inglesa"), "ingles" );
	deepEqual( Stem("ingleses"), "ingles" );
	deepEqual( Stem("inglesi"), "ingles" );
	deepEqual( Stem("ingovernáveis"), "ingovern" );
	deepEqual( Stem("ingra"), "ingra" );
	deepEqual( Stem("ingrediente"), "ingredient" );
	deepEqual( Stem("ingredientes"), "ingredient" );
	deepEqual( Stem("íngreme"), "íngrem" );
	deepEqual( Stem("íngremes"), "íngrem" );
	deepEqual( Stem("ingressado"), "ingress" );
	deepEqual( Stem("ingressam"), "ingress" );
	deepEqual( Stem("ingressar"), "ingress" );
	deepEqual( Stem("ingresso"), "ingress" );
	deepEqual( Stem("ingressos"), "ingress" );
	deepEqual( Stem("ingrid"), "ingrid" );
	deepEqual( Stem("inibe"), "inib" );
	deepEqual( Stem("inibem"), "inib" );
	deepEqual( Stem("inibex"), "inibex" );
	deepEqual( Stem("inibidor"), "inibidor" );
	deepEqual( Stem("inibidores"), "inibidor" );
	deepEqual( Stem("inibidos"), "inib" );
	deepEqual( Stem("inibindo"), "inib" );
	deepEqual( Stem("inibir"), "inib" );
	deepEqual( Stem("inicia"), "inic" );
	deepEqual( Stem("iniciação"), "inic" );
	deepEqual( Stem("iniciada"), "inic" );
	deepEqual( Stem("iniciadas"), "inic" );
	deepEqual( Stem("iniciado"), "inic" );
	deepEqual( Stem("iniciados"), "inic" );
	deepEqual( Stem("iniciais"), "inic" );
	deepEqual( Stem("inicial"), "inicial" );
	deepEqual( Stem("inicialmente"), "inicial" );
	deepEqual( Stem("iniciam"), "inic" );
	deepEqual( Stem("iniciamos"), "inic" );
	deepEqual( Stem("iniciando"), "inic" );
	deepEqual( Stem("iniciante"), "inic" );
	deepEqual( Stem("iniciantes"), "inic" );
	deepEqual( Stem("iniciar"), "inic" );
	deepEqual( Stem("iniciaram"), "inic" );
	deepEqual( Stem("iniciático"), "iniciát" );
	deepEqual( Stem("iniciativa"), "inic" );
	deepEqual( Stem("iniciava"), "inic" );
	deepEqual( Stem("inicidente"), "inicident" );
	deepEqual( Stem("início"), "iníci" );
	deepEqual( Stem("iniciou"), "inic" );
	deepEqual( Stem("inigualável"), "inigual" );
	deepEqual( Stem("inimaginável"), "inimagin" );
	deepEqual( Stem("inimiga"), "inimig" );
	deepEqual( Stem("inimigo"), "inimig" );
	deepEqual( Stem("inimigos"), "inimig" );
	deepEqual( Stem("inimizade"), "inimizad" );
	deepEqual( Stem("ininteligíveis"), "ininteligív" );
	deepEqual( Stem("ininterrupta"), "ininterrupt" );
	deepEqual( Stem("ininterruptamente"), "ininterrupt" );
	deepEqual( Stem("ininterruptas"), "ininterrupt" );
	deepEqual( Stem("ininterruptos"), "ininterrupt" );
	deepEqual( Stem("injeção"), "injeçã" );
	deepEqual( Stem("injeções"), "injeçõ" );
	deepEqual( Stem("injetada"), "injet" );
	deepEqual( Stem("injetado"), "injet" );
	deepEqual( Stem("injetados"), "injet" );
	deepEqual( Stem("injetar"), "injet" );
	deepEqual( Stem("injetável"), "injet" );
	deepEqual( Stem("injustamente"), "injust" );
	deepEqual( Stem("injustiça"), "injustic" );
	deepEqual( Stem("injustiçadas"), "injustic" );
	deepEqual( Stem("injustiçado"), "injustic" );
	deepEqual( Stem("injusto"), "injust" );
	deepEqual( Stem("inocência"), "inocent" );
	deepEqual( Stem("inocêncio"), "inocênci" );
	deepEqual( Stem("inocente"), "inocent" );
	deepEqual( Stem("inocentes"), "inocent" );
	deepEqual( Stem("inócua"), "inócu" );
	deepEqual( Stem("inócuas"), "inócu" );
	deepEqual( Stem("inocular"), "inocul" );
	deepEqual( Stem("inócuo"), "inócu" );
	deepEqual( Stem("inócuos"), "inócu" );
	deepEqual( Stem("inoportuno"), "inoportun" );
	deepEqual( Stem("inoportunos"), "inoportun" );
	deepEqual( Stem("inóspitas"), "inóspit" );
	deepEqual( Stem("inóspitos"), "inóspit" );
	deepEqual( Stem("inovação"), "inov" );
	deepEqual( Stem("inovações"), "inov" );
	deepEqual( Stem("inovador"), "inov" );
	deepEqual( Stem("inovadora"), "inov" );
	deepEqual( Stem("inovando"), "inov" );
	deepEqual( Stem("inovar"), "inov" );
	deepEqual( Stem("inquérito"), "inquérit" );
	deepEqual( Stem("inquéritos"), "inquérit" );
	deepEqual( Stem("inquestionável"), "inquestion" );
	deepEqual( Stem("inquieta"), "inquiet" );
	deepEqual( Stem("inquietação"), "inquiet" );
	deepEqual( Stem("inquietações"), "inquiet" );
	deepEqual( Stem("inquietante"), "inquiet" );
	deepEqual( Stem("inquieto"), "inquiet" );
	deepEqual( Stem("inquietos"), "inquiet" );
	deepEqual( Stem("inquisição"), "inquisiçã" );
	deepEqual( Stem("insaciável"), "insac" );
	deepEqual( Stem("insana"), "insan" );
	deepEqual( Stem("insanidade"), "insan" );
	deepEqual( Stem("insatisfação"), "insatisf" );
	deepEqual( Stem("insatisfatória"), "insatisfatór" );
	deepEqual( Stem("insatisfatórias"), "insatisfatór" );
	deepEqual( Stem("insatisfazer"), "insatisfaz" );
	deepEqual( Stem("insatisfeito"), "insatisfeit" );
	deepEqual( Stem("insconstitucional"), "insconstitucional" );
	deepEqual( Stem("inscrevem"), "inscrev" );
	deepEqual( Stem("inscrever"), "inscrev" );
	deepEqual( Stem("inscrição"), "inscriçã" );
	deepEqual( Stem("inscrições"), "inscriçõ" );
	deepEqual( Stem("inscritos"), "inscrit" );
	deepEqual( Stem("insegura"), "insegur" );
	deepEqual( Stem("insegurança"), "inseguranc" );
	deepEqual( Stem("inseguro"), "insegur" );
	deepEqual( Stem("insensatez"), "insensatez" );
	deepEqual( Stem("insensíveis"), "insensív" );
	deepEqual( Stem("inseparável"), "insepar" );
	deepEqual( Stem("inserção"), "inserçã" );
	deepEqual( Stem("insere"), "inser" );
	deepEqual( Stem("inseri"), "inser" );
	deepEqual( Stem("inserido"), "inser" );
	deepEqual( Stem("insignificância"), "insignific" );
	deepEqual( Stem("insignificante"), "insignific" );
	deepEqual( Stem("insignificantes"), "insignific" );
	deepEqual( Stem("insinua"), "insinu" );
	deepEqual( Stem("insinuações"), "insinu" );
	deepEqual( Stem("insinuando"), "insinu" );
	deepEqual( Stem("insinuar"), "insinu" );
	deepEqual( Stem("insinuara"), "insinu" );
	deepEqual( Stem("insista"), "insist" );
	deepEqual( Stem("insiste"), "insist" );
	deepEqual( Stem("insistem"), "insist" );
	deepEqual( Stem("insistência"), "insistent" );
	deepEqual( Stem("insistia"), "insist" );
	deepEqual( Stem("insistido"), "insist" );
	deepEqual( Stem("insistir"), "insist" );
	deepEqual( Stem("insistiu"), "insist" );
	deepEqual( Stem("insólito"), "insólit" );
	deepEqual( Stem("insolúvel"), "insolúvel" );
	deepEqual( Stem("insolvência"), "insolvent" );
	deepEqual( Stem("insondável"), "insond" );
	deepEqual( Stem("insones"), "inson" );
	deepEqual( Stem("insônia"), "insôn" );
	deepEqual( Stem("insossa"), "insoss" );
	deepEqual( Stem("inspeção"), "inspeçã" );
	deepEqual( Stem("inspecionadas"), "inspecion" );
	deepEqual( Stem("inspecionam"), "inspecion" );
	deepEqual( Stem("inspecionar"), "inspecion" );
	deepEqual( Stem("inspetor"), "inspetor" );
	deepEqual( Stem("inspira"), "inspir" );
	deepEqual( Stem("inspiração"), "inspir" );
	deepEqual( Stem("inspirada"), "inspir" );
	deepEqual( Stem("inspiradas"), "inspir" );
	deepEqual( Stem("inspirado"), "inspir" );
	deepEqual( Stem("inspirador"), "inspir" );
	deepEqual( Stem("inspirados"), "inspir" );
	deepEqual( Stem("inspiram"), "inspir" );
	deepEqual( Stem("inspirar"), "inspir" );
	deepEqual( Stem("inspiraram"), "inspir" );
	deepEqual( Stem("inspiratória"), "inspiratór" );
	deepEqual( Stem("inspirava"), "inspir" );
	deepEqual( Stem("inspiravam"), "inspir" );
	deepEqual( Stem("inspirou"), "inspir" );
	deepEqual( Stem("inss"), "inss" );
	deepEqual( Stem("instala"), "instal" );
	deepEqual( Stem("instalação"), "instal" );
	deepEqual( Stem("instalações"), "instal" );
	deepEqual( Stem("instalada"), "instal" );
	deepEqual( Stem("instaladas"), "instal" );
	deepEqual( Stem("instalado"), "instal" );
	deepEqual( Stem("instalados"), "instal" );
	deepEqual( Stem("instalam"), "instal" );
	deepEqual( Stem("instalando"), "instal" );
	deepEqual( Stem("instalar"), "instal" );
	deepEqual( Stem("instalará"), "instal" );
	deepEqual( Stem("instalaram"), "instal" );
	deepEqual( Stem("instalarem"), "instal" );
	deepEqual( Stem("instalem"), "instal" );
	deepEqual( Stem("instalou"), "instal" );
	deepEqual( Stem("instância"), "instânc" );
	deepEqual( Stem("instâncias"), "instânc" );
	deepEqual( Stem("instantânea"), "instantân" );
	deepEqual( Stem("instantâneo"), "instantân" );
	deepEqual( Stem("instante"), "instant" );
	deepEqual( Stem("instantes"), "instant" );
	deepEqual( Stem("instaurado"), "instaur" );
	deepEqual( Stem("instáveis"), "instáv" );
	deepEqual( Stem("instável"), "instável" );
	deepEqual( Stem("instigante"), "instig" );
	deepEqual( Stem("instintiva"), "instint" );
	deepEqual( Stem("instinto"), "instint" );
	deepEqual( Stem("institucionalizar"), "institucionaliz" );
	deepEqual( Stem("instituição"), "instituiçã" );
	deepEqual( Stem("instituições"), "instituiçõ" );
	deepEqual( Stem("instituída"), "instituíd" );
	deepEqual( Stem("instituído"), "instituíd" );
	deepEqual( Stem("instituir"), "institu" );
	deepEqual( Stem("instituiu"), "institu" );
	deepEqual( Stem("institute"), "institut" );
	deepEqual( Stem("institution"), "institution" );
	deepEqual( Stem("institutional"), "institutional" );
	deepEqual( Stem("instituto"), "institut" );
	deepEqual( Stem("institutos"), "institut" );
	deepEqual( Stem("instrução"), "instruçã" );
	deepEqual( Stem("instruções"), "instruçõ" );
	deepEqual( Stem("instruídos"), "instruíd" );
	deepEqual( Stem("instrumentais"), "instrument" );
	deepEqual( Stem("instrumental"), "instrumental" );
	deepEqual( Stem("instrumentalizadas"), "instrumentaliz" );
	deepEqual( Stem("instrumentista"), "instrument" );
	deepEqual( Stem("instrumento"), "instrument" );
	deepEqual( Stem("instrumentos"), "instrument" );
	deepEqual( Stem("instrutivas"), "instrut" );
	deepEqual( Stem("instrutor"), "instrutor" );
	deepEqual( Stem("instrutores"), "instrutor" );
	deepEqual( Stem("insubstituível"), "insubstitu" );
	deepEqual( Stem("insucesso"), "insucess" );
	deepEqual( Stem("insuficiência"), "insuficient" );
	deepEqual( Stem("insuficiente"), "insuficient" );
	deepEqual( Stem("insuficientes"), "insuficient" );
	deepEqual( Stem("insulina"), "insulin" );
	deepEqual( Stem("insultando"), "insult" );
	deepEqual( Stem("insuperáveis"), "insuper" );
	deepEqual( Stem("insuperável"), "insuper" );
	deepEqual( Stem("insuportável"), "insuport" );
	deepEqual( Stem("insurgiram"), "insurg" );
	deepEqual( Stem("insurreição"), "insurreiçã" );
	deepEqual( Stem("insustentável"), "insustent" );
	deepEqual( Stem("intacta"), "intact" );
	deepEqual( Stem("intacto"), "intact" );
	deepEqual( Stem("intangível"), "intang" );
	deepEqual( Stem("intatas"), "intat" );
	deepEqual( Stem("inte"), "inte" );
	deepEqual( Stem("integra"), "integr" );
	deepEqual( Stem("íntegra"), "íntegr" );
	deepEqual( Stem("integrá"), "integr" );
	deepEqual( Stem("integração"), "integr" );
	deepEqual( Stem("integrada"), "integr" );
	deepEqual( Stem("integrado"), "integr" );
	deepEqual( Stem("integradora"), "integr" );
	deepEqual( Stem("integrados"), "integr" );
	deepEqual( Stem("integrais"), "integr" );
	deepEqual( Stem("integral"), "integral" );
	deepEqual( Stem("integralmente"), "integral" );
	deepEqual( Stem("integram"), "integr" );
	deepEqual( Stem("integrante"), "integr" );
	deepEqual( Stem("integrantes"), "integr" );
	deepEqual( Stem("integrar"), "integr" );
	deepEqual( Stem("íntegras"), "íntegr" );
	deepEqual( Stem("integrated"), "integrated" );
	deepEqual( Stem("integrava"), "integr" );
	deepEqual( Stem("integre"), "integr" );
	deepEqual( Stem("integridade"), "integr" );
	deepEqual( Stem("integrou"), "integr" );
	deepEqual( Stem("inteira"), "inteir" );
	deepEqual( Stem("inteiramente"), "inteir" );
	deepEqual( Stem("inteiras"), "inteir" );
	deepEqual( Stem("inteirinho"), "inteirinh" );
	deepEqual( Stem("inteiro"), "inteir" );
	deepEqual( Stem("inteirou"), "inteir" );
	deepEqual( Stem("intel"), "intel" );
	deepEqual( Stem("intelectuais"), "intelectu" );
	deepEqual( Stem("intelectual"), "intelectual" );
	deepEqual( Stem("intelifgência"), "intelifgent" );
	deepEqual( Stem("inteligence"), "inteligenc" );
	deepEqual( Stem("inteligência"), "inteligent" );
	deepEqual( Stem("inteligente"), "inteligent" );
	deepEqual( Stem("inteligentes"), "inteligent" );
	deepEqual( Stem("inteligentíssimo"), "inteligentíssim" );
	deepEqual( Stem("intempéries"), "intempéri" );
	deepEqual( Stem("intempestiva"), "intempest" );
	deepEqual( Stem("intenção"), "intençã" );
	deepEqual( Stem("intencional"), "intencional" );
	deepEqual( Stem("intenções"), "intençõ" );
	deepEqual( Stem("intensa"), "intens" );
	deepEqual( Stem("intensamente"), "intens" );
	deepEqual( Stem("intensas"), "intens" );
	deepEqual( Stem("intensidade"), "intens" );
	deepEqual( Stem("intensidades"), "intens" );
	deepEqual( Stem("intensificando"), "intensific" );
	deepEqual( Stem("intensificar"), "intensific" );
	deepEqual( Stem("intensiva"), "intens" );
	deepEqual( Stem("intensivo"), "intens" );
	deepEqual( Stem("intenso"), "intens" );
	deepEqual( Stem("inter"), "inter" );
	deepEqual( Stem("interação"), "inter" );
	deepEqual( Stem("interações"), "inter" );
	deepEqual( Stem("interagem"), "interag" );
	deepEqual( Stem("interativa"), "inter" );
	deepEqual( Stem("interativas"), "inter" );
	deepEqual( Stem("interatividade"), "interat" );
	deepEqual( Stem("intercâmbio"), "intercâmbi" );
	deepEqual( Stem("interceda"), "interced" );
	deepEqual( Stem("intercomunicação"), "intercomunic" );
	deepEqual( Stem("intercontinental"), "intercontinental" );
	deepEqual( Stem("interdependência"), "interdependent" );
	deepEqual( Stem("interdesign"), "interdesign" );
	deepEqual( Stem("interdição"), "interdiçã" );
	deepEqual( Stem("interditada"), "interdit" );
	deepEqual( Stem("interessa"), "interess" );
	deepEqual( Stem("interessada"), "interess" );
	deepEqual( Stem("interessadas"), "interess" );
	deepEqual( Stem("interessado"), "interess" );
	deepEqual( Stem("interessados"), "interess" );
	deepEqual( Stem("interessam"), "interess" );
	deepEqual( Stem("interessante"), "interess" );
	deepEqual( Stem("interessantes"), "interess" );
	deepEqual( Stem("interessar"), "interess" );
	deepEqual( Stem("interessasse"), "interess" );
	deepEqual( Stem("interessava"), "interess" );
	deepEqual( Stem("interesse"), "inter" );
	deepEqual( Stem("interessei"), "interess" );
	deepEqual( Stem("interesses"), "inter" );
	deepEqual( Stem("interessou"), "interess" );
	deepEqual( Stem("interface"), "interfac" );
	deepEqual( Stem("interfere"), "interfer" );
	deepEqual( Stem("interferência"), "interferent" );
	deepEqual( Stem("interferências"), "interferent" );
	deepEqual( Stem("interferido"), "interfer" );
	deepEqual( Stem("interferir"), "interfer" );
	deepEqual( Stem("interinamente"), "interin" );
	deepEqual( Stem("interior"), "interior" );
	deepEqual( Stem("interioranas"), "interioran" );
	deepEqual( Stem("interiorano"), "interioran" );
	deepEqual( Stem("interiores"), "interior" );
	deepEqual( Stem("interiorizada"), "interioriz" );
	deepEqual( Stem("interlagos"), "interlag" );
	deepEqual( Stem("interliga"), "interlig" );
	deepEqual( Stem("interligadas"), "interlig" );
	deepEqual( Stem("interligados"), "interlig" );
	deepEqual( Stem("interlocutor"), "interlocutor" );
	deepEqual( Stem("interlocutores"), "interlocutor" );
	deepEqual( Stem("intermediação"), "intermedi" );
	deepEqual( Stem("intermediada"), "intermedi" );
	deepEqual( Stem("intermediária"), "intermediár" );
	deepEqual( Stem("intermediário"), "intermediári" );
	deepEqual( Stem("intermediários"), "intermediári" );
	deepEqual( Stem("intermédio"), "intermédi" );
	deepEqual( Stem("intermináveis"), "intermin" );
	deepEqual( Stem("interminável"), "intermin" );
	deepEqual( Stem("interministerial"), "interministerial" );
	deepEqual( Stem("intermitente"), "intermitent" );
	deepEqual( Stem("interna"), "intern" );
	deepEqual( Stem("interná"), "intern" );
	deepEqual( Stem("internação"), "intern" );
	deepEqual( Stem("internacionais"), "internacion" );
	deepEqual( Stem("internacional"), "internacional" );
	deepEqual( Stem("internacionalizada"), "internacionaliz" );
	deepEqual( Stem("internacionalmente"), "internacional" );
	deepEqual( Stem("internações"), "intern" );
	deepEqual( Stem("internada"), "intern" );
	deepEqual( Stem("internado"), "intern" );
	deepEqual( Stem("internar"), "intern" );
	deepEqual( Stem("internas"), "intern" );
	deepEqual( Stem("international"), "international" );
	deepEqual( Stem("internato"), "internat" );
	deepEqual( Stem("internauta"), "internaut" );
	deepEqual( Stem("internautas"), "internaut" );
	deepEqual( Stem("internet"), "internet" );
	deepEqual( Stem("interno"), "intern" );
	deepEqual( Stem("internos"), "intern" );
	deepEqual( Stem("interoperability"), "interoperability" );
	deepEqual( Stem("interpelação"), "interpel" );
	deepEqual( Stem("interpol"), "interpol" );
	deepEqual( Stem("interpreta"), "interpret" );
	deepEqual( Stem("interpretação"), "interpret" );
	deepEqual( Stem("interpretações"), "interpret" );
	deepEqual( Stem("interpretada"), "interpret" );
	deepEqual( Stem("interpretadas"), "interpret" );
	deepEqual( Stem("interpretado"), "interpret" );
	deepEqual( Stem("interpretados"), "interpret" );
	deepEqual( Stem("interpretam"), "interpret" );
	deepEqual( Stem("interpretando"), "interpret" );
	deepEqual( Stem("interpretar"), "interpret" );
	deepEqual( Stem("interpretava"), "interpret" );
	deepEqual( Stem("interpretavam"), "interpret" );
	deepEqual( Stem("intérprete"), "intérpret" );
	deepEqual( Stem("intérpretes"), "intérpret" );
	deepEqual( Stem("interpretou"), "interpret" );
	deepEqual( Stem("interregno"), "interregn" );
	deepEqual( Stem("interrogação"), "interrog" );
	deepEqual( Stem("interrogações"), "interrog" );
	deepEqual( Stem("interrogadores"), "interrog" );
	deepEqual( Stem("interrogam"), "interrog" );
	deepEqual( Stem("interrogando"), "interrog" );
	deepEqual( Stem("interrogatório"), "interrogatóri" );
	deepEqual( Stem("interrogatórios"), "interrogatóri" );
	deepEqual( Stem("interrogava"), "interrog" );
	deepEqual( Stem("interrogou"), "interrog" );
	deepEqual( Stem("interrompendo"), "interromp" );
	deepEqual( Stem("interromper"), "interromp" );
	deepEqual( Stem("interrompida"), "interromp" );
	deepEqual( Stem("interrompido"), "interromp" );
	deepEqual( Stem("interrupção"), "interrupçã" );
	deepEqual( Stem("intersindical"), "intersindical" );
	deepEqual( Stem("intertribais"), "intertrib" );
	deepEqual( Stem("intervalo"), "interval" );
	deepEqual( Stem("intervalos"), "interval" );
	deepEqual( Stem("intervém"), "intervém" );
	deepEqual( Stem("intervenção"), "intervençã" );
	deepEqual( Stem("intervencionista"), "intervencion" );
	deepEqual( Stem("intervencionistas"), "intervencion" );
	deepEqual( Stem("intervenções"), "intervençõ" );
	deepEqual( Stem("intervir"), "interv" );
	deepEqual( Stem("intestinal"), "intestinal" );
	deepEqual( Stem("intestino"), "intestin" );
	deepEqual( Stem("íntima"), "íntim" );
	deepEqual( Stem("intimado"), "intim" );
	deepEqual( Stem("íntimas"), "íntim" );
	deepEqual( Stem("intimida"), "intim" );
	deepEqual( Stem("intimidade"), "intim" );
	deepEqual( Stem("intimidades"), "intim" );
	deepEqual( Stem("íntimo"), "íntim" );
	deepEqual( Stem("íntimos"), "íntim" );
	deepEqual( Stem("intitulada"), "intitul" );
	deepEqual( Stem("intitulado"), "intitul" );
	deepEqual( Stem("intitular"), "intitul" );
	deepEqual( Stem("intocada"), "intoc" );
	deepEqual( Stem("intocados"), "intoc" );
	deepEqual( Stem("intocável"), "intoc" );
	deepEqual( Stem("intolerância"), "intoler" );
	deepEqual( Stem("intolerantes"), "intoler" );
	deepEqual( Stem("intolerável"), "intoler" );
	deepEqual( Stem("intoxicação"), "intoxic" );
	deepEqual( Stem("intoxicações"), "intoxic" );
	deepEqual( Stem("intracranianos"), "intracranian" );
	deepEqual( Stem("intransponíveis"), "intransponív" );
	deepEqual( Stem("intransponível"), "intranspon" );
	deepEqual( Stem("intratáveis"), "intrat" );
	deepEqual( Stem("intriga"), "intrig" );
	deepEqual( Stem("intrigante"), "intrig" );
	deepEqual( Stem("intrigas"), "intrig" );
	deepEqual( Stem("introdução"), "introduçã" );
	deepEqual( Stem("introduz"), "introduz" );
	deepEqual( Stem("introduzida"), "introduz" );
	deepEqual( Stem("introduzido"), "introduz" );
	deepEqual( Stem("introduzindo"), "introduz" );
	deepEqual( Stem("introduzir"), "introduz" );
	deepEqual( Stem("intrometendo"), "intromet" );
	deepEqual( Stem("intrometeram"), "intromet" );
	deepEqual( Stem("intrometida"), "intromet" );
	deepEqual( Stem("introspectivo"), "introspect" );
	deepEqual( Stem("intrusos"), "intrus" );
	deepEqual( Stem("intui"), "intu" );
	deepEqual( Stem("intuição"), "intuiçã" );
	deepEqual( Stem("intuitivo"), "intuit" );
	deepEqual( Stem("inturia"), "intur" );
	deepEqual( Stem("inúmeras"), "inúm" );
	deepEqual( Stem("inúmeros"), "inúmer" );
	deepEqual( Stem("inundaram"), "inund" );
	deepEqual( Stem("inusitada"), "inusit" );
	deepEqual( Stem("inusitadas"), "inusit" );
	deepEqual( Stem("inusitado"), "inusit" );
	deepEqual( Stem("inúteis"), "inút" );
	deepEqual( Stem("inútil"), "inútil" );
	deepEqual( Stem("inutiliza"), "inutiliz" );
	deepEqual( Stem("inutilmente"), "inutil" );
	deepEqual( Stem("invade"), "invad" );
	deepEqual( Stem("invadi"), "invad" );
	deepEqual( Stem("invadida"), "invad" );
	deepEqual( Stem("invadido"), "invad" );
	deepEqual( Stem("invadindo"), "invad" );
	deepEqual( Stem("invadir"), "invad" );
	deepEqual( Stem("invadiram"), "invad" );
	deepEqual( Stem("invadiria"), "invad" );
	deepEqual( Stem("invadiu"), "invad" );
	deepEqual( Stem("invalidez"), "invalidez" );
	deepEqual( Stem("invariavelmente"), "invari" );
	deepEqual( Stem("invasão"), "invasã" );
	deepEqual( Stem("invasivo"), "invas" );
	deepEqual( Stem("invasores"), "invasor" );
	deepEqual( Stem("inveja"), "invej" );
	deepEqual( Stem("invejável"), "invej" );
	deepEqual( Stem("invejo"), "invej" );
	deepEqual( Stem("invenção"), "invençã" );
	deepEqual( Stem("invencibilidade"), "invencibil" );
	deepEqual( Stem("inventada"), "invent" );
	deepEqual( Stem("inventado"), "invent" );
	deepEqual( Stem("inventando"), "invent" );
	deepEqual( Stem("inventar"), "invent" );
	deepEqual( Stem("inventaram"), "invent" );
	deepEqual( Stem("inventário"), "inventári" );
	deepEqual( Stem("inventava"), "invent" );
	deepEqual( Stem("invente"), "invent" );
	deepEqual( Stem("inventor"), "inventor" );
	deepEqual( Stem("inventores"), "inventor" );
	deepEqual( Stem("inventou"), "invent" );
	deepEqual( Stem("inverno"), "invern" );
	deepEqual( Stem("invernos"), "invern" );
	deepEqual( Stem("inversa"), "invers" );
	deepEqual( Stem("inversamente"), "invers" );
	deepEqual( Stem("inversão"), "inversã" );
	deepEqual( Stem("inverso"), "invers" );
	deepEqual( Stem("inverte"), "invert" );
	deepEqual( Stem("invertessem"), "invert" );
	deepEqual( Stem("inverteu"), "invert" );
	deepEqual( Stem("investe"), "invest" );
	deepEqual( Stem("investem"), "invest" );
	deepEqual( Stem("investiam"), "invest" );
	deepEqual( Stem("investida"), "invest" );
	deepEqual( Stem("investidas"), "invest" );
	deepEqual( Stem("investido"), "invest" );
	deepEqual( Stem("investidor"), "investidor" );
	deepEqual( Stem("investidores"), "investidor" );
	deepEqual( Stem("investidos"), "invest" );
	deepEqual( Stem("investiga"), "investig" );
	deepEqual( Stem("investigação"), "investig" );
	deepEqual( Stem("investigações"), "investig" );
	deepEqual( Stem("investigada"), "investig" );
	deepEqual( Stem("investigadas"), "investig" );
	deepEqual( Stem("investigado"), "investig" );
	deepEqual( Stem("investigador"), "investig" );
	deepEqual( Stem("investigadora"), "investig" );
	deepEqual( Stem("investigadores"), "investig" );
	deepEqual( Stem("investigados"), "investig" );
	deepEqual( Stem("investigam"), "investig" );
	deepEqual( Stem("investigando"), "investig" );
	deepEqual( Stem("investigar"), "investig" );
	deepEqual( Stem("investigativa"), "investig" );
	deepEqual( Stem("investigativo"), "investig" );
	deepEqual( Stem("investigou"), "investig" );
	deepEqual( Stem("investigue"), "investig" );
	deepEqual( Stem("investimento"), "invest" );
	deepEqual( Stem("investimentos"), "invest" );
	deepEqual( Stem("investimos"), "invest" );
	deepEqual( Stem("investindo"), "invest" );
	deepEqual( Stem("investir"), "invest" );
	deepEqual( Stem("investirá"), "invest" );
	deepEqual( Stem("investisse"), "invest" );
	deepEqual( Stem("investiu"), "invest" );
	deepEqual( Stem("investment"), "investment" );
	deepEqual( Stem("inveterado"), "inveter" );
	deepEqual( Stem("inveterados"), "inveter" );
	deepEqual( Stem("inviabilizados"), "inviabiliz" );
	deepEqual( Stem("inviabilizam"), "inviabiliz" );
	deepEqual( Stem("inviável"), "inviável" );
	deepEqual( Stem("invicto"), "invict" );
	deepEqual( Stem("invisíveis"), "invisív" );
	deepEqual( Stem("invisível"), "invis" );
	deepEqual( Stem("invista"), "invist" );
	deepEqual( Stem("invistam"), "invist" );
	deepEqual( Stem("invocação"), "invoc" );
	deepEqual( Stem("invólucro"), "invólucr" );
	deepEqual( Stem("invólucros"), "invólucr" );
	deepEqual( Stem("involuntariamente"), "involuntari" );
	deepEqual( Stem("iô"), "iô" );
	deepEqual( Stem("iode"), "iod" );
	deepEqual( Stem("iódice"), "iódic" );
	deepEqual( Stem("iof"), "iof" );
	deepEqual( Stem("ioga"), "iog" );
	deepEqual( Stem("iogurte"), "iogurt" );
	deepEqual( Stem("ioiô"), "ioiô" );
	deepEqual( Stem("ion"), "ion" );
	deepEqual( Stem("ione"), "ion" );
	deepEqual( Stem("iorquina"), "iorquin" );
	deepEqual( Stem("iorquino"), "iorquin" );
	deepEqual( Stem("ioruba"), "iorub" );
	deepEqual( Stem("iôs"), "iôs" );
	deepEqual( Stem("ip"), "ip" );
	deepEqual( Stem("ipanema"), "ipanem" );
	deepEqual( Stem("ipanemense"), "ipanemens" );
	deepEqual( Stem("ipea"), "ipe" );
	deepEqual( Stem("iph"), "iph" );
	deepEqual( Stem("iphigenie"), "iphigeni" );
	deepEqual( Stem("ipiranga"), "ipirang" );
	deepEqual( Stem("ipojuca"), "ipojuc" );
	deepEqual( Stem("ipva"), "ipva" );
	deepEqual( Stem("ir"), "ir" );
	deepEqual( Stem("ira"), "ira" );
	deepEqual( Stem("irá"), "irá" );
	deepEqual( Stem("irã"), "irã" );
	deepEqual( Stem("iracy"), "iracy" );
	deepEqual( Stem("iranaia"), "irana" );
	deepEqual( Stem("irany"), "irany" );
	deepEqual( Stem("irão"), "irã" );
	deepEqual( Stem("iraquiano"), "iraquian" );
	deepEqual( Stem("irem"), "irem" );
	deepEqual( Stem("irene"), "iren" );
	deepEqual( Stem("iria"), "iri" );
	deepEqual( Stem("iriam"), "iri" );
	deepEqual( Stem("iríamos"), "irí" );
	deepEqual( Stem("irídio"), "irídi" );
	deepEqual( Stem("irineu"), "irin" );
	deepEqual( Stem("iriri"), "irir" );
	deepEqual( Stem("iris"), "iris" );
	deepEqual( Stem("íris"), "íris" );
	deepEqual( Stem("irlanda"), "irland" );
	deepEqual( Stem("irlandês"), "irlandês" );
	deepEqual( Stem("irma"), "irma" );
	deepEqual( Stem("irmã"), "irmã" );
	deepEqual( Stem("irmão"), "irmã" );
	deepEqual( Stem("irmãos"), "irmã" );
	deepEqual( Stem("irmãs"), "irmãs" );
	deepEqual( Stem("ironia"), "iron" );
	deepEqual( Stem("ironias"), "iron" );
	deepEqual( Stem("irônica"), "irôn" );
	deepEqual( Stem("ironicamente"), "iron" );
	deepEqual( Stem("irônico"), "irôn" );
	deepEqual( Stem("ironiza"), "ironiz" );
	deepEqual( Stem("ironizou"), "ironiz" );
	deepEqual( Stem("irradiando"), "irradi" );
	deepEqual( Stem("irradiar"), "irradi" );
	deepEqual( Stem("irreais"), "irre" );
	deepEqual( Stem("irreconhecível"), "irreconhec" );
	deepEqual( Stem("irredutíveis"), "irredutív" );
	deepEqual( Stem("irrefutáveis"), "irrefut" );
	deepEqual( Stem("irregular"), "irregul" );
	deepEqual( Stem("irregulares"), "irregul" );
	deepEqual( Stem("irregularidade"), "irregular" );
	deepEqual( Stem("irregularidades"), "irregular" );
	deepEqual( Stem("irregularmente"), "irregular" );
	deepEqual( Stem("irrelevante"), "irrelev" );
	deepEqual( Stem("irrelevantes"), "irrelev" );
	deepEqual( Stem("irreligioso"), "irreligi" );
	deepEqual( Stem("irreparável"), "irrepar" );
	deepEqual( Stem("irrepreensível"), "irrepreens" );
	deepEqual( Stem("irrequieto"), "irrequiet" );
	deepEqual( Stem("irresistíveis"), "irresistív" );
	deepEqual( Stem("irresistível"), "irresist" );
	deepEqual( Stem("irresponsáveis"), "irrespons" );
	deepEqual( Stem("irresponsável"), "irrespons" );
	deepEqual( Stem("irreverência"), "irreverent" );
	deepEqual( Stem("irreverente"), "irreverent" );
	deepEqual( Stem("irreverentes"), "irreverent" );
	deepEqual( Stem("irreversível"), "irrevers" );
	deepEqual( Stem("irrigação"), "irrig" );
	deepEqual( Stem("irrigada"), "irrig" );
	deepEqual( Stem("irrisória"), "irrisór" );
	deepEqual( Stem("irrisório"), "irrisóri" );
	deepEqual( Stem("irrita"), "irrit" );
	deepEqual( Stem("irritabilidade"), "irrit" );
	deepEqual( Stem("irritação"), "irrit" );
	deepEqual( Stem("irritada"), "irrit" );
	deepEqual( Stem("irritadiças"), "irritadic" );
	deepEqual( Stem("irritado"), "irrit" );
	deepEqual( Stem("irritam"), "irrit" );
	deepEqual( Stem("irritando"), "irrit" );
	deepEqual( Stem("irritante"), "irrit" );
	deepEqual( Stem("irritava"), "irrit" );
	deepEqual( Stem("irrito"), "irrit" );
	deepEqual( Stem("irritou"), "irrit" );
	deepEqual( Stem("irrompeu"), "irromp" );
	deepEqual( Stem("irving"), "irving" );
	deepEqual( Stem("is"), "is" );
	deepEqual( Stem("isa"), "isa" );
	deepEqual( Stem("isabel"), "isabel" );
	deepEqual( Stem("isabela"), "isabel" );
	deepEqual( Stem("isabella"), "isabell" );
	deepEqual( Stem("isabelle"), "isabell" );
	deepEqual( Stem("isaías"), "isaí" );
	deepEqual( Stem("isaura"), "isaur" );
	deepEqual( Stem("isca"), "isca" );
	deepEqual( Stem("ischo"), "ischo" );
	deepEqual( Stem("isdn"), "isdn" );
	deepEqual( Stem("isenção"), "isençã" );
	deepEqual( Stem("isenta"), "isent" );
	deepEqual( Stem("ísis"), "ísis" );
	deepEqual( Stem("islâmica"), "islâm" );
	deepEqual( Stem("islamismo"), "islam" );
	deepEqual( Stem("ismael"), "ismael" );
	deepEqual( Stem("iso"), "iso" );
	deepEqual( Stem("isola"), "isol" );
	deepEqual( Stem("isolada"), "isol" );
	deepEqual( Stem("isoladamente"), "isol" );
	deepEqual( Stem("isoladas"), "isol" );
	deepEqual( Stem("isolado"), "isol" );
	deepEqual( Stem("isolados"), "isol" );
	deepEqual( Stem("isolamento"), "isol" );
	deepEqual( Stem("isolando"), "isol" );
	deepEqual( Stem("isolar"), "isol" );
	deepEqual( Stem("isolda"), "isold" );
	deepEqual( Stem("isomeride"), "isomerid" );
	deepEqual( Stem("israel"), "israel" );
	deepEqual( Stem("israelense"), "israelens" );
	deepEqual( Stem("israelenses"), "israelens" );
	deepEqual( Stem("israelita"), "israelit" );
	deepEqual( Stem("isso"), "isso" );
	deepEqual( Stem("istambul"), "istambul" );
	deepEqual( Stem("isto"), "isto" );
	deepEqual( Stem("istoe"), "isto" );
	deepEqual( Stem("istoé"), "isto" );
	deepEqual( Stem("istván"), "istván" );
	deepEqual( Stem("it"), "it" );
	deepEqual( Stem("itabira"), "itab" );
	deepEqual( Stem("itacarambi"), "itacaramb" );
	deepEqual( Stem("itacoatiara"), "itacoati" );
	deepEqual( Stem("itaim"), "itaim" );
	deepEqual( Stem("itaipu"), "itaipu" );
	deepEqual( Stem("itália"), "itál" );
	deepEqual( Stem("italiana"), "italian" );
	deepEqual( Stem("italianas"), "italian" );
	deepEqual( Stem("italiano"), "italian" );
	deepEqual( Stem("italianos"), "italian" );
	deepEqual( Stem("ítalo"), "ítal" );
	deepEqual( Stem("itamar"), "itam" );
	deepEqual( Stem("itamaraty"), "itamaraty" );
	deepEqual( Stem("itanhaém"), "itanhaém" );
	deepEqual( Stem("itapemirim"), "itapemirim" );
	deepEqual( Stem("itapetininga"), "itapetining" );
	deepEqual( Stem("itapipoca"), "itapipoc" );
	deepEqual( Stem("itapoan"), "itapoan" );
	deepEqual( Stem("itaporã"), "itaporã" );
	deepEqual( Stem("itatiba"), "itatib" );
	deepEqual( Stem("itaú"), "itaú" );
	deepEqual( Stem("itautec"), "itautec" );
	deepEqual( Stem("item"), "item" );
	deepEqual( Stem("itens"), "itens" );
	deepEqual( Stem("ítens"), "ítens" );
	deepEqual( Stem("itinerantes"), "itiner" );
	deepEqual( Stem("itr"), "itr" );
	deepEqual( Stem("itu"), "itu" );
	deepEqual( Stem("iva"), "iva" );
	deepEqual( Stem("ivan"), "ivan" );
	deepEqual( Stem("ivani"), "ivan" );
	deepEqual( Stem("ivanilda"), "ivanild" );
	deepEqual( Stem("ivens"), "ivens" );
	deepEqual( Stem("iversen"), "iversen" );
	deepEqual( Stem("ivo"), "ivo" );
	deepEqual( Stem("ivone"), "ivon" );
	deepEqual( Stem("ivonete"), "ivonet" );
	deepEqual( Stem("ivy"), "ivy" );
	deepEqual( Stem("ix"), "ix" );
	deepEqual( Stem("iya"), "iya" );
	deepEqual( Stem("izabel"), "izabel" );
	deepEqual( Stem("izabela"), "izabel" );
	deepEqual( Stem("izalco"), "izalc" );
	deepEqual( Stem("izolete"), "izolet" );
	deepEqual( Stem("j"), "j" );
	deepEqual( Stem("já"), "já" );
	deepEqual( Stem("jabaquara"), "jabaqu" );
	deepEqual( Stem("jabás"), "jabás" );
	deepEqual( Stem("jabor"), "jabor" );
	deepEqual( Stem("jaboulet"), "jaboulet" );
	deepEqual( Stem("jabuticabal"), "jabuticabal" );
	deepEqual( Stem("jabuticabeira"), "jabuticabeir" );
	deepEqual( Stem("jaçanã"), "jaçanã" );
	deepEqual( Stem("jacaré"), "jacar" );
	deepEqual( Stem("jacareí"), "jacar" );
	deepEqual( Stem("jacarepaguá"), "jacarepagu" );
	deepEqual( Stem("jacira"), "jac" );
	deepEqual( Stem("jack"), "jack" );
	deepEqual( Stem("jackie"), "jacki" );
	deepEqual( Stem("jacks"), "jacks" );
	deepEqual( Stem("jackson"), "jackson" );
	deepEqual( Stem("jacksonville"), "jacksonvill" );
	deepEqual( Stem("jacó"), "jac" );
	deepEqual( Stem("jacob"), "jacob" );
	deepEqual( Stem("jacobinos"), "jacobin" );
	deepEqual( Stem("jacqueline"), "jacquelin" );
	deepEqual( Stem("jacques"), "jacqu" );
	deepEqual( Stem("jáder"), "jád" );
	deepEqual( Stem("jaffa"), "jaff" );
	deepEqual( Stem("jagger"), "jagg" );
	deepEqual( Stem("jaguar"), "jagu" );
	deepEqual( Stem("jaguaribe"), "jaguarib" );
	deepEqual( Stem("jaguariúna"), "jaguariún" );
	deepEqual( Stem("jaguatirica"), "jaguatir" );
	deepEqual( Stem("jagunço"), "jagunc" );
	deepEqual( Stem("jah"), "jah" );
	deepEqual( Stem("jaicós"), "jaicós" );
	deepEqual( Stem("jaime"), "jaim" );
	deepEqual( Stem("jair"), "jair" );
	deepEqual( Stem("jairo"), "jair" );
	deepEqual( Stem("jakku"), "jakku" );
	deepEqual( Stem("jamaica"), "jamaic" );
	deepEqual( Stem("jamais"), "jam" );
	deepEqual( Stem("jambu"), "jambu" );
	deepEqual( Stem("jamelão"), "jamelã" );
	deepEqual( Stem("james"), "jam" );
	deepEqual( Stem("janailma"), "janailm" );
	deepEqual( Stem("jancsó"), "jancs" );
	deepEqual( Stem("jandira"), "jand" );
	deepEqual( Stem("jane"), "jan" );
	deepEqual( Stem("janeiro"), "janeir" );
	deepEqual( Stem("janela"), "janel" );
	deepEqual( Stem("janelas"), "janel" );
	deepEqual( Stem("jangadeiros"), "jangadeir" );
	deepEqual( Stem("jânia"), "jân" );
	deepEqual( Stem("janice"), "janic" );
	deepEqual( Stem("janine"), "janin" );
	deepEqual( Stem("jânio"), "jâni" );
	deepEqual( Stem("jansen"), "jansen" );
	deepEqual( Stem("jantamos"), "jant" );
	deepEqual( Stem("jantar"), "jant" );
	deepEqual( Stem("jantares"), "jant" );
	deepEqual( Stem("jantava"), "jant" );
	deepEqual( Stem("januária"), "január" );
	deepEqual( Stem("japão"), "japã" );
	deepEqual( Stem("japonês"), "japonês" );
	deepEqual( Stem("japonesa"), "japones" );
	deepEqual( Stem("japonesas"), "japones" );
	deepEqual( Stem("japoneses"), "japones" );
	deepEqual( Stem("jaqueira"), "jaqueir" );
	deepEqual( Stem("jaqueline"), "jaquelin" );
	deepEqual( Stem("jaqueta"), "jaquet" );
	deepEqual( Stem("jaquetas"), "jaquet" );
	deepEqual( Stem("jaraguá"), "jaragu" );
	deepEqual( Stem("jaraguari"), "jaraguar" );
	deepEqual( Stem("jararaca"), "jararac" );
	deepEqual( Stem("jararacas"), "jararac" );
	deepEqual( Stem("jarbas"), "jarb" );
	deepEqual( Stem("jardim"), "jardim" );
	deepEqual( Stem("jardineiros"), "jardineir" );
	deepEqual( Stem("jardins"), "jardins" );
	deepEqual( Stem("jares"), "jar" );
	deepEqual( Stem("jargão"), "jargã" );
	deepEqual( Stem("jarras"), "jarr" );
	deepEqual( Stem("jasim"), "jasim" );
	deepEqual( Stem("jatene"), "jaten" );
	deepEqual( Stem("játinha"), "játinh" );
	deepEqual( Stem("jatinho"), "jatinh" );
	deepEqual( Stem("jatinhos"), "jatinh" );
	deepEqual( Stem("jato"), "jat" );
	deepEqual( Stem("jatos"), "jat" );
	deepEqual( Stem("java"), "jav" );
	deepEqual( Stem("javier"), "javi" );
	deepEqual( Stem("jayme"), "jaym" );
	deepEqual( Stem("jazadji"), "jazadj" );
	deepEqual( Stem("jazem"), "jaz" );
	deepEqual( Stem("jazidas"), "jaz" );
	deepEqual( Stem("jazigo"), "jazig" );
	deepEqual( Stem("jazz"), "jazz" );
	deepEqual( Stem("jazzmania"), "jazzman" );
	deepEqual( Stem("jb"), "jb" );
	deepEqual( Stem("jean"), "jean" );
	deepEqual( Stem("jeanne"), "jeann" );
	deepEqual( Stem("jeans"), "jeans" );
	deepEqual( Stem("jecimar"), "jecim" );
	deepEqual( Stem("jeep"), "jeep" );
	deepEqual( Stem("jeff"), "jeff" );
	deepEqual( Stem("jefferson"), "jefferson" );
	deepEqual( Stem("jeffrey"), "jeffrey" );
	deepEqual( Stem("jegue"), "jeg" );
	deepEqual( Stem("jeitão"), "jeitã" );
	deepEqual( Stem("jeitinho"), "jeitinh" );
	deepEqual( Stem("jeito"), "jeit" );
	deepEqual( Stem("jenailto"), "jenailt" );
	deepEqual( Stem("jenipapo"), "jenipap" );
	deepEqual( Stem("jenkins"), "jenkins" );
	deepEqual( Stem("jennings"), "jennings" );
	deepEqual( Stem("jepson"), "jepson" );
	deepEqual( Stem("jequitimar"), "jequitim" );
	deepEqual( Stem("jequitinhonha"), "jequitinhonh" );
	deepEqual( Stem("jereissati"), "jereissat" );
	deepEqual( Stem("jeremy"), "jeremy" );
	deepEqual( Stem("jericó"), "jeric" );
	deepEqual( Stem("jersey"), "jersey" );
	deepEqual( Stem("jerusalém"), "jerusalém" );
	deepEqual( Stem("jesse"), "jess" );
	deepEqual( Stem("jesuíta"), "jesuít" );
	deepEqual( Stem("jesuítica"), "jesuít" );
	deepEqual( Stem("jesus"), "jesus" );
	deepEqual( Stem("jet"), "jet" );
	deepEqual( Stem("jheremias"), "jherem" );
	deepEqual( Stem("jiló"), "jil" );
	deepEqual( Stem("jim"), "jim" );
	deepEqual( Stem("jimenez"), "jimenez" );
	deepEqual( Stem("jimi"), "jim" );
	deepEqual( Stem("jimmy"), "jimmy" );
	deepEqual( Stem("jingles"), "jingl" );
	deepEqual( Stem("jipe"), "jip" );
	deepEqual( Stem("jipes"), "jip" );
	deepEqual( Stem("jk"), "jk" );
	deepEqual( Stem("jô"), "jô" );
	deepEqual( Stem("joalherias"), "joalh" );
	deepEqual( Stem("joana"), "joan" );
	deepEqual( Stem("joanna"), "joann" );
	deepEqual( Stem("joão"), "joã" );
	deepEqual( Stem("joaquim"), "joaquim" );
	deepEqual( Stem("joaquina"), "joaquin" );
	deepEqual( Stem("jobim"), "jobim" );
	deepEqual( Stem("jochen"), "jochen" );
	deepEqual( Stem("jodaciel"), "jodaciel" );
	deepEqual( Stem("jodie"), "jodi" );
	deepEqual( Stem("joe"), "joe" );
	deepEqual( Stem("joel"), "joel" );
	deepEqual( Stem("joelho"), "joelh" );
	deepEqual( Stem("joelhos"), "joelh" );
	deepEqual( Stem("jofre"), "jofr" );
	deepEqual( Stem("joga"), "jog" );
	deepEqual( Stem("jogada"), "jog" );
	deepEqual( Stem("jogadas"), "jog" );
	deepEqual( Stem("jogadinhas"), "jogadinh" );
	deepEqual( Stem("jogado"), "jog" );
	deepEqual( Stem("jogador"), "jogador" );
	deepEqual( Stem("jogadora"), "jogador" );
	deepEqual( Stem("jogadoras"), "jogador" );
	deepEqual( Stem("jogadores"), "jogador" );
	deepEqual( Stem("jogados"), "jog" );
	deepEqual( Stem("jogam"), "jog" );
	deepEqual( Stem("jogando"), "jog" );
	deepEqual( Stem("jogar"), "jog" );
	deepEqual( Stem("jogaram"), "jog" );
	deepEqual( Stem("jogaria"), "jog" );
	deepEqual( Stem("jogatina"), "jogatin" );
	deepEqual( Stem("jogava"), "jog" );
	deepEqual( Stem("jogo"), "jog" );
	deepEqual( Stem("jogos"), "jog" );
	deepEqual( Stem("jogou"), "jog" );
	deepEqual( Stem("joguei"), "jogu" );
	deepEqual( Stem("joguem"), "jogu" );
	deepEqual( Stem("johannes"), "johann" );
	deepEqual( Stem("john"), "john" );
	deepEqual( Stem("johnnie"), "johnni" );
	deepEqual( Stem("johnny"), "johnny" );
	deepEqual( Stem("johns"), "johns" );
	deepEqual( Stem("johnson"), "johnson" );
	deepEqual( Stem("johnstone"), "johnston" );
	deepEqual( Stem("jóia"), "jói" );
	deepEqual( Stem("jóias"), "jói" );
	deepEqual( Stem("joint"), "joint" );
	deepEqual( Stem("joinville"), "joinvill" );
	deepEqual( Stem("jonas"), "jon" );
	deepEqual( Stem("jonathan"), "jonathan" );
	deepEqual( Stem("jônathas"), "jônath" );
	deepEqual( Stem("jones"), "jon" );
	deepEqual( Stem("jong"), "jong" );
	deepEqual( Stem("jongo"), "jong" );
	deepEqual( Stem("joni"), "jon" );
	deepEqual( Stem("jônica"), "jônic" );
	deepEqual( Stem("jopi"), "jop" );
	deepEqual( Stem("jor"), "jor" );
	deepEqual( Stem("jordan"), "jordan" );
	deepEqual( Stem("jordanianos"), "jordanian" );
	deepEqual( Stem("jordão"), "jordã" );
	deepEqual( Stem("jorge"), "jorg" );
	deepEqual( Stem("jorgina"), "jorgin" );
	deepEqual( Stem("jornada"), "jorn" );
	deepEqual( Stem("jornadas"), "jorn" );
	deepEqual( Stem("jornais"), "jorn" );
	deepEqual( Stem("jornal"), "jornal" );
	deepEqual( Stem("jornaleiro"), "jornaleir" );
	deepEqual( Stem("jornalismo"), "jornal" );
	deepEqual( Stem("jornalista"), "jornal" );
	deepEqual( Stem("jornalistas"), "jornal" );
	deepEqual( Stem("jornalística"), "jornalíst" );
	deepEqual( Stem("jornalzinho"), "jornalzinh" );
	deepEqual( Stem("josaphat"), "josaphat" );
	deepEqual( Stem("josé"), "jos" );
	deepEqual( Stem("josefa"), "josef" );
	deepEqual( Stem("josefina"), "josefin" );
	deepEqual( Stem("joseph"), "joseph" );
	deepEqual( Stem("joshua"), "joshu" );
	deepEqual( Stem("jospin"), "jospin" );
	deepEqual( Stem("josué"), "josu" );
	deepEqual( Stem("jouglas"), "jougl" );
	deepEqual( Stem("journal"), "journal" );
	deepEqual( Stem("jova"), "jov" );
	deepEqual( Stem("jovelina"), "jovelin" );
	deepEqual( Stem("jovem"), "jov" );
	deepEqual( Stem("jovens"), "jovens" );
	deepEqual( Stem("jovenzinhas"), "jovenzinh" );
	deepEqual( Stem("jovial"), "jovial" );
	deepEqual( Stem("jovino"), "jovin" );
	deepEqual( Stem("joy"), "joy" );
	deepEqual( Stem("joyce"), "joyc" );
	deepEqual( Stem("jpx"), "jpx" );
	deepEqual( Stem("jr"), "jr" );
	deepEqual( Stem("juan"), "juan" );
	deepEqual( Stem("juarez"), "juarez" );
	deepEqual( Stem("juazeiro"), "juazeir" );
	deepEqual( Stem("jubarte"), "jubart" );
	deepEqual( Stem("juberli"), "juberl" );
	deepEqual( Stem("júbilo"), "júbil" );
	deepEqual( Stem("juca"), "juc" );
	deepEqual( Stem("jucélia"), "jucél" );
	deepEqual( Stem("judaica"), "judaic" );
	deepEqual( Stem("judaicas"), "judaic" );
	deepEqual( Stem("judaismo"), "judaism" );
	deepEqual( Stem("judaísmo"), "judaísm" );
	deepEqual( Stem("judéia"), "jud" );
	deepEqual( Stem("judeu"), "jud" );
	deepEqual( Stem("judeus"), "judeus" );
	deepEqual( Stem("judia"), "jud" );
	deepEqual( Stem("judias"), "jud" );
	deepEqual( Stem("judiciais"), "judic" );
	deepEqual( Stem("judicial"), "judicial" );
	deepEqual( Stem("judiciário"), "judiciári" );
	deepEqual( Stem("judith"), "judith" );
	deepEqual( Stem("jugo"), "jug" );
	deepEqual( Stem("jugular"), "jugul" );
	deepEqual( Stem("juilliard"), "juilliard" );
	deepEqual( Stem("juiz"), "juiz" );
	deepEqual( Stem("juíza"), "juíz" );
	deepEqual( Stem("juízes"), "juíz" );
	deepEqual( Stem("juízo"), "juíz" );
	deepEqual( Stem("julga"), "julg" );
	deepEqual( Stem("julgá"), "julg" );
	deepEqual( Stem("julgada"), "julg" );
	deepEqual( Stem("julgado"), "julg" );
	deepEqual( Stem("julgados"), "julg" );
	deepEqual( Stem("julgam"), "julg" );
	deepEqual( Stem("julgamento"), "julgament" );
	deepEqual( Stem("julgamentos"), "julgament" );
	deepEqual( Stem("julgando"), "julg" );
	deepEqual( Stem("julgar"), "julg" );
	deepEqual( Stem("julgaria"), "julg" );
	deepEqual( Stem("julgava"), "julg" );
	deepEqual( Stem("julgavam"), "julg" );
	deepEqual( Stem("julgo"), "julg" );
	deepEqual( Stem("julgou"), "julg" );
	deepEqual( Stem("julguei"), "julgu" );
	deepEqual( Stem("julho"), "julh" );
	deepEqual( Stem("julia"), "jul" );
	deepEqual( Stem("júlia"), "júl" );
	deepEqual( Stem("juliana"), "julian" );
	deepEqual( Stem("julianne"), "juliann" );
	deepEqual( Stem("juliano"), "julian" );
	deepEqual( Stem("julião"), "juliã" );
	deepEqual( Stem("julienne"), "julienn" );
	deepEqual( Stem("julieta"), "juliet" );
	deepEqual( Stem("julietas"), "juliet" );
	deepEqual( Stem("juliette"), "juliett" );
	deepEqual( Stem("julio"), "juli" );
	deepEqual( Stem("júlio"), "júli" );
	deepEqual( Stem("julita"), "julit" );
	deepEqual( Stem("jum"), "jum" );
	deepEqual( Stem("jumbo"), "jumb" );
	deepEqual( Stem("jumentos"), "jument" );
	deepEqual( Stem("jun"), "jun" );
	deepEqual( Stem("jundiaí"), "jundia" );
	deepEqual( Stem("jung"), "jung" );
	deepEqual( Stem("jungmann"), "jungmann" );
	deepEqual( Stem("junguiana"), "junguian" );
	deepEqual( Stem("junguianos"), "junguian" );
	deepEqual( Stem("junho"), "junh" );
	deepEqual( Stem("juninas"), "junin" );
	deepEqual( Stem("juninho"), "juninh" );
	deepEqual( Stem("junior"), "junior" );
	deepEqual( Stem("júnior"), "júnior" );
	deepEqual( Stem("junk"), "junk" );
	deepEqual( Stem("junkie"), "junki" );
	deepEqual( Stem("junot"), "junot" );
	deepEqual( Stem("junqueira"), "junqueir" );
	deepEqual( Stem("junta"), "junt" );
	deepEqual( Stem("juntado"), "junt" );
	deepEqual( Stem("juntam"), "junt" );
	deepEqual( Stem("juntamente"), "junt" );
	deepEqual( Stem("juntamos"), "junt" );
	deepEqual( Stem("juntando"), "junt" );
	deepEqual( Stem("juntar"), "junt" );
	deepEqual( Stem("juntaram"), "junt" );
	deepEqual( Stem("juntariam"), "junt" );
	deepEqual( Stem("juntas"), "junt" );
	deepEqual( Stem("junte"), "junt" );
	deepEqual( Stem("juntei"), "junt" );
	deepEqual( Stem("junto"), "junt" );
	deepEqual( Stem("juntos"), "junt" );
	deepEqual( Stem("juntou"), "junt" );
	deepEqual( Stem("júpiter"), "júpit" );
	deepEqual( Stem("juppé"), "jupp" );
	deepEqual( Stem("jura"), "jur" );
	deepEqual( Stem("juracy"), "juracy" );
	deepEqual( Stem("jurada"), "jur" );
	deepEqual( Stem("jurado"), "jur" );
	deepEqual( Stem("jurados"), "jur" );
	deepEqual( Stem("juramento"), "jurament" );
	deepEqual( Stem("jurassic"), "jurassic" );
	deepEqual( Stem("jurava"), "jur" );
	deepEqual( Stem("júri"), "júr" );
	deepEqual( Stem("jurídica"), "juríd" );
	deepEqual( Stem("juridicamente"), "jurid" );
	deepEqual( Stem("jurídicas"), "juríd" );
	deepEqual( Stem("jurídico"), "juríd" );
	deepEqual( Stem("jurídicos"), "juríd" );
	deepEqual( Stem("júris"), "júr" );
	deepEqual( Stem("jurisprudência"), "jurisprudent" );
	deepEqual( Stem("jurista"), "jurist" );
	deepEqual( Stem("juristas"), "jurist" );
	deepEqual( Stem("juro"), "jur" );
	deepEqual( Stem("juros"), "jur" );
	deepEqual( Stem("jurou"), "jur" );
	deepEqual( Stem("juruci"), "juruc" );
	deepEqual( Stem("jus"), "jus" );
	deepEqual( Stem("juscilene"), "juscilen" );
	deepEqual( Stem("jussara"), "juss" );
	deepEqual( Stem("just"), "just" );
	deepEqual( Stem("justa"), "just" );
	deepEqual( Stem("justamente"), "just" );
	deepEqual( Stem("justas"), "just" );
	deepEqual( Stem("justiça"), "justic" );
	deepEqual( Stem("justifica"), "justif" );
	deepEqual( Stem("justificada"), "justific" );
	deepEqual( Stem("justificado"), "justific" );
	deepEqual( Stem("justificados"), "justific" );
	deepEqual( Stem("justificam"), "justific" );
	deepEqual( Stem("justificar"), "justific" );
	deepEqual( Stem("justificaria"), "justific" );
	deepEqual( Stem("justificativa"), "justific" );
	deepEqual( Stem("justificativas"), "justific" );
	deepEqual( Stem("justificáveis"), "justific" );
	deepEqual( Stem("justificou"), "justific" );
	deepEqual( Stem("justina"), "justin" );
	deepEqual( Stem("justinha"), "justinh" );
	deepEqual( Stem("justino"), "justin" );
	deepEqual( Stem("justo"), "just" );
	deepEqual( Stem("justus"), "justus" );
	deepEqual( Stem("juvenil"), "juvenil" );
	deepEqual( Stem("juvenis"), "juven" );
	deepEqual( Stem("juventude"), "juventud" );
	deepEqual( Stem("k"), "k" );
	deepEqual( Stem("kabala"), "kabal" );
	deepEqual( Stem("kadett"), "kadett" );
	deepEqual( Stem("kafelnikov"), "kafelnikov" );
	deepEqual( Stem("kafka"), "kafk" );
	deepEqual( Stem("kafkiana"), "kafkian" );
	deepEqual( Stem("kai"), "kai" );
	deepEqual( Stem("kalachackra"), "kalachackr" );
	deepEqual( Stem("kalil"), "kalil" );
	deepEqual( Stem("kalilo"), "kalil" );
	deepEqual( Stem("kalina"), "kalin" );
	deepEqual( Stem("kalume"), "kalum" );
	deepEqual( Stem("kandir"), "kand" );
	deepEqual( Stem("karam"), "kar" );
	deepEqual( Stem("karan"), "karan" );
	deepEqual( Stem("karen"), "karen" );
	deepEqual( Stem("karina"), "karin" );
	deepEqual( Stem("karinas"), "karin" );
	deepEqual( Stem("karl"), "karl" );
	deepEqual( Stem("karla"), "karl" );
	deepEqual( Stem("karmali"), "karmal" );
	deepEqual( Stem("karman"), "karman" );
	deepEqual( Stem("karnak"), "karnak" );
	deepEqual( Stem("karni"), "karn" );
	deepEqual( Stem("karolinska"), "karolinsk" );
	deepEqual( Stem("kart"), "kart" );
	deepEqual( Stem("kasparov"), "kasparov" );
	deepEqual( Stem("katia"), "kat" );
	deepEqual( Stem("kátia"), "kát" );
	deepEqual( Stem("katiana"), "katian" );
	deepEqual( Stem("kauai"), "kaua" );
	deepEqual( Stem("kay"), "kay" );
	deepEqual( Stem("kbytes"), "kbytes" );
	deepEqual( Stem("kelly"), "kelly" );
	deepEqual( Stem("kelvin"), "kelvin" );
	deepEqual( Stem("kemal"), "kemal" );
	deepEqual( Stem("kennedy"), "kennedy" );
	deepEqual( Stem("kenoma"), "kenom" );
	deepEqual( Stem("kent"), "kent" );
	deepEqual( Stem("kenzo"), "kenz" );
	deepEqual( Stem("kepler"), "kepl" );
	deepEqual( Stem("kerly"), "kerly" );
	deepEqual( Stem("ketchup"), "ketchup" );
	deepEqual( Stem("kettering"), "kettering" );
	deepEqual( Stem("kfouri"), "kfour" );
	deepEqual( Stem("kg"), "kg" );
	deepEqual( Stem("khamis"), "kham" );
	deepEqual( Stem("khmer"), "khmer" );
	deepEqual( Stem("khrunichev"), "khrunichev" );
	deepEqual( Stem("kiberon"), "kiberon" );
	deepEqual( Stem("kid"), "kid" );
	deepEqual( Stem("kids"), "kids" );
	deepEqual( Stem("kieffer"), "kieff" );
	deepEqual( Stem("kihara"), "kih" );
	deepEqual( Stem("kilimanjaro"), "kilimanjar" );
	deepEqual( Stem("kim"), "kim" );
	deepEqual( Stem("kingdom"), "kingdom" );
	deepEqual( Stem("kingsman"), "kingsman" );
	deepEqual( Stem("kinjô"), "kinjô" );
	deepEqual( Stem("kinnaur"), "kinnaur" );
	deepEqual( Stem("kinski"), "kinsk" );
	deepEqual( Stem("kipling"), "kipling" );
	deepEqual( Stem("kiss"), "kiss" );
	deepEqual( Stem("kisser"), "kiss" );
	deepEqual( Stem("kissinger"), "kissing" );
	deepEqual( Stem("kissner"), "kissn" );
	deepEqual( Stem("kits"), "kits" );
	deepEqual( Stem("kívia"), "kív" );
	deepEqual( Stem("klaus"), "klaus" );
	deepEqual( Stem("kléber"), "kléb" );
	deepEqual( Stem("klein"), "klein" );
	deepEqual( Stem("kleinübing"), "kleinübing" );
	deepEqual( Stem("klintowitz"), "klintowitz" );
	deepEqual( Stem("klm"), "klm" );
	deepEqual( Stem("km"), "km" );
	deepEqual( Stem("knol"), "knol" );
	deepEqual( Stem("knoll"), "knoll" );
	deepEqual( Stem("know"), "know" );
	deepEqual( Stem("knox"), "knox" );
	deepEqual( Stem("koch"), "koch" );
	deepEqual( Stem("kohl"), "kohl" );
	deepEqual( Stem("kohoutek"), "kohoutek" );
	deepEqual( Stem("kombi"), "komb" );
	deepEqual( Stem("kong"), "kong" );
	deepEqual( Stem("korda"), "kord" );
	deepEqual( Stem("korn"), "korn" );
	deepEqual( Stem("kosmos"), "kosm" );
	deepEqual( Stem("kowloon"), "kowloon" );
	deepEqual( Stem("kozo"), "koz" );
	deepEqual( Stem("krafer"), "kraf" );
	deepEqual( Stem("kraft"), "kraft" );
	deepEqual( Stem("kramer"), "kram" );
	deepEqual( Stem("krause"), "kraus" );
	deepEqual( Stem("krichanã"), "krichanã" );
	deepEqual( Stem("kruchev"), "kruchev" );
	deepEqual( Stem("kruse"), "krus" );
	deepEqual( Stem("krymchantowski"), "krymchantowsk" );
	deepEqual( Stem("ksyvickis"), "ksyvick" );
	deepEqual( Stem("kts"), "kts" );
	deepEqual( Stem("kuala"), "kual" );
	deepEqual( Stem("kubitscheck"), "kubitscheck" );
	deepEqual( Stem("kuerten"), "kuerten" );
	deepEqual( Stem("kuljis"), "kulj" );
	deepEqual( Stem("kullu"), "kullu" );
	deepEqual( Stem("kung"), "kung" );
	deepEqual( Stem("kupfer"), "kupf" );
	deepEqual( Stem("kür"), "kür" );
	deepEqual( Stem("kurosawa"), "kurosaw" );
	deepEqual( Stem("kurt"), "kurt" );
	deepEqual( Stem("kuryakanys"), "kuryakanys" );
	deepEqual( Stem("kuster"), "kust" );
	deepEqual( Stem("l"), "l" );
	deepEqual( Stem("la"), "la" );
	deepEqual( Stem("lá"), "lá" );
	deepEqual( Stem("lã"), "lã" );
	deepEqual( Stem("label"), "label" );
	deepEqual( Stem("lábia"), "láb" );
	deepEqual( Stem("labial"), "labial" );
	deepEqual( Stem("lábios"), "lábi" );
	deepEqual( Stem("labirintite"), "labirintit" );
	deepEqual( Stem("labirinto"), "labirint" );
	deepEqual( Stem("lable"), "labl" );
	deepEqual( Stem("laboratoriais"), "laboratori" );
	deepEqual( Stem("laboratório"), "laboratóri" );
	deepEqual( Stem("laboratórios"), "laboratóri" );
	deepEqual( Stem("laboratory"), "laboratory" );
	deepEqual( Stem("labore"), "labor" );
	deepEqual( Stem("lacerda"), "lacerd" );
	deepEqual( Stem("lacônico"), "lacôn" );
	deepEqual( Stem("laços"), "lac" );
	deepEqual( Stem("lacração"), "lacraçã" );
	deepEqual( Stem("lacrado"), "lacr" );
	deepEqual( Stem("lacrimais"), "lacrim" );
	deepEqual( Stem("lacrimal"), "lacrimal" );
	deepEqual( Stem("lacroix"), "lacroix" );
	deepEqual( Stem("lacta"), "lact" );
	deepEqual( Stem("lacuna"), "lacun" );
	deepEqual( Stem("lacunas"), "lacun" );
	deepEqual( Stem("ladainha"), "ladainh" );
	deepEqual( Stem("ladak"), "ladak" );
	deepEqual( Stem("ladakh"), "ladakh" );
	deepEqual( Stem("ladário"), "ladári" );
	deepEqual( Stem("ladeada"), "lad" );
	deepEqual( Stem("ladeado"), "lad" );
	deepEqual( Stem("ladeira"), "ladeir" );
	deepEqual( Stem("lado"), "lad" );
	deepEqual( Stem("lados"), "lad" );
	deepEqual( Stem("ladrão"), "ladrã" );
	deepEqual( Stem("ladrões"), "ladrõ" );
	deepEqual( Stem("lady"), "lady" );
	deepEqual( Stem("laender"), "laend" );
	deepEqual( Stem("lafayette"), "lafayett" );
	deepEqual( Stem("lafemina"), "lafemin" );
	deepEqual( Stem("lafon"), "lafon" );
	deepEqual( Stem("lagartixa"), "lagartix" );
	deepEqual( Stem("lagarto"), "lagart" );
	deepEqual( Stem("lagartos"), "lagart" );
	deepEqual( Stem("lago"), "lag" );
	deepEqual( Stem("lagoa"), "lago" );
	deepEqual( Stem("lagoas"), "lago" );
	deepEqual( Stem("lagos"), "lag" );
	deepEqual( Stem("lágrimas"), "lágrim" );
	deepEqual( Stem("lahaul"), "lahaul" );
	deepEqual( Stem("laia"), "lai" );
	deepEqual( Stem("lair"), "lair" );
	deepEqual( Stem("laissez"), "laissez" );
	deepEqual( Stem("lake"), "lak" );
	deepEqual( Stem("lama"), "lam" );
	deepEqual( Stem("lamaísmo"), "lamaísm" );
	deepEqual( Stem("lamarca"), "lamarc" );
	deepEqual( Stem("lambaeróbica"), "lambaerób" );
	deepEqual( Stem("lambendo"), "lamb" );
	deepEqual( Stem("lamber"), "lamb" );
	deepEqual( Stem("lamborghini"), "lamborghin" );
	deepEqual( Stem("lambuzadas"), "lambuz" );
	deepEqual( Stem("lameira"), "lameir" );
	deepEqual( Stem("lamenta"), "lament" );
	deepEqual( Stem("lamentações"), "lament" );
	deepEqual( Stem("lamentam"), "lament" );
	deepEqual( Stem("lamentava"), "lament" );
	deepEqual( Stem("lamentável"), "lament" );
	deepEqual( Stem("lamento"), "lament" );
	deepEqual( Stem("lamentou"), "lament" );
	deepEqual( Stem("lâmina"), "lâmin" );
	deepEqual( Stem("laminados"), "lamin" );
	deepEqual( Stem("lamm"), "lamm" );
	deepEqual( Stem("lâmpada"), "lâmp" );
	deepEqual( Stem("lâmpadas"), "lâmp" );
	deepEqual( Stem("lampião"), "lampiã" );
	deepEqual( Stem("lampiões"), "lampiõ" );
	deepEqual( Stem("lampreia"), "lampr" );
	deepEqual( Stem("lampréia"), "lampr" );
	deepEqual( Stem("lamu"), "lamu" );
	deepEqual( Stem("lamúria"), "lamúr" );
	deepEqual( Stem("lamurioso"), "lamuri" );
	deepEqual( Stem("lan"), "lan" );
	deepEqual( Stem("lança"), "lanc" );
	deepEqual( Stem("lançá"), "lanc" );
	deepEqual( Stem("lançada"), "lanc" );
	deepEqual( Stem("lançadas"), "lanc" );
	deepEqual( Stem("lançado"), "lanc" );
	deepEqual( Stem("lançados"), "lanc" );
	deepEqual( Stem("lançam"), "lanc" );
	deepEqual( Stem("lançamento"), "lançament" );
	deepEqual( Stem("lançamentos"), "lançament" );
	deepEqual( Stem("lançando"), "lanc" );
	deepEqual( Stem("lançar"), "lanc" );
	deepEqual( Stem("lançará"), "lanc" );
	deepEqual( Stem("lançaram"), "lanc" );
	deepEqual( Stem("lancashire"), "lancashir" );
	deepEqual( Stem("lançava"), "lanc" );
	deepEqual( Stem("lançavam"), "lanc" );
	deepEqual( Stem("lance"), "lanc" );
	deepEqual( Stem("lancelotti"), "lancelott" );
	deepEqual( Stem("lances"), "lanc" );
	deepEqual( Stem("lancha"), "lanch" );
	deepEqual( Stem("lanchar"), "lanch" );
	deepEqual( Stem("lanchas"), "lanch" );
	deepEqual( Stem("lanche"), "lanch" );
	deepEqual( Stem("lanches"), "lanch" );
	deepEqual( Stem("lanchonete"), "lanchonet" );
	deepEqual( Stem("lanchonetes"), "lanchonet" );
	deepEqual( Stem("lancôme"), "lancôm" );
	deepEqual( Stem("lançou"), "lanc" );
	deepEqual( Stem("land"), "land" );
	deepEqual( Stem("landim"), "landim" );
	deepEqual( Stem("lane"), "lan" );
	deepEqual( Stem("lanterna"), "lantern" );
	deepEqual( Stem("lantier"), "lanti" );
	deepEqual( Stem("lapa"), "lap" );
	deepEqual( Stem("lapidar"), "lapid" );
	deepEqual( Stem("lapidaram"), "lapid" );
	deepEqual( Stem("lapierre"), "lapierr" );
	deepEqual( Stem("lápis"), "láp" );
	deepEqual( Stem("laptop"), "laptop" );
	deepEqual( Stem("laqueadura"), "laqueadur" );
	deepEqual( Stem("lar"), "lar" );
	deepEqual( Stem("lara"), "lar" );
	deepEqual( Stem("laranja"), "laranj" );
	deepEqual( Stem("laranjas"), "laranj" );
	deepEqual( Stem("laranjeira"), "laranjeir" );
	deepEqual( Stem("laranjeiras"), "laranjeir" );
	deepEqual( Stem("lares"), "lar" );
	deepEqual( Stem("larga"), "larg" );
	deepEqual( Stem("largada"), "larg" );
	deepEqual( Stem("largadas"), "larg" );
	deepEqual( Stem("largamente"), "larg" );
	deepEqual( Stem("largamos"), "larg" );
	deepEqual( Stem("largar"), "larg" );
	deepEqual( Stem("largaria"), "larg" );
	deepEqual( Stem("largas"), "larg" );
	deepEqual( Stem("largava"), "larg" );
	deepEqual( Stem("largo"), "larg" );
	deepEqual( Stem("largou"), "larg" );
	deepEqual( Stem("larguei"), "largu" );
	deepEqual( Stem("largura"), "largur" );
	deepEqual( Stem("lari"), "lar" );
	deepEqual( Stem("larissa"), "lariss" );
	deepEqual( Stem("larry"), "larry" );
	deepEqual( Stem("larsson"), "larsson" );
	deepEqual( Stem("las"), "las" );
	deepEqual( Stem("lascado"), "lasc" );
	deepEqual( Stem("laser"), "las" );
	deepEqual( Stem("lastro"), "lastr" );
	deepEqual( Stem("laszlo"), "laszl" );
	deepEqual( Stem("lata"), "lat" );
	deepEqual( Stem("lataria"), "lat" );
	deepEqual( Stem("latas"), "lat" );
	deepEqual( Stem("lateral"), "lateral" );
	deepEqual( Stem("látex"), "látex" );
	deepEqual( Stem("laticínio"), "laticíni" );
	deepEqual( Stem("laticínios"), "laticíni" );
	deepEqual( Stem("latifúndio"), "latifúndi" );
	deepEqual( Stem("latim"), "latim" );
	deepEqual( Stem("latina"), "latin" );
	deepEqual( Stem("latinas"), "latin" );
	deepEqual( Stem("latino"), "latin" );
	deepEqual( Stem("latinos"), "latin" );
	deepEqual( Stem("latitude"), "latitud" );
	deepEqual( Stem("latorraca"), "latorrac" );
	deepEqual( Stem("latrocínio"), "latrocíni" );
	deepEqual( Stem("lattari"), "lattar" );
	deepEqual( Stem("lauda"), "laud" );
	deepEqual( Stem("laudas"), "laud" );
	deepEqual( Stem("lauder"), "laud" );
	deepEqual( Stem("lauderdale"), "lauderdal" );
	deepEqual( Stem("laudo"), "laud" );
	deepEqual( Stem("laudos"), "laud" );
	deepEqual( Stem("laura"), "laur" );
	deepEqual( Stem("lauren"), "lauren" );
	deepEqual( Stem("laurence"), "laurenc" );
	deepEqual( Stem("lauro"), "laur" );
	deepEqual( Stem("lava"), "lav" );
	deepEqual( Stem("lavabo"), "lavab" );
	deepEqual( Stem("lavada"), "lav" );
	deepEqual( Stem("lavadeira"), "lavadeir" );
	deepEqual( Stem("lavado"), "lav" );
	deepEqual( Stem("lavadora"), "lavador" );
	deepEqual( Stem("lavagem"), "lavag" );
	deepEqual( Stem("lavagnoli"), "lavagnol" );
	deepEqual( Stem("lavam"), "lav" );
	deepEqual( Stem("lavanda"), "lavand" );
	deepEqual( Stem("lavanderia"), "lavand" );
	deepEqual( Stem("lavando"), "lav" );
	deepEqual( Stem("lavar"), "lav" );
	deepEqual( Stem("lavariam"), "lav" );
	deepEqual( Stem("lavigne"), "lavign" );
	deepEqual( Stem("lavínia"), "lavín" );
	deepEqual( Stem("lavo"), "lav" );
	deepEqual( Stem("lavou"), "lav" );
	deepEqual( Stem("lavoura"), "lavour" );
	deepEqual( Stem("lavouras"), "lavour" );
	deepEqual( Stem("lavra"), "lavr" );
	deepEqual( Stem("lavrada"), "lavr" );
	deepEqual( Stem("lavradora"), "lavrador" );
	deepEqual( Stem("lavrar"), "lavr" );
	deepEqual( Stem("lavrenti"), "lavrent" );
	deepEqual( Stem("lawrence"), "lawrenc" );
	deepEqual( Stem("layers"), "layers" );
	deepEqual( Stem("lázaro"), "lázar" );
	deepEqual( Stem("lazer"), "laz" );
	deepEqual( Stem("lazutkin"), "lazutkin" );
	deepEqual( Stem("le"), "le" );
	deepEqual( Stem("lê"), "lê" );
	deepEqual( Stem("lea"), "lea" );
	deepEqual( Stem("leah"), "leah" );
	deepEqual( Stem("leahy"), "leahy" );
	deepEqual( Stem("leais"), "lea" );
	deepEqual( Stem("leal"), "leal" );
	deepEqual( Stem("lealdade"), "lealdad" );
	deepEqual( Stem("leandra"), "leandr" );
	deepEqual( Stem("leandro"), "leandr" );
	deepEqual( Stem("leão"), "leã" );
	deepEqual( Stem("learning"), "learning" );
	deepEqual( Stem("leasing"), "leasing" );
	deepEqual( Stem("leciona"), "lecion" );
	deepEqual( Stem("lecionou"), "lecion" );
	deepEqual( Stem("leco"), "lec" );
	deepEqual( Stem("lecran"), "lecran" );
	deepEqual( Stem("leda"), "led" );
	deepEqual( Stem("lee"), "lee" );
	deepEqual( Stem("lêem"), "lêem" );
	deepEqual( Stem("legado"), "leg" );
	deepEqual( Stem("legais"), "leg" );
	deepEqual( Stem("legal"), "legal" );
	deepEqual( Stem("legalidade"), "legal" );
	deepEqual( Stem("legalizam"), "legaliz" );
	deepEqual( Stem("legalizar"), "legaliz" );
	deepEqual( Stem("legalmente"), "legal" );
	deepEqual( Stem("legará"), "leg" );
	deepEqual( Stem("legenda"), "legend" );
	deepEqual( Stem("legendário"), "legendári" );
	deepEqual( Stem("legião"), "legiã" );
	deepEqual( Stem("legiões"), "legiõ" );
	deepEqual( Stem("legislação"), "legisl" );
	deepEqual( Stem("legisladores"), "legisl" );
	deepEqual( Stem("legislando"), "legisl" );
	deepEqual( Stem("legislar"), "legisl" );
	deepEqual( Stem("legislativa"), "legisl" );
	deepEqual( Stem("legislativas"), "legisl" );
	deepEqual( Stem("legislativo"), "legisl" );
	deepEqual( Stem("legista"), "legist" );
	deepEqual( Stem("legistas"), "legist" );
	deepEqual( Stem("legítima"), "legítim" );
	deepEqual( Stem("legitimação"), "legitim" );
	deepEqual( Stem("legitimados"), "legitim" );
	deepEqual( Stem("legitimam"), "legitim" );
	deepEqual( Stem("legitimar"), "legitim" );
	deepEqual( Stem("legitimidade"), "legitim" );
	deepEqual( Stem("legítimo"), "legítim" );
	deepEqual( Stem("legítimos"), "legít" );
	deepEqual( Stem("legumes"), "legum" );
	deepEqual( Stem("lei"), "lei" );
	deepEqual( Stem("leia"), "lei" );
	deepEqual( Stem("leide"), "leid" );
	deepEqual( Stem("leidivânia"), "leidivân" );
	deepEqual( Stem("leiga"), "leig" );
	deepEqual( Stem("leigh"), "leigh" );
	deepEqual( Stem("leigo"), "leig" );
	deepEqual( Stem("leigos"), "leig" );
	deepEqual( Stem("leila"), "leil" );
	deepEqual( Stem("leilão"), "leilã" );
	deepEqual( Stem("leiloá"), "leilo" );
	deepEqual( Stem("leiloado"), "leilo" );
	deepEqual( Stem("leiloados"), "leilo" );
	deepEqual( Stem("leiloeiro"), "leiloeir" );
	deepEqual( Stem("leio"), "lei" );
	deepEqual( Stem("leis"), "leis" );
	deepEqual( Stem("leitão"), "leitã" );
	deepEqual( Stem("leite"), "leit" );
	deepEqual( Stem("leiteiro"), "leiteir" );
	deepEqual( Stem("leito"), "leit" );
	deepEqual( Stem("leitor"), "leitor" );
	deepEqual( Stem("leitores"), "leitor" );
	deepEqual( Stem("leitos"), "leit" );
	deepEqual( Stem("leitura"), "leitur" );
	deepEqual( Stem("leituras"), "leitur" );
	deepEqual( Stem("lélio"), "léli" );
	deepEqual( Stem("lellis"), "lell" );
	deepEqual( Stem("lema"), "lem" );
	deepEqual( Stem("lemann"), "lemann" );
	deepEqual( Stem("lembra"), "lembr" );
	deepEqual( Stem("lembrada"), "lembr" );
	deepEqual( Stem("lembradas"), "lembr" );
	deepEqual( Stem("lembrados"), "lembr" );
	deepEqual( Stem("lembram"), "lembr" );
	deepEqual( Stem("lembrança"), "lembranc" );
	deepEqual( Stem("lembranças"), "lembranc" );
	deepEqual( Stem("lembrando"), "lembr" );
	deepEqual( Stem("lembrar"), "lembr" );
	deepEqual( Stem("lembrava"), "lembr" );
	deepEqual( Stem("lembravam"), "lembr" );
	deepEqual( Stem("lembre"), "lembr" );
	deepEqual( Stem("lembremos"), "lembr" );
	deepEqual( Stem("lembrete"), "lembret" );
	deepEqual( Stem("lembro"), "lembr" );
	deepEqual( Stem("lembrou"), "lembr" );
	deepEqual( Stem("leme"), "lem" );
	deepEqual( Stem("lemgruber"), "lemgrub" );
	deepEqual( Stem("lemir"), "lem" );
	deepEqual( Stem("lemos"), "lem" );
	deepEqual( Stem("leñas"), "leñ" );
	deepEqual( Stem("lenço"), "lenc" );
	deepEqual( Stem("lençóis"), "lençó" );
	deepEqual( Stem("lenços"), "lenc" );
	deepEqual( Stem("lenda"), "lend" );
	deepEqual( Stem("lendária"), "lendár" );
	deepEqual( Stem("lendário"), "lendári" );
	deepEqual( Stem("lendas"), "lend" );
	deepEqual( Stem("lendl"), "lendl" );
	deepEqual( Stem("lendo"), "lend" );
	deepEqual( Stem("lenha"), "lenh" );
	deepEqual( Stem("leniente"), "lenient" );
	deepEqual( Stem("lenientes"), "lenient" );
	deepEqual( Stem("lenin"), "lenin" );
	deepEqual( Stem("lênin"), "lênin" );
	deepEqual( Stem("lenita"), "lenit" );
	deepEqual( Stem("lennon"), "lennon" );
	deepEqual( Stem("lens"), "lens" );
	deepEqual( Stem("lenta"), "lent" );
	deepEqual( Stem("lentamente"), "lent" );
	deepEqual( Stem("lentas"), "lent" );
	deepEqual( Stem("lente"), "lent" );
	deepEqual( Stem("lentes"), "lent" );
	deepEqual( Stem("lentidão"), "lentidã" );
	deepEqual( Stem("lentidões"), "lentidõ" );
	deepEqual( Stem("lentilha"), "lentilh" );
	deepEqual( Stem("lentilhas"), "lentilh" );
	deepEqual( Stem("lento"), "lent" );
	deepEqual( Stem("lentos"), "lent" );
	deepEqual( Stem("léo"), "léo" );
	deepEqual( Stem("leões"), "leõ" );
	deepEqual( Stem("leon"), "leon" );
	deepEqual( Stem("leonardo"), "leonard" );
	deepEqual( Stem("leonel"), "leonel" );
	deepEqual( Stem("leonor"), "leonor" );
	deepEqual( Stem("leopoldina"), "leopoldin" );
	deepEqual( Stem("leopoldo"), "leopold" );
	deepEqual( Stem("leopolldo"), "leopolld" );
	deepEqual( Stem("leporaci"), "leporac" );
	deepEqual( Stem("leptin"), "leptin" );
	deepEqual( Stem("leque"), "lequ" );
	deepEqual( Stem("ler"), "ler" );
	deepEqual( Stem("leram"), "ler" );
	deepEqual( Stem("lerner"), "lern" );
	deepEqual( Stem("les"), "les" );
	deepEqual( Stem("lesado"), "les" );
	deepEqual( Stem("lesados"), "les" );
	deepEqual( Stem("lesão"), "lesã" );
	deepEqual( Stem("lesar"), "les" );
	deepEqual( Stem("lesaram"), "les" );
	deepEqual( Stem("lesbian"), "lesbian" );
	deepEqual( Stem("lésbica"), "lésbic" );
	deepEqual( Stem("lésbicas"), "lésbic" );
	deepEqual( Stem("lesivo"), "lesiv" );
	deepEqual( Stem("leslie"), "lesli" );
	deepEqual( Stem("lesões"), "lesõ" );
	deepEqual( Stem("lesou"), "les" );
	deepEqual( Stem("lessa"), "less" );
	deepEqual( Stem("lesse"), "less" );
	deepEqual( Stem("leste"), "lest" );
	deepEqual( Stem("letais"), "let" );
	deepEqual( Stem("letal"), "letal" );
	deepEqual( Stem("letivo"), "letiv" );
	deepEqual( Stem("letra"), "letr" );
	deepEqual( Stem("letrado"), "letr" );
	deepEqual( Stem("letrados"), "letr" );
	deepEqual( Stem("letras"), "letr" );
	deepEqual( Stem("lettieri"), "lettier" );
	deepEqual( Stem("leu"), "leu" );
	deepEqual( Stem("leucemia"), "leucem" );
	deepEqual( Stem("leuiwyato"), "leuiwyat" );
	deepEqual( Stem("leuzzi"), "leuzz" );
	deepEqual( Stem("leva"), "lev" );
	deepEqual( Stem("levá"), "lev" );
	deepEqual( Stem("levada"), "lev" );
	deepEqual( Stem("levadas"), "lev" );
	deepEqual( Stem("levado"), "lev" );
	deepEqual( Stem("levados"), "lev" );
	deepEqual( Stem("levam"), "lev" );
	deepEqual( Stem("levamos"), "lev" );
	deepEqual( Stem("levando"), "lev" );
	deepEqual( Stem("levanta"), "levant" );
	deepEqual( Stem("levantada"), "levant" );
	deepEqual( Stem("levantadas"), "levant" );
	deepEqual( Stem("levantado"), "levant" );
	deepEqual( Stem("levantador"), "levant" );
	deepEqual( Stem("levantados"), "levant" );
	deepEqual( Stem("levantam"), "levant" );
	deepEqual( Stem("levantamento"), "levant" );
	deepEqual( Stem("levantamentos"), "levant" );
	deepEqual( Stem("levantamos"), "levant" );
	deepEqual( Stem("levantando"), "levant" );
	deepEqual( Stem("levantar"), "levant" );
	deepEqual( Stem("levantará"), "levant" );
	deepEqual( Stem("levantaram"), "levant" );
	deepEqual( Stem("levantaremos"), "levant" );
	deepEqual( Stem("levantava"), "levant" );
	deepEqual( Stem("levantavam"), "levant" );
	deepEqual( Stem("levante"), "levant" );
	deepEqual( Stem("levantei"), "levant" );
	deepEqual( Stem("levantou"), "levant" );
	deepEqual( Stem("levar"), "lev" );
	deepEqual( Stem("levará"), "lev" );
	deepEqual( Stem("levaram"), "lev" );
	deepEqual( Stem("levarão"), "lev" );
	deepEqual( Stem("levaria"), "lev" );
	deepEqual( Stem("levas"), "lev" );
	deepEqual( Stem("levava"), "lev" );
	deepEqual( Stem("levavam"), "lev" );
	deepEqual( Stem("leve"), "lev" );
	deepEqual( Stem("leveger"), "leveg" );
	deepEqual( Stem("levei"), "lev" );
	deepEqual( Stem("level"), "level" );
	deepEqual( Stem("levem"), "lev" );
	deepEqual( Stem("levemente"), "levement" );
	deepEqual( Stem("lever"), "lev" );
	deepEqual( Stem("leves"), "lev" );
	deepEqual( Stem("leveza"), "levez" );
	deepEqual( Stem("levi"), "lev" );
	deepEqual( Stem("levin"), "levin" );
	deepEqual( Stem("levitação"), "levit" );
	deepEqual( Stem("levitsky"), "levitsky" );
	deepEqual( Stem("levo"), "lev" );
	deepEqual( Stem("levou"), "lev" );
	deepEqual( Stem("levy"), "levy" );
	deepEqual( Stem("lewgoy"), "lewgoy" );
	deepEqual( Stem("lewis"), "lew" );
	deepEqual( Stem("lexotan"), "lexotan" );
	deepEqual( Stem("lexus"), "lexus" );
	deepEqual( Stem("lftms"), "lftms" );
	deepEqual( Stem("lhe"), "lhe" );
	deepEqual( Stem("lhes"), "lhes" );
	deepEqual( Stem("lhores"), "lhor" );
	deepEqual( Stem("li"), "li" );
	deepEqual( Stem("lia"), "lia" );
	deepEqual( Stem("liana"), "lian" );
	deepEqual( Stem("liane"), "lian" );
	deepEqual( Stem("lias"), "lias" );
	deepEqual( Stem("libanês"), "libanês" );
	deepEqual( Stem("libanesa"), "libanes" );
	deepEqual( Stem("libaneses"), "libanes" );
	deepEqual( Stem("libânio"), "libâni" );
	deepEqual( Stem("líbano"), "líban" );
	deepEqual( Stem("libé"), "lib" );
	deepEqual( Stem("libera"), "lib" );
	deepEqual( Stem("liberá"), "lib" );
	deepEqual( Stem("liberação"), "liber" );
	deepEqual( Stem("liberada"), "liber" );
	deepEqual( Stem("liberadas"), "liber" );
	deepEqual( Stem("liberado"), "liber" );
	deepEqual( Stem("liberados"), "liber" );
	deepEqual( Stem("liberais"), "liber" );
	deepEqual( Stem("liberal"), "liberal" );
	deepEqual( Stem("liberalidade"), "liberal" );
	deepEqual( Stem("liberalismo"), "liberal" );
	deepEqual( Stem("liberalização"), "liberaliz" );
	deepEqual( Stem("liberalizar"), "liberaliz" );
	deepEqual( Stem("liberalizem"), "liberaliz" );
	deepEqual( Stem("liberam"), "lib" );
	deepEqual( Stem("liberar"), "liber" );
	deepEqual( Stem("liberaria"), "liber" );
	deepEqual( Stem("liberasse"), "liber" );
	deepEqual( Stem("liberation"), "liberation" );
	deepEqual( Stem("liberato"), "liberat" );
	deepEqual( Stem("liberava"), "liber" );
	deepEqual( Stem("liberdade"), "liberdad" );
	deepEqual( Stem("liberdades"), "liberdad" );
	deepEqual( Stem("liberou"), "liber" );
	deepEqual( Stem("libertação"), "libert" );
	deepEqual( Stem("libertado"), "libert" );
	deepEqual( Stem("libertador"), "libert" );
	deepEqual( Stem("libertadora"), "libert" );
	deepEqual( Stem("libertados"), "libert" );
	deepEqual( Stem("libertar"), "libert" );
	deepEqual( Stem("libertário"), "libertári" );
	deepEqual( Stem("libertários"), "libertári" );
	deepEqual( Stem("libertos"), "libert" );
	deepEqual( Stem("libido"), "lib" );
	deepEqual( Stem("libra"), "libr" );
	deepEqual( Stem("libretto"), "librett" );
	deepEqual( Stem("lição"), "liçã" );
	deepEqual( Stem("licença"), "licenc" );
	deepEqual( Stem("licenças"), "licenc" );
	deepEqual( Stem("licenciado"), "licenc" );
	deepEqual( Stem("licenciamento"), "licenc" );
	deepEqual( Stem("licenciamentos"), "licenc" );
	deepEqual( Stem("licenciar"), "licenc" );
	deepEqual( Stem("liceu"), "lic" );
	deepEqual( Stem("licitação"), "licit" );
	deepEqual( Stem("licitações"), "licit" );
	deepEqual( Stem("lições"), "liçõ" );
	deepEqual( Stem("licores"), "licor" );
	deepEqual( Stem("lida"), "lid" );
	deepEqual( Stem("lidador"), "lidador" );
	deepEqual( Stem("lidam"), "lid" );
	deepEqual( Stem("lidar"), "lid" );
	deepEqual( Stem("lidarem"), "lid" );
	deepEqual( Stem("líder"), "líd" );
	deepEqual( Stem("lidera"), "lid" );
	deepEqual( Stem("liderado"), "lider" );
	deepEqual( Stem("liderados"), "lider" );
	deepEqual( Stem("lideram"), "lid" );
	deepEqual( Stem("liderança"), "lideranc" );
	deepEqual( Stem("lideranças"), "lideranc" );
	deepEqual( Stem("liderando"), "lider" );
	deepEqual( Stem("lidere"), "lider" );
	deepEqual( Stem("líderes"), "líd" );
	deepEqual( Stem("lidero"), "lider" );
	deepEqual( Stem("liderou"), "lider" );
	deepEqual( Stem("lídia"), "líd" );
	deepEqual( Stem("lido"), "lid" );
	deepEqual( Stem("life"), "lif" );
	deepEqual( Stem("liga"), "lig" );
	deepEqual( Stem("ligação"), "ligaçã" );
	deepEqual( Stem("ligações"), "ligaçõ" );
	deepEqual( Stem("ligada"), "lig" );
	deepEqual( Stem("ligadas"), "lig" );
	deepEqual( Stem("ligado"), "lig" );
	deepEqual( Stem("ligados"), "lig" );
	deepEqual( Stem("ligam"), "lig" );
	deepEqual( Stem("ligamos"), "lig" );
	deepEqual( Stem("ligando"), "lig" );
	deepEqual( Stem("ligar"), "lig" );
	deepEqual( Stem("ligará"), "lig" );
	deepEqual( Stem("ligaram"), "lig" );
	deepEqual( Stem("ligas"), "lig" );
	deepEqual( Stem("ligeira"), "ligeir" );
	deepEqual( Stem("ligeiramente"), "ligeir" );
	deepEqual( Stem("ligeiro"), "ligeir" );
	deepEqual( Stem("light"), "light" );
	deepEqual( Stem("ligia"), "lig" );
	deepEqual( Stem("ligo"), "lig" );
	deepEqual( Stem("ligou"), "lig" );
	deepEqual( Stem("ligue"), "lig" );
	deepEqual( Stem("liguei"), "ligu" );
	deepEqual( Stem("lília"), "líl" );
	deepEqual( Stem("lilian"), "lilian" );
	deepEqual( Stem("liliane"), "lilian" );
	deepEqual( Stem("lilith"), "lilith" );
	deepEqual( Stem("lilly"), "lilly" );
	deepEqual( Stem("lima"), "lim" );
	deepEqual( Stem("limão"), "limã" );
	deepEqual( Stem("limeira"), "limeir" );
	deepEqual( Stem("liminar"), "limin" );
	deepEqual( Stem("liminares"), "limin" );
	deepEqual( Stem("limita"), "limit" );
	deepEqual( Stem("limitação"), "limit" );
	deepEqual( Stem("limitações"), "limit" );
	deepEqual( Stem("limitada"), "limit" );
	deepEqual( Stem("limitado"), "limit" );
	deepEqual( Stem("limitam"), "limit" );
	deepEqual( Stem("limitar"), "limit" );
	deepEqual( Stem("limitaram"), "limit" );
	deepEqual( Stem("limitava"), "limit" );
	deepEqual( Stem("limitavam"), "limit" );
	deepEqual( Stem("limite"), "limit" );
	deepEqual( Stem("limited"), "limited" );
	deepEqual( Stem("limites"), "limit" );
	deepEqual( Stem("limito"), "limit" );
	deepEqual( Stem("limitou"), "limit" );
	deepEqual( Stem("limítrofe"), "limítrof" );
	deepEqual( Stem("limousine"), "limousin" );
	deepEqual( Stem("limousines"), "limousin" );
	deepEqual( Stem("limpa"), "limp" );
	deepEqual( Stem("limpar"), "limp" );
	deepEqual( Stem("limpei"), "limp" );
	deepEqual( Stem("limpeza"), "limpez" );
	deepEqual( Stem("límpidas"), "límp" );
	deepEqual( Stem("limpinhos"), "limpinh" );
	deepEqual( Stem("limpo"), "limp" );
	deepEqual( Stem("limpos"), "limp" );
	deepEqual( Stem("limusine"), "limusin" );
	deepEqual( Stem("limusines"), "limusin" );
	deepEqual( Stem("lin"), "lin" );
	deepEqual( Stem("linamara"), "linam" );
	deepEqual( Stem("lincon"), "lincon" );
	deepEqual( Stem("linda"), "lind" );
	deepEqual( Stem("lindas"), "lind" );
	deepEqual( Stem("lindeln"), "lindeln" );
	deepEqual( Stem("lindíssimo"), "lindíssim" );
	deepEqual( Stem("lindo"), "lind" );
	deepEqual( Stem("lindomar"), "lindom" );
	deepEqual( Stem("line"), "lin" );
	deepEqual( Stem("linear"), "lin" );
	deepEqual( Stem("lineu"), "lin" );
	deepEqual( Stem("linfática"), "linfát" );
	deepEqual( Stem("lingerie"), "lingeri" );
	deepEqual( Stem("lingeries"), "lingeri" );
	deepEqual( Stem("língua"), "língu" );
	deepEqual( Stem("linguagem"), "linguag" );
	deepEqual( Stem("linguajar"), "linguaj" );
	deepEqual( Stem("línguas"), "língu" );
	deepEqual( Stem("linguiça"), "linguic" );
	deepEqual( Stem("lingüiça"), "lingüic" );
	deepEqual( Stem("lingüística"), "lingüíst" );
	deepEqual( Stem("linha"), "linh" );
	deepEqual( Stem("linhagem"), "linhag" );
	deepEqual( Stem("linhares"), "linh" );
	deepEqual( Stem("linhas"), "linh" );
	deepEqual( Stem("linho"), "linh" );
	deepEqual( Stem("links"), "links" );
	deepEqual( Stem("lino"), "lin" );
	deepEqual( Stem("lins"), "lins" );
	deepEqual( Stem("lintas"), "lint" );
	deepEqual( Stem("liofiliação"), "liofili" );
	deepEqual( Stem("lionel"), "lionel" );
	deepEqual( Stem("lios"), "lios" );
	deepEqual( Stem("lipase"), "lipas" );
	deepEqual( Stem("lipoaspiração"), "lipoaspir" );
	deepEqual( Stem("lipotrópico"), "lipotróp" );
	deepEqual( Stem("lipp"), "lipp" );
	deepEqual( Stem("líquida"), "líqu" );
	deepEqual( Stem("liquidação"), "liquid" );
	deepEqual( Stem("liquidado"), "liquid" );
	deepEqual( Stem("liquidaram"), "liquid" );
	deepEqual( Stem("liquide"), "liquid" );
	deepEqual( Stem("liquidificador"), "liquidific" );
	deepEqual( Stem("líquido"), "líqu" );
	deepEqual( Stem("líquidos"), "líqu" );
	deepEqual( Stem("lírico"), "líric" );
	deepEqual( Stem("líricos"), "líric" );
	deepEqual( Stem("lirismo"), "lirism" );
	deepEqual( Stem("lisa"), "lis" );
	deepEqual( Stem("lisboa"), "lisbo" );
	deepEqual( Stem("lisérgica"), "lisérg" );
	deepEqual( Stem("lisi"), "lis" );
	deepEqual( Stem("lisonjeado"), "lisonj" );
	deepEqual( Stem("lispector"), "lispector" );
	deepEqual( Stem("lista"), "list" );
	deepEqual( Stem("listadas"), "list" );
	deepEqual( Stem("listados"), "list" );
	deepEqual( Stem("listas"), "list" );
	deepEqual( Stem("listou"), "list" );
	deepEqual( Stem("literal"), "literal" );
	deepEqual( Stem("literalmente"), "literal" );
	deepEqual( Stem("literária"), "literár" );
	deepEqual( Stem("literárias"), "literár" );
	deepEqual( Stem("literário"), "literári" );
	deepEqual( Stem("literatura"), "literatur" );
	deepEqual( Stem("litígios"), "litígi" );
	deepEqual( Stem("litoral"), "litoral" );
	deepEqual( Stem("litorânea"), "litorân" );
	deepEqual( Stem("litro"), "litr" );
	deepEqual( Stem("litros"), "litr" );
	deepEqual( Stem("little"), "littl" );
	deepEqual( Stem("litto"), "litt" );
	deepEqual( Stem("liturgia"), "liturg" );
	deepEqual( Stem("litúrgico"), "litúrg" );
	deepEqual( Stem("live"), "liv" );
	deepEqual( Stem("liverpool"), "liverpool" );
	deepEqual( Stem("lívia"), "lív" );
	deepEqual( Stem("livores"), "livor" );
	deepEqual( Stem("livra"), "livr" );
	deepEqual( Stem("livrá"), "livr" );
	deepEqual( Stem("livram"), "livr" );
	deepEqual( Stem("livrando"), "livr" );
	deepEqual( Stem("livrar"), "livr" );
	deepEqual( Stem("livrara"), "livr" );
	deepEqual( Stem("livraram"), "livr" );
	deepEqual( Stem("livraria"), "livr" );
	deepEqual( Stem("livrarias"), "livr" );
	deepEqual( Stem("livre"), "livr" );
	deepEqual( Stem("livremente"), "livrement" );
	deepEqual( Stem("livres"), "livr" );
	deepEqual( Stem("livreto"), "livret" );
	deepEqual( Stem("livrinho"), "livrinh" );
	deepEqual( Stem("livro"), "livr" );
	deepEqual( Stem("livros"), "livr" );
	deepEqual( Stem("livrou"), "livr" );
	deepEqual( Stem("lixa"), "lix" );
	deepEqual( Stem("lixá"), "lix" );
	deepEqual( Stem("lixados"), "lix" );
	deepEqual( Stem("lixando"), "lix" );
	deepEqual( Stem("lixão"), "lixã" );
	deepEqual( Stem("lixo"), "lix" );
	deepEqual( Stem("liz"), "liz" );
	deepEqual( Stem("lizia"), "liz" );
	deepEqual( Stem("llao"), "lla" );
	deepEqual( Stem("lloyds"), "lloyds" );
	deepEqual( Stem("lo"), "lo" );
	deepEqual( Stem("ló"), "ló" );
	deepEqual( Stem("lobato"), "lobat" );
	deepEqual( Stem("lobbies"), "lobbi" );
	deepEqual( Stem("lobby"), "lobby" );
	deepEqual( Stem("lobo"), "lob" );
	deepEqual( Stem("lôbo"), "lôb" );
	deepEqual( Stem("locação"), "locaçã" );
	deepEqual( Stem("locações"), "locaçõ" );
	deepEqual( Stem("locadora"), "locador" );
	deepEqual( Stem("locais"), "loc" );
	deepEqual( Stem("local"), "local" );
	deepEqual( Stem("localidade"), "local" );
	deepEqual( Stem("localização"), "localiz" );
	deepEqual( Stem("localizada"), "localiz" );
	deepEqual( Stem("localizadas"), "localiz" );
	deepEqual( Stem("localizado"), "localiz" );
	deepEqual( Stem("localizados"), "localiz" );
	deepEqual( Stem("localizar"), "localiz" );
	deepEqual( Stem("localizaram"), "localiz" );
	deepEqual( Stem("localizava"), "localiz" );
	deepEqual( Stem("localizou"), "localiz" );
	deepEqual( Stem("localmente"), "local" );
	deepEqual( Stem("loção"), "loçã" );
	deepEqual( Stem("locaset"), "locaset" );
	deepEqual( Stem("locatários"), "locatári" );
	deepEqual( Stem("lockheed"), "lockheed" );
	deepEqual( Stem("lockwood"), "lockwood" );
	deepEqual( Stem("locomoção"), "locomoçã" );
	deepEqual( Stem("locomotiva"), "locomot" );
	deepEqual( Stem("locomotor"), "locomotor" );
	deepEqual( Stem("locomove"), "locomov" );
	deepEqual( Stem("locomovem"), "locomov" );
	deepEqual( Stem("locomover"), "locomov" );
	deepEqual( Stem("locução"), "locuçã" );
	deepEqual( Stem("locuções"), "locuçõ" );
	deepEqual( Stem("locutor"), "locutor" );
	deepEqual( Stem("locutora"), "locutor" );
	deepEqual( Stem("locutores"), "locutor" );
	deepEqual( Stem("lodo"), "lod" );
	deepEqual( Stem("loffel"), "loffel" );
	deepEqual( Stem("loft"), "loft" );
	deepEqual( Stem("lógica"), "lógic" );
	deepEqual( Stem("lógicas"), "lógic" );
	deepEqual( Stem("lógico"), "lógic" );
	deepEqual( Stem("logística"), "logíst" );
	deepEqual( Stem("logo"), "log" );
	deepEqual( Stem("logotipo"), "logotip" );
	deepEqual( Stem("logotipos"), "logotip" );
	deepEqual( Stem("logus"), "logus" );
	deepEqual( Stem("loira"), "loir" );
	deepEqual( Stem("loiraça"), "loirac" );
	deepEqual( Stem("loiras"), "loir" );
	deepEqual( Stem("loirinha"), "loirinh" );
	deepEqual( Stem("loiro"), "loir" );
	deepEqual( Stem("loiros"), "loir" );
	deepEqual( Stem("loja"), "loj" );
	deepEqual( Stem("lojas"), "loj" );
	deepEqual( Stem("lojista"), "lojist" );
	deepEqual( Stem("lojistas"), "lojist" );
	deepEqual( Stem("lombadas"), "lomb" );
	deepEqual( Stem("lombardi"), "lombard" );
	deepEqual( Stem("lombardimmm"), "lombardimmm" );
	deepEqual( Stem("lombo"), "lomb" );
	deepEqual( Stem("lombrigas"), "lombrig" );
	deepEqual( Stem("lona"), "lon" );
	deepEqual( Stem("londres"), "londr" );
	deepEqual( Stem("londrina"), "londrin" );
	deepEqual( Stem("londrinos"), "londrin" );
	deepEqual( Stem("longa"), "long" );
	deepEqual( Stem("longamente"), "long" );
	deepEqual( Stem("longas"), "long" );
	deepEqual( Stem("longe"), "long" );
	deepEqual( Stem("longelinealidade"), "longelineal" );
	deepEqual( Stem("longevidade"), "longev" );
	deepEqual( Stem("longhouser"), "longhous" );
	deepEqual( Stem("longilíneo"), "longilín" );
	deepEqual( Stem("longínquo"), "longínqu" );
	deepEqual( Stem("longitude"), "longitud" );
	deepEqual( Stem("longo"), "long" );
	deepEqual( Stem("longobardi"), "longobard" );
	deepEqual( Stem("longos"), "long" );
	deepEqual( Stem("longuíssimo"), "longuíssim" );
	deepEqual( Stem("look"), "look" );
	deepEqual( Stem("lopes"), "lop" );
	deepEqual( Stem("lopez"), "lopez" );
	deepEqual( Stem("lorde"), "lord" );
	deepEqual( Stem("lordes"), "lord" );
	deepEqual( Stem("loredo"), "lored" );
	deepEqual( Stem("lorem"), "lor" );
	deepEqual( Stem("loren"), "loren" );
	deepEqual( Stem("lorscheider"), "lorscheid" );
	deepEqual( Stem("los"), "los" );
	deepEqual( Stem("losson"), "losson" );
	deepEqual( Stem("lost"), "lost" );
	deepEqual( Stem("lot"), "lot" );
	deepEqual( Stem("lota"), "lot" );
	deepEqual( Stem("lotação"), "lotaçã" );
	deepEqual( Stem("lotada"), "lot" );
	deepEqual( Stem("lotado"), "lot" );
	deepEqual( Stem("lotados"), "lot" );
	deepEqual( Stem("lotam"), "lot" );
	deepEqual( Stem("lotar"), "lot" );
	deepEqual( Stem("lotaram"), "lot" );
	deepEqual( Stem("lote"), "lot" );
	deepEqual( Stem("loteamento"), "loteament" );
	deepEqual( Stem("loteiam"), "lot" );
	deepEqual( Stem("loteria"), "lot" );
	deepEqual( Stem("loterias"), "lot" );
	deepEqual( Stem("loterj"), "loterj" );
	deepEqual( Stem("lotes"), "lot" );
	deepEqual( Stem("lotus"), "lotus" );
	deepEqual( Stem("louca"), "louc" );
	deepEqual( Stem("louça"), "louc" );
	deepEqual( Stem("loucamente"), "louc" );
	deepEqual( Stem("loucas"), "louc" );
	deepEqual( Stem("louças"), "louc" );
	deepEqual( Stem("louco"), "louc" );
	deepEqual( Stem("loucos"), "louc" );
	deepEqual( Stem("loucura"), "loucur" );
	deepEqual( Stem("loucuras"), "loucur" );
	deepEqual( Stem("louis"), "lou" );
	deepEqual( Stem("louise"), "louis" );
	deepEqual( Stem("loura"), "lour" );
	deepEqual( Stem("lourdes"), "lourd" );
	deepEqual( Stem("loureiro"), "loureir" );
	deepEqual( Stem("lourenção"), "lourençã" );
	deepEqual( Stem("lourenço"), "lourenc" );
	deepEqual( Stem("lourival"), "lourival" );
	deepEqual( Stem("louro"), "lour" );
	deepEqual( Stem("louros"), "lour" );
	deepEqual( Stem("louva"), "louv" );
	deepEqual( Stem("louvain"), "louvain" );
	deepEqual( Stem("louvavam"), "louv" );
	deepEqual( Stem("louvet"), "louvet" );
	deepEqual( Stem("louvre"), "louvr" );
	deepEqual( Stem("louzada"), "louz" );
	deepEqual( Stem("louzado"), "louz" );
	deepEqual( Stem("love"), "lov" );
	deepEqual( Stem("low"), "low" );
	deepEqual( Stem("loyola"), "loyol" );
	deepEqual( Stem("lozada"), "loz" );
	deepEqual( Stem("lozinsky"), "lozinsky" );
	deepEqual( Stem("lp"), "lp" );
	deepEqual( Stem("lps"), "lps" );
	deepEqual( Stem("ltda"), "ltda" );
	deepEqual( Stem("lu"), "lu" );
	deepEqual( Stem("lua"), "lua" );
	deepEqual( Stem("luanda"), "luand" );
	deepEqual( Stem("luc"), "luc" );
	deepEqual( Stem("luca"), "luc" );
	deepEqual( Stem("lucania"), "lucan" );
	deepEqual( Stem("lucas"), "luc" );
	deepEqual( Stem("lucchese"), "lucches" );
	deepEqual( Stem("lucena"), "lucen" );
	deepEqual( Stem("luci"), "luc" );
	deepEqual( Stem("lucia"), "luc" );
	deepEqual( Stem("lúcia"), "lúc" );
	deepEqual( Stem("luciana"), "lucian" );
	deepEqual( Stem("luciano"), "lucian" );
	deepEqual( Stem("luciara"), "luc" );
	deepEqual( Stem("lucidez"), "lucidez" );
	deepEqual( Stem("lucidio"), "lucidi" );
	deepEqual( Stem("lúcidos"), "lúc" );
	deepEqual( Stem("luciene"), "lucien" );
	deepEqual( Stem("lucila"), "lucil" );
	deepEqual( Stem("lucimara"), "lucim" );
	deepEqual( Stem("lucinha"), "lucinh" );
	deepEqual( Stem("lúcio"), "lúci" );
	deepEqual( Stem("lucky"), "lucky" );
	deepEqual( Stem("lucrando"), "lucr" );
	deepEqual( Stem("lucrar"), "lucr" );
	deepEqual( Stem("lucraria"), "lucr" );
	deepEqual( Stem("lucrativas"), "lucrat" );
	deepEqual( Stem("lucrativo"), "lucrat" );
	deepEqual( Stem("lucrativos"), "lucrat" );
	deepEqual( Stem("lucro"), "lucr" );
	deepEqual( Stem("lucros"), "lucr" );
	deepEqual( Stem("lucrou"), "lucr" );
	deepEqual( Stem("luders"), "luders" );
	deepEqual( Stem("lúdico"), "lúdic" );
	deepEqual( Stem("luditas"), "ludit" );
	deepEqual( Stem("ludlow"), "ludlow" );
	deepEqual( Stem("lufthansa"), "lufthans" );
	deepEqual( Stem("lugar"), "lug" );
	deepEqual( Stem("lugarejos"), "lugarej" );
	deepEqual( Stem("lugares"), "lug" );
	deepEqual( Stem("lúgubre"), "lúgubr" );
	deepEqual( Stem("luigi"), "luig" );
	deepEqual( Stem("luis"), "luis" );
	deepEqual( Stem("luís"), "luís" );
	deepEqual( Stem("luiz"), "luiz" );
	deepEqual( Stem("luiza"), "luiz" );
	deepEqual( Stem("lukaisus"), "lukaisus" );
	deepEqual( Stem("lula"), "lul" );
	deepEqual( Stem("lulu"), "lulu" );
	deepEqual( Stem("luma"), "lum" );
	deepEqual( Stem("luminárias"), "luminár" );
	deepEqual( Stem("luminosa"), "lumin" );
	deepEqual( Stem("luminoso"), "lumin" );
	deepEqual( Stem("luminosos"), "lumin" );
	deepEqual( Stem("lumpur"), "lumpur" );
	deepEqual( Stem("lupa"), "lup" );
	deepEqual( Stem("lupicínio"), "lupicíni" );
	deepEqual( Stem("lurdemir"), "lurdem" );
	deepEqual( Stem("lurdes"), "lurd" );
	deepEqual( Stem("lurex"), "lurex" );
	deepEqual( Stem("lusa"), "lus" );
	deepEqual( Stem("lusíadas"), "lusí" );
	deepEqual( Stem("lusitana"), "lusitan" );
	deepEqual( Stem("lusitanas"), "lusitan" );
	deepEqual( Stem("lusitanos"), "lusitan" );
	deepEqual( Stem("lustre"), "lustr" );
	deepEqual( Stem("lustro"), "lustr" );
	deepEqual( Stem("luta"), "lut" );
	deepEqual( Stem("lutado"), "lut" );
	deepEqual( Stem("lutador"), "lutador" );
	deepEqual( Stem("lutam"), "lut" );
	deepEqual( Stem("lutando"), "lut" );
	deepEqual( Stem("lutar"), "lut" );
	deepEqual( Stem("lutará"), "lut" );
	deepEqual( Stem("lutas"), "lut" );
	deepEqual( Stem("lutava"), "lut" );
	deepEqual( Stem("lutavam"), "lut" );
	deepEqual( Stem("luterana"), "luteran" );
	deepEqual( Stem("lutero"), "luter" );
	deepEqual( Stem("luto"), "lut" );
	deepEqual( Stem("lutou"), "lut" );
	deepEqual( Stem("luva"), "luv" );
	deepEqual( Stem("luvas"), "luv" );
	deepEqual( Stem("luvisaro"), "luvisar" );
	deepEqual( Stem("lux"), "lux" );
	deepEqual( Stem("luxemburgo"), "luxemburg" );
	deepEqual( Stem("luxo"), "lux" );
	deepEqual( Stem("luxuosa"), "luxuos" );
	deepEqual( Stem("luxuosas"), "luxuos" );
	deepEqual( Stem("luxuoso"), "luxuos" );
	deepEqual( Stem("luxuosos"), "luxuos" );
	deepEqual( Stem("luxuriantes"), "luxuri" );
	deepEqual( Stem("luycx"), "luycx" );
	deepEqual( Stem("luz"), "luz" );
	deepEqual( Stem("luzes"), "luz" );
	deepEqual( Stem("luzia"), "luz" );
	deepEqual( Stem("lynch"), "lynch" );
	deepEqual( Stem("lyne"), "lyne" );
	deepEqual( Stem("lynx"), "lynx" );
	deepEqual( Stem("lyon"), "lyon" );
	deepEqual( Stem("m"), "m" );
	deepEqual( Stem("ma"), "ma" );
	deepEqual( Stem("má"), "má" );
	deepEqual( Stem("maastricht"), "maastricht" );
	deepEqual( Stem("maçã"), "maçã" );
	deepEqual( Stem("macaca"), "macac" );
	deepEqual( Stem("macacão"), "macacã" );
	deepEqual( Stem("macacas"), "macac" );
	deepEqual( Stem("macaco"), "macac" );
	deepEqual( Stem("macacos"), "macac" );
	deepEqual( Stem("macalé"), "macal" );
	deepEqual( Stem("macambúzio"), "macambúzi" );
	deepEqual( Stem("maçante"), "maçant" );
	deepEqual( Stem("maçarico"), "maçar" );
	deepEqual( Stem("macarrão"), "macarrã" );
	deepEqual( Stem("macarronada"), "macarron" );
	deepEqual( Stem("macarthismo"), "macarth" );
	deepEqual( Stem("maçãs"), "maçãs" );
	deepEqual( Stem("macaulay"), "macaulay" );
	deepEqual( Stem("macbeth"), "macbeth" );
	deepEqual( Stem("macbrazel"), "macbrazel" );
	deepEqual( Stem("macdowell"), "macdowell" );
	deepEqual( Stem("macedo"), "maced" );
	deepEqual( Stem("maceió"), "macei" );
	deepEqual( Stem("machadiana"), "machadian" );
	deepEqual( Stem("machadinho"), "machadinh" );
	deepEqual( Stem("machado"), "mach" );
	deepEqual( Stem("machados"), "mach" );
	deepEqual( Stem("machão"), "machã" );
	deepEqual( Stem("machismo"), "machism" );
	deepEqual( Stem("machista"), "machist" );
	deepEqual( Stem("machistas"), "machist" );
	deepEqual( Stem("macho"), "mach" );
	deepEqual( Stem("machos"), "mach" );
	deepEqual( Stem("machucado"), "machuc" );
	deepEqual( Stem("machucou"), "machuc" );
	deepEqual( Stem("macia"), "mac" );
	deepEqual( Stem("maciça"), "macic" );
	deepEqual( Stem("maciças"), "macic" );
	deepEqual( Stem("maciel"), "maciel" );
	deepEqual( Stem("maciez"), "maciez" );
	deepEqual( Stem("macio"), "maci" );
	deepEqual( Stem("mackenzie"), "mackenzi" );
	deepEqual( Stem("maclaine"), "maclain" );
	deepEqual( Stem("maço"), "mac" );
	deepEqual( Stem("maconha"), "maconh" );
	deepEqual( Stem("maconheiro"), "maconheir" );
	deepEqual( Stem("macromedia"), "macromed" );
	deepEqual( Stem("macromoléculas"), "macromolécul" );
	deepEqual( Stem("macs"), "macs" );
	deepEqual( Stem("mácula"), "mácul" );
	deepEqual( Stem("macular"), "macul" );
	deepEqual( Stem("macumba"), "macumb" );
	deepEqual( Stem("macunaíma"), "macunaím" );
	deepEqual( Stem("mad"), "mad" );
	deepEqual( Stem("mada"), "mad" );
	deepEqual( Stem("madalena"), "madalen" );
	deepEqual( Stem("made"), "mad" );
	deepEqual( Stem("madeira"), "madeir" );
	deepEqual( Stem("madeirame"), "madeiram" );
	deepEqual( Stem("madeiras"), "madeir" );
	deepEqual( Stem("madeireira"), "madeireir" );
	deepEqual( Stem("madeireiras"), "madeireir" );
	deepEqual( Stem("madeireiro"), "madeireir" );
	deepEqual( Stem("madeireiros"), "madeireir" );
	deepEqual( Stem("madi"), "mad" );
	deepEqual( Stem("madonna"), "madonn" );
	deepEqual( Stem("madre"), "madr" );
	deepEqual( Stem("madri"), "madr" );
	deepEqual( Stem("madrinha"), "madrinh" );
	deepEqual( Stem("madruga"), "madrug" );
	deepEqual( Stem("madrugada"), "madrug" );
	deepEqual( Stem("madrugadas"), "madrug" );
	deepEqual( Stem("madura"), "madur" );
	deepEqual( Stem("maduras"), "madur" );
	deepEqual( Stem("madureira"), "madureir" );
	deepEqual( Stem("madureza"), "madur" );
	deepEqual( Stem("maduro"), "madur" );
	deepEqual( Stem("maduros"), "madur" );
	deepEqual( Stem("mady"), "mady" );
	deepEqual( Stem("mãe"), "mã" );
	deepEqual( Stem("mães"), "mã" );
	deepEqual( Stem("maestra"), "maestr" );
	deepEqual( Stem("maestro"), "maestr" );
	deepEqual( Stem("maestros"), "maestr" );
	deepEqual( Stem("mãezinha"), "mãezinh" );
	deepEqual( Stem("mafalda"), "mafald" );
	deepEqual( Stem("máfia"), "máf" );
	deepEqual( Stem("mafiosa"), "mafios" );
	deepEqual( Stem("mafiosas"), "mafios" );
	deepEqual( Stem("mafiosos"), "mafios" );
	deepEqual( Stem("maga"), "mag" );
	deepEqual( Stem("magaldi"), "magald" );
	deepEqual( Stem("magalhães"), "magalhã" );
	deepEqual( Stem("magazine"), "magazin" );
	deepEqual( Stem("magazines"), "magazin" );
	deepEqual( Stem("magela"), "magel" );
	deepEqual( Stem("magella"), "magell" );
	deepEqual( Stem("magérrimas"), "magérrim" );
	deepEqual( Stem("maggi"), "magg" );
	deepEqual( Stem("magia"), "mag" );
	deepEqual( Stem("magic"), "magic" );
	deepEqual( Stem("mágica"), "mágic" );
	deepEqual( Stem("mágicas"), "mágic" );
	deepEqual( Stem("mágico"), "mágic" );
	deepEqual( Stem("mágicos"), "mágic" );
	deepEqual( Stem("magistério"), "magistéri" );
	deepEqual( Stem("magistrado"), "magistr" );
	deepEqual( Stem("magistrados"), "magistr" );
	deepEqual( Stem("magistratura"), "magistratur" );
	deepEqual( Stem("magna"), "magn" );
	deepEqual( Stem("magnas"), "magn" );
	deepEqual( Stem("magnata"), "magnat" );
	deepEqual( Stem("magnatas"), "magnat" );
	deepEqual( Stem("magnésio"), "magnési" );
	deepEqual( Stem("magnética"), "magnét" );
	deepEqual( Stem("magnético"), "magnét" );
	deepEqual( Stem("magnetismo"), "magnet" );
	deepEqual( Stem("magnetoterapia"), "magnetoterap" );
	deepEqual( Stem("magnífica"), "magníf" );
	deepEqual( Stem("magnífico"), "magníf" );
	deepEqual( Stem("magnitude"), "magnitud" );
	deepEqual( Stem("magno"), "magn" );
	deepEqual( Stem("magnoli"), "magnol" );
	deepEqual( Stem("magnus"), "magnus" );
	deepEqual( Stem("mago"), "mag" );
	deepEqual( Stem("magoa"), "mago" );
	deepEqual( Stem("mágoa"), "mágo" );
	deepEqual( Stem("magoá"), "mago" );
	deepEqual( Stem("mágoas"), "mágo" );
	deepEqual( Stem("magos"), "mag" );
	deepEqual( Stem("magra"), "magr" );
	deepEqual( Stem("magras"), "magr" );
	deepEqual( Stem("magrela"), "magrel" );
	deepEqual( Stem("magrelas"), "magrel" );
	deepEqual( Stem("magreza"), "magrez" );
	deepEqual( Stem("magri"), "magr" );
	deepEqual( Stem("magrid"), "magrid" );
	deepEqual( Stem("magrinha"), "magrinh" );
	deepEqual( Stem("magrinhas"), "magrinh" );
	deepEqual( Stem("magrinho"), "magrinh" );
	deepEqual( Stem("magro"), "magr" );
	deepEqual( Stem("magros"), "magr" );
	deepEqual( Stem("maguila"), "maguil" );
	deepEqual( Stem("mahal"), "mahal" );
	deepEqual( Stem("maher"), "mah" );
	deepEqual( Stem("mahfuz"), "mahfuz" );
	deepEqual( Stem("maia"), "mai" );
	deepEqual( Stem("mail"), "mail" );
	deepEqual( Stem("mailing"), "mailing" );
	deepEqual( Stem("main"), "main" );
	deepEqual( Stem("mainardi"), "mainard" );
	deepEqual( Stem("mainframe"), "mainfram" );
	deepEqual( Stem("mainframes"), "mainfram" );
	deepEqual( Stem("maio"), "mai" );
	deepEqual( Stem("maiô"), "maiô" );
	deepEqual( Stem("maior"), "maior" );
	deepEqual( Stem("maiores"), "maior" );
	deepEqual( Stem("maioria"), "maior" );
	deepEqual( Stem("maiorias"), "maior" );
	deepEqual( Stem("maioridade"), "maioridad" );
	deepEqual( Stem("maíra"), "maír" );
	deepEqual( Stem("mais"), "mais" );
	deepEqual( Stem("maison"), "maison" );
	deepEqual( Stem("maj"), "maj" );
	deepEqual( Stem("majestade"), "majestad" );
	deepEqual( Stem("majestosa"), "majest" );
	deepEqual( Stem("majoli"), "majol" );
	deepEqual( Stem("major"), "major" );
	deepEqual( Stem("majoritariamente"), "majoritari" );
	deepEqual( Stem("majoritário"), "majoritári" );
	deepEqual( Stem("majuro"), "majur" );
	deepEqual( Stem("makron"), "makron" );
	deepEqual( Stem("mal"), "mal" );
	deepEqual( Stem("mala"), "mal" );
	deepEqual( Stem("malabar"), "malab" );
	deepEqual( Stem("malabarismo"), "malabar" );
	deepEqual( Stem("malabarismos"), "malabar" );
	deepEqual( Stem("malaia"), "mala" );
	deepEqual( Stem("malaias"), "mala" );
	deepEqual( Stem("malaios"), "malai" );
	deepEqual( Stem("malan"), "malan" );
	deepEqual( Stem("malandragem"), "malandrag" );
	deepEqual( Stem("malandras"), "malandr" );
	deepEqual( Stem("malária"), "malár" );
	deepEqual( Stem("malas"), "mal" );
	deepEqual( Stem("malásia"), "malás" );
	deepEqual( Stem("malcasadas"), "malcas" );
	deepEqual( Stem("malcolm"), "malcolm" );
	deepEqual( Stem("malcom"), "malcom" );
	deepEqual( Stem("malconduzida"), "malconduz" );
	deepEqual( Stem("malconservados"), "malconserv" );
	deepEqual( Stem("malcriação"), "malcriaçã" );
	deepEqual( Stem("malcriados"), "malcri" );
	deepEqual( Stem("malcuidadas"), "malcuid" );
	deepEqual( Stem("maldade"), "maldad" );
	deepEqual( Stem("maldaner"), "maldan" );
	deepEqual( Stem("maldita"), "maldit" );
	deepEqual( Stem("malditas"), "maldit" );
	deepEqual( Stem("maldosa"), "maldos" );
	deepEqual( Stem("maldosos"), "maldos" );
	deepEqual( Stem("malefícios"), "malefíci" );
	deepEqual( Stem("maléfico"), "maléf" );
	deepEqual( Stem("malemo"), "malem" );
	deepEqual( Stem("males"), "mal" );
	deepEqual( Stem("maleta"), "malet" );
	deepEqual( Stem("malfalado"), "malfal" );
	deepEqual( Stem("malfeito"), "malfeit" );
	deepEqual( Stem("malfeitora"), "malfeitor" );
	deepEqual( Stem("malfeitores"), "malfeitor" );
	deepEqual( Stem("malgrado"), "malgr" );
	deepEqual( Stem("malha"), "malh" );
	deepEqual( Stem("malhação"), "malhaçã" );
	deepEqual( Stem("malhada"), "malh" );
	deepEqual( Stem("malhando"), "malh" );
	deepEqual( Stem("malhar"), "malh" );
	deepEqual( Stem("malhava"), "malh" );
	deepEqual( Stem("malheiros"), "malheir" );
	deepEqual( Stem("malícia"), "malíc" );
	deepEqual( Stem("malicioso"), "malic" );
	deepEqual( Stem("maligna"), "malign" );
	deepEqual( Stem("maligno"), "malign" );
	deepEqual( Stem("malik"), "malik" );
	deepEqual( Stem("malkovich"), "malkovich" );
	deepEqual( Stem("mall"), "mall" );
	deepEqual( Stem("malle"), "mall" );
	deepEqual( Stem("mallmann"), "mallmann" );
	deepEqual( Stem("maloney"), "maloney" );
	deepEqual( Stem("malpassado"), "malpass" );
	deepEqual( Stem("malresolvida"), "malresolv" );
	deepEqual( Stem("malsucedido"), "malsuced" );
	deepEqual( Stem("malta"), "malt" );
	deepEqual( Stem("maltrapilhos"), "maltrapilh" );
	deepEqual( Stem("maltratadas"), "maltrat" );
	deepEqual( Stem("maltratado"), "maltrat" );
	deepEqual( Stem("malu"), "malu" );
	deepEqual( Stem("maluca"), "maluc" );
	deepEqual( Stem("malucas"), "maluc" );
	deepEqual( Stem("maluco"), "maluc" );
	deepEqual( Stem("malucos"), "maluc" );
	deepEqual( Stem("maluf"), "maluf" );
	deepEqual( Stem("maluquice"), "maluquic" );
	deepEqual( Stem("maluquinho"), "maluquinh" );
	deepEqual( Stem("malvada"), "malv" );
	deepEqual( Stem("malvinas"), "malvin" );
	deepEqual( Stem("malzoni"), "malzon" );
	deepEqual( Stem("mama"), "mam" );
	deepEqual( Stem("mamãe"), "mamã" );
	deepEqual( Stem("mamão"), "mamã" );
	deepEqual( Stem("mamar"), "mam" );
	deepEqual( Stem("mamária"), "mamár" );
	deepEqual( Stem("mambembe"), "mambemb" );
	deepEqual( Stem("mambembes"), "mambemb" );
	deepEqual( Stem("mamelucas"), "mameluc" );
	deepEqual( Stem("mamelucos"), "mameluc" );
	deepEqual( Stem("mammas"), "mamm" );
	deepEqual( Stem("mamografia"), "mamograf" );
	deepEqual( Stem("mamografias"), "mamograf" );
	deepEqual( Stem("mamonas"), "mamon" );
	deepEqual( Stem("mamou"), "mam" );
	deepEqual( Stem("man"), "man" );
	deepEqual( Stem("manager"), "manag" );
	deepEqual( Stem("manally"), "manally" );
	deepEqual( Stem("manancial"), "manancial" );
	deepEqual( Stem("manaus"), "manaus" );
	deepEqual( Stem("mancha"), "manch" );
	deepEqual( Stem("manchada"), "manch" );
	deepEqual( Stem("manchar"), "manch" );
	deepEqual( Stem("manchas"), "manch" );
	deepEqual( Stem("manchava"), "manch" );
	deepEqual( Stem("manchester"), "manchest" );
	deepEqual( Stem("manchete"), "manchet" );
	deepEqual( Stem("manchetes"), "manchet" );
	deepEqual( Stem("manchetou"), "manchet" );
	deepEqual( Stem("mancini"), "mancin" );
	deepEqual( Stem("manda"), "mand" );
	deepEqual( Stem("mandá"), "mand" );
	deepEqual( Stem("mandacaru"), "mandacaru" );
	deepEqual( Stem("mandada"), "mand" );
	deepEqual( Stem("mandado"), "mand" );
	deepEqual( Stem("mandados"), "mand" );
	deepEqual( Stem("mandam"), "mand" );
	deepEqual( Stem("mandamentos"), "mandament" );
	deepEqual( Stem("mandamos"), "mand" );
	deepEqual( Stem("mandante"), "mandant" );
	deepEqual( Stem("mandar"), "mand" );
	deepEqual( Stem("mandaram"), "mand" );
	deepEqual( Stem("mandarim"), "mandarim" );
	deepEqual( Stem("mandarino"), "mandarin" );
	deepEqual( Stem("mandatários"), "mandatári" );
	deepEqual( Stem("mandato"), "mandat" );
	deepEqual( Stem("mandava"), "mand" );
	deepEqual( Stem("mandavam"), "mand" );
	deepEqual( Stem("mandei"), "mand" );
	deepEqual( Stem("mandela"), "mandel" );
	deepEqual( Stem("mandem"), "mand" );
	deepEqual( Stem("mandioca"), "mandioc" );
	deepEqual( Stem("mando"), "mand" );
	deepEqual( Stem("mandou"), "mand" );
	deepEqual( Stem("mané"), "man" );
	deepEqual( Stem("maneira"), "maneir" );
	deepEqual( Stem("maneiras"), "maneir" );
	deepEqual( Stem("maneiristas"), "maneir" );
	deepEqual( Stem("maneiro"), "maneir" );
	deepEqual( Stem("manejadas"), "manej" );
	deepEqual( Stem("manejo"), "manej" );
	deepEqual( Stem("manequim"), "manequim" );
	deepEqual( Stem("manequinho"), "manequinh" );
	deepEqual( Stem("manete"), "manet" );
	deepEqual( Stem("manetes"), "manet" );
	deepEqual( Stem("manfredo"), "manfred" );
	deepEqual( Stem("manganês"), "manganês" );
	deepEqual( Stem("mangas"), "mang" );
	deepEqual( Stem("mangueira"), "mangueir" );
	deepEqual( Stem("manhã"), "manhã" );
	deepEqual( Stem("manhãs"), "manhãs" );
	deepEqual( Stem("manhattan"), "manhattan" );
	deepEqual( Stem("mania"), "man" );
	deepEqual( Stem("manias"), "man" );
	deepEqual( Stem("manicômio"), "manicômi" );
	deepEqual( Stem("manicure"), "manicur" );
	deepEqual( Stem("manifesta"), "manifest" );
	deepEqual( Stem("manifestá"), "manifest" );
	deepEqual( Stem("manifestação"), "manifest" );
	deepEqual( Stem("manifestações"), "manifest" );
	deepEqual( Stem("manifestadas"), "manifest" );
	deepEqual( Stem("manifestam"), "manifest" );
	deepEqual( Stem("manifestando"), "manifest" );
	deepEqual( Stem("manifestantes"), "manifest" );
	deepEqual( Stem("manifestar"), "manifest" );
	deepEqual( Stem("manifestaram"), "manifest" );
	deepEqual( Stem("manifestavam"), "manifest" );
	deepEqual( Stem("manifesto"), "manifest" );
	deepEqual( Stem("manifestos"), "manifest" );
	deepEqual( Stem("manifestou"), "manifest" );
	deepEqual( Stem("manipulação"), "manipul" );
	deepEqual( Stem("manipulações"), "manipul" );
	deepEqual( Stem("manipulado"), "manipul" );
	deepEqual( Stem("manipulados"), "manipul" );
	deepEqual( Stem("manipulam"), "manipul" );
	deepEqual( Stem("manipular"), "manipul" );
	deepEqual( Stem("manipulava"), "manipul" );
	deepEqual( Stem("maniqueísta"), "maniqueíst" );
	deepEqual( Stem("manjados"), "manj" );
	deepEqual( Stem("manjedoura"), "manjedour" );
	deepEqual( Stem("manobra"), "manobr" );
	deepEqual( Stem("manobras"), "manobr" );
	deepEqual( Stem("manoel"), "manoel" );
	deepEqual( Stem("mansa"), "mans" );
	deepEqual( Stem("mansão"), "mansã" );
	deepEqual( Stem("manso"), "mans" );
	deepEqual( Stem("mansoni"), "manson" );
	deepEqual( Stem("mansur"), "mansur" );
	deepEqual( Stem("manta"), "mant" );
	deepEqual( Stem("mantê"), "mant" );
	deepEqual( Stem("manteiga"), "manteig" );
	deepEqual( Stem("mantém"), "mantém" );
	deepEqual( Stem("mantêm"), "mantêm" );
	deepEqual( Stem("mantemos"), "mant" );
	deepEqual( Stem("mantendo"), "mant" );
	deepEqual( Stem("mantenham"), "mantenh" );
	deepEqual( Stem("manter"), "mant" );
	deepEqual( Stem("manterá"), "mant" );
	deepEqual( Stem("manteve"), "mantev" );
	deepEqual( Stem("mantida"), "mant" );
	deepEqual( Stem("mantidas"), "mant" );
	deepEqual( Stem("mantido"), "mant" );
	deepEqual( Stem("mantidos"), "mant" );
	deepEqual( Stem("mantimento"), "mantiment" );
	deepEqual( Stem("mantimentos"), "mantiment" );
	deepEqual( Stem("mantinha"), "mantinh" );
	deepEqual( Stem("mantivemos"), "mantiv" );
	deepEqual( Stem("mantiver"), "mantiv" );
	deepEqual( Stem("mantiveram"), "mantiv" );
	deepEqual( Stem("mantiverem"), "mantiv" );
	deepEqual( Stem("mantivesse"), "mantiv" );
	deepEqual( Stem("manto"), "mant" );
	deepEqual( Stem("mantos"), "mant" );
	deepEqual( Stem("mantovani"), "mantovan" );
	deepEqual( Stem("mantras"), "mantr" );
	deepEqual( Stem("manuais"), "manu" );
	deepEqual( Stem("manual"), "manual" );
	deepEqual( Stem("manualmente"), "manual" );
	deepEqual( Stem("manuel"), "manuel" );
	deepEqual( Stem("manufaturados"), "manufatur" );
	deepEqual( Stem("manutenção"), "manutençã" );
	deepEqual( Stem("manzano"), "manzan" );
	deepEqual( Stem("mao"), "mao" );
	deepEqual( Stem("mão"), "mã" );
	deepEqual( Stem("maomé"), "maom" );
	deepEqual( Stem("mãos"), "mã" );
	deepEqual( Stem("mãozinha"), "mãozinh" );
	deepEqual( Stem("mapa"), "map" );
	deepEqual( Stem("mapas"), "map" );
	deepEqual( Stem("mapeadas"), "map" );
	deepEqual( Stem("mapeado"), "map" );
	deepEqual( Stem("mapeamento"), "mapeament" );
	deepEqual( Stem("mapear"), "map" );
	deepEqual( Stem("mappin"), "mappin" );
	deepEqual( Stem("maquiadas"), "maqui" );
	deepEqual( Stem("maquiador"), "maquiador" );
	deepEqual( Stem("maquiagem"), "maquiag" );
	deepEqual( Stem("maquiagens"), "maquiagens" );
	deepEqual( Stem("maquiavel"), "maquiavel" );
	deepEqual( Stem("maquiavelismo"), "maquiavel" );
	deepEqual( Stem("maquilado"), "maquil" );
	deepEqual( Stem("maquiladora"), "maquil" );
	deepEqual( Stem("maquilagem"), "maquilag" );
	deepEqual( Stem("maquilagens"), "maquilagens" );
	deepEqual( Stem("máquina"), "máquin" );
	deepEqual( Stem("maquinário"), "maquinári" );
	deepEqual( Stem("máquinas"), "máquin" );
	deepEqual( Stem("maquiou"), "maqui" );
	deepEqual( Stem("mar"), "mar" );
	deepEqual( Stem("mara"), "mar" );
	deepEqual( Stem("maracanã"), "maracanã" );
	deepEqual( Stem("maracanãs"), "maracanãs" );
	deepEqual( Stem("maracanãzinho"), "maracanãzinh" );
	deepEqual( Stem("maracutaia"), "maracuta" );
	deepEqual( Stem("maracutaias"), "maracuta" );
	deepEqual( Stem("marais"), "mar" );
	deepEqual( Stem("marajá"), "maraj" );
	deepEqual( Stem("marakanond"), "marakanond" );
	deepEqual( Stem("maranhão"), "maranhã" );
	deepEqual( Stem("maranhense"), "maranhens" );
	deepEqual( Stem("maranhenses"), "maranhens" );
	deepEqual( Stem("maratona"), "maraton" );
	deepEqual( Stem("maravilha"), "maravilh" );
	deepEqual( Stem("maravilhada"), "maravilh" );
	deepEqual( Stem("maravilhas"), "maravilh" );
	deepEqual( Stem("maravilhosa"), "maravilh" );
	deepEqual( Stem("maravilhosas"), "maravilh" );
	deepEqual( Stem("maravilhoso"), "maravilh" );
	deepEqual( Stem("maravilhosos"), "maravilh" );
	deepEqual( Stem("marca"), "marc" );
	deepEqual( Stem("marcá"), "marc" );
	deepEqual( Stem("marcação"), "marcaçã" );
	deepEqual( Stem("marcada"), "marc" );
	deepEqual( Stem("marcadamente"), "marcad" );
	deepEqual( Stem("marcadas"), "marc" );
	deepEqual( Stem("marcado"), "marc" );
	deepEqual( Stem("marcadores"), "marcador" );
	deepEqual( Stem("marcados"), "marc" );
	deepEqual( Stem("marcante"), "marcant" );
	deepEqual( Stem("marcantes"), "marcant" );
	deepEqual( Stem("marcantônio"), "marcantôni" );
	deepEqual( Stem("marcar"), "marc" );
	deepEqual( Stem("marcaram"), "marc" );
	deepEqual( Stem("marcas"), "marc" );
	deepEqual( Stem("marcava"), "marc" );
	deepEqual( Stem("marcel"), "marcel" );
	deepEqual( Stem("marcela"), "marcel" );
	deepEqual( Stem("marcelino"), "marcelin" );
	deepEqual( Stem("marcello"), "marcell" );
	deepEqual( Stem("marcelo"), "marcel" );
	deepEqual( Stem("marcenaria"), "marcen" );
	deepEqual( Stem("marceneiro"), "marceneir" );
	deepEqual( Stem("marceneiros"), "marceneir" );
	deepEqual( Stem("march"), "march" );
	deepEqual( Stem("marcha"), "march" );
	deepEqual( Stem("marchand"), "marchand" );
	deepEqual( Stem("marchar"), "march" );
	deepEqual( Stem("marchas"), "march" );
	deepEqual( Stem("marchou"), "march" );
	deepEqual( Stem("marcia"), "marc" );
	deepEqual( Stem("márcia"), "márc" );
	deepEqual( Stem("marciana"), "marcian" );
	deepEqual( Stem("marcílio"), "marcíli" );
	deepEqual( Stem("marcinho"), "marcinh" );
	deepEqual( Stem("marcio"), "marci" );
	deepEqual( Stem("márcio"), "márci" );
	deepEqual( Stem("marco"), "marc" );
	deepEqual( Stem("março"), "marc" );
	deepEqual( Stem("marcolino"), "marcolin" );
	deepEqual( Stem("marcos"), "marc" );
	deepEqual( Stem("marcou"), "marc" );
	deepEqual( Stem("maré"), "mar" );
	deepEqual( Stem("marechal"), "marechal" );
	deepEqual( Stem("mares"), "mar" );
	deepEqual( Stem("maresias"), "mares" );
	deepEqual( Stem("marfim"), "marfim" );
	deepEqual( Stem("margaret"), "margaret" );
	deepEqual( Stem("margarete"), "margaret" );
	deepEqual( Stem("margem"), "marg" );
	deepEqual( Stem("margens"), "margens" );
	deepEqual( Stem("marginais"), "margin" );
	deepEqual( Stem("marginal"), "marginal" );
	deepEqual( Stem("marginalizado"), "marginaliz" );
	deepEqual( Stem("marginalizados"), "marginaliz" );
	deepEqual( Stem("mari"), "mar" );
	deepEqual( Stem("maria"), "mar" );
	deepEqual( Stem("mariana"), "marian" );
	deepEqual( Stem("mariane"), "marian" );
	deepEqual( Stem("mariano"), "marian" );
	deepEqual( Stem("marias"), "mar" );
	deepEqual( Stem("marido"), "mar" );
	deepEqual( Stem("maridos"), "mar" );
	deepEqual( Stem("marie"), "mari" );
	deepEqual( Stem("mariel"), "mariel" );
	deepEqual( Stem("marieta"), "mariet" );
	deepEqual( Stem("marighella"), "marighell" );
	deepEqual( Stem("marijuana"), "marijuan" );
	deepEqual( Stem("marilda"), "marild" );
	deepEqual( Stem("marilena"), "marilen" );
	deepEqual( Stem("marília"), "maríl" );
	deepEqual( Stem("marilyn"), "marilyn" );
	deepEqual( Stem("marilza"), "marilz" );
	deepEqual( Stem("marimbondos"), "marimbond" );
	deepEqual( Stem("marina"), "marin" );
	deepEqual( Stem("marinha"), "marinh" );
	deepEqual( Stem("marinheiro"), "marinheir" );
	deepEqual( Stem("marinheiros"), "marinheir" );
	deepEqual( Stem("marinho"), "marinh" );
	deepEqual( Stem("marinhos"), "marinh" );
	deepEqual( Stem("marini"), "marin" );
	deepEqual( Stem("marins"), "marins" );
	deepEqual( Stem("mario"), "mari" );
	deepEqual( Stem("mário"), "mári" );
	deepEqual( Stem("marion"), "marion" );
	deepEqual( Stem("marisa"), "maris" );
	deepEqual( Stem("marisol"), "marisol" );
	deepEqual( Stem("marista"), "marist" );
	deepEqual( Stem("marítima"), "marítim" );
	deepEqual( Stem("marítimas"), "marítim" );
	deepEqual( Stem("marítimo"), "marítim" );
	deepEqual( Stem("mariz"), "mariz" );
	deepEqual( Stem("marjorie"), "marjori" );
	deepEqual( Stem("mark"), "mark" );
	deepEqual( Stem("marketeira"), "marketeir" );
	deepEqual( Stem("marketing"), "marketing" );
	deepEqual( Stem("marks"), "marks" );
	deepEqual( Stem("markus"), "markus" );
	deepEqual( Stem("marlboro"), "marlbor" );
	deepEqual( Stem("marlene"), "marlen" );
	deepEqual( Stem("marli"), "marl" );
	deepEqual( Stem("marlon"), "marlon" );
	deepEqual( Stem("marluce"), "marluc" );
	deepEqual( Stem("marmita"), "marmit" );
	deepEqual( Stem("marmo"), "marm" );
	deepEqual( Stem("mármore"), "mármor" );
	deepEqual( Stem("marola"), "marol" );
	deepEqual( Stem("marote"), "marot" );
	deepEqual( Stem("marquei"), "marqu" );
	deepEqual( Stem("marques"), "marqu" );
	deepEqual( Stem("marquês"), "marquês" );
	deepEqual( Stem("marqueteiro"), "marqueteir" );
	deepEqual( Stem("márquez"), "márquez" );
	deepEqual( Stem("marquise"), "marquis" );
	deepEqual( Stem("marretas"), "marret" );
	deepEqual( Stem("marreteiros"), "marreteir" );
	deepEqual( Stem("marrey"), "marrey" );
	deepEqual( Stem("marrocos"), "marroc" );
	deepEqual( Stem("marrom"), "marrom" );
	deepEqual( Stem("marselha"), "marselh" );
	deepEqual( Stem("marshall"), "marshall" );
	deepEqual( Stem("marta"), "mart" );
	deepEqual( Stem("marte"), "mart" );
	deepEqual( Stem("martelo"), "martel" );
	deepEqual( Stem("martelos"), "martel" );
	deepEqual( Stem("martelou"), "martel" );
	deepEqual( Stem("martha"), "marth" );
	deepEqual( Stem("martí"), "mart" );
	deepEqual( Stem("martin"), "martin" );
	deepEqual( Stem("martina"), "martin" );
	deepEqual( Stem("martines"), "martin" );
	deepEqual( Stem("martinez"), "martinez" );
	deepEqual( Stem("martinho"), "martinh" );
	deepEqual( Stem("martini"), "martin" );
	deepEqual( Stem("martinn"), "martinn" );
	deepEqual( Stem("martino"), "martin" );
	deepEqual( Stem("martins"), "martins" );
	deepEqual( Stem("mártir"), "márt" );
	deepEqual( Stem("mártires"), "márt" );
	deepEqual( Stem("martírio"), "martíri" );
	deepEqual( Stem("martuza"), "martuz" );
	deepEqual( Stem("marujos"), "maruj" );
	deepEqual( Stem("marx"), "marx" );
	deepEqual( Stem("marxista"), "marxist" );
	deepEqual( Stem("mary"), "mary" );
	deepEqual( Stem("maryland"), "maryland" );
	deepEqual( Stem("marzo"), "marz" );
	deepEqual( Stem("mas"), "mas" );
	deepEqual( Stem("más"), "más" );
	deepEqual( Stem("masagão"), "masagã" );
	deepEqual( Stem("masano"), "masan" );
	deepEqual( Stem("mascar"), "masc" );
	deepEqual( Stem("máscara"), "másc" );
	deepEqual( Stem("mascarando"), "mascar" );
	deepEqual( Stem("máscaras"), "másc" );
	deepEqual( Stem("mascarenhas"), "mascarenh" );
	deepEqual( Stem("masculina"), "masculin" );
	deepEqual( Stem("masculinas"), "masculin" );
	deepEqual( Stem("masculinidade"), "masculin" );
	deepEqual( Stem("masculinizado"), "masculiniz" );
	deepEqual( Stem("masculino"), "masculin" );
	deepEqual( Stem("masculinos"), "masculin" );
	deepEqual( Stem("másculo"), "máscul" );
	deepEqual( Stem("maseratti"), "maseratt" );
	deepEqual( Stem("masina"), "masin" );
	deepEqual( Stem("masmorra"), "masmorr" );
	deepEqual( Stem("mason"), "mason" );
	deepEqual( Stem("masoquista"), "masoqu" );
	deepEqual( Stem("masp"), "masp" );
	deepEqual( Stem("mass"), "mass" );
	deepEqual( Stem("massa"), "mass" );
	deepEqual( Stem("massachusetts"), "massachusetts" );
	deepEqual( Stem("massacre"), "massacr" );
	deepEqual( Stem("massacres"), "massacr" );
	deepEqual( Stem("massageado"), "massag" );
	deepEqual( Stem("massagem"), "massag" );
	deepEqual( Stem("massagens"), "massagens" );
	deepEqual( Stem("massagista"), "massag" );
	deepEqual( Stem("massaini"), "massain" );
	deepEqual( Stem("massanori"), "massanor" );
	deepEqual( Stem("massaranduba"), "massarandub" );
	deepEqual( Stem("massas"), "mass" );
	deepEqual( Stem("massey"), "massey" );
	deepEqual( Stem("massificação"), "massific" );
	deepEqual( Stem("massini"), "massin" );
	deepEqual( Stem("massivo"), "massiv" );
	deepEqual( Stem("masson"), "masson" );
	deepEqual( Stem("master"), "mast" );
	deepEqual( Stem("masterclass"), "masterclass" );
	deepEqual( Stem("mastiga"), "mastig" );
	deepEqual( Stem("mastologia"), "mastolog" );
	deepEqual( Stem("mata"), "mat" );
	deepEqual( Stem("matá"), "mat" );
	deepEqual( Stem("matado"), "mat" );
	deepEqual( Stem("matagal"), "matagal" );
	deepEqual( Stem("matam"), "mat" );
	deepEqual( Stem("matamoros"), "matamor" );
	deepEqual( Stem("matança"), "matanc" );
	deepEqual( Stem("matando"), "mat" );
	deepEqual( Stem("matandos"), "matand" );
	deepEqual( Stem("matar"), "mat" );
	deepEqual( Stem("mataram"), "mat" );
	deepEqual( Stem("matarazzo"), "matarazz" );
	deepEqual( Stem("matarem"), "mat" );
	deepEqual( Stem("mataríamos"), "mat" );
	deepEqual( Stem("matas"), "mat" );
	deepEqual( Stem("matasse"), "mat" );
	deepEqual( Stem("matava"), "mat" );
	deepEqual( Stem("matavam"), "mat" );
	deepEqual( Stem("matemática"), "matemát" );
	deepEqual( Stem("matemático"), "matemát" );
	deepEqual( Stem("matemáticos"), "matemát" );
	deepEqual( Stem("mateo"), "mat" );
	deepEqual( Stem("mater"), "mat" );
	deepEqual( Stem("máter"), "mát" );
	deepEqual( Stem("matéria"), "matér" );
	deepEqual( Stem("materiais"), "materi" );
	deepEqual( Stem("material"), "material" );
	deepEqual( Stem("materialista"), "material" );
	deepEqual( Stem("materialização"), "materializ" );
	deepEqual( Stem("materializar"), "materializ" );
	deepEqual( Stem("materializou"), "materializ" );
	deepEqual( Stem("materialmente"), "material" );
	deepEqual( Stem("matérias"), "matér" );
	deepEqual( Stem("materna"), "matern" );
	deepEqual( Stem("maternal"), "maternal" );
	deepEqual( Stem("maternidade"), "matern" );
	deepEqual( Stem("materno"), "matern" );
	deepEqual( Stem("mateus"), "mateus" );
	deepEqual( Stem("matheus"), "matheus" );
	deepEqual( Stem("matinê"), "matin" );
	deepEqual( Stem("matinês"), "matinês" );
	deepEqual( Stem("matizes"), "matiz" );
	deepEqual( Stem("mato"), "mat" );
	deepEqual( Stem("matos"), "mat" );
	deepEqual( Stem("matoso"), "matos" );
	deepEqual( Stem("matou"), "mat" );
	deepEqual( Stem("matriarca"), "matriarc" );
	deepEqual( Stem("matrícula"), "matrícul" );
	deepEqual( Stem("matriculada"), "matricul" );
	deepEqual( Stem("matriculados"), "matricul" );
	deepEqual( Stem("matriculando"), "matricul" );
	deepEqual( Stem("matricularam"), "matricul" );
	deepEqual( Stem("matrimônio"), "matrimôni" );
	deepEqual( Stem("matrimônios"), "matrimôni" );
	deepEqual( Stem("matrix"), "matrix" );
	deepEqual( Stem("matriz"), "matriz" );
	deepEqual( Stem("matrizes"), "matriz" );
	deepEqual( Stem("mattar"), "matt" );
	deepEqual( Stem("matte"), "matt" );
	deepEqual( Stem("matteo"), "matt" );
	deepEqual( Stem("matthew"), "matthew" );
	deepEqual( Stem("matthews"), "matthews" );
	deepEqual( Stem("mattoli"), "mattol" );
	deepEqual( Stem("mattos"), "matt" );
	deepEqual( Stem("maturidade"), "matur" );
	deepEqual( Stem("matusalém"), "matusalém" );
	deepEqual( Stem("matutar"), "matut" );
	deepEqual( Stem("matutino"), "matutin" );
	deepEqual( Stem("matuto"), "matut" );
	deepEqual( Stem("mau"), "mau" );
	deepEqual( Stem("mauá"), "mau" );
	deepEqual( Stem("maudsley"), "maudsley" );
	deepEqual( Stem("mauri"), "maur" );
	deepEqual( Stem("mauricinhos"), "mauricinh" );
	deepEqual( Stem("maurício"), "mauríci" );
	deepEqual( Stem("maurizio"), "maurizi" );
	deepEqual( Stem("mauro"), "maur" );
	deepEqual( Stem("maus"), "maus" );
	deepEqual( Stem("mausoléu"), "mausoléu" );
	deepEqual( Stem("mautner"), "mautn" );
	deepEqual( Stem("max"), "max" );
	deepEqual( Stem("maxilar"), "maxil" );
	deepEqual( Stem("maxima"), "maxim" );
	deepEqual( Stem("máxima"), "máxim" );
	deepEqual( Stem("máximo"), "máxim" );
	deepEqual( Stem("maxixe"), "maxix" );
	deepEqual( Stem("mayer"), "may" );
	deepEqual( Stem("mayo"), "may" );
	deepEqual( Stem("mayrink"), "mayrink" );
	deepEqual( Stem("mazda"), "mazd" );
	deepEqual( Stem("mazelas"), "mazel" );
	deepEqual( Stem("mazindol"), "mazindol" );
	deepEqual( Stem("mazzola"), "mazzol" );
	deepEqual( Stem("mb"), "mb" );
	deepEqual( Stem("mbr"), "mbr" );
	deepEqual( Stem("mc"), "mc" );
	deepEqual( Stem("mcdean"), "mcdean" );
	deepEqual( Stem("mcdonald"), "mcdonald" );
	deepEqual( Stem("mcdonnell"), "mcdonnell" );
	deepEqual( Stem("mcenroe"), "mcenro" );
	deepEqual( Stem("mcgill"), "mcgill" );
	deepEqual( Stem("mckinley"), "mckinley" );
	deepEqual( Stem("mcleodusa"), "mcleodus" );
	deepEqual( Stem("mcmorrow"), "mcmorrow" );
	deepEqual( Stem("mct"), "mct" );
	deepEqual( Stem("md"), "md" );
	deepEqual( Stem("mdb"), "mdb" );
	deepEqual( Stem("me"), "me" );
	deepEqual( Stem("mea"), "mea" );
	deepEqual( Stem("meada"), "mead" );
	deepEqual( Stem("meados"), "mead" );
	deepEqual( Stem("meb"), "meb" );
	deepEqual( Stem("mec"), "mec" );
	deepEqual( Stem("meca"), "mec" );
	deepEqual( Stem("mecânica"), "mecân" );
	deepEqual( Stem("mecânicas"), "mecân" );
	deepEqual( Stem("mecanicista"), "mecanic" );
	deepEqual( Stem("mecânico"), "mecân" );
	deepEqual( Stem("mecânicos"), "mecân" );
	deepEqual( Stem("mecanismo"), "mecan" );
	deepEqual( Stem("mecanismos"), "mecan" );
	deepEqual( Stem("mecanizada"), "mecaniz" );
	deepEqual( Stem("mecanizadas"), "mecaniz" );
	deepEqual( Stem("mecanizado"), "mecaniz" );
	deepEqual( Stem("mecanizar"), "mecaniz" );
	deepEqual( Stem("mecas"), "mec" );
	deepEqual( Stem("mechas"), "mech" );
	deepEqual( Stem("med"), "med" );
	deepEqual( Stem("medalhão"), "medalhã" );
	deepEqual( Stem("medalhões"), "medalhõ" );
	deepEqual( Stem("mede"), "med" );
	deepEqual( Stem("medéia"), "med" );
	deepEqual( Stem("medeiros"), "medeir" );
	deepEqual( Stem("medellín"), "medellín" );
	deepEqual( Stem("medem"), "med" );
	deepEqual( Stem("média"), "méd" );
	deepEqual( Stem("mediação"), "mediaçã" );
	deepEqual( Stem("mediados"), "medi" );
	deepEqual( Stem("mediam"), "med" );
	deepEqual( Stem("mediante"), "mediant" );
	deepEqual( Stem("médias"), "méd" );
	deepEqual( Stem("médica"), "médic" );
	deepEqual( Stem("medicação"), "medic" );
	deepEqual( Stem("medicada"), "medic" );
	deepEqual( Stem("medicados"), "medic" );
	deepEqual( Stem("medicamento"), "medic" );
	deepEqual( Stem("medicamentos"), "medic" );
	deepEqual( Stem("medicamentosa"), "medicament" );
	deepEqual( Stem("medição"), "mediçã" );
	deepEqual( Stem("medicar"), "medic" );
	deepEqual( Stem("médicas"), "médic" );
	deepEqual( Stem("médici"), "médic" );
	deepEqual( Stem("medicina"), "medicin" );
	deepEqual( Stem("medicinal"), "medicinal" );
	deepEqual( Stem("medicinas"), "medicin" );
	deepEqual( Stem("médico"), "médic" );
	deepEqual( Stem("médicos"), "médic" );
	deepEqual( Stem("medida"), "med" );
	deepEqual( Stem("medidas"), "med" );
	deepEqual( Stem("medido"), "med" );
	deepEqual( Stem("medidor"), "medidor" );
	deepEqual( Stem("medidores"), "medidor" );
	deepEqual( Stem("medievais"), "mediev" );
	deepEqual( Stem("medieval"), "medieval" );
	deepEqual( Stem("medievo"), "mediev" );
	deepEqual( Stem("medimos"), "med" );
	deepEqual( Stem("medina"), "medin" );
	deepEqual( Stem("médio"), "médi" );
	deepEqual( Stem("medíocre"), "medíocr" );
	deepEqual( Stem("medíocres"), "medíocr" );
	deepEqual( Stem("médios"), "médi" );
	deepEqual( Stem("medir"), "med" );
	deepEqual( Stem("meditar"), "medit" );
	deepEqual( Stem("mediterrânea"), "mediterrân" );
	deepEqual( Stem("mediterrâneo"), "mediterrân" );
	deepEqual( Stem("mediu"), "med" );
	deepEqual( Stem("médium"), "médium" );
	deepEqual( Stem("médiuns"), "médiuns" );
	deepEqual( Stem("medo"), "med" );
	deepEqual( Stem("medonho"), "medonh" );
	deepEqual( Stem("medos"), "med" );
	deepEqual( Stem("medrosa"), "medros" );
	deepEqual( Stem("medula"), "medul" );
	deepEqual( Stem("medulares"), "medul" );
	deepEqual( Stem("mega"), "meg" );
	deepEqual( Stem("megaagência"), "megaagent" );
	deepEqual( Stem("megabytes"), "megabyt" );
	deepEqual( Stem("megadramáticos"), "megadramát" );
	deepEqual( Stem("megaempresa"), "megaempres" );
	deepEqual( Stem("megaestrelas"), "megaestrel" );
	deepEqual( Stem("megaevento"), "megaevent" );
	deepEqual( Stem("megalaboratório"), "megalaboratóri" );
	deepEqual( Stem("megale"), "megal" );
	deepEqual( Stem("megalômanos"), "megalôman" );
	deepEqual( Stem("megamilionária"), "megamilionár" );
	deepEqual( Stem("megassucesso"), "megassucess" );
	deepEqual( Stem("megastars"), "megastars" );
	deepEqual( Stem("megastores"), "megastor" );
	deepEqual( Stem("megatendências"), "megatendent" );
	deepEqual( Stem("megatons"), "megatons" );
	deepEqual( Stem("megawatts"), "megawatts" );
	deepEqual( Stem("megera"), "meg" );
	deepEqual( Stem("megestat"), "megestat" );
	deepEqual( Stem("mehana"), "mehan" );
	deepEqual( Stem("meia"), "mei" );
	deepEqual( Stem("meias"), "mei" );
	deepEqual( Stem("méier"), "méi" );
	deepEqual( Stem("meiga"), "meig" );
	deepEqual( Stem("meigo"), "meig" );
	deepEqual( Stem("meio"), "mei" );
	deepEqual( Stem("meios"), "mei" );
	deepEqual( Stem("meira"), "meir" );
	deepEqual( Stem("meireles"), "meirel" );
	deepEqual( Stem("mel"), "mel" );
	deepEqual( Stem("meladas"), "mel" );
	deepEqual( Stem("melancólico"), "melancól" );
	deepEqual( Stem("melão"), "melã" );
	deepEqual( Stem("melaré"), "melar" );
	deepEqual( Stem("melbourne"), "melbourn" );
	deepEqual( Stem("melhor"), "melhor" );
	deepEqual( Stem("melhora"), "melhor" );
	deepEqual( Stem("melhoradinha"), "melhoradinh" );
	deepEqual( Stem("melhorado"), "melhor" );
	deepEqual( Stem("melhoram"), "melhor" );
	deepEqual( Stem("melhoramentos"), "melhor" );
	deepEqual( Stem("melhorando"), "melhor" );
	deepEqual( Stem("melhorar"), "melhor" );
	deepEqual( Stem("melhoraram"), "melhor" );
	deepEqual( Stem("melhoras"), "melhor" );
	deepEqual( Stem("melhore"), "melhor" );
	deepEqual( Stem("melhores"), "melhor" );
	deepEqual( Stem("melhoria"), "melhor" );
	deepEqual( Stem("melhorias"), "melhor" );
	deepEqual( Stem("melhoro"), "melhor" );
	deepEqual( Stem("melhorou"), "melhor" );
	deepEqual( Stem("meliá"), "meli" );
	deepEqual( Stem("melina"), "melin" );
	deepEqual( Stem("melinde"), "melind" );
	deepEqual( Stem("melindres"), "melindr" );
	deepEqual( Stem("melinger"), "meling" );
	deepEqual( Stem("melissa"), "meliss" );
	deepEqual( Stem("mellinger"), "melling" );
	deepEqual( Stem("mello"), "mell" );
	deepEqual( Stem("melo"), "mel" );
	deepEqual( Stem("melodia"), "melod" );
	deepEqual( Stem("melodias"), "melod" );
	deepEqual( Stem("melódica"), "melód" );
	deepEqual( Stem("melodrama"), "melodram" );
	deepEqual( Stem("melodramático"), "melodramát" );
	deepEqual( Stem("melômano"), "melôman" );
	deepEqual( Stem("melômanos"), "melôman" );
	deepEqual( Stem("melos"), "mel" );
	deepEqual( Stem("melosa"), "melos" );
	deepEqual( Stem("melvin"), "melvin" );
	deepEqual( Stem("melvyn"), "melvyn" );
	deepEqual( Stem("member"), "memb" );
	deepEqual( Stem("membro"), "membr" );
	deepEqual( Stem("membros"), "membr" );
	deepEqual( Stem("memê"), "mem" );
	deepEqual( Stem("memo"), "mem" );
	deepEqual( Stem("memorável"), "memor" );
	deepEqual( Stem("memória"), "memór" );
	deepEqual( Stem("memorial"), "memorial" );
	deepEqual( Stem("memórias"), "memór" );
	deepEqual( Stem("memorizam"), "memoriz" );
	deepEqual( Stem("men"), "men" );
	deepEqual( Stem("menção"), "mençã" );
	deepEqual( Stem("mencionado"), "mencion" );
	deepEqual( Stem("mencionar"), "mencion" );
	deepEqual( Stem("mencionei"), "mencion" );
	deepEqual( Stem("mencionou"), "mencion" );
	deepEqual( Stem("menconi"), "mencon" );
	deepEqual( Stem("mendel"), "mendel" );
	deepEqual( Stem("mendes"), "mend" );
	deepEqual( Stem("mendicância"), "mendic" );
	deepEqual( Stem("mendigo"), "mendig" );
	deepEqual( Stem("mendigos"), "mendig" );
	deepEqual( Stem("mendonça"), "mendonc" );
	deepEqual( Stem("meneghine"), "meneghin" );
	deepEqual( Stem("menezes"), "menez" );
	deepEqual( Stem("menina"), "menin" );
	deepEqual( Stem("meninas"), "menin" );
	deepEqual( Stem("meninice"), "meninic" );
	deepEqual( Stem("menininha"), "menininh" );
	deepEqual( Stem("menininhas"), "menininh" );
	deepEqual( Stem("menino"), "menin" );
	deepEqual( Stem("meninos"), "menin" );
	deepEqual( Stem("menisco"), "menisc" );
	deepEqual( Stem("menopausa"), "menopaus" );
	deepEqual( Stem("menor"), "menor" );
	deepEqual( Stem("menores"), "menor" );
	deepEqual( Stem("menos"), "men" );
	deepEqual( Stem("mensageiro"), "mensageir" );
	deepEqual( Stem("mensageiros"), "mensageir" );
	deepEqual( Stem("mensagem"), "mensag" );
	deepEqual( Stem("mensagens"), "mensagens" );
	deepEqual( Stem("mensais"), "mens" );
	deepEqual( Stem("mensal"), "mensal" );
	deepEqual( Stem("mensalidade"), "mensal" );
	deepEqual( Stem("mensalidades"), "mensal" );
	deepEqual( Stem("mensalmente"), "mensal" );
	deepEqual( Stem("menstrua"), "menstru" );
	deepEqual( Stem("menstruação"), "menstruaçã" );
	deepEqual( Stem("menstruações"), "menstruaçõ" );
	deepEqual( Stem("menstruada"), "menstru" );
	deepEqual( Stem("menstrual"), "menstrual" );
	deepEqual( Stem("menstruam"), "menstru" );
	deepEqual( Stem("menstruaram"), "menstru" );
	deepEqual( Stem("mensurar"), "mensur" );
	deepEqual( Stem("menta"), "ment" );
	deepEqual( Stem("mentais"), "ment" );
	deepEqual( Stem("mental"), "mental" );
	deepEqual( Stem("mentalidade"), "mental" );
	deepEqual( Stem("mentalização"), "mentaliz" );
	deepEqual( Stem("mentalmente"), "mental" );
	deepEqual( Stem("mente"), "ment" );
	deepEqual( Stem("mentem"), "ment" );
	deepEqual( Stem("mentindo"), "ment" );
	deepEqual( Stem("mentir"), "ment" );
	deepEqual( Stem("mentira"), "ment" );
	deepEqual( Stem("mentiram"), "ment" );
	deepEqual( Stem("mentiras"), "ment" );
	deepEqual( Stem("mentirem"), "ment" );
	deepEqual( Stem("mentiria"), "ment" );
	deepEqual( Stem("mentirinha"), "mentirinh" );
	deepEqual( Stem("mentiroso"), "mentir" );
	deepEqual( Stem("mentirosos"), "mentir" );
	deepEqual( Stem("mentiu"), "ment" );
	deepEqual( Stem("mentor"), "mentor" );
	deepEqual( Stem("menu"), "menu" );
	deepEqual( Stem("menus"), "menus" );
	deepEqual( Stem("mera"), "mer" );
	deepEqual( Stem("meramente"), "mer" );
	deepEqual( Stem("mercadante"), "mercad" );
	deepEqual( Stem("mercado"), "merc" );
	deepEqual( Stem("mercadológico"), "mercadológ" );
	deepEqual( Stem("mercadores"), "mercador" );
	deepEqual( Stem("mercadoria"), "mercador" );
	deepEqual( Stem("mercadorias"), "mercador" );
	deepEqual( Stem("mercados"), "merc" );
	deepEqual( Stem("mercancini"), "mercancin" );
	deepEqual( Stem("mercantil"), "mercantil" );
	deepEqual( Stem("mercator"), "mercator" );
	deepEqual( Stem("mercedão"), "mercedã" );
	deepEqual( Stem("mercedes"), "merced" );
	deepEqual( Stem("mercenária"), "mercenár" );
	deepEqual( Stem("mercenário"), "mercenári" );
	deepEqual( Stem("mercenários"), "mercenári" );
	deepEqual( Stem("mércio"), "mérci" );
	deepEqual( Stem("merck"), "merck" );
	deepEqual( Stem("mercosul"), "mercosul" );
	deepEqual( Stem("mercury"), "mercury" );
	deepEqual( Stem("merece"), "merec" );
	deepEqual( Stem("merecedor"), "merecedor" );
	deepEqual( Stem("merecem"), "merec" );
	deepEqual( Stem("merecendo"), "merec" );
	deepEqual( Stem("merecer"), "merec" );
	deepEqual( Stem("mereceram"), "merec" );
	deepEqual( Stem("mereceu"), "merec" );
	deepEqual( Stem("merecia"), "merec" );
	deepEqual( Stem("merecido"), "merec" );
	deepEqual( Stem("merecimento"), "merec" );
	deepEqual( Stem("mereço"), "merec" );
	deepEqual( Stem("merege"), "mereg" );
	deepEqual( Stem("merenda"), "merend" );
	deepEqual( Stem("merengue"), "mereng" );
	deepEqual( Stem("mergulha"), "mergulh" );
	deepEqual( Stem("mergulhada"), "mergulh" );
	deepEqual( Stem("mergulhado"), "mergulh" );
	deepEqual( Stem("mergulhador"), "mergulh" );
	deepEqual( Stem("mergulhadores"), "mergulh" );
	deepEqual( Stem("mergulham"), "mergulh" );
	deepEqual( Stem("mergulhando"), "mergulh" );
	deepEqual( Stem("mergulhar"), "mergulh" );
	deepEqual( Stem("mergulharam"), "mergulh" );
	deepEqual( Stem("mergulho"), "mergulh" );
	deepEqual( Stem("mergulhos"), "mergulh" );
	deepEqual( Stem("mergulhou"), "mergulh" );
	deepEqual( Stem("meridien"), "meridien" );
	deepEqual( Stem("meriti"), "merit" );
	deepEqual( Stem("meritíssimo"), "meritíssim" );
	deepEqual( Stem("mérito"), "mérit" );
	deepEqual( Stem("meritocracia"), "meritocrac" );
	deepEqual( Stem("merlin"), "merlin" );
	deepEqual( Stem("merlot"), "merlot" );
	deepEqual( Stem("mero"), "mer" );
	deepEqual( Stem("meros"), "mer" );
	deepEqual( Stem("merrill"), "merrill" );
	deepEqual( Stem("mês"), "mês" );
	deepEqual( Stem("mesa"), "mes" );
	deepEqual( Stem("mesada"), "mes" );
	deepEqual( Stem("mesadas"), "mes" );
	deepEqual( Stem("mesalinho"), "mesalinh" );
	deepEqual( Stem("mesas"), "mes" );
	deepEqual( Stem("mesbla"), "mesbl" );
	deepEqual( Stem("mescal"), "mescal" );
	deepEqual( Stem("mescla"), "mescl" );
	deepEqual( Stem("mesclada"), "mescl" );
	deepEqual( Stem("mesclado"), "mescl" );
	deepEqual( Stem("meses"), "mes" );
	deepEqual( Stem("mesinha"), "mesinh" );
	deepEqual( Stem("mesma"), "mesm" );
	deepEqual( Stem("mesmas"), "mesm" );
	deepEqual( Stem("mesmice"), "mesmic" );
	deepEqual( Stem("mesmo"), "mesm" );
	deepEqual( Stem("mesmos"), "mesm" );
	deepEqual( Stem("mesquita"), "mesquit" );
	deepEqual( Stem("mesquitas"), "mesquit" );
	deepEqual( Stem("messiânico"), "messiân" );
	deepEqual( Stem("messianismo"), "messian" );
	deepEqual( Stem("messias"), "mess" );
	deepEqual( Stem("mestiço"), "mestic" );
	deepEqual( Stem("mestiços"), "mestic" );
	deepEqual( Stem("mestrado"), "mestr" );
	deepEqual( Stem("mestre"), "mestr" );
	deepEqual( Stem("mestres"), "mestr" );
	deepEqual( Stem("meta"), "met" );
	deepEqual( Stem("metabólicas"), "metaból" );
	deepEqual( Stem("metabolizar"), "metaboliz" );
	deepEqual( Stem("metabologia"), "metabolog" );
	deepEqual( Stem("metade"), "metad" );
	deepEqual( Stem("metáfora"), "metáfor" );
	deepEqual( Stem("metaforicamente"), "metafor" );
	deepEqual( Stem("metais"), "met" );
	deepEqual( Stem("metal"), "metal" );
	deepEqual( Stem("metálico"), "metál" );
	deepEqual( Stem("metalizou"), "metaliz" );
	deepEqual( Stem("metalurgia"), "metalurg" );
	deepEqual( Stem("metalúrgica"), "metalúrg" );
	deepEqual( Stem("metamorfose"), "metamorfos" );
	deepEqual( Stem("metas"), "met" );
	deepEqual( Stem("metástases"), "metástas" );
	deepEqual( Stem("metemos"), "met" );
	deepEqual( Stem("meteórica"), "meteór" );
	deepEqual( Stem("meteorologia"), "meteorolog" );
	deepEqual( Stem("meteorológica"), "meteorológ" );
	deepEqual( Stem("meteorológicas"), "meteorológ" );
	deepEqual( Stem("meter"), "met" );
	deepEqual( Stem("meteram"), "met" );
	deepEqual( Stem("meteu"), "met" );
	deepEqual( Stem("metia"), "met" );
	deepEqual( Stem("metiam"), "met" );
	deepEqual( Stem("meticulosamente"), "meticul" );
	deepEqual( Stem("meticuloso"), "meticul" );
	deepEqual( Stem("metida"), "met" );
	deepEqual( Stem("metido"), "met" );
	deepEqual( Stem("metidos"), "met" );
	deepEqual( Stem("métier"), "méti" );
	deepEqual( Stem("metódico"), "metód" );
	deepEqual( Stem("metodista"), "metod" );
	deepEqual( Stem("método"), "métod" );
	deepEqual( Stem("metodologia"), "metodolog" );
	deepEqual( Stem("metodologias"), "metodolog" );
	deepEqual( Stem("métodos"), "métod" );
	deepEqual( Stem("metotrexate"), "metotrexat" );
	deepEqual( Stem("metragem"), "metrag" );
	deepEqual( Stem("metralhado"), "metralh" );
	deepEqual( Stem("metralhadora"), "metralh" );
	deepEqual( Stem("metralhadoras"), "metralh" );
	deepEqual( Stem("métrico"), "métric" );
	deepEqual( Stem("metro"), "metr" );
	deepEqual( Stem("metrô"), "metrô" );
	deepEqual( Stem("metrópole"), "metrópol" );
	deepEqual( Stem("metrópoles"), "metrópol" );
	deepEqual( Stem("metrópolis"), "metrópol" );
	deepEqual( Stem("metropolitan"), "metropolitan" );
	deepEqual( Stem("metropolitana"), "metropolitan" );
	deepEqual( Stem("metropolitanas"), "metropolitan" );
	deepEqual( Stem("metros"), "metr" );
	deepEqual( Stem("meu"), "meu" );
	deepEqual( Stem("meus"), "meus" );
	deepEqual( Stem("mexe"), "mex" );
	deepEqual( Stem("mexem"), "mex" );
	deepEqual( Stem("mexer"), "mex" );
	deepEqual( Stem("mexeria"), "mex" );
	deepEqual( Stem("mexericando"), "mexeric" );
	deepEqual( Stem("mexeu"), "mex" );
	deepEqual( Stem("mexi"), "mex" );
	deepEqual( Stem("mexia"), "mex" );
	deepEqual( Stem("mexicana"), "mexican" );
	deepEqual( Stem("mexicanas"), "mexican" );
	deepEqual( Stem("mexicano"), "mexican" );
	deepEqual( Stem("mexicanos"), "mexican" );
	deepEqual( Stem("méxico"), "méxic" );
	deepEqual( Stem("mexirica"), "mexir" );
	deepEqual( Stem("meyer"), "mey" );
	deepEqual( Stem("mezarobba"), "mezarobb" );
	deepEqual( Stem("mezinhas"), "mezinh" );
	deepEqual( Stem("mezzo"), "mezz" );
	deepEqual( Stem("mg"), "mg" );
	deepEqual( Stem("mgm"), "mgm" );
	deepEqual( Stem("mhz"), "mhz" );
	deepEqual( Stem("mí"), "mí" );
	deepEqual( Stem("miami"), "miam" );
	deepEqual( Stem("miar"), "miar" );
	deepEqual( Stem("micados"), "mic" );
	deepEqual( Stem("miçangas"), "miçang" );
	deepEqual( Stem("micaram"), "mic" );
	deepEqual( Stem("michael"), "michael" );
	deepEqual( Stem("michaelicheh"), "michaelicheh" );
	deepEqual( Stem("michalski"), "michalsk" );
	deepEqual( Stem("michel"), "michel" );
	deepEqual( Stem("michelotti"), "michelott" );
	deepEqual( Stem("michigan"), "michigan" );
	deepEqual( Stem("mick"), "mick" );
	deepEqual( Stem("mickey"), "mickey" );
	deepEqual( Stem("mico"), "mic" );
	deepEqual( Stem("micoses"), "micos" );
	deepEqual( Stem("micreiro"), "micreir" );
	deepEqual( Stem("micro"), "micr" );
	deepEqual( Stem("micróbios"), "micróbi" );
	deepEqual( Stem("microcomputador"), "microcomput" );
	deepEqual( Stem("microempresário"), "microempresári" );
	deepEqual( Stem("microfilme"), "microfilm" );
	deepEqual( Stem("microfilmou"), "microfilm" );
	deepEqual( Stem("microfone"), "microfon" );
	deepEqual( Stem("microondas"), "microond" );
	deepEqual( Stem("microônibus"), "microônibus" );
	deepEqual( Stem("micros"), "micr" );
	deepEqual( Stem("microscópica"), "microscóp" );
	deepEqual( Stem("microscopicamente"), "microscop" );
	deepEqual( Stem("microscópico"), "microscóp" );
	deepEqual( Stem("microscópio"), "microscópi" );
	deepEqual( Stem("microsoft"), "microsoft" );
	deepEqual( Stem("microsubmarino"), "microsubmarin" );
	deepEqual( Stem("microvlar"), "microvl" );
	deepEqual( Stem("midas"), "mid" );
	deepEqual( Stem("middle"), "middl" );
	deepEqual( Stem("middlesbrough"), "middlesbrough" );
	deepEqual( Stem("midem"), "mid" );
	deepEqual( Stem("mídia"), "míd" );
	deepEqual( Stem("mídias"), "míd" );
	deepEqual( Stem("mielke"), "mielk" );
	deepEqual( Stem("mignon"), "mignon" );
	deepEqual( Stem("migrações"), "migraçõ" );
	deepEqual( Stem("migrantes"), "migrant" );
	deepEqual( Stem("migrar"), "migr" );
	deepEqual( Stem("migraram"), "migr" );
	deepEqual( Stem("migratório"), "migratóri" );
	deepEqual( Stem("migrou"), "migr" );
	deepEqual( Stem("miguel"), "miguel" );
	deepEqual( Stem("mike"), "mik" );
	deepEqual( Stem("mil"), "mil" );
	deepEqual( Stem("milagre"), "milagr" );
	deepEqual( Stem("milagreiro"), "milagreir" );
	deepEqual( Stem("milagres"), "milagr" );
	deepEqual( Stem("milagrosa"), "milagr" );
	deepEqual( Stem("milagrosas"), "milagr" );
	deepEqual( Stem("milagroso"), "milagr" );
	deepEqual( Stem("milão"), "milã" );
	deepEqual( Stem("milena"), "milen" );
	deepEqual( Stem("milenar"), "milen" );
	deepEqual( Stem("milenares"), "milen" );
	deepEqual( Stem("milene"), "milen" );
	deepEqual( Stem("milênio"), "milêni" );
	deepEqual( Stem("milênios"), "milêni" );
	deepEqual( Stem("milésimo"), "milésim" );
	deepEqual( Stem("milésimos"), "milés" );
	deepEqual( Stem("milfede"), "milfed" );
	deepEqual( Stem("milhão"), "milhã" );
	deepEqual( Stem("milharal"), "milharal" );
	deepEqual( Stem("milhares"), "milh" );
	deepEqual( Stem("milho"), "milh" );
	deepEqual( Stem("milhões"), "milhõ" );
	deepEqual( Stem("milícias"), "milíc" );
	deepEqual( Stem("miligrama"), "miligram" );
	deepEqual( Stem("miligramas"), "miligram" );
	deepEqual( Stem("milimétricas"), "milimétr" );
	deepEqual( Stem("milímetro"), "milímetr" );
	deepEqual( Stem("milímetros"), "milímetr" );
	deepEqual( Stem("milionária"), "milionár" );
	deepEqual( Stem("milionárias"), "milionár" );
	deepEqual( Stem("milionário"), "milionári" );
	deepEqual( Stem("milionários"), "milionári" );
	deepEqual( Stem("militância"), "milit" );
	deepEqual( Stem("militante"), "milit" );
	deepEqual( Stem("militantes"), "milit" );
	deepEqual( Stem("militão"), "militã" );
	deepEqual( Stem("militar"), "milit" );
	deepEqual( Stem("militaram"), "milit" );
	deepEqual( Stem("militares"), "milit" );
	deepEqual( Stem("militello"), "militell" );
	deepEqual( Stem("militou"), "milit" );
	deepEqual( Stem("milken"), "milken" );
	deepEqual( Stem("milla"), "mill" );
	deepEqual( Stem("miller"), "mill" );
	deepEqual( Stem("millet"), "millet" );
	deepEqual( Stem("millôr"), "millôr" );
	deepEqual( Stem("milton"), "milton" );
	deepEqual( Stem("mim"), "mim" );
	deepEqual( Stem("mimada"), "mim" );
	deepEqual( Stem("mimeografado"), "mimeograf" );
	deepEqual( Stem("mimeógrafo"), "mimeógraf" );
	deepEqual( Stem("mimética"), "mimét" );
	deepEqual( Stem("mimetizadas"), "mimetiz" );
	deepEqual( Stem("mímica"), "mímic" );
	deepEqual( Stem("mimos"), "mim" );
	deepEqual( Stem("min"), "min" );
	deepEqual( Stem("mina"), "min" );
	deepEqual( Stem("minado"), "min" );
	deepEqual( Stem("minaram"), "min" );
	deepEqual( Stem("minarelli"), "minarell" );
	deepEqual( Stem("minaretes"), "minaret" );
	deepEqual( Stem("minas"), "min" );
	deepEqual( Stem("mindlin"), "mindlin" );
	deepEqual( Stem("mineira"), "mineir" );
	deepEqual( Stem("mineirão"), "min" );
	deepEqual( Stem("mineirinho"), "mineirinh" );
	deepEqual( Stem("mineiro"), "mineir" );
	deepEqual( Stem("mineiros"), "mineir" );
	deepEqual( Stem("mineração"), "miner" );
	deepEqual( Stem("mineradora"), "miner" );
	deepEqual( Stem("minerais"), "miner" );
	deepEqual( Stem("mineral"), "mineral" );
	deepEqual( Stem("minério"), "minéri" );
	deepEqual( Stem("minérios"), "minéri" );
	deepEqual( Stem("mingaus"), "mingaus" );
	deepEqual( Stem("minguado"), "mingu" );
	deepEqual( Stem("minguados"), "mingu" );
	deepEqual( Stem("minha"), "minh" );
	deepEqual( Stem("minhas"), "minh" );
	deepEqual( Stem("miniaturas"), "miniatur" );
	deepEqual( Stem("miniaturização"), "miniaturiz" );
	deepEqual( Stem("miniblusa"), "miniblus" );
	deepEqual( Stem("minicenso"), "minicens" );
	deepEqual( Stem("minicratera"), "minicrat" );
	deepEqual( Stem("minifãs"), "minifãs" );
	deepEqual( Stem("mínima"), "mínim" );
	deepEqual( Stem("minimalista"), "minimal" );
	deepEqual( Stem("minimamente"), "minim" );
	deepEqual( Stem("mínimas"), "mínim" );
	deepEqual( Stem("minimizam"), "minimiz" );
	deepEqual( Stem("minimizar"), "minimiz" );
	deepEqual( Stem("mínimo"), "mínim" );
	deepEqual( Stem("mínimos"), "mín" );
	deepEqual( Stem("minimulher"), "minimulh" );
	deepEqual( Stem("minissaia"), "minissa" );
	deepEqual( Stem("minissérie"), "minisséri" );
	deepEqual( Stem("minisséries"), "minisséri" );
	deepEqual( Stem("ministerial"), "ministerial" );
	deepEqual( Stem("ministério"), "ministéri" );
	deepEqual( Stem("ministérios"), "ministéri" );
	deepEqual( Stem("ministras"), "ministr" );
	deepEqual( Stem("ministro"), "ministr" );
	deepEqual( Stem("ministros"), "ministr" );
	deepEqual( Stem("minnesotta"), "minnesott" );
	deepEqual( Stem("mino"), "min" );
	deepEqual( Stem("minoria"), "minor" );
	deepEqual( Stem("minorias"), "minor" );
	deepEqual( Stem("minoritária"), "minoritár" );
	deepEqual( Stem("minoritário"), "minoritári" );
	deepEqual( Stem("minta"), "mint" );
	deepEqual( Stem("minúcias"), "minúc" );
	deepEqual( Stem("minuciosa"), "minuc" );
	deepEqual( Stem("minuciosas"), "minuc" );
	deepEqual( Stem("minucioso"), "minuc" );
	deepEqual( Stem("minúscula"), "minúscul" );
	deepEqual( Stem("minúsculo"), "minúscul" );
	deepEqual( Stem("minúsculos"), "minúscul" );
	deepEqual( Stem("minuta"), "minut" );
	deepEqual( Stem("minuto"), "minut" );
	deepEqual( Stem("minutos"), "minut" );
	deepEqual( Stem("miocárdio"), "miocárdi" );
	deepEqual( Stem("miolo"), "miol" );
	deepEqual( Stem("mioma"), "miom" );
	deepEqual( Stem("miomas"), "miom" );
	deepEqual( Stem("miomatoso"), "miomat" );
	deepEqual( Stem("míopes"), "míop" );
	deepEqual( Stem("miopia"), "miop" );
	deepEqual( Stem("miou"), "miou" );
	deepEqual( Stem("mir"), "mir" );
	deepEqual( Stem("mira"), "mir" );
	deepEqual( Stem("mirabolantes"), "mirabol" );
	deepEqual( Stem("miraculosa"), "miracul" );
	deepEqual( Stem("mirage"), "mirag" );
	deepEqual( Stem("miragem"), "mirag" );
	deepEqual( Stem("miramax"), "miramax" );
	deepEqual( Stem("miranda"), "mirand" );
	deepEqual( Stem("mirani"), "miran" );
	deepEqual( Stem("mirante"), "mirant" );
	deepEqual( Stem("mircea"), "mirc" );
	deepEqual( Stem("miriam"), "mir" );
	deepEqual( Stem("míriam"), "mír" );
	deepEqual( Stem("mirian"), "mirian" );
	deepEqual( Stem("mírian"), "mírian" );
	deepEqual( Stem("mirim"), "mirim" );
	deepEqual( Stem("miro"), "mir" );
	deepEqual( Stem("miron"), "miron" );
	deepEqual( Stem("mirrado"), "mirr" );
	deepEqual( Stem("miscelânea"), "miscelân" );
	deepEqual( Stem("miscigenação"), "miscigen" );
	deepEqual( Stem("miseráveis"), "miser" );
	deepEqual( Stem("miserável"), "miser" );
	deepEqual( Stem("miseravelmente"), "miser" );
	deepEqual( Stem("miséria"), "misér" );
	deepEqual( Stem("misericórdia"), "misericórd" );
	deepEqual( Stem("míseros"), "míser" );
	deepEqual( Stem("miss"), "miss" );
	deepEqual( Stem("missa"), "miss" );
	deepEqual( Stem("missão"), "missã" );
	deepEqual( Stem("missas"), "miss" );
	deepEqual( Stem("missérie"), "misséri" );
	deepEqual( Stem("misses"), "miss" );
	deepEqual( Stem("missionária"), "missionár" );
	deepEqual( Stem("missionárias"), "missionár" );
	deepEqual( Stem("missionário"), "missionári" );
	deepEqual( Stem("missionários"), "missionári" );
	deepEqual( Stem("mississippi"), "mississipp" );
	deepEqual( Stem("missões"), "missõ" );
	deepEqual( Stem("mista"), "mist" );
	deepEqual( Stem("mistério"), "mistéri" );
	deepEqual( Stem("mistérios"), "mistéri" );
	deepEqual( Stem("misteriosa"), "misteri" );
	deepEqual( Stem("misteriosas"), "misteri" );
	deepEqual( Stem("misterioso"), "misteri" );
	deepEqual( Stem("mística"), "místic" );
	deepEqual( Stem("místico"), "místic" );
	deepEqual( Stem("mistificando"), "mistific" );
	deepEqual( Stem("misto"), "mist" );
	deepEqual( Stem("mistura"), "mistur" );
	deepEqual( Stem("misturada"), "mistur" );
	deepEqual( Stem("misturadas"), "mistur" );
	deepEqual( Stem("misturado"), "mistur" );
	deepEqual( Stem("misturados"), "mistur" );
	deepEqual( Stem("misturam"), "mistur" );
	deepEqual( Stem("misturando"), "mistur" );
	deepEqual( Stem("misturar"), "mistur" );
	deepEqual( Stem("misturas"), "mistur" );
	deepEqual( Stem("misturava"), "mistur" );
	deepEqual( Stem("mit"), "mit" );
	deepEqual( Stem("mítico"), "mític" );
	deepEqual( Stem("mito"), "mit" );
	deepEqual( Stem("mitologia"), "mitolog" );
	deepEqual( Stem("mitológico"), "mitológ" );
	deepEqual( Stem("mitos"), "mit" );
	deepEqual( Stem("mitsubishi"), "mitsubish" );
	deepEqual( Stem("mitsui"), "mitsu" );
	deepEqual( Stem("mitsuo"), "mitsu" );
	deepEqual( Stem("mitterrand"), "mitterrand" );
	deepEqual( Stem("miúda"), "miúd" );
	deepEqual( Stem("miudeza"), "miudez" );
	deepEqual( Stem("miudezas"), "miudez" );
	deepEqual( Stem("miúdos"), "miúd" );
	deepEqual( Stem("mix"), "mix" );
	deepEqual( Stem("mixado"), "mix" );
	deepEqual( Stem("ml"), "ml" );
	deepEqual( Stem("mmx"), "mmx" );
	deepEqual( Stem("moacir"), "moac" );
	deepEqual( Stem("moagem"), "moag" );
	deepEqual( Stem("moares"), "moar" );
	deepEqual( Stem("mobiliária"), "mobiliár" );
	deepEqual( Stem("mobiliário"), "mobiliári" );
	deepEqual( Stem("mobilidade"), "mobil" );
	deepEqual( Stem("mobilização"), "mobiliz" );
	deepEqual( Stem("mobilizar"), "mobiliz" );
	deepEqual( Stem("mobilizou"), "mobiliz" );
	deepEqual( Stem("mobral"), "mobral" );
	deepEqual( Stem("moça"), "moc" );
	deepEqual( Stem("moçambique"), "moçambiqu" );
	deepEqual( Stem("moças"), "moc" );
	deepEqual( Stem("mocassim"), "mocassim" );
	deepEqual( Stem("mochila"), "mochil" );
	deepEqual( Stem("mochileiros"), "mochileir" );
	deepEqual( Stem("mocidade"), "mocidad" );
	deepEqual( Stem("mocinhas"), "mocinh" );
	deepEqual( Stem("moço"), "moc" );
	deepEqual( Stem("moços"), "moc" );
	deepEqual( Stem("mocotó"), "mocot" );
	deepEqual( Stem("mod"), "mod" );
	deepEqual( Stem("moda"), "mod" );
	deepEqual( Stem("modalidade"), "modal" );
	deepEqual( Stem("modalidades"), "modal" );
	deepEqual( Stem("model"), "model" );
	deepEqual( Stem("modelagem"), "modelag" );
	deepEqual( Stem("modelar"), "model" );
	deepEqual( Stem("modeling"), "modeling" );
	deepEqual( Stem("modelista"), "model" );
	deepEqual( Stem("modelistas"), "model" );
	deepEqual( Stem("modelo"), "model" );
	deepEqual( Stem("modelos"), "model" );
	deepEqual( Stem("models"), "models" );
	deepEqual( Stem("modem"), "mod" );
	deepEqual( Stem("modems"), "modems" );
	deepEqual( Stem("moderação"), "moder" );
	deepEqual( Stem("moderadamente"), "moder" );
	deepEqual( Stem("moderadas"), "moder" );
	deepEqual( Stem("moderado"), "moder" );
	deepEqual( Stem("moderador"), "moder" );
	deepEqual( Stem("moderadores"), "moder" );
	deepEqual( Stem("moderados"), "moder" );
	deepEqual( Stem("moderar"), "moder" );
	deepEqual( Stem("moderassem"), "moder" );
	deepEqual( Stem("moderini"), "moderin" );
	deepEqual( Stem("moderna"), "modern" );
	deepEqual( Stem("modernas"), "modern" );
	deepEqual( Stem("modernidade"), "modern" );
	deepEqual( Stem("modernização"), "moderniz" );
	deepEqual( Stem("modernizar"), "moderniz" );
	deepEqual( Stem("modernizaram"), "moderniz" );
	deepEqual( Stem("moderno"), "modern" );
	deepEqual( Stem("modernos"), "modern" );
	deepEqual( Stem("modernoso"), "modern" );
	deepEqual( Stem("modesta"), "modest" );
	deepEqual( Stem("modestamente"), "modest" );
	deepEqual( Stem("modestas"), "modest" );
	deepEqual( Stem("modestia"), "modest" );
	deepEqual( Stem("modéstia"), "modést" );
	deepEqual( Stem("modesto"), "modest" );
	deepEqual( Stem("modestos"), "modest" );
	deepEqual( Stem("modificação"), "modific" );
	deepEqual( Stem("modificações"), "modific" );
	deepEqual( Stem("modificada"), "modific" );
	deepEqual( Stem("modificado"), "modific" );
	deepEqual( Stem("modificados"), "modific" );
	deepEqual( Stem("modificando"), "modific" );
	deepEqual( Stem("modificar"), "modific" );
	deepEqual( Stem("modificaram"), "modific" );
	deepEqual( Stem("modificaria"), "modific" );
	deepEqual( Stem("modificou"), "modific" );
	deepEqual( Stem("modinhas"), "modinh" );
	deepEqual( Stem("modismo"), "modism" );
	deepEqual( Stem("modismos"), "modism" );
	deepEqual( Stem("modo"), "mod" );
	deepEqual( Stem("modos"), "mod" );
	deepEqual( Stem("módulo"), "módul" );
	deepEqual( Stem("módulos"), "módul" );
	deepEqual( Stem("modus"), "modus" );
	deepEqual( Stem("moeda"), "moed" );
	deepEqual( Stem("moedas"), "moed" );
	deepEqual( Stem("moema"), "moem" );
	deepEqual( Stem("moet"), "moet" );
	deepEqual( Stem("mogi"), "mog" );
	deepEqual( Stem("mogno"), "mogn" );
	deepEqual( Stem("mogul"), "mogul" );
	deepEqual( Stem("moi"), "moi" );
	deepEqual( Stem("moinho"), "moinh" );
	deepEqual( Stem("moisés"), "moisés" );
	deepEqual( Stem("mojave"), "mojav" );
	deepEqual( Stem("mola"), "mol" );
	deepEqual( Stem("molas"), "mol" );
	deepEqual( Stem("molda"), "mold" );
	deepEqual( Stem("moldado"), "mold" );
	deepEqual( Stem("moldar"), "mold" );
	deepEqual( Stem("molde"), "mold" );
	deepEqual( Stem("moldes"), "mold" );
	deepEqual( Stem("moldou"), "mold" );
	deepEqual( Stem("moldura"), "moldur" );
	deepEqual( Stem("mole"), "mol" );
	deepEqual( Stem("molecada"), "molec" );
	deepEqual( Stem("molecagem"), "molecag" );
	deepEqual( Stem("molecagens"), "molecagens" );
	deepEqual( Stem("molécula"), "molécul" );
	deepEqual( Stem("molecular"), "molecul" );
	deepEqual( Stem("moleculares"), "molecul" );
	deepEqual( Stem("moléculas"), "molécul" );
	deepEqual( Stem("molejo"), "molej" );
	deepEqual( Stem("moleque"), "molequ" );
	deepEqual( Stem("moleques"), "molequ" );
	deepEqual( Stem("molestado"), "molest" );
	deepEqual( Stem("moléstia"), "molést" );
	deepEqual( Stem("moleza"), "molez" );
	deepEqual( Stem("molhada"), "molh" );
	deepEqual( Stem("molhava"), "molh" );
	deepEqual( Stem("molho"), "molh" );
	deepEqual( Stem("molhos"), "molh" );
	deepEqual( Stem("molière"), "molièr" );
	deepEqual( Stem("molina"), "molin" );
	deepEqual( Stem("moluscos"), "molusc" );
	deepEqual( Stem("momentânea"), "momentân" );
	deepEqual( Stem("momentaneamente"), "momentan" );
	deepEqual( Stem("momentâneas"), "momentân" );
	deepEqual( Stem("momentâneos"), "momentân" );
	deepEqual( Stem("momento"), "moment" );
	deepEqual( Stem("momentos"), "moment" );
	deepEqual( Stem("momentoso"), "moment" );
	deepEqual( Stem("mônaco"), "mônac" );
	deepEqual( Stem("monarca"), "monarc" );
	deepEqual( Stem("monarquia"), "monarqu" );
	deepEqual( Stem("monárquica"), "monárqu" );
	deepEqual( Stem("monarquista"), "monarqu" );
	deepEqual( Stem("monastério"), "monastéri" );
	deepEqual( Stem("monazítica"), "monazít" );
	deepEqual( Stem("monday"), "monday" );
	deepEqual( Stem("monde"), "mond" );
	deepEqual( Stem("monetária"), "monetár" );
	deepEqual( Stem("money"), "money" );
	deepEqual( Stem("monge"), "mong" );
	deepEqual( Stem("monges"), "mong" );
	deepEqual( Stem("mongóis"), "mongó" );
	deepEqual( Stem("mongol"), "mongol" );
	deepEqual( Stem("mongólia"), "mongól" );
	deepEqual( Stem("monica"), "monic" );
	deepEqual( Stem("mônica"), "mônic" );
	deepEqual( Stem("monique"), "moniqu" );
	deepEqual( Stem("monitoração"), "monitor" );
	deepEqual( Stem("monitorados"), "monitor" );
	deepEqual( Stem("monitoramento"), "monitor" );
	deepEqual( Stem("monitorar"), "monitor" );
	deepEqual( Stem("monitores"), "monitor" );
	deepEqual( Stem("moniz"), "moniz" );
	deepEqual( Stem("mono"), "mon" );
	deepEqual( Stem("monogâmica"), "monogâm" );
	deepEqual( Stem("monogâmico"), "monogâm" );
	deepEqual( Stem("monogâmicos"), "monogâm" );
	deepEqual( Stem("monopólio"), "monopóli" );
	deepEqual( Stem("monopólios"), "monopóli" );
	deepEqual( Stem("monossódico"), "monossód" );
	deepEqual( Stem("monoteístas"), "monoteíst" );
	deepEqual( Stem("monotemática"), "monotemát" );
	deepEqual( Stem("monotemático"), "monotemát" );
	deepEqual( Stem("monótona"), "monóton" );
	deepEqual( Stem("monótono"), "monóton" );
	deepEqual( Stem("monroe"), "monro" );
	deepEqual( Stem("monsenhor"), "monsenhor" );
	deepEqual( Stem("monserrat"), "monserrat" );
	deepEqual( Stem("monstrengos"), "monstreng" );
	deepEqual( Stem("monstro"), "monstr" );
	deepEqual( Stem("mont"), "mont" );
	deepEqual( Stem("monta"), "mont" );
	deepEqual( Stem("montada"), "mont" );
	deepEqual( Stem("montadas"), "mont" );
	deepEqual( Stem("montado"), "mont" );
	deepEqual( Stem("montadora"), "montador" );
	deepEqual( Stem("montadoras"), "montador" );
	deepEqual( Stem("montados"), "mont" );
	deepEqual( Stem("montagem"), "montag" );
	deepEqual( Stem("montagens"), "montagens" );
	deepEqual( Stem("montam"), "mont" );
	deepEqual( Stem("montamos"), "mont" );
	deepEqual( Stem("montana"), "montan" );
	deepEqual( Stem("montanarini"), "montanarin" );
	deepEqual( Stem("montanaro"), "montanar" );
	deepEqual( Stem("montando"), "mont" );
	deepEqual( Stem("montanha"), "montanh" );
	deepEqual( Stem("montanhas"), "montanh" );
	deepEqual( Stem("montanheses"), "montanhes" );
	deepEqual( Stem("montanhismo"), "montanh" );
	deepEqual( Stem("montanhista"), "montanh" );
	deepEqual( Stem("montanhosa"), "montanh" );
	deepEqual( Stem("montanhoso"), "montanh" );
	deepEqual( Stem("montante"), "montant" );
	deepEqual( Stem("montão"), "montã" );
	deepEqual( Stem("montar"), "mont" );
	deepEqual( Stem("montaram"), "mont" );
	deepEqual( Stem("montaria"), "mont" );
	deepEqual( Stem("montava"), "mont" );
	deepEqual( Stem("monte"), "mont" );
	deepEqual( Stem("montei"), "mont" );
	deepEqual( Stem("monteiro"), "monteir" );
	deepEqual( Stem("monteleone"), "monteleon" );
	deepEqual( Stem("montellizado"), "montelliz" );
	deepEqual( Stem("montello"), "montell" );
	deepEqual( Stem("montenegro"), "montenegr" );
	deepEqual( Stem("montes"), "mont" );
	deepEqual( Stem("montoro"), "montor" );
	deepEqual( Stem("montou"), "mont" );
	deepEqual( Stem("montreal"), "montreal" );
	deepEqual( Stem("monumentais"), "monument" );
	deepEqual( Stem("monumental"), "monumental" );
	deepEqual( Stem("monumento"), "monument" );
	deepEqual( Stem("monumentos"), "monument" );
	deepEqual( Stem("monza"), "monz" );
	deepEqual( Stem("moon"), "moon" );
	deepEqual( Stem("moore"), "moor" );
	deepEqual( Stem("mor"), "mor" );
	deepEqual( Stem("mora"), "mor" );
	deepEqual( Stem("moradia"), "morad" );
	deepEqual( Stem("morado"), "mor" );
	deepEqual( Stem("morador"), "morador" );
	deepEqual( Stem("moradora"), "morador" );
	deepEqual( Stem("moradoras"), "morador" );
	deepEqual( Stem("moradores"), "morador" );
	deepEqual( Stem("moraes"), "mora" );
	deepEqual( Stem("morais"), "mor" );
	deepEqual( Stem("moral"), "moral" );
	deepEqual( Stem("moralidades"), "moral" );
	deepEqual( Stem("moralismo"), "moral" );
	deepEqual( Stem("moralista"), "moral" );
	deepEqual( Stem("moralistas"), "moral" );
	deepEqual( Stem("moram"), "mor" );
	deepEqual( Stem("moramos"), "mor" );
	deepEqual( Stem("morando"), "mor" );
	deepEqual( Stem("morar"), "mor" );
	deepEqual( Stem("morarmos"), "mor" );
	deepEqual( Stem("morato"), "morat" );
	deepEqual( Stem("moratória"), "moratór" );
	deepEqual( Stem("morava"), "mor" );
	deepEqual( Stem("moravam"), "mor" );
	deepEqual( Stem("morávamos"), "mor" );
	deepEqual( Stem("mordida"), "mord" );
	deepEqual( Stem("mordomias"), "mordom" );
	deepEqual( Stem("moreau"), "moreau" );
	deepEqual( Stem("morei"), "mor" );
	deepEqual( Stem("moreira"), "moreir" );
	deepEqual( Stem("morena"), "moren" );
	deepEqual( Stem("morenas"), "moren" );
	deepEqual( Stem("morengueira"), "morengueir" );
	deepEqual( Stem("moreno"), "moren" );
	deepEqual( Stem("moretto"), "morett" );
	deepEqual( Stem("morfeu"), "morf" );
	deepEqual( Stem("morfologia"), "morfolog" );
	deepEqual( Stem("morfológicas"), "morfológ" );
	deepEqual( Stem("morgan"), "morgan" );
	deepEqual( Stem("moribunda"), "moribund" );
	deepEqual( Stem("moribundo"), "moribund" );
	deepEqual( Stem("moritz"), "moritz" );
	deepEqual( Stem("moro"), "mor" );
	deepEqual( Stem("morou"), "mor" );
	deepEqual( Stem("morre"), "morr" );
	deepEqual( Stem("morrem"), "morr" );
	deepEqual( Stem("morrendo"), "morr" );
	deepEqual( Stem("morrer"), "morr" );
	deepEqual( Stem("morreram"), "morr" );
	deepEqual( Stem("morrerão"), "morr" );
	deepEqual( Stem("morreria"), "morr" );
	deepEqual( Stem("morreriam"), "morr" );
	deepEqual( Stem("morresse"), "morr" );
	deepEqual( Stem("morreu"), "morr" );
	deepEqual( Stem("morri"), "morr" );
	deepEqual( Stem("morria"), "morr" );
	deepEqual( Stem("morriam"), "morr" );
	deepEqual( Stem("morrido"), "morr" );
	deepEqual( Stem("morro"), "morr" );
	deepEqual( Stem("morros"), "morr" );
	deepEqual( Stem("morrotes"), "morrot" );
	deepEqual( Stem("morta"), "mort" );
	deepEqual( Stem("mortágua"), "mortágu" );
	deepEqual( Stem("mortais"), "mort" );
	deepEqual( Stem("mortal"), "mortal" );
	deepEqual( Stem("mortalidade"), "mortal" );
	deepEqual( Stem("mortalmente"), "mortal" );
	deepEqual( Stem("mortas"), "mort" );
	deepEqual( Stem("morte"), "mort" );
	deepEqual( Stem("morteiros"), "morteir" );
	deepEqual( Stem("mortes"), "mort" );
	deepEqual( Stem("morto"), "mort" );
	deepEqual( Stem("morton"), "morton" );
	deepEqual( Stem("mortos"), "mort" );
	deepEqual( Stem("morumbi"), "morumb" );
	deepEqual( Stem("morumbifashion"), "morumbifashion" );
	deepEqual( Stem("mosaico"), "mosaic" );
	deepEqual( Stem("moscas"), "mosc" );
	deepEqual( Stem("moscatti"), "moscatt" );
	deepEqual( Stem("moscou"), "mosc" );
	deepEqual( Stem("moskos"), "mosk" );
	deepEqual( Stem("mosmorama"), "mosmoram" );
	deepEqual( Stem("mosquito"), "mosquit" );
	deepEqual( Stem("mosquitos"), "mosquit" );
	deepEqual( Stem("mossoró"), "mossor" );
	deepEqual( Stem("mostarda"), "mostard" );
	deepEqual( Stem("mosteiro"), "mosteir" );
	deepEqual( Stem("mosteiros"), "mosteir" );
	deepEqual( Stem("mostra"), "mostr" );
	deepEqual( Stem("mostrá"), "mostr" );
	deepEqual( Stem("mostrado"), "mostr" );
	deepEqual( Stem("mostradores"), "mostrador" );
	deepEqual( Stem("mostram"), "mostr" );
	deepEqual( Stem("mostramos"), "mostr" );
	deepEqual( Stem("mostrando"), "mostr" );
	deepEqual( Stem("mostrar"), "mostr" );
	deepEqual( Stem("mostrara"), "mostr" );
	deepEqual( Stem("mostrará"), "mostr" );
	deepEqual( Stem("mostraram"), "mostr" );
	deepEqual( Stem("mostras"), "mostr" );
	deepEqual( Stem("mostrasse"), "mostr" );
	deepEqual( Stem("mostrava"), "mostr" );
	deepEqual( Stem("mostravam"), "mostr" );
	deepEqual( Stem("mostre"), "mostr" );
	deepEqual( Stem("mostrei"), "mostr" );
	deepEqual( Stem("mostrem"), "mostr" );
	deepEqual( Stem("mostro"), "mostr" );
	deepEqual( Stem("mostrou"), "mostr" );
	deepEqual( Stem("mota"), "mot" );
	deepEqual( Stem("motel"), "motel" );
	deepEqual( Stem("motins"), "motins" );
	deepEqual( Stem("motivação"), "motiv" );
	deepEqual( Stem("motivada"), "motiv" );
	deepEqual( Stem("motivadas"), "motiv" );
	deepEqual( Stem("motivado"), "motiv" );
	deepEqual( Stem("motivaram"), "motiv" );
	deepEqual( Stem("motivo"), "motiv" );
	deepEqual( Stem("motivos"), "motiv" );
	deepEqual( Stem("moto"), "mot" );
	deepEqual( Stem("motocicleta"), "motociclet" );
	deepEqual( Stem("motocross"), "motocross" );
	deepEqual( Stem("motor"), "motor" );
	deepEqual( Stem("motora"), "motor" );
	deepEqual( Stem("motores"), "motor" );
	deepEqual( Stem("motorista"), "motor" );
	deepEqual( Stem("motoristas"), "motor" );
	deepEqual( Stem("motorizados"), "motoriz" );
	deepEqual( Stem("motorola"), "motorol" );
	deepEqual( Stem("motors"), "motors" );
	deepEqual( Stem("motos"), "mot" );
	deepEqual( Stem("mott"), "mott" );
	deepEqual( Stem("motta"), "mott" );
	deepEqual( Stem("moubarak"), "moubarak" );
	deepEqual( Stem("moulage"), "moulag" );
	deepEqual( Stem("moura"), "mour" );
	deepEqual( Stem("mourad"), "mourad" );
	deepEqual( Stem("mourão"), "mourã" );
	deepEqual( Stem("moureau"), "moureau" );
	deepEqual( Stem("mouse"), "mous" );
	deepEqual( Stem("moussawer"), "moussaw" );
	deepEqual( Stem("mousson"), "mousson" );
	deepEqual( Stem("móveis"), "móv" );
	deepEqual( Stem("móvel"), "móvel" );
	deepEqual( Stem("movem"), "mov" );
	deepEqual( Stem("movement"), "movement" );
	deepEqual( Stem("movendo"), "mov" );
	deepEqual( Stem("mover"), "mov" );
	deepEqual( Stem("moveram"), "mov" );
	deepEqual( Stem("moveu"), "mov" );
	deepEqual( Stem("movida"), "mov" );
	deepEqual( Stem("movido"), "mov" );
	deepEqual( Stem("movidos"), "mov" );
	deepEqual( Stem("movimenta"), "moviment" );
	deepEqual( Stem("movimentação"), "moviment" );
	deepEqual( Stem("movimentada"), "moviment" );
	deepEqual( Stem("movimentadas"), "moviment" );
	deepEqual( Stem("movimentados"), "moviment" );
	deepEqual( Stem("movimentam"), "moviment" );
	deepEqual( Stem("movimentar"), "moviment" );
	deepEqual( Stem("movimentava"), "moviment" );
	deepEqual( Stem("movimento"), "moviment" );
	deepEqual( Stem("movimentos"), "moviment" );
	deepEqual( Stem("movimentou"), "moviment" );
	deepEqual( Stem("mozart"), "mozart" );
	deepEqual( Stem("mozine"), "mozin" );
	deepEqual( Stem("mpb"), "mpb" );
	deepEqual( Stem("mpla"), "mpla" );
	deepEqual( Stem("mpm"), "mpm" );
	deepEqual( Stem("mr"), "mr" );
	deepEqual( Stem("mrk"), "mrk" );
	deepEqual( Stem("ms"), "ms" );
	deepEqual( Stem("mst"), "mst" );
	deepEqual( Stem("mt"), "mt" );
	deepEqual( Stem("mtv"), "mtv" );
	deepEqual( Stem("múcio"), "múci" );
	deepEqual( Stem("mucosa"), "mucos" );
	deepEqual( Stem("muçulmana"), "muçulman" );
	deepEqual( Stem("muçulmano"), "muçulman" );
	deepEqual( Stem("muçulmanos"), "muçulman" );
	deepEqual( Stem("muda"), "mud" );
	deepEqual( Stem("mudá"), "mud" );
	deepEqual( Stem("mudada"), "mud" );
	deepEqual( Stem("mudadas"), "mud" );
	deepEqual( Stem("mudado"), "mud" );
	deepEqual( Stem("mudamos"), "mud" );
	deepEqual( Stem("mudança"), "mudanc" );
	deepEqual( Stem("mudanças"), "mudanc" );
	deepEqual( Stem("mudando"), "mud" );
	deepEqual( Stem("mudar"), "mud" );
	deepEqual( Stem("mudara"), "mud" );
	deepEqual( Stem("mudará"), "mud" );
	deepEqual( Stem("mudaram"), "mud" );
	deepEqual( Stem("mudaria"), "mud" );
	deepEqual( Stem("mude"), "mud" );
	deepEqual( Stem("mudei"), "mud" );
	deepEqual( Stem("mudez"), "mudez" );
	deepEqual( Stem("mudo"), "mud" );
	deepEqual( Stem("mudos"), "mud" );
	deepEqual( Stem("mudou"), "mud" );
	deepEqual( Stem("muggiati"), "muggiat" );
	deepEqual( Stem("muita"), "muit" );
	deepEqual( Stem("muitas"), "muit" );
	deepEqual( Stem("muito"), "muit" );
	deepEqual( Stem("muitos"), "muit" );
	deepEqual( Stem("mujalli"), "mujall" );
	deepEqual( Stem("mula"), "mul" );
	deepEqual( Stem("mulas"), "mul" );
	deepEqual( Stem("mulata"), "mulat" );
	deepEqual( Stem("mulatas"), "mulat" );
	deepEqual( Stem("mulatice"), "mulatic" );
	deepEqual( Stem("mulatinho"), "mulatinh" );
	deepEqual( Stem("mulato"), "mulat" );
	deepEqual( Stem("mulatos"), "mulat" );
	deepEqual( Stem("mulatti"), "mulatt" );
	deepEqual( Stem("muletas"), "mulet" );
	deepEqual( Stem("mulher"), "mulh" );
	deepEqual( Stem("mulherada"), "mulher" );
	deepEqual( Stem("mulherão"), "mulh" );
	deepEqual( Stem("mulherengo"), "mulhereng" );
	deepEqual( Stem("mulheres"), "mulh" );
	deepEqual( Stem("muller"), "mull" );
	deepEqual( Stem("müller"), "müller" );
	deepEqual( Stem("multa"), "mult" );
	deepEqual( Stem("multá"), "mult" );
	deepEqual( Stem("multados"), "mult" );
	deepEqual( Stem("multam"), "mult" );
	deepEqual( Stem("multar"), "mult" );
	deepEqual( Stem("multas"), "mult" );
	deepEqual( Stem("multicolorida"), "multicolor" );
	deepEqual( Stem("multidão"), "multidã" );
	deepEqual( Stem("multidisciplinar"), "multidisciplin" );
	deepEqual( Stem("multidões"), "multidõ" );
	deepEqual( Stem("multimídia"), "multimíd" );
	deepEqual( Stem("multimilionário"), "multimilionári" );
	deepEqual( Stem("multinacionais"), "multinacion" );
	deepEqual( Stem("multinacional"), "multinacional" );
	deepEqual( Stem("múltipla"), "múltipl" );
	deepEqual( Stem("múltiplas"), "múltipl" );
	deepEqual( Stem("multiplica"), "multipl" );
	deepEqual( Stem("multiplicação"), "multiplic" );
	deepEqual( Stem("multiplicado"), "multiplic" );
	deepEqual( Stem("multiplicam"), "multiplic" );
	deepEqual( Stem("multiplicar"), "multiplic" );
	deepEqual( Stem("multiplicaram"), "multiplic" );
	deepEqual( Stem("multiplicou"), "multiplic" );
	deepEqual( Stem("múltiplo"), "múltipl" );
	deepEqual( Stem("mundana"), "mundan" );
	deepEqual( Stem("múndi"), "múnd" );
	deepEqual( Stem("mundiais"), "mundi" );
	deepEqual( Stem("mundial"), "mundial" );
	deepEqual( Stem("mundialmente"), "mundial" );
	deepEqual( Stem("mundista"), "mundist" );
	deepEqual( Stem("mundo"), "mund" );
	deepEqual( Stem("mundos"), "mund" );
	deepEqual( Stem("munhoz"), "munhoz" );
	deepEqual( Stem("munição"), "muniçã" );
	deepEqual( Stem("municiemos"), "munic" );
	deepEqual( Stem("municipais"), "municip" );
	deepEqual( Stem("municipal"), "municipal" );
	deepEqual( Stem("municipalização"), "municipaliz" );
	deepEqual( Stem("município"), "municípi" );
	deepEqual( Stem("municípios"), "municípi" );
	deepEqual( Stem("munidas"), "mun" );
	deepEqual( Stem("munique"), "muniqu" );
	deepEqual( Stem("muniz"), "muniz" );
	deepEqual( Stem("munno"), "munn" );
	deepEqual( Stem("murad"), "murad" );
	deepEqual( Stem("muralha"), "muralh" );
	deepEqual( Stem("muralhas"), "muralh" );
	deepEqual( Stem("murcha"), "murch" );
	deepEqual( Stem("murcho"), "murch" );
	deepEqual( Stem("murilo"), "muril" );
	deepEqual( Stem("muro"), "mur" );
	deepEqual( Stem("murro"), "murr" );
	deepEqual( Stem("mururoa"), "mururo" );
	deepEqual( Stem("musa"), "mus" );
	deepEqual( Stem("musas"), "mus" );
	deepEqual( Stem("musculação"), "muscul" );
	deepEqual( Stem("muscular"), "muscul" );
	deepEqual( Stem("musculares"), "muscul" );
	deepEqual( Stem("musculatura"), "musculatur" );
	deepEqual( Stem("músculo"), "múscul" );
	deepEqual( Stem("músculos"), "múscul" );
	deepEqual( Stem("musculoso"), "muscul" );
	deepEqual( Stem("musculosos"), "muscul" );
	deepEqual( Stem("musée"), "musé" );
	deepEqual( Stem("museu"), "mus" );
	deepEqual( Stem("museum"), "museum" );
	deepEqual( Stem("museus"), "museus" );
	deepEqual( Stem("musgo"), "musg" );
	deepEqual( Stem("music"), "music" );
	deepEqual( Stem("música"), "músic" );
	deepEqual( Stem("musicais"), "music" );
	deepEqual( Stem("musical"), "musical" );
	deepEqual( Stem("músicas"), "músic" );
	deepEqual( Stem("músico"), "músic" );
	deepEqual( Stem("músicos"), "músic" );
	deepEqual( Stem("musotto"), "musott" );
	deepEqual( Stem("musseline"), "musselin" );
	deepEqual( Stem("must"), "must" );
	deepEqual( Stem("mustafa"), "mustaf" );
	deepEqual( Stem("muster"), "must" );
	deepEqual( Stem("mutação"), "mutaçã" );
	deepEqual( Stem("mutações"), "mutaçõ" );
	deepEqual( Stem("mutado"), "mut" );
	deepEqual( Stem("mutante"), "mutant" );
	deepEqual( Stem("mutilados"), "mutil" );
	deepEqual( Stem("mutretas"), "mutret" );
	deepEqual( Stem("mutuamente"), "mutu" );
	deepEqual( Stem("mutuários"), "mutuári" );
	deepEqual( Stem("mútuo"), "mútu" );
	deepEqual( Stem("muy"), "muy" );
	deepEqual( Stem("muylaert"), "muylaert" );
	deepEqual( Stem("muyupampa"), "muyupamp" );
	deepEqual( Stem("mx"), "mx" );
	deepEqual( Stem("my"), "my" );
	deepEqual( Stem("mylles"), "mylles" );
	deepEqual( Stem("mystéres"), "mystér" );
	deepEqual( Stem("n"), "n" );
	deepEqual( Stem("na"), "na" );
	deepEqual( Stem("nababesco"), "nababesc" );
	deepEqual( Stem("nabil"), "nabil" );
	deepEqual( Stem("nabo"), "nab" );
	deepEqual( Stem("nabor"), "nabor" );
	deepEqual( Stem("nabos"), "nab" );
	deepEqual( Stem("nabuco"), "nabuc" );
	deepEqual( Stem("nação"), "naçã" );
	deepEqual( Stem("nachtergaele"), "nachtergael" );
	deepEqual( Stem("nacionais"), "nacion" );
	deepEqual( Stem("nacional"), "nacional" );
	deepEqual( Stem("nacionalidade"), "nacional" );
	deepEqual( Stem("nacionalismo"), "nacional" );
	deepEqual( Stem("nacionalista"), "nacional" );
	deepEqual( Stem("nacionalistas"), "nacional" );
	deepEqual( Stem("nacionalmente"), "nacional" );
	deepEqual( Stem("nações"), "naçõ" );
	deepEqual( Stem("nada"), "nad" );
	deepEqual( Stem("nadando"), "nad" );
	deepEqual( Stem("nadar"), "nad" );
	deepEqual( Stem("nádegas"), "nádeg" );
	deepEqual( Stem("nadja"), "nadj" );
	deepEqual( Stem("nador"), "nador" );
	deepEqual( Stem("nadotti"), "nadott" );
	deepEqual( Stem("nadou"), "nad" );
	deepEqual( Stem("nafta"), "naft" );
	deepEqual( Stem("nagasaki"), "nagasak" );
	deepEqual( Stem("nagato"), "nagat" );
	deepEqual( Stem("nagesh"), "nagesh" );
	deepEqual( Stem("nagô"), "nagô" );
	deepEqual( Stem("nahuel"), "nahuel" );
	deepEqual( Stem("nahum"), "nahum" );
	deepEqual( Stem("naief"), "naief" );
	deepEqual( Stem("náilon"), "náilon" );
	deepEqual( Stem("naipe"), "naip" );
	deepEqual( Stem("naira"), "nair" );
	deepEqual( Stem("nairo"), "nair" );
	deepEqual( Stem("nakao"), "naka" );
	deepEqual( Stem("nalbert"), "nalbert" );
	deepEqual( Stem("nalina"), "nalin" );
	deepEqual( Stem("namora"), "namor" );
	deepEqual( Stem("namorá"), "namor" );
	deepEqual( Stem("namorada"), "namor" );
	deepEqual( Stem("namoradas"), "namor" );
	deepEqual( Stem("namoradinhos"), "namoradinh" );
	deepEqual( Stem("namorado"), "namor" );
	deepEqual( Stem("namorador"), "namor" );
	deepEqual( Stem("namorados"), "namor" );
	deepEqual( Stem("namoramos"), "namor" );
	deepEqual( Stem("namorando"), "namor" );
	deepEqual( Stem("namorar"), "namor" );
	deepEqual( Stem("namoraram"), "namor" );
	deepEqual( Stem("namorava"), "namor" );
	deepEqual( Stem("namoravam"), "namor" );
	deepEqual( Stem("namorei"), "namor" );
	deepEqual( Stem("namoro"), "namor" );
	deepEqual( Stem("namoros"), "namor" );
	deepEqual( Stem("namorou"), "namor" );
	deepEqual( Stem("nan"), "nan" );
	deepEqual( Stem("nana"), "nan" );
	deepEqual( Stem("nãnã"), "nãnã" );
	deepEqual( Stem("nancy"), "nancy" );
	deepEqual( Stem("nanda"), "nand" );
	deepEqual( Stem("nanini"), "nanin" );
	deepEqual( Stem("nanquim"), "nanquim" );
	deepEqual( Stem("nanterre"), "nanterr" );
	deepEqual( Stem("não"), "nã" );
	deepEqual( Stem("naomi"), "naom" );
	deepEqual( Stem("nãos"), "nã" );
	deepEqual( Stem("napoleão"), "napoleã" );
	deepEqual( Stem("napoleônicas"), "napoleôn" );
	deepEqual( Stem("naquela"), "naquel" );
	deepEqual( Stem("naquelas"), "naquel" );
	deepEqual( Stem("naquele"), "naquel" );
	deepEqual( Stem("naqueles"), "naquel" );
	deepEqual( Stem("naquilo"), "naquil" );
	deepEqual( Stem("narcisismo"), "narcis" );
	deepEqual( Stem("narcisista"), "narcis" );
	deepEqual( Stem("narciso"), "narcis" );
	deepEqual( Stem("narcos"), "narc" );
	deepEqual( Stem("narcóticos"), "narcót" );
	deepEqual( Stem("narcotraficantes"), "narcotrafic" );
	deepEqual( Stem("narcotráfico"), "narcotráf" );
	deepEqual( Stem("nardeli"), "nardel" );
	deepEqual( Stem("narguilés"), "narguilés" );
	deepEqual( Stem("narigudo"), "narigud" );
	deepEqual( Stem("nariz"), "nariz" );
	deepEqual( Stem("narra"), "narr" );
	deepEqual( Stem("narrador"), "narrador" );
	deepEqual( Stem("narradores"), "narrador" );
	deepEqual( Stem("narrativa"), "narrat" );
	deepEqual( Stem("narvaes"), "narva" );
	deepEqual( Stem("nas"), "nas" );
	deepEqual( Stem("nasa"), "nas" );
	deepEqual( Stem("nasais"), "nas" );
	deepEqual( Stem("nasal"), "nasal" );
	deepEqual( Stem("nasce"), "nasc" );
	deepEqual( Stem("nascem"), "nasc" );
	deepEqual( Stem("nascer"), "nasc" );
	deepEqual( Stem("nascera"), "nasc" );
	deepEqual( Stem("nasceram"), "nasc" );
	deepEqual( Stem("nasceu"), "nasc" );
	deepEqual( Stem("nasci"), "nasc" );
	deepEqual( Stem("nascia"), "nasc" );
	deepEqual( Stem("nascida"), "nasc" );
	deepEqual( Stem("nascidas"), "nasc" );
	deepEqual( Stem("nascido"), "nasc" );
	deepEqual( Stem("nascidos"), "nasc" );
	deepEqual( Stem("nascimento"), "nasciment" );
	deepEqual( Stem("nasr"), "nasr" );
	deepEqual( Stem("nasser"), "nass" );
	deepEqual( Stem("nastassia"), "nastass" );
	deepEqual( Stem("nata"), "nat" );
	deepEqual( Stem("natação"), "nataçã" );
	deepEqual( Stem("natal"), "natal" );
	deepEqual( Stem("natália"), "natál" );
	deepEqual( Stem("natalina"), "natalin" );
	deepEqual( Stem("natalino"), "natalin" );
	deepEqual( Stem("natanson"), "natanson" );
	deepEqual( Stem("natário"), "natári" );
	deepEqual( Stem("natasha"), "natash" );
	deepEqual( Stem("nation"), "nation" );
	deepEqual( Stem("national"), "national" );
	deepEqual( Stem("nations"), "nations" );
	deepEqual( Stem("nativa"), "nativ" );
	deepEqual( Stem("nativas"), "nativ" );
	deepEqual( Stem("nativo"), "nativ" );
	deepEqual( Stem("nativos"), "nativ" );
	deepEqual( Stem("nato"), "nat" );
	deepEqual( Stem("natura"), "natur" );
	deepEqual( Stem("naturais"), "natur" );
	deepEqual( Stem("natural"), "natural" );
	deepEqual( Stem("naturalidade"), "natural" );
	deepEqual( Stem("naturalismo"), "natural" );
	deepEqual( Stem("naturalista"), "natural" );
	deepEqual( Stem("naturalistas"), "natural" );
	deepEqual( Stem("naturalmente"), "natural" );
	deepEqual( Stem("nature"), "natur" );
	deepEqual( Stem("natureza"), "natur" );
	deepEqual( Stem("naturezas"), "natur" );
	deepEqual( Stem("nau"), "nau" );
	deepEqual( Stem("naufrágio"), "naufrági" );
	deepEqual( Stem("naufrágios"), "naufrági" );
	deepEqual( Stem("naufragou"), "naufrag" );
	deepEqual( Stem("naus"), "naus" );
	deepEqual( Stem("náuseas"), "náus" );
	deepEqual( Stem("náutica"), "náutic" );
	deepEqual( Stem("náutico"), "náutic" );
	deepEqual( Stem("náuticos"), "náutic" );
	deepEqual( Stem("navais"), "nav" );
	deepEqual( Stem("naval"), "naval" );
	deepEqual( Stem("navalha"), "navalh" );
	deepEqual( Stem("nave"), "nav" );
	deepEqual( Stem("navega"), "naveg" );
	deepEqual( Stem("navegação"), "naveg" );
	deepEqual( Stem("navegações"), "naveg" );
	deepEqual( Stem("navegador"), "naveg" );
	deepEqual( Stem("navegadores"), "naveg" );
	deepEqual( Stem("navegando"), "naveg" );
	deepEqual( Stem("navegante"), "naveg" );
	deepEqual( Stem("navegantes"), "naveg" );
	deepEqual( Stem("navegar"), "naveg" );
	deepEqual( Stem("navegáveis"), "naveg" );
	deepEqual( Stem("naves"), "nav" );
	deepEqual( Stem("navigation"), "navigation" );
	deepEqual( Stem("navigator"), "navigator" );
	deepEqual( Stem("navio"), "navi" );
	deepEqual( Stem("navios"), "navi" );
	deepEqual( Stem("navratilova"), "navratilov" );
	deepEqual( Stem("nazar"), "naz" );
	deepEqual( Stem("nazaré"), "nazar" );
	deepEqual( Stem("nazareno"), "nazaren" );
	deepEqual( Stem("nazareth"), "nazareth" );
	deepEqual( Stem("nazismo"), "nazism" );
	deepEqual( Stem("nazista"), "nazist" );
	deepEqual( Stem("nba"), "nba" );
	deepEqual( Stem("ncia"), "nci" );
	deepEqual( Stem("né"), "né" );
	deepEqual( Stem("neal"), "neal" );
	deepEqual( Stem("neblina"), "neblin" );
	deepEqual( Stem("nebulizador"), "nebuliz" );
	deepEqual( Stem("nebulosa"), "nebul" );
	deepEqual( Stem("nebuloso"), "nebul" );
	deepEqual( Stem("necessaire"), "necessair" );
	deepEqual( Stem("necessária"), "necessár" );
	deepEqual( Stem("necessariamente"), "necessari" );
	deepEqual( Stem("necessáriamente"), "necessári" );
	deepEqual( Stem("necessárias"), "necessár" );
	deepEqual( Stem("necessário"), "necessári" );
	deepEqual( Stem("necessários"), "necessári" );
	deepEqual( Stem("necessidade"), "necess" );
	deepEqual( Stem("necessidades"), "necess" );
	deepEqual( Stem("necessita"), "necessit" );
	deepEqual( Stem("necessitadas"), "necessit" );
	deepEqual( Stem("necessitam"), "necessit" );
	deepEqual( Stem("necessitamos"), "necessit" );
	deepEqual( Stem("necessitar"), "necessit" );
	deepEqual( Stem("necessitará"), "necessit" );
	deepEqual( Stem("necessitavam"), "necessit" );
	deepEqual( Stem("necrófilos"), "necrófil" );
	deepEqual( Stem("necropsia"), "necrops" );
	deepEqual( Stem("necrose"), "necros" );
	deepEqual( Stem("nector"), "nector" );
	deepEqual( Stem("nefasta"), "nefast" );
	deepEqual( Stem("nefasto"), "nefast" );
	deepEqual( Stem("nefrologia"), "nefrolog" );
	deepEqual( Stem("nefrologista"), "nefrolog" );
	deepEqual( Stem("nega"), "neg" );
	deepEqual( Stem("negação"), "negaçã" );
	deepEqual( Stem("negada"), "neg" );
	deepEqual( Stem("negado"), "neg" );
	deepEqual( Stem("negados"), "neg" );
	deepEqual( Stem("negam"), "neg" );
	deepEqual( Stem("negar"), "neg" );
	deepEqual( Stem("negasse"), "neg" );
	deepEqual( Stem("negativa"), "negat" );
	deepEqual( Stem("negativas"), "negat" );
	deepEqual( Stem("negativismo"), "negativ" );
	deepEqual( Stem("negativo"), "negat" );
	deepEqual( Stem("negativos"), "negat" );
	deepEqual( Stem("negava"), "neg" );
	deepEqual( Stem("negligência"), "negligent" );
	deepEqual( Stem("negligências"), "negligent" );
	deepEqual( Stem("nego"), "neg" );
	deepEqual( Stem("negó"), "neg" );
	deepEqual( Stem("negocia"), "negoc" );
	deepEqual( Stem("negociá"), "negoci" );
	deepEqual( Stem("negociação"), "negoc" );
	deepEqual( Stem("negociações"), "negoc" );
	deepEqual( Stem("negociada"), "negoc" );
	deepEqual( Stem("negociadas"), "negoc" );
	deepEqual( Stem("negociado"), "negoc" );
	deepEqual( Stem("negociados"), "negoc" );
	deepEqual( Stem("negociam"), "negoc" );
	deepEqual( Stem("negociamos"), "negoc" );
	deepEqual( Stem("negociando"), "negoc" );
	deepEqual( Stem("negociantes"), "negoc" );
	deepEqual( Stem("negociar"), "negoc" );
	deepEqual( Stem("negociatas"), "negociat" );
	deepEqual( Stem("negociava"), "negoc" );
	deepEqual( Stem("negócio"), "negóci" );
	deepEqual( Stem("negócios"), "negóci" );
	deepEqual( Stem("negociou"), "negoc" );
	deepEqual( Stem("negona"), "negon" );
	deepEqual( Stem("negou"), "neg" );
	deepEqual( Stem("negra"), "negr" );
	deepEqual( Stem("negrão"), "negrã" );
	deepEqual( Stem("negras"), "negr" );
	deepEqual( Stem("negrinhos"), "negrinh" );
	deepEqual( Stem("negrini"), "negrin" );
	deepEqual( Stem("negritude"), "negritud" );
	deepEqual( Stem("negro"), "negr" );
	deepEqual( Stem("negrona"), "negron" );
	deepEqual( Stem("negros"), "negr" );
	deepEqual( Stem("negue"), "neg" );
	deepEqual( Stem("neguei"), "negu" );
	deepEqual( Stem("neguem"), "negu" );
	deepEqual( Stem("neide"), "neid" );
	deepEqual( Stem("neidinha"), "neidinh" );
	deepEqual( Stem("neiva"), "neiv" );
	deepEqual( Stem("nela"), "nel" );
	deepEqual( Stem("nelas"), "nel" );
	deepEqual( Stem("nele"), "nel" );
	deepEqual( Stem("neles"), "nel" );
	deepEqual( Stem("nelio"), "neli" );
	deepEqual( Stem("nelson"), "nelson" );
	deepEqual( Stem("nélson"), "nélson" );
	deepEqual( Stem("nem"), "nem" );
	deepEqual( Stem("nenê"), "nen" );
	deepEqual( Stem("nenhum"), "nenhum" );
	deepEqual( Stem("nenhuma"), "nenhum" );
	deepEqual( Stem("neo"), "neo" );
	deepEqual( Stem("neoclássicos"), "neocláss" );
	deepEqual( Stem("neoliberal"), "neoliberal" );
	deepEqual( Stem("neoludita"), "neoludit" );
	deepEqual( Stem("neonatologista"), "neonatolog" );
	deepEqual( Stem("neopentecostais"), "neopentecost" );
	deepEqual( Stem("neosaldina"), "neosaldin" );
	deepEqual( Stem("nepad"), "nepad" );
	deepEqual( Stem("nepal"), "nepal" );
	deepEqual( Stem("nepomuceno"), "nepomucen" );
	deepEqual( Stem("nervo"), "nerv" );
	deepEqual( Stem("nervos"), "nerv" );
	deepEqual( Stem("nervosa"), "nervos" );
	deepEqual( Stem("nervosas"), "nervos" );
	deepEqual( Stem("nervosismo"), "nervos" );
	deepEqual( Stem("nervoso"), "nervos" );
	deepEqual( Stem("nervosos"), "nervos" );
	deepEqual( Stem("nessa"), "ness" );
	deepEqual( Stem("nessas"), "ness" );
	deepEqual( Stem("nesse"), "ness" );
	deepEqual( Stem("nesses"), "ness" );
	deepEqual( Stem("nesta"), "nest" );
	deepEqual( Stem("nestas"), "nest" );
	deepEqual( Stem("neste"), "nest" );
	deepEqual( Stem("nestes"), "nest" );
	deepEqual( Stem("nestlé"), "nestl" );
	deepEqual( Stem("nestlehner"), "nestlehn" );
	deepEqual( Stem("nestor"), "nestor" );
	deepEqual( Stem("neszlinger"), "neszling" );
	deepEqual( Stem("net"), "net" );
	deepEqual( Stem("neta"), "net" );
	deepEqual( Stem("netas"), "net" );
	deepEqual( Stem("netfones"), "netfon" );
	deepEqual( Stem("netinho"), "netinh" );
	deepEqual( Stem("netmeeting"), "netmeeting" );
	deepEqual( Stem("neto"), "net" );
	deepEqual( Stem("netos"), "net" );
	deepEqual( Stem("netscape"), "netscap" );
	deepEqual( Stem("netspeak"), "netspeak" );
	deepEqual( Stem("netto"), "nett" );
	deepEqual( Stem("network"), "network" );
	deepEqual( Stem("netz"), "netz" );
	deepEqual( Stem("neuber"), "neub" );
	deepEqual( Stem("neurocientista"), "neurocient" );
	deepEqual( Stem("neurocirurgia"), "neurocirurg" );
	deepEqual( Stem("neurocirurgião"), "neurocirurgiã" );
	deepEqual( Stem("neurocirurgiões"), "neurocirurgiõ" );
	deepEqual( Stem("neurofisiologistas"), "neurofisiolog" );
	deepEqual( Stem("neurologia"), "neurolog" );
	deepEqual( Stem("neurológicos"), "neurológ" );
	deepEqual( Stem("neurologista"), "neurolog" );
	deepEqual( Stem("neurologistas"), "neurolog" );
	deepEqual( Stem("neuromotor"), "neuromotor" );
	deepEqual( Stem("neuronal"), "neuronal" );
	deepEqual( Stem("neurônios"), "neurôni" );
	deepEqual( Stem("neuropediatra"), "neuropediatr" );
	deepEqual( Stem("neuropeptidey"), "neuropeptidey" );
	deepEqual( Stem("neuropsicologia"), "neuropsicolog" );
	deepEqual( Stem("neurose"), "neuros" );
	deepEqual( Stem("neuroses"), "neuros" );
	deepEqual( Stem("neurotransmissor"), "neurotransmissor" );
	deepEqual( Stem("neurotransmissores"), "neurotransmissor" );
	deepEqual( Stem("neusa"), "neus" );
	deepEqual( Stem("neutra"), "neutr" );
	deepEqual( Stem("neutrino"), "neutrin" );
	deepEqual( Stem("neutro"), "neutr" );
	deepEqual( Stem("neuza"), "neuz" );
	deepEqual( Stem("nevada"), "nev" );
	deepEqual( Stem("nevado"), "nev" );
	deepEqual( Stem("neve"), "nev" );
	deepEqual( Stem("neves"), "nev" );
	deepEqual( Stem("neville"), "nevill" );
	deepEqual( Stem("névoa"), "névo" );
	deepEqual( Stem("nevrálgico"), "nevrálg" );
	deepEqual( Stem("new"), "new" );
	deepEqual( Stem("newark"), "newark" );
	deepEqual( Stem("newcastle"), "newcastl" );
	deepEqual( Stem("newsweek"), "newsweek" );
	deepEqual( Stem("newton"), "newton" );
	deepEqual( Stem("ney"), "ney" );
	deepEqual( Stem("ng"), "ng" );
	deepEqual( Stem("nhenhenhém"), "nhenhenhém" );
	deepEqual( Stem("nicarágua"), "nicarágu" );
	deepEqual( Stem("nice"), "nic" );
	deepEqual( Stem("nicioli"), "niciol" );
	deepEqual( Stem("nickname"), "nicknam" );
	deepEqual( Stem("nicolau"), "nicolau" );
	deepEqual( Stem("nicotina"), "nicotin" );
	deepEqual( Stem("nielsen"), "nielsen" );
	deepEqual( Stem("niemeyer"), "niemey" );
	deepEqual( Stem("nifutimox"), "nifutimox" );
	deepEqual( Stem("nigel"), "nigel" );
	deepEqual( Stem("niger"), "nig" );
	deepEqual( Stem("nigéria"), "nigér" );
	deepEqual( Stem("nigeriano"), "nigerian" );
	deepEqual( Stem("night"), "night" );
	deepEqual( Stem("niguém"), "niguém" );
	deepEqual( Stem("nih"), "nih" );
	deepEqual( Stem("nihil"), "nihil" );
	deepEqual( Stem("nike"), "nik" );
	deepEqual( Stem("nikita"), "nikit" );
	deepEqual( Stem("nilópolis"), "nilópol" );
	deepEqual( Stem("nilson"), "nilson" );
	deepEqual( Stem("nilta"), "nilt" );
	deepEqual( Stem("nilton"), "nilton" );
	deepEqual( Stem("nilvo"), "nilv" );
	deepEqual( Stem("nina"), "nin" );
	deepEqual( Stem("ninfetas"), "ninfet" );
	deepEqual( Stem("ninfomania"), "ninfoman" );
	deepEqual( Stem("ninguém"), "ninguém" );
	deepEqual( Stem("ninharia"), "ninh" );
	deepEqual( Stem("ninho"), "ninh" );
	deepEqual( Stem("nino"), "nin" );
	deepEqual( Stem("nio"), "nio" );
	deepEqual( Stem("nipônica"), "nipôn" );
	deepEqual( Stem("níqueis"), "níqu" );
	deepEqual( Stem("níquel"), "níquel" );
	deepEqual( Stem("niquini"), "niquin" );
	deepEqual( Stem("nirvana"), "nirvan" );
	deepEqual( Stem("nisei"), "nis" );
	deepEqual( Stem("nissan"), "nissan" );
	deepEqual( Stem("nisso"), "niss" );
	deepEqual( Stem("niterói"), "niteró" );
	deepEqual( Stem("nítida"), "nít" );
	deepEqual( Stem("nítidas"), "nít" );
	deepEqual( Stem("nítido"), "nít" );
	deepEqual( Stem("nitrito"), "nitrit" );
	deepEqual( Stem("nitritos"), "nitrit" );
	deepEqual( Stem("nitrocelulose"), "nitrocelulos" );
	deepEqual( Stem("nitrogênio"), "nitrogêni" );
	deepEqual( Stem("nitroglicerina"), "nitroglicerin" );
	deepEqual( Stem("nitropenta"), "nitropent" );
	deepEqual( Stem("nivaldo"), "nivald" );
	deepEqual( Stem("níveis"), "nív" );
	deepEqual( Stem("nível"), "nível" );
	deepEqual( Stem("nivela"), "nivel" );
	deepEqual( Stem("nivelados"), "nivel" );
	deepEqual( Stem("nixon"), "nixon" );
	deepEqual( Stem("nizan"), "nizan" );
	deepEqual( Stem("nlm"), "nlm" );
	deepEqual( Stem("no"), "no" );
	deepEqual( Stem("nó"), "nó" );
	deepEqual( Stem("nobel"), "nobel" );
	deepEqual( Stem("noble"), "nobl" );
	deepEqual( Stem("nobre"), "nobr" );
	deepEqual( Stem("nóbrega"), "nóbreg" );
	deepEqual( Stem("nobres"), "nobr" );
	deepEqual( Stem("nobreza"), "nobrez" );
	deepEqual( Stem("noção"), "noçã" );
	deepEqual( Stem("nocaute"), "nocaut" );
	deepEqual( Stem("nocauteado"), "nocaut" );
	deepEqual( Stem("nocauteou"), "nocaut" );
	deepEqual( Stem("nociva"), "nociv" );
	deepEqual( Stem("nocivas"), "nociv" );
	deepEqual( Stem("noções"), "noçõ" );
	deepEqual( Stem("nódulo"), "nódul" );
	deepEqual( Stem("nódulos"), "nódul" );
	deepEqual( Stem("noel"), "noel" );
	deepEqual( Stem("noemia"), "noem" );
	deepEqual( Stem("noêmia"), "noêm" );
	deepEqual( Stem("nogueira"), "nogueir" );
	deepEqual( Stem("noir"), "noir" );
	deepEqual( Stem("noitadas"), "noit" );
	deepEqual( Stem("noite"), "noit" );
	deepEqual( Stem("noites"), "noit" );
	deepEqual( Stem("noiva"), "noiv" );
	deepEqual( Stem("noivado"), "noiv" );
	deepEqual( Stem("noivas"), "noiv" );
	deepEqual( Stem("noivo"), "noiv" );
	deepEqual( Stem("nojo"), "noj" );
	deepEqual( Stem("nolli"), "noll" );
	deepEqual( Stem("nom"), "nom" );
	deepEqual( Stem("nômade"), "nômad" );
	deepEqual( Stem("nome"), "nom" );
	deepEqual( Stem("nomeação"), "nomeaçã" );
	deepEqual( Stem("nomeações"), "nomeaçõ" );
	deepEqual( Stem("nomeado"), "nom" );
	deepEqual( Stem("nomeados"), "nom" );
	deepEqual( Stem("nomear"), "nom" );
	deepEqual( Stem("nomeasse"), "nom" );
	deepEqual( Stem("nomeou"), "nom" );
	deepEqual( Stem("nomes"), "nom" );
	deepEqual( Stem("nominais"), "nomin" );
	deepEqual( Stem("nominal"), "nominal" );
	deepEqual( Stem("nominalmente"), "nominal" );
	deepEqual( Stem("nonsense"), "nonsens" );
	deepEqual( Stem("nora"), "nor" );
	deepEqual( Stem("noradrenalina"), "noradrenalin" );
	deepEqual( Stem("noras"), "nor" );
	deepEqual( Stem("norberto"), "norbert" );
	deepEqual( Stem("nordeste"), "nord" );
	deepEqual( Stem("nordestina"), "nordestin" );
	deepEqual( Stem("nordestinas"), "nordestin" );
	deepEqual( Stem("nordestino"), "nordestin" );
	deepEqual( Stem("nordestinos"), "nordestin" );
	deepEqual( Stem("norma"), "norm" );
	deepEqual( Stem("normais"), "norm" );
	deepEqual( Stem("normal"), "normal" );
	deepEqual( Stem("normalidade"), "normal" );
	deepEqual( Stem("normalíssima"), "normalíssim" );
	deepEqual( Stem("normalmente"), "normal" );
	deepEqual( Stem("norman"), "norman" );
	deepEqual( Stem("normas"), "norm" );
	deepEqual( Stem("normatiza"), "normatiz" );
	deepEqual( Stem("norodom"), "norodom" );
	deepEqual( Stem("noroeste"), "noro" );
	deepEqual( Stem("noronha"), "noronh" );
	deepEqual( Stem("norte"), "nort" );
	deepEqual( Stem("northwestern"), "northwestern" );
	deepEqual( Stem("noruega"), "norueg" );
	deepEqual( Stem("nos"), "nos" );
	deepEqual( Stem("nós"), "nós" );
	deepEqual( Stem("nossa"), "noss" );
	deepEqual( Stem("nossas"), "noss" );
	deepEqual( Stem("nosso"), "noss" );
	deepEqual( Stem("nossos"), "noss" );
	deepEqual( Stem("nostalgia"), "nostalg" );
	deepEqual( Stem("nostálgico"), "nostálg" );
	deepEqual( Stem("nostradamus"), "nostradamus" );
	deepEqual( Stem("nota"), "not" );
	deepEqual( Stem("notabilizou"), "notabiliz" );
	deepEqual( Stem("notada"), "not" );
	deepEqual( Stem("notados"), "not" );
	deepEqual( Stem("notamos"), "not" );
	deepEqual( Stem("notar"), "not" );
	deepEqual( Stem("notaram"), "not" );
	deepEqual( Stem("notarão"), "not" );
	deepEqual( Stem("notarem"), "not" );
	deepEqual( Stem("notarial"), "notarial" );
	deepEqual( Stem("notas"), "not" );
	deepEqual( Stem("notáveis"), "not" );
	deepEqual( Stem("notável"), "notável" );
	deepEqual( Stem("note"), "not" );
	deepEqual( Stem("notebook"), "notebook" );
	deepEqual( Stem("notei"), "not" );
	deepEqual( Stem("notícia"), "notíc" );
	deepEqual( Stem("noticiada"), "notic" );
	deepEqual( Stem("noticiar"), "notic" );
	deepEqual( Stem("noticiário"), "noticiári" );
	deepEqual( Stem("notícias"), "notíc" );
	deepEqual( Stem("notificados"), "notific" );
	deepEqual( Stem("notoriedade"), "notoriedad" );
	deepEqual( Stem("notório"), "notóri" );
	deepEqual( Stem("notou"), "not" );
	deepEqual( Stem("nottingham"), "nottingh" );
	deepEqual( Stem("noturna"), "noturn" );
	deepEqual( Stem("noturnas"), "noturn" );
	deepEqual( Stem("noturno"), "noturn" );
	deepEqual( Stem("noturnos"), "noturn" );
	deepEqual( Stem("noutra"), "noutr" );
	deepEqual( Stem("noutro"), "noutr" );
	deepEqual( Stem("nouveau"), "nouveau" );
	deepEqual( Stem("nova"), "nov" );
	deepEqual( Stem("novaes"), "nova" );
	deepEqual( Stem("novais"), "nov" );
	deepEqual( Stem("noval"), "noval" );
	deepEqual( Stem("novalgina"), "novalgin" );
	deepEqual( Stem("novalogic"), "novalogic" );
	deepEqual( Stem("novamente"), "nov" );
	deepEqual( Stem("novas"), "nov" );
	deepEqual( Stem("novatas"), "novat" );
	deepEqual( Stem("novato"), "novat" );
	deepEqual( Stem("novatos"), "novat" );
	deepEqual( Stem("novcar"), "novc" );
	deepEqual( Stem("nove"), "nov" );
	deepEqual( Stem("novel"), "novel" );
	deepEqual( Stem("novela"), "novel" );
	deepEqual( Stem("novelas"), "novel" );
	deepEqual( Stem("novelinha"), "novelinh" );
	deepEqual( Stem("novély"), "novély" );
	deepEqual( Stem("novembro"), "novembr" );
	deepEqual( Stem("novenas"), "noven" );
	deepEqual( Stem("noventa"), "novent" );
	deepEqual( Stem("novidade"), "novidad" );
	deepEqual( Stem("novidadeiros"), "novidadeir" );
	deepEqual( Stem("novidades"), "novidad" );
	deepEqual( Stem("novinha"), "novinh" );
	deepEqual( Stem("novinho"), "novinh" );
	deepEqual( Stem("novo"), "nov" );
	deepEqual( Stem("novos"), "nov" );
	deepEqual( Stem("noz"), "noz" );
	deepEqual( Stem("nozawa"), "nozaw" );
	deepEqual( Stem("nra"), "nra" );
	deepEqual( Stem("ntt"), "ntt" );
	deepEqual( Stem("nu"), "nu" );
	deepEqual( Stem("nua"), "nua" );
	deepEqual( Stem("núbia"), "núb" );
	deepEqual( Stem("nublado"), "nubl" );
	deepEqual( Stem("nuclear"), "nucl" );
	deepEqual( Stem("nucleares"), "nucl" );
	deepEqual( Stem("núcleo"), "núcl" );
	deepEqual( Stem("núcleos"), "núcl" );
	deepEqual( Stem("nudez"), "nudez" );
	deepEqual( Stem("nuestro"), "nuestr" );
	deepEqual( Stem("nulidade"), "nulidad" );
	deepEqual( Stem("nulidades"), "nulidad" );
	deepEqual( Stem("nulo"), "nul" );
	deepEqual( Stem("nulos"), "nul" );
	deepEqual( Stem("num"), "num" );
	deepEqual( Stem("numa"), "num" );
	deepEqual( Stem("number"), "numb" );
	deepEqual( Stem("numeradas"), "numer" );
	deepEqual( Stem("numerais"), "numer" );
	deepEqual( Stem("numerário"), "numerári" );
	deepEqual( Stem("numérica"), "numér" );
	deepEqual( Stem("numericamente"), "numer" );
	deepEqual( Stem("número"), "númer" );
	deepEqual( Stem("numeróloga"), "numerólog" );
	deepEqual( Stem("números"), "númer" );
	deepEqual( Stem("numerosa"), "numer" );
	deepEqual( Stem("numerosas"), "numer" );
	deepEqual( Stem("numerosos"), "numer" );
	deepEqual( Stem("nunca"), "nunc" );
	deepEqual( Stem("nunes"), "nun" );
	deepEqual( Stem("nuo"), "nuo" );
	deepEqual( Stem("nurse"), "nurs" );
	deepEqual( Stem("nutecnet"), "nutecnet" );
	deepEqual( Stem("nutre"), "nutr" );
	deepEqual( Stem("nutrem"), "nutr" );
	deepEqual( Stem("nutrição"), "nutriçã" );
	deepEqual( Stem("nutricionista"), "nutricion" );
	deepEqual( Stem("nutrientes"), "nutrient" );
	deepEqual( Stem("nutrindo"), "nutr" );
	deepEqual( Stem("nutrir"), "nutr" );
	deepEqual( Stem("nutritivas"), "nutrit" );
	deepEqual( Stem("nuvem"), "nuv" );
	deepEqual( Stem("nuvens"), "nuvens" );
	deepEqual( Stem("ny"), "ny" );
	deepEqual( Stem("o"), "o" );
	deepEqual( Stem("ó"), "ó" );
	deepEqual( Stem("oab"), "oab" );
	deepEqual( Stem("oásis"), "oás" );
	deepEqual( Stem("obá"), "obá" );
	deepEqual( Stem("obaluaê"), "obalua" );
	deepEqual( Stem("obcecado"), "obcec" );
	deepEqual( Stem("obcecados"), "obcec" );
	deepEqual( Stem("obedece"), "obedec" );
	deepEqual( Stem("obedecem"), "obedec" );
	deepEqual( Stem("obedecendo"), "obedec" );
	deepEqual( Stem("obedecer"), "obedec" );
	deepEqual( Stem("obedeceram"), "obedec" );
	deepEqual( Stem("obedeciam"), "obedec" );
	deepEqual( Stem("obedecidos"), "obedec" );
	deepEqual( Stem("obesa"), "obes" );
	deepEqual( Stem("obesas"), "obes" );
	deepEqual( Stem("obesidade"), "obes" );
	deepEqual( Stem("obeso"), "obes" );
	deepEqual( Stem("obesos"), "obes" );
	deepEqual( Stem("objeção"), "objeçã" );
	deepEqual( Stem("objetar"), "objet" );
	deepEqual( Stem("objetiva"), "objet" );
	deepEqual( Stem("objetivas"), "objet" );
	deepEqual( Stem("objetivo"), "objet" );
	deepEqual( Stem("objetivos"), "objet" );
	deepEqual( Stem("objeto"), "objet" );
	deepEqual( Stem("objetos"), "objet" );
	deepEqual( Stem("oblíquos"), "oblíqu" );
	deepEqual( Stem("óbolo"), "óbol" );
	deepEqual( Stem("obra"), "obra" );
	deepEqual( Stem("obras"), "obras" );
	deepEqual( Stem("obriga"), "obrig" );
	deepEqual( Stem("obrigação"), "obrig" );
	deepEqual( Stem("obrigações"), "obrig" );
	deepEqual( Stem("obrigada"), "obrig" );
	deepEqual( Stem("obrigadas"), "obrig" );
	deepEqual( Stem("obrigado"), "obrig" );
	deepEqual( Stem("obrigados"), "obrig" );
	deepEqual( Stem("obrigam"), "obrig" );
	deepEqual( Stem("obrigando"), "obrig" );
	deepEqual( Stem("obrigar"), "obrig" );
	deepEqual( Stem("obrigaram"), "obrig" );
	deepEqual( Stem("obrigatória"), "obrigatór" );
	deepEqual( Stem("obrigatoriamente"), "obrigatori" );
	deepEqual( Stem("obrigatório"), "obrigatóri" );
	deepEqual( Stem("obrigatórios"), "obrigatóri" );
	deepEqual( Stem("obrigava"), "obrig" );
	deepEqual( Stem("obrigo"), "obrig" );
	deepEqual( Stem("obrigou"), "obrig" );
	deepEqual( Stem("obscurecem"), "obscurec" );
	deepEqual( Stem("obscuro"), "obscur" );
	deepEqual( Stem("observa"), "observ" );
	deepEqual( Stem("observação"), "observ" );
	deepEqual( Stem("observações"), "observ" );
	deepEqual( Stem("observado"), "observ" );
	deepEqual( Stem("observam"), "observ" );
	deepEqual( Stem("observando"), "observ" );
	deepEqual( Stem("observar"), "observ" );
	deepEqual( Stem("observaríamos"), "observ" );
	deepEqual( Stem("observatório"), "observatóri" );
	deepEqual( Stem("observavam"), "observ" );
	deepEqual( Stem("observável"), "observ" );
	deepEqual( Stem("observe"), "observ" );
	deepEqual( Stem("observer"), "observ" );
	deepEqual( Stem("observo"), "observ" );
	deepEqual( Stem("observou"), "observ" );
	deepEqual( Stem("obsessão"), "obsessã" );
	deepEqual( Stem("obsessiva"), "obsess" );
	deepEqual( Stem("obsessivamente"), "obsess" );
	deepEqual( Stem("obsessivo"), "obsess" );
	deepEqual( Stem("obsessões"), "obsessõ" );
	deepEqual( Stem("obsolesc"), "obsolesc" );
	deepEqual( Stem("obsolescência"), "obsolescent" );
	deepEqual( Stem("obsoleto"), "obsolet" );
	deepEqual( Stem("obstáculo"), "obstácul" );
	deepEqual( Stem("obstáculos"), "obstácul" );
	deepEqual( Stem("obstat"), "obstat" );
	deepEqual( Stem("obstetra"), "obstetr" );
	deepEqual( Stem("obstetrícia"), "obstetríc" );
	deepEqual( Stem("obstinada"), "obstin" );
	deepEqual( Stem("obstinado"), "obstin" );
	deepEqual( Stem("obstinados"), "obstin" );
	deepEqual( Stem("obstrui"), "obstru" );
	deepEqual( Stem("obstruída"), "obstruíd" );
	deepEqual( Stem("obstruindo"), "obstru" );
	deepEqual( Stem("obtê"), "obtê" );
	deepEqual( Stem("obtém"), "obtém" );
	deepEqual( Stem("obtêm"), "obtêm" );
	deepEqual( Stem("obtenção"), "obtençã" );
	deepEqual( Stem("obtenha"), "obtenh" );
	deepEqual( Stem("obter"), "obter" );
	deepEqual( Stem("obteve"), "obtev" );
	deepEqual( Stem("obtida"), "obtid" );
	deepEqual( Stem("obtidas"), "obtid" );
	deepEqual( Stem("obtido"), "obtid" );
	deepEqual( Stem("obtidos"), "obtid" );
	deepEqual( Stem("obtive"), "obtiv" );
	deepEqual( Stem("obtiveram"), "obtiv" );
	deepEqual( Stem("óbvia"), "óbvi" );
	deepEqual( Stem("obviamente"), "obvi" );
	deepEqual( Stem("óbvias"), "óbvi" );
	deepEqual( Stem("óbvio"), "óbvi" );
	deepEqual( Stem("óbvios"), "óbvi" );
	deepEqual( Stem("oc"), "oc" );
	deepEqual( Stem("oca"), "oca" );
	deepEqual( Stem("ocas"), "ocas" );
	deepEqual( Stem("ocasião"), "ocasiã" );
	deepEqual( Stem("ocasiões"), "ocasiõ" );
	deepEqual( Stem("ocasional"), "ocasional" );
	deepEqual( Stem("ocasionalmente"), "ocasional" );
	deepEqual( Stem("occipitais"), "occipit" );
	deepEqual( Stem("occipital"), "occipital" );
	deepEqual( Stem("oceania"), "ocean" );
	deepEqual( Stem("oceano"), "ocean" );
	deepEqual( Stem("oceanografia"), "oceanograf" );
	deepEqual( Stem("oceanos"), "ocean" );
	deepEqual( Stem("ocidentais"), "ocident" );
	deepEqual( Stem("ocidental"), "ocidental" );
	deepEqual( Stem("ocidentalizado"), "ocidentaliz" );
	deepEqual( Stem("ocidentalizados"), "ocidentaliz" );
	deepEqual( Stem("ocidente"), "ocident" );
	deepEqual( Stem("ocimar"), "ocim" );
	deepEqual( Stem("ociosas"), "ocios" );
	deepEqual( Stem("ocioso"), "ocios" );
	deepEqual( Stem("ociosos"), "ocios" );
	deepEqual( Stem("oco"), "oco" );
	deepEqual( Stem("ocorra"), "ocorr" );
	deepEqual( Stem("ocorre"), "ocorr" );
	deepEqual( Stem("ocorrem"), "ocorr" );
	deepEqual( Stem("ocorrência"), "ocorrent" );
	deepEqual( Stem("ocorrências"), "ocorrent" );
	deepEqual( Stem("ocorrendo"), "ocorr" );
	deepEqual( Stem("ocorrer"), "ocorr" );
	deepEqual( Stem("ocorrerá"), "ocorr" );
	deepEqual( Stem("ocorreram"), "ocorr" );
	deepEqual( Stem("ocorrerão"), "ocorr" );
	deepEqual( Stem("ocorreria"), "ocorr" );
	deepEqual( Stem("ocorreriam"), "ocorr" );
	deepEqual( Stem("ocorreu"), "ocorr" );
	deepEqual( Stem("ocorria"), "ocorr" );
	deepEqual( Stem("ocorriam"), "ocorr" );
	deepEqual( Stem("ocorrida"), "ocorr" );
	deepEqual( Stem("ocorridas"), "ocorr" );
	deepEqual( Stem("ocorrido"), "ocorr" );
	deepEqual( Stem("ocorridos"), "ocorr" );
	deepEqual( Stem("ocos"), "ocos" );
	deepEqual( Stem("octacílio"), "octacíli" );
	deepEqual( Stem("octavio"), "octavi" );
	deepEqual( Stem("octávio"), "octávi" );
	deepEqual( Stem("octubre"), "octubr" );
	deepEqual( Stem("ocular"), "ocul" );
	deepEqual( Stem("óculos"), "ócul" );
	deepEqual( Stem("oculta"), "ocult" );
	deepEqual( Stem("ocupa"), "ocup" );
	deepEqual( Stem("ocupá"), "ocup" );
	deepEqual( Stem("ocupação"), "ocup" );
	deepEqual( Stem("ocupacional"), "ocupacional" );
	deepEqual( Stem("ocupações"), "ocup" );
	deepEqual( Stem("ocupada"), "ocup" );
	deepEqual( Stem("ocupadas"), "ocup" );
	deepEqual( Stem("ocupado"), "ocup" );
	deepEqual( Stem("ocupados"), "ocup" );
	deepEqual( Stem("ocupam"), "ocup" );
	deepEqual( Stem("ocupando"), "ocup" );
	deepEqual( Stem("ocupante"), "ocup" );
	deepEqual( Stem("ocupantes"), "ocup" );
	deepEqual( Stem("ocupar"), "ocup" );
	deepEqual( Stem("ocupava"), "ocup" );
	deepEqual( Stem("ocupavam"), "ocup" );
	deepEqual( Stem("ocupou"), "ocup" );
	deepEqual( Stem("odacir"), "odac" );
	deepEqual( Stem("odair"), "oda" );
	deepEqual( Stem("odalisca"), "odalisc" );
	deepEqual( Stem("odaliscas"), "odalisc" );
	deepEqual( Stem("ode"), "ode" );
	deepEqual( Stem("odebrecht"), "odebrecht" );
	deepEqual( Stem("odeia"), "ode" );
	deepEqual( Stem("odeiam"), "ode" );
	deepEqual( Stem("odeio"), "odei" );
	deepEqual( Stem("odeon"), "odeon" );
	deepEqual( Stem("odete"), "odet" );
	deepEqual( Stem("odiá"), "odi" );
	deepEqual( Stem("odilon"), "odilon" );
	deepEqual( Stem("ódio"), "ódi" );
	deepEqual( Stem("ódios"), "ódi" );
	deepEqual( Stem("odisséia"), "odiss" );
	deepEqual( Stem("odontológica"), "odontológ" );
	deepEqual( Stem("odontológicos"), "odontológ" );
	deepEqual( Stem("odor"), "odor" );
	deepEqual( Stem("odyr"), "odyr" );
	deepEqual( Stem("oeste"), "oest" );
	deepEqual( Stem("of"), "of" );
	deepEqual( Stem("ofendida"), "ofend" );
	deepEqual( Stem("ofendido"), "ofend" );
	deepEqual( Stem("ofensa"), "ofens" );
	deepEqual( Stem("ofensas"), "ofens" );
	deepEqual( Stem("ofensiva"), "ofens" );
	deepEqual( Stem("ofensivas"), "ofens" );
	deepEqual( Stem("ofensivo"), "ofens" );
	deepEqual( Stem("ofereça"), "oferec" );
	deepEqual( Stem("oferece"), "oferec" );
	deepEqual( Stem("oferecem"), "oferec" );
	deepEqual( Stem("oferecemos"), "oferec" );
	deepEqual( Stem("oferecendo"), "oferec" );
	deepEqual( Stem("oferecer"), "oferec" );
	deepEqual( Stem("ofereceram"), "oferec" );
	deepEqual( Stem("ofereceu"), "oferec" );
	deepEqual( Stem("oferecia"), "oferec" );
	deepEqual( Stem("oferecida"), "oferec" );
	deepEqual( Stem("oferecido"), "oferec" );
	deepEqual( Stem("oferecidos"), "oferec" );
	deepEqual( Stem("oferecimento"), "oferec" );
	deepEqual( Stem("oferenda"), "oferend" );
	deepEqual( Stem("oferendas"), "oferend" );
	deepEqual( Stem("oferta"), "ofert" );
	deepEqual( Stem("ofertante"), "ofert" );
	deepEqual( Stem("ofertar"), "ofert" );
	deepEqual( Stem("ofertas"), "ofert" );
	deepEqual( Stem("off"), "off" );
	deepEqual( Stem("office"), "offic" );
	deepEqual( Stem("officer"), "offic" );
	deepEqual( Stem("offs"), "offs" );
	deepEqual( Stem("oficiais"), "ofic" );
	deepEqual( Stem("oficial"), "oficial" );
	deepEqual( Stem("oficialmente"), "oficial" );
	deepEqual( Stem("oficina"), "oficin" );
	deepEqual( Stem("oficinas"), "oficin" );
	deepEqual( Stem("ofício"), "ofíci" );
	deepEqual( Stem("oftalmológicos"), "oftalmológ" );
	deepEqual( Stem("ofusca"), "ofusc" );
	deepEqual( Stem("ofuscou"), "ofusc" );
	deepEqual( Stem("ogum"), "ogum" );
	deepEqual( Stem("ogun"), "ogun" );
	deepEqual( Stem("oh"), "oh" );
	deepEqual( Stem("ohana"), "ohan" );
	deepEqual( Stem("oi"), "oi" );
	deepEqual( Stem("oiac"), "oiac" );
	deepEqual( Stem("oiapoque"), "oiapoqu" );
	deepEqual( Stem("oic"), "oic" );
	deepEqual( Stem("oinegue"), "oineg" );
	deepEqual( Stem("oit"), "oit" );
	deepEqual( Stem("oitava"), "oit" );
	deepEqual( Stem("oitavo"), "oitav" );
	deepEqual( Stem("oitenta"), "oitent" );
	deepEqual( Stem("oito"), "oit" );
	deepEqual( Stem("ok"), "ok" );
	deepEqual( Stem("okamoto"), "okamot" );
	deepEqual( Stem("okky"), "okky" );
	deepEqual( Stem("oklon"), "oklon" );
	deepEqual( Stem("olacyr"), "olacyr" );
	deepEqual( Stem("olávio"), "olávi" );
	deepEqual( Stem("olavo"), "olav" );
	deepEqual( Stem("olbers"), "olbers" );
	deepEqual( Stem("old"), "old" );
	deepEqual( Stem("olé"), "olé" );
	deepEqual( Stem("olê"), "olê" );
	deepEqual( Stem("óleo"), "óle" );
	deepEqual( Stem("óleos"), "óle" );
	deepEqual( Stem("oleosas"), "oleos" );
	deepEqual( Stem("olga"), "olga" );
	deepEqual( Stem("olha"), "olha" );
	deepEqual( Stem("olhá"), "olhá" );
	deepEqual( Stem("olhada"), "olhad" );
	deepEqual( Stem("olhadinha"), "olhadinh" );
	deepEqual( Stem("olhado"), "olhad" );
	deepEqual( Stem("olham"), "olham" );
	deepEqual( Stem("olhando"), "olhand" );
	deepEqual( Stem("olhar"), "olhar" );
	deepEqual( Stem("olharam"), "olhar" );
	deepEqual( Stem("olhares"), "olhar" );
	deepEqual( Stem("olhasse"), "olhass" );
	deepEqual( Stem("olhava"), "olhav" );
	deepEqual( Stem("olhe"), "olhe" );
	deepEqual( Stem("olheiras"), "olheir" );
	deepEqual( Stem("olhem"), "olhem" );
	deepEqual( Stem("olho"), "olho" );
	deepEqual( Stem("olhos"), "olhos" );
	deepEqual( Stem("olhou"), "olhou" );
	deepEqual( Stem("oligarquias"), "oligarqu" );
	deepEqual( Stem("olimpíada"), "olimpí" );
	deepEqual( Stem("olimpíadas"), "olimpí" );
	deepEqual( Stem("olímpico"), "olímp" );
	deepEqual( Stem("olinda"), "olind" );
	deepEqual( Stem("oliva"), "oliv" );
	deepEqual( Stem("oliveira"), "oliveir" );
	deepEqual( Stem("oliveiras"), "oliveir" );
	deepEqual( Stem("oliver"), "oliv" );
	deepEqual( Stem("olivetto"), "olivett" );
	deepEqual( Stem("olivia"), "oliv" );
	deepEqual( Stem("olívia"), "olív" );
	deepEqual( Stem("olney"), "olney" );
	deepEqual( Stem("olodum"), "olodum" );
	deepEqual( Stem("olooogunede"), "oloooguned" );
	deepEqual( Stem("oluô"), "oluô" );
	deepEqual( Stem("omar"), "omar" );
	deepEqual( Stem("ombro"), "ombro" );
	deepEqual( Stem("ombros"), "ombros" );
	deepEqual( Stem("omega"), "omeg" );
	deepEqual( Stem("omissão"), "omissã" );
	deepEqual( Stem("omissos"), "omiss" );
	deepEqual( Stem("omite"), "omit" );
	deepEqual( Stem("omitido"), "omit" );
	deepEqual( Stem("omolu"), "omolu" );
	deepEqual( Stem("omoplatas"), "omoplat" );
	deepEqual( Stem("oms"), "oms" );
	deepEqual( Stem("on"), "on" );
	deepEqual( Stem("onaga"), "onag" );
	deepEqual( Stem("onanistas"), "onan" );
	deepEqual( Stem("onassis"), "onass" );
	deepEqual( Stem("onça"), "onça" );
	deepEqual( Stem("oncolink"), "oncolink" );
	deepEqual( Stem("oncologista"), "oncolog" );
	deepEqual( Stem("oncologistas"), "oncolog" );
	deepEqual( Stem("onda"), "onda" );
	deepEqual( Stem("ondas"), "ondas" );
	deepEqual( Stem("onde"), "onde" );
	deepEqual( Stem("ondetti"), "ondett" );
	deepEqual( Stem("ondina"), "ondin" );
	deepEqual( Stem("ondulações"), "ondul" );
	deepEqual( Stem("ondulado"), "ondul" );
	deepEqual( Stem("one"), "one" );
	deepEqual( Stem("onézimo"), "onézim" );
	deepEqual( Stem("ong"), "ong" );
	deepEqual( Stem("ongs"), "ongs" );
	deepEqual( Stem("ônibus"), "ônibus" );
	deepEqual( Stem("onipotência"), "onipotent" );
	deepEqual( Stem("onipresença"), "onipresenc" );
	deepEqual( Stem("onipresente"), "onipresent" );
	deepEqual( Stem("online"), "onlin" );
	deepEqual( Stem("ono"), "ono" );
	deepEqual( Stem("onofre"), "onofr" );
	deepEqual( Stem("ontem"), "ontem" );
	deepEqual( Stem("onu"), "onu" );
	deepEqual( Stem("ônus"), "ônus" );
	deepEqual( Stem("onze"), "onze" );
	deepEqual( Stem("ôôiii"), "ôôiii" );
	deepEqual( Stem("opala"), "opal" );
	deepEqual( Stem("opç"), "opc" );
	deepEqual( Stem("opção"), "opçã" );
	deepEqual( Stem("opcionais"), "opcion" );
	deepEqual( Stem("opções"), "opçõ" );
	deepEqual( Stem("opera"), "oper" );
	deepEqual( Stem("ópera"), "óper" );
	deepEqual( Stem("operá"), "oper" );
	deepEqual( Stem("operação"), "oper" );
	deepEqual( Stem("operacionais"), "operacion" );
	deepEqual( Stem("operacional"), "operacional" );
	deepEqual( Stem("operações"), "oper" );
	deepEqual( Stem("operada"), "oper" );
	deepEqual( Stem("operado"), "oper" );
	deepEqual( Stem("operador"), "oper" );
	deepEqual( Stem("operadores"), "oper" );
	deepEqual( Stem("operados"), "oper" );
	deepEqual( Stem("operam"), "oper" );
	deepEqual( Stem("operamos"), "oper" );
	deepEqual( Stem("operandi"), "operand" );
	deepEqual( Stem("operando"), "oper" );
	deepEqual( Stem("operar"), "oper" );
	deepEqual( Stem("operaram"), "oper" );
	deepEqual( Stem("operarem"), "oper" );
	deepEqual( Stem("operária"), "operár" );
	deepEqual( Stem("operário"), "operári" );
	deepEqual( Stem("operários"), "operári" );
	deepEqual( Stem("óperas"), "óper" );
	deepEqual( Stem("operatórias"), "operatór" );
	deepEqual( Stem("operatório"), "operatóri" );
	deepEqual( Stem("operava"), "oper" );
	deepEqual( Stem("operosa"), "oper" );
	deepEqual( Stem("opina"), "opin" );
	deepEqual( Stem("opinar"), "opin" );
	deepEqual( Stem("opinião"), "opiniã" );
	deepEqual( Stem("opiniões"), "opiniõ" );
	deepEqual( Stem("ópio"), "ópi" );
	deepEqual( Stem("opô"), "opô" );
	deepEqual( Stem("opõe"), "opõ" );
	deepEqual( Stem("opõem"), "opõ" );
	deepEqual( Stem("oponente"), "oponent" );
	deepEqual( Stem("opor"), "opor" );
	deepEqual( Stem("oportunidade"), "oportun" );
	deepEqual( Stem("oportunidades"), "oportun" );
	deepEqual( Stem("oportunismo"), "oportun" );
	deepEqual( Stem("oportunistas"), "oportun" );
	deepEqual( Stem("oportuno"), "oportun" );
	deepEqual( Stem("oposição"), "oposiçã" );
	deepEqual( Stem("oposicionistas"), "oposicion" );
	deepEqual( Stem("oposições"), "oposiçõ" );
	deepEqual( Stem("opositores"), "opositor" );
	deepEqual( Stem("oposta"), "opost" );
	deepEqual( Stem("opostas"), "opost" );
	deepEqual( Stem("oposto"), "opost" );
	deepEqual( Stem("opostos"), "opost" );
	deepEqual( Stem("opportunity"), "opportunity" );
	deepEqual( Stem("opressão"), "opressã" );
	deepEqual( Stem("opressora"), "opressor" );
	deepEqual( Stem("oprime"), "oprim" );
	deepEqual( Stem("oprimidos"), "oprim" );
	deepEqual( Stem("ops"), "ops" );
	deepEqual( Stem("opta"), "opta" );
	deepEqual( Stem("optalidon"), "optalidon" );
	deepEqual( Stem("optamos"), "optam" );
	deepEqual( Stem("optar"), "optar" );
	deepEqual( Stem("optaram"), "optar" );
	deepEqual( Stem("optarem"), "optar" );
	deepEqual( Stem("optariam"), "optar" );
	deepEqual( Stem("optasse"), "optass" );
	deepEqual( Stem("optei"), "opte" );
	deepEqual( Stem("optou"), "optou" );
	deepEqual( Stem("ora"), "ora" );
	deepEqual( Stem("oração"), "oraçã" );
	deepEqual( Stem("orações"), "oraçõ" );
	deepEqual( Stem("oráculo"), "orácul" );
	deepEqual( Stem("oráculos"), "orácul" );
	deepEqual( Stem("oral"), "oral" );
	deepEqual( Stem("orange"), "orang" );
	deepEqual( Stem("oratórios"), "oratóri" );
	deepEqual( Stem("órbita"), "órbit" );
	deepEqual( Stem("orbital"), "orbital" );
	deepEqual( Stem("orca"), "orca" );
	deepEqual( Stem("orçados"), "orçad" );
	deepEqual( Stem("orçamentária"), "orçamentár" );
	deepEqual( Stem("orçamento"), "orçament" );
	deepEqual( Stem("orçamentos"), "orçament" );
	deepEqual( Stem("ordeiro"), "ordeir" );
	deepEqual( Stem("ordem"), "ordem" );
	deepEqual( Stem("ordena"), "orden" );
	deepEqual( Stem("ordená"), "orden" );
	deepEqual( Stem("ordenado"), "orden" );
	deepEqual( Stem("ordenando"), "orden" );
	deepEqual( Stem("ordenar"), "orden" );
	deepEqual( Stem("ordenaram"), "orden" );
	deepEqual( Stem("ordenhar"), "ordenh" );
	deepEqual( Stem("ordenou"), "orden" );
	deepEqual( Stem("ordens"), "ordens" );
	deepEqual( Stem("ordinárias"), "ordinár" );
	deepEqual( Stem("oréal"), "oréal" );
	deepEqual( Stem("orelha"), "orelh" );
	deepEqual( Stem("orestes"), "orest" );
	deepEqual( Stem("orfanato"), "orfanat" );
	deepEqual( Stem("órfão"), "órfã" );
	deepEqual( Stem("órfãos"), "órfã" );
	deepEqual( Stem("org"), "org" );
	deepEqual( Stem("orgânica"), "orgân" );
	deepEqual( Stem("orgânicas"), "orgân" );
	deepEqual( Stem("orgânico"), "orgân" );
	deepEqual( Stem("organismo"), "organ" );
	deepEqual( Stem("organismos"), "organ" );
	deepEqual( Stem("organiza"), "organiz" );
	deepEqual( Stem("organização"), "organiz" );
	deepEqual( Stem("organizações"), "organiz" );
	deepEqual( Stem("organizada"), "organiz" );
	deepEqual( Stem("organizadas"), "organiz" );
	deepEqual( Stem("organizado"), "organiz" );
	deepEqual( Stem("organizadores"), "organiz" );
	deepEqual( Stem("organizados"), "organiz" );
	deepEqual( Stem("organizam"), "organiz" );
	deepEqual( Stem("organizando"), "organiz" );
	deepEqual( Stem("organizar"), "organiz" );
	deepEqual( Stem("organizará"), "organiz" );
	deepEqual( Stem("organizaram"), "organiz" );
	deepEqual( Stem("organizava"), "organiz" );
	deepEqual( Stem("organizavam"), "organiz" );
	deepEqual( Stem("organizou"), "organiz" );
	deepEqual( Stem("organograma"), "organogram" );
	deepEqual( Stem("órgão"), "órgã" );
	deepEqual( Stem("órgãos"), "órgã" );
	deepEqual( Stem("orgasmo"), "orgasm" );
	deepEqual( Stem("orgias"), "orgi" );
	deepEqual( Stem("orgulha"), "orgulh" );
	deepEqual( Stem("orgulham"), "orgulh" );
	deepEqual( Stem("orgulhar"), "orgulh" );
	deepEqual( Stem("orgulharem"), "orgulh" );
	deepEqual( Stem("orgulho"), "orgulh" );
	deepEqual( Stem("orgulhos"), "orgulh" );
	deepEqual( Stem("orgulhosa"), "orgulh" );
	deepEqual( Stem("orgulhoso"), "orgulh" );
	deepEqual( Stem("orgulhosos"), "orgulh" );
	deepEqual( Stem("orient"), "orient" );
	deepEqual( Stem("orienta"), "orient" );
	deepEqual( Stem("orientação"), "orient" );
	deepEqual( Stem("orientações"), "orient" );
	deepEqual( Stem("orientada"), "orient" );
	deepEqual( Stem("orientadas"), "orient" );
	deepEqual( Stem("orientadora"), "orient" );
	deepEqual( Stem("orientadores"), "orient" );
	deepEqual( Stem("orientados"), "orient" );
	deepEqual( Stem("orientais"), "orient" );
	deepEqual( Stem("oriental"), "oriental" );
	deepEqual( Stem("orientam"), "orient" );
	deepEqual( Stem("orientamos"), "orient" );
	deepEqual( Stem("orientar"), "orient" );
	deepEqual( Stem("oriente"), "orient" );
	deepEqual( Stem("orientou"), "orient" );
	deepEqual( Stem("origem"), "orig" );
	deepEqual( Stem("origens"), "origens" );
	deepEqual( Stem("origin"), "origin" );
	deepEqual( Stem("originada"), "origin" );
	deepEqual( Stem("originais"), "origin" );
	deepEqual( Stem("original"), "original" );
	deepEqual( Stem("originalidade"), "original" );
	deepEqual( Stem("originalmente"), "original" );
	deepEqual( Stem("originaram"), "origin" );
	deepEqual( Stem("originárias"), "originár" );
	deepEqual( Stem("originário"), "originári" );
	deepEqual( Stem("originários"), "originári" );
	deepEqual( Stem("originou"), "origin" );
	deepEqual( Stem("oriunda"), "oriund" );
	deepEqual( Stem("orixá"), "orix" );
	deepEqual( Stem("orixalá"), "orixal" );
	deepEqual( Stem("orixás"), "orixás" );
	deepEqual( Stem("orla"), "orla" );
	deepEqual( Stem("orlando"), "orland" );
	deepEqual( Stem("orlistat"), "orlistat" );
	deepEqual( Stem("orly"), "orly" );
	deepEqual( Stem("ornamentadas"), "ornament" );
	deepEqual( Stem("ornelas"), "ornel" );
	deepEqual( Stem("orobó"), "orob" );
	deepEqual( Stem("orozco"), "orozc" );
	deepEqual( Stem("orquestra"), "orquestr" );
	deepEqual( Stem("orquestrada"), "orquestr" );
	deepEqual( Stem("orquestradores"), "orquestr" );
	deepEqual( Stem("orquestras"), "orquestr" );
	deepEqual( Stem("orquestrava"), "orquestr" );
	deepEqual( Stem("orson"), "orson" );
	deepEqual( Stem("ortec"), "ortec" );
	deepEqual( Stem("orth"), "orth" );
	deepEqual( Stem("orto"), "orto" );
	deepEqual( Stem("ortodoxa"), "ortodox" );
	deepEqual( Stem("ortodoxas"), "ortodox" );
	deepEqual( Stem("ortodoxo"), "ortodox" );
	deepEqual( Stem("ortodoxos"), "ortodox" );
	deepEqual( Stem("ortomolecular"), "ortomolecul" );
	deepEqual( Stem("ortopédicas"), "ortopéd" );
	deepEqual( Stem("ortopédicos"), "ortopéd" );
	deepEqual( Stem("ortopedista"), "ortoped" );
	deepEqual( Stem("ortopedistas"), "ortoped" );
	deepEqual( Stem("ortostática"), "ortostát" );
	deepEqual( Stem("orunmila"), "orunmil" );
	deepEqual( Stem("orwell"), "orwell" );
	deepEqual( Stem("orwelliano"), "orwellian" );
	deepEqual( Stem("os"), "os" );
	deepEqual( Stem("osaka"), "osak" );
	deepEqual( Stem("osborn"), "osborn" );
	deepEqual( Stem("oscar"), "oscar" );
	deepEqual( Stem("oscarito"), "oscarit" );
	deepEqual( Stem("oscila"), "oscil" );
	deepEqual( Stem("oscilação"), "oscil" );
	deepEqual( Stem("oscilam"), "oscil" );
	deepEqual( Stem("oscilava"), "oscil" );
	deepEqual( Stem("oscilavam"), "oscil" );
	deepEqual( Stem("osinaca"), "osinac" );
	deepEqual( Stem("osmar"), "osmar" );
	deepEqual( Stem("osonho"), "osonh" );
	deepEqual( Stem("ossada"), "ossad" );
	deepEqual( Stem("óssea"), "ósse" );
	deepEqual( Stem("ósseas"), "ósse" );
	deepEqual( Stem("ósseo"), "ósse" );
	deepEqual( Stem("ossificação"), "ossific" );
	deepEqual( Stem("osso"), "osso" );
	deepEqual( Stem("ossos"), "ossos" );
	deepEqual( Stem("ostensiva"), "ostens" );
	deepEqual( Stem("ostensivas"), "ostens" );
	deepEqual( Stem("ostenta"), "ostent" );
	deepEqual( Stem("ostentação"), "ostent" );
	deepEqual( Stem("ostentam"), "ostent" );
	deepEqual( Stem("ostentar"), "ostent" );
	deepEqual( Stem("ostentatória"), "ostentatór" );
	deepEqual( Stem("osteoporose"), "osteoporos" );
	deepEqual( Stem("osteossarcoma"), "osteossarcom" );
	deepEqual( Stem("ostracismo"), "ostrac" );
	deepEqual( Stem("ostras"), "ostras" );
	deepEqual( Stem("osvaldo"), "osvald" );
	deepEqual( Stem("oswald"), "oswald" );
	deepEqual( Stem("oswaldo"), "oswald" );
	deepEqual( Stem("otan"), "otan" );
	deepEqual( Stem("otávio"), "otávi" );
	deepEqual( Stem("otelo"), "otel" );
	deepEqual( Stem("othon"), "othon" );
	deepEqual( Stem("ótica"), "ótic" );
	deepEqual( Stem("óticos"), "ótic" );
	deepEqual( Stem("ótima"), "ótim" );
	deepEqual( Stem("ótimas"), "ótim" );
	deepEqual( Stem("otimismo"), "otim" );
	deepEqual( Stem("otimista"), "otim" );
	deepEqual( Stem("otimizar"), "otimiz" );
	deepEqual( Stem("ótimo"), "ótim" );
	deepEqual( Stem("ótimos"), "ótim" );
	deepEqual( Stem("otomana"), "otoman" );
	deepEqual( Stem("otomano"), "otoman" );
	deepEqual( Stem("otomanos"), "otoman" );
	deepEqual( Stem("otonni"), "otonn" );
	deepEqual( Stem("ottoni"), "otton" );
	deepEqual( Stem("ou"), "ou" );
	deepEqual( Stem("ouço"), "ouc" );
	deepEqual( Stem("ourivesaria"), "ourives" );
	deepEqual( Stem("ouro"), "our" );
	deepEqual( Stem("ousa"), "ous" );
	deepEqual( Stem("ousada"), "ous" );
	deepEqual( Stem("ousadia"), "ousad" );
	deepEqual( Stem("ousado"), "ous" );
	deepEqual( Stem("ousados"), "ous" );
	deepEqual( Stem("ousar"), "ous" );
	deepEqual( Stem("ouso"), "ous" );
	deepEqual( Stem("outdoors"), "outdoors" );
	deepEqual( Stem("outing"), "outing" );
	deepEqual( Stem("outono"), "outon" );
	deepEqual( Stem("outra"), "outr" );
	deepEqual( Stem("outras"), "outr" );
	deepEqual( Stem("outro"), "outr" );
	deepEqual( Stem("outrora"), "outror" );
	deepEqual( Stem("outros"), "outr" );
	deepEqual( Stem("outsuka"), "outsuk" );
	deepEqual( Stem("outubro"), "outubr" );
	deepEqual( Stem("ouve"), "ouv" );
	deepEqual( Stem("ouvem"), "ouv" );
	deepEqual( Stem("ouvi"), "ouv" );
	deepEqual( Stem("ouvia"), "ouv" );
	deepEqual( Stem("ouvida"), "ouv" );
	deepEqual( Stem("ouvidas"), "ouv" );
	deepEqual( Stem("ouvido"), "ouv" );
	deepEqual( Stem("ouvidor"), "ouvidor" );
	deepEqual( Stem("ouvidos"), "ouv" );
	deepEqual( Stem("ouvimos"), "ouv" );
	deepEqual( Stem("ouvindo"), "ouv" );
	deepEqual( Stem("ouvinte"), "ouvint" );
	deepEqual( Stem("ouvintes"), "ouvint" );
	deepEqual( Stem("ouvir"), "ouv" );
	deepEqual( Stem("ouvirá"), "ouv" );
	deepEqual( Stem("ouviram"), "ouv" );
	deepEqual( Stem("ouvirem"), "ouv" );
	deepEqual( Stem("ouviu"), "ouv" );
	deepEqual( Stem("ovacionar"), "ovacion" );
	deepEqual( Stem("ovário"), "ovári" );
	deepEqual( Stem("ovários"), "ovári" );
	deepEqual( Stem("ovelha"), "ovelh" );
	deepEqual( Stem("ovelhas"), "ovelh" );
	deepEqual( Stem("over"), "over" );
	deepEqual( Stem("overbooking"), "overbooking" );
	deepEqual( Stem("overdose"), "overdos" );
	deepEqual( Stem("overdrive"), "overdriv" );
	deepEqual( Stem("overseas"), "overs" );
	deepEqual( Stem("oviedo"), "ovied" );
	deepEqual( Stem("ovni"), "ovni" );
	deepEqual( Stem("ovnis"), "ovnis" );
	deepEqual( Stem("ovo"), "ovo" );
	deepEqual( Stem("ovos"), "ovos" );
	deepEqual( Stem("oxalá"), "oxal" );
	deepEqual( Stem("oxford"), "oxford" );
	deepEqual( Stem("oxigenados"), "oxigen" );
	deepEqual( Stem("oxigênio"), "oxigêni" );
	deepEqual( Stem("oxóssi"), "oxóss" );
	deepEqual( Stem("oxum"), "oxum" );
	deepEqual( Stem("oxun"), "oxun" );
	deepEqual( Stem("oxxyon"), "oxxyon" );
	deepEqual( Stem("ozires"), "ozir" );
	deepEqual( Stem("ozônio"), "ozôni" );
	deepEqual( Stem("ozorio"), "ozori" );
	deepEqual( Stem("ozório"), "ozóri" );
	deepEqual( Stem("p"), "p" );
	deepEqual( Stem("pa"), "pa" );
	deepEqual( Stem("pá"), "pá" );
	deepEqual( Stem("pablo"), "pabl" );
	deepEqual( Stem("pacaccini"), "pacaccin" );
	deepEqual( Stem("pacaembu"), "pacaembu" );
	deepEqual( Stem("pacata"), "pacat" );
	deepEqual( Stem("pacessetter"), "pacessett" );
	deepEqual( Stem("pacheco"), "pachec" );
	deepEqual( Stem("pachorra"), "pachorr" );
	deepEqual( Stem("paci"), "pac" );
	deepEqual( Stem("paciência"), "paciênc" );
	deepEqual( Stem("paciente"), "pacient" );
	deepEqual( Stem("pacientemente"), "pacient" );
	deepEqual( Stem("pacientes"), "pacient" );
	deepEqual( Stem("pacífica"), "pacíf" );
	deepEqual( Stem("pacífico"), "pacíf" );
	deepEqual( Stem("pacifismo"), "pacif" );
	deepEqual( Stem("pacifista"), "pacif" );
	deepEqual( Stem("packard"), "packard" );
	deepEqual( Stem("pacotaço"), "pacotac" );
	deepEqual( Stem("pacote"), "pacot" );
	deepEqual( Stem("pacotes"), "pacot" );
	deepEqual( Stem("pacotinho"), "pacotinh" );
	deepEqual( Stem("pacto"), "pact" );
	deepEqual( Stem("pactual"), "pactual" );
	deepEqual( Stem("padaria"), "pad" );
	deepEqual( Stem("padece"), "padec" );
	deepEqual( Stem("padilha"), "padilh" );
	deepEqual( Stem("padilla"), "padill" );
	deepEqual( Stem("padim"), "padim" );
	deepEqual( Stem("padrão"), "padrã" );
	deepEqual( Stem("padrasto"), "padrast" );
	deepEqual( Stem("padre"), "padr" );
	deepEqual( Stem("padres"), "padr" );
	deepEqual( Stem("padrinho"), "padrinh" );
	deepEqual( Stem("padrinhos"), "padrinh" );
	deepEqual( Stem("padroeira"), "padroeir" );
	deepEqual( Stem("padroeiro"), "padroeir" );
	deepEqual( Stem("padrões"), "padrõ" );
	deepEqual( Stem("padronagens"), "padronagens" );
	deepEqual( Stem("padronização"), "padroniz" );
	deepEqual( Stem("padronizadas"), "padroniz" );
	deepEqual( Stem("padronizador"), "padroniz" );
	deepEqual( Stem("padronizados"), "padroniz" );
	deepEqual( Stem("pádua"), "pádu" );
	deepEqual( Stem("paes"), "paes" );
	deepEqual( Stem("paetês"), "paetês" );
	deepEqual( Stem("paf"), "paf" );
	deepEqual( Stem("paffenberger"), "paffenberg" );
	deepEqual( Stem("pág"), "pág" );
	deepEqual( Stem("paga"), "pag" );
	deepEqual( Stem("pagá"), "pag" );
	deepEqual( Stem("pagam"), "pag" );
	deepEqual( Stem("pagamento"), "pagament" );
	deepEqual( Stem("pagamentos"), "pagament" );
	deepEqual( Stem("pagamos"), "pag" );
	deepEqual( Stem("pagando"), "pag" );
	deepEqual( Stem("pagar"), "pag" );
	deepEqual( Stem("pagará"), "pag" );
	deepEqual( Stem("pagaram"), "pag" );
	deepEqual( Stem("pagariam"), "pag" );
	deepEqual( Stem("pagas"), "pag" );
	deepEqual( Stem("pagasse"), "pag" );
	deepEqual( Stem("pagava"), "pag" );
	deepEqual( Stem("page"), "pag" );
	deepEqual( Stem("pager"), "pag" );
	deepEqual( Stem("pagers"), "pagers" );
	deepEqual( Stem("página"), "págin" );
	deepEqual( Stem("páginas"), "págin" );
	deepEqual( Stem("pago"), "pag" );
	deepEqual( Stem("pagode"), "pagod" );
	deepEqual( Stem("pagodeira"), "pagodeir" );
	deepEqual( Stem("pagodes"), "pagod" );
	deepEqual( Stem("pagos"), "pag" );
	deepEqual( Stem("pagou"), "pag" );
	deepEqual( Stem("págs"), "págs" );
	deepEqual( Stem("pagu"), "pagu" );
	deepEqual( Stem("pague"), "pag" );
	deepEqual( Stem("paguei"), "pagu" );
	deepEqual( Stem("paguem"), "pagu" );
	deepEqual( Stem("pagura"), "pagur" );
	deepEqual( Stem("pahlevi"), "pahlev" );
	deepEqual( Stem("pai"), "pai" );
	deepEqual( Stem("painéis"), "pain" );
	deepEqual( Stem("painel"), "painel" );
	deepEqual( Stem("pains"), "pains" );
	deepEqual( Stem("paint"), "paint" );
	deepEqual( Stem("pairam"), "pair" );
	deepEqual( Stem("pairava"), "pair" );
	deepEqual( Stem("pais"), "pais" );
	deepEqual( Stem("país"), "país" );
	deepEqual( Stem("paisagem"), "paisag" );
	deepEqual( Stem("paisagens"), "paisagens" );
	deepEqual( Stem("paisana"), "paisan" );
	deepEqual( Stem("países"), "país" );
	deepEqual( Stem("paiva"), "paiv" );
	deepEqual( Stem("paix"), "paix" );
	deepEqual( Stem("paixão"), "paixã" );
	deepEqual( Stem("paixões"), "paixõ" );
	deepEqual( Stem("paixonites"), "paixonit" );
	deepEqual( Stem("pajé"), "paj" );
	deepEqual( Stem("pajelança"), "pajelanc" );
	deepEqual( Stem("pajero"), "pajer" );
	deepEqual( Stem("pajés"), "pajés" );
	deepEqual( Stem("palace"), "palac" );
	deepEqual( Stem("palacete"), "palacet" );
	deepEqual( Stem("palacetes"), "palacet" );
	deepEqual( Stem("palácio"), "paláci" );
	deepEqual( Stem("palácios"), "paláci" );
	deepEqual( Stem("paladar"), "palad" );
	deepEqual( Stem("paladares"), "palad" );
	deepEqual( Stem("palanque"), "palanqu" );
	deepEqual( Stem("palanques"), "palanqu" );
	deepEqual( Stem("palavra"), "palavr" );
	deepEqual( Stem("palavras"), "palavr" );
	deepEqual( Stem("palavrões"), "palavrõ" );
	deepEqual( Stem("palavrório"), "palavróri" );
	deepEqual( Stem("palco"), "palc" );
	deepEqual( Stem("palcos"), "palc" );
	deepEqual( Stem("paleontóloga"), "paleontólog" );
	deepEqual( Stem("paleontólogo"), "paleontólog" );
	deepEqual( Stem("palestina"), "palestin" );
	deepEqual( Stem("palestinos"), "palestin" );
	deepEqual( Stem("palestra"), "palestr" );
	deepEqual( Stem("palestrando"), "palestr" );
	deepEqual( Stem("palestras"), "palestr" );
	deepEqual( Stem("paletó"), "palet" );
	deepEqual( Stem("palha"), "palh" );
	deepEqual( Stem("palhares"), "palh" );
	deepEqual( Stem("palhinha"), "palhinh" );
	deepEqual( Stem("paliativo"), "paliat" );
	deepEqual( Stem("pálida"), "pál" );
	deepEqual( Stem("pálido"), "pál" );
	deepEqual( Stem("palio"), "pali" );
	deepEqual( Stem("palma"), "palm" );
	deepEqual( Stem("palmada"), "palm" );
	deepEqual( Stem("palmares"), "palm" );
	deepEqual( Stem("palmeiras"), "palmeir" );
	deepEqual( Stem("palmo"), "palm" );
	deepEqual( Stem("palpável"), "palpável" );
	deepEqual( Stem("pálpebra"), "pálpebr" );
	deepEqual( Stem("pálpebras"), "pálpebr" );
	deepEqual( Stem("palpitações"), "palpit" );
	deepEqual( Stem("palpitar"), "palpit" );
	deepEqual( Stem("palpite"), "palpit" );
	deepEqual( Stem("palpites"), "palpit" );
	deepEqual( Stem("pam"), "pam" );
	deepEqual( Stem("pamela"), "pamel" );
	deepEqual( Stem("pamplona"), "pamplon" );
	deepEqual( Stem("pampulha"), "pampulh" );
	deepEqual( Stem("pan"), "pan" );
	deepEqual( Stem("panacéia"), "panac" );
	deepEqual( Stem("panache"), "panach" );
	deepEqual( Stem("panamá"), "panam" );
	deepEqual( Stem("panatela"), "panatel" );
	deepEqual( Stem("pancadaria"), "pancad" );
	deepEqual( Stem("pancadas"), "panc" );
	deepEqual( Stem("pancas"), "panc" );
	deepEqual( Stem("pâncreas"), "pâncr" );
	deepEqual( Stem("pancreatite"), "pancreatit" );
	deepEqual( Stem("pandeiro"), "pandeir" );
	deepEqual( Stem("pandolpho"), "pandolph" );
	deepEqual( Stem("pane"), "pan" );
	deepEqual( Stem("panegíricos"), "panegír" );
	deepEqual( Stem("panela"), "panel" );
	deepEqual( Stem("panelaço"), "panelac" );
	deepEqual( Stem("panes"), "pan" );
	deepEqual( Stem("panfletário"), "panfletári" );
	deepEqual( Stem("panfletos"), "panflet" );
	deepEqual( Stem("pânico"), "pânic" );
	deepEqual( Stem("pano"), "pan" );
	deepEqual( Stem("panorama"), "panoram" );
	deepEqual( Stem("panorâmico"), "panorâm" );
	deepEqual( Stem("panos"), "pan" );
	deepEqual( Stem("pantanal"), "pantanal" );
	deepEqual( Stem("pântanos"), "pântan" );
	deepEqual( Stem("panteão"), "panteã" );
	deepEqual( Stem("pantera"), "pant" );
	deepEqual( Stem("pantheon"), "pantheon" );
	deepEqual( Stem("pão"), "pã" );
	deepEqual( Stem("paolo"), "paol" );
	deepEqual( Stem("papa"), "pap" );
	deepEqual( Stem("papá"), "pap" );
	deepEqual( Stem("papagaios"), "papagai" );
	deepEqual( Stem("papai"), "papa" );
	deepEqual( Stem("papais"), "pap" );
	deepEqual( Stem("papanicolau"), "papanicolau" );
	deepEqual( Stem("paparazzi"), "paparazz" );
	deepEqual( Stem("paparicada"), "paparic" );
	deepEqual( Stem("papas"), "pap" );
	deepEqual( Stem("papéis"), "pap" );
	deepEqual( Stem("papel"), "papel" );
	deepEqual( Stem("papelada"), "papel" );
	deepEqual( Stem("papelão"), "papelã" );
	deepEqual( Stem("papelaria"), "papel" );
	deepEqual( Stem("papelotes"), "papelot" );
	deepEqual( Stem("papo"), "pap" );
	deepEqual( Stem("pappas"), "papp" );
	deepEqual( Stem("papuda"), "papud" );
	deepEqual( Stem("paquera"), "paqu" );
	deepEqual( Stem("paquerar"), "paquer" );
	deepEqual( Stem("paqueras"), "paqu" );
	deepEqual( Stem("paquerava"), "paquer" );
	deepEqual( Stem("paquistão"), "paquistã" );
	deepEqual( Stem("paquito"), "paquit" );
	deepEqual( Stem("par"), "par" );
	deepEqual( Stem("para"), "par" );
	deepEqual( Stem("pára"), "pár" );
	deepEqual( Stem("pará"), "par" );
	deepEqual( Stem("parabenizou"), "parabeniz" );
	deepEqual( Stem("parabéns"), "parabéns" );
	deepEqual( Stem("parábolas"), "parábol" );
	deepEqual( Stem("parabolazinha"), "parabolazinh" );
	deepEqual( Stem("paracatu"), "paracatu" );
	deepEqual( Stem("parada"), "par" );
	deepEqual( Stem("paradas"), "par" );
	deepEqual( Stem("paradeiro"), "paradeir" );
	deepEqual( Stem("paradidáticos"), "paradidát" );
	deepEqual( Stem("paradigma"), "paradigm" );
	deepEqual( Stem("paradisíacas"), "paradisíac" );
	deepEqual( Stem("paradisíaco"), "paradisíac" );
	deepEqual( Stem("parado"), "par" );
	deepEqual( Stem("parados"), "par" );
	deepEqual( Stem("paradoxal"), "paradoxal" );
	deepEqual( Stem("paradoxalmente"), "paradoxal" );
	deepEqual( Stem("paradoxo"), "paradox" );
	deepEqual( Stem("parafernália"), "parafernál" );
	deepEqual( Stem("parafuso"), "parafus" );
	deepEqual( Stem("parafusos"), "parafus" );
	deepEqual( Stem("paragominas"), "paragomin" );
	deepEqual( Stem("parágrafo"), "parágraf" );
	deepEqual( Stem("parágrafos"), "parágraf" );
	deepEqual( Stem("paraguai"), "paragua" );
	deepEqual( Stem("paraguaia"), "paragua" );
	deepEqual( Stem("paraguaio"), "paraguai" );
	deepEqual( Stem("paraíba"), "paraíb" );
	deepEqual( Stem("paraibana"), "paraiban" );
	deepEqual( Stem("paraibano"), "paraiban" );
	deepEqual( Stem("paraíso"), "paraís" );
	deepEqual( Stem("paralela"), "paralel" );
	deepEqual( Stem("paralelamente"), "paralel" );
	deepEqual( Stem("paralelas"), "paralel" );
	deepEqual( Stem("paralelo"), "paralel" );
	deepEqual( Stem("paralisa"), "paralis" );
	deepEqual( Stem("paralisação"), "paralis" );
	deepEqual( Stem("paralisadas"), "paralis" );
	deepEqual( Stem("paralisado"), "paralis" );
	deepEqual( Stem("paralisia"), "paralis" );
	deepEqual( Stem("paralisou"), "paralis" );
	deepEqual( Stem("paralítico"), "paralít" );
	deepEqual( Stem("param"), "par" );
	deepEqual( Stem("paramaribo"), "paramarib" );
	deepEqual( Stem("parâmetro"), "parâmetr" );
	deepEqual( Stem("parâmetros"), "parâmetr" );
	deepEqual( Stem("paraná"), "paran" );
	deepEqual( Stem("paranaense"), "paranaens" );
	deepEqual( Stem("paranaenses"), "paranaens" );
	deepEqual( Stem("paranaguá"), "paranagu" );
	deepEqual( Stem("paranaíba"), "paranaíb" );
	deepEqual( Stem("paranapanema"), "paranapanem" );
	deepEqual( Stem("parando"), "par" );
	deepEqual( Stem("paranóia"), "paranó" );
	deepEqual( Stem("paranóico"), "paranó" );
	deepEqual( Stem("paranormais"), "paranorm" );
	deepEqual( Stem("paranormal"), "paranormal" );
	deepEqual( Stem("paranormalidade"), "paranormal" );
	deepEqual( Stem("parapeito"), "parapeit" );
	deepEqual( Stem("paraplégico"), "paraplég" );
	deepEqual( Stem("parar"), "par" );
	deepEqual( Stem("pararam"), "par" );
	deepEqual( Stem("parasita"), "parasit" );
	deepEqual( Stem("parasitárias"), "parasitár" );
	deepEqual( Stem("parasitologia"), "parasitolog" );
	deepEqual( Stem("parasse"), "par" );
	deepEqual( Stem("parati"), "parat" );
	deepEqual( Stem("parava"), "par" );
	deepEqual( Stem("paravam"), "par" );
	deepEqual( Stem("parávamos"), "par" );
	deepEqual( Stem("paravertebral"), "paravertebral" );
	deepEqual( Stem("parceira"), "parceir" );
	deepEqual( Stem("parceiras"), "parceir" );
	deepEqual( Stem("parceiro"), "parceir" );
	deepEqual( Stem("parceiros"), "parceir" );
	deepEqual( Stem("parcela"), "parcel" );
	deepEqual( Stem("parcelado"), "parcel" );
	deepEqual( Stem("parcelados"), "parcel" );
	deepEqual( Stem("parcelamento"), "parcel" );
	deepEqual( Stem("parcelas"), "parcel" );
	deepEqual( Stem("parcelava"), "parcel" );
	deepEqual( Stem("parceria"), "parc" );
	deepEqual( Stem("parcerias"), "parc" );
	deepEqual( Stem("parcial"), "parcial" );
	deepEqual( Stem("parcialmente"), "parcial" );
	deepEqual( Stem("parcimônia"), "parcimôn" );
	deepEqual( Stem("parda"), "pard" );
	deepEqual( Stem("pare"), "par" );
	deepEqual( Stem("pareça"), "parec" );
	deepEqual( Stem("parece"), "parec" );
	deepEqual( Stem("parecem"), "parec" );
	deepEqual( Stem("parecendo"), "parec" );
	deepEqual( Stem("parecer"), "parec" );
	deepEqual( Stem("pareceres"), "parec" );
	deepEqual( Stem("pareceu"), "parec" );
	deepEqual( Stem("parecia"), "parec" );
	deepEqual( Stem("pareciam"), "parec" );
	deepEqual( Stem("parecida"), "parec" );
	deepEqual( Stem("parecidas"), "parec" );
	deepEqual( Stem("parecido"), "parec" );
	deepEqual( Stem("parecidos"), "parec" );
	deepEqual( Stem("parecis"), "parec" );
	deepEqual( Stem("pareço"), "parec" );
	deepEqual( Stem("paredão"), "paredã" );
	deepEqual( Stem("parede"), "pared" );
	deepEqual( Stem("paredes"), "pared" );
	deepEqual( Stem("paredões"), "paredõ" );
	deepEqual( Stem("parei"), "par" );
	deepEqual( Stem("parelelo"), "parelel" );
	deepEqual( Stem("parelheiros"), "parelheir" );
	deepEqual( Stem("parem"), "par" );
	deepEqual( Stem("parent"), "parent" );
	deepEqual( Stem("parente"), "parent" );
	deepEqual( Stem("parentes"), "parent" );
	deepEqual( Stem("parentesco"), "parentesc" );
	deepEqual( Stem("páreo"), "pár" );
	deepEqual( Stem("pares"), "par" );
	deepEqual( Stem("pari"), "par" );
	deepEqual( Stem("párias"), "pár" );
	deepEqual( Stem("paris"), "par" );
	deepEqual( Stem("parisien"), "parisien" );
	deepEqual( Stem("parisiense"), "parisiens" );
	deepEqual( Stem("park"), "park" );
	deepEqual( Stem("parker"), "park" );
	deepEqual( Stem("parking"), "parking" );
	deepEqual( Stem("parlamentar"), "parlament" );
	deepEqual( Stem("parlamentares"), "parlament" );
	deepEqual( Stem("parlamentarismo"), "parlamentar" );
	deepEqual( Stem("parlamento"), "parlament" );
	deepEqual( Stem("parmalat"), "parmalat" );
	deepEqual( Stem("parnaíba"), "parnaíb" );
	deepEqual( Stem("paro"), "par" );
	deepEqual( Stem("pároco"), "pároc" );
	deepEqual( Stem("parodiando"), "parodi" );
	deepEqual( Stem("paróquia"), "paróqu" );
	deepEqual( Stem("parou"), "par" );
	deepEqual( Stem("parque"), "parqu" );
	deepEqual( Stem("parques"), "parqu" );
	deepEqual( Stem("parr"), "parr" );
	deepEqual( Stem("parra"), "parr" );
	deepEqual( Stem("parreira"), "parreir" );
	deepEqual( Stem("parreiras"), "parreir" );
	deepEqual( Stem("parry"), "parry" );
	deepEqual( Stem("parta"), "part" );
	deepEqual( Stem("partagas"), "partag" );
	deepEqual( Stem("parte"), "part" );
	deepEqual( Stem("parteira"), "parteir" );
	deepEqual( Stem("partem"), "part" );
	deepEqual( Stem("partes"), "part" );
	deepEqual( Stem("partia"), "part" );
	deepEqual( Stem("participa"), "particip" );
	deepEqual( Stem("participação"), "particip" );
	deepEqual( Stem("participações"), "particip" );
	deepEqual( Stem("participado"), "particip" );
	deepEqual( Stem("participam"), "particip" );
	deepEqual( Stem("participando"), "particip" );
	deepEqual( Stem("participante"), "particip" );
	deepEqual( Stem("participantes"), "particip" );
	deepEqual( Stem("participar"), "particip" );
	deepEqual( Stem("participaram"), "particip" );
	deepEqual( Stem("participarem"), "particip" );
	deepEqual( Stem("participativo"), "particip" );
	deepEqual( Stem("participava"), "particip" );
	deepEqual( Stem("participei"), "particip" );
	deepEqual( Stem("participo"), "particip" );
	deepEqual( Stem("participou"), "particip" );
	deepEqual( Stem("partícula"), "partícul" );
	deepEqual( Stem("particular"), "particul" );
	deepEqual( Stem("particulares"), "particul" );
	deepEqual( Stem("particularíssimos"), "particularíss" );
	deepEqual( Stem("particularmente"), "particular" );
	deepEqual( Stem("partículas"), "partícul" );
	deepEqual( Stem("partida"), "part" );
	deepEqual( Stem("partidão"), "partidã" );
	deepEqual( Stem("partidária"), "partidár" );
	deepEqual( Stem("partidárias"), "partidár" );
	deepEqual( Stem("partidário"), "partidári" );
	deepEqual( Stem("partidários"), "partidári" );
	deepEqual( Stem("partidas"), "part" );
	deepEqual( Stem("partido"), "part" );
	deepEqual( Stem("partidos"), "part" );
	deepEqual( Stem("partilha"), "partilh" );
	deepEqual( Stem("partilhar"), "partilh" );
	deepEqual( Stem("partilharam"), "partilh" );
	deepEqual( Stem("partindo"), "part" );
	deepEqual( Stem("partir"), "part" );
	deepEqual( Stem("partiram"), "part" );
	deepEqual( Stem("partitura"), "partitur" );
	deepEqual( Stem("partituras"), "partitur" );
	deepEqual( Stem("partiu"), "part" );
	deepEqual( Stem("parto"), "part" );
	deepEqual( Stem("partos"), "part" );
	deepEqual( Stem("pás"), "pás" );
	deepEqual( Stem("páscoa"), "pásco" );
	deepEqual( Stem("pascolato"), "pascolat" );
	deepEqual( Stem("pasini"), "pasin" );
	deepEqual( Stem("pasme"), "pasm" );
	deepEqual( Stem("pasolini"), "pasolin" );
	deepEqual( Stem("pasquim"), "pasquim" );
	deepEqual( Stem("passa"), "pass" );
	deepEqual( Stem("passá"), "pass" );
	deepEqual( Stem("passada"), "pass" );
	deepEqual( Stem("passadas"), "pass" );
	deepEqual( Stem("passadinha"), "passadinh" );
	deepEqual( Stem("passado"), "pass" );
	deepEqual( Stem("passados"), "pass" );
	deepEqual( Stem("passageira"), "passageir" );
	deepEqual( Stem("passageiro"), "passageir" );
	deepEqual( Stem("passageiros"), "passageir" );
	deepEqual( Stem("passagem"), "passag" );
	deepEqual( Stem("passagens"), "passagens" );
	deepEqual( Stem("passam"), "pass" );
	deepEqual( Stem("passamos"), "pass" );
	deepEqual( Stem("passando"), "pass" );
	deepEqual( Stem("passaporte"), "passaport" );
	deepEqual( Stem("passaportecarimbado"), "passaportecarimb" );
	deepEqual( Stem("passaportes"), "passaport" );
	deepEqual( Stem("passar"), "pass" );
	deepEqual( Stem("passara"), "pass" );
	deepEqual( Stem("passará"), "pass" );
	deepEqual( Stem("passaram"), "pass" );
	deepEqual( Stem("passarela"), "passarel" );
	deepEqual( Stem("passarelas"), "passarel" );
	deepEqual( Stem("passarem"), "pass" );
	deepEqual( Stem("passaria"), "pass" );
	deepEqual( Stem("passariam"), "pass" );
	deepEqual( Stem("passaríamos"), "pass" );
	deepEqual( Stem("passarinho"), "passarinh" );
	deepEqual( Stem("passarinhos"), "passarinh" );
	deepEqual( Stem("pássaros"), "pássar" );
	deepEqual( Stem("passasse"), "pass" );
	deepEqual( Stem("passassem"), "pass" );
	deepEqual( Stem("passat"), "passat" );
	deepEqual( Stem("passatempo"), "passatemp" );
	deepEqual( Stem("passava"), "pass" );
	deepEqual( Stem("passavam"), "pass" );
	deepEqual( Stem("passe"), "pass" );
	deepEqual( Stem("passeando"), "pass" );
	deepEqual( Stem("passear"), "pass" );
	deepEqual( Stem("passeata"), "passeat" );
	deepEqual( Stem("passeatas"), "passeat" );
	deepEqual( Stem("passeava"), "pass" );
	deepEqual( Stem("passeavam"), "pass" );
	deepEqual( Stem("passei"), "pass" );
	deepEqual( Stem("passeia"), "pass" );
	deepEqual( Stem("passeie"), "passei" );
	deepEqual( Stem("passeio"), "passei" );
	deepEqual( Stem("passeios"), "passei" );
	deepEqual( Stem("passem"), "pass" );
	deepEqual( Stem("passeou"), "pass" );
	deepEqual( Stem("passes"), "pass" );
	deepEqual( Stem("passinhos"), "passinh" );
	deepEqual( Stem("passional"), "passional" );
	deepEqual( Stem("passiva"), "passiv" );
	deepEqual( Stem("passivas"), "passiv" );
	deepEqual( Stem("passível"), "passível" );
	deepEqual( Stem("passivo"), "passiv" );
	deepEqual( Stem("passo"), "pass" );
	deepEqual( Stem("passos"), "pass" );
	deepEqual( Stem("passou"), "pass" );
	deepEqual( Stem("pasta"), "past" );
	deepEqual( Stem("pastas"), "past" );
	deepEqual( Stem("pastel"), "pastel" );
	deepEqual( Stem("pastelão"), "pastelã" );
	deepEqual( Stem("pasteurização"), "pasteuriz" );
	deepEqual( Stem("pasteurizado"), "pasteuriz" );
	deepEqual( Stem("pastilha"), "pastilh" );
	deepEqual( Stem("pasto"), "past" );
	deepEqual( Stem("pastor"), "pastor" );
	deepEqual( Stem("pastora"), "pastor" );
	deepEqual( Stem("pastoral"), "pastoral" );
	deepEqual( Stem("pastore"), "pastor" );
	deepEqual( Stem("pastores"), "pastor" );
	deepEqual( Stem("pastorzão"), "pastorzã" );
	deepEqual( Stem("pastos"), "past" );
	deepEqual( Stem("pastroes"), "pastro" );
	deepEqual( Stem("pat"), "pat" );
	deepEqual( Stem("pata"), "pat" );
	deepEqual( Stem("patachou"), "patach" );
	deepEqual( Stem("patagônia"), "patagôn" );
	deepEqual( Stem("patamar"), "patam" );
	deepEqual( Stem("patamares"), "patam" );
	deepEqual( Stem("patas"), "pat" );
	deepEqual( Stem("pataxó"), "patax" );
	deepEqual( Stem("pataxós"), "pataxós" );
	deepEqual( Stem("patches"), "patch" );
	deepEqual( Stem("patente"), "patent" );
	deepEqual( Stem("patenteação"), "patent" );
	deepEqual( Stem("patentemente"), "patent" );
	deepEqual( Stem("patentes"), "patent" );
	deepEqual( Stem("paternalista"), "paternal" );
	deepEqual( Stem("paternidade"), "patern" );
	deepEqual( Stem("paternidades"), "patern" );
	deepEqual( Stem("paterno"), "patern" );
	deepEqual( Stem("paternost"), "paternost" );
	deepEqual( Stem("patética"), "patét" );
	deepEqual( Stem("pathfinder"), "pathfind" );
	deepEqual( Stem("patias"), "pat" );
	deepEqual( Stem("patinadores"), "patin" );
	deepEqual( Stem("pátio"), "páti" );
	deepEqual( Stem("pato"), "pat" );
	deepEqual( Stem("patológico"), "patológ" );
	deepEqual( Stem("patologistas"), "patolog" );
	deepEqual( Stem("patotinha"), "patotinh" );
	deepEqual( Stem("patrão"), "patrã" );
	deepEqual( Stem("pátria"), "pátr" );
	deepEqual( Stem("patriarca"), "patriarc" );
	deepEqual( Stem("patriarcal"), "patriarcal" );
	deepEqual( Stem("patricia"), "patric" );
	deepEqual( Stem("patrícia"), "patríc" );
	deepEqual( Stem("patricinhas"), "patricinh" );
	deepEqual( Stem("patrick"), "patrick" );
	deepEqual( Stem("patrimonial"), "patrimonial" );
	deepEqual( Stem("patrimônio"), "patrimôni" );
	deepEqual( Stem("patrizia"), "patriz" );
	deepEqual( Stem("patroa"), "patro" );
	deepEqual( Stem("patrocinada"), "patrocin" );
	deepEqual( Stem("patrocinadas"), "patrocin" );
	deepEqual( Stem("patrocinado"), "patrocin" );
	deepEqual( Stem("patrocinador"), "patrocin" );
	deepEqual( Stem("patrocinadora"), "patrocin" );
	deepEqual( Stem("patrocinados"), "patrocin" );
	deepEqual( Stem("patrocinando"), "patrocin" );
	deepEqual( Stem("patrocínio"), "patrocíni" );
	deepEqual( Stem("patrões"), "patrõ" );
	deepEqual( Stem("patrol"), "patrol" );
	deepEqual( Stem("patronais"), "patron" );
	deepEqual( Stem("patronato"), "patronat" );
	deepEqual( Stem("patrulhada"), "patrulh" );
	deepEqual( Stem("patrulhamento"), "patrulh" );
	deepEqual( Stem("patrulhas"), "patrulh" );
	deepEqual( Stem("patten"), "patten" );
	deepEqual( Stem("patuás"), "patuás" );
	deepEqual( Stem("patury"), "patury" );
	deepEqual( Stem("pau"), "pau" );
	deepEqual( Stem("pauini"), "pauin" );
	deepEqual( Stem("paul"), "paul" );
	deepEqual( Stem("paula"), "paul" );
	deepEqual( Stem("pauladas"), "paul" );
	deepEqual( Stem("paulatinamente"), "paulatin" );
	deepEqual( Stem("pauleira"), "pauleir" );
	deepEqual( Stem("pauli"), "paul" );
	deepEqual( Stem("paulina"), "paulin" );
	deepEqual( Stem("paulino"), "paulin" );
	deepEqual( Stem("paulista"), "paulist" );
	deepEqual( Stem("paulistana"), "paulistan" );
	deepEqual( Stem("paulistanas"), "paulistan" );
	deepEqual( Stem("paulistano"), "paulistan" );
	deepEqual( Stem("paulistanos"), "paulistan" );
	deepEqual( Stem("paulistas"), "paulist" );
	deepEqual( Stem("paulo"), "paul" );
	deepEqual( Stem("paupérrimas"), "paupérrim" );
	deepEqual( Stem("paus"), "paus" );
	deepEqual( Stem("pausa"), "paus" );
	deepEqual( Stem("pausada"), "paus" );
	deepEqual( Stem("pauta"), "paut" );
	deepEqual( Stem("pavão"), "pavã" );
	deepEqual( Stem("pavãozinho"), "pavãozinh" );
	deepEqual( Stem("pavarotti"), "pavarott" );
	deepEqual( Stem("pavilhão"), "pavilhã" );
	deepEqual( Stem("pavimentando"), "paviment" );
	deepEqual( Stem("pavimentar"), "paviment" );
	deepEqual( Stem("pavor"), "pavor" );
	deepEqual( Stem("pavuna"), "pavun" );
	deepEqual( Stem("payot"), "payot" );
	deepEqual( Stem("paz"), "paz" );
	deepEqual( Stem("pazes"), "paz" );
	deepEqual( Stem("pb"), "pb" );
	deepEqual( Stem("pc"), "pc" );
	deepEqual( Stem("pcb"), "pcb" );
	deepEqual( Stem("pcf"), "pcf" );
	deepEqual( Stem("pcr"), "pcr" );
	deepEqual( Stem("pcs"), "pcs" );
	deepEqual( Stem("pddi"), "pddi" );
	deepEqual( Stem("pdt"), "pdt" );
	deepEqual( Stem("pdv"), "pdv" );
	deepEqual( Stem("pe"), "pe" );
	deepEqual( Stem("pé"), "pé" );
	deepEqual( Stem("pearl"), "pearl" );
	deepEqual( Stem("peça"), "pec" );
	deepEqual( Stem("pecadilhos"), "pecadilh" );
	deepEqual( Stem("pecado"), "pec" );
	deepEqual( Stem("pecados"), "pec" );
	deepEqual( Stem("peças"), "pec" );
	deepEqual( Stem("pech"), "pech" );
	deepEqual( Stem("pecha"), "pech" );
	deepEqual( Stem("pechincha"), "pechinch" );
	deepEqual( Stem("pechman"), "pechman" );
	deepEqual( Stem("peço"), "pec" );
	deepEqual( Stem("peçonhentas"), "peçonhent" );
	deepEqual( Stem("peçonhentos"), "peçonhent" );
	deepEqual( Stem("peculiar"), "peculi" );
	deepEqual( Stem("peculiares"), "peculi" );
	deepEqual( Stem("peculiaridade"), "peculiar" );
	deepEqual( Stem("peculiaridades"), "peculiar" );
	deepEqual( Stem("pedaço"), "pedac" );
	deepEqual( Stem("pedaços"), "pedac" );
	deepEqual( Stem("pedágio"), "pedági" );
	deepEqual( Stem("pedágios"), "pedági" );
	deepEqual( Stem("pedagoga"), "pedagog" );
	deepEqual( Stem("pedagogas"), "pedagog" );
	deepEqual( Stem("pedagogia"), "pedagog" );
	deepEqual( Stem("pedagógica"), "pedagóg" );
	deepEqual( Stem("pedagógicas"), "pedagóg" );
	deepEqual( Stem("pedagógico"), "pedagóg" );
	deepEqual( Stem("pedagógicos"), "pedagóg" );
	deepEqual( Stem("pedagogo"), "pedagog" );
	deepEqual( Stem("pedagogos"), "pedagog" );
	deepEqual( Stem("pedal"), "pedal" );
	deepEqual( Stem("pedala"), "pedal" );
	deepEqual( Stem("pedalada"), "pedal" );
	deepEqual( Stem("pedalar"), "pedal" );
	deepEqual( Stem("pedalinhos"), "pedalinh" );
	deepEqual( Stem("pedalou"), "pedal" );
	deepEqual( Stem("pede"), "ped" );
	deepEqual( Stem("pedem"), "ped" );
	deepEqual( Stem("pederneiras"), "pederneir" );
	deepEqual( Stem("pedestal"), "pedestal" );
	deepEqual( Stem("pedestres"), "pedestr" );
	deepEqual( Stem("pedetistas"), "pedet" );
	deepEqual( Stem("pedi"), "ped" );
	deepEqual( Stem("pedia"), "ped" );
	deepEqual( Stem("pediam"), "ped" );
	deepEqual( Stem("pediatra"), "pediatr" );
	deepEqual( Stem("pediátrico"), "pediátr" );
	deepEqual( Stem("pedida"), "ped" );
	deepEqual( Stem("pedidas"), "ped" );
	deepEqual( Stem("pedido"), "ped" );
	deepEqual( Stem("pedidos"), "ped" );
	deepEqual( Stem("pedindo"), "ped" );
	deepEqual( Stem("pedir"), "ped" );
	deepEqual( Stem("pediram"), "ped" );
	deepEqual( Stem("pedirão"), "ped" );
	deepEqual( Stem("pedirei"), "ped" );
	deepEqual( Stem("pedirem"), "ped" );
	deepEqual( Stem("pediria"), "ped" );
	deepEqual( Stem("pediu"), "ped" );
	deepEqual( Stem("pedra"), "pedr" );
	deepEqual( Stem("pedradas"), "pedr" );
	deepEqual( Stem("pedras"), "pedr" );
	deepEqual( Stem("pedreira"), "pedreir" );
	deepEqual( Stem("pedreiras"), "pedreir" );
	deepEqual( Stem("pedreiro"), "pedreir" );
	deepEqual( Stem("pedreiros"), "pedreir" );
	deepEqual( Stem("pedro"), "pedr" );
	deepEqual( Stem("pedrosa"), "pedros" );
	deepEqual( Stem("pedroso"), "pedros" );
	deepEqual( Stem("peeling"), "peeling" );
	deepEqual( Stem("peemedebista"), "peemedeb" );
	deepEqual( Stem("peemedebistas"), "peemedeb" );
	deepEqual( Stem("pefelândia"), "pefelând" );
	deepEqual( Stem("pefelê"), "pefel" );
	deepEqual( Stem("pefelista"), "pefel" );
	deepEqual( Stem("pefelistas"), "pefel" );
	deepEqual( Stem("pega"), "peg" );
	deepEqual( Stem("pegá"), "peg" );
	deepEqual( Stem("pegação"), "pegaçã" );
	deepEqual( Stem("pegadas"), "peg" );
	deepEqual( Stem("pegajoso"), "pegaj" );
	deepEqual( Stem("pegam"), "peg" );
	deepEqual( Stem("pegamos"), "peg" );
	deepEqual( Stem("pegando"), "peg" );
	deepEqual( Stem("pegar"), "peg" );
	deepEqual( Stem("pegaram"), "peg" );
	deepEqual( Stem("pegaria"), "peg" );
	deepEqual( Stem("pegasse"), "peg" );
	deepEqual( Stem("pegassem"), "peg" );
	deepEqual( Stem("pegava"), "peg" );
	deepEqual( Stem("pego"), "peg" );
	deepEqual( Stem("pegou"), "peg" );
	deepEqual( Stem("pegue"), "peg" );
	deepEqual( Stem("peguei"), "pegu" );
	deepEqual( Stem("peias"), "pei" );
	deepEqual( Stem("peitinho"), "peitinh" );
	deepEqual( Stem("peito"), "peit" );
	deepEqual( Stem("peitoral"), "peitoral" );
	deepEqual( Stem("peitos"), "peit" );
	deepEqual( Stem("peixão"), "peixã" );
	deepEqual( Stem("peixe"), "peix" );
	deepEqual( Stem("peixes"), "peix" );
	deepEqual( Stem("peixoto"), "peixot" );
	deepEqual( Stem("pejorativa"), "pejor" );
	deepEqual( Stem("pejorativamente"), "pejor" );
	deepEqual( Stem("pejorativo"), "pejor" );
	deepEqual( Stem("pela"), "pel" );
	deepEqual( Stem("pelada"), "pel" );
	deepEqual( Stem("peladas"), "pel" );
	deepEqual( Stem("peladões"), "peladõ" );
	deepEqual( Stem("pelados"), "pel" );
	deepEqual( Stem("pelas"), "pel" );
	deepEqual( Stem("pele"), "pel" );
	deepEqual( Stem("pelé"), "pel" );
	deepEqual( Stem("pelegrini"), "pelegrin" );
	deepEqual( Stem("peleja"), "pelej" );
	deepEqual( Stem("peles"), "pel" );
	deepEqual( Stem("pelo"), "pel" );
	deepEqual( Stem("pelô"), "pelô" );
	deepEqual( Stem("pelos"), "pel" );
	deepEqual( Stem("pêlos"), "pêl" );
	deepEqual( Stem("pelota"), "pelot" );
	deepEqual( Stem("pelotão"), "pelotã" );
	deepEqual( Stem("pelúcio"), "pelúci" );
	deepEqual( Stem("peluda"), "pelud" );
	deepEqual( Stem("peludo"), "pelud" );
	deepEqual( Stem("peluso"), "pelus" );
	deepEqual( Stem("pélvicas"), "pélvic" );
	deepEqual( Stem("pélvis"), "pélv" );
	deepEqual( Stem("pena"), "pen" );
	deepEqual( Stem("peña"), "peñ" );
	deepEqual( Stem("penada"), "pen" );
	deepEqual( Stem("penal"), "penal" );
	deepEqual( Stem("penalizado"), "penaliz" );
	deepEqual( Stem("penas"), "pen" );
	deepEqual( Stem("penavam"), "pen" );
	deepEqual( Stem("penca"), "penc" );
	deepEqual( Stem("pendendo"), "pend" );
	deepEqual( Stem("pendenga"), "pendeng" );
	deepEqual( Stem("pendentes"), "pendent" );
	deepEqual( Stem("pender"), "pend" );
	deepEqual( Stem("pêndulo"), "pêndul" );
	deepEqual( Stem("pendurada"), "pendur" );
	deepEqual( Stem("penduradas"), "pendur" );
	deepEqual( Stem("pendurado"), "pendur" );
	deepEqual( Stem("penduricalhos"), "penduricalh" );
	deepEqual( Stem("peneira"), "peneir" );
	deepEqual( Stem("penetra"), "penetr" );
	deepEqual( Stem("penetrar"), "penetr" );
	deepEqual( Stem("penetraram"), "penetr" );
	deepEqual( Stem("penha"), "penh" );
	deepEqual( Stem("penhasco"), "penhasc" );
	deepEqual( Stem("penhascos"), "penhasc" );
	deepEqual( Stem("penhora"), "penhor" );
	deepEqual( Stem("península"), "penínsul" );
	deepEqual( Stem("peninsulares"), "peninsul" );
	deepEqual( Stem("pênis"), "pên" );
	deepEqual( Stem("penitenciária"), "penitenciár" );
	deepEqual( Stem("penitenciárias"), "penitenciár" );
	deepEqual( Stem("penitenciário"), "penitenciári" );
	deepEqual( Stem("penou"), "pen" );
	deepEqual( Stem("penrose"), "penros" );
	deepEqual( Stem("pensa"), "pens" );
	deepEqual( Stem("pensadas"), "pens" );
	deepEqual( Stem("pensado"), "pens" );
	deepEqual( Stem("pensador"), "pensador" );
	deepEqual( Stem("pensadores"), "pensador" );
	deepEqual( Stem("pensam"), "pens" );
	deepEqual( Stem("pensamento"), "pensament" );
	deepEqual( Stem("pensamentos"), "pensament" );
	deepEqual( Stem("pensamos"), "pens" );
	deepEqual( Stem("pensando"), "pens" );
	deepEqual( Stem("pensão"), "pensã" );
	deepEqual( Stem("pensar"), "pens" );
	deepEqual( Stem("pensara"), "pens" );
	deepEqual( Stem("pensaram"), "pens" );
	deepEqual( Stem("pensarmos"), "pens" );
	deepEqual( Stem("pensas"), "pens" );
	deepEqual( Stem("pensasse"), "pens" );
	deepEqual( Stem("pensava"), "pens" );
	deepEqual( Stem("pensavam"), "pens" );
	deepEqual( Stem("pense"), "pens" );
	deepEqual( Stem("pensei"), "pens" );
	deepEqual( Stem("pensem"), "pens" );
	deepEqual( Stem("pensilvânia"), "pensilvân" );
	deepEqual( Stem("penso"), "pens" );
	deepEqual( Stem("pensões"), "pensõ" );
	deepEqual( Stem("pensou"), "pens" );
	deepEqual( Stem("penta"), "pent" );
	deepEqual( Stem("pentágono"), "pentágon" );
	deepEqual( Stem("pente"), "pent" );
	deepEqual( Stem("penteado"), "pent" );
	deepEqual( Stem("pentecostais"), "pentecost" );
	deepEqual( Stem("pentecostal"), "pentecostal" );
	deepEqual( Stem("pentecoste"), "pentecost" );
	deepEqual( Stem("penthouse"), "penthous" );
	deepEqual( Stem("pentium"), "pentium" );
	deepEqual( Stem("penúltima"), "penúltim" );
	deepEqual( Stem("penúria"), "penúr" );
	deepEqual( Stem("pepe"), "pep" );
	deepEqual( Stem("pepebista"), "pepeb" );
	deepEqual( Stem("pepino"), "pepin" );
	deepEqual( Stem("pepito"), "pepit" );
	deepEqual( Stem("pepsi"), "peps" );
	deepEqual( Stem("pepsico"), "pepsic" );
	deepEqual( Stem("pequena"), "pequen" );
	deepEqual( Stem("pequenas"), "pequen" );
	deepEqual( Stem("pequenininha"), "pequenininh" );
	deepEqual( Stem("pequenininho"), "pequenininh" );
	deepEqual( Stem("pequeninos"), "pequenin" );
	deepEqual( Stem("pequeno"), "pequen" );
	deepEqual( Stem("pequenos"), "pequen" );
	deepEqual( Stem("pequim"), "pequim" );
	deepEqual( Stem("per"), "per" );
	deepEqual( Stem("pêra"), "pêr" );
	deepEqual( Stem("peracchi"), "peracch" );
	deepEqual( Stem("peraí"), "pera" );
	deepEqual( Stem("peraltas"), "peralt" );
	deepEqual( Stem("peralteia"), "peralt" );
	deepEqual( Stem("peraltice"), "peraltic" );
	deepEqual( Stem("perambulando"), "perambul" );
	deepEqual( Stem("perante"), "perant" );
	deepEqual( Stem("perca"), "perc" );
	deepEqual( Stem("percam"), "perc" );
	deepEqual( Stem("perceba"), "perceb" );
	deepEqual( Stem("percebe"), "perceb" );
	deepEqual( Stem("percebem"), "perceb" );
	deepEqual( Stem("percebemos"), "perceb" );
	deepEqual( Stem("percebendo"), "perceb" );
	deepEqual( Stem("perceber"), "perceb" );
	deepEqual( Stem("percebera"), "perceb" );
	deepEqual( Stem("perceberá"), "perceb" );
	deepEqual( Stem("perceberam"), "perceb" );
	deepEqual( Stem("perceberem"), "perceb" );
	deepEqual( Stem("percebesse"), "perceb" );
	deepEqual( Stem("percebeu"), "perceb" );
	deepEqual( Stem("percebi"), "perceb" );
	deepEqual( Stem("percebia"), "perceb" );
	deepEqual( Stem("percebido"), "perceb" );
	deepEqual( Stem("percebo"), "perceb" );
	deepEqual( Stem("percentuais"), "percentu" );
	deepEqual( Stem("percentual"), "percentual" );
	deepEqual( Stem("percepção"), "percepçã" );
	deepEqual( Stem("perco"), "perc" );
	deepEqual( Stem("percorre"), "percorr" );
	deepEqual( Stem("percorrem"), "percorr" );
	deepEqual( Stem("percorrendo"), "percorr" );
	deepEqual( Stem("percorrer"), "percorr" );
	deepEqual( Stem("percorrerá"), "percorr" );
	deepEqual( Stem("percorreu"), "percorr" );
	deepEqual( Stem("percorria"), "percorr" );
	deepEqual( Stem("percorrida"), "percorr" );
	deepEqual( Stem("percurso"), "percurs" );
	deepEqual( Stem("percussão"), "percussã" );
	deepEqual( Stem("percussionista"), "percussion" );
	deepEqual( Stem("perda"), "perd" );
	deepEqual( Stem("perdão"), "perdã" );
	deepEqual( Stem("perdas"), "perd" );
	deepEqual( Stem("perde"), "perd" );
	deepEqual( Stem("perdedor"), "perdedor" );
	deepEqual( Stem("perdem"), "perd" );
	deepEqual( Stem("perdemos"), "perd" );
	deepEqual( Stem("perdendo"), "perd" );
	deepEqual( Stem("perder"), "perd" );
	deepEqual( Stem("perdera"), "perd" );
	deepEqual( Stem("perderá"), "perd" );
	deepEqual( Stem("perderam"), "perd" );
	deepEqual( Stem("perderia"), "perd" );
	deepEqual( Stem("perdermos"), "perd" );
	deepEqual( Stem("perdesse"), "perd" );
	deepEqual( Stem("perdeu"), "perd" );
	deepEqual( Stem("perdi"), "perd" );
	deepEqual( Stem("perdia"), "perd" );
	deepEqual( Stem("perdida"), "perd" );
	deepEqual( Stem("perdidas"), "perd" );
	deepEqual( Stem("perdido"), "perd" );
	deepEqual( Stem("perdidos"), "perd" );
	deepEqual( Stem("perdigão"), "perdigã" );
	deepEqual( Stem("perdizes"), "perdiz" );
	deepEqual( Stem("perdoá"), "perdo" );
	deepEqual( Stem("perdoar"), "perdo" );
	deepEqual( Stem("perdoaria"), "perdo" );
	deepEqual( Stem("perdoava"), "perdo" );
	deepEqual( Stem("perdoei"), "perdo" );
	deepEqual( Stem("perdoem"), "perdo" );
	deepEqual( Stem("perdoou"), "perdo" );
	deepEqual( Stem("perdulários"), "perdulári" );
	deepEqual( Stem("perdura"), "perdur" );
	deepEqual( Stem("perdure"), "perdur" );
	deepEqual( Stem("perecíveis"), "perecív" );
	deepEqual( Stem("peregrinação"), "peregrin" );
	deepEqual( Stem("peregrinações"), "peregrin" );
	deepEqual( Stem("peregrinam"), "peregrin" );
	deepEqual( Stem("peregrinos"), "peregrin" );
	deepEqual( Stem("pereio"), "perei" );
	deepEqual( Stem("pereira"), "pereir" );
	deepEqual( Stem("pereiras"), "pereir" );
	deepEqual( Stem("peremptoriamente"), "peremptori" );
	deepEqual( Stem("peres"), "per" );
	deepEqual( Stem("pereyra"), "pereyr" );
	deepEqual( Stem("perez"), "perez" );
	deepEqual( Stem("perfeccionista"), "perfeccion" );
	deepEqual( Stem("perfeição"), "perfeiçã" );
	deepEqual( Stem("perfeições"), "perfeiçõ" );
	deepEqual( Stem("perfeita"), "perfeit" );
	deepEqual( Stem("perfeitamente"), "perfeit" );
	deepEqual( Stem("perfeito"), "perfeit" );
	deepEqual( Stem("perfeitos"), "perfeit" );
	deepEqual( Stem("perfil"), "perfil" );
	deepEqual( Stem("perforatum"), "perforatum" );
	deepEqual( Stem("performance"), "performanc" );
	deepEqual( Stem("performances"), "performanc" );
	deepEqual( Stem("performer"), "perform" );
	deepEqual( Stem("perfumado"), "perfum" );
	deepEqual( Stem("perfumaria"), "perfum" );
	deepEqual( Stem("perfume"), "perfum" );
	deepEqual( Stem("perfumes"), "perfum" );
	deepEqual( Stem("perfuradora"), "perfur" );
	deepEqual( Stem("perfurou"), "perfur" );
	deepEqual( Stem("pergunta"), "pergunt" );
	deepEqual( Stem("perguntado"), "pergunt" );
	deepEqual( Stem("perguntam"), "pergunt" );
	deepEqual( Stem("perguntando"), "pergunt" );
	deepEqual( Stem("perguntar"), "pergunt" );
	deepEqual( Stem("perguntaram"), "pergunt" );
	deepEqual( Stem("perguntarem"), "pergunt" );
	deepEqual( Stem("perguntaria"), "pergunt" );
	deepEqual( Stem("perguntas"), "pergunt" );
	deepEqual( Stem("perguntasse"), "pergunt" );
	deepEqual( Stem("perguntava"), "pergunt" );
	deepEqual( Stem("pergunte"), "pergunt" );
	deepEqual( Stem("perguntei"), "pergunt" );
	deepEqual( Stem("pergunto"), "pergunt" );
	deepEqual( Stem("perguntou"), "pergunt" );
	deepEqual( Stem("péri"), "pér" );
	deepEqual( Stem("periandro"), "periandr" );
	deepEqual( Stem("perícia"), "períc" );
	deepEqual( Stem("periciais"), "peric" );
	deepEqual( Stem("perícias"), "períc" );
	deepEqual( Stem("periciou"), "peric" );
	deepEqual( Stem("perico"), "peric" );
	deepEqual( Stem("periculosidade"), "periculos" );
	deepEqual( Stem("periferia"), "perif" );
	deepEqual( Stem("periférica"), "perifér" );
	deepEqual( Stem("perigo"), "perig" );
	deepEqual( Stem("perigos"), "perig" );
	deepEqual( Stem("perigosa"), "perig" );
	deepEqual( Stem("perigosamente"), "perig" );
	deepEqual( Stem("perigosas"), "perig" );
	deepEqual( Stem("perigosíssima"), "perigosíssim" );
	deepEqual( Stem("perigoso"), "perig" );
	deepEqual( Stem("perigosos"), "perig" );
	deepEqual( Stem("perímetro"), "perímetr" );
	deepEqual( Stem("perinatal"), "perinatal" );
	deepEqual( Stem("periodicamente"), "period" );
	deepEqual( Stem("período"), "períod" );
	deepEqual( Stem("períodos"), "períod" );
	deepEqual( Stem("peripécias"), "peripéc" );
	deepEqual( Stem("périplo"), "péripl" );
	deepEqual( Stem("periquita"), "periquit" );
	deepEqual( Stem("perispírito"), "perispírit" );
	deepEqual( Stem("perissé"), "periss" );
	deepEqual( Stem("perito"), "perit" );
	deepEqual( Stem("peritos"), "perit" );
	deepEqual( Stem("perkons"), "perkons" );
	deepEqual( Stem("perla"), "perl" );
	deepEqual( Stem("perles"), "perl" );
	deepEqual( Stem("permaneça"), "permanec" );
	deepEqual( Stem("permaneçam"), "permanec" );
	deepEqual( Stem("permanece"), "permanec" );
	deepEqual( Stem("permanecem"), "permanec" );
	deepEqual( Stem("permanecendo"), "permanec" );
	deepEqual( Stem("permanecer"), "permanec" );
	deepEqual( Stem("permanecerá"), "permanec" );
	deepEqual( Stem("permaneceram"), "permanec" );
	deepEqual( Stem("permanecerão"), "permanec" );
	deepEqual( Stem("permanecessem"), "permanec" );
	deepEqual( Stem("permaneceu"), "permanec" );
	deepEqual( Stem("permanecia"), "permanec" );
	deepEqual( Stem("permanecido"), "permanec" );
	deepEqual( Stem("permanência"), "permanent" );
	deepEqual( Stem("permanente"), "permanent" );
	deepEqual( Stem("permanentemente"), "permanent" );
	deepEqual( Stem("permanentes"), "permanent" );
	deepEqual( Stem("permeada"), "perm" );
	deepEqual( Stem("permeável"), "permeável" );
	deepEqual( Stem("permissão"), "permissã" );
	deepEqual( Stem("permissiva"), "permiss" );
	deepEqual( Stem("permissividade"), "permiss" );
	deepEqual( Stem("permite"), "permit" );
	deepEqual( Stem("permitem"), "permit" );
	deepEqual( Stem("permitia"), "permit" );
	deepEqual( Stem("permitida"), "permit" );
	deepEqual( Stem("permitido"), "permit" );
	deepEqual( Stem("permitidos"), "permit" );
	deepEqual( Stem("permitimos"), "permit" );
	deepEqual( Stem("permitindo"), "permit" );
	deepEqual( Stem("permitir"), "permit" );
	deepEqual( Stem("permitirá"), "permit" );
	deepEqual( Stem("permitiram"), "permit" );
	deepEqual( Stem("permitiria"), "permit" );
	deepEqual( Stem("permitissem"), "permit" );
	deepEqual( Stem("permitiu"), "permit" );
	deepEqual( Stem("permito"), "permit" );
	deepEqual( Stem("perna"), "pern" );
	deepEqual( Stem("pernambucana"), "pernambucan" );
	deepEqual( Stem("pernambucano"), "pernambucan" );
	deepEqual( Stem("pernambucanos"), "pernambucan" );
	deepEqual( Stem("pernambuco"), "pernambuc" );
	deepEqual( Stem("pernas"), "pern" );
	deepEqual( Stem("pernoitara"), "pernoit" );
	deepEqual( Stem("pernoite"), "pernoit" );
	deepEqual( Stem("pernudo"), "pernud" );
	deepEqual( Stem("pêro"), "pêr" );
	deepEqual( Stem("pérola"), "pérol" );
	deepEqual( Stem("pérolas"), "pérol" );
	deepEqual( Stem("perônio"), "perôni" );
	deepEqual( Stem("perpetua"), "perpetu" );
	deepEqual( Stem("perpétua"), "perpétu" );
	deepEqual( Stem("perpetuam"), "perpetu" );
	deepEqual( Stem("perpetuamente"), "perpetu" );
	deepEqual( Stem("perpetuando"), "perpetu" );
	deepEqual( Stem("perpetuar"), "perpetu" );
	deepEqual( Stem("perpetuasse"), "perpetu" );
	deepEqual( Stem("perpétuo"), "perpétu" );
	deepEqual( Stem("perpetuou"), "perpetu" );
	deepEqual( Stem("perplexa"), "perplex" );
	deepEqual( Stem("perplexidade"), "perplex" );
	deepEqual( Stem("perplexo"), "perplex" );
	deepEqual( Stem("perplexos"), "perplex" );
	deepEqual( Stem("perrier"), "perri" );
	deepEqual( Stem("perrin"), "perrin" );
	deepEqual( Stem("perry"), "perry" );
	deepEqual( Stem("perseguem"), "persegu" );
	deepEqual( Stem("persegui"), "persegu" );
	deepEqual( Stem("perseguia"), "persegu" );
	deepEqual( Stem("perseguição"), "perseguiçã" );
	deepEqual( Stem("perseguições"), "perseguiçõ" );
	deepEqual( Stem("perseguida"), "persegu" );
	deepEqual( Stem("perseguido"), "persegu" );
	deepEqual( Stem("perseguidor"), "perseguidor" );
	deepEqual( Stem("perseguidos"), "persegu" );
	deepEqual( Stem("perseguir"), "persegu" );
	deepEqual( Stem("perseguiu"), "persegu" );
	deepEqual( Stem("perseverante"), "persever" );
	deepEqual( Stem("pérsio"), "pérsi" );
	deepEqual( Stem("persiste"), "pers" );
	deepEqual( Stem("persistem"), "persist" );
	deepEqual( Stem("persistência"), "persistent" );
	deepEqual( Stem("persistente"), "persistent" );
	deepEqual( Stem("persistentes"), "persistent" );
	deepEqual( Stem("persistiu"), "persist" );
	deepEqual( Stem("persona"), "person" );
	deepEqual( Stem("personagem"), "personag" );
	deepEqual( Stem("personagens"), "personagens" );
	deepEqual( Stem("personal"), "personal" );
	deepEqual( Stem("personalidade"), "personal" );
	deepEqual( Stem("personalidades"), "personal" );
	deepEqual( Stem("personalizada"), "personaliz" );
	deepEqual( Stem("personalizado"), "personaliz" );
	deepEqual( Stem("personalizar"), "personaliz" );
	deepEqual( Stem("personificação"), "personific" );
	deepEqual( Stem("personificada"), "personific" );
	deepEqual( Stem("perspectiva"), "perspect" );
	deepEqual( Stem("perspectivas"), "perspect" );
	deepEqual( Stem("perspicazes"), "perspicaz" );
	deepEqual( Stem("persuasão"), "persuasã" );
	deepEqual( Stem("pertence"), "pertenc" );
	deepEqual( Stem("pertencem"), "pertenc" );
	deepEqual( Stem("pertencemos"), "pertenc" );
	deepEqual( Stem("pertencente"), "pertencent" );
	deepEqual( Stem("pertencentes"), "pertencent" );
	deepEqual( Stem("pertencer"), "pertenc" );
	deepEqual( Stem("pertencera"), "pertenc" );
	deepEqual( Stem("pertenceria"), "pertenc" );
	deepEqual( Stem("pertences"), "pertenc" );
	deepEqual( Stem("pertenceu"), "pertenc" );
	deepEqual( Stem("pertenci"), "pertenc" );
	deepEqual( Stem("pertencia"), "pertenc" );
	deepEqual( Stem("pertinência"), "pertinent" );
	deepEqual( Stem("pertinente"), "pertinent" );
	deepEqual( Stem("pertinho"), "pertinh" );
	deepEqual( Stem("perto"), "pert" );
	deepEqual( Stem("perturba"), "perturb" );
	deepEqual( Stem("perturbação"), "perturb" );
	deepEqual( Stem("perturbações"), "perturb" );
	deepEqual( Stem("perturbadora"), "perturb" );
	deepEqual( Stem("perturbando"), "perturb" );
	deepEqual( Stem("perturbar"), "perturb" );
	deepEqual( Stem("perturbavam"), "perturb" );
	deepEqual( Stem("peru"), "peru" );
	deepEqual( Stem("perua"), "peru" );
	deepEqual( Stem("peruana"), "peruan" );
	deepEqual( Stem("peruano"), "peruan" );
	deepEqual( Stem("peruanos"), "peruan" );
	deepEqual( Stem("peruca"), "peruc" );
	deepEqual( Stem("perucas"), "peruc" );
	deepEqual( Stem("perversa"), "pervers" );
	deepEqual( Stem("perverte"), "pervert" );
	deepEqual( Stem("pés"), "pés" );
	deepEqual( Stem("pesa"), "pes" );
	deepEqual( Stem("pesada"), "pes" );
	deepEqual( Stem("pesadamente"), "pesad" );
	deepEqual( Stem("pesadas"), "pes" );
	deepEqual( Stem("pesadelo"), "pesadel" );
	deepEqual( Stem("pesadelos"), "pesadel" );
	deepEqual( Stem("pesadíssima"), "pesadíssim" );
	deepEqual( Stem("pesadíssimas"), "pesadíssim" );
	deepEqual( Stem("pesado"), "pes" );
	deepEqual( Stem("pesados"), "pes" );
	deepEqual( Stem("pesam"), "pes" );
	deepEqual( Stem("pêsames"), "pêsam" );
	deepEqual( Stem("pesamos"), "pes" );
	deepEqual( Stem("pesando"), "pes" );
	deepEqual( Stem("pesar"), "pes" );
	deepEqual( Stem("pesava"), "pes" );
	deepEqual( Stem("pesca"), "pesc" );
	deepEqual( Stem("pescado"), "pesc" );
	deepEqual( Stem("pescador"), "pescador" );
	deepEqual( Stem("pescadores"), "pescador" );
	deepEqual( Stem("pescando"), "pesc" );
	deepEqual( Stem("pescoço"), "pescoc" );
	deepEqual( Stem("peso"), "pes" );
	deepEqual( Stem("pesos"), "pes" );
	deepEqual( Stem("pesou"), "pes" );
	deepEqual( Stem("pespectiva"), "pespect" );
	deepEqual( Stem("pesquisa"), "pesquis" );
	deepEqual( Stem("pesquisadas"), "pesquis" );
	deepEqual( Stem("pesquisado"), "pesquis" );
	deepEqual( Stem("pesquisador"), "pesquis" );
	deepEqual( Stem("pesquisadora"), "pesquis" );
	deepEqual( Stem("pesquisadores"), "pesquis" );
	deepEqual( Stem("pesquisados"), "pesquis" );
	deepEqual( Stem("pesquisam"), "pesquis" );
	deepEqual( Stem("pesquisar"), "pesquis" );
	deepEqual( Stem("pesquisas"), "pesquis" );
	deepEqual( Stem("pesquisou"), "pesquis" );
	deepEqual( Stem("pessanha"), "pessanh" );
	deepEqual( Stem("pêssego"), "pêsseg" );
	deepEqual( Stem("pessi"), "pess" );
	deepEqual( Stem("péssima"), "péssim" );
	deepEqual( Stem("pessimismo"), "pessim" );
	deepEqual( Stem("pessimista"), "pessim" );
	deepEqual( Stem("pessimistas"), "pessim" );
	deepEqual( Stem("péssimo"), "péssim" );
	deepEqual( Stem("pessoa"), "pesso" );
	deepEqual( Stem("pessoais"), "pesso" );
	deepEqual( Stem("pessoal"), "pessoal" );
	deepEqual( Stem("pessoalmente"), "pessoal" );
	deepEqual( Stem("pessoas"), "pesso" );
	deepEqual( Stem("peste"), "pest" );
	deepEqual( Stem("pestes"), "pest" );
	deepEqual( Stem("pet"), "pet" );
	deepEqual( Stem("petardo"), "petard" );
	deepEqual( Stem("pete"), "pet" );
	deepEqual( Stem("peter"), "pet" );
	deepEqual( Stem("peters"), "peters" );
	deepEqual( Stem("petição"), "petiçã" );
	deepEqual( Stem("petista"), "petist" );
	deepEqual( Stem("petistas"), "petist" );
	deepEqual( Stem("petit"), "petit" );
	deepEqual( Stem("petrobras"), "petrobr" );
	deepEqual( Stem("petrobrás"), "petrobrás" );
	deepEqual( Stem("petroleiros"), "petroleir" );
	deepEqual( Stem("petróleo"), "petról" );
	deepEqual( Stem("petrolina"), "petrolin" );
	deepEqual( Stem("petroni"), "petron" );
	deepEqual( Stem("petrônio"), "petrôni" );
	deepEqual( Stem("petrópolis"), "petrópol" );
	deepEqual( Stem("petros"), "petr" );
	deepEqual( Stem("peugeot"), "peugeot" );
	deepEqual( Stem("pezinho"), "pezinh" );
	deepEqual( Stem("pf"), "pf" );
	deepEqual( Stem("pfl"), "pfl" );
	deepEqual( Stem("pgo"), "pgo" );
	deepEqual( Stem("ph"), "ph" );
	deepEqual( Stem("phanos"), "phan" );
	deepEqual( Stem("philip"), "philip" );
	deepEqual( Stem("philippe"), "philipp" );
	deepEqual( Stem("philippoussis"), "philippouss" );
	deepEqual( Stem("phone"), "phon" );
	deepEqual( Stem("photo"), "phot" );
	deepEqual( Stem("photoshop"), "photoshop" );
	deepEqual( Stem("physique"), "physiqu" );
	deepEqual( Stem("physus"), "physus" );
	deepEqual( Stem("phytoervas"), "phytoerv" );
	deepEqual( Stem("pia"), "pia" );
	deepEqual( Stem("piacentini"), "piacentin" );
	deepEqual( Stem("piada"), "piad" );
	deepEqual( Stem("piadas"), "piad" );
	deepEqual( Stem("piadinhas"), "piadinh" );
	deepEqual( Stem("piagetiano"), "piagetian" );
	deepEqual( Stem("piamente"), "piament" );
	deepEqual( Stem("piano"), "pian" );
	deepEqual( Stem("piao"), "pia" );
	deepEqual( Stem("piauí"), "piau" );
	deepEqual( Stem("piazza"), "piazz" );
	deepEqual( Stem("pib"), "pib" );
	deepEqual( Stem("pic"), "pic" );
	deepEqual( Stem("picada"), "pic" );
	deepEqual( Stem("picadinha"), "picadinh" );
	deepEqual( Stem("picadinho"), "picadinh" );
	deepEqual( Stem("picado"), "pic" );
	deepEqual( Stem("picados"), "pic" );
	deepEqual( Stem("picanha"), "picanh" );
	deepEqual( Stem("picantes"), "picant" );
	deepEqual( Stem("picão"), "picã" );
	deepEqual( Stem("picardia"), "picard" );
	deepEqual( Stem("picareta"), "picaret" );
	deepEqual( Stem("picaretas"), "picaret" );
	deepEqual( Stem("pichações"), "pichaçõ" );
	deepEqual( Stem("pichador"), "pichador" );
	deepEqual( Stem("pick"), "pick" );
	deepEqual( Stem("pico"), "pic" );
	deepEqual( Stem("picolés"), "picolés" );
	deepEqual( Stem("picos"), "pic" );
	deepEqual( Stem("picotada"), "picot" );
	deepEqual( Stem("picotando"), "picot" );
	deepEqual( Stem("picote"), "picot" );
	deepEqual( Stem("picuinha"), "picuinh" );
	deepEqual( Stem("pie"), "pie" );
	deepEqual( Stem("piedade"), "piedad" );
	deepEqual( Stem("pieguice"), "pieguic" );
	deepEqual( Stem("pier"), "pier" );
	deepEqual( Stem("pierre"), "pierr" );
	deepEqual( Stem("pierro"), "pierr" );
	deepEqual( Stem("pietralata"), "pietralat" );
	deepEqual( Stem("pif"), "pif" );
	deepEqual( Stem("pifado"), "pif" );
	deepEqual( Stem("pífio"), "pífi" );
	deepEqual( Stem("pigarro"), "pigarr" );
	deepEqual( Stem("pigmentos"), "pigment" );
	deepEqual( Stem("pijama"), "pijam" );
	deepEqual( Stem("pike"), "pik" );
	deepEqual( Stem("pilares"), "pil" );
	deepEqual( Stem("pilatos"), "pilat" );
	deepEqual( Stem("pilha"), "pilh" );
	deepEqual( Stem("pilhando"), "pilh" );
	deepEqual( Stem("pilhas"), "pilh" );
	deepEqual( Stem("pillar"), "pill" );
	deepEqual( Stem("pilota"), "pilot" );
	deepEqual( Stem("pilotando"), "pilot" );
	deepEqual( Stem("pilotar"), "pilot" );
	deepEqual( Stem("pilotava"), "pilot" );
	deepEqual( Stem("piloto"), "pilot" );
	deepEqual( Stem("pilotos"), "pilot" );
	deepEqual( Stem("pilotou"), "pilot" );
	deepEqual( Stem("pílula"), "pílul" );
	deepEqual( Stem("pílulas"), "pílul" );
	deepEqual( Stem("pimenta"), "piment" );
	deepEqual( Stem("pimentaa"), "pimenta" );
	deepEqual( Stem("pimentel"), "pimentel" );
	deepEqual( Stem("pimpolhos"), "pimpolh" );
	deepEqual( Stem("pinça"), "pinc" );
	deepEqual( Stem("píncaros"), "píncar" );
	deepEqual( Stem("pinças"), "pinc" );
	deepEqual( Stem("pincéis"), "pinc" );
	deepEqual( Stem("ping"), "ping" );
	deepEqual( Stem("pinga"), "ping" );
	deepEqual( Stem("pingado"), "ping" );
	deepEqual( Stem("pingo"), "ping" );
	deepEqual( Stem("pingüins"), "pingüins" );
	deepEqual( Stem("pinhais"), "pinh" );
	deepEqual( Stem("pinheiro"), "pinheir" );
	deepEqual( Stem("pinheiros"), "pinheir" );
	deepEqual( Stem("pinot"), "pinot" );
	deepEqual( Stem("pinotti"), "pinott" );
	deepEqual( Stem("pinta"), "pint" );
	deepEqual( Stem("pintá"), "pint" );
	deepEqual( Stem("pintar"), "pint" );
	deepEqual( Stem("pinter"), "pint" );
	deepEqual( Stem("pinto"), "pint" );
	deepEqual( Stem("pintor"), "pintor" );
	deepEqual( Stem("pintora"), "pintor" );
	deepEqual( Stem("pintores"), "pintor" );
	deepEqual( Stem("pintou"), "pint" );
	deepEqual( Stem("pintura"), "pintur" );
	deepEqual( Stem("pinturas"), "pintur" );
	deepEqual( Stem("pio"), "pio" );
	deepEqual( Stem("piolho"), "piolh" );
	deepEqual( Stem("piolhos"), "piolh" );
	deepEqual( Stem("pioneiras"), "pioneir" );
	deepEqual( Stem("pioneiro"), "pioneir" );
	deepEqual( Stem("pioneiros"), "pioneir" );
	deepEqual( Stem("pior"), "pior" );
	deepEqual( Stem("piorando"), "pior" );
	deepEqual( Stem("piorar"), "pior" );
	deepEqual( Stem("pioraram"), "pior" );
	deepEqual( Stem("piores"), "pior" );
	deepEqual( Stem("piorou"), "pior" );
	deepEqual( Stem("pipa"), "pip" );
	deepEqual( Stem("pipas"), "pip" );
	deepEqual( Stem("pipes"), "pip" );
	deepEqual( Stem("pipoca"), "pipoc" );
	deepEqual( Stem("pipocando"), "pipoc" );
	deepEqual( Stem("pipocar"), "pipoc" );
	deepEqual( Stem("pique"), "piqu" );
	deepEqual( Stem("piquenique"), "piqueniqu" );
	deepEqual( Stem("piração"), "piraçã" );
	deepEqual( Stem("piracema"), "piracem" );
	deepEqual( Stem("piraí"), "pira" );
	deepEqual( Stem("pirajussara"), "pirajuss" );
	deepEqual( Stem("pirâmide"), "pirâmid" );
	deepEqual( Stem("piranha"), "piranh" );
	deepEqual( Stem("pirapora"), "pirapor" );
	deepEqual( Stem("pirata"), "pirat" );
	deepEqual( Stem("pirataria"), "pirat" );
	deepEqual( Stem("piratas"), "pirat" );
	deepEqual( Stem("pires"), "pir" );
	deepEqual( Stem("pirralhos"), "pirralh" );
	deepEqual( Stem("piruetas"), "piruet" );
	deepEqual( Stem("pis"), "pis" );
	deepEqual( Stem("pisados"), "pis" );
	deepEqual( Stem("pisando"), "pis" );
	deepEqual( Stem("pisar"), "pis" );
	deepEqual( Stem("pisarão"), "pis" );
	deepEqual( Stem("piscar"), "pisc" );
	deepEqual( Stem("piscaram"), "pisc" );
	deepEqual( Stem("piscina"), "piscin" );
	deepEqual( Stem("piscinas"), "piscin" );
	deepEqual( Stem("piso"), "pis" );
	deepEqual( Stem("pisos"), "pis" );
	deepEqual( Stem("pisoteado"), "pisot" );
	deepEqual( Stem("pisoteiem"), "pisotei" );
	deepEqual( Stem("pista"), "pist" );
	deepEqual( Stem("pistas"), "pist" );
	deepEqual( Stem("pistola"), "pistol" );
	deepEqual( Stem("pistolas"), "pistol" );
	deepEqual( Stem("pistolinha"), "pistolinh" );
	deepEqual( Stem("pistolões"), "pistolõ" );
	deepEqual( Stem("pistols"), "pistols" );
	deepEqual( Stem("pitada"), "pit" );
	deepEqual( Stem("pitanguy"), "pitanguy" );
	deepEqual( Stem("pitoresca"), "pitoresc" );
	deepEqual( Stem("pitoresco"), "pitoresc" );
	deepEqual( Stem("pitorescos"), "pitoresc" );
	deepEqual( Stem("pitta"), "pitt" );
	deepEqual( Stem("pittman"), "pittman" );
	deepEqual( Stem("pittomba"), "pittomb" );
	deepEqual( Stem("piva"), "piv" );
	deepEqual( Stem("pivô"), "pivô" );
	deepEqual( Stem("pixinguinha"), "pixinguinh" );
	deepEqual( Stem("pizza"), "pizz" );
	deepEqual( Stem("pizzarela"), "pizzarel" );
	deepEqual( Stem("pizzaria"), "pizz" );
	deepEqual( Stem("pizzarias"), "pizz" );
	deepEqual( Stem("pizzas"), "pizz" );
	deepEqual( Stem("placa"), "plac" );
	deepEqual( Stem("placas"), "plac" );
	deepEqual( Stem("place"), "plac" );
	deepEqual( Stem("placebo"), "placeb" );
	deepEqual( Stem("plácida"), "plác" );
	deepEqual( Stem("plagas"), "plag" );
	deepEqual( Stem("planafloro"), "planaflor" );
	deepEqual( Stem("planalto"), "planalt" );
	deepEqual( Stem("planeja"), "planej" );
	deepEqual( Stem("planejada"), "planej" );
	deepEqual( Stem("planejadas"), "planej" );
	deepEqual( Stem("planejado"), "planej" );
	deepEqual( Stem("planejam"), "planej" );
	deepEqual( Stem("planejamento"), "planej" );
	deepEqual( Stem("planejando"), "planej" );
	deepEqual( Stem("planejar"), "planej" );
	deepEqual( Stem("planejava"), "planej" );
	deepEqual( Stem("planejo"), "planej" );
	deepEqual( Stem("planejou"), "planej" );
	deepEqual( Stem("planet"), "planet" );
	deepEqual( Stem("planeta"), "planet" );
	deepEqual( Stem("planetária"), "planetár" );
	deepEqual( Stem("planetário"), "planetári" );
	deepEqual( Stem("planetas"), "planet" );
	deepEqual( Stem("planilha"), "planilh" );
	deepEqual( Stem("plano"), "plan" );
	deepEqual( Stem("planos"), "plan" );
	deepEqual( Stem("planta"), "plant" );
	deepEqual( Stem("plantação"), "plantaçã" );
	deepEqual( Stem("plantações"), "plantaçõ" );
	deepEqual( Stem("plantada"), "plant" );
	deepEqual( Stem("plantado"), "plant" );
	deepEqual( Stem("plantadora"), "plantador" );
	deepEqual( Stem("plantam"), "plant" );
	deepEqual( Stem("plantando"), "plant" );
	deepEqual( Stem("plantão"), "plantã" );
	deepEqual( Stem("plantar"), "plant" );
	deepEqual( Stem("plantas"), "plant" );
	deepEqual( Stem("plantava"), "plant" );
	deepEqual( Stem("plantel"), "plantel" );
	deepEqual( Stem("plantificado"), "plantific" );
	deepEqual( Stem("plantio"), "planti" );
	deepEqual( Stem("plantou"), "plant" );
	deepEqual( Stem("planura"), "planur" );
	deepEqual( Stem("plaquetas"), "plaquet" );
	deepEqual( Stem("plástica"), "plástic" );
	deepEqual( Stem("plasticamente"), "plastic" );
	deepEqual( Stem("plásticas"), "plástic" );
	deepEqual( Stem("plasticidade"), "plastic" );
	deepEqual( Stem("plástico"), "plástic" );
	deepEqual( Stem("plásticos"), "plástic" );
	deepEqual( Stem("plastificada"), "plastific" );
	deepEqual( Stem("plataforma"), "plataform" );
	deepEqual( Stem("platéia"), "plat" );
	deepEqual( Stem("platéias"), "plat" );
	deepEqual( Stem("platina"), "platin" );
	deepEqual( Stem("platinada"), "platin" );
	deepEqual( Stem("plausível"), "plausível" );
	deepEqual( Stem("playboy"), "playboy" );
	deepEqual( Stem("playground"), "playground" );
	deepEqual( Stem("playmobil"), "playmobil" );
	deepEqual( Stem("plaza"), "plaz" );
	deepEqual( Stem("plebéia"), "pleb" );
	deepEqual( Stem("plebiscito"), "plebiscit" );
	deepEqual( Stem("pleiteante"), "pleiteant" );
	deepEqual( Stem("pleitear"), "pleit" );
	deepEqual( Stem("pleiteavam"), "pleit" );
	deepEqual( Stem("pleiteiam"), "pleit" );
	deepEqual( Stem("pleito"), "pleit" );
	deepEqual( Stem("plena"), "plen" );
	deepEqual( Stem("plenamente"), "plen" );
	deepEqual( Stem("plenário"), "plenári" );
	deepEqual( Stem("pleno"), "plen" );
	deepEqual( Stem("plenos"), "plen" );
	deepEqual( Stem("plínio"), "plíni" );
	deepEqual( Stem("pliométrica"), "pliométr" );
	deepEqual( Stem("plissada"), "pliss" );
	deepEqual( Stem("plissado"), "pliss" );
	deepEqual( Stem("plugadas"), "plug" );
	deepEqual( Stem("plugados"), "plug" );
	deepEqual( Stem("plugaram"), "plug" );
	deepEqual( Stem("plumas"), "plum" );
	deepEqual( Stem("plural"), "plural" );
	deepEqual( Stem("pluriétnico"), "pluriétn" );
	deepEqual( Stem("plus"), "plus" );
	deepEqual( Stem("plush"), "plush" );
	deepEqual( Stem("pm"), "pm" );
	deepEqual( Stem("pmdb"), "pmdb" );
	deepEqual( Stem("pms"), "pms" );
	deepEqual( Stem("pneu"), "pneu" );
	deepEqual( Stem("pneumologista"), "pneumolog" );
	deepEqual( Stem("pneumonia"), "pneumon" );
	deepEqual( Stem("pneus"), "pneus" );
	deepEqual( Stem("pneuzinhos"), "pneuzinh" );
	deepEqual( Stem("pó"), "pó" );
	deepEqual( Stem("pô"), "pô" );
	deepEqual( Stem("pobre"), "pobr" );
	deepEqual( Stem("pobres"), "pobr" );
	deepEqual( Stem("pobreza"), "pobrez" );
	deepEqual( Stem("poção"), "poçã" );
	deepEqual( Stem("pochê"), "poch" );
	deepEqual( Stem("poço"), "poc" );
	deepEqual( Stem("poções"), "poçõ" );
	deepEqual( Stem("poconé"), "pocon" );
	deepEqual( Stem("pode"), "pod" );
	deepEqual( Stem("pôde"), "pôd" );
	deepEqual( Stem("podem"), "pod" );
	deepEqual( Stem("podemos"), "pod" );
	deepEqual( Stem("podendo"), "pod" );
	deepEqual( Stem("poder"), "pod" );
	deepEqual( Stem("poderá"), "pod" );
	deepEqual( Stem("poderão"), "pod" );
	deepEqual( Stem("poderemos"), "pod" );
	deepEqual( Stem("poderes"), "pod" );
	deepEqual( Stem("poderia"), "pod" );
	deepEqual( Stem("poderiam"), "pod" );
	deepEqual( Stem("poderíamos"), "pod" );
	deepEqual( Stem("poderio"), "poderi" );
	deepEqual( Stem("podermos"), "pod" );
	deepEqual( Stem("poderosa"), "poder" );
	deepEqual( Stem("poderosas"), "poder" );
	deepEqual( Stem("poderoso"), "poder" );
	deepEqual( Stem("poderosos"), "poder" );
	deepEqual( Stem("podia"), "pod" );
	deepEqual( Stem("podiam"), "pod" );
	deepEqual( Stem("podíamos"), "pod" );
	deepEqual( Stem("podido"), "pod" );
	deepEqual( Stem("pódio"), "pódi" );
	deepEqual( Stem("podres"), "podr" );
	deepEqual( Stem("poe"), "poe" );
	deepEqual( Stem("põe"), "põ" );
	deepEqual( Stem("poeira"), "poeir" );
	deepEqual( Stem("poeirentas"), "poeirent" );
	deepEqual( Stem("põem"), "põ" );
	deepEqual( Stem("poema"), "poem" );
	deepEqual( Stem("poemas"), "poem" );
	deepEqual( Stem("poème"), "poèm" );
	deepEqual( Stem("poerenta"), "poerent" );
	deepEqual( Stem("poesia"), "poes" );
	deepEqual( Stem("poesias"), "poes" );
	deepEqual( Stem("poeta"), "poet" );
	deepEqual( Stem("poético"), "poétic" );
	deepEqual( Stem("poída"), "poíd" );
	deepEqual( Stem("point"), "point" );
	deepEqual( Stem("points"), "points" );
	deepEqual( Stem("pois"), "pois" );
	deepEqual( Stem("pojuca"), "pojuc" );
	deepEqual( Stem("pol"), "pol" );
	deepEqual( Stem("polar"), "pol" );
	deepEqual( Stem("polarização"), "polariz" );
	deepEqual( Stem("polarizada"), "polariz" );
	deepEqual( Stem("polegar"), "poleg" );
	deepEqual( Stem("polêmica"), "polêm" );
	deepEqual( Stem("polêmicas"), "polêm" );
	deepEqual( Stem("polêmico"), "polêm" );
	deepEqual( Stem("polêmicos"), "polêm" );
	deepEqual( Stem("polemista"), "polem" );
	deepEqual( Stem("polemizar"), "polemiz" );
	deepEqual( Stem("policarpo"), "policarp" );
	deepEqual( Stem("polichinelo"), "polichinel" );
	deepEqual( Stem("policia"), "polic" );
	deepEqual( Stem("polícia"), "políc" );
	deepEqual( Stem("policiais"), "polic" );
	deepEqual( Stem("policial"), "policial" );
	deepEqual( Stem("policiamento"), "polic" );
	deepEqual( Stem("polícias"), "políc" );
	deepEqual( Stem("policístico"), "policíst" );
	deepEqual( Stem("polida"), "pol" );
	deepEqual( Stem("poligâmica"), "poligâm" );
	deepEqual( Stem("poligâmicos"), "poligâm" );
	deepEqual( Stem("polígono"), "polígon" );
	deepEqual( Stem("poliomielite"), "poliomielit" );
	deepEqual( Stem("politécnica"), "politécn" );
	deepEqual( Stem("política"), "polít" );
	deepEqual( Stem("politicamente"), "polit" );
	deepEqual( Stem("políticas"), "polít" );
	deepEqual( Stem("político"), "polít" );
	deepEqual( Stem("políticos"), "polít" );
	deepEqual( Stem("politiqueiro"), "politiqueir" );
	deepEqual( Stem("politizada"), "politiz" );
	deepEqual( Stem("politizado"), "politiz" );
	deepEqual( Stem("politraumatismo"), "politraumat" );
	deepEqual( Stem("polo"), "pol" );
	deepEqual( Stem("pólo"), "pól" );
	deepEqual( Stem("polônio"), "polôni" );
	deepEqual( Stem("pólos"), "pól" );
	deepEqual( Stem("polpuda"), "polpud" );
	deepEqual( Stem("poltrona"), "poltron" );
	deepEqual( Stem("poltronas"), "poltron" );
	deepEqual( Stem("poluição"), "poluiçã" );
	deepEqual( Stem("poluídas"), "poluíd" );
	deepEqual( Stem("poluir"), "polu" );
	deepEqual( Stem("pólvora"), "pólvor" );
	deepEqual( Stem("polygram"), "polygr" );
	deepEqual( Stem("pomada"), "pom" );
	deepEqual( Stem("pombinhos"), "pombinh" );
	deepEqual( Stem("pomo"), "pom" );
	deepEqual( Stem("pompa"), "pomp" );
	deepEqual( Stem("pompéia"), "pomp" );
	deepEqual( Stem("pompeu"), "pomp" );
	deepEqual( Stem("pomposo"), "pompos" );
	deepEqual( Stem("pomposos"), "pompos" );
	deepEqual( Stem("poncho"), "ponch" );
	deepEqual( Stem("pondera"), "pond" );
	deepEqual( Stem("ponderação"), "ponder" );
	deepEqual( Stem("ponderado"), "ponder" );
	deepEqual( Stem("ponderou"), "ponder" );
	deepEqual( Stem("pondo"), "pond" );
	deepEqual( Stem("ponha"), "ponh" );
	deepEqual( Stem("ponham"), "ponh" );
	deepEqual( Stem("ponta"), "pont" );
	deepEqual( Stem("pontal"), "pontal" );
	deepEqual( Stem("pontapés"), "pontapés" );
	deepEqual( Stem("pontas"), "pont" );
	deepEqual( Stem("ponte"), "pont" );
	deepEqual( Stem("pontes"), "pont" );
	deepEqual( Stem("pontificava"), "pontific" );
	deepEqual( Stem("pontifícia"), "pontifíc" );
	deepEqual( Stem("pontilhado"), "pontilh" );
	deepEqual( Stem("pontinha"), "pontinh" );
	deepEqual( Stem("ponto"), "pont" );
	deepEqual( Stem("pontos"), "pont" );
	deepEqual( Stem("pontua"), "pontu" );
	deepEqual( Stem("pontuada"), "pontu" );
	deepEqual( Stem("pontuado"), "pontu" );
	deepEqual( Stem("pontuais"), "pontu" );
	deepEqual( Stem("pontual"), "pontual" );
	deepEqual( Stem("pontualmente"), "pontual" );
	deepEqual( Stem("pontuar"), "pontu" );
	deepEqual( Stem("ponzio"), "ponzi" );
	deepEqual( Stem("poodle"), "poodl" );
	deepEqual( Stem("pop"), "pop" );
	deepEqual( Stem("popa"), "pop" );
	deepEqual( Stem("popovic"), "popovic" );
	deepEqual( Stem("poppovic"), "poppovic" );
	deepEqual( Stem("população"), "popul" );
	deepEqual( Stem("populacional"), "populacional" );
	deepEqual( Stem("populações"), "popul" );
	deepEqual( Stem("popular"), "popul" );
	deepEqual( Stem("populares"), "popul" );
	deepEqual( Stem("popularidade"), "popular" );
	deepEqual( Stem("popularíssimo"), "popularíssim" );
	deepEqual( Stem("popularizá"), "populariz" );
	deepEqual( Stem("popularização"), "populariz" );
	deepEqual( Stem("popularizar"), "populariz" );
	deepEqual( Stem("popularizou"), "populariz" );
	deepEqual( Stem("popularmente"), "popular" );
	deepEqual( Stem("populi"), "popul" );
	deepEqual( Stem("populista"), "popul" );
	deepEqual( Stem("populosa"), "popul" );
	deepEqual( Stem("populoso"), "popul" );
	deepEqual( Stem("pôquer"), "pôqu" );
	deepEqual( Stem("por"), "por" );
	deepEqual( Stem("pôr"), "pôr" );
	deepEqual( Stem("porão"), "porã" );
	deepEqual( Stem("porção"), "porçã" );
	deepEqual( Stem("porcaria"), "porc" );
	deepEqual( Stem("porcas"), "porc" );
	deepEqual( Stem("porcentagem"), "porcentag" );
	deepEqual( Stem("porcentual"), "porcentual" );
	deepEqual( Stem("porco"), "porc" );
	deepEqual( Stem("porções"), "porçõ" );
	deepEqual( Stem("porcos"), "porc" );
	deepEqual( Stem("porém"), "porém" );
	deepEqual( Stem("pormenores"), "pormenor" );
	deepEqual( Stem("pornô"), "pornô" );
	deepEqual( Stem("pornografia"), "pornograf" );
	deepEqual( Stem("pornográficas"), "pornográf" );
	deepEqual( Stem("poro"), "por" );
	deepEqual( Stem("poró"), "por" );
	deepEqual( Stem("porões"), "porõ" );
	deepEqual( Stem("poros"), "por" );
	deepEqual( Stem("porosos"), "poros" );
	deepEqual( Stem("porque"), "porqu" );
	deepEqual( Stem("porquê"), "porqu" );
	deepEqual( Stem("porquês"), "porquês" );
	deepEqual( Stem("porquinho"), "porquinh" );
	deepEqual( Stem("porrada"), "porr" );
	deepEqual( Stem("porre"), "porr" );
	deepEqual( Stem("porsche"), "porsch" );
	deepEqual( Stem("porta"), "port" );
	deepEqual( Stem("portador"), "portador" );
	deepEqual( Stem("portadoras"), "portador" );
	deepEqual( Stem("portadores"), "portador" );
	deepEqual( Stem("portanto"), "portant" );
	deepEqual( Stem("portão"), "portã" );
	deepEqual( Stem("portaria"), "port" );
	deepEqual( Stem("portas"), "port" );
	deepEqual( Stem("portáteis"), "portát" );
	deepEqual( Stem("portátil"), "portátil" );
	deepEqual( Stem("porte"), "port" );
	deepEqual( Stem("porteira"), "porteir" );
	deepEqual( Stem("porteiras"), "porteir" );
	deepEqual( Stem("porteiro"), "porteir" );
	deepEqual( Stem("porteiros"), "porteir" );
	deepEqual( Stem("portela"), "portel" );
	deepEqual( Stem("portella"), "portell" );
	deepEqual( Stem("portento"), "portent" );
	deepEqual( Stem("portentosa"), "portent" );
	deepEqual( Stem("portentosas"), "portent" );
	deepEqual( Stem("porter"), "port" );
	deepEqual( Stem("portes"), "port" );
	deepEqual( Stem("portinari"), "portinar" );
	deepEqual( Stem("porto"), "port" );
	deepEqual( Stem("portobrás"), "portobrás" );
	deepEqual( Stem("portões"), "portõ" );
	deepEqual( Stem("portos"), "port" );
	deepEqual( Stem("portuárias"), "portuár" );
	deepEqual( Stem("portuários"), "portuári" );
	deepEqual( Stem("portugal"), "portugal" );
	deepEqual( Stem("português"), "português" );
	deepEqual( Stem("portuguesa"), "portugues" );
	deepEqual( Stem("portuguesas"), "portugues" );
	deepEqual( Stem("portugueses"), "portugues" );
	deepEqual( Stem("pós"), "pós" );
	deepEqual( Stem("pôs"), "pôs" );
	deepEqual( Stem("posar"), "pos" );
	deepEqual( Stem("posava"), "pos" );
	deepEqual( Stem("pose"), "pos" );
	deepEqual( Stem("poses"), "pos" );
	deepEqual( Stem("posição"), "posiçã" );
	deepEqual( Stem("posicionados"), "posicion" );
	deepEqual( Stem("posicionamentos"), "posicion" );
	deepEqual( Stem("posicionar"), "posicion" );
	deepEqual( Stem("posições"), "posiçõ" );
	deepEqual( Stem("positiva"), "posit" );
	deepEqual( Stem("positivamente"), "posit" );
	deepEqual( Stem("positivas"), "posit" );
	deepEqual( Stem("positivo"), "posit" );
	deepEqual( Stem("positivos"), "posit" );
	deepEqual( Stem("possa"), "poss" );
	deepEqual( Stem("possam"), "poss" );
	deepEqual( Stem("possamos"), "poss" );
	deepEqual( Stem("possante"), "possant" );
	deepEqual( Stem("posse"), "poss" );
	deepEqual( Stem("posses"), "poss" );
	deepEqual( Stem("possessão"), "possessã" );
	deepEqual( Stem("possessiva"), "possess" );
	deepEqual( Stem("possessivo"), "possess" );
	deepEqual( Stem("possesso"), "possess" );
	deepEqual( Stem("possi"), "poss" );
	deepEqual( Stem("possibilidade"), "possibil" );
	deepEqual( Stem("possibilidades"), "possibil" );
	deepEqual( Stem("possibilita"), "possibilit" );
	deepEqual( Stem("possibilitando"), "possibilit" );
	deepEqual( Stem("possíveis"), "possív" );
	deepEqual( Stem("possível"), "possível" );
	deepEqual( Stem("possivelmente"), "possivel" );
	deepEqual( Stem("possívelmente"), "possível" );
	deepEqual( Stem("posso"), "poss" );
	deepEqual( Stem("possuem"), "possu" );
	deepEqual( Stem("possui"), "possu" );
	deepEqual( Stem("possuía"), "possuí" );
	deepEqual( Stem("possuíam"), "possuí" );
	deepEqual( Stem("possuir"), "possu" );
	deepEqual( Stem("posta"), "post" );
	deepEqual( Stem("postado"), "post" );
	deepEqual( Stem("postais"), "post" );
	deepEqual( Stem("postal"), "postal" );
	deepEqual( Stem("poste"), "post" );
	deepEqual( Stem("pôster"), "pôst" );
	deepEqual( Stem("pôsteres"), "pôst" );
	deepEqual( Stem("postergar"), "posterg" );
	deepEqual( Stem("posterior"), "posterior" );
	deepEqual( Stem("posteriores"), "posterior" );
	deepEqual( Stem("posteriormente"), "posterior" );
	deepEqual( Stem("postes"), "post" );
	deepEqual( Stem("posto"), "post" );
	deepEqual( Stem("postos"), "post" );
	deepEqual( Stem("postulador"), "postul" );
	deepEqual( Stem("postulante"), "postul" );
	deepEqual( Stem("postumamente"), "postum" );
	deepEqual( Stem("póstumas"), "póstum" );
	deepEqual( Stem("postura"), "postur" );
	deepEqual( Stem("posturas"), "postur" );
	deepEqual( Stem("pot"), "pot" );
	deepEqual( Stem("potável"), "potável" );
	deepEqual( Stem("pote"), "pot" );
	deepEqual( Stem("potência"), "potênc" );
	deepEqual( Stem("potenciais"), "potenc" );
	deepEqual( Stem("potencial"), "potencial" );
	deepEqual( Stem("potencialmente"), "potencial" );
	deepEqual( Stem("potências"), "potênc" );
	deepEqual( Stem("potente"), "potent" );
	deepEqual( Stem("potentes"), "potent" );
	deepEqual( Stem("potinhos"), "potinh" );
	deepEqual( Stem("pouca"), "pouc" );
	deepEqual( Stem("poucas"), "pouc" );
	deepEqual( Stem("pouco"), "pouc" );
	deepEqual( Stem("poucos"), "pouc" );
	deepEqual( Stem("poupa"), "poup" );
	deepEqual( Stem("poupado"), "poup" );
	deepEqual( Stem("poupador"), "poupador" );
	deepEqual( Stem("poupadores"), "poupador" );
	deepEqual( Stem("poupam"), "poup" );
	deepEqual( Stem("poupança"), "poupanc" );
	deepEqual( Stem("poupando"), "poup" );
	deepEqual( Stem("poupar"), "poup" );
	deepEqual( Stem("pouparam"), "poup" );
	deepEqual( Stem("poupou"), "poup" );
	deepEqual( Stem("pouquinho"), "pouquinh" );
	deepEqual( Stem("pouquíssima"), "pouquíssim" );
	deepEqual( Stem("pouquíssimo"), "pouquíssim" );
	deepEqual( Stem("pouquíssimos"), "pouquíss" );
	deepEqual( Stem("pousa"), "pous" );
	deepEqual( Stem("pousada"), "pous" );
	deepEqual( Stem("pousam"), "pous" );
	deepEqual( Stem("pousamos"), "pous" );
	deepEqual( Stem("pousando"), "pous" );
	deepEqual( Stem("pousar"), "pous" );
	deepEqual( Stem("pouso"), "pous" );
	deepEqual( Stem("pousou"), "pous" );
	deepEqual( Stem("povão"), "povã" );
	deepEqual( Stem("povo"), "pov" );
	deepEqual( Stem("povoa"), "povo" );
	deepEqual( Stem("povoada"), "povo" );
	deepEqual( Stem("povoado"), "povo" );
	deepEqual( Stem("povoados"), "povo" );
	deepEqual( Stem("povoam"), "povo" );
	deepEqual( Stem("povoar"), "povo" );
	deepEqual( Stem("povos"), "pov" );
	deepEqual( Stem("powel"), "powel" );
	deepEqual( Stem("powell"), "powell" );
	deepEqual( Stem("power"), "pow" );
	deepEqual( Stem("pp"), "pp" );
	deepEqual( Stem("ppb"), "ppb" );
	deepEqual( Stem("ppp"), "ppp" );
	deepEqual( Stem("pr"), "pr" );
	deepEqual( Stem("pra"), "pra" );
	deepEqual( Stem("prá"), "prá" );
	deepEqual( Stem("praça"), "prac" );
	deepEqual( Stem("prada"), "prad" );
	deepEqual( Stem("pradesh"), "pradesh" );
	deepEqual( Stem("prado"), "prad" );
	deepEqual( Stem("prados"), "prad" );
	deepEqual( Stem("praga"), "prag" );
	deepEqual( Stem("pragmática"), "pragmát" );
	deepEqual( Stem("pragmáticas"), "pragmát" );
	deepEqual( Stem("pragmático"), "pragmát" );
	deepEqual( Stem("pragmáticos"), "pragmát" );
	deepEqual( Stem("pragmatismo"), "pragmat" );
	deepEqual( Stem("praia"), "pra" );
	deepEqual( Stem("praianinha"), "praianinh" );
	deepEqual( Stem("praias"), "pra" );
	deepEqual( Stem("prancheta"), "pranchet" );
	deepEqual( Stem("pranchetas"), "pranchet" );
	deepEqual( Stem("prandi"), "prand" );
	deepEqual( Stem("prantos"), "prant" );
	deepEqual( Stem("prata"), "prat" );
	deepEqual( Stem("prateleira"), "prateleir" );
	deepEqual( Stem("prateleiras"), "prateleir" );
	deepEqual( Stem("prates"), "prat" );
	deepEqual( Stem("pratica"), "pratic" );
	deepEqual( Stem("prática"), "prátic" );
	deepEqual( Stem("praticada"), "pratic" );
	deepEqual( Stem("praticadas"), "pratic" );
	deepEqual( Stem("praticado"), "pratic" );
	deepEqual( Stem("praticados"), "pratic" );
	deepEqual( Stem("praticam"), "pratic" );
	deepEqual( Stem("praticamente"), "pratic" );
	deepEqual( Stem("praticando"), "pratic" );
	deepEqual( Stem("praticante"), "pratic" );
	deepEqual( Stem("praticantes"), "pratic" );
	deepEqual( Stem("praticar"), "pratic" );
	deepEqual( Stem("praticaram"), "pratic" );
	deepEqual( Stem("práticas"), "prátic" );
	deepEqual( Stem("praticidade"), "pratic" );
	deepEqual( Stem("prático"), "prátic" );
	deepEqual( Stem("práticos"), "prátic" );
	deepEqual( Stem("praticou"), "pratic" );
	deepEqual( Stem("prato"), "prat" );
	deepEqual( Stem("pratos"), "prat" );
	deepEqual( Stem("praxe"), "prax" );
	deepEqual( Stem("prazeirosa"), "prazeir" );
	deepEqual( Stem("prazer"), "praz" );
	deepEqual( Stem("prazeres"), "praz" );
	deepEqual( Stem("prazerosa"), "prazer" );
	deepEqual( Stem("prazerosas"), "prazer" );
	deepEqual( Stem("prazeroso"), "prazer" );
	deepEqual( Stem("prazo"), "praz" );
	deepEqual( Stem("prazos"), "praz" );
	deepEqual( Stem("pré"), "pré" );
	deepEqual( Stem("precária"), "precár" );
	deepEqual( Stem("precariamente"), "precari" );
	deepEqual( Stem("precárias"), "precár" );
	deepEqual( Stem("precário"), "precári" );
	deepEqual( Stem("precários"), "precári" );
	deepEqual( Stem("precatório"), "precatóri" );
	deepEqual( Stem("precatórios"), "precatóri" );
	deepEqual( Stem("precaução"), "precauçã" );
	deepEqual( Stem("prece"), "prec" );
	deepEqual( Stem("precede"), "preced" );
	deepEqual( Stem("precedem"), "preced" );
	deepEqual( Stem("precedente"), "precedent" );
	deepEqual( Stem("precedentes"), "precedent" );
	deepEqual( Stem("precedeu"), "preced" );
	deepEqual( Stem("precedida"), "preced" );
	deepEqual( Stem("precedidos"), "preced" );
	deepEqual( Stem("preceitos"), "preceit" );
	deepEqual( Stem("preces"), "prec" );
	deepEqual( Stem("preciosa"), "precios" );
	deepEqual( Stem("preciosas"), "precios" );
	deepEqual( Stem("preciosidade"), "precios" );
	deepEqual( Stem("preciosidades"), "precios" );
	deepEqual( Stem("precioso"), "precios" );
	deepEqual( Stem("preciosos"), "precios" );
	deepEqual( Stem("precious"), "precious" );
	deepEqual( Stem("precipícios"), "precipíci" );
	deepEqual( Stem("precipitado"), "precipit" );
	deepEqual( Stem("precisa"), "precis" );
	deepEqual( Stem("precisado"), "precis" );
	deepEqual( Stem("precisam"), "precis" );
	deepEqual( Stem("precisamente"), "precis" );
	deepEqual( Stem("precisamos"), "precis" );
	deepEqual( Stem("precisando"), "precis" );
	deepEqual( Stem("precisão"), "precisã" );
	deepEqual( Stem("precisar"), "precis" );
	deepEqual( Stem("precisará"), "precis" );
	deepEqual( Stem("precisaria"), "precis" );
	deepEqual( Stem("precisariam"), "precis" );
	deepEqual( Stem("precisaríamos"), "precis" );
	deepEqual( Stem("precisas"), "precis" );
	deepEqual( Stem("precisasse"), "precis" );
	deepEqual( Stem("precisava"), "precis" );
	deepEqual( Stem("precisavam"), "precis" );
	deepEqual( Stem("precisávamos"), "precis" );
	deepEqual( Stem("precise"), "precis" );
	deepEqual( Stem("precisei"), "precis" );
	deepEqual( Stem("precisem"), "precis" );
	deepEqual( Stem("preciso"), "precis" );
	deepEqual( Stem("precisos"), "precis" );
	deepEqual( Stem("precisou"), "precis" );
	deepEqual( Stem("preço"), "prec" );
	deepEqual( Stem("precoce"), "precoc" );
	deepEqual( Stem("precocemente"), "precoc" );
	deepEqual( Stem("precoces"), "precoc" );
	deepEqual( Stem("precocidade"), "precoc" );
	deepEqual( Stem("preconcebida"), "preconceb" );
	deepEqual( Stem("preconceito"), "preconceit" );
	deepEqual( Stem("preconceitos"), "preconceit" );
	deepEqual( Stem("preconceituosa"), "preconceitu" );
	deepEqual( Stem("preconceituosos"), "preconceitu" );
	deepEqual( Stem("precondição"), "precondiçã" );
	deepEqual( Stem("preços"), "prec" );
	deepEqual( Stem("precursor"), "precursor" );
	deepEqual( Stem("precursora"), "precursor" );
	deepEqual( Stem("precursores"), "precursor" );
	deepEqual( Stem("predatória"), "predatór" );
	deepEqual( Stem("predatórias"), "predatór" );
	deepEqual( Stem("predatório"), "predatóri" );
	deepEqual( Stem("predestinado"), "predestin" );
	deepEqual( Stem("predileção"), "predileçã" );
	deepEqual( Stem("predileta"), "predilet" );
	deepEqual( Stem("prediletas"), "predilet" );
	deepEqual( Stem("predileto"), "predilet" );
	deepEqual( Stem("prediletos"), "predilet" );
	deepEqual( Stem("prédio"), "prédi" );
	deepEqual( Stem("prédios"), "prédi" );
	deepEqual( Stem("predispõe"), "predispõ" );
	deepEqual( Stem("predisposição"), "predisposiçã" );
	deepEqual( Stem("predomina"), "predomin" );
	deepEqual( Stem("predominam"), "predomin" );
	deepEqual( Stem("predominância"), "predomin" );
	deepEqual( Stem("predominante"), "predomin" );
	deepEqual( Stem("predominantemente"), "predomin" );
	deepEqual( Stem("predominou"), "predomin" );
	deepEqual( Stem("preenchem"), "preench" );
	deepEqual( Stem("preenchendo"), "preench" );
	deepEqual( Stem("preencher"), "preench" );
	deepEqual( Stem("preencherá"), "preench" );
	deepEqual( Stem("preencheriam"), "preench" );
	deepEqual( Stem("preencheu"), "preench" );
	deepEqual( Stem("preenchia"), "preench" );
	deepEqual( Stem("preenchida"), "preench" );
	deepEqual( Stem("preenchido"), "preench" );
	deepEqual( Stem("preenchimento"), "preenchiment" );
	deepEqual( Stem("prefaciasse"), "prefac" );
	deepEqual( Stem("prefácio"), "prefáci" );
	deepEqual( Stem("prefeita"), "prefeit" );
	deepEqual( Stem("prefeito"), "prefeit" );
	deepEqual( Stem("prefeitos"), "prefeit" );
	deepEqual( Stem("prefeitura"), "prefeitur" );
	deepEqual( Stem("prefeituras"), "prefeitur" );
	deepEqual( Stem("prefere"), "prefer" );
	deepEqual( Stem("preferem"), "pref" );
	deepEqual( Stem("preferência"), "preferent" );
	deepEqual( Stem("preferencialmente"), "preferencial" );
	deepEqual( Stem("preferências"), "preferent" );
	deepEqual( Stem("preferi"), "prefer" );
	deepEqual( Stem("preferia"), "pref" );
	deepEqual( Stem("preferiam"), "pref" );
	deepEqual( Stem("preferíamos"), "pref" );
	deepEqual( Stem("preferida"), "prefer" );
	deepEqual( Stem("preferido"), "prefer" );
	deepEqual( Stem("preferidos"), "prefer" );
	deepEqual( Stem("preferindo"), "prefer" );
	deepEqual( Stem("preferino"), "preferin" );
	deepEqual( Stem("preferiram"), "prefer" );
	deepEqual( Stem("preferiria"), "prefer" );
	deepEqual( Stem("preferiu"), "prefer" );
	deepEqual( Stem("preferível"), "prefer" );
	deepEqual( Stem("prefira"), "pref" );
	deepEqual( Stem("prefiro"), "prefir" );
	deepEqual( Stem("prefixo"), "prefix" );
	deepEqual( Stem("prega"), "preg" );
	deepEqual( Stem("pregação"), "pregaçã" );
	deepEqual( Stem("pregador"), "pregador" );
	deepEqual( Stem("pregam"), "preg" );
	deepEqual( Stem("pregão"), "pregã" );
	deepEqual( Stem("pregar"), "preg" );
	deepEqual( Stem("pregava"), "preg" );
	deepEqual( Stem("preguiça"), "preguic" );
	deepEqual( Stem("preguiçosa"), "preguic" );
	deepEqual( Stem("preguiçosas"), "preguic" );
	deepEqual( Stem("preguiçoso"), "preguic" );
	deepEqual( Stem("preguiçosos"), "preguic" );
	deepEqual( Stem("preju"), "preju" );
	deepEqual( Stem("prejudica"), "prejud" );
	deepEqual( Stem("prejudicada"), "prejudic" );
	deepEqual( Stem("prejudicados"), "prejudic" );
	deepEqual( Stem("prejudicando"), "prejudic" );
	deepEqual( Stem("prejudicar"), "prejudic" );
	deepEqual( Stem("prejudicava"), "prejudic" );
	deepEqual( Stem("prejudicial"), "prejudicial" );
	deepEqual( Stem("prejudicou"), "prejudic" );
	deepEqual( Stem("prejudique"), "prejudiqu" );
	deepEqual( Stem("prejudiquem"), "prejudiqu" );
	deepEqual( Stem("prejuízo"), "prejuíz" );
	deepEqual( Stem("prejuízos"), "prejuíz" );
	deepEqual( Stem("preliminar"), "prelimin" );
	deepEqual( Stem("preliminares"), "prelimin" );
	deepEqual( Stem("prematura"), "prematur" );
	deepEqual( Stem("prematuras"), "prematur" );
	deepEqual( Stem("prematuridade"), "prematur" );
	deepEqual( Stem("premia"), "prem" );
	deepEqual( Stem("premiá"), "premi" );
	deepEqual( Stem("premiação"), "premiaçã" );
	deepEqual( Stem("premiada"), "premi" );
	deepEqual( Stem("premiadas"), "premi" );
	deepEqual( Stem("premiadíssimo"), "premiadíssim" );
	deepEqual( Stem("premiado"), "premi" );
	deepEqual( Stem("premiados"), "premi" );
	deepEqual( Stem("premiar"), "premi" );
	deepEqual( Stem("premiava"), "premi" );
	deepEqual( Stem("premiem"), "premi" );
	deepEqual( Stem("prêmio"), "prêmi" );
	deepEqual( Stem("prêmios"), "prêmi" );
	deepEqual( Stem("premonição"), "premoniçã" );
	deepEqual( Stem("premonitório"), "premonitóri" );
	deepEqual( Stem("premonitórios"), "premonitóri" );
	deepEqual( Stem("prenda"), "prend" );
	deepEqual( Stem("prende"), "prend" );
	deepEqual( Stem("prendem"), "prend" );
	deepEqual( Stem("prendendo"), "prend" );
	deepEqual( Stem("prender"), "prend" );
	deepEqual( Stem("prenderam"), "prend" );
	deepEqual( Stem("prendeu"), "prend" );
	deepEqual( Stem("prendido"), "prend" );
	deepEqual( Stem("prenomes"), "prenom" );
	deepEqual( Stem("prensa"), "prens" );
	deepEqual( Stem("prensada"), "prens" );
	deepEqual( Stem("prenúncio"), "prenúnci" );
	deepEqual( Stem("prenúncios"), "prenúnci" );
	deepEqual( Stem("preocupa"), "preocup" );
	deepEqual( Stem("preocupação"), "preocup" );
	deepEqual( Stem("preocupações"), "preocup" );
	deepEqual( Stem("preocupada"), "preocup" );
	deepEqual( Stem("preocupadas"), "preocup" );
	deepEqual( Stem("preocupado"), "preocup" );
	deepEqual( Stem("preocupados"), "preocup" );
	deepEqual( Stem("preocupam"), "preocup" );
	deepEqual( Stem("preocupante"), "preocup" );
	deepEqual( Stem("preocupar"), "preocup" );
	deepEqual( Stem("preocuparam"), "preocup" );
	deepEqual( Stem("preocupasse"), "preocup" );
	deepEqual( Stem("preocupava"), "preocup" );
	deepEqual( Stem("preocupe"), "preocup" );
	deepEqual( Stem("preocupei"), "preocup" );
	deepEqual( Stem("preocupo"), "preocup" );
	deepEqual( Stem("preocupou"), "preocup" );
	deepEqual( Stem("prepara"), "prep" );
	deepEqual( Stem("preparação"), "prepar" );
	deepEqual( Stem("preparada"), "prepar" );
	deepEqual( Stem("preparado"), "prepar" );
	deepEqual( Stem("preparador"), "prepar" );
	deepEqual( Stem("preparadora"), "prepar" );
	deepEqual( Stem("preparados"), "prepar" );
	deepEqual( Stem("preparam"), "prep" );
	deepEqual( Stem("preparando"), "prepar" );
	deepEqual( Stem("preparar"), "prepar" );
	deepEqual( Stem("prepararam"), "prepar" );
	deepEqual( Stem("preparativos"), "prepar" );
	deepEqual( Stem("preparava"), "prepar" );
	deepEqual( Stem("prepare"), "prepar" );
	deepEqual( Stem("preparei"), "prep" );
	deepEqual( Stem("preparem"), "prep" );
	deepEqual( Stem("preparo"), "prepar" );
	deepEqual( Stem("preparos"), "prepar" );
	deepEqual( Stem("preparou"), "prepar" );
	deepEqual( Stem("preponderante"), "preponder" );
	deepEqual( Stem("prepotente"), "prepotent" );
	deepEqual( Stem("presa"), "pres" );
	deepEqual( Stem("presas"), "pres" );
	deepEqual( Stem("presbiteriana"), "presbiterian" );
	deepEqual( Stem("prescindir"), "prescind" );
	deepEqual( Stem("prescrevem"), "prescrev" );
	deepEqual( Stem("prescrever"), "prescrev" );
	deepEqual( Stem("prescreveu"), "prescrev" );
	deepEqual( Stem("prescrição"), "prescriçã" );
	deepEqual( Stem("prescrições"), "prescriçõ" );
	deepEqual( Stem("prescrita"), "prescrit" );
	deepEqual( Stem("prescritas"), "prescrit" );
	deepEqual( Stem("prescritos"), "prescrit" );
	deepEqual( Stem("presença"), "presenc" );
	deepEqual( Stem("presenciar"), "presenc" );
	deepEqual( Stem("presenciou"), "presenc" );
	deepEqual( Stem("presente"), "present" );
	deepEqual( Stem("presentear"), "present" );
	deepEqual( Stem("presentes"), "present" );
	deepEqual( Stem("presépio"), "presépi" );
	deepEqual( Stem("preserva"), "preserv" );
	deepEqual( Stem("preservação"), "preserv" );
	deepEqual( Stem("preservada"), "preserv" );
	deepEqual( Stem("preservado"), "preserv" );
	deepEqual( Stem("preservados"), "preserv" );
	deepEqual( Stem("preservam"), "preserv" );
	deepEqual( Stem("preservar"), "preserv" );
	deepEqual( Stem("preservativo"), "preserv" );
	deepEqual( Stem("preservativos"), "preserv" );
	deepEqual( Stem("preservem"), "preserv" );
	deepEqual( Stem("preservou"), "preserv" );
	deepEqual( Stem("preside"), "presid" );
	deepEqual( Stem("presidência"), "president" );
	deepEqual( Stem("presidenciais"), "presidenc" );
	deepEqual( Stem("presidencial"), "presidencial" );
	deepEqual( Stem("presidencialismo"), "presidencial" );
	deepEqual( Stem("presidencialista"), "presidencial" );
	deepEqual( Stem("presidenta"), "president" );
	deepEqual( Stem("presidente"), "president" );
	deepEqual( Stem("presidentes"), "president" );
	deepEqual( Stem("presidiários"), "presidiári" );
	deepEqual( Stem("presidida"), "presid" );
	deepEqual( Stem("presidido"), "presid" );
	deepEqual( Stem("presídio"), "presídi" );
	deepEqual( Stem("presídios"), "presídi" );
	deepEqual( Stem("presidir"), "presid" );
	deepEqual( Stem("presidiu"), "presid" );
	deepEqual( Stem("presley"), "presley" );
	deepEqual( Stem("preso"), "pres" );
	deepEqual( Stem("presos"), "pres" );
	deepEqual( Stem("press"), "press" );
	deepEqual( Stem("pressa"), "press" );
	deepEqual( Stem("pressagiar"), "pressagi" );
	deepEqual( Stem("pressão"), "pressã" );
	deepEqual( Stem("pressas"), "press" );
	deepEqual( Stem("presse"), "press" );
	deepEqual( Stem("pressentido"), "pressent" );
	deepEqual( Stem("pressioná"), "pression" );
	deepEqual( Stem("pressionado"), "pression" );
	deepEqual( Stem("pressionados"), "pression" );
	deepEqual( Stem("pressionam"), "pression" );
	deepEqual( Stem("pressionar"), "pression" );
	deepEqual( Stem("pressionasse"), "pression" );
	deepEqual( Stem("pressionou"), "pression" );
	deepEqual( Stem("pressões"), "pressõ" );
	deepEqual( Stem("pressupõe"), "pressupõ" );
	deepEqual( Stem("pressuposto"), "pressupost" );
	deepEqual( Stem("presta"), "prest" );
	deepEqual( Stem("prestação"), "prestaçã" );
	deepEqual( Stem("prestações"), "prestaçõ" );
	deepEqual( Stem("prestador"), "prestador" );
	deepEqual( Stem("prestados"), "prest" );
	deepEqual( Stem("prestam"), "prest" );
	deepEqual( Stem("prestando"), "prest" );
	deepEqual( Stem("prestar"), "prest" );
	deepEqual( Stem("prestaram"), "prest" );
	deepEqual( Stem("prestava"), "prest" );
	deepEqual( Stem("preste"), "prest" );
	deepEqual( Stem("prestes"), "prest" );
	deepEqual( Stem("prestigiado"), "prestigi" );
	deepEqual( Stem("prestigiados"), "prestigi" );
	deepEqual( Stem("prestígio"), "prestígi" );
	deepEqual( Stem("prestigiosa"), "prestigi" );
	deepEqual( Stem("prestigioso"), "prestigi" );
	deepEqual( Stem("presto"), "prest" );
	deepEqual( Stem("prestou"), "prest" );
	deepEqual( Stem("presumir"), "presum" );
	deepEqual( Stem("presunto"), "presunt" );
	deepEqual( Stem("presuntos"), "presunt" );
	deepEqual( Stem("prét"), "prét" );
	deepEqual( Stem("prêt"), "prêt" );
	deepEqual( Stem("preta"), "pret" );
	deepEqual( Stem("pretende"), "pretend" );
	deepEqual( Stem("pretendem"), "pretend" );
	deepEqual( Stem("pretendemos"), "pretend" );
	deepEqual( Stem("pretendente"), "pretendent" );
	deepEqual( Stem("pretendentes"), "pretendent" );
	deepEqual( Stem("pretendia"), "pretend" );
	deepEqual( Stem("pretendiam"), "pretend" );
	deepEqual( Stem("pretendo"), "pret" );
	deepEqual( Stem("pretensioso"), "pretensi" );
	deepEqual( Stem("pretenso"), "pretens" );
	deepEqual( Stem("preteridos"), "preter" );
	deepEqual( Stem("pretexto"), "pretext" );
	deepEqual( Stem("pretextos"), "pretext" );
	deepEqual( Stem("preto"), "pret" );
	deepEqual( Stem("pretos"), "pret" );
	deepEqual( Stem("prevalece"), "prevalec" );
	deepEqual( Stem("prevalecer"), "prevalec" );
	deepEqual( Stem("prevaleceu"), "prevalec" );
	deepEqual( Stem("prevê"), "prev" );
	deepEqual( Stem("prevêem"), "prev" );
	deepEqual( Stem("prevêm"), "prevêm" );
	deepEqual( Stem("prevenção"), "prevençã" );
	deepEqual( Stem("prevendo"), "prev" );
	deepEqual( Stem("prevenida"), "preven" );
	deepEqual( Stem("prevenir"), "preven" );
	deepEqual( Stem("preveniu"), "preven" );
	deepEqual( Stem("preventiva"), "prevent" );
	deepEqual( Stem("preventivamente"), "prevent" );
	deepEqual( Stem("preventivas"), "prevent" );
	deepEqual( Stem("preventivo"), "prevent" );
	deepEqual( Stem("preventivos"), "prevent" );
	deepEqual( Stem("prever"), "prev" );
	deepEqual( Stem("previ"), "prev" );
	deepEqual( Stem("previa"), "prev" );
	deepEqual( Stem("prévia"), "prév" );
	deepEqual( Stem("previdência"), "prevident" );
	deepEqual( Stem("previdenciária"), "previdenciár" );
	deepEqual( Stem("previdenciário"), "previdenciári" );
	deepEqual( Stem("prévio"), "prévi" );
	deepEqual( Stem("previram"), "prev" );
	deepEqual( Stem("previsão"), "previsã" );
	deepEqual( Stem("previsível"), "previs" );
	deepEqual( Stem("previsões"), "previsõ" );
	deepEqual( Stem("prevista"), "previst" );
	deepEqual( Stem("previstas"), "previst" );
	deepEqual( Stem("previsto"), "previst" );
	deepEqual( Stem("previstos"), "previst" );
	deepEqual( Stem("previu"), "prev" );
	deepEqual( Stem("preza"), "prez" );
	deepEqual( Stem("preze"), "prez" );
	deepEqual( Stem("prezo"), "prez" );
	deepEqual( Stem("price"), "pric" );
	deepEqual( Stem("pride"), "prid" );
	deepEqual( Stem("prima"), "prim" );
	deepEqual( Stem("primária"), "primár" );
	deepEqual( Stem("primárias"), "primár" );
	deepEqual( Stem("primário"), "primári" );
	deepEqual( Stem("primas"), "prim" );
	deepEqual( Stem("primavera"), "primav" );
	deepEqual( Stem("primazia"), "primaz" );
	deepEqual( Stem("primeira"), "primeir" );
	deepEqual( Stem("primeiras"), "primeir" );
	deepEqual( Stem("primeiro"), "primeir" );
	deepEqual( Stem("primeiros"), "primeir" );
	deepEqual( Stem("primitiva"), "primit" );
	deepEqual( Stem("primo"), "prim" );
	deepEqual( Stem("primogênita"), "primogênit" );
	deepEqual( Stem("primor"), "primor" );
	deepEqual( Stem("primordiais"), "primordi" );
	deepEqual( Stem("primordial"), "primordial" );
	deepEqual( Stem("primórdios"), "primórdi" );
	deepEqual( Stem("primos"), "prim" );
	deepEqual( Stem("prince"), "princ" );
	deepEqual( Stem("princesa"), "princes" );
	deepEqual( Stem("principais"), "princip" );
	deepEqual( Stem("principal"), "principal" );
	deepEqual( Stem("principalmente"), "principal" );
	deepEqual( Stem("príncipe"), "príncip" );
	deepEqual( Stem("princípio"), "princípi" );
	deepEqual( Stem("princípios"), "princípi" );
	deepEqual( Stem("priore"), "prior" );
	deepEqual( Stem("prioridade"), "prioridad" );
	deepEqual( Stem("prioridades"), "prioridad" );
	deepEqual( Stem("prioritariamente"), "prioritari" );
	deepEqual( Stem("prioritárias"), "prioritár" );
	deepEqual( Stem("prioritário"), "prioritári" );
	deepEqual( Stem("prioritários"), "prioritári" );
	deepEqual( Stem("priorizá"), "prioriz" );
	deepEqual( Stem("priorizar"), "prioriz" );
	deepEqual( Stem("prisão"), "prisã" );
	deepEqual( Stem("priscila"), "priscil" );
	deepEqual( Stem("priscilla"), "priscill" );
	deepEqual( Stem("prisco"), "prisc" );
	deepEqual( Stem("prisioneira"), "prisioneir" );
	deepEqual( Stem("prisioneiro"), "prisioneir" );
	deepEqual( Stem("prisioneiros"), "prisioneir" );
	deepEqual( Stem("prisma"), "prism" );
	deepEqual( Stem("prisões"), "prisõ" );
	deepEqual( Stem("privacidade"), "privac" );
	deepEqual( Stem("privada"), "priv" );
	deepEqual( Stem("privadas"), "priv" );
	deepEqual( Stem("privado"), "priv" );
	deepEqual( Stem("privados"), "priv" );
	deepEqual( Stem("privam"), "priv" );
	deepEqual( Stem("private"), "privat" );
	deepEqual( Stem("privativo"), "privat" );
	deepEqual( Stem("privativos"), "privat" );
	deepEqual( Stem("privatiza"), "privatiz" );
	deepEqual( Stem("privatização"), "privatiz" );
	deepEqual( Stem("privatizações"), "privatiz" );
	deepEqual( Stem("privatizada"), "privatiz" );
	deepEqual( Stem("privatizado"), "privatiz" );
	deepEqual( Stem("privatizando"), "privatiz" );
	deepEqual( Stem("privatizar"), "privatiz" );
	deepEqual( Stem("privé"), "priv" );
	deepEqual( Stem("privilegia"), "privileg" );
	deepEqual( Stem("privilegiada"), "privilegi" );
	deepEqual( Stem("privilegiadas"), "privilegi" );
	deepEqual( Stem("privilegiado"), "privilegi" );
	deepEqual( Stem("privilegiados"), "privilegi" );
	deepEqual( Stem("privilegiando"), "privilegi" );
	deepEqual( Stem("privilégio"), "privilégi" );
	deepEqual( Stem("prize"), "priz" );
	deepEqual( Stem("prn"), "prn" );
	deepEqual( Stem("pro"), "pro" );
	deepEqual( Stem("pró"), "pró" );
	deepEqual( Stem("proálcool"), "proálcool" );
	deepEqual( Stem("proar"), "pro" );
	deepEqual( Stem("probabilidade"), "probabil" );
	deepEqual( Stem("probabilidades"), "probabil" );
	deepEqual( Stem("problema"), "problem" );
	deepEqual( Stem("problemas"), "problem" );
	deepEqual( Stem("problemática"), "problemát" );
	deepEqual( Stem("problemáticas"), "problemát" );
	deepEqual( Stem("problemático"), "problemát" );
	deepEqual( Stem("problemáticos"), "problemát" );
	deepEqual( Stem("probleminha"), "probleminh" );
	deepEqual( Stem("procedência"), "procedent" );
	deepEqual( Stem("procedente"), "procedent" );
	deepEqual( Stem("procedentes"), "procedent" );
	deepEqual( Stem("procedesse"), "proced" );
	deepEqual( Stem("procedimento"), "proced" );
	deepEqual( Stem("procedimentos"), "proced" );
	deepEqual( Stem("processada"), "process" );
	deepEqual( Stem("processado"), "process" );
	deepEqual( Stem("processador"), "process" );
	deepEqual( Stem("processadores"), "process" );
	deepEqual( Stem("processados"), "process" );
	deepEqual( Stem("processamento"), "process" );
	deepEqual( Stem("processando"), "process" );
	deepEqual( Stem("processar"), "process" );
	deepEqual( Stem("processo"), "process" );
	deepEqual( Stem("processos"), "process" );
	deepEqual( Stem("processou"), "process" );
	deepEqual( Stem("prociamidas"), "prociam" );
	deepEqual( Stem("procissão"), "procissã" );
	deepEqual( Stem("proclama"), "proclam" );
	deepEqual( Stem("proclamação"), "proclam" );
	deepEqual( Stem("proclamada"), "proclam" );
	deepEqual( Stem("proclamam"), "proclam" );
	deepEqual( Stem("proclamou"), "proclam" );
	deepEqual( Stem("procon"), "procon" );
	deepEqual( Stem("procópio"), "procópi" );
	deepEqual( Stem("procriação"), "procriaçã" );
	deepEqual( Stem("procriar"), "procri" );
	deepEqual( Stem("procupá"), "procup" );
	deepEqual( Stem("procura"), "procur" );
	deepEqual( Stem("procuração"), "procur" );
	deepEqual( Stem("procurações"), "procur" );
	deepEqual( Stem("procurada"), "procur" );
	deepEqual( Stem("procuradas"), "procur" );
	deepEqual( Stem("procurado"), "procur" );
	deepEqual( Stem("procurador"), "procur" );
	deepEqual( Stem("procuradores"), "procur" );
	deepEqual( Stem("procuradoria"), "procurador" );
	deepEqual( Stem("procurados"), "procur" );
	deepEqual( Stem("procuram"), "procur" );
	deepEqual( Stem("procuramos"), "procur" );
	deepEqual( Stem("procurando"), "procur" );
	deepEqual( Stem("procurar"), "procur" );
	deepEqual( Stem("procuraram"), "procur" );
	deepEqual( Stem("procurasse"), "procur" );
	deepEqual( Stem("procurassem"), "procur" );
	deepEqual( Stem("procurava"), "procur" );
	deepEqual( Stem("procurávamos"), "procur" );
	deepEqual( Stem("procure"), "procur" );
	deepEqual( Stem("procurei"), "procur" );
	deepEqual( Stem("procurem"), "procur" );
	deepEqual( Stem("procuremos"), "procur" );
	deepEqual( Stem("procuro"), "procur" );
	deepEqual( Stem("procurou"), "procur" );
	deepEqual( Stem("prodi"), "prod" );
	deepEqual( Stem("pródigas"), "pródig" );
	deepEqual( Stem("prodígio"), "prodígi" );
	deepEqual( Stem("prodigiosa"), "prodigi" );
	deepEqual( Stem("pródigo"), "pródig" );
	deepEqual( Stem("produação"), "produaçã" );
	deepEqual( Stem("produban"), "produban" );
	deepEqual( Stem("produção"), "produçã" );
	deepEqual( Stem("produções"), "produçõ" );
	deepEqual( Stem("produtiva"), "produt" );
	deepEqual( Stem("produtivas"), "produt" );
	deepEqual( Stem("produtividade"), "produt" );
	deepEqual( Stem("produtivo"), "produt" );
	deepEqual( Stem("produtivos"), "produt" );
	deepEqual( Stem("produto"), "produt" );
	deepEqual( Stem("produtor"), "produtor" );
	deepEqual( Stem("produtora"), "produtor" );
	deepEqual( Stem("produtores"), "produtor" );
	deepEqual( Stem("produtos"), "produt" );
	deepEqual( Stem("produz"), "produz" );
	deepEqual( Stem("produzem"), "produz" );
	deepEqual( Stem("produzia"), "produz" );
	deepEqual( Stem("produzida"), "produz" );
	deepEqual( Stem("produzidas"), "produz" );
	deepEqual( Stem("produzido"), "produz" );
	deepEqual( Stem("produzidos"), "produz" );
	deepEqual( Stem("produzindo"), "produz" );
	deepEqual( Stem("produzir"), "produz" );
	deepEqual( Stem("produzirá"), "produz" );
	deepEqual( Stem("produziram"), "produz" );
	deepEqual( Stem("produziremos"), "produz" );
	deepEqual( Stem("produziu"), "produz" );
	deepEqual( Stem("produzo"), "produz" );
	deepEqual( Stem("proeminente"), "proeminent" );
	deepEqual( Stem("proer"), "pro" );
	deepEqual( Stem("proex"), "proex" );
	deepEqual( Stem("proeza"), "proez" );
	deepEqual( Stem("proezas"), "proez" );
	deepEqual( Stem("profanação"), "profan" );
	deepEqual( Stem("profecia"), "profec" );
	deepEqual( Stem("profecias"), "profec" );
	deepEqual( Stem("proferir"), "profer" );
	deepEqual( Stem("professa"), "profess" );
	deepEqual( Stem("professado"), "profess" );
	deepEqual( Stem("professor"), "professor" );
	deepEqual( Stem("professora"), "professor" );
	deepEqual( Stem("professoras"), "professor" );
	deepEqual( Stem("professores"), "professor" );
	deepEqual( Stem("profeta"), "profet" );
	deepEqual( Stem("profetas"), "profet" );
	deepEqual( Stem("profética"), "profét" );
	deepEqual( Stem("profile"), "profil" );
	deepEqual( Stem("profissão"), "profissã" );
	deepEqual( Stem("profissionais"), "profission" );
	deepEqual( Stem("profissional"), "profissional" );
	deepEqual( Stem("profissionalismo"), "profissional" );
	deepEqual( Stem("profissionalíssima"), "profissionalíssim" );
	deepEqual( Stem("profissionalização"), "profissionaliz" );
	deepEqual( Stem("profissionalizante"), "profissionaliz" );
	deepEqual( Stem("profissionalizantes"), "profissionaliz" );
	deepEqual( Stem("profissionalmente"), "profissional" );
	deepEqual( Stem("profissões"), "profissõ" );
	deepEqual( Stem("profunda"), "profund" );
	deepEqual( Stem("profundamente"), "profund" );
	deepEqual( Stem("profundas"), "profund" );
	deepEqual( Stem("profundidade"), "profund" );
	deepEqual( Stem("profundidades"), "profund" );
	deepEqual( Stem("profundo"), "profund" );
	deepEqual( Stem("profundos"), "profund" );
	deepEqual( Stem("profusão"), "profusã" );
	deepEqual( Stem("prognósticos"), "prognóst" );
	deepEqual( Stem("programa"), "program" );
	deepEqual( Stem("programação"), "program" );
	deepEqual( Stem("programações"), "program" );
	deepEqual( Stem("programada"), "program" );
	deepEqual( Stem("programado"), "program" );
	deepEqual( Stem("programados"), "program" );
	deepEqual( Stem("programar"), "program" );
	deepEqual( Stem("programas"), "program" );
	deepEqual( Stem("programática"), "programát" );
	deepEqual( Stem("progredia"), "progred" );
	deepEqual( Stem("progredido"), "progred" );
	deepEqual( Stem("progredindo"), "progred" );
	deepEqual( Stem("progredir"), "progred" );
	deepEqual( Stem("progressão"), "progressã" );
	deepEqual( Stem("progresso"), "progress" );
	deepEqual( Stem("progressos"), "progress" );
	deepEqual( Stem("progride"), "progrid" );
	deepEqual( Stem("proíba"), "proíb" );
	deepEqual( Stem("proíbe"), "proíb" );
	deepEqual( Stem("proibia"), "proib" );
	deepEqual( Stem("proibição"), "proibiçã" );
	deepEqual( Stem("proibida"), "proib" );
	deepEqual( Stem("proibidas"), "proib" );
	deepEqual( Stem("proibido"), "proib" );
	deepEqual( Stem("proibidos"), "proib" );
	deepEqual( Stem("proibir"), "proib" );
	deepEqual( Stem("proibisse"), "proib" );
	deepEqual( Stem("proibiu"), "proib" );
	deepEqual( Stem("proíbo"), "proíb" );
	deepEqual( Stem("projeção"), "projeçã" );
	deepEqual( Stem("projeções"), "projeçõ" );
	deepEqual( Stem("projeta"), "projet" );
	deepEqual( Stem("projetado"), "projet" );
	deepEqual( Stem("projetados"), "projet" );
	deepEqual( Stem("projetamos"), "projet" );
	deepEqual( Stem("projetando"), "projet" );
	deepEqual( Stem("projetar"), "projet" );
	deepEqual( Stem("projéteis"), "projét" );
	deepEqual( Stem("projétil"), "projétil" );
	deepEqual( Stem("projetista"), "projet" );
	deepEqual( Stem("projeto"), "projet" );
	deepEqual( Stem("projetor"), "projetor" );
	deepEqual( Stem("projetores"), "projetor" );
	deepEqual( Stem("projetos"), "projet" );
	deepEqual( Stem("projetou"), "projet" );
	deepEqual( Stem("prol"), "prol" );
	deepEqual( Stem("prole"), "prol" );
	deepEqual( Stem("proletariado"), "proletari" );
	deepEqual( Stem("proletário"), "proletári" );
	deepEqual( Stem("prolifera"), "prolif" );
	deepEqual( Stem("proliferação"), "prolifer" );
	deepEqual( Stem("proliferaram"), "prolifer" );
	deepEqual( Stem("prólogo"), "prólog" );
	deepEqual( Stem("prolonga"), "prolong" );
	deepEqual( Stem("prolongá"), "prolong" );
	deepEqual( Stem("prolongado"), "prolong" );
	deepEqual( Stem("prolongados"), "prolong" );
	deepEqual( Stem("prolongar"), "prolong" );
	deepEqual( Stem("prolongou"), "prolong" );
	deepEqual( Stem("promessa"), "promess" );
	deepEqual( Stem("promessas"), "promess" );
	deepEqual( Stem("promete"), "promet" );
	deepEqual( Stem("prometem"), "promet" );
	deepEqual( Stem("prometemos"), "promet" );
	deepEqual( Stem("prometendo"), "promet" );
	deepEqual( Stem("prometeram"), "promet" );
	deepEqual( Stem("prometeu"), "promet" );
	deepEqual( Stem("prometi"), "promet" );
	deepEqual( Stem("prometia"), "promet" );
	deepEqual( Stem("prometida"), "promet" );
	deepEqual( Stem("prometido"), "promet" );
	deepEqual( Stem("promiscuidade"), "promiscu" );
	deepEqual( Stem("promíscuo"), "promíscu" );
	deepEqual( Stem("promissor"), "promissor" );
	deepEqual( Stem("promissora"), "promissor" );
	deepEqual( Stem("promissores"), "promissor" );
	deepEqual( Stem("promissória"), "promissór" );
	deepEqual( Stem("promissórias"), "promissór" );
	deepEqual( Stem("promoção"), "promoçã" );
	deepEqual( Stem("promocionais"), "promocion" );
	deepEqual( Stem("promoções"), "promoçõ" );
	deepEqual( Stem("promoter"), "promot" );
	deepEqual( Stem("promotor"), "promotor" );
	deepEqual( Stem("promotora"), "promotor" );
	deepEqual( Stem("promotores"), "promotor" );
	deepEqual( Stem("promotoria"), "promotor" );
	deepEqual( Stem("promove"), "promov" );
	deepEqual( Stem("promovem"), "promov" );
	deepEqual( Stem("promovendo"), "promov" );
	deepEqual( Stem("promover"), "promov" );
	deepEqual( Stem("promoveram"), "promov" );
	deepEqual( Stem("promoveu"), "promov" );
	deepEqual( Stem("promovida"), "promov" );
	deepEqual( Stem("promovido"), "promov" );
	deepEqual( Stem("promovidos"), "promov" );
	deepEqual( Stem("promulgação"), "promulg" );
	deepEqual( Stem("promulgada"), "promulg" );
	deepEqual( Stem("pronta"), "pront" );
	deepEqual( Stem("prontamente"), "pront" );
	deepEqual( Stem("prontas"), "pront" );
	deepEqual( Stem("prontidão"), "prontidã" );
	deepEqual( Stem("pronto"), "pront" );
	deepEqual( Stem("prontos"), "pront" );
	deepEqual( Stem("pronuncia"), "pronunc" );
	deepEqual( Stem("pronúncia"), "pronúnc" );
	deepEqual( Stem("pronunciada"), "pronunc" );
	deepEqual( Stem("pronunciadas"), "pronunc" );
	deepEqual( Stem("pronunciado"), "pronunc" );
	deepEqual( Stem("pronunciamento"), "pronunc" );
	deepEqual( Stem("pronunciamentos"), "pronunc" );
	deepEqual( Stem("pronunciando"), "pronunc" );
	deepEqual( Stem("pronunciar"), "pronunc" );
	deepEqual( Stem("propagam"), "propag" );
	deepEqual( Stem("propaganda"), "propagand" );
	deepEqual( Stem("propagandas"), "propagand" );
	deepEqual( Stem("propagandeado"), "propagand" );
	deepEqual( Stem("propagandeados"), "propagand" );
	deepEqual( Stem("propagandear"), "propagand" );
	deepEqual( Stem("propagandeou"), "propagand" );
	deepEqual( Stem("propagandista"), "propagand" );
	deepEqual( Stem("propagandistas"), "propagand" );
	deepEqual( Stem("propagando"), "propag" );
	deepEqual( Stem("propalada"), "propal" );
	deepEqual( Stem("propato"), "propat" );
	deepEqual( Stem("propensão"), "propensã" );
	deepEqual( Stem("propensas"), "propens" );
	deepEqual( Stem("propensos"), "propens" );
	deepEqual( Stem("propicia"), "propic" );
	deepEqual( Stem("propiciam"), "propic" );
	deepEqual( Stem("propiciará"), "propic" );
	deepEqual( Stem("propício"), "propíci" );
	deepEqual( Stem("propina"), "propin" );
	deepEqual( Stem("propõe"), "propõ" );
	deepEqual( Stem("propõem"), "propõ" );
	deepEqual( Stem("proponho"), "proponh" );
	deepEqual( Stem("propor"), "propor" );
	deepEqual( Stem("proporção"), "proporçã" );
	deepEqual( Stem("proporciona"), "proporcion" );
	deepEqual( Stem("proporcionado"), "proporcion" );
	deepEqual( Stem("proporcionados"), "proporcion" );
	deepEqual( Stem("proporcionais"), "proporcion" );
	deepEqual( Stem("proporcional"), "proporcional" );
	deepEqual( Stem("proporcionando"), "proporcion" );
	deepEqual( Stem("proporcionar"), "proporcion" );
	deepEqual( Stem("proporcionaram"), "proporcion" );
	deepEqual( Stem("proporcionaria"), "proporcion" );
	deepEqual( Stem("proporcionou"), "proporcion" );
	deepEqual( Stem("proporções"), "proporçõ" );
	deepEqual( Stem("propôs"), "propôs" );
	deepEqual( Stem("proposição"), "proposiçã" );
	deepEqual( Stem("propositada"), "proposit" );
	deepEqual( Stem("proposital"), "proposital" );
	deepEqual( Stem("propositalmente"), "proposital" );
	deepEqual( Stem("propósito"), "propósit" );
	deepEqual( Stem("proposta"), "propost" );
	deepEqual( Stem("propostas"), "propost" );
	deepEqual( Stem("proposto"), "propost" );
	deepEqual( Stem("própria"), "própr" );
	deepEqual( Stem("propriamente"), "propri" );
	deepEqual( Stem("próprias"), "própr" );
	deepEqual( Stem("propriedade"), "propriedad" );
	deepEqual( Stem("propriedades"), "propriedad" );
	deepEqual( Stem("proprietária"), "proprietár" );
	deepEqual( Stem("proprietário"), "proprietári" );
	deepEqual( Stem("proprietários"), "proprietári" );
	deepEqual( Stem("próprio"), "própri" );
	deepEqual( Stem("próprios"), "própri" );
	deepEqual( Stem("propulsão"), "propulsã" );
	deepEqual( Stem("propulsora"), "propulsor" );
	deepEqual( Stem("propunha"), "propunh" );
	deepEqual( Stem("propus"), "propus" );
	deepEqual( Stem("propusera"), "propus" );
	deepEqual( Stem("prorroga"), "prorrog" );
	deepEqual( Stem("pros"), "pros" );
	deepEqual( Stem("prós"), "prós" );
	deepEqual( Stem("prosa"), "pros" );
	deepEqual( Stem("prosaica"), "prosaic" );
	deepEqual( Stem("prosaico"), "prosaic" );
	deepEqual( Stem("prosdócimo"), "prosdócim" );
	deepEqual( Stem("prospecção"), "prospecçã" );
	deepEqual( Stem("prospera"), "prosp" );
	deepEqual( Stem("prosperar"), "prosper" );
	deepEqual( Stem("prosperava"), "prosper" );
	deepEqual( Stem("prosperidade"), "prosper" );
	deepEqual( Stem("próspero"), "prósper" );
	deepEqual( Stem("prósperos"), "prósper" );
	deepEqual( Stem("prossegue"), "prosseg" );
	deepEqual( Stem("prosseguimento"), "prossegu" );
	deepEqual( Stem("prosseguir"), "prossegu" );
	deepEqual( Stem("prostaciclina"), "prostaciclin" );
	deepEqual( Stem("próstata"), "próstat" );
	deepEqual( Stem("próstatas"), "próstat" );
	deepEqual( Stem("prostate"), "prostat" );
	deepEqual( Stem("prostatectomia"), "prostatectom" );
	deepEqual( Stem("prostíbulo"), "prostíbul" );
	deepEqual( Stem("prostíbulos"), "prostíbul" );
	deepEqual( Stem("prostituição"), "prostituiçã" );
	deepEqual( Stem("prostituir"), "prostitu" );
	deepEqual( Stem("prostituta"), "prostitut" );
	deepEqual( Stem("prostitutas"), "prostitut" );
	deepEqual( Stem("prostrar"), "prostr" );
	deepEqual( Stem("protagonista"), "protagon" );
	deepEqual( Stem("protagonistas"), "protagon" );
	deepEqual( Stem("protagoniza"), "protagoniz" );
	deepEqual( Stem("protagonizada"), "protagoniz" );
	deepEqual( Stem("protagonizado"), "protagoniz" );
	deepEqual( Stem("protagonizando"), "protagoniz" );
	deepEqual( Stem("protagonizaram"), "protagoniz" );
	deepEqual( Stem("protagonizou"), "protagoniz" );
	deepEqual( Stem("proteção"), "proteçã" );
	deepEqual( Stem("protecionismo"), "protecion" );
	deepEqual( Stem("protecionistas"), "protecion" );
	deepEqual( Stem("proteções"), "proteçõ" );
	deepEqual( Stem("protege"), "proteg" );
	deepEqual( Stem("protegê"), "proteg" );
	deepEqual( Stem("protegem"), "proteg" );
	deepEqual( Stem("proteger"), "proteg" );
	deepEqual( Stem("protegia"), "proteg" );
	deepEqual( Stem("protegido"), "proteg" );
	deepEqual( Stem("protegidos"), "proteg" );
	deepEqual( Stem("proteína"), "proteín" );
	deepEqual( Stem("proteínas"), "proteín" );
	deepEqual( Stem("protelação"), "protel" );
	deepEqual( Stem("prótese"), "prótes" );
	deepEqual( Stem("próteses"), "prótes" );
	deepEqual( Stem("protesta"), "protest" );
	deepEqual( Stem("protestante"), "protest" );
	deepEqual( Stem("protestantes"), "protest" );
	deepEqual( Stem("protestantismo"), "protestant" );
	deepEqual( Stem("protestar"), "protest" );
	deepEqual( Stem("protesto"), "protest" );
	deepEqual( Stem("protestos"), "protest" );
	deepEqual( Stem("protestou"), "protest" );
	deepEqual( Stem("protético"), "protét" );
	deepEqual( Stem("protetor"), "protetor" );
	deepEqual( Stem("protetores"), "protetor" );
	deepEqual( Stem("protocol"), "protocol" );
	deepEqual( Stem("protocolar"), "protocol" );
	deepEqual( Stem("protocolo"), "protocol" );
	deepEqual( Stem("proton"), "proton" );
	deepEqual( Stem("protótipo"), "protótip" );
	deepEqual( Stem("protuberâncias"), "protuberânc" );
	deepEqual( Stem("proust"), "proust" );
	deepEqual( Stem("prova"), "prov" );
	deepEqual( Stem("provação"), "provaçã" );
	deepEqual( Stem("provada"), "prov" );
	deepEqual( Stem("provado"), "prov" );
	deepEqual( Stem("provam"), "prov" );
	deepEqual( Stem("provar"), "prov" );
	deepEqual( Stem("provaram"), "prov" );
	deepEqual( Stem("provas"), "prov" );
	deepEqual( Stem("prováveis"), "prov" );
	deepEqual( Stem("provável"), "provável" );
	deepEqual( Stem("provavelmente"), "provavel" );
	deepEqual( Stem("provedor"), "provedor" );
	deepEqual( Stem("provedora"), "provedor" );
	deepEqual( Stem("provedores"), "provedor" );
	deepEqual( Stem("proveito"), "proveit" );
	deepEqual( Stem("proveniente"), "provenient" );
	deepEqual( Stem("provenientes"), "provenient" );
	deepEqual( Stem("prover"), "prov" );
	deepEqual( Stem("proveta"), "provet" );
	deepEqual( Stem("providência"), "provident" );
	deepEqual( Stem("providenciada"), "providenc" );
	deepEqual( Stem("providenciam"), "providenc" );
	deepEqual( Stem("providenciar"), "providenc" );
	deepEqual( Stem("providenciaram"), "providenc" );
	deepEqual( Stem("providências"), "provident" );
	deepEqual( Stem("providenciou"), "providenc" );
	deepEqual( Stem("província"), "provínc" );
	deepEqual( Stem("províncias"), "provínc" );
	deepEqual( Stem("provisões"), "provisõ" );
	deepEqual( Stem("provisória"), "provisór" );
	deepEqual( Stem("provisoriamente"), "provisori" );
	deepEqual( Stem("provisórias"), "provisór" );
	deepEqual( Stem("provisório"), "provisóri" );
	deepEqual( Stem("provisórios"), "provisóri" );
	deepEqual( Stem("provoca"), "provoc" );
	deepEqual( Stem("provocação"), "provoc" );
	deepEqual( Stem("provocada"), "provoc" );
	deepEqual( Stem("provocadas"), "provoc" );
	deepEqual( Stem("provocado"), "provoc" );
	deepEqual( Stem("provocador"), "provoc" );
	deepEqual( Stem("provocados"), "provoc" );
	deepEqual( Stem("provocam"), "provoc" );
	deepEqual( Stem("provocando"), "provoc" );
	deepEqual( Stem("provocar"), "provoc" );
	deepEqual( Stem("provocara"), "provoc" );
	deepEqual( Stem("provocaram"), "provoc" );
	deepEqual( Stem("provocaria"), "provoc" );
	deepEqual( Stem("provocariam"), "provoc" );
	deepEqual( Stem("provocasse"), "provoc" );
	deepEqual( Stem("provocativa"), "provoc" );
	deepEqual( Stem("provocativas"), "provoc" );
	deepEqual( Stem("provocou"), "provoc" );
	deepEqual( Stem("provoque"), "provoqu" );
	deepEqual( Stem("provou"), "prov" );
	deepEqual( Stem("próxima"), "próxim" );
	deepEqual( Stem("próximas"), "próxim" );
	deepEqual( Stem("proximidade"), "proxim" );
	deepEqual( Stem("proximidades"), "proxim" );
	deepEqual( Stem("próximo"), "próxim" );
	deepEqual( Stem("próximos"), "próx" );
	deepEqual( Stem("prozac"), "prozac" );
	deepEqual( Stem("prudência"), "prudênc" );
	deepEqual( Stem("prudente"), "prudent" );
	deepEqual( Stem("prumo"), "prum" );
	deepEqual( Stem("ps"), "ps" );
	deepEqual( Stem("psa"), "psa" );
	deepEqual( Stem("psb"), "psb" );
	deepEqual( Stem("psdb"), "psdb" );
	deepEqual( Stem("pseudo"), "pseud" );
	deepEqual( Stem("psi"), "psi" );
	deepEqual( Stem("psicanálise"), "psicanális" );
	deepEqual( Stem("psicanalista"), "psicanal" );
	deepEqual( Stem("psicanalistas"), "psicanal" );
	deepEqual( Stem("psicobiologia"), "psicobiolog" );
	deepEqual( Stem("psicobiólogo"), "psicobiólog" );
	deepEqual( Stem("psicofarmacologia"), "psicofarmacolog" );
	deepEqual( Stem("psicóloga"), "psicólog" );
	deepEqual( Stem("psicologia"), "psicolog" );
	deepEqual( Stem("psicológica"), "psicológ" );
	deepEqual( Stem("psicologicamente"), "psicolog" );
	deepEqual( Stem("psicológicas"), "psicológ" );
	deepEqual( Stem("psicológico"), "psicológ" );
	deepEqual( Stem("psicólogicos"), "psicólog" );
	deepEqual( Stem("psicológicos"), "psicológ" );
	deepEqual( Stem("psicólogo"), "psicólog" );
	deepEqual( Stem("psicólogos"), "psicólog" );
	deepEqual( Stem("psicopedagoga"), "psicopedagog" );
	deepEqual( Stem("psicoses"), "psicos" );
	deepEqual( Stem("psicossocial"), "psicossocial" );
	deepEqual( Stem("psicoterapeuta"), "psicoterapeut" );
	deepEqual( Stem("psicotrópicas"), "psicotróp" );
	deepEqual( Stem("psicotrópico"), "psicotróp" );
	deepEqual( Stem("psicotrópicos"), "psicotróp" );
	deepEqual( Stem("psique"), "psiqu" );
	deepEqual( Stem("psiquiatra"), "psiquiatr" );
	deepEqual( Stem("psiquiatras"), "psiquiatr" );
	deepEqual( Stem("psiquiatria"), "psiquiatr" );
	deepEqual( Stem("psiquiátricas"), "psiquiátr" );
	deepEqual( Stem("psiquiátrico"), "psiquiátr" );
	deepEqual( Stem("psiquicamente"), "psiquic" );
	deepEqual( Stem("psíquicas"), "psíquic" );
	deepEqual( Stem("psquiatra"), "psquiatr" );
	deepEqual( Stem("pt"), "pt" );
	deepEqual( Stem("ptb"), "ptb" );
	deepEqual( Stem("publica"), "public" );
	deepEqual( Stem("pública"), "públic" );
	deepEqual( Stem("publicação"), "public" );
	deepEqual( Stem("publicações"), "public" );
	deepEqual( Stem("publicada"), "public" );
	deepEqual( Stem("publicadas"), "public" );
	deepEqual( Stem("publicado"), "public" );
	deepEqual( Stem("publicados"), "public" );
	deepEqual( Stem("publicamente"), "public" );
	deepEqual( Stem("publicar"), "public" );
	deepEqual( Stem("publicaram"), "public" );
	deepEqual( Stem("públicas"), "públic" );
	deepEqual( Stem("publicava"), "public" );
	deepEqual( Stem("publicavam"), "public" );
	deepEqual( Stem("publicidade"), "public" );
	deepEqual( Stem("publicis"), "public" );
	deepEqual( Stem("publicitária"), "publicitár" );
	deepEqual( Stem("publicitárias"), "publicitár" );
	deepEqual( Stem("publicitário"), "publicitári" );
	deepEqual( Stem("publicitários"), "publicitári" );
	deepEqual( Stem("publico"), "public" );
	deepEqual( Stem("público"), "públic" );
	deepEqual( Stem("públicos"), "públic" );
	deepEqual( Stem("publicou"), "public" );
	deepEqual( Stem("publisher"), "publish" );
	deepEqual( Stem("pubs"), "pubs" );
	deepEqual( Stem("puc"), "puc" );
	deepEqual( Stem("pucará"), "puc" );
	deepEqual( Stem("puccini"), "puccin" );
	deepEqual( Stem("pude"), "pud" );
	deepEqual( Stem("puder"), "pud" );
	deepEqual( Stem("pudera"), "pud" );
	deepEqual( Stem("puderam"), "pud" );
	deepEqual( Stem("puderem"), "pud" );
	deepEqual( Stem("pudesse"), "pud" );
	deepEqual( Stem("pudessem"), "pud" );
	deepEqual( Stem("pueri"), "puer" );
	deepEqual( Stem("pufe"), "puf" );
	deepEqual( Stem("pula"), "pul" );
	deepEqual( Stem("pulam"), "pul" );
	deepEqual( Stem("pulando"), "pul" );
	deepEqual( Stem("pular"), "pul" );
	deepEqual( Stem("pulassem"), "pul" );
	deepEqual( Stem("pulava"), "pul" );
	deepEqual( Stem("pulavam"), "pul" );
	deepEqual( Stem("pule"), "pul" );
	deepEqual( Stem("puleiro"), "puleir" );
	deepEqual( Stem("pulmão"), "pulmã" );
	deepEqual( Stem("pulmões"), "pulmõ" );
	deepEqual( Stem("pulmonar"), "pulmon" );
	deepEqual( Stem("pulmonária"), "pulmonár" );
	deepEqual( Stem("pulo"), "pul" );
	deepEqual( Stem("pulou"), "pul" );
	deepEqual( Stem("pulquéria"), "pulquér" );
	deepEqual( Stem("pulsação"), "pulsaçã" );
	deepEqual( Stem("pulseira"), "pulseir" );
	deepEqual( Stem("pulso"), "puls" );
	deepEqual( Stem("pulsos"), "puls" );
	deepEqual( Stem("pululam"), "pulul" );
	deepEqual( Stem("pulverizadas"), "pulveriz" );
	deepEqual( Stem("pulverizado"), "pulveriz" );
	deepEqual( Stem("pulverizados"), "pulveriz" );
	deepEqual( Stem("pulverizou"), "pulveriz" );
	deepEqual( Stem("pumpkins"), "pumpkins" );
	deepEqual( Stem("puna"), "pun" );
	deepEqual( Stem("pune"), "pun" );
	deepEqual( Stem("punha"), "punh" );
	deepEqual( Stem("punhado"), "punh" );
	deepEqual( Stem("punhal"), "punhal" );
	deepEqual( Stem("punho"), "punh" );
	deepEqual( Stem("puni"), "pun" );
	deepEqual( Stem("punição"), "puniçã" );
	deepEqual( Stem("punições"), "puniçõ" );
	deepEqual( Stem("punida"), "pun" );
	deepEqual( Stem("punido"), "pun" );
	deepEqual( Stem("punidos"), "pun" );
	deepEqual( Stem("punindo"), "pun" );
	deepEqual( Stem("punir"), "pun" );
	deepEqual( Stem("punks"), "punks" );
	deepEqual( Stem("pura"), "pur" );
	deepEqual( Stem("puramente"), "pur" );
	deepEqual( Stem("pureza"), "purez" );
	deepEqual( Stem("purgativa"), "purgat" );
	deepEqual( Stem("purismo"), "purism" );
	deepEqual( Stem("puritanismo"), "puritan" );
	deepEqual( Stem("puritano"), "puritan" );
	deepEqual( Stem("puritanos"), "puritan" );
	deepEqual( Stem("puro"), "pur" );
	deepEqual( Stem("puros"), "pur" );
	deepEqual( Stem("purple"), "purpl" );
	deepEqual( Stem("puseram"), "pus" );
	deepEqual( Stem("pustiglione"), "pustiglion" );
	deepEqual( Stem("puta"), "put" );
	deepEqual( Stem("puxa"), "pux" );
	deepEqual( Stem("puxada"), "pux" );
	deepEqual( Stem("puxados"), "pux" );
	deepEqual( Stem("puxam"), "pux" );
	deepEqual( Stem("puxando"), "pux" );
	deepEqual( Stem("puxão"), "puxã" );
	deepEqual( Stem("puxar"), "pux" );
	deepEqual( Stem("puxaram"), "pux" );
	deepEqual( Stem("puxou"), "pux" );
	deepEqual( Stem("puzzi"), "puzz" );
	deepEqual( Stem("pv"), "pv" );
	deepEqual( Stem("q"), "q" );
	deepEqual( Stem("quadra"), "quadr" );
	deepEqual( Stem("quadrado"), "quadr" );
	deepEqual( Stem("quadrados"), "quadr" );
	deepEqual( Stem("quadras"), "quadr" );
	deepEqual( Stem("quadril"), "quadril" );
	deepEqual( Stem("quadrilha"), "quadrilh" );
	deepEqual( Stem("quadrilhas"), "quadrilh" );
	deepEqual( Stem("quadrinho"), "quadrinh" );
	deepEqual( Stem("quadrinhos"), "quadrinh" );
	deepEqual( Stem("quadris"), "quadr" );
	deepEqual( Stem("quadro"), "quadr" );
	deepEqual( Stem("quadros"), "quadr" );
	deepEqual( Stem("quais"), "qua" );
	deepEqual( Stem("quaisquer"), "quaisqu" );
	deepEqual( Stem("qual"), "qual" );
	deepEqual( Stem("qualidade"), "qualidad" );
	deepEqual( Stem("qualidades"), "qualidad" );
	deepEqual( Stem("qualificação"), "qualific" );
	deepEqual( Stem("qualificações"), "qualific" );
	deepEqual( Stem("qualificada"), "qualific" );
	deepEqual( Stem("qualificadas"), "qualific" );
	deepEqual( Stem("qualificado"), "qualific" );
	deepEqual( Stem("qualificar"), "qualific" );
	deepEqual( Stem("qualificaram"), "qualific" );
	deepEqual( Stem("qualificativo"), "qualific" );
	deepEqual( Stem("qualificou"), "qualific" );
	deepEqual( Stem("qualitativas"), "qualit" );
	deepEqual( Stem("qualitativo"), "qualit" );
	deepEqual( Stem("quality"), "quality" );
	deepEqual( Stem("qualquer"), "qualqu" );
	deepEqual( Stem("quando"), "quand" );
	deepEqual( Stem("quantas"), "quant" );
	deepEqual( Stem("quantia"), "quant" );
	deepEqual( Stem("quântica"), "quântic" );
	deepEqual( Stem("quantidade"), "quantidad" );
	deepEqual( Stem("quantidades"), "quantidad" );
	deepEqual( Stem("quantificada"), "quantific" );
	deepEqual( Stem("quantificar"), "quantific" );
	deepEqual( Stem("quantitativas"), "quantit" );
	deepEqual( Stem("quanto"), "quant" );
	deepEqual( Stem("quantos"), "quant" );
	deepEqual( Stem("quantum"), "quantum" );
	deepEqual( Stem("quão"), "quã" );
	deepEqual( Stem("quarenta"), "quarent" );
	deepEqual( Stem("quaresma"), "quaresm" );
	deepEqual( Stem("quarta"), "quart" );
	deepEqual( Stem("quartas"), "quart" );
	deepEqual( Stem("quarteirão"), "quart" );
	deepEqual( Stem("quartéis"), "quart" );
	deepEqual( Stem("quartel"), "quartel" );
	deepEqual( Stem("quarteto"), "quartet" );
	deepEqual( Stem("quartinho"), "quartinh" );
	deepEqual( Stem("quarto"), "quart" );
	deepEqual( Stem("quartos"), "quart" );
	deepEqual( Stem("quase"), "quas" );
	deepEqual( Stem("quatro"), "quatr" );
	deepEqual( Stem("quatrocentões"), "quatrocentõ" );
	deepEqual( Stem("qubilah"), "qubilah" );
	deepEqual( Stem("que"), "que" );
	deepEqual( Stem("quê"), "quê" );
	deepEqual( Stem("quebra"), "quebr" );
	deepEqual( Stem("quebrada"), "quebr" );
	deepEqual( Stem("quebradas"), "quebr" );
	deepEqual( Stem("quebradeira"), "quebradeir" );
	deepEqual( Stem("quebrado"), "quebr" );
	deepEqual( Stem("quebrados"), "quebr" );
	deepEqual( Stem("quebramos"), "quebr" );
	deepEqual( Stem("quebrando"), "quebr" );
	deepEqual( Stem("quebrângulo"), "quebrângul" );
	deepEqual( Stem("quebrante"), "quebrant" );
	deepEqual( Stem("quebrar"), "quebr" );
	deepEqual( Stem("quebraram"), "quebr" );
	deepEqual( Stem("quebrarem"), "quebr" );
	deepEqual( Stem("quebras"), "quebr" );
	deepEqual( Stem("quebrassem"), "quebr" );
	deepEqual( Stem("quebrava"), "quebr" );
	deepEqual( Stem("quebrei"), "quebr" );
	deepEqual( Stem("quebrem"), "quebr" );
	deepEqual( Stem("quebrou"), "quebr" );
	deepEqual( Stem("queda"), "qued" );
	deepEqual( Stem("quedas"), "qued" );
	deepEqual( Stem("quedistas"), "quedist" );
	deepEqual( Stem("quêêê"), "quêê" );
	deepEqual( Stem("queen"), "queen" );
	deepEqual( Stem("queens"), "queens" );
	deepEqual( Stem("queijo"), "queij" );
	deepEqual( Stem("queima"), "queim" );
	deepEqual( Stem("queimá"), "queim" );
	deepEqual( Stem("queimada"), "queim" );
	deepEqual( Stem("queimado"), "queim" );
	deepEqual( Stem("queimados"), "queim" );
	deepEqual( Stem("queimaduras"), "queimadur" );
	deepEqual( Stem("queimam"), "queim" );
	deepEqual( Stem("queimando"), "queim" );
	deepEqual( Stem("queimar"), "queim" );
	deepEqual( Stem("queimava"), "queim" );
	deepEqual( Stem("queimou"), "queim" );
	deepEqual( Stem("queira"), "queir" );
	deepEqual( Stem("queiram"), "que" );
	deepEqual( Stem("queiroga"), "queirog" );
	deepEqual( Stem("queirós"), "queirós" );
	deepEqual( Stem("queiroz"), "queiroz" );
	deepEqual( Stem("queixa"), "queix" );
	deepEqual( Stem("queixado"), "queix" );
	deepEqual( Stem("queixam"), "queix" );
	deepEqual( Stem("queixando"), "queix" );
	deepEqual( Stem("queixar"), "queix" );
	deepEqual( Stem("queixas"), "queix" );
	deepEqual( Stem("queixavam"), "queix" );
	deepEqual( Stem("queixo"), "queix" );
	deepEqual( Stem("queixou"), "queix" );
	deepEqual( Stem("queixumes"), "queixum" );
	deepEqual( Stem("quela"), "quel" );
	deepEqual( Stem("quelóides"), "quelóid" );
	deepEqual( Stem("quem"), "quem" );
	deepEqual( Stem("quênia"), "quên" );
	deepEqual( Stem("quente"), "quent" );
	deepEqual( Stem("quentes"), "quent" );
	deepEqual( Stem("quer"), "quer" );
	deepEqual( Stem("quércia"), "quérc" );
	deepEqual( Stem("querela"), "querel" );
	deepEqual( Stem("querem"), "quer" );
	deepEqual( Stem("queremos"), "quer" );
	deepEqual( Stem("querendo"), "quer" );
	deepEqual( Stem("querer"), "quer" );
	deepEqual( Stem("queria"), "quer" );
	deepEqual( Stem("queriam"), "quer" );
	deepEqual( Stem("queríamos"), "quer" );
	deepEqual( Stem("querida"), "quer" );
	deepEqual( Stem("queridinho"), "queridinh" );
	deepEqual( Stem("querido"), "quer" );
	deepEqual( Stem("querino"), "querin" );
	deepEqual( Stem("quero"), "quer" );
	deepEqual( Stem("querosene"), "querosen" );
	deepEqual( Stem("quesito"), "quesit" );
	deepEqual( Stem("quesitos"), "quesit" );
	deepEqual( Stem("quest"), "quest" );
	deepEqual( Stem("questão"), "questã" );
	deepEqual( Stem("questiona"), "question" );
	deepEqual( Stem("questionada"), "question" );
	deepEqual( Stem("questionado"), "question" );
	deepEqual( Stem("questionam"), "question" );
	deepEqual( Stem("questionamentos"), "question" );
	deepEqual( Stem("questionar"), "question" );
	deepEqual( Stem("questiono"), "question" );
	deepEqual( Stem("questionou"), "question" );
	deepEqual( Stem("questões"), "questõ" );
	deepEqual( Stem("quiabo"), "quiab" );
	deepEqual( Stem("quicaram"), "quic" );
	deepEqual( Stem("quickly"), "quickly" );
	deepEqual( Stem("quieto"), "quiet" );
	deepEqual( Stem("quietos"), "quiet" );
	deepEqual( Stem("quilate"), "quilat" );
	deepEqual( Stem("quilates"), "quilat" );
	deepEqual( Stem("quilinhos"), "quilinh" );
	deepEqual( Stem("quilo"), "quil" );
	deepEqual( Stem("quilombo"), "quilomb" );
	deepEqual( Stem("quilométricas"), "quilométr" );
	deepEqual( Stem("quilométricos"), "quilométr" );
	deepEqual( Stem("quilômetro"), "quilômetr" );
	deepEqual( Stem("quilômetros"), "quilômetr" );
	deepEqual( Stem("quilos"), "quil" );
	deepEqual( Stem("química"), "químic" );
	deepEqual( Stem("químicas"), "químic" );
	deepEqual( Stem("químico"), "químic" );
	deepEqual( Stem("químicos"), "químic" );
	deepEqual( Stem("quimioterapia"), "quimioterap" );
	deepEqual( Stem("quimioterápicos"), "quimioteráp" );
	deepEqual( Stem("quimono"), "quimon" );
	deepEqual( Stem("quincas"), "quinc" );
	deepEqual( Stem("quinhão"), "quinhã" );
	deepEqual( Stem("quinhentos"), "quinhent" );
	deepEqual( Stem("quinn"), "quinn" );
	deepEqual( Stem("quino"), "quin" );
	deepEqual( Stem("quinta"), "quint" );
	deepEqual( Stem("quintal"), "quintal" );
	deepEqual( Stem("quintana"), "quintan" );
	deepEqual( Stem("quintanilha"), "quintanilh" );
	deepEqual( Stem("quintão"), "quintã" );
	deepEqual( Stem("quintessência"), "quintessent" );
	deepEqual( Stem("quintino"), "quintin" );
	deepEqual( Stem("quinto"), "quint" );
	deepEqual( Stem("quintos"), "quint" );
	deepEqual( Stem("quintuplicou"), "quintuplic" );
	deepEqual( Stem("quinze"), "quinz" );
	deepEqual( Stem("quinzena"), "quinzen" );
	deepEqual( Stem("quiosque"), "quiosqu" );
	deepEqual( Stem("quis"), "quis" );
	deepEqual( Stem("quisemos"), "quis" );
	deepEqual( Stem("quiser"), "quis" );
	deepEqual( Stem("quiseram"), "quis" );
	deepEqual( Stem("quiserem"), "quis" );
	deepEqual( Stem("quisesse"), "quis" );
	deepEqual( Stem("quisessem"), "quis" );
	deepEqual( Stem("quitação"), "quitaçã" );
	deepEqual( Stem("quitado"), "quit" );
	deepEqual( Stem("quitar"), "quit" );
	deepEqual( Stem("quitinete"), "quitinet" );
	deepEqual( Stem("quixotesco"), "quixotesc" );
	deepEqual( Stem("quo"), "quo" );
	deepEqual( Stem("quórum"), "quórum" );
	deepEqual( Stem("quotidianamente"), "quotidian" );
	deepEqual( Stem("r"), "r" );
	deepEqual( Stem("ra"), "ra" );
	deepEqual( Stem("rá"), "rá" );
	deepEqual( Stem("raaf"), "raaf" );
	deepEqual( Stem("rabelo"), "rabel" );
	deepEqual( Stem("rabin"), "rabin" );
	deepEqual( Stem("rabino"), "rabin" );
	deepEqual( Stem("rabinovich"), "rabinovich" );
	deepEqual( Stem("rabinovici"), "rabinovic" );
	deepEqual( Stem("rabo"), "rab" );
	deepEqual( Stem("rabugento"), "rabugent" );
	deepEqual( Stem("raça"), "rac" );
	deepEqual( Stem("ração"), "raçã" );
	deepEqual( Stem("raças"), "rac" );
	deepEqual( Stem("racha"), "rach" );
	deepEqual( Stem("rachados"), "rach" );
	deepEqual( Stem("rachadura"), "rachadur" );
	deepEqual( Stem("rachas"), "rach" );
	deepEqual( Stem("rachel"), "rachel" );
	deepEqual( Stem("raciais"), "rac" );
	deepEqual( Stem("racial"), "racial" );
	deepEqual( Stem("raciocício"), "raciocíci" );
	deepEqual( Stem("raciocina"), "raciocin" );
	deepEqual( Stem("raciocínio"), "raciocíni" );
	deepEqual( Stem("racionadas"), "racion" );
	deepEqual( Stem("racionais"), "racion" );
	deepEqual( Stem("racional"), "racional" );
	deepEqual( Stem("racionalidade"), "racional" );
	deepEqual( Stem("racionalismo"), "racional" );
	deepEqual( Stem("racismo"), "racism" );
	deepEqual( Stem("racistas"), "racist" );
	deepEqual( Stem("radamés"), "radamés" );
	deepEqual( Stem("radar"), "rad" );
	deepEqual( Stem("radares"), "rad" );
	deepEqual( Stem("radiação"), "radiaçã" );
	deepEqual( Stem("radicado"), "radic" );
	deepEqual( Stem("radicados"), "radic" );
	deepEqual( Stem("radicais"), "radic" );
	deepEqual( Stem("radical"), "radical" );
	deepEqual( Stem("radicalismo"), "radical" );
	deepEqual( Stem("radicalizou"), "radicaliz" );
	deepEqual( Stem("radicalmente"), "radical" );
	deepEqual( Stem("rádio"), "rádi" );
	deepEqual( Stem("radioativa"), "radioat" );
	deepEqual( Stem("radioativas"), "radioat" );
	deepEqual( Stem("radioatividade"), "radioat" );
	deepEqual( Stem("radiografia"), "radiograf" );
	deepEqual( Stem("radiografou"), "radiograf" );
	deepEqual( Stem("radiologia"), "radiolog" );
	deepEqual( Stem("radiologista"), "radiolog" );
	deepEqual( Stem("rádios"), "rádi" );
	deepEqual( Stem("radiosa"), "radios" );
	deepEqual( Stem("radiotécnica"), "radiotécn" );
	deepEqual( Stem("radioterapeutas"), "radioterapeut" );
	deepEqual( Stem("radioterapia"), "radioterap" );
	deepEqual( Stem("radunz"), "radunz" );
	deepEqual( Stem("rafael"), "rafael" );
	deepEqual( Stem("rafaela"), "rafael" );
	deepEqual( Stem("raga"), "rag" );
	deepEqual( Stem("ragas"), "rag" );
	deepEqual( Stem("ragsdale"), "ragsdal" );
	deepEqual( Stem("rahim"), "rahim" );
	deepEqual( Stem("raia"), "rai" );
	deepEqual( Stem("raimar"), "raim" );
	deepEqual( Stem("raimundo"), "raimund" );
	deepEqual( Stem("rain"), "rain" );
	deepEqual( Stem("rainer"), "rain" );
	deepEqual( Stem("rainha"), "rainh" );
	deepEqual( Stem("raio"), "rai" );
	deepEqual( Stem("raios"), "rai" );
	deepEqual( Stem("raiva"), "raiv" );
	deepEqual( Stem("raivoso"), "raivos" );
	deepEqual( Stem("raiz"), "raiz" );
	deepEqual( Stem("raízes"), "raíz" );
	deepEqual( Stem("rajada"), "raj" );
	deepEqual( Stem("rajadas"), "raj" );
	deepEqual( Stem("rala"), "ral" );
	deepEqual( Stem("ralo"), "ral" );
	deepEqual( Stem("ralos"), "ral" );
	deepEqual( Stem("ralph"), "ralph" );
	deepEqual( Stem("ralston"), "ralston" );
	deepEqual( Stem("ram"), "ram" );
	deepEqual( Stem("ramais"), "ram" );
	deepEqual( Stem("ramalhete"), "ramalhet" );
	deepEqual( Stem("ramalho"), "ramalh" );
	deepEqual( Stem("ramallah"), "ramallah" );
	deepEqual( Stem("rambo"), "ramb" );
	deepEqual( Stem("ramey"), "ramey" );
	deepEqual( Stem("ramirez"), "ramirez" );
	deepEqual( Stem("ramírez"), "ramírez" );
	deepEqual( Stem("ramiro"), "ramir" );
	deepEqual( Stem("ramo"), "ram" );
	deepEqual( Stem("ramon"), "ramon" );
	deepEqual( Stem("ramos"), "ram" );
	deepEqual( Stem("rampa"), "ramp" );
	deepEqual( Stem("ranariddh"), "ranariddh" );
	deepEqual( Stem("rancho"), "ranch" );
	deepEqual( Stem("ranço"), "ranc" );
	deepEqual( Stem("rancor"), "rancor" );
	deepEqual( Stem("rançosa"), "ranços" );
	deepEqual( Stem("rand"), "rand" );
	deepEqual( Stem("random"), "random" );
	deepEqual( Stem("randy"), "randy" );
	deepEqual( Stem("ranelagh"), "ranelagh" );
	deepEqual( Stem("rangel"), "rangel" );
	deepEqual( Stem("ranger"), "rang" );
	deepEqual( Stem("rangers"), "rangers" );
	deepEqual( Stem("rangido"), "rang" );
	deepEqual( Stem("ranheta"), "ranhet" );
	deepEqual( Stem("ranieri"), "ranier" );
	deepEqual( Stem("ranking"), "ranking" );
	deepEqual( Stem("rap"), "rap" );
	deepEqual( Stem("rapado"), "rap" );
	deepEqual( Stem("rapadura"), "rapadur" );
	deepEqual( Stem("rapaz"), "rapaz" );
	deepEqual( Stem("rapazes"), "rapaz" );
	deepEqual( Stem("rapaziada"), "rapazi" );
	deepEqual( Stem("raphael"), "raphael" );
	deepEqual( Stem("rapid"), "rapid" );
	deepEqual( Stem("rápida"), "ráp" );
	deepEqual( Stem("rapidamente"), "rapid" );
	deepEqual( Stem("rápidas"), "ráp" );
	deepEqual( Stem("rapidez"), "rapidez" );
	deepEqual( Stem("rápido"), "ráp" );
	deepEqual( Stem("rápidos"), "ráp" );
	deepEqual( Stem("rapinado"), "rapin" );
	deepEqual( Stem("raposo"), "rapos" );
	deepEqual( Stem("rapper"), "rapp" );
	deepEqual( Stem("rappers"), "rappers" );
	deepEqual( Stem("raquel"), "raquel" );
	deepEqual( Stem("raquetada"), "raquet" );
	deepEqual( Stem("raquetadas"), "raquet" );
	deepEqual( Stem("raquete"), "raquet" );
	deepEqual( Stem("raquetes"), "raquet" );
	deepEqual( Stem("raquíticas"), "raquít" );
	deepEqual( Stem("rara"), "rar" );
	deepEqual( Stem("raramente"), "rar" );
	deepEqual( Stem("raras"), "rar" );
	deepEqual( Stem("rarefeitas"), "rarefeit" );
	deepEqual( Stem("rarefeito"), "rarefeit" );
	deepEqual( Stem("raridade"), "raridad" );
	deepEqual( Stem("raridades"), "raridad" );
	deepEqual( Stem("raríssima"), "raríssim" );
	deepEqual( Stem("raríssimas"), "raríssim" );
	deepEqual( Stem("raríssimo"), "raríssim" );
	deepEqual( Stem("raríssimos"), "raríss" );
	deepEqual( Stem("rarities"), "rariti" );
	deepEqual( Stem("raro"), "rar" );
	deepEqual( Stem("raros"), "rar" );
	deepEqual( Stem("rasas"), "ras" );
	deepEqual( Stem("rasgado"), "rasg" );
	deepEqual( Stem("rasgar"), "rasg" );
	deepEqual( Stem("rasgaram"), "rasg" );
	deepEqual( Stem("rasgo"), "rasg" );
	deepEqual( Stem("rasi"), "ras" );
	deepEqual( Stem("rasos"), "ras" );
	deepEqual( Stem("raspadinha"), "raspadinh" );
	deepEqual( Stem("raspadinhas"), "raspadinh" );
	deepEqual( Stem("raspados"), "rasp" );
	deepEqual( Stem("rastafári"), "rastafár" );
	deepEqual( Stem("rastejando"), "rastej" );
	deepEqual( Stem("rastejantes"), "rastej" );
	deepEqual( Stem("rastreadas"), "rastr" );
	deepEqual( Stem("rastreamento"), "rastreament" );
	deepEqual( Stem("rastreando"), "rastr" );
	deepEqual( Stem("rastro"), "rastr" );
	deepEqual( Stem("ratas"), "rat" );
	deepEqual( Stem("ratear"), "rat" );
	deepEqual( Stem("ratificada"), "ratific" );
	deepEqual( Stem("ratificado"), "ratific" );
	deepEqual( Stem("ratificar"), "ratific" );
	deepEqual( Stem("ratificassem"), "ratific" );
	deepEqual( Stem("ratinho"), "ratinh" );
	deepEqual( Stem("ratinhos"), "ratinh" );
	deepEqual( Stem("rato"), "rat" );
	deepEqual( Stem("ratoeira"), "ratoeir" );
	deepEqual( Stem("ratón"), "ratón" );
	deepEqual( Stem("ratos"), "rat" );
	deepEqual( Stem("ratton"), "ratton" );
	deepEqual( Stem("rauch"), "rauch" );
	deepEqual( Stem("raul"), "raul" );
	deepEqual( Stem("raupp"), "raupp" );
	deepEqual( Stem("raw"), "raw" );
	deepEqual( Stem("raymond"), "raymond" );
	deepEqual( Stem("rayovac"), "rayovac" );
	deepEqual( Stem("razão"), "razã" );
	deepEqual( Stem("razoáveis"), "razo" );
	deepEqual( Stem("razoável"), "razoável" );
	deepEqual( Stem("razoavelmente"), "razoavel" );
	deepEqual( Stem("razões"), "razõ" );
	deepEqual( Stem("rbs"), "rbs" );
	deepEqual( Stem("rda"), "rda" );
	deepEqual( Stem("rdx"), "rdx" );
	deepEqual( Stem("re"), "re" );
	deepEqual( Stem("ré"), "ré" );
	deepEqual( Stem("reabastecer"), "reabastec" );
	deepEqual( Stem("reabastecimento"), "reabastec" );
	deepEqual( Stem("reaberto"), "reabert" );
	deepEqual( Stem("reabilita"), "reabilit" );
	deepEqual( Stem("reabilitação"), "reabilit" );
	deepEqual( Stem("reabilitado"), "reabilit" );
	deepEqual( Stem("reabilitar"), "reabilit" );
	deepEqual( Stem("reabrem"), "reabr" );
	deepEqual( Stem("reabriram"), "reabr" );
	deepEqual( Stem("reabsorção"), "reabsorçã" );
	deepEqual( Stem("reação"), "reaçã" );
	deepEqual( Stem("reacionária"), "reacionár" );
	deepEqual( Stem("reações"), "reaçõ" );
	deepEqual( Stem("readaptou"), "readapt" );
	deepEqual( Stem("ready"), "ready" );
	deepEqual( Stem("reafirma"), "reafirm" );
	deepEqual( Stem("reafirmada"), "reafirm" );
	deepEqual( Stem("reafirmam"), "reafirm" );
	deepEqual( Stem("reafirmar"), "reafirm" );
	deepEqual( Stem("reagan"), "reagan" );
	deepEqual( Stem("reage"), "reag" );
	deepEqual( Stem("reagem"), "reag" );
	deepEqual( Stem("reagi"), "reag" );
	deepEqual( Stem("reagindo"), "reag" );
	deepEqual( Stem("reagir"), "reag" );
	deepEqual( Stem("reagiram"), "reag" );
	deepEqual( Stem("reagiriam"), "reag" );
	deepEqual( Stem("reagissem"), "reag" );
	deepEqual( Stem("reagiu"), "reag" );
	deepEqual( Stem("reais"), "rea" );
	deepEqual( Stem("reajo"), "reaj" );
	deepEqual( Stem("reajuste"), "reajust" );
	deepEqual( Stem("real"), "real" );
	deepEqual( Stem("realça"), "realc" );
	deepEqual( Stem("realejos"), "realej" );
	deepEqual( Stem("reali"), "real" );
	deepEqual( Stem("realidade"), "realidad" );
	deepEqual( Stem("realidades"), "realidad" );
	deepEqual( Stem("realismo"), "realism" );
	deepEqual( Stem("realista"), "realist" );
	deepEqual( Stem("realistas"), "realist" );
	deepEqual( Stem("realisticamente"), "realist" );
	deepEqual( Stem("realiza"), "realiz" );
	deepEqual( Stem("realizá"), "realiz" );
	deepEqual( Stem("realização"), "realiz" );
	deepEqual( Stem("realizações"), "realiz" );
	deepEqual( Stem("realizada"), "realiz" );
	deepEqual( Stem("realizadas"), "realiz" );
	deepEqual( Stem("realizado"), "realiz" );
	deepEqual( Stem("realizados"), "realiz" );
	deepEqual( Stem("realizam"), "realiz" );
	deepEqual( Stem("realizando"), "realiz" );
	deepEqual( Stem("realizar"), "realiz" );
	deepEqual( Stem("realizaram"), "realiz" );
	deepEqual( Stem("realizou"), "realiz" );
	deepEqual( Stem("realmente"), "realment" );
	deepEqual( Stem("reanimar"), "reanim" );
	deepEqual( Stem("reaparecido"), "reaparec" );
	deepEqual( Stem("reaprender"), "reaprend" );
	deepEqual( Stem("reaprendeu"), "reaprend" );
	deepEqual( Stem("reaproximação"), "reaproxim" );
	deepEqual( Stem("reard"), "reard" );
	deepEqual( Stem("rearranjos"), "rearranj" );
	deepEqual( Stem("reativação"), "reativ" );
	deepEqual( Stem("reativar"), "reativ" );
	deepEqual( Stem("reavaliação"), "reavali" );
	deepEqual( Stem("reavaliada"), "reavali" );
	deepEqual( Stem("reaver"), "reav" );
	deepEqual( Stem("rebaixado"), "rebaix" );
	deepEqual( Stem("rebaixamento"), "rebaix" );
	deepEqual( Stem("rebaixando"), "rebaix" );
	deepEqual( Stem("rebanho"), "rebanh" );
	deepEqual( Stem("rebanhos"), "rebanh" );
	deepEqual( Stem("rebate"), "rebat" );
	deepEqual( Stem("rebater"), "rebat" );
	deepEqual( Stem("rebateu"), "rebat" );
	deepEqual( Stem("rebatida"), "rebat" );
	deepEqual( Stem("rebatidas"), "rebat" );
	deepEqual( Stem("rebel"), "rebel" );
	deepEqual( Stem("rebelar"), "rebel" );
	deepEqual( Stem("rebelde"), "rebeld" );
	deepEqual( Stem("rebeldes"), "rebeld" );
	deepEqual( Stem("rebeldia"), "rebeld" );
	deepEqual( Stem("rebelião"), "rebeliã" );
	deepEqual( Stem("rebeliões"), "rebeliõ" );
	deepEqual( Stem("rebelou"), "rebel" );
	deepEqual( Stem("rebentos"), "rebent" );
	deepEqual( Stem("rebites"), "rebit" );
	deepEqual( Stem("rebolado"), "rebol" );
	deepEqual( Stem("rebolando"), "rebol" );
	deepEqual( Stem("reboque"), "reboqu" );
	deepEqual( Stem("rebote"), "rebot" );
	deepEqual( Stem("rebouças"), "rebouc" );
	deepEqual( Stem("rebouçast"), "rebouçast" );
	deepEqual( Stem("rebuliço"), "rebulic" );
	deepEqual( Stem("recado"), "rec" );
	deepEqual( Stem("recaem"), "reca" );
	deepEqual( Stem("recai"), "reca" );
	deepEqual( Stem("recaída"), "recaíd" );
	deepEqual( Stem("recanto"), "recant" );
	deepEqual( Stem("recapitalização"), "recapitaliz" );
	deepEqual( Stem("recarrego"), "recarreg" );
	deepEqual( Stem("recatado"), "recat" );
	deepEqual( Stem("recebam"), "receb" );
	deepEqual( Stem("recebe"), "receb" );
	deepEqual( Stem("recebem"), "receb" );
	deepEqual( Stem("recebendo"), "receb" );
	deepEqual( Stem("receber"), "receb" );
	deepEqual( Stem("receberá"), "receb" );
	deepEqual( Stem("receberam"), "receb" );
	deepEqual( Stem("receberia"), "receb" );
	deepEqual( Stem("recebesse"), "receb" );
	deepEqual( Stem("recebeu"), "receb" );
	deepEqual( Stem("recebi"), "receb" );
	deepEqual( Stem("recebia"), "receb" );
	deepEqual( Stem("recebiam"), "receb" );
	deepEqual( Stem("recebíamos"), "receb" );
	deepEqual( Stem("recebida"), "receb" );
	deepEqual( Stem("recebidas"), "receb" );
	deepEqual( Stem("recebido"), "receb" );
	deepEqual( Stem("recebidos"), "receb" );
	deepEqual( Stem("recebimento"), "receb" );
	deepEqual( Stem("recebimentos"), "receb" );
	deepEqual( Stem("recebíveis"), "recebív" );
	deepEqual( Stem("recebo"), "receb" );
	deepEqual( Stem("receia"), "rec" );
	deepEqual( Stem("receio"), "recei" );
	deepEqual( Stem("receita"), "receit" );
	deepEqual( Stem("receitada"), "receit" );
	deepEqual( Stem("receitadas"), "receit" );
	deepEqual( Stem("receitado"), "receit" );
	deepEqual( Stem("receitados"), "receit" );
	deepEqual( Stem("receitam"), "receit" );
	deepEqual( Stem("receitar"), "receit" );
	deepEqual( Stem("receitaram"), "receit" );
	deepEqual( Stem("receitas"), "receit" );
	deepEqual( Stem("receitasse"), "receit" );
	deepEqual( Stem("receito"), "receit" );
	deepEqual( Stem("receitou"), "receit" );
	deepEqual( Stem("receituário"), "receituári" );
	deepEqual( Stem("recém"), "recém" );
	deepEqual( Stem("recena"), "recen" );
	deepEqual( Stem("recente"), "recent" );
	deepEqual( Stem("recentemente"), "recent" );
	deepEqual( Stem("recentes"), "recent" );
	deepEqual( Stem("recentíssimos"), "recentíss" );
	deepEqual( Stem("recentraliza"), "recentraliz" );
	deepEqual( Stem("receosa"), "receos" );
	deepEqual( Stem("recepção"), "recepçã" );
	deepEqual( Stem("recepcionados"), "recepcion" );
	deepEqual( Stem("recepcionista"), "recepcion" );
	deepEqual( Stem("receptáculos"), "receptácul" );
	deepEqual( Stem("receptivas"), "recept" );
	deepEqual( Stem("receptivo"), "recept" );
	deepEqual( Stem("receptivos"), "recept" );
	deepEqual( Stem("receptor"), "receptor" );
	deepEqual( Stem("receptora"), "receptor" );
	deepEqual( Stem("recessão"), "recessã" );
	deepEqual( Stem("recessivos"), "recess" );
	deepEqual( Stem("rechaçada"), "rechac" );
	deepEqual( Stem("rechaçado"), "rechac" );
	deepEqual( Stem("rechaçados"), "rechac" );
	deepEqual( Stem("rechacei"), "rechac" );
	deepEqual( Stem("recheada"), "rech" );
	deepEqual( Stem("recheadas"), "rech" );
	deepEqual( Stem("recheado"), "rech" );
	deepEqual( Stem("recheados"), "rech" );
	deepEqual( Stem("rechear"), "rech" );
	deepEqual( Stem("recheia"), "rech" );
	deepEqual( Stem("recheiam"), "rech" );
	deepEqual( Stem("recheio"), "rechei" );
	deepEqual( Stem("recheou"), "rech" );
	deepEqual( Stem("reciclada"), "recicl" );
	deepEqual( Stem("reciclagem"), "reciclag" );
	deepEqual( Stem("reciclar"), "recicl" );
	deepEqual( Stem("recife"), "recif" );
	deepEqual( Stem("recinto"), "recint" );
	deepEqual( Stem("recipientes"), "recipient" );
	deepEqual( Stem("recíproco"), "recíproc" );
	deepEqual( Stem("recitação"), "recit" );
	deepEqual( Stem("recitais"), "recit" );
	deepEqual( Stem("recitam"), "recit" );
	deepEqual( Stem("reclama"), "reclam" );
	deepEqual( Stem("reclamação"), "reclam" );
	deepEqual( Stem("reclamações"), "reclam" );
	deepEqual( Stem("reclamado"), "reclam" );
	deepEqual( Stem("reclamam"), "reclam" );
	deepEqual( Stem("reclamando"), "reclam" );
	deepEqual( Stem("reclamar"), "reclam" );
	deepEqual( Stem("reclamaram"), "reclam" );
	deepEqual( Stem("reclamava"), "reclam" );
	deepEqual( Stem("reclamou"), "reclam" );
	deepEqual( Stem("reclusão"), "reclusã" );
	deepEqual( Stem("recoleta"), "recolet" );
	deepEqual( Stem("recolhendo"), "recolh" );
	deepEqual( Stem("recolher"), "recolh" );
	deepEqual( Stem("recolheram"), "recolh" );
	deepEqual( Stem("recolheu"), "recolh" );
	deepEqual( Stem("recolhidas"), "recolh" );
	deepEqual( Stem("recolhido"), "recolh" );
	deepEqual( Stem("recolhidos"), "recolh" );
	deepEqual( Stem("recolhimento"), "recolh" );
	deepEqual( Stem("recolocá"), "recoloc" );
	deepEqual( Stem("recolocação"), "recoloc" );
	deepEqual( Stem("recolocar"), "recoloc" );
	deepEqual( Stem("recombinação"), "recombin" );
	deepEqual( Stem("recomeçar"), "recomec" );
	deepEqual( Stem("recomenda"), "recomend" );
	deepEqual( Stem("recomendação"), "recomend" );
	deepEqual( Stem("recomendações"), "recomend" );
	deepEqual( Stem("recomendada"), "recomend" );
	deepEqual( Stem("recomendadas"), "recomend" );
	deepEqual( Stem("recomendado"), "recomend" );
	deepEqual( Stem("recomendados"), "recomend" );
	deepEqual( Stem("recomendam"), "recomend" );
	deepEqual( Stem("recomendar"), "recomend" );
	deepEqual( Stem("recomendava"), "recomend" );
	deepEqual( Stem("recomendável"), "recomend" );
	deepEqual( Stem("recomendo"), "recom" );
	deepEqual( Stem("recomendou"), "recomend" );
	deepEqual( Stem("recompensa"), "recompens" );
	deepEqual( Stem("recompensado"), "recompens" );
	deepEqual( Stem("recompensadoras"), "recompens" );
	deepEqual( Stem("recompensas"), "recompens" );
	deepEqual( Stem("recompor"), "recompor" );
	deepEqual( Stem("recomposição"), "recomposiçã" );
	deepEqual( Stem("recomprar"), "recompr" );
	deepEqual( Stem("recomprou"), "recompr" );
	deepEqual( Stem("reconciliação"), "reconcili" );
	deepEqual( Stem("reconfirmar"), "reconfirm" );
	deepEqual( Stem("reconfortante"), "reconfort" );
	deepEqual( Stem("reconheça"), "reconhec" );
	deepEqual( Stem("reconhece"), "reconhec" );
	deepEqual( Stem("reconhecê"), "reconhec" );
	deepEqual( Stem("reconhecem"), "reconhec" );
	deepEqual( Stem("reconhecer"), "reconhec" );
	deepEqual( Stem("reconheceram"), "reconhec" );
	deepEqual( Stem("reconhecessem"), "reconhec" );
	deepEqual( Stem("reconheceu"), "reconhec" );
	deepEqual( Stem("reconhecida"), "reconhec" );
	deepEqual( Stem("reconhecidas"), "reconhec" );
	deepEqual( Stem("reconhecido"), "reconhec" );
	deepEqual( Stem("reconhecidos"), "reconhec" );
	deepEqual( Stem("reconhecimento"), "reconhec" );
	deepEqual( Stem("reconheço"), "reconhec" );
	deepEqual( Stem("reconquista"), "reconqu" );
	deepEqual( Stem("reconstituição"), "reconstituiçã" );
	deepEqual( Stem("reconstroem"), "reconstro" );
	deepEqual( Stem("reconstrução"), "reconstruçã" );
	deepEqual( Stem("reconstruir"), "reconstru" );
	deepEqual( Stem("recontratar"), "recontrat" );
	deepEqual( Stem("reconversão"), "reconversã" );
	deepEqual( Stem("reconvidar"), "reconvid" );
	deepEqual( Stem("record"), "record" );
	deepEqual( Stem("recorda"), "record" );
	deepEqual( Stem("recordações"), "record" );
	deepEqual( Stem("recorde"), "record" );
	deepEqual( Stem("recordes"), "record" );
	deepEqual( Stem("recordista"), "record" );
	deepEqual( Stem("records"), "records" );
	deepEqual( Stem("recorre"), "recorr" );
	deepEqual( Stem("recorrem"), "recorr" );
	deepEqual( Stem("recorrendo"), "recorr" );
	deepEqual( Stem("recorrente"), "recorrent" );
	deepEqual( Stem("recorrentes"), "recorrent" );
	deepEqual( Stem("recorrer"), "recorr" );
	deepEqual( Stem("recorrerá"), "recorr" );
	deepEqual( Stem("recorreu"), "recorr" );
	deepEqual( Stem("recorrido"), "recorr" );
	deepEqual( Stem("recorte"), "recort" );
	deepEqual( Stem("recortes"), "recort" );
	deepEqual( Stem("recostado"), "recost" );
	deepEqual( Stem("recostar"), "recost" );
	deepEqual( Stem("recou"), "rec" );
	deepEqual( Stem("recreação"), "recreaçã" );
	deepEqual( Stem("recreativo"), "recreat" );
	deepEqual( Stem("recriar"), "recri" );
	deepEqual( Stem("recrimina"), "recrimin" );
	deepEqual( Stem("recriminaria"), "recrimin" );
	deepEqual( Stem("recruta"), "recrut" );
	deepEqual( Stem("recrutados"), "recrut" );
	deepEqual( Stem("recrutamento"), "recrut" );
	deepEqual( Stem("recrutando"), "recrut" );
	deepEqual( Stem("recrutou"), "recrut" );
	deepEqual( Stem("recua"), "recu" );
	deepEqual( Stem("recuar"), "recu" );
	deepEqual( Stem("recuo"), "recu" );
	deepEqual( Stem("recuou"), "recu" );
	deepEqual( Stem("recupera"), "recup" );
	deepEqual( Stem("recuperá"), "recup" );
	deepEqual( Stem("recuperação"), "recuper" );
	deepEqual( Stem("recuperada"), "recuper" );
	deepEqual( Stem("recuperado"), "recuper" );
	deepEqual( Stem("recuperam"), "recup" );
	deepEqual( Stem("recuperando"), "recuper" );
	deepEqual( Stem("recuperar"), "recuper" );
	deepEqual( Stem("recuperaram"), "recuper" );
	deepEqual( Stem("recuperei"), "recup" );
	deepEqual( Stem("recuperou"), "recuper" );
	deepEqual( Stem("recurso"), "recurs" );
	deepEqual( Stem("recursos"), "recurs" );
	deepEqual( Stem("recusa"), "recus" );
	deepEqual( Stem("recusá"), "recus" );
	deepEqual( Stem("recusada"), "recus" );
	deepEqual( Stem("recusado"), "recus" );
	deepEqual( Stem("recusam"), "recus" );
	deepEqual( Stem("recusamos"), "recus" );
	deepEqual( Stem("recusar"), "recus" );
	deepEqual( Stem("recusaria"), "recus" );
	deepEqual( Stem("recusas"), "recus" );
	deepEqual( Stem("recusava"), "recus" );
	deepEqual( Stem("recusem"), "recus" );
	deepEqual( Stem("recusou"), "recus" );
	deepEqual( Stem("red"), "red" );
	deepEqual( Stem("redação"), "redaçã" );
	deepEqual( Stem("redator"), "redator" );
	deepEqual( Stem("rede"), "red" );
	deepEqual( Stem("redefinir"), "redefin" );
	deepEqual( Stem("redemocratização"), "redemocratiz" );
	deepEqual( Stem("redemoinho"), "redemoinh" );
	deepEqual( Stem("redenção"), "redençã" );
	deepEqual( Stem("redentor"), "redentor" );
	deepEqual( Stem("redentora"), "redentor" );
	deepEqual( Stem("redentoras"), "redentor" );
	deepEqual( Stem("redes"), "red" );
	deepEqual( Stem("redescobre"), "redescobr" );
	deepEqual( Stem("redescobrindo"), "redescobr" );
	deepEqual( Stem("redescobriu"), "redescobr" );
	deepEqual( Stem("redesenhando"), "redesenh" );
	deepEqual( Stem("redigia"), "redig" );
	deepEqual( Stem("redigido"), "redig" );
	deepEqual( Stem("redigindo"), "redig" );
	deepEqual( Stem("redigir"), "redig" );
	deepEqual( Stem("redimensionando"), "redimension" );
	deepEqual( Stem("redobra"), "redobr" );
	deepEqual( Stem("redonda"), "redond" );
	deepEqual( Stem("redondo"), "redond" );
	deepEqual( Stem("redor"), "redor" );
	deepEqual( Stem("redoxon"), "redoxon" );
	deepEqual( Stem("redução"), "reduçã" );
	deepEqual( Stem("reduções"), "reduçõ" );
	deepEqual( Stem("reductil"), "reductil" );
	deepEqual( Stem("redundância"), "redund" );
	deepEqual( Stem("redundou"), "redund" );
	deepEqual( Stem("reduto"), "redut" );
	deepEqual( Stem("redutor"), "redutor" );
	deepEqual( Stem("redux"), "redux" );
	deepEqual( Stem("reduz"), "reduz" );
	deepEqual( Stem("reduza"), "reduz" );
	deepEqual( Stem("reduzam"), "reduz" );
	deepEqual( Stem("reduzem"), "reduz" );
	deepEqual( Stem("reduzi"), "reduz" );
	deepEqual( Stem("reduzia"), "reduz" );
	deepEqual( Stem("reduzida"), "reduz" );
	deepEqual( Stem("reduzidas"), "reduz" );
	deepEqual( Stem("reduzido"), "reduz" );
	deepEqual( Stem("reduzidos"), "reduz" );
	deepEqual( Stem("reduzindo"), "reduz" );
	deepEqual( Stem("reduzir"), "reduz" );
	deepEqual( Stem("reduziram"), "reduz" );
	deepEqual( Stem("reduzirem"), "reduz" );
	deepEqual( Stem("reduziu"), "reduz" );
	deepEqual( Stem("reedita"), "reedit" );
	deepEqual( Stem("reeditado"), "reedit" );
	deepEqual( Stem("reeduca"), "reeduc" );
	deepEqual( Stem("reeducação"), "reeduc" );
	deepEqual( Stem("reelaborar"), "reelabor" );
	deepEqual( Stem("reeleição"), "reeleiçã" );
	deepEqual( Stem("reeleito"), "reeleit" );
	deepEqual( Stem("reeleitorais"), "reeleitor" );
	deepEqual( Stem("reeleitoral"), "reeleitoral" );
	deepEqual( Stem("reencarnação"), "reencarn" );
	deepEqual( Stem("reencarnada"), "reencarn" );
	deepEqual( Stem("reencarnar"), "reencarn" );
	deepEqual( Stem("reencontrar"), "reencontr" );
	deepEqual( Stem("reencontro"), "reencontr" );
	deepEqual( Stem("reengenharia"), "reengenh" );
	deepEqual( Stem("reequilibrando"), "reequilibr" );
	deepEqual( Stem("reequilibrar"), "reequilibr" );
	deepEqual( Stem("reerguê"), "reerg" );
	deepEqual( Stem("reerguer"), "reergu" );
	deepEqual( Stem("reerguida"), "reergu" );
	deepEqual( Stem("reerguido"), "reergu" );
	deepEqual( Stem("reestruturação"), "reestrutur" );
	deepEqual( Stem("reestruturações"), "reestrutur" );
	deepEqual( Stem("reestruturando"), "reestrutur" );
	deepEqual( Stem("reeve"), "reev" );
	deepEqual( Stem("reexportações"), "reexport" );
	deepEqual( Stem("reexportar"), "reexport" );
	deepEqual( Stem("refaço"), "refac" );
	deepEqual( Stem("refaz"), "refaz" );
	deepEqual( Stem("refazê"), "refaz" );
	deepEqual( Stem("refazer"), "refaz" );
	deepEqual( Stem("refazerem"), "refaz" );
	deepEqual( Stem("refeição"), "refeiçã" );
	deepEqual( Stem("refeições"), "refeiçõ" );
	deepEqual( Stem("refeitas"), "refeit" );
	deepEqual( Stem("refeitórios"), "refeitóri" );
	deepEqual( Stem("refém"), "refém" );
	deepEqual( Stem("reféns"), "reféns" );
	deepEqual( Stem("refere"), "refer" );
	deepEqual( Stem("referem"), "ref" );
	deepEqual( Stem("referência"), "referent" );
	deepEqual( Stem("referências"), "referent" );
	deepEqual( Stem("referendo"), "refer" );
	deepEqual( Stem("referente"), "referent" );
	deepEqual( Stem("referentes"), "referent" );
	deepEqual( Stem("referia"), "ref" );
	deepEqual( Stem("referiam"), "ref" );
	deepEqual( Stem("referido"), "refer" );
	deepEqual( Stem("referindo"), "refer" );
	deepEqual( Stem("referiu"), "refer" );
	deepEqual( Stem("refestela"), "refestel" );
	deepEqual( Stem("refez"), "refez" );
	deepEqual( Stem("refilmagem"), "refilmag" );
	deepEqual( Stem("refinadas"), "refin" );
	deepEqual( Stem("refinado"), "refin" );
	deepEqual( Stem("refinados"), "refin" );
	deepEqual( Stem("refinanciamento"), "refinanc" );
	deepEqual( Stem("refino"), "refin" );
	deepEqual( Stem("reflete"), "reflet" );
	deepEqual( Stem("refletem"), "reflet" );
	deepEqual( Stem("refletida"), "reflet" );
	deepEqual( Stem("refletindo"), "reflet" );
	deepEqual( Stem("refletir"), "reflet" );
	deepEqual( Stem("refletiu"), "reflet" );
	deepEqual( Stem("refletor"), "refletor" );
	deepEqual( Stem("reflexão"), "reflexã" );
	deepEqual( Stem("reflexo"), "reflex" );
	deepEqual( Stem("reflexões"), "reflexõ" );
	deepEqual( Stem("reflexos"), "reflex" );
	deepEqual( Stem("reflita"), "reflit" );
	deepEqual( Stem("refogar"), "refog" );
	deepEqual( Stem("reforça"), "reforc" );
	deepEqual( Stem("reforçam"), "reforc" );
	deepEqual( Stem("reforçando"), "reforc" );
	deepEqual( Stem("reforçar"), "reforc" );
	deepEqual( Stem("reforço"), "reforc" );
	deepEqual( Stem("reforçou"), "reforc" );
	deepEqual( Stem("reforma"), "reform" );
	deepEqual( Stem("reformado"), "reform" );
	deepEqual( Stem("reformar"), "reform" );
	deepEqual( Stem("reformaram"), "reform" );
	deepEqual( Stem("reformas"), "reform" );
	deepEqual( Stem("reformista"), "reform" );
	deepEqual( Stem("reformou"), "reform" );
	deepEqual( Stem("reformulando"), "reformul" );
	deepEqual( Stem("reformular"), "reformul" );
	deepEqual( Stem("refrão"), "refrã" );
	deepEqual( Stem("refrãos"), "refrã" );
	deepEqual( Stem("refrãozinho"), "refrãozinh" );
	deepEqual( Stem("refratárias"), "refratár" );
	deepEqual( Stem("refrear"), "refr" );
	deepEqual( Stem("refrega"), "refreg" );
	deepEqual( Stem("refrescada"), "refresc" );
	deepEqual( Stem("refresco"), "refresc" );
	deepEqual( Stem("refrigeração"), "refriger" );
	deepEqual( Stem("refrigerante"), "refriger" );
	deepEqual( Stem("refrigerantes"), "refriger" );
	deepEqual( Stem("refugiam"), "refug" );
	deepEqual( Stem("refugiavam"), "refugi" );
	deepEqual( Stem("refúgio"), "refúgi" );
	deepEqual( Stem("refúgios"), "refúgi" );
	deepEqual( Stem("refugiou"), "refugi" );
	deepEqual( Stem("refutam"), "refut" );
	deepEqual( Stem("refutar"), "refut" );
	deepEqual( Stem("refutaram"), "refut" );
	deepEqual( Stem("regada"), "reg" );
	deepEqual( Stem("rege"), "reg" );
	deepEqual( Stem("regência"), "regênc" );
	deepEqual( Stem("regeneração"), "regener" );
	deepEqual( Stem("regenerado"), "regener" );
	deepEqual( Stem("regenerar"), "regener" );
	deepEqual( Stem("regenerem"), "regen" );
	deepEqual( Stem("regentes"), "regent" );
	deepEqual( Stem("reggae"), "regga" );
	deepEqual( Stem("régia"), "rég" );
	deepEqual( Stem("região"), "regiã" );
	deepEqual( Stem("regiãono"), "regiãon" );
	deepEqual( Stem("regida"), "reg" );
	deepEqual( Stem("regime"), "regim" );
	deepEqual( Stem("regimento"), "regiment" );
	deepEqual( Stem("regimes"), "regim" );
	deepEqual( Stem("regina"), "regin" );
	deepEqual( Stem("reginaldo"), "reginald" );
	deepEqual( Stem("régine"), "régin" );
	deepEqual( Stem("regiões"), "regiõ" );
	deepEqual( Stem("regionais"), "region" );
	deepEqual( Stem("regional"), "regional" );
	deepEqual( Stem("regionalismos"), "regional" );
	deepEqual( Stem("régis"), "rég" );
	deepEqual( Stem("registra"), "registr" );
	deepEqual( Stem("registrá"), "registr" );
	deepEqual( Stem("registrada"), "registr" );
	deepEqual( Stem("registradas"), "registr" );
	deepEqual( Stem("registrado"), "registr" );
	deepEqual( Stem("registradora"), "registr" );
	deepEqual( Stem("registradoras"), "registr" );
	deepEqual( Stem("registrados"), "registr" );
	deepEqual( Stem("registral"), "registral" );
	deepEqual( Stem("registram"), "registr" );
	deepEqual( Stem("registrando"), "registr" );
	deepEqual( Stem("registrar"), "registr" );
	deepEqual( Stem("registraram"), "registr" );
	deepEqual( Stem("registrasse"), "registr" );
	deepEqual( Stem("registre"), "registr" );
	deepEqual( Stem("registrei"), "registr" );
	deepEqual( Stem("registrem"), "registr" );
	deepEqual( Stem("registro"), "registr" );
	deepEqual( Stem("registros"), "registr" );
	deepEqual( Stem("registrou"), "registr" );
	deepEqual( Stem("regra"), "regr" );
	deepEqual( Stem("regrada"), "regr" );
	deepEqual( Stem("regrado"), "regr" );
	deepEqual( Stem("regras"), "regr" );
	deepEqual( Stem("regravação"), "regrav" );
	deepEqual( Stem("regravações"), "regrav" );
	deepEqual( Stem("regressiva"), "regress" );
	deepEqual( Stem("régua"), "régu" );
	deepEqual( Stem("regula"), "regul" );
	deepEqual( Stem("regulador"), "regul" );
	deepEqual( Stem("regulados"), "regul" );
	deepEqual( Stem("regulamentação"), "regulament" );
	deepEqual( Stem("regulamentada"), "regulament" );
	deepEqual( Stem("regulamentado"), "regulament" );
	deepEqual( Stem("regulamentando"), "regulament" );
	deepEqual( Stem("regulamentar"), "regulament" );
	deepEqual( Stem("regulamento"), "regul" );
	deepEqual( Stem("regulamentos"), "regul" );
	deepEqual( Stem("regular"), "regul" );
	deepEqual( Stem("regulares"), "regul" );
	deepEqual( Stem("regularmente"), "regular" );
	deepEqual( Stem("regulavam"), "regul" );
	deepEqual( Stem("rei"), "rei" );
	deepEqual( Stem("reimão"), "reimã" );
	deepEqual( Stem("reina"), "rein" );
	deepEqual( Stem("reinach"), "reinach" );
	deepEqual( Stem("reinado"), "rein" );
	deepEqual( Stem("reinaldo"), "reinald" );
	deepEqual( Stem("reinam"), "rein" );
	deepEqual( Stem("reinante"), "reinant" );
	deepEqual( Stem("reinaram"), "rein" );
	deepEqual( Stem("reinauguração"), "reinaugur" );
	deepEqual( Stem("reinava"), "rein" );
	deepEqual( Stem("reincidência"), "reincident" );
	deepEqual( Stem("reincidências"), "reincident" );
	deepEqual( Stem("reincidir"), "reincid" );
	deepEqual( Stem("reinhold"), "reinhold" );
	deepEqual( Stem("reino"), "rein" );
	deepEqual( Stem("reinou"), "rein" );
	deepEqual( Stem("reintegração"), "reintegr" );
	deepEqual( Stem("reintegrados"), "reintegr" );
	deepEqual( Stem("reinventado"), "reinvent" );
	deepEqual( Stem("reinvestido"), "reinvest" );
	deepEqual( Stem("reinvestimento"), "reinvest" );
	deepEqual( Stem("reinvestimentos"), "reinvest" );
	deepEqual( Stem("reinvindicando"), "reinvindic" );
	deepEqual( Stem("reis"), "reis" );
	deepEqual( Stem("reitor"), "reitor" );
	deepEqual( Stem("reitoria"), "reitor" );
	deepEqual( Stem("reivindica"), "reivind" );
	deepEqual( Stem("reivindicação"), "reivindic" );
	deepEqual( Stem("reivindicações"), "reivindic" );
	deepEqual( Stem("reivindicada"), "reivindic" );
	deepEqual( Stem("reivindicam"), "reivindic" );
	deepEqual( Stem("reivindicamos"), "reivindic" );
	deepEqual( Stem("rejeição"), "rejeiçã" );
	deepEqual( Stem("rejeita"), "rejeit" );
	deepEqual( Stem("rejeitar"), "rejeit" );
	deepEqual( Stem("rejeitou"), "rejeit" );
	deepEqual( Stem("rejuvenescida"), "rejuvenesc" );
	deepEqual( Stem("relação"), "relaçã" );
	deepEqual( Stem("relacinados"), "relacin" );
	deepEqual( Stem("relaciona"), "relacion" );
	deepEqual( Stem("relacionada"), "relacion" );
	deepEqual( Stem("relacionadas"), "relacion" );
	deepEqual( Stem("relacionado"), "relacion" );
	deepEqual( Stem("relacionados"), "relacion" );
	deepEqual( Stem("relacionam"), "relacion" );
	deepEqual( Stem("relacionamento"), "relacion" );
	deepEqual( Stem("relacionamentos"), "relacion" );
	deepEqual( Stem("relacionando"), "relacion" );
	deepEqual( Stem("relacionar"), "relacion" );
	deepEqual( Stem("relacionei"), "relacion" );
	deepEqual( Stem("relacionou"), "relacion" );
	deepEqual( Stem("relações"), "relaçõ" );
	deepEqual( Stem("relâmpago"), "relâmpag" );
	deepEqual( Stem("relampeado"), "relamp" );
	deepEqual( Stem("relançado"), "relanc" );
	deepEqual( Stem("relançamento"), "relanc" );
	deepEqual( Stem("relançando"), "relanc" );
	deepEqual( Stem("relancei"), "relanc" );
	deepEqual( Stem("relapso"), "relaps" );
	deepEqual( Stem("relata"), "relat" );
	deepEqual( Stem("relatado"), "relat" );
	deepEqual( Stem("relatados"), "relat" );
	deepEqual( Stem("relatando"), "relat" );
	deepEqual( Stem("relatar"), "relat" );
	deepEqual( Stem("relataram"), "relat" );
	deepEqual( Stem("relativa"), "relat" );
	deepEqual( Stem("relativamente"), "relat" );
	deepEqual( Stem("relativas"), "relat" );
	deepEqual( Stem("relatividade"), "relat" );
	deepEqual( Stem("relativo"), "relat" );
	deepEqual( Stem("relativos"), "relat" );
	deepEqual( Stem("relato"), "relat" );
	deepEqual( Stem("relator"), "relator" );
	deepEqual( Stem("relatores"), "relator" );
	deepEqual( Stem("relatorias"), "relator" );
	deepEqual( Stem("relatório"), "relatóri" );
	deepEqual( Stem("relatórios"), "relatóri" );
	deepEqual( Stem("relatos"), "relat" );
	deepEqual( Stem("relatou"), "relat" );
	deepEqual( Stem("relax"), "relax" );
	deepEqual( Stem("relaxa"), "relax" );
	deepEqual( Stem("relaxado"), "relax" );
	deepEqual( Stem("relaxados"), "relax" );
	deepEqual( Stem("relaxamento"), "relax" );
	deepEqual( Stem("relaxante"), "relax" );
	deepEqual( Stem("relaxar"), "relax" );
	deepEqual( Stem("relaxou"), "relax" );
	deepEqual( Stem("relé"), "rel" );
	deepEqual( Stem("release"), "releas" );
	deepEqual( Stem("relegado"), "releg" );
	deepEqual( Stem("releitura"), "releitur" );
	deepEqual( Stem("relembra"), "relembr" );
	deepEqual( Stem("reler"), "rel" );
	deepEqual( Stem("relevância"), "relev" );
	deepEqual( Stem("relevante"), "relev" );
	deepEqual( Stem("relevantes"), "relev" );
	deepEqual( Stem("relevo"), "relev" );
	deepEqual( Stem("religi"), "relig" );
	deepEqual( Stem("religião"), "religiã" );
	deepEqual( Stem("religiões"), "religiõ" );
	deepEqual( Stem("religiosa"), "religi" );
	deepEqual( Stem("religiosamente"), "religi" );
	deepEqual( Stem("religiosas"), "religi" );
	deepEqual( Stem("religiosidade"), "religios" );
	deepEqual( Stem("religioso"), "religi" );
	deepEqual( Stem("religiosos"), "religi" );
	deepEqual( Stem("relíquia"), "relíqu" );
	deepEqual( Stem("relíquias"), "relíqu" );
	deepEqual( Stem("relocalização"), "relocaliz" );
	deepEqual( Stem("relógio"), "relógi" );
	deepEqual( Stem("relógios"), "relógi" );
	deepEqual( Stem("relutância"), "relut" );
	deepEqual( Stem("reluzente"), "reluzent" );
	deepEqual( Stem("rem"), "rem" );
	deepEqual( Stem("remando"), "rem" );
	deepEqual( Stem("remanejamentos"), "remanej" );
	deepEqual( Stem("remanejou"), "remanej" );
	deepEqual( Stem("remanescente"), "remanescent" );
	deepEqual( Stem("remasterizada"), "remasteriz" );
	deepEqual( Stem("rembrant"), "rembrant" );
	deepEqual( Stem("remédio"), "remédi" );
	deepEqual( Stem("remédios"), "remédi" );
	deepEqual( Stem("remessa"), "remess" );
	deepEqual( Stem("remessas"), "remess" );
	deepEqual( Stem("remi"), "rem" );
	deepEqual( Stem("reminiscências"), "reminiscent" );
	deepEqual( Stem("remoção"), "remoçã" );
	deepEqual( Stem("remodelar"), "remodel" );
	deepEqual( Stem("remondini"), "remondin" );
	deepEqual( Stem("remonta"), "remont" );
	deepEqual( Stem("remontam"), "remont" );
	deepEqual( Stem("remontar"), "remont" );
	deepEqual( Stem("remontaram"), "remont" );
	deepEqual( Stem("remota"), "remot" );
	deepEqual( Stem("remotas"), "remot" );
	deepEqual( Stem("remotíssima"), "remotíssim" );
	deepEqual( Stem("remoto"), "remot" );
	deepEqual( Stem("remotos"), "remot" );
	deepEqual( Stem("remove"), "remov" );
	deepEqual( Stem("removeu"), "remov" );
	deepEqual( Stem("remuneração"), "remuner" );
	deepEqual( Stem("remunerada"), "remuner" );
	deepEqual( Stem("remunerados"), "remuner" );
	deepEqual( Stem("renais"), "ren" );
	deepEqual( Stem("renaissance"), "renaissanc" );
	deepEqual( Stem("renal"), "renal" );
	deepEqual( Stem("renan"), "renan" );
	deepEqual( Stem("renasce"), "renasc" );
	deepEqual( Stem("renascença"), "renascenc" );
	deepEqual( Stem("renascer"), "renasc" );
	deepEqual( Stem("renascidos"), "renasc" );
	deepEqual( Stem("renascimento"), "renasc" );
	deepEqual( Stem("renata"), "renat" );
	deepEqual( Stem("renato"), "renat" );
	deepEqual( Stem("renault"), "renault" );
	deepEqual( Stem("renda"), "rend" );
	deepEqual( Stem("rendá"), "rend" );
	deepEqual( Stem("rendadas"), "rend" );
	deepEqual( Stem("rende"), "rend" );
	deepEqual( Stem("rendeira"), "rendeir" );
	deepEqual( Stem("rendem"), "rend" );
	deepEqual( Stem("render"), "rend" );
	deepEqual( Stem("renderam"), "rend" );
	deepEqual( Stem("rendeu"), "rend" );
	deepEqual( Stem("rendia"), "rend" );
	deepEqual( Stem("rendição"), "rendiçã" );
	deepEqual( Stem("rendido"), "rend" );
	deepEqual( Stem("rendimento"), "rendiment" );
	deepEqual( Stem("rendimentos"), "rendiment" );
	deepEqual( Stem("renê"), "ren" );
	deepEqual( Stem("renée"), "rené" );
	deepEqual( Stem("renegociação"), "renegoc" );
	deepEqual( Stem("renegociações"), "renegoc" );
	deepEqual( Stem("renegociada"), "renegoc" );
	deepEqual( Stem("renegociando"), "renegoc" );
	deepEqual( Stem("renegociaram"), "renegoc" );
	deepEqual( Stem("renew"), "renew" );
	deepEqual( Stem("renina"), "renin" );
	deepEqual( Stem("renitente"), "renitent" );
	deepEqual( Stem("renner"), "renn" );
	deepEqual( Stem("renoir"), "reno" );
	deepEqual( Stem("renomadas"), "renom" );
	deepEqual( Stem("renomado"), "renom" );
	deepEqual( Stem("renomados"), "renom" );
	deepEqual( Stem("renome"), "renom" );
	deepEqual( Stem("renova"), "renov" );
	deepEqual( Stem("renovação"), "renov" );
	deepEqual( Stem("renovadas"), "renov" );
	deepEqual( Stem("renovado"), "renov" );
	deepEqual( Stem("renovador"), "renov" );
	deepEqual( Stem("renovados"), "renov" );
	deepEqual( Stem("renovam"), "renov" );
	deepEqual( Stem("renovando"), "renov" );
	deepEqual( Stem("renovar"), "renov" );
	deepEqual( Stem("renovaram"), "renov" );
	deepEqual( Stem("renováveis"), "renov" );
	deepEqual( Stem("renovou"), "renov" );
	deepEqual( Stem("rentabilidade"), "rentabil" );
	deepEqual( Stem("rental"), "rental" );
	deepEqual( Stem("rentáveis"), "rent" );
	deepEqual( Stem("rentável"), "rentável" );
	deepEqual( Stem("rentinho"), "rentinh" );
	deepEqual( Stem("renúncia"), "renúnc" );
	deepEqual( Stem("renunciamos"), "renunc" );
	deepEqual( Stem("renunciar"), "renunc" );
	deepEqual( Stem("renunciarem"), "renunc" );
	deepEqual( Stem("reordenar"), "reorden" );
	deepEqual( Stem("reorganização"), "reorganiz" );
	deepEqual( Stem("reorganizado"), "reorganiz" );
	deepEqual( Stem("reorganizar"), "reorganiz" );
	deepEqual( Stem("repara"), "rep" );
	deepEqual( Stem("reparação"), "repar" );
	deepEqual( Stem("reparam"), "rep" );
	deepEqual( Stem("reparar"), "repar" );
	deepEqual( Stem("reparo"), "repar" );
	deepEqual( Stem("repartição"), "repartiçã" );
	deepEqual( Stem("repartições"), "repartiçõ" );
	deepEqual( Stem("repassa"), "repass" );
	deepEqual( Stem("repassá"), "repass" );
	deepEqual( Stem("repassam"), "repass" );
	deepEqual( Stem("repassar"), "repass" );
	deepEqual( Stem("repasse"), "rep" );
	deepEqual( Stem("repassou"), "repass" );
	deepEqual( Stem("repensar"), "repens" );
	deepEqual( Stem("repensou"), "repens" );
	deepEqual( Stem("repente"), "repent" );
	deepEqual( Stem("repentina"), "repentin" );
	deepEqual( Stem("repentino"), "repentin" );
	deepEqual( Stem("repercussão"), "repercussã" );
	deepEqual( Stem("repertório"), "repertóri" );
	deepEqual( Stem("repertórios"), "repertóri" );
	deepEqual( Stem("repete"), "repet" );
	deepEqual( Stem("repetem"), "repet" );
	deepEqual( Stem("repetência"), "repetent" );
	deepEqual( Stem("repetente"), "repetent" );
	deepEqual( Stem("repetentes"), "repetent" );
	deepEqual( Stem("repeti"), "repet" );
	deepEqual( Stem("repetida"), "repet" );
	deepEqual( Stem("repetidas"), "repet" );
	deepEqual( Stem("repetido"), "repet" );
	deepEqual( Stem("repetidoras"), "repetidor" );
	deepEqual( Stem("repetindo"), "repet" );
	deepEqual( Stem("repetir"), "repet" );
	deepEqual( Stem("repetitivas"), "repetit" );
	deepEqual( Stem("repetitivo"), "repetit" );
	deepEqual( Stem("repetiu"), "repet" );
	deepEqual( Stem("repitam"), "repit" );
	deepEqual( Stem("replantar"), "replant" );
	deepEqual( Stem("repleta"), "replet" );
	deepEqual( Stem("repletas"), "replet" );
	deepEqual( Stem("repleto"), "replet" );
	deepEqual( Stem("repletos"), "replet" );
	deepEqual( Stem("réplica"), "réplic" );
	deepEqual( Stem("replicar"), "replic" );
	deepEqual( Stem("réplicas"), "réplic" );
	deepEqual( Stem("repolho"), "repolh" );
	deepEqual( Stem("repolhos"), "repolh" );
	deepEqual( Stem("repor"), "repor" );
	deepEqual( Stem("reportagem"), "reportag" );
	deepEqual( Stem("reportagens"), "reportagens" );
	deepEqual( Stem("repórter"), "repórt" );
	deepEqual( Stem("repórteres"), "repórt" );
	deepEqual( Stem("reporters"), "reporters" );
	deepEqual( Stem("reposição"), "reposiçã" );
	deepEqual( Stem("reposto"), "repost" );
	deepEqual( Stem("repouso"), "repous" );
	deepEqual( Stem("repreende"), "repreend" );
	deepEqual( Stem("repreendendo"), "repreend" );
	deepEqual( Stem("repreendeu"), "repreend" );
	deepEqual( Stem("repreendida"), "repreend" );
	deepEqual( Stem("represa"), "repres" );
	deepEqual( Stem("represado"), "repres" );
	deepEqual( Stem("represálias"), "represál" );
	deepEqual( Stem("represamento"), "repres" );
	deepEqual( Stem("representa"), "represent" );
	deepEqual( Stem("representação"), "represent" );
	deepEqual( Stem("representações"), "represent" );
	deepEqual( Stem("representada"), "represent" );
	deepEqual( Stem("representado"), "represent" );
	deepEqual( Stem("representados"), "represent" );
	deepEqual( Stem("representam"), "represent" );
	deepEqual( Stem("representando"), "represent" );
	deepEqual( Stem("representante"), "represent" );
	deepEqual( Stem("representantes"), "represent" );
	deepEqual( Stem("representar"), "represent" );
	deepEqual( Stem("representaram"), "represent" );
	deepEqual( Stem("representativa"), "represent" );
	deepEqual( Stem("representativas"), "represent" );
	deepEqual( Stem("representava"), "represent" );
	deepEqual( Stem("representavam"), "represent" );
	deepEqual( Stem("represento"), "represent" );
	deepEqual( Stem("representou"), "represent" );
	deepEqual( Stem("repressão"), "repressã" );
	deepEqual( Stem("repressor"), "repressor" );
	deepEqual( Stem("repressores"), "repressor" );
	deepEqual( Stem("reprima"), "reprim" );
	deepEqual( Stem("reprimem"), "reprim" );
	deepEqual( Stem("reprimir"), "reprim" );
	deepEqual( Stem("reprisados"), "repris" );
	deepEqual( Stem("reprodução"), "reproduçã" );
	deepEqual( Stem("reprodutor"), "reprodutor" );
	deepEqual( Stem("reprodutora"), "reprodutor" );
	deepEqual( Stem("reproduz"), "reproduz" );
	deepEqual( Stem("reproduzem"), "reproduz" );
	deepEqual( Stem("reproduzida"), "reproduz" );
	deepEqual( Stem("reproduzido"), "reproduz" );
	deepEqual( Stem("reproduzindo"), "reproduz" );
	deepEqual( Stem("reproduzir"), "reproduz" );
	deepEqual( Stem("reproduziram"), "reproduz" );
	deepEqual( Stem("reproduziu"), "reproduz" );
	deepEqual( Stem("reprovação"), "reprov" );
	deepEqual( Stem("reprovada"), "reprov" );
	deepEqual( Stem("reprovados"), "reprov" );
	deepEqual( Stem("reprovável"), "reprov" );
	deepEqual( Stem("reprovou"), "reprov" );
	deepEqual( Stem("répteis"), "répt" );
	deepEqual( Stem("república"), "repúbl" );
	deepEqual( Stem("republicana"), "republican" );
	deepEqual( Stem("republicano"), "republican" );
	deepEqual( Stem("republicanos"), "republican" );
	deepEqual( Stem("repúblicas"), "repúbl" );
	deepEqual( Stem("republiqueta"), "republiquet" );
	deepEqual( Stem("repudiado"), "repudi" );
	deepEqual( Stem("repudiando"), "repudi" );
	deepEqual( Stem("repúdio"), "repúdi" );
	deepEqual( Stem("repudiou"), "repudi" );
	deepEqual( Stem("repugnância"), "repugn" );
	deepEqual( Stem("repugnante"), "repugn" );
	deepEqual( Stem("repulsa"), "repuls" );
	deepEqual( Stem("reputação"), "reput" );
	deepEqual( Stem("reputadas"), "reput" );
	deepEqual( Stem("reputado"), "reput" );
	deepEqual( Stem("requebram"), "requebr" );
	deepEqual( Stem("requebrar"), "requebr" );
	deepEqual( Stem("requer"), "requ" );
	deepEqual( Stem("requerimento"), "requer" );
	deepEqual( Stem("requião"), "requiã" );
	deepEqual( Stem("requinte"), "requint" );
	deepEqual( Stem("requintes"), "requint" );
	deepEqual( Stem("requisitadas"), "requisit" );
	deepEqual( Stem("requisitado"), "requisit" );
	deepEqual( Stem("requisitados"), "requisit" );
	deepEqual( Stem("requisito"), "requisit" );
	deepEqual( Stem("requisitos"), "requisit" );
	deepEqual( Stem("requisitou"), "requisit" );
	deepEqual( Stem("rerngchai"), "rerngcha" );
	deepEqual( Stem("rescaldo"), "rescald" );
	deepEqual( Stem("rescisória"), "rescisór" );
	deepEqual( Stem("research"), "research" );
	deepEqual( Stem("resende"), "resend" );
	deepEqual( Stem("reserva"), "reserv" );
	deepEqual( Stem("reservada"), "reserv" );
	deepEqual( Stem("reservado"), "reserv" );
	deepEqual( Stem("reservados"), "reserv" );
	deepEqual( Stem("reservas"), "reserv" );
	deepEqual( Stem("reservatórios"), "reservatóri" );
	deepEqual( Stem("reservou"), "reserv" );
	deepEqual( Stem("resfriado"), "resfri" );
	deepEqual( Stem("resfriados"), "resfri" );
	deepEqual( Stem("resgaste"), "resg" );
	deepEqual( Stem("resgata"), "resgat" );
	deepEqual( Stem("resgatá"), "resgat" );
	deepEqual( Stem("resgatar"), "resgat" );
	deepEqual( Stem("resgate"), "resgat" );
	deepEqual( Stem("resgatou"), "resgat" );
	deepEqual( Stem("reside"), "resid" );
	deepEqual( Stem("residem"), "resid" );
	deepEqual( Stem("residência"), "resident" );
	deepEqual( Stem("residenciais"), "residenc" );
	deepEqual( Stem("residencial"), "residencial" );
	deepEqual( Stem("residências"), "resident" );
	deepEqual( Stem("residente"), "resident" );
	deepEqual( Stem("residentes"), "resident" );
	deepEqual( Stem("residia"), "resid" );
	deepEqual( Stem("residindo"), "resid" );
	deepEqual( Stem("residir"), "resid" );
	deepEqual( Stem("residiu"), "resid" );
	deepEqual( Stem("residuográfico"), "residuográf" );
	deepEqual( Stem("resíduos"), "resídu" );
	deepEqual( Stem("resigna"), "resign" );
	deepEqual( Stem("resistam"), "resist" );
	deepEqual( Stem("resiste"), "res" );
	deepEqual( Stem("resistem"), "resist" );
	deepEqual( Stem("resistência"), "resistent" );
	deepEqual( Stem("resistências"), "resistent" );
	deepEqual( Stem("resisti"), "resist" );
	deepEqual( Stem("resistindo"), "resist" );
	deepEqual( Stem("resistir"), "resist" );
	deepEqual( Stem("resistiram"), "resist" );
	deepEqual( Stem("resistiu"), "resist" );
	deepEqual( Stem("resisto"), "resist" );
	deepEqual( Stem("resmaterização"), "resmateriz" );
	deepEqual( Stem("resmaterizada"), "resmateriz" );
	deepEqual( Stem("resmaterizadas"), "resmateriz" );
	deepEqual( Stem("resmungava"), "resmung" );
	deepEqual( Stem("resmungou"), "resmung" );
	deepEqual( Stem("resolução"), "resoluçã" );
	deepEqual( Stem("resolve"), "resolv" );
	deepEqual( Stem("resolvem"), "resolv" );
	deepEqual( Stem("resolvemos"), "resolv" );
	deepEqual( Stem("resolvendo"), "resolv" );
	deepEqual( Stem("resolver"), "resolv" );
	deepEqual( Stem("resolvera"), "resolv" );
	deepEqual( Stem("resolveram"), "resolv" );
	deepEqual( Stem("resolveria"), "resolv" );
	deepEqual( Stem("resolvesse"), "resolv" );
	deepEqual( Stem("resolveu"), "resolv" );
	deepEqual( Stem("resolvi"), "resolv" );
	deepEqual( Stem("resolviam"), "resolv" );
	deepEqual( Stem("resolvida"), "resolv" );
	deepEqual( Stem("resolvido"), "resolv" );
	deepEqual( Stem("resolvidos"), "resolv" );
	deepEqual( Stem("resolvo"), "resolv" );
	deepEqual( Stem("resort"), "resort" );
	deepEqual( Stem("resources"), "resourc" );
	deepEqual( Stem("respalda"), "respald" );
	deepEqual( Stem("respaldada"), "respald" );
	deepEqual( Stem("respaldo"), "respald" );
	deepEqual( Stem("respectivamente"), "respect" );
	deepEqual( Stem("respectivas"), "respect" );
	deepEqual( Stem("respeita"), "respeit" );
	deepEqual( Stem("respeitá"), "respeit" );
	deepEqual( Stem("respeitabilidade"), "respeit" );
	deepEqual( Stem("respeitada"), "respeit" );
	deepEqual( Stem("respeitadas"), "respeit" );
	deepEqual( Stem("respeitadíssimo"), "respeitadíssim" );
	deepEqual( Stem("respeitado"), "respeit" );
	deepEqual( Stem("respeitados"), "respeit" );
	deepEqual( Stem("respeitam"), "respeit" );
	deepEqual( Stem("respeitamos"), "respeit" );
	deepEqual( Stem("respeitando"), "respeit" );
	deepEqual( Stem("respeitar"), "respeit" );
	deepEqual( Stem("respeitaram"), "respeit" );
	deepEqual( Stem("respeitarem"), "respeit" );
	deepEqual( Stem("respeitáveis"), "respeit" );
	deepEqual( Stem("respeitável"), "respeit" );
	deepEqual( Stem("respeito"), "respeit" );
	deepEqual( Stem("respeitosa"), "respeit" );
	deepEqual( Stem("respeitoso"), "respeit" );
	deepEqual( Stem("respira"), "resp" );
	deepEqual( Stem("respiração"), "respir" );
	deepEqual( Stem("respiram"), "resp" );
	deepEqual( Stem("respirando"), "respir" );
	deepEqual( Stem("respirar"), "respir" );
	deepEqual( Stem("respiratória"), "respiratór" );
	deepEqual( Stem("respiratórios"), "respiratóri" );
	deepEqual( Stem("respirava"), "respir" );
	deepEqual( Stem("respirou"), "respir" );
	deepEqual( Stem("responda"), "respond" );
	deepEqual( Stem("responde"), "respond" );
	deepEqual( Stem("respondem"), "respond" );
	deepEqual( Stem("respondemos"), "respond" );
	deepEqual( Stem("respondendo"), "respond" );
	deepEqual( Stem("responder"), "respond" );
	deepEqual( Stem("responderam"), "respond" );
	deepEqual( Stem("respondeu"), "respond" );
	deepEqual( Stem("respondi"), "respond" );
	deepEqual( Stem("respondia"), "respond" );
	deepEqual( Stem("respondida"), "respond" );
	deepEqual( Stem("respondo"), "respond" );
	deepEqual( Stem("responsabilidade"), "respons" );
	deepEqual( Stem("responsabilidades"), "respons" );
	deepEqual( Stem("responsabiliza"), "responsabiliz" );
	deepEqual( Stem("responsabilizá"), "responsabiliz" );
	deepEqual( Stem("responsabilizada"), "responsabiliz" );
	deepEqual( Stem("responsáveis"), "respons" );
	deepEqual( Stem("responsável"), "respons" );
	deepEqual( Stem("resposta"), "respost" );
	deepEqual( Stem("respostas"), "respost" );
	deepEqual( Stem("resquícios"), "resquíci" );
	deepEqual( Stem("ressaca"), "ressac" );
	deepEqual( Stem("ressalta"), "ressalt" );
	deepEqual( Stem("ressaltadas"), "ressalt" );
	deepEqual( Stem("ressaltados"), "ressalt" );
	deepEqual( Stem("ressaltam"), "ressalt" );
	deepEqual( Stem("ressaltar"), "ressalt" );
	deepEqual( Stem("ressaltou"), "ressalt" );
	deepEqual( Stem("ressalva"), "ressalv" );
	deepEqual( Stem("ressalvando"), "ressalv" );
	deepEqual( Stem("ressalvas"), "ressalv" );
	deepEqual( Stem("ressarcimento"), "ressarc" );
	deepEqual( Stem("ressecadas"), "ressec" );
	deepEqual( Stem("ressecado"), "ressec" );
	deepEqual( Stem("ressecamento"), "ressec" );
	deepEqual( Stem("ressente"), "ressent" );
	deepEqual( Stem("ressentem"), "ressent" );
	deepEqual( Stem("ressentimento"), "ressent" );
	deepEqual( Stem("ressentimentos"), "ressent" );
	deepEqual( Stem("ressonância"), "resson" );
	deepEqual( Stem("ressonaria"), "resson" );
	deepEqual( Stem("ressou"), "ress" );
	deepEqual( Stem("ressu"), "ressu" );
	deepEqual( Stem("ressurge"), "ressurg" );
	deepEqual( Stem("ressurgem"), "ressurg" );
	deepEqual( Stem("ressurgimento"), "ressurg" );
	deepEqual( Stem("ressurgiram"), "ressurg" );
	deepEqual( Stem("ressurreição"), "ressurreiçã" );
	deepEqual( Stem("ressuscita"), "ressuscit" );
	deepEqual( Stem("ressuscitar"), "ressuscit" );
	deepEqual( Stem("ressuscitaram"), "ressuscit" );
	deepEqual( Stem("resta"), "rest" );
	deepEqual( Stem("restam"), "rest" );
	deepEqual( Stem("restante"), "restant" );
	deepEqual( Stem("restantes"), "restant" );
	deepEqual( Stem("restará"), "rest" );
	deepEqual( Stem("restaram"), "rest" );
	deepEqual( Stem("restaria"), "rest" );
	deepEqual( Stem("restasse"), "rest" );
	deepEqual( Stem("restauração"), "restaur" );
	deepEqual( Stem("restaurant"), "restaurant" );
	deepEqual( Stem("restaurante"), "restaur" );
	deepEqual( Stem("restaurantes"), "restaur" );
	deepEqual( Stem("restaurar"), "restaur" );
	deepEqual( Stem("restaurateurs"), "restaurateurs" );
	deepEqual( Stem("restava"), "rest" );
	deepEqual( Stem("restavam"), "rest" );
	deepEqual( Stem("restituição"), "restituiçã" );
	deepEqual( Stem("resto"), "rest" );
	deepEqual( Stem("restos"), "rest" );
	deepEqual( Stem("restou"), "rest" );
	deepEqual( Stem("restrição"), "restriçã" );
	deepEqual( Stem("restrições"), "restriçõ" );
	deepEqual( Stem("restringe"), "restring" );
	deepEqual( Stem("restringir"), "restring" );
	deepEqual( Stem("restrita"), "restrit" );
	deepEqual( Stem("restrito"), "restrit" );
	deepEqual( Stem("resulta"), "result" );
	deepEqual( Stem("resultado"), "result" );
	deepEqual( Stem("resultados"), "result" );
	deepEqual( Stem("resultam"), "result" );
	deepEqual( Stem("resultante"), "result" );
	deepEqual( Stem("resultantes"), "result" );
	deepEqual( Stem("resultar"), "result" );
	deepEqual( Stem("resultaram"), "result" );
	deepEqual( Stem("resultarem"), "result" );
	deepEqual( Stem("resultaria"), "result" );
	deepEqual( Stem("resultava"), "result" );
	deepEqual( Stem("resultou"), "result" );
	deepEqual( Stem("resume"), "resum" );
	deepEqual( Stem("resumem"), "resum" );
	deepEqual( Stem("resumida"), "resum" );
	deepEqual( Stem("resumido"), "resum" );
	deepEqual( Stem("resumindo"), "resum" );
	deepEqual( Stem("resumiu"), "resum" );
	deepEqual( Stem("resumo"), "resum" );
	deepEqual( Stem("resvalam"), "resval" );
	deepEqual( Stem("reta"), "ret" );
	deepEqual( Stem("retal"), "retal" );
	deepEqual( Stem("retalhado"), "retalh" );
	deepEqual( Stem("retaliação"), "retali" );
	deepEqual( Stem("retaliações"), "retali" );
	deepEqual( Stem("retangular"), "retangul" );
	deepEqual( Stem("retardam"), "retard" );
	deepEqual( Stem("retardar"), "retard" );
	deepEqual( Stem("retas"), "ret" );
	deepEqual( Stem("retê"), "ret" );
	deepEqual( Stem("retém"), "retém" );
	deepEqual( Stem("retenção"), "retençã" );
	deepEqual( Stem("reter"), "ret" );
	deepEqual( Stem("reteve"), "retev" );
	deepEqual( Stem("reticente"), "reticent" );
	deepEqual( Stem("reticentes"), "reticent" );
	deepEqual( Stem("retida"), "ret" );
	deepEqual( Stem("retido"), "ret" );
	deepEqual( Stem("retina"), "retin" );
	deepEqual( Stem("retira"), "ret" );
	deepEqual( Stem("retirada"), "retir" );
	deepEqual( Stem("retiradas"), "retir" );
	deepEqual( Stem("retirado"), "retir" );
	deepEqual( Stem("retirados"), "retir" );
	deepEqual( Stem("retiram"), "ret" );
	deepEqual( Stem("retirando"), "retir" );
	deepEqual( Stem("retirar"), "retir" );
	deepEqual( Stem("retiraram"), "retir" );
	deepEqual( Stem("retirasse"), "retir" );
	deepEqual( Stem("retirassem"), "retir" );
	deepEqual( Stem("retiro"), "retir" );
	deepEqual( Stem("retirou"), "retir" );
	deepEqual( Stem("reto"), "ret" );
	deepEqual( Stem("retocando"), "retoc" );
	deepEqual( Stem("retocar"), "retoc" );
	deepEqual( Stem("retoma"), "retom" );
	deepEqual( Stem("retomada"), "retom" );
	deepEqual( Stem("retomando"), "retom" );
	deepEqual( Stem("retomar"), "retom" );
	deepEqual( Stem("retomei"), "retom" );
	deepEqual( Stem("retomou"), "retom" );
	deepEqual( Stem("retorcidas"), "retorc" );
	deepEqual( Stem("retorcidos"), "retorc" );
	deepEqual( Stem("retórica"), "retór" );
	deepEqual( Stem("retorna"), "retorn" );
	deepEqual( Stem("retornam"), "retorn" );
	deepEqual( Stem("retornamos"), "retorn" );
	deepEqual( Stem("retornando"), "retorn" );
	deepEqual( Stem("retornar"), "retorn" );
	deepEqual( Stem("retorno"), "retorn" );
	deepEqual( Stem("retornos"), "retorn" );
	deepEqual( Stem("retornou"), "retorn" );
	deepEqual( Stem("retrabalhar"), "retrabalh" );
	deepEqual( Stem("retrair"), "retra" );
	deepEqual( Stem("retranca"), "retranc" );
	deepEqual( Stem("retrancas"), "retranc" );
	deepEqual( Stem("retransmissoras"), "retransmissor" );
	deepEqual( Stem("retransmitia"), "retransmit" );
	deepEqual( Stem("retrasada"), "retras" );
	deepEqual( Stem("retrasado"), "retras" );
	deepEqual( Stem("retrata"), "retrat" );
	deepEqual( Stem("retratado"), "retrat" );
	deepEqual( Stem("retratam"), "retrat" );
	deepEqual( Stem("retratar"), "retrat" );
	deepEqual( Stem("retráteis"), "retrát" );
	deepEqual( Stem("retrato"), "retrat" );
	deepEqual( Stem("retratos"), "retrat" );
	deepEqual( Stem("retribui"), "retribu" );
	deepEqual( Stem("retroativo"), "retroat" );
	deepEqual( Stem("retrocesso"), "retrocess" );
	deepEqual( Stem("retrospectiva"), "retrospect" );
	deepEqual( Stem("retrospecto"), "retrospect" );
	deepEqual( Stem("retruca"), "retruc" );
	deepEqual( Stem("retrucou"), "retruc" );
	deepEqual( Stem("retumbante"), "retumb" );
	deepEqual( Stem("réu"), "réu" );
	deepEqual( Stem("reumática"), "reumát" );
	deepEqual( Stem("reumatismo"), "reumat" );
	deepEqual( Stem("reúne"), "reún" );
	deepEqual( Stem("reúnem"), "reún" );
	deepEqual( Stem("reuni"), "reun" );
	deepEqual( Stem("reunia"), "reun" );
	deepEqual( Stem("reunião"), "reuniã" );
	deepEqual( Stem("reunida"), "reun" );
	deepEqual( Stem("reunidas"), "reun" );
	deepEqual( Stem("reunido"), "reun" );
	deepEqual( Stem("reunidos"), "reun" );
	deepEqual( Stem("reunificação"), "reunific" );
	deepEqual( Stem("reunimos"), "reun" );
	deepEqual( Stem("reuniões"), "reuniõ" );
	deepEqual( Stem("reunir"), "reun" );
	deepEqual( Stem("reuniram"), "reun" );
	deepEqual( Stem("reuniu"), "reun" );
	deepEqual( Stem("reúno"), "reún" );
	deepEqual( Stem("réus"), "réus" );
	deepEqual( Stem("revalorização"), "revaloriz" );
	deepEqual( Stem("revanche"), "revanch" );
	deepEqual( Stem("reveillon"), "reveillon" );
	deepEqual( Stem("réveillon"), "réveillon" );
	deepEqual( Stem("revela"), "revel" );
	deepEqual( Stem("revelação"), "revel" );
	deepEqual( Stem("revelações"), "revel" );
	deepEqual( Stem("reveladas"), "revel" );
	deepEqual( Stem("revelado"), "revel" );
	deepEqual( Stem("reveladora"), "revel" );
	deepEqual( Stem("reveladores"), "revel" );
	deepEqual( Stem("revelam"), "revel" );
	deepEqual( Stem("revelando"), "revel" );
	deepEqual( Stem("revelar"), "revel" );
	deepEqual( Stem("revelaram"), "revel" );
	deepEqual( Stem("revelasse"), "revel" );
	deepEqual( Stem("revelava"), "revel" );
	deepEqual( Stem("revelou"), "revel" );
	deepEqual( Stem("revenda"), "revend" );
	deepEqual( Stem("revende"), "revend" );
	deepEqual( Stem("revendê"), "revend" );
	deepEqual( Stem("revendedoras"), "revendedor" );
	deepEqual( Stem("revendem"), "revend" );
	deepEqual( Stem("revender"), "revend" );
	deepEqual( Stem("revendo"), "rev" );
	deepEqual( Stem("rever"), "rev" );
	deepEqual( Stem("reverberada"), "reverber" );
	deepEqual( Stem("reverência"), "reverent" );
	deepEqual( Stem("reverenciado"), "reverenc" );
	deepEqual( Stem("reverenciam"), "reverenc" );
	deepEqual( Stem("reverenciar"), "reverenc" );
	deepEqual( Stem("reverendo"), "rever" );
	deepEqual( Stem("reverente"), "reverent" );
	deepEqual( Stem("reversão"), "reversã" );
	deepEqual( Stem("reversor"), "reversor" );
	deepEqual( Stem("revertam"), "revert" );
	deepEqual( Stem("reverter"), "revert" );
	deepEqual( Stem("reverteria"), "revert" );
	deepEqual( Stem("revertério"), "revertéri" );
	deepEqual( Stem("reverteu"), "revert" );
	deepEqual( Stem("revertida"), "revert" );
	deepEqual( Stem("revesti"), "revest" );
	deepEqual( Stem("revestimentos"), "revest" );
	deepEqual( Stem("revezar"), "revez" );
	deepEqual( Stem("revezava"), "revez" );
	deepEqual( Stem("revezou"), "revez" );
	deepEqual( Stem("revidar"), "revid" );
	deepEqual( Stem("revidavam"), "revid" );
	deepEqual( Stem("revidou"), "revid" );
	deepEqual( Stem("revigoradas"), "revigor" );
	deepEqual( Stem("revigorado"), "revigor" );
	deepEqual( Stem("revirando"), "revir" );
	deepEqual( Stem("revirassem"), "revir" );
	deepEqual( Stem("reviravolta"), "reviravolt" );
	deepEqual( Stem("revisa"), "revis" );
	deepEqual( Stem("revisadas"), "revis" );
	deepEqual( Stem("revisão"), "revisã" );
	deepEqual( Stem("revista"), "revist" );
	deepEqual( Stem("revistas"), "revist" );
	deepEqual( Stem("revistinhas"), "revistinh" );
	deepEqual( Stem("revisto"), "revist" );
	deepEqual( Stem("revitalizar"), "revitaliz" );
	deepEqual( Stem("revitalizaram"), "revitaliz" );
	deepEqual( Stem("reviu"), "rev" );
	deepEqual( Stem("revival"), "revival" );
	deepEqual( Stem("revive"), "reviv" );
	deepEqual( Stem("revivendo"), "reviv" );
	deepEqual( Stem("reviver"), "reviv" );
	deepEqual( Stem("revlon"), "revlon" );
	deepEqual( Stem("revogada"), "revog" );
	deepEqual( Stem("revolta"), "revolt" );
	deepEqual( Stem("revoltadas"), "revolt" );
	deepEqual( Stem("revoltado"), "revolt" );
	deepEqual( Stem("revoltados"), "revolt" );
	deepEqual( Stem("revoltaram"), "revolt" );
	deepEqual( Stem("revoltas"), "revolt" );
	deepEqual( Stem("revolução"), "revoluçã" );
	deepEqual( Stem("revolucionado"), "revolucion" );
	deepEqual( Stem("revolucionar"), "revolucion" );
	deepEqual( Stem("revolucionária"), "revolucionár" );
	deepEqual( Stem("revolucionárias"), "revolucionár" );
	deepEqual( Stem("revolucionário"), "revolucionári" );
	deepEqual( Stem("revolucionou"), "revolucion" );
	deepEqual( Stem("revoluções"), "revoluçõ" );
	deepEqual( Stem("revólver"), "revólv" );
	deepEqual( Stem("revot"), "revot" );
	deepEqual( Stem("revson"), "revson" );
	deepEqual( Stem("rex"), "rex" );
	deepEqual( Stem("reza"), "rez" );
	deepEqual( Stem("rezar"), "rez" );
	deepEqual( Stem("rezas"), "rez" );
	deepEqual( Stem("rezende"), "rezend" );
	deepEqual( Stem("rezo"), "rez" );
	deepEqual( Stem("rezou"), "rez" );
	deepEqual( Stem("rg"), "rg" );
	deepEqual( Stem("rgs"), "rgs" );
	deepEqual( Stem("rh"), "rh" );
	deepEqual( Stem("rhodia"), "rhod" );
	deepEqual( Stem("rhône"), "rhôn" );
	deepEqual( Stem("ri"), "ri" );
	deepEqual( Stem("riachuelo"), "riachuel" );
	deepEqual( Stem("riam"), "riam" );
	deepEqual( Stem("ribamar"), "ribam" );
	deepEqual( Stem("ribanceiras"), "ribanceir" );
	deepEqual( Stem("ribeirão"), "rib" );
	deepEqual( Stem("ribeiras"), "ribeir" );
	deepEqual( Stem("ribeirinhas"), "ribeirinh" );
	deepEqual( Stem("ribeiro"), "ribeir" );
	deepEqual( Stem("rica"), "ric" );
	deepEqual( Stem("ricaços"), "ricac" );
	deepEqual( Stem("ricardo"), "ricard" );
	deepEqual( Stem("ricas"), "ric" );
	deepEqual( Stem("richard"), "richard" );
	deepEqual( Stem("richieri"), "richier" );
	deepEqual( Stem("rick"), "rick" );
	deepEqual( Stem("rico"), "ric" );
	deepEqual( Stem("ricos"), "ric" );
	deepEqual( Stem("ricota"), "ricot" );
	deepEqual( Stem("ríctus"), "ríctus" );
	deepEqual( Stem("ricupero"), "ricuper" );
	deepEqual( Stem("riddle"), "riddl" );
	deepEqual( Stem("rider"), "rid" );
	deepEqual( Stem("ridícula"), "ridícul" );
	deepEqual( Stem("ridicularizando"), "ridiculariz" );
	deepEqual( Stem("ridículas"), "ridícul" );
	deepEqual( Stem("ridículo"), "ridícul" );
	deepEqual( Stem("ridículos"), "ridícul" );
	deepEqual( Stem("rifkin"), "rifkin" );
	deepEqual( Stem("rifle"), "rifl" );
	deepEqual( Stem("rifles"), "rifl" );
	deepEqual( Stem("rígida"), "ríg" );
	deepEqual( Stem("rigidez"), "rigidez" );
	deepEqual( Stem("rígido"), "ríg" );
	deepEqual( Stem("rígidos"), "ríg" );
	deepEqual( Stem("rigor"), "rigor" );
	deepEqual( Stem("rigorosa"), "rigor" );
	deepEqual( Stem("rigorosamente"), "rigor" );
	deepEqual( Stem("rigorosas"), "rigor" );
	deepEqual( Stem("rigorosíssima"), "rigorosíssim" );
	deepEqual( Stem("rigoroso"), "rigor" );
	deepEqual( Stem("rigorosos"), "rigor" );
	deepEqual( Stem("rija"), "rij" );
	deepEqual( Stem("rim"), "rim" );
	deepEqual( Stem("rima"), "rim" );
	deepEqual( Stem("rímel"), "rímel" );
	deepEqual( Stem("rimini"), "rimin" );
	deepEqual( Stem("rincão"), "rincã" );
	deepEqual( Stem("rindo"), "rind" );
	deepEqual( Stem("rindt"), "rindt" );
	deepEqual( Stem("ringo"), "ring" );
	deepEqual( Stem("ringue"), "ring" );
	deepEqual( Stem("ringues"), "ringu" );
	deepEqual( Stem("rins"), "rins" );
	deepEqual( Stem("rinse"), "rins" );
	deepEqual( Stem("rio"), "rio" );
	deepEqual( Stem("riocentro"), "riocentr" );
	deepEqual( Stem("rioja"), "rioj" );
	deepEqual( Stem("rios"), "rios" );
	deepEqual( Stem("riquenha"), "riquenh" );
	deepEqual( Stem("riqueza"), "riquez" );
	deepEqual( Stem("riquezas"), "riquez" );
	deepEqual( Stem("riquinho"), "riquinh" );
	deepEqual( Stem("riquíssimo"), "riquíssim" );
	deepEqual( Stem("rir"), "rir" );
	deepEqual( Stem("risadas"), "ris" );
	deepEqual( Stem("risca"), "risc" );
	deepEqual( Stem("risco"), "risc" );
	deepEqual( Stem("riscos"), "risc" );
	deepEqual( Stem("riscou"), "risc" );
	deepEqual( Stem("rising"), "rising" );
	deepEqual( Stem("risível"), "risível" );
	deepEqual( Stem("riso"), "ris" );
	deepEqual( Stem("risos"), "ris" );
	deepEqual( Stem("ríspida"), "rísp" );
	deepEqual( Stem("rispidamente"), "rispid" );
	deepEqual( Stem("ríspido"), "rísp" );
	deepEqual( Stem("ríspidos"), "rísp" );
	deepEqual( Stem("rita"), "rit" );
	deepEqual( Stem("ritchie"), "ritchi" );
	deepEqual( Stem("ritmado"), "ritm" );
	deepEqual( Stem("rítmica"), "rítmic" );
	deepEqual( Stem("rítmicas"), "rítmic" );
	deepEqual( Stem("ritmistas"), "ritmist" );
	deepEqual( Stem("ritmo"), "ritm" );
	deepEqual( Stem("ritmos"), "ritm" );
	deepEqual( Stem("rito"), "rit" );
	deepEqual( Stem("ritos"), "rit" );
	deepEqual( Stem("rituais"), "ritu" );
	deepEqual( Stem("ritual"), "ritual" );
	deepEqual( Stem("riu"), "riu" );
	deepEqual( Stem("rivais"), "riv" );
	deepEqual( Stem("rival"), "rival" );
	deepEqual( Stem("rivalidade"), "rival" );
	deepEqual( Stem("rivalidades"), "rival" );
	deepEqual( Stem("rivalizam"), "rivaliz" );
	deepEqual( Stem("rivelino"), "rivelin" );
	deepEqual( Stem("rivero"), "river" );
	deepEqual( Stem("riviera"), "rivi" );
	deepEqual( Stem("rivotril"), "rivotril" );
	deepEqual( Stem("rj"), "rj" );
	deepEqual( Stem("rm"), "rm" );
	deepEqual( Stem("rmão"), "rmã" );
	deepEqual( Stem("rn"), "rn" );
	deepEqual( Stem("ro"), "ro" );
	deepEqual( Stem("rô"), "rô" );
	deepEqual( Stem("road"), "road" );
	deepEqual( Stem("robb"), "robb" );
	deepEqual( Stem("robe"), "rob" );
	deepEqual( Stem("robert"), "robert" );
	deepEqual( Stem("roberta"), "robert" );
	deepEqual( Stem("roberti"), "robert" );
	deepEqual( Stem("roberto"), "robert" );
	deepEqual( Stem("roberts"), "roberts" );
	deepEqual( Stem("robespierre"), "robespierr" );
	deepEqual( Stem("robin"), "robin" );
	deepEqual( Stem("robles"), "robl" );
	deepEqual( Stem("robô"), "robô" );
	deepEqual( Stem("robortella"), "robortell" );
	deepEqual( Stem("robru"), "robru" );
	deepEqual( Stem("robson"), "robson" );
	deepEqual( Stem("robusta"), "robust" );
	deepEqual( Stem("roça"), "roc" );
	deepEqual( Stem("roçado"), "roc" );
	deepEqual( Stem("roceiro"), "roceir" );
	deepEqual( Stem("rocha"), "roch" );
	deepEqual( Stem("rochas"), "roch" );
	deepEqual( Stem("rochedo"), "roched" );
	deepEqual( Stem("rochelle"), "rochell" );
	deepEqual( Stem("rochester"), "rochest" );
	deepEqual( Stem("rochosa"), "rochos" );
	deepEqual( Stem("rochosos"), "rochos" );
	deepEqual( Stem("rocinha"), "rocinh" );
	deepEqual( Stem("rock"), "rock" );
	deepEqual( Stem("rockefeller"), "rockefell" );
	deepEqual( Stem("rockfeller"), "rockfell" );
	deepEqual( Stem("rockies"), "rocki" );
	deepEqual( Stem("rococó"), "rococ" );
	deepEqual( Stem("rod"), "rod" );
	deepEqual( Stem("roda"), "rod" );
	deepEqual( Stem("rodada"), "rod" );
	deepEqual( Stem("rodadas"), "rod" );
	deepEqual( Stem("rodado"), "rod" );
	deepEqual( Stem("rodam"), "rod" );
	deepEqual( Stem("rodando"), "rod" );
	deepEqual( Stem("rodar"), "rod" );
	deepEqual( Stem("rodas"), "rod" );
	deepEqual( Stem("rodavam"), "rod" );
	deepEqual( Stem("rodeada"), "rod" );
	deepEqual( Stem("rodeados"), "rod" );
	deepEqual( Stem("rodeia"), "rod" );
	deepEqual( Stem("rodeiam"), "rod" );
	deepEqual( Stem("rodeios"), "rodei" );
	deepEqual( Stem("rodinha"), "rodinh" );
	deepEqual( Stem("rodinhas"), "rodinh" );
	deepEqual( Stem("rodízio"), "rodízi" );
	deepEqual( Stem("rodo"), "rod" );
	deepEqual( Stem("rodolfo"), "rodolf" );
	deepEqual( Stem("rodonave"), "rodonav" );
	deepEqual( Stem("rodopiando"), "rodopi" );
	deepEqual( Stem("rodovia"), "rodov" );
	deepEqual( Stem("rodoviária"), "rodoviár" );
	deepEqual( Stem("rodoviário"), "rodoviári" );
	deepEqual( Stem("rodoviários"), "rodoviári" );
	deepEqual( Stem("rodovias"), "rodov" );
	deepEqual( Stem("rodrigo"), "rodrig" );
	deepEqual( Stem("rodrigues"), "rodrigu" );
	deepEqual( Stem("rodriguez"), "rodriguez" );
	deepEqual( Stem("rodríguez"), "rodríguez" );
	deepEqual( Stem("roer"), "roer" );
	deepEqual( Stem("rogelio"), "rogeli" );
	deepEqual( Stem("roger"), "rog" );
	deepEqual( Stem("rogéria"), "rogér" );
	deepEqual( Stem("rogerio"), "rogeri" );
	deepEqual( Stem("rogério"), "rogéri" );
	deepEqual( Stem("roitman"), "roitman" );
	deepEqual( Stem("rol"), "rol" );
	deepEqual( Stem("rola"), "rol" );
	deepEqual( Stem("rolagem"), "rolag" );
	deepEqual( Stem("rolagens"), "rolagens" );
	deepEqual( Stem("rolam"), "rol" );
	deepEqual( Stem("roland"), "roland" );
	deepEqual( Stem("rolando"), "rol" );
	deepEqual( Stem("rolar"), "rol" );
	deepEqual( Stem("rolaram"), "rol" );
	deepEqual( Stem("rôle"), "rôl" );
	deepEqual( Stem("rolê"), "rol" );
	deepEqual( Stem("rolês"), "rolês" );
	deepEqual( Stem("roleta"), "rolet" );
	deepEqual( Stem("roletas"), "rolet" );
	deepEqual( Stem("rolex"), "rolex" );
	deepEqual( Stem("rolhas"), "rolh" );
	deepEqual( Stem("rolim"), "rolim" );
	deepEqual( Stem("roll"), "roll" );
	deepEqual( Stem("rolling"), "rolling" );
	deepEqual( Stem("rollins"), "rollins" );
	deepEqual( Stem("rolls"), "rolls" );
	deepEqual( Stem("rolo"), "rol" );
	deepEqual( Stem("rolou"), "rol" );
	deepEqual( Stem("rom"), "rom" );
	deepEqual( Stem("roma"), "rom" );
	deepEqual( Stem("romana"), "roman" );
	deepEqual( Stem("romance"), "romanc" );
	deepEqual( Stem("romances"), "romanc" );
	deepEqual( Stem("romano"), "roman" );
	deepEqual( Stem("romanos"), "roman" );
	deepEqual( Stem("romântica"), "românt" );
	deepEqual( Stem("românticas"), "românt" );
	deepEqual( Stem("romantico"), "romant" );
	deepEqual( Stem("romântico"), "românt" );
	deepEqual( Stem("românticos"), "românt" );
	deepEqual( Stem("romantismo"), "romant" );
	deepEqual( Stem("romão"), "romã" );
	deepEqual( Stem("romaria"), "rom" );
	deepEqual( Stem("romarias"), "rom" );
	deepEqual( Stem("romário"), "romári" );
	deepEqual( Stem("rombo"), "romb" );
	deepEqual( Stem("romeiro"), "romeir" );
	deepEqual( Stem("romeiros"), "romeir" );
	deepEqual( Stem("romero"), "romer" );
	deepEqual( Stem("romeu"), "rom" );
	deepEqual( Stem("romeus"), "romeus" );
	deepEqual( Stem("rommel"), "rommel" );
	deepEqual( Stem("rompendo"), "romp" );
	deepEqual( Stem("romper"), "romp" );
	deepEqual( Stem("romperem"), "romp" );
	deepEqual( Stem("rompeu"), "romp" );
	deepEqual( Stem("rompida"), "romp" );
	deepEqual( Stem("rompidos"), "romp" );
	deepEqual( Stem("rompimento"), "rompiment" );
	deepEqual( Stem("roms"), "roms" );
	deepEqual( Stem("rômulo"), "rômul" );
	deepEqual( Stem("romy"), "romy" );
	deepEqual( Stem("ronald"), "ronald" );
	deepEqual( Stem("ronaldinho"), "ronaldinh" );
	deepEqual( Stem("ronaldo"), "ronald" );
	deepEqual( Stem("ronca"), "ronc" );
	deepEqual( Stem("roncam"), "ronc" );
	deepEqual( Stem("roncati"), "roncat" );
	deepEqual( Stem("roncatti"), "roncatt" );
	deepEqual( Stem("ronda"), "rond" );
	deepEqual( Stem("rondam"), "rond" );
	deepEqual( Stem("rondar"), "rond" );
	deepEqual( Stem("rondon"), "rondon" );
	deepEqual( Stem("rondônia"), "rondôn" );
	deepEqual( Stem("rondoniense"), "rondoniens" );
	deepEqual( Stem("roni"), "ron" );
	deepEqual( Stem("roniel"), "roniel" );
	deepEqual( Stem("roniquito"), "roniquit" );
	deepEqual( Stem("ronivon"), "ronivon" );
	deepEqual( Stem("ronnie"), "ronni" );
	deepEqual( Stem("room"), "room" );
	deepEqual( Stem("roosevelt"), "roosevelt" );
	deepEqual( Stem("roque"), "roqu" );
	deepEqual( Stem("roqueira"), "roqueir" );
	deepEqual( Stem("roqueiro"), "roqueir" );
	deepEqual( Stem("roqueiros"), "roqueir" );
	deepEqual( Stem("roraima"), "roraim" );
	deepEqual( Stem("rosa"), "ros" );
	deepEqual( Stem("rosada"), "ros" );
	deepEqual( Stem("rosado"), "ros" );
	deepEqual( Stem("rosales"), "rosal" );
	deepEqual( Stem("rosalina"), "rosalin" );
	deepEqual( Stem("rosalinda"), "rosalind" );
	deepEqual( Stem("rosana"), "rosan" );
	deepEqual( Stem("rosane"), "rosan" );
	deepEqual( Stem("rosângela"), "rosângel" );
	deepEqual( Stem("rosário"), "rosári" );
	deepEqual( Stem("rosas"), "ros" );
	deepEqual( Stem("roscoe"), "rosco" );
	deepEqual( Stem("rose"), "ros" );
	deepEqual( Stem("rósea"), "rós" );
	deepEqual( Stem("roseana"), "rosean" );
	deepEqual( Stem("rosely"), "rosely" );
	deepEqual( Stem("rosemberg"), "rosemberg" );
	deepEqual( Stem("rosenberg"), "rosenberg" );
	deepEqual( Stem("rosenblatt"), "rosenblatt" );
	deepEqual( Stem("rosenfeld"), "rosenfeld" );
	deepEqual( Stem("rosielma"), "rosielm" );
	deepEqual( Stem("rossellini"), "rossellin" );
	deepEqual( Stem("rossi"), "ross" );
	deepEqual( Stem("rossini"), "rossin" );
	deepEqual( Stem("rosto"), "rost" );
	deepEqual( Stem("rostos"), "rost" );
	deepEqual( Stem("roswell"), "roswell" );
	deepEqual( Stem("rota"), "rot" );
	deepEqual( Stem("rotação"), "rotaçã" );
	deepEqual( Stem("rotas"), "rot" );
	deepEqual( Stem("roteirista"), "roteir" );
	deepEqual( Stem("roteiristas"), "roteir" );
	deepEqual( Stem("roteiro"), "roteir" );
	deepEqual( Stem("roteiros"), "roteir" );
	deepEqual( Stem("roterdã"), "roterdã" );
	deepEqual( Stem("rotina"), "rotin" );
	deepEqual( Stem("rotinas"), "rotin" );
	deepEqual( Stem("rotineira"), "rotineir" );
	deepEqual( Stem("rotineiramente"), "rotineir" );
	deepEqual( Stem("rotineiro"), "rotineir" );
	deepEqual( Stem("rotineiros"), "rotineir" );
	deepEqual( Stem("rotulada"), "rotul" );
	deepEqual( Stem("rotulando"), "rotul" );
	deepEqual( Stem("rótulo"), "rótul" );
	deepEqual( Stem("rótulos"), "rótul" );
	deepEqual( Stem("roubada"), "roub" );
	deepEqual( Stem("roubado"), "roub" );
	deepEqual( Stem("roubados"), "roub" );
	deepEqual( Stem("roubalheira"), "roubalheir" );
	deepEqual( Stem("roubam"), "roub" );
	deepEqual( Stem("roubar"), "roub" );
	deepEqual( Stem("roubara"), "roub" );
	deepEqual( Stem("roubo"), "roub" );
	deepEqual( Stem("roubos"), "roub" );
	deepEqual( Stem("roubou"), "roub" );
	deepEqual( Stem("rounds"), "rounds" );
	deepEqual( Stem("roupa"), "roup" );
	deepEqual( Stem("roupagens"), "roupagens" );
	deepEqual( Stem("roupas"), "roup" );
	deepEqual( Stem("roxo"), "rox" );
	deepEqual( Stem("royal"), "royal" );
	deepEqual( Stem("royce"), "royc" );
	deepEqual( Stem("roza"), "roz" );
	deepEqual( Stem("rozas"), "roz" );
	deepEqual( Stem("rozi"), "roz" );
	deepEqual( Stem("rpm"), "rpm" );
	deepEqual( Stem("rs"), "rs" );
	deepEqual( Stem("rsf"), "rsf" );
	deepEqual( Stem("rsfcens"), "rsfcens" );
	deepEqual( Stem("rtca"), "rtca" );
	deepEqual( Stem("rtes"), "rtes" );
	deepEqual( Stem("rua"), "rua" );
	deepEqual( Stem("ruas"), "ruas" );
	deepEqual( Stem("rubem"), "rub" );
	deepEqual( Stem("ruben"), "ruben" );
	deepEqual( Stem("rubens"), "rubens" );
	deepEqual( Stem("rubinstein"), "rubinstein" );
	deepEqual( Stem("rubio"), "rubi" );
	deepEqual( Stem("ruço"), "ruc" );
	deepEqual( Stem("rude"), "rud" );
	deepEqual( Stem("rudolf"), "rudolf" );
	deepEqual( Stem("rudolph"), "rudolph" );
	deepEqual( Stem("rudyard"), "rudyard" );
	deepEqual( Stem("rue"), "rue" );
	deepEqual( Stem("ruelas"), "ruel" );
	deepEqual( Stem("ruga"), "rug" );
	deepEqual( Stem("rugas"), "rug" );
	deepEqual( Stem("rúgbi"), "rúgb" );
	deepEqual( Stem("rugido"), "rug" );
	deepEqual( Stem("rugir"), "rug" );
	deepEqual( Stem("rui"), "rui" );
	deepEqual( Stem("ruído"), "ruíd" );
	deepEqual( Stem("ruídos"), "ruíd" );
	deepEqual( Stem("ruidosas"), "ruidos" );
	deepEqual( Stem("ruim"), "ruim" );
	deepEqual( Stem("ruína"), "ruín" );
	deepEqual( Stem("ruínas"), "ruín" );
	deepEqual( Stem("ruins"), "ruins" );
	deepEqual( Stem("ruir"), "ruir" );
	deepEqual( Stem("ruiu"), "ruiu" );
	deepEqual( Stem("ruivo"), "ruiv" );
	deepEqual( Stem("ruiz"), "ruiz" );
	deepEqual( Stem("rullian"), "rullian" );
	deepEqual( Stem("rumar"), "rum" );
	deepEqual( Stem("rumaram"), "rum" );
	deepEqual( Stem("rumo"), "rum" );
	deepEqual( Stem("rumor"), "rumor" );
	deepEqual( Stem("rumoroso"), "rumor" );
	deepEqual( Stem("rumorosos"), "rumor" );
	deepEqual( Stem("runner"), "runn" );
	deepEqual( Stem("rupp"), "rupp" );
	deepEqual( Stem("ruptura"), "ruptur" );
	deepEqual( Stem("rupturas"), "ruptur" );
	deepEqual( Stem("rurais"), "rur" );
	deepEqual( Stem("rural"), "rural" );
	deepEqual( Stem("rusgas"), "rusg" );
	deepEqual( Stem("rushdie"), "rushdi" );
	deepEqual( Stem("russa"), "russ" );
	deepEqual( Stem("russas"), "russ" );
	deepEqual( Stem("russel"), "russel" );
	deepEqual( Stem("rússia"), "rúss" );
	deepEqual( Stem("russificação"), "russific" );
	deepEqual( Stem("russo"), "russ" );
	deepEqual( Stem("russos"), "russ" );
	deepEqual( Stem("rústico"), "rústic" );
	deepEqual( Stem("ruta"), "rut" );
	deepEqual( Stem("ruth"), "ruth" );
	deepEqual( Stem("ruy"), "ruy" );
	deepEqual( Stem("ryder"), "ryder" );
	deepEqual( Stem("s"), "s" );
	deepEqual( Stem("sá"), "sá" );
	deepEqual( Stem("saad"), "saad" );
	deepEqual( Stem("sábado"), "sáb" );
	deepEqual( Stem("sábados"), "sáb" );
	deepEqual( Stem("sabata"), "sabat" );
	deepEqual( Stem("sábato"), "sábat" );
	deepEqual( Stem("sabe"), "sab" );
	deepEqual( Stem("sabedoria"), "sabedor" );
	deepEqual( Stem("sabem"), "sab" );
	deepEqual( Stem("sabemos"), "sab" );
	deepEqual( Stem("sabendo"), "sab" );
	deepEqual( Stem("saber"), "sab" );
	deepEqual( Stem("saberá"), "sab" );
	deepEqual( Stem("saberem"), "sab" );
	deepEqual( Stem("saberia"), "sab" );
	deepEqual( Stem("saberiam"), "sab" );
	deepEqual( Stem("sabermos"), "sab" );
	deepEqual( Stem("sabesp"), "sabesp" );
	deepEqual( Stem("sabia"), "sab" );
	deepEqual( Stem("sábia"), "sáb" );
	deepEqual( Stem("sabiam"), "sab" );
	deepEqual( Stem("sabiamente"), "sabi" );
	deepEqual( Stem("sabíamos"), "sab" );
	deepEqual( Stem("sabidamente"), "sabid" );
	deepEqual( Stem("sabido"), "sab" );
	deepEqual( Stem("sabino"), "sabin" );
	deepEqual( Stem("sábio"), "sábi" );
	deepEqual( Stem("sábios"), "sábi" );
	deepEqual( Stem("sabonete"), "sabonet" );
	deepEqual( Stem("sabor"), "sabor" );
	deepEqual( Stem("saborear"), "sabor" );
	deepEqual( Stem("saboreiam"), "sabor" );
	deepEqual( Stem("sabores"), "sabor" );
	deepEqual( Stem("saborosa"), "sabor" );
	deepEqual( Stem("saborosas"), "sabor" );
	deepEqual( Stem("saboroso"), "sabor" );
	deepEqual( Stem("saborosos"), "sabor" );
	deepEqual( Stem("sabrit"), "sabrit" );
	deepEqual( Stem("saca"), "sac" );
	deepEqual( Stem("sacada"), "sac" );
	deepEqual( Stem("sacados"), "sac" );
	deepEqual( Stem("sacanear"), "sacan" );
	deepEqual( Stem("sacas"), "sac" );
	deepEqual( Stem("sacerdócio"), "sacerdóci" );
	deepEqual( Stem("sacerdortisa"), "sacerdortis" );
	deepEqual( Stem("sacerdotal"), "sacerdotal" );
	deepEqual( Stem("sacerdote"), "sacerdot" );
	deepEqual( Stem("sacerdotes"), "sacerdot" );
	deepEqual( Stem("sacerdotisa"), "sacerdotis" );
	deepEqual( Stem("sachê"), "sach" );
	deepEqual( Stem("saciarem"), "sac" );
	deepEqual( Stem("saciedade"), "saciedad" );
	deepEqual( Stem("saco"), "sac" );
	deepEqual( Stem("sacode"), "sacod" );
	deepEqual( Stem("sacolas"), "sacol" );
	deepEqual( Stem("sacoleiras"), "sacoleir" );
	deepEqual( Stem("sacoleja"), "sacolej" );
	deepEqual( Stem("sacolejar"), "sacolej" );
	deepEqual( Stem("sacolejou"), "sacolej" );
	deepEqual( Stem("sacolinhas"), "sacolinh" );
	deepEqual( Stem("sacou"), "sac" );
	deepEqual( Stem("sacramento"), "sacrament" );
	deepEqual( Stem("sacrificado"), "sacrific" );
	deepEqual( Stem("sacrificar"), "sacrific" );
	deepEqual( Stem("sacrifício"), "sacrifíci" );
	deepEqual( Stem("sacrifícios"), "sacrifíci" );
	deepEqual( Stem("sacudir"), "sacud" );
	deepEqual( Stem("sacudiu"), "sacud" );
	deepEqual( Stem("saddam"), "sadd" );
	deepEqual( Stem("sade"), "sad" );
	deepEqual( Stem("sadia"), "sad" );
	deepEqual( Stem("sadias"), "sad" );
	deepEqual( Stem("sádico"), "sádic" );
	deepEqual( Stem("sadomasoquistas"), "sadomasoqu" );
	deepEqual( Stem("sae"), "sae" );
	deepEqual( Stem("saem"), "saem" );
	deepEqual( Stem("safadinha"), "safadinh" );
	deepEqual( Stem("safado"), "saf" );
	deepEqual( Stem("safar"), "saf" );
	deepEqual( Stem("safáris"), "safár" );
	deepEqual( Stem("safena"), "safen" );
	deepEqual( Stem("safer"), "saf" );
	deepEqual( Stem("safir"), "saf" );
	deepEqual( Stem("safra"), "safr" );
	deepEqual( Stem("saga"), "sag" );
	deepEqual( Stem("sagan"), "sagan" );
	deepEqual( Stem("sagra"), "sagr" );
	deepEqual( Stem("sagração"), "sagraçã" );
	deepEqual( Stem("sagrada"), "sagr" );
	deepEqual( Stem("sagradas"), "sagr" );
	deepEqual( Stem("sagrado"), "sagr" );
	deepEqual( Stem("sagrados"), "sagr" );
	deepEqual( Stem("sagres"), "sagr" );
	deepEqual( Stem("sagrou"), "sagr" );
	deepEqual( Stem("saguão"), "saguã" );
	deepEqual( Stem("sahione"), "sahion" );
	deepEqual( Stem("sai"), "sai" );
	deepEqual( Stem("saí"), "saí" );
	deepEqual( Stem("saia"), "sai" );
	deepEqual( Stem("saía"), "saí" );
	deepEqual( Stem("saiam"), "sai" );
	deepEqual( Stem("saíam"), "saí" );
	deepEqual( Stem("saíamos"), "saí" );
	deepEqual( Stem("saias"), "sai" );
	deepEqual( Stem("saiba"), "saib" );
	deepEqual( Stem("saibam"), "saib" );
	deepEqual( Stem("saibro"), "saibr" );
	deepEqual( Stem("said"), "said" );
	deepEqual( Stem("saída"), "saíd" );
	deepEqual( Stem("saídas"), "saíd" );
	deepEqual( Stem("saído"), "saíd" );
	deepEqual( Stem("saídos"), "saíd" );
	deepEqual( Stem("saigne"), "saign" );
	deepEqual( Stem("saímos"), "saím" );
	deepEqual( Stem("saindo"), "saind" );
	deepEqual( Stem("saint"), "saint" );
	deepEqual( Stem("sainte"), "saint" );
	deepEqual( Stem("saio"), "sai" );
	deepEqual( Stem("saiote"), "saiot" );
	deepEqual( Stem("sair"), "sair" );
	deepEqual( Stem("sairá"), "sair" );
	deepEqual( Stem("saíram"), "saír" );
	deepEqual( Stem("sairão"), "sairã" );
	deepEqual( Stem("sairia"), "sair" );
	deepEqual( Stem("sairiam"), "sair" );
	deepEqual( Stem("sais"), "sais" );
	deepEqual( Stem("saísse"), "saíss" );
	deepEqual( Stem("saíssem"), "saíss" );
	deepEqual( Stem("saiu"), "saiu" );
	deepEqual( Stem("sajot"), "sajot" );
	deepEqual( Stem("sal"), "sal" );
	deepEqual( Stem("sala"), "sal" );
	deepEqual( Stem("salada"), "sal" );
	deepEqual( Stem("salamaleques"), "salamalequ" );
	deepEqual( Stem("salames"), "salam" );
	deepEqual( Stem("salão"), "salã" );
	deepEqual( Stem("salariais"), "salari" );
	deepEqual( Stem("salarial"), "salarial" );
	deepEqual( Stem("salário"), "salári" );
	deepEqual( Stem("salários"), "salári" );
	deepEqual( Stem("salas"), "sal" );
	deepEqual( Stem("salazar"), "salaz" );
	deepEqual( Stem("saldados"), "sald" );
	deepEqual( Stem("saldanha"), "saldanh" );
	deepEqual( Stem("saldar"), "sald" );
	deepEqual( Stem("saldo"), "sald" );
	deepEqual( Stem("saldos"), "sald" );
	deepEqual( Stem("salem"), "sal" );
	deepEqual( Stem("sales"), "sal" );
	deepEqual( Stem("salesiana"), "salesian" );
	deepEqual( Stem("salgada"), "salg" );
	deepEqual( Stem("salgadinhos"), "salgadinh" );
	deepEqual( Stem("salgado"), "salg" );
	deepEqual( Stem("salgados"), "salg" );
	deepEqual( Stem("salgueiro"), "salgueir" );
	deepEqual( Stem("saliência"), "saliênc" );
	deepEqual( Stem("saliências"), "saliênc" );
	deepEqual( Stem("salienta"), "salient" );
	deepEqual( Stem("salientando"), "salient" );
	deepEqual( Stem("salientar"), "salient" );
	deepEqual( Stem("saliente"), "salient" );
	deepEqual( Stem("salinha"), "salinh" );
	deepEqual( Stem("saliva"), "saliv" );
	deepEqual( Stem("sallai"), "salla" );
	deepEqual( Stem("salles"), "sall" );
	deepEqual( Stem("salman"), "salman" );
	deepEqual( Stem("salmão"), "salmã" );
	deepEqual( Stem("salmões"), "salmõ" );
	deepEqual( Stem("salobo"), "salob" );
	deepEqual( Stem("salões"), "salõ" );
	deepEqual( Stem("salomão"), "salomã" );
	deepEqual( Stem("salpicado"), "salpic" );
	deepEqual( Stem("salsa"), "sals" );
	deepEqual( Stem("salsaretti"), "salsarett" );
	deepEqual( Stem("salta"), "salt" );
	deepEqual( Stem("saltam"), "salt" );
	deepEqual( Stem("saltando"), "salt" );
	deepEqual( Stem("saltarem"), "salt" );
	deepEqual( Stem("saltava"), "salt" );
	deepEqual( Stem("salte"), "salt" );
	deepEqual( Stem("salteador"), "salteador" );
	deepEqual( Stem("saltei"), "salt" );
	deepEqual( Stem("saltinho"), "saltinh" );
	deepEqual( Stem("saltitantes"), "saltit" );
	deepEqual( Stem("salto"), "salt" );
	deepEqual( Stem("saltou"), "salt" );
	deepEqual( Stem("salva"), "salv" );
	deepEqual( Stem("salvá"), "salv" );
	deepEqual( Stem("salvação"), "salvaçã" );
	deepEqual( Stem("salvado"), "salv" );
	deepEqual( Stem("salvador"), "salvador" );
	deepEqual( Stem("salvadora"), "salvador" );
	deepEqual( Stem("salvajoli"), "salvajol" );
	deepEqual( Stem("salvamento"), "salvament" );
	deepEqual( Stem("salvando"), "salv" );
	deepEqual( Stem("salvar"), "salv" );
	deepEqual( Stem("salvaria"), "salv" );
	deepEqual( Stem("salvatore"), "salvator" );
	deepEqual( Stem("salvatti"), "salvatt" );
	deepEqual( Stem("salvo"), "salv" );
	deepEqual( Stem("salvos"), "salv" );
	deepEqual( Stem("salvou"), "salv" );
	deepEqual( Stem("sam"), "sam" );
	deepEqual( Stem("samaipata"), "samaipat" );
	deepEqual( Stem("samantha"), "samanth" );
	deepEqual( Stem("samaritano"), "samaritan" );
	deepEqual( Stem("samba"), "samb" );
	deepEqual( Stem("sambando"), "samb" );
	deepEqual( Stem("sambas"), "samb" );
	deepEqual( Stem("sambista"), "sambist" );
	deepEqual( Stem("sambísticas"), "sambíst" );
	deepEqual( Stem("sambódromo"), "sambódrom" );
	deepEqual( Stem("sami"), "sam" );
	deepEqual( Stem("sampaio"), "sampai" );
	deepEqual( Stem("samper"), "samp" );
	deepEqual( Stem("sampras"), "sampr" );
	deepEqual( Stem("samuel"), "samuel" );
	deepEqual( Stem("san"), "san" );
	deepEqual( Stem("sanatório"), "sanatóri" );
	deepEqual( Stem("sanches"), "sanch" );
	deepEqual( Stem("sanchez"), "sanchez" );
	deepEqual( Stem("sanções"), "sançõ" );
	deepEqual( Stem("sandália"), "sandál" );
	deepEqual( Stem("sandálias"), "sandál" );
	deepEqual( Stem("sandalo"), "sandal" );
	deepEqual( Stem("sandra"), "sandr" );
	deepEqual( Stem("sandro"), "sandr" );
	deepEqual( Stem("sanduíche"), "sanduích" );
	deepEqual( Stem("sanduíches"), "sanduích" );
	deepEqual( Stem("sandy"), "sandy" );
	deepEqual( Stem("saneada"), "san" );
	deepEqual( Stem("saneado"), "san" );
	deepEqual( Stem("saneamento"), "saneament" );
	deepEqual( Stem("sanear"), "san" );
	deepEqual( Stem("sanfoneiro"), "sanfoneir" );
	deepEqual( Stem("sanfoneiros"), "sanfoneir" );
	deepEqual( Stem("sangradas"), "sangr" );
	deepEqual( Stem("sangramentos"), "sangrament" );
	deepEqual( Stem("sangrando"), "sangr" );
	deepEqual( Stem("sangrar"), "sangr" );
	deepEqual( Stem("sangrenta"), "sangrent" );
	deepEqual( Stem("sangrento"), "sangrent" );
	deepEqual( Stem("sangria"), "sangr" );
	deepEqual( Stem("sangue"), "sang" );
	deepEqual( Stem("sangues"), "sangu" );
	deepEqual( Stem("sanguinários"), "sanguinári" );
	deepEqual( Stem("sanguínea"), "sanguín" );
	deepEqual( Stem("sangüínea"), "sangüín" );
	deepEqual( Stem("sanguíneos"), "sanguín" );
	deepEqual( Stem("sanguinetti"), "sanguinett" );
	deepEqual( Stem("sanguinolentos"), "sanguinolent" );
	deepEqual( Stem("sanidade"), "sanidad" );
	deepEqual( Stem("sanitária"), "sanitár" );
	deepEqual( Stem("sanitárias"), "sanitár" );
	deepEqual( Stem("sanitário"), "sanitári" );
	deepEqual( Stem("sanjay"), "sanjay" );
	deepEqual( Stem("sans"), "sans" );
	deepEqual( Stem("sant"), "sant" );
	deepEqual( Stem("santa"), "sant" );
	deepEqual( Stem("santaconstancia"), "santaconstanc" );
	deepEqual( Stem("santana"), "santan" );
	deepEqual( Stem("santas"), "sant" );
	deepEqual( Stem("santeiro"), "santeir" );
	deepEqual( Stem("santiago"), "santiag" );
	deepEqual( Stem("santidade"), "santidad" );
	deepEqual( Stem("santificação"), "santific" );
	deepEqual( Stem("santilli"), "santill" );
	deepEqual( Stem("santíssima"), "santíssim" );
	deepEqual( Stem("santista"), "santist" );
	deepEqual( Stem("santo"), "sant" );
	deepEqual( Stem("santos"), "sant" );
	deepEqual( Stem("santuário"), "santuári" );
	deepEqual( Stem("santuários"), "santuári" );
	deepEqual( Stem("são"), "sã" );
	deepEqual( Stem("sap"), "sap" );
	deepEqual( Stem("sapaim"), "sapaim" );
	deepEqual( Stem("sapalo"), "sapal" );
	deepEqual( Stem("sapatão"), "sapatã" );
	deepEqual( Stem("sapateiro"), "sapateir" );
	deepEqual( Stem("sapatilha"), "sapatilh" );
	deepEqual( Stem("sapato"), "sapat" );
	deepEqual( Stem("sapatos"), "sapat" );
	deepEqual( Stem("sapê"), "sap" );
	deepEqual( Stem("sapês"), "sapês" );
	deepEqual( Stem("sapezal"), "sapezal" );
	deepEqual( Stem("sapo"), "sap" );
	deepEqual( Stem("sapucaí"), "sapuca" );
	deepEqual( Stem("saque"), "saqu" );
	deepEqual( Stem("saqueando"), "saqu" );
	deepEqual( Stem("saquear"), "saqu" );
	deepEqual( Stem("saqueou"), "saqu" );
	deepEqual( Stem("saques"), "saqu" );
	deepEqual( Stem("saquinho"), "saquinh" );
	deepEqual( Stem("saquinhos"), "saquinh" );
	deepEqual( Stem("sara"), "sar" );
	deepEqual( Stem("sarah"), "sarah" );
	deepEqual( Stem("saraiva"), "saraiv" );
	deepEqual( Stem("saramago"), "saramag" );
	deepEqual( Stem("sarandah"), "sarandah" );
	deepEqual( Stem("sarará"), "sar" );
	deepEqual( Stem("saratoga"), "saratog" );
	deepEqual( Stem("saraus"), "saraus" );
	deepEqual( Stem("sarcófagos"), "sarcófag" );
	deepEqual( Stem("sardenberg"), "sardenberg" );
	deepEqual( Stem("sardenta"), "sardent" );
	deepEqual( Stem("sargento"), "sargent" );
	deepEqual( Stem("sargentos"), "sargent" );
	deepEqual( Stem("sarmento"), "sarment" );
	deepEqual( Stem("sarna"), "sarn" );
	deepEqual( Stem("sarney"), "sarney" );
	deepEqual( Stem("sarro"), "sarr" );
	deepEqual( Stem("sarti"), "sart" );
	deepEqual( Stem("sartorelli"), "sartorell" );
	deepEqual( Stem("sartori"), "sartor" );
	deepEqual( Stem("sartre"), "sartr" );
	deepEqual( Stem("sassaricando"), "sassaric" );
	deepEqual( Stem("sastre"), "sastr" );
	deepEqual( Stem("satélite"), "satélit" );
	deepEqual( Stem("satélites"), "satélit" );
	deepEqual( Stem("sátira"), "sát" );
	deepEqual( Stem("sátiras"), "sát" );
	deepEqual( Stem("satisfaça"), "satisfac" );
	deepEqual( Stem("satisfação"), "satisf" );
	deepEqual( Stem("satisfações"), "satisf" );
	deepEqual( Stem("satisfatoriamente"), "satisfatori" );
	deepEqual( Stem("satisfatórias"), "satisfatór" );
	deepEqual( Stem("satisfatório"), "satisfatóri" );
	deepEqual( Stem("satisfaz"), "satisfaz" );
	deepEqual( Stem("satisfazê"), "satisfaz" );
	deepEqual( Stem("satisfazer"), "satisfaz" );
	deepEqual( Stem("satisfeita"), "satisfeit" );
	deepEqual( Stem("satisfeitíssimo"), "satisfeitíssim" );
	deepEqual( Stem("satisfeito"), "satisfeit" );
	deepEqual( Stem("satisfeitos"), "satisfeit" );
	deepEqual( Stem("saturadas"), "satur" );
	deepEqual( Stem("saturado"), "satur" );
	deepEqual( Stem("saturno"), "saturn" );
	deepEqual( Stem("saúda"), "saúd" );
	deepEqual( Stem("saudações"), "saudaçõ" );
	deepEqual( Stem("saudada"), "saud" );
	deepEqual( Stem("saudade"), "saudad" );
	deepEqual( Stem("saudades"), "saudad" );
	deepEqual( Stem("saudado"), "saud" );
	deepEqual( Stem("saudáveis"), "saud" );
	deepEqual( Stem("saudável"), "saudável" );
	deepEqual( Stem("saúde"), "saúd" );
	deepEqual( Stem("saudosos"), "saudos" );
	deepEqual( Stem("saul"), "saul" );
	deepEqual( Stem("saulo"), "saul" );
	deepEqual( Stem("sauna"), "saun" );
	deepEqual( Stem("saunas"), "saun" );
	deepEqual( Stem("sauvignon"), "sauvignon" );
	deepEqual( Stem("savana"), "savan" );
	deepEqual( Stem("save"), "sav" );
	deepEqual( Stem("savimbi"), "savimb" );
	deepEqual( Stem("saviolli"), "savioll" );
	deepEqual( Stem("saxão"), "saxã" );
	deepEqual( Stem("sayão"), "sayã" );
	deepEqual( Stem("sbh"), "sbh" );
	deepEqual( Stem("sbpc"), "sbpc" );
	deepEqual( Stem("sbt"), "sbt" );
	deepEqual( Stem("sc"), "sc" );
	deepEqual( Stem("scala"), "scal" );
	deepEqual( Stem("scan"), "scan" );
	deepEqual( Stem("scandal"), "scandal" );
	deepEqual( Stem("scania"), "scan" );
	deepEqual( Stem("scapin"), "scapin" );
	deepEqual( Stem("scarel"), "scarel" );
	deepEqual( Stem("scaringella"), "scaringell" );
	deepEqual( Stem("scarlett"), "scarlett" );
	deepEqual( Stem("schain"), "schain" );
	deepEqual( Stem("schalch"), "schalch" );
	deepEqual( Stem("schank"), "schank" );
	deepEqual( Stem("scheinkman"), "scheinkman" );
	deepEqual( Stem("scheper"), "schep" );
	deepEqual( Stem("schiff"), "schiff" );
	deepEqual( Stem("schiffer"), "schiff" );
	deepEqual( Stem("schindler"), "schindl" );
	deepEqual( Stem("schistossoma"), "schistossom" );
	deepEqual( Stem("schl"), "schl" );
	deepEqual( Stem("schmidt"), "schmidt" );
	deepEqual( Stem("schneider"), "schneid" );
	deepEqual( Stem("school"), "school" );
	deepEqual( Stem("schubert"), "schubert" );
	deepEqual( Stem("schultz"), "schultz" );
	deepEqual( Stem("schütt"), "schütt" );
	deepEqual( Stem("schwanke"), "schwank" );
	deepEqual( Stem("schwarcz"), "schwarcz" );
	deepEqual( Stem("schwartz"), "schwartz" );
	deepEqual( Stem("schwarzenegger"), "schwarzenegg" );
	deepEqual( Stem("schwarzkopf"), "schwarzkopf" );
	deepEqual( Stem("science"), "scienc" );
	deepEqual( Stem("sciences"), "scienc" );
	deepEqual( Stem("scientist"), "scientist" );
	deepEqual( Stem("scipione"), "scipion" );
	deepEqual( Stem("scliar"), "scli" );
	deepEqual( Stem("scotland"), "scotland" );
	deepEqual( Stem("scott"), "scott" );
	deepEqual( Stem("scouts"), "scouts" );
	deepEqual( Stem("scuba"), "scub" );
	deepEqual( Stem("se"), "se" );
	deepEqual( Stem("sé"), "sé" );
	deepEqual( Stem("sea"), "sea" );
	deepEqual( Stem("seabra"), "seabr" );
	deepEqual( Stem("seade"), "sead" );
	deepEqual( Stem("sean"), "sean" );
	deepEqual( Stem("search"), "search" );
	deepEqual( Stem("sears"), "sears" );
	deepEqual( Stem("seattle"), "seattl" );
	deepEqual( Stem("sebastianista"), "sebastian" );
	deepEqual( Stem("sebastião"), "sebastiã" );
	deepEqual( Stem("seca"), "sec" );
	deepEqual( Stem("secadores"), "secador" );
	deepEqual( Stem("seção"), "seçã" );
	deepEqual( Stem("secar"), "sec" );
	deepEqual( Stem("secaram"), "sec" );
	deepEqual( Stem("secção"), "secçã" );
	deepEqual( Stem("sechon"), "sechon" );
	deepEqual( Stem("seco"), "sec" );
	deepEqual( Stem("seções"), "seçõ" );
	deepEqual( Stem("secou"), "sec" );
	deepEqual( Stem("secovi"), "secov" );
	deepEqual( Stem("secreção"), "secreçã" );
	deepEqual( Stem("secreta"), "secret" );
	deepEqual( Stem("secretamente"), "secret" );
	deepEqual( Stem("secretaria"), "secret" );
	deepEqual( Stem("secretária"), "secretár" );
	deepEqual( Stem("secretariado"), "secretari" );
	deepEqual( Stem("secretarias"), "secret" );
	deepEqual( Stem("secretárias"), "secretár" );
	deepEqual( Stem("secretário"), "secretári" );
	deepEqual( Stem("secretários"), "secretári" );
	deepEqual( Stem("secretas"), "secret" );
	deepEqual( Stem("secreto"), "secret" );
	deepEqual( Stem("secretos"), "secret" );
	deepEqual( Stem("secular"), "secul" );
	deepEqual( Stem("seculares"), "secul" );
	deepEqual( Stem("século"), "sécul" );
	deepEqual( Stem("séculos"), "sécul" );
	deepEqual( Stem("secundária"), "secundár" );
	deepEqual( Stem("secundárias"), "secundár" );
	deepEqual( Stem("secundário"), "secundári" );
	deepEqual( Stem("secundários"), "secundári" );
	deepEqual( Stem("secura"), "secur" );
	deepEqual( Stem("seda"), "sed" );
	deepEqual( Stem("sedada"), "sed" );
	deepEqual( Stem("sede"), "sed" );
	deepEqual( Stem("sedentária"), "sedentár" );
	deepEqual( Stem("sedentárias"), "sedentár" );
	deepEqual( Stem("sedentário"), "sedentári" );
	deepEqual( Stem("sedentarismo"), "sedentar" );
	deepEqual( Stem("sediada"), "sedi" );
	deepEqual( Stem("sediado"), "sedi" );
	deepEqual( Stem("sediar"), "sedi" );
	deepEqual( Stem("sedimentadas"), "sediment" );
	deepEqual( Stem("sedimentava"), "sediment" );
	deepEqual( Stem("sedução"), "seduçã" );
	deepEqual( Stem("sedutor"), "sedutor" );
	deepEqual( Stem("sedutora"), "sedutor" );
	deepEqual( Stem("seduz"), "seduz" );
	deepEqual( Stem("seduzida"), "seduz" );
	deepEqual( Stem("seduzindo"), "seduz" );
	deepEqual( Stem("seduzir"), "seduz" );
	deepEqual( Stem("seduziram"), "seduz" );
	deepEqual( Stem("seduziu"), "seduz" );
	deepEqual( Stem("segall"), "segall" );
	deepEqual( Stem("segmentadas"), "segment" );
	deepEqual( Stem("segmentado"), "segment" );
	deepEqual( Stem("segmento"), "segment" );
	deepEqual( Stem("segmentos"), "segment" );
	deepEqual( Stem("segredo"), "segred" );
	deepEqual( Stem("segredos"), "segred" );
	deepEqual( Stem("segregação"), "segreg" );
	deepEqual( Stem("segue"), "seg" );
	deepEqual( Stem("seguem"), "segu" );
	deepEqual( Stem("segui"), "segu" );
	deepEqual( Stem("seguia"), "segu" );
	deepEqual( Stem("seguiam"), "segu" );
	deepEqual( Stem("seguida"), "segu" );
	deepEqual( Stem("seguidas"), "segu" );
	deepEqual( Stem("seguido"), "segu" );
	deepEqual( Stem("seguidor"), "seguidor" );
	deepEqual( Stem("seguidora"), "seguidor" );
	deepEqual( Stem("seguidores"), "seguidor" );
	deepEqual( Stem("seguidos"), "segu" );
	deepEqual( Stem("seguindo"), "segu" );
	deepEqual( Stem("seguinte"), "seguint" );
	deepEqual( Stem("seguintes"), "seguint" );
	deepEqual( Stem("seguir"), "segu" );
	deepEqual( Stem("seguiram"), "segu" );
	deepEqual( Stem("seguirem"), "segu" );
	deepEqual( Stem("seguiria"), "segu" );
	deepEqual( Stem("seguiu"), "segu" );
	deepEqual( Stem("segunda"), "segund" );
	deepEqual( Stem("segundas"), "segund" );
	deepEqual( Stem("segundo"), "segund" );
	deepEqual( Stem("segundos"), "segund" );
	deepEqual( Stem("segura"), "segur" );
	deepEqual( Stem("seguradora"), "segur" );
	deepEqual( Stem("seguradoras"), "segur" );
	deepEqual( Stem("segurados"), "segur" );
	deepEqual( Stem("seguram"), "segur" );
	deepEqual( Stem("seguramente"), "segur" );
	deepEqual( Stem("segurança"), "seguranc" );
	deepEqual( Stem("seguranças"), "seguranc" );
	deepEqual( Stem("segurando"), "segur" );
	deepEqual( Stem("segurar"), "segur" );
	deepEqual( Stem("seguras"), "segur" );
	deepEqual( Stem("segurasse"), "segur" );
	deepEqual( Stem("segurava"), "segur" );
	deepEqual( Stem("segure"), "segur" );
	deepEqual( Stem("seguridade"), "segur" );
	deepEqual( Stem("seguro"), "segur" );
	deepEqual( Stem("seguros"), "segur" );
	deepEqual( Stem("segurou"), "segur" );
	deepEqual( Stem("sei"), "sei" );
	deepEqual( Stem("seio"), "sei" );
	deepEqual( Stem("seios"), "sei" );
	deepEqual( Stem("seis"), "seis" );
	deepEqual( Stem("seiscentos"), "seiscent" );
	deepEqual( Stem("seita"), "seit" );
	deepEqual( Stem("seitas"), "seit" );
	deepEqual( Stem("seja"), "sej" );
	deepEqual( Stem("sejam"), "sej" );
	deepEqual( Stem("sejamos"), "sej" );
	deepEqual( Stem("selam"), "sel" );
	deepEqual( Stem("selar"), "sel" );
	deepEqual( Stem("selaram"), "sel" );
	deepEqual( Stem("seleção"), "seleçã" );
	deepEqual( Stem("seleciona"), "selecion" );
	deepEqual( Stem("selecionada"), "selecion" );
	deepEqual( Stem("selecionadas"), "selecion" );
	deepEqual( Stem("selecionado"), "selecion" );
	deepEqual( Stem("selecionados"), "selecion" );
	deepEqual( Stem("selecionam"), "selecion" );
	deepEqual( Stem("selecionamos"), "selecion" );
	deepEqual( Stem("selecionar"), "selecion" );
	deepEqual( Stem("selecionaram"), "selecion" );
	deepEqual( Stem("selecionava"), "selecion" );
	deepEqual( Stem("selecionou"), "selecion" );
	deepEqual( Stem("seleções"), "seleçõ" );
	deepEqual( Stem("selenium"), "selenium" );
	deepEqual( Stem("seleta"), "selet" );
	deepEqual( Stem("seletiva"), "selet" );
	deepEqual( Stem("seletivamente"), "selet" );
	deepEqual( Stem("seletivo"), "selet" );
	deepEqual( Stem("seleto"), "selet" );
	deepEqual( Stem("self"), "self" );
	deepEqual( Stem("selim"), "selim" );
	deepEqual( Stem("selinho"), "selinh" );
	deepEqual( Stem("sella"), "sell" );
	deepEqual( Stem("selleck"), "selleck" );
	deepEqual( Stem("seller"), "sell" );
	deepEqual( Stem("sellers"), "sellers" );
	deepEqual( Stem("selma"), "selm" );
	deepEqual( Stem("selmy"), "selmy" );
	deepEqual( Stem("selo"), "sel" );
	deepEqual( Stem("selton"), "selton" );
	deepEqual( Stem("seltzer"), "seltz" );
	deepEqual( Stem("selva"), "selv" );
	deepEqual( Stem("selvagem"), "selvag" );
	deepEqual( Stem("selvagens"), "selvagens" );
	deepEqual( Stem("selvageria"), "selvag" );
	deepEqual( Stem("selvas"), "selv" );
	deepEqual( Stem("selye"), "sely" );
	deepEqual( Stem("sem"), "sem" );
	deepEqual( Stem("semana"), "seman" );
	deepEqual( Stem("semanais"), "seman" );
	deepEqual( Stem("semanal"), "semanal" );
	deepEqual( Stem("semanalmente"), "semanal" );
	deepEqual( Stem("semanário"), "semanári" );
	deepEqual( Stem("semanas"), "seman" );
	deepEqual( Stem("semeadeira"), "semeadeir" );
	deepEqual( Stem("semeia"), "sem" );
	deepEqual( Stem("semeiskys"), "semeiskys" );
	deepEqual( Stem("semelhança"), "semelhanc" );
	deepEqual( Stem("semelhanças"), "semelhanc" );
	deepEqual( Stem("semelhante"), "semelh" );
	deepEqual( Stem("semelhantes"), "semelh" );
	deepEqual( Stem("sêmen"), "sêmen" );
	deepEqual( Stem("semente"), "sement" );
	deepEqual( Stem("sementes"), "sement" );
	deepEqual( Stem("semeou"), "sem" );
	deepEqual( Stem("semestral"), "semestral" );
	deepEqual( Stem("semestre"), "semestr" );
	deepEqual( Stem("semi"), "sem" );
	deepEqual( Stem("semicírculo"), "semicírcul" );
	deepEqual( Stem("semiclandestinidade"), "semiclandestin" );
	deepEqual( Stem("semifinais"), "semifin" );
	deepEqual( Stem("semifinal"), "semifinal" );
	deepEqual( Stem("semifinalista"), "semifinal" );
	deepEqual( Stem("semilírico"), "semilír" );
	deepEqual( Stem("seminais"), "semin" );
	deepEqual( Stem("seminário"), "seminári" );
	deepEqual( Stem("seminarista"), "seminar" );
	deepEqual( Stem("seminaristas"), "seminar" );
	deepEqual( Stem("seminuas"), "seminu" );
	deepEqual( Stem("semitranse"), "semitrans" );
	deepEqual( Stem("sempre"), "sempr" );
	deepEqual( Stem("sen"), "sen" );
	deepEqual( Stem("sena"), "sen" );
	deepEqual( Stem("senado"), "sen" );
	deepEqual( Stem("senador"), "senador" );
	deepEqual( Stem("senadora"), "senador" );
	deepEqual( Stem("senadores"), "senador" );
	deepEqual( Stem("senai"), "sena" );
	deepEqual( Stem("senão"), "senã" );
	deepEqual( Stem("senas"), "sen" );
	deepEqual( Stem("senderistas"), "sender" );
	deepEqual( Stem("sendero"), "sender" );
	deepEqual( Stem("sendo"), "send" );
	deepEqual( Stem("senegal"), "senegal" );
	deepEqual( Stem("senha"), "senh" );
	deepEqual( Stem("senhas"), "senh" );
	deepEqual( Stem("senhor"), "senhor" );
	deepEqual( Stem("senhora"), "senhor" );
	deepEqual( Stem("senhoras"), "senhor" );
	deepEqual( Stem("senhores"), "senhor" );
	deepEqual( Stem("senhorial"), "senhorial" );
	deepEqual( Stem("sênior"), "sênior" );
	deepEqual( Stem("senioridade"), "senior" );
	deepEqual( Stem("senise"), "senis" );
	deepEqual( Stem("senna"), "senn" );
	deepEqual( Stem("señor"), "señor" );
	deepEqual( Stem("sensação"), "sensaçã" );
	deepEqual( Stem("sensacionais"), "sensacion" );
	deepEqual( Stem("sensacional"), "sensacional" );
	deepEqual( Stem("sensacionalismo"), "sensacional" );
	deepEqual( Stem("sensacionalista"), "sensacional" );
	deepEqual( Stem("sensações"), "sensaçõ" );
	deepEqual( Stem("sensatas"), "sensat" );
	deepEqual( Stem("sensato"), "sensat" );
	deepEqual( Stem("sensibilidade"), "sensibil" );
	deepEqual( Stem("sensibiliza"), "sensibiliz" );
	deepEqual( Stem("sensibilizam"), "sensibiliz" );
	deepEqual( Stem("sensibilizar"), "sensibiliz" );
	deepEqual( Stem("sensibilizaram"), "sensibiliz" );
	deepEqual( Stem("sensibilizarmos"), "sensibiliz" );
	deepEqual( Stem("sensíveis"), "sensív" );
	deepEqual( Stem("sensível"), "sensível" );
	deepEqual( Stem("sensivelmente"), "sensivel" );
	deepEqual( Stem("senso"), "sens" );
	deepEqual( Stem("sensor"), "sensor" );
	deepEqual( Stem("sensores"), "sensor" );
	deepEqual( Stem("sensuais"), "sensu" );
	deepEqual( Stem("sensual"), "sensual" );
	deepEqual( Stem("sensualidade"), "sensual" );
	deepEqual( Stem("sensualíssima"), "sensualíssim" );
	deepEqual( Stem("sentada"), "sent" );
	deepEqual( Stem("sentadas"), "sent" );
	deepEqual( Stem("sentado"), "sent" );
	deepEqual( Stem("sentados"), "sent" );
	deepEqual( Stem("sentam"), "sent" );
	deepEqual( Stem("sentar"), "sent" );
	deepEqual( Stem("sentaram"), "sent" );
	deepEqual( Stem("sentarem"), "sent" );
	deepEqual( Stem("sentava"), "sent" );
	deepEqual( Stem("sente"), "sent" );
	deepEqual( Stem("sentei"), "sent" );
	deepEqual( Stem("sentem"), "sent" );
	deepEqual( Stem("sentença"), "sentenc" );
	deepEqual( Stem("sentenças"), "sentenc" );
	deepEqual( Stem("sentencia"), "sentenc" );
	deepEqual( Stem("senti"), "sent" );
	deepEqual( Stem("sentia"), "sent" );
	deepEqual( Stem("sentiam"), "sent" );
	deepEqual( Stem("sentida"), "sent" );
	deepEqual( Stem("sentido"), "sent" );
	deepEqual( Stem("sentidos"), "sent" );
	deepEqual( Stem("sentimental"), "sentimental" );
	deepEqual( Stem("sentimento"), "sentiment" );
	deepEqual( Stem("sentimentos"), "sentiment" );
	deepEqual( Stem("sentindo"), "sent" );
	deepEqual( Stem("sentir"), "sent" );
	deepEqual( Stem("sentiram"), "sent" );
	deepEqual( Stem("sentirem"), "sent" );
	deepEqual( Stem("sentiria"), "sent" );
	deepEqual( Stem("sentisse"), "sent" );
	deepEqual( Stem("sentiu"), "sent" );
	deepEqual( Stem("sento"), "sent" );
	deepEqual( Stem("sentou"), "sent" );
	deepEqual( Stem("senzala"), "senzal" );
	deepEqual( Stem("separa"), "sep" );
	deepEqual( Stem("separá"), "sep" );
	deepEqual( Stem("separação"), "separ" );
	deepEqual( Stem("separações"), "separ" );
	deepEqual( Stem("separada"), "separ" );
	deepEqual( Stem("separadamente"), "separ" );
	deepEqual( Stem("separadas"), "separ" );
	deepEqual( Stem("separado"), "separ" );
	deepEqual( Stem("separados"), "separ" );
	deepEqual( Stem("separamos"), "separ" );
	deepEqual( Stem("separando"), "separ" );
	deepEqual( Stem("separar"), "separ" );
	deepEqual( Stem("separaram"), "separ" );
	deepEqual( Stem("separei"), "sep" );
	deepEqual( Stem("separo"), "separ" );
	deepEqual( Stem("separou"), "separ" );
	deepEqual( Stem("sepetiba"), "sepetib" );
	deepEqual( Stem("septecemia"), "septecem" );
	deepEqual( Stem("sepulcro"), "sepulcr" );
	deepEqual( Stem("sepultada"), "sepult" );
	deepEqual( Stem("sepultado"), "sepult" );
	deepEqual( Stem("sepultamento"), "sepult" );
	deepEqual( Stem("sepultou"), "sepult" );
	deepEqual( Stem("sepulveda"), "sepulved" );
	deepEqual( Stem("sepúlveda"), "sepúlved" );
	deepEqual( Stem("seqüela"), "seqüel" );
	deepEqual( Stem("sequelas"), "sequel" );
	deepEqual( Stem("seqüelas"), "seqüel" );
	deepEqual( Stem("sequência"), "sequênc" );
	deepEqual( Stem("seqüência"), "seqüênc" );
	deepEqual( Stem("sequenciar"), "sequenc" );
	deepEqual( Stem("sequências"), "sequênc" );
	deepEqual( Stem("sequer"), "sequ" );
	deepEqual( Stem("sequestrada"), "sequestr" );
	deepEqual( Stem("sequestrado"), "sequestr" );
	deepEqual( Stem("sequestrados"), "sequestr" );
	deepEqual( Stem("seqüestrando"), "seqüestr" );
	deepEqual( Stem("seqüestravam"), "seqüestr" );
	deepEqual( Stem("sequestro"), "sequestr" );
	deepEqual( Stem("seqüestro"), "seqüestr" );
	deepEqual( Stem("seqüestrou"), "seqüestr" );
	deepEqual( Stem("sequóias"), "sequó" );
	deepEqual( Stem("ser"), "ser" );
	deepEqual( Stem("será"), "ser" );
	deepEqual( Stem("serafin"), "serafin" );
	deepEqual( Stem("serão"), "serã" );
	deepEqual( Stem("sercretário"), "sercretári" );
	deepEqual( Stem("serei"), "ser" );
	deepEqual( Stem("serem"), "ser" );
	deepEqual( Stem("seremos"), "ser" );
	deepEqual( Stem("serenidade"), "seren" );
	deepEqual( Stem("sereno"), "seren" );
	deepEqual( Stem("serenos"), "seren" );
	deepEqual( Stem("seres"), "ser" );
	deepEqual( Stem("sergi"), "serg" );
	deepEqual( Stem("sergio"), "sergi" );
	deepEqual( Stem("sérgio"), "sérgi" );
	deepEqual( Stem("sergipana"), "sergipan" );
	deepEqual( Stem("sergipano"), "sergipan" );
	deepEqual( Stem("sergipe"), "sergip" );
	deepEqual( Stem("seria"), "ser" );
	deepEqual( Stem("séria"), "sér" );
	deepEqual( Stem("seriado"), "seri" );
	deepEqual( Stem("seriam"), "ser" );
	deepEqual( Stem("seriamente"), "seri" );
	deepEqual( Stem("sérias"), "sér" );
	deepEqual( Stem("série"), "séri" );
	deepEqual( Stem("seriedade"), "seriedad" );
	deepEqual( Stem("séries"), "séri" );
	deepEqual( Stem("seriíssima"), "seriíssim" );
	deepEqual( Stem("seringa"), "sering" );
	deepEqual( Stem("seringal"), "seringal" );
	deepEqual( Stem("sério"), "séri" );
	deepEqual( Stem("sérios"), "séri" );
	deepEqual( Stem("sermos"), "serm" );
	deepEqual( Stem("serotonina"), "serotonin" );
	deepEqual( Stem("serpente"), "serpent" );
	deepEqual( Stem("serpentes"), "serpent" );
	deepEqual( Stem("serra"), "serr" );
	deepEqual( Stem("serrado"), "serr" );
	deepEqual( Stem("serralheiro"), "serralheir" );
	deepEqual( Stem("serran"), "serran" );
	deepEqual( Stem("serrano"), "serran" );
	deepEqual( Stem("serrar"), "serr" );
	deepEqual( Stem("serraria"), "serr" );
	deepEqual( Stem("serrarias"), "serr" );
	deepEqual( Stem("sertaneja"), "sertanej" );
	deepEqual( Stem("sertanejo"), "sertanej" );
	deepEqual( Stem("sertanejos"), "sertanej" );
	deepEqual( Stem("sertão"), "sertã" );
	deepEqual( Stem("serve"), "serv" );
	deepEqual( Stem("servel"), "servel" );
	deepEqual( Stem("servem"), "serv" );
	deepEqual( Stem("servente"), "servent" );
	deepEqual( Stem("serventia"), "servent" );
	deepEqual( Stem("servi"), "serv" );
	deepEqual( Stem("servia"), "serv" );
	deepEqual( Stem("serviam"), "serv" );
	deepEqual( Stem("service"), "servic" );
	deepEqual( Stem("services"), "servic" );
	deepEqual( Stem("serviço"), "servic" );
	deepEqual( Stem("serviços"), "servic" );
	deepEqual( Stem("servida"), "serv" );
	deepEqual( Stem("servidas"), "serv" );
	deepEqual( Stem("servido"), "serv" );
	deepEqual( Stem("servidor"), "servidor" );
	deepEqual( Stem("servidores"), "servidor" );
	deepEqual( Stem("servidos"), "serv" );
	deepEqual( Stem("servindo"), "serv" );
	deepEqual( Stem("servir"), "serv" );
	deepEqual( Stem("servirá"), "serv" );
	deepEqual( Stem("serviram"), "serv" );
	deepEqual( Stem("servirem"), "serv" );
	deepEqual( Stem("serviu"), "serv" );
	deepEqual( Stem("sesi"), "ses" );
	deepEqual( Stem("sessa"), "sess" );
	deepEqual( Stem("sessão"), "sessã" );
	deepEqual( Stem("sessenta"), "sessent" );
	deepEqual( Stem("sesso"), "sess" );
	deepEqual( Stem("sessões"), "sessõ" );
	deepEqual( Stem("set"), "set" );
	deepEqual( Stem("sete"), "set" );
	deepEqual( Stem("setembro"), "setembr" );
	deepEqual( Stem("setenta"), "setent" );
	deepEqual( Stem("sétima"), "sétim" );
	deepEqual( Stem("sétimo"), "sétim" );
	deepEqual( Stem("setor"), "setor" );
	deepEqual( Stem("setores"), "setor" );
	deepEqual( Stem("setorialmente"), "setorial" );
	deepEqual( Stem("setorizada"), "setoriz" );
	deepEqual( Stem("sets"), "sets" );
	deepEqual( Stem("setti"), "sett" );
	deepEqual( Stem("seu"), "seu" );
	deepEqual( Stem("seus"), "seus" );
	deepEqual( Stem("sevcenko"), "sevcenk" );
	deepEqual( Stem("severa"), "sev" );
	deepEqual( Stem("severas"), "sev" );
	deepEqual( Stem("severidade"), "sever" );
	deepEqual( Stem("severina"), "severin" );
	deepEqual( Stem("severino"), "severin" );
	deepEqual( Stem("severo"), "sever" );
	deepEqual( Stem("sex"), "sex" );
	deepEqual( Stem("sexo"), "sex" );
	deepEqual( Stem("sexos"), "sex" );
	deepEqual( Stem("sexta"), "sext" );
	deepEqual( Stem("sextas"), "sext" );
	deepEqual( Stem("sexto"), "sext" );
	deepEqual( Stem("sexuais"), "sexu" );
	deepEqual( Stem("sexual"), "sexual" );
	deepEqual( Stem("sexualidade"), "sexual" );
	deepEqual( Stem("sexualmente"), "sexual" );
	deepEqual( Stem("sexy"), "sexy" );
	deepEqual( Stem("sfh"), "sfh" );
	deepEqual( Stem("shabazz"), "shabazz" );
	deepEqual( Stem("shabbaz"), "shabbaz" );
	deepEqual( Stem("shakespeare"), "shakespear" );
	deepEqual( Stem("shakira"), "shak" );
	deepEqual( Stem("shalikashvili"), "shalikashvil" );
	deepEqual( Stem("shalom"), "shalom" );
	deepEqual( Stem("sharon"), "sharon" );
	deepEqual( Stem("shattered"), "shattered" );
	deepEqual( Stem("shearer"), "shear" );
	deepEqual( Stem("sheik"), "sheik" );
	deepEqual( Stem("sheila"), "sheil" );
	deepEqual( Stem("sheldon"), "sheldon" );
	deepEqual( Stem("shell"), "shell" );
	deepEqual( Stem("shepard"), "shepard" );
	deepEqual( Stem("shikasho"), "shikash" );
	deepEqual( Stem("shimosaka"), "shimosak" );
	deepEqual( Stem("shirer"), "shir" );
	deepEqual( Stem("shirley"), "shirley" );
	deepEqual( Stem("shopping"), "shopping" );
	deepEqual( Stem("shoppings"), "shoppings" );
	deepEqual( Stem("short"), "short" );
	deepEqual( Stem("shortinhos"), "shortinh" );
	deepEqual( Stem("shorts"), "shorts" );
	deepEqual( Stem("show"), "show" );
	deepEqual( Stem("shows"), "shows" );
	deepEqual( Stem("si"), "si" );
	deepEqual( Stem("siamês"), "siamês" );
	deepEqual( Stem("siamesa"), "siames" );
	deepEqual( Stem("sião"), "siã" );
	deepEqual( Stem("sibéria"), "sibér" );
	deepEqual( Stem("siberianas"), "siberian" );
	deepEqual( Stem("sibutramina"), "sibutramin" );
	deepEqual( Stem("siciliani"), "sicilian" );
	deepEqual( Stem("sicrano"), "sicran" );
	deepEqual( Stem("sidaui"), "sidau" );
	deepEqual( Stem("side"), "sid" );
	deepEqual( Stem("sideral"), "sideral" );
	deepEqual( Stem("siderúrgica"), "siderúrg" );
	deepEqual( Stem("siderúrgicas"), "siderúrg" );
	deepEqual( Stem("sidnei"), "sidn" );
	deepEqual( Stem("sidney"), "sidney" );
	deepEqual( Stem("sido"), "sid" );
	deepEqual( Stem("sidrolândia"), "sidrolând" );
	deepEqual( Stem("siècle"), "siècl" );
	deepEqual( Stem("siegfried"), "siegfried" );
	deepEqual( Stem("sielma"), "sielm" );
	deepEqual( Stem("siena"), "sien" );
	deepEqual( Stem("sierra"), "sierr" );
	deepEqual( Stem("sífilis"), "sífil" );
	deepEqual( Stem("sig"), "sig" );
	deepEqual( Stem("siga"), "sig" );
	deepEqual( Stem("sigilo"), "sigil" );
	deepEqual( Stem("sigiloso"), "sigil" );
	deepEqual( Stem("sigilosos"), "sigil" );
	deepEqual( Stem("sigla"), "sigl" );
	deepEqual( Stem("sigmund"), "sigmund" );
	deepEqual( Stem("signatários"), "signatári" );
	deepEqual( Stem("signer"), "sign" );
	deepEqual( Stem("signes"), "sign" );
	deepEqual( Stem("significa"), "signif" );
	deepEqual( Stem("significado"), "signific" );
	deepEqual( Stem("significam"), "signific" );
	deepEqual( Stem("significante"), "signific" );
	deepEqual( Stem("significar"), "signific" );
	deepEqual( Stem("significarão"), "signific" );
	deepEqual( Stem("significaria"), "signific" );
	deepEqual( Stem("significasse"), "signific" );
	deepEqual( Stem("significativa"), "signific" );
	deepEqual( Stem("significativas"), "signific" );
	deepEqual( Stem("significativo"), "signific" );
	deepEqual( Stem("significativos"), "signific" );
	deepEqual( Stem("significava"), "signific" );
	deepEqual( Stem("significavam"), "signific" );
	deepEqual( Stem("significou"), "signific" );
	deepEqual( Stem("signifique"), "signifiqu" );
	deepEqual( Stem("signo"), "sign" );
	deepEqual( Stem("sigo"), "sig" );
	deepEqual( Stem("sigourney"), "sigourney" );
	deepEqual( Stem("sigulem"), "sigul" );
	deepEqual( Stem("sihanouk"), "sihanouk" );
	deepEqual( Stem("sikorsky"), "sikorsky" );
	deepEqual( Stem("silenciadas"), "silenc" );
	deepEqual( Stem("silenciar"), "silenc" );
	deepEqual( Stem("silenciarem"), "silenc" );
	deepEqual( Stem("silêncio"), "silênci" );
	deepEqual( Stem("silenciosa"), "silenc" );
	deepEqual( Stem("silenciosamente"), "silenc" );
	deepEqual( Stem("silencioso"), "silenc" );
	deepEqual( Stem("silhueta"), "silhuet" );
	deepEqual( Stem("silicone"), "silicon" );
	deepEqual( Stem("sillés"), "sillés" );
	deepEqual( Stem("silva"), "silv" );
	deepEqual( Stem("silvana"), "silvan" );
	deepEqual( Stem("silvania"), "silvan" );
	deepEqual( Stem("silvas"), "silv" );
	deepEqual( Stem("silveira"), "silveir" );
	deepEqual( Stem("silvério"), "silvéri" );
	deepEqual( Stem("silvestre"), "silvestr" );
	deepEqual( Stem("silvestres"), "silvestr" );
	deepEqual( Stem("silvia"), "silv" );
	deepEqual( Stem("sílvia"), "sílv" );
	deepEqual( Stem("silvino"), "silvin" );
	deepEqual( Stem("silvio"), "silvi" );
	deepEqual( Stem("sílvio"), "sílvi" );
	deepEqual( Stem("silviôô"), "silviôô" );
	deepEqual( Stem("sim"), "sim" );
	deepEqual( Stem("simancol"), "simancol" );
	deepEqual( Stem("simas"), "sim" );
	deepEqual( Stem("simbiótica"), "simbiót" );
	deepEqual( Stem("simbólica"), "simból" );
	deepEqual( Stem("simbólico"), "simból" );
	deepEqual( Stem("simbolismo"), "simbol" );
	deepEqual( Stem("simbolismos"), "simbol" );
	deepEqual( Stem("simboliza"), "simboliz" );
	deepEqual( Stem("símbolo"), "símbol" );
	deepEqual( Stem("símbolos"), "símbol" );
	deepEqual( Stem("simca"), "simc" );
	deepEqual( Stem("similar"), "simil" );
	deepEqual( Stem("similares"), "simil" );
	deepEqual( Stem("simla"), "siml" );
	deepEqual( Stem("simon"), "simon" );
	deepEqual( Stem("simón"), "simón" );
	deepEqual( Stem("simone"), "simon" );
	deepEqual( Stem("simonetti"), "simonett" );
	deepEqual( Stem("simonsen"), "simonsen" );
	deepEqual( Stem("simpatia"), "simpat" );
	deepEqual( Stem("simpatias"), "simpat" );
	deepEqual( Stem("simpática"), "simpát" );
	deepEqual( Stem("simpático"), "simpát" );
	deepEqual( Stem("simpatizante"), "simpatiz" );
	deepEqual( Stem("simpatizantes"), "simpatiz" );
	deepEqual( Stem("simpatizar"), "simpatiz" );
	deepEqual( Stem("simples"), "simpl" );
	deepEqual( Stem("simplesmente"), "simples" );
	deepEqual( Stem("simplicidade"), "simplic" );
	deepEqual( Stem("simplificação"), "simplific" );
	deepEqual( Stem("simplificações"), "simplific" );
	deepEqual( Stem("simplificador"), "simplific" );
	deepEqual( Stem("simplificados"), "simplific" );
	deepEqual( Stem("simplificam"), "simplific" );
	deepEqual( Stem("simplificou"), "simplific" );
	deepEqual( Stem("simplória"), "simplór" );
	deepEqual( Stem("simpósio"), "simpósi" );
	deepEqual( Stem("simpson"), "simpson" );
	deepEqual( Stem("simulação"), "simul" );
	deepEqual( Stem("simulações"), "simul" );
	deepEqual( Stem("simuladas"), "simul" );
	deepEqual( Stem("simulado"), "simul" );
	deepEqual( Stem("simulador"), "simul" );
	deepEqual( Stem("simuladores"), "simul" );
	deepEqual( Stem("simulando"), "simul" );
	deepEqual( Stem("simular"), "simul" );
	deepEqual( Stem("simulation"), "simulation" );
	deepEqual( Stem("simulou"), "simul" );
	deepEqual( Stem("simultânea"), "simultân" );
	deepEqual( Stem("simultaneamente"), "simultan" );
	deepEqual( Stem("simultâneas"), "simultân" );
	deepEqual( Stem("simultâneos"), "simultân" );
	deepEqual( Stem("sinagoga"), "sinagog" );
	deepEqual( Stem("sinagogas"), "sinagog" );
	deepEqual( Stem("sinais"), "sin" );
	deepEqual( Stem("sinal"), "sinal" );
	deepEqual( Stem("sinaliza"), "sinaliz" );
	deepEqual( Stem("sinalização"), "sinaliz" );
	deepEqual( Stem("sinalizador"), "sinaliz" );
	deepEqual( Stem("sinalizar"), "sinaliz" );
	deepEqual( Stem("sinalizaram"), "sinaliz" );
	deepEqual( Stem("sinalizava"), "sinaliz" );
	deepEqual( Stem("sinatra"), "sinatr" );
	deepEqual( Stem("sincera"), "sinc" );
	deepEqual( Stem("sinceramente"), "sincer" );
	deepEqual( Stem("sinceridade"), "sincer" );
	deepEqual( Stem("sincero"), "sincer" );
	deepEqual( Stem("sincopadas"), "sincop" );
	deepEqual( Stem("síncope"), "síncop" );
	deepEqual( Stem("sincretismo"), "sincret" );
	deepEqual( Stem("sincronizadas"), "sincroniz" );
	deepEqual( Stem("síndica"), "síndic" );
	deepEqual( Stem("sindical"), "sindical" );
	deepEqual( Stem("sindicalista"), "sindical" );
	deepEqual( Stem("sindicalistas"), "sindical" );
	deepEqual( Stem("sindicância"), "sindic" );
	deepEqual( Stem("sindicato"), "sindicat" );
	deepEqual( Stem("sindicatos"), "sindicat" );
	deepEqual( Stem("síndrome"), "síndrom" );
	deepEqual( Stem("síndromes"), "síndrom" );
	deepEqual( Stem("sinduscon"), "sinduscon" );
	deepEqual( Stem("sinergia"), "sinerg" );
	deepEqual( Stem("sines"), "sin" );
	deepEqual( Stem("sinfônica"), "sinfôn" );
	deepEqual( Stem("singela"), "singel" );
	deepEqual( Stem("singelas"), "singel" );
	deepEqual( Stem("singelo"), "singel" );
	deepEqual( Stem("singrando"), "singr" );
	deepEqual( Stem("singular"), "singul" );
	deepEqual( Stem("singulares"), "singul" );
	deepEqual( Stem("sinhá"), "sinh" );
	deepEqual( Stem("sinistra"), "sinistr" );
	deepEqual( Stem("sinistras"), "sinistr" );
	deepEqual( Stem("sinistro"), "sinistr" );
	deepEqual( Stem("sinistros"), "sinistr" );
	deepEqual( Stem("sinônimo"), "sinônim" );
	deepEqual( Stem("sinos"), "sin" );
	deepEqual( Stem("sinta"), "sint" );
	deepEqual( Stem("sintam"), "sint" );
	deepEqual( Stem("síntese"), "síntes" );
	deepEqual( Stem("sintética"), "sintét" );
	deepEqual( Stem("sintéticos"), "sintét" );
	deepEqual( Stem("sintetiza"), "sintetiz" );
	deepEqual( Stem("sintetizados"), "sintetiz" );
	deepEqual( Stem("sinto"), "sint" );
	deepEqual( Stem("sintofarma"), "sintofarm" );
	deepEqual( Stem("sintoma"), "sintom" );
	deepEqual( Stem("sintomas"), "sintom" );
	deepEqual( Stem("sintonia"), "sinton" );
	deepEqual( Stem("sintonizado"), "sintoniz" );
	deepEqual( Stem("sinval"), "sinval" );
	deepEqual( Stem("sion"), "sion" );
	deepEqual( Stem("siqueira"), "siqueir" );
	deepEqual( Stem("sir"), "sir" );
	deepEqual( Stem("sirene"), "siren" );
	deepEqual( Stem("sirenes"), "siren" );
	deepEqual( Stem("síria"), "sír" );
	deepEqual( Stem("sírio"), "síri" );
	deepEqual( Stem("sirotsky"), "sirotsky" );
	deepEqual( Stem("sirva"), "sirv" );
	deepEqual( Stem("sirvam"), "sirv" );
	deepEqual( Stem("sirvo"), "sirv" );
	deepEqual( Stem("sisal"), "sisal" );
	deepEqual( Stem("sisleide"), "sisleid" );
	deepEqual( Stem("sissi"), "siss" );
	deepEqual( Stem("sistel"), "sistel" );
	deepEqual( Stem("sistema"), "sistem" );
	deepEqual( Stem("sistemas"), "sistem" );
	deepEqual( Stem("sistemática"), "sistemát" );
	deepEqual( Stem("sistematicamente"), "sistemat" );
	deepEqual( Stem("sistemático"), "sistemát" );
	deepEqual( Stem("sisudamente"), "sisud" );
	deepEqual( Stem("sisudo"), "sisud" );
	deepEqual( Stem("sisudos"), "sisud" );
	deepEqual( Stem("site"), "sit" );
	deepEqual( Stem("sites"), "sit" );
	deepEqual( Stem("sítio"), "síti" );
	deepEqual( Stem("sítios"), "síti" );
	deepEqual( Stem("situa"), "situ" );
	deepEqual( Stem("situação"), "situaçã" );
	deepEqual( Stem("situações"), "situaçõ" );
	deepEqual( Stem("situada"), "situ" );
	deepEqual( Stem("situado"), "situ" );
	deepEqual( Stem("situados"), "situ" );
	deepEqual( Stem("situam"), "situ" );
	deepEqual( Stem("situar"), "situ" );
	deepEqual( Stem("situavam"), "situ" );
	deepEqual( Stem("sivam"), "siv" );
	deepEqual( Stem("six"), "six" );
	deepEqual( Stem("sizer"), "siz" );
	deepEqual( Stem("skank"), "skank" );
	deepEqual( Stem("skate"), "skat" );
	deepEqual( Stem("skatista"), "skatist" );
	deepEqual( Stem("skatistas"), "skatist" );
	deepEqual( Stem("ski"), "ski" );
	deepEqual( Stem("sky"), "sky" );
	deepEqual( Stem("slam"), "slam" );
	deepEqual( Stem("slava"), "slav" );
	deepEqual( Stem("sleeping"), "sleeping" );
	deepEqual( Stem("sloan"), "sloan" );
	deepEqual( Stem("slogan"), "slogan" );
	deepEqual( Stem("sm"), "sm" );
	deepEqual( Stem("smartwood"), "smartwood" );
	deepEqual( Stem("smashing"), "smashing" );
	deepEqual( Stem("smedt"), "smedt" );
	deepEqual( Stem("smeraldi"), "smerald" );
	deepEqual( Stem("smirnoff"), "smirnoff" );
	deepEqual( Stem("smith"), "smith" );
	deepEqual( Stem("smoke"), "smok" );
	deepEqual( Stem("smoking"), "smoking" );
	deepEqual( Stem("snea"), "sne" );
	deepEqual( Stem("sni"), "sni" );
	deepEqual( Stem("só"), "só" );
	deepEqual( Stem("soa"), "soa" );
	deepEqual( Stem("soam"), "soam" );
	deepEqual( Stem("soar"), "soar" );
	deepEqual( Stem("soares"), "soar" );
	deepEqual( Stem("soáres"), "soár" );
	deepEqual( Stem("soárez"), "soárez" );
	deepEqual( Stem("soava"), "soav" );
	deepEqual( Stem("soavam"), "soav" );
	deepEqual( Stem("sob"), "sob" );
	deepEqual( Stem("sobe"), "sob" );
	deepEqual( Stem("sobem"), "sob" );
	deepEqual( Stem("soberania"), "soberan" );
	deepEqual( Stem("soberano"), "soberan" );
	deepEqual( Stem("soberba"), "soberb" );
	deepEqual( Stem("soberbo"), "soberb" );
	deepEqual( Stem("soboreava"), "sobor" );
	deepEqual( Stem("sobra"), "sobr" );
	deepEqual( Stem("sobrado"), "sobr" );
	deepEqual( Stem("sobram"), "sobr" );
	deepEqual( Stem("sobrancelhas"), "sobrancelh" );
	deepEqual( Stem("sobrando"), "sobr" );
	deepEqual( Stem("sobrar"), "sobr" );
	deepEqual( Stem("sobraram"), "sobr" );
	deepEqual( Stem("sobras"), "sobr" );
	deepEqual( Stem("sobre"), "sobr" );
	deepEqual( Stem("sobreaviso"), "sobreavis" );
	deepEqual( Stem("sobrecarga"), "sobrecarg" );
	deepEqual( Stem("sobrecarrega"), "sobrecarreg" );
	deepEqual( Stem("sobrecarregada"), "sobrecarreg" );
	deepEqual( Stem("sobremesa"), "sobremes" );
	deepEqual( Stem("sobrenatural"), "sobrenatural" );
	deepEqual( Stem("sobrenome"), "sobrenom" );
	deepEqual( Stem("sobrenomes"), "sobrenom" );
	deepEqual( Stem("sobrepõem"), "sobrepõ" );
	deepEqual( Stem("sobrepor"), "sobrepor" );
	deepEqual( Stem("sobrepuja"), "sobrepuj" );
	deepEqual( Stem("sobressai"), "sobressa" );
	deepEqual( Stem("sobressaiu"), "sobressa" );
	deepEqual( Stem("sobressalto"), "sobressalt" );
	deepEqual( Stem("sobressaltos"), "sobressalt" );
	deepEqual( Stem("sobretudo"), "sobretud" );
	deepEqual( Stem("sobrevalorização"), "sobrevaloriz" );
	deepEqual( Stem("sobrevém"), "sobrevém" );
	deepEqual( Stem("sobrevida"), "sobrev" );
	deepEqual( Stem("sobrevive"), "sobreviv" );
	deepEqual( Stem("sobrevivem"), "sobreviv" );
	deepEqual( Stem("sobrevivência"), "sobrevivent" );
	deepEqual( Stem("sobrevivendo"), "sobreviv" );
	deepEqual( Stem("sobrevivente"), "sobrevivent" );
	deepEqual( Stem("sobreviventes"), "sobrevivent" );
	deepEqual( Stem("sobreviver"), "sobreviv" );
	deepEqual( Stem("sobreviveram"), "sobreviv" );
	deepEqual( Stem("sobreviverão"), "sobreviv" );
	deepEqual( Stem("sobrevivessem"), "sobreviv" );
	deepEqual( Stem("sobreviveu"), "sobreviv" );
	deepEqual( Stem("sobrevivi"), "sobreviv" );
	deepEqual( Stem("sobrevivido"), "sobreviv" );
	deepEqual( Stem("sobrevoado"), "sobrevo" );
	deepEqual( Stem("sobrevoando"), "sobrevo" );
	deepEqual( Stem("sobrevoava"), "sobrevo" );
	deepEqual( Stem("sobrevoe"), "sobrevo" );
	deepEqual( Stem("sóbrias"), "sóbr" );
	deepEqual( Stem("sobrinha"), "sobrinh" );
	deepEqual( Stem("sobrinhas"), "sobrinh" );
	deepEqual( Stem("sobrinho"), "sobrinh" );
	deepEqual( Stem("sobrinhos"), "sobrinh" );
	deepEqual( Stem("sóbrios"), "sóbri" );
	deepEqual( Stem("sobrou"), "sobr" );
	deepEqual( Stem("soccer"), "socc" );
	deepEqual( Stem("sochaczewski"), "sochaczewsk" );
	deepEqual( Stem("sócia"), "sóc" );
	deepEqual( Stem("sociais"), "soc" );
	deepEqual( Stem("social"), "social" );
	deepEqual( Stem("socialismo"), "social" );
	deepEqual( Stem("socialista"), "social" );
	deepEqual( Stem("socialistas"), "social" );
	deepEqual( Stem("socialite"), "socialit" );
	deepEqual( Stem("socialites"), "socialit" );
	deepEqual( Stem("socializantes"), "socializ" );
	deepEqual( Stem("socialmente"), "social" );
	deepEqual( Stem("sócias"), "sóc" );
	deepEqual( Stem("sociável"), "sociável" );
	deepEqual( Stem("sociedade"), "sociedad" );
	deepEqual( Stem("sociedades"), "sociedad" );
	deepEqual( Stem("society"), "society" );
	deepEqual( Stem("sócio"), "sóci" );
	deepEqual( Stem("socióloga"), "sociólog" );
	deepEqual( Stem("sociologava"), "sociolog" );
	deepEqual( Stem("sociologia"), "sociolog" );
	deepEqual( Stem("sociológico"), "sociológ" );
	deepEqual( Stem("sociólogo"), "sociólog" );
	deepEqual( Stem("sociólogos"), "sociólog" );
	deepEqual( Stem("sócios"), "sóci" );
	deepEqual( Stem("socorrer"), "socorr" );
	deepEqual( Stem("socorrerá"), "socorr" );
	deepEqual( Stem("socorreu"), "socorr" );
	deepEqual( Stem("socorro"), "socorr" );
	deepEqual( Stem("socos"), "soc" );
	deepEqual( Stem("sócrates"), "sócrat" );
	deepEqual( Stem("sódio"), "sódi" );
	deepEqual( Stem("sodré"), "sodr" );
	deepEqual( Stem("soe"), "soe" );
	deepEqual( Stem("soeltl"), "soeltl" );
	deepEqual( Stem("soeur"), "soeur" );
	deepEqual( Stem("sofá"), "sof" );
	deepEqual( Stem("sofás"), "sofás" );
	deepEqual( Stem("sofazão"), "sofazã" );
	deepEqual( Stem("sofia"), "sof" );
	deepEqual( Stem("sofisticação"), "sofistic" );
	deepEqual( Stem("sofisticada"), "sofistic" );
	deepEqual( Stem("sofisticadas"), "sofistic" );
	deepEqual( Stem("sofisticado"), "sofistic" );
	deepEqual( Stem("sofisticados"), "sofistic" );
	deepEqual( Stem("sofisticar"), "sofistic" );
	deepEqual( Stem("sofra"), "sofr" );
	deepEqual( Stem("sofre"), "sofr" );
	deepEqual( Stem("sofrem"), "sofr" );
	deepEqual( Stem("sofrendo"), "sofr" );
	deepEqual( Stem("sofrer"), "sofr" );
	deepEqual( Stem("sofrera"), "sofr" );
	deepEqual( Stem("sofrerá"), "sofr" );
	deepEqual( Stem("sofreram"), "sofr" );
	deepEqual( Stem("sofrerão"), "sofr" );
	deepEqual( Stem("sofreria"), "sofr" );
	deepEqual( Stem("sofreu"), "sofr" );
	deepEqual( Stem("sofri"), "sofr" );
	deepEqual( Stem("sofria"), "sofr" );
	deepEqual( Stem("sofrida"), "sofr" );
	deepEqual( Stem("sofridas"), "sofr" );
	deepEqual( Stem("sofrido"), "sofr" );
	deepEqual( Stem("sofrimento"), "sofriment" );
	deepEqual( Stem("sofrimentos"), "sofriment" );
	deepEqual( Stem("sofro"), "sofr" );
	deepEqual( Stem("software"), "softwar" );
	deepEqual( Stem("softwares"), "softw" );
	deepEqual( Stem("sogro"), "sogr" );
	deepEqual( Stem("soja"), "soj" );
	deepEqual( Stem("sol"), "sol" );
	deepEqual( Stem("sola"), "sol" );
	deepEqual( Stem("solados"), "sol" );
	deepEqual( Stem("solange"), "solang" );
	deepEqual( Stem("solano"), "solan" );
	deepEqual( Stem("solar"), "sol" );
	deepEqual( Stem("solarização"), "solariz" );
	deepEqual( Stem("soldadesca"), "soldadesc" );
	deepEqual( Stem("soldado"), "sold" );
	deepEqual( Stem("soldador"), "soldador" );
	deepEqual( Stem("soldados"), "sold" );
	deepEqual( Stem("soldar"), "sold" );
	deepEqual( Stem("soledade"), "soledad" );
	deepEqual( Stem("soleira"), "soleir" );
	deepEqual( Stem("solenidade"), "solen" );
	deepEqual( Stem("soletto"), "solett" );
	deepEqual( Stem("solicita"), "solicit" );
	deepEqual( Stem("solicitação"), "solicit" );
	deepEqual( Stem("solicitado"), "solicit" );
	deepEqual( Stem("solicitando"), "solicit" );
	deepEqual( Stem("solicitava"), "solicit" );
	deepEqual( Stem("solicite"), "solicit" );
	deepEqual( Stem("solicitei"), "solicit" );
	deepEqual( Stem("solicitou"), "solicit" );
	deepEqual( Stem("sólida"), "sól" );
	deepEqual( Stem("solidamente"), "solid" );
	deepEqual( Stem("solidão"), "solidã" );
	deepEqual( Stem("solidária"), "solidár" );
	deepEqual( Stem("solidariedade"), "solidariedad" );
	deepEqual( Stem("sólidas"), "sól" );
	deepEqual( Stem("solidez"), "solidez" );
	deepEqual( Stem("sólido"), "sól" );
	deepEqual( Stem("sólidos"), "sól" );
	deepEqual( Stem("solitária"), "solitár" );
	deepEqual( Stem("solitárias"), "solitár" );
	deepEqual( Stem("solitário"), "solitári" );
	deepEqual( Stem("solitários"), "solitári" );
	deepEqual( Stem("solo"), "sol" );
	deepEqual( Stem("solow"), "solow" );
	deepEqual( Stem("solstícios"), "solstíci" );
	deepEqual( Stem("solta"), "solt" );
	deepEqual( Stem("soltam"), "solt" );
	deepEqual( Stem("soltar"), "solt" );
	deepEqual( Stem("soltava"), "solt" );
	deepEqual( Stem("solteira"), "solteir" );
	deepEqual( Stem("solteiríssima"), "solteiríssim" );
	deepEqual( Stem("solteiro"), "solteir" );
	deepEqual( Stem("soltl"), "soltl" );
	deepEqual( Stem("solto"), "solt" );
	deepEqual( Stem("soltos"), "solt" );
	deepEqual( Stem("soltou"), "solt" );
	deepEqual( Stem("solução"), "soluçã" );
	deepEqual( Stem("solucionar"), "solucion" );
	deepEqual( Stem("soluções"), "soluçõ" );
	deepEqual( Stem("solventes"), "solvent" );
	deepEqual( Stem("som"), "som" );
	deepEqual( Stem("soma"), "som" );
	deepEqual( Stem("somadas"), "som" );
	deepEqual( Stem("somado"), "som" );
	deepEqual( Stem("somados"), "som" );
	deepEqual( Stem("somam"), "som" );
	deepEqual( Stem("somando"), "som" );
	deepEqual( Stem("somar"), "som" );
	deepEqual( Stem("somariam"), "som" );
	deepEqual( Stem("somarmos"), "som" );
	deepEqual( Stem("somavam"), "som" );
	deepEqual( Stem("sombra"), "sombr" );
	deepEqual( Stem("sombras"), "sombr" );
	deepEqual( Stem("sombrias"), "sombr" );
	deepEqual( Stem("some"), "som" );
	deepEqual( Stem("somente"), "soment" );
	deepEqual( Stem("sommelier"), "sommeli" );
	deepEqual( Stem("sommeliers"), "sommeliers" );
	deepEqual( Stem("somos"), "som" );
	deepEqual( Stem("somou"), "som" );
	deepEqual( Stem("son"), "son" );
	deepEqual( Stem("sonda"), "sond" );
	deepEqual( Stem("sondas"), "sond" );
	deepEqual( Stem("sonegação"), "soneg" );
	deepEqual( Stem("sonegada"), "soneg" );
	deepEqual( Stem("sonegadas"), "soneg" );
	deepEqual( Stem("songbooks"), "songbooks" );
	deepEqual( Stem("sonha"), "sonh" );
	deepEqual( Stem("sonhada"), "sonh" );
	deepEqual( Stem("sonham"), "sonh" );
	deepEqual( Stem("sonhando"), "sonh" );
	deepEqual( Stem("sonhar"), "sonh" );
	deepEqual( Stem("sonhava"), "sonh" );
	deepEqual( Stem("sonho"), "sonh" );
	deepEqual( Stem("sonhos"), "sonh" );
	deepEqual( Stem("sonhou"), "sonh" );
	deepEqual( Stem("sonia"), "son" );
	deepEqual( Stem("sônia"), "sôn" );
	deepEqual( Stem("sono"), "son" );
	deepEqual( Stem("sonolência"), "sonolent" );
	deepEqual( Stem("sonora"), "sonor" );
	deepEqual( Stem("sonoridades"), "sonor" );
	deepEqual( Stem("sonoro"), "sonor" );
	deepEqual( Stem("sonoros"), "sonor" );
	deepEqual( Stem("sonoterapia"), "sonoterap" );
	deepEqual( Stem("sons"), "sons" );
	deepEqual( Stem("soou"), "soou" );
	deepEqual( Stem("sopa"), "sop" );
	deepEqual( Stem("sopão"), "sopã" );
	deepEqual( Stem("sophia"), "soph" );
	deepEqual( Stem("soprano"), "sopran" );
	deepEqual( Stem("sopranos"), "sopran" );
	deepEqual( Stem("sopro"), "sopr" );
	deepEqual( Stem("soraya"), "soray" );
	deepEqual( Stem("sorbonne"), "sorbonn" );
	deepEqual( Stem("soriano"), "sorian" );
	deepEqual( Stem("sorima"), "sorim" );
	deepEqual( Stem("sorine"), "sorin" );
	deepEqual( Stem("soro"), "sor" );
	deepEqual( Stem("sorocaba"), "sorocab" );
	deepEqual( Stem("soropositivas"), "soroposit" );
	deepEqual( Stem("soropositivo"), "soroposit" );
	deepEqual( Stem("soropositivos"), "soroposit" );
	deepEqual( Stem("sorrah"), "sorrah" );
	deepEqual( Stem("sorrateiramente"), "sorrateir" );
	deepEqual( Stem("sorrenti"), "sorrent" );
	deepEqual( Stem("sorri"), "sorr" );
	deepEqual( Stem("sorria"), "sorr" );
	deepEqual( Stem("sorridente"), "sorrident" );
	deepEqual( Stem("sorridentes"), "sorrident" );
	deepEqual( Stem("sorrindo"), "sorr" );
	deepEqual( Stem("sorriso"), "sorris" );
	deepEqual( Stem("sorrisos"), "sorris" );
	deepEqual( Stem("sorte"), "sort" );
	deepEqual( Stem("sorteado"), "sort" );
	deepEqual( Stem("sorteando"), "sort" );
	deepEqual( Stem("sorteia"), "sort" );
	deepEqual( Stem("sorteio"), "sortei" );
	deepEqual( Stem("sorteios"), "sortei" );
	deepEqual( Stem("sorvete"), "sorvet" );
	deepEqual( Stem("sorveteria"), "sorvet" );
	deepEqual( Stem("sos"), "sos" );
	deepEqual( Stem("sós"), "sós" );
	deepEqual( Stem("sossegadamente"), "sosseg" );
	deepEqual( Stem("sossegadas"), "sosseg" );
	deepEqual( Stem("sossegado"), "sosseg" );
	deepEqual( Stem("sossego"), "sosseg" );
	deepEqual( Stem("sotaque"), "sotaqu" );
	deepEqual( Stem("soterrado"), "soterr" );
	deepEqual( Stem("soto"), "sot" );
	deepEqual( Stem("sotto"), "sott" );
	deepEqual( Stem("sou"), "sou" );
	deepEqual( Stem("soube"), "soub" );
	deepEqual( Stem("souber"), "soub" );
	deepEqual( Stem("souberam"), "soub" );
	deepEqual( Stem("souberem"), "soub" );
	deepEqual( Stem("soubesse"), "soub" );
	deepEqual( Stem("soul"), "soul" );
	deepEqual( Stem("sound"), "sound" );
	deepEqual( Stem("sourcing"), "sourcing" );
	deepEqual( Stem("sousa"), "sous" );
	deepEqual( Stem("south"), "south" );
	deepEqual( Stem("souto"), "sout" );
	deepEqual( Stem("souvenirs"), "souvenirs" );
	deepEqual( Stem("souza"), "souz" );
	deepEqual( Stem("soviética"), "soviét" );
	deepEqual( Stem("soviéticas"), "soviét" );
	deepEqual( Stem("soviético"), "soviét" );
	deepEqual( Stem("soviéticos"), "soviét" );
	deepEqual( Stem("soyuz"), "soyuz" );
	deepEqual( Stem("sozinha"), "sozinh" );
	deepEqual( Stem("sozinhas"), "sozinh" );
	deepEqual( Stem("sozinho"), "sozinh" );
	deepEqual( Stem("sozinhos"), "sozinh" );
	deepEqual( Stem("sp"), "sp" );
	deepEqual( Stem("spa"), "spa" );
	deepEqual( Stem("spandau"), "spandau" );
	deepEqual( Stem("spanish"), "spanish" );
	deepEqual( Stem("specialty"), "specialty" );
	deepEqual( Stem("specific"), "specific" );
	deepEqual( Stem("spectr"), "spectr" );
	deepEqual( Stem("spielberg"), "spielberg" );
	deepEqual( Stem("spinosa"), "spinos" );
	deepEqual( Stem("spinto"), "spint" );
	deepEqual( Stem("spiritual"), "spiritual" );
	deepEqual( Stem("spiti"), "spit" );
	deepEqual( Stem("spitzer"), "spitz" );
	deepEqual( Stem("sport"), "sport" );
	deepEqual( Stem("sportszone"), "sportszon" );
	deepEqual( Stem("spray"), "spray" );
	deepEqual( Stem("squandered"), "squandered" );
	deepEqual( Stem("squibb"), "squibb" );
	deepEqual( Stem("sr"), "sr" );
	deepEqual( Stem("sra"), "sra" );
	deepEqual( Stem("srougi"), "sroug" );
	deepEqual( Stem("sroulevitch"), "sroulevitch" );
	deepEqual( Stem("sser"), "sser" );
	deepEqual( Stem("staff"), "staff" );
	deepEqual( Stem("stalin"), "stalin" );
	deepEqual( Stem("stalinista"), "stalin" );
	deepEqual( Stem("stalking"), "stalking" );
	deepEqual( Stem("stamey"), "stamey" );
	deepEqual( Stem("standish"), "standish" );
	deepEqual( Stem("stanford"), "stanford" );
	deepEqual( Stem("stanislaw"), "stanislaw" );
	deepEqual( Stem("stanley"), "stanley" );
	deepEqual( Stem("stanovnik"), "stanovnik" );
	deepEqual( Stem("stanton"), "stanton" );
	deepEqual( Stem("star"), "star" );
	deepEqual( Stem("starling"), "starling" );
	deepEqual( Stem("stasi"), "stas" );
	deepEqual( Stem("state"), "stat" );
	deepEqual( Stem("status"), "status" );
	deepEqual( Stem("steam"), "ste" );
	deepEqual( Stem("stefano"), "stefan" );
	deepEqual( Stem("steffi"), "steff" );
	deepEqual( Stem("stein"), "stein" );
	deepEqual( Stem("steinbruch"), "steinbruch" );
	deepEqual( Stem("steiner"), "stein" );
	deepEqual( Stem("stella"), "stell" );
	deepEqual( Stem("stephanes"), "stephan" );
	deepEqual( Stem("stephanie"), "stephani" );
	deepEqual( Stem("stephen"), "stephen" );
	deepEqual( Stem("sterne"), "stern" );
	deepEqual( Stem("steven"), "steven" );
	deepEqual( Stem("stevie"), "stevi" );
	deepEqual( Stem("stewart"), "stewart" );
	deepEqual( Stem("stf"), "stf" );
	deepEqual( Stem("stich"), "stich" );
	deepEqual( Stem("sto"), "sto" );
	deepEqual( Stem("stoliar"), "stoli" );
	deepEqual( Stem("stone"), "ston" );
	deepEqual( Stem("stones"), "ston" );
	deepEqual( Stem("stonewall"), "stonewall" );
	deepEqual( Stem("storehouse"), "storehous" );
	deepEqual( Stem("strassmann"), "strassmann" );
	deepEqual( Stem("strategy"), "strategy" );
	deepEqual( Stem("street"), "street" );
	deepEqual( Stem("stress"), "stress" );
	deepEqual( Stem("strip"), "strip" );
	deepEqual( Stem("striptease"), "stripteas" );
	deepEqual( Stem("stripteaser"), "stripteas" );
	deepEqual( Stem("struckert"), "struckert" );
	deepEqual( Stem("stuart"), "stuart" );
	deepEqual( Stem("stuckert"), "stuckert" );
	deepEqual( Stem("studio"), "studi" );
	deepEqual( Stem("studios"), "studi" );
	deepEqual( Stem("stupas"), "stup" );
	deepEqual( Stem("sua"), "sua" );
	deepEqual( Stem("suadas"), "suad" );
	deepEqual( Stem("suar"), "suar" );
	deepEqual( Stem("suas"), "suas" );
	deepEqual( Stem("suassuna"), "suassun" );
	deepEqual( Stem("suavam"), "suav" );
	deepEqual( Stem("suave"), "suav" );
	deepEqual( Stem("suaves"), "suav" );
	deepEqual( Stem("suavizou"), "suaviz" );
	deepEqual( Stem("sub"), "sub" );
	deepEqual( Stem("subatômica"), "subatôm" );
	deepEqual( Stem("subdesenvolvimento"), "subdesenvolv" );
	deepEqual( Stem("subempregadas"), "subempreg" );
	deepEqual( Stem("subestima"), "subestim" );
	deepEqual( Stem("subestimado"), "subestim" );
	deepEqual( Stem("subgerente"), "subgerent" );
	deepEqual( Stem("subgrupos"), "subgrup" );
	deepEqual( Stem("subi"), "sub" );
	deepEqual( Stem("subia"), "sub" );
	deepEqual( Stem("subiam"), "sub" );
	deepEqual( Stem("subida"), "sub" );
	deepEqual( Stem("subidas"), "sub" );
	deepEqual( Stem("subindo"), "sub" );
	deepEqual( Stem("subir"), "sub" );
	deepEqual( Stem("subiram"), "sub" );
	deepEqual( Stem("subiria"), "sub" );
	deepEqual( Stem("subisse"), "sub" );
	deepEqual( Stem("súbita"), "súbit" );
	deepEqual( Stem("subitamente"), "subit" );
	deepEqual( Stem("súbitas"), "súbit" );
	deepEqual( Stem("súbito"), "súbit" );
	deepEqual( Stem("subiu"), "sub" );
	deepEqual( Stem("subjetiva"), "subjet" );
	deepEqual( Stem("subjetivo"), "subjet" );
	deepEqual( Stem("subjugou"), "subjug" );
	deepEqual( Stem("submarino"), "submarin" );
	deepEqual( Stem("submarinos"), "submarin" );
	deepEqual( Stem("submergente"), "submergent" );
	deepEqual( Stem("submersa"), "submers" );
	deepEqual( Stem("submete"), "submet" );
	deepEqual( Stem("submetê"), "submet" );
	deepEqual( Stem("submetem"), "submet" );
	deepEqual( Stem("submeter"), "submet" );
	deepEqual( Stem("submeteria"), "submet" );
	deepEqual( Stem("submetida"), "submet" );
	deepEqual( Stem("submetidas"), "submet" );
	deepEqual( Stem("submetido"), "submet" );
	deepEqual( Stem("submetidos"), "submet" );
	deepEqual( Stem("submisso"), "submiss" );
	deepEqual( Stem("submundo"), "submund" );
	deepEqual( Stem("subnutrido"), "subnutr" );
	deepEqual( Stem("subordinação"), "subordin" );
	deepEqual( Stem("subordinadas"), "subordin" );
	deepEqual( Stem("subordinado"), "subordin" );
	deepEqual( Stem("subordinados"), "subordin" );
	deepEqual( Stem("subornado"), "suborn" );
	deepEqual( Stem("subornando"), "suborn" );
	deepEqual( Stem("subornavam"), "suborn" );
	deepEqual( Stem("suborno"), "suborn" );
	deepEqual( Stem("subprocurador"), "subprocur" );
	deepEqual( Stem("subprodutos"), "subprodut" );
	deepEqual( Stem("subrahmanyan"), "subrahmanyan" );
	deepEqual( Stem("subsidia"), "subsid" );
	deepEqual( Stem("subsidiado"), "subsidi" );
	deepEqual( Stem("subsidiados"), "subsidi" );
	deepEqual( Stem("subsidiária"), "subsidiár" );
	deepEqual( Stem("subsídios"), "subsídi" );
	deepEqual( Stem("subsistem"), "subsist" );
	deepEqual( Stem("subsistência"), "subsistent" );
	deepEqual( Stem("subsolos"), "subsol" );
	deepEqual( Stem("substância"), "substânc" );
	deepEqual( Stem("substancial"), "substancial" );
	deepEqual( Stem("substancialmente"), "substancial" );
	deepEqual( Stem("substâncias"), "substânc" );
	deepEqual( Stem("substantivos"), "substant" );
	deepEqual( Stem("substituem"), "substitu" );
	deepEqual( Stem("substitui"), "substitu" );
	deepEqual( Stem("substituí"), "substitu" );
	deepEqual( Stem("substituição"), "substituiçã" );
	deepEqual( Stem("substituída"), "substituíd" );
	deepEqual( Stem("substituídas"), "substituíd" );
	deepEqual( Stem("substituído"), "substituíd" );
	deepEqual( Stem("substituídos"), "substituíd" );
	deepEqual( Stem("substituindo"), "substitu" );
	deepEqual( Stem("substituir"), "substitu" );
	deepEqual( Stem("substituíram"), "substituír" );
	deepEqual( Stem("substituiu"), "substitu" );
	deepEqual( Stem("substituta"), "substitut" );
	deepEqual( Stem("substitutivo"), "substitut" );
	deepEqual( Stem("substituto"), "substitut" );
	deepEqual( Stem("substitutos"), "substitut" );
	deepEqual( Stem("subterfúgios"), "subterfúgi" );
	deepEqual( Stem("subterrânea"), "subterrân" );
	deepEqual( Stem("subterrâneas"), "subterrân" );
	deepEqual( Stem("subtrai"), "subtra" );
	deepEqual( Stem("subunidades"), "subun" );
	deepEqual( Stem("suburbana"), "suburban" );
	deepEqual( Stem("suburbano"), "suburban" );
	deepEqual( Stem("subúrbio"), "subúrbi" );
	deepEqual( Stem("subvencionado"), "subvencion" );
	deepEqual( Stem("subvenções"), "subvençõ" );
	deepEqual( Stem("subversão"), "subversã" );
	deepEqual( Stem("subversivas"), "subvers" );
	deepEqual( Stem("subversivo"), "subvers" );
	deepEqual( Stem("subvertendo"), "subvert" );
	deepEqual( Stem("sucata"), "sucat" );
	deepEqual( Stem("sucatas"), "sucat" );
	deepEqual( Stem("sucateados"), "sucat" );
	deepEqual( Stem("sucateia"), "sucat" );
	deepEqual( Stem("sucede"), "suced" );
	deepEqual( Stem("sucedê"), "suced" );
	deepEqual( Stem("sucedem"), "suced" );
	deepEqual( Stem("suceder"), "suced" );
	deepEqual( Stem("sucederam"), "suced" );
	deepEqual( Stem("sucedeu"), "suced" );
	deepEqual( Stem("sucedida"), "suced" );
	deepEqual( Stem("sucedidas"), "suced" );
	deepEqual( Stem("sucedido"), "suced" );
	deepEqual( Stem("sucedidos"), "suced" );
	deepEqual( Stem("sucessão"), "sucessã" );
	deepEqual( Stem("sucessivas"), "sucess" );
	deepEqual( Stem("sucessivos"), "sucess" );
	deepEqual( Stem("sucesso"), "sucess" );
	deepEqual( Stem("sucessor"), "sucessor" );
	deepEqual( Stem("sucessora"), "sucessor" );
	deepEqual( Stem("sucessores"), "sucessor" );
	deepEqual( Stem("sucessória"), "sucessór" );
	deepEqual( Stem("sucessórios"), "sucessóri" );
	deepEqual( Stem("sucessos"), "sucess" );
	deepEqual( Stem("suco"), "suc" );
	deepEqual( Stem("sucos"), "suc" );
	deepEqual( Stem("suculento"), "suculent" );
	deepEqual( Stem("sucumbe"), "sucumb" );
	deepEqual( Stem("sucumbiu"), "sucumb" );
	deepEqual( Stem("sucursais"), "sucurs" );
	deepEqual( Stem("sudam"), "sud" );
	deepEqual( Stem("sudameris"), "sudamer" );
	deepEqual( Stem("sudão"), "sudã" );
	deepEqual( Stem("sudeste"), "sud" );
	deepEqual( Stem("súditos"), "súdit" );
	deepEqual( Stem("sudoeste"), "sudo" );
	deepEqual( Stem("sueca"), "suec" );
	deepEqual( Stem("suécia"), "suéc" );
	deepEqual( Stem("sueco"), "suec" );
	deepEqual( Stem("suecos"), "suec" );
	deepEqual( Stem("sued"), "sued" );
	deepEqual( Stem("suelen"), "suelen" );
	deepEqual( Stem("sueli"), "suel" );
	deepEqual( Stem("suely"), "suely" );
	deepEqual( Stem("suficiente"), "suficient" );
	deepEqual( Stem("suficientemente"), "suficient" );
	deepEqual( Stem("suficientes"), "suficient" );
	deepEqual( Stem("sufixos"), "sufix" );
	deepEqual( Stem("sufocante"), "sufoc" );
	deepEqual( Stem("sufocar"), "sufoc" );
	deepEqual( Stem("sufoco"), "sufoc" );
	deepEqual( Stem("suframa"), "sufram" );
	deepEqual( Stem("sugadas"), "sug" );
	deepEqual( Stem("sugadoras"), "sugador" );
	deepEqual( Stem("sugar"), "sug" );
	deepEqual( Stem("sugere"), "suger" );
	deepEqual( Stem("sugerem"), "sug" );
	deepEqual( Stem("sugeri"), "suger" );
	deepEqual( Stem("sugerido"), "suger" );
	deepEqual( Stem("sugerindo"), "suger" );
	deepEqual( Stem("sugerir"), "suger" );
	deepEqual( Stem("sugeriram"), "suger" );
	deepEqual( Stem("sugeriu"), "suger" );
	deepEqual( Stem("sugestão"), "sugestã" );
	deepEqual( Stem("sugestivas"), "sugest" );
	deepEqual( Stem("sugestivo"), "sugest" );
	deepEqual( Stem("sugestões"), "sugestõ" );
	deepEqual( Stem("suggs"), "suggs" );
	deepEqual( Stem("sugiro"), "sugir" );
	deepEqual( Stem("sui"), "sui" );
	deepEqual( Stem("suíça"), "suíc" );
	deepEqual( Stem("suicida"), "suic" );
	deepEqual( Stem("suicidado"), "suicid" );
	deepEqual( Stem("suicidar"), "suicid" );
	deepEqual( Stem("suicidaria"), "suicid" );
	deepEqual( Stem("suicidei"), "suicid" );
	deepEqual( Stem("suicídio"), "suicídi" );
	deepEqual( Stem("suicídios"), "suicídi" );
	deepEqual( Stem("suicidou"), "suicid" );
	deepEqual( Stem("suíço"), "suíc" );
	deepEqual( Stem("suingue"), "suing" );
	deepEqual( Stem("suíte"), "suít" );
	deepEqual( Stem("suítes"), "suít" );
	deepEqual( Stem("suja"), "suj" );
	deepEqual( Stem("sujas"), "suj" );
	deepEqual( Stem("sujeira"), "sujeir" );
	deepEqual( Stem("sujeiras"), "sujeir" );
	deepEqual( Stem("sujeita"), "sujeit" );
	deepEqual( Stem("sujeitas"), "sujeit" );
	deepEqual( Stem("sujeito"), "sujeit" );
	deepEqual( Stem("sujeitos"), "sujeit" );
	deepEqual( Stem("sujo"), "suj" );
	deepEqual( Stem("sujou"), "suj" );
	deepEqual( Stem("sul"), "sul" );
	deepEqual( Stem("sulcado"), "sulc" );
	deepEqual( Stem("suleiman"), "suleiman" );
	deepEqual( Stem("sulêra"), "sulêr" );
	deepEqual( Stem("sulistas"), "sulist" );
	deepEqual( Stem("sultão"), "sultã" );
	deepEqual( Stem("sultões"), "sultõ" );
	deepEqual( Stem("suma"), "sum" );
	deepEqual( Stem("sumárias"), "sumár" );
	deepEqual( Stem("sumiço"), "sumic" );
	deepEqual( Stem("sumiços"), "sumic" );
	deepEqual( Stem("sumidade"), "sumidad" );
	deepEqual( Stem("sumido"), "sum" );
	deepEqual( Stem("sumindo"), "sum" );
	deepEqual( Stem("sumir"), "sum" );
	deepEqual( Stem("sumira"), "sum" );
	deepEqual( Stem("sumiram"), "sum" );
	deepEqual( Stem("sumiu"), "sum" );
	deepEqual( Stem("summersby"), "summersby" );
	deepEqual( Stem("sun"), "sun" );
	deepEqual( Stem("sundae"), "sunda" );
	deepEqual( Stem("sunday"), "sunday" );
	deepEqual( Stem("sunga"), "sung" );
	deepEqual( Stem("suntuoso"), "suntuos" );
	deepEqual( Stem("suntuosos"), "suntuos" );
	deepEqual( Stem("suor"), "suor" );
	deepEqual( Stem("super"), "sup" );
	deepEqual( Stem("supera"), "sup" );
	deepEqual( Stem("superada"), "super" );
	deepEqual( Stem("superado"), "super" );
	deepEqual( Stem("superalimentação"), "superaliment" );
	deepEqual( Stem("superam"), "sup" );
	deepEqual( Stem("superando"), "super" );
	deepEqual( Stem("superar"), "super" );
	deepEqual( Stem("superaram"), "super" );
	deepEqual( Stem("superavitários"), "superavitári" );
	deepEqual( Stem("superbuble"), "superbubl" );
	deepEqual( Stem("supercerto"), "supercert" );
	deepEqual( Stem("superchateado"), "superchat" );
	deepEqual( Stem("superchique"), "superchiqu" );
	deepEqual( Stem("supercílio"), "supercíli" );
	deepEqual( Stem("supercola"), "supercol" );
	deepEqual( Stem("supercomputadores"), "supercomput" );
	deepEqual( Stem("supere"), "super" );
	deepEqual( Stem("superespecialização"), "superespecializ" );
	deepEqual( Stem("superespião"), "superespiã" );
	deepEqual( Stem("superesquema"), "superesquem" );
	deepEqual( Stem("superestimar"), "superestim" );
	deepEqual( Stem("superestimular"), "superestimul" );
	deepEqual( Stem("superestímulos"), "superestímul" );
	deepEqual( Stem("superexposição"), "superexposiçã" );
	deepEqual( Stem("superfaturamento"), "superfatur" );
	deepEqual( Stem("superfaturar"), "superfatur" );
	deepEqual( Stem("superfeliz"), "superfeliz" );
	deepEqual( Stem("superficiais"), "superfic" );
	deepEqual( Stem("superficial"), "superficial" );
	deepEqual( Stem("superfície"), "superfíc" );
	deepEqual( Stem("supérfluo"), "supérflu" );
	deepEqual( Stem("superintendência"), "superintendent" );
	deepEqual( Stem("superintendências"), "superintendent" );
	deepEqual( Stem("superintendente"), "superintendent" );
	deepEqual( Stem("superinteressante"), "superinteress" );
	deepEqual( Stem("superior"), "superior" );
	deepEqual( Stem("superiores"), "superior" );
	deepEqual( Stem("superioridade"), "superior" );
	deepEqual( Stem("superjogo"), "superjog" );
	deepEqual( Stem("superlaminada"), "superlamin" );
	deepEqual( Stem("superloja"), "superloj" );
	deepEqual( Stem("superlotação"), "superlot" );
	deepEqual( Stem("superlotada"), "superlot" );
	deepEqual( Stem("superman"), "superman" );
	deepEqual( Stem("supermercado"), "supermerc" );
	deepEqual( Stem("supermercados"), "supermerc" );
	deepEqual( Stem("supernormal"), "supernormal" );
	deepEqual( Stem("superou"), "super" );
	deepEqual( Stem("superpopulação"), "superpopul" );
	deepEqual( Stem("superpopulosa"), "superpopul" );
	deepEqual( Stem("superpotências"), "superpotent" );
	deepEqual( Stem("supersônicos"), "supersôn" );
	deepEqual( Stem("superstição"), "superstiçã" );
	deepEqual( Stem("supersticioso"), "superstic" );
	deepEqual( Stem("superternos"), "supertern" );
	deepEqual( Stem("supervisão"), "supervisã" );
	deepEqual( Stem("supervisionados"), "supervision" );
	deepEqual( Stem("supervisor"), "supervisor" );
	deepEqual( Stem("suplemento"), "suplement" );
	deepEqual( Stem("supletivo"), "suplet" );
	deepEqual( Stem("suplício"), "suplíci" );
	deepEqual( Stem("suplicy"), "suplicy" );
	deepEqual( Stem("supõe"), "supõ" );
	deepEqual( Stem("supõem"), "supõ" );
	deepEqual( Stem("supor"), "supor" );
	deepEqual( Stem("suporta"), "suport" );
	deepEqual( Stem("suportam"), "suport" );
	deepEqual( Stem("suportar"), "suport" );
	deepEqual( Stem("suporte"), "suport" );
	deepEqual( Stem("suportou"), "suport" );
	deepEqual( Stem("suposição"), "suposiçã" );
	deepEqual( Stem("suposta"), "supost" );
	deepEqual( Stem("supostamente"), "supost" );
	deepEqual( Stem("supostas"), "supost" );
	deepEqual( Stem("suposto"), "supost" );
	deepEqual( Stem("supostos"), "supost" );
	deepEqual( Stem("supra"), "supr" );
	deepEqual( Stem("suprema"), "suprem" );
	deepEqual( Stem("supremacia"), "supremac" );
	deepEqual( Stem("supremo"), "suprem" );
	deepEqual( Stem("supressão"), "supressã" );
	deepEqual( Stem("suprida"), "supr" );
	deepEqual( Stem("supridores"), "supridor" );
	deepEqual( Stem("suprimento"), "supriment" );
	deepEqual( Stem("suprimentos"), "supriment" );
	deepEqual( Stem("suprimir"), "suprim" );
	deepEqual( Stem("suprir"), "supr" );
	deepEqual( Stem("supusesse"), "supus" );
	deepEqual( Stem("surda"), "surd" );
	deepEqual( Stem("surdo"), "surd" );
	deepEqual( Stem("surdos"), "surd" );
	deepEqual( Stem("surf"), "surf" );
	deepEqual( Stem("surfam"), "surf" );
	deepEqual( Stem("surfar"), "surf" );
	deepEqual( Stem("surfe"), "surf" );
	deepEqual( Stem("surfista"), "surfist" );
	deepEqual( Stem("surfistas"), "surfist" );
	deepEqual( Stem("surge"), "surg" );
	deepEqual( Stem("surgem"), "surg" );
	deepEqual( Stem("surgia"), "surg" );
	deepEqual( Stem("surgiam"), "surg" );
	deepEqual( Stem("surgido"), "surg" );
	deepEqual( Stem("surgimento"), "surgiment" );
	deepEqual( Stem("surgindo"), "surg" );
	deepEqual( Stem("surgir"), "surg" );
	deepEqual( Stem("surgirá"), "surg" );
	deepEqual( Stem("surgiram"), "surg" );
	deepEqual( Stem("surgirão"), "surg" );
	deepEqual( Stem("surgisse"), "surg" );
	deepEqual( Stem("surgiu"), "surg" );
	deepEqual( Stem("suriname"), "surinam" );
	deepEqual( Stem("surja"), "surj" );
	deepEqual( Stem("surjam"), "surj" );
	deepEqual( Stem("surpreende"), "surpreend" );
	deepEqual( Stem("surpreendem"), "surpreend" );
	deepEqual( Stem("surpreendendo"), "surpreend" );
	deepEqual( Stem("surpreendente"), "surpreendent" );
	deepEqual( Stem("surpreendentemente"), "surpreendent" );
	deepEqual( Stem("surpreendentes"), "surpreendent" );
	deepEqual( Stem("surpreender"), "surpreend" );
	deepEqual( Stem("surpreendeu"), "surpreend" );
	deepEqual( Stem("surpreendida"), "surpreend" );
	deepEqual( Stem("surpreendidas"), "surpreend" );
	deepEqual( Stem("surpreendido"), "surpreend" );
	deepEqual( Stem("surpresa"), "surpres" );
	deepEqual( Stem("surpresas"), "surpres" );
	deepEqual( Stem("surpreso"), "surpres" );
	deepEqual( Stem("surpresos"), "surpres" );
	deepEqual( Stem("surra"), "surr" );
	deepEqual( Stem("surradas"), "surr" );
	deepEqual( Stem("surreal"), "surreal" );
	deepEqual( Stem("surrealismo"), "surreal" );
	deepEqual( Stem("surrealista"), "surreal" );
	deepEqual( Stem("surrealistas"), "surreal" );
	deepEqual( Stem("surrupiando"), "surrupi" );
	deepEqual( Stem("sursis"), "surs" );
	deepEqual( Stem("surtem"), "surt" );
	deepEqual( Stem("surtiam"), "surt" );
	deepEqual( Stem("surtir"), "surt" );
	deepEqual( Stem("surtiram"), "surt" );
	deepEqual( Stem("surtiu"), "surt" );
	deepEqual( Stem("surto"), "surt" );
	deepEqual( Stem("suruagy"), "suruagy" );
	deepEqual( Stem("suruba"), "surub" );
	deepEqual( Stem("survival"), "survival" );
	deepEqual( Stem("surviving"), "surviving" );
	deepEqual( Stem("sus"), "sus" );
	deepEqual( Stem("susanna"), "susann" );
	deepEqual( Stem("susanne"), "susann" );
	deepEqual( Stem("susbstituindo"), "susbstitu" );
	deepEqual( Stem("suscetibilidades"), "suscetibil" );
	deepEqual( Stem("suscetíveis"), "suscetív" );
	deepEqual( Stem("suscetível"), "suscet" );
	deepEqual( Stem("suscitam"), "suscit" );
	deepEqual( Stem("suscitar"), "suscit" );
	deepEqual( Stem("suscitaram"), "suscit" );
	deepEqual( Stem("suspeição"), "suspeiçã" );
	deepEqual( Stem("suspeita"), "suspeit" );
	deepEqual( Stem("suspeitam"), "suspeit" );
	deepEqual( Stem("suspeitaram"), "suspeit" );
	deepEqual( Stem("suspeitas"), "suspeit" );
	deepEqual( Stem("suspeitasse"), "suspeit" );
	deepEqual( Stem("suspeitava"), "suspeit" );
	deepEqual( Stem("suspeitíssimas"), "suspeitíssim" );
	deepEqual( Stem("suspeito"), "suspeit" );
	deepEqual( Stem("suspeitos"), "suspeit" );
	deepEqual( Stem("suspeitou"), "suspeit" );
	deepEqual( Stem("suspende"), "suspend" );
	deepEqual( Stem("suspendendo"), "suspend" );
	deepEqual( Stem("suspender"), "suspend" );
	deepEqual( Stem("suspenderiam"), "suspend" );
	deepEqual( Stem("suspendeu"), "suspend" );
	deepEqual( Stem("suspensa"), "suspens" );
	deepEqual( Stem("suspensão"), "suspensã" );
	deepEqual( Stem("suspense"), "suspens" );
	deepEqual( Stem("suspenso"), "suspens" );
	deepEqual( Stem("suspensos"), "suspens" );
	deepEqual( Stem("suspira"), "susp" );
	deepEqual( Stem("suspiravam"), "suspir" );
	deepEqual( Stem("susskind"), "susskind" );
	deepEqual( Stem("sustenta"), "sustent" );
	deepEqual( Stem("sustentação"), "sustent" );
	deepEqual( Stem("sustentada"), "sustent" );
	deepEqual( Stem("sustentado"), "sustent" );
	deepEqual( Stem("sustentados"), "sustent" );
	deepEqual( Stem("sustentam"), "sustent" );
	deepEqual( Stem("sustentar"), "sustent" );
	deepEqual( Stem("sustentasse"), "sustent" );
	deepEqual( Stem("sustentava"), "sustent" );
	deepEqual( Stem("sustentavam"), "sustent" );
	deepEqual( Stem("sustentáveis"), "sustent" );
	deepEqual( Stem("sustento"), "sustent" );
	deepEqual( Stem("sustentou"), "sustent" );
	deepEqual( Stem("susto"), "sust" );
	deepEqual( Stem("sustos"), "sust" );
	deepEqual( Stem("sutiã"), "sutiã" );
	deepEqual( Stem("sutiãs"), "sutiãs" );
	deepEqual( Stem("sutil"), "sutil" );
	deepEqual( Stem("sutilezas"), "sutil" );
	deepEqual( Stem("sutilmente"), "sutil" );
	deepEqual( Stem("sutis"), "sut" );
	deepEqual( Stem("suvenires"), "suven" );
	deepEqual( Stem("suzana"), "suzan" );
	deepEqual( Stem("suzanna"), "suzann" );
	deepEqual( Stem("suzano"), "suzan" );
	deepEqual( Stem("suzerley"), "suzerley" );
	deepEqual( Stem("suzuki"), "suzuk" );
	deepEqual( Stem("suzy"), "suzy" );
	deepEqual( Stem("sw"), "sw" );
	deepEqual( Stem("swissair"), "swissa" );
	deepEqual( Stem("swissbank"), "swissbank" );
	deepEqual( Stem("sydney"), "sydney" );
	deepEqual( Stem("sylviane"), "sylvian" );
	deepEqual( Stem("synval"), "synval" );
	deepEqual( Stem("system"), "system" );
	deepEqual( Stem("szabó"), "szab" );
	deepEqual( Stem("szpilman"), "szpilman" );
	deepEqual( Stem("szwarc"), "szwarc" );
	deepEqual( Stem("t"), "t" );
	deepEqual( Stem("tá"), "tá" );
	deepEqual( Stem("tabacaria"), "tabac" );
	deepEqual( Stem("tabaco"), "tabac" );
	deepEqual( Stem("tabela"), "tabel" );
	deepEqual( Stem("tabelas"), "tabel" );
	deepEqual( Stem("tabeliã"), "tabeliã" );
	deepEqual( Stem("tabeliães"), "tabeliã" );
	deepEqual( Stem("tabelião"), "tabeliã" );
	deepEqual( Stem("tabelinha"), "tabelinh" );
	deepEqual( Stem("tabelionato"), "tabelionat" );
	deepEqual( Stem("tablado"), "tabl" );
	deepEqual( Stem("tablados"), "tabl" );
	deepEqual( Stem("tablóide"), "tablóid" );
	deepEqual( Stem("tabo"), "tab" );
	deepEqual( Stem("tabu"), "tabu" );
	deepEqual( Stem("tábuas"), "tábu" );
	deepEqual( Stem("tabulações"), "tabul" );
	deepEqual( Stem("tabuleiro"), "tabuleir" );
	deepEqual( Stem("tabus"), "tabus" );
	deepEqual( Stem("tabwin"), "tabwin" );
	deepEqual( Stem("taça"), "tac" );
	deepEqual( Stem("tacada"), "tac" );
	deepEqual( Stem("taças"), "tac" );
	deepEqual( Stem("tachados"), "tach" );
	deepEqual( Stem("taco"), "tac" );
	deepEqual( Stem("tadeu"), "tad" );
	deepEqual( Stem("taft"), "taft" );
	deepEqual( Stem("tag"), "tag" );
	deepEqual( Stem("tagarela"), "tagarel" );
	deepEqual( Stem("tageszeitung"), "tageszeitung" );
	deepEqual( Stem("tagliaferro"), "tagliaferr" );
	deepEqual( Stem("tahoe"), "taho" );
	deepEqual( Stem("taí"), "taí" );
	deepEqual( Stem("taiga"), "taig" );
	deepEqual( Stem("tailandês"), "tailandês" );
	deepEqual( Stem("tailandesa"), "tailandes" );
	deepEqual( Stem("tailandesas"), "tailandes" );
	deepEqual( Stem("tailandeses"), "tailandes" );
	deepEqual( Stem("tailândia"), "tailând" );
	deepEqual( Stem("taille"), "taill" );
	deepEqual( Stem("tailleur"), "tailleur" );
	deepEqual( Stem("taiogan"), "taiogan" );
	deepEqual( Stem("taipa"), "taip" );
	deepEqual( Stem("tais"), "tais" );
	deepEqual( Stem("taís"), "taís" );
	deepEqual( Stem("taiti"), "tait" );
	deepEqual( Stem("taiwan"), "taiwan" );
	deepEqual( Stem("taj"), "taj" );
	deepEqual( Stem("takanori"), "takanor" );
	deepEqual( Stem("takarazuka"), "takarazuk" );
	deepEqual( Stem("tal"), "tal" );
	deepEqual( Stem("talão"), "talã" );
	deepEqual( Stem("talavera"), "talav" );
	deepEqual( Stem("talent"), "talent" );
	deepEqual( Stem("talento"), "talent" );
	deepEqual( Stem("talentos"), "talent" );
	deepEqual( Stem("talentosa"), "talent" );
	deepEqual( Stem("talhada"), "talh" );
	deepEqual( Stem("talheres"), "talh" );
	deepEqual( Stem("talismã"), "talismã" );
	deepEqual( Stem("talk"), "talk" );
	deepEqual( Stem("talquinho"), "talquinh" );
	deepEqual( Stem("talvez"), "talvez" );
	deepEqual( Stem("tam"), "tam" );
	deepEqual( Stem("tamanha"), "tamanh" );
	deepEqual( Stem("tamanho"), "tamanh" );
	deepEqual( Stem("tamanhos"), "tamanh" );
	deepEqual( Stem("tamar"), "tam" );
	deepEqual( Stem("tamara"), "tam" );
	deepEqual( Stem("tambaqui"), "tambaqu" );
	deepEqual( Stem("também"), "também" );
	deepEqual( Stem("tambolato"), "tambolat" );
	deepEqual( Stem("tambor"), "tambor" );
	deepEqual( Stem("tambores"), "tambor" );
	deepEqual( Stem("tamburello"), "tamburell" );
	deepEqual( Stem("tambus"), "tambus" );
	deepEqual( Stem("tâmisa"), "tâmis" );
	deepEqual( Stem("tampa"), "tamp" );
	deepEqual( Stem("tampão"), "tampã" );
	deepEqual( Stem("tampouco"), "tampouc" );
	deepEqual( Stem("tanaka"), "tanak" );
	deepEqual( Stem("tancinha"), "tancinh" );
	deepEqual( Stem("tancredo"), "tancred" );
	deepEqual( Stem("tande"), "tand" );
	deepEqual( Stem("tanghe"), "tangh" );
	deepEqual( Stem("tangível"), "tangível" );
	deepEqual( Stem("tango"), "tang" );
	deepEqual( Stem("tania"), "tan" );
	deepEqual( Stem("tânia"), "tân" );
	deepEqual( Stem("tanis"), "tan" );
	deepEqual( Stem("tanner"), "tann" );
	deepEqual( Stem("tanque"), "tanqu" );
	deepEqual( Stem("tanques"), "tanqu" );
	deepEqual( Stem("tanta"), "tant" );
	deepEqual( Stem("tantas"), "tant" );
	deepEqual( Stem("tanto"), "tant" );
	deepEqual( Stem("tantos"), "tant" );
	deepEqual( Stem("tão"), "tã" );
	deepEqual( Stem("tapa"), "tap" );
	deepEqual( Stem("tapados"), "tap" );
	deepEqual( Stem("tapar"), "tap" );
	deepEqual( Stem("tapas"), "tap" );
	deepEqual( Stem("tapera"), "tap" );
	deepEqual( Stem("taperilla"), "taperill" );
	deepEqual( Stem("taperoá"), "tapero" );
	deepEqual( Stem("tapete"), "tapet" );
	deepEqual( Stem("tapetes"), "tapet" );
	deepEqual( Stem("tapumes"), "tapum" );
	deepEqual( Stem("taquicardia"), "taquicard" );
	deepEqual( Stem("taquipsiquismo"), "taquipsiqu" );
	deepEqual( Stem("taras"), "tar" );
	deepEqual( Stem("tarauacá"), "tarauac" );
	deepEqual( Stem("tarcisinho"), "tarcisinh" );
	deepEqual( Stem("tarcísio"), "tarcísi" );
	deepEqual( Stem("tarda"), "tard" );
	deepEqual( Stem("tarde"), "tard" );
	deepEqual( Stem("tardelli"), "tardell" );
	deepEqual( Stem("tardes"), "tard" );
	deepEqual( Stem("tardia"), "tard" );
	deepEqual( Stem("tardiamente"), "tardi" );
	deepEqual( Stem("tardinha"), "tardinh" );
	deepEqual( Stem("tardou"), "tard" );
	deepEqual( Stem("tarefa"), "taref" );
	deepEqual( Stem("tarefas"), "taref" );
	deepEqual( Stem("tarifa"), "tarif" );
	deepEqual( Stem("tarifária"), "tarifár" );
	deepEqual( Stem("tarifas"), "tarif" );
	deepEqual( Stem("tarimbados"), "tarimb" );
	deepEqual( Stem("tarja"), "tarj" );
	deepEqual( Stem("tarjas"), "tarj" );
	deepEqual( Stem("tarsila"), "tarsil" );
	deepEqual( Stem("tarso"), "tars" );
	deepEqual( Stem("tartari"), "tartar" );
	deepEqual( Stem("tartaruga"), "tartarug" );
	deepEqual( Stem("tartarugas"), "tartarug" );
	deepEqual( Stem("task"), "task" );
	deepEqual( Stem("tasso"), "tass" );
	deepEqual( Stem("tatiana"), "tatian" );
	deepEqual( Stem("tática"), "tátic" );
	deepEqual( Stem("táticas"), "tátic" );
	deepEqual( Stem("tato"), "tat" );
	deepEqual( Stem("tatu"), "tatu" );
	deepEqual( Stem("tatuapé"), "tatuap" );
	deepEqual( Stem("tauride"), "taurid" );
	deepEqual( Stem("taurus"), "taurus" );
	deepEqual( Stem("tavares"), "tav" );
	deepEqual( Stem("távola"), "távol" );
	deepEqual( Stem("taxa"), "tax" );
	deepEqual( Stem("taxas"), "tax" );
	deepEqual( Stem("taxativa"), "taxat" );
	deepEqual( Stem("táxi"), "táx" );
	deepEqual( Stem("taxista"), "taxist" );
	deepEqual( Stem("taxistas"), "taxist" );
	deepEqual( Stem("taylor"), "taylor" );
	deepEqual( Stem("tce"), "tce" );
	deepEqual( Stem("tchan"), "tchan" );
	deepEqual( Stem("tchau"), "tchau" );
	deepEqual( Stem("tchun"), "tchun" );
	deepEqual( Stem("tchururuchu"), "tchururuchu" );
	deepEqual( Stem("tdc"), "tdc" );
	deepEqual( Stem("te"), "te" );
	deepEqual( Stem("tê"), "tê" );
	deepEqual( Stem("tea"), "tea" );
	deepEqual( Stem("team"), "team" );
	deepEqual( Stem("teares"), "tear" );
	deepEqual( Stem("tease"), "teas" );
	deepEqual( Stem("teatrais"), "teatr" );
	deepEqual( Stem("teatral"), "teatral" );
	deepEqual( Stem("teatro"), "teatr" );
	deepEqual( Stem("teatrólogo"), "teatrólog" );
	deepEqual( Stem("teatros"), "teatr" );
	deepEqual( Stem("tecelagem"), "tecelag" );
	deepEqual( Stem("tecendo"), "tec" );
	deepEqual( Stem("tech"), "tech" );
	deepEqual( Stem("techno"), "techn" );
	deepEqual( Stem("technology"), "technology" );
	deepEqual( Stem("tecido"), "tec" );
	deepEqual( Stem("tecidos"), "tec" );
	deepEqual( Stem("técio"), "téci" );
	deepEqual( Stem("tecla"), "tecl" );
	deepEqual( Stem("teclado"), "tecl" );
	deepEqual( Stem("técnica"), "técnic" );
	deepEqual( Stem("tecnicamente"), "tecnic" );
	deepEqual( Stem("técnicas"), "técnic" );
	deepEqual( Stem("técnico"), "técnic" );
	deepEqual( Stem("técnicos"), "técnic" );
	deepEqual( Stem("tecnocratas"), "tecnocrat" );
	deepEqual( Stem("tecnologia"), "tecnolog" );
	deepEqual( Stem("tecnologias"), "tecnolog" );
	deepEqual( Stem("tecnológica"), "tecnológ" );
	deepEqual( Stem("tecnologicamente"), "tecnolog" );
	deepEqual( Stem("tecnológicas"), "tecnológ" );
	deepEqual( Stem("tecnológico"), "tecnológ" );
	deepEqual( Stem("tecnológicos"), "tecnológ" );
	deepEqual( Stem("ted"), "ted" );
	deepEqual( Stem("tédio"), "tédi" );
	deepEqual( Stem("tediosa"), "tedios" );
	deepEqual( Stem("teemsters"), "teemsters" );
	deepEqual( Stem("teen"), "teen" );
	deepEqual( Stem("teens"), "teens" );
	deepEqual( Stem("tefé"), "tef" );
	deepEqual( Stem("teimando"), "teim" );
	deepEqual( Stem("teimar"), "teim" );
	deepEqual( Stem("teimoso"), "teimos" );
	deepEqual( Stem("teipe"), "teip" );
	deepEqual( Stem("teixeira"), "teixeir" );
	deepEqual( Stem("tejo"), "tej" );
	deepEqual( Stem("tel"), "tel" );
	deepEqual( Stem("tela"), "tel" );
	deepEqual( Stem("telão"), "telã" );
	deepEqual( Stem("telas"), "tel" );
	deepEqual( Stem("telbrás"), "telbrás" );
	deepEqual( Stem("telebrás"), "telebrás" );
	deepEqual( Stem("teleceará"), "telec" );
	deepEqual( Stem("télécom"), "télécom" );
	deepEqual( Stem("telecomunicação"), "telecomunic" );
	deepEqual( Stem("telecomunicações"), "telecomunic" );
	deepEqual( Stem("teleconferência"), "teleconferent" );
	deepEqual( Stem("telecurso"), "telecurs" );
	deepEqual( Stem("teledramaturgia"), "teledramaturg" );
	deepEqual( Stem("telefe"), "telef" );
	deepEqual( Stem("teleférico"), "telefér" );
	deepEqual( Stem("telefonado"), "telefon" );
	deepEqual( Stem("telefonando"), "telefon" );
	deepEqual( Stem("telefonar"), "telefon" );
	deepEqual( Stem("telefonaram"), "telefon" );
	deepEqual( Stem("telefone"), "telefon" );
	deepEqual( Stem("telefonei"), "telefon" );
	deepEqual( Stem("telefonema"), "telefonem" );
	deepEqual( Stem("telefonemas"), "telefonem" );
	deepEqual( Stem("telefones"), "telefon" );
	deepEqual( Stem("telefonia"), "telefon" );
	deepEqual( Stem("telefônica"), "telefôn" );
	deepEqual( Stem("telefônicas"), "telefôn" );
	deepEqual( Stem("telefônico"), "telefôn" );
	deepEqual( Stem("telefônicos"), "telefôn" );
	deepEqual( Stem("telefono"), "telefon" );
	deepEqual( Stem("telefonou"), "telefon" );
	deepEqual( Stem("telegráfico"), "telegráf" );
	deepEqual( Stem("telégrafo"), "telégraf" );
	deepEqual( Stem("telegramas"), "telegram" );
	deepEqual( Stem("telegraph"), "telegraph" );
	deepEqual( Stem("telejornais"), "telejorn" );
	deepEqual( Stem("telejornal"), "telejornal" );
	deepEqual( Stem("telemarketing"), "telemarketing" );
	deepEqual( Stem("telemig"), "telemig" );
	deepEqual( Stem("telenovela"), "telenovel" );
	deepEqual( Stem("telepar"), "telep" );
	deepEqual( Stem("telepata"), "telepat" );
	deepEqual( Stem("telepatia"), "telepat" );
	deepEqual( Stem("telephony"), "telephony" );
	deepEqual( Stem("telerj"), "telerj" );
	deepEqual( Stem("telesc"), "telesc" );
	deepEqual( Stem("telescópios"), "telescópi" );
	deepEqual( Stem("telesp"), "telesp" );
	deepEqual( Stem("telespectadores"), "telespect" );
	deepEqual( Stem("televisa"), "televis" );
	deepEqual( Stem("televisão"), "televisã" );
	deepEqual( Stem("televisiva"), "televis" );
	deepEqual( Stem("televisivo"), "televis" );
	deepEqual( Stem("televisões"), "televisõ" );
	deepEqual( Stem("televisores"), "televisor" );
	deepEqual( Stem("telex"), "telex" );
	deepEqual( Stem("telhado"), "telh" );
	deepEqual( Stem("telhas"), "telh" );
	deepEqual( Stem("telinha"), "telinh" );
	deepEqual( Stem("telma"), "telm" );
	deepEqual( Stem("telmo"), "telm" );
	deepEqual( Stem("telões"), "telõ" );
	deepEqual( Stem("telpe"), "telp" );
	deepEqual( Stem("tels"), "tels" );
	deepEqual( Stem("tem"), "tem" );
	deepEqual( Stem("têm"), "têm" );
	deepEqual( Stem("tema"), "tem" );
	deepEqual( Stem("temas"), "tem" );
	deepEqual( Stem("tematicamente"), "temat" );
	deepEqual( Stem("temáticas"), "temát" );
	deepEqual( Stem("temático"), "temát" );
	deepEqual( Stem("teme"), "tem" );
	deepEqual( Stem("temem"), "tem" );
	deepEqual( Stem("temendo"), "tem" );
	deepEqual( Stem("temer"), "tem" );
	deepEqual( Stem("temeram"), "tem" );
	deepEqual( Stem("temerosa"), "temer" );
	deepEqual( Stem("temeu"), "tem" );
	deepEqual( Stem("temia"), "tem" );
	deepEqual( Stem("temiam"), "tem" );
	deepEqual( Stem("temida"), "tem" );
	deepEqual( Stem("temidas"), "tem" );
	deepEqual( Stem("temido"), "tem" );
	deepEqual( Stem("temidos"), "tem" );
	deepEqual( Stem("temor"), "temor" );
	deepEqual( Stem("temores"), "temor" );
	deepEqual( Stem("temos"), "tem" );
	deepEqual( Stem("têmpera"), "têmp" );
	deepEqual( Stem("temperada"), "temper" );
	deepEqual( Stem("temperado"), "temper" );
	deepEqual( Stem("temperamentais"), "temperament" );
	deepEqual( Stem("temperamental"), "temperamental" );
	deepEqual( Stem("temperamento"), "temper" );
	deepEqual( Stem("temperamentos"), "temper" );
	deepEqual( Stem("temperança"), "temperanc" );
	deepEqual( Stem("temperatura"), "temperatur" );
	deepEqual( Stem("temperaturas"), "temperatur" );
	deepEqual( Stem("tempero"), "temper" );
	deepEqual( Stem("temperos"), "temper" );
	deepEqual( Stem("tempestade"), "tempestad" );
	deepEqual( Stem("tempestades"), "tempestad" );
	deepEqual( Stem("tempestuosas"), "tempestu" );
	deepEqual( Stem("tempinho"), "tempinh" );
	deepEqual( Stem("templo"), "templ" );
	deepEqual( Stem("templos"), "templ" );
	deepEqual( Stem("tempo"), "temp" );
	deepEqual( Stem("temporada"), "tempor" );
	deepEqual( Stem("temporadas"), "tempor" );
	deepEqual( Stem("temporal"), "temporal" );
	deepEqual( Stem("temporário"), "temporári" );
	deepEqual( Stem("têmporas"), "têmpor" );
	deepEqual( Stem("tempos"), "temp" );
	deepEqual( Stem("tempra"), "tempr" );
	deepEqual( Stem("tenacidade"), "tenac" );
	deepEqual( Stem("tenda"), "tend" );
	deepEqual( Stem("tendam"), "tend" );
	deepEqual( Stem("tendão"), "tendã" );
	deepEqual( Stem("tende"), "tend" );
	deepEqual( Stem("tendem"), "tend" );
	deepEqual( Stem("tendência"), "tendênc" );
	deepEqual( Stem("tendências"), "tendênc" );
	deepEqual( Stem("tendenciosa"), "tendenc" );
	deepEqual( Stem("tendendo"), "tend" );
	deepEqual( Stem("tenderia"), "tend" );
	deepEqual( Stem("tendo"), "tend" );
	deepEqual( Stem("tenebroso"), "tenebr" );
	deepEqual( Stem("tenente"), "tenent" );
	deepEqual( Stem("tenentezinha"), "tenentezinh" );
	deepEqual( Stem("tenha"), "tenh" );
	deepEqual( Stem("tenham"), "tenh" );
	deepEqual( Stem("tenhamos"), "tenh" );
	deepEqual( Stem("tenho"), "tenh" );
	deepEqual( Stem("tênis"), "tên" );
	deepEqual( Stem("tenista"), "tenist" );
	deepEqual( Stem("tenistas"), "tenist" );
	deepEqual( Stem("tennessee"), "tennesse" );
	deepEqual( Stem("tenor"), "tenor" );
	deepEqual( Stem("tenório"), "tenóri" );
	deepEqual( Stem("tenros"), "tenr" );
	deepEqual( Stem("tensa"), "tens" );
	deepEqual( Stem("tensão"), "tensã" );
	deepEqual( Stem("tensas"), "tens" );
	deepEqual( Stem("tenso"), "tens" );
	deepEqual( Stem("tensões"), "tensõ" );
	deepEqual( Stem("tensos"), "tens" );
	deepEqual( Stem("tenta"), "tent" );
	deepEqual( Stem("tentação"), "tentaçã" );
	deepEqual( Stem("tentações"), "tentaçõ" );
	deepEqual( Stem("tentáculos"), "tentácul" );
	deepEqual( Stem("tentado"), "tent" );
	deepEqual( Stem("tentados"), "tent" );
	deepEqual( Stem("tentam"), "tent" );
	deepEqual( Stem("tentamos"), "tent" );
	deepEqual( Stem("tentando"), "tent" );
	deepEqual( Stem("tentar"), "tent" );
	deepEqual( Stem("tentará"), "tent" );
	deepEqual( Stem("tentaram"), "tent" );
	deepEqual( Stem("tentaria"), "tent" );
	deepEqual( Stem("tentativa"), "tentat" );
	deepEqual( Stem("tentativas"), "tentat" );
	deepEqual( Stem("tentava"), "tent" );
	deepEqual( Stem("tentavam"), "tent" );
	deepEqual( Stem("tente"), "tent" );
	deepEqual( Stem("tentei"), "tent" );
	deepEqual( Stem("tentem"), "tent" );
	deepEqual( Stem("tento"), "tent" );
	deepEqual( Stem("tentou"), "tent" );
	deepEqual( Stem("tênues"), "tênu" );
	deepEqual( Stem("teobaldo"), "teobald" );
	deepEqual( Stem("teodoro"), "teodor" );
	deepEqual( Stem("teófilo"), "teófil" );
	deepEqual( Stem("teologia"), "teolog" );
	deepEqual( Stem("teológica"), "teológ" );
	deepEqual( Stem("teólogos"), "teólog" );
	deepEqual( Stem("teor"), "teor" );
	deepEqual( Stem("teoria"), "teor" );
	deepEqual( Stem("teorias"), "teor" );
	deepEqual( Stem("teoricamente"), "teoric" );
	deepEqual( Stem("teórico"), "teóric" );
	deepEqual( Stem("teóricos"), "teóric" );
	deepEqual( Stem("teoriza"), "teoriz" );
	deepEqual( Stem("tequila"), "tequil" );
	deepEqual( Stem("ter"), "ter" );
	deepEqual( Stem("terá"), "ter" );
	deepEqual( Stem("terão"), "terã" );
	deepEqual( Stem("terapeuta"), "terapeut" );
	deepEqual( Stem("terapeutas"), "terapeut" );
	deepEqual( Stem("terapêutica"), "terapêut" );
	deepEqual( Stem("terapêuticas"), "terapêut" );
	deepEqual( Stem("terapêutico"), "terapêut" );
	deepEqual( Stem("terapêuticos"), "terapêut" );
	deepEqual( Stem("terapia"), "terap" );
	deepEqual( Stem("terapias"), "terap" );
	deepEqual( Stem("terça"), "terc" );
	deepEqual( Stem("terças"), "terc" );
	deepEqual( Stem("terceira"), "terceir" );
	deepEqual( Stem("terceirizados"), "terceiriz" );
	deepEqual( Stem("terceiro"), "terceir" );
	deepEqual( Stem("terceiros"), "terceir" );
	deepEqual( Stem("terço"), "terc" );
	deepEqual( Stem("terços"), "terc" );
	deepEqual( Stem("terei"), "ter" );
	deepEqual( Stem("terem"), "ter" );
	deepEqual( Stem("teremos"), "ter" );
	deepEqual( Stem("tererê"), "terer" );
	deepEqual( Stem("teresa"), "teres" );
	deepEqual( Stem("teresinha"), "teresinh" );
	deepEqual( Stem("tereso"), "teres" );
	deepEqual( Stem("teresópolis"), "teresópol" );
	deepEqual( Stem("tereza"), "terez" );
	deepEqual( Stem("teria"), "ter" );
	deepEqual( Stem("teriam"), "ter" );
	deepEqual( Stem("teríamos"), "ter" );
	deepEqual( Stem("termais"), "term" );
	deepEqual( Stem("térmica"), "térmic" );
	deepEqual( Stem("termina"), "termin" );
	deepEqual( Stem("terminação"), "termin" );
	deepEqual( Stem("terminações"), "termin" );
	deepEqual( Stem("terminada"), "termin" );
	deepEqual( Stem("terminado"), "termin" );
	deepEqual( Stem("terminal"), "terminal" );
	deepEqual( Stem("terminam"), "termin" );
	deepEqual( Stem("terminamos"), "termin" );
	deepEqual( Stem("terminando"), "termin" );
	deepEqual( Stem("terminar"), "termin" );
	deepEqual( Stem("terminará"), "termin" );
	deepEqual( Stem("terminaram"), "termin" );
	deepEqual( Stem("terminaria"), "termin" );
	deepEqual( Stem("terminava"), "termin" );
	deepEqual( Stem("terminavam"), "termin" );
	deepEqual( Stem("termine"), "termin" );
	deepEqual( Stem("término"), "términ" );
	deepEqual( Stem("terminou"), "termin" );
	deepEqual( Stem("termo"), "term" );
	deepEqual( Stem("termômetro"), "termômetr" );
	deepEqual( Stem("termos"), "term" );
	deepEqual( Stem("terno"), "tern" );
	deepEqual( Stem("ternos"), "tern" );
	deepEqual( Stem("terra"), "terr" );
	deepEqual( Stem("terras"), "terr" );
	deepEqual( Stem("terrasul"), "terrasul" );
	deepEqual( Stem("terre"), "terr" );
	deepEqual( Stem("térrea"), "térr" );
	deepEqual( Stem("terreiro"), "terreir" );
	deepEqual( Stem("terreiros"), "terreir" );
	deepEqual( Stem("terremoto"), "terremot" );
	deepEqual( Stem("terremotos"), "terremot" );
	deepEqual( Stem("terrence"), "terrenc" );
	deepEqual( Stem("terreno"), "terren" );
	deepEqual( Stem("terrenos"), "terren" );
	deepEqual( Stem("térreo"), "térr" );
	deepEqual( Stem("terrestre"), "terrestr" );
	deepEqual( Stem("terrestres"), "terrestr" );
	deepEqual( Stem("terrible"), "terribl" );
	deepEqual( Stem("terrinha"), "terrinh" );
	deepEqual( Stem("territoriais"), "territori" );
	deepEqual( Stem("territorial"), "territorial" );
	deepEqual( Stem("território"), "territóri" );
	deepEqual( Stem("territórios"), "territóri" );
	deepEqual( Stem("terríveis"), "terrív" );
	deepEqual( Stem("terrível"), "terrível" );
	deepEqual( Stem("terror"), "terror" );
	deepEqual( Stem("terrorismo"), "terror" );
	deepEqual( Stem("terrorista"), "terror" );
	deepEqual( Stem("terroristas"), "terror" );
	deepEqual( Stem("tesão"), "tesã" );
	deepEqual( Stem("tese"), "tes" );
	deepEqual( Stem("teses"), "tes" );
	deepEqual( Stem("teske"), "tesk" );
	deepEqual( Stem("tesoura"), "tesour" );
	deepEqual( Stem("tesouradas"), "tesour" );
	deepEqual( Stem("tesouraria"), "tesour" );
	deepEqual( Stem("tesoureiro"), "tesoureir" );
	deepEqual( Stem("tesouro"), "tesour" );
	deepEqual( Stem("tesouros"), "tesour" );
	deepEqual( Stem("tessituras"), "tessitur" );
	deepEqual( Stem("testa"), "test" );
	deepEqual( Stem("testada"), "test" );
	deepEqual( Stem("testadas"), "test" );
	deepEqual( Stem("testado"), "test" );
	deepEqual( Stem("testados"), "test" );
	deepEqual( Stem("testam"), "test" );
	deepEqual( Stem("testamento"), "testament" );
	deepEqual( Stem("testando"), "test" );
	deepEqual( Stem("testar"), "test" );
	deepEqual( Stem("testaram"), "test" );
	deepEqual( Stem("testarossa"), "testaross" );
	deepEqual( Stem("teste"), "test" );
	deepEqual( Stem("testei"), "test" );
	deepEqual( Stem("testemunha"), "testemunh" );
	deepEqual( Stem("testemunhada"), "testemunh" );
	deepEqual( Stem("testemunhado"), "testemunh" );
	deepEqual( Stem("testemunham"), "testemunh" );
	deepEqual( Stem("testemunhar"), "testemunh" );
	deepEqual( Stem("testemunhas"), "testemunh" );
	deepEqual( Stem("testemunho"), "testemunh" );
	deepEqual( Stem("testemunhos"), "testemunh" );
	deepEqual( Stem("testes"), "test" );
	deepEqual( Stem("testículos"), "testícul" );
	deepEqual( Stem("testosterona"), "testosteron" );
	deepEqual( Stem("testou"), "test" );
	deepEqual( Stem("teto"), "tet" );
	deepEqual( Stem("tetraplégica"), "tetraplég" );
	deepEqual( Stem("tetraplégico"), "tetraplég" );
	deepEqual( Stem("tetraplégicos"), "tetraplég" );
	deepEqual( Stem("tétrico"), "tétric" );
	deepEqual( Stem("teu"), "teu" );
	deepEqual( Stem("teve"), "tev" );
	deepEqual( Stem("tevê"), "tev" );
	deepEqual( Stem("tevês"), "tevês" );
	deepEqual( Stem("texas"), "tex" );
	deepEqual( Stem("têxteis"), "têxt" );
	deepEqual( Stem("têxtil"), "têxtil" );
	deepEqual( Stem("texto"), "text" );
	deepEqual( Stem("textos"), "text" );
	deepEqual( Stem("textualmente"), "textual" );
	deepEqual( Stem("textura"), "textur" );
	deepEqual( Stem("tgerstedt"), "tgerstedt" );
	deepEqual( Stem("thaís"), "thaís" );
	deepEqual( Stem("thales"), "thal" );
	deepEqual( Stem("thalita"), "thalit" );
	deepEqual( Stem("thamires"), "tham" );
	deepEqual( Stem("thatcher"), "thatch" );
	deepEqual( Stem("the"), "the" );
	deepEqual( Stem("theatre"), "theatr" );
	deepEqual( Stem("theatro"), "theatr" );
	deepEqual( Stem("thelma"), "thelm" );
	deepEqual( Stem("them"), "them" );
	deepEqual( Stem("there"), "ther" );
	deepEqual( Stem("thereza"), "therez" );
	deepEqual( Stem("thiago"), "thiag" );
	deepEqual( Stem("thomas"), "thom" );
	deepEqual( Stem("thomaz"), "thomaz" );
	deepEqual( Stem("thomazini"), "thomazin" );
	deepEqual( Stem("thomé"), "thom" );
	deepEqual( Stem("thomson"), "thomson" );
	deepEqual( Stem("thury"), "thury" );
	deepEqual( Stem("tia"), "tia" );
	deepEqual( Stem("tiago"), "tiag" );
	deepEqual( Stem("tião"), "tiã" );
	deepEqual( Stem("tias"), "tias" );
	deepEqual( Stem("tibetanas"), "tibetan" );
	deepEqual( Stem("tibetano"), "tibetan" );
	deepEqual( Stem("tibetanos"), "tibetan" );
	deepEqual( Stem("tibete"), "tibet" );
	deepEqual( Stem("tíbia"), "tíb" );
	deepEqual( Stem("tico"), "tic" );
	deepEqual( Stem("tida"), "tid" );
	deepEqual( Stem("tidas"), "tid" );
	deepEqual( Stem("tido"), "tid" );
	deepEqual( Stem("tidos"), "tid" );
	deepEqual( Stem("tie"), "tie" );
	deepEqual( Stem("tigre"), "tigr" );
	deepEqual( Stem("tigres"), "tigr" );
	deepEqual( Stem("tijolinhos"), "tijolinh" );
	deepEqual( Stem("tijolo"), "tijol" );
	deepEqual( Stem("tijolos"), "tijol" );
	deepEqual( Stem("tijuca"), "tijuc" );
	deepEqual( Stem("tijuco"), "tijuc" );
	deepEqual( Stem("tilápias"), "tiláp" );
	deepEqual( Stem("tilintam"), "tilint" );
	deepEqual( Stem("tilintar"), "tilint" );
	deepEqual( Stem("tim"), "tim" );
	deepEqual( Stem("timbre"), "timbr" );
	deepEqual( Stem("timbuctu"), "timbuctu" );
	deepEqual( Stem("time"), "tim" );
	deepEqual( Stem("timerman"), "timerman" );
	deepEqual( Stem("times"), "tim" );
	deepEqual( Stem("tímida"), "tím" );
	deepEqual( Stem("timidez"), "timidez" );
	deepEqual( Stem("tímido"), "tím" );
	deepEqual( Stem("tímidos"), "tím" );
	deepEqual( Stem("timoneiro"), "timoneir" );
	deepEqual( Stem("timothy"), "timothy" );
	deepEqual( Stem("ting"), "ting" );
	deepEqual( Stem("tinha"), "tinh" );
	deepEqual( Stem("tinham"), "tinh" );
	deepEqual( Stem("tínhamos"), "tính" );
	deepEqual( Stem("tinja"), "tinj" );
	deepEqual( Stem("tino"), "tin" );
	deepEqual( Stem("tinta"), "tint" );
	deepEqual( Stem("tintas"), "tint" );
	deepEqual( Stem("tinto"), "tint" );
	deepEqual( Stem("tintos"), "tint" );
	deepEqual( Stem("tintura"), "tintur" );
	deepEqual( Stem("tinturaria"), "tintur" );
	deepEqual( Stem("tinturas"), "tintur" );
	deepEqual( Stem("tio"), "tio" );
	deepEqual( Stem("tios"), "tios" );
	deepEqual( Stem("típica"), "típic" );
	deepEqual( Stem("tipicamente"), "tipic" );
	deepEqual( Stem("típicas"), "típic" );
	deepEqual( Stem("típico"), "típic" );
	deepEqual( Stem("típicos"), "típic" );
	deepEqual( Stem("tipo"), "tip" );
	deepEqual( Stem("tipos"), "tip" );
	deepEqual( Stem("tiques"), "tiqu" );
	deepEqual( Stem("tira"), "tir" );
	deepEqual( Stem("tirá"), "tir" );
	deepEqual( Stem("tiracolo"), "tiracol" );
	deepEqual( Stem("tirada"), "tir" );
	deepEqual( Stem("tiradas"), "tir" );
	deepEqual( Stem("tiradentes"), "tiradent" );
	deepEqual( Stem("tirado"), "tir" );
	deepEqual( Stem("tirados"), "tir" );
	deepEqual( Stem("tiragem"), "tirag" );
	deepEqual( Stem("tiragens"), "tiragens" );
	deepEqual( Stem("tiram"), "tir" );
	deepEqual( Stem("tiramos"), "tir" );
	deepEqual( Stem("tirando"), "tir" );
	deepEqual( Stem("tirânicas"), "tirân" );
	deepEqual( Stem("tiranossauro"), "tiranossaur" );
	deepEqual( Stem("tirar"), "tir" );
	deepEqual( Stem("tiraram"), "tir" );
	deepEqual( Stem("tiraria"), "tir" );
	deepEqual( Stem("tirariam"), "tir" );
	deepEqual( Stem("tirasse"), "tir" );
	deepEqual( Stem("tirava"), "tir" );
	deepEqual( Stem("tire"), "tir" );
	deepEqual( Stem("tirei"), "tir" );
	deepEqual( Stem("tirinhas"), "tirinh" );
	deepEqual( Stem("tirinhos"), "tirinh" );
	deepEqual( Stem("tiro"), "tir" );
	deepEqual( Stem("tirombaço"), "tirombac" );
	deepEqual( Stem("tiros"), "tir" );
	deepEqual( Stem("tiroteio"), "tirotei" );
	deepEqual( Stem("tirou"), "tir" );
	deepEqual( Stem("tito"), "tit" );
	deepEqual( Stem("titubear"), "titub" );
	deepEqual( Stem("titular"), "titul" );
	deepEqual( Stem("titulares"), "titul" );
	deepEqual( Stem("título"), "títul" );
	deepEqual( Stem("títulos"), "títul" );
	deepEqual( Stem("tive"), "tiv" );
	deepEqual( Stem("tivemos"), "tiv" );
	deepEqual( Stem("tiver"), "tiv" );
	deepEqual( Stem("tivera"), "tiv" );
	deepEqual( Stem("tiveram"), "tiv" );
	deepEqual( Stem("tiverem"), "tiv" );
	deepEqual( Stem("tivermos"), "tiv" );
	deepEqual( Stem("tivesse"), "tiv" );
	deepEqual( Stem("tivessem"), "tiv" );
	deepEqual( Stem("tivéssemos"), "tivéss" );
	deepEqual( Stem("tj"), "tj" );
	deepEqual( Stem("tjurs"), "tjurs" );
	deepEqual( Stem("tnt"), "tnt" );
	deepEqual( Stem("to"), "to" );
	deepEqual( Stem("tô"), "tô" );
	deepEqual( Stem("toa"), "toa" );
	deepEqual( Stem("toalha"), "toalh" );
	deepEqual( Stem("toalhas"), "toalh" );
	deepEqual( Stem("tobago"), "tobag" );
	deepEqual( Stem("toca"), "toc" );
	deepEqual( Stem("tocá"), "toc" );
	deepEqual( Stem("tocadas"), "toc" );
	deepEqual( Stem("tocado"), "toc" );
	deepEqual( Stem("tocados"), "toc" );
	deepEqual( Stem("tocaia"), "toca" );
	deepEqual( Stem("tocamos"), "toc" );
	deepEqual( Stem("tocando"), "toc" );
	deepEqual( Stem("tocantins"), "tocantins" );
	deepEqual( Stem("tocar"), "toc" );
	deepEqual( Stem("tocaria"), "toc" );
	deepEqual( Stem("tocasse"), "toc" );
	deepEqual( Stem("tocava"), "toc" );
	deepEqual( Stem("tocavam"), "toc" );
	deepEqual( Stem("tocou"), "toc" );
	deepEqual( Stem("toda"), "tod" );
	deepEqual( Stem("todas"), "tod" );
	deepEqual( Stem("todavia"), "todav" );
	deepEqual( Stem("today"), "today" );
	deepEqual( Stem("todo"), "tod" );
	deepEqual( Stem("todos"), "tod" );
	deepEqual( Stem("tofranil"), "tofranil" );
	deepEqual( Stem("toga"), "tog" );
	deepEqual( Stem("tognini"), "tognin" );
	deepEqual( Stem("togo"), "tog" );
	deepEqual( Stem("tóim"), "tóim" );
	deepEqual( Stem("tokyo"), "toky" );
	deepEqual( Stem("tolamente"), "tol" );
	deepEqual( Stem("toledo"), "toled" );
	deepEqual( Stem("tolera"), "tol" );
	deepEqual( Stem("tolerada"), "toler" );
	deepEqual( Stem("tolerância"), "toler" );
	deepEqual( Stem("tolerante"), "toler" );
	deepEqual( Stem("tolerar"), "toler" );
	deepEqual( Stem("toleráveis"), "toler" );
	deepEqual( Stem("tolice"), "tolic" );
	deepEqual( Stem("tolices"), "tolic" );
	deepEqual( Stem("tolo"), "tol" );
	deepEqual( Stem("tolos"), "tol" );
	deepEqual( Stem("tolstói"), "tolstó" );
	deepEqual( Stem("tom"), "tom" );
	deepEqual( Stem("toma"), "tom" );
	deepEqual( Stem("tomá"), "tom" );
	deepEqual( Stem("tomada"), "tom" );
	deepEqual( Stem("tomadas"), "tom" );
	deepEqual( Stem("tomado"), "tom" );
	deepEqual( Stem("tomador"), "tomador" );
	deepEqual( Stem("tomados"), "tom" );
	deepEqual( Stem("tomam"), "tom" );
	deepEqual( Stem("tomamos"), "tom" );
	deepEqual( Stem("tomando"), "tom" );
	deepEqual( Stem("tomar"), "tom" );
	deepEqual( Stem("tomara"), "tom" );
	deepEqual( Stem("tomaram"), "tom" );
	deepEqual( Stem("tomarão"), "tom" );
	deepEqual( Stem("tomaria"), "tom" );
	deepEqual( Stem("tomás"), "tomás" );
	deepEqual( Stem("tomaselli"), "tomasell" );
	deepEqual( Stem("tomasko"), "tomask" );
	deepEqual( Stem("tomaskos"), "tomask" );
	deepEqual( Stem("tomasse"), "tom" );
	deepEqual( Stem("tomate"), "tomat" );
	deepEqual( Stem("tomates"), "tomat" );
	deepEqual( Stem("tomava"), "tom" );
	deepEqual( Stem("tomavam"), "tom" );
	deepEqual( Stem("tomaz"), "tomaz" );
	deepEqual( Stem("tombadas"), "tomb" );
	deepEqual( Stem("tombado"), "tomb" );
	deepEqual( Stem("tombados"), "tomb" );
	deepEqual( Stem("tombamento"), "tombament" );
	deepEqual( Stem("tombaram"), "tomb" );
	deepEqual( Stem("tombarão"), "tomb" );
	deepEqual( Stem("tombo"), "tomb" );
	deepEqual( Stem("tombolato"), "tombolat" );
	deepEqual( Stem("tombou"), "tomb" );
	deepEqual( Stem("tome"), "tom" );
	deepEqual( Stem("tomé"), "tom" );
	deepEqual( Stem("tomei"), "tom" );
	deepEqual( Stem("tomilho"), "tomilh" );
	deepEqual( Stem("tommy"), "tommy" );
	deepEqual( Stem("tomo"), "tom" );
	deepEqual( Stem("tomografia"), "tomograf" );
	deepEqual( Stem("tomografias"), "tomograf" );
	deepEqual( Stem("tomográficas"), "tomográf" );
	deepEqual( Stem("tomou"), "tom" );
	deepEqual( Stem("tona"), "ton" );
	deepEqual( Stem("tonalidade"), "tonal" );
	deepEqual( Stem("tonéis"), "ton" );
	deepEqual( Stem("tonelada"), "tonel" );
	deepEqual( Stem("toneladas"), "tonel" );
	deepEqual( Stem("tonho"), "tonh" );
	deepEqual( Stem("tônia"), "tôn" );
	deepEqual( Stem("tônica"), "tônic" );
	deepEqual( Stem("toninho"), "toninh" );
	deepEqual( Stem("tonitruar"), "tonitru" );
	deepEqual( Stem("tons"), "tons" );
	deepEqual( Stem("tonteiras"), "tonteir" );
	deepEqual( Stem("tonto"), "tont" );
	deepEqual( Stem("tony"), "tony" );
	deepEqual( Stem("top"), "top" );
	deepEqual( Stem("topa"), "top" );
	deepEqual( Stem("topar"), "top" );
	deepEqual( Stem("toparam"), "top" );
	deepEqual( Stem("topava"), "top" );
	deepEqual( Stem("topázio"), "topázi" );
	deepEqual( Stem("topbooks"), "topbooks" );
	deepEqual( Stem("tope"), "top" );
	deepEqual( Stem("topei"), "top" );
	deepEqual( Stem("topete"), "topet" );
	deepEqual( Stem("topetuda"), "topetud" );
	deepEqual( Stem("tópicas"), "tópic" );
	deepEqual( Stem("tópico"), "tópic" );
	deepEqual( Stem("tópicos"), "tópic" );
	deepEqual( Stem("topo"), "top" );
	deepEqual( Stem("topou"), "top" );
	deepEqual( Stem("tops"), "tops" );
	deepEqual( Stem("toque"), "toqu" );
	deepEqual( Stem("toques"), "toqu" );
	deepEqual( Stem("tóquio"), "tóqui" );
	deepEqual( Stem("torá"), "tor" );
	deepEqual( Stem("toras"), "tor" );
	deepEqual( Stem("tórax"), "tórax" );
	deepEqual( Stem("torçam"), "torc" );
	deepEqual( Stem("torção"), "torçã" );
	deepEqual( Stem("torce"), "torc" );
	deepEqual( Stem("torcedor"), "torcedor" );
	deepEqual( Stem("torcedora"), "torcedor" );
	deepEqual( Stem("torcedores"), "torcedor" );
	deepEqual( Stem("torcem"), "torc" );
	deepEqual( Stem("torcer"), "torc" );
	deepEqual( Stem("torcida"), "torc" );
	deepEqual( Stem("torcidas"), "torc" );
	deepEqual( Stem("tormento"), "torment" );
	deepEqual( Stem("torna"), "torn" );
	deepEqual( Stem("torná"), "torn" );
	deepEqual( Stem("tornado"), "torn" );
	deepEqual( Stem("tornam"), "torn" );
	deepEqual( Stem("tornando"), "torn" );
	deepEqual( Stem("tornar"), "torn" );
	deepEqual( Stem("tornara"), "torn" );
	deepEqual( Stem("tornará"), "torn" );
	deepEqual( Stem("tornaram"), "torn" );
	deepEqual( Stem("tornarem"), "torn" );
	deepEqual( Stem("tornaria"), "torn" );
	deepEqual( Stem("tornasse"), "torn" );
	deepEqual( Stem("tornava"), "torn" );
	deepEqual( Stem("torne"), "torn" );
	deepEqual( Stem("torneado"), "torn" );
	deepEqual( Stem("tornear"), "torn" );
	deepEqual( Stem("tornei"), "torn" );
	deepEqual( Stem("torneio"), "tornei" );
	deepEqual( Stem("torneios"), "tornei" );
	deepEqual( Stem("torneira"), "torneir" );
	deepEqual( Stem("torneirinhas"), "torneirinh" );
	deepEqual( Stem("tornem"), "torn" );
	deepEqual( Stem("torno"), "torn" );
	deepEqual( Stem("tornou"), "torn" );
	deepEqual( Stem("tornozelo"), "tornozel" );
	deepEqual( Stem("torpedear"), "torped" );
	deepEqual( Stem("torpes"), "torp" );
	deepEqual( Stem("torra"), "torr" );
	deepEqual( Stem("torrados"), "torr" );
	deepEqual( Stem("torram"), "torr" );
	deepEqual( Stem("torrar"), "torr" );
	deepEqual( Stem("torrava"), "torr" );
	deepEqual( Stem("torre"), "torr" );
	deepEqual( Stem("torrefação"), "torref" );
	deepEqual( Stem("torrenciais"), "torrenc" );
	deepEqual( Stem("torres"), "torr" );
	deepEqual( Stem("tórrido"), "tórr" );
	deepEqual( Stem("torso"), "tors" );
	deepEqual( Stem("torta"), "tort" );
	deepEqual( Stem("torto"), "tort" );
	deepEqual( Stem("tortos"), "tort" );
	deepEqual( Stem("tortura"), "tortur" );
	deepEqual( Stem("torturador"), "tortur" );
	deepEqual( Stem("torturadores"), "tortur" );
	deepEqual( Stem("torturados"), "tortur" );
	deepEqual( Stem("torturar"), "tortur" );
	deepEqual( Stem("torturavam"), "tortur" );
	deepEqual( Stem("torturou"), "tortur" );
	deepEqual( Stem("tos"), "tos" );
	deepEqual( Stem("tosca"), "tosc" );
	deepEqual( Stem("toscana"), "toscan" );
	deepEqual( Stem("toscano"), "toscan" );
	deepEqual( Stem("toscas"), "tosc" );
	deepEqual( Stem("toscos"), "tosc" );
	deepEqual( Stem("toshiba"), "toshib" );
	deepEqual( Stem("tosse"), "toss" );
	deepEqual( Stem("tossindo"), "toss" );
	deepEqual( Stem("tostão"), "tostã" );
	deepEqual( Stem("totais"), "tot" );
	deepEqual( Stem("total"), "total" );
	deepEqual( Stem("totalitária"), "totalitár" );
	deepEqual( Stem("totalizando"), "totaliz" );
	deepEqual( Stem("totalmente"), "total" );
	deepEqual( Stem("totem"), "tot" );
	deepEqual( Stem("tottenham"), "tottenh" );
	deepEqual( Stem("touca"), "touc" );
	deepEqual( Stem("tour"), "tour" );
	deepEqual( Stem("tours"), "tours" );
	deepEqual( Stem("tourtois"), "tourto" );
	deepEqual( Stem("toviassú"), "toviassú" );
	deepEqual( Stem("towers"), "towers" );
	deepEqual( Stem("towner"), "town" );
	deepEqual( Stem("tóxicas"), "tóxic" );
	deepEqual( Stem("toxicidade"), "toxic" );
	deepEqual( Stem("toxicologia"), "toxicolog" );
	deepEqual( Stem("toxicologista"), "toxicolog" );
	deepEqual( Stem("tóxicos"), "tóxic" );
	deepEqual( Stem("toyota"), "toyot" );
	deepEqual( Stem("toys"), "toys" );
	deepEqual( Stem("trabaiá"), "trabai" );
	deepEqual( Stem("trabalha"), "trabalh" );
	deepEqual( Stem("trabalhadas"), "trabalh" );
	deepEqual( Stem("trabalhado"), "trabalh" );
	deepEqual( Stem("trabalhador"), "trabalh" );
	deepEqual( Stem("trabalhadora"), "trabalh" );
	deepEqual( Stem("trabalhadores"), "trabalh" );
	deepEqual( Stem("trabalhados"), "trabalh" );
	deepEqual( Stem("trabalham"), "trabalh" );
	deepEqual( Stem("trabalhamos"), "trabalh" );
	deepEqual( Stem("trabalhando"), "trabalh" );
	deepEqual( Stem("trabalhão"), "trabalhã" );
	deepEqual( Stem("trabalhar"), "trabalh" );
	deepEqual( Stem("trabalhara"), "trabalh" );
	deepEqual( Stem("trabalharam"), "trabalh" );
	deepEqual( Stem("trabalharem"), "trabalh" );
	deepEqual( Stem("trabalhassem"), "trabalh" );
	deepEqual( Stem("trabalhava"), "trabalh" );
	deepEqual( Stem("trabalhavam"), "trabalh" );
	deepEqual( Stem("trabalhe"), "trabalh" );
	deepEqual( Stem("trabalhei"), "trabalh" );
	deepEqual( Stem("trabalhem"), "trabalh" );
	deepEqual( Stem("trabalhista"), "trabalh" );
	deepEqual( Stem("trabalhistas"), "trabalh" );
	deepEqual( Stem("trabalho"), "trabalh" );
	deepEqual( Stem("trabalhos"), "trabalh" );
	deepEqual( Stem("trabalhou"), "trabalh" );
	deepEqual( Stem("traça"), "trac" );
	deepEqual( Stem("traçada"), "trac" );
	deepEqual( Stem("traçando"), "trac" );
	deepEqual( Stem("tração"), "traçã" );
	deepEqual( Stem("traçar"), "trac" );
	deepEqual( Stem("track"), "track" );
	deepEqual( Stem("traço"), "trac" );
	deepEqual( Stem("traços"), "trac" );
	deepEqual( Stem("traçou"), "trac" );
	deepEqual( Stem("trade"), "trad" );
	deepEqual( Stem("tradição"), "tradiçã" );
	deepEqual( Stem("tradicionais"), "tradicion" );
	deepEqual( Stem("tradicional"), "tradicional" );
	deepEqual( Stem("tradicionalmente"), "tradicional" );
	deepEqual( Stem("tradicionalmentese"), "tradicionalmentes" );
	deepEqual( Stem("tradições"), "tradiçõ" );
	deepEqual( Stem("tradist"), "tradist" );
	deepEqual( Stem("tradução"), "traduçã" );
	deepEqual( Stem("traduções"), "traduçõ" );
	deepEqual( Stem("tradutor"), "tradutor" );
	deepEqual( Stem("tradutora"), "tradutor" );
	deepEqual( Stem("traduz"), "traduz" );
	deepEqual( Stem("traduzem"), "traduz" );
	deepEqual( Stem("traduzidas"), "traduz" );
	deepEqual( Stem("traduzido"), "traduz" );
	deepEqual( Stem("traduzidos"), "traduz" );
	deepEqual( Stem("traduzindo"), "traduz" );
	deepEqual( Stem("traduzir"), "traduz" );
	deepEqual( Stem("traduziu"), "traduz" );
	deepEqual( Stem("traem"), "tra" );
	deepEqual( Stem("trafega"), "trafeg" );
	deepEqual( Stem("trafegam"), "trafeg" );
	deepEqual( Stem("trafegar"), "trafeg" );
	deepEqual( Stem("trafegava"), "trafeg" );
	deepEqual( Stem("tráfego"), "tráfeg" );
	deepEqual( Stem("traficante"), "trafic" );
	deepEqual( Stem("traficantes"), "trafic" );
	deepEqual( Stem("tráfico"), "tráfic" );
	deepEqual( Stem("trafiquei"), "trafiqu" );
	deepEqual( Stem("traga"), "trag" );
	deepEqual( Stem("tragadas"), "trag" );
	deepEqual( Stem("tragado"), "trag" );
	deepEqual( Stem("tragados"), "trag" );
	deepEqual( Stem("tragam"), "trag" );
	deepEqual( Stem("tragar"), "trag" );
	deepEqual( Stem("tragédia"), "tragéd" );
	deepEqual( Stem("tragédias"), "tragéd" );
	deepEqual( Stem("trágica"), "trágic" );
	deepEqual( Stem("tragicamente"), "tragic" );
	deepEqual( Stem("tragicidade"), "tragic" );
	deepEqual( Stem("trágico"), "trágic" );
	deepEqual( Stem("tragicômica"), "tragicôm" );
	deepEqual( Stem("trai"), "tra" );
	deepEqual( Stem("traí"), "tra" );
	deepEqual( Stem("traia"), "tra" );
	deepEqual( Stem("traía"), "traí" );
	deepEqual( Stem("traiam"), "tra" );
	deepEqual( Stem("traição"), "traiçã" );
	deepEqual( Stem("traído"), "traíd" );
	deepEqual( Stem("traidor"), "traidor" );
	deepEqual( Stem("train"), "train" );
	deepEqual( Stem("traindo"), "tra" );
	deepEqual( Stem("trainer"), "train" );
	deepEqual( Stem("trainner"), "trainn" );
	deepEqual( Stem("trair"), "tra" );
	deepEqual( Stem("traíra"), "traír" );
	deepEqual( Stem("traíram"), "traír" );
	deepEqual( Stem("trajada"), "traj" );
	deepEqual( Stem("trajado"), "traj" );
	deepEqual( Stem("trajando"), "traj" );
	deepEqual( Stem("traje"), "traj" );
	deepEqual( Stem("trajes"), "traj" );
	deepEqual( Stem("trajeto"), "trajet" );
	deepEqual( Stem("trajetória"), "trajetór" );
	deepEqual( Stem("trama"), "tram" );
	deepEqual( Stem("tramar"), "tram" );
	deepEqual( Stem("tramita"), "tramit" );
	deepEqual( Stem("tramitação"), "tramit" );
	deepEqual( Stem("tramitavam"), "tramit" );
	deepEqual( Stem("trâmite"), "trâmit" );
	deepEqual( Stem("tramitou"), "tramit" );
	deepEqual( Stem("tramóia"), "tramó" );
	deepEqual( Stem("tramou"), "tram" );
	deepEqual( Stem("trampolim"), "trampolim" );
	deepEqual( Stem("tranca"), "tranc" );
	deepEqual( Stem("trancada"), "tranc" );
	deepEqual( Stem("trancado"), "tranc" );
	deepEqual( Stem("trançado"), "tranc" );
	deepEqual( Stem("trancados"), "tranc" );
	deepEqual( Stem("trancafiados"), "trancafi" );
	deepEqual( Stem("trancar"), "tranc" );
	deepEqual( Stem("trancas"), "tranc" );
	deepEqual( Stem("trancinhas"), "trancinh" );
	deepEqual( Stem("tranco"), "tranc" );
	deepEqual( Stem("trancos"), "tranc" );
	deepEqual( Stem("trancou"), "tranc" );
	deepEqual( Stem("tranquila"), "tranquil" );
	deepEqual( Stem("tranqüila"), "tranqüil" );
	deepEqual( Stem("tranquilamente"), "tranquil" );
	deepEqual( Stem("tranqüilamente"), "tranqüil" );
	deepEqual( Stem("tranquilas"), "tranquil" );
	deepEqual( Stem("tranquilidade"), "tranquil" );
	deepEqual( Stem("tranqüilidade"), "tranqüil" );
	deepEqual( Stem("tranqüilizador"), "tranqüiliz" );
	deepEqual( Stem("tranquilizante"), "tranquiliz" );
	deepEqual( Stem("tranqüilizante"), "tranqüiliz" );
	deepEqual( Stem("tranquilizantes"), "tranquiliz" );
	deepEqual( Stem("tranquilizar"), "tranquiliz" );
	deepEqual( Stem("tranquilizaram"), "tranquiliz" );
	deepEqual( Stem("tranquilo"), "tranquil" );
	deepEqual( Stem("tranqüilo"), "tranqüil" );
	deepEqual( Stem("tranquilos"), "tranquil" );
	deepEqual( Stem("transa"), "trans" );
	deepEqual( Stem("transação"), "transaçã" );
	deepEqual( Stem("transações"), "transaçõ" );
	deepEqual( Stem("transado"), "trans" );
	deepEqual( Stem("transam"), "trans" );
	deepEqual( Stem("transamazônica"), "transamazôn" );
	deepEqual( Stem("transamos"), "trans" );
	deepEqual( Stem("transando"), "trans" );
	deepEqual( Stem("transar"), "trans" );
	deepEqual( Stem("transas"), "trans" );
	deepEqual( Stem("transasse"), "trans" );
	deepEqual( Stem("transatlântico"), "transatlânt" );
	deepEqual( Stem("transava"), "trans" );
	deepEqual( Stem("transavam"), "trans" );
	deepEqual( Stem("transborda"), "transbord" );
	deepEqual( Stem("transbordasse"), "transbord" );
	deepEqual( Stem("transbordou"), "transbord" );
	deepEqual( Stem("transbrasil"), "transbrasil" );
	deepEqual( Stem("transcorreram"), "transcorr" );
	deepEqual( Stem("transcreve"), "transcrev" );
	deepEqual( Stem("transe"), "trans" );
	deepEqual( Stem("transei"), "trans" );
	deepEqual( Stem("transeunte"), "transeunt" );
	deepEqual( Stem("transexual"), "transexual" );
	deepEqual( Stem("transexualismo"), "transexual" );
	deepEqual( Stem("transfere"), "transfer" );
	deepEqual( Stem("transferem"), "transf" );
	deepEqual( Stem("transferência"), "transferent" );
	deepEqual( Stem("transferida"), "transfer" );
	deepEqual( Stem("transferidas"), "transfer" );
	deepEqual( Stem("transferido"), "transfer" );
	deepEqual( Stem("transferidos"), "transfer" );
	deepEqual( Stem("transferindo"), "transfer" );
	deepEqual( Stem("transferir"), "transfer" );
	deepEqual( Stem("transferissem"), "transfer" );
	deepEqual( Stem("transferiu"), "transfer" );
	deepEqual( Stem("transforma"), "transform" );
	deepEqual( Stem("transformá"), "transform" );
	deepEqual( Stem("transformação"), "transform" );
	deepEqual( Stem("transformações"), "transform" );
	deepEqual( Stem("transformada"), "transform" );
	deepEqual( Stem("transformado"), "transform" );
	deepEqual( Stem("transformador"), "transform" );
	deepEqual( Stem("transformadora"), "transform" );
	deepEqual( Stem("transformados"), "transform" );
	deepEqual( Stem("transformam"), "transform" );
	deepEqual( Stem("transformando"), "transform" );
	deepEqual( Stem("transformar"), "transform" );
	deepEqual( Stem("transformaram"), "transform" );
	deepEqual( Stem("transformaria"), "transform" );
	deepEqual( Stem("transformasse"), "transform" );
	deepEqual( Stem("transformavam"), "transform" );
	deepEqual( Stem("transforme"), "transform" );
	deepEqual( Stem("transformou"), "transform" );
	deepEqual( Stem("transfusão"), "transfusã" );
	deepEqual( Stem("transgredir"), "transgred" );
	deepEqual( Stem("transgressão"), "transgressã" );
	deepEqual( Stem("transgressores"), "transgressor" );
	deepEqual( Stem("transgride"), "transgrid" );
	deepEqual( Stem("transição"), "transiçã" );
	deepEqual( Stem("transições"), "transiçõ" );
	deepEqual( Stem("transita"), "transit" );
	deepEqual( Stem("trânsito"), "trânsit" );
	deepEqual( Stem("transitória"), "transitór" );
	deepEqual( Stem("translados"), "transl" );
	deepEqual( Stem("translúcido"), "translúc" );
	deepEqual( Stem("transmissão"), "transmissã" );
	deepEqual( Stem("transmissíveis"), "transmissív" );
	deepEqual( Stem("transmissível"), "transmiss" );
	deepEqual( Stem("transmissões"), "transmissõ" );
	deepEqual( Stem("transmissores"), "transmissor" );
	deepEqual( Stem("transmite"), "transmit" );
	deepEqual( Stem("transmitida"), "transmit" );
	deepEqual( Stem("transmitidas"), "transmit" );
	deepEqual( Stem("transmitido"), "transmit" );
	deepEqual( Stem("transmitidos"), "transmit" );
	deepEqual( Stem("transmitir"), "transmit" );
	deepEqual( Stem("transmitirão"), "transmit" );
	deepEqual( Stem("transmutação"), "transmut" );
	deepEqual( Stem("transmutar"), "transmut" );
	deepEqual( Stem("transnacionais"), "transnacion" );
	deepEqual( Stem("transnacional"), "transnacional" );
	deepEqual( Stem("transnordestina"), "transnordestin" );
	deepEqual( Stem("transo"), "trans" );
	deepEqual( Stem("transou"), "trans" );
	deepEqual( Stem("transparece"), "transparec" );
	deepEqual( Stem("transparência"), "transparent" );
	deepEqual( Stem("transparente"), "transparent" );
	deepEqual( Stem("transparentes"), "transparent" );
	deepEqual( Stem("transpiração"), "transpir" );
	deepEqual( Stem("transpondo"), "transpond" );
	deepEqual( Stem("transporta"), "transport" );
	deepEqual( Stem("transportada"), "transport" );
	deepEqual( Stem("transportadora"), "transport" );
	deepEqual( Stem("transportadores"), "transport" );
	deepEqual( Stem("transportam"), "transport" );
	deepEqual( Stem("transportando"), "transport" );
	deepEqual( Stem("transportar"), "transport" );
	deepEqual( Stem("transportaram"), "transport" );
	deepEqual( Stem("transporte"), "transport" );
	deepEqual( Stem("transportes"), "transport" );
	deepEqual( Stem("transposta"), "transpost" );
	deepEqual( Stem("transtornado"), "transtorn" );
	deepEqual( Stem("transtorno"), "transtorn" );
	deepEqual( Stem("transtornos"), "transtorn" );
	deepEqual( Stem("trapalhada"), "trapalh" );
	deepEqual( Stem("trapalhadas"), "trapalh" );
	deepEqual( Stem("trapézio"), "trapézi" );
	deepEqual( Stem("traquejo"), "traquej" );
	deepEqual( Stem("traquinagem"), "traquinag" );
	deepEqual( Stem("trará"), "trar" );
	deepEqual( Stem("traria"), "trar" );
	deepEqual( Stem("trariam"), "trar" );
	deepEqual( Stem("trás"), "trás" );
	deepEqual( Stem("traseira"), "traseir" );
	deepEqual( Stem("traseiro"), "traseir" );
	deepEqual( Stem("traseiros"), "traseir" );
	deepEqual( Stem("traslado"), "trasl" );
	deepEqual( Stem("trata"), "trat" );
	deepEqual( Stem("tratá"), "trat" );
	deepEqual( Stem("tratada"), "trat" );
	deepEqual( Stem("tratadas"), "trat" );
	deepEqual( Stem("tratado"), "trat" );
	deepEqual( Stem("tratadores"), "tratador" );
	deepEqual( Stem("tratados"), "trat" );
	deepEqual( Stem("tratam"), "trat" );
	deepEqual( Stem("tratamento"), "tratament" );
	deepEqual( Stem("tratamentos"), "tratament" );
	deepEqual( Stem("tratamos"), "trat" );
	deepEqual( Stem("tratando"), "trat" );
	deepEqual( Stem("tratar"), "trat" );
	deepEqual( Stem("trataram"), "trat" );
	deepEqual( Stem("tratarmos"), "trat" );
	deepEqual( Stem("tratasse"), "trat" );
	deepEqual( Stem("tratava"), "trat" );
	deepEqual( Stem("tratavam"), "trat" );
	deepEqual( Stem("trate"), "trat" );
	deepEqual( Stem("tratei"), "trat" );
	deepEqual( Stem("tratem"), "trat" );
	deepEqual( Stem("trato"), "trat" );
	deepEqual( Stem("trator"), "trator" );
	deepEqual( Stem("tratores"), "trator" );
	deepEqual( Stem("tratou"), "trat" );
	deepEqual( Stem("trauma"), "traum" );
	deepEqual( Stem("traumann"), "traumann" );
	deepEqual( Stem("traumas"), "traum" );
	deepEqual( Stem("traumática"), "traumát" );
	deepEqual( Stem("traumático"), "traumát" );
	deepEqual( Stem("traumatismo"), "traumat" );
	deepEqual( Stem("traumatizado"), "traumatiz" );
	deepEqual( Stem("traumatizantes"), "traumatiz" );
	deepEqual( Stem("traumatizou"), "traumatiz" );
	deepEqual( Stem("trava"), "trav" );
	deepEqual( Stem("travada"), "trav" );
	deepEqual( Stem("travadas"), "trav" );
	deepEqual( Stem("travado"), "trav" );
	deepEqual( Stem("travam"), "trav" );
	deepEqual( Stem("travar"), "trav" );
	deepEqual( Stem("travas"), "trav" );
	deepEqual( Stem("trave"), "trav" );
	deepEqual( Stem("travei"), "trav" );
	deepEqual( Stem("travel"), "travel" );
	deepEqual( Stem("travessura"), "travessur" );
	deepEqual( Stem("travesti"), "travest" );
	deepEqual( Stem("travestis"), "travest" );
	deepEqual( Stem("travolta"), "travolt" );
	deepEqual( Stem("travou"), "trav" );
	deepEqual( Stem("traz"), "traz" );
	deepEqual( Stem("trazê"), "traz" );
	deepEqual( Stem("trazem"), "traz" );
	deepEqual( Stem("trazendo"), "traz" );
	deepEqual( Stem("trazer"), "traz" );
	deepEqual( Stem("trazia"), "traz" );
	deepEqual( Stem("traziam"), "traz" );
	deepEqual( Stem("trazida"), "traz" );
	deepEqual( Stem("trazidas"), "traz" );
	deepEqual( Stem("trazido"), "traz" );
	deepEqual( Stem("trazidos"), "traz" );
	deepEqual( Stem("tre"), "tre" );
	deepEqual( Stem("treatment"), "treatment" );
	deepEqual( Stem("trecho"), "trech" );
	deepEqual( Stem("trechos"), "trech" );
	deepEqual( Stem("trefil"), "trefil" );
	deepEqual( Stem("treina"), "trein" );
	deepEqual( Stem("treinada"), "trein" );
	deepEqual( Stem("treinadas"), "trein" );
	deepEqual( Stem("treinado"), "trein" );
	deepEqual( Stem("treinador"), "treinador" );
	deepEqual( Stem("treinadora"), "treinador" );
	deepEqual( Stem("treinadores"), "treinador" );
	deepEqual( Stem("treinados"), "trein" );
	deepEqual( Stem("treinamento"), "treinament" );
	deepEqual( Stem("treinamentos"), "treinament" );
	deepEqual( Stem("treinando"), "trein" );
	deepEqual( Stem("treinar"), "trein" );
	deepEqual( Stem("treinava"), "trein" );
	deepEqual( Stem("treino"), "trein" );
	deepEqual( Stem("treinos"), "trein" );
	deepEqual( Stem("trejeitos"), "trejeit" );
	deepEqual( Stem("trem"), "trem" );
	deepEqual( Stem("tremedeira"), "tremedeir" );
	deepEqual( Stem("tremeliques"), "tremeliqu" );
	deepEqual( Stem("tremem"), "trem" );
	deepEqual( Stem("tremenda"), "tremend" );
	deepEqual( Stem("tremendo"), "trem" );
	deepEqual( Stem("tremendos"), "tremend" );
	deepEqual( Stem("tremer"), "trem" );
	deepEqual( Stem("tremia"), "trem" );
	deepEqual( Stem("tremiam"), "trem" );
	deepEqual( Stem("tremor"), "tremor" );
	deepEqual( Stem("tremores"), "tremor" );
	deepEqual( Stem("tremularam"), "tremul" );
	deepEqual( Stem("trench"), "trench" );
	deepEqual( Stem("trends"), "trends" );
	deepEqual( Stem("trens"), "trens" );
	deepEqual( Stem("trepidante"), "trepid" );
	deepEqual( Stem("tréplica"), "tréplic" );
	deepEqual( Stem("três"), "três" );
	deepEqual( Stem("trésor"), "trésor" );
	deepEqual( Stem("trevisan"), "trevisan" );
	deepEqual( Stem("trez"), "trez" );
	deepEqual( Stem("treze"), "trez" );
	deepEqual( Stem("tri"), "tri" );
	deepEqual( Stem("triagem"), "triag" );
	deepEqual( Stem("triângulo"), "triângul" );
	deepEqual( Stem("triathlon"), "triathlon" );
	deepEqual( Stem("tribal"), "tribal" );
	deepEqual( Stem("tribo"), "trib" );
	deepEqual( Stem("tribos"), "trib" );
	deepEqual( Stem("tribuna"), "tribun" );
	deepEqual( Stem("tribunais"), "tribun" );
	deepEqual( Stem("tribunal"), "tribunal" );
	deepEqual( Stem("tributação"), "tribut" );
	deepEqual( Stem("tricampeã"), "tricampeã" );
	deepEqual( Stem("tridimensional"), "tridimensional" );
	deepEqual( Stem("triênios"), "triêni" );
	deepEqual( Stem("trigêmeos"), "trigêm" );
	deepEqual( Stem("trigo"), "trig" );
	deepEqual( Stem("trilha"), "trilh" );
	deepEqual( Stem("trilhá"), "trilh" );
	deepEqual( Stem("trilhado"), "trilh" );
	deepEqual( Stem("trilhados"), "trilh" );
	deepEqual( Stem("trilhando"), "trilh" );
	deepEqual( Stem("trilhão"), "trilhã" );
	deepEqual( Stem("trilhões"), "trilhõ" );
	deepEqual( Stem("trilionésimo"), "trilionésim" );
	deepEqual( Stem("trilogia"), "trilog" );
	deepEqual( Stem("trimestre"), "trimestr" );
	deepEqual( Stem("trinados"), "trin" );
	deepEqual( Stem("trincheiras"), "trincheir" );
	deepEqual( Stem("trindade"), "trindad" );
	deepEqual( Stem("trinidad"), "trinidad" );
	deepEqual( Stem("trinta"), "trint" );
	deepEqual( Stem("trio"), "tri" );
	deepEqual( Stem("tripanosoma"), "tripanosom" );
	deepEqual( Stem("tripla"), "tripl" );
	deepEqual( Stem("triplicados"), "triplic" );
	deepEqual( Stem("triplicar"), "triplic" );
	deepEqual( Stem("triplicou"), "triplic" );
	deepEqual( Stem("triplos"), "tripl" );
	deepEqual( Stem("tripoli"), "tripol" );
	deepEqual( Stem("tripudiam"), "tripud" );
	deepEqual( Stem("tripulação"), "tripul" );
	deepEqual( Stem("tripulações"), "tripul" );
	deepEqual( Stem("tripulada"), "tripul" );
	deepEqual( Stem("tripulante"), "tripul" );
	deepEqual( Stem("tripulantes"), "tripul" );
	deepEqual( Stem("tristão"), "tristã" );
	deepEqual( Stem("triste"), "trist" );
	deepEqual( Stem("tristemente"), "tristement" );
	deepEqual( Stem("tristes"), "trist" );
	deepEqual( Stem("tristeza"), "tristez" );
	deepEqual( Stem("tristezas"), "tristez" );
	deepEqual( Stem("tristíssimas"), "tristíssim" );
	deepEqual( Stem("triunfado"), "triunf" );
	deepEqual( Stem("triunfalismo"), "triunfal" );
	deepEqual( Stem("triunfante"), "triunfant" );
	deepEqual( Stem("triunfar"), "triunf" );
	deepEqual( Stem("triunfo"), "triunf" );
	deepEqual( Stem("triunfos"), "triunf" );
	deepEqual( Stem("troca"), "troc" );
	deepEqual( Stem("trocada"), "troc" );
	deepEqual( Stem("trocadas"), "troc" );
	deepEqual( Stem("trocado"), "troc" );
	deepEqual( Stem("trocados"), "troc" );
	deepEqual( Stem("trocam"), "troc" );
	deepEqual( Stem("trocamos"), "troc" );
	deepEqual( Stem("trocando"), "troc" );
	deepEqual( Stem("trocar"), "troc" );
	deepEqual( Stem("trocaram"), "troc" );
	deepEqual( Stem("trocaria"), "troc" );
	deepEqual( Stem("trocas"), "troc" );
	deepEqual( Stem("trocasse"), "troc" );
	deepEqual( Stem("trocava"), "troc" );
	deepEqual( Stem("trocavam"), "troc" );
	deepEqual( Stem("trocentos"), "trocent" );
	deepEqual( Stem("troco"), "troc" );
	deepEqual( Stem("troço"), "troc" );
	deepEqual( Stem("trocou"), "troc" );
	deepEqual( Stem("troféu"), "troféu" );
	deepEqual( Stem("troféus"), "troféus" );
	deepEqual( Stem("tróia"), "tró" );
	deepEqual( Stem("tróica"), "tróic" );
	deepEqual( Stem("trombada"), "tromb" );
	deepEqual( Stem("trombadinhas"), "trombadinh" );
	deepEqual( Stem("trombados"), "tromb" );
	deepEqual( Stem("trombeta"), "trombet" );
	deepEqual( Stem("trombeteia"), "trombet" );
	deepEqual( Stem("trombeteou"), "trombet" );
	deepEqual( Stem("trombina"), "trombin" );
	deepEqual( Stem("trombose"), "trombos" );
	deepEqual( Stem("trombou"), "tromb" );
	deepEqual( Stem("trompas"), "tromp" );
	deepEqual( Stem("trompetista"), "trompet" );
	deepEqual( Stem("troncos"), "tronc" );
	deepEqual( Stem("trono"), "tron" );
	deepEqual( Stem("tropa"), "trop" );
	deepEqual( Stem("tropas"), "trop" );
	deepEqual( Stem("tropeços"), "tropec" );
	deepEqual( Stem("tropeçou"), "tropec" );
	deepEqual( Stem("tropicais"), "tropic" );
	deepEqual( Stem("tropical"), "tropical" );
	deepEqual( Stem("tropicalismo"), "tropical" );
	deepEqual( Stem("tropicar"), "tropic" );
	deepEqual( Stem("trópicos"), "trópic" );
	deepEqual( Stem("troque"), "troqu" );
	deepEqual( Stem("troquei"), "troqu" );
	deepEqual( Stem("trotskistas"), "trotskist" );
	deepEqual( Stem("trouxe"), "troux" );
	deepEqual( Stem("trouxera"), "troux" );
	deepEqual( Stem("trouxeram"), "troux" );
	deepEqual( Stem("trouxesse"), "troux" );
	deepEqual( Stem("trovão"), "trovã" );
	deepEqual( Stem("truculenta"), "truculent" );
	deepEqual( Stem("truculento"), "truculent" );
	deepEqual( Stem("truculentos"), "truculent" );
	deepEqual( Stem("truncamentos"), "truncament" );
	deepEqual( Stem("trunfo"), "trunf" );
	deepEqual( Stem("trunfos"), "trunf" );
	deepEqual( Stem("trupe"), "trup" );
	deepEqual( Stem("truque"), "truqu" );
	deepEqual( Stem("truques"), "truqu" );
	deepEqual( Stem("trutas"), "trut" );
	deepEqual( Stem("try"), "try" );
	deepEqual( Stem("tsé"), "tsé" );
	deepEqual( Stem("tserete"), "tseret" );
	deepEqual( Stem("tsibliiev"), "tsibliiev" );
	deepEqual( Stem("tst"), "tst" );
	deepEqual( Stem("tu"), "tu" );
	deepEqual( Stem("tua"), "tua" );
	deepEqual( Stem("tuba"), "tub" );
	deepEqual( Stem("tubarão"), "tub" );
	deepEqual( Stem("tubarões"), "tubarõ" );
	deepEqual( Stem("tuberculose"), "tuberculos" );
	deepEqual( Stem("tubo"), "tub" );
	deepEqual( Stem("tubos"), "tub" );
	deepEqual( Stem("tuca"), "tuc" );
	deepEqual( Stem("tucana"), "tucan" );
	deepEqual( Stem("tucanato"), "tucanat" );
	deepEqual( Stem("tucano"), "tucan" );
	deepEqual( Stem("tucanos"), "tucan" );
	deepEqual( Stem("tucows"), "tucows" );
	deepEqual( Stem("tudo"), "tud" );
	deepEqual( Stem("tufi"), "tuf" );
	deepEqual( Stem("túlio"), "túli" );
	deepEqual( Stem("tulli"), "tull" );
	deepEqual( Stem("tullio"), "tulli" );
	deepEqual( Stem("tuma"), "tum" );
	deepEqual( Stem("tumavam"), "tum" );
	deepEqual( Stem("tumba"), "tumb" );
	deepEqual( Stem("tumor"), "tumor" );
	deepEqual( Stem("tumores"), "tumor" );
	deepEqual( Stem("túmulo"), "túmul" );
	deepEqual( Stem("tumultuada"), "tumultu" );
	deepEqual( Stem("tumultuado"), "tumultu" );
	deepEqual( Stem("tumultuar"), "tumultu" );
	deepEqual( Stem("túneis"), "tún" );
	deepEqual( Stem("túnel"), "túnel" );
	deepEqual( Stem("tung"), "tung" );
	deepEqual( Stem("tunga"), "tung" );
	deepEqual( Stem("tungando"), "tung" );
	deepEqual( Stem("tunisianos"), "tunisian" );
	deepEqual( Stem("tupi"), "tup" );
	deepEqual( Stem("tupinambá"), "tupinamb" );
	deepEqual( Stem("tupiniquim"), "tupiniquim" );
	deepEqual( Stem("tupiniquins"), "tupiniquins" );
	deepEqual( Stem("turandot"), "turandot" );
	deepEqual( Stem("turano"), "turan" );
	deepEqual( Stem("turbantes"), "turbant" );
	deepEqual( Stem("turbilhão"), "turbilhã" );
	deepEqual( Stem("turbina"), "turbin" );
	deepEqual( Stem("turbinar"), "turbin" );
	deepEqual( Stem("turboélice"), "turboélic" );
	deepEqual( Stem("turboélices"), "turboélic" );
	deepEqual( Stem("turbulência"), "turbulent" );
	deepEqual( Stem("turbulências"), "turbulent" );
	deepEqual( Stem("turbulento"), "turbulent" );
	deepEqual( Stem("turca"), "turc" );
	deepEqual( Stem("turco"), "turc" );
	deepEqual( Stem("turcos"), "turc" );
	deepEqual( Stem("turfe"), "turf" );
	deepEqual( Stem("turibio"), "turibi" );
	deepEqual( Stem("turismo"), "turism" );
	deepEqual( Stem("turista"), "turist" );
	deepEqual( Stem("turistas"), "turist" );
	deepEqual( Stem("turística"), "turíst" );
	deepEqual( Stem("turísticas"), "turíst" );
	deepEqual( Stem("turístico"), "turíst" );
	deepEqual( Stem("turísticos"), "turíst" );
	deepEqual( Stem("turma"), "turm" );
	deepEqual( Stem("turmas"), "turm" );
	deepEqual( Stem("turminha"), "turminh" );
	deepEqual( Stem("turnê"), "turn" );
	deepEqual( Stem("turner"), "turn" );
	deepEqual( Stem("turno"), "turn" );
	deepEqual( Stem("turnos"), "turn" );
	deepEqual( Stem("turquesa"), "turques" );
	deepEqual( Stem("turquia"), "turqu" );
	deepEqual( Stem("turvo"), "turv" );
	deepEqual( Stem("tutela"), "tutel" );
	deepEqual( Stem("tutti"), "tutt" );
	deepEqual( Stem("tv"), "tv" );
	deepEqual( Stem("tva"), "tva" );
	deepEqual( Stem("twa"), "twa" );
	deepEqual( Stem("tyron"), "tyron" );
	deepEqual( Stem("tyson"), "tyson" );
	deepEqual( Stem("u"), "u" );
	deepEqual( Stem("uau"), "uau" );
	deepEqual( Stem("ub"), "ub" );
	deepEqual( Stem("ubaldo"), "ubald" );
	deepEqual( Stem("uberaba"), "uberab" );
	deepEqual( Stem("uberlândia"), "uberlând" );
	deepEqual( Stem("ubirajara"), "ubiraj" );
	deepEqual( Stem("uchoa"), "ucho" );
	deepEqual( Stem("ucla"), "ucla" );
	deepEqual( Stem("ud"), "ud" );
	deepEqual( Stem("ude"), "ude" );
	deepEqual( Stem("ué"), "ué" );
	deepEqual( Stem("uerj"), "uerj" );
	deepEqual( Stem("ufmg"), "ufmg" );
	deepEqual( Stem("ufo"), "ufo" );
	deepEqual( Stem("ufologia"), "ufolog" );
	deepEqual( Stem("ufológica"), "ufológ" );
	deepEqual( Stem("ufológico"), "ufológ" );
	deepEqual( Stem("ufólogo"), "ufólog" );
	deepEqual( Stem("ufólogos"), "ufólog" );
	deepEqual( Stem("ufos"), "ufos" );
	deepEqual( Stem("ufpe"), "ufpe" );
	deepEqual( Stem("ufrj"), "ufrj" );
	deepEqual( Stem("uh"), "uh" );
	deepEqual( Stem("uhf"), "uhf" );
	deepEqual( Stem("uísque"), "uísqu" );
	deepEqual( Stem("uisquinho"), "uisquinh" );
	deepEqual( Stem("uivar"), "uiv" );
	deepEqual( Stem("uivo"), "uiv" );
	deepEqual( Stem("ulan"), "ulan" );
	deepEqual( Stem("úlcera"), "úlcer" );
	deepEqual( Stem("úlceras"), "úlcer" );
	deepEqual( Stem("ulisses"), "uliss" );
	deepEqual( Stem("ulrich"), "ulrich" );
	deepEqual( Stem("ultima"), "ultim" );
	deepEqual( Stem("última"), "últim" );
	deepEqual( Stem("ultimamente"), "ultim" );
	deepEqual( Stem("últimas"), "últim" );
	deepEqual( Stem("último"), "últim" );
	deepEqual( Stem("últimos"), "últim" );
	deepEqual( Stem("ultra"), "ultra" );
	deepEqual( Stem("ultradiet"), "ultradiet" );
	deepEqual( Stem("ultraje"), "ultraj" );
	deepEqual( Stem("ultralar"), "ultral" );
	deepEqual( Stem("ultramodernos"), "ultramodern" );
	deepEqual( Stem("ultrapassa"), "ultrapass" );
	deepEqual( Stem("ultrapassadíssima"), "ultrapassadíssim" );
	deepEqual( Stem("ultrapassado"), "ultrapass" );
	deepEqual( Stem("ultrapassagem"), "ultrapassag" );
	deepEqual( Stem("ultrapassar"), "ultrapass" );
	deepEqual( Stem("ultrapassara"), "ultrapass" );
	deepEqual( Stem("ultrapassará"), "ultrapass" );
	deepEqual( Stem("ultrapassaram"), "ultrapass" );
	deepEqual( Stem("ultrapassava"), "ultrapass" );
	deepEqual( Stem("ultrapassavam"), "ultrapass" );
	deepEqual( Stem("ultrapassou"), "ultrapass" );
	deepEqual( Stem("ultratradicionalista"), "ultratradicional" );
	deepEqual( Stem("ulysses"), "ulysses" );
	deepEqual( Stem("um"), "um" );
	deepEqual( Stem("uma"), "uma" );
	deepEqual( Stem("umas"), "umas" );
	deepEqual( Stem("umbanda"), "umband" );
	deepEqual( Stem("umbandista"), "umband" );
	deepEqual( Stem("umbundo"), "umbund" );
	deepEqual( Stem("úmero"), "úmer" );
	deepEqual( Stem("umidade"), "umidad" );
	deepEqual( Stem("úmidas"), "úmid" );
	deepEqual( Stem("umidificada"), "umidific" );
	deepEqual( Stem("unaí"), "una" );
	deepEqual( Stem("unânime"), "unânim" );
	deepEqual( Stem("unânimes"), "unânim" );
	deepEqual( Stem("unanimidade"), "unanim" );
	deepEqual( Stem("une"), "une" );
	deepEqual( Stem("unem"), "unem" );
	deepEqual( Stem("unesco"), "unesc" );
	deepEqual( Stem("unesp"), "unesp" );
	deepEqual( Stem("unfucked"), "unfucked" );
	deepEqual( Stem("ungido"), "ungid" );
	deepEqual( Stem("ungidos"), "ungid" );
	deepEqual( Stem("unha"), "unha" );
	deepEqual( Stem("unhas"), "unhas" );
	deepEqual( Stem("unhazinha"), "unhazinh" );
	deepEqual( Stem("uni"), "uni" );
	deepEqual( Stem("uniações"), "uniaçõ" );
	deepEqual( Stem("uniad"), "uniad" );
	deepEqual( Stem("união"), "uniã" );
	deepEqual( Stem("unibanco"), "unibanc" );
	deepEqual( Stem("única"), "únic" );
	deepEqual( Stem("unicamp"), "unicamp" );
	deepEqual( Stem("únicas"), "únic" );
	deepEqual( Stem("unicef"), "unicef" );
	deepEqual( Stem("único"), "únic" );
	deepEqual( Stem("únicos"), "únic" );
	deepEqual( Stem("unida"), "unid" );
	deepEqual( Stem("unidade"), "unidad" );
	deepEqual( Stem("unidades"), "unidad" );
	deepEqual( Stem("unidas"), "unid" );
	deepEqual( Stem("unido"), "unid" );
	deepEqual( Stem("unidos"), "unid" );
	deepEqual( Stem("unificação"), "unific" );
	deepEqual( Stem("unificada"), "unific" );
	deepEqual( Stem("unificar"), "unific" );
	deepEqual( Stem("unificou"), "unific" );
	deepEqual( Stem("uniforme"), "uniform" );
	deepEqual( Stem("uniformemente"), "uniform" );
	deepEqual( Stem("unilaterais"), "unilater" );
	deepEqual( Stem("unilateral"), "unilateral" );
	deepEqual( Stem("unimes"), "unim" );
	deepEqual( Stem("unindo"), "unind" );
	deepEqual( Stem("union"), "union" );
	deepEqual( Stem("unir"), "unir" );
	deepEqual( Stem("uniram"), "unir" );
	deepEqual( Stem("unisc"), "unisc" );
	deepEqual( Stem("unita"), "unit" );
	deepEqual( Stem("united"), "united" );
	deepEqual( Stem("universal"), "universal" );
	deepEqual( Stem("universidade"), "univers" );
	deepEqual( Stem("universidades"), "univers" );
	deepEqual( Stem("universitária"), "universitár" );
	deepEqual( Stem("universitárias"), "universitár" );
	deepEqual( Stem("universitário"), "universitári" );
	deepEqual( Stem("universitários"), "universitári" );
	deepEqual( Stem("université"), "universit" );
	deepEqual( Stem("university"), "university" );
	deepEqual( Stem("universo"), "univers" );
	deepEqual( Stem("unix"), "unix" );
	deepEqual( Stem("uno"), "uno" );
	deepEqual( Stem("uns"), "uns" );
	deepEqual( Stem("unwerth"), "unwerth" );
	deepEqual( Stem("uol"), "uol" );
	deepEqual( Stem("up"), "up" );
	deepEqual( Stem("upenn"), "upenn" );
	deepEqual( Stem("upgrade"), "upgrad" );
	deepEqual( Stem("upper"), "upper" );
	deepEqual( Stem("ups"), "ups" );
	deepEqual( Stem("urandir"), "urand" );
	deepEqual( Stem("urânio"), "urâni" );
	deepEqual( Stem("urbana"), "urban" );
	deepEqual( Stem("urbanas"), "urban" );
	deepEqual( Stem("urbanismo"), "urban" );
	deepEqual( Stem("urbanisno"), "urbanisn" );
	deepEqual( Stem("urbanista"), "urban" );
	deepEqual( Stem("urbanização"), "urbaniz" );
	deepEqual( Stem("urbanizados"), "urbaniz" );
	deepEqual( Stem("urbanos"), "urban" );
	deepEqual( Stem("uretra"), "uretr" );
	deepEqual( Stem("urgência"), "urgênc" );
	deepEqual( Stem("urgente"), "urgent" );
	deepEqual( Stem("urgentemente"), "urgent" );
	deepEqual( Stem("urgentes"), "urgent" );
	deepEqual( Stem("uri"), "uri" );
	deepEqual( Stem("úrico"), "úric" );
	deepEqual( Stem("urina"), "urin" );
	deepEqual( Stem("urinar"), "urin" );
	deepEqual( Stem("urinária"), "urinár" );
	deepEqual( Stem("urinário"), "urinári" );
	deepEqual( Stem("urinoterapia"), "urinoterap" );
	deepEqual( Stem("urna"), "urna" );
	deepEqual( Stem("urnas"), "urnas" );
	deepEqual( Stem("urologia"), "urolog" );
	deepEqual( Stem("urológica"), "urológ" );
	deepEqual( Stem("urologista"), "urolog" );
	deepEqual( Stem("urologistas"), "urolog" );
	deepEqual( Stem("urrava"), "urrav" );
	deepEqual( Stem("ursinho"), "ursinh" );
	deepEqual( Stem("urso"), "urso" );
	deepEqual( Stem("urss"), "urss" );
	deepEqual( Stem("urubus"), "urubus" );
	deepEqual( Stem("urubuzada"), "urubuz" );
	deepEqual( Stem("urucânia"), "urucân" );
	deepEqual( Stem("uruguai"), "urugua" );
	deepEqual( Stem("uruguaiana"), "uruguaian" );
	deepEqual( Stem("urutus"), "urutus" );
	deepEqual( Stem("us"), "us" );
	deepEqual( Stem("usa"), "usa" );
	deepEqual( Stem("usá"), "usá" );
	deepEqual( Stem("usada"), "usad" );
	deepEqual( Stem("usadas"), "usad" );
	deepEqual( Stem("usado"), "usad" );
	deepEqual( Stem("usados"), "usad" );
	deepEqual( Stem("usam"), "usam" );
	deepEqual( Stem("usamos"), "usam" );
	deepEqual( Stem("usando"), "usand" );
	deepEqual( Stem("usar"), "usar" );
	deepEqual( Stem("usaram"), "usar" );
	deepEqual( Stem("usarei"), "usar" );
	deepEqual( Stem("usarem"), "usar" );
	deepEqual( Stem("usarmos"), "usarm" );
	deepEqual( Stem("usava"), "usav" );
	deepEqual( Stem("usavam"), "usav" );
	deepEqual( Stem("usávamos"), "usáv" );
	deepEqual( Stem("usável"), "usável" );
	deepEqual( Stem("use"), "use" );
	deepEqual( Stem("usei"), "use" );
	deepEqual( Stem("usiminas"), "usimin" );
	deepEqual( Stem("usina"), "usin" );
	deepEqual( Stem("usinas"), "usin" );
	deepEqual( Stem("usineiros"), "usineir" );
	deepEqual( Stem("uso"), "uso" );
	deepEqual( Stem("usos"), "usos" );
	deepEqual( Stem("usou"), "usou" );
	deepEqual( Stem("usp"), "usp" );
	deepEqual( Stem("usual"), "usual" );
	deepEqual( Stem("usuário"), "usuári" );
	deepEqual( Stem("usuários"), "usuári" );
	deepEqual( Stem("usufrui"), "usufru" );
	deepEqual( Stem("usufruir"), "usufru" );
	deepEqual( Stem("úteis"), "úte" );
	deepEqual( Stem("utensílios"), "utensíli" );
	deepEqual( Stem("uterino"), "uterin" );
	deepEqual( Stem("uterinos"), "uterin" );
	deepEqual( Stem("útero"), "úter" );
	deepEqual( Stem("uti"), "uti" );
	deepEqual( Stem("util"), "util" );
	deepEqual( Stem("útil"), "útil" );
	deepEqual( Stem("utilidade"), "util" );
	deepEqual( Stem("utilidades"), "util" );
	deepEqual( Stem("utilíssimos"), "utilíss" );
	deepEqual( Stem("utilitário"), "utilitári" );
	deepEqual( Stem("utilitários"), "utilitári" );
	deepEqual( Stem("utiliza"), "utiliz" );
	deepEqual( Stem("utilizá"), "utiliz" );
	deepEqual( Stem("utilização"), "utiliz" );
	deepEqual( Stem("utilizada"), "utiliz" );
	deepEqual( Stem("utilizadas"), "utiliz" );
	deepEqual( Stem("utilizado"), "utiliz" );
	deepEqual( Stem("utilizados"), "utiliz" );
	deepEqual( Stem("utilizam"), "utiliz" );
	deepEqual( Stem("utilizando"), "utiliz" );
	deepEqual( Stem("utilizar"), "utiliz" );
	deepEqual( Stem("utilizaram"), "utiliz" );
	deepEqual( Stem("utilizarão"), "utiliz" );
	deepEqual( Stem("utilize"), "utiliz" );
	deepEqual( Stem("utilizem"), "utiliz" );
	deepEqual( Stem("utilizou"), "utiliz" );
	deepEqual( Stem("utinati"), "utinat" );
	deepEqual( Stem("utópicas"), "utóp" );
	deepEqual( Stem("utópico"), "utóp" );
	deepEqual( Stem("utopistas"), "utop" );
	deepEqual( Stem("uvas"), "uvas" );
	deepEqual( Stem("uvibra"), "uvibr" );
	deepEqual( Stem("uzi"), "uzi" );
	deepEqual( Stem("v"), "v" );
	deepEqual( Stem("vá"), "vá" );
	deepEqual( Stem("vaca"), "vac" );
	deepEqual( Stem("vacas"), "vac" );
	deepEqual( Stem("vacilou"), "vacil" );
	deepEqual( Stem("vacina"), "vacin" );
	deepEqual( Stem("vacinação"), "vacin" );
	deepEqual( Stem("vacinada"), "vacin" );
	deepEqual( Stem("vacinas"), "vacin" );
	deepEqual( Stem("vácuo"), "vácu" );
	deepEqual( Stem("vadia"), "vad" );
	deepEqual( Stem("vaga"), "vag" );
	deepEqual( Stem("vagabal"), "vagabal" );
	deepEqual( Stem("vagabundo"), "vagabund" );
	deepEqual( Stem("vagam"), "vag" );
	deepEqual( Stem("vagamente"), "vag" );
	deepEqual( Stem("vagão"), "vagã" );
	deepEqual( Stem("vagar"), "vag" );
	deepEqual( Stem("vagarosa"), "vagar" );
	deepEqual( Stem("vagas"), "vag" );
	deepEqual( Stem("vagina"), "vagin" );
	deepEqual( Stem("vaginais"), "vagin" );
	deepEqual( Stem("vaginal"), "vaginal" );
	deepEqual( Stem("vagner"), "vagn" );
	deepEqual( Stem("vago"), "vag" );
	deepEqual( Stem("vagões"), "vagõ" );
	deepEqual( Stem("vagos"), "vag" );
	deepEqual( Stem("vai"), "vai" );
	deepEqual( Stem("vaidade"), "vaidad" );
	deepEqual( Stem("vaidosa"), "vaidos" );
	deepEqual( Stem("vaidosas"), "vaidos" );
	deepEqual( Stem("vaidoso"), "vaidos" );
	deepEqual( Stem("vaidosos"), "vaidos" );
	deepEqual( Stem("vainfas"), "vainf" );
	deepEqual( Stem("vaitsman"), "vaitsman" );
	deepEqual( Stem("vaivém"), "vaivém" );
	deepEqual( Stem("vala"), "val" );
	deepEqual( Stem("valadares"), "valad" );
	deepEqual( Stem("valas"), "val" );
	deepEqual( Stem("valcilene"), "valcilen" );
	deepEqual( Stem("valdeci"), "valdec" );
	deepEqual( Stem("valdemar"), "valdem" );
	deepEqual( Stem("valdenir"), "valden" );
	deepEqual( Stem("valderez"), "valderez" );
	deepEqual( Stem("valdir"), "vald" );
	deepEqual( Stem("vale"), "val" );
	deepEqual( Stem("valecom"), "valecom" );
	deepEqual( Stem("valecon"), "valecon" );
	deepEqual( Stem("valeika"), "valeik" );
	deepEqual( Stem("valem"), "val" );
	deepEqual( Stem("valença"), "valenc" );
	deepEqual( Stem("valendo"), "val" );
	deepEqual( Stem("valenssa"), "valenss" );
	deepEqual( Stem("valente"), "valent" );
	deepEqual( Stem("valentia"), "valent" );
	deepEqual( Stem("valentim"), "valentim" );
	deepEqual( Stem("valentino"), "valentin" );
	deepEqual( Stem("valenty"), "valenty" );
	deepEqual( Stem("valer"), "val" );
	deepEqual( Stem("valera"), "val" );
	deepEqual( Stem("valeram"), "val" );
	deepEqual( Stem("valeria"), "val" );
	deepEqual( Stem("valéria"), "valér" );
	deepEqual( Stem("valeriam"), "val" );
	deepEqual( Stem("valery"), "valery" );
	deepEqual( Stem("vales"), "val" );
	deepEqual( Stem("valessem"), "val" );
	deepEqual( Stem("valeu"), "val" );
	deepEqual( Stem("valgone"), "valgon" );
	deepEqual( Stem("valha"), "valh" );
	deepEqual( Stem("valho"), "valh" );
	deepEqual( Stem("valia"), "val" );
	deepEqual( Stem("valiam"), "val" );
	deepEqual( Stem("válida"), "vál" );
	deepEqual( Stem("validade"), "validad" );
	deepEqual( Stem("validados"), "valid" );
	deepEqual( Stem("válidas"), "vál" );
	deepEqual( Stem("valido"), "val" );
	deepEqual( Stem("válido"), "vál" );
	deepEqual( Stem("válidos"), "vál" );
	deepEqual( Stem("valinhos"), "valinh" );
	deepEqual( Stem("valiosa"), "valios" );
	deepEqual( Stem("valiosas"), "valios" );
	deepEqual( Stem("valiosíssimas"), "valiosíssim" );
	deepEqual( Stem("valise"), "valis" );
	deepEqual( Stem("valium"), "valium" );
	deepEqual( Stem("valladares"), "vallad" );
	deepEqual( Stem("valle"), "vall" );
	deepEqual( Stem("vallegrande"), "vallegrand" );
	deepEqual( Stem("vallegrandinos"), "vallegrandin" );
	deepEqual( Stem("valor"), "valor" );
	deepEqual( Stem("valores"), "valor" );
	deepEqual( Stem("valoriza"), "valoriz" );
	deepEqual( Stem("valorização"), "valoriz" );
	deepEqual( Stem("valorizada"), "valoriz" );
	deepEqual( Stem("valorizadas"), "valoriz" );
	deepEqual( Stem("valorizado"), "valoriz" );
	deepEqual( Stem("valorizados"), "valoriz" );
	deepEqual( Stem("valorizam"), "valoriz" );
	deepEqual( Stem("valorizando"), "valoriz" );
	deepEqual( Stem("valorizar"), "valoriz" );
	deepEqual( Stem("valorize"), "valoriz" );
	deepEqual( Stem("valorizou"), "valoriz" );
	deepEqual( Stem("valquíria"), "valquír" );
	deepEqual( Stem("valsa"), "vals" );
	deepEqual( Stem("valter"), "valt" );
	deepEqual( Stem("valujet"), "valujet" );
	deepEqual( Stem("válvula"), "válvul" );
	deepEqual( Stem("válvulas"), "válvul" );
	deepEqual( Stem("vamos"), "vam" );
	deepEqual( Stem("vancouver"), "vancouv" );
	deepEqual( Stem("vandalismo"), "vandal" );
	deepEqual( Stem("vanderbild"), "vanderbild" );
	deepEqual( Stem("vanderbilt"), "vanderbilt" );
	deepEqual( Stem("vandergleison"), "vandergleison" );
	deepEqual( Stem("vanessa"), "vaness" );
	deepEqual( Stem("vange"), "vang" );
	deepEqual( Stem("vangloriar"), "vanglori" );
	deepEqual( Stem("vanguarda"), "vanguard" );
	deepEqual( Stem("vanguardas"), "vanguard" );
	deepEqual( Stem("vânia"), "vân" );
	deepEqual( Stem("vanilda"), "vanild" );
	deepEqual( Stem("vanin"), "vanin" );
	deepEqual( Stem("vantagem"), "vantag" );
	deepEqual( Stem("vantagens"), "vantagens" );
	deepEqual( Stem("vantajosa"), "vantaj" );
	deepEqual( Stem("vantajosamente"), "vantaj" );
	deepEqual( Stem("vantajoso"), "vantaj" );
	deepEqual( Stem("vão"), "vã" );
	deepEqual( Stem("vapor"), "vapor" );
	deepEqual( Stem("vaqueiro"), "vaqueir" );
	deepEqual( Stem("vara"), "var" );
	deepEqual( Stem("varanda"), "varand" );
	deepEqual( Stem("varas"), "var" );
	deepEqual( Stem("varavam"), "var" );
	deepEqual( Stem("varejo"), "varej" );
	deepEqual( Stem("varela"), "varel" );
	deepEqual( Stem("varella"), "varell" );
	deepEqual( Stem("varetas"), "varet" );
	deepEqual( Stem("vargas"), "varg" );
	deepEqual( Stem("varginha"), "varginh" );
	deepEqual( Stem("varia"), "var" );
	deepEqual( Stem("variação"), "variaçã" );
	deepEqual( Stem("variações"), "variaçõ" );
	deepEqual( Stem("variada"), "vari" );
	deepEqual( Stem("variadas"), "vari" );
	deepEqual( Stem("variadíssimos"), "variadíss" );
	deepEqual( Stem("variado"), "vari" );
	deepEqual( Stem("variados"), "vari" );
	deepEqual( Stem("variam"), "var" );
	deepEqual( Stem("variando"), "vari" );
	deepEqual( Stem("variant"), "variant" );
	deepEqual( Stem("variantes"), "variant" );
	deepEqual( Stem("variar"), "vari" );
	deepEqual( Stem("várias"), "vár" );
	deepEqual( Stem("variavam"), "vari" );
	deepEqual( Stem("variáveis"), "vari" );
	deepEqual( Stem("variável"), "variável" );
	deepEqual( Stem("variedade"), "variedad" );
	deepEqual( Stem("variedades"), "variedad" );
	deepEqual( Stem("varig"), "varig" );
	deepEqual( Stem("varíola"), "varíol" );
	deepEqual( Stem("vários"), "vári" );
	deepEqual( Stem("varre"), "varr" );
	deepEqual( Stem("varredura"), "varredur" );
	deepEqual( Stem("varreduras"), "varredur" );
	deepEqual( Stem("varrer"), "varr" );
	deepEqual( Stem("varreu"), "varr" );
	deepEqual( Stem("varrida"), "varr" );
	deepEqual( Stem("varrido"), "varr" );
	deepEqual( Stem("várzea"), "várz" );
	deepEqual( Stem("vascaína"), "vascaín" );
	deepEqual( Stem("vasco"), "vasc" );
	deepEqual( Stem("vasconcellos"), "vasconcell" );
	deepEqual( Stem("vasconcelos"), "vasconcel" );
	deepEqual( Stem("vascular"), "vascul" );
	deepEqual( Stem("vasculares"), "vascul" );
	deepEqual( Stem("vasculha"), "vasculh" );
	deepEqual( Stem("vasculham"), "vasculh" );
	deepEqual( Stem("vasculhando"), "vasculh" );
	deepEqual( Stem("vasculhar"), "vasculh" );
	deepEqual( Stem("vasculharam"), "vasculh" );
	deepEqual( Stem("vasculhava"), "vasculh" );
	deepEqual( Stem("vasculhavam"), "vasculh" );
	deepEqual( Stem("vasculhou"), "vasculh" );
	deepEqual( Stem("vasectomia"), "vasectom" );
	deepEqual( Stem("vaso"), "vas" );
	deepEqual( Stem("vasodilatadores"), "vasodilat" );
	deepEqual( Stem("vasoflor"), "vasoflor" );
	deepEqual( Stem("vasos"), "vas" );
	deepEqual( Stem("vasp"), "vasp" );
	deepEqual( Stem("vasquez"), "vasquez" );
	deepEqual( Stem("vassalo"), "vassal" );
	deepEqual( Stem("vassili"), "vassil" );
	deepEqual( Stem("vassoura"), "vassour" );
	deepEqual( Stem("vassouras"), "vassour" );
	deepEqual( Stem("vassoureiro"), "vassoureir" );
	deepEqual( Stem("vasta"), "vast" );
	deepEqual( Stem("vasto"), "vast" );
	deepEqual( Stem("vaticano"), "vatican" );
	deepEqual( Stem("vavá"), "vav" );
	deepEqual( Stem("vaz"), "vaz" );
	deepEqual( Stem("vazamento"), "vazament" );
	deepEqual( Stem("vazão"), "vazã" );
	deepEqual( Stem("vazar"), "vaz" );
	deepEqual( Stem("vazava"), "vaz" );
	deepEqual( Stem("vazem"), "vaz" );
	deepEqual( Stem("vazia"), "vaz" );
	deepEqual( Stem("vazias"), "vaz" );
	deepEqual( Stem("vazio"), "vazi" );
	deepEqual( Stem("vazios"), "vazi" );
	deepEqual( Stem("vazou"), "vaz" );
	deepEqual( Stem("vê"), "vê" );
	deepEqual( Stem("veados"), "vead" );
	deepEqual( Stem("vectra"), "vectr" );
	deepEqual( Stem("vedação"), "vedaçã" );
	deepEqual( Stem("vedete"), "vedet" );
	deepEqual( Stem("vedetes"), "vedet" );
	deepEqual( Stem("vêem"), "vêem" );
	deepEqual( Stem("veementemente"), "veement" );
	deepEqual( Stem("vegas"), "veg" );
	deepEqual( Stem("vegeta"), "veget" );
	deepEqual( Stem("vegetação"), "veget" );
	deepEqual( Stem("vegetais"), "veget" );
	deepEqual( Stem("vegetal"), "vegetal" );
	deepEqual( Stem("vegetariana"), "vegetarian" );
	deepEqual( Stem("vegetativa"), "veget" );
	deepEqual( Stem("veia"), "vei" );
	deepEqual( Stem("veias"), "vei" );
	deepEqual( Stem("veiculação"), "veicul" );
	deepEqual( Stem("veiculado"), "veicul" );
	deepEqual( Stem("veículo"), "veícul" );
	deepEqual( Stem("veículos"), "veícul" );
	deepEqual( Stem("veiga"), "veig" );
	deepEqual( Stem("veio"), "vei" );
	deepEqual( Stem("veja"), "vej" );
	deepEqual( Stem("vejam"), "vej" );
	deepEqual( Stem("vejamos"), "vej" );
	deepEqual( Stem("vejo"), "vej" );
	deepEqual( Stem("vela"), "vel" );
	deepEqual( Stem("velada"), "vel" );
	deepEqual( Stem("velado"), "vel" );
	deepEqual( Stem("velados"), "vel" );
	deepEqual( Stem("velas"), "vel" );
	deepEqual( Stem("velasco"), "velasc" );
	deepEqual( Stem("velejando"), "velej" );
	deepEqual( Stem("velha"), "velh" );
	deepEqual( Stem("velhas"), "velh" );
	deepEqual( Stem("velhice"), "velhic" );
	deepEqual( Stem("velhinha"), "velhinh" );
	deepEqual( Stem("velhinhas"), "velhinh" );
	deepEqual( Stem("velhinho"), "velhinh" );
	deepEqual( Stem("velhíssimo"), "velhíssim" );
	deepEqual( Stem("velho"), "velh" );
	deepEqual( Stem("velhos"), "velh" );
	deepEqual( Stem("velinhas"), "velinh" );
	deepEqual( Stem("velocidade"), "veloc" );
	deepEqual( Stem("velocidades"), "veloc" );
	deepEqual( Stem("velório"), "velóri" );
	deepEqual( Stem("veloso"), "velos" );
	deepEqual( Stem("veloz"), "veloz" );
	deepEqual( Stem("velozes"), "veloz" );
	deepEqual( Stem("velozmente"), "veloz" );
	deepEqual( Stem("veludo"), "velud" );
	deepEqual( Stem("vem"), "vem" );
	deepEqual( Stem("vêm"), "vêm" );
	deepEqual( Stem("vemos"), "vem" );
	deepEqual( Stem("venais"), "ven" );
	deepEqual( Stem("venâncio"), "venânci" );
	deepEqual( Stem("vença"), "venc" );
	deepEqual( Stem("vence"), "venc" );
	deepEqual( Stem("vencedor"), "vencedor" );
	deepEqual( Stem("vencedora"), "vencedor" );
	deepEqual( Stem("vencendo"), "venc" );
	deepEqual( Stem("vencer"), "venc" );
	deepEqual( Stem("vencera"), "venc" );
	deepEqual( Stem("venceram"), "venc" );
	deepEqual( Stem("vencerem"), "venc" );
	deepEqual( Stem("venceslau"), "venceslau" );
	deepEqual( Stem("venceu"), "venc" );
	deepEqual( Stem("venci"), "venc" );
	deepEqual( Stem("vencida"), "venc" );
	deepEqual( Stem("vencido"), "venc" );
	deepEqual( Stem("vencidos"), "venc" );
	deepEqual( Stem("vencimento"), "venciment" );
	deepEqual( Stem("venda"), "vend" );
	deepEqual( Stem("vendagem"), "vendag" );
	deepEqual( Stem("vendam"), "vend" );
	deepEqual( Stem("vendas"), "vend" );
	deepEqual( Stem("vendaval"), "vendaval" );
	deepEqual( Stem("vende"), "vend" );
	deepEqual( Stem("vendê"), "vend" );
	deepEqual( Stem("vendedor"), "vendedor" );
	deepEqual( Stem("vendedora"), "vendedor" );
	deepEqual( Stem("vendedoras"), "vendedor" );
	deepEqual( Stem("vendedores"), "vendedor" );
	deepEqual( Stem("vendem"), "vend" );
	deepEqual( Stem("vendendo"), "vend" );
	deepEqual( Stem("vender"), "vend" );
	deepEqual( Stem("venderam"), "vend" );
	deepEqual( Stem("venderem"), "vend" );
	deepEqual( Stem("venderia"), "vend" );
	deepEqual( Stem("vendesse"), "vend" );
	deepEqual( Stem("vendeu"), "vend" );
	deepEqual( Stem("vendi"), "vend" );
	deepEqual( Stem("vendia"), "vend" );
	deepEqual( Stem("vendiam"), "vend" );
	deepEqual( Stem("vendida"), "vend" );
	deepEqual( Stem("vendidas"), "vend" );
	deepEqual( Stem("vendido"), "vend" );
	deepEqual( Stem("vendidos"), "vend" );
	deepEqual( Stem("vendilhões"), "vendilhõ" );
	deepEqual( Stem("vendo"), "vend" );
	deepEqual( Stem("veneno"), "venen" );
	deepEqual( Stem("venenos"), "venen" );
	deepEqual( Stem("venenoso"), "venen" );
	deepEqual( Stem("venenosos"), "venen" );
	deepEqual( Stem("veneração"), "vener" );
	deepEqual( Stem("venerada"), "vener" );
	deepEqual( Stem("venerado"), "vener" );
	deepEqual( Stem("venerados"), "vener" );
	deepEqual( Stem("veneram"), "ven" );
	deepEqual( Stem("venerar"), "vener" );
	deepEqual( Stem("venerável"), "vener" );
	deepEqual( Stem("veneto"), "venet" );
	deepEqual( Stem("veneza"), "venez" );
	deepEqual( Stem("venezuela"), "venezuel" );
	deepEqual( Stem("veng"), "veng" );
	deepEqual( Stem("venha"), "venh" );
	deepEqual( Stem("venham"), "venh" );
	deepEqual( Stem("venho"), "venh" );
	deepEqual( Stem("venice"), "venic" );
	deepEqual( Stem("ventania"), "ventan" );
	deepEqual( Stem("vento"), "vent" );
	deepEqual( Stem("ventos"), "vent" );
	deepEqual( Stem("ventre"), "ventr" );
	deepEqual( Stem("venture"), "ventur" );
	deepEqual( Stem("ventures"), "ventur" );
	deepEqual( Stem("venturini"), "venturin" );
	deepEqual( Stem("ver"), "ver" );
	deepEqual( Stem("vera"), "ver" );
	deepEqual( Stem("verá"), "ver" );
	deepEqual( Stem("verão"), "verã" );
	deepEqual( Stem("verba"), "verb" );
	deepEqual( Stem("verbais"), "verb" );
	deepEqual( Stem("verbal"), "verbal" );
	deepEqual( Stem("verbalizou"), "verbaliz" );
	deepEqual( Stem("verbalmente"), "verbal" );
	deepEqual( Stem("verbas"), "verb" );
	deepEqual( Stem("verciana"), "vercian" );
	deepEqual( Stem("verdade"), "verdad" );
	deepEqual( Stem("verdadeira"), "verdadeir" );
	deepEqual( Stem("verdadeiramente"), "verdadeir" );
	deepEqual( Stem("verdadeiras"), "verdadeir" );
	deepEqual( Stem("verdadeiro"), "verdadeir" );
	deepEqual( Stem("verdadeiros"), "verdadeir" );
	deepEqual( Stem("verdades"), "verdad" );
	deepEqual( Stem("verde"), "verd" );
	deepEqual( Stem("verdes"), "verd" );
	deepEqual( Stem("verdi"), "verd" );
	deepEqual( Stem("verduras"), "verdur" );
	deepEqual( Stem("vereador"), "vereador" );
	deepEqual( Stem("vereadores"), "vereador" );
	deepEqual( Stem("veredicto"), "veredict" );
	deepEqual( Stem("verem"), "ver" );
	deepEqual( Stem("veremos"), "ver" );
	deepEqual( Stem("vergílio"), "vergíli" );
	deepEqual( Stem("vergonha"), "vergonh" );
	deepEqual( Stem("vergonhosa"), "vergonh" );
	deepEqual( Stem("vergonhoso"), "vergonh" );
	deepEqual( Stem("veridiana"), "veridian" );
	deepEqual( Stem("verifica"), "verif" );
	deepEqual( Stem("verificação"), "verific" );
	deepEqual( Stem("verificamos"), "verific" );
	deepEqual( Stem("verificando"), "verific" );
	deepEqual( Stem("verificar"), "verific" );
	deepEqual( Stem("verificasse"), "verific" );
	deepEqual( Stem("verificou"), "verific" );
	deepEqual( Stem("veríssimo"), "veríssim" );
	deepEqual( Stem("vermelha"), "vermelh" );
	deepEqual( Stem("vermelhas"), "vermelh" );
	deepEqual( Stem("vermelho"), "vermelh" );
	deepEqual( Stem("vermelhos"), "vermelh" );
	deepEqual( Stem("verminose"), "verminos" );
	deepEqual( Stem("verões"), "verõ" );
	deepEqual( Stem("verona"), "veron" );
	deepEqual( Stem("veronica"), "veron" );
	deepEqual( Stem("verônica"), "verôn" );
	deepEqual( Stem("veronika"), "veronik" );
	deepEqual( Stem("verrugas"), "verrug" );
	deepEqual( Stem("versa"), "vers" );
	deepEqual( Stem("versace"), "versac" );
	deepEqual( Stem("versão"), "versã" );
	deepEqual( Stem("versáteis"), "versát" );
	deepEqual( Stem("versátil"), "versátil" );
	deepEqual( Stem("versatilidade"), "versatil" );
	deepEqual( Stem("verso"), "vers" );
	deepEqual( Stem("versões"), "versõ" );
	deepEqual( Stem("versolato"), "versolat" );
	deepEqual( Stem("versos"), "vers" );
	deepEqual( Stem("vertebral"), "vertebral" );
	deepEqual( Stem("vertente"), "vertent" );
	deepEqual( Stem("vertentes"), "vertent" );
	deepEqual( Stem("vertical"), "vertical" );
	deepEqual( Stem("vértices"), "vértic" );
	deepEqual( Stem("vertiginosos"), "vertigin" );
	deepEqual( Stem("verve"), "verv" );
	deepEqual( Stem("vesícula"), "vesícul" );
	deepEqual( Stem("vesículas"), "vesícul" );
	deepEqual( Stem("véspera"), "vésp" );
	deepEqual( Stem("vésperas"), "vésp" );
	deepEqual( Stem("vespri"), "vespr" );
	deepEqual( Stem("veste"), "vest" );
	deepEqual( Stem("vestem"), "vest" );
	deepEqual( Stem("vestes"), "vest" );
	deepEqual( Stem("vesti"), "vest" );
	deepEqual( Stem("vestia"), "vest" );
	deepEqual( Stem("vestiam"), "vest" );
	deepEqual( Stem("vestiários"), "vestiári" );
	deepEqual( Stem("vestibulandos"), "vestibuland" );
	deepEqual( Stem("vestibular"), "vestibul" );
	deepEqual( Stem("vestida"), "vest" );
	deepEqual( Stem("vestidas"), "vest" );
	deepEqual( Stem("vestido"), "vest" );
	deepEqual( Stem("vestidos"), "vest" );
	deepEqual( Stem("vestígios"), "vestígi" );
	deepEqual( Stem("vestimenta"), "vestiment" );
	deepEqual( Stem("vestindo"), "vest" );
	deepEqual( Stem("vestir"), "vest" );
	deepEqual( Stem("vestiram"), "vest" );
	deepEqual( Stem("vestiu"), "vest" );
	deepEqual( Stem("vestuário"), "vestuári" );
	deepEqual( Stem("veta"), "vet" );
	deepEqual( Stem("vetado"), "vet" );
	deepEqual( Stem("vetar"), "vet" );
	deepEqual( Stem("veteranas"), "veteran" );
	deepEqual( Stem("veterano"), "veteran" );
	deepEqual( Stem("veteranos"), "veteran" );
	deepEqual( Stem("veterinária"), "veterinár" );
	deepEqual( Stem("veto"), "vet" );
	deepEqual( Stem("vetor"), "vetor" );
	deepEqual( Stem("vetos"), "vet" );
	deepEqual( Stem("vetou"), "vet" );
	deepEqual( Stem("vettorazzo"), "vettorazz" );
	deepEqual( Stem("véu"), "véu" );
	deepEqual( Stem("véus"), "véus" );
	deepEqual( Stem("vexame"), "vexam" );
	deepEqual( Stem("vexames"), "vexam" );
	deepEqual( Stem("vexatório"), "vexatóri" );
	deepEqual( Stem("vez"), "vez" );
	deepEqual( Stem("vezes"), "vez" );
	deepEqual( Stem("vf"), "vf" );
	deepEqual( Stem("vhd"), "vhd" );
	deepEqual( Stem("vi"), "vi" );
	deepEqual( Stem("via"), "via" );
	deepEqual( Stem("viabilidade"), "viabil" );
	deepEqual( Stem("viabilizar"), "viabiliz" );
	deepEqual( Stem("viabilizou"), "viabiliz" );
	deepEqual( Stem("viado"), "viad" );
	deepEqual( Stem("viados"), "viad" );
	deepEqual( Stem("viaduto"), "viadut" );
	deepEqual( Stem("viadutos"), "viadut" );
	deepEqual( Stem("viáfora"), "viáfor" );
	deepEqual( Stem("viagem"), "viag" );
	deepEqual( Stem("viagens"), "viagens" );
	deepEqual( Stem("viaja"), "viaj" );
	deepEqual( Stem("viajado"), "viaj" );
	deepEqual( Stem("viajam"), "viaj" );
	deepEqual( Stem("viajando"), "viaj" );
	deepEqual( Stem("viajante"), "viajant" );
	deepEqual( Stem("viajantes"), "viajant" );
	deepEqual( Stem("viajar"), "viaj" );
	deepEqual( Stem("viajaram"), "viaj" );
	deepEqual( Stem("viajaria"), "viaj" );
	deepEqual( Stem("viajava"), "viaj" );
	deepEqual( Stem("viajavam"), "viaj" );
	deepEqual( Stem("viajei"), "viaj" );
	deepEqual( Stem("viajou"), "viaj" );
	deepEqual( Stem("vialli"), "viall" );
	deepEqual( Stem("viam"), "viam" );
	deepEqual( Stem("víamos"), "víam" );
	deepEqual( Stem("viana"), "vian" );
	deepEqual( Stem("vianna"), "viann" );
	deepEqual( Stem("viária"), "viár" );
	deepEqual( Stem("vias"), "vias" );
	deepEqual( Stem("viáveis"), "viáv" );
	deepEqual( Stem("viável"), "viável" );
	deepEqual( Stem("víbora"), "víbor" );
	deepEqual( Stem("vibração"), "vibraçã" );
	deepEqual( Stem("vibracional"), "vibracional" );
	deepEqual( Stem("vibrações"), "vibraçõ" );
	deepEqual( Stem("vibram"), "vibr" );
	deepEqual( Stem("vibrando"), "vibr" );
	deepEqual( Stem("vibrante"), "vibrant" );
	deepEqual( Stem("vibraram"), "vibr" );
	deepEqual( Stem("vibrava"), "vibr" );
	deepEqual( Stem("vibrou"), "vibr" );
	deepEqual( Stem("vic"), "vic" );
	deepEqual( Stem("vice"), "vic" );
	deepEqual( Stem("vicente"), "vicent" );
	deepEqual( Stem("vicia"), "vic" );
	deepEqual( Stem("viciada"), "vic" );
	deepEqual( Stem("viciadas"), "vic" );
	deepEqual( Stem("viciado"), "vic" );
	deepEqual( Stem("viciados"), "vic" );
	deepEqual( Stem("viciantes"), "viciant" );
	deepEqual( Stem("vicinal"), "vicinal" );
	deepEqual( Stem("vício"), "víci" );
	deepEqual( Stem("vícios"), "víci" );
	deepEqual( Stem("vicissitudes"), "vicissitud" );
	deepEqual( Stem("vicky"), "vicky" );
	deepEqual( Stem("viçosa"), "viços" );
	deepEqual( Stem("victor"), "victor" );
	deepEqual( Stem("victoria"), "victor" );
	deepEqual( Stem("victória"), "victór" );
	deepEqual( Stem("vicunha"), "vicunh" );
	deepEqual( Stem("vida"), "vid" );
	deepEqual( Stem("vidas"), "vid" );
	deepEqual( Stem("vide"), "vid" );
	deepEqual( Stem("vidente"), "vident" );
	deepEqual( Stem("vídeo"), "víd" );
	deepEqual( Stem("videobrasil"), "videobrasil" );
	deepEqual( Stem("videocassete"), "videocasset" );
	deepEqual( Stem("videodiscos"), "videodisc" );
	deepEqual( Stem("videogame"), "videogam" );
	deepEqual( Stem("videomaker"), "videomak" );
	deepEqual( Stem("vídeos"), "víd" );
	deepEqual( Stem("vidinha"), "vidinh" );
	deepEqual( Stem("vidraça"), "vidrac" );
	deepEqual( Stem("vidraças"), "vidrac" );
	deepEqual( Stem("vidraceiro"), "vidraceir" );
	deepEqual( Stem("vidrado"), "vidr" );
	deepEqual( Stem("vidrados"), "vidr" );
	deepEqual( Stem("vidro"), "vidr" );
	deepEqual( Stem("vidros"), "vidr" );
	deepEqual( Stem("vieira"), "vieir" );
	deepEqual( Stem("viela"), "viel" );
	deepEqual( Stem("vielas"), "viel" );
	deepEqual( Stem("vielmond"), "vielmond" );
	deepEqual( Stem("viena"), "vien" );
	deepEqual( Stem("vier"), "vier" );
	deepEqual( Stem("vieram"), "vier" );
	deepEqual( Stem("viesse"), "viess" );
	deepEqual( Stem("viessem"), "viess" );
	deepEqual( Stem("vietcongues"), "vietcongu" );
	deepEqual( Stem("vietnã"), "vietnã" );
	deepEqual( Stem("vietnamitas"), "vietnamit" );
	deepEqual( Stem("vigarice"), "vigaric" );
	deepEqual( Stem("vigário"), "vigári" );
	deepEqual( Stem("vigários"), "vigári" );
	deepEqual( Stem("vigente"), "vigent" );
	deepEqual( Stem("vigiado"), "vigi" );
	deepEqual( Stem("vigiando"), "vigi" );
	deepEqual( Stem("vigiar"), "vigi" );
	deepEqual( Stem("vigiava"), "vigi" );
	deepEqual( Stem("vigiavam"), "vigi" );
	deepEqual( Stem("vigilância"), "vigil" );
	deepEqual( Stem("vigilantes"), "vigil" );
	deepEqual( Stem("vigília"), "vigíl" );
	deepEqual( Stem("vigor"), "vigor" );
	deepEqual( Stem("vigore"), "vigor" );
	deepEqual( Stem("vil"), "vil" );
	deepEqual( Stem("vila"), "vil" );
	deepEqual( Stem("vilã"), "vilã" );
	deepEqual( Stem("vilaboim"), "vilaboim" );
	deepEqual( Stem("vilanices"), "vilanic" );
	deepEqual( Stem("vilanova"), "vilanov" );
	deepEqual( Stem("vilão"), "vilã" );
	deepEqual( Stem("vilarejo"), "vilarej" );
	deepEqual( Stem("vilarejos"), "vilarej" );
	deepEqual( Stem("vilas"), "vil" );
	deepEqual( Stem("vilãs"), "vilãs" );
	deepEqual( Stem("villa"), "vill" );
	deepEqual( Stem("villaça"), "villac" );
	deepEqual( Stem("village"), "villag" );
	deepEqual( Stem("villaméa"), "villam" );
	deepEqual( Stem("villanova"), "villanov" );
	deepEqual( Stem("villas"), "vill" );
	deepEqual( Stem("villaventura"), "villaventur" );
	deepEqual( Stem("villela"), "villel" );
	deepEqual( Stem("vilmacy"), "vilmacy" );
	deepEqual( Stem("vilões"), "vilõ" );
	deepEqual( Stem("vilson"), "vilson" );
	deepEqual( Stem("vim"), "vim" );
	deepEqual( Stem("vime"), "vim" );
	deepEqual( Stem("vinagre"), "vinagr" );
	deepEqual( Stem("vincadas"), "vinc" );
	deepEqual( Stem("vincenzo"), "vincenz" );
	deepEqual( Stem("vincos"), "vinc" );
	deepEqual( Stem("vinculá"), "vincul" );
	deepEqual( Stem("vinculada"), "vincul" );
	deepEqual( Stem("vinculado"), "vincul" );
	deepEqual( Stem("vinculados"), "vincul" );
	deepEqual( Stem("vinculando"), "vincul" );
	deepEqual( Stem("vínculo"), "víncul" );
	deepEqual( Stem("vínculos"), "víncul" );
	deepEqual( Stem("vinculou"), "vincul" );
	deepEqual( Stem("vinda"), "vind" );
	deepEqual( Stem("vindas"), "vind" );
	deepEqual( Stem("vinde"), "vind" );
	deepEqual( Stem("vindo"), "vind" );
	deepEqual( Stem("vindos"), "vind" );
	deepEqual( Stem("ving"), "ving" );
	deepEqual( Stem("vingado"), "ving" );
	deepEqual( Stem("vingança"), "vinganc" );
	deepEqual( Stem("vingando"), "ving" );
	deepEqual( Stem("vingar"), "ving" );
	deepEqual( Stem("vingativo"), "vingat" );
	deepEqual( Stem("vingou"), "ving" );
	deepEqual( Stem("vinha"), "vinh" );
	deepEqual( Stem("vinham"), "vinh" );
	deepEqual( Stem("vinhedo"), "vinhed" );
	deepEqual( Stem("vinheta"), "vinhet" );
	deepEqual( Stem("vinhetas"), "vinhet" );
	deepEqual( Stem("vinho"), "vinh" );
	deepEqual( Stem("vinhos"), "vinh" );
	deepEqual( Stem("vinicius"), "vinicius" );
	deepEqual( Stem("vinícius"), "vinícius" );
	deepEqual( Stem("vinícola"), "vinícol" );
	deepEqual( Stem("vinícolas"), "vinícol" );
	deepEqual( Stem("vinil"), "vinil" );
	deepEqual( Stem("vinson"), "vinson" );
	deepEqual( Stem("vinte"), "vint" );
	deepEqual( Stem("vinténs"), "vinténs" );
	deepEqual( Stem("viola"), "viol" );
	deepEqual( Stem("violação"), "violaçã" );
	deepEqual( Stem("violações"), "violaçõ" );
	deepEqual( Stem("violão"), "violã" );
	deepEqual( Stem("violaram"), "viol" );
	deepEqual( Stem("violência"), "violênc" );
	deepEqual( Stem("violências"), "violênc" );
	deepEqual( Stem("violenta"), "violent" );
	deepEqual( Stem("violentamente"), "violent" );
	deepEqual( Stem("violentas"), "violent" );
	deepEqual( Stem("violentíssimas"), "violentíssim" );
	deepEqual( Stem("violento"), "violent" );
	deepEqual( Stem("violentos"), "violent" );
	deepEqual( Stem("violinistas"), "violin" );
	deepEqual( Stem("violões"), "violõ" );
	deepEqual( Stem("vip"), "vip" );
	deepEqual( Stem("vips"), "vips" );
	deepEqual( Stem("vir"), "vir" );
	deepEqual( Stem("vira"), "vir" );
	deepEqual( Stem("virá"), "vir" );
	deepEqual( Stem("viracopos"), "viracop" );
	deepEqual( Stem("virada"), "vir" );
	deepEqual( Stem("viradas"), "vir" );
	deepEqual( Stem("virado"), "vir" );
	deepEqual( Stem("viram"), "vir" );
	deepEqual( Stem("virando"), "vir" );
	deepEqual( Stem("virão"), "virã" );
	deepEqual( Stem("virar"), "vir" );
	deepEqual( Stem("viraram"), "vir" );
	deepEqual( Stem("virava"), "vir" );
	deepEqual( Stem("vire"), "vir" );
	deepEqual( Stem("virei"), "vir" );
	deepEqual( Stem("virem"), "vir" );
	deepEqual( Stem("virgem"), "virg" );
	deepEqual( Stem("virgens"), "virgens" );
	deepEqual( Stem("virgília"), "virgíl" );
	deepEqual( Stem("virgílio"), "virgíli" );
	deepEqual( Stem("virgindade"), "virgindad" );
	deepEqual( Stem("virgínia"), "virgín" );
	deepEqual( Stem("virginie"), "virgini" );
	deepEqual( Stem("vírgula"), "vírgul" );
	deepEqual( Stem("viria"), "vir" );
	deepEqual( Stem("viriam"), "vir" );
	deepEqual( Stem("virilidade"), "viril" );
	deepEqual( Stem("virmondes"), "virmond" );
	deepEqual( Stem("virna"), "virn" );
	deepEqual( Stem("viro"), "vir" );
	deepEqual( Stem("viroses"), "viros" );
	deepEqual( Stem("virou"), "vir" );
	deepEqual( Stem("virtuais"), "virtu" );
	deepEqual( Stem("virtual"), "virtual" );
	deepEqual( Stem("virtualmente"), "virtual" );
	deepEqual( Stem("virtude"), "virtud" );
	deepEqual( Stem("virtudes"), "virtud" );
	deepEqual( Stem("vírus"), "vírus" );
	deepEqual( Stem("virusterapia"), "virusterap" );
	deepEqual( Stem("visa"), "vis" );
	deepEqual( Stem("visada"), "vis" );
	deepEqual( Stem("visado"), "vis" );
	deepEqual( Stem("visados"), "vis" );
	deepEqual( Stem("visando"), "vis" );
	deepEqual( Stem("visão"), "visã" );
	deepEqual( Stem("vísceras"), "vísc" );
	deepEqual( Stem("viscomi"), "viscom" );
	deepEqual( Stem("visconde"), "viscond" );
	deepEqual( Stem("viscosa"), "viscos" );
	deepEqual( Stem("visible"), "visibl" );
	deepEqual( Stem("vision"), "vision" );
	deepEqual( Stem("visita"), "visit" );
	deepEqual( Stem("visitá"), "visit" );
	deepEqual( Stem("visitada"), "visit" );
	deepEqual( Stem("visitadas"), "visit" );
	deepEqual( Stem("visitado"), "visit" );
	deepEqual( Stem("visitados"), "visit" );
	deepEqual( Stem("visitam"), "visit" );
	deepEqual( Stem("visitamos"), "visit" );
	deepEqual( Stem("visitante"), "visit" );
	deepEqual( Stem("visitantes"), "visit" );
	deepEqual( Stem("visitar"), "visit" );
	deepEqual( Stem("visitaram"), "visit" );
	deepEqual( Stem("visitas"), "visit" );
	deepEqual( Stem("visitasse"), "visit" );
	deepEqual( Stem("visitavam"), "visit" );
	deepEqual( Stem("visitou"), "visit" );
	deepEqual( Stem("visíveis"), "visív" );
	deepEqual( Stem("visível"), "visível" );
	deepEqual( Stem("visivelmente"), "visivel" );
	deepEqual( Stem("vislumbra"), "vislumbr" );
	deepEqual( Stem("vislumbrar"), "vislumbr" );
	deepEqual( Stem("vislumbrou"), "vislumbr" );
	deepEqual( Stem("visões"), "visõ" );
	deepEqual( Stem("visor"), "visor" );
	deepEqual( Stem("visse"), "viss" );
	deepEqual( Stem("vista"), "vist" );
	deepEqual( Stem("vistas"), "vist" );
	deepEqual( Stem("visto"), "vist" );
	deepEqual( Stem("vistoria"), "vistor" );
	deepEqual( Stem("vistos"), "vist" );
	deepEqual( Stem("visuais"), "visu" );
	deepEqual( Stem("visual"), "visual" );
	deepEqual( Stem("visualmente"), "visual" );
	deepEqual( Stem("vita"), "vit" );
	deepEqual( Stem("vitais"), "vit" );
	deepEqual( Stem("vital"), "vital" );
	deepEqual( Stem("vitalícios"), "vitalíci" );
	deepEqual( Stem("vitalidade"), "vital" );
	deepEqual( Stem("vitamina"), "vitamin" );
	deepEqual( Stem("vitaminada"), "vitamin" );
	deepEqual( Stem("vitaminas"), "vitamin" );
	deepEqual( Stem("vitara"), "vit" );
	deepEqual( Stem("vítima"), "vítim" );
	deepEqual( Stem("vitimam"), "vitim" );
	deepEqual( Stem("vítimas"), "vítim" );
	deepEqual( Stem("vitimou"), "vitim" );
	deepEqual( Stem("vitivinicultura"), "vitivinicultur" );
	deepEqual( Stem("vitor"), "vitor" );
	deepEqual( Stem("vítor"), "vítor" );
	deepEqual( Stem("vitória"), "vitór" );
	deepEqual( Stem("vitórias"), "vitór" );
	deepEqual( Stem("vitório"), "vitóri" );
	deepEqual( Stem("vitoriosa"), "vitori" );
	deepEqual( Stem("vitoriosas"), "vitori" );
	deepEqual( Stem("vitorioso"), "vitori" );
	deepEqual( Stem("vitoriosos"), "vitori" );
	deepEqual( Stem("vitrinas"), "vitrin" );
	deepEqual( Stem("vitrine"), "vitrin" );
	deepEqual( Stem("vitrines"), "vitrin" );
	deepEqual( Stem("vitrola"), "vitrol" );
	deepEqual( Stem("viu"), "viu" );
	deepEqual( Stem("viúva"), "viúv" );
	deepEqual( Stem("viúvas"), "viúv" );
	deepEqual( Stem("viva"), "viv" );
	deepEqual( Stem("vivacidade"), "vivac" );
	deepEqual( Stem("vivamente"), "viv" );
	deepEqual( Stem("vivas"), "viv" );
	deepEqual( Stem("vive"), "viv" );
	deepEqual( Stem("vivem"), "viv" );
	deepEqual( Stem("vivemos"), "viv" );
	deepEqual( Stem("vivencia"), "vivenc" );
	deepEqual( Stem("vivenciadas"), "vivenc" );
	deepEqual( Stem("vivenciaram"), "vivenc" );
	deepEqual( Stem("vivências"), "vivênc" );
	deepEqual( Stem("vivendo"), "viv" );
	deepEqual( Stem("viver"), "viv" );
	deepEqual( Stem("vivera"), "viv" );
	deepEqual( Stem("viveram"), "viv" );
	deepEqual( Stem("viveria"), "viv" );
	deepEqual( Stem("vivesse"), "viv" );
	deepEqual( Stem("viveu"), "viv" );
	deepEqual( Stem("vivi"), "viv" );
	deepEqual( Stem("vivia"), "viv" );
	deepEqual( Stem("viviam"), "viv" );
	deepEqual( Stem("viviane"), "vivian" );
	deepEqual( Stem("vivida"), "viv" );
	deepEqual( Stem("vividas"), "viv" );
	deepEqual( Stem("vivido"), "viv" );
	deepEqual( Stem("vividos"), "viv" );
	deepEqual( Stem("vivien"), "vivien" );
	deepEqual( Stem("vivinha"), "vivinh" );
	deepEqual( Stem("vivíssimas"), "vivíssim" );
	deepEqual( Stem("vivíssimos"), "vivíss" );
	deepEqual( Stem("vivo"), "viv" );
	deepEqual( Stem("vivos"), "viv" );
	deepEqual( Stem("vizinha"), "vizinh" );
	deepEqual( Stem("vizinhança"), "vizinhanc" );
	deepEqual( Stem("vizinhas"), "vizinh" );
	deepEqual( Stem("vizinho"), "vizinh" );
	deepEqual( Stem("vizinhos"), "vizinh" );
	deepEqual( Stem("vladimir"), "vladim" );
	deepEqual( Stem("vle"), "vle" );
	deepEqual( Stem("vô"), "vô" );
	deepEqual( Stem("voa"), "voa" );
	deepEqual( Stem("voador"), "voador" );
	deepEqual( Stem("voadores"), "voador" );
	deepEqual( Stem("voam"), "voam" );
	deepEqual( Stem("voando"), "voand" );
	deepEqual( Stem("voar"), "voar" );
	deepEqual( Stem("voara"), "voar" );
	deepEqual( Stem("voava"), "voav" );
	deepEqual( Stem("voavam"), "voav" );
	deepEqual( Stem("voávamos"), "voáv" );
	deepEqual( Stem("vocabulário"), "vocabulári" );
	deepEqual( Stem("vocábulos"), "vocábul" );
	deepEqual( Stem("vocação"), "vocaçã" );
	deepEqual( Stem("vocais"), "voc" );
	deepEqual( Stem("vocalista"), "vocal" );
	deepEqual( Stem("vocalizado"), "vocaliz" );
	deepEqual( Stem("vocaltec"), "vocaltec" );
	deepEqual( Stem("você"), "voc" );
	deepEqual( Stem("vocês"), "vocês" );
	deepEqual( Stem("vodca"), "vodc" );
	deepEqual( Stem("voei"), "voe" );
	deepEqual( Stem("vogal"), "vogal" );
	deepEqual( Stem("vogue"), "vog" );
	deepEqual( Stem("voice"), "voic" );
	deepEqual( Stem("volante"), "volant" );
	deepEqual( Stem("volátil"), "volátil" );
	deepEqual( Stem("volatilidade"), "volatil" );
	deepEqual( Stem("vôlei"), "vôl" );
	deepEqual( Stem("volkow"), "volkow" );
	deepEqual( Stem("volks"), "volks" );
	deepEqual( Stem("volkswagen"), "volkswagen" );
	deepEqual( Stem("volpe"), "volp" );
	deepEqual( Stem("volta"), "volt" );
	deepEqual( Stem("voltada"), "volt" );
	deepEqual( Stem("voltadas"), "volt" );
	deepEqual( Stem("voltado"), "volt" );
	deepEqual( Stem("voltados"), "volt" );
	deepEqual( Stem("voltaire"), "voltair" );
	deepEqual( Stem("voltam"), "volt" );
	deepEqual( Stem("voltamos"), "volt" );
	deepEqual( Stem("voltando"), "volt" );
	deepEqual( Stem("voltar"), "volt" );
	deepEqual( Stem("voltaram"), "volt" );
	deepEqual( Stem("voltarem"), "volt" );
	deepEqual( Stem("voltaren"), "voltaren" );
	deepEqual( Stem("voltaria"), "volt" );
	deepEqual( Stem("voltarmos"), "volt" );
	deepEqual( Stem("voltas"), "volt" );
	deepEqual( Stem("voltassem"), "volt" );
	deepEqual( Stem("voltava"), "volt" );
	deepEqual( Stem("volte"), "volt" );
	deepEqual( Stem("voltei"), "volt" );
	deepEqual( Stem("voltem"), "volt" );
	deepEqual( Stem("volto"), "volt" );
	deepEqual( Stem("voltou"), "volt" );
	deepEqual( Stem("volume"), "volum" );
	deepEqual( Stem("volumes"), "volum" );
	deepEqual( Stem("volumoso"), "volum" );
	deepEqual( Stem("voluntárias"), "voluntár" );
	deepEqual( Stem("voluntário"), "voluntári" );
	deepEqual( Stem("voluntários"), "voluntári" );
	deepEqual( Stem("voluntarismo"), "voluntar" );
	deepEqual( Stem("volúpia"), "volúp" );
	deepEqual( Stem("vomitar"), "vomit" );
	deepEqual( Stem("vomitava"), "vomit" );
	deepEqual( Stem("vômitos"), "vômit" );
	deepEqual( Stem("von"), "von" );
	deepEqual( Stem("vontade"), "vontad" );
	deepEqual( Stem("vontades"), "vontad" );
	deepEqual( Stem("vôo"), "vôo" );
	deepEqual( Stem("vôos"), "vôos" );
	deepEqual( Stem("voou"), "voou" );
	deepEqual( Stem("voracidade"), "vorac" );
	deepEqual( Stem("voraz"), "voraz" );
	deepEqual( Stem("vorazes"), "voraz" );
	deepEqual( Stem("vosges"), "vosg" );
	deepEqual( Stem("votação"), "votaçã" );
	deepEqual( Stem("votações"), "votaçõ" );
	deepEqual( Stem("votado"), "vot" );
	deepEqual( Stem("votados"), "vot" );
	deepEqual( Stem("votar"), "vot" );
	deepEqual( Stem("votarão"), "vot" );
	deepEqual( Stem("votaria"), "vot" );
	deepEqual( Stem("votasse"), "vot" );
	deepEqual( Stem("votava"), "vot" );
	deepEqual( Stem("votei"), "vot" );
	deepEqual( Stem("voto"), "vot" );
	deepEqual( Stem("votorantim"), "votorantim" );
	deepEqual( Stem("votos"), "vot" );
	deepEqual( Stem("votou"), "vot" );
	deepEqual( Stem("vou"), "vou" );
	deepEqual( Stem("vouiton"), "vouiton" );
	deepEqual( Stem("vovó"), "vov" );
	deepEqual( Stem("vox"), "vox" );
	deepEqual( Stem("voxel"), "voxel" );
	deepEqual( Stem("voyage"), "voyag" );
	deepEqual( Stem("voyeurista"), "voyeur" );
	deepEqual( Stem("voz"), "voz" );
	deepEqual( Stem("vozeirão"), "voz" );
	deepEqual( Stem("vozes"), "voz" );
	deepEqual( Stem("vulcânica"), "vulcân" );
	deepEqual( Stem("vulcânicos"), "vulcân" );
	deepEqual( Stem("vulcão"), "vulcã" );
	deepEqual( Stem("vulcões"), "vulcõ" );
	deepEqual( Stem("vulgar"), "vulg" );
	deepEqual( Stem("vulgares"), "vulg" );
	deepEqual( Stem("vulgaridade"), "vulgar" );
	deepEqual( Stem("vulgarizaram"), "vulgariz" );
	deepEqual( Stem("vulgarmente"), "vulgar" );
	deepEqual( Stem("vulnerabilidade"), "vulner" );
	deepEqual( Stem("vulnerabilidades"), "vulner" );
	deepEqual( Stem("vulneráveis"), "vulner" );
	deepEqual( Stem("vulnerável"), "vulner" );
	deepEqual( Stem("vulto"), "vult" );
	deepEqual( Stem("vultosa"), "vultos" );
	deepEqual( Stem("vultosos"), "vultos" );
	deepEqual( Stem("w"), "w" );
	deepEqual( Stem("wade"), "wad" );
	deepEqual( Stem("wagner"), "wagn" );
	deepEqual( Stem("wagnerianos"), "wagnerian" );
	deepEqual( Stem("wainer"), "wain" );
	deepEqual( Stem("wald"), "wald" );
	deepEqual( Stem("waldemar"), "waldem" );
	deepEqual( Stem("waldhoff"), "waldhoff" );
	deepEqual( Stem("waldir"), "wald" );
	deepEqual( Stem("waldyr"), "waldyr" );
	deepEqual( Stem("walker"), "walk" );
	deepEqual( Stem("walkiria"), "walk" );
	deepEqual( Stem("walkman"), "walkman" );
	deepEqual( Stem("wall"), "wall" );
	deepEqual( Stem("wallace"), "wallac" );
	deepEqual( Stem("walsh"), "walsh" );
	deepEqual( Stem("walt"), "walt" );
	deepEqual( Stem("walter"), "walt" );
	deepEqual( Stem("walther"), "walth" );
	deepEqual( Stem("wanamaker"), "wanamak" );
	deepEqual( Stem("wanda"), "wand" );
	deepEqual( Stem("wanderlei"), "wanderl" );
	deepEqual( Stem("wanderley"), "wanderley" );
	deepEqual( Stem("wando"), "wand" );
	deepEqual( Stem("wanira"), "wan" );
	deepEqual( Stem("wanna"), "wann" );
	deepEqual( Stem("want"), "want" );
	deepEqual( Stem("warner"), "warn" );
	deepEqual( Stem("washington"), "washington" );
	deepEqual( Stem("watch"), "watch" );
	deepEqual( Stem("water"), "wat" );
	deepEqual( Stem("watergate"), "watergat" );
	deepEqual( Stem("waterhouse"), "waterhous" );
	deepEqual( Stem("watts"), "watts" );
	deepEqual( Stem("wayne"), "wayn" );
	deepEqual( Stem("wear"), "wear" );
	deepEqual( Stem("weaver"), "weav" );
	deepEqual( Stem("web"), "web" );
	deepEqual( Stem("weber"), "web" );
	deepEqual( Stem("webphone"), "webphon" );
	deepEqual( Stem("website"), "websit" );
	deepEqual( Stem("wedge"), "wedg" );
	deepEqual( Stem("week"), "week" );
	deepEqual( Stem("weeks"), "weeks" );
	deepEqual( Stem("weg"), "weg" );
	deepEqual( Stem("weizmann"), "weizmann" );
	deepEqual( Stem("welles"), "well" );
	deepEqual( Stem("wellington"), "wellington" );
	deepEqual( Stem("werneck"), "werneck" );
	deepEqual( Stem("werner"), "wern" );
	deepEqual( Stem("werthein"), "werthein" );
	deepEqual( Stem("wesley"), "wesley" );
	deepEqual( Stem("wessel"), "wessel" );
	deepEqual( Stem("west"), "west" );
	deepEqual( Stem("wet"), "wet" );
	deepEqual( Stem("wexler"), "wexl" );
	deepEqual( Stem("what"), "what" );
	deepEqual( Stem("wheelock"), "wheelock" );
	deepEqual( Stem("when"), "when" );
	deepEqual( Stem("white"), "whit" );
	deepEqual( Stem("whiteboard"), "whiteboard" );
	deepEqual( Stem("who"), "who" );
	deepEqual( Stem("whoop"), "whoop" );
	deepEqual( Stem("whoopy"), "whoopy" );
	deepEqual( Stem("wilckens"), "wilckens" );
	deepEqual( Stem("wild"), "wild" );
	deepEqual( Stem("wildlife"), "wildlif" );
	deepEqual( Stem("wilhelm"), "wilhelm" );
	deepEqual( Stem("wilker"), "wilk" );
	deepEqual( Stem("will"), "will" );
	deepEqual( Stem("willadino"), "willadin" );
	deepEqual( Stem("william"), "will" );
	deepEqual( Stem("willis"), "will" );
	deepEqual( Stem("willy"), "willy" );
	deepEqual( Stem("wilma"), "wilm" );
	deepEqual( Stem("wilson"), "wilson" );
	deepEqual( Stem("wimbledon"), "wimbledon" );
	deepEqual( Stem("windows"), "windows" );
	deepEqual( Stem("wine"), "win" );
	deepEqual( Stem("winits"), "winits" );
	deepEqual( Stem("winona"), "winon" );
	deepEqual( Stem("winston"), "winston" );
	deepEqual( Stem("without"), "without" );
	deepEqual( Stem("witt"), "witt" );
	deepEqual( Stem("witte"), "witt" );
	deepEqual( Stem("wittemberg"), "wittemberg" );
	deepEqual( Stem("wladimir"), "wladim" );
	deepEqual( Stem("wolf"), "wolf" );
	deepEqual( Stem("wolfenson"), "wolfenson" );
	deepEqual( Stem("woman"), "woman" );
	deepEqual( Stem("women"), "women" );
	deepEqual( Stem("wonder"), "wond" );
	deepEqual( Stem("wonderful"), "wonderful" );
	deepEqual( Stem("woods"), "woods" );
	deepEqual( Stem("woodstock"), "woodstock" );
	deepEqual( Stem("woody"), "woody" );
	deepEqual( Stem("work"), "work" );
	deepEqual( Stem("workaholic"), "workaholic" );
	deepEqual( Stem("workaholics"), "workaholics" );
	deepEqual( Stem("workshop"), "workshop" );
	deepEqual( Stem("world"), "world" );
	deepEqual( Stem("worth"), "worth" );
	deepEqual( Stem("wri"), "wri" );
	deepEqual( Stem("wright"), "wright" );
	deepEqual( Stem("writer"), "writ" );
	deepEqual( Stem("wtk"), "wtk" );
	deepEqual( Stem("wwf"), "wwf" );
	deepEqual( Stem("www"), "www" );
	deepEqual( Stem("x"), "x" );
	deepEqual( Stem("xá"), "xá" );
	deepEqual( Stem("xadrez"), "xadrez" );
	deepEqual( Stem("xamã"), "xamã" );
	deepEqual( Stem("xamanismo"), "xaman" );
	deepEqual( Stem("xamanísticas"), "xamaníst" );
	deepEqual( Stem("xampu"), "xampu" );
	deepEqual( Stem("xampus"), "xampus" );
	deepEqual( Stem("xando"), "xand" );
	deepEqual( Stem("xangô"), "xangô" );
	deepEqual( Stem("xará"), "xar" );
	deepEqual( Stem("xarope"), "xarop" );
	deepEqual( Stem("xaropes"), "xarop" );
	deepEqual( Stem("xavante"), "xavant" );
	deepEqual( Stem("xavantinho"), "xavantinh" );
	deepEqual( Stem("xaveco"), "xavec" );
	deepEqual( Stem("xavier"), "xavi" );
	deepEqual( Stem("xenakis"), "xenak" );
	deepEqual( Stem("xenical"), "xenical" );
	deepEqual( Stem("xeque"), "xequ" );
	deepEqual( Stem("xeretada"), "xeret" );
	deepEqual( Stem("xerifes"), "xerif" );
	deepEqual( Stem("xerox"), "xerox" );
	deepEqual( Stem("xiao"), "xia" );
	deepEqual( Stem("xica"), "xic" );
	deepEqual( Stem("xícara"), "xíc" );
	deepEqual( Stem("xícaras"), "xíc" );
	deepEqual( Stem("xiii"), "xii" );
	deepEqual( Stem("xiita"), "xiit" );
	deepEqual( Stem("ximenes"), "ximen" );
	deepEqual( Stem("xingada"), "xing" );
	deepEqual( Stem("xingado"), "xing" );
	deepEqual( Stem("xingam"), "xing" );
	deepEqual( Stem("xingar"), "xing" );
	deepEqual( Stem("xingu"), "xingu" );
	deepEqual( Stem("xiv"), "xiv" );
	deepEqual( Stem("xix"), "xix" );
	deepEqual( Stem("xodó"), "xod" );
	deepEqual( Stem("xororó"), "xoror" );
	deepEqual( Stem("xou"), "xou" );
	deepEqual( Stem("xres"), "xres" );
	deepEqual( Stem("xuxa"), "xux" );
	deepEqual( Stem("xvi"), "xvi" );
	deepEqual( Stem("xvii"), "xvi" );
	deepEqual( Stem("xviii"), "xvii" );
	deepEqual( Stem("xx"), "xx" );
	deepEqual( Stem("xxi"), "xxi" );
	deepEqual( Stem("y"), "y" );
	deepEqual( Stem("yahoo"), "yaho" );
	deepEqual( Stem("yakult"), "yakult" );
	deepEqual( Stem("yale"), "yal" );
	deepEqual( Stem("yamaha"), "yamah" );
	deepEqual( Stem("yan"), "yan" );
	deepEqual( Stem("yara"), "yar" );
	deepEqual( Stem("yard"), "yard" );
	deepEqual( Stem("yassuda"), "yassud" );
	deepEqual( Stem("yat"), "yat" );
	deepEqual( Stem("yes"), "yes" );
	deepEqual( Stem("yevgeni"), "yevgen" );
	deepEqual( Stem("yitzhak"), "yitzhak" );
	deepEqual( Stem("yoko"), "yok" );
	deepEqual( Stem("york"), "york" );
	deepEqual( Stem("yun"), "yun" );
	deepEqual( Stem("yuri"), "yur" );
	deepEqual( Stem("yves"), "yves" );
	deepEqual( Stem("z"), "z" );
	deepEqual( Stem("zacharias"), "zach" );
	deepEqual( Stem("zaf"), "zaf" );
	deepEqual( Stem("zagallo"), "zagall" );
	deepEqual( Stem("zagalo"), "zagal" );
	deepEqual( Stem("zagon"), "zagon" );
	deepEqual( Stem("zagury"), "zagury" );
	deepEqual( Stem("zaida"), "zaid" );
	deepEqual( Stem("zaire"), "zair" );
	deepEqual( Stem("zakabi"), "zakab" );
	deepEqual( Stem("zamora"), "zamor" );
	deepEqual( Stem("zancaner"), "zancan" );
	deepEqual( Stem("zander"), "zand" );
	deepEqual( Stem("zangado"), "zang" );
	deepEqual( Stem("zanini"), "zanin" );
	deepEqual( Stem("zanivan"), "zanivan" );
	deepEqual( Stem("zanzibar"), "zanzib" );
	deepEqual( Stem("zapping"), "zapping" );
	deepEqual( Stem("zara"), "zar" );
	deepEqual( Stem("zaragoza"), "zaragoz" );
	deepEqual( Stem("zarin"), "zarin" );
	deepEqual( Stem("zaz"), "zaz" );
	deepEqual( Stem("zé"), "zé" );
	deepEqual( Stem("zebra"), "zebr" );
	deepEqual( Stem("zebras"), "zebr" );
	deepEqual( Stem("zebu"), "zebu" );
	deepEqual( Stem("zeca"), "zec" );
	deepEqual( Stem("zedias"), "zed" );
	deepEqual( Stem("zeferina"), "zeferin" );
	deepEqual( Stem("zehnder"), "zehnd" );
	deepEqual( Stem("zelador"), "zelador" );
	deepEqual( Stem("zelândia"), "zelând" );
	deepEqual( Stem("zelar"), "zel" );
	deepEqual( Stem("zen"), "zen" );
	deepEqual( Stem("zenilda"), "zenild" );
	deepEqual( Stem("zenildo"), "zenild" );
	deepEqual( Stem("zentel"), "zentel" );
	deepEqual( Stem("zepellin"), "zepellin" );
	deepEqual( Stem("zequinha"), "zequinh" );
	deepEqual( Stem("zerados"), "zer" );
	deepEqual( Stem("zerinho"), "zerinh" );
	deepEqual( Stem("zero"), "zer" );
	deepEqual( Stem("zerou"), "zer" );
	deepEqual( Stem("zezé"), "zez" );
	deepEqual( Stem("zhiling"), "zhiling" );
	deepEqual( Stem("zico"), "zic" );
	deepEqual( Stem("zilberman"), "zilberman" );
	deepEqual( Stem("zimbábue"), "zimbábu" );
	deepEqual( Stem("zinco"), "zinc" );
	deepEqual( Stem("zinhos"), "zinh" );
	deepEqual( Stem("zíper"), "zíp" );
	deepEqual( Stem("ziraldo"), "zirald" );
	deepEqual( Stem("zita"), "zit" );
	deepEqual( Stem("zoar"), "zoar" );
	deepEqual( Stem("zodíaco"), "zodíac" );
	deepEqual( Stem("zola"), "zol" );
	deepEqual( Stem("zolio"), "zoli" );
	deepEqual( Stem("zona"), "zon" );
	deepEqual( Stem("zonas"), "zon" );
	deepEqual( Stem("zoneamento"), "zoneament" );
	deepEqual( Stem("zonzo"), "zonz" );
	deepEqual( Stem("zooboros"), "zoobor" );
	deepEqual( Stem("zoológico"), "zoológ" );
	deepEqual( Stem("zoomp"), "zoomp" );
	deepEqual( Stem("zul"), "zul" );
	deepEqual( Stem("zumbi"), "zumb" );
	deepEqual( Stem("zumbido"), "zumb" );
});
