QUnit.test('swedish', function(){
	var Stem = snowballFactory.newStemmer('swedish').stem;
	deepEqual( Stem("a"), "a" );
	deepEqual( Stem("aaele"), "aael" );
	deepEqual( Stem("aah"), "aah" );
	deepEqual( Stem("ab"), "ab" );
	deepEqual( Stem("abba"), "abb" );
	deepEqual( Stem("abborrar"), "abborr" );
	deepEqual( Stem("abborrarna"), "abborr" );
	deepEqual( Stem("abborre"), "abborr" );
	deepEqual( Stem("abborrpinne"), "abborrpin" );
	deepEqual( Stem("abc"), "abc" );
	deepEqual( Stem("abednego"), "abednego" );
	deepEqual( Stem("abort"), "abort" );
	deepEqual( Stem("abrahams"), "abraham" );
	deepEqual( Stem("absint"), "absint" );
	deepEqual( Stem("abskons"), "abskon" );
	deepEqual( Stem("absolut"), "absolut" );
	deepEqual( Stem("ack"), "ack" );
	deepEqual( Stem("ackompanjerade"), "ackompanjer" );
	deepEqual( Stem("ackord"), "ackord" );
	deepEqual( Stem("acllerbring"), "acllerbring" );
	deepEqual( Stem("acob"), "acob" );
	deepEqual( Stem("ad"), "ad" );
	deepEqual( Stem("adclc"), "adclc" );
	deepEqual( Stem("adcle"), "adcl" );
	deepEqual( Stem("addra"), "addr" );
	deepEqual( Stem("ade"), "ade" );
	deepEqual( Stem("adeie"), "adei" );
	deepEqual( Stem("adel"), "adel" );
	deepEqual( Stem("adelc"), "adelc" );
	deepEqual( Stem("adele"), "adel" );
	deepEqual( Stem("adeles"), "adel" );
	deepEqual( Stem("adelig"), "ade" );
	deepEqual( Stem("adelns"), "adeln" );
	deepEqual( Stem("adelsdam"), "adelsdam" );
	deepEqual( Stem("adelsfröken"), "adelsfrök" );
	deepEqual( Stem("adelskalendern"), "adelskalend" );
	deepEqual( Stem("adelskalendrar"), "adelskalendr" );
	deepEqual( Stem("adelskapen"), "adelskap" );
	deepEqual( Stem("adelsman"), "adelsman" );
	deepEqual( Stem("adelsmän"), "adelsmän" );
	deepEqual( Stem("adelsvapen"), "adelsvap" );
	deepEqual( Stem("aderton"), "aderton" );
	deepEqual( Stem("adertonde"), "adertond" );
	deepEqual( Stem("adertonhundratalet"), "adertonhundratalet" );
	deepEqual( Stem("adertonskilling"), "adertonskilling" );
	deepEqual( Stem("adjunkt"), "adjunk" );
	deepEqual( Stem("adjunkten"), "adjunk" );
	deepEqual( Stem("adjunktur"), "adjunktur" );
	deepEqual( Stem("adjö"), "adjö" );
	deepEqual( Stem("adlades"), "adl" );
	deepEqual( Stem("adler"), "adl" );
	deepEqual( Stem("adlerbeth"), "adlerbeth" );
	deepEqual( Stem("adlig"), "adl" );
	deepEqual( Stem("adliga"), "adl" );
	deepEqual( Stem("adligt"), "adl" );
	deepEqual( Stem("adolfs"), "adolf" );
	deepEqual( Stem("adopterad"), "adopter" );
	deepEqual( Stem("adopterade"), "adopter" );
	deepEqual( Stem("adoratör"), "adoratör" );
	deepEqual( Stem("adress"), "adress" );
	deepEqual( Stem("adressen"), "adress" );
	deepEqual( Stem("adressera"), "adresser" );
	deepEqual( Stem("adresserade"), "adresser" );
	deepEqual( Stem("adresserat"), "adresser" );
	deepEqual( Stem("adt"), "adt" );
	deepEqual( Stem("advent"), "advent" );
	deepEqual( Stem("advoceras"), "advocer" );
	deepEqual( Stem("advokat"), "advok" );
	deepEqual( Stem("advokatyr"), "advokatyr" );
	deepEqual( Stem("aek"), "aek" );
	deepEqual( Stem("aet"), "aet" );
	deepEqual( Stem("aeternitatis"), "aeternitatis" );
	deepEqual( Stem("af"), "af" );
	deepEqual( Stem("afbetalning"), "afbetalning" );
	deepEqual( Stem("afbida"), "afbid" );
	deepEqual( Stem("afbrott"), "afbrot" );
	deepEqual( Stem("afbrutna"), "afbrutn" );
	deepEqual( Stem("afbryta"), "afbryt" );
	deepEqual( Stem("afbröt"), "afbröt" );
	deepEqual( Stem("afdagatagne"), "afdagatagn" );
	deepEqual( Stem("afdrag"), "afdrag" );
	deepEqual( Stem("afdukadt"), "afdukad" );
	deepEqual( Stem("affaires"), "affair" );
	deepEqual( Stem("affallen"), "affall" );
	deepEqual( Stem("affekterade"), "affekter" );
	deepEqual( Stem("affär"), "affär" );
	deepEqual( Stem("affärdande"), "affärd" );
	deepEqual( Stem("affären"), "affär" );
	deepEqual( Stem("affärer"), "affär" );
	deepEqual( Stem("affärerna"), "affär" );
	deepEqual( Stem("affärernas"), "affär" );
	deepEqual( Stem("affärsbrev"), "affärsbrev" );
	deepEqual( Stem("affärsman"), "affärsman" );
	deepEqual( Stem("affärsmannen"), "affärsman" );
	deepEqual( Stem("affärsmannens"), "affärsman" );
	deepEqual( Stem("affärsmin"), "affärsmin" );
	deepEqual( Stem("affärsmässig"), "affärsmäss" );
	deepEqual( Stem("affärsmässiga"), "affärsmäss" );
	deepEqual( Stem("affärsmässigt"), "affärsmäss" );
	deepEqual( Stem("affärsställning"), "affärsställning" );
	deepEqual( Stem("affärsställningen"), "affärsställning" );
	deepEqual( Stem("affärsvänner"), "affärsvän" );
	deepEqual( Stem("afgjord"), "afgjord" );
	deepEqual( Stem("afgjordt"), "afgjord" );
	deepEqual( Stem("afgjort"), "afgjort" );
	deepEqual( Stem("afgrunden"), "afgrund" );
	deepEqual( Stem("afgud"), "afgud" );
	deepEqual( Stem("afgudade"), "afgud" );
	deepEqual( Stem("afgudalika"), "afgudalik" );
	deepEqual( Stem("afgöra"), "afgör" );
	deepEqual( Stem("afhandla"), "afhandl" );
	deepEqual( Stem("afhemta"), "afhemt" );
	deepEqual( Stem("afhjelpa"), "afhjelp" );
	deepEqual( Stem("afhuggen"), "afhugg" );
	deepEqual( Stem("afhålla"), "afhåll" );
	deepEqual( Stem("afhållen"), "afhåll" );
	deepEqual( Stem("afhölja"), "afhölj" );
	deepEqual( Stem("afhöll"), "afhöll" );
	deepEqual( Stem("afhöra"), "afhör" );
	deepEqual( Stem("afhörandet"), "afhör" );
	deepEqual( Stem("afhörde"), "afhörd" );
	deepEqual( Stem("afhört"), "afhört" );
	deepEqual( Stem("afklippt"), "afklippt" );
	deepEqual( Stem("afklädandet"), "afkläd" );
	deepEqual( Stem("afkomman"), "afkomman" );
	deepEqual( Stem("aflagda"), "aflag" );
	deepEqual( Stem("aflyftat"), "aflyft" );
	deepEqual( Stem("afläggare"), "aflägg" );
	deepEqual( Stem("aflägsen"), "aflägs" );
	deepEqual( Stem("aflägsna"), "aflägsn" );
	deepEqual( Stem("aflägsnade"), "aflägsn" );
	deepEqual( Stem("aflägsnare"), "aflägsn" );
	deepEqual( Stem("aflägsnat"), "aflägsn" );
	deepEqual( Stem("aflöper"), "aflöp" );
	deepEqual( Stem("afmagrade"), "afmagr" );
	deepEqual( Stem("afmätta"), "afmät" );
	deepEqual( Stem("afmålade"), "afmål" );
	deepEqual( Stem("afplanka"), "afplank" );
	deepEqual( Stem("afpressade"), "afpress" );
	deepEqual( Stem("afresa"), "afres" );
	deepEqual( Stem("afresan"), "afresan" );
	deepEqual( Stem("afreste"), "afrest" );
	deepEqual( Stem("afri"), "afri" );
	deepEqual( Stem("afrika"), "afrik" );
	deepEqual( Stem("afrikahettan"), "afrikahettan" );
	deepEqual( Stem("afsagt"), "afsag" );
	deepEqual( Stem("afsats"), "afsat" );
	deepEqual( Stem("afse"), "afs" );
	deepEqual( Stem("afseende"), "afseend" );
	deepEqual( Stem("afseenden"), "afseend" );
	deepEqual( Stem("afsides"), "afsid" );
	deepEqual( Stem("afskaffande"), "afskaff" );
	deepEqual( Stem("afsked"), "afsked" );
	deepEqual( Stem("afskedshelsning"), "afskedshelsning" );
	deepEqual( Stem("afskedskopp"), "afskedskopp" );
	deepEqual( Stem("afskedsstunden"), "afskedsstund" );
	deepEqual( Stem("afskilda"), "afskild" );
	deepEqual( Stem("afskilde"), "afskild" );
	deepEqual( Stem("afskurit"), "afskurit" );
	deepEqual( Stem("afsky"), "afsky" );
	deepEqual( Stem("afslag"), "afslag" );
	deepEqual( Stem("afslet"), "afslet" );
	deepEqual( Stem("afslog"), "afslog" );
	deepEqual( Stem("afsluta"), "afslut" );
	deepEqual( Stem("afslutande"), "afslut" );
	deepEqual( Stem("afslutat"), "afslut" );
	deepEqual( Stem("afspisa"), "afspis" );
	deepEqual( Stem("afsteg"), "afsteg" );
	deepEqual( Stem("afstyrka"), "afstyrk" );
	deepEqual( Stem("afstyrkt"), "afstyrk" );
	deepEqual( Stem("afstå"), "afstå" );
	deepEqual( Stem("afstånd"), "afstånd" );
	deepEqual( Stem("afsändt"), "afsänd" );
	deepEqual( Stem("aftaget"), "aftaget" );
	deepEqual( Stem("aftagit"), "aftagit" );
	deepEqual( Stem("aftnar"), "aftn" );
	deepEqual( Stem("aftnarna"), "aftn" );
	deepEqual( Stem("aftnarne"), "aftn" );
	deepEqual( Stem("aftog"), "aftog" );
	deepEqual( Stem("afton"), "afton" );
	deepEqual( Stem("aftonblad"), "aftonbl" );
	deepEqual( Stem("aftonbladet"), "aftonbladet" );
	deepEqual( Stem("aftonbordet"), "aftonbordet" );
	deepEqual( Stem("aftonbön"), "aftonbön" );
	deepEqual( Stem("aftonen"), "afton" );
	deepEqual( Stem("aftonens"), "afton" );
	deepEqual( Stem("aftonfläktar"), "aftonfläk" );
	deepEqual( Stem("aftonlampan"), "aftonlampan" );
	deepEqual( Stem("aftonlandet"), "aftonl" );
	deepEqual( Stem("aftonljuset"), "aftonljuset" );
	deepEqual( Stem("aftonmåltid"), "aftonmåltid" );
	deepEqual( Stem("aftonmåltiden"), "aftonmåltid" );
	deepEqual( Stem("aftonpipan"), "aftonpipan" );
	deepEqual( Stem("aftonpromenad"), "aftonpromen" );
	deepEqual( Stem("aftonringningen"), "aftonringning" );
	deepEqual( Stem("aftons"), "afton" );
	deepEqual( Stem("aftonsken"), "aftonsk" );
	deepEqual( Stem("aftonstjärnan"), "aftonstjärnan" );
	deepEqual( Stem("aftonstund"), "aftonstund" );
	deepEqual( Stem("aftonsällskap"), "aftonsällskap" );
	deepEqual( Stem("aftonvinden"), "aftonvind" );
	deepEqual( Stem("aftvungit"), "aftvungit" );
	deepEqual( Stem("afund"), "afund" );
	deepEqual( Stem("afundsjuka"), "afundsjuk" );
	deepEqual( Stem("afundsvärd"), "afundsvärd" );
	deepEqual( Stem("afundsvärdast"), "afundsvärd" );
	deepEqual( Stem("afvakta"), "afvak" );
	deepEqual( Stem("afvaktade"), "afvak" );
	deepEqual( Stem("afvika"), "afvik" );
	deepEqual( Stem("afvoghet"), "afvog" );
	deepEqual( Stem("afväpnade"), "afväpn" );
	deepEqual( Stem("afväpnades"), "afväpn" );
	deepEqual( Stem("aga"), "aga" );
	deepEqual( Stem("agan"), "agan" );
	deepEqual( Stem("agaren"), "agar" );
	deepEqual( Stem("agda"), "agd" );
	deepEqual( Stem("agde"), "agd" );
	deepEqual( Stem("age"), "age" );
	deepEqual( Stem("agent"), "agent" );
	deepEqual( Stem("agera"), "ager" );
	deepEqual( Stem("agerande"), "ager" );
	deepEqual( Stem("agg"), "agg" );
	deepEqual( Stem("aggande"), "agg" );
	deepEqual( Stem("agn"), "agn" );
	deepEqual( Stem("agnar"), "agn" );
	deepEqual( Stem("agnes"), "agn" );
	deepEqual( Stem("agnet"), "agnet" );
	deepEqual( Stem("ah"), "ah" );
	deepEqual( Stem("air"), "air" );
	deepEqual( Stem("aj"), "aj" );
	deepEqual( Stem("ak"), "ak" );
	deepEqual( Stem("akademien"), "akademi" );
	deepEqual( Stem("akademikamrat"), "akademikamr" );
	deepEqual( Stem("akademikamrater"), "akademikamrat" );
	deepEqual( Stem("akademitid"), "akademitid" );
	deepEqual( Stem("akardroskor"), "akardrosk" );
	deepEqual( Stem("akrarna"), "akr" );
	deepEqual( Stem("akrobat"), "akrob" );
	deepEqual( Stem("aksgrå"), "aksgrå" );
	deepEqual( Stem("akt"), "akt" );
	deepEqual( Stem("akta"), "akt" );
	deepEqual( Stem("aktad"), "akt" );
	deepEqual( Stem("aktade"), "akt" );
	deepEqual( Stem("aktar"), "akt" );
	deepEqual( Stem("aktas"), "akt" );
	deepEqual( Stem("aktat"), "akt" );
	deepEqual( Stem("akten"), "akt" );
	deepEqual( Stem("akterut"), "akterut" );
	deepEqual( Stem("aktiebolag"), "aktiebolag" );
	deepEqual( Stem("aktier"), "akti" );
	deepEqual( Stem("aktierna"), "akti" );
	deepEqual( Stem("aktning"), "aktning" );
	deepEqual( Stem("aktningen"), "aktning" );
	deepEqual( Stem("aktningsfull"), "aktningsfull" );
	deepEqual( Stem("aktningsfullt"), "aktningsfull" );
	deepEqual( Stem("aktningsvärd"), "aktningsvärd" );
	deepEqual( Stem("aktningsvärda"), "aktningsvärd" );
	deepEqual( Stem("aktningsvärde"), "aktningsvärd" );
	deepEqual( Stem("aktningsvärt"), "aktningsvärt" );
	deepEqual( Stem("aktsamt"), "aktsamt" );
	deepEqual( Stem("aktuella"), "aktuell" );
	deepEqual( Stem("aktör"), "aktör" );
	deepEqual( Stem("akva"), "akv" );
	deepEqual( Stem("akvavit"), "akvavit" );
	deepEqual( Stem("al"), "al" );
	deepEqual( Stem("alabaster"), "alabast" );
	deepEqual( Stem("alarmera"), "alarmer" );
	deepEqual( Stem("albuske"), "albusk" );
	deepEqual( Stem("aldng"), "aldng" );
	deepEqual( Stem("aldrig"), "aldr" );
	deepEqual( Stem("alexander"), "alexand" );
	deepEqual( Stem("alfred"), "alfred" );
	deepEqual( Stem("alfvar"), "alfv" );
	deepEqual( Stem("algeriet"), "algeriet" );
	deepEqual( Stem("alice"), "alic" );
	deepEqual( Stem("alkohol"), "alkohol" );
	deepEqual( Stem("alkoholister"), "alkoholist" );
	deepEqual( Stem("alkov"), "alkov" );
	deepEqual( Stem("all"), "all" );
	deepEqual( Stem("alla"), "all" );
	deepEqual( Stem("allan"), "allan" );
	deepEqual( Stem("allas"), "all" );
	deepEqual( Stem("alldaglig"), "alldag" );
	deepEqual( Stem("alldagliga"), "alldag" );
	deepEqual( Stem("alldagligt"), "alldag" );
	deepEqual( Stem("alldeles"), "alldel" );
	deepEqual( Stem("alldenstund"), "alldenstund" );
	deepEqual( Stem("alle"), "all" );
	deepEqual( Stem("alleens"), "alle" );
	deepEqual( Stem("alleer"), "alle" );
	deepEqual( Stem("alleerna"), "alle" );
	deepEqual( Stem("allegori"), "allegori" );
	deepEqual( Stem("allehanda"), "allehand" );
	deepEqual( Stem("allehandaunderliga"), "allehandaunder" );
	deepEqual( Stem("allen"), "all" );
	deepEqual( Stem("allena"), "allen" );
	deepEqual( Stem("allenast"), "allen" );
	deepEqual( Stem("allesam"), "allesam" );
	deepEqual( Stem("allesamman"), "allesamman" );
	deepEqual( Stem("allesammans"), "allesamman" );
	deepEqual( Stem("allhelgonadag"), "allhelgonadag" );
	deepEqual( Stem("allihop"), "allihop" );
	deepEqual( Stem("allmakt"), "allmak" );
	deepEqual( Stem("allmoge"), "allmog" );
	deepEqual( Stem("allmogen"), "allmog" );
	deepEqual( Stem("allmogens"), "allmog" );
	deepEqual( Stem("allmän"), "allmän" );
	deepEqual( Stem("allmänhet"), "allmän" );
	deepEqual( Stem("allmänheten"), "allmän" );
	deepEqual( Stem("allmänhetens"), "allmän" );
	deepEqual( Stem("allmänna"), "allmän" );
	deepEqual( Stem("allmännare"), "allmän" );
	deepEqual( Stem("allmänt"), "allmänt" );
	deepEqual( Stem("allo"), "allo" );
	deepEqual( Stem("allod"), "allod" );
	deepEqual( Stem("allom"), "allom" );
	deepEqual( Stem("allra"), "allr" );
	deepEqual( Stem("allraminst"), "allraminst" );
	deepEqual( Stem("alls"), "all" );
	deepEqual( Stem("allsköns"), "allskön" );
	deepEqual( Stem("allsmägtige"), "allsmägt" );
	deepEqual( Stem("allsmäktig"), "allsmäkt" );
	deepEqual( Stem("allsmäktiga"), "allsmäkt" );
	deepEqual( Stem("allt"), "allt" );
	deepEqual( Stem("alltfor"), "alltf" );
	deepEqual( Stem("alltfort"), "alltfort" );
	deepEqual( Stem("alltför"), "alltför" );
	deepEqual( Stem("alltid"), "alltid" );
	deepEqual( Stem("alltihop"), "alltihop" );
	deepEqual( Stem("alltihopa"), "alltihop" );
	deepEqual( Stem("allting"), "allting" );
	deepEqual( Stem("alltjämt"), "alltjämt" );
	deepEqual( Stem("alltkl"), "alltkl" );
	deepEqual( Stem("alltld"), "alltld" );
	deepEqual( Stem("alltmer"), "alltm" );
	deepEqual( Stem("alltmera"), "alltmer" );
	deepEqual( Stem("alltomkring"), "alltomkring" );
	deepEqual( Stem("alltsa"), "allts" );
	deepEqual( Stem("alltsammams"), "alltsammam" );
	deepEqual( Stem("alltsamman"), "alltsamman" );
	deepEqual( Stem("alltsammans"), "alltsamman" );
	deepEqual( Stem("alltsedan"), "alltsedan" );
	deepEqual( Stem("alltså"), "alltså" );
	deepEqual( Stem("alltäammans"), "alltäamman" );
	deepEqual( Stem("allvar"), "allv" );
	deepEqual( Stem("allvaret"), "allvaret" );
	deepEqual( Stem("allvarlig"), "allvar" );
	deepEqual( Stem("allvarliga"), "allvar" );
	deepEqual( Stem("allvarligare"), "allvar" );
	deepEqual( Stem("allvarligt"), "allvar" );
	deepEqual( Stem("allvarsam"), "allvarsam" );
	deepEqual( Stem("allvarsamma"), "allvarsamm" );
	deepEqual( Stem("allvarsammare"), "allvarsamm" );
	deepEqual( Stem("allvarsamme"), "allvarsamm" );
	deepEqual( Stem("allvarsamt"), "allvarsamt" );
	deepEqual( Stem("alm"), "alm" );
	deepEqual( Stem("almanacka"), "almanack" );
	deepEqual( Stem("almanackan"), "almanackan" );
	deepEqual( Stem("almar"), "alm" );
	deepEqual( Stem("aln"), "aln" );
	deepEqual( Stem("alnar"), "aln" );
	deepEqual( Stem("alsing"), "alsing" );
	deepEqual( Stem("alska"), "alsk" );
	deepEqual( Stem("alskade"), "alsk" );
	deepEqual( Stem("alskande"), "alsk" );
	deepEqual( Stem("alskar"), "alsk" );
	deepEqual( Stem("alstern"), "alst" );
	deepEqual( Stem("alstra"), "alstr" );
	deepEqual( Stem("alstrade"), "alstr" );
	deepEqual( Stem("alstring"), "alstring" );
	deepEqual( Stem("alt"), "alt" );
	deepEqual( Stem("alta"), "alt" );
	deepEqual( Stem("altare"), "alt" );
	deepEqual( Stem("altarens"), "alt" );
	deepEqual( Stem("altaret"), "altaret" );
	deepEqual( Stem("altarets"), "altaret" );
	deepEqual( Stem("altarrunden"), "altarrund" );
	deepEqual( Stem("altartavla"), "altartavl" );
	deepEqual( Stem("altartavlan"), "altartavlan" );
	deepEqual( Stem("altartavlor"), "altartavl" );
	deepEqual( Stem("altartavlorna"), "altartavl" );
	deepEqual( Stem("altid"), "altid" );
	deepEqual( Stem("am"), "am" );
	deepEqual( Stem("amarant"), "amarant" );
	deepEqual( Stem("ambrosius"), "ambrosius" );
	deepEqual( Stem("amen"), "amen" );
	deepEqual( Stem("amerika"), "amerik" );
	deepEqual( Stem("amerikansk"), "amerikansk" );
	deepEqual( Stem("amerikanskt"), "amerikansk" );
	deepEqual( Stem("ametist"), "ametist" );
	deepEqual( Stem("ametister"), "ametist" );
	deepEqual( Stem("ametyst"), "ametyst" );
	deepEqual( Stem("amlan"), "amlan" );
	deepEqual( Stem("amlar"), "aml" );
	deepEqual( Stem("amlat"), "aml" );
	deepEqual( Stem("ammar"), "amm" );
	deepEqual( Stem("amnärkt"), "amnärk" );
	deepEqual( Stem("amo"), "amo" );
	deepEqual( Stem("amor"), "amor" );
	deepEqual( Stem("amour"), "amour" );
	deepEqual( Stem("amours"), "amour" );
	deepEqual( Stem("amp"), "amp" );
	deepEqual( Stem("ampall"), "ampall" );
	deepEqual( Stem("ampla"), "ampl" );
	deepEqual( Stem("amsikte"), "amsik" );
	deepEqual( Stem("amsiktet"), "amsiktet" );
	deepEqual( Stem("an"), "an" );
	deepEqual( Stem("ana"), "ana" );
	deepEqual( Stem("anade"), "anad" );
	deepEqual( Stem("anamma"), "anamm" );
	deepEqual( Stem("anande"), "anand" );
	deepEqual( Stem("anar"), "anar" );
	deepEqual( Stem("anas"), "anas" );
	deepEqual( Stem("anat"), "anat" );
	deepEqual( Stem("anbefalde"), "anbefald" );
	deepEqual( Stem("anbefallde"), "anbefalld" );
	deepEqual( Stem("anbelangar"), "anbelang" );
	deepEqual( Stem("anblick"), "anblick" );
	deepEqual( Stem("anblicken"), "anblick" );
	deepEqual( Stem("anbud"), "anbud" );
	deepEqual( Stem("anbudet"), "anbudet" );
	deepEqual( Stem("anda"), "and" );
	deepEqual( Stem("andades"), "and" );
	deepEqual( Stem("andakt"), "andak" );
	deepEqual( Stem("andakten"), "andak" );
	deepEqual( Stem("andaktsbok"), "andaktsbok" );
	deepEqual( Stem("andaktsfull"), "andaktsfull" );
	deepEqual( Stem("andaktsstund"), "andaktsstund" );
	deepEqual( Stem("andaktsstunder"), "andaktsstund" );
	deepEqual( Stem("andamål"), "andamål" );
	deepEqual( Stem("andan"), "andan" );
	deepEqual( Stem("andande"), "and" );
	deepEqual( Stem("andans"), "andan" );
	deepEqual( Stem("andar"), "and" );
	deepEqual( Stem("andarna"), "and" );
	deepEqual( Stem("andas"), "and" );
	deepEqual( Stem("ande"), "and" );
	deepEqual( Stem("andedrag"), "andedrag" );
	deepEqual( Stem("andedrägt"), "andedräg" );
	deepEqual( Stem("andedräkt"), "andedräk" );
	deepEqual( Stem("andedräkten"), "andedräk" );
	deepEqual( Stem("andel"), "andel" );
	deepEqual( Stem("anden"), "and" );
	deepEqual( Stem("andersen"), "anders" );
	deepEqual( Stem("andesång"), "andesång" );
	deepEqual( Stem("andetag"), "andetag" );
	deepEqual( Stem("andfadd"), "andfad" );
	deepEqual( Stem("andfatt"), "andfat" );
	deepEqual( Stem("andfådd"), "andfåd" );
	deepEqual( Stem("andfått"), "andfåt" );
	deepEqual( Stem("andlig"), "and" );
	deepEqual( Stem("andliga"), "and" );
	deepEqual( Stem("andlige"), "and" );
	deepEqual( Stem("andligen"), "and" );
	deepEqual( Stem("andligt"), "and" );
	deepEqual( Stem("andlöst"), "andlös" );
	deepEqual( Stem("andock"), "andock" );
	deepEqual( Stem("andra"), "andr" );
	deepEqual( Stem("andras"), "andr" );
	deepEqual( Stem("andre"), "andr" );
	deepEqual( Stem("andres"), "andr" );
	deepEqual( Stem("androgyn"), "androgyn" );
	deepEqual( Stem("andrum"), "andrum" );
	deepEqual( Stem("andtäppa"), "andtäpp" );
	deepEqual( Stem("andtäppan"), "andtäppan" );
	deepEqual( Stem("andäktiga"), "andäkt" );
	deepEqual( Stem("andäktigt"), "andäkt" );
	deepEqual( Stem("andå"), "andå" );
	deepEqual( Stem("anej"), "anej" );
	deepEqual( Stem("anekdot"), "anekdot" );
	deepEqual( Stem("anekdoten"), "anekdot" );
	deepEqual( Stem("anekdoter"), "anekdot" );
	deepEqual( Stem("anfall"), "anfall" );
	deepEqual( Stem("anfallen"), "anfall" );
	deepEqual( Stem("anför"), "anför" );
	deepEqual( Stem("anföra"), "anför" );
	deepEqual( Stem("anförande"), "anför" );
	deepEqual( Stem("anförda"), "anförd" );
	deepEqual( Stem("anförde"), "anförd" );
	deepEqual( Stem("anförtro"), "anförtro" );
	deepEqual( Stem("anförtrodda"), "anförtrod" );
	deepEqual( Stem("anförtrodde"), "anförtrod" );
	deepEqual( Stem("anförtroddes"), "anförtrod" );
	deepEqual( Stem("anförtrott"), "anförtrot" );
	deepEqual( Stem("anförvant"), "anförvant" );
	deepEqual( Stem("anförvanters"), "anförvanter" );
	deepEqual( Stem("angar"), "ang" );
	deepEqual( Stem("angder"), "angd" );
	deepEqual( Stem("ange"), "ang" );
	deepEqual( Stem("angeia"), "angei" );
	deepEqual( Stem("angel"), "angel" );
	deepEqual( Stem("angela"), "angel" );
	deepEqual( Stem("angelal"), "angelal" );
	deepEqual( Stem("angelas"), "angel" );
	deepEqual( Stem("angelicus"), "angelicus" );
	deepEqual( Stem("angelo"), "angelo" );
	deepEqual( Stem("angelägen"), "angeläg" );
	deepEqual( Stem("angelägenhet"), "angelägen" );
	deepEqual( Stem("angelägenheten"), "angelägen" );
	deepEqual( Stem("angelägenheter"), "angelägen" );
	deepEqual( Stem("angelägenheterna"), "angelägen" );
	deepEqual( Stem("angeläget"), "angeläget" );
	deepEqual( Stem("angelägna"), "angelägn" );
	deepEqual( Stem("angelägnare"), "angelägn" );
	deepEqual( Stem("angen"), "ang" );
	deepEqual( Stem("angenäm"), "angenäm" );
	deepEqual( Stem("angenäma"), "angenäm" );
	deepEqual( Stem("angenämt"), "angenämt" );
	deepEqual( Stem("angenärn"), "angenärn" );
	deepEqual( Stem("angerfull"), "angerfull" );
	deepEqual( Stem("angest"), "angest" );
	deepEqual( Stem("angestfull"), "angestfull" );
	deepEqual( Stem("angestfulla"), "angestfull" );
	deepEqual( Stem("angick"), "angick" );
	deepEqual( Stem("angifva"), "angifv" );
	deepEqual( Stem("angifvelse"), "angifv" );
	deepEqual( Stem("angivits"), "angivit" );
	deepEqual( Stem("angrepp"), "angrepp" );
	deepEqual( Stem("angripen"), "angrip" );
	deepEqual( Stem("angriper"), "angrip" );
	deepEqual( Stem("angränsande"), "angräns" );
	deepEqual( Stem("angående"), "angåend" );
	deepEqual( Stem("angår"), "angår" );
	deepEqual( Stem("anholt"), "anholt" );
	deepEqual( Stem("anhålla"), "anhåll" );
	deepEqual( Stem("anhållan"), "anhållan" );
	deepEqual( Stem("anhåller"), "anhåll" );
	deepEqual( Stem("anhöll"), "anhöll" );
	deepEqual( Stem("anhöriga"), "anhör" );
	deepEqual( Stem("aning"), "aning" );
	deepEqual( Stem("aningar"), "aning" );
	deepEqual( Stem("aningen"), "aning" );
	deepEqual( Stem("anjovis"), "anjovis" );
	deepEqual( Stem("ankar"), "ank" );
	deepEqual( Stem("ankare"), "ank" );
	deepEqual( Stem("anklaga"), "anklag" );
	deepEqual( Stem("anklagade"), "anklag" );
	deepEqual( Stem("anklagande"), "anklag" );
	deepEqual( Stem("anklagelsen"), "anklag" );
	deepEqual( Stem("anklagelser"), "anklag" );
	deepEqual( Stem("ankom"), "ankom" );
	deepEqual( Stem("ankommet"), "ankommet" );
	deepEqual( Stem("ankomst"), "ankomst" );
	deepEqual( Stem("ankomsten"), "ankomst" );
	deepEqual( Stem("anlag"), "anlag" );
	deepEqual( Stem("anlagd"), "anlag" );
	deepEqual( Stem("anlagen"), "anlag" );
	deepEqual( Stem("anledning"), "anledning" );
	deepEqual( Stem("anledningar"), "anledning" );
	deepEqual( Stem("anledningarna"), "anledning" );
	deepEqual( Stem("anledningen"), "anledning" );
	deepEqual( Stem("anlet"), "anlet" );
	deepEqual( Stem("anlete"), "anlet" );
	deepEqual( Stem("anletes"), "anlet" );
	deepEqual( Stem("anletsdrag"), "anletsdrag" );
	deepEqual( Stem("anletsdragen"), "anletsdrag" );
	deepEqual( Stem("anlita"), "anlit" );
	deepEqual( Stem("anlitad"), "anlit" );
	deepEqual( Stem("anlitades"), "anlit" );
	deepEqual( Stem("anlitar"), "anlit" );
	deepEqual( Stem("anläggning"), "anläggning" );
	deepEqual( Stem("anlände"), "anländ" );
	deepEqual( Stem("anlänt"), "anlänt" );
	deepEqual( Stem("anmaning"), "anmaning" );
	deepEqual( Stem("anmäla"), "anmäl" );
	deepEqual( Stem("anmälan"), "anmälan" );
	deepEqual( Stem("anmälandet"), "anmäl" );
	deepEqual( Stem("anmäler"), "anmäl" );
	deepEqual( Stem("anmält"), "anmält" );
	deepEqual( Stem("anmärk"), "anmärk" );
	deepEqual( Stem("anmärka"), "anmärk" );
	deepEqual( Stem("anmärkning"), "anmärkning" );
	deepEqual( Stem("anmärkningar"), "anmärkning" );
	deepEqual( Stem("anmärkningen"), "anmärkning" );
	deepEqual( Stem("anmärkningsvärda"), "anmärkningsvärd" );
	deepEqual( Stem("anmärkningsvärdt"), "anmärkningsvärd" );
	deepEqual( Stem("anmärkningsvärt"), "anmärkningsvärt" );
	deepEqual( Stem("anmärktc"), "anmärktc" );
	deepEqual( Stem("anmärkte"), "anmärk" );
	deepEqual( Stem("ann"), "ann" );
	deepEqual( Stem("anna"), "ann" );
	deepEqual( Stem("annalkande"), "annalk" );
	deepEqual( Stem("annan"), "annan" );
	deepEqual( Stem("annans"), "annan" );
	deepEqual( Stem("annars"), "annar" );
	deepEqual( Stem("annat"), "ann" );
	deepEqual( Stem("annexkyrkan"), "annexkyrkan" );
	deepEqual( Stem("annika"), "annik" );
	deepEqual( Stem("annikas"), "annik" );
	deepEqual( Stem("annons"), "annon" );
	deepEqual( Stem("annonsen"), "annons" );
	deepEqual( Stem("annonser"), "annons" );
	deepEqual( Stem("annonsera"), "annonser" );
	deepEqual( Stem("annonserades"), "annonser" );
	deepEqual( Stem("annor"), "ann" );
	deepEqual( Stem("annorlm"), "annorlm" );
	deepEqual( Stem("annorlunda"), "annorlund" );
	deepEqual( Stem("annorstädes"), "annorstäd" );
	deepEqual( Stem("annoterade"), "annoter" );
	deepEqual( Stem("anns"), "ann" );
	deepEqual( Stem("annu"), "annu" );
	deepEqual( Stem("anonymt"), "anonymt" );
	deepEqual( Stem("anordnande"), "anordn" );
	deepEqual( Stem("anordningar"), "anordning" );
	deepEqual( Stem("anordningen"), "anordning" );
	deepEqual( Stem("anpassningsförmåga"), "anpassningsförmåg" );
	deepEqual( Stem("anrep"), "anrep" );
	deepEqual( Stem("anropa"), "anrop" );
	deepEqual( Stem("anropade"), "anrop" );
	deepEqual( Stem("anrättning"), "anrättning" );
	deepEqual( Stem("anrättningen"), "anrättning" );
	deepEqual( Stem("ans"), "ans" );
	deepEqual( Stem("ansa"), "ans" );
	deepEqual( Stem("ansade"), "ans" );
	deepEqual( Stem("ansag"), "ansag" );
	deepEqual( Stem("ansatt"), "ansat" );
	deepEqual( Stem("ansatte"), "ansat" );
	deepEqual( Stem("ansattes"), "ansat" );
	deepEqual( Stem("anse"), "ans" );
	deepEqual( Stem("ansedd"), "ansed" );
	deepEqual( Stem("anseende"), "anseend" );
	deepEqual( Stem("anser"), "ans" );
	deepEqual( Stem("anses"), "ans" );
	deepEqual( Stem("ansett"), "anset" );
	deepEqual( Stem("ansigte"), "ans" );
	deepEqual( Stem("ansigtes"), "ans" );
	deepEqual( Stem("ansigtet"), "ansigtet" );
	deepEqual( Stem("ansigtsdrag"), "ansigtsdrag" );
	deepEqual( Stem("ansigtsdragen"), "ansigtsdrag" );
	deepEqual( Stem("ansigtsmusklerna"), "ansigtsmuskl" );
	deepEqual( Stem("ansikte"), "ansik" );
	deepEqual( Stem("ansikten"), "ansik" );
	deepEqual( Stem("ansiktena"), "ansikten" );
	deepEqual( Stem("ansiktet"), "ansiktet" );
	deepEqual( Stem("ansiktets"), "ansiktet" );
	deepEqual( Stem("ansiktsdragens"), "ansiktsdrag" );
	deepEqual( Stem("ansiktshy"), "ansiktshy" );
	deepEqual( Stem("ansiktslupus"), "ansiktslupus" );
	deepEqual( Stem("ansiktsmuskler"), "ansiktsmuskl" );
	deepEqual( Stem("ansiktsuttryck"), "ansiktsuttryck" );
	deepEqual( Stem("ansiktsuttrycket"), "ansiktsuttrycket" );
	deepEqual( Stem("ansiktsytan"), "ansiktsytan" );
	deepEqual( Stem("anskaffa"), "anskaff" );
	deepEqual( Stem("anskaffades"), "anskaff" );
	deepEqual( Stem("anskaffas"), "anskaff" );
	deepEqual( Stem("anskrämliga"), "anskräm" );
	deepEqual( Stem("anslag"), "anslag" );
	deepEqual( Stem("anslagen"), "anslag" );
	deepEqual( Stem("anslagit"), "anslagit" );
	deepEqual( Stem("anslog"), "anslog" );
	deepEqual( Stem("ansluta"), "anslut" );
	deepEqual( Stem("anslå"), "anslå" );
	deepEqual( Stem("anspelning"), "anspelning" );
	deepEqual( Stem("ansprakslösa"), "ansprakslös" );
	deepEqual( Stem("anspråk"), "anspråk" );
	deepEqual( Stem("anspråket"), "anspråket" );
	deepEqual( Stem("anspråksfulla"), "anspråksfull" );
	deepEqual( Stem("anspråkslös"), "anspråkslös" );
	deepEqual( Stem("anspråkslösa"), "anspråkslös" );
	deepEqual( Stem("anspråkslösheten"), "anspråkslös" );
	deepEqual( Stem("anspråkslöst"), "anspråkslös" );
	deepEqual( Stem("anstalt"), "anstalt" );
	deepEqual( Stem("anstalten"), "anstalt" );
	deepEqual( Stem("anstalter"), "anstalt" );
	deepEqual( Stem("anstod"), "anstod" );
	deepEqual( Stem("anstodo"), "anstodo" );
	deepEqual( Stem("anstrykning"), "anstrykning" );
	deepEqual( Stem("anstränga"), "ansträng" );
	deepEqual( Stem("ansträngande"), "ansträng" );
	deepEqual( Stem("ansträngd"), "ansträng" );
	deepEqual( Stem("ansträngda"), "ansträng" );
	deepEqual( Stem("ansträngde"), "ansträng" );
	deepEqual( Stem("anstränger"), "ansträng" );
	deepEqual( Stem("ansträngning"), "ansträngning" );
	deepEqual( Stem("ansträngningar"), "ansträngning" );
	deepEqual( Stem("ansträngningen"), "ansträngning" );
	deepEqual( Stem("ansträngt"), "ansträng" );
	deepEqual( Stem("anställning"), "anställning" );
	deepEqual( Stem("anständig"), "anständ" );
	deepEqual( Stem("anständigt"), "anständ" );
	deepEqual( Stem("anstå"), "anstå" );
	deepEqual( Stem("anstånd"), "anstånd" );
	deepEqual( Stem("anstår"), "anstår" );
	deepEqual( Stem("anstått"), "anståt" );
	deepEqual( Stem("anstötlig"), "anstöt" );
	deepEqual( Stem("anstötligt"), "anstöt" );
	deepEqual( Stem("ansvar"), "ansv" );
	deepEqual( Stem("ansvara"), "ansvar" );
	deepEqual( Stem("ansvarar"), "ansvar" );
	deepEqual( Stem("ansvaret"), "ansvaret" );
	deepEqual( Stem("ansvarsfull"), "ansvarsfull" );
	deepEqual( Stem("ansätta"), "ansät" );
	deepEqual( Stem("ansåg"), "ansåg" );
	deepEqual( Stem("ansåge"), "ansåg" );
	deepEqual( Stem("ansågo"), "ansågo" );
	deepEqual( Stem("ansågs"), "ansåg" );
	deepEqual( Stem("ant"), "ant" );
	deepEqual( Stem("antag"), "antag" );
	deepEqual( Stem("antaga"), "antag" );
	deepEqual( Stem("antagandet"), "antag" );
	deepEqual( Stem("antagas"), "antag" );
	deepEqual( Stem("antagen"), "antag" );
	deepEqual( Stem("antager"), "antag" );
	deepEqual( Stem("antages"), "antag" );
	deepEqual( Stem("antagit"), "antagit" );
	deepEqual( Stem("antagligt"), "antag" );
	deepEqual( Stem("antagna"), "antagn" );
	deepEqual( Stem("antal"), "antal" );
	deepEqual( Stem("antalet"), "antalet" );
	deepEqual( Stem("antar"), "ant" );
	deepEqual( Stem("antastad"), "antast" );
	deepEqual( Stem("anteckna"), "anteckn" );
	deepEqual( Stem("antecknat"), "anteckn" );
	deepEqual( Stem("anteckningar"), "anteckning" );
	deepEqual( Stem("anteckningarna"), "anteckning" );
	deepEqual( Stem("anteckningsbok"), "anteckningsbok" );
	deepEqual( Stem("anteckningsböcker"), "anteckningsböck" );
	deepEqual( Stem("antenner"), "anten" );
	deepEqual( Stem("antidreyfusistisk"), "antidreyfusistisk" );
	deepEqual( Stem("antik"), "antik" );
	deepEqual( Stem("antika"), "antik" );
	deepEqual( Stem("antikvariat"), "antikvari" );
	deepEqual( Stem("antikviteter"), "antikvitet" );
	deepEqual( Stem("antingen"), "anting" );
	deepEqual( Stem("antisemitism"), "antisemitism" );
	deepEqual( Stem("antligen"), "ant" );
	deepEqual( Stem("antog"), "antog" );
	deepEqual( Stem("antogo"), "antogo" );
	deepEqual( Stem("antogos"), "antogo" );
	deepEqual( Stem("antogs"), "antog" );
	deepEqual( Stem("antoinettefichyn"), "antoinettefichyn" );
	deepEqual( Stem("anton"), "anton" );
	deepEqual( Stem("antons"), "anton" );
	deepEqual( Stem("anträd"), "anträd" );
	deepEqual( Stem("anträdde"), "anträd" );
	deepEqual( Stem("anträddes"), "anträd" );
	deepEqual( Stem("antydan"), "antydan" );
	deepEqual( Stem("antydda"), "antyd" );
	deepEqual( Stem("antydde"), "antyd" );
	deepEqual( Stem("antyder"), "antyd" );
	deepEqual( Stem("antydningar"), "antydning" );
	deepEqual( Stem("antytt"), "antyt" );
	deepEqual( Stem("antågande"), "antåg" );
	deepEqual( Stem("anvisad"), "anvis" );
	deepEqual( Stem("anvisade"), "anvis" );
	deepEqual( Stem("anvisat"), "anvis" );
	deepEqual( Stem("använd"), "använd" );
	deepEqual( Stem("använda"), "använd" );
	deepEqual( Stem("användas"), "använd" );
	deepEqual( Stem("använde"), "använd" );
	deepEqual( Stem("använder"), "använd" );
	deepEqual( Stem("användes"), "använd" );
	deepEqual( Stem("användning"), "användning" );
	deepEqual( Stem("användt"), "använd" );
	deepEqual( Stem("använt"), "använt" );
	deepEqual( Stem("använts"), "använt" );
	deepEqual( Stem("apade"), "apad" );
	deepEqual( Stem("apel"), "apel" );
	deepEqual( Stem("apeltelning"), "apeltelning" );
	deepEqual( Stem("apgossen"), "apgoss" );
	deepEqual( Stem("apkäkar"), "apkäk" );
	deepEqual( Stem("aplar"), "apl" );
	deepEqual( Stem("apollinaris"), "apollinaris" );
	deepEqual( Stem("apostlarne"), "apostl" );
	deepEqual( Stem("apotekare"), "apotek" );
	deepEqual( Stem("apotekarens"), "apotek" );
	deepEqual( Stem("apoteket"), "apoteket" );
	deepEqual( Stem("apparanser"), "apparans" );
	deepEqual( Stem("apparition"), "apparition" );
	deepEqual( Stem("applåd"), "applåd" );
	deepEqual( Stem("applådcr"), "applådcr" );
	deepEqual( Stem("applåder"), "applåd" );
	deepEqual( Stem("applådsalvor"), "applådsalv" );
	deepEqual( Stem("april"), "april" );
	deepEqual( Stem("aprildag"), "aprildag" );
	deepEqual( Stem("apropos"), "apropo" );
	deepEqual( Stem("apropå"), "apropå" );
	deepEqual( Stem("aptit"), "aptit" );
	deepEqual( Stem("ar"), "ar" );
	deepEqual( Stem("arabella"), "arabell" );
	deepEqual( Stem("aramell"), "aramell" );
	deepEqual( Stem("arangerad"), "aranger" );
	deepEqual( Stem("aratal"), "aratal" );
	deepEqual( Stem("arbeta"), "arbet" );
	deepEqual( Stem("arbetad"), "arbet" );
	deepEqual( Stem("arbetade"), "arbet" );
	deepEqual( Stem("arbetar"), "arbet" );
	deepEqual( Stem("arbetare"), "arbet" );
	deepEqual( Stem("arbetat"), "arbet" );
	deepEqual( Stem("arbete"), "arbet" );
	deepEqual( Stem("arbeten"), "arbet" );
	deepEqual( Stem("arbeterskor"), "arbetersk" );
	deepEqual( Stem("arbetet"), "arbetet" );
	deepEqual( Stem("arbetets"), "arbetet" );
	deepEqual( Stem("arbetsam"), "arbetsam" );
	deepEqual( Stem("arbetsamhet"), "arbetsam" );
	deepEqual( Stem("arbetsamma"), "arbetsamm" );
	deepEqual( Stem("arbetsblusar"), "arbetsblus" );
	deepEqual( Stem("arbetsbord"), "arbetsbord" );
	deepEqual( Stem("arbetsbördan"), "arbetsbördan" );
	deepEqual( Stem("arbetsdag"), "arbetsdag" );
	deepEqual( Stem("arbetsdagen"), "arbetsdag" );
	deepEqual( Stem("arbetsdagern"), "arbetsdag" );
	deepEqual( Stem("arbetsdrift"), "arbetsdrift" );
	deepEqual( Stem("arbetsfordon"), "arbetsfordon" );
	deepEqual( Stem("arbetsförmåga"), "arbetsförmåg" );
	deepEqual( Stem("arbetshänderna"), "arbetshänd" );
	deepEqual( Stem("arbetskläder"), "arbetskläd" );
	deepEqual( Stem("arbetslag"), "arbetslag" );
	deepEqual( Stem("arbetsmänniskor"), "arbetsmännisk" );
	deepEqual( Stem("arbetsrum"), "arbetsrum" );
	deepEqual( Stem("arbetssamhet"), "arbetssam" );
	deepEqual( Stem("arbetstid"), "arbetstid" );
	deepEqual( Stem("arbetsåkdon"), "arbetsåkdon" );
	deepEqual( Stem("aren"), "aren" );
	deepEqual( Stem("arets"), "aret" );
	deepEqual( Stem("arftagare"), "arftag" );
	deepEqual( Stem("arför"), "arför" );
	deepEqual( Stem("arg"), "arg" );
	deepEqual( Stem("arga"), "arg" );
	deepEqual( Stem("argad"), "arg" );
	deepEqual( Stem("argt"), "argt" );
	deepEqual( Stem("argument"), "argument" );
	deepEqual( Stem("argumenterade"), "argumenter" );
	deepEqual( Stem("aristokrati"), "aristokrati" );
	deepEqual( Stem("aristokratiska"), "aristokratisk" );
	deepEqual( Stem("aristokratiskt"), "aristokratisk" );
	deepEqual( Stem("arit"), "arit" );
	deepEqual( Stem("ark"), "ark" );
	deepEqual( Stem("arkad"), "ark" );
	deepEqual( Stem("arkadisk"), "arkadisk" );
	deepEqual( Stem("arken"), "ark" );
	deepEqual( Stem("arket"), "arket" );
	deepEqual( Stem("arkets"), "arket" );
	deepEqual( Stem("arkipelag"), "arkipelag" );
	deepEqual( Stem("arm"), "arm" );
	deepEqual( Stem("arma"), "arm" );
	deepEqual( Stem("armar"), "arm" );
	deepEqual( Stem("armarna"), "arm" );
	deepEqual( Stem("armarne"), "arm" );
	deepEqual( Stem("armat"), "arm" );
	deepEqual( Stem("armbagarna"), "armbag" );
	deepEqual( Stem("armband"), "armband" );
	deepEqual( Stem("armbågar"), "armbåg" );
	deepEqual( Stem("armbågarna"), "armbåg" );
	deepEqual( Stem("armbåge"), "armbåg" );
	deepEqual( Stem("armbågen"), "armbåg" );
	deepEqual( Stem("arme"), "arm" );
	deepEqual( Stem("armen"), "arm" );
	deepEqual( Stem("armhågarna"), "armhåg" );
	deepEqual( Stem("armod"), "armod" );
	deepEqual( Stem("armodet"), "armodet" );
	deepEqual( Stem("armodets"), "armodet" );
	deepEqual( Stem("armtag"), "armtag" );
	deepEqual( Stem("arna"), "arn" );
	deepEqual( Stem("arnman"), "arnman" );
	deepEqual( Stem("arnmans"), "arnman" );
	deepEqual( Stem("arnoldson"), "arnoldson" );
	deepEqual( Stem("aro"), "aro" );
	deepEqual( Stem("aron"), "aron" );
	deepEqual( Stem("arrangerad"), "arranger" );
	deepEqual( Stem("arrangerade"), "arranger" );
	deepEqual( Stem("arrangerar"), "arranger" );
	deepEqual( Stem("arrangeringen"), "arrangering" );
	deepEqual( Stem("arren"), "arr" );
	deepEqual( Stem("arrenda"), "arrend" );
	deepEqual( Stem("arrendator"), "arrendat" );
	deepEqual( Stem("arrendatorn"), "arrendatorn" );
	deepEqual( Stem("arrendatorns"), "arrendatorn" );
	deepEqual( Stem("arrendators"), "arrendator" );
	deepEqual( Stem("arrendatorsbostadcn"), "arrendatorsbostadcn" );
	deepEqual( Stem("arrendatorsbostaden"), "arrendatorsbostad" );
	deepEqual( Stem("arrendatorsbostadens"), "arrendatorsbostad" );
	deepEqual( Stem("arrendatorsbyggnaden"), "arrendatorsbyggnad" );
	deepEqual( Stem("arrendatorsfrun"), "arrendatorsfrun" );
	deepEqual( Stem("arrer"), "arr" );
	deepEqual( Stem("arrest"), "arrest" );
	deepEqual( Stem("arsenik"), "arsenik" );
	deepEqual( Stem("art"), "art" );
	deepEqual( Stem("artade"), "art" );
	deepEqual( Stem("artar"), "art" );
	deepEqual( Stem("arten"), "art" );
	deepEqual( Stem("artificiella"), "artificiell" );
	deepEqual( Stem("artig"), "art" );
	deepEqual( Stem("artiga"), "art" );
	deepEqual( Stem("artigaste"), "art" );
	deepEqual( Stem("artige"), "art" );
	deepEqual( Stem("artighet"), "art" );
	deepEqual( Stem("artigheten"), "art" );
	deepEqual( Stem("artigheter"), "art" );
	deepEqual( Stem("artigheterna"), "art" );
	deepEqual( Stem("artighetsskratt"), "artighetsskrat" );
	deepEqual( Stem("artigt"), "art" );
	deepEqual( Stem("artikel"), "artikel" );
	deepEqual( Stem("artiklar"), "artikl" );
	deepEqual( Stem("artiklarna"), "artikl" );
	deepEqual( Stem("artistiskt"), "artistisk" );
	deepEqual( Stem("arv"), "arv" );
	deepEqual( Stem("arve"), "arv" );
	deepEqual( Stem("arvedel"), "arvedel" );
	deepEqual( Stem("arves"), "arv" );
	deepEqual( Stem("arvet"), "arvet" );
	deepEqual( Stem("arvid"), "arvid" );
	deepEqual( Stem("arvingar"), "arving" );
	deepEqual( Stem("arvingarnas"), "arving" );
	deepEqual( Stem("arvinge"), "arving" );
	deepEqual( Stem("arvingen"), "arving" );
	deepEqual( Stem("arvlös"), "arvlös" );
	deepEqual( Stem("arvsfrågan"), "arvsfrågan" );
	deepEqual( Stem("arvtagaren"), "arvtag" );
	deepEqual( Stem("arvtagerska"), "arvtagersk" );
	deepEqual( Stem("as"), "as" );
	deepEqual( Stem("asikt"), "asik" );
	deepEqual( Stem("ask"), "ask" );
	deepEqual( Stem("aska"), "ask" );
	deepEqual( Stem("askan"), "askan" );
	deepEqual( Stem("askarna"), "ask" );
	deepEqual( Stem("asken"), "ask" );
	deepEqual( Stem("askenberg"), "askenberg" );
	deepEqual( Stem("askenbergs"), "askenberg" );
	deepEqual( Stem("askgrå"), "askgrå" );
	deepEqual( Stem("asmundssons"), "asmundsson" );
	deepEqual( Stem("asp"), "asp" );
	deepEqual( Stem("aspar"), "asp" );
	deepEqual( Stem("asparna"), "asp" );
	deepEqual( Stem("associerad"), "associer" );
	deepEqual( Stem("assurerat"), "assurer" );
	deepEqual( Stem("astolf"), "astolf" );
	deepEqual( Stem("astrar"), "astr" );
	deepEqual( Stem("astrarna"), "astr" );
	deepEqual( Stem("astronomiska"), "astronomisk" );
	deepEqual( Stem("asynen"), "asyn" );
	deepEqual( Stem("at"), "at" );
	deepEqual( Stem("atelje"), "atelj" );
	deepEqual( Stem("atenarna"), "aten" );
	deepEqual( Stem("atenienn"), "atenien" );
	deepEqual( Stem("ateniennen"), "atenien" );
	deepEqual( Stem("ater"), "ater" );
	deepEqual( Stem("atertaga"), "atertag" );
	deepEqual( Stem("atervända"), "atervänd" );
	deepEqual( Stem("atervånt"), "atervånt" );
	deepEqual( Stem("atl"), "atl" );
	deepEqual( Stem("atltså"), "atltså" );
	deepEqual( Stem("atminstone"), "atminston" );
	deepEqual( Stem("atmosferen"), "atmosfer" );
	deepEqual( Stem("atmosfären"), "atmosfär" );
	deepEqual( Stem("atmosfäriska"), "atmosfärisk" );
	deepEqual( Stem("atog"), "atog" );
	deepEqual( Stem("att"), "att" );
	deepEqual( Stem("attachemang"), "attachemang" );
	deepEqual( Stem("attachement"), "attachement" );
	deepEqual( Stem("attbar"), "attb" );
	deepEqual( Stem("atterbom"), "atterbom" );
	deepEqual( Stem("attesten"), "attest" );
	deepEqual( Stem("attiofjerde"), "attiofjerd" );
	deepEqual( Stem("attityd"), "attityd" );
	deepEqual( Stem("attrapp"), "attrapp" );
	deepEqual( Stem("attrapper"), "attrapp" );
	deepEqual( Stem("au"), "au" );
	deepEqual( Stem("auditorium"), "auditorium" );
	deepEqual( Stem("audumbla"), "audumbl" );
	deepEqual( Stem("augsburgiska"), "augsburgisk" );
	deepEqual( Stem("augusti"), "augusti" );
	deepEqual( Stem("augustikvällarna"), "augustikväll" );
	deepEqual( Stem("auktiga"), "aukt" );
	deepEqual( Stem("auktion"), "auktion" );
	deepEqual( Stem("auktioner"), "auktion" );
	deepEqual( Stem("auktoritet"), "auktoritet" );
	deepEqual( Stem("aura"), "aur" );
	deepEqual( Stem("auskultant"), "auskultant" );
	deepEqual( Stem("australien"), "australi" );
	deepEqual( Stem("australneger"), "australneg" );
	deepEqual( Stem("automat"), "autom" );
	deepEqual( Stem("automatiskt"), "automatisk" );
	deepEqual( Stem("automobil"), "automobil" );
	deepEqual( Stem("av"), "av" );
	deepEqual( Stem("avancerat"), "avancer" );
	deepEqual( Stem("avbedjan"), "avbedjan" );
	deepEqual( Stem("avbida"), "avbid" );
	deepEqual( Stem("avbild"), "avbild" );
	deepEqual( Stem("avbildade"), "avbild" );
	deepEqual( Stem("avblåsts"), "avblåst" );
	deepEqual( Stem("avbrott"), "avbrot" );
	deepEqual( Stem("avbrottet"), "avbrottet" );
	deepEqual( Stem("avbruten"), "avbrut" );
	deepEqual( Stem("avbrutit"), "avbrutit" );
	deepEqual( Stem("avbrutna"), "avbrutn" );
	deepEqual( Stem("avbryta"), "avbryt" );
	deepEqual( Stem("avbrytande"), "avbryt" );
	deepEqual( Stem("avbryter"), "avbryt" );
	deepEqual( Stem("avbränt"), "avbränt" );
	deepEqual( Stem("avbröt"), "avbröt" );
	deepEqual( Stem("avbröts"), "avbröt" );
	deepEqual( Stem("avböjde"), "avböjd" );
	deepEqual( Stem("avdelat"), "avdel" );
	deepEqual( Stem("avdelning"), "avdelning" );
	deepEqual( Stem("avdelningen"), "avdelning" );
	deepEqual( Stem("avdelningskontor"), "avdelningskont" );
	deepEqual( Stem("avdomnad"), "avdomn" );
	deepEqual( Stem("avdrag"), "avdrag" );
	deepEqual( Stem("avdånad"), "avdån" );
	deepEqual( Stem("ave"), "ave" );
	deepEqual( Stem("avec"), "avec" );
	deepEqual( Stem("aven"), "aven" );
	deepEqual( Stem("avfallna"), "avfalln" );
	deepEqual( Stem("avfladd"), "avflad" );
	deepEqual( Stem("avflagade"), "avflag" );
	deepEqual( Stem("avfärd"), "avfärd" );
	deepEqual( Stem("avfärdad"), "avfärd" );
	deepEqual( Stem("avfärden"), "avfärd" );
	deepEqual( Stem("avge"), "avg" );
	deepEqual( Stem("avgjord"), "avgjord" );
	deepEqual( Stem("avgjort"), "avgjort" );
	deepEqual( Stem("avgjorts"), "avgjort" );
	deepEqual( Stem("avgjöras"), "avgjör" );
	deepEqual( Stem("avglömda"), "avglömd" );
	deepEqual( Stem("avgnagda"), "avgnag" );
	deepEqual( Stem("avgrund"), "avgrund" );
	deepEqual( Stem("avgrunden"), "avgrund" );
	deepEqual( Stem("avgrunder"), "avgrund" );
	deepEqual( Stem("avgrundsanden"), "avgrunds" );
	deepEqual( Stem("avgrundsdjup"), "avgrundsdjup" );
	deepEqual( Stem("avgudat"), "avgud" );
	deepEqual( Stem("avgående"), "avgåend" );
	deepEqual( Stem("avgått"), "avgåt" );
	deepEqual( Stem("avgåvo"), "avgåvo" );
	deepEqual( Stem("avgöra"), "avgör" );
	deepEqual( Stem("avgörande"), "avgör" );
	deepEqual( Stem("avhandling"), "avhandling" );
	deepEqual( Stem("avhandlingen"), "avhandling" );
	deepEqual( Stem("avhjälpt"), "avhjälpt" );
	deepEqual( Stem("avhämta"), "avhämt" );
	deepEqual( Stem("avhålla"), "avhåll" );
	deepEqual( Stem("avhållen"), "avhåll" );
	deepEqual( Stem("avhåller"), "avhåll" );
	deepEqual( Stem("avhållsamhet"), "avhållsam" );
	deepEqual( Stem("avhölja"), "avhölj" );
	deepEqual( Stem("avhörde"), "avhörd" );
	deepEqual( Stem("avhört"), "avhört" );
	deepEqual( Stem("avig"), "avig" );
	deepEqual( Stem("aviga"), "avig" );
	deepEqual( Stem("avklädde"), "avkläd" );
	deepEqual( Stem("avkomling"), "avkomling" );
	deepEqual( Stem("avkunnad"), "avkun" );
	deepEqual( Stem("avlade"), "avl" );
	deepEqual( Stem("avlagda"), "avlag" );
	deepEqual( Stem("avlande"), "avl" );
	deepEqual( Stem("avlidna"), "avlidn" );
	deepEqual( Stem("avlidne"), "avlidn" );
	deepEqual( Stem("avlocka"), "avlock" );
	deepEqual( Stem("avloppsrör"), "avloppsrör" );
	deepEqual( Stem("avlupo"), "avlupo" );
	deepEqual( Stem("avlägga"), "avlägg" );
	deepEqual( Stem("avlägsen"), "avlägs" );
	deepEqual( Stem("avlägset"), "avlägset" );
	deepEqual( Stem("avlägsna"), "avlägsn" );
	deepEqual( Stem("avlägsnade"), "avlägsn" );
	deepEqual( Stem("avlägsnare"), "avlägsn" );
	deepEqual( Stem("avlägsnaste"), "avlägsn" );
	deepEqual( Stem("avlägsnat"), "avlägsn" );
	deepEqual( Stem("avlånga"), "avlång" );
	deepEqual( Stem("avlöpa"), "avlöp" );
	deepEqual( Stem("avlöste"), "avlöst" );
	deepEqual( Stem("avlövade"), "avlöv" );
	deepEqual( Stem("avmagrat"), "avmagr" );
	deepEqual( Stem("avmätt"), "avmät" );
	deepEqual( Stem("avmätta"), "avmät" );
	deepEqual( Stem("avpassad"), "avpass" );
	deepEqual( Stem("avresa"), "avres" );
	deepEqual( Stem("avresan"), "avresan" );
	deepEqual( Stem("avrivning"), "avrivning" );
	deepEqual( Stem("avrättsplatsen"), "avrättsplats" );
	deepEqual( Stem("avsatsen"), "avsats" );
	deepEqual( Stem("avsatt"), "avsat" );
	deepEqual( Stem("avseende"), "avseend" );
	deepEqual( Stem("avseenden"), "avseend" );
	deepEqual( Stem("avsett"), "avset" );
	deepEqual( Stem("avsides"), "avsid" );
	deepEqual( Stem("avsigkomna"), "avsigkomn" );
	deepEqual( Stem("avsikt"), "avsik" );
	deepEqual( Stem("avsikten"), "avsik" );
	deepEqual( Stem("avskaven"), "avskav" );
	deepEqual( Stem("avsked"), "avsked" );
	deepEqual( Stem("avskedet"), "avskedet" );
	deepEqual( Stem("avskedsansökan"), "avskedsansökan" );
	deepEqual( Stem("avskedsblick"), "avskedsblick" );
	deepEqual( Stem("avskedsmåltiden"), "avskedsmåltid" );
	deepEqual( Stem("avskild"), "avskild" );
	deepEqual( Stem("avskilda"), "avskild" );
	deepEqual( Stem("avskildhet"), "avskild" );
	deepEqual( Stem("avskrift"), "avskrift" );
	deepEqual( Stem("avskrädeshögen"), "avskrädeshög" );
	deepEqual( Stem("avskum"), "avskum" );
	deepEqual( Stem("avsky"), "avsky" );
	deepEqual( Stem("avskydd"), "avskyd" );
	deepEqual( Stem("avskydda"), "avskyd" );
	deepEqual( Stem("avskydde"), "avskyd" );
	deepEqual( Stem("avskyr"), "avskyr" );
	deepEqual( Stem("avskytt"), "avskyt" );
	deepEqual( Stem("avskyvärda"), "avskyvärd" );
	deepEqual( Stem("avskyvärde"), "avskyvärd" );
	deepEqual( Stem("avskyvärt"), "avskyvärt" );
	deepEqual( Stem("avslag"), "avslag" );
	deepEqual( Stem("avsluta"), "avslut" );
	deepEqual( Stem("avslutade"), "avslut" );
	deepEqual( Stem("avslutades"), "avslut" );
	deepEqual( Stem("avslutat"), "avslut" );
	deepEqual( Stem("avslutning"), "avslutning" );
	deepEqual( Stem("avslöja"), "avslöj" );
	deepEqual( Stem("avslöjade"), "avslöj" );
	deepEqual( Stem("avslöjat"), "avslöj" );
	deepEqual( Stem("avslöt"), "avslöt" );
	deepEqual( Stem("avslöts"), "avslöt" );
	deepEqual( Stem("avsmak"), "avsmak" );
	deepEqual( Stem("avstack"), "avstack" );
	deepEqual( Stem("avstanna"), "avstan" );
	deepEqual( Stem("avstickare"), "avstick" );
	deepEqual( Stem("avstigna"), "avstign" );
	deepEqual( Stem("avstod"), "avstod" );
	deepEqual( Stem("avstubbade"), "avstubb" );
	deepEqual( Stem("avstädades"), "avstäd" );
	deepEqual( Stem("avstå"), "avstå" );
	deepEqual( Stem("avstånd"), "avstånd" );
	deepEqual( Stem("avståndet"), "avståndet" );
	deepEqual( Stem("avstår"), "avstår" );
	deepEqual( Stem("avsvalnat"), "avsvaln" );
	deepEqual( Stem("avsvor"), "avsv" );
	deepEqual( Stem("avsättningen"), "avsättning" );
	deepEqual( Stem("avsöndrat"), "avsöndr" );
	deepEqual( Stem("avtaga"), "avtag" );
	deepEqual( Stem("avtal"), "avtal" );
	deepEqual( Stem("avtala"), "avtal" );
	deepEqual( Stem("avtalade"), "avtal" );
	deepEqual( Stem("avtalat"), "avtal" );
	deepEqual( Stem("avtog"), "avtog" );
	deepEqual( Stem("avtogo"), "avtogo" );
	deepEqual( Stem("avtryck"), "avtryck" );
	deepEqual( Stem("avund"), "avund" );
	deepEqual( Stem("avundade"), "avund" );
	deepEqual( Stem("avundades"), "avund" );
	deepEqual( Stem("avundas"), "avund" );
	deepEqual( Stem("avundats"), "avundat" );
	deepEqual( Stem("avunden"), "avund" );
	deepEqual( Stem("avundens"), "avund" );
	deepEqual( Stem("avunds"), "avund" );
	deepEqual( Stem("avundsjuk"), "avundsjuk" );
	deepEqual( Stem("avundsjuka"), "avundsjuk" );
	deepEqual( Stem("avundsjukan"), "avundsjukan" );
	deepEqual( Stem("avundsjukt"), "avundsjuk" );
	deepEqual( Stem("avundsvärd"), "avundsvärd" );
	deepEqual( Stem("avundsvärda"), "avundsvärd" );
	deepEqual( Stem("avvakta"), "avvak" );
	deepEqual( Stem("avvaktade"), "avvak" );
	deepEqual( Stem("avvaktan"), "avvaktan" );
	deepEqual( Stem("avvaktande"), "avvak" );
	deepEqual( Stem("avverkade"), "avverk" );
	deepEqual( Stem("avvikelse"), "avvik" );
	deepEqual( Stem("avvikelsen"), "avvik" );
	deepEqual( Stem("avvisad"), "avvis" );
	deepEqual( Stem("avvisande"), "avvis" );
	deepEqual( Stem("avväg"), "avväg" );
	deepEqual( Stem("avvägd"), "avväg" );
	deepEqual( Stem("avvägt"), "avväg" );
	deepEqual( Stem("avvärja"), "avvärj" );
	deepEqual( Stem("avvärjande"), "avvärj" );
	deepEqual( Stem("avvärjde"), "avvärjd" );
	deepEqual( Stem("axel"), "axel" );
	deepEqual( Stem("axelbred"), "axelbred" );
	deepEqual( Stem("axeln"), "axeln" );
	deepEqual( Stem("axelryckning"), "axelryckning" );
	deepEqual( Stem("axelryckningen"), "axelryckning" );
	deepEqual( Stem("axens"), "axen" );
	deepEqual( Stem("axlar"), "axl" );
	deepEqual( Stem("axlarna"), "axl" );
	deepEqual( Stem("axlarne"), "axl" );
	deepEqual( Stem("azltså"), "azltså" );
	deepEqual( Stem("azur"), "azur" );
	deepEqual( Stem("azurblått"), "azurblåt" );
	deepEqual( Stem("b"), "b" );
	deepEqual( Stem("ba"), "ba" );
	deepEqual( Stem("babels"), "babel" );
	deepEqual( Stem("babelstorn"), "babelstorn" );
	deepEqual( Stem("babordslanternan"), "babordslanternan" );
	deepEqual( Stem("babordsrelingen"), "babordsreling" );
	deepEqual( Stem("babyloniska"), "babylonisk" );
	deepEqual( Stem("baciller"), "bacill" );
	deepEqual( Stem("bacillerna"), "bacill" );
	deepEqual( Stem("bacillskräck"), "bacillskräck" );
	deepEqual( Stem("backar"), "back" );
	deepEqual( Stem("backe"), "back" );
	deepEqual( Stem("backen"), "back" );
	deepEqual( Stem("backor"), "back" );
	deepEqual( Stem("bad"), "bad" );
	deepEqual( Stem("bada"), "bad" );
	deepEqual( Stem("badade"), "bad" );
	deepEqual( Stem("badades"), "bad" );
	deepEqual( Stem("badat"), "bad" );
	deepEqual( Stem("badc"), "badc" );
	deepEqual( Stem("badden"), "badd" );
	deepEqual( Stem("baddräkt"), "baddräk" );
	deepEqual( Stem("bade"), "bad" );
	deepEqual( Stem("baden"), "bad" );
	deepEqual( Stem("badet"), "badet" );
	deepEqual( Stem("badhuset"), "badhuset" );
	deepEqual( Stem("badkuren"), "badkur" );
	deepEqual( Stem("badning"), "badning" );
	deepEqual( Stem("badrum"), "badrum" );
	deepEqual( Stem("badsejour"), "badsejour" );
	deepEqual( Stem("badsejouren"), "badsejour" );
	deepEqual( Stem("badstranden"), "badstr" );
	deepEqual( Stem("badstuga"), "badstug" );
	deepEqual( Stem("badstugan"), "badstugan" );
	deepEqual( Stem("badstuns"), "badstun" );
	deepEqual( Stem("badstället"), "badstället" );
	deepEqual( Stem("bagare"), "bag" );
	deepEqual( Stem("bagaren"), "bag" );
	deepEqual( Stem("bagarn"), "bagarn" );
	deepEqual( Stem("bagarns"), "bagarn" );
	deepEqual( Stem("bagatell"), "bagatell" );
	deepEqual( Stem("bagateller"), "bagatell" );
	deepEqual( Stem("bagerierna"), "bageri" );
	deepEqual( Stem("bagge"), "bagg" );
	deepEqual( Stem("bagges"), "bagg" );
	deepEqual( Stem("baglig"), "bag" );
	deepEqual( Stem("bah"), "bah" );
	deepEqual( Stem("bahytthattar"), "bahytthat" );
	deepEqual( Stem("bak"), "bak" );
	deepEqual( Stem("baka"), "bak" );
	deepEqual( Stem("bakat"), "bak" );
	deepEqual( Stem("bakbenen"), "bakben" );
	deepEqual( Stem("bakelsehungriga"), "bakelsehungr" );
	deepEqual( Stem("bakelser"), "bak" );
	deepEqual( Stem("baken"), "bak" );
	deepEqual( Stem("bakfoten"), "bakfot" );
	deepEqual( Stem("bakgata"), "bakgat" );
	deepEqual( Stem("bakgrunden"), "bakgrund" );
	deepEqual( Stem("bakhuvud"), "bakhuvud" );
	deepEqual( Stem("bakhåll"), "bakhåll" );
	deepEqual( Stem("bakifrån"), "bakifrån" );
	deepEqual( Stem("baklänges"), "bakläng" );
	deepEqual( Stem("bakom"), "bakom" );
	deepEqual( Stem("bakport"), "bakport" );
	deepEqual( Stem("bakringarna"), "bakring" );
	deepEqual( Stem("baksida"), "baksid" );
	deepEqual( Stem("baktanke"), "baktank" );
	deepEqual( Stem("bakverk"), "bakverk" );
	deepEqual( Stem("bakvändt"), "bakvänd" );
	deepEqual( Stem("bakåt"), "bakåt" );
	deepEqual( Stem("bal"), "bal" );
	deepEqual( Stem("balansera"), "balanser" );
	deepEqual( Stem("balanserade"), "balanser" );
	deepEqual( Stem("balanserande"), "balanser" );
	deepEqual( Stem("baler"), "bal" );
	deepEqual( Stem("balett"), "balet" );
	deepEqual( Stem("balja"), "balj" );
	deepEqual( Stem("baljorna"), "balj" );
	deepEqual( Stem("balkong"), "balkong" );
	deepEqual( Stem("balladen"), "ballad" );
	deepEqual( Stem("balsam"), "balsam" );
	deepEqual( Stem("balsamin"), "balsamin" );
	deepEqual( Stem("balsaminen"), "balsamin" );
	deepEqual( Stem("balsaminer"), "balsamin" );
	deepEqual( Stem("balsaminerna"), "balsamin" );
	deepEqual( Stem("balsaminernas"), "balsamin" );
	deepEqual( Stem("balsampoppeln"), "balsampoppeln" );
	deepEqual( Stem("balsäsong"), "balsäsong" );
	deepEqual( Stem("bamablomstrande"), "bamablomstr" );
	deepEqual( Stem("ban"), "ban" );
	deepEqual( Stem("bana"), "ban" );
	deepEqual( Stem("banade"), "ban" );
	deepEqual( Stem("banala"), "banal" );
	deepEqual( Stem("banan"), "banan" );
	deepEqual( Stem("banar"), "ban" );
	deepEqual( Stem("band"), "band" );
	deepEqual( Stem("bandet"), "bandet" );
	deepEqual( Stem("bandhundens"), "bandhund" );
	deepEqual( Stem("bandrullar"), "bandrull" );
	deepEqual( Stem("bane"), "ban" );
	deepEqual( Stem("baner"), "ban" );
	deepEqual( Stem("bank"), "bank" );
	deepEqual( Stem("bankar"), "bank" );
	deepEqual( Stem("bankdirektören"), "bankdirektör" );
	deepEqual( Stem("banko"), "banko" );
	deepEqual( Stem("bann"), "bann" );
	deepEqual( Stem("banna"), "bann" );
	deepEqual( Stem("bannande"), "bann" );
	deepEqual( Stem("bannor"), "bann" );
	deepEqual( Stem("bans"), "ban" );
	deepEqual( Stem("bar"), "bar" );
	deepEqual( Stem("bara"), "bar" );
	deepEqual( Stem("barbari"), "barbari" );
	deepEqual( Stem("barett"), "baret" );
	deepEqual( Stem("barfota"), "barfot" );
	deepEqual( Stem("barhuvad"), "barhuv" );
	deepEqual( Stem("bari"), "bari" );
	deepEqual( Stem("bark"), "bark" );
	deepEqual( Stem("barkbat"), "barkb" );
	deepEqual( Stem("barm"), "barm" );
	deepEqual( Stem("barmar"), "barm" );
	deepEqual( Stem("barmen"), "barm" );
	deepEqual( Stem("barmhertig"), "barmhert" );
	deepEqual( Stem("barmhertighet"), "barmhert" );
	deepEqual( Stem("barmhärtiga"), "barmhärt" );
	deepEqual( Stem("barmhärtige"), "barmhärt" );
	deepEqual( Stem("barmhärtiges"), "barmhärt" );
	deepEqual( Stem("barmhärtighet"), "barmhärt" );
	deepEqual( Stem("barmhärtigheten"), "barmhärt" );
	deepEqual( Stem("barmhärtighetsdoktorerna"), "barmhärtighetsdoktor" );
	deepEqual( Stem("barmhärtighetsgärningar"), "barmhärtighetsgärning" );
	deepEqual( Stem("barmhärtighetsverk"), "barmhärtighetsverk" );
	deepEqual( Stem("barmhärtigt"), "barmhärt" );
	deepEqual( Stem("barmmorskan"), "barmmorskan" );
	deepEqual( Stem("barn"), "barn" );
	deepEqual( Stem("barnaföderska"), "barnafödersk" );
	deepEqual( Stem("barnansikte"), "barnansik" );
	deepEqual( Stem("barnasinnet"), "barnasinnet" );
	deepEqual( Stem("barnavård"), "barnavård" );
	deepEqual( Stem("barnavårdsnämnden"), "barnavårdsnämnd" );
	deepEqual( Stem("barnbarn"), "barnbarn" );
	deepEqual( Stem("barnbarnen"), "barnbarn" );
	deepEqual( Stem("barnbördshus"), "barnbördshus" );
	deepEqual( Stem("barnbördshuset"), "barnbördshuset" );
	deepEqual( Stem("barndom"), "barndom" );
	deepEqual( Stem("barndomen"), "barndom" );
	deepEqual( Stem("barndomens"), "barndom" );
	deepEqual( Stem("barndoms"), "barndom" );
	deepEqual( Stem("barndomsminnen"), "barndomsmin" );
	deepEqual( Stem("barndomsstad"), "barndomsst" );
	deepEqual( Stem("barndomsår"), "barndomsår" );
	deepEqual( Stem("barndop"), "barndop" );
	deepEqual( Stem("barnen"), "barn" );
	deepEqual( Stem("barnens"), "barn" );
	deepEqual( Stem("barnet"), "barnet" );
	deepEqual( Stem("barnets"), "barnet" );
	deepEqual( Stem("barneu"), "barneu" );
	deepEqual( Stem("barnflicka"), "barnflick" );
	deepEqual( Stem("barnhemmet"), "barnhemmet" );
	deepEqual( Stem("barnhuset"), "barnhuset" );
	deepEqual( Stem("barnjungfru"), "barnjungfru" );
	deepEqual( Stem("barnjungfruns"), "barnjungfrun" );
	deepEqual( Stem("barnkammare"), "barnkamm" );
	deepEqual( Stem("barnkammaren"), "barnkamm" );
	deepEqual( Stem("barnkammarens"), "barnkamm" );
	deepEqual( Stem("barnkära"), "barnkär" );
	deepEqual( Stem("barnlös"), "barnlös" );
	deepEqual( Stem("barnlöst"), "barnlös" );
	deepEqual( Stem("barnmorska"), "barnmorsk" );
	deepEqual( Stem("barnmorskan"), "barnmorskan" );
	deepEqual( Stem("barnmorskans"), "barnmorskan" );
	deepEqual( Stem("barnmorskor"), "barnmorsk" );
	deepEqual( Stem("barnpensionat"), "barnpension" );
	deepEqual( Stem("barnröst"), "barnröst" );
	deepEqual( Stem("barns"), "barn" );
	deepEqual( Stem("barnsbörd"), "barnsbörd" );
	deepEqual( Stem("barnskaran"), "barnskaran" );
	deepEqual( Stem("barnslig"), "barns" );
	deepEqual( Stem("barnsliga"), "barns" );
	deepEqual( Stem("barnsligc"), "barnsligc" );
	deepEqual( Stem("barnslighet"), "barns" );
	deepEqual( Stem("barnsligheten"), "barns" );
	deepEqual( Stem("barnsligheter"), "barns" );
	deepEqual( Stem("barnsligt"), "barns" );
	deepEqual( Stem("barnsnöd"), "barnsnöd" );
	deepEqual( Stem("barnsäng"), "barnsäng" );
	deepEqual( Stem("barnsängar"), "barnsäng" );
	deepEqual( Stem("barnsängskvinnas"), "barnsängskvin" );
	deepEqual( Stem("barnsängskvinnorna"), "barnsängskvin" );
	deepEqual( Stem("barnungar"), "barnung" );
	deepEqual( Stem("barnungarne"), "barnung" );
	deepEqual( Stem("barnungars"), "barnungar" );
	deepEqual( Stem("barnunge"), "barnung" );
	deepEqual( Stem("baron"), "baron" );
	deepEqual( Stem("baronen"), "baron" );
	deepEqual( Stem("baronens"), "baron" );
	deepEqual( Stem("baroner"), "baron" );
	deepEqual( Stem("barr"), "barr" );
	deepEqual( Stem("barren"), "barr" );
	deepEqual( Stem("barriären"), "barriär" );
	deepEqual( Stem("barrskog"), "barrskog" );
	deepEqual( Stem("bars"), "bar" );
	deepEqual( Stem("barsk"), "barsk" );
	deepEqual( Stem("barska"), "barsk" );
	deepEqual( Stem("barske"), "barsk" );
	deepEqual( Stem("barskt"), "barsk" );
	deepEqual( Stem("bart"), "bart" );
	deepEqual( Stem("basar"), "bas" );
	deepEqual( Stem("baserad"), "baser" );
	deepEqual( Stem("basilisken"), "basilisk" );
	deepEqual( Stem("bastanta"), "bastant" );
	deepEqual( Stem("bastigt"), "bast" );
	deepEqual( Stem("bastu"), "bastu" );
	deepEqual( Stem("bastun"), "bastun" );
	deepEqual( Stem("basun"), "basun" );
	deepEqual( Stem("batalj"), "batalj" );
	deepEqual( Stem("batar"), "bat" );
	deepEqual( Stem("batarml"), "batarml" );
	deepEqual( Stem("batist"), "batist" );
	deepEqual( Stem("battre"), "battr" );
	deepEqual( Stem("battys"), "batty" );
	deepEqual( Stem("baudelaire"), "baudelair" );
	deepEqual( Stem("bb"), "bb" );
	deepEqual( Stem("bcgrepp"), "bcgrepp" );
	deepEqual( Stem("bcrg"), "bcrg" );
	deepEqual( Stem("bctt"), "bctt" );
	deepEqual( Stem("bcvekande"), "bcvek" );
	deepEqual( Stem("be"), "be" );
	deepEqual( Stem("beandran"), "beandran" );
	deepEqual( Stem("bearbetades"), "bearbet" );
	deepEqual( Stem("bearbetning"), "bearbetning" );
	deepEqual( Stem("bearbetningen"), "bearbetning" );
	deepEqual( Stem("bearn"), "bearn" );
	deepEqual( Stem("beau"), "beau" );
	deepEqual( Stem("beaune"), "beaun" );
	deepEqual( Stem("bebag"), "bebag" );
	deepEqual( Stem("bebandling"), "bebandling" );
	deepEqual( Stem("bebekommer"), "bebekomm" );
	deepEqual( Stem("beblandelse"), "bebland" );
	deepEqual( Stem("beblomstra"), "beblomstr" );
	deepEqual( Stem("bebodd"), "bebod" );
	deepEqual( Stem("beboddes"), "bebod" );
	deepEqual( Stem("bebos"), "bebo" );
	deepEqual( Stem("bebott"), "bebot" );
	deepEqual( Stem("bebyggare"), "bebygg" );
	deepEqual( Stem("bebåda"), "bebåd" );
	deepEqual( Stem("bebådat"), "bebåd" );
	deepEqual( Stem("beckiga"), "beck" );
	deepEqual( Stem("bed"), "bed" );
	deepEqual( Stem("bedagad"), "bedag" );
	deepEqual( Stem("bedarrat"), "bedarr" );
	deepEqual( Stem("beder"), "bed" );
	deepEqual( Stem("bedit"), "bedit" );
	deepEqual( Stem("bedja"), "bedj" );
	deepEqual( Stem("bedjande"), "bedj" );
	deepEqual( Stem("bedjen"), "bedj" );
	deepEqual( Stem("bedoma"), "bedom" );
	deepEqual( Stem("bedraga"), "bedrag" );
	deepEqual( Stem("bedragare"), "bedrag" );
	deepEqual( Stem("bedragen"), "bedrag" );
	deepEqual( Stem("bedrager"), "bedrag" );
	deepEqual( Stem("bedragit"), "bedragit" );
	deepEqual( Stem("bedragna"), "bedragn" );
	deepEqual( Stem("bedragne"), "bedragn" );
	deepEqual( Stem("bedriva"), "bedriv" );
	deepEqual( Stem("bedrives"), "bedriv" );
	deepEqual( Stem("bedrog"), "bedrog" );
	deepEqual( Stem("bedroge"), "bedrog" );
	deepEqual( Stem("bedrogo"), "bedrogo" );
	deepEqual( Stem("bedrovligt"), "bedrov" );
	deepEqual( Stem("bedrägeri"), "bedrägeri" );
	deepEqual( Stem("bedrägliga"), "bedräg" );
	deepEqual( Stem("bedröfliga"), "bedröf" );
	deepEqual( Stem("bedröfva"), "bedröfv" );
	deepEqual( Stem("bedröfvad"), "bedröfv" );
	deepEqual( Stem("bedröfvade"), "bedröfv" );
	deepEqual( Stem("bedröfvat"), "bedröfv" );
	deepEqual( Stem("bedröfvelse"), "bedröfv" );
	deepEqual( Stem("bedröfvelsen"), "bedröfv" );
	deepEqual( Stem("bedröfvelsens"), "bedröfv" );
	deepEqual( Stem("bedrövad"), "bedröv" );
	deepEqual( Stem("bedrövade"), "bedröv" );
	deepEqual( Stem("bedrövas"), "bedröv" );
	deepEqual( Stem("bedrövelsen"), "bedröv" );
	deepEqual( Stem("bedrövliga"), "bedröv" );
	deepEqual( Stem("bedrövligt"), "bedröv" );
	deepEqual( Stem("bedt"), "bedt" );
	deepEqual( Stem("bedyra"), "bedyr" );
	deepEqual( Stem("bedyrade"), "bedyr" );
	deepEqual( Stem("bedyrar"), "bedyr" );
	deepEqual( Stem("bedyrat"), "bedyr" );
	deepEqual( Stem("bedårade"), "bedår" );
	deepEqual( Stem("bedöma"), "bedöm" );
	deepEqual( Stem("bedömande"), "bedöm" );
	deepEqual( Stem("bedömer"), "bedöm" );
	deepEqual( Stem("bedömt"), "bedömt" );
	deepEqual( Stem("bedövad"), "bedöv" );
	deepEqual( Stem("bedövas"), "bedöv" );
	deepEqual( Stem("bedövningens"), "bedövning" );
	deepEqual( Stem("befalde"), "befald" );
	deepEqual( Stem("befaldes"), "befald" );
	deepEqual( Stem("befalla"), "befall" );
	deepEqual( Stem("befallande"), "befall" );
	deepEqual( Stem("befalld"), "befalld" );
	deepEqual( Stem("befallde"), "befalld" );
	deepEqual( Stem("befaller"), "befall" );
	deepEqual( Stem("befalles"), "befall" );
	deepEqual( Stem("befallning"), "befallning" );
	deepEqual( Stem("befallningar"), "befallning" );
	deepEqual( Stem("befallningen"), "befallning" );
	deepEqual( Stem("befallningsmannen"), "befallningsman" );
	deepEqual( Stem("befallningsmannens"), "befallningsman" );
	deepEqual( Stem("befann"), "befan" );
	deepEqual( Stem("befanns"), "befan" );
	deepEqual( Stem("befans"), "befan" );
	deepEqual( Stem("befara"), "befar" );
	deepEqual( Stem("befarade"), "befar" );
	deepEqual( Stem("befarm"), "befarm" );
	deepEqual( Stem("befatta"), "befat" );
	deepEqual( Stem("befattar"), "befat" );
	deepEqual( Stem("befattning"), "befattning" );
	deepEqual( Stem("befattningar"), "befattning" );
	deepEqual( Stem("befattningen"), "befattning" );
	deepEqual( Stem("befinna"), "befin" );
	deepEqual( Stem("befinner"), "befin" );
	deepEqual( Stem("befinnes"), "befin" );
	deepEqual( Stem("befolkade"), "befolk" );
	deepEqual( Stem("befolkas"), "befolk" );
	deepEqual( Stem("befolkning"), "befolkning" );
	deepEqual( Stem("befolkningen"), "befolkning" );
	deepEqual( Stem("befordran"), "befordran" );
	deepEqual( Stem("befordrat"), "befordr" );
	deepEqual( Stem("befordringar"), "befordring" );
	deepEqual( Stem("befria"), "befri" );
	deepEqual( Stem("befriad"), "befri" );
	deepEqual( Stem("befriade"), "befri" );
	deepEqual( Stem("befriaren"), "befri" );
	deepEqual( Stem("befriat"), "befri" );
	deepEqual( Stem("befrielse"), "befri" );
	deepEqual( Stem("befrielsen"), "befri" );
	deepEqual( Stem("befruktade"), "befruk" );
	deepEqual( Stem("befruktades"), "befruk" );
	deepEqual( Stem("befryndad"), "befrynd" );
	deepEqual( Stem("befrämja"), "befrämj" );
	deepEqual( Stem("befrämjas"), "befrämj" );
	deepEqual( Stem("befunnit"), "befunnit" );
	deepEqual( Stem("befunno"), "befunno" );
	deepEqual( Stem("befälet"), "befälet" );
	deepEqual( Stem("befängd"), "befäng" );
	deepEqual( Stem("befängda"), "befäng" );
	deepEqual( Stem("befängt"), "befäng" );
	deepEqual( Stem("befästa"), "befäst" );
	deepEqual( Stem("begaf"), "begaf" );
	deepEqual( Stem("begagna"), "begagn" );
	deepEqual( Stem("begagnad"), "begagn" );
	deepEqual( Stem("begagnade"), "begagn" );
	deepEqual( Stem("begagnades"), "begagn" );
	deepEqual( Stem("begagnar"), "begagn" );
	deepEqual( Stem("begagnas"), "begagn" );
	deepEqual( Stem("begagnat"), "begagn" );
	deepEqual( Stem("begagnats"), "begagnat" );
	deepEqual( Stem("begart"), "begart" );
	deepEqual( Stem("begav"), "begav" );
	deepEqual( Stem("begavad"), "begav" );
	deepEqual( Stem("bege"), "beg" );
	deepEqual( Stem("begge"), "begg" );
	deepEqual( Stem("begges"), "begg" );
	deepEqual( Stem("begick"), "begick" );
	deepEqual( Stem("begifva"), "begifv" );
	deepEqual( Stem("begifvenhet"), "begifven" );
	deepEqual( Stem("begingo"), "begingo" );
	deepEqual( Stem("begiva"), "begiv" );
	deepEqual( Stem("begrafva"), "begrafv" );
	deepEqual( Stem("begrafvet"), "begrafvet" );
	deepEqual( Stem("begrav"), "begrav" );
	deepEqual( Stem("begrava"), "begrav" );
	deepEqual( Stem("begravas"), "begrav" );
	deepEqual( Stem("begravda"), "begravd" );
	deepEqual( Stem("begraven"), "begrav" );
	deepEqual( Stem("begraver"), "begrav" );
	deepEqual( Stem("begravet"), "begravet" );
	deepEqual( Stem("begravit"), "begravit" );
	deepEqual( Stem("begravna"), "begravn" );
	deepEqual( Stem("begravning"), "begravning" );
	deepEqual( Stem("begravningar"), "begravning" );
	deepEqual( Stem("begravningen"), "begravning" );
	deepEqual( Stem("begravningsbyrå"), "begravningsbyrå" );
	deepEqual( Stem("begravningskaffe"), "begravningskaff" );
	deepEqual( Stem("begrep"), "begrep" );
	deepEqual( Stem("begrepp"), "begrepp" );
	deepEqual( Stem("begreppen"), "begrepp" );
	deepEqual( Stem("begreppet"), "begreppet" );
	deepEqual( Stem("begreppsförvirring"), "begreppsförvirring" );
	deepEqual( Stem("begripa"), "begrip" );
	deepEqual( Stem("begripas"), "begrip" );
	deepEqual( Stem("begripe"), "begrip" );
	deepEqual( Stem("begriper"), "begrip" );
	deepEqual( Stem("begripet"), "begripet" );
	deepEqual( Stem("begripit"), "begripit" );
	deepEqual( Stem("begripliga"), "begrip" );
	deepEqual( Stem("begripligt"), "begrip" );
	deepEqual( Stem("begrov"), "begrov" );
	deepEqual( Stem("begrovs"), "begrov" );
	deepEqual( Stem("begrunda"), "begrund" );
	deepEqual( Stem("begrundade"), "begrund" );
	deepEqual( Stem("begrundande"), "begrund" );
	deepEqual( Stem("begrundanden"), "begrund" );
	deepEqual( Stem("begrundat"), "begrund" );
	deepEqual( Stem("begränsa"), "begräns" );
	deepEqual( Stem("begråta"), "begråt" );
	deepEqual( Stem("begråtit"), "begråtit" );
	deepEqual( Stem("begynna"), "begyn" );
	deepEqual( Stem("begynnande"), "begyn" );
	deepEqual( Stem("begynnelsen"), "begynn" );
	deepEqual( Stem("begynns"), "begyn" );
	deepEqual( Stem("begynt"), "begynt" );
	deepEqual( Stem("begynte"), "begynt" );
	deepEqual( Stem("begär"), "begär" );
	deepEqual( Stem("begära"), "begär" );
	deepEqual( Stem("begäran"), "begäran" );
	deepEqual( Stem("begärda"), "begärd" );
	deepEqual( Stem("begärde"), "begärd" );
	deepEqual( Stem("begärelse"), "begär" );
	deepEqual( Stem("begären"), "begär" );
	deepEqual( Stem("begäret"), "begäret" );
	deepEqual( Stem("begärets"), "begäret" );
	deepEqual( Stem("begärlighet"), "begär" );
	deepEqual( Stem("begärligt"), "begär" );
	deepEqual( Stem("begärt"), "begärt" );
	deepEqual( Stem("begå"), "begå" );
	deepEqual( Stem("begåfvad"), "begåfv" );
	deepEqual( Stem("begånget"), "begånget" );
	deepEqual( Stem("begångna"), "begångn" );
	deepEqual( Stem("begår"), "begår" );
	deepEqual( Stem("begås"), "begås" );
	deepEqual( Stem("begått"), "begåt" );
	deepEqual( Stem("begåvad"), "begåv" );
	deepEqual( Stem("begåvade"), "begåv" );
	deepEqual( Stem("begåvning"), "begåvning" );
	deepEqual( Stem("begåvo"), "begåvo" );
	deepEqual( Stem("behag"), "behag" );
	deepEqual( Stem("behaga"), "behag" );
	deepEqual( Stem("behagade"), "behag" );
	deepEqual( Stem("behagar"), "behag" );
	deepEqual( Stem("behagas"), "behag" );
	deepEqual( Stem("behagat"), "behag" );
	deepEqual( Stem("behaget"), "behaget" );
	deepEqual( Stem("behagfull"), "behagfull" );
	deepEqual( Stem("behaglig"), "behag" );
	deepEqual( Stem("behagliga"), "behag" );
	deepEqual( Stem("behagligare"), "behag" );
	deepEqual( Stem("behagligast"), "behag" );
	deepEqual( Stem("behagligaste"), "behag" );
	deepEqual( Stem("behagligt"), "behag" );
	deepEqual( Stem("behagsjuk"), "behagsjuk" );
	deepEqual( Stem("behagsjuka"), "behagsjuk" );
	deepEqual( Stem("behagsjukan"), "behagsjukan" );
	deepEqual( Stem("behagsjukans"), "behagsjukan" );
	deepEqual( Stem("behagsjukas"), "behagsjuk" );
	deepEqual( Stem("behandla"), "behandl" );
	deepEqual( Stem("behandlades"), "behandl" );
	deepEqual( Stem("behandlas"), "behandl" );
	deepEqual( Stem("behandlat"), "behandl" );
	deepEqual( Stem("behandling"), "behandling" );
	deepEqual( Stem("behandlingen"), "behandling" );
	deepEqual( Stem("beherska"), "behersk" );
	deepEqual( Stem("beherskades"), "behersk" );
	deepEqual( Stem("beherskning"), "beherskning" );
	deepEqual( Stem("behjelplig"), "behjelp" );
	deepEqual( Stem("behjertat"), "behjert" );
	deepEqual( Stem("behof"), "behof" );
	deepEqual( Stem("behofvet"), "behofvet" );
	deepEqual( Stem("behov"), "behov" );
	deepEqual( Stem("behova"), "behov" );
	deepEqual( Stem("behovde"), "behovd" );
	deepEqual( Stem("behoven"), "behov" );
	deepEqual( Stem("behovet"), "behovet" );
	deepEqual( Stem("behovets"), "behovet" );
	deepEqual( Stem("behäftad"), "behäft" );
	deepEqual( Stem("behäftade"), "behäft" );
	deepEqual( Stem("behäftadt"), "behäftad" );
	deepEqual( Stem("behändig"), "behänd" );
	deepEqual( Stem("behändiga"), "behänd" );
	deepEqual( Stem("behändigt"), "behänd" );
	deepEqual( Stem("behärska"), "behärsk" );
	deepEqual( Stem("behärskad"), "behärsk" );
	deepEqual( Stem("behärskade"), "behärsk" );
	deepEqual( Stem("behärskat"), "behärsk" );
	deepEqual( Stem("behärskats"), "behärskat" );
	deepEqual( Stem("behärskning"), "behärskning" );
	deepEqual( Stem("behåll"), "behåll" );
	deepEqual( Stem("behålla"), "behåll" );
	deepEqual( Stem("behåller"), "behåll" );
	deepEqual( Stem("behöfde"), "behöfd" );
	deepEqual( Stem("behöfdes"), "behöfd" );
	deepEqual( Stem("behöfligt"), "behöf" );
	deepEqual( Stem("behöfs"), "behöf" );
	deepEqual( Stem("behöft"), "behöft" );
	deepEqual( Stem("behöfva"), "behöfv" );
	deepEqual( Stem("behöfvas"), "behöfv" );
	deepEqual( Stem("behöfver"), "behöfv" );
	deepEqual( Stem("behöll"), "behöll" );
	deepEqual( Stem("behölle"), "behöll" );
	deepEqual( Stem("behöllo"), "behöllo" );
	deepEqual( Stem("behörig"), "behör" );
	deepEqual( Stem("behörigen"), "behör" );
	deepEqual( Stem("behöva"), "behöv" );
	deepEqual( Stem("behövas"), "behöv" );
	deepEqual( Stem("behövdc"), "behövdc" );
	deepEqual( Stem("behövde"), "behövd" );
	deepEqual( Stem("behövdes"), "behövd" );
	deepEqual( Stem("behöver"), "behöv" );
	deepEqual( Stem("behövs"), "behöv" );
	deepEqual( Stem("behövt"), "behövt" );
	deepEqual( Stem("bekant"), "bekant" );
	deepEqual( Stem("bekanta"), "bekant" );
	deepEqual( Stem("bekantas"), "bekant" );
	deepEqual( Stem("bekante"), "bekant" );
	deepEqual( Stem("bekants"), "bekant" );
	deepEqual( Stem("bekantskap"), "bekantskap" );
	deepEqual( Stem("bekantskapen"), "bekantskap" );
	deepEqual( Stem("bekantskaper"), "bekantskap" );
	deepEqual( Stem("bekantskaperna"), "bekantskap" );
	deepEqual( Stem("bekantskapers"), "bekantskaper" );
	deepEqual( Stem("bekantsskap"), "bekantsskap" );
	deepEqual( Stem("beklaga"), "beklag" );
	deepEqual( Stem("beklagade"), "beklag" );
	deepEqual( Stem("beklagande"), "beklag" );
	deepEqual( Stem("beklagansvärda"), "beklagansvärd" );
	deepEqual( Stem("beklagansvärde"), "beklagansvärd" );
	deepEqual( Stem("beklagansvärt"), "beklagansvärt" );
	deepEqual( Stem("beklagar"), "beklag" );
	deepEqual( Stem("beklagarlsvärd"), "beklagarlsvärd" );
	deepEqual( Stem("beklagat"), "beklag" );
	deepEqual( Stem("beklädd"), "bekläd" );
	deepEqual( Stem("beklämd"), "beklämd" );
	deepEqual( Stem("beklämdhet"), "beklämd" );
	deepEqual( Stem("beklämmande"), "beklämm" );
	deepEqual( Stem("beklämning"), "beklämning" );
	deepEqual( Stem("bekom"), "bekom" );
	deepEqual( Stem("bekomma"), "bekomm" );
	deepEqual( Stem("bekommer"), "bekomm" );
	deepEqual( Stem("bekommit"), "bekommit" );
	deepEqual( Stem("bekostnad"), "bekostn" );
	deepEqual( Stem("bekräfta"), "bekräft" );
	deepEqual( Stem("bekräftar"), "bekräft" );
	deepEqual( Stem("bekräftas"), "bekräft" );
	deepEqual( Stem("bekräftat"), "bekräft" );
	deepEqual( Stem("bekräftelse"), "bekräft" );
	deepEqual( Stem("bekröner"), "bekrön" );
	deepEqual( Stem("bekväm"), "bekväm" );
	deepEqual( Stem("bekväma"), "bekväm" );
	deepEqual( Stem("bekvämaste"), "bekväm" );
	deepEqual( Stem("bekvämde"), "bekvämd" );
	deepEqual( Stem("bekvämlighet"), "bekväm" );
	deepEqual( Stem("bekvämlighetsinrättningarnas"), "bekvämlighetsinrättning" );
	deepEqual( Stem("bekvämt"), "bekvämt" );
	deepEqual( Stem("bekvänlligheter"), "bekvänl" );
	deepEqual( Stem("bekymmer"), "bekymm" );
	deepEqual( Stem("bekymmersam"), "bekymmersam" );
	deepEqual( Stem("bekymmersamma"), "bekymmersamm" );
	deepEqual( Stem("bekymmerslösa"), "bekymmerslös" );
	deepEqual( Stem("bekymmerslösheten"), "bekymmerslös" );
	deepEqual( Stem("bekymra"), "bekymr" );
	deepEqual( Stem("bekymrad"), "bekymr" );
	deepEqual( Stem("bekymrade"), "bekymr" );
	deepEqual( Stem("bekymrar"), "bekymr" );
	deepEqual( Stem("bekymrat"), "bekymr" );
	deepEqual( Stem("bekymren"), "bekymr" );
	deepEqual( Stem("bekymret"), "bekymret" );
	deepEqual( Stem("bekämpa"), "bekämp" );
	deepEqual( Stem("bekämpande"), "bekämp" );
	deepEqual( Stem("bekände"), "bekänd" );
	deepEqual( Stem("bekänn"), "bekän" );
	deepEqual( Stem("bekänna"), "bekän" );
	deepEqual( Stem("bekännare"), "bekän" );
	deepEqual( Stem("bekännelse"), "bekänn" );
	deepEqual( Stem("bekännelsen"), "bekänn" );
	deepEqual( Stem("bekänner"), "bekän" );
	deepEqual( Stem("belagd"), "belag" );
	deepEqual( Stem("belagda"), "belag" );
	deepEqual( Stem("beledsagade"), "beledsag" );
	deepEqual( Stem("belefvad"), "belefv" );
	deepEqual( Stem("beler"), "bel" );
	deepEqual( Stem("bell"), "bell" );
	deepEqual( Stem("bellmans"), "bellman" );
	deepEqual( Stem("bellona"), "bellon" );
	deepEqual( Stem("bells"), "bell" );
	deepEqual( Stem("belopp"), "belopp" );
	deepEqual( Stem("beloppet"), "beloppet" );
	deepEqual( Stem("belsasars"), "belsasar" );
	deepEqual( Stem("belt"), "belt" );
	deepEqual( Stem("belysa"), "belys" );
	deepEqual( Stem("belysning"), "belysning" );
	deepEqual( Stem("belysningen"), "belysning" );
	deepEqual( Stem("belyst"), "belyst" );
	deepEqual( Stem("belysta"), "belyst" );
	deepEqual( Stem("belystes"), "belyst" );
	deepEqual( Stem("belägen"), "beläg" );
	deepEqual( Stem("belägenhet"), "belägen" );
	deepEqual( Stem("belägg"), "belägg" );
	deepEqual( Stem("belägna"), "belägn" );
	deepEqual( Stem("belägrades"), "belägr" );
	deepEqual( Stem("belägrat"), "belägr" );
	deepEqual( Stem("belåten"), "belåt" );
	deepEqual( Stem("belåtenhet"), "belåten" );
	deepEqual( Stem("belåtet"), "belåtet" );
	deepEqual( Stem("belåtna"), "belåtn" );
	deepEqual( Stem("belåtnare"), "belåtn" );
	deepEqual( Stem("belåtnaste"), "belåtn" );
	deepEqual( Stem("belöna"), "belön" );
	deepEqual( Stem("belönade"), "belön" );
	deepEqual( Stem("belönades"), "belön" );
	deepEqual( Stem("belöning"), "belöning" );
	deepEqual( Stem("belöningen"), "belöning" );
	deepEqual( Stem("bem"), "bem" );
	deepEqual( Stem("bemantla"), "bemantl" );
	deepEqual( Stem("bemedlade"), "bemedl" );
	deepEqual( Stem("bemma"), "bemm" );
	deepEqual( Stem("bemägtigade"), "bemägt" );
	deepEqual( Stem("bemägtigat"), "bemägt" );
	deepEqual( Stem("bemäktiga"), "bemäkt" );
	deepEqual( Stem("bemälte"), "bemält" );
	deepEqual( Stem("bemärka"), "bemärk" );
	deepEqual( Stem("bemärkelse"), "bemärk" );
	deepEqual( Stem("bemärkelsedagar"), "bemärkelsedag" );
	deepEqual( Stem("bemärkt"), "bemärk" );
	deepEqual( Stem("bemärkte"), "bemärk" );
	deepEqual( Stem("bemärktes"), "bemärk" );
	deepEqual( Stem("bemöda"), "bemöd" );
	deepEqual( Stem("bemödade"), "bemöd" );
	deepEqual( Stem("bemödande"), "bemöd" );
	deepEqual( Stem("bemödanden"), "bemöd" );
	deepEqual( Stem("bemödandet"), "bemöd" );
	deepEqual( Stem("bemödat"), "bemöd" );
	deepEqual( Stem("bemöta"), "bemöt" );
	deepEqual( Stem("bemötande"), "bemöt" );
	deepEqual( Stem("bemötas"), "bemöt" );
	deepEqual( Stem("bemöter"), "bemöt" );
	deepEqual( Stem("bemött"), "bemöt" );
	deepEqual( Stem("bemötte"), "bemöt" );
	deepEqual( Stem("bemöttes"), "bemöt" );
	deepEqual( Stem("ben"), "ben" );
	deepEqual( Stem("bena"), "ben" );
	deepEqual( Stem("benade"), "ben" );
	deepEqual( Stem("benat"), "ben" );
	deepEqual( Stem("bene"), "ben" );
	deepEqual( Stem("benedia"), "benedi" );
	deepEqual( Stem("benen"), "ben" );
	deepEqual( Stem("benet"), "benet" );
	deepEqual( Stem("benkläder"), "benkläd" );
	deepEqual( Stem("benne"), "benn" );
	deepEqual( Stem("bennes"), "benn" );
	deepEqual( Stem("benno"), "benno" );
	deepEqual( Stem("benägen"), "benäg" );
	deepEqual( Stem("benäget"), "benäget" );
	deepEqual( Stem("benämna"), "benämn" );
	deepEqual( Stem("benämnas"), "benämn" );
	deepEqual( Stem("benämnde"), "benämnd" );
	deepEqual( Stem("benämndes"), "benämnd" );
	deepEqual( Stem("benämner"), "benämn" );
	deepEqual( Stem("benämnes"), "benämn" );
	deepEqual( Stem("benämning"), "benämning" );
	deepEqual( Stem("benämningen"), "benämning" );
	deepEqual( Stem("benådad"), "benåd" );
	deepEqual( Stem("benådade"), "benåd" );
	deepEqual( Stem("benådande"), "benåd" );
	deepEqual( Stem("beprisade"), "bepris" );
	deepEqual( Stem("bepröfvade"), "bepröfv" );
	deepEqual( Stem("bepröfvelser"), "bepröfv" );
	deepEqual( Stem("beprövad"), "bepröv" );
	deepEqual( Stem("beqvämare"), "beqväm" );
	deepEqual( Stem("beqvämlighet"), "beqväm" );
	deepEqual( Stem("beqvämligheter"), "beqväm" );
	deepEqual( Stem("beqvämt"), "beqvämt" );
	deepEqual( Stem("ber"), "ber" );
	deepEqual( Stem("bereda"), "bered" );
	deepEqual( Stem("beredd"), "bered" );
	deepEqual( Stem("beredda"), "bered" );
	deepEqual( Stem("beredde"), "bered" );
	deepEqual( Stem("bereddes"), "bered" );
	deepEqual( Stem("beredskap"), "beredskap" );
	deepEqual( Stem("beredt"), "bered" );
	deepEqual( Stem("beredvillighet"), "beredvil" );
	deepEqual( Stem("beredvilligt"), "beredvil" );
	deepEqual( Stem("berest"), "berest" );
	deepEqual( Stem("berett"), "beret" );
	deepEqual( Stem("berg"), "berg" );
	deepEqual( Stem("berga"), "berg" );
	deepEqual( Stem("bergad"), "berg" );
	deepEqual( Stem("bergar"), "berg" );
	deepEqual( Stem("bergen"), "berg" );
	deepEqual( Stem("bergena"), "bergen" );
	deepEqual( Stem("bergens"), "berg" );
	deepEqual( Stem("berget"), "berget" );
	deepEqual( Stem("bergets"), "berget" );
	deepEqual( Stem("berghäll"), "berghäll" );
	deepEqual( Stem("berghällen"), "berghäll" );
	deepEqual( Stem("bergknallar"), "bergknall" );
	deepEqual( Stem("bergman"), "bergman" );
	deepEqual( Stem("bergning"), "bergning" );
	deepEqual( Stem("bergshäll"), "bergshäll" );
	deepEqual( Stem("bergshällen"), "bergshäll" );
	deepEqual( Stem("bergsmanstapet"), "bergsmanstapet" );
	deepEqual( Stem("bergsprängningen"), "bergsprängning" );
	deepEqual( Stem("bergsspetsen"), "bergsspets" );
	deepEqual( Stem("bergtroll"), "bergtroll" );
	deepEqual( Stem("bergväggen"), "bergvägg" );
	deepEqual( Stem("bernard"), "bernard" );
	deepEqual( Stem("bernards"), "bernard" );
	deepEqual( Stem("berns"), "bern" );
	deepEqual( Stem("bero"), "bero" );
	deepEqual( Stem("berodde"), "berod" );
	deepEqual( Stem("beroende"), "beroend" );
	deepEqual( Stem("beror"), "ber" );
	deepEqual( Stem("bert"), "bert" );
	deepEqual( Stem("berusande"), "berus" );
	deepEqual( Stem("berusat"), "berus" );
	deepEqual( Stem("berusning"), "berusning" );
	deepEqual( Stem("beryktade"), "beryk" );
	deepEqual( Stem("beryktat"), "beryk" );
	deepEqual( Stem("beräkna"), "beräkn" );
	deepEqual( Stem("beräknad"), "beräkn" );
	deepEqual( Stem("beräknade"), "beräkn" );
	deepEqual( Stem("beräknat"), "beräkn" );
	deepEqual( Stem("beräkning"), "beräkning" );
	deepEqual( Stem("beräkningar"), "beräkning" );
	deepEqual( Stem("beräkningarnes"), "beräkningarn" );
	deepEqual( Stem("berätta"), "berät" );
	deepEqual( Stem("berättade"), "berät" );
	deepEqual( Stem("berättades"), "berät" );
	deepEqual( Stem("berättandes"), "berät" );
	deepEqual( Stem("berättar"), "berät" );
	deepEqual( Stem("berättas"), "berät" );
	deepEqual( Stem("berättat"), "berät" );
	deepEqual( Stem("berättats"), "berättat" );
	deepEqual( Stem("berättelse"), "berätt" );
	deepEqual( Stem("berättelsen"), "berätt" );
	deepEqual( Stem("berättelser"), "berätt" );
	deepEqual( Stem("berättigad"), "berätt" );
	deepEqual( Stem("berättigat"), "berätt" );
	deepEqual( Stem("beröfva"), "beröfv" );
	deepEqual( Stem("beröfvade"), "beröfv" );
	deepEqual( Stem("beröm"), "beröm" );
	deepEqual( Stem("berömd"), "berömd" );
	deepEqual( Stem("berömda"), "berömd" );
	deepEqual( Stem("berömde"), "berömd" );
	deepEqual( Stem("berömdes"), "berömd" );
	deepEqual( Stem("berömdheterna"), "berömd" );
	deepEqual( Stem("berömlig"), "beröm" );
	deepEqual( Stem("berömma"), "berömm" );
	deepEqual( Stem("berömmande"), "berömm" );
	deepEqual( Stem("berömmas"), "berömm" );
	deepEqual( Stem("berömmer"), "berömm" );
	deepEqual( Stem("berömvärd"), "berömvärd" );
	deepEqual( Stem("berömvärt"), "berömvärt" );
	deepEqual( Stem("beröra"), "berör" );
	deepEqual( Stem("berörd"), "berörd" );
	deepEqual( Stem("berörda"), "berörd" );
	deepEqual( Stem("berörde"), "berörd" );
	deepEqual( Stem("berördes"), "berörd" );
	deepEqual( Stem("beröring"), "beröring" );
	deepEqual( Stem("beröringen"), "beröring" );
	deepEqual( Stem("beröringspunkt"), "beröringspunk" );
	deepEqual( Stem("berört"), "berört" );
	deepEqual( Stem("berövad"), "beröv" );
	deepEqual( Stem("berövade"), "beröv" );
	deepEqual( Stem("besagde"), "besag" );
	deepEqual( Stem("besannade"), "besan" );
	deepEqual( Stem("besatt"), "besat" );
	deepEqual( Stem("besatta"), "besat" );
	deepEqual( Stem("bese"), "bes" );
	deepEqual( Stem("besegra"), "besegr" );
	deepEqual( Stem("besegrade"), "besegr" );
	deepEqual( Stem("besegras"), "besegr" );
	deepEqual( Stem("besiktigande"), "besikt" );
	deepEqual( Stem("besinming"), "besinming" );
	deepEqual( Stem("besinna"), "besin" );
	deepEqual( Stem("besinnade"), "besin" );
	deepEqual( Stem("besinnar"), "besin" );
	deepEqual( Stem("besinnat"), "besin" );
	deepEqual( Stem("besinning"), "besinning" );
	deepEqual( Stem("besinningstid"), "besinningstid" );
	deepEqual( Stem("besitta"), "besit" );
	deepEqual( Stem("besitter"), "besit" );
	deepEqual( Stem("besittning"), "besittning" );
	deepEqual( Stem("besittnutg"), "besittnutg" );
	deepEqual( Stem("besjungen"), "besjung" );
	deepEqual( Stem("beska"), "besk" );
	deepEqual( Stem("beskaffad"), "beskaff" );
	deepEqual( Stem("beskaffenhet"), "beskaffen" );
	deepEqual( Stem("beskaffenheten"), "beskaffen" );
	deepEqual( Stem("besked"), "besked" );
	deepEqual( Stem("beskedet"), "beskedet" );
	deepEqual( Stem("beskedlig"), "besked" );
	deepEqual( Stem("beskedliga"), "besked" );
	deepEqual( Stem("beskedlige"), "besked" );
	deepEqual( Stem("beskedlighet"), "besked" );
	deepEqual( Stem("beskedligt"), "besked" );
	deepEqual( Stem("beskickning"), "beskickning" );
	deepEqual( Stem("beskickningen"), "beskickning" );
	deepEqual( Stem("beskref"), "beskref" );
	deepEqual( Stem("beskrev"), "beskrev" );
	deepEqual( Stem("beskrevo"), "beskrevo" );
	deepEqual( Stem("beskrifning"), "beskrifning" );
	deepEqual( Stem("beskrifningen"), "beskrifning" );
	deepEqual( Stem("beskrifva"), "beskrifv" );
	deepEqual( Stem("beskrifver"), "beskrifv" );
	deepEqual( Stem("beskrifvit"), "beskrifvit" );
	deepEqual( Stem("beskriva"), "beskriv" );
	deepEqual( Stem("beskrivit"), "beskrivit" );
	deepEqual( Stem("beskrivna"), "beskrivn" );
	deepEqual( Stem("beskrivning"), "beskrivning" );
	deepEqual( Stem("beskrivningar"), "beskrivning" );
	deepEqual( Stem("beskt"), "besk" );
	deepEqual( Stem("beskuggades"), "beskugg" );
	deepEqual( Stem("beskydd"), "beskyd" );
	deepEqual( Stem("beskyddande"), "beskyd" );
	deepEqual( Stem("beskyddare"), "beskyd" );
	deepEqual( Stem("beskyddares"), "beskyddar" );
	deepEqual( Stem("beskyddarinna"), "beskyddarin" );
	deepEqual( Stem("beskyllning"), "beskyllning" );
	deepEqual( Stem("beskyllningar"), "beskyllning" );
	deepEqual( Stem("beskyllningen"), "beskyllning" );
	deepEqual( Stem("beskäftig"), "beskäft" );
	deepEqual( Stem("beskäftigt"), "beskäft" );
	deepEqual( Stem("beskärd"), "beskärd" );
	deepEqual( Stem("beskåda"), "beskåd" );
	deepEqual( Stem("beslag"), "beslag" );
	deepEqual( Stem("beslaget"), "beslaget" );
	deepEqual( Stem("beslut"), "beslut" );
	deepEqual( Stem("besluta"), "beslut" );
	deepEqual( Stem("beslutar"), "beslut" );
	deepEqual( Stem("beslutas"), "beslut" );
	deepEqual( Stem("beslutat"), "beslut" );
	deepEqual( Stem("besluten"), "beslut" );
	deepEqual( Stem("beslutet"), "beslutet" );
	deepEqual( Stem("beslutit"), "beslutit" );
	deepEqual( Stem("beslutsam"), "beslutsam" );
	deepEqual( Stem("beslutsamhet"), "beslutsam" );
	deepEqual( Stem("beslutsamma"), "beslutsamm" );
	deepEqual( Stem("besläktade"), "besläk" );
	deepEqual( Stem("beslöjad"), "beslöj" );
	deepEqual( Stem("beslöjade"), "beslöj" );
	deepEqual( Stem("beslöt"), "beslöt" );
	deepEqual( Stem("beslöto"), "beslöto" );
	deepEqual( Stem("bespara"), "bespar" );
	deepEqual( Stem("besparades"), "bespar" );
	deepEqual( Stem("besparar"), "bespar" );
	deepEqual( Stem("bess"), "bess" );
	deepEqual( Stem("best"), "best" );
	deepEqual( Stem("besten"), "best" );
	deepEqual( Stem("bestjäla"), "bestjäl" );
	deepEqual( Stem("bestod"), "bestod" );
	deepEqual( Stem("bestodo"), "bestodo" );
	deepEqual( Stem("bestraffa"), "bestraff" );
	deepEqual( Stem("bestrida"), "bestrid" );
	deepEqual( Stem("bestridande"), "bestrid" );
	deepEqual( Stem("beströ"), "beströ" );
	deepEqual( Stem("bestyr"), "bestyr" );
	deepEqual( Stem("bestyra"), "bestyr" );
	deepEqual( Stem("bestyret"), "bestyret" );
	deepEqual( Stem("bestyrkt"), "bestyrk" );
	deepEqual( Stem("beställa"), "beställ" );
	deepEqual( Stem("beställd"), "beställd" );
	deepEqual( Stem("beställde"), "beställd" );
	deepEqual( Stem("beställning"), "beställning" );
	deepEqual( Stem("beställsam"), "beställsam" );
	deepEqual( Stem("beställsamt"), "beställsamt" );
	deepEqual( Stem("beställt"), "beställt" );
	deepEqual( Stem("bestämd"), "bestämd" );
	deepEqual( Stem("bestämda"), "bestämd" );
	deepEqual( Stem("bestämdare"), "bestämd" );
	deepEqual( Stem("bestämde"), "bestämd" );
	deepEqual( Stem("bestämdhet"), "bestämd" );
	deepEqual( Stem("bestämdt"), "bestämd" );
	deepEqual( Stem("bestämma"), "bestämm" );
	deepEqual( Stem("bestämmas"), "bestämm" );
	deepEqual( Stem("bestämmelse"), "bestämm" );
	deepEqual( Stem("bestämmelseort"), "bestämmelseort" );
	deepEqual( Stem("bestämt"), "bestämt" );
	deepEqual( Stem("beständig"), "beständ" );
	deepEqual( Stem("beständiga"), "beständ" );
	deepEqual( Stem("beständigt"), "beständ" );
	deepEqual( Stem("bestänkta"), "bestänk" );
	deepEqual( Stem("bestänkte"), "bestänk" );
	deepEqual( Stem("bestärnd"), "bestärnd" );
	deepEqual( Stem("bestå"), "bestå" );
	deepEqual( Stem("bestående"), "beståend" );
	deepEqual( Stem("beståndande"), "bestånd" );
	deepEqual( Stem("består"), "består" );
	deepEqual( Stem("bestört"), "bestört" );
	deepEqual( Stem("bestörtning"), "bestörtning" );
	deepEqual( Stem("besvara"), "besvar" );
	deepEqual( Stem("besvarade"), "besvar" );
	deepEqual( Stem("besvarades"), "besvar" );
	deepEqual( Stem("besvarande"), "besvar" );
	deepEqual( Stem("besvaras"), "besvar" );
	deepEqual( Stem("besvek"), "besvek" );
	deepEqual( Stem("besvikelse"), "besvik" );
	deepEqual( Stem("besviken"), "besvik" );
	deepEqual( Stem("besvor"), "besv" );
	deepEqual( Stem("besvurit"), "besvurit" );
	deepEqual( Stem("besvär"), "besvär" );
	deepEqual( Stem("besvära"), "besvär" );
	deepEqual( Stem("besvärad"), "besvär" );
	deepEqual( Stem("besvärade"), "besvär" );
	deepEqual( Stem("besvärades"), "besvär" );
	deepEqual( Stem("besvärande"), "besvär" );
	deepEqual( Stem("besvärar"), "besvär" );
	deepEqual( Stem("besväras"), "besvär" );
	deepEqual( Stem("besvärat"), "besvär" );
	deepEqual( Stem("besväret"), "besväret" );
	deepEqual( Stem("besvärjande"), "besvärj" );
	deepEqual( Stem("besvärlig"), "besvär" );
	deepEqual( Stem("besvärliga"), "besvär" );
	deepEqual( Stem("besvärligheter"), "besvär" );
	deepEqual( Stem("besvärligt"), "besvär" );
	deepEqual( Stem("besydnerligt"), "besydner" );
	deepEqual( Stem("besyn"), "besyn" );
	deepEqual( Stem("besynnerlig"), "besynner" );
	deepEqual( Stem("besynnerliga"), "besynner" );
	deepEqual( Stem("besynnerligare"), "besynner" );
	deepEqual( Stem("besynnerligaste"), "besynner" );
	deepEqual( Stem("besynnerligen"), "besynner" );
	deepEqual( Stem("besynnerlighet"), "besynner" );
	deepEqual( Stem("besynnerligt"), "besynner" );
	deepEqual( Stem("besättning"), "besättning" );
	deepEqual( Stem("besättningen"), "besättning" );
	deepEqual( Stem("besåg"), "besåg" );
	deepEqual( Stem("besök"), "besök" );
	deepEqual( Stem("besöka"), "besök" );
	deepEqual( Stem("besökande"), "besök" );
	deepEqual( Stem("besöken"), "besök" );
	deepEqual( Stem("besöker"), "besök" );
	deepEqual( Stem("besöket"), "besöket" );
	deepEqual( Stem("besökt"), "besök" );
	deepEqual( Stem("besökta"), "besök" );
	deepEqual( Stem("besökte"), "besök" );
	deepEqual( Stem("besöktes"), "besök" );
	deepEqual( Stem("bet"), "bet" );
	deepEqual( Stem("betade"), "bet" );
	deepEqual( Stem("betaga"), "betag" );
	deepEqual( Stem("betagen"), "betag" );
	deepEqual( Stem("betagit"), "betagit" );
	deepEqual( Stem("betala"), "betal" );
	deepEqual( Stem("betalade"), "betal" );
	deepEqual( Stem("betalar"), "betal" );
	deepEqual( Stem("betalas"), "betal" );
	deepEqual( Stem("betalat"), "betal" );
	deepEqual( Stem("betalda"), "betald" );
	deepEqual( Stem("betalning"), "betalning" );
	deepEqual( Stem("betalningen"), "betalning" );
	deepEqual( Stem("betalt"), "betalt" );
	deepEqual( Stem("betalte"), "betalt" );
	deepEqual( Stem("betankande"), "betank" );
	deepEqual( Stem("betar"), "bet" );
	deepEqual( Stem("bete"), "bet" );
	deepEqual( Stem("beteckningar"), "beteckning" );
	deepEqual( Stem("betedde"), "beted" );
	deepEqual( Stem("betett"), "betet" );
	deepEqual( Stem("beting"), "beting" );
	deepEqual( Stem("betjanar"), "betjan" );
	deepEqual( Stem("betjening"), "betjening" );
	deepEqual( Stem("betjäna"), "betjän" );
	deepEqual( Stem("betjänade"), "betjän" );
	deepEqual( Stem("betjäningen"), "betjäning" );
	deepEqual( Stem("betjänt"), "betjänt" );
	deepEqual( Stem("betlehem"), "betlehem" );
	deepEqual( Stem("betlehems"), "betlehem" );
	deepEqual( Stem("betog"), "betog" );
	deepEqual( Stem("betrak"), "betrak" );
	deepEqual( Stem("betrakta"), "betrak" );
	deepEqual( Stem("betraktad"), "betrak" );
	deepEqual( Stem("betraktadc"), "betraktadc" );
	deepEqual( Stem("betraktade"), "betrak" );
	deepEqual( Stem("betraktades"), "betrak" );
	deepEqual( Stem("betraktande"), "betrak" );
	deepEqual( Stem("betraktar"), "betrak" );
	deepEqual( Stem("betraktas"), "betrak" );
	deepEqual( Stem("betraktat"), "betrak" );
	deepEqual( Stem("betraktelse"), "betrakt" );
	deepEqual( Stem("betraktelsen"), "betrakt" );
	deepEqual( Stem("betraktelser"), "betrakt" );
	deepEqual( Stem("betror"), "betr" );
	deepEqual( Stem("betryck"), "betryck" );
	deepEqual( Stem("betryckt"), "betryck" );
	deepEqual( Stem("betryckta"), "betryck" );
	deepEqual( Stem("betryckte"), "betryck" );
	deepEqual( Stem("beträda"), "beträd" );
	deepEqual( Stem("beträdde"), "beträd" );
	deepEqual( Stem("beträdt"), "beträd" );
	deepEqual( Stem("beträffade"), "beträff" );
	deepEqual( Stem("beträffande"), "beträff" );
	deepEqual( Stem("beträffar"), "beträff" );
	deepEqual( Stem("betsade"), "bets" );
	deepEqual( Stem("betsel"), "betsel" );
	deepEqual( Stem("bett"), "bett" );
	deepEqual( Stem("bettaktelse"), "bettakt" );
	deepEqual( Stem("betty"), "betty" );
	deepEqual( Stem("bettys"), "betty" );
	deepEqual( Stem("betvingare"), "betving" );
	deepEqual( Stem("betvingaren"), "betving" );
	deepEqual( Stem("betvivlade"), "betvivl" );
	deepEqual( Stem("betvivlar"), "betvivl" );
	deepEqual( Stem("betyda"), "betyd" );
	deepEqual( Stem("betydande"), "betyd" );
	deepEqual( Stem("betydde"), "betyd" );
	deepEqual( Stem("betydelse"), "betyd" );
	deepEqual( Stem("betydelsefull"), "betydelsefull" );
	deepEqual( Stem("betydelsefulla"), "betydelsefull" );
	deepEqual( Stem("betydelsefullt"), "betydelsefull" );
	deepEqual( Stem("betydelselösa"), "betydelselös" );
	deepEqual( Stem("betydelsen"), "betyd" );
	deepEqual( Stem("betydenhet"), "betyden" );
	deepEqual( Stem("betyder"), "betyd" );
	deepEqual( Stem("betydlig"), "betyd" );
	deepEqual( Stem("betydliga"), "betyd" );
	deepEqual( Stem("betydligaste"), "betyd" );
	deepEqual( Stem("betydligt"), "betyd" );
	deepEqual( Stem("betyg"), "betyg" );
	deepEqual( Stem("betyga"), "betyg" );
	deepEqual( Stem("betytt"), "betyt" );
	deepEqual( Stem("betäcka"), "betäck" );
	deepEqual( Stem("betäckta"), "betäck" );
	deepEqual( Stem("betäckte"), "betäck" );
	deepEqual( Stem("betänk"), "betänk" );
	deepEqual( Stem("betänka"), "betänk" );
	deepEqual( Stem("betänkande"), "betänk" );
	deepEqual( Stem("betänketid"), "betänketid" );
	deepEqual( Stem("betänklig"), "betänk" );
	deepEqual( Stem("betänkliga"), "betänk" );
	deepEqual( Stem("betänkligheter"), "betänk" );
	deepEqual( Stem("betänkningstid"), "betänkningstid" );
	deepEqual( Stem("betänksam"), "betänksam" );
	deepEqual( Stem("betänksamt"), "betänksamt" );
	deepEqual( Stem("betänkt"), "betänk" );
	deepEqual( Stem("betänkte"), "betänk" );
	deepEqual( Stem("beund"), "beund" );
	deepEqual( Stem("beundra"), "beundr" );
	deepEqual( Stem("beundrad"), "beundr" );
	deepEqual( Stem("beundrade"), "beundr" );
	deepEqual( Stem("beundrades"), "beundr" );
	deepEqual( Stem("beundran"), "beundran" );
	deepEqual( Stem("beundrande"), "beundr" );
	deepEqual( Stem("beundransvärdt"), "beundransvärd" );
	deepEqual( Stem("beundrar"), "beundr" );
	deepEqual( Stem("beundrare"), "beundr" );
	deepEqual( Stem("beundrat"), "beundr" );
	deepEqual( Stem("bevagenhet"), "bevagen" );
	deepEqual( Stem("bevaka"), "bevak" );
	deepEqual( Stem("bevakad"), "bevak" );
	deepEqual( Stem("bevakas"), "bevak" );
	deepEqual( Stem("bevandra"), "bevandr" );
	deepEqual( Stem("bevant"), "bevant" );
	deepEqual( Stem("bevara"), "bevar" );
	deepEqual( Stem("bevarade"), "bevar" );
	deepEqual( Stem("bevarar"), "bevar" );
	deepEqual( Stem("bevaras"), "bevar" );
	deepEqual( Stem("bevarat"), "bevar" );
	deepEqual( Stem("bevare"), "bev" );
	deepEqual( Stem("bevars"), "bevar" );
	deepEqual( Stem("beve"), "bev" );
	deepEqual( Stem("beveka"), "bevek" );
	deepEqual( Stem("bevekande"), "bevek" );
	deepEqual( Stem("bevekelsegrund"), "bevekelsegrund" );
	deepEqual( Stem("bevekelsegrunder"), "bevekelsegrund" );
	deepEqual( Stem("bevekligaste"), "bevek" );
	deepEqual( Stem("bevekt"), "bevek" );
	deepEqual( Stem("bevektes"), "bevek" );
	deepEqual( Stem("beviljad"), "bevilj" );
	deepEqual( Stem("beviljade"), "bevilj" );
	deepEqual( Stem("beviljades"), "bevilj" );
	deepEqual( Stem("beviljas"), "bevilj" );
	deepEqual( Stem("bevingad"), "beving" );
	deepEqual( Stem("bevingat"), "beving" );
	deepEqual( Stem("bevis"), "bevis" );
	deepEqual( Stem("bevisa"), "bevis" );
	deepEqual( Stem("bevisad"), "bevis" );
	deepEqual( Stem("bevisade"), "bevis" );
	deepEqual( Stem("bevisar"), "bevis" );
	deepEqual( Stem("bevisas"), "bevis" );
	deepEqual( Stem("bevisat"), "bevis" );
	deepEqual( Stem("bevisen"), "bevis" );
	deepEqual( Stem("beviset"), "beviset" );
	deepEqual( Stem("bevista"), "bevist" );
	deepEqual( Stem("bevistat"), "bevist" );
	deepEqual( Stem("bevittna"), "bevittn" );
	deepEqual( Stem("bevittnad"), "bevittn" );
	deepEqual( Stem("bevittnade"), "bevittn" );
	deepEqual( Stem("bevittnat"), "bevittn" );
	deepEqual( Stem("bevändt"), "bevänd" );
	deepEqual( Stem("bevänt"), "bevänt" );
	deepEqual( Stem("bevåg"), "bevåg" );
	deepEqual( Stem("bhnd"), "bhnd" );
	deepEqual( Stem("bi"), "bi" );
	deepEqual( Stem("bibehålla"), "bibehåll" );
	deepEqual( Stem("bibehållen"), "bibehåll" );
	deepEqual( Stem("bibehåller"), "bibehåll" );
	deepEqual( Stem("bibehållit"), "bibehållit" );
	deepEqual( Stem("bibehöll"), "bibehöll" );
	deepEqual( Stem("bibehölle"), "bibehöll" );
	deepEqual( Stem("bibel"), "bibel" );
	deepEqual( Stem("bibelens"), "bibel" );
	deepEqual( Stem("bibeln"), "bibeln" );
	deepEqual( Stem("bibelns"), "bibeln" );
	deepEqual( Stem("bibelsprak"), "bibelsprak" );
	deepEqual( Stem("bibelspråk"), "bibelspråk" );
	deepEqual( Stem("biblar"), "bibl" );
	deepEqual( Stem("biblens"), "bibl" );
	deepEqual( Stem("bibliotek"), "bibliotek" );
	deepEqual( Stem("biblioteket"), "biblioteket" );
	deepEqual( Stem("biblioteksfontänen"), "biblioteksfontän" );
	deepEqual( Stem("biblioteksrum"), "biblioteksrum" );
	deepEqual( Stem("biblioteksrummet"), "biblioteksrummet" );
	deepEqual( Stem("bibo"), "bibo" );
	deepEqual( Stem("bicyklister"), "bicyklist" );
	deepEqual( Stem("bidar"), "bid" );
	deepEqual( Stem("bidrag"), "bidrag" );
	deepEqual( Stem("bidraga"), "bidrag" );
	deepEqual( Stem("bidragit"), "bidragit" );
	deepEqual( Stem("bidrar"), "bidr" );
	deepEqual( Stem("bidrog"), "bidrog" );
	deepEqual( Stem("bidrogo"), "bidrogo" );
	deepEqual( Stem("bien"), "bien" );
	deepEqual( Stem("biet"), "biet" );
	deepEqual( Stem("bifall"), "bifall" );
	deepEqual( Stem("bifalla"), "bifall" );
	deepEqual( Stem("bifaller"), "bifall" );
	deepEqual( Stem("bifallet"), "bifallet" );
	deepEqual( Stem("bifallsskrän"), "bifallsskrän" );
	deepEqual( Stem("bifoga"), "bifog" );
	deepEqual( Stem("bifogade"), "bifog" );
	deepEqual( Stem("bifölls"), "biföll" );
	deepEqual( Stem("bihang"), "bihang" );
	deepEqual( Stem("bihanget"), "bihanget" );
	deepEqual( Stem("bikt"), "bikt" );
	deepEqual( Stem("bikta"), "bikt" );
	deepEqual( Stem("bikten"), "bikt" );
	deepEqual( Stem("bikternas"), "bikt" );
	deepEqual( Stem("biktfäder"), "biktfäd" );
	deepEqual( Stem("bil"), "bil" );
	deepEqual( Stem("bila"), "bil" );
	deepEqual( Stem("bilaga"), "bilag" );
	deepEqual( Stem("bilan"), "bilan" );
	deepEqual( Stem("bilar"), "bil" );
	deepEqual( Stem("bilarna"), "bil" );
	deepEqual( Stem("bild"), "bild" );
	deepEqual( Stem("bilda"), "bild" );
	deepEqual( Stem("bildad"), "bild" );
	deepEqual( Stem("bildade"), "bild" );
	deepEqual( Stem("bildades"), "bild" );
	deepEqual( Stem("bildat"), "bild" );
	deepEqual( Stem("bilden"), "bild" );
	deepEqual( Stem("bilder"), "bild" );
	deepEqual( Stem("bilderna"), "bild" );
	deepEqual( Stem("bildhuggeriverk"), "bildhuggeriverk" );
	deepEqual( Stem("bildlikt"), "bildlik" );
	deepEqual( Stem("bildning"), "bildning" );
	deepEqual( Stem("bildningen"), "bildning" );
	deepEqual( Stem("bildningsgrad"), "bildningsgr" );
	deepEqual( Stem("bildstod"), "bildstod" );
	deepEqual( Stem("bilen"), "bil" );
	deepEqual( Stem("bilens"), "bil" );
	deepEqual( Stem("biljett"), "biljet" );
	deepEqual( Stem("biljetten"), "biljet" );
	deepEqual( Stem("biljetter"), "biljet" );
	deepEqual( Stem("biljettluckan"), "biljettluckan" );
	deepEqual( Stem("billig"), "bil" );
	deepEqual( Stem("billiga"), "bil" );
	deepEqual( Stem("billigare"), "bil" );
	deepEqual( Stem("billigheten"), "bil" );
	deepEqual( Stem("billigt"), "bil" );
	deepEqual( Stem("biltoge"), "biltog" );
	deepEqual( Stem("bilägga"), "bilägg" );
	deepEqual( Stem("binamnet"), "binamnet" );
	deepEqual( Stem("binda"), "bind" );
	deepEqual( Stem("bindande"), "bind" );
	deepEqual( Stem("bindel"), "bindel" );
	deepEqual( Stem("binder"), "bind" );
	deepEqual( Stem("bindlar"), "bindl" );
	deepEqual( Stem("bindmössa"), "bindmöss" );
	deepEqual( Stem("bindmössor"), "bindmöss" );
	deepEqual( Stem("bindor"), "bind" );
	deepEqual( Stem("bingar"), "bing" );
	deepEqual( Stem("binglade"), "bingl" );
	deepEqual( Stem("binnikemask"), "binnikemask" );
	deepEqual( Stem("binnikemasken"), "binnikemask" );
	deepEqual( Stem("biograferna"), "biograf" );
	deepEqual( Stem("biografi"), "biografi" );
	deepEqual( Stem("birck"), "birck" );
	deepEqual( Stem("birger"), "birg" );
	deepEqual( Stem("birgers"), "birger" );
	deepEqual( Stem("birgitta"), "birgit" );
	deepEqual( Stem("biroll"), "biroll" );
	deepEqual( Stem("bisak"), "bisak" );
	deepEqual( Stem("bisarraste"), "bisarr" );
	deepEqual( Stem("bisarrerier"), "bisarreri" );
	deepEqual( Stem("bisats"), "bisat" );
	deepEqual( Stem("biskop"), "biskop" );
	deepEqual( Stem("biskopar"), "biskop" );
	deepEqual( Stem("bismak"), "bismak" );
	deepEqual( Stem("bismarck"), "bismarck" );
	deepEqual( Stem("bist"), "bist" );
	deepEqual( Stem("bister"), "bist" );
	deepEqual( Stem("bistert"), "bistert" );
	deepEqual( Stem("bistra"), "bistr" );
	deepEqual( Stem("bistre"), "bistr" );
	deepEqual( Stem("bistånd"), "bistånd" );
	deepEqual( Stem("bistått"), "biståt" );
	deepEqual( Stem("bit"), "bit" );
	deepEqual( Stem("bita"), "bit" );
	deepEqual( Stem("bitande"), "bit" );
	deepEqual( Stem("bitankar"), "bitank" );
	deepEqual( Stem("bitar"), "bit" );
	deepEqual( Stem("bitarna"), "bit" );
	deepEqual( Stem("bitas"), "bit" );
	deepEqual( Stem("biter"), "bit" );
	deepEqual( Stem("bitit"), "bitit" );
	deepEqual( Stem("biträda"), "biträd" );
	deepEqual( Stem("biträde"), "biträd" );
	deepEqual( Stem("biträden"), "biträd" );
	deepEqual( Stem("biträdet"), "biträdet" );
	deepEqual( Stem("bitter"), "bitt" );
	deepEqual( Stem("bitterhet"), "bitter" );
	deepEqual( Stem("bitterheten"), "bitter" );
	deepEqual( Stem("bitterligen"), "bitter" );
	deepEqual( Stem("bittersta"), "bitterst" );
	deepEqual( Stem("bittert"), "bittert" );
	deepEqual( Stem("bittida"), "bittid" );
	deepEqual( Stem("bittra"), "bittr" );
	deepEqual( Stem("bittraste"), "bittr" );
	deepEqual( Stem("bittring"), "bittring" );
	deepEqual( Stem("biått"), "biått" );
	deepEqual( Stem("bjelkar"), "bjelk" );
	deepEqual( Stem("bjelklaget"), "bjelklaget" );
	deepEqual( Stem("bju"), "bju" );
	deepEqual( Stem("bjuda"), "bjud" );
	deepEqual( Stem("bjudande"), "bjud" );
	deepEqual( Stem("bjudas"), "bjud" );
	deepEqual( Stem("bjuden"), "bjud" );
	deepEqual( Stem("bjuder"), "bjud" );
	deepEqual( Stem("bjudes"), "bjud" );
	deepEqual( Stem("bjudit"), "bjudit" );
	deepEqual( Stem("bjudna"), "bjudn" );
	deepEqual( Stem("bjudning"), "bjudning" );
	deepEqual( Stem("bjudningar"), "bjudning" );
	deepEqual( Stem("bjudningskorten"), "bjudningskort" );
	deepEqual( Stem("bjuds"), "bjud" );
	deepEqual( Stem("bjäff"), "bjäff" );
	deepEqual( Stem("bjälkarna"), "bjälk" );
	deepEqual( Stem("bjällra"), "bjällr" );
	deepEqual( Stem("bjärt"), "bjärt" );
	deepEqual( Stem("bjärta"), "bjärt" );
	deepEqual( Stem("bjärtat"), "bjärt" );
	deepEqual( Stem("bjöd"), "bjöd" );
	deepEqual( Stem("bjödo"), "bjödo" );
	deepEqual( Stem("bjödos"), "bjödo" );
	deepEqual( Stem("bjöds"), "bjöd" );
	deepEqual( Stem("björk"), "björk" );
	deepEqual( Stem("björkallen"), "björkall" );
	deepEqual( Stem("björkar"), "björk" );
	deepEqual( Stem("björkarna"), "björk" );
	deepEqual( Stem("björkbacke"), "björkback" );
	deepEqual( Stem("björkdungen"), "björkdung" );
	deepEqual( Stem("björkens"), "björk" );
	deepEqual( Stem("björks"), "björk" );
	deepEqual( Stem("björn"), "björn" );
	deepEqual( Stem("björnars"), "björnar" );
	deepEqual( Stem("björnen"), "björn" );
	deepEqual( Stem("björns"), "björn" );
	deepEqual( Stem("björnspråket"), "björnspråket" );
	deepEqual( Stem("bl"), "bl" );
	deepEqual( Stem("bla"), "bla" );
	deepEqual( Stem("black"), "black" );
	deepEqual( Stem("blacka"), "black" );
	deepEqual( Stem("blacksuddare"), "blacksud" );
	deepEqual( Stem("blackt"), "black" );
	deepEqual( Stem("blad"), "blad" );
	deepEqual( Stem("bladen"), "blad" );
	deepEqual( Stem("bladet"), "bladet" );
	deepEqual( Stem("bladrika"), "bladrik" );
	deepEqual( Stem("bladverket"), "bladverket" );
	deepEqual( Stem("blanchs"), "blanch" );
	deepEqual( Stem("blancmanger"), "blancmang" );
	deepEqual( Stem("bland"), "bland" );
	deepEqual( Stem("blanda"), "bland" );
	deepEqual( Stem("blandad"), "bland" );
	deepEqual( Stem("blandade"), "bland" );
	deepEqual( Stem("blandande"), "bland" );
	deepEqual( Stem("blandar"), "bland" );
	deepEqual( Stem("blandas"), "bland" );
	deepEqual( Stem("blandat"), "bland" );
	deepEqual( Stem("blandning"), "blandning" );
	deepEqual( Stem("blandsäd"), "blandsäd" );
	deepEqual( Stem("blank"), "blank" );
	deepEqual( Stem("blanka"), "blank" );
	deepEqual( Stem("blankskurad"), "blankskur" );
	deepEqual( Stem("blankt"), "blank" );
	deepEqual( Stem("blankte"), "blank" );
	deepEqual( Stem("blanzeflor"), "blanzefl" );
	deepEqual( Stem("blasande"), "blas" );
	deepEqual( Stem("blcv"), "blcv" );
	deepEqual( Stem("ble"), "ble" );
	deepEqual( Stem("bleckmugg"), "bleckmugg" );
	deepEqual( Stem("blef"), "blef" );
	deepEqual( Stem("blefve"), "blefv" );
	deepEqual( Stem("blefvo"), "blefvo" );
	deepEqual( Stem("blek"), "blek" );
	deepEqual( Stem("bleka"), "blek" );
	deepEqual( Stem("blekare"), "blek" );
	deepEqual( Stem("bleke"), "blek" );
	deepEqual( Stem("blekgröna"), "blekgrön" );
	deepEqual( Stem("blekhet"), "blek" );
	deepEqual( Stem("blekna"), "blekn" );
	deepEqual( Stem("bleknade"), "blekn" );
	deepEqual( Stem("bleknande"), "blekn" );
	deepEqual( Stem("bleknar"), "blekn" );
	deepEqual( Stem("blekt"), "blekt" );
	deepEqual( Stem("blekvit"), "blekvit" );
	deepEqual( Stem("blev"), "blev" );
	deepEqual( Stem("bleve"), "blev" );
	deepEqual( Stem("blevo"), "blevo" );
	deepEqual( Stem("bli"), "bli" );
	deepEqual( Stem("blick"), "blick" );
	deepEqual( Stem("blicka"), "blick" );
	deepEqual( Stem("blickade"), "blick" );
	deepEqual( Stem("blickande"), "blick" );
	deepEqual( Stem("blickar"), "blick" );
	deepEqual( Stem("blickarna"), "blick" );
	deepEqual( Stem("blickarnas"), "blick" );
	deepEqual( Stem("blickat"), "blick" );
	deepEqual( Stem("blicken"), "blick" );
	deepEqual( Stem("blid"), "blid" );
	deepEqual( Stem("blida"), "blid" );
	deepEqual( Stem("blidare"), "blid" );
	deepEqual( Stem("blidka"), "blidk" );
	deepEqual( Stem("blif"), "blif" );
	deepEqual( Stem("blifva"), "blifv" );
	deepEqual( Stem("blifver"), "blifv" );
	deepEqual( Stem("blifvit"), "blifvit" );
	deepEqual( Stem("blind"), "blind" );
	deepEqual( Stem("blinda"), "blind" );
	deepEqual( Stem("blindas"), "blind" );
	deepEqual( Stem("blinddörr"), "blinddörr" );
	deepEqual( Stem("blinde"), "blind" );
	deepEqual( Stem("blindhet"), "blind" );
	deepEqual( Stem("blink"), "blink" );
	deepEqual( Stem("blinka"), "blink" );
	deepEqual( Stem("blinkade"), "blink" );
	deepEqual( Stem("blinkande"), "blink" );
	deepEqual( Stem("blinkar"), "blink" );
	deepEqual( Stem("blinkat"), "blink" );
	deepEqual( Stem("blinken"), "blink" );
	deepEqual( Stem("blinkning"), "blinkning" );
	deepEqual( Stem("blint"), "blint" );
	deepEqual( Stem("blir"), "blir" );
	deepEqual( Stem("blitt"), "blitt" );
	deepEqual( Stem("bliv"), "bliv" );
	deepEqual( Stem("bliva"), "bliv" );
	deepEqual( Stem("blivande"), "bliv" );
	deepEqual( Stem("blivit"), "blivit" );
	deepEqual( Stem("blixt"), "blixt" );
	deepEqual( Stem("blixtar"), "blixt" );
	deepEqual( Stem("blixtarna"), "blixt" );
	deepEqual( Stem("blixtlikt"), "blixtlik" );
	deepEqual( Stem("blixtrade"), "blixtr" );
	deepEqual( Stem("blixtrande"), "blixtr" );
	deepEqual( Stem("blixtrat"), "blixtr" );
	deepEqual( Stem("blixtsnabb"), "blixtsnabb" );
	deepEqual( Stem("blixtsnabbt"), "blixtsnabbt" );
	deepEqual( Stem("blod"), "blod" );
	deepEqual( Stem("blodde"), "blodd" );
	deepEqual( Stem("bloddroppe"), "bloddropp" );
	deepEqual( Stem("blodet"), "blodet" );
	deepEqual( Stem("blodets"), "blodet" );
	deepEqual( Stem("blodfläckar"), "blodfläck" );
	deepEqual( Stem("blodfull"), "blodfull" );
	deepEqual( Stem("blodhund"), "blodhund" );
	deepEqual( Stem("blodig"), "blod" );
	deepEqual( Stem("blodiga"), "blod" );
	deepEqual( Stem("blodnatten"), "blodnat" );
	deepEqual( Stem("blodränder"), "blodränd" );
	deepEqual( Stem("blodröd"), "blodröd" );
	deepEqual( Stem("blodröda"), "blodröd" );
	deepEqual( Stem("blodrött"), "blodröt" );
	deepEqual( Stem("blods"), "blod" );
	deepEqual( Stem("blodsarbete"), "blodsarbet" );
	deepEqual( Stem("blodsdroppar"), "blodsdropp" );
	deepEqual( Stem("blodskam"), "blodskam" );
	deepEqual( Stem("blodskulder"), "blodskuld" );
	deepEqual( Stem("blodsprängda"), "blodspräng" );
	deepEqual( Stem("blodstråle"), "blodstrål" );
	deepEqual( Stem("blodstårar"), "blodstår" );
	deepEqual( Stem("blom"), "blom" );
	deepEqual( Stem("blombukett"), "blombuket" );
	deepEqual( Stem("blombuketter"), "blombuket" );
	deepEqual( Stem("blomdoft"), "blomdoft" );
	deepEqual( Stem("blomfrön"), "blomfrön" );
	deepEqual( Stem("blomglaset"), "blomglaset" );
	deepEqual( Stem("blomkrukor"), "blomkruk" );
	deepEqual( Stem("blomkrukorna"), "blomkruk" );
	deepEqual( Stem("blomlik"), "blomlik" );
	deepEqual( Stem("blomma"), "blomm" );
	deepEqual( Stem("blommade"), "blomm" );
	deepEqual( Stem("blomman"), "blomman" );
	deepEqual( Stem("blommande"), "blomm" );
	deepEqual( Stem("blommar"), "blomm" );
	deepEqual( Stem("blommas"), "blomm" );
	deepEqual( Stem("blommat"), "blomm" );
	deepEqual( Stem("blommen"), "blomm" );
	deepEqual( Stem("blommig"), "blomm" );
	deepEqual( Stem("blommon"), "blommon" );
	deepEqual( Stem("blommor"), "blomm" );
	deepEqual( Stem("blommorna"), "blomm" );
	deepEqual( Stem("blommornas"), "blomm" );
	deepEqual( Stem("blommors"), "blommor" );
	deepEqual( Stem("blomning"), "blomning" );
	deepEqual( Stem("blomrabatten"), "blomrabat" );
	deepEqual( Stem("blomrika"), "blomrik" );
	deepEqual( Stem("blomst"), "blomst" );
	deepEqual( Stem("blomster"), "blomst" );
	deepEqual( Stem("blomsteravsky"), "blomsteravsky" );
	deepEqual( Stem("blomsterbutik"), "blomsterbutik" );
	deepEqual( Stem("blomsterbutiken"), "blomsterbutik" );
	deepEqual( Stem("blomsterdoft"), "blomsterdoft" );
	deepEqual( Stem("blomstergudinn"), "blomstergudin" );
	deepEqual( Stem("blomstermångleri"), "blomstermångleri" );
	deepEqual( Stem("blomsterrabatter"), "blomsterrabat" );
	deepEqual( Stem("blomsterrabatterna"), "blomsterrabat" );
	deepEqual( Stem("blomsterskörden"), "blomsterskörd" );
	deepEqual( Stem("blomsterskötsel"), "blomsterskötsel" );
	deepEqual( Stem("blomsterskötseln"), "blomsterskötseln" );
	deepEqual( Stem("blomsterslag"), "blomsterslag" );
	deepEqual( Stem("blomstersträng"), "blomstersträng" );
	deepEqual( Stem("blomsterstänglar"), "blomsterstängl" );
	deepEqual( Stem("blomsterstånd"), "blomsterstånd" );
	deepEqual( Stem("blomstersäden"), "blomstersäd" );
	deepEqual( Stem("blomstertid"), "blomstertid" );
	deepEqual( Stem("blomsterängar"), "blomsteräng" );
	deepEqual( Stem("blomstra"), "blomstr" );
	deepEqual( Stem("blomstrade"), "blomstr" );
	deepEqual( Stem("blomstrand"), "blomstrand" );
	deepEqual( Stem("blomstrande"), "blomstr" );
	deepEqual( Stem("blomstras"), "blomstr" );
	deepEqual( Stem("blomstrat"), "blomstr" );
	deepEqual( Stem("blomstren"), "blomstr" );
	deepEqual( Stem("blomvaserna"), "blomvas" );
	deepEqual( Stem("blond"), "blond" );
	deepEqual( Stem("blonda"), "blond" );
	deepEqual( Stem("blonde"), "blond" );
	deepEqual( Stem("blonder"), "blond" );
	deepEqual( Stem("blondermössa"), "blondermöss" );
	deepEqual( Stem("blondin"), "blondin" );
	deepEqual( Stem("blont"), "blont" );
	deepEqual( Stem("bloss"), "bloss" );
	deepEqual( Stem("blossa"), "bloss" );
	deepEqual( Stem("blossade"), "bloss" );
	deepEqual( Stem("blossande"), "bloss" );
	deepEqual( Stem("blossen"), "bloss" );
	deepEqual( Stem("blossens"), "bloss" );
	deepEqual( Stem("blott"), "blott" );
	deepEqual( Stem("blotta"), "blott" );
	deepEqual( Stem("blottad"), "blott" );
	deepEqual( Stem("blottade"), "blott" );
	deepEqual( Stem("blottat"), "blott" );
	deepEqual( Stem("blottstäld"), "blottstäld" );
	deepEqual( Stem("blottställa"), "blottställ" );
	deepEqual( Stem("blottställd"), "blottställd" );
	deepEqual( Stem("blottställde"), "blottställd" );
	deepEqual( Stem("blottställer"), "blottställ" );
	deepEqual( Stem("blou"), "blou" );
	deepEqual( Stem("blstert"), "blstert" );
	deepEqual( Stem("blume"), "blum" );
	deepEqual( Stem("blumstedt"), "blumsted" );
	deepEqual( Stem("blumstedts"), "blumsted" );
	deepEqual( Stem("blund"), "blund" );
	deepEqual( Stem("blunda"), "blund" );
	deepEqual( Stem("blundade"), "blund" );
	deepEqual( Stem("blundande"), "blund" );
	deepEqual( Stem("blundar"), "blund" );
	deepEqual( Stem("blus"), "blus" );
	deepEqual( Stem("blusen"), "blus" );
	deepEqual( Stem("blusliv"), "blusliv" );
	deepEqual( Stem("bluslivet"), "bluslivet" );
	deepEqual( Stem("bly"), "bly" );
	deepEqual( Stem("blyertspenna"), "blyertspen" );
	deepEqual( Stem("blyg"), "blyg" );
	deepEqual( Stem("blyga"), "blyg" );
	deepEqual( Stem("blygas"), "blyg" );
	deepEqual( Stem("blygdes"), "blygd" );
	deepEqual( Stem("blyghet"), "blyg" );
	deepEqual( Stem("blygheten"), "blyg" );
	deepEqual( Stem("blygs"), "blyg" );
	deepEqual( Stem("blygsam"), "blygsam" );
	deepEqual( Stem("blygsamhet"), "blygsam" );
	deepEqual( Stem("blygsamheten"), "blygsam" );
	deepEqual( Stem("blygsamhetens"), "blygsam" );
	deepEqual( Stem("blygsamma"), "blygsamm" );
	deepEqual( Stem("blygsamt"), "blygsamt" );
	deepEqual( Stem("blygsel"), "blygsel" );
	deepEqual( Stem("blygselkänsla"), "blygselkänsl" );
	deepEqual( Stem("blygselkänslan"), "blygselkänslan" );
	deepEqual( Stem("blygselrodnad"), "blygselrodn" );
	deepEqual( Stem("blygt"), "blygt" );
	deepEqual( Stem("blygts"), "blygt" );
	deepEqual( Stem("blyhagel"), "blyhagel" );
	deepEqual( Stem("blyn"), "blyn" );
	deepEqual( Stem("bläcka"), "bläck" );
	deepEqual( Stem("bläcket"), "bläcket" );
	deepEqual( Stem("bläckfläckar"), "bläckfläck" );
	deepEqual( Stem("bläcksvart"), "bläcksvart" );
	deepEqual( Stem("bläddra"), "bläddr" );
	deepEqual( Stem("bläddrade"), "bläddr" );
	deepEqual( Stem("bläddrande"), "bläddr" );
	deepEqual( Stem("bländad"), "bländ" );
	deepEqual( Stem("bländade"), "bländ" );
	deepEqual( Stem("bländande"), "bländ" );
	deepEqual( Stem("blänk"), "blänk" );
	deepEqual( Stem("blänka"), "blänk" );
	deepEqual( Stem("blänkande"), "blänk" );
	deepEqual( Stem("blänker"), "blänk" );
	deepEqual( Stem("blänkt"), "blänk" );
	deepEqual( Stem("blänkte"), "blänk" );
	deepEqual( Stem("blära"), "blär" );
	deepEqual( Stem("blästern"), "bläst" );
	deepEqual( Stem("blå"), "blå" );
	deepEqual( Stem("blåa"), "blåa" );
	deepEqual( Stem("blåblick"), "blåblick" );
	deepEqual( Stem("blågredelina"), "blågredelin" );
	deepEqual( Stem("blåklocka"), "blåklock" );
	deepEqual( Stem("blåklockor"), "blåklock" );
	deepEqual( Stem("blåklädd"), "blåkläd" );
	deepEqual( Stem("blåmålade"), "blåmål" );
	deepEqual( Stem("blånade"), "blån" );
	deepEqual( Stem("blånande"), "blån" );
	deepEqual( Stem("blånar"), "blån" );
	deepEqual( Stem("blånat"), "blån" );
	deepEqual( Stem("blår"), "blår" );
	deepEqual( Stem("blårandiga"), "blårand" );
	deepEqual( Stem("blårött"), "blåröt" );
	deepEqual( Stem("blås"), "blås" );
	deepEqual( Stem("blåsa"), "blås" );
	deepEqual( Stem("blåsande"), "blås" );
	deepEqual( Stem("blåser"), "blås" );
	deepEqual( Stem("blåsig"), "blås" );
	deepEqual( Stem("blåsor"), "blås" );
	deepEqual( Stem("blåst"), "blåst" );
	deepEqual( Stem("blåsta"), "blåst" );
	deepEqual( Stem("blåste"), "blåst" );
	deepEqual( Stem("blåsten"), "blåst" );
	deepEqual( Stem("blåsyra"), "blåsyr" );
	deepEqual( Stem("blåsyran"), "blåsyran" );
	deepEqual( Stem("blått"), "blått" );
	deepEqual( Stem("blåådrade"), "blåådr" );
	deepEqual( Stem("blöda"), "blöd" );
	deepEqual( Stem("blödande"), "blöd" );
	deepEqual( Stem("blödde"), "blödd" );
	deepEqual( Stem("blöder"), "blöd" );
	deepEqual( Stem("blödig"), "blöd" );
	deepEqual( Stem("blödiga"), "blöd" );
	deepEqual( Stem("blöjor"), "blöj" );
	deepEqual( Stem("blöta"), "blöt" );
	deepEqual( Stem("blött"), "blött" );
	deepEqual( Stem("bo"), "bo" );
	deepEqual( Stem("boa"), "boa" );
	deepEqual( Stem("boan"), "boan" );
	deepEqual( Stem("bock"), "bock" );
	deepEqual( Stem("bocka"), "bock" );
	deepEqual( Stem("bockade"), "bock" );
	deepEqual( Stem("bockar"), "bock" );
	deepEqual( Stem("bocken"), "bock" );
	deepEqual( Stem("bocktörnet"), "bocktörnet" );
	deepEqual( Stem("bod"), "bod" );
	deepEqual( Stem("bodarna"), "bod" );
	deepEqual( Stem("bodarnes"), "bodarn" );
	deepEqual( Stem("bodbetjänt"), "bodbetjänt" );
	deepEqual( Stem("bodbetjänten"), "bodbetjänt" );
	deepEqual( Stem("bodbitrade"), "bodbitr" );
	deepEqual( Stem("bodde"), "bodd" );
	deepEqual( Stem("boddonjuan"), "boddonjuan" );
	deepEqual( Stem("boden"), "bod" );
	deepEqual( Stem("bodfröken"), "bodfrök" );
	deepEqual( Stem("bodfönster"), "bodfönst" );
	deepEqual( Stem("bodkammaren"), "bodkamm" );
	deepEqual( Stem("bodkammarn"), "bodkammarn" );
	deepEqual( Stem("bodknodden"), "bodknod" );
	deepEqual( Stem("boende"), "boend" );
	deepEqual( Stem("boet"), "boet" );
	deepEqual( Stem("boett"), "boett" );
	deepEqual( Stem("boetten"), "boett" );
	deepEqual( Stem("bofast"), "bof" );
	deepEqual( Stem("bog"), "bog" );
	deepEqual( Stem("bogen"), "bog" );
	deepEqual( Stem("bohaget"), "bohaget" );
	deepEqual( Stem("bohuslänningen"), "bohuslänning" );
	deepEqual( Stem("bohusläns"), "bohuslän" );
	deepEqual( Stem("bohuslänska"), "bohuslänsk" );
	deepEqual( Stem("bohuslänske"), "bohuslänsk" );
	deepEqual( Stem("boja"), "boj" );
	deepEqual( Stem("bojt"), "bojt" );
	deepEqual( Stem("bok"), "bok" );
	deepEqual( Stem("boken"), "bok" );
	deepEqual( Stem("bokens"), "bok" );
	deepEqual( Stem("bokföring"), "bokföring" );
	deepEqual( Stem("bokhylla"), "bokhyll" );
	deepEqual( Stem("bokhyllan"), "bokhyllan" );
	deepEqual( Stem("bokhyllor"), "bokhyll" );
	deepEqual( Stem("bokhyllorna"), "bokhyll" );
	deepEqual( Stem("bokna"), "bokn" );
	deepEqual( Stem("bokskåp"), "bokskåp" );
	deepEqual( Stem("bokskåpet"), "bokskåpet" );
	deepEqual( Stem("bokstaf"), "bokstaf" );
	deepEqual( Stem("bokstafven"), "bokstafv" );
	deepEqual( Stem("bokstav"), "bokstav" );
	deepEqual( Stem("bokstaven"), "bokstav" );
	deepEqual( Stem("bokstavlig"), "bokstav" );
	deepEqual( Stem("bokstavligen"), "bokstav" );
	deepEqual( Stem("bokstäver"), "bokstäv" );
	deepEqual( Stem("boktryckare"), "boktryck" );
	deepEqual( Stem("bokvett"), "bokvet" );
	deepEqual( Stem("bolag"), "bolag" );
	deepEqual( Stem("bolagsdirektör"), "bolagsdirektör" );
	deepEqual( Stem("bolagsdirektörn"), "bolagsdirektörn" );
	deepEqual( Stem("bolares"), "bolar" );
	deepEqual( Stem("bolat"), "bol" );
	deepEqual( Stem("boleriska"), "bolerisk" );
	deepEqual( Stem("boll"), "boll" );
	deepEqual( Stem("bolsterhöljda"), "bolsterhöljd" );
	deepEqual( Stem("bom"), "bom" );
	deepEqual( Stem("bomb"), "bomb" );
	deepEqual( Stem("bombasinsförkläde"), "bombasinsförkläd" );
	deepEqual( Stem("bombasinsklänningar"), "bombasinsklänning" );
	deepEqual( Stem("bombasm"), "bombasm" );
	deepEqual( Stem("bomber"), "bomb" );
	deepEqual( Stem("boms"), "bom" );
	deepEqual( Stem("bomull"), "bomull" );
	deepEqual( Stem("bomullen"), "bomull" );
	deepEqual( Stem("bomullschalen"), "bomullschal" );
	deepEqual( Stem("bomullsgardiner"), "bomullsgardin" );
	deepEqual( Stem("bomullskläder"), "bomullskläd" );
	deepEqual( Stem("bomullsklänning"), "bomullsklänning" );
	deepEqual( Stem("bomullsklänningarna"), "bomullsklänning" );
	deepEqual( Stem("bomullsklänningen"), "bomullsklänning" );
	deepEqual( Stem("bomullslärftsgardiner"), "bomullslärftsgardin" );
	deepEqual( Stem("bomullsparaply"), "bomullsparaply" );
	deepEqual( Stem("bomullsplagg"), "bomullsplagg" );
	deepEqual( Stem("bomullssammet"), "bomullssammet" );
	deepEqual( Stem("bomullsschal"), "bomullsschal" );
	deepEqual( Stem("bomullsschalen"), "bomullsschal" );
	deepEqual( Stem("bomullsstrumpor"), "bomullsstrump" );
	deepEqual( Stem("bomullsstrumporna"), "bomullsstrump" );
	deepEqual( Stem("bon"), "bon" );
	deepEqual( Stem("bonat"), "bon" );
	deepEqual( Stem("bonddräng"), "bonddräng" );
	deepEqual( Stem("bonddöttrarna"), "bonddöttr" );
	deepEqual( Stem("bonde"), "bond" );
	deepEqual( Stem("bonden"), "bond" );
	deepEqual( Stem("bondenamn"), "bondenamn" );
	deepEqual( Stem("bondens"), "bond" );
	deepEqual( Stem("bonderomaner"), "bonderoman" );
	deepEqual( Stem("bondesjäl"), "bondesjäl" );
	deepEqual( Stem("bondeska"), "bondesk" );
	deepEqual( Stem("bondeståndet"), "bondeståndet" );
	deepEqual( Stem("bondflicka"), "bondflick" );
	deepEqual( Stem("bondflickan"), "bondflickan" );
	deepEqual( Stem("bondflickans"), "bondflickan" );
	deepEqual( Stem("bondflickor"), "bondflick" );
	deepEqual( Stem("bondflickorna"), "bondflick" );
	deepEqual( Stem("bondflickornas"), "bondflick" );
	deepEqual( Stem("bondfolket"), "bondfolket" );
	deepEqual( Stem("bondgummorna"), "bondgumm" );
	deepEqual( Stem("bondhustru"), "bondhustru" );
	deepEqual( Stem("bondkvinnas"), "bondkvin" );
	deepEqual( Stem("bondkvinnor"), "bondkvin" );
	deepEqual( Stem("bondkärran"), "bondkärran" );
	deepEqual( Stem("bonemotet"), "bonemotet" );
	deepEqual( Stem("bonhomie"), "bonhomi" );
	deepEqual( Stem("boning"), "boning" );
	deepEqual( Stem("boningar"), "boning" );
	deepEqual( Stem("boningsrum"), "boningsrum" );
	deepEqual( Stem("bonjour"), "bonjour" );
	deepEqual( Stem("bonjourer"), "bonjour" );
	deepEqual( Stem("bonjourliknande"), "bonjourlikn" );
	deepEqual( Stem("bonjur"), "bonjur" );
	deepEqual( Stem("bonom"), "bonom" );
	deepEqual( Stem("bopfällda"), "bopfälld" );
	deepEqual( Stem("bor"), "bor" );
	deepEqual( Stem("bora"), "bor" );
	deepEqual( Stem("borag"), "borag" );
	deepEqual( Stem("bord"), "bord" );
	deepEqual( Stem("bordduken"), "bordduk" );
	deepEqual( Stem("borde"), "bord" );
	deepEqual( Stem("bordel"), "bordel" );
	deepEqual( Stem("borden"), "bord" );
	deepEqual( Stem("bordet"), "bordet" );
	deepEqual( Stem("bords"), "bord" );
	deepEqual( Stem("bordsbön"), "bordsbön" );
	deepEqual( Stem("bordsbönen"), "bordsbön" );
	deepEqual( Stem("bordskamrat"), "bordskamr" );
	deepEqual( Stem("bordskanten"), "bordskant" );
	deepEqual( Stem("bordskifva"), "bordskifv" );
	deepEqual( Stem("bordskifvan"), "bordskifvan" );
	deepEqual( Stem("bordstudsaren"), "bordstuds" );
	deepEqual( Stem("bordsänden"), "bordsänd" );
	deepEqual( Stem("bordun"), "bordun" );
	deepEqual( Stem("borg"), "borg" );
	deepEqual( Stem("borgade"), "borg" );
	deepEqual( Stem("borgare"), "borg" );
	deepEqual( Stem("borgarfolk"), "borgarfolk" );
	deepEqual( Stem("borgarhus"), "borgarhus" );
	deepEqual( Stem("borgat"), "borg" );
	deepEqual( Stem("borgen"), "borg" );
	deepEqual( Stem("borgerlig"), "borger" );
	deepEqual( Stem("borgerliga"), "borger" );
	deepEqual( Stem("borgerligt"), "borger" );
	deepEqual( Stem("borgmästare"), "borgmäst" );
	deepEqual( Stem("borgmästaren"), "borgmäst" );
	deepEqual( Stem("borgmästarns"), "borgmästarn" );
	deepEqual( Stem("borjade"), "borj" );
	deepEqual( Stem("borrade"), "borr" );
	deepEqual( Stem("borrades"), "borr" );
	deepEqual( Stem("borrande"), "borr" );
	deepEqual( Stem("borrat"), "borr" );
	deepEqual( Stem("borsta"), "borst" );
	deepEqual( Stem("borstade"), "borst" );
	deepEqual( Stem("borstades"), "borst" );
	deepEqual( Stem("borstar"), "borst" );
	deepEqual( Stem("borste"), "borst" );
	deepEqual( Stem("borsten"), "borst" );
	deepEqual( Stem("borstning"), "borstning" );
	deepEqual( Stem("bort"), "bort" );
	deepEqual( Stem("borta"), "bort" );
	deepEqual( Stem("bortbjuden"), "bortbjud" );
	deepEqual( Stem("bortblåst"), "bortblåst" );
	deepEqual( Stem("bortblåsta"), "bortblåst" );
	deepEqual( Stem("bortbyta"), "bortbyt" );
	deepEqual( Stem("bortbytt"), "bortbyt" );
	deepEqual( Stem("bortdog"), "bortdog" );
	deepEqual( Stem("bortdöende"), "bortdöend" );
	deepEqual( Stem("bortföres"), "bortför" );
	deepEqual( Stem("bortfört"), "bortfört" );
	deepEqual( Stem("bortgingo"), "bortgingo" );
	deepEqual( Stem("bortglömda"), "bortglömd" );
	deepEqual( Stem("bortglömt"), "bortglömt" );
	deepEqual( Stem("bortgång"), "bortgång" );
	deepEqual( Stem("bortgångne"), "bortgångn" );
	deepEqual( Stem("bortifran"), "bortifran" );
	deepEqual( Stem("bortifrån"), "bortifrån" );
	deepEqual( Stem("bortilande"), "bortil" );
	deepEqual( Stem("bortkastade"), "bortkast" );
	deepEqual( Stem("bortkelade"), "bortkel" );
	deepEqual( Stem("bortlade"), "bortl" );
	deepEqual( Stem("bortnöta"), "bortnöt" );
	deepEqual( Stem("bortnött"), "bortnöt" );
	deepEqual( Stem("bortom"), "bortom" );
	deepEqual( Stem("bortprata"), "bortprat" );
	deepEqual( Stem("bortpratade"), "bortprat" );
	deepEqual( Stem("bortre"), "bortr" );
	deepEqual( Stem("bortresa"), "bortres" );
	deepEqual( Stem("bortresta"), "bortrest" );
	deepEqual( Stem("bortsatt"), "bortsat" );
	deepEqual( Stem("bortschasad"), "bortschas" );
	deepEqual( Stem("bortse"), "borts" );
	deepEqual( Stem("bortskaffa"), "bortskaff" );
	deepEqual( Stem("bortskymd"), "bortskymd" );
	deepEqual( Stem("bortskyndande"), "bortskynd" );
	deepEqual( Stem("bortskämd"), "bortskämd" );
	deepEqual( Stem("bortskämda"), "bortskämd" );
	deepEqual( Stem("bortskämdt"), "bortskämd" );
	deepEqual( Stem("bortskämt"), "bortskämt" );
	deepEqual( Stem("bortsköt"), "bortsköt" );
	deepEqual( Stem("bortslitma"), "bortslitm" );
	deepEqual( Stem("bortsnappat"), "bortsnapp" );
	deepEqual( Stem("bortsopade"), "bortsop" );
	deepEqual( Stem("bortspoladt"), "bortspolad" );
	deepEqual( Stem("bortstjäla"), "bortstjäl" );
	deepEqual( Stem("bortsväva"), "bortsväv" );
	deepEqual( Stem("borttaga"), "borttag" );
	deepEqual( Stem("borttappad"), "borttapp" );
	deepEqual( Stem("borttappade"), "borttapp" );
	deepEqual( Stem("borttorka"), "borttork" );
	deepEqual( Stem("borttorkade"), "borttork" );
	deepEqual( Stem("bortvända"), "bortvänd" );
	deepEqual( Stem("bortvände"), "bortvänd" );
	deepEqual( Stem("bortvänt"), "bortvänt" );
	deepEqual( Stem("bortåt"), "bortåt" );
	deepEqual( Stem("boshdem"), "boshdem" );
	deepEqual( Stem("boskap"), "boskap" );
	deepEqual( Stem("boskapen"), "boskap" );
	deepEqual( Stem("boskapens"), "boskap" );
	deepEqual( Stem("bostad"), "bost" );
	deepEqual( Stem("bostaden"), "bostad" );
	deepEqual( Stem("bostäder"), "bostäd" );
	deepEqual( Stem("bosättning"), "bosättning" );
	deepEqual( Stem("bot"), "bot" );
	deepEqual( Stem("bota"), "bot" );
	deepEqual( Stem("botaniken"), "botanik" );
	deepEqual( Stem("botar"), "bot" );
	deepEqual( Stem("botfärdiga"), "botfärd" );
	deepEqual( Stem("botofter"), "botoft" );
	deepEqual( Stem("botpredikanten"), "botpredikant" );
	deepEqual( Stem("bott"), "bott" );
	deepEqual( Stem("botten"), "bott" );
	deepEqual( Stem("bottenfock"), "bottenfock" );
	deepEqual( Stem("bottenrefvadt"), "bottenrefvad" );
	deepEqual( Stem("bottnen"), "bottn" );
	deepEqual( Stem("boulangermarschen"), "boulangermarsch" );
	deepEqual( Stem("bourgogne"), "bourgogn" );
	deepEqual( Stem("boven"), "bov" );
	deepEqual( Stem("bra"), "bra" );
	deepEqual( Stem("bradska"), "bradsk" );
	deepEqual( Stem("bragden"), "bragd" );
	deepEqual( Stem("bragder"), "bragd" );
	deepEqual( Stem("bragt"), "bragt" );
	deepEqual( Stem("bragte"), "bragt" );
	deepEqual( Stem("brakade"), "brak" );
	deepEqual( Stem("brand"), "brand" );
	deepEqual( Stem("brandfärgat"), "brandfärg" );
	deepEqual( Stem("brandförsäkra"), "brandförsäkr" );
	deepEqual( Stem("brandgul"), "brandgul" );
	deepEqual( Stem("brann"), "brann" );
	deepEqual( Stem("brant"), "brant" );
	deepEqual( Stem("branta"), "brant" );
	deepEqual( Stem("branten"), "brant" );
	deepEqual( Stem("branter"), "brant" );
	deepEqual( Stem("branting"), "branting" );
	deepEqual( Stem("brasa"), "bras" );
	deepEqual( Stem("brasan"), "brasan" );
	deepEqual( Stem("brasans"), "brasan" );
	deepEqual( Stem("brasglöd"), "brasglöd" );
	deepEqual( Stem("braska"), "brask" );
	deepEqual( Stem("brasorna"), "bras" );
	deepEqual( Stem("brast"), "brast" );
	deepEqual( Stem("brattom"), "brattom" );
	deepEqual( Stem("braun"), "braun" );
	deepEqual( Stem("braverat"), "braver" );
	deepEqual( Stem("braxenpanka"), "braxenpank" );
	deepEqual( Stem("bred"), "bred" );
	deepEqual( Stem("breda"), "bred" );
	deepEqual( Stem("bredare"), "bred" );
	deepEqual( Stem("bredast"), "bred" );
	deepEqual( Stem("bredaxlad"), "bredaxl" );
	deepEqual( Stem("bredbent"), "bredbent" );
	deepEqual( Stem("bredd"), "bredd" );
	deepEqual( Stem("bredde"), "bredd" );
	deepEqual( Stem("bredden"), "bredd" );
	deepEqual( Stem("breden"), "bred" );
	deepEqual( Stem("breder"), "bred" );
	deepEqual( Stem("bredskyggig"), "bredskygg" );
	deepEqual( Stem("bredskörtade"), "bredskört" );
	deepEqual( Stem("bredvi"), "bredvi" );
	deepEqual( Stem("bredvid"), "bredvid" );
	deepEqual( Stem("bref"), "bref" );
	deepEqual( Stem("brefvet"), "brefvet" );
	deepEqual( Stem("brefvets"), "brefvet" );
	deepEqual( Stem("brett"), "brett" );
	deepEqual( Stem("brev"), "brev" );
	deepEqual( Stem("brevbärarinnans"), "brevbärarinnan" );
	deepEqual( Stem("breven"), "brev" );
	deepEqual( Stem("brevet"), "brevet" );
	deepEqual( Stem("brevets"), "brevet" );
	deepEqual( Stem("brevid"), "brevid" );
	deepEqual( Stem("brevlådan"), "brevlådan" );
	deepEqual( Stem("bricka"), "brick" );
	deepEqual( Stem("brickan"), "brickan" );
	deepEqual( Stem("brigg"), "brigg" );
	deepEqual( Stem("brikoll"), "brikoll" );
	deepEqual( Stem("briljant"), "briljant" );
	deepEqual( Stem("brin"), "brin" );
	deepEqual( Stem("bring"), "bring" );
	deepEqual( Stem("bringa"), "bring" );
	deepEqual( Stem("bringade"), "bring" );
	deepEqual( Stem("bringan"), "bringan" );
	deepEqual( Stem("bringar"), "bring" );
	deepEqual( Stem("bringat"), "bring" );
	deepEqual( Stem("brinna"), "brinn" );
	deepEqual( Stem("brinnande"), "brinn" );
	deepEqual( Stem("brinne"), "brinn" );
	deepEqual( Stem("brinner"), "brinn" );
	deepEqual( Stem("brist"), "brist" );
	deepEqual( Stem("brista"), "brist" );
	deepEqual( Stem("bristande"), "brist" );
	deepEqual( Stem("bristen"), "brist" );
	deepEqual( Stem("brister"), "brist" );
	deepEqual( Stem("bristfälligt"), "bristfäl" );
	deepEqual( Stem("brita"), "brit" );
	deepEqual( Stem("britta"), "britt" );
	deepEqual( Stem("brittas"), "britt" );
	deepEqual( Stem("brittmässvind"), "brittmässvind" );
	deepEqual( Stem("brmna"), "brmna" );
	deepEqual( Stem("bro"), "bro" );
	deepEqual( Stem("broar"), "broar" );
	deepEqual( Stem("brockhaus"), "brockhaus" );
	deepEqual( Stem("broder"), "brod" );
	deepEqual( Stem("brodera"), "broder" );
	deepEqual( Stem("broderad"), "broder" );
	deepEqual( Stem("broderat"), "broder" );
	deepEqual( Stem("broderi"), "broderi" );
	deepEqual( Stem("broderier"), "broderi" );
	deepEqual( Stem("broderiet"), "broderiet" );
	deepEqual( Stem("brodering"), "brodering" );
	deepEqual( Stem("broderliga"), "broder" );
	deepEqual( Stem("brodern"), "brod" );
	deepEqual( Stem("broderns"), "brod" );
	deepEqual( Stem("broderskap"), "broderskap" );
	deepEqual( Stem("brodet"), "brodet" );
	deepEqual( Stem("brokad"), "brok" );
	deepEqual( Stem("brokig"), "brok" );
	deepEqual( Stem("brokiga"), "brok" );
	deepEqual( Stem("brokigt"), "brok" );
	deepEqual( Stem("bromsar"), "broms" );
	deepEqual( Stem("bromsarna"), "broms" );
	deepEqual( Stem("bron"), "bron" );
	deepEqual( Stem("brons"), "bron" );
	deepEqual( Stem("bronserad"), "bronser" );
	deepEqual( Stem("bronsgruppen"), "bronsgrupp" );
	deepEqual( Stem("bronsstoden"), "bronsstod" );
	deepEqual( Stem("bror"), "bror" );
	deepEqual( Stem("brors"), "bror" );
	deepEqual( Stem("brorskål"), "brorskål" );
	deepEqual( Stem("brorson"), "brorson" );
	deepEqual( Stem("brorsonen"), "brorson" );
	deepEqual( Stem("brorsonens"), "brorson" );
	deepEqual( Stem("broräcket"), "broräcket" );
	deepEqual( Stem("brosch"), "brosch" );
	deepEqual( Stem("brost"), "brost" );
	deepEqual( Stem("brostedt"), "brosted" );
	deepEqual( Stem("brostedts"), "brosted" );
	deepEqual( Stem("brott"), "brott" );
	deepEqual( Stem("brottades"), "brott" );
	deepEqual( Stem("brottande"), "brott" );
	deepEqual( Stem("brotten"), "brott" );
	deepEqual( Stem("brottet"), "brottet" );
	deepEqual( Stem("brottets"), "brottet" );
	deepEqual( Stem("brottslig"), "brotts" );
	deepEqual( Stem("brottsliga"), "brotts" );
	deepEqual( Stem("brottslighet"), "brotts" );
	deepEqual( Stem("brottsligt"), "brotts" );
	deepEqual( Stem("brottsling"), "brottsling" );
	deepEqual( Stem("brottslingarne"), "brottsling" );
	deepEqual( Stem("bru"), "bru" );
	deepEqual( Stem("brud"), "brud" );
	deepEqual( Stem("brudckrona"), "brudckron" );
	deepEqual( Stem("brudekrona"), "brudekron" );
	deepEqual( Stem("bruden"), "brud" );
	deepEqual( Stem("brudens"), "brud" );
	deepEqual( Stem("brudgum"), "brudgum" );
	deepEqual( Stem("brudgummen"), "brudgumm" );
	deepEqual( Stem("brudgums"), "brudgum" );
	deepEqual( Stem("brudklädningen"), "brudklädning" );
	deepEqual( Stem("brudklänningen"), "brudklänning" );
	deepEqual( Stem("brudpallen"), "brudpall" );
	deepEqual( Stem("brudparet"), "brudparet" );
	deepEqual( Stem("brudskaran"), "brudskaran" );
	deepEqual( Stem("brudskruden"), "brudskrud" );
	deepEqual( Stem("brudslöja"), "brudslöj" );
	deepEqual( Stem("brudsängen"), "brudsäng" );
	deepEqual( Stem("bruk"), "bruk" );
	deepEqual( Stem("bruka"), "bruk" );
	deepEqual( Stem("brukade"), "bruk" );
	deepEqual( Stem("brukar"), "bruk" );
	deepEqual( Stem("brukas"), "bruk" );
	deepEqual( Stem("brukat"), "bruk" );
	deepEqual( Stem("brukbar"), "brukb" );
	deepEqual( Stem("bruket"), "bruket" );
	deepEqual( Stem("brukliga"), "bruk" );
	deepEqual( Stem("brukspatron"), "brukspatron" );
	deepEqual( Stem("brum"), "brum" );
	deepEqual( Stem("brumma"), "brumm" );
	deepEqual( Stem("brun"), "brun" );
	deepEqual( Stem("bruna"), "brun" );
	deepEqual( Stem("brunbarkade"), "brunbark" );
	deepEqual( Stem("brunbetsad"), "brunbets" );
	deepEqual( Stem("brunbr"), "brunbr" );
	deepEqual( Stem("brunbrända"), "brunbränd" );
	deepEqual( Stem("brunetta"), "brunet" );
	deepEqual( Stem("brunn"), "brunn" );
	deepEqual( Stem("brunnen"), "brunn" );
	deepEqual( Stem("brunnit"), "brunnit" );
	deepEqual( Stem("brunno"), "brunno" );
	deepEqual( Stem("brunnsbal"), "brunnsbal" );
	deepEqual( Stem("brunnsorten"), "brunnsort" );
	deepEqual( Stem("brunnsresan"), "brunnsresan" );
	deepEqual( Stem("brunrosiga"), "brunros" );
	deepEqual( Stem("brunrosigt"), "brunros" );
	deepEqual( Stem("brunröda"), "brunröd" );
	deepEqual( Stem("brunst"), "brunst" );
	deepEqual( Stem("brunstekta"), "brunstek" );
	deepEqual( Stem("brunt"), "brunt" );
	deepEqual( Stem("brunögda"), "brunög" );
	deepEqual( Stem("brus"), "brus" );
	deepEqual( Stem("brusa"), "brus" );
	deepEqual( Stem("brusade"), "brus" );
	deepEqual( Stem("brusala"), "brusal" );
	deepEqual( Stem("brusalahöst"), "brusalahöst" );
	deepEqual( Stem("brusalaljus"), "brusalaljus" );
	deepEqual( Stem("brusalanatt"), "brusalanat" );
	deepEqual( Stem("brusalavår"), "brusalavår" );
	deepEqual( Stem("brusande"), "brus" );
	deepEqual( Stem("brusar"), "brus" );
	deepEqual( Stem("brush"), "brush" );
	deepEqual( Stem("brushen"), "brush" );
	deepEqual( Stem("brusning"), "brusning" );
	deepEqual( Stem("brusten"), "brust" );
	deepEqual( Stem("brustit"), "brustit" );
	deepEqual( Stem("brustna"), "brustn" );
	deepEqual( Stem("brusto"), "brusto" );
	deepEqual( Stem("brutala"), "brutal" );
	deepEqual( Stem("bruten"), "brut" );
	deepEqual( Stem("brutet"), "brutet" );
	deepEqual( Stem("brutit"), "brutit" );
	deepEqual( Stem("brutna"), "brutn" );
	deepEqual( Stem("bry"), "bry" );
	deepEqual( Stem("brydd"), "brydd" );
	deepEqual( Stem("bryddc"), "bryddc" );
	deepEqual( Stem("brydde"), "brydd" );
	deepEqual( Stem("bryderi"), "bryderi" );
	deepEqual( Stem("brydsamma"), "brydsamm" );
	deepEqual( Stem("brygga"), "brygg" );
	deepEqual( Stem("bryggan"), "bryggan" );
	deepEqual( Stem("bryggans"), "bryggan" );
	deepEqual( Stem("bryggarkärra"), "bryggarkärr" );
	deepEqual( Stem("brygghus"), "brygghus" );
	deepEqual( Stem("bryn"), "bryn" );
	deepEqual( Stem("brynostar"), "brynost" );
	deepEqual( Stem("brynt"), "brynt" );
	deepEqual( Stem("bryr"), "bryr" );
	deepEqual( Stem("bryta"), "bryt" );
	deepEqual( Stem("bryter"), "bryt" );
	deepEqual( Stem("brytning"), "brytning" );
	deepEqual( Stem("brytt"), "brytt" );
	deepEqual( Stem("bräckliga"), "bräck" );
	deepEqual( Stem("bräckt"), "bräck" );
	deepEqual( Stem("bräckte"), "bräck" );
	deepEqual( Stem("bräcktes"), "bräck" );
	deepEqual( Stem("brädd"), "brädd" );
	deepEqual( Stem("brädden"), "brädd" );
	deepEqual( Stem("bräder"), "bräd" );
	deepEqual( Stem("bräderna"), "bräd" );
	deepEqual( Stem("brädet"), "brädet" );
	deepEqual( Stem("brädgårdar"), "brädgård" );
	deepEqual( Stem("brädspelet"), "brädspelet" );
	deepEqual( Stem("brädspelsbordet"), "brädspelsbordet" );
	deepEqual( Stem("bräkte"), "bräkt" );
	deepEqual( Stem("bränd"), "bränd" );
	deepEqual( Stem("brända"), "bränd" );
	deepEqual( Stem("brände"), "bränd" );
	deepEqual( Stem("bränn"), "bränn" );
	deepEqual( Stem("bränna"), "bränn" );
	deepEqual( Stem("brännande"), "bränn" );
	deepEqual( Stem("brännas"), "bränn" );
	deepEqual( Stem("bränner"), "bränn" );
	deepEqual( Stem("bränneribyggnaden"), "bränneribyggnad" );
	deepEqual( Stem("bränningar"), "bränning" );
	deepEqual( Stem("bränningarne"), "bränning" );
	deepEqual( Stem("bränningen"), "bränning" );
	deepEqual( Stem("bränningens"), "bränning" );
	deepEqual( Stem("brännpunkt"), "brännpunk" );
	deepEqual( Stem("brännskadan"), "brännskadan" );
	deepEqual( Stem("brännvin"), "brännvin" );
	deepEqual( Stem("brännvinet"), "brännvinet" );
	deepEqual( Stem("brännvinets"), "brännvinet" );
	deepEqual( Stem("brännvinsglas"), "brännvinsgl" );
	deepEqual( Stem("bränt"), "bränt" );
	deepEqual( Stem("bränvin"), "bränvin" );
	deepEqual( Stem("bränvins"), "bränvin" );
	deepEqual( Stem("brätte"), "brätt" );
	deepEqual( Stem("brätten"), "brätt" );
	deepEqual( Stem("brättet"), "brättet" );
	deepEqual( Stem("bråckband"), "bråckband" );
	deepEqual( Stem("bråddjup"), "bråddjup" );
	deepEqual( Stem("bråddjupet"), "bråddjupet" );
	deepEqual( Stem("brådska"), "brådsk" );
	deepEqual( Stem("brådskan"), "brådskan" );
	deepEqual( Stem("brådskande"), "brådsk" );
	deepEqual( Stem("brådstörtade"), "brådstört" );
	deepEqual( Stem("brådstörtande"), "brådstört" );
	deepEqual( Stem("brådt"), "brådt" );
	deepEqual( Stem("brådtom"), "brådtom" );
	deepEqual( Stem("bråelser"), "bråels" );
	deepEqual( Stem("bråk"), "bråk" );
	deepEqual( Stem("bråka"), "bråk" );
	deepEqual( Stem("bråkades"), "bråk" );
	deepEqual( Stem("bråkat"), "bråk" );
	deepEqual( Stem("bråkdel"), "bråkdel" );
	deepEqual( Stem("bråkiga"), "bråk" );
	deepEqual( Stem("brånar"), "brån" );
	deepEqual( Stem("bråte"), "bråt" );
	deepEqual( Stem("bråtet"), "bråtet" );
	deepEqual( Stem("bråtl"), "bråtl" );
	deepEqual( Stem("brått"), "brått" );
	deepEqual( Stem("bråttom"), "bråttom" );
	deepEqual( Stem("bråvik"), "bråvik" );
	deepEqual( Stem("brö"), "brö" );
	deepEqual( Stem("bröd"), "bröd" );
	deepEqual( Stem("brödbitar"), "brödbit" );
	deepEqual( Stem("bröder"), "bröd" );
	deepEqual( Stem("bröderna"), "bröd" );
	deepEqual( Stem("brödernas"), "bröd" );
	deepEqual( Stem("brödet"), "brödet" );
	deepEqual( Stem("brödkaka"), "brödkak" );
	deepEqual( Stem("brödstycke"), "brödstyck" );
	deepEqual( Stem("brödutdelningen"), "brödutdelning" );
	deepEqual( Stem("bröllop"), "bröllop" );
	deepEqual( Stem("bröllopet"), "bröllopet" );
	deepEqual( Stem("bröllops"), "bröllop" );
	deepEqual( Stem("bröllopsdagen"), "bröllopsdag" );
	deepEqual( Stem("bröllopsgästerna"), "bröllopsgäst" );
	deepEqual( Stem("bröllopshus"), "bröllopshus" );
	deepEqual( Stem("bröllopskrans"), "bröllopskran" );
	deepEqual( Stem("bröllopslägrets"), "bröllopslägret" );
	deepEqual( Stem("bröllopsmarskalken"), "bröllopsmarskalk" );
	deepEqual( Stem("bröllopsresa"), "bröllopsres" );
	deepEqual( Stem("bröllopsskaran"), "bröllopsskaran" );
	deepEqual( Stem("bröst"), "bröst" );
	deepEqual( Stem("brösten"), "bröst" );
	deepEqual( Stem("bröstens"), "bröst" );
	deepEqual( Stem("bröstet"), "bröstet" );
	deepEqual( Stem("bröstfickan"), "bröstfickan" );
	deepEqual( Stem("bröstfickans"), "bröstfickan" );
	deepEqual( Stem("bröstförkläde"), "bröstförkläd" );
	deepEqual( Stem("bröstkråset"), "bröstkråset" );
	deepEqual( Stem("bröstvärk"), "bröstvärk" );
	deepEqual( Stem("bröt"), "bröt" );
	deepEqual( Stem("bröto"), "bröto" );
	deepEqual( Stem("brötos"), "bröto" );
	deepEqual( Stem("bt"), "bt" );
	deepEqual( Stem("bttrak"), "bttrak" );
	deepEqual( Stem("bubblade"), "bubbl" );
	deepEqual( Stem("bubblande"), "bubbl" );
	deepEqual( Stem("bubblor"), "bubbl" );
	deepEqual( Stem("buch"), "buch" );
	deepEqual( Stem("bucklade"), "buckl" );
	deepEqual( Stem("bucklorna"), "buckl" );
	deepEqual( Stem("bud"), "bud" );
	deepEqual( Stem("budet"), "budet" );
	deepEqual( Stem("budorden"), "budord" );
	deepEqual( Stem("budordet"), "budordet" );
	deepEqual( Stem("buds"), "bud" );
	deepEqual( Stem("budskap"), "budskap" );
	deepEqual( Stem("buga"), "bug" );
	deepEqual( Stem("bugade"), "bug" );
	deepEqual( Stem("bugande"), "bug" );
	deepEqual( Stem("bugar"), "bug" );
	deepEqual( Stem("bugat"), "bug" );
	deepEqual( Stem("bugning"), "bugning" );
	deepEqual( Stem("bugningar"), "bugning" );
	deepEqual( Stem("buk"), "buk" );
	deepEqual( Stem("bukett"), "buket" );
	deepEqual( Stem("buketten"), "buket" );
	deepEqual( Stem("buketter"), "buket" );
	deepEqual( Stem("bukt"), "bukt" );
	deepEqual( Stem("buktande"), "bukt" );
	deepEqual( Stem("bukter"), "bukt" );
	deepEqual( Stem("buktiga"), "bukt" );
	deepEqual( Stem("bulevarden"), "bulevard" );
	deepEqual( Stem("buljong"), "buljong" );
	deepEqual( Stem("buljongen"), "buljong" );
	deepEqual( Stem("buljongens"), "buljong" );
	deepEqual( Stem("bull"), "bull" );
	deepEqual( Stem("bulle"), "bull" );
	deepEqual( Stem("buller"), "bull" );
	deepEqual( Stem("bullhalva"), "bullhalv" );
	deepEqual( Stem("bullrande"), "bullr" );
	deepEqual( Stem("bullrar"), "bullr" );
	deepEqual( Stem("bullret"), "bullret" );
	deepEqual( Stem("bulor"), "bul" );
	deepEqual( Stem("bulsig"), "buls" );
	deepEqual( Stem("bulta"), "bult" );
	deepEqual( Stem("bultade"), "bult" );
	deepEqual( Stem("bultande"), "bult" );
	deepEqual( Stem("bultar"), "bult" );
	deepEqual( Stem("bulwer"), "bulw" );
	deepEqual( Stem("bunden"), "bund" );
	deepEqual( Stem("bundet"), "bundet" );
	deepEqual( Stem("bundit"), "bundit" );
	deepEqual( Stem("bundna"), "bundn" );
	deepEqual( Stem("bundo"), "bundo" );
	deepEqual( Stem("bundt"), "bund" );
	deepEqual( Stem("bundtar"), "bund" );
	deepEqual( Stem("bundttröja"), "bundttröj" );
	deepEqual( Stem("bunt"), "bunt" );
	deepEqual( Stem("buntar"), "bunt" );
	deepEqual( Stem("bunyans"), "bunyan" );
	deepEqual( Stem("bur"), "bur" );
	deepEqual( Stem("buren"), "bur" );
	deepEqual( Stem("burgund"), "burgund" );
	deepEqual( Stem("burit"), "burit" );
	deepEqual( Stem("burk"), "burk" );
	deepEqual( Stem("burkar"), "burk" );
	deepEqual( Stem("burna"), "burn" );
	deepEqual( Stem("buro"), "buro" );
	deepEqual( Stem("burskap"), "burskap" );
	deepEqual( Stem("busarna"), "bus" );
	deepEqual( Stem("buse"), "bus" );
	deepEqual( Stem("buskar"), "busk" );
	deepEqual( Stem("buskarna"), "busk" );
	deepEqual( Stem("buske"), "busk" );
	deepEqual( Stem("busken"), "busk" );
	deepEqual( Stem("buss"), "buss" );
	deepEqual( Stem("bussen"), "buss" );
	deepEqual( Stem("butelj"), "butelj" );
	deepEqual( Stem("buteljen"), "butelj" );
	deepEqual( Stem("buteljer"), "butelj" );
	deepEqual( Stem("buteljerna"), "butelj" );
	deepEqual( Stem("buteljgrön"), "buteljgrön" );
	deepEqual( Stem("buteljgröna"), "buteljgrön" );
	deepEqual( Stem("butiken"), "butik" );
	deepEqual( Stem("butikernas"), "butik" );
	deepEqual( Stem("butiksfönster"), "butiksfönst" );
	deepEqual( Stem("buttert"), "buttert" );
	deepEqual( Stem("buttra"), "buttr" );
	deepEqual( Stem("buvudet"), "buvudet" );
	deepEqual( Stem("by"), "by" );
	deepEqual( Stem("byar"), "byar" );
	deepEqual( Stem("byffen"), "byff" );
	deepEqual( Stem("bygd"), "bygd" );
	deepEqual( Stem("bygden"), "bygd" );
	deepEqual( Stem("bygderna"), "bygd" );
	deepEqual( Stem("bygdes"), "bygd" );
	deepEqual( Stem("bygdt"), "bygd" );
	deepEqual( Stem("bygga"), "bygg" );
	deepEqual( Stem("byggande"), "bygg" );
	deepEqual( Stem("byggas"), "bygg" );
	deepEqual( Stem("byggd"), "bygg" );
	deepEqual( Stem("byggda"), "bygg" );
	deepEqual( Stem("byggde"), "bygg" );
	deepEqual( Stem("bygger"), "bygg" );
	deepEqual( Stem("byggnad"), "byggn" );
	deepEqual( Stem("byggnaden"), "byggnad" );
	deepEqual( Stem("byggnader"), "byggnad" );
	deepEqual( Stem("byggnaderna"), "byggnad" );
	deepEqual( Stem("byggnadsställningar"), "byggnadsställning" );
	deepEqual( Stem("byggningen"), "byggning" );
	deepEqual( Stem("byggt"), "bygg" );
	deepEqual( Stem("bygningen"), "bygning" );
	deepEqual( Stem("bygt"), "bygt" );
	deepEqual( Stem("bylte"), "bylt" );
	deepEqual( Stem("byn"), "byn" );
	deepEqual( Stem("byns"), "byn" );
	deepEqual( Stem("byrå"), "byrå" );
	deepEqual( Stem("byråar"), "byrå" );
	deepEqual( Stem("byrålådan"), "byrålådan" );
	deepEqual( Stem("byrån"), "byrån" );
	deepEqual( Stem("byråns"), "byrån" );
	deepEqual( Stem("byrånyckel"), "byrånyckel" );
	deepEqual( Stem("bysättning"), "bysättning" );
	deepEqual( Stem("byta"), "byt" );
	deepEqual( Stem("byte"), "byt" );
	deepEqual( Stem("bytet"), "bytet" );
	deepEqual( Stem("byting"), "byting" );
	deepEqual( Stem("bytt"), "bytt" );
	deepEqual( Stem("bytte"), "bytt" );
	deepEqual( Stem("byxfickorna"), "byxfick" );
	deepEqual( Stem("byxor"), "byx" );
	deepEqual( Stem("byxorna"), "byx" );
	deepEqual( Stem("bä"), "bä" );
	deepEqual( Stem("bäckar"), "bäck" );
	deepEqual( Stem("bäckarna"), "bäck" );
	deepEqual( Stem("bäcken"), "bäck" );
	deepEqual( Stem("bäd"), "bäd" );
	deepEqual( Stem("bädd"), "bädd" );
	deepEqual( Stem("bädda"), "bädd" );
	deepEqual( Stem("bäddad"), "bädd" );
	deepEqual( Stem("bäddade"), "bädd" );
	deepEqual( Stem("bäddar"), "bädd" );
	deepEqual( Stem("bädden"), "bädd" );
	deepEqual( Stem("bäfvan"), "bäfvan" );
	deepEqual( Stem("bäfvande"), "bäfv" );
	deepEqual( Stem("bäfvat"), "bäfv" );
	deepEqual( Stem("bägare"), "bäg" );
	deepEqual( Stem("bägarn"), "bägarn" );
	deepEqual( Stem("bägge"), "bägg" );
	deepEqual( Stem("bägges"), "bägg" );
	deepEqual( Stem("bälg"), "bälg" );
	deepEqual( Stem("bält"), "bält" );
	deepEqual( Stem("bän"), "bän" );
	deepEqual( Stem("bänder"), "bänd" );
	deepEqual( Stem("bängde"), "bäng" );
	deepEqual( Stem("bänk"), "bänk" );
	deepEqual( Stem("bänkar"), "bänk" );
	deepEqual( Stem("bänkarna"), "bänk" );
	deepEqual( Stem("bänken"), "bänk" );
	deepEqual( Stem("bänkraden"), "bänkrad" );
	deepEqual( Stem("bär"), "bär" );
	deepEqual( Stem("bära"), "bär" );
	deepEqual( Stem("bärande"), "bär" );
	deepEqual( Stem("bärare"), "bär" );
	deepEqual( Stem("bäras"), "bär" );
	deepEqual( Stem("bären"), "bär" );
	deepEqual( Stem("bärga"), "bärg" );
	deepEqual( Stem("bärgad"), "bärg" );
	deepEqual( Stem("bärgade"), "bärg" );
	deepEqual( Stem("bärlig"), "bär" );
	deepEqual( Stem("bärs"), "bär" );
	deepEqual( Stem("bärsärkaraseri"), "bärsärkaraseri" );
	deepEqual( Stem("bäst"), "bäst" );
	deepEqual( Stem("bästa"), "bäst" );
	deepEqual( Stem("bäste"), "bäst" );
	deepEqual( Stem("bättra"), "bättr" );
	deepEqual( Stem("bättre"), "bättr" );
	deepEqual( Stem("bättringsvägen"), "bättringsväg" );
	deepEqual( Stem("bävade"), "bäv" );
	deepEqual( Stem("bävan"), "bävan" );
	deepEqual( Stem("bävande"), "bäv" );
	deepEqual( Stem("bävar"), "bäv" );
	deepEqual( Stem("bäverråtta"), "bäverråt" );
	deepEqual( Stem("båd"), "båd" );
	deepEqual( Stem("båda"), "båd" );
	deepEqual( Stem("bådande"), "båd" );
	deepEqual( Stem("bådar"), "båd" );
	deepEqual( Stem("bådas"), "båd" );
	deepEqual( Stem("både"), "båd" );
	deepEqual( Stem("bådo"), "bådo" );
	deepEqual( Stem("båga"), "båg" );
	deepEqual( Stem("bågar"), "båg" );
	deepEqual( Stem("båge"), "båg" );
	deepEqual( Stem("bågen"), "båg" );
	deepEqual( Stem("bågiga"), "båg" );
	deepEqual( Stem("båglampa"), "båglamp" );
	deepEqual( Stem("bågna"), "bågn" );
	deepEqual( Stem("bål"), "bål" );
	deepEqual( Stem("båld"), "båld" );
	deepEqual( Stem("bålet"), "bålet" );
	deepEqual( Stem("bålrika"), "bålrik" );
	deepEqual( Stem("bålstor"), "bålst" );
	deepEqual( Stem("bånglade"), "bångl" );
	deepEqual( Stem("bård"), "bård" );
	deepEqual( Stem("bården"), "bård" );
	deepEqual( Stem("bårens"), "bår" );
	deepEqual( Stem("bårhade"), "bårh" );
	deepEqual( Stem("bås"), "bås" );
	deepEqual( Stem("båt"), "båt" );
	deepEqual( Stem("båtar"), "båt" );
	deepEqual( Stem("båtarna"), "båt" );
	deepEqual( Stem("båtarnas"), "båt" );
	deepEqual( Stem("båtarne"), "båt" );
	deepEqual( Stem("båten"), "båt" );
	deepEqual( Stem("båtens"), "båt" );
	deepEqual( Stem("båthuset"), "båthuset" );
	deepEqual( Stem("båtkarl"), "båtkarl" );
	deepEqual( Stem("båtslöjtnanten"), "båtslöjtnant" );
	deepEqual( Stem("böcker"), "böck" );
	deepEqual( Stem("böckerna"), "böck" );
	deepEqual( Stem("böcklins"), "böcklin" );
	deepEqual( Stem("böj"), "böj" );
	deepEqual( Stem("böja"), "böj" );
	deepEqual( Stem("böjd"), "böjd" );
	deepEqual( Stem("böjda"), "böjd" );
	deepEqual( Stem("böjde"), "böjd" );
	deepEqual( Stem("böjdes"), "böjd" );
	deepEqual( Stem("böjelse"), "böj" );
	deepEqual( Stem("böjelser"), "böj" );
	deepEqual( Stem("böjlig"), "böj" );
	deepEqual( Stem("böjliga"), "böj" );
	deepEqual( Stem("böjning"), "böjning" );
	deepEqual( Stem("böjningarna"), "böjning" );
	deepEqual( Stem("böjningen"), "böjning" );
	deepEqual( Stem("böjt"), "böjt" );
	deepEqual( Stem("böl"), "böl" );
	deepEqual( Stem("böld"), "böld" );
	deepEqual( Stem("bölder"), "böld" );
	deepEqual( Stem("bölja"), "bölj" );
	deepEqual( Stem("böljade"), "bölj" );
	deepEqual( Stem("böljeslag"), "böljeslag" );
	deepEqual( Stem("böljor"), "bölj" );
	deepEqual( Stem("böljorna"), "bölj" );
	deepEqual( Stem("böljornas"), "bölj" );
	deepEqual( Stem("böljskum"), "böljskum" );
	deepEqual( Stem("böll"), "böll" );
	deepEqual( Stem("bömisk"), "bömisk" );
	deepEqual( Stem("bön"), "bön" );
	deepEqual( Stem("böncstunder"), "böncstund" );
	deepEqual( Stem("bönder"), "bönd" );
	deepEqual( Stem("bönderna"), "bönd" );
	deepEqual( Stem("böne"), "bön" );
	deepEqual( Stem("bönehus"), "bönehus" );
	deepEqual( Stem("böneman"), "böneman" );
	deepEqual( Stem("bönemöte"), "bönemöt" );
	deepEqual( Stem("bönemöten"), "bönemöt" );
	deepEqual( Stem("bönen"), "bön" );
	deepEqual( Stem("böner"), "bön" );
	deepEqual( Stem("bönerna"), "bön" );
	deepEqual( Stem("bönernas"), "bön" );
	deepEqual( Stem("bönesuck"), "bönesuck" );
	deepEqual( Stem("bönfalla"), "bönfall" );
	deepEqual( Stem("bönfallande"), "bönfall" );
	deepEqual( Stem("bönkapell"), "bönkapell" );
	deepEqual( Stem("bör"), "bör" );
	deepEqual( Stem("böra"), "bör" );
	deepEqual( Stem("börd"), "börd" );
	deepEqual( Stem("börda"), "börd" );
	deepEqual( Stem("bördan"), "bördan" );
	deepEqual( Stem("börde"), "börd" );
	deepEqual( Stem("bördens"), "börd" );
	deepEqual( Stem("börja"), "börj" );
	deepEqual( Stem("börjacle"), "börjacl" );
	deepEqual( Stem("började"), "börj" );
	deepEqual( Stem("börjades"), "börj" );
	deepEqual( Stem("börjam"), "börjam" );
	deepEqual( Stem("början"), "början" );
	deepEqual( Stem("börjar"), "börj" );
	deepEqual( Stem("börjas"), "börj" );
	deepEqual( Stem("börjat"), "börj" );
	deepEqual( Stem("börjen"), "börj" );
	deepEqual( Stem("börs"), "bör" );
	deepEqual( Stem("bört"), "bört" );
	deepEqual( Stem("bössa"), "böss" );
	deepEqual( Stem("bössan"), "bössan" );
	deepEqual( Stem("böttiger"), "bött" );
	deepEqual( Stem("bövelen"), "bövel" );
	deepEqual( Stem("böveln"), "böveln" );
	deepEqual( Stem("c"), "c" );
	deepEqual( Stem("ca"), "ca" );
	deepEqual( Stem("calle"), "call" );
	deepEqual( Stem("camma"), "camm" );
	deepEqual( Stem("canto"), "canto" );
	deepEqual( Stem("care"), "car" );
	deepEqual( Stem("carl"), "carl" );
	deepEqual( Stem("carlo"), "carlo" );
	deepEqual( Stem("carree"), "carre" );
	deepEqual( Stem("causent"), "causent" );
	deepEqual( Stem("cavalleria"), "cavalleri" );
	deepEqual( Stem("ccix"), "ccix" );
	deepEqual( Stem("ccvii"), "ccvii" );
	deepEqual( Stem("ccviii"), "ccviii" );
	deepEqual( Stem("ccx"), "ccx" );
	deepEqual( Stem("cecilia"), "cecili" );
	deepEqual( Stem("cecilias"), "cecili" );
	deepEqual( Stem("cedera"), "ceder" );
	deepEqual( Stem("cell"), "cell" );
	deepEqual( Stem("celle"), "cell" );
	deepEqual( Stem("cellerna"), "cell" );
	deepEqual( Stem("ceremoni"), "ceremoni" );
	deepEqual( Stem("ceremonien"), "ceremoni" );
	deepEqual( Stem("ceremonierna"), "ceremoni" );
	deepEqual( Stem("ceremoniplikter"), "ceremoniplik" );
	deepEqual( Stem("cftcr"), "cftcr" );
	deepEqual( Stem("cfter"), "cfter" );
	deepEqual( Stem("cgent"), "cgent" );
	deepEqual( Stem("ch"), "ch" );
	deepEqual( Stem("chablis"), "chablis" );
	deepEqual( Stem("champagne"), "champagn" );
	deepEqual( Stem("champagnen"), "champagn" );
	deepEqual( Stem("champagnesorten"), "champagnesort" );
	deepEqual( Stem("charlatan"), "charlatan" );
	deepEqual( Stem("charlataner"), "charlatan" );
	deepEqual( Stem("charlatanfasoner"), "charlatanfason" );
	deepEqual( Stem("charm"), "charm" );
	deepEqual( Stem("charmant"), "charmant" );
	deepEqual( Stem("charmanta"), "charmant" );
	deepEqual( Stem("charmerad"), "charmer" );
	deepEqual( Stem("charmörer"), "charmör" );
	deepEqual( Stem("charon"), "charon" );
	deepEqual( Stem("chasseur"), "chasseur" );
	deepEqual( Stem("chelone"), "chelon" );
	deepEqual( Stem("chevalereska"), "chevaleresk" );
	deepEqual( Stem("chevelyr"), "chevelyr" );
	deepEqual( Stem("cheviotstyget"), "cheviotstyget" );
	deepEqual( Stem("chic"), "chic" );
	deepEqual( Stem("chicago"), "chicago" );
	deepEqual( Stem("chiffer"), "chiff" );
	deepEqual( Stem("chiffonjeklaffen"), "chiffonjeklaff" );
	deepEqual( Stem("chiffonjen"), "chiffonj" );
	deepEqual( Stem("chikanerad"), "chikaner" );
	deepEqual( Stem("chloris"), "chloris" );
	deepEqual( Stem("choklad"), "chokl" );
	deepEqual( Stem("chokladbit"), "chokladbit" );
	deepEqual( Stem("chokladbrun"), "chokladbrun" );
	deepEqual( Stem("chokladkaka"), "chokladkak" );
	deepEqual( Stem("chopin"), "chopin" );
	deepEqual( Stem("chopins"), "chopin" );
	deepEqual( Stem("christine"), "christin" );
	deepEqual( Stem("cig"), "cig" );
	deepEqual( Stem("cigarett"), "cigaret" );
	deepEqual( Stem("cigarettstumpen"), "cigarettstump" );
	deepEqual( Stem("cigarr"), "cigarr" );
	deepEqual( Stem("cigarraskan"), "cigarraskan" );
	deepEqual( Stem("cigarrbod"), "cigarrbod" );
	deepEqual( Stem("cigarrbutik"), "cigarrbutik" );
	deepEqual( Stem("cigarren"), "cigarr" );
	deepEqual( Stem("cigarrer"), "cigarr" );
	deepEqual( Stem("cigarrerna"), "cigarr" );
	deepEqual( Stem("cigarrett"), "cigarret" );
	deepEqual( Stem("cigarretten"), "cigarret" );
	deepEqual( Stem("cigarretter"), "cigarret" );
	deepEqual( Stem("cigarrettetui"), "cigarrettetui" );
	deepEqual( Stem("cigarrettspetsen"), "cigarrettspets" );
	deepEqual( Stem("cigarrfodral"), "cigarrfodral" );
	deepEqual( Stem("cigarrfrågan"), "cigarrfrågan" );
	deepEqual( Stem("cigarrkopp"), "cigarrkopp" );
	deepEqual( Stem("cigarröken"), "cigarrök" );
	deepEqual( Stem("cirka"), "cirk" );
	deepEqual( Stem("cirkel"), "cirkel" );
	deepEqual( Stem("cirklar"), "cirkl" );
	deepEqual( Stem("citat"), "cit" );
	deepEqual( Stem("citia"), "citi" );
	deepEqual( Stem("citron"), "citron" );
	deepEqual( Stem("citrongul"), "citrongul" );
	deepEqual( Stem("citronskiva"), "citronskiv" );
	deepEqual( Stem("citronsyrad"), "citronsyr" );
	deepEqual( Stem("civilisation"), "civilisation" );
	deepEqual( Stem("civilisationens"), "civilisation" );
	deepEqual( Stem("civiliserade"), "civiliser" );
	deepEqual( Stem("cj"), "cj" );
	deepEqual( Stem("ckade"), "ckad" );
	deepEqual( Stem("clct"), "clct" );
	deepEqual( Stem("cldrött"), "cldrött" );
	deepEqual( Stem("cleganta"), "clegant" );
	deepEqual( Stem("clownaktigt"), "clownakt" );
	deepEqual( Stem("clätt"), "clätt" );
	deepEqual( Stem("cn"), "cn" );
	deepEqual( Stem("cns"), "cns" );
	deepEqual( Stem("coeur"), "coeur" );
	deepEqual( Stem("coldcream"), "coldcream" );
	deepEqual( Stem("collvins"), "collvin" );
	deepEqual( Stem("cologne"), "cologn" );
	deepEqual( Stem("commun"), "commun" );
	deepEqual( Stem("connoissent"), "connoissent" );
	deepEqual( Stem("corde"), "cord" );
	deepEqual( Stem("corpus"), "corpus" );
	deepEqual( Stem("corydalis"), "corydalis" );
	deepEqual( Stem("cr"), "cr" );
	deepEqual( Stem("creature"), "creatur" );
	deepEqual( Stem("cremer"), "crem" );
	deepEqual( Stem("crepen"), "crep" );
	deepEqual( Stem("croit"), "croit" );
	deepEqual( Stem("ct"), "ct" );
	deepEqual( Stem("ctra"), "ctra" );
	deepEqual( Stem("ctt"), "ctt" );
	deepEqual( Stem("curetterna"), "curet" );
	deepEqual( Stem("cyankalium"), "cyankalium" );
	deepEqual( Stem("cyankaliumpiller"), "cyankaliumpill" );
	deepEqual( Stem("cylinder"), "cylind" );
	deepEqual( Stem("cylinderhatt"), "cylinderhat" );
	deepEqual( Stem("cyrenaiker"), "cyrenaik" );
	deepEqual( Stem("cyrenaikerna"), "cyrenaik" );
	deepEqual( Stem("d"), "d" );
	deepEqual( Stem("da"), "da" );
	deepEqual( Stem("dad"), "dad" );
	deepEqual( Stem("dadcs"), "dadc" );
	deepEqual( Stem("dade"), "dad" );
	deepEqual( Stem("dag"), "dag" );
	deepEqual( Stem("dagama"), "dagam" );
	deepEqual( Stem("dagar"), "dag" );
	deepEqual( Stem("dagarna"), "dag" );
	deepEqual( Stem("dagarnas"), "dag" );
	deepEqual( Stem("dagarne"), "dag" );
	deepEqual( Stem("dagars"), "dagar" );
	deepEqual( Stem("dagas"), "dag" );
	deepEqual( Stem("dagblad"), "dagbl" );
	deepEqual( Stem("dagbladet"), "dagbladet" );
	deepEqual( Stem("dagbladskontoret"), "dagbladskontoret" );
	deepEqual( Stem("dagbok"), "dagbok" );
	deepEqual( Stem("dagboken"), "dagbok" );
	deepEqual( Stem("dagboksblad"), "dagboksbl" );
	deepEqual( Stem("dagbokslappar"), "dagbokslapp" );
	deepEqual( Stem("dagen"), "dag" );
	deepEqual( Stem("dagens"), "dag" );
	deepEqual( Stem("dager"), "dag" );
	deepEqual( Stem("dagern"), "dag" );
	deepEqual( Stem("dagg"), "dagg" );
	deepEqual( Stem("daggdroppe"), "daggdropp" );
	deepEqual( Stem("daggdtoppar"), "daggdtopp" );
	deepEqual( Stem("daggen"), "dagg" );
	deepEqual( Stem("daggfrisk"), "daggfrisk" );
	deepEqual( Stem("daggiga"), "dagg" );
	deepEqual( Stem("daggryningen"), "daggryning" );
	deepEqual( Stem("daglig"), "dag" );
	deepEqual( Stem("dagliga"), "dag" );
	deepEqual( Stem("dagligen"), "dag" );
	deepEqual( Stem("dagligrummet"), "dagligrummet" );
	deepEqual( Stem("dagligt"), "dag" );
	deepEqual( Stem("dagningen"), "dagning" );
	deepEqual( Stem("dags"), "dag" );
	deepEqual( Stem("dagsarbete"), "dagsarbet" );
	deepEqual( Stem("dagsljus"), "dagsljus" );
	deepEqual( Stem("dagsljuset"), "dagsljuset" );
	deepEqual( Stem("dagslång"), "dagslång" );
	deepEqual( Stem("dagslånga"), "dagslång" );
	deepEqual( Stem("dagsresa"), "dagsres" );
	deepEqual( Stem("dagstaho"), "dagstaho" );
	deepEqual( Stem("dagstahohlm"), "dagstahohlm" );
	deepEqual( Stem("dagstaholm"), "dagstaholm" );
	deepEqual( Stem("dal"), "dal" );
	deepEqual( Stem("dala"), "dal" );
	deepEqual( Stem("dalar"), "dal" );
	deepEqual( Stem("dalen"), "dal" );
	deepEqual( Stem("dalfolk"), "dalfolk" );
	deepEqual( Stem("daligt"), "dal" );
	deepEqual( Stem("dalkarl"), "dalkarl" );
	deepEqual( Stem("dallra"), "dallr" );
	deepEqual( Stem("dallrade"), "dallr" );
	deepEqual( Stem("dallrande"), "dallr" );
	deepEqual( Stem("dallring"), "dallring" );
	deepEqual( Stem("dalmålning"), "dalmålning" );
	deepEqual( Stem("dalstedt"), "dalsted" );
	deepEqual( Stem("dam"), "dam" );
	deepEqual( Stem("damast"), "dam" );
	deepEqual( Stem("damastöverdraget"), "damastöverdraget" );
	deepEqual( Stem("dame"), "dam" );
	deepEqual( Stem("damen"), "dam" );
	deepEqual( Stem("damens"), "dam" );
	deepEqual( Stem("damer"), "dam" );
	deepEqual( Stem("damerna"), "dam" );
	deepEqual( Stem("damm"), "damm" );
	deepEqual( Stem("damma"), "damm" );
	deepEqual( Stem("dammade"), "damm" );
	deepEqual( Stem("dammades"), "damm" );
	deepEqual( Stem("dammar"), "damm" );
	deepEqual( Stem("dammen"), "damm" );
	deepEqual( Stem("dammet"), "dammet" );
	deepEqual( Stem("dammig"), "damm" );
	deepEqual( Stem("dammiga"), "damm" );
	deepEqual( Stem("dammkorn"), "dammkorn" );
	deepEqual( Stem("dammskyarna"), "dammsky" );
	deepEqual( Stem("dampäls"), "dampäl" );
	deepEqual( Stem("damring"), "damring" );
	deepEqual( Stem("damtorkar"), "damtork" );
	deepEqual( Stem("dan"), "dan" );
	deepEqual( Stem("dana"), "dan" );
	deepEqual( Stem("danad"), "dan" );
	deepEqual( Stem("dandy"), "dandy" );
	deepEqual( Stem("daniel"), "daniel" );
	deepEqual( Stem("dankar"), "dank" );
	deepEqual( Stem("dans"), "dan" );
	deepEqual( Stem("dansa"), "dans" );
	deepEqual( Stem("dansade"), "dans" );
	deepEqual( Stem("dansande"), "dans" );
	deepEqual( Stem("dansandes"), "dans" );
	deepEqual( Stem("dansar"), "dans" );
	deepEqual( Stem("dansat"), "dans" );
	deepEqual( Stem("dansdocka"), "dansdock" );
	deepEqual( Stem("dansen"), "dans" );
	deepEqual( Stem("dansk"), "dansk" );
	deepEqual( Stem("dansskola"), "dansskol" );
	deepEqual( Stem("danssteg"), "danssteg" );
	deepEqual( Stem("dant"), "dant" );
	deepEqual( Stem("danviken"), "danvik" );
	deepEqual( Stem("dar"), "dar" );
	deepEqual( Stem("darfor"), "darf" );
	deepEqual( Stem("dari"), "dari" );
	deepEqual( Stem("darifrån"), "darifrån" );
	deepEqual( Stem("darom"), "darom" );
	deepEqual( Stem("darr"), "darr" );
	deepEqual( Stem("darra"), "darr" );
	deepEqual( Stem("darrade"), "darr" );
	deepEqual( Stem("darrande"), "darr" );
	deepEqual( Stem("darrar"), "darr" );
	deepEqual( Stem("darrat"), "darr" );
	deepEqual( Stem("darrning"), "darrning" );
	deepEqual( Stem("darvid"), "darvid" );
	deepEqual( Stem("darwinismen"), "darwinism" );
	deepEqual( Stem("dasa"), "das" );
	deepEqual( Stem("daterad"), "dater" );
	deepEqual( Stem("daterar"), "dater" );
	deepEqual( Stem("dato"), "dato" );
	deepEqual( Stem("datorn"), "datorn" );
	deepEqual( Stem("datorsbostaden"), "datorsbostad" );
	deepEqual( Stem("datum"), "datum" );
	deepEqual( Stem("datumen"), "datum" );
	deepEqual( Stem("dc"), "dc" );
	deepEqual( Stem("dcdför"), "dcdför" );
	deepEqual( Stem("dcn"), "dcn" );
	deepEqual( Stem("dct"), "dct" );
	deepEqual( Stem("dcu"), "dcu" );
	deepEqual( Stem("de"), "de" );
	deepEqual( Stem("debatt"), "debat" );
	deepEqual( Stem("debet"), "debet" );
	deepEqual( Stem("december"), "decemb" );
	deepEqual( Stem("decembermörker"), "decembermörk" );
	deepEqual( Stem("decemberstormen"), "decemberstorm" );
	deepEqual( Stem("definition"), "definition" );
	deepEqual( Stem("definitivt"), "definitivt" );
	deepEqual( Stem("defunts"), "defunt" );
	deepEqual( Stem("deg"), "deg" );
	deepEqual( Stem("degen"), "deg" );
	deepEqual( Stem("degkaret"), "degkaret" );
	deepEqual( Stem("dejelig"), "deje" );
	deepEqual( Stem("dekadans"), "dekadan" );
	deepEqual( Stem("deklameras"), "deklamer" );
	deepEqual( Stem("dekokter"), "dekok" );
	deepEqual( Stem("dekorationer"), "dekoration" );
	deepEqual( Stem("dekorationerna"), "dekoration" );
	deepEqual( Stem("dekorativ"), "dekorativ" );
	deepEqual( Stem("dekorerat"), "dekorer" );
	deepEqual( Stem("del"), "del" );
	deepEqual( Stem("dela"), "del" );
	deepEqual( Stem("delad"), "del" );
	deepEqual( Stem("delade"), "del" );
	deepEqual( Stem("delades"), "del" );
	deepEqual( Stem("delaktig"), "delakt" );
	deepEqual( Stem("delande"), "del" );
	deepEqual( Stem("delar"), "del" );
	deepEqual( Stem("delarna"), "del" );
	deepEqual( Stem("delarne"), "del" );
	deepEqual( Stem("delas"), "del" );
	deepEqual( Stem("delat"), "del" );
	deepEqual( Stem("delen"), "del" );
	deepEqual( Stem("delicti"), "delicti" );
	deepEqual( Stem("delikat"), "delik" );
	deepEqual( Stem("delikata"), "delikat" );
	deepEqual( Stem("delikataste"), "delikat" );
	deepEqual( Stem("delila"), "delil" );
	deepEqual( Stem("delma"), "delm" );
	deepEqual( Stem("delos"), "delo" );
	deepEqual( Stem("dels"), "del" );
	deepEqual( Stem("delsen"), "dels" );
	deepEqual( Stem("deltaga"), "deltag" );
	deepEqual( Stem("deltagande"), "deltag" );
	deepEqual( Stem("deltagandet"), "deltag" );
	deepEqual( Stem("deltagaren"), "deltag" );
	deepEqual( Stem("deltagit"), "deltagit" );
	deepEqual( Stem("delvis"), "delvis" );
	deepEqual( Stem("dem"), "dem" );
	deepEqual( Stem("demagogen"), "demagog" );
	deepEqual( Stem("demla"), "deml" );
	deepEqual( Stem("demma"), "demm" );
	deepEqual( Stem("demokratisk"), "demokratisk" );
	deepEqual( Stem("demonen"), "demon" );
	deepEqual( Stem("demonisk"), "demonisk" );
	deepEqual( Stem("demoniskt"), "demonisk" );
	deepEqual( Stem("demonstration"), "demonstration" );
	deepEqual( Stem("demostenes"), "demosten" );
	deepEqual( Stem("demutan"), "demutan" );
	deepEqual( Stem("den"), "den" );
	deepEqual( Stem("dena"), "den" );
	deepEqual( Stem("deneb"), "deneb" );
	deepEqual( Stem("denna"), "denn" );
	deepEqual( Stem("dennas"), "denn" );
	deepEqual( Stem("denne"), "denn" );
	deepEqual( Stem("dennes"), "denn" );
	deepEqual( Stem("dens"), "den" );
	deepEqual( Stem("densamma"), "densamm" );
	deepEqual( Stem("densamme"), "densamm" );
	deepEqual( Stem("denscöconens"), "denscöcon" );
	deepEqual( Stem("departemanget"), "departemanget" );
	deepEqual( Stem("departement"), "departement" );
	deepEqual( Stem("deporterad"), "deporter" );
	deepEqual( Stem("der"), "der" );
	deepEqual( Stem("derade"), "der" );
	deepEqual( Stem("deraf"), "deraf" );
	deepEqual( Stem("deras"), "der" );
	deepEqual( Stem("derefter"), "dereft" );
	deepEqual( Stem("deremot"), "deremot" );
	deepEqual( Stem("derest"), "derest" );
	deepEqual( Stem("derför"), "derför" );
	deepEqual( Stem("derföre"), "derför" );
	deepEqual( Stem("derhän"), "derhän" );
	deepEqual( Stem("deri"), "deri" );
	deepEqual( Stem("derifrån"), "derifrån" );
	deepEqual( Stem("derigenom"), "derigenom" );
	deepEqual( Stem("derinne"), "derin" );
	deepEqual( Stem("derjemte"), "derjemt" );
	deepEqual( Stem("dermed"), "dermed" );
	deepEqual( Stem("dermont"), "dermont" );
	deepEqual( Stem("derna"), "dern" );
	deepEqual( Stem("derom"), "derom" );
	deepEqual( Stem("deromkring"), "deromkring" );
	deepEqual( Stem("derpå"), "derpå" );
	deepEqual( Stem("derstädes"), "derstäd" );
	deepEqual( Stem("dertill"), "dertill" );
	deepEqual( Stem("derunder"), "derund" );
	deepEqual( Stem("deruppe"), "derupp" );
	deepEqual( Stem("deruti"), "deruti" );
	deepEqual( Stem("dervid"), "dervid" );
	deepEqual( Stem("deråt"), "deråt" );
	deepEqual( Stem("deröfver"), "deröfv" );
	deepEqual( Stem("des"), "des" );
	deepEqual( Stem("desamma"), "desamm" );
	deepEqual( Stem("desorganisation"), "desorganisation" );
	deepEqual( Stem("desperat"), "desper" );
	deepEqual( Stem("dess"), "dess" );
	deepEqual( Stem("dessa"), "dess" );
	deepEqual( Stem("dessemellan"), "dessemellan" );
	deepEqual( Stem("desserten"), "dessert" );
	deepEqual( Stem("dessförinnan"), "dessförinnan" );
	deepEqual( Stem("desslikes"), "desslik" );
	deepEqual( Stem("dessouernas"), "dessou" );
	deepEqual( Stem("dessutom"), "dessutom" );
	deepEqual( Stem("desto"), "desto" );
	deepEqual( Stem("det"), "det" );
	deepEqual( Stem("detalj"), "detalj" );
	deepEqual( Stem("detaljer"), "detalj" );
	deepEqual( Stem("detaljkunskaper"), "detaljkunskap" );
	deepEqual( Stem("detektiv"), "detektiv" );
	deepEqual( Stem("deth"), "deth" );
	deepEqual( Stem("detsamma"), "detsamm" );
	deepEqual( Stem("detta"), "dett" );
	deepEqual( Stem("deva"), "dev" );
	deepEqual( Stem("devient"), "devient" );
	deepEqual( Stem("di"), "di" );
	deepEqual( Stem("dia"), "dia" );
	deepEqual( Stem("diagnosen"), "diagnos" );
	deepEqual( Stem("dianatemplet"), "dianatemplet" );
	deepEqual( Stem("diciplars"), "diciplar" );
	deepEqual( Stem("dier"), "dier" );
	deepEqual( Stem("diet"), "diet" );
	deepEqual( Stem("dieten"), "diet" );
	deepEqual( Stem("dietrich"), "dietrich" );
	deepEqual( Stem("dig"), "dig" );
	deepEqual( Stem("diger"), "dig" );
	deepEqual( Stem("dighet"), "dig" );
	deepEqual( Stem("digheter"), "dig" );
	deepEqual( Stem("digitalis"), "digitalis" );
	deepEqual( Stem("digl"), "digl" );
	deepEqual( Stem("dignade"), "dign" );
	deepEqual( Stem("dignande"), "dign" );
	deepEqual( Stem("digt"), "digt" );
	deepEqual( Stem("dikanten"), "dikant" );
	deepEqual( Stem("diken"), "dik" );
	deepEqual( Stem("dikens"), "dik" );
	deepEqual( Stem("diket"), "diket" );
	deepEqual( Stem("dikt"), "dikt" );
	deepEqual( Stem("diktare"), "dikt" );
	deepEqual( Stem("diktarefeber"), "diktarefeb" );
	deepEqual( Stem("diktarna"), "dikt" );
	deepEqual( Stem("diktat"), "dikt" );
	deepEqual( Stem("dikten"), "dikt" );
	deepEqual( Stem("diktens"), "dikt" );
	deepEqual( Stem("dikter"), "dikt" );
	deepEqual( Stem("dikterad"), "dikter" );
	deepEqual( Stem("dikterat"), "dikter" );
	deepEqual( Stem("dikterna"), "dikt" );
	deepEqual( Stem("diktionären"), "diktionär" );
	deepEqual( Stem("dim"), "dim" );
	deepEqual( Stem("dimensioner"), "dimension" );
	deepEqual( Stem("dimma"), "dimm" );
	deepEqual( Stem("dimman"), "dimman" );
	deepEqual( Stem("dimmig"), "dimm" );
	deepEqual( Stem("dimmor"), "dimm" );
	deepEqual( Stem("dimmorna"), "dimm" );
	deepEqual( Stem("din"), "din" );
	deepEqual( Stem("dina"), "din" );
	deepEqual( Stem("dingla"), "dingl" );
	deepEqual( Stem("dinglade"), "dingl" );
	deepEqual( Stem("dinglande"), "dingl" );
	deepEqual( Stem("dinglar"), "dingl" );
	deepEqual( Stem("diplomat"), "diplom" );
	deepEqual( Stem("direkt"), "direk" );
	deepEqual( Stem("direkta"), "direk" );
	deepEqual( Stem("direktör"), "direktör" );
	deepEqual( Stem("direktören"), "direktör" );
	deepEqual( Stem("direktörn"), "direktörn" );
	deepEqual( Stem("discipel"), "discipel" );
	deepEqual( Stem("disciplinen"), "disciplin" );
	deepEqual( Stem("disigt"), "dis" );
	deepEqual( Stem("disk"), "disk" );
	deepEqual( Stem("diska"), "disk" );
	deepEqual( Stem("diskant"), "diskant" );
	deepEqual( Stem("disken"), "disk" );
	deepEqual( Stem("diskret"), "diskret" );
	deepEqual( Stem("diskreta"), "diskret" );
	deepEqual( Stem("diskussion"), "diskussion" );
	deepEqual( Stem("diskutera"), "diskuter" );
	deepEqual( Stem("diskuterade"), "diskuter" );
	deepEqual( Stem("dispens"), "disp" );
	deepEqual( Stem("disponera"), "disponer" );
	deepEqual( Stem("disposition"), "disposition" );
	deepEqual( Stem("disputera"), "disputer" );
	deepEqual( Stem("distansen"), "distans" );
	deepEqual( Stem("distrahera"), "distraher" );
	deepEqual( Stem("distriktet"), "distriktet" );
	deepEqual( Stem("dit"), "dit" );
	deepEqual( Stem("ditin"), "ditin" );
	deepEqual( Stem("ditlades"), "ditl" );
	deepEqual( Stem("ditlocka"), "ditlock" );
	deepEqual( Stem("dito"), "dito" );
	deepEqual( Stem("ditresan"), "ditresan" );
	deepEqual( Stem("ditsatte"), "ditsat" );
	deepEqual( Stem("ditt"), "ditt" );
	deepEqual( Stem("ditåt"), "ditåt" );
	deepEqual( Stem("diurä"), "diurä" );
	deepEqual( Stem("divansbordet"), "divansbordet" );
	deepEqual( Stem("divergensen"), "divergens" );
	deepEqual( Stem("diverse"), "divers" );
	deepEqual( Stem("division"), "division" );
	deepEqual( Stem("dj"), "dj" );
	deepEqual( Stem("djerf"), "djerf" );
	deepEqual( Stem("djerfhet"), "djerf" );
	deepEqual( Stem("djerft"), "djerft" );
	deepEqual( Stem("djerfva"), "djerfv" );
	deepEqual( Stem("djerfve"), "djerfv" );
	deepEqual( Stem("djungel"), "djungel" );
	deepEqual( Stem("djup"), "djup" );
	deepEqual( Stem("djupa"), "djup" );
	deepEqual( Stem("djupare"), "djup" );
	deepEqual( Stem("djupast"), "djup" );
	deepEqual( Stem("djupaste"), "djup" );
	deepEqual( Stem("djupblå"), "djupblå" );
	deepEqual( Stem("djupet"), "djupet" );
	deepEqual( Stem("djupsinnigaste"), "djupsinn" );
	deepEqual( Stem("djupsinnighet"), "djupsinn" );
	deepEqual( Stem("djupsinnigt"), "djupsinn" );
	deepEqual( Stem("djupt"), "djupt" );
	deepEqual( Stem("djur"), "djur" );
	deepEqual( Stem("djuransiktet"), "djuransiktet" );
	deepEqual( Stem("djurbilder"), "djurbild" );
	deepEqual( Stem("djuren"), "djur" );
	deepEqual( Stem("djuret"), "djuret" );
	deepEqual( Stem("djurets"), "djuret" );
	deepEqual( Stem("djurgård"), "djurgård" );
	deepEqual( Stem("djurgården"), "djurgård" );
	deepEqual( Stem("djurgårds"), "djurgård" );
	deepEqual( Stem("djurgårdsbrunn"), "djurgårdsbrun" );
	deepEqual( Stem("djurgårdsspektaklet"), "djurgårdsspektaklet" );
	deepEqual( Stem("djuriskt"), "djurisk" );
	deepEqual( Stem("djurs"), "djur" );
	deepEqual( Stem("djä"), "djä" );
	deepEqual( Stem("djärv"), "djärv" );
	deepEqual( Stem("djärva"), "djärv" );
	deepEqual( Stem("djärvare"), "djärv" );
	deepEqual( Stem("djärvhet"), "djärv" );
	deepEqual( Stem("djärvt"), "djärvt" );
	deepEqual( Stem("djävlar"), "djävl" );
	deepEqual( Stem("djävlarna"), "djävl" );
	deepEqual( Stem("djävulen"), "djävul" );
	deepEqual( Stem("djävuln"), "djävuln" );
	deepEqual( Stem("djävulskvinna"), "djävulskvin" );
	deepEqual( Stem("dli"), "dli" );
	deepEqual( Stem("dll"), "dll" );
	deepEqual( Stem("dln"), "dln" );
	deepEqual( Stem("dlodet"), "dlodet" );
	deepEqual( Stem("docent"), "docent" );
	deepEqual( Stem("dock"), "dock" );
	deepEqual( Stem("docka"), "dock" );
	deepEqual( Stem("dockan"), "dockan" );
	deepEqual( Stem("dockklädningen"), "dockklädning" );
	deepEqual( Stem("dockor"), "dock" );
	deepEqual( Stem("dockorna"), "dock" );
	deepEqual( Stem("dod"), "dod" );
	deepEqual( Stem("doden"), "dod" );
	deepEqual( Stem("dof"), "dof" );
	deepEqual( Stem("doft"), "doft" );
	deepEqual( Stem("dofta"), "doft" );
	deepEqual( Stem("doftade"), "doft" );
	deepEqual( Stem("doftande"), "doft" );
	deepEqual( Stem("doftar"), "doft" );
	deepEqual( Stem("doften"), "doft" );
	deepEqual( Stem("dofters"), "dofter" );
	deepEqual( Stem("doftsjäl"), "doftsjäl" );
	deepEqual( Stem("dofva"), "dofv" );
	deepEqual( Stem("dog"), "dog" );
	deepEqual( Stem("doge"), "dog" );
	deepEqual( Stem("dogg"), "dogg" );
	deepEqual( Stem("dogo"), "dogo" );
	deepEqual( Stem("dok"), "dok" );
	deepEqual( Stem("doktor"), "dokt" );
	deepEqual( Stem("doktorinnan"), "doktorinnan" );
	deepEqual( Stem("doktorn"), "doktorn" );
	deepEqual( Stem("doktorns"), "doktorn" );
	deepEqual( Stem("doktorsdisputation"), "doktorsdisputation" );
	deepEqual( Stem("dokument"), "dokument" );
	deepEqual( Stem("dokumenterat"), "dokumenter" );
	deepEqual( Stem("dokumentet"), "dokumentet" );
	deepEqual( Stem("dold"), "dold" );
	deepEqual( Stem("dolda"), "dold" );
	deepEqual( Stem("dolde"), "dold" );
	deepEqual( Stem("doldes"), "dold" );
	deepEqual( Stem("doljas"), "dolj" );
	deepEqual( Stem("doljer"), "dolj" );
	deepEqual( Stem("doljs"), "dolj" );
	deepEqual( Stem("dolt"), "dolt" );
	deepEqual( Stem("dolts"), "dolt" );
	deepEqual( Stem("dom"), "dom" );
	deepEqual( Stem("domar"), "dom" );
	deepEqual( Stem("domare"), "dom" );
	deepEqual( Stem("domaren"), "dom" );
	deepEqual( Stem("domareuppsyn"), "domareuppsyn" );
	deepEqual( Stem("domarevärdigheten"), "domarevärd" );
	deepEqual( Stem("domarinnan"), "domarinnan" );
	deepEqual( Stem("domcn"), "domcn" );
	deepEqual( Stem("domderade"), "domder" );
	deepEqual( Stem("domedag"), "domedag" );
	deepEqual( Stem("domen"), "dom" );
	deepEqual( Stem("domer"), "dom" );
	deepEqual( Stem("domfällande"), "domfäll" );
	deepEqual( Stem("domkyrka"), "domkyrk" );
	deepEqual( Stem("domkyrkans"), "domkyrkan" );
	deepEqual( Stem("domna"), "domn" );
	deepEqual( Stem("domnad"), "domn" );
	deepEqual( Stem("domnade"), "domn" );
	deepEqual( Stem("domning"), "domning" );
	deepEqual( Stem("domprostgården"), "domprostgård" );
	deepEqual( Stem("doms"), "dom" );
	deepEqual( Stem("domsaga"), "domsag" );
	deepEqual( Stem("domsagan"), "domsagan" );
	deepEqual( Stem("domsagor"), "domsag" );
	deepEqual( Stem("don"), "don" );
	deepEqual( Stem("dopattest"), "dopattest" );
	deepEqual( Stem("dopet"), "dopet" );
	deepEqual( Stem("dopp"), "dopp" );
	deepEqual( Stem("doppa"), "dopp" );
	deepEqual( Stem("doppade"), "dopp" );
	deepEqual( Stem("doppar"), "dopp" );
	deepEqual( Stem("dora"), "dor" );
	deepEqual( Stem("doras"), "dor" );
	deepEqual( Stem("dork"), "dork" );
	deepEqual( Stem("dorr"), "dorr" );
	deepEqual( Stem("dorren"), "dorr" );
	deepEqual( Stem("dosa"), "dos" );
	deepEqual( Stem("dosan"), "dosan" );
	deepEqual( Stem("dosis"), "dosis" );
	deepEqual( Stem("dott"), "dott" );
	deepEqual( Stem("dotter"), "dott" );
	deepEqual( Stem("dotterlig"), "dotter" );
	deepEqual( Stem("dottern"), "dott" );
	deepEqual( Stem("dotterns"), "dott" );
	deepEqual( Stem("dotters"), "dotter" );
	deepEqual( Stem("dov"), "dov" );
	deepEqual( Stem("dova"), "dov" );
	deepEqual( Stem("dovt"), "dovt" );
	deepEqual( Stem("dr"), "dr" );
	deepEqual( Stem("dra"), "dra" );
	deepEqual( Stem("drabant"), "drabant" );
	deepEqual( Stem("drabbningar"), "drabbning" );
	deepEqual( Stem("drack"), "drack" );
	deepEqual( Stem("drag"), "drag" );
	deepEqual( Stem("draga"), "drag" );
	deepEqual( Stem("dragande"), "drag" );
	deepEqual( Stem("dragas"), "drag" );
	deepEqual( Stem("dragen"), "drag" );
	deepEqual( Stem("drager"), "drag" );
	deepEqual( Stem("draget"), "draget" );
	deepEqual( Stem("dragg"), "dragg" );
	deepEqual( Stem("draggen"), "dragg" );
	deepEqual( Stem("dragit"), "dragit" );
	deepEqual( Stem("dragits"), "dragit" );
	deepEqual( Stem("dragkista"), "dragkist" );
	deepEqual( Stem("dragkistan"), "dragkistan" );
	deepEqual( Stem("dragna"), "dragn" );
	deepEqual( Stem("dragning"), "dragning" );
	deepEqual( Stem("dragonerna"), "dragon" );
	deepEqual( Stem("dragshållaren"), "dragshåll" );
	deepEqual( Stem("dragspel"), "dragspel" );
	deepEqual( Stem("drakar"), "drak" );
	deepEqual( Stem("draken"), "drak" );
	deepEqual( Stem("drakens"), "drak" );
	deepEqual( Stem("dramatiska"), "dramatisk" );
	deepEqual( Stem("draperad"), "draper" );
	deepEqual( Stem("draperade"), "draper" );
	deepEqual( Stem("draperande"), "draper" );
	deepEqual( Stem("draperi"), "draperi" );
	deepEqual( Stem("draperier"), "draperi" );
	deepEqual( Stem("draperiet"), "draperiet" );
	deepEqual( Stem("draperingen"), "drapering" );
	deepEqual( Stem("drar"), "drar" );
	deepEqual( Stem("dras"), "dras" );
	deepEqual( Stem("dref"), "dref" );
	deepEqual( Stem("dreg"), "dreg" );
	deepEqual( Stem("dreglande"), "dregl" );
	deepEqual( Stem("dresserad"), "dresser" );
	deepEqual( Stem("drev"), "drev" );
	deepEqual( Stem("dreve"), "drev" );
	deepEqual( Stem("drevkarlar"), "drevkarl" );
	deepEqual( Stem("drevo"), "drevo" );
	deepEqual( Stem("drevs"), "drev" );
	deepEqual( Stem("dreyfus"), "dreyfus" );
	deepEqual( Stem("dreyfusaffären"), "dreyfusaffär" );
	deepEqual( Stem("dreyfusard"), "dreyfusard" );
	deepEqual( Stem("drick"), "drick" );
	deepEqual( Stem("dricka"), "drick" );
	deepEqual( Stem("drickaren"), "drick" );
	deepEqual( Stem("dricker"), "drick" );
	deepEqual( Stem("drickspengar"), "drickspeng" );
	deepEqual( Stem("drickspengarne"), "drickspeng" );
	deepEqual( Stem("drift"), "drift" );
	deepEqual( Stem("driftens"), "drift" );
	deepEqual( Stem("drifter"), "drift" );
	deepEqual( Stem("driftiga"), "drift" );
	deepEqual( Stem("driftige"), "drift" );
	deepEqual( Stem("driftliv"), "driftliv" );
	deepEqual( Stem("drifva"), "drifv" );
	deepEqual( Stem("drifver"), "drifv" );
	deepEqual( Stem("drifvit"), "drifvit" );
	deepEqual( Stem("drifvor"), "drifv" );
	deepEqual( Stem("drill"), "drill" );
	deepEqual( Stem("drillade"), "drill" );
	deepEqual( Stem("drillar"), "drill" );
	deepEqual( Stem("drillat"), "drill" );
	deepEqual( Stem("drillen"), "drill" );
	deepEqual( Stem("dris"), "dris" );
	deepEqual( Stem("dristade"), "drist" );
	deepEqual( Stem("dristar"), "drist" );
	deepEqual( Stem("dristighet"), "drist" );
	deepEqual( Stem("dristigt"), "drist" );
	deepEqual( Stem("driva"), "driv" );
	deepEqual( Stem("drivande"), "driv" );
	deepEqual( Stem("drivans"), "drivan" );
	deepEqual( Stem("driven"), "driv" );
	deepEqual( Stem("driver"), "driv" );
	deepEqual( Stem("drivfjädrar"), "drivfjädr" );
	deepEqual( Stem("drivit"), "drivit" );
	deepEqual( Stem("drivits"), "drivit" );
	deepEqual( Stem("drivna"), "drivn" );
	deepEqual( Stem("drivor"), "driv" );
	deepEqual( Stem("drivorna"), "driv" );
	deepEqual( Stem("drog"), "drog" );
	deepEqual( Stem("drogo"), "drogo" );
	deepEqual( Stem("drogos"), "drogo" );
	deepEqual( Stem("drogs"), "drog" );
	deepEqual( Stem("dropp"), "dropp" );
	deepEqual( Stem("droppa"), "dropp" );
	deepEqual( Stem("droppade"), "dropp" );
	deepEqual( Stem("droppar"), "dropp" );
	deepEqual( Stem("droppe"), "dropp" );
	deepEqual( Stem("droppen"), "dropp" );
	deepEqual( Stem("droska"), "drosk" );
	deepEqual( Stem("droskbil"), "droskbil" );
	deepEqual( Stem("droskkusk"), "droskkusk" );
	deepEqual( Stem("droskkuskarna"), "droskkusk" );
	deepEqual( Stem("droskorna"), "drosk" );
	deepEqual( Stem("drosksläde"), "drosksläd" );
	deepEqual( Stem("drottning"), "drottning" );
	deepEqual( Stem("drottningbenådade"), "drottningbenåd" );
	deepEqual( Stem("drottningen"), "drottning" );
	deepEqual( Stem("drottninggatan"), "drottninggatan" );
	deepEqual( Stem("drucken"), "druck" );
	deepEqual( Stem("druckit"), "druckit" );
	deepEqual( Stem("druckna"), "druckn" );
	deepEqual( Stem("drucko"), "drucko" );
	deepEqual( Stem("drufvans"), "drufvan" );
	deepEqual( Stem("drummel"), "drummel" );
	deepEqual( Stem("drummeln"), "drummeln" );
	deepEqual( Stem("drunkna"), "drunkn" );
	deepEqual( Stem("drunknad"), "drunkn" );
	deepEqual( Stem("drunknade"), "drunkn" );
	deepEqual( Stem("drunknar"), "drunkn" );
	deepEqual( Stem("drunknat"), "drunkn" );
	deepEqual( Stem("drunkningsdöden"), "drunkningsdöd" );
	deepEqual( Stem("drupit"), "drupit" );
	deepEqual( Stem("druvans"), "druvan" );
	deepEqual( Stem("druvor"), "druv" );
	deepEqual( Stem("druvors"), "druvor" );
	deepEqual( Stem("dry"), "dry" );
	deepEqual( Stem("dryaden"), "dryad" );
	deepEqual( Stem("dryck"), "dryck" );
	deepEqual( Stem("drycken"), "dryck" );
	deepEqual( Stem("drycker"), "dryck" );
	deepEqual( Stem("dryftade"), "dryft" );
	deepEqual( Stem("dryga"), "dryg" );
	deepEqual( Stem("drygt"), "drygt" );
	deepEqual( Stem("drypa"), "dryp" );
	deepEqual( Stem("drypande"), "dryp" );
	deepEqual( Stem("dryper"), "dryp" );
	deepEqual( Stem("drägg"), "drägg" );
	deepEqual( Stem("dräkt"), "dräkt" );
	deepEqual( Stem("dräkten"), "dräkt" );
	deepEqual( Stem("dräll"), "dräll" );
	deepEqual( Stem("drällen"), "dräll" );
	deepEqual( Stem("dräng"), "dräng" );
	deepEqual( Stem("drängar"), "dräng" );
	deepEqual( Stem("drängarna"), "dräng" );
	deepEqual( Stem("drängen"), "dräng" );
	deepEqual( Stem("drängnävar"), "drängnäv" );
	deepEqual( Stem("dränka"), "dränk" );
	deepEqual( Stem("dränker"), "dränk" );
	deepEqual( Stem("dräpa"), "dräp" );
	deepEqual( Stem("dräpt"), "dräpt" );
	deepEqual( Stem("dråplig"), "dråp" );
	deepEqual( Stem("dråpliga"), "dråp" );
	deepEqual( Stem("dröja"), "dröj" );
	deepEqual( Stem("dröjande"), "dröj" );
	deepEqual( Stem("dröjde"), "dröjd" );
	deepEqual( Stem("dröjer"), "dröj" );
	deepEqual( Stem("dröjsmål"), "dröjsmål" );
	deepEqual( Stem("dröjt"), "dröjt" );
	deepEqual( Stem("dröm"), "dröm" );
	deepEqual( Stem("drömde"), "drömd" );
	deepEqual( Stem("drömlikt"), "drömlik" );
	deepEqual( Stem("drömma"), "drömm" );
	deepEqual( Stem("drömmande"), "drömm" );
	deepEqual( Stem("drömmar"), "drömm" );
	deepEqual( Stem("drömmare"), "drömm" );
	deepEqual( Stem("drömmarna"), "drömm" );
	deepEqual( Stem("drömmarnas"), "drömm" );
	deepEqual( Stem("drömmars"), "drömmar" );
	deepEqual( Stem("drömmen"), "drömm" );
	deepEqual( Stem("drömmens"), "drömm" );
	deepEqual( Stem("drömmer"), "drömm" );
	deepEqual( Stem("drömt"), "drömt" );
	deepEqual( Stem("drömvärld"), "drömvärld" );
	deepEqual( Stem("dröp"), "dröp" );
	deepEqual( Stem("drövade"), "dröv" );
	deepEqual( Stem("du"), "du" );
	deepEqual( Stem("duat"), "duat" );
	deepEqual( Stem("dubbeldröm"), "dubbeldröm" );
	deepEqual( Stem("dubbelfönstren"), "dubbelfönstr" );
	deepEqual( Stem("dubbelgångare"), "dubbelgång" );
	deepEqual( Stem("dubbelhet"), "dubbel" );
	deepEqual( Stem("dubbelliv"), "dubbelliv" );
	deepEqual( Stem("dubbellorgnett"), "dubbellorgnet" );
	deepEqual( Stem("dubbelroller"), "dubbelroll" );
	deepEqual( Stem("dubbelt"), "dubbelt" );
	deepEqual( Stem("dubbla"), "dubbl" );
	deepEqual( Stem("dufvan"), "dufvan" );
	deepEqual( Stem("duga"), "dug" );
	deepEqual( Stem("dugande"), "dug" );
	deepEqual( Stem("dugde"), "dugd" );
	deepEqual( Stem("duger"), "dug" );
	deepEqual( Stem("duggregn"), "duggregn" );
	deepEqual( Stem("duggregna"), "duggregn" );
	deepEqual( Stem("duggregnet"), "duggregnet" );
	deepEqual( Stem("dugligheten"), "dug" );
	deepEqual( Stem("dugtig"), "dugt" );
	deepEqual( Stem("dugtigt"), "dugt" );
	deepEqual( Stem("duk"), "duk" );
	deepEqual( Stem("duka"), "duk" );
	deepEqual( Stem("dukade"), "duk" );
	deepEqual( Stem("dukades"), "duk" );
	deepEqual( Stem("dukadt"), "dukad" );
	deepEqual( Stem("dukar"), "duk" );
	deepEqual( Stem("dukas"), "duk" );
	deepEqual( Stem("dukat"), "duk" );
	deepEqual( Stem("duken"), "duk" );
	deepEqual( Stem("dukning"), "dukning" );
	deepEqual( Stem("duktig"), "dukt" );
	deepEqual( Stem("duktiga"), "dukt" );
	deepEqual( Stem("duktigare"), "dukt" );
	deepEqual( Stem("duktigt"), "dukt" );
	deepEqual( Stem("dum"), "dum" );
	deepEqual( Stem("dumhet"), "dum" );
	deepEqual( Stem("dumheter"), "dum" );
	deepEqual( Stem("dumma"), "dumm" );
	deepEqual( Stem("dummare"), "dumm" );
	deepEqual( Stem("dummaste"), "dumm" );
	deepEqual( Stem("dumme"), "dumm" );
	deepEqual( Stem("dumt"), "dumt" );
	deepEqual( Stem("dun"), "dun" );
	deepEqual( Stem("dundrade"), "dundr" );
	deepEqual( Stem("dundrar"), "dundr" );
	deepEqual( Stem("dundrat"), "dundr" );
	deepEqual( Stem("duniga"), "dun" );
	deepEqual( Stem("dunigt"), "dun" );
	deepEqual( Stem("dunk"), "dunk" );
	deepEqual( Stem("dunka"), "dunk" );
	deepEqual( Stem("dunkadc"), "dunkadc" );
	deepEqual( Stem("dunkade"), "dunk" );
	deepEqual( Stem("dunkande"), "dunk" );
	deepEqual( Stem("dunkar"), "dunk" );
	deepEqual( Stem("dunkel"), "dunkel" );
	deepEqual( Stem("dunkelt"), "dunkelt" );
	deepEqual( Stem("dunkla"), "dunkl" );
	deepEqual( Stem("dunklar"), "dunkl" );
	deepEqual( Stem("dunklare"), "dunkl" );
	deepEqual( Stem("dunklet"), "dunklet" );
	deepEqual( Stem("duns"), "dun" );
	deepEqual( Stem("dunsar"), "duns" );
	deepEqual( Stem("dunst"), "dunst" );
	deepEqual( Stem("dunstade"), "dunst" );
	deepEqual( Stem("dunstat"), "dunst" );
	deepEqual( Stem("dunster"), "dunst" );
	deepEqual( Stem("dunstkretsen"), "dunstkrets" );
	deepEqual( Stem("dur"), "dur" );
	deepEqual( Stem("durk"), "durk" );
	deepEqual( Stem("dus"), "dus" );
	deepEqual( Stem("duschbad"), "duschb" );
	deepEqual( Stem("dussin"), "dussin" );
	deepEqual( Stem("dusör"), "dusör" );
	deepEqual( Stem("duva"), "duv" );
	deepEqual( Stem("duvan"), "duvan" );
	deepEqual( Stem("duvas"), "duv" );
	deepEqual( Stem("duvor"), "duv" );
	deepEqual( Stem("duvoröst"), "duvoröst" );
	deepEqual( Stem("duvovingar"), "duvoving" );
	deepEqual( Stem("duvoögon"), "duvoögon" );
	deepEqual( Stem("duvunge"), "duvung" );
	deepEqual( Stem("duvögon"), "duvögon" );
	deepEqual( Stem("dvala"), "dval" );
	deepEqual( Stem("dvaldes"), "dvald" );
	deepEqual( Stem("dväljas"), "dvälj" );
	deepEqual( Stem("dvärg"), "dvärg" );
	deepEqual( Stem("dvärgman"), "dvärgman" );
	deepEqual( Stem("dy"), "dy" );
	deepEqual( Stem("dygd"), "dygd" );
	deepEqual( Stem("dygde"), "dygd" );
	deepEqual( Stem("dygden"), "dygd" );
	deepEqual( Stem("dygdig"), "dygd" );
	deepEqual( Stem("dygdige"), "dygd" );
	deepEqual( Stem("dygdigt"), "dygd" );
	deepEqual( Stem("dygn"), "dygn" );
	deepEqual( Stem("dygnet"), "dygnet" );
	deepEqual( Stem("dyka"), "dyk" );
	deepEqual( Stem("dyker"), "dyk" );
	deepEqual( Stem("dykt"), "dykt" );
	deepEqual( Stem("dylik"), "dylik" );
	deepEqual( Stem("dylika"), "dylik" );
	deepEqual( Stem("dylikt"), "dylik" );
	deepEqual( Stem("dyn"), "dyn" );
	deepEqual( Stem("dyna"), "dyn" );
	deepEqual( Stem("dyning"), "dyning" );
	deepEqual( Stem("dyningar"), "dyning" );
	deepEqual( Stem("dyningarna"), "dyning" );
	deepEqual( Stem("dynorna"), "dyn" );
	deepEqual( Stem("dyr"), "dyr" );
	deepEqual( Stem("dyra"), "dyr" );
	deepEqual( Stem("dyrare"), "dyr" );
	deepEqual( Stem("dyraste"), "dyr" );
	deepEqual( Stem("dyrbar"), "dyrb" );
	deepEqual( Stem("dyrbara"), "dyrbar" );
	deepEqual( Stem("dyrbarare"), "dyrbar" );
	deepEqual( Stem("dyrbaraste"), "dyrbar" );
	deepEqual( Stem("dyrbarheter"), "dyrbar" );
	deepEqual( Stem("dyre"), "dyr" );
	deepEqual( Stem("dyrhet"), "dyr" );
	deepEqual( Stem("dyrka"), "dyrk" );
	deepEqual( Stem("dyrkade"), "dyrk" );
	deepEqual( Stem("dyrkan"), "dyrkan" );
	deepEqual( Stem("dyrköpt"), "dyrköpt" );
	deepEqual( Stem("dyrköpta"), "dyrköpt" );
	deepEqual( Stem("dyrt"), "dyrt" );
	deepEqual( Stem("dyst"), "dyst" );
	deepEqual( Stem("dyster"), "dyst" );
	deepEqual( Stem("dysterhet"), "dyster" );
	deepEqual( Stem("dystert"), "dystert" );
	deepEqual( Stem("dystra"), "dystr" );
	deepEqual( Stem("dystre"), "dystr" );
	deepEqual( Stem("dä"), "dä" );
	deepEqual( Stem("däck"), "däck" );
	deepEqual( Stem("däcken"), "däck" );
	deepEqual( Stem("däcket"), "däcket" );
	deepEqual( Stem("däcksbåten"), "däcksbåt" );
	deepEqual( Stem("däckslasten"), "däckslast" );
	deepEqual( Stem("dädan"), "dädan" );
	deepEqual( Stem("dägga"), "dägg" );
	deepEqual( Stem("däl"), "däl" );
	deepEqual( Stem("dämpad"), "dämp" );
	deepEqual( Stem("dämpade"), "dämp" );
	deepEqual( Stem("dämpades"), "dämp" );
	deepEqual( Stem("dämpande"), "dämp" );
	deepEqual( Stem("dämpat"), "dämp" );
	deepEqual( Stem("dämt"), "dämt" );
	deepEqual( Stem("dän"), "dän" );
	deepEqual( Stem("dängde"), "däng" );
	deepEqual( Stem("där"), "där" );
	deepEqual( Stem("därat"), "där" );
	deepEqual( Stem("därav"), "därav" );
	deepEqual( Stem("därbakom"), "därbakom" );
	deepEqual( Stem("därborta"), "därbort" );
	deepEqual( Stem("därefter"), "däreft" );
	deepEqual( Stem("däremot"), "däremot" );
	deepEqual( Stem("därest"), "därest" );
	deepEqual( Stem("därfor"), "därf" );
	deepEqual( Stem("därför"), "därför" );
	deepEqual( Stem("därföre"), "därför" );
	deepEqual( Stem("därhemma"), "därhemm" );
	deepEqual( Stem("därhos"), "därho" );
	deepEqual( Stem("därhän"), "därhän" );
	deepEqual( Stem("däri"), "däri" );
	deepEqual( Stem("därifrall"), "därifrall" );
	deepEqual( Stem("därifran"), "därifran" );
	deepEqual( Stem("därifrån"), "därifrån" );
	deepEqual( Stem("därigenom"), "därigenom" );
	deepEqual( Stem("därigenorm"), "därigenorm" );
	deepEqual( Stem("därinifrån"), "därinifrån" );
	deepEqual( Stem("därinnanför"), "därinnanför" );
	deepEqual( Stem("därinne"), "därin" );
	deepEqual( Stem("därintill"), "därintill" );
	deepEqual( Stem("därinunder"), "därinund" );
	deepEqual( Stem("därjämte"), "därjämt" );
	deepEqual( Stem("därmed"), "därmed" );
	deepEqual( Stem("därnedan"), "därnedan" );
	deepEqual( Stem("därnedanför"), "därnedanför" );
	deepEqual( Stem("därnere"), "därner" );
	deepEqual( Stem("därnäst"), "därnäst" );
	deepEqual( Stem("därom"), "därom" );
	deepEqual( Stem("därpa"), "därp" );
	deepEqual( Stem("därpå"), "därpå" );
	deepEqual( Stem("därstädes"), "därstäd" );
	deepEqual( Stem("därtill"), "därtill" );
	deepEqual( Stem("därunder"), "därund" );
	deepEqual( Stem("däruppe"), "därupp" );
	deepEqual( Stem("därur"), "därur" );
	deepEqual( Stem("därute"), "därut" );
	deepEqual( Stem("däruti"), "däruti" );
	deepEqual( Stem("därutur"), "därutur" );
	deepEqual( Stem("därutöver"), "därutöv" );
	deepEqual( Stem("därvid"), "därvid" );
	deepEqual( Stem("däråt"), "däråt" );
	deepEqual( Stem("däröver"), "däröv" );
	deepEqual( Stem("då"), "då" );
	deepEqual( Stem("dågot"), "dågot" );
	deepEqual( Stem("dålig"), "dål" );
	deepEqual( Stem("dåliga"), "dål" );
	deepEqual( Stem("dåligare"), "dål" );
	deepEqual( Stem("dålighet"), "dål" );
	deepEqual( Stem("dåligt"), "dål" );
	deepEqual( Stem("dån"), "dån" );
	deepEqual( Stem("dånade"), "dån" );
	deepEqual( Stem("dånande"), "dån" );
	deepEqual( Stem("dånar"), "dån" );
	deepEqual( Stem("dånat"), "dån" );
	deepEqual( Stem("dånet"), "dånet" );
	deepEqual( Stem("dåningen"), "dåning" );
	deepEqual( Stem("dår"), "dår" );
	deepEqual( Stem("dåra"), "dår" );
	deepEqual( Stem("dåraktiga"), "dårakt" );
	deepEqual( Stem("dåraktigt"), "dårakt" );
	deepEqual( Stem("dårande"), "dår" );
	deepEqual( Stem("dårars"), "dårar" );
	deepEqual( Stem("dårat"), "dår" );
	deepEqual( Stem("dåre"), "dår" );
	deepEqual( Stem("dåren"), "dår" );
	deepEqual( Stem("dårhus"), "dårhus" );
	deepEqual( Stem("dårhusen"), "dårhus" );
	deepEqual( Stem("dårhuside"), "dårhusid" );
	deepEqual( Stem("dårskap"), "dårskap" );
	deepEqual( Stem("dårskapen"), "dårskap" );
	deepEqual( Stem("dåsa"), "dås" );
	deepEqual( Stem("dåsigt"), "dås" );
	deepEqual( Stem("dö"), "dö" );
	deepEqual( Stem("död"), "död" );
	deepEqual( Stem("döda"), "död" );
	deepEqual( Stem("dödade"), "död" );
	deepEqual( Stem("dödande"), "död" );
	deepEqual( Stem("dödar"), "död" );
	deepEqual( Stem("dödas"), "död" );
	deepEqual( Stem("dödat"), "död" );
	deepEqual( Stem("dödbenskult"), "dödbenskult" );
	deepEqual( Stem("döddagar"), "döddag" );
	deepEqual( Stem("döde"), "död" );
	deepEqual( Stem("döden"), "död" );
	deepEqual( Stem("dödens"), "död" );
	deepEqual( Stem("dödfött"), "dödföt" );
	deepEqual( Stem("dödlig"), "död" );
	deepEqual( Stem("dödliga"), "död" );
	deepEqual( Stem("dödligt"), "död" );
	deepEqual( Stem("döds"), "död" );
	deepEqual( Stem("dödsattesten"), "dödsattest" );
	deepEqual( Stem("dödsbädd"), "dödsbäd" );
	deepEqual( Stem("dödsdag"), "dödsdag" );
	deepEqual( Stem("dödsdömd"), "dödsdömd" );
	deepEqual( Stem("dödsdömde"), "dödsdömd" );
	deepEqual( Stem("dödsfall"), "dödsfall" );
	deepEqual( Stem("dödsfallet"), "dödsfallet" );
	deepEqual( Stem("dödsfiende"), "dödsfiend" );
	deepEqual( Stem("dödskonvulsionerna"), "dödskonvulsion" );
	deepEqual( Stem("dödsmärket"), "dödsmärket" );
	deepEqual( Stem("dödsmörkret"), "dödsmörkret" );
	deepEqual( Stem("dödsorsaken"), "dödsorsak" );
	deepEqual( Stem("dödsskräcken"), "dödsskräck" );
	deepEqual( Stem("dödsskrämda"), "dödsskrämd" );
	deepEqual( Stem("dödsskuegornas"), "dödsskueg" );
	deepEqual( Stem("dödsskuggor"), "dödsskugg" );
	deepEqual( Stem("dödsstraff"), "dödsstraff" );
	deepEqual( Stem("dödsstund"), "dödsstund" );
	deepEqual( Stem("dödssuck"), "dödssuck" );
	deepEqual( Stem("dödssuckar"), "dödssuck" );
	deepEqual( Stem("dödssynd"), "dödssynd" );
	deepEqual( Stem("dödssynderna"), "dödssynd" );
	deepEqual( Stem("dödssäng"), "dödssäng" );
	deepEqual( Stem("dödstyst"), "dödstyst" );
	deepEqual( Stem("dödsångesten"), "dödsångest" );
	deepEqual( Stem("döende"), "döend" );
	deepEqual( Stem("döf"), "döf" );
	deepEqual( Stem("döfstum"), "döfstum" );
	deepEqual( Stem("döfva"), "döfv" );
	deepEqual( Stem("dök"), "dök" );
	deepEqual( Stem("döko"), "döko" );
	deepEqual( Stem("dölja"), "dölj" );
	deepEqual( Stem("döljande"), "dölj" );
	deepEqual( Stem("döljer"), "dölj" );
	deepEqual( Stem("döm"), "döm" );
	deepEqual( Stem("döma"), "döm" );
	deepEqual( Stem("dömd"), "dömd" );
	deepEqual( Stem("dömda"), "dömd" );
	deepEqual( Stem("dömde"), "dömd" );
	deepEqual( Stem("döme"), "döm" );
	deepEqual( Stem("dömer"), "döm" );
	deepEqual( Stem("dömt"), "dömt" );
	deepEqual( Stem("dön"), "dön" );
	deepEqual( Stem("döpt"), "döpt" );
	deepEqual( Stem("dör"), "dör" );
	deepEqual( Stem("döra"), "dör" );
	deepEqual( Stem("dörr"), "dörr" );
	deepEqual( Stem("dörrar"), "dörr" );
	deepEqual( Stem("dörrarna"), "dörr" );
	deepEqual( Stem("dörrcn"), "dörrcn" );
	deepEqual( Stem("dörrell"), "dörrell" );
	deepEqual( Stem("dörren"), "dörr" );
	deepEqual( Stem("dörrlaset"), "dörrlaset" );
	deepEqual( Stem("dörrskyltarna"), "dörrskylt" );
	deepEqual( Stem("dörrspringa"), "dörrspring" );
	deepEqual( Stem("dörrvredet"), "dörrvredet" );
	deepEqual( Stem("dött"), "dött" );
	deepEqual( Stem("döttrar"), "döttr" );
	deepEqual( Stem("döttrarna"), "döttr" );
	deepEqual( Stem("döv"), "döv" );
	deepEqual( Stem("döva"), "döv" );
	deepEqual( Stem("dövad"), "döv" );
	deepEqual( Stem("dövades"), "döv" );
	deepEqual( Stem("e"), "e" );
	deepEqual( Stem("ea"), "ea" );
	deepEqual( Stem("eau"), "eau" );
	deepEqual( Stem("ebbar"), "ebb" );
	deepEqual( Stem("ecklesiastikminister"), "ecklesiastikminist" );
	deepEqual( Stem("ed"), "ed" );
	deepEqual( Stem("eden"), "eden" );
	deepEqual( Stem("eder"), "eder" );
	deepEqual( Stem("edla"), "edl" );
	deepEqual( Stem("edligt"), "edl" );
	deepEqual( Stem("edra"), "edr" );
	deepEqual( Stem("edward"), "edward" );
	deepEqual( Stem("efesus"), "efesus" );
	deepEqual( Stem("effekt"), "effek" );
	deepEqual( Stem("effter"), "efft" );
	deepEqual( Stem("eftcr"), "eftcr" );
	deepEqual( Stem("eftel"), "eftel" );
	deepEqual( Stem("efter"), "eft" );
	deepEqual( Stem("efterapande"), "efterap" );
	deepEqual( Stem("efterbildningen"), "efterbildning" );
	deepEqual( Stem("efterfikar"), "efterfik" );
	deepEqual( Stem("efterfråga"), "efterfråg" );
	deepEqual( Stem("efterfrågade"), "efterfråg" );
	deepEqual( Stem("efterföljd"), "efterföljd" );
	deepEqual( Stem("eftergift"), "eftergift" );
	deepEqual( Stem("eftergifvande"), "eftergifv" );
	deepEqual( Stem("eftergifven"), "eftergifv" );
	deepEqual( Stem("eftergivande"), "eftergiv" );
	deepEqual( Stem("efterhängsenhet"), "efterhängsen" );
	deepEqual( Stem("efterhärma"), "efterhärm" );
	deepEqual( Stem("efterhärmade"), "efterhärm" );
	deepEqual( Stem("efterhållen"), "efterhåll" );
	deepEqual( Stem("efterhörde"), "efterhörd" );
	deepEqual( Stem("efterkomma"), "efterkomm" );
	deepEqual( Stem("efterlemnade"), "efterlemn" );
	deepEqual( Stem("efterlämnade"), "efterlämn" );
	deepEqual( Stem("efterlämnar"), "efterlämn" );
	deepEqual( Stem("efterlämnat"), "efterlämn" );
	deepEqual( Stem("efterlängtad"), "efterläng" );
	deepEqual( Stem("efterlängtade"), "efterläng" );
	deepEqual( Stem("efterlängtar"), "efterläng" );
	deepEqual( Stem("efterlängtat"), "efterläng" );
	deepEqual( Stem("eftermiddag"), "eftermiddag" );
	deepEqual( Stem("eftermiddagarna"), "eftermiddag" );
	deepEqual( Stem("eftermiddagarne"), "eftermiddag" );
	deepEqual( Stem("eftermiddagen"), "eftermiddag" );
	deepEqual( Stem("eftermiddags"), "eftermiddag" );
	deepEqual( Stem("eftermiddagssolen"), "eftermiddagssol" );
	deepEqual( Stem("eftermiddagsvakten"), "eftermiddagsvak" );
	deepEqual( Stem("efternamnet"), "efternamnet" );
	deepEqual( Stem("efterräknade"), "efterräkn" );
	deepEqual( Stem("efterrättelse"), "efterrätt" );
	deepEqual( Stem("efterrätten"), "efterrät" );
	deepEqual( Stem("efterrätter"), "efterrät" );
	deepEqual( Stem("eftersade"), "efters" );
	deepEqual( Stem("efterse"), "efters" );
	deepEqual( Stem("eftersinna"), "eftersin" );
	deepEqual( Stem("eftersinnande"), "eftersin" );
	deepEqual( Stem("eftersom"), "eftersom" );
	deepEqual( Stem("efterspaningar"), "efterspaning" );
	deepEqual( Stem("efterspel"), "efterspel" );
	deepEqual( Stem("efterst"), "efterst" );
	deepEqual( Stem("eftersträfva"), "eftersträfv" );
	deepEqual( Stem("eftersträfvar"), "eftersträfv" );
	deepEqual( Stem("eftersträva"), "eftersträv" );
	deepEqual( Stem("eftersträvade"), "eftersträv" );
	deepEqual( Stem("eftersträvansvärt"), "eftersträvansvärt" );
	deepEqual( Stem("efterstygn"), "efterstygn" );
	deepEqual( Stem("eftersyn"), "eftersyn" );
	deepEqual( Stem("eftersökt"), "eftersök" );
	deepEqual( Stem("eftersökta"), "eftersök" );
	deepEqual( Stem("eftertanke"), "eftertank" );
	deepEqual( Stem("eftertruppen"), "eftertrupp" );
	deepEqual( Stem("eftertryck"), "eftertryck" );
	deepEqual( Stem("eftertryckligt"), "eftertryck" );
	deepEqual( Stem("eftertrycks"), "eftertryck" );
	deepEqual( Stem("efterträdare"), "efterträd" );
	deepEqual( Stem("efterträderska"), "efterträdersk" );
	deepEqual( Stem("efterträtts"), "efterträt" );
	deepEqual( Stem("eftervärkarna"), "eftervärk" );
	deepEqual( Stem("efteråt"), "efteråt" );
	deepEqual( Stem("ega"), "ega" );
	deepEqual( Stem("eganderätt"), "eganderät" );
	deepEqual( Stem("egarinnan"), "egarinnan" );
	deepEqual( Stem("egde"), "egd" );
	deepEqual( Stem("ege"), "ege" );
	deepEqual( Stem("egen"), "egen" );
	deepEqual( Stem("egenart"), "egenart" );
	deepEqual( Stem("egendom"), "egendom" );
	deepEqual( Stem("egendomen"), "egendom" );
	deepEqual( Stem("egendomlig"), "egendom" );
	deepEqual( Stem("egendomliga"), "egendom" );
	deepEqual( Stem("egendomligt"), "egendom" );
	deepEqual( Stem("egenhet"), "egen" );
	deepEqual( Stem("egenheter"), "egen" );
	deepEqual( Stem("egenhändiga"), "egenhänd" );
	deepEqual( Stem("egenkär"), "egenkär" );
	deepEqual( Stem("egenkärlek"), "egenkärlek" );
	deepEqual( Stem("egenkärleken"), "egenkärlek" );
	deepEqual( Stem("egenkärt"), "egenkärt" );
	deepEqual( Stem("egenmäk"), "egenmäk" );
	deepEqual( Stem("egennytta"), "egennyt" );
	deepEqual( Stem("egennyttig"), "egennytt" );
	deepEqual( Stem("egennyttiga"), "egennytt" );
	deepEqual( Stem("egensinnig"), "egensinn" );
	deepEqual( Stem("egensinnigt"), "egensinn" );
	deepEqual( Stem("egenskap"), "egenskap" );
	deepEqual( Stem("egenskapen"), "egenskap" );
	deepEqual( Stem("egenskaper"), "egenskap" );
	deepEqual( Stem("egenskaperna"), "egenskap" );
	deepEqual( Stem("egentlig"), "egent" );
	deepEqual( Stem("egentliga"), "egent" );
	deepEqual( Stem("egentligaste"), "egent" );
	deepEqual( Stem("egentligen"), "egent" );
	deepEqual( Stem("egentligt"), "egent" );
	deepEqual( Stem("eger"), "eger" );
	deepEqual( Stem("eget"), "eget" );
	deepEqual( Stem("egg"), "egg" );
	deepEqual( Stem("egga"), "egg" );
	deepEqual( Stem("eggade"), "egg" );
	deepEqual( Stem("eggar"), "egg" );
	deepEqual( Stem("eggas"), "egg" );
	deepEqual( Stem("eggat"), "egg" );
	deepEqual( Stem("egna"), "egn" );
	deepEqual( Stem("egnade"), "egn" );
	deepEqual( Stem("egnades"), "egn" );
	deepEqual( Stem("egnadt"), "egnad" );
	deepEqual( Stem("egnar"), "egn" );
	deepEqual( Stem("egoism"), "egoism" );
	deepEqual( Stem("egoist"), "egoist" );
	deepEqual( Stem("egoisten"), "egoist" );
	deepEqual( Stem("egoistiska"), "egoistisk" );
	deepEqual( Stem("egoistiskt"), "egoistisk" );
	deepEqual( Stem("egt"), "egt" );
	deepEqual( Stem("egypterna"), "egypt" );
	deepEqual( Stem("egypti"), "egypti" );
	deepEqual( Stem("ehrencreutz"), "ehrencreutz" );
	deepEqual( Stem("ehuru"), "ehuru" );
	deepEqual( Stem("eian"), "eian" );
	deepEqual( Stem("eians"), "eian" );
	deepEqual( Stem("eiffeltornet"), "eiffeltornet" );
	deepEqual( Stem("eine"), "ein" );
	deepEqual( Stem("ej"), "ej" );
	deepEqual( Stem("ejugu"), "ejugu" );
	deepEqual( Stem("ek"), "ek" );
	deepEqual( Stem("eka"), "eka" );
	deepEqual( Stem("ekade"), "ekad" );
	deepEqual( Stem("ekar"), "ekar" );
	deepEqual( Stem("ekas"), "ekas" );
	deepEqual( Stem("ekbord"), "ekbord" );
	deepEqual( Stem("ekered"), "ekered" );
	deepEqual( Stem("ekhult"), "ekhult" );
	deepEqual( Stem("ekhults"), "ekhult" );
	deepEqual( Stem("ekipaget"), "ekipaget" );
	deepEqual( Stem("eklatant"), "eklatant" );
	deepEqual( Stem("eklund"), "eklund" );
	deepEqual( Stem("eklunds"), "eklund" );
	deepEqual( Stem("eklärerat"), "eklärer" );
	deepEqual( Stem("eklöv"), "eklöv" );
	deepEqual( Stem("eko"), "eko" );
	deepEqual( Stem("ekonomien"), "ekonomi" );
	deepEqual( Stem("ekonomiskt"), "ekonomisk" );
	deepEqual( Stem("ekorre"), "ekorr" );
	deepEqual( Stem("ekorren"), "ekorr" );
	deepEqual( Stem("ekotemplet"), "ekotemplet" );
	deepEqual( Stem("eksem"), "eksem" );
	deepEqual( Stem("el"), "el" );
	deepEqual( Stem("elak"), "elak" );
	deepEqual( Stem("elaka"), "elak" );
	deepEqual( Stem("elakare"), "elak" );
	deepEqual( Stem("elakaste"), "elak" );
	deepEqual( Stem("elakhet"), "elak" );
	deepEqual( Stem("elakheter"), "elak" );
	deepEqual( Stem("elakt"), "elak" );
	deepEqual( Stem("elan"), "elan" );
	deepEqual( Stem("eld"), "eld" );
	deepEqual( Stem("elda"), "eld" );
	deepEqual( Stem("eldade"), "eld" );
	deepEqual( Stem("eldar"), "eld" );
	deepEqual( Stem("eldat"), "eld" );
	deepEqual( Stem("eldbrasa"), "eldbras" );
	deepEqual( Stem("elddonen"), "elddon" );
	deepEqual( Stem("elden"), "eld" );
	deepEqual( Stem("eldens"), "eld" );
	deepEqual( Stem("eldgnistor"), "eldgnist" );
	deepEqual( Stem("eldig"), "eld" );
	deepEqual( Stem("eldiga"), "eld" );
	deepEqual( Stem("eldorado"), "eldorado" );
	deepEqual( Stem("eldrod"), "eldrod" );
	deepEqual( Stem("eldros"), "eldro" );
	deepEqual( Stem("eldrosen"), "eldros" );
	deepEqual( Stem("eldröd"), "eldröd" );
	deepEqual( Stem("eldrött"), "eldröt" );
	deepEqual( Stem("eldsken"), "eldsk" );
	deepEqual( Stem("eldskenets"), "eldskenet" );
	deepEqual( Stem("eldstrimma"), "eldstrimm" );
	deepEqual( Stem("eldsvåda"), "eldsvåd" );
	deepEqual( Stem("eldtunga"), "eldtung" );
	deepEqual( Stem("elefant"), "elefant" );
	deepEqual( Stem("eleg"), "eleg" );
	deepEqual( Stem("elegans"), "elegan" );
	deepEqual( Stem("elegant"), "elegant" );
	deepEqual( Stem("eleganta"), "elegant" );
	deepEqual( Stem("eleganten"), "elegant" );
	deepEqual( Stem("eleganter"), "elegant" );
	deepEqual( Stem("elektrisk"), "elektrisk" );
	deepEqual( Stem("elektriska"), "elektrisk" );
	deepEqual( Stem("elektriskt"), "elektrisk" );
	deepEqual( Stem("elektroniska"), "elektronisk" );
	deepEqual( Stem("element"), "element" );
	deepEqual( Stem("elementarkraft"), "elementarkraft" );
	deepEqual( Stem("elementen"), "element" );
	deepEqual( Stem("elementet"), "elementet" );
	deepEqual( Stem("eletty"), "eletty" );
	deepEqual( Stem("elev"), "elev" );
	deepEqual( Stem("eleven"), "elev" );
	deepEqual( Stem("elever"), "elev" );
	deepEqual( Stem("eleverna"), "elev" );
	deepEqual( Stem("elevernas"), "elev" );
	deepEqual( Stem("elfenben"), "elfenb" );
	deepEqual( Stem("elfenbensfärgad"), "elfenbensfärg" );
	deepEqual( Stem("elfqvinnan"), "elfqvinnan" );
	deepEqual( Stem("elfte"), "elft" );
	deepEqual( Stem("elfva"), "elfv" );
	deepEqual( Stem("elfvorna"), "elfv" );
	deepEqual( Stem("eljes"), "elj" );
	deepEqual( Stem("eljest"), "eljest" );
	deepEqual( Stem("ell"), "ell" );
	deepEqual( Stem("ella"), "ell" );
	deepEqual( Stem("ellas"), "ell" );
	deepEqual( Stem("ellen"), "ell" );
	deepEqual( Stem("eller"), "ell" );
	deepEqual( Stem("elon"), "elon" );
	deepEqual( Stem("elsa"), "els" );
	deepEqual( Stem("elva"), "elv" );
	deepEqual( Stem("elände"), "eländ" );
	deepEqual( Stem("eländig"), "eländ" );
	deepEqual( Stem("eländiga"), "eländ" );
	deepEqual( Stem("eländigaste"), "eländ" );
	deepEqual( Stem("eländige"), "eländ" );
	deepEqual( Stem("eländighet"), "eländ" );
	deepEqual( Stem("eländigt"), "eländ" );
	deepEqual( Stem("elån"), "elån" );
	deepEqual( Stem("emanerade"), "emaner" );
	deepEqual( Stem("emaus"), "emaus" );
	deepEqual( Stem("emedan"), "emedan" );
	deepEqual( Stem("emellan"), "emellan" );
	deepEqual( Stem("emellanat"), "emellan" );
	deepEqual( Stem("emellanåt"), "emellanåt" );
	deepEqual( Stem("emellertid"), "emellertid" );
	deepEqual( Stem("emma"), "emm" );
	deepEqual( Stem("emot"), "emot" );
	deepEqual( Stem("emottaga"), "emottag" );
	deepEqual( Stem("emottog"), "emottog" );
	deepEqual( Stem("emploient"), "emploient" );
	deepEqual( Stem("en"), "en" );
	deepEqual( Stem("ena"), "ena" );
	deepEqual( Stem("enahanda"), "enahand" );
	deepEqual( Stem("enas"), "enas" );
	deepEqual( Stem("enbart"), "enbart" );
	deepEqual( Stem("enbuske"), "enbusk" );
	deepEqual( Stem("enda"), "end" );
	deepEqual( Stem("endas"), "end" );
	deepEqual( Stem("endast"), "end" );
	deepEqual( Stem("endaste"), "end" );
	deepEqual( Stem("ende"), "end" );
	deepEqual( Stem("endera"), "ender" );
	deepEqual( Stem("endräkt"), "endräk" );
	deepEqual( Stem("ene"), "ene" );
	deepEqual( Stem("ener"), "ener" );
	deepEqual( Stem("energi"), "energi" );
	deepEqual( Stem("energiska"), "energisk" );
	deepEqual( Stem("energiskt"), "energisk" );
	deepEqual( Stem("enes"), "enes" );
	deepEqual( Stem("enfald"), "enfald" );
	deepEqual( Stem("enfalden"), "enfald" );
	deepEqual( Stem("enfaldig"), "enfald" );
	deepEqual( Stem("enfaldiga"), "enfald" );
	deepEqual( Stem("enfaldighet"), "enfald" );
	deepEqual( Stem("enfaldigt"), "enfald" );
	deepEqual( Stem("enformiga"), "enform" );
	deepEqual( Stem("enformighet"), "enform" );
	deepEqual( Stem("enformigheten"), "enform" );
	deepEqual( Stem("enformigt"), "enform" );
	deepEqual( Stem("enfödde"), "enföd" );
	deepEqual( Stem("engblomo"), "engblomo" );
	deepEqual( Stem("engel"), "engel" );
	deepEqual( Stem("engeln"), "engeln" );
	deepEqual( Stem("engelska"), "engelsk" );
	deepEqual( Stem("engelsmännen"), "engelsmän" );
	deepEqual( Stem("england"), "england" );
	deepEqual( Stem("englar"), "engl" );
	deepEqual( Stem("englarne"), "engl" );
	deepEqual( Stem("englarnes"), "englarn" );
	deepEqual( Stem("enhet"), "enhet" );
	deepEqual( Stem("enig"), "enig" );
	deepEqual( Stem("eniga"), "enig" );
	deepEqual( Stem("enighet"), "enig" );
	deepEqual( Stem("enka"), "enk" );
	deepEqual( Stem("enkcl"), "enkcl" );
	deepEqual( Stem("enkefru"), "enkefru" );
	deepEqual( Stem("enkel"), "enkel" );
	deepEqual( Stem("enkelhet"), "enkel" );
	deepEqual( Stem("enkelt"), "enkelt" );
	deepEqual( Stem("enkla"), "enkl" );
	deepEqual( Stem("enklare"), "enkl" );
	deepEqual( Stem("enklaste"), "enkl" );
	deepEqual( Stem("enkom"), "enkom" );
	deepEqual( Stem("enkor"), "enk" );
	deepEqual( Stem("enleveras"), "enlever" );
	deepEqual( Stem("enlevering"), "enlevering" );
	deepEqual( Stem("enligt"), "enl" );
	deepEqual( Stem("enna"), "enn" );
	deepEqual( Stem("ennui"), "ennui" );
	deepEqual( Stem("enompryglas"), "enomprygl" );
	deepEqual( Stem("enorma"), "enorm" );
	deepEqual( Stem("enris"), "enris" );
	deepEqual( Stem("enrum"), "enrum" );
	deepEqual( Stem("ens"), "ens" );
	deepEqual( Stem("ensam"), "ensam" );
	deepEqual( Stem("ensamen"), "ensam" );
	deepEqual( Stem("ensamhet"), "ensam" );
	deepEqual( Stem("ensamheten"), "ensam" );
	deepEqual( Stem("ensamhetens"), "ensam" );
	deepEqual( Stem("ensamma"), "ensamm" );
	deepEqual( Stem("ensammes"), "ensamm" );
	deepEqual( Stem("ensamt"), "ensamt" );
	deepEqual( Stem("ensarnma"), "ensarnm" );
	deepEqual( Stem("ense"), "ens" );
	deepEqual( Stem("ensittarens"), "ensit" );
	deepEqual( Stem("enskilda"), "enskild" );
	deepEqual( Stem("enskildheter"), "enskild" );
	deepEqual( Stem("enskildt"), "enskild" );
	deepEqual( Stem("enskilt"), "enskilt" );
	deepEqual( Stem("enskilta"), "enskilt" );
	deepEqual( Stem("enslig"), "ens" );
	deepEqual( Stem("ensliga"), "ens" );
	deepEqual( Stem("enslighet"), "ens" );
	deepEqual( Stem("ensligt"), "ens" );
	deepEqual( Stem("enslingen"), "ensling" );
	deepEqual( Stem("enstaka"), "enstak" );
	deepEqual( Stem("enstöring"), "enstöring" );
	deepEqual( Stem("entonig"), "enton" );
	deepEqual( Stem("entoniga"), "enton" );
	deepEqual( Stem("entonigt"), "enton" );
	deepEqual( Stem("enträgen"), "enträg" );
	deepEqual( Stem("enträget"), "enträget" );
	deepEqual( Stem("enträgna"), "enträgn" );
	deepEqual( Stem("enträgnaste"), "enträgn" );
	deepEqual( Stem("enträgne"), "enträgn" );
	deepEqual( Stem("envar"), "env" );
	deepEqual( Stem("enveten"), "envet" );
	deepEqual( Stem("envis"), "envis" );
	deepEqual( Stem("envisa"), "envis" );
	deepEqual( Stem("envisas"), "envis" );
	deepEqual( Stem("envise"), "envis" );
	deepEqual( Stem("envishet"), "envis" );
	deepEqual( Stem("envist"), "envist" );
	deepEqual( Stem("envåldshärskarens"), "envåldshärsk" );
	deepEqual( Stem("envånings"), "envåning" );
	deepEqual( Stem("envåningsbyggnaden"), "envåningsbyggnad" );
	deepEqual( Stem("enär"), "enär" );
	deepEqual( Stem("eol"), "eol" );
	deepEqual( Stem("eolin"), "eolin" );
	deepEqual( Stem("eolsharpor"), "eolsharp" );
	deepEqual( Stem("eolus"), "eolus" );
	deepEqual( Stem("epilepsi"), "epilepsi" );
	deepEqual( Stem("epileptisk"), "epileptisk" );
	deepEqual( Stem("episod"), "episod" );
	deepEqual( Stem("episoder"), "episod" );
	deepEqual( Stem("epistlar"), "epistl" );
	deepEqual( Stem("epok"), "epok" );
	deepEqual( Stem("epokgörande"), "epokgör" );
	deepEqual( Stem("epåletter"), "epålet" );
	deepEqual( Stem("er"), "er" );
	deepEqual( Stem("era"), "era" );
	deepEqual( Stem("erbarmligt"), "erbarm" );
	deepEqual( Stem("erbjuda"), "erbjud" );
	deepEqual( Stem("erbjuder"), "erbjud" );
	deepEqual( Stem("erbjudes"), "erbjud" );
	deepEqual( Stem("erbjudna"), "erbjudn" );
	deepEqual( Stem("erbjöd"), "erbjöd" );
	deepEqual( Stem("erbjöds"), "erbjöd" );
	deepEqual( Stem("erda"), "erd" );
	deepEqual( Stem("erfar"), "erf" );
	deepEqual( Stem("erfara"), "erfar" );
	deepEqual( Stem("erfaren"), "erf" );
	deepEqual( Stem("erfarenhet"), "erfaren" );
	deepEqual( Stem("erfarenheten"), "erfaren" );
	deepEqual( Stem("erfarenheter"), "erfaren" );
	deepEqual( Stem("erfares"), "erfar" );
	deepEqual( Stem("erfaret"), "erfaret" );
	deepEqual( Stem("erfarit"), "erfarit" );
	deepEqual( Stem("erfarna"), "erf" );
	deepEqual( Stem("erfarne"), "erf" );
	deepEqual( Stem("erfor"), "erf" );
	deepEqual( Stem("erforderlig"), "erforder" );
	deepEqual( Stem("erforderligt"), "erforder" );
	deepEqual( Stem("erfordra"), "erfordr" );
	deepEqual( Stem("erfordrade"), "erfordr" );
	deepEqual( Stem("erfordrades"), "erfordr" );
	deepEqual( Stem("erfordras"), "erfordr" );
	deepEqual( Stem("erhalla"), "erhall" );
	deepEqual( Stem("erhålla"), "erhåll" );
	deepEqual( Stem("erhållit"), "erhållit" );
	deepEqual( Stem("erhållna"), "erhålln" );
	deepEqual( Stem("erhöll"), "erhöll" );
	deepEqual( Stem("erhölle"), "erhöll" );
	deepEqual( Stem("erhöllo"), "erhöllo" );
	deepEqual( Stem("erhölls"), "erhöll" );
	deepEqual( Stem("erika"), "erik" );
	deepEqual( Stem("erikas"), "erik" );
	deepEqual( Stem("eriksfärd"), "eriksfärd" );
	deepEqual( Stem("eriksgata"), "eriksgat" );
	deepEqual( Stem("erinnyerna"), "erinny" );
	deepEqual( Stem("erinra"), "erinr" );
	deepEqual( Stem("erinrade"), "erinr" );
	deepEqual( Stem("erinrades"), "erinr" );
	deepEqual( Stem("erinran"), "erinran" );
	deepEqual( Stem("erinrande"), "erinr" );
	deepEqual( Stem("erinrar"), "erinr" );
	deepEqual( Stem("erinrat"), "erinr" );
	deepEqual( Stem("erinring"), "erinring" );
	deepEqual( Stem("erinringar"), "erinring" );
	deepEqual( Stem("erinringen"), "erinring" );
	deepEqual( Stem("erkann"), "erkan" );
	deepEqual( Stem("erkänd"), "erkänd" );
	deepEqual( Stem("erkända"), "erkänd" );
	deepEqual( Stem("erkände"), "erkänd" );
	deepEqual( Stem("erkänn"), "erkän" );
	deepEqual( Stem("erkänna"), "erkän" );
	deepEqual( Stem("erkännande"), "erkän" );
	deepEqual( Stem("erkänner"), "erkän" );
	deepEqual( Stem("erkänsla"), "erkänsl" );
	deepEqual( Stem("erkänt"), "erkänt" );
	deepEqual( Stem("erl"), "erl" );
	deepEqual( Stem("erlade"), "erl" );
	deepEqual( Stem("erlagda"), "erlag" );
	deepEqual( Stem("erlägga"), "erlägg" );
	deepEqual( Stem("erna"), "ern" );
	deepEqual( Stem("ernas"), "ern" );
	deepEqual( Stem("ernestina"), "ernestin" );
	deepEqual( Stem("ernst"), "ernst" );
	deepEqual( Stem("ernå"), "ernå" );
	deepEqual( Stem("ernående"), "ernåend" );
	deepEqual( Stem("erotisk"), "erotisk" );
	deepEqual( Stem("erplagg"), "erplagg" );
	deepEqual( Stem("erre"), "err" );
	deepEqual( Stem("ersatt"), "ersat" );
	deepEqual( Stem("ersatta"), "ersat" );
	deepEqual( Stem("ersatte"), "ersat" );
	deepEqual( Stem("ersätta"), "ersät" );
	deepEqual( Stem("ersätter"), "ersät" );
	deepEqual( Stem("ersättning"), "ersättning" );
	deepEqual( Stem("ert"), "ert" );
	deepEqual( Stem("ertappade"), "ertapp" );
	deepEqual( Stem("ertappat"), "ertapp" );
	deepEqual( Stem("eröfra"), "eröfr" );
	deepEqual( Stem("eröfrade"), "eröfr" );
	deepEqual( Stem("erövra"), "erövr" );
	deepEqual( Stem("erövrad"), "erövr" );
	deepEqual( Stem("erövring"), "erövring" );
	deepEqual( Stem("erövringar"), "erövring" );
	deepEqual( Stem("es"), "es" );
	deepEqual( Stem("esoteriska"), "esoterisk" );
	deepEqual( Stem("ess"), "ess" );
	deepEqual( Stem("esse"), "ess" );
	deepEqual( Stem("essingen"), "essing" );
	deepEqual( Stem("est"), "est" );
	deepEqual( Stem("esterhazys"), "esterhazy" );
	deepEqual( Stem("estetikens"), "estetik" );
	deepEqual( Stem("estetiska"), "estetisk" );
	deepEqual( Stem("estimabel"), "estimabel" );
	deepEqual( Stem("estimabelt"), "estimabelt" );
	deepEqual( Stem("estrad"), "estr" );
	deepEqual( Stem("estraden"), "estrad" );
	deepEqual( Stem("et"), "et" );
	deepEqual( Stem("etan"), "etan" );
	deepEqual( Stem("etc"), "etc" );
	deepEqual( Stem("eteriska"), "eterisk" );
	deepEqual( Stem("eterstruten"), "eterstrut" );
	deepEqual( Stem("etiketter"), "etiket" );
	deepEqual( Stem("etiskt"), "etisk" );
	deepEqual( Stem("etra"), "etr" );
	deepEqual( Stem("etras"), "etr" );
	deepEqual( Stem("etsat"), "ets" );
	deepEqual( Stem("ett"), "ett" );
	deepEqual( Stem("etta"), "ett" );
	deepEqual( Stem("etter"), "ett" );
	deepEqual( Stem("etthundra"), "etthundr" );
	deepEqual( Stem("etty"), "etty" );
	deepEqual( Stem("ettårig"), "ettår" );
	deepEqual( Stem("etuin"), "etuin" );
	deepEqual( Stem("eu"), "eu" );
	deepEqual( Stem("euer"), "euer" );
	deepEqual( Stem("eugeniahemmet"), "eugeniahemmet" );
	deepEqual( Stem("europa"), "europ" );
	deepEqual( Stem("ev"), "ev" );
	deepEqual( Stem("eva"), "eva" );
	deepEqual( Stem("evangelist"), "evangelist" );
	deepEqual( Stem("evangeliums"), "evangelium" );
	deepEqual( Stem("evig"), "evig" );
	deepEqual( Stem("eviga"), "evig" );
	deepEqual( Stem("evige"), "evig" );
	deepEqual( Stem("evighet"), "evig" );
	deepEqual( Stem("evigheten"), "evig" );
	deepEqual( Stem("evighetens"), "evig" );
	deepEqual( Stem("evighetssynpunkt"), "evighetssynpunk" );
	deepEqual( Stem("evighetstanke"), "evighetstank" );
	deepEqual( Stem("evigt"), "evig" );
	deepEqual( Stem("evärdeliga"), "evärde" );
	deepEqual( Stem("ex"), "ex" );
	deepEqual( Stem("exalterad"), "exalter" );
	deepEqual( Stem("exalterade"), "exalter" );
	deepEqual( Stem("examen"), "exam" );
	deepEqual( Stem("examineras"), "examiner" );
	deepEqual( Stem("excellensen"), "excellens" );
	deepEqual( Stem("excentriciteter"), "excentricitet" );
	deepEqual( Stem("exekutionen"), "exekution" );
	deepEqual( Stem("exekutiva"), "exekutiv" );
	deepEqual( Stem("exempel"), "exempel" );
	deepEqual( Stem("exemplar"), "exempl" );
	deepEqual( Stem("exemplarisk"), "exemplarisk" );
	deepEqual( Stem("exemplariska"), "exemplarisk" );
	deepEqual( Stem("exemplen"), "exempl" );
	deepEqual( Stem("exemplet"), "exemplet" );
	deepEqual( Stem("exercera"), "exercer" );
	deepEqual( Stem("existera"), "exister" );
	deepEqual( Stem("exlöjtnanten"), "exlöjtnant" );
	deepEqual( Stem("exotisk"), "exotisk" );
	deepEqual( Stem("expedi"), "expedi" );
	deepEqual( Stem("expedierad"), "expedier" );
	deepEqual( Stem("expeditionen"), "expedition" );
	deepEqual( Stem("expeditionerna"), "expedition" );
	deepEqual( Stem("exposition"), "exposition" );
	deepEqual( Stem("expositionen"), "exposition" );
	deepEqual( Stem("extas"), "ext" );
	deepEqual( Stem("extasen"), "extas" );
	deepEqual( Stem("extatiska"), "extatisk" );
	deepEqual( Stem("extra"), "extr" );
	deepEqual( Stem("extraordinarien"), "extraordinari" );
	deepEqual( Stem("extraordinart"), "extraordinart" );
	deepEqual( Stem("extravagant"), "extravagant" );
	deepEqual( Stem("eörstod"), "eörstod" );
	deepEqual( Stem("f"), "f" );
	deepEqual( Stem("fa"), "fa" );
	deepEqual( Stem("fabian"), "fabian" );
	deepEqual( Stem("fabriker"), "fabrik" );
	deepEqual( Stem("fabriksmärke"), "fabriksmärk" );
	deepEqual( Stem("fabriksskorstenarna"), "fabriksskorsten" );
	deepEqual( Stem("fackelfest"), "fackelfest" );
	deepEqual( Stem("facket"), "facket" );
	deepEqual( Stem("fackla"), "fackl" );
	deepEqual( Stem("fackman"), "fackman" );
	deepEqual( Stem("facktermerna"), "fackterm" );
	deepEqual( Stem("facktidskrift"), "facktidskrift" );
	deepEqual( Stem("facktidskrifter"), "facktidskrift" );
	deepEqual( Stem("faddergåfvor"), "faddergåfv" );
	deepEqual( Stem("fader"), "fad" );
	deepEqual( Stem("faderlig"), "fader" );
	deepEqual( Stem("faderliga"), "fader" );
	deepEqual( Stem("faderlösa"), "faderlös" );
	deepEqual( Stem("fadern"), "fad" );
	deepEqual( Stem("faderns"), "fad" );
	deepEqual( Stem("fadersglädje"), "fadersglädj" );
	deepEqual( Stem("fadershemmet"), "fadershemmet" );
	deepEqual( Stem("fadershjärtat"), "fadershjärt" );
	deepEqual( Stem("fadersnamnet"), "fadersnamnet" );
	deepEqual( Stem("fadrens"), "fadr" );
	deepEqual( Stem("faft"), "faft" );
	deepEqual( Stem("fafänga"), "fafäng" );
	deepEqual( Stem("fagel"), "fagel" );
	deepEqual( Stem("fageln"), "fageln" );
	deepEqual( Stem("fager"), "fag" );
	deepEqual( Stem("fagert"), "fagert" );
	deepEqual( Stem("fagra"), "fagr" );
	deepEqual( Stem("fahlen"), "fahl" );
	deepEqual( Stem("fak"), "fak" );
	deepEqual( Stem("fakta"), "fakt" );
	deepEqual( Stem("faktiskt"), "faktisk" );
	deepEqual( Stem("fal"), "fal" );
	deepEqual( Stem("falaskan"), "falaskan" );
	deepEqual( Stem("falköga"), "falkög" );
	deepEqual( Stem("falkögon"), "falkögon" );
	deepEqual( Stem("fall"), "fall" );
	deepEqual( Stem("falla"), "fall" );
	deepEqual( Stem("fallande"), "fall" );
	deepEqual( Stem("fallen"), "fall" );
	deepEqual( Stem("fallenhet"), "fallen" );
	deepEqual( Stem("faller"), "fall" );
	deepEqual( Stem("fallet"), "fallet" );
	deepEqual( Stem("fallfärdigt"), "fallfärd" );
	deepEqual( Stem("fallit"), "fallit" );
	deepEqual( Stem("fallna"), "falln" );
	deepEqual( Stem("fallucka"), "falluck" );
	deepEqual( Stem("falluckan"), "falluckan" );
	deepEqual( Stem("falnade"), "faln" );
	deepEqual( Stem("falsk"), "falsk" );
	deepEqual( Stem("falska"), "falsk" );
	deepEqual( Stem("falskhet"), "falsk" );
	deepEqual( Stem("falskt"), "falsk" );
	deepEqual( Stem("famil"), "famil" );
	deepEqual( Stem("familj"), "familj" );
	deepEqual( Stem("familjcn"), "familjcn" );
	deepEqual( Stem("familjebjudningarna"), "familjebjudning" );
	deepEqual( Stem("familjebänken"), "familjebänk" );
	deepEqual( Stem("familjefar"), "familjef" );
	deepEqual( Stem("familjeförbindelser"), "familjeförbind" );
	deepEqual( Stem("familjeförhållanden"), "familjeförhåll" );
	deepEqual( Stem("familjegraven"), "familjegrav" );
	deepEqual( Stem("familjehändelser"), "familjehänd" );
	deepEqual( Stem("familjelifvet"), "familjelifvet" );
	deepEqual( Stem("familjen"), "familj" );
	deepEqual( Stem("familjens"), "familj" );
	deepEqual( Stem("familjer"), "familj" );
	deepEqual( Stem("familjeträdet"), "familjeträdet" );
	deepEqual( Stem("familjs"), "familj" );
	deepEqual( Stem("familjtafla"), "familjtafl" );
	deepEqual( Stem("faml"), "faml" );
	deepEqual( Stem("famlade"), "faml" );
	deepEqual( Stem("famlande"), "faml" );
	deepEqual( Stem("famlar"), "faml" );
	deepEqual( Stem("famls"), "faml" );
	deepEqual( Stem("famn"), "famn" );
	deepEqual( Stem("famna"), "famn" );
	deepEqual( Stem("famnadcs"), "famnadc" );
	deepEqual( Stem("famnade"), "famn" );
	deepEqual( Stem("famnades"), "famn" );
	deepEqual( Stem("famnar"), "famn" );
	deepEqual( Stem("famnen"), "famn" );
	deepEqual( Stem("famntag"), "famntag" );
	deepEqual( Stem("famntaget"), "famntaget" );
	deepEqual( Stem("famntagets"), "famntaget" );
	deepEqual( Stem("famntags"), "famntag" );
	deepEqual( Stem("fan"), "fan" );
	deepEqual( Stem("fana"), "fan" );
	deepEqual( Stem("fanders"), "fander" );
	deepEqual( Stem("fanga"), "fang" );
	deepEqual( Stem("fangen"), "fang" );
	deepEqual( Stem("fanliljen"), "fanlilj" );
	deepEqual( Stem("fann"), "fann" );
	deepEqual( Stem("fanns"), "fann" );
	deepEqual( Stem("fans"), "fan" );
	deepEqual( Stem("fantasi"), "fantasi" );
	deepEqual( Stem("fantasien"), "fantasi" );
	deepEqual( Stem("fantasiens"), "fantasi" );
	deepEqual( Stem("fantasier"), "fantasi" );
	deepEqual( Stem("fantastisk"), "fantastisk" );
	deepEqual( Stem("fantastiska"), "fantastisk" );
	deepEqual( Stem("fantastiskt"), "fantastisk" );
	deepEqual( Stem("fantiserade"), "fantiser" );
	deepEqual( Stem("fantiserar"), "fantiser" );
	deepEqual( Stem("fantome"), "fantom" );
	deepEqual( Stem("far"), "far" );
	deepEqual( Stem("fara"), "far" );
	deepEqual( Stem("faran"), "faran" );
	deepEqual( Stem("farande"), "far" );
	deepEqual( Stem("farbroder"), "farbrod" );
	deepEqual( Stem("farbrodern"), "farbrod" );
	deepEqual( Stem("farbroderns"), "farbrod" );
	deepEqual( Stem("farbror"), "farbr" );
	deepEqual( Stem("farbrors"), "farbror" );
	deepEqual( Stem("farbröder"), "farbröd" );
	deepEqual( Stem("fardig"), "fard" );
	deepEqual( Stem("farfadern"), "farfad" );
	deepEqual( Stem("farfar"), "farf" );
	deepEqual( Stem("farfars"), "farfar" );
	deepEqual( Stem("farföräldrar"), "farföräldr" );
	deepEqual( Stem("farföräldrars"), "farföräldrar" );
	deepEqual( Stem("farhåga"), "farhåg" );
	deepEqual( Stem("farhågan"), "farhågan" );
	deepEqual( Stem("farhågor"), "farhåg" );
	deepEqual( Stem("farit"), "farit" );
	deepEqual( Stem("farkost"), "farkost" );
	deepEqual( Stem("farkosten"), "farkost" );
	deepEqual( Stem("farkoster"), "farkost" );
	deepEqual( Stem("farl"), "farl" );
	deepEqual( Stem("farlig"), "far" );
	deepEqual( Stem("farliga"), "far" );
	deepEqual( Stem("farligare"), "far" );
	deepEqual( Stem("farligt"), "far" );
	deepEqual( Stem("farm"), "farm" );
	deepEqual( Stem("farmaceut"), "farmaceut" );
	deepEqual( Stem("farmaceuten"), "farmaceut" );
	deepEqual( Stem("farmor"), "farm" );
	deepEqual( Stem("faror"), "far" );
	deepEqual( Stem("fars"), "far" );
	deepEqual( Stem("farscha"), "farsch" );
	deepEqual( Stem("farstudör"), "farstudör" );
	deepEqual( Stem("farstutrapp"), "farstutrapp" );
	deepEqual( Stem("fart"), "fart" );
	deepEqual( Stem("farten"), "fart" );
	deepEqual( Stem("fartyg"), "fartyg" );
	deepEqual( Stem("fartygen"), "fartyg" );
	deepEqual( Stem("fartyget"), "fartyget" );
	deepEqual( Stem("fartygets"), "fartyget" );
	deepEqual( Stem("fartygs"), "fartyg" );
	deepEqual( Stem("farvatten"), "farvat" );
	deepEqual( Stem("farväl"), "farväl" );
	deepEqual( Stem("fasa"), "fas" );
	deepEqual( Stem("fasad"), "fas" );
	deepEqual( Stem("fasanerna"), "fasan" );
	deepEqual( Stem("fasansfulle"), "fasansfull" );
	deepEqual( Stem("fasansfullt"), "fasansfull" );
	deepEqual( Stem("fasar"), "fas" );
	deepEqual( Stem("fasligen"), "fas" );
	deepEqual( Stem("fasligt"), "fas" );
	deepEqual( Stem("fasoner"), "fason" );
	deepEqual( Stem("fasonerna"), "fason" );
	deepEqual( Stem("fasor"), "fas" );
	deepEqual( Stem("fassor"), "fass" );
	deepEqual( Stem("fast"), "fast" );
	deepEqual( Stem("fasta"), "fast" );
	deepEqual( Stem("fastad"), "fast" );
	deepEqual( Stem("fastaget"), "fastaget" );
	deepEqual( Stem("fastan"), "fastan" );
	deepEqual( Stem("fastare"), "fast" );
	deepEqual( Stem("fastbunden"), "fastbund" );
	deepEqual( Stem("faster"), "fast" );
	deepEqual( Stem("fastern"), "fast" );
	deepEqual( Stem("fasters"), "faster" );
	deepEqual( Stem("fastfrusen"), "fastfrus" );
	deepEqual( Stem("fasthet"), "fast" );
	deepEqual( Stem("fasthäftade"), "fasthäft" );
	deepEqual( Stem("fasthålla"), "fasthåll" );
	deepEqual( Stem("fasthöllo"), "fasthöllo" );
	deepEqual( Stem("fastklistrad"), "fastklistr" );
	deepEqual( Stem("fastlag"), "fastlag" );
	deepEqual( Stem("fastlagskoral"), "fastlagskoral" );
	deepEqual( Stem("fastmer"), "fastm" );
	deepEqual( Stem("fastmö"), "fastmö" );
	deepEqual( Stem("fastna"), "fastn" );
	deepEqual( Stem("fastnade"), "fastn" );
	deepEqual( Stem("fastnaglad"), "fastnagl" );
	deepEqual( Stem("fastnat"), "fastn" );
	deepEqual( Stem("fastrar"), "fastr" );
	deepEqual( Stem("fastställda"), "fastställd" );
	deepEqual( Stem("fastsurrad"), "fastsurr" );
	deepEqual( Stem("fastsurrade"), "fastsurr" );
	deepEqual( Stem("fastän"), "fastän" );
	deepEqual( Stem("fastån"), "fastån" );
	deepEqual( Stem("fat"), "fat" );
	deepEqual( Stem("fatalt"), "fatalt" );
	deepEqual( Stem("fatet"), "fatet" );
	deepEqual( Stem("fatt"), "fatt" );
	deepEqual( Stem("fatta"), "fatt" );
	deepEqual( Stem("fattadc"), "fattadc" );
	deepEqual( Stem("fattade"), "fatt" );
	deepEqual( Stem("fattades"), "fatt" );
	deepEqual( Stem("fattar"), "fatt" );
	deepEqual( Stem("fattas"), "fatt" );
	deepEqual( Stem("fattat"), "fatt" );
	deepEqual( Stem("fattbar"), "fattb" );
	deepEqual( Stem("fattig"), "fatt" );
	deepEqual( Stem("fattiga"), "fatt" );
	deepEqual( Stem("fattigare"), "fatt" );
	deepEqual( Stem("fattigaste"), "fatt" );
	deepEqual( Stem("fattigdom"), "fattigdom" );
	deepEqual( Stem("fattigdomen"), "fattigdom" );
	deepEqual( Stem("fattigdomens"), "fattigdom" );
	deepEqual( Stem("fattige"), "fatt" );
	deepEqual( Stem("fattiglapp"), "fattiglapp" );
	deepEqual( Stem("fattiglappen"), "fattiglapp" );
	deepEqual( Stem("fattigt"), "fatt" );
	deepEqual( Stem("fattning"), "fattning" );
	deepEqual( Stem("fattningsförmåga"), "fattningsförmåg" );
	deepEqual( Stem("fattningsgåva"), "fattningsgåv" );
	deepEqual( Stem("faubourg"), "faubourg" );
	deepEqual( Stem("faure"), "faur" );
	deepEqual( Stem("faust"), "faust" );
	deepEqual( Stem("faute"), "faut" );
	deepEqual( Stem("favitska"), "favitsk" );
	deepEqual( Stem("favoriträtt"), "favoriträt" );
	deepEqual( Stem("fax"), "fax" );
	deepEqual( Stem("fctt"), "fctt" );
	deepEqual( Stem("fdrlovade"), "fdrlov" );
	deepEqual( Stem("fdrvridna"), "fdrvridn" );
	deepEqual( Stem("fe"), "fe" );
	deepEqual( Stem("feber"), "feb" );
	deepEqual( Stem("feberaktig"), "feberakt" );
	deepEqual( Stem("feberaktiga"), "feberakt" );
	deepEqual( Stem("feberdröm"), "feberdröm" );
	deepEqual( Stem("feberhetta"), "feberhet" );
	deepEqual( Stem("febern"), "feb" );
	deepEqual( Stem("feberns"), "feb" );
	deepEqual( Stem("febersjukdom"), "febersjukdom" );
	deepEqual( Stem("febertermometern"), "febertermomet" );
	deepEqual( Stem("febervarm"), "febervarm" );
	deepEqual( Stem("feberyrsel"), "feberyrsel" );
	deepEqual( Stem("feberyrseln"), "feberyrseln" );
	deepEqual( Stem("febrilt"), "febrilt" );
	deepEqual( Stem("februari"), "februari" );
	deepEqual( Stem("feer"), "feer" );
	deepEqual( Stem("feerna"), "feern" );
	deepEqual( Stem("feg"), "feg" );
	deepEqual( Stem("feghet"), "feg" );
	deepEqual( Stem("fegt"), "fegt" );
	deepEqual( Stem("fejade"), "fej" );
	deepEqual( Stem("fejd"), "fejd" );
	deepEqual( Stem("fel"), "fel" );
	deepEqual( Stem("fela"), "fel" );
	deepEqual( Stem("felade"), "fel" );
	deepEqual( Stem("felaktig"), "felakt" );
	deepEqual( Stem("felaktiga"), "felakt" );
	deepEqual( Stem("felande"), "fel" );
	deepEqual( Stem("felas"), "fel" );
	deepEqual( Stem("felat"), "fel" );
	deepEqual( Stem("felet"), "felet" );
	deepEqual( Stem("felfri"), "felfri" );
	deepEqual( Stem("felix"), "felix" );
	deepEqual( Stem("felmodellerad"), "felmodeller" );
	deepEqual( Stem("felslagna"), "felslagn" );
	deepEqual( Stem("felsteg"), "felsteg" );
	deepEqual( Stem("fem"), "fem" );
	deepEqual( Stem("feminin"), "feminin" );
	deepEqual( Stem("femkamp"), "femkamp" );
	deepEqual( Stem("femma"), "femm" );
	deepEqual( Stem("femrio"), "femrio" );
	deepEqual( Stem("femte"), "femt" );
	deepEqual( Stem("femtio"), "femtio" );
	deepEqual( Stem("femtiosex"), "femtiosex" );
	deepEqual( Stem("femtiosju"), "femtiosju" );
	deepEqual( Stem("femtiotalet"), "femtiotalet" );
	deepEqual( Stem("femtioåtta"), "femtioåt" );
	deepEqual( Stem("femton"), "femton" );
	deepEqual( Stem("femtonde"), "femtond" );
	deepEqual( Stem("fen"), "fen" );
	deepEqual( Stem("fena"), "fen" );
	deepEqual( Stem("fenelon"), "fenelon" );
	deepEqual( Stem("fenix"), "fenix" );
	deepEqual( Stem("fenomenens"), "fenomen" );
	deepEqual( Stem("fenster"), "fenst" );
	deepEqual( Stem("ferierna"), "feri" );
	deepEqual( Stem("fermt"), "fermt" );
	deepEqual( Stem("fermtio"), "fermtio" );
	deepEqual( Stem("fernissa"), "ferniss" );
	deepEqual( Stem("fersen"), "fers" );
	deepEqual( Stem("fest"), "fest" );
	deepEqual( Stem("festen"), "fest" );
	deepEqual( Stem("festens"), "fest" );
	deepEqual( Stem("fester"), "fest" );
	deepEqual( Stem("festernas"), "fest" );
	deepEqual( Stem("festklädda"), "festkläd" );
	deepEqual( Stem("festliga"), "fest" );
	deepEqual( Stem("festligaste"), "fest" );
	deepEqual( Stem("festligheten"), "fest" );
	deepEqual( Stem("festligt"), "fest" );
	deepEqual( Stem("fet"), "fet" );
	deepEqual( Stem("feta"), "fet" );
	deepEqual( Stem("fetare"), "fet" );
	deepEqual( Stem("fetknoppen"), "fetknopp" );
	deepEqual( Stem("fetlagd"), "fetlag" );
	deepEqual( Stem("fetlagt"), "fetlag" );
	deepEqual( Stem("fetman"), "fetman" );
	deepEqual( Stem("fetstilsrubriken"), "fetstilsrubrik" );
	deepEqual( Stem("fett"), "fett" );
	deepEqual( Stem("fetthjärta"), "fetthjärt" );
	deepEqual( Stem("fez"), "fez" );
	deepEqual( Stem("fezen"), "fez" );
	deepEqual( Stem("fi"), "fi" );
	deepEqual( Stem("fiaddra"), "fiaddr" );
	deepEqual( Stem("fiat"), "fiat" );
	deepEqual( Stem("fibrer"), "fibr" );
	deepEqual( Stem("fichn"), "fichn" );
	deepEqual( Stem("ficj"), "ficj" );
	deepEqual( Stem("fick"), "fick" );
	deepEqual( Stem("ficka"), "fick" );
	deepEqual( Stem("fickan"), "fickan" );
	deepEqual( Stem("ficker"), "fick" );
	deepEqual( Stem("fickers"), "ficker" );
	deepEqual( Stem("fickor"), "fick" );
	deepEqual( Stem("fickorna"), "fick" );
	deepEqual( Stem("fickpengar"), "fickpeng" );
	deepEqual( Stem("ficktjuvs"), "ficktjuv" );
	deepEqual( Stem("fickur"), "fickur" );
	deepEqual( Stem("fideikommiss"), "fideikommiss" );
	deepEqual( Stem("fiende"), "fiend" );
	deepEqual( Stem("fiendeland"), "fiendeland" );
	deepEqual( Stem("fiender"), "fiend" );
	deepEqual( Stem("fientlig"), "fient" );
	deepEqual( Stem("fientliga"), "fient" );
	deepEqual( Stem("fientlighet"), "fient" );
	deepEqual( Stem("fiffigt"), "fiff" );
	deepEqual( Stem("fig"), "fig" );
	deepEqual( Stem("figur"), "figur" );
	deepEqual( Stem("figuranter"), "figurant" );
	deepEqual( Stem("figuren"), "figur" );
	deepEqual( Stem("figurer"), "figur" );
	deepEqual( Stem("figurerna"), "figur" );
	deepEqual( Stem("figurliga"), "figur" );
	deepEqual( Stem("fiiosofiskt"), "fiiosofisk" );
	deepEqual( Stem("fiiten"), "fiit" );
	deepEqual( Stem("fikar"), "fik" );
	deepEqual( Stem("fikon"), "fikon" );
	deepEqual( Stem("fikonaskörten"), "fikonaskört" );
	deepEqual( Stem("fiktion"), "fiktion" );
	deepEqual( Stem("fiktioner"), "fiktion" );
	deepEqual( Stem("fikusen"), "fikus" );
	deepEqual( Stem("fil"), "fil" );
	deepEqual( Stem("filantroper"), "filantrop" );
	deepEqual( Stem("filbunke"), "filbunk" );
	deepEqual( Stem("filen"), "fil" );
	deepEqual( Stem("filips"), "filip" );
	deepEqual( Stem("filosof"), "filosof" );
	deepEqual( Stem("filosofen"), "filosof" );
	deepEqual( Stem("filosoferna"), "filosof" );
	deepEqual( Stem("filosofi"), "filosofi" );
	deepEqual( Stem("filosofin"), "filosofin" );
	deepEqual( Stem("filosofiska"), "filosofisk" );
	deepEqual( Stem("filt"), "filt" );
	deepEqual( Stem("filtar"), "filt" );
	deepEqual( Stem("filuren"), "filur" );
	deepEqual( Stem("fimbulnatt"), "fimbulnat" );
	deepEqual( Stem("fimla"), "fiml" );
	deepEqual( Stem("fimls"), "fiml" );
	deepEqual( Stem("fin"), "fin" );
	deepEqual( Stem("fina"), "fin" );
	deepEqual( Stem("finansvärlden"), "finansvärld" );
	deepEqual( Stem("finare"), "fin" );
	deepEqual( Stem("finaste"), "fin" );
	deepEqual( Stem("finessen"), "finess" );
	deepEqual( Stem("fingc"), "fingc" );
	deepEqual( Stem("finge"), "fing" );
	deepEqual( Stem("finger"), "fing" );
	deepEqual( Stem("fingerspetsar"), "fingerspets" );
	deepEqual( Stem("fingerspetsarna"), "fingerspets" );
	deepEqual( Stem("fingertoppar"), "fingertopp" );
	deepEqual( Stem("fingertopparna"), "fingertopp" );
	deepEqual( Stem("fingo"), "fingo" );
	deepEqual( Stem("fingra"), "fingr" );
	deepEqual( Stem("fingrade"), "fingr" );
	deepEqual( Stem("fingrar"), "fingr" );
	deepEqual( Stem("fingrarna"), "fingr" );
	deepEqual( Stem("fingrarne"), "fingr" );
	deepEqual( Stem("fingret"), "fingret" );
	deepEqual( Stem("finhet"), "fin" );
	deepEqual( Stem("finheter"), "fin" );
	deepEqual( Stem("finkel"), "finkel" );
	deepEqual( Stem("finkänslig"), "finkäns" );
	deepEqual( Stem("finkänsliga"), "finkäns" );
	deepEqual( Stem("finkänslighet"), "finkäns" );
	deepEqual( Stem("finland"), "finland" );
	deepEqual( Stem("finlandssvenska"), "finlandssvensk" );
	deepEqual( Stem("finländsk"), "finländsk" );
	deepEqual( Stem("finms"), "finm" );
	deepEqual( Stem("finna"), "finn" );
	deepEqual( Stem("finnande"), "finn" );
	deepEqual( Stem("finnandes"), "finn" );
	deepEqual( Stem("finnarna"), "finn" );
	deepEqual( Stem("finnas"), "finn" );
	deepEqual( Stem("finner"), "finn" );
	deepEqual( Stem("finnes"), "finn" );
	deepEqual( Stem("finns"), "finn" );
	deepEqual( Stem("fins"), "fin" );
	deepEqual( Stem("finsk"), "finsk" );
	deepEqual( Stem("finska"), "finsk" );
	deepEqual( Stem("fint"), "fint" );
	deepEqual( Stem("fintlighet"), "fint" );
	deepEqual( Stem("finur"), "finur" );
	deepEqual( Stem("fiol"), "fiol" );
	deepEqual( Stem("fiolen"), "fiol" );
	deepEqual( Stem("fiolin"), "fiolin" );
	deepEqual( Stem("fira"), "fir" );
	deepEqual( Stem("firad"), "fir" );
	deepEqual( Stem("firade"), "fir" );
	deepEqual( Stem("firades"), "fir" );
	deepEqual( Stem("firande"), "fir" );
	deepEqual( Stem("firar"), "fir" );
	deepEqual( Stem("firat"), "fir" );
	deepEqual( Stem("firma"), "firm" );
	deepEqual( Stem("fisk"), "fisk" );
	deepEqual( Stem("fiska"), "fisk" );
	deepEqual( Stem("fiskar"), "fisk" );
	deepEqual( Stem("fiskarbatarna"), "fiskarbat" );
	deepEqual( Stem("fiskarbåtarna"), "fiskarbåt" );
	deepEqual( Stem("fiskare"), "fisk" );
	deepEqual( Stem("fiskaren"), "fisk" );
	deepEqual( Stem("fiskarflicka"), "fiskarflick" );
	deepEqual( Stem("fiskarflickan"), "fiskarflickan" );
	deepEqual( Stem("fiskarflickans"), "fiskarflickan" );
	deepEqual( Stem("fiskargubbe"), "fiskargubb" );
	deepEqual( Stem("fiskarne"), "fisk" );
	deepEqual( Stem("fiskarstugan"), "fiskarstugan" );
	deepEqual( Stem("fiskarstugorna"), "fiskarstug" );
	deepEqual( Stem("fiskat"), "fisk" );
	deepEqual( Stem("fiske"), "fisk" );
	deepEqual( Stem("fisken"), "fisk" );
	deepEqual( Stem("fisket"), "fisket" );
	deepEqual( Stem("fiskfatet"), "fiskfatet" );
	deepEqual( Stem("fiskläge"), "fiskläg" );
	deepEqual( Stem("fisklägen"), "fiskläg" );
	deepEqual( Stem("fiskläget"), "fiskläget" );
	deepEqual( Stem("fisklägets"), "fiskläget" );
	deepEqual( Stem("fisknoten"), "fisknot" );
	deepEqual( Stem("fiskrarne"), "fiskr" );
	deepEqual( Stem("fiskredskap"), "fiskredskap" );
	deepEqual( Stem("fiskredskapen"), "fiskredskap" );
	deepEqual( Stem("fisktorkning"), "fisktorkning" );
	deepEqual( Stem("fisktorkningen"), "fisktorkning" );
	deepEqual( Stem("fistmanspresenterna"), "fistmanspresent" );
	deepEqual( Stem("fix"), "fix" );
	deepEqual( Stem("fixerade"), "fixer" );
	deepEqual( Stem("fixerar"), "fixer" );
	deepEqual( Stem("fiäsk"), "fiäsk" );
	deepEqual( Stem("fjerde"), "fjerd" );
	deepEqual( Stem("fjesk"), "fjesk" );
	deepEqual( Stem("fjeska"), "fjesk" );
	deepEqual( Stem("fjol"), "fjol" );
	deepEqual( Stem("fjolligt"), "fjol" );
	deepEqual( Stem("fjor"), "fjor" );
	deepEqual( Stem("fjorton"), "fjorton" );
	deepEqual( Stem("fjortonde"), "fjortond" );
	deepEqual( Stem("fjortonårig"), "fjortonår" );
	deepEqual( Stem("fjortonöres"), "fjortonör" );
	deepEqual( Stem("fjun"), "fjun" );
	deepEqual( Stem("fjuniga"), "fjun" );
	deepEqual( Stem("fjunlös"), "fjunlös" );
	deepEqual( Stem("fjäder"), "fjäd" );
	deepEqual( Stem("fjäderboa"), "fjäderbo" );
	deepEqual( Stem("fjädern"), "fjäd" );
	deepEqual( Stem("fjädrande"), "fjädr" );
	deepEqual( Stem("fjädrar"), "fjädr" );
	deepEqual( Stem("fjäll"), "fjäll" );
	deepEqual( Stem("fjällen"), "fjäll" );
	deepEqual( Stem("fjälliga"), "fjäl" );
	deepEqual( Stem("fjälligt"), "fjäl" );
	deepEqual( Stem("fjällko"), "fjällko" );
	deepEqual( Stem("fjärde"), "fjärd" );
	deepEqual( Stem("fjärdedelar"), "fjärdedel" );
	deepEqual( Stem("fjärdedelen"), "fjärdedel" );
	deepEqual( Stem("fjärdedels"), "fjärdedel" );
	deepEqual( Stem("fjärden"), "fjärd" );
	deepEqual( Stem("fjärdingsväg"), "fjärdingsväg" );
	deepEqual( Stem("fjäril"), "fjäril" );
	deepEqual( Stem("fjärilar"), "fjäril" );
	deepEqual( Stem("fjärn"), "fjärn" );
	deepEqual( Stem("fjärnt"), "fjärnt" );
	deepEqual( Stem("fjärran"), "fjärran" );
	deepEqual( Stem("fjäsa"), "fjäs" );
	deepEqual( Stem("fjäsad"), "fjäs" );
	deepEqual( Stem("fjäsade"), "fjäs" );
	deepEqual( Stem("fjäsk"), "fjäsk" );
	deepEqual( Stem("fjäska"), "fjäsk" );
	deepEqual( Stem("fjät"), "fjät" );
	deepEqual( Stem("flabbade"), "flabb" );
	deepEqual( Stem("flacka"), "flack" );
	deepEqual( Stem("flackade"), "flack" );
	deepEqual( Stem("flackande"), "flack" );
	deepEqual( Stem("flacken"), "flack" );
	deepEqual( Stem("flackt"), "flack" );
	deepEqual( Stem("fladd"), "fladd" );
	deepEqual( Stem("fladdra"), "fladdr" );
	deepEqual( Stem("fladdrade"), "fladdr" );
	deepEqual( Stem("fladdrande"), "fladdr" );
	deepEqual( Stem("fladdrar"), "fladdr" );
	deepEqual( Stem("fladdrat"), "fladdr" );
	deepEqual( Stem("flagat"), "flag" );
	deepEqual( Stem("flagg"), "flagg" );
	deepEqual( Stem("flaggar"), "flagg" );
	deepEqual( Stem("flaggor"), "flagg" );
	deepEqual( Stem("flagor"), "flag" );
	deepEqual( Stem("flak"), "flak" );
	deepEqual( Stem("flamma"), "flamm" );
	deepEqual( Stem("flammade"), "flamm" );
	deepEqual( Stem("flamman"), "flamman" );
	deepEqual( Stem("flammande"), "flamm" );
	deepEqual( Stem("flammar"), "flamm" );
	deepEqual( Stem("flammorna"), "flamm" );
	deepEqual( Stem("flamröd"), "flamröd" );
	deepEqual( Stem("flandrisk"), "flandrisk" );
	deepEqual( Stem("flarn"), "flarn" );
	deepEqual( Stem("flaska"), "flask" );
	deepEqual( Stem("flaskan"), "flaskan" );
	deepEqual( Stem("flaskor"), "flask" );
	deepEqual( Stem("flat"), "flat" );
	deepEqual( Stem("flata"), "flat" );
	deepEqual( Stem("flaxade"), "flax" );
	deepEqual( Stem("flaxande"), "flax" );
	deepEqual( Stem("flegmatiska"), "flegmatisk" );
	deepEqual( Stem("fler"), "fler" );
	deepEqual( Stem("flera"), "fler" );
	deepEqual( Stem("flesta"), "flest" );
	deepEqual( Stem("flestas"), "flest" );
	deepEqual( Stem("fli"), "fli" );
	deepEqual( Stem("flicka"), "flick" );
	deepEqual( Stem("flickaktig"), "flickakt" );
	deepEqual( Stem("flickaktigt"), "flickakt" );
	deepEqual( Stem("flickan"), "flickan" );
	deepEqual( Stem("flickans"), "flickan" );
	deepEqual( Stem("flickas"), "flick" );
	deepEqual( Stem("flickbarn"), "flickbarn" );
	deepEqual( Stem("flickben"), "flickb" );
	deepEqual( Stem("flickbröst"), "flickbröst" );
	deepEqual( Stem("flickdrömmerierna"), "flickdrömmeri" );
	deepEqual( Stem("flickförtjusningen"), "flickförtjusning" );
	deepEqual( Stem("flickhufvud"), "flickhufvud" );
	deepEqual( Stem("flickhänder"), "flickhänd" );
	deepEqual( Stem("flickkroppen"), "flickkropp" );
	deepEqual( Stem("flickläroverk"), "flickläroverk" );
	deepEqual( Stem("flicklåro"), "flicklåro" );
	deepEqual( Stem("flicknamn"), "flicknamn" );
	deepEqual( Stem("flickor"), "flick" );
	deepEqual( Stem("flickorna"), "flick" );
	deepEqual( Stem("flickornas"), "flick" );
	deepEqual( Stem("flickors"), "flickor" );
	deepEqual( Stem("flickröster"), "flickröst" );
	deepEqual( Stem("flickskolan"), "flickskolan" );
	deepEqual( Stem("flicksnärtor"), "flicksnärt" );
	deepEqual( Stem("flicktiden"), "flicktid" );
	deepEqual( Stem("flickunge"), "flickung" );
	deepEqual( Stem("flickungen"), "flickung" );
	deepEqual( Stem("flickuppfostran"), "flickuppfostran" );
	deepEqual( Stem("flida"), "flid" );
	deepEqual( Stem("flieka"), "fliek" );
	deepEqual( Stem("flik"), "flik" );
	deepEqual( Stem("flikade"), "flik" );
	deepEqual( Stem("flikar"), "flik" );
	deepEqual( Stem("flin"), "flin" );
	deepEqual( Stem("flingor"), "fling" );
	deepEqual( Stem("flinka"), "flink" );
	deepEqual( Stem("flinke"), "flink" );
	deepEqual( Stem("flinkt"), "flink" );
	deepEqual( Stem("flintor"), "flint" );
	deepEqual( Stem("flintskallig"), "flintskal" );
	deepEqual( Stem("flintskallige"), "flintskal" );
	deepEqual( Stem("flit"), "flit" );
	deepEqual( Stem("flitig"), "flit" );
	deepEqual( Stem("flitiga"), "flit" );
	deepEqual( Stem("flitigare"), "flit" );
	deepEqual( Stem("flitige"), "flit" );
	deepEqual( Stem("flitigt"), "flit" );
	deepEqual( Stem("flock"), "flock" );
	deepEqual( Stem("flockade"), "flock" );
	deepEqual( Stem("flockar"), "flock" );
	deepEqual( Stem("flocken"), "flock" );
	deepEqual( Stem("flod"), "flod" );
	deepEqual( Stem("floden"), "flod" );
	deepEqual( Stem("floder"), "flod" );
	deepEqual( Stem("floders"), "floder" );
	deepEqual( Stem("flor"), "flor" );
	deepEqual( Stem("flora"), "flor" );
	deepEqual( Stem("floras"), "flor" );
	deepEqual( Stem("floreal"), "floreal" );
	deepEqual( Stem("florentinarnas"), "florentin" );
	deepEqual( Stem("florerar"), "florer" );
	deepEqual( Stem("floret"), "floret" );
	deepEqual( Stem("florets"), "floret" );
	deepEqual( Stem("florsdraperier"), "florsdraperi" );
	deepEqual( Stem("florstunn"), "florstun" );
	deepEqual( Stem("flossa"), "floss" );
	deepEqual( Stem("flott"), "flott" );
	deepEqual( Stem("flotta"), "flott" );
	deepEqual( Stem("flottan"), "flottan" );
	deepEqual( Stem("flottas"), "flott" );
	deepEqual( Stem("flottglänsande"), "flottgläns" );
	deepEqual( Stem("flottig"), "flott" );
	deepEqual( Stem("flottigare"), "flott" );
	deepEqual( Stem("fluga"), "flug" );
	deepEqual( Stem("flugfångare"), "flugfång" );
	deepEqual( Stem("flugit"), "flugit" );
	deepEqual( Stem("flugmöte"), "flugmöt" );
	deepEqual( Stem("flugor"), "flug" );
	deepEqual( Stem("flugorna"), "flug" );
	deepEqual( Stem("flugornas"), "flug" );
	deepEqual( Stem("flutit"), "flutit" );
	deepEqual( Stem("flux"), "flux" );
	deepEqual( Stem("fly"), "fly" );
	deepEqual( Stem("flydda"), "flydd" );
	deepEqual( Stem("flydde"), "flydd" );
	deepEqual( Stem("flyende"), "flyend" );
	deepEqual( Stem("flyg"), "flyg" );
	deepEqual( Stem("flyga"), "flyg" );
	deepEqual( Stem("flygande"), "flyg" );
	deepEqual( Stem("flygaren"), "flyg" );
	deepEqual( Stem("flygeln"), "flygeln" );
	deepEqual( Stem("flyger"), "flyg" );
	deepEqual( Stem("flyglar"), "flygl" );
	deepEqual( Stem("flygt"), "flygt" );
	deepEqual( Stem("flykt"), "flykt" );
	deepEqual( Stem("flykta"), "flykt" );
	deepEqual( Stem("flyktande"), "flykt" );
	deepEqual( Stem("flyktar"), "flykt" );
	deepEqual( Stem("flykten"), "flykt" );
	deepEqual( Stem("flykter"), "flykt" );
	deepEqual( Stem("flyktig"), "flykt" );
	deepEqual( Stem("flyktiga"), "flykt" );
	deepEqual( Stem("flyktigare"), "flykt" );
	deepEqual( Stem("flyktighet"), "flykt" );
	deepEqual( Stem("flyktigheten"), "flykt" );
	deepEqual( Stem("flyktigt"), "flykt" );
	deepEqual( Stem("flykting"), "flykting" );
	deepEqual( Stem("flyktlg"), "flyktlg" );
	deepEqual( Stem("flyr"), "flyr" );
	deepEqual( Stem("flyta"), "flyt" );
	deepEqual( Stem("flytande"), "flyt" );
	deepEqual( Stem("flyter"), "flyt" );
	deepEqual( Stem("flytt"), "flytt" );
	deepEqual( Stem("flytta"), "flytt" );
	deepEqual( Stem("flyttade"), "flytt" );
	deepEqual( Stem("flyttar"), "flytt" );
	deepEqual( Stem("flyttat"), "flytt" );
	deepEqual( Stem("flyttbar"), "flyttb" );
	deepEqual( Stem("flyttfoglarne"), "flyttfogl" );
	deepEqual( Stem("flyttning"), "flyttning" );
	deepEqual( Stem("fläck"), "fläck" );
	deepEqual( Stem("fläckar"), "fläck" );
	deepEqual( Stem("fläckarna"), "fläck" );
	deepEqual( Stem("fläcken"), "fläck" );
	deepEqual( Stem("fläckig"), "fläck" );
	deepEqual( Stem("fläckigt"), "fläck" );
	deepEqual( Stem("fläcktiga"), "fläckt" );
	deepEqual( Stem("fläder"), "fläd" );
	deepEqual( Stem("fläkt"), "fläkt" );
	deepEqual( Stem("fläktade"), "fläkt" );
	deepEqual( Stem("fläktande"), "fläkt" );
	deepEqual( Stem("fläktar"), "fläkt" );
	deepEqual( Stem("fläktat"), "fläkt" );
	deepEqual( Stem("fläkte"), "fläkt" );
	deepEqual( Stem("flämtade"), "flämt" );
	deepEqual( Stem("flämtamde"), "flämtamd" );
	deepEqual( Stem("flämtande"), "flämt" );
	deepEqual( Stem("flämtar"), "flämt" );
	deepEqual( Stem("flämtat"), "flämt" );
	deepEqual( Stem("flärd"), "flärd" );
	deepEqual( Stem("flärdfull"), "flärdfull" );
	deepEqual( Stem("flärdfulla"), "flärdfull" );
	deepEqual( Stem("flärdlöshet"), "flärdlös" );
	deepEqual( Stem("fläsk"), "fläsk" );
	deepEqual( Stem("fläskbitens"), "fläskbit" );
	deepEqual( Stem("fläskkotlett"), "fläskkotlet" );
	deepEqual( Stem("fläta"), "flät" );
	deepEqual( Stem("flätade"), "flät" );
	deepEqual( Stem("flätan"), "flätan" );
	deepEqual( Stem("flätar"), "flät" );
	deepEqual( Stem("flätor"), "flät" );
	deepEqual( Stem("flåsade"), "flås" );
	deepEqual( Stem("flåsande"), "flås" );
	deepEqual( Stem("flödade"), "flöd" );
	deepEqual( Stem("flödande"), "flöd" );
	deepEqual( Stem("flödar"), "flöd" );
	deepEqual( Stem("flöden"), "flöd" );
	deepEqual( Stem("flödet"), "flödet" );
	deepEqual( Stem("flög"), "flög" );
	deepEqual( Stem("flögo"), "flögo" );
	deepEqual( Stem("flöjel"), "flöjel" );
	deepEqual( Stem("flöjlande"), "flöjl" );
	deepEqual( Stem("flöjlarna"), "flöjl" );
	deepEqual( Stem("flöjt"), "flöjt" );
	deepEqual( Stem("flöjter"), "flöjt" );
	deepEqual( Stem("flöjtverk"), "flöjtverk" );
	deepEqual( Stem("flöt"), "flöt" );
	deepEqual( Stem("fmlstret"), "fmlstret" );
	deepEqual( Stem("fn"), "fn" );
	deepEqual( Stem("fnassel"), "fnassel" );
	deepEqual( Stem("fnissade"), "fniss" );
	deepEqual( Stem("fnitter"), "fnitt" );
	deepEqual( Stem("fnittrade"), "fnittr" );
	deepEqual( Stem("fnittrande"), "fnittr" );
	deepEqual( Stem("fnurrar"), "fnurr" );
	deepEqual( Stem("fnys"), "fnys" );
	deepEqual( Stem("fnysning"), "fnysning" );
	deepEqual( Stem("fnyste"), "fnyst" );
	deepEqual( Stem("fnös"), "fnös" );
	deepEqual( Stem("fnöske"), "fnösk" );
	deepEqual( Stem("foajen"), "foaj" );
	deepEqual( Stem("focken"), "fock" );
	deepEqual( Stem("fockmasten"), "fockmast" );
	deepEqual( Stem("fockskotet"), "fockskotet" );
	deepEqual( Stem("fodcr"), "fodcr" );
	deepEqual( Stem("foderverket"), "foderverket" );
	deepEqual( Stem("fodral"), "fodral" );
	deepEqual( Stem("fodralet"), "fodralet" );
	deepEqual( Stem("fodringsägaren"), "fodringsäg" );
	deepEqual( Stem("foga"), "fog" );
	deepEqual( Stem("fogade"), "fog" );
	deepEqual( Stem("fogarna"), "fog" );
	deepEqual( Stem("fogat"), "fog" );
	deepEqual( Stem("fogdar"), "fogd" );
	deepEqual( Stem("fogde"), "fogd" );
	deepEqual( Stem("fogden"), "fogd" );
	deepEqual( Stem("fogelkvist"), "fogelkvist" );
	deepEqual( Stem("foglig"), "fog" );
	deepEqual( Stem("fogligare"), "fog" );
	deepEqual( Stem("fogligheten"), "fog" );
	deepEqual( Stem("fogligt"), "fog" );
	deepEqual( Stem("fogningar"), "fogning" );
	deepEqual( Stem("folianter"), "foliant" );
	deepEqual( Stem("folie"), "foli" );
	deepEqual( Stem("folies"), "foli" );
	deepEqual( Stem("folja"), "folj" );
	deepEqual( Stem("folk"), "folk" );
	deepEqual( Stem("folkbok"), "folkbok" );
	deepEqual( Stem("folken"), "folk" );
	deepEqual( Stem("folket"), "folket" );
	deepEqual( Stem("folkets"), "folket" );
	deepEqual( Stem("folkhop"), "folkhop" );
	deepEqual( Stem("folkliv"), "folkliv" );
	deepEqual( Stem("folklivet"), "folklivet" );
	deepEqual( Stem("folkmelodi"), "folkmelodi" );
	deepEqual( Stem("folks"), "folk" );
	deepEqual( Stem("folksamlingar"), "folksamling" );
	deepEqual( Stem("folkskarorna"), "folkskar" );
	deepEqual( Stem("folkskollärare"), "folkskollär" );
	deepEqual( Stem("folksägen"), "folksäg" );
	deepEqual( Stem("folksägner"), "folksägn" );
	deepEqual( Stem("folktom"), "folktom" );
	deepEqual( Stem("folktommast"), "folktomm" );
	deepEqual( Stem("folktro"), "folktro" );
	deepEqual( Stem("folkvett"), "folkvet" );
	deepEqual( Stem("folkvimlet"), "folkvimlet" );
	deepEqual( Stem("foll"), "foll" );
	deepEqual( Stem("follo"), "follo" );
	deepEqual( Stem("fonden"), "fond" );
	deepEqual( Stem("fonder"), "fond" );
	deepEqual( Stem("fondmäklaren"), "fondmäkl" );
	deepEqual( Stem("fonstren"), "fonstr" );
	deepEqual( Stem("fonstret"), "fonstret" );
	deepEqual( Stem("for"), "for" );
	deepEqual( Stem("forbi"), "forbi" );
	deepEqual( Stem("forcerat"), "forcer" );
	deepEqual( Stem("ford"), "ford" );
	deepEqual( Stem("fordna"), "fordn" );
	deepEqual( Stem("fordom"), "fordom" );
	deepEqual( Stem("fordomtima"), "fordomtim" );
	deepEqual( Stem("fordon"), "fordon" );
	deepEqual( Stem("fordra"), "fordr" );
	deepEqual( Stem("fordrade"), "fordr" );
	deepEqual( Stem("fordran"), "fordran" );
	deepEqual( Stem("fordrande"), "fordr" );
	deepEqual( Stem("fordrar"), "fordr" );
	deepEqual( Stem("fordras"), "fordr" );
	deepEqual( Stem("fordrat"), "fordr" );
	deepEqual( Stem("fordringar"), "fordring" );
	deepEqual( Stem("fordringsägare"), "fordringsäg" );
	deepEqual( Stem("fordringsägaren"), "fordringsäg" );
	deepEqual( Stem("foredrog"), "foredrog" );
	deepEqual( Stem("forefoll"), "forefoll" );
	deepEqual( Stem("foregaende"), "foregaend" );
	deepEqual( Stem("foreslog"), "foreslog" );
	deepEqual( Stem("forfärligt"), "forfär" );
	deepEqual( Stem("forklade"), "forkl" );
	deepEqual( Stem("form"), "form" );
	deepEqual( Stem("forma"), "form" );
	deepEqual( Stem("formade"), "form" );
	deepEqual( Stem("formande"), "form" );
	deepEqual( Stem("formas"), "form" );
	deepEqual( Stem("format"), "form" );
	deepEqual( Stem("formationer"), "formation" );
	deepEqual( Stem("formats"), "format" );
	deepEqual( Stem("formellt"), "formellt" );
	deepEqual( Stem("formen"), "form" );
	deepEqual( Stem("formens"), "form" );
	deepEqual( Stem("former"), "form" );
	deepEqual( Stem("formerna"), "form" );
	deepEqual( Stem("formligen"), "form" );
	deepEqual( Stem("formlighet"), "form" );
	deepEqual( Stem("formligt"), "form" );
	deepEqual( Stem("formlösa"), "formlös" );
	deepEqual( Stem("formulera"), "formuler" );
	deepEqual( Stem("formuläret"), "formuläret" );
	deepEqual( Stem("formåga"), "formåg" );
	deepEqual( Stem("forn"), "forn" );
	deepEqual( Stem("forna"), "forn" );
	deepEqual( Stem("forne"), "forn" );
	deepEqual( Stem("forntida"), "forntid" );
	deepEqual( Stem("foro"), "foro" );
	deepEqual( Stem("foror"), "for" );
	deepEqual( Stem("forr"), "forr" );
	deepEqual( Stem("fors"), "for" );
	deepEqual( Stem("forsade"), "fors" );
	deepEqual( Stem("forsande"), "fors" );
	deepEqual( Stem("forsar"), "fors" );
	deepEqual( Stem("forsen"), "fors" );
	deepEqual( Stem("forsiktigt"), "forsikt" );
	deepEqual( Stem("forskande"), "forsk" );
	deepEqual( Stem("forskar"), "forsk" );
	deepEqual( Stem("forskarmödorna"), "forskarmöd" );
	deepEqual( Stem("forsla"), "forsl" );
	deepEqual( Stem("forsmädat"), "forsmäd" );
	deepEqual( Stem("forssar"), "forss" );
	deepEqual( Stem("forssling"), "forssling" );
	deepEqual( Stem("forst"), "forst" );
	deepEqual( Stem("forstorad"), "forstor" );
	deepEqual( Stem("forsökte"), "forsök" );
	deepEqual( Stem("fort"), "fort" );
	deepEqual( Stem("fortare"), "fort" );
	deepEqual( Stem("fortepianot"), "fortepianot" );
	deepEqual( Stem("fortfar"), "fortf" );
	deepEqual( Stem("fortfara"), "fortfar" );
	deepEqual( Stem("fortfarande"), "fortfar" );
	deepEqual( Stem("fortfarit"), "fortfarit" );
	deepEqual( Stem("fortfor"), "fortf" );
	deepEqual( Stem("fortforo"), "fortforo" );
	deepEqual( Stem("fortgick"), "fortgick" );
	deepEqual( Stem("fortgång"), "fortgång" );
	deepEqual( Stem("fortgången"), "fortgång" );
	deepEqual( Stem("fortgått"), "fortgåt" );
	deepEqual( Stem("fortjust"), "fortjust" );
	deepEqual( Stem("fortjänster"), "fortjänst" );
	deepEqual( Stem("fortkomst"), "fortkomst" );
	deepEqual( Stem("fortsatt"), "fortsat" );
	deepEqual( Stem("fortsatta"), "fortsat" );
	deepEqual( Stem("fortsatte"), "fortsat" );
	deepEqual( Stem("fortsattes"), "fortsat" );
	deepEqual( Stem("fortskaffningsmedlet"), "fortskaffningsmedlet" );
	deepEqual( Stem("fortsätt"), "fortsät" );
	deepEqual( Stem("fortsätta"), "fortsät" );
	deepEqual( Stem("fortsättandet"), "fortsät" );
	deepEqual( Stem("fortsätter"), "fortsät" );
	deepEqual( Stem("fortsättning"), "fortsättning" );
	deepEqual( Stem("fortsättningen"), "fortsättning" );
	deepEqual( Stem("fortune"), "fortun" );
	deepEqual( Stem("forum"), "forum" );
	deepEqual( Stem("forut"), "forut" );
	deepEqual( Stem("forvandla"), "forvandl" );
	deepEqual( Stem("forvridna"), "forvridn" );
	deepEqual( Stem("forälskad"), "forälsk" );
	deepEqual( Stem("forändrade"), "forändr" );
	deepEqual( Stem("fosfat"), "fosf" );
	deepEqual( Stem("fosforism"), "fosforism" );
	deepEqual( Stem("foster"), "fost" );
	deepEqual( Stem("fosterbarn"), "fosterbarn" );
	deepEqual( Stem("fosterdotter"), "fosterdot" );
	deepEqual( Stem("fosterdottern"), "fosterdot" );
	deepEqual( Stem("fosterfader"), "fosterfad" );
	deepEqual( Stem("fosterfar"), "fosterf" );
	deepEqual( Stem("fosterland"), "fosterland" );
	deepEqual( Stem("fosterlandet"), "fosterl" );
	deepEqual( Stem("fosterlandets"), "fosterlandet" );
	deepEqual( Stem("fosterlands"), "fosterland" );
	deepEqual( Stem("fosterlandsförräderi"), "fosterlandsförräderi" );
	deepEqual( Stem("fosterlandsvän"), "fosterlandsvän" );
	deepEqual( Stem("fosterländska"), "fosterländsk" );
	deepEqual( Stem("fostermodern"), "fostermod" );
	deepEqual( Stem("fostermor"), "fosterm" );
	deepEqual( Stem("fostermors"), "fostermor" );
	deepEqual( Stem("fostrade"), "fostr" );
	deepEqual( Stem("fostrat"), "fostr" );
	deepEqual( Stem("fostret"), "fostret" );
	deepEqual( Stem("fot"), "fot" );
	deepEqual( Stem("fotboll"), "fotboll" );
	deepEqual( Stem("fotbollen"), "fotboll" );
	deepEqual( Stem("foten"), "fot" );
	deepEqual( Stem("fotgängare"), "fotgäng" );
	deepEqual( Stem("fotnot"), "fotnot" );
	deepEqual( Stem("fotogen"), "fotog" );
	deepEqual( Stem("fotogenlampor"), "fotogenlamp" );
	deepEqual( Stem("fotogenlukten"), "fotogenluk" );
	deepEqual( Stem("fotografi"), "fotografi" );
	deepEqual( Stem("fotografier"), "fotografi" );
	deepEqual( Stem("fotografiet"), "fotografiet" );
	deepEqual( Stem("fotografin"), "fotografin" );
	deepEqual( Stem("fotogratiet"), "fotogratiet" );
	deepEqual( Stem("fotpar"), "fotp" );
	deepEqual( Stem("fots"), "fot" );
	deepEqual( Stem("fotsbredd"), "fotsbred" );
	deepEqual( Stem("fotspar"), "fotsp" );
	deepEqual( Stem("fotspår"), "fotspår" );
	deepEqual( Stem("fotsteg"), "fotsteg" );
	deepEqual( Stem("fotstegem"), "fotstegem" );
	deepEqual( Stem("fotstegen"), "fotsteg" );
	deepEqual( Stem("fotterna"), "fott" );
	deepEqual( Stem("fotvandraren"), "fotvandr" );
	deepEqual( Stem("fou"), "fou" );
	deepEqual( Stem("fra"), "fra" );
	deepEqual( Stem("frack"), "frack" );
	deepEqual( Stem("frackarna"), "frack" );
	deepEqual( Stem("fracken"), "frack" );
	deepEqual( Stem("frackens"), "frack" );
	deepEqual( Stem("frackfason"), "frackfason" );
	deepEqual( Stem("frackskörten"), "frackskört" );
	deepEqual( Stem("fradga"), "fradg" );
	deepEqual( Stem("fradgande"), "fradg" );
	deepEqual( Stem("fraga"), "frag" );
	deepEqual( Stem("fragade"), "frag" );
	deepEqual( Stem("fragan"), "fragan" );
	deepEqual( Stem("fragar"), "frag" );
	deepEqual( Stem("fragment"), "fragment" );
	deepEqual( Stem("frall"), "frall" );
	deepEqual( Stem("fralsta"), "fralst" );
	deepEqual( Stem("fram"), "fram" );
	deepEqual( Stem("framat"), "fram" );
	deepEqual( Stem("framatlutad"), "framatlut" );
	deepEqual( Stem("framblickade"), "framblick" );
	deepEqual( Stem("frambragt"), "frambrag" );
	deepEqual( Stem("frambringa"), "frambring" );
	deepEqual( Stem("frambringar"), "frambring" );
	deepEqual( Stem("frambrytande"), "frambryt" );
	deepEqual( Stem("frambröt"), "frambröt" );
	deepEqual( Stem("framburna"), "framburn" );
	deepEqual( Stem("framdeles"), "framdel" );
	deepEqual( Stem("framdraga"), "framdrag" );
	deepEqual( Stem("framdrog"), "framdrog" );
	deepEqual( Stem("framdrogo"), "framdrogo" );
	deepEqual( Stem("framdykande"), "framdyk" );
	deepEqual( Stem("framemot"), "framemot" );
	deepEqual( Stem("framfarna"), "framf" );
	deepEqual( Stem("framfart"), "framfart" );
	deepEqual( Stem("framfor"), "framf" );
	deepEqual( Stem("framfödandet"), "framföd" );
	deepEqual( Stem("framför"), "framför" );
	deepEqual( Stem("framföra"), "framför" );
	deepEqual( Stem("framförallt"), "framförallt" );
	deepEqual( Stem("framförd"), "framförd" );
	deepEqual( Stem("framförde"), "framförd" );
	deepEqual( Stem("framgick"), "framgick" );
	deepEqual( Stem("framgå"), "framgå" );
	deepEqual( Stem("framgång"), "framgång" );
	deepEqual( Stem("framgången"), "framgång" );
	deepEqual( Stem("framgångsrike"), "framgångsrik" );
	deepEqual( Stem("framhjulen"), "framhjul" );
	deepEqual( Stem("framhäva"), "framhäv" );
	deepEqual( Stem("framila"), "framil" );
	deepEqual( Stem("framkalla"), "framkall" );
	deepEqual( Stem("framkallade"), "framkall" );
	deepEqual( Stem("framkalladt"), "framkallad" );
	deepEqual( Stem("framkallat"), "framkall" );
	deepEqual( Stem("framkasta"), "framkast" );
	deepEqual( Stem("framkastad"), "framkast" );
	deepEqual( Stem("framkastade"), "framkast" );
	deepEqual( Stem("framkastat"), "framkast" );
	deepEqual( Stem("framkom"), "framkom" );
	deepEqual( Stem("framkomma"), "framkomm" );
	deepEqual( Stem("framkröp"), "framkröp" );
	deepEqual( Stem("framlagd"), "framlag" );
	deepEqual( Stem("framlefva"), "framlefv" );
	deepEqual( Stem("framleta"), "framlet" );
	deepEqual( Stem("framleva"), "framlev" );
	deepEqual( Stem("framlidne"), "framlidn" );
	deepEqual( Stem("framling"), "framling" );
	deepEqual( Stem("framlockat"), "framlock" );
	deepEqual( Stem("framlägga"), "framlägg" );
	deepEqual( Stem("framman"), "framman" );
	deepEqual( Stem("frammc"), "frammc" );
	deepEqual( Stem("framme"), "framm" );
	deepEqual( Stem("framom"), "framom" );
	deepEqual( Stem("framplocka"), "framplock" );
	deepEqual( Stem("framplockade"), "framplock" );
	deepEqual( Stem("frampressade"), "frampress" );
	deepEqual( Stem("frampustade"), "frampust" );
	deepEqual( Stem("frampå"), "frampå" );
	deepEqual( Stem("framropades"), "framrop" );
	deepEqual( Stem("framrullade"), "framrull" );
	deepEqual( Stem("framräckt"), "framräck" );
	deepEqual( Stem("framsatt"), "framsat" );
	deepEqual( Stem("framsatta"), "framsat" );
	deepEqual( Stem("framsattes"), "framsat" );
	deepEqual( Stem("framsida"), "framsid" );
	deepEqual( Stem("framskimrat"), "framskimr" );
	deepEqual( Stem("framskjuta"), "framskjut" );
	deepEqual( Stem("framskjuten"), "framskjut" );
	deepEqual( Stem("framskred"), "framskred" );
	deepEqual( Stem("framskriden"), "framskrid" );
	deepEqual( Stem("framskymta"), "framskymt" );
	deepEqual( Stem("framskymtade"), "framskymt" );
	deepEqual( Stem("framsläpade"), "framsläp" );
	deepEqual( Stem("framsmyga"), "framsmyg" );
	deepEqual( Stem("framsmögo"), "framsmögo" );
	deepEqual( Stem("framstamma"), "framstamm" );
	deepEqual( Stem("framstammade"), "framstamm" );
	deepEqual( Stem("framsteg"), "framsteg" );
	deepEqual( Stem("framstickande"), "framstick" );
	deepEqual( Stem("framsticker"), "framstick" );
	deepEqual( Stem("framstod"), "framstod" );
	deepEqual( Stem("framsträckt"), "framsträck" );
	deepEqual( Stem("framstupa"), "framstup" );
	deepEqual( Stem("framstälda"), "framstäld" );
	deepEqual( Stem("framstälde"), "framstäld" );
	deepEqual( Stem("framställa"), "framställ" );
	deepEqual( Stem("framställda"), "framställd" );
	deepEqual( Stem("framställning"), "framställning" );
	deepEqual( Stem("framställningar"), "framställning" );
	deepEqual( Stem("framställningen"), "framställning" );
	deepEqual( Stem("framställt"), "framställt" );
	deepEqual( Stem("framstå"), "framstå" );
	deepEqual( Stem("framstående"), "framståend" );
	deepEqual( Stem("framstönat"), "framstön" );
	deepEqual( Stem("framsuckade"), "framsuck" );
	deepEqual( Stem("framt"), "framt" );
	deepEqual( Stem("framtaga"), "framtag" );
	deepEqual( Stem("framtagit"), "framtagit" );
	deepEqual( Stem("framtassarna"), "framtass" );
	deepEqual( Stem("framtid"), "framtid" );
	deepEqual( Stem("framtida"), "framtid" );
	deepEqual( Stem("framtiden"), "framtid" );
	deepEqual( Stem("framtids"), "framtid" );
	deepEqual( Stem("framtidsman"), "framtidsman" );
	deepEqual( Stem("framtidsmän"), "framtidsmän" );
	deepEqual( Stem("framtill"), "framtill" );
	deepEqual( Stem("framtitta"), "framtit" );
	deepEqual( Stem("framtittar"), "framtit" );
	deepEqual( Stem("framtog"), "framtog" );
	deepEqual( Stem("framtogs"), "framtog" );
	deepEqual( Stem("framträda"), "framträd" );
	deepEqual( Stem("framträdande"), "framträd" );
	deepEqual( Stem("framträdde"), "framträd" );
	deepEqual( Stem("framtränga"), "framträng" );
	deepEqual( Stem("framträngde"), "framträng" );
	deepEqual( Stem("framträtt"), "framträt" );
	deepEqual( Stem("framtvinga"), "framtving" );
	deepEqual( Stem("framviskade"), "framvisk" );
	deepEqual( Stem("framviskat"), "framvisk" );
	deepEqual( Stem("framvästes"), "framväst" );
	deepEqual( Stem("framät"), "framät" );
	deepEqual( Stem("framåt"), "framåt" );
	deepEqual( Stem("framåtandan"), "framåtandan" );
	deepEqual( Stem("framåtböjd"), "framåtböjd" );
	deepEqual( Stem("framåtböjt"), "framåtböjt" );
	deepEqual( Stem("framåtlutad"), "framåtlut" );
	deepEqual( Stem("fran"), "fran" );
	deepEqual( Stem("frankens"), "frank" );
	deepEqual( Stem("frankiska"), "frankisk" );
	deepEqual( Stem("frans"), "fran" );
	deepEqual( Stem("fransar"), "frans" );
	deepEqual( Stem("fransk"), "fransk" );
	deepEqual( Stem("franska"), "fransk" );
	deepEqual( Stem("franskt"), "fransk" );
	deepEqual( Stem("fransmännen"), "fransmän" );
	deepEqual( Stem("fransos"), "franso" );
	deepEqual( Stem("fransosen"), "fransos" );
	deepEqual( Stem("fransyska"), "fransysk" );
	deepEqual( Stem("frants"), "frant" );
	deepEqual( Stem("franzen"), "franz" );
	deepEqual( Stem("frapperad"), "frapper" );
	deepEqual( Stem("frapperade"), "frapper" );
	deepEqual( Stem("frarmfört"), "frarmfört" );
	deepEqual( Stem("frasade"), "fras" );
	deepEqual( Stem("frasande"), "fras" );
	deepEqual( Stem("frasen"), "fras" );
	deepEqual( Stem("fraser"), "fras" );
	deepEqual( Stem("fred"), "fred" );
	deepEqual( Stem("fredad"), "fred" );
	deepEqual( Stem("fredag"), "fredag" );
	deepEqual( Stem("fredagen"), "fredag" );
	deepEqual( Stem("fredags"), "fredag" );
	deepEqual( Stem("fredagsförmiddagen"), "fredagsförmiddag" );
	deepEqual( Stem("freden"), "fred" );
	deepEqual( Stem("fredlig"), "fred" );
	deepEqual( Stem("fredliga"), "fred" );
	deepEqual( Stem("fredligare"), "fred" );
	deepEqual( Stem("fredligt"), "fred" );
	deepEqual( Stem("fredlösa"), "fredlös" );
	deepEqual( Stem("fredmans"), "fredman" );
	deepEqual( Stem("fredrik"), "fredrik" );
	deepEqual( Stem("fredrika"), "fredrik" );
	deepEqual( Stem("fredrikas"), "fredrik" );
	deepEqual( Stem("fredrikshalds"), "fredrikshald" );
	deepEqual( Stem("freds"), "fred" );
	deepEqual( Stem("fredsgatan"), "fredsgatan" );
	deepEqual( Stem("fredstraktat"), "fredstrak" );
	deepEqual( Stem("fresta"), "frest" );
	deepEqual( Stem("frestad"), "frest" );
	deepEqual( Stem("frestade"), "frest" );
	deepEqual( Stem("frestades"), "frest" );
	deepEqual( Stem("frestande"), "frest" );
	deepEqual( Stem("frestaren"), "frest" );
	deepEqual( Stem("frestats"), "frestat" );
	deepEqual( Stem("frestelse"), "frest" );
	deepEqual( Stem("frestelsen"), "frest" );
	deepEqual( Stem("frestelsens"), "frest" );
	deepEqual( Stem("frestelser"), "frest" );
	deepEqual( Stem("fri"), "fri" );
	deepEqual( Stem("fria"), "fria" );
	deepEqual( Stem("friad"), "friad" );
	deepEqual( Stem("friade"), "friad" );
	deepEqual( Stem("friar"), "friar" );
	deepEqual( Stem("friardräkten"), "friardräk" );
	deepEqual( Stem("friare"), "friar" );
	deepEqual( Stem("friarefärd"), "friarefärd" );
	deepEqual( Stem("friaren"), "friar" );
	deepEqual( Stem("friarens"), "friar" );
	deepEqual( Stem("friareresa"), "friareres" );
	deepEqual( Stem("friareresan"), "friareresan" );
	deepEqual( Stem("friares"), "friar" );
	deepEqual( Stem("friareärenden"), "friareärend" );
	deepEqual( Stem("friareäventyr"), "friareäventyr" );
	deepEqual( Stem("friat"), "friat" );
	deepEqual( Stem("frid"), "frid" );
	deepEqual( Stem("fridag"), "fridag" );
	deepEqual( Stem("friden"), "frid" );
	deepEqual( Stem("fridens"), "frid" );
	deepEqual( Stem("fridfu"), "fridfu" );
	deepEqual( Stem("fridfulla"), "fridfull" );
	deepEqual( Stem("fridfullt"), "fridfull" );
	deepEqual( Stem("fridlyst"), "fridlyst" );
	deepEqual( Stem("fridlysta"), "fridlyst" );
	deepEqual( Stem("fridlös"), "fridlös" );
	deepEqual( Stem("fridolin"), "fridolin" );
	deepEqual( Stem("fridtjuv"), "fridtjuv" );
	deepEqual( Stem("frieri"), "frieri" );
	deepEqual( Stem("frieriet"), "frieriet" );
	deepEqual( Stem("frieriets"), "frieriet" );
	deepEqual( Stem("frieriterminen"), "frieritermin" );
	deepEqual( Stem("frigjord"), "frigjord" );
	deepEqual( Stem("frigör"), "frigör" );
	deepEqual( Stem("frigöra"), "frigör" );
	deepEqual( Stem("friherrinna"), "friherrin" );
	deepEqual( Stem("friherrinnan"), "friherrinnan" );
	deepEqual( Stem("friherrinnans"), "friherrinnan" );
	deepEqual( Stem("friherrinnor"), "friherrin" );
	deepEqual( Stem("friherrlig"), "friherr" );
	deepEqual( Stem("frihet"), "frihet" );
	deepEqual( Stem("friheten"), "frihet" );
	deepEqual( Stem("frikostig"), "frikost" );
	deepEqual( Stem("frikostighet"), "frikost" );
	deepEqual( Stem("frikostigt"), "frikost" );
	deepEqual( Stem("frikännande"), "frikän" );
	deepEqual( Stem("frileux"), "frileux" );
	deepEqual( Stem("frillornas"), "frill" );
	deepEqual( Stem("frimodig"), "frimod" );
	deepEqual( Stem("frimodighet"), "frimod" );
	deepEqual( Stem("frimodigt"), "frimod" );
	deepEqual( Stem("frimärkena"), "frimärken" );
	deepEqual( Stem("fripredikantens"), "fripredikant" );
	deepEqual( Stem("fris"), "fris" );
	deepEqual( Stem("frisinnad"), "frisin" );
	deepEqual( Stem("frisinnade"), "frisin" );
	deepEqual( Stem("frisk"), "frisk" );
	deepEqual( Stem("friska"), "frisk" );
	deepEqual( Stem("friskare"), "frisk" );
	deepEqual( Stem("friskhet"), "frisk" );
	deepEqual( Stem("friskt"), "frisk" );
	deepEqual( Stem("frispråkande"), "frispråk" );
	deepEqual( Stem("frisrocken"), "frisrock" );
	deepEqual( Stem("fristad"), "frist" );
	deepEqual( Stem("fristunder"), "fristund" );
	deepEqual( Stem("fritid"), "fritid" );
	deepEqual( Stem("fritimmen"), "fritimm" );
	deepEqual( Stem("fritt"), "fritt" );
	deepEqual( Stem("frivoliteter"), "frivolitet" );
	deepEqual( Stem("frivolt"), "frivolt" );
	deepEqual( Stem("frkn"), "frkn" );
	deepEqual( Stem("fro"), "fro" );
	deepEqual( Stem("frodades"), "frod" );
	deepEqual( Stem("frodas"), "frod" );
	deepEqual( Stem("frodig"), "frod" );
	deepEqual( Stem("frojder"), "frojd" );
	deepEqual( Stem("frokenhud"), "frokenhud" );
	deepEqual( Stem("frokn"), "frokn" );
	deepEqual( Stem("froknarna"), "frokn" );
	deepEqual( Stem("froknrrna"), "froknrrn" );
	deepEqual( Stem("from"), "from" );
	deepEqual( Stem("fromhet"), "from" );
	deepEqual( Stem("fromma"), "fromm" );
	deepEqual( Stem("fromme"), "fromm" );
	deepEqual( Stem("fromsinnlig"), "fromsinn" );
	deepEqual( Stem("fromt"), "fromt" );
	deepEqual( Stem("frontespisen"), "frontespis" );
	deepEqual( Stem("fross"), "fross" );
	deepEqual( Stem("frossa"), "fross" );
	deepEqual( Stem("frossade"), "fross" );
	deepEqual( Stem("frossbrytningar"), "frossbrytning" );
	deepEqual( Stem("frost"), "frost" );
	deepEqual( Stem("frosten"), "frost" );
	deepEqual( Stem("frostiga"), "frost" );
	deepEqual( Stem("frostnatt"), "frostnat" );
	deepEqual( Stem("frot"), "frot" );
	deepEqual( Stem("frrb"), "frrb" );
	deepEqual( Stem("frsknarr"), "frsknarr" );
	deepEqual( Stem("fru"), "fru" );
	deepEqual( Stem("fruar"), "fruar" );
	deepEqual( Stem("fruarna"), "fruarn" );
	deepEqual( Stem("fruarnas"), "fruarn" );
	deepEqual( Stem("frukost"), "frukost" );
	deepEqual( Stem("frukostbordet"), "frukostbordet" );
	deepEqual( Stem("frukosten"), "frukost" );
	deepEqual( Stem("frukostera"), "frukoster" );
	deepEqual( Stem("frukostlovet"), "frukostlovet" );
	deepEqual( Stem("frukostrast"), "frukostr" );
	deepEqual( Stem("frukt"), "frukt" );
	deepEqual( Stem("frukta"), "frukt" );
	deepEqual( Stem("fruktad"), "frukt" );
	deepEqual( Stem("fruktade"), "frukt" );
	deepEqual( Stem("fruktan"), "fruktan" );
	deepEqual( Stem("fruktande"), "frukt" );
	deepEqual( Stem("fruktans"), "fruktan" );
	deepEqual( Stem("fruktansvärd"), "fruktansvärd" );
	deepEqual( Stem("fruktansvärda"), "fruktansvärd" );
	deepEqual( Stem("fruktansvärdt"), "fruktansvärd" );
	deepEqual( Stem("fruktansvärt"), "fruktansvärt" );
	deepEqual( Stem("fruktar"), "frukt" );
	deepEqual( Stem("fruktat"), "frukt" );
	deepEqual( Stem("frukten"), "frukt" );
	deepEqual( Stem("frukter"), "frukt" );
	deepEqual( Stem("frukterna"), "frukt" );
	deepEqual( Stem("frukters"), "frukter" );
	deepEqual( Stem("fruktgirlanger"), "fruktgirlang" );
	deepEqual( Stem("fruktkorg"), "fruktkorg" );
	deepEqual( Stem("fruktlösa"), "fruktlös" );
	deepEqual( Stem("fruktlösare"), "fruktlös" );
	deepEqual( Stem("fruktlösheten"), "fruktlös" );
	deepEqual( Stem("fruktlöst"), "fruktlös" );
	deepEqual( Stem("frun"), "frun" );
	deepEqual( Stem("fruns"), "frun" );
	deepEqual( Stem("fruntimmer"), "fruntimm" );
	deepEqual( Stem("fruntimmershand"), "fruntimmershand" );
	deepEqual( Stem("fruntimmershattarna"), "fruntimmershat" );
	deepEqual( Stem("fruntimmershistorier"), "fruntimmershistori" );
	deepEqual( Stem("fruntimmerskappa"), "fruntimmerskapp" );
	deepEqual( Stem("fruntimmerskjortel"), "fruntimmerskjortel" );
	deepEqual( Stem("fruntimmersröst"), "fruntimmersröst" );
	deepEqual( Stem("fruntimren"), "fruntimr" );
	deepEqual( Stem("fruntimrens"), "fruntimr" );
	deepEqual( Stem("fruntimret"), "fruntimret" );
	deepEqual( Stem("frus"), "frus" );
	deepEqual( Stem("frusen"), "frus" );
	deepEqual( Stem("fruset"), "fruset" );
	deepEqual( Stem("frusit"), "frusit" );
	deepEqual( Stem("frusna"), "frusn" );
	deepEqual( Stem("frustade"), "frust" );
	deepEqual( Stem("frustande"), "frust" );
	deepEqual( Stem("frustar"), "frust" );
	deepEqual( Stem("frustulammen"), "frustulamm" );
	deepEqual( Stem("frynt"), "frynt" );
	deepEqual( Stem("fryntlig"), "frynt" );
	deepEqual( Stem("fryntlighet"), "frynt" );
	deepEqual( Stem("fryntligt"), "frynt" );
	deepEqual( Stem("fryntligtvädran"), "fryntligtvädran" );
	deepEqual( Stem("frysa"), "frys" );
	deepEqual( Stem("frysande"), "frys" );
	deepEqual( Stem("fryser"), "frys" );
	deepEqual( Stem("frysning"), "frysning" );
	deepEqual( Stem("fräcka"), "fräck" );
	deepEqual( Stem("fräckare"), "fräck" );
	deepEqual( Stem("fräcke"), "fräck" );
	deepEqual( Stem("fräckhet"), "fräck" );
	deepEqual( Stem("fräckheten"), "fräck" );
	deepEqual( Stem("fräckt"), "fräck" );
	deepEqual( Stem("fräknig"), "fräkn" );
	deepEqual( Stem("fräls"), "fräl" );
	deepEqual( Stem("frälsa"), "fräls" );
	deepEqual( Stem("frälsare"), "fräls" );
	deepEqual( Stem("frälsares"), "frälsar" );
	deepEqual( Stem("frälsets"), "frälset" );
	deepEqual( Stem("frälsning"), "frälsning" );
	deepEqual( Stem("frälsningsarmen"), "frälsningsarm" );
	deepEqual( Stem("frälsningskrokan"), "frälsningskrokan" );
	deepEqual( Stem("frälsningsmöte"), "frälsningsmöt" );
	deepEqual( Stem("frälsningssoldat"), "frälsningssold" );
	deepEqual( Stem("frälsningssoldater"), "frälsningssoldat" );
	deepEqual( Stem("frälsningssoldaterna"), "frälsningssoldat" );
	deepEqual( Stem("frälsningssoldaternas"), "frälsningssoldat" );
	deepEqual( Stem("frälst"), "frälst" );
	deepEqual( Stem("frälsta"), "frälst" );
	deepEqual( Stem("främ"), "främ" );
	deepEqual( Stem("främja"), "främj" );
	deepEqual( Stem("främjandet"), "främj" );
	deepEqual( Stem("främling"), "främling" );
	deepEqual( Stem("främlingar"), "främling" );
	deepEqual( Stem("främlingen"), "främling" );
	deepEqual( Stem("främlings"), "främling" );
	deepEqual( Stem("främmand"), "främmand" );
	deepEqual( Stem("främmandc"), "främmandc" );
	deepEqual( Stem("främmande"), "främm" );
	deepEqual( Stem("främst"), "främst" );
	deepEqual( Stem("främsta"), "främst" );
	deepEqual( Stem("frän"), "frän" );
	deepEqual( Stem("fräna"), "frän" );
	deepEqual( Stem("frände"), "fränd" );
	deepEqual( Stem("fränder"), "fränd" );
	deepEqual( Stem("fränders"), "fränder" );
	deepEqual( Stem("fränt"), "fränt" );
	deepEqual( Stem("fräsa"), "fräs" );
	deepEqual( Stem("fräsande"), "fräs" );
	deepEqual( Stem("fräste"), "fräst" );
	deepEqual( Stem("fräta"), "frät" );
	deepEqual( Stem("frätande"), "frät" );
	deepEqual( Stem("fräter"), "frät" );
	deepEqual( Stem("frätte"), "frätt" );
	deepEqual( Stem("fråga"), "fråg" );
	deepEqual( Stem("frågad"), "fråg" );
	deepEqual( Stem("frågade"), "fråg" );
	deepEqual( Stem("frågan"), "frågan" );
	deepEqual( Stem("frågande"), "fråg" );
	deepEqual( Stem("frågans"), "frågan" );
	deepEqual( Stem("frågar"), "fråg" );
	deepEqual( Stem("frågas"), "fråg" );
	deepEqual( Stem("frågat"), "fråg" );
	deepEqual( Stem("frågetecken"), "frågeteck" );
	deepEqual( Stem("frågor"), "fråg" );
	deepEqual( Stem("frågtecken"), "frågteck" );
	deepEqual( Stem("från"), "från" );
	deepEqual( Stem("fråndragen"), "fråndrag" );
	deepEqual( Stem("frångå"), "frångå" );
	deepEqual( Stem("frångår"), "frångår" );
	deepEqual( Stem("frånskilda"), "frånskild" );
	deepEqual( Stem("frånskilt"), "frånskilt" );
	deepEqual( Stem("frånskjutit"), "frånskjutit" );
	deepEqual( Stem("frånsköts"), "frånsköt" );
	deepEqual( Stem("frånstötande"), "frånstöt" );
	deepEqual( Stem("frånsäger"), "frånsäg" );
	deepEqual( Stem("fråntaga"), "fråntag" );
	deepEqual( Stem("fråntagas"), "fråntag" );
	deepEqual( Stem("fråntager"), "fråntag" );
	deepEqual( Stem("frånträda"), "frånträd" );
	deepEqual( Stem("frånvarande"), "frånvar" );
	deepEqual( Stem("frånvaro"), "frånvaro" );
	deepEqual( Stem("frånvaron"), "frånvaron" );
	deepEqual( Stem("frö"), "frö" );
	deepEqual( Stem("fröding"), "fröding" );
	deepEqual( Stem("fröet"), "fröet" );
	deepEqual( Stem("fröja"), "fröj" );
	deepEqual( Stem("fröjd"), "fröjd" );
	deepEqual( Stem("fröjda"), "fröjd" );
	deepEqual( Stem("fröjdade"), "fröjd" );
	deepEqual( Stem("fröjdades"), "fröjd" );
	deepEqual( Stem("fröjdas"), "fröjd" );
	deepEqual( Stem("fröjde"), "fröjd" );
	deepEqual( Stem("fröjdefulla"), "fröjdefull" );
	deepEqual( Stem("fröjdeljud"), "fröjdeljud" );
	deepEqual( Stem("fröjden"), "fröjd" );
	deepEqual( Stem("fröjder"), "fröjd" );
	deepEqual( Stem("fröjdesalen"), "fröjdesal" );
	deepEqual( Stem("fröjdeämnen"), "fröjdeämn" );
	deepEqual( Stem("fröjdfull"), "fröjdfull" );
	deepEqual( Stem("fröjds"), "fröjd" );
	deepEqual( Stem("fröken"), "frök" );
	deepEqual( Stem("frökens"), "frök" );
	deepEqual( Stem("frökn"), "frökn" );
	deepEqual( Stem("fröknar"), "frökn" );
	deepEqual( Stem("fröknarn"), "fröknarn" );
	deepEqual( Stem("fröknarna"), "frökn" );
	deepEqual( Stem("fröknarnas"), "frökn" );
	deepEqual( Stem("fröknarnn"), "fröknarn" );
	deepEqual( Stem("fröknarno"), "fröknarno" );
	deepEqual( Stem("fröknartl"), "fröknartl" );
	deepEqual( Stem("frömjölet"), "frömjölet" );
	deepEqual( Stem("frön"), "frön" );
	deepEqual( Stem("fröna"), "frön" );
	deepEqual( Stem("frös"), "frös" );
	deepEqual( Stem("fröso"), "fröso" );
	deepEqual( Stem("fsrstås"), "fsrstås" );
	deepEqual( Stem("fter"), "fter" );
	deepEqual( Stem("fugaartade"), "fugaart" );
	deepEqual( Stem("fukt"), "fukt" );
	deepEqual( Stem("fukta"), "fukt" );
	deepEqual( Stem("fuktade"), "fukt" );
	deepEqual( Stem("fuktades"), "fukt" );
	deepEqual( Stem("fuktas"), "fukt" );
	deepEqual( Stem("fuktfläckar"), "fuktfläck" );
	deepEqual( Stem("fuktig"), "fukt" );
	deepEqual( Stem("fuktiga"), "fukt" );
	deepEqual( Stem("fuktigt"), "fukt" );
	deepEqual( Stem("ful"), "ful" );
	deepEqual( Stem("fula"), "ful" );
	deepEqual( Stem("fulare"), "ful" );
	deepEqual( Stem("fulaste"), "ful" );
	deepEqual( Stem("fulhet"), "ful" );
	deepEqual( Stem("full"), "full" );
	deepEqual( Stem("fulla"), "full" );
	deepEqual( Stem("fullare"), "full" );
	deepEqual( Stem("fullastad"), "fullast" );
	deepEqual( Stem("fullaste"), "full" );
	deepEqual( Stem("fullblod"), "fullblod" );
	deepEqual( Stem("fullborda"), "fullbord" );
	deepEqual( Stem("fullbordad"), "fullbord" );
	deepEqual( Stem("fullbordade"), "fullbord" );
	deepEqual( Stem("fullbordan"), "fullbordan" );
	deepEqual( Stem("fullbordat"), "fullbord" );
	deepEqual( Stem("fullfölja"), "fullfölj" );
	deepEqual( Stem("fullgjort"), "fullgjort" );
	deepEqual( Stem("fullgör"), "fullgör" );
	deepEqual( Stem("fullklottrade"), "fullklottr" );
	deepEqual( Stem("fullkomlig"), "fullkom" );
	deepEqual( Stem("fullkomliga"), "fullkom" );
	deepEqual( Stem("fullkomligaste"), "fullkom" );
	deepEqual( Stem("fullkomligen"), "fullkom" );
	deepEqual( Stem("fullkomligheten"), "fullkom" );
	deepEqual( Stem("fullkomligt"), "fullkom" );
	deepEqual( Stem("fullkomnade"), "fullkomn" );
	deepEqual( Stem("fullmånens"), "fullmån" );
	deepEqual( Stem("fullsatt"), "fullsat" );
	deepEqual( Stem("fullsatta"), "fullsat" );
	deepEqual( Stem("fullskrivet"), "fullskrivet" );
	deepEqual( Stem("fullständig"), "fullständ" );
	deepEqual( Stem("fullständigt"), "fullständ" );
	deepEqual( Stem("fullt"), "fullt" );
	deepEqual( Stem("fullvuxen"), "fullvux" );
	deepEqual( Stem("fulländad"), "fulländ" );
	deepEqual( Stem("fulländade"), "fulländ" );
	deepEqual( Stem("fult"), "fult" );
	deepEqual( Stem("fulton"), "fulton" );
	deepEqual( Stem("fumlade"), "fuml" );
	deepEqual( Stem("fumlig"), "fum" );
	deepEqual( Stem("fumliga"), "fum" );
	deepEqual( Stem("fun"), "fun" );
	deepEqual( Stem("fund"), "fund" );
	deepEqual( Stem("funde"), "fund" );
	deepEqual( Stem("fundera"), "funder" );
	deepEqual( Stem("funderadc"), "funderadc" );
	deepEqual( Stem("funderade"), "funder" );
	deepEqual( Stem("funderande"), "funder" );
	deepEqual( Stem("funderar"), "funder" );
	deepEqual( Stem("funderat"), "funder" );
	deepEqual( Stem("funderingar"), "fundering" );
	deepEqual( Stem("funderingarna"), "fundering" );
	deepEqual( Stem("funderiugar"), "funderiug" );
	deepEqual( Stem("fundersamt"), "fundersamt" );
	deepEqual( Stem("fungerande"), "funger" );
	deepEqual( Stem("funktioner"), "funktion" );
	deepEqual( Stem("funna"), "funn" );
	deepEqual( Stem("funnen"), "funn" );
	deepEqual( Stem("funnes"), "funn" );
	deepEqual( Stem("funnit"), "funnit" );
	deepEqual( Stem("funnits"), "funnit" );
	deepEqual( Stem("funno"), "funno" );
	deepEqual( Stem("funnos"), "funno" );
	deepEqual( Stem("funster"), "funst" );
	deepEqual( Stem("furan"), "furan" );
	deepEqual( Stem("furie"), "furi" );
	deepEqual( Stem("furielika"), "furielik" );
	deepEqual( Stem("furore"), "furor" );
	deepEqual( Stem("furorna"), "fur" );
	deepEqual( Stem("furstar"), "furst" );
	deepEqual( Stem("furste"), "furst" );
	deepEqual( Stem("furstes"), "furst" );
	deepEqual( Stem("furstliga"), "furst" );
	deepEqual( Stem("furstligt"), "furst" );
	deepEqual( Stem("furu"), "furu" );
	deepEqual( Stem("furupinnar"), "furupin" );
	deepEqual( Stem("fusk"), "fusk" );
	deepEqual( Stem("fuska"), "fusk" );
	deepEqual( Stem("fuskade"), "fusk" );
	deepEqual( Stem("fuskar"), "fusk" );
	deepEqual( Stem("fusket"), "fusket" );
	deepEqual( Stem("futtig"), "futt" );
	deepEqual( Stem("futtiga"), "futt" );
	deepEqual( Stem("futtigt"), "futt" );
	deepEqual( Stem("fy"), "fy" );
	deepEqual( Stem("fyld"), "fyld" );
	deepEqual( Stem("fylda"), "fyld" );
	deepEqual( Stem("fylde"), "fyld" );
	deepEqual( Stem("fylgia"), "fylgi" );
	deepEqual( Stem("fylla"), "fyll" );
	deepEqual( Stem("fyllandet"), "fyll" );
	deepEqual( Stem("fyllas"), "fyll" );
	deepEqual( Stem("fylld"), "fylld" );
	deepEqual( Stem("fyllda"), "fylld" );
	deepEqual( Stem("fyllde"), "fylld" );
	deepEqual( Stem("fylldes"), "fylld" );
	deepEqual( Stem("fyller"), "fyll" );
	deepEqual( Stem("fylleriet"), "fylleriet" );
	deepEqual( Stem("fylles"), "fyll" );
	deepEqual( Stem("fyllig"), "fyl" );
	deepEqual( Stem("fylliga"), "fyl" );
	deepEqual( Stem("fylligare"), "fyl" );
	deepEqual( Stem("fyllighet"), "fyl" );
	deepEqual( Stem("fylligt"), "fyl" );
	deepEqual( Stem("fyllt"), "fyllt" );
	deepEqual( Stem("fylt"), "fylt" );
	deepEqual( Stem("fynd"), "fynd" );
	deepEqual( Stem("fyndet"), "fyndet" );
	deepEqual( Stem("fyndig"), "fynd" );
	deepEqual( Stem("fyr"), "fyr" );
	deepEqual( Stem("fyra"), "fyr" );
	deepEqual( Stem("fyratiden"), "fyratid" );
	deepEqual( Stem("fyratusen"), "fyratus" );
	deepEqual( Stem("fyrfotingar"), "fyrfoting" );
	deepEqual( Stem("fyrkanter"), "fyrkant" );
	deepEqual( Stem("fyrkantig"), "fyrkant" );
	deepEqual( Stem("fyrkantigt"), "fyrkant" );
	deepEqual( Stem("fyrkar"), "fyrk" );
	deepEqual( Stem("fyrsprång"), "fyrsprång" );
	deepEqual( Stem("fyrstolpig"), "fyrstolp" );
	deepEqual( Stem("fyrtio"), "fyrtio" );
	deepEqual( Stem("fyrtiofem"), "fyrtiofem" );
	deepEqual( Stem("fyrverk"), "fyrverk" );
	deepEqual( Stem("fyrväldigt"), "fyrväld" );
	deepEqual( Stem("fysik"), "fysik" );
	deepEqual( Stem("fysionomi"), "fysionomi" );
	deepEqual( Stem("fysisk"), "fysisk" );
	deepEqual( Stem("fysiska"), "fysisk" );
	deepEqual( Stem("fä"), "fä" );
	deepEqual( Stem("fäder"), "fäd" );
	deepEqual( Stem("fädernesland"), "fädernesland" );
	deepEqual( Stem("fäderneslandet"), "fädernesl" );
	deepEqual( Stem("fäderneslandets"), "fäderneslandet" );
	deepEqual( Stem("fädernestammen"), "fädernestamm" );
	deepEqual( Stem("fädrens"), "fädr" );
	deepEqual( Stem("fägna"), "fägn" );
	deepEqual( Stem("fägnade"), "fägn" );
	deepEqual( Stem("fägnar"), "fägn" );
	deepEqual( Stem("fägring"), "fägring" );
	deepEqual( Stem("fähund"), "fähund" );
	deepEqual( Stem("fäktade"), "fäkt" );
	deepEqual( Stem("fälda"), "fäld" );
	deepEqual( Stem("fälde"), "fäld" );
	deepEqual( Stem("fälla"), "fäll" );
	deepEqual( Stem("fällan"), "fällan" );
	deepEqual( Stem("fällda"), "fälld" );
	deepEqual( Stem("fällde"), "fälld" );
	deepEqual( Stem("fäller"), "fäll" );
	deepEqual( Stem("fällklaff"), "fällklaff" );
	deepEqual( Stem("fällknif"), "fällknif" );
	deepEqual( Stem("fällsäng"), "fällsäng" );
	deepEqual( Stem("fält"), "fält" );
	deepEqual( Stem("fälten"), "fält" );
	deepEqual( Stem("fältens"), "fält" );
	deepEqual( Stem("fälttåg"), "fälttåg" );
	deepEqual( Stem("fäng"), "fäng" );
	deepEqual( Stem("fängelse"), "fäng" );
	deepEqual( Stem("fängelserna"), "fäng" );
	deepEqual( Stem("fängnar"), "fängn" );
	deepEqual( Stem("fängsla"), "fängsl" );
	deepEqual( Stem("fängslad"), "fängsl" );
	deepEqual( Stem("fängslade"), "fängsl" );
	deepEqual( Stem("fängslades"), "fängsl" );
	deepEqual( Stem("fängslande"), "fängsl" );
	deepEqual( Stem("fängslat"), "fängsl" );
	deepEqual( Stem("fängslet"), "fängslet" );
	deepEqual( Stem("fär"), "fär" );
	deepEqual( Stem("färd"), "färd" );
	deepEqual( Stem("färdades"), "färd" );
	deepEqual( Stem("färdas"), "färd" );
	deepEqual( Stem("färde"), "färd" );
	deepEqual( Stem("färden"), "färd" );
	deepEqual( Stem("färdig"), "färd" );
	deepEqual( Stem("färdiga"), "färd" );
	deepEqual( Stem("färdigats"), "färdigat" );
	deepEqual( Stem("färdighet"), "färd" );
	deepEqual( Stem("färdiglovade"), "färdiglov" );
	deepEqual( Stem("färdigt"), "färd" );
	deepEqual( Stem("färg"), "färg" );
	deepEqual( Stem("färgade"), "färg" );
	deepEqual( Stem("färgades"), "färg" );
	deepEqual( Stem("färgar"), "färg" );
	deepEqual( Stem("färgat"), "färg" );
	deepEqual( Stem("färgen"), "färg" );
	deepEqual( Stem("färger"), "färg" );
	deepEqual( Stem("färgerna"), "färg" );
	deepEqual( Stem("färggrann"), "färggran" );
	deepEqual( Stem("färglösa"), "färglös" );
	deepEqual( Stem("färgprakt"), "färgprak" );
	deepEqual( Stem("färgrika"), "färgrik" );
	deepEqual( Stem("färgspel"), "färgspel" );
	deepEqual( Stem("färgton"), "färgton" );
	deepEqual( Stem("färjan"), "färjan" );
	deepEqual( Stem("färliga"), "fär" );
	deepEqual( Stem("färsk"), "färsk" );
	deepEqual( Stem("färska"), "färsk" );
	deepEqual( Stem("färskt"), "färsk" );
	deepEqual( Stem("färsäkrat"), "färsäkr" );
	deepEqual( Stem("fäst"), "fäst" );
	deepEqual( Stem("fästa"), "fäst" );
	deepEqual( Stem("fästad"), "fäst" );
	deepEqual( Stem("fästade"), "fäst" );
	deepEqual( Stem("fästades"), "fäst" );
	deepEqual( Stem("fästadt"), "fästad" );
	deepEqual( Stem("fästas"), "fäst" );
	deepEqual( Stem("fästat"), "fäst" );
	deepEqual( Stem("fäste"), "fäst" );
	deepEqual( Stem("fäster"), "fäst" );
	deepEqual( Stem("fästet"), "fästet" );
	deepEqual( Stem("fästman"), "fästman" );
	deepEqual( Stem("fästmannen"), "fästman" );
	deepEqual( Stem("fästmannens"), "fästman" );
	deepEqual( Stem("fästmö"), "fästmö" );
	deepEqual( Stem("fästmön"), "fästmön" );
	deepEqual( Stem("fästmös"), "fästmös" );
	deepEqual( Stem("fästmöskänkerna"), "fästmöskänk" );
	deepEqual( Stem("fästningen"), "fästning" );
	deepEqual( Stem("fästrman"), "fästrman" );
	deepEqual( Stem("få"), "få" );
	deepEqual( Stem("fåelarnas"), "fåel" );
	deepEqual( Stem("fåfäng"), "fåfäng" );
	deepEqual( Stem("fåfänga"), "fåfäng" );
	deepEqual( Stem("fåfängan"), "fåfängan" );
	deepEqual( Stem("fåfänglighet"), "fåfäng" );
	deepEqual( Stem("fåfängt"), "fåfäng" );
	deepEqual( Stem("fågel"), "fågel" );
	deepEqual( Stem("fågelbur"), "fågelbur" );
	deepEqual( Stem("fågelflock"), "fågelflock" );
	deepEqual( Stem("fågelkropp"), "fågelkropp" );
	deepEqual( Stem("fågelkroppen"), "fågelkropp" );
	deepEqual( Stem("fågelkvist"), "fågelkvist" );
	deepEqual( Stem("fågeln"), "fågeln" );
	deepEqual( Stem("fågelns"), "fågeln" );
	deepEqual( Stem("fågelnäbb"), "fågelnäbb" );
	deepEqual( Stem("fågelnäbbars"), "fågelnäbbar" );
	deepEqual( Stem("fågels"), "fågel" );
	deepEqual( Stem("fågeltro"), "fågeltro" );
	deepEqual( Stem("fågelungars"), "fågelungar" );
	deepEqual( Stem("fågelunge"), "fågelung" );
	deepEqual( Stem("fågelungen"), "fågelung" );
	deepEqual( Stem("fåglar"), "fågl" );
	deepEqual( Stem("fåglarna"), "fågl" );
	deepEqual( Stem("fåglarnas"), "fågl" );
	deepEqual( Stem("fåglars"), "fåglar" );
	deepEqual( Stem("fållat"), "fåll" );
	deepEqual( Stem("fån"), "fån" );
	deepEqual( Stem("fånar"), "fån" );
	deepEqual( Stem("fåne"), "fån" );
	deepEqual( Stem("fång"), "fång" );
	deepEqual( Stem("fånga"), "fång" );
	deepEqual( Stem("fångad"), "fång" );
	deepEqual( Stem("fångade"), "fång" );
	deepEqual( Stem("fångar"), "fång" );
	deepEqual( Stem("fångarne"), "fång" );
	deepEqual( Stem("fångas"), "fång" );
	deepEqual( Stem("fångat"), "fång" );
	deepEqual( Stem("fångcellen"), "fångcell" );
	deepEqual( Stem("fånge"), "fång" );
	deepEqual( Stem("fången"), "fång" );
	deepEqual( Stem("fångenskapen"), "fångenskap" );
	deepEqual( Stem("fångkärra"), "fångkärr" );
	deepEqual( Stem("fånglinan"), "fånglinan" );
	deepEqual( Stem("fångna"), "fångn" );
	deepEqual( Stem("fångst"), "fångst" );
	deepEqual( Stem("fånig"), "fån" );
	deepEqual( Stem("fåniga"), "fån" );
	deepEqual( Stem("fånigt"), "fån" );
	deepEqual( Stem("fåordig"), "fåord" );
	deepEqual( Stem("fåordiga"), "fåord" );
	deepEqual( Stem("får"), "får" );
	deepEqual( Stem("fåra"), "får" );
	deepEqual( Stem("fåraktigt"), "fårakt" );
	deepEqual( Stem("fårbog"), "fårbog" );
	deepEqual( Stem("fåren"), "får" );
	deepEqual( Stem("fåret"), "fåret" );
	deepEqual( Stem("fårskallen"), "fårskall" );
	deepEqual( Stem("fått"), "fått" );
	deepEqual( Stem("fö"), "fö" );
	deepEqual( Stem("föda"), "föd" );
	deepEqual( Stem("födande"), "föd" );
	deepEqual( Stem("födas"), "föd" );
	deepEqual( Stem("född"), "född" );
	deepEqual( Stem("födda"), "född" );
	deepEqual( Stem("födde"), "född" );
	deepEqual( Stem("föddes"), "född" );
	deepEqual( Stem("födelse"), "föd" );
	deepEqual( Stem("födelsedag"), "födelsedag" );
	deepEqual( Stem("födelsedagar"), "födelsedag" );
	deepEqual( Stem("födelsedagen"), "födelsedag" );
	deepEqual( Stem("födelsedagens"), "födelsedag" );
	deepEqual( Stem("födelsedagsbord"), "födelsedagsbord" );
	deepEqual( Stem("födelsedagsbordet"), "födelsedagsbordet" );
	deepEqual( Stem("födelsemysteriet"), "födelsemysteriet" );
	deepEqual( Stem("födelsen"), "föd" );
	deepEqual( Stem("födelser"), "föd" );
	deepEqual( Stem("föder"), "föd" );
	deepEqual( Stem("födes"), "föd" );
	deepEqual( Stem("födgeni"), "födgeni" );
	deepEqual( Stem("födslovåndor"), "födslovånd" );
	deepEqual( Stem("föga"), "fög" );
	deepEqual( Stem("föibi"), "föibi" );
	deepEqual( Stem("föijt"), "föijt" );
	deepEqual( Stem("föl"), "föl" );
	deepEqual( Stem("följ"), "följ" );
	deepEqual( Stem("följa"), "följ" );
	deepEqual( Stem("följaktligen"), "följakt" );
	deepEqual( Stem("följande"), "följ" );
	deepEqual( Stem("följd"), "följd" );
	deepEqual( Stem("följde"), "följd" );
	deepEqual( Stem("följden"), "följd" );
	deepEqual( Stem("följder"), "följd" );
	deepEqual( Stem("följderna"), "följd" );
	deepEqual( Stem("följdes"), "följd" );
	deepEqual( Stem("följe"), "följ" );
	deepEqual( Stem("följer"), "följ" );
	deepEqual( Stem("följeslagare"), "följeslag" );
	deepEqual( Stem("följeslagares"), "följeslagar" );
	deepEqual( Stem("följeslagerska"), "följeslagersk" );
	deepEqual( Stem("följetongen"), "följetong" );
	deepEqual( Stem("följs"), "följ" );
	deepEqual( Stem("följt"), "följt" );
	deepEqual( Stem("föll"), "föll" );
	deepEqual( Stem("fölle"), "föll" );
	deepEqual( Stem("föllo"), "föllo" );
	deepEqual( Stem("fömodan"), "fömodan" );
	deepEqual( Stem("fömuftiga"), "fömuft" );
	deepEqual( Stem("fön"), "fön" );
	deepEqual( Stem("fönster"), "fönst" );
	deepEqual( Stem("fönsterblecket"), "fönsterblecket" );
	deepEqual( Stem("fönsterbrädet"), "fönsterbrädet" );
	deepEqual( Stem("fönsterglaset"), "fönsterglaset" );
	deepEqual( Stem("fönsterglugg"), "fönsterglugg" );
	deepEqual( Stem("fönsterkarm"), "fönsterkarm" );
	deepEqual( Stem("fönsterkarmen"), "fönsterkarm" );
	deepEqual( Stem("fönsterkurtis"), "fönsterkurtis" );
	deepEqual( Stem("fönsterluckor"), "fönsterluck" );
	deepEqual( Stem("fönsterluften"), "fönsterluft" );
	deepEqual( Stem("fönsterlufter"), "fönsterluft" );
	deepEqual( Stem("fönsterlufterna"), "fönsterluft" );
	deepEqual( Stem("fönsterna"), "fönst" );
	deepEqual( Stem("fönsternas"), "fönst" );
	deepEqual( Stem("fönsterpantomimen"), "fönsterpantomim" );
	deepEqual( Stem("fönsterplats"), "fönsterplat" );
	deepEqual( Stem("fönsterrader"), "fönsterrad" );
	deepEqual( Stem("fönsterruta"), "fönsterrut" );
	deepEqual( Stem("fönsterrutan"), "fönsterrutan" );
	deepEqual( Stem("fönsterrutor"), "fönsterrut" );
	deepEqual( Stem("fönsterrutorna"), "fönsterrut" );
	deepEqual( Stem("fönsterspringorna"), "fönsterspring" );
	deepEqual( Stem("fönstrct"), "fönstrct" );
	deepEqual( Stem("fönstren"), "fönstr" );
	deepEqual( Stem("fönstrens"), "fönstr" );
	deepEqual( Stem("fönstret"), "fönstret" );
	deepEqual( Stem("fönstrets"), "fönstret" );
	deepEqual( Stem("för"), "för" );
	deepEqual( Stem("föra"), "för" );
	deepEqual( Stem("förakt"), "förak" );
	deepEqual( Stem("förakta"), "förak" );
	deepEqual( Stem("föraktad"), "förak" );
	deepEqual( Stem("föraktade"), "förak" );
	deepEqual( Stem("föraktande"), "förak" );
	deepEqual( Stem("föraktar"), "förak" );
	deepEqual( Stem("föraktare"), "förak" );
	deepEqual( Stem("föraktas"), "förak" );
	deepEqual( Stem("föraktfuilt"), "föraktfuilt" );
	deepEqual( Stem("föraktlig"), "förakt" );
	deepEqual( Stem("föraktliga"), "förakt" );
	deepEqual( Stem("föraktligare"), "förakt" );
	deepEqual( Stem("föraktligt"), "förakt" );
	deepEqual( Stem("föranledd"), "föranled" );
	deepEqual( Stem("föranledda"), "föranled" );
	deepEqual( Stem("föranledde"), "föranled" );
	deepEqual( Stem("föranlett"), "föranlet" );
	deepEqual( Stem("föranstalta"), "föranstalt" );
	deepEqual( Stem("förarga"), "förarg" );
	deepEqual( Stem("förargad"), "förarg" );
	deepEqual( Stem("förargade"), "förarg" );
	deepEqual( Stem("förargat"), "förarg" );
	deepEqual( Stem("förargelse"), "förarg" );
	deepEqual( Stem("förarglige"), "förarg" );
	deepEqual( Stem("förargligt"), "förarg" );
	deepEqual( Stem("förarsätet"), "förarsätet" );
	deepEqual( Stem("föras"), "för" );
	deepEqual( Stem("förb"), "förb" );
	deepEqual( Stem("förbanna"), "förban" );
	deepEqual( Stem("förbannad"), "förban" );
	deepEqual( Stem("förbannade"), "förban" );
	deepEqual( Stem("förbannat"), "förban" );
	deepEqual( Stem("förbannelse"), "förbann" );
	deepEqual( Stem("förbannelser"), "förbann" );
	deepEqual( Stem("förbarma"), "förbarm" );
	deepEqual( Stem("förbarmade"), "förbarm" );
	deepEqual( Stem("förbarmande"), "förbarm" );
	deepEqual( Stem("förbarmare"), "förbarm" );
	deepEqual( Stem("förbarme"), "förbarm" );
	deepEqual( Stem("förbaskade"), "förbask" );
	deepEqual( Stem("förbaskat"), "förbask" );
	deepEqual( Stem("förbehallsamhet"), "förbehallsam" );
	deepEqual( Stem("förbehåll"), "förbehåll" );
	deepEqual( Stem("förbehållen"), "förbehåll" );
	deepEqual( Stem("förbehåller"), "förbehåll" );
	deepEqual( Stem("förbehållet"), "förbehållet" );
	deepEqual( Stem("förbehållsamhet"), "förbehållsam" );
	deepEqual( Stem("förbereda"), "förbered" );
	deepEqual( Stem("förberedde"), "förbered" );
	deepEqual( Stem("förberedelser"), "förbered" );
	deepEqual( Stem("förberett"), "förberet" );
	deepEqual( Stem("förbi"), "förbi" );
	deepEqual( Stem("förbifarten"), "förbifart" );
	deepEqual( Stem("förbiflytande"), "förbiflyt" );
	deepEqual( Stem("förbigaende"), "förbigaend" );
	deepEqual( Stem("förbigicks"), "förbigick" );
	deepEqual( Stem("förbiglidande"), "förbiglid" );
	deepEqual( Stem("förbigå"), "förbigå" );
	deepEqual( Stem("förbigående"), "förbigåend" );
	deepEqual( Stem("förbigåerlde"), "förbigåerld" );
	deepEqual( Stem("förbiilande"), "förbiil" );
	deepEqual( Stem("förbinclelse"), "förbincl" );
	deepEqual( Stem("förbindelse"), "förbind" );
	deepEqual( Stem("förbindelsen"), "förbind" );
	deepEqual( Stem("förbindelser"), "förbind" );
	deepEqual( Stem("förbindlig"), "förbind" );
	deepEqual( Stem("förbindlighet"), "förbind" );
	deepEqual( Stem("förbindligt"), "förbind" );
	deepEqual( Stem("förbise"), "förbis" );
	deepEqual( Stem("förbisedd"), "förbised" );
	deepEqual( Stem("förbisedda"), "förbised" );
	deepEqual( Stem("förbiser"), "förbis" );
	deepEqual( Stem("förbistring"), "förbistring" );
	deepEqual( Stem("förbisåg"), "förbisåg" );
	deepEqual( Stem("förbittras"), "förbittr" );
	deepEqual( Stem("förbittring"), "förbittring" );
	deepEqual( Stem("förbjude"), "förbjud" );
	deepEqual( Stem("förbjuder"), "förbjud" );
	deepEqual( Stem("förbjudet"), "förbjudet" );
	deepEqual( Stem("förbjudit"), "förbjudit" );
	deepEqual( Stem("förbjudna"), "förbjudn" );
	deepEqual( Stem("förbjöd"), "förbjöd" );
	deepEqual( Stem("förblandat"), "förbland" );
	deepEqual( Stem("förblef"), "förblef" );
	deepEqual( Stem("förblev"), "förblev" );
	deepEqual( Stem("förblevo"), "förblevo" );
	deepEqual( Stem("förbli"), "förbli" );
	deepEqual( Stem("förblifva"), "förblifv" );
	deepEqual( Stem("förblindade"), "förblind" );
	deepEqual( Stem("förblindadt"), "förblindad" );
	deepEqual( Stem("förblindar"), "förblind" );
	deepEqual( Stem("förblir"), "förblir" );
	deepEqual( Stem("förbliv"), "förbliv" );
	deepEqual( Stem("förblivande"), "förbliv" );
	deepEqual( Stem("förbluffade"), "förbluff" );
	deepEqual( Stem("förbluffande"), "förbluff" );
	deepEqual( Stem("förborgade"), "förborg" );
	deepEqual( Stem("förbrinna"), "förbrin" );
	deepEqual( Stem("förbrinner"), "förbrin" );
	deepEqual( Stem("förbrylla"), "förbryll" );
	deepEqual( Stem("förbrytare"), "förbryt" );
	deepEqual( Stem("förbrytelse"), "förbryt" );
	deepEqual( Stem("förbrytelsen"), "förbryt" );
	deepEqual( Stem("förbränd"), "förbränd" );
	deepEqual( Stem("förbrända"), "förbränd" );
	deepEqual( Stem("förbud"), "förbud" );
	deepEqual( Stem("förbund"), "förbund" );
	deepEqual( Stem("förbunde"), "förbund" );
	deepEqual( Stem("förbunden"), "förbund" );
	deepEqual( Stem("förbundit"), "förbundit" );
	deepEqual( Stem("förbundna"), "förbundn" );
	deepEqual( Stem("förbytt"), "förbyt" );
	deepEqual( Stem("förbättra"), "förbättr" );
	deepEqual( Stem("förbättrad"), "förbättr" );
	deepEqual( Stem("förbättrades"), "förbättr" );
	deepEqual( Stem("förbättradt"), "förbättrad" );
	deepEqual( Stem("förbättrat"), "förbättr" );
	deepEqual( Stem("förbättring"), "förbättring" );
	deepEqual( Stem("förbålt"), "förbålt" );
	deepEqual( Stem("förböner"), "förbön" );
	deepEqual( Stem("förc"), "förc" );
	deepEqual( Stem("förd"), "förd" );
	deepEqual( Stem("förda"), "förd" );
	deepEqual( Stem("förde"), "förd" );
	deepEqual( Stem("fördel"), "fördel" );
	deepEqual( Stem("fördelaktig"), "fördelakt" );
	deepEqual( Stem("fördelaktigare"), "fördelakt" );
	deepEqual( Stem("fördelaktigt"), "fördelakt" );
	deepEqual( Stem("fördelande"), "fördel" );
	deepEqual( Stem("fördelar"), "fördel" );
	deepEqual( Stem("fördelningen"), "fördelning" );
	deepEqual( Stem("förden"), "förd" );
	deepEqual( Stem("fördenskull"), "fördenskull" );
	deepEqual( Stem("förderfvet"), "förderfvet" );
	deepEqual( Stem("fördes"), "förd" );
	deepEqual( Stem("fördj"), "fördj" );
	deepEqual( Stem("fördjekladt"), "fördjeklad" );
	deepEqual( Stem("fördjupade"), "fördjup" );
	deepEqual( Stem("fördjupningar"), "fördjupning" );
	deepEqual( Stem("fördjupningen"), "fördjupning" );
	deepEqual( Stem("fördolt"), "fördolt" );
	deepEqual( Stem("fördom"), "fördom" );
	deepEqual( Stem("fördomar"), "fördom" );
	deepEqual( Stem("fördrag"), "fördrag" );
	deepEqual( Stem("fördraga"), "fördrag" );
	deepEqual( Stem("fördragsamhetens"), "fördragsam" );
	deepEqual( Stem("fördrar"), "fördr" );
	deepEqual( Stem("fördrevo"), "fördrevo" );
	deepEqual( Stem("fördriva"), "fördriv" );
	deepEqual( Stem("fördröja"), "fördröj" );
	deepEqual( Stem("fördröjt"), "fördröjt" );
	deepEqual( Stem("fördubblad"), "fördubbl" );
	deepEqual( Stem("fördubblade"), "fördubbl" );
	deepEqual( Stem("fördubbladt"), "fördubblad" );
	deepEqual( Stem("fördunk"), "fördunk" );
	deepEqual( Stem("fördärva"), "fördärv" );
	deepEqual( Stem("fördärvar"), "fördärv" );
	deepEqual( Stem("fördärvat"), "fördärv" );
	deepEqual( Stem("fördärvet"), "fördärvet" );
	deepEqual( Stem("fördöma"), "fördöm" );
	deepEqual( Stem("fördömd"), "fördömd" );
	deepEqual( Stem("fördömda"), "fördömd" );
	deepEqual( Stem("fördömde"), "fördömd" );
	deepEqual( Stem("fördöme"), "fördöm" );
	deepEqual( Stem("fördömt"), "fördömt" );
	deepEqual( Stem("före"), "för" );
	deepEqual( Stem("förebilder"), "förebild" );
	deepEqual( Stem("förebrå"), "förebrå" );
	deepEqual( Stem("förebrådde"), "förebråd" );
	deepEqual( Stem("förebråelse"), "förebrå" );
	deepEqual( Stem("förebråelser"), "förebrå" );
	deepEqual( Stem("förebrående"), "förebråend" );
	deepEqual( Stem("förebud"), "förebud" );
	deepEqual( Stem("förebygga"), "förebygg" );
	deepEqual( Stem("föredrag"), "föredrag" );
	deepEqual( Stem("föredrager"), "föredrag" );
	deepEqual( Stem("föredraget"), "föredraget" );
	deepEqual( Stem("föredragshållare"), "föredragshåll" );
	deepEqual( Stem("föredrog"), "föredrog" );
	deepEqual( Stem("föredöme"), "föredöm" );
	deepEqual( Stem("förefalla"), "förefall" );
	deepEqual( Stem("förefallande"), "förefall" );
	deepEqual( Stem("förefaller"), "förefall" );
	deepEqual( Stem("förefallit"), "förefallit" );
	deepEqual( Stem("föreföll"), "föreföll" );
	deepEqual( Stem("föreföllo"), "föreföllo" );
	deepEqual( Stem("föregick"), "föregick" );
	deepEqual( Stem("föregående"), "föregåend" );
	deepEqual( Stem("föregångare"), "föregång" );
	deepEqual( Stem("föregånget"), "föregånget" );
	deepEqual( Stem("förehades"), "föreh" );
	deepEqual( Stem("förehafvande"), "förehafv" );
	deepEqual( Stem("förehafvandet"), "förehafv" );
	deepEqual( Stem("förehavande"), "förehav" );
	deepEqual( Stem("förehålla"), "förehåll" );
	deepEqual( Stem("förekom"), "förekom" );
	deepEqual( Stem("förekomma"), "förekomm" );
	deepEqual( Stem("förekommande"), "förekomm" );
	deepEqual( Stem("förekommandet"), "förekomm" );
	deepEqual( Stem("förekommer"), "förekomm" );
	deepEqual( Stem("förekommit"), "förekommit" );
	deepEqual( Stem("förekommo"), "förekommo" );
	deepEqual( Stem("förekoms"), "förekom" );
	deepEqual( Stem("förelagt"), "förelag" );
	deepEqual( Stem("föreligga"), "föreligg" );
	deepEqual( Stem("föreligger"), "föreligg" );
	deepEqual( Stem("föreläsning"), "föreläsning" );
	deepEqual( Stem("föreläsningar"), "föreläsning" );
	deepEqual( Stem("föreläsningssalarna"), "föreläsningssal" );
	deepEqual( Stem("föremål"), "föremål" );
	deepEqual( Stem("föremålen"), "föremål" );
	deepEqual( Stem("föremålet"), "föremålet" );
	deepEqual( Stem("fören"), "för" );
	deepEqual( Stem("förena"), "fören" );
	deepEqual( Stem("förenad"), "fören" );
	deepEqual( Stem("förenade"), "fören" );
	deepEqual( Stem("förenande"), "fören" );
	deepEqual( Stem("förenar"), "fören" );
	deepEqual( Stem("förenas"), "fören" );
	deepEqual( Stem("förenat"), "fören" );
	deepEqual( Stem("förening"), "förening" );
	deepEqual( Stem("föreningsband"), "föreningsband" );
	deepEqual( Stem("förer"), "för" );
	deepEqual( Stem("förerska"), "förersk" );
	deepEqual( Stem("föresats"), "föresat" );
	deepEqual( Stem("föresatsen"), "föresats" );
	deepEqual( Stem("föresatser"), "föresats" );
	deepEqual( Stem("föresatt"), "föresat" );
	deepEqual( Stem("föresatte"), "föresat" );
	deepEqual( Stem("föreskrift"), "föreskrift" );
	deepEqual( Stem("föreskrifter"), "föreskrift" );
	deepEqual( Stem("föreslagit"), "föreslagit" );
	deepEqual( Stem("föreslagna"), "föreslagn" );
	deepEqual( Stem("föreslog"), "föreslog" );
	deepEqual( Stem("föreslå"), "föreslå" );
	deepEqual( Stem("förespel"), "förespel" );
	deepEqual( Stem("förestallde"), "förestalld" );
	deepEqual( Stem("förestavade"), "förestav" );
	deepEqual( Stem("förestod"), "förestod" );
	deepEqual( Stem("förestodo"), "förestodo" );
	deepEqual( Stem("förestyr"), "förestyr" );
	deepEqual( Stem("förestälde"), "förestäld" );
	deepEqual( Stem("föreställa"), "föreställ" );
	deepEqual( Stem("föreställande"), "föreställ" );
	deepEqual( Stem("föreställda"), "föreställd" );
	deepEqual( Stem("föreställde"), "föreställd" );
	deepEqual( Stem("föreställdes"), "föreställd" );
	deepEqual( Stem("föreställer"), "föreställ" );
	deepEqual( Stem("föreställning"), "föreställning" );
	deepEqual( Stem("föreställningar"), "föreställning" );
	deepEqual( Stem("föreställningen"), "föreställning" );
	deepEqual( Stem("föreställt"), "föreställt" );
	deepEqual( Stem("förestält"), "förestält" );
	deepEqual( Stem("förestå"), "förestå" );
	deepEqual( Stem("förestående"), "föreståend" );
	deepEqual( Stem("föreståndarinnan"), "föreståndarinnan" );
	deepEqual( Stem("föreståndarinnans"), "föreståndarinnan" );
	deepEqual( Stem("föreståndarinnorna"), "föreståndarin" );
	deepEqual( Stem("föresvävade"), "föresväv" );
	deepEqual( Stem("företa"), "föret" );
	deepEqual( Stem("företag"), "företag" );
	deepEqual( Stem("företaga"), "företag" );
	deepEqual( Stem("företagas"), "företag" );
	deepEqual( Stem("företager"), "företag" );
	deepEqual( Stem("företaget"), "företaget" );
	deepEqual( Stem("företagit"), "företagit" );
	deepEqual( Stem("företagsam"), "företagsam" );
	deepEqual( Stem("förete"), "föret" );
	deepEqual( Stem("företedde"), "företed" );
	deepEqual( Stem("företeelse"), "förete" );
	deepEqual( Stem("företeelser"), "förete" );
	deepEqual( Stem("företog"), "företog" );
	deepEqual( Stem("företogo"), "företogo" );
	deepEqual( Stem("företrädare"), "företräd" );
	deepEqual( Stem("företräde"), "företräd" );
	deepEqual( Stem("företräden"), "företräd" );
	deepEqual( Stem("företrädesvis"), "företrädesvis" );
	deepEqual( Stem("företrädet"), "företrädet" );
	deepEqual( Stem("förevändning"), "förevändning" );
	deepEqual( Stem("förevändningar"), "förevändning" );
	deepEqual( Stem("förevändningen"), "förevändning" );
	deepEqual( Stem("förfall"), "förfall" );
	deepEqual( Stem("förfalla"), "förfall" );
	deepEqual( Stem("förfallen"), "förfall" );
	deepEqual( Stem("förfallodagen"), "förfallodag" );
	deepEqual( Stem("förfalskare"), "förfalsk" );
	deepEqual( Stem("förfalskat"), "förfalsk" );
	deepEqual( Stem("förfara"), "förfar" );
	deepEqual( Stem("förfarit"), "förfarit" );
	deepEqual( Stem("förfaslig"), "förfas" );
	deepEqual( Stem("förfasligt"), "förfas" );
	deepEqual( Stem("författare"), "förfat" );
	deepEqual( Stem("författaren"), "förfat" );
	deepEqual( Stem("författarskap"), "författarskap" );
	deepEqual( Stem("författat"), "förfat" );
	deepEqual( Stem("författats"), "författat" );
	deepEqual( Stem("förfelade"), "förfel" );
	deepEqual( Stem("förfinade"), "förfin" );
	deepEqual( Stem("förfluget"), "förfluget" );
	deepEqual( Stem("förfluten"), "förflut" );
	deepEqual( Stem("förflutit"), "förflutit" );
	deepEqual( Stem("förflutna"), "förflutn" );
	deepEqual( Stem("förflyktigad"), "förflykt" );
	deepEqual( Stem("förflyktigat"), "förflykt" );
	deepEqual( Stem("förflytta"), "förflyt" );
	deepEqual( Stem("förflöt"), "förflöt" );
	deepEqual( Stem("förflöto"), "förflöto" );
	deepEqual( Stem("förfoga"), "förfog" );
	deepEqual( Stem("förfogade"), "förfog" );
	deepEqual( Stem("förfogande"), "förfog" );
	deepEqual( Stem("förfogar"), "förfog" );
	deepEqual( Stem("förfriskas"), "förfrisk" );
	deepEqual( Stem("förfriskning"), "förfriskning" );
	deepEqual( Stem("förfriskningar"), "förfriskning" );
	deepEqual( Stem("förfrusen"), "förfrus" );
	deepEqual( Stem("förfrusna"), "förfrusn" );
	deepEqual( Stem("förfrusne"), "förfrusn" );
	deepEqual( Stem("förfrysa"), "förfrys" );
	deepEqual( Stem("förfrågningar"), "förfrågning" );
	deepEqual( Stem("förfäder"), "förfäd" );
	deepEqual( Stem("förfäiligt"), "förfäi" );
	deepEqual( Stem("förfärad"), "förfär" );
	deepEqual( Stem("förfäran"), "förfäran" );
	deepEqual( Stem("förfärande"), "förfär" );
	deepEqual( Stem("förfäras"), "förfär" );
	deepEqual( Stem("förfärdigats"), "förfärdigat" );
	deepEqual( Stem("förfärlig"), "förfär" );
	deepEqual( Stem("förfärliga"), "förfär" );
	deepEqual( Stem("förfärligare"), "förfär" );
	deepEqual( Stem("förfärligaste"), "förfär" );
	deepEqual( Stem("förfärligt"), "förfär" );
	deepEqual( Stem("förföljaren"), "förfölj" );
	deepEqual( Stem("förföljd"), "förföljd" );
	deepEqual( Stem("förföljde"), "förföljd" );
	deepEqual( Stem("förföljdes"), "förföljd" );
	deepEqual( Stem("förföljelsevansinne"), "förföljelsevansin" );
	deepEqual( Stem("förföljer"), "förfölj" );
	deepEqual( Stem("förföljes"), "förfölj" );
	deepEqual( Stem("förföljs"), "förfölj" );
	deepEqual( Stem("förföljt"), "förföljt" );
	deepEqual( Stem("förföll"), "förföll" );
	deepEqual( Stem("förföllo"), "förföllo" );
	deepEqual( Stem("förföra"), "förför" );
	deepEqual( Stem("förföraren"), "förför" );
	deepEqual( Stem("förförares"), "förförar" );
	deepEqual( Stem("förförelse"), "förför" );
	deepEqual( Stem("förförelsen"), "förför" );
	deepEqual( Stem("förföriska"), "förförisk" );
	deepEqual( Stem("förföriskt"), "förförisk" );
	deepEqual( Stem("förfört"), "förfört" );
	deepEqual( Stem("förgallrade"), "förgallr" );
	deepEqual( Stem("förge"), "förg" );
	deepEqual( Stem("förgick"), "förgick" );
	deepEqual( Stem("förgicks"), "förgick" );
	deepEqual( Stem("förgifta"), "förgift" );
	deepEqual( Stem("förgiftad"), "förgift" );
	deepEqual( Stem("förgiftade"), "förgift" );
	deepEqual( Stem("förgiftat"), "förgift" );
	deepEqual( Stem("förgingo"), "förgingo" );
	deepEqual( Stem("förglömma"), "förglömm" );
	deepEqual( Stem("förgripa"), "förgrip" );
	deepEqual( Stem("förgrunden"), "förgrund" );
	deepEqual( Stem("förgrämda"), "förgrämd" );
	deepEqual( Stem("förgråten"), "förgråt" );
	deepEqual( Stem("förgudade"), "förgud" );
	deepEqual( Stem("förgudning"), "förgudning" );
	deepEqual( Stem("förgylda"), "förgyld" );
	deepEqual( Stem("förgylla"), "förgyll" );
	deepEqual( Stem("förgylld"), "förgylld" );
	deepEqual( Stem("förgyllda"), "förgylld" );
	deepEqual( Stem("förgyllde"), "förgylld" );
	deepEqual( Stem("förgyllning"), "förgyllning" );
	deepEqual( Stem("förgyllt"), "förgyllt" );
	deepEqual( Stem("förgäfves"), "förgäfv" );
	deepEqual( Stem("förgängelse"), "förgäng" );
	deepEqual( Stem("förgängelsen"), "förgäng" );
	deepEqual( Stem("förgängelsens"), "förgäng" );
	deepEqual( Stem("förgängliga"), "förgäng" );
	deepEqual( Stem("förgät"), "förgät" );
	deepEqual( Stem("förgäta"), "förgät" );
	deepEqual( Stem("förgätande"), "förgät" );
	deepEqual( Stem("förgäter"), "förgät" );
	deepEqual( Stem("förgätit"), "förgätit" );
	deepEqual( Stem("förgäves"), "förgäv" );
	deepEqual( Stem("förgången"), "förgång" );
	deepEqual( Stem("förgångna"), "förgångn" );
	deepEqual( Stem("förgår"), "förgår" );
	deepEqual( Stem("förgården"), "förgård" );
	deepEqual( Stem("förgårs"), "förgår" );
	deepEqual( Stem("förgåtts"), "förgåt" );
	deepEqual( Stem("förgör"), "förgör" );
	deepEqual( Stem("förgöra"), "förgör" );
	deepEqual( Stem("förhand"), "förhand" );
	deepEqual( Stem("förhasta"), "förhast" );
	deepEqual( Stem("förhastad"), "förhast" );
	deepEqual( Stem("förhastade"), "förhast" );
	deepEqual( Stem("förhatlig"), "förhat" );
	deepEqual( Stem("förhatliga"), "förhat" );
	deepEqual( Stem("förhexad"), "förhex" );
	deepEqual( Stem("förhinder"), "förhind" );
	deepEqual( Stem("förhindra"), "förhindr" );
	deepEqual( Stem("förhoppning"), "förhoppning" );
	deepEqual( Stem("förhoppningar"), "förhoppning" );
	deepEqual( Stem("förhoppningen"), "förhoppning" );
	deepEqual( Stem("förhoppningens"), "förhoppning" );
	deepEqual( Stem("förhoppningsfull"), "förhoppningsfull" );
	deepEqual( Stem("förhänge"), "förhäng" );
	deepEqual( Stem("förhäpnade"), "förhäpn" );
	deepEqual( Stem("förhärdade"), "förhärd" );
	deepEqual( Stem("förhärdadt"), "förhärdad" );
	deepEqual( Stem("förhäxade"), "förhäx" );
	deepEqual( Stem("förhålla"), "förhåll" );
	deepEqual( Stem("förhållande"), "förhåll" );
	deepEqual( Stem("förhållanden"), "förhåll" );
	deepEqual( Stem("förhållandena"), "förhållanden" );
	deepEqual( Stem("förhållandet"), "förhåll" );
	deepEqual( Stem("förhållen"), "förhåll" );
	deepEqual( Stem("förhåller"), "förhåll" );
	deepEqual( Stem("förhöjda"), "förhöjd" );
	deepEqual( Stem("förhöjdes"), "förhöjd" );
	deepEqual( Stem("förhöjning"), "förhöjning" );
	deepEqual( Stem("förhöll"), "förhöll" );
	deepEqual( Stem("förhör"), "förhör" );
	deepEqual( Stem("förhöra"), "förhör" );
	deepEqual( Stem("förhöret"), "förhöret" );
	deepEqual( Stem("förifra"), "förifr" );
	deepEqual( Stem("förintas"), "förint" );
	deepEqual( Stem("förirrade"), "förirr" );
	deepEqual( Stem("förirrat"), "förirr" );
	deepEqual( Stem("förjaga"), "förjag" );
	deepEqual( Stem("förjagad"), "förjag" );
	deepEqual( Stem("förjagades"), "förjag" );
	deepEqual( Stem("förjagat"), "förjag" );
	deepEqual( Stem("förkasta"), "förkast" );
	deepEqual( Stem("förkastade"), "förkast" );
	deepEqual( Stem("förkastat"), "förkast" );
	deepEqual( Stem("förkastelsedom"), "förkastelsedom" );
	deepEqual( Stem("förklara"), "förklar" );
	deepEqual( Stem("förklarad"), "förklar" );
	deepEqual( Stem("förklarade"), "förklar" );
	deepEqual( Stem("förklarande"), "förklar" );
	deepEqual( Stem("förklarar"), "förklar" );
	deepEqual( Stem("förklaras"), "förklar" );
	deepEqual( Stem("förklarat"), "förklar" );
	deepEqual( Stem("förklaring"), "förklaring" );
	deepEqual( Stem("förklaringen"), "förklaring" );
	deepEqual( Stem("förklarlig"), "förklar" );
	deepEqual( Stem("förklemade"), "förklem" );
	deepEqual( Stem("förklingar"), "förkling" );
	deepEqual( Stem("förklädde"), "förkläd" );
	deepEqual( Stem("förkläde"), "förkläd" );
	deepEqual( Stem("förkläden"), "förkläd" );
	deepEqual( Stem("förklädet"), "förklädet" );
	deepEqual( Stem("förklädnad"), "förklädn" );
	deepEqual( Stem("förknappningar"), "förknappning" );
	deepEqual( Stem("förknippade"), "förknipp" );
	deepEqual( Stem("förkofran"), "förkofran" );
	deepEqual( Stem("förkolna"), "förkoln" );
	deepEqual( Stem("förkorta"), "förkort" );
	deepEqual( Stem("förkortning"), "förkortning" );
	deepEqual( Stem("förkovrar"), "förkovr" );
	deepEqual( Stem("förkroppsligade"), "förkropps" );
	deepEqual( Stem("förkrossande"), "förkross" );
	deepEqual( Stem("förkrossat"), "förkross" );
	deepEqual( Stem("förkrosselsens"), "förkross" );
	deepEqual( Stem("förkrympta"), "förkrympt" );
	deepEqual( Stem("förkunna"), "förkun" );
	deepEqual( Stem("förkunnade"), "förkun" );
	deepEqual( Stem("förkunnare"), "förkun" );
	deepEqual( Stem("förkunnelse"), "förkunn" );
	deepEqual( Stem("förkyla"), "förkyl" );
	deepEqual( Stem("förkyld"), "förkyld" );
	deepEqual( Stem("förkyler"), "förkyl" );
	deepEqual( Stem("förkylning"), "förkylning" );
	deepEqual( Stem("förkylt"), "förkylt" );
	deepEqual( Stem("förkänning"), "förkänning" );
	deepEqual( Stem("förkänsla"), "förkänsl" );
	deepEqual( Stem("förkänslan"), "förkänslan" );
	deepEqual( Stem("förkärlek"), "förkärlek" );
	deepEqual( Stem("förlag"), "förlag" );
	deepEqual( Stem("förlaga"), "förlag" );
	deepEqual( Stem("förlagan"), "förlagan" );
	deepEqual( Stem("förlama"), "förlam" );
	deepEqual( Stem("förlamande"), "förlam" );
	deepEqual( Stem("förlamning"), "förlamning" );
	deepEqual( Stem("förlast"), "förl" );
	deepEqual( Stem("förlata"), "förlat" );
	deepEqual( Stem("förledande"), "förled" );
	deepEqual( Stem("förledas"), "förled" );
	deepEqual( Stem("förledd"), "förled" );
	deepEqual( Stem("förlidna"), "förlidn" );
	deepEqual( Stem("förlig"), "för" );
	deepEqual( Stem("förlika"), "förlik" );
	deepEqual( Stem("förliktes"), "förlik" );
	deepEqual( Stem("förlist"), "förlist" );
	deepEqual( Stem("förlita"), "förlit" );
	deepEqual( Stem("förlitande"), "förlit" );
	deepEqual( Stem("förljufvade"), "förljufv" );
	deepEqual( Stem("förlofning"), "förlofning" );
	deepEqual( Stem("förlopp"), "förlopp" );
	deepEqual( Stem("förlora"), "förlor" );
	deepEqual( Stem("förlorad"), "förlor" );
	deepEqual( Stem("förlorade"), "förlor" );
	deepEqual( Stem("förloradt"), "förlorad" );
	deepEqual( Stem("förlorar"), "förlor" );
	deepEqual( Stem("förloras"), "förlor" );
	deepEqual( Stem("förlorat"), "förlor" );
	deepEqual( Stem("förlossa"), "förloss" );
	deepEqual( Stem("förlossning"), "förlossning" );
	deepEqual( Stem("förlossningen"), "förlossning" );
	deepEqual( Stem("förlossningsbord"), "förlossningsbord" );
	deepEqual( Stem("förlossningsborden"), "förlossningsbord" );
	deepEqual( Stem("förlossningsbordet"), "förlossningsbordet" );
	deepEqual( Stem("förlossningshem"), "förlossningshem" );
	deepEqual( Stem("förlossningshemmet"), "förlossningshemmet" );
	deepEqual( Stem("förlossningspraktikens"), "förlossningspraktik" );
	deepEqual( Stem("förlossningsrummet"), "förlossningsrummet" );
	deepEqual( Stem("förlossningssalar"), "förlossningssal" );
	deepEqual( Stem("förlossningssalen"), "förlossningssal" );
	deepEqual( Stem("förlossningstänger"), "förlossningstäng" );
	deepEqual( Stem("förlov"), "förlov" );
	deepEqual( Stem("förlova"), "förlov" );
	deepEqual( Stem("förlovad"), "förlov" );
	deepEqual( Stem("förlovade"), "förlov" );
	deepEqual( Stem("förlovat"), "förlov" );
	deepEqual( Stem("förlovingskalaset"), "förlovingskalaset" );
	deepEqual( Stem("förlovning"), "förlovning" );
	deepEqual( Stem("förlovningar"), "förlovning" );
	deepEqual( Stem("förlovningen"), "förlovning" );
	deepEqual( Stem("förlovningskalaset"), "förlovningskalaset" );
	deepEqual( Stem("förlovningskyssen"), "förlovningskyss" );
	deepEqual( Stem("förlovningsring"), "förlovningsring" );
	deepEqual( Stem("förlust"), "förlust" );
	deepEqual( Stem("förlustelse"), "förlust" );
	deepEqual( Stem("förlustelser"), "förlust" );
	deepEqual( Stem("förlustelseställen"), "förlustelseställ" );
	deepEqual( Stem("förlusten"), "förlust" );
	deepEqual( Stem("förlägen"), "förläg" );
	deepEqual( Stem("förlägenhet"), "förlägen" );
	deepEqual( Stem("förläget"), "förläget" );
	deepEqual( Stem("förläggare"), "förlägg" );
	deepEqual( Stem("förlägna"), "förlägn" );
	deepEqual( Stem("förlänga"), "förläng" );
	deepEqual( Stem("förlängd"), "förläng" );
	deepEqual( Stem("förlät"), "förlät" );
	deepEqual( Stem("förlåt"), "förlåt" );
	deepEqual( Stem("förlåta"), "förlåt" );
	deepEqual( Stem("förlåtas"), "förlåt" );
	deepEqual( Stem("förlåte"), "förlåt" );
	deepEqual( Stem("förlåtelse"), "förlåt" );
	deepEqual( Stem("förlåter"), "förlåt" );
	deepEqual( Stem("förlåtit"), "förlåtit" );
	deepEqual( Stem("förlåtlig"), "förlåt" );
	deepEqual( Stem("förlåtliga"), "förlåt" );
	deepEqual( Stem("förlåtligt"), "förlåt" );
	deepEqual( Stem("förlöjliga"), "förlöj" );
	deepEqual( Stem("förlöjligande"), "förlöj" );
	deepEqual( Stem("förlösande"), "förlös" );
	deepEqual( Stem("förlöstes"), "förlös" );
	deepEqual( Stem("förmadde"), "förmad" );
	deepEqual( Stem("förmak"), "förmak" );
	deepEqual( Stem("förmaket"), "förmaket" );
	deepEqual( Stem("förman"), "förman" );
	deepEqual( Stem("förmana"), "förman" );
	deepEqual( Stem("förmanade"), "förman" );
	deepEqual( Stem("förmanande"), "förman" );
	deepEqual( Stem("förmanen"), "förman" );
	deepEqual( Stem("förmaning"), "förmaning" );
	deepEqual( Stem("förmaningar"), "förmaning" );
	deepEqual( Stem("förmaningen"), "förmaning" );
	deepEqual( Stem("förmans"), "förman" );
	deepEqual( Stem("förmasten"), "förmast" );
	deepEqual( Stem("förmening"), "förmening" );
	deepEqual( Stem("förmiddag"), "förmiddag" );
	deepEqual( Stem("förmiddagarna"), "förmiddag" );
	deepEqual( Stem("förmiddagarne"), "förmiddag" );
	deepEqual( Stem("förmiddagen"), "förmiddag" );
	deepEqual( Stem("förmiddagens"), "förmiddag" );
	deepEqual( Stem("förmiddags"), "förmiddag" );
	deepEqual( Stem("förmiddagsdräkt"), "förmiddagsdräk" );
	deepEqual( Stem("förmiddagsvandring"), "förmiddagsvandring" );
	deepEqual( Stem("förmiddagsvisiterna"), "förmiddagsvisit" );
	deepEqual( Stem("förmildrad"), "förmildr" );
	deepEqual( Stem("förmildrade"), "förmildr" );
	deepEqual( Stem("förmildrat"), "förmildr" );
	deepEqual( Stem("förminskning"), "förminskning" );
	deepEqual( Stem("förmoda"), "förmod" );
	deepEqual( Stem("förmodade"), "förmod" );
	deepEqual( Stem("förmodan"), "förmodan" );
	deepEqual( Stem("förmodar"), "förmod" );
	deepEqual( Stem("förmodat"), "förmod" );
	deepEqual( Stem("förmodligen"), "förmod" );
	deepEqual( Stem("förmyndare"), "förmynd" );
	deepEqual( Stem("förmyndaren"), "förmynd" );
	deepEqual( Stem("förmän"), "förmän" );
	deepEqual( Stem("förmärka"), "förmärk" );
	deepEqual( Stem("förmärkte"), "förmärk" );
	deepEqual( Stem("förmärs"), "förmär" );
	deepEqual( Stem("förmätet"), "förmätet" );
	deepEqual( Stem("förmätliga"), "förmät" );
	deepEqual( Stem("förmå"), "förmå" );
	deepEqual( Stem("förmådde"), "förmåd" );
	deepEqual( Stem("förmåga"), "förmåg" );
	deepEqual( Stem("förmågan"), "förmågan" );
	deepEqual( Stem("förmål"), "förmål" );
	deepEqual( Stem("förmån"), "förmån" );
	deepEqual( Stem("förmånen"), "förmån" );
	deepEqual( Stem("förmåner"), "förmån" );
	deepEqual( Stem("förmånlig"), "förmån" );
	deepEqual( Stem("förmånliga"), "förmån" );
	deepEqual( Stem("förmånligare"), "förmån" );
	deepEqual( Stem("förmånligast"), "förmån" );
	deepEqual( Stem("förmånligt"), "förmån" );
	deepEqual( Stem("förmår"), "förmår" );
	deepEqual( Stem("förmås"), "förmås" );
	deepEqual( Stem("förmått"), "förmåt" );
	deepEqual( Stem("förmögen"), "förmög" );
	deepEqual( Stem("förmögenhet"), "förmögen" );
	deepEqual( Stem("förmögenheten"), "förmögen" );
	deepEqual( Stem("förmögenheter"), "förmögen" );
	deepEqual( Stem("förmögna"), "förmögn" );
	deepEqual( Stem("förmögnare"), "förmögn" );
	deepEqual( Stem("förmörkar"), "förmörk" );
	deepEqual( Stem("förnam"), "förnam" );
	deepEqual( Stem("förnamn"), "förnamn" );
	deepEqual( Stem("förnedrad"), "förnedr" );
	deepEqual( Stem("förnedrade"), "förnedr" );
	deepEqual( Stem("förnedrande"), "förnedr" );
	deepEqual( Stem("förnedring"), "förnedring" );
	deepEqual( Stem("förneka"), "förnek" );
	deepEqual( Stem("förnekar"), "förnek" );
	deepEqual( Stem("förnimma"), "förnimm" );
	deepEqual( Stem("förnimmelse"), "förnimm" );
	deepEqual( Stem("förnimmelser"), "förnimm" );
	deepEqual( Stem("förning"), "förning" );
	deepEqual( Stem("förnuft"), "förnuft" );
	deepEqual( Stem("förnuftet"), "förnuftet" );
	deepEqual( Stem("förnuftets"), "förnuftet" );
	deepEqual( Stem("förnuftig"), "förnuft" );
	deepEqual( Stem("förnuftiga"), "förnuft" );
	deepEqual( Stem("förnuftigare"), "förnuft" );
	deepEqual( Stem("förnuftigas"), "förnuft" );
	deepEqual( Stem("förnuftigt"), "förnuft" );
	deepEqual( Stem("förnuftsslut"), "förnuftsslut" );
	deepEqual( Stem("förnummit"), "förnummit" );
	deepEqual( Stem("förnummo"), "förnummo" );
	deepEqual( Stem("förnya"), "förny" );
	deepEqual( Stem("förnyad"), "förny" );
	deepEqual( Stem("förnyade"), "förny" );
	deepEqual( Stem("förnyades"), "förny" );
	deepEqual( Stem("förnyas"), "förny" );
	deepEqual( Stem("förnyat"), "förny" );
	deepEqual( Stem("förnäm"), "förnäm" );
	deepEqual( Stem("förnäma"), "förnäm" );
	deepEqual( Stem("förnämare"), "förnäm" );
	deepEqual( Stem("förnämaste"), "förnäm" );
	deepEqual( Stem("förnämhet"), "förnäm" );
	deepEqual( Stem("förnämligast"), "förnäm" );
	deepEqual( Stem("förnämligt"), "förnäm" );
	deepEqual( Stem("förnämsta"), "förnämst" );
	deepEqual( Stem("förnämt"), "förnämt" );
	deepEqual( Stem("förnärmad"), "förnärm" );
	deepEqual( Stem("förnärmat"), "förnärm" );
	deepEqual( Stem("förnödenheter"), "förnöden" );
	deepEqual( Stem("förnöj"), "förnöj" );
	deepEqual( Stem("förnöjd"), "förnöjd" );
	deepEqual( Stem("förnöjda"), "förnöjd" );
	deepEqual( Stem("förnöjde"), "förnöjd" );
	deepEqual( Stem("förnöjdt"), "förnöjd" );
	deepEqual( Stem("förnöjelse"), "förnöj" );
	deepEqual( Stem("förnöjsamhet"), "förnöjsam" );
	deepEqual( Stem("förnöjt"), "förnöjt" );
	deepEqual( Stem("förnötte"), "förnöt" );
	deepEqual( Stem("förolyckade"), "förolyck" );
	deepEqual( Stem("förolyckades"), "förolyck" );
	deepEqual( Stem("förolyckadt"), "förolyckad" );
	deepEqual( Stem("förolämpad"), "förolämp" );
	deepEqual( Stem("förolämpade"), "förolämp" );
	deepEqual( Stem("förolämpar"), "förolämp" );
	deepEqual( Stem("förolämpas"), "förolämp" );
	deepEqual( Stem("förolämpat"), "förolämp" );
	deepEqual( Stem("förolämpning"), "förolämpning" );
	deepEqual( Stem("förolämpningen"), "förolämpning" );
	deepEqual( Stem("förord"), "förord" );
	deepEqual( Stem("förordnande"), "förordn" );
	deepEqual( Stem("förordnandet"), "förordn" );
	deepEqual( Stem("förordnat"), "förordn" );
	deepEqual( Stem("förorsaka"), "förorsak" );
	deepEqual( Stem("förorsakade"), "förorsak" );
	deepEqual( Stem("förorsakat"), "förorsak" );
	deepEqual( Stem("förorättade"), "förorät" );
	deepEqual( Stem("förpestat"), "förpest" );
	deepEqual( Stem("förr"), "förr" );
	deepEqual( Stem("förra"), "förr" );
	deepEqual( Stem("förras"), "förr" );
	deepEqual( Stem("förre"), "förr" );
	deepEqual( Stem("förres"), "förr" );
	deepEqual( Stem("förrgår"), "förrgår" );
	deepEqual( Stem("förringar"), "förring" );
	deepEqual( Stem("förrmak"), "förrmak" );
	deepEqual( Stem("förrstolpiga"), "förrstolp" );
	deepEqual( Stem("förrunne"), "förrun" );
	deepEqual( Stem("förruttnade"), "förruttn" );
	deepEqual( Stem("förruttnelse"), "förruttn" );
	deepEqual( Stem("förryckt"), "förryck" );
	deepEqual( Stem("förryckta"), "förryck" );
	deepEqual( Stem("förräderi"), "förräderi" );
	deepEqual( Stem("förrädisk"), "förrädisk" );
	deepEqual( Stem("förrädiska"), "förrädisk" );
	deepEqual( Stem("förrädiske"), "förrädisk" );
	deepEqual( Stem("förrädiskt"), "förrädisk" );
	deepEqual( Stem("förrän"), "förrän" );
	deepEqual( Stem("förråd"), "förråd" );
	deepEqual( Stem("förråda"), "förråd" );
	deepEqual( Stem("förrådande"), "förråd" );
	deepEqual( Stem("förrådd"), "förråd" );
	deepEqual( Stem("förrådde"), "förråd" );
	deepEqual( Stem("förråder"), "förråd" );
	deepEqual( Stem("förrådskamrar"), "förrådskamr" );
	deepEqual( Stem("förrådt"), "förråd" );
	deepEqual( Stem("förrått"), "förråt" );
	deepEqual( Stem("försagd"), "försag" );
	deepEqual( Stem("försagde"), "försag" );
	deepEqual( Stem("försagt"), "försag" );
	deepEqual( Stem("försaka"), "försak" );
	deepEqual( Stem("försakade"), "försak" );
	deepEqual( Stem("försakar"), "försak" );
	deepEqual( Stem("försakat"), "försak" );
	deepEqual( Stem("försakelse"), "försak" );
	deepEqual( Stem("försakelsen"), "försak" );
	deepEqual( Stem("försakelsens"), "försak" );
	deepEqual( Stem("försakelser"), "försak" );
	deepEqual( Stem("försakrade"), "försakr" );
	deepEqual( Stem("försam"), "försam" );
	deepEqual( Stem("församlade"), "församl" );
	deepEqual( Stem("församladt"), "församlad" );
	deepEqual( Stem("församling"), "församling" );
	deepEqual( Stem("församlingen"), "församling" );
	deepEqual( Stem("församlingens"), "församling" );
	deepEqual( Stem("försatt"), "försat" );
	deepEqual( Stem("försatte"), "försat" );
	deepEqual( Stem("försattes"), "försat" );
	deepEqual( Stem("förse"), "förs" );
	deepEqual( Stem("försedd"), "försed" );
	deepEqual( Stem("försedda"), "försed" );
	deepEqual( Stem("försedt"), "försed" );
	deepEqual( Stem("förseelse"), "förse" );
	deepEqual( Stem("förseglade"), "försegl" );
	deepEqual( Stem("försenad"), "försen" );
	deepEqual( Stem("försett"), "förset" );
	deepEqual( Stem("försiggick"), "försiggick" );
	deepEqual( Stem("försigginge"), "försigging" );
	deepEqual( Stem("försiggingo"), "försiggingo" );
	deepEqual( Stem("försiggår"), "försiggår" );
	deepEqual( Stem("försiggått"), "försiggåt" );
	deepEqual( Stem("försigtig"), "försigt" );
	deepEqual( Stem("försigtighet"), "försigt" );
	deepEqual( Stem("försigtigt"), "försigt" );
	deepEqual( Stem("försik"), "försik" );
	deepEqual( Stem("försiktig"), "försikt" );
	deepEqual( Stem("försiktiga"), "försikt" );
	deepEqual( Stem("försiktighet"), "försikt" );
	deepEqual( Stem("försiktighetsmått"), "försiktighetsmåt" );
	deepEqual( Stem("försiktighetspredikan"), "försiktighetspredikan" );
	deepEqual( Stem("försiktigt"), "försikt" );
	deepEqual( Stem("försiktigtvis"), "försiktigtvis" );
	deepEqual( Stem("försjunka"), "försjunk" );
	deepEqual( Stem("försjunkna"), "försjunkn" );
	deepEqual( Stem("försjönk"), "försjönk" );
	deepEqual( Stem("förskaffade"), "förskaff" );
	deepEqual( Stem("förskaffar"), "förskaff" );
	deepEqual( Stem("förskaffat"), "förskaff" );
	deepEqual( Stem("förskjuten"), "förskjut" );
	deepEqual( Stem("förskjuter"), "förskjut" );
	deepEqual( Stem("förskjutit"), "förskjutit" );
	deepEqual( Stem("förskjutne"), "förskjutn" );
	deepEqual( Stem("förskona"), "förskon" );
	deepEqual( Stem("förskonad"), "förskon" );
	deepEqual( Stem("förskott"), "förskot" );
	deepEqual( Stem("förskrev"), "förskrev" );
	deepEqual( Stem("förskräckelse"), "förskräck" );
	deepEqual( Stem("förskräckes"), "förskräck" );
	deepEqual( Stem("förskräckiigt"), "förskräcki" );
	deepEqual( Stem("förskräcklig"), "förskräck" );
	deepEqual( Stem("förskräckliga"), "förskräck" );
	deepEqual( Stem("förskräckligaste"), "förskräck" );
	deepEqual( Stem("förskräckligt"), "förskräck" );
	deepEqual( Stem("förskräckt"), "förskräck" );
	deepEqual( Stem("förskräckta"), "förskräck" );
	deepEqual( Stem("förskrämd"), "förskrämd" );
	deepEqual( Stem("förskrämda"), "förskrämd" );
	deepEqual( Stem("förskrämt"), "förskrämt" );
	deepEqual( Stem("förskyllan"), "förskyllan" );
	deepEqual( Stem("försköna"), "förskön" );
	deepEqual( Stem("förskönandet"), "förskön" );
	deepEqual( Stem("försköningar"), "försköning" );
	deepEqual( Stem("försköte"), "försköt" );
	deepEqual( Stem("förslag"), "förslag" );
	deepEqual( Stem("förslaget"), "förslaget" );
	deepEqual( Stem("förslagets"), "förslaget" );
	deepEqual( Stem("förslappade"), "förslapp" );
	deepEqual( Stem("förslog"), "förslog" );
	deepEqual( Stem("förslår"), "förslår" );
	deepEqual( Stem("försmak"), "försmak" );
	deepEqual( Stem("försmaken"), "försmak" );
	deepEqual( Stem("försmädelse"), "försmäd" );
	deepEqual( Stem("försmädlig"), "försmäd" );
	deepEqual( Stem("försmädligt"), "försmäd" );
	deepEqual( Stem("försmå"), "försmå" );
	deepEqual( Stem("försmådd"), "försmåd" );
	deepEqual( Stem("försmådda"), "försmåd" );
	deepEqual( Stem("försmådde"), "försmåd" );
	deepEqual( Stem("försmår"), "försmår" );
	deepEqual( Stem("försmått"), "försmåt" );
	deepEqual( Stem("försoffas"), "försoff" );
	deepEqual( Stem("försofva"), "försofv" );
	deepEqual( Stem("försoka"), "försok" );
	deepEqual( Stem("försona"), "förson" );
	deepEqual( Stem("försonad"), "förson" );
	deepEqual( Stem("försonade"), "förson" );
	deepEqual( Stem("försonande"), "förson" );
	deepEqual( Stem("försonat"), "förson" );
	deepEqual( Stem("försoning"), "försoning" );
	deepEqual( Stem("försoningen"), "försoning" );
	deepEqual( Stem("försoningsfanan"), "försoningsfanan" );
	deepEqual( Stem("försonligt"), "förson" );
	deepEqual( Stem("försorg"), "försorg" );
	deepEqual( Stem("försover"), "försov" );
	deepEqual( Stem("förspeglingen"), "förspegling" );
	deepEqual( Stem("förspelet"), "förspelet" );
	deepEqual( Stem("förspildt"), "förspild" );
	deepEqual( Stem("förspilla"), "förspill" );
	deepEqual( Stem("förspilld"), "förspilld" );
	deepEqual( Stem("förspillda"), "förspilld" );
	deepEqual( Stem("förspilt"), "förspilt" );
	deepEqual( Stem("förspordes"), "förspord" );
	deepEqual( Stem("försprång"), "försprång" );
	deepEqual( Stem("förspända"), "förspänd" );
	deepEqual( Stem("förspänt"), "förspänt" );
	deepEqual( Stem("först"), "först" );
	deepEqual( Stem("första"), "först" );
	deepEqual( Stem("förstadsgata"), "förstadsgat" );
	deepEqual( Stem("förstar"), "först" );
	deepEqual( Stem("förstas"), "först" );
	deepEqual( Stem("förstasida"), "förstasid" );
	deepEqual( Stem("förste"), "först" );
	deepEqual( Stem("förstenad"), "försten" );
	deepEqual( Stem("förstenade"), "försten" );
	deepEqual( Stem("förstfödde"), "förstföd" );
	deepEqual( Stem("förstfödslorätt"), "förstfödslorät" );
	deepEqual( Stem("förstklassigt"), "förstklass" );
	deepEqual( Stem("förstkommande"), "förstkomm" );
	deepEqual( Stem("förstnämda"), "förstnämd" );
	deepEqual( Stem("förstod"), "förstod" );
	deepEqual( Stem("förstodo"), "förstodo" );
	deepEqual( Stem("förstorad"), "förstor" );
	deepEqual( Stem("förstorade"), "förstor" );
	deepEqual( Stem("förstorades"), "förstor" );
	deepEqual( Stem("försträcka"), "försträck" );
	deepEqual( Stem("försträckte"), "försträck" );
	deepEqual( Stem("förströ"), "förströ" );
	deepEqual( Stem("förströdd"), "förströd" );
	deepEqual( Stem("förströelse"), "förströ" );
	deepEqual( Stem("förströelser"), "förströ" );
	deepEqual( Stem("förströs"), "förströs" );
	deepEqual( Stem("förstrött"), "förströt" );
	deepEqual( Stem("förstubro"), "förstubro" );
	deepEqual( Stem("förstucken"), "förstuck" );
	deepEqual( Stem("förstudörrn"), "förstudörrn" );
	deepEqual( Stem("förstuga"), "förstug" );
	deepEqual( Stem("förstugan"), "förstugan" );
	deepEqual( Stem("förstugkvisten"), "förstugkvist" );
	deepEqual( Stem("förstugubron"), "förstugubron" );
	deepEqual( Stem("förstugudörren"), "förstugudörr" );
	deepEqual( Stem("förstuguqvistarne"), "förstuguqvist" );
	deepEqual( Stem("förstuguqvisten"), "förstuguqvist" );
	deepEqual( Stem("förstulen"), "förstul" );
	deepEqual( Stem("förstulet"), "förstulet" );
	deepEqual( Stem("förstulna"), "förstuln" );
	deepEqual( Stem("förstummad"), "förstumm" );
	deepEqual( Stem("förstummades"), "förstumm" );
	deepEqual( Stem("förstälda"), "förstäld" );
	deepEqual( Stem("förställa"), "förställ" );
	deepEqual( Stem("förställd"), "förställd" );
	deepEqual( Stem("förställda"), "förställd" );
	deepEqual( Stem("förställing"), "förställing" );
	deepEqual( Stem("förställning"), "förställning" );
	deepEqual( Stem("förstämd"), "förstämd" );
	deepEqual( Stem("förstämda"), "förstämd" );
	deepEqual( Stem("förständiga"), "förständ" );
	deepEqual( Stem("förstärka"), "förstärk" );
	deepEqual( Stem("förstärkt"), "förstärk" );
	deepEqual( Stem("förstå"), "förstå" );
	deepEqual( Stem("förståelse"), "förstå" );
	deepEqual( Stem("förstående"), "förståend" );
	deepEqual( Stem("förstånd"), "förstånd" );
	deepEqual( Stem("förståndet"), "förståndet" );
	deepEqual( Stem("förståndets"), "förståndet" );
	deepEqual( Stem("förståndig"), "förstånd" );
	deepEqual( Stem("förståndiga"), "förstånd" );
	deepEqual( Stem("förståndigare"), "förstånd" );
	deepEqual( Stem("förståndigt"), "förstånd" );
	deepEqual( Stem("förstår"), "förstår" );
	deepEqual( Stem("förstås"), "förstås" );
	deepEqual( Stem("förstått"), "förståt" );
	deepEqual( Stem("förstör"), "förstör" );
	deepEqual( Stem("förstöra"), "förstör" );
	deepEqual( Stem("förstörande"), "förstör" );
	deepEqual( Stem("förstörd"), "förstörd" );
	deepEqual( Stem("förstörda"), "förstörd" );
	deepEqual( Stem("förstörde"), "förstörd" );
	deepEqual( Stem("förstörelsen"), "förstör" );
	deepEqual( Stem("förstörs"), "förstör" );
	deepEqual( Stem("förstört"), "förstört" );
	deepEqual( Stem("försumlighet"), "försum" );
	deepEqual( Stem("försumma"), "försumm" );
	deepEqual( Stem("försummade"), "försumm" );
	deepEqual( Stem("försummadt"), "försummad" );
	deepEqual( Stem("försummas"), "försumm" );
	deepEqual( Stem("försummat"), "försumm" );
	deepEqual( Stem("försummelse"), "försumm" );
	deepEqual( Stem("försupen"), "försup" );
	deepEqual( Stem("försupna"), "försupn" );
	deepEqual( Stem("försutten"), "försut" );
	deepEqual( Stem("försvaga"), "försvag" );
	deepEqual( Stem("försvagad"), "försvag" );
	deepEqual( Stem("försvagade"), "försvag" );
	deepEqual( Stem("försvagat"), "försvag" );
	deepEqual( Stem("försvann"), "försvan" );
	deepEqual( Stem("försvar"), "försv" );
	deepEqual( Stem("försvara"), "försvar" );
	deepEqual( Stem("försvarade"), "försvar" );
	deepEqual( Stem("försvarare"), "försvar" );
	deepEqual( Stem("försvarligt"), "försvar" );
	deepEqual( Stem("försvinna"), "försvin" );
	deepEqual( Stem("försvinnande"), "försvin" );
	deepEqual( Stem("försvinner"), "försvin" );
	deepEqual( Stem("försvunn"), "försvun" );
	deepEqual( Stem("försvunna"), "försvun" );
	deepEqual( Stem("försvunne"), "försvun" );
	deepEqual( Stem("försvunnen"), "försvun" );
	deepEqual( Stem("försvunnet"), "försvunnet" );
	deepEqual( Stem("försvunnit"), "försvunnit" );
	deepEqual( Stem("försvunno"), "försvunno" );
	deepEqual( Stem("försyn"), "försyn" );
	deepEqual( Stem("försynen"), "försyn" );
	deepEqual( Stem("försäkra"), "försäkr" );
	deepEqual( Stem("försäkrade"), "försäkr" );
	deepEqual( Stem("försäkran"), "försäkran" );
	deepEqual( Stem("försäkrar"), "försäkr" );
	deepEqual( Stem("försäkrat"), "försäkr" );
	deepEqual( Stem("försäkringar"), "försäkring" );
	deepEqual( Stem("försäljarna"), "försälj" );
	deepEqual( Stem("försäljning"), "försäljning" );
	deepEqual( Stem("försände"), "försänd" );
	deepEqual( Stem("försätta"), "försät" );
	deepEqual( Stem("försåtligt"), "försåt" );
	deepEqual( Stem("försök"), "försök" );
	deepEqual( Stem("försöka"), "försök" );
	deepEqual( Stem("försöker"), "försök" );
	deepEqual( Stem("försöket"), "försöket" );
	deepEqual( Stem("försökt"), "försök" );
	deepEqual( Stem("försökte"), "försök" );
	deepEqual( Stem("försörjningsinrättningar"), "försörjningsinrättning" );
	deepEqual( Stem("fört"), "fört" );
	deepEqual( Stem("förtaga"), "förtag" );
	deepEqual( Stem("förtager"), "förtag" );
	deepEqual( Stem("förtagit"), "förtagit" );
	deepEqual( Stem("förtal"), "förtal" );
	deepEqual( Stem("förtala"), "förtal" );
	deepEqual( Stem("förteg"), "förteg" );
	deepEqual( Stem("förtegat"), "förteg" );
	deepEqual( Stem("förteget"), "förteget" );
	deepEqual( Stem("förtid"), "förtid" );
	deepEqual( Stem("förtiga"), "fört" );
	deepEqual( Stem("förtigas"), "fört" );
	deepEqual( Stem("förtjena"), "förtjen" );
	deepEqual( Stem("förtjenar"), "förtjen" );
	deepEqual( Stem("förtjenst"), "förtjenst" );
	deepEqual( Stem("förtjensten"), "förtjenst" );
	deepEqual( Stem("förtjenster"), "förtjenst" );
	deepEqual( Stem("förtjenstfull"), "förtjenstfull" );
	deepEqual( Stem("förtjenstfullare"), "förtjenstfull" );
	deepEqual( Stem("förtjent"), "förtjent" );
	deepEqual( Stem("förtjusande"), "förtjus" );
	deepEqual( Stem("förtjusning"), "förtjusning" );
	deepEqual( Stem("förtjust"), "förtjust" );
	deepEqual( Stem("förtjusta"), "förtjust" );
	deepEqual( Stem("förtjuste"), "förtjust" );
	deepEqual( Stem("förtjäna"), "förtjän" );
	deepEqual( Stem("förtjänade"), "förtjän" );
	deepEqual( Stem("förtjänar"), "förtjän" );
	deepEqual( Stem("förtjänst"), "förtjänst" );
	deepEqual( Stem("förtjänster"), "förtjänst" );
	deepEqual( Stem("förtjänstfulla"), "förtjänstfull" );
	deepEqual( Stem("förtjänstfullt"), "förtjänstfull" );
	deepEqual( Stem("förtjänt"), "förtjänt" );
	deepEqual( Stem("förtjänte"), "förtjänt" );
	deepEqual( Stem("förtoppen"), "förtopp" );
	deepEqual( Stem("förtorkade"), "förtork" );
	deepEqual( Stem("förtret"), "förtret" );
	deepEqual( Stem("förtreta"), "förtret" );
	deepEqual( Stem("förtretad"), "förtret" );
	deepEqual( Stem("förtretat"), "förtret" );
	deepEqual( Stem("förtreten"), "förtret" );
	deepEqual( Stem("förtreter"), "förtret" );
	deepEqual( Stem("förtretliga"), "förtret" );
	deepEqual( Stem("förtretlighet"), "förtret" );
	deepEqual( Stem("förtretligheter"), "förtret" );
	deepEqual( Stem("förtro"), "förtro" );
	deepEqual( Stem("förtrodde"), "förtrod" );
	deepEqual( Stem("förtroende"), "förtroend" );
	deepEqual( Stem("förtroendebefattningar"), "förtroendebefattning" );
	deepEqual( Stem("förtroendefullt"), "förtroendefull" );
	deepEqual( Stem("förtroenden"), "förtroend" );
	deepEqual( Stem("förtroendet"), "förtroendet" );
	deepEqual( Stem("förtroendeväckande"), "förtroendeväck" );
	deepEqual( Stem("förtrogen"), "förtrog" );
	deepEqual( Stem("förtrogna"), "förtrogn" );
	deepEqual( Stem("förtrogne"), "förtrogn" );
	deepEqual( Stem("förtrolig"), "förtro" );
	deepEqual( Stem("förtroliga"), "förtro" );
	deepEqual( Stem("förtroligare"), "förtro" );
	deepEqual( Stem("förtroligaste"), "förtro" );
	deepEqual( Stem("förtrolighet"), "förtro" );
	deepEqual( Stem("förtroligheten"), "förtro" );
	deepEqual( Stem("förtroligt"), "förtro" );
	deepEqual( Stem("förtrolla"), "förtroll" );
	deepEqual( Stem("förtrollade"), "förtroll" );
	deepEqual( Stem("förtrollades"), "förtroll" );
	deepEqual( Stem("förtrollande"), "förtroll" );
	deepEqual( Stem("förtrollat"), "förtroll" );
	deepEqual( Stem("förtrollats"), "förtrollat" );
	deepEqual( Stem("förtrollerska"), "förtrollersk" );
	deepEqual( Stem("förtrollning"), "förtrollning" );
	deepEqual( Stem("förtror"), "förtr" );
	deepEqual( Stem("förtrott"), "förtrot" );
	deepEqual( Stem("förtrytelse"), "förtryt" );
	deepEqual( Stem("förtrytelsen"), "förtryt" );
	deepEqual( Stem("förtrytelsens"), "förtryt" );
	deepEqual( Stem("förtryter"), "förtryt" );
	deepEqual( Stem("förtrytsamt"), "förtrytsamt" );
	deepEqual( Stem("förträfflig"), "förträff" );
	deepEqual( Stem("förträffliga"), "förträff" );
	deepEqual( Stem("förträffligaste"), "förträff" );
	deepEqual( Stem("förträfflige"), "förträff" );
	deepEqual( Stem("förträffligt"), "förträff" );
	deepEqual( Stem("förtrösta"), "förtröst" );
	deepEqual( Stem("förtröstan"), "förtröstan" );
	deepEqual( Stem("förtröstande"), "förtröst" );
	deepEqual( Stem("förtröstansfullt"), "förtröstansfull" );
	deepEqual( Stem("förtröstar"), "förtröst" );
	deepEqual( Stem("förtröt"), "förtröt" );
	deepEqual( Stem("förts"), "fört" );
	deepEqual( Stem("förtunnades"), "förtun" );
	deepEqual( Stem("förtvifladt"), "förtviflad" );
	deepEqual( Stem("förtviflan"), "förtviflan" );
	deepEqual( Stem("förtvina"), "förtvin" );
	deepEqual( Stem("förtvivlad"), "förtvivl" );
	deepEqual( Stem("förtvivlade"), "förtvivl" );
	deepEqual( Stem("förtvivlan"), "förtvivlan" );
	deepEqual( Stem("förtvivlat"), "förtvivl" );
	deepEqual( Stem("förty"), "förty" );
	deepEqual( Stem("förtäckta"), "förtäck" );
	deepEqual( Stem("förtälja"), "förtälj" );
	deepEqual( Stem("förtäljde"), "förtäljd" );
	deepEqual( Stem("förtäljer"), "förtälj" );
	deepEqual( Stem("förtäljt"), "förtäljt" );
	deepEqual( Stem("förtära"), "förtär" );
	deepEqual( Stem("förtärande"), "förtär" );
	deepEqual( Stem("förtärd"), "förtärd" );
	deepEqual( Stem("förtärde"), "förtärd" );
	deepEqual( Stem("förtärdes"), "förtärd" );
	deepEqual( Stem("förtärs"), "förtär" );
	deepEqual( Stem("förtätade"), "förtät" );
	deepEqual( Stem("förtöjd"), "förtöjd" );
	deepEqual( Stem("förtörd"), "förtörd" );
	deepEqual( Stem("förtörnad"), "förtörn" );
	deepEqual( Stem("förunderlig"), "förunder" );
	deepEqual( Stem("förunderliga"), "förunder" );
	deepEqual( Stem("förundra"), "förundr" );
	deepEqual( Stem("förundrad"), "förundr" );
	deepEqual( Stem("förundrade"), "förundr" );
	deepEqual( Stem("förundran"), "förundran" );
	deepEqual( Stem("förundrar"), "förundr" );
	deepEqual( Stem("förunnat"), "förun" );
	deepEqual( Stem("förut"), "förut" );
	deepEqual( Stem("förutsatt"), "förutsat" );
	deepEqual( Stem("förutse"), "föruts" );
	deepEqual( Stem("förutser"), "föruts" );
	deepEqual( Stem("förutses"), "föruts" );
	deepEqual( Stem("förutsett"), "förutset" );
	deepEqual( Stem("förutsätter"), "förutsät" );
	deepEqual( Stem("förutsättningen"), "förutsättning" );
	deepEqual( Stem("förvanad"), "förvan" );
	deepEqual( Stem("förvandla"), "förvandl" );
	deepEqual( Stem("förvandlad"), "förvandl" );
	deepEqual( Stem("förvandlade"), "förvandl" );
	deepEqual( Stem("förvandlades"), "förvandl" );
	deepEqual( Stem("förvandlande"), "förvandl" );
	deepEqual( Stem("förvandlar"), "förvandl" );
	deepEqual( Stem("förvandlas"), "förvandl" );
	deepEqual( Stem("förvandlat"), "förvandl" );
	deepEqual( Stem("förvandling"), "förvandling" );
	deepEqual( Stem("förvandlingen"), "förvandling" );
	deepEqual( Stem("förvandlingens"), "förvandling" );
	deepEqual( Stem("förvandlingsverk"), "förvandlingsverk" );
	deepEqual( Stem("förvar"), "förv" );
	deepEqual( Stem("förvara"), "förvar" );
	deepEqual( Stem("förvarade"), "förvar" );
	deepEqual( Stem("förvarades"), "förvar" );
	deepEqual( Stem("förvarar"), "förvar" );
	deepEqual( Stem("förvaras"), "förvar" );
	deepEqual( Stem("förvarat"), "förvar" );
	deepEqual( Stem("förvaringsrum"), "förvaringsrum" );
	deepEqual( Stem("förverkligas"), "förverk" );
	deepEqual( Stem("förvildade"), "förvild" );
	deepEqual( Stem("förvilla"), "förvill" );
	deepEqual( Stem("förvillade"), "förvill" );
	deepEqual( Stem("förvillande"), "förvill" );
	deepEqual( Stem("förvillas"), "förvill" );
	deepEqual( Stem("förvillelse"), "förvill" );
	deepEqual( Stem("förvirrad"), "förvirr" );
	deepEqual( Stem("förvirradc"), "förvirradc" );
	deepEqual( Stem("förvirrade"), "förvirr" );
	deepEqual( Stem("förvirrande"), "förvirr" );
	deepEqual( Stem("förvirras"), "förvirr" );
	deepEqual( Stem("förvirrat"), "förvirr" );
	deepEqual( Stem("förvirring"), "förvirring" );
	deepEqual( Stem("förvirringen"), "förvirring" );
	deepEqual( Stem("förvisad"), "förvis" );
	deepEqual( Stem("förvissa"), "förviss" );
	deepEqual( Stem("förvissad"), "förviss" );
	deepEqual( Stem("förvissade"), "förviss" );
	deepEqual( Stem("förvissar"), "förviss" );
	deepEqual( Stem("förvissat"), "förviss" );
	deepEqual( Stem("förvisso"), "förvisso" );
	deepEqual( Stem("förvreds"), "förvred" );
	deepEqual( Stem("förvrida"), "förvrid" );
	deepEqual( Stem("förvriden"), "förvrid" );
	deepEqual( Stem("förvridet"), "förvridet" );
	deepEqual( Stem("förvridna"), "förvridn" );
	deepEqual( Stem("förvrängd"), "förvräng" );
	deepEqual( Stem("förvägna"), "förvägn" );
	deepEqual( Stem("förvälvas"), "förvälv" );
	deepEqual( Stem("förvänad"), "förvän" );
	deepEqual( Stem("förvänd"), "förvänd" );
	deepEqual( Stem("förväntan"), "förväntan" );
	deepEqual( Stem("förväntansfull"), "förväntansfull" );
	deepEqual( Stem("förväntansfulla"), "förväntansfull" );
	deepEqual( Stem("förväntningar"), "förväntning" );
	deepEqual( Stem("förvärfva"), "förvärfv" );
	deepEqual( Stem("förvärfvade"), "förvärfv" );
	deepEqual( Stem("förvärfvadt"), "förvärfvad" );
	deepEqual( Stem("förvärfvat"), "förvärfv" );
	deepEqual( Stem("förvärrar"), "förvärr" );
	deepEqual( Stem("förvärva"), "förvärv" );
	deepEqual( Stem("förvärvad"), "förvärv" );
	deepEqual( Stem("förvärvade"), "förvärv" );
	deepEqual( Stem("förvärvat"), "förvärv" );
	deepEqual( Stem("förvärvt"), "förvärvt" );
	deepEqual( Stem("förväxling"), "förväxling" );
	deepEqual( Stem("förvåna"), "förvån" );
	deepEqual( Stem("förvånad"), "förvån" );
	deepEqual( Stem("förvånade"), "förvån" );
	deepEqual( Stem("förvånades"), "förvån" );
	deepEqual( Stem("förvånande"), "förvån" );
	deepEqual( Stem("förvånar"), "förvån" );
	deepEqual( Stem("förvånat"), "förvån" );
	deepEqual( Stem("förvåning"), "förvåning" );
	deepEqual( Stem("förvånint"), "förvånint" );
	deepEqual( Stem("förvåren"), "förvår" );
	deepEqual( Stem("föryngrad"), "föryngr" );
	deepEqual( Stem("förädlande"), "förädl" );
	deepEqual( Stem("förädlar"), "förädl" );
	deepEqual( Stem("föräldragården"), "föräldragård" );
	deepEqual( Stem("föräldralösa"), "föräldralös" );
	deepEqual( Stem("föräldralöst"), "föräldralös" );
	deepEqual( Stem("föräldrar"), "föräldr" );
	deepEqual( Stem("föräldrarna"), "föräldr" );
	deepEqual( Stem("föräldrarnas"), "föräldr" );
	deepEqual( Stem("föräldrarne"), "föräldr" );
	deepEqual( Stem("föräldrars"), "föräldrar" );
	deepEqual( Stem("förälskad"), "förälsk" );
	deepEqual( Stem("förälskade"), "förälsk" );
	deepEqual( Stem("förälskat"), "förälsk" );
	deepEqual( Stem("förälskelse"), "förälsk" );
	deepEqual( Stem("föränderlighet"), "föränder" );
	deepEqual( Stem("förändra"), "förändr" );
	deepEqual( Stem("förändrad"), "förändr" );
	deepEqual( Stem("förändrades"), "förändr" );
	deepEqual( Stem("förändras"), "förändr" );
	deepEqual( Stem("förändrat"), "förändr" );
	deepEqual( Stem("förändring"), "förändring" );
	deepEqual( Stem("förändringar"), "förändring" );
	deepEqual( Stem("förändringen"), "förändring" );
	deepEqual( Stem("förärat"), "förär" );
	deepEqual( Stem("föråldrad"), "föråldr" );
	deepEqual( Stem("föråldrade"), "föråldr" );
	deepEqual( Stem("föråldrat"), "föråldr" );
	deepEqual( Stem("förödd"), "föröd" );
	deepEqual( Stem("förödda"), "föröd" );
	deepEqual( Stem("förödelsen"), "föröd" );
	deepEqual( Stem("förödelsens"), "föröd" );
	deepEqual( Stem("förödmjuka"), "förödmjuk" );
	deepEqual( Stem("förödmjukad"), "förödmjuk" );
	deepEqual( Stem("förödmjukande"), "förödmjuk" );
	deepEqual( Stem("förödmjukelse"), "förödmjuk" );
	deepEqual( Stem("förödmjukelser"), "förödmjuk" );
	deepEqual( Stem("förökat"), "förök" );
	deepEqual( Stem("förökning"), "förökning" );
	deepEqual( Stem("förövas"), "föröv" );
	deepEqual( Stem("fösa"), "fös" );
	deepEqual( Stem("fött"), "fött" );
	deepEqual( Stem("föttcrna"), "föttcrn" );
	deepEqual( Stem("fötter"), "fött" );
	deepEqual( Stem("fötterna"), "fött" );
	deepEqual( Stem("fötts"), "fött" );
	deepEqual( Stem("g"), "g" );
	deepEqual( Stem("ga"), "ga" );
	deepEqual( Stem("gabriel"), "gabriel" );
	deepEqual( Stem("gabriella"), "gabriell" );
	deepEqual( Stem("gabriellas"), "gabriell" );
	deepEqual( Stem("gadd"), "gadd" );
	deepEqual( Stem("gaf"), "gaf" );
	deepEqual( Stem("gaffel"), "gaffel" );
	deepEqual( Stem("gafflar"), "gaffl" );
	deepEqual( Stem("gafflarna"), "gaffl" );
	deepEqual( Stem("gafs"), "gaf" );
	deepEqual( Stem("gafvel"), "gafvel" );
	deepEqual( Stem("gafvelkammaren"), "gafvelkamm" );
	deepEqual( Stem("gafveln"), "gafveln" );
	deepEqual( Stem("gagn"), "gagn" );
	deepEqual( Stem("gagna"), "gagn" );
	deepEqual( Stem("gagnade"), "gagn" );
	deepEqual( Stem("gagnar"), "gagn" );
	deepEqual( Stem("gagnat"), "gagn" );
	deepEqual( Stem("gagne"), "gagn" );
	deepEqual( Stem("gagneligast"), "gagne" );
	deepEqual( Stem("gagnlöst"), "gagnlös" );
	deepEqual( Stem("gagns"), "gagn" );
	deepEqual( Stem("galanerna"), "galan" );
	deepEqual( Stem("galant"), "galant" );
	deepEqual( Stem("galanta"), "galant" );
	deepEqual( Stem("galanteri"), "galanteri" );
	deepEqual( Stem("galeas"), "gale" );
	deepEqual( Stem("galeasen"), "galeas" );
	deepEqual( Stem("galen"), "gal" );
	deepEqual( Stem("galenskap"), "galenskap" );
	deepEqual( Stem("galenskaper"), "galenskap" );
	deepEqual( Stem("galet"), "galet" );
	deepEqual( Stem("galgen"), "galg" );
	deepEqual( Stem("galjonsbilder"), "galjonsbild" );
	deepEqual( Stem("gall"), "gall" );
	deepEqual( Stem("gallans"), "gallan" );
	deepEqual( Stem("galleri"), "galleri" );
	deepEqual( Stem("galleriet"), "galleriet" );
	deepEqual( Stem("gallerna"), "gall" );
	deepEqual( Stem("gallfeber"), "gallfeb" );
	deepEqual( Stem("gallhumlen"), "gallhuml" );
	deepEqual( Stem("gallhöna"), "gallhön" );
	deepEqual( Stem("gallimatias"), "gallimati" );
	deepEqual( Stem("galliska"), "gallisk" );
	deepEqual( Stem("gallko"), "gallko" );
	deepEqual( Stem("gallret"), "gallret" );
	deepEqual( Stem("gallskrek"), "gallskrek" );
	deepEqual( Stem("gallsteklar"), "gallstekl" );
	deepEqual( Stem("galläpplen"), "galläppl" );
	deepEqual( Stem("galna"), "galn" );
	deepEqual( Stem("galning"), "galning" );
	deepEqual( Stem("galningar"), "galning" );
	deepEqual( Stem("galningen"), "galning" );
	deepEqual( Stem("galopp"), "galopp" );
	deepEqual( Stem("galoppera"), "galopper" );
	deepEqual( Stem("galoscher"), "galosch" );
	deepEqual( Stem("galoschmakarna"), "galoschmak" );
	deepEqual( Stem("galtar"), "galt" );
	deepEqual( Stem("gam"), "gam" );
	deepEqual( Stem("gamla"), "gaml" );
	deepEqual( Stem("gamlas"), "gaml" );
	deepEqual( Stem("gamle"), "gaml" );
	deepEqual( Stem("gamles"), "gaml" );
	deepEqual( Stem("gamma"), "gamm" );
	deepEqual( Stem("gammal"), "gammal" );
	deepEqual( Stem("gammaldags"), "gammaldag" );
	deepEqual( Stem("gammalklok"), "gammalklok" );
	deepEqual( Stem("gammalmodiga"), "gammalmod" );
	deepEqual( Stem("gammalstafvar"), "gammalstafv" );
	deepEqual( Stem("gammalstavad"), "gammalstav" );
	deepEqual( Stem("gammalsven"), "gammalsv" );
	deepEqual( Stem("gammalt"), "gammalt" );
	deepEqual( Stem("gamman"), "gamman" );
	deepEqual( Stem("gande"), "gand" );
	deepEqual( Stem("gang"), "gang" );
	deepEqual( Stem("gangen"), "gang" );
	deepEqual( Stem("ganger"), "gang" );
	deepEqual( Stem("ganska"), "gansk" );
	deepEqual( Stem("gap"), "gap" );
	deepEqual( Stem("gapa"), "gap" );
	deepEqual( Stem("gapade"), "gap" );
	deepEqual( Stem("gapande"), "gap" );
	deepEqual( Stem("gapar"), "gap" );
	deepEqual( Stem("gapet"), "gapet" );
	deepEqual( Stem("gapskratt"), "gapskrat" );
	deepEqual( Stem("gapskratta"), "gapskrat" );
	deepEqual( Stem("gapskrattar"), "gapskrat" );
	deepEqual( Stem("gar"), "gar" );
	deepEqual( Stem("garcon"), "garcon" );
	deepEqual( Stem("gard"), "gard" );
	deepEqual( Stem("garde"), "gard" );
	deepEqual( Stem("garden"), "gard" );
	deepEqual( Stem("garderoben"), "garderob" );
	deepEqual( Stem("gardin"), "gardin" );
	deepEqual( Stem("gardinen"), "gardin" );
	deepEqual( Stem("gardiner"), "gardin" );
	deepEqual( Stem("gardinerna"), "gardin" );
	deepEqual( Stem("gardinstyger"), "gardinstyg" );
	deepEqual( Stem("gardintyg"), "gardintyg" );
	deepEqual( Stem("gardintyget"), "gardintyget" );
	deepEqual( Stem("gards"), "gard" );
	deepEqual( Stem("gardsplanen"), "gardsplan" );
	deepEqual( Stem("garibaldi"), "garibaldi" );
	deepEqual( Stem("garmla"), "garml" );
	deepEqual( Stem("garn"), "garn" );
	deepEqual( Stem("garna"), "garn" );
	deepEqual( Stem("garnerad"), "garner" );
	deepEqual( Stem("garnerade"), "garner" );
	deepEqual( Stem("garnet"), "garnet" );
	deepEqual( Stem("garnvindan"), "garnvindan" );
	deepEqual( Stem("garnvindor"), "garnvind" );
	deepEqual( Stem("garvade"), "garv" );
	deepEqual( Stem("gasblossen"), "gasbloss" );
	deepEqual( Stem("gasell"), "gasell" );
	deepEqual( Stem("gasförgiftade"), "gasförgift" );
	deepEqual( Stem("gaslykta"), "gaslyk" );
	deepEqual( Stem("gaslyktan"), "gaslyktan" );
	deepEqual( Stem("gaslyktor"), "gaslyk" );
	deepEqual( Stem("gaslyktorna"), "gaslyk" );
	deepEqual( Stem("gaspedalen"), "gaspedal" );
	deepEqual( Stem("gasrampen"), "gasramp" );
	deepEqual( Stem("gasrör"), "gasrör" );
	deepEqual( Stem("gasskyarna"), "gassky" );
	deepEqual( Stem("gasverket"), "gasverket" );
	deepEqual( Stem("gata"), "gat" );
	deepEqual( Stem("gatan"), "gatan" );
	deepEqual( Stem("gatans"), "gatan" );
	deepEqual( Stem("gatfulla"), "gatfull" );
	deepEqual( Stem("gathörn"), "gathörn" );
	deepEqual( Stem("gathörnet"), "gathörnet" );
	deepEqual( Stem("gatlyktorna"), "gatlyk" );
	deepEqual( Stem("gatläggningen"), "gatläggning" );
	deepEqual( Stem("gator"), "gat" );
	deepEqual( Stem("gatorna"), "gat" );
	deepEqual( Stem("gatsopare"), "gatsop" );
	deepEqual( Stem("gatstrykerskorna"), "gatstrykersk" );
	deepEqual( Stem("gatt"), "gatt" );
	deepEqual( Stem("gatukorset"), "gatukorset" );
	deepEqual( Stem("gatukorsning"), "gatukorsning" );
	deepEqual( Stem("gav"), "gav" );
	deepEqual( Stem("gavelrum"), "gavelrum" );
	deepEqual( Stem("gavo"), "gavo" );
	deepEqual( Stem("gavs"), "gav" );
	deepEqual( Stem("gcstalt"), "gcstalt" );
	deepEqual( Stem("gcting"), "gcting" );
	deepEqual( Stem("ge"), "ge" );
	deepEqual( Stem("gebitet"), "gebitet" );
	deepEqual( Stem("gedigen"), "ged" );
	deepEqual( Stem("gedigna"), "gedign" );
	deepEqual( Stem("gehör"), "gehör" );
	deepEqual( Stem("gela"), "gel" );
	deepEqual( Stem("gelatinkapslar"), "gelatinkapsl" );
	deepEqual( Stem("gele"), "gel" );
	deepEqual( Stem("gelikar"), "gelik" );
	deepEqual( Stem("geln"), "geln" );
	deepEqual( Stem("gemen"), "gem" );
	deepEqual( Stem("gemena"), "gemen" );
	deepEqual( Stem("gemene"), "gemen" );
	deepEqual( Stem("gemenliga"), "gemen" );
	deepEqual( Stem("gemenligen"), "gemen" );
	deepEqual( Stem("gemensam"), "gemensam" );
	deepEqual( Stem("gemensamma"), "gemensamm" );
	deepEqual( Stem("gemensamt"), "gemensamt" );
	deepEqual( Stem("gemenskap"), "gemenskap" );
	deepEqual( Stem("gemenskapen"), "gemenskap" );
	deepEqual( Stem("gement"), "gement" );
	deepEqual( Stem("gemnälde"), "gemnäld" );
	deepEqual( Stem("gemyt"), "gemyt" );
	deepEqual( Stem("gemytlig"), "gemyt" );
	deepEqual( Stem("gemytliga"), "gemyt" );
	deepEqual( Stem("gemål"), "gemål" );
	deepEqual( Stem("gen"), "gen" );
	deepEqual( Stem("genast"), "gen" );
	deepEqual( Stem("genealogi"), "genealogi" );
	deepEqual( Stem("generad"), "gener" );
	deepEqual( Stem("generade"), "gener" );
	deepEqual( Stem("generalkonsuler"), "generalkonsul" );
	deepEqual( Stem("generalmajor"), "generalmaj" );
	deepEqual( Stem("generar"), "gener" );
	deepEqual( Stem("generat"), "gener" );
	deepEqual( Stem("generation"), "generation" );
	deepEqual( Stem("generationer"), "generation" );
	deepEqual( Stem("generations"), "generation" );
	deepEqual( Stem("gengäld"), "gengäld" );
	deepEqual( Stem("geni"), "geni" );
	deepEqual( Stem("genier"), "geni" );
	deepEqual( Stem("genljud"), "genljud" );
	deepEqual( Stem("genljöd"), "genljöd" );
	deepEqual( Stem("genmälte"), "genmält" );
	deepEqual( Stem("genom"), "genom" );
	deepEqual( Stem("genomborrande"), "genomborr" );
	deepEqual( Stem("genombrutna"), "genombrutn" );
	deepEqual( Stem("genombröto"), "genombröto" );
	deepEqual( Stem("genomdrifva"), "genomdrifv" );
	deepEqual( Stem("genomflög"), "genomflög" );
	deepEqual( Stem("genomfor"), "genomf" );
	deepEqual( Stem("genomgick"), "genomgick" );
	deepEqual( Stem("genomgingo"), "genomgingo" );
	deepEqual( Stem("genomgå"), "genomgå" );
	deepEqual( Stem("genomgåendet"), "genomgåendet" );
	deepEqual( Stem("genomgången"), "genomgång" );
	deepEqual( Stem("genomgår"), "genomgår" );
	deepEqual( Stem("genomgått"), "genomgåt" );
	deepEqual( Stem("genomhederlig"), "genomheder" );
	deepEqual( Stem("genomila"), "genomil" );
	deepEqual( Stem("genomlefvat"), "genomlefv" );
	deepEqual( Stem("genomletade"), "genomlet" );
	deepEqual( Stem("genomlidit"), "genomlidit" );
	deepEqual( Stem("genompryglade"), "genomprygl" );
	deepEqual( Stem("genomse"), "genoms" );
	deepEqual( Stem("genomskimrad"), "genomskimr" );
	deepEqual( Stem("genomskinlig"), "genomskin" );
	deepEqual( Stem("genomskinliga"), "genomskin" );
	deepEqual( Stem("genomskinligt"), "genomskin" );
	deepEqual( Stem("genomskåda"), "genomskåd" );
	deepEqual( Stem("genomskådar"), "genomskåd" );
	deepEqual( Stem("genomskådat"), "genomskåd" );
	deepEqual( Stem("genomstekt"), "genomstek" );
	deepEqual( Stem("genomströmmades"), "genomströmm" );
	deepEqual( Stem("genomtränga"), "genomträng" );
	deepEqual( Stem("genomträngande"), "genomträng" );
	deepEqual( Stem("genomträngde"), "genomträng" );
	deepEqual( Stem("genomtummat"), "genomtumm" );
	deepEqual( Stem("genomvaka"), "genomvak" );
	deepEqual( Stem("genomvakat"), "genomvak" );
	deepEqual( Stem("genomvåta"), "genomvåt" );
	deepEqual( Stem("genomögnade"), "genomögn" );
	deepEqual( Stem("genorn"), "genorn" );
	deepEqual( Stem("genre"), "genr" );
	deepEqual( Stem("gens"), "gen" );
	deepEqual( Stem("gent"), "gent" );
	deepEqual( Stem("gentil"), "gentil" );
	deepEqual( Stem("gentilaste"), "gentil" );
	deepEqual( Stem("gentle"), "gentl" );
	deepEqual( Stem("gentleman"), "gentleman" );
	deepEqual( Stem("gentlemans"), "gentleman" );
	deepEqual( Stem("genväg"), "genväg" );
	deepEqual( Stem("genvägen"), "genväg" );
	deepEqual( Stem("geometriskt"), "geometrisk" );
	deepEqual( Stem("georgine"), "georgin" );
	deepEqual( Stem("georginer"), "georgin" );
	deepEqual( Stem("georginers"), "georginer" );
	deepEqual( Stem("georgines"), "georgin" );
	deepEqual( Stem("ger"), "ger" );
	deepEqual( Stem("geranium"), "geranium" );
	deepEqual( Stem("gerda"), "gerd" );
	deepEqual( Stem("german"), "german" );
	deepEqual( Stem("germanska"), "germansk" );
	deepEqual( Stem("gerna"), "gern" );
	deepEqual( Stem("gerning"), "gerning" );
	deepEqual( Stem("gerningar"), "gerning" );
	deepEqual( Stem("gest"), "gest" );
	deepEqual( Stem("gestalt"), "gestalt" );
	deepEqual( Stem("gestaltar"), "gestalt" );
	deepEqual( Stem("gestaltcr"), "gestaltcr" );
	deepEqual( Stem("gestalten"), "gestalt" );
	deepEqual( Stem("gestalter"), "gestalt" );
	deepEqual( Stem("gestalterna"), "gestalt" );
	deepEqual( Stem("gesten"), "gest" );
	deepEqual( Stem("gester"), "gest" );
	deepEqual( Stem("gestikulerade"), "gestikuler" );
	deepEqual( Stem("gestikulerande"), "gestikuler" );
	deepEqual( Stem("gesäller"), "gesäll" );
	deepEqual( Stem("gesällerna"), "gesäll" );
	deepEqual( Stem("gesällers"), "gesäller" );
	deepEqual( Stem("get"), "get" );
	deepEqual( Stem("geting"), "geting" );
	deepEqual( Stem("getsemane"), "getseman" );
	deepEqual( Stem("gett"), "gett" );
	deepEqual( Stem("gevär"), "gevär" );
	deepEqual( Stem("geväret"), "geväret" );
	deepEqual( Stem("gevärskolfven"), "gevärskolfv" );
	deepEqual( Stem("gick"), "gick" );
	deepEqual( Stem("gif"), "gif" );
	deepEqual( Stem("gifningen"), "gifning" );
	deepEqual( Stem("gift"), "gift" );
	deepEqual( Stem("gifta"), "gift" );
	deepEqual( Stem("giftas"), "gift" );
	deepEqual( Stem("giftasgrillerna"), "giftasgrill" );
	deepEqual( Stem("giftaslust"), "giftaslust" );
	deepEqual( Stem("giftaslysten"), "giftaslyst" );
	deepEqual( Stem("giftastankarna"), "giftastank" );
	deepEqual( Stem("giftbägare"), "giftbäg" );
	deepEqual( Stem("gifte"), "gift" );
	deepEqual( Stem("gifter"), "gift" );
	deepEqual( Stem("giftermål"), "giftermål" );
	deepEqual( Stem("giftermålet"), "giftermålet" );
	deepEqual( Stem("giftermålsanbud"), "giftermålsanbud" );
	deepEqual( Stem("giftermålsanmälan"), "giftermålsanmälan" );
	deepEqual( Stem("giftermålsförslaget"), "giftermålsförslaget" );
	deepEqual( Stem("giftermålsförsök"), "giftermålsförsök" );
	deepEqual( Stem("giftermålsplaner"), "giftermålsplan" );
	deepEqual( Stem("giftermålsspekulation"), "giftermålsspekulation" );
	deepEqual( Stem("giftermålsvurm"), "giftermålsvurm" );
	deepEqual( Stem("giftet"), "giftet" );
	deepEqual( Stem("giftig"), "gift" );
	deepEqual( Stem("giftiga"), "gift" );
	deepEqual( Stem("giftigaste"), "gift" );
	deepEqual( Stem("giftorätt"), "giftorät" );
	deepEqual( Stem("gifva"), "gifv" );
	deepEqual( Stem("gifvas"), "gifv" );
	deepEqual( Stem("gifve"), "gifv" );
	deepEqual( Stem("gifven"), "gifv" );
	deepEqual( Stem("gifver"), "gifv" );
	deepEqual( Stem("gifvit"), "gifvit" );
	deepEqual( Stem("giga"), "gig" );
	deepEqual( Stem("gigantisk"), "gigantisk" );
	deepEqual( Stem("gigantiska"), "gigantisk" );
	deepEqual( Stem("gikten"), "gikt" );
	deepEqual( Stem("giktfulla"), "giktfull" );
	deepEqual( Stem("giljan"), "giljan" );
	deepEqual( Stem("giljarsträng"), "giljarsträng" );
	deepEqual( Stem("gilla"), "gill" );
	deepEqual( Stem("gillad"), "gill" );
	deepEqual( Stem("gillade"), "gill" );
	deepEqual( Stem("gillat"), "gill" );
	deepEqual( Stem("gillstu"), "gillstu" );
	deepEqual( Stem("gillstugan"), "gillstugan" );
	deepEqual( Stem("gillstutömmar"), "gillstutömm" );
	deepEqual( Stem("ginge"), "ging" );
	deepEqual( Stem("gingo"), "gingo" );
	deepEqual( Stem("ginst"), "ginst" );
	deepEqual( Stem("gips"), "gip" );
	deepEqual( Stem("gipsbild"), "gipsbild" );
	deepEqual( Stem("gipsornament"), "gipsornament" );
	deepEqual( Stem("girig"), "gir" );
	deepEqual( Stem("giriga"), "gir" );
	deepEqual( Stem("girigbuk"), "girigbuk" );
	deepEqual( Stem("girigt"), "gir" );
	deepEqual( Stem("gissa"), "giss" );
	deepEqual( Stem("gissade"), "giss" );
	deepEqual( Stem("gissar"), "giss" );
	deepEqual( Stem("gissat"), "giss" );
	deepEqual( Stem("gissel"), "gissel" );
	deepEqual( Stem("gisselslagen"), "gisselslag" );
	deepEqual( Stem("gisslande"), "gissl" );
	deepEqual( Stem("gissning"), "gissning" );
	deepEqual( Stem("gistnade"), "gistn" );
	deepEqual( Stem("gitarr"), "gitarr" );
	deepEqual( Stem("gitarren"), "gitarr" );
	deepEqual( Stem("gitarrer"), "gitarr" );
	deepEqual( Stem("gitarrerna"), "gitarr" );
	deepEqual( Stem("gitarrknäpp"), "gitarrknäpp" );
	deepEqual( Stem("gitarrspel"), "gitarrspel" );
	deepEqual( Stem("gittat"), "gitt" );
	deepEqual( Stem("gitte"), "gitt" );
	deepEqual( Stem("gitter"), "gitt" );
	deepEqual( Stem("giuseppe"), "giusepp" );
	deepEqual( Stem("giv"), "giv" );
	deepEqual( Stem("giva"), "giv" );
	deepEqual( Stem("givande"), "giv" );
	deepEqual( Stem("givas"), "giv" );
	deepEqual( Stem("give"), "giv" );
	deepEqual( Stem("given"), "giv" );
	deepEqual( Stem("givet"), "givet" );
	deepEqual( Stem("givit"), "givit" );
	deepEqual( Stem("givmilda"), "givmild" );
	deepEqual( Stem("givmildare"), "givmild" );
	deepEqual( Stem("givmildhets"), "givmildhet" );
	deepEqual( Stem("givna"), "givn" );
	deepEqual( Stem("gjord"), "gjord" );
	deepEqual( Stem("gjorda"), "gjord" );
	deepEqual( Stem("gjorde"), "gjord" );
	deepEqual( Stem("gjordes"), "gjord" );
	deepEqual( Stem("gjordt"), "gjord" );
	deepEqual( Stem("gjort"), "gjort" );
	deepEqual( Stem("gjorte"), "gjort" );
	deepEqual( Stem("gjuta"), "gjut" );
	deepEqual( Stem("gjutit"), "gjutit" );
	deepEqual( Stem("gl"), "gl" );
	deepEqual( Stem("glacehandskar"), "glacehandsk" );
	deepEqual( Stem("glad"), "glad" );
	deepEqual( Stem("glada"), "glad" );
	deepEqual( Stem("gladare"), "glad" );
	deepEqual( Stem("gladast"), "glad" );
	deepEqual( Stem("gladaste"), "glad" );
	deepEqual( Stem("gladde"), "gladd" );
	deepEqual( Stem("gladdes"), "gladd" );
	deepEqual( Stem("glade"), "glad" );
	deepEqual( Stem("gladio"), "gladio" );
	deepEqual( Stem("gladja"), "gladj" );
	deepEqual( Stem("gladlynt"), "gladlynt" );
	deepEqual( Stem("gladt"), "gladt" );
	deepEqual( Stem("glam"), "glam" );
	deepEqual( Stem("glan"), "glan" );
	deepEqual( Stem("glans"), "glan" );
	deepEqual( Stem("glansen"), "glans" );
	deepEqual( Stem("glanslös"), "glanslös" );
	deepEqual( Stem("glanslösa"), "glanslös" );
	deepEqual( Stem("glansperiod"), "glansperiod" );
	deepEqual( Stem("glanste"), "glanst" );
	deepEqual( Stem("glappande"), "glapp" );
	deepEqual( Stem("glas"), "glas" );
	deepEqual( Stem("glasblanka"), "glasblank" );
	deepEqual( Stem("glasburk"), "glasburk" );
	deepEqual( Stem("glasdisken"), "glasdisk" );
	deepEqual( Stem("glasdörren"), "glasdörr" );
	deepEqual( Stem("glasen"), "glas" );
	deepEqual( Stem("glaset"), "glaset" );
	deepEqual( Stem("glasets"), "glaset" );
	deepEqual( Stem("glasigt"), "glas" );
	deepEqual( Stem("glasklara"), "glasklar" );
	deepEqual( Stem("glaskupa"), "glaskup" );
	deepEqual( Stem("glaskupan"), "glaskupan" );
	deepEqual( Stem("glaskärl"), "glaskärl" );
	deepEqual( Stem("glaspärlor"), "glaspärl" );
	deepEqual( Stem("glasruta"), "glasrut" );
	deepEqual( Stem("glasskåp"), "glasskåp" );
	deepEqual( Stem("glasveran"), "glasveran" );
	deepEqual( Stem("glasverandan"), "glasverandan" );
	deepEqual( Stem("glasväggen"), "glasvägg" );
	deepEqual( Stem("glasyr"), "glasyr" );
	deepEqual( Stem("glasögon"), "glasögon" );
	deepEqual( Stem("glasögonen"), "glasögon" );
	deepEqual( Stem("glatt"), "glatt" );
	deepEqual( Stem("glatta"), "glatt" );
	deepEqual( Stem("gled"), "gled" );
	deepEqual( Stem("gledo"), "gledo" );
	deepEqual( Stem("glesnade"), "glesn" );
	deepEqual( Stem("glesnande"), "glesn" );
	deepEqual( Stem("glesnar"), "glesn" );
	deepEqual( Stem("glesnat"), "glesn" );
	deepEqual( Stem("glida"), "glid" );
	deepEqual( Stem("glidande"), "glid" );
	deepEqual( Stem("glider"), "glid" );
	deepEqual( Stem("glidit"), "glidit" );
	deepEqual( Stem("glim"), "glim" );
	deepEqual( Stem("glimma"), "glimm" );
	deepEqual( Stem("glimmade"), "glimm" );
	deepEqual( Stem("glimmande"), "glimm" );
	deepEqual( Stem("glimt"), "glimt" );
	deepEqual( Stem("glindrande"), "glindr" );
	deepEqual( Stem("glitter"), "glitt" );
	deepEqual( Stem("glittra"), "glittr" );
	deepEqual( Stem("glittrade"), "glittr" );
	deepEqual( Stem("glittrande"), "glittr" );
	deepEqual( Stem("glittret"), "glittret" );
	deepEqual( Stem("glomma"), "glomm" );
	deepEqual( Stem("glopar"), "glop" );
	deepEqual( Stem("gloria"), "glori" );
	deepEqual( Stem("glufsade"), "glufs" );
	deepEqual( Stem("glugg"), "glugg" );
	deepEqual( Stem("gluggar"), "glugg" );
	deepEqual( Stem("glupande"), "glup" );
	deepEqual( Stem("glupska"), "glupsk" );
	deepEqual( Stem("glupskt"), "glupsk" );
	deepEqual( Stem("gläder"), "gläd" );
	deepEqual( Stem("glädja"), "glädj" );
	deepEqual( Stem("glädjande"), "glädj" );
	deepEqual( Stem("glädjas"), "glädj" );
	deepEqual( Stem("glädje"), "glädj" );
	deepEqual( Stem("glädjeblixt"), "glädjeblixt" );
	deepEqual( Stem("glädjekälla"), "glädjekäll" );
	deepEqual( Stem("glädjen"), "glädj" );
	deepEqual( Stem("glädjens"), "glädj" );
	deepEqual( Stem("glädjerop"), "glädjerop" );
	deepEqual( Stem("glädjerörelse"), "glädjerör" );
	deepEqual( Stem("glädjes"), "glädj" );
	deepEqual( Stem("glädjeskri"), "glädjeskri" );
	deepEqual( Stem("glädjestrålande"), "glädjestrål" );
	deepEqual( Stem("glädjestråle"), "glädjestrål" );
	deepEqual( Stem("glädjetommaste"), "glädjetomm" );
	deepEqual( Stem("gläds"), "gläd" );
	deepEqual( Stem("glädtige"), "glädt" );
	deepEqual( Stem("gläfsande"), "gläfs" );
	deepEqual( Stem("gläfste"), "gläfst" );
	deepEqual( Stem("glän"), "glän" );
	deepEqual( Stem("glänsa"), "gläns" );
	deepEqual( Stem("glänsande"), "gläns" );
	deepEqual( Stem("glänser"), "gläns" );
	deepEqual( Stem("glänst"), "glänst" );
	deepEqual( Stem("glänste"), "glänst" );
	deepEqual( Stem("glänt"), "glänt" );
	deepEqual( Stem("glänta"), "glänt" );
	deepEqual( Stem("gläntade"), "glänt" );
	deepEqual( Stem("gläntan"), "gläntan" );
	deepEqual( Stem("gläntande"), "glänt" );
	deepEqual( Stem("gläntas"), "glänt" );
	deepEqual( Stem("glättigt"), "glätt" );
	deepEqual( Stem("glöd"), "glöd" );
	deepEqual( Stem("glöda"), "glöd" );
	deepEqual( Stem("glödande"), "glöd" );
	deepEqual( Stem("glödde"), "glödd" );
	deepEqual( Stem("glöder"), "glöd" );
	deepEqual( Stem("glödgade"), "glödg" );
	deepEqual( Stem("glödheta"), "glödhet" );
	deepEqual( Stem("glödlamporna"), "glödlamp" );
	deepEqual( Stem("glöm"), "glöm" );
	deepEqual( Stem("glömd"), "glömd" );
	deepEqual( Stem("glömda"), "glömd" );
	deepEqual( Stem("glömde"), "glömd" );
	deepEqual( Stem("glömma"), "glömm" );
	deepEqual( Stem("glömmande"), "glömm" );
	deepEqual( Stem("glömmas"), "glömm" );
	deepEqual( Stem("glömmer"), "glömm" );
	deepEqual( Stem("glömska"), "glömsk" );
	deepEqual( Stem("glömt"), "glömt" );
	deepEqual( Stem("gmlgademlär"), "gmlgademlär" );
	deepEqual( Stem("gnagande"), "gnag" );
	deepEqual( Stem("gnagandr"), "gnagandr" );
	deepEqual( Stem("gnagde"), "gnagd" );
	deepEqual( Stem("gnagt"), "gnagt" );
	deepEqual( Stem("gnat"), "gnat" );
	deepEqual( Stem("gnata"), "gnat" );
	deepEqual( Stem("gnatig"), "gnat" );
	deepEqual( Stem("gnd"), "gnd" );
	deepEqual( Stem("gned"), "gned" );
	deepEqual( Stem("gnedos"), "gnedo" );
	deepEqual( Stem("gnida"), "gnid" );
	deepEqual( Stem("gnissla"), "gnissl" );
	deepEqual( Stem("gnisslade"), "gnissl" );
	deepEqual( Stem("gnisslande"), "gnissl" );
	deepEqual( Stem("gnista"), "gnist" );
	deepEqual( Stem("gnistan"), "gnistan" );
	deepEqual( Stem("gnistor"), "gnist" );
	deepEqual( Stem("gnistrade"), "gnistr" );
	deepEqual( Stem("gnistrande"), "gnistr" );
	deepEqual( Stem("gno"), "gno" );
	deepEqual( Stem("gnodde"), "gnodd" );
	deepEqual( Stem("gnola"), "gnol" );
	deepEqual( Stem("gnolade"), "gnol" );
	deepEqual( Stem("gnolande"), "gnol" );
	deepEqual( Stem("gnolar"), "gnol" );
	deepEqual( Stem("gnolat"), "gnol" );
	deepEqual( Stem("gnomen"), "gnom" );
	deepEqual( Stem("gnomer"), "gnom" );
	deepEqual( Stem("gnott"), "gnott" );
	deepEqual( Stem("gnuggade"), "gnugg" );
	deepEqual( Stem("gny"), "gny" );
	deepEqual( Stem("gnyr"), "gnyr" );
	deepEqual( Stem("gnäggade"), "gnägg" );
	deepEqual( Stem("gnäggande"), "gnägg" );
	deepEqual( Stem("gnälla"), "gnäll" );
	deepEqual( Stem("gnällande"), "gnäll" );
	deepEqual( Stem("gnällde"), "gnälld" );
	deepEqual( Stem("gnäller"), "gnäll" );
	deepEqual( Stem("go"), "go" );
	deepEqual( Stem("god"), "god" );
	deepEqual( Stem("goda"), "god" );
	deepEqual( Stem("godas"), "god" );
	deepEqual( Stem("godbit"), "godbit" );
	deepEqual( Stem("godbitar"), "godbit" );
	deepEqual( Stem("goddagarna"), "goddag" );
	deepEqual( Stem("goddagarne"), "goddag" );
	deepEqual( Stem("goddagspilt"), "goddagspilt" );
	deepEqual( Stem("gode"), "god" );
	deepEqual( Stem("godhet"), "god" );
	deepEqual( Stem("godheten"), "god" );
	deepEqual( Stem("godhjärtade"), "godhjärt" );
	deepEqual( Stem("godlynt"), "godlynt" );
	deepEqual( Stem("godlynthet"), "godlynt" );
	deepEqual( Stem("godmodiga"), "godmod" );
	deepEqual( Stem("godmodighet"), "godmod" );
	deepEqual( Stem("godmodigt"), "godmod" );
	deepEqual( Stem("godnatt"), "godnat" );
	deepEqual( Stem("godo"), "godo" );
	deepEqual( Stem("gods"), "god" );
	deepEqual( Stem("godsagare"), "godsag" );
	deepEqual( Stem("godsagarn"), "godsagarn" );
	deepEqual( Stem("godsaker"), "godsak" );
	deepEqual( Stem("godsakerna"), "godsak" );
	deepEqual( Stem("godset"), "godset" );
	deepEqual( Stem("godsinthet"), "godsint" );
	deepEqual( Stem("godsägare"), "godsäg" );
	deepEqual( Stem("godsägarn"), "godsägarn" );
	deepEqual( Stem("godt"), "godt" );
	deepEqual( Stem("godta"), "godt" );
	deepEqual( Stem("godtgjorde"), "godtgjord" );
	deepEqual( Stem("godtycke"), "godtyck" );
	deepEqual( Stem("goivet"), "goivet" );
	deepEqual( Stem("gol"), "gol" );
	deepEqual( Stem("golf"), "golf" );
	deepEqual( Stem("golfvet"), "golfvet" );
	deepEqual( Stem("golv"), "golv" );
	deepEqual( Stem("golvct"), "golvct" );
	deepEqual( Stem("golvet"), "golvet" );
	deepEqual( Stem("golvspringor"), "golvspring" );
	deepEqual( Stem("golvspringorna"), "golvspring" );
	deepEqual( Stem("gommen"), "gomm" );
	deepEqual( Stem("gonen"), "gon" );
	deepEqual( Stem("gor"), "gor" );
	deepEqual( Stem("gora"), "gor" );
	deepEqual( Stem("gorna"), "gorn" );
	deepEqual( Stem("gossaktigt"), "gossakt" );
	deepEqual( Stem("gossar"), "goss" );
	deepEqual( Stem("gossarna"), "goss" );
	deepEqual( Stem("gossarne"), "goss" );
	deepEqual( Stem("gossc"), "gossc" );
	deepEqual( Stem("gosse"), "goss" );
	deepEqual( Stem("gossel"), "gossel" );
	deepEqual( Stem("gossen"), "goss" );
	deepEqual( Stem("gossens"), "goss" );
	deepEqual( Stem("gosshänder"), "gosshänd" );
	deepEqual( Stem("gosskola"), "gosskol" );
	deepEqual( Stem("gosspannan"), "gosspannan" );
	deepEqual( Stem("gossårens"), "gossår" );
	deepEqual( Stem("got"), "got" );
	deepEqual( Stem("gotisk"), "gotisk" );
	deepEqual( Stem("gott"), "gott" );
	deepEqual( Stem("gottbard"), "gottbard" );
	deepEqual( Stem("gotter"), "gott" );
	deepEqual( Stem("gottfinnande"), "gottfin" );
	deepEqual( Stem("gottgjorde"), "gottgjord" );
	deepEqual( Stem("gottgöra"), "gottgör" );
	deepEqual( Stem("gottgöres"), "gottgör" );
	deepEqual( Stem("gotthard"), "gotthard" );
	deepEqual( Stem("gotthards"), "gotthard" );
	deepEqual( Stem("gottpåse"), "gottpås" );
	deepEqual( Stem("gouttiere"), "gouttier" );
	deepEqual( Stem("gra"), "gra" );
	deepEqual( Stem("grace"), "grac" );
	deepEqual( Stem("gracer"), "grac" );
	deepEqual( Stem("gracerna"), "grac" );
	deepEqual( Stem("graciös"), "graciös" );
	deepEqual( Stem("graciösa"), "graciös" );
	deepEqual( Stem("grad"), "grad" );
	deepEqual( Stem("grader"), "grad" );
	deepEqual( Stem("graders"), "grader" );
	deepEqual( Stem("gradvis"), "gradvis" );
	deepEqual( Stem("graf"), "graf" );
	deepEqual( Stem("grafdjup"), "grafdjup" );
	deepEqual( Stem("grafvarne"), "grafv" );
	deepEqual( Stem("grafven"), "grafv" );
	deepEqual( Stem("grafvens"), "grafv" );
	deepEqual( Stem("gral"), "gral" );
	deepEqual( Stem("grammatikan"), "grammatikan" );
	deepEqual( Stem("gran"), "gran" );
	deepEqual( Stem("granar"), "gran" );
	deepEqual( Stem("granarna"), "gran" );
	deepEqual( Stem("granarnas"), "gran" );
	deepEqual( Stem("grand"), "grand" );
	deepEqual( Stem("granen"), "gran" );
	deepEqual( Stem("grankottarna"), "grankot" );
	deepEqual( Stem("grann"), "grann" );
	deepEqual( Stem("granna"), "grann" );
	deepEqual( Stem("grannar"), "grann" );
	deepEqual( Stem("grannare"), "grann" );
	deepEqual( Stem("grannarne"), "grann" );
	deepEqual( Stem("grannarnes"), "grannarn" );
	deepEqual( Stem("grannaste"), "grann" );
	deepEqual( Stem("granne"), "grann" );
	deepEqual( Stem("grannens"), "grann" );
	deepEqual( Stem("grannes"), "grann" );
	deepEqual( Stem("grannlaga"), "grannlag" );
	deepEqual( Stem("grannlagenhet"), "grannlagen" );
	deepEqual( Stem("grannlåt"), "grannlåt" );
	deepEqual( Stem("grannlåtsdocka"), "grannlåtsdock" );
	deepEqual( Stem("grannlåtsrummen"), "grannlåtsrumm" );
	deepEqual( Stem("grannqvinna"), "grannqvin" );
	deepEqual( Stem("grannskap"), "grannskap" );
	deepEqual( Stem("grannskapet"), "grannskapet" );
	deepEqual( Stem("grannstränderna"), "grannstränd" );
	deepEqual( Stem("grannstugan"), "grannstugan" );
	deepEqual( Stem("grannt"), "grannt" );
	deepEqual( Stem("granorgeln"), "granorgeln" );
	deepEqual( Stem("granris"), "granris" );
	deepEqual( Stem("granrisat"), "granris" );
	deepEqual( Stem("granska"), "gransk" );
	deepEqual( Stem("granskade"), "gransk" );
	deepEqual( Stem("granskande"), "gransk" );
	deepEqual( Stem("granskare"), "gransk" );
	deepEqual( Stem("granskat"), "gransk" );
	deepEqual( Stem("granskog"), "granskog" );
	deepEqual( Stem("granskogen"), "granskog" );
	deepEqual( Stem("grant"), "grant" );
	deepEqual( Stem("grantop"), "grantop" );
	deepEqual( Stem("grata"), "grat" );
	deepEqual( Stem("gratiers"), "gratier" );
	deepEqual( Stem("gratis"), "gratis" );
	deepEqual( Stem("gratulationer"), "gratulation" );
	deepEqual( Stem("gratulera"), "gratuler" );
	deepEqual( Stem("gratulerade"), "gratuler" );
	deepEqual( Stem("grav"), "grav" );
	deepEqual( Stem("gravar"), "grav" );
	deepEqual( Stem("gravarna"), "grav" );
	deepEqual( Stem("graven"), "grav" );
	deepEqual( Stem("gravera"), "graver" );
	deepEqual( Stem("gravlika"), "gravlik" );
	deepEqual( Stem("gravstenar"), "gravsten" );
	deepEqual( Stem("gravstenarna"), "gravsten" );
	deepEqual( Stem("gravvård"), "gravvård" );
	deepEqual( Stem("gravvårdar"), "gravvård" );
	deepEqual( Stem("gravyrer"), "gravyr" );
	deepEqual( Stem("gredelin"), "gredelin" );
	deepEqual( Stem("gredelina"), "gredelin" );
	deepEqual( Stem("gredelint"), "gredelint" );
	deepEqual( Stem("gregorius"), "gregorius" );
	deepEqual( Stem("grekiska"), "grekisk" );
	deepEqual( Stem("gren"), "gren" );
	deepEqual( Stem("grenar"), "gren" );
	deepEqual( Stem("grenarna"), "gren" );
	deepEqual( Stem("grenen"), "gren" );
	deepEqual( Stem("grensle"), "grensl" );
	deepEqual( Stem("grep"), "grep" );
	deepEqual( Stem("grepar"), "grep" );
	deepEqual( Stem("grepe"), "grep" );
	deepEqual( Stem("grepen"), "grep" );
	deepEqual( Stem("grepo"), "grepo" );
	deepEqual( Stem("grepp"), "grepp" );
	deepEqual( Stem("greppet"), "greppet" );
	deepEqual( Stem("greps"), "grep" );
	deepEqual( Stem("gret"), "gret" );
	deepEqual( Stem("gretchens"), "gretch" );
	deepEqual( Stem("grevar"), "grev" );
	deepEqual( Stem("greve"), "grev" );
	deepEqual( Stem("grevegriften"), "grevegrift" );
	deepEqual( Stem("greven"), "grev" );
	deepEqual( Stem("grevens"), "grev" );
	deepEqual( Stem("grevinna"), "grevin" );
	deepEqual( Stem("grevinnan"), "grevinnan" );
	deepEqual( Stem("grevinnor"), "grevin" );
	deepEqual( Stem("grevliga"), "grev" );
	deepEqual( Stem("grevlige"), "grev" );
	deepEqual( Stem("grevligt"), "grev" );
	deepEqual( Stem("griffeltavla"), "griffeltavl" );
	deepEqual( Stem("griller"), "grill" );
	deepEqual( Stem("grillerna"), "grill" );
	deepEqual( Stem("grimas"), "grim" );
	deepEqual( Stem("grimaserade"), "grimaser" );
	deepEqual( Stem("grimaserande"), "grimaser" );
	deepEqual( Stem("grimen"), "grim" );
	deepEqual( Stem("grimma"), "grimm" );
	deepEqual( Stem("grina"), "grin" );
	deepEqual( Stem("grinade"), "grin" );
	deepEqual( Stem("grinande"), "grin" );
	deepEqual( Stem("grind"), "grind" );
	deepEqual( Stem("grindar"), "grind" );
	deepEqual( Stem("grinden"), "grind" );
	deepEqual( Stem("grindstolpar"), "grindstolp" );
	deepEqual( Stem("gripa"), "grip" );
	deepEqual( Stem("gripande"), "grip" );
	deepEqual( Stem("griparna"), "grip" );
	deepEqual( Stem("gripas"), "grip" );
	deepEqual( Stem("gripen"), "grip" );
	deepEqual( Stem("griper"), "grip" );
	deepEqual( Stem("gripit"), "gripit" );
	deepEqual( Stem("gripna"), "gripn" );
	deepEqual( Stem("gris"), "gris" );
	deepEqual( Stem("grisen"), "gris" );
	deepEqual( Stem("gro"), "gro" );
	deepEqual( Stem("groda"), "grod" );
	deepEqual( Stem("grodde"), "grodd" );
	deepEqual( Stem("grodden"), "grodd" );
	deepEqual( Stem("grof"), "grof" );
	deepEqual( Stem("grofkorniga"), "grofkorn" );
	deepEqual( Stem("groft"), "groft" );
	deepEqual( Stem("grofva"), "grofv" );
	deepEqual( Stem("grogg"), "grogg" );
	deepEqual( Stem("groggar"), "grogg" );
	deepEqual( Stem("grop"), "grop" );
	deepEqual( Stem("gropar"), "grop" );
	deepEqual( Stem("groparna"), "grop" );
	deepEqual( Stem("gropen"), "grop" );
	deepEqual( Stem("gropiga"), "grop" );
	deepEqual( Stem("gror"), "gror" );
	deepEqual( Stem("grossess"), "grossess" );
	deepEqual( Stem("grosshandlardotter"), "grosshandlardot" );
	deepEqual( Stem("grosshandlare"), "grosshandl" );
	deepEqual( Stem("grotesk"), "grotesk" );
	deepEqual( Stem("grov"), "grov" );
	deepEqual( Stem("grova"), "grov" );
	deepEqual( Stem("grovkornigaste"), "grovkorn" );
	deepEqual( Stem("grovt"), "grovt" );
	deepEqual( Stem("grubbel"), "grubbel" );
	deepEqual( Stem("grubbla"), "grubbl" );
	deepEqual( Stem("grubblade"), "grubbl" );
	deepEqual( Stem("grubblande"), "grubbl" );
	deepEqual( Stem("grubblandet"), "grubbl" );
	deepEqual( Stem("grubblar"), "grubbl" );
	deepEqual( Stem("grubblat"), "grubbl" );
	deepEqual( Stem("grubbleri"), "grubbleri" );
	deepEqual( Stem("grufliga"), "gruf" );
	deepEqual( Stem("grufligt"), "gruf" );
	deepEqual( Stem("grumlade"), "gruml" );
	deepEqual( Stem("grumlig"), "grum" );
	deepEqual( Stem("grumliga"), "grum" );
	deepEqual( Stem("grumligt"), "grum" );
	deepEqual( Stem("grund"), "grund" );
	deepEqual( Stem("grunda"), "grund" );
	deepEqual( Stem("grundad"), "grund" );
	deepEqual( Stem("grundade"), "grund" );
	deepEqual( Stem("grundas"), "grund" );
	deepEqual( Stem("grundaste"), "grund" );
	deepEqual( Stem("grundat"), "grund" );
	deepEqual( Stem("grundats"), "grundat" );
	deepEqual( Stem("grunddrag"), "grunddrag" );
	deepEqual( Stem("grunddrifterna"), "grunddrift" );
	deepEqual( Stem("grunden"), "grund" );
	deepEqual( Stem("grundet"), "grundet" );
	deepEqual( Stem("grundlagda"), "grundlag" );
	deepEqual( Stem("grundlig"), "grund" );
	deepEqual( Stem("grundligt"), "grund" );
	deepEqual( Stem("grundpelare"), "grundpel" );
	deepEqual( Stem("grundsatsen"), "grundsats" );
	deepEqual( Stem("grundsatser"), "grundsats" );
	deepEqual( Stem("grundval"), "grundval" );
	deepEqual( Stem("grupp"), "grupp" );
	deepEqual( Stem("gruppen"), "grupp" );
	deepEqual( Stem("grupper"), "grupp" );
	deepEqual( Stem("grupperade"), "grupper" );
	deepEqual( Stem("grus"), "grus" );
	deepEqual( Stem("gruset"), "gruset" );
	deepEqual( Stem("gruvade"), "gruv" );
	deepEqual( Stem("gruvlig"), "gruv" );
	deepEqual( Stem("gruvligt"), "gruv" );
	deepEqual( Stem("gry"), "gry" );
	deepEqual( Stem("gryende"), "gryend" );
	deepEqual( Stem("grym"), "grym" );
	deepEqual( Stem("grymheten"), "grym" );
	deepEqual( Stem("grymheter"), "grym" );
	deepEqual( Stem("grymma"), "grymm" );
	deepEqual( Stem("grymmaste"), "grymm" );
	deepEqual( Stem("grymt"), "grymt" );
	deepEqual( Stem("gryngröten"), "gryngröt" );
	deepEqual( Stem("gryning"), "gryning" );
	deepEqual( Stem("gryningen"), "gryning" );
	deepEqual( Stem("gryningens"), "gryning" );
	deepEqual( Stem("gryningsdagern"), "gryningsdag" );
	deepEqual( Stem("grynvälling"), "grynvälling" );
	deepEqual( Stem("gryr"), "gryr" );
	deepEqual( Stem("gryta"), "gryt" );
	deepEqual( Stem("grytor"), "gryt" );
	deepEqual( Stem("grytorna"), "gryt" );
	deepEqual( Stem("gräddade"), "grädd" );
	deepEqual( Stem("grädde"), "grädd" );
	deepEqual( Stem("gräl"), "gräl" );
	deepEqual( Stem("gräla"), "gräl" );
	deepEqual( Stem("grälade"), "gräl" );
	deepEqual( Stem("grälande"), "gräl" );
	deepEqual( Stem("grälat"), "gräl" );
	deepEqual( Stem("grälen"), "gräl" );
	deepEqual( Stem("grälla"), "gräll" );
	deepEqual( Stem("grämde"), "grämd" );
	deepEqual( Stem("grämelse"), "gräm" );
	deepEqual( Stem("grämelsens"), "gräm" );
	deepEqual( Stem("grämer"), "gräm" );
	deepEqual( Stem("grämt"), "grämt" );
	deepEqual( Stem("gränd"), "gränd" );
	deepEqual( Stem("gränden"), "gränd" );
	deepEqual( Stem("gränder"), "gränd" );
	deepEqual( Stem("gränderna"), "gränd" );
	deepEqual( Stem("grändernas"), "gränd" );
	deepEqual( Stem("gräns"), "grän" );
	deepEqual( Stem("gränsade"), "gräns" );
	deepEqual( Stem("gränsande"), "gräns" );
	deepEqual( Stem("gränsen"), "gräns" );
	deepEqual( Stem("gränser"), "gräns" );
	deepEqual( Stem("gränserna"), "gräns" );
	deepEqual( Stem("gränslös"), "gränslös" );
	deepEqual( Stem("gränslöst"), "gränslös" );
	deepEqual( Stem("gräs"), "gräs" );
	deepEqual( Stem("gräsbevuxen"), "gräsbevux" );
	deepEqual( Stem("gräsbevuxna"), "gräsbevuxn" );
	deepEqual( Stem("gräsbänkar"), "gräsbänk" );
	deepEqual( Stem("gräset"), "gräset" );
	deepEqual( Stem("gräsliga"), "gräs" );
	deepEqual( Stem("gräsligaste"), "gräs" );
	deepEqual( Stem("gräsligt"), "gräs" );
	deepEqual( Stem("gräsmattan"), "gräsmattan" );
	deepEqual( Stem("gräsmattor"), "gräsmat" );
	deepEqual( Stem("gräsmattorna"), "gräsmat" );
	deepEqual( Stem("gräsplan"), "gräsplan" );
	deepEqual( Stem("grässtrån"), "grässtrån" );
	deepEqual( Stem("grät"), "grät" );
	deepEqual( Stem("gräto"), "gräto" );
	deepEqual( Stem("gräv"), "gräv" );
	deepEqual( Stem("gräva"), "gräv" );
	deepEqual( Stem("grävda"), "grävd" );
	deepEqual( Stem("grävde"), "grävd" );
	deepEqual( Stem("gräver"), "gräv" );
	deepEqual( Stem("grå"), "grå" );
	deepEqual( Stem("gråa"), "gråa" );
	deepEqual( Stem("gråare"), "gråar" );
	deepEqual( Stem("gråblandad"), "gråbland" );
	deepEqual( Stem("gråblanka"), "gråblank" );
	deepEqual( Stem("gråbleka"), "gråblek" );
	deepEqual( Stem("grådask"), "grådask" );
	deepEqual( Stem("grådaskiga"), "grådask" );
	deepEqual( Stem("grågröna"), "grågrön" );
	deepEqual( Stem("gråhet"), "gråhet" );
	deepEqual( Stem("gråkappeexcellensen"), "gråkappeexcellens" );
	deepEqual( Stem("gråkulet"), "gråkulet" );
	deepEqual( Stem("grånade"), "grån" );
	deepEqual( Stem("grånande"), "grån" );
	deepEqual( Stem("grånat"), "grån" );
	deepEqual( Stem("gråsprängd"), "gråspräng" );
	deepEqual( Stem("gråsprängda"), "gråspräng" );
	deepEqual( Stem("gråsprängdt"), "gråsprängd" );
	deepEqual( Stem("gråsprängt"), "gråspräng" );
	deepEqual( Stem("gråsten"), "gråst" );
	deepEqual( Stem("gråstrimmig"), "gråstrimm" );
	deepEqual( Stem("gråt"), "gråt" );
	deepEqual( Stem("gråta"), "gråt" );
	deepEqual( Stem("gråtande"), "gråt" );
	deepEqual( Stem("gråte"), "gråt" );
	deepEqual( Stem("gråten"), "gråt" );
	deepEqual( Stem("gråter"), "gråt" );
	deepEqual( Stem("gråtfärdig"), "gråtfärd" );
	deepEqual( Stem("gråtit"), "gråtit" );
	deepEqual( Stem("gråtkramp"), "gråtkramp" );
	deepEqual( Stem("grått"), "grått" );
	deepEqual( Stem("gröfsta"), "gröfst" );
	deepEqual( Stem("grön"), "grön" );
	deepEqual( Stem("gröna"), "grön" );
	deepEqual( Stem("grönaktiga"), "grönakt" );
	deepEqual( Stem("gröngräset"), "gröngräset" );
	deepEqual( Stem("grönmålad"), "grönmål" );
	deepEqual( Stem("grönmålade"), "grönmål" );
	deepEqual( Stem("grönska"), "grönsk" );
	deepEqual( Stem("grönskan"), "grönskan" );
	deepEqual( Stem("grönskande"), "grönsk" );
	deepEqual( Stem("grönstedts"), "grönsted" );
	deepEqual( Stem("grönt"), "grönt" );
	deepEqual( Stem("gröt"), "gröt" );
	deepEqual( Stem("gröten"), "gröt" );
	deepEqual( Stem("grötig"), "gröt" );
	deepEqual( Stem("grövre"), "grövr" );
	deepEqual( Stem("gt"), "gt" );
	deepEqual( Stem("gtlbben"), "gtlbben" );
	deepEqual( Stem("gtngo"), "gtngo" );
	deepEqual( Stem("gtvis"), "gtvis" );
	deepEqual( Stem("gu"), "gu" );
	deepEqual( Stem("gubb"), "gubb" );
	deepEqual( Stem("gubbar"), "gubb" );
	deepEqual( Stem("gubbarne"), "gubb" );
	deepEqual( Stem("gubbe"), "gubb" );
	deepEqual( Stem("gubben"), "gubb" );
	deepEqual( Stem("gubbens"), "gubb" );
	deepEqual( Stem("gubbes"), "gubb" );
	deepEqual( Stem("gubbsatiriskt"), "gubbsatirisk" );
	deepEqual( Stem("gubevars"), "gubevar" );
	deepEqual( Stem("gud"), "gud" );
	deepEqual( Stem("gudadryck"), "gudadryck" );
	deepEqual( Stem("gudaktiga"), "gudakt" );
	deepEqual( Stem("gudaktigheten"), "gudakt" );
	deepEqual( Stem("gudarna"), "gud" );
	deepEqual( Stem("gudarnes"), "gudarn" );
	deepEqual( Stem("gudars"), "gudar" );
	deepEqual( Stem("gudbevars"), "gudbevar" );
	deepEqual( Stem("guden"), "gud" );
	deepEqual( Stem("gudens"), "gud" );
	deepEqual( Stem("gudfar"), "gudf" );
	deepEqual( Stem("gudfruktig"), "gudfrukt" );
	deepEqual( Stem("gudfruktiga"), "gudfrukt" );
	deepEqual( Stem("gudfruktigt"), "gudfrukt" );
	deepEqual( Stem("gudi"), "gudi" );
	deepEqual( Stem("gudlöshet"), "gudlös" );
	deepEqual( Stem("gudlöst"), "gudlös" );
	deepEqual( Stem("gudnås"), "gudnås" );
	deepEqual( Stem("gudom"), "gudom" );
	deepEqual( Stem("gudomens"), "gudom" );
	deepEqual( Stem("gudomlig"), "gudom" );
	deepEqual( Stem("gudomliga"), "gudom" );
	deepEqual( Stem("gudomligare"), "gudom" );
	deepEqual( Stem("gudomlighet"), "gudom" );
	deepEqual( Stem("guds"), "gud" );
	deepEqual( Stem("gudsfruktan"), "gudsfruktan" );
	deepEqual( Stem("gudskelov"), "gudskelov" );
	deepEqual( Stem("gudson"), "gudson" );
	deepEqual( Stem("gudstjänstens"), "gudstjänst" );
	deepEqual( Stem("gudsängeln"), "gudsängeln" );
	deepEqual( Stem("guhl"), "guhl" );
	deepEqual( Stem("gul"), "gul" );
	deepEqual( Stem("gula"), "gul" );
	deepEqual( Stem("gulaktig"), "gulakt" );
	deepEqual( Stem("gulbetsade"), "gulbets" );
	deepEqual( Stem("gulblekt"), "gulblek" );
	deepEqual( Stem("guld"), "guld" );
	deepEqual( Stem("guldbroderad"), "guldbroder" );
	deepEqual( Stem("guldbrosch"), "guldbrosch" );
	deepEqual( Stem("gulddosan"), "gulddosan" );
	deepEqual( Stem("guldets"), "guldet" );
	deepEqual( Stem("guldfargad"), "guldfarg" );
	deepEqual( Stem("guldfärg"), "guldfärg" );
	deepEqual( Stem("guldfärgade"), "guldfärg" );
	deepEqual( Stem("guldgula"), "guldgul" );
	deepEqual( Stem("guldklackar"), "guldklack" );
	deepEqual( Stem("guldklot"), "guldklot" );
	deepEqual( Stem("guldlöv"), "guldlöv" );
	deepEqual( Stem("guldpapper"), "guldpapp" );
	deepEqual( Stem("guldprins"), "guldprin" );
	deepEqual( Stem("guldskimmer"), "guldskimm" );
	deepEqual( Stem("guldskimrande"), "guldskimr" );
	deepEqual( Stem("guldskärp"), "guldskärp" );
	deepEqual( Stem("guldskål"), "guldskål" );
	deepEqual( Stem("guldsmedsbutik"), "guldsmedsbutik" );
	deepEqual( Stem("guldsnitt"), "guldsnit" );
	deepEqual( Stem("guldsnusdosan"), "guldsnusdosan" );
	deepEqual( Stem("guldstoft"), "guldstoft" );
	deepEqual( Stem("guldtränsar"), "guldträns" );
	deepEqual( Stem("guldur"), "guldur" );
	deepEqual( Stem("guldårens"), "guldår" );
	deepEqual( Stem("gulgrå"), "gulgrå" );
	deepEqual( Stem("gulgrått"), "gulgråt" );
	deepEqual( Stem("gulgrön"), "gulgrön" );
	deepEqual( Stem("gulhvitt"), "gulhvit" );
	deepEqual( Stem("gulhårige"), "gulhår" );
	deepEqual( Stem("gull"), "gull" );
	deepEqual( Stem("gullet"), "gullet" );
	deepEqual( Stem("gullgult"), "gullgult" );
	deepEqual( Stem("gullros"), "gullro" );
	deepEqual( Stem("gullvivor"), "gullviv" );
	deepEqual( Stem("gulmålad"), "gulmål" );
	deepEqual( Stem("gulna"), "guln" );
	deepEqual( Stem("gulnad"), "guln" );
	deepEqual( Stem("gulnade"), "guln" );
	deepEqual( Stem("gulnat"), "guln" );
	deepEqual( Stem("gulrosig"), "gulros" );
	deepEqual( Stem("gulrosiga"), "gulros" );
	deepEqual( Stem("gulröd"), "gulröd" );
	deepEqual( Stem("gult"), "gult" );
	deepEqual( Stem("gum"), "gum" );
	deepEqual( Stem("gumansikte"), "gumansik" );
	deepEqual( Stem("gumma"), "gumm" );
	deepEqual( Stem("gumman"), "gumman" );
	deepEqual( Stem("gummi"), "gummi" );
	deepEqual( Stem("gummiansikte"), "gummiansik" );
	deepEqual( Stem("gummihandske"), "gummihandsk" );
	deepEqual( Stem("gummiring"), "gummiring" );
	deepEqual( Stem("gummor"), "gumm" );
	deepEqual( Stem("gummorna"), "gumm" );
	deepEqual( Stem("gummors"), "gummor" );
	deepEqual( Stem("gung"), "gung" );
	deepEqual( Stem("gunga"), "gung" );
	deepEqual( Stem("gungade"), "gung" );
	deepEqual( Stem("gungande"), "gung" );
	deepEqual( Stem("gunst"), "gunst" );
	deepEqual( Stem("gunstiga"), "gunst" );
	deepEqual( Stem("gunstige"), "gunst" );
	deepEqual( Stem("gunstigt"), "gunst" );
	deepEqual( Stem("gunstling"), "gunstling" );
	deepEqual( Stem("gunstlingen"), "gunstling" );
	deepEqual( Stem("gunås"), "gunås" );
	deepEqual( Stem("guppade"), "gupp" );
	deepEqual( Stem("gurka"), "gurk" );
	deepEqual( Stem("gurkornas"), "gurk" );
	deepEqual( Stem("gustaf"), "gustaf" );
	deepEqual( Stem("gustav"), "gustav" );
	deepEqual( Stem("guttaperkaboll"), "guttaperkaboll" );
	deepEqual( Stem("gutår"), "gutår" );
	deepEqual( Stem("gyckel"), "gyckel" );
	deepEqual( Stem("gyckla"), "gyckl" );
	deepEqual( Stem("gycklade"), "gyckl" );
	deepEqual( Stem("gycklar"), "gyckl" );
	deepEqual( Stem("gycklare"), "gyckl" );
	deepEqual( Stem("gycklaren"), "gyckl" );
	deepEqual( Stem("gycklarlynne"), "gycklarlyn" );
	deepEqual( Stem("gyllenbandade"), "gyllenband" );
	deepEqual( Stem("gyllenborg"), "gyllenborg" );
	deepEqual( Stem("gyllenc"), "gyllenc" );
	deepEqual( Stem("gyllene"), "gyllen" );
	deepEqual( Stem("gyllenröd"), "gyllenröd" );
	deepEqual( Stem("gyllenstjärnan"), "gyllenstjärnan" );
	deepEqual( Stem("gyllne"), "gylln" );
	deepEqual( Stem("gymnasiitid"), "gymnasiitid" );
	deepEqual( Stem("gymnasist"), "gymnasist" );
	deepEqual( Stem("gymnasisten"), "gymnasist" );
	deepEqual( Stem("gymnasium"), "gymnasium" );
	deepEqual( Stem("gymnastiklokalen"), "gymnastiklokal" );
	deepEqual( Stem("gymnastiklärare"), "gymnastiklär" );
	deepEqual( Stem("gymnastiktavlingarna"), "gymnastiktavling" );
	deepEqual( Stem("gynekologi"), "gynekologi" );
	deepEqual( Stem("gynnad"), "gynn" );
	deepEqual( Stem("gynnade"), "gynn" );
	deepEqual( Stem("gynnande"), "gynn" );
	deepEqual( Stem("gynnar"), "gynn" );
	deepEqual( Stem("gynnare"), "gynn" );
	deepEqual( Stem("gynnsamma"), "gynnsamm" );
	deepEqual( Stem("gynsamma"), "gynsamm" );
	deepEqual( Stem("gynsamt"), "gynsamt" );
	deepEqual( Stem("gäck"), "gäck" );
	deepEqual( Stem("gäcka"), "gäck" );
	deepEqual( Stem("gäckade"), "gäck" );
	deepEqual( Stem("gäckande"), "gäck" );
	deepEqual( Stem("gäckat"), "gäck" );
	deepEqual( Stem("gälda"), "gäld" );
	deepEqual( Stem("gälde"), "gäld" );
	deepEqual( Stem("gäldstugan"), "gäldstugan" );
	deepEqual( Stem("gäll"), "gäll" );
	deepEqual( Stem("gälla"), "gäll" );
	deepEqual( Stem("gällande"), "gäll" );
	deepEqual( Stem("gällde"), "gälld" );
	deepEqual( Stem("gäller"), "gäll" );
	deepEqual( Stem("gällt"), "gällt" );
	deepEqual( Stem("gält"), "gält" );
	deepEqual( Stem("gäma"), "gäm" );
	deepEqual( Stem("gäng"), "gäng" );
	deepEqual( Stem("gänglig"), "gäng" );
	deepEqual( Stem("gängliga"), "gäng" );
	deepEqual( Stem("gängse"), "gängs" );
	deepEqual( Stem("gärd"), "gärd" );
	deepEqual( Stem("gärdena"), "gärden" );
	deepEqual( Stem("gärdesgard"), "gärdesgard" );
	deepEqual( Stem("gärna"), "gärn" );
	deepEqual( Stem("gärning"), "gärning" );
	deepEqual( Stem("gärningen"), "gärning" );
	deepEqual( Stem("gäspa"), "gäsp" );
	deepEqual( Stem("gäspade"), "gäsp" );
	deepEqual( Stem("gäspning"), "gäspning" );
	deepEqual( Stem("gäspningar"), "gäspning" );
	deepEqual( Stem("gäst"), "gäst" );
	deepEqual( Stem("gästabudshus"), "gästabudshus" );
	deepEqual( Stem("gästar"), "gäst" );
	deepEqual( Stem("gästat"), "gäst" );
	deepEqual( Stem("gästbyggningen"), "gästbyggning" );
	deepEqual( Stem("gästen"), "gäst" );
	deepEqual( Stem("gäster"), "gäst" );
	deepEqual( Stem("gästerna"), "gäst" );
	deepEqual( Stem("gästers"), "gäster" );
	deepEqual( Stem("gästfrihet"), "gästfri" );
	deepEqual( Stem("gästfriheten"), "gästfri" );
	deepEqual( Stem("gästfrihetens"), "gästfri" );
	deepEqual( Stem("gästgivaregården"), "gästgivaregård" );
	deepEqual( Stem("gästkammaren"), "gästkamm" );
	deepEqual( Stem("gästkammarn"), "gästkammarn" );
	deepEqual( Stem("gästrum"), "gästrum" );
	deepEqual( Stem("gästrummet"), "gästrummet" );
	deepEqual( Stem("gå"), "gå" );
	deepEqual( Stem("gående"), "gåend" );
	deepEqual( Stem("gåfva"), "gåfv" );
	deepEqual( Stem("gåfve"), "gåfv" );
	deepEqual( Stem("gåfvo"), "gåfvo" );
	deepEqual( Stem("gåfvor"), "gåfv" );
	deepEqual( Stem("gång"), "gång" );
	deepEqual( Stem("gånga"), "gång" );
	deepEqual( Stem("gångar"), "gång" );
	deepEqual( Stem("gångarens"), "gång" );
	deepEqual( Stem("gångarna"), "gång" );
	deepEqual( Stem("gångarnas"), "gång" );
	deepEqual( Stem("gångars"), "gångar" );
	deepEqual( Stem("gångbanan"), "gångbanan" );
	deepEqual( Stem("gången"), "gång" );
	deepEqual( Stem("gångens"), "gång" );
	deepEqual( Stem("gånger"), "gång" );
	deepEqual( Stem("gångerna"), "gång" );
	deepEqual( Stem("gångmattan"), "gångmattan" );
	deepEqual( Stem("gångna"), "gångn" );
	deepEqual( Stem("gångspelet"), "gångspelet" );
	deepEqual( Stem("gångstig"), "gångst" );
	deepEqual( Stem("går"), "går" );
	deepEqual( Stem("gård"), "gård" );
	deepEqual( Stem("gårdagen"), "gårdag" );
	deepEqual( Stem("gårdagens"), "gårdag" );
	deepEqual( Stem("gårdar"), "gård" );
	deepEqual( Stem("gården"), "gård" );
	deepEqual( Stem("gårdens"), "gård" );
	deepEqual( Stem("gårds"), "gård" );
	deepEqual( Stem("gårdsflygel"), "gårdsflygel" );
	deepEqual( Stem("gårdsflygeln"), "gårdsflygeln" );
	deepEqual( Stem("gårdshörnet"), "gårdshörnet" );
	deepEqual( Stem("gårdsmuren"), "gårdsmur" );
	deepEqual( Stem("gårdsplan"), "gårdsplan" );
	deepEqual( Stem("gårdsplanen"), "gårdsplan" );
	deepEqual( Stem("gårkök"), "gårkök" );
	deepEqual( Stem("gåsen"), "gås" );
	deepEqual( Stem("gåsmarsch"), "gåsmarsch" );
	deepEqual( Stem("gåsmarschen"), "gåsmarsch" );
	deepEqual( Stem("gåsvinge"), "gåsving" );
	deepEqual( Stem("gåta"), "gåt" );
	deepEqual( Stem("gåtan"), "gåtan" );
	deepEqual( Stem("gåtfull"), "gåtfull" );
	deepEqual( Stem("gåtfullt"), "gåtfull" );
	deepEqual( Stem("gåtlikt"), "gåtlik" );
	deepEqual( Stem("gåtor"), "gåt" );
	deepEqual( Stem("gåtornas"), "gåt" );
	deepEqual( Stem("gått"), "gått" );
	deepEqual( Stem("gåva"), "gåv" );
	deepEqual( Stem("gåvan"), "gåvan" );
	deepEqual( Stem("gåve"), "gåv" );
	deepEqual( Stem("gåven"), "gåv" );
	deepEqual( Stem("gåvo"), "gåvo" );
	deepEqual( Stem("gåvor"), "gåv" );
	deepEqual( Stem("gödde"), "gödd" );
	deepEqual( Stem("gödsel"), "gödsel" );
	deepEqual( Stem("göia"), "göia" );
	deepEqual( Stem("gök"), "gök" );
	deepEqual( Stem("gökar"), "gök" );
	deepEqual( Stem("göken"), "gök" );
	deepEqual( Stem("göm"), "göm" );
	deepEqual( Stem("gömd"), "gömd" );
	deepEqual( Stem("gömda"), "gömd" );
	deepEqual( Stem("gömde"), "gömd" );
	deepEqual( Stem("gömdt"), "gömd" );
	deepEqual( Stem("gömma"), "gömm" );
	deepEqual( Stem("gömmande"), "gömm" );
	deepEqual( Stem("gömmen"), "gömm" );
	deepEqual( Stem("gömmer"), "gömm" );
	deepEqual( Stem("gömsle"), "gömsl" );
	deepEqual( Stem("gömslen"), "gömsl" );
	deepEqual( Stem("gömställe"), "gömställ" );
	deepEqual( Stem("gömt"), "gömt" );
	deepEqual( Stem("gör"), "gör" );
	deepEqual( Stem("göra"), "gör" );
	deepEqual( Stem("göras"), "gör" );
	deepEqual( Stem("göres"), "gör" );
	deepEqual( Stem("göromål"), "göromål" );
	deepEqual( Stem("göta"), "göt" );
	deepEqual( Stem("göteborg"), "göteborg" );
	deepEqual( Stem("götiska"), "götisk" );
	deepEqual( Stem("h"), "h" );
	deepEqual( Stem("ha"), "ha" );
	deepEqual( Stem("hab"), "hab" );
	deepEqual( Stem("habilement"), "habilement" );
	deepEqual( Stem("habiten"), "habit" );
	deepEqual( Stem("hack"), "hack" );
	deepEqual( Stem("hacka"), "hack" );
	deepEqual( Stem("hackade"), "hack" );
	deepEqual( Stem("hackande"), "hack" );
	deepEqual( Stem("hackar"), "hack" );
	deepEqual( Stem("hackat"), "hack" );
	deepEqual( Stem("hackor"), "hack" );
	deepEqual( Stem("hacle"), "hacl" );
	deepEqual( Stem("had"), "had" );
	deepEqual( Stem("hadc"), "hadc" );
	deepEqual( Stem("hade"), "had" );
	deepEqual( Stem("haf"), "haf" );
	deepEqual( Stem("hafsfrun"), "hafsfrun" );
	deepEqual( Stem("hafsfågel"), "hafsfågel" );
	deepEqual( Stem("hafsjungfru"), "hafsjungfru" );
	deepEqual( Stem("hafsjungfrun"), "hafsjungfrun" );
	deepEqual( Stem("hafsmannen"), "hafsman" );
	deepEqual( Stem("hafsstranden"), "hafsstr" );
	deepEqual( Stem("hafssvallet"), "hafssvallet" );
	deepEqual( Stem("hafstrollen"), "hafstroll" );
	deepEqual( Stem("hafstång"), "hafstång" );
	deepEqual( Stem("hafsvattnet"), "hafsvattnet" );
	deepEqual( Stem("hafsytan"), "hafsytan" );
	deepEqual( Stem("haft"), "haft" );
	deepEqual( Stem("hafva"), "hafv" );
	deepEqual( Stem("hafven"), "hafv" );
	deepEqual( Stem("hafver"), "hafv" );
	deepEqual( Stem("hafvet"), "hafvet" );
	deepEqual( Stem("hafvets"), "hafvet" );
	deepEqual( Stem("haga"), "hag" );
	deepEqual( Stem("hagaparken"), "hagapark" );
	deepEqual( Stem("hagar"), "hag" );
	deepEqual( Stem("hage"), "hag" );
	deepEqual( Stem("hagen"), "hag" );
	deepEqual( Stem("hagens"), "hag" );
	deepEqual( Stem("haglig"), "hag" );
	deepEqual( Stem("haka"), "hak" );
	deepEqual( Stem("hakade"), "hak" );
	deepEqual( Stem("hakan"), "hakan" );
	deepEqual( Stem("hakar"), "hak" );
	deepEqual( Stem("hakat"), "hak" );
	deepEqual( Stem("hakom"), "hakom" );
	deepEqual( Stem("hal"), "hal" );
	deepEqual( Stem("hala"), "hal" );
	deepEqual( Stem("halade"), "hal" );
	deepEqual( Stem("halades"), "hal" );
	deepEqual( Stem("half"), "half" );
	deepEqual( Stem("halfbror"), "halfbr" );
	deepEqual( Stem("halfbrustna"), "halfbrustn" );
	deepEqual( Stem("halfdunkla"), "halfdunkl" );
	deepEqual( Stem("halfförfallet"), "halfförfallet" );
	deepEqual( Stem("halfgod"), "halfgod" );
	deepEqual( Stem("halfgråtande"), "halfgråt" );
	deepEqual( Stem("halfhviskade"), "halfhvisk" );
	deepEqual( Stem("halfhögt"), "halfhög" );
	deepEqual( Stem("halfslocknade"), "halfslockn" );
	deepEqual( Stem("halfslumrade"), "halfslumr" );
	deepEqual( Stem("halfsofvande"), "halfsofv" );
	deepEqual( Stem("halft"), "halft" );
	deepEqual( Stem("halftimme"), "halftimm" );
	deepEqual( Stem("halftrånande"), "halftrån" );
	deepEqual( Stem("halfvan"), "halfvan" );
	deepEqual( Stem("halfvilde"), "halfvild" );
	deepEqual( Stem("halfvissnade"), "halfvissn" );
	deepEqual( Stem("halfvägs"), "halfväg" );
	deepEqual( Stem("halka"), "halk" );
	deepEqual( Stem("halkade"), "halk" );
	deepEqual( Stem("halkat"), "halk" );
	deepEqual( Stem("hall"), "hall" );
	deepEqual( Stem("halla"), "hall" );
	deepEqual( Stem("hallandshedarnas"), "hallandshed" );
	deepEqual( Stem("halle"), "hall" );
	deepEqual( Stem("halleluja"), "halleluj" );
	deepEqual( Stem("hallen"), "hall" );
	deepEqual( Stem("haller"), "hall" );
	deepEqual( Stem("hallit"), "hallit" );
	deepEqual( Stem("hallonen"), "hallon" );
	deepEqual( Stem("hallonkräm"), "hallonkräm" );
	deepEqual( Stem("halls"), "hall" );
	deepEqual( Stem("hallström"), "hallström" );
	deepEqual( Stem("hallucination"), "hallucination" );
	deepEqual( Stem("hallå"), "hallå" );
	deepEqual( Stem("halm"), "halm" );
	deepEqual( Stem("halmgult"), "halmgult" );
	deepEqual( Stem("halmhatt"), "halmhat" );
	deepEqual( Stem("halmhatten"), "halmhat" );
	deepEqual( Stem("hals"), "hal" );
	deepEqual( Stem("halsade"), "hals" );
	deepEqual( Stem("halsar"), "hals" );
	deepEqual( Stem("halsband"), "halsband" );
	deepEqual( Stem("halsduk"), "halsduk" );
	deepEqual( Stem("halsduken"), "halsduk" );
	deepEqual( Stem("halsduksknuten"), "halsduksknut" );
	deepEqual( Stem("halsen"), "hals" );
	deepEqual( Stem("halsgropen"), "halsgrop" );
	deepEqual( Stem("halsstarriga"), "halsstarr" );
	deepEqual( Stem("halt"), "halt" );
	deepEqual( Stem("haltade"), "halt" );
	deepEqual( Stem("haltande"), "halt" );
	deepEqual( Stem("haltar"), "halt" );
	deepEqual( Stem("halts"), "halt" );
	deepEqual( Stem("halv"), "halv" );
	deepEqual( Stem("halva"), "halv" );
	deepEqual( Stem("halvan"), "halvan" );
	deepEqual( Stem("halvannan"), "halvannan" );
	deepEqual( Stem("halvar"), "halv" );
	deepEqual( Stem("halvbildning"), "halvbildning" );
	deepEqual( Stem("halvbutelj"), "halvbutelj" );
	deepEqual( Stem("halvdager"), "halvdag" );
	deepEqual( Stem("halvdagern"), "halvdag" );
	deepEqual( Stem("halvdrömmande"), "halvdrömm" );
	deepEqual( Stem("halvdunklet"), "halvdunklet" );
	deepEqual( Stem("halvdöende"), "halvdöend" );
	deepEqual( Stem("halvfylld"), "halvfylld" );
	deepEqual( Stem("halvfärdig"), "halvfärd" );
	deepEqual( Stem("halvförtäckta"), "halvförtäck" );
	deepEqual( Stem("halvgamle"), "halvgaml" );
	deepEqual( Stem("halvgråtande"), "halvgråt" );
	deepEqual( Stem("halvhögt"), "halvhög" );
	deepEqual( Stem("halvjude"), "halvjud" );
	deepEqual( Stem("halvklart"), "halvklart" );
	deepEqual( Stem("halvklädd"), "halvkläd" );
	deepEqual( Stem("halvkvävd"), "halvkvävd" );
	deepEqual( Stem("halvkvävda"), "halvkvävd" );
	deepEqual( Stem("halvliggande"), "halvligg" );
	deepEqual( Stem("halvläkta"), "halvläk" );
	deepEqual( Stem("halvmedvetet"), "halvmedvetet" );
	deepEqual( Stem("halvmörkret"), "halvmörkret" );
	deepEqual( Stem("halvrökt"), "halvrök" );
	deepEqual( Stem("halvskymd"), "halvskymd" );
	deepEqual( Stem("halvslummer"), "halvslumm" );
	deepEqual( Stem("halvslutna"), "halvslutn" );
	deepEqual( Stem("halvsovande"), "halvsov" );
	deepEqual( Stem("halvstop"), "halvstop" );
	deepEqual( Stem("halvsänkt"), "halvsänk" );
	deepEqual( Stem("halvt"), "halvt" );
	deepEqual( Stem("halvtannat"), "halvtan" );
	deepEqual( Stem("halvtimme"), "halvtimm" );
	deepEqual( Stem("halvtoner"), "halvton" );
	deepEqual( Stem("halvtömt"), "halvtömt" );
	deepEqual( Stem("halvvaken"), "halvvak" );
	deepEqual( Stem("halvvuxen"), "halvvux" );
	deepEqual( Stem("halvvuxna"), "halvvuxn" );
	deepEqual( Stem("halvvägs"), "halvväg" );
	deepEqual( Stem("halvår"), "halvår" );
	deepEqual( Stem("halvöppen"), "halvöpp" );
	deepEqual( Stem("halvöppna"), "halvöppn" );
	deepEqual( Stem("ham"), "ham" );
	deepEqual( Stem("hamburg"), "hamburg" );
	deepEqual( Stem("hamburger"), "hamburg" );
	deepEqual( Stem("hamburgerlotteriet"), "hamburgerlotteriet" );
	deepEqual( Stem("hammare"), "hamm" );
	deepEqual( Stem("hamn"), "hamn" );
	deepEqual( Stem("hamna"), "hamn" );
	deepEqual( Stem("hamnade"), "hamn" );
	deepEqual( Stem("hamnat"), "hamn" );
	deepEqual( Stem("hamnen"), "hamn" );
	deepEqual( Stem("hamngatan"), "hamngatan" );
	deepEqual( Stem("hampfrö"), "hampfrö" );
	deepEqual( Stem("hamrade"), "hamr" );
	deepEqual( Stem("han"), "han" );
	deepEqual( Stem("hand"), "hand" );
	deepEqual( Stem("handarbctcn"), "handarbctcn" );
	deepEqual( Stem("handarbete"), "handarbet" );
	deepEqual( Stem("handduk"), "handduk" );
	deepEqual( Stem("handdukar"), "handduk" );
	deepEqual( Stem("handduken"), "handduk" );
	deepEqual( Stem("handdukshängare"), "handdukshäng" );
	deepEqual( Stem("handel"), "handel" );
	deepEqual( Stem("handeln"), "handeln" );
	deepEqual( Stem("handelsboden"), "handelsbod" );
	deepEqual( Stem("handelsföretag"), "handelsföretag" );
	deepEqual( Stem("handelshus"), "handelshus" );
	deepEqual( Stem("handelsjudar"), "handelsjud" );
	deepEqual( Stem("handelsman"), "handelsman" );
	deepEqual( Stem("handelsmannen"), "handelsman" );
	deepEqual( Stem("handen"), "hand" );
	deepEqual( Stem("handens"), "hand" );
	deepEqual( Stem("hander"), "hand" );
	deepEqual( Stem("handfallen"), "handfall" );
	deepEqual( Stem("handfaten"), "handfat" );
	deepEqual( Stem("handfatet"), "handfatet" );
	deepEqual( Stem("handflatan"), "handflatan" );
	deepEqual( Stem("handfull"), "handfull" );
	deepEqual( Stem("handhafva"), "handhafv" );
	deepEqual( Stem("handhava"), "handhav" );
	deepEqual( Stem("handkammare"), "handkamm" );
	deepEqual( Stem("handkammaren"), "handkamm" );
	deepEqual( Stem("handklappningar"), "handklappning" );
	deepEqual( Stem("handla"), "handl" );
	deepEqual( Stem("handlade"), "handl" );
	deepEqual( Stem("handlande"), "handl" );
	deepEqual( Stem("handlar"), "handl" );
	deepEqual( Stem("handlat"), "handl" );
	deepEqual( Stem("handled"), "handled" );
	deepEqual( Stem("handleden"), "handled" );
	deepEqual( Stem("handling"), "handling" );
	deepEqual( Stem("handlingar"), "handling" );
	deepEqual( Stem("handlingen"), "handling" );
	deepEqual( Stem("handlingens"), "handling" );
	deepEqual( Stem("handlingssätt"), "handlingssät" );
	deepEqual( Stem("handlöst"), "handlös" );
	deepEqual( Stem("handom"), "handom" );
	deepEqual( Stem("handrörelse"), "handrör" );
	deepEqual( Stem("handrörelser"), "handrör" );
	deepEqual( Stem("hands"), "hand" );
	deepEqual( Stem("handskar"), "handsk" );
	deepEqual( Stem("handskats"), "handskat" );
	deepEqual( Stem("handske"), "handsk" );
	deepEqual( Stem("handsken"), "handsk" );
	deepEqual( Stem("handslag"), "handslag" );
	deepEqual( Stem("handstil"), "handstil" );
	deepEqual( Stem("handtaget"), "handtaget" );
	deepEqual( Stem("handteckning"), "handteckning" );
	deepEqual( Stem("handteckningen"), "handteckning" );
	deepEqual( Stem("handtera"), "handter" );
	deepEqual( Stem("handtryckning"), "handtryckning" );
	deepEqual( Stem("handtryckningar"), "handtryckning" );
	deepEqual( Stem("handtverket"), "handtverket" );
	deepEqual( Stem("handtverkslära"), "handtverkslär" );
	deepEqual( Stem("handväskan"), "handväskan" );
	deepEqual( Stem("hane"), "han" );
	deepEqual( Stem("hanhundar"), "hanhund" );
	deepEqual( Stem("hann"), "hann" );
	deepEqual( Stem("hannarnas"), "hann" );
	deepEqual( Stem("hanringdeoch"), "hanringdeoch" );
	deepEqual( Stem("hans"), "han" );
	deepEqual( Stem("hansestäderna"), "hansestäd" );
	deepEqual( Stem("hantera"), "hanter" );
	deepEqual( Stem("hanterar"), "hanter" );
	deepEqual( Stem("hantverk"), "hantverk" );
	deepEqual( Stem("hantverksklassen"), "hantverksklass" );
	deepEqual( Stem("har"), "har" );
	deepEqual( Stem("haraldsson"), "haraldsson" );
	deepEqual( Stem("haraldssons"), "haraldsson" );
	deepEqual( Stem("harang"), "harang" );
	deepEqual( Stem("hard"), "hard" );
	deepEqual( Stem("hardning"), "hardning" );
	deepEqual( Stem("hards"), "hard" );
	deepEqual( Stem("hare"), "har" );
	deepEqual( Stem("harem"), "harem" );
	deepEqual( Stem("haremsdam"), "haremsdam" );
	deepEqual( Stem("haret"), "haret" );
	deepEqual( Stem("harig"), "har" );
	deepEqual( Stem("harklade"), "harkl" );
	deepEqual( Stem("harkrank"), "harkrank" );
	deepEqual( Stem("harl"), "harl" );
	deepEqual( Stem("harm"), "harm" );
	deepEqual( Stem("harmar"), "harm" );
	deepEqual( Stem("harmas"), "harm" );
	deepEqual( Stem("harmen"), "harm" );
	deepEqual( Stem("harmligt"), "harm" );
	deepEqual( Stem("harmoniska"), "harmonisk" );
	deepEqual( Stem("harmoniskt"), "harmonisk" );
	deepEqual( Stem("harmsen"), "harms" );
	deepEqual( Stem("harmset"), "harmset" );
	deepEqual( Stem("harmsna"), "harmsn" );
	deepEqual( Stem("harpolek"), "harpolek" );
	deepEqual( Stem("harpspelerska"), "harpspelersk" );
	deepEqual( Stem("harpun"), "harpun" );
	deepEqual( Stem("harpunen"), "harpun" );
	deepEqual( Stem("harskling"), "harskling" );
	deepEqual( Stem("harvatten"), "harvat" );
	deepEqual( Stem("hasande"), "has" );
	deepEqual( Stem("hasar"), "has" );
	deepEqual( Stem("hasselbacken"), "hasselback" );
	deepEqual( Stem("hasselbacksmiddag"), "hasselbacksmiddag" );
	deepEqual( Stem("hasselblåst"), "hasselblåst" );
	deepEqual( Stem("hasselfrans"), "hasselfran" );
	deepEqual( Stem("hasselkäpp"), "hasselkäpp" );
	deepEqual( Stem("hast"), "hast" );
	deepEqual( Stem("hastade"), "hast" );
	deepEqual( Stem("hastig"), "hast" );
	deepEqual( Stem("hastiga"), "hast" );
	deepEqual( Stem("hastighet"), "hast" );
	deepEqual( Stem("hastigheten"), "hast" );
	deepEqual( Stem("hastigt"), "hast" );
	deepEqual( Stem("hastl"), "hastl" );
	deepEqual( Stem("hat"), "hat" );
	deepEqual( Stem("hata"), "hat" );
	deepEqual( Stem("hatade"), "hat" );
	deepEqual( Stem("hatande"), "hat" );
	deepEqual( Stem("hatar"), "hat" );
	deepEqual( Stem("hatat"), "hat" );
	deepEqual( Stem("hatet"), "hatet" );
	deepEqual( Stem("hatfulla"), "hatfull" );
	deepEqual( Stem("hatska"), "hatsk" );
	deepEqual( Stem("hatt"), "hatt" );
	deepEqual( Stem("hattar"), "hatt" );
	deepEqual( Stem("hattbrättet"), "hattbrättet" );
	deepEqual( Stem("hatten"), "hatt" );
	deepEqual( Stem("hatthyllan"), "hatthyllan" );
	deepEqual( Stem("hattmakare"), "hattmak" );
	deepEqual( Stem("hattskrålla"), "hattskråll" );
	deepEqual( Stem("hau"), "hau" );
	deepEqual( Stem("hav"), "hav" );
	deepEqual( Stem("hava"), "hav" );
	deepEqual( Stem("havande"), "hav" );
	deepEqual( Stem("havannamagasinet"), "havannamagasinet" );
	deepEqual( Stem("have"), "hav" );
	deepEqual( Stem("haven"), "hav" );
	deepEqual( Stem("haver"), "hav" );
	deepEqual( Stem("havet"), "havet" );
	deepEqual( Stem("havets"), "havet" );
	deepEqual( Stem("havrebröd"), "havrebröd" );
	deepEqual( Stem("havs"), "hav" );
	deepEqual( Stem("havsbottnen"), "havsbottn" );
	deepEqual( Stem("havsstranden"), "havsstr" );
	deepEqual( Stem("hbma"), "hbma" );
	deepEqual( Stem("hclgc"), "hclgc" );
	deepEqual( Stem("hclme"), "hclme" );
	deepEqual( Stem("hclt"), "hclt" );
	deepEqual( Stem("hcm"), "hcm" );
	deepEqual( Stem("hcmles"), "hcmles" );
	deepEqual( Stem("hcnncs"), "hcnncs" );
	deepEqual( Stem("hcnne"), "hcnne" );
	deepEqual( Stem("hcnnes"), "hcnnes" );
	deepEqual( Stem("hdde"), "hdde" );
	deepEqual( Stem("hdnom"), "hdnom" );
	deepEqual( Stem("hebrons"), "hebron" );
	deepEqual( Stem("hed"), "hed" );
	deepEqual( Stem("hedar"), "hed" );
	deepEqual( Stem("hedborn"), "hedborn" );
	deepEqual( Stem("heden"), "hed" );
	deepEqual( Stem("hedenhös"), "hedenhös" );
	deepEqual( Stem("heder"), "hed" );
	deepEqual( Stem("hederlig"), "heder" );
	deepEqual( Stem("hederliga"), "heder" );
	deepEqual( Stem("hederlige"), "heder" );
	deepEqual( Stem("hederligheten"), "heder" );
	deepEqual( Stem("hederligt"), "heder" );
	deepEqual( Stem("hedern"), "hed" );
	deepEqual( Stem("hederns"), "hed" );
	deepEqual( Stem("hedersdag"), "hedersdag" );
	deepEqual( Stem("hederskänsla"), "hederskänsl" );
	deepEqual( Stem("hedersmannen"), "hedersman" );
	deepEqual( Stem("hedersord"), "hedersord" );
	deepEqual( Stem("hederspaschan"), "hederspaschan" );
	deepEqual( Stem("hedersplats"), "hedersplat" );
	deepEqual( Stem("hederssak"), "hederssak" );
	deepEqual( Stem("hedersvakt"), "hedersvak" );
	deepEqual( Stem("hedervärda"), "hedervärd" );
	deepEqual( Stem("hednatiden"), "hednatid" );
	deepEqual( Stem("hedrad"), "hedr" );
	deepEqual( Stem("hedrade"), "hedr" );
	deepEqual( Stem("hedrande"), "hedr" );
	deepEqual( Stem("hedrar"), "hedr" );
	deepEqual( Stem("hedrat"), "hedr" );
	deepEqual( Stem("hedrats"), "hedrat" );
	deepEqual( Stem("heidelberg"), "heidelberg" );
	deepEqual( Stem("heidelberga"), "heidelberg" );
	deepEqual( Stem("hej"), "hej" );
	deepEqual( Stem("hejda"), "hejd" );
	deepEqual( Stem("hejdade"), "hejd" );
	deepEqual( Stem("hejdlöst"), "hejdlös" );
	deepEqual( Stem("hektiska"), "hektisk" );
	deepEqual( Stem("hel"), "hel" );
	deepEqual( Stem("hela"), "hel" );
	deepEqual( Stem("helades"), "hel" );
	deepEqual( Stem("helande"), "hel" );
	deepEqual( Stem("helena"), "helen" );
	deepEqual( Stem("helfigur"), "helfigur" );
	deepEqual( Stem("helg"), "helg" );
	deepEqual( Stem("helga"), "helg" );
	deepEqual( Stem("helgad"), "helg" );
	deepEqual( Stem("helgade"), "helg" );
	deepEqual( Stem("helgat"), "helg" );
	deepEqual( Stem("helgdagsaftonen"), "helgdagsafton" );
	deepEqual( Stem("helgdagsdrägt"), "helgdagsdräg" );
	deepEqual( Stem("helgdagshatten"), "helgdagshat" );
	deepEqual( Stem("helgdagskläder"), "helgdagskläd" );
	deepEqual( Stem("helgdagskläderna"), "helgdagskläd" );
	deepEqual( Stem("helgdagsklänning"), "helgdagsklänning" );
	deepEqual( Stem("helgeandsholmens"), "helgeandsholm" );
	deepEqual( Stem("helgedom"), "helgedom" );
	deepEqual( Stem("helgelse"), "helg" );
	deepEqual( Stem("helgjuten"), "helgjut" );
	deepEqual( Stem("helgon"), "helgon" );
	deepEqual( Stem("helgongriften"), "helgongrift" );
	deepEqual( Stem("helhet"), "hel" );
	deepEqual( Stem("helig"), "hel" );
	deepEqual( Stem("heliga"), "hel" );
	deepEqual( Stem("heligaorden"), "heligaord" );
	deepEqual( Stem("heligas"), "hel" );
	deepEqual( Stem("heligaste"), "hel" );
	deepEqual( Stem("helighet"), "hel" );
	deepEqual( Stem("heligt"), "hel" );
	deepEqual( Stem("heller"), "hell" );
	deepEqual( Stem("hellre"), "hellr" );
	deepEqual( Stem("helme"), "helm" );
	deepEqual( Stem("helmes"), "helm" );
	deepEqual( Stem("helsa"), "hels" );
	deepEqual( Stem("helsad"), "hels" );
	deepEqual( Stem("helsade"), "hels" );
	deepEqual( Stem("helsades"), "hels" );
	deepEqual( Stem("helsan"), "helsan" );
	deepEqual( Stem("helsar"), "hels" );
	deepEqual( Stem("helsat"), "hels" );
	deepEqual( Stem("helskinnad"), "helskin" );
	deepEqual( Stem("helsning"), "helsning" );
	deepEqual( Stem("helsningar"), "helsning" );
	deepEqual( Stem("helsningen"), "helsning" );
	deepEqual( Stem("helsosamma"), "helsosamm" );
	deepEqual( Stem("helst"), "helst" );
	deepEqual( Stem("helt"), "helt" );
	deepEqual( Stem("helv"), "helv" );
	deepEqual( Stem("helvete"), "helvet" );
	deepEqual( Stem("helvetes"), "helvet" );
	deepEqual( Stem("helvetet"), "helvetet" );
	deepEqual( Stem("helvetets"), "helvetet" );
	deepEqual( Stem("helvetiska"), "helvetisk" );
	deepEqual( Stem("helvetiskt"), "helvetisk" );
	deepEqual( Stem("hem"), "hem" );
	deepEqual( Stem("hembakade"), "hembak" );
	deepEqual( Stem("hembjuden"), "hembjud" );
	deepEqual( Stem("hembygd"), "hembyg" );
	deepEqual( Stem("hembära"), "hembär" );
	deepEqual( Stem("hemdygder"), "hemdyg" );
	deepEqual( Stem("hemforslad"), "hemforsl" );
	deepEqual( Stem("hemfärden"), "hemfärd" );
	deepEqual( Stem("hemför"), "hemför" );
	deepEqual( Stem("hemförd"), "hemförd" );
	deepEqual( Stem("hemförde"), "hemförd" );
	deepEqual( Stem("hemgift"), "hemgift" );
	deepEqual( Stem("hemgiften"), "hemgift" );
	deepEqual( Stem("hemgjorda"), "hemgjord" );
	deepEqual( Stem("hemgång"), "hemgång" );
	deepEqual( Stem("hemifrån"), "hemifrån" );
	deepEqual( Stem("hemjordens"), "hemjord" );
	deepEqual( Stem("hemkalla"), "hemkall" );
	deepEqual( Stem("hemkommen"), "hemkomm" );
	deepEqual( Stem("hemkommit"), "hemkommit" );
	deepEqual( Stem("hemkomna"), "hemkomn" );
	deepEqual( Stem("hemkomst"), "hemkomst" );
	deepEqual( Stem("hemkomsten"), "hemkomst" );
	deepEqual( Stem("hemkärt"), "hemkärt" );
	deepEqual( Stem("hemland"), "hemland" );
	deepEqual( Stem("hemlc"), "hemlc" );
	deepEqual( Stem("hemle"), "heml" );
	deepEqual( Stem("hemles"), "heml" );
	deepEqual( Stem("hemlig"), "hem" );
	deepEqual( Stem("hemliga"), "hem" );
	deepEqual( Stem("hemlige"), "hem" );
	deepEqual( Stem("hemligen"), "hem" );
	deepEqual( Stem("hemlighet"), "hem" );
	deepEqual( Stem("hemligheten"), "hem" );
	deepEqual( Stem("hemligheter"), "hem" );
	deepEqual( Stem("hemlighets"), "hemlighet" );
	deepEqual( Stem("hemlighetsfull"), "hemlighetsfull" );
	deepEqual( Stem("hemlighetsfulla"), "hemlighetsfull" );
	deepEqual( Stem("hemlighetsfullt"), "hemlighetsfull" );
	deepEqual( Stem("hemligt"), "hem" );
	deepEqual( Stem("hemlotsande"), "hemlots" );
	deepEqual( Stem("hemlängtan"), "hemlängtan" );
	deepEqual( Stem("hemma"), "hemm" );
	deepEqual( Stem("hemmansdöttrar"), "hemmansdöttr" );
	deepEqual( Stem("hemmansägardotter"), "hemmansägardot" );
	deepEqual( Stem("hemmansägare"), "hemmansäg" );
	deepEqual( Stem("hemmastadd"), "hemmastad" );
	deepEqual( Stem("hemmastatt"), "hemmastat" );
	deepEqual( Stem("hemmavaro"), "hemmavaro" );
	deepEqual( Stem("hemme"), "hemm" );
	deepEqual( Stem("hemmes"), "hemm" );
	deepEqual( Stem("hemmet"), "hemmet" );
	deepEqual( Stem("hemmets"), "hemmet" );
	deepEqual( Stem("hemne"), "hemn" );
	deepEqual( Stem("hemort"), "hemort" );
	deepEqual( Stem("hemorten"), "hemort" );
	deepEqual( Stem("hemresa"), "hemres" );
	deepEqual( Stem("hemresan"), "hemresan" );
	deepEqual( Stem("hemresande"), "hemres" );
	deepEqual( Stem("hemrma"), "hemrm" );
	deepEqual( Stem("hemsjuk"), "hemsjuk" );
	deepEqual( Stem("hemsk"), "hemsk" );
	deepEqual( Stem("hemska"), "hemsk" );
	deepEqual( Stem("hemskhet"), "hemsk" );
	deepEqual( Stem("hemskickad"), "hemskick" );
	deepEqual( Stem("hemskt"), "hemsk" );
	deepEqual( Stem("hemstad"), "hemst" );
	deepEqual( Stem("hemsökelsen"), "hemsök" );
	deepEqual( Stem("hemsökelser"), "hemsök" );
	deepEqual( Stem("hemsökte"), "hemsök" );
	deepEqual( Stem("hemsöktes"), "hemsök" );
	deepEqual( Stem("hemta"), "hemt" );
	deepEqual( Stem("hemtade"), "hemt" );
	deepEqual( Stem("hemtades"), "hemt" );
	deepEqual( Stem("hemtar"), "hemt" );
	deepEqual( Stem("hemtrevligt"), "hemtrev" );
	deepEqual( Stem("hemtrevnad"), "hemtrevn" );
	deepEqual( Stem("hemväg"), "hemväg" );
	deepEqual( Stem("hemvägen"), "hemväg" );
	deepEqual( Stem("hemåt"), "hemåt" );
	deepEqual( Stem("hen"), "hen" );
	deepEqual( Stem("henck"), "henck" );
	deepEqual( Stem("hencks"), "henck" );
	deepEqual( Stem("hende"), "hend" );
	deepEqual( Stem("hendec"), "hendec" );
	deepEqual( Stem("henmc"), "henmc" );
	deepEqual( Stem("henme"), "henm" );
	deepEqual( Stem("henmes"), "henm" );
	deepEqual( Stem("henna"), "henn" );
	deepEqual( Stem("hennc"), "hennc" );
	deepEqual( Stem("henncs"), "hennc" );
	deepEqual( Stem("henne"), "henn" );
	deepEqual( Stem("hennes"), "henn" );
	deepEqual( Stem("henning"), "henning" );
	deepEqual( Stem("hennings"), "henning" );
	deepEqual( Stem("hennt"), "hennt" );
	deepEqual( Stem("henrika"), "henrik" );
	deepEqual( Stem("henrle"), "henrl" );
	deepEqual( Stem("heraldik"), "heraldik" );
	deepEqual( Stem("heraldiskt"), "heraldisk" );
	deepEqual( Stem("herbergera"), "herberger" );
	deepEqual( Stem("herbergerat"), "herberger" );
	deepEqual( Stem("herde"), "herd" );
	deepEqual( Stem("herdespel"), "herdespel" );
	deepEqual( Stem("herdesång"), "herdesång" );
	deepEqual( Stem("herdinna"), "herdin" );
	deepEqual( Stem("hergell"), "hergell" );
	deepEqual( Stem("herme"), "herm" );
	deepEqual( Stem("hern"), "hern" );
	deepEqual( Stem("herodes"), "herod" );
	deepEqual( Stem("herodias"), "herodi" );
	deepEqual( Stem("heroiske"), "heroisk" );
	deepEqual( Stem("herr"), "herr" );
	deepEqual( Stem("herran"), "herran" );
	deepEqual( Stem("herranom"), "herranom" );
	deepEqual( Stem("herrans"), "herran" );
	deepEqual( Stem("herrar"), "herr" );
	deepEqual( Stem("herrarna"), "herr" );
	deepEqual( Stem("herrarnas"), "herr" );
	deepEqual( Stem("herrarne"), "herr" );
	deepEqual( Stem("herre"), "herr" );
	deepEqual( Stem("herregud"), "herregud" );
	deepEqual( Stem("herrejestanes"), "herrejestan" );
	deepEqual( Stem("herrekarlar"), "herrekarl" );
	deepEqual( Stem("herrekarlsrock"), "herrekarlsrock" );
	deepEqual( Stem("herrelös"), "herrelös" );
	deepEqual( Stem("herrelösa"), "herrelös" );
	deepEqual( Stem("herren"), "herr" );
	deepEqual( Stem("herrens"), "herr" );
	deepEqual( Stem("herres"), "herr" );
	deepEqual( Stem("herresäte"), "herresät" );
	deepEqual( Stem("herresätena"), "herresäten" );
	deepEqual( Stem("herrgardsekipage"), "herrgardsekipag" );
	deepEqual( Stem("herrgdrdsbyggnaden"), "herrgdrdsbyggnad" );
	deepEqual( Stem("herrgård"), "herrgård" );
	deepEqual( Stem("herrgårdar"), "herrgård" );
	deepEqual( Stem("herrgården"), "herrgård" );
	deepEqual( Stem("herrgårdsbyggnaden"), "herrgårdsbyggnad" );
	deepEqual( Stem("herrgårdsdamerna"), "herrgårdsdam" );
	deepEqual( Stem("herrgårdsekipage"), "herrgårdsekipag" );
	deepEqual( Stem("herrgårdsfröken"), "herrgårdsfrök" );
	deepEqual( Stem("herrgårdsköket"), "herrgårdsköket" );
	deepEqual( Stem("herrgårdsliv"), "herrgårdsliv" );
	deepEqual( Stem("herrgårdsrum"), "herrgårdsrum" );
	deepEqual( Stem("herrinnan"), "herrinnan" );
	deepEqual( Stem("herrn"), "herrn" );
	deepEqual( Stem("herrskap"), "herrskap" );
	deepEqual( Stem("herrskapers"), "herrskaper" );
	deepEqual( Stem("herrskapet"), "herrskapet" );
	deepEqual( Stem("herrskapets"), "herrskapet" );
	deepEqual( Stem("herrskaps"), "herrskap" );
	deepEqual( Stem("herrskapsfolkets"), "herrskapsfolket" );
	deepEqual( Stem("herrskapsklassen"), "herrskapsklass" );
	deepEqual( Stem("herskade"), "hersk" );
	deepEqual( Stem("hertha"), "herth" );
	deepEqual( Stem("herthas"), "herth" );
	deepEqual( Stem("hertig"), "hert" );
	deepEqual( Stem("hertigen"), "hert" );
	deepEqual( Stem("hes"), "hes" );
	deepEqual( Stem("hesa"), "hes" );
	deepEqual( Stem("hesatt"), "hesat" );
	deepEqual( Stem("heslutsamhet"), "heslutsam" );
	deepEqual( Stem("hessingen"), "hessing" );
	deepEqual( Stem("hest"), "hest" );
	deepEqual( Stem("het"), "het" );
	deepEqual( Stem("heta"), "het" );
	deepEqual( Stem("hetare"), "het" );
	deepEqual( Stem("hetast"), "het" );
	deepEqual( Stem("hetat"), "het" );
	deepEqual( Stem("heten"), "het" );
	deepEqual( Stem("hetens"), "het" );
	deepEqual( Stem("heter"), "het" );
	deepEqual( Stem("hetmes"), "hetm" );
	deepEqual( Stem("hets"), "het" );
	deepEqual( Stem("hetsa"), "hets" );
	deepEqual( Stem("hetsad"), "hets" );
	deepEqual( Stem("hetsade"), "hets" );
	deepEqual( Stem("hetsande"), "hets" );
	deepEqual( Stem("hetsar"), "hets" );
	deepEqual( Stem("hetsig"), "hets" );
	deepEqual( Stem("hetsiga"), "hets" );
	deepEqual( Stem("hetsigt"), "hets" );
	deepEqual( Stem("hetsit"), "hetsit" );
	deepEqual( Stem("hetsjakt"), "hetsjak" );
	deepEqual( Stem("hett"), "hett" );
	deepEqual( Stem("hetta"), "hett" );
	deepEqual( Stem("hettade"), "hett" );
	deepEqual( Stem("hettan"), "hettan" );
	deepEqual( Stem("hettande"), "hett" );
	deepEqual( Stem("hette"), "hett" );
	deepEqual( Stem("hga"), "hga" );
	deepEqual( Stem("hi"), "hi" );
	deepEqual( Stem("hicka"), "hick" );
	deepEqual( Stem("him"), "him" );
	deepEqual( Stem("himlabryn"), "himlabryn" );
	deepEqual( Stem("himlabågen"), "himlabåg" );
	deepEqual( Stem("himlafrö"), "himlafrö" );
	deepEqual( Stem("himlande"), "himl" );
	deepEqual( Stem("himlen"), "himl" );
	deepEqual( Stem("himlens"), "himl" );
	deepEqual( Stem("himmel"), "himmel" );
	deepEqual( Stem("himmelen"), "himmel" );
	deepEqual( Stem("himmelens"), "himmel" );
	deepEqual( Stem("himmeln"), "himmeln" );
	deepEqual( Stem("himmelriket"), "himmelriket" );
	deepEqual( Stem("himmelrikets"), "himmelriket" );
	deepEqual( Stem("himmels"), "himmel" );
	deepEqual( Stem("himmelska"), "himmelsk" );
	deepEqual( Stem("himmelskas"), "himmelsk" );
	deepEqual( Stem("himmelske"), "himmelsk" );
	deepEqual( Stem("himmelskt"), "himmelsk" );
	deepEqual( Stem("himmelssäng"), "himmelssäng" );
	deepEqual( Stem("himmelssängen"), "himmelssäng" );
	deepEqual( Stem("himmrlskt"), "himmrlsk" );
	deepEqual( Stem("hin"), "hin" );
	deepEqual( Stem("hind"), "hind" );
	deepEqual( Stem("hinder"), "hind" );
	deepEqual( Stem("hindra"), "hindr" );
	deepEqual( Stem("hindrad"), "hindr" );
	deepEqual( Stem("hindrade"), "hindr" );
	deepEqual( Stem("hindrar"), "hindr" );
	deepEqual( Stem("hindrat"), "hindr" );
	deepEqual( Stem("hink"), "hink" );
	deepEqual( Stem("hinken"), "hink" );
	deepEqual( Stem("hinna"), "hinn" );
	deepEqual( Stem("hinner"), "hinn" );
	deepEqual( Stem("hiram"), "hiram" );
	deepEqual( Stem("hiskligt"), "hisk" );
	deepEqual( Stem("hisnade"), "hisn" );
	deepEqual( Stem("hisnande"), "hisn" );
	deepEqual( Stem("hissades"), "hiss" );
	deepEqual( Stem("historia"), "histori" );
	deepEqual( Stem("historie"), "histori" );
	deepEqual( Stem("historielärare"), "historielär" );
	deepEqual( Stem("historieläraren"), "historielär" );
	deepEqual( Stem("historielärarinnan"), "historielärarinnan" );
	deepEqual( Stem("historiemålning"), "historiemålning" );
	deepEqual( Stem("historien"), "histori" );
	deepEqual( Stem("historier"), "histori" );
	deepEqual( Stem("historierna"), "histori" );
	deepEqual( Stem("historietimme"), "historietimm" );
	deepEqual( Stem("histrioner"), "histrion" );
	deepEqual( Stem("hit"), "hit" );
	deepEqual( Stem("hitbjudit"), "hitbjudit" );
	deepEqual( Stem("hitintills"), "hitintill" );
	deepEqual( Stem("hitresa"), "hitres" );
	deepEqual( Stem("hitskickade"), "hitskick" );
	deepEqual( Stem("hitta"), "hitt" );
	deepEqual( Stem("hittadc"), "hittadc" );
	deepEqual( Stem("hittade"), "hitt" );
	deepEqual( Stem("hittar"), "hitt" );
	deepEqual( Stem("hittat"), "hitt" );
	deepEqual( Stem("hittebarn"), "hittebarn" );
	deepEqual( Stem("hittills"), "hittill" );
	deepEqual( Stem("hitåt"), "hitåt" );
	deepEqual( Stem("hjalmar"), "hjalm" );
	deepEqual( Stem("hjalpa"), "hjalp" );
	deepEqual( Stem("hjalplöshet"), "hjalplös" );
	deepEqual( Stem("hjalplöst"), "hjalplös" );
	deepEqual( Stem("hjalpte"), "hjalpt" );
	deepEqual( Stem("hjarhn"), "hjarhn" );
	deepEqual( Stem("hjarna"), "hjarn" );
	deepEqual( Stem("hjarta"), "hjart" );
	deepEqual( Stem("hjartan"), "hjartan" );
	deepEqual( Stem("hjel"), "hjel" );
	deepEqual( Stem("hjelp"), "hjelp" );
	deepEqual( Stem("hjelpa"), "hjelp" );
	deepEqual( Stem("hjelpe"), "hjelp" );
	deepEqual( Stem("hjelpen"), "hjelp" );
	deepEqual( Stem("hjelper"), "hjelp" );
	deepEqual( Stem("hjelpreda"), "hjelpred" );
	deepEqual( Stem("hjelpt"), "hjelpt" );
	deepEqual( Stem("hjelpte"), "hjelpt" );
	deepEqual( Stem("hjelptes"), "hjelpt" );
	deepEqual( Stem("hjelte"), "hjelt" );
	deepEqual( Stem("hjeltinna"), "hjeltin" );
	deepEqual( Stem("hjerna"), "hjern" );
	deepEqual( Stem("hjernan"), "hjernan" );
	deepEqual( Stem("hjerta"), "hjert" );
	deepEqual( Stem("hjertan"), "hjertan" );
	deepEqual( Stem("hjertandes"), "hjert" );
	deepEqual( Stem("hjertans"), "hjertan" );
	deepEqual( Stem("hjertas"), "hjert" );
	deepEqual( Stem("hjertat"), "hjert" );
	deepEqual( Stem("hjertats"), "hjertat" );
	deepEqual( Stem("hjerteqval"), "hjerteqval" );
	deepEqual( Stem("hjertesorg"), "hjertesorg" );
	deepEqual( Stem("hjerteångest"), "hjerteångest" );
	deepEqual( Stem("hjertgropen"), "hjertgrop" );
	deepEqual( Stem("hjertklappning"), "hjertklappning" );
	deepEqual( Stem("hjertlig"), "hjert" );
	deepEqual( Stem("hjertliga"), "hjert" );
	deepEqual( Stem("hjertligaste"), "hjert" );
	deepEqual( Stem("hjertligen"), "hjert" );
	deepEqual( Stem("hjertligt"), "hjert" );
	deepEqual( Stem("hjertlöse"), "hjertlös" );
	deepEqual( Stem("hjon"), "hjon" );
	deepEqual( Stem("hjord"), "hjord" );
	deepEqual( Stem("hjortronplan"), "hjortronplan" );
	deepEqual( Stem("hjul"), "hjul" );
	deepEqual( Stem("hjulens"), "hjul" );
	deepEqual( Stem("hjulet"), "hjulet" );
	deepEqual( Stem("hjulets"), "hjulet" );
	deepEqual( Stem("hjulspårens"), "hjulspår" );
	deepEqual( Stem("hjälp"), "hjälp" );
	deepEqual( Stem("hjälpa"), "hjälp" );
	deepEqual( Stem("hjälpande"), "hjälp" );
	deepEqual( Stem("hjälpas"), "hjälp" );
	deepEqual( Stem("hjälpe"), "hjälp" );
	deepEqual( Stem("hjälpen"), "hjälp" );
	deepEqual( Stem("hjälper"), "hjälp" );
	deepEqual( Stem("hjälpligt"), "hjälp" );
	deepEqual( Stem("hjälplös"), "hjälplös" );
	deepEqual( Stem("hjälplösa"), "hjälplös" );
	deepEqual( Stem("hjälplöst"), "hjälplös" );
	deepEqual( Stem("hjälpmadam"), "hjälpmadam" );
	deepEqual( Stem("hjälpmadamens"), "hjälpmadam" );
	deepEqual( Stem("hjälpmadammen"), "hjälpmadamm" );
	deepEqual( Stem("hjälpmadams"), "hjälpmadam" );
	deepEqual( Stem("hjälpsam"), "hjälpsam" );
	deepEqual( Stem("hjälpsamma"), "hjälpsamm" );
	deepEqual( Stem("hjälpt"), "hjälpt" );
	deepEqual( Stem("hjälpte"), "hjälpt" );
	deepEqual( Stem("hjälte"), "hjält" );
	deepEqual( Stem("hjältemod"), "hjältemod" );
	deepEqual( Stem("hjältemodig"), "hjältemod" );
	deepEqual( Stem("hjältemodiga"), "hjältemod" );
	deepEqual( Stem("hjältemodigt"), "hjältemod" );
	deepEqual( Stem("hjälten"), "hjält" );
	deepEqual( Stem("hjältes"), "hjält" );
	deepEqual( Stem("hjältinnan"), "hjältinnan" );
	deepEqual( Stem("hjälös"), "hjälös" );
	deepEqual( Stem("hjärna"), "hjärn" );
	deepEqual( Stem("hjärnan"), "hjärnan" );
	deepEqual( Stem("hjärnans"), "hjärnan" );
	deepEqual( Stem("hjärnor"), "hjärn" );
	deepEqual( Stem("hjärta"), "hjärt" );
	deepEqual( Stem("hjärtan"), "hjärtan" );
	deepEqual( Stem("hjärtans"), "hjärtan" );
	deepEqual( Stem("hjärtas"), "hjärt" );
	deepEqual( Stem("hjärtat"), "hjärt" );
	deepEqual( Stem("hjärtats"), "hjärtat" );
	deepEqual( Stem("hjärtegryn"), "hjärtegryn" );
	deepEqual( Stem("hjärtelag"), "hjärtelag" );
	deepEqual( Stem("hjärtemänniskor"), "hjärtemännisk" );
	deepEqual( Stem("hjärtenerv"), "hjärtenerv" );
	deepEqual( Stem("hjärtenära"), "hjärtenär" );
	deepEqual( Stem("hjärterknekt"), "hjärterknek" );
	deepEqual( Stem("hjärterötter"), "hjärteröt" );
	deepEqual( Stem("hjärtesorg"), "hjärtesorg" );
	deepEqual( Stem("hjärtfelet"), "hjärtfelet" );
	deepEqual( Stem("hjärtförlamning"), "hjärtförlamning" );
	deepEqual( Stem("hjärtklappning"), "hjärtklappning" );
	deepEqual( Stem("hjärtklappningen"), "hjärtklappning" );
	deepEqual( Stem("hjärtklämning"), "hjärtklämning" );
	deepEqual( Stem("hjärtlidande"), "hjärtlid" );
	deepEqual( Stem("hjärtlig"), "hjärt" );
	deepEqual( Stem("hjärtliga"), "hjärt" );
	deepEqual( Stem("hjärtligaste"), "hjärt" );
	deepEqual( Stem("hjärtlighet"), "hjärt" );
	deepEqual( Stem("hjärtligt"), "hjärt" );
	deepEqual( Stem("hjärtlös"), "hjärtlös" );
	deepEqual( Stem("hjärtlösa"), "hjärtlös" );
	deepEqual( Stem("hjärtlöst"), "hjärtlös" );
	deepEqual( Stem("hjärtrörande"), "hjärtrör" );
	deepEqual( Stem("hjärtrörelserna"), "hjärtrör" );
	deepEqual( Stem("hjärtsjukdomar"), "hjärtsjukdom" );
	deepEqual( Stem("hjärtslag"), "hjärtslag" );
	deepEqual( Stem("hjäs"), "hjäs" );
	deepEqual( Stem("hjässa"), "hjäss" );
	deepEqual( Stem("hjässan"), "hjässan" );
	deepEqual( Stem("hjålpa"), "hjålp" );
	deepEqual( Stem("hjårta"), "hjårt" );
	deepEqual( Stem("hjårtan"), "hjårtan" );
	deepEqual( Stem("hl"), "hl" );
	deepEqual( Stem("hlalp"), "hlalp" );
	deepEqual( Stem("hlen"), "hlen" );
	deepEqual( Stem("hlften"), "hlften" );
	deepEqual( Stem("hlför"), "hlför" );
	deepEqual( Stem("hlgen"), "hlgen" );
	deepEqual( Stem("hlivit"), "hlivit" );
	deepEqual( Stem("hlixtlik"), "hlixtlik" );
	deepEqual( Stem("hlod"), "hlod" );
	deepEqual( Stem("hltc"), "hltc" );
	deepEqual( Stem("hlte"), "hlte" );
	deepEqual( Stem("hlygrel"), "hlygrel" );
	deepEqual( Stem("hm"), "hm" );
	deepEqual( Stem("hmde"), "hmde" );
	deepEqual( Stem("hml"), "hml" );
	deepEqual( Stem("hnn"), "hnn" );
	deepEqual( Stem("ho"), "ho" );
	deepEqual( Stem("hobktare"), "hobk" );
	deepEqual( Stem("hofkläder"), "hofkläd" );
	deepEqual( Stem("hog"), "hog" );
	deepEqual( Stem("hogt"), "hogt" );
	deepEqual( Stem("hoj"), "hoj" );
	deepEqual( Stem("hol"), "hol" );
	deepEqual( Stem("holl"), "holl" );
	deepEqual( Stem("holländskt"), "holländsk" );
	deepEqual( Stem("holm"), "holm" );
	deepEqual( Stem("holmar"), "holm" );
	deepEqual( Stem("holme"), "holm" );
	deepEqual( Stem("holmen"), "holm" );
	deepEqual( Stem("holmström"), "holmström" );
	deepEqual( Stem("holmströms"), "holmström" );
	deepEqual( Stem("homeros"), "homero" );
	deepEqual( Stem("homme"), "homm" );
	deepEqual( Stem("hon"), "hon" );
	deepEqual( Stem("honett"), "honet" );
	deepEqual( Stem("honnett"), "honnet" );
	deepEqual( Stem("honoll"), "honoll" );
	deepEqual( Stem("honom"), "honom" );
	deepEqual( Stem("hononl"), "hononl" );
	deepEqual( Stem("honor"), "hon" );
	deepEqual( Stem("honorar"), "honor" );
	deepEqual( Stem("honorera"), "honorer" );
	deepEqual( Stem("honung"), "honung" );
	deepEqual( Stem("honungsbytta"), "honungsbyt" );
	deepEqual( Stem("honungshusen"), "honungshus" );
	deepEqual( Stem("honungssöta"), "honungssöt" );
	deepEqual( Stem("hop"), "hop" );
	deepEqual( Stem("hopa"), "hop" );
	deepEqual( Stem("hopade"), "hop" );
	deepEqual( Stem("hopades"), "hop" );
	deepEqual( Stem("hopen"), "hop" );
	deepEqual( Stem("hopfallen"), "hopfall" );
	deepEqual( Stem("hopfällda"), "hopfälld" );
	deepEqual( Stem("hopgyttrade"), "hopgyttr" );
	deepEqual( Stem("hopklämde"), "hopklämd" );
	deepEqual( Stem("hopknipen"), "hopknip" );
	deepEqual( Stem("hopknipet"), "hopknipet" );
	deepEqual( Stem("hopknipna"), "hopknipn" );
	deepEqual( Stem("hopknycklade"), "hopknyckl" );
	deepEqual( Stem("hopknäppte"), "hopknäppt" );
	deepEqual( Stem("hopkopplade"), "hopkoppl" );
	deepEqual( Stem("hopkrupen"), "hopkrup" );
	deepEqual( Stem("hoplagda"), "hoplag" );
	deepEqual( Stem("hoplagt"), "hoplag" );
	deepEqual( Stem("hopp"), "hopp" );
	deepEqual( Stem("hoppa"), "hopp" );
	deepEqual( Stem("hoppade"), "hopp" );
	deepEqual( Stem("hoppades"), "hopp" );
	deepEqual( Stem("hoppande"), "hopp" );
	deepEqual( Stem("hoppar"), "hopp" );
	deepEqual( Stem("hoppas"), "hopp" );
	deepEqual( Stem("hoppats"), "hoppat" );
	deepEqual( Stem("hoppet"), "hoppet" );
	deepEqual( Stem("hoppfulla"), "hoppfull" );
	deepEqual( Stem("hoppla"), "hoppl" );
	deepEqual( Stem("hopplösa"), "hopplös" );
	deepEqual( Stem("hopplöshet"), "hopplös" );
	deepEqual( Stem("hopplöst"), "hopplös" );
	deepEqual( Stem("hoppning"), "hoppning" );
	deepEqual( Stem("hoppningsfullt"), "hoppningsfull" );
	deepEqual( Stem("hoppressade"), "hoppress" );
	deepEqual( Stem("hoprafsat"), "hoprafs" );
	deepEqual( Stem("hopsjunken"), "hopsjunk" );
	deepEqual( Stem("hopsydda"), "hopsyd" );
	deepEqual( Stem("hoptryckt"), "hoptryck" );
	deepEqual( Stem("hopvecklade"), "hopveckl" );
	deepEqual( Stem("hopvek"), "hopvek" );
	deepEqual( Stem("hor"), "hor" );
	deepEqual( Stem("hora"), "hor" );
	deepEqual( Stem("horaktige"), "horakt" );
	deepEqual( Stem("horas"), "hor" );
	deepEqual( Stem("horde"), "hord" );
	deepEqual( Stem("horisk"), "horisk" );
	deepEqual( Stem("horisont"), "horisont" );
	deepEqual( Stem("horisontala"), "horisontal" );
	deepEqual( Stem("horisonten"), "horisont" );
	deepEqual( Stem("horn"), "horn" );
	deepEqual( Stem("hornen"), "horn" );
	deepEqual( Stem("horniga"), "horn" );
	deepEqual( Stem("horribelt"), "horribelt" );
	deepEqual( Stem("horribla"), "horribl" );
	deepEqual( Stem("hort"), "hort" );
	deepEqual( Stem("horta"), "hort" );
	deepEqual( Stem("hos"), "hos" );
	deepEqual( Stem("hospital"), "hospital" );
	deepEqual( Stem("hostade"), "host" );
	deepEqual( Stem("hosten"), "host" );
	deepEqual( Stem("hot"), "hot" );
	deepEqual( Stem("hota"), "hot" );
	deepEqual( Stem("hotad"), "hot" );
	deepEqual( Stem("hotade"), "hot" );
	deepEqual( Stem("hotande"), "hot" );
	deepEqual( Stem("hotar"), "hot" );
	deepEqual( Stem("hotas"), "hot" );
	deepEqual( Stem("hotel"), "hotel" );
	deepEqual( Stem("hotell"), "hotell" );
	deepEqual( Stem("hotellbeställning"), "hotellbeställning" );
	deepEqual( Stem("hotellet"), "hotellet" );
	deepEqual( Stem("hotellgården"), "hotellgård" );
	deepEqual( Stem("hotellrum"), "hotellrum" );
	deepEqual( Stem("hotellrummet"), "hotellrummet" );
	deepEqual( Stem("hotelse"), "hot" );
	deepEqual( Stem("hotelser"), "hot" );
	deepEqual( Stem("hottentottskor"), "hottentottsk" );
	deepEqual( Stem("hov"), "hov" );
	deepEqual( Stem("hovman"), "hovman" );
	deepEqual( Stem("hovmästare"), "hovmäst" );
	deepEqual( Stem("hovmästaren"), "hovmäst" );
	deepEqual( Stem("hovmästarinna"), "hovmästarin" );
	deepEqual( Stem("hovmästarinnan"), "hovmästarinnan" );
	deepEqual( Stem("hovmästarinnans"), "hovmästarinnan" );
	deepEqual( Stem("hovnarr"), "hovnarr" );
	deepEqual( Stem("hovpredikant"), "hovpredikant" );
	deepEqual( Stem("hovrätt"), "hovrät" );
	deepEqual( Stem("hovrätten"), "hovrät" );
	deepEqual( Stem("hr"), "hr" );
	deepEqual( Stem("hra"), "hra" );
	deepEqual( Stem("hrencreutz"), "hrencreutz" );
	deepEqual( Stem("hrudgum"), "hrudgum" );
	deepEqual( Stem("htet"), "htet" );
	deepEqual( Stem("hu"), "hu" );
	deepEqual( Stem("hubert"), "hubert" );
	deepEqual( Stem("hud"), "hud" );
	deepEqual( Stem("hude"), "hud" );
	deepEqual( Stem("huden"), "hud" );
	deepEqual( Stem("hudens"), "hud" );
	deepEqual( Stem("hudingar"), "huding" );
	deepEqual( Stem("hudsjukdomar"), "hudsjukdom" );
	deepEqual( Stem("hufvu"), "hufvu" );
	deepEqual( Stem("hufvud"), "hufvud" );
	deepEqual( Stem("hufvuden"), "hufvud" );
	deepEqual( Stem("hufvudet"), "hufvudet" );
	deepEqual( Stem("hufvudgärden"), "hufvudgärd" );
	deepEqual( Stem("hufvudkudden"), "hufvudkud" );
	deepEqual( Stem("hufvudpersonerna"), "hufvudperson" );
	deepEqual( Stem("hufvudsaken"), "hufvudsak" );
	deepEqual( Stem("hufvudstaden"), "hufvudstad" );
	deepEqual( Stem("hufvudvärk"), "hufvudvärk" );
	deepEqual( Stem("hugad"), "hug" );
	deepEqual( Stem("hugg"), "hugg" );
	deepEqual( Stem("hugga"), "hugg" );
	deepEqual( Stem("huggaren"), "hugg" );
	deepEqual( Stem("huggit"), "huggit" );
	deepEqual( Stem("hugnad"), "hugn" );
	deepEqual( Stem("hugnade"), "hugn" );
	deepEqual( Stem("hugnades"), "hugn" );
	deepEqual( Stem("hugnar"), "hugn" );
	deepEqual( Stem("hugos"), "hugo" );
	deepEqual( Stem("hugskott"), "hugskot" );
	deepEqual( Stem("hugsvalelse"), "hugsval" );
	deepEqual( Stem("huj"), "huj" );
	deepEqual( Stem("hukade"), "huk" );
	deepEqual( Stem("hula"), "hul" );
	deepEqual( Stem("hulda"), "huld" );
	deepEqual( Stem("huldaste"), "huld" );
	deepEqual( Stem("hulde"), "huld" );
	deepEqual( Stem("huldhet"), "huld" );
	deepEqual( Stem("hull"), "hull" );
	deepEqual( Stem("huller"), "hull" );
	deepEqual( Stem("hullet"), "hullet" );
	deepEqual( Stem("hulpit"), "hulpit" );
	deepEqual( Stem("hult"), "hult" );
	deepEqual( Stem("hum"), "hum" );
	deepEqual( Stem("humanaste"), "human" );
	deepEqual( Stem("humanist"), "humanist" );
	deepEqual( Stem("humanitäre"), "humanitär" );
	deepEqual( Stem("humant"), "humant" );
	deepEqual( Stem("humbug"), "humbug" );
	deepEqual( Stem("humbugen"), "humbug" );
	deepEqual( Stem("humd"), "humd" );
	deepEqual( Stem("humle"), "huml" );
	deepEqual( Stem("humlegården"), "humlegård" );
	deepEqual( Stem("humlegårdens"), "humlegård" );
	deepEqual( Stem("humlegårdsgatan"), "humlegårdsgatan" );
	deepEqual( Stem("humlerankor"), "humlerank" );
	deepEqual( Stem("humlesvärm"), "humlesvärm" );
	deepEqual( Stem("humlor"), "huml" );
	deepEqual( Stem("humlornas"), "huml" );
	deepEqual( Stem("hummer"), "humm" );
	deepEqual( Stem("hummertina"), "hummertin" );
	deepEqual( Stem("hummertinan"), "hummertinan" );
	deepEqual( Stem("hummertänger"), "hummertäng" );
	deepEqual( Stem("humor"), "hum" );
	deepEqual( Stem("humorist"), "humorist" );
	deepEqual( Stem("humoristiskt"), "humoristisk" );
	deepEqual( Stem("humrar"), "humr" );
	deepEqual( Stem("humör"), "humör" );
	deepEqual( Stem("hun"), "hun" );
	deepEqual( Stem("hund"), "hund" );
	deepEqual( Stem("hundar"), "hund" );
	deepEqual( Stem("hundarna"), "hund" );
	deepEqual( Stem("hundarne"), "hund" );
	deepEqual( Stem("hunden"), "hund" );
	deepEqual( Stem("hundens"), "hund" );
	deepEqual( Stem("hundgård"), "hundgård" );
	deepEqual( Stem("hundhjärna"), "hundhjärn" );
	deepEqual( Stem("hundlivets"), "hundlivet" );
	deepEqual( Stem("hundra"), "hundr" );
	deepEqual( Stem("hundrade"), "hundr" );
	deepEqual( Stem("hundratals"), "hundratal" );
	deepEqual( Stem("hunds"), "hund" );
	deepEqual( Stem("hundsnus"), "hundsnus" );
	deepEqual( Stem("hundvalp"), "hundvalp" );
	deepEqual( Stem("hunger"), "hung" );
	deepEqual( Stem("hungern"), "hung" );
	deepEqual( Stem("hungerns"), "hung" );
	deepEqual( Stem("hungrat"), "hungr" );
	deepEqual( Stem("hungrig"), "hungr" );
	deepEqual( Stem("hungriga"), "hungr" );
	deepEqual( Stem("hungrigt"), "hungr" );
	deepEqual( Stem("hunne"), "hunn" );
	deepEqual( Stem("hunnet"), "hunnet" );
	deepEqual( Stem("hunnit"), "hunnit" );
	deepEqual( Stem("hunno"), "hunno" );
	deepEqual( Stem("hur"), "hur" );
	deepEqual( Stem("hurdan"), "hurdan" );
	deepEqual( Stem("hurnlegården"), "hurnlegård" );
	deepEqual( Stem("hurrade"), "hurr" );
	deepEqual( Stem("hurtig"), "hurt" );
	deepEqual( Stem("hurtiga"), "hurt" );
	deepEqual( Stem("hurtige"), "hurt" );
	deepEqual( Stem("hurtigt"), "hurt" );
	deepEqual( Stem("huru"), "huru" );
	deepEqual( Stem("hurudan"), "hurudan" );
	deepEqual( Stem("hurudana"), "hurudan" );
	deepEqual( Stem("hurudant"), "hurudant" );
	deepEqual( Stem("huruledes"), "huruled" );
	deepEqual( Stem("hurusom"), "hurusom" );
	deepEqual( Stem("huruvida"), "huruvid" );
	deepEqual( Stem("hus"), "hus" );
	deepEqual( Stem("husbehov"), "husbehov" );
	deepEqual( Stem("husbestyr"), "husbestyr" );
	deepEqual( Stem("husbonde"), "husbond" );
	deepEqual( Stem("husbondefolk"), "husbondefolk" );
	deepEqual( Stem("husbonderätt"), "husbonderät" );
	deepEqual( Stem("husbondes"), "husbond" );
	deepEqual( Stem("husbondeväldet"), "husbondeväldet" );
	deepEqual( Stem("husen"), "hus" );
	deepEqual( Stem("husens"), "hus" );
	deepEqual( Stem("huserade"), "huser" );
	deepEqual( Stem("huseru"), "huseru" );
	deepEqual( Stem("huset"), "huset" );
	deepEqual( Stem("husets"), "huset" );
	deepEqual( Stem("husfolkets"), "husfolket" );
	deepEqual( Stem("husfriden"), "husfrid" );
	deepEqual( Stem("husfridens"), "husfrid" );
	deepEqual( Stem("husfru"), "husfru" );
	deepEqual( Stem("husfrun"), "husfrun" );
	deepEqual( Stem("husfruns"), "husfrun" );
	deepEqual( Stem("husfrus"), "husfrus" );
	deepEqual( Stem("husförestånderska"), "husföreståndersk" );
	deepEqual( Stem("husgeråd"), "husgeråd" );
	deepEqual( Stem("husgerådet"), "husgerådet" );
	deepEqual( Stem("husgöromål"), "husgöromål" );
	deepEqual( Stem("husgöromålet"), "husgöromålet" );
	deepEqual( Stem("hushåll"), "hushåll" );
	deepEqual( Stem("hushålla"), "hushåll" );
	deepEqual( Stem("hushållar"), "hushåll" );
	deepEqual( Stem("hushållerska"), "hushållersk" );
	deepEqual( Stem("hushållerskan"), "hushållerskan" );
	deepEqual( Stem("hushållerskas"), "hushållersk" );
	deepEqual( Stem("hushållet"), "hushållet" );
	deepEqual( Stem("hushållning"), "hushållning" );
	deepEqual( Stem("hushållningen"), "hushållning" );
	deepEqual( Stem("hushålls"), "hushåll" );
	deepEqual( Stem("hushållsaktig"), "hushållsakt" );
	deepEqual( Stem("hushållsaktighet"), "hushållsakt" );
	deepEqual( Stem("hushållsbestyr"), "hushållsbestyr" );
	deepEqual( Stem("hushållsgeni"), "hushållsgeni" );
	deepEqual( Stem("hushållskonto"), "hushållskonto" );
	deepEqual( Stem("hushållspenningarna"), "hushållspenning" );
	deepEqual( Stem("hushållsprinciper"), "hushållsprincip" );
	deepEqual( Stem("hushållsprinciperna"), "hushållsprincip" );
	deepEqual( Stem("hushållssaker"), "hushållssak" );
	deepEqual( Stem("hushållsskola"), "hushållsskol" );
	deepEqual( Stem("hushållsskolan"), "hushållsskolan" );
	deepEqual( Stem("hushållsskolans"), "hushållsskolan" );
	deepEqual( Stem("hushållssumman"), "hushållssumman" );
	deepEqual( Stem("hushållssyssla"), "hushållssyssl" );
	deepEqual( Stem("hushållsuppköp"), "hushållsuppköp" );
	deepEqual( Stem("hushållsvetenskap"), "hushållsvetenskap" );
	deepEqual( Stem("hushållsväg"), "hushållsväg" );
	deepEqual( Stem("hushållvetenskap"), "hushållvetenskap" );
	deepEqual( Stem("husknut"), "husknut" );
	deepEqual( Stem("husknutarna"), "husknut" );
	deepEqual( Stem("husknuten"), "husknut" );
	deepEqual( Stem("huslig"), "hus" );
	deepEqual( Stem("husliga"), "hus" );
	deepEqual( Stem("huslighet"), "hus" );
	deepEqual( Stem("husligt"), "hus" );
	deepEqual( Stem("husläkare"), "husläk" );
	deepEqual( Stem("husläkaren"), "husläk" );
	deepEqual( Stem("husmamsell"), "husmamsell" );
	deepEqual( Stem("husmoder"), "husmod" );
	deepEqual( Stem("husmoderlig"), "husmoder" );
	deepEqual( Stem("husmoderliga"), "husmoder" );
	deepEqual( Stem("husmodern"), "husmod" );
	deepEqual( Stem("husmoderns"), "husmod" );
	deepEqual( Stem("husmor"), "husm" );
	deepEqual( Stem("husnummer"), "husnumm" );
	deepEqual( Stem("huspigan"), "huspigan" );
	deepEqual( Stem("hustaken"), "hustak" );
	deepEqual( Stem("hustru"), "hustru" );
	deepEqual( Stem("hustrublick"), "hustrublick" );
	deepEqual( Stem("hustrumin"), "hustrumin" );
	deepEqual( Stem("hustrun"), "hustrun" );
	deepEqual( Stem("hustruns"), "hustrun" );
	deepEqual( Stem("hustrur"), "hustrur" );
	deepEqual( Stem("hustrurna"), "hustrurn" );
	deepEqual( Stem("hustrurnas"), "hustrurn" );
	deepEqual( Stem("hustrurs"), "hustrur" );
	deepEqual( Stem("hustrus"), "hustrus" );
	deepEqual( Stem("husundersökning"), "husundersökning" );
	deepEqual( Stem("hut"), "hut" );
	deepEqual( Stem("huttrade"), "huttr" );
	deepEqual( Stem("huvadet"), "huvadet" );
	deepEqual( Stem("huvans"), "huvan" );
	deepEqual( Stem("huven"), "huv" );
	deepEqual( Stem("huvu"), "huvu" );
	deepEqual( Stem("huvud"), "huvud" );
	deepEqual( Stem("huvudallen"), "huvudall" );
	deepEqual( Stem("huvudbonaden"), "huvudbonad" );
	deepEqual( Stem("huvudbry"), "huvudbry" );
	deepEqual( Stem("huvudbyggnaden"), "huvudbyggnad" );
	deepEqual( Stem("huvudduk"), "huvudduk" );
	deepEqual( Stem("huvuddukarna"), "huvudduk" );
	deepEqual( Stem("huvuden"), "huvud" );
	deepEqual( Stem("huvudena"), "huvuden" );
	deepEqual( Stem("huvudenas"), "huvuden" );
	deepEqual( Stem("huvudet"), "huvudet" );
	deepEqual( Stem("huvudfiende"), "huvudfiend" );
	deepEqual( Stem("huvudgrupper"), "huvudgrupp" );
	deepEqual( Stem("huvudgärd"), "huvudgärd" );
	deepEqual( Stem("huvudgärden"), "huvudgärd" );
	deepEqual( Stem("huvudkudde"), "huvudkud" );
	deepEqual( Stem("huvudkudden"), "huvudkud" );
	deepEqual( Stem("huvudman"), "huvudman" );
	deepEqual( Stem("huvudrollen"), "huvudroll" );
	deepEqual( Stem("huvudsaken"), "huvudsak" );
	deepEqual( Stem("huvudsakligen"), "huvudsak" );
	deepEqual( Stem("huvudstad"), "huvudst" );
	deepEqual( Stem("huvudstaden"), "huvudstad" );
	deepEqual( Stem("huvudstadens"), "huvudstad" );
	deepEqual( Stem("huvudvillkoret"), "huvudvillkoret" );
	deepEqual( Stem("huvudvärk"), "huvudvärk" );
	deepEqual( Stem("huvudvärken"), "huvudvärk" );
	deepEqual( Stem("hux"), "hux" );
	deepEqual( Stem("hvad"), "hvad" );
	deepEqual( Stem("hvadan"), "hvadan" );
	deepEqual( Stem("hvalf"), "hvalf" );
	deepEqual( Stem("hvalfiskarne"), "hvalfisk" );
	deepEqual( Stem("hvar"), "hvar" );
	deepEqual( Stem("hvaraf"), "hvaraf" );
	deepEqual( Stem("hvarandra"), "hvarandr" );
	deepEqual( Stem("hvardagliga"), "hvardag" );
	deepEqual( Stem("hvardagsgäst"), "hvardagsgäst" );
	deepEqual( Stem("hvardagslag"), "hvardagslag" );
	deepEqual( Stem("hvardera"), "hvarder" );
	deepEqual( Stem("hvarefter"), "hvareft" );
	deepEqual( Stem("hvaremot"), "hvaremot" );
	deepEqual( Stem("hvarest"), "hvarest" );
	deepEqual( Stem("hvarför"), "hvarför" );
	deepEqual( Stem("hvarföre"), "hvarför" );
	deepEqual( Stem("hvari"), "hvari" );
	deepEqual( Stem("hvaribland"), "hvaribland" );
	deepEqual( Stem("hvarifrån"), "hvarifrån" );
	deepEqual( Stem("hvarigenom"), "hvarigenom" );
	deepEqual( Stem("hvarje"), "hvarj" );
	deepEqual( Stem("hvarjehanda"), "hvarjehand" );
	deepEqual( Stem("hvarken"), "hvark" );
	deepEqual( Stem("hvarmed"), "hvarmed" );
	deepEqual( Stem("hvarom"), "hvarom" );
	deepEqual( Stem("hvarpå"), "hvarpå" );
	deepEqual( Stem("hvars"), "hvar" );
	deepEqual( Stem("hvart"), "hvart" );
	deepEqual( Stem("hvarthelst"), "hvarthelst" );
	deepEqual( Stem("hvartill"), "hvartill" );
	deepEqual( Stem("hvarunder"), "hvarund" );
	deepEqual( Stem("hvaruti"), "hvaruti" );
	deepEqual( Stem("hvarvid"), "hvarvid" );
	deepEqual( Stem("hvaråt"), "hvaråt" );
	deepEqual( Stem("hvaröfver"), "hvaröfv" );
	deepEqual( Stem("hvem"), "hvem" );
	deepEqual( Stem("hvems"), "hvem" );
	deepEqual( Stem("hvetebröd"), "hvetebröd" );
	deepEqual( Stem("hvi"), "hvi" );
	deepEqual( Stem("hvila"), "hvil" );
	deepEqual( Stem("hvilade"), "hvil" );
	deepEqual( Stem("hvilat"), "hvil" );
	deepEqual( Stem("hvilka"), "hvilk" );
	deepEqual( Stem("hvilkas"), "hvilk" );
	deepEqual( Stem("hvilken"), "hvilk" );
	deepEqual( Stem("hvilket"), "hvilket" );
	deepEqual( Stem("hvilodag"), "hvilodag" );
	deepEqual( Stem("hvilorum"), "hvilorum" );
	deepEqual( Stem("hvirflar"), "hvirfl" );
	deepEqual( Stem("hviska"), "hvisk" );
	deepEqual( Stem("hviskade"), "hvisk" );
	deepEqual( Stem("hviskande"), "hvisk" );
	deepEqual( Stem("hviskat"), "hvisk" );
	deepEqual( Stem("hvissling"), "hvissling" );
	deepEqual( Stem("hvit"), "hvit" );
	deepEqual( Stem("hvita"), "hvit" );
	deepEqual( Stem("hvitklädd"), "hvitkläd" );
	deepEqual( Stem("hvitt"), "hvitt" );
	deepEqual( Stem("hvtll"), "hvtll" );
	deepEqual( Stem("hvälfde"), "hvälfd" );
	deepEqual( Stem("hy"), "hy" );
	deepEqual( Stem("hyckla"), "hyckl" );
	deepEqual( Stem("hycklare"), "hyckl" );
	deepEqual( Stem("hyckleri"), "hyckleri" );
	deepEqual( Stem("hycklerskan"), "hycklerskan" );
	deepEqual( Stem("hydda"), "hydd" );
	deepEqual( Stem("hyddor"), "hydd" );
	deepEqual( Stem("hygglig"), "hygg" );
	deepEqual( Stem("hyggliga"), "hygg" );
	deepEqual( Stem("hygglige"), "hygg" );
	deepEqual( Stem("hyggligt"), "hygg" );
	deepEqual( Stem("hygienisk"), "hygienisk" );
	deepEqual( Stem("hylla"), "hyll" );
	deepEqual( Stem("hyllan"), "hyllan" );
	deepEqual( Stem("hyllning"), "hyllning" );
	deepEqual( Stem("hyllor"), "hyll" );
	deepEqual( Stem("hyllorna"), "hyll" );
	deepEqual( Stem("hymn"), "hymn" );
	deepEqual( Stem("hymnen"), "hymn" );
	deepEqual( Stem("hymner"), "hymn" );
	deepEqual( Stem("hyn"), "hyn" );
	deepEqual( Stem("hyndan"), "hyndan" );
	deepEqual( Stem("hyndans"), "hyndan" );
	deepEqual( Stem("hypetek"), "hypetek" );
	deepEqual( Stem("hypnotisera"), "hypnotiser" );
	deepEqual( Stem("hypnotiserar"), "hypnotiser" );
	deepEqual( Stem("hypnotiserats"), "hypnotiserat" );
	deepEqual( Stem("hypnotisk"), "hypnotisk" );
	deepEqual( Stem("hypnotism"), "hypnotism" );
	deepEqual( Stem("hypokonder"), "hypokond" );
	deepEqual( Stem("hypotek"), "hypotek" );
	deepEqual( Stem("hyr"), "hyr" );
	deepEqual( Stem("hyra"), "hyr" );
	deepEqual( Stem("hyran"), "hyran" );
	deepEqual( Stem("hyrde"), "hyrd" );
	deepEqual( Stem("hyrer"), "hyr" );
	deepEqual( Stem("hyresgäster"), "hyresgäst" );
	deepEqual( Stem("hyresmannen"), "hyresman" );
	deepEqual( Stem("hyrt"), "hyrt" );
	deepEqual( Stem("hyrvagn"), "hyrvagn" );
	deepEqual( Stem("hyrvagnarna"), "hyrvagn" );
	deepEqual( Stem("hysa"), "hys" );
	deepEqual( Stem("hyser"), "hys" );
	deepEqual( Stem("hyskor"), "hysk" );
	deepEqual( Stem("hyst"), "hyst" );
	deepEqual( Stem("hyste"), "hyst" );
	deepEqual( Stem("hysterisk"), "hysterisk" );
	deepEqual( Stem("hysteriska"), "hysterisk" );
	deepEqual( Stem("hysteriskt"), "hysterisk" );
	deepEqual( Stem("hytten"), "hytt" );
	deepEqual( Stem("hyvel"), "hyvel" );
	deepEqual( Stem("hä"), "hä" );
	deepEqual( Stem("häcklefjäll"), "häcklefjäll" );
	deepEqual( Stem("hädan"), "hädan" );
	deepEqual( Stem("hädanefter"), "hädaneft" );
	deepEqual( Stem("hädangångna"), "hädangångn" );
	deepEqual( Stem("hädangångnas"), "hädangångn" );
	deepEqual( Stem("hädd"), "hädd" );
	deepEqual( Stem("häfda"), "häfd" );
	deepEqual( Stem("häftad"), "häft" );
	deepEqual( Stem("häftade"), "häft" );
	deepEqual( Stem("häfte"), "häft" );
	deepEqual( Stem("häftet"), "häftet" );
	deepEqual( Stem("häftig"), "häft" );
	deepEqual( Stem("häftiga"), "häft" );
	deepEqual( Stem("häftigare"), "häft" );
	deepEqual( Stem("häftighet"), "häft" );
	deepEqual( Stem("häftigt"), "häft" );
	deepEqual( Stem("häggblom"), "häggblom" );
	deepEqual( Stem("häggblommor"), "häggblomm" );
	deepEqual( Stem("häggen"), "hägg" );
	deepEqual( Stem("hägn"), "hägn" );
	deepEqual( Stem("hägnade"), "hägn" );
	deepEqual( Stem("häktad"), "häkt" );
	deepEqual( Stem("häktas"), "häkt" );
	deepEqual( Stem("häkte"), "häkt" );
	deepEqual( Stem("häl"), "häl" );
	deepEqual( Stem("hälarna"), "häl" );
	deepEqual( Stem("hälarne"), "häl" );
	deepEqual( Stem("hälft"), "hälft" );
	deepEqual( Stem("hälften"), "hälft" );
	deepEqual( Stem("hälfter"), "hälft" );
	deepEqual( Stem("hälfterna"), "hälft" );
	deepEqual( Stem("hälla"), "häll" );
	deepEqual( Stem("hällde"), "hälld" );
	deepEqual( Stem("hälleberget"), "hälleberget" );
	deepEqual( Stem("hällen"), "häll" );
	deepEqual( Stem("hällens"), "häll" );
	deepEqual( Stem("hällre"), "hällr" );
	deepEqual( Stem("hälsa"), "häls" );
	deepEqual( Stem("hälsad"), "häls" );
	deepEqual( Stem("hälsade"), "häls" );
	deepEqual( Stem("hälsades"), "häls" );
	deepEqual( Stem("hälsan"), "hälsan" );
	deepEqual( Stem("hälsande"), "häls" );
	deepEqual( Stem("hälsans"), "hälsan" );
	deepEqual( Stem("hälsar"), "häls" );
	deepEqual( Stem("hälsas"), "häls" );
	deepEqual( Stem("hälsat"), "häls" );
	deepEqual( Stem("hälsning"), "hälsning" );
	deepEqual( Stem("hälsningar"), "hälsning" );
	deepEqual( Stem("hälsningarna"), "hälsning" );
	deepEqual( Stem("hälsningen"), "hälsning" );
	deepEqual( Stem("hälsobrunn"), "hälsobrun" );
	deepEqual( Stem("hälsofarlighet"), "hälsofar" );
	deepEqual( Stem("hälsosamt"), "hälsosamt" );
	deepEqual( Stem("hälsotillstånd"), "hälsotillstånd" );
	deepEqual( Stem("hälsovinst"), "hälsovinst" );
	deepEqual( Stem("häm"), "häm" );
	deepEqual( Stem("hämma"), "hämm" );
	deepEqual( Stem("hämna"), "hämn" );
	deepEqual( Stem("hämnade"), "hämn" );
	deepEqual( Stem("hämnar"), "hämn" );
	deepEqual( Stem("hämnas"), "hämn" );
	deepEqual( Stem("hämnd"), "hämnd" );
	deepEqual( Stem("hämta"), "hämt" );
	deepEqual( Stem("hämtade"), "hämt" );
	deepEqual( Stem("hämtande"), "hämt" );
	deepEqual( Stem("hämtar"), "hämt" );
	deepEqual( Stem("hämtat"), "hämt" );
	deepEqual( Stem("hän"), "hän" );
	deepEqual( Stem("hända"), "händ" );
	deepEqual( Stem("händcr"), "händcr" );
	deepEqual( Stem("hände"), "händ" );
	deepEqual( Stem("händels"), "händel" );
	deepEqual( Stem("händelse"), "händ" );
	deepEqual( Stem("händelseförloppet"), "händelseförloppet" );
	deepEqual( Stem("händelsen"), "händ" );
	deepEqual( Stem("händelser"), "händ" );
	deepEqual( Stem("händelserna"), "händ" );
	deepEqual( Stem("händelsevis"), "händelsevis" );
	deepEqual( Stem("händer"), "händ" );
	deepEqual( Stem("händerna"), "händ" );
	deepEqual( Stem("händerochhjälpadem"), "händerochhjälpadem" );
	deepEqual( Stem("händren"), "händr" );
	deepEqual( Stem("händt"), "händ" );
	deepEqual( Stem("hänför"), "hänför" );
	deepEqual( Stem("hänföra"), "hänför" );
	deepEqual( Stem("hänförande"), "hänför" );
	deepEqual( Stem("hänförd"), "hänförd" );
	deepEqual( Stem("hänförda"), "hänförd" );
	deepEqual( Stem("hänfört"), "hänfört" );
	deepEqual( Stem("hänga"), "häng" );
	deepEqual( Stem("hängande"), "häng" );
	deepEqual( Stem("hängbjörkarna"), "hängbjörk" );
	deepEqual( Stem("hängde"), "häng" );
	deepEqual( Stem("hängdes"), "häng" );
	deepEqual( Stem("hänger"), "häng" );
	deepEqual( Stem("hänggranshult"), "hänggranshult" );
	deepEqual( Stem("hängifvenhet"), "hängifven" );
	deepEqual( Stem("hängivenhet"), "hängiven" );
	deepEqual( Stem("hänglar"), "hängl" );
	deepEqual( Stem("hängt"), "häng" );
	deepEqual( Stem("hänqckning"), "hänqckning" );
	deepEqual( Stem("hänryckning"), "hänryckning" );
	deepEqual( Stem("hänryckta"), "hänryck" );
	deepEqual( Stem("hänseende"), "hänseend" );
	deepEqual( Stem("hänseenden"), "hänseend" );
	deepEqual( Stem("hänsyn"), "hänsyn" );
	deepEqual( Stem("hänsynsfull"), "hänsynsfull" );
	deepEqual( Stem("hänsynslös"), "hänsynslös" );
	deepEqual( Stem("hänsynslösa"), "hänsynslös" );
	deepEqual( Stem("hänsynslöst"), "hänsynslös" );
	deepEqual( Stem("hänt"), "hänt" );
	deepEqual( Stem("häntyda"), "häntyd" );
	deepEqual( Stem("häntydande"), "häntyd" );
	deepEqual( Stem("häntydde"), "häntyd" );
	deepEqual( Stem("häntydning"), "häntydning" );
	deepEqual( Stem("häntydningar"), "häntydning" );
	deepEqual( Stem("häntydningen"), "häntydning" );
	deepEqual( Stem("hänvisa"), "hänvis" );
	deepEqual( Stem("hänvisat"), "hänvis" );
	deepEqual( Stem("hänvisning"), "hänvisning" );
	deepEqual( Stem("häpen"), "häp" );
	deepEqual( Stem("häpna"), "häpn" );
	deepEqual( Stem("häpnad"), "häpn" );
	deepEqual( Stem("häpnade"), "häpn" );
	deepEqual( Stem("häpnande"), "häpn" );
	deepEqual( Stem("häpnar"), "häpn" );
	deepEqual( Stem("häpnat"), "häpn" );
	deepEqual( Stem("här"), "här" );
	deepEqual( Stem("härad"), "här" );
	deepEqual( Stem("häradshövding"), "häradshövding" );
	deepEqual( Stem("häradshövdingen"), "häradshövding" );
	deepEqual( Stem("häradsväg"), "häradsväg" );
	deepEqual( Stem("häraf"), "häraf" );
	deepEqual( Stem("härar"), "här" );
	deepEqual( Stem("härav"), "härav" );
	deepEqual( Stem("härbärgera"), "härbärger" );
	deepEqual( Stem("härbärgerar"), "härbärger" );
	deepEqual( Stem("härd"), "härd" );
	deepEqual( Stem("härdad"), "härd" );
	deepEqual( Stem("härdar"), "härd" );
	deepEqual( Stem("härdens"), "härd" );
	deepEqual( Stem("härdningen"), "härdning" );
	deepEqual( Stem("härefter"), "häreft" );
	deepEqual( Stem("häremellan"), "häremellan" );
	deepEqual( Stem("häremot"), "häremot" );
	deepEqual( Stem("härflöt"), "härflöt" );
	deepEqual( Stem("härifran"), "härifran" );
	deepEqual( Stem("härifrån"), "härifrån" );
	deepEqual( Stem("häriig"), "häri" );
	deepEqual( Stem("härjad"), "härj" );
	deepEqual( Stem("härjade"), "härj" );
	deepEqual( Stem("härjadt"), "härjad" );
	deepEqual( Stem("härjande"), "härj" );
	deepEqual( Stem("härjar"), "härj" );
	deepEqual( Stem("härjat"), "härj" );
	deepEqual( Stem("härkomst"), "härkomst" );
	deepEqual( Stem("härledde"), "härled" );
	deepEqual( Stem("härlig"), "här" );
	deepEqual( Stem("härliga"), "här" );
	deepEqual( Stem("härligare"), "här" );
	deepEqual( Stem("härlighet"), "här" );
	deepEqual( Stem("härligheten"), "här" );
	deepEqual( Stem("härligheter"), "här" );
	deepEqual( Stem("härligt"), "här" );
	deepEqual( Stem("härma"), "härm" );
	deepEqual( Stem("härmade"), "härm" );
	deepEqual( Stem("härmande"), "härm" );
	deepEqual( Stem("härmar"), "härm" );
	deepEqual( Stem("härmed"), "härmed" );
	deepEqual( Stem("härmedelst"), "härmedelst" );
	deepEqual( Stem("härnäst"), "härnäst" );
	deepEqual( Stem("härom"), "härom" );
	deepEqual( Stem("häromdagen"), "häromdag" );
	deepEqual( Stem("häromkvällen"), "häromkväll" );
	deepEqual( Stem("häromåret"), "häromåret" );
	deepEqual( Stem("härpå"), "härpå" );
	deepEqual( Stem("härrörde"), "härrörd" );
	deepEqual( Stem("härska"), "härsk" );
	deepEqual( Stem("härskade"), "härsk" );
	deepEqual( Stem("härskaren"), "härsk" );
	deepEqual( Stem("härskarinna"), "härskarin" );
	deepEqual( Stem("härskat"), "härsk" );
	deepEqual( Stem("härstamning"), "härstamning" );
	deepEqual( Stem("härstädes"), "härstäd" );
	deepEqual( Stem("härt"), "härt" );
	deepEqual( Stem("härtill"), "härtill" );
	deepEqual( Stem("härunder"), "härund" );
	deepEqual( Stem("häruppe"), "härupp" );
	deepEqual( Stem("härut"), "härut" );
	deepEqual( Stem("häruti"), "häruti" );
	deepEqual( Stem("härutinnan"), "härutinnan" );
	deepEqual( Stem("härutöver"), "härutöv" );
	deepEqual( Stem("härva"), "härv" );
	deepEqual( Stem("härvid"), "härvid" );
	deepEqual( Stem("härå"), "härå" );
	deepEqual( Stem("häröfver"), "häröfv" );
	deepEqual( Stem("häröver"), "häröv" );
	deepEqual( Stem("häst"), "häst" );
	deepEqual( Stem("hästar"), "häst" );
	deepEqual( Stem("hästarna"), "häst" );
	deepEqual( Stem("hästen"), "häst" );
	deepEqual( Stem("hästhalsen"), "hästhals" );
	deepEqual( Stem("hästryggar"), "hästrygg" );
	deepEqual( Stem("hästryggen"), "hästrygg" );
	deepEqual( Stem("hätsk"), "hätsk" );
	deepEqual( Stem("hätska"), "hätsk" );
	deepEqual( Stem("hätskcnet"), "hätskcnet" );
	deepEqual( Stem("hätskhet"), "hätsk" );
	deepEqual( Stem("hätskt"), "hätsk" );
	deepEqual( Stem("hävda"), "hävd" );
	deepEqual( Stem("hävder"), "hävd" );
	deepEqual( Stem("hävdvunnet"), "hävdvunnet" );
	deepEqual( Stem("häxa"), "häx" );
	deepEqual( Stem("häxdansen"), "häxdans" );
	deepEqual( Stem("häxeri"), "häxeri" );
	deepEqual( Stem("hå"), "hå" );
	deepEqual( Stem("håde"), "håd" );
	deepEqual( Stem("håg"), "håg" );
	deepEqual( Stem("hågad"), "håg" );
	deepEqual( Stem("hågen"), "håg" );
	deepEqual( Stem("hågkomst"), "hågkomst" );
	deepEqual( Stem("hågkomster"), "hågkomst" );
	deepEqual( Stem("håkan"), "håkan" );
	deepEqual( Stem("hål"), "hål" );
	deepEqual( Stem("håla"), "hål" );
	deepEqual( Stem("hålen"), "hål" );
	deepEqual( Stem("håligt"), "hål" );
	deepEqual( Stem("håll"), "håll" );
	deepEqual( Stem("hålla"), "håll" );
	deepEqual( Stem("hållande"), "håll" );
	deepEqual( Stem("hållas"), "håll" );
	deepEqual( Stem("hållbart"), "hållbart" );
	deepEqual( Stem("hålle"), "håll" );
	deepEqual( Stem("håller"), "håll" );
	deepEqual( Stem("hålles"), "håll" );
	deepEqual( Stem("hållet"), "hållet" );
	deepEqual( Stem("hållhakar"), "hållhak" );
	deepEqual( Stem("hållit"), "hållit" );
	deepEqual( Stem("hållning"), "hållning" );
	deepEqual( Stem("hållningen"), "hållning" );
	deepEqual( Stem("hålor"), "hål" );
	deepEqual( Stem("hån"), "hån" );
	deepEqual( Stem("hånade"), "hån" );
	deepEqual( Stem("hånande"), "hån" );
	deepEqual( Stem("hånfull"), "hånfull" );
	deepEqual( Stem("hånfulla"), "hånfull" );
	deepEqual( Stem("hånfullt"), "hånfull" );
	deepEqual( Stem("hångrinande"), "hångrin" );
	deepEqual( Stem("hånle"), "hånl" );
	deepEqual( Stem("hånlog"), "hånlog" );
	deepEqual( Stem("håns"), "hån" );
	deepEqual( Stem("hånskratt"), "hånskrat" );
	deepEqual( Stem("hånskrattade"), "hånskrat" );
	deepEqual( Stem("hår"), "hår" );
	deepEqual( Stem("hård"), "hård" );
	deepEqual( Stem("hårda"), "hård" );
	deepEqual( Stem("hårdare"), "hård" );
	deepEqual( Stem("hårdhet"), "hård" );
	deepEqual( Stem("hårdna"), "hårdn" );
	deepEqual( Stem("hårdnackenhet"), "hårdnacken" );
	deepEqual( Stem("hårdt"), "hård" );
	deepEqual( Stem("håret"), "håret" );
	deepEqual( Stem("hårets"), "håret" );
	deepEqual( Stem("hårfläta"), "hårflät" );
	deepEqual( Stem("hårfästet"), "hårfästet" );
	deepEqual( Stem("hårig"), "hår" );
	deepEqual( Stem("håriga"), "hår" );
	deepEqual( Stem("hårskrud"), "hårskrud" );
	deepEqual( Stem("hårslingor"), "hårsling" );
	deepEqual( Stem("hårslingorna"), "hårsling" );
	deepEqual( Stem("hårsmån"), "hårsmån" );
	deepEqual( Stem("hårstrå"), "hårstrå" );
	deepEqual( Stem("hårt"), "hårt" );
	deepEqual( Stem("hårtestar"), "hårtest" );
	deepEqual( Stem("hö"), "hö" );
	deepEqual( Stem("höflig"), "höf" );
	deepEqual( Stem("höfliga"), "höf" );
	deepEqual( Stem("höflighet"), "höf" );
	deepEqual( Stem("höfligheten"), "höf" );
	deepEqual( Stem("höfligt"), "höf" );
	deepEqual( Stem("höftbred"), "höftbred" );
	deepEqual( Stem("höfter"), "höft" );
	deepEqual( Stem("höfterna"), "höft" );
	deepEqual( Stem("höfternas"), "höft" );
	deepEqual( Stem("höftlinjer"), "höftlinj" );
	deepEqual( Stem("höfvan"), "höfvan" );
	deepEqual( Stem("hög"), "hög" );
	deepEqual( Stem("höga"), "hög" );
	deepEqual( Stem("högadlig"), "högad" );
	deepEqual( Stem("högaktade"), "högak" );
	deepEqual( Stem("högaktar"), "högak" );
	deepEqual( Stem("högar"), "hög" );
	deepEqual( Stem("högas"), "hög" );
	deepEqual( Stem("högblå"), "högblå" );
	deepEqual( Stem("högburen"), "högbur" );
	deepEqual( Stem("högdragen"), "högdrag" );
	deepEqual( Stem("högdraget"), "högdraget" );
	deepEqual( Stem("höge"), "hög" );
	deepEqual( Stem("högeligen"), "höge" );
	deepEqual( Stem("högen"), "hög" );
	deepEqual( Stem("höger"), "hög" );
	deepEqual( Stem("högfärd"), "högfärd" );
	deepEqual( Stem("högfärdig"), "högfärd" );
	deepEqual( Stem("högfärdiga"), "högfärd" );
	deepEqual( Stem("högfärdigt"), "högfärd" );
	deepEqual( Stem("högförnäma"), "högförnäm" );
	deepEqual( Stem("högförnäme"), "högförnäm" );
	deepEqual( Stem("högförnämt"), "högförnämt" );
	deepEqual( Stem("högg"), "högg" );
	deepEqual( Stem("höggrevlig"), "höggrev" );
	deepEqual( Stem("högklackade"), "högklack" );
	deepEqual( Stem("högljudda"), "högljud" );
	deepEqual( Stem("högljuddare"), "högljud" );
	deepEqual( Stem("högljudt"), "högljud" );
	deepEqual( Stem("högljutt"), "högljut" );
	deepEqual( Stem("högmo"), "högmo" );
	deepEqual( Stem("högmod"), "högmod" );
	deepEqual( Stem("högmodet"), "högmodet" );
	deepEqual( Stem("högmodets"), "högmodet" );
	deepEqual( Stem("högmodig"), "högmod" );
	deepEqual( Stem("högmodiga"), "högmod" );
	deepEqual( Stem("högmodige"), "högmod" );
	deepEqual( Stem("högmods"), "högmod" );
	deepEqual( Stem("högmodsandan"), "högmodsandan" );
	deepEqual( Stem("högra"), "högr" );
	deepEqual( Stem("högre"), "högr" );
	deepEqual( Stem("högres"), "högr" );
	deepEqual( Stem("högryggade"), "högrygg" );
	deepEqual( Stem("högröda"), "högröd" );
	deepEqual( Stem("högrödaste"), "högröd" );
	deepEqual( Stem("högsint"), "högsint" );
	deepEqual( Stem("högskaf"), "högskaf" );
	deepEqual( Stem("högskolan"), "högskolan" );
	deepEqual( Stem("högskotan"), "högskotan" );
	deepEqual( Stem("högsommaren"), "högsomm" );
	deepEqual( Stem("högst"), "högst" );
	deepEqual( Stem("högsta"), "högst" );
	deepEqual( Stem("högste"), "högst" );
	deepEqual( Stem("högstes"), "högst" );
	deepEqual( Stem("högsträva"), "högsträv" );
	deepEqual( Stem("högsällt"), "högsällt" );
	deepEqual( Stem("högt"), "högt" );
	deepEqual( Stem("högtid"), "högtid" );
	deepEqual( Stem("högtiden"), "högtid" );
	deepEqual( Stem("högtidlig"), "högtid" );
	deepEqual( Stem("högtidliga"), "högtid" );
	deepEqual( Stem("högtidlighet"), "högtid" );
	deepEqual( Stem("högtidligheten"), "högtid" );
	deepEqual( Stem("högtidligt"), "högtid" );
	deepEqual( Stem("högtidsafton"), "högtidsafton" );
	deepEqual( Stem("högtidsdagen"), "högtidsdag" );
	deepEqual( Stem("högtidsdräkten"), "högtidsdräk" );
	deepEqual( Stem("högtidsstunder"), "högtidsstund" );
	deepEqual( Stem("högtidsstämt"), "högtidsstämt" );
	deepEqual( Stem("högtidstimmen"), "högtidstimm" );
	deepEqual( Stem("högvardiga"), "högvard" );
	deepEqual( Stem("högvälborne"), "högvälborn" );
	deepEqual( Stem("högväxt"), "högväxt" );
	deepEqual( Stem("högväxta"), "högväxt" );
	deepEqual( Stem("högönskliga"), "högönsk" );
	deepEqual( Stem("höj"), "höj" );
	deepEqual( Stem("höja"), "höj" );
	deepEqual( Stem("höjande"), "höj" );
	deepEqual( Stem("höjd"), "höjd" );
	deepEqual( Stem("höjda"), "höjd" );
	deepEqual( Stem("höjde"), "höjd" );
	deepEqual( Stem("höjden"), "höjd" );
	deepEqual( Stem("höjder"), "höjd" );
	deepEqual( Stem("höjderna"), "höjd" );
	deepEqual( Stem("höjdes"), "höjd" );
	deepEqual( Stem("höjer"), "höj" );
	deepEqual( Stem("höjt"), "höjt" );
	deepEqual( Stem("hökar"), "hök" );
	deepEqual( Stem("hökarbod"), "hökarbod" );
	deepEqual( Stem("hökarboden"), "hökarbod" );
	deepEqual( Stem("hökaredisk"), "hökaredisk" );
	deepEqual( Stem("hökarekandidaten"), "hökarekandidat" );
	deepEqual( Stem("hökarens"), "hök" );
	deepEqual( Stem("höken"), "hök" );
	deepEqual( Stem("hökens"), "hök" );
	deepEqual( Stem("hökerimedhjälparen"), "hökerimedhjälp" );
	deepEqual( Stem("hölja"), "hölj" );
	deepEqual( Stem("höljande"), "hölj" );
	deepEqual( Stem("hölje"), "hölj" );
	deepEqual( Stem("höll"), "höll" );
	deepEqual( Stem("hölle"), "höll" );
	deepEqual( Stem("höllo"), "höllo" );
	deepEqual( Stem("höllos"), "höllo" );
	deepEqual( Stem("hölls"), "höll" );
	deepEqual( Stem("höna"), "hön" );
	deepEqual( Stem("hönan"), "hönan" );
	deepEqual( Stem("höns"), "hön" );
	deepEqual( Stem("hönsflickan"), "hönsflickan" );
	deepEqual( Stem("hönsgarden"), "hönsgard" );
	deepEqual( Stem("hönsgården"), "hönsgård" );
	deepEqual( Stem("hör"), "hör" );
	deepEqual( Stem("höra"), "hör" );
	deepEqual( Stem("hörande"), "hör" );
	deepEqual( Stem("höras"), "hör" );
	deepEqual( Stem("hörbart"), "hörbart" );
	deepEqual( Stem("hörd"), "hörd" );
	deepEqual( Stem("hörda"), "hörd" );
	deepEqual( Stem("hördc"), "hördc" );
	deepEqual( Stem("hörde"), "hörd" );
	deepEqual( Stem("hördes"), "hörd" );
	deepEqual( Stem("hören"), "hör" );
	deepEqual( Stem("höres"), "hör" );
	deepEqual( Stem("hörhåll"), "hörhåll" );
	deepEqual( Stem("hörlur"), "hörlur" );
	deepEqual( Stem("hörn"), "hörn" );
	deepEqual( Stem("hörnen"), "hörn" );
	deepEqual( Stem("hörnet"), "hörnet" );
	deepEqual( Stem("hörnkammaren"), "hörnkamm" );
	deepEqual( Stem("hörnkammarn"), "hörnkammarn" );
	deepEqual( Stem("hörnrum"), "hörnrum" );
	deepEqual( Stem("hörnrummet"), "hörnrummet" );
	deepEqual( Stem("hörröret"), "hörröret" );
	deepEqual( Stem("hörs"), "hör" );
	deepEqual( Stem("hörsel"), "hörsel" );
	deepEqual( Stem("hört"), "hört" );
	deepEqual( Stem("höst"), "höst" );
	deepEqual( Stem("höstarna"), "höst" );
	deepEqual( Stem("höstbrasan"), "höstbrasan" );
	deepEqual( Stem("hösten"), "höst" );
	deepEqual( Stem("höstens"), "höst" );
	deepEqual( Stem("höstfest"), "höstfest" );
	deepEqual( Stem("hösthorn"), "hösthorn" );
	deepEqual( Stem("hösthornets"), "hösthornet" );
	deepEqual( Stem("höstkväll"), "höstkväll" );
	deepEqual( Stem("höstkvällars"), "höstkvällar" );
	deepEqual( Stem("höstliga"), "höst" );
	deepEqual( Stem("höstligt"), "höst" );
	deepEqual( Stem("höstluften"), "höstluft" );
	deepEqual( Stem("höstlöv"), "höstlöv" );
	deepEqual( Stem("höstmoln"), "höstmoln" );
	deepEqual( Stem("höstmolnen"), "höstmoln" );
	deepEqual( Stem("höstnattens"), "höstnat" );
	deepEqual( Stem("höstpoet"), "höstpoet" );
	deepEqual( Stem("höstpsalm"), "höstpsalm" );
	deepEqual( Stem("höstregn"), "höstregn" );
	deepEqual( Stem("höstregnet"), "höstregnet" );
	deepEqual( Stem("höststormar"), "höststorm" );
	deepEqual( Stem("höststormarne"), "höststorm" );
	deepEqual( Stem("höststormen"), "höststorm" );
	deepEqual( Stem("höstutsädet"), "höstutsädet" );
	deepEqual( Stem("höstvind"), "höstvind" );
	deepEqual( Stem("höstvioler"), "höstviol" );
	deepEqual( Stem("höstvädrens"), "höstvädr" );
	deepEqual( Stem("hötorget"), "hötorget" );
	deepEqual( Stem("hötte"), "hött" );
	deepEqual( Stem("hövdingen"), "hövding" );
	deepEqual( Stem("höver"), "höv" );
	deepEqual( Stem("höves"), "höv" );
	deepEqual( Stem("höviskt"), "hövisk" );
	deepEqual( Stem("hövlig"), "höv" );
	deepEqual( Stem("hövliga"), "höv" );
	deepEqual( Stem("hövligare"), "höv" );
	deepEqual( Stem("hövlighet"), "höv" );
	deepEqual( Stem("hövligt"), "höv" );
	deepEqual( Stem("i"), "i" );
	deepEqual( Stem("ia"), "ia" );
	deepEqual( Stem("iag"), "iag" );
	deepEqual( Stem("iaktta"), "iakt" );
	deepEqual( Stem("iakttaga"), "iakttag" );
	deepEqual( Stem("iakttagande"), "iakttag" );
	deepEqual( Stem("iakttagas"), "iakttag" );
	deepEqual( Stem("iakttagit"), "iakttagit" );
	deepEqual( Stem("iakttog"), "iakttog" );
	deepEqual( Stem("iakttogo"), "iakttogo" );
	deepEqual( Stem("iangt"), "iang" );
	deepEqual( Stem("ibland"), "ibland" );
	deepEqual( Stem("iblandvaggade"), "iblandvagg" );
	deepEqual( Stem("ibsenpjäs"), "ibsenpjäs" );
	deepEqual( Stem("icautschukdocka"), "icautschukdock" );
	deepEqual( Stem("ick"), "ick" );
	deepEqual( Stem("icka"), "ick" );
	deepEqual( Stem("ickan"), "ickan" );
	deepEqual( Stem("ickc"), "ickc" );
	deepEqual( Stem("icke"), "ick" );
	deepEqual( Stem("ickeömt"), "ickeömt" );
	deepEqual( Stem("icn"), "icn" );
	deepEqual( Stem("icna"), "icn" );
	deepEqual( Stem("idag"), "idag" );
	deepEqual( Stem("ide"), "ide" );
	deepEqual( Stem("idealiska"), "idealisk" );
	deepEqual( Stem("idealitet"), "idealitet" );
	deepEqual( Stem("ideella"), "ideell" );
	deepEqual( Stem("ideellt"), "ideellt" );
	deepEqual( Stem("ideen"), "ide" );
	deepEqual( Stem("ideer"), "ide" );
	deepEqual( Stem("idel"), "idel" );
	deepEqual( Stem("ideliga"), "ide" );
	deepEqual( Stem("ideligen"), "ide" );
	deepEqual( Stem("ideligt"), "ide" );
	deepEqual( Stem("iden"), "iden" );
	deepEqual( Stem("identifiera"), "identifier" );
	deepEqual( Stem("idio"), "idio" );
	deepEqual( Stem("idiot"), "idiot" );
	deepEqual( Stem("idioten"), "idiot" );
	deepEqual( Stem("idiotförtrytelse"), "idiotförtryt" );
	deepEqual( Stem("idiotiskt"), "idiotisk" );
	deepEqual( Stem("idiotmoral"), "idiotmoral" );
	deepEqual( Stem("idiots"), "idiot" );
	deepEqual( Stem("idje"), "idj" );
	deepEqual( Stem("idkat"), "idk" );
	deepEqual( Stem("idoghet"), "idog" );
	deepEqual( Stem("idol"), "idol" );
	deepEqual( Stem("idr"), "idr" );
	deepEqual( Stem("idrottens"), "idrot" );
	deepEqual( Stem("idrottsprestation"), "idrottsprestation" );
	deepEqual( Stem("idyllen"), "idyll" );
	deepEqual( Stem("idylliska"), "idyllisk" );
	deepEqual( Stem("idylliskt"), "idyllisk" );
	deepEqual( Stem("ied"), "ied" );
	deepEqual( Stem("ieende"), "ieend" );
	deepEqual( Stem("ieke"), "iek" );
	deepEqual( Stem("if"), "if" );
	deepEqual( Stem("ifall"), "ifall" );
	deepEqual( Stem("ifran"), "ifran" );
	deepEqual( Stem("ifred"), "ifred" );
	deepEqual( Stem("ifrigt"), "ifr" );
	deepEqual( Stem("ifråga"), "ifråg" );
	deepEqual( Stem("ifrågavarande"), "ifrågavar" );
	deepEqual( Stem("ifråm"), "ifråm" );
	deepEqual( Stem("ifrån"), "ifrån" );
	deepEqual( Stem("ifte"), "ift" );
	deepEqual( Stem("ifver"), "ifv" );
	deepEqual( Stem("ifylla"), "ifyll" );
	deepEqual( Stem("iföljd"), "iföljd" );
	deepEqual( Stem("iförd"), "iförd" );
	deepEqual( Stem("ig"), "ig" );
	deepEqual( Stem("igen"), "igen" );
	deepEqual( Stem("igenkastad"), "igenkast" );
	deepEqual( Stem("igenkände"), "igenkänd" );
	deepEqual( Stem("igenkändes"), "igenkänd" );
	deepEqual( Stem("igenkänna"), "igenkän" );
	deepEqual( Stem("igenkännas"), "igenkän" );
	deepEqual( Stem("igenkänt"), "igenkänt" );
	deepEqual( Stem("igenlöst"), "igenlös" );
	deepEqual( Stem("igenom"), "igenom" );
	deepEqual( Stem("igenslogs"), "igenslog" );
	deepEqual( Stem("ignorera"), "ignorer" );
	deepEqual( Stem("igot"), "igot" );
	deepEqual( Stem("igt"), "igt" );
	deepEqual( Stem("igår"), "igår" );
	deepEqual( Stem("ihjäl"), "ihjäl" );
	deepEqual( Stem("ihop"), "ihop" );
	deepEqual( Stem("ihopfästning"), "ihopfästning" );
	deepEqual( Stem("ihopfört"), "ihopfört" );
	deepEqual( Stem("ihopknogade"), "ihopknog" );
	deepEqual( Stem("ihopkrupen"), "ihopkrup" );
	deepEqual( Stem("ihoplappade"), "ihoplapp" );
	deepEqual( Stem("ihopsmida"), "ihopsmid" );
	deepEqual( Stem("ihopvek"), "ihopvek" );
	deepEqual( Stem("ihärdig"), "ihärd" );
	deepEqual( Stem("ihärdiga"), "ihärd" );
	deepEqual( Stem("ihärdige"), "ihärd" );
	deepEqual( Stem("ihärdighet"), "ihärd" );
	deepEqual( Stem("ihåg"), "ihåg" );
	deepEqual( Stem("ihågkom"), "ihågkom" );
	deepEqual( Stem("ihågkommen"), "ihågkomm" );
	deepEqual( Stem("ihågkommes"), "ihågkomm" );
	deepEqual( Stem("ihågkomna"), "ihågkomn" );
	deepEqual( Stem("ihålig"), "ihå" );
	deepEqual( Stem("ihåliga"), "ihå" );
	deepEqual( Stem("ihåligt"), "ihå" );
	deepEqual( Stem("ihållande"), "ihåll" );
	deepEqual( Stem("ii"), "ii" );
	deepEqual( Stem("iian"), "iian" );
	deepEqual( Stem("iianske"), "iiansk" );
	deepEqual( Stem("iii"), "iii" );
	deepEqual( Stem("iion"), "iion" );
	deepEqual( Stem("iit"), "iit" );
	deepEqual( Stem("iittpå"), "iittpå" );
	deepEqual( Stem("iiv"), "iiv" );
	deepEqual( Stem("iiå"), "iiå" );
	deepEqual( Stem("ijml"), "ijml" );
	deepEqual( Stem("ijud"), "ijud" );
	deepEqual( Stem("ijuda"), "ijud" );
	deepEqual( Stem("ijuder"), "ijud" );
	deepEqual( Stem("ijudet"), "ijudet" );
	deepEqual( Stem("ijum"), "ijum" );
	deepEqual( Stem("ijumma"), "ijumm" );
	deepEqual( Stem("ijumt"), "ijumt" );
	deepEqual( Stem("ijungande"), "ijung" );
	deepEqual( Stem("ijus"), "ijus" );
	deepEqual( Stem("ijusa"), "ijus" );
	deepEqual( Stem("ijusare"), "ijus" );
	deepEqual( Stem("ijusblatt"), "ijusblat" );
	deepEqual( Stem("ijusblå"), "ijusblå" );
	deepEqual( Stem("ijusboll"), "ijusboll" );
	deepEqual( Stem("ijusbruna"), "ijusbrun" );
	deepEqual( Stem("ijuset"), "ijuset" );
	deepEqual( Stem("ijusfläckarna"), "ijusfläck" );
	deepEqual( Stem("ijushuvudet"), "ijushuvudet" );
	deepEqual( Stem("ijussken"), "ijussk" );
	deepEqual( Stem("ijusskenet"), "ijusskenet" );
	deepEqual( Stem("ijusstrimma"), "ijusstrimm" );
	deepEqual( Stem("ijust"), "ijust" );
	deepEqual( Stem("ijuv"), "ijuv" );
	deepEqual( Stem("ijuva"), "ijuv" );
	deepEqual( Stem("ijuvlig"), "ijuv" );
	deepEqual( Stem("ijuvligt"), "ijuv" );
	deepEqual( Stem("ijuvt"), "ijuvt" );
	deepEqual( Stem("ijöd"), "ijöd" );
	deepEqual( Stem("ijödo"), "ijödo" );
	deepEqual( Stem("ijög"), "ijög" );
	deepEqual( Stem("iklädde"), "ikläd" );
	deepEqual( Stem("iklädt"), "ikläd" );
	deepEqual( Stem("iklätt"), "iklät" );
	deepEqual( Stem("ikull"), "ikull" );
	deepEqual( Stem("ikämlas"), "ikäml" );
	deepEqual( Stem("il"), "il" );
	deepEqual( Stem("ila"), "ila" );
	deepEqual( Stem("ilade"), "ilad" );
	deepEqual( Stem("ilan"), "ilan" );
	deepEqual( Stem("ilande"), "iland" );
	deepEqual( Stem("ilar"), "ilar" );
	deepEqual( Stem("ilat"), "ilat" );
	deepEqual( Stem("ilbud"), "ilbud" );
	deepEqual( Stem("ildhets"), "ildhet" );
	deepEqual( Stem("ilennes"), "ilen" );
	deepEqual( Stem("ill"), "ill" );
	deepEqual( Stem("illa"), "ill" );
	deepEqual( Stem("illamående"), "illamåend" );
	deepEqual( Stem("illfundiga"), "illfund" );
	deepEqual( Stem("illistiga"), "illist" );
	deepEqual( Stem("illsskolan"), "illsskolan" );
	deepEqual( Stem("illusion"), "illusion" );
	deepEqual( Stem("illusionen"), "illusion" );
	deepEqual( Stem("illusioner"), "illusion" );
	deepEqual( Stem("illusionsfria"), "illusionsfri" );
	deepEqual( Stem("illustrationer"), "illustration" );
	deepEqual( Stem("illustrerad"), "illustrer" );
	deepEqual( Stem("illvilliga"), "illvil" );
	deepEqual( Stem("ilman"), "ilman" );
	deepEqual( Stem("ilning"), "ilning" );
	deepEqual( Stem("ilon"), "ilon" );
	deepEqual( Stem("ilska"), "ilsk" );
	deepEqual( Stem("ilsken"), "ilsk" );
	deepEqual( Stem("ilsket"), "ilsket" );
	deepEqual( Stem("ilskna"), "ilskn" );
	deepEqual( Stem("ilsnabba"), "ilsnabb" );
	deepEqual( Stem("ilyttade"), "ilyt" );
	deepEqual( Stem("imma"), "imm" );
	deepEqual( Stem("imman"), "imman" );
	deepEqual( Stem("immanuel"), "immanuel" );
	deepEqual( Stem("immaterielt"), "immaterielt" );
	deepEqual( Stem("immodernt"), "immodernt" );
	deepEqual( Stem("impertinent"), "impertinent" );
	deepEqual( Stem("imponerade"), "imponer" );
	deepEqual( Stem("imponerat"), "imponer" );
	deepEqual( Stem("imposant"), "imposant" );
	deepEqual( Stem("improvisationskonst"), "improvisationskonst" );
	deepEqual( Stem("improvisera"), "improviser" );
	deepEqual( Stem("improviserade"), "improviser" );
	deepEqual( Stem("impuls"), "impul" );
	deepEqual( Stem("impulser"), "impuls" );
	deepEqual( Stem("impulsiv"), "impulsiv" );
	deepEqual( Stem("impulsivt"), "impulsivt" );
	deepEqual( Stem("in"), "in" );
	deepEqual( Stem("ina"), "ina" );
	deepEqual( Stem("inackorderat"), "inackorder" );
	deepEqual( Stem("inackorderingen"), "inackordering" );
	deepEqual( Stem("inandades"), "inand" );
	deepEqual( Stem("inandandes"), "inand" );
	deepEqual( Stem("inandas"), "inand" );
	deepEqual( Stem("inb"), "inb" );
	deepEqual( Stem("inbalanserande"), "inbalanser" );
	deepEqual( Stem("inbegripen"), "inbegrip" );
	deepEqual( Stem("inbetalningarna"), "inbetalning" );
	deepEqual( Stem("inbetalningen"), "inbetalning" );
	deepEqual( Stem("inbetalta"), "inbetalt" );
	deepEqual( Stem("inbilla"), "inbill" );
	deepEqual( Stem("inbillad"), "inbill" );
	deepEqual( Stem("inbillade"), "inbill" );
	deepEqual( Stem("inbillar"), "inbill" );
	deepEqual( Stem("inbillat"), "inbill" );
	deepEqual( Stem("inbillning"), "inbillning" );
	deepEqual( Stem("inbillningar"), "inbillning" );
	deepEqual( Stem("inbillningen"), "inbillning" );
	deepEqual( Stem("inbillningskraft"), "inbillningskraft" );
	deepEqual( Stem("inbilska"), "inbilsk" );
	deepEqual( Stem("inbilskhetens"), "inbilsk" );
	deepEqual( Stem("inbiten"), "inbit" );
	deepEqual( Stem("inbjuda"), "inbjud" );
	deepEqual( Stem("inbjudan"), "inbjudan" );
	deepEqual( Stem("inbjudande"), "inbjud" );
	deepEqual( Stem("inbjuden"), "inbjud" );
	deepEqual( Stem("inbjudna"), "inbjudn" );
	deepEqual( Stem("inbjudning"), "inbjudning" );
	deepEqual( Stem("inbjudningen"), "inbjudning" );
	deepEqual( Stem("inbjöd"), "inbjöd" );
	deepEqual( Stem("inbjöds"), "inbjöd" );
	deepEqual( Stem("inbragte"), "inbrag" );
	deepEqual( Stem("inbrant"), "inbrant" );
	deepEqual( Stem("inbringa"), "inbring" );
	deepEqual( Stem("inbringat"), "inbring" );
	deepEqual( Stem("inbrott"), "inbrot" );
	deepEqual( Stem("inbrytande"), "inbryt" );
	deepEqual( Stem("inbränt"), "inbränt" );
	deepEqual( Stem("inbunden"), "inbund" );
	deepEqual( Stem("inburen"), "inbur" );
	deepEqual( Stem("inbäddad"), "inbäd" );
	deepEqual( Stem("ind"), "ind" );
	deepEqual( Stem("indad"), "ind" );
	deepEqual( Stem("inde"), "ind" );
	deepEqual( Stem("indelas"), "indel" );
	deepEqual( Stem("indelning"), "indelning" );
	deepEqual( Stem("inder"), "ind" );
	deepEqual( Stem("indien"), "indi" );
	deepEqual( Stem("indiskräckt"), "indiskräck" );
	deepEqual( Stem("individens"), "individ" );
	deepEqual( Stem("individer"), "individ" );
	deepEqual( Stem("indragas"), "indrag" );
	deepEqual( Stem("indragen"), "indrag" );
	deepEqual( Stem("indragna"), "indragn" );
	deepEqual( Stem("indrog"), "indrog" );
	deepEqual( Stem("indrägtigare"), "indrägt" );
	deepEqual( Stem("industriens"), "industri" );
	deepEqual( Stem("inemot"), "inemot" );
	deepEqual( Stem("infall"), "infall" );
	deepEqual( Stem("infalla"), "infall" );
	deepEqual( Stem("infallet"), "infallet" );
	deepEqual( Stem("infallna"), "infalln" );
	deepEqual( Stem("infamt"), "infamt" );
	deepEqual( Stem("infann"), "infan" );
	deepEqual( Stem("infattningen"), "infattning" );
	deepEqual( Stem("infernaliska"), "infernalisk" );
	deepEqual( Stem("infinna"), "infin" );
	deepEqual( Stem("infinner"), "infin" );
	deepEqual( Stem("influensa"), "influens" );
	deepEqual( Stem("influensaväder"), "influensaväd" );
	deepEqual( Stem("inflytande"), "inflyt" );
	deepEqual( Stem("inflytandet"), "inflyt" );
	deepEqual( Stem("inflytelsen"), "inflyt" );
	deepEqual( Stem("inflytelserika"), "inflytelserik" );
	deepEqual( Stem("inflyttande"), "inflyt" );
	deepEqual( Stem("inflyttat"), "inflyt" );
	deepEqual( Stem("informationen"), "information" );
	deepEqual( Stem("informator"), "informat" );
	deepEqual( Stem("informatorn"), "informatorn" );
	deepEqual( Stem("infria"), "infri" );
	deepEqual( Stem("infriade"), "infri" );
	deepEqual( Stem("infrusen"), "infrus" );
	deepEqual( Stem("infunnit"), "infunnit" );
	deepEqual( Stem("infunno"), "infunno" );
	deepEqual( Stem("inföll"), "inföll" );
	deepEqual( Stem("inför"), "inför" );
	deepEqual( Stem("införa"), "inför" );
	deepEqual( Stem("införande"), "inför" );
	deepEqual( Stem("införd"), "införd" );
	deepEqual( Stem("infördes"), "införd" );
	deepEqual( Stem("införer"), "inför" );
	deepEqual( Stem("införseln"), "införseln" );
	deepEqual( Stem("infört"), "infört" );
	deepEqual( Stem("ing"), "ing" );
	deepEqual( Stem("inga"), "ing" );
	deepEqual( Stem("ingaf"), "ingaf" );
	deepEqual( Stem("ingalunda"), "ingalund" );
	deepEqual( Stem("ingav"), "ingav" );
	deepEqual( Stem("ingelgren"), "ingelgr" );
	deepEqual( Stem("ingelgrens"), "ingelgr" );
	deepEqual( Stem("ingelns"), "ingeln" );
	deepEqual( Stem("ingen"), "ing" );
	deepEqual( Stem("ingendera"), "ingender" );
	deepEqual( Stem("ingenskada"), "ingenskad" );
	deepEqual( Stem("ingenstans"), "ingenstan" );
	deepEqual( Stem("ingenstädes"), "ingenstäd" );
	deepEqual( Stem("ingenting"), "ingenting" );
	deepEqual( Stem("inger"), "ing" );
	deepEqual( Stem("inget"), "inget" );
	deepEqual( Stem("ingick"), "ingick" );
	deepEqual( Stem("ingifva"), "ingifv" );
	deepEqual( Stem("ingingo"), "ingingo" );
	deepEqual( Stem("ingiva"), "ingiv" );
	deepEqual( Stem("ingivelse"), "ingiv" );
	deepEqual( Stem("ingivelsen"), "ingiv" );
	deepEqual( Stem("ingivelsenl"), "ingivelsenl" );
	deepEqual( Stem("ingivit"), "ingivit" );
	deepEqual( Stem("ingjuta"), "ingjut" );
	deepEqual( Stem("inglidande"), "inglid" );
	deepEqual( Stem("ingrarna"), "ingr" );
	deepEqual( Stem("ingripande"), "ingrip" );
	deepEqual( Stem("ingt"), "ingt" );
	deepEqual( Stem("ingå"), "ingå" );
	deepEqual( Stem("ingående"), "ingåend" );
	deepEqual( Stem("ingången"), "ingång" );
	deepEqual( Stem("ingångna"), "ingångn" );
	deepEqual( Stem("ingångsspråk"), "ingångsspråk" );
	deepEqual( Stem("ingått"), "ingåt" );
	deepEqual( Stem("inhaladt"), "inhalad" );
	deepEqual( Stem("inhemta"), "inhemt" );
	deepEqual( Stem("inhemtat"), "inhemt" );
	deepEqual( Stem("inhgande"), "inhg" );
	deepEqual( Stem("inhugget"), "inhugget" );
	deepEqual( Stem("inhuggna"), "inhuggn" );
	deepEqual( Stem("inhämta"), "inhämt" );
	deepEqual( Stem("inhämtade"), "inhämt" );
	deepEqual( Stem("inhämtas"), "inhämt" );
	deepEqual( Stem("inhämtat"), "inhämt" );
	deepEqual( Stem("inhöljd"), "inhöljd" );
	deepEqual( Stem("inhöljt"), "inhöljt" );
	deepEqual( Stem("ini"), "ini" );
	deepEqual( Stem("inifran"), "inifran" );
	deepEqual( Stem("inifrån"), "inifrån" );
	deepEqual( Stem("initialer"), "initial" );
	deepEqual( Stem("injaga"), "injag" );
	deepEqual( Stem("inkallas"), "inkall" );
	deepEqual( Stem("inkilad"), "inkil" );
	deepEqual( Stem("inkiladt"), "inkilad" );
	deepEqual( Stem("inkilat"), "inkil" );
	deepEqual( Stem("inklämd"), "inklämd" );
	deepEqual( Stem("inkognito"), "inkognito" );
	deepEqual( Stem("inkom"), "inkom" );
	deepEqual( Stem("inkomma"), "inkomm" );
	deepEqual( Stem("inkommen"), "inkomm" );
	deepEqual( Stem("inkommer"), "inkomm" );
	deepEqual( Stem("inkommit"), "inkommit" );
	deepEqual( Stem("inkomst"), "inkomst" );
	deepEqual( Stem("inkomsten"), "inkomst" );
	deepEqual( Stem("inkomster"), "inkomst" );
	deepEqual( Stem("inkrupen"), "inkrup" );
	deepEqual( Stem("inkråmet"), "inkråmet" );
	deepEqual( Stem("inköpet"), "inköpet" );
	deepEqual( Stem("inkörsporten"), "inkörsport" );
	deepEqual( Stem("inlade"), "inl" );
	deepEqual( Stem("inlagt"), "inlag" );
	deepEqual( Stem("inlandsklimat"), "inlandsklim" );
	deepEqual( Stem("inled"), "inled" );
	deepEqual( Stem("inledde"), "inled" );
	deepEqual( Stem("inleddes"), "inled" );
	deepEqual( Stem("inledning"), "inledning" );
	deepEqual( Stem("inledningen"), "inledning" );
	deepEqual( Stem("inlindat"), "inlind" );
	deepEqual( Stem("inlägga"), "inlägg" );
	deepEqual( Stem("inläggande"), "inlägg" );
	deepEqual( Stem("inläggningar"), "inläggning" );
	deepEqual( Stem("inlämna"), "inlämn" );
	deepEqual( Stem("inlämnas"), "inlämn" );
	deepEqual( Stem("inlärda"), "inlärd" );
	deepEqual( Stem("inlärt"), "inlärt" );
	deepEqual( Stem("inlät"), "inlät" );
	deepEqual( Stem("inlåst"), "inlåst" );
	deepEqual( Stem("inlåste"), "inlåst" );
	deepEqual( Stem("inlåta"), "inlåt" );
	deepEqual( Stem("inmjölade"), "inmjöl" );
	deepEqual( Stem("inmurad"), "inmur" );
	deepEqual( Stem("innan"), "innan" );
	deepEqual( Stem("innandörne"), "innandörn" );
	deepEqual( Stem("innanför"), "innanför" );
	deepEqual( Stem("innanmätet"), "innanmätet" );
	deepEqual( Stem("inne"), "inn" );
	deepEqual( Stem("innebar"), "inneb" );
	deepEqual( Stem("inneboende"), "inneboend" );
	deepEqual( Stem("innebär"), "innebär" );
	deepEqual( Stem("innebära"), "innebär" );
	deepEqual( Stem("innefattade"), "innefat" );
	deepEqual( Stem("innehade"), "inneh" );
	deepEqual( Stem("innehades"), "inneh" );
	deepEqual( Stem("innehåll"), "innehåll" );
	deepEqual( Stem("innehållande"), "innehåll" );
	deepEqual( Stem("innehåller"), "innehåll" );
	deepEqual( Stem("innehållet"), "innehållet" );
	deepEqual( Stem("innehöll"), "innehöll" );
	deepEqual( Stem("inner"), "inn" );
	deepEqual( Stem("innerlig"), "inner" );
	deepEqual( Stem("innerliga"), "inner" );
	deepEqual( Stem("innerligare"), "inner" );
	deepEqual( Stem("innerligen"), "inner" );
	deepEqual( Stem("innerlighet"), "inner" );
	deepEqual( Stem("innerligt"), "inner" );
	deepEqual( Stem("innerst"), "innerst" );
	deepEqual( Stem("innersta"), "innerst" );
	deepEqual( Stem("innesluten"), "inneslut" );
	deepEqual( Stem("innesluter"), "inneslut" );
	deepEqual( Stem("inneslutit"), "inneslutit" );
	deepEqual( Stem("inneslöt"), "inneslöt" );
	deepEqual( Stem("inneslöts"), "inneslöt" );
	deepEqual( Stem("innevånare"), "innevån" );
	deepEqual( Stem("innu"), "innu" );
	deepEqual( Stem("innästlade"), "innästl" );
	deepEqual( Stem("innästlat"), "innästl" );
	deepEqual( Stem("inom"), "inom" );
	deepEqual( Stem("inomhus"), "inomhus" );
	deepEqual( Stem("inonl"), "inonl" );
	deepEqual( Stem("inpackaåe"), "inpackaå" );
	deepEqual( Stem("inpassad"), "inpass" );
	deepEqual( Stem("inpassas"), "inpass" );
	deepEqual( Stem("inpiskad"), "inpisk" );
	deepEqual( Stem("inplanta"), "inplant" );
	deepEqual( Stem("inplantar"), "inplant" );
	deepEqual( Stem("inplantat"), "inplant" );
	deepEqual( Stem("inpräglade"), "inprägl" );
	deepEqual( Stem("inpudrad"), "inpudr" );
	deepEqual( Stem("inpå"), "inpå" );
	deepEqual( Stem("inqvarterat"), "inqvarter" );
	deepEqual( Stem("inramning"), "inramning" );
	deepEqual( Stem("inre"), "inr" );
	deepEqual( Stem("inredd"), "inred" );
	deepEqual( Stem("inredning"), "inredning" );
	deepEqual( Stem("inredt"), "inred" );
	deepEqual( Stem("inres"), "inr" );
	deepEqual( Stem("inrett"), "inret" );
	deepEqual( Stem("inrikes"), "inrik" );
	deepEqual( Stem("inropades"), "inrop" );
	deepEqual( Stem("inrotade"), "inrot" );
	deepEqual( Stem("inrusande"), "inrus" );
	deepEqual( Stem("inrättat"), "inrät" );
	deepEqual( Stem("inrättning"), "inrättning" );
	deepEqual( Stem("inrådan"), "inrådan" );
	deepEqual( Stem("insatt"), "insat" );
	deepEqual( Stem("insatte"), "insat" );
	deepEqual( Stem("inse"), "ins" );
	deepEqual( Stem("inseende"), "inseend" );
	deepEqual( Stem("insegel"), "insegel" );
	deepEqual( Stem("inseglet"), "inseglet" );
	deepEqual( Stem("insekt"), "insek" );
	deepEqual( Stem("insekter"), "insek" );
	deepEqual( Stem("insekterna"), "insek" );
	deepEqual( Stem("inser"), "ins" );
	deepEqual( Stem("insett"), "inset" );
	deepEqual( Stem("insidan"), "insidan" );
	deepEqual( Stem("insikt"), "insik" );
	deepEqual( Stem("insinuerande"), "insinuer" );
	deepEqual( Stem("insjuknat"), "insjukn" );
	deepEqual( Stem("insjunkna"), "insjunkn" );
	deepEqual( Stem("insjö"), "insjö" );
	deepEqual( Stem("insjöar"), "insjö" );
	deepEqual( Stem("insjöarna"), "insjö" );
	deepEqual( Stem("insjös"), "insjös" );
	deepEqual( Stem("inskeppadt"), "inskeppad" );
	deepEqual( Stem("inskjuta"), "inskjut" );
	deepEqual( Stem("inskrifvet"), "inskrifvet" );
	deepEqual( Stem("inskriven"), "inskriv" );
	deepEqual( Stem("inskrivet"), "inskrivet" );
	deepEqual( Stem("inskrivningsboken"), "inskrivningsbok" );
	deepEqual( Stem("inskrivningspengarna"), "inskrivningspeng" );
	deepEqual( Stem("inskränka"), "inskränk" );
	deepEqual( Stem("inskränkningar"), "inskränkning" );
	deepEqual( Stem("inskränkt"), "inskränk" );
	deepEqual( Stem("inskränkte"), "inskränk" );
	deepEqual( Stem("inskyndande"), "inskynd" );
	deepEqual( Stem("insköt"), "insköt" );
	deepEqual( Stem("insläppa"), "insläpp" );
	deepEqual( Stem("insmög"), "insmög" );
	deepEqual( Stem("insmögo"), "insmögo" );
	deepEqual( Stem("insnärjd"), "insnärjd" );
	deepEqual( Stem("insnöade"), "insnö" );
	deepEqual( Stem("insomnad"), "insomn" );
	deepEqual( Stem("insomnade"), "insomn" );
	deepEqual( Stem("insomnat"), "insomn" );
	deepEqual( Stem("inspara"), "inspar" );
	deepEqual( Stem("insparar"), "inspar" );
	deepEqual( Stem("insparas"), "inspar" );
	deepEqual( Stem("inspektion"), "inspektion" );
	deepEqual( Stem("inspektor"), "inspek" );
	deepEqual( Stem("inspektorens"), "inspektor" );
	deepEqual( Stem("inspiration"), "inspiration" );
	deepEqual( Stem("inspirationer"), "inspiration" );
	deepEqual( Stem("insprängande"), "inspräng" );
	deepEqual( Stem("inspärrad"), "inspärr" );
	deepEqual( Stem("installerad"), "installer" );
	deepEqual( Stem("insteg"), "insteg" );
	deepEqual( Stem("instiftelseorden"), "instiftelseord" );
	deepEqual( Stem("instinkt"), "instink" );
	deepEqual( Stem("instinktartad"), "instinktart" );
	deepEqual( Stem("instinktartadt"), "instinktartad" );
	deepEqual( Stem("instinkten"), "instink" );
	deepEqual( Stem("instinkter"), "instink" );
	deepEqual( Stem("instinktiv"), "instinktiv" );
	deepEqual( Stem("instinktivt"), "instinktivt" );
	deepEqual( Stem("instinktmässigt"), "instinktmäss" );
	deepEqual( Stem("instinktsmässigt"), "instinktsmäss" );
	deepEqual( Stem("instrument"), "instrument" );
	deepEqual( Stem("instrumenten"), "instrument" );
	deepEqual( Stem("instrumentens"), "instrument" );
	deepEqual( Stem("instrumentet"), "instrumentet" );
	deepEqual( Stem("instrumentskåp"), "instrumentskåp" );
	deepEqual( Stem("instundande"), "instund" );
	deepEqual( Stem("instuvade"), "instuv" );
	deepEqual( Stem("inställa"), "inställ" );
	deepEqual( Stem("inställda"), "inställd" );
	deepEqual( Stem("inställsam"), "inställsam" );
	deepEqual( Stem("inställsamhet"), "inställsam" );
	deepEqual( Stem("inställsamma"), "inställsamm" );
	deepEqual( Stem("inställsamt"), "inställsamt" );
	deepEqual( Stem("instämde"), "instämd" );
	deepEqual( Stem("instämmande"), "instämm" );
	deepEqual( Stem("instängd"), "instäng" );
	deepEqual( Stem("instängda"), "instäng" );
	deepEqual( Stem("instöpacket"), "instöpacket" );
	deepEqual( Stem("insugit"), "insugit" );
	deepEqual( Stem("insvepa"), "insvep" );
	deepEqual( Stem("insvept"), "insvept" );
	deepEqual( Stem("insvepta"), "insvept" );
	deepEqual( Stem("insändarna"), "insänd" );
	deepEqual( Stem("insändes"), "insänd" );
	deepEqual( Stem("insätta"), "insät" );
	deepEqual( Stem("insätter"), "insät" );
	deepEqual( Stem("insåg"), "insåg" );
	deepEqual( Stem("insåge"), "insåg" );
	deepEqual( Stem("insågo"), "insågo" );
	deepEqual( Stem("insög"), "insög" );
	deepEqual( Stem("insögo"), "insögo" );
	deepEqual( Stem("insöva"), "insöv" );
	deepEqual( Stem("insövd"), "insövd" );
	deepEqual( Stem("int"), "int" );
	deepEqual( Stem("intaga"), "intag" );
	deepEqual( Stem("intagande"), "intag" );
	deepEqual( Stem("intagen"), "intag" );
	deepEqual( Stem("intager"), "intag" );
	deepEqual( Stem("intagit"), "intagit" );
	deepEqual( Stem("intar"), "int" );
	deepEqual( Stem("intc"), "intc" );
	deepEqual( Stem("inte"), "int" );
	deepEqual( Stem("intelligens"), "intel" );
	deepEqual( Stem("intelligent"), "intelligent" );
	deepEqual( Stem("intensivt"), "intensivt" );
	deepEqual( Stem("interiör"), "interiör" );
	deepEqual( Stem("intermezzot"), "intermezzot" );
	deepEqual( Stem("interneringar"), "internering" );
	deepEqual( Stem("intervjuar"), "intervju" );
	deepEqual( Stem("intet"), "intet" );
	deepEqual( Stem("intetdera"), "intetder" );
	deepEqual( Stem("intetgjord"), "intetgjord" );
	deepEqual( Stem("intill"), "intill" );
	deepEqual( Stem("intillträdgårdensstora"), "intillträdgårdensstor" );
	deepEqual( Stem("intima"), "intim" );
	deepEqual( Stem("intimare"), "intim" );
	deepEqual( Stem("intime"), "intim" );
	deepEqual( Stem("intimt"), "intimt" );
	deepEqual( Stem("intog"), "intog" );
	deepEqual( Stem("intogos"), "intogo" );
	deepEqual( Stem("intonerade"), "intoner" );
	deepEqual( Stem("intorkade"), "intork" );
	deepEqual( Stem("intrassla"), "intrassl" );
	deepEqual( Stem("intrasslade"), "intrassl" );
	deepEqual( Stem("intressant"), "intressant" );
	deepEqual( Stem("intressanta"), "intressant" );
	deepEqual( Stem("intressantare"), "intressant" );
	deepEqual( Stem("intressantaste"), "intressant" );
	deepEqual( Stem("intressante"), "intressant" );
	deepEqual( Stem("intresse"), "intress" );
	deepEqual( Stem("intressen"), "intress" );
	deepEqual( Stem("intressentskap"), "intressentskap" );
	deepEqual( Stem("intressera"), "intresser" );
	deepEqual( Stem("intresserad"), "intresser" );
	deepEqual( Stem("intresserade"), "intresser" );
	deepEqual( Stem("intresserar"), "intresser" );
	deepEqual( Stem("intresserat"), "intresser" );
	deepEqual( Stem("intresset"), "intresset" );
	deepEqual( Stem("intrig"), "intr" );
	deepEqual( Stem("intriger"), "intr" );
	deepEqual( Stem("intrigera"), "intriger" );
	deepEqual( Stem("intrigstycken"), "intrigstyck" );
	deepEqual( Stem("introducerad"), "introducer" );
	deepEqual( Stem("intryck"), "intryck" );
	deepEqual( Stem("intrycket"), "intrycket" );
	deepEqual( Stem("intryckt"), "intryck" );
	deepEqual( Stem("inträda"), "inträd" );
	deepEqual( Stem("inträdande"), "inträd" );
	deepEqual( Stem("inträdde"), "inträd" );
	deepEqual( Stem("inträde"), "inträd" );
	deepEqual( Stem("inträdet"), "inträdet" );
	deepEqual( Stem("inträdt"), "inträd" );
	deepEqual( Stem("inträffa"), "inträff" );
	deepEqual( Stem("inträffade"), "inträff" );
	deepEqual( Stem("inträffande"), "inträff" );
	deepEqual( Stem("inträffar"), "inträff" );
	deepEqual( Stem("inträffat"), "inträff" );
	deepEqual( Stem("intränga"), "inträng" );
	deepEqual( Stem("inträngande"), "inträng" );
	deepEqual( Stem("inträngde"), "inträng" );
	deepEqual( Stem("inträtt"), "inträt" );
	deepEqual( Stem("intrång"), "intrång" );
	deepEqual( Stem("inunder"), "inund" );
	deepEqual( Stem("inuti"), "inuti" );
	deepEqual( Stem("invaliden"), "invalid" );
	deepEqual( Stem("invalider"), "invalid" );
	deepEqual( Stem("invandes"), "inv" );
	deepEqual( Stem("invecklad"), "inveckl" );
	deepEqual( Stem("invecklade"), "inveckl" );
	deepEqual( Stem("invektiv"), "invektiv" );
	deepEqual( Stem("inventarium"), "inventarium" );
	deepEqual( Stem("inverka"), "inverk" );
	deepEqual( Stem("inverkade"), "inverk" );
	deepEqual( Stem("inverkan"), "inverkan" );
	deepEqual( Stem("inverkar"), "inverk" );
	deepEqual( Stem("invid"), "invid" );
	deepEqual( Stem("invigd"), "inv" );
	deepEqual( Stem("inviterat"), "inviter" );
	deepEqual( Stem("invända"), "invänd" );
	deepEqual( Stem("invände"), "invänd" );
	deepEqual( Stem("invändning"), "invändning" );
	deepEqual( Stem("invändningar"), "invändning" );
	deepEqual( Stem("invänta"), "invänt" );
	deepEqual( Stem("inväntade"), "invänt" );
	deepEqual( Stem("invärtes"), "invärt" );
	deepEqual( Stem("invånare"), "invån" );
	deepEqual( Stem("invånarne"), "invån" );
	deepEqual( Stem("inälvor"), "inälv" );
	deepEqual( Stem("inåt"), "inåt" );
	deepEqual( Stem("inåtvänd"), "inåtvänd" );
	deepEqual( Stem("inöfva"), "inöfv" );
	deepEqual( Stem("inöva"), "inöv" );
	deepEqual( Stem("inövad"), "inöv" );
	deepEqual( Stem("iog"), "iog" );
	deepEqual( Stem("iordningställa"), "iordningställ" );
	deepEqual( Stem("ir"), "ir" );
	deepEqual( Stem("iramför"), "iramför" );
	deepEqual( Stem("irene"), "iren" );
	deepEqual( Stem("irisk"), "irisk" );
	deepEqual( Stem("irliga"), "irl" );
	deepEqual( Stem("ironi"), "ironi" );
	deepEqual( Stem("ironiskt"), "ironisk" );
	deepEqual( Stem("irr"), "irr" );
	deepEqual( Stem("irra"), "irr" );
	deepEqual( Stem("irrade"), "irr" );
	deepEqual( Stem("irrande"), "irr" );
	deepEqual( Stem("irrar"), "irr" );
	deepEqual( Stem("irrat"), "irr" );
	deepEqual( Stem("irrfärder"), "irrfärd" );
	deepEqual( Stem("irriterar"), "irriter" );
	deepEqual( Stem("irädstam"), "irädstam" );
	deepEqual( Stem("irågade"), "iråg" );
	deepEqual( Stem("iråkade"), "iråk" );
	deepEqual( Stem("irån"), "irån" );
	deepEqual( Stem("is"), "is" );
	deepEqual( Stem("isa"), "isa" );
	deepEqual( Stem("isade"), "isad" );
	deepEqual( Stem("isak"), "isak" );
	deepEqual( Stem("isande"), "isand" );
	deepEqual( Stem("isas"), "isas" );
	deepEqual( Stem("isaskar"), "isask" );
	deepEqual( Stem("isdroppar"), "isdropp" );
	deepEqual( Stem("isen"), "isen" );
	deepEqual( Stem("isfrusna"), "isfrusn" );
	deepEqual( Stem("isig"), "isig" );
	deepEqual( Stem("isiga"), "isig" );
	deepEqual( Stem("isigt"), "isig" );
	deepEqual( Stem("iskade"), "isk" );
	deepEqual( Stem("iskall"), "iskall" );
	deepEqual( Stem("iskallt"), "iskallt" );
	deepEqual( Stem("iskyla"), "iskyl" );
	deepEqual( Stem("islossningen"), "islossning" );
	deepEqual( Stem("ismassa"), "ismass" );
	deepEqual( Stem("ismassorna"), "ismass" );
	deepEqual( Stem("isning"), "isning" );
	deepEqual( Stem("isolerade"), "isoler" );
	deepEqual( Stem("isop"), "isop" );
	deepEqual( Stem("israelitiskt"), "israelitisk" );
	deepEqual( Stem("israels"), "israel" );
	deepEqual( Stem("isstycke"), "isstyck" );
	deepEqual( Stem("isstycken"), "isstyck" );
	deepEqual( Stem("isstyckena"), "isstycken" );
	deepEqual( Stem("ister"), "ist" );
	deepEqual( Stem("isterhakan"), "isterhakan" );
	deepEqual( Stem("isynnerhet"), "isynner" );
	deepEqual( Stem("isär"), "isär" );
	deepEqual( Stem("it"), "it" );
	deepEqual( Stem("italien"), "itali" );
	deepEqual( Stem("italiensk"), "italiensk" );
	deepEqual( Stem("italienska"), "italiensk" );
	deepEqual( Stem("italienskorna"), "italiensk" );
	deepEqual( Stem("itans"), "itan" );
	deepEqual( Stem("itet"), "itet" );
	deepEqual( Stem("ittlade"), "ittl" );
	deepEqual( Stem("itu"), "itu" );
	deepEqual( Stem("itva"), "itv" );
	deepEqual( Stem("iute"), "iut" );
	deepEqual( Stem("iv"), "iv" );
	deepEqual( Stem("iver"), "iver" );
	deepEqual( Stem("ivrade"), "ivr" );
	deepEqual( Stem("ivrig"), "ivr" );
	deepEqual( Stem("ivriga"), "ivr" );
	deepEqual( Stem("ivrigare"), "ivr" );
	deepEqual( Stem("ivrigt"), "ivr" );
	deepEqual( Stem("ix"), "ix" );
	deepEqual( Stem("iyck"), "iyck" );
	deepEqual( Stem("iycka"), "iyck" );
	deepEqual( Stem("iyckades"), "iyck" );
	deepEqual( Stem("iyckan"), "iyckan" );
	deepEqual( Stem("iyckats"), "iyckat" );
	deepEqual( Stem("iycklig"), "iyck" );
	deepEqual( Stem("iyckliga"), "iyck" );
	deepEqual( Stem("iycklige"), "iyck" );
	deepEqual( Stem("iyckligt"), "iyck" );
	deepEqual( Stem("iyckokänsla"), "iyckokänsl" );
	deepEqual( Stem("iycksalige"), "iycksa" );
	deepEqual( Stem("iyckönska"), "iyckönsk" );
	deepEqual( Stem("iydde"), "iydd" );
	deepEqual( Stem("iyddes"), "iydd" );
	deepEqual( Stem("iydig"), "iyd" );
	deepEqual( Stem("iydigt"), "iyd" );
	deepEqual( Stem("iydnad"), "iydn" );
	deepEqual( Stem("iyf"), "iyf" );
	deepEqual( Stem("iyft"), "iyft" );
	deepEqual( Stem("iyfta"), "iyft" );
	deepEqual( Stem("iyftad"), "iyft" );
	deepEqual( Stem("iyftas"), "iyft" );
	deepEqual( Stem("iyftat"), "iyft" );
	deepEqual( Stem("iyfte"), "iyft" );
	deepEqual( Stem("iyfter"), "iyft" );
	deepEqual( Stem("iyftes"), "iyft" );
	deepEqual( Stem("iyfts"), "iyft" );
	deepEqual( Stem("iyk"), "iyk" );
	deepEqual( Stem("iykt"), "iykt" );
	deepEqual( Stem("iykta"), "iykt" );
	deepEqual( Stem("iyktan"), "iyktan" );
	deepEqual( Stem("iyktor"), "iykt" );
	deepEqual( Stem("iyktorna"), "iykt" );
	deepEqual( Stem("iyktskenet"), "iyktskenet" );
	deepEqual( Stem("iynne"), "iynn" );
	deepEqual( Stem("iysa"), "iys" );
	deepEqual( Stem("iysande"), "iys" );
	deepEqual( Stem("iyser"), "iys" );
	deepEqual( Stem("iyss"), "iyss" );
	deepEqual( Stem("iyssna"), "iyssn" );
	deepEqual( Stem("iyssnade"), "iyssn" );
	deepEqual( Stem("iyssnande"), "iyssn" );
	deepEqual( Stem("iyssnat"), "iyssn" );
	deepEqual( Stem("iyst"), "iyst" );
	deepEqual( Stem("iyste"), "iyst" );
	deepEqual( Stem("iysten"), "iyst" );
	deepEqual( Stem("iystes"), "iyst" );
	deepEqual( Stem("iystna"), "iystn" );
	deepEqual( Stem("iystnad"), "iystn" );
	deepEqual( Stem("iytt"), "iytt" );
	deepEqual( Stem("iänge"), "iäng" );
	deepEqual( Stem("iåg"), "iåg" );
	deepEqual( Stem("iörde"), "iörd" );
	deepEqual( Stem("iörjågade"), "iörjåg" );
	deepEqual( Stem("iörlåt"), "iörlåt" );
	deepEqual( Stem("iörst"), "iörst" );
	deepEqual( Stem("iös"), "iös" );
	deepEqual( Stem("j"), "j" );
	deepEqual( Stem("ja"), "ja" );
	deepEqual( Stem("jacka"), "jack" );
	deepEqual( Stem("jackfickorna"), "jackfick" );
	deepEqual( Stem("jacob"), "jacob" );
	deepEqual( Stem("jacobs"), "jacob" );
	deepEqual( Stem("jacoo"), "jacoo" );
	deepEqual( Stem("jade"), "jad" );
	deepEqual( Stem("jae"), "jae" );
	deepEqual( Stem("jaf"), "jaf" );
	deepEqual( Stem("jag"), "jag" );
	deepEqual( Stem("jaga"), "jag" );
	deepEqual( Stem("jagad"), "jag" );
	deepEqual( Stem("jagade"), "jag" );
	deepEqual( Stem("jagande"), "jag" );
	deepEqual( Stem("jagandets"), "jagandet" );
	deepEqual( Stem("jagar"), "jag" );
	deepEqual( Stem("jagas"), "jag" );
	deepEqual( Stem("jagat"), "jag" );
	deepEqual( Stem("jagats"), "jagat" );
	deepEqual( Stem("jaget"), "jaget" );
	deepEqual( Stem("jaha"), "jah" );
	deepEqual( Stem("jakande"), "jak" );
	deepEqual( Stem("jakob"), "jakob" );
	deepEqual( Stem("jakobs"), "jakob" );
	deepEqual( Stem("jakt"), "jakt" );
	deepEqual( Stem("jaktbössa"), "jaktböss" );
	deepEqual( Stem("jakten"), "jakt" );
	deepEqual( Stem("jakthund"), "jakthund" );
	deepEqual( Stem("jaktkarl"), "jaktkarl" );
	deepEqual( Stem("jaktkarlar"), "jaktkarl" );
	deepEqual( Stem("jaktkarlarne"), "jaktkarl" );
	deepEqual( Stem("jaktkarlens"), "jaktkarl" );
	deepEqual( Stem("jaktlöjtnant"), "jaktlöjtnant" );
	deepEqual( Stem("jaktlöjtnanten"), "jaktlöjtnant" );
	deepEqual( Stem("jaktlöjtnantens"), "jaktlöjtnant" );
	deepEqual( Stem("jalusi"), "jalusi" );
	deepEqual( Stem("jalusien"), "jalusi" );
	deepEqual( Stem("jalusier"), "jalusi" );
	deepEqual( Stem("jalusierna"), "jalusi" );
	deepEqual( Stem("jamaika"), "jamaik" );
	deepEqual( Stem("jamat"), "jam" );
	deepEqual( Stem("jamrande"), "jamr" );
	deepEqual( Stem("jamt"), "jamt" );
	deepEqual( Stem("jande"), "jand" );
	deepEqual( Stem("januari"), "januari" );
	deepEqual( Stem("japanska"), "japansk" );
	deepEqual( Stem("jaquette"), "jaquet" );
	deepEqual( Stem("jaquettekappa"), "jaquettekapp" );
	deepEqual( Stem("jargong"), "jargong" );
	deepEqual( Stem("jasmin"), "jasmin" );
	deepEqual( Stem("jasminen"), "jasmin" );
	deepEqual( Stem("jasminer"), "jasmin" );
	deepEqual( Stem("jasminhäck"), "jasminhäck" );
	deepEqual( Stem("jaspis"), "jaspis" );
	deepEqual( Stem("jaså"), "jaså" );
	deepEqual( Stem("javäl"), "javäl" );
	deepEqual( Stem("jazzvindens"), "jazzvind" );
	deepEqual( Stem("jcrn"), "jcrn" );
	deepEqual( Stem("jcsus"), "jcsus" );
	deepEqual( Stem("je"), "je" );
	deepEqual( Stem("jemföra"), "jemför" );
	deepEqual( Stem("jemföras"), "jemför" );
	deepEqual( Stem("jemförelse"), "jemför" );
	deepEqual( Stem("jemförelser"), "jemför" );
	deepEqual( Stem("jemförelsevis"), "jemförelsevis" );
	deepEqual( Stem("jemförligt"), "jemför" );
	deepEqual( Stem("jemkade"), "jemk" );
	deepEqual( Stem("jemmer"), "jemm" );
	deepEqual( Stem("jemmerfulla"), "jemmerfull" );
	deepEqual( Stem("jemmerrop"), "jemmerrop" );
	deepEqual( Stem("jemn"), "jemn" );
	deepEqual( Stem("jemna"), "jemn" );
	deepEqual( Stem("jemnårigt"), "jemnår" );
	deepEqual( Stem("jemrande"), "jemr" );
	deepEqual( Stem("jemt"), "jemt" );
	deepEqual( Stem("jemte"), "jemt" );
	deepEqual( Stem("jemväl"), "jemväl" );
	deepEqual( Stem("jer"), "jer" );
	deepEqual( Stem("jernkakelugnen"), "jernkakelugn" );
	deepEqual( Stem("jernnatur"), "jernnatur" );
	deepEqual( Stem("jernpansrade"), "jernpansr" );
	deepEqual( Stem("jernringar"), "jernring" );
	deepEqual( Stem("jernrustningarne"), "jernrustning" );
	deepEqual( Stem("jesu"), "jesu" );
	deepEqual( Stem("jesuitens"), "jesuit" );
	deepEqual( Stem("jesum"), "jesum" );
	deepEqual( Stem("jesus"), "jesus" );
	deepEqual( Stem("jettegrytorna"), "jettegryt" );
	deepEqual( Stem("jettekrafter"), "jettekraft" );
	deepEqual( Stem("jettelika"), "jettelik" );
	deepEqual( Stem("jl"), "jl" );
	deepEqual( Stem("jo"), "jo" );
	deepEqual( Stem("job"), "job" );
	deepEqual( Stem("jobs"), "job" );
	deepEqual( Stem("jockeymössa"), "jockeymöss" );
	deepEqual( Stem("johamles"), "johaml" );
	deepEqual( Stem("johan"), "johan" );
	deepEqual( Stem("johannelund"), "johannelund" );
	deepEqual( Stem("johannem"), "johannem" );
	deepEqual( Stem("johannes"), "johan" );
	deepEqual( Stem("johannis"), "johannis" );
	deepEqual( Stem("johans"), "johan" );
	deepEqual( Stem("johansmarschen"), "johansmarsch" );
	deepEqual( Stem("john"), "john" );
	deepEqual( Stem("joho"), "joho" );
	deepEqual( Stem("jojo"), "jojo" );
	deepEqual( Stem("jojomänsan"), "jojomänsan" );
	deepEqual( Stem("jollra"), "jollr" );
	deepEqual( Stem("jollradc"), "jollradc" );
	deepEqual( Stem("jollrade"), "jollr" );
	deepEqual( Stem("jollrande"), "jollr" );
	deepEqual( Stem("jon"), "jon" );
	deepEqual( Stem("jonas"), "jon" );
	deepEqual( Stem("jor"), "jor" );
	deepEqual( Stem("jord"), "jord" );
	deepEqual( Stem("jordades"), "jord" );
	deepEqual( Stem("jordbebyggarens"), "jordbebygg" );
	deepEqual( Stem("jordbrunt"), "jordbrunt" );
	deepEqual( Stem("jordbundna"), "jordbundn" );
	deepEqual( Stem("jordelivets"), "jordelivet" );
	deepEqual( Stem("jorden"), "jord" );
	deepEqual( Stem("jordens"), "jord" );
	deepEqual( Stem("jordevandringen"), "jordevandring" );
	deepEqual( Stem("jordfästningen"), "jordfästning" );
	deepEqual( Stem("jordisk"), "jordisk" );
	deepEqual( Stem("jordiska"), "jordisk" );
	deepEqual( Stem("jordiskt"), "jordisk" );
	deepEqual( Stem("jordklotet"), "jordklotet" );
	deepEqual( Stem("jordvåningen"), "jordvåning" );
	deepEqual( Stem("jordytan"), "jordytan" );
	deepEqual( Stem("joscf"), "joscf" );
	deepEqual( Stem("josef"), "josef" );
	deepEqual( Stem("josefina"), "josefin" );
	deepEqual( Stem("josefinas"), "josefin" );
	deepEqual( Stem("josefs"), "josef" );
	deepEqual( Stem("journalist"), "journalist" );
	deepEqual( Stem("jovialisk"), "jovialisk" );
	deepEqual( Stem("jr"), "jr" );
	deepEqual( Stem("ju"), "ju" );
	deepEqual( Stem("jubel"), "jubel" );
	deepEqual( Stem("jublade"), "jubl" );
	deepEqual( Stem("jublande"), "jubl" );
	deepEqual( Stem("jud"), "jud" );
	deepEqual( Stem("judar"), "jud" );
	deepEqual( Stem("jude"), "jud" );
	deepEqual( Stem("judebarnen"), "judebarn" );
	deepEqual( Stem("judefamilj"), "judefamilj" );
	deepEqual( Stem("judeflicka"), "judeflick" );
	deepEqual( Stem("judehistorier"), "judehistori" );
	deepEqual( Stem("juden"), "jud" );
	deepEqual( Stem("judinnan"), "judinnan" );
	deepEqual( Stem("judiska"), "judisk" );
	deepEqual( Stem("judiske"), "judisk" );
	deepEqual( Stem("judiskt"), "judisk" );
	deepEqual( Stem("judy"), "judy" );
	deepEqual( Stem("judys"), "judy" );
	deepEqual( Stem("jukänthenne"), "jukänthen" );
	deepEqual( Stem("jul"), "jul" );
	deepEqual( Stem("jula"), "jul" );
	deepEqual( Stem("julafton"), "julafton" );
	deepEqual( Stem("julaftonen"), "julafton" );
	deepEqual( Stem("jular"), "jul" );
	deepEqual( Stem("julbjudning"), "julbjudning" );
	deepEqual( Stem("juldagen"), "juldag" );
	deepEqual( Stem("julehalm"), "julehalm" );
	deepEqual( Stem("julen"), "jul" );
	deepEqual( Stem("julens"), "jul" );
	deepEqual( Stem("julepsalm"), "julepsalm" );
	deepEqual( Stem("julevind"), "julevind" );
	deepEqual( Stem("julgranen"), "julgran" );
	deepEqual( Stem("julgris"), "julgris" );
	deepEqual( Stem("julhögtiden"), "julhögtid" );
	deepEqual( Stem("juli"), "juli" );
	deepEqual( Stem("julias"), "juli" );
	deepEqual( Stem("julie"), "juli" );
	deepEqual( Stem("julstöket"), "julstöket" );
	deepEqual( Stem("jungarna"), "jung" );
	deepEqual( Stem("jungfru"), "jungfru" );
	deepEqual( Stem("jungfrudom"), "jungfrudom" );
	deepEqual( Stem("jungfrukropp"), "jungfrukropp" );
	deepEqual( Stem("jungfruliga"), "jungfru" );
	deepEqual( Stem("jungfrun"), "jungfrun" );
	deepEqual( Stem("jungfruns"), "jungfrun" );
	deepEqual( Stem("jungfrur"), "jungfrur" );
	deepEqual( Stem("jungfrurna"), "jungfrurn" );
	deepEqual( Stem("jungfruålderns"), "jungfruåld" );
	deepEqual( Stem("jungman"), "jungman" );
	deepEqual( Stem("jungmannen"), "jungman" );
	deepEqual( Stem("juni"), "juni" );
	deepEqual( Stem("juniafton"), "juniafton" );
	deepEqual( Stem("junior"), "juni" );
	deepEqual( Stem("juniors"), "junior" );
	deepEqual( Stem("junkrarna"), "junkr" );
	deepEqual( Stem("junkrarne"), "junkr" );
	deepEqual( Stem("junlös"), "junlös" );
	deepEqual( Stem("juri"), "juri" );
	deepEqual( Stem("juridik"), "juridik" );
	deepEqual( Stem("juridiken"), "juridik" );
	deepEqual( Stem("juridiska"), "juridisk" );
	deepEqual( Stem("juristerna"), "jurist" );
	deepEqual( Stem("jury"), "jury" );
	deepEqual( Stem("just"), "just" );
	deepEqual( Stem("justera"), "juster" );
	deepEqual( Stem("justerat"), "juster" );
	deepEqual( Stem("justitias"), "justiti" );
	deepEqual( Stem("justitierevisionen"), "justitierevision" );
	deepEqual( Stem("justitierådet"), "justitierådet" );
	deepEqual( Stem("jutland"), "jutland" );
	deepEqual( Stem("juvel"), "juvel" );
	deepEqual( Stem("juveler"), "juvel" );
	deepEqual( Stem("juver"), "juv" );
	deepEqual( Stem("jver"), "jver" );
	deepEqual( Stem("jädrar"), "jädr" );
	deepEqual( Stem("jäfva"), "jäfv" );
	deepEqual( Stem("jägare"), "jäg" );
	deepEqual( Stem("jägaren"), "jäg" );
	deepEqual( Stem("jägarn"), "jägarn" );
	deepEqual( Stem("jägtande"), "jägt" );
	deepEqual( Stem("jäktande"), "jäkt" );
	deepEqual( Stem("jämföras"), "jämför" );
	deepEqual( Stem("jämförde"), "jämförd" );
	deepEqual( Stem("jämförelse"), "jämför" );
	deepEqual( Stem("jämförelsen"), "jämför" );
	deepEqual( Stem("jämförliga"), "jämför" );
	deepEqual( Stem("jämkar"), "jämk" );
	deepEqual( Stem("jämlikheten"), "jämlik" );
	deepEqual( Stem("jämmer"), "jämm" );
	deepEqual( Stem("jämmerdal"), "jämmerdal" );
	deepEqual( Stem("jämmerdalen"), "jämmerdal" );
	deepEqual( Stem("jämmerlig"), "jämmer" );
	deepEqual( Stem("jämmern"), "jämm" );
	deepEqual( Stem("jämmerrop"), "jämmerrop" );
	deepEqual( Stem("jämn"), "jämn" );
	deepEqual( Stem("jämna"), "jämn" );
	deepEqual( Stem("jämnan"), "jämnan" );
	deepEqual( Stem("jämnar"), "jämn" );
	deepEqual( Stem("jämngamla"), "jämngaml" );
	deepEqual( Stem("jämngod"), "jämngod" );
	deepEqual( Stem("jämngrå"), "jämngrå" );
	deepEqual( Stem("jämnt"), "jämnt" );
	deepEqual( Stem("jämnårig"), "jämnår" );
	deepEqual( Stem("jämnåriga"), "jämnår" );
	deepEqual( Stem("jämra"), "jämr" );
	deepEqual( Stem("jämrade"), "jämr" );
	deepEqual( Stem("jämrande"), "jämr" );
	deepEqual( Stem("jämrat"), "jämr" );
	deepEqual( Stem("jämt"), "jämt" );
	deepEqual( Stem("jämte"), "jämt" );
	deepEqual( Stem("jämvikten"), "jämvik" );
	deepEqual( Stem("jämväl"), "jämväl" );
	deepEqual( Stem("jäo"), "jäo" );
	deepEqual( Stem("järn"), "järn" );
	deepEqual( Stem("järnhård"), "järnhård" );
	deepEqual( Stem("järnspira"), "järnspir" );
	deepEqual( Stem("järnsäng"), "järnsäng" );
	deepEqual( Stem("järnvägs"), "järnväg" );
	deepEqual( Stem("järnvägsresan"), "järnvägsresan" );
	deepEqual( Stem("järran"), "järran" );
	deepEqual( Stem("jäsa"), "jäs" );
	deepEqual( Stem("jäsande"), "jäs" );
	deepEqual( Stem("jäser"), "jäs" );
	deepEqual( Stem("jäsning"), "jäsning" );
	deepEqual( Stem("jäst"), "jäst" );
	deepEqual( Stem("jästa"), "jäst" );
	deepEqual( Stem("jäste"), "jäst" );
	deepEqual( Stem("jättar"), "jätt" );
	deepEqual( Stem("jättars"), "jättar" );
	deepEqual( Stem("jätte"), "jätt" );
	deepEqual( Stem("jättebarn"), "jättebarn" );
	deepEqual( Stem("jättegrytan"), "jättegrytan" );
	deepEqual( Stem("jättelik"), "jättelik" );
	deepEqual( Stem("jättenavel"), "jättenavel" );
	deepEqual( Stem("jättesolv"), "jättesolv" );
	deepEqual( Stem("jättesteg"), "jättesteg" );
	deepEqual( Stem("jättestor"), "jättest" );
	deepEqual( Stem("jättetass"), "jättetass" );
	deepEqual( Stem("jätteviskning"), "jätteviskning" );
	deepEqual( Stem("k"), "k" );
	deepEqual( Stem("ka"), "ka" );
	deepEqual( Stem("kabelända"), "kabeländ" );
	deepEqual( Stem("kabinett"), "kabinet" );
	deepEqual( Stem("kabinettet"), "kabinettet" );
	deepEqual( Stem("kackerlackor"), "kackerlack" );
	deepEqual( Stem("kade"), "kad" );
	deepEqual( Stem("kadett"), "kadet" );
	deepEqual( Stem("kafe"), "kaf" );
	deepEqual( Stem("kafebord"), "kafebord" );
	deepEqual( Stem("kafeerna"), "kafe" );
	deepEqual( Stem("kafeet"), "kafeet" );
	deepEqual( Stem("kafeets"), "kafeet" );
	deepEqual( Stem("kafehörn"), "kafehörn" );
	deepEqual( Stem("kaferestaurang"), "kaferestaurang" );
	deepEqual( Stem("kafesoffan"), "kafesoffan" );
	deepEqual( Stem("kaffe"), "kaff" );
	deepEqual( Stem("kaffebord"), "kaffebord" );
	deepEqual( Stem("kaffebordet"), "kaffebordet" );
	deepEqual( Stem("kaffebricka"), "kaffebrick" );
	deepEqual( Stem("kaffebrickan"), "kaffebrickan" );
	deepEqual( Stem("kaffegrädde"), "kaffegräd" );
	deepEqual( Stem("kaffekanna"), "kaffekan" );
	deepEqual( Stem("kaffekannan"), "kaffekannan" );
	deepEqual( Stem("kaffekittel"), "kaffekittel" );
	deepEqual( Stem("kaffekokaren"), "kaffekok" );
	deepEqual( Stem("kaffekopp"), "kaffekopp" );
	deepEqual( Stem("kaffekoppen"), "kaffekopp" );
	deepEqual( Stem("kaffekvarn"), "kaffekvarn" );
	deepEqual( Stem("kaffepanna"), "kaffepan" );
	deepEqual( Stem("kaffepannan"), "kaffepannan" );
	deepEqual( Stem("kaffesyster"), "kaffesyst" );
	deepEqual( Stem("kaffet"), "kaffet" );
	deepEqual( Stem("kaffetimme"), "kaffetimm" );
	deepEqual( Stem("kaffetåren"), "kaffetår" );
	deepEqual( Stem("kaftan"), "kaftan" );
	deepEqual( Stem("kaftanlik"), "kaftanlik" );
	deepEqual( Stem("kaggar"), "kagg" );
	deepEqual( Stem("kah"), "kah" );
	deepEqual( Stem("kaiken"), "kaik" );
	deepEqual( Stem("kains"), "kain" );
	deepEqual( Stem("kaja"), "kaj" );
	deepEqual( Stem("kajen"), "kaj" );
	deepEqual( Stem("kajer"), "kaj" );
	deepEqual( Stem("kajerna"), "kaj" );
	deepEqual( Stem("kajsa"), "kajs" );
	deepEqual( Stem("kajsas"), "kajs" );
	deepEqual( Stem("kaka"), "kak" );
	deepEqual( Stem("kakan"), "kakan" );
	deepEqual( Stem("kakel"), "kakel" );
	deepEqual( Stem("kakelugn"), "kakelugn" );
	deepEqual( Stem("kakelugnar"), "kakelugn" );
	deepEqual( Stem("kakelugnen"), "kakelugn" );
	deepEqual( Stem("kakelugnsfrisen"), "kakelugnsfris" );
	deepEqual( Stem("kakelugnskanten"), "kakelugnskant" );
	deepEqual( Stem("kakfat"), "kakf" );
	deepEqual( Stem("kakfatet"), "kakfatet" );
	deepEqual( Stem("kakor"), "kak" );
	deepEqual( Stem("kakpapper"), "kakpapp" );
	deepEqual( Stem("kaksmet"), "kaksmet" );
	deepEqual( Stem("kala"), "kal" );
	deepEqual( Stem("kalasa"), "kalas" );
	deepEqual( Stem("kalaser"), "kalas" );
	deepEqual( Stem("kalaset"), "kalaset" );
	deepEqual( Stem("kalasskjortorna"), "kalasskjort" );
	deepEqual( Stem("kalendern"), "kalend" );
	deepEqual( Stem("kali"), "kali" );
	deepEqual( Stem("kalk"), "kalk" );
	deepEqual( Stem("kalkar"), "kalk" );
	deepEqual( Stem("kalken"), "kalk" );
	deepEqual( Stem("kalkon"), "kalkon" );
	deepEqual( Stem("kalkonen"), "kalkon" );
	deepEqual( Stem("kalkonerna"), "kalkon" );
	deepEqual( Stem("kalkonskivorna"), "kalkonskiv" );
	deepEqual( Stem("kall"), "kall" );
	deepEqual( Stem("kalla"), "kall" );
	deepEqual( Stem("kallad"), "kall" );
	deepEqual( Stem("kallade"), "kall" );
	deepEqual( Stem("kallades"), "kall" );
	deepEqual( Stem("kalladt"), "kallad" );
	deepEqual( Stem("kallande"), "kall" );
	deepEqual( Stem("kallar"), "kall" );
	deepEqual( Stem("kallas"), "kall" );
	deepEqual( Stem("kallaste"), "kall" );
	deepEqual( Stem("kallat"), "kall" );
	deepEqual( Stem("kallats"), "kallat" );
	deepEqual( Stem("kallbad"), "kallb" );
	deepEqual( Stem("kallblodighet"), "kallblod" );
	deepEqual( Stem("kalle"), "kall" );
	deepEqual( Stem("kallelse"), "kall" );
	deepEqual( Stem("kallnade"), "kalln" );
	deepEqual( Stem("kallnar"), "kalln" );
	deepEqual( Stem("kallnat"), "kalln" );
	deepEqual( Stem("kallsinnighet"), "kallsinn" );
	deepEqual( Stem("kallsvettades"), "kallsvet" );
	deepEqual( Stem("kallt"), "kallt" );
	deepEqual( Stem("kalnrern"), "kalnr" );
	deepEqual( Stem("kalops"), "kalop" );
	deepEqual( Stem("kalt"), "kalt" );
	deepEqual( Stem("kalufs"), "kaluf" );
	deepEqual( Stem("kalufsen"), "kalufs" );
	deepEqual( Stem("kalva"), "kalv" );
	deepEqual( Stem("kalvstekssås"), "kalvstekssås" );
	deepEqual( Stem("kam"), "kam" );
	deepEqual( Stem("kameral"), "kameral" );
	deepEqual( Stem("kamfer"), "kamf" );
	deepEqual( Stem("kamma"), "kamm" );
	deepEqual( Stem("kammad"), "kamm" );
	deepEqual( Stem("kammakaregatan"), "kammakaregatan" );
	deepEqual( Stem("kammar"), "kamm" );
	deepEqual( Stem("kammardörr"), "kammardörr" );
	deepEqual( Stem("kammare"), "kamm" );
	deepEqual( Stem("kammaren"), "kamm" );
	deepEqual( Stem("kammarfönster"), "kammarfönst" );
	deepEqual( Stem("kammargolfvet"), "kammargolfvet" );
	deepEqual( Stem("kammarhandel"), "kammarhandel" );
	deepEqual( Stem("kammarherre"), "kammarherr" );
	deepEqual( Stem("kammarherrinna"), "kammarherrin" );
	deepEqual( Stem("kammarjunkar"), "kammarjunk" );
	deepEqual( Stem("kammarjunkare"), "kammarjunk" );
	deepEqual( Stem("kammarjunkarefullmakt"), "kammarjunkarefullmak" );
	deepEqual( Stem("kammarlifvet"), "kammarlifvet" );
	deepEqual( Stem("kammarn"), "kammarn" );
	deepEqual( Stem("kammarorgel"), "kammarorgel" );
	deepEqual( Stem("kammarspisning"), "kammarspisning" );
	deepEqual( Stem("kammartjenare"), "kammartjen" );
	deepEqual( Stem("kammen"), "kamm" );
	deepEqual( Stem("kammerrerinna"), "kammerrerin" );
	deepEqual( Stem("kamp"), "kamp" );
	deepEqual( Stem("kampar"), "kamp" );
	deepEqual( Stem("kampen"), "kamp" );
	deepEqual( Stem("kamrar"), "kamr" );
	deepEqual( Stem("kamrars"), "kamrar" );
	deepEqual( Stem("kamrat"), "kamr" );
	deepEqual( Stem("kamraten"), "kamrat" );
	deepEqual( Stem("kamrater"), "kamrat" );
	deepEqual( Stem("kamraterna"), "kamrat" );
	deepEqual( Stem("kamraternas"), "kamrat" );
	deepEqual( Stem("kamrem"), "kamrem" );
	deepEqual( Stem("kamrer"), "kamr" );
	deepEqual( Stem("kamrern"), "kamr" );
	deepEqual( Stem("kamrerns"), "kamr" );
	deepEqual( Stem("kamrers"), "kamrer" );
	deepEqual( Stem("kamrerskan"), "kamrerskan" );
	deepEqual( Stem("kan"), "kan" );
	deepEqual( Stem("kana"), "kan" );
	deepEqual( Stem("kanalen"), "kanal" );
	deepEqual( Stem("kanalje"), "kanalj" );
	deepEqual( Stem("kanaljeri"), "kanaljeri" );
	deepEqual( Stem("kanaljerna"), "kanalj" );
	deepEqual( Stem("kande"), "kand" );
	deepEqual( Stem("kandelabrarna"), "kandelabr" );
	deepEqual( Stem("kanderad"), "kander" );
	deepEqual( Stem("kandidaten"), "kandidat" );
	deepEqual( Stem("kanel"), "kanel" );
	deepEqual( Stem("kanhä"), "kanhä" );
	deepEqual( Stem("kanhända"), "kanhänd" );
	deepEqual( Stem("kanistern"), "kanist" );
	deepEqual( Stem("kanna"), "kann" );
	deepEqual( Stem("kannan"), "kannan" );
	deepEqual( Stem("kannans"), "kannan" );
	deepEqual( Stem("kannas"), "kann" );
	deepEqual( Stem("kannstöparsarkasm"), "kannstöparsarkasm" );
	deepEqual( Stem("kanonskott"), "kanonskot" );
	deepEqual( Stem("kanoter"), "kanot" );
	deepEqual( Stem("kanotiärerna"), "kanotiär" );
	deepEqual( Stem("kanskc"), "kanskc" );
	deepEqual( Stem("kanske"), "kansk" );
	deepEqual( Stem("kansla"), "kansl" );
	deepEqual( Stem("kanslirådet"), "kanslirådet" );
	deepEqual( Stem("kanslisekreterare"), "kanslisekreter" );
	deepEqual( Stem("kanslor"), "kansl" );
	deepEqual( Stem("kant"), "kant" );
	deepEqual( Stem("kantad"), "kant" );
	deepEqual( Stem("kantade"), "kant" );
	deepEqual( Stem("kanten"), "kant" );
	deepEqual( Stem("kanter"), "kant" );
	deepEqual( Stem("kanterna"), "kant" );
	deepEqual( Stem("kantig"), "kant" );
	deepEqual( Stem("kantor"), "kant" );
	deepEqual( Stem("kantorn"), "kantorn" );
	deepEqual( Stem("kantorns"), "kantorn" );
	deepEqual( Stem("kantra"), "kantr" );
	deepEqual( Stem("kantrade"), "kantr" );
	deepEqual( Stem("kantring"), "kantring" );
	deepEqual( Stem("kaos"), "kaos" );
	deepEqual( Stem("kapa"), "kap" );
	deepEqual( Stem("kapabel"), "kapabel" );
	deepEqual( Stem("kapell"), "kapell" );
	deepEqual( Stem("kapellens"), "kapell" );
	deepEqual( Stem("kapital"), "kapital" );
	deepEqual( Stem("kapitel"), "kapitel" );
	deepEqual( Stem("kapitlet"), "kapitlet" );
	deepEqual( Stem("kapp"), "kapp" );
	deepEqual( Stem("kappa"), "kapp" );
	deepEqual( Stem("kappan"), "kappan" );
	deepEqual( Stem("kappas"), "kapp" );
	deepEqual( Stem("kappe"), "kapp" );
	deepEqual( Stem("kapplöpning"), "kapplöpning" );
	deepEqual( Stem("kappor"), "kapp" );
	deepEqual( Stem("kapporna"), "kapp" );
	deepEqual( Stem("kapprock"), "kapprock" );
	deepEqual( Stem("kappsäck"), "kappsäck" );
	deepEqual( Stem("kappsäckarna"), "kappsäck" );
	deepEqual( Stem("kappsäcken"), "kappsäck" );
	deepEqual( Stem("kappärm"), "kappärm" );
	deepEqual( Stem("kapriser"), "kapris" );
	deepEqual( Stem("kapslar"), "kapsl" );
	deepEqual( Stem("kapslarna"), "kapsl" );
	deepEqual( Stem("kapten"), "kapt" );
	deepEqual( Stem("kaptenen"), "kapten" );
	deepEqual( Stem("kaptenens"), "kapten" );
	deepEqual( Stem("kaptens"), "kapt" );
	deepEqual( Stem("kaptensvärdighet"), "kaptensvärd" );
	deepEqual( Stem("kapun"), "kapun" );
	deepEqual( Stem("kapunen"), "kapun" );
	deepEqual( Stem("kar"), "kar" );
	deepEqual( Stem("karakter"), "karak" );
	deepEqual( Stem("karakteriserar"), "karakteriser" );
	deepEqual( Stem("karakteristiken"), "karakteristik" );
	deepEqual( Stem("karakteristisk"), "karakteristisk" );
	deepEqual( Stem("karakteristiskt"), "karakteristisk" );
	deepEqual( Stem("karaktär"), "karaktär" );
	deepEqual( Stem("karaktärens"), "karaktär" );
	deepEqual( Stem("karaktärer"), "karaktär" );
	deepEqual( Stem("karaktärslöst"), "karaktärslös" );
	deepEqual( Stem("karamell"), "karamell" );
	deepEqual( Stem("karameller"), "karamell" );
	deepEqual( Stem("karamellkoket"), "karamellkoket" );
	deepEqual( Stem("karbol"), "karbol" );
	deepEqual( Stem("kardborrar"), "kardborr" );
	deepEqual( Stem("karet"), "karet" );
	deepEqual( Stem("karikatyrer"), "karikatyr" );
	deepEqual( Stem("karin"), "karin" );
	deepEqual( Stem("karl"), "karl" );
	deepEqual( Stem("karlar"), "karl" );
	deepEqual( Stem("karlarna"), "karl" );
	deepEqual( Stem("karlarne"), "karl" );
	deepEqual( Stem("karlberg"), "karlberg" );
	deepEqual( Stem("karlbergs"), "karlberg" );
	deepEqual( Stem("karlbergsallen"), "karlbergsall" );
	deepEqual( Stem("karlek"), "karlek" );
	deepEqual( Stem("karlekarl"), "karlekarl" );
	deepEqual( Stem("karlen"), "karl" );
	deepEqual( Stem("karlmark"), "karlmark" );
	deepEqual( Stem("karlmarken"), "karlmark" );
	deepEqual( Stem("karlmarkens"), "karlmark" );
	deepEqual( Stem("karlmarks"), "karlmark" );
	deepEqual( Stem("karlmarkskan"), "karlmarkskan" );
	deepEqual( Stem("karls"), "karl" );
	deepEqual( Stem("karlske"), "karlsk" );
	deepEqual( Stem("karlskepnad"), "karlskepn" );
	deepEqual( Stem("karmrater"), "karmrat" );
	deepEqual( Stem("karmrern"), "karmr" );
	deepEqual( Stem("karmstol"), "karmstol" );
	deepEqual( Stem("karna"), "karn" );
	deepEqual( Stem("karo"), "karo" );
	deepEqual( Stem("karolin"), "karolin" );
	deepEqual( Stem("karolina"), "karolin" );
	deepEqual( Stem("kaross"), "kaross" );
	deepEqual( Stem("karott"), "karot" );
	deepEqual( Stem("karriär"), "karriär" );
	deepEqual( Stem("karriärsynpunkt"), "karriärsynpunk" );
	deepEqual( Stem("karta"), "kart" );
	deepEqual( Stem("kartan"), "kartan" );
	deepEqual( Stem("kartonger"), "kartong" );
	deepEqual( Stem("karusell"), "karusell" );
	deepEqual( Stem("karusellen"), "karusell" );
	deepEqual( Stem("karva"), "karv" );
	deepEqual( Stem("karvat"), "karv" );
	deepEqual( Stem("kas"), "kas" );
	deepEqual( Stem("kaskader"), "kaskad" );
	deepEqual( Stem("kassa"), "kass" );
	deepEqual( Stem("kassaboken"), "kassabok" );
	deepEqual( Stem("kassabokens"), "kassabok" );
	deepEqual( Stem("kassaböcker"), "kassaböck" );
	deepEqual( Stem("kassadirektör"), "kassadirektör" );
	deepEqual( Stem("kassakista"), "kassakist" );
	deepEqual( Stem("kassan"), "kassan" );
	deepEqual( Stem("kasta"), "kast" );
	deepEqual( Stem("kastad"), "kast" );
	deepEqual( Stem("kastadc"), "kastadc" );
	deepEqual( Stem("kastade"), "kast" );
	deepEqual( Stem("kastades"), "kast" );
	deepEqual( Stem("kastande"), "kast" );
	deepEqual( Stem("kastanje"), "kastanj" );
	deepEqual( Stem("kastanjebruna"), "kastanjebrun" );
	deepEqual( Stem("kastanjen"), "kastanj" );
	deepEqual( Stem("kastanjer"), "kastanj" );
	deepEqual( Stem("kastanjernas"), "kastanj" );
	deepEqual( Stem("kastanjeträd"), "kastanjeträd" );
	deepEqual( Stem("kastanjeträden"), "kastanjeträd" );
	deepEqual( Stem("kastar"), "kast" );
	deepEqual( Stem("kastas"), "kast" );
	deepEqual( Stem("kastat"), "kast" );
	deepEqual( Stem("kastats"), "kastat" );
	deepEqual( Stem("kastellan"), "kastellan" );
	deepEqual( Stem("kasus"), "kasus" );
	deepEqual( Stem("katarina"), "katarin" );
	deepEqual( Stem("katastrof"), "katastrof" );
	deepEqual( Stem("katedcrn"), "katedcrn" );
	deepEqual( Stem("kateder"), "kated" );
	deepEqual( Stem("katedern"), "kated" );
	deepEqual( Stem("katedrals"), "katedral" );
	deepEqual( Stem("katekesen"), "katekes" );
	deepEqual( Stem("katolik"), "katolik" );
	deepEqual( Stem("katolsk"), "katolsk" );
	deepEqual( Stem("katolska"), "katolsk" );
	deepEqual( Stem("katrina"), "katrin" );
	deepEqual( Stem("katrinadagen"), "katrinadag" );
	deepEqual( Stem("katrinas"), "katrin" );
	deepEqual( Stem("katsor"), "kats" );
	deepEqual( Stem("katt"), "katt" );
	deepEqual( Stem("katta"), "katt" );
	deepEqual( Stem("kattdjur"), "kattdjur" );
	deepEqual( Stem("katten"), "katt" );
	deepEqual( Stem("kattens"), "katt" );
	deepEqual( Stem("kattlik"), "kattlik" );
	deepEqual( Stem("kattmusik"), "kattmusik" );
	deepEqual( Stem("kattor"), "katt" );
	deepEqual( Stem("katts"), "katt" );
	deepEqual( Stem("kattuner"), "kattun" );
	deepEqual( Stem("kattuns"), "kattun" );
	deepEqual( Stem("kattunsgardiner"), "kattunsgardin" );
	deepEqual( Stem("kattunsklädningen"), "kattunsklädning" );
	deepEqual( Stem("kattunstycken"), "kattunstyck" );
	deepEqual( Stem("kavaj"), "kavaj" );
	deepEqual( Stem("kavajfickorna"), "kavajfick" );
	deepEqual( Stem("kavajkostym"), "kavajkostym" );
	deepEqual( Stem("kavaljer"), "kavalj" );
	deepEqual( Stem("kavaljererna"), "kavaljer" );
	deepEqual( Stem("kavaljern"), "kavalj" );
	deepEqual( Stem("kavaljersmaner"), "kavaljersman" );
	deepEqual( Stem("kavata"), "kavat" );
	deepEqual( Stem("kavet"), "kavet" );
	deepEqual( Stem("kaxig"), "kax" );
	deepEqual( Stem("kedja"), "kedj" );
	deepEqual( Stem("kedjan"), "kedjan" );
	deepEqual( Stem("kedjor"), "kedj" );
	deepEqual( Stem("kejsare"), "kejs" );
	deepEqual( Stem("kejsarinna"), "kejsarin" );
	deepEqual( Stem("kela"), "kel" );
	deepEqual( Stem("kellnern"), "kelln" );
	deepEqual( Stem("kelser"), "kels" );
	deepEqual( Stem("kelt"), "kelt" );
	deepEqual( Stem("ken"), "ken" );
	deepEqual( Stem("kered"), "kered" );
	deepEqual( Stem("kerstin"), "kerstin" );
	deepEqual( Stem("kerstins"), "kerstin" );
	deepEqual( Stem("kerub"), "kerub" );
	deepEqual( Stem("kestner"), "kestn" );
	deepEqual( Stem("kestners"), "kestner" );
	deepEqual( Stem("khngade"), "khngad" );
	deepEqual( Stem("kiang"), "kiang" );
	deepEqual( Stem("kickade"), "kick" );
	deepEqual( Stem("kiga"), "kig" );
	deepEqual( Stem("kihlberg"), "kihlberg" );
	deepEqual( Stem("kikade"), "kik" );
	deepEqual( Stem("kikaren"), "kik" );
	deepEqual( Stem("kiksögon"), "kiksögon" );
	deepEqual( Stem("kilade"), "kil" );
	deepEqual( Stem("killingsfäll"), "killingsfäll" );
	deepEqual( Stem("kin"), "kin" );
	deepEqual( Stem("kind"), "kind" );
	deepEqual( Stem("kindben"), "kindb" );
	deepEqual( Stem("kindbenet"), "kindbenet" );
	deepEqual( Stem("kinden"), "kind" );
	deepEqual( Stem("kindens"), "kind" );
	deepEqual( Stem("kinder"), "kind" );
	deepEqual( Stem("kinderna"), "kind" );
	deepEqual( Stem("kindknotor"), "kindknot" );
	deepEqual( Stem("kinesisk"), "kinesisk" );
	deepEqual( Stem("kinesiska"), "kinesisk" );
	deepEqual( Stem("kinkig"), "kink" );
	deepEqual( Stem("kinkiga"), "kink" );
	deepEqual( Stem("kinkigare"), "kink" );
	deepEqual( Stem("kinkigt"), "kink" );
	deepEqual( Stem("kippa"), "kipp" );
	deepEqual( Stem("kippskor"), "kippsk" );
	deepEqual( Stem("kirurgen"), "kirurg" );
	deepEqual( Stem("kirurger"), "kirurg" );
	deepEqual( Stem("kisade"), "kis" );
	deepEqual( Stem("kisande"), "kis" );
	deepEqual( Stem("kiselstenar"), "kiselsten" );
	deepEqual( Stem("kista"), "kist" );
	deepEqual( Stem("kistan"), "kistan" );
	deepEqual( Stem("kistlock"), "kistlock" );
	deepEqual( Stem("kistor"), "kist" );
	deepEqual( Stem("kitslighet"), "kits" );
	deepEqual( Stem("kitta"), "kitt" );
	deepEqual( Stem("kittel"), "kittel" );
	deepEqual( Stem("kittla"), "kittl" );
	deepEqual( Stem("kittlade"), "kittl" );
	deepEqual( Stem("kittlande"), "kittl" );
	deepEqual( Stem("kiv"), "kiv" );
	deepEqual( Stem("kjol"), "kjol" );
	deepEqual( Stem("kjolar"), "kjol" );
	deepEqual( Stem("kjolarna"), "kjol" );
	deepEqual( Stem("kjolen"), "kjol" );
	deepEqual( Stem("kjolkanten"), "kjolkant" );
	deepEqual( Stem("kjolsäck"), "kjolsäck" );
	deepEqual( Stem("kjortel"), "kjortel" );
	deepEqual( Stem("kjortelfållar"), "kjortelfåll" );
	deepEqual( Stem("kjortelsäck"), "kjortelsäck" );
	deepEqual( Stem("kjortelsäcken"), "kjortelsäck" );
	deepEqual( Stem("kjortlarna"), "kjortl" );
	deepEqual( Stem("kla"), "kla" );
	deepEqual( Stem("klack"), "klack" );
	deepEqual( Stem("klackar"), "klack" );
	deepEqual( Stem("klackarna"), "klack" );
	deepEqual( Stem("klader"), "klad" );
	deepEqual( Stem("klaffbord"), "klaffbord" );
	deepEqual( Stem("klaffen"), "klaff" );
	deepEqual( Stem("klaga"), "klag" );
	deepEqual( Stem("klagade"), "klag" );
	deepEqual( Stem("klagan"), "klagan" );
	deepEqual( Stem("klagande"), "klag" );
	deepEqual( Stem("klagar"), "klag" );
	deepEqual( Stem("klagat"), "klag" );
	deepEqual( Stem("klagomål"), "klagomål" );
	deepEqual( Stem("klampade"), "klamp" );
	deepEqual( Stem("klander"), "kland" );
	deepEqual( Stem("klandra"), "klandr" );
	deepEqual( Stem("klandrade"), "klandr" );
	deepEqual( Stem("klandrar"), "klandr" );
	deepEqual( Stem("klang"), "klang" );
	deepEqual( Stem("klangen"), "klang" );
	deepEqual( Stem("klangfull"), "klangfull" );
	deepEqual( Stem("klangfärg"), "klangfärg" );
	deepEqual( Stem("klanningsficka"), "klanningsfick" );
	deepEqual( Stem("klapp"), "klapp" );
	deepEqual( Stem("klappa"), "klapp" );
	deepEqual( Stem("klappade"), "klapp" );
	deepEqual( Stem("klappande"), "klapp" );
	deepEqual( Stem("klappar"), "klapp" );
	deepEqual( Stem("klappat"), "klapp" );
	deepEqual( Stem("klappning"), "klappning" );
	deepEqual( Stem("klapprade"), "klappr" );
	deepEqual( Stem("klapprande"), "klappr" );
	deepEqual( Stem("klapprandet"), "klappr" );
	deepEqual( Stem("klar"), "klar" );
	deepEqual( Stem("klara"), "klar" );
	deepEqual( Stem("klarar"), "klar" );
	deepEqual( Stem("klarare"), "klar" );
	deepEqual( Stem("klaraste"), "klar" );
	deepEqual( Stem("klarbla"), "klarbl" );
	deepEqual( Stem("klarbär"), "klarbär" );
	deepEqual( Stem("klarhet"), "klar" );
	deepEqual( Stem("klarna"), "klarn" );
	deepEqual( Stem("klarnade"), "klarn" );
	deepEqual( Stem("klarnar"), "klarn" );
	deepEqual( Stem("klart"), "klart" );
	deepEqual( Stem("klarögd"), "klarög" );
	deepEqual( Stem("klarögda"), "klarög" );
	deepEqual( Stem("klas"), "klas" );
	deepEqual( Stem("klasar"), "klas" );
	deepEqual( Stem("klass"), "klass" );
	deepEqual( Stem("klassbildning"), "klassbildning" );
	deepEqual( Stem("klassen"), "klass" );
	deepEqual( Stem("klassens"), "klass" );
	deepEqual( Stem("klasser"), "klass" );
	deepEqual( Stem("klasserna"), "klass" );
	deepEqual( Stem("klassföreståndarinnan"), "klassföreståndarinnan" );
	deepEqual( Stem("klassifikationssystem"), "klassifikationssystem" );
	deepEqual( Stem("klasskamrat"), "klasskamr" );
	deepEqual( Stem("klasskamraten"), "klasskamrat" );
	deepEqual( Stem("klasskamrater"), "klasskamrat" );
	deepEqual( Stem("klassrum"), "klassrum" );
	deepEqual( Stem("klassrummen"), "klassrumm" );
	deepEqual( Stem("klassrummet"), "klassrummet" );
	deepEqual( Stem("klatsch"), "klatsch" );
	deepEqual( Stem("klaver"), "klav" );
	deepEqual( Stem("klaveret"), "klaveret" );
	deepEqual( Stem("kled"), "kled" );
	deepEqual( Stem("klef"), "klef" );
	deepEqual( Stem("klemade"), "klem" );
	deepEqual( Stem("klemande"), "klem" );
	deepEqual( Stem("klemandet"), "klem" );
	deepEqual( Stem("klen"), "klen" );
	deepEqual( Stem("klena"), "klen" );
	deepEqual( Stem("klenod"), "klenod" );
	deepEqual( Stem("klenoder"), "klenod" );
	deepEqual( Stem("klenoders"), "klenoder" );
	deepEqual( Stem("klent"), "klent" );
	deepEqual( Stem("klentrogne"), "klentrogn" );
	deepEqual( Stem("kleptoman"), "kleptoman" );
	deepEqual( Stem("klev"), "klev" );
	deepEqual( Stem("kli"), "kli" );
	deepEqual( Stem("kliar"), "kliar" );
	deepEqual( Stem("kliat"), "kliat" );
	deepEqual( Stem("klibbade"), "klibb" );
	deepEqual( Stem("klibbar"), "klibb" );
	deepEqual( Stem("klibbat"), "klibb" );
	deepEqual( Stem("klimat"), "klim" );
	deepEqual( Stem("klinga"), "kling" );
	deepEqual( Stem("klingade"), "kling" );
	deepEqual( Stem("klingallde"), "klingalld" );
	deepEqual( Stem("klingand"), "klingand" );
	deepEqual( Stem("klingande"), "kling" );
	deepEqual( Stem("klingar"), "kling" );
	deepEqual( Stem("klinkan"), "klinkan" );
	deepEqual( Stem("klintar"), "klint" );
	deepEqual( Stem("klippa"), "klipp" );
	deepEqual( Stem("klippan"), "klippan" );
	deepEqual( Stem("klipper"), "klipp" );
	deepEqual( Stem("klipphålorna"), "klipphål" );
	deepEqual( Stem("klippiga"), "klipp" );
	deepEqual( Stem("klippmassor"), "klippmass" );
	deepEqual( Stem("klippor"), "klipp" );
	deepEqual( Stem("klipporna"), "klipp" );
	deepEqual( Stem("klippt"), "klippt" );
	deepEqual( Stem("klippte"), "klippt" );
	deepEqual( Stem("klipptopparne"), "klipptopp" );
	deepEqual( Stem("klipska"), "klipsk" );
	deepEqual( Stem("klirrade"), "klirr" );
	deepEqual( Stem("klirrande"), "klirr" );
	deepEqual( Stem("kliv"), "kliv" );
	deepEqual( Stem("kliva"), "kliv" );
	deepEqual( Stem("klo"), "klo" );
	deepEqual( Stem("kloaken"), "kloak" );
	deepEqual( Stem("klock"), "klock" );
	deepEqual( Stem("klocka"), "klock" );
	deepEqual( Stem("klockan"), "klockan" );
	deepEqual( Stem("klockans"), "klockan" );
	deepEqual( Stem("klockare"), "klock" );
	deepEqual( Stem("klockaren"), "klock" );
	deepEqual( Stem("klockarens"), "klock" );
	deepEqual( Stem("klockarfar"), "klockarf" );
	deepEqual( Stem("klockarn"), "klockarn" );
	deepEqual( Stem("klockarsonen"), "klockarson" );
	deepEqual( Stem("klockas"), "klock" );
	deepEqual( Stem("klockkedjan"), "klockkedjan" );
	deepEqual( Stem("klocklikt"), "klocklik" );
	deepEqual( Stem("klockor"), "klock" );
	deepEqual( Stem("klockorna"), "klock" );
	deepEqual( Stem("klockornas"), "klock" );
	deepEqual( Stem("klockors"), "klockor" );
	deepEqual( Stem("klockringning"), "klockringning" );
	deepEqual( Stem("kloekornas"), "kloek" );
	deepEqual( Stem("klok"), "klok" );
	deepEqual( Stem("kloka"), "klok" );
	deepEqual( Stem("klokare"), "klok" );
	deepEqual( Stem("klokast"), "klok" );
	deepEqual( Stem("klokaste"), "klok" );
	deepEqual( Stem("kloke"), "klok" );
	deepEqual( Stem("klokhet"), "klok" );
	deepEqual( Stem("klokheten"), "klok" );
	deepEqual( Stem("klokt"), "klokt" );
	deepEqual( Stem("kloliknande"), "klolikn" );
	deepEqual( Stem("klor"), "klor" );
	deepEqual( Stem("klorna"), "klorn" );
	deepEqual( Stem("kloroform"), "kloroform" );
	deepEqual( Stem("kloster"), "klost" );
	deepEqual( Stem("klostergården"), "klostergård" );
	deepEqual( Stem("klosterlik"), "klosterlik" );
	deepEqual( Stem("klot"), "klot" );
	deepEqual( Stem("klotb"), "klotb" );
	deepEqual( Stem("klotrund"), "klotrund" );
	deepEqual( Stem("klotrunda"), "klotrund" );
	deepEqual( Stem("klotrunt"), "klotrunt" );
	deepEqual( Stem("klskade"), "klskad" );
	deepEqual( Stem("klubba"), "klubb" );
	deepEqual( Stem("klubban"), "klubban" );
	deepEqual( Stem("klubben"), "klubb" );
	deepEqual( Stem("kludderi"), "kludderi" );
	deepEqual( Stem("klump"), "klump" );
	deepEqual( Stem("klumpen"), "klump" );
	deepEqual( Stem("klumpig"), "klump" );
	deepEqual( Stem("klungan"), "klungan" );
	deepEqual( Stem("klunk"), "klunk" );
	deepEqual( Stem("klunkar"), "klunk" );
	deepEqual( Stem("klyftigheterna"), "klyft" );
	deepEqual( Stem("klyftor"), "klyft" );
	deepEqual( Stem("klyfver"), "klyfv" );
	deepEqual( Stem("klynka"), "klynk" );
	deepEqual( Stem("klynkade"), "klynk" );
	deepEqual( Stem("klyva"), "klyv" );
	deepEqual( Stem("klyvas"), "klyv" );
	deepEqual( Stem("klä"), "klä" );
	deepEqual( Stem("kläd"), "kläd" );
	deepEqual( Stem("kläda"), "kläd" );
	deepEqual( Stem("klädas"), "kläd" );
	deepEqual( Stem("klädd"), "klädd" );
	deepEqual( Stem("klädda"), "klädd" );
	deepEqual( Stem("klädde"), "klädd" );
	deepEqual( Stem("kläde"), "kläd" );
	deepEqual( Stem("klädedrägt"), "klädedräg" );
	deepEqual( Stem("kläden"), "kläd" );
	deepEqual( Stem("kläder"), "kläd" );
	deepEqual( Stem("kläderna"), "kläd" );
	deepEqual( Stem("klädernas"), "kläd" );
	deepEqual( Stem("klädespersedel"), "klädespersedel" );
	deepEqual( Stem("klädespersedeln"), "klädespersedeln" );
	deepEqual( Stem("klädespersedlarne"), "klädespersedl" );
	deepEqual( Stem("klädkorg"), "klädkorg" );
	deepEqual( Stem("klädmäklaredotter"), "klädmäklaredot" );
	deepEqual( Stem("klädnad"), "klädn" );
	deepEqual( Stem("klädning"), "klädning" );
	deepEqual( Stem("klädningar"), "klädning" );
	deepEqual( Stem("klädningarna"), "klädning" );
	deepEqual( Stem("klädningarnas"), "klädning" );
	deepEqual( Stem("klädningarne"), "klädning" );
	deepEqual( Stem("klädningen"), "klädning" );
	deepEqual( Stem("klädningsliv"), "klädningsliv" );
	deepEqual( Stem("klädsam"), "klädsam" );
	deepEqual( Stem("klädsel"), "klädsel" );
	deepEqual( Stem("klädseln"), "klädseln" );
	deepEqual( Stem("klädstand"), "klädstand" );
	deepEqual( Stem("klädstånd"), "klädstånd" );
	deepEqual( Stem("klädståndet"), "klädståndet" );
	deepEqual( Stem("klädståndsfru"), "klädståndsfru" );
	deepEqual( Stem("klädståndsfruar"), "klädståndsfru" );
	deepEqual( Stem("klädståndsfrun"), "klädståndsfrun" );
	deepEqual( Stem("klädståndsfruns"), "klädståndsfrun" );
	deepEqual( Stem("klädståndsluften"), "klädståndsluft" );
	deepEqual( Stem("klämde"), "klämd" );
	deepEqual( Stem("klämma"), "klämm" );
	deepEqual( Stem("klämman"), "klämman" );
	deepEqual( Stem("klämt"), "klämt" );
	deepEqual( Stem("klämtade"), "klämt" );
	deepEqual( Stem("klämtande"), "klämt" );
	deepEqual( Stem("klämtat"), "klämt" );
	deepEqual( Stem("klämtslag"), "klämtslag" );
	deepEqual( Stem("klämtslaget"), "klämtslaget" );
	deepEqual( Stem("klän"), "klän" );
	deepEqual( Stem("klänga"), "kläng" );
	deepEqual( Stem("klängde"), "kläng" );
	deepEqual( Stem("klänning"), "klänning" );
	deepEqual( Stem("klänningar"), "klänning" );
	deepEqual( Stem("klänningen"), "klänning" );
	deepEqual( Stem("klänningsficka"), "klänningsfick" );
	deepEqual( Stem("klänningskjol"), "klänningskjol" );
	deepEqual( Stem("klänningslivet"), "klänningslivet" );
	deepEqual( Stem("klänningstyget"), "klänningstyget" );
	deepEqual( Stem("kläp"), "kläp" );
	deepEqual( Stem("kläppen"), "kläpp" );
	deepEqual( Stem("klär"), "klär" );
	deepEqual( Stem("klätt"), "klätt" );
	deepEqual( Stem("klättra"), "klättr" );
	deepEqual( Stem("klättrade"), "klättr" );
	deepEqual( Stem("klättrande"), "klättr" );
	deepEqual( Stem("klättrar"), "klättr" );
	deepEqual( Stem("klättrarnas"), "klättr" );
	deepEqual( Stem("klåda"), "klåd" );
	deepEqual( Stem("klådde"), "klådd" );
	deepEqual( Stem("klåfingrigt"), "klåfingr" );
	deepEqual( Stem("klömde"), "klömd" );
	deepEqual( Stem("klöv"), "klöv" );
	deepEqual( Stem("klöver"), "klöv" );
	deepEqual( Stem("klöverblommor"), "klöverblomm" );
	deepEqual( Stem("klövern"), "klöv" );
	deepEqual( Stem("km"), "km" );
	deepEqual( Stem("kna"), "kna" );
	deepEqual( Stem("knaben"), "knab" );
	deepEqual( Stem("knacka"), "knack" );
	deepEqual( Stem("knackade"), "knack" );
	deepEqual( Stem("knackandet"), "knack" );
	deepEqual( Stem("knackar"), "knack" );
	deepEqual( Stem("knackat"), "knack" );
	deepEqual( Stem("knackning"), "knackning" );
	deepEqual( Stem("knackningen"), "knackning" );
	deepEqual( Stem("knaka"), "knak" );
	deepEqual( Stem("knakade"), "knak" );
	deepEqual( Stem("knakande"), "knak" );
	deepEqual( Stem("knall"), "knall" );
	deepEqual( Stem("knallar"), "knall" );
	deepEqual( Stem("knap"), "knap" );
	deepEqual( Stem("knapp"), "knapp" );
	deepEqual( Stem("knappa"), "knapp" );
	deepEqual( Stem("knappar"), "knapp" );
	deepEqual( Stem("knapparna"), "knapp" );
	deepEqual( Stem("knapparne"), "knapp" );
	deepEqual( Stem("knappast"), "knapp" );
	deepEqual( Stem("knapphandlare"), "knapphandl" );
	deepEqual( Stem("knapphandlaren"), "knapphandl" );
	deepEqual( Stem("knapphål"), "knapphål" );
	deepEqual( Stem("knapphålet"), "knapphålet" );
	deepEqual( Stem("knappnål"), "knappnål" );
	deepEqual( Stem("knappt"), "knappt" );
	deepEqual( Stem("knappte"), "knappt" );
	deepEqual( Stem("knaprade"), "knapr" );
	deepEqual( Stem("knapt"), "knapt" );
	deepEqual( Stem("knarra"), "knarr" );
	deepEqual( Stem("knarrade"), "knarr" );
	deepEqual( Stem("knarrande"), "knarr" );
	deepEqual( Stem("knarrar"), "knarr" );
	deepEqual( Stem("knarrigt"), "knarr" );
	deepEqual( Stem("knarrningar"), "knarrning" );
	deepEqual( Stem("knarrningen"), "knarrning" );
	deepEqual( Stem("knaster"), "knast" );
	deepEqual( Stem("knastrade"), "knastr" );
	deepEqual( Stem("knastrande"), "knastr" );
	deepEqual( Stem("knekt"), "knekt" );
	deepEqual( Stem("knektar"), "knekt" );
	deepEqual( Stem("knep"), "knep" );
	deepEqual( Stem("knepe"), "knep" );
	deepEqual( Stem("knip"), "knip" );
	deepEqual( Stem("knipa"), "knip" );
	deepEqual( Stem("knipan"), "knipan" );
	deepEqual( Stem("knipande"), "knip" );
	deepEqual( Stem("kniper"), "knip" );
	deepEqual( Stem("knippa"), "knipp" );
	deepEqual( Stem("knippe"), "knipp" );
	deepEqual( Stem("kniv"), "kniv" );
	deepEqual( Stem("knivar"), "kniv" );
	deepEqual( Stem("knivblad"), "knivbl" );
	deepEqual( Stem("kniven"), "kniv" );
	deepEqual( Stem("kno"), "kno" );
	deepEqual( Stem("knogar"), "knog" );
	deepEqual( Stem("knogat"), "knog" );
	deepEqual( Stem("knopp"), "knopp" );
	deepEqual( Stem("knoppande"), "knopp" );
	deepEqual( Stem("knoppar"), "knopp" );
	deepEqual( Stem("knopparna"), "knopp" );
	deepEqual( Stem("knoppas"), "knopp" );
	deepEqual( Stem("knoppen"), "knopp" );
	deepEqual( Stem("knot"), "knot" );
	deepEqual( Stem("knota"), "knot" );
	deepEqual( Stem("knotade"), "knot" );
	deepEqual( Stem("knotig"), "knot" );
	deepEqual( Stem("knotiga"), "knot" );
	deepEqual( Stem("knotighet"), "knot" );
	deepEqual( Stem("knubbig"), "knubb" );
	deepEqual( Stem("knubbiga"), "knubb" );
	deepEqual( Stem("knuff"), "knuff" );
	deepEqual( Stem("knuffa"), "knuff" );
	deepEqual( Stem("knuffade"), "knuff" );
	deepEqual( Stem("knuffar"), "knuff" );
	deepEqual( Stem("knut"), "knut" );
	deepEqual( Stem("knutar"), "knut" );
	deepEqual( Stem("knutarne"), "knut" );
	deepEqual( Stem("knuten"), "knut" );
	deepEqual( Stem("knutet"), "knutet" );
	deepEqual( Stem("knutit"), "knutit" );
	deepEqual( Stem("knutna"), "knutn" );
	deepEqual( Stem("knyckar"), "knyck" );
	deepEqual( Stem("knyppeldynor"), "knyppeldyn" );
	deepEqual( Stem("knyst"), "knyst" );
	deepEqual( Stem("knysta"), "knyst" );
	deepEqual( Stem("knyta"), "knyt" );
	deepEqual( Stem("knytande"), "knyt" );
	deepEqual( Stem("knyte"), "knyt" );
	deepEqual( Stem("knyten"), "knyt" );
	deepEqual( Stem("knyter"), "knyt" );
	deepEqual( Stem("knä"), "knä" );
	deepEqual( Stem("knäbyxor"), "knäbyx" );
	deepEqual( Stem("knäböjande"), "knäböj" );
	deepEqual( Stem("knäböjde"), "knäböjd" );
	deepEqual( Stem("knäcka"), "knäck" );
	deepEqual( Stem("knäckebröd"), "knäckebröd" );
	deepEqual( Stem("knäckt"), "knäck" );
	deepEqual( Stem("knäckta"), "knäck" );
	deepEqual( Stem("knäckte"), "knäck" );
	deepEqual( Stem("knäet"), "knäet" );
	deepEqual( Stem("knäfveln"), "knäfveln" );
	deepEqual( Stem("knän"), "knän" );
	deepEqual( Stem("knäna"), "knän" );
	deepEqual( Stem("knäppa"), "knäpp" );
	deepEqual( Stem("knäppande"), "knäpp" );
	deepEqual( Stem("knäppen"), "knäpp" );
	deepEqual( Stem("knäppning"), "knäppning" );
	deepEqual( Stem("knäppt"), "knäppt" );
	deepEqual( Stem("knäppta"), "knäppt" );
	deepEqual( Stem("knäppte"), "knäppt" );
	deepEqual( Stem("knäskålar"), "knäskål" );
	deepEqual( Stem("knät"), "knät" );
	deepEqual( Stem("knäveln"), "knäveln" );
	deepEqual( Stem("knöt"), "knöt" );
	deepEqual( Stem("knötos"), "knöto" );
	deepEqual( Stem("ko"), "ko" );
	deepEqual( Stem("kocken"), "kock" );
	deepEqual( Stem("koffert"), "koffert" );
	deepEqual( Stem("koin"), "koin" );
	deepEqual( Stem("koja"), "koj" );
	deepEqual( Stem("kojen"), "koj" );
	deepEqual( Stem("koka"), "kok" );
	deepEqual( Stem("kokade"), "kok" );
	deepEqual( Stem("kokar"), "kok" );
	deepEqual( Stem("kokat"), "kok" );
	deepEqual( Stem("kokerier"), "kokeri" );
	deepEqual( Stem("kokerskan"), "kokerskan" );
	deepEqual( Stem("kokerskor"), "kokersk" );
	deepEqual( Stem("kokett"), "koket" );
	deepEqual( Stem("koketta"), "koket" );
	deepEqual( Stem("kokettera"), "koketter" );
	deepEqual( Stem("koketterar"), "koketter" );
	deepEqual( Stem("koketteri"), "koketteri" );
	deepEqual( Stem("kokhett"), "kokhet" );
	deepEqual( Stem("kokkonst"), "kokkonst" );
	deepEqual( Stem("kokt"), "kokt" );
	deepEqual( Stem("kokta"), "kokt" );
	deepEqual( Stem("kol"), "kol" );
	deepEqual( Stem("koleran"), "koleran" );
	deepEqual( Stem("kolglöden"), "kolglöd" );
	deepEqual( Stem("koliskt"), "kolisk" );
	deepEqual( Stem("kollega"), "kolleg" );
	deepEqual( Stem("kollegan"), "kollegan" );
	deepEqual( Stem("kolleger"), "kolleg" );
	deepEqual( Stem("kollin"), "kollin" );
	deepEqual( Stem("kollrig"), "kollr" );
	deepEqual( Stem("kolonnerna"), "kolon" );
	deepEqual( Stem("kolossal"), "kolossal" );
	deepEqual( Stem("kolossala"), "kolossal" );
	deepEqual( Stem("kolossale"), "kolossal" );
	deepEqual( Stem("kolossalt"), "kolossalt" );
	deepEqual( Stem("kolpor"), "kolp" );
	deepEqual( Stem("kolportera"), "kolporter" );
	deepEqual( Stem("kolportoren"), "kolportor" );
	deepEqual( Stem("kolportör"), "kolportör" );
	deepEqual( Stem("kolportören"), "kolportör" );
	deepEqual( Stem("kolportörens"), "kolportör" );
	deepEqual( Stem("kolportörer"), "kolportör" );
	deepEqual( Stem("kolsvart"), "kolsvart" );
	deepEqual( Stem("kolsvarta"), "kolsvart" );
	deepEqual( Stem("kolsyran"), "kolsyran" );
	deepEqual( Stem("kolt"), "kolt" );
	deepEqual( Stem("kolv"), "kolv" );
	deepEqual( Stem("kom"), "kom" );
	deepEqual( Stem("komediantfolk"), "komediantfolk" );
	deepEqual( Stem("komedien"), "komedi" );
	deepEqual( Stem("komedier"), "komedi" );
	deepEqual( Stem("komfortabelt"), "komfortabelt" );
	deepEqual( Stem("komisk"), "komisk" );
	deepEqual( Stem("komiskt"), "komisk" );
	deepEqual( Stem("komm"), "komm" );
	deepEqual( Stem("komma"), "komm" );
	deepEqual( Stem("kommande"), "komm" );
	deepEqual( Stem("kommandeval"), "kommandeval" );
	deepEqual( Stem("kommandostafven"), "kommandostafv" );
	deepEqual( Stem("kommandoton"), "kommandoton" );
	deepEqual( Stem("komme"), "komm" );
	deepEqual( Stem("kommen"), "komm" );
	deepEqual( Stem("kommendera"), "kommender" );
	deepEqual( Stem("kommenderad"), "kommender" );
	deepEqual( Stem("kommenderade"), "kommender" );
	deepEqual( Stem("kommenderande"), "kommender" );
	deepEqual( Stem("kommenterade"), "kommenter" );
	deepEqual( Stem("kommer"), "komm" );
	deepEqual( Stem("kommet"), "kommet" );
	deepEqual( Stem("komminister"), "komminist" );
	deepEqual( Stem("komministern"), "komminist" );
	deepEqual( Stem("komministersfru"), "komministersfru" );
	deepEqual( Stem("komministersänkan"), "komministersänkan" );
	deepEqual( Stem("komministeränkan"), "komministeränkan" );
	deepEqual( Stem("komministraturen"), "komministratur" );
	deepEqual( Stem("kommissionen"), "kommission" );
	deepEqual( Stem("kommit"), "kommit" );
	deepEqual( Stem("kommiuisterns"), "kommiuist" );
	deepEqual( Stem("kommo"), "kommo" );
	deepEqual( Stem("kommod"), "kommod" );
	deepEqual( Stem("kommoden"), "kommod" );
	deepEqual( Stem("kommunionen"), "kommunion" );
	deepEqual( Stem("komna"), "komn" );
	deepEqual( Stem("kompan"), "kompan" );
	deepEqual( Stem("kompaner"), "kompan" );
	deepEqual( Stem("kompani"), "kompani" );
	deepEqual( Stem("kompanjon"), "kompanjon" );
	deepEqual( Stem("kompanjonerna"), "kompanjon" );
	deepEqual( Stem("kompanjons"), "kompanjon" );
	deepEqual( Stem("kompanjonskap"), "kompanjonskap" );
	deepEqual( Stem("kompass"), "kompass" );
	deepEqual( Stem("kompetent"), "kompetent" );
	deepEqual( Stem("komplimang"), "komplimang" );
	deepEqual( Stem("komponerar"), "komponer" );
	deepEqual( Stem("kompositören"), "kompositör" );
	deepEqual( Stem("komrnit"), "komrnit" );
	deepEqual( Stem("kon"), "kon" );
	deepEqual( Stem("koncentrerar"), "koncentrer" );
	deepEqual( Stem("koncepterna"), "koncept" );
	deepEqual( Stem("konceptet"), "konceptet" );
	deepEqual( Stem("kondition"), "kondition" );
	deepEqual( Stem("konditori"), "konditori" );
	deepEqual( Stem("konditorier"), "konditori" );
	deepEqual( Stem("konditoriet"), "konditoriet" );
	deepEqual( Stem("konfekt"), "konfek" );
	deepEqual( Stem("konfirmand"), "konfirmand" );
	deepEqual( Stem("konfirmationsprästen"), "konfirmationspräst" );
	deepEqual( Stem("konfirmationssvärmeri"), "konfirmationssvärmeri" );
	deepEqual( Stem("konfirmerad"), "konfirmer" );
	deepEqual( Stem("konfirmerades"), "konfirmer" );
	deepEqual( Stem("konfysa"), "konfys" );
	deepEqual( Stem("kongl"), "kongl" );
	deepEqual( Stem("koniska"), "konisk" );
	deepEqual( Stem("konjak"), "konjak" );
	deepEqual( Stem("konjaken"), "konjak" );
	deepEqual( Stem("konjaksbuteljen"), "konjaksbutelj" );
	deepEqual( Stem("konjaksglas"), "konjaksgl" );
	deepEqual( Stem("konkurrens"), "konkurr" );
	deepEqual( Stem("konkurrensen"), "konkurrens" );
	deepEqual( Stem("konkurs"), "konkur" );
	deepEqual( Stem("konradsberg"), "konradsberg" );
	deepEqual( Stem("konseljen"), "konselj" );
	deepEqual( Stem("konsert"), "konsert" );
	deepEqual( Stem("konserter"), "konsert" );
	deepEqual( Stem("konservativa"), "konservativ" );
	deepEqual( Stem("konserver"), "konserv" );
	deepEqual( Stem("konservera"), "konserver" );
	deepEqual( Stem("konserverad"), "konserver" );
	deepEqual( Stem("konspirerande"), "konspirer" );
	deepEqual( Stem("konst"), "konst" );
	deepEqual( Stem("konstanta"), "konstant" );
	deepEqual( Stem("konstapeln"), "konstapeln" );
	deepEqual( Stem("konstatera"), "konstater" );
	deepEqual( Stem("konstaterade"), "konstater" );
	deepEqual( Stem("konstaterandet"), "konstater" );
	deepEqual( Stem("konstaterar"), "konstater" );
	deepEqual( Stem("konstaterat"), "konstater" );
	deepEqual( Stem("konsten"), "konst" );
	deepEqual( Stem("konstens"), "konst" );
	deepEqual( Stem("konster"), "konst" );
	deepEqual( Stem("konsterfarna"), "konsterf" );
	deepEqual( Stem("konsterna"), "konst" );
	deepEqual( Stem("konstgjord"), "konstgjord" );
	deepEqual( Stem("konstgjort"), "konstgjort" );
	deepEqual( Stem("konstgrepp"), "konstgrepp" );
	deepEqual( Stem("konstig"), "konst" );
	deepEqual( Stem("konstiga"), "konst" );
	deepEqual( Stem("konstigt"), "konst" );
	deepEqual( Stem("konstkännaremin"), "konstkännaremin" );
	deepEqual( Stem("konstkännedom"), "konstkännedom" );
	deepEqual( Stem("konstlad"), "konstl" );
	deepEqual( Stem("konstlade"), "konstl" );
	deepEqual( Stem("konstnär"), "konstnär" );
	deepEqual( Stem("konstnärer"), "konstnär" );
	deepEqual( Stem("konstnärligt"), "konstnär" );
	deepEqual( Stem("konstrikt"), "konstrik" );
	deepEqual( Stem("konstruera"), "konstruer" );
	deepEqual( Stem("konstruerade"), "konstruer" );
	deepEqual( Stem("konstruerat"), "konstruer" );
	deepEqual( Stem("konstruktioner"), "konstruktion" );
	deepEqual( Stem("konstverk"), "konstverk" );
	deepEqual( Stem("konstverket"), "konstverket" );
	deepEqual( Stem("konsul"), "konsul" );
	deepEqual( Stem("konsuler"), "konsul" );
	deepEqual( Stem("konsulinnans"), "konsulinnan" );
	deepEqual( Stem("konsulisydamerika"), "konsulisydamerik" );
	deepEqual( Stem("konsuln"), "konsuln" );
	deepEqual( Stem("konsulns"), "konsuln" );
	deepEqual( Stem("konsultationen"), "konsultation" );
	deepEqual( Stem("konsultera"), "konsulter" );
	deepEqual( Stem("kontakt"), "kontak" );
	deepEqual( Stem("kontant"), "kontant" );
	deepEqual( Stem("kontanta"), "kontant" );
	deepEqual( Stem("kontanter"), "kontant" );
	deepEqual( Stem("konterfej"), "konterfej" );
	deepEqual( Stem("kontinent"), "kontinent" );
	deepEqual( Stem("kontor"), "kont" );
	deepEqual( Stem("kontoret"), "kontoret" );
	deepEqual( Stem("kontrabesök"), "kontrabesök" );
	deepEqual( Stem("kontrahenterna"), "kontrahent" );
	deepEqual( Stem("kontrast"), "kontr" );
	deepEqual( Stem("kontraster"), "kontrast" );
	deepEqual( Stem("kontravisit"), "kontravisit" );
	deepEqual( Stem("kontrollörn"), "kontrollörn" );
	deepEqual( Stem("konturen"), "kontur" );
	deepEqual( Stem("konturerna"), "kontur" );
	deepEqual( Stem("konung"), "konung" );
	deepEqual( Stem("konungarnes"), "konungarn" );
	deepEqual( Stem("konungason"), "konungason" );
	deepEqual( Stem("konungen"), "konung" );
	deepEqual( Stem("konungens"), "konung" );
	deepEqual( Stem("konungs"), "konung" );
	deepEqual( Stem("konungsfågel"), "konungsfågel" );
	deepEqual( Stem("konventiklar"), "konventikl" );
	deepEqual( Stem("konventionellt"), "konventionellt" );
	deepEqual( Stem("konversation"), "konversation" );
	deepEqual( Stem("konversationstråden"), "konversationstråd" );
	deepEqual( Stem("konverserade"), "konverser" );
	deepEqual( Stem("konvulsioner"), "konvulsion" );
	deepEqual( Stem("konvulsivisk"), "konvulsivisk" );
	deepEqual( Stem("kop"), "kop" );
	deepEqual( Stem("kopia"), "kopi" );
	deepEqual( Stem("kopp"), "kopp" );
	deepEqual( Stem("koppar"), "kopp" );
	deepEqual( Stem("kopparflaska"), "kopparflask" );
	deepEqual( Stem("kopparfärgade"), "kopparfärg" );
	deepEqual( Stem("kopparn"), "kopparn" );
	deepEqual( Stem("kopparröd"), "kopparröd" );
	deepEqual( Stem("koppartälten"), "koppartält" );
	deepEqual( Stem("koppen"), "kopp" );
	deepEqual( Stem("kopplare"), "koppl" );
	deepEqual( Stem("kopplet"), "kopplet" );
	deepEqual( Stem("kopporna"), "kopp" );
	deepEqual( Stem("kor"), "kor" );
	deepEqual( Stem("koral"), "koral" );
	deepEqual( Stem("koralen"), "koral" );
	deepEqual( Stem("kordong"), "kordong" );
	deepEqual( Stem("korets"), "koret" );
	deepEqual( Stem("korg"), "korg" );
	deepEqual( Stem("korgar"), "korg" );
	deepEqual( Stem("korgen"), "korg" );
	deepEqual( Stem("korgossarna"), "korgoss" );
	deepEqual( Stem("korintierna"), "korinti" );
	deepEqual( Stem("korkas"), "kork" );
	deepEqual( Stem("korken"), "kork" );
	deepEqual( Stem("korkskrufven"), "korkskrufv" );
	deepEqual( Stem("korligen"), "kor" );
	deepEqual( Stem("korn"), "korn" );
	deepEqual( Stem("korna"), "korn" );
	deepEqual( Stem("kornas"), "korn" );
	deepEqual( Stem("kornblixtsky"), "kornblixtsky" );
	deepEqual( Stem("kornblå"), "kornblå" );
	deepEqual( Stem("kornen"), "korn" );
	deepEqual( Stem("kornhamn"), "kornhamn" );
	deepEqual( Stem("kornhamnstorg"), "kornhamnstorg" );
	deepEqual( Stem("kornknarr"), "kornknarr" );
	deepEqual( Stem("korp"), "korp" );
	deepEqual( Stem("korpen"), "korp" );
	deepEqual( Stem("korpulent"), "korpulent" );
	deepEqual( Stem("korrekt"), "korrek" );
	deepEqual( Stem("korrekta"), "korrek" );
	deepEqual( Stem("korridor"), "korrid" );
	deepEqual( Stem("korridoren"), "korridor" );
	deepEqual( Stem("korridorens"), "korridor" );
	deepEqual( Stem("korridorerna"), "korridor" );
	deepEqual( Stem("korrigeras"), "korriger" );
	deepEqual( Stem("kors"), "kor" );
	deepEqual( Stem("korsa"), "kors" );
	deepEqual( Stem("korsad"), "kors" );
	deepEqual( Stem("korsade"), "kors" );
	deepEqual( Stem("korsat"), "kors" );
	deepEqual( Stem("korsblick"), "korsblick" );
	deepEqual( Stem("korsdragande"), "korsdrag" );
	deepEqual( Stem("korsdragerskan"), "korsdragerskan" );
	deepEqual( Stem("korset"), "korset" );
	deepEqual( Stem("korsets"), "korset" );
	deepEqual( Stem("korsfästelse"), "korsfäst" );
	deepEqual( Stem("korsfästes"), "korsfäst" );
	deepEqual( Stem("korslagda"), "korslag" );
	deepEqual( Stem("korsmässa"), "korsmäss" );
	deepEqual( Stem("kort"), "kort" );
	deepEqual( Stem("korta"), "kort" );
	deepEqual( Stem("kortare"), "kort" );
	deepEqual( Stem("kortaste"), "kort" );
	deepEqual( Stem("korteligen"), "korte" );
	deepEqual( Stem("korten"), "kort" );
	deepEqual( Stem("kortet"), "kortet" );
	deepEqual( Stem("korthet"), "kort" );
	deepEqual( Stem("korthugget"), "korthugget" );
	deepEqual( Stem("korthuggna"), "korthuggn" );
	deepEqual( Stem("korthus"), "korthus" );
	deepEqual( Stem("kortklippta"), "kortklippt" );
	deepEqual( Stem("kortlapparna"), "kortlapp" );
	deepEqual( Stem("kortlek"), "kortlek" );
	deepEqual( Stem("kortlekar"), "kortlek" );
	deepEqual( Stem("kortligen"), "kort" );
	deepEqual( Stem("kortsidan"), "kortsidan" );
	deepEqual( Stem("kortspel"), "kortspel" );
	deepEqual( Stem("kortspelsbrodern"), "kortspelsbrod" );
	deepEqual( Stem("korus"), "korus" );
	deepEqual( Stem("korv"), "korv" );
	deepEqual( Stem("korvbeställningar"), "korvbeställning" );
	deepEqual( Stem("korvgörningen"), "korvgörning" );
	deepEqual( Stem("kos"), "kos" );
	deepEqual( Stem("kosan"), "kosan" );
	deepEqual( Stem("kossa"), "koss" );
	deepEqual( Stem("kost"), "kost" );
	deepEqual( Stem("kosta"), "kost" );
	deepEqual( Stem("kostade"), "kost" );
	deepEqual( Stem("kostar"), "kost" );
	deepEqual( Stem("kostat"), "kost" );
	deepEqual( Stem("kostbara"), "kostbar" );
	deepEqual( Stem("kostelig"), "koste" );
	deepEqual( Stem("koster"), "kost" );
	deepEqual( Stem("kostföraktare"), "kostförak" );
	deepEqual( Stem("kostlik"), "kostlik" );
	deepEqual( Stem("kostnad"), "kostn" );
	deepEqual( Stem("kostnaden"), "kostnad" );
	deepEqual( Stem("kostsammare"), "kostsamm" );
	deepEqual( Stem("kostym"), "kostym" );
	deepEqual( Stem("kostymerad"), "kostymer" );
	deepEqual( Stem("kotiljongsmärken"), "kotiljongsmärk" );
	deepEqual( Stem("kotlettben"), "kotlettb" );
	deepEqual( Stem("kotletten"), "kotlet" );
	deepEqual( Stem("kotletter"), "kotlet" );
	deepEqual( Stem("kotor"), "kot" );
	deepEqual( Stem("kott"), "kott" );
	deepEqual( Stem("kotteri"), "kotteri" );
	deepEqual( Stem("kottsliga"), "kotts" );
	deepEqual( Stem("kr"), "kr" );
	deepEqual( Stem("krabat"), "krab" );
	deepEqual( Stem("krabban"), "krabban" );
	deepEqual( Stem("krabbor"), "krabb" );
	deepEqual( Stem("krack"), "krack" );
	deepEqual( Stem("kraf"), "kraf" );
	deepEqual( Stem("kraft"), "kraft" );
	deepEqual( Stem("kraften"), "kraft" );
	deepEqual( Stem("krafter"), "kraft" );
	deepEqual( Stem("krafterna"), "kraft" );
	deepEqual( Stem("kraftfull"), "kraftfull" );
	deepEqual( Stem("kraftfulla"), "kraftfull" );
	deepEqual( Stem("kraftfullare"), "kraftfull" );
	deepEqual( Stem("kraftfullaste"), "kraftfull" );
	deepEqual( Stem("kraftfullhet"), "kraftfull" );
	deepEqual( Stem("kraftfullt"), "kraftfull" );
	deepEqual( Stem("kraftgrepp"), "kraftgrepp" );
	deepEqual( Stem("kraftig"), "kraft" );
	deepEqual( Stem("kraftiga"), "kraft" );
	deepEqual( Stem("kraftigare"), "kraft" );
	deepEqual( Stem("kraftigt"), "kraft" );
	deepEqual( Stem("kragar"), "krag" );
	deepEqual( Stem("krage"), "krag" );
	deepEqual( Stem("kragen"), "krag" );
	deepEqual( Stem("krake"), "krak" );
	deepEqual( Stem("krakornas"), "krak" );
	deepEqual( Stem("kram"), "kram" );
	deepEqual( Stem("krama"), "kram" );
	deepEqual( Stem("kramad"), "kram" );
	deepEqual( Stem("kramade"), "kram" );
	deepEqual( Stem("kramande"), "kram" );
	deepEqual( Stem("kramar"), "kram" );
	deepEqual( Stem("kramp"), "kramp" );
	deepEqual( Stem("krampaktig"), "krampakt" );
	deepEqual( Stem("krampaktigt"), "krampakt" );
	deepEqual( Stem("krampgråt"), "krampgråt" );
	deepEqual( Stem("krampor"), "kramp" );
	deepEqual( Stem("kramporna"), "kramp" );
	deepEqual( Stem("kranier"), "krani" );
	deepEqual( Stem("kranium"), "kranium" );
	deepEqual( Stem("krans"), "kran" );
	deepEqual( Stem("kransad"), "krans" );
	deepEqual( Stem("kransar"), "krans" );
	deepEqual( Stem("kransen"), "krans" );
	deepEqual( Stem("krasande"), "kras" );
	deepEqual( Stem("krasandet"), "kras" );
	deepEqual( Stem("krasch"), "krasch" );
	deepEqual( Stem("krassen"), "krass" );
	deepEqual( Stem("kratta"), "kratt" );
	deepEqual( Stem("krav"), "krav" );
	deepEqual( Stem("kredit"), "kredit" );
	deepEqual( Stem("krediten"), "kredit" );
	deepEqual( Stem("kreditorernas"), "kreditor" );
	deepEqual( Stem("kretin"), "kretin" );
	deepEqual( Stem("krets"), "kret" );
	deepEqual( Stem("kretsa"), "krets" );
	deepEqual( Stem("kretsade"), "krets" );
	deepEqual( Stem("kretsande"), "krets" );
	deepEqual( Stem("kretsar"), "krets" );
	deepEqual( Stem("kretsen"), "krets" );
	deepEqual( Stem("kretsgång"), "kretsgång" );
	deepEqual( Stem("kreverar"), "krever" );
	deepEqual( Stem("krig"), "krig" );
	deepEqual( Stem("krigare"), "krig" );
	deepEqual( Stem("krigaren"), "krig" );
	deepEqual( Stem("krigarsläkt"), "krigarsläk" );
	deepEqual( Stem("kriget"), "kriget" );
	deepEqual( Stem("krigets"), "kriget" );
	deepEqual( Stem("krigsklang"), "krigsklang" );
	deepEqual( Stem("krigslist"), "krigslist" );
	deepEqual( Stem("krigsmakten"), "krigsmak" );
	deepEqual( Stem("krigstillstånd"), "krigstillstånd" );
	deepEqual( Stem("krigstillståndet"), "krigstillståndet" );
	deepEqual( Stem("kriminalberättelser"), "kriminalberätt" );
	deepEqual( Stem("krimskrams"), "krimskram" );
	deepEqual( Stem("kring"), "kring" );
	deepEqual( Stem("kringbjudet"), "kringbjudet" );
	deepEqual( Stem("kringelkrokar"), "kringelkrok" );
	deepEqual( Stem("kringfarande"), "kringfar" );
	deepEqual( Stem("kringfladdrande"), "kringfladdr" );
	deepEqual( Stem("kringla"), "kringl" );
	deepEqual( Stem("kringränd"), "kringränd" );
	deepEqual( Stem("kringränna"), "kringrän" );
	deepEqual( Stem("kringspridarc"), "kringspridarc" );
	deepEqual( Stem("kringspridda"), "kringsprid" );
	deepEqual( Stem("kringvandrande"), "kringvandr" );
	deepEqual( Stem("krist"), "krist" );
	deepEqual( Stem("kristaller"), "kristall" );
	deepEqual( Stem("kristallklar"), "kristallkl" );
	deepEqual( Stem("kristallkronor"), "kristallkron" );
	deepEqual( Stem("kristallvas"), "kristallv" );
	deepEqual( Stem("kristen"), "krist" );
	deepEqual( Stem("kristendom"), "kristendom" );
	deepEqual( Stem("kristenhet"), "kristen" );
	deepEqual( Stem("kristenhets"), "kristenhet" );
	deepEqual( Stem("kristet"), "kristet" );
	deepEqual( Stem("kristi"), "kristi" );
	deepEqual( Stem("kristin"), "kristin" );
	deepEqual( Stem("kristina"), "kristin" );
	deepEqual( Stem("kristinas"), "kristin" );
	deepEqual( Stem("kristlig"), "krist" );
	deepEqual( Stem("kristliga"), "krist" );
	deepEqual( Stem("kristligt"), "krist" );
	deepEqual( Stem("kristna"), "kristn" );
	deepEqual( Stem("kristnade"), "kristn" );
	deepEqual( Stem("kristnas"), "kristn" );
	deepEqual( Stem("kristne"), "kristn" );
	deepEqual( Stem("kristningsnamnet"), "kristningsnamnet" );
	deepEqual( Stem("kristum"), "kristum" );
	deepEqual( Stem("kristusbarnet"), "kristusbarnet" );
	deepEqual( Stem("krit"), "krit" );
	deepEqual( Stem("kritade"), "krit" );
	deepEqual( Stem("kritbiten"), "kritbit" );
	deepEqual( Stem("kritblek"), "kritblek" );
	deepEqual( Stem("kritbleka"), "kritblek" );
	deepEqual( Stem("kritcirkeln"), "kritcirkeln" );
	deepEqual( Stem("krithvita"), "krithvit" );
	deepEqual( Stem("kritik"), "kritik" );
	deepEqual( Stem("kritiserande"), "kritiser" );
	deepEqual( Stem("kritisk"), "kritisk" );
	deepEqual( Stem("kritiska"), "kritisk" );
	deepEqual( Stem("kritvita"), "kritvit" );
	deepEqual( Stem("kritvitt"), "kritvit" );
	deepEqual( Stem("krokan"), "krokan" );
	deepEqual( Stem("krokar"), "krok" );
	deepEqual( Stem("krokarna"), "krok" );
	deepEqual( Stem("kroken"), "krok" );
	deepEqual( Stem("krokig"), "krok" );
	deepEqual( Stem("krokiga"), "krok" );
	deepEqual( Stem("krokna"), "krokn" );
	deepEqual( Stem("krokvägar"), "krokväg" );
	deepEqual( Stem("kromatiska"), "kromatisk" );
	deepEqual( Stem("krona"), "kron" );
	deepEqual( Stem("kronan"), "kronan" );
	deepEqual( Stem("kronans"), "kronan" );
	deepEqual( Stem("kronobåten"), "kronobåt" );
	deepEqual( Stem("kronor"), "kron" );
	deepEqual( Stem("kronprinsen"), "kronprins" );
	deepEqual( Stem("krontjufven"), "krontjufv" );
	deepEqual( Stem("kronärtskocka"), "kronärtskock" );
	deepEqual( Stem("kronärtskockan"), "kronärtskockan" );
	deepEqual( Stem("krop"), "krop" );
	deepEqual( Stem("kropp"), "kropp" );
	deepEqual( Stem("kroppar"), "kropp" );
	deepEqual( Stem("kroppen"), "kropp" );
	deepEqual( Stem("kroppens"), "kropp" );
	deepEqual( Stem("kropps"), "kropp" );
	deepEqual( Stem("kroppsarbetare"), "kroppsarbet" );
	deepEqual( Stem("kroppsbyggnad"), "kroppsbyggn" );
	deepEqual( Stem("kroppskrafter"), "kroppskraft" );
	deepEqual( Stem("kroppslig"), "kropps" );
	deepEqual( Stem("kroppsliga"), "kropps" );
	deepEqual( Stem("kroppsligen"), "kropps" );
	deepEqual( Stem("kroppsligt"), "kropps" );
	deepEqual( Stem("krossa"), "kross" );
	deepEqual( Stem("krossad"), "kross" );
	deepEqual( Stem("krossade"), "kross" );
	deepEqual( Stem("krossades"), "kross" );
	deepEqual( Stem("krossadt"), "krossad" );
	deepEqual( Stem("krossande"), "kross" );
	deepEqual( Stem("krossas"), "kross" );
	deepEqual( Stem("krossat"), "kross" );
	deepEqual( Stem("kruka"), "kruk" );
	deepEqual( Stem("krukan"), "krukan" );
	deepEqual( Stem("krukväxter"), "krukväxt" );
	deepEqual( Stem("krukväxterna"), "krukväxt" );
	deepEqual( Stem("krumbukter"), "krumbuk" );
	deepEqual( Stem("krumma"), "krumm" );
	deepEqual( Stem("krupit"), "krupit" );
	deepEqual( Stem("krus"), "krus" );
	deepEqual( Stem("krusa"), "krus" );
	deepEqual( Stem("krusad"), "krus" );
	deepEqual( Stem("krusade"), "krus" );
	deepEqual( Stem("krusades"), "krus" );
	deepEqual( Stem("krusar"), "krus" );
	deepEqual( Stem("krusiga"), "krus" );
	deepEqual( Stem("krusigt"), "krus" );
	deepEqual( Stem("krusning"), "krusning" );
	deepEqual( Stem("krut"), "krut" );
	deepEqual( Stem("krutet"), "krutet" );
	deepEqual( Stem("krutrök"), "krutrök" );
	deepEqual( Stem("krutsprängt"), "krutspräng" );
	deepEqual( Stem("kry"), "kry" );
	deepEqual( Stem("kryare"), "kryar" );
	deepEqual( Stem("kryat"), "kryat" );
	deepEqual( Stem("kryck"), "kryck" );
	deepEqual( Stem("kryckan"), "kryckan" );
	deepEqual( Stem("kryckor"), "kryck" );
	deepEqual( Stem("kryckorna"), "kryck" );
	deepEqual( Stem("kryddad"), "krydd" );
	deepEqual( Stem("kryddan"), "kryddan" );
	deepEqual( Stem("kryddat"), "krydd" );
	deepEqual( Stem("kryddbod"), "kryddbod" );
	deepEqual( Stem("kryddor"), "krydd" );
	deepEqual( Stem("krylbom"), "krylbom" );
	deepEqual( Stem("krymp"), "krymp" );
	deepEqual( Stem("krympa"), "krymp" );
	deepEqual( Stem("krymper"), "krymp" );
	deepEqual( Stem("krympling"), "krympling" );
	deepEqual( Stem("krymplingars"), "krymplingar" );
	deepEqual( Stem("krymplingen"), "krympling" );
	deepEqual( Stem("krympt"), "krympt" );
	deepEqual( Stem("krympte"), "krympt" );
	deepEqual( Stem("kryp"), "kryp" );
	deepEqual( Stem("krypa"), "kryp" );
	deepEqual( Stem("kryper"), "kryp" );
	deepEqual( Stem("krypskytten"), "krypskyt" );
	deepEqual( Stem("kryssade"), "kryss" );
	deepEqual( Stem("kryssar"), "kryss" );
	deepEqual( Stem("kryssat"), "kryss" );
	deepEqual( Stem("krysta"), "kryst" );
	deepEqual( Stem("kräfde"), "kräfd" );
	deepEqual( Stem("kräfta"), "kräft" );
	deepEqual( Stem("kräftan"), "kräftan" );
	deepEqual( Stem("kräftartad"), "kräftart" );
	deepEqual( Stem("kräftor"), "kräft" );
	deepEqual( Stem("kräftskal"), "kräftskal" );
	deepEqual( Stem("kräk"), "kräk" );
	deepEqual( Stem("kräkas"), "kräk" );
	deepEqual( Stem("kräken"), "kräk" );
	deepEqual( Stem("kräket"), "kräket" );
	deepEqual( Stem("kräktes"), "kräkt" );
	deepEqual( Stem("krälade"), "kräl" );
	deepEqual( Stem("krälande"), "kräl" );
	deepEqual( Stem("krämarborden"), "krämarbord" );
	deepEqual( Stem("krämpor"), "krämp" );
	deepEqual( Stem("krängde"), "kräng" );
	deepEqual( Stem("kränkta"), "kränk" );
	deepEqual( Stem("kräsen"), "kräs" );
	deepEqual( Stem("kräver"), "kräv" );
	deepEqual( Stem("kråka"), "kråk" );
	deepEqual( Stem("kråkans"), "kråkan" );
	deepEqual( Stem("kråkfot"), "kråkfot" );
	deepEqual( Stem("kråkfötter"), "kråkföt" );
	deepEqual( Stem("kråkor"), "kråk" );
	deepEqual( Stem("kråkorna"), "kråk" );
	deepEqual( Stem("kråkunge"), "kråkung" );
	deepEqual( Stem("kråmar"), "kråm" );
	deepEqual( Stem("krångel"), "krångel" );
	deepEqual( Stem("krångla"), "krångl" );
	deepEqual( Stem("krångliga"), "krång" );
	deepEqual( Stem("krångligare"), "krång" );
	deepEqual( Stem("kråsbandet"), "kråsb" );
	deepEqual( Stem("kråset"), "kråset" );
	deepEqual( Stem("kråsnål"), "kråsnål" );
	deepEqual( Stem("krök"), "krök" );
	deepEqual( Stem("kröka"), "krök" );
	deepEqual( Stem("krökar"), "krök" );
	deepEqual( Stem("krökning"), "krökning" );
	deepEqual( Stem("krökningar"), "krökning" );
	deepEqual( Stem("krökningen"), "krökning" );
	deepEqual( Stem("krökt"), "krökt" );
	deepEqual( Stem("krökta"), "krökt" );
	deepEqual( Stem("krökte"), "krökt" );
	deepEqual( Stem("krön"), "krön" );
	deepEqual( Stem("kröna"), "krön" );
	deepEqual( Stem("krönas"), "krön" );
	deepEqual( Stem("krönen"), "krön" );
	deepEqual( Stem("krönet"), "krönet" );
	deepEqual( Stem("krönika"), "krönik" );
	deepEqual( Stem("kröningsdag"), "kröningsdag" );
	deepEqual( Stem("kröningsmarschen"), "kröningsmarsch" );
	deepEqual( Stem("kröningsmynt"), "kröningsmynt" );
	deepEqual( Stem("kröp"), "kröp" );
	deepEqual( Stem("kröpo"), "kröpo" );
	deepEqual( Stem("ktocka"), "ktock" );
	deepEqual( Stem("kuappt"), "kuappt" );
	deepEqual( Stem("kuddar"), "kudd" );
	deepEqual( Stem("kuddarna"), "kudd" );
	deepEqual( Stem("kuddc"), "kuddc" );
	deepEqual( Stem("kudde"), "kudd" );
	deepEqual( Stem("kudden"), "kudd" );
	deepEqual( Stem("kuddvar"), "kuddv" );
	deepEqual( Stem("kufvades"), "kufv" );
	deepEqual( Stem("kufvadt"), "kufvad" );
	deepEqual( Stem("kujonera"), "kujoner" );
	deepEqual( Stem("kula"), "kul" );
	deepEqual( Stem("kulan"), "kulan" );
	deepEqual( Stem("kulen"), "kul" );
	deepEqual( Stem("kulet"), "kulet" );
	deepEqual( Stem("kuliss"), "kuliss" );
	deepEqual( Stem("kulissen"), "kuliss" );
	deepEqual( Stem("kulisserna"), "kuliss" );
	deepEqual( Stem("kull"), "kull" );
	deepEqual( Stem("kullar"), "kull" );
	deepEqual( Stem("kullarna"), "kull" );
	deepEqual( Stem("kullbåtarna"), "kullbåt" );
	deepEqual( Stem("kulle"), "kull" );
	deepEqual( Stem("kullen"), "kull" );
	deepEqual( Stem("kullerstenar"), "kullersten" );
	deepEqual( Stem("kullerstenarna"), "kullersten" );
	deepEqual( Stem("kullerstolen"), "kullerstol" );
	deepEqual( Stem("kullisserna"), "kulliss" );
	deepEqual( Stem("kullkastat"), "kullkast" );
	deepEqual( Stem("kullstjälpt"), "kullstjälpt" );
	deepEqual( Stem("kulma"), "kulm" );
	deepEqual( Stem("kulor"), "kul" );
	deepEqual( Stem("kulorna"), "kul" );
	deepEqual( Stem("kulturen"), "kultur" );
	deepEqual( Stem("kulörta"), "kulört" );
	deepEqual( Stem("kum"), "kum" );
	deepEqual( Stem("kumpanerna"), "kumpan" );
	deepEqual( Stem("kund"), "kund" );
	deepEqual( Stem("kundc"), "kundc" );
	deepEqual( Stem("kunde"), "kund" );
	deepEqual( Stem("kunder"), "kund" );
	deepEqual( Stem("kung"), "kung" );
	deepEqual( Stem("kungen"), "kung" );
	deepEqual( Stem("kungens"), "kung" );
	deepEqual( Stem("kungjorde"), "kungjord" );
	deepEqual( Stem("kungjordes"), "kungjord" );
	deepEqual( Stem("kungl"), "kungl" );
	deepEqual( Stem("kunglig"), "kung" );
	deepEqual( Stem("kungliga"), "kung" );
	deepEqual( Stem("kungsholmen"), "kungsholm" );
	deepEqual( Stem("kungsträdgården"), "kungsträdgård" );
	deepEqual( Stem("kungsängsliljor"), "kungsängslilj" );
	deepEqual( Stem("kunna"), "kunn" );
	deepEqual( Stem("kunnat"), "kunn" );
	deepEqual( Stem("kunnelse"), "kunn" );
	deepEqual( Stem("kunnig"), "kunn" );
	deepEqual( Stem("kunniga"), "kunn" );
	deepEqual( Stem("kunskap"), "kunskap" );
	deepEqual( Stem("kunskaper"), "kunskap" );
	deepEqual( Stem("kupeerna"), "kupe" );
	deepEqual( Stem("kupefönstren"), "kupefönstr" );
	deepEqual( Stem("kupiga"), "kup" );
	deepEqual( Stem("kur"), "kur" );
	deepEqual( Stem("kurage"), "kurag" );
	deepEqual( Stem("kurbits"), "kurbit" );
	deepEqual( Stem("kurbitsen"), "kurbits" );
	deepEqual( Stem("kurbitsmålning"), "kurbitsmålning" );
	deepEqual( Stem("kuren"), "kur" );
	deepEqual( Stem("kurerar"), "kurer" );
	deepEqual( Stem("kurlde"), "kurld" );
	deepEqual( Stem("kurma"), "kurm" );
	deepEqual( Stem("kurna"), "kurn" );
	deepEqual( Stem("kurort"), "kurort" );
	deepEqual( Stem("kurragömmalek"), "kurragömmalek" );
	deepEqual( Stem("kurre"), "kurr" );
	deepEqual( Stem("kurs"), "kur" );
	deepEqual( Stem("kursavgifter"), "kursavgift" );
	deepEqual( Stem("kursen"), "kurs" );
	deepEqual( Stem("kursiv"), "kursiv" );
	deepEqual( Stem("kursiva"), "kursiv" );
	deepEqual( Stem("kurtis"), "kurtis" );
	deepEqual( Stem("kurtisaner"), "kurtisan" );
	deepEqual( Stem("kurtisen"), "kurtis" );
	deepEqual( Stem("kurtiser"), "kurtis" );
	deepEqual( Stem("kurva"), "kurv" );
	deepEqual( Stem("kurvor"), "kurv" );
	deepEqual( Stem("kuscha"), "kusch" );
	deepEqual( Stem("kusin"), "kusin" );
	deepEqual( Stem("kusinens"), "kusin" );
	deepEqual( Stem("kusiner"), "kusin" );
	deepEqual( Stem("kusinerna"), "kusin" );
	deepEqual( Stem("kusinernas"), "kusin" );
	deepEqual( Stem("kusins"), "kusin" );
	deepEqual( Stem("kusken"), "kusk" );
	deepEqual( Stem("kusligt"), "kus" );
	deepEqual( Stem("kust"), "kust" );
	deepEqual( Stem("kustbevakare"), "kustbevak" );
	deepEqual( Stem("kustbevakaren"), "kustbevak" );
	deepEqual( Stem("kustbevakarens"), "kustbevak" );
	deepEqual( Stem("kusten"), "kust" );
	deepEqual( Stem("kustens"), "kust" );
	deepEqual( Stem("kustnaturen"), "kustnatur" );
	deepEqual( Stem("kuststaden"), "kuststad" );
	deepEqual( Stem("kusttjensteman"), "kusttjensteman" );
	deepEqual( Stem("kusttjenstemän"), "kusttjenstemän" );
	deepEqual( Stem("kustuppsyningsmannen"), "kustuppsyningsman" );
	deepEqual( Stem("kut"), "kut" );
	deepEqual( Stem("kutiga"), "kut" );
	deepEqual( Stem("kutter"), "kutt" );
	deepEqual( Stem("kuttra"), "kuttr" );
	deepEqual( Stem("kuva"), "kuv" );
	deepEqual( Stem("kuvad"), "kuv" );
	deepEqual( Stem("kuvade"), "kuv" );
	deepEqual( Stem("kuvert"), "kuvert" );
	deepEqual( Stem("kuvertet"), "kuvertet" );
	deepEqual( Stem("kvadrat"), "kvadr" );
	deepEqual( Stem("kvadraten"), "kvadrat" );
	deepEqual( Stem("kval"), "kval" );
	deepEqual( Stem("kvald"), "kvald" );
	deepEqual( Stem("kvalda"), "kvald" );
	deepEqual( Stem("kvalde"), "kvald" );
	deepEqual( Stem("kvaldes"), "kvald" );
	deepEqual( Stem("kvalfull"), "kvalfull" );
	deepEqual( Stem("kvalfullt"), "kvalfull" );
	deepEqual( Stem("kvalfylld"), "kvalfylld" );
	deepEqual( Stem("kvalitetsvagn"), "kvalitetsvagn" );
	deepEqual( Stem("kvall"), "kvall" );
	deepEqual( Stem("kvalm"), "kvalm" );
	deepEqual( Stem("kvalmig"), "kvalm" );
	deepEqual( Stem("kvalmiga"), "kvalm" );
	deepEqual( Stem("kvar"), "kvar" );
	deepEqual( Stem("kvarblevo"), "kvarblevo" );
	deepEqual( Stem("kvarglömd"), "kvarglömd" );
	deepEqual( Stem("kvarhålla"), "kvarhåll" );
	deepEqual( Stem("kvarhölls"), "kvarhöll" );
	deepEqual( Stem("kvarlevande"), "kvarlev" );
	deepEqual( Stem("kvarlevorna"), "kvarlev" );
	deepEqual( Stem("kvarlämna"), "kvarlämn" );
	deepEqual( Stem("kvarndrängen"), "kvarndräng" );
	deepEqual( Stem("kvarnen"), "kvarn" );
	deepEqual( Stem("kvarnforsen"), "kvarnfors" );
	deepEqual( Stem("kvarnhjul"), "kvarnhjul" );
	deepEqual( Stem("kvarnhjulshatten"), "kvarnhjulshat" );
	deepEqual( Stem("kvarnlekan"), "kvarnlekan" );
	deepEqual( Stem("kvarntorrt"), "kvarntorrt" );
	deepEqual( Stem("kvarnvinden"), "kvarnvind" );
	deepEqual( Stem("kvarsittande"), "kvarsit" );
	deepEqual( Stem("kvarsittare"), "kvarsit" );
	deepEqual( Stem("kvarstod"), "kvarstod" );
	deepEqual( Stem("kvarstå"), "kvarstå" );
	deepEqual( Stem("kvart"), "kvart" );
	deepEqual( Stem("kvartalet"), "kvartalet" );
	deepEqual( Stem("kvartalets"), "kvartalet" );
	deepEqual( Stem("kvartalsvis"), "kvartalsvis" );
	deepEqual( Stem("kvarteis"), "kvarteis" );
	deepEqual( Stem("kvarten"), "kvart" );
	deepEqual( Stem("kvarter"), "kvart" );
	deepEqual( Stem("kvarts"), "kvart" );
	deepEqual( Stem("kvartsbuteljer"), "kvartsbutelj" );
	deepEqual( Stem("kvasten"), "kvast" );
	deepEqual( Stem("kvastkäpp"), "kvastkäpp" );
	deepEqual( Stem("kvav"), "kvav" );
	deepEqual( Stem("kvava"), "kvav" );
	deepEqual( Stem("kvavt"), "kvavt" );
	deepEqual( Stem("kved"), "kved" );
	deepEqual( Stem("kvick"), "kvick" );
	deepEqual( Stem("kvicka"), "kvick" );
	deepEqual( Stem("kvickheter"), "kvick" );
	deepEqual( Stem("kvickna"), "kvickn" );
	deepEqual( Stem("kvickt"), "kvick" );
	deepEqual( Stem("kvida"), "kvid" );
	deepEqual( Stem("kvidande"), "kvid" );
	deepEqual( Stem("kvider"), "kvid" );
	deepEqual( Stem("kvill"), "kvill" );
	deepEqual( Stem("kvin"), "kvin" );
	deepEqual( Stem("kvinna"), "kvinn" );
	deepEqual( Stem("kvinnan"), "kvinnan" );
	deepEqual( Stem("kvinnans"), "kvinnan" );
	deepEqual( Stem("kvinnas"), "kvinn" );
	deepEqual( Stem("kvinnfolk"), "kvinnfolk" );
	deepEqual( Stem("kvinnfolken"), "kvinnfolk" );
	deepEqual( Stem("kvinnlig"), "kvinn" );
	deepEqual( Stem("kvinnliga"), "kvinn" );
	deepEqual( Stem("kvinnlighet"), "kvinn" );
	deepEqual( Stem("kvinnligt"), "kvinn" );
	deepEqual( Stem("kvinno"), "kvinno" );
	deepEqual( Stem("kvinnoarmar"), "kvinnoarm" );
	deepEqual( Stem("kvinnoblomma"), "kvinnoblomm" );
	deepEqual( Stem("kvinnoblomman"), "kvinnoblomman" );
	deepEqual( Stem("kvinnohuvuds"), "kvinnohuvud" );
	deepEqual( Stem("kvinnohår"), "kvinnohår" );
	deepEqual( Stem("kvinnokropp"), "kvinnokropp" );
	deepEqual( Stem("kvinnolist"), "kvinnolist" );
	deepEqual( Stem("kvinnoläkare"), "kvinnoläk" );
	deepEqual( Stem("kvinnoläkaren"), "kvinnoläk" );
	deepEqual( Stem("kvinnomakt"), "kvinnomak" );
	deepEqual( Stem("kvinnomänniska"), "kvinnomännisk" );
	deepEqual( Stem("kvinnor"), "kvinn" );
	deepEqual( Stem("kvinnorna"), "kvinn" );
	deepEqual( Stem("kvinnornas"), "kvinn" );
	deepEqual( Stem("kvinnorov"), "kvinnorov" );
	deepEqual( Stem("kvinnors"), "kvinnor" );
	deepEqual( Stem("kvinnoröst"), "kvinnoröst" );
	deepEqual( Stem("kvinnorösten"), "kvinnoröst" );
	deepEqual( Stem("kvinnosidan"), "kvinnosidan" );
	deepEqual( Stem("kvinnoskepelse"), "kvinnoskep" );
	deepEqual( Stem("kvinnovarelse"), "kvinnovar" );
	deepEqual( Stem("kvinnsperson"), "kvinnsperson" );
	deepEqual( Stem("kvist"), "kvist" );
	deepEqual( Stem("kvistar"), "kvist" );
	deepEqual( Stem("kvisten"), "kvist" );
	deepEqual( Stem("kvitt"), "kvitt" );
	deepEqual( Stem("kvitter"), "kvitt" );
	deepEqual( Stem("kvittera"), "kvitter" );
	deepEqual( Stem("kvitterat"), "kvitter" );
	deepEqual( Stem("kvittning"), "kvittning" );
	deepEqual( Stem("kvittra"), "kvittr" );
	deepEqual( Stem("kvittrade"), "kvittr" );
	deepEqual( Stem("kvittrande"), "kvittr" );
	deepEqual( Stem("kvittrat"), "kvittr" );
	deepEqual( Stem("kväd"), "kväd" );
	deepEqual( Stem("kväden"), "kväd" );
	deepEqual( Stem("kväkarsträng"), "kväkarsträng" );
	deepEqual( Stem("kväljningar"), "kväljning" );
	deepEqual( Stem("kväljningarna"), "kväljning" );
	deepEqual( Stem("kväll"), "kväll" );
	deepEqual( Stem("kvälla"), "kväll" );
	deepEqual( Stem("kvällar"), "kväll" );
	deepEqual( Stem("kvällarna"), "kväll" );
	deepEqual( Stem("kvälldags"), "kvälldag" );
	deepEqual( Stem("kvällen"), "kväll" );
	deepEqual( Stem("kvällens"), "kväll" );
	deepEqual( Stem("kvällshimlens"), "kvällshiml" );
	deepEqual( Stem("kvällsluften"), "kvällsluft" );
	deepEqual( Stem("kvällsolen"), "kvällsol" );
	deepEqual( Stem("kvällspromenad"), "kvällspromen" );
	deepEqual( Stem("kvällssky"), "kvällssky" );
	deepEqual( Stem("kvällstysta"), "kvällstyst" );
	deepEqual( Stem("kvällsvard"), "kvällsvard" );
	deepEqual( Stem("kvällsvarden"), "kvällsvard" );
	deepEqual( Stem("kväsa"), "kväs" );
	deepEqual( Stem("kväv"), "kväv" );
	deepEqual( Stem("kväva"), "kväv" );
	deepEqual( Stem("kvävande"), "kväv" );
	deepEqual( Stem("kvävas"), "kväv" );
	deepEqual( Stem("kvävd"), "kvävd" );
	deepEqual( Stem("kvävda"), "kvävd" );
	deepEqual( Stem("kvävde"), "kvävd" );
	deepEqual( Stem("kvävdes"), "kvävd" );
	deepEqual( Stem("kväve"), "kväv" );
	deepEqual( Stem("kvävs"), "kväv" );
	deepEqual( Stem("kvävt"), "kvävt" );
	deepEqual( Stem("kycklidgar"), "kycklidg" );
	deepEqual( Stem("kycklingar"), "kyckling" );
	deepEqual( Stem("kyffet"), "kyffet" );
	deepEqual( Stem("kyla"), "kyl" );
	deepEqual( Stem("kylde"), "kyld" );
	deepEqual( Stem("kylig"), "kyl" );
	deepEqual( Stem("kyliga"), "kyl" );
	deepEqual( Stem("kyligt"), "kyl" );
	deepEqual( Stem("kymmer"), "kymm" );
	deepEqual( Stem("kymriska"), "kymrisk" );
	deepEqual( Stem("kyparen"), "kyp" );
	deepEqual( Stem("kyrka"), "kyrk" );
	deepEqual( Stem("kyrkan"), "kyrkan" );
	deepEqual( Stem("kyrkans"), "kyrkan" );
	deepEqual( Stem("kyrkfolket"), "kyrkfolket" );
	deepEqual( Stem("kyrkklockan"), "kyrkklockan" );
	deepEqual( Stem("kyrkklockans"), "kyrkklockan" );
	deepEqual( Stem("kyrkobacken"), "kyrkoback" );
	deepEqual( Stem("kyrkofadern"), "kyrkofad" );
	deepEqual( Stem("kyrkogard"), "kyrkogard" );
	deepEqual( Stem("kyrkogardar"), "kyrkogard" );
	deepEqual( Stem("kyrkogård"), "kyrkogård" );
	deepEqual( Stem("kyrkogården"), "kyrkogård" );
	deepEqual( Stem("kyrkogårdens"), "kyrkogård" );
	deepEqual( Stem("kyrkogårdshymner"), "kyrkogårdshymn" );
	deepEqual( Stem("kyrkogårdshörnet"), "kyrkogårdshörnet" );
	deepEqual( Stem("kyrkogårdsmuren"), "kyrkogårdsmur" );
	deepEqual( Stem("kyrkogårdsporten"), "kyrkogårdsport" );
	deepEqual( Stem("kyrkoherde"), "kyrkoherd" );
	deepEqual( Stem("kyrkoherden"), "kyrkoherd" );
	deepEqual( Stem("kyrkomuren"), "kyrkomur" );
	deepEqual( Stem("kyrkomusiken"), "kyrkomusik" );
	deepEqual( Stem("kyrkor"), "kyrk" );
	deepEqual( Stem("kyrkorna"), "kyrk" );
	deepEqual( Stem("kyrkosångarne"), "kyrkosång" );
	deepEqual( Stem("kyrkovärdar"), "kyrkovärd" );
	deepEqual( Stem("kyrkplikt"), "kyrkplik" );
	deepEqual( Stem("kyrkporten"), "kyrkport" );
	deepEqual( Stem("kyrksilvret"), "kyrksilvret" );
	deepEqual( Stem("kyrkspiran"), "kyrkspiran" );
	deepEqual( Stem("kyrktaket"), "kyrktaket" );
	deepEqual( Stem("kyrktornet"), "kyrktornet" );
	deepEqual( Stem("kyrktrappan"), "kyrktrappan" );
	deepEqual( Stem("kyrktuppen"), "kyrktupp" );
	deepEqual( Stem("kyrkvallen"), "kyrkvall" );
	deepEqual( Stem("kysk"), "kysk" );
	deepEqual( Stem("kyska"), "kysk" );
	deepEqual( Stem("kyss"), "kyss" );
	deepEqual( Stem("kyssa"), "kyss" );
	deepEqual( Stem("kyssande"), "kyss" );
	deepEqual( Stem("kyssar"), "kyss" );
	deepEqual( Stem("kyssarna"), "kyss" );
	deepEqual( Stem("kyssas"), "kyss" );
	deepEqual( Stem("kyssen"), "kyss" );
	deepEqual( Stem("kysser"), "kyss" );
	deepEqual( Stem("kysst"), "kysst" );
	deepEqual( Stem("kysste"), "kysst" );
	deepEqual( Stem("kysstes"), "kysst" );
	deepEqual( Stem("käck"), "käck" );
	deepEqual( Stem("käcka"), "käck" );
	deepEqual( Stem("käckaste"), "käck" );
	deepEqual( Stem("käckt"), "käck" );
	deepEqual( Stem("käft"), "käft" );
	deepEqual( Stem("käften"), "käft" );
	deepEqual( Stem("kägla"), "kägl" );
	deepEqual( Stem("käk"), "käk" );
	deepEqual( Stem("käkar"), "käk" );
	deepEqual( Stem("käkarna"), "käk" );
	deepEqual( Stem("kälkborgare"), "kälkborg" );
	deepEqual( Stem("källa"), "käll" );
	deepEqual( Stem("källan"), "källan" );
	deepEqual( Stem("källare"), "käll" );
	deepEqual( Stem("källaren"), "käll" );
	deepEqual( Stem("källarglugg"), "källarglugg" );
	deepEqual( Stem("källarkund"), "källarkund" );
	deepEqual( Stem("källarmästaren"), "källarmäst" );
	deepEqual( Stem("källarmästarfrun"), "källarmästarfrun" );
	deepEqual( Stem("källarn"), "källarn" );
	deepEqual( Stem("källarsal"), "källarsal" );
	deepEqual( Stem("källas"), "käll" );
	deepEqual( Stem("källklar"), "källkl" );
	deepEqual( Stem("källorna"), "käll" );
	deepEqual( Stem("källrar"), "källr" );
	deepEqual( Stem("kälms"), "kälm" );
	deepEqual( Stem("kält"), "kält" );
	deepEqual( Stem("kämla"), "käml" );
	deepEqual( Stem("kämpa"), "kämp" );
	deepEqual( Stem("kämpade"), "kämp" );
	deepEqual( Stem("kämpande"), "kämp" );
	deepEqual( Stem("kämpat"), "kämp" );
	deepEqual( Stem("känbar"), "känb" );
	deepEqual( Stem("känbart"), "känbart" );
	deepEqual( Stem("känd"), "känd" );
	deepEqual( Stem("kända"), "känd" );
	deepEqual( Stem("kändc"), "kändc" );
	deepEqual( Stem("kände"), "känd" );
	deepEqual( Stem("kändes"), "känd" );
	deepEqual( Stem("kängor"), "käng" );
	deepEqual( Stem("känhända"), "känhänd" );
	deepEqual( Stem("känn"), "känn" );
	deepEqual( Stem("känna"), "känn" );
	deepEqual( Stem("kännareblick"), "kännareblick" );
	deepEqual( Stem("kännas"), "känn" );
	deepEqual( Stem("kännbar"), "kännb" );
	deepEqual( Stem("kännbart"), "kännbart" );
	deepEqual( Stem("känncr"), "känncr" );
	deepEqual( Stem("känne"), "känn" );
	deepEqual( Stem("kännedom"), "kännedom" );
	deepEqual( Stem("kännedomen"), "kännedom" );
	deepEqual( Stem("känner"), "känn" );
	deepEqual( Stem("kännes"), "känn" );
	deepEqual( Stem("kännetecken"), "känneteck" );
	deepEqual( Stem("känning"), "känning" );
	deepEqual( Stem("känningar"), "känning" );
	deepEqual( Stem("känns"), "känn" );
	deepEqual( Stem("käns"), "kän" );
	deepEqual( Stem("känsla"), "känsl" );
	deepEqual( Stem("känslan"), "känslan" );
	deepEqual( Stem("känslans"), "känslan" );
	deepEqual( Stem("känslig"), "käns" );
	deepEqual( Stem("känsliga"), "käns" );
	deepEqual( Stem("känslige"), "käns" );
	deepEqual( Stem("känsligt"), "käns" );
	deepEqual( Stem("känsloliv"), "känsloliv" );
	deepEqual( Stem("känslolös"), "känslolös" );
	deepEqual( Stem("känslolöst"), "känslolös" );
	deepEqual( Stem("känslor"), "känsl" );
	deepEqual( Stem("känslorna"), "känsl" );
	deepEqual( Stem("känslornas"), "känsl" );
	deepEqual( Stem("känslostormarna"), "känslostorm" );
	deepEqual( Stem("känslouttryck"), "känslouttryck" );
	deepEqual( Stem("känsö"), "känsö" );
	deepEqual( Stem("känt"), "känt" );
	deepEqual( Stem("känts"), "känt" );
	deepEqual( Stem("käpp"), "käpp" );
	deepEqual( Stem("käppen"), "käpp" );
	deepEqual( Stem("käppkryckan"), "käppkryckan" );
	deepEqual( Stem("kär"), "kär" );
	deepEqual( Stem("kära"), "kär" );
	deepEqual( Stem("kärare"), "kär" );
	deepEqual( Stem("käraste"), "kär" );
	deepEqual( Stem("kärastes"), "kärast" );
	deepEqual( Stem("käre"), "kär" );
	deepEqual( Stem("käresta"), "kärest" );
	deepEqual( Stem("kärestan"), "kärestan" );
	deepEqual( Stem("kärft"), "kärft" );
	deepEqual( Stem("käri"), "käri" );
	deepEqual( Stem("käril"), "käril" );
	deepEqual( Stem("käring"), "käring" );
	deepEqual( Stem("käringar"), "käring" );
	deepEqual( Stem("käringen"), "käring" );
	deepEqual( Stem("kärl"), "kärl" );
	deepEqual( Stem("kärlek"), "kärlek" );
	deepEqual( Stem("kärleken"), "kärlek" );
	deepEqual( Stem("kärlekens"), "kärlek" );
	deepEqual( Stem("kärleks"), "kärlek" );
	deepEqual( Stem("kärleksaffären"), "kärleksaffär" );
	deepEqual( Stem("kärleksakten"), "kärleksak" );
	deepEqual( Stem("kärleksbetygelser"), "kärleksbetyg" );
	deepEqual( Stem("kärleksbrev"), "kärleksbrev" );
	deepEqual( Stem("kärleksfull"), "kärleksfull" );
	deepEqual( Stem("kärleksfulla"), "kärleksfull" );
	deepEqual( Stem("kärleksfulle"), "kärleksfull" );
	deepEqual( Stem("kärleksfullt"), "kärleksfull" );
	deepEqual( Stem("kärleksförkiaringarna"), "kärleksförkiaring" );
	deepEqual( Stem("kärleksförklaring"), "kärleksförklaring" );
	deepEqual( Stem("kärleksförklaringarna"), "kärleksförklaring" );
	deepEqual( Stem("kärleksglam"), "kärleksglam" );
	deepEqual( Stem("kärlekshandel"), "kärlekshandel" );
	deepEqual( Stem("kärlekshistoria"), "kärlekshistori" );
	deepEqual( Stem("kärlekshistorien"), "kärlekshistori" );
	deepEqual( Stem("kärlekshistorier"), "kärlekshistori" );
	deepEqual( Stem("kärleksintrig"), "kärleksintr" );
	deepEqual( Stem("kärlekskamp"), "kärlekskamp" );
	deepEqual( Stem("kärleksmånen"), "kärleksmån" );
	deepEqual( Stem("kärleksmöten"), "kärleksmöt" );
	deepEqual( Stem("kärleksrika"), "kärleksrik" );
	deepEqual( Stem("kärleksromaner"), "kärleksroman" );
	deepEqual( Stem("kärleksscener"), "kärleksscen" );
	deepEqual( Stem("kärleksvarm"), "kärleksvarm" );
	deepEqual( Stem("kärleksveckornas"), "kärleksveck" );
	deepEqual( Stem("kärleksvind"), "kärleksvind" );
	deepEqual( Stem("kärlig"), "kär" );
	deepEqual( Stem("kärligt"), "kär" );
	deepEqual( Stem("kärna"), "kärn" );
	deepEqual( Stem("kärnan"), "kärnan" );
	deepEqual( Stem("kärnfulla"), "kärnfull" );
	deepEqual( Stem("kärnlöst"), "kärnlös" );
	deepEqual( Stem("kärnspråk"), "kärnspråk" );
	deepEqual( Stem("kärr"), "kärr" );
	deepEqual( Stem("kärra"), "kärr" );
	deepEqual( Stem("kärran"), "kärran" );
	deepEqual( Stem("kärren"), "kärr" );
	deepEqual( Stem("kärret"), "kärret" );
	deepEqual( Stem("kärt"), "kärt" );
	deepEqual( Stem("kärv"), "kärv" );
	deepEqual( Stem("kärva"), "kärv" );
	deepEqual( Stem("kärvt"), "kärvt" );
	deepEqual( Stem("kättja"), "kättj" );
	deepEqual( Stem("kättjan"), "kättjan" );
	deepEqual( Stem("kådiga"), "kåd" );
	deepEqual( Stem("kåkar"), "kåk" );
	deepEqual( Stem("kålen"), "kål" );
	deepEqual( Stem("kåpa"), "kåp" );
	deepEqual( Stem("kår"), "kår" );
	deepEqual( Stem("kåren"), "kår" );
	deepEqual( Stem("kåttjefulla"), "kåttjefull" );
	deepEqual( Stem("kökemästarn"), "kökemästarn" );
	deepEqual( Stem("köket"), "köket" );
	deepEqual( Stem("köks"), "kök" );
	deepEqual( Stem("köksbordet"), "köksbordet" );
	deepEqual( Stem("köksfönster"), "köksfönst" );
	deepEqual( Stem("köksgolvet"), "köksgolvet" );
	deepEqual( Stem("kökslampa"), "kökslamp" );
	deepEqual( Stem("köksskåp"), "köksskåp" );
	deepEqual( Stem("köksträdgården"), "köksträdgård" );
	deepEqual( Stem("köksväldet"), "köksväldet" );
	deepEqual( Stem("köld"), "köld" );
	deepEqual( Stem("kölden"), "köld" );
	deepEqual( Stem("köldrysning"), "köldrysning" );
	deepEqual( Stem("kön"), "kön" );
	deepEqual( Stem("könet"), "könet" );
	deepEqual( Stem("königsmarck"), "königsmarck" );
	deepEqual( Stem("königsmarcks"), "königsmarck" );
	deepEqual( Stem("könsdrift"), "könsdrift" );
	deepEqual( Stem("könsliga"), "köns" );
	deepEqual( Stem("köp"), "köp" );
	deepEqual( Stem("köpa"), "köp" );
	deepEqual( Stem("köpare"), "köp" );
	deepEqual( Stem("köparen"), "köp" );
	deepEqual( Stem("köparinnan"), "köparinnan" );
	deepEqual( Stem("köper"), "köp" );
	deepEqual( Stem("köpet"), "köpet" );
	deepEqual( Stem("köpman"), "köpman" );
	deepEqual( Stem("köpmangatan"), "köpmangatan" );
	deepEqual( Stem("köpmannen"), "köpman" );
	deepEqual( Stem("köpmanshus"), "köpmanshus" );
	deepEqual( Stem("köpt"), "köpt" );
	deepEqual( Stem("köpta"), "köpt" );
	deepEqual( Stem("köpte"), "köpt" );
	deepEqual( Stem("kör"), "kör" );
	deepEqual( Stem("köra"), "kör" );
	deepEqual( Stem("körande"), "kör" );
	deepEqual( Stem("köras"), "kör" );
	deepEqual( Stem("körbanan"), "körbanan" );
	deepEqual( Stem("körde"), "körd" );
	deepEqual( Stem("kördes"), "körd" );
	deepEqual( Stem("körjade"), "körj" );
	deepEqual( Stem("körsbär"), "körsbär" );
	deepEqual( Stem("körsbäret"), "körsbäret" );
	deepEqual( Stem("körsbärssaft"), "körsbärssaft" );
	deepEqual( Stem("körsbärssylt"), "körsbärssylt" );
	deepEqual( Stem("körsbärsträd"), "körsbärsträd" );
	deepEqual( Stem("körsbärsträden"), "körsbärsträd" );
	deepEqual( Stem("körsång"), "körsång" );
	deepEqual( Stem("kört"), "kört" );
	deepEqual( Stem("kött"), "kött" );
	deepEqual( Stem("köttben"), "köttb" );
	deepEqual( Stem("köttbullar"), "köttbull" );
	deepEqual( Stem("köttet"), "köttet" );
	deepEqual( Stem("köttets"), "köttet" );
	deepEqual( Stem("köttslig"), "kötts" );
	deepEqual( Stem("l"), "l" );
	deepEqual( Stem("la"), "la" );
	deepEqual( Stem("labyrint"), "labyrint" );
	deepEqual( Stem("lack"), "lack" );
	deepEqual( Stem("lackar"), "lack" );
	deepEqual( Stem("lackeringen"), "lackering" );
	deepEqual( Stem("lackkängornas"), "lackkäng" );
	deepEqual( Stem("lad"), "lad" );
	deepEqual( Stem("lada"), "lad" );
	deepEqual( Stem("ladc"), "ladc" );
	deepEqual( Stem("laddad"), "ladd" );
	deepEqual( Stem("lade"), "lad" );
	deepEqual( Stem("laderartade"), "laderart" );
	deepEqual( Stem("lades"), "lad" );
	deepEqual( Stem("ladugård"), "ladugård" );
	deepEqual( Stem("ladugården"), "ladugård" );
	deepEqual( Stem("ladugårdsförmannen"), "ladugårdsförman" );
	deepEqual( Stem("ladugårdslandet"), "ladugårdsl" );
	deepEqual( Stem("ladugårdspiga"), "ladugårdsp" );
	deepEqual( Stem("lafve"), "lafv" );
	deepEqual( Stem("lag"), "lag" );
	deepEqual( Stem("laga"), "lag" );
	deepEqual( Stem("lagad"), "lag" );
	deepEqual( Stem("lagade"), "lag" );
	deepEqual( Stem("lagar"), "lag" );
	deepEqual( Stem("lagarna"), "lag" );
	deepEqual( Stem("lagarne"), "lag" );
	deepEqual( Stem("lagas"), "lag" );
	deepEqual( Stem("lagat"), "lag" );
	deepEqual( Stem("lagd"), "lagd" );
	deepEqual( Stem("lagda"), "lagd" );
	deepEqual( Stem("lagen"), "lag" );
	deepEqual( Stem("lagenliga"), "lagen" );
	deepEqual( Stem("lagens"), "lag" );
	deepEqual( Stem("lager"), "lag" );
	deepEqual( Stem("lagerheim"), "lagerheim" );
	deepEqual( Stem("laget"), "laget" );
	deepEqual( Stem("laggargamla"), "laggargaml" );
	deepEqual( Stem("laglig"), "lag" );
	deepEqual( Stem("lagliga"), "lag" );
	deepEqual( Stem("lagman"), "lagman" );
	deepEqual( Stem("lagmannen"), "lagman" );
	deepEqual( Stem("lagmannens"), "lagman" );
	deepEqual( Stem("lago"), "lago" );
	deepEqual( Stem("lagom"), "lagom" );
	deepEqual( Stem("lagpara"), "lagpar" );
	deepEqual( Stem("lagra"), "lagr" );
	deepEqual( Stem("lagrade"), "lagr" );
	deepEqual( Stem("lagrar"), "lagr" );
	deepEqual( Stem("lagrat"), "lagr" );
	deepEqual( Stem("lagstiftare"), "lagstift" );
	deepEqual( Stem("lagsökningarna"), "lagsökning" );
	deepEqual( Stem("lagt"), "lagt" );
	deepEqual( Stem("lakan"), "lakan" );
	deepEqual( Stem("lakanen"), "lakan" );
	deepEqual( Stem("lakanet"), "lakanet" );
	deepEqual( Stem("lakej"), "lakej" );
	deepEqual( Stem("lakoniskt"), "lakonisk" );
	deepEqual( Stem("lallade"), "lall" );
	deepEqual( Stem("lam"), "lam" );
	deepEqual( Stem("lama"), "lam" );
	deepEqual( Stem("lamdet"), "lamdet" );
	deepEqual( Stem("lamm"), "lamm" );
	deepEqual( Stem("lammet"), "lammet" );
	deepEqual( Stem("lammungar"), "lammung" );
	deepEqual( Stem("lamna"), "lamn" );
	deepEqual( Stem("lamnade"), "lamn" );
	deepEqual( Stem("lamp"), "lamp" );
	deepEqual( Stem("lampa"), "lamp" );
	deepEqual( Stem("lampan"), "lampan" );
	deepEqual( Stem("lampetterna"), "lampet" );
	deepEqual( Stem("lampglaset"), "lampglaset" );
	deepEqual( Stem("lampor"), "lamp" );
	deepEqual( Stem("lamporna"), "lamp" );
	deepEqual( Stem("lampsken"), "lampsk" );
	deepEqual( Stem("lampskenet"), "lampskenet" );
	deepEqual( Stem("lamt"), "lamt" );
	deepEqual( Stem("lan"), "lan" );
	deepEqual( Stem("land"), "land" );
	deepEqual( Stem("landa"), "land" );
	deepEqual( Stem("landbacken"), "landback" );
	deepEqual( Stem("landborg"), "landborg" );
	deepEqual( Stem("landborgs"), "landborg" );
	deepEqual( Stem("lande"), "land" );
	deepEqual( Stem("landen"), "land" );
	deepEqual( Stem("lander"), "land" );
	deepEqual( Stem("landet"), "landet" );
	deepEqual( Stem("landets"), "landet" );
	deepEqual( Stem("landgången"), "landgång" );
	deepEqual( Stem("landning"), "landning" );
	deepEqual( Stem("lands"), "land" );
	deepEqual( Stem("landsbygden"), "landsbyg" );
	deepEqual( Stem("landsens"), "lands" );
	deepEqual( Stem("landsförsamlingar"), "landsförsamling" );
	deepEqual( Stem("landskap"), "landskap" );
	deepEqual( Stem("landskapet"), "landskapet" );
	deepEqual( Stem("landskyrkornas"), "landskyrk" );
	deepEqual( Stem("landsmål"), "landsmål" );
	deepEqual( Stem("landsorten"), "landsort" );
	deepEqual( Stem("landställe"), "landställ" );
	deepEqual( Stem("landsväg"), "landsväg" );
	deepEqual( Stem("landsvägen"), "landsväg" );
	deepEqual( Stem("landsändar"), "landsänd" );
	deepEqual( Stem("landtlig"), "landt" );
	deepEqual( Stem("landvägen"), "landväg" );
	deepEqual( Stem("lanet"), "lanet" );
	deepEqual( Stem("lang"), "lang" );
	deepEqual( Stem("langa"), "lang" );
	deepEqual( Stem("lange"), "lang" );
	deepEqual( Stem("langrandiga"), "langrand" );
	deepEqual( Stem("langre"), "langr" );
	deepEqual( Stem("langsamt"), "langsamt" );
	deepEqual( Stem("langt"), "lang" );
	deepEqual( Stem("langtade"), "lang" );
	deepEqual( Stem("langtan"), "langtan" );
	deepEqual( Stem("langtancle"), "langtancl" );
	deepEqual( Stem("langtifrån"), "langtifrån" );
	deepEqual( Stem("lantbrukare"), "lantbruk" );
	deepEqual( Stem("lanternorna"), "lantern" );
	deepEqual( Stem("lanthushåll"), "lanthushåll" );
	deepEqual( Stem("lantlig"), "lant" );
	deepEqual( Stem("lantliga"), "lant" );
	deepEqual( Stem("lantligaste"), "lant" );
	deepEqual( Stem("lantligt"), "lant" );
	deepEqual( Stem("lantluft"), "lantluft" );
	deepEqual( Stem("lantluften"), "lantluft" );
	deepEqual( Stem("lantnöje"), "lantnöj" );
	deepEqual( Stem("lantsejuren"), "lantsejur" );
	deepEqual( Stem("lantställe"), "lantställ" );
	deepEqual( Stem("lantstället"), "lantstället" );
	deepEqual( Stem("lanttöser"), "lanttös" );
	deepEqual( Stem("lapade"), "lap" );
	deepEqual( Stem("lapp"), "lapp" );
	deepEqual( Stem("lappar"), "lapp" );
	deepEqual( Stem("lappri"), "lappri" );
	deepEqual( Stem("lapprihändelse"), "lapprihänd" );
	deepEqual( Stem("lapprihändelsen"), "lapprihänd" );
	deepEqual( Stem("lara"), "lar" );
	deepEqual( Stem("larm"), "larm" );
	deepEqual( Stem("larmar"), "larm" );
	deepEqual( Stem("larmet"), "larmet" );
	deepEqual( Stem("larna"), "larn" );
	deepEqual( Stem("lars"), "lar" );
	deepEqual( Stem("larsdotter"), "larsdot" );
	deepEqual( Stem("larses"), "lars" );
	deepEqual( Stem("larsmesse"), "larsmess" );
	deepEqual( Stem("larsmessefärden"), "larsmessefärd" );
	deepEqual( Stem("larsson"), "larsson" );
	deepEqual( Stem("lart"), "lart" );
	deepEqual( Stem("larv"), "larv" );
	deepEqual( Stem("lass"), "lass" );
	deepEqual( Stem("lasset"), "lasset" );
	deepEqual( Stem("lassman"), "lassman" );
	deepEqual( Stem("lassmans"), "lassman" );
	deepEqual( Stem("last"), "last" );
	deepEqual( Stem("lastad"), "last" );
	deepEqual( Stem("lastade"), "last" );
	deepEqual( Stem("lastat"), "last" );
	deepEqual( Stem("lastdjur"), "lastdjur" );
	deepEqual( Stem("lasten"), "last" );
	deepEqual( Stem("laster"), "last" );
	deepEqual( Stem("lasterna"), "last" );
	deepEqual( Stem("lastfulle"), "lastfull" );
	deepEqual( Stem("lastning"), "lastning" );
	deepEqual( Stem("lat"), "lat" );
	deepEqual( Stem("lata"), "lat" );
	deepEqual( Stem("latin"), "latin" );
	deepEqual( Stem("latit"), "latit" );
	deepEqual( Stem("latt"), "latt" );
	deepEqual( Stem("latta"), "latt" );
	deepEqual( Stem("lattare"), "latt" );
	deepEqual( Stem("laura"), "laur" );
	deepEqual( Stem("laurentia"), "laurenti" );
	deepEqual( Stem("lave"), "lav" );
	deepEqual( Stem("lavoar"), "lavo" );
	deepEqual( Stem("lavoaren"), "lavo" );
	deepEqual( Stem("lavoarens"), "lavo" );
	deepEqual( Stem("lazulit"), "lazulit" );
	deepEqual( Stem("lbland"), "lbland" );
	deepEqual( Stem("ldälmandc"), "ldälmandc" );
	deepEqual( Stem("le"), "le" );
	deepEqual( Stem("led"), "led" );
	deepEqual( Stem("leda"), "led" );
	deepEqual( Stem("ledamot"), "ledamot" );
	deepEqual( Stem("ledande"), "led" );
	deepEqual( Stem("ledare"), "led" );
	deepEqual( Stem("ledas"), "led" );
	deepEqual( Stem("ledast"), "led" );
	deepEqual( Stem("ledband"), "ledband" );
	deepEqual( Stem("ledbandet"), "ledb" );
	deepEqual( Stem("ledd"), "ledd" );
	deepEqual( Stem("ledde"), "ledd" );
	deepEqual( Stem("leddes"), "ledd" );
	deepEqual( Stem("lede"), "led" );
	deepEqual( Stem("leder"), "led" );
	deepEqual( Stem("ledes"), "led" );
	deepEqual( Stem("ledig"), "led" );
	deepEqual( Stem("lediga"), "led" );
	deepEqual( Stem("ledighet"), "led" );
	deepEqual( Stem("ledigt"), "led" );
	deepEqual( Stem("ledmotivet"), "ledmotivet" );
	deepEqual( Stem("ledning"), "ledning" );
	deepEqual( Stem("ledo"), "ledo" );
	deepEqual( Stem("leds"), "led" );
	deepEqual( Stem("ledsagade"), "ledsag" );
	deepEqual( Stem("ledsagarinnans"), "ledsagarinnan" );
	deepEqual( Stem("ledsage"), "ledsag" );
	deepEqual( Stem("ledsam"), "ledsam" );
	deepEqual( Stem("ledsamhet"), "ledsam" );
	deepEqual( Stem("ledsamheter"), "ledsam" );
	deepEqual( Stem("ledsamma"), "ledsamm" );
	deepEqual( Stem("ledsamt"), "ledsamt" );
	deepEqual( Stem("ledsen"), "leds" );
	deepEqual( Stem("ledsna"), "ledsn" );
	deepEqual( Stem("ledsnad"), "ledsn" );
	deepEqual( Stem("ledsnade"), "ledsn" );
	deepEqual( Stem("ledsnaden"), "ledsnad" );
	deepEqual( Stem("ledsnar"), "ledsn" );
	deepEqual( Stem("ledsnat"), "ledsn" );
	deepEqual( Stem("ledt"), "ledt" );
	deepEqual( Stem("ledtråd"), "ledtråd" );
	deepEqual( Stem("ledtråden"), "ledtråd" );
	deepEqual( Stem("leendc"), "leendc" );
	deepEqual( Stem("leende"), "leend" );
	deepEqual( Stem("leenden"), "leend" );
	deepEqual( Stem("leendet"), "leendet" );
	deepEqual( Stem("lefde"), "lefd" );
	deepEqual( Stem("lefnad"), "lefn" );
	deepEqual( Stem("lefnadsfrisk"), "lefnadsfrisk" );
	deepEqual( Stem("lefnadslust"), "lefnadslust" );
	deepEqual( Stem("lefnadsomständigheter"), "lefnadsomständ" );
	deepEqual( Stem("lefnadssätt"), "lefnadssät" );
	deepEqual( Stem("lefva"), "lefv" );
	deepEqual( Stem("lefvande"), "lefv" );
	deepEqual( Stem("lefvat"), "lefv" );
	deepEqual( Stem("lefve"), "lefv" );
	deepEqual( Stem("lefver"), "lefv" );
	deepEqual( Stem("lefvernet"), "lefvernet" );
	deepEqual( Stem("legat"), "leg" );
	deepEqual( Stem("legenden"), "legend" );
	deepEqual( Stem("legendens"), "legend" );
	deepEqual( Stem("lejd"), "lejd" );
	deepEqual( Stem("lejon"), "lejon" );
	deepEqual( Stem("lejonet"), "lejonet" );
	deepEqual( Stem("lejonhona"), "lejonhon" );
	deepEqual( Stem("lek"), "lek" );
	deepEqual( Stem("leka"), "lek" );
	deepEqual( Stem("lekamde"), "lekamd" );
	deepEqual( Stem("lekamen"), "lekam" );
	deepEqual( Stem("lekamligen"), "lekam" );
	deepEqual( Stem("lekande"), "lek" );
	deepEqual( Stem("lekar"), "lek" );
	deepEqual( Stem("leken"), "lek" );
	deepEqual( Stem("leker"), "lek" );
	deepEqual( Stem("lekfullt"), "lekfull" );
	deepEqual( Stem("lekhus"), "lekhus" );
	deepEqual( Stem("lekkamrat"), "lekkamr" );
	deepEqual( Stem("lekman"), "lekman" );
	deepEqual( Stem("leks"), "lek" );
	deepEqual( Stem("leksaken"), "leksak" );
	deepEqual( Stem("leksakerna"), "leksak" );
	deepEqual( Stem("lekstugan"), "lekstugan" );
	deepEqual( Stem("lekt"), "lekt" );
	deepEqual( Stem("lekte"), "lekt" );
	deepEqual( Stem("lektion"), "lektion" );
	deepEqual( Stem("lektionen"), "lektion" );
	deepEqual( Stem("lektioner"), "lektion" );
	deepEqual( Stem("lektionerna"), "lektion" );
	deepEqual( Stem("lektionsbordet"), "lektionsbordet" );
	deepEqual( Stem("lektionsdagarna"), "lektionsdag" );
	deepEqual( Stem("lektor"), "lekt" );
	deepEqual( Stem("lektorn"), "lektorn" );
	deepEqual( Stem("lel"), "lel" );
	deepEqual( Stem("lem"), "lem" );
	deepEqual( Stem("lemlästade"), "lemläst" );
	deepEqual( Stem("lemmar"), "lemm" );
	deepEqual( Stem("lemmarna"), "lemm" );
	deepEqual( Stem("lemmarne"), "lemm" );
	deepEqual( Stem("lemmen"), "lemm" );
	deepEqual( Stem("lemna"), "lemn" );
	deepEqual( Stem("lemnad"), "lemn" );
	deepEqual( Stem("lemnade"), "lemn" );
	deepEqual( Stem("lemnadt"), "lemnad" );
	deepEqual( Stem("lemnar"), "lemn" );
	deepEqual( Stem("lemnat"), "lemn" );
	deepEqual( Stem("lemningar"), "lemning" );
	deepEqual( Stem("lemningarne"), "lemning" );
	deepEqual( Stem("len"), "len" );
	deepEqual( Stem("lena"), "len" );
	deepEqual( Stem("lenar"), "len" );
	deepEqual( Stem("lenare"), "len" );
	deepEqual( Stem("lenas"), "len" );
	deepEqual( Stem("lenaste"), "len" );
	deepEqual( Stem("lennarby"), "lennarby" );
	deepEqual( Stem("lent"), "lent" );
	deepEqual( Stem("leopold"), "leopold" );
	deepEqual( Stem("ler"), "ler" );
	deepEqual( Stem("leran"), "leran" );
	deepEqual( Stem("lerkrus"), "lerkrus" );
	deepEqual( Stem("les"), "les" );
	deepEqual( Stem("let"), "let" );
	deepEqual( Stem("leta"), "let" );
	deepEqual( Stem("letade"), "let" );
	deepEqual( Stem("letande"), "let" );
	deepEqual( Stem("letar"), "let" );
	deepEqual( Stem("letas"), "let" );
	deepEqual( Stem("letat"), "let" );
	deepEqual( Stem("lett"), "lett" );
	deepEqual( Stem("letty"), "letty" );
	deepEqual( Stem("leur"), "leur" );
	deepEqual( Stem("leurs"), "leur" );
	deepEqual( Stem("leva"), "lev" );
	deepEqual( Stem("levamde"), "levamd" );
	deepEqual( Stem("levande"), "lev" );
	deepEqual( Stem("levandes"), "lev" );
	deepEqual( Stem("levas"), "lev" );
	deepEqual( Stem("levat"), "lev" );
	deepEqual( Stem("levde"), "levd" );
	deepEqual( Stem("levdes"), "levd" );
	deepEqual( Stem("levdl"), "levdl" );
	deepEqual( Stem("levelse"), "lev" );
	deepEqual( Stem("lever"), "lev" );
	deepEqual( Stem("leverera"), "leverer" );
	deepEqual( Stem("leverne"), "levern" );
	deepEqual( Stem("levin"), "levin" );
	deepEqual( Stem("levins"), "levin" );
	deepEqual( Stem("levnad"), "levn" );
	deepEqual( Stem("levnads"), "levnad" );
	deepEqual( Stem("levnadsfilosofi"), "levnadsfilosofi" );
	deepEqual( Stem("levnadsfriska"), "levnadsfrisk" );
	deepEqual( Stem("levnadsförhållanden"), "levnadsförhåll" );
	deepEqual( Stem("levnadsglad"), "levnadsgl" );
	deepEqual( Stem("levnadsglade"), "levnadsgl" );
	deepEqual( Stem("levnadssättet"), "levnadssättet" );
	deepEqual( Stem("lewinson"), "lewinson" );
	deepEqual( Stem("lexa"), "lex" );
	deepEqual( Stem("lexan"), "lexan" );
	deepEqual( Stem("lexor"), "lex" );
	deepEqual( Stem("lgol"), "lgol" );
	deepEqual( Stem("lgon"), "lgon" );
	deepEqual( Stem("lhl"), "lhl" );
	deepEqual( Stem("li"), "li" );
	deepEqual( Stem("liber"), "lib" );
	deepEqual( Stem("liberalare"), "liberal" );
	deepEqual( Stem("liberale"), "liberal" );
	deepEqual( Stem("liberalt"), "liberalt" );
	deepEqual( Stem("liberi"), "liberi" );
	deepEqual( Stem("licentiat"), "licenti" );
	deepEqual( Stem("licentiaten"), "licentiat" );
	deepEqual( Stem("licka"), "lick" );
	deepEqual( Stem("lickan"), "lickan" );
	deepEqual( Stem("lid"), "lid" );
	deepEqual( Stem("lida"), "lid" );
	deepEqual( Stem("lidande"), "lid" );
	deepEqual( Stem("lidanden"), "lid" );
	deepEqual( Stem("lidandes"), "lid" );
	deepEqual( Stem("lidandet"), "lid" );
	deepEqual( Stem("lidandets"), "lidandet" );
	deepEqual( Stem("lidelse"), "lid" );
	deepEqual( Stem("lidelsefull"), "lidelsefull" );
	deepEqual( Stem("lidelsefullt"), "lidelsefull" );
	deepEqual( Stem("lidelsen"), "lid" );
	deepEqual( Stem("lidelsens"), "lid" );
	deepEqual( Stem("lidelser"), "lid" );
	deepEqual( Stem("liden"), "lid" );
	deepEqual( Stem("lider"), "lid" );
	deepEqual( Stem("liderlig"), "lider" );
	deepEqual( Stem("liderliga"), "lider" );
	deepEqual( Stem("lidit"), "lidit" );
	deepEqual( Stem("lidna"), "lidn" );
	deepEqual( Stem("lie"), "lie" );
	deepEqual( Stem("lieder"), "lied" );
	deepEqual( Stem("lien"), "lien" );
	deepEqual( Stem("lif"), "lif" );
	deepEqual( Stem("lifhanken"), "lifhank" );
	deepEqual( Stem("liflig"), "lif" );
	deepEqual( Stem("lifliga"), "lif" );
	deepEqual( Stem("lifligt"), "lif" );
	deepEqual( Stem("liflös"), "liflös" );
	deepEqual( Stem("liflösa"), "liflös" );
	deepEqual( Stem("liflöst"), "liflös" );
	deepEqual( Stem("lifnärde"), "lifnärd" );
	deepEqual( Stem("lifs"), "lif" );
	deepEqual( Stem("lifsblomma"), "lifsblomm" );
	deepEqual( Stem("lifsfara"), "lifsfar" );
	deepEqual( Stem("lifsfulla"), "lifsfull" );
	deepEqual( Stem("lifsgnistan"), "lifsgnistan" );
	deepEqual( Stem("lifskraft"), "lifskraft" );
	deepEqual( Stem("lifslefvande"), "lifslefv" );
	deepEqual( Stem("lifstid"), "lifstid" );
	deepEqual( Stem("lifstiden"), "lifstid" );
	deepEqual( Stem("lifsuppgift"), "lifsuppgift" );
	deepEqual( Stem("lifva"), "lifv" );
	deepEqual( Stem("lifvad"), "lifv" );
	deepEqual( Stem("lifvade"), "lifv" );
	deepEqual( Stem("lifvar"), "lifv" );
	deepEqual( Stem("lifvas"), "lifv" );
	deepEqual( Stem("lifvet"), "lifvet" );
	deepEqual( Stem("lifvets"), "lifvet" );
	deepEqual( Stem("lig"), "lig" );
	deepEqual( Stem("liga"), "lig" );
	deepEqual( Stem("ligare"), "lig" );
	deepEqual( Stem("lige"), "lig" );
	deepEqual( Stem("ligen"), "lig" );
	deepEqual( Stem("ligg"), "ligg" );
	deepEqual( Stem("ligga"), "ligg" );
	deepEqual( Stem("liggande"), "ligg" );
	deepEqual( Stem("ligger"), "ligg" );
	deepEqual( Stem("lighet"), "lig" );
	deepEqual( Stem("ligheten"), "lig" );
	deepEqual( Stem("lighetens"), "lig" );
	deepEqual( Stem("lighetsfulla"), "lighetsfull" );
	deepEqual( Stem("ligt"), "ligt" );
	deepEqual( Stem("lihsom"), "lihsom" );
	deepEqual( Stem("liit"), "liit" );
	deepEqual( Stem("lik"), "lik" );
	deepEqual( Stem("lika"), "lik" );
	deepEqual( Stem("likadan"), "likadan" );
	deepEqual( Stem("likadana"), "likadan" );
	deepEqual( Stem("likadant"), "likadant" );
	deepEqual( Stem("likadån"), "likadån" );
	deepEqual( Stem("likafullt"), "likafull" );
	deepEqual( Stem("likar"), "lik" );
	deepEqual( Stem("likartade"), "likart" );
	deepEqual( Stem("likartat"), "likart" );
	deepEqual( Stem("likasom"), "likasom" );
	deepEqual( Stem("likaså"), "likaså" );
	deepEqual( Stem("likaval"), "likaval" );
	deepEqual( Stem("likaväl"), "likaväl" );
	deepEqual( Stem("like"), "lik" );
	deepEqual( Stem("liken"), "lik" );
	deepEqual( Stem("liket"), "liket" );
	deepEqual( Stem("likgiltig"), "likgilt" );
	deepEqual( Stem("likgiltiga"), "likgilt" );
	deepEqual( Stem("likgiltigaste"), "likgilt" );
	deepEqual( Stem("likgiltighet"), "likgilt" );
	deepEqual( Stem("likgiltigheten"), "likgilt" );
	deepEqual( Stem("likgiltigt"), "likgilt" );
	deepEqual( Stem("likhet"), "lik" );
	deepEqual( Stem("likheten"), "lik" );
	deepEqual( Stem("liklukt"), "likluk" );
	deepEqual( Stem("likluktande"), "likluk" );
	deepEqual( Stem("likna"), "likn" );
	deepEqual( Stem("liknade"), "likn" );
	deepEqual( Stem("liknande"), "likn" );
	deepEqual( Stem("liknar"), "likn" );
	deepEqual( Stem("liknas"), "likn" );
	deepEqual( Stem("liknelsen"), "likn" );
	deepEqual( Stem("liknöjd"), "liknöjd" );
	deepEqual( Stem("liknöjdhet"), "liknöjd" );
	deepEqual( Stem("likprocessioner"), "likprocession" );
	deepEqual( Stem("liksom"), "liksom" );
	deepEqual( Stem("likså"), "likså" );
	deepEqual( Stem("liksånger"), "liksång" );
	deepEqual( Stem("likt"), "likt" );
	deepEqual( Stem("liktidigt"), "liktid" );
	deepEqual( Stem("liktydig"), "liktyd" );
	deepEqual( Stem("liktydigt"), "liktyd" );
	deepEqual( Stem("likvidera"), "likvider" );
	deepEqual( Stem("likviderade"), "likvider" );
	deepEqual( Stem("likviderande"), "likvider" );
	deepEqual( Stem("likvisst"), "likvisst" );
	deepEqual( Stem("likväl"), "likväl" );
	deepEqual( Stem("likör"), "likör" );
	deepEqual( Stem("lilen"), "lil" );
	deepEqual( Stem("liliamello"), "liliamello" );
	deepEqual( Stem("lilian"), "lilian" );
	deepEqual( Stem("lilja"), "lilj" );
	deepEqual( Stem("liljan"), "liljan" );
	deepEqual( Stem("liljekonvalje"), "liljekonvalj" );
	deepEqual( Stem("liljekonvaljerna"), "liljekonvalj" );
	deepEqual( Stem("liljespön"), "liljespön" );
	deepEqual( Stem("liljevret"), "liljevret" );
	deepEqual( Stem("liljkonvalj"), "liljkonvalj" );
	deepEqual( Stem("liljor"), "lilj" );
	deepEqual( Stem("lill"), "lill" );
	deepEqual( Stem("lilla"), "lill" );
	deepEqual( Stem("lillan"), "lillan" );
	deepEqual( Stem("lille"), "lill" );
	deepEqual( Stem("lilliehöök"), "lilliehöök" );
	deepEqual( Stem("limmeplagg"), "limmeplagg" );
	deepEqual( Stem("lin"), "lin" );
	deepEqual( Stem("lina"), "lin" );
	deepEqual( Stem("linan"), "linan" );
	deepEqual( Stem("lind"), "lind" );
	deepEqual( Stem("lindad"), "lind" );
	deepEqual( Stem("lindade"), "lind" );
	deepEqual( Stem("lindansartruppen"), "lindansartrupp" );
	deepEqual( Stem("lindar"), "lind" );
	deepEqual( Stem("lindarna"), "lind" );
	deepEqual( Stem("lindat"), "lind" );
	deepEqual( Stem("linde"), "lind" );
	deepEqual( Stem("linden"), "lind" );
	deepEqual( Stem("linderots"), "linderot" );
	deepEqual( Stem("lindfelt"), "lindfelt" );
	deepEqual( Stem("lindfelts"), "lindfelt" );
	deepEqual( Stem("lindgren"), "lindgr" );
	deepEqual( Stem("lindgrens"), "lindgr" );
	deepEqual( Stem("lindman"), "lindman" );
	deepEqual( Stem("lindra"), "lindr" );
	deepEqual( Stem("lindrade"), "lindr" );
	deepEqual( Stem("lindrat"), "lindr" );
	deepEqual( Stem("lindrig"), "lindr" );
	deepEqual( Stem("lindriga"), "lindr" );
	deepEqual( Stem("lindrigare"), "lindr" );
	deepEqual( Stem("lindrigast"), "lindr" );
	deepEqual( Stem("lindrigaste"), "lindr" );
	deepEqual( Stem("lindrigt"), "lindr" );
	deepEqual( Stem("lindring"), "lindring" );
	deepEqual( Stem("lindträdet"), "lindträdet" );
	deepEqual( Stem("linet"), "linet" );
	deepEqual( Stem("linets"), "linet" );
	deepEqual( Stem("linfrö"), "linfrö" );
	deepEqual( Stem("lingen"), "ling" );
	deepEqual( Stem("lingon"), "lingon" );
	deepEqual( Stem("lingonris"), "lingonris" );
	deepEqual( Stem("lingonriset"), "lingonriset" );
	deepEqual( Stem("lingult"), "lingult" );
	deepEqual( Stem("linje"), "linj" );
	deepEqual( Stem("linjer"), "linj" );
	deepEqual( Stem("linjerna"), "linj" );
	deepEqual( Stem("linjespel"), "linjespel" );
	deepEqual( Stem("link"), "link" );
	deepEqual( Stem("linkade"), "link" );
	deepEqual( Stem("linne"), "linn" );
	deepEqual( Stem("linnea"), "linne" );
	deepEqual( Stem("linneas"), "linne" );
	deepEqual( Stem("linnel"), "linnel" );
	deepEqual( Stem("linneplagg"), "linneplagg" );
	deepEqual( Stem("linnes"), "linn" );
	deepEqual( Stem("linnet"), "linnet" );
	deepEqual( Stem("linoleummattor"), "linoleummat" );
	deepEqual( Stem("linongsklänningen"), "linongsklänning" );
	deepEqual( Stem("linsädet"), "linsädet" );
	deepEqual( Stem("lintyget"), "lintyget" );
	deepEqual( Stem("lionardos"), "lionardo" );
	deepEqual( Stem("lipa"), "lip" );
	deepEqual( Stem("lipade"), "lip" );
	deepEqual( Stem("liqviden"), "liqvid" );
	deepEqual( Stem("lisa"), "lis" );
	deepEqual( Stem("lisan"), "lisan" );
	deepEqual( Stem("lisas"), "lis" );
	deepEqual( Stem("lisma"), "lism" );
	deepEqual( Stem("lismande"), "lism" );
	deepEqual( Stem("lismar"), "lism" );
	deepEqual( Stem("list"), "list" );
	deepEqual( Stem("listen"), "list" );
	deepEqual( Stem("lister"), "list" );
	deepEqual( Stem("listig"), "list" );
	deepEqual( Stem("listiga"), "list" );
	deepEqual( Stem("listige"), "list" );
	deepEqual( Stem("listigt"), "list" );
	deepEqual( Stem("lit"), "lit" );
	deepEqual( Stem("lita"), "lit" );
	deepEqual( Stem("litanior"), "litani" );
	deepEqual( Stem("litar"), "lit" );
	deepEqual( Stem("litat"), "lit" );
	deepEqual( Stem("litct"), "litct" );
	deepEqual( Stem("lite"), "lit" );
	deepEqual( Stem("litea"), "lite" );
	deepEqual( Stem("liten"), "lit" );
	deepEqual( Stem("litet"), "litet" );
	deepEqual( Stem("litograferad"), "litografer" );
	deepEqual( Stem("littat"), "litt" );
	deepEqual( Stem("litteratur"), "litteratur" );
	deepEqual( Stem("litteraturen"), "litteratur" );
	deepEqual( Stem("litterära"), "litterär" );
	deepEqual( Stem("liua"), "liua" );
	deepEqual( Stem("liudfeldt"), "liudfeld" );
	deepEqual( Stem("liv"), "liv" );
	deepEqual( Stem("livad"), "liv" );
	deepEqual( Stem("livande"), "liv" );
	deepEqual( Stem("livct"), "livct" );
	deepEqual( Stem("livee"), "live" );
	deepEqual( Stem("liver"), "liv" );
	deepEqual( Stem("livet"), "livet" );
	deepEqual( Stem("livets"), "livet" );
	deepEqual( Stem("livförsäkringspremien"), "livförsäkringspremi" );
	deepEqual( Stem("livgardist"), "livgardist" );
	deepEqual( Stem("livkusk"), "livkusk" );
	deepEqual( Stem("livlig"), "liv" );
	deepEqual( Stem("livliga"), "liv" );
	deepEqual( Stem("livligare"), "liv" );
	deepEqual( Stem("livligaste"), "liv" );
	deepEqual( Stem("livlige"), "liv" );
	deepEqual( Stem("livlighet"), "liv" );
	deepEqual( Stem("livligt"), "liv" );
	deepEqual( Stem("livländska"), "livländsk" );
	deepEqual( Stem("livlös"), "livlös" );
	deepEqual( Stem("livmoderns"), "livmod" );
	deepEqual( Stem("livmodersprutor"), "livmodersprut" );
	deepEqual( Stem("livnärt"), "livnärt" );
	deepEqual( Stem("livre"), "livr" );
	deepEqual( Stem("livränta"), "livränt" );
	deepEqual( Stem("livs"), "liv" );
	deepEqual( Stem("livsandar"), "livsand" );
	deepEqual( Stem("livsbejakaren"), "livsbejak" );
	deepEqual( Stem("livsfarligt"), "livsfar" );
	deepEqual( Stem("livsfrukt"), "livsfruk" );
	deepEqual( Stem("livsfröt"), "livsfröt" );
	deepEqual( Stem("livsglädje"), "livsglädj" );
	deepEqual( Stem("livslust"), "livslust" );
	deepEqual( Stem("livstid"), "livstid" );
	deepEqual( Stem("livstiden"), "livstid" );
	deepEqual( Stem("livstycke"), "livstyck" );
	deepEqual( Stem("livstycken"), "livstyck" );
	deepEqual( Stem("livstyckets"), "livstycket" );
	deepEqual( Stem("livsuppgift"), "livsuppgift" );
	deepEqual( Stem("livsåskådning"), "livsåskådning" );
	deepEqual( Stem("livsöde"), "livsöd" );
	deepEqual( Stem("ljettför"), "ljettför" );
	deepEqual( Stem("ljnset"), "ljnset" );
	deepEqual( Stem("lju"), "lju" );
	deepEqual( Stem("ljud"), "ljud" );
	deepEqual( Stem("ljuda"), "ljud" );
	deepEqual( Stem("ljudande"), "ljud" );
	deepEqual( Stem("ljuder"), "ljud" );
	deepEqual( Stem("ljudet"), "ljudet" );
	deepEqual( Stem("ljudit"), "ljudit" );
	deepEqual( Stem("ljudlig"), "ljud" );
	deepEqual( Stem("ljudliga"), "ljud" );
	deepEqual( Stem("ljudlöst"), "ljudlös" );
	deepEqual( Stem("ljuf"), "ljuf" );
	deepEqual( Stem("ljuflig"), "ljuf" );
	deepEqual( Stem("ljufligt"), "ljuf" );
	deepEqual( Stem("ljuft"), "ljuft" );
	deepEqual( Stem("ljufva"), "ljufv" );
	deepEqual( Stem("ljufvare"), "ljufv" );
	deepEqual( Stem("ljufvast"), "ljufv" );
	deepEqual( Stem("ljufvaste"), "ljufv" );
	deepEqual( Stem("ljuga"), "ljug" );
	deepEqual( Stem("ljuger"), "ljug" );
	deepEqual( Stem("ljugit"), "ljugit" );
	deepEqual( Stem("ljum"), "ljum" );
	deepEqual( Stem("ljumhet"), "ljum" );
	deepEqual( Stem("ljumma"), "ljumm" );
	deepEqual( Stem("ljumt"), "ljumt" );
	deepEqual( Stem("ljung"), "ljung" );
	deepEqual( Stem("ljungade"), "ljung" );
	deepEqual( Stem("ljungande"), "ljung" );
	deepEqual( Stem("ljungkvist"), "ljungkvist" );
	deepEqual( Stem("ljus"), "ljus" );
	deepEqual( Stem("ljusa"), "ljus" );
	deepEqual( Stem("ljusare"), "ljus" );
	deepEqual( Stem("ljusastaken"), "ljusastak" );
	deepEqual( Stem("ljusaste"), "ljus" );
	deepEqual( Stem("ljusbiten"), "ljusbit" );
	deepEqual( Stem("ljusblå"), "ljusblå" );
	deepEqual( Stem("ljusblått"), "ljusblåt" );
	deepEqual( Stem("ljusbrun"), "ljusbrun" );
	deepEqual( Stem("ljusen"), "ljus" );
	deepEqual( Stem("ljusens"), "ljus" );
	deepEqual( Stem("ljuset"), "ljuset" );
	deepEqual( Stem("ljusets"), "ljuset" );
	deepEqual( Stem("ljusfläckar"), "ljusfläck" );
	deepEqual( Stem("ljusfläckarna"), "ljusfläck" );
	deepEqual( Stem("ljusgrå"), "ljusgrå" );
	deepEqual( Stem("ljusgrön"), "ljusgrön" );
	deepEqual( Stem("ljusgul"), "ljusgul" );
	deepEqual( Stem("ljushav"), "ljushav" );
	deepEqual( Stem("ljushåriga"), "ljushår" );
	deepEqual( Stem("ljusknekt"), "ljusknek" );
	deepEqual( Stem("ljuskretsen"), "ljuskrets" );
	deepEqual( Stem("ljuslett"), "ljuslet" );
	deepEqual( Stem("ljuslågan"), "ljuslågan" );
	deepEqual( Stem("ljusmelodi"), "ljusmelodi" );
	deepEqual( Stem("ljusna"), "ljusn" );
	deepEqual( Stem("ljusnade"), "ljusn" );
	deepEqual( Stem("ljusnande"), "ljusn" );
	deepEqual( Stem("ljusnar"), "ljusn" );
	deepEqual( Stem("ljusning"), "ljusning" );
	deepEqual( Stem("ljusrandig"), "ljusrand" );
	deepEqual( Stem("ljusringar"), "ljusring" );
	deepEqual( Stem("ljussken"), "ljussk" );
	deepEqual( Stem("ljusskenet"), "ljusskenet" );
	deepEqual( Stem("ljusskyltar"), "ljusskylt" );
	deepEqual( Stem("ljusskymt"), "ljusskymt" );
	deepEqual( Stem("ljusstakar"), "ljusstak" );
	deepEqual( Stem("ljusstrimma"), "ljusstrimm" );
	deepEqual( Stem("ljusstöperskan"), "ljusstöperskan" );
	deepEqual( Stem("ljust"), "ljust" );
	deepEqual( Stem("ljuv"), "ljuv" );
	deepEqual( Stem("ljuva"), "ljuv" );
	deepEqual( Stem("ljuvaste"), "ljuv" );
	deepEqual( Stem("ljuvlig"), "ljuv" );
	deepEqual( Stem("ljuvliga"), "ljuv" );
	deepEqual( Stem("ljuvligaste"), "ljuv" );
	deepEqual( Stem("ljuvligt"), "ljuv" );
	deepEqual( Stem("ljuvt"), "ljuvt" );
	deepEqual( Stem("ljöd"), "ljöd" );
	deepEqual( Stem("ljödo"), "ljödo" );
	deepEqual( Stem("lkar"), "lkar" );
	deepEqual( Stem("ll"), "ll" );
	deepEqual( Stem("lla"), "lla" );
	deepEqual( Stem("llans"), "llan" );
	deepEqual( Stem("ller"), "ller" );
	deepEqual( Stem("lletty"), "lletty" );
	deepEqual( Stem("llng"), "llng" );
	deepEqual( Stem("llolmström"), "llolmström" );
	deepEqual( Stem("llon"), "llon" );
	deepEqual( Stem("lls"), "lls" );
	deepEqual( Stem("llsa"), "llsa" );
	deepEqual( Stem("llu"), "llu" );
	deepEqual( Stem("llöll"), "llöll" );
	deepEqual( Stem("lmg"), "lmg" );
	deepEqual( Stem("lnte"), "lnte" );
	deepEqual( Stem("loade"), "load" );
	deepEqual( Stem("locka"), "lock" );
	deepEqual( Stem("lockade"), "lock" );
	deepEqual( Stem("lockades"), "lock" );
	deepEqual( Stem("lockan"), "lockan" );
	deepEqual( Stem("lockande"), "lock" );
	deepEqual( Stem("lockar"), "lock" );
	deepEqual( Stem("lockarna"), "lock" );
	deepEqual( Stem("lockat"), "lock" );
	deepEqual( Stem("lockbete"), "lockbet" );
	deepEqual( Stem("lockbetet"), "lockbetet" );
	deepEqual( Stem("lockelser"), "lock" );
	deepEqual( Stem("locket"), "locket" );
	deepEqual( Stem("lockiga"), "lock" );
	deepEqual( Stem("lockigt"), "lock" );
	deepEqual( Stem("lodbössa"), "lodböss" );
	deepEqual( Stem("loe"), "loe" );
	deepEqual( Stem("lof"), "lof" );
	deepEqual( Stem("loflig"), "lof" );
	deepEqual( Stem("lofliga"), "lof" );
	deepEqual( Stem("lofligheten"), "lof" );
	deepEqual( Stem("lofligt"), "lof" );
	deepEqual( Stem("loft"), "loft" );
	deepEqual( Stem("loftet"), "loftet" );
	deepEqual( Stem("lofva"), "lofv" );
	deepEqual( Stem("lofvade"), "lofv" );
	deepEqual( Stem("lofvar"), "lofv" );
	deepEqual( Stem("lofvat"), "lofv" );
	deepEqual( Stem("log"), "log" );
	deepEqual( Stem("loge"), "log" );
	deepEqual( Stem("logen"), "log" );
	deepEqual( Stem("logeraden"), "logerad" );
	deepEqual( Stem("loggboken"), "loggbok" );
	deepEqual( Stem("logik"), "logik" );
	deepEqual( Stem("logis"), "logis" );
	deepEqual( Stem("logiska"), "logisk" );
	deepEqual( Stem("logiskt"), "logisk" );
	deepEqual( Stem("logo"), "logo" );
	deepEqual( Stem("lohengrin"), "lohengrin" );
	deepEqual( Stem("loja"), "loj" );
	deepEqual( Stem("lojtnant"), "lojtnant" );
	deepEqual( Stem("lojtnantsfru"), "lojtnantsfru" );
	deepEqual( Stem("lokal"), "lokal" );
	deepEqual( Stem("lokalen"), "lokal" );
	deepEqual( Stem("lokomotivet"), "lokomotivet" );
	deepEqual( Stem("lombardbrucke"), "lombardbruck" );
	deepEqual( Stem("lon"), "lon" );
	deepEqual( Stem("lopp"), "lopp" );
	deepEqual( Stem("loppet"), "loppet" );
	deepEqual( Stem("lorens"), "lor" );
	deepEqual( Stem("lorette"), "loret" );
	deepEqual( Stem("lorgnetten"), "lorgnet" );
	deepEqual( Stem("lorgnetterande"), "lorgnetter" );
	deepEqual( Stem("lorgnettkedja"), "lorgnettkedj" );
	deepEqual( Stem("lorraine"), "lorrain" );
	deepEqual( Stem("los"), "los" );
	deepEqual( Stem("loss"), "loss" );
	deepEqual( Stem("lossade"), "loss" );
	deepEqual( Stem("lossades"), "loss" );
	deepEqual( Stem("lossnade"), "lossn" );
	deepEqual( Stem("lossnat"), "lossn" );
	deepEqual( Stem("lossning"), "lossning" );
	deepEqual( Stem("lost"), "lost" );
	deepEqual( Stem("lott"), "lott" );
	deepEqual( Stem("lottade"), "lott" );
	deepEqual( Stem("lotten"), "lott" );
	deepEqual( Stem("lotter"), "lott" );
	deepEqual( Stem("lotteri"), "lotteri" );
	deepEqual( Stem("lotteripäls"), "lotteripäl" );
	deepEqual( Stem("lotterna"), "lott" );
	deepEqual( Stem("louise"), "louis" );
	deepEqual( Stem("lov"), "lov" );
	deepEqual( Stem("lova"), "lov" );
	deepEqual( Stem("lovade"), "lov" );
	deepEqual( Stem("lovande"), "lov" );
	deepEqual( Stem("lovar"), "lov" );
	deepEqual( Stem("lovat"), "lov" );
	deepEqual( Stem("loven"), "lov" );
	deepEqual( Stem("lovera"), "lover" );
	deepEqual( Stem("loverar"), "lover" );
	deepEqual( Stem("loverat"), "lover" );
	deepEqual( Stem("lovliga"), "lov" );
	deepEqual( Stem("lovligt"), "lov" );
	deepEqual( Stem("lovning"), "lovning" );
	deepEqual( Stem("lovprisade"), "lovpris" );
	deepEqual( Stem("lovsång"), "lovsång" );
	deepEqual( Stem("lovsånger"), "lovsång" );
	deepEqual( Stem("lowärda"), "lowärd" );
	deepEqual( Stem("loz"), "loz" );
	deepEqual( Stem("lr"), "lr" );
	deepEqual( Stem("lsamt"), "lsamt" );
	deepEqual( Stem("lsen"), "lsen" );
	deepEqual( Stem("lstad"), "lstad" );
	deepEqual( Stem("lt"), "lt" );
	deepEqual( Stem("ltj"), "ltj" );
	deepEqual( Stem("lucidor"), "lucid" );
	deepEqual( Stem("lucie"), "luci" );
	deepEqual( Stem("lucies"), "luci" );
	deepEqual( Stem("lucka"), "luck" );
	deepEqual( Stem("luckan"), "luckan" );
	deepEqual( Stem("luckorna"), "luck" );
	deepEqual( Stem("luden"), "lud" );
	deepEqual( Stem("ludna"), "ludn" );
	deepEqual( Stem("luffare"), "luff" );
	deepEqual( Stem("lufsandc"), "lufsandc" );
	deepEqual( Stem("luft"), "luft" );
	deepEqual( Stem("luftdraget"), "luftdraget" );
	deepEqual( Stem("luften"), "luft" );
	deepEqual( Stem("luftens"), "luft" );
	deepEqual( Stem("luftig"), "luft" );
	deepEqual( Stem("luftiga"), "luft" );
	deepEqual( Stem("luftigaste"), "luft" );
	deepEqual( Stem("luftslott"), "luftslot" );
	deepEqual( Stem("luftström"), "luftström" );
	deepEqual( Stem("lugg"), "lugg" );
	deepEqual( Stem("luggslitenhet"), "luggsliten" );
	deepEqual( Stem("luggslitna"), "luggslitn" );
	deepEqual( Stem("lugn"), "lugn" );
	deepEqual( Stem("lugna"), "lugn" );
	deepEqual( Stem("lugnad"), "lugn" );
	deepEqual( Stem("lugnade"), "lugn" );
	deepEqual( Stem("lugnande"), "lugn" );
	deepEqual( Stem("lugnar"), "lugn" );
	deepEqual( Stem("lugnare"), "lugn" );
	deepEqual( Stem("lugnaste"), "lugn" );
	deepEqual( Stem("lugnat"), "lugn" );
	deepEqual( Stem("lugnet"), "lugnet" );
	deepEqual( Stem("lugnt"), "lugnt" );
	deepEqual( Stem("lukt"), "lukt" );
	deepEqual( Stem("lukta"), "lukt" );
	deepEqual( Stem("luktade"), "lukt" );
	deepEqual( Stem("luktar"), "lukt" );
	deepEqual( Stem("lukten"), "lukt" );
	deepEqual( Stem("luktärter"), "luktärt" );
	deepEqual( Stem("lullade"), "lull" );
	deepEqual( Stem("lummiga"), "lumm" );
	deepEqual( Stem("lummigt"), "lumm" );
	deepEqual( Stem("lump"), "lump" );
	deepEqual( Stem("lumpen"), "lump" );
	deepEqual( Stem("lumpet"), "lumpet" );
	deepEqual( Stem("lumpne"), "lumpn" );
	deepEqual( Stem("lumpsamlare"), "lumpsaml" );
	deepEqual( Stem("luna"), "lun" );
	deepEqual( Stem("lunch"), "lunch" );
	deepEqual( Stem("lunchbordet"), "lunchbordet" );
	deepEqual( Stem("lunchen"), "lunch" );
	deepEqual( Stem("lund"), "lund" );
	deepEqual( Stem("lundar"), "lund" );
	deepEqual( Stem("lundarnas"), "lund" );
	deepEqual( Stem("lunetter"), "lunet" );
	deepEqual( Stem("lunginflamma"), "lunginflamm" );
	deepEqual( Stem("lungor"), "lung" );
	deepEqual( Stem("lungorna"), "lung" );
	deepEqual( Stem("lunkade"), "lunk" );
	deepEqual( Stem("lunkentus"), "lunkentus" );
	deepEqual( Stem("luntan"), "luntan" );
	deepEqual( Stem("luntor"), "lunt" );
	deepEqual( Stem("lur"), "lur" );
	deepEqual( Stem("lura"), "lur" );
	deepEqual( Stem("lurad"), "lur" );
	deepEqual( Stem("lurade"), "lur" );
	deepEqual( Stem("lurande"), "lur" );
	deepEqual( Stem("lurar"), "lur" );
	deepEqual( Stem("lurat"), "lur" );
	deepEqual( Stem("luren"), "lur" );
	deepEqual( Stem("lurendrejarn"), "lurendrejarn" );
	deepEqual( Stem("lurendrejarne"), "lurendrej" );
	deepEqual( Stem("lurendrejarnes"), "lurendrejarn" );
	deepEqual( Stem("lurendrejas"), "lurendrej" );
	deepEqual( Stem("lurendrejeri"), "lurendrejeri" );
	deepEqual( Stem("lurendrejeribeslag"), "lurendrejeribeslag" );
	deepEqual( Stem("lurendrejerierna"), "lurendrejeri" );
	deepEqual( Stem("lurendrejeriet"), "lurendrejeriet" );
	deepEqual( Stem("lurfviga"), "lurfv" );
	deepEqual( Stem("luri"), "luri" );
	deepEqual( Stem("lurviga"), "lurv" );
	deepEqual( Stem("luschi"), "luschi" );
	deepEqual( Stem("luschie"), "luschi" );
	deepEqual( Stem("lusen"), "lus" );
	deepEqual( Stem("luska"), "lusk" );
	deepEqual( Stem("lust"), "lust" );
	deepEqual( Stem("lustar"), "lust" );
	deepEqual( Stem("lusteld"), "lusteld" );
	deepEqual( Stem("lusten"), "lust" );
	deepEqual( Stem("lustfyllda"), "lustfylld" );
	deepEqual( Stem("lustfärd"), "lustfärd" );
	deepEqual( Stem("lustfärder"), "lustfärd" );
	deepEqual( Stem("lustgård"), "lustgård" );
	deepEqual( Stem("lustgården"), "lustgård" );
	deepEqual( Stem("lustig"), "lust" );
	deepEqual( Stem("lustiga"), "lust" );
	deepEqual( Stem("lustigaste"), "lust" );
	deepEqual( Stem("lustigt"), "lust" );
	deepEqual( Stem("lustturen"), "lusttur" );
	deepEqual( Stem("lusttåg"), "lusttåg" );
	deepEqual( Stem("lustvandra"), "lustvandr" );
	deepEqual( Stem("lut"), "lut" );
	deepEqual( Stem("luta"), "lut" );
	deepEqual( Stem("lutad"), "lut" );
	deepEqual( Stem("lutade"), "lut" );
	deepEqual( Stem("lutande"), "lut" );
	deepEqual( Stem("lutans"), "lutan" );
	deepEqual( Stem("lutar"), "lut" );
	deepEqual( Stem("lutat"), "lut" );
	deepEqual( Stem("luteransk"), "luteransk" );
	deepEqual( Stem("luther"), "luth" );
	deepEqual( Stem("luthers"), "luther" );
	deepEqual( Stem("luven"), "luv" );
	deepEqual( Stem("lvcka"), "lvcka" );
	deepEqual( Stem("lycka"), "lyck" );
	deepEqual( Stem("lyckades"), "lyck" );
	deepEqual( Stem("lyckadt"), "lyckad" );
	deepEqual( Stem("lyckan"), "lyckan" );
	deepEqual( Stem("lyckans"), "lyckan" );
	deepEqual( Stem("lyckas"), "lyck" );
	deepEqual( Stem("lyckats"), "lyckat" );
	deepEqual( Stem("lycklig"), "lyck" );
	deepEqual( Stem("lyckliga"), "lyck" );
	deepEqual( Stem("lyckligare"), "lyck" );
	deepEqual( Stem("lyckligast"), "lyck" );
	deepEqual( Stem("lyckligaste"), "lyck" );
	deepEqual( Stem("lycklige"), "lyck" );
	deepEqual( Stem("lyckliggöra"), "lyckliggör" );
	deepEqual( Stem("lyckligheten"), "lyck" );
	deepEqual( Stem("lyckligt"), "lyck" );
	deepEqual( Stem("lyckligtvis"), "lyckligtvis" );
	deepEqual( Stem("lyckodagar"), "lyckodag" );
	deepEqual( Stem("lyckodränkta"), "lyckodränk" );
	deepEqual( Stem("lyckodröm"), "lyckodröm" );
	deepEqual( Stem("lyckokänsla"), "lyckokänsl" );
	deepEqual( Stem("lyckopannkakan"), "lyckopannkakan" );
	deepEqual( Stem("lyckoropen"), "lyckorop" );
	deepEqual( Stem("lycksalig"), "lycksa" );
	deepEqual( Stem("lycksaliga"), "lycksa" );
	deepEqual( Stem("lycksalige"), "lycksa" );
	deepEqual( Stem("lycksalighet"), "lycksa" );
	deepEqual( Stem("lycksalighetens"), "lycksa" );
	deepEqual( Stem("lycksälla"), "lycksäll" );
	deepEqual( Stem("lyckt"), "lyck" );
	deepEqual( Stem("lyckönska"), "lyckönsk" );
	deepEqual( Stem("lyckönskar"), "lyckönsk" );
	deepEqual( Stem("lyckönskningar"), "lyckönskning" );
	deepEqual( Stem("lyckönskningarna"), "lyckönskning" );
	deepEqual( Stem("lyckönskningstal"), "lyckönskningstal" );
	deepEqual( Stem("lyda"), "lyd" );
	deepEqual( Stem("lydde"), "lydd" );
	deepEqual( Stem("lyder"), "lyd" );
	deepEqual( Stem("lydig"), "lyd" );
	deepEqual( Stem("lydiga"), "lyd" );
	deepEqual( Stem("lydigt"), "lyd" );
	deepEqual( Stem("lydnad"), "lydn" );
	deepEqual( Stem("lyeker"), "lyek" );
	deepEqual( Stem("lyft"), "lyft" );
	deepEqual( Stem("lyfta"), "lyft" );
	deepEqual( Stem("lyftad"), "lyft" );
	deepEqual( Stem("lyftade"), "lyft" );
	deepEqual( Stem("lyftades"), "lyft" );
	deepEqual( Stem("lyftande"), "lyft" );
	deepEqual( Stem("lyftas"), "lyft" );
	deepEqual( Stem("lyfte"), "lyft" );
	deepEqual( Stem("lyften"), "lyft" );
	deepEqual( Stem("lyfter"), "lyft" );
	deepEqual( Stem("lyftes"), "lyft" );
	deepEqual( Stem("lyholmarne"), "lyholm" );
	deepEqual( Stem("lykta"), "lykt" );
	deepEqual( Stem("lyktan"), "lyktan" );
	deepEqual( Stem("lyktar"), "lykt" );
	deepEqual( Stem("lyktor"), "lykt" );
	deepEqual( Stem("lyktorna"), "lykt" );
	deepEqual( Stem("lyktornas"), "lykt" );
	deepEqual( Stem("lyktstolpe"), "lyktstolp" );
	deepEqual( Stem("lyktstolpen"), "lyktstolp" );
	deepEqual( Stem("lykttändare"), "lykttänd" );
	deepEqual( Stem("lykttändaren"), "lykttänd" );
	deepEqual( Stem("lymmel"), "lymmel" );
	deepEqual( Stem("lymmeln"), "lymmeln" );
	deepEqual( Stem("lyngden"), "lyng" );
	deepEqual( Stem("lynne"), "lynn" );
	deepEqual( Stem("lynnen"), "lynn" );
	deepEqual( Stem("lynnet"), "lynnet" );
	deepEqual( Stem("lyra"), "lyr" );
	deepEqual( Stem("lys"), "lys" );
	deepEqual( Stem("lysa"), "lys" );
	deepEqual( Stem("lysande"), "lys" );
	deepEqual( Stem("lysas"), "lys" );
	deepEqual( Stem("lyser"), "lys" );
	deepEqual( Stem("lysning"), "lysning" );
	deepEqual( Stem("lyss"), "lyss" );
	deepEqual( Stem("lyssna"), "lyssn" );
	deepEqual( Stem("lyssnade"), "lyssn" );
	deepEqual( Stem("lyssnande"), "lyssn" );
	deepEqual( Stem("lyssnar"), "lyssn" );
	deepEqual( Stem("lyssnat"), "lyssn" );
	deepEqual( Stem("lyssnen"), "lyssn" );
	deepEqual( Stem("lyst"), "lyst" );
	deepEqual( Stem("lyste"), "lyst" );
	deepEqual( Stem("lysten"), "lyst" );
	deepEqual( Stem("lyster"), "lyst" );
	deepEqual( Stem("lysterklänning"), "lysterklänning" );
	deepEqual( Stem("lystes"), "lyst" );
	deepEqual( Stem("lystna"), "lystn" );
	deepEqual( Stem("lystnad"), "lystn" );
	deepEqual( Stem("lystrade"), "lystr" );
	deepEqual( Stem("lyte"), "lyt" );
	deepEqual( Stem("lytt"), "lytt" );
	deepEqual( Stem("lytton"), "lytton" );
	deepEqual( Stem("lyx"), "lyx" );
	deepEqual( Stem("lyxartikel"), "lyxartikel" );
	deepEqual( Stem("lyxsaker"), "lyxsak" );
	deepEqual( Stem("lä"), "lä" );
	deepEqual( Stem("läcker"), "läck" );
	deepEqual( Stem("läckerhet"), "läcker" );
	deepEqual( Stem("läckerheter"), "läcker" );
	deepEqual( Stem("läckerheterna"), "läcker" );
	deepEqual( Stem("läckra"), "läckr" );
	deepEqual( Stem("läder"), "läd" );
	deepEqual( Stem("läderband"), "läderband" );
	deepEqual( Stem("läderdynan"), "läderdynan" );
	deepEqual( Stem("läderfabrikör"), "läderfabrikör" );
	deepEqual( Stem("läderlappar"), "läderlapp" );
	deepEqual( Stem("läderläpparna"), "läderläpp" );
	deepEqual( Stem("läderpermar"), "läderperm" );
	deepEqual( Stem("läffsor"), "läffs" );
	deepEqual( Stem("läge"), "läg" );
	deepEqual( Stem("lägenhet"), "lägen" );
	deepEqual( Stem("lägenheten"), "lägen" );
	deepEqual( Stem("läger"), "läg" );
	deepEqual( Stem("lägerelden"), "lägereld" );
	deepEqual( Stem("läget"), "läget" );
	deepEqual( Stem("lägg"), "lägg" );
	deepEqual( Stem("lägga"), "lägg" );
	deepEqual( Stem("läggande"), "lägg" );
	deepEqual( Stem("läggen"), "lägg" );
	deepEqual( Stem("lägger"), "lägg" );
	deepEqual( Stem("lägges"), "lägg" );
	deepEqual( Stem("läggspelet"), "läggspelet" );
	deepEqual( Stem("läglig"), "läg" );
	deepEqual( Stem("lägligt"), "läg" );
	deepEqual( Stem("lägrade"), "lägr" );
	deepEqual( Stem("lägrat"), "lägr" );
	deepEqual( Stem("lägre"), "lägr" );
	deepEqual( Stem("lägret"), "lägret" );
	deepEqual( Stem("lägsen"), "lägs" );
	deepEqual( Stem("lägsna"), "lägsn" );
	deepEqual( Stem("lägsta"), "lägst" );
	deepEqual( Stem("läkarblick"), "läkarblick" );
	deepEqual( Stem("läkare"), "läk" );
	deepEqual( Stem("läkared"), "läkared" );
	deepEqual( Stem("läkaren"), "läk" );
	deepEqual( Stem("läkarens"), "läk" );
	deepEqual( Stem("läkarföreningen"), "läkarförening" );
	deepEqual( Stem("läkarna"), "läk" );
	deepEqual( Stem("läkarpjosk"), "läkarpjosk" );
	deepEqual( Stem("läkarsällskapet"), "läkarsällskapet" );
	deepEqual( Stem("läkarsällskapets"), "läkarsällskapet" );
	deepEqual( Stem("läkas"), "läk" );
	deepEqual( Stem("läkedom"), "läkedom" );
	deepEqual( Stem("läkemedel"), "läkemedel" );
	deepEqual( Stem("läker"), "läk" );
	deepEqual( Stem("läkts"), "läkt" );
	deepEqual( Stem("lämna"), "lämn" );
	deepEqual( Stem("lämnad"), "lämn" );
	deepEqual( Stem("lämnade"), "lämn" );
	deepEqual( Stem("lämnades"), "lämn" );
	deepEqual( Stem("lämnande"), "lämn" );
	deepEqual( Stem("lämnar"), "lämn" );
	deepEqual( Stem("lämnas"), "lämn" );
	deepEqual( Stem("lämnat"), "lämn" );
	deepEqual( Stem("lämnats"), "lämnat" );
	deepEqual( Stem("lämningarna"), "lämning" );
	deepEqual( Stem("lämpa"), "lämp" );
	deepEqual( Stem("lämpar"), "lämp" );
	deepEqual( Stem("lämpas"), "lämp" );
	deepEqual( Stem("lämplig"), "lämp" );
	deepEqual( Stem("lämpliga"), "lämp" );
	deepEqual( Stem("lämpligare"), "lämp" );
	deepEqual( Stem("lämpligen"), "lämp" );
	deepEqual( Stem("lämpligt"), "lämp" );
	deepEqual( Stem("lämpor"), "lämp" );
	deepEqual( Stem("länd"), "länd" );
	deepEqual( Stem("länder"), "länd" );
	deepEqual( Stem("ländska"), "ländsk" );
	deepEqual( Stem("läng"), "läng" );
	deepEqual( Stem("längc"), "längc" );
	deepEqual( Stem("längd"), "läng" );
	deepEqual( Stem("längden"), "läng" );
	deepEqual( Stem("länge"), "läng" );
	deepEqual( Stem("längesedan"), "längesedan" );
	deepEqual( Stem("längesen"), "länges" );
	deepEqual( Stem("längre"), "längr" );
	deepEqual( Stem("längs"), "läng" );
	deepEqual( Stem("längst"), "längst" );
	deepEqual( Stem("längsta"), "längst" );
	deepEqual( Stem("längta"), "läng" );
	deepEqual( Stem("längtade"), "läng" );
	deepEqual( Stem("längtan"), "längtan" );
	deepEqual( Stem("längtande"), "läng" );
	deepEqual( Stem("längtans"), "längtan" );
	deepEqual( Stem("längtansfull"), "längtansfull" );
	deepEqual( Stem("längtansfullt"), "längtansfull" );
	deepEqual( Stem("längtar"), "läng" );
	deepEqual( Stem("längtat"), "läng" );
	deepEqual( Stem("länk"), "länk" );
	deepEqual( Stem("länstol"), "länstol" );
	deepEqual( Stem("länstolen"), "länstol" );
	deepEqual( Stem("läpp"), "läpp" );
	deepEqual( Stem("läppar"), "läpp" );
	deepEqual( Stem("läpparna"), "läpp" );
	deepEqual( Stem("läpparne"), "läpp" );
	deepEqual( Stem("läppen"), "läpp" );
	deepEqual( Stem("läppens"), "läpp" );
	deepEqual( Stem("läppja"), "läppj" );
	deepEqual( Stem("läppjade"), "läppj" );
	deepEqual( Stem("läppjar"), "läppj" );
	deepEqual( Stem("lär"), "lär" );
	deepEqual( Stem("lära"), "lär" );
	deepEqual( Stem("läraktig"), "lärakt" );
	deepEqual( Stem("läran"), "läran" );
	deepEqual( Stem("lärare"), "lär" );
	deepEqual( Stem("lärarebefattning"), "lärarebefattning" );
	deepEqual( Stem("läraren"), "lär" );
	deepEqual( Stem("lärarens"), "lär" );
	deepEqual( Stem("lärares"), "lärar" );
	deepEqual( Stem("lärarevärdighet"), "lärarevärd" );
	deepEqual( Stem("lärarin"), "lärarin" );
	deepEqual( Stem("lärarinna"), "lärarin" );
	deepEqual( Stem("lärarinnan"), "lärarinnan" );
	deepEqual( Stem("lärarinnans"), "lärarinnan" );
	deepEqual( Stem("lärarinnegärning"), "lärarinnegärning" );
	deepEqual( Stem("lärarinnesemina"), "lärarinnesemin" );
	deepEqual( Stem("lärd"), "lärd" );
	deepEqual( Stem("lärda"), "lärd" );
	deepEqual( Stem("lärde"), "lärd" );
	deepEqual( Stem("lärdom"), "lärdom" );
	deepEqual( Stem("lärdomar"), "lärdom" );
	deepEqual( Stem("lärer"), "lär" );
	deepEqual( Stem("lärft"), "lärft" );
	deepEqual( Stem("lärftskramhandlare"), "lärftskramhandl" );
	deepEqual( Stem("lärftskramhandlaren"), "lärftskramhandl" );
	deepEqual( Stem("lärftskramhandlarens"), "lärftskramhandl" );
	deepEqual( Stem("lärgossen"), "lärgoss" );
	deepEqual( Stem("lärjungar"), "lärjung" );
	deepEqual( Stem("lärjunge"), "lärjung" );
	deepEqual( Stem("lärka"), "lärk" );
	deepEqual( Stem("lärkor"), "lärk" );
	deepEqual( Stem("lärkstaden"), "lärkstad" );
	deepEqual( Stem("lärkvingar"), "lärkving" );
	deepEqual( Stem("lärnna"), "lärn" );
	deepEqual( Stem("läroanstalterna"), "läroanstalt" );
	deepEqual( Stem("lärofader"), "lärofad" );
	deepEqual( Stem("läror"), "lär" );
	deepEqual( Stem("lärorummet"), "lärorummet" );
	deepEqual( Stem("lärostriderna"), "lärostrid" );
	deepEqual( Stem("läroverk"), "läroverk" );
	deepEqual( Stem("läroverksadjunkten"), "läroverksadjunk" );
	deepEqual( Stem("lärt"), "lärt" );
	deepEqual( Stem("lärvtskramhandlarns"), "lärvtskramhandlarn" );
	deepEqual( Stem("läs"), "läs" );
	deepEqual( Stem("läsa"), "läs" );
	deepEqual( Stem("läsaren"), "läs" );
	deepEqual( Stem("läsarens"), "läs" );
	deepEqual( Stem("läsas"), "läs" );
	deepEqual( Stem("läser"), "läs" );
	deepEqual( Stem("läses"), "läs" );
	deepEqual( Stem("läsida"), "läsid" );
	deepEqual( Stem("läskar"), "läsk" );
	deepEqual( Stem("läsning"), "läsning" );
	deepEqual( Stem("läsningen"), "läsning" );
	deepEqual( Stem("läspa"), "läsp" );
	deepEqual( Stem("läspade"), "läsp" );
	deepEqual( Stem("läst"), "läst" );
	deepEqual( Stem("läste"), "läst" );
	deepEqual( Stem("lästes"), "läst" );
	deepEqual( Stem("lät"), "lät" );
	deepEqual( Stem("lätande"), "lät" );
	deepEqual( Stem("läte"), "lät" );
	deepEqual( Stem("läten"), "lät" );
	deepEqual( Stem("läto"), "läto" );
	deepEqual( Stem("lätt"), "lätt" );
	deepEqual( Stem("lätta"), "lätt" );
	deepEqual( Stem("lättad"), "lätt" );
	deepEqual( Stem("lättade"), "lätt" );
	deepEqual( Stem("lättadt"), "lättad" );
	deepEqual( Stem("lättare"), "lätt" );
	deepEqual( Stem("lättast"), "lätt" );
	deepEqual( Stem("lättaste"), "lätt" );
	deepEqual( Stem("lättat"), "lätt" );
	deepEqual( Stem("lättböjliga"), "lättböj" );
	deepEqual( Stem("lätteligen"), "lätte" );
	deepEqual( Stem("lättfattligt"), "lättfatt" );
	deepEqual( Stem("lätthet"), "lätt" );
	deepEqual( Stem("lätthänt"), "lätthänt" );
	deepEqual( Stem("lättingen"), "lätting" );
	deepEqual( Stem("lättjefull"), "lättjefull" );
	deepEqual( Stem("lättnad"), "lättn" );
	deepEqual( Stem("lättretliga"), "lättret" );
	deepEqual( Stem("lättrörd"), "lättrörd" );
	deepEqual( Stem("lättsinne"), "lättsin" );
	deepEqual( Stem("lättsinnig"), "lättsinn" );
	deepEqual( Stem("lättsinniga"), "lättsinn" );
	deepEqual( Stem("lättsinnighet"), "lättsinn" );
	deepEqual( Stem("lättsinnigheter"), "lättsinn" );
	deepEqual( Stem("lättsinnigt"), "lättsinn" );
	deepEqual( Stem("lättvindig"), "lättvind" );
	deepEqual( Stem("läxa"), "läx" );
	deepEqual( Stem("läxläsningen"), "läxläsning" );
	deepEqual( Stem("läxorna"), "läx" );
	deepEqual( Stem("låda"), "låd" );
	deepEqual( Stem("lådan"), "lådan" );
	deepEqual( Stem("låding"), "låding" );
	deepEqual( Stem("lådingsfriska"), "lådingsfrisk" );
	deepEqual( Stem("låg"), "låg" );
	deepEqual( Stem("låga"), "låg" );
	deepEqual( Stem("lågade"), "låg" );
	deepEqual( Stem("lågan"), "lågan" );
	deepEqual( Stem("lågande"), "låg" );
	deepEqual( Stem("låge"), "låg" );
	deepEqual( Stem("låghet"), "låg" );
	deepEqual( Stem("lågklackad"), "lågklack" );
	deepEqual( Stem("lågklackade"), "lågklack" );
	deepEqual( Stem("lågo"), "lågo" );
	deepEqual( Stem("lågor"), "låg" );
	deepEqual( Stem("lågorna"), "låg" );
	deepEqual( Stem("lågskon"), "lågskon" );
	deepEqual( Stem("lågt"), "lågt" );
	deepEqual( Stem("lån"), "lån" );
	deepEqual( Stem("låna"), "lån" );
	deepEqual( Stem("lånade"), "lån" );
	deepEqual( Stem("lånar"), "lån" );
	deepEqual( Stem("lånat"), "lån" );
	deepEqual( Stem("lånet"), "lånet" );
	deepEqual( Stem("lång"), "lång" );
	deepEqual( Stem("långa"), "lång" );
	deepEqual( Stem("långan"), "långan" );
	deepEqual( Stem("långbyxor"), "långbyx" );
	deepEqual( Stem("långdraget"), "långdraget" );
	deepEqual( Stem("långfingret"), "långfingret" );
	deepEqual( Stem("långhalsdukar"), "långhalsduk" );
	deepEqual( Stem("långholmen"), "långholm" );
	deepEqual( Stem("långlig"), "lång" );
	deepEqual( Stem("långlåt"), "långlåt" );
	deepEqual( Stem("långor"), "lång" );
	deepEqual( Stem("långrandiga"), "långrand" );
	deepEqual( Stem("långrandigt"), "långrand" );
	deepEqual( Stem("långresa"), "långres" );
	deepEqual( Stem("långrock"), "långrock" );
	deepEqual( Stem("långs"), "lång" );
	deepEqual( Stem("långsam"), "långsam" );
	deepEqual( Stem("långsamheten"), "långsam" );
	deepEqual( Stem("långsamma"), "långsamm" );
	deepEqual( Stem("långsamt"), "långsamt" );
	deepEqual( Stem("långsannt"), "långsannt" );
	deepEqual( Stem("långsides"), "långsid" );
	deepEqual( Stem("långsint"), "långsint" );
	deepEqual( Stem("långt"), "lång" );
	deepEqual( Stem("långtifrån"), "långtifrån" );
	deepEqual( Stem("långtmindre"), "långtmindr" );
	deepEqual( Stem("långvarig"), "långvar" );
	deepEqual( Stem("långvarigt"), "långvar" );
	deepEqual( Stem("långväga"), "långväg" );
	deepEqual( Stem("långväggen"), "långvägg" );
	deepEqual( Stem("låntagaren"), "låntag" );
	deepEqual( Stem("lår"), "lår" );
	deepEqual( Stem("lås"), "lås" );
	deepEqual( Stem("låsa"), "lås" );
	deepEqual( Stem("låset"), "låset" );
	deepEqual( Stem("låsets"), "låset" );
	deepEqual( Stem("låst"), "låst" );
	deepEqual( Stem("låste"), "låst" );
	deepEqual( Stem("låt"), "låt" );
	deepEqual( Stem("låta"), "låt" );
	deepEqual( Stem("låtande"), "låt" );
	deepEqual( Stem("låte"), "låt" );
	deepEqual( Stem("låtelse"), "låt" );
	deepEqual( Stem("låter"), "låt" );
	deepEqual( Stem("låtit"), "låtit" );
	deepEqual( Stem("låtsa"), "låts" );
	deepEqual( Stem("låtsad"), "låts" );
	deepEqual( Stem("låtsade"), "låts" );
	deepEqual( Stem("låtsades"), "låts" );
	deepEqual( Stem("låtsande"), "låts" );
	deepEqual( Stem("låtsar"), "låts" );
	deepEqual( Stem("låtsas"), "låts" );
	deepEqual( Stem("låtsat"), "låts" );
	deepEqual( Stem("låtsats"), "låtsat" );
	deepEqual( Stem("låäng"), "låäng" );
	deepEqual( Stem("löda"), "löd" );
	deepEqual( Stem("löddret"), "löddret" );
	deepEqual( Stem("löfte"), "löft" );
	deepEqual( Stem("löften"), "löft" );
	deepEqual( Stem("löftet"), "löftet" );
	deepEqual( Stem("löftets"), "löftet" );
	deepEqual( Stem("lögn"), "lögn" );
	deepEqual( Stem("lögnen"), "lögn" );
	deepEqual( Stem("lögnens"), "lögn" );
	deepEqual( Stem("lögner"), "lögn" );
	deepEqual( Stem("lögnhals"), "lögnhal" );
	deepEqual( Stem("löj"), "löj" );
	deepEqual( Stem("löje"), "löj" );
	deepEqual( Stem("löjeblandade"), "löjebland" );
	deepEqual( Stem("löjen"), "löj" );
	deepEqual( Stem("löjet"), "löjet" );
	deepEqual( Stem("löjlig"), "löj" );
	deepEqual( Stem("löjliga"), "löj" );
	deepEqual( Stem("löjligaste"), "löj" );
	deepEqual( Stem("löjliget"), "löjliget" );
	deepEqual( Stem("löjlighet"), "löj" );
	deepEqual( Stem("löjligheter"), "löj" );
	deepEqual( Stem("löjligt"), "löj" );
	deepEqual( Stem("löjtnant"), "löjtnant" );
	deepEqual( Stem("löjtnanten"), "löjtnant" );
	deepEqual( Stem("löjtnantens"), "löjtnant" );
	deepEqual( Stem("löjtnantets"), "löjtnantet" );
	deepEqual( Stem("löjtnantskotteri"), "löjtnantskotteri" );
	deepEqual( Stem("lök"), "lök" );
	deepEqual( Stem("löken"), "lök" );
	deepEqual( Stem("lökskivor"), "lökskiv" );
	deepEqual( Stem("lömska"), "lömsk" );
	deepEqual( Stem("lömskt"), "lömsk" );
	deepEqual( Stem("lön"), "lön" );
	deepEqual( Stem("löna"), "lön" );
	deepEqual( Stem("lönade"), "lön" );
	deepEqual( Stem("lönar"), "lön" );
	deepEqual( Stem("lönen"), "lön" );
	deepEqual( Stem("lönn"), "lönn" );
	deepEqual( Stem("lönnarna"), "lönn" );
	deepEqual( Stem("lönnars"), "lönnar" );
	deepEqual( Stem("lönnblad"), "lönnbl" );
	deepEqual( Stem("lönndom"), "lönndom" );
	deepEqual( Stem("lönnligaste"), "lönn" );
	deepEqual( Stem("lönnlåda"), "lönnlåd" );
	deepEqual( Stem("lönnlådan"), "lönnlådan" );
	deepEqual( Stem("lönte"), "lönt" );
	deepEqual( Stem("löpa"), "löp" );
	deepEqual( Stem("löparen"), "löp" );
	deepEqual( Stem("löpeldsgirland"), "löpeldsgirland" );
	deepEqual( Stem("löper"), "löp" );
	deepEqual( Stem("löpt"), "löpt" );
	deepEqual( Stem("löpte"), "löpt" );
	deepEqual( Stem("lördag"), "lördag" );
	deepEqual( Stem("lördagen"), "lördag" );
	deepEqual( Stem("lördagsafton"), "lördagsafton" );
	deepEqual( Stem("lördagsaftonens"), "lördagsafton" );
	deepEqual( Stem("lördagsaftonstonfall"), "lördagsaftonstonfall" );
	deepEqual( Stem("lördagskväll"), "lördagskväll" );
	deepEqual( Stem("lördagskvällarna"), "lördagskväll" );
	deepEqual( Stem("lös"), "lös" );
	deepEqual( Stem("lösa"), "lös" );
	deepEqual( Stem("lösaktiga"), "lösakt" );
	deepEqual( Stem("lösas"), "lös" );
	deepEqual( Stem("lösegendom"), "lösegendom" );
	deepEqual( Stem("lösen"), "lös" );
	deepEqual( Stem("lösens"), "lös" );
	deepEqual( Stem("lösensord"), "lösensord" );
	deepEqual( Stem("löser"), "lös" );
	deepEqual( Stem("lösgjorde"), "lösgjord" );
	deepEqual( Stem("lösning"), "lösning" );
	deepEqual( Stem("lösningar"), "lösning" );
	deepEqual( Stem("lösningen"), "lösning" );
	deepEqual( Stem("lösrycka"), "lösryck" );
	deepEqual( Stem("lösryckt"), "lösryck" );
	deepEqual( Stem("lösryckta"), "lösryck" );
	deepEqual( Stem("löst"), "löst" );
	deepEqual( Stem("löste"), "löst" );
	deepEqual( Stem("lösöreboet"), "lösöreboet" );
	deepEqual( Stem("lötsligt"), "löts" );
	deepEqual( Stem("löv"), "löv" );
	deepEqual( Stem("lövat"), "löv" );
	deepEqual( Stem("lövdungen"), "lövdung" );
	deepEqual( Stem("löven"), "löv" );
	deepEqual( Stem("lövens"), "löv" );
	deepEqual( Stem("lövmassor"), "lövmass" );
	deepEqual( Stem("lövruskor"), "lövrusk" );
	deepEqual( Stem("lövskog"), "lövskog" );
	deepEqual( Stem("lövskogen"), "lövskog" );
	deepEqual( Stem("lövsprångsdova"), "lövsprångsdov" );
	deepEqual( Stem("lövverk"), "lövverk" );
	deepEqual( Stem("lövverket"), "lövverket" );
	deepEqual( Stem("löwenström"), "löwenström" );
	deepEqual( Stem("löwenströms"), "löwenström" );
	deepEqual( Stem("m"), "m" );
	deepEqual( Stem("ma"), "ma" );
	deepEqual( Stem("mac"), "mac" );
	deepEqual( Stem("macson"), "macson" );
	deepEqual( Stem("madame"), "madam" );
	deepEqual( Stem("madamens"), "madam" );
	deepEqual( Stem("madamerna"), "madam" );
	deepEqual( Stem("madde"), "madd" );
	deepEqual( Stem("madeirabuteljen"), "madeirabutelj" );
	deepEqual( Stem("madeleine"), "madelein" );
	deepEqual( Stem("madeleines"), "madelein" );
	deepEqual( Stem("mademoiselle"), "mademoisell" );
	deepEqual( Stem("maderia"), "maderi" );
	deepEqual( Stem("madonna"), "madon" );
	deepEqual( Stem("madonnaliljan"), "madonnaliljan" );
	deepEqual( Stem("madonnan"), "madonnan" );
	deepEqual( Stem("madonnor"), "madon" );
	deepEqual( Stem("madras"), "madr" );
	deepEqual( Stem("magar"), "mag" );
	deepEqual( Stem("magasin"), "magasin" );
	deepEqual( Stem("magasinet"), "magasinet" );
	deepEqual( Stem("magda"), "magd" );
	deepEqual( Stem("magdalena"), "magdalen" );
	deepEqual( Stem("magdas"), "magd" );
	deepEqual( Stem("mage"), "mag" );
	deepEqual( Stem("magen"), "mag" );
	deepEqual( Stem("mager"), "mag" );
	deepEqual( Stem("magert"), "magert" );
	deepEqual( Stem("magister"), "magist" );
	deepEqual( Stem("magistern"), "magist" );
	deepEqual( Stem("magisterns"), "magist" );
	deepEqual( Stem("magnet"), "magnet" );
	deepEqual( Stem("magnetisktinfernaliskt"), "magnetisktinfernalisk" );
	deepEqual( Stem("magnifika"), "magnifik" );
	deepEqual( Stem("magnifikt"), "magnifik" );
	deepEqual( Stem("magra"), "magr" );
	deepEqual( Stem("magrare"), "magr" );
	deepEqual( Stem("magrat"), "magr" );
	deepEqual( Stem("magt"), "magt" );
	deepEqual( Stem("magten"), "magt" );
	deepEqual( Stem("magtpåliggande"), "magtpåligg" );
	deepEqual( Stem("mahogny"), "mahogny" );
	deepEqual( Stem("mahognysekretären"), "mahognysekretär" );
	deepEqual( Stem("mahognyspelbordet"), "mahognyspelbordet" );
	deepEqual( Stem("mahognystolar"), "mahognystol" );
	deepEqual( Stem("mahända"), "mahänd" );
	deepEqual( Stem("maintenon"), "maintenon" );
	deepEqual( Stem("maj"), "maj" );
	deepEqual( Stem("majestät"), "majestät" );
	deepEqual( Stem("majestätet"), "majestätet" );
	deepEqual( Stem("majestäts"), "majestät" );
	deepEqual( Stem("majrock"), "majrock" );
	deepEqual( Stem("majsen"), "majs" );
	deepEqual( Stem("majstänger"), "majstäng" );
	deepEqual( Stem("majstången"), "majstång" );
	deepEqual( Stem("mak"), "mak" );
	deepEqual( Stem("maka"), "mak" );
	deepEqual( Stem("makade"), "mak" );
	deepEqual( Stem("makan"), "makan" );
	deepEqual( Stem("makarna"), "mak" );
	deepEqual( Stem("makas"), "mak" );
	deepEqual( Stem("make"), "mak" );
	deepEqual( Stem("maken"), "mak" );
	deepEqual( Stem("makens"), "mak" );
	deepEqual( Stem("makes"), "mak" );
	deepEqual( Stem("makligt"), "mak" );
	deepEqual( Stem("makt"), "makt" );
	deepEqual( Stem("maktar"), "makt" );
	deepEqual( Stem("makten"), "makt" );
	deepEqual( Stem("makter"), "makt" );
	deepEqual( Stem("maktlös"), "maktlös" );
	deepEqual( Stem("maktlösa"), "maktlös" );
	deepEqual( Stem("maktlöshet"), "maktlös" );
	deepEqual( Stem("maktpålig"), "maktpå" );
	deepEqual( Stem("maktpåliggande"), "maktpåligg" );
	deepEqual( Stem("mal"), "mal" );
	deepEqual( Stem("mala"), "mal" );
	deepEqual( Stem("malat"), "mal" );
	deepEqual( Stem("malda"), "mald" );
	deepEqual( Stem("malde"), "mald" );
	deepEqual( Stem("malen"), "mal" );
	deepEqual( Stem("malena"), "malen" );
	deepEqual( Stem("malla"), "mall" );
	deepEqual( Stem("mallas"), "mall" );
	deepEqual( Stem("malm"), "malm" );
	deepEqual( Stem("malms"), "malm" );
	deepEqual( Stem("malmskillnadsgatan"), "malmskillnadsgatan" );
	deepEqual( Stem("malmtorgsgatan"), "malmtorgsgatan" );
	deepEqual( Stem("maläten"), "malät" );
	deepEqual( Stem("malätet"), "malätet" );
	deepEqual( Stem("mamma"), "mamm" );
	deepEqual( Stem("mammas"), "mamm" );
	deepEqual( Stem("mammor"), "mamm" );
	deepEqual( Stem("mamsell"), "mamsell" );
	deepEqual( Stem("mamsellerna"), "mamsell" );
	deepEqual( Stem("mamsells"), "mamsell" );
	deepEqual( Stem("mamsen"), "mams" );
	deepEqual( Stem("man"), "man" );
	deepEqual( Stem("manade"), "man" );
	deepEqual( Stem("manader"), "manad" );
	deepEqual( Stem("manande"), "man" );
	deepEqual( Stem("manat"), "man" );
	deepEqual( Stem("mandarin"), "mandarin" );
	deepEqual( Stem("mande"), "mand" );
	deepEqual( Stem("mandelblommor"), "mandelblomm" );
	deepEqual( Stem("manderskiöld"), "manderskiöld" );
	deepEqual( Stem("manderström"), "manderström" );
	deepEqual( Stem("maner"), "man" );
	deepEqual( Stem("maneret"), "maneret" );
	deepEqual( Stem("manga"), "mang" );
	deepEqual( Stem("mangfaldiga"), "mangfald" );
	deepEqual( Stem("manhaftigt"), "manhaft" );
	deepEqual( Stem("maningsord"), "maningsord" );
	deepEqual( Stem("manlig"), "man" );
	deepEqual( Stem("manliga"), "man" );
	deepEqual( Stem("manligt"), "man" );
	deepEqual( Stem("mannaålder"), "mannaåld" );
	deepEqual( Stem("mannaålderns"), "mannaåld" );
	deepEqual( Stem("mannaåren"), "mannaår" );
	deepEqual( Stem("mannen"), "mann" );
	deepEqual( Stem("mannens"), "mann" );
	deepEqual( Stem("manniska"), "mannisk" );
	deepEqual( Stem("manniskorna"), "mannisk" );
	deepEqual( Stem("mans"), "man" );
	deepEqual( Stem("manschetter"), "manschet" );
	deepEqual( Stem("manshög"), "manshög" );
	deepEqual( Stem("manskor"), "mansk" );
	deepEqual( Stem("mansperson"), "mansperson" );
	deepEqual( Stem("manssidan"), "manssidan" );
	deepEqual( Stem("mantel"), "mantel" );
	deepEqual( Stem("mantlar"), "mantl" );
	deepEqual( Stem("manuskriptet"), "manuskriptet" );
	deepEqual( Stem("manzanilla"), "manzanill" );
	deepEqual( Stem("manöver"), "manöv" );
	deepEqual( Stem("manövrerade"), "manövrer" );
	deepEqual( Stem("mar"), "mar" );
	deepEqual( Stem("mara"), "mar" );
	deepEqual( Stem("maran"), "maran" );
	deepEqual( Stem("mardröm"), "mardröm" );
	deepEqual( Stem("maren"), "mar" );
	deepEqual( Stem("margit"), "margit" );
	deepEqual( Stem("margits"), "margit" );
	deepEqual( Stem("margot"), "margot" );
	deepEqual( Stem("maria"), "mari" );
	deepEqual( Stem("marias"), "mari" );
	deepEqual( Stem("marie"), "mari" );
	deepEqual( Stem("mariebo"), "mariebo" );
	deepEqual( Stem("mariestad"), "mariest" );
	deepEqual( Stem("mariga"), "mar" );
	deepEqual( Stem("mark"), "mark" );
	deepEqual( Stem("markeh"), "markeh" );
	deepEqual( Stem("markel"), "markel" );
	deepEqual( Stem("markels"), "markel" );
	deepEqual( Stem("marken"), "mark" );
	deepEqual( Stem("markena"), "marken" );
	deepEqual( Stem("markens"), "mark" );
	deepEqual( Stem("markerade"), "marker" );
	deepEqual( Stem("markerat"), "marker" );
	deepEqual( Stem("markerna"), "mark" );
	deepEqual( Stem("markligare"), "mark" );
	deepEqual( Stem("marknad"), "markn" );
	deepEqual( Stem("marknaden"), "marknad" );
	deepEqual( Stem("marknadsvimlet"), "marknadsvimlet" );
	deepEqual( Stem("markvärdigt"), "markvärd" );
	deepEqual( Stem("marmor"), "marm" );
	deepEqual( Stem("marmorbordet"), "marmorbordet" );
	deepEqual( Stem("marmorerade"), "marmorer" );
	deepEqual( Stem("marmorn"), "marmorn" );
	deepEqual( Stem("marmorvit"), "marmorvit" );
	deepEqual( Stem("marna"), "marn" );
	deepEqual( Stem("marocko"), "marocko" );
	deepEqual( Stem("marscbtakt"), "marscbtak" );
	deepEqual( Stem("marsch"), "marsch" );
	deepEqual( Stem("marschen"), "marsch" );
	deepEqual( Stem("marskalk"), "marskalk" );
	deepEqual( Stem("marstrand"), "marstrand" );
	deepEqual( Stem("marstrandsfärden"), "marstrandsfärd" );
	deepEqual( Stem("marstrandsresan"), "marstrandsresan" );
	deepEqual( Stem("marsvind"), "marsvind" );
	deepEqual( Stem("marterade"), "marter" );
	deepEqual( Stem("martin"), "martin" );
	deepEqual( Stem("martyr"), "martyr" );
	deepEqual( Stem("mas"), "mas" );
	deepEqual( Stem("masar"), "mas" );
	deepEqual( Stem("mask"), "mask" );
	deepEqual( Stem("masken"), "mask" );
	deepEqual( Stem("masker"), "mask" );
	deepEqual( Stem("maskerad"), "masker" );
	deepEqual( Stem("maskerader"), "maskerad" );
	deepEqual( Stem("maskeras"), "masker" );
	deepEqual( Stem("maskers"), "masker" );
	deepEqual( Stem("maskiner"), "maskin" );
	deepEqual( Stem("maskineriet"), "maskineriet" );
	deepEqual( Stem("maskinerna"), "maskin" );
	deepEqual( Stem("maskor"), "mask" );
	deepEqual( Stem("mass"), "mass" );
	deepEqual( Stem("massa"), "mass" );
	deepEqual( Stem("massage"), "massag" );
	deepEqual( Stem("masserade"), "masser" );
	deepEqual( Stem("massiva"), "massiv" );
	deepEqual( Stem("massor"), "mass" );
	deepEqual( Stem("massorna"), "mass" );
	deepEqual( Stem("mast"), "mast" );
	deepEqual( Stem("maste"), "mast" );
	deepEqual( Stem("masten"), "mast" );
	deepEqual( Stem("master"), "mast" );
	deepEqual( Stem("masterna"), "mast" );
	deepEqual( Stem("mastodonter"), "mastodont" );
	deepEqual( Stem("masurbjörk"), "masurbjörk" );
	deepEqual( Stem("mat"), "mat" );
	deepEqual( Stem("matar"), "mat" );
	deepEqual( Stem("matbit"), "matbit" );
	deepEqual( Stem("matbordet"), "matbordet" );
	deepEqual( Stem("matdagar"), "matdag" );
	deepEqual( Stem("matdagarna"), "matdag" );
	deepEqual( Stem("matdags"), "matdag" );
	deepEqual( Stem("matematiker"), "matematik" );
	deepEqual( Stem("matematikerns"), "matematik" );
	deepEqual( Stem("matematikläraren"), "matematiklär" );
	deepEqual( Stem("matematiktimmarna"), "matematiktimm" );
	deepEqual( Stem("maten"), "mat" );
	deepEqual( Stem("material"), "material" );
	deepEqual( Stem("materiella"), "materiell" );
	deepEqual( Stem("matfebern"), "matfeb" );
	deepEqual( Stem("matfriske"), "matfrisk" );
	deepEqual( Stem("mathämtaren"), "mathämt" );
	deepEqual( Stem("matilda"), "matild" );
	deepEqual( Stem("matildas"), "matild" );
	deepEqual( Stem("matkorgar"), "matkorg" );
	deepEqual( Stem("matlagning"), "matlagning" );
	deepEqual( Stem("matlust"), "matlust" );
	deepEqual( Stem("matmodern"), "matmod" );
	deepEqual( Stem("matmor"), "matm" );
	deepEqual( Stem("matmors"), "matmor" );
	deepEqual( Stem("matmödrars"), "matmödrar" );
	deepEqual( Stem("matos"), "mato" );
	deepEqual( Stem("matoset"), "matoset" );
	deepEqual( Stem("matrona"), "matron" );
	deepEqual( Stem("matronan"), "matronan" );
	deepEqual( Stem("matronor"), "matron" );
	deepEqual( Stem("matros"), "matro" );
	deepEqual( Stem("matroser"), "matros" );
	deepEqual( Stem("mats"), "mat" );
	deepEqual( Stem("matsal"), "matsal" );
	deepEqual( Stem("matsaled"), "matsaled" );
	deepEqual( Stem("matsalen"), "matsal" );
	deepEqual( Stem("matsalskypare"), "matsalskyp" );
	deepEqual( Stem("matsedeln"), "matsedeln" );
	deepEqual( Stem("matsmältningsprocessen"), "matsmältningsprocess" );
	deepEqual( Stem("matsäck"), "matsäck" );
	deepEqual( Stem("matsäcken"), "matsäck" );
	deepEqual( Stem("matt"), "matt" );
	deepEqual( Stem("matta"), "matt" );
	deepEqual( Stem("mattad"), "matt" );
	deepEqual( Stem("mattan"), "mattan" );
	deepEqual( Stem("mattare"), "matt" );
	deepEqual( Stem("mattas"), "matt" );
	deepEqual( Stem("matte"), "matt" );
	deepEqual( Stem("mattfullt"), "mattfull" );
	deepEqual( Stem("mattighet"), "matt" );
	deepEqual( Stem("mattimmen"), "mattimm" );
	deepEqual( Stem("mattinan"), "mattinan" );
	deepEqual( Stem("matvaror"), "matvar" );
	deepEqual( Stem("maupassants"), "maupassant" );
	deepEqual( Stem("mcd"), "mcd" );
	deepEqual( Stem("mcdan"), "mcdan" );
	deepEqual( Stem("mcn"), "mcn" );
	deepEqual( Stem("mcnade"), "mcnad" );
	deepEqual( Stem("mda"), "mda" );
	deepEqual( Stem("me"), "me" );
	deepEqual( Stem("med"), "med" );
	deepEqual( Stem("medaljong"), "medaljong" );
	deepEqual( Stem("medaljongen"), "medaljong" );
	deepEqual( Stem("medan"), "medan" );
	deepEqual( Stem("medborgare"), "medborg" );
	deepEqual( Stem("medbroder"), "medbrod" );
	deepEqual( Stem("medbrottslingen"), "medbrottsling" );
	deepEqual( Stem("meddela"), "meddel" );
	deepEqual( Stem("meddelade"), "meddel" );
	deepEqual( Stem("meddelades"), "meddel" );
	deepEqual( Stem("meddelande"), "meddel" );
	deepEqual( Stem("meddelar"), "meddel" );
	deepEqual( Stem("meddelat"), "meddel" );
	deepEqual( Stem("medel"), "medel" );
	deepEqual( Stem("medelbar"), "medelb" );
	deepEqual( Stem("medelklassfru"), "medelklassfru" );
	deepEqual( Stem("medelmåttan"), "medelmåttan" );
	deepEqual( Stem("medelmåttigt"), "medelmått" );
	deepEqual( Stem("medelproportionalen"), "medelproportional" );
	deepEqual( Stem("medelväg"), "medelväg" );
	deepEqual( Stem("medelvägen"), "medelväg" );
	deepEqual( Stem("medelålder"), "medelåld" );
	deepEqual( Stem("medelålders"), "medelålder" );
	deepEqual( Stem("meden"), "med" );
	deepEqual( Stem("medfog"), "medfog" );
	deepEqual( Stem("medfödd"), "medföd" );
	deepEqual( Stem("medfödda"), "medföd" );
	deepEqual( Stem("medfölja"), "medfölj" );
	deepEqual( Stem("medföljande"), "medfölj" );
	deepEqual( Stem("medföljt"), "medföljt" );
	deepEqual( Stem("medför"), "medför" );
	deepEqual( Stem("medföra"), "medför" );
	deepEqual( Stem("medförde"), "medförd" );
	deepEqual( Stem("medfört"), "medfört" );
	deepEqual( Stem("medfött"), "medföt" );
	deepEqual( Stem("medgaf"), "medgaf" );
	deepEqual( Stem("medgav"), "medgav" );
	deepEqual( Stem("medge"), "medg" );
	deepEqual( Stem("medger"), "medg" );
	deepEqual( Stem("medgifver"), "medgifv" );
	deepEqual( Stem("medgifvit"), "medgifvit" );
	deepEqual( Stem("medgiva"), "medgiv" );
	deepEqual( Stem("medgives"), "medgiv" );
	deepEqual( Stem("medgåfvo"), "medgåfvo" );
	deepEqual( Stem("medgången"), "medgång" );
	deepEqual( Stem("medgörlig"), "medgör" );
	deepEqual( Stem("medgörlighet"), "medgör" );
	deepEqual( Stem("medgörligt"), "medgör" );
	deepEqual( Stem("medhava"), "medhav" );
	deepEqual( Stem("medhjälpare"), "medhjälp" );
	deepEqual( Stem("medicin"), "medicin" );
	deepEqual( Stem("medicine"), "medicin" );
	deepEqual( Stem("medicinerar"), "mediciner" );
	deepEqual( Stem("medicinsk"), "medicinsk" );
	deepEqual( Stem("medikamentskåp"), "medikamentskåp" );
	deepEqual( Stem("medkänsla"), "medkänsl" );
	deepEqual( Stem("medkänslan"), "medkänslan" );
	deepEqual( Stem("medlande"), "medl" );
	deepEqual( Stem("medlarekall"), "medlarekall" );
	deepEqual( Stem("medlem"), "medlem" );
	deepEqual( Stem("medlen"), "medl" );
	deepEqual( Stem("medlet"), "medlet" );
	deepEqual( Stem("medlidande"), "medlid" );
	deepEqual( Stem("medlidsam"), "medlidsam" );
	deepEqual( Stem("medlidsamt"), "medlidsamt" );
	deepEqual( Stem("medmenniska"), "medmennisk" );
	deepEqual( Stem("medmenniskor"), "medmennisk" );
	deepEqual( Stem("medryckt"), "medryck" );
	deepEqual( Stem("medsystrar"), "medsystr" );
	deepEqual( Stem("medtaga"), "medtag" );
	deepEqual( Stem("medtagande"), "medtag" );
	deepEqual( Stem("medtagit"), "medtagit" );
	deepEqual( Stem("medtog"), "medtog" );
	deepEqual( Stem("medtoge"), "medtog" );
	deepEqual( Stem("medverkan"), "medverkan" );
	deepEqual( Stem("medvetande"), "medvet" );
	deepEqual( Stem("medvetandet"), "medvet" );
	deepEqual( Stem("medveten"), "medvet" );
	deepEqual( Stem("medvetenhet"), "medveten" );
	deepEqual( Stem("medvetet"), "medvetet" );
	deepEqual( Stem("medvetna"), "medvetn" );
	deepEqual( Stem("medvetslös"), "medvetslös" );
	deepEqual( Stem("medvetslöst"), "medvetslös" );
	deepEqual( Stem("medömkan"), "medömkan" );
	deepEqual( Stem("mejade"), "mej" );
	deepEqual( Stem("mejramsknipporna"), "mejramsknipp" );
	deepEqual( Stem("mejsel"), "mejsel" );
	deepEqual( Stem("mekanik"), "mekanik" );
	deepEqual( Stem("mekanisk"), "mekanisk" );
	deepEqual( Stem("mekaniskt"), "mekanisk" );
	deepEqual( Stem("mekanismen"), "mekanism" );
	deepEqual( Stem("mel"), "mel" );
	deepEqual( Stem("melan"), "melan" );
	deepEqual( Stem("melankoli"), "melankoli" );
	deepEqual( Stem("melankolisk"), "melankolisk" );
	deepEqual( Stem("melankoliska"), "melankolisk" );
	deepEqual( Stem("melankoliskt"), "melankolisk" );
	deepEqual( Stem("mellan"), "mellan" );
	deepEqual( Stem("mellanlägg"), "mellanlägg" );
	deepEqual( Stem("mellanländskt"), "mellanländsk" );
	deepEqual( Stem("mellanrum"), "mellanrum" );
	deepEqual( Stem("mellanrummet"), "mellanrummet" );
	deepEqual( Stem("mellantid"), "mellantid" );
	deepEqual( Stem("mellantiden"), "mellantid" );
	deepEqual( Stem("mellantider"), "mellantid" );
	deepEqual( Stem("mellberg"), "mellberg" );
	deepEqual( Stem("meller"), "mell" );
	deepEqual( Stem("mellersta"), "mellerst" );
	deepEqual( Stem("mellin"), "mellin" );
	deepEqual( Stem("mellinska"), "mellinsk" );
	deepEqual( Stem("melodi"), "melodi" );
	deepEqual( Stem("melodien"), "melodi" );
	deepEqual( Stem("melodier"), "melodi" );
	deepEqual( Stem("melodin"), "melodin" );
	deepEqual( Stem("melodiskt"), "melodisk" );
	deepEqual( Stem("melssängen"), "melssäng" );
	deepEqual( Stem("melusina"), "melusin" );
	deepEqual( Stem("men"), "men" );
	deepEqual( Stem("mena"), "men" );
	deepEqual( Stem("menad"), "men" );
	deepEqual( Stem("menade"), "men" );
	deepEqual( Stem("menades"), "men" );
	deepEqual( Stem("menadt"), "menad" );
	deepEqual( Stem("menageri"), "menageri" );
	deepEqual( Stem("menande"), "men" );
	deepEqual( Stem("menar"), "men" );
	deepEqual( Stem("menat"), "men" );
	deepEqual( Stem("menbarasvagtmotståndgjordc"), "menbarasvagtmotståndgjordc" );
	deepEqual( Stem("menera"), "mener" );
	deepEqual( Stem("menighet"), "men" );
	deepEqual( Stem("menigheten"), "men" );
	deepEqual( Stem("mening"), "mening" );
	deepEqual( Stem("meningar"), "mening" );
	deepEqual( Stem("meningarna"), "mening" );
	deepEqual( Stem("meningen"), "mening" );
	deepEqual( Stem("meningslösa"), "meningslös" );
	deepEqual( Stem("meningslöst"), "meningslös" );
	deepEqual( Stem("meningsutbytet"), "meningsutbytet" );
	deepEqual( Stem("menliga"), "men" );
	deepEqual( Stem("menlöshet"), "menlös" );
	deepEqual( Stem("menlöst"), "menlös" );
	deepEqual( Stem("menniska"), "mennisk" );
	deepEqual( Stem("menniskan"), "menniskan" );
	deepEqual( Stem("menniskas"), "mennisk" );
	deepEqual( Stem("menniskoben"), "menniskob" );
	deepEqual( Stem("menniskohjertat"), "menniskohjert" );
	deepEqual( Stem("menniskolifs"), "menniskolif" );
	deepEqual( Stem("menniskor"), "mennisk" );
	deepEqual( Stem("menniskorna"), "mennisk" );
	deepEqual( Stem("menniskornas"), "mennisk" );
	deepEqual( Stem("menniskors"), "menniskor" );
	deepEqual( Stem("menniskosnillets"), "menniskosnillet" );
	deepEqual( Stem("menniskostoftets"), "menniskostoftet" );
	deepEqual( Stem("menniskovänliga"), "menniskovän" );
	deepEqual( Stem("menniskoälskande"), "menniskoälsk" );
	deepEqual( Stem("mensklig"), "mensk" );
	deepEqual( Stem("menskliga"), "mensk" );
	deepEqual( Stem("mensklighetens"), "mensk" );
	deepEqual( Stem("menskor"), "mensk" );
	deepEqual( Stem("ment"), "ment" );
	deepEqual( Stem("mente"), "ment" );
	deepEqual( Stem("mentors"), "mentor" );
	deepEqual( Stem("mentsbestridanden"), "mentsbestrid" );
	deepEqual( Stem("menyn"), "menyn" );
	deepEqual( Stem("mer"), "mer" );
	deepEqual( Stem("mera"), "mer" );
	deepEqual( Stem("merendels"), "merendel" );
	deepEqual( Stem("meritförteckning"), "meritförteckning" );
	deepEqual( Stem("meritlistan"), "meritlistan" );
	deepEqual( Stem("mertens"), "mert" );
	deepEqual( Stem("mes"), "mes" );
	deepEqual( Stem("mest"), "mest" );
	deepEqual( Stem("mesta"), "mest" );
	deepEqual( Stem("met"), "met" );
	deepEqual( Stem("meta"), "met" );
	deepEqual( Stem("metade"), "met" );
	deepEqual( Stem("metall"), "metall" );
	deepEqual( Stem("metallens"), "metall" );
	deepEqual( Stem("metallisk"), "metallisk" );
	deepEqual( Stem("metallklangen"), "metallklang" );
	deepEqual( Stem("metar"), "met" );
	deepEqual( Stem("meter"), "met" );
	deepEqual( Stem("metoden"), "metod" );
	deepEqual( Stem("metref"), "metref" );
	deepEqual( Stem("metrefvar"), "metrefv" );
	deepEqual( Stem("metshatt"), "metshat" );
	deepEqual( Stem("metslent"), "metslent" );
	deepEqual( Stem("metspöet"), "metspöet" );
	deepEqual( Stem("metspön"), "metspön" );
	deepEqual( Stem("mevo"), "mevo" );
	deepEqual( Stem("mi"), "mi" );
	deepEqual( Stem("middag"), "middag" );
	deepEqual( Stem("middagar"), "middag" );
	deepEqual( Stem("middagarna"), "middag" );
	deepEqual( Stem("middagen"), "middag" );
	deepEqual( Stem("middags"), "middag" );
	deepEqual( Stem("middagsbjudning"), "middagsbjudning" );
	deepEqual( Stem("middagsbordet"), "middagsbordet" );
	deepEqual( Stem("middagscigarr"), "middagscigarr" );
	deepEqual( Stem("middagslur"), "middagslur" );
	deepEqual( Stem("middagsluren"), "middagslur" );
	deepEqual( Stem("middagsmåltid"), "middagsmåltid" );
	deepEqual( Stem("middagsskymningen"), "middagsskymning" );
	deepEqual( Stem("middagssällskap"), "middagssällskap" );
	deepEqual( Stem("middagssömn"), "middagssömn" );
	deepEqual( Stem("middagstid"), "middagstid" );
	deepEqual( Stem("middagstiden"), "middagstid" );
	deepEqual( Stem("middagstimmen"), "middagstimm" );
	deepEqual( Stem("middagstimmens"), "middagstimm" );
	deepEqual( Stem("midja"), "midj" );
	deepEqual( Stem("midjan"), "midjan" );
	deepEqual( Stem("midjorna"), "midj" );
	deepEqual( Stem("midnatt"), "midnat" );
	deepEqual( Stem("midnattsmässa"), "midnattsmäss" );
	deepEqual( Stem("midnattssolens"), "midnattssol" );
	deepEqual( Stem("midsommar"), "midsomm" );
	deepEqual( Stem("midsommarblomstret"), "midsommarblomstret" );
	deepEqual( Stem("midsommarbål"), "midsommarbål" );
	deepEqual( Stem("midsommarhelgen"), "midsommarhelg" );
	deepEqual( Stem("midsommarlek"), "midsommarlek" );
	deepEqual( Stem("midsommarnatt"), "midsommarnat" );
	deepEqual( Stem("midsommarnattens"), "midsommarnat" );
	deepEqual( Stem("midsommarstång"), "midsommarstång" );
	deepEqual( Stem("midsommartiden"), "midsommartid" );
	deepEqual( Stem("midt"), "midt" );
	deepEqual( Stem("midtemot"), "midtemot" );
	deepEqual( Stem("midten"), "midt" );
	deepEqual( Stem("mig"), "mig" );
	deepEqual( Stem("miga"), "mig" );
	deepEqual( Stem("migl"), "migl" );
	deepEqual( Stem("mikael"), "mikael" );
	deepEqual( Stem("mil"), "mil" );
	deepEqual( Stem("mild"), "mild" );
	deepEqual( Stem("milda"), "mild" );
	deepEqual( Stem("mildare"), "mild" );
	deepEqual( Stem("mildaste"), "mild" );
	deepEqual( Stem("milde"), "mild" );
	deepEqual( Stem("mildhet"), "mild" );
	deepEqual( Stem("mildrade"), "mildr" );
	deepEqual( Stem("mildrades"), "mildr" );
	deepEqual( Stem("mildt"), "mild" );
	deepEqual( Stem("milens"), "mil" );
	deepEqual( Stem("militär"), "militär" );
	deepEqual( Stem("militären"), "militär" );
	deepEqual( Stem("militärer"), "militär" );
	deepEqual( Stem("militärerna"), "militär" );
	deepEqual( Stem("miljardism"), "miljardism" );
	deepEqual( Stem("miljö"), "miljö" );
	deepEqual( Stem("miljön"), "miljön" );
	deepEqual( Stem("million"), "million" );
	deepEqual( Stem("millioner"), "million" );
	deepEqual( Stem("millionstad"), "millionst" );
	deepEqual( Stem("milme"), "milm" );
	deepEqual( Stem("mils"), "mil" );
	deepEqual( Stem("milstolpe"), "milstolp" );
	deepEqual( Stem("milt"), "milt" );
	deepEqual( Stem("mimik"), "mimik" );
	deepEqual( Stem("min"), "min" );
	deepEqual( Stem("mina"), "min" );
	deepEqual( Stem("minde"), "mind" );
	deepEqual( Stem("minderåriga"), "minderår" );
	deepEqual( Stem("mindes"), "mind" );
	deepEqual( Stem("mindre"), "mindr" );
	deepEqual( Stem("minen"), "min" );
	deepEqual( Stem("miner"), "min" );
	deepEqual( Stem("miniatyr"), "miniatyr" );
	deepEqual( Stem("miniatyrer"), "miniatyr" );
	deepEqual( Stem("minimala"), "minimal" );
	deepEqual( Stem("minnas"), "minn" );
	deepEqual( Stem("minnc"), "minnc" );
	deepEqual( Stem("minne"), "minn" );
	deepEqual( Stem("minnelse"), "minn" );
	deepEqual( Stem("minnen"), "minn" );
	deepEqual( Stem("minnens"), "minn" );
	deepEqual( Stem("minnes"), "minn" );
	deepEqual( Stem("minnesbeta"), "minnesbet" );
	deepEqual( Stem("minnesbetan"), "minnesbetan" );
	deepEqual( Stem("minnesslö"), "minnesslö" );
	deepEqual( Stem("minnet"), "minnet" );
	deepEqual( Stem("minns"), "minn" );
	deepEqual( Stem("minnsann"), "minnsan" );
	deepEqual( Stem("mins"), "min" );
	deepEqual( Stem("minsann"), "minsan" );
	deepEqual( Stem("minska"), "minsk" );
	deepEqual( Stem("minskades"), "minsk" );
	deepEqual( Stem("minskar"), "minsk" );
	deepEqual( Stem("minskning"), "minskning" );
	deepEqual( Stem("minst"), "minst" );
	deepEqual( Stem("minsta"), "minst" );
	deepEqual( Stem("minut"), "minut" );
	deepEqual( Stem("minuten"), "minut" );
	deepEqual( Stem("minuter"), "minut" );
	deepEqual( Stem("minuterna"), "minut" );
	deepEqual( Stem("minuters"), "minuter" );
	deepEqual( Stem("miserablaste"), "miserabl" );
	deepEqual( Stem("miss"), "miss" );
	deepEqual( Stem("missat"), "miss" );
	deepEqual( Stem("missbelåten"), "missbelåt" );
	deepEqual( Stem("missbildat"), "missbild" );
	deepEqual( Stem("missbilliga"), "missbil" );
	deepEqual( Stem("missbruka"), "missbruk" );
	deepEqual( Stem("missbrukade"), "missbruk" );
	deepEqual( Stem("missbrukar"), "missbruk" );
	deepEqual( Stem("missbrukas"), "missbruk" );
	deepEqual( Stem("missfall"), "missfall" );
	deepEqual( Stem("missfoster"), "missfost" );
	deepEqual( Stem("missfostret"), "missfostret" );
	deepEqual( Stem("missförhållande"), "missförhåll" );
	deepEqual( Stem("missförstod"), "missförstod" );
	deepEqual( Stem("missförstå"), "missförstå" );
	deepEqual( Stem("missförstånd"), "missförstånd" );
	deepEqual( Stem("missgrepp"), "missgrepp" );
	deepEqual( Stem("misshag"), "misshag" );
	deepEqual( Stem("misshagade"), "misshag" );
	deepEqual( Stem("misshagar"), "misshag" );
	deepEqual( Stem("misshandel"), "misshandel" );
	deepEqual( Stem("missioncn"), "missioncn" );
	deepEqual( Stem("missionsskolan"), "missionsskolan" );
	deepEqual( Stem("missionsskolans"), "missionsskolan" );
	deepEqual( Stem("missionsverksamhet"), "missionsverksam" );
	deepEqual( Stem("missionär"), "missionär" );
	deepEqual( Stem("missklädde"), "misskläd" );
	deepEqual( Stem("missklädt"), "misskläd" );
	deepEqual( Stem("misskänna"), "misskän" );
	deepEqual( Stem("misskänner"), "misskän" );
	deepEqual( Stem("misskänt"), "misskänt" );
	deepEqual( Stem("misskötta"), "missköt" );
	deepEqual( Stem("missleddes"), "missled" );
	deepEqual( Stem("missljud"), "missljud" );
	deepEqual( Stem("misslyckad"), "misslyck" );
	deepEqual( Stem("misslyckade"), "misslyck" );
	deepEqual( Stem("misslyckades"), "misslyck" );
	deepEqual( Stem("misslyckande"), "misslyck" );
	deepEqual( Stem("misslyckas"), "misslyck" );
	deepEqual( Stem("misslynt"), "misslynt" );
	deepEqual( Stem("misslynthet"), "misslynt" );
	deepEqual( Stem("missmodig"), "missmod" );
	deepEqual( Stem("missnöjd"), "missnöjd" );
	deepEqual( Stem("missnöjda"), "missnöjd" );
	deepEqual( Stem("missnöje"), "missnöj" );
	deepEqual( Stem("missnöjets"), "missnöjet" );
	deepEqual( Stem("missräkning"), "missräkning" );
	deepEqual( Stem("missräkningar"), "missräkning" );
	deepEqual( Stem("misstag"), "misstag" );
	deepEqual( Stem("misstaga"), "misstag" );
	deepEqual( Stem("misstager"), "misstag" );
	deepEqual( Stem("misstaget"), "misstaget" );
	deepEqual( Stem("misstagit"), "misstagit" );
	deepEqual( Stem("misstankar"), "misstank" );
	deepEqual( Stem("misstanke"), "misstank" );
	deepEqual( Stem("misstanken"), "misstank" );
	deepEqual( Stem("misstar"), "misst" );
	deepEqual( Stem("misstog"), "misstog" );
	deepEqual( Stem("misstolkas"), "misstolk" );
	deepEqual( Stem("misstro"), "misstro" );
	deepEqual( Stem("misstrodde"), "misstrod" );
	deepEqual( Stem("misstroende"), "misstroend" );
	deepEqual( Stem("misstrogen"), "misstrog" );
	deepEqual( Stem("misstyck"), "misstyck" );
	deepEqual( Stem("misstycka"), "misstyck" );
	deepEqual( Stem("misstycker"), "misstyck" );
	deepEqual( Stem("misstyd"), "misstyd" );
	deepEqual( Stem("misstyda"), "misstyd" );
	deepEqual( Stem("misstydas"), "misstyd" );
	deepEqual( Stem("misstydde"), "misstyd" );
	deepEqual( Stem("misstyder"), "misstyd" );
	deepEqual( Stem("misstänka"), "misstänk" );
	deepEqual( Stem("misstänker"), "misstänk" );
	deepEqual( Stem("misstänksam"), "misstänksam" );
	deepEqual( Stem("misstänksamhet"), "misstänksam" );
	deepEqual( Stem("misstänksamt"), "misstänksamt" );
	deepEqual( Stem("misstänkt"), "misstänk" );
	deepEqual( Stem("misstänkta"), "misstänk" );
	deepEqual( Stem("misstänkte"), "misstänk" );
	deepEqual( Stem("missunna"), "missun" );
	deepEqual( Stem("missöde"), "missöd" );
	deepEqual( Stem("missöden"), "missöd" );
	deepEqual( Stem("missödet"), "missödet" );
	deepEqual( Stem("mist"), "mist" );
	deepEqual( Stem("mista"), "mist" );
	deepEqual( Stem("mistad"), "mist" );
	deepEqual( Stem("mistat"), "mist" );
	deepEqual( Stem("miste"), "mist" );
	deepEqual( Stem("mister"), "mist" );
	deepEqual( Stem("misär"), "misär" );
	deepEqual( Stem("mit"), "mit" );
	deepEqual( Stem("mitt"), "mitt" );
	deepEqual( Stem("mittbenat"), "mittben" );
	deepEqual( Stem("mittelgången"), "mittelgång" );
	deepEqual( Stem("mittemellan"), "mittemellan" );
	deepEqual( Stem("mittemot"), "mittemot" );
	deepEqual( Stem("mitten"), "mitt" );
	deepEqual( Stem("mittpunkt"), "mittpunk" );
	deepEqual( Stem("mittpå"), "mittpå" );
	deepEqual( Stem("mittunder"), "mittund" );
	deepEqual( Stem("mivit"), "mivit" );
	deepEqual( Stem("mixtur"), "mixtur" );
	deepEqual( Stem("mjella"), "mjell" );
	deepEqual( Stem("mjeltsjuk"), "mjeltsjuk" );
	deepEqual( Stem("mjeltsjuka"), "mjeltsjuk" );
	deepEqual( Stem("mjugg"), "mjugg" );
	deepEqual( Stem("mjuk"), "mjuk" );
	deepEqual( Stem("mjuka"), "mjuk" );
	deepEqual( Stem("mjukare"), "mjuk" );
	deepEqual( Stem("mjukaste"), "mjuk" );
	deepEqual( Stem("mjukhet"), "mjuk" );
	deepEqual( Stem("mjukt"), "mjukt" );
	deepEqual( Stem("mjälla"), "mjäll" );
	deepEqual( Stem("mjältsjuk"), "mjältsjuk" );
	deepEqual( Stem("mjältsjuka"), "mjältsjuk" );
	deepEqual( Stem("mjöd"), "mjöd" );
	deepEqual( Stem("mjöl"), "mjöl" );
	deepEqual( Stem("mjölade"), "mjöl" );
	deepEqual( Stem("mjöldustet"), "mjöldustet" );
	deepEqual( Stem("mjölig"), "mjöl" );
	deepEqual( Stem("mjöligt"), "mjöl" );
	deepEqual( Stem("mjölk"), "mjölk" );
	deepEqual( Stem("mjölkade"), "mjölk" );
	deepEqual( Stem("mjölkaret"), "mjölkaret" );
	deepEqual( Stem("mjölkbyttor"), "mjölkbyt" );
	deepEqual( Stem("mjölken"), "mjölk" );
	deepEqual( Stem("mjölkmagasinet"), "mjölkmagasinet" );
	deepEqual( Stem("mjölkmuggen"), "mjölkmugg" );
	deepEqual( Stem("mjölkvällingen"), "mjölkvälling" );
	deepEqual( Stem("mjölnarn"), "mjölnarn" );
	deepEqual( Stem("mjölnarne"), "mjöln" );
	deepEqual( Stem("mjölsiktningen"), "mjölsiktning" );
	deepEqual( Stem("mjölskäppan"), "mjölskäppan" );
	deepEqual( Stem("mjölsäckar"), "mjölsäck" );
	deepEqual( Stem("mjöltunnan"), "mjöltunnan" );
	deepEqual( Stem("ml"), "ml" );
	deepEqual( Stem("mldrade"), "mldrad" );
	deepEqual( Stem("mlg"), "mlg" );
	deepEqual( Stem("mll"), "mll" );
	deepEqual( Stem("mln"), "mln" );
	deepEqual( Stem("mlskan"), "mlskan" );
	deepEqual( Stem("mn"), "mn" );
	deepEqual( Stem("mna"), "mna" );
	deepEqual( Stem("mngen"), "mngen" );
	deepEqual( Stem("mnn"), "mnn" );
	deepEqual( Stem("mod"), "mod" );
	deepEqual( Stem("modd"), "modd" );
	deepEqual( Stem("modehandlerskor"), "modehandlersk" );
	deepEqual( Stem("modell"), "modell" );
	deepEqual( Stem("modellerade"), "modeller" );
	deepEqual( Stem("moder"), "mod" );
	deepEqual( Stem("moderat"), "moder" );
	deepEqual( Stem("moderlig"), "moder" );
	deepEqual( Stem("moderliga"), "moder" );
	deepEqual( Stem("moderligt"), "moder" );
	deepEqual( Stem("moderlös"), "moderlös" );
	deepEqual( Stem("moderlösa"), "moderlös" );
	deepEqual( Stem("moderlöse"), "moderlös" );
	deepEqual( Stem("modern"), "mod" );
	deepEqual( Stem("moderna"), "mod" );
	deepEqual( Stem("moderniserad"), "moderniser" );
	deepEqual( Stem("moderns"), "mod" );
	deepEqual( Stem("modernt"), "modernt" );
	deepEqual( Stem("moders"), "moder" );
	deepEqual( Stem("modersbarm"), "modersbarm" );
	deepEqual( Stem("modersbröst"), "modersbröst" );
	deepEqual( Stem("modersbröstet"), "modersbröstet" );
	deepEqual( Stem("modershjerta"), "modershjert" );
	deepEqual( Stem("modershjärtat"), "modershjärt" );
	deepEqual( Stem("moderskapets"), "moderskapet" );
	deepEqual( Stem("modesta"), "modest" );
	deepEqual( Stem("modet"), "modet" );
	deepEqual( Stem("modfäld"), "modfäld" );
	deepEqual( Stem("modfälld"), "modfälld" );
	deepEqual( Stem("modig"), "mod" );
	deepEqual( Stem("modiga"), "mod" );
	deepEqual( Stem("modigare"), "mod" );
	deepEqual( Stem("modigt"), "mod" );
	deepEqual( Stem("modlöshet"), "modlös" );
	deepEqual( Stem("modlöst"), "modlös" );
	deepEqual( Stem("modrar"), "modr" );
	deepEqual( Stem("mods"), "mod" );
	deepEqual( Stem("modstulenhet"), "modstulen" );
	deepEqual( Stem("modulerade"), "moduler" );
	deepEqual( Stem("modus"), "modus" );
	deepEqual( Stem("modärna"), "modärn" );
	deepEqual( Stem("mogen"), "mog" );
	deepEqual( Stem("moget"), "moget" );
	deepEqual( Stem("mogma"), "mogm" );
	deepEqual( Stem("mogna"), "mogn" );
	deepEqual( Stem("mognade"), "mogn" );
	deepEqual( Stem("mognadt"), "mognad" );
	deepEqual( Stem("mognar"), "mogn" );
	deepEqual( Stem("mognare"), "mogn" );
	deepEqual( Stem("mognat"), "mogn" );
	deepEqual( Stem("mohikanen"), "mohikan" );
	deepEqual( Stem("mokat"), "mok" );
	deepEqual( Stem("molande"), "mol" );
	deepEqual( Stem("molat"), "mol" );
	deepEqual( Stem("moll"), "moll" );
	deepEqual( Stem("moln"), "moln" );
	deepEqual( Stem("molnen"), "moln" );
	deepEqual( Stem("molnet"), "molnet" );
	deepEqual( Stem("molnkransen"), "molnkrans" );
	deepEqual( Stem("molnmassorna"), "molnmass" );
	deepEqual( Stem("molnskockarna"), "molnskock" );
	deepEqual( Stem("moltke"), "moltk" );
	deepEqual( Stem("mon"), "mon" );
	deepEqual( Stem("monarda"), "monard" );
	deepEqual( Stem("monark"), "monark" );
	deepEqual( Stem("monda"), "mond" );
	deepEqual( Stem("mondäna"), "mondän" );
	deepEqual( Stem("monsieur"), "monsieur" );
	deepEqual( Stem("monte"), "mont" );
	deepEqual( Stem("montmartre"), "montmartr" );
	deepEqual( Stem("mor"), "mor" );
	deepEqual( Stem("mora"), "mor" );
	deepEqual( Stem("moral"), "moral" );
	deepEqual( Stem("moralen"), "moral" );
	deepEqual( Stem("moralens"), "moral" );
	deepEqual( Stem("moraler"), "moral" );
	deepEqual( Stem("moraliska"), "moralisk" );
	deepEqual( Stem("moraliskt"), "moralisk" );
	deepEqual( Stem("moralitet"), "moralitet" );
	deepEqual( Stem("morb"), "morb" );
	deepEqual( Stem("morbror"), "morbr" );
	deepEqual( Stem("morbrors"), "morbror" );
	deepEqual( Stem("mord"), "mord" );
	deepEqual( Stem("mordet"), "mordet" );
	deepEqual( Stem("mordiska"), "mordisk" );
	deepEqual( Stem("mordnatten"), "mordnat" );
	deepEqual( Stem("mordredskap"), "mordredskap" );
	deepEqual( Stem("morell"), "morell" );
	deepEqual( Stem("mores"), "mor" );
	deepEqual( Stem("morfar"), "morf" );
	deepEqual( Stem("morföräldrar"), "morföräldr" );
	deepEqual( Stem("morföräldrarnas"), "morföräldr" );
	deepEqual( Stem("morgnar"), "morgn" );
	deepEqual( Stem("morgnarna"), "morgn" );
	deepEqual( Stem("morgnarne"), "morgn" );
	deepEqual( Stem("morgon"), "morgon" );
	deepEqual( Stem("morgonarbete"), "morgonarbet" );
	deepEqual( Stem("morgoncn"), "morgoncn" );
	deepEqual( Stem("morgondagen"), "morgondag" );
	deepEqual( Stem("morgondagens"), "morgondag" );
	deepEqual( Stem("morgondaggen"), "morgondagg" );
	deepEqual( Stem("morgonen"), "morgon" );
	deepEqual( Stem("morgonens"), "morgon" );
	deepEqual( Stem("morgonglada"), "morgonglad" );
	deepEqual( Stem("morgongryningen"), "morgongryning" );
	deepEqual( Stem("morgongrått"), "morgongråt" );
	deepEqual( Stem("morgonhimlen"), "morgonhiml" );
	deepEqual( Stem("morgonkaffe"), "morgonkaff" );
	deepEqual( Stem("morgonpromenad"), "morgonpromen" );
	deepEqual( Stem("morgonpromenader"), "morgonpromenad" );
	deepEqual( Stem("morgonritt"), "morgonrit" );
	deepEqual( Stem("morgonritter"), "morgonrit" );
	deepEqual( Stem("morgonrock"), "morgonrock" );
	deepEqual( Stem("morgonrocken"), "morgonrock" );
	deepEqual( Stem("morgonsolen"), "morgonsol" );
	deepEqual( Stem("morgonstjerna"), "morgonstj" );
	deepEqual( Stem("morgonstund"), "morgonstund" );
	deepEqual( Stem("morgonstunder"), "morgonstund" );
	deepEqual( Stem("morgonvandringen"), "morgonvandring" );
	deepEqual( Stem("morgonvatten"), "morgonvat" );
	deepEqual( Stem("morior"), "mori" );
	deepEqual( Stem("morka"), "mork" );
	deepEqual( Stem("morknar"), "morkn" );
	deepEqual( Stem("morkret"), "morkret" );
	deepEqual( Stem("mormor"), "morm" );
	deepEqual( Stem("mormors"), "mormor" );
	deepEqual( Stem("morna"), "morn" );
	deepEqual( Stem("morrade"), "morr" );
	deepEqual( Stem("morrande"), "morr" );
	deepEqual( Stem("morrning"), "morrning" );
	deepEqual( Stem("mors"), "mor" );
	deepEqual( Stem("morse"), "mors" );
	deepEqual( Stem("morskt"), "morsk" );
	deepEqual( Stem("mortel"), "mortel" );
	deepEqual( Stem("mosaik"), "mosaik" );
	deepEqual( Stem("mosiga"), "mos" );
	deepEqual( Stem("mosin"), "mosin" );
	deepEqual( Stem("mossa"), "moss" );
	deepEqual( Stem("mossan"), "mossan" );
	deepEqual( Stem("mossen"), "moss" );
	deepEqual( Stem("moster"), "most" );
	deepEqual( Stem("mosters"), "moster" );
	deepEqual( Stem("mostrar"), "mostr" );
	deepEqual( Stem("mot"), "mot" );
	deepEqual( Stem("motarbeta"), "motarbet" );
	deepEqual( Stem("motarbetade"), "motarbet" );
	deepEqual( Stem("motarbetas"), "motarbet" );
	deepEqual( Stem("motbjudande"), "motbjud" );
	deepEqual( Stem("motgift"), "motgift" );
	deepEqual( Stem("motgångar"), "motgång" );
	deepEqual( Stem("motgången"), "motgång" );
	deepEqual( Stem("motiv"), "motiv" );
	deepEqual( Stem("motiverat"), "motiver" );
	deepEqual( Stem("motor"), "mot" );
	deepEqual( Stem("motorernas"), "motor" );
	deepEqual( Stem("motorn"), "motorn" );
	deepEqual( Stem("motsade"), "mots" );
	deepEqual( Stem("motsades"), "mots" );
	deepEqual( Stem("motsagt"), "motsag" );
	deepEqual( Stem("motsats"), "motsat" );
	deepEqual( Stem("motsatsen"), "motsats" );
	deepEqual( Stem("motsatser"), "motsats" );
	deepEqual( Stem("motsatt"), "motsat" );
	deepEqual( Stem("motsatta"), "motsat" );
	deepEqual( Stem("motspänstighet"), "motspänst" );
	deepEqual( Stem("motstod"), "motstod" );
	deepEqual( Stem("motsträfvighet"), "motsträfv" );
	deepEqual( Stem("motsträviga"), "motsträv" );
	deepEqual( Stem("motsträvige"), "motsträv" );
	deepEqual( Stem("motsträvighet"), "motsträv" );
	deepEqual( Stem("motsträvigt"), "motsträv" );
	deepEqual( Stem("motstå"), "motstå" );
	deepEqual( Stem("motstånd"), "motstånd" );
	deepEqual( Stem("motståndet"), "motståndet" );
	deepEqual( Stem("motsvara"), "motsvar" );
	deepEqual( Stem("motsäga"), "motsäg" );
	deepEqual( Stem("motsägelse"), "motsäg" );
	deepEqual( Stem("motsägelsen"), "motsäg" );
	deepEqual( Stem("motsägelser"), "motsäg" );
	deepEqual( Stem("mott"), "mott" );
	deepEqual( Stem("mottag"), "mottag" );
	deepEqual( Stem("mottaga"), "mottag" );
	deepEqual( Stem("mottagande"), "mottag" );
	deepEqual( Stem("mottagandet"), "mottag" );
	deepEqual( Stem("mottagas"), "mottag" );
	deepEqual( Stem("mottagen"), "mottag" );
	deepEqual( Stem("mottager"), "mottag" );
	deepEqual( Stem("mottagit"), "mottagit" );
	deepEqual( Stem("mottagna"), "mottagn" );
	deepEqual( Stem("mottagning"), "mottagning" );
	deepEqual( Stem("mottagningen"), "mottagning" );
	deepEqual( Stem("mottagningsrum"), "mottagningsrum" );
	deepEqual( Stem("mottagningsrummet"), "mottagningsrummet" );
	deepEqual( Stem("mottagningstiden"), "mottagningstid" );
	deepEqual( Stem("mottagningstidens"), "mottagningstid" );
	deepEqual( Stem("mottagningstimmen"), "mottagningstimm" );
	deepEqual( Stem("mottog"), "mottog" );
	deepEqual( Stem("mottogo"), "mottogo" );
	deepEqual( Stem("mottogs"), "mottog" );
	deepEqual( Stem("motvilja"), "motvilj" );
	deepEqual( Stem("motvillighet"), "motvil" );
	deepEqual( Stem("motvilligt"), "motvil" );
	deepEqual( Stem("moy"), "moy" );
	deepEqual( Stem("mozart"), "mozart" );
	deepEqual( Stem("mq"), "mq" );
	deepEqual( Stem("mr"), "mr" );
	deepEqual( Stem("ms"), "ms" );
	deepEqual( Stem("mte"), "mte" );
	deepEqual( Stem("muffen"), "muff" );
	deepEqual( Stem("mulen"), "mul" );
	deepEqual( Stem("mulet"), "mulet" );
	deepEqual( Stem("mull"), "mull" );
	deepEqual( Stem("mullen"), "mull" );
	deepEqual( Stem("mullig"), "mul" );
	deepEqual( Stem("mullrar"), "mullr" );
	deepEqual( Stem("mulna"), "muln" );
	deepEqual( Stem("mulnade"), "muln" );
	deepEqual( Stem("mum"), "mum" );
	deepEqual( Stem("mumielika"), "mumielik" );
	deepEqual( Stem("mumla"), "muml" );
	deepEqual( Stem("mumlade"), "muml" );
	deepEqual( Stem("mumlande"), "muml" );
	deepEqual( Stem("mumlar"), "muml" );
	deepEqual( Stem("mumlat"), "muml" );
	deepEqual( Stem("mumlet"), "mumlet" );
	deepEqual( Stem("mumm"), "mumm" );
	deepEqual( Stem("mums"), "mum" );
	deepEqual( Stem("mumsa"), "mums" );
	deepEqual( Stem("mumsade"), "mums" );
	deepEqual( Stem("mumsande"), "mums" );
	deepEqual( Stem("mumsat"), "mums" );
	deepEqual( Stem("mun"), "mun" );
	deepEqual( Stem("mund"), "mund" );
	deepEqual( Stem("mungipor"), "mungip" );
	deepEqual( Stem("mungiporna"), "mungip" );
	deepEqual( Stem("munken"), "munk" );
	deepEqual( Stem("munklegend"), "munklegend" );
	deepEqual( Stem("munnar"), "munn" );
	deepEqual( Stem("munnarna"), "munn" );
	deepEqual( Stem("munnen"), "munn" );
	deepEqual( Stem("munsbit"), "munsbit" );
	deepEqual( Stem("munstycken"), "munstyck" );
	deepEqual( Stem("munter"), "munt" );
	deepEqual( Stem("munterhet"), "munter" );
	deepEqual( Stem("muntert"), "muntert" );
	deepEqual( Stem("muntlig"), "munt" );
	deepEqual( Stem("muntligen"), "munt" );
	deepEqual( Stem("muntligt"), "munt" );
	deepEqual( Stem("muntra"), "muntr" );
	deepEqual( Stem("muntrande"), "muntr" );
	deepEqual( Stem("muntrare"), "muntr" );
	deepEqual( Stem("muntraste"), "muntr" );
	deepEqual( Stem("muntre"), "muntr" );
	deepEqual( Stem("munvig"), "munv" );
	deepEqual( Stem("munvädren"), "munvädr" );
	deepEqual( Stem("mur"), "mur" );
	deepEqual( Stem("murar"), "mur" );
	deepEqual( Stem("murarna"), "mur" );
	deepEqual( Stem("murbruket"), "murbruket" );
	deepEqual( Stem("muren"), "mur" );
	deepEqual( Stem("murken"), "murk" );
	deepEqual( Stem("murket"), "murket" );
	deepEqual( Stem("murklor"), "murkl" );
	deepEqual( Stem("murklorna"), "murkl" );
	deepEqual( Stem("murkna"), "murkn" );
	deepEqual( Stem("murre"), "murr" );
	deepEqual( Stem("murvel"), "murvel" );
	deepEqual( Stem("murvlar"), "murvl" );
	deepEqual( Stem("murvlarna"), "murvl" );
	deepEqual( Stem("mus"), "mus" );
	deepEqual( Stem("musa"), "mus" );
	deepEqual( Stem("museer"), "muse" );
	deepEqual( Stem("museet"), "museet" );
	deepEqual( Stem("musen"), "mus" );
	deepEqual( Stem("musik"), "musik" );
	deepEqual( Stem("musikalisk"), "musikalisk" );
	deepEqual( Stem("musikaliske"), "musikalisk" );
	deepEqual( Stem("musikanter"), "musikant" );
	deepEqual( Stem("musiken"), "musik" );
	deepEqual( Stem("musikens"), "musik" );
	deepEqual( Stem("musiker"), "musik" );
	deepEqual( Stem("musiknummer"), "musiknumm" );
	deepEqual( Stem("muskel"), "muskel" );
	deepEqual( Stem("muskelspelet"), "muskelspelet" );
	deepEqual( Stem("muskelstarka"), "muskelstark" );
	deepEqual( Stem("musklerna"), "muskl" );
	deepEqual( Stem("muskulatur"), "muskulatur" );
	deepEqual( Stem("muskulös"), "muskulös" );
	deepEqual( Stem("muskötskott"), "muskötskot" );
	deepEqual( Stem("muslinsgardinen"), "muslinsgardin" );
	deepEqual( Stem("musslinsduken"), "musslinsduk" );
	deepEqual( Stem("must"), "must" );
	deepEqual( Stem("mustasch"), "mustasch" );
	deepEqual( Stem("mustascher"), "mustasch" );
	deepEqual( Stem("musten"), "must" );
	deepEqual( Stem("mustig"), "must" );
	deepEqual( Stem("mustiga"), "must" );
	deepEqual( Stem("muta"), "mut" );
	deepEqual( Stem("muttrade"), "muttr" );
	deepEqual( Stem("muttrande"), "muttr" );
	deepEqual( Stem("myckct"), "myckct" );
	deepEqual( Stem("mycke"), "myck" );
	deepEqual( Stem("mycken"), "myck" );
	deepEqual( Stem("myckenhet"), "mycken" );
	deepEqual( Stem("mycket"), "mycket" );
	deepEqual( Stem("myckna"), "myckn" );
	deepEqual( Stem("myeket"), "myeket" );
	deepEqual( Stem("mygg"), "mygg" );
	deepEqual( Stem("myggan"), "myggan" );
	deepEqual( Stem("myggen"), "mygg" );
	deepEqual( Stem("myggor"), "mygg" );
	deepEqual( Stem("myggorna"), "mygg" );
	deepEqual( Stem("myling"), "myling" );
	deepEqual( Stem("mylingarna"), "myling" );
	deepEqual( Stem("mylla"), "myll" );
	deepEqual( Stem("myllrande"), "myllr" );
	deepEqual( Stem("myllrar"), "myllr" );
	deepEqual( Stem("myndig"), "mynd" );
	deepEqual( Stem("myndiga"), "mynd" );
	deepEqual( Stem("myndigare"), "mynd" );
	deepEqual( Stem("myndighet"), "mynd" );
	deepEqual( Stem("myndigheters"), "myndigheter" );
	deepEqual( Stem("myndighets"), "myndighet" );
	deepEqual( Stem("myndling"), "myndling" );
	deepEqual( Stem("mynnat"), "mynn" );
	deepEqual( Stem("mynt"), "mynt" );
	deepEqual( Stem("myra"), "myr" );
	deepEqual( Stem("myran"), "myran" );
	deepEqual( Stem("myrarna"), "myr" );
	deepEqual( Stem("myren"), "myr" );
	deepEqual( Stem("myriader"), "myriad" );
	deepEqual( Stem("myror"), "myr" );
	deepEqual( Stem("myrstack"), "myrstack" );
	deepEqual( Stem("myrstackarna"), "myrstack" );
	deepEqual( Stem("myrten"), "myrt" );
	deepEqual( Stem("myrtenträd"), "myrtenträd" );
	deepEqual( Stem("mysande"), "mys" );
	deepEqual( Stem("myst"), "myst" );
	deepEqual( Stem("myste"), "myst" );
	deepEqual( Stem("mysterer"), "myster" );
	deepEqual( Stem("mysterium"), "mysterium" );
	deepEqual( Stem("mystifikation"), "mystifikation" );
	deepEqual( Stem("mystifikationer"), "mystifikation" );
	deepEqual( Stem("mystik"), "mystik" );
	deepEqual( Stem("mystisk"), "mystisk" );
	deepEqual( Stem("mystiska"), "mystisk" );
	deepEqual( Stem("mystiskt"), "mystisk" );
	deepEqual( Stem("myten"), "myt" );
	deepEqual( Stem("mäblerna"), "mäbl" );
	deepEqual( Stem("mägtade"), "mägt" );
	deepEqual( Stem("mägtig"), "mägt" );
	deepEqual( Stem("mägtigt"), "mägt" );
	deepEqual( Stem("mäkta"), "mäkt" );
	deepEqual( Stem("mäktig"), "mäkt" );
	deepEqual( Stem("mäktiga"), "mäkt" );
	deepEqual( Stem("mäktigare"), "mäkt" );
	deepEqual( Stem("mäktigt"), "mäkt" );
	deepEqual( Stem("mälarbåten"), "mälarbåt" );
	deepEqual( Stem("mälaren"), "mäl" );
	deepEqual( Stem("mälarens"), "mäl" );
	deepEqual( Stem("mälmiskornas"), "mälmisk" );
	deepEqual( Stem("män"), "män" );
	deepEqual( Stem("mändell"), "mändell" );
	deepEqual( Stem("mänga"), "mäng" );
	deepEqual( Stem("mängd"), "mäng" );
	deepEqual( Stem("mängden"), "mäng" );
	deepEqual( Stem("männen"), "männ" );
	deepEqual( Stem("männens"), "männ" );
	deepEqual( Stem("männer"), "männ" );
	deepEqual( Stem("männerna"), "männ" );
	deepEqual( Stem("människa"), "människ" );
	deepEqual( Stem("människan"), "människan" );
	deepEqual( Stem("människans"), "människan" );
	deepEqual( Stem("människas"), "människ" );
	deepEqual( Stem("människo"), "människo" );
	deepEqual( Stem("människobarnens"), "människobarn" );
	deepEqual( Stem("människofiskare"), "människofisk" );
	deepEqual( Stem("människofruktan"), "människofruktan" );
	deepEqual( Stem("människokännedom"), "människokännedom" );
	deepEqual( Stem("människokärlek"), "människokärlek" );
	deepEqual( Stem("människoliv"), "människoliv" );
	deepEqual( Stem("människomaterial"), "människomaterial" );
	deepEqual( Stem("människopsykologi"), "människopsykologi" );
	deepEqual( Stem("människor"), "människ" );
	deepEqual( Stem("människorna"), "människ" );
	deepEqual( Stem("människornas"), "människ" );
	deepEqual( Stem("människors"), "människor" );
	deepEqual( Stem("människorätt"), "människorät" );
	deepEqual( Stem("människoskygghet"), "människoskygg" );
	deepEqual( Stem("människosläktet"), "människosläktet" );
	deepEqual( Stem("människosonen"), "människoson" );
	deepEqual( Stem("människosort"), "människosort" );
	deepEqual( Stem("människovilja"), "människovilj" );
	deepEqual( Stem("människovimlet"), "människovimlet" );
	deepEqual( Stem("människovän"), "människovän" );
	deepEqual( Stem("mäns"), "män" );
	deepEqual( Stem("mänska"), "mänsk" );
	deepEqual( Stem("mänsklig"), "mänsk" );
	deepEqual( Stem("mänskliga"), "mänsk" );
	deepEqual( Stem("mänskligheten"), "mänsk" );
	deepEqual( Stem("mänsklighetens"), "mänsk" );
	deepEqual( Stem("mänskligt"), "mänsk" );
	deepEqual( Stem("mänskor"), "mänsk" );
	deepEqual( Stem("märg"), "märg" );
	deepEqual( Stem("märgfull"), "märgfull" );
	deepEqual( Stem("märk"), "märk" );
	deepEqual( Stem("märka"), "märk" );
	deepEqual( Stem("märkbar"), "märkb" );
	deepEqual( Stem("märkbara"), "märkbar" );
	deepEqual( Stem("märkbarare"), "märkbar" );
	deepEqual( Stem("märkbart"), "märkbart" );
	deepEqual( Stem("märke"), "märk" );
	deepEqual( Stem("märken"), "märk" );
	deepEqual( Stem("märker"), "märk" );
	deepEqual( Stem("märket"), "märket" );
	deepEqual( Stem("märklig"), "märk" );
	deepEqual( Stem("märkliga"), "märk" );
	deepEqual( Stem("märkligheter"), "märk" );
	deepEqual( Stem("märkligt"), "märk" );
	deepEqual( Stem("märkt"), "märk" );
	deepEqual( Stem("märkte"), "märk" );
	deepEqual( Stem("märktes"), "märk" );
	deepEqual( Stem("märkvärdig"), "märkvärd" );
	deepEqual( Stem("märkvärdiga"), "märkvärd" );
	deepEqual( Stem("märkvärdigheter"), "märkvärd" );
	deepEqual( Stem("märkvärdigt"), "märkvärd" );
	deepEqual( Stem("märtas"), "märt" );
	deepEqual( Stem("mässa"), "mäss" );
	deepEqual( Stem("mässade"), "mäss" );
	deepEqual( Stem("mässar"), "mäss" );
	deepEqual( Stem("mässing"), "mässing" );
	deepEqual( Stem("mästare"), "mäst" );
	deepEqual( Stem("mästaren"), "mäst" );
	deepEqual( Stem("mästarn"), "mästarn" );
	deepEqual( Stem("mäste"), "mäst" );
	deepEqual( Stem("mäster"), "mäst" );
	deepEqual( Stem("mästermansyxan"), "mästermansyxan" );
	deepEqual( Stem("mästerstycke"), "mästerstyck" );
	deepEqual( Stem("mästrade"), "mästr" );
	deepEqual( Stem("mäta"), "mät" );
	deepEqual( Stem("mätas"), "mät" );
	deepEqual( Stem("mäter"), "mät" );
	deepEqual( Stem("mätt"), "mätt" );
	deepEqual( Stem("mätta"), "mätt" );
	deepEqual( Stem("mättad"), "mätt" );
	deepEqual( Stem("mättar"), "mätt" );
	deepEqual( Stem("mätte"), "mätt" );
	deepEqual( Stem("må"), "må" );
	deepEqual( Stem("mådde"), "mådd" );
	deepEqual( Stem("mående"), "måend" );
	deepEqual( Stem("måfå"), "måfå" );
	deepEqual( Stem("måg"), "måg" );
	deepEqual( Stem("mågen"), "måg" );
	deepEqual( Stem("mågs"), "måg" );
	deepEqual( Stem("måhända"), "måhänd" );
	deepEqual( Stem("mål"), "mål" );
	deepEqual( Stem("måla"), "mål" );
	deepEqual( Stem("målad"), "mål" );
	deepEqual( Stem("målade"), "mål" );
	deepEqual( Stem("målande"), "mål" );
	deepEqual( Stem("målar"), "mål" );
	deepEqual( Stem("målarakademiens"), "målarakademi" );
	deepEqual( Stem("målare"), "mål" );
	deepEqual( Stem("målareexpositionen"), "målareexposition" );
	deepEqual( Stem("målarfärgen"), "målarfärg" );
	deepEqual( Stem("målarmästare"), "målarmäst" );
	deepEqual( Stem("målas"), "mål" );
	deepEqual( Stem("målat"), "mål" );
	deepEqual( Stem("målet"), "målet" );
	deepEqual( Stem("mållös"), "mållös" );
	deepEqual( Stem("målning"), "målning" );
	deepEqual( Stem("måls"), "mål" );
	deepEqual( Stem("måltid"), "måltid" );
	deepEqual( Stem("måltiden"), "måltid" );
	deepEqual( Stem("måltiderna"), "måltid" );
	deepEqual( Stem("måltidstimmen"), "måltidstimm" );
	deepEqual( Stem("mån"), "mån" );
	deepEqual( Stem("månad"), "mån" );
	deepEqual( Stem("månaden"), "månad" );
	deepEqual( Stem("månader"), "månad" );
	deepEqual( Stem("månaderna"), "månad" );
	deepEqual( Stem("månadernas"), "månad" );
	deepEqual( Stem("månaders"), "månader" );
	deepEqual( Stem("månads"), "månad" );
	deepEqual( Stem("månar"), "mån" );
	deepEqual( Stem("månbristning"), "månbristning" );
	deepEqual( Stem("måndag"), "måndag" );
	deepEqual( Stem("måndagen"), "måndag" );
	deepEqual( Stem("måndc"), "måndc" );
	deepEqual( Stem("månde"), "månd" );
	deepEqual( Stem("måne"), "mån" );
	deepEqual( Stem("månen"), "mån" );
	deepEqual( Stem("många"), "mång" );
	deepEqual( Stem("mångahanda"), "mångahand" );
	deepEqual( Stem("mångdubbelt"), "mångdubbelt" );
	deepEqual( Stem("mångelskan"), "mångelskan" );
	deepEqual( Stem("mången"), "mång" );
	deepEqual( Stem("månget"), "månget" );
	deepEqual( Stem("mångfald"), "mångfald" );
	deepEqual( Stem("mångfaldiga"), "mångfald" );
	deepEqual( Stem("mångfaldigt"), "mångfald" );
	deepEqual( Stem("mångfärgat"), "mångfärg" );
	deepEqual( Stem("månggifte"), "månggift" );
	deepEqual( Stem("månghundraårig"), "månghundraår" );
	deepEqual( Stem("månglarna"), "mångl" );
	deepEqual( Stem("månglittermjöl"), "månglittermjöl" );
	deepEqual( Stem("månglitterskrud"), "månglitterskrud" );
	deepEqual( Stem("mångtydigt"), "mångtyd" );
	deepEqual( Stem("mångårig"), "mångår" );
	deepEqual( Stem("mångåriga"), "mångår" );
	deepEqual( Stem("mångårigt"), "mångår" );
	deepEqual( Stem("månklara"), "månklar" );
	deepEqual( Stem("månljus"), "månljus" );
	deepEqual( Stem("månljuset"), "månljuset" );
	deepEqual( Stem("månn"), "månn" );
	deepEqual( Stem("månne"), "månn" );
	deepEqual( Stem("månsken"), "månsk" );
	deepEqual( Stem("månskenet"), "månskenet" );
	deepEqual( Stem("månskensfantast"), "månskensfant" );
	deepEqual( Stem("månskensnatt"), "månskensnat" );
	deepEqual( Stem("månskensnatten"), "månskensnat" );
	deepEqual( Stem("månskensnätter"), "månskensnät" );
	deepEqual( Stem("månskymning"), "månskymning" );
	deepEqual( Stem("månstrålarna"), "månstrål" );
	deepEqual( Stem("månstråle"), "månstrål" );
	deepEqual( Stem("måntro"), "måntro" );
	deepEqual( Stem("mår"), "mår" );
	deepEqual( Stem("mårten"), "mårt" );
	deepEqual( Stem("mårtens"), "mårt" );
	deepEqual( Stem("måsar"), "mås" );
	deepEqual( Stem("måsle"), "måsl" );
	deepEqual( Stem("måst"), "måst" );
	deepEqual( Stem("måstc"), "måstc" );
	deepEqual( Stem("måste"), "måst" );
	deepEqual( Stem("mått"), "mått" );
	deepEqual( Stem("måtta"), "mått" );
	deepEqual( Stem("måttan"), "måttan" );
	deepEqual( Stem("måtte"), "mått" );
	deepEqual( Stem("måttet"), "måttet" );
	deepEqual( Stem("måttligt"), "mått" );
	deepEqual( Stem("måtto"), "måtto" );
	deepEqual( Stem("mö"), "mö" );
	deepEqual( Stem("möbel"), "möbel" );
	deepEqual( Stem("möbeln"), "möbeln" );
	deepEqual( Stem("möbelöverdrag"), "möbelöverdrag" );
	deepEqual( Stem("möblemang"), "möblemang" );
	deepEqual( Stem("möblemanget"), "möblemanget" );
	deepEqual( Stem("möbler"), "möbl" );
	deepEqual( Stem("möblerade"), "möbler" );
	deepEqual( Stem("möblerar"), "möbler" );
	deepEqual( Stem("möblerat"), "möbler" );
	deepEqual( Stem("möbleringen"), "möblering" );
	deepEqual( Stem("möblerna"), "möbl" );
	deepEqual( Stem("möda"), "möd" );
	deepEqual( Stem("mödan"), "mödan" );
	deepEqual( Stem("mödor"), "möd" );
	deepEqual( Stem("mödosamt"), "mödosamt" );
	deepEqual( Stem("mödrar"), "mödr" );
	deepEqual( Stem("möj"), "möj" );
	deepEqual( Stem("möjliga"), "möj" );
	deepEqual( Stem("möjligast"), "möj" );
	deepEqual( Stem("möjligaste"), "möj" );
	deepEqual( Stem("möjligen"), "möj" );
	deepEqual( Stem("möjlighet"), "möj" );
	deepEqual( Stem("möjligheten"), "möj" );
	deepEqual( Stem("möjligheter"), "möj" );
	deepEqual( Stem("möjligt"), "möj" );
	deepEqual( Stem("möjligtvis"), "möjligtvis" );
	deepEqual( Stem("möjllgt"), "möjllg" );
	deepEqual( Stem("mönster"), "mönst" );
	deepEqual( Stem("mönstrade"), "mönstr" );
	deepEqual( Stem("mönstrande"), "mönstr" );
	deepEqual( Stem("mönstret"), "mönstret" );
	deepEqual( Stem("mönstring"), "mönstring" );
	deepEqual( Stem("mör"), "mör" );
	deepEqual( Stem("mörare"), "mör" );
	deepEqual( Stem("mörbultade"), "mörbult" );
	deepEqual( Stem("mörda"), "mörd" );
	deepEqual( Stem("mördande"), "mörd" );
	deepEqual( Stem("mördar"), "mörd" );
	deepEqual( Stem("mördare"), "mörd" );
	deepEqual( Stem("mördarekula"), "mördarekul" );
	deepEqual( Stem("mördaren"), "mörd" );
	deepEqual( Stem("mördares"), "mördar" );
	deepEqual( Stem("mördarn"), "mördarn" );
	deepEqual( Stem("mördarne"), "mörd" );
	deepEqual( Stem("mörk"), "mörk" );
	deepEqual( Stem("mörka"), "mörk" );
	deepEqual( Stem("mörkare"), "mörk" );
	deepEqual( Stem("mörkaste"), "mörk" );
	deepEqual( Stem("mörkbla"), "mörkbl" );
	deepEqual( Stem("mörkblå"), "mörkblå" );
	deepEqual( Stem("mörkblåglänsande"), "mörkblågläns" );
	deepEqual( Stem("mörkbruna"), "mörkbrun" );
	deepEqual( Stem("mörkbrunt"), "mörkbrunt" );
	deepEqual( Stem("mörke"), "mörk" );
	deepEqual( Stem("mörker"), "mörk" );
	deepEqual( Stem("mörkgrå"), "mörkgrå" );
	deepEqual( Stem("mörkgrön"), "mörkgrön" );
	deepEqual( Stem("mörkhårig"), "mörkhår" );
	deepEqual( Stem("mörklagd"), "mörklag" );
	deepEqual( Stem("mörkna"), "mörkn" );
	deepEqual( Stem("mörknade"), "mörkn" );
	deepEqual( Stem("mörknande"), "mörkn" );
	deepEqual( Stem("mörknar"), "mörkn" );
	deepEqual( Stem("mörknat"), "mörkn" );
	deepEqual( Stem("mörkningen"), "mörkning" );
	deepEqual( Stem("mörkrer"), "mörkr" );
	deepEqual( Stem("mörkret"), "mörkret" );
	deepEqual( Stem("mörkröd"), "mörkröd" );
	deepEqual( Stem("mörkröda"), "mörkröd" );
	deepEqual( Stem("mörksamt"), "mörksamt" );
	deepEqual( Stem("mörksens"), "mörks" );
	deepEqual( Stem("mörkt"), "mörk" );
	deepEqual( Stem("mös"), "mös" );
	deepEqual( Stem("möss"), "möss" );
	deepEqual( Stem("mössa"), "möss" );
	deepEqual( Stem("mössan"), "mössan" );
	deepEqual( Stem("möta"), "möt" );
	deepEqual( Stem("mötande"), "möt" );
	deepEqual( Stem("mötas"), "möt" );
	deepEqual( Stem("möte"), "möt" );
	deepEqual( Stem("möten"), "möt" );
	deepEqual( Stem("mötena"), "möten" );
	deepEqual( Stem("möter"), "möt" );
	deepEqual( Stem("mötes"), "möt" );
	deepEqual( Stem("mötesplats"), "mötesplat" );
	deepEqual( Stem("mötesplatsen"), "mötesplats" );
	deepEqual( Stem("mötet"), "mötet" );
	deepEqual( Stem("möts"), "möt" );
	deepEqual( Stem("mött"), "mött" );
	deepEqual( Stem("mötte"), "mött" );
	deepEqual( Stem("möttes"), "mött" );
	deepEqual( Stem("mötts"), "mött" );
	deepEqual( Stem("n"), "n" );
	deepEqual( Stem("na"), "na" );
	deepEqual( Stem("nacke"), "nack" );
	deepEqual( Stem("nacken"), "nack" );
	deepEqual( Stem("nackens"), "nack" );
	deepEqual( Stem("nackstyf"), "nackstyf" );
	deepEqual( Stem("nad"), "nad" );
	deepEqual( Stem("nadde"), "nadd" );
	deepEqual( Stem("naddes"), "nadd" );
	deepEqual( Stem("nade"), "nad" );
	deepEqual( Stem("nadelön"), "nadelön" );
	deepEqual( Stem("naden"), "nad" );
	deepEqual( Stem("nader"), "nad" );
	deepEqual( Stem("nadig"), "nad" );
	deepEqual( Stem("nafsade"), "nafs" );
	deepEqual( Stem("nafsar"), "nafs" );
	deepEqual( Stem("nafsat"), "nafs" );
	deepEqual( Stem("nagel"), "nagel" );
	deepEqual( Stem("nageln"), "nageln" );
	deepEqual( Stem("naggade"), "nagg" );
	deepEqual( Stem("naggande"), "nagg" );
	deepEqual( Stem("naglande"), "nagl" );
	deepEqual( Stem("naglar"), "nagl" );
	deepEqual( Stem("naglarna"), "nagl" );
	deepEqual( Stem("naglarne"), "nagl" );
	deepEqual( Stem("nagon"), "nagon" );
	deepEqual( Stem("nagonsin"), "nagonsin" );
	deepEqual( Stem("nagot"), "nagot" );
	deepEqual( Stem("nagra"), "nagr" );
	deepEqual( Stem("naiv"), "naiv" );
	deepEqual( Stem("naiva"), "naiv" );
	deepEqual( Stem("naivt"), "naivt" );
	deepEqual( Stem("naken"), "nak" );
	deepEqual( Stem("nakenhet"), "naken" );
	deepEqual( Stem("naket"), "naket" );
	deepEqual( Stem("nakna"), "nakn" );
	deepEqual( Stem("nakterhuset"), "nakterhuset" );
	deepEqual( Stem("nalkades"), "nalk" );
	deepEqual( Stem("nalkas"), "nalk" );
	deepEqual( Stem("namn"), "namn" );
	deepEqual( Stem("namnen"), "namn" );
	deepEqual( Stem("namnet"), "namnet" );
	deepEqual( Stem("namnlös"), "namnlös" );
	deepEqual( Stem("namnlöst"), "namnlös" );
	deepEqual( Stem("namnsdag"), "namnsdag" );
	deepEqual( Stem("namnsdagar"), "namnsdag" );
	deepEqual( Stem("namnteckningar"), "namnteckning" );
	deepEqual( Stem("nan"), "nan" );
	deepEqual( Stem("nande"), "nand" );
	deepEqual( Stem("nankinsbyxor"), "nankinsbyx" );
	deepEqual( Stem("nanna"), "nann" );
	deepEqual( Stem("nannas"), "nann" );
	deepEqual( Stem("nans"), "nan" );
	deepEqual( Stem("napoleon"), "napoleon" );
	deepEqual( Stem("napoleons"), "napoleon" );
	deepEqual( Stem("napoleonsbild"), "napoleonsbild" );
	deepEqual( Stem("napp"), "napp" );
	deepEqual( Stem("nappa"), "napp" );
	deepEqual( Stem("nappte"), "nappt" );
	deepEqual( Stem("nar"), "nar" );
	deepEqual( Stem("nara"), "nar" );
	deepEqual( Stem("narciss"), "narciss" );
	deepEqual( Stem("narcissism"), "narcissism" );
	deepEqual( Stem("narkosmasken"), "narkosmask" );
	deepEqual( Stem("narmn"), "narmn" );
	deepEqual( Stem("narna"), "narn" );
	deepEqual( Stem("narr"), "narr" );
	deepEqual( Stem("narra"), "narr" );
	deepEqual( Stem("narrade"), "narr" );
	deepEqual( Stem("narrades"), "narr" );
	deepEqual( Stem("narraktiga"), "narrakt" );
	deepEqual( Stem("narraktigheterna"), "narrakt" );
	deepEqual( Stem("narrar"), "narr" );
	deepEqual( Stem("narras"), "narr" );
	deepEqual( Stem("narrat"), "narr" );
	deepEqual( Stem("narrats"), "narrat" );
	deepEqual( Stem("narren"), "narr" );
	deepEqual( Stem("narri"), "narri" );
	deepEqual( Stem("narrklocka"), "narrklock" );
	deepEqual( Stem("nasaltoner"), "nasalton" );
	deepEqual( Stem("nasta"), "nast" );
	deepEqual( Stem("nastan"), "nastan" );
	deepEqual( Stem("nat"), "nat" );
	deepEqual( Stem("natarligtvis"), "natarligtvis" );
	deepEqual( Stem("natet"), "natet" );
	deepEqual( Stem("nationaleko"), "nationaleko" );
	deepEqual( Stem("nationers"), "nationer" );
	deepEqual( Stem("nations"), "nation" );
	deepEqual( Stem("natorligtvis"), "natorligtvis" );
	deepEqual( Stem("natt"), "natt" );
	deepEqual( Stem("nattblå"), "nattblå" );
	deepEqual( Stem("nattcll"), "nattcll" );
	deepEqual( Stem("nattdaggen"), "nattdagg" );
	deepEqual( Stem("nattdrakt"), "nattdrak" );
	deepEqual( Stem("nattdräkt"), "nattdräk" );
	deepEqual( Stem("nattduksbord"), "nattduksbord" );
	deepEqual( Stem("nattduksbordet"), "nattduksbordet" );
	deepEqual( Stem("natten"), "natt" );
	deepEqual( Stem("nattens"), "natt" );
	deepEqual( Stem("nattetid"), "nattetid" );
	deepEqual( Stem("nattfjäril"), "nattfjäril" );
	deepEqual( Stem("nattfjäriln"), "nattfjäriln" );
	deepEqual( Stem("nattglim"), "nattglim" );
	deepEqual( Stem("natthämtning"), "natthämtning" );
	deepEqual( Stem("nattkappor"), "nattkapp" );
	deepEqual( Stem("nattlig"), "natt" );
	deepEqual( Stem("nattliga"), "natt" );
	deepEqual( Stem("nattligt"), "natt" );
	deepEqual( Stem("nattlinne"), "nattlin" );
	deepEqual( Stem("nattlinnet"), "nattlinnet" );
	deepEqual( Stem("nattluften"), "nattluft" );
	deepEqual( Stem("nattmössan"), "nattmössan" );
	deepEqual( Stem("nattrock"), "nattrock" );
	deepEqual( Stem("nattrockar"), "nattrock" );
	deepEqual( Stem("nattrocken"), "nattrock" );
	deepEqual( Stem("nattrocksfickan"), "nattrocksfickan" );
	deepEqual( Stem("nattrocksfragmenterna"), "nattrocksfragment" );
	deepEqual( Stem("nattröja"), "nattröj" );
	deepEqual( Stem("natts"), "natt" );
	deepEqual( Stem("nattskjorta"), "nattskjort" );
	deepEqual( Stem("nattskymningen"), "nattskymning" );
	deepEqual( Stem("nattstuga"), "nattstug" );
	deepEqual( Stem("nattsvirare"), "nattsvir" );
	deepEqual( Stem("nattvak"), "nattvak" );
	deepEqual( Stem("nattvakt"), "nattvak" );
	deepEqual( Stem("nattvandrerska"), "nattvandrersk" );
	deepEqual( Stem("nattvarden"), "nattvard" );
	deepEqual( Stem("nattvardens"), "nattvard" );
	deepEqual( Stem("nattvardsbaciller"), "nattvardsbacill" );
	deepEqual( Stem("nattvardsfrågan"), "nattvardsfrågan" );
	deepEqual( Stem("nattvardsgäst"), "nattvardsgäst" );
	deepEqual( Stem("nattvardsgång"), "nattvardsgång" );
	deepEqual( Stem("nattvardskalk"), "nattvardskalk" );
	deepEqual( Stem("nattvardskapslar"), "nattvardskapsl" );
	deepEqual( Stem("nattvardsvinet"), "nattvardsvinet" );
	deepEqual( Stem("nattvind"), "nattvind" );
	deepEqual( Stem("nattvinden"), "nattvind" );
	deepEqual( Stem("natur"), "natur" );
	deepEqual( Stem("naturbarnet"), "naturbarnet" );
	deepEqual( Stem("naturbehov"), "naturbehov" );
	deepEqual( Stem("naturen"), "natur" );
	deepEqual( Stem("naturens"), "natur" );
	deepEqual( Stem("naturer"), "natur" );
	deepEqual( Stem("naturgåfvor"), "naturgåfv" );
	deepEqual( Stem("naturkrafter"), "naturkraft" );
	deepEqual( Stem("naturkunnighet"), "naturkunn" );
	deepEqual( Stem("naturl"), "naturl" );
	deepEqual( Stem("naturlig"), "natur" );
	deepEqual( Stem("naturliga"), "natur" );
	deepEqual( Stem("naturligt"), "natur" );
	deepEqual( Stem("naturligtns"), "naturligtn" );
	deepEqual( Stem("naturligtvis"), "naturligtvis" );
	deepEqual( Stem("naturskönhet"), "naturskön" );
	deepEqual( Stem("navarra"), "navarr" );
	deepEqual( Stem("navel"), "navel" );
	deepEqual( Stem("naveln"), "naveln" );
	deepEqual( Stem("navelsträng"), "navelsträng" );
	deepEqual( Stem("navigation"), "navigation" );
	deepEqual( Stem("navigationen"), "navigation" );
	deepEqual( Stem("nazir"), "nazir" );
	deepEqual( Stem("ncs"), "ncs" );
	deepEqual( Stem("ndade"), "ndad" );
	deepEqual( Stem("ndgon"), "ndgon" );
	deepEqual( Stem("ne"), "ne" );
	deepEqual( Stem("necken"), "neck" );
	deepEqual( Stem("neckens"), "neck" );
	deepEqual( Stem("neckros"), "neckro" );
	deepEqual( Stem("neckrosor"), "neckros" );
	deepEqual( Stem("ned"), "ned" );
	deepEqual( Stem("nedan"), "nedan" );
	deepEqual( Stem("nedanför"), "nedanför" );
	deepEqual( Stem("nedanom"), "nedanom" );
	deepEqual( Stem("nedanstående"), "nedanståend" );
	deepEqual( Stem("nedat"), "ned" );
	deepEqual( Stem("nedbojda"), "nedbojd" );
	deepEqual( Stem("nedborrade"), "nedborr" );
	deepEqual( Stem("nedböjd"), "nedböjd" );
	deepEqual( Stem("nedböjda"), "nedböjd" );
	deepEqual( Stem("nedböjde"), "nedböjd" );
	deepEqual( Stem("nedböjt"), "nedböjt" );
	deepEqual( Stem("neddalat"), "neddal" );
	deepEqual( Stem("neddignade"), "neddign" );
	deepEqual( Stem("neddragen"), "neddrag" );
	deepEqual( Stem("neddragna"), "neddragn" );
	deepEqual( Stem("nederlag"), "nederlag" );
	deepEqual( Stem("nedersta"), "nederst" );
	deepEqual( Stem("nedfallen"), "nedfall" );
	deepEqual( Stem("nedfallna"), "nedfalln" );
	deepEqual( Stem("nedfälda"), "nedfäld" );
	deepEqual( Stem("nedföll"), "nedföll" );
	deepEqual( Stem("nedföllo"), "nedföllo" );
	deepEqual( Stem("nedför"), "nedför" );
	deepEqual( Stem("nedgick"), "nedgick" );
	deepEqual( Stem("nedgrävd"), "nedgrävd" );
	deepEqual( Stem("nedgående"), "nedgåend" );
	deepEqual( Stem("nedgång"), "nedgång" );
	deepEqual( Stem("nedgår"), "nedgår" );
	deepEqual( Stem("nedhalade"), "nedhal" );
	deepEqual( Stem("nedhukad"), "nedhuk" );
	deepEqual( Stem("nedhäng"), "nedhäng" );
	deepEqual( Stem("nedifrån"), "nedifrån" );
	deepEqual( Stem("nedkommen"), "nedkomm" );
	deepEqual( Stem("nedlade"), "nedl" );
	deepEqual( Stem("nedlagt"), "nedlag" );
	deepEqual( Stem("nedlutad"), "nedlut" );
	deepEqual( Stem("nedlägga"), "nedlägg" );
	deepEqual( Stem("nedlåta"), "nedlåt" );
	deepEqual( Stem("nedlåtande"), "nedlåt" );
	deepEqual( Stem("nedlåtenhet"), "nedlåten" );
	deepEqual( Stem("nedlör"), "nedlör" );
	deepEqual( Stem("nedmyllades"), "nedmyll" );
	deepEqual( Stem("nedom"), "nedom" );
	deepEqual( Stem("nedpackning"), "nedpackning" );
	deepEqual( Stem("nedra"), "nedr" );
	deepEqual( Stem("nedramlade"), "nedraml" );
	deepEqual( Stem("nedre"), "nedr" );
	deepEqual( Stem("nedriga"), "nedr" );
	deepEqual( Stem("nedrigt"), "nedr" );
	deepEqual( Stem("nedring"), "nedring" );
	deepEqual( Stem("nedsatt"), "nedsat" );
	deepEqual( Stem("nedsjunka"), "nedsjunk" );
	deepEqual( Stem("nedsjunken"), "nedsjunk" );
	deepEqual( Stem("nedsjunket"), "nedsjunket" );
	deepEqual( Stem("nedsjunkit"), "nedsjunkit" );
	deepEqual( Stem("nedsjönk"), "nedsjönk" );
	deepEqual( Stem("nedskjuten"), "nedskjut" );
	deepEqual( Stem("nedskrifvit"), "nedskrifvit" );
	deepEqual( Stem("nedslagen"), "nedslag" );
	deepEqual( Stem("nedslagenhet"), "nedslagen" );
	deepEqual( Stem("nedslagna"), "nedslagn" );
	deepEqual( Stem("nedslungad"), "nedslung" );
	deepEqual( Stem("nedslående"), "nedslåend" );
	deepEqual( Stem("nedsmutsa"), "nedsmuts" );
	deepEqual( Stem("nedstuckna"), "nedstuckn" );
	deepEqual( Stem("nedstämd"), "nedstämd" );
	deepEqual( Stem("nedstämdhet"), "nedstämd" );
	deepEqual( Stem("nedstämmer"), "nedstämm" );
	deepEqual( Stem("nedstänkt"), "nedstänk" );
	deepEqual( Stem("nedsänkt"), "nedsänk" );
	deepEqual( Stem("nedsättande"), "nedsät" );
	deepEqual( Stem("nedtill"), "nedtill" );
	deepEqual( Stem("nedtog"), "nedtog" );
	deepEqual( Stem("nedtryckt"), "nedtryck" );
	deepEqual( Stem("nedtryckta"), "nedtryck" );
	deepEqual( Stem("nedtrycktas"), "nedtryck" );
	deepEqual( Stem("nedtryckte"), "nedtryck" );
	deepEqual( Stem("nedtyngd"), "nedtyng" );
	deepEqual( Stem("nedtystad"), "nedtyst" );
	deepEqual( Stem("nedviken"), "nedvik" );
	deepEqual( Stem("nedvänd"), "nedvänd" );
	deepEqual( Stem("nedvändt"), "nedvänd" );
	deepEqual( Stem("nedvänt"), "nedvänt" );
	deepEqual( Stem("nedåt"), "nedåt" );
	deepEqual( Stem("nee"), "nee" );
	deepEqual( Stem("neg"), "neg" );
	deepEqual( Stem("neger"), "neg" );
	deepEqual( Stem("negerhår"), "negerhår" );
	deepEqual( Stem("negertroll"), "negertroll" );
	deepEqual( Stem("negligeer"), "neglige" );
	deepEqual( Stem("negress"), "negress" );
	deepEqual( Stem("negresser"), "negress" );
	deepEqual( Stem("nehej"), "nehej" );
	deepEqual( Stem("nej"), "nej" );
	deepEqual( Stem("nejd"), "nejd" );
	deepEqual( Stem("nejden"), "nejd" );
	deepEqual( Stem("nejlika"), "nejlik" );
	deepEqual( Stem("nejlikdoft"), "nejlikdoft" );
	deepEqual( Stem("nejlikor"), "nejlik" );
	deepEqual( Stem("neka"), "nek" );
	deepEqual( Stem("nekade"), "nek" );
	deepEqual( Stem("nekande"), "nek" );
	deepEqual( Stem("nekar"), "nek" );
	deepEqual( Stem("nekas"), "nek" );
	deepEqual( Stem("nekat"), "nek" );
	deepEqual( Stem("nelly"), "nelly" );
	deepEqual( Stem("nem"), "nem" );
	deepEqual( Stem("nemligen"), "nem" );
	deepEqual( Stem("nen"), "nen" );
	deepEqual( Stem("ner"), "ner" );
	deepEqual( Stem("nere"), "ner" );
	deepEqual( Stem("nereus"), "nereus" );
	deepEqual( Stem("nerfälld"), "nerfälld" );
	deepEqual( Stem("nerifrån"), "nerifrån" );
	deepEqual( Stem("nerligt"), "ner" );
	deepEqual( Stem("nersolkade"), "nersolk" );
	deepEqual( Stem("nersuttet"), "nersuttet" );
	deepEqual( Stem("nersölade"), "nersöl" );
	deepEqual( Stem("nertagna"), "nertagn" );
	deepEqual( Stem("nerver"), "nerv" );
	deepEqual( Stem("nervlös"), "nervlös" );
	deepEqual( Stem("nervsjuka"), "nervsjuk" );
	deepEqual( Stem("nervtrådar"), "nervtråd" );
	deepEqual( Stem("nervvärk"), "nervvärk" );
	deepEqual( Stem("nervös"), "nervös" );
	deepEqual( Stem("nervösa"), "nervös" );
	deepEqual( Stem("nervöst"), "nervöst" );
	deepEqual( Stem("nes"), "nes" );
	deepEqual( Stem("net"), "net" );
	deepEqual( Stem("neta"), "net" );
	deepEqual( Stem("netas"), "net" );
	deepEqual( Stem("netty"), "netty" );
	deepEqual( Stem("ni"), "ni" );
	deepEqual( Stem("nia"), "nia" );
	deepEqual( Stem("niais"), "niais" );
	deepEqual( Stem("niaiserie"), "niaiseri" );
	deepEqual( Stem("nic"), "nic" );
	deepEqual( Stem("nicander"), "nicand" );
	deepEqual( Stem("nick"), "nick" );
	deepEqual( Stem("nicka"), "nick" );
	deepEqual( Stem("nickade"), "nick" );
	deepEqual( Stem("nickande"), "nick" );
	deepEqual( Stem("nickar"), "nick" );
	deepEqual( Stem("nickningar"), "nickning" );
	deepEqual( Stem("nietzsche"), "nietzsch" );
	deepEqual( Stem("nigande"), "nig" );
	deepEqual( Stem("niger"), "nig" );
	deepEqual( Stem("nigit"), "nigit" );
	deepEqual( Stem("nigning"), "nigning" );
	deepEqual( Stem("nikotin"), "nikotin" );
	deepEqual( Stem("nils"), "nil" );
	deepEqual( Stem("nimma"), "nimm" );
	deepEqual( Stem("nimmelse"), "nimm" );
	deepEqual( Stem("ning"), "ning" );
	deepEqual( Stem("ningar"), "ning" );
	deepEqual( Stem("ningarna"), "ning" );
	deepEqual( Stem("ningen"), "ning" );
	deepEqual( Stem("ningskjol"), "ningskjol" );
	deepEqual( Stem("ningsrum"), "ningsrum" );
	deepEqual( Stem("ninkande"), "nink" );
	deepEqual( Stem("nio"), "nio" );
	deepEqual( Stem("nionde"), "niond" );
	deepEqual( Stem("nipper"), "nipp" );
	deepEqual( Stem("nish"), "nish" );
	deepEqual( Stem("niska"), "nisk" );
	deepEqual( Stem("niskor"), "nisk" );
	deepEqual( Stem("niskorna"), "nisk" );
	deepEqual( Stem("nisse"), "niss" );
	deepEqual( Stem("nit"), "nit" );
	deepEqual( Stem("nitet"), "nitet" );
	deepEqual( Stem("nitisk"), "nitisk" );
	deepEqual( Stem("nitiske"), "nitisk" );
	deepEqual( Stem("nitton"), "nitton" );
	deepEqual( Stem("nittonde"), "nittond" );
	deepEqual( Stem("nittonåriga"), "nittonår" );
	deepEqual( Stem("njuratalg"), "njuratalg" );
	deepEqual( Stem("njut"), "njut" );
	deepEqual( Stem("njuta"), "njut" );
	deepEqual( Stem("njutande"), "njut" );
	deepEqual( Stem("njuter"), "njut" );
	deepEqual( Stem("njutit"), "njutit" );
	deepEqual( Stem("njutning"), "njutning" );
	deepEqual( Stem("njutningen"), "njutning" );
	deepEqual( Stem("njutningens"), "njutning" );
	deepEqual( Stem("njutningsfullt"), "njutningsfull" );
	deepEqual( Stem("njöt"), "njöt" );
	deepEqual( Stem("njöto"), "njöto" );
	deepEqual( Stem("nk"), "nk" );
	deepEqual( Stem("nlan"), "nlan" );
	deepEqual( Stem("nm"), "nm" );
	deepEqual( Stem("nn"), "nn" );
	deepEqual( Stem("nnan"), "nnan" );
	deepEqual( Stem("nnelankoliskt"), "nnelankolisk" );
	deepEqual( Stem("nninnen"), "nninn" );
	deepEqual( Stem("no"), "no" );
	deepEqual( Stem("noak"), "noak" );
	deepEqual( Stem("nobel"), "nobel" );
	deepEqual( Stem("nobelt"), "nobelt" );
	deepEqual( Stem("nobla"), "nobl" );
	deepEqual( Stem("noblaste"), "nobl" );
	deepEqual( Stem("nobless"), "nobless" );
	deepEqual( Stem("nocturne"), "nocturn" );
	deepEqual( Stem("nog"), "nog" );
	deepEqual( Stem("noga"), "nog" );
	deepEqual( Stem("noggrann"), "noggran" );
	deepEqual( Stem("noggranna"), "noggran" );
	deepEqual( Stem("noggrannhet"), "noggran" );
	deepEqual( Stem("noggrant"), "noggrant" );
	deepEqual( Stem("nogräknad"), "nogräkn" );
	deepEqual( Stem("nogräknade"), "nogräkn" );
	deepEqual( Stem("nolla"), "noll" );
	deepEqual( Stem("nom"), "nom" );
	deepEqual( Stem("nomi"), "nomi" );
	deepEqual( Stem("non"), "non" );
	deepEqual( Stem("nonchalant"), "nonchalant" );
	deepEqual( Stem("nonsens"), "nons" );
	deepEqual( Stem("nordan"), "nordan" );
	deepEqual( Stem("nordenflycht"), "nordenflycht" );
	deepEqual( Stem("nordens"), "nord" );
	deepEqual( Stem("nordiska"), "nordisk" );
	deepEqual( Stem("nordstjärnan"), "nordstjärnan" );
	deepEqual( Stem("nordstjärneriddare"), "nordstjärnerid" );
	deepEqual( Stem("nordvest"), "nordvest" );
	deepEqual( Stem("nordväst"), "nordväst" );
	deepEqual( Stem("nordvästans"), "nordvästan" );
	deepEqual( Stem("nordösten"), "nordöst" );
	deepEqual( Stem("norge"), "norg" );
	deepEqual( Stem("normala"), "normal" );
	deepEqual( Stem("norman"), "norman" );
	deepEqual( Stem("normans"), "norman" );
	deepEqual( Stem("normant"), "normant" );
	deepEqual( Stem("norr"), "norr" );
	deepEqual( Stem("norrbacka"), "norrback" );
	deepEqual( Stem("norrbackaläckerheterna"), "norrbackaläcker" );
	deepEqual( Stem("norrbro"), "norrbro" );
	deepEqual( Stem("norrköping"), "norrköping" );
	deepEqual( Stem("norrland"), "norrland" );
	deepEqual( Stem("norrländska"), "norrländsk" );
	deepEqual( Stem("norrmalmstorg"), "norrmalmstorg" );
	deepEqual( Stem("norrmännen"), "norrmän" );
	deepEqual( Stem("norrström"), "norrström" );
	deepEqual( Stem("norrtull"), "norrtull" );
	deepEqual( Stem("norskt"), "norsk" );
	deepEqual( Stem("nos"), "nos" );
	deepEqual( Stem("nosade"), "nos" );
	deepEqual( Stem("nosande"), "nos" );
	deepEqual( Stem("nosar"), "nos" );
	deepEqual( Stem("nosen"), "nos" );
	deepEqual( Stem("noster"), "nost" );
	deepEqual( Stem("not"), "not" );
	deepEqual( Stem("nota"), "not" );
	deepEqual( Stem("notabiliteternas"), "notabilitet" );
	deepEqual( Stem("notarie"), "notari" );
	deepEqual( Stem("notarien"), "notari" );
	deepEqual( Stem("notariens"), "notari" );
	deepEqual( Stem("notarieus"), "notarieus" );
	deepEqual( Stem("notatien"), "notati" );
	deepEqual( Stem("notificerande"), "notificer" );
	deepEqual( Stem("notis"), "notis" );
	deepEqual( Stem("notisen"), "notis" );
	deepEqual( Stem("notiser"), "notis" );
	deepEqual( Stem("notoriska"), "notorisk" );
	deepEqual( Stem("notre"), "notr" );
	deepEqual( Stem("nous"), "nous" );
	deepEqual( Stem("noveller"), "novell" );
	deepEqual( Stem("novellförfattare"), "novellförfat" );
	deepEqual( Stem("november"), "novemb" );
	deepEqual( Stem("novemberdag"), "novemberdag" );
	deepEqual( Stem("nr"), "nr" );
	deepEqual( Stem("nste"), "nste" );
	deepEqual( Stem("ntya"), "ntya" );
	deepEqual( Stem("ntötte"), "ntött" );
	deepEqual( Stem("nu"), "nu" );
	deepEqual( Stem("nuet"), "nuet" );
	deepEqual( Stem("nuft"), "nuft" );
	deepEqual( Stem("nuftet"), "nuftet" );
	deepEqual( Stem("nuförtiden"), "nuförtid" );
	deepEqual( Stem("numera"), "numer" );
	deepEqual( Stem("nummer"), "numm" );
	deepEqual( Stem("nummerplåt"), "nummerplåt" );
	deepEqual( Stem("nurna"), "nurn" );
	deepEqual( Stem("nutid"), "nutid" );
	deepEqual( Stem("nuvarande"), "nuvar" );
	deepEqual( Stem("nvts"), "nvts" );
	deepEqual( Stem("ny"), "ny" );
	deepEqual( Stem("nya"), "nya" );
	deepEqual( Stem("nyans"), "nyan" );
	deepEqual( Stem("nyanser"), "nyans" );
	deepEqual( Stem("nyare"), "nyar" );
	deepEqual( Stem("nyaste"), "nyast" );
	deepEqual( Stem("nyck"), "nyck" );
	deepEqual( Stem("nyckel"), "nyckel" );
	deepEqual( Stem("nyckelhål"), "nyckelhål" );
	deepEqual( Stem("nyckelhålet"), "nyckelhålet" );
	deepEqual( Stem("nyckeln"), "nyckeln" );
	deepEqual( Stem("nycken"), "nyck" );
	deepEqual( Stem("nycker"), "nyck" );
	deepEqual( Stem("nyckfull"), "nyckfull" );
	deepEqual( Stem("nyckfulla"), "nyckfull" );
	deepEqual( Stem("nydukade"), "nyduk" );
	deepEqual( Stem("nye"), "nye" );
	deepEqual( Stem("nyfallen"), "nyfall" );
	deepEqual( Stem("nyfiken"), "nyfik" );
	deepEqual( Stem("nyfikenhet"), "nyfiken" );
	deepEqual( Stem("nyfikenheten"), "nyfiken" );
	deepEqual( Stem("nyfiket"), "nyfiket" );
	deepEqual( Stem("nyfikna"), "nyfikn" );
	deepEqual( Stem("nyfrälsta"), "nyfrälst" );
	deepEqual( Stem("nyfärgat"), "nyfärg" );
	deepEqual( Stem("nyfödd"), "nyföd" );
	deepEqual( Stem("nyfödda"), "nyföd" );
	deepEqual( Stem("nyföddas"), "nyföd" );
	deepEqual( Stem("nyförlovade"), "nyförlov" );
	deepEqual( Stem("nyfött"), "nyföt" );
	deepEqual( Stem("nygatan"), "nygatan" );
	deepEqual( Stem("nygifta"), "nygift" );
	deepEqual( Stem("nyhet"), "nyhet" );
	deepEqual( Stem("nyheten"), "nyhet" );
	deepEqual( Stem("nyhetens"), "nyhet" );
	deepEqual( Stem("nyheter"), "nyhet" );
	deepEqual( Stem("nykomling"), "nykomling" );
	deepEqual( Stem("nykommen"), "nykomm" );
	deepEqual( Stem("nykomna"), "nykomn" );
	deepEqual( Stem("nykomnas"), "nykomn" );
	deepEqual( Stem("nykter"), "nykt" );
	deepEqual( Stem("nykterhetskalv"), "nykterhetskalv" );
	deepEqual( Stem("nykterhetsskrifter"), "nykterhetsskrift" );
	deepEqual( Stem("nyktert"), "nyktert" );
	deepEqual( Stem("nyktigam"), "nyktigam" );
	deepEqual( Stem("nyktra"), "nyktr" );
	deepEqual( Stem("nyktre"), "nyktr" );
	deepEqual( Stem("nyligen"), "nyl" );
	deepEqual( Stem("nymf"), "nymf" );
	deepEqual( Stem("nymfens"), "nymf" );
	deepEqual( Stem("nymodiga"), "nymod" );
	deepEqual( Stem("nynna"), "nynn" );
	deepEqual( Stem("nynnande"), "nynn" );
	deepEqual( Stem("nyo"), "nyo" );
	deepEqual( Stem("nyomvända"), "nyomvänd" );
	deepEqual( Stem("nypa"), "nyp" );
	deepEqual( Stem("nyper"), "nyp" );
	deepEqual( Stem("nypon"), "nypon" );
	deepEqual( Stem("nys"), "nys" );
	deepEqual( Stem("nysilverbricka"), "nysilverbrick" );
	deepEqual( Stem("nyskurade"), "nyskur" );
	deepEqual( Stem("nyskurat"), "nyskur" );
	deepEqual( Stem("nyss"), "nyss" );
	deepEqual( Stem("nystade"), "nyst" );
	deepEqual( Stem("nystan"), "nystan" );
	deepEqual( Stem("nystfot"), "nystfot" );
	deepEqual( Stem("nystrukna"), "nystrukn" );
	deepEqual( Stem("nystädat"), "nystäd" );
	deepEqual( Stem("nystärkt"), "nystärk" );
	deepEqual( Stem("nytra"), "nytr" );
	deepEqual( Stem("nytt"), "nytt" );
	deepEqual( Stem("nytta"), "nytt" );
	deepEqual( Stem("nyttan"), "nyttan" );
	deepEqual( Stem("nyttfödd"), "nyttföd" );
	deepEqual( Stem("nyttig"), "nytt" );
	deepEqual( Stem("nyttiga"), "nytt" );
	deepEqual( Stem("nyttigare"), "nytt" );
	deepEqual( Stem("nyttigt"), "nytt" );
	deepEqual( Stem("nyttja"), "nyttj" );
	deepEqual( Stem("nyttjade"), "nyttj" );
	deepEqual( Stem("nyttjande"), "nyttj" );
	deepEqual( Stem("nyttjas"), "nyttj" );
	deepEqual( Stem("nytända"), "nytänd" );
	deepEqual( Stem("nyvunna"), "nyvun" );
	deepEqual( Stem("nyväckta"), "nyväck" );
	deepEqual( Stem("nyåret"), "nyåret" );
	deepEqual( Stem("nyårsafton"), "nyårsafton" );
	deepEqual( Stem("nyårsny"), "nyårsny" );
	deepEqual( Stem("näbb"), "näbb" );
	deepEqual( Stem("näbbar"), "näbb" );
	deepEqual( Stem("näbben"), "näbb" );
	deepEqual( Stem("näbbig"), "näbb" );
	deepEqual( Stem("näbbiga"), "näbb" );
	deepEqual( Stem("näckblad"), "näckbl" );
	deepEqual( Stem("näckens"), "näck" );
	deepEqual( Stem("näekros"), "näekro" );
	deepEqual( Stem("näm"), "näm" );
	deepEqual( Stem("nämde"), "nämd" );
	deepEqual( Stem("nämlande"), "näml" );
	deepEqual( Stem("nämligen"), "näm" );
	deepEqual( Stem("nämn"), "nämn" );
	deepEqual( Stem("nämna"), "nämn" );
	deepEqual( Stem("nämnas"), "nämn" );
	deepEqual( Stem("nämnd"), "nämnd" );
	deepEqual( Stem("nämnda"), "nämnd" );
	deepEqual( Stem("nämnde"), "nämnd" );
	deepEqual( Stem("nämndemanslika"), "nämndemanslik" );
	deepEqual( Stem("nämner"), "nämn" );
	deepEqual( Stem("nämnt"), "nämnt" );
	deepEqual( Stem("nämnvärd"), "nämnvärd" );
	deepEqual( Stem("nämt"), "nämt" );
	deepEqual( Stem("nändes"), "nänd" );
	deepEqual( Stem("näpst"), "näpst" );
	deepEqual( Stem("när"), "när" );
	deepEqual( Stem("nära"), "när" );
	deepEqual( Stem("närande"), "när" );
	deepEqual( Stem("närapa"), "närap" );
	deepEqual( Stem("närapå"), "närapå" );
	deepEqual( Stem("närbeläget"), "närbeläget" );
	deepEqual( Stem("närd"), "närd" );
	deepEqual( Stem("närda"), "närd" );
	deepEqual( Stem("närde"), "närd" );
	deepEqual( Stem("närgånget"), "närgånget" );
	deepEqual( Stem("närhet"), "när" );
	deepEqual( Stem("närheten"), "när" );
	deepEqual( Stem("näring"), "näring" );
	deepEqual( Stem("näringsgrenar"), "näringsgren" );
	deepEqual( Stem("näringsämnet"), "näringsämnet" );
	deepEqual( Stem("närke"), "närk" );
	deepEqual( Stem("närma"), "närm" );
	deepEqual( Stem("närmade"), "närm" );
	deepEqual( Stem("närmande"), "närm" );
	deepEqual( Stem("närmar"), "närm" );
	deepEqual( Stem("närmare"), "närm" );
	deepEqual( Stem("närmast"), "närm" );
	deepEqual( Stem("närmaste"), "närm" );
	deepEqual( Stem("närmat"), "närm" );
	deepEqual( Stem("närmre"), "närmr" );
	deepEqual( Stem("närnnda"), "närnnd" );
	deepEqual( Stem("närsynt"), "närsynt" );
	deepEqual( Stem("närsynta"), "närsynt" );
	deepEqual( Stem("närt"), "närt" );
	deepEqual( Stem("närvarande"), "närvar" );
	deepEqual( Stem("närvarandes"), "närvar" );
	deepEqual( Stem("närvaro"), "närvaro" );
	deepEqual( Stem("närvaron"), "närvaron" );
	deepEqual( Stem("näsa"), "näs" );
	deepEqual( Stem("näsan"), "näsan" );
	deepEqual( Stem("näsbenet"), "näsbenet" );
	deepEqual( Stem("näsborrar"), "näsborr" );
	deepEqual( Stem("näsborrarna"), "näsborr" );
	deepEqual( Stem("näsduk"), "näsduk" );
	deepEqual( Stem("näsdukar"), "näsduk" );
	deepEqual( Stem("näsdukarna"), "näsduk" );
	deepEqual( Stem("näsduken"), "näsduk" );
	deepEqual( Stem("näsdukssnibben"), "näsdukssnibb" );
	deepEqual( Stem("näsor"), "näs" );
	deepEqual( Stem("näspärla"), "näspärl" );
	deepEqual( Stem("näst"), "näst" );
	deepEqual( Stem("nästa"), "näst" );
	deepEqual( Stem("nästan"), "nästan" );
	deepEqual( Stem("näste"), "näst" );
	deepEqual( Stem("nästena"), "nästen" );
	deepEqual( Stem("nästföljande"), "nästfölj" );
	deepEqual( Stem("nästipp"), "nästipp" );
	deepEqual( Stem("nästkommande"), "nästkomm" );
	deepEqual( Stem("nästnn"), "nästn" );
	deepEqual( Stem("näsvis"), "näsvis" );
	deepEqual( Stem("näsvisa"), "näsvis" );
	deepEqual( Stem("näsvisare"), "näsvis" );
	deepEqual( Stem("näsvise"), "näsvis" );
	deepEqual( Stem("näsvishet"), "näsvis" );
	deepEqual( Stem("näsvist"), "näsvist" );
	deepEqual( Stem("nät"), "nät" );
	deepEqual( Stem("nätet"), "nätet" );
	deepEqual( Stem("nätets"), "nätet" );
	deepEqual( Stem("näthinnor"), "näthin" );
	deepEqual( Stem("nätt"), "nätt" );
	deepEqual( Stem("nätta"), "nätt" );
	deepEqual( Stem("nättaste"), "nätt" );
	deepEqual( Stem("nätter"), "nätt" );
	deepEqual( Stem("nätterna"), "nätt" );
	deepEqual( Stem("nätters"), "nätter" );
	deepEqual( Stem("nävar"), "näv" );
	deepEqual( Stem("näve"), "näv" );
	deepEqual( Stem("näven"), "näv" );
	deepEqual( Stem("nå"), "nå" );
	deepEqual( Stem("nåd"), "nåd" );
	deepEqual( Stem("nådde"), "nådd" );
	deepEqual( Stem("nådenes"), "nåden" );
	deepEqual( Stem("nådens"), "nåd" );
	deepEqual( Stem("nåder"), "nåd" );
	deepEqual( Stem("nådesmulor"), "nådesmul" );
	deepEqual( Stem("nådetiden"), "nådetid" );
	deepEqual( Stem("nådig"), "nåd" );
	deepEqual( Stem("nådiga"), "nåd" );
	deepEqual( Stem("nådige"), "nåd" );
	deepEqual( Stem("nådigt"), "nåd" );
	deepEqual( Stem("någml"), "någml" );
	deepEqual( Stem("någo"), "någo" );
	deepEqual( Stem("någon"), "någon" );
	deepEqual( Stem("någondera"), "någonder" );
	deepEqual( Stem("någons"), "någon" );
	deepEqual( Stem("någonsin"), "någonsin" );
	deepEqual( Stem("någonstades"), "någonst" );
	deepEqual( Stem("någonstans"), "någonstan" );
	deepEqual( Stem("någonstädes"), "någonstäd" );
	deepEqual( Stem("någonstådes"), "någonståd" );
	deepEqual( Stem("någonting"), "någonting" );
	deepEqual( Stem("någorlunda"), "någorlund" );
	deepEqual( Stem("någorstädes"), "någorstäd" );
	deepEqual( Stem("något"), "något" );
	deepEqual( Stem("någotdera"), "någotder" );
	deepEqual( Stem("några"), "någr" );
	deepEqual( Stem("nåidge"), "nåidg" );
	deepEqual( Stem("nålar"), "nål" );
	deepEqual( Stem("nålen"), "nål" );
	deepEqual( Stem("nånsin"), "nånsin" );
	deepEqual( Stem("når"), "når" );
	deepEqual( Stem("nås"), "nås" );
	deepEqual( Stem("nått"), "nått" );
	deepEqual( Stem("nåväl"), "nåväl" );
	deepEqual( Stem("nöd"), "nöd" );
	deepEqual( Stem("nödd"), "nödd" );
	deepEqual( Stem("nöden"), "nöd" );
	deepEqual( Stem("nödens"), "nöd" );
	deepEqual( Stem("nödfall"), "nödfall" );
	deepEqual( Stem("nödgade"), "nödg" );
	deepEqual( Stem("nödgades"), "nödg" );
	deepEqual( Stem("nödgas"), "nödg" );
	deepEqual( Stem("nödgats"), "nödgat" );
	deepEqual( Stem("nödiga"), "nöd" );
	deepEqual( Stem("nödigt"), "nöd" );
	deepEqual( Stem("nödrop"), "nödrop" );
	deepEqual( Stem("nödsakad"), "nödsak" );
	deepEqual( Stem("nödställds"), "nödställd" );
	deepEqual( Stem("nödtorftigt"), "nödtorft" );
	deepEqual( Stem("nödtvång"), "nödtvång" );
	deepEqual( Stem("nödvandigheten"), "nödvand" );
	deepEqual( Stem("nödvändig"), "nödvänd" );
	deepEqual( Stem("nödvändiga"), "nödvänd" );
	deepEqual( Stem("nödvändigare"), "nödvänd" );
	deepEqual( Stem("nödvändigaste"), "nödvänd" );
	deepEqual( Stem("nödvändighet"), "nödvänd" );
	deepEqual( Stem("nödvändigheten"), "nödvänd" );
	deepEqual( Stem("nödvändighetens"), "nödvänd" );
	deepEqual( Stem("nödvändighetsartiklar"), "nödvändighetsartikl" );
	deepEqual( Stem("nödvändigt"), "nödvänd" );
	deepEqual( Stem("nödvärn"), "nödvärn" );
	deepEqual( Stem("nöja"), "nöj" );
	deepEqual( Stem("nöjd"), "nöjd" );
	deepEqual( Stem("nöjda"), "nöjd" );
	deepEqual( Stem("nöjde"), "nöjd" );
	deepEqual( Stem("nöje"), "nöj" );
	deepEqual( Stem("nöjelse"), "nöj" );
	deepEqual( Stem("nöjen"), "nöj" );
	deepEqual( Stem("nöjena"), "nöjen" );
	deepEqual( Stem("nöjer"), "nöj" );
	deepEqual( Stem("nöjes"), "nöj" );
	deepEqual( Stem("nöjet"), "nöjet" );
	deepEqual( Stem("nöjs"), "nöj" );
	deepEqual( Stem("nöjsam"), "nöjsam" );
	deepEqual( Stem("nöp"), "nöp" );
	deepEqual( Stem("nöt"), "nöt" );
	deepEqual( Stem("nöter"), "nöt" );
	deepEqual( Stem("nötkärna"), "nötkärn" );
	deepEqual( Stem("nötning"), "nötning" );
	deepEqual( Stem("nötta"), "nött" );
	deepEqual( Stem("nötter"), "nött" );
	deepEqual( Stem("o"), "o" );
	deepEqual( Stem("oa"), "oa" );
	deepEqual( Stem("oafbrutet"), "oafbrutet" );
	deepEqual( Stem("oafgjordt"), "oafgjord" );
	deepEqual( Stem("oaktadt"), "oaktad" );
	deepEqual( Stem("oaktat"), "oakt" );
	deepEqual( Stem("oanade"), "oan" );
	deepEqual( Stem("oandligt"), "oand" );
	deepEqual( Stem("oangripet"), "oangripet" );
	deepEqual( Stem("oansenliga"), "oansen" );
	deepEqual( Stem("oanständiga"), "oanständ" );
	deepEqual( Stem("oanständigt"), "oanständ" );
	deepEqual( Stem("oartig"), "oart" );
	deepEqual( Stem("oartikuleradt"), "oartikulerad" );
	deepEqual( Stem("oartikulerat"), "oartikuler" );
	deepEqual( Stem("oavbruten"), "oavbrut" );
	deepEqual( Stem("oavbrutet"), "oavbrutet" );
	deepEqual( Stem("oavbrutna"), "oavbrutn" );
	deepEqual( Stem("oavlåtligen"), "oavlåt" );
	deepEqual( Stem("oavundade"), "oavund" );
	deepEqual( Stem("oavvänt"), "oavvänt" );
	deepEqual( Stem("obarmhärtigt"), "obarmhärt" );
	deepEqual( Stem("obduktion"), "obduktion" );
	deepEqual( Stem("obebyggda"), "obebygg" );
	deepEqual( Stem("obegriplig"), "obegrip" );
	deepEqual( Stem("obegripliga"), "obegrip" );
	deepEqual( Stem("obegripligt"), "obegrip" );
	deepEqual( Stem("obegränsade"), "obegräns" );
	deepEqual( Stem("obehag"), "obehag" );
	deepEqual( Stem("obehaget"), "obehaget" );
	deepEqual( Stem("obehaglig"), "obehag" );
	deepEqual( Stem("obehagliga"), "obehag" );
	deepEqual( Stem("obehagligare"), "obehag" );
	deepEqual( Stem("obehagligt"), "obehag" );
	deepEqual( Stem("obehindradt"), "obehindrad" );
	deepEqual( Stem("obehörig"), "obehör" );
	deepEqual( Stem("obehöriga"), "obehör" );
	deepEqual( Stem("obehövliga"), "obehöv" );
	deepEqual( Stem("obekant"), "obekant" );
	deepEqual( Stem("obekanta"), "obekant" );
	deepEqual( Stem("obekantskapen"), "obekantskap" );
	deepEqual( Stem("obekväma"), "obekväm" );
	deepEqual( Stem("obekymrade"), "obekymr" );
	deepEqual( Stem("obekymrat"), "obekymr" );
	deepEqual( Stem("obelevad"), "obelev" );
	deepEqual( Stem("obemärkt"), "obemärk" );
	deepEqual( Stem("obenägen"), "obenäg" );
	deepEqual( Stem("obenägenhet"), "obenägen" );
	deepEqual( Stem("oberedd"), "obered" );
	deepEqual( Stem("oberoende"), "oberoend" );
	deepEqual( Stem("oberäknade"), "oberäkn" );
	deepEqual( Stem("oberäknadt"), "oberäknad" );
	deepEqual( Stem("oberäknat"), "oberäkn" );
	deepEqual( Stem("oberäknelig"), "oberäkne" );
	deepEqual( Stem("oberäkneligt"), "oberäkne" );
	deepEqual( Stem("oberäknerliga"), "oberäkner" );
	deepEqual( Stem("oberörd"), "oberörd" );
	deepEqual( Stem("oberörda"), "oberörd" );
	deepEqual( Stem("oberördhet"), "oberörd" );
	deepEqual( Stem("oberört"), "oberört" );
	deepEqual( Stem("obesatt"), "obesat" );
	deepEqual( Stem("obeskedligt"), "obesked" );
	deepEqual( Stem("obeskriflig"), "obeskrif" );
	deepEqual( Stem("obeskrifliga"), "obeskrif" );
	deepEqual( Stem("obeskrifligt"), "obeskrif" );
	deepEqual( Stem("obeskrivlig"), "obeskriv" );
	deepEqual( Stem("obeskrivliga"), "obeskriv" );
	deepEqual( Stem("obeskrivligt"), "obeskriv" );
	deepEqual( Stem("obeslutsam"), "obeslutsam" );
	deepEqual( Stem("obeslutsamme"), "obeslutsamm" );
	deepEqual( Stem("obestand"), "obestand" );
	deepEqual( Stem("obestridliga"), "obestrid" );
	deepEqual( Stem("obestämd"), "obestämd" );
	deepEqual( Stem("obestämda"), "obestämd" );
	deepEqual( Stem("obestämt"), "obestämt" );
	deepEqual( Stem("obesvarade"), "obesvar" );
	deepEqual( Stem("obesvärat"), "obesvär" );
	deepEqual( Stem("obetingat"), "obeting" );
	deepEqual( Stem("obetydlig"), "obetyd" );
	deepEqual( Stem("obetydliga"), "obetyd" );
	deepEqual( Stem("obetydligare"), "obetyd" );
	deepEqual( Stem("obetydligaste"), "obetyd" );
	deepEqual( Stem("obetydlige"), "obetyd" );
	deepEqual( Stem("obetydlighet"), "obetyd" );
	deepEqual( Stem("obetydligt"), "obetyd" );
	deepEqual( Stem("obetänksam"), "obetänksam" );
	deepEqual( Stem("obetänksamhet"), "obetänksam" );
	deepEqual( Stem("obetänksamme"), "obetänksamm" );
	deepEqual( Stem("obetänksamt"), "obetänksamt" );
	deepEqual( Stem("obeveklig"), "obevek" );
	deepEqual( Stem("obildad"), "obild" );
	deepEqual( Stem("obildade"), "obild" );
	deepEqual( Stem("obillig"), "obil" );
	deepEqual( Stem("obilliga"), "obil" );
	deepEqual( Stem("obilligt"), "obil" );
	deepEqual( Stem("oblandad"), "obland" );
	deepEqual( Stem("oblandadt"), "oblandad" );
	deepEqual( Stem("obligeant"), "obligeant" );
	deepEqual( Stem("obligera"), "obliger" );
	deepEqual( Stem("oblyg"), "oblyg" );
	deepEqual( Stem("oblyga"), "oblyg" );
	deepEqual( Stem("oblygare"), "oblyg" );
	deepEqual( Stem("oblyghet"), "oblyg" );
	deepEqual( Stem("oblygt"), "oblyg" );
	deepEqual( Stem("obotlig"), "obot" );
	deepEqual( Stem("obotligt"), "obot" );
	deepEqual( Stem("obrottslig"), "obrotts" );
	deepEqual( Stem("obrukbart"), "obrukbart" );
	deepEqual( Stem("observationer"), "observation" );
	deepEqual( Stem("observera"), "observer" );
	deepEqual( Stem("observerade"), "observer" );
	deepEqual( Stem("observerades"), "observer" );
	deepEqual( Stem("observerat"), "observer" );
	deepEqual( Stem("obytt"), "obyt" );
	deepEqual( Stem("obändiga"), "obänd" );
	deepEqual( Stem("oböjliga"), "oböj" );
	deepEqual( Stem("ocb"), "ocb" );
	deepEqual( Stem("occh"), "occh" );
	deepEqual( Stem("ocfi"), "ocfi" );
	deepEqual( Stem("och"), "och" );
	deepEqual( Stem("ock"), "ock" );
	deepEqual( Stem("ockra"), "ockr" );
	deepEqual( Stem("ockrå"), "ockrå" );
	deepEqual( Stem("ocksa"), "ocks" );
	deepEqual( Stem("ocksi"), "ocksi" );
	deepEqual( Stem("också"), "också" );
	deepEqual( Stem("ocl"), "ocl" );
	deepEqual( Stem("odeciderad"), "odecider" );
	deepEqual( Stem("odelad"), "odel" );
	deepEqual( Stem("oderton"), "oderton" );
	deepEqual( Stem("odh"), "odh" );
	deepEqual( Stem("odjur"), "odjur" );
	deepEqual( Stem("odjuren"), "odjur" );
	deepEqual( Stem("odjuret"), "odjuret" );
	deepEqual( Stem("odjurs"), "odjur" );
	deepEqual( Stem("odla"), "odl" );
	deepEqual( Stem("odlade"), "odl" );
	deepEqual( Stem("odlarns"), "odlarn" );
	deepEqual( Stem("odmjuk"), "odmjuk" );
	deepEqual( Stem("odmjukt"), "odmjuk" );
	deepEqual( Stem("odräg"), "odräg" );
	deepEqual( Stem("odräglig"), "odräg" );
	deepEqual( Stem("odrägliga"), "odräg" );
	deepEqual( Stem("odräglige"), "odräg" );
	deepEqual( Stem("odrägligt"), "odräg" );
	deepEqual( Stem("odugliga"), "odug" );
	deepEqual( Stem("odugligt"), "odug" );
	deepEqual( Stem("odygd"), "odyg" );
	deepEqual( Stem("odygdigt"), "odygd" );
	deepEqual( Stem("odödlig"), "odöd" );
	deepEqual( Stem("odödliga"), "odöd" );
	deepEqual( Stem("odödlighet"), "odöd" );
	deepEqual( Stem("odödligt"), "odöd" );
	deepEqual( Stem("oeb"), "oeb" );
	deepEqual( Stem("oeftertänksamma"), "oeftertänksamm" );
	deepEqual( Stem("oegentligen"), "oegent" );
	deepEqual( Stem("oeh"), "oeh" );
	deepEqual( Stem("oeldadt"), "oeldad" );
	deepEqual( Stem("oemotståndlig"), "oemotstånd" );
	deepEqual( Stem("oemotståndligt"), "oemotstånd" );
	deepEqual( Stem("oen"), "oen" );
	deepEqual( Stem("oenothera"), "oenother" );
	deepEqual( Stem("oer"), "oer" );
	deepEqual( Stem("oerfaren"), "oerf" );
	deepEqual( Stem("oerfarna"), "oerf" );
	deepEqual( Stem("oerhörd"), "oerhörd" );
	deepEqual( Stem("oerhörda"), "oerhörd" );
	deepEqual( Stem("oerhördt"), "oerhörd" );
	deepEqual( Stem("oerhört"), "oerhört" );
	deepEqual( Stem("oersättliga"), "oersätt" );
	deepEqual( Stem("of"), "of" );
	deepEqual( Stem("ofantlig"), "ofant" );
	deepEqual( Stem("ofantliga"), "ofant" );
	deepEqual( Stem("ofantligt"), "ofant" );
	deepEqual( Stem("ofarlig"), "ofar" );
	deepEqual( Stem("ofattbara"), "ofattbar" );
	deepEqual( Stem("ofelbara"), "ofelbar" );
	deepEqual( Stem("ofelbart"), "ofelbart" );
	deepEqual( Stem("offentliga"), "offent" );
	deepEqual( Stem("offentligheten"), "offent" );
	deepEqual( Stem("offentligt"), "offent" );
	deepEqual( Stem("offer"), "off" );
	deepEqual( Stem("offerdag"), "offerdag" );
	deepEqual( Stem("officer"), "offic" );
	deepEqual( Stem("officerare"), "officer" );
	deepEqual( Stem("officershem"), "officershem" );
	deepEqual( Stem("officianten"), "officiant" );
	deepEqual( Stem("offra"), "offr" );
	deepEqual( Stem("offrade"), "offr" );
	deepEqual( Stem("offrat"), "offr" );
	deepEqual( Stem("ofog"), "ofog" );
	deepEqual( Stem("oformlig"), "oform" );
	deepEqual( Stem("oformliga"), "oform" );
	deepEqual( Stem("ofrid"), "ofrid" );
	deepEqual( Stem("ofrivillig"), "ofrivil" );
	deepEqual( Stem("ofrivilligt"), "ofrivil" );
	deepEqual( Stem("ofruktbar"), "ofruktb" );
	deepEqual( Stem("ofruktbara"), "ofruktbar" );
	deepEqual( Stem("ofta"), "oft" );
	deepEqual( Stem("oftare"), "oft" );
	deepEqual( Stem("oftast"), "oft" );
	deepEqual( Stem("ofullständigt"), "ofullständ" );
	deepEqual( Stem("ofvan"), "ofvan" );
	deepEqual( Stem("ofvanstående"), "ofvanståend" );
	deepEqual( Stem("ofödda"), "oföd" );
	deepEqual( Stem("oföddas"), "oföd" );
	deepEqual( Stem("oförargliga"), "oförarg" );
	deepEqual( Stem("oförberett"), "oförberet" );
	deepEqual( Stem("ofördelaktiga"), "ofördelakt" );
	deepEqual( Stem("ofördelaktigt"), "ofördelakt" );
	deepEqual( Stem("oförenliga"), "ofören" );
	deepEqual( Stem("oförfalskade"), "oförfalsk" );
	deepEqual( Stem("oförfalskat"), "oförfalsk" );
	deepEqual( Stem("oförfärat"), "oförfär" );
	deepEqual( Stem("oförgiftade"), "oförgift" );
	deepEqual( Stem("oförgripliga"), "oförgrip" );
	deepEqual( Stem("oförhappandes"), "oförhapp" );
	deepEqual( Stem("oförklarligt"), "oförklar" );
	deepEqual( Stem("oförlåtliga"), "oförlåt" );
	deepEqual( Stem("oförminskad"), "oförminsk" );
	deepEqual( Stem("oförmodade"), "oförmod" );
	deepEqual( Stem("oförmodadt"), "oförmodad" );
	deepEqual( Stem("oförmodat"), "oförmod" );
	deepEqual( Stem("oförmärkt"), "oförmärk" );
	deepEqual( Stem("oförmåga"), "oförmåg" );
	deepEqual( Stem("oförsigtighet"), "oförsigt" );
	deepEqual( Stem("oförsiktighet"), "oförsikt" );
	deepEqual( Stem("oförsiktigt"), "oförsikt" );
	deepEqual( Stem("oförskräckt"), "oförskräck" );
	deepEqual( Stem("oförskämd"), "oförskämd" );
	deepEqual( Stem("oförskämda"), "oförskämd" );
	deepEqual( Stem("oförskämdaste"), "oförskämd" );
	deepEqual( Stem("oförskämdt"), "oförskämd" );
	deepEqual( Stem("oförskämt"), "oförskämt" );
	deepEqual( Stem("oförsonade"), "oförson" );
	deepEqual( Stem("oförstäld"), "oförstäld" );
	deepEqual( Stem("oförstående"), "oförståend" );
	deepEqual( Stem("oförstånd"), "oförstånd" );
	deepEqual( Stem("oförståndiga"), "oförstånd" );
	deepEqual( Stem("oförsvarligt"), "oförsvar" );
	deepEqual( Stem("oförsynt"), "oförsynt" );
	deepEqual( Stem("oförsynta"), "oförsynt" );
	deepEqual( Stem("oförsyntheten"), "oförsynt" );
	deepEqual( Stem("oförsörjda"), "oförsörjd" );
	deepEqual( Stem("oförtrutet"), "oförtrutet" );
	deepEqual( Stem("oförtrutna"), "oförtrutn" );
	deepEqual( Stem("oförtöfvadt"), "oförtöfvad" );
	deepEqual( Stem("oförutsedd"), "oförutsed" );
	deepEqual( Stem("oförvitlig"), "oförvit" );
	deepEqual( Stem("oförvägen"), "oförväg" );
	deepEqual( Stem("oförvägenhet"), "oförvägen" );
	deepEqual( Stem("oförvägna"), "oförvägn" );
	deepEqual( Stem("oförytterlig"), "oförytter" );
	deepEqual( Stem("oga"), "oga" );
	deepEqual( Stem("ogenerad"), "ogener" );
	deepEqual( Stem("ogenerat"), "ogener" );
	deepEqual( Stem("ogerna"), "ogern" );
	deepEqual( Stem("ogerning"), "ogerning" );
	deepEqual( Stem("ogift"), "ogift" );
	deepEqual( Stem("ogifta"), "ogift" );
	deepEqual( Stem("ogillade"), "ogill" );
	deepEqual( Stem("ogillande"), "ogill" );
	deepEqual( Stem("ogjorda"), "ogjord" );
	deepEqual( Stem("ogon"), "ogon" );
	deepEqual( Stem("ogonen"), "ogon" );
	deepEqual( Stem("ogonlocken"), "ogonlock" );
	deepEqual( Stem("ogonspringor"), "ogonspring" );
	deepEqual( Stem("ograciös"), "ograciös" );
	deepEqual( Stem("ogrannlaga"), "ogrannlag" );
	deepEqual( Stem("ogrundad"), "ogrund" );
	deepEqual( Stem("ogräset"), "ogräset" );
	deepEqual( Stem("ogudaktigt"), "ogudakt" );
	deepEqual( Stem("ogunst"), "ogunst" );
	deepEqual( Stem("ogunstigt"), "ogunst" );
	deepEqual( Stem("ogärna"), "ogärn" );
	deepEqual( Stem("ogörligt"), "ogör" );
	deepEqual( Stem("ohan"), "ohan" );
	deepEqual( Stem("ohejdad"), "ohejd" );
	deepEqual( Stem("ohejdade"), "ohejd" );
	deepEqual( Stem("ohejdadt"), "ohejdad" );
	deepEqual( Stem("ohelig"), "ohe" );
	deepEqual( Stem("ohjelplige"), "ohjelp" );
	deepEqual( Stem("ohjelpligen"), "ohjelp" );
	deepEqual( Stem("ohjälplig"), "ohjälp" );
	deepEqual( Stem("ohjälpliga"), "ohjälp" );
	deepEqual( Stem("ohjälpligt"), "ohjälp" );
	deepEqual( Stem("ohlea"), "ohle" );
	deepEqual( Stem("oho"), "oho" );
	deepEqual( Stem("ohygglig"), "ohygg" );
	deepEqual( Stem("ohyggliga"), "ohygg" );
	deepEqual( Stem("ohyggligt"), "ohygg" );
	deepEqual( Stem("ohyra"), "ohyr" );
	deepEqual( Stem("ohyvlade"), "ohyvl" );
	deepEqual( Stem("ohöfviskt"), "ohöfvisk" );
	deepEqual( Stem("ohöljt"), "ohöljt" );
	deepEqual( Stem("ohörbar"), "ohörb" );
	deepEqual( Stem("ohörbart"), "ohörbart" );
	deepEqual( Stem("ohövlig"), "ohöv" );
	deepEqual( Stem("ohövligt"), "ohöv" );
	deepEqual( Stem("oid"), "oid" );
	deepEqual( Stem("oigenkänliga"), "oigenkän" );
	deepEqual( Stem("oinskränkt"), "oinskränk" );
	deepEqual( Stem("oinskränkta"), "oinskränk" );
	deepEqual( Stem("oiruktbar"), "oiruktb" );
	deepEqual( Stem("ois"), "ois" );
	deepEqual( Stem("oj"), "oj" );
	deepEqual( Stem("ojemna"), "ojemn" );
	deepEqual( Stem("ojämförligt"), "ojämför" );
	deepEqual( Stem("ojämna"), "ojämn" );
	deepEqual( Stem("ojämnt"), "ojämnt" );
	deepEqual( Stem("ok"), "ok" );
	deepEqual( Stem("oklart"), "oklart" );
	deepEqual( Stem("oknarna"), "okn" );
	deepEqual( Stem("oknytt"), "oknyt" );
	deepEqual( Stem("okonstlade"), "okonstl" );
	deepEqual( Stem("okroppsliga"), "okropps" );
	deepEqual( Stem("okroppsligt"), "okropps" );
	deepEqual( Stem("oktober"), "oktob" );
	deepEqual( Stem("oktoberskymningen"), "oktoberskymning" );
	deepEqual( Stem("okultiverad"), "okultiver" );
	deepEqual( Stem("okunnig"), "okunn" );
	deepEqual( Stem("okunniga"), "okunn" );
	deepEqual( Stem("okunnighet"), "okunn" );
	deepEqual( Stem("okuvlig"), "okuv" );
	deepEqual( Stem("okynne"), "okyn" );
	deepEqual( Stem("okynnig"), "okynn" );
	deepEqual( Stem("okynniga"), "okynn" );
	deepEqual( Stem("okyska"), "okysk" );
	deepEqual( Stem("okyskhetens"), "okysk" );
	deepEqual( Stem("okänd"), "okänd" );
	deepEqual( Stem("okända"), "okänd" );
	deepEqual( Stem("okände"), "okänd" );
	deepEqual( Stem("okänslig"), "okäns" );
	deepEqual( Stem("okänt"), "okänt" );
	deepEqual( Stem("oköpandes"), "oköp" );
	deepEqual( Stem("ola"), "ola" );
	deepEqual( Stem("olatet"), "olatet" );
	deepEqual( Stem("oldsmobile"), "oldsmobil" );
	deepEqual( Stem("olidlig"), "olid" );
	deepEqual( Stem("olidliga"), "olid" );
	deepEqual( Stem("olidligaste"), "olid" );
	deepEqual( Stem("olidligt"), "olid" );
	deepEqual( Stem("olik"), "olik" );
	deepEqual( Stem("olika"), "olik" );
	deepEqual( Stem("olikfärgade"), "olikfärg" );
	deepEqual( Stem("olikt"), "olik" );
	deepEqual( Stem("oliver"), "oliv" );
	deepEqual( Stem("olivgul"), "olivgul" );
	deepEqual( Stem("olivlund"), "olivlund" );
	deepEqual( Stem("olja"), "olj" );
	deepEqual( Stem("oljat"), "olj" );
	deepEqual( Stem("oljefärg"), "oljefärg" );
	deepEqual( Stem("oljekläder"), "oljekläd" );
	deepEqual( Stem("oljelampan"), "oljelampan" );
	deepEqual( Stem("oljelampor"), "oljelamp" );
	deepEqual( Stem("oljelamporna"), "oljelamp" );
	deepEqual( Stem("oljelampornas"), "oljelamp" );
	deepEqual( Stem("oljud"), "oljud" );
	deepEqual( Stem("olle"), "oll" );
	deepEqual( Stem("olmströms"), "olmström" );
	deepEqual( Stem("oloflig"), "olof" );
	deepEqual( Stem("ologiskt"), "ologisk" );
	deepEqual( Stem("olovliga"), "olov" );
	deepEqual( Stem("olssons"), "olsson" );
	deepEqual( Stem("olust"), "olust" );
	deepEqual( Stem("olustig"), "olust" );
	deepEqual( Stem("olustkänslor"), "olustkänsl" );
	deepEqual( Stem("olyck"), "olyck" );
	deepEqual( Stem("olycka"), "olyck" );
	deepEqual( Stem("olyckan"), "olyckan" );
	deepEqual( Stem("olyckas"), "olyck" );
	deepEqual( Stem("olycklig"), "olyck" );
	deepEqual( Stem("olyckliga"), "olyck" );
	deepEqual( Stem("olyckligare"), "olyck" );
	deepEqual( Stem("olycklige"), "olyck" );
	deepEqual( Stem("olyckligt"), "olyck" );
	deepEqual( Stem("olyckligtvis"), "olyckligtvis" );
	deepEqual( Stem("olyckor"), "olyck" );
	deepEqual( Stem("olyckorna"), "olyck" );
	deepEqual( Stem("olycks"), "olyck" );
	deepEqual( Stem("olycksaliga"), "olycksa" );
	deepEqual( Stem("olycksaningar"), "olycksaning" );
	deepEqual( Stem("olycksbådande"), "olycksbåd" );
	deepEqual( Stem("olycksdagen"), "olycksdag" );
	deepEqual( Stem("olyckshändelsen"), "olyckshänd" );
	deepEqual( Stem("olyckshändelser"), "olyckshänd" );
	deepEqual( Stem("olyckshändelserna"), "olyckshänd" );
	deepEqual( Stem("olycksskräcken"), "olycksskräck" );
	deepEqual( Stem("olycksöde"), "olycksöd" );
	deepEqual( Stem("olydig"), "olyd" );
	deepEqual( Stem("olydnad"), "olydn" );
	deepEqual( Stem("olympiska"), "olympisk" );
	deepEqual( Stem("olyska"), "olysk" );
	deepEqual( Stem("olägenheter"), "olägen" );
	deepEqual( Stem("olägligt"), "oläg" );
	deepEqual( Stem("olåten"), "olåt" );
	deepEqual( Stem("olösligt"), "olös" );
	deepEqual( Stem("olösta"), "olöst" );
	deepEqual( Stem("om"), "om" );
	deepEqual( Stem("omaka"), "omak" );
	deepEqual( Stem("omaket"), "omaket" );
	deepEqual( Stem("omanligt"), "oman" );
	deepEqual( Stem("ombedd"), "ombed" );
	deepEqual( Stem("ombilda"), "ombild" );
	deepEqual( Stem("ombord"), "ombord" );
	deepEqual( Stem("ombre"), "ombr" );
	deepEqual( Stem("ombunden"), "ombund" );
	deepEqual( Stem("ombyta"), "ombyt" );
	deepEqual( Stem("ombyte"), "ombyt" );
	deepEqual( Stem("ombytes"), "ombyt" );
	deepEqual( Stem("ombytte"), "ombyt" );
	deepEqual( Stem("omdöme"), "omdöm" );
	deepEqual( Stem("omedelbar"), "omedelb" );
	deepEqual( Stem("omedelbart"), "omedelbart" );
	deepEqual( Stem("omedgörlig"), "omedgör" );
	deepEqual( Stem("omedgörligaste"), "omedgör" );
	deepEqual( Stem("omedveten"), "omedvet" );
	deepEqual( Stem("omedvetet"), "omedvetet" );
	deepEqual( Stem("omedvetna"), "omedvetn" );
	deepEqual( Stem("omelett"), "omelet" );
	deepEqual( Stem("omen"), "omen" );
	deepEqual( Stem("omfamna"), "omfamn" );
	deepEqual( Stem("omfamnande"), "omfamn" );
	deepEqual( Stem("omfamningar"), "omfamning" );
	deepEqual( Stem("omfara"), "omfar" );
	deepEqual( Stem("omfatta"), "omfat" );
	deepEqual( Stem("omfattas"), "omfat" );
	deepEqual( Stem("omflutet"), "omflutet" );
	deepEqual( Stem("omfång"), "omfång" );
	deepEqual( Stem("omfånget"), "omfånget" );
	deepEqual( Stem("omförmäla"), "omförmäl" );
	deepEqual( Stem("omgaf"), "omgaf" );
	deepEqual( Stem("omgav"), "omgav" );
	deepEqual( Stem("omgifning"), "omgifning" );
	deepEqual( Stem("omgifnings"), "omgifning" );
	deepEqual( Stem("omgift"), "omgift" );
	deepEqual( Stem("omgifven"), "omgifv" );
	deepEqual( Stem("omgivande"), "omgiv" );
	deepEqual( Stem("omgiven"), "omgiv" );
	deepEqual( Stem("omgivet"), "omgivet" );
	deepEqual( Stem("omgivning"), "omgivning" );
	deepEqual( Stem("omgivningarna"), "omgivning" );
	deepEqual( Stem("omgjorda"), "omgjord" );
	deepEqual( Stem("omgjordad"), "omgjord" );
	deepEqual( Stem("omgjort"), "omgjort" );
	deepEqual( Stem("omgång"), "omgång" );
	deepEqual( Stem("omgåvo"), "omgåvo" );
	deepEqual( Stem("omhägnad"), "omhägn" );
	deepEqual( Stem("omhängen"), "omhäng" );
	deepEqual( Stem("omigen"), "omig" );
	deepEqual( Stem("omild"), "omild" );
	deepEqual( Stem("omildt"), "omild" );
	deepEqual( Stem("omisskänlig"), "omisskän" );
	deepEqual( Stem("omisskänliga"), "omisskän" );
	deepEqual( Stem("omisskänligaste"), "omisskän" );
	deepEqual( Stem("omisskänligt"), "omisskän" );
	deepEqual( Stem("omisskänneligt"), "omisskänne" );
	deepEqual( Stem("omisskännligt"), "omisskänn" );
	deepEqual( Stem("omisstänksamma"), "omisstänksamm" );
	deepEqual( Stem("omisstänksamme"), "omisstänksamm" );
	deepEqual( Stem("omklädd"), "omkläd" );
	deepEqual( Stem("omklädseln"), "omklädseln" );
	deepEqual( Stem("omklädt"), "omkläd" );
	deepEqual( Stem("omknutet"), "omknutet" );
	deepEqual( Stem("omkomma"), "omkomm" );
	deepEqual( Stem("omkommit"), "omkommit" );
	deepEqual( Stem("omkrets"), "omkret" );
	deepEqual( Stem("omkrh"), "omkrh" );
	deepEqual( Stem("omkring"), "omkring" );
	deepEqual( Stem("omkringströdda"), "omkringströd" );
	deepEqual( Stem("omkriug"), "omkriug" );
	deepEqual( Stem("omkull"), "omkull" );
	deepEqual( Stem("omle"), "oml" );
	deepEqual( Stem("omlindat"), "omlind" );
	deepEqual( Stem("omlopp"), "omlopp" );
	deepEqual( Stem("omläggning"), "omläggning" );
	deepEqual( Stem("ommöblerad"), "ommöbler" );
	deepEqual( Stem("omnibus"), "omnibus" );
	deepEqual( Stem("omnibusarna"), "omnibus" );
	deepEqual( Stem("omnibusarnas"), "omnibus" );
	deepEqual( Stem("omnämda"), "omnämd" );
	deepEqual( Stem("omnämna"), "omnämn" );
	deepEqual( Stem("omnämnandet"), "omnämn" );
	deepEqual( Stem("omnämnda"), "omnämnd" );
	deepEqual( Stem("omnämnde"), "omnämnd" );
	deepEqual( Stem("omnämndes"), "omnämnd" );
	deepEqual( Stem("omodern"), "omod" );
	deepEqual( Stem("omoralisk"), "omoralisk" );
	deepEqual( Stem("omotiverade"), "omotiver" );
	deepEqual( Stem("omotiverat"), "omotiver" );
	deepEqual( Stem("omringa"), "omring" );
	deepEqual( Stem("område"), "områd" );
	deepEqual( Stem("områden"), "områd" );
	deepEqual( Stem("området"), "området" );
	deepEqual( Stem("omsade"), "oms" );
	deepEqual( Stem("omsider"), "omsid" );
	deepEqual( Stem("omskrivningar"), "omskrivning" );
	deepEqual( Stem("omslag"), "omslag" );
	deepEqual( Stem("omslingrad"), "omslingr" );
	deepEqual( Stem("omslutna"), "omslutn" );
	deepEqual( Stem("omslöt"), "omslöt" );
	deepEqual( Stem("omsorg"), "omsorg" );
	deepEqual( Stem("omsorgen"), "omsorg" );
	deepEqual( Stem("omsorger"), "omsorg" );
	deepEqual( Stem("omsorgsfulla"), "omsorgsfull" );
	deepEqual( Stem("omsorgsfullt"), "omsorgsfull" );
	deepEqual( Stem("omspände"), "omspänd" );
	deepEqual( Stem("omstuvning"), "omstuvning" );
	deepEqual( Stem("omstän"), "omstän" );
	deepEqual( Stem("omständighet"), "omständ" );
	deepEqual( Stem("omständigheten"), "omständ" );
	deepEqual( Stem("omständigheter"), "omständ" );
	deepEqual( Stem("omständigheterna"), "omständ" );
	deepEqual( Stem("omstörta"), "omstört" );
	deepEqual( Stem("omstörtningen"), "omstörtning" );
	deepEqual( Stem("omsvep"), "omsvep" );
	deepEqual( Stem("omsvepa"), "omsvep" );
	deepEqual( Stem("omsvepande"), "omsvep" );
	deepEqual( Stem("omsvärmad"), "omsvärm" );
	deepEqual( Stem("omsvävade"), "omsväv" );
	deepEqual( Stem("omsägande"), "omsäg" );
	deepEqual( Stem("omtala"), "omtal" );
	deepEqual( Stem("omtalade"), "omtal" );
	deepEqual( Stem("omtalar"), "omtal" );
	deepEqual( Stem("omtalas"), "omtal" );
	deepEqual( Stem("omtalta"), "omtalt" );
	deepEqual( Stem("omtanke"), "omtank" );
	deepEqual( Stem("omtuggade"), "omtugg" );
	deepEqual( Stem("omtumlad"), "omtuml" );
	deepEqual( Stem("omtvistade"), "omtvist" );
	deepEqual( Stem("omtyckt"), "omtyck" );
	deepEqual( Stem("omtyckta"), "omtyck" );
	deepEqual( Stem("omtänksamhet"), "omtänksam" );
	deepEqual( Stem("omtänksamma"), "omtänksamm" );
	deepEqual( Stem("omtåliga"), "omtå" );
	deepEqual( Stem("omutlig"), "omut" );
	deepEqual( Stem("omvanda"), "omvand" );
	deepEqual( Stem("omväg"), "omväg" );
	deepEqual( Stem("omvägar"), "omväg" );
	deepEqual( Stem("omvända"), "omvänd" );
	deepEqual( Stem("omvände"), "omvänd" );
	deepEqual( Stem("omvändelse"), "omvänd" );
	deepEqual( Stem("omvändt"), "omvänd" );
	deepEqual( Stem("omvärvas"), "omvärv" );
	deepEqual( Stem("omvärvd"), "omvärvd" );
	deepEqual( Stem("omväxling"), "omväxling" );
	deepEqual( Stem("omvårdnad"), "omvårdn" );
	deepEqual( Stem("omänskligt"), "omänsk" );
	deepEqual( Stem("omärklig"), "omärk" );
	deepEqual( Stem("omärkligen"), "omärk" );
	deepEqual( Stem("omärkligt"), "omärk" );
	deepEqual( Stem("omätliga"), "omät" );
	deepEqual( Stem("omätligt"), "omät" );
	deepEqual( Stem("omättliga"), "omätt" );
	deepEqual( Stem("omöjlig"), "omöj" );
	deepEqual( Stem("omöjliga"), "omöj" );
	deepEqual( Stem("omöjligare"), "omöj" );
	deepEqual( Stem("omöjligaste"), "omöj" );
	deepEqual( Stem("omöjligen"), "omöj" );
	deepEqual( Stem("omöjlighet"), "omöj" );
	deepEqual( Stem("omöjligheten"), "omöj" );
	deepEqual( Stem("omöjligt"), "omöj" );
	deepEqual( Stem("on"), "on" );
	deepEqual( Stem("onaturlig"), "onatur" );
	deepEqual( Stem("onaturliga"), "onatur" );
	deepEqual( Stem("onaturligt"), "onatur" );
	deepEqual( Stem("ond"), "ond" );
	deepEqual( Stem("onda"), "ond" );
	deepEqual( Stem("onde"), "ond" );
	deepEqual( Stem("ondo"), "ondo" );
	deepEqual( Stem("ondska"), "ondsk" );
	deepEqual( Stem("ondskefull"), "ondskefull" );
	deepEqual( Stem("ondskefulla"), "ondskefull" );
	deepEqual( Stem("ondskefullt"), "ondskefull" );
	deepEqual( Stem("ondt"), "ondt" );
	deepEqual( Stem("onekligen"), "onek" );
	deepEqual( Stem("onkel"), "onkel" );
	deepEqual( Stem("onkels"), "onkel" );
	deepEqual( Stem("onsdag"), "onsdag" );
	deepEqual( Stem("onsdagen"), "onsdag" );
	deepEqual( Stem("onsdagsafton"), "onsdagsafton" );
	deepEqual( Stem("ont"), "ont" );
	deepEqual( Stem("onus"), "onus" );
	deepEqual( Stem("onytta"), "onyt" );
	deepEqual( Stem("onyttig"), "onytt" );
	deepEqual( Stem("onämnbart"), "onämnbart" );
	deepEqual( Stem("onådigt"), "onåd" );
	deepEqual( Stem("onödig"), "onöd" );
	deepEqual( Stem("onödiga"), "onöd" );
	deepEqual( Stem("onödigt"), "onöd" );
	deepEqual( Stem("onödigtvis"), "onödigtvis" );
	deepEqual( Stem("ooh"), "ooh" );
	deepEqual( Stem("oombedd"), "oombed" );
	deepEqual( Stem("oora"), "oor" );
	deepEqual( Stem("oord"), "oord" );
	deepEqual( Stem("oordnade"), "oordn" );
	deepEqual( Stem("oordnat"), "oordn" );
	deepEqual( Stem("oordning"), "oordning" );
	deepEqual( Stem("opaler"), "opal" );
	deepEqual( Stem("opassamde"), "opassamd" );
	deepEqual( Stem("opassande"), "opass" );
	deepEqual( Stem("opasslighet"), "opass" );
	deepEqual( Stem("opel"), "opel" );
	deepEqual( Stem("opera"), "oper" );
	deepEqual( Stem("operabalett"), "operabalet" );
	deepEqual( Stem("operan"), "operan" );
	deepEqual( Stem("operation"), "operation" );
	deepEqual( Stem("operera"), "operer" );
	deepEqual( Stem("opereras"), "operer" );
	deepEqual( Stem("operor"), "oper" );
	deepEqual( Stem("opinionen"), "opinion" );
	deepEqual( Stem("opp"), "opp" );
	deepEqual( Stem("oppen"), "opp" );
	deepEqual( Stem("opplimens"), "opplim" );
	deepEqual( Stem("opröfvadt"), "opröfvad" );
	deepEqual( Stem("opåräknad"), "opåräkn" );
	deepEqual( Stem("opåräknade"), "opåräkn" );
	deepEqual( Stem("opåräknat"), "opåräkn" );
	deepEqual( Stem("opåtalt"), "opåtalt" );
	deepEqual( Stem("or"), "or" );
	deepEqual( Stem("ora"), "ora" );
	deepEqual( Stem("orakad"), "orak" );
	deepEqual( Stem("orakel"), "orakel" );
	deepEqual( Stem("orangeriet"), "orangeriet" );
	deepEqual( Stem("orangutang"), "orangutang" );
	deepEqual( Stem("orcn"), "orcn" );
	deepEqual( Stem("ord"), "ord" );
	deepEqual( Stem("ordagrant"), "ordagrant" );
	deepEqual( Stem("ordalag"), "ordalag" );
	deepEqual( Stem("ordat"), "ord" );
	deepEqual( Stem("ordbyte"), "ordbyt" );
	deepEqual( Stem("orden"), "ord" );
	deepEqual( Stem("ordens"), "ord" );
	deepEqual( Stem("ordensband"), "ordensband" );
	deepEqual( Stem("ordentlig"), "ordent" );
	deepEqual( Stem("ordentliga"), "ordent" );
	deepEqual( Stem("ordentlighet"), "ordent" );
	deepEqual( Stem("ordentligt"), "ordent" );
	deepEqual( Stem("order"), "ord" );
	deepEqual( Stem("ordet"), "ordet" );
	deepEqual( Stem("ordets"), "ordet" );
	deepEqual( Stem("ordflöde"), "ordflöd" );
	deepEqual( Stem("ordföranden"), "ordför" );
	deepEqual( Stem("ordinarier"), "ordinari" );
	deepEqual( Stem("ordinarierna"), "ordinari" );
	deepEqual( Stem("ordination"), "ordination" );
	deepEqual( Stem("ordinär"), "ordinär" );
	deepEqual( Stem("ordlekarna"), "ordlek" );
	deepEqual( Stem("ordna"), "ordn" );
	deepEqual( Stem("ordnad"), "ordn" );
	deepEqual( Stem("ordnade"), "ordn" );
	deepEqual( Stem("ordnande"), "ordn" );
	deepEqual( Stem("ordnar"), "ordn" );
	deepEqual( Stem("ordnat"), "ordn" );
	deepEqual( Stem("ordning"), "ordning" );
	deepEqual( Stem("ordningen"), "ordning" );
	deepEqual( Stem("ordrikhet"), "ordrik" );
	deepEqual( Stem("ords"), "ord" );
	deepEqual( Stem("ordspråk"), "ordspråk" );
	deepEqual( Stem("ordspråket"), "ordspråket" );
	deepEqual( Stem("ordspråksvisdom"), "ordspråksvisdom" );
	deepEqual( Stem("ordström"), "ordström" );
	deepEqual( Stem("oreda"), "ored" );
	deepEqual( Stem("oredan"), "oredan" );
	deepEqual( Stem("oredig"), "ored" );
	deepEqual( Stem("orediga"), "ored" );
	deepEqual( Stem("oredighet"), "ored" );
	deepEqual( Stem("oredigt"), "ored" );
	deepEqual( Stem("oregelbunden"), "oregelbund" );
	deepEqual( Stem("oregelbundenhet"), "oregelbunden" );
	deepEqual( Stem("oren"), "oren" );
	deepEqual( Stem("orena"), "oren" );
	deepEqual( Stem("orenhet"), "oren" );
	deepEqual( Stem("orenhets"), "orenhet" );
	deepEqual( Stem("orenlighet"), "oren" );
	deepEqual( Stem("orenom"), "orenom" );
	deepEqual( Stem("orerade"), "orer" );
	deepEqual( Stem("oresonhga"), "oresonhg" );
	deepEqual( Stem("oresonlig"), "oreson" );
	deepEqual( Stem("organ"), "organ" );
	deepEqual( Stem("organiserade"), "organiser" );
	deepEqual( Stem("organiskt"), "organisk" );
	deepEqual( Stem("organist"), "organist" );
	deepEqual( Stem("orgel"), "orgel" );
	deepEqual( Stem("orgelhus"), "orgelhus" );
	deepEqual( Stem("orgelmusik"), "orgelmusik" );
	deepEqual( Stem("orgelmusiken"), "orgelmusik" );
	deepEqual( Stem("orgeln"), "orgeln" );
	deepEqual( Stem("orgelns"), "orgeln" );
	deepEqual( Stem("orgelo"), "orgelo" );
	deepEqual( Stem("orgelomsusade"), "orgelomsus" );
	deepEqual( Stem("orglar"), "orgl" );
	deepEqual( Stem("orgorna"), "org" );
	deepEqual( Stem("orgverk"), "orgverk" );
	deepEqual( Stem("orh"), "orh" );
	deepEqual( Stem("orienterad"), "orienter" );
	deepEqual( Stem("original"), "original" );
	deepEqual( Stem("originalspråket"), "originalspråket" );
	deepEqual( Stem("originalutgåvan"), "originalutgåvan" );
	deepEqual( Stem("originell"), "originell" );
	deepEqual( Stem("oriktigt"), "orikt" );
	deepEqual( Stem("orimlig"), "orim" );
	deepEqual( Stem("orimlighet"), "orim" );
	deepEqual( Stem("orimligheter"), "orim" );
	deepEqual( Stem("orimligt"), "orim" );
	deepEqual( Stem("orka"), "ork" );
	deepEqual( Stem("orkade"), "ork" );
	deepEqual( Stem("orkan"), "orkan" );
	deepEqual( Stem("orkanen"), "orkan" );
	deepEqual( Stem("orkanerna"), "orkan" );
	deepEqual( Stem("orkar"), "ork" );
	deepEqual( Stem("orkat"), "ork" );
	deepEqual( Stem("orkestern"), "orkest" );
	deepEqual( Stem("orkesterns"), "orkest" );
	deepEqual( Stem("orkide"), "orkid" );
	deepEqual( Stem("orkideer"), "orkide" );
	deepEqual( Stem("orklös"), "orklös" );
	deepEqual( Stem("orlofssedel"), "orlofssedel" );
	deepEqual( Stem("orlov"), "orlov" );
	deepEqual( Stem("orlovssedel"), "orlovssedel" );
	deepEqual( Stem("orm"), "orm" );
	deepEqual( Stem("ormar"), "orm" );
	deepEqual( Stem("ormdrömmar"), "ormdrömm" );
	deepEqual( Stem("ormen"), "orm" );
	deepEqual( Stem("ormligt"), "orm" );
	deepEqual( Stem("ormskinn"), "ormskin" );
	deepEqual( Stem("ormständighet"), "ormständ" );
	deepEqual( Stem("ormständigheter"), "ormständ" );
	deepEqual( Stem("oro"), "oro" );
	deepEqual( Stem("oroa"), "oro" );
	deepEqual( Stem("oroad"), "oro" );
	deepEqual( Stem("oroade"), "oro" );
	deepEqual( Stem("oroades"), "oro" );
	deepEqual( Stem("oroande"), "oro" );
	deepEqual( Stem("oroar"), "oro" );
	deepEqual( Stem("oroas"), "oro" );
	deepEqual( Stem("oroat"), "oro" );
	deepEqual( Stem("oroats"), "oroat" );
	deepEqual( Stem("orolig"), "oro" );
	deepEqual( Stem("oroliga"), "oro" );
	deepEqual( Stem("oroligare"), "oro" );
	deepEqual( Stem("orolige"), "oro" );
	deepEqual( Stem("oroligt"), "oro" );
	deepEqual( Stem("oron"), "oron" );
	deepEqual( Stem("orons"), "oron" );
	deepEqual( Stem("orrspel"), "orrspel" );
	deepEqual( Stem("orsak"), "orsak" );
	deepEqual( Stem("orsakade"), "orsak" );
	deepEqual( Stem("orsaken"), "orsak" );
	deepEqual( Stem("orsaker"), "orsak" );
	deepEqual( Stem("orsakskedjan"), "orsakskedjan" );
	deepEqual( Stem("ort"), "ort" );
	deepEqual( Stem("orten"), "ort" );
	deepEqual( Stem("ortodox"), "ortodox" );
	deepEqual( Stem("ortstidning"), "ortstidning" );
	deepEqual( Stem("orubbad"), "orubb" );
	deepEqual( Stem("orubbat"), "orubb" );
	deepEqual( Stem("orubbliga"), "orubb" );
	deepEqual( Stem("orubbligt"), "orubb" );
	deepEqual( Stem("oryggliga"), "orygg" );
	deepEqual( Stem("oräkneliga"), "oräkne" );
	deepEqual( Stem("orätt"), "orät" );
	deepEqual( Stem("orättvis"), "orättvis" );
	deepEqual( Stem("orättvisa"), "orättvis" );
	deepEqual( Stem("orättvisan"), "orättvisan" );
	deepEqual( Stem("orättvist"), "orättvist" );
	deepEqual( Stem("oråd"), "oråd" );
	deepEqual( Stem("orådet"), "orådet" );
	deepEqual( Stem("orör"), "orör" );
	deepEqual( Stem("orörd"), "orörd" );
	deepEqual( Stem("orörda"), "orörd" );
	deepEqual( Stem("orörlig"), "orör" );
	deepEqual( Stem("orörliga"), "orör" );
	deepEqual( Stem("orörligt"), "orör" );
	deepEqual( Stem("osa"), "osa" );
	deepEqual( Stem("osalig"), "osa" );
	deepEqual( Stem("osaligt"), "osa" );
	deepEqual( Stem("osams"), "osam" );
	deepEqual( Stem("osanning"), "osanning" );
	deepEqual( Stem("osanningar"), "osanning" );
	deepEqual( Stem("osanningen"), "osanning" );
	deepEqual( Stem("osannolik"), "osannolik" );
	deepEqual( Stem("osborn"), "osborn" );
	deepEqual( Stem("osedd"), "osed" );
	deepEqual( Stem("osedda"), "osed" );
	deepEqual( Stem("osedligheten"), "osed" );
	deepEqual( Stem("oskadlig"), "oskad" );
	deepEqual( Stem("oskadliga"), "oskad" );
	deepEqual( Stem("oskalad"), "oskal" );
	deepEqual( Stem("oskattbara"), "oskattbar" );
	deepEqual( Stem("oskicklig"), "oskick" );
	deepEqual( Stem("oskiljaktiga"), "oskiljakt" );
	deepEqual( Stem("oskrivna"), "oskrivn" );
	deepEqual( Stem("oskuld"), "oskuld" );
	deepEqual( Stem("oskulds"), "oskuld" );
	deepEqual( Stem("oskyldig"), "oskyld" );
	deepEqual( Stem("oskyldiga"), "oskyld" );
	deepEqual( Stem("oskyldighetens"), "oskyld" );
	deepEqual( Stem("oskyldigt"), "oskyld" );
	deepEqual( Stem("oskönt"), "oskönt" );
	deepEqual( Stem("osmakliga"), "osmak" );
	deepEqual( Stem("osnygghet"), "osnygg" );
	deepEqual( Stem("ospard"), "ospard" );
	deepEqual( Stem("ospätt"), "ospät" );
	deepEqual( Stem("oss"), "oss" );
	deepEqual( Stem("ostindiska"), "ostindisk" );
	deepEqual( Stem("ostkupa"), "ostkup" );
	deepEqual( Stem("ostron"), "ostron" );
	deepEqual( Stem("osttransporten"), "osttransport" );
	deepEqual( Stem("ostyrig"), "ostyr" );
	deepEqual( Stem("ostyriga"), "ostyr" );
	deepEqual( Stem("ostyrige"), "ostyr" );
	deepEqual( Stem("ostörd"), "ostörd" );
	deepEqual( Stem("ostörda"), "ostörd" );
	deepEqual( Stem("ostört"), "ostört" );
	deepEqual( Stem("osund"), "osund" );
	deepEqual( Stem("osunda"), "osund" );
	deepEqual( Stem("osvald"), "osvald" );
	deepEqual( Stem("osvikligt"), "osvik" );
	deepEqual( Stem("osviva"), "osviv" );
	deepEqual( Stem("osympatiskt"), "osympatisk" );
	deepEqual( Stem("osyn"), "osyn" );
	deepEqual( Stem("osynlig"), "osyn" );
	deepEqual( Stem("osynliga"), "osyn" );
	deepEqual( Stem("osäkerhet"), "osäker" );
	deepEqual( Stem("osäkert"), "osäkert" );
	deepEqual( Stem("osäkra"), "osäkr" );
	deepEqual( Stem("otack"), "otack" );
	deepEqual( Stem("otackad"), "otack" );
	deepEqual( Stem("otacksam"), "otacksam" );
	deepEqual( Stem("otacksammaste"), "otacksamm" );
	deepEqual( Stem("otacksamme"), "otacksamm" );
	deepEqual( Stem("otacksamt"), "otacksamt" );
	deepEqual( Stem("otaheiti"), "otaheiti" );
	deepEqual( Stem("otaliga"), "ota" );
	deepEqual( Stem("otaligt"), "ota" );
	deepEqual( Stem("otalt"), "otalt" );
	deepEqual( Stem("otanes"), "otan" );
	deepEqual( Stem("otid"), "otid" );
	deepEqual( Stem("otillbörliga"), "otillbör" );
	deepEqual( Stem("otillbörligt"), "otillbör" );
	deepEqual( Stem("otillfreds"), "otillfred" );
	deepEqual( Stem("otillfredsställd"), "otillfredsställd" );
	deepEqual( Stem("otillfredsställda"), "otillfredsställd" );
	deepEqual( Stem("otillfredsställt"), "otillfredsställt" );
	deepEqual( Stem("otillgänglig"), "otillgäng" );
	deepEqual( Stem("otillgängliga"), "otillgäng" );
	deepEqual( Stem("otillgängligt"), "otillgäng" );
	deepEqual( Stem("otillräcklig"), "otillräck" );
	deepEqual( Stem("otillräckligt"), "otillräck" );
	deepEqual( Stem("otillständiga"), "otillständ" );
	deepEqual( Stem("otjenst"), "otjenst" );
	deepEqual( Stem("otjensten"), "otjenst" );
	deepEqual( Stem("otjänliga"), "otjän" );
	deepEqual( Stem("otrevlig"), "otrev" );
	deepEqual( Stem("otrevligaste"), "otrev" );
	deepEqual( Stem("otrevligt"), "otrev" );
	deepEqual( Stem("otro"), "otro" );
	deepEqual( Stem("otrogcn"), "otrogcn" );
	deepEqual( Stem("otrogen"), "otrog" );
	deepEqual( Stem("otrogna"), "otrogn" );
	deepEqual( Stem("otrogne"), "otrogn" );
	deepEqual( Stem("otrohet"), "otro" );
	deepEqual( Stem("otrolig"), "otro" );
	deepEqual( Stem("otroliga"), "otro" );
	deepEqual( Stem("otroligt"), "otro" );
	deepEqual( Stem("otthard"), "otthard" );
	deepEqual( Stem("ottomanen"), "ottoman" );
	deepEqual( Stem("otukten"), "otuk" );
	deepEqual( Stem("otuktiga"), "otukt" );
	deepEqual( Stem("otur"), "otur" );
	deepEqual( Stem("oturen"), "otur" );
	deepEqual( Stem("otvifvelaktigt"), "otvifvelakt" );
	deepEqual( Stem("otvivelaktigt"), "otvivelakt" );
	deepEqual( Stem("otvungenhet"), "otvungen" );
	deepEqual( Stem("otydbara"), "otydbar" );
	deepEqual( Stem("otydlig"), "otyd" );
	deepEqual( Stem("otydliga"), "otyd" );
	deepEqual( Stem("otydligt"), "otyd" );
	deepEqual( Stem("otyg"), "otyg" );
	deepEqual( Stem("otyget"), "otyget" );
	deepEqual( Stem("otyglad"), "otygl" );
	deepEqual( Stem("otympligt"), "otymp" );
	deepEqual( Stem("otäck"), "otäck" );
	deepEqual( Stem("otäcka"), "otäck" );
	deepEqual( Stem("otäckaste"), "otäck" );
	deepEqual( Stem("otäckheter"), "otäck" );
	deepEqual( Stem("otäckt"), "otäck" );
	deepEqual( Stem("otänkbara"), "otänkbar" );
	deepEqual( Stem("otänkbart"), "otänkbart" );
	deepEqual( Stem("otålig"), "otå" );
	deepEqual( Stem("otåliga"), "otå" );
	deepEqual( Stem("otåligare"), "otå" );
	deepEqual( Stem("otålige"), "otå" );
	deepEqual( Stem("otålighet"), "otå" );
	deepEqual( Stem("otåligt"), "otå" );
	deepEqual( Stem("otörstig"), "otörst" );
	deepEqual( Stem("otörstlg"), "otörstlg" );
	deepEqual( Stem("oumbärligaste"), "oumbär" );
	deepEqual( Stem("oundgänglig"), "oundgäng" );
	deepEqual( Stem("oundgängliga"), "oundgäng" );
	deepEqual( Stem("oundgängligaste"), "oundgäng" );
	deepEqual( Stem("oundvikliga"), "oundvik" );
	deepEqual( Stem("oundvikligt"), "oundvik" );
	deepEqual( Stem("oupphörligen"), "oupphör" );
	deepEqual( Stem("oupphörligt"), "oupphör" );
	deepEqual( Stem("oupptaget"), "oupptaget" );
	deepEqual( Stem("outgrundlig"), "outgrund" );
	deepEqual( Stem("outgrundligt"), "outgrund" );
	deepEqual( Stem("outhärdlig"), "outhärd" );
	deepEqual( Stem("outhärdliga"), "outhärd" );
	deepEqual( Stem("outhärdligt"), "outhärd" );
	deepEqual( Stem("outplånligt"), "outplån" );
	deepEqual( Stem("outrannsakligt"), "outrannsak" );
	deepEqual( Stem("outredda"), "outred" );
	deepEqual( Stem("outrotliga"), "outrot" );
	deepEqual( Stem("outsläcklig"), "outsläck" );
	deepEqual( Stem("outsläckligt"), "outsläck" );
	deepEqual( Stem("outsäglig"), "outsäg" );
	deepEqual( Stem("outsägliga"), "outsäg" );
	deepEqual( Stem("outsägligt"), "outsäg" );
	deepEqual( Stem("outtröttlig"), "outtrött" );
	deepEqual( Stem("outtröttliga"), "outtrött" );
	deepEqual( Stem("outvecklad"), "outveckl" );
	deepEqual( Stem("ovad"), "ovad" );
	deepEqual( Stem("oval"), "oval" );
	deepEqual( Stem("ovala"), "oval" );
	deepEqual( Stem("ovan"), "ovan" );
	deepEqual( Stem("ovana"), "ovan" );
	deepEqual( Stem("ovanan"), "ovanan" );
	deepEqual( Stem("ovanfor"), "ovanf" );
	deepEqual( Stem("ovanför"), "ovanför" );
	deepEqual( Stem("ovanlig"), "ovan" );
	deepEqual( Stem("ovanliga"), "ovan" );
	deepEqual( Stem("ovanlighetens"), "ovan" );
	deepEqual( Stem("ovanligt"), "ovan" );
	deepEqual( Stem("ovannämnda"), "ovannämnd" );
	deepEqual( Stem("ovanpå"), "ovanpå" );
	deepEqual( Stem("ovansklig"), "ovansk" );
	deepEqual( Stem("ovant"), "ovant" );
	deepEqual( Stem("ovaraktig"), "ovarakt" );
	deepEqual( Stem("ovarsam"), "ovarsam" );
	deepEqual( Stem("ovarsamt"), "ovarsamt" );
	deepEqual( Stem("over"), "over" );
	deepEqual( Stem("overklig"), "overk" );
	deepEqual( Stem("overkligt"), "overk" );
	deepEqual( Stem("overksam"), "overksam" );
	deepEqual( Stem("overksamhet"), "overksam" );
	deepEqual( Stem("overksamma"), "overksamm" );
	deepEqual( Stem("overretade"), "overret" );
	deepEqual( Stem("overseende"), "overseend" );
	deepEqual( Stem("ovetande"), "ovet" );
	deepEqual( Stem("ovett"), "ovet" );
	deepEqual( Stem("ovidkommande"), "ovidkomm" );
	deepEqual( Stem("ovigda"), "ovig" );
	deepEqual( Stem("oviktig"), "ovikt" );
	deepEqual( Stem("ovilja"), "ovilj" );
	deepEqual( Stem("ovilkorligt"), "ovilkor" );
	deepEqual( Stem("ovill"), "ovill" );
	deepEqual( Stem("ovillkoiliga"), "ovillkoi" );
	deepEqual( Stem("ovillkorligen"), "ovillkor" );
	deepEqual( Stem("ovillkorligt"), "ovillkor" );
	deepEqual( Stem("ovisa"), "ovis" );
	deepEqual( Stem("oviss"), "oviss" );
	deepEqual( Stem("ovisshet"), "oviss" );
	deepEqual( Stem("ovissheten"), "oviss" );
	deepEqual( Stem("ovisst"), "ovisst" );
	deepEqual( Stem("oväder"), "oväd" );
	deepEqual( Stem("oväderspiskade"), "oväderspisk" );
	deepEqual( Stem("ovädrets"), "ovädret" );
	deepEqual( Stem("ovälkomna"), "ovälkomn" );
	deepEqual( Stem("ovälkomne"), "ovälkomn" );
	deepEqual( Stem("ovän"), "ovän" );
	deepEqual( Stem("ovänlig"), "ovän" );
	deepEqual( Stem("ovänligt"), "ovän" );
	deepEqual( Stem("ovänner"), "ovän" );
	deepEqual( Stem("oväntad"), "ovänt" );
	deepEqual( Stem("oväntade"), "ovänt" );
	deepEqual( Stem("oväntat"), "ovänt" );
	deepEqual( Stem("ovärderlig"), "ovärder" );
	deepEqual( Stem("ovärdig"), "ovärd" );
	deepEqual( Stem("ovärdige"), "ovärd" );
	deepEqual( Stem("ovärdigt"), "ovärd" );
	deepEqual( Stem("oväsentligheter"), "oväsent" );
	deepEqual( Stem("oväsentligt"), "oväsent" );
	deepEqual( Stem("oxar"), "oxar" );
	deepEqual( Stem("oxars"), "oxar" );
	deepEqual( Stem("oxbringan"), "oxbringan" );
	deepEqual( Stem("oxe"), "oxe" );
	deepEqual( Stem("oxel"), "oxel" );
	deepEqual( Stem("oxköttet"), "oxköttet" );
	deepEqual( Stem("oäkta"), "oäkt" );
	deepEqual( Stem("oänd"), "oänd" );
	deepEqual( Stem("oändlig"), "oänd" );
	deepEqual( Stem("oändliga"), "oänd" );
	deepEqual( Stem("oändlighet"), "oänd" );
	deepEqual( Stem("oändligt"), "oänd" );
	deepEqual( Stem("oäven"), "oäv" );
	deepEqual( Stem("oåterkalleliga"), "oåterkalle" );
	deepEqual( Stem("oåterkalleligen"), "oåterkalle" );
	deepEqual( Stem("oåtkomlig"), "oåtkom" );
	deepEqual( Stem("oöfverlagda"), "oöfverlag" );
	deepEqual( Stem("oöfvervinnelig"), "oöfvervinne" );
	deepEqual( Stem("oöfvervinneliga"), "oöfvervinne" );
	deepEqual( Stem("oöverskådliga"), "oöverskåd" );
	deepEqual( Stem("oövervinneliga"), "oövervinne" );
	deepEqual( Stem("oövervinneligt"), "oövervinne" );
	deepEqual( Stem("p"), "p" );
	deepEqual( Stem("pa"), "pa" );
	deepEqual( Stem("paa"), "paa" );
	deepEqual( Stem("pablen"), "pabl" );
	deepEqual( Stem("pack"), "pack" );
	deepEqual( Stem("packa"), "pack" );
	deepEqual( Stem("packar"), "pack" );
	deepEqual( Stem("packat"), "pack" );
	deepEqual( Stem("packet"), "packet" );
	deepEqual( Stem("packlår"), "packlår" );
	deepEqual( Stem("packning"), "packning" );
	deepEqual( Stem("packor"), "pack" );
	deepEqual( Stem("packorna"), "pack" );
	deepEqual( Stem("padda"), "padd" );
	deepEqual( Stem("paddan"), "paddan" );
	deepEqual( Stem("pade"), "pad" );
	deepEqual( Stem("pades"), "pad" );
	deepEqual( Stem("pagatt"), "pagat" );
	deepEqual( Stem("page"), "pag" );
	deepEqual( Stem("pah"), "pah" );
	deepEqual( Stem("pahittig"), "pahitt" );
	deepEqual( Stem("pahlcn"), "pahlcn" );
	deepEqual( Stem("pahle"), "pahl" );
	deepEqual( Stem("pahlen"), "pahl" );
	deepEqual( Stem("pahleu"), "pahleu" );
	deepEqual( Stem("pahlr"), "pahlr" );
	deepEqual( Stem("pahlsn"), "pahlsn" );
	deepEqual( Stem("paillen"), "paill" );
	deepEqual( Stem("pajasskratt"), "pajasskrat" );
	deepEqual( Stem("pajrock"), "pajrock" );
	deepEqual( Stem("paket"), "paket" );
	deepEqual( Stem("palade"), "pal" );
	deepEqual( Stem("palats"), "palat" );
	deepEqual( Stem("pall"), "pall" );
	deepEqual( Stem("pallen"), "pall" );
	deepEqual( Stem("palllen"), "palll" );
	deepEqual( Stem("palm"), "palm" );
	deepEqual( Stem("palmaer"), "palma" );
	deepEqual( Stem("palmer"), "palm" );
	deepEqual( Stem("palmqvist"), "palmqvist" );
	deepEqual( Stem("palmsus"), "palmsus" );
	deepEqual( Stem("paltiga"), "palt" );
	deepEqual( Stem("paltlen"), "paltl" );
	deepEqual( Stem("pamparna"), "pamp" );
	deepEqual( Stem("pan"), "pan" );
	deepEqual( Stem("pande"), "pand" );
	deepEqual( Stem("panelen"), "panel" );
	deepEqual( Stem("paneler"), "panel" );
	deepEqual( Stem("pank"), "pank" );
	deepEqual( Stem("panna"), "pann" );
	deepEqual( Stem("pannan"), "pannan" );
	deepEqual( Stem("pannkakor"), "pannkak" );
	deepEqual( Stem("pannorna"), "pann" );
	deepEqual( Stem("pansar"), "pans" );
	deepEqual( Stem("pant"), "pant" );
	deepEqual( Stem("pantomim"), "pantomim" );
	deepEqual( Stem("pantomimen"), "pantomim" );
	deepEqual( Stem("pantomimer"), "pantomim" );
	deepEqual( Stem("pantomimiska"), "pantomimisk" );
	deepEqual( Stem("pantomin"), "pantomin" );
	deepEqual( Stem("pantsätta"), "pantsät" );
	deepEqual( Stem("papiljotter"), "papiljot" );
	deepEqual( Stem("papiljotterna"), "papiljot" );
	deepEqual( Stem("papinianus"), "papinianus" );
	deepEqual( Stem("pappa"), "papp" );
	deepEqual( Stem("pappas"), "papp" );
	deepEqual( Stem("pappask"), "pappask" );
	deepEqual( Stem("pappenheimare"), "pappenheim" );
	deepEqual( Stem("papper"), "papp" );
	deepEqual( Stem("papperen"), "papper" );
	deepEqual( Stem("papperet"), "papperet" );
	deepEqual( Stem("papperskniv"), "papperskniv" );
	deepEqual( Stem("papperslapp"), "papperslapp" );
	deepEqual( Stem("papperslappar"), "papperslapp" );
	deepEqual( Stem("pappersomslag"), "pappersomslag" );
	deepEqual( Stem("pappersremsa"), "pappersrems" );
	deepEqual( Stem("pappersrosetter"), "pappersroset" );
	deepEqual( Stem("pappersrullen"), "pappersrull" );
	deepEqual( Stem("pappersskärmar"), "pappersskärm" );
	deepEqual( Stem("pappersstadga"), "pappersstadg" );
	deepEqual( Stem("papperstuss"), "papperstuss" );
	deepEqual( Stem("par"), "par" );
	deepEqual( Stem("para"), "par" );
	deepEqual( Stem("parad"), "par" );
	deepEqual( Stem("paraden"), "parad" );
	deepEqual( Stem("paradigma"), "paradigm" );
	deepEqual( Stem("paradis"), "paradis" );
	deepEqual( Stem("paradiset"), "paradiset" );
	deepEqual( Stem("parantes"), "parant" );
	deepEqual( Stem("paraply"), "paraply" );
	deepEqual( Stem("paraplyet"), "paraplyet" );
	deepEqual( Stem("paraplymakarna"), "paraplymak" );
	deepEqual( Stem("paraplyn"), "paraplyn" );
	deepEqual( Stem("parasolett"), "parasolet" );
	deepEqual( Stem("parasoletten"), "parasolet" );
	deepEqual( Stem("parasoll"), "parasoll" );
	deepEqual( Stem("parasollernas"), "parasoll" );
	deepEqual( Stem("parce"), "parc" );
	deepEqual( Stem("paren"), "par" );
	deepEqual( Stem("parentes"), "parent" );
	deepEqual( Stem("paret"), "paret" );
	deepEqual( Stem("parets"), "paret" );
	deepEqual( Stem("parfym"), "parfym" );
	deepEqual( Stem("parfymen"), "parfym" );
	deepEqual( Stem("paris"), "paris" );
	deepEqual( Stem("parisiska"), "parisisk" );
	deepEqual( Stem("parken"), "park" );
	deepEqual( Stem("parkens"), "park" );
	deepEqual( Stem("parkernas"), "park" );
	deepEqual( Stem("parkett"), "parket" );
	deepEqual( Stem("parketten"), "parket" );
	deepEqual( Stem("parkettgolv"), "parkettgolv" );
	deepEqual( Stem("parlament"), "parlament" );
	deepEqual( Stem("parlement"), "parlement" );
	deepEqual( Stem("parna"), "parn" );
	deepEqual( Stem("paroit"), "paroit" );
	deepEqual( Stem("paroxysmer"), "paroxysm" );
	deepEqual( Stem("pars"), "par" );
	deepEqual( Stem("parsifal"), "parsifal" );
	deepEqual( Stem("parten"), "part" );
	deepEqual( Stem("parterna"), "part" );
	deepEqual( Stem("parti"), "parti" );
	deepEqual( Stem("partie"), "parti" );
	deepEqual( Stem("partier"), "parti" );
	deepEqual( Stem("partierna"), "parti" );
	deepEqual( Stem("partiet"), "partiet" );
	deepEqual( Stem("partisk"), "partisk" );
	deepEqual( Stem("partiska"), "partisk" );
	deepEqual( Stem("partout"), "partout" );
	deepEqual( Stem("partu"), "partu" );
	deepEqual( Stem("parvis"), "parvis" );
	deepEqual( Stem("pas"), "pas" );
	deepEqual( Stem("pascal"), "pascal" );
	deepEqual( Stem("pass"), "pass" );
	deepEqual( Stem("passa"), "pass" );
	deepEqual( Stem("passade"), "pass" );
	deepEqual( Stem("passagerarna"), "passager" );
	deepEqual( Stem("passande"), "pass" );
	deepEqual( Stem("passar"), "pass" );
	deepEqual( Stem("passat"), "pass" );
	deepEqual( Stem("passera"), "passer" );
	deepEqual( Stem("passerade"), "passer" );
	deepEqual( Stem("passerat"), "passer" );
	deepEqual( Stem("passion"), "passion" );
	deepEqual( Stem("passionens"), "passion" );
	deepEqual( Stem("passionerad"), "passioner" );
	deepEqual( Stem("passionerat"), "passioner" );
	deepEqual( Stem("passiv"), "passiv" );
	deepEqual( Stem("passopp"), "passopp" );
	deepEqual( Stem("past"), "past" );
	deepEqual( Stem("pastor"), "past" );
	deepEqual( Stem("pastorat"), "pastor" );
	deepEqual( Stem("pastoratets"), "pastoratet" );
	deepEqual( Stem("pastorn"), "pastorn" );
	deepEqual( Stem("pastorns"), "pastorn" );
	deepEqual( Stem("pastorsadjunkt"), "pastorsadjunk" );
	deepEqual( Stem("pastorsadjunkten"), "pastorsadjunk" );
	deepEqual( Stem("patent"), "patent" );
	deepEqual( Stem("pater"), "pat" );
	deepEqual( Stem("paternoster"), "paternost" );
	deepEqual( Stem("paternosterskären"), "paternosterskär" );
	deepEqual( Stem("patetisk"), "patetisk" );
	deepEqual( Stem("patetiskt"), "patetisk" );
	deepEqual( Stem("patiens"), "pati" );
	deepEqual( Stem("patienskorten"), "patienskort" );
	deepEqual( Stem("patient"), "patient" );
	deepEqual( Stem("patienten"), "patient" );
	deepEqual( Stem("patientens"), "patient" );
	deepEqual( Stem("patienter"), "patient" );
	deepEqual( Stem("patienterna"), "patient" );
	deepEqual( Stem("patiramfes"), "patiramf" );
	deepEqual( Stem("patos"), "pato" );
	deepEqual( Stem("patrask"), "patrask" );
	deepEqual( Stem("patron"), "patron" );
	deepEqual( Stem("patronen"), "patron" );
	deepEqual( Stem("patronessa"), "patroness" );
	deepEqual( Stem("patronessan"), "patronessan" );
	deepEqual( Stem("patronessas"), "patroness" );
	deepEqual( Stem("patrons"), "patron" );
	deepEqual( Stem("patrull"), "patrull" );
	deepEqual( Stem("paula"), "paul" );
	deepEqual( Stem("pauli"), "pauli" );
	deepEqual( Stem("paus"), "paus" );
	deepEqual( Stem("pausen"), "paus" );
	deepEqual( Stem("pauvre"), "pauvr" );
	deepEqual( Stem("paviljongen"), "paviljong" );
	deepEqual( Stem("pcka"), "pcka" );
	deepEqual( Stem("pclargonia"), "pclargoni" );
	deepEqual( Stem("pctra"), "pctra" );
	deepEqual( Stem("pedalen"), "pedal" );
	deepEqual( Stem("pedantansikte"), "pedantansik" );
	deepEqual( Stem("pedantiskt"), "pedantisk" );
	deepEqual( Stem("peka"), "pek" );
	deepEqual( Stem("pekade"), "pek" );
	deepEqual( Stem("pekande"), "pek" );
	deepEqual( Stem("pekar"), "pek" );
	deepEqual( Stem("pekat"), "pek" );
	deepEqual( Stem("pekfinger"), "pekfing" );
	deepEqual( Stem("pekfingerknoge"), "pekfingerknog" );
	deepEqual( Stem("pekfingret"), "pekfingret" );
	deepEqual( Stem("pelarfasad"), "pelarfas" );
	deepEqual( Stem("pelargonia"), "pelargoni" );
	deepEqual( Stem("pelarn"), "pelarn" );
	deepEqual( Stem("pelham"), "pelham" );
	deepEqual( Stem("pelra"), "pelr" );
	deepEqual( Stem("pendang"), "pendang" );
	deepEqual( Stem("pendangkomedi"), "pendangkomedi" );
	deepEqual( Stem("pendel"), "pendel" );
	deepEqual( Stem("pendylen"), "pendyl" );
	deepEqual( Stem("pendyler"), "pendyl" );
	deepEqual( Stem("pengar"), "peng" );
	deepEqual( Stem("pengarna"), "peng" );
	deepEqual( Stem("pengarne"), "peng" );
	deepEqual( Stem("penjoar"), "penjo" );
	deepEqual( Stem("penjoaren"), "penjo" );
	deepEqual( Stem("penjoarens"), "penjo" );
	deepEqual( Stem("penna"), "penn" );
	deepEqual( Stem("pennan"), "pennan" );
	deepEqual( Stem("penndrag"), "penndrag" );
	deepEqual( Stem("pennfjädersviftningen"), "pennfjädersviftning" );
	deepEqual( Stem("pennfjädrar"), "pennfjädr" );
	deepEqual( Stem("penning"), "penning" );
	deepEqual( Stem("penningar"), "penning" );
	deepEqual( Stem("penningarna"), "penning" );
	deepEqual( Stem("penningbegäret"), "penningbegäret" );
	deepEqual( Stem("penningeaffärer"), "penningeaffär" );
	deepEqual( Stem("penningeförlägenhet"), "penningeförlägen" );
	deepEqual( Stem("penningen"), "penning" );
	deepEqual( Stem("penningens"), "penning" );
	deepEqual( Stem("penningeutgifter"), "penningeutgift" );
	deepEqual( Stem("penninghjälp"), "penninghjälp" );
	deepEqual( Stem("penningpungen"), "penningpung" );
	deepEqual( Stem("penningsumman"), "penningsumman" );
	deepEqual( Stem("penningälskande"), "penningälsk" );
	deepEqual( Stem("pennkniv"), "pennkniv" );
	deepEqual( Stem("pennor"), "penn" );
	deepEqual( Stem("pennorna"), "penn" );
	deepEqual( Stem("pens"), "pen" );
	deepEqual( Stem("pense"), "pens" );
	deepEqual( Stem("penseer"), "pense" );
	deepEqual( Stem("penseldrag"), "penseldrag" );
	deepEqual( Stem("penseln"), "penseln" );
	deepEqual( Stem("penseögonen"), "penseögon" );
	deepEqual( Stem("penseögonens"), "penseögon" );
	deepEqual( Stem("pension"), "pension" );
	deepEqual( Stem("pensionen"), "pension" );
	deepEqual( Stem("pensionerad"), "pensioner" );
	deepEqual( Stem("pensionsbeloppet"), "pensionsbeloppet" );
	deepEqual( Stem("pep"), "pep" );
	deepEqual( Stem("peppar"), "pepp" );
	deepEqual( Stem("pepparroten"), "pepparrot" );
	deepEqual( Stem("pepprad"), "peppr" );
	deepEqual( Stem("pepprat"), "peppr" );
	deepEqual( Stem("per"), "per" );
	deepEqual( Stem("period"), "period" );
	deepEqual( Stem("periodiskt"), "periodisk" );
	deepEqual( Stem("perla"), "perl" );
	deepEqual( Stem("perlrader"), "perlrad" );
	deepEqual( Stem("permar"), "perm" );
	deepEqual( Stem("permission"), "permission" );
	deepEqual( Stem("perrongen"), "perrong" );
	deepEqual( Stem("pers"), "per" );
	deepEqual( Stem("persedlar"), "persedl" );
	deepEqual( Stem("persmässa"), "persmäss" );
	deepEqual( Stem("person"), "person" );
	deepEqual( Stem("personal"), "personal" );
	deepEqual( Stem("personalen"), "personal" );
	deepEqual( Stem("personen"), "person" );
	deepEqual( Stem("personer"), "person" );
	deepEqual( Stem("personfierade"), "personfier" );
	deepEqual( Stem("personifierade"), "personifier" );
	deepEqual( Stem("personlig"), "person" );
	deepEqual( Stem("personliga"), "person" );
	deepEqual( Stem("personligen"), "person" );
	deepEqual( Stem("personlighet"), "person" );
	deepEqual( Stem("personligheter"), "person" );
	deepEqual( Stem("personligt"), "person" );
	deepEqual( Stem("perspektiv"), "perspektiv" );
	deepEqual( Stem("persson"), "persson" );
	deepEqual( Stem("peruk"), "peruk" );
	deepEqual( Stem("perukstock"), "perukstock" );
	deepEqual( Stem("perversa"), "pervers" );
	deepEqual( Stem("pest"), "pest" );
	deepEqual( Stem("pestartad"), "pestart" );
	deepEqual( Stem("pesten"), "pest" );
	deepEqual( Stem("pestilens"), "pestil" );
	deepEqual( Stem("pestsmittad"), "pestsmit" );
	deepEqual( Stem("petade"), "pet" );
	deepEqual( Stem("petat"), "pet" );
	deepEqual( Stem("peter"), "pet" );
	deepEqual( Stem("peters"), "peter" );
	deepEqual( Stem("petits"), "petit" );
	deepEqual( Stem("petra"), "petr" );
	deepEqual( Stem("petras"), "petr" );
	deepEqual( Stem("petri"), "petri" );
	deepEqual( Stem("petter"), "pett" );
	deepEqual( Stem("petters"), "petter" );
	deepEqual( Stem("pfa"), "pfa" );
	deepEqual( Stem("pfalz"), "pfalz" );
	deepEqual( Stem("pfalzgreves"), "pfalzgrev" );
	deepEqual( Stem("phoebus"), "phoebus" );
	deepEqual( Stem("pi"), "pi" );
	deepEqual( Stem("piano"), "piano" );
	deepEqual( Stem("pianolektioner"), "pianolektion" );
	deepEqual( Stem("pianot"), "pianot" );
	deepEqual( Stem("picka"), "pick" );
	deepEqual( Stem("pickade"), "pick" );
	deepEqual( Stem("pickande"), "pick" );
	deepEqual( Stem("pickandet"), "pick" );
	deepEqual( Stem("pickar"), "pick" );
	deepEqual( Stem("pietistisk"), "pietistisk" );
	deepEqual( Stem("piga"), "pig" );
	deepEqual( Stem("pigan"), "pigan" );
	deepEqual( Stem("pigans"), "pigan" );
	deepEqual( Stem("pigg"), "pigg" );
	deepEqual( Stem("pigga"), "pigg" );
	deepEqual( Stem("piggar"), "pigg" );
	deepEqual( Stem("piggare"), "pigg" );
	deepEqual( Stem("pigor"), "pig" );
	deepEqual( Stem("pigslynorna"), "pigslyn" );
	deepEqual( Stem("pigtyp"), "pigtyp" );
	deepEqual( Stem("pik"), "pik" );
	deepEqual( Stem("pikant"), "pikant" );
	deepEqual( Stem("pikanta"), "pikant" );
	deepEqual( Stem("pikar"), "pik" );
	deepEqual( Stem("pil"), "pil" );
	deepEqual( Stem("pilar"), "pil" );
	deepEqual( Stem("pilarna"), "pil" );
	deepEqual( Stem("pilarnas"), "pil" );
	deepEqual( Stem("pilastrar"), "pilastr" );
	deepEqual( Stem("pilen"), "pil" );
	deepEqual( Stem("pilgrim"), "pilgrim" );
	deepEqual( Stem("pilgrimen"), "pilgrim" );
	deepEqual( Stem("pilgrimsvandring"), "pilgrimsvandring" );
	deepEqual( Stem("pilkogret"), "pilkogret" );
	deepEqual( Stem("piller"), "pill" );
	deepEqual( Stem("pillerasken"), "pillerask" );
	deepEqual( Stem("pillerna"), "pill" );
	deepEqual( Stem("pillertrillare"), "pillertrill" );
	deepEqual( Stem("pillman"), "pillman" );
	deepEqual( Stem("pillret"), "pillret" );
	deepEqual( Stem("pilskarp"), "pilskarp" );
	deepEqual( Stem("pilsner"), "pilsn" );
	deepEqual( Stem("pilt"), "pilt" );
	deepEqual( Stem("pimplar"), "pimpl" );
	deepEqual( Stem("pin"), "pin" );
	deepEqual( Stem("pina"), "pin" );
	deepEqual( Stem("pinade"), "pin" );
	deepEqual( Stem("pinades"), "pin" );
	deepEqual( Stem("pinan"), "pinan" );
	deepEqual( Stem("pinar"), "pin" );
	deepEqual( Stem("pinas"), "pin" );
	deepEqual( Stem("pinat"), "pin" );
	deepEqual( Stem("pinats"), "pinat" );
	deepEqual( Stem("pincene"), "pincen" );
	deepEqual( Stem("pincenen"), "pincen" );
	deepEqual( Stem("pinglade"), "pingl" );
	deepEqual( Stem("pingstens"), "pingst" );
	deepEqual( Stem("pingstliljor"), "pingstlilj" );
	deepEqual( Stem("pinliga"), "pin" );
	deepEqual( Stem("pinnarna"), "pinn" );
	deepEqual( Stem("pinsam"), "pinsam" );
	deepEqual( Stem("pinsbacks"), "pinsback" );
	deepEqual( Stem("pion"), "pion" );
	deepEqual( Stem("pionen"), "pion" );
	deepEqual( Stem("pionröd"), "pionröd" );
	deepEqual( Stem("pip"), "pip" );
	deepEqual( Stem("pipa"), "pip" );
	deepEqual( Stem("pipan"), "pipan" );
	deepEqual( Stem("pipande"), "pip" );
	deepEqual( Stem("piper"), "pip" );
	deepEqual( Stem("piperska"), "pipersk" );
	deepEqual( Stem("pipig"), "pip" );
	deepEqual( Stem("pipor"), "pip" );
	deepEqual( Stem("piporna"), "pip" );
	deepEqual( Stem("pippa"), "pipp" );
	deepEqual( Stem("pippor"), "pipp" );
	deepEqual( Stem("pipporna"), "pipp" );
	deepEqual( Stem("pipstumpen"), "pipstump" );
	deepEqual( Stem("pique"), "piqu" );
	deepEqual( Stem("piraten"), "pirat" );
	deepEqual( Stem("piska"), "pisk" );
	deepEqual( Stem("piskade"), "pisk" );
	deepEqual( Stem("piskan"), "piskan" );
	deepEqual( Stem("piskas"), "pisk" );
	deepEqual( Stem("piskat"), "pisk" );
	deepEqual( Stem("piskslag"), "piskslag" );
	deepEqual( Stem("pistol"), "pistol" );
	deepEqual( Stem("pistolerna"), "pistol" );
	deepEqual( Stem("pistolskott"), "pistolskot" );
	deepEqual( Stem("pitscherstickarn"), "pitscherstickarn" );
	deepEqual( Stem("pittoreskt"), "pittoresk" );
	deepEqual( Stem("pjattra"), "pjattr" );
	deepEqual( Stem("pjes"), "pjes" );
	deepEqual( Stem("pjesen"), "pjes" );
	deepEqual( Stem("pjoskas"), "pjosk" );
	deepEqual( Stem("pjunkeri"), "pjunkeri" );
	deepEqual( Stem("pjunkiga"), "pjunk" );
	deepEqual( Stem("pjäs"), "pjäs" );
	deepEqual( Stem("pjäser"), "pjäs" );
	deepEqual( Stem("pl"), "pl" );
	deepEqual( Stem("placera"), "placer" );
	deepEqual( Stem("placerad"), "placer" );
	deepEqual( Stem("placerade"), "placer" );
	deepEqual( Stem("placerat"), "placer" );
	deepEqual( Stem("pladask"), "pladask" );
	deepEqual( Stem("pladder"), "pladd" );
	deepEqual( Stem("pladdrade"), "pladdr" );
	deepEqual( Stem("pladdrande"), "pladdr" );
	deepEqual( Stem("plagg"), "plagg" );
	deepEqual( Stem("plaggen"), "plagg" );
	deepEqual( Stem("plan"), "plan" );
	deepEqual( Stem("planen"), "plan" );
	deepEqual( Stem("planer"), "plan" );
	deepEqual( Stem("planerad"), "planer" );
	deepEqual( Stem("planerat"), "planer" );
	deepEqual( Stem("planet"), "planet" );
	deepEqual( Stem("planeter"), "planet" );
	deepEqual( Stem("plank"), "plank" );
	deepEqual( Stem("planka"), "plank" );
	deepEqual( Stem("planken"), "plank" );
	deepEqual( Stem("planket"), "planket" );
	deepEqual( Stem("plankhjärtat"), "plankhjärt" );
	deepEqual( Stem("planlagda"), "planlag" );
	deepEqual( Stem("planscher"), "plansch" );
	deepEqual( Stem("planschverkshögarna"), "planschverkshög" );
	deepEqual( Stem("planta"), "plant" );
	deepEqual( Stem("plantan"), "plantan" );
	deepEqual( Stem("plantar"), "plant" );
	deepEqual( Stem("planterade"), "planter" );
	deepEqual( Stem("planterar"), "planter" );
	deepEqual( Stem("planterat"), "planter" );
	deepEqual( Stem("plantering"), "plantering" );
	deepEqual( Stem("planteringarne"), "plantering" );
	deepEqual( Stem("planteringens"), "plantering" );
	deepEqual( Stem("plaskande"), "plask" );
	deepEqual( Stem("plats"), "plat" );
	deepEqual( Stem("platsen"), "plats" );
	deepEqual( Stem("platser"), "plats" );
	deepEqual( Stem("platserna"), "plats" );
	deepEqual( Stem("platsombud"), "platsombud" );
	deepEqual( Stem("platt"), "platt" );
	deepEqual( Stem("plattade"), "platt" );
	deepEqual( Stem("plattnosansikte"), "plattnosansik" );
	deepEqual( Stem("pli"), "pli" );
	deepEqual( Stem("pligt"), "pligt" );
	deepEqual( Stem("pligten"), "pligt" );
	deepEqual( Stem("pligter"), "pligt" );
	deepEqual( Stem("plikt"), "plikt" );
	deepEqual( Stem("plikta"), "plikt" );
	deepEqual( Stem("pliktat"), "plikt" );
	deepEqual( Stem("plikten"), "plikt" );
	deepEqual( Stem("plikter"), "plikt" );
	deepEqual( Stem("pliktformulär"), "pliktformulär" );
	deepEqual( Stem("pliktförgätna"), "pliktförgätn" );
	deepEqual( Stem("pliktkänsla"), "pliktkänsl" );
	deepEqual( Stem("pliktskyldiga"), "pliktskyld" );
	deepEqual( Stem("plirade"), "plir" );
	deepEqual( Stem("plirande"), "plir" );
	deepEqual( Stem("plirar"), "plir" );
	deepEqual( Stem("pllkt"), "pllkt" );
	deepEqual( Stem("plocka"), "plock" );
	deepEqual( Stem("plockade"), "plock" );
	deepEqual( Stem("plockar"), "plock" );
	deepEqual( Stem("plockat"), "plock" );
	deepEqual( Stem("plogen"), "plog" );
	deepEqual( Stem("plotsligt"), "plots" );
	deepEqual( Stem("plugga"), "plugg" );
	deepEqual( Stem("pluggade"), "plugg" );
	deepEqual( Stem("plumpa"), "plump" );
	deepEqual( Stem("pluralis"), "pluralis" );
	deepEqual( Stem("plus"), "plus" );
	deepEqual( Stem("plyet"), "plyet" );
	deepEqual( Stem("plym"), "plym" );
	deepEqual( Stem("plymbusken"), "plymbusk" );
	deepEqual( Stem("plysch"), "plysch" );
	deepEqual( Stem("plägade"), "pläg" );
	deepEqual( Stem("plägar"), "pläg" );
	deepEqual( Stem("plär"), "plär" );
	deepEqual( Stem("plättar"), "plätt" );
	deepEqual( Stem("plåeade"), "plåead" );
	deepEqual( Stem("plåga"), "plåg" );
	deepEqual( Stem("plågad"), "plåg" );
	deepEqual( Stem("plågade"), "plåg" );
	deepEqual( Stem("plågan"), "plågan" );
	deepEqual( Stem("plågans"), "plågan" );
	deepEqual( Stem("plågar"), "plåg" );
	deepEqual( Stem("plågas"), "plåg" );
	deepEqual( Stem("plågat"), "plåg" );
	deepEqual( Stem("plågoandar"), "plågoand" );
	deepEqual( Stem("plågoandars"), "plågoandar" );
	deepEqual( Stem("plågoande"), "plågo" );
	deepEqual( Stem("plågor"), "plåg" );
	deepEqual( Stem("plågoris"), "plågoris" );
	deepEqual( Stem("plågorna"), "plåg" );
	deepEqual( Stem("plågorum"), "plågorum" );
	deepEqual( Stem("plågsam"), "plågsam" );
	deepEqual( Stem("plågsamma"), "plågsamm" );
	deepEqual( Stem("plågsammaste"), "plågsamm" );
	deepEqual( Stem("plågsamt"), "plågsamt" );
	deepEqual( Stem("plånades"), "plån" );
	deepEqual( Stem("plånas"), "plån" );
	deepEqual( Stem("plånat"), "plån" );
	deepEqual( Stem("plånbok"), "plånbok" );
	deepEqual( Stem("plånboken"), "plånbok" );
	deepEqual( Stem("plåtskorstenar"), "plåtskorsten" );
	deepEqual( Stem("plåtskärmar"), "plåtskärm" );
	deepEqual( Stem("plåttak"), "plåttak" );
	deepEqual( Stem("plöja"), "plöj" );
	deepEqual( Stem("plöjde"), "plöjd" );
	deepEqual( Stem("plöjdes"), "plöjd" );
	deepEqual( Stem("plöts"), "plöt" );
	deepEqual( Stem("plötslig"), "plöts" );
	deepEqual( Stem("plötsliga"), "plöts" );
	deepEqual( Stem("plötsligt"), "plöts" );
	deepEqual( Stem("pnhlen"), "pnhlen" );
	deepEqual( Stem("pocka"), "pock" );
	deepEqual( Stem("pockade"), "pock" );
	deepEqual( Stem("pockern"), "pock" );
	deepEqual( Stem("poem"), "poem" );
	deepEqual( Stem("poemet"), "poemet" );
	deepEqual( Stem("poesi"), "poesi" );
	deepEqual( Stem("poesibok"), "poesibok" );
	deepEqual( Stem("poesierna"), "poesi" );
	deepEqual( Stem("poet"), "poet" );
	deepEqual( Stem("poete"), "poet" );
	deepEqual( Stem("poetens"), "poet" );
	deepEqual( Stem("poetisk"), "poetisk" );
	deepEqual( Stem("poetiska"), "poetisk" );
	deepEqual( Stem("poetiske"), "poetisk" );
	deepEqual( Stem("poetiskt"), "poetisk" );
	deepEqual( Stem("pohle"), "pohl" );
	deepEqual( Stem("pohls"), "pohl" );
	deepEqual( Stem("pois"), "pois" );
	deepEqual( Stem("poj"), "poj" );
	deepEqual( Stem("pojkaktig"), "pojkakt" );
	deepEqual( Stem("pojkaktigt"), "pojkakt" );
	deepEqual( Stem("pojkar"), "pojk" );
	deepEqual( Stem("pojkbytingen"), "pojkbyting" );
	deepEqual( Stem("pojke"), "pojk" );
	deepEqual( Stem("pojken"), "pojk" );
	deepEqual( Stem("pokaler"), "pokal" );
	deepEqual( Stem("poleja"), "polej" );
	deepEqual( Stem("polen"), "pol" );
	deepEqual( Stem("polera"), "poler" );
	deepEqual( Stem("polerade"), "poler" );
	deepEqual( Stem("polis"), "polis" );
	deepEqual( Stem("polisen"), "polis" );
	deepEqual( Stem("poliskonstapel"), "poliskonstapel" );
	deepEqual( Stem("poliskonstapeln"), "poliskonstapeln" );
	deepEqual( Stem("polisonger"), "polisong" );
	deepEqual( Stem("polissongerna"), "polissong" );
	deepEqual( Stem("politik"), "politik" );
	deepEqual( Stem("politiken"), "politik" );
	deepEqual( Stem("politiker"), "politik" );
	deepEqual( Stem("politiska"), "politisk" );
	deepEqual( Stem("polityr"), "polityr" );
	deepEqual( Stem("polityrkärl"), "polityrkärl" );
	deepEqual( Stem("pomril"), "pomril" );
	deepEqual( Stem("ponerar"), "poner" );
	deepEqual( Stem("ponken"), "ponk" );
	deepEqual( Stem("poppelspiran"), "poppelspiran" );
	deepEqual( Stem("popplar"), "poppl" );
	deepEqual( Stem("popplarne"), "poppl" );
	deepEqual( Stem("popularitet"), "popularitet" );
	deepEqual( Stem("populasen"), "populas" );
	deepEqual( Stem("populi"), "populi" );
	deepEqual( Stem("populär"), "populär" );
	deepEqual( Stem("populärt"), "populärt" );
	deepEqual( Stem("porla"), "porl" );
	deepEqual( Stem("porlade"), "porl" );
	deepEqual( Stem("porlande"), "porl" );
	deepEqual( Stem("porlar"), "porl" );
	deepEqual( Stem("porslin"), "porslin" );
	deepEqual( Stem("porslinerna"), "porslin" );
	deepEqual( Stem("porslinet"), "porslinet" );
	deepEqual( Stem("porslinspröd"), "porslinspröd" );
	deepEqual( Stem("porslinsvasen"), "porslinsvas" );
	deepEqual( Stem("port"), "port" );
	deepEqual( Stem("portalen"), "portal" );
	deepEqual( Stem("portar"), "port" );
	deepEqual( Stem("portativ"), "portativ" );
	deepEqual( Stem("portativa"), "portativ" );
	deepEqual( Stem("porten"), "port" );
	deepEqual( Stem("portens"), "port" );
	deepEqual( Stem("porter"), "port" );
	deepEqual( Stem("portgång"), "portgång" );
	deepEqual( Stem("portgången"), "portgång" );
	deepEqual( Stem("portik"), "portik" );
	deepEqual( Stem("portion"), "portion" );
	deepEqual( Stem("portioner"), "portion" );
	deepEqual( Stem("portiären"), "portiär" );
	deepEqual( Stem("portmonnä"), "portmonnä" );
	deepEqual( Stem("porträtt"), "porträt" );
	deepEqual( Stem("porträttet"), "porträttet" );
	deepEqual( Stem("portugalsvatten"), "portugalsvat" );
	deepEqual( Stem("portugisisk"), "portugisisk" );
	deepEqual( Stem("portvalvet"), "portvalvet" );
	deepEqual( Stem("portvin"), "portvin" );
	deepEqual( Stem("portör"), "portör" );
	deepEqual( Stem("portören"), "portör" );
	deepEqual( Stem("pose"), "pos" );
	deepEqual( Stem("poserande"), "poser" );
	deepEqual( Stem("poserar"), "poser" );
	deepEqual( Stem("position"), "position" );
	deepEqual( Stem("post"), "post" );
	deepEqual( Stem("postb"), "postb" );
	deepEqual( Stem("postbäraren"), "postbär" );
	deepEqual( Stem("postdag"), "postdag" );
	deepEqual( Stem("posten"), "post" );
	deepEqual( Stem("poster"), "post" );
	deepEqual( Stem("posterad"), "poster" );
	deepEqual( Stem("posterade"), "poster" );
	deepEqual( Stem("postilla"), "postill" );
	deepEqual( Stem("postpengar"), "postpeng" );
	deepEqual( Stem("potage"), "potag" );
	deepEqual( Stem("potatis"), "potatis" );
	deepEqual( Stem("potatisen"), "potatis" );
	deepEqual( Stem("potatislandet"), "potatisl" );
	deepEqual( Stem("potatisskal"), "potatisskal" );
	deepEqual( Stem("potches"), "potch" );
	deepEqual( Stem("potemkin"), "potemkin" );
	deepEqual( Stem("potemkins"), "potemkin" );
	deepEqual( Stem("pottkäsburken"), "pottkäsburk" );
	deepEqual( Stem("pr"), "pr" );
	deepEqual( Stem("prakt"), "prakt" );
	deepEqual( Stem("praktartiklar"), "praktartikl" );
	deepEqual( Stem("prakten"), "prakt" );
	deepEqual( Stem("praktfulla"), "praktfull" );
	deepEqual( Stem("praktfullt"), "praktfull" );
	deepEqual( Stem("praktgemak"), "praktgemak" );
	deepEqual( Stem("praktik"), "praktik" );
	deepEqual( Stem("praktiken"), "praktik" );
	deepEqual( Stem("praktisera"), "praktiser" );
	deepEqual( Stem("praktisk"), "praktisk" );
	deepEqual( Stem("praktiska"), "praktisk" );
	deepEqual( Stem("prasslade"), "prassl" );
	deepEqual( Stem("prasslar"), "prassl" );
	deepEqual( Stem("prasslet"), "prasslet" );
	deepEqual( Stem("prat"), "prat" );
	deepEqual( Stem("prata"), "prat" );
	deepEqual( Stem("pratade"), "prat" );
	deepEqual( Stem("pratades"), "prat" );
	deepEqual( Stem("pratar"), "prat" );
	deepEqual( Stem("pratat"), "prat" );
	deepEqual( Stem("pratets"), "pratet" );
	deepEqual( Stem("pratlystna"), "pratlystn" );
	deepEqual( Stem("pratsamma"), "pratsamm" );
	deepEqual( Stem("prcdikan"), "prcdikan" );
	deepEqual( Stem("pre"), "pre" );
	deepEqual( Stem("precis"), "precis" );
	deepEqual( Stem("precist"), "precist" );
	deepEqual( Stem("predestination"), "predestination" );
	deepEqual( Stem("predi"), "predi" );
	deepEqual( Stem("predika"), "predik" );
	deepEqual( Stem("predikade"), "predik" );
	deepEqual( Stem("predikament"), "predikament" );
	deepEqual( Stem("predikan"), "predikan" );
	deepEqual( Stem("predikant"), "predikant" );
	deepEqual( Stem("predikanten"), "predikant" );
	deepEqual( Stem("predikantens"), "predikant" );
	deepEqual( Stem("predikanter"), "predikant" );
	deepEqual( Stem("predikaren"), "predik" );
	deepEqual( Stem("predikat"), "predik" );
	deepEqual( Stem("predikningar"), "predikning" );
	deepEqual( Stem("predikningars"), "predikningar" );
	deepEqual( Stem("predikstolen"), "predikstol" );
	deepEqual( Stem("pregel"), "pregel" );
	deepEqual( Stem("pregeln"), "pregeln" );
	deepEqual( Stem("prejade"), "prej" );
	deepEqual( Stem("prejar"), "prej" );
	deepEqual( Stem("preludier"), "preludi" );
	deepEqual( Stem("premiäraktör"), "premiäraktör" );
	deepEqual( Stem("premiäraktören"), "premiäraktör" );
	deepEqual( Stem("pres"), "pres" );
	deepEqual( Stem("present"), "present" );
	deepEqual( Stem("presentabel"), "presentabel" );
	deepEqual( Stem("presenter"), "present" );
	deepEqual( Stem("presentera"), "presenter" );
	deepEqual( Stem("presenterade"), "presenter" );
	deepEqual( Stem("presenterna"), "present" );
	deepEqual( Stem("press"), "press" );
	deepEqual( Stem("pressa"), "press" );
	deepEqual( Stem("pressade"), "press" );
	deepEqual( Stem("pressande"), "press" );
	deepEqual( Stem("pressat"), "press" );
	deepEqual( Stem("presse"), "press" );
	deepEqual( Stem("pressen"), "press" );
	deepEqual( Stem("prestbetyg"), "prestbetyg" );
	deepEqual( Stem("prestdotter"), "prestdot" );
	deepEqual( Stem("presten"), "prest" );
	deepEqual( Stem("pretention"), "pretention" );
	deepEqual( Stem("pretentioner"), "pretention" );
	deepEqual( Stem("pretentionerna"), "pretention" );
	deepEqual( Stem("pretentiösa"), "pretentiös" );
	deepEqual( Stem("preussen"), "preuss" );
	deepEqual( Stem("preussisk"), "preussisk" );
	deepEqual( Stem("prick"), "prick" );
	deepEqual( Stem("pricka"), "prick" );
	deepEqual( Stem("prickad"), "prick" );
	deepEqual( Stem("pricken"), "prick" );
	deepEqual( Stem("primadolma"), "primadolm" );
	deepEqual( Stem("primariiämbetet"), "primariiämbetet" );
	deepEqual( Stem("primarius"), "primarius" );
	deepEqual( Stem("primus"), "primus" );
	deepEqual( Stem("princesse"), "princess" );
	deepEqual( Stem("principal"), "principal" );
	deepEqual( Stem("prins"), "prin" );
	deepEqual( Stem("prinsar"), "prins" );
	deepEqual( Stem("prinsen"), "prins" );
	deepEqual( Stem("prinsessa"), "prinsess" );
	deepEqual( Stem("prinsessan"), "prinsessan" );
	deepEqual( Stem("prior"), "prior" );
	deepEqual( Stem("pris"), "pris" );
	deepEqual( Stem("prisa"), "pris" );
	deepEqual( Stem("prisade"), "pris" );
	deepEqual( Stem("prisande"), "pris" );
	deepEqual( Stem("prisar"), "pris" );
	deepEqual( Stem("prisat"), "pris" );
	deepEqual( Stem("prisen"), "pris" );
	deepEqual( Stem("priserna"), "pris" );
	deepEqual( Stem("priset"), "priset" );
	deepEqual( Stem("privat"), "priv" );
	deepEqual( Stem("privatbanker"), "privatbank" );
	deepEqual( Stem("privatdöpt"), "privatdöpt" );
	deepEqual( Stem("privilegium"), "privilegium" );
	deepEqual( Stem("pro"), "pro" );
	deepEqual( Stem("problem"), "problem" );
	deepEqual( Stem("problemet"), "problemet" );
	deepEqual( Stem("procent"), "procent" );
	deepEqual( Stem("procentar"), "procent" );
	deepEqual( Stem("procentarhänder"), "procentarhänd" );
	deepEqual( Stem("processen"), "process" );
	deepEqual( Stem("procession"), "procession" );
	deepEqual( Stem("producera"), "producer" );
	deepEqual( Stem("produkter"), "produk" );
	deepEqual( Stem("prof"), "prof" );
	deepEqual( Stem("profana"), "profan" );
	deepEqual( Stem("profession"), "profession" );
	deepEqual( Stem("professionell"), "professionell" );
	deepEqual( Stem("professionella"), "professionell" );
	deepEqual( Stem("professo"), "professo" );
	deepEqual( Stem("professor"), "profess" );
	deepEqual( Stem("professorers"), "professorer" );
	deepEqual( Stem("professorn"), "professorn" );
	deepEqual( Stem("professorns"), "professorn" );
	deepEqual( Stem("professors"), "professor" );
	deepEqual( Stem("profet"), "profet" );
	deepEqual( Stem("profeten"), "profet" );
	deepEqual( Stem("profeter"), "profet" );
	deepEqual( Stem("profetera"), "profeter" );
	deepEqual( Stem("profetia"), "profeti" );
	deepEqual( Stem("profetisk"), "profetisk" );
	deepEqual( Stem("profil"), "profil" );
	deepEqual( Stem("profilen"), "profil" );
	deepEqual( Stem("profseglas"), "profsegl" );
	deepEqual( Stem("profstycke"), "profstyck" );
	deepEqual( Stem("profvets"), "profvet" );
	deepEqual( Stem("programmen"), "programm" );
	deepEqual( Stem("programmet"), "programmet" );
	deepEqual( Stem("projekt"), "projek" );
	deepEqual( Stem("prolongation"), "prolongation" );
	deepEqual( Stem("promenad"), "promen" );
	deepEqual( Stem("promenaden"), "promenad" );
	deepEqual( Stem("promenader"), "promenad" );
	deepEqual( Stem("promenadkängor"), "promenadkäng" );
	deepEqual( Stem("promenadplats"), "promenadplat" );
	deepEqual( Stem("promenadplatsen"), "promenadplats" );
	deepEqual( Stem("promenera"), "promener" );
	deepEqual( Stem("promenerade"), "promener" );
	deepEqual( Stem("promenerande"), "promener" );
	deepEqual( Stem("promenerar"), "promener" );
	deepEqual( Stem("promenerat"), "promener" );
	deepEqual( Stem("prompt"), "prompt" );
	deepEqual( Stem("proportion"), "proportion" );
	deepEqual( Stem("proportionnees"), "proportionne" );
	deepEqual( Stem("propos"), "propo" );
	deepEqual( Stem("proppade"), "propp" );
	deepEqual( Stem("proppar"), "propp" );
	deepEqual( Stem("prosaiska"), "prosaisk" );
	deepEqual( Stem("prosan"), "prosan" );
	deepEqual( Stem("prosans"), "prosan" );
	deepEqual( Stem("prosceniet"), "prosceniet" );
	deepEqual( Stem("prost"), "prost" );
	deepEqual( Stem("prosten"), "prost" );
	deepEqual( Stem("prostens"), "prost" );
	deepEqual( Stem("prostfars"), "prostfar" );
	deepEqual( Stem("prostgården"), "prostgård" );
	deepEqual( Stem("prosthus"), "prosthus" );
	deepEqual( Stem("prostinna"), "prostin" );
	deepEqual( Stem("prostinnan"), "prostinnan" );
	deepEqual( Stem("prostitutionen"), "prostitution" );
	deepEqual( Stem("prosttiteln"), "prosttiteln" );
	deepEqual( Stem("protestanter"), "protestant" );
	deepEqual( Stem("protestera"), "protester" );
	deepEqual( Stem("protesterade"), "protester" );
	deepEqual( Stem("prov"), "prov" );
	deepEqual( Stem("provade"), "prov" );
	deepEqual( Stem("provet"), "provet" );
	deepEqual( Stem("provinser"), "provins" );
	deepEqual( Stem("provisorn"), "provisorn" );
	deepEqual( Stem("provkandidat"), "provkandid" );
	deepEqual( Stem("prudentliga"), "prudent" );
	deepEqual( Stem("prunkade"), "prunk" );
	deepEqual( Stem("prunkande"), "prunk" );
	deepEqual( Stem("prunkar"), "prunk" );
	deepEqual( Stem("prunkat"), "prunk" );
	deepEqual( Stem("prut"), "prut" );
	deepEqual( Stem("pruta"), "prut" );
	deepEqual( Stem("prutade"), "prut" );
	deepEqual( Stem("prutar"), "prut" );
	deepEqual( Stem("prvda"), "prvda" );
	deepEqual( Stem("pryda"), "pryd" );
	deepEqual( Stem("prydas"), "pryd" );
	deepEqual( Stem("prydd"), "prydd" );
	deepEqual( Stem("prydde"), "prydd" );
	deepEqual( Stem("pryddes"), "prydd" );
	deepEqual( Stem("pryder"), "pryd" );
	deepEqual( Stem("prydlig"), "pryd" );
	deepEqual( Stem("prydliga"), "pryd" );
	deepEqual( Stem("prydligaste"), "pryd" );
	deepEqual( Stem("prydlighet"), "pryd" );
	deepEqual( Stem("prydligt"), "pryd" );
	deepEqual( Stem("prydnad"), "prydn" );
	deepEqual( Stem("prydnader"), "prydnad" );
	deepEqual( Stem("prydt"), "prydt" );
	deepEqual( Stem("prygel"), "prygel" );
	deepEqual( Stem("pryrdlig"), "pryrd" );
	deepEqual( Stem("prytt"), "prytt" );
	deepEqual( Stem("prägel"), "prägel" );
	deepEqual( Stem("prägeln"), "prägeln" );
	deepEqual( Stem("präglat"), "prägl" );
	deepEqual( Stem("präk"), "präk" );
	deepEqual( Stem("präktig"), "präkt" );
	deepEqual( Stem("präktiga"), "präkt" );
	deepEqual( Stem("präktigare"), "präkt" );
	deepEqual( Stem("präktigaste"), "präkt" );
	deepEqual( Stem("präktigt"), "präkt" );
	deepEqual( Stem("pränt"), "pränt" );
	deepEqual( Stem("präntad"), "pränt" );
	deepEqual( Stem("präntat"), "pränt" );
	deepEqual( Stem("präst"), "präst" );
	deepEqual( Stem("prästdottern"), "prästdot" );
	deepEqual( Stem("prästen"), "präst" );
	deepEqual( Stem("prästens"), "präst" );
	deepEqual( Stem("präster"), "präst" );
	deepEqual( Stem("prästerlig"), "präster" );
	deepEqual( Stem("prästerligt"), "präster" );
	deepEqual( Stem("prästernas"), "präst" );
	deepEqual( Stem("prästexamen"), "prästexam" );
	deepEqual( Stem("prästgatan"), "prästgatan" );
	deepEqual( Stem("prästgård"), "prästgård" );
	deepEqual( Stem("prästgårdar"), "prästgård" );
	deepEqual( Stem("prästgården"), "prästgård" );
	deepEqual( Stem("prästgårdens"), "prästgård" );
	deepEqual( Stem("prästgårdsbyggnaden"), "prästgårdsbyggnad" );
	deepEqual( Stem("prästgårdsbyggningarna"), "prästgårdsbyggning" );
	deepEqual( Stem("prästgårdsgrinden"), "prästgårdsgrind" );
	deepEqual( Stem("prästhustru"), "prästhustru" );
	deepEqual( Stem("prästkragar"), "prästkrag" );
	deepEqual( Stem("prästkragen"), "prästkrag" );
	deepEqual( Stem("prästkragens"), "prästkrag" );
	deepEqual( Stem("prästman"), "prästman" );
	deepEqual( Stem("prästs"), "präst" );
	deepEqual( Stem("prästvigd"), "prästv" );
	deepEqual( Stem("prål"), "prål" );
	deepEqual( Stem("prålade"), "prål" );
	deepEqual( Stem("prålande"), "prål" );
	deepEqual( Stem("prålar"), "prål" );
	deepEqual( Stem("pråligt"), "prål" );
	deepEqual( Stem("prången"), "prång" );
	deepEqual( Stem("pröfning"), "pröfning" );
	deepEqual( Stem("pröfningen"), "pröfning" );
	deepEqual( Stem("pröfningsskola"), "pröfningsskol" );
	deepEqual( Stem("pröfva"), "pröfv" );
	deepEqual( Stem("pröfvade"), "pröfv" );
	deepEqual( Stem("pröfvades"), "pröfv" );
	deepEqual( Stem("pröfvat"), "pröfv" );
	deepEqual( Stem("pröva"), "pröv" );
	deepEqual( Stem("prövade"), "pröv" );
	deepEqual( Stem("prövande"), "pröv" );
	deepEqual( Stem("prövar"), "pröv" );
	deepEqual( Stem("prövat"), "pröv" );
	deepEqual( Stem("prövning"), "prövning" );
	deepEqual( Stem("prövotid"), "prövotid" );
	deepEqual( Stem("psalm"), "psalm" );
	deepEqual( Stem("psalmbok"), "psalmbok" );
	deepEqual( Stem("psalmen"), "psalm" );
	deepEqual( Stem("psalmer"), "psalm" );
	deepEqual( Stem("psalmeu"), "psalmeu" );
	deepEqual( Stem("psalmsångerskan"), "psalmsångerskan" );
	deepEqual( Stem("psalmtoner"), "psalmton" );
	deepEqual( Stem("psalmvers"), "psalmver" );
	deepEqual( Stem("psalmverser"), "psalmvers" );
	deepEqual( Stem("pseudovetenskaplig"), "pseudovetenskap" );
	deepEqual( Stem("psssa"), "psssa" );
	deepEqual( Stem("psykiatrici"), "psykiatrici" );
	deepEqual( Stem("psykiatrien"), "psykiatri" );
	deepEqual( Stem("psykiska"), "psykisk" );
	deepEqual( Stem("psykofjanter"), "psykofjant" );
	deepEqual( Stem("ptockade"), "ptock" );
	deepEqual( Stem("pu"), "pu" );
	deepEqual( Stem("publik"), "publik" );
	deepEqual( Stem("publika"), "publik" );
	deepEqual( Stem("publiken"), "publik" );
	deepEqual( Stem("publius"), "publius" );
	deepEqual( Stem("puckelrygg"), "puckelrygg" );
	deepEqual( Stem("puckelryggig"), "puckelrygg" );
	deepEqual( Stem("puckelryggige"), "puckelrygg" );
	deepEqual( Stem("puckelryggsleende"), "puckelryggsleend" );
	deepEqual( Stem("puddingen"), "pudding" );
	deepEqual( Stem("pudel"), "pudel" );
	deepEqual( Stem("pudeln"), "pudeln" );
	deepEqual( Stem("puder"), "pud" );
	deepEqual( Stem("pudra"), "pudr" );
	deepEqual( Stem("pudrade"), "pudr" );
	deepEqual( Stem("pudrat"), "pudr" );
	deepEqual( Stem("pudret"), "pudret" );
	deepEqual( Stem("puff"), "puff" );
	deepEqual( Stem("pulcher"), "pulch" );
	deepEqual( Stem("pulla"), "pull" );
	deepEqual( Stem("pullan"), "pullan" );
	deepEqual( Stem("pullor"), "pull" );
	deepEqual( Stem("pulpet"), "pulpet" );
	deepEqual( Stem("pulpeten"), "pulpet" );
	deepEqual( Stem("pulpetlocket"), "pulpetlocket" );
	deepEqual( Stem("pulpetrader"), "pulpetrad" );
	deepEqual( Stem("pulsar"), "puls" );
	deepEqual( Stem("pulsen"), "puls" );
	deepEqual( Stem("pulserade"), "pulser" );
	deepEqual( Stem("pulsslagen"), "pulsslag" );
	deepEqual( Stem("pulvrisera"), "pulvriser" );
	deepEqual( Stem("pund"), "pund" );
	deepEqual( Stem("pung"), "pung" );
	deepEqual( Stem("punkt"), "punk" );
	deepEqual( Stem("punkten"), "punk" );
	deepEqual( Stem("punkter"), "punk" );
	deepEqual( Stem("punkterna"), "punk" );
	deepEqual( Stem("punktlig"), "punkt" );
	deepEqual( Stem("punktlighet"), "punkt" );
	deepEqual( Stem("punktligt"), "punkt" );
	deepEqual( Stem("punsch"), "punsch" );
	deepEqual( Stem("punschbrickor"), "punschbrick" );
	deepEqual( Stem("punschbuteljer"), "punschbutelj" );
	deepEqual( Stem("punschen"), "punsch" );
	deepEqual( Stem("punschglas"), "punschgl" );
	deepEqual( Stem("punschglaset"), "punschglaset" );
	deepEqual( Stem("punschhalvan"), "punschhalvan" );
	deepEqual( Stem("punschorgierna"), "punschorgi" );
	deepEqual( Stem("pupillerna"), "pupill" );
	deepEqual( Stem("pur"), "pur" );
	deepEqual( Stem("pura"), "pur" );
	deepEqual( Stem("purprade"), "purpr" );
	deepEqual( Stem("purpur"), "purpur" );
	deepEqual( Stem("purpuraltan"), "purpuraltan" );
	deepEqual( Stem("purpurflammor"), "purpurflamm" );
	deepEqual( Stem("purpurklädning"), "purpurklädning" );
	deepEqual( Stem("purpurmörka"), "purpurmörk" );
	deepEqual( Stem("purpurröd"), "purpurröd" );
	deepEqual( Stem("purpurröda"), "purpurröd" );
	deepEqual( Stem("pussigt"), "puss" );
	deepEqual( Stem("pust"), "pust" );
	deepEqual( Stem("pustade"), "pust" );
	deepEqual( Stem("pustande"), "pust" );
	deepEqual( Stem("pustar"), "pust" );
	deepEqual( Stem("pusten"), "pust" );
	deepEqual( Stem("put"), "put" );
	deepEqual( Stem("putar"), "put" );
	deepEqual( Stem("puts"), "put" );
	deepEqual( Stem("putsa"), "puts" );
	deepEqual( Stem("putsade"), "puts" );
	deepEqual( Stem("putsat"), "puts" );
	deepEqual( Stem("puttrade"), "puttr" );
	deepEqual( Stem("puzzelarbete"), "puzzelarbet" );
	deepEqual( Stem("puzzlet"), "puzzlet" );
	deepEqual( Stem("puzzlets"), "puzzlet" );
	deepEqual( Stem("pvhlcn"), "pvhlcn" );
	deepEqual( Stem("pyjamas"), "pyjam" );
	deepEqual( Stem("pyngden"), "pyng" );
	deepEqual( Stem("pyre"), "pyr" );
	deepEqual( Stem("pys"), "pys" );
	deepEqual( Stem("pyssla"), "pyssl" );
	deepEqual( Stem("pysslade"), "pyssl" );
	deepEqual( Stem("pyttsan"), "pyttsan" );
	deepEqual( Stem("päls"), "päl" );
	deepEqual( Stem("pälsarna"), "päls" );
	deepEqual( Stem("pälsbrämad"), "pälsbräm" );
	deepEqual( Stem("pälsbrämade"), "pälsbräm" );
	deepEqual( Stem("pälsen"), "päls" );
	deepEqual( Stem("pälsens"), "päls" );
	deepEqual( Stem("pälsfoder"), "pälsfod" );
	deepEqual( Stem("pälskappa"), "pälskapp" );
	deepEqual( Stem("pälskrage"), "pälskrag" );
	deepEqual( Stem("pälsverk"), "pälsverk" );
	deepEqual( Stem("pälsverkens"), "pälsverk" );
	deepEqual( Stem("pälsverket"), "pälsverket" );
	deepEqual( Stem("pärl"), "pärl" );
	deepEqual( Stem("pärlan"), "pärlan" );
	deepEqual( Stem("pärlande"), "pärl" );
	deepEqual( Stem("pärlbandet"), "pärlb" );
	deepEqual( Stem("pärlemo"), "pärlemo" );
	deepEqual( Stem("pärlemor"), "pärlem" );
	deepEqual( Stem("pärlemosmycken"), "pärlemosmyck" );
	deepEqual( Stem("pärlfärgade"), "pärlfärg" );
	deepEqual( Stem("pärlnät"), "pärlnät" );
	deepEqual( Stem("pärlor"), "pärl" );
	deepEqual( Stem("pärlorna"), "pärl" );
	deepEqual( Stem("pärlskum"), "pärlskum" );
	deepEqual( Stem("pärlstickning"), "pärlstickning" );
	deepEqual( Stem("pärmar"), "pärm" );
	deepEqual( Stem("päronet"), "päronet" );
	deepEqual( Stem("päronträd"), "päronträd" );
	deepEqual( Stem("på"), "på" );
	deepEqual( Stem("påa"), "påa" );
	deepEqual( Stem("påbjudit"), "påbjudit" );
	deepEqual( Stem("påbrås"), "påbrås" );
	deepEqual( Stem("påbygd"), "påbyg" );
	deepEqual( Stem("påbygda"), "påbyg" );
	deepEqual( Stem("påbyggnad"), "påbyggn" );
	deepEqual( Stem("påbyggnaden"), "påbyggnad" );
	deepEqual( Stem("påbördade"), "påbörd" );
	deepEqual( Stem("påbörjade"), "påbörj" );
	deepEqual( Stem("pådragna"), "pådragn" );
	deepEqual( Stem("pådrifva"), "pådrifv" );
	deepEqual( Stem("påfallande"), "påfall" );
	deepEqual( Stem("påfann"), "påfan" );
	deepEqual( Stem("påflugenhet"), "påflugen" );
	deepEqual( Stem("påfluget"), "påfluget" );
	deepEqual( Stem("påfogels"), "påfogel" );
	deepEqual( Stem("påfordras"), "påfordr" );
	deepEqual( Stem("påfund"), "påfund" );
	deepEqual( Stem("påfågelsfjäder"), "påfågelsfjäd" );
	deepEqual( Stem("påhitt"), "påhit" );
	deepEqual( Stem("påhittat"), "påhit" );
	deepEqual( Stem("påhälsa"), "påhäls" );
	deepEqual( Stem("påhänget"), "påhänget" );
	deepEqual( Stem("påkommande"), "påkomm" );
	deepEqual( Stem("påkommen"), "påkomm" );
	deepEqual( Stem("påkommet"), "påkommet" );
	deepEqual( Stem("påkostande"), "påkost" );
	deepEqual( Stem("påkörare"), "påkör" );
	deepEqual( Stem("pålagor"), "pålag" );
	deepEqual( Stem("påle"), "pål" );
	deepEqual( Stem("pålen"), "pål" );
	deepEqual( Stem("pålitliga"), "pålit" );
	deepEqual( Stem("pålitlighet"), "pålit" );
	deepEqual( Stem("påmind"), "påmind" );
	deepEqual( Stem("påminde"), "påmind" );
	deepEqual( Stem("påminn"), "påmin" );
	deepEqual( Stem("påminna"), "påmin" );
	deepEqual( Stem("påminnande"), "påmin" );
	deepEqual( Stem("påminnas"), "påmin" );
	deepEqual( Stem("påminnelse"), "påminn" );
	deepEqual( Stem("påminner"), "påmin" );
	deepEqual( Stem("påmint"), "påmint" );
	deepEqual( Stem("pånytt"), "pånyt" );
	deepEqual( Stem("pånyttfödd"), "pånyttföd" );
	deepEqual( Stem("påpasslig"), "påpass" );
	deepEqual( Stem("påpeka"), "påpek" );
	deepEqual( Stem("påpekar"), "påpek" );
	deepEqual( Stem("påpekat"), "påpek" );
	deepEqual( Stem("påräknade"), "påräkn" );
	deepEqual( Stem("påräknat"), "påräkn" );
	deepEqual( Stem("påsatt"), "påsat" );
	deepEqual( Stem("påsatte"), "påsat" );
	deepEqual( Stem("påse"), "pås" );
	deepEqual( Stem("påseende"), "påseend" );
	deepEqual( Stem("påsen"), "pås" );
	deepEqual( Stem("påsens"), "pås" );
	deepEqual( Stem("påskina"), "påskin" );
	deepEqual( Stem("påskyndade"), "påskynd" );
	deepEqual( Stem("påskyndat"), "påskynd" );
	deepEqual( Stem("påskägg"), "påskägg" );
	deepEqual( Stem("påstod"), "påstod" );
	deepEqual( Stem("påstode"), "påstod" );
	deepEqual( Stem("påstods"), "påstod" );
	deepEqual( Stem("påstå"), "påstå" );
	deepEqual( Stem("påstående"), "påståend" );
	deepEqual( Stem("påståendet"), "påståendet" );
	deepEqual( Stem("påstår"), "påstår" );
	deepEqual( Stem("påstås"), "påstås" );
	deepEqual( Stem("påsätta"), "påsät" );
	deepEqual( Stem("påtaga"), "påtag" );
	deepEqual( Stem("påtagen"), "påtag" );
	deepEqual( Stem("påtagit"), "påtagit" );
	deepEqual( Stem("påtaglig"), "påtag" );
	deepEqual( Stem("påtagligare"), "påtag" );
	deepEqual( Stem("påtagligen"), "påtag" );
	deepEqual( Stem("påtagligt"), "påtag" );
	deepEqual( Stem("påtruga"), "påtrug" );
	deepEqual( Stem("påtryckning"), "påtryckning" );
	deepEqual( Stem("påträdde"), "påträd" );
	deepEqual( Stem("påträffas"), "påträff" );
	deepEqual( Stem("påträffat"), "påträff" );
	deepEqual( Stem("påtänkt"), "påtänk" );
	deepEqual( Stem("påvar"), "påv" );
	deepEqual( Stem("påverka"), "påverk" );
	deepEqual( Stem("påverkad"), "påverk" );
	deepEqual( Stem("påverkan"), "påverkan" );
	deepEqual( Stem("pöbeln"), "pöbeln" );
	deepEqual( Stem("pöbelvanan"), "pöbelvanan" );
	deepEqual( Stem("pölar"), "pöl" );
	deepEqual( Stem("pöser"), "pös" );
	deepEqual( Stem("pöste"), "pöst" );
	deepEqual( Stem("qu"), "qu" );
	deepEqual( Stem("qualis"), "qualis" );
	deepEqual( Stem("que"), "que" );
	deepEqual( Stem("quelqu"), "quelqu" );
	deepEqual( Stem("qui"), "qui" );
	deepEqual( Stem("quo"), "quo" );
	deepEqual( Stem("qvad"), "qvad" );
	deepEqual( Stem("qvaf"), "qvaf" );
	deepEqual( Stem("qval"), "qval" );
	deepEqual( Stem("qvald"), "qvald" );
	deepEqual( Stem("qvalda"), "qvald" );
	deepEqual( Stem("qvalen"), "qval" );
	deepEqual( Stem("qvalmig"), "qvalm" );
	deepEqual( Stem("qvar"), "qvar" );
	deepEqual( Stem("qvarblef"), "qvarblef" );
	deepEqual( Stem("qvarblifva"), "qvarblifv" );
	deepEqual( Stem("qvardröja"), "qvardröj" );
	deepEqual( Stem("qvarglömt"), "qvarglömt" );
	deepEqual( Stem("qvarhålla"), "qvarhåll" );
	deepEqual( Stem("qvarlemnat"), "qvarlemn" );
	deepEqual( Stem("qvarstanna"), "qvarstan" );
	deepEqual( Stem("qvarstannade"), "qvarstan" );
	deepEqual( Stem("qvarstod"), "qvarstod" );
	deepEqual( Stem("qvarstodo"), "qvarstodo" );
	deepEqual( Stem("qvart"), "qvart" );
	deepEqual( Stem("qvinfolk"), "qvinfolk" );
	deepEqual( Stem("qvinna"), "qvinn" );
	deepEqual( Stem("qvinnan"), "qvinnan" );
	deepEqual( Stem("qvinnans"), "qvinnan" );
	deepEqual( Stem("qvinnas"), "qvinn" );
	deepEqual( Stem("qvinnfolk"), "qvinnfolk" );
	deepEqual( Stem("qvinnor"), "qvinn" );
	deepEqual( Stem("qvinnorna"), "qvinn" );
	deepEqual( Stem("qvist"), "qvist" );
	deepEqual( Stem("qvitt"), "qvitt" );
	deepEqual( Stem("qväfd"), "qväfd" );
	deepEqual( Stem("qväfda"), "qväfd" );
	deepEqual( Stem("qväfde"), "qväfd" );
	deepEqual( Stem("qväfdt"), "qväfd" );
	deepEqual( Stem("qväfva"), "qväfv" );
	deepEqual( Stem("qväljande"), "qvälj" );
	deepEqual( Stem("qväll"), "qväll" );
	deepEqual( Stem("qvällen"), "qväll" );
	deepEqual( Stem("qvällsbrasan"), "qvällsbrasan" );
	deepEqual( Stem("qvällsvarden"), "qvällsvard" );
	deepEqual( Stem("qväsa"), "qväs" );
	deepEqual( Stem("qväser"), "qväs" );
	deepEqual( Stem("qväses"), "qväs" );
	deepEqual( Stem("r"), "r" );
	deepEqual( Stem("ra"), "ra" );
	deepEqual( Stem("rabatt"), "rabat" );
	deepEqual( Stem("rabatten"), "rabat" );
	deepEqual( Stem("rabatter"), "rabat" );
	deepEqual( Stem("rabatterna"), "rabat" );
	deepEqual( Stem("rackare"), "rack" );
	deepEqual( Stem("rackartyg"), "rackartyg" );
	deepEqual( Stem("racke"), "rack" );
	deepEqual( Stem("rackte"), "rack" );
	deepEqual( Stem("rad"), "rad" );
	deepEqual( Stem("rada"), "rad" );
	deepEqual( Stem("radband"), "radband" );
	deepEqual( Stem("rade"), "rad" );
	deepEqual( Stem("raden"), "rad" );
	deepEqual( Stem("radens"), "rad" );
	deepEqual( Stem("rader"), "rad" );
	deepEqual( Stem("raderna"), "rad" );
	deepEqual( Stem("radikalt"), "radikalt" );
	deepEqual( Stem("radman"), "radman" );
	deepEqual( Stem("radnde"), "radnd" );
	deepEqual( Stem("rafael"), "rafael" );
	deepEqual( Stem("rafaels"), "rafael" );
	deepEqual( Stem("raffinemang"), "raffinemang" );
	deepEqual( Stem("raffinerat"), "raffiner" );
	deepEqual( Stem("rafsade"), "rafs" );
	deepEqual( Stem("ragla"), "ragl" );
	deepEqual( Stem("raglade"), "ragl" );
	deepEqual( Stem("rak"), "rak" );
	deepEqual( Stem("raka"), "rak" );
	deepEqual( Stem("rakade"), "rak" );
	deepEqual( Stem("rakare"), "rak" );
	deepEqual( Stem("rakaste"), "rak" );
	deepEqual( Stem("raket"), "raket" );
	deepEqual( Stem("raketer"), "raket" );
	deepEqual( Stem("raklång"), "raklång" );
	deepEqual( Stem("rakna"), "rakn" );
	deepEqual( Stem("rakningen"), "rakning" );
	deepEqual( Stem("rakt"), "rakt" );
	deepEqual( Stem("ral"), "ral" );
	deepEqual( Stem("ralade"), "ral" );
	deepEqual( Stem("ram"), "ram" );
	deepEqual( Stem("rama"), "ram" );
	deepEqual( Stem("ramandet"), "ram" );
	deepEqual( Stem("ramar"), "ram" );
	deepEqual( Stem("ramen"), "ram" );
	deepEqual( Stem("ramför"), "ramför" );
	deepEqual( Stem("ramlade"), "raml" );
	deepEqual( Stem("ramlar"), "raml" );
	deepEqual( Stem("rammet"), "rammet" );
	deepEqual( Stem("ramna"), "ramn" );
	deepEqual( Stem("ramper"), "ramp" );
	deepEqual( Stem("ramsa"), "rams" );
	deepEqual( Stem("ramshult"), "ramshult" );
	deepEqual( Stem("ramundsson"), "ramundsson" );
	deepEqual( Stem("ramåt"), "ramåt" );
	deepEqual( Stem("ran"), "ran" );
	deepEqual( Stem("rand"), "rand" );
	deepEqual( Stem("rande"), "rand" );
	deepEqual( Stem("randen"), "rand" );
	deepEqual( Stem("randig"), "rand" );
	deepEqual( Stem("randiga"), "rand" );
	deepEqual( Stem("rang"), "rang" );
	deepEqual( Stem("rangera"), "ranger" );
	deepEqual( Stem("rangerad"), "ranger" );
	deepEqual( Stem("rangklass"), "rangklass" );
	deepEqual( Stem("ranglig"), "rang" );
	deepEqual( Stem("rangliga"), "rang" );
	deepEqual( Stem("rangordning"), "rangordning" );
	deepEqual( Stem("rank"), "rank" );
	deepEqual( Stem("rankan"), "rankan" );
	deepEqual( Stem("rann"), "rann" );
	deepEqual( Stem("ransakat"), "ransak" );
	deepEqual( Stem("ransakning"), "ransakning" );
	deepEqual( Stem("ranta"), "rant" );
	deepEqual( Stem("rapitlet"), "rapitlet" );
	deepEqual( Stem("rapp"), "rapp" );
	deepEqual( Stem("rappat"), "rapp" );
	deepEqual( Stem("rappen"), "rapp" );
	deepEqual( Stem("rappet"), "rappet" );
	deepEqual( Stem("raquin"), "raquin" );
	deepEqual( Stem("rar"), "rar" );
	deepEqual( Stem("rara"), "rar" );
	deepEqual( Stem("rare"), "rar" );
	deepEqual( Stem("rarna"), "rarn" );
	deepEqual( Stem("rart"), "rart" );
	deepEqual( Stem("ras"), "ras" );
	deepEqual( Stem("rasa"), "ras" );
	deepEqual( Stem("rasade"), "ras" );
	deepEqual( Stem("rasande"), "ras" );
	deepEqual( Stem("rasansikte"), "rasansik" );
	deepEqual( Stem("rasat"), "ras" );
	deepEqual( Stem("rasen"), "ras" );
	deepEqual( Stem("rasens"), "ras" );
	deepEqual( Stem("raseri"), "raseri" );
	deepEqual( Stem("rask"), "rask" );
	deepEqual( Stem("raska"), "rask" );
	deepEqual( Stem("raskare"), "rask" );
	deepEqual( Stem("raskaste"), "rask" );
	deepEqual( Stem("raske"), "rask" );
	deepEqual( Stem("raskhet"), "rask" );
	deepEqual( Stem("raskolnikov"), "raskolnikov" );
	deepEqual( Stem("raskt"), "rask" );
	deepEqual( Stem("rasmusson"), "rasmusson" );
	deepEqual( Stem("raspade"), "rasp" );
	deepEqual( Stem("raspandet"), "rasp" );
	deepEqual( Stem("rassla"), "rassl" );
	deepEqual( Stem("rasslade"), "rassl" );
	deepEqual( Stem("rasslande"), "rassl" );
	deepEqual( Stem("rast"), "rast" );
	deepEqual( Stem("rasta"), "rast" );
	deepEqual( Stem("rasterna"), "rast" );
	deepEqual( Stem("rastestund"), "rastestund" );
	deepEqual( Stem("rastlös"), "rastlös" );
	deepEqual( Stem("rastlösa"), "rastlös" );
	deepEqual( Stem("rat"), "rat" );
	deepEqual( Stem("ratat"), "rat" );
	deepEqual( Stem("raterna"), "rat" );
	deepEqual( Stem("ratt"), "ratt" );
	deepEqual( Stem("ratten"), "ratt" );
	deepEqual( Stem("razzia"), "razzi" );
	deepEqual( Stem("rcste"), "rcste" );
	deepEqual( Stem("rdr"), "rdr" );
	deepEqual( Stem("re"), "re" );
	deepEqual( Stem("reale"), "real" );
	deepEqual( Stem("recensera"), "recenser" );
	deepEqual( Stem("recenserade"), "recenser" );
	deepEqual( Stem("recept"), "recept" );
	deepEqual( Stem("receptet"), "receptet" );
	deepEqual( Stem("recke"), "reck" );
	deepEqual( Stem("reckes"), "reck" );
	deepEqual( Stem("red"), "red" );
	deepEqual( Stem("reda"), "red" );
	deepEqual( Stem("redan"), "redan" );
	deepEqual( Stem("redare"), "red" );
	deepEqual( Stem("redas"), "red" );
	deepEqual( Stem("redbarhet"), "redbar" );
	deepEqual( Stem("redbart"), "redbart" );
	deepEqual( Stem("redde"), "redd" );
	deepEqual( Stem("reddes"), "redd" );
	deepEqual( Stem("reden"), "red" );
	deepEqual( Stem("reder"), "red" );
	deepEqual( Stem("rederi"), "rederi" );
	deepEqual( Stem("redig"), "red" );
	deepEqual( Stem("rediga"), "red" );
	deepEqual( Stem("redigare"), "red" );
	deepEqual( Stem("redighet"), "red" );
	deepEqual( Stem("redigt"), "red" );
	deepEqual( Stem("redingotkostym"), "redingotkostym" );
	deepEqual( Stem("redlich"), "redlich" );
	deepEqual( Stem("redlichs"), "redlich" );
	deepEqual( Stem("redlig"), "red" );
	deepEqual( Stem("redliga"), "red" );
	deepEqual( Stem("redligaste"), "red" );
	deepEqual( Stem("redlige"), "red" );
	deepEqual( Stem("redlighet"), "red" );
	deepEqual( Stem("redligt"), "red" );
	deepEqual( Stem("redo"), "redo" );
	deepEqual( Stem("redobogen"), "redobog" );
	deepEqual( Stem("redogör"), "redogör" );
	deepEqual( Stem("redogöra"), "redogör" );
	deepEqual( Stem("redogörelse"), "redogör" );
	deepEqual( Stem("reds"), "red" );
	deepEqual( Stem("redskap"), "redskap" );
	deepEqual( Stem("redskapen"), "redskap" );
	deepEqual( Stem("reel"), "reel" );
	deepEqual( Stem("ref"), "ref" );
	deepEqual( Stem("refflade"), "reffl" );
	deepEqual( Stem("reflekterade"), "reflekter" );
	deepEqual( Stem("reflex"), "reflex" );
	deepEqual( Stem("reflexen"), "reflex" );
	deepEqual( Stem("reflexer"), "reflex" );
	deepEqual( Stem("reflexion"), "reflexion" );
	deepEqual( Stem("reflexionen"), "reflexion" );
	deepEqual( Stem("reflexioner"), "reflexion" );
	deepEqual( Stem("reflexionsspegel"), "reflexionsspegel" );
	deepEqual( Stem("reflexionsspegeln"), "reflexionsspegeln" );
	deepEqual( Stem("reflexrörelser"), "reflexrör" );
	deepEqual( Stem("reflexskenet"), "reflexskenet" );
	deepEqual( Stem("reflexverkan"), "reflexverkan" );
	deepEqual( Stem("refrängen"), "refräng" );
	deepEqual( Stem("refuge"), "refug" );
	deepEqual( Stem("refvat"), "refv" );
	deepEqual( Stem("regel"), "regel" );
	deepEqual( Stem("regelbundet"), "regelbundet" );
	deepEqual( Stem("regelbundna"), "regelbundn" );
	deepEqual( Stem("regelmessiga"), "regelmess" );
	deepEqual( Stem("regelmässigt"), "regelmäss" );
	deepEqual( Stem("regeln"), "regeln" );
	deepEqual( Stem("regementschef"), "regementschef" );
	deepEqual( Stem("regent"), "regent" );
	deepEqual( Stem("regentinna"), "regentin" );
	deepEqual( Stem("regera"), "reger" );
	deepEqual( Stem("regerad"), "reger" );
	deepEqual( Stem("regerade"), "reger" );
	deepEqual( Stem("regeringar"), "regering" );
	deepEqual( Stem("regeringsgatan"), "regeringsgatan" );
	deepEqual( Stem("regeringstömmarna"), "regeringstömm" );
	deepEqual( Stem("regissören"), "regissör" );
	deepEqual( Stem("registrator"), "registrat" );
	deepEqual( Stem("registratorn"), "registratorn" );
	deepEqual( Stem("registren"), "registr" );
	deepEqual( Stem("reglad"), "regl" );
	deepEqual( Stem("reglade"), "regl" );
	deepEqual( Stem("reglera"), "regler" );
	deepEqual( Stem("reglerade"), "regler" );
	deepEqual( Stem("reglerar"), "regler" );
	deepEqual( Stem("regn"), "regn" );
	deepEqual( Stem("regna"), "regn" );
	deepEqual( Stem("regnadc"), "regnadc" );
	deepEqual( Stem("regnade"), "regn" );
	deepEqual( Stem("regnar"), "regn" );
	deepEqual( Stem("regnat"), "regn" );
	deepEqual( Stem("regnbågsfärgad"), "regnbågsfärg" );
	deepEqual( Stem("regnbågsljus"), "regnbågsljus" );
	deepEqual( Stem("regnbågsskyn"), "regnbågsskyn" );
	deepEqual( Stem("regndag"), "regndag" );
	deepEqual( Stem("regndroppe"), "regndropp" );
	deepEqual( Stem("regnens"), "regn" );
	deepEqual( Stem("regnet"), "regnet" );
	deepEqual( Stem("regnig"), "regn" );
	deepEqual( Stem("regniga"), "regn" );
	deepEqual( Stem("regnkappa"), "regnkapp" );
	deepEqual( Stem("regnskur"), "regnskur" );
	deepEqual( Stem("regnväder"), "regnväd" );
	deepEqual( Stem("regnvädersdagar"), "regnvädersdag" );
	deepEqual( Stem("rehabiliterad"), "rehabiliter" );
	deepEqual( Stem("rehnska"), "rehnsk" );
	deepEqual( Stem("reklam"), "reklam" );
	deepEqual( Stem("reklamfönster"), "reklamfönst" );
	deepEqual( Stem("rekommendation"), "rekommendation" );
	deepEqual( Stem("rekommendera"), "rekommender" );
	deepEqual( Stem("rekommenderat"), "rekommender" );
	deepEqual( Stem("rekryter"), "rekryt" );
	deepEqual( Stem("rektor"), "rekt" );
	deepEqual( Stem("rektorn"), "rektorn" );
	deepEqual( Stem("rekvirerade"), "rekvirer" );
	deepEqual( Stem("rekvisitionen"), "rekvisition" );
	deepEqual( Stem("relationer"), "relation" );
	deepEqual( Stem("relian"), "relian" );
	deepEqual( Stem("religion"), "religion" );
	deepEqual( Stem("religionen"), "religion" );
	deepEqual( Stem("religionsgrubbel"), "religionsgrubbel" );
	deepEqual( Stem("religionsläraren"), "religionslär" );
	deepEqual( Stem("religiositet"), "religiositet" );
	deepEqual( Stem("religiös"), "religiös" );
	deepEqual( Stem("religiösa"), "religiös" );
	deepEqual( Stem("religiöst"), "religiöst" );
	deepEqual( Stem("reling"), "reling" );
	deepEqual( Stem("relingarna"), "reling" );
	deepEqual( Stem("relingarne"), "reling" );
	deepEqual( Stem("relingen"), "reling" );
	deepEqual( Stem("rell"), "rell" );
	deepEqual( Stem("rem"), "rem" );
	deepEqual( Stem("remmar"), "remm" );
	deepEqual( Stem("remna"), "remn" );
	deepEqual( Stem("remnar"), "remn" );
	deepEqual( Stem("remnorna"), "remn" );
	deepEqual( Stem("remsan"), "remsan" );
	deepEqual( Stem("ren"), "ren" );
	deepEqual( Stem("rena"), "ren" );
	deepEqual( Stem("renare"), "ren" );
	deepEqual( Stem("rendez"), "rendez" );
	deepEqual( Stem("renglänsande"), "rengläns" );
	deepEqual( Stem("rengöra"), "rengör" );
	deepEqual( Stem("rengöras"), "rengör" );
	deepEqual( Stem("renhet"), "ren" );
	deepEqual( Stem("renlighet"), "ren" );
	deepEqual( Stem("renons"), "renon" );
	deepEqual( Stem("rensa"), "rens" );
	deepEqual( Stem("rensade"), "rens" );
	deepEqual( Stem("renskrivning"), "renskrivning" );
	deepEqual( Stem("renskurad"), "renskur" );
	deepEqual( Stem("renskurade"), "renskur" );
	deepEqual( Stem("rent"), "rent" );
	deepEqual( Stem("rentav"), "rentav" );
	deepEqual( Stem("rentvättad"), "rentvät" );
	deepEqual( Stem("rentvättadt"), "rentvättad" );
	deepEqual( Stem("rep"), "rep" );
	deepEqual( Stem("reparation"), "reparation" );
	deepEqual( Stem("reparationen"), "reparation" );
	deepEqual( Stem("reparerade"), "reparer" );
	deepEqual( Stem("reparerat"), "reparer" );
	deepEqual( Stem("repen"), "rep" );
	deepEqual( Stem("repetitionen"), "repetition" );
	deepEqual( Stem("replikerade"), "repliker" );
	deepEqual( Stem("representant"), "representant" );
	deepEqual( Stem("representanterna"), "representant" );
	deepEqual( Stem("representation"), "representation" );
	deepEqual( Stem("representera"), "representer" );
	deepEqual( Stem("representerade"), "representer" );
	deepEqual( Stem("representerar"), "representer" );
	deepEqual( Stem("reputation"), "reputation" );
	deepEqual( Stem("rerna"), "rern" );
	deepEqual( Stem("res"), "res" );
	deepEqual( Stem("resa"), "res" );
	deepEqual( Stem("resan"), "resan" );
	deepEqual( Stem("resande"), "res" );
	deepEqual( Stem("resandes"), "res" );
	deepEqual( Stem("rese"), "res" );
	deepEqual( Stem("reseda"), "resed" );
	deepEqual( Stem("resemåltid"), "resemåltid" );
	deepEqual( Stem("resen"), "res" );
	deepEqual( Stem("resens"), "res" );
	deepEqual( Stem("resepredikant"), "resepredikant" );
	deepEqual( Stem("resepredikanten"), "resepredikant" );
	deepEqual( Stem("reser"), "res" );
	deepEqual( Stem("reses"), "res" );
	deepEqual( Stem("reseskildringar"), "reseskildring" );
	deepEqual( Stem("reshatt"), "reshat" );
	deepEqual( Stem("resignation"), "resignation" );
	deepEqual( Stem("resignerat"), "resigner" );
	deepEqual( Stem("reskassan"), "reskassan" );
	deepEqual( Stem("resklädd"), "reskläd" );
	deepEqual( Stem("resle"), "resl" );
	deepEqual( Stem("reslig"), "res" );
	deepEqual( Stem("resning"), "resning" );
	deepEqual( Stem("resolverar"), "resolver" );
	deepEqual( Stem("reson"), "reson" );
	deepEqual( Stem("resonemang"), "resonemang" );
	deepEqual( Stem("resonemanget"), "resonemanget" );
	deepEqual( Stem("resonera"), "resoner" );
	deepEqual( Stem("resonerar"), "resoner" );
	deepEqual( Stem("resor"), "res" );
	deepEqual( Stem("respass"), "respass" );
	deepEqual( Stem("respekt"), "respek" );
	deepEqual( Stem("respektabel"), "respektabel" );
	deepEqual( Stem("respektabelt"), "respektabelt" );
	deepEqual( Stem("respektabla"), "respektabl" );
	deepEqual( Stem("respekten"), "respek" );
	deepEqual( Stem("respekterar"), "respekter" );
	deepEqual( Stem("respekteras"), "respekter" );
	deepEqual( Stem("respektfull"), "respektfull" );
	deepEqual( Stem("respektlöst"), "respektlös" );
	deepEqual( Stem("respengarna"), "respeng" );
	deepEqual( Stem("respenningar"), "respenning" );
	deepEqual( Stem("respenningarna"), "respenning" );
	deepEqual( Stem("resschatull"), "resschatull" );
	deepEqual( Stem("rest"), "rest" );
	deepEqual( Stem("restaurang"), "restaurang" );
	deepEqual( Stem("restaurangbordet"), "restaurangbordet" );
	deepEqual( Stem("restaurangen"), "restaurang" );
	deepEqual( Stem("restaurangernas"), "restaurang" );
	deepEqual( Stem("restauranghörna"), "restauranghörn" );
	deepEqual( Stem("restc"), "restc" );
	deepEqual( Stem("reste"), "rest" );
	deepEqual( Stem("resten"), "rest" );
	deepEqual( Stem("rester"), "rest" );
	deepEqual( Stem("resulster"), "resulst" );
	deepEqual( Stem("resultat"), "result" );
	deepEqual( Stem("resultatet"), "resultatet" );
	deepEqual( Stem("resulterat"), "resulter" );
	deepEqual( Stem("resurs"), "resur" );
	deepEqual( Stem("resurser"), "resurs" );
	deepEqual( Stem("resårbottnar"), "resårbottn" );
	deepEqual( Stem("ret"), "ret" );
	deepEqual( Stem("reta"), "ret" );
	deepEqual( Stem("retad"), "ret" );
	deepEqual( Stem("retade"), "ret" );
	deepEqual( Stem("retades"), "ret" );
	deepEqual( Stem("retadt"), "retad" );
	deepEqual( Stem("retar"), "ret" );
	deepEqual( Stem("retas"), "ret" );
	deepEqual( Stem("retat"), "ret" );
	deepEqual( Stem("retelse"), "ret" );
	deepEqual( Stem("retelser"), "ret" );
	deepEqual( Stem("retliga"), "ret" );
	deepEqual( Stem("retlige"), "ret" );
	deepEqual( Stem("retligheten"), "ret" );
	deepEqual( Stem("retligt"), "ret" );
	deepEqual( Stem("retsam"), "retsam" );
	deepEqual( Stem("retsamhet"), "retsam" );
	deepEqual( Stem("retsamt"), "retsamt" );
	deepEqual( Stem("rett"), "rett" );
	deepEqual( Stem("retty"), "retty" );
	deepEqual( Stem("reumatism"), "reumatism" );
	deepEqual( Stem("rev"), "rev" );
	deepEqual( Stem("revers"), "rever" );
	deepEqual( Stem("reversen"), "revers" );
	deepEqual( Stem("reverser"), "revers" );
	deepEqual( Stem("revisor"), "revis" );
	deepEqual( Stem("revisorn"), "revisorn" );
	deepEqual( Stem("revolvern"), "revolv" );
	deepEqual( Stem("ri"), "ri" );
	deepEqual( Stem("richardt"), "richard" );
	deepEqual( Stem("ricinolja"), "ricinolj" );
	deepEqual( Stem("rickrickettirack"), "rickrickettirack" );
	deepEqual( Stem("rickrickettiratt"), "rickrickettirat" );
	deepEqual( Stem("rida"), "rid" );
	deepEqual( Stem("ridan"), "ridan" );
	deepEqual( Stem("ridande"), "rid" );
	deepEqual( Stem("riddare"), "ridd" );
	deepEqual( Stem("riddaren"), "ridd" );
	deepEqual( Stem("riddarhustorget"), "riddarhustorget" );
	deepEqual( Stem("ridderliga"), "ridder" );
	deepEqual( Stem("rider"), "rid" );
	deepEqual( Stem("ridit"), "ridit" );
	deepEqual( Stem("ridtur"), "ridtur" );
	deepEqual( Stem("ridå"), "ridå" );
	deepEqual( Stem("ridån"), "ridån" );
	deepEqual( Stem("rierna"), "riern" );
	deepEqual( Stem("rigeln"), "rigeln" );
	deepEqual( Stem("riggad"), "rigg" );
	deepEqual( Stem("rigla"), "rigl" );
	deepEqual( Stem("rigtad"), "rigt" );
	deepEqual( Stem("rigtig"), "rigt" );
	deepEqual( Stem("rigtiga"), "rigt" );
	deepEqual( Stem("rigtighet"), "rigt" );
	deepEqual( Stem("rigtigt"), "rigt" );
	deepEqual( Stem("rigtning"), "rigtning" );
	deepEqual( Stem("rigtningar"), "rigtning" );
	deepEqual( Stem("rijster"), "rijst" );
	deepEqual( Stem("rik"), "rik" );
	deepEqual( Stem("rika"), "rik" );
	deepEqual( Stem("rikare"), "rik" );
	deepEqual( Stem("rikaste"), "rik" );
	deepEqual( Stem("rikc"), "rikc" );
	deepEqual( Stem("rike"), "rik" );
	deepEqual( Stem("rikedom"), "rikedom" );
	deepEqual( Stem("rikedomar"), "rikedom" );
	deepEqual( Stem("rikedomen"), "rikedom" );
	deepEqual( Stem("rikeman"), "rikeman" );
	deepEqual( Stem("riken"), "rik" );
	deepEqual( Stem("rikens"), "rik" );
	deepEqual( Stem("rikes"), "rik" );
	deepEqual( Stem("rikhaltig"), "rikhalt" );
	deepEqual( Stem("rikligen"), "rik" );
	deepEqual( Stem("rikligt"), "rik" );
	deepEqual( Stem("riksdagen"), "riksdag" );
	deepEqual( Stem("riksdagshus"), "riksdagshus" );
	deepEqual( Stem("riksdaler"), "riksdal" );
	deepEqual( Stem("riksdalernas"), "riksdal" );
	deepEqual( Stem("riksdalers"), "riksdaler" );
	deepEqual( Stem("riksgälds"), "riksgäld" );
	deepEqual( Stem("rikt"), "rikt" );
	deepEqual( Stem("rikta"), "rikt" );
	deepEqual( Stem("riktad"), "rikt" );
	deepEqual( Stem("riktade"), "rikt" );
	deepEqual( Stem("riktades"), "rikt" );
	deepEqual( Stem("riktas"), "rikt" );
	deepEqual( Stem("riktat"), "rikt" );
	deepEqual( Stem("riktats"), "riktat" );
	deepEqual( Stem("riktig"), "rikt" );
	deepEqual( Stem("riktiga"), "rikt" );
	deepEqual( Stem("riktigare"), "rikt" );
	deepEqual( Stem("riktigt"), "rikt" );
	deepEqual( Stem("riktning"), "riktning" );
	deepEqual( Stem("riktningar"), "riktning" );
	deepEqual( Stem("riktningen"), "riktning" );
	deepEqual( Stem("rill"), "rill" );
	deepEqual( Stem("rimligtvis"), "rimligtvis" );
	deepEqual( Stem("rimma"), "rimm" );
	deepEqual( Stem("rimmer"), "rimm" );
	deepEqual( Stem("rimnande"), "rimn" );
	deepEqual( Stem("rimrika"), "rimrik" );
	deepEqual( Stem("ring"), "ring" );
	deepEqual( Stem("ringa"), "ring" );
	deepEqual( Stem("ringakta"), "ringak" );
	deepEqual( Stem("ringaktning"), "ringaktning" );
	deepEqual( Stem("ringande"), "ring" );
	deepEqual( Stem("ringar"), "ring" );
	deepEqual( Stem("ringare"), "ring" );
	deepEqual( Stem("ringarna"), "ring" );
	deepEqual( Stem("ringas"), "ring" );
	deepEqual( Stem("ringaste"), "ring" );
	deepEqual( Stem("ringde"), "ring" );
	deepEqual( Stem("ringen"), "ring" );
	deepEqual( Stem("ringer"), "ring" );
	deepEqual( Stem("ringfinger"), "ringfing" );
	deepEqual( Stem("ringhets"), "ringhet" );
	deepEqual( Stem("ringlade"), "ringl" );
	deepEqual( Stem("ringlarne"), "ringl" );
	deepEqual( Stem("ringlinjen"), "ringlinj" );
	deepEqual( Stem("ringning"), "ringning" );
	deepEqual( Stem("ringt"), "ring" );
	deepEqual( Stem("rinna"), "rinn" );
	deepEqual( Stem("rinnande"), "rinn" );
	deepEqual( Stem("ris"), "ris" );
	deepEqual( Stem("riset"), "riset" );
	deepEqual( Stem("risk"), "risk" );
	deepEqual( Stem("risken"), "risk" );
	deepEqual( Stem("risker"), "risk" );
	deepEqual( Stem("riskera"), "risker" );
	deepEqual( Stem("rispor"), "risp" );
	deepEqual( Stem("ristad"), "rist" );
	deepEqual( Stem("ristade"), "rist" );
	deepEqual( Stem("ristat"), "rist" );
	deepEqual( Stem("riste"), "rist" );
	deepEqual( Stem("rita"), "rit" );
	deepEqual( Stem("ritade"), "rit" );
	deepEqual( Stem("ritat"), "rit" );
	deepEqual( Stem("rium"), "rium" );
	deepEqual( Stem("riva"), "riv" );
	deepEqual( Stem("rival"), "rival" );
	deepEqual( Stem("rivande"), "riv" );
	deepEqual( Stem("river"), "riv" );
	deepEqual( Stem("rivilligt"), "rivil" );
	deepEqual( Stem("rivit"), "rivit" );
	deepEqual( Stem("rivits"), "rivit" );
	deepEqual( Stem("rivna"), "rivn" );
	deepEqual( Stem("rleltagande"), "rleltag" );
	deepEqual( Stem("rmed"), "rmed" );
	deepEqual( Stem("rmuff"), "rmuff" );
	deepEqual( Stem("rna"), "rna" );
	deepEqual( Stem("rnaren"), "rnar" );
	deepEqual( Stem("rnt"), "rnt" );
	deepEqual( Stem("rnu"), "rnu" );
	deepEqual( Stem("ro"), "ro" );
	deepEqual( Stem("roa"), "roa" );
	deepEqual( Stem("road"), "road" );
	deepEqual( Stem("roade"), "road" );
	deepEqual( Stem("roande"), "roand" );
	deepEqual( Stem("roar"), "roar" );
	deepEqual( Stem("roat"), "roat" );
	deepEqual( Stem("rochefoucauld"), "rochefoucauld" );
	deepEqual( Stem("rock"), "rock" );
	deepEqual( Stem("rockar"), "rock" );
	deepEqual( Stem("rocken"), "rock" );
	deepEqual( Stem("rockhandeln"), "rockhandeln" );
	deepEqual( Stem("rockor"), "rock" );
	deepEqual( Stem("rockskörten"), "rockskört" );
	deepEqual( Stem("rockskörtet"), "rockskörtet" );
	deepEqual( Stem("rockslaget"), "rockslaget" );
	deepEqual( Stem("rocksvarvare"), "rocksvarv" );
	deepEqual( Stem("rockärmarna"), "rockärm" );
	deepEqual( Stem("rockärmen"), "rockärm" );
	deepEqual( Stem("rod"), "rod" );
	deepEqual( Stem("rodd"), "rodd" );
	deepEqual( Stem("roddarbåtarna"), "roddarbåt" );
	deepEqual( Stem("roddarbåten"), "roddarbåt" );
	deepEqual( Stem("roddare"), "rodd" );
	deepEqual( Stem("roddarmadamens"), "roddarmadam" );
	deepEqual( Stem("roddarmadamer"), "roddarmadam" );
	deepEqual( Stem("roddbåt"), "roddbåt" );
	deepEqual( Stem("rodde"), "rodd" );
	deepEqual( Stem("rodden"), "rodd" );
	deepEqual( Stem("rodin"), "rodin" );
	deepEqual( Stem("rodna"), "rodn" );
	deepEqual( Stem("rodnad"), "rodn" );
	deepEqual( Stem("rodnade"), "rodn" );
	deepEqual( Stem("rodnaden"), "rodnad" );
	deepEqual( Stem("rodnande"), "rodn" );
	deepEqual( Stem("rodnar"), "rodn" );
	deepEqual( Stem("rodnat"), "rodn" );
	deepEqual( Stem("rodret"), "rodret" );
	deepEqual( Stem("rof"), "rof" );
	deepEqual( Stem("roffar"), "roff" );
	deepEqual( Stem("rofgirigheten"), "rofgir" );
	deepEqual( Stem("roflysten"), "roflyst" );
	deepEqual( Stem("roflystne"), "roflystn" );
	deepEqual( Stem("roknar"), "rokn" );
	deepEqual( Stem("rokoko"), "rokoko" );
	deepEqual( Stem("rokokodams"), "rokokodam" );
	deepEqual( Stem("rolf"), "rolf" );
	deepEqual( Stem("rolig"), "rol" );
	deepEqual( Stem("roliga"), "rol" );
	deepEqual( Stem("roligare"), "rol" );
	deepEqual( Stem("roligast"), "rol" );
	deepEqual( Stem("roligaste"), "rol" );
	deepEqual( Stem("rolighetsminister"), "rolighetsminist" );
	deepEqual( Stem("roligt"), "rol" );
	deepEqual( Stem("roll"), "roll" );
	deepEqual( Stem("rollen"), "roll" );
	deepEqual( Stem("roller"), "roll" );
	deepEqual( Stem("rollerna"), "roll" );
	deepEqual( Stem("rolösa"), "rolös" );
	deepEqual( Stem("rom"), "rom" );
	deepEqual( Stem("roman"), "roman" );
	deepEqual( Stem("romanaktiga"), "romanakt" );
	deepEqual( Stem("romanen"), "roman" );
	deepEqual( Stem("romaner"), "roman" );
	deepEqual( Stem("romanord"), "romanord" );
	deepEqual( Stem("romantik"), "romantik" );
	deepEqual( Stem("romantikens"), "romantik" );
	deepEqual( Stem("romantiska"), "romantisk" );
	deepEqual( Stem("romantiskt"), "romantisk" );
	deepEqual( Stem("romantisktkanske"), "romantisktkansk" );
	deepEqual( Stem("romanvärlden"), "romanvärld" );
	deepEqual( Stem("romersk"), "romersk" );
	deepEqual( Stem("ron"), "ron" );
	deepEqual( Stem("rond"), "rond" );
	deepEqual( Stem("ronden"), "rond" );
	deepEqual( Stem("ronneby"), "ronneby" );
	deepEqual( Stem("rop"), "rop" );
	deepEqual( Stem("ropa"), "rop" );
	deepEqual( Stem("ropadc"), "ropadc" );
	deepEqual( Stem("ropade"), "rop" );
	deepEqual( Stem("ropande"), "rop" );
	deepEqual( Stem("ropar"), "rop" );
	deepEqual( Stem("ropat"), "rop" );
	deepEqual( Stem("ropet"), "ropet" );
	deepEqual( Stem("rora"), "ror" );
	deepEqual( Stem("rord"), "rord" );
	deepEqual( Stem("rorde"), "rord" );
	deepEqual( Stem("rorta"), "rort" );
	deepEqual( Stem("rortaljan"), "rortaljan" );
	deepEqual( Stem("ros"), "ros" );
	deepEqual( Stem("rosa"), "ros" );
	deepEqual( Stem("rosafärgade"), "rosafärg" );
	deepEqual( Stem("rosas"), "ros" );
	deepEqual( Stem("roseil"), "roseil" );
	deepEqual( Stem("rosell"), "rosell" );
	deepEqual( Stem("rosells"), "rosell" );
	deepEqual( Stem("rosen"), "ros" );
	deepEqual( Stem("rosenbad"), "rosenb" );
	deepEqual( Stem("rosenberg"), "rosenberg" );
	deepEqual( Stem("rosenbergs"), "rosenberg" );
	deepEqual( Stem("rosenblad"), "rosenbl" );
	deepEqual( Stem("rosenbladen"), "rosenblad" );
	deepEqual( Stem("rosenbuske"), "rosenbusk" );
	deepEqual( Stem("rosendegång"), "rosendegång" );
	deepEqual( Stem("rosendimmor"), "rosendimm" );
	deepEqual( Stem("rosengnista"), "rosengnist" );
	deepEqual( Stem("rosenkindade"), "rosenkind" );
	deepEqual( Stem("rosenkransen"), "rosenkrans" );
	deepEqual( Stem("rosenrauch"), "rosenrauch" );
	deepEqual( Stem("rosenrauchs"), "rosenrauch" );
	deepEqual( Stem("rosenröda"), "rosenröd" );
	deepEqual( Stem("rosenskymningen"), "rosenskymning" );
	deepEqual( Stem("rosenstandens"), "rosenstand" );
	deepEqual( Stem("rosentempel"), "rosentempel" );
	deepEqual( Stem("rosiga"), "ros" );
	deepEqual( Stem("rosigt"), "ros" );
	deepEqual( Stem("rosor"), "ros" );
	deepEqual( Stem("rosorna"), "ros" );
	deepEqual( Stem("rosornas"), "ros" );
	deepEqual( Stem("rost"), "rost" );
	deepEqual( Stem("rosten"), "rost" );
	deepEqual( Stem("roster"), "rost" );
	deepEqual( Stem("rot"), "rot" );
	deepEqual( Stem("rotat"), "rot" );
	deepEqual( Stem("rotfästa"), "rotfäst" );
	deepEqual( Stem("rotsaker"), "rotsak" );
	deepEqual( Stem("rott"), "rott" );
	deepEqual( Stem("rotter"), "rott" );
	deepEqual( Stem("rotting"), "rotting" );
	deepEqual( Stem("rottingen"), "rotting" );
	deepEqual( Stem("rottingslag"), "rottingslag" );
	deepEqual( Stem("rotundan"), "rotundan" );
	deepEqual( Stem("rousseau"), "rousseau" );
	deepEqual( Stem("rov"), "rov" );
	deepEqual( Stem("rovdjurslikt"), "rovdjurslik" );
	deepEqual( Stem("rovdjurständer"), "rovdjurständ" );
	deepEqual( Stem("rovfågelsansikte"), "rovfågelsansik" );
	deepEqual( Stem("rovfågelsansiktet"), "rovfågelsansiktet" );
	deepEqual( Stem("rovtänder"), "rovtänd" );
	deepEqual( Stem("rqd"), "rqd" );
	deepEqual( Stem("rrohnarna"), "rrohn" );
	deepEqual( Stem("rrök"), "rrök" );
	deepEqual( Stem("rs"), "rs" );
	deepEqual( Stem("rtom"), "rtom" );
	deepEqual( Stem("rtsängarna"), "rtsäng" );
	deepEqual( Stem("rtt"), "rtt" );
	deepEqual( Stem("rubba"), "rubb" );
	deepEqual( Stem("rubbad"), "rubb" );
	deepEqual( Stem("rubbade"), "rubb" );
	deepEqual( Stem("rubbar"), "rubb" );
	deepEqual( Stem("rubbning"), "rubbning" );
	deepEqual( Stem("rubbningen"), "rubbning" );
	deepEqual( Stem("rubin"), "rubin" );
	deepEqual( Stem("rubiner"), "rubin" );
	deepEqual( Stem("rubins"), "rubin" );
	deepEqual( Stem("rubriken"), "rubrik" );
	deepEqual( Stem("rucklet"), "rucklet" );
	deepEqual( Stem("ruckliga"), "ruck" );
	deepEqual( Stem("rudekrona"), "rudekron" );
	deepEqual( Stem("rue"), "rue" );
	deepEqual( Stem("ruffen"), "ruff" );
	deepEqual( Stem("rufsig"), "rufs" );
	deepEqual( Stem("rufsiga"), "rufs" );
	deepEqual( Stem("rufsigt"), "rufs" );
	deepEqual( Stem("rufvade"), "rufv" );
	deepEqual( Stem("rugg"), "rugg" );
	deepEqual( Stem("ruggig"), "rugg" );
	deepEqual( Stem("ruinen"), "ruin" );
	deepEqual( Stem("ruiner"), "ruin" );
	deepEqual( Stem("ruinerad"), "ruiner" );
	deepEqual( Stem("ruinerar"), "ruiner" );
	deepEqual( Stem("rull"), "rull" );
	deepEqual( Stem("rulla"), "rull" );
	deepEqual( Stem("rullade"), "rull" );
	deepEqual( Stem("rullande"), "rull" );
	deepEqual( Stem("rullar"), "rull" );
	deepEqual( Stem("rulle"), "rull" );
	deepEqual( Stem("rullgardin"), "rullgardin" );
	deepEqual( Stem("rullgardinen"), "rullgardin" );
	deepEqual( Stem("rullgardiner"), "rullgardin" );
	deepEqual( Stem("rullgardinerna"), "rullgardin" );
	deepEqual( Stem("rullt"), "rullt" );
	deepEqual( Stem("rum"), "rum" );
	deepEqual( Stem("rummen"), "rumm" );
	deepEqual( Stem("rummens"), "rumm" );
	deepEqual( Stem("rummet"), "rummet" );
	deepEqual( Stem("rummets"), "rummet" );
	deepEqual( Stem("rumskamrater"), "rumskamrat" );
	deepEqual( Stem("rumsvåningen"), "rumsvåning" );
	deepEqual( Stem("rund"), "rund" );
	deepEqual( Stem("runda"), "rund" );
	deepEqual( Stem("rundade"), "rund" );
	deepEqual( Stem("rundning"), "rundning" );
	deepEqual( Stem("rundt"), "rund" );
	deepEqual( Stem("rundvälvd"), "rundvälvd" );
	deepEqual( Stem("runeberg"), "runeberg" );
	deepEqual( Stem("runeskrift"), "runeskrift" );
	deepEqual( Stem("rungande"), "rung" );
	deepEqual( Stem("runne"), "runn" );
	deepEqual( Stem("runnit"), "runnit" );
	deepEqual( Stem("runno"), "runno" );
	deepEqual( Stem("runstycke"), "runstyck" );
	deepEqual( Stem("runstycket"), "runstycket" );
	deepEqual( Stem("runt"), "runt" );
	deepEqual( Stem("runtom"), "runtom" );
	deepEqual( Stem("runtomkring"), "runtomkring" );
	deepEqual( Stem("rus"), "rus" );
	deepEqual( Stem("rusa"), "rus" );
	deepEqual( Stem("rusade"), "rus" );
	deepEqual( Stem("rusande"), "rus" );
	deepEqual( Stem("rusar"), "rus" );
	deepEqual( Stem("rusat"), "rus" );
	deepEqual( Stem("ruset"), "ruset" );
	deepEqual( Stem("rusets"), "ruset" );
	deepEqual( Stem("rusig"), "rus" );
	deepEqual( Stem("rusiga"), "rus" );
	deepEqual( Stem("ruskade"), "rusk" );
	deepEqual( Stem("ruskar"), "rusk" );
	deepEqual( Stem("ruskig"), "rusk" );
	deepEqual( Stem("ruskigt"), "rusk" );
	deepEqual( Stem("russeberget"), "russeberget" );
	deepEqual( Stem("russin"), "russin" );
	deepEqual( Stem("rusta"), "rust" );
	deepEqual( Stem("rustade"), "rust" );
	deepEqual( Stem("rustas"), "rust" );
	deepEqual( Stem("rustibus"), "rustibus" );
	deepEqual( Stem("rusticana"), "rustican" );
	deepEqual( Stem("rut"), "rut" );
	deepEqual( Stem("ruta"), "rut" );
	deepEqual( Stem("rutan"), "rutan" );
	deepEqual( Stem("ruter"), "rut" );
	deepEqual( Stem("rutig"), "rut" );
	deepEqual( Stem("rutor"), "rut" );
	deepEqual( Stem("rutorna"), "rut" );
	deepEqual( Stem("rutsch"), "rutsch" );
	deepEqual( Stem("rutten"), "rutt" );
	deepEqual( Stem("ruttenhet"), "rutten" );
	deepEqual( Stem("ruttet"), "ruttet" );
	deepEqual( Stem("ruttna"), "ruttn" );
	deepEqual( Stem("ruttnade"), "ruttn" );
	deepEqual( Stem("ruvade"), "ruv" );
	deepEqual( Stem("ruvande"), "ruv" );
	deepEqual( Stem("ruvat"), "ruv" );
	deepEqual( Stem("rv"), "rv" );
	deepEqual( Stem("rya"), "rya" );
	deepEqual( Stem("rybte"), "rybt" );
	deepEqual( Stem("ryck"), "ryck" );
	deepEqual( Stem("rycka"), "ryck" );
	deepEqual( Stem("ryckande"), "ryck" );
	deepEqual( Stem("rycker"), "ryck" );
	deepEqual( Stem("ryckig"), "ryck" );
	deepEqual( Stem("ryckning"), "ryckning" );
	deepEqual( Stem("ryckningar"), "ryckning" );
	deepEqual( Stem("ryckt"), "ryck" );
	deepEqual( Stem("rycktc"), "rycktc" );
	deepEqual( Stem("ryckte"), "ryck" );
	deepEqual( Stem("rycktes"), "ryck" );
	deepEqual( Stem("ryckts"), "ryck" );
	deepEqual( Stem("rydberg"), "rydberg" );
	deepEqual( Stem("rydbergs"), "rydberg" );
	deepEqual( Stem("rygg"), "rygg" );
	deepEqual( Stem("ryggade"), "rygg" );
	deepEqual( Stem("ryggar"), "rygg" );
	deepEqual( Stem("ryggarna"), "rygg" );
	deepEqual( Stem("ryggen"), "rygg" );
	deepEqual( Stem("ryggraden"), "ryggrad" );
	deepEqual( Stem("ryggstöd"), "ryggstöd" );
	deepEqual( Stem("ryggtavla"), "ryggtavl" );
	deepEqual( Stem("rykande"), "ryk" );
	deepEqual( Stem("ryktbar"), "ryktb" );
	deepEqual( Stem("ryktbara"), "ryktbar" );
	deepEqual( Stem("ryktbarhet"), "ryktbar" );
	deepEqual( Stem("ryktc"), "ryktc" );
	deepEqual( Stem("rykte"), "rykt" );
	deepEqual( Stem("rykten"), "rykt" );
	deepEqual( Stem("ryktes"), "rykt" );
	deepEqual( Stem("ryktet"), "ryktet" );
	deepEqual( Stem("rym"), "rym" );
	deepEqual( Stem("rymd"), "rymd" );
	deepEqual( Stem("rymde"), "rymd" );
	deepEqual( Stem("rymden"), "rymd" );
	deepEqual( Stem("rymdens"), "rymd" );
	deepEqual( Stem("rymder"), "rymd" );
	deepEqual( Stem("rymlig"), "rym" );
	deepEqual( Stem("rymliga"), "rym" );
	deepEqual( Stem("rymma"), "rymm" );
	deepEqual( Stem("rymmer"), "rymm" );
	deepEqual( Stem("rymplingen"), "rympling" );
	deepEqual( Stem("ryn"), "ryn" );
	deepEqual( Stem("rynkade"), "rynk" );
	deepEqual( Stem("rynkades"), "rynk" );
	deepEqual( Stem("rynkar"), "rynk" );
	deepEqual( Stem("rynkig"), "rynk" );
	deepEqual( Stem("rynkiga"), "rynk" );
	deepEqual( Stem("rynkigt"), "rynk" );
	deepEqual( Stem("rynkning"), "rynkning" );
	deepEqual( Stem("rynkor"), "rynk" );
	deepEqual( Stem("rynkorna"), "rynk" );
	deepEqual( Stem("rysa"), "rys" );
	deepEqual( Stem("rysande"), "rys" );
	deepEqual( Stem("ryser"), "rys" );
	deepEqual( Stem("ryslig"), "rys" );
	deepEqual( Stem("rysliga"), "rys" );
	deepEqual( Stem("rysligaste"), "rys" );
	deepEqual( Stem("ryslighet"), "rys" );
	deepEqual( Stem("rysligt"), "rys" );
	deepEqual( Stem("rysning"), "rysning" );
	deepEqual( Stem("ryssviks"), "ryssvik" );
	deepEqual( Stem("ryst"), "ryst" );
	deepEqual( Stem("ryste"), "ryst" );
	deepEqual( Stem("ryter"), "ryt" );
	deepEqual( Stem("rytmer"), "rytm" );
	deepEqual( Stem("ryttare"), "rytt" );
	deepEqual( Stem("ryttmästare"), "ryttmäst" );
	deepEqual( Stem("ryttmästaren"), "ryttmäst" );
	deepEqual( Stem("ryttmästarens"), "ryttmäst" );
	deepEqual( Stem("räck"), "räck" );
	deepEqual( Stem("räcka"), "räck" );
	deepEqual( Stem("räcke"), "räck" );
	deepEqual( Stem("räcken"), "räck" );
	deepEqual( Stem("räcker"), "räck" );
	deepEqual( Stem("räckes"), "räck" );
	deepEqual( Stem("räckhåll"), "räckhåll" );
	deepEqual( Stem("räckt"), "räck" );
	deepEqual( Stem("räckte"), "räck" );
	deepEqual( Stem("räcktes"), "räck" );
	deepEqual( Stem("räckts"), "räck" );
	deepEqual( Stem("räckvidden"), "räckvid" );
	deepEqual( Stem("rädcl"), "rädcl" );
	deepEqual( Stem("rädd"), "rädd" );
	deepEqual( Stem("rädda"), "rädd" );
	deepEqual( Stem("räddad"), "rädd" );
	deepEqual( Stem("räddade"), "rädd" );
	deepEqual( Stem("räddare"), "rädd" );
	deepEqual( Stem("räddat"), "rädd" );
	deepEqual( Stem("räddhågad"), "räddhåg" );
	deepEqual( Stem("räddning"), "räddning" );
	deepEqual( Stem("räddsla"), "räddsl" );
	deepEqual( Stem("rädens"), "räd" );
	deepEqual( Stem("rädisor"), "rädis" );
	deepEqual( Stem("rädisorna"), "rädis" );
	deepEqual( Stem("räds"), "räd" );
	deepEqual( Stem("rädsla"), "rädsl" );
	deepEqual( Stem("rädslan"), "rädslan" );
	deepEqual( Stem("räf"), "räf" );
	deepEqual( Stem("räfvens"), "räfv" );
	deepEqual( Stem("räkna"), "räkn" );
	deepEqual( Stem("räknade"), "räkn" );
	deepEqual( Stem("räknades"), "räkn" );
	deepEqual( Stem("räknar"), "räkn" );
	deepEqual( Stem("räknat"), "räkn" );
	deepEqual( Stem("räknetal"), "räknetal" );
	deepEqual( Stem("räkning"), "räkning" );
	deepEqual( Stem("räkningar"), "räkning" );
	deepEqual( Stem("räkningen"), "räkning" );
	deepEqual( Stem("rämnorna"), "rämn" );
	deepEqual( Stem("ränder"), "ränd" );
	deepEqual( Stem("ränderna"), "ränd" );
	deepEqual( Stem("rännan"), "rännan" );
	deepEqual( Stem("rännil"), "rännil" );
	deepEqual( Stem("rännor"), "ränn" );
	deepEqual( Stem("rännsten"), "rännst" );
	deepEqual( Stem("rännstenarna"), "rännsten" );
	deepEqual( Stem("rännstenen"), "rännsten" );
	deepEqual( Stem("ränseln"), "ränseln" );
	deepEqual( Stem("ränta"), "ränt" );
	deepEqual( Stem("räntan"), "räntan" );
	deepEqual( Stem("räntor"), "ränt" );
	deepEqual( Stem("räring"), "räring" );
	deepEqual( Stem("rätade"), "rät" );
	deepEqual( Stem("rätt"), "rätt" );
	deepEqual( Stem("rätta"), "rätt" );
	deepEqual( Stem("rättade"), "rätt" );
	deepEqual( Stem("rättan"), "rättan" );
	deepEqual( Stem("rättar"), "rätt" );
	deepEqual( Stem("rättare"), "rätt" );
	deepEqual( Stem("rättas"), "rätt" );
	deepEqual( Stem("rättast"), "rätt" );
	deepEqual( Stem("rättat"), "rätt" );
	deepEqual( Stem("rätte"), "rätt" );
	deepEqual( Stem("rättegång"), "rättegång" );
	deepEqual( Stem("rättegångshandlingar"), "rättegångshandling" );
	deepEqual( Stem("rättegångsprotokoll"), "rättegångsprotokoll" );
	deepEqual( Stem("rätteligen"), "rätte" );
	deepEqual( Stem("rätten"), "rätt" );
	deepEqual( Stem("rätter"), "rätt" );
	deepEqual( Stem("rätterna"), "rätt" );
	deepEqual( Stem("rättesnöre"), "rättesnör" );
	deepEqual( Stem("rättfram"), "rättfram" );
	deepEqual( Stem("rättfärdiga"), "rättfärd" );
	deepEqual( Stem("rättfärdigar"), "rättfärd" );
	deepEqual( Stem("rättfärdige"), "rättfärd" );
	deepEqual( Stem("rättfärdighet"), "rättfärd" );
	deepEqual( Stem("rättighet"), "rätt" );
	deepEqual( Stem("rättigheten"), "rätt" );
	deepEqual( Stem("rättigheter"), "rätt" );
	deepEqual( Stem("rättmätiga"), "rättmät" );
	deepEqual( Stem("rättrådighet"), "rättråd" );
	deepEqual( Stem("rättsenliga"), "rättsen" );
	deepEqual( Stem("rättsinniga"), "rättsinn" );
	deepEqual( Stem("rättsinnige"), "rättsinn" );
	deepEqual( Stem("rättskaffens"), "rättskaff" );
	deepEqual( Stem("rättskänsla"), "rättskänsl" );
	deepEqual( Stem("rättsskipningen"), "rättsskipning" );
	deepEqual( Stem("rättsuppfattning"), "rättsuppfattning" );
	deepEqual( Stem("rättvis"), "rättvis" );
	deepEqual( Stem("rättvisa"), "rättvis" );
	deepEqual( Stem("rättvisan"), "rättvisan" );
	deepEqual( Stem("rättvisaste"), "rättvis" );
	deepEqual( Stem("rättvisligen"), "rättvis" );
	deepEqual( Stem("rättvist"), "rättvist" );
	deepEqual( Stem("räv"), "räv" );
	deepEqual( Stem("räven"), "räv" );
	deepEqual( Stem("rääf"), "rääf" );
	deepEqual( Stem("rå"), "rå" );
	deepEqual( Stem("råa"), "råa" );
	deepEqual( Stem("råckor"), "råck" );
	deepEqual( Stem("råd"), "råd" );
	deepEqual( Stem("råda"), "råd" );
	deepEqual( Stem("rådande"), "råd" );
	deepEqual( Stem("rådbråka"), "rådbråk" );
	deepEqual( Stem("rådde"), "rådd" );
	deepEqual( Stem("råden"), "råd" );
	deepEqual( Stem("råder"), "råd" );
	deepEqual( Stem("rådet"), "rådet" );
	deepEqual( Stem("rådfråga"), "rådfråg" );
	deepEqual( Stem("rådfrågade"), "rådfråg" );
	deepEqual( Stem("rådfrågat"), "rådfråg" );
	deepEqual( Stem("rådgivare"), "rådgiv" );
	deepEqual( Stem("rådgöra"), "rådgör" );
	deepEqual( Stem("rådhusets"), "rådhuset" );
	deepEqual( Stem("rådligast"), "råd" );
	deepEqual( Stem("rådlös"), "rådlös" );
	deepEqual( Stem("rådlöshet"), "rådlös" );
	deepEqual( Stem("rådman"), "rådman" );
	deepEqual( Stem("rådplägning"), "rådplägning" );
	deepEqual( Stem("rådplägningar"), "rådplägning" );
	deepEqual( Stem("rådrum"), "rådrum" );
	deepEqual( Stem("råds"), "råd" );
	deepEqual( Stem("rådsförsamling"), "rådsförsamling" );
	deepEqual( Stem("rådslaget"), "rådslaget" );
	deepEqual( Stem("rådt"), "rådt" );
	deepEqual( Stem("rådvill"), "rådvill" );
	deepEqual( Stem("råe"), "råe" );
	deepEqual( Stem("råg"), "råg" );
	deepEqual( Stem("råga"), "råg" );
	deepEqual( Stem("rågade"), "råg" );
	deepEqual( Stem("rågadt"), "rågad" );
	deepEqual( Stem("rågen"), "råg" );
	deepEqual( Stem("rågfält"), "rågfält" );
	deepEqual( Stem("råhet"), "råhet" );
	deepEqual( Stem("råheten"), "råhet" );
	deepEqual( Stem("råk"), "råk" );
	deepEqual( Stem("råka"), "råk" );
	deepEqual( Stem("råkade"), "råk" );
	deepEqual( Stem("råkar"), "råk" );
	deepEqual( Stem("råkas"), "råk" );
	deepEqual( Stem("råkat"), "råk" );
	deepEqual( Stem("råmade"), "råm" );
	deepEqual( Stem("råmandet"), "råm" );
	deepEqual( Stem("råmar"), "råm" );
	deepEqual( Stem("rån"), "rån" );
	deepEqual( Stem("rår"), "rår" );
	deepEqual( Stem("rått"), "rått" );
	deepEqual( Stem("råtta"), "rått" );
	deepEqual( Stem("råttan"), "råttan" );
	deepEqual( Stem("råttbo"), "råttbo" );
	deepEqual( Stem("råttfälla"), "råttfäll" );
	deepEqual( Stem("råttor"), "rått" );
	deepEqual( Stem("råttsvansar"), "råttsvans" );
	deepEqual( Stem("råttögon"), "råttögon" );
	deepEqual( Stem("rö"), "rö" );
	deepEqual( Stem("röcko"), "röcko" );
	deepEqual( Stem("röd"), "röd" );
	deepEqual( Stem("röda"), "röd" );
	deepEqual( Stem("rödaktiga"), "rödakt" );
	deepEqual( Stem("rödare"), "röd" );
	deepEqual( Stem("rödblommig"), "rödblomm" );
	deepEqual( Stem("rödblommiga"), "rödblomm" );
	deepEqual( Stem("rödblå"), "rödblå" );
	deepEqual( Stem("rödbrusig"), "rödbrus" );
	deepEqual( Stem("rödbrusige"), "rödbrus" );
	deepEqual( Stem("röde"), "röd" );
	deepEqual( Stem("rödflammiga"), "rödflamm" );
	deepEqual( Stem("rödfärgad"), "rödfärg" );
	deepEqual( Stem("rödgula"), "rödgul" );
	deepEqual( Stem("rödkantade"), "rödkant" );
	deepEqual( Stem("rödletta"), "rödlet" );
	deepEqual( Stem("rödlätta"), "rödlät" );
	deepEqual( Stem("rödmålade"), "rödmål" );
	deepEqual( Stem("rödrandig"), "rödrand" );
	deepEqual( Stem("rödrandiga"), "rödrand" );
	deepEqual( Stem("rödskinn"), "rödskin" );
	deepEqual( Stem("rödviolett"), "rödviolet" );
	deepEqual( Stem("röfvar"), "röfv" );
	deepEqual( Stem("röja"), "röj" );
	deepEqual( Stem("röjas"), "röj" );
	deepEqual( Stem("röjde"), "röjd" );
	deepEqual( Stem("röjdes"), "röjd" );
	deepEqual( Stem("röjer"), "röj" );
	deepEqual( Stem("röjt"), "röjt" );
	deepEqual( Stem("rök"), "rök" );
	deepEqual( Stem("röka"), "rök" );
	deepEqual( Stem("rökade"), "rök" );
	deepEqual( Stem("rökande"), "rök" );
	deepEqual( Stem("rökare"), "rök" );
	deepEqual( Stem("rökelse"), "rök" );
	deepEqual( Stem("rökelsekar"), "rökelsek" );
	deepEqual( Stem("rökelsemolnen"), "rökelsemoln" );
	deepEqual( Stem("rökelsen"), "rök" );
	deepEqual( Stem("röken"), "rök" );
	deepEqual( Stem("röker"), "rök" );
	deepEqual( Stem("rökhytten"), "rökhyt" );
	deepEqual( Stem("rökmoln"), "rökmoln" );
	deepEqual( Stem("rökmolnen"), "rökmoln" );
	deepEqual( Stem("rökn"), "rökn" );
	deepEqual( Stem("röknarna"), "rökn" );
	deepEqual( Stem("röknarnn"), "röknarn" );
	deepEqual( Stem("röknonno"), "röknonno" );
	deepEqual( Stem("rökoffer"), "rökoff" );
	deepEqual( Stem("rökpelare"), "rökpel" );
	deepEqual( Stem("rökpelaren"), "rökpel" );
	deepEqual( Stem("rökring"), "rökring" );
	deepEqual( Stem("rökringen"), "rökring" );
	deepEqual( Stem("rökrum"), "rökrum" );
	deepEqual( Stem("rökrummet"), "rökrummet" );
	deepEqual( Stem("rökt"), "rökt" );
	deepEqual( Stem("rökte"), "rökt" );
	deepEqual( Stem("rökunrnn"), "rökunrn" );
	deepEqual( Stem("röl"), "röl" );
	deepEqual( Stem("römt"), "römt" );
	deepEqual( Stem("rön"), "rön" );
	deepEqual( Stem("röna"), "rön" );
	deepEqual( Stem("rönet"), "rönet" );
	deepEqual( Stem("rönl"), "rönl" );
	deepEqual( Stem("rönnarnas"), "rönn" );
	deepEqual( Stem("rönnbären"), "rönnbär" );
	deepEqual( Stem("rönt"), "rönt" );
	deepEqual( Stem("rönte"), "rönt" );
	deepEqual( Stem("röntgen"), "röntg" );
	deepEqual( Stem("röntgenfotograferats"), "röntgenfotograferat" );
	deepEqual( Stem("rör"), "rör" );
	deepEqual( Stem("röra"), "rör" );
	deepEqual( Stem("rörande"), "rör" );
	deepEqual( Stem("röras"), "rör" );
	deepEqual( Stem("rörd"), "rörd" );
	deepEqual( Stem("rörda"), "rörd" );
	deepEqual( Stem("rörde"), "rörd" );
	deepEqual( Stem("rördes"), "rörd" );
	deepEqual( Stem("rörelse"), "rör" );
	deepEqual( Stem("rörelsegrader"), "rörelsegrad" );
	deepEqual( Stem("rörelsen"), "rör" );
	deepEqual( Stem("rörelser"), "rör" );
	deepEqual( Stem("rörelserna"), "rör" );
	deepEqual( Stem("rörer"), "rör" );
	deepEqual( Stem("röret"), "röret" );
	deepEqual( Stem("rörlig"), "rör" );
	deepEqual( Stem("rörliga"), "rör" );
	deepEqual( Stem("rörlighet"), "rör" );
	deepEqual( Stem("rörligt"), "rör" );
	deepEqual( Stem("rörsoffan"), "rörsoffan" );
	deepEqual( Stem("rörstrand"), "rörstrand" );
	deepEqual( Stem("rört"), "rört" );
	deepEqual( Stem("rös"), "rös" );
	deepEqual( Stem("röst"), "röst" );
	deepEqual( Stem("rösten"), "röst" );
	deepEqual( Stem("röstens"), "röst" );
	deepEqual( Stem("röster"), "röst" );
	deepEqual( Stem("rösterna"), "röst" );
	deepEqual( Stem("rösts"), "röst" );
	deepEqual( Stem("röt"), "röt" );
	deepEqual( Stem("röta"), "röt" );
	deepEqual( Stem("rötmånadshetta"), "rötmånadshet" );
	deepEqual( Stem("rött"), "rött" );
	deepEqual( Stem("rötta"), "rött" );
	deepEqual( Stem("rötter"), "rött" );
	deepEqual( Stem("rötägg"), "rötägg" );
	deepEqual( Stem("röva"), "röv" );
	deepEqual( Stem("s"), "s" );
	deepEqual( Stem("sa"), "sa" );
	deepEqual( Stem("saa"), "saa" );
	deepEqual( Stem("sabbat"), "sabb" );
	deepEqual( Stem("sabbatsfärd"), "sabbatsfärd" );
	deepEqual( Stem("sabina"), "sabin" );
	deepEqual( Stem("sabinas"), "sabin" );
	deepEqual( Stem("sabiuas"), "sabiu" );
	deepEqual( Stem("sablar"), "sabl" );
	deepEqual( Stem("sack"), "sack" );
	deepEqual( Stem("sadan"), "sadan" );
	deepEqual( Stem("sadana"), "sadan" );
	deepEqual( Stem("sadant"), "sadant" );
	deepEqual( Stem("sadc"), "sadc" );
	deepEqual( Stem("sade"), "sad" );
	deepEqual( Stem("sades"), "sad" );
	deepEqual( Stem("saft"), "saft" );
	deepEqual( Stem("saftade"), "saft" );
	deepEqual( Stem("saftig"), "saft" );
	deepEqual( Stem("saftiga"), "saft" );
	deepEqual( Stem("saftigt"), "saft" );
	deepEqual( Stem("sag"), "sag" );
	deepEqual( Stem("saga"), "sag" );
	deepEqual( Stem("sagan"), "sagan" );
	deepEqual( Stem("sagans"), "sagan" );
	deepEqual( Stem("sagbok"), "sagbok" );
	deepEqual( Stem("sagboken"), "sagbok" );
	deepEqual( Stem("sagdt"), "sagd" );
	deepEqual( Stem("sage"), "sag" );
	deepEqual( Stem("sager"), "sag" );
	deepEqual( Stem("sagogången"), "sagogång" );
	deepEqual( Stem("sagokungen"), "sagokung" );
	deepEqual( Stem("sagolika"), "sagolik" );
	deepEqual( Stem("sagolikt"), "sagolik" );
	deepEqual( Stem("sagoprins"), "sagoprin" );
	deepEqual( Stem("sagor"), "sag" );
	deepEqual( Stem("sagorna"), "sag" );
	deepEqual( Stem("sagoslott"), "sagoslot" );
	deepEqual( Stem("sagotiden"), "sagotid" );
	deepEqual( Stem("sagspanen"), "sagspan" );
	deepEqual( Stem("sagt"), "sagt" );
	deepEqual( Stem("sak"), "sak" );
	deepEqual( Stem("sakar"), "sak" );
	deepEqual( Stem("saken"), "sak" );
	deepEqual( Stem("sakens"), "sak" );
	deepEqual( Stem("saker"), "sak" );
	deepEqual( Stem("sakerna"), "sak" );
	deepEqual( Stem("sakernas"), "sak" );
	deepEqual( Stem("sakert"), "sakert" );
	deepEqual( Stem("sakligt"), "sak" );
	deepEqual( Stem("sakna"), "sakn" );
	deepEqual( Stem("saknad"), "sakn" );
	deepEqual( Stem("saknade"), "sakn" );
	deepEqual( Stem("saknaden"), "saknad" );
	deepEqual( Stem("saknades"), "sakn" );
	deepEqual( Stem("saknar"), "sakn" );
	deepEqual( Stem("saknas"), "sakn" );
	deepEqual( Stem("saknat"), "sakn" );
	deepEqual( Stem("sakramenskade"), "sakramensk" );
	deepEqual( Stem("sakrament"), "sakrament" );
	deepEqual( Stem("sakristian"), "sakristian" );
	deepEqual( Stem("sakristians"), "sakristian" );
	deepEqual( Stem("sakta"), "sakt" );
	deepEqual( Stem("saktade"), "sakt" );
	deepEqual( Stem("saktar"), "sakt" );
	deepEqual( Stem("saktare"), "sakt" );
	deepEqual( Stem("saktat"), "sakt" );
	deepEqual( Stem("saktmod"), "saktmod" );
	deepEqual( Stem("saktmodig"), "saktmod" );
	deepEqual( Stem("saktmodigt"), "saktmod" );
	deepEqual( Stem("sal"), "sal" );
	deepEqual( Stem("salcional"), "salcional" );
	deepEqual( Stem("salen"), "sal" );
	deepEqual( Stem("salens"), "sal" );
	deepEqual( Stem("salig"), "sal" );
	deepEqual( Stem("saliga"), "sal" );
	deepEqual( Stem("salighet"), "sal" );
	deepEqual( Stem("saligheten"), "sal" );
	deepEqual( Stem("saligheters"), "saligheter" );
	deepEqual( Stem("saligt"), "sal" );
	deepEqual( Stem("saliven"), "saliv" );
	deepEqual( Stem("sallan"), "sallan" );
	deepEqual( Stem("sally"), "sally" );
	deepEqual( Stem("sallys"), "sally" );
	deepEqual( Stem("saln"), "saln" );
	deepEqual( Stem("salomo"), "salomo" );
	deepEqual( Stem("salomos"), "salomo" );
	deepEqual( Stem("salong"), "salong" );
	deepEqual( Stem("salongen"), "salong" );
	deepEqual( Stem("salongsbordet"), "salongsbordet" );
	deepEqual( Stem("salsbordet"), "salsbordet" );
	deepEqual( Stem("salsdörren"), "salsdörr" );
	deepEqual( Stem("salsfönstret"), "salsfönstret" );
	deepEqual( Stem("salsgolvet"), "salsgolvet" );
	deepEqual( Stem("salt"), "salt" );
	deepEqual( Stem("salta"), "salt" );
	deepEqual( Stem("saltet"), "saltet" );
	deepEqual( Stem("saltkorn"), "saltkorn" );
	deepEqual( Stem("saltvatten"), "saltvat" );
	deepEqual( Stem("salvan"), "salvan" );
	deepEqual( Stem("sam"), "sam" );
	deepEqual( Stem("samband"), "samband" );
	deepEqual( Stem("samfund"), "samfund" );
	deepEqual( Stem("samfundsförhållande"), "samfundsförhåll" );
	deepEqual( Stem("samhet"), "sam" );
	deepEqual( Stem("samheten"), "sam" );
	deepEqual( Stem("samhälle"), "samhäll" );
	deepEqual( Stem("samhället"), "samhället" );
	deepEqual( Stem("samhällslivet"), "samhällslivet" );
	deepEqual( Stem("samhällsorganisationens"), "samhällsorganisation" );
	deepEqual( Stem("samhällsvetenskapen"), "samhällsvetenskap" );
	deepEqual( Stem("samhörighet"), "samhör" );
	deepEqual( Stem("samklang"), "samklang" );
	deepEqual( Stem("samkväm"), "samkväm" );
	deepEqual( Stem("samla"), "saml" );
	deepEqual( Stem("samlad"), "saml" );
	deepEqual( Stem("samlade"), "saml" );
	deepEqual( Stem("samlades"), "saml" );
	deepEqual( Stem("samlag"), "samlag" );
	deepEqual( Stem("samlalet"), "samlalet" );
	deepEqual( Stem("samlar"), "saml" );
	deepEqual( Stem("samlare"), "saml" );
	deepEqual( Stem("samlas"), "saml" );
	deepEqual( Stem("samlat"), "saml" );
	deepEqual( Stem("samlats"), "samlat" );
	deepEqual( Stem("samling"), "samling" );
	deepEqual( Stem("samlingen"), "samling" );
	deepEqual( Stem("samma"), "samm" );
	deepEqual( Stem("samman"), "samman" );
	deepEqual( Stem("sammanbinda"), "sammanbind" );
	deepEqual( Stem("sammanbinder"), "sammanbind" );
	deepEqual( Stem("sammanbitet"), "sammanbitet" );
	deepEqual( Stem("sammanbitna"), "sammanbitn" );
	deepEqual( Stem("sammanblandat"), "sammanbland" );
	deepEqual( Stem("sammanbrott"), "sammanbrot" );
	deepEqual( Stem("sammandragna"), "sammandragn" );
	deepEqual( Stem("sammandragning"), "sammandragning" );
	deepEqual( Stem("sammandrog"), "sammandrog" );
	deepEqual( Stem("sammanfattningen"), "sammanfattning" );
	deepEqual( Stem("sammanflöt"), "sammanflöt" );
	deepEqual( Stem("sammanföll"), "sammanföll" );
	deepEqual( Stem("sammanhang"), "sammanhang" );
	deepEqual( Stem("sammanhanget"), "sammanhanget" );
	deepEqual( Stem("sammanhängde"), "sammanhäng" );
	deepEqual( Stem("sammanhölle"), "sammanhöll" );
	deepEqual( Stem("sammanklistrade"), "sammanklistr" );
	deepEqual( Stem("sammanknipna"), "sammanknipn" );
	deepEqual( Stem("sammanknuten"), "sammanknut" );
	deepEqual( Stem("sammanknycklat"), "sammanknyckl" );
	deepEqual( Stem("sammanknäppta"), "sammanknäppt" );
	deepEqual( Stem("sammankom"), "sammankom" );
	deepEqual( Stem("sammankomma"), "sammankomm" );
	deepEqual( Stem("sammankomst"), "sammankomst" );
	deepEqual( Stem("sammankomster"), "sammankomst" );
	deepEqual( Stem("sammanlagt"), "sammanlag" );
	deepEqual( Stem("sammanlevnad"), "sammanlevn" );
	deepEqual( Stem("sammanlänka"), "sammanlänk" );
	deepEqual( Stem("sammanpressad"), "sammanpress" );
	deepEqual( Stem("sammanpressade"), "sammanpress" );
	deepEqual( Stem("sammanpressades"), "sammanpress" );
	deepEqual( Stem("sammanrafsat"), "sammanrafs" );
	deepEqual( Stem("sammans"), "samman" );
	deepEqual( Stem("sammanslagna"), "sammanslagn" );
	deepEqual( Stem("sammanslingrade"), "sammanslingr" );
	deepEqual( Stem("sammansluten"), "sammanslut" );
	deepEqual( Stem("sammanslutning"), "sammanslutning" );
	deepEqual( Stem("sammanslå"), "sammanslå" );
	deepEqual( Stem("sammansmälte"), "sammansmält" );
	deepEqual( Stem("sammansmälter"), "sammansmält" );
	deepEqual( Stem("sammansnörd"), "sammansnörd" );
	deepEqual( Stem("sammanstämma"), "sammanstämm" );
	deepEqual( Stem("sammansättning"), "sammansättning" );
	deepEqual( Stem("sammansättningar"), "sammansättning" );
	deepEqual( Stem("sammantorkad"), "sammantork" );
	deepEqual( Stem("sammantrasslat"), "sammantrassl" );
	deepEqual( Stem("sammantryckt"), "sammantryck" );
	deepEqual( Stem("sammantryckta"), "sammantryck" );
	deepEqual( Stem("sammanträde"), "sammanträd" );
	deepEqual( Stem("sammanträden"), "sammanträd" );
	deepEqual( Stem("sammanträffande"), "sammanträff" );
	deepEqual( Stem("sammanträtt"), "sammanträt" );
	deepEqual( Stem("sammanvaro"), "sammanvaro" );
	deepEqual( Stem("samme"), "samm" );
	deepEqual( Stem("sammet"), "sammet" );
	deepEqual( Stem("sammetsblad"), "sammetsbl" );
	deepEqual( Stem("sammetsblus"), "sammetsblus" );
	deepEqual( Stem("sammetskind"), "sammetskind" );
	deepEqual( Stem("sammetskorsett"), "sammetskorset" );
	deepEqual( Stem("sammetslen"), "sammetsl" );
	deepEqual( Stem("sammetslena"), "sammetslen" );
	deepEqual( Stem("sammetslent"), "sammetslent" );
	deepEqual( Stem("sammetsmjukhet"), "sammetsmjuk" );
	deepEqual( Stem("samråd"), "samråd" );
	deepEqual( Stem("samråda"), "samråd" );
	deepEqual( Stem("sams"), "sam" );
	deepEqual( Stem("samsas"), "sams" );
	deepEqual( Stem("samspråk"), "samspråk" );
	deepEqual( Stem("samspråkat"), "samspråk" );
	deepEqual( Stem("samt"), "samt" );
	deepEqual( Stem("samtal"), "samtal" );
	deepEqual( Stem("samtalade"), "samtal" );
	deepEqual( Stem("samtalet"), "samtalet" );
	deepEqual( Stem("samtalets"), "samtalet" );
	deepEqual( Stem("samtalsform"), "samtalsform" );
	deepEqual( Stem("samtalsämnet"), "samtalsämnet" );
	deepEqual( Stem("samtida"), "samtid" );
	deepEqual( Stem("samtidigt"), "samtid" );
	deepEqual( Stem("samtliga"), "samt" );
	deepEqual( Stem("samtycke"), "samtyck" );
	deepEqual( Stem("samtycker"), "samtyck" );
	deepEqual( Stem("samtyckt"), "samtyck" );
	deepEqual( Stem("samuels"), "samuel" );
	deepEqual( Stem("samuelsgatan"), "samuelsgatan" );
	deepEqual( Stem("samvaro"), "samvaro" );
	deepEqual( Stem("samvete"), "samvet" );
	deepEqual( Stem("samveten"), "samvet" );
	deepEqual( Stem("samvetet"), "samvetet" );
	deepEqual( Stem("samvetets"), "samvetet" );
	deepEqual( Stem("samvetsagg"), "samvetsagg" );
	deepEqual( Stem("samvetsgrann"), "samvetsgran" );
	deepEqual( Stem("samvetsgrant"), "samvetsgrant" );
	deepEqual( Stem("samvetskval"), "samvetskval" );
	deepEqual( Stem("samvetslösa"), "samvetslös" );
	deepEqual( Stem("samvetsqval"), "samvetsqval" );
	deepEqual( Stem("samvetssak"), "samvetssak" );
	deepEqual( Stem("san"), "san" );
	deepEqual( Stem("sanatoriet"), "sanatoriet" );
	deepEqual( Stem("sanatorium"), "sanatorium" );
	deepEqual( Stem("sand"), "sand" );
	deepEqual( Stem("sandbottnen"), "sandbottn" );
	deepEqual( Stem("sande"), "sand" );
	deepEqual( Stem("sanden"), "sand" );
	deepEqual( Stem("sandgangen"), "sandgang" );
	deepEqual( Stem("sandgången"), "sandgång" );
	deepEqual( Stem("sandhogen"), "sandhog" );
	deepEqual( Stem("sandkornen"), "sandkorn" );
	deepEqual( Stem("sandplan"), "sandplan" );
	deepEqual( Stem("sandstranden"), "sandstr" );
	deepEqual( Stem("sang"), "sang" );
	deepEqual( Stem("sangen"), "sang" );
	deepEqual( Stem("sanger"), "sang" );
	deepEqual( Stem("sangren"), "sangr" );
	deepEqual( Stem("sankta"), "sank" );
	deepEqual( Stem("sankte"), "sank" );
	deepEqual( Stem("sann"), "sann" );
	deepEqual( Stem("sanna"), "sann" );
	deepEqual( Stem("sannerligen"), "sanner" );
	deepEqual( Stem("sannfärdeligen"), "sannfärde" );
	deepEqual( Stem("sannfärdigheten"), "sannfärd" );
	deepEqual( Stem("sanning"), "sanning" );
	deepEqual( Stem("sanningen"), "sanning" );
	deepEqual( Stem("sanningens"), "sanning" );
	deepEqual( Stem("sanningsdoser"), "sanningsdos" );
	deepEqual( Stem("sanningsenligt"), "sanningsen" );
	deepEqual( Stem("sanningsjakt"), "sanningsjak" );
	deepEqual( Stem("sanningsmängd"), "sanningsmäng" );
	deepEqual( Stem("sannolik"), "sannolik" );
	deepEqual( Stem("sannolikhet"), "sannolik" );
	deepEqual( Stem("sannolikheten"), "sannolik" );
	deepEqual( Stem("sannolikt"), "sannolik" );
	deepEqual( Stem("sannskyldiga"), "sannskyld" );
	deepEqual( Stem("sans"), "san" );
	deepEqual( Stem("sansa"), "sans" );
	deepEqual( Stem("sanslöse"), "sanslös" );
	deepEqual( Stem("sanslöshet"), "sanslös" );
	deepEqual( Stem("sansning"), "sansning" );
	deepEqual( Stem("sansningen"), "sansning" );
	deepEqual( Stem("sant"), "sant" );
	deepEqual( Stem("sar"), "sar" );
	deepEqual( Stem("sarade"), "sar" );
	deepEqual( Stem("sardiner"), "sardin" );
	deepEqual( Stem("sardoniskt"), "sardonisk" );
	deepEqual( Stem("sargad"), "sarg" );
	deepEqual( Stem("sarkasmer"), "sarkasm" );
	deepEqual( Stem("sarkofag"), "sarkofag" );
	deepEqual( Stem("sarkom"), "sarkom" );
	deepEqual( Stem("saron"), "saron" );
	deepEqual( Stem("sarskilt"), "sarskilt" );
	deepEqual( Stem("sasom"), "sasom" );
	deepEqual( Stem("satan"), "satan" );
	deepEqual( Stem("sataniskt"), "satanisk" );
	deepEqual( Stem("satans"), "satan" );
	deepEqual( Stem("satar"), "sat" );
	deepEqual( Stem("satinturc"), "satinturc" );
	deepEqual( Stem("satinturcklädningen"), "satinturcklädning" );
	deepEqual( Stem("satirisk"), "satirisk" );
	deepEqual( Stem("sats"), "sat" );
	deepEqual( Stem("satt"), "satt" );
	deepEqual( Stem("satta"), "satt" );
	deepEqual( Stem("satte"), "satt" );
	deepEqual( Stem("satureja"), "saturej" );
	deepEqual( Stem("satyrgrin"), "satyrgrin" );
	deepEqual( Stem("saviga"), "sav" );
	deepEqual( Stem("sax"), "sax" );
	deepEqual( Stem("saxen"), "sax" );
	deepEqual( Stem("saxofon"), "saxofon" );
	deepEqual( Stem("sc"), "sc" );
	deepEqual( Stem("scdan"), "scdan" );
	deepEqual( Stem("scen"), "scen" );
	deepEqual( Stem("scenen"), "scen" );
	deepEqual( Stem("scener"), "scen" );
	deepEqual( Stem("scenerier"), "sceneri" );
	deepEqual( Stem("scenerna"), "scen" );
	deepEqual( Stem("scgra"), "scgra" );
	deepEqual( Stem("sch"), "sch" );
	deepEqual( Stem("schabrak"), "schabrak" );
	deepEqual( Stem("schack"), "schack" );
	deepEqual( Stem("schackbrädet"), "schackbrädet" );
	deepEqual( Stem("schackproblem"), "schackproblem" );
	deepEqual( Stem("schackspelarens"), "schackspel" );
	deepEqual( Stem("schackspirs"), "schackspir" );
	deepEqual( Stem("schaggsoffan"), "schaggsoffan" );
	deepEqual( Stem("schaggstolar"), "schaggstol" );
	deepEqual( Stem("schakt"), "schakt" );
	deepEqual( Stem("schal"), "schal" );
	deepEqual( Stem("schalar"), "schal" );
	deepEqual( Stem("schalarne"), "schal" );
	deepEqual( Stem("schalen"), "schal" );
	deepEqual( Stem("schalett"), "schalet" );
	deepEqual( Stem("schaletten"), "schalet" );
	deepEqual( Stem("schaletterna"), "schalet" );
	deepEqual( Stem("scharlakanslängtan"), "scharlakanslängtan" );
	deepEqual( Stem("schartaus"), "schartaus" );
	deepEqual( Stem("schasa"), "schas" );
	deepEqual( Stem("schasar"), "schas" );
	deepEqual( Stem("schatterat"), "schatter" );
	deepEqual( Stem("schatull"), "schatull" );
	deepEqual( Stem("schavott"), "schavot" );
	deepEqual( Stem("scheeles"), "scheel" );
	deepEqual( Stem("scheurer"), "scheur" );
	deepEqual( Stem("schism"), "schism" );
	deepEqual( Stem("schopenhauer"), "schopenhau" );
	deepEqual( Stem("schrader"), "schrad" );
	deepEqual( Stem("schweitzeri"), "schweitzeri" );
	deepEqual( Stem("schweiz"), "schweiz" );
	deepEqual( Stem("schweizerierna"), "schweizeri" );
	deepEqual( Stem("schäs"), "schäs" );
	deepEqual( Stem("schäskärran"), "schäskärran" );
	deepEqual( Stem("schäslong"), "schäslong" );
	deepEqual( Stem("schäslongen"), "schäslong" );
	deepEqual( Stem("scr"), "scr" );
	deepEqual( Stem("sd"), "sd" );
	deepEqual( Stem("sdong"), "sdong" );
	deepEqual( Stem("se"), "se" );
	deepEqual( Stem("sedan"), "sedan" );
	deepEqual( Stem("sedd"), "sedd" );
	deepEqual( Stem("sedel"), "sedel" );
	deepEqual( Stem("sedelbok"), "sedelbok" );
	deepEqual( Stem("sedeln"), "sedeln" );
	deepEqual( Stem("seden"), "sed" );
	deepEqual( Stem("seder"), "sed" );
	deepEqual( Stem("sedermera"), "sedermer" );
	deepEqual( Stem("sedesamt"), "sedesamt" );
	deepEqual( Stem("sediga"), "sed" );
	deepEqual( Stem("sedigt"), "sed" );
	deepEqual( Stem("sedlar"), "sedl" );
	deepEqual( Stem("sedlig"), "sed" );
	deepEqual( Stem("sedliga"), "sed" );
	deepEqual( Stem("sedligaste"), "sed" );
	deepEqual( Stem("sedlighet"), "sed" );
	deepEqual( Stem("sedlighetsbrott"), "sedlighetsbrot" );
	deepEqual( Stem("sedligt"), "sed" );
	deepEqual( Stem("sedvanligt"), "sedvan" );
	deepEqual( Stem("seende"), "seend" );
	deepEqual( Stem("sega"), "seg" );
	deepEqual( Stem("segel"), "segel" );
	deepEqual( Stem("segelbåt"), "segelbåt" );
	deepEqual( Stem("segelbåten"), "segelbåt" );
	deepEqual( Stem("segelduksbyxor"), "segelduksbyx" );
	deepEqual( Stem("segelfärdig"), "segelfärd" );
	deepEqual( Stem("segelfärdiga"), "segelfärd" );
	deepEqual( Stem("segellapparne"), "segellapp" );
	deepEqual( Stem("segelleden"), "segelled" );
	deepEqual( Stem("segeltur"), "segeltur" );
	deepEqual( Stem("segeltältet"), "segeltältet" );
	deepEqual( Stem("seger"), "seg" );
	deepEqual( Stem("segerkraft"), "segerkraft" );
	deepEqual( Stem("segerkrans"), "segerkran" );
	deepEqual( Stem("segerstolt"), "segerstolt" );
	deepEqual( Stem("seghet"), "seg" );
	deepEqual( Stem("segla"), "segl" );
	deepEqual( Stem("seglade"), "segl" );
	deepEqual( Stem("seglar"), "segl" );
	deepEqual( Stem("seglare"), "segl" );
	deepEqual( Stem("seglarn"), "seglarn" );
	deepEqual( Stem("seglat"), "segl" );
	deepEqual( Stem("seglen"), "segl" );
	deepEqual( Stem("seglet"), "seglet" );
	deepEqual( Stem("segling"), "segling" );
	deepEqual( Stem("segra"), "segr" );
	deepEqual( Stem("segrade"), "segr" );
	deepEqual( Stem("segrande"), "segr" );
	deepEqual( Stem("segrar"), "segr" );
	deepEqual( Stem("segraren"), "segr" );
	deepEqual( Stem("segrat"), "segr" );
	deepEqual( Stem("sekelslutet"), "sekelslutet" );
	deepEqual( Stem("sekler"), "sekl" );
	deepEqual( Stem("seklet"), "seklet" );
	deepEqual( Stem("seklets"), "seklet" );
	deepEqual( Stem("sekretären"), "sekretär" );
	deepEqual( Stem("sekter"), "sekt" );
	deepEqual( Stem("sekterisk"), "sekterisk" );
	deepEqual( Stem("sektern"), "sekt" );
	deepEqual( Stem("sekterns"), "sekt" );
	deepEqual( Stem("sekun"), "sekun" );
	deepEqual( Stem("sekund"), "sekund" );
	deepEqual( Stem("sekunden"), "sekund" );
	deepEqual( Stem("sekunder"), "sekund" );
	deepEqual( Stem("sekunderna"), "sekund" );
	deepEqual( Stem("sekunders"), "sekunder" );
	deepEqual( Stem("sekunds"), "sekund" );
	deepEqual( Stem("sel"), "sel" );
	deepEqual( Stem("seln"), "seln" );
	deepEqual( Stem("semesterresor"), "semesterres" );
	deepEqual( Stem("seminariets"), "seminariet" );
	deepEqual( Stem("semper"), "semp" );
	deepEqual( Stem("sen"), "sen" );
	deepEqual( Stem("sena"), "sen" );
	deepEqual( Stem("senap"), "senap" );
	deepEqual( Stem("senare"), "sen" );
	deepEqual( Stem("senast"), "sen" );
	deepEqual( Stem("senaste"), "sen" );
	deepEqual( Stem("senbösten"), "senböst" );
	deepEqual( Stem("sene"), "sen" );
	deepEqual( Stem("seneca"), "senec" );
	deepEqual( Stem("senig"), "sen" );
	deepEqual( Stem("senior"), "seni" );
	deepEqual( Stem("sensation"), "sensation" );
	deepEqual( Stem("sensationshistoria"), "sensationshistori" );
	deepEqual( Stem("sensationsutlovande"), "sensationsutlov" );
	deepEqual( Stem("sensommardag"), "sensommardag" );
	deepEqual( Stem("sensommaren"), "sensomm" );
	deepEqual( Stem("sensommarmörkrets"), "sensommarmörkret" );
	deepEqual( Stem("sensommarsol"), "sensommarsol" );
	deepEqual( Stem("sent"), "sent" );
	deepEqual( Stem("sentimental"), "sentimental" );
	deepEqual( Stem("sentimentala"), "sentimental" );
	deepEqual( Stem("sentimentalt"), "sentimentalt" );
	deepEqual( Stem("september"), "septemb" );
	deepEqual( Stem("septemberdag"), "septemberdag" );
	deepEqual( Stem("ser"), "ser" );
	deepEqual( Stem("sermo"), "sermo" );
	deepEqual( Stem("servera"), "server" );
	deepEqual( Stem("serverade"), "server" );
	deepEqual( Stem("serverades"), "server" );
	deepEqual( Stem("serveringen"), "servering" );
	deepEqual( Stem("serveringsflickan"), "serveringsflickan" );
	deepEqual( Stem("serveten"), "servet" );
	deepEqual( Stem("servett"), "servet" );
	deepEqual( Stem("servetten"), "servet" );
	deepEqual( Stem("servetter"), "servet" );
	deepEqual( Stem("servetterna"), "servet" );
	deepEqual( Stem("servilt"), "servilt" );
	deepEqual( Stem("servisen"), "servis" );
	deepEqual( Stem("serviser"), "servis" );
	deepEqual( Stem("ses"), "ses" );
	deepEqual( Stem("seså"), "seså" );
	deepEqual( Stem("sett"), "sett" );
	deepEqual( Stem("seulement"), "seulement" );
	deepEqual( Stem("sex"), "sex" );
	deepEqual( Stem("sexa"), "sex" );
	deepEqual( Stem("sexstyverslant"), "sexstyverslant" );
	deepEqual( Stem("sextiden"), "sextid" );
	deepEqual( Stem("sextio"), "sextio" );
	deepEqual( Stem("sextiosex"), "sextiosex" );
	deepEqual( Stem("sexton"), "sexton" );
	deepEqual( Stem("sextonde"), "sextond" );
	deepEqual( Stem("sextonskilling"), "sextonskilling" );
	deepEqual( Stem("sextonårig"), "sextonår" );
	deepEqual( Stem("sextonåriga"), "sextonår" );
	deepEqual( Stem("sextonårigt"), "sextonår" );
	deepEqual( Stem("sf"), "sf" );
	deepEqual( Stem("sffälle"), "sffäll" );
	deepEqual( Stem("sfi"), "sfi" );
	deepEqual( Stem("sfinxens"), "sfinx" );
	deepEqual( Stem("sfär"), "sfär" );
	deepEqual( Stem("sfärer"), "sfär" );
	deepEqual( Stem("shakespeares"), "shakespear" );
	deepEqual( Stem("shl"), "shl" );
	deepEqual( Stem("shls"), "shls" );
	deepEqual( Stem("shlta"), "shlta" );
	deepEqual( Stem("shod"), "shod" );
	deepEqual( Stem("si"), "si" );
	deepEqual( Stem("siade"), "siad" );
	deepEqual( Stem("siarskägg"), "siarskägg" );
	deepEqual( Stem("sick"), "sick" );
	deepEqual( Stem("sicksack"), "sicksack" );
	deepEqual( Stem("sida"), "sid" );
	deepEqual( Stem("sidan"), "sidan" );
	deepEqual( Stem("siden"), "sid" );
	deepEqual( Stem("sidenband"), "sidenband" );
	deepEqual( Stem("sidenduk"), "sidenduk" );
	deepEqual( Stem("sidenet"), "sidenet" );
	deepEqual( Stem("sidenhatt"), "sidenhat" );
	deepEqual( Stem("sidenkappa"), "sidenkapp" );
	deepEqual( Stem("sidenkläder"), "sidenkläd" );
	deepEqual( Stem("sidenklänning"), "sidenklänning" );
	deepEqual( Stem("sidenknä"), "sidenknä" );
	deepEqual( Stem("sidenkofta"), "sidenkoft" );
	deepEqual( Stem("sidenkramhandlare"), "sidenkramhandl" );
	deepEqual( Stem("sidennattrock"), "sidennattrock" );
	deepEqual( Stem("sidennäsduk"), "sidennäsduk" );
	deepEqual( Stem("sidenpaletå"), "sidenpaletå" );
	deepEqual( Stem("sidenpäls"), "sidenpäl" );
	deepEqual( Stem("sidenrock"), "sidenrock" );
	deepEqual( Stem("sidenrosett"), "sidenroset" );
	deepEqual( Stem("sidenrosetter"), "sidenroset" );
	deepEqual( Stem("sidenschal"), "sidenschal" );
	deepEqual( Stem("sidentak"), "sidentak" );
	deepEqual( Stem("sidentyger"), "sidentyg" );
	deepEqual( Stem("sidentyget"), "sidentyget" );
	deepEqual( Stem("sidentäckta"), "sidentäck" );
	deepEqual( Stem("sidlänt"), "sidlänt" );
	deepEqual( Stem("sidoblick"), "sidoblick" );
	deepEqual( Stem("sidogata"), "sidogat" );
	deepEqual( Stem("sidokammarn"), "sidokammarn" );
	deepEqual( Stem("sidolinjen"), "sidolinj" );
	deepEqual( Stem("sidor"), "sid" );
	deepEqual( Stem("sidorna"), "sid" );
	deepEqual( Stem("sidorum"), "sidorum" );
	deepEqual( Stem("sidotankar"), "sidotank" );
	deepEqual( Stem("sidoväg"), "sidoväg" );
	deepEqual( Stem("sidstycket"), "sidstycket" );
	deepEqual( Stem("siffror"), "siffr" );
	deepEqual( Stem("sig"), "sig" );
	deepEqual( Stem("sigill"), "sigill" );
	deepEqual( Stem("sigillet"), "sigillet" );
	deepEqual( Stem("signal"), "signal" );
	deepEqual( Stem("signalen"), "signal" );
	deepEqual( Stem("signetring"), "signetring" );
	deepEqual( Stem("sigra"), "sigr" );
	deepEqual( Stem("sigretadtillnyfikenhet"), "sigretadtillnyfiken" );
	deepEqual( Stem("sigte"), "sigt" );
	deepEqual( Stem("siig"), "siig" );
	deepEqual( Stem("siiverklart"), "siiverklart" );
	deepEqual( Stem("sikta"), "sikt" );
	deepEqual( Stem("siktade"), "sikt" );
	deepEqual( Stem("sikte"), "sikt" );
	deepEqual( Stem("sikten"), "sikt" );
	deepEqual( Stem("siktena"), "sikten" );
	deepEqual( Stem("siktet"), "siktet" );
	deepEqual( Stem("siktiga"), "sikt" );
	deepEqual( Stem("siktigt"), "sikt" );
	deepEqual( Stem("sil"), "sil" );
	deepEqual( Stem("sila"), "sil" );
	deepEqual( Stem("silade"), "sil" );
	deepEqual( Stem("silande"), "sil" );
	deepEqual( Stem("silfret"), "silfret" );
	deepEqual( Stem("silfverklockan"), "silfverklockan" );
	deepEqual( Stem("silfverlampa"), "silfverlamp" );
	deepEqual( Stem("silfverstjerna"), "silfverstj" );
	deepEqual( Stem("silhuett"), "silhuet" );
	deepEqual( Stem("silhuetten"), "silhuet" );
	deepEqual( Stem("silhuetter"), "silhuet" );
	deepEqual( Stem("siljan"), "siljan" );
	deepEqual( Stem("silke"), "silk" );
	deepEqual( Stem("silkes"), "silk" );
	deepEqual( Stem("silkesblommor"), "silkesblomm" );
	deepEqual( Stem("silkesduken"), "silkesduk" );
	deepEqual( Stem("silkesfloret"), "silkesfloret" );
	deepEqual( Stem("silkeshalsduk"), "silkeshalsduk" );
	deepEqual( Stem("silkeshåret"), "silkeshåret" );
	deepEqual( Stem("silkeslen"), "silkesl" );
	deepEqual( Stem("silkeslena"), "silkeslen" );
	deepEqual( Stem("silkeslent"), "silkeslent" );
	deepEqual( Stem("silkesnäsduk"), "silkesnäsduk" );
	deepEqual( Stem("silkespapper"), "silkespapp" );
	deepEqual( Stem("silkesperuk"), "silkesperuk" );
	deepEqual( Stem("silkesschal"), "silkesschal" );
	deepEqual( Stem("silkesschalen"), "silkesschal" );
	deepEqual( Stem("silkessnodder"), "silkessnod" );
	deepEqual( Stem("silkesstrumporna"), "silkesstrump" );
	deepEqual( Stem("silkesvirret"), "silkesvirret" );
	deepEqual( Stem("silket"), "silket" );
	deepEqual( Stem("silkets"), "silket" );
	deepEqual( Stem("sill"), "sill" );
	deepEqual( Stem("sillstrypare"), "sillstryp" );
	deepEqual( Stem("sillstryparn"), "sillstryparn" );
	deepEqual( Stem("silter"), "silt" );
	deepEqual( Stem("silvanders"), "silvander" );
	deepEqual( Stem("silver"), "silv" );
	deepEqual( Stem("silverax"), "silverax" );
	deepEqual( Stem("silverbeslagen"), "silverbeslag" );
	deepEqual( Stem("silverboetten"), "silverboet" );
	deepEqual( Stem("silverbägare"), "silverbäg" );
	deepEqual( Stem("silverfågel"), "silverfågel" );
	deepEqual( Stem("silvergaffel"), "silvergaffel" );
	deepEqual( Stem("silverglänsande"), "silvergläns" );
	deepEqual( Stem("silverklang"), "silverklang" );
	deepEqual( Stem("silverklara"), "silverklar" );
	deepEqual( Stem("silverklingande"), "silverkling" );
	deepEqual( Stem("silverkniv"), "silverkniv" );
	deepEqual( Stem("silverpapper"), "silverpapp" );
	deepEqual( Stem("silverpokaler"), "silverpokal" );
	deepEqual( Stem("silverrösten"), "silverröst" );
	deepEqual( Stem("silverskedar"), "silversked" );
	deepEqual( Stem("silverskålen"), "silverskål" );
	deepEqual( Stem("silverslant"), "silverslant" );
	deepEqual( Stem("silverslantar"), "silverslant" );
	deepEqual( Stem("silversprängda"), "silverspräng" );
	deepEqual( Stem("silverstake"), "silverstak" );
	deepEqual( Stem("silverstrimma"), "silverstrimm" );
	deepEqual( Stem("simma"), "simm" );
	deepEqual( Stem("simmade"), "simm" );
	deepEqual( Stem("simmande"), "simm" );
	deepEqual( Stem("simmar"), "simm" );
	deepEqual( Stem("simme"), "simm" );
	deepEqual( Stem("simmerska"), "simmersk" );
	deepEqual( Stem("simon"), "simon" );
	deepEqual( Stem("simons"), "simon" );
	deepEqual( Stem("simpel"), "simpel" );
	deepEqual( Stem("simpelt"), "simpelt" );
	deepEqual( Stem("simpla"), "simpl" );
	deepEqual( Stem("simtag"), "simtag" );
	deepEqual( Stem("simulerade"), "simuler" );
	deepEqual( Stem("sin"), "sin" );
	deepEqual( Stem("sina"), "sin" );
	deepEqual( Stem("sinas"), "sin" );
	deepEqual( Stem("sine"), "sin" );
	deepEqual( Stem("sinistrement"), "sinistrement" );
	deepEqual( Stem("sinnad"), "sinn" );
	deepEqual( Stem("sinnade"), "sinn" );
	deepEqual( Stem("sinne"), "sinn" );
	deepEqual( Stem("sinnelag"), "sinnelag" );
	deepEqual( Stem("sinnen"), "sinn" );
	deepEqual( Stem("sinnena"), "sinnen" );
	deepEqual( Stem("sinnenas"), "sinnen" );
	deepEqual( Stem("sinnens"), "sinn" );
	deepEqual( Stem("sinnes"), "sinn" );
	deepEqual( Stem("sinnesbeskaffenhet"), "sinnesbeskaffen" );
	deepEqual( Stem("sinnesförvirring"), "sinnesförvirring" );
	deepEqual( Stem("sinnesförvirringen"), "sinnesförvirring" );
	deepEqual( Stem("sinnesnärvaro"), "sinnesnärvaro" );
	deepEqual( Stem("sinnesoredan"), "sinnesoredan" );
	deepEqual( Stem("sinnesoro"), "sinnesoro" );
	deepEqual( Stem("sinnesrubbning"), "sinnesrubbning" );
	deepEqual( Stem("sinnesrörelse"), "sinnesrör" );
	deepEqual( Stem("sinnessjukdom"), "sinnessjukdom" );
	deepEqual( Stem("sinnessjuke"), "sinnessjuk" );
	deepEqual( Stem("sinnessjukhus"), "sinnessjukhus" );
	deepEqual( Stem("sinnesskakning"), "sinnesskakning" );
	deepEqual( Stem("sinnesstyrka"), "sinnesstyrk" );
	deepEqual( Stem("sinnesstämning"), "sinnesstämning" );
	deepEqual( Stem("sinnessvag"), "sinnessvag" );
	deepEqual( Stem("sinnessvage"), "sinnessvag" );
	deepEqual( Stem("sinnesuppbrusning"), "sinnesuppbrusning" );
	deepEqual( Stem("sinnesyra"), "sinnesyr" );
	deepEqual( Stem("sinnet"), "sinnet" );
	deepEqual( Stem("sinnigt"), "sinn" );
	deepEqual( Stem("sinnliga"), "sinn" );
	deepEqual( Stem("sinnlighet"), "sinn" );
	deepEqual( Stem("sinnligt"), "sinn" );
	deepEqual( Stem("sinnrik"), "sinnrik" );
	deepEqual( Stem("sinnrika"), "sinnrik" );
	deepEqual( Stem("sinom"), "sinom" );
	deepEqual( Stem("sinsemellan"), "sinsemellan" );
	deepEqual( Stem("sinstorakappa"), "sinstorakapp" );
	deepEqual( Stem("sio"), "sio" );
	deepEqual( Stem("sion"), "sion" );
	deepEqual( Stem("sions"), "sion" );
	deepEqual( Stem("sippare"), "sipp" );
	deepEqual( Stem("sippor"), "sipp" );
	deepEqual( Stem("sipprade"), "sippr" );
	deepEqual( Stem("sirap"), "sirap" );
	deepEqual( Stem("siratens"), "sirat" );
	deepEqual( Stem("sirenen"), "siren" );
	deepEqual( Stem("sirlig"), "sir" );
	deepEqual( Stem("sirliga"), "sir" );
	deepEqual( Stem("sist"), "sist" );
	deepEqual( Stem("sista"), "sist" );
	deepEqual( Stem("siste"), "sist" );
	deepEqual( Stem("sistone"), "siston" );
	deepEqual( Stem("sitt"), "sitt" );
	deepEqual( Stem("sitta"), "sitt" );
	deepEqual( Stem("sittande"), "sitt" );
	deepEqual( Stem("sitter"), "sitt" );
	deepEqual( Stem("situation"), "situation" );
	deepEqual( Stem("situationen"), "situation" );
	deepEqual( Stem("situationer"), "situation" );
	deepEqual( Stem("siuta"), "siut" );
	deepEqual( Stem("sj"), "sj" );
	deepEqual( Stem("sjal"), "sjal" );
	deepEqual( Stem("sjalv"), "sjalv" );
	deepEqual( Stem("sjelf"), "sjelf" );
	deepEqual( Stem("sjelfbeherskning"), "sjelfbeherskning" );
	deepEqual( Stem("sjelfförsvar"), "sjelfförsv" );
	deepEqual( Stem("sjelfförvillelsens"), "sjelfförvill" );
	deepEqual( Stem("sjelfkänsla"), "sjelfkänsl" );
	deepEqual( Stem("sjelfkärlek"), "sjelfkärlek" );
	deepEqual( Stem("sjelfmant"), "sjelfmant" );
	deepEqual( Stem("sjelfständig"), "sjelfständ" );
	deepEqual( Stem("sjelfsvåldig"), "sjelfsvåld" );
	deepEqual( Stem("sjelfsvåldiga"), "sjelfsvåld" );
	deepEqual( Stem("sjelft"), "sjelft" );
	deepEqual( Stem("sjelfva"), "sjelfv" );
	deepEqual( Stem("sjelfvaste"), "sjelfv" );
	deepEqual( Stem("sjette"), "sjett" );
	deepEqual( Stem("sjiilv"), "sjiilv" );
	deepEqual( Stem("sjll"), "sjll" );
	deepEqual( Stem("sjmlga"), "sjmlga" );
	deepEqual( Stem("sjongo"), "sjongo" );
	deepEqual( Stem("sjonk"), "sjonk" );
	deepEqual( Stem("sjtik"), "sjtik" );
	deepEqual( Stem("sju"), "sju" );
	deepEqual( Stem("sjuda"), "sjud" );
	deepEqual( Stem("sjudande"), "sjud" );
	deepEqual( Stem("sjugare"), "sjug" );
	deepEqual( Stem("sjuhundrade"), "sjuhundr" );
	deepEqual( Stem("sjuk"), "sjuk" );
	deepEqual( Stem("sjuka"), "sjuk" );
	deepEqual( Stem("sjukbesök"), "sjukbesök" );
	deepEqual( Stem("sjukbädd"), "sjukbäd" );
	deepEqual( Stem("sjukdom"), "sjukdom" );
	deepEqual( Stem("sjukdomar"), "sjukdom" );
	deepEqual( Stem("sjukdomen"), "sjukdom" );
	deepEqual( Stem("sjukdomens"), "sjukdom" );
	deepEqual( Stem("sjukdomsfall"), "sjukdomsfall" );
	deepEqual( Stem("sjukdomsmörkret"), "sjukdomsmörkret" );
	deepEqual( Stem("sjuke"), "sjuk" );
	deepEqual( Stem("sjukes"), "sjuk" );
	deepEqual( Stem("sjukhem"), "sjukhem" );
	deepEqual( Stem("sjukhemmet"), "sjukhemmet" );
	deepEqual( Stem("sjukhus"), "sjukhus" );
	deepEqual( Stem("sjuklig"), "sjuk" );
	deepEqual( Stem("sjukliga"), "sjuk" );
	deepEqual( Stem("sjuklige"), "sjuk" );
	deepEqual( Stem("sjuklighet"), "sjuk" );
	deepEqual( Stem("sjukling"), "sjukling" );
	deepEqual( Stem("sjuklingen"), "sjukling" );
	deepEqual( Stem("sjuklägret"), "sjuklägret" );
	deepEqual( Stem("sjuknade"), "sjukn" );
	deepEqual( Stem("sjuknat"), "sjukn" );
	deepEqual( Stem("sjukroll"), "sjukroll" );
	deepEqual( Stem("sjukrummet"), "sjukrummet" );
	deepEqual( Stem("sjuksköterska"), "sjukskötersk" );
	deepEqual( Stem("sjuksköterskan"), "sjuksköterskan" );
	deepEqual( Stem("sjuksköterskeelev"), "sjuksköterskeelev" );
	deepEqual( Stem("sjuksystern"), "sjuksyst" );
	deepEqual( Stem("sjuksäng"), "sjuksäng" );
	deepEqual( Stem("sjukt"), "sjukt" );
	deepEqual( Stem("sjukvård"), "sjukvård" );
	deepEqual( Stem("sjunde"), "sjund" );
	deepEqual( Stem("sjung"), "sjung" );
	deepEqual( Stem("sjunga"), "sjung" );
	deepEqual( Stem("sjungande"), "sjung" );
	deepEqual( Stem("sjungandes"), "sjung" );
	deepEqual( Stem("sjunge"), "sjung" );
	deepEqual( Stem("sjunger"), "sjung" );
	deepEqual( Stem("sjunges"), "sjung" );
	deepEqual( Stem("sjungit"), "sjungit" );
	deepEqual( Stem("sjunka"), "sjunk" );
	deepEqual( Stem("sjunkandct"), "sjunkandct" );
	deepEqual( Stem("sjunkande"), "sjunk" );
	deepEqual( Stem("sjunken"), "sjunk" );
	deepEqual( Stem("sjunker"), "sjunk" );
	deepEqual( Stem("sjunket"), "sjunket" );
	deepEqual( Stem("sjunkit"), "sjunkit" );
	deepEqual( Stem("sjuttio"), "sjuttio" );
	deepEqual( Stem("sjutton"), "sjutton" );
	deepEqual( Stem("sjuttonarig"), "sjuttonar" );
	deepEqual( Stem("sjuttonariga"), "sjuttonar" );
	deepEqual( Stem("sjuttonaring"), "sjuttonaring" );
	deepEqual( Stem("sjuttonde"), "sjuttond" );
	deepEqual( Stem("sjuttonhundratalet"), "sjuttonhundratalet" );
	deepEqual( Stem("sjuårig"), "sjuår" );
	deepEqual( Stem("sjuårigt"), "sjuår" );
	deepEqual( Stem("sjä"), "sjä" );
	deepEqual( Stem("sjäiv"), "sjäiv" );
	deepEqual( Stem("själ"), "själ" );
	deepEqual( Stem("själafrände"), "själafränd" );
	deepEqual( Stem("själar"), "själ" );
	deepEqual( Stem("själarna"), "själ" );
	deepEqual( Stem("själarne"), "själ" );
	deepEqual( Stem("själars"), "själar" );
	deepEqual( Stem("själasörjare"), "själasörj" );
	deepEqual( Stem("själen"), "själ" );
	deepEqual( Stem("själens"), "själ" );
	deepEqual( Stem("själft"), "själft" );
	deepEqual( Stem("själfulla"), "själfull" );
	deepEqual( Stem("själs"), "själ" );
	deepEqual( Stem("själslidanden"), "själslid" );
	deepEqual( Stem("själsläkekonstnärerna"), "själsläkekonstnär" );
	deepEqual( Stem("själsnärvaro"), "själsnärvaro" );
	deepEqual( Stem("själsstrid"), "själsstrid" );
	deepEqual( Stem("själsstyrka"), "själsstyrk" );
	deepEqual( Stem("själv"), "själv" );
	deepEqual( Stem("själva"), "själv" );
	deepEqual( Stem("självaste"), "själv" );
	deepEqual( Stem("självbe"), "självb" );
	deepEqual( Stem("självbehärskning"), "självbehärskning" );
	deepEqual( Stem("självbelåtna"), "självbelåtn" );
	deepEqual( Stem("självbelåtne"), "självbelåtn" );
	deepEqual( Stem("självdyrkan"), "självdyrkan" );
	deepEqual( Stem("självförakt"), "självförak" );
	deepEqual( Stem("självförebråelse"), "självförebrå" );
	deepEqual( Stem("självförtroende"), "självförtroend" );
	deepEqual( Stem("självförtröstan"), "självförtröstan" );
	deepEqual( Stem("självförvärvd"), "självförvärvd" );
	deepEqual( Stem("själviska"), "självisk" );
	deepEqual( Stem("själviskhet"), "självisk" );
	deepEqual( Stem("självklart"), "självklart" );
	deepEqual( Stem("självmant"), "självmant" );
	deepEqual( Stem("självmedveten"), "självmedvet" );
	deepEqual( Stem("självmord"), "självmord" );
	deepEqual( Stem("självmordstankar"), "självmordstank" );
	deepEqual( Stem("självrådig"), "självråd" );
	deepEqual( Stem("självsvåldigt"), "självsvåld" );
	deepEqual( Stem("självsäker"), "självsäk" );
	deepEqual( Stem("självt"), "självt" );
	deepEqual( Stem("sjätte"), "sjätt" );
	deepEqual( Stem("sjålv"), "sjålv" );
	deepEqual( Stem("sjålva"), "sjålv" );
	deepEqual( Stem("sjö"), "sjö" );
	deepEqual( Stem("sjöar"), "sjöar" );
	deepEqual( Stem("sjöberg"), "sjöberg" );
	deepEqual( Stem("sjöbodarne"), "sjöbod" );
	deepEqual( Stem("sjöboden"), "sjöbod" );
	deepEqual( Stem("sjöbottnen"), "sjöbottn" );
	deepEqual( Stem("sjöbussen"), "sjöbuss" );
	deepEqual( Stem("sjöd"), "sjöd" );
	deepEqual( Stem("sjöfarande"), "sjöfar" );
	deepEqual( Stem("sjöfarare"), "sjöfar" );
	deepEqual( Stem("sjöfoglar"), "sjöfogl" );
	deepEqual( Stem("sjöfoglarne"), "sjöfogl" );
	deepEqual( Stem("sjöfåglarne"), "sjöfågl" );
	deepEqual( Stem("sjöförklaring"), "sjöförklaring" );
	deepEqual( Stem("sjögräs"), "sjögräs" );
	deepEqual( Stem("sjögräset"), "sjögräset" );
	deepEqual( Stem("sjögrönt"), "sjögrönt" );
	deepEqual( Stem("sjögången"), "sjögång" );
	deepEqual( Stem("sjöhistorier"), "sjöhistori" );
	deepEqual( Stem("sjöhistorierna"), "sjöhistori" );
	deepEqual( Stem("sjöluften"), "sjöluft" );
	deepEqual( Stem("sjöman"), "sjöman" );
	deepEqual( Stem("sjömannen"), "sjöman" );
	deepEqual( Stem("sjömannens"), "sjöman" );
	deepEqual( Stem("sjömans"), "sjöman" );
	deepEqual( Stem("sjömansgosse"), "sjömansgoss" );
	deepEqual( Stem("sjömanskavaj"), "sjömanskavaj" );
	deepEqual( Stem("sjömanskostym"), "sjömanskostym" );
	deepEqual( Stem("sjömanssjälen"), "sjömanssjäl" );
	deepEqual( Stem("sjömän"), "sjömän" );
	deepEqual( Stem("sjömännen"), "sjömän" );
	deepEqual( Stem("sjön"), "sjön" );
	deepEqual( Stem("sjöng"), "sjöng" );
	deepEqual( Stem("sjöngo"), "sjöngo" );
	deepEqual( Stem("sjönk"), "sjönk" );
	deepEqual( Stem("sjönko"), "sjönko" );
	deepEqual( Stem("sjöns"), "sjön" );
	deepEqual( Stem("sjöröfvaren"), "sjöröfv" );
	deepEqual( Stem("sjöröfvarn"), "sjöröfvarn" );
	deepEqual( Stem("sjös"), "sjös" );
	deepEqual( Stem("sjösjuka"), "sjösjuk" );
	deepEqual( Stem("sjöskumspipa"), "sjöskumspip" );
	deepEqual( Stem("sjöslag"), "sjöslag" );
	deepEqual( Stem("sjöstranden"), "sjöstr" );
	deepEqual( Stem("sjötullstaxan"), "sjötullstaxan" );
	deepEqual( Stem("sjötungsfilet"), "sjötungsfilet" );
	deepEqual( Stem("sjöväsendet"), "sjöväsendet" );
	deepEqual( Stem("sk"), "sk" );
	deepEqual( Stem("ska"), "ska" );
	deepEqual( Stem("skacklorna"), "skackl" );
	deepEqual( Stem("skada"), "skad" );
	deepEqual( Stem("skadad"), "skad" );
	deepEqual( Stem("skadade"), "skad" );
	deepEqual( Stem("skadan"), "skadan" );
	deepEqual( Stem("skadar"), "skad" );
	deepEqual( Stem("skadat"), "skad" );
	deepEqual( Stem("skade"), "skad" );
	deepEqual( Stem("skadeersättning"), "skadeersättning" );
	deepEqual( Stem("skadeglatt"), "skadeglat" );
	deepEqual( Stem("skadeglädje"), "skadeglädj" );
	deepEqual( Stem("skadeglädjen"), "skadeglädj" );
	deepEqual( Stem("skadegöraren"), "skadegör" );
	deepEqual( Stem("skadespelet"), "skadespelet" );
	deepEqual( Stem("skadlig"), "skad" );
	deepEqual( Stem("skadligare"), "skad" );
	deepEqual( Stem("skadlighet"), "skad" );
	deepEqual( Stem("skadligt"), "skad" );
	deepEqual( Stem("skaf"), "skaf" );
	deepEqual( Stem("skaffa"), "skaff" );
	deepEqual( Stem("skaffade"), "skaff" );
	deepEqual( Stem("skaffar"), "skaff" );
	deepEqual( Stem("skaffat"), "skaff" );
	deepEqual( Stem("skafferiet"), "skafferiet" );
	deepEqual( Stem("skaft"), "skaft" );
	deepEqual( Stem("skaftet"), "skaftet" );
	deepEqual( Stem("skaftig"), "skaft" );
	deepEqual( Stem("skageraks"), "skagerak" );
	deepEqual( Stem("skaji"), "skaji" );
	deepEqual( Stem("skaka"), "skak" );
	deepEqual( Stem("skakad"), "skak" );
	deepEqual( Stem("skakade"), "skak" );
	deepEqual( Stem("skakades"), "skak" );
	deepEqual( Stem("skakande"), "skak" );
	deepEqual( Stem("skakar"), "skak" );
	deepEqual( Stem("skakas"), "skak" );
	deepEqual( Stem("skakat"), "skak" );
	deepEqual( Stem("skakning"), "skakning" );
	deepEqual( Stem("skakningar"), "skakning" );
	deepEqual( Stem("skakningen"), "skakning" );
	deepEqual( Stem("skal"), "skal" );
	deepEqual( Stem("skala"), "skal" );
	deepEqual( Stem("skald"), "skald" );
	deepEqual( Stem("skaldernas"), "skald" );
	deepEqual( Stem("skalds"), "skald" );
	deepEqual( Stem("skalen"), "skal" );
	deepEqual( Stem("skalet"), "skalet" );
	deepEqual( Stem("skall"), "skall" );
	deepEqual( Stem("skallade"), "skall" );
	deepEqual( Stem("skallande"), "skall" );
	deepEqual( Stem("skallar"), "skall" );
	deepEqual( Stem("skallarna"), "skall" );
	deepEqual( Stem("skalle"), "skall" );
	deepEqual( Stem("skallet"), "skallet" );
	deepEqual( Stem("skalv"), "skalv" );
	deepEqual( Stem("skam"), "skam" );
	deepEqual( Stem("skamliga"), "skam" );
	deepEqual( Stem("skamlös"), "skamlös" );
	deepEqual( Stem("skamlöst"), "skamlös" );
	deepEqual( Stem("skammen"), "skamm" );
	deepEqual( Stem("skamrodnaden"), "skamrodnad" );
	deepEqual( Stem("skams"), "skam" );
	deepEqual( Stem("skamsen"), "skams" );
	deepEqual( Stem("skamsna"), "skamsn" );
	deepEqual( Stem("skan"), "skan" );
	deepEqual( Stem("skandal"), "skandal" );
	deepEqual( Stem("skandalen"), "skandal" );
	deepEqual( Stem("skandalhistoria"), "skandalhistori" );
	deepEqual( Stem("skande"), "skand" );
	deepEqual( Stem("skanklad"), "skankl" );
	deepEqual( Stem("skapa"), "skap" );
	deepEqual( Stem("skapad"), "skap" );
	deepEqual( Stem("skapade"), "skap" );
	deepEqual( Stem("skapar"), "skap" );
	deepEqual( Stem("skapare"), "skap" );
	deepEqual( Stem("skapat"), "skap" );
	deepEqual( Stem("skapelse"), "skap" );
	deepEqual( Stem("skapelsens"), "skap" );
	deepEqual( Stem("skaplingar"), "skapling" );
	deepEqual( Stem("skapnad"), "skapn" );
	deepEqual( Stem("skapnaden"), "skapnad" );
	deepEqual( Stem("skapt"), "skapt" );
	deepEqual( Stem("skapta"), "skapt" );
	deepEqual( Stem("skar"), "skar" );
	deepEqual( Stem("skara"), "skar" );
	deepEqual( Stem("skaran"), "skaran" );
	deepEqual( Stem("skarens"), "skar" );
	deepEqual( Stem("skaror"), "skar" );
	deepEqual( Stem("skarp"), "skarp" );
	deepEqual( Stem("skarpa"), "skarp" );
	deepEqual( Stem("skarpare"), "skarp" );
	deepEqual( Stem("skarpaste"), "skarp" );
	deepEqual( Stem("skarpen"), "skarp" );
	deepEqual( Stem("skarpsinne"), "skarpsin" );
	deepEqual( Stem("skarpsinnig"), "skarpsinn" );
	deepEqual( Stem("skarpsinnighet"), "skarpsinn" );
	deepEqual( Stem("skarpslipade"), "skarpslip" );
	deepEqual( Stem("skarpsynt"), "skarpsynt" );
	deepEqual( Stem("skarpsynta"), "skarpsynt" );
	deepEqual( Stem("skarpsyntare"), "skarpsynt" );
	deepEqual( Stem("skarpsynthet"), "skarpsynt" );
	deepEqual( Stem("skarpt"), "skarpt" );
	deepEqual( Stem("skatbos"), "skatbo" );
	deepEqual( Stem("skatt"), "skatt" );
	deepEqual( Stem("skatta"), "skatt" );
	deepEqual( Stem("skattade"), "skatt" );
	deepEqual( Stem("skattande"), "skatt" );
	deepEqual( Stem("skattar"), "skatt" );
	deepEqual( Stem("skatter"), "skatt" );
	deepEqual( Stem("skatterna"), "skatt" );
	deepEqual( Stem("skattkammaren"), "skattkamm" );
	deepEqual( Stem("skavanker"), "skavank" );
	deepEqual( Stem("skavde"), "skavd" );
	deepEqual( Stem("skavit"), "skavit" );
	deepEqual( Stem("ske"), "ske" );
	deepEqual( Stem("skedde"), "skedd" );
	deepEqual( Stem("skeden"), "sked" );
	deepEqual( Stem("skelett"), "skelet" );
	deepEqual( Stem("skelettet"), "skelettet" );
	deepEqual( Stem("sken"), "sken" );
	deepEqual( Stem("skenar"), "sken" );
	deepEqual( Stem("skenbarligen"), "skenbar" );
	deepEqual( Stem("skenbart"), "skenbart" );
	deepEqual( Stem("skenet"), "skenet" );
	deepEqual( Stem("skenhelig"), "skenhe" );
	deepEqual( Stem("skenheliga"), "skenhe" );
	deepEqual( Stem("skenliv"), "skenliv" );
	deepEqual( Stem("skeno"), "skeno" );
	deepEqual( Stem("skenorna"), "sken" );
	deepEqual( Stem("skepelse"), "skep" );
	deepEqual( Stem("skepelsen"), "skep" );
	deepEqual( Stem("skepnad"), "skepn" );
	deepEqual( Stem("skepnaden"), "skepnad" );
	deepEqual( Stem("skepnadendet"), "skepnadendet" );
	deepEqual( Stem("skepnader"), "skepnad" );
	deepEqual( Stem("skepp"), "skepp" );
	deepEqual( Stem("skeppare"), "skepp" );
	deepEqual( Stem("skepparens"), "skepp" );
	deepEqual( Stem("skeppares"), "skeppar" );
	deepEqual( Stem("skepparhistorier"), "skepparhistori" );
	deepEqual( Stem("skeppen"), "skepp" );
	deepEqual( Stem("skeppet"), "skeppet" );
	deepEqual( Stem("skepps"), "skepp" );
	deepEqual( Stem("skeppsbron"), "skeppsbron" );
	deepEqual( Stem("skeppsbrott"), "skeppsbrot" );
	deepEqual( Stem("skeppsbrotten"), "skeppsbrot" );
	deepEqual( Stem("skeppsbruten"), "skeppsbrut" );
	deepEqual( Stem("skeppsbrutne"), "skeppsbrutn" );
	deepEqual( Stem("skeppsgossen"), "skeppsgoss" );
	deepEqual( Stem("skeppsgossens"), "skeppsgoss" );
	deepEqual( Stem("skeppsholmen"), "skeppsholm" );
	deepEqual( Stem("skeppsordningen"), "skeppsordning" );
	deepEqual( Stem("skeppsstolarne"), "skeppsstol" );
	deepEqual( Stem("skeptiskt"), "skeptisk" );
	deepEqual( Stem("sker"), "sker" );
	deepEqual( Stem("skett"), "skett" );
	deepEqual( Stem("skeva"), "skev" );
	deepEqual( Stem("skevt"), "skevt" );
	deepEqual( Stem("skhnrande"), "skhnrand" );
	deepEqual( Stem("skick"), "skick" );
	deepEqual( Stem("skicka"), "skick" );
	deepEqual( Stem("skickade"), "skick" );
	deepEqual( Stem("skickades"), "skick" );
	deepEqual( Stem("skickande"), "skick" );
	deepEqual( Stem("skickar"), "skick" );
	deepEqual( Stem("skickat"), "skick" );
	deepEqual( Stem("skickelse"), "skick" );
	deepEqual( Stem("skickelsen"), "skick" );
	deepEqual( Stem("skicklig"), "skick" );
	deepEqual( Stem("skickliga"), "skick" );
	deepEqual( Stem("skickligaste"), "skick" );
	deepEqual( Stem("skicklighet"), "skick" );
	deepEqual( Stem("skickligheten"), "skick" );
	deepEqual( Stem("skickligt"), "skick" );
	deepEqual( Stem("skidor"), "skid" );
	deepEqual( Stem("skifta"), "skift" );
	deepEqual( Stem("skiftade"), "skift" );
	deepEqual( Stem("skiftande"), "skift" );
	deepEqual( Stem("skiftar"), "skift" );
	deepEqual( Stem("skiften"), "skift" );
	deepEqual( Stem("skiftningen"), "skiftning" );
	deepEqual( Stem("skifvan"), "skifvan" );
	deepEqual( Stem("skild"), "skild" );
	deepEqual( Stem("skilda"), "skild" );
	deepEqual( Stem("skildcs"), "skildc" );
	deepEqual( Stem("skilde"), "skild" );
	deepEqual( Stem("skildes"), "skild" );
	deepEqual( Stem("skildra"), "skildr" );
	deepEqual( Stem("skildrade"), "skildr" );
	deepEqual( Stem("skildringar"), "skildring" );
	deepEqual( Stem("skildringen"), "skildring" );
	deepEqual( Stem("skildt"), "skild" );
	deepEqual( Stem("skilja"), "skilj" );
	deepEqual( Stem("skiljas"), "skilj" );
	deepEqual( Stem("skiljer"), "skilj" );
	deepEqual( Stem("skiljes"), "skilj" );
	deepEqual( Stem("skiljobrevet"), "skiljobrevet" );
	deepEqual( Stem("skilling"), "skilling" );
	deepEqual( Stem("skillnad"), "skilln" );
	deepEqual( Stem("skillnaden"), "skillnad" );
	deepEqual( Stem("skilnad"), "skiln" );
	deepEqual( Stem("skilsmessa"), "skilsmess" );
	deepEqual( Stem("skilsmessan"), "skilsmessan" );
	deepEqual( Stem("skilsmässa"), "skilsmäss" );
	deepEqual( Stem("skilsmässan"), "skilsmässan" );
	deepEqual( Stem("skilt"), "skilt" );
	deepEqual( Stem("skimmer"), "skimm" );
	deepEqual( Stem("skimra"), "skimr" );
	deepEqual( Stem("skimrade"), "skimr" );
	deepEqual( Stem("skimrande"), "skimr" );
	deepEqual( Stem("skimrar"), "skimr" );
	deepEqual( Stem("skin"), "skin" );
	deepEqual( Stem("skina"), "skin" );
	deepEqual( Stem("skinande"), "skin" );
	deepEqual( Stem("skiner"), "skin" );
	deepEqual( Stem("skingra"), "skingr" );
	deepEqual( Stem("skingrades"), "skingr" );
	deepEqual( Stem("skingras"), "skingr" );
	deepEqual( Stem("skinka"), "skink" );
	deepEqual( Stem("skinliga"), "skin" );
	deepEqual( Stem("skinn"), "skinn" );
	deepEqual( Stem("skinnband"), "skinnband" );
	deepEqual( Stem("skinnen"), "skinn" );
	deepEqual( Stem("skinnet"), "skinnet" );
	deepEqual( Stem("skinnfoder"), "skinnfod" );
	deepEqual( Stem("skinnfällar"), "skinnfäll" );
	deepEqual( Stem("skinnklädd"), "skinnkläd" );
	deepEqual( Stem("skinnmadrassen"), "skinnmadrass" );
	deepEqual( Stem("skinnmössa"), "skinnmöss" );
	deepEqual( Stem("skinnskoffert"), "skinnskoffert" );
	deepEqual( Stem("skinnstol"), "skinnstol" );
	deepEqual( Stem("skinnstolar"), "skinnstol" );
	deepEqual( Stem("skinnstolen"), "skinnstol" );
	deepEqual( Stem("skinntorra"), "skinntorr" );
	deepEqual( Stem("skira"), "skir" );
	deepEqual( Stem("skiss"), "skiss" );
	deepEqual( Stem("skiva"), "skiv" );
	deepEqual( Stem("skivan"), "skivan" );
	deepEqual( Stem("skivorna"), "skiv" );
	deepEqual( Stem("skjorta"), "skjort" );
	deepEqual( Stem("skjortan"), "skjortan" );
	deepEqual( Stem("skjortbröst"), "skjortbröst" );
	deepEqual( Stem("skjortkragen"), "skjortkrag" );
	deepEqual( Stem("skjortor"), "skjort" );
	deepEqual( Stem("skjortsöm"), "skjortsöm" );
	deepEqual( Stem("skjortärmarna"), "skjortärm" );
	deepEqual( Stem("skjortärmarne"), "skjortärm" );
	deepEqual( Stem("skjul"), "skjul" );
	deepEqual( Stem("skjut"), "skjut" );
	deepEqual( Stem("skjuta"), "skjut" );
	deepEqual( Stem("skjuten"), "skjut" );
	deepEqual( Stem("skjuter"), "skjut" );
	deepEqual( Stem("skjutfönstret"), "skjutfönstret" );
	deepEqual( Stem("skjutit"), "skjutit" );
	deepEqual( Stem("skjuts"), "skjut" );
	deepEqual( Stem("skjutsa"), "skjuts" );
	deepEqual( Stem("skjutsbonde"), "skjutsbond" );
	deepEqual( Stem("skjutsbondens"), "skjutsbond" );
	deepEqual( Stem("skjutsen"), "skjuts" );
	deepEqual( Stem("skjutsens"), "skjuts" );
	deepEqual( Stem("sknlle"), "sknlle" );
	deepEqual( Stem("sko"), "sko" );
	deepEqual( Stem("skoband"), "skoband" );
	deepEqual( Stem("skock"), "skock" );
	deepEqual( Stem("skocka"), "skock" );
	deepEqual( Stem("skockade"), "skock" );
	deepEqual( Stem("skockades"), "skock" );
	deepEqual( Stem("skockar"), "skock" );
	deepEqual( Stem("skockat"), "skock" );
	deepEqual( Stem("skocken"), "skock" );
	deepEqual( Stem("skog"), "skog" );
	deepEqual( Stem("skogar"), "skog" );
	deepEqual( Stem("skogarna"), "skog" );
	deepEqual( Stem("skogarnas"), "skog" );
	deepEqual( Stem("skogen"), "skog" );
	deepEqual( Stem("skogens"), "skog" );
	deepEqual( Stem("skogig"), "skog" );
	deepEqual( Stem("skogsdungens"), "skogsdung" );
	deepEqual( Stem("skogsdunklet"), "skogsdunklet" );
	deepEqual( Stem("skogsfrun"), "skogsfrun" );
	deepEqual( Stem("skogskuliss"), "skogskuliss" );
	deepEqual( Stem("skogssidan"), "skogssidan" );
	deepEqual( Stem("skogssluttningen"), "skogssluttning" );
	deepEqual( Stem("skogsstigen"), "skogsst" );
	deepEqual( Stem("skogsstigens"), "skogsst" );
	deepEqual( Stem("skogsström"), "skogsström" );
	deepEqual( Stem("skogstjärn"), "skogstjärn" );
	deepEqual( Stem("skoj"), "skoj" );
	deepEqual( Stem("skoja"), "skoj" );
	deepEqual( Stem("skojare"), "skoj" );
	deepEqual( Stem("skol"), "skol" );
	deepEqual( Stem("skola"), "skol" );
	deepEqual( Stem("skolan"), "skolan" );
	deepEqual( Stem("skolans"), "skolan" );
	deepEqual( Stem("skolas"), "skol" );
	deepEqual( Stem("skolbarn"), "skolbarn" );
	deepEqual( Stem("skolböckerna"), "skolböck" );
	deepEqual( Stem("skolen"), "skol" );
	deepEqual( Stem("skolflicka"), "skolflick" );
	deepEqual( Stem("skolflickan"), "skolflickan" );
	deepEqual( Stem("skolflickorna"), "skolflick" );
	deepEqual( Stem("skolföreståndarinnan"), "skolföreståndarinnan" );
	deepEqual( Stem("skolgossarna"), "skolgoss" );
	deepEqual( Stem("skolgossens"), "skolgoss" );
	deepEqual( Stem("skolgosses"), "skolgoss" );
	deepEqual( Stem("skolgården"), "skolgård" );
	deepEqual( Stem("skolhuset"), "skolhuset" );
	deepEqual( Stem("skolkamrater"), "skolkamrat" );
	deepEqual( Stem("skolkar"), "skolk" );
	deepEqual( Stem("skolklockan"), "skolklockan" );
	deepEqual( Stem("skolläraren"), "skollär" );
	deepEqual( Stem("skolmamsell"), "skolmamsell" );
	deepEqual( Stem("skolpojke"), "skolpojk" );
	deepEqual( Stem("skolpojkslivets"), "skolpojkslivet" );
	deepEqual( Stem("skolpojkssättet"), "skolpojkssättet" );
	deepEqual( Stem("skolrummet"), "skolrummet" );
	deepEqual( Stem("skolsalen"), "skolsal" );
	deepEqual( Stem("skolsalens"), "skolsal" );
	deepEqual( Stem("skoltid"), "skoltid" );
	deepEqual( Stem("skoltiden"), "skoltid" );
	deepEqual( Stem("skomakare"), "skomak" );
	deepEqual( Stem("skon"), "skon" );
	deepEqual( Stem("skona"), "skon" );
	deepEqual( Stem("skonande"), "skon" );
	deepEqual( Stem("skonare"), "skon" );
	deepEqual( Stem("skonarn"), "skonarn" );
	deepEqual( Stem("skonerten"), "skonert" );
	deepEqual( Stem("skonsamt"), "skonsamt" );
	deepEqual( Stem("skor"), "skor" );
	deepEqual( Stem("skorna"), "skorn" );
	deepEqual( Stem("skorpor"), "skorp" );
	deepEqual( Stem("skorporna"), "skorp" );
	deepEqual( Stem("skorrande"), "skorr" );
	deepEqual( Stem("skorrning"), "skorrning" );
	deepEqual( Stem("skorsten"), "skorst" );
	deepEqual( Stem("skorstenar"), "skorsten" );
	deepEqual( Stem("skorstenen"), "skorsten" );
	deepEqual( Stem("skorstensfejaren"), "skorstensfej" );
	deepEqual( Stem("skosmörja"), "skosmörj" );
	deepEqual( Stem("skota"), "skot" );
	deepEqual( Stem("skote"), "skot" );
	deepEqual( Stem("skotet"), "skotet" );
	deepEqual( Stem("skott"), "skott" );
	deepEqual( Stem("skottet"), "skottet" );
	deepEqual( Stem("skottkärran"), "skottkärran" );
	deepEqual( Stem("skrackelse"), "skrack" );
	deepEqual( Stem("skral"), "skral" );
	deepEqual( Stem("skraltiga"), "skralt" );
	deepEqual( Stem("skramd"), "skramd" );
	deepEqual( Stem("skramla"), "skraml" );
	deepEqual( Stem("skramlade"), "skraml" );
	deepEqual( Stem("skramlande"), "skraml" );
	deepEqual( Stem("skrammel"), "skrammel" );
	deepEqual( Stem("skrankor"), "skrank" );
	deepEqual( Stem("skrap"), "skrap" );
	deepEqual( Stem("skrapa"), "skrap" );
	deepEqual( Stem("skrapade"), "skrap" );
	deepEqual( Stem("skrapande"), "skrap" );
	deepEqual( Stem("skrapat"), "skrap" );
	deepEqual( Stem("skrapet"), "skrapet" );
	deepEqual( Stem("skrapning"), "skrapning" );
	deepEqual( Stem("skratt"), "skratt" );
	deepEqual( Stem("skratta"), "skratt" );
	deepEqual( Stem("skrattade"), "skratt" );
	deepEqual( Stem("skrattande"), "skratt" );
	deepEqual( Stem("skrattar"), "skratt" );
	deepEqual( Stem("skrattat"), "skratt" );
	deepEqual( Stem("skrattet"), "skrattet" );
	deepEqual( Stem("skrattlust"), "skrattlust" );
	deepEqual( Stem("skrattretande"), "skrattret" );
	deepEqual( Stem("skrattsalva"), "skrattsalv" );
	deepEqual( Stem("skrattsalvor"), "skrattsalv" );
	deepEqual( Stem("skred"), "skred" );
	deepEqual( Stem("skref"), "skref" );
	deepEqual( Stem("skrek"), "skrek" );
	deepEqual( Stem("skreko"), "skreko" );
	deepEqual( Stem("skrev"), "skrev" );
	deepEqual( Stem("skreve"), "skrev" );
	deepEqual( Stem("skrevo"), "skrevo" );
	deepEqual( Stem("skrevor"), "skrev" );
	deepEqual( Stem("skri"), "skri" );
	deepEqual( Stem("skria"), "skria" );
	deepEqual( Stem("skriden"), "skrid" );
	deepEqual( Stem("skrider"), "skrid" );
	deepEqual( Stem("skridit"), "skridit" );
	deepEqual( Stem("skrifning"), "skrifning" );
	deepEqual( Stem("skrifpulpet"), "skrifpulpet" );
	deepEqual( Stem("skrift"), "skrift" );
	deepEqual( Stem("skriften"), "skrift" );
	deepEqual( Stem("skriftens"), "skrift" );
	deepEqual( Stem("skrifter"), "skrift" );
	deepEqual( Stem("skriftligen"), "skrift" );
	deepEqual( Stem("skriftligt"), "skrift" );
	deepEqual( Stem("skrifttecken"), "skriftteck" );
	deepEqual( Stem("skrifva"), "skrifv" );
	deepEqual( Stem("skrifvare"), "skrifv" );
	deepEqual( Stem("skrifvarn"), "skrifvarn" );
	deepEqual( Stem("skrifver"), "skrifv" );
	deepEqual( Stem("skrifvet"), "skrifvet" );
	deepEqual( Stem("skrifvit"), "skrifvit" );
	deepEqual( Stem("skrik"), "skrik" );
	deepEqual( Stem("skrika"), "skrik" );
	deepEqual( Stem("skrikande"), "skrik" );
	deepEqual( Stem("skriken"), "skrik" );
	deepEqual( Stem("skriker"), "skrik" );
	deepEqual( Stem("skriket"), "skriket" );
	deepEqual( Stem("skrikig"), "skrik" );
	deepEqual( Stem("skrikit"), "skrikit" );
	deepEqual( Stem("skritt"), "skritt" );
	deepEqual( Stem("skriv"), "skriv" );
	deepEqual( Stem("skriva"), "skriv" );
	deepEqual( Stem("skrivarens"), "skriv" );
	deepEqual( Stem("skrivas"), "skriv" );
	deepEqual( Stem("skrivbord"), "skrivbord" );
	deepEqual( Stem("skrivbordet"), "skrivbordet" );
	deepEqual( Stem("skrivelse"), "skriv" );
	deepEqual( Stem("skrivelsen"), "skriv" );
	deepEqual( Stem("skriven"), "skriv" );
	deepEqual( Stem("skriver"), "skriv" );
	deepEqual( Stem("skrivet"), "skrivet" );
	deepEqual( Stem("skrivit"), "skrivit" );
	deepEqual( Stem("skrivits"), "skrivit" );
	deepEqual( Stem("skrivkonsten"), "skrivkonst" );
	deepEqual( Stem("skrivmaterialer"), "skrivmaterial" );
	deepEqual( Stem("skrivna"), "skrivn" );
	deepEqual( Stem("skrivning"), "skrivning" );
	deepEqual( Stem("skrivpulpet"), "skrivpulpet" );
	deepEqual( Stem("skrivpulpeten"), "skrivpulpet" );
	deepEqual( Stem("skrivrum"), "skrivrum" );
	deepEqual( Stem("skrockande"), "skrock" );
	deepEqual( Stem("skrockfull"), "skrockfull" );
	deepEqual( Stem("skrodör"), "skrodör" );
	deepEqual( Stem("skrofliga"), "skrof" );
	deepEqual( Stem("skrofvets"), "skrofvet" );
	deepEqual( Stem("skrot"), "skrot" );
	deepEqual( Stem("skrovlig"), "skrov" );
	deepEqual( Stem("skrovliga"), "skrov" );
	deepEqual( Stem("skrubb"), "skrubb" );
	deepEqual( Stem("skrubba"), "skrubb" );
	deepEqual( Stem("skruden"), "skrud" );
	deepEqual( Stem("skrumpet"), "skrumpet" );
	deepEqual( Stem("skrumpnad"), "skrumpn" );
	deepEqual( Stem("skrumpnade"), "skrumpn" );
	deepEqual( Stem("skrupler"), "skrupl" );
	deepEqual( Stem("skruv"), "skruv" );
	deepEqual( Stem("skruvade"), "skruv" );
	deepEqual( Stem("skruvades"), "skruv" );
	deepEqual( Stem("skruven"), "skruv" );
	deepEqual( Stem("skrymtar"), "skrymt" );
	deepEqual( Stem("skrymtare"), "skrymt" );
	deepEqual( Stem("skrynkla"), "skrynkl" );
	deepEqual( Stem("skrynklade"), "skrynkl" );
	deepEqual( Stem("skrynklat"), "skrynkl" );
	deepEqual( Stem("skrynklig"), "skrynk" );
	deepEqual( Stem("skrynkliga"), "skrynk" );
	deepEqual( Stem("skryt"), "skryt" );
	deepEqual( Stem("skryta"), "skryt" );
	deepEqual( Stem("skrytsamhet"), "skrytsam" );
	deepEqual( Stem("skräck"), "skräck" );
	deepEqual( Stem("skräckblandad"), "skräckbland" );
	deepEqual( Stem("skräckfulla"), "skräckfull" );
	deepEqual( Stem("skräckinjagandc"), "skräckinjagandc" );
	deepEqual( Stem("skräckinjagande"), "skräckinjag" );
	deepEqual( Stem("skräddare"), "skrädd" );
	deepEqual( Stem("skräddarräkningen"), "skräddarräkning" );
	deepEqual( Stem("skräll"), "skräll" );
	deepEqual( Stem("skrällde"), "skrälld" );
	deepEqual( Stem("skrämd"), "skrämd" );
	deepEqual( Stem("skrämda"), "skrämd" );
	deepEqual( Stem("skrämde"), "skrämd" );
	deepEqual( Stem("skrämma"), "skrämm" );
	deepEqual( Stem("skrämmande"), "skrämm" );
	deepEqual( Stem("skrämmas"), "skrämm" );
	deepEqual( Stem("skrämmer"), "skrämm" );
	deepEqual( Stem("skrämsel"), "skrämsel" );
	deepEqual( Stem("skrämseln"), "skrämseln" );
	deepEqual( Stem("skrämt"), "skrämt" );
	deepEqual( Stem("skränets"), "skränet" );
	deepEqual( Stem("skränpatriotisk"), "skränpatriotisk" );
	deepEqual( Stem("skräp"), "skräp" );
	deepEqual( Stem("skräpa"), "skräp" );
	deepEqual( Stem("skräpet"), "skräpet" );
	deepEqual( Stem("skräpiga"), "skräp" );
	deepEqual( Stem("skräpkammare"), "skräpkamm" );
	deepEqual( Stem("skräpkamrar"), "skräpkamr" );
	deepEqual( Stem("skrävlande"), "skrävl" );
	deepEqual( Stem("skrået"), "skrået" );
	deepEqual( Stem("skröplig"), "skröp" );
	deepEqual( Stem("skröt"), "skröt" );
	deepEqual( Stem("sku"), "sku" );
	deepEqual( Stem("skudda"), "skudd" );
	deepEqual( Stem("skude"), "skud" );
	deepEqual( Stem("skuderade"), "skuder" );
	deepEqual( Stem("skuffande"), "skuff" );
	deepEqual( Stem("skuffen"), "skuff" );
	deepEqual( Stem("skug"), "skug" );
	deepEqual( Stem("skugfade"), "skugf" );
	deepEqual( Stem("skugga"), "skugg" );
	deepEqual( Stem("skuggad"), "skugg" );
	deepEqual( Stem("skuggade"), "skugg" );
	deepEqual( Stem("skuggades"), "skugg" );
	deepEqual( Stem("skuggan"), "skuggan" );
	deepEqual( Stem("skuggande"), "skugg" );
	deepEqual( Stem("skuggans"), "skuggan" );
	deepEqual( Stem("skuggar"), "skugg" );
	deepEqual( Stem("skuggas"), "skugg" );
	deepEqual( Stem("skuggats"), "skuggat" );
	deepEqual( Stem("skuggbarn"), "skuggbarn" );
	deepEqual( Stem("skuggiga"), "skugg" );
	deepEqual( Stem("skugglika"), "skugglik" );
	deepEqual( Stem("skuggliv"), "skuggliv" );
	deepEqual( Stem("skuggor"), "skugg" );
	deepEqual( Stem("skuggorna"), "skugg" );
	deepEqual( Stem("skuggornas"), "skugg" );
	deepEqual( Stem("skuggorra"), "skuggorr" );
	deepEqual( Stem("skuggpartierna"), "skuggparti" );
	deepEqual( Stem("skuggrikaste"), "skuggrik" );
	deepEqual( Stem("skuggsidor"), "skuggsid" );
	deepEqual( Stem("skuggspel"), "skuggspel" );
	deepEqual( Stem("skul"), "skul" );
	deepEqual( Stem("skuld"), "skuld" );
	deepEqual( Stem("skulda"), "skuld" );
	deepEqual( Stem("skulden"), "skuld" );
	deepEqual( Stem("skulder"), "skuld" );
	deepEqual( Stem("skuldfritt"), "skuldfrit" );
	deepEqual( Stem("skuldförbindelser"), "skuldförbind" );
	deepEqual( Stem("skuldmedveten"), "skuldmedvet" );
	deepEqual( Stem("skuldran"), "skuldran" );
	deepEqual( Stem("skuldregister"), "skuldregist" );
	deepEqual( Stem("skuldror"), "skuldr" );
	deepEqual( Stem("skuldrorna"), "skuldr" );
	deepEqual( Stem("skuldsedel"), "skuldsedel" );
	deepEqual( Stem("skuli"), "skuli" );
	deepEqual( Stem("skulie"), "skuli" );
	deepEqual( Stem("skull"), "skull" );
	deepEqual( Stem("skullc"), "skullc" );
	deepEqual( Stem("skulle"), "skull" );
	deepEqual( Stem("skullen"), "skull" );
	deepEqual( Stem("skulptur"), "skulptur" );
	deepEqual( Stem("skulpturverk"), "skulpturverk" );
	deepEqual( Stem("skum"), "skum" );
	deepEqual( Stem("skumhylt"), "skumhylt" );
	deepEqual( Stem("skumma"), "skumm" );
	deepEqual( Stem("skummande"), "skumm" );
	deepEqual( Stem("skummaste"), "skumm" );
	deepEqual( Stem("skummet"), "skummet" );
	deepEqual( Stem("skummig"), "skumm" );
	deepEqual( Stem("skumpärlorna"), "skumpärl" );
	deepEqual( Stem("skumt"), "skumt" );
	deepEqual( Stem("skumögd"), "skumög" );
	deepEqual( Stem("skura"), "skur" );
	deepEqual( Stem("skurade"), "skur" );
	deepEqual( Stem("skurborste"), "skurborst" );
	deepEqual( Stem("skuren"), "skur" );
	deepEqual( Stem("skurit"), "skurit" );
	deepEqual( Stem("skurk"), "skurk" );
	deepEqual( Stem("skurken"), "skurk" );
	deepEqual( Stem("skurna"), "skurn" );
	deepEqual( Stem("skuro"), "skuro" );
	deepEqual( Stem("skuta"), "skut" );
	deepEqual( Stem("skutan"), "skutan" );
	deepEqual( Stem("skutans"), "skutan" );
	deepEqual( Stem("skutt"), "skutt" );
	deepEqual( Stem("skuzle"), "skuzl" );
	deepEqual( Stem("skvalar"), "skval" );
	deepEqual( Stem("skvallersjuka"), "skvallersjuk" );
	deepEqual( Stem("skvallerspeglar"), "skvallerspegl" );
	deepEqual( Stem("skvallra"), "skvallr" );
	deepEqual( Stem("skvallrade"), "skvallr" );
	deepEqual( Stem("skvallrar"), "skvallr" );
	deepEqual( Stem("skvalpade"), "skvalp" );
	deepEqual( Stem("skvaltar"), "skvalt" );
	deepEqual( Stem("skvdda"), "skvdda" );
	deepEqual( Stem("sky"), "sky" );
	deepEqual( Stem("skyar"), "skyar" );
	deepEqual( Stem("skyarna"), "skyarn" );
	deepEqual( Stem("skydd"), "skydd" );
	deepEqual( Stem("skydda"), "skydd" );
	deepEqual( Stem("skyddade"), "skydd" );
	deepEqual( Stem("skyddadt"), "skyddad" );
	deepEqual( Stem("skyddande"), "skydd" );
	deepEqual( Stem("skyddar"), "skydd" );
	deepEqual( Stem("skyddas"), "skydd" );
	deepEqual( Stem("skydde"), "skydd" );
	deepEqual( Stem("skyddsengel"), "skyddsengel" );
	deepEqual( Stem("skyddsling"), "skyddsling" );
	deepEqual( Stem("skyddslingar"), "skyddsling" );
	deepEqual( Stem("skyddslings"), "skyddsling" );
	deepEqual( Stem("skygg"), "skygg" );
	deepEqual( Stem("skygga"), "skygg" );
	deepEqual( Stem("skyggt"), "skygg" );
	deepEqual( Stem("skyhimmel"), "skyhimmel" );
	deepEqual( Stem("skyhöga"), "skyhög" );
	deepEqual( Stem("skyla"), "skyl" );
	deepEqual( Stem("skylde"), "skyld" );
	deepEqual( Stem("skyldes"), "skyld" );
	deepEqual( Stem("skyldig"), "skyld" );
	deepEqual( Stem("skyldiga"), "skyld" );
	deepEqual( Stem("skyldighet"), "skyld" );
	deepEqual( Stem("skyldigheten"), "skyld" );
	deepEqual( Stem("skyldigheter"), "skyld" );
	deepEqual( Stem("skyldrade"), "skyldr" );
	deepEqual( Stem("skylla"), "skyll" );
	deepEqual( Stem("skyllde"), "skylld" );
	deepEqual( Stem("skylt"), "skylt" );
	deepEqual( Stem("skyltade"), "skylt" );
	deepEqual( Stem("skylten"), "skylt" );
	deepEqual( Stem("skyltfönster"), "skyltfönst" );
	deepEqual( Stem("skym"), "skym" );
	deepEqual( Stem("skymassorna"), "skymass" );
	deepEqual( Stem("skymd"), "skymd" );
	deepEqual( Stem("skymde"), "skymd" );
	deepEqual( Stem("skymf"), "skymf" );
	deepEqual( Stem("skymfa"), "skymf" );
	deepEqual( Stem("skymfad"), "skymf" );
	deepEqual( Stem("skymfande"), "skymf" );
	deepEqual( Stem("skymfen"), "skymf" );
	deepEqual( Stem("skymflig"), "skymf" );
	deepEqual( Stem("skymfligt"), "skymf" );
	deepEqual( Stem("skymlande"), "skyml" );
	deepEqual( Stem("skymma"), "skymm" );
	deepEqual( Stem("skymmande"), "skymm" );
	deepEqual( Stem("skymning"), "skymning" );
	deepEqual( Stem("skymningen"), "skymning" );
	deepEqual( Stem("skymningens"), "skymning" );
	deepEqual( Stem("skymningsalfernas"), "skymningsalf" );
	deepEqual( Stem("skymningsdager"), "skymningsdag" );
	deepEqual( Stem("skymningsstora"), "skymningsstor" );
	deepEqual( Stem("skymningstärnan"), "skymningstärnan" );
	deepEqual( Stem("skymt"), "skymt" );
	deepEqual( Stem("skymta"), "skymt" );
	deepEqual( Stem("skymtade"), "skymt" );
	deepEqual( Stem("skymtar"), "skymt" );
	deepEqual( Stem("skymtat"), "skymt" );
	deepEqual( Stem("skymten"), "skymt" );
	deepEqual( Stem("skyn"), "skyn" );
	deepEqual( Stem("skynda"), "skynd" );
	deepEqual( Stem("skyndade"), "skynd" );
	deepEqual( Stem("skyndar"), "skynd" );
	deepEqual( Stem("skyndat"), "skynd" );
	deepEqual( Stem("skynden"), "skynd" );
	deepEqual( Stem("skyndsamhet"), "skyndsam" );
	deepEqual( Stem("skyndsamt"), "skyndsamt" );
	deepEqual( Stem("skyr"), "skyr" );
	deepEqual( Stem("skytrasorna"), "skytras" );
	deepEqual( Stem("skytt"), "skytt" );
	deepEqual( Stem("skyttarne"), "skytt" );
	deepEqual( Stem("skyttelen"), "skyttel" );
	deepEqual( Stem("skytten"), "skytt" );
	deepEqual( Stem("skytteriet"), "skytteriet" );
	deepEqual( Stem("skyvar"), "skyv" );
	deepEqual( Stem("skäckiga"), "skäck" );
	deepEqual( Stem("skägg"), "skägg" );
	deepEqual( Stem("skäggbotten"), "skäggbot" );
	deepEqual( Stem("skägget"), "skägget" );
	deepEqual( Stem("skäggig"), "skägg" );
	deepEqual( Stem("skäl"), "skäl" );
	deepEqual( Stem("skälet"), "skälet" );
	deepEqual( Stem("skälfvande"), "skälfv" );
	deepEqual( Stem("skälla"), "skäll" );
	deepEqual( Stem("skällande"), "skäll" );
	deepEqual( Stem("skällde"), "skälld" );
	deepEqual( Stem("skäller"), "skäll" );
	deepEqual( Stem("skälles"), "skäll" );
	deepEqual( Stem("skälm"), "skälm" );
	deepEqual( Stem("skälmaktig"), "skälmakt" );
	deepEqual( Stem("skälmen"), "skälm" );
	deepEqual( Stem("skälmska"), "skälmsk" );
	deepEqual( Stem("skälmstycken"), "skälmstyck" );
	deepEqual( Stem("skälva"), "skälv" );
	deepEqual( Stem("skälvande"), "skälv" );
	deepEqual( Stem("skälvde"), "skälvd" );
	deepEqual( Stem("skälver"), "skälv" );
	deepEqual( Stem("skälvosot"), "skälvosot" );
	deepEqual( Stem("skäm"), "skäm" );
	deepEqual( Stem("skämda"), "skämd" );
	deepEqual( Stem("skämde"), "skämd" );
	deepEqual( Stem("skämdes"), "skämd" );
	deepEqual( Stem("skämmas"), "skämm" );
	deepEqual( Stem("skämmer"), "skämm" );
	deepEqual( Stem("skäms"), "skäm" );
	deepEqual( Stem("skämt"), "skämt" );
	deepEqual( Stem("skämta"), "skämt" );
	deepEqual( Stem("skämtade"), "skämt" );
	deepEqual( Stem("skämtande"), "skämt" );
	deepEqual( Stem("skämtar"), "skämt" );
	deepEqual( Stem("skämtet"), "skämtet" );
	deepEqual( Stem("skämtsam"), "skämtsam" );
	deepEqual( Stem("skämtsamhet"), "skämtsam" );
	deepEqual( Stem("skämtsamma"), "skämtsamm" );
	deepEqual( Stem("skämtsamt"), "skämtsamt" );
	deepEqual( Stem("skämttidningarnas"), "skämttidning" );
	deepEqual( Stem("skändar"), "skänd" );
	deepEqual( Stem("skändas"), "skänd" );
	deepEqual( Stem("skänk"), "skänk" );
	deepEqual( Stem("skänka"), "skänk" );
	deepEqual( Stem("skänken"), "skänk" );
	deepEqual( Stem("skänker"), "skänk" );
	deepEqual( Stem("skänks"), "skänk" );
	deepEqual( Stem("skänkt"), "skänk" );
	deepEqual( Stem("skänkte"), "skänk" );
	deepEqual( Stem("skänkts"), "skänk" );
	deepEqual( Stem("skäppa"), "skäpp" );
	deepEqual( Stem("skäppan"), "skäppan" );
	deepEqual( Stem("skär"), "skär" );
	deepEqual( Stem("skära"), "skär" );
	deepEqual( Stem("skäran"), "skäran" );
	deepEqual( Stem("skärande"), "skär" );
	deepEqual( Stem("skärat"), "skär" );
	deepEqual( Stem("skären"), "skär" );
	deepEqual( Stem("skärgård"), "skärgård" );
	deepEqual( Stem("skärgården"), "skärgård" );
	deepEqual( Stem("skärgårdens"), "skärgård" );
	deepEqual( Stem("skärgårds"), "skärgård" );
	deepEqual( Stem("skärgårdsbos"), "skärgårdsbo" );
	deepEqual( Stem("skärgårdsbåtarna"), "skärgårdsbåt" );
	deepEqual( Stem("skärgårdselände"), "skärgårdseländ" );
	deepEqual( Stem("skärgårdsflicka"), "skärgårdsflick" );
	deepEqual( Stem("skärgårdsfolkets"), "skärgårdsfolket" );
	deepEqual( Stem("skärgårdslifvet"), "skärgårdslifvet" );
	deepEqual( Stem("skärgårdsmö"), "skärgårdsmö" );
	deepEqual( Stem("skärgårdstärnan"), "skärgårdstärnan" );
	deepEqual( Stem("skärhet"), "skär" );
	deepEqual( Stem("skärm"), "skärm" );
	deepEqual( Stem("skärmarne"), "skärm" );
	deepEqual( Stem("skärmen"), "skärm" );
	deepEqual( Stem("skärmens"), "skärm" );
	deepEqual( Stem("skärpa"), "skärp" );
	deepEqual( Stem("skärper"), "skärp" );
	deepEqual( Stem("skärpta"), "skärpt" );
	deepEqual( Stem("skärpte"), "skärpt" );
	deepEqual( Stem("skärseld"), "skärseld" );
	deepEqual( Stem("skärt"), "skärt" );
	deepEqual( Stem("skärv"), "skärv" );
	deepEqual( Stem("skärvor"), "skärv" );
	deepEqual( Stem("skåda"), "skåd" );
	deepEqual( Stem("skådad"), "skåd" );
	deepEqual( Stem("skådade"), "skåd" );
	deepEqual( Stem("skådande"), "skåd" );
	deepEqual( Stem("skådat"), "skåd" );
	deepEqual( Stem("skådespel"), "skådespel" );
	deepEqual( Stem("skådespelare"), "skådespel" );
	deepEqual( Stem("skådespelaren"), "skådespel" );
	deepEqual( Stem("skådespelarna"), "skådespel" );
	deepEqual( Stem("skådespelerskor"), "skådespelersk" );
	deepEqual( Stem("skådespelet"), "skådespelet" );
	deepEqual( Stem("skål"), "skål" );
	deepEqual( Stem("skåla"), "skål" );
	deepEqual( Stem("skålen"), "skål" );
	deepEqual( Stem("skåll"), "skåll" );
	deepEqual( Stem("skålpund"), "skålpund" );
	deepEqual( Stem("skåmtade"), "skåmt" );
	deepEqual( Stem("skåne"), "skån" );
	deepEqual( Stem("skåp"), "skåp" );
	deepEqual( Stem("skåpdörren"), "skåpdörr" );
	deepEqual( Stem("skåpet"), "skåpet" );
	deepEqual( Stem("skökor"), "skök" );
	deepEqual( Stem("sköld"), "sköld" );
	deepEqual( Stem("sköldborg"), "sköldborg" );
	deepEqual( Stem("skölj"), "skölj" );
	deepEqual( Stem("skölja"), "skölj" );
	deepEqual( Stem("sköljde"), "sköljd" );
	deepEqual( Stem("sköljer"), "skölj" );
	deepEqual( Stem("sköljt"), "sköljt" );
	deepEqual( Stem("skön"), "skön" );
	deepEqual( Stem("sköna"), "skön" );
	deepEqual( Stem("skönare"), "skön" );
	deepEqual( Stem("skönaste"), "skön" );
	deepEqual( Stem("skönhet"), "skön" );
	deepEqual( Stem("skönheten"), "skön" );
	deepEqual( Stem("skönhetens"), "skön" );
	deepEqual( Stem("skönheter"), "skön" );
	deepEqual( Stem("skönhetssinne"), "skönhetssin" );
	deepEqual( Stem("skönja"), "skönj" );
	deepEqual( Stem("skönjbara"), "skönjbar" );
	deepEqual( Stem("skönjde"), "skönjd" );
	deepEqual( Stem("skönjdes"), "skönjd" );
	deepEqual( Stem("skönjs"), "skönj" );
	deepEqual( Stem("sköns"), "skön" );
	deepEqual( Stem("skönt"), "skönt" );
	deepEqual( Stem("skör"), "skör" );
	deepEqual( Stem("skörd"), "skörd" );
	deepEqual( Stem("skörda"), "skörd" );
	deepEqual( Stem("skördar"), "skörd" );
	deepEqual( Stem("skördat"), "skörd" );
	deepEqual( Stem("skördemogna"), "skördemogn" );
	deepEqual( Stem("skörlevnad"), "skörlevn" );
	deepEqual( Stem("skört"), "skört" );
	deepEqual( Stem("sköt"), "sköt" );
	deepEqual( Stem("sköta"), "sköt" );
	deepEqual( Stem("sköte"), "sköt" );
	deepEqual( Stem("sköter"), "sköt" );
	deepEqual( Stem("sköterska"), "skötersk" );
	deepEqual( Stem("sköterskam"), "sköterskam" );
	deepEqual( Stem("sköterskan"), "sköterskan" );
	deepEqual( Stem("sköterskorna"), "skötersk" );
	deepEqual( Stem("skötet"), "skötet" );
	deepEqual( Stem("sköto"), "sköto" );
	deepEqual( Stem("sköts"), "sköt" );
	deepEqual( Stem("skött"), "skött" );
	deepEqual( Stem("skötte"), "skött" );
	deepEqual( Stem("sköttes"), "skött" );
	deepEqual( Stem("skövla"), "skövl" );
	deepEqual( Stem("sl"), "sl" );
	deepEqual( Stem("sladder"), "sladd" );
	deepEqual( Stem("sladdra"), "sladdr" );
	deepEqual( Stem("sladdrar"), "sladdr" );
	deepEqual( Stem("slaflif"), "slaflif" );
	deepEqual( Stem("slag"), "slag" );
	deepEqual( Stem("slaganfall"), "slaganfall" );
	deepEqual( Stem("slagattack"), "slagattack" );
	deepEqual( Stem("slagbordet"), "slagbordet" );
	deepEqual( Stem("slagdänga"), "slagdäng" );
	deepEqual( Stem("slagdängor"), "slagdäng" );
	deepEqual( Stem("slagen"), "slag" );
	deepEqual( Stem("slaget"), "slaget" );
	deepEqual( Stem("slagfältet"), "slagfältet" );
	deepEqual( Stem("slagit"), "slagit" );
	deepEqual( Stem("slagits"), "slagit" );
	deepEqual( Stem("slagna"), "slagn" );
	deepEqual( Stem("slags"), "slag" );
	deepEqual( Stem("slagskämpe"), "slagskämp" );
	deepEqual( Stem("slaka"), "slak" );
	deepEqual( Stem("slakt"), "slakt" );
	deepEqual( Stem("slaktat"), "slakt" );
	deepEqual( Stem("slakthus"), "slakthus" );
	deepEqual( Stem("slam"), "slam" );
	deepEqual( Stem("slammer"), "slamm" );
	deepEqual( Stem("slamrande"), "slamr" );
	deepEqual( Stem("slamret"), "slamret" );
	deepEqual( Stem("slang"), "slang" );
	deepEqual( Stem("slangbågar"), "slangbåg" );
	deepEqual( Stem("slangbåge"), "slangbåg" );
	deepEqual( Stem("slank"), "slank" );
	deepEqual( Stem("slanka"), "slank" );
	deepEqual( Stem("slannade"), "slann" );
	deepEqual( Stem("slant"), "slant" );
	deepEqual( Stem("slantar"), "slant" );
	deepEqual( Stem("slapp"), "slapp" );
	deepEqual( Stem("slappa"), "slapp" );
	deepEqual( Stem("slappfeta"), "slappfet" );
	deepEqual( Stem("slapphet"), "slapp" );
	deepEqual( Stem("slappna"), "slappn" );
	deepEqual( Stem("slappt"), "slappt" );
	deepEqual( Stem("slappte"), "slappt" );
	deepEqual( Stem("slar"), "slar" );
	deepEqual( Stem("slarf"), "slarf" );
	deepEqual( Stem("slarfva"), "slarfv" );
	deepEqual( Stem("slarvig"), "slarv" );
	deepEqual( Stem("slaskig"), "slask" );
	deepEqual( Stem("slav"), "slav" );
	deepEqual( Stem("slaveri"), "slaveri" );
	deepEqual( Stem("slavinna"), "slavin" );
	deepEqual( Stem("slculle"), "slcull" );
	deepEqual( Stem("sldgo"), "sldgo" );
	deepEqual( Stem("slemmig"), "slemm" );
	deepEqual( Stem("slemmiga"), "slemm" );
	deepEqual( Stem("slet"), "slet" );
	deepEqual( Stem("sleto"), "sleto" );
	deepEqual( Stem("sletos"), "sleto" );
	deepEqual( Stem("slets"), "slet" );
	deepEqual( Stem("slg"), "slg" );
	deepEqual( Stem("slicka"), "slick" );
	deepEqual( Stem("slickadc"), "slickadc" );
	deepEqual( Stem("slickade"), "slick" );
	deepEqual( Stem("slickande"), "slick" );
	deepEqual( Stem("slickar"), "slick" );
	deepEqual( Stem("slida"), "slid" );
	deepEqual( Stem("slikt"), "slikt" );
	deepEqual( Stem("slinga"), "sling" );
	deepEqual( Stem("slingor"), "sling" );
	deepEqual( Stem("slingorna"), "sling" );
	deepEqual( Stem("slingra"), "slingr" );
	deepEqual( Stem("slingrade"), "slingr" );
	deepEqual( Stem("slingrande"), "slingr" );
	deepEqual( Stem("slingrar"), "slingr" );
	deepEqual( Stem("slingrat"), "slingr" );
	deepEqual( Stem("slingriga"), "slingr" );
	deepEqual( Stem("slingringarne"), "slingring" );
	deepEqual( Stem("slinh"), "slinh" );
	deepEqual( Stem("slinka"), "slink" );
	deepEqual( Stem("slinker"), "slink" );
	deepEqual( Stem("slinta"), "slint" );
	deepEqual( Stem("slipad"), "slip" );
	deepEqual( Stem("slipade"), "slip" );
	deepEqual( Stem("slippa"), "slipp" );
	deepEqual( Stem("slipper"), "slipp" );
	deepEqual( Stem("slipprigt"), "slippr" );
	deepEqual( Stem("slips"), "slip" );
	deepEqual( Stem("sliskiga"), "slisk" );
	deepEqual( Stem("sliskigaste"), "slisk" );
	deepEqual( Stem("slita"), "slit" );
	deepEqual( Stem("slitande"), "slit" );
	deepEqual( Stem("slitas"), "slit" );
	deepEqual( Stem("sliten"), "slit" );
	deepEqual( Stem("slitit"), "slitit" );
	deepEqual( Stem("slitits"), "slitit" );
	deepEqual( Stem("slitna"), "slitn" );
	deepEqual( Stem("slitningar"), "slitning" );
	deepEqual( Stem("slits"), "slit" );
	deepEqual( Stem("slitstarkt"), "slitstark" );
	deepEqual( Stem("slock"), "slock" );
	deepEqual( Stem("slockna"), "slockn" );
	deepEqual( Stem("slocknade"), "slockn" );
	deepEqual( Stem("slocknande"), "slockn" );
	deepEqual( Stem("slocknar"), "slockn" );
	deepEqual( Stem("slocknat"), "slockn" );
	deepEqual( Stem("slog"), "slog" );
	deepEqual( Stem("sloge"), "slog" );
	deepEqual( Stem("slogo"), "slogo" );
	deepEqual( Stem("slogos"), "slogo" );
	deepEqual( Stem("slogs"), "slog" );
	deepEqual( Stem("sloka"), "slok" );
	deepEqual( Stem("slokad"), "slok" );
	deepEqual( Stem("slokande"), "slok" );
	deepEqual( Stem("slokar"), "slok" );
	deepEqual( Stem("slot"), "slot" );
	deepEqual( Stem("slott"), "slott" );
	deepEqual( Stem("slottet"), "slottet" );
	deepEqual( Stem("slottsfasaden"), "slottsfasad" );
	deepEqual( Stem("slottskanslibetjänt"), "slottskanslibetjänt" );
	deepEqual( Stem("slottskanslibetjänter"), "slottskanslibetjänt" );
	deepEqual( Stem("slottskanslibetjänterna"), "slottskanslibetjänt" );
	deepEqual( Stem("slottskorridor"), "slottskorrid" );
	deepEqual( Stem("slottsrätten"), "slottsrät" );
	deepEqual( Stem("slottstappning"), "slottstappning" );
	deepEqual( Stem("sluddrade"), "sluddr" );
	deepEqual( Stem("slug"), "slug" );
	deepEqual( Stem("slugare"), "slug" );
	deepEqual( Stem("slugt"), "slugt" );
	deepEqual( Stem("sluka"), "sluk" );
	deepEqual( Stem("slukade"), "sluk" );
	deepEqual( Stem("slukades"), "sluk" );
	deepEqual( Stem("slukar"), "sluk" );
	deepEqual( Stem("slukat"), "sluk" );
	deepEqual( Stem("slummer"), "slumm" );
	deepEqual( Stem("slump"), "slump" );
	deepEqual( Stem("slumpen"), "slump" );
	deepEqual( Stem("slumra"), "slumr" );
	deepEqual( Stem("slumrade"), "slumr" );
	deepEqual( Stem("slumrande"), "slumr" );
	deepEqual( Stem("slumrar"), "slumr" );
	deepEqual( Stem("slumrat"), "slumr" );
	deepEqual( Stem("slunga"), "slung" );
	deepEqual( Stem("slungade"), "slung" );
	deepEqual( Stem("slungat"), "slung" );
	deepEqual( Stem("slunko"), "slunko" );
	deepEqual( Stem("slup"), "slup" );
	deepEqual( Stem("slupen"), "slup" );
	deepEqual( Stem("sluppit"), "sluppit" );
	deepEqual( Stem("sluring"), "sluring" );
	deepEqual( Stem("slusk"), "slusk" );
	deepEqual( Stem("slussen"), "sluss" );
	deepEqual( Stem("slut"), "slut" );
	deepEqual( Stem("sluta"), "slut" );
	deepEqual( Stem("slutad"), "slut" );
	deepEqual( Stem("slutade"), "slut" );
	deepEqual( Stem("slutades"), "slut" );
	deepEqual( Stem("slutadt"), "slutad" );
	deepEqual( Stem("slutande"), "slut" );
	deepEqual( Stem("slutar"), "slut" );
	deepEqual( Stem("slutas"), "slut" );
	deepEqual( Stem("slutat"), "slut" );
	deepEqual( Stem("sluten"), "slut" );
	deepEqual( Stem("slutenhet"), "sluten" );
	deepEqual( Stem("sluter"), "slut" );
	deepEqual( Stem("slutet"), "slutet" );
	deepEqual( Stem("slutit"), "slutit" );
	deepEqual( Stem("slutits"), "slutit" );
	deepEqual( Stem("slutkapitlet"), "slutkapitlet" );
	deepEqual( Stem("slutli"), "slutli" );
	deepEqual( Stem("slutlig"), "slut" );
	deepEqual( Stem("slutliga"), "slut" );
	deepEqual( Stem("slutligen"), "slut" );
	deepEqual( Stem("slutligeu"), "slutligeu" );
	deepEqual( Stem("slutligt"), "slut" );
	deepEqual( Stem("slutmening"), "slutmening" );
	deepEqual( Stem("slutmeningen"), "slutmening" );
	deepEqual( Stem("slutna"), "slutn" );
	deepEqual( Stem("slutpolerade"), "slutpoler" );
	deepEqual( Stem("slutsats"), "slutsat" );
	deepEqual( Stem("slutsatsen"), "slutsats" );
	deepEqual( Stem("slutsatser"), "slutsats" );
	deepEqual( Stem("sluttande"), "slutt" );
	deepEqual( Stem("sluttning"), "sluttning" );
	deepEqual( Stem("sluttningar"), "sluttning" );
	deepEqual( Stem("sluttningen"), "sluttning" );
	deepEqual( Stem("slynan"), "slynan" );
	deepEqual( Stem("slyng"), "slyng" );
	deepEqual( Stem("slyngel"), "slyngel" );
	deepEqual( Stem("slyngelåren"), "slyngelår" );
	deepEqual( Stem("slynåren"), "slynår" );
	deepEqual( Stem("släck"), "släck" );
	deepEqual( Stem("släcka"), "släck" );
	deepEqual( Stem("släckande"), "släck" );
	deepEqual( Stem("släckt"), "släck" );
	deepEqual( Stem("släckta"), "släck" );
	deepEqual( Stem("släckte"), "släck" );
	deepEqual( Stem("släde"), "släd" );
	deepEqual( Stem("slädpartier"), "slädparti" );
	deepEqual( Stem("slädspår"), "slädspår" );
	deepEqual( Stem("slägt"), "slägt" );
	deepEqual( Stem("slägten"), "slägt" );
	deepEqual( Stem("slägting"), "slägting" );
	deepEqual( Stem("slägtingar"), "slägting" );
	deepEqual( Stem("släk"), "släk" );
	deepEqual( Stem("släkt"), "släkt" );
	deepEqual( Stem("släkte"), "släkt" );
	deepEqual( Stem("släkten"), "släkt" );
	deepEqual( Stem("släktens"), "släkt" );
	deepEqual( Stem("släktes"), "släkt" );
	deepEqual( Stem("släktförhållanden"), "släktförhåll" );
	deepEqual( Stem("släkting"), "släkting" );
	deepEqual( Stem("släktingar"), "släkting" );
	deepEqual( Stem("släktingen"), "släkting" );
	deepEqual( Stem("släktkalendrar"), "släktkalendr" );
	deepEqual( Stem("släktled"), "släktled" );
	deepEqual( Stem("släktleds"), "släktled" );
	deepEqual( Stem("släktskap"), "släktskap" );
	deepEqual( Stem("släkttycket"), "släkttycket" );
	deepEqual( Stem("släktvapnet"), "släktvapnet" );
	deepEqual( Stem("sländas"), "sländ" );
	deepEqual( Stem("släng"), "släng" );
	deepEqual( Stem("slänga"), "släng" );
	deepEqual( Stem("slängar"), "släng" );
	deepEqual( Stem("slängde"), "släng" );
	deepEqual( Stem("slänger"), "släng" );
	deepEqual( Stem("slängkappa"), "slängkapp" );
	deepEqual( Stem("slängkyss"), "slängkyss" );
	deepEqual( Stem("slängt"), "släng" );
	deepEqual( Stem("släp"), "släp" );
	deepEqual( Stem("släpa"), "släp" );
	deepEqual( Stem("släpade"), "släp" );
	deepEqual( Stem("släpande"), "släp" );
	deepEqual( Stem("släpar"), "släp" );
	deepEqual( Stem("släpat"), "släp" );
	deepEqual( Stem("släpigt"), "släp" );
	deepEqual( Stem("släpp"), "släpp" );
	deepEqual( Stem("släppa"), "släpp" );
	deepEqual( Stem("släpper"), "släpp" );
	deepEqual( Stem("släppt"), "släppt" );
	deepEqual( Stem("släppte"), "släppt" );
	deepEqual( Stem("släppts"), "släppt" );
	deepEqual( Stem("släpstöfveln"), "släpstöfveln" );
	deepEqual( Stem("slät"), "slät" );
	deepEqual( Stem("släta"), "slät" );
	deepEqual( Stem("slätade"), "slät" );
	deepEqual( Stem("slätkammade"), "slätkamm" );
	deepEqual( Stem("slätrakad"), "slätrak" );
	deepEqual( Stem("slätrakade"), "slätrak" );
	deepEqual( Stem("slätt"), "slätt" );
	deepEqual( Stem("slätten"), "slätt" );
	deepEqual( Stem("slättens"), "slätt" );
	deepEqual( Stem("slätter"), "slätt" );
	deepEqual( Stem("slättäljda"), "slättäljd" );
	deepEqual( Stem("slå"), "slå" );
	deepEqual( Stem("slående"), "slåend" );
	deepEqual( Stem("slåkt"), "slåkt" );
	deepEqual( Stem("slår"), "slår" );
	deepEqual( Stem("slås"), "slås" );
	deepEqual( Stem("slåss"), "slåss" );
	deepEqual( Stem("slö"), "slö" );
	deepEqual( Stem("slöa"), "slöa" );
	deepEqual( Stem("slöhet"), "slöhet" );
	deepEqual( Stem("slöja"), "slöj" );
	deepEqual( Stem("slöjan"), "slöjan" );
	deepEqual( Stem("slöjd"), "slöjd" );
	deepEqual( Stem("slöjdares"), "slöjdar" );
	deepEqual( Stem("slöjdbänk"), "slöjdbänk" );
	deepEqual( Stem("slöjor"), "slöj" );
	deepEqual( Stem("slösa"), "slös" );
	deepEqual( Stem("slösade"), "slös" );
	deepEqual( Stem("slösaktig"), "slösakt" );
	deepEqual( Stem("slösaktiga"), "slösakt" );
	deepEqual( Stem("slösar"), "slös" );
	deepEqual( Stem("slösarna"), "slös" );
	deepEqual( Stem("slösat"), "slös" );
	deepEqual( Stem("slöseri"), "slöseri" );
	deepEqual( Stem("slöserska"), "slösersk" );
	deepEqual( Stem("slöt"), "slöt" );
	deepEqual( Stem("slöto"), "slöto" );
	deepEqual( Stem("slötos"), "slöto" );
	deepEqual( Stem("slött"), "slött" );
	deepEqual( Stem("sm"), "sm" );
	deepEqual( Stem("sma"), "sma" );
	deepEqual( Stem("smackade"), "smack" );
	deepEqual( Stem("smacker"), "smack" );
	deepEqual( Stem("smackningar"), "smackning" );
	deepEqual( Stem("smak"), "smak" );
	deepEqual( Stem("smaka"), "smak" );
	deepEqual( Stem("smakade"), "smak" );
	deepEqual( Stem("smakar"), "smak" );
	deepEqual( Stem("smakat"), "smak" );
	deepEqual( Stem("smaken"), "smak" );
	deepEqual( Stem("smakfull"), "smakfull" );
	deepEqual( Stem("smakfullare"), "smakfull" );
	deepEqual( Stem("smakfullt"), "smakfull" );
	deepEqual( Stem("smaklöst"), "smaklös" );
	deepEqual( Stem("smaksätta"), "smaksät" );
	deepEqual( Stem("smal"), "smal" );
	deepEqual( Stem("smala"), "smal" );
	deepEqual( Stem("smaleende"), "smaleend" );
	deepEqual( Stem("small"), "small" );
	deepEqual( Stem("smalnar"), "smaln" );
	deepEqual( Stem("smalog"), "smalog" );
	deepEqual( Stem("smalt"), "smalt" );
	deepEqual( Stem("smattra"), "smattr" );
	deepEqual( Stem("smattrade"), "smattr" );
	deepEqual( Stem("smattrande"), "smattr" );
	deepEqual( Stem("smedja"), "smedj" );
	deepEqual( Stem("smedjan"), "smedjan" );
	deepEqual( Stem("smeka"), "smek" );
	deepEqual( Stem("smekande"), "smek" );
	deepEqual( Stem("smekas"), "smek" );
	deepEqual( Stem("smekmånaden"), "smekmånad" );
	deepEqual( Stem("smeknamn"), "smeknamn" );
	deepEqual( Stem("smekning"), "smekning" );
	deepEqual( Stem("smekningar"), "smekning" );
	deepEqual( Stem("smekningen"), "smekning" );
	deepEqual( Stem("smeksam"), "smeksam" );
	deepEqual( Stem("smeksamma"), "smeksamm" );
	deepEqual( Stem("smeksamt"), "smeksamt" );
	deepEqual( Stem("smekt"), "smekt" );
	deepEqual( Stem("smekte"), "smekt" );
	deepEqual( Stem("smetade"), "smet" );
	deepEqual( Stem("smetat"), "smet" );
	deepEqual( Stem("smicker"), "smick" );
	deepEqual( Stem("smickrad"), "smickr" );
	deepEqual( Stem("smickrade"), "smickr" );
	deepEqual( Stem("smickrades"), "smickr" );
	deepEqual( Stem("smickrande"), "smickr" );
	deepEqual( Stem("smickrare"), "smickr" );
	deepEqual( Stem("smickrat"), "smickr" );
	deepEqual( Stem("smida"), "smid" );
	deepEqual( Stem("smidig"), "smid" );
	deepEqual( Stem("smidiga"), "smid" );
	deepEqual( Stem("smidigare"), "smid" );
	deepEqual( Stem("smidigt"), "smid" );
	deepEqual( Stem("smil"), "smil" );
	deepEqual( Stem("smilande"), "smil" );
	deepEqual( Stem("smiles"), "smil" );
	deepEqual( Stem("smink"), "smink" );
	deepEqual( Stem("sminka"), "smink" );
	deepEqual( Stem("smisk"), "smisk" );
	deepEqual( Stem("smitta"), "smitt" );
	deepEqual( Stem("smittade"), "smitt" );
	deepEqual( Stem("smittat"), "smitt" );
	deepEqual( Stem("smittoöverföring"), "smittoöverföring" );
	deepEqual( Stem("smlsade"), "smlsad" );
	deepEqual( Stem("smn"), "smn" );
	deepEqual( Stem("smog"), "smog" );
	deepEqual( Stem("smorde"), "smord" );
	deepEqual( Stem("smuggelgodset"), "smuggelgodset" );
	deepEqual( Stem("smuggelhandel"), "smuggelhandel" );
	deepEqual( Stem("smuggla"), "smuggl" );
	deepEqual( Stem("smugglas"), "smuggl" );
	deepEqual( Stem("smuggleriet"), "smuggleriet" );
	deepEqual( Stem("smugit"), "smugit" );
	deepEqual( Stem("smula"), "smul" );
	deepEqual( Stem("smulade"), "smul" );
	deepEqual( Stem("smular"), "smul" );
	deepEqual( Stem("smulat"), "smul" );
	deepEqual( Stem("smulor"), "smul" );
	deepEqual( Stem("smulorna"), "smul" );
	deepEqual( Stem("smultit"), "smultit" );
	deepEqual( Stem("smultron"), "smultron" );
	deepEqual( Stem("smussla"), "smussl" );
	deepEqual( Stem("smuts"), "smut" );
	deepEqual( Stem("smutsa"), "smuts" );
	deepEqual( Stem("smutsade"), "smuts" );
	deepEqual( Stem("smutsas"), "smuts" );
	deepEqual( Stem("smutsat"), "smuts" );
	deepEqual( Stem("smutsbruna"), "smutsbrun" );
	deepEqual( Stem("smutsen"), "smuts" );
	deepEqual( Stem("smutsgrå"), "smutsgrå" );
	deepEqual( Stem("smutsgula"), "smutsgul" );
	deepEqual( Stem("smutsig"), "smuts" );
	deepEqual( Stem("smutsiga"), "smuts" );
	deepEqual( Stem("smutsigt"), "smuts" );
	deepEqual( Stem("smutspöl"), "smutspöl" );
	deepEqual( Stem("smutsröda"), "smutsröd" );
	deepEqual( Stem("smutta"), "smutt" );
	deepEqual( Stem("smuttade"), "smutt" );
	deepEqual( Stem("smuttande"), "smutt" );
	deepEqual( Stem("smy"), "smy" );
	deepEqual( Stem("smycka"), "smyck" );
	deepEqual( Stem("smycken"), "smyck" );
	deepEqual( Stem("smyg"), "smyg" );
	deepEqual( Stem("smyga"), "smyg" );
	deepEqual( Stem("smygande"), "smyg" );
	deepEqual( Stem("smyger"), "smyg" );
	deepEqual( Stem("smyghål"), "smyghål" );
	deepEqual( Stem("smygvägar"), "smygväg" );
	deepEqual( Stem("smäck"), "smäck" );
	deepEqual( Stem("smäcker"), "smäck" );
	deepEqual( Stem("smäckra"), "smäckr" );
	deepEqual( Stem("smäda"), "smäd" );
	deepEqual( Stem("smädar"), "smäd" );
	deepEqual( Stem("smädliga"), "smäd" );
	deepEqual( Stem("smälek"), "smälek" );
	deepEqual( Stem("smäll"), "smäll" );
	deepEqual( Stem("smälla"), "smäll" );
	deepEqual( Stem("smällande"), "smäll" );
	deepEqual( Stem("smällar"), "smäll" );
	deepEqual( Stem("smällde"), "smälld" );
	deepEqual( Stem("smällen"), "smäll" );
	deepEqual( Stem("smäller"), "smäll" );
	deepEqual( Stem("smällt"), "smällt" );
	deepEqual( Stem("smält"), "smält" );
	deepEqual( Stem("smälta"), "smält" );
	deepEqual( Stem("smältande"), "smält" );
	deepEqual( Stem("smälte"), "smält" );
	deepEqual( Stem("smärt"), "smärt" );
	deepEqual( Stem("smärta"), "smärt" );
	deepEqual( Stem("smärtade"), "smärt" );
	deepEqual( Stem("smärtan"), "smärtan" );
	deepEqual( Stem("smärtans"), "smärtan" );
	deepEqual( Stem("smärtare"), "smärt" );
	deepEqual( Stem("smärtas"), "smärt" );
	deepEqual( Stem("smärtfulla"), "smärtfull" );
	deepEqual( Stem("smärtor"), "smärt" );
	deepEqual( Stem("smärtorna"), "smärt" );
	deepEqual( Stem("smärtsam"), "smärtsam" );
	deepEqual( Stem("smärtsamma"), "smärtsamm" );
	deepEqual( Stem("smärtsamt"), "smärtsamt" );
	deepEqual( Stem("små"), "små" );
	deepEqual( Stem("småaktiga"), "småakt" );
	deepEqual( Stem("småbarn"), "småbarn" );
	deepEqual( Stem("småbarnskläder"), "småbarnskläd" );
	deepEqual( Stem("småborgerligt"), "småborger" );
	deepEqual( Stem("småbrödet"), "småbrödet" );
	deepEqual( Stem("småbåtarna"), "småbåt" );
	deepEqual( Stem("småbåtarne"), "småbåt" );
	deepEqual( Stem("smådda"), "smådd" );
	deepEqual( Stem("småfä"), "småfä" );
	deepEqual( Stem("småfåglars"), "småfåglar" );
	deepEqual( Stem("smågnolade"), "smågnol" );
	deepEqual( Stem("smågnolande"), "smågnol" );
	deepEqual( Stem("smågräla"), "smågräl" );
	deepEqual( Stem("småherrarne"), "småherr" );
	deepEqual( Stem("småherrskapet"), "småherrskapet" );
	deepEqual( Stem("småjagterna"), "småjag" );
	deepEqual( Stem("småkräken"), "småkräk" );
	deepEqual( Stem("småkrämaraffärer"), "småkrämaraffär" );
	deepEqual( Stem("småland"), "småland" );
	deepEqual( Stem("småle"), "smål" );
	deepEqual( Stem("småleende"), "småleend" );
	deepEqual( Stem("småleenden"), "småleend" );
	deepEqual( Stem("småleendet"), "småleendet" );
	deepEqual( Stem("småler"), "smål" );
	deepEqual( Stem("smålett"), "smålet" );
	deepEqual( Stem("smålog"), "smålog" );
	deepEqual( Stem("smålogo"), "smålogo" );
	deepEqual( Stem("småländska"), "småländsk" );
	deepEqual( Stem("smålådorna"), "smålåd" );
	deepEqual( Stem("småmynt"), "småmynt" );
	deepEqual( Stem("småmyste"), "småmyst" );
	deepEqual( Stem("småningom"), "småningom" );
	deepEqual( Stem("småningorn"), "småningorn" );
	deepEqual( Stem("småpojkar"), "småpojk" );
	deepEqual( Stem("småpratade"), "småprat" );
	deepEqual( Stem("smårum"), "smårum" );
	deepEqual( Stem("smårummen"), "smårumm" );
	deepEqual( Stem("småsak"), "småsak" );
	deepEqual( Stem("småsaker"), "småsak" );
	deepEqual( Stem("småsinthet"), "småsint" );
	deepEqual( Stem("småskrattade"), "småskrat" );
	deepEqual( Stem("småstad"), "småst" );
	deepEqual( Stem("småstaden"), "småstad" );
	deepEqual( Stem("småsten"), "småst" );
	deepEqual( Stem("småting"), "småting" );
	deepEqual( Stem("småtrippande"), "småtripp" );
	deepEqual( Stem("småtråkiga"), "småtråk" );
	deepEqual( Stem("smått"), "smått" );
	deepEqual( Stem("småvisslande"), "småvissl" );
	deepEqual( Stem("småväxt"), "småväxt" );
	deepEqual( Stem("smög"), "smög" );
	deepEqual( Stem("smögo"), "smögo" );
	deepEqual( Stem("smör"), "smör" );
	deepEqual( Stem("smörbakelser"), "smörbak" );
	deepEqual( Stem("smörbytta"), "smörbyt" );
	deepEqual( Stem("smörbyttor"), "smörbyt" );
	deepEqual( Stem("smördukar"), "smörduk" );
	deepEqual( Stem("smöret"), "smöret" );
	deepEqual( Stem("smörgasar"), "smörgas" );
	deepEqual( Stem("smörgås"), "smörgås" );
	deepEqual( Stem("smörgåsar"), "smörgås" );
	deepEqual( Stem("smörgåsbiten"), "smörgåsbit" );
	deepEqual( Stem("smörgåsbordet"), "smörgåsbordet" );
	deepEqual( Stem("smörgåsen"), "smörgås" );
	deepEqual( Stem("smörj"), "smörj" );
	deepEqual( Stem("smörja"), "smörj" );
	deepEqual( Stem("smörjan"), "smörjan" );
	deepEqual( Stem("sna"), "sna" );
	deepEqual( Stem("snabb"), "snabb" );
	deepEqual( Stem("snabba"), "snabb" );
	deepEqual( Stem("snabbare"), "snabb" );
	deepEqual( Stem("snabbhet"), "snabb" );
	deepEqual( Stem("snabblöpare"), "snabblöp" );
	deepEqual( Stem("snabbt"), "snabbt" );
	deepEqual( Stem("snappat"), "snapp" );
	deepEqual( Stem("snapsar"), "snaps" );
	deepEqual( Stem("snar"), "snar" );
	deepEqual( Stem("snara"), "snar" );
	deepEqual( Stem("snaran"), "snaran" );
	deepEqual( Stem("snarare"), "snar" );
	deepEqual( Stem("snarast"), "snar" );
	deepEqual( Stem("snaraste"), "snar" );
	deepEqual( Stem("snarfyndiga"), "snarfynd" );
	deepEqual( Stem("snarka"), "snark" );
	deepEqual( Stem("snarkande"), "snark" );
	deepEqual( Stem("snarkning"), "snarkning" );
	deepEqual( Stem("snarlik"), "snarlik" );
	deepEqual( Stem("snarlika"), "snarlik" );
	deepEqual( Stem("snarlikt"), "snarlik" );
	deepEqual( Stem("snaror"), "snar" );
	deepEqual( Stem("snarr"), "snarr" );
	deepEqual( Stem("snart"), "snart" );
	deepEqual( Stem("snatta"), "snatt" );
	deepEqual( Stem("snattrande"), "snattr" );
	deepEqual( Stem("snavade"), "snav" );
	deepEqual( Stem("sned"), "sned" );
	deepEqual( Stem("sneddade"), "snedd" );
	deepEqual( Stem("snedsprång"), "snedsprång" );
	deepEqual( Stem("sneglade"), "snegl" );
	deepEqual( Stem("sneglat"), "snegl" );
	deepEqual( Stem("snett"), "snett" );
	deepEqual( Stem("snibben"), "snibb" );
	deepEqual( Stem("snickare"), "snick" );
	deepEqual( Stem("snickaren"), "snick" );
	deepEqual( Stem("snickaresåg"), "snickaresåg" );
	deepEqual( Stem("snigeln"), "snigeln" );
	deepEqual( Stem("snille"), "snill" );
	deepEqual( Stem("snillets"), "snillet" );
	deepEqual( Stem("snillrikt"), "snillrik" );
	deepEqual( Stem("snipigt"), "snip" );
	deepEqual( Stem("snirklade"), "snirkl" );
	deepEqual( Stem("snits"), "snit" );
	deepEqual( Stem("snitt"), "snitt" );
	deepEqual( Stem("snitten"), "snitt" );
	deepEqual( Stem("snm"), "snm" );
	deepEqual( Stem("snobbiga"), "snobb" );
	deepEqual( Stem("snodde"), "snodd" );
	deepEqual( Stem("snoka"), "snok" );
	deepEqual( Stem("snokande"), "snok" );
	deepEqual( Stem("snor"), "snor" );
	deepEqual( Stem("snorungen"), "snorung" );
	deepEqual( Stem("sntto"), "sntto" );
	deepEqual( Stem("snubbla"), "snubbl" );
	deepEqual( Stem("snubblade"), "snubbl" );
	deepEqual( Stem("snubblande"), "snubbl" );
	deepEqual( Stem("snubbor"), "snubb" );
	deepEqual( Stem("snud"), "snud" );
	deepEqual( Stem("snudda"), "snudd" );
	deepEqual( Stem("snuddade"), "snudd" );
	deepEqual( Stem("snuddande"), "snudd" );
	deepEqual( Stem("snuddat"), "snudd" );
	deepEqual( Stem("snuffe"), "snuff" );
	deepEqual( Stem("snufva"), "snufv" );
	deepEqual( Stem("snuggan"), "snuggan" );
	deepEqual( Stem("snurra"), "snurr" );
	deepEqual( Stem("snurrade"), "snurr" );
	deepEqual( Stem("snurrar"), "snurr" );
	deepEqual( Stem("snus"), "snus" );
	deepEqual( Stem("snusa"), "snus" );
	deepEqual( Stem("snusade"), "snus" );
	deepEqual( Stem("snusburken"), "snusburk" );
	deepEqual( Stem("snusbutelj"), "snusbutelj" );
	deepEqual( Stem("snusbuteljer"), "snusbutelj" );
	deepEqual( Stem("snusdosa"), "snusdos" );
	deepEqual( Stem("snusdosan"), "snusdosan" );
	deepEqual( Stem("snusige"), "snus" );
	deepEqual( Stem("snusningar"), "snusning" );
	deepEqual( Stem("snuspaket"), "snuspaket" );
	deepEqual( Stem("snuva"), "snuv" );
	deepEqual( Stem("snyft"), "snyft" );
	deepEqual( Stem("snyfta"), "snyft" );
	deepEqual( Stem("snyftade"), "snyft" );
	deepEqual( Stem("snyftande"), "snyft" );
	deepEqual( Stem("snyftat"), "snyft" );
	deepEqual( Stem("snyftning"), "snyftning" );
	deepEqual( Stem("snyftningar"), "snyftning" );
	deepEqual( Stem("snyftningarna"), "snyftning" );
	deepEqual( Stem("snygg"), "snygg" );
	deepEqual( Stem("snygga"), "snygg" );
	deepEqual( Stem("snyggt"), "snygg" );
	deepEqual( Stem("snyta"), "snyt" );
	deepEqual( Stem("snäc"), "snäc" );
	deepEqual( Stem("snäcka"), "snäck" );
	deepEqual( Stem("snäckor"), "snäck" );
	deepEqual( Stem("snäckorna"), "snäck" );
	deepEqual( Stem("snäll"), "snäll" );
	deepEqual( Stem("snälla"), "snäll" );
	deepEqual( Stem("snällaste"), "snäll" );
	deepEqual( Stem("snälle"), "snäll" );
	deepEqual( Stem("snällt"), "snällt" );
	deepEqual( Stem("snärja"), "snärj" );
	deepEqual( Stem("snärjd"), "snärjd" );
	deepEqual( Stem("snärjer"), "snärj" );
	deepEqual( Stem("snärjt"), "snärjt" );
	deepEqual( Stem("snärt"), "snärt" );
	deepEqual( Stem("snärtade"), "snärt" );
	deepEqual( Stem("snärtat"), "snärt" );
	deepEqual( Stem("snäsige"), "snäs" );
	deepEqual( Stem("snäsigt"), "snäs" );
	deepEqual( Stem("snäste"), "snäst" );
	deepEqual( Stem("snäv"), "snäv" );
	deepEqual( Stem("snäva"), "snäv" );
	deepEqual( Stem("snål"), "snål" );
	deepEqual( Stem("snåla"), "snål" );
	deepEqual( Stem("snålhet"), "snål" );
	deepEqual( Stem("snår"), "snår" );
	deepEqual( Stem("snåren"), "snår" );
	deepEqual( Stem("snårets"), "snåret" );
	deepEqual( Stem("snö"), "snö" );
	deepEqual( Stem("snöa"), "snöa" );
	deepEqual( Stem("snöade"), "snöad" );
	deepEqual( Stem("snöar"), "snöar" );
	deepEqual( Stem("snöat"), "snöat" );
	deepEqual( Stem("snöberg"), "snöberg" );
	deepEqual( Stem("snöduken"), "snöduk" );
	deepEqual( Stem("snögatorna"), "snögat" );
	deepEqual( Stem("snökorn"), "snökorn" );
	deepEqual( Stem("snöliljan"), "snöliljan" );
	deepEqual( Stem("snön"), "snön" );
	deepEqual( Stem("snöping"), "snöping" );
	deepEqual( Stem("snöplig"), "snöp" );
	deepEqual( Stem("snöpliga"), "snöp" );
	deepEqual( Stem("snöpligt"), "snöp" );
	deepEqual( Stem("snörde"), "snörd" );
	deepEqual( Stem("snöre"), "snör" );
	deepEqual( Stem("snören"), "snör" );
	deepEqual( Stem("snöret"), "snöret" );
	deepEqual( Stem("snörpte"), "snörpt" );
	deepEqual( Stem("snörräta"), "snörrät" );
	deepEqual( Stem("snörvlar"), "snörvl" );
	deepEqual( Stem("snösmältningsdag"), "snösmältningsdag" );
	deepEqual( Stem("snöt"), "snöt" );
	deepEqual( Stem("snövind"), "snövind" );
	deepEqual( Stem("snövit"), "snövit" );
	deepEqual( Stem("soare"), "soar" );
	deepEqual( Stem("soareer"), "soare" );
	deepEqual( Stem("sociala"), "social" );
	deepEqual( Stem("societet"), "societet" );
	deepEqual( Stem("societeten"), "societet" );
	deepEqual( Stem("societetens"), "societet" );
	deepEqual( Stem("societeter"), "societet" );
	deepEqual( Stem("societetsdam"), "societetsdam" );
	deepEqual( Stem("societetsnöjena"), "societetsnöjen" );
	deepEqual( Stem("societetsskönheterna"), "societetsskön" );
	deepEqual( Stem("socken"), "sock" );
	deepEqual( Stem("sockenbor"), "sockenb" );
	deepEqual( Stem("sockenkyrkan"), "sockenkyrkan" );
	deepEqual( Stem("socker"), "sock" );
	deepEqual( Stem("sockerbarn"), "sockerbarn" );
	deepEqual( Stem("sockerbit"), "sockerbit" );
	deepEqual( Stem("sockerbitarna"), "sockerbit" );
	deepEqual( Stem("sockerdocka"), "sockerdock" );
	deepEqual( Stem("sockerdricka"), "sockerdrick" );
	deepEqual( Stem("sockerhjärta"), "sockerhjärt" );
	deepEqual( Stem("sockers"), "socker" );
	deepEqual( Stem("sockersöta"), "sockersöt" );
	deepEqual( Stem("sockertopp"), "sockertopp" );
	deepEqual( Stem("sockerurnorna"), "sockerurn" );
	deepEqual( Stem("socknarna"), "sockn" );
	deepEqual( Stem("socknen"), "sockn" );
	deepEqual( Stem("socknens"), "sockn" );
	deepEqual( Stem("sof"), "sof" );
	deepEqual( Stem("soffa"), "soff" );
	deepEqual( Stem("soffan"), "soffan" );
	deepEqual( Stem("soffdynan"), "soffdynan" );
	deepEqual( Stem("soffhörn"), "soffhörn" );
	deepEqual( Stem("soffhörnet"), "soffhörnet" );
	deepEqual( Stem("soffkarmen"), "soffkarm" );
	deepEqual( Stem("sofflock"), "sofflock" );
	deepEqual( Stem("sofforna"), "soff" );
	deepEqual( Stem("sofföverdraget"), "sofföverdraget" );
	deepEqual( Stem("sofi"), "sofi" );
	deepEqual( Stem("sofia"), "sofi" );
	deepEqual( Stem("sofie"), "sofi" );
	deepEqual( Stem("sofielund"), "sofielund" );
	deepEqual( Stem("sofies"), "sofi" );
	deepEqual( Stem("sofismer"), "sofism" );
	deepEqual( Stem("sofisterier"), "sofisteri" );
	deepEqual( Stem("sofva"), "sofv" );
	deepEqual( Stem("sofver"), "sofv" );
	deepEqual( Stem("soien"), "soien" );
	deepEqual( Stem("soker"), "sok" );
	deepEqual( Stem("sokrates"), "sokrat" );
	deepEqual( Stem("sokt"), "sokt" );
	deepEqual( Stem("soktc"), "soktc" );
	deepEqual( Stem("sokte"), "sokt" );
	deepEqual( Stem("sol"), "sol" );
	deepEqual( Stem("sola"), "sol" );
	deepEqual( Stem("solade"), "sol" );
	deepEqual( Stem("solar"), "sol" );
	deepEqual( Stem("solbelyst"), "solbelyst" );
	deepEqual( Stem("solblixt"), "solblixt" );
	deepEqual( Stem("solbränd"), "solbränd" );
	deepEqual( Stem("soldat"), "sold" );
	deepEqual( Stem("soldatens"), "soldat" );
	deepEqual( Stem("soldater"), "soldat" );
	deepEqual( Stem("soldaterna"), "soldat" );
	deepEqual( Stem("soldatfilosofi"), "soldatfilosofi" );
	deepEqual( Stem("solen"), "sol" );
	deepEqual( Stem("solens"), "sol" );
	deepEqual( Stem("solglimtarna"), "solglimt" );
	deepEqual( Stem("solid"), "solid" );
	deepEqual( Stem("soliditet"), "soliditet" );
	deepEqual( Stem("solig"), "sol" );
	deepEqual( Stem("soliga"), "sol" );
	deepEqual( Stem("soligare"), "sol" );
	deepEqual( Stem("soligt"), "sol" );
	deepEqual( Stem("solkiga"), "solk" );
	deepEqual( Stem("solljuset"), "solljuset" );
	deepEqual( Stem("solnedgångarna"), "solnedgång" );
	deepEqual( Stem("solnedgången"), "solnedgång" );
	deepEqual( Stem("solsidan"), "solsidan" );
	deepEqual( Stem("solsken"), "solsk" );
	deepEqual( Stem("solskenet"), "solskenet" );
	deepEqual( Stem("solskensdag"), "solskensdag" );
	deepEqual( Stem("solskensdagar"), "solskensdag" );
	deepEqual( Stem("solskensdagarna"), "solskensdag" );
	deepEqual( Stem("solskensvarma"), "solskensvarm" );
	deepEqual( Stem("solskimmer"), "solskimm" );
	deepEqual( Stem("solstrimma"), "solstrimm" );
	deepEqual( Stem("solstrimman"), "solstrimman" );
	deepEqual( Stem("solstrålar"), "solstrål" );
	deepEqual( Stem("solstrålarna"), "solstrål" );
	deepEqual( Stem("solstrålarnas"), "solstrål" );
	deepEqual( Stem("solstrålarne"), "solstrål" );
	deepEqual( Stem("solstråle"), "solstrål" );
	deepEqual( Stem("soltorka"), "soltork" );
	deepEqual( Stem("soltorkad"), "soltork" );
	deepEqual( Stem("solupp"), "solupp" );
	deepEqual( Stem("soluppgång"), "soluppgång" );
	deepEqual( Stem("soluppgången"), "soluppgång" );
	deepEqual( Stem("som"), "som" );
	deepEqual( Stem("somliga"), "som" );
	deepEqual( Stem("sommar"), "somm" );
	deepEqual( Stem("sommaraftnarna"), "sommaraftn" );
	deepEqual( Stem("sommarafton"), "sommarafton" );
	deepEqual( Stem("sommarblå"), "sommarblå" );
	deepEqual( Stem("sommarbyxor"), "sommarbyx" );
	deepEqual( Stem("sommardag"), "sommardag" );
	deepEqual( Stem("sommardagens"), "sommardag" );
	deepEqual( Stem("sommaren"), "somm" );
	deepEqual( Stem("sommarens"), "somm" );
	deepEqual( Stem("sommarfarväl"), "sommarfarväl" );
	deepEqual( Stem("sommarfjäril"), "sommarfjäril" );
	deepEqual( Stem("sommarfloret"), "sommarfloret" );
	deepEqual( Stem("sommargrönskan"), "sommargrönskan" );
	deepEqual( Stem("sommarhem"), "sommarhem" );
	deepEqual( Stem("sommarhettan"), "sommarhettan" );
	deepEqual( Stem("sommarklänning"), "sommarklänning" );
	deepEqual( Stem("sommarklänningar"), "sommarklänning" );
	deepEqual( Stem("sommarkostym"), "sommarkostym" );
	deepEqual( Stem("sommarkvällen"), "sommarkväll" );
	deepEqual( Stem("sommarlovet"), "sommarlovet" );
	deepEqual( Stem("sommarmoln"), "sommarmoln" );
	deepEqual( Stem("sommarmorgnarna"), "sommarmorgn" );
	deepEqual( Stem("sommarmorgonen"), "sommarmorgon" );
	deepEqual( Stem("sommarn"), "sommarn" );
	deepEqual( Stem("sommarnattsmörkret"), "sommarnattsmörkret" );
	deepEqual( Stem("sommarnattsskymningen"), "sommarnattsskymning" );
	deepEqual( Stem("sommarns"), "sommarn" );
	deepEqual( Stem("sommarnätter"), "sommarnät" );
	deepEqual( Stem("sommarnöje"), "sommarnöj" );
	deepEqual( Stem("sommarnöjet"), "sommarnöjet" );
	deepEqual( Stem("sommarrestaurangerna"), "sommarrestaurang" );
	deepEqual( Stem("sommarrum"), "sommarrum" );
	deepEqual( Stem("sommarsöndag"), "sommarsöndag" );
	deepEqual( Stem("sommartiden"), "sommartid" );
	deepEqual( Stem("sommarvindem"), "sommarvindem" );
	deepEqual( Stem("sommarvinden"), "sommarvind" );
	deepEqual( Stem("somna"), "somn" );
	deepEqual( Stem("somnade"), "somn" );
	deepEqual( Stem("somnar"), "somn" );
	deepEqual( Stem("somnat"), "somn" );
	deepEqual( Stem("somnen"), "somn" );
	deepEqual( Stem("somrarna"), "somr" );
	deepEqual( Stem("somras"), "somr" );
	deepEqual( Stem("somrnaren"), "somrn" );
	deepEqual( Stem("son"), "son" );
	deepEqual( Stem("sonderna"), "sond" );
	deepEqual( Stem("sonen"), "son" );
	deepEqual( Stem("sonens"), "son" );
	deepEqual( Stem("sonett"), "sonet" );
	deepEqual( Stem("sonhustru"), "sonhustru" );
	deepEqual( Stem("sonn"), "sonn" );
	deepEqual( Stem("sons"), "son" );
	deepEqual( Stem("sonson"), "sonson" );
	deepEqual( Stem("sont"), "sont" );
	deepEqual( Stem("sop"), "sop" );
	deepEqual( Stem("sopa"), "sop" );
	deepEqual( Stem("sopade"), "sop" );
	deepEqual( Stem("soppa"), "sopp" );
	deepEqual( Stem("soppan"), "soppan" );
	deepEqual( Stem("soppor"), "sopp" );
	deepEqual( Stem("soppskålen"), "soppskål" );
	deepEqual( Stem("sorg"), "sorg" );
	deepEqual( Stem("sorgbrev"), "sorgbrev" );
	deepEqual( Stem("sorgbundenhet"), "sorgbunden" );
	deepEqual( Stem("sorgdräkt"), "sorgdräk" );
	deepEqual( Stem("sorgefärd"), "sorgefärd" );
	deepEqual( Stem("sorgehuset"), "sorgehuset" );
	deepEqual( Stem("sorgen"), "sorg" );
	deepEqual( Stem("sorgens"), "sorg" );
	deepEqual( Stem("sorger"), "sorg" );
	deepEqual( Stem("sorgesam"), "sorgesam" );
	deepEqual( Stem("sorgfälliga"), "sorgfäl" );
	deepEqual( Stem("sorgfälligare"), "sorgfäl" );
	deepEqual( Stem("sorgfälligaste"), "sorgfäl" );
	deepEqual( Stem("sorgfällighet"), "sorgfäl" );
	deepEqual( Stem("sorgfälligt"), "sorgfäl" );
	deepEqual( Stem("sorglig"), "sorg" );
	deepEqual( Stem("sorgliga"), "sorg" );
	deepEqual( Stem("sorgligt"), "sorg" );
	deepEqual( Stem("sorgmodigaste"), "sorgmod" );
	deepEqual( Stem("sorgmodigt"), "sorgmod" );
	deepEqual( Stem("sorgse"), "sorgs" );
	deepEqual( Stem("sorgsen"), "sorgs" );
	deepEqual( Stem("sorgsenhet"), "sorgsen" );
	deepEqual( Stem("sorgset"), "sorgset" );
	deepEqual( Stem("sorgsna"), "sorgsn" );
	deepEqual( Stem("sorl"), "sorl" );
	deepEqual( Stem("sorlade"), "sorl" );
	deepEqual( Stem("sorlande"), "sorl" );
	deepEqual( Stem("sorlet"), "sorlet" );
	deepEqual( Stem("sorm"), "sorm" );
	deepEqual( Stem("sorn"), "sorn" );
	deepEqual( Stem("sort"), "sort" );
	deepEqual( Stem("sorten"), "sort" );
	deepEqual( Stem("sortens"), "sort" );
	deepEqual( Stem("sorter"), "sort" );
	deepEqual( Stem("sorterade"), "sorter" );
	deepEqual( Stem("sorters"), "sorter" );
	deepEqual( Stem("sorts"), "sort" );
	deepEqual( Stem("sot"), "sot" );
	deepEqual( Stem("sotar"), "sot" );
	deepEqual( Stem("sotarfrun"), "sotarfrun" );
	deepEqual( Stem("sotenäs"), "sotenäs" );
	deepEqual( Stem("sotflammiga"), "sotflamm" );
	deepEqual( Stem("sottiser"), "sottis" );
	deepEqual( Stem("sov"), "sov" );
	deepEqual( Stem("sova"), "sov" );
	deepEqual( Stem("sovande"), "sov" );
	deepEqual( Stem("sover"), "sov" );
	deepEqual( Stem("sovit"), "sovit" );
	deepEqual( Stem("sovo"), "sovo" );
	deepEqual( Stem("sovrum"), "sovrum" );
	deepEqual( Stem("sovrummen"), "sovrumm" );
	deepEqual( Stem("sovrummet"), "sovrummet" );
	deepEqual( Stem("spad"), "spad" );
	deepEqual( Stem("spada"), "spad" );
	deepEqual( Stem("spadar"), "spad" );
	deepEqual( Stem("spade"), "spad" );
	deepEqual( Stem("spader"), "spad" );
	deepEqual( Stem("spaderdam"), "spaderdam" );
	deepEqual( Stem("spak"), "spak" );
	deepEqual( Stem("spakt"), "spakt" );
	deepEqual( Stem("spana"), "span" );
	deepEqual( Stem("spanade"), "span" );
	deepEqual( Stem("spanande"), "span" );
	deepEqual( Stem("spanat"), "span" );
	deepEqual( Stem("spaning"), "spaning" );
	deepEqual( Stem("spaningen"), "spaning" );
	deepEqual( Stem("spanmål"), "spanmål" );
	deepEqual( Stem("spann"), "spann" );
	deepEqual( Stem("spannmålen"), "spannmål" );
	deepEqual( Stem("spansk"), "spansk" );
	deepEqual( Stem("spanska"), "spansk" );
	deepEqual( Stem("spar"), "spar" );
	deepEqual( Stem("spara"), "spar" );
	deepEqual( Stem("sparade"), "spar" );
	deepEqual( Stem("sparar"), "spar" );
	deepEqual( Stem("sparat"), "spar" );
	deepEqual( Stem("sparka"), "spark" );
	deepEqual( Stem("sparkad"), "spark" );
	deepEqual( Stem("sparkade"), "spark" );
	deepEqual( Stem("sparkar"), "spark" );
	deepEqual( Stem("sparkassa"), "sparkass" );
	deepEqual( Stem("sparkassorna"), "sparkass" );
	deepEqual( Stem("sparkat"), "spark" );
	deepEqual( Stem("sparlakan"), "sparlakan" );
	deepEqual( Stem("sparsamhet"), "sparsam" );
	deepEqual( Stem("sparsamhetsskäl"), "sparsamhetsskäl" );
	deepEqual( Stem("sparsamt"), "sparsamt" );
	deepEqual( Stem("sparstyfver"), "sparstyfv" );
	deepEqual( Stem("spartanskt"), "spartansk" );
	deepEqual( Stem("sparv"), "sparv" );
	deepEqual( Stem("sparvar"), "sparv" );
	deepEqual( Stem("sparvarna"), "sparv" );
	deepEqual( Stem("spasmer"), "spasm" );
	deepEqual( Stem("spasmodiskt"), "spasmodisk" );
	deepEqual( Stem("spatsera"), "spatser" );
	deepEqual( Stem("spatserade"), "spatser" );
	deepEqual( Stem("spatserat"), "spatser" );
	deepEqual( Stem("spatserfärd"), "spatserfärd" );
	deepEqual( Stem("spatserrock"), "spatserrock" );
	deepEqual( Stem("spcgel"), "spcgel" );
	deepEqual( Stem("spcjadc"), "spcjadc" );
	deepEqual( Stem("spe"), "spe" );
	deepEqual( Stem("specerihandlare"), "specerihandl" );
	deepEqual( Stem("specialisera"), "specialiser" );
	deepEqual( Stem("specialisten"), "specialist" );
	deepEqual( Stem("specialitet"), "specialitet" );
	deepEqual( Stem("specialstudier"), "specialstudi" );
	deepEqual( Stem("specie"), "speci" );
	deepEqual( Stem("speciella"), "speciell" );
	deepEqual( Stem("speg"), "speg" );
	deepEqual( Stem("spege"), "speg" );
	deepEqual( Stem("spegehl"), "spegehl" );
	deepEqual( Stem("spegel"), "spegel" );
	deepEqual( Stem("spegelbilden"), "spegelbild" );
	deepEqual( Stem("spegelbordet"), "spegelbordet" );
	deepEqual( Stem("spegelglaset"), "spegelglaset" );
	deepEqual( Stem("spegellåda"), "spegellåd" );
	deepEqual( Stem("spegeln"), "spegeln" );
	deepEqual( Stem("spegelyta"), "spegelyt" );
	deepEqual( Stem("spegla"), "spegl" );
	deepEqual( Stem("speglade"), "spegl" );
	deepEqual( Stem("speglades"), "spegl" );
	deepEqual( Stem("speglande"), "spegl" );
	deepEqual( Stem("speglar"), "spegl" );
	deepEqual( Stem("speja"), "spej" );
	deepEqual( Stem("spejade"), "spej" );
	deepEqual( Stem("spejande"), "spej" );
	deepEqual( Stem("spejeri"), "spejeri" );
	deepEqual( Stem("spektakel"), "spektakel" );
	deepEqual( Stem("spektakelbiljett"), "spektakelbiljet" );
	deepEqual( Stem("spektakeldagen"), "spektakeldag" );
	deepEqual( Stem("spektakeltiden"), "spektakeltid" );
	deepEqual( Stem("spektakler"), "spektakl" );
	deepEqual( Stem("spektaklet"), "spektaklet" );
	deepEqual( Stem("spektoren"), "spektor" );
	deepEqual( Stem("spekulant"), "spekulant" );
	deepEqual( Stem("spekulation"), "spekulation" );
	deepEqual( Stem("spekulationer"), "spekulation" );
	deepEqual( Stem("spekulationerna"), "spekulation" );
	deepEqual( Stem("spekulera"), "spekuler" );
	deepEqual( Stem("spekulerade"), "spekuler" );
	deepEqual( Stem("spel"), "spel" );
	deepEqual( Stem("spela"), "spel" );
	deepEqual( Stem("spelade"), "spel" );
	deepEqual( Stem("spelande"), "spel" );
	deepEqual( Stem("spelar"), "spel" );
	deepEqual( Stem("spelat"), "spel" );
	deepEqual( Stem("spelbordet"), "spelbordet" );
	deepEqual( Stem("spelct"), "spelct" );
	deepEqual( Stem("spelen"), "spel" );
	deepEqual( Stem("spelet"), "spelet" );
	deepEqual( Stem("spelevink"), "spelevink" );
	deepEqual( Stem("spelfåglar"), "spelfågl" );
	deepEqual( Stem("spelkort"), "spelkort" );
	deepEqual( Stem("spelman"), "spelman" );
	deepEqual( Stem("spelmän"), "spelmän" );
	deepEqual( Stem("spelpartier"), "spelparti" );
	deepEqual( Stem("spelsen"), "spels" );
	deepEqual( Stem("spelte"), "spelt" );
	deepEqual( Stem("spelvärdarna"), "spelvärd" );
	deepEqual( Stem("spenaten"), "spenat" );
	deepEqual( Stem("spenatkarotten"), "spenatkarot" );
	deepEqual( Stem("spencer"), "spenc" );
	deepEqual( Stem("spens"), "spen" );
	deepEqual( Stem("spenslig"), "spens" );
	deepEqual( Stem("spensliga"), "spens" );
	deepEqual( Stem("spets"), "spet" );
	deepEqual( Stem("spetsade"), "spets" );
	deepEqual( Stem("spetsades"), "spets" );
	deepEqual( Stem("spetsar"), "spets" );
	deepEqual( Stem("spetsen"), "spets" );
	deepEqual( Stem("spetsglas"), "spetsgl" );
	deepEqual( Stem("spetsig"), "spets" );
	deepEqual( Stem("spetsiga"), "spets" );
	deepEqual( Stem("spetsigaste"), "spets" );
	deepEqual( Stem("spetsigt"), "spets" );
	deepEqual( Stem("spetskantade"), "spetskant" );
	deepEqual( Stem("spetskrage"), "spetskrag" );
	deepEqual( Stem("spickeskinkan"), "spickeskinkan" );
	deepEqual( Stem("spik"), "spik" );
	deepEqual( Stem("spiken"), "spik" );
	deepEqual( Stem("spilla"), "spill" );
	deepEqual( Stem("spilld"), "spilld" );
	deepEqual( Stem("spillda"), "spilld" );
	deepEqual( Stem("spilles"), "spill" );
	deepEqual( Stem("spillning"), "spillning" );
	deepEqual( Stem("spillror"), "spillr" );
	deepEqual( Stem("spillrorna"), "spillr" );
	deepEqual( Stem("spiltorna"), "spilt" );
	deepEqual( Stem("spindel"), "spindel" );
	deepEqual( Stem("spindellika"), "spindellik" );
	deepEqual( Stem("spindeln"), "spindeln" );
	deepEqual( Stem("spindelnät"), "spindelnät" );
	deepEqual( Stem("spindelväv"), "spindelväv" );
	deepEqual( Stem("spindelvävar"), "spindelväv" );
	deepEqual( Stem("spindlar"), "spindl" );
	deepEqual( Stem("spindlarnas"), "spindl" );
	deepEqual( Stem("spinna"), "spinn" );
	deepEqual( Stem("spinnas"), "spinn" );
	deepEqual( Stem("spinner"), "spinn" );
	deepEqual( Stem("spinnerskans"), "spinnerskan" );
	deepEqual( Stem("spinnrock"), "spinnrock" );
	deepEqual( Stem("spinnrocken"), "spinnrock" );
	deepEqual( Stem("spion"), "spion" );
	deepEqual( Stem("spionera"), "spioner" );
	deepEqual( Stem("spionerade"), "spioner" );
	deepEqual( Stem("spionerat"), "spioner" );
	deepEqual( Stem("spira"), "spir" );
	deepEqual( Stem("spirade"), "spir" );
	deepEqual( Stem("spiralfjädrar"), "spiralfjädr" );
	deepEqual( Stem("spirande"), "spir" );
	deepEqual( Stem("spirat"), "spir" );
	deepEqual( Stem("spirituosa"), "spirituos" );
	deepEqual( Stem("spis"), "spis" );
	deepEqual( Stem("spisade"), "spis" );
	deepEqual( Stem("spisat"), "spis" );
	deepEqual( Stem("spiseln"), "spiseln" );
	deepEqual( Stem("spiselvärmen"), "spiselvärm" );
	deepEqual( Stem("spisen"), "spis" );
	deepEqual( Stem("spiskanten"), "spiskant" );
	deepEqual( Stem("spisvrån"), "spisvrån" );
	deepEqual( Stem("spjerna"), "spjern" );
	deepEqual( Stem("spjernade"), "spjern" );
	deepEqual( Stem("spjut"), "spjut" );
	deepEqual( Stem("spjutsäng"), "spjutsäng" );
	deepEqual( Stem("spjäll"), "spjäll" );
	deepEqual( Stem("spjärnade"), "spjärn" );
	deepEqual( Stem("spleen"), "spleen" );
	deepEqual( Stem("splitter"), "splitt" );
	deepEqual( Stem("spolen"), "spol" );
	deepEqual( Stem("spoling"), "spoling" );
	deepEqual( Stem("spord"), "spord" );
	deepEqual( Stem("sporer"), "spor" );
	deepEqual( Stem("sporra"), "sporr" );
	deepEqual( Stem("sporrar"), "sporr" );
	deepEqual( Stem("sporre"), "sporr" );
	deepEqual( Stem("sport"), "sport" );
	deepEqual( Stem("spotsk"), "spotsk" );
	deepEqual( Stem("spotskt"), "spotsk" );
	deepEqual( Stem("spotta"), "spott" );
	deepEqual( Stem("spottade"), "spott" );
	deepEqual( Stem("spottstyfver"), "spottstyfv" );
	deepEqual( Stem("sprack"), "sprack" );
	deepEqual( Stem("sprakade"), "sprak" );
	deepEqual( Stem("sprakande"), "sprak" );
	deepEqual( Stem("sprang"), "sprang" );
	deepEqual( Stem("spratt"), "spratt" );
	deepEqual( Stem("sprattlade"), "sprattl" );
	deepEqual( Stem("spred"), "spred" );
	deepEqual( Stem("spredo"), "spredo" );
	deepEqual( Stem("spredos"), "spredo" );
	deepEqual( Stem("spretade"), "spret" );
	deepEqual( Stem("spretande"), "spret" );
	deepEqual( Stem("spricka"), "sprick" );
	deepEqual( Stem("spricker"), "sprick" );
	deepEqual( Stem("sprid"), "sprid" );
	deepEqual( Stem("sprida"), "sprid" );
	deepEqual( Stem("spridas"), "sprid" );
	deepEqual( Stem("spridd"), "spridd" );
	deepEqual( Stem("spridda"), "spridd" );
	deepEqual( Stem("spridt"), "spridt" );
	deepEqual( Stem("spring"), "spring" );
	deepEqual( Stem("springa"), "spring" );
	deepEqual( Stem("springande"), "spring" );
	deepEqual( Stem("springandes"), "spring" );
	deepEqual( Stem("springare"), "spring" );
	deepEqual( Stem("springbrunn"), "springbrun" );
	deepEqual( Stem("springer"), "spring" );
	deepEqual( Stem("springet"), "springet" );
	deepEqual( Stem("springkäringar"), "springkäring" );
	deepEqual( Stem("springorna"), "spring" );
	deepEqual( Stem("springpojke"), "springpojk" );
	deepEqual( Stem("springrer"), "springr" );
	deepEqual( Stem("spriseglet"), "spriseglet" );
	deepEqual( Stem("sprit"), "sprit" );
	deepEqual( Stem("sprita"), "sprit" );
	deepEqual( Stem("spriten"), "sprit" );
	deepEqual( Stem("spritt"), "spritt" );
	deepEqual( Stem("spritta"), "spritt" );
	deepEqual( Stem("sprittande"), "spritt" );
	deepEqual( Stem("spritter"), "spritt" );
	deepEqual( Stem("sprittning"), "sprittning" );
	deepEqual( Stem("sprittningen"), "sprittning" );
	deepEqual( Stem("sprucken"), "spruck" );
	deepEqual( Stem("sprucket"), "sprucket" );
	deepEqual( Stem("spruckit"), "spruckit" );
	deepEqual( Stem("spruckna"), "spruckn" );
	deepEqual( Stem("sprungit"), "sprungit" );
	deepEqual( Stem("sprungo"), "sprungo" );
	deepEqual( Stem("spruta"), "sprut" );
	deepEqual( Stem("sprutade"), "sprut" );
	deepEqual( Stem("sprutto"), "sprutto" );
	deepEqual( Stem("spräcklig"), "spräck" );
	deepEqual( Stem("spräckliga"), "spräck" );
	deepEqual( Stem("spräckt"), "spräck" );
	deepEqual( Stem("spräcktes"), "spräck" );
	deepEqual( Stem("spränga"), "spräng" );
	deepEqual( Stem("sprängande"), "spräng" );
	deepEqual( Stem("sprängas"), "spräng" );
	deepEqual( Stem("sprängd"), "spräng" );
	deepEqual( Stem("sprängda"), "spräng" );
	deepEqual( Stem("sprängdes"), "spräng" );
	deepEqual( Stem("sprängs"), "spräng" );
	deepEqual( Stem("sprätt"), "sprätt" );
	deepEqual( Stem("sprättar"), "sprätt" );
	deepEqual( Stem("språk"), "språk" );
	deepEqual( Stem("språka"), "språk" );
	deepEqual( Stem("språkade"), "språk" );
	deepEqual( Stem("språkas"), "språk" );
	deepEqual( Stem("språkbruk"), "språkbruk" );
	deepEqual( Stem("språket"), "språket" );
	deepEqual( Stem("språkets"), "språket" );
	deepEqual( Stem("språklig"), "språk" );
	deepEqual( Stem("språkliga"), "språk" );
	deepEqual( Stem("språklärare"), "språklär" );
	deepEqual( Stem("språklåda"), "språklåd" );
	deepEqual( Stem("språksam"), "språksam" );
	deepEqual( Stem("språng"), "språng" );
	deepEqual( Stem("språnget"), "språnget" );
	deepEqual( Stem("spröd"), "spröd" );
	deepEqual( Stem("spröda"), "spröd" );
	deepEqual( Stem("spröt"), "spröt" );
	deepEqual( Stem("sprött"), "sprött" );
	deepEqual( Stem("spunnet"), "spunnet" );
	deepEqual( Stem("spydigt"), "spyd" );
	deepEqual( Stem("späd"), "späd" );
	deepEqual( Stem("späda"), "späd" );
	deepEqual( Stem("spädare"), "späd" );
	deepEqual( Stem("spädaste"), "späd" );
	deepEqual( Stem("spädde"), "spädd" );
	deepEqual( Stem("späder"), "späd" );
	deepEqual( Stem("spädes"), "späd" );
	deepEqual( Stem("späka"), "späk" );
	deepEqual( Stem("spänd"), "spänd" );
	deepEqual( Stem("spända"), "spänd" );
	deepEqual( Stem("spände"), "spänd" );
	deepEqual( Stem("spändes"), "spänd" );
	deepEqual( Stem("spändt"), "spänd" );
	deepEqual( Stem("spänn"), "spänn" );
	deepEqual( Stem("spänna"), "spänn" );
	deepEqual( Stem("spännande"), "spänn" );
	deepEqual( Stem("spänner"), "spänn" );
	deepEqual( Stem("spänning"), "spänning" );
	deepEqual( Stem("spänningen"), "spänning" );
	deepEqual( Stem("spänstig"), "spänst" );
	deepEqual( Stem("spänstighet"), "spänst" );
	deepEqual( Stem("spänt"), "spänt" );
	deepEqual( Stem("spänts"), "spänt" );
	deepEqual( Stem("spärrad"), "spärr" );
	deepEqual( Stem("spärrade"), "spärr" );
	deepEqual( Stem("spärras"), "spärr" );
	deepEqual( Stem("spådde"), "spådd" );
	deepEqual( Stem("spånadsgummor"), "spånadsgumm" );
	deepEqual( Stem("spår"), "spår" );
	deepEqual( Stem("spåra"), "spår" );
	deepEqual( Stem("spårat"), "spår" );
	deepEqual( Stem("spåren"), "spår" );
	deepEqual( Stem("spåret"), "spåret" );
	deepEqual( Stem("spårhund"), "spårhund" );
	deepEqual( Stem("spårhundar"), "spårhund" );
	deepEqual( Stem("spårvagn"), "spårvagn" );
	deepEqual( Stem("spårvagnarna"), "spårvagn" );
	deepEqual( Stem("spårvagnarnas"), "spårvagn" );
	deepEqual( Stem("spårvagnen"), "spårvagn" );
	deepEqual( Stem("spått"), "spått" );
	deepEqual( Stem("spö"), "spö" );
	deepEqual( Stem("spöet"), "spöet" );
	deepEqual( Stem("spöka"), "spök" );
	deepEqual( Stem("spökade"), "spök" );
	deepEqual( Stem("spökande"), "spök" );
	deepEqual( Stem("spöke"), "spök" );
	deepEqual( Stem("spökelse"), "spök" );
	deepEqual( Stem("spöken"), "spök" );
	deepEqual( Stem("spökeri"), "spökeri" );
	deepEqual( Stem("spöklikt"), "spöklik" );
	deepEqual( Stem("spökskepp"), "spökskepp" );
	deepEqual( Stem("spörjande"), "spörj" );
	deepEqual( Stem("sqm"), "sqm" );
	deepEqual( Stem("sqvallersjuka"), "sqvallersjuk" );
	deepEqual( Stem("sqvallra"), "sqvallr" );
	deepEqual( Stem("sqvalpa"), "sqvalp" );
	deepEqual( Stem("sqvalpande"), "sqvalp" );
	deepEqual( Stem("srapplar"), "srappl" );
	deepEqual( Stem("sräste"), "sräst" );
	deepEqual( Stem("ssterrikeochomexpedi"), "ssterrikeochomexpedi" );
	deepEqual( Stem("st"), "st" );
	deepEqual( Stem("sta"), "sta" );
	deepEqual( Stem("staaff"), "staaff" );
	deepEqual( Stem("staaffs"), "staaff" );
	deepEqual( Stem("stack"), "stack" );
	deepEqual( Stem("stackare"), "stack" );
	deepEqual( Stem("stackaren"), "stack" );
	deepEqual( Stem("stackarn"), "stackarn" );
	deepEqual( Stem("stackarna"), "stack" );
	deepEqual( Stem("stackars"), "stackar" );
	deepEqual( Stem("stacken"), "stack" );
	deepEqual( Stem("stackrarna"), "stackr" );
	deepEqual( Stem("stad"), "stad" );
	deepEqual( Stem("stadd"), "stadd" );
	deepEqual( Stem("stadda"), "stadd" );
	deepEqual( Stem("staden"), "stad" );
	deepEqual( Stem("stadens"), "stad" );
	deepEqual( Stem("stadfäst"), "stadfäst" );
	deepEqual( Stem("stadfästa"), "stadfäst" );
	deepEqual( Stem("stadfästelsen"), "stadfäst" );
	deepEqual( Stem("stadgade"), "stadg" );
	deepEqual( Stem("stadgadt"), "stadgad" );
	deepEqual( Stem("stadgar"), "stadg" );
	deepEqual( Stem("stadgat"), "stadg" );
	deepEqual( Stem("stadig"), "stad" );
	deepEqual( Stem("stadiga"), "stad" );
	deepEqual( Stem("stadigt"), "stad" );
	deepEqual( Stem("stadigvarande"), "stadigvar" );
	deepEqual( Stem("stadium"), "stadium" );
	deepEqual( Stem("stadsbo"), "stadsbo" );
	deepEqual( Stem("stadsbor"), "stadsb" );
	deepEqual( Stem("stadsdelarna"), "stadsdel" );
	deepEqual( Stem("stadsflickan"), "stadsflickan" );
	deepEqual( Stem("stadsflickorna"), "stadsflick" );
	deepEqual( Stem("stadsfullmäktig"), "stadsfullmäkt" );
	deepEqual( Stem("stadsfullmäktige"), "stadsfullmäkt" );
	deepEqual( Stem("stadspark"), "stadspark" );
	deepEqual( Stem("stadsporten"), "stadsport" );
	deepEqual( Stem("stadsvåning"), "stadsvåning" );
	deepEqual( Stem("staende"), "staend" );
	deepEqual( Stem("stafvade"), "stafv" );
	deepEqual( Stem("stagnelius"), "stagnelius" );
	deepEqual( Stem("staken"), "stak" );
	deepEqual( Stem("staket"), "staket" );
	deepEqual( Stem("staketet"), "staketet" );
	deepEqual( Stem("stal"), "stal" );
	deepEqual( Stem("stall"), "stall" );
	deepEqual( Stem("stallbroder"), "stallbrod" );
	deepEqual( Stem("stallbröder"), "stallbröd" );
	deepEqual( Stem("stallet"), "stallet" );
	deepEqual( Stem("stallgårdens"), "stallgård" );
	deepEqual( Stem("stallmng"), "stallmng" );
	deepEqual( Stem("stallmästargården"), "stallmästargård" );
	deepEqual( Stem("stam"), "stam" );
	deepEqual( Stem("stamfränderna"), "stamfränd" );
	deepEqual( Stem("stamhåll"), "stamhåll" );
	deepEqual( Stem("stamma"), "stamm" );
	deepEqual( Stem("stammade"), "stamm" );
	deepEqual( Stem("stammande"), "stamm" );
	deepEqual( Stem("stammar"), "stamm" );
	deepEqual( Stem("stammarna"), "stamm" );
	deepEqual( Stem("stammarnas"), "stamm" );
	deepEqual( Stem("stammen"), "stamm" );
	deepEqual( Stem("stammoder"), "stammod" );
	deepEqual( Stem("stammors"), "stammor" );
	deepEqual( Stem("stammy"), "stammy" );
	deepEqual( Stem("stampade"), "stamp" );
	deepEqual( Stem("stan"), "stan" );
	deepEqual( Stem("stand"), "stand" );
	deepEqual( Stem("standigt"), "stand" );
	deepEqual( Stem("stank"), "stank" );
	deepEqual( Stem("stanna"), "stann" );
	deepEqual( Stem("stannade"), "stann" );
	deepEqual( Stem("stannande"), "stann" );
	deepEqual( Stem("stannar"), "stann" );
	deepEqual( Stem("stannat"), "stann" );
	deepEqual( Stem("stanny"), "stanny" );
	deepEqual( Stem("stannys"), "stanny" );
	deepEqual( Stem("stapel"), "stapel" );
	deepEqual( Stem("stapeln"), "stapeln" );
	deepEqual( Stem("stapplande"), "stappl" );
	deepEqual( Stem("star"), "star" );
	deepEqual( Stem("stark"), "stark" );
	deepEqual( Stem("starka"), "stark" );
	deepEqual( Stem("starkare"), "stark" );
	deepEqual( Stem("starkast"), "stark" );
	deepEqual( Stem("starkaste"), "stark" );
	deepEqual( Stem("starkl"), "starkl" );
	deepEqual( Stem("starkt"), "stark" );
	deepEqual( Stem("stassen"), "stass" );
	deepEqual( Stem("stat"), "stat" );
	deepEqual( Stem("statardottern"), "statardot" );
	deepEqual( Stem("statarflickan"), "statarflickan" );
	deepEqual( Stem("staten"), "stat" );
	deepEqual( Stem("statens"), "stat" );
	deepEqual( Stem("station"), "station" );
	deepEqual( Stem("stationen"), "station" );
	deepEqual( Stem("stationer"), "station" );
	deepEqual( Stem("stationerna"), "station" );
	deepEqual( Stem("stations"), "station" );
	deepEqual( Stem("stationshuset"), "stationshuset" );
	deepEqual( Stem("stationshållet"), "stationshållet" );
	deepEqual( Stem("stationsinspek"), "stationsinspek" );
	deepEqual( Stem("stationsinspektor"), "stationsinspek" );
	deepEqual( Stem("stationsinspektoren"), "stationsinspektor" );
	deepEqual( Stem("statistiken"), "statistik" );
	deepEqual( Stem("statsråd"), "statsråd" );
	deepEqual( Stem("statstidningen"), "statstidning" );
	deepEqual( Stem("statt"), "statt" );
	deepEqual( Stem("staty"), "staty" );
	deepEqual( Stem("stav"), "stav" );
	deepEqual( Stem("stava"), "stav" );
	deepEqual( Stem("stavad"), "stav" );
	deepEqual( Stem("stavade"), "stav" );
	deepEqual( Stem("stavarna"), "stav" );
	deepEqual( Stem("stavning"), "stavning" );
	deepEqual( Stem("stavningsukas"), "stavningsuk" );
	deepEqual( Stem("stcekars"), "stcekar" );
	deepEqual( Stem("stearin"), "stearin" );
	deepEqual( Stem("stearinen"), "stearin" );
	deepEqual( Stem("steg"), "steg" );
	deepEqual( Stem("stege"), "steg" );
	deepEqual( Stem("stegem"), "stegem" );
	deepEqual( Stem("stegen"), "steg" );
	deepEqual( Stem("steget"), "steget" );
	deepEqual( Stem("stego"), "stego" );
	deepEqual( Stem("stegrade"), "stegr" );
	deepEqual( Stem("stegrades"), "stegr" );
	deepEqual( Stem("stegrar"), "stegr" );
	deepEqual( Stem("stegras"), "stegr" );
	deepEqual( Stem("stegs"), "steg" );
	deepEqual( Stem("steinlens"), "steinl" );
	deepEqual( Stem("stek"), "stek" );
	deepEqual( Stem("steken"), "stek" );
	deepEqual( Stem("stekos"), "steko" );
	deepEqual( Stem("stekt"), "stekt" );
	deepEqual( Stem("stekta"), "stekt" );
	deepEqual( Stem("stekte"), "stekt" );
	deepEqual( Stem("stel"), "stel" );
	deepEqual( Stem("stela"), "stel" );
	deepEqual( Stem("stelbent"), "stelbent" );
	deepEqual( Stem("stelfrusna"), "stelfrusn" );
	deepEqual( Stem("stelfrusne"), "stelfrusn" );
	deepEqual( Stem("stellan"), "stellan" );
	deepEqual( Stem("stellans"), "stellan" );
	deepEqual( Stem("stelnad"), "steln" );
	deepEqual( Stem("stelnade"), "steln" );
	deepEqual( Stem("stelnat"), "steln" );
	deepEqual( Stem("stelt"), "stelt" );
	deepEqual( Stem("sten"), "sten" );
	deepEqual( Stem("stenad"), "sten" );
	deepEqual( Stem("stenade"), "sten" );
	deepEqual( Stem("stenar"), "sten" );
	deepEqual( Stem("stenarna"), "sten" );
	deepEqual( Stem("stenarne"), "sten" );
	deepEqual( Stem("stenbilden"), "stenbild" );
	deepEqual( Stem("stenbord"), "stenbord" );
	deepEqual( Stem("stenbänkar"), "stenbänk" );
	deepEqual( Stem("stenen"), "sten" );
	deepEqual( Stem("stenhammar"), "stenhamm" );
	deepEqual( Stem("stenig"), "sten" );
	deepEqual( Stem("steniga"), "sten" );
	deepEqual( Stem("stenlagd"), "stenlag" );
	deepEqual( Stem("stenläggning"), "stenläggning" );
	deepEqual( Stem("stenläggningen"), "stenläggning" );
	deepEqual( Stem("stenrik"), "stenrik" );
	deepEqual( Stem("stentrappan"), "stentrappan" );
	deepEqual( Stem("stentrappstegen"), "stentrappsteg" );
	deepEqual( Stem("ster"), "ster" );
	deepEqual( Stem("steril"), "steril" );
	deepEqual( Stem("sterila"), "steril" );
	deepEqual( Stem("stetoskop"), "stetoskop" );
	deepEqual( Stem("stetoskopet"), "stetoskopet" );
	deepEqual( Stem("sti"), "sti" );
	deepEqual( Stem("stia"), "stia" );
	deepEqual( Stem("stick"), "stick" );
	deepEqual( Stem("sticka"), "stick" );
	deepEqual( Stem("stickade"), "stick" );
	deepEqual( Stem("stickan"), "stickan" );
	deepEqual( Stem("stickande"), "stick" );
	deepEqual( Stem("sticker"), "stick" );
	deepEqual( Stem("sticket"), "sticket" );
	deepEqual( Stem("stickor"), "stick" );
	deepEqual( Stem("stickord"), "stickord" );
	deepEqual( Stem("stickstrumpan"), "stickstrumpan" );
	deepEqual( Stem("stiernhielm"), "stiernhielm" );
	deepEqual( Stem("stif"), "stif" );
	deepEqual( Stem("stifta"), "stift" );
	deepEqual( Stem("stiftandet"), "stift" );
	deepEqual( Stem("stiftar"), "stift" );
	deepEqual( Stem("stiftare"), "stift" );
	deepEqual( Stem("stiftat"), "stift" );
	deepEqual( Stem("stiftelse"), "stift" );
	deepEqual( Stem("stig"), "stig" );
	deepEqual( Stem("stiga"), "stig" );
	deepEqual( Stem("stigande"), "stig" );
	deepEqual( Stem("stigar"), "stig" );
	deepEqual( Stem("stigen"), "stig" );
	deepEqual( Stem("stiger"), "stig" );
	deepEqual( Stem("stigit"), "stigit" );
	deepEqual( Stem("stiktat"), "stikt" );
	deepEqual( Stem("stil"), "stil" );
	deepEqual( Stem("stilen"), "stil" );
	deepEqual( Stem("still"), "still" );
	deepEqual( Stem("stilla"), "still" );
	deepEqual( Stem("stillade"), "still" );
	deepEqual( Stem("stillande"), "still" );
	deepEqual( Stem("stillas"), "still" );
	deepEqual( Stem("stillastående"), "stillaståend" );
	deepEqual( Stem("stillat"), "still" );
	deepEqual( Stem("stillhet"), "still" );
	deepEqual( Stem("stillheten"), "still" );
	deepEqual( Stem("stillhrt"), "stillhrt" );
	deepEqual( Stem("stillsam"), "stillsam" );
	deepEqual( Stem("stillsamma"), "stillsamm" );
	deepEqual( Stem("stillsamt"), "stillsamt" );
	deepEqual( Stem("stiltje"), "stiltj" );
	deepEqual( Stem("stim"), "stim" );
	deepEqual( Stem("stimma"), "stimm" );
	deepEqual( Stem("stimulera"), "stimuler" );
	deepEqual( Stem("stimulerar"), "stimuler" );
	deepEqual( Stem("stina"), "stin" );
	deepEqual( Stem("sting"), "sting" );
	deepEqual( Stem("stinger"), "sting" );
	deepEqual( Stem("stinkande"), "stink" );
	deepEqual( Stem("stinn"), "stinn" );
	deepEqual( Stem("stir"), "stir" );
	deepEqual( Stem("stirra"), "stirr" );
	deepEqual( Stem("stirrade"), "stirr" );
	deepEqual( Stem("stirrande"), "stirr" );
	deepEqual( Stem("stirrar"), "stirr" );
	deepEqual( Stem("stj"), "stj" );
	deepEqual( Stem("stjarna"), "stjarn" );
	deepEqual( Stem("stjarnall"), "stjarnall" );
	deepEqual( Stem("stjarnor"), "stjarn" );
	deepEqual( Stem("stjerna"), "stjern" );
	deepEqual( Stem("stjufson"), "stjufson" );
	deepEqual( Stem("stjäl"), "stjäl" );
	deepEqual( Stem("stjäla"), "stjäl" );
	deepEqual( Stem("stjälkar"), "stjälk" );
	deepEqual( Stem("stjälkarna"), "stjälk" );
	deepEqual( Stem("stjälpa"), "stjälp" );
	deepEqual( Stem("stjärna"), "stjärn" );
	deepEqual( Stem("stjärnan"), "stjärnan" );
	deepEqual( Stem("stjärnans"), "stjärnan" );
	deepEqual( Stem("stjärnblommor"), "stjärnblomm" );
	deepEqual( Stem("stjärneljusen"), "stjärneljus" );
	deepEqual( Stem("stjärnhimmel"), "stjärnhimmel" );
	deepEqual( Stem("stjärnhimmeln"), "stjärnhimmeln" );
	deepEqual( Stem("stjärnklar"), "stjärnkl" );
	deepEqual( Stem("stjärnljus"), "stjärnljus" );
	deepEqual( Stem("stjärnor"), "stjärn" );
	deepEqual( Stem("stjärnorna"), "stjärn" );
	deepEqual( Stem("stjärnornas"), "stjärn" );
	deepEqual( Stem("stjärnors"), "stjärnor" );
	deepEqual( Stem("stjärnögon"), "stjärnögon" );
	deepEqual( Stem("stock"), "stock" );
	deepEqual( Stem("stockade"), "stock" );
	deepEqual( Stem("stockbolm"), "stockbolm" );
	deepEqual( Stem("stocken"), "stock" );
	deepEqual( Stem("stockhohn"), "stockhohn" );
	deepEqual( Stem("stockholm"), "stockholm" );
	deepEqual( Stem("stockholms"), "stockholm" );
	deepEqual( Stem("stockholmsbekant"), "stockholmsbekant" );
	deepEqual( Stem("stockholmsbo"), "stockholmsbo" );
	deepEqual( Stem("stockholmsflickornas"), "stockholmsflick" );
	deepEqual( Stem("stockholmsgästen"), "stockholmsgäst" );
	deepEqual( Stem("stockholmsregemente"), "stockholmsregement" );
	deepEqual( Stem("stockholmsresan"), "stockholmsresan" );
	deepEqual( Stem("stockholmsrummet"), "stockholmsrummet" );
	deepEqual( Stem("stockholmssocieteten"), "stockholmssocietet" );
	deepEqual( Stem("stockholmsvistelse"), "stockholmsvist" );
	deepEqual( Stem("stockkonservativa"), "stockkonservativ" );
	deepEqual( Stem("stod"), "stod" );
	deepEqual( Stem("stodde"), "stodd" );
	deepEqual( Stem("stode"), "stod" );
	deepEqual( Stem("stoder"), "stod" );
	deepEqual( Stem("stodo"), "stodo" );
	deepEqual( Stem("stodod"), "stodod" );
	deepEqual( Stem("stoff"), "stoff" );
	deepEqual( Stem("stoffet"), "stoffet" );
	deepEqual( Stem("stoft"), "stoft" );
	deepEqual( Stem("stoftet"), "stoftet" );
	deepEqual( Stem("stofthyddans"), "stofthyddan" );
	deepEqual( Stem("stoftskyarna"), "stoftsky" );
	deepEqual( Stem("stoj"), "stoj" );
	deepEqual( Stem("stol"), "stol" );
	deepEqual( Stem("stolar"), "stol" );
	deepEqual( Stem("stolarna"), "stol" );
	deepEqual( Stem("stolen"), "stol" );
	deepEqual( Stem("stollen"), "stoll" );
	deepEqual( Stem("stolpar"), "stolp" );
	deepEqual( Stem("stolparna"), "stolp" );
	deepEqual( Stem("stolpen"), "stolp" );
	deepEqual( Stem("stolskarmen"), "stolskarm" );
	deepEqual( Stem("stolt"), "stolt" );
	deepEqual( Stem("stolta"), "stolt" );
	deepEqual( Stem("stoltaste"), "stolt" );
	deepEqual( Stem("stolte"), "stolt" );
	deepEqual( Stem("stolthet"), "stolt" );
	deepEqual( Stem("stoltheten"), "stolt" );
	deepEqual( Stem("stoltserade"), "stoltser" );
	deepEqual( Stem("stoltserande"), "stoltser" );
	deepEqual( Stem("stoltserar"), "stoltser" );
	deepEqual( Stem("stommen"), "stomm" );
	deepEqual( Stem("stonade"), "ston" );
	deepEqual( Stem("stonande"), "ston" );
	deepEqual( Stem("stop"), "stop" );
	deepEqual( Stem("stopen"), "stop" );
	deepEqual( Stem("stopp"), "stopp" );
	deepEqual( Stem("stoppa"), "stopp" );
	deepEqual( Stem("stoppade"), "stopp" );
	deepEqual( Stem("stoppadt"), "stoppad" );
	deepEqual( Stem("stoppar"), "stopp" );
	deepEqual( Stem("stoppat"), "stopp" );
	deepEqual( Stem("stor"), "stor" );
	deepEqual( Stem("stora"), "stor" );
	deepEqual( Stem("storartad"), "storart" );
	deepEqual( Stem("storartade"), "storart" );
	deepEqual( Stem("storartat"), "storart" );
	deepEqual( Stem("storbladiga"), "storblad" );
	deepEqual( Stem("storbåten"), "storbåt" );
	deepEqual( Stem("storbåtens"), "storbåt" );
	deepEqual( Stem("stordjur"), "stordjur" );
	deepEqual( Stem("store"), "stor" );
	deepEqual( Stem("storgubbar"), "storgubb" );
	deepEqual( Stem("storhet"), "stor" );
	deepEqual( Stem("storheten"), "stor" );
	deepEqual( Stem("storheter"), "stor" );
	deepEqual( Stem("storhets"), "storhet" );
	deepEqual( Stem("storkonungens"), "storkonung" );
	deepEqual( Stem("storkyrkan"), "storkyrkan" );
	deepEqual( Stem("storkyrkobrinken"), "storkyrkobrink" );
	deepEqual( Stem("storlek"), "storlek" );
	deepEqual( Stem("storm"), "storm" );
	deepEqual( Stem("stormade"), "storm" );
	deepEqual( Stem("stormande"), "storm" );
	deepEqual( Stem("stormar"), "storm" );
	deepEqual( Stem("stormarne"), "storm" );
	deepEqual( Stem("stormars"), "stormar" );
	deepEqual( Stem("stormasten"), "stormast" );
	deepEqual( Stem("stormat"), "storm" );
	deepEqual( Stem("stormbyn"), "stormbyn" );
	deepEqual( Stem("stormen"), "storm" );
	deepEqual( Stem("stormens"), "storm" );
	deepEqual( Stem("stormförtjusta"), "stormförtjust" );
	deepEqual( Stem("stormig"), "storm" );
	deepEqual( Stem("stormiga"), "storm" );
	deepEqual( Stem("stormigt"), "storm" );
	deepEqual( Stem("stormodig"), "stormod" );
	deepEqual( Stem("stormodighet"), "stormod" );
	deepEqual( Stem("stormvanda"), "stormvand" );
	deepEqual( Stem("storsjöodjuret"), "storsjöodjuret" );
	deepEqual( Stem("storskärmad"), "storskärm" );
	deepEqual( Stem("storståtlig"), "storståt" );
	deepEqual( Stem("stort"), "stort" );
	deepEqual( Stem("stortvätt"), "stortvät" );
	deepEqual( Stem("storvaxt"), "storvaxt" );
	deepEqual( Stem("storverket"), "storverket" );
	deepEqual( Stem("storvuxna"), "storvuxn" );
	deepEqual( Stem("storvuxne"), "storvuxn" );
	deepEqual( Stem("storväxt"), "storväxt" );
	deepEqual( Stem("storätande"), "storät" );
	deepEqual( Stem("stota"), "stot" );
	deepEqual( Stem("stotrad"), "stotr" );
	deepEqual( Stem("stra"), "stra" );
	deepEqual( Stem("strackta"), "strack" );
	deepEqual( Stem("strackte"), "strack" );
	deepEqual( Stem("straff"), "straff" );
	deepEqual( Stem("straffa"), "straff" );
	deepEqual( Stem("straffad"), "straff" );
	deepEqual( Stem("straffade"), "straff" );
	deepEqual( Stem("straffande"), "straff" );
	deepEqual( Stem("straffas"), "straff" );
	deepEqual( Stem("straffat"), "straff" );
	deepEqual( Stem("straffdom"), "straffdom" );
	deepEqual( Stem("straffdomar"), "straffdom" );
	deepEqual( Stem("straffet"), "straffet" );
	deepEqual( Stem("straffpredikan"), "straffpredikan" );
	deepEqual( Stem("strafftal"), "strafftal" );
	deepEqual( Stem("strala"), "stral" );
	deepEqual( Stem("stralade"), "stral" );
	deepEqual( Stem("stralande"), "stral" );
	deepEqual( Stem("stralar"), "stral" );
	deepEqual( Stem("stramt"), "stramt" );
	deepEqual( Stem("stran"), "stran" );
	deepEqual( Stem("strand"), "strand" );
	deepEqual( Stem("strandade"), "strand" );
	deepEqual( Stem("strandat"), "strand" );
	deepEqual( Stem("strandbo"), "strandbo" );
	deepEqual( Stem("strandbons"), "strandbon" );
	deepEqual( Stem("strandbor"), "strandb" );
	deepEqual( Stem("stranden"), "strand" );
	deepEqual( Stem("strandens"), "strand" );
	deepEqual( Stem("strandmarken"), "strandmark" );
	deepEqual( Stem("strandsätta"), "strandsät" );
	deepEqual( Stem("strandvägen"), "strandväg" );
	deepEqual( Stem("strax"), "strax" );
	deepEqual( Stem("straxt"), "straxt" );
	deepEqual( Stem("streber"), "streb" );
	deepEqual( Stem("streck"), "streck" );
	deepEqual( Stem("strecken"), "streck" );
	deepEqual( Stem("strecket"), "strecket" );
	deepEqual( Stem("stred"), "stred" );
	deepEqual( Stem("stretade"), "stret" );
	deepEqual( Stem("stretande"), "stret" );
	deepEqual( Stem("strid"), "strid" );
	deepEqual( Stem("strida"), "strid" );
	deepEqual( Stem("stridande"), "strid" );
	deepEqual( Stem("stridde"), "stridd" );
	deepEqual( Stem("striden"), "strid" );
	deepEqual( Stem("stridens"), "strid" );
	deepEqual( Stem("strider"), "strid" );
	deepEqual( Stem("stridig"), "strid" );
	deepEqual( Stem("stridiga"), "strid" );
	deepEqual( Stem("stridigheter"), "strid" );
	deepEqual( Stem("strids"), "strid" );
	deepEqual( Stem("stridsbloss"), "stridsbloss" );
	deepEqual( Stem("stridslust"), "stridslust" );
	deepEqual( Stem("stridsämne"), "stridsämn" );
	deepEqual( Stem("strimma"), "strimm" );
	deepEqual( Stem("strimman"), "strimman" );
	deepEqual( Stem("strimmat"), "strimm" );
	deepEqual( Stem("strimmiga"), "strimm" );
	deepEqual( Stem("strimmor"), "strimm" );
	deepEqual( Stem("strimmorna"), "strimm" );
	deepEqual( Stem("strindbergs"), "strindberg" );
	deepEqual( Stem("stripiga"), "strip" );
	deepEqual( Stem("stripigt"), "strip" );
	deepEqual( Stem("stritt"), "stritt" );
	deepEqual( Stem("strlpe"), "strlpe" );
	deepEqual( Stem("strofer"), "strof" );
	deepEqual( Stem("strukit"), "strukit" );
	deepEqual( Stem("struktur"), "struktur" );
	deepEqual( Stem("strumahals"), "strumahal" );
	deepEqual( Stem("strumpeband"), "strumpeband" );
	deepEqual( Stem("strumpfötterna"), "strumpföt" );
	deepEqual( Stem("strumpor"), "strump" );
	deepEqual( Stem("strumporna"), "strump" );
	deepEqual( Stem("strunt"), "strunt" );
	deepEqual( Stem("struntgevär"), "struntgevär" );
	deepEqual( Stem("struntplank"), "struntplank" );
	deepEqual( Stem("struntviktiga"), "struntvikt" );
	deepEqual( Stem("strupar"), "strup" );
	deepEqual( Stem("strupe"), "strup" );
	deepEqual( Stem("strupen"), "strup" );
	deepEqual( Stem("strussenhielm"), "strussenhielm" );
	deepEqual( Stem("strussenhielms"), "strussenhielm" );
	deepEqual( Stem("strut"), "strut" );
	deepEqual( Stem("strutsarna"), "struts" );
	deepEqual( Stem("strutsarnas"), "struts" );
	deepEqual( Stem("strutsen"), "struts" );
	deepEqual( Stem("strutsens"), "struts" );
	deepEqual( Stem("stryk"), "stryk" );
	deepEqual( Stem("stryka"), "stryk" );
	deepEqual( Stem("strykande"), "stryk" );
	deepEqual( Stem("strykas"), "stryk" );
	deepEqual( Stem("stryker"), "stryk" );
	deepEqual( Stem("strykning"), "strykning" );
	deepEqual( Stem("strypsjuka"), "strypsjuk" );
	deepEqual( Stem("strä"), "strä" );
	deepEqual( Stem("sträck"), "sträck" );
	deepEqual( Stem("sträcka"), "sträck" );
	deepEqual( Stem("sträckande"), "sträck" );
	deepEqual( Stem("sträcker"), "sträck" );
	deepEqual( Stem("sträckes"), "sträck" );
	deepEqual( Stem("sträcket"), "sträcket" );
	deepEqual( Stem("sträckor"), "sträck" );
	deepEqual( Stem("sträckt"), "sträck" );
	deepEqual( Stem("sträckta"), "sträck" );
	deepEqual( Stem("sträckte"), "sträck" );
	deepEqual( Stem("sträcktes"), "sträck" );
	deepEqual( Stem("sträf"), "sträf" );
	deepEqual( Stem("sträft"), "sträft" );
	deepEqual( Stem("sträfva"), "sträfv" );
	deepEqual( Stem("sträfvade"), "sträfv" );
	deepEqual( Stem("sträfvan"), "sträfvan" );
	deepEqual( Stem("sträfvar"), "sträfv" );
	deepEqual( Stem("stränder"), "stränd" );
	deepEqual( Stem("stränderna"), "stränd" );
	deepEqual( Stem("strändernas"), "stränd" );
	deepEqual( Stem("sträng"), "sträng" );
	deepEqual( Stem("stränga"), "sträng" );
	deepEqual( Stem("strängar"), "sträng" );
	deepEqual( Stem("strängare"), "sträng" );
	deepEqual( Stem("strängarna"), "sträng" );
	deepEqual( Stem("strängaste"), "sträng" );
	deepEqual( Stem("stränge"), "sträng" );
	deepEqual( Stem("stränghet"), "sträng" );
	deepEqual( Stem("strängnäs"), "strängnäs" );
	deepEqual( Stem("strängt"), "sträng" );
	deepEqual( Stem("sträv"), "sträv" );
	deepEqual( Stem("sträva"), "sträv" );
	deepEqual( Stem("strävade"), "sträv" );
	deepEqual( Stem("strävan"), "strävan" );
	deepEqual( Stem("strävande"), "sträv" );
	deepEqual( Stem("strävar"), "sträv" );
	deepEqual( Stem("strävat"), "sträv" );
	deepEqual( Stem("strävpelare"), "strävpel" );
	deepEqual( Stem("strävsamhet"), "strävsam" );
	deepEqual( Stem("strävsamma"), "strävsamm" );
	deepEqual( Stem("strävsinta"), "strävsint" );
	deepEqual( Stem("strävt"), "strävt" );
	deepEqual( Stem("strå"), "strå" );
	deepEqual( Stem("stråkars"), "stråkar" );
	deepEqual( Stem("stråken"), "stråk" );
	deepEqual( Stem("stråla"), "strål" );
	deepEqual( Stem("strålade"), "strål" );
	deepEqual( Stem("strålande"), "strål" );
	deepEqual( Stem("strålar"), "strål" );
	deepEqual( Stem("strålat"), "strål" );
	deepEqual( Stem("strålbrytning"), "strålbrytning" );
	deepEqual( Stem("stråle"), "strål" );
	deepEqual( Stem("strån"), "strån" );
	deepEqual( Stem("stråt"), "stråt" );
	deepEqual( Stem("strö"), "strö" );
	deepEqual( Stem("strödd"), "strödd" );
	deepEqual( Stem("strödda"), "strödd" );
	deepEqual( Stem("strödde"), "strödd" );
	deepEqual( Stem("ströftåg"), "ströftåg" );
	deepEqual( Stem("ströfva"), "ströfv" );
	deepEqual( Stem("strök"), "strök" );
	deepEqual( Stem("ströko"), "ströko" );
	deepEqual( Stem("ströks"), "strök" );
	deepEqual( Stem("ström"), "ström" );
	deepEqual( Stem("strömma"), "strömm" );
	deepEqual( Stem("strömmade"), "strömm" );
	deepEqual( Stem("strömmar"), "strömm" );
	deepEqual( Stem("strömmarna"), "strömm" );
	deepEqual( Stem("strömmarnas"), "strömm" );
	deepEqual( Stem("strömmen"), "strömm" );
	deepEqual( Stem("strömmens"), "strömm" );
	deepEqual( Stem("strömparterren"), "strömparterr" );
	deepEqual( Stem("strör"), "strör" );
	deepEqual( Stem("strött"), "strött" );
	deepEqual( Stem("ströva"), "ströv" );
	deepEqual( Stem("strövade"), "ströv" );
	deepEqual( Stem("strövat"), "ströv" );
	deepEqual( Stem("strövtåg"), "strövtåg" );
	deepEqual( Stem("stubbe"), "stubb" );
	deepEqual( Stem("stucken"), "stuck" );
	deepEqual( Stem("stuckit"), "stuckit" );
	deepEqual( Stem("stuckna"), "stuckn" );
	deepEqual( Stem("stucko"), "stucko" );
	deepEqual( Stem("student"), "student" );
	deepEqual( Stem("studenten"), "student" );
	deepEqual( Stem("studenter"), "student" );
	deepEqual( Stem("studentkula"), "studentkul" );
	deepEqual( Stem("studera"), "studer" );
	deepEqual( Stem("studerade"), "studer" );
	deepEqual( Stem("studerat"), "studer" );
	deepEqual( Stem("studier"), "studi" );
	deepEqual( Stem("studiet"), "studiet" );
	deepEqual( Stem("studiosi"), "studiosi" );
	deepEqual( Stem("studsa"), "studs" );
	deepEqual( Stem("studsade"), "studs" );
	deepEqual( Stem("studsare"), "studs" );
	deepEqual( Stem("studsaren"), "studs" );
	deepEqual( Stem("stufvade"), "stufv" );
	deepEqual( Stem("stufvar"), "stufv" );
	deepEqual( Stem("stuga"), "stug" );
	deepEqual( Stem("stugan"), "stugan" );
	deepEqual( Stem("stugans"), "stugan" );
	deepEqual( Stem("stugas"), "stug" );
	deepEqual( Stem("stugor"), "stug" );
	deepEqual( Stem("stugorna"), "stug" );
	deepEqual( Stem("stugudörren"), "stugudörr" );
	deepEqual( Stem("stuka"), "stuk" );
	deepEqual( Stem("stulit"), "stulit" );
	deepEqual( Stem("stultade"), "stult" );
	deepEqual( Stem("stultat"), "stult" );
	deepEqual( Stem("stum"), "stum" );
	deepEqual( Stem("stumd"), "stumd" );
	deepEqual( Stem("stumma"), "stumm" );
	deepEqual( Stem("stump"), "stump" );
	deepEqual( Stem("stumpar"), "stump" );
	deepEqual( Stem("stumpen"), "stump" );
	deepEqual( Stem("stumt"), "stumt" );
	deepEqual( Stem("stund"), "stund" );
	deepEqual( Stem("stundade"), "stund" );
	deepEqual( Stem("stundande"), "stund" );
	deepEqual( Stem("stunden"), "stund" );
	deepEqual( Stem("stundens"), "stund" );
	deepEqual( Stem("stunder"), "stund" );
	deepEqual( Stem("stunderna"), "stund" );
	deepEqual( Stem("stundligen"), "stund" );
	deepEqual( Stem("stundom"), "stundom" );
	deepEqual( Stem("stundorm"), "stundorm" );
	deepEqual( Stem("stunds"), "stund" );
	deepEqual( Stem("stungit"), "stungit" );
	deepEqual( Stem("stungo"), "stungo" );
	deepEqual( Stem("stunkit"), "stunkit" );
	deepEqual( Stem("stupa"), "stup" );
	deepEqual( Stem("stupade"), "stup" );
	deepEqual( Stem("stupande"), "stup" );
	deepEqual( Stem("stupar"), "stup" );
	deepEqual( Stem("stupfulle"), "stupfull" );
	deepEqual( Stem("stursk"), "stursk" );
	deepEqual( Stem("stut"), "stut" );
	deepEqual( Stem("stuvade"), "stuv" );
	deepEqual( Stem("stycke"), "styck" );
	deepEqual( Stem("styckegods"), "styckegod" );
	deepEqual( Stem("stycken"), "styck" );
	deepEqual( Stem("stycket"), "stycket" );
	deepEqual( Stem("stycketl"), "stycketl" );
	deepEqual( Stem("styf"), "styf" );
	deepEqual( Stem("styfmunt"), "styfmunt" );
	deepEqual( Stem("styfrar"), "styfr" );
	deepEqual( Stem("styfsinte"), "styfsint" );
	deepEqual( Stem("styfva"), "styfv" );
	deepEqual( Stem("styfvern"), "styfv" );
	deepEqual( Stem("stygg"), "stygg" );
	deepEqual( Stem("stygga"), "stygg" );
	deepEqual( Stem("stygge"), "stygg" );
	deepEqual( Stem("styggelse"), "stygg" );
	deepEqual( Stem("styggt"), "stygg" );
	deepEqual( Stem("stygn"), "stygn" );
	deepEqual( Stem("stympa"), "stymp" );
	deepEqual( Stem("stympad"), "stymp" );
	deepEqual( Stem("stympare"), "stymp" );
	deepEqual( Stem("styng"), "styng" );
	deepEqual( Stem("styr"), "styr" );
	deepEqual( Stem("styra"), "styr" );
	deepEqual( Stem("styrande"), "styr" );
	deepEqual( Stem("styrde"), "styrd" );
	deepEqual( Stem("styre"), "styr" );
	deepEqual( Stem("styrelsen"), "styr" );
	deepEqual( Stem("styret"), "styret" );
	deepEqual( Stem("styrka"), "styrk" );
	deepEqual( Stem("styrkande"), "styrk" );
	deepEqual( Stem("styrker"), "styrk" );
	deepEqual( Stem("styrketår"), "styrketår" );
	deepEqual( Stem("styrkt"), "styrk" );
	deepEqual( Stem("styrkte"), "styrk" );
	deepEqual( Stem("styrktes"), "styrk" );
	deepEqual( Stem("styrman"), "styrman" );
	deepEqual( Stem("styrmans"), "styrman" );
	deepEqual( Stem("styrrummet"), "styrrummet" );
	deepEqual( Stem("styrstång"), "styrstång" );
	deepEqual( Stem("styrstången"), "styrstång" );
	deepEqual( Stem("styrt"), "styrt" );
	deepEqual( Stem("styv"), "styv" );
	deepEqual( Stem("styva"), "styv" );
	deepEqual( Stem("styvbarn"), "styvbarn" );
	deepEqual( Stem("styvdotter"), "styvdot" );
	deepEqual( Stem("styvdottern"), "styvdot" );
	deepEqual( Stem("styver"), "styv" );
	deepEqual( Stem("styverhandeln"), "styverhandeln" );
	deepEqual( Stem("styvfader"), "styvfad" );
	deepEqual( Stem("styvfadern"), "styvfad" );
	deepEqual( Stem("styvfar"), "styvf" );
	deepEqual( Stem("styvmodern"), "styvmod" );
	deepEqual( Stem("styvmor"), "styvm" );
	deepEqual( Stem("styvmorsblom"), "styvmorsblom" );
	deepEqual( Stem("styvna"), "styvn" );
	deepEqual( Stem("styvnade"), "styvn" );
	deepEqual( Stem("styvrarna"), "styvr" );
	deepEqual( Stem("styvson"), "styvson" );
	deepEqual( Stem("styx"), "styx" );
	deepEqual( Stem("stä"), "stä" );
	deepEqual( Stem("stäckta"), "stäck" );
	deepEqual( Stem("städ"), "städ" );
	deepEqual( Stem("städa"), "städ" );
	deepEqual( Stem("städad"), "städ" );
	deepEqual( Stem("städade"), "städ" );
	deepEqual( Stem("städadt"), "städad" );
	deepEqual( Stem("städar"), "städ" );
	deepEqual( Stem("städat"), "städ" );
	deepEqual( Stem("städer"), "städ" );
	deepEqual( Stem("städerna"), "städ" );
	deepEqual( Stem("städes"), "städ" );
	deepEqual( Stem("städja"), "städj" );
	deepEqual( Stem("städning"), "städning" );
	deepEqual( Stem("städningen"), "städning" );
	deepEqual( Stem("städs"), "städ" );
	deepEqual( Stem("städse"), "städs" );
	deepEqual( Stem("stälde"), "stäld" );
	deepEqual( Stem("ställ"), "ställ" );
	deepEqual( Stem("ställa"), "ställ" );
	deepEqual( Stem("ställd"), "ställd" );
	deepEqual( Stem("ställda"), "ställd" );
	deepEqual( Stem("ställde"), "ställd" );
	deepEqual( Stem("ställe"), "ställ" );
	deepEqual( Stem("ställen"), "ställ" );
	deepEqual( Stem("ställer"), "ställ" );
	deepEqual( Stem("stället"), "stället" );
	deepEqual( Stem("ställning"), "ställning" );
	deepEqual( Stem("ställningar"), "ställning" );
	deepEqual( Stem("ställningen"), "ställning" );
	deepEqual( Stem("ställt"), "ställt" );
	deepEqual( Stem("stält"), "stält" );
	deepEqual( Stem("stäm"), "stäm" );
	deepEqual( Stem("stämd"), "stämd" );
	deepEqual( Stem("stämde"), "stämd" );
	deepEqual( Stem("stämma"), "stämm" );
	deepEqual( Stem("stämmas"), "stämm" );
	deepEqual( Stem("stämmer"), "stämm" );
	deepEqual( Stem("stämmor"), "stämm" );
	deepEqual( Stem("stämmornas"), "stämm" );
	deepEqual( Stem("stämning"), "stämning" );
	deepEqual( Stem("stämningen"), "stämning" );
	deepEqual( Stem("stämpla"), "stämpl" );
	deepEqual( Stem("stämplad"), "stämpl" );
	deepEqual( Stem("stämplade"), "stämpl" );
	deepEqual( Stem("stämplades"), "stämpl" );
	deepEqual( Stem("stämt"), "stämt" );
	deepEqual( Stem("stän"), "stän" );
	deepEqual( Stem("ständig"), "ständ" );
	deepEqual( Stem("ständiga"), "ständ" );
	deepEqual( Stem("ständigt"), "ständ" );
	deepEqual( Stem("stäng"), "stäng" );
	deepEqual( Stem("stänga"), "stäng" );
	deepEqual( Stem("stängas"), "stäng" );
	deepEqual( Stem("stängd"), "stäng" );
	deepEqual( Stem("stängda"), "stäng" );
	deepEqual( Stem("stängde"), "stäng" );
	deepEqual( Stem("stängdes"), "stäng" );
	deepEqual( Stem("stängel"), "stängel" );
	deepEqual( Stem("stänger"), "stäng" );
	deepEqual( Stem("stänglar"), "stängl" );
	deepEqual( Stem("stängsel"), "stängsel" );
	deepEqual( Stem("stängseltagg"), "stängseltagg" );
	deepEqual( Stem("stängt"), "stäng" );
	deepEqual( Stem("stänk"), "stänk" );
	deepEqual( Stem("stänker"), "stänk" );
	deepEqual( Stem("stänkt"), "stänk" );
	deepEqual( Stem("stänkte"), "stänk" );
	deepEqual( Stem("stärkande"), "stärk" );
	deepEqual( Stem("stärkkragen"), "stärkkrag" );
	deepEqual( Stem("stärkt"), "stärk" );
	deepEqual( Stem("stärkta"), "stärk" );
	deepEqual( Stem("stå"), "stå" );
	deepEqual( Stem("stående"), "ståend" );
	deepEqual( Stem("stål"), "stål" );
	deepEqual( Stem("stålklang"), "stålklang" );
	deepEqual( Stem("stålvisp"), "stålvisp" );
	deepEqual( Stem("stålvispen"), "stålvisp" );
	deepEqual( Stem("stån"), "stån" );
	deepEqual( Stem("stånd"), "stånd" );
	deepEqual( Stem("ståndaktiga"), "ståndakt" );
	deepEqual( Stem("ståndaktighet"), "ståndakt" );
	deepEqual( Stem("ståndar"), "stånd" );
	deepEqual( Stem("stånden"), "stånd" );
	deepEqual( Stem("ståndet"), "ståndet" );
	deepEqual( Stem("ståndpunkt"), "ståndpunk" );
	deepEqual( Stem("ståndpunkter"), "ståndpunk" );
	deepEqual( Stem("stånds"), "stånd" );
	deepEqual( Stem("stång"), "stång" );
	deepEqual( Stem("stångas"), "stång" );
	deepEqual( Stem("stången"), "stång" );
	deepEqual( Stem("stånkande"), "stånk" );
	deepEqual( Stem("står"), "står" );
	deepEqual( Stem("stårkkrage"), "stårkkrag" );
	deepEqual( Stem("stås"), "stås" );
	deepEqual( Stem("ståt"), "ståt" );
	deepEqual( Stem("ståtar"), "ståt" );
	deepEqual( Stem("ståten"), "ståt" );
	deepEqual( Stem("ståtlig"), "ståt" );
	deepEqual( Stem("ståtliga"), "ståt" );
	deepEqual( Stem("ståtligt"), "ståt" );
	deepEqual( Stem("stått"), "stått" );
	deepEqual( Stem("stöd"), "stöd" );
	deepEqual( Stem("stödd"), "stödd" );
	deepEqual( Stem("stödda"), "stödd" );
	deepEqual( Stem("stödde"), "stödd" );
	deepEqual( Stem("stödet"), "stödet" );
	deepEqual( Stem("stödja"), "stödj" );
	deepEqual( Stem("stödjande"), "stödj" );
	deepEqual( Stem("stödjas"), "stödj" );
	deepEqual( Stem("stödt"), "stödt" );
	deepEqual( Stem("stöflar"), "stöfl" );
	deepEqual( Stem("stöflarne"), "stöfl" );
	deepEqual( Stem("stöka"), "stök" );
	deepEqual( Stem("stökade"), "stök" );
	deepEqual( Stem("stöket"), "stöket" );
	deepEqual( Stem("stöld"), "stöld" );
	deepEqual( Stem("stöna"), "stön" );
	deepEqual( Stem("stönade"), "stön" );
	deepEqual( Stem("stönande"), "stön" );
	deepEqual( Stem("stöper"), "stöp" );
	deepEqual( Stem("stör"), "stör" );
	deepEqual( Stem("störa"), "stör" );
	deepEqual( Stem("störande"), "stör" );
	deepEqual( Stem("störas"), "stör" );
	deepEqual( Stem("störd"), "störd" );
	deepEqual( Stem("störda"), "störd" );
	deepEqual( Stem("störde"), "störd" );
	deepEqual( Stem("stördes"), "störd" );
	deepEqual( Stem("störes"), "stör" );
	deepEqual( Stem("större"), "störr" );
	deepEqual( Stem("störsh"), "störsh" );
	deepEqual( Stem("största"), "störst" );
	deepEqual( Stem("stört"), "stört" );
	deepEqual( Stem("störta"), "stört" );
	deepEqual( Stem("störtade"), "stört" );
	deepEqual( Stem("störtat"), "stört" );
	deepEqual( Stem("störtsjö"), "störtsjö" );
	deepEqual( Stem("störtsjöarne"), "störtsjö" );
	deepEqual( Stem("störtskurar"), "störtskur" );
	deepEqual( Stem("stöt"), "stöt" );
	deepEqual( Stem("stöta"), "stöt" );
	deepEqual( Stem("stötande"), "stöt" );
	deepEqual( Stem("stötar"), "stöt" );
	deepEqual( Stem("stöten"), "stöt" );
	deepEqual( Stem("stöter"), "stöt" );
	deepEqual( Stem("stött"), "stött" );
	deepEqual( Stem("stötta"), "stött" );
	deepEqual( Stem("stötte"), "stött" );
	deepEqual( Stem("stöttes"), "stött" );
	deepEqual( Stem("stötvir"), "stötvir" );
	deepEqual( Stem("stötvis"), "stötvis" );
	deepEqual( Stem("stövare"), "stöv" );
	deepEqual( Stem("stövla"), "stövl" );
	deepEqual( Stem("stövlar"), "stövl" );
	deepEqual( Stem("stövlarna"), "stövl" );
	deepEqual( Stem("sub"), "sub" );
	deepEqual( Stem("subtila"), "subtil" );
	deepEqual( Stem("suc"), "suc" );
	deepEqual( Stem("suck"), "suck" );
	deepEqual( Stem("sucka"), "suck" );
	deepEqual( Stem("suckadc"), "suckadc" );
	deepEqual( Stem("suckade"), "suck" );
	deepEqual( Stem("suckande"), "suck" );
	deepEqual( Stem("suckar"), "suck" );
	deepEqual( Stem("suckarna"), "suck" );
	deepEqual( Stem("suckat"), "suck" );
	deepEqual( Stem("sudda"), "sudd" );
	deepEqual( Stem("suddande"), "sudd" );
	deepEqual( Stem("suddar"), "sudd" );
	deepEqual( Stem("suddats"), "suddat" );
	deepEqual( Stem("suddiga"), "sudd" );
	deepEqual( Stem("sudlade"), "sudl" );
	deepEqual( Stem("sudlades"), "sudl" );
	deepEqual( Stem("sudlats"), "sudlat" );
	deepEqual( Stem("sufflör"), "sufflör" );
	deepEqual( Stem("suga"), "sug" );
	deepEqual( Stem("sugande"), "sug" );
	deepEqual( Stem("sugen"), "sug" );
	deepEqual( Stem("suger"), "sug" );
	deepEqual( Stem("suggskaft"), "suggskaft" );
	deepEqual( Stem("suit"), "suit" );
	deepEqual( Stem("sujetter"), "sujet" );
	deepEqual( Stem("sukade"), "suk" );
	deepEqual( Stem("sulor"), "sul" );
	deepEqual( Stem("sum"), "sum" );
	deepEqual( Stem("summa"), "summ" );
	deepEqual( Stem("summan"), "summan" );
	deepEqual( Stem("summo"), "summo" );
	deepEqual( Stem("sund"), "sund" );
	deepEqual( Stem("sunda"), "sund" );
	deepEqual( Stem("sunden"), "sund" );
	deepEqual( Stem("sundt"), "sund" );
	deepEqual( Stem("sunnansuckar"), "sunnansuck" );
	deepEqual( Stem("sunnanvinden"), "sunnanvind" );
	deepEqual( Stem("sunt"), "sunt" );
	deepEqual( Stem("suntältet"), "suntältet" );
	deepEqual( Stem("supa"), "sup" );
	deepEqual( Stem("suparna"), "sup" );
	deepEqual( Stem("supe"), "sup" );
	deepEqual( Stem("supeen"), "supe" );
	deepEqual( Stem("supeer"), "supe" );
	deepEqual( Stem("supen"), "sup" );
	deepEqual( Stem("supera"), "super" );
	deepEqual( Stem("supige"), "sup" );
	deepEqual( Stem("supit"), "supit" );
	deepEqual( Stem("suput"), "suput" );
	deepEqual( Stem("sur"), "sur" );
	deepEqual( Stem("sura"), "sur" );
	deepEqual( Stem("sure"), "sur" );
	deepEqual( Stem("surmulen"), "surmul" );
	deepEqual( Stem("surrade"), "surr" );
	deepEqual( Stem("surrande"), "surr" );
	deepEqual( Stem("surrar"), "surr" );
	deepEqual( Stem("surrat"), "surr" );
	deepEqual( Stem("surt"), "surt" );
	deepEqual( Stem("sus"), "sus" );
	deepEqual( Stem("susa"), "sus" );
	deepEqual( Stem("susade"), "sus" );
	deepEqual( Stem("susande"), "sus" );
	deepEqual( Stem("susar"), "sus" );
	deepEqual( Stem("suset"), "suset" );
	deepEqual( Stem("sutinera"), "sutiner" );
	deepEqual( Stem("sutte"), "sutt" );
	deepEqual( Stem("suttit"), "suttit" );
	deepEqual( Stem("sutto"), "sutto" );
	deepEqual( Stem("svada"), "svad" );
	deepEqual( Stem("svag"), "svag" );
	deepEqual( Stem("svaga"), "svag" );
	deepEqual( Stem("svagare"), "svag" );
	deepEqual( Stem("svagas"), "svag" );
	deepEqual( Stem("svagaste"), "svag" );
	deepEqual( Stem("svage"), "svag" );
	deepEqual( Stem("svaghet"), "svag" );
	deepEqual( Stem("svagheten"), "svag" );
	deepEqual( Stem("svagheter"), "svag" );
	deepEqual( Stem("svaghetstillstånd"), "svaghetstillstånd" );
	deepEqual( Stem("svagsint"), "svagsint" );
	deepEqual( Stem("svagsinte"), "svagsint" );
	deepEqual( Stem("svagt"), "svagt" );
	deepEqual( Stem("svajar"), "svaj" );
	deepEqual( Stem("sval"), "sval" );
	deepEqual( Stem("svala"), "sval" );
	deepEqual( Stem("svalan"), "svalan" );
	deepEqual( Stem("svalare"), "sval" );
	deepEqual( Stem("svalde"), "svald" );
	deepEqual( Stem("svalen"), "sval" );
	deepEqual( Stem("svalg"), "svalg" );
	deepEqual( Stem("svalget"), "svalget" );
	deepEqual( Stem("svalka"), "svalk" );
	deepEqual( Stem("svalkad"), "svalk" );
	deepEqual( Stem("svalkade"), "svalk" );
	deepEqual( Stem("svalkan"), "svalkan" );
	deepEqual( Stem("svalkar"), "svalk" );
	deepEqual( Stem("svalkas"), "svalk" );
	deepEqual( Stem("svall"), "svall" );
	deepEqual( Stem("svalla"), "svall" );
	deepEqual( Stem("svallade"), "svall" );
	deepEqual( Stem("svallande"), "svall" );
	deepEqual( Stem("svallvågorna"), "svallvåg" );
	deepEqual( Stem("svalna"), "svaln" );
	deepEqual( Stem("svalnande"), "svaln" );
	deepEqual( Stem("svalnar"), "svaln" );
	deepEqual( Stem("svalor"), "sval" );
	deepEqual( Stem("svalorna"), "sval" );
	deepEqual( Stem("svalornas"), "sval" );
	deepEqual( Stem("svalpar"), "svalp" );
	deepEqual( Stem("svalt"), "svalt" );
	deepEqual( Stem("svamp"), "svamp" );
	deepEqual( Stem("svampar"), "svamp" );
	deepEqual( Stem("svampen"), "svamp" );
	deepEqual( Stem("svampiga"), "svamp" );
	deepEqual( Stem("svan"), "svan" );
	deepEqual( Stem("svanar"), "svan" );
	deepEqual( Stem("svandun"), "svandun" );
	deepEqual( Stem("svanen"), "svan" );
	deepEqual( Stem("svanger"), "svang" );
	deepEqual( Stem("svanklang"), "svanklang" );
	deepEqual( Stem("svann"), "svann" );
	deepEqual( Stem("svans"), "svan" );
	deepEqual( Stem("svansar"), "svans" );
	deepEqual( Stem("svansarna"), "svans" );
	deepEqual( Stem("svansen"), "svans" );
	deepEqual( Stem("svanslik"), "svanslik" );
	deepEqual( Stem("svar"), "svar" );
	deepEqual( Stem("svara"), "svar" );
	deepEqual( Stem("svarade"), "svar" );
	deepEqual( Stem("svarar"), "svar" );
	deepEqual( Stem("svararle"), "svararl" );
	deepEqual( Stem("svarat"), "svar" );
	deepEqual( Stem("svarata"), "svarat" );
	deepEqual( Stem("svaren"), "svar" );
	deepEqual( Stem("svaret"), "svaret" );
	deepEqual( Stem("svarh"), "svarh" );
	deepEqual( Stem("svarl"), "svarl" );
	deepEqual( Stem("svars"), "svar" );
	deepEqual( Stem("svarslös"), "svarslös" );
	deepEqual( Stem("svart"), "svart" );
	deepEqual( Stem("svarta"), "svart" );
	deepEqual( Stem("svartare"), "svart" );
	deepEqual( Stem("svartaste"), "svart" );
	deepEqual( Stem("svartens"), "svart" );
	deepEqual( Stem("svartglänsande"), "svartgläns" );
	deepEqual( Stem("svartgrå"), "svartgrå" );
	deepEqual( Stem("svartgråa"), "svartgrå" );
	deepEqual( Stem("svartgröna"), "svartgrön" );
	deepEqual( Stem("svarthårig"), "svarthår" );
	deepEqual( Stem("svartklädd"), "svartkläd" );
	deepEqual( Stem("svartklädda"), "svartkläd" );
	deepEqual( Stem("svartkritsförstoring"), "svartkritsförstoring" );
	deepEqual( Stem("svartmältat"), "svartmält" );
	deepEqual( Stem("svartmålade"), "svartmål" );
	deepEqual( Stem("svartnad"), "svartn" );
	deepEqual( Stem("svartnat"), "svartn" );
	deepEqual( Stem("svartrock"), "svartrock" );
	deepEqual( Stem("svartrökt"), "svartrök" );
	deepEqual( Stem("svartsjuk"), "svartsjuk" );
	deepEqual( Stem("svartsjuka"), "svartsjuk" );
	deepEqual( Stem("svartsjukan"), "svartsjukan" );
	deepEqual( Stem("svartsjuke"), "svartsjuk" );
	deepEqual( Stem("svartsjö"), "svartsjö" );
	deepEqual( Stem("svarv"), "svarv" );
	deepEqual( Stem("svarvade"), "svarv" );
	deepEqual( Stem("svarvstol"), "svarvstol" );
	deepEqual( Stem("svassande"), "svass" );
	deepEqual( Stem("svcn"), "svcn" );
	deepEqual( Stem("svcrige"), "svcrig" );
	deepEqual( Stem("svea"), "svea" );
	deepEqual( Stem("sved"), "sved" );
	deepEqual( Stem("sveda"), "sved" );
	deepEqual( Stem("svedan"), "svedan" );
	deepEqual( Stem("svedd"), "svedd" );
	deepEqual( Stem("svedda"), "svedd" );
	deepEqual( Stem("sveddes"), "svedd" );
	deepEqual( Stem("svedo"), "svedo" );
	deepEqual( Stem("svek"), "svek" );
	deepEqual( Stem("sveko"), "sveko" );
	deepEqual( Stem("sveks"), "svek" );
	deepEqual( Stem("sven"), "sven" );
	deepEqual( Stem("svennen"), "svenn" );
	deepEqual( Stem("svens"), "sven" );
	deepEqual( Stem("svensk"), "svensk" );
	deepEqual( Stem("svenska"), "svensk" );
	deepEqual( Stem("svenskar"), "svensk" );
	deepEqual( Stem("svenskarna"), "svensk" );
	deepEqual( Stem("svenskt"), "svensk" );
	deepEqual( Stem("svepa"), "svep" );
	deepEqual( Stem("svepande"), "svep" );
	deepEqual( Stem("svepning"), "svepning" );
	deepEqual( Stem("svept"), "svept" );
	deepEqual( Stem("svepte"), "svept" );
	deepEqual( Stem("sverige"), "sver" );
	deepEqual( Stem("sveriges"), "sver" );
	deepEqual( Stem("svett"), "svett" );
	deepEqual( Stem("svettas"), "svett" );
	deepEqual( Stem("svettats"), "svettat" );
	deepEqual( Stem("svettdunster"), "svettdunst" );
	deepEqual( Stem("svetten"), "svett" );
	deepEqual( Stem("svida"), "svid" );
	deepEqual( Stem("svidande"), "svid" );
	deepEqual( Stem("svider"), "svid" );
	deepEqual( Stem("svigta"), "svigt" );
	deepEqual( Stem("svigtande"), "svigt" );
	deepEqual( Stem("svika"), "svik" );
	deepEqual( Stem("sviken"), "svik" );
	deepEqual( Stem("sviker"), "svik" );
	deepEqual( Stem("svikit"), "svikit" );
	deepEqual( Stem("svikt"), "svikt" );
	deepEqual( Stem("sviktande"), "svikt" );
	deepEqual( Stem("svimma"), "svimm" );
	deepEqual( Stem("svimmat"), "svimm" );
	deepEqual( Stem("svimningsanfall"), "svimningsanfall" );
	deepEqual( Stem("svinaktiga"), "svinakt" );
	deepEqual( Stem("svindel"), "svindel" );
	deepEqual( Stem("svindlade"), "svindl" );
	deepEqual( Stem("svindlande"), "svindl" );
	deepEqual( Stem("sving"), "sving" );
	deepEqual( Stem("svinga"), "sving" );
	deepEqual( Stem("svingade"), "sving" );
	deepEqual( Stem("svinna"), "svinn" );
	deepEqual( Stem("svinner"), "svinn" );
	deepEqual( Stem("sviskon"), "sviskon" );
	deepEqual( Stem("svit"), "svit" );
	deepEqual( Stem("svor"), "svor" );
	deepEqual( Stem("svullen"), "svull" );
	deepEqual( Stem("svullna"), "svulln" );
	deepEqual( Stem("svullnade"), "svulln" );
	deepEqual( Stem("svulst"), "svulst" );
	deepEqual( Stem("svultit"), "svultit" );
	deepEqual( Stem("svunna"), "svunn" );
	deepEqual( Stem("svunnit"), "svunnit" );
	deepEqual( Stem("svunno"), "svunno" );
	deepEqual( Stem("svuro"), "svuro" );
	deepEqual( Stem("svä"), "svä" );
	deepEqual( Stem("sväfvade"), "sväfv" );
	deepEqual( Stem("svägerska"), "svägersk" );
	deepEqual( Stem("svägerskan"), "svägerskan" );
	deepEqual( Stem("svägerskas"), "svägersk" );
	deepEqual( Stem("svälde"), "sväld" );
	deepEqual( Stem("svälja"), "svälj" );
	deepEqual( Stem("sväljde"), "sväljd" );
	deepEqual( Stem("svälla"), "sväll" );
	deepEqual( Stem("svällamde"), "svällamd" );
	deepEqual( Stem("svällande"), "sväll" );
	deepEqual( Stem("svällaren"), "sväll" );
	deepEqual( Stem("svälld"), "svälld" );
	deepEqual( Stem("svällda"), "svälld" );
	deepEqual( Stem("svällde"), "svälld" );
	deepEqual( Stem("sväller"), "sväll" );
	deepEqual( Stem("svält"), "svält" );
	deepEqual( Stem("svälta"), "svält" );
	deepEqual( Stem("sväng"), "sväng" );
	deepEqual( Stem("svänga"), "sväng" );
	deepEqual( Stem("svängandc"), "svängandc" );
	deepEqual( Stem("svängande"), "sväng" );
	deepEqual( Stem("svängd"), "sväng" );
	deepEqual( Stem("svängda"), "sväng" );
	deepEqual( Stem("svängde"), "sväng" );
	deepEqual( Stem("svängeln"), "svängeln" );
	deepEqual( Stem("svänger"), "sväng" );
	deepEqual( Stem("svängningar"), "svängning" );
	deepEqual( Stem("svängningstiderna"), "svängningstid" );
	deepEqual( Stem("svängt"), "sväng" );
	deepEqual( Stem("svär"), "svär" );
	deepEqual( Stem("svära"), "svär" );
	deepEqual( Stem("svärd"), "svärd" );
	deepEqual( Stem("svärden"), "svärd" );
	deepEqual( Stem("svärdet"), "svärdet" );
	deepEqual( Stem("svärdotter"), "svärdot" );
	deepEqual( Stem("svärdsliljan"), "svärdsliljan" );
	deepEqual( Stem("svärfär"), "svärfär" );
	deepEqual( Stem("svärligt"), "svär" );
	deepEqual( Stem("svärm"), "svärm" );
	deepEqual( Stem("svärma"), "svärm" );
	deepEqual( Stem("svärmade"), "svärm" );
	deepEqual( Stem("svärmande"), "svärm" );
	deepEqual( Stem("svärmar"), "svärm" );
	deepEqual( Stem("svärmat"), "svärm" );
	deepEqual( Stem("svärmeri"), "svärmeri" );
	deepEqual( Stem("svärmisk"), "svärmisk" );
	deepEqual( Stem("svärmiskt"), "svärmisk" );
	deepEqual( Stem("svärmoder"), "svärmod" );
	deepEqual( Stem("svärmor"), "svärm" );
	deepEqual( Stem("svärmors"), "svärmor" );
	deepEqual( Stem("svärntiskt"), "svärntisk" );
	deepEqual( Stem("svärson"), "svärson" );
	deepEqual( Stem("svärta"), "svärt" );
	deepEqual( Stem("svärtad"), "svärt" );
	deepEqual( Stem("svärtat"), "svärt" );
	deepEqual( Stem("sväva"), "sväv" );
	deepEqual( Stem("svävade"), "sväv" );
	deepEqual( Stem("svävande"), "sväv" );
	deepEqual( Stem("svävar"), "sväv" );
	deepEqual( Stem("svävat"), "sväv" );
	deepEqual( Stem("svåger"), "svåg" );
	deepEqual( Stem("svågern"), "svåg" );
	deepEqual( Stem("svågerskap"), "svågerskap" );
	deepEqual( Stem("svångde"), "svång" );
	deepEqual( Stem("svångrem"), "svångrem" );
	deepEqual( Stem("svångremmen"), "svångremm" );
	deepEqual( Stem("svår"), "svår" );
	deepEqual( Stem("svåra"), "svår" );
	deepEqual( Stem("svårare"), "svår" );
	deepEqual( Stem("svårast"), "svår" );
	deepEqual( Stem("svårhanterligt"), "svårhanter" );
	deepEqual( Stem("svårighet"), "svår" );
	deepEqual( Stem("svårigheten"), "svår" );
	deepEqual( Stem("svårigheter"), "svår" );
	deepEqual( Stem("svårigheterna"), "svår" );
	deepEqual( Stem("svårligen"), "svår" );
	deepEqual( Stem("svårmod"), "svårmod" );
	deepEqual( Stem("svårmodig"), "svårmod" );
	deepEqual( Stem("svårt"), "svårt" );
	deepEqual( Stem("sy"), "sy" );
	deepEqual( Stem("sybord"), "sybord" );
	deepEqual( Stem("sybågar"), "sybåg" );
	deepEqual( Stem("sybågen"), "sybåg" );
	deepEqual( Stem("sydamerika"), "sydamerik" );
	deepEqual( Stem("sydde"), "sydd" );
	deepEqual( Stem("sydhavspalm"), "sydhavspalm" );
	deepEqual( Stem("syfilidologi"), "syfilidologi" );
	deepEqual( Stem("syforening"), "syforening" );
	deepEqual( Stem("syforeningens"), "syforening" );
	deepEqual( Stem("syftar"), "syft" );
	deepEqual( Stem("syfte"), "syft" );
	deepEqual( Stem("syförening"), "syförening" );
	deepEqual( Stem("sykorg"), "sykorg" );
	deepEqual( Stem("sykorgen"), "sykorg" );
	deepEqual( Stem("sylf"), "sylf" );
	deepEqual( Stem("sylfers"), "sylfer" );
	deepEqual( Stem("sylt"), "sylt" );
	deepEqual( Stem("syltburkar"), "syltburk" );
	deepEqual( Stem("syltburks"), "syltburk" );
	deepEqual( Stem("sylvia"), "sylvi" );
	deepEqual( Stem("symaskinen"), "symaskin" );
	deepEqual( Stem("symaskinerna"), "symaskin" );
	deepEqual( Stem("symbol"), "symbol" );
	deepEqual( Stem("symbolen"), "symbol" );
	deepEqual( Stem("symboliska"), "symbolisk" );
	deepEqual( Stem("symfoni"), "symfoni" );
	deepEqual( Stem("symmetriska"), "symmetrisk" );
	deepEqual( Stem("sympati"), "sympati" );
	deepEqual( Stem("sympatien"), "sympati" );
	deepEqual( Stem("sympatier"), "sympati" );
	deepEqual( Stem("sympatiserande"), "sympatiser" );
	deepEqual( Stem("sympatisk"), "sympatisk" );
	deepEqual( Stem("sympatiske"), "sympatisk" );
	deepEqual( Stem("symptom"), "symptom" );
	deepEqual( Stem("symtom"), "symtom" );
	deepEqual( Stem("syn"), "syn" );
	deepEqual( Stem("syna"), "syn" );
	deepEqual( Stem("synade"), "syn" );
	deepEqual( Stem("synagogan"), "synagogan" );
	deepEqual( Stem("synas"), "syn" );
	deepEqual( Stem("synbar"), "synb" );
	deepEqual( Stem("synbara"), "synbar" );
	deepEqual( Stem("synbarligen"), "synbar" );
	deepEqual( Stem("synbart"), "synbart" );
	deepEqual( Stem("synd"), "synd" );
	deepEqual( Stem("synda"), "synd" );
	deepEqual( Stem("syndabikt"), "syndabik" );
	deepEqual( Stem("syndade"), "synd" );
	deepEqual( Stem("syndaflod"), "syndaflod" );
	deepEqual( Stem("syndare"), "synd" );
	deepEqual( Stem("syndat"), "synd" );
	deepEqual( Stem("syndedag"), "syndedag" );
	deepEqual( Stem("synden"), "synd" );
	deepEqual( Stem("syndens"), "synd" );
	deepEqual( Stem("synder"), "synd" );
	deepEqual( Stem("syndfulla"), "syndfull" );
	deepEqual( Stem("syndig"), "synd" );
	deepEqual( Stem("syndiga"), "synd" );
	deepEqual( Stem("syndigt"), "synd" );
	deepEqual( Stem("synen"), "syn" );
	deepEqual( Stem("syner"), "syn" );
	deepEqual( Stem("synes"), "syn" );
	deepEqual( Stem("synförmåga"), "synförmåg" );
	deepEqual( Stem("synglas"), "syngl" );
	deepEqual( Stem("synlig"), "syn" );
	deepEqual( Stem("synliga"), "syn" );
	deepEqual( Stem("synmamsellen"), "synmamsell" );
	deepEqual( Stem("synnerhet"), "synner" );
	deepEqual( Stem("synnerliga"), "synner" );
	deepEqual( Stem("synnerligast"), "synner" );
	deepEqual( Stem("synnerligen"), "synner" );
	deepEqual( Stem("synnerligt"), "synner" );
	deepEqual( Stem("synpunkt"), "synpunk" );
	deepEqual( Stem("synpunkten"), "synpunk" );
	deepEqual( Stem("synpunkter"), "synpunk" );
	deepEqual( Stem("syns"), "syn" );
	deepEqual( Stem("synslös"), "synslös" );
	deepEqual( Stem("syntes"), "synt" );
	deepEqual( Stem("syntetiskt"), "syntetisk" );
	deepEqual( Stem("synts"), "synt" );
	deepEqual( Stem("synvilla"), "synvill" );
	deepEqual( Stem("synvinkel"), "synvinkel" );
	deepEqual( Stem("syperb"), "syperb" );
	deepEqual( Stem("syperbt"), "syperbt" );
	deepEqual( Stem("syr"), "syr" );
	deepEqual( Stem("syra"), "syr" );
	deepEqual( Stem("syraks"), "syrak" );
	deepEqual( Stem("syrener"), "syren" );
	deepEqual( Stem("syrenerna"), "syren" );
	deepEqual( Stem("syrenhäck"), "syrenhäck" );
	deepEqual( Stem("syrenträden"), "syrenträd" );
	deepEqual( Stem("syrinx"), "syrinx" );
	deepEqual( Stem("syrliga"), "syr" );
	deepEqual( Stem("syrligt"), "syr" );
	deepEqual( Stem("syrmerhet"), "syrmer" );
	deepEqual( Stem("syrprisen"), "syrpris" );
	deepEqual( Stem("syrpriser"), "syrpris" );
	deepEqual( Stem("syrtut"), "syrtut" );
	deepEqual( Stem("syrtuten"), "syrtut" );
	deepEqual( Stem("sys"), "sys" );
	deepEqual( Stem("sysaker"), "sysak" );
	deepEqual( Stem("syskon"), "syskon" );
	deepEqual( Stem("syskonen"), "syskon" );
	deepEqual( Stem("syskonkärlek"), "syskonkärlek" );
	deepEqual( Stem("syskonringen"), "syskonring" );
	deepEqual( Stem("syskonsjäl"), "syskonsjäl" );
	deepEqual( Stem("syskonskara"), "syskonskar" );
	deepEqual( Stem("syskontycke"), "syskontyck" );
	deepEqual( Stem("syskrin"), "syskrin" );
	deepEqual( Stem("syssel"), "syssel" );
	deepEqual( Stem("sysselsatt"), "sysselsat" );
	deepEqual( Stem("sysselsatta"), "sysselsat" );
	deepEqual( Stem("sysselsatte"), "sysselsat" );
	deepEqual( Stem("sysselsätt"), "sysselsät" );
	deepEqual( Stem("sysselsätta"), "sysselsät" );
	deepEqual( Stem("sysselsätter"), "sysselsät" );
	deepEqual( Stem("sysselsättning"), "sysselsättning" );
	deepEqual( Stem("sysselsättningar"), "sysselsättning" );
	deepEqual( Stem("syssla"), "syssl" );
	deepEqual( Stem("sysslade"), "syssl" );
	deepEqual( Stem("sysslar"), "syssl" );
	deepEqual( Stem("sysslat"), "syssl" );
	deepEqual( Stem("syssling"), "syssling" );
	deepEqual( Stem("sysslo"), "sysslo" );
	deepEqual( Stem("sysslolös"), "sysslolös" );
	deepEqual( Stem("sysslolöshet"), "sysslolös" );
	deepEqual( Stem("sysslolöst"), "sysslolös" );
	deepEqual( Stem("sysslor"), "syssl" );
	deepEqual( Stem("systemet"), "systemet" );
	deepEqual( Stem("syster"), "syst" );
	deepEqual( Stem("systerdotter"), "systerdot" );
	deepEqual( Stem("systerhovmästarinnan"), "systerhovmästarinnan" );
	deepEqual( Stem("systerliga"), "syster" );
	deepEqual( Stem("systern"), "syst" );
	deepEqual( Stem("systerns"), "syst" );
	deepEqual( Stem("systers"), "syster" );
	deepEqual( Stem("systerson"), "systerson" );
	deepEqual( Stem("systrar"), "systr" );
	deepEqual( Stem("systrarna"), "systr" );
	deepEqual( Stem("sytt"), "sytt" );
	deepEqual( Stem("sä"), "sä" );
	deepEqual( Stem("säck"), "säck" );
	deepEqual( Stem("säd"), "säd" );
	deepEqual( Stem("säden"), "säd" );
	deepEqual( Stem("sädesfält"), "sädesfält" );
	deepEqual( Stem("säea"), "säea" );
	deepEqual( Stem("säg"), "säg" );
	deepEqual( Stem("säga"), "säg" );
	deepEqual( Stem("sägandes"), "säg" );
	deepEqual( Stem("sägas"), "säg" );
	deepEqual( Stem("sägen"), "säg" );
	deepEqual( Stem("säger"), "säg" );
	deepEqual( Stem("sägerl"), "sägerl" );
	deepEqual( Stem("säges"), "säg" );
	deepEqual( Stem("sägnerna"), "sägn" );
	deepEqual( Stem("sägs"), "säg" );
	deepEqual( Stem("säkcr"), "säkcr" );
	deepEqual( Stem("säker"), "säk" );
	deepEqual( Stem("säkerhet"), "säker" );
	deepEqual( Stem("säkerhets"), "säkerhet" );
	deepEqual( Stem("säkerligen"), "säker" );
	deepEqual( Stem("säkert"), "säkert" );
	deepEqual( Stem("säkra"), "säkr" );
	deepEqual( Stem("säkrare"), "säkr" );
	deepEqual( Stem("säkrast"), "säkr" );
	deepEqual( Stem("säkraste"), "säkr" );
	deepEqual( Stem("sälar"), "säl" );
	deepEqual( Stem("sälarna"), "säl" );
	deepEqual( Stem("sälarne"), "säl" );
	deepEqual( Stem("sälen"), "säl" );
	deepEqual( Stem("sälhund"), "sälhund" );
	deepEqual( Stem("sälhunden"), "sälhund" );
	deepEqual( Stem("sälja"), "sälj" );
	deepEqual( Stem("säljagt"), "säljag" );
	deepEqual( Stem("säljagten"), "säljag" );
	deepEqual( Stem("säljer"), "sälj" );
	deepEqual( Stem("säljerskans"), "säljerskan" );
	deepEqual( Stem("säll"), "säll" );
	deepEqual( Stem("sälla"), "säll" );
	deepEqual( Stem("sällan"), "sällan" );
	deepEqual( Stem("sällar"), "säll" );
	deepEqual( Stem("sällhet"), "säll" );
	deepEqual( Stem("sällheten"), "säll" );
	deepEqual( Stem("sällhets"), "sällhet" );
	deepEqual( Stem("sällhetsdagar"), "sällhetsdag" );
	deepEqual( Stem("sällsam"), "sällsam" );
	deepEqual( Stem("sällsamma"), "sällsamm" );
	deepEqual( Stem("sällsamt"), "sällsamt" );
	deepEqual( Stem("sällskap"), "sällskap" );
	deepEqual( Stem("sällskapandet"), "sällskap" );
	deepEqual( Stem("sällskapet"), "sällskapet" );
	deepEqual( Stem("sällskapets"), "sällskapet" );
	deepEqual( Stem("sällskapsbroder"), "sällskapsbrod" );
	deepEqual( Stem("sällskapsbröder"), "sällskapsbröd" );
	deepEqual( Stem("sällskapsgåfvor"), "sällskapsgåfv" );
	deepEqual( Stem("sällskapskrets"), "sällskapskret" );
	deepEqual( Stem("sällskapslifvets"), "sällskapslifvet" );
	deepEqual( Stem("sällskapslivet"), "sällskapslivet" );
	deepEqual( Stem("sällskapslivets"), "sällskapslivet" );
	deepEqual( Stem("sällskapsmannen"), "sällskapsman" );
	deepEqual( Stem("sällskapsnöje"), "sällskapsnöj" );
	deepEqual( Stem("sällskapsnöjet"), "sällskapsnöjet" );
	deepEqual( Stem("sällsynt"), "sällsynt" );
	deepEqual( Stem("sällsynta"), "sällsynt" );
	deepEqual( Stem("sällsyntare"), "sällsynt" );
	deepEqual( Stem("sällsyntheter"), "sällsynt" );
	deepEqual( Stem("sälsand"), "sälsand" );
	deepEqual( Stem("sälskinn"), "sälskin" );
	deepEqual( Stem("sälskinns"), "sälskin" );
	deepEqual( Stem("sälskins"), "sälskin" );
	deepEqual( Stem("sälskinsmössa"), "sälskinsmöss" );
	deepEqual( Stem("sälskytt"), "sälskyt" );
	deepEqual( Stem("sälskyttarne"), "sälskyt" );
	deepEqual( Stem("sälskyttarnes"), "sälskyttarn" );
	deepEqual( Stem("sälskytten"), "sälskyt" );
	deepEqual( Stem("sälskytteri"), "sälskytteri" );
	deepEqual( Stem("sälskytteriet"), "sälskytteriet" );
	deepEqual( Stem("sälta"), "sält" );
	deepEqual( Stem("sämre"), "sämr" );
	deepEqual( Stem("sämsta"), "sämst" );
	deepEqual( Stem("sänd"), "sänd" );
	deepEqual( Stem("sända"), "sänd" );
	deepEqual( Stem("sände"), "sänd" );
	deepEqual( Stem("sändebud"), "sändebud" );
	deepEqual( Stem("sänder"), "sänd" );
	deepEqual( Stem("sändes"), "sänd" );
	deepEqual( Stem("säng"), "säng" );
	deepEqual( Stem("sängar"), "säng" );
	deepEqual( Stem("sängarna"), "säng" );
	deepEqual( Stem("sängarne"), "säng" );
	deepEqual( Stem("sängbottnar"), "sängbottn" );
	deepEqual( Stem("sängen"), "säng" );
	deepEqual( Stem("sängens"), "säng" );
	deepEqual( Stem("sänggaflarne"), "sänggafl" );
	deepEqual( Stem("sänghalm"), "sänghalm" );
	deepEqual( Stem("sänghimlen"), "sänghiml" );
	deepEqual( Stem("sänghirnlen"), "sänghirnl" );
	deepEqual( Stem("sängkammardörren"), "sängkammardörr" );
	deepEqual( Stem("sängkammare"), "sängkamm" );
	deepEqual( Stem("sängkammaren"), "sängkamm" );
	deepEqual( Stem("sängkammarlif"), "sängkammarlif" );
	deepEqual( Stem("sängkant"), "sängkant" );
	deepEqual( Stem("sängkanten"), "sängkant" );
	deepEqual( Stem("sängkläder"), "sängkläd" );
	deepEqual( Stem("sängkläderna"), "sängkläd" );
	deepEqual( Stem("sängknapp"), "sängknapp" );
	deepEqual( Stem("sängknapparne"), "sängknapp" );
	deepEqual( Stem("sängknappen"), "sängknapp" );
	deepEqual( Stem("sängliggande"), "sängligg" );
	deepEqual( Stem("sängomhänget"), "sängomhänget" );
	deepEqual( Stem("sängs"), "säng" );
	deepEqual( Stem("sängstolpar"), "sängstolp" );
	deepEqual( Stem("sängtäcket"), "sängtäcket" );
	deepEqual( Stem("sänka"), "sänk" );
	deepEqual( Stem("sänker"), "sänk" );
	deepEqual( Stem("sänkes"), "sänk" );
	deepEqual( Stem("sänkt"), "sänk" );
	deepEqual( Stem("sänkta"), "sänk" );
	deepEqual( Stem("sänktc"), "sänktc" );
	deepEqual( Stem("sänkte"), "sänk" );
	deepEqual( Stem("sänktes"), "sänk" );
	deepEqual( Stem("sänt"), "sänt" );
	deepEqual( Stem("särdeles"), "särdel" );
	deepEqual( Stem("säregen"), "säreg" );
	deepEqual( Stem("särskihl"), "särskihl" );
	deepEqual( Stem("särskil"), "särskil" );
	deepEqual( Stem("särskild"), "särskild" );
	deepEqual( Stem("särskilda"), "särskild" );
	deepEqual( Stem("särskildt"), "särskild" );
	deepEqual( Stem("särskilja"), "särskilj" );
	deepEqual( Stem("särskilt"), "särskilt" );
	deepEqual( Stem("särskilta"), "särskilt" );
	deepEqual( Stem("sätherberg"), "sätherberg" );
	deepEqual( Stem("sätt"), "sätt" );
	deepEqual( Stem("sätta"), "sätt" );
	deepEqual( Stem("sättande"), "sätt" );
	deepEqual( Stem("sättas"), "sätt" );
	deepEqual( Stem("sätte"), "sätt" );
	deepEqual( Stem("sätter"), "sätt" );
	deepEqual( Stem("sättet"), "sättet" );
	deepEqual( Stem("sävliga"), "säv" );
	deepEqual( Stem("sävligheten"), "säv" );
	deepEqual( Stem("så"), "så" );
	deepEqual( Stem("sådan"), "sådan" );
	deepEqual( Stem("sådana"), "sådan" );
	deepEqual( Stem("sådant"), "sådant" );
	deepEqual( Stem("sådarnt"), "sådarnt" );
	deepEqual( Stem("sådd"), "sådd" );
	deepEqual( Stem("sådde"), "sådd" );
	deepEqual( Stem("såg"), "såg" );
	deepEqual( Stem("sågar"), "såg" );
	deepEqual( Stem("såge"), "såg" );
	deepEqual( Stem("sågo"), "sågo" );
	deepEqual( Stem("sågos"), "sågo" );
	deepEqual( Stem("sågs"), "såg" );
	deepEqual( Stem("sågspån"), "sågspån" );
	deepEqual( Stem("såld"), "såld" );
	deepEqual( Stem("sålde"), "såld" );
	deepEqual( Stem("således"), "såled" );
	deepEqual( Stem("sålt"), "sålt" );
	deepEqual( Stem("sålts"), "sålt" );
	deepEqual( Stem("sålunda"), "sålund" );
	deepEqual( Stem("sålurlda"), "sålurld" );
	deepEqual( Stem("sång"), "sång" );
	deepEqual( Stem("sångare"), "sång" );
	deepEqual( Stem("sångaren"), "sång" );
	deepEqual( Stem("sångarkor"), "sångark" );
	deepEqual( Stem("sångarkrans"), "sångarkran" );
	deepEqual( Stem("sångbok"), "sångbok" );
	deepEqual( Stem("sångböcker"), "sångböck" );
	deepEqual( Stem("sången"), "sång" );
	deepEqual( Stem("sångens"), "sång" );
	deepEqual( Stem("sånger"), "sång" );
	deepEqual( Stem("sångerna"), "sång" );
	deepEqual( Stem("sångerska"), "sångersk" );
	deepEqual( Stem("sångfar"), "sångf" );
	deepEqual( Stem("sångfågel"), "sångfågel" );
	deepEqual( Stem("sångfågeln"), "sångfågeln" );
	deepEqual( Stem("sångfåglarna"), "sångfågl" );
	deepEqual( Stem("sångmö"), "sångmö" );
	deepEqual( Stem("såpbubbla"), "såpbubbl" );
	deepEqual( Stem("såpbubblekarlarna"), "såpbubblekarl" );
	deepEqual( Stem("sår"), "sår" );
	deepEqual( Stem("såra"), "sår" );
	deepEqual( Stem("sårad"), "sår" );
	deepEqual( Stem("sårade"), "sår" );
	deepEqual( Stem("sårar"), "sår" );
	deepEqual( Stem("sårat"), "sår" );
	deepEqual( Stem("sårbar"), "sårb" );
	deepEqual( Stem("såren"), "sår" );
	deepEqual( Stem("såret"), "såret" );
	deepEqual( Stem("sårtid"), "sårtid" );
	deepEqual( Stem("såser"), "sås" );
	deepEqual( Stem("såsom"), "såsom" );
	deepEqual( Stem("såta"), "såt" );
	deepEqual( Stem("sått"), "sått" );
	deepEqual( Stem("såvida"), "såvid" );
	deepEqual( Stem("såvitt"), "såvit" );
	deepEqual( Stem("såväl"), "såväl" );
	deepEqual( Stem("söckendagar"), "söckendag" );
	deepEqual( Stem("söder"), "söd" );
	deepEqual( Stem("söderberg"), "söderberg" );
	deepEqual( Stem("södern"), "söd" );
	deepEqual( Stem("söderut"), "söderut" );
	deepEqual( Stem("södra"), "södr" );
	deepEqual( Stem("sög"), "sög" );
	deepEqual( Stem("sögo"), "sögo" );
	deepEqual( Stem("sök"), "sök" );
	deepEqual( Stem("söka"), "sök" );
	deepEqual( Stem("sökande"), "sök" );
	deepEqual( Stem("sökandet"), "sök" );
	deepEqual( Stem("sökas"), "sök" );
	deepEqual( Stem("söken"), "sök" );
	deepEqual( Stem("söker"), "sök" );
	deepEqual( Stem("sökt"), "sökt" );
	deepEqual( Stem("sökta"), "sökt" );
	deepEqual( Stem("sökte"), "sökt" );
	deepEqual( Stem("söla"), "söl" );
	deepEqual( Stem("söm"), "söm" );
	deepEqual( Stem("sömlinghågna"), "sömlinghågn" );
	deepEqual( Stem("sömmarna"), "sömm" );
	deepEqual( Stem("sömmen"), "sömm" );
	deepEqual( Stem("sömmerska"), "sömmersk" );
	deepEqual( Stem("sömn"), "sömn" );
	deepEqual( Stem("sömnad"), "sömn" );
	deepEqual( Stem("sömndrucken"), "sömndruck" );
	deepEqual( Stem("sömnen"), "sömn" );
	deepEqual( Stem("sömnens"), "sömn" );
	deepEqual( Stem("sömngivande"), "sömngiv" );
	deepEqual( Stem("sömngångerska"), "sömngångersk" );
	deepEqual( Stem("sömngångerskas"), "sömngångersk" );
	deepEqual( Stem("sömnig"), "sömn" );
	deepEqual( Stem("sömnigt"), "sömn" );
	deepEqual( Stem("sömnlös"), "sömnlös" );
	deepEqual( Stem("sömnlösa"), "sömnlös" );
	deepEqual( Stem("sömnlöses"), "sömnlös" );
	deepEqual( Stem("sön"), "sön" );
	deepEqual( Stem("sönda"), "sönd" );
	deepEqual( Stem("söndag"), "söndag" );
	deepEqual( Stem("söndagar"), "söndag" );
	deepEqual( Stem("söndagarna"), "söndag" );
	deepEqual( Stem("söndagen"), "söndag" );
	deepEqual( Stem("söndagens"), "söndag" );
	deepEqual( Stem("söndags"), "söndag" );
	deepEqual( Stem("söndagsförmiddag"), "söndagsförmiddag" );
	deepEqual( Stem("söndagsförmiddagen"), "söndagsförmiddag" );
	deepEqual( Stem("söndagskväll"), "söndagskväll" );
	deepEqual( Stem("söndagsmiddagen"), "söndagsmiddag" );
	deepEqual( Stem("söndagsmorgon"), "söndagsmorgon" );
	deepEqual( Stem("söndagsmorgonen"), "söndagsmorgon" );
	deepEqual( Stem("söndagsmorgonens"), "söndagsmorgon" );
	deepEqual( Stem("söndagspredikningar"), "söndagspredikning" );
	deepEqual( Stem("sönder"), "sönd" );
	deepEqual( Stem("sönderbrutna"), "sönderbrutn" );
	deepEqual( Stem("sönderbråka"), "sönderbråk" );
	deepEqual( Stem("sönderbrötos"), "sönderbröto" );
	deepEqual( Stem("sönderklämde"), "sönderklämd" );
	deepEqual( Stem("sönderplockad"), "sönderplock" );
	deepEqual( Stem("sönderrivna"), "sönderrivn" );
	deepEqual( Stem("sönderskuren"), "sönderskur" );
	deepEqual( Stem("sönderslagen"), "sönderslag" );
	deepEqual( Stem("sönderslaget"), "sönderslaget" );
	deepEqual( Stem("söndersleto"), "söndersleto" );
	deepEqual( Stem("sönderslitande"), "sönderslit" );
	deepEqual( Stem("sönderslites"), "sönderslit" );
	deepEqual( Stem("söndertryckte"), "söndertryck" );
	deepEqual( Stem("söndriga"), "söndr" );
	deepEqual( Stem("söner"), "sön" );
	deepEqual( Stem("söp"), "söp" );
	deepEqual( Stem("sörj"), "sörj" );
	deepEqual( Stem("sörja"), "sörj" );
	deepEqual( Stem("sörjande"), "sörj" );
	deepEqual( Stem("sörjd"), "sörjd" );
	deepEqual( Stem("sörjde"), "sörjd" );
	deepEqual( Stem("sörjekläder"), "sörjekläd" );
	deepEqual( Stem("sörjen"), "sörj" );
	deepEqual( Stem("sörjer"), "sörj" );
	deepEqual( Stem("sörjt"), "sörjt" );
	deepEqual( Stem("sörmland"), "sörmland" );
	deepEqual( Stem("sörmlandsgodset"), "sörmlandsgodset" );
	deepEqual( Stem("sörplar"), "sörpl" );
	deepEqual( Stem("söt"), "söt" );
	deepEqual( Stem("söta"), "söt" );
	deepEqual( Stem("sötaktig"), "sötakt" );
	deepEqual( Stem("sötaste"), "söt" );
	deepEqual( Stem("söte"), "söt" );
	deepEqual( Stem("sötma"), "sötm" );
	deepEqual( Stem("sötnos"), "sötno" );
	deepEqual( Stem("sötsaker"), "sötsak" );
	deepEqual( Stem("sötsurt"), "sötsurt" );
	deepEqual( Stem("sött"), "sött" );
	deepEqual( Stem("sövde"), "sövd" );
	deepEqual( Stem("sövdes"), "sövd" );
	deepEqual( Stem("t"), "t" );
	deepEqual( Stem("ta"), "ta" );
	deepEqual( Stem("tableau"), "tableau" );
	deepEqual( Stem("tablå"), "tablå" );
	deepEqual( Stem("tablån"), "tablån" );
	deepEqual( Stem("taburett"), "taburet" );
	deepEqual( Stem("tack"), "tack" );
	deepEqual( Stem("tacka"), "tack" );
	deepEqual( Stem("tackad"), "tack" );
	deepEqual( Stem("tackade"), "tack" );
	deepEqual( Stem("tackar"), "tack" );
	deepEqual( Stem("tackars"), "tackar" );
	deepEqual( Stem("tackat"), "tack" );
	deepEqual( Stem("tackel"), "tackel" );
	deepEqual( Stem("tackladt"), "tacklad" );
	deepEqual( Stem("tacklaget"), "tacklaget" );
	deepEqual( Stem("tackling"), "tackling" );
	deepEqual( Stem("tacklös"), "tacklös" );
	deepEqual( Stem("tacksam"), "tacksam" );
	deepEqual( Stem("tacksamhen"), "tacksamh" );
	deepEqual( Stem("tacksamhet"), "tacksam" );
	deepEqual( Stem("tacksamheten"), "tacksam" );
	deepEqual( Stem("tacksamhetsförbindelse"), "tacksamhetsförbind" );
	deepEqual( Stem("tacksamma"), "tacksamm" );
	deepEqual( Stem("tacksammaste"), "tacksamm" );
	deepEqual( Stem("tacksamme"), "tacksamm" );
	deepEqual( Stem("tacksamt"), "tacksamt" );
	deepEqual( Stem("tacksägelse"), "tacksäg" );
	deepEqual( Stem("tacksägelser"), "tacksäg" );
	deepEqual( Stem("tad"), "tad" );
	deepEqual( Stem("tade"), "tad" );
	deepEqual( Stem("tadel"), "tadel" );
	deepEqual( Stem("tadelfritt"), "tadelfrit" );
	deepEqual( Stem("tadlade"), "tadl" );
	deepEqual( Stem("tadlar"), "tadl" );
	deepEqual( Stem("tafatt"), "tafat" );
	deepEqual( Stem("tafatta"), "tafat" );
	deepEqual( Stem("tafatte"), "tafat" );
	deepEqual( Stem("tafattheten"), "tafat" );
	deepEqual( Stem("tafla"), "tafl" );
	deepEqual( Stem("taflan"), "taflan" );
	deepEqual( Stem("taflor"), "tafl" );
	deepEqual( Stem("tafvelsamlingen"), "tafvelsamling" );
	deepEqual( Stem("tag"), "tag" );
	deepEqual( Stem("taga"), "tag" );
	deepEqual( Stem("tagas"), "tag" );
	deepEqual( Stem("tage"), "tag" );
	deepEqual( Stem("tagel"), "tagel" );
	deepEqual( Stem("tageldynor"), "tageldyn" );
	deepEqual( Stem("tagen"), "tag" );
	deepEqual( Stem("tager"), "tag" );
	deepEqual( Stem("tages"), "tag" );
	deepEqual( Stem("taget"), "taget" );
	deepEqual( Stem("tagg"), "tagg" );
	deepEqual( Stem("taggar"), "tagg" );
	deepEqual( Stem("tagit"), "tagit" );
	deepEqual( Stem("tagits"), "tagit" );
	deepEqual( Stem("taglet"), "taglet" );
	deepEqual( Stem("tagna"), "tagn" );
	deepEqual( Stem("tags"), "tag" );
	deepEqual( Stem("tak"), "tak" );
	deepEqual( Stem("takdroppet"), "takdroppet" );
	deepEqual( Stem("taken"), "tak" );
	deepEqual( Stem("taket"), "taket" );
	deepEqual( Stem("takets"), "taket" );
	deepEqual( Stem("takfönstret"), "takfönstret" );
	deepEqual( Stem("taklampan"), "taklampan" );
	deepEqual( Stem("takränna"), "takrän" );
	deepEqual( Stem("takrännan"), "takrännan" );
	deepEqual( Stem("takrännoma"), "takrännom" );
	deepEqual( Stem("takstolar"), "takstol" );
	deepEqual( Stem("takt"), "takt" );
	deepEqual( Stem("takten"), "takt" );
	deepEqual( Stem("taktpinnen"), "taktpin" );
	deepEqual( Stem("takåsen"), "takås" );
	deepEqual( Stem("tal"), "tal" );
	deepEqual( Stem("tala"), "tal" );
	deepEqual( Stem("talade"), "tal" );
	deepEqual( Stem("talades"), "tal" );
	deepEqual( Stem("taladt"), "talad" );
	deepEqual( Stem("talande"), "tal" );
	deepEqual( Stem("talang"), "talang" );
	deepEqual( Stem("talanger"), "talang" );
	deepEqual( Stem("talar"), "tal" );
	deepEqual( Stem("talare"), "tal" );
	deepEqual( Stem("talas"), "tal" );
	deepEqual( Stem("talat"), "tal" );
	deepEqual( Stem("talen"), "tal" );
	deepEqual( Stem("talesätt"), "talesät" );
	deepEqual( Stem("talet"), "talet" );
	deepEqual( Stem("talets"), "talet" );
	deepEqual( Stem("talg"), "talg" );
	deepEqual( Stem("talgiga"), "talg" );
	deepEqual( Stem("taligt"), "tal" );
	deepEqual( Stem("talis"), "talis" );
	deepEqual( Stem("talisman"), "talisman" );
	deepEqual( Stem("talismanen"), "talisman" );
	deepEqual( Stem("tallar"), "tall" );
	deepEqual( Stem("tallarna"), "tall" );
	deepEqual( Stem("tallen"), "tall" );
	deepEqual( Stem("tallrik"), "tallrik" );
	deepEqual( Stem("tallrikar"), "tallrik" );
	deepEqual( Stem("tallriken"), "tallrik" );
	deepEqual( Stem("tallskog"), "tallskog" );
	deepEqual( Stem("talmikärlek"), "talmikärlek" );
	deepEqual( Stem("talorgan"), "talorgan" );
	deepEqual( Stem("talrika"), "talrik" );
	deepEqual( Stem("talriken"), "talrik" );
	deepEqual( Stem("talrikhet"), "talrik" );
	deepEqual( Stem("talt"), "talt" );
	deepEqual( Stem("talte"), "talt" );
	deepEqual( Stem("taltes"), "talt" );
	deepEqual( Stem("tam"), "tam" );
	deepEqual( Stem("tamburdörren"), "tamburdörr" );
	deepEqual( Stem("tamburen"), "tambur" );
	deepEqual( Stem("tamburens"), "tambur" );
	deepEqual( Stem("tan"), "tan" );
	deepEqual( Stem("tand"), "tand" );
	deepEqual( Stem("tande"), "tand" );
	deepEqual( Stem("tandlösa"), "tandlös" );
	deepEqual( Stem("tandvärk"), "tandvärk" );
	deepEqual( Stem("tangenterna"), "tangent" );
	deepEqual( Stem("tanka"), "tank" );
	deepEqual( Stem("tankar"), "tank" );
	deepEqual( Stem("tankarna"), "tank" );
	deepEqual( Stem("tankarne"), "tank" );
	deepEqual( Stem("tanke"), "tank" );
	deepEqual( Stem("tankeföljd"), "tankeföljd" );
	deepEqual( Stem("tankegång"), "tankegång" );
	deepEqual( Stem("tankekrets"), "tankekret" );
	deepEqual( Stem("tanken"), "tank" );
	deepEqual( Stem("tankeruset"), "tankeruset" );
	deepEqual( Stem("tankeverksamhet"), "tankeverksam" );
	deepEqual( Stem("tankfull"), "tankfull" );
	deepEqual( Stem("tankfulla"), "tankfull" );
	deepEqual( Stem("tankfullt"), "tankfull" );
	deepEqual( Stem("tanklösa"), "tanklös" );
	deepEqual( Stem("tanklöshet"), "tanklös" );
	deepEqual( Stem("tanklöst"), "tanklös" );
	deepEqual( Stem("tankspridd"), "tanksprid" );
	deepEqual( Stem("tankspridt"), "tanksprid" );
	deepEqual( Stem("tankspritt"), "tanksprit" );
	deepEqual( Stem("tankte"), "tank" );
	deepEqual( Stem("tant"), "tant" );
	deepEqual( Stem("tants"), "tant" );
	deepEqual( Stem("tapeten"), "tapet" );
	deepEqual( Stem("tapeter"), "tapet" );
	deepEqual( Stem("tapetstycken"), "tapetstyck" );
	deepEqual( Stem("tappa"), "tapp" );
	deepEqual( Stem("tappade"), "tapp" );
	deepEqual( Stem("tappadt"), "tappad" );
	deepEqual( Stem("tappar"), "tapp" );
	deepEqual( Stem("tappat"), "tapp" );
	deepEqual( Stem("tapper"), "tapp" );
	deepEqual( Stem("tappert"), "tappert" );
	deepEqual( Stem("tappra"), "tappr" );
	deepEqual( Stem("tapprare"), "tappr" );
	deepEqual( Stem("tar"), "tar" );
	deepEqual( Stem("tarar"), "tar" );
	deepEqual( Stem("tarfliga"), "tarf" );
	deepEqual( Stem("tarflighet"), "tarf" );
	deepEqual( Stem("tarfyllda"), "tarfylld" );
	deepEqual( Stem("tarkar"), "tark" );
	deepEqual( Stem("tarm"), "tarm" );
	deepEqual( Stem("tarvar"), "tarv" );
	deepEqual( Stem("tarvlig"), "tarv" );
	deepEqual( Stem("tarvliga"), "tarv" );
	deepEqual( Stem("tarvligare"), "tarv" );
	deepEqual( Stem("tarvligaste"), "tarv" );
	deepEqual( Stem("tarvligt"), "tarv" );
	deepEqual( Stem("tas"), "tas" );
	deepEqual( Stem("tass"), "tass" );
	deepEqual( Stem("tassa"), "tass" );
	deepEqual( Stem("tassade"), "tass" );
	deepEqual( Stem("tassande"), "tass" );
	deepEqual( Stem("tassandet"), "tass" );
	deepEqual( Stem("tassar"), "tass" );
	deepEqual( Stem("tassarna"), "tass" );
	deepEqual( Stem("tassla"), "tassl" );
	deepEqual( Stem("tatt"), "tatt" );
	deepEqual( Stem("taverna"), "tav" );
	deepEqual( Stem("tavernens"), "tavern" );
	deepEqual( Stem("tavla"), "tavl" );
	deepEqual( Stem("tavlan"), "tavlan" );
	deepEqual( Stem("tavlor"), "tavl" );
	deepEqual( Stem("tavlorna"), "tavl" );
	deepEqual( Stem("taxameter"), "taxamet" );
	deepEqual( Stem("taxerades"), "taxer" );
	deepEqual( Stem("te"), "te" );
	deepEqual( Stem("teater"), "teat" );
	deepEqual( Stem("teaterbiljetter"), "teaterbiljet" );
	deepEqual( Stem("teaterkvällen"), "teaterkväll" );
	deepEqual( Stem("teatern"), "teat" );
	deepEqual( Stem("teaterns"), "teat" );
	deepEqual( Stem("teaterpjes"), "teaterpj" );
	deepEqual( Stem("teaterpjäs"), "teaterpjäs" );
	deepEqual( Stem("teaterpjäser"), "teaterpjäs" );
	deepEqual( Stem("teatersalong"), "teatersalong" );
	deepEqual( Stem("teatersalongen"), "teatersalong" );
	deepEqual( Stem("teaterscenerna"), "teaterscen" );
	deepEqual( Stem("teaterstycke"), "teaterstyck" );
	deepEqual( Stem("teaterväsende"), "teaterväsend" );
	deepEqual( Stem("teatrarnas"), "teatr" );
	deepEqual( Stem("tebordet"), "tebordet" );
	deepEqual( Stem("tecken"), "teck" );
	deepEqual( Stem("teckna"), "teckn" );
	deepEqual( Stem("tecknad"), "teckn" );
	deepEqual( Stem("tecknade"), "teckn" );
	deepEqual( Stem("tecknadt"), "tecknad" );
	deepEqual( Stem("tecknar"), "teckn" );
	deepEqual( Stem("tecknat"), "teckn" );
	deepEqual( Stem("tecknen"), "teckn" );
	deepEqual( Stem("tecknet"), "tecknet" );
	deepEqual( Stem("teckning"), "teckning" );
	deepEqual( Stem("teckningar"), "teckning" );
	deepEqual( Stem("teckningen"), "teckning" );
	deepEqual( Stem("tedde"), "tedd" );
	deepEqual( Stem("teddybjörn"), "teddybjörn" );
	deepEqual( Stem("teddybjörnen"), "teddybjörn" );
	deepEqual( Stem("teet"), "teet" );
	deepEqual( Stem("tefat"), "tef" );
	deepEqual( Stem("tefatet"), "tefatet" );
	deepEqual( Stem("teg"), "teg" );
	deepEqual( Stem("tegat"), "teg" );
	deepEqual( Stem("tegel"), "tegel" );
	deepEqual( Stem("tegelrött"), "tegelröt" );
	deepEqual( Stem("tegeltorn"), "tegeltorn" );
	deepEqual( Stem("teglen"), "tegl" );
	deepEqual( Stem("tegner"), "tegn" );
	deepEqual( Stem("tego"), "tego" );
	deepEqual( Stem("tekanistern"), "tekanist" );
	deepEqual( Stem("tekopp"), "tekopp" );
	deepEqual( Stem("tekoppar"), "tekopp" );
	deepEqual( Stem("tekoppen"), "tekopp" );
	deepEqual( Stem("tekök"), "tekök" );
	deepEqual( Stem("telefon"), "telefon" );
	deepEqual( Stem("telefonen"), "telefon" );
	deepEqual( Stem("telefonera"), "telefoner" );
	deepEqual( Stem("telefonerade"), "telefoner" );
	deepEqual( Stem("telefonerar"), "telefoner" );
	deepEqual( Stem("telefonstationen"), "telefonstation" );
	deepEqual( Stem("telefontrad"), "telefontr" );
	deepEqual( Stem("telefontråd"), "telefontråd" );
	deepEqual( Stem("telefontrådarna"), "telefontråd" );
	deepEqual( Stem("telegramstil"), "telegramstil" );
	deepEqual( Stem("telning"), "telning" );
	deepEqual( Stem("telsen"), "tels" );
	deepEqual( Stem("tema"), "tem" );
	deepEqual( Stem("temligen"), "tem" );
	deepEqual( Stem("temligt"), "tem" );
	deepEqual( Stem("tempel"), "tempel" );
	deepEqual( Stem("tempeltjänares"), "tempeltjänar" );
	deepEqual( Stem("tempeltun"), "tempeltun" );
	deepEqual( Stem("templet"), "templet" );
	deepEqual( Stem("tempo"), "tempo" );
	deepEqual( Stem("temps"), "temp" );
	deepEqual( Stem("ten"), "ten" );
	deepEqual( Stem("tendens"), "tend" );
	deepEqual( Stem("tenn"), "tenn" );
	deepEqual( Stem("tennsoldat"), "tennsold" );
	deepEqual( Stem("tennsoldaten"), "tennsoldat" );
	deepEqual( Stem("tenntallrikar"), "tenntallrik" );
	deepEqual( Stem("tens"), "ten" );
	deepEqual( Stem("teodor"), "teod" );
	deepEqual( Stem("teofilius"), "teofilius" );
	deepEqual( Stem("teologer"), "teolog" );
	deepEqual( Stem("teologiska"), "teologisk" );
	deepEqual( Stem("teoretiska"), "teoretisk" );
	deepEqual( Stem("teosofi"), "teosofi" );
	deepEqual( Stem("ter"), "ter" );
	deepEqual( Stem("teresa"), "teres" );
	deepEqual( Stem("teresas"), "teres" );
	deepEqual( Stem("terlosaren"), "terlos" );
	deepEqual( Stem("term"), "term" );
	deepEqual( Stem("termer"), "term" );
	deepEqual( Stem("terminen"), "termin" );
	deepEqual( Stem("termometern"), "termomet" );
	deepEqual( Stem("ternström"), "ternström" );
	deepEqual( Stem("ternströms"), "ternström" );
	deepEqual( Stem("ternströrm"), "ternströrm" );
	deepEqual( Stem("terrassen"), "terrass" );
	deepEqual( Stem("terrier"), "terri" );
	deepEqual( Stem("terriern"), "terri" );
	deepEqual( Stem("terrierns"), "terri" );
	deepEqual( Stem("tesen"), "tes" );
	deepEqual( Stem("tesked"), "tesked" );
	deepEqual( Stem("test"), "test" );
	deepEqual( Stem("testa"), "test" );
	deepEqual( Stem("testamente"), "testament" );
	deepEqual( Stem("testamentel"), "testamentel" );
	deepEqual( Stem("testamentera"), "testamenter" );
	deepEqual( Stem("testamentet"), "testamentet" );
	deepEqual( Stem("testamentets"), "testamentet" );
	deepEqual( Stem("testamentsaffären"), "testamentsaffär" );
	deepEqual( Stem("testamentsfrågan"), "testamentsfrågan" );
	deepEqual( Stem("tet"), "tet" );
	deepEqual( Stem("tete"), "tet" );
	deepEqual( Stem("tetimmen"), "tetimm" );
	deepEqual( Stem("tevattnet"), "tevattnet" );
	deepEqual( Stem("texten"), "text" );
	deepEqual( Stem("thanatophilander"), "thanatophiland" );
	deepEqual( Stem("theol"), "theol" );
	deepEqual( Stem("therese"), "theres" );
	deepEqual( Stem("thomas"), "thom" );
	deepEqual( Stem("thyren"), "thyr" );
	deepEqual( Stem("ti"), "ti" );
	deepEqual( Stem("tia"), "tia" );
	deepEqual( Stem("tibastgren"), "tibastgr" );
	deepEqual( Stem("tiber"), "tib" );
	deepEqual( Stem("ticka"), "tick" );
	deepEqual( Stem("tickade"), "tick" );
	deepEqual( Stem("tickan"), "tickan" );
	deepEqual( Stem("tickande"), "tick" );
	deepEqual( Stem("tickar"), "tick" );
	deepEqual( Stem("tid"), "tid" );
	deepEqual( Stem("tidcns"), "tidcn" );
	deepEqual( Stem("tiden"), "tid" );
	deepEqual( Stem("tidender"), "tidend" );
	deepEqual( Stem("tidens"), "tid" );
	deepEqual( Stem("tider"), "tid" );
	deepEqual( Stem("tiderna"), "tid" );
	deepEqual( Stem("tidernas"), "tid" );
	deepEqual( Stem("tiders"), "tider" );
	deepEqual( Stem("tidevarv"), "tidevarv" );
	deepEqual( Stem("tidevarvs"), "tidevarv" );
	deepEqual( Stem("tidig"), "tid" );
	deepEqual( Stem("tidiga"), "tid" );
	deepEqual( Stem("tidigare"), "tid" );
	deepEqual( Stem("tidigast"), "tid" );
	deepEqual( Stem("tidigt"), "tid" );
	deepEqual( Stem("tidlös"), "tidlös" );
	deepEqual( Stem("tidning"), "tidning" );
	deepEqual( Stem("tidningar"), "tidning" );
	deepEqual( Stem("tidningarna"), "tidning" );
	deepEqual( Stem("tidningarnas"), "tidning" );
	deepEqual( Stem("tidningen"), "tidning" );
	deepEqual( Stem("tidningsblad"), "tidningsbl" );
	deepEqual( Stem("tidningskanten"), "tidningskant" );
	deepEqual( Stem("tidningskontoret"), "tidningskontoret" );
	deepEqual( Stem("tidningspacken"), "tidningspack" );
	deepEqual( Stem("tidningspojke"), "tidningspojk" );
	deepEqual( Stem("tidningsurklipp"), "tidningsurklipp" );
	deepEqual( Stem("tidpunkt"), "tidpunk" );
	deepEqual( Stem("tidrn"), "tidrn" );
	deepEqual( Stem("tids"), "tid" );
	deepEqual( Stem("tidsfördriv"), "tidsfördriv" );
	deepEqual( Stem("tidskrift"), "tidskrift" );
	deepEqual( Stem("tidskrifterna"), "tidskrift" );
	deepEqual( Stem("tidspillan"), "tidspillan" );
	deepEqual( Stem("tidsutsikter"), "tidsutsik" );
	deepEqual( Stem("tidtals"), "tidtal" );
	deepEqual( Stem("tig"), "tig" );
	deepEqual( Stem("tiga"), "tig" );
	deepEqual( Stem("tigande"), "tig" );
	deepEqual( Stem("tiger"), "tig" );
	deepEqual( Stem("tigern"), "tig" );
	deepEqual( Stem("tigga"), "tigg" );
	deepEqual( Stem("tiggande"), "tigg" );
	deepEqual( Stem("tiggaraktig"), "tiggarakt" );
	deepEqual( Stem("tiggare"), "tigg" );
	deepEqual( Stem("tiggarländ"), "tiggarländ" );
	deepEqual( Stem("tiggde"), "tigg" );
	deepEqual( Stem("tigger"), "tigg" );
	deepEqual( Stem("tiggt"), "tigg" );
	deepEqual( Stem("tigt"), "tigt" );
	deepEqual( Stem("tiil"), "tiil" );
	deepEqual( Stem("tiitt"), "tiitt" );
	deepEqual( Stem("tik"), "tik" );
	deepEqual( Stem("til"), "til" );
	deepEqual( Stem("tili"), "tili" );
	deepEqual( Stem("till"), "till" );
	deepEqual( Stem("tillade"), "till" );
	deepEqual( Stem("tillades"), "till" );
	deepEqual( Stem("tillaga"), "tillag" );
	deepEqual( Stem("tillagat"), "tillag" );
	deepEqual( Stem("tillagda"), "tillag" );
	deepEqual( Stem("tillbaka"), "tillbak" );
	deepEqual( Stem("tillbakahålla"), "tillbakahåll" );
	deepEqual( Stem("tillbakalutad"), "tillbakalut" );
	deepEqual( Stem("tillbakalutat"), "tillbakalut" );
	deepEqual( Stem("tillbakaskjuten"), "tillbakaskjut" );
	deepEqual( Stem("tillbakastruket"), "tillbakastruket" );
	deepEqual( Stem("tillbakasänd"), "tillbakasänd" );
	deepEqual( Stem("tillbakavisa"), "tillbakavis" );
	deepEqual( Stem("tillbalka"), "tillbalk" );
	deepEqual( Stem("tillbedjan"), "tillbedjan" );
	deepEqual( Stem("tillbedjande"), "tillbedj" );
	deepEqual( Stem("tillbedjare"), "tillbedj" );
	deepEqual( Stem("tillbedjares"), "tillbedjar" );
	deepEqual( Stem("tillbehöret"), "tillbehöret" );
	deepEqual( Stem("tillber"), "tillb" );
	deepEqual( Stem("tillbett"), "tillbet" );
	deepEqual( Stem("tillbragt"), "tillbrag" );
	deepEqual( Stem("tillbragte"), "tillbrag" );
	deepEqual( Stem("tillbragtes"), "tillbrag" );
	deepEqual( Stem("tillbringa"), "tillbring" );
	deepEqual( Stem("tillbringade"), "tillbring" );
	deepEqual( Stem("tillbringare"), "tillbring" );
	deepEqual( Stem("tillbud"), "tillbud" );
	deepEqual( Stem("tillbättre"), "tillbättr" );
	deepEqual( Stem("tillbörlig"), "tillbör" );
	deepEqual( Stem("tillbörligt"), "tillbör" );
	deepEqual( Stem("tilldelad"), "tilldel" );
	deepEqual( Stem("tilldess"), "tilldess" );
	deepEqual( Stem("tilldraga"), "tilldrag" );
	deepEqual( Stem("tilldragande"), "tilldrag" );
	deepEqual( Stem("tilldragelse"), "tilldrag" );
	deepEqual( Stem("tilldragelser"), "tilldrag" );
	deepEqual( Stem("tilldrog"), "tilldrog" );
	deepEqual( Stem("tillfaller"), "tillfall" );
	deepEqual( Stem("tillflykt"), "tillflyk" );
	deepEqual( Stem("tillflyktsort"), "tillflyktsort" );
	deepEqual( Stem("tillfogad"), "tillfog" );
	deepEqual( Stem("tillfogade"), "tillfog" );
	deepEqual( Stem("tillfogat"), "tillfog" );
	deepEqual( Stem("tillfreds"), "tillfred" );
	deepEqual( Stem("tillfredss"), "tillfredss" );
	deepEqual( Stem("tillfredsstallt"), "tillfredsstallt" );
	deepEqual( Stem("tillfredsstäld"), "tillfredsstäld" );
	deepEqual( Stem("tillfredsstälda"), "tillfredsstäld" );
	deepEqual( Stem("tillfredsställa"), "tillfredsställ" );
	deepEqual( Stem("tillfredsställande"), "tillfredsställ" );
	deepEqual( Stem("tillfredsställd"), "tillfredsställd" );
	deepEqual( Stem("tillfredsställde"), "tillfredsställd" );
	deepEqual( Stem("tillfredsställdes"), "tillfredsställd" );
	deepEqual( Stem("tillfredsställelse"), "tillfredsställ" );
	deepEqual( Stem("tillfredsställelsen"), "tillfredsställ" );
	deepEqual( Stem("tillfrisknad"), "tillfriskn" );
	deepEqual( Stem("tillfrisknade"), "tillfriskn" );
	deepEqual( Stem("tillfälle"), "tillfäll" );
	deepEqual( Stem("tillfällen"), "tillfäll" );
	deepEqual( Stem("tillfället"), "tillfället" );
	deepEqual( Stem("tillfällig"), "tillfäl" );
	deepEqual( Stem("tillfälliga"), "tillfäl" );
	deepEqual( Stem("tillfällighet"), "tillfäl" );
	deepEqual( Stem("tillfälligheten"), "tillfäl" );
	deepEqual( Stem("tillfälligheter"), "tillfäl" );
	deepEqual( Stem("tillfälligt"), "tillfäl" );
	deepEqual( Stem("tillfälligtvis"), "tillfälligtvis" );
	deepEqual( Stem("tillföll"), "tillföll" );
	deepEqual( Stem("tillförordnad"), "tillförordn" );
	deepEqual( Stem("tillförsigt"), "tillförs" );
	deepEqual( Stem("tillgifne"), "tillgifn" );
	deepEqual( Stem("tillgifva"), "tillgifv" );
	deepEqual( Stem("tillgifvenhet"), "tillgifven" );
	deepEqual( Stem("tillgivenhet"), "tillgiven" );
	deepEqual( Stem("tillgjord"), "tillgjord" );
	deepEqual( Stem("tillgjorda"), "tillgjord" );
	deepEqual( Stem("tillgjort"), "tillgjort" );
	deepEqual( Stem("tillgodonjuta"), "tillgodonjut" );
	deepEqual( Stem("tillgänglig"), "tillgäng" );
	deepEqual( Stem("tillgå"), "tillgå" );
	deepEqual( Stem("tillgång"), "tillgång" );
	deepEqual( Stem("tillgångar"), "tillgång" );
	deepEqual( Stem("tillhanda"), "tillhand" );
	deepEqual( Stem("tillhandakommet"), "tillhandakommet" );
	deepEqual( Stem("tillhjälp"), "tillhjälp" );
	deepEqual( Stem("tillhka"), "tillhk" );
	deepEqual( Stem("tillhopa"), "tillhop" );
	deepEqual( Stem("tillhorde"), "tillhord" );
	deepEqual( Stem("tillhort"), "tillhort" );
	deepEqual( Stem("tillhugget"), "tillhugget" );
	deepEqual( Stem("tillhygge"), "tillhygg" );
	deepEqual( Stem("tillhåll"), "tillhåll" );
	deepEqual( Stem("tillhör"), "tillhör" );
	deepEqual( Stem("tillhöra"), "tillhör" );
	deepEqual( Stem("tillhörcle"), "tillhörcl" );
	deepEqual( Stem("tillhörde"), "tillhörd" );
	deepEqual( Stem("tillhörighet"), "tillhör" );
	deepEqual( Stem("tillhörigt"), "tillhör" );
	deepEqual( Stem("tillhört"), "tillhört" );
	deepEqual( Stem("tillika"), "tillik" );
	deepEqual( Stem("tillintetgjord"), "tillintetgjord" );
	deepEqual( Stem("tillintetgöra"), "tillintetgör" );
	deepEqual( Stem("tillit"), "tillit" );
	deepEqual( Stem("tillitsfullt"), "tillitsfull" );
	deepEqual( Stem("tillkalla"), "tillkall" );
	deepEqual( Stem("tillkallandet"), "tillkall" );
	deepEqual( Stem("tillkom"), "tillkom" );
	deepEqual( Stem("tillkommande"), "tillkomm" );
	deepEqual( Stem("tillkommit"), "tillkommit" );
	deepEqual( Stem("tillkommo"), "tillkommo" );
	deepEqual( Stem("tillkänna"), "tillkän" );
	deepEqual( Stem("tillkännagav"), "tillkännagav" );
	deepEqual( Stem("tillkännager"), "tillkännag" );
	deepEqual( Stem("tillkännagifva"), "tillkännagifv" );
	deepEqual( Stem("tillkännagiva"), "tillkännagiv" );
	deepEqual( Stem("tillkännagåfvo"), "tillkännagåfvo" );
	deepEqual( Stem("tillkännagåvo"), "tillkännagåvo" );
	deepEqual( Stem("tilllagas"), "tilllag" );
	deepEqual( Stem("tilllaglt"), "tilllaglt" );
	deepEqual( Stem("tillmäten"), "tillmät" );
	deepEqual( Stem("tillmäter"), "tillmät" );
	deepEqual( Stem("tillmötesgående"), "tillmötesgåend" );
	deepEqual( Stem("tillnamnet"), "tillnamnet" );
	deepEqual( Stem("tilloaka"), "tilloak" );
	deepEqual( Stem("tillreda"), "tillred" );
	deepEqual( Stem("tillredd"), "tillred" );
	deepEqual( Stem("tillredelser"), "tillred" );
	deepEqual( Stem("tillredelserna"), "tillred" );
	deepEqual( Stem("tillreder"), "tillred" );
	deepEqual( Stem("tillrop"), "tillrop" );
	deepEqual( Stem("tillrustningar"), "tillrustning" );
	deepEqual( Stem("tillrustningen"), "tillrustning" );
	deepEqual( Stem("tillryggalagt"), "tillryggalag" );
	deepEqual( Stem("tillräcklig"), "tillräck" );
	deepEqual( Stem("tillräckliga"), "tillräck" );
	deepEqual( Stem("tillräckligt"), "tillräck" );
	deepEqual( Stem("tillräknade"), "tillräkn" );
	deepEqual( Stem("tillräkne"), "tillräkn" );
	deepEqual( Stem("tillrättavisning"), "tillrättavisning" );
	deepEqual( Stem("tillråna"), "tillrån" );
	deepEqual( Stem("tills"), "till" );
	deepEqual( Stem("tillsade"), "tills" );
	deepEqual( Stem("tillsades"), "tills" );
	deepEqual( Stem("tillsagt"), "tillsag" );
	deepEqual( Stem("tillsam"), "tillsam" );
	deepEqual( Stem("tillsamman"), "tillsamman" );
	deepEqual( Stem("tillsammans"), "tillsamman" );
	deepEqual( Stem("tillsats"), "tillsat" );
	deepEqual( Stem("tillse"), "tills" );
	deepEqual( Stem("tillskapade"), "tillskap" );
	deepEqual( Stem("tillskott"), "tillskot" );
	deepEqual( Stem("tillskrev"), "tillskrev" );
	deepEqual( Stem("tillskriv"), "tillskriv" );
	deepEqual( Stem("tillskriva"), "tillskriv" );
	deepEqual( Stem("tillskrivas"), "tillskriv" );
	deepEqual( Stem("tillsluter"), "tillslut" );
	deepEqual( Stem("tillslutit"), "tillslutit" );
	deepEqual( Stem("tillslutna"), "tillslutn" );
	deepEqual( Stem("tillslöt"), "tillslöt" );
	deepEqual( Stem("tillslöts"), "tillslöt" );
	deepEqual( Stem("tillsnörpta"), "tillsnörpt" );
	deepEqual( Stem("tillspetsade"), "tillspets" );
	deepEqual( Stem("tillstod"), "tillstod" );
	deepEqual( Stem("tillstyrkt"), "tillstyrk" );
	deepEqual( Stem("tillstyrkte"), "tillstyrk" );
	deepEqual( Stem("tillstyrt"), "tillstyrt" );
	deepEqual( Stem("tillstädes"), "tillstäd" );
	deepEqual( Stem("tillstädja"), "tillstädj" );
	deepEqual( Stem("tillställd"), "tillställd" );
	deepEqual( Stem("tillställning"), "tillställning" );
	deepEqual( Stem("tillställningar"), "tillställning" );
	deepEqual( Stem("tillställningen"), "tillställning" );
	deepEqual( Stem("tillställt"), "tillställt" );
	deepEqual( Stem("tillständigt"), "tillständ" );
	deepEqual( Stem("tillstå"), "tillstå" );
	deepEqual( Stem("tillstånd"), "tillstånd" );
	deepEqual( Stem("tillståndet"), "tillståndet" );
	deepEqual( Stem("tillstår"), "tillstår" );
	deepEqual( Stem("tillstötande"), "tillstöt" );
	deepEqual( Stem("tillsvidare"), "tillsvid" );
	deepEqual( Stem("tillsyn"), "tillsyn" );
	deepEqual( Stem("tillsäg"), "tillsäg" );
	deepEqual( Stem("tillsäga"), "tillsäg" );
	deepEqual( Stem("tillsägelse"), "tillsäg" );
	deepEqual( Stem("tillsändas"), "tillsänd" );
	deepEqual( Stem("tillsändt"), "tillsänd" );
	deepEqual( Stem("tilltagande"), "tilltag" );
	deepEqual( Stem("tilltagen"), "tilltag" );
	deepEqual( Stem("tilltaget"), "tilltaget" );
	deepEqual( Stem("tilltagsenhet"), "tilltagsen" );
	deepEqual( Stem("tilltala"), "tilltal" );
	deepEqual( Stem("tilltalade"), "tilltal" );
	deepEqual( Stem("tilltalande"), "tilltal" );
	deepEqual( Stem("tilltog"), "tilltog" );
	deepEqual( Stem("tilltogo"), "tilltogo" );
	deepEqual( Stem("tilltrott"), "tilltrot" );
	deepEqual( Stem("tilltygad"), "tilltyg" );
	deepEqual( Stem("tilltänkta"), "tilltänk" );
	deepEqual( Stem("tilltänkte"), "tilltänk" );
	deepEqual( Stem("tilltäppt"), "tilltäppt" );
	deepEqual( Stem("tillvaro"), "tillvaro" );
	deepEqual( Stem("tillvaron"), "tillvaron" );
	deepEqual( Stem("tillvarons"), "tillvaron" );
	deepEqual( Stem("tillverkad"), "tillverk" );
	deepEqual( Stem("tillvridet"), "tillvridet" );
	deepEqual( Stem("tillväxt"), "tillväxt" );
	deepEqual( Stem("tillägg"), "tillägg" );
	deepEqual( Stem("tillägga"), "tillägg" );
	deepEqual( Stem("tilläggas"), "tillägg" );
	deepEqual( Stem("tillägger"), "tillägg" );
	deepEqual( Stem("tillägget"), "tillägget" );
	deepEqual( Stem("tillämnade"), "tillämn" );
	deepEqual( Stem("tillämpade"), "tillämp" );
	deepEqual( Stem("tillämpas"), "tillämp" );
	deepEqual( Stem("tilländalupna"), "tilländalupn" );
	deepEqual( Stem("tillärnade"), "tillärn" );
	deepEqual( Stem("tillärnar"), "tillärn" );
	deepEqual( Stem("tillät"), "tillät" );
	deepEqual( Stem("tilläte"), "tillät" );
	deepEqual( Stem("tilläto"), "tilläto" );
	deepEqual( Stem("tillåt"), "tillåt" );
	deepEqual( Stem("tillåta"), "tillåt" );
	deepEqual( Stem("tillåtas"), "tillåt" );
	deepEqual( Stem("tillåtelse"), "tillåt" );
	deepEqual( Stem("tillåtelsen"), "tillåt" );
	deepEqual( Stem("tillåten"), "tillåt" );
	deepEqual( Stem("tillåter"), "tillåt" );
	deepEqual( Stem("tillåtet"), "tillåtet" );
	deepEqual( Stem("tillåtit"), "tillåtit" );
	deepEqual( Stem("tillåtna"), "tillåtn" );
	deepEqual( Stem("tillökning"), "tillökning" );
	deepEqual( Stem("tillökta"), "tillök" );
	deepEqual( Stem("tilt"), "tilt" );
	deepEqual( Stem("timglaset"), "timglaset" );
	deepEqual( Stem("timjan"), "timjan" );
	deepEqual( Stem("timliga"), "tim" );
	deepEqual( Stem("timligheten"), "tim" );
	deepEqual( Stem("timma"), "timm" );
	deepEqual( Stem("timmai"), "timmai" );
	deepEqual( Stem("timmar"), "timm" );
	deepEqual( Stem("timmarna"), "timm" );
	deepEqual( Stem("timmarne"), "timm" );
	deepEqual( Stem("timmars"), "timmar" );
	deepEqual( Stem("timme"), "timm" );
	deepEqual( Stem("timmen"), "timm" );
	deepEqual( Stem("timmergesäll"), "timmergesäll" );
	deepEqual( Stem("timmerstockar"), "timmerstock" );
	deepEqual( Stem("timmes"), "timm" );
	deepEqual( Stem("timrades"), "timr" );
	deepEqual( Stem("timrar"), "timr" );
	deepEqual( Stem("tinade"), "tin" );
	deepEqual( Stem("tinan"), "tinan" );
	deepEqual( Stem("tinande"), "tin" );
	deepEqual( Stem("tindra"), "tindr" );
	deepEqual( Stem("tindrade"), "tindr" );
	deepEqual( Stem("tindrande"), "tindr" );
	deepEqual( Stem("tindrar"), "tindr" );
	deepEqual( Stem("ting"), "ting" );
	deepEqual( Stem("tingar"), "ting" );
	deepEqual( Stem("tingen"), "ting" );
	deepEqual( Stem("tingens"), "ting" );
	deepEqual( Stem("tingestar"), "tingest" );
	deepEqual( Stem("tingesten"), "tingest" );
	deepEqual( Stem("tingsgöromålen"), "tingsgöromål" );
	deepEqual( Stem("tinktur"), "tinktur" );
	deepEqual( Stem("tinning"), "tinning" );
	deepEqual( Stem("tinningar"), "tinning" );
	deepEqual( Stem("tinningarna"), "tinning" );
	deepEqual( Stem("tinningen"), "tinning" );
	deepEqual( Stem("tintomara"), "tintomar" );
	deepEqual( Stem("tio"), "tio" );
	deepEqual( Stem("tiobedjande"), "tiobedj" );
	deepEqual( Stem("tiodubbelt"), "tiodubbelt" );
	deepEqual( Stem("tiodubblades"), "tiodubbl" );
	deepEqual( Stem("tiofaldigt"), "tiofald" );
	deepEqual( Stem("tiokamp"), "tiokamp" );
	deepEqual( Stem("tion"), "tion" );
	deepEqual( Stem("tionde"), "tiond" );
	deepEqual( Stem("tioner"), "tion" );
	deepEqual( Stem("tior"), "tior" );
	deepEqual( Stem("tiotal"), "tiotal" );
	deepEqual( Stem("tiotiden"), "tiotid" );
	deepEqual( Stem("tiotusental"), "tiotusental" );
	deepEqual( Stem("tir"), "tir" );
	deepEqual( Stem("tisdag"), "tisdag" );
	deepEqual( Stem("tisdagen"), "tisdag" );
	deepEqual( Stem("tisdagsaftnar"), "tisdagsaftn" );
	deepEqual( Stem("tisdagsaftnarna"), "tisdagsaftn" );
	deepEqual( Stem("tiska"), "tisk" );
	deepEqual( Stem("tiskt"), "tisk" );
	deepEqual( Stem("tissla"), "tissl" );
	deepEqual( Stem("tistelöborna"), "tistelöb" );
	deepEqual( Stem("tistelöherrskapet"), "tistelöherrskapet" );
	deepEqual( Stem("tistelön"), "tistelön" );
	deepEqual( Stem("tistelöns"), "tistelön" );
	deepEqual( Stem("tistelöpacket"), "tistelöpacket" );
	deepEqual( Stem("tistelörosen"), "tistelöros" );
	deepEqual( Stem("titel"), "titel" );
	deepEqual( Stem("titelbladet"), "titelbladet" );
	deepEqual( Stem("titeln"), "titeln" );
	deepEqual( Stem("titelsidan"), "titelsidan" );
	deepEqual( Stem("titet"), "titet" );
	deepEqual( Stem("titlarna"), "titl" );
	deepEqual( Stem("titta"), "titt" );
	deepEqual( Stem("tittade"), "titt" );
	deepEqual( Stem("tittande"), "titt" );
	deepEqual( Stem("tittar"), "titt" );
	deepEqual( Stem("tittat"), "titt" );
	deepEqual( Stem("titulerades"), "tituler" );
	deepEqual( Stem("tjenade"), "tjen" );
	deepEqual( Stem("tjenar"), "tjen" );
	deepEqual( Stem("tjenare"), "tjen" );
	deepEqual( Stem("tjenarinnan"), "tjenarinnan" );
	deepEqual( Stem("tjenat"), "tjen" );
	deepEqual( Stem("tjenligast"), "tjen" );
	deepEqual( Stem("tjenst"), "tjenst" );
	deepEqual( Stem("tjenstaktig"), "tjenstakt" );
	deepEqual( Stem("tjenstaktighet"), "tjenstakt" );
	deepEqual( Stem("tjenstaktigt"), "tjenstakt" );
	deepEqual( Stem("tjenstebefattning"), "tjenstebefattning" );
	deepEqual( Stem("tjenstefolk"), "tjenstefolk" );
	deepEqual( Stem("tjenstefolket"), "tjenstefolket" );
	deepEqual( Stem("tjensteman"), "tjensteman" );
	deepEqual( Stem("tjenstemannen"), "tjensteman" );
	deepEqual( Stem("tjensten"), "tjenst" );
	deepEqual( Stem("tjenstepligt"), "tjenstep" );
	deepEqual( Stem("tjenster"), "tjenst" );
	deepEqual( Stem("tjenstflicka"), "tjenstflick" );
	deepEqual( Stem("tjenstfolk"), "tjenstfolk" );
	deepEqual( Stem("tjenstfolket"), "tjenstfolket" );
	deepEqual( Stem("tjenstgörande"), "tjenstgör" );
	deepEqual( Stem("tjenstgöromål"), "tjenstgöromål" );
	deepEqual( Stem("tjent"), "tjent" );
	deepEqual( Stem("tjock"), "tjock" );
	deepEqual( Stem("tjocka"), "tjock" );
	deepEqual( Stem("tjockare"), "tjock" );
	deepEqual( Stem("tjocknar"), "tjockn" );
	deepEqual( Stem("tjockt"), "tjock" );
	deepEqual( Stem("tjog"), "tjog" );
	deepEqual( Stem("tjugo"), "tjugo" );
	deepEqual( Stem("tjugonde"), "tjugond" );
	deepEqual( Stem("tjugu"), "tjugu" );
	deepEqual( Stem("tjuguandra"), "tjuguandr" );
	deepEqual( Stem("tjuguett"), "tjuguet" );
	deepEqual( Stem("tjugufem"), "tjugufem" );
	deepEqual( Stem("tjugufemte"), "tjugufemt" );
	deepEqual( Stem("tjugufjerde"), "tjugufjerd" );
	deepEqual( Stem("tjugufyra"), "tjugufyr" );
	deepEqual( Stem("tjugufyraskilling"), "tjugufyraskilling" );
	deepEqual( Stem("tjuguförsta"), "tjuguförst" );
	deepEqual( Stem("tjugunio"), "tjugunio" );
	deepEqual( Stem("tjugutre"), "tjugutr" );
	deepEqual( Stem("tjugutredje"), "tjugutredj" );
	deepEqual( Stem("tjugutvå"), "tjugutvå" );
	deepEqual( Stem("tjuguåren"), "tjuguår" );
	deepEqual( Stem("tjuguårig"), "tjuguår" );
	deepEqual( Stem("tjuguårige"), "tjuguår" );
	deepEqual( Stem("tjuguåtta"), "tjuguåt" );
	deepEqual( Stem("tjurpannan"), "tjurpannan" );
	deepEqual( Stem("tjusad"), "tjus" );
	deepEqual( Stem("tjusade"), "tjus" );
	deepEqual( Stem("tjusande"), "tjus" );
	deepEqual( Stem("tjusats"), "tjusat" );
	deepEqual( Stem("tjuserska"), "tjusersk" );
	deepEqual( Stem("tjust"), "tjust" );
	deepEqual( Stem("tjusta"), "tjust" );
	deepEqual( Stem("tjut"), "tjut" );
	deepEqual( Stem("tjutande"), "tjut" );
	deepEqual( Stem("tjuter"), "tjut" );
	deepEqual( Stem("tjuv"), "tjuv" );
	deepEqual( Stem("tjuvar"), "tjuv" );
	deepEqual( Stem("tjäll"), "tjäll" );
	deepEqual( Stem("tjäna"), "tjän" );
	deepEqual( Stem("tjänade"), "tjän" );
	deepEqual( Stem("tjänande"), "tjän" );
	deepEqual( Stem("tjänar"), "tjän" );
	deepEqual( Stem("tjänare"), "tjän" );
	deepEqual( Stem("tjänaren"), "tjän" );
	deepEqual( Stem("tjänares"), "tjänar" );
	deepEqual( Stem("tjänarinna"), "tjänarin" );
	deepEqual( Stem("tjänarna"), "tjän" );
	deepEqual( Stem("tjänat"), "tjän" );
	deepEqual( Stem("tjänlig"), "tjän" );
	deepEqual( Stem("tjänliga"), "tjän" );
	deepEqual( Stem("tjänligt"), "tjän" );
	deepEqual( Stem("tjänst"), "tjänst" );
	deepEqual( Stem("tjänstaktig"), "tjänstakt" );
	deepEqual( Stem("tjänstaktighet"), "tjänstakt" );
	deepEqual( Stem("tjänsteande"), "tjänste" );
	deepEqual( Stem("tjänsteflicka"), "tjänsteflick" );
	deepEqual( Stem("tjänsteflickans"), "tjänsteflickan" );
	deepEqual( Stem("tjänstehjon"), "tjänstehjon" );
	deepEqual( Stem("tjänsteman"), "tjänsteman" );
	deepEqual( Stem("tjänstens"), "tjänst" );
	deepEqual( Stem("tjänsteplikter"), "tjänsteplik" );
	deepEqual( Stem("tjänstetid"), "tjänstetid" );
	deepEqual( Stem("tjänstflic"), "tjänstflic" );
	deepEqual( Stem("tjänstflicka"), "tjänstflick" );
	deepEqual( Stem("tjänstflickan"), "tjänstflickan" );
	deepEqual( Stem("tjänstfolk"), "tjänstfolk" );
	deepEqual( Stem("tjänstfolket"), "tjänstfolket" );
	deepEqual( Stem("tjänstgjorde"), "tjänstgjord" );
	deepEqual( Stem("tjänstgör"), "tjänstgör" );
	deepEqual( Stem("tjänstgöra"), "tjänstgör" );
	deepEqual( Stem("tjänstgöring"), "tjänstgöring" );
	deepEqual( Stem("tjänstvilliga"), "tjänstvil" );
	deepEqual( Stem("tjänstvilligt"), "tjänstvil" );
	deepEqual( Stem("tjänte"), "tjänt" );
	deepEqual( Stem("tjära"), "tjär" );
	deepEqual( Stem("tjärn"), "tjärn" );
	deepEqual( Stem("tjärnan"), "tjärnan" );
	deepEqual( Stem("tjärnen"), "tjärn" );
	deepEqual( Stem("tjöt"), "tjöt" );
	deepEqual( Stem("tjöto"), "tjöto" );
	deepEqual( Stem("tmdvek"), "tmdvek" );
	deepEqual( Stem("tnmma"), "tnmma" );
	deepEqual( Stem("tnmt"), "tnmt" );
	deepEqual( Stem("to"), "to" );
	deepEqual( Stem("toalett"), "toalet" );
	deepEqual( Stem("toalettbordet"), "toalettbordet" );
	deepEqual( Stem("toaletten"), "toalet" );
	deepEqual( Stem("toalettens"), "toalet" );
	deepEqual( Stem("tobak"), "tobak" );
	deepEqual( Stem("tobaksindustrien"), "tobaksindustri" );
	deepEqual( Stem("tobaksrullen"), "tobaksrull" );
	deepEqual( Stem("tobaksröken"), "tobaksrök" );
	deepEqual( Stem("tocke"), "tock" );
	deepEqual( Stem("tocken"), "tock" );
	deepEqual( Stem("tockholm"), "tockholm" );
	deepEqual( Stem("tockna"), "tockn" );
	deepEqual( Stem("toddar"), "todd" );
	deepEqual( Stem("toddy"), "toddy" );
	deepEqual( Stem("toddyar"), "toddy" );
	deepEqual( Stem("toddyglas"), "toddygl" );
	deepEqual( Stem("toffel"), "toffel" );
	deepEqual( Stem("toffelklädda"), "toffelkläd" );
	deepEqual( Stem("toffeln"), "toffeln" );
	deepEqual( Stem("tofflor"), "toffl" );
	deepEqual( Stem("tofflorna"), "toffl" );
	deepEqual( Stem("tofs"), "tof" );
	deepEqual( Stem("tofterna"), "toft" );
	deepEqual( Stem("tofvade"), "tofv" );
	deepEqual( Stem("tog"), "tog" );
	deepEqual( Stem("toga"), "tog" );
	deepEqual( Stem("toge"), "tog" );
	deepEqual( Stem("togo"), "togo" );
	deepEqual( Stem("togs"), "tog" );
	deepEqual( Stem("tok"), "tok" );
	deepEqual( Stem("tokig"), "tok" );
	deepEqual( Stem("tokiga"), "tok" );
	deepEqual( Stem("tokigt"), "tok" );
	deepEqual( Stem("tokorna"), "tok" );
	deepEqual( Stem("tokroligheter"), "tokro" );
	deepEqual( Stem("tolf"), "tolf" );
	deepEqual( Stem("tolfte"), "tolft" );
	deepEqual( Stem("tolfva"), "tolfv" );
	deepEqual( Stem("tolfvor"), "tolfv" );
	deepEqual( Stem("tolka"), "tolk" );
	deepEqual( Stem("tolkade"), "tolk" );
	deepEqual( Stem("tolv"), "tolv" );
	deepEqual( Stem("tolvskilling"), "tolvskilling" );
	deepEqual( Stem("tom"), "tom" );
	deepEqual( Stem("tomernas"), "tom" );
	deepEqual( Stem("tomhet"), "tom" );
	deepEqual( Stem("tomhetens"), "tom" );
	deepEqual( Stem("tomhänta"), "tomhänt" );
	deepEqual( Stem("tomma"), "tomm" );
	deepEqual( Stem("tomrum"), "tomrum" );
	deepEqual( Stem("tomrummet"), "tomrummet" );
	deepEqual( Stem("tomt"), "tomt" );
	deepEqual( Stem("tomte"), "tomt" );
	deepEqual( Stem("tomten"), "tomt" );
	deepEqual( Stem("tomter"), "tomt" );
	deepEqual( Stem("tomtormar"), "tomtorm" );
	deepEqual( Stem("ton"), "ton" );
	deepEqual( Stem("tona"), "ton" );
	deepEqual( Stem("tonade"), "ton" );
	deepEqual( Stem("tonart"), "tonart" );
	deepEqual( Stem("tonen"), "ton" );
	deepEqual( Stem("toner"), "ton" );
	deepEqual( Stem("tonerna"), "ton" );
	deepEqual( Stem("tonfall"), "tonfall" );
	deepEqual( Stem("tonfallen"), "tonfall" );
	deepEqual( Stem("tonfallet"), "tonfallet" );
	deepEqual( Stem("tongivande"), "tongiv" );
	deepEqual( Stem("tongångar"), "tongång" );
	deepEqual( Stem("tonigt"), "ton" );
	deepEqual( Stem("tons"), "ton" );
	deepEqual( Stem("tonserie"), "tonseri" );
	deepEqual( Stem("tonåren"), "tonår" );
	deepEqual( Stem("topp"), "topp" );
	deepEqual( Stem("topparna"), "topp" );
	deepEqual( Stem("toquen"), "toqu" );
	deepEqual( Stem("tor"), "tor" );
	deepEqual( Stem("tora"), "tor" );
	deepEqual( Stem("torblad"), "torbl" );
	deepEqual( Stem("torblads"), "torblad" );
	deepEqual( Stem("torcl"), "torcl" );
	deepEqual( Stem("tord"), "tord" );
	deepEqual( Stem("torde"), "tord" );
	deepEqual( Stem("tordes"), "tord" );
	deepEqual( Stem("tords"), "tord" );
	deepEqual( Stem("torens"), "tor" );
	deepEqual( Stem("torfbänk"), "torfbänk" );
	deepEqual( Stem("torftiga"), "torft" );
	deepEqual( Stem("torftigt"), "torft" );
	deepEqual( Stem("torfvorna"), "torfv" );
	deepEqual( Stem("torg"), "torg" );
	deepEqual( Stem("torgen"), "torg" );
	deepEqual( Stem("torget"), "torget" );
	deepEqual( Stem("torgets"), "torget" );
	deepEqual( Stem("torgpriserna"), "torgpris" );
	deepEqual( Stem("torka"), "tork" );
	deepEqual( Stem("torkade"), "tork" );
	deepEqual( Stem("torkades"), "tork" );
	deepEqual( Stem("torkvinden"), "torkvind" );
	deepEqual( Stem("torn"), "torn" );
	deepEqual( Stem("torna"), "torn" );
	deepEqual( Stem("tornas"), "torn" );
	deepEqual( Stem("tornbergs"), "tornberg" );
	deepEqual( Stem("tornet"), "tornet" );
	deepEqual( Stem("tornets"), "tornet" );
	deepEqual( Stem("tornrum"), "tornrum" );
	deepEqual( Stem("torns"), "torn" );
	deepEqual( Stem("torp"), "torp" );
	deepEqual( Stem("torparkök"), "torparkök" );
	deepEqual( Stem("torparson"), "torparson" );
	deepEqual( Stem("torr"), "torr" );
	deepEqual( Stem("torra"), "torr" );
	deepEqual( Stem("torrare"), "torr" );
	deepEqual( Stem("torrhosta"), "torrhost" );
	deepEqual( Stem("torrt"), "torrt" );
	deepEqual( Stem("torsdag"), "torsdag" );
	deepEqual( Stem("torsdagen"), "torsdag" );
	deepEqual( Stem("torsdags"), "torsdag" );
	deepEqual( Stem("torsk"), "torsk" );
	deepEqual( Stem("tortyr"), "tortyr" );
	deepEqual( Stem("torv"), "torv" );
	deepEqual( Stem("torva"), "torv" );
	deepEqual( Stem("torvbänken"), "torvbänk" );
	deepEqual( Stem("tosing"), "tosing" );
	deepEqual( Stem("tosingen"), "tosing" );
	deepEqual( Stem("tossene"), "tossen" );
	deepEqual( Stem("total"), "total" );
	deepEqual( Stem("totalt"), "totalt" );
	deepEqual( Stem("tous"), "tous" );
	deepEqual( Stem("toute"), "tout" );
	deepEqual( Stem("tovsjunga"), "tovsjung" );
	deepEqual( Stem("tra"), "tra" );
	deepEqual( Stem("trad"), "trad" );
	deepEqual( Stem("tradens"), "trad" );
	deepEqual( Stem("tradition"), "tradition" );
	deepEqual( Stem("traditionens"), "tradition" );
	deepEqual( Stem("traditioner"), "tradition" );
	deepEqual( Stem("tradrötter"), "tradröt" );
	deepEqual( Stem("traffa"), "traff" );
	deepEqual( Stem("trafiken"), "trafik" );
	deepEqual( Stem("trage"), "trag" );
	deepEqual( Stem("tragisk"), "tragisk" );
	deepEqual( Stem("tragiska"), "tragisk" );
	deepEqual( Stem("tragiskt"), "tragisk" );
	deepEqual( Stem("trak"), "trak" );
	deepEqual( Stem("trakassera"), "trakasser" );
	deepEqual( Stem("trakigt"), "trak" );
	deepEqual( Stem("trakt"), "trakt" );
	deepEqual( Stem("traktade"), "trakt" );
	deepEqual( Stem("traktar"), "trakt" );
	deepEqual( Stem("traktater"), "traktat" );
	deepEqual( Stem("trakten"), "trakt" );
	deepEqual( Stem("traktens"), "trakt" );
	deepEqual( Stem("trakter"), "trakt" );
	deepEqual( Stem("traktera"), "trakter" );
	deepEqual( Stem("trakterade"), "trakter" );
	deepEqual( Stem("trakterna"), "trakt" );
	deepEqual( Stem("trampa"), "tramp" );
	deepEqual( Stem("trampade"), "tramp" );
	deepEqual( Stem("trampan"), "trampan" );
	deepEqual( Stem("trampar"), "tramp" );
	deepEqual( Stem("trampas"), "tramp" );
	deepEqual( Stem("trampat"), "tramp" );
	deepEqual( Stem("trampats"), "trampat" );
	deepEqual( Stem("trampet"), "trampet" );
	deepEqual( Stem("tran"), "tran" );
	deepEqual( Stem("tranad"), "tran" );
	deepEqual( Stem("tranande"), "tran" );
	deepEqual( Stem("trancherade"), "trancher" );
	deepEqual( Stem("tranebergsbro"), "tranebergsbro" );
	deepEqual( Stem("tranen"), "tran" );
	deepEqual( Stem("tranga"), "trang" );
	deepEqual( Stem("trankilisera"), "trankiliser" );
	deepEqual( Stem("trankiliserad"), "trankiliser" );
	deepEqual( Stem("tranlampas"), "tranlamp" );
	deepEqual( Stem("transport"), "transport" );
	deepEqual( Stem("transporterad"), "transporter" );
	deepEqual( Stem("trap"), "trap" );
	deepEqual( Stem("trapp"), "trapp" );
	deepEqual( Stem("trappa"), "trapp" );
	deepEqual( Stem("trappam"), "trappam" );
	deepEqual( Stem("trappan"), "trappan" );
	deepEqual( Stem("trappans"), "trappan" );
	deepEqual( Stem("trappfönstren"), "trappfönstr" );
	deepEqual( Stem("trappfönstret"), "trappfönstret" );
	deepEqual( Stem("trappor"), "trapp" );
	deepEqual( Stem("trapporna"), "trapp" );
	deepEqual( Stem("trapprummet"), "trapprummet" );
	deepEqual( Stem("trapprummets"), "trapprummet" );
	deepEqual( Stem("trappsteg"), "trappsteg" );
	deepEqual( Stem("trappstegen"), "trappsteg" );
	deepEqual( Stem("trappsteget"), "trappsteget" );
	deepEqual( Stem("trasa"), "tras" );
	deepEqual( Stem("trasig"), "tras" );
	deepEqual( Stem("trasiga"), "tras" );
	deepEqual( Stem("trasigt"), "tras" );
	deepEqual( Stem("trask"), "trask" );
	deepEqual( Stem("traskade"), "trask" );
	deepEqual( Stem("trasmatta"), "trasmat" );
	deepEqual( Stem("trasmattorna"), "trasmat" );
	deepEqual( Stem("trasor"), "tras" );
	deepEqual( Stem("trasorna"), "tras" );
	deepEqual( Stem("trassel"), "trassel" );
	deepEqual( Stem("trassla"), "trassl" );
	deepEqual( Stem("trasslade"), "trassl" );
	deepEqual( Stem("trasslar"), "trassl" );
	deepEqual( Stem("trassligt"), "trass" );
	deepEqual( Stem("trast"), "trast" );
	deepEqual( Stem("tratten"), "tratt" );
	deepEqual( Stem("trav"), "trav" );
	deepEqual( Stem("tre"), "tre" );
	deepEqual( Stem("tredje"), "tredj" );
	deepEqual( Stem("tredjedelar"), "tredjedel" );
	deepEqual( Stem("tredubbelt"), "tredubbelt" );
	deepEqual( Stem("tredubbla"), "tredubbl" );
	deepEqual( Stem("trefalt"), "trefalt" );
	deepEqual( Stem("treflig"), "tref" );
	deepEqual( Stem("trefliga"), "tref" );
	deepEqual( Stem("trefligare"), "tref" );
	deepEqual( Stem("treflige"), "tref" );
	deepEqual( Stem("trefligt"), "tref" );
	deepEqual( Stem("trefnad"), "trefn" );
	deepEqual( Stem("trehundra"), "trehundr" );
	deepEqual( Stem("trekarl"), "trekarl" );
	deepEqual( Stem("trekarlsvänner"), "trekarlsvän" );
	deepEqual( Stem("trenne"), "trenn" );
	deepEqual( Stem("treriksdalerssedel"), "treriksdalerssedel" );
	deepEqual( Stem("treskilling"), "treskilling" );
	deepEqual( Stem("tresse"), "tress" );
	deepEqual( Stem("tretal"), "tretal" );
	deepEqual( Stem("tretiden"), "tretid" );
	deepEqual( Stem("trettio"), "trettio" );
	deepEqual( Stem("trettioarsaldern"), "trettioarsald" );
	deepEqual( Stem("trettiofem"), "trettiofem" );
	deepEqual( Stem("trettiofemte"), "trettiofemt" );
	deepEqual( Stem("trettiosex"), "trettiosex" );
	deepEqual( Stem("trettiotre"), "trettiotr" );
	deepEqual( Stem("trettiotreåriga"), "trettiotreår" );
	deepEqual( Stem("trettiotvå"), "trettiotvå" );
	deepEqual( Stem("trettioårsåldern"), "trettioårsåld" );
	deepEqual( Stem("trettitre"), "trettitr" );
	deepEqual( Stem("tretton"), "tretton" );
	deepEqual( Stem("trettonde"), "trettond" );
	deepEqual( Stem("tretumsspik"), "tretumsspik" );
	deepEqual( Stem("treva"), "trev" );
	deepEqual( Stem("trevade"), "trev" );
	deepEqual( Stem("trevande"), "trev" );
	deepEqual( Stem("trevar"), "trev" );
	deepEqual( Stem("trevlig"), "trev" );
	deepEqual( Stem("trevliga"), "trev" );
	deepEqual( Stem("trevligare"), "trev" );
	deepEqual( Stem("trevligaste"), "trev" );
	deepEqual( Stem("trevlige"), "trev" );
	deepEqual( Stem("trevligheten"), "trev" );
	deepEqual( Stem("trevligt"), "trev" );
	deepEqual( Stem("trevnad"), "trevn" );
	deepEqual( Stem("treåriga"), "treår" );
	deepEqual( Stem("treårsgamla"), "treårsgaml" );
	deepEqual( Stem("triangel"), "triangel" );
	deepEqual( Stem("triangeln"), "triangeln" );
	deepEqual( Stem("triangelns"), "triangeln" );
	deepEqual( Stem("tribun"), "tribun" );
	deepEqual( Stem("trifdes"), "trifd" );
	deepEqual( Stem("trifs"), "trif" );
	deepEqual( Stem("trifvas"), "trifv" );
	deepEqual( Stem("trikå"), "trikå" );
	deepEqual( Stem("trikåer"), "trikå" );
	deepEqual( Stem("trilla"), "trill" );
	deepEqual( Stem("trillade"), "trill" );
	deepEqual( Stem("trinde"), "trind" );
	deepEqual( Stem("trippa"), "tripp" );
	deepEqual( Stem("trippade"), "tripp" );
	deepEqual( Stem("trippande"), "tripp" );
	deepEqual( Stem("trippat"), "tripp" );
	deepEqual( Stem("trist"), "trist" );
	deepEqual( Stem("triste"), "trist" );
	deepEqual( Stem("triumf"), "triumf" );
	deepEqual( Stem("triumfer"), "triumf" );
	deepEqual( Stem("triumferade"), "triumfer" );
	deepEqual( Stem("triumferande"), "triumfer" );
	deepEqual( Stem("trivas"), "triv" );
	deepEqual( Stem("trivdes"), "trivd" );
	deepEqual( Stem("trivs"), "triv" );
	deepEqual( Stem("trivsamt"), "trivsamt" );
	deepEqual( Stem("trivts"), "trivt" );
	deepEqual( Stem("trn"), "trn" );
	deepEqual( Stem("tro"), "tro" );
	deepEqual( Stem("troddc"), "troddc" );
	deepEqual( Stem("trodde"), "trodd" );
	deepEqual( Stem("troddes"), "trodd" );
	deepEqual( Stem("troende"), "troend" );
	deepEqual( Stem("troenden"), "troend" );
	deepEqual( Stem("trofast"), "trof" );
	deepEqual( Stem("trofasta"), "trofast" );
	deepEqual( Stem("trofaste"), "trof" );
	deepEqual( Stem("trofasu"), "trofasu" );
	deepEqual( Stem("trogen"), "trog" );
	deepEqual( Stem("troget"), "troget" );
	deepEqual( Stem("trogna"), "trogn" );
	deepEqual( Stem("trogne"), "trogn" );
	deepEqual( Stem("trohet"), "trohet" );
	deepEqual( Stem("troheten"), "trohet" );
	deepEqual( Stem("trohjertade"), "trohjert" );
	deepEqual( Stem("trohjärtade"), "trohjärt" );
	deepEqual( Stem("trohjärtat"), "trohjärt" );
	deepEqual( Stem("troligaste"), "trol" );
	deepEqual( Stem("troligen"), "trol" );
	deepEqual( Stem("troligt"), "trol" );
	deepEqual( Stem("troligtvis"), "troligtvis" );
	deepEqual( Stem("troll"), "troll" );
	deepEqual( Stem("trolla"), "troll" );
	deepEqual( Stem("trollade"), "troll" );
	deepEqual( Stem("trollats"), "trollat" );
	deepEqual( Stem("trolleri"), "trolleri" );
	deepEqual( Stem("trolleriprofessorernas"), "trolleriprofessor" );
	deepEqual( Stem("trollet"), "trollet" );
	deepEqual( Stem("trollgubben"), "trollgubb" );
	deepEqual( Stem("trollguldet"), "trollguldet" );
	deepEqual( Stem("trollkarl"), "trollkarl" );
	deepEqual( Stem("trollmans"), "trollman" );
	deepEqual( Stem("trollmor"), "trollm" );
	deepEqual( Stem("trollpacka"), "trollpack" );
	deepEqual( Stem("trollsagan"), "trollsagan" );
	deepEqual( Stem("trollspegel"), "trollspegel" );
	deepEqual( Stem("trolofning"), "trolofning" );
	deepEqual( Stem("trolofvad"), "trolofv" );
	deepEqual( Stem("trolos"), "trolo" );
	deepEqual( Stem("trolsk"), "trolsk" );
	deepEqual( Stem("trolska"), "trolsk" );
	deepEqual( Stem("trolskt"), "trolsk" );
	deepEqual( Stem("tron"), "tron" );
	deepEqual( Stem("trona"), "tron" );
	deepEqual( Stem("tronade"), "tron" );
	deepEqual( Stem("tronen"), "tron" );
	deepEqual( Stem("tronens"), "tron" );
	deepEqual( Stem("tronföljare"), "tronfölj" );
	deepEqual( Stem("trons"), "tron" );
	deepEqual( Stem("tror"), "tror" );
	deepEqual( Stem("tros"), "tros" );
	deepEqual( Stem("trosartikel"), "trosartikel" );
	deepEqual( Stem("trosartiklar"), "trosartikl" );
	deepEqual( Stem("trostande"), "trost" );
	deepEqual( Stem("trotjänaren"), "trotjän" );
	deepEqual( Stem("trots"), "trot" );
	deepEqual( Stem("trotsa"), "trots" );
	deepEqual( Stem("trotsande"), "trots" );
	deepEqual( Stem("trotsat"), "trots" );
	deepEqual( Stem("trotsig"), "trots" );
	deepEqual( Stem("trotsiga"), "trots" );
	deepEqual( Stem("trotsigt"), "trots" );
	deepEqual( Stem("trott"), "trott" );
	deepEqual( Stem("trottoaren"), "trotto" );
	deepEqual( Stem("trottoarerna"), "trottoar" );
	deepEqual( Stem("trottoarkanten"), "trottoarkant" );
	deepEqual( Stem("trovärdig"), "trovärd" );
	deepEqual( Stem("trovärdiga"), "trovärd" );
	deepEqual( Stem("trovärdigheten"), "trovärd" );
	deepEqual( Stem("trovärdigt"), "trovärd" );
	deepEqual( Stem("trubbig"), "trubb" );
	deepEqual( Stem("trubbiga"), "trubb" );
	deepEqual( Stem("trubbigt"), "trubb" );
	deepEqual( Stem("trubbnäsa"), "trubbnäs" );
	deepEqual( Stem("trugade"), "trug" );
	deepEqual( Stem("trugat"), "trug" );
	deepEqual( Stem("trumma"), "trumm" );
	deepEqual( Stem("trummade"), "trumm" );
	deepEqual( Stem("trumman"), "trumman" );
	deepEqual( Stem("trummar"), "trumm" );
	deepEqual( Stem("trumpen"), "trump" );
	deepEqual( Stem("trumpet"), "trumpet" );
	deepEqual( Stem("trumpeten"), "trumpet" );
	deepEqual( Stem("trumslag"), "trumslag" );
	deepEqual( Stem("trupp"), "trupp" );
	deepEqual( Stem("truppen"), "trupp" );
	deepEqual( Stem("trupper"), "trupp" );
	deepEqual( Stem("trut"), "trut" );
	deepEqual( Stem("truten"), "trut" );
	deepEqual( Stem("trvckning"), "trvckning" );
	deepEqual( Stem("try"), "try" );
	deepEqual( Stem("tryck"), "tryck" );
	deepEqual( Stem("trycka"), "tryck" );
	deepEqual( Stem("tryckande"), "tryck" );
	deepEqual( Stem("trycker"), "tryck" );
	deepEqual( Stem("trycket"), "trycket" );
	deepEqual( Stem("tryckning"), "tryckning" );
	deepEqual( Stem("trycksvärta"), "trycksvärt" );
	deepEqual( Stem("tryckt"), "tryck" );
	deepEqual( Stem("tryckta"), "tryck" );
	deepEqual( Stem("tryckte"), "tryck" );
	deepEqual( Stem("trycktes"), "tryck" );
	deepEqual( Stem("trygg"), "trygg" );
	deepEqual( Stem("trygga"), "trygg" );
	deepEqual( Stem("tryggad"), "trygg" );
	deepEqual( Stem("tryggaste"), "trygg" );
	deepEqual( Stem("trygghet"), "trygg" );
	deepEqual( Stem("tryggt"), "trygg" );
	deepEqual( Stem("tryta"), "tryt" );
	deepEqual( Stem("trä"), "trä" );
	deepEqual( Stem("träarkitektur"), "träarkitektur" );
	deepEqual( Stem("träben"), "träb" );
	deepEqual( Stem("träbryggan"), "träbryggan" );
	deepEqual( Stem("träbänk"), "träbänk" );
	deepEqual( Stem("träck"), "träck" );
	deepEqual( Stem("träd"), "träd" );
	deepEqual( Stem("träda"), "träd" );
	deepEqual( Stem("trädde"), "trädd" );
	deepEqual( Stem("träden"), "träd" );
	deepEqual( Stem("trädens"), "träd" );
	deepEqual( Stem("trädet"), "trädet" );
	deepEqual( Stem("trädgarden"), "trädgard" );
	deepEqual( Stem("trädgren"), "trädgr" );
	deepEqual( Stem("trädgrenar"), "trädgren" );
	deepEqual( Stem("trädgård"), "trädgård" );
	deepEqual( Stem("trädgårdarna"), "trädgård" );
	deepEqual( Stem("trädgården"), "trädgård" );
	deepEqual( Stem("trädgårdens"), "trädgård" );
	deepEqual( Stem("trädgårdsfönster"), "trädgårdsfönst" );
	deepEqual( Stem("trädgårdsmästarebvggningen"), "trädgårdsmästarebvggning" );
	deepEqual( Stem("trädgårdsmäster"), "trädgårdsmäst" );
	deepEqual( Stem("trädgårdssoffa"), "trädgårdssoff" );
	deepEqual( Stem("trädgårdstäppa"), "trädgårdstäpp" );
	deepEqual( Stem("trädgårdstäppan"), "trädgårdstäppan" );
	deepEqual( Stem("trädknapparne"), "trädknapp" );
	deepEqual( Stem("trädkrona"), "trädkron" );
	deepEqual( Stem("trädkronorna"), "trädkron" );
	deepEqual( Stem("trädkronornas"), "trädkron" );
	deepEqual( Stem("trädrot"), "trädrot" );
	deepEqual( Stem("trädstam"), "trädstam" );
	deepEqual( Stem("trädstammen"), "trädstamm" );
	deepEqual( Stem("trädt"), "trädt" );
	deepEqual( Stem("trädtopparna"), "trädtopp" );
	deepEqual( Stem("träffa"), "träff" );
	deepEqual( Stem("träffad"), "träff" );
	deepEqual( Stem("träffade"), "träff" );
	deepEqual( Stem("träffades"), "träff" );
	deepEqual( Stem("träffar"), "träff" );
	deepEqual( Stem("träffas"), "träff" );
	deepEqual( Stem("träffat"), "träff" );
	deepEqual( Stem("träffats"), "träffat" );
	deepEqual( Stem("träfiade"), "träfi" );
	deepEqual( Stem("trägen"), "träg" );
	deepEqual( Stem("träget"), "träget" );
	deepEqual( Stem("trägna"), "trägn" );
	deepEqual( Stem("trägnast"), "trägn" );
	deepEqual( Stem("trähinken"), "trähink" );
	deepEqual( Stem("trähus"), "trähus" );
	deepEqual( Stem("träla"), "träl" );
	deepEqual( Stem("trälar"), "träl" );
	deepEqual( Stem("trälinna"), "trälin" );
	deepEqual( Stem("trällif"), "trällif" );
	deepEqual( Stem("trälåda"), "trälåd" );
	deepEqual( Stem("trälådan"), "trälådan" );
	deepEqual( Stem("trän"), "trän" );
	deepEqual( Stem("tränga"), "träng" );
	deepEqual( Stem("trängande"), "träng" );
	deepEqual( Stem("trängde"), "träng" );
	deepEqual( Stem("trängdes"), "träng" );
	deepEqual( Stem("tränger"), "träng" );
	deepEqual( Stem("trängre"), "trängr" );
	deepEqual( Stem("trängs"), "träng" );
	deepEqual( Stem("trängseln"), "trängseln" );
	deepEqual( Stem("trängt"), "träng" );
	deepEqual( Stem("tränkbar"), "tränkb" );
	deepEqual( Stem("träsk"), "träsk" );
	deepEqual( Stem("träsnitt"), "träsnit" );
	deepEqual( Stem("trästubbe"), "trästubb" );
	deepEqual( Stem("träta"), "trät" );
	deepEqual( Stem("trätobroder"), "trätobrod" );
	deepEqual( Stem("trätt"), "trätt" );
	deepEqual( Stem("tråd"), "tråd" );
	deepEqual( Stem("trådar"), "tråd" );
	deepEqual( Stem("trådarna"), "tråd" );
	deepEqual( Stem("tråden"), "tråd" );
	deepEqual( Stem("trådgårdar"), "trådgård" );
	deepEqual( Stem("trådnystan"), "trådnystan" );
	deepEqual( Stem("trådsliten"), "trådslit" );
	deepEqual( Stem("trådsmala"), "trådsmal" );
	deepEqual( Stem("tråget"), "tråget" );
	deepEqual( Stem("tråka"), "tråk" );
	deepEqual( Stem("tråkig"), "tråk" );
	deepEqual( Stem("tråkiga"), "tråk" );
	deepEqual( Stem("tråkigaste"), "tråk" );
	deepEqual( Stem("tråkigt"), "tråk" );
	deepEqual( Stem("tråna"), "trån" );
	deepEqual( Stem("trånad"), "trån" );
	deepEqual( Stem("trånade"), "trån" );
	deepEqual( Stem("trånande"), "trån" );
	deepEqual( Stem("trång"), "trång" );
	deepEqual( Stem("trånga"), "trång" );
	deepEqual( Stem("trångaste"), "trång" );
	deepEqual( Stem("trångmål"), "trångmål" );
	deepEqual( Stem("trångt"), "trång" );
	deepEqual( Stem("trånmatta"), "trånmat" );
	deepEqual( Stem("trånsjuk"), "trånsjuk" );
	deepEqual( Stem("trög"), "trög" );
	deepEqual( Stem("tröga"), "trög" );
	deepEqual( Stem("tröge"), "trög" );
	deepEqual( Stem("tröghet"), "trög" );
	deepEqual( Stem("trögtänkt"), "trögtänk" );
	deepEqual( Stem("tröja"), "tröj" );
	deepEqual( Stem("tröjan"), "tröjan" );
	deepEqual( Stem("tröjor"), "tröj" );
	deepEqual( Stem("tröska"), "trösk" );
	deepEqual( Stem("tröskaren"), "trösk" );
	deepEqual( Stem("tröskel"), "tröskel" );
	deepEqual( Stem("tröskeln"), "tröskeln" );
	deepEqual( Stem("tröst"), "tröst" );
	deepEqual( Stem("trösta"), "tröst" );
	deepEqual( Stem("tröstad"), "tröst" );
	deepEqual( Stem("tröstade"), "tröst" );
	deepEqual( Stem("tröstande"), "tröst" );
	deepEqual( Stem("tröstar"), "tröst" );
	deepEqual( Stem("tröstat"), "tröst" );
	deepEqual( Stem("trösten"), "tröst" );
	deepEqual( Stem("tröstfull"), "tröstfull" );
	deepEqual( Stem("tröstfulla"), "tröstfull" );
	deepEqual( Stem("tröstlös"), "tröstlös" );
	deepEqual( Stem("tröstlösa"), "tröstlös" );
	deepEqual( Stem("tröstlöst"), "tröstlös" );
	deepEqual( Stem("tröstrika"), "tröstrik" );
	deepEqual( Stem("tröstrike"), "tröstrik" );
	deepEqual( Stem("tröstrikt"), "tröstrik" );
	deepEqual( Stem("trött"), "trött" );
	deepEqual( Stem("trötta"), "trött" );
	deepEqual( Stem("tröttade"), "trött" );
	deepEqual( Stem("tröttande"), "trött" );
	deepEqual( Stem("tröttar"), "trött" );
	deepEqual( Stem("tröttat"), "trött" );
	deepEqual( Stem("trötte"), "trött" );
	deepEqual( Stem("tröttflugen"), "tröttflug" );
	deepEqual( Stem("trötthet"), "trött" );
	deepEqual( Stem("tröttna"), "tröttn" );
	deepEqual( Stem("tröttnade"), "tröttn" );
	deepEqual( Stem("tröttnande"), "tröttn" );
	deepEqual( Stem("tröttnat"), "tröttn" );
	deepEqual( Stem("tröttsam"), "tröttsam" );
	deepEqual( Stem("tröttsamma"), "tröttsamm" );
	deepEqual( Stem("tröttsamt"), "tröttsamt" );
	deepEqual( Stem("ts"), "ts" );
	deepEqual( Stem("tt"), "tt" );
	deepEqual( Stem("tta"), "tta" );
	deepEqual( Stem("ttm"), "ttm" );
	deepEqual( Stem("tu"), "tu" );
	deepEqual( Stem("tug"), "tug" );
	deepEqual( Stem("tugga"), "tugg" );
	deepEqual( Stem("tuggade"), "tugg" );
	deepEqual( Stem("tuggan"), "tuggan" );
	deepEqual( Stem("tuggande"), "tugg" );
	deepEqual( Stem("tuggar"), "tugg" );
	deepEqual( Stem("tukt"), "tukt" );
	deepEqual( Stem("tukta"), "tukt" );
	deepEqual( Stem("tuktade"), "tukt" );
	deepEqual( Stem("tuktar"), "tukt" );
	deepEqual( Stem("tuktodikten"), "tuktodik" );
	deepEqual( Stem("tuktomästare"), "tuktomäst" );
	deepEqual( Stem("tull"), "tull" );
	deepEqual( Stem("tullar"), "tull" );
	deepEqual( Stem("tullen"), "tull" );
	deepEqual( Stem("tullfri"), "tullfri" );
	deepEqual( Stem("tullförsnillning"), "tullförsnillning" );
	deepEqual( Stem("tullförvaltare"), "tullförvalt" );
	deepEqual( Stem("tullförvaltaren"), "tullförvalt" );
	deepEqual( Stem("tullförvaltarens"), "tullförvalt" );
	deepEqual( Stem("tullförvaltarn"), "tullförvaltarn" );
	deepEqual( Stem("tullförvaltarns"), "tullförvaltarn" );
	deepEqual( Stem("tullförvalterskan"), "tullförvalterskan" );
	deepEqual( Stem("tullförvalterskans"), "tullförvalterskan" );
	deepEqual( Stem("tulljakt"), "tulljak" );
	deepEqual( Stem("tulljakten"), "tulljak" );
	deepEqual( Stem("tulljaktens"), "tulljak" );
	deepEqual( Stem("tullkammare"), "tullkamm" );
	deepEqual( Stem("tullkammaren"), "tullkamm" );
	deepEqual( Stem("tullkammarn"), "tullkammarn" );
	deepEqual( Stem("tullskrifvare"), "tullskrifv" );
	deepEqual( Stem("tullskrifvaren"), "tullskrifv" );
	deepEqual( Stem("tullsnok"), "tullsnok" );
	deepEqual( Stem("tullsnokarne"), "tullsnok" );
	deepEqual( Stem("tullstyrelsen"), "tullstyr" );
	deepEqual( Stem("tulltjensteman"), "tulltjensteman" );
	deepEqual( Stem("tullvaktmästare"), "tullvaktmäst" );
	deepEqual( Stem("tullvaktmästarens"), "tullvaktmäst" );
	deepEqual( Stem("tullväsendet"), "tullväsendet" );
	deepEqual( Stem("tulma"), "tulm" );
	deepEqual( Stem("tulpaner"), "tulpan" );
	deepEqual( Stem("tultade"), "tult" );
	deepEqual( Stem("tulubb"), "tulubb" );
	deepEqual( Stem("tulubben"), "tulubb" );
	deepEqual( Stem("tum"), "tum" );
	deepEqual( Stem("tumla"), "tuml" );
	deepEqual( Stem("tumlade"), "tuml" );
	deepEqual( Stem("tumlar"), "tuml" );
	deepEqual( Stem("tumlare"), "tuml" );
	deepEqual( Stem("tumlat"), "tuml" );
	deepEqual( Stem("tummen"), "tumm" );
	deepEqual( Stem("tung"), "tung" );
	deepEqual( Stem("tunga"), "tung" );
	deepEqual( Stem("tungan"), "tungan" );
	deepEqual( Stem("tungas"), "tung" );
	deepEqual( Stem("tungel"), "tungel" );
	deepEqual( Stem("tungor"), "tung" );
	deepEqual( Stem("tungsinta"), "tungsint" );
	deepEqual( Stem("tungsinthet"), "tungsint" );
	deepEqual( Stem("tungt"), "tung" );
	deepEqual( Stem("tungus"), "tungus" );
	deepEqual( Stem("tunn"), "tunn" );
	deepEqual( Stem("tunna"), "tunn" );
	deepEqual( Stem("tunnan"), "tunnan" );
	deepEqual( Stem("tunnare"), "tunn" );
	deepEqual( Stem("tunnas"), "tunn" );
	deepEqual( Stem("tunnbindare"), "tunnbind" );
	deepEqual( Stem("tunnbindars"), "tunnbindar" );
	deepEqual( Stem("tunnbröds"), "tunnbröd" );
	deepEqual( Stem("tunnor"), "tunn" );
	deepEqual( Stem("tunnorna"), "tunn" );
	deepEqual( Stem("tunnvalv"), "tunnvalv" );
	deepEqual( Stem("tunt"), "tunt" );
	deepEqual( Stem("tupp"), "tupp" );
	deepEqual( Stem("tur"), "tur" );
	deepEqual( Stem("turade"), "tur" );
	deepEqual( Stem("turen"), "tur" );
	deepEqual( Stem("turer"), "tur" );
	deepEqual( Stem("turistsmaken"), "turistsmak" );
	deepEqual( Stem("turken"), "turk" );
	deepEqual( Stem("turkisk"), "turkisk" );
	deepEqual( Stem("turkiska"), "turkisk" );
	deepEqual( Stem("turmmen"), "turmm" );
	deepEqual( Stem("turturduvor"), "turturduv" );
	deepEqual( Stem("turvis"), "turvis" );
	deepEqual( Stem("tusan"), "tusan" );
	deepEqual( Stem("tusch"), "tusch" );
	deepEqual( Stem("tuschritningen"), "tuschritning" );
	deepEqual( Stem("tusen"), "tus" );
	deepEqual( Stem("tusenfalt"), "tusenfalt" );
	deepEqual( Stem("tusentals"), "tusental" );
	deepEqual( Stem("tutade"), "tut" );
	deepEqual( Stem("tutande"), "tut" );
	deepEqual( Stem("tuva"), "tuv" );
	deepEqual( Stem("tuvahisto"), "tuvahisto" );
	deepEqual( Stem("tuvan"), "tuvan" );
	deepEqual( Stem("tuvig"), "tuv" );
	deepEqual( Stem("tuvor"), "tuv" );
	deepEqual( Stem("tva"), "tva" );
	deepEqual( Stem("tvagen"), "tvag" );
	deepEqual( Stem("tvagning"), "tvagning" );
	deepEqual( Stem("tvang"), "tvang" );
	deepEqual( Stem("tvehågsenhet"), "tvehågsen" );
	deepEqual( Stem("tveka"), "tvek" );
	deepEqual( Stem("tvekade"), "tvek" );
	deepEqual( Stem("tvekan"), "tvekan" );
	deepEqual( Stem("tvekande"), "tvek" );
	deepEqual( Stem("tvekat"), "tvek" );
	deepEqual( Stem("tveksam"), "tveksam" );
	deepEqual( Stem("tveksamt"), "tveksamt" );
	deepEqual( Stem("tvenne"), "tvenn" );
	deepEqual( Stem("tver"), "tver" );
	deepEqual( Stem("tvetydig"), "tvetyd" );
	deepEqual( Stem("tvetydiga"), "tvetyd" );
	deepEqual( Stem("tvetydigheter"), "tvetyd" );
	deepEqual( Stem("tvetydigt"), "tvetyd" );
	deepEqual( Stem("tvifla"), "tvifl" );
	deepEqual( Stem("tviflande"), "tvifl" );
	deepEqual( Stem("tviflar"), "tvifl" );
	deepEqual( Stem("tviflets"), "tviflet" );
	deepEqual( Stem("tvifvel"), "tvifvel" );
	deepEqual( Stem("tvillingsjäl"), "tvillingsjäl" );
	deepEqual( Stem("tvillingsyster"), "tvillingsyst" );
	deepEqual( Stem("tvina"), "tvin" );
	deepEqual( Stem("tvinade"), "tvin" );
	deepEqual( Stem("tvinande"), "tvin" );
	deepEqual( Stem("tvinga"), "tving" );
	deepEqual( Stem("tvingad"), "tving" );
	deepEqual( Stem("tvingade"), "tving" );
	deepEqual( Stem("tvingades"), "tving" );
	deepEqual( Stem("tvingar"), "tving" );
	deepEqual( Stem("tvingas"), "tving" );
	deepEqual( Stem("tvingat"), "tving" );
	deepEqual( Stem("tvinsjuka"), "tvinsjuk" );
	deepEqual( Stem("tvinsjukt"), "tvinsjuk" );
	deepEqual( Stem("tvinsot"), "tvinsot" );
	deepEqual( Stem("tvist"), "tvist" );
	deepEqual( Stem("tvista"), "tvist" );
	deepEqual( Stem("tvisten"), "tvist" );
	deepEqual( Stem("tvivel"), "tvivel" );
	deepEqual( Stem("tvivelaktigt"), "tvivelakt" );
	deepEqual( Stem("tvivla"), "tvivl" );
	deepEqual( Stem("tvivlade"), "tvivl" );
	deepEqual( Stem("tvivlande"), "tvivl" );
	deepEqual( Stem("tvivlar"), "tvivl" );
	deepEqual( Stem("tvivlet"), "tvivlet" );
	deepEqual( Stem("tvungen"), "tvung" );
	deepEqual( Stem("tvunget"), "tvunget" );
	deepEqual( Stem("tvungna"), "tvungn" );
	deepEqual( Stem("tvänne"), "tvänn" );
	deepEqual( Stem("tvär"), "tvär" );
	deepEqual( Stem("tvärbjälkar"), "tvärbjälk" );
	deepEqual( Stem("tvären"), "tvär" );
	deepEqual( Stem("tvärs"), "tvär" );
	deepEqual( Stem("tvärsigenom"), "tvärsigenom" );
	deepEqual( Stem("tvärstannade"), "tvärstan" );
	deepEqual( Stem("tvärsäkert"), "tvärsäkert" );
	deepEqual( Stem("tvärsöver"), "tvärsöv" );
	deepEqual( Stem("tvärsövet"), "tvärsövet" );
	deepEqual( Stem("tvärt"), "tvärt" );
	deepEqual( Stem("tvärtemot"), "tvärtemot" );
	deepEqual( Stem("tvärtom"), "tvärtom" );
	deepEqual( Stem("tvärtystnade"), "tvärtystn" );
	deepEqual( Stem("tvätt"), "tvätt" );
	deepEqual( Stem("tvätta"), "tvätt" );
	deepEqual( Stem("tvättad"), "tvätt" );
	deepEqual( Stem("tvättade"), "tvätt" );
	deepEqual( Stem("tvättas"), "tvätt" );
	deepEqual( Stem("tvättat"), "tvätt" );
	deepEqual( Stem("tvättbalja"), "tvättbalj" );
	deepEqual( Stem("tvättbunken"), "tvättbunk" );
	deepEqual( Stem("tvätten"), "tvätt" );
	deepEqual( Stem("tvättfat"), "tvättf" );
	deepEqual( Stem("tvätträkningen"), "tvätträkning" );
	deepEqual( Stem("tvättstallet"), "tvättstallet" );
	deepEqual( Stem("tvättstugan"), "tvättstugan" );
	deepEqual( Stem("två"), "två" );
	deepEqual( Stem("tvåa"), "tvåa" );
	deepEqual( Stem("tvådubbla"), "tvådubbl" );
	deepEqual( Stem("tvål"), "tvål" );
	deepEqual( Stem("tvålfatet"), "tvålfatet" );
	deepEqual( Stem("tvång"), "tvång" );
	deepEqual( Stem("tvånget"), "tvånget" );
	deepEqual( Stem("tvångsarbete"), "tvångsarbet" );
	deepEqual( Stem("tvåriksdalers"), "tvåriksdaler" );
	deepEqual( Stem("tvåriksdalersedel"), "tvåriksdalersedel" );
	deepEqual( Stem("tvåriksdalerssedel"), "tvåriksdalerssedel" );
	deepEqual( Stem("tvåvåningshus"), "tvåvåningshus" );
	deepEqual( Stem("ty"), "ty" );
	deepEqual( Stem("tyck"), "tyck" );
	deepEqual( Stem("tycka"), "tyck" );
	deepEqual( Stem("tyckas"), "tyck" );
	deepEqual( Stem("tycke"), "tyck" );
	deepEqual( Stem("tycken"), "tyck" );
	deepEqual( Stem("tycker"), "tyck" );
	deepEqual( Stem("tyckes"), "tyck" );
	deepEqual( Stem("tyckles"), "tyckl" );
	deepEqual( Stem("tycks"), "tyck" );
	deepEqual( Stem("tyckt"), "tyck" );
	deepEqual( Stem("tycktc"), "tycktc" );
	deepEqual( Stem("tyckte"), "tyck" );
	deepEqual( Stem("tycktes"), "tyck" );
	deepEqual( Stem("tyd"), "tyd" );
	deepEqual( Stem("tyda"), "tyd" );
	deepEqual( Stem("tydande"), "tyd" );
	deepEqual( Stem("tydde"), "tydd" );
	deepEqual( Stem("tydelse"), "tyd" );
	deepEqual( Stem("tyder"), "tyd" );
	deepEqual( Stem("tydlig"), "tyd" );
	deepEqual( Stem("tydliga"), "tyd" );
	deepEqual( Stem("tydligare"), "tyd" );
	deepEqual( Stem("tydligen"), "tyd" );
	deepEqual( Stem("tydlighet"), "tyd" );
	deepEqual( Stem("tydligt"), "tyd" );
	deepEqual( Stem("tydt"), "tydt" );
	deepEqual( Stem("tyg"), "tyg" );
	deepEqual( Stem("tygel"), "tygel" );
	deepEqual( Stem("tygellost"), "tygellost" );
	deepEqual( Stem("tygeln"), "tygeln" );
	deepEqual( Stem("tyger"), "tyg" );
	deepEqual( Stem("tygerna"), "tyg" );
	deepEqual( Stem("tyget"), "tyget" );
	deepEqual( Stem("tyglade"), "tygl" );
	deepEqual( Stem("tyglar"), "tygl" );
	deepEqual( Stem("tygstuvar"), "tygstuv" );
	deepEqual( Stem("tygstycken"), "tygstyck" );
	deepEqual( Stem("tygstövlar"), "tygstövl" );
	deepEqual( Stem("tyko"), "tyko" );
	deepEqual( Stem("tynga"), "tyng" );
	deepEqual( Stem("tyngd"), "tyng" );
	deepEqual( Stem("tyngda"), "tyng" );
	deepEqual( Stem("tyngden"), "tyng" );
	deepEqual( Stem("tynger"), "tyng" );
	deepEqual( Stem("tyngre"), "tyngr" );
	deepEqual( Stem("typ"), "typ" );
	deepEqual( Stem("typiske"), "typisk" );
	deepEqual( Stem("tyrann"), "tyran" );
	deepEqual( Stem("tyrus"), "tyrus" );
	deepEqual( Stem("tysk"), "tysk" );
	deepEqual( Stem("tyska"), "tysk" );
	deepEqual( Stem("tyskarna"), "tysk" );
	deepEqual( Stem("tyskland"), "tyskland" );
	deepEqual( Stem("tyskt"), "tysk" );
	deepEqual( Stem("tyst"), "tyst" );
	deepEqual( Stem("tysta"), "tyst" );
	deepEqual( Stem("tystade"), "tyst" );
	deepEqual( Stem("tystare"), "tyst" );
	deepEqual( Stem("tysthet"), "tyst" );
	deepEqual( Stem("tysthetslöfte"), "tysthetslöft" );
	deepEqual( Stem("tystlåten"), "tystlåt" );
	deepEqual( Stem("tystlåtenhet"), "tystlåten" );
	deepEqual( Stem("tystna"), "tystn" );
	deepEqual( Stem("tystnad"), "tystn" );
	deepEqual( Stem("tystnade"), "tystn" );
	deepEqual( Stem("tystnaden"), "tystnad" );
	deepEqual( Stem("tystnadens"), "tystnad" );
	deepEqual( Stem("tystnar"), "tystn" );
	deepEqual( Stem("tystnat"), "tystn" );
	deepEqual( Stem("tyvärr"), "tyvärr" );
	deepEqual( Stem("täck"), "täck" );
	deepEqual( Stem("täcka"), "täck" );
	deepEqual( Stem("täckare"), "täck" );
	deepEqual( Stem("täckas"), "täck" );
	deepEqual( Stem("täckelset"), "täckelset" );
	deepEqual( Stem("täcken"), "täck" );
	deepEqual( Stem("täckes"), "täck" );
	deepEqual( Stem("täcket"), "täcket" );
	deepEqual( Stem("täcks"), "täck" );
	deepEqual( Stem("täckt"), "täck" );
	deepEqual( Stem("täcktes"), "täck" );
	deepEqual( Stem("täckts"), "täck" );
	deepEqual( Stem("tädkte"), "tädk" );
	deepEqual( Stem("täget"), "täget" );
	deepEqual( Stem("tägga"), "tägg" );
	deepEqual( Stem("täljande"), "tälj" );
	deepEqual( Stem("tälla"), "täll" );
	deepEqual( Stem("tält"), "tält" );
	deepEqual( Stem("tämlig"), "täm" );
	deepEqual( Stem("tämligen"), "täm" );
	deepEqual( Stem("tän"), "tän" );
	deepEqual( Stem("tänd"), "tänd" );
	deepEqual( Stem("tända"), "tänd" );
	deepEqual( Stem("tändande"), "tänd" );
	deepEqual( Stem("tändas"), "tänd" );
	deepEqual( Stem("tände"), "tänd" );
	deepEqual( Stem("tänder"), "tänd" );
	deepEqual( Stem("tänderna"), "tänd" );
	deepEqual( Stem("tändes"), "tänd" );
	deepEqual( Stem("tändsticka"), "tändstick" );
	deepEqual( Stem("tänger"), "täng" );
	deepEqual( Stem("tängerna"), "täng" );
	deepEqual( Stem("tänjas"), "tänj" );
	deepEqual( Stem("tänk"), "tänk" );
	deepEqual( Stem("tänka"), "tänk" );
	deepEqual( Stem("tänkande"), "tänk" );
	deepEqual( Stem("tänkare"), "tänk" );
	deepEqual( Stem("tänkaren"), "tänk" );
	deepEqual( Stem("tänkarna"), "tänk" );
	deepEqual( Stem("tänkarnas"), "tänk" );
	deepEqual( Stem("tänkas"), "tänk" );
	deepEqual( Stem("tänkbar"), "tänkb" );
	deepEqual( Stem("tänkbart"), "tänkbart" );
	deepEqual( Stem("tänke"), "tänk" );
	deepEqual( Stem("tänker"), "tänk" );
	deepEqual( Stem("tänkesätt"), "tänkesät" );
	deepEqual( Stem("tänksamt"), "tänksamt" );
	deepEqual( Stem("tänkt"), "tänk" );
	deepEqual( Stem("tänktc"), "tänktc" );
	deepEqual( Stem("tänkte"), "tänk" );
	deepEqual( Stem("tänt"), "tänt" );
	deepEqual( Stem("tänts"), "tänt" );
	deepEqual( Stem("täppa"), "täpp" );
	deepEqual( Stem("täppan"), "täppan" );
	deepEqual( Stem("tära"), "tär" );
	deepEqual( Stem("tärande"), "tär" );
	deepEqual( Stem("tärd"), "tärd" );
	deepEqual( Stem("tärde"), "tärd" );
	deepEqual( Stem("tärna"), "tärn" );
	deepEqual( Stem("tärnan"), "tärnan" );
	deepEqual( Stem("tärnor"), "tärn" );
	deepEqual( Stem("tärt"), "tärt" );
	deepEqual( Stem("tät"), "tät" );
	deepEqual( Stem("täta"), "tät" );
	deepEqual( Stem("tätare"), "tät" );
	deepEqual( Stem("tätaste"), "tät" );
	deepEqual( Stem("täten"), "tät" );
	deepEqual( Stem("tätnade"), "tätn" );
	deepEqual( Stem("tätt"), "tätt" );
	deepEqual( Stem("tättomslutande"), "tättomslut" );
	deepEqual( Stem("tävlan"), "tävlan" );
	deepEqual( Stem("tävlas"), "tävl" );
	deepEqual( Stem("tå"), "tå" );
	deepEqual( Stem("tåg"), "tåg" );
	deepEqual( Stem("tåga"), "tåg" );
	deepEqual( Stem("tågbygnaden"), "tågbygnad" );
	deepEqual( Stem("tågen"), "tåg" );
	deepEqual( Stem("tåget"), "tåget" );
	deepEqual( Stem("tågpassagerare"), "tågpassager" );
	deepEqual( Stem("tågverket"), "tågverket" );
	deepEqual( Stem("tågändan"), "tågändan" );
	deepEqual( Stem("tål"), "tål" );
	deepEqual( Stem("tåla"), "tål" );
	deepEqual( Stem("tålamod"), "tålamod" );
	deepEqual( Stem("tålamodet"), "tålamodet" );
	deepEqual( Stem("tålde"), "tåld" );
	deepEqual( Stem("tålig"), "tål" );
	deepEqual( Stem("tåliga"), "tål" );
	deepEqual( Stem("tålige"), "tål" );
	deepEqual( Stem("tåligt"), "tål" );
	deepEqual( Stem("tålmodig"), "tålmod" );
	deepEqual( Stem("tåls"), "tål" );
	deepEqual( Stem("tålt"), "tålt" );
	deepEqual( Stem("tålte"), "tålt" );
	deepEqual( Stem("tång"), "tång" );
	deepEqual( Stem("tången"), "tång" );
	deepEqual( Stem("tånk"), "tånk" );
	deepEqual( Stem("tånkte"), "tånk" );
	deepEqual( Stem("tår"), "tår" );
	deepEqual( Stem("tårade"), "tår" );
	deepEqual( Stem("tårades"), "tår" );
	deepEqual( Stem("tårar"), "tår" );
	deepEqual( Stem("tårarna"), "tår" );
	deepEqual( Stem("tårarne"), "tår" );
	deepEqual( Stem("tåren"), "tår" );
	deepEqual( Stem("tårens"), "tår" );
	deepEqual( Stem("tårfuktade"), "tårfuk" );
	deepEqual( Stem("tårfylda"), "tårfyld" );
	deepEqual( Stem("tårfyllda"), "tårfylld" );
	deepEqual( Stem("tårlöst"), "tårlös" );
	deepEqual( Stem("tårna"), "tårn" );
	deepEqual( Stem("tårta"), "tårt" );
	deepEqual( Stem("tårtask"), "tårtask" );
	deepEqual( Stem("tårtbitarna"), "tårtbit" );
	deepEqual( Stem("tårtor"), "tårt" );
	deepEqual( Stem("tårtorna"), "tårt" );
	deepEqual( Stem("tårvätt"), "tårvät" );
	deepEqual( Stem("tårögd"), "tårög" );
	deepEqual( Stem("tårögda"), "tårög" );
	deepEqual( Stem("tåspetsarne"), "tåspets" );
	deepEqual( Stem("tö"), "tö" );
	deepEqual( Stem("töar"), "töar" );
	deepEqual( Stem("töcken"), "töck" );
	deepEqual( Stem("töcknet"), "töcknet" );
	deepEqual( Stem("tölpaktigheten"), "tölpakt" );
	deepEqual( Stem("tölpen"), "tölp" );
	deepEqual( Stem("töm"), "töm" );
	deepEqual( Stem("tömda"), "tömd" );
	deepEqual( Stem("tömde"), "tömd" );
	deepEqual( Stem("tömma"), "tömm" );
	deepEqual( Stem("tömmer"), "tömm" );
	deepEqual( Stem("tömt"), "tömt" );
	deepEqual( Stem("tör"), "tör" );
	deepEqual( Stem("tören"), "tör" );
	deepEqual( Stem("törhända"), "törhänd" );
	deepEqual( Stem("törnet"), "törnet" );
	deepEqual( Stem("törnig"), "törn" );
	deepEqual( Stem("törnroskrans"), "törnroskran" );
	deepEqual( Stem("törnrosor"), "törnros" );
	deepEqual( Stem("törs"), "tör" );
	deepEqual( Stem("törst"), "törst" );
	deepEqual( Stem("törstade"), "törst" );
	deepEqual( Stem("törstig"), "törst" );
	deepEqual( Stem("törstigt"), "törst" );
	deepEqual( Stem("tös"), "tös" );
	deepEqual( Stem("töväder"), "töväd" );
	deepEqual( Stem("u"), "u" );
	deepEqual( Stem("uch"), "uch" );
	deepEqual( Stem("udda"), "udd" );
	deepEqual( Stem("uddas"), "udd" );
	deepEqual( Stem("udde"), "udd" );
	deepEqual( Stem("udden"), "udd" );
	deepEqual( Stem("uddvassa"), "uddvass" );
	deepEqual( Stem("udergår"), "udergår" );
	deepEqual( Stem("uderhålla"), "uderhåll" );
	deepEqual( Stem("uff"), "uff" );
	deepEqual( Stem("ugglor"), "uggl" );
	deepEqual( Stem("ugn"), "ugn" );
	deepEqual( Stem("ugnen"), "ugn" );
	deepEqual( Stem("uilla"), "uill" );
	deepEqual( Stem("ukulele"), "ukulel" );
	deepEqual( Stem("ull"), "ull" );
	deepEqual( Stem("ulla"), "ull" );
	deepEqual( Stem("ullderkläder"), "ullderkläd" );
	deepEqual( Stem("ulle"), "ull" );
	deepEqual( Stem("ullen"), "ull" );
	deepEqual( Stem("ulliga"), "ull" );
	deepEqual( Stem("ullsockar"), "ullsock" );
	deepEqual( Stem("ullt"), "ullt" );
	deepEqual( Stem("ulrik"), "ulrik" );
	deepEqual( Stem("ulster"), "ulst" );
	deepEqual( Stem("ultra"), "ultr" );
	deepEqual( Stem("ulvar"), "ulv" );
	deepEqual( Stem("umbrien"), "umbri" );
	deepEqual( Stem("umbriens"), "umbri" );
	deepEqual( Stem("umbäranden"), "umbär" );
	deepEqual( Stem("umdrande"), "umdr" );
	deepEqual( Stem("umgicks"), "umgick" );
	deepEqual( Stem("umgälla"), "umgäll" );
	deepEqual( Stem("umgänge"), "umgäng" );
	deepEqual( Stem("umgängeslivet"), "umgängeslivet" );
	deepEqual( Stem("umgängesvänner"), "umgängesvän" );
	deepEqual( Stem("umgänget"), "umgänget" );
	deepEqual( Stem("umgås"), "umgås" );
	deepEqual( Stem("umgåtts"), "umgåt" );
	deepEqual( Stem("umler"), "uml" );
	deepEqual( Stem("un"), "un" );
	deepEqual( Stem("undades"), "und" );
	deepEqual( Stem("undan"), "undan" );
	deepEqual( Stem("undanber"), "undanb" );
	deepEqual( Stem("undandraga"), "undandrag" );
	deepEqual( Stem("undandrar"), "undandr" );
	deepEqual( Stem("undandrog"), "undandrog" );
	deepEqual( Stem("undanflykter"), "undanflyk" );
	deepEqual( Stem("undangömd"), "undangömd" );
	deepEqual( Stem("undangömda"), "undangömd" );
	deepEqual( Stem("undanrödja"), "undanrödj" );
	deepEqual( Stem("undanröjt"), "undanröjt" );
	deepEqual( Stem("undansparkade"), "undanspark" );
	deepEqual( Stem("undantag"), "undantag" );
	deepEqual( Stem("undantaget"), "undantaget" );
	deepEqual( Stem("undcrbart"), "undcrbart" );
	deepEqual( Stem("unde"), "und" );
	deepEqual( Stem("under"), "und" );
	deepEqual( Stem("underbar"), "underb" );
	deepEqual( Stem("underbara"), "underbar" );
	deepEqual( Stem("underbart"), "underbart" );
	deepEqual( Stem("underbyggnad"), "underbyggn" );
	deepEqual( Stem("underfund"), "underfund" );
	deepEqual( Stem("underfundig"), "underfund" );
	deepEqual( Stem("underfundigt"), "underfund" );
	deepEqual( Stem("undergifven"), "undergifv" );
	deepEqual( Stem("undergifvenhet"), "undergifven" );
	deepEqual( Stem("undergifvet"), "undergifvet" );
	deepEqual( Stem("undergingo"), "undergingo" );
	deepEqual( Stem("undergivenhet"), "undergiven" );
	deepEqual( Stem("undergivna"), "undergivn" );
	deepEqual( Stem("undergång"), "undergång" );
	deepEqual( Stem("undergången"), "undergång" );
	deepEqual( Stem("undergått"), "undergåt" );
	deepEqual( Stem("undergörande"), "undergör" );
	deepEqual( Stem("underhalla"), "underhall" );
	deepEqual( Stem("underhandlingar"), "underhandling" );
	deepEqual( Stem("underhandlingen"), "underhandling" );
	deepEqual( Stem("underhåll"), "underhåll" );
	deepEqual( Stem("underhålla"), "underhåll" );
	deepEqual( Stem("underhållande"), "underhåll" );
	deepEqual( Stem("underhållen"), "underhåll" );
	deepEqual( Stem("underhållit"), "underhållit" );
	deepEqual( Stem("underhållningen"), "underhållning" );
	deepEqual( Stem("underhöll"), "underhöll" );
	deepEqual( Stem("underhöllo"), "underhöllo" );
	deepEqual( Stem("underjordisk"), "underjordisk" );
	deepEqual( Stem("underjordiska"), "underjordisk" );
	deepEqual( Stem("underkasta"), "underkast" );
	deepEqual( Stem("underkastad"), "underkast" );
	deepEqual( Stem("underkastade"), "underkast" );
	deepEqual( Stem("underkjol"), "underkjol" );
	deepEqual( Stem("underklass"), "underklass" );
	deepEqual( Stem("underkläder"), "underkläd" );
	deepEqual( Stem("underkurer"), "underkur" );
	deepEqual( Stem("underkuvades"), "underkuv" );
	deepEqual( Stem("underlig"), "under" );
	deepEqual( Stem("underliga"), "under" );
	deepEqual( Stem("underligare"), "under" );
	deepEqual( Stem("underligt"), "under" );
	deepEqual( Stem("underliv"), "underliv" );
	deepEqual( Stem("underlivslidande"), "underlivslid" );
	deepEqual( Stem("underlägsen"), "underlägs" );
	deepEqual( Stem("underläpp"), "underläpp" );
	deepEqual( Stem("underläppen"), "underläpp" );
	deepEqual( Stem("underlärarinna"), "underlärarin" );
	deepEqual( Stem("underlärarinnan"), "underlärarinnan" );
	deepEqual( Stem("underlätta"), "underlät" );
	deepEqual( Stem("underlåta"), "underlåt" );
	deepEqual( Stem("underlåtit"), "underlåtit" );
	deepEqual( Stem("underlöjtnant"), "underlöjtnant" );
	deepEqual( Stem("underlöjtnanten"), "underlöjtnant" );
	deepEqual( Stem("undermedvetna"), "undermedvetn" );
	deepEqual( Stem("underordnad"), "underordn" );
	deepEqual( Stem("underordnade"), "underordn" );
	deepEqual( Stem("underordnar"), "underordn" );
	deepEqual( Stem("underredet"), "underredet" );
	deepEqual( Stem("underrätta"), "underrät" );
	deepEqual( Stem("underrättad"), "underrät" );
	deepEqual( Stem("underrättade"), "underrät" );
	deepEqual( Stem("underrättar"), "underrät" );
	deepEqual( Stem("underrättat"), "underrät" );
	deepEqual( Stem("underrättelse"), "underrätt" );
	deepEqual( Stem("underrättelsen"), "underrätt" );
	deepEqual( Stem("underrättelser"), "underrätt" );
	deepEqual( Stem("unders"), "under" );
	deepEqual( Stem("underskattar"), "underskat" );
	deepEqual( Stem("underskrift"), "underskrift" );
	deepEqual( Stem("underskriften"), "underskrift" );
	deepEqual( Stem("understrukna"), "understrukn" );
	deepEqual( Stem("understryk"), "understryk" );
	deepEqual( Stem("understrykningar"), "understrykning" );
	deepEqual( Stem("understundom"), "understundom" );
	deepEqual( Stem("understyrmannen"), "understyrman" );
	deepEqual( Stem("understå"), "understå" );
	deepEqual( Stem("understöd"), "understöd" );
	deepEqual( Stem("undersätsig"), "undersäts" );
	deepEqual( Stem("undersåt"), "undersåt" );
	deepEqual( Stem("undersöka"), "undersök" );
	deepEqual( Stem("undersökas"), "undersök" );
	deepEqual( Stem("undersökning"), "undersökning" );
	deepEqual( Stem("undersökningar"), "undersökning" );
	deepEqual( Stem("undersökningen"), "undersökning" );
	deepEqual( Stem("undersökningsbord"), "undersökningsbord" );
	deepEqual( Stem("undersökningsbordet"), "undersökningsbordet" );
	deepEqual( Stem("undersökningsrum"), "undersökningsrum" );
	deepEqual( Stem("undersökningsrummet"), "undersökningsrummet" );
	deepEqual( Stem("undersökt"), "undersök" );
	deepEqual( Stem("undersökte"), "undersök" );
	deepEqual( Stem("underton"), "underton" );
	deepEqual( Stem("undertrycka"), "undertryck" );
	deepEqual( Stem("undertryckas"), "undertryck" );
	deepEqual( Stem("undertryckt"), "undertryck" );
	deepEqual( Stem("underverk"), "underverk" );
	deepEqual( Stem("undervisa"), "undervis" );
	deepEqual( Stem("undervisade"), "undervis" );
	deepEqual( Stem("undervisat"), "undervis" );
	deepEqual( Stem("undervisning"), "undervisning" );
	deepEqual( Stem("undfalla"), "undfall" );
	deepEqual( Stem("undfallande"), "undfall" );
	deepEqual( Stem("undfallit"), "undfallit" );
	deepEqual( Stem("undfly"), "undfly" );
	deepEqual( Stem("undföll"), "undföll" );
	deepEqual( Stem("undgick"), "undgick" );
	deepEqual( Stem("undgingo"), "undgingo" );
	deepEqual( Stem("undgå"), "undgå" );
	deepEqual( Stem("undkomma"), "undkomm" );
	deepEqual( Stem("undkommo"), "undkommo" );
	deepEqual( Stem("undra"), "undr" );
	deepEqual( Stem("undrade"), "undr" );
	deepEqual( Stem("undran"), "undran" );
	deepEqual( Stem("undrande"), "undr" );
	deepEqual( Stem("undransvärda"), "undransvärd" );
	deepEqual( Stem("undransvärt"), "undransvärt" );
	deepEqual( Stem("undrar"), "undr" );
	deepEqual( Stem("undrat"), "undr" );
	deepEqual( Stem("undseende"), "undseend" );
	deepEqual( Stem("undslapp"), "undslapp" );
	deepEqual( Stem("undsluppit"), "undsluppit" );
	deepEqual( Stem("undsluppna"), "undsluppn" );
	deepEqual( Stem("undsättning"), "undsättning" );
	deepEqual( Stem("undvara"), "undvar" );
	deepEqual( Stem("undvarit"), "undvarit" );
	deepEqual( Stem("undvek"), "undvek" );
	deepEqual( Stem("undvik"), "undvik" );
	deepEqual( Stem("undvika"), "undvik" );
	deepEqual( Stem("undvikande"), "undvik" );
	deepEqual( Stem("undvikas"), "undvik" );
	deepEqual( Stem("undvikes"), "undvik" );
	deepEqual( Stem("ung"), "ung" );
	deepEqual( Stem("unga"), "ung" );
	deepEqual( Stem("ungar"), "ung" );
	deepEqual( Stem("ungarna"), "ung" );
	deepEqual( Stem("ungas"), "ung" );
	deepEqual( Stem("ungdom"), "ungdom" );
	deepEqual( Stem("ungdomar"), "ungdom" );
	deepEqual( Stem("ungdomarna"), "ungdom" );
	deepEqual( Stem("ungdomen"), "ungdom" );
	deepEqual( Stem("ungdomens"), "ungdom" );
	deepEqual( Stem("ungdomlig"), "ungdom" );
	deepEqual( Stem("ungdomliga"), "ungdom" );
	deepEqual( Stem("ungdomligt"), "ungdom" );
	deepEqual( Stem("ungdoms"), "ungdom" );
	deepEqual( Stem("ungdomsaren"), "ungdoms" );
	deepEqual( Stem("ungdomsblomman"), "ungdomsblomman" );
	deepEqual( Stem("ungdomsfröjders"), "ungdomsfröjder" );
	deepEqual( Stem("ungdomskraft"), "ungdomskraft" );
	deepEqual( Stem("ungdomskraften"), "ungdomskraft" );
	deepEqual( Stem("ungdomskärlek"), "ungdomskärlek" );
	deepEqual( Stem("ungdomslättsinne"), "ungdomslättsin" );
	deepEqual( Stem("ungdomsminnen"), "ungdomsmin" );
	deepEqual( Stem("ungdomsrosorna"), "ungdomsros" );
	deepEqual( Stem("ungdomssinnet"), "ungdomssinnet" );
	deepEqual( Stem("ungdomsskaran"), "ungdomsskaran" );
	deepEqual( Stem("ungdomstid"), "ungdomstid" );
	deepEqual( Stem("ungdomsväninna"), "ungdomsvänin" );
	deepEqual( Stem("ungdomsvår"), "ungdomsvår" );
	deepEqual( Stem("ungdomsvörten"), "ungdomsvört" );
	deepEqual( Stem("ungdomsyran"), "ungdomsyran" );
	deepEqual( Stem("ungdomsår"), "ungdomsår" );
	deepEqual( Stem("ungdomsåren"), "ungdomsår" );
	deepEqual( Stem("unge"), "ung" );
	deepEqual( Stem("ungefär"), "ungefär" );
	deepEqual( Stem("ungefärligen"), "ungefär" );
	deepEqual( Stem("ungen"), "ung" );
	deepEqual( Stem("ungersven"), "ungersv" );
	deepEqual( Stem("ungherrar"), "ungherr" );
	deepEqual( Stem("ungherrarna"), "ungherr" );
	deepEqual( Stem("unghjort"), "unghjort" );
	deepEqual( Stem("ungicks"), "ungick" );
	deepEqual( Stem("ungkarl"), "ungkarl" );
	deepEqual( Stem("ungkarlar"), "ungkarl" );
	deepEqual( Stem("ungkarlarna"), "ungkarl" );
	deepEqual( Stem("ungkarlars"), "ungkarlar" );
	deepEqual( Stem("ungkarlen"), "ungkarl" );
	deepEqual( Stem("ungkarls"), "ungkarl" );
	deepEqual( Stem("ungkarlsbostad"), "ungkarlsbost" );
	deepEqual( Stem("ungkarlsliv"), "ungkarlsliv" );
	deepEqual( Stem("ungkarlslivet"), "ungkarlslivet" );
	deepEqual( Stem("ungkarlslivets"), "ungkarlslivet" );
	deepEqual( Stem("ungkarlsrum"), "ungkarlsrum" );
	deepEqual( Stem("ungkarlssoffa"), "ungkarlssoff" );
	deepEqual( Stem("ungkarlsståndet"), "ungkarlsståndet" );
	deepEqual( Stem("ungkarlssäng"), "ungkarlssäng" );
	deepEqual( Stem("ungkärliga"), "ungkär" );
	deepEqual( Stem("ungmö"), "ungmö" );
	deepEqual( Stem("ungmön"), "ungmön" );
	deepEqual( Stem("ungmöns"), "ungmön" );
	deepEqual( Stem("ungskogen"), "ungskog" );
	deepEqual( Stem("ungt"), "ungt" );
	deepEqual( Stem("uniform"), "uniform" );
	deepEqual( Stem("uniformen"), "uniform" );
	deepEqual( Stem("uniformer"), "uniform" );
	deepEqual( Stem("uniformerna"), "uniform" );
	deepEqual( Stem("uniformsmössa"), "uniformsmöss" );
	deepEqual( Stem("uniformsrocken"), "uniformsrock" );
	deepEqual( Stem("unionens"), "union" );
	deepEqual( Stem("universitetet"), "universitetet" );
	deepEqual( Stem("unken"), "unk" );
	deepEqual( Stem("unkna"), "unkn" );
	deepEqual( Stem("unna"), "unn" );
	deepEqual( Stem("unnade"), "unn" );
	deepEqual( Stem("unnar"), "unn" );
	deepEqual( Stem("uns"), "uns" );
	deepEqual( Stem("upmann"), "upman" );
	deepEqual( Stem("upmerksamhet"), "upmerksam" );
	deepEqual( Stem("upp"), "upp" );
	deepEqual( Stem("uppackning"), "uppackning" );
	deepEqual( Stem("uppasser"), "uppass" );
	deepEqual( Stem("uppasserskan"), "uppasserskan" );
	deepEqual( Stem("uppasserskorna"), "uppassersk" );
	deepEqual( Stem("uppassningen"), "uppassning" );
	deepEqual( Stem("uppblossande"), "uppbloss" );
	deepEqual( Stem("uppblåst"), "uppblåst" );
	deepEqual( Stem("uppbrott"), "uppbrot" );
	deepEqual( Stem("uppbyggelse"), "uppbygg" );
	deepEqual( Stem("uppbyggelseböcker"), "uppbyggelseböck" );
	deepEqual( Stem("uppbyggelsestun"), "uppbyggelsestun" );
	deepEqual( Stem("uppbyggliga"), "uppbygg" );
	deepEqual( Stem("uppbyggligt"), "uppbygg" );
	deepEqual( Stem("uppbäddad"), "uppbäd" );
	deepEqual( Stem("uppbära"), "uppbär" );
	deepEqual( Stem("uppdelats"), "uppdelat" );
	deepEqual( Stem("uppdiktad"), "uppdik" );
	deepEqual( Stem("uppdrag"), "uppdrag" );
	deepEqual( Stem("uppdraga"), "uppdrag" );
	deepEqual( Stem("uppdragen"), "uppdrag" );
	deepEqual( Stem("uppdrager"), "uppdrag" );
	deepEqual( Stem("uppdraget"), "uppdraget" );
	deepEqual( Stem("uppdragit"), "uppdragit" );
	deepEqual( Stem("uppdragna"), "uppdragn" );
	deepEqual( Stem("uppdrivet"), "uppdrivet" );
	deepEqual( Stem("uppdrog"), "uppdrog" );
	deepEqual( Stem("uppdukad"), "uppduk" );
	deepEqual( Stem("uppdyka"), "uppdyk" );
	deepEqual( Stem("uppdykande"), "uppdyk" );
	deepEqual( Stem("uppe"), "upp" );
	deepEqual( Stem("uppehälle"), "uppehäll" );
	deepEqual( Stem("uppehåll"), "uppehåll" );
	deepEqual( Stem("uppehålla"), "uppehåll" );
	deepEqual( Stem("uppehållande"), "uppehåll" );
	deepEqual( Stem("uppehållit"), "uppehållit" );
	deepEqual( Stem("uppehöll"), "uppehöll" );
	deepEqual( Stem("uppenbar"), "uppenb" );
	deepEqual( Stem("uppenbarade"), "uppenbar" );
	deepEqual( Stem("uppenbarar"), "uppenbar" );
	deepEqual( Stem("uppenbarat"), "uppenbar" );
	deepEqual( Stem("uppenbarelse"), "uppenbar" );
	deepEqual( Stem("uppenbarelser"), "uppenbar" );
	deepEqual( Stem("uppenbart"), "uppenbart" );
	deepEqual( Stem("uppendagat"), "uppendag" );
	deepEqual( Stem("uppfann"), "uppfan" );
	deepEqual( Stem("uppfarande"), "uppfar" );
	deepEqual( Stem("uppfatta"), "uppfat" );
	deepEqual( Stem("uppfattade"), "uppfat" );
	deepEqual( Stem("uppfattar"), "uppfat" );
	deepEqual( Stem("uppfattat"), "uppfat" );
	deepEqual( Stem("uppfattning"), "uppfattning" );
	deepEqual( Stem("uppfinna"), "uppfin" );
	deepEqual( Stem("uppfinningsrikt"), "uppfinningsrik" );
	deepEqual( Stem("uppfiskades"), "uppfisk" );
	deepEqual( Stem("uppflamma"), "uppflamm" );
	deepEqual( Stem("uppflammande"), "uppflamm" );
	deepEqual( Stem("uppflugen"), "uppflug" );
	deepEqual( Stem("uppflyttade"), "uppflyt" );
	deepEqual( Stem("uppfor"), "uppf" );
	deepEqual( Stem("uppfordrar"), "uppfordr" );
	deepEqual( Stem("uppfostra"), "uppfostr" );
	deepEqual( Stem("uppfostrad"), "uppfostr" );
	deepEqual( Stem("uppfostrade"), "uppfostr" );
	deepEqual( Stem("uppfostran"), "uppfostran" );
	deepEqual( Stem("uppfostrans"), "uppfostran" );
	deepEqual( Stem("uppfostrarinna"), "uppfostrarin" );
	deepEqual( Stem("uppfostras"), "uppfostr" );
	deepEqual( Stem("uppfostrat"), "uppfostr" );
	deepEqual( Stem("uppfostrats"), "uppfostrat" );
	deepEqual( Stem("uppfriska"), "uppfrisk" );
	deepEqual( Stem("uppfriskade"), "uppfrisk" );
	deepEqual( Stem("uppfriskande"), "uppfrisk" );
	deepEqual( Stem("uppfriskar"), "uppfrisk" );
	deepEqual( Stem("uppfriskat"), "uppfrisk" );
	deepEqual( Stem("uppfriskningar"), "uppfriskning" );
	deepEqual( Stem("uppfrätta"), "uppfrät" );
	deepEqual( Stem("uppfunna"), "uppfun" );
	deepEqual( Stem("uppfunnit"), "uppfunnit" );
	deepEqual( Stem("uppfylde"), "uppfyld" );
	deepEqual( Stem("uppfylla"), "uppfyll" );
	deepEqual( Stem("uppfyllande"), "uppfyll" );
	deepEqual( Stem("uppfyllandet"), "uppfyll" );
	deepEqual( Stem("uppfyllas"), "uppfyll" );
	deepEqual( Stem("uppfylld"), "uppfylld" );
	deepEqual( Stem("uppfyllda"), "uppfylld" );
	deepEqual( Stem("uppfyllde"), "uppfylld" );
	deepEqual( Stem("uppfyllelse"), "uppfyll" );
	deepEqual( Stem("uppfyller"), "uppfyll" );
	deepEqual( Stem("uppfyllt"), "uppfyllt" );
	deepEqual( Stem("uppfästade"), "uppfäst" );
	deepEqual( Stem("uppfånga"), "uppfång" );
	deepEqual( Stem("uppfångade"), "uppfång" );
	deepEqual( Stem("uppfångades"), "uppfång" );
	deepEqual( Stem("uppfångat"), "uppfång" );
	deepEqual( Stem("uppfödd"), "uppföd" );
	deepEqual( Stem("uppfödda"), "uppföd" );
	deepEqual( Stem("uppfödt"), "uppföd" );
	deepEqual( Stem("uppför"), "uppför" );
	deepEqual( Stem("uppföra"), "uppför" );
	deepEqual( Stem("uppförande"), "uppför" );
	deepEqual( Stem("uppförd"), "uppförd" );
	deepEqual( Stem("uppförda"), "uppförd" );
	deepEqual( Stem("uppförde"), "uppförd" );
	deepEqual( Stem("uppfördes"), "uppförd" );
	deepEqual( Stem("uppfört"), "uppfört" );
	deepEqual( Stem("uppgaf"), "uppgaf" );
	deepEqual( Stem("uppgav"), "uppgav" );
	deepEqual( Stem("uppgett"), "uppget" );
	deepEqual( Stem("uppgick"), "uppgick" );
	deepEqual( Stem("uppgifna"), "uppgifn" );
	deepEqual( Stem("uppgift"), "uppgift" );
	deepEqual( Stem("uppgiften"), "uppgift" );
	deepEqual( Stem("uppgifter"), "uppgift" );
	deepEqual( Stem("uppgingo"), "uppgingo" );
	deepEqual( Stem("uppgiven"), "uppgiv" );
	deepEqual( Stem("uppgivit"), "uppgivit" );
	deepEqual( Stem("uppgjorda"), "uppgjord" );
	deepEqual( Stem("uppgjorde"), "uppgjord" );
	deepEqual( Stem("uppgjort"), "uppgjort" );
	deepEqual( Stem("uppgräfde"), "uppgräfd" );
	deepEqual( Stem("uppgående"), "uppgåend" );
	deepEqual( Stem("uppgåvo"), "uppgåvo" );
	deepEqual( Stem("uppgöra"), "uppgör" );
	deepEqual( Stem("uppgörande"), "uppgör" );
	deepEqual( Stem("upphandlingar"), "upphandling" );
	deepEqual( Stem("upphet"), "upp" );
	deepEqual( Stem("upphetsad"), "upphets" );
	deepEqual( Stem("upphetsade"), "upphets" );
	deepEqual( Stem("upphetsning"), "upphetsning" );
	deepEqual( Stem("upphettade"), "upphet" );
	deepEqual( Stem("upphettat"), "upphet" );
	deepEqual( Stem("upphitta"), "upphit" );
	deepEqual( Stem("upphjelpa"), "upphjelp" );
	deepEqual( Stem("upphofvet"), "upphofvet" );
	deepEqual( Stem("upphov"), "upphov" );
	deepEqual( Stem("upphuggen"), "upphugg" );
	deepEqual( Stem("upphäfde"), "upphäfd" );
	deepEqual( Stem("upphällningen"), "upphällning" );
	deepEqual( Stem("upphänga"), "upphäng" );
	deepEqual( Stem("upphängda"), "upphäng" );
	deepEqual( Stem("upphängde"), "upphäng" );
	deepEqual( Stem("upphängdes"), "upphäng" );
	deepEqual( Stem("upphävd"), "upphävd" );
	deepEqual( Stem("upphöja"), "upphöj" );
	deepEqual( Stem("upphöjd"), "upphöjd" );
	deepEqual( Stem("upphöjda"), "upphöjd" );
	deepEqual( Stem("upphöjelse"), "upphöj" );
	deepEqual( Stem("upphöjning"), "upphöjning" );
	deepEqual( Stem("upphöjt"), "upphöjt" );
	deepEqual( Stem("upphöra"), "upphör" );
	deepEqual( Stem("upphörande"), "upphör" );
	deepEqual( Stem("upphörde"), "upphörd" );
	deepEqual( Stem("upphört"), "upphört" );
	deepEqual( Stem("uppifrån"), "uppifrån" );
	deepEqual( Stem("uppiggad"), "uppigg" );
	deepEqual( Stem("uppjagade"), "uppjag" );
	deepEqual( Stem("uppkalla"), "uppkall" );
	deepEqual( Stem("uppkallade"), "uppkall" );
	deepEqual( Stem("uppkastad"), "uppkast" );
	deepEqual( Stem("uppkastade"), "uppkast" );
	deepEqual( Stem("uppkastades"), "uppkast" );
	deepEqual( Stem("uppklev"), "uppklev" );
	deepEqual( Stem("uppklättra"), "uppklättr" );
	deepEqual( Stem("uppkom"), "uppkom" );
	deepEqual( Stem("uppkomma"), "uppkomm" );
	deepEqual( Stem("uppkommen"), "uppkomm" );
	deepEqual( Stem("uppkommit"), "uppkommit" );
	deepEqual( Stem("uppkrupen"), "uppkrup" );
	deepEqual( Stem("uppköp"), "uppköp" );
	deepEqual( Stem("upplaga"), "upplag" );
	deepEqual( Stem("upplagd"), "upplag" );
	deepEqual( Stem("uppland"), "uppland" );
	deepEqual( Stem("upplands"), "uppland" );
	deepEqual( Stem("uppledsen"), "uppleds" );
	deepEqual( Stem("upplefde"), "upplefd" );
	deepEqual( Stem("upplefva"), "upplefv" );
	deepEqual( Stem("upplefvadt"), "upplefvad" );
	deepEqual( Stem("upplefvat"), "upplefv" );
	deepEqual( Stem("uppleva"), "upplev" );
	deepEqual( Stem("upplevat"), "upplev" );
	deepEqual( Stem("upplevde"), "upplevd" );
	deepEqual( Stem("uppleve"), "upplev" );
	deepEqual( Stem("upplevelse"), "upplev" );
	deepEqual( Stem("upplevelsen"), "upplev" );
	deepEqual( Stem("upplevelser"), "upplev" );
	deepEqual( Stem("upplifva"), "upplifv" );
	deepEqual( Stem("uppliva"), "uppliv" );
	deepEqual( Stem("upplivad"), "uppliv" );
	deepEqual( Stem("upplivade"), "uppliv" );
	deepEqual( Stem("upplivande"), "uppliv" );
	deepEqual( Stem("upplyft"), "upplyft" );
	deepEqual( Stem("upplyfta"), "upplyft" );
	deepEqual( Stem("upplyftade"), "upplyft" );
	deepEqual( Stem("upplyftande"), "upplyft" );
	deepEqual( Stem("upplyfte"), "upplyft" );
	deepEqual( Stem("upplyftes"), "upplyft" );
	deepEqual( Stem("upplysa"), "upplys" );
	deepEqual( Stem("upplysning"), "upplysning" );
	deepEqual( Stem("upplysningar"), "upplysning" );
	deepEqual( Stem("upplysningen"), "upplysning" );
	deepEqual( Stem("upplyst"), "upplyst" );
	deepEqual( Stem("upplysta"), "upplyst" );
	deepEqual( Stem("upplyste"), "upplyst" );
	deepEqual( Stem("upplystes"), "upplyst" );
	deepEqual( Stem("upplägga"), "upplägg" );
	deepEqual( Stem("uppläsa"), "uppläs" );
	deepEqual( Stem("uppläsningen"), "uppläsning" );
	deepEqual( Stem("uppläst"), "uppläst" );
	deepEqual( Stem("upplästes"), "uppläst" );
	deepEqual( Stem("upplät"), "upplät" );
	deepEqual( Stem("upplågade"), "upplåg" );
	deepEqual( Stem("upplågande"), "upplåg" );
	deepEqual( Stem("upplåste"), "upplåst" );
	deepEqual( Stem("upplåta"), "upplåt" );
	deepEqual( Stem("upplåtit"), "upplåtit" );
	deepEqual( Stem("upplösande"), "upplös" );
	deepEqual( Stem("upplösas"), "upplös" );
	deepEqual( Stem("upplösning"), "upplösning" );
	deepEqual( Stem("upplöst"), "upplös" );
	deepEqual( Stem("upplösta"), "upplös" );
	deepEqual( Stem("uppmana"), "uppman" );
	deepEqual( Stem("uppmanad"), "uppman" );
	deepEqual( Stem("uppmanade"), "uppman" );
	deepEqual( Stem("uppmanades"), "uppman" );
	deepEqual( Stem("uppmanande"), "uppman" );
	deepEqual( Stem("uppmanar"), "uppman" );
	deepEqual( Stem("uppmanat"), "uppman" );
	deepEqual( Stem("uppmaning"), "uppmaning" );
	deepEqual( Stem("uppmaningar"), "uppmaning" );
	deepEqual( Stem("uppmaningen"), "uppmaning" );
	deepEqual( Stem("uppmjukad"), "uppmjuk" );
	deepEqual( Stem("uppmuntra"), "uppmuntr" );
	deepEqual( Stem("uppmuntrad"), "uppmuntr" );
	deepEqual( Stem("uppmuntrade"), "uppmuntr" );
	deepEqual( Stem("uppmuntran"), "uppmuntran" );
	deepEqual( Stem("uppmuntrande"), "uppmuntr" );
	deepEqual( Stem("uppmuntrar"), "uppmuntr" );
	deepEqual( Stem("uppmuntringar"), "uppmuntring" );
	deepEqual( Stem("uppmärk"), "uppmärk" );
	deepEqual( Stem("uppmärksam"), "uppmärksam" );
	deepEqual( Stem("uppmärksamhet"), "uppmärksam" );
	deepEqual( Stem("uppmärksamheten"), "uppmärksam" );
	deepEqual( Stem("uppmärksamheter"), "uppmärksam" );
	deepEqual( Stem("uppmärksamma"), "uppmärksamm" );
	deepEqual( Stem("uppmärksammad"), "uppmärksamm" );
	deepEqual( Stem("uppmärksamme"), "uppmärksamm" );
	deepEqual( Stem("uppmärksamt"), "uppmärksamt" );
	deepEqual( Stem("uppmärksarnt"), "uppmärksarnt" );
	deepEqual( Stem("uppnäsa"), "uppnäs" );
	deepEqual( Stem("uppnådde"), "uppnåd" );
	deepEqual( Stem("uppnått"), "uppnåt" );
	deepEqual( Stem("uppoffra"), "uppoffr" );
	deepEqual( Stem("uppoffrade"), "uppoffr" );
	deepEqual( Stem("uppoffrande"), "uppoffr" );
	deepEqual( Stem("uppoffrar"), "uppoffr" );
	deepEqual( Stem("uppoffras"), "uppoffr" );
	deepEqual( Stem("uppoffrat"), "uppoffr" );
	deepEqual( Stem("uppoffring"), "uppoffring" );
	deepEqual( Stem("uppoffringar"), "uppoffring" );
	deepEqual( Stem("upprepa"), "upprep" );
	deepEqual( Stem("upprepad"), "upprep" );
	deepEqual( Stem("upprepade"), "upprep" );
	deepEqual( Stem("upprepande"), "upprep" );
	deepEqual( Stem("upprepar"), "upprep" );
	deepEqual( Stem("upprepas"), "upprep" );
	deepEqual( Stem("uppreste"), "upprest" );
	deepEqual( Stem("uppretad"), "uppret" );
	deepEqual( Stem("uppretade"), "uppret" );
	deepEqual( Stem("upprifva"), "upprifv" );
	deepEqual( Stem("upprigtig"), "upprigt" );
	deepEqual( Stem("upprigtiga"), "upprigt" );
	deepEqual( Stem("upprigtigt"), "upprigt" );
	deepEqual( Stem("uppriktig"), "upprikt" );
	deepEqual( Stem("uppriktiga"), "upprikt" );
	deepEqual( Stem("uppriktigare"), "upprikt" );
	deepEqual( Stem("uppriktigaste"), "upprikt" );
	deepEqual( Stem("uppriktighet"), "upprikt" );
	deepEqual( Stem("uppriktigt"), "upprikt" );
	deepEqual( Stem("upprivna"), "upprivn" );
	deepEqual( Stem("uppror"), "uppr" );
	deepEqual( Stem("upprorisk"), "upprorisk" );
	deepEqual( Stem("upproriska"), "upprorisk" );
	deepEqual( Stem("upproriske"), "upprorisk" );
	deepEqual( Stem("upprycka"), "uppryck" );
	deepEqual( Stem("uppryckande"), "uppryck" );
	deepEqual( Stem("uppryckas"), "uppryck" );
	deepEqual( Stem("uppryckt"), "uppryck" );
	deepEqual( Stem("uppryckta"), "uppryck" );
	deepEqual( Stem("upprymd"), "upprymd" );
	deepEqual( Stem("uppräkna"), "uppräkn" );
	deepEqual( Stem("upprätade"), "upprät" );
	deepEqual( Stem("upprätt"), "upprät" );
	deepEqual( Stem("upprätta"), "upprät" );
	deepEqual( Stem("upprättad"), "upprät" );
	deepEqual( Stem("upprättelse"), "upprätt" );
	deepEqual( Stem("upprätthålla"), "upprätthåll" );
	deepEqual( Stem("upprör"), "upprör" );
	deepEqual( Stem("upprörande"), "upprör" );
	deepEqual( Stem("upprörd"), "upprörd" );
	deepEqual( Stem("upprörda"), "upprörd" );
	deepEqual( Stem("upprördbet"), "upprördbet" );
	deepEqual( Stem("upprörde"), "upprörd" );
	deepEqual( Stem("upprördes"), "upprörd" );
	deepEqual( Stem("upprördt"), "upprörd" );
	deepEqual( Stem("upprört"), "upprört" );
	deepEqual( Stem("uppsagd"), "uppsag" );
	deepEqual( Stem("uppsala"), "uppsal" );
	deepEqual( Stem("uppsalakamrat"), "uppsalakamr" );
	deepEqual( Stem("uppsalamåne"), "uppsalamån" );
	deepEqual( Stem("uppsalapoesien"), "uppsalapoesi" );
	deepEqual( Stem("uppsatt"), "uppsat" );
	deepEqual( Stem("uppsatte"), "uppsat" );
	deepEqual( Stem("uppseende"), "uppseend" );
	deepEqual( Stem("uppsikt"), "uppsik" );
	deepEqual( Stem("uppskakad"), "uppskak" );
	deepEqual( Stem("uppskakande"), "uppskak" );
	deepEqual( Stem("uppskatta"), "uppskat" );
	deepEqual( Stem("uppskjuta"), "uppskjut" );
	deepEqual( Stem("uppskjutande"), "uppskjut" );
	deepEqual( Stem("uppskjutas"), "uppskjut" );
	deepEqual( Stem("uppskjutet"), "uppskjutet" );
	deepEqual( Stem("uppskjutna"), "uppskjutn" );
	deepEqual( Stem("uppskriva"), "uppskriv" );
	deepEqual( Stem("uppskriven"), "uppskriv" );
	deepEqual( Stem("uppskrämd"), "uppskrämd" );
	deepEqual( Stem("uppskrämda"), "uppskrämd" );
	deepEqual( Stem("uppslag"), "uppslag" );
	deepEqual( Stem("uppslagen"), "uppslag" );
	deepEqual( Stem("uppslaget"), "uppslaget" );
	deepEqual( Stem("uppslagna"), "uppslagn" );
	deepEqual( Stem("uppslitna"), "uppslitn" );
	deepEqual( Stem("uppslitsade"), "uppslits" );
	deepEqual( Stem("uppslog"), "uppslog" );
	deepEqual( Stem("uppsluka"), "uppsluk" );
	deepEqual( Stem("uppslukade"), "uppsluk" );
	deepEqual( Stem("uppslukades"), "uppsluk" );
	deepEqual( Stem("uppslukar"), "uppsluk" );
	deepEqual( Stem("uppslukas"), "uppsluk" );
	deepEqual( Stem("uppsluppen"), "uppslupp" );
	deepEqual( Stem("uppsluppet"), "uppsluppet" );
	deepEqual( Stem("uppsnappa"), "uppsnapp" );
	deepEqual( Stem("uppsnappat"), "uppsnapp" );
	deepEqual( Stem("uppsprang"), "uppsprang" );
	deepEqual( Stem("uppspringande"), "uppspring" );
	deepEqual( Stem("uppspädd"), "uppspäd" );
	deepEqual( Stem("uppspändt"), "uppspänd" );
	deepEqual( Stem("uppspärrade"), "uppspärr" );
	deepEqual( Stem("uppsteg"), "uppsteg" );
	deepEqual( Stem("uppstego"), "uppstego" );
	deepEqual( Stem("uppstigande"), "uppst" );
	deepEqual( Stem("uppstigit"), "uppstigit" );
	deepEqual( Stem("uppstigning"), "uppstigning" );
	deepEqual( Stem("uppstod"), "uppstod" );
	deepEqual( Stem("uppstodo"), "uppstodo" );
	deepEqual( Stem("uppstofferad"), "uppstoffer" );
	deepEqual( Stem("uppstruket"), "uppstruket" );
	deepEqual( Stem("uppställa"), "uppställ" );
	deepEqual( Stem("uppställda"), "uppställd" );
	deepEqual( Stem("uppställt"), "uppställt" );
	deepEqual( Stem("uppstämma"), "uppstämm" );
	deepEqual( Stem("uppstå"), "uppstå" );
	deepEqual( Stem("uppståndelse"), "uppstånd" );
	deepEqual( Stem("uppstår"), "uppstår" );
	deepEqual( Stem("uppstått"), "uppståt" );
	deepEqual( Stem("uppsvälld"), "uppsvälld" );
	deepEqual( Stem("uppsvällda"), "uppsvälld" );
	deepEqual( Stem("uppsvällt"), "uppsvällt" );
	deepEqual( Stem("uppsyn"), "uppsyn" );
	deepEqual( Stem("uppsäga"), "uppsäg" );
	deepEqual( Stem("uppsägningstid"), "uppsägningstid" );
	deepEqual( Stem("uppsände"), "uppsänd" );
	deepEqual( Stem("uppsändt"), "uppsänd" );
	deepEqual( Stem("uppsätta"), "uppsät" );
	deepEqual( Stem("uppsätter"), "uppsät" );
	deepEqual( Stem("uppsåt"), "uppsåt" );
	deepEqual( Stem("uppsöka"), "uppsök" );
	deepEqual( Stem("uppsökte"), "uppsök" );
	deepEqual( Stem("uppt"), "uppt" );
	deepEqual( Stem("upptackt"), "upptack" );
	deepEqual( Stem("upptaga"), "upptag" );
	deepEqual( Stem("upptagen"), "upptag" );
	deepEqual( Stem("upptages"), "upptag" );
	deepEqual( Stem("upptaget"), "upptaget" );
	deepEqual( Stem("upptagit"), "upptagit" );
	deepEqual( Stem("upptagits"), "upptagit" );
	deepEqual( Stem("upptagna"), "upptagn" );
	deepEqual( Stem("upptecknade"), "uppteckn" );
	deepEqual( Stem("upptecknat"), "uppteckn" );
	deepEqual( Stem("upptill"), "upptill" );
	deepEqual( Stem("upptog"), "upptog" );
	deepEqual( Stem("upptogo"), "upptogo" );
	deepEqual( Stem("upptogos"), "upptogo" );
	deepEqual( Stem("upptogs"), "upptog" );
	deepEqual( Stem("upptornade"), "upptorn" );
	deepEqual( Stem("uppträda"), "uppträd" );
	deepEqual( Stem("uppträdande"), "uppträd" );
	deepEqual( Stem("uppträdda"), "uppträd" );
	deepEqual( Stem("uppträdde"), "uppträd" );
	deepEqual( Stem("uppträde"), "uppträd" );
	deepEqual( Stem("uppträden"), "uppträd" );
	deepEqual( Stem("uppträder"), "uppträd" );
	deepEqual( Stem("uppträdet"), "uppträdet" );
	deepEqual( Stem("uppträtt"), "uppträt" );
	deepEqual( Stem("upptäcka"), "upptäck" );
	deepEqual( Stem("upptäckande"), "upptäck" );
	deepEqual( Stem("upptäckas"), "upptäck" );
	deepEqual( Stem("upptäcker"), "upptäck" );
	deepEqual( Stem("upptäcks"), "upptäck" );
	deepEqual( Stem("upptäckt"), "upptäck" );
	deepEqual( Stem("upptäckta"), "upptäck" );
	deepEqual( Stem("upptäckte"), "upptäck" );
	deepEqual( Stem("upptäckten"), "upptäck" );
	deepEqual( Stem("upptäckter"), "upptäck" );
	deepEqual( Stem("upptäcktsfärd"), "upptäcktsfärd" );
	deepEqual( Stem("upptänkligt"), "upptänk" );
	deepEqual( Stem("upptåckt"), "upptåck" );
	deepEqual( Stem("uppvakna"), "uppvakn" );
	deepEqual( Stem("uppvaknande"), "uppvakn" );
	deepEqual( Stem("uppvaknandet"), "uppvakn" );
	deepEqual( Stem("uppvakta"), "uppvak" );
	deepEqual( Stem("uppvaktad"), "uppvak" );
	deepEqual( Stem("uppvaktningsdräkt"), "uppvaktningsdräk" );
	deepEqual( Stem("uppvecklades"), "uppveckl" );
	deepEqual( Stem("uppvikt"), "uppvik" );
	deepEqual( Stem("uppvikta"), "uppvik" );
	deepEqual( Stem("uppvisa"), "uppvis" );
	deepEqual( Stem("uppväckt"), "uppväck" );
	deepEqual( Stem("uppväckte"), "uppväck" );
	deepEqual( Stem("uppväcktes"), "uppväck" );
	deepEqual( Stem("uppvägde"), "uppväg" );
	deepEqual( Stem("uppvärmd"), "uppvärmd" );
	deepEqual( Stem("uppvärmt"), "uppvärmt" );
	deepEqual( Stem("uppväxande"), "uppväx" );
	deepEqual( Stem("uppväxt"), "uppväxt" );
	deepEqual( Stem("uppväxtår"), "uppväxtår" );
	deepEqual( Stem("uppätna"), "uppätn" );
	deepEqual( Stem("uppå"), "uppå" );
	deepEqual( Stem("uppåt"), "uppåt" );
	deepEqual( Stem("uppåtvända"), "uppåtvänd" );
	deepEqual( Stem("ur"), "ur" );
	deepEqual( Stem("urarta"), "urart" );
	deepEqual( Stem("urblekt"), "urblek" );
	deepEqual( Stem("urblekta"), "urblek" );
	deepEqual( Stem("urblåst"), "urblåst" );
	deepEqual( Stem("urboetten"), "urboet" );
	deepEqual( Stem("uren"), "uren" );
	deepEqual( Stem("urens"), "uren" );
	deepEqual( Stem("urer"), "urer" );
	deepEqual( Stem("uret"), "uret" );
	deepEqual( Stem("urgamla"), "urgaml" );
	deepEqual( Stem("urgammal"), "urgammal" );
	deepEqual( Stem("urholka"), "urholk" );
	deepEqual( Stem("urladdade"), "urlad" );
	deepEqual( Stem("urmakarebaronen"), "urmakarebaron" );
	deepEqual( Stem("urmakaren"), "urmak" );
	deepEqual( Stem("urmakarens"), "urmak" );
	deepEqual( Stem("urmakartrall"), "urmakartrall" );
	deepEqual( Stem("urmakeriet"), "urmakeriet" );
	deepEqual( Stem("urmakeriprofessionen"), "urmakeriprofession" );
	deepEqual( Stem("urmodig"), "urmod" );
	deepEqual( Stem("urmodiga"), "urmod" );
	deepEqual( Stem("urmodigt"), "urmod" );
	deepEqual( Stem("urna"), "urn" );
	deepEqual( Stem("urringad"), "urring" );
	deepEqual( Stem("ursakta"), "ursak" );
	deepEqual( Stem("ursinne"), "ursin" );
	deepEqual( Stem("ursinnig"), "ursinn" );
	deepEqual( Stem("ursinniga"), "ursinn" );
	deepEqual( Stem("urskilde"), "urskild" );
	deepEqual( Stem("urskildes"), "urskild" );
	deepEqual( Stem("urskilja"), "urskilj" );
	deepEqual( Stem("urskiljas"), "urskilj" );
	deepEqual( Stem("urskiljbara"), "urskiljbar" );
	deepEqual( Stem("urskiljer"), "urskilj" );
	deepEqual( Stem("urskillning"), "urskillning" );
	deepEqual( Stem("urskilning"), "urskilning" );
	deepEqual( Stem("ursprungligcn"), "ursprungligcn" );
	deepEqual( Stem("ursprungligen"), "ursprung" );
	deepEqual( Stem("ursprungligt"), "ursprung" );
	deepEqual( Stem("ursäkt"), "ursäk" );
	deepEqual( Stem("ursäkta"), "ursäk" );
	deepEqual( Stem("ursäktade"), "ursäk" );
	deepEqual( Stem("ursäktar"), "ursäk" );
	deepEqual( Stem("ursäkten"), "ursäk" );
	deepEqual( Stem("ursäkter"), "ursäk" );
	deepEqual( Stem("urtavla"), "urtavl" );
	deepEqual( Stem("urtiden"), "urtid" );
	deepEqual( Stem("urtypen"), "urtyp" );
	deepEqual( Stem("urval"), "urval" );
	deepEqual( Stem("urverk"), "urverk" );
	deepEqual( Stem("uråldrig"), "uråldr" );
	deepEqual( Stem("uråldriga"), "uråldr" );
	deepEqual( Stem("usa"), "usa" );
	deepEqual( Stem("usel"), "usel" );
	deepEqual( Stem("uselhet"), "usel" );
	deepEqual( Stem("uselt"), "uselt" );
	deepEqual( Stem("usla"), "usl" );
	deepEqual( Stem("usling"), "usling" );
	deepEqual( Stem("uslingarna"), "usling" );
	deepEqual( Stem("uslingen"), "usling" );
	deepEqual( Stem("ut"), "ut" );
	deepEqual( Stem("utaf"), "utaf" );
	deepEqual( Stem("utan"), "utan" );
	deepEqual( Stem("utandades"), "utand" );
	deepEqual( Stem("utandas"), "utand" );
	deepEqual( Stem("utanf"), "utanf" );
	deepEqual( Stem("utanfflr"), "utanfflr" );
	deepEqual( Stem("utanför"), "utanför" );
	deepEqual( Stem("utanföre"), "utanför" );
	deepEqual( Stem("utanläxan"), "utanläxan" );
	deepEqual( Stem("utanskrifterna"), "utanskrift" );
	deepEqual( Stem("utantill"), "utantill" );
	deepEqual( Stem("utas"), "utas" );
	deepEqual( Stem("utav"), "utav" );
	deepEqual( Stem("utbe"), "utb" );
	deepEqual( Stem("utbedja"), "utbedj" );
	deepEqual( Stem("utbekomma"), "utbekomm" );
	deepEqual( Stem("utbilda"), "utbild" );
	deepEqual( Stem("utbildad"), "utbild" );
	deepEqual( Stem("utbildadt"), "utbildad" );
	deepEqual( Stem("utbildat"), "utbild" );
	deepEqual( Stem("utbjuden"), "utbjud" );
	deepEqual( Stem("utblottade"), "utblot" );
	deepEqual( Stem("utblottat"), "utblot" );
	deepEqual( Stem("utbrast"), "utbr" );
	deepEqual( Stem("utbredd"), "utbred" );
	deepEqual( Stem("utbredda"), "utbred" );
	deepEqual( Stem("utbredde"), "utbred" );
	deepEqual( Stem("utbrista"), "utbrist" );
	deepEqual( Stem("utbristande"), "utbrist" );
	deepEqual( Stem("utbrott"), "utbrot" );
	deepEqual( Stem("utbrotten"), "utbrot" );
	deepEqual( Stem("utbrunna"), "utbrun" );
	deepEqual( Stem("utbrunnen"), "utbrun" );
	deepEqual( Stem("utbryta"), "utbryt" );
	deepEqual( Stem("utbröt"), "utbröt" );
	deepEqual( Stem("utbygda"), "utbyg" );
	deepEqual( Stem("utbyggnaden"), "utbyggnad" );
	deepEqual( Stem("utbyta"), "utbyt" );
	deepEqual( Stem("utbyte"), "utbyt" );
	deepEqual( Stem("utbytt"), "utbyt" );
	deepEqual( Stem("utbytte"), "utbyt" );
	deepEqual( Stem("utbyttes"), "utbyt" );
	deepEqual( Stem("utdela"), "utdel" );
	deepEqual( Stem("utdelade"), "utdel" );
	deepEqual( Stem("utdelaren"), "utdel" );
	deepEqual( Stem("utdelning"), "utdelning" );
	deepEqual( Stem("utdet"), "utdet" );
	deepEqual( Stem("utdrag"), "utdrag" );
	deepEqual( Stem("utdraget"), "utdraget" );
	deepEqual( Stem("utdrog"), "utdrog" );
	deepEqual( Stem("utdunstningen"), "utdunstning" );
	deepEqual( Stem("utdöd"), "utdöd" );
	deepEqual( Stem("utdömd"), "utdömd" );
	deepEqual( Stem("ute"), "ute" );
	deepEqual( Stem("uteblef"), "uteblef" );
	deepEqual( Stem("uteblev"), "uteblev" );
	deepEqual( Stem("uteblifva"), "uteblifv" );
	deepEqual( Stem("uteblir"), "uteblir" );
	deepEqual( Stem("uteblivande"), "utebliv" );
	deepEqual( Stem("uteftcr"), "uteftcr" );
	deepEqual( Stem("utefter"), "uteft" );
	deepEqual( Stem("uteglömt"), "uteglömt" );
	deepEqual( Stem("utesluta"), "uteslut" );
	deepEqual( Stem("uteslutande"), "uteslut" );
	deepEqual( Stem("utestänga"), "utestäng" );
	deepEqual( Stem("utestängd"), "utestäng" );
	deepEqual( Stem("utexaminerad"), "utexaminer" );
	deepEqual( Stem("utfall"), "utfall" );
	deepEqual( Stem("utfaller"), "utfall" );
	deepEqual( Stem("utfarande"), "utfar" );
	deepEqual( Stem("utfart"), "utfart" );
	deepEqual( Stem("utfarten"), "utfart" );
	deepEqual( Stem("utfattig"), "utfatt" );
	deepEqual( Stem("utflugen"), "utflug" );
	deepEqual( Stem("utflykt"), "utflyk" );
	deepEqual( Stem("utflykter"), "utflyk" );
	deepEqual( Stem("utflyttad"), "utflyt" );
	deepEqual( Stem("utflyttade"), "utflyt" );
	deepEqual( Stem("utforska"), "utforsk" );
	deepEqual( Stem("utforskat"), "utforsk" );
	deepEqual( Stem("utfrågades"), "utfråg" );
	deepEqual( Stem("utfärd"), "utfärd" );
	deepEqual( Stem("utfärdad"), "utfärd" );
	deepEqual( Stem("utfärdade"), "utfärd" );
	deepEqual( Stem("utfäst"), "utfäst" );
	deepEqual( Stem("utför"), "utför" );
	deepEqual( Stem("utföra"), "utför" );
	deepEqual( Stem("utförandet"), "utför" );
	deepEqual( Stem("utföras"), "utför" );
	deepEqual( Stem("utförd"), "utförd" );
	deepEqual( Stem("utförda"), "utförd" );
	deepEqual( Stem("utförde"), "utförd" );
	deepEqual( Stem("utförligt"), "utför" );
	deepEqual( Stem("utförsel"), "utförsel" );
	deepEqual( Stem("utfört"), "utfört" );
	deepEqual( Stem("utgav"), "utgav" );
	deepEqual( Stem("utgett"), "utget" );
	deepEqual( Stem("utgick"), "utgick" );
	deepEqual( Stem("utgift"), "utgift" );
	deepEqual( Stem("utgifter"), "utgift" );
	deepEqual( Stem("utgifterna"), "utgift" );
	deepEqual( Stem("utgingo"), "utgingo" );
	deepEqual( Stem("utgivit"), "utgivit" );
	deepEqual( Stem("utgjorde"), "utgjord" );
	deepEqual( Stem("utgjordes"), "utgjord" );
	deepEqual( Stem("utgjort"), "utgjort" );
	deepEqual( Stem("utgjuta"), "utgjut" );
	deepEqual( Stem("utgjutelse"), "utgjut" );
	deepEqual( Stem("utgjutelser"), "utgjut" );
	deepEqual( Stem("utgjutit"), "utgjutit" );
	deepEqual( Stem("utgora"), "utgor" );
	deepEqual( Stem("utgrunda"), "utgrund" );
	deepEqual( Stem("utgående"), "utgåend" );
	deepEqual( Stem("utgång"), "utgång" );
	deepEqual( Stem("utgången"), "utgång" );
	deepEqual( Stem("utgångna"), "utgångn" );
	deepEqual( Stem("utgångspunkt"), "utgångspunk" );
	deepEqual( Stem("utgår"), "utgår" );
	deepEqual( Stem("utgåva"), "utgåv" );
	deepEqual( Stem("utgåvan"), "utgåvan" );
	deepEqual( Stem("utgör"), "utgör" );
	deepEqual( Stem("utgöra"), "utgör" );
	deepEqual( Stem("utgöt"), "utgöt" );
	deepEqual( Stem("uthärda"), "uthärd" );
	deepEqual( Stem("uthärdade"), "uthärd" );
	deepEqual( Stem("uthärdar"), "uthärd" );
	deepEqual( Stem("uthärdas"), "uthärd" );
	deepEqual( Stem("uthärdat"), "uthärd" );
	deepEqual( Stem("uthärdligt"), "uthärd" );
	deepEqual( Stem("uthållande"), "uthåll" );
	deepEqual( Stem("uti"), "uti" );
	deepEqual( Stem("utifrån"), "utifrån" );
	deepEqual( Stem("utkallade"), "utkall" );
	deepEqual( Stem("utkasta"), "utkast" );
	deepEqual( Stem("utkastad"), "utkast" );
	deepEqual( Stem("utkastade"), "utkast" );
	deepEqual( Stem("utkik"), "utkik" );
	deepEqual( Stem("utkiksögon"), "utkiksögon" );
	deepEqual( Stem("utkom"), "utkom" );
	deepEqual( Stem("utkämpad"), "utkämp" );
	deepEqual( Stem("utlagt"), "utlag" );
	deepEqual( Stem("utlandet"), "utl" );
	deepEqual( Stem("utledsen"), "utleds" );
	deepEqual( Stem("utlofvade"), "utlofv" );
	deepEqual( Stem("utlopp"), "utlopp" );
	deepEqual( Stem("utlovade"), "utlov" );
	deepEqual( Stem("utlupen"), "utlup" );
	deepEqual( Stem("utländska"), "utländsk" );
	deepEqual( Stem("utlänning"), "utlänning" );
	deepEqual( Stem("utlät"), "utlät" );
	deepEqual( Stem("utlåna"), "utlån" );
	deepEqual( Stem("utlånade"), "utlån" );
	deepEqual( Stem("utlånta"), "utlånt" );
	deepEqual( Stem("utlåtandet"), "utlåt" );
	deepEqual( Stem("utlåter"), "utlåt" );
	deepEqual( Stem("utlösning"), "utlösning" );
	deepEqual( Stem("utlöst"), "utlöst" );
	deepEqual( Stem("utmanande"), "utman" );
	deepEqual( Stem("utmark"), "utmark" );
	deepEqual( Stem("utmarscherande"), "utmarscher" );
	deepEqual( Stem("utmattad"), "utmat" );
	deepEqual( Stem("utmed"), "utmed" );
	deepEqual( Stem("utminutera"), "utminuter" );
	deepEqual( Stem("utminuterades"), "utminuter" );
	deepEqual( Stem("utmärglade"), "utmärgl" );
	deepEqual( Stem("utmärka"), "utmärk" );
	deepEqual( Stem("utmärkelse"), "utmärk" );
	deepEqual( Stem("utmärker"), "utmärk" );
	deepEqual( Stem("utmärkt"), "utmärk" );
	deepEqual( Stem("utmärkta"), "utmärk" );
	deepEqual( Stem("utmärkte"), "utmärk" );
	deepEqual( Stem("utmätas"), "utmät" );
	deepEqual( Stem("utnyttjar"), "utnyttj" );
	deepEqual( Stem("utnämdes"), "utnämd" );
	deepEqual( Stem("utnämnd"), "utnämnd" );
	deepEqual( Stem("utnämner"), "utnämn" );
	deepEqual( Stem("utnött"), "utnöt" );
	deepEqual( Stem("utom"), "utom" );
	deepEqual( Stem("utomdess"), "utomdess" );
	deepEqual( Stem("utomhus"), "utomhus" );
	deepEqual( Stem("utomordentlig"), "utomordent" );
	deepEqual( Stem("utomordentliga"), "utomordent" );
	deepEqual( Stem("utomordentligt"), "utomordent" );
	deepEqual( Stem("utomstående"), "utomståend" );
	deepEqual( Stem("utpeka"), "utpek" );
	deepEqual( Stem("utpekad"), "utpek" );
	deepEqual( Stem("utpekat"), "utpek" );
	deepEqual( Stem("utpinad"), "utpin" );
	deepEqual( Stem("utplåna"), "utplån" );
	deepEqual( Stem("utplånade"), "utplån" );
	deepEqual( Stem("utplånar"), "utplån" );
	deepEqual( Stem("utplånas"), "utplån" );
	deepEqual( Stem("utplånat"), "utplån" );
	deepEqual( Stem("utpresserska"), "utpressersk" );
	deepEqual( Stem("utreda"), "utred" );
	deepEqual( Stem("utrikes"), "utrik" );
	deepEqual( Stem("utrikesminister"), "utrikesminist" );
	deepEqual( Stem("utrop"), "utrop" );
	deepEqual( Stem("utropa"), "utrop" );
	deepEqual( Stem("utropade"), "utrop" );
	deepEqual( Stem("utropet"), "utropet" );
	deepEqual( Stem("utropstecken"), "utropsteck" );
	deepEqual( Stem("utrusande"), "utrus" );
	deepEqual( Stem("utrustad"), "utrust" );
	deepEqual( Stem("utrustat"), "utrust" );
	deepEqual( Stem("utrycka"), "utryck" );
	deepEqual( Stem("utrymda"), "utrymd" );
	deepEqual( Stem("utrymme"), "utrymm" );
	deepEqual( Stem("utrymmet"), "utrymmet" );
	deepEqual( Stem("uträknad"), "uträkn" );
	deepEqual( Stem("uträknade"), "uträkn" );
	deepEqual( Stem("uträknat"), "uträkn" );
	deepEqual( Stem("uträkning"), "uträkning" );
	deepEqual( Stem("uträkningar"), "uträkning" );
	deepEqual( Stem("uträtta"), "uträt" );
	deepEqual( Stem("uträttade"), "uträt" );
	deepEqual( Stem("uträttat"), "uträt" );
	deepEqual( Stem("utrökt"), "utrök" );
	deepEqual( Stem("utröna"), "utrön" );
	deepEqual( Stem("utrönt"), "utrönt" );
	deepEqual( Stem("utsago"), "utsago" );
	deepEqual( Stem("utsagt"), "utsag" );
	deepEqual( Stem("utsatt"), "utsat" );
	deepEqual( Stem("utsatta"), "utsat" );
	deepEqual( Stem("utscende"), "utscend" );
	deepEqual( Stem("utsedd"), "utsed" );
	deepEqual( Stem("utsedda"), "utsed" );
	deepEqual( Stem("utseende"), "utseend" );
	deepEqual( Stem("utseendet"), "utseendet" );
	deepEqual( Stem("utseendets"), "utseendet" );
	deepEqual( Stem("utsigt"), "uts" );
	deepEqual( Stem("utsigten"), "uts" );
	deepEqual( Stem("utsigter"), "uts" );
	deepEqual( Stem("utsikt"), "utsik" );
	deepEqual( Stem("utsikten"), "utsik" );
	deepEqual( Stem("utsikter"), "utsik" );
	deepEqual( Stem("utsikterna"), "utsik" );
	deepEqual( Stem("utsiktsplats"), "utsiktsplat" );
	deepEqual( Stem("utsirad"), "utsir" );
	deepEqual( Stem("utsirade"), "utsir" );
	deepEqual( Stem("utsirat"), "utsir" );
	deepEqual( Stem("utskickad"), "utskick" );
	deepEqual( Stem("utskjutande"), "utskjut" );
	deepEqual( Stem("utskratta"), "utskrat" );
	deepEqual( Stem("utskrattad"), "utskrat" );
	deepEqual( Stem("utskriken"), "utskrik" );
	deepEqual( Stem("utskyndande"), "utskynd" );
	deepEqual( Stem("utskämmas"), "utskämm" );
	deepEqual( Stem("utslag"), "utslag" );
	deepEqual( Stem("utslagen"), "utslag" );
	deepEqual( Stem("utslaget"), "utslaget" );
	deepEqual( Stem("utslagna"), "utslagn" );
	deepEqual( Stem("utsliten"), "utslit" );
	deepEqual( Stem("utslitet"), "utslitet" );
	deepEqual( Stem("utslitna"), "utslitn" );
	deepEqual( Stem("utslockna"), "utslockn" );
	deepEqual( Stem("utsläckt"), "utsläck" );
	deepEqual( Stem("utslätat"), "utslät" );
	deepEqual( Stem("utslår"), "utslår" );
	deepEqual( Stem("utspana"), "utspan" );
	deepEqual( Stem("utspanat"), "utspan" );
	deepEqual( Stem("utsparkad"), "utspark" );
	deepEqual( Stem("utspelats"), "utspelat" );
	deepEqual( Stem("utspridt"), "utsprid" );
	deepEqual( Stem("utspringande"), "utspring" );
	deepEqual( Stem("utspritt"), "utsprit" );
	deepEqual( Stem("utspunnen"), "utspun" );
	deepEqual( Stem("utspända"), "utspänd" );
	deepEqual( Stem("utspärrade"), "utspärr" );
	deepEqual( Stem("utspökade"), "utspök" );
	deepEqual( Stem("utstaende"), "utstaend" );
	deepEqual( Stem("utstickande"), "utstick" );
	deepEqual( Stem("utstod"), "utstod" );
	deepEqual( Stem("utsträckas"), "utsträck" );
	deepEqual( Stem("utsträckt"), "utsträck" );
	deepEqual( Stem("utsträckta"), "utsträck" );
	deepEqual( Stem("utsträckte"), "utsträck" );
	deepEqual( Stem("utstråladc"), "utstråladc" );
	deepEqual( Stem("utstrålade"), "utstrål" );
	deepEqual( Stem("utströddes"), "utströd" );
	deepEqual( Stem("utströmmar"), "utströmm" );
	deepEqual( Stem("utströmmat"), "utströmm" );
	deepEqual( Stem("utstuckit"), "utstuckit" );
	deepEqual( Stem("utstyrd"), "utstyrd" );
	deepEqual( Stem("utstyrda"), "utstyrd" );
	deepEqual( Stem("utstyrt"), "utstyrt" );
	deepEqual( Stem("utställd"), "utställd" );
	deepEqual( Stem("utstående"), "utståend" );
	deepEqual( Stem("utståndna"), "utståndn" );
	deepEqual( Stem("utstått"), "utståt" );
	deepEqual( Stem("utstött"), "utstöt" );
	deepEqual( Stem("utstötta"), "utstöt" );
	deepEqual( Stem("utstöttes"), "utstöt" );
	deepEqual( Stem("utsvulten"), "utsvult" );
	deepEqual( Stem("utsvält"), "utsvält" );
	deepEqual( Stem("utsvävande"), "utsväv" );
	deepEqual( Stem("utsäde"), "utsäd" );
	deepEqual( Stem("utsäga"), "utsäg" );
	deepEqual( Stem("utsätta"), "utsät" );
	deepEqual( Stem("utsått"), "utsåt" );
	deepEqual( Stem("utsökt"), "utsök" );
	deepEqual( Stem("utsökta"), "utsök" );
	deepEqual( Stem("uttaga"), "uttag" );
	deepEqual( Stem("uttages"), "uttag" );
	deepEqual( Stem("uttagna"), "uttagn" );
	deepEqual( Stem("uttal"), "uttal" );
	deepEqual( Stem("uttala"), "uttal" );
	deepEqual( Stem("uttalade"), "uttal" );
	deepEqual( Stem("uttalades"), "uttal" );
	deepEqual( Stem("uttalandet"), "uttal" );
	deepEqual( Stem("uttalar"), "uttal" );
	deepEqual( Stem("uttalas"), "uttal" );
	deepEqual( Stem("uttalat"), "uttal" );
	deepEqual( Stem("uttalet"), "uttalet" );
	deepEqual( Stem("uttog"), "uttog" );
	deepEqual( Stem("uttorkade"), "uttork" );
	deepEqual( Stem("uttorkat"), "uttork" );
	deepEqual( Stem("uttryck"), "uttryck" );
	deepEqual( Stem("uttrycka"), "uttryck" );
	deepEqual( Stem("uttrycker"), "uttryck" );
	deepEqual( Stem("uttrycket"), "uttrycket" );
	deepEqual( Stem("uttryckligen"), "uttryck" );
	deepEqual( Stem("uttrycksfull"), "uttrycksfull" );
	deepEqual( Stem("uttrycksfulla"), "uttrycksfull" );
	deepEqual( Stem("uttrycksfullare"), "uttrycksfull" );
	deepEqual( Stem("uttrycksfullt"), "uttrycksfull" );
	deepEqual( Stem("uttrycksfylla"), "uttrycksfyll" );
	deepEqual( Stem("uttryckssätt"), "uttryckssät" );
	deepEqual( Stem("uttryckt"), "uttryck" );
	deepEqual( Stem("uttryckte"), "uttryck" );
	deepEqual( Stem("uttrötta"), "uttröt" );
	deepEqual( Stem("uttröttad"), "uttröt" );
	deepEqual( Stem("uttyda"), "uttyd" );
	deepEqual( Stem("uttydas"), "uttyd" );
	deepEqual( Stem("uttämt"), "uttämt" );
	deepEqual( Stem("uttänjda"), "uttänjd" );
	deepEqual( Stem("uttänka"), "uttänk" );
	deepEqual( Stem("uttänkt"), "uttänk" );
	deepEqual( Stem("uttömda"), "uttömd" );
	deepEqual( Stem("uttömt"), "uttömt" );
	deepEqual( Stem("utur"), "utur" );
	deepEqual( Stem("utvald"), "utvald" );
	deepEqual( Stem("utvalda"), "utvald" );
	deepEqual( Stem("utvandring"), "utvandring" );
	deepEqual( Stem("utvandringar"), "utvandring" );
	deepEqual( Stem("utvandringarna"), "utvandring" );
	deepEqual( Stem("utveckla"), "utveckl" );
	deepEqual( Stem("utvecklad"), "utveckl" );
	deepEqual( Stem("utvecklade"), "utveckl" );
	deepEqual( Stem("utvecklades"), "utveckl" );
	deepEqual( Stem("utvecklar"), "utveckl" );
	deepEqual( Stem("utvecklat"), "utveckl" );
	deepEqual( Stem("utvecklingen"), "utveckling" );
	deepEqual( Stem("utverka"), "utverk" );
	deepEqual( Stem("utvidga"), "utvidg" );
	deepEqual( Stem("utvidgas"), "utvidg" );
	deepEqual( Stem("utvidgningar"), "utvidgning" );
	deepEqual( Stem("utvisade"), "utvis" );
	deepEqual( Stem("utvisar"), "utvis" );
	deepEqual( Stem("utväg"), "utväg" );
	deepEqual( Stem("utvägar"), "utväg" );
	deepEqual( Stem("utvägen"), "utväg" );
	deepEqual( Stem("utvälja"), "utvälj" );
	deepEqual( Stem("utvända"), "utvänd" );
	deepEqual( Stem("utvärdshus"), "utvärdshus" );
	deepEqual( Stem("utvärdshusen"), "utvärdshus" );
	deepEqual( Stem("utvärtes"), "utvärt" );
	deepEqual( Stem("utäcklat"), "utäckl" );
	deepEqual( Stem("utåt"), "utåt" );
	deepEqual( Stem("utöfva"), "utöfv" );
	deepEqual( Stem("utöfvade"), "utöfv" );
	deepEqual( Stem("utöfvandet"), "utöfv" );
	deepEqual( Stem("utöfvat"), "utöfv" );
	deepEqual( Stem("utöfver"), "utöfv" );
	deepEqual( Stem("utöva"), "utöv" );
	deepEqual( Stem("utövade"), "utöv" );
	deepEqual( Stem("utövar"), "utöv" );
	deepEqual( Stem("utövat"), "utöv" );
	deepEqual( Stem("utöver"), "utöv" );
	deepEqual( Stem("v"), "v" );
	deepEqual( Stem("va"), "va" );
	deepEqual( Stem("vackar"), "vack" );
	deepEqual( Stem("vacker"), "vack" );
	deepEqual( Stem("vackert"), "vackert" );
	deepEqual( Stem("vackla"), "vackl" );
	deepEqual( Stem("vacklade"), "vackl" );
	deepEqual( Stem("vacklande"), "vackl" );
	deepEqual( Stem("vacklar"), "vackl" );
	deepEqual( Stem("vackra"), "vackr" );
	deepEqual( Stem("vackrare"), "vackr" );
	deepEqual( Stem("vackrast"), "vackr" );
	deepEqual( Stem("vackraste"), "vackr" );
	deepEqual( Stem("vackre"), "vackr" );
	deepEqual( Stem("vad"), "vad" );
	deepEqual( Stem("vadade"), "vad" );
	deepEqual( Stem("vadan"), "vadan" );
	deepEqual( Stem("vadar"), "vad" );
	deepEqual( Stem("vadat"), "vad" );
	deepEqual( Stem("vade"), "vad" );
	deepEqual( Stem("vaden"), "vad" );
	deepEqual( Stem("vaderetrosalva"), "vaderetrosalv" );
	deepEqual( Stem("vaderna"), "vad" );
	deepEqual( Stem("vadis"), "vadis" );
	deepEqual( Stem("vadmal"), "vadmal" );
	deepEqual( Stem("vadmals"), "vadmal" );
	deepEqual( Stem("vadmalsöverdrag"), "vadmalsöverdrag" );
	deepEqual( Stem("vador"), "vad" );
	deepEqual( Stem("vadstenaliljan"), "vadstenaliljan" );
	deepEqual( Stem("vadstenaätt"), "vadstenaät" );
	deepEqual( Stem("vaff"), "vaff" );
	deepEqual( Stem("vag"), "vag" );
	deepEqual( Stem("vagade"), "vag" );
	deepEqual( Stem("vagant"), "vagant" );
	deepEqual( Stem("vagarna"), "vag" );
	deepEqual( Stem("vagat"), "vag" );
	deepEqual( Stem("vagen"), "vag" );
	deepEqual( Stem("vagga"), "vagg" );
	deepEqual( Stem("vaggade"), "vagg" );
	deepEqual( Stem("vaggamde"), "vaggamd" );
	deepEqual( Stem("vaggan"), "vaggan" );
	deepEqual( Stem("vaggande"), "vagg" );
	deepEqual( Stem("vaggar"), "vagg" );
	deepEqual( Stem("vaggarna"), "vagg" );
	deepEqual( Stem("vaggat"), "vagg" );
	deepEqual( Stem("vaggen"), "vagg" );
	deepEqual( Stem("vaggfast"), "vaggf" );
	deepEqual( Stem("vagn"), "vagn" );
	deepEqual( Stem("vagnar"), "vagn" );
	deepEqual( Stem("vagnarna"), "vagn" );
	deepEqual( Stem("vagnen"), "vagn" );
	deepEqual( Stem("vagnshjul"), "vagnshjul" );
	deepEqual( Stem("vagor"), "vag" );
	deepEqual( Stem("vagorna"), "vag" );
	deepEqual( Stem("vagskål"), "vagskål" );
	deepEqual( Stem("vaja"), "vaj" );
	deepEqual( Stem("vajade"), "vaj" );
	deepEqual( Stem("vajande"), "vaj" );
	deepEqual( Stem("vajar"), "vaj" );
	deepEqual( Stem("vaka"), "vak" );
	deepEqual( Stem("vakade"), "vak" );
	deepEqual( Stem("vakan"), "vakan" );
	deepEqual( Stem("vakandet"), "vak" );
	deepEqual( Stem("vakar"), "vak" );
	deepEqual( Stem("vakas"), "vak" );
	deepEqual( Stem("vakat"), "vak" );
	deepEqual( Stem("vaken"), "vak" );
	deepEqual( Stem("vaket"), "vaket" );
	deepEqual( Stem("vakllen"), "vakll" );
	deepEqual( Stem("vakna"), "vakn" );
	deepEqual( Stem("vaknade"), "vakn" );
	deepEqual( Stem("vaknar"), "vakn" );
	deepEqual( Stem("vaknat"), "vakn" );
	deepEqual( Stem("vakne"), "vakn" );
	deepEqual( Stem("vaksamhet"), "vaksam" );
	deepEqual( Stem("vaksamma"), "vaksamm" );
	deepEqual( Stem("vaksamme"), "vaksamm" );
	deepEqual( Stem("vaksamt"), "vaksamt" );
	deepEqual( Stem("vakt"), "vakt" );
	deepEqual( Stem("vakta"), "vakt" );
	deepEqual( Stem("vaktande"), "vakt" );
	deepEqual( Stem("vaktar"), "vakt" );
	deepEqual( Stem("vaktare"), "vakt" );
	deepEqual( Stem("vaktarinna"), "vaktarin" );
	deepEqual( Stem("vaktarinnan"), "vaktarinnan" );
	deepEqual( Stem("vaktas"), "vakt" );
	deepEqual( Stem("vaktel"), "vaktel" );
	deepEqual( Stem("vakten"), "vakt" );
	deepEqual( Stem("vakter"), "vakt" );
	deepEqual( Stem("vaktmästare"), "vaktmäst" );
	deepEqual( Stem("vaktmästaren"), "vaktmäst" );
	deepEqual( Stem("vaktmästarn"), "vaktmästarn" );
	deepEqual( Stem("vaktparad"), "vaktpar" );
	deepEqual( Stem("vaktpatrull"), "vaktpatrull" );
	deepEqual( Stem("val"), "val" );
	deepEqual( Stem("valbekanta"), "valbekant" );
	deepEqual( Stem("valborg"), "valborg" );
	deepEqual( Stem("valborgselden"), "valborgseld" );
	deepEqual( Stem("vald"), "vald" );
	deepEqual( Stem("valda"), "vald" );
	deepEqual( Stem("valdaste"), "vald" );
	deepEqual( Stem("valde"), "vald" );
	deepEqual( Stem("valdsamt"), "valdsamt" );
	deepEqual( Stem("valdt"), "vald" );
	deepEqual( Stem("valerius"), "valerius" );
	deepEqual( Stem("valet"), "valet" );
	deepEqual( Stem("valhänt"), "valhänt" );
	deepEqual( Stem("valkar"), "valk" );
	deepEqual( Stem("vall"), "vall" );
	deepEqual( Stem("vallack"), "vallack" );
	deepEqual( Stem("vallar"), "vall" );
	deepEqual( Stem("vallerskans"), "vallerskan" );
	deepEqual( Stem("vallgossen"), "vallgoss" );
	deepEqual( Stem("vallmo"), "vallmo" );
	deepEqual( Stem("vallmoklanning"), "vallmoklanning" );
	deepEqual( Stem("vallmorött"), "vallmoröt" );
	deepEqual( Stem("valmöten"), "valmöt" );
	deepEqual( Stem("valnöt"), "valnöt" );
	deepEqual( Stem("valnötskåp"), "valnötskåp" );
	deepEqual( Stem("valp"), "valp" );
	deepEqual( Stem("valpar"), "valp" );
	deepEqual( Stem("valplatsen"), "valplats" );
	deepEqual( Stem("vals"), "val" );
	deepEqual( Stem("valt"), "valt" );
	deepEqual( Stem("valthorn"), "valthorn" );
	deepEqual( Stem("valthornet"), "valthornet" );
	deepEqual( Stem("valurnan"), "valurnan" );
	deepEqual( Stem("valuta"), "valut" );
	deepEqual( Stem("valv"), "valv" );
	deepEqual( Stem("valven"), "valv" );
	deepEqual( Stem("valvsegel"), "valvsegel" );
	deepEqual( Stem("van"), "van" );
	deepEqual( Stem("vana"), "van" );
	deepEqual( Stem("vanan"), "vanan" );
	deepEqual( Stem("vanartig"), "vanart" );
	deepEqual( Stem("vand"), "vand" );
	deepEqual( Stem("vanda"), "vand" );
	deepEqual( Stem("vande"), "vand" );
	deepEqual( Stem("vandel"), "vandel" );
	deepEqual( Stem("vandla"), "vandl" );
	deepEqual( Stem("vandra"), "vandr" );
	deepEqual( Stem("vandrade"), "vandr" );
	deepEqual( Stem("vandrande"), "vandr" );
	deepEqual( Stem("vandrar"), "vandr" );
	deepEqual( Stem("vandrare"), "vandr" );
	deepEqual( Stem("vandrarn"), "vandrarn" );
	deepEqual( Stem("vandrat"), "vandr" );
	deepEqual( Stem("vandring"), "vandring" );
	deepEqual( Stem("vandringar"), "vandring" );
	deepEqual( Stem("vandringarne"), "vandring" );
	deepEqual( Stem("vandringen"), "vandring" );
	deepEqual( Stem("vandringsmannen"), "vandringsman" );
	deepEqual( Stem("vandringsmän"), "vandringsmän" );
	deepEqual( Stem("vandringsstaven"), "vandringsstav" );
	deepEqual( Stem("vane"), "van" );
	deepEqual( Stem("vanför"), "vanför" );
	deepEqual( Stem("vanhederligt"), "vanheder" );
	deepEqual( Stem("vaningen"), "vaning" );
	deepEqual( Stem("vanka"), "vank" );
	deepEqual( Stem("vankade"), "vank" );
	deepEqual( Stem("vankades"), "vank" );
	deepEqual( Stem("vankas"), "vank" );
	deepEqual( Stem("vankelmod"), "vankelmod" );
	deepEqual( Stem("vankfri"), "vankfri" );
	deepEqual( Stem("vanlig"), "van" );
	deepEqual( Stem("vanliga"), "van" );
	deepEqual( Stem("vanlige"), "van" );
	deepEqual( Stem("vanligen"), "van" );
	deepEqual( Stem("vanligt"), "van" );
	deepEqual( Stem("vanligtvis"), "vanligtvis" );
	deepEqual( Stem("vann"), "vann" );
	deepEqual( Stem("vanor"), "van" );
	deepEqual( Stem("vans"), "van" );
	deepEqual( Stem("vansinne"), "vansin" );
	deepEqual( Stem("vansinnig"), "vansinn" );
	deepEqual( Stem("vansinniga"), "vansinn" );
	deepEqual( Stem("vansinnige"), "vansinn" );
	deepEqual( Stem("vansinnigt"), "vansinn" );
	deepEqual( Stem("vansinning"), "vansinning" );
	deepEqual( Stem("vanskapligt"), "vanskap" );
	deepEqual( Stem("vanskapt"), "vanskapt" );
	deepEqual( Stem("vanskapte"), "vanskapt" );
	deepEqual( Stem("vansklig"), "vansk" );
	deepEqual( Stem("vanskliga"), "vansk" );
	deepEqual( Stem("vanslägtas"), "vansläg" );
	deepEqual( Stem("vanstälde"), "vanstäld" );
	deepEqual( Stem("vanställa"), "vanställ" );
	deepEqual( Stem("vanställd"), "vanställd" );
	deepEqual( Stem("vanställda"), "vanställd" );
	deepEqual( Stem("vant"), "vant" );
	deepEqual( Stem("vanta"), "vant" );
	deepEqual( Stem("vantade"), "vant" );
	deepEqual( Stem("vantarne"), "vant" );
	deepEqual( Stem("vanvett"), "vanvet" );
	deepEqual( Stem("vanvettig"), "vanvett" );
	deepEqual( Stem("vanvettigt"), "vanvett" );
	deepEqual( Stem("vanvördigt"), "vanvörd" );
	deepEqual( Stem("vanärans"), "vanäran" );
	deepEqual( Stem("vanäras"), "vanär" );
	deepEqual( Stem("vapen"), "vap" );
	deepEqual( Stem("vapnen"), "vapn" );
	deepEqual( Stem("var"), "var" );
	deepEqual( Stem("vara"), "var" );
	deepEqual( Stem("varade"), "var" );
	deepEqual( Stem("varaktiga"), "varakt" );
	deepEqual( Stem("varaktighet"), "varakt" );
	deepEqual( Stem("varan"), "varan" );
	deepEqual( Stem("varande"), "var" );
	deepEqual( Stem("varandr"), "varandr" );
	deepEqual( Stem("varandra"), "varandr" );
	deepEqual( Stem("varandras"), "varandr" );
	deepEqual( Stem("varann"), "varan" );
	deepEqual( Stem("varar"), "var" );
	deepEqual( Stem("varardra"), "varardr" );
	deepEqual( Stem("varas"), "var" );
	deepEqual( Stem("varat"), "var" );
	deepEqual( Stem("varav"), "varav" );
	deepEqual( Stem("varda"), "vard" );
	deepEqual( Stem("vardagarna"), "vardag" );
	deepEqual( Stem("vardagen"), "vardag" );
	deepEqual( Stem("vardagens"), "vardag" );
	deepEqual( Stem("vardaglig"), "vardag" );
	deepEqual( Stem("vardagliga"), "vardag" );
	deepEqual( Stem("vardagligt"), "vardag" );
	deepEqual( Stem("vardags"), "vardag" );
	deepEqual( Stem("vardagsklänning"), "vardagsklänning" );
	deepEqual( Stem("vardagslag"), "vardagslag" );
	deepEqual( Stem("vardagsliv"), "vardagsliv" );
	deepEqual( Stem("vardagsmuntert"), "vardagsmuntert" );
	deepEqual( Stem("vardagsrum"), "vardagsrum" );
	deepEqual( Stem("vardagsrummet"), "vardagsrummet" );
	deepEqual( Stem("vardagssaker"), "vardagssak" );
	deepEqual( Stem("vardagsskjortan"), "vardagsskjortan" );
	deepEqual( Stem("varde"), "vard" );
	deepEqual( Stem("varden"), "vard" );
	deepEqual( Stem("vardera"), "varder" );
	deepEqual( Stem("vardetmöjligt"), "vardetmöj" );
	deepEqual( Stem("vare"), "var" );
	deepEqual( Stem("varefter"), "vareft" );
	deepEqual( Stem("varelse"), "var" );
	deepEqual( Stem("varelsedrift"), "varelsedrift" );
	deepEqual( Stem("varelsen"), "var" );
	deepEqual( Stem("varelsens"), "var" );
	deepEqual( Stem("varelser"), "var" );
	deepEqual( Stem("varelserna"), "var" );
	deepEqual( Stem("varelsernas"), "var" );
	deepEqual( Stem("varemot"), "varemot" );
	deepEqual( Stem("varen"), "var" );
	deepEqual( Stem("varenda"), "varend" );
	deepEqual( Stem("varer"), "var" );
	deepEqual( Stem("varest"), "varest" );
	deepEqual( Stem("varf"), "varf" );
	deepEqual( Stem("varfor"), "varf" );
	deepEqual( Stem("varför"), "varför" );
	deepEqual( Stem("vari"), "vari" );
	deepEqual( Stem("variant"), "variant" );
	deepEqual( Stem("varibland"), "varibland" );
	deepEqual( Stem("variden"), "varid" );
	deepEqual( Stem("varie"), "vari" );
	deepEqual( Stem("varierade"), "varier" );
	deepEqual( Stem("varifran"), "varifran" );
	deepEqual( Stem("varifrån"), "varifrån" );
	deepEqual( Stem("varigenom"), "varigenom" );
	deepEqual( Stem("varit"), "varit" );
	deepEqual( Stem("varje"), "varj" );
	deepEqual( Stem("varjehanda"), "varjehand" );
	deepEqual( Stem("vark"), "vark" );
	deepEqual( Stem("varken"), "vark" );
	deepEqual( Stem("varkeo"), "varkeo" );
	deepEqual( Stem("varld"), "varld" );
	deepEqual( Stem("varldar"), "varld" );
	deepEqual( Stem("varligt"), "var" );
	deepEqual( Stem("varm"), "varm" );
	deepEqual( Stem("varma"), "varm" );
	deepEqual( Stem("varmare"), "varm" );
	deepEqual( Stem("varmaste"), "varm" );
	deepEqual( Stem("varmed"), "varmed" );
	deepEqual( Stem("varmt"), "varmt" );
	deepEqual( Stem("varna"), "varn" );
	deepEqual( Stem("varnagel"), "varnagel" );
	deepEqual( Stem("varnar"), "varn" );
	deepEqual( Stem("varnat"), "varn" );
	deepEqual( Stem("varning"), "varning" );
	deepEqual( Stem("varningar"), "varning" );
	deepEqual( Stem("varningen"), "varning" );
	deepEqual( Stem("varom"), "varom" );
	deepEqual( Stem("varor"), "var" );
	deepEqual( Stem("varorna"), "var" );
	deepEqual( Stem("varpå"), "varpå" );
	deepEqual( Stem("vars"), "var" );
	deepEqual( Stem("varsam"), "varsam" );
	deepEqual( Stem("varsamma"), "varsamm" );
	deepEqual( Stem("varsamt"), "varsamt" );
	deepEqual( Stem("varse"), "vars" );
	deepEqual( Stem("varseblef"), "varseblef" );
	deepEqual( Stem("varseblefvo"), "varseblefvo" );
	deepEqual( Stem("varseblev"), "varseblev" );
	deepEqual( Stem("varsebli"), "varsebli" );
	deepEqual( Stem("varseblir"), "varseblir" );
	deepEqual( Stem("varseblivit"), "varseblivit" );
	deepEqual( Stem("varsel"), "varsel" );
	deepEqual( Stem("varsnade"), "varsn" );
	deepEqual( Stem("varsnat"), "varsn" );
	deepEqual( Stem("vart"), "vart" );
	deepEqual( Stem("vartannat"), "vartan" );
	deepEqual( Stem("vartdera"), "vartder" );
	deepEqual( Stem("vartenda"), "vartend" );
	deepEqual( Stem("varthän"), "varthän" );
	deepEqual( Stem("vartill"), "vartill" );
	deepEqual( Stem("varulager"), "varulag" );
	deepEqual( Stem("varunder"), "varund" );
	deepEqual( Stem("varuti"), "varuti" );
	deepEqual( Stem("varv"), "varv" );
	deepEqual( Stem("varvid"), "varvid" );
	deepEqual( Stem("vas"), "vas" );
	deepEqual( Stem("vasabron"), "vasabron" );
	deepEqual( Stem("vasaprinsens"), "vasaprins" );
	deepEqual( Stem("vasar"), "vas" );
	deepEqual( Stem("vasasvenskt"), "vasasvensk" );
	deepEqual( Stem("vasen"), "vas" );
	deepEqual( Stem("vasenla"), "vasenl" );
	deepEqual( Stem("vaser"), "vas" );
	deepEqual( Stem("vaserna"), "vas" );
	deepEqual( Stem("vasken"), "vask" );
	deepEqual( Stem("vass"), "vass" );
	deepEqual( Stem("vassa"), "vass" );
	deepEqual( Stem("vassen"), "vass" );
	deepEqual( Stem("vassrör"), "vassrör" );
	deepEqual( Stem("vasst"), "vasst" );
	deepEqual( Stem("vatt"), "vatt" );
	deepEqual( Stem("vatten"), "vatt" );
	deepEqual( Stem("vattenbutiken"), "vattenbutik" );
	deepEqual( Stem("vattendroppar"), "vattendropp" );
	deepEqual( Stem("vattenglas"), "vattengl" );
	deepEqual( Stem("vattenglaset"), "vattenglaset" );
	deepEqual( Stem("vattenhink"), "vattenhink" );
	deepEqual( Stem("vattenkamla"), "vattenkaml" );
	deepEqual( Stem("vattenkannan"), "vattenkannan" );
	deepEqual( Stem("vattenkaraffin"), "vattenkaraffin" );
	deepEqual( Stem("vattenkaraffinen"), "vattenkaraffin" );
	deepEqual( Stem("vattenledning"), "vattenledning" );
	deepEqual( Stem("vattensoppa"), "vattensopp" );
	deepEqual( Stem("vattentunna"), "vattentun" );
	deepEqual( Stem("vattentäta"), "vattentät" );
	deepEqual( Stem("vattenyta"), "vattenyt" );
	deepEqual( Stem("vattenytan"), "vattenytan" );
	deepEqual( Stem("vattna"), "vattn" );
	deepEqual( Stem("vattnade"), "vattn" );
	deepEqual( Stem("vattnar"), "vattn" );
	deepEqual( Stem("vattnas"), "vattn" );
	deepEqual( Stem("vattnat"), "vattn" );
	deepEqual( Stem("vattnen"), "vattn" );
	deepEqual( Stem("vattnet"), "vattnet" );
	deepEqual( Stem("vattnets"), "vattnet" );
	deepEqual( Stem("vattniga"), "vattn" );
	deepEqual( Stem("vattningen"), "vattning" );
	deepEqual( Stem("vattrad"), "vattr" );
	deepEqual( Stem("vaxade"), "vax" );
	deepEqual( Stem("vaxdocka"), "vaxdock" );
	deepEqual( Stem("vaxduken"), "vaxduk" );
	deepEqual( Stem("vaxgult"), "vaxgult" );
	deepEqual( Stem("vaxte"), "vaxt" );
	deepEqual( Stem("vcck"), "vcck" );
	deepEqual( Stem("vcttig"), "vcttig" );
	deepEqual( Stem("vd"), "vd" );
	deepEqual( Stem("vdelse"), "vdels" );
	deepEqual( Stem("ve"), "ve" );
	deepEqual( Stem("veck"), "veck" );
	deepEqual( Stem("vecka"), "veck" );
	deepEqual( Stem("veckade"), "veck" );
	deepEqual( Stem("veckan"), "veckan" );
	deepEqual( Stem("veckas"), "veck" );
	deepEqual( Stem("vecken"), "veck" );
	deepEqual( Stem("vecklade"), "veckl" );
	deepEqual( Stem("vecklas"), "veckl" );
	deepEqual( Stem("vecklat"), "veckl" );
	deepEqual( Stem("vecko"), "vecko" );
	deepEqual( Stem("veckodagarna"), "veckodag" );
	deepEqual( Stem("veckor"), "veck" );
	deepEqual( Stem("veckorna"), "veck" );
	deepEqual( Stem("veckors"), "veckor" );
	deepEqual( Stem("veckoräfst"), "veckoräfst" );
	deepEqual( Stem("ved"), "ved" );
	deepEqual( Stem("veden"), "ved" );
	deepEqual( Stem("vederbörlig"), "vederbör" );
	deepEqual( Stem("vederbörligen"), "vederbör" );
	deepEqual( Stem("vederfående"), "vederfåend" );
	deepEqual( Stem("vedergälla"), "vedergäll" );
	deepEqual( Stem("vederkvickelse"), "vederkvick" );
	deepEqual( Stem("vederlägga"), "vederlägg" );
	deepEqual( Stem("vederläggning"), "vederläggning" );
	deepEqual( Stem("vedermälen"), "vedermäl" );
	deepEqual( Stem("vedermöda"), "vedermöd" );
	deepEqual( Stem("vedermödor"), "vedermöd" );
	deepEqual( Stem("vederqvicka"), "vederqvick" );
	deepEqual( Stem("vederstyggligaste"), "vederstygg" );
	deepEqual( Stem("vederstyggligt"), "vederstygg" );
	deepEqual( Stem("vedervärdigt"), "vedervärd" );
	deepEqual( Stem("vedkorg"), "vedkorg" );
	deepEqual( Stem("vedkubbarna"), "vedkubb" );
	deepEqual( Stem("vedskutorna"), "vedskut" );
	deepEqual( Stem("vedträ"), "vedträ" );
	deepEqual( Stem("vegetation"), "vegetation" );
	deepEqual( Stem("veitsdans"), "veitsdan" );
	deepEqual( Stem("vek"), "vek" );
	deepEqual( Stem("veka"), "vek" );
	deepEqual( Stem("vekar"), "vek" );
	deepEqual( Stem("veke"), "vek" );
	deepEqual( Stem("veklig"), "vek" );
	deepEqual( Stem("veknande"), "vekn" );
	deepEqual( Stem("veknar"), "vekn" );
	deepEqual( Stem("vekt"), "vekt" );
	deepEqual( Stem("velade"), "vel" );
	deepEqual( Stem("velat"), "vel" );
	deepEqual( Stem("velin"), "velin" );
	deepEqual( Stem("velocipedtävlan"), "velocipedtävlan" );
	deepEqual( Stem("velom"), "velom" );
	deepEqual( Stem("vem"), "vem" );
	deepEqual( Stem("vember"), "vemb" );
	deepEqual( Stem("vemodig"), "vemod" );
	deepEqual( Stem("vemodiga"), "vemod" );
	deepEqual( Stem("vemodigt"), "vemod" );
	deepEqual( Stem("vemodsvår"), "vemodsvår" );
	deepEqual( Stem("vems"), "vem" );
	deepEqual( Stem("ven"), "ven" );
	deepEqual( Stem("veno"), "veno" );
	deepEqual( Stem("venster"), "venst" );
	deepEqual( Stem("venstra"), "venstr" );
	deepEqual( Stem("venus"), "venus" );
	deepEqual( Stem("ver"), "ver" );
	deepEqual( Stem("verallt"), "verallt" );
	deepEqual( Stem("veranda"), "verand" );
	deepEqual( Stem("verandan"), "verandan" );
	deepEqual( Stem("verandaräcket"), "verandaräcket" );
	deepEqual( Stem("verb"), "verb" );
	deepEqual( Stem("verbena"), "verben" );
	deepEqual( Stem("verbum"), "verbum" );
	deepEqual( Stem("verdslig"), "verds" );
	deepEqual( Stem("verdsligt"), "verds" );
	deepEqual( Stem("verk"), "verk" );
	deepEqual( Stem("verka"), "verk" );
	deepEqual( Stem("verkade"), "verk" );
	deepEqual( Stem("verkan"), "verkan" );
	deepEqual( Stem("verkande"), "verk" );
	deepEqual( Stem("verkar"), "verk" );
	deepEqual( Stem("verkat"), "verk" );
	deepEqual( Stem("verken"), "verk" );
	deepEqual( Stem("verket"), "verket" );
	deepEqual( Stem("verkhgen"), "verkhg" );
	deepEqual( Stem("verklig"), "verk" );
	deepEqual( Stem("verkliga"), "verk" );
	deepEqual( Stem("verkligare"), "verk" );
	deepEqual( Stem("verkligaste"), "verk" );
	deepEqual( Stem("verkligen"), "verk" );
	deepEqual( Stem("verklighet"), "verk" );
	deepEqual( Stem("verkligheten"), "verk" );
	deepEqual( Stem("verklighetens"), "verk" );
	deepEqual( Stem("verkligt"), "verk" );
	deepEqual( Stem("verksam"), "verksam" );
	deepEqual( Stem("verksamhet"), "verksam" );
	deepEqual( Stem("verksamheten"), "verksam" );
	deepEqual( Stem("verksamhetsraseri"), "verksamhetsraseri" );
	deepEqual( Stem("verksamma"), "verksamm" );
	deepEqual( Stem("verksammaste"), "verksamm" );
	deepEqual( Stem("verkstad"), "verkst" );
	deepEqual( Stem("verkstaden"), "verkstad" );
	deepEqual( Stem("verkställa"), "verkställ" );
	deepEqual( Stem("verkställande"), "verkställ" );
	deepEqual( Stem("verkställare"), "verkställ" );
	deepEqual( Stem("verkställer"), "verkställ" );
	deepEqual( Stem("verkställighet"), "verkstäl" );
	deepEqual( Stem("verkstält"), "verkstält" );
	deepEqual( Stem("verksäm"), "verksäm" );
	deepEqual( Stem("verktyg"), "verktyg" );
	deepEqual( Stem("verld"), "verld" );
	deepEqual( Stem("verlden"), "verld" );
	deepEqual( Stem("verldens"), "verld" );
	deepEqual( Stem("verldsliga"), "verlds" );
	deepEqual( Stem("verläppen"), "verläpp" );
	deepEqual( Stem("vers"), "ver" );
	deepEqual( Stem("versen"), "vers" );
	deepEqual( Stem("verser"), "vers" );
	deepEqual( Stem("versrad"), "versr" );
	deepEqual( Stem("versrader"), "versrad" );
	deepEqual( Stem("vester"), "vest" );
	deepEqual( Stem("vesterut"), "vesterut" );
	deepEqual( Stem("vestindiefarare"), "vestindiefar" );
	deepEqual( Stem("vestindiefararen"), "vestindiefar" );
	deepEqual( Stem("vestlig"), "vest" );
	deepEqual( Stem("vestliga"), "vest" );
	deepEqual( Stem("vestra"), "vestr" );
	deepEqual( Stem("vestvart"), "vestvart" );
	deepEqual( Stem("vet"), "vet" );
	deepEqual( Stem("veta"), "vet" );
	deepEqual( Stem("vetande"), "vet" );
	deepEqual( Stem("vetat"), "vet" );
	deepEqual( Stem("vetdithanfordendårgången"), "vetdithanfordendårgång" );
	deepEqual( Stem("vete"), "vet" );
	deepEqual( Stem("vetebulle"), "vetebull" );
	deepEqual( Stem("vetenskapen"), "vetenskap" );
	deepEqual( Stem("vetenskapens"), "vetenskap" );
	deepEqual( Stem("vetenskaperna"), "vetenskap" );
	deepEqual( Stem("vetenskaplig"), "vetenskap" );
	deepEqual( Stem("vetenskapliga"), "vetenskap" );
	deepEqual( Stem("vetenskapsakademien"), "vetenskapsakademi" );
	deepEqual( Stem("vetenskapsman"), "vetenskapsman" );
	deepEqual( Stem("vetgirigare"), "vetgir" );
	deepEqual( Stem("vetgirighet"), "vetgir" );
	deepEqual( Stem("vetgirigt"), "vetgir" );
	deepEqual( Stem("vetskap"), "vetskap" );
	deepEqual( Stem("vett"), "vett" );
	deepEqual( Stem("vettet"), "vettet" );
	deepEqual( Stem("vettig"), "vett" );
	deepEqual( Stem("vettigt"), "vett" );
	deepEqual( Stem("vettlös"), "vettlös" );
	deepEqual( Stem("vettlöst"), "vettlös" );
	deepEqual( Stem("vev"), "vev" );
	deepEqual( Stem("vexelvis"), "vexelvis" );
	deepEqual( Stem("vexlat"), "vexl" );
	deepEqual( Stem("vhl"), "vhl" );
	deepEqual( Stem("vhlgar"), "vhlgar" );
	deepEqual( Stem("vi"), "vi" );
	deepEqual( Stem("vice"), "vic" );
	deepEqual( Stem("vichyvatten"), "vichyvat" );
	deepEqual( Stem("vicka"), "vick" );
	deepEqual( Stem("vickan"), "vickan" );
	deepEqual( Stem("vickningar"), "vickning" );
	deepEqual( Stem("vid"), "vid" );
	deepEqual( Stem("vida"), "vid" );
	deepEqual( Stem("vidare"), "vid" );
	deepEqual( Stem("vidblev"), "vidblev" );
	deepEqual( Stem("vidbliva"), "vidbliv" );
	deepEqual( Stem("vidblivit"), "vidblivit" );
	deepEqual( Stem("vidden"), "vidd" );
	deepEqual( Stem("vidgad"), "vidg" );
	deepEqual( Stem("vidgade"), "vidg" );
	deepEqual( Stem("vidgades"), "vidg" );
	deepEqual( Stem("vidgande"), "vidg" );
	deepEqual( Stem("vidgar"), "vidg" );
	deepEqual( Stem("vidgår"), "vidgår" );
	deepEqual( Stem("vidhjärtad"), "vidhjärt" );
	deepEqual( Stem("vidhänga"), "vidhäng" );
	deepEqual( Stem("vidhålla"), "vidhåll" );
	deepEqual( Stem("vidhåller"), "vidhåll" );
	deepEqual( Stem("vidkom"), "vidkom" );
	deepEqual( Stem("vidkommer"), "vidkomm" );
	deepEqual( Stem("vidlyftig"), "vidlyft" );
	deepEqual( Stem("vidlyftiga"), "vidlyft" );
	deepEqual( Stem("vidlyftigare"), "vidlyft" );
	deepEqual( Stem("vidlyftigaste"), "vidlyft" );
	deepEqual( Stem("vidrig"), "vidr" );
	deepEqual( Stem("vidriga"), "vidr" );
	deepEqual( Stem("vidrigt"), "vidr" );
	deepEqual( Stem("vidrör"), "vidrör" );
	deepEqual( Stem("vidröra"), "vidrör" );
	deepEqual( Stem("vidrörde"), "vidrörd" );
	deepEqual( Stem("vidskepelse"), "vidskep" );
	deepEqual( Stem("vidt"), "vidt" );
	deepEqual( Stem("vidtaga"), "vidtag" );
	deepEqual( Stem("vidtalade"), "vidtal" );
	deepEqual( Stem("vidtalat"), "vidtal" );
	deepEqual( Stem("vidtogo"), "vidtogo" );
	deepEqual( Stem("vidunder"), "vidund" );
	deepEqual( Stem("vidunderligt"), "vidunder" );
	deepEqual( Stem("vidåhörandet"), "vidåhör" );
	deepEqual( Stem("vidöppen"), "vidöpp" );
	deepEqual( Stem("vidöppna"), "vidöppn" );
	deepEqual( Stem("vie"), "vie" );
	deepEqual( Stem("vieillissant"), "vieillissant" );
	deepEqual( Stem("vieux"), "vieux" );
	deepEqual( Stem("vifta"), "vift" );
	deepEqual( Stem("viftade"), "vift" );
	deepEqual( Stem("viftande"), "vift" );
	deepEqual( Stem("viftning"), "viftning" );
	deepEqual( Stem("viftningar"), "viftning" );
	deepEqual( Stem("vig"), "vig" );
	deepEqual( Stem("vigas"), "vig" );
	deepEqual( Stem("vighet"), "vig" );
	deepEqual( Stem("vigilans"), "vigilan" );
	deepEqual( Stem("vigilansen"), "vigilans" );
	deepEqual( Stem("vigselattest"), "vigselattest" );
	deepEqual( Stem("vigseln"), "vigseln" );
	deepEqual( Stem("vigselringen"), "vigselring" );
	deepEqual( Stem("vigtig"), "vigt" );
	deepEqual( Stem("vigtiga"), "vigt" );
	deepEqual( Stem("vigtigt"), "vigt" );
	deepEqual( Stem("vii"), "vii" );
	deepEqual( Stem("viii"), "viii" );
	deepEqual( Stem("viile"), "viil" );
	deepEqual( Stem("vik"), "vik" );
	deepEqual( Stem("vika"), "vik" );
	deepEqual( Stem("vikarna"), "vik" );
	deepEqual( Stem("viker"), "vik" );
	deepEqual( Stem("vikingarne"), "viking" );
	deepEqual( Stem("vikit"), "vikit" );
	deepEqual( Stem("vikt"), "vikt" );
	deepEqual( Stem("vikten"), "vikt" );
	deepEqual( Stem("viktig"), "vikt" );
	deepEqual( Stem("viktiga"), "vikt" );
	deepEqual( Stem("viktigare"), "vikt" );
	deepEqual( Stem("viktigaste"), "vikt" );
	deepEqual( Stem("viktigt"), "vikt" );
	deepEqual( Stem("viktor"), "vikt" );
	deepEqual( Stem("vil"), "vil" );
	deepEqual( Stem("vila"), "vil" );
	deepEqual( Stem("vilade"), "vil" );
	deepEqual( Stem("vilan"), "vilan" );
	deepEqual( Stem("vilande"), "vil" );
	deepEqual( Stem("vilar"), "vil" );
	deepEqual( Stem("vilat"), "vil" );
	deepEqual( Stem("vild"), "vild" );
	deepEqual( Stem("vilda"), "vild" );
	deepEqual( Stem("vildand"), "vildand" );
	deepEqual( Stem("vildare"), "vild" );
	deepEqual( Stem("vildarne"), "vild" );
	deepEqual( Stem("vildaste"), "vild" );
	deepEqual( Stem("vilddjur"), "vilddjur" );
	deepEqual( Stem("vilde"), "vild" );
	deepEqual( Stem("vildhet"), "vild" );
	deepEqual( Stem("vildheten"), "vild" );
	deepEqual( Stem("vildmarkens"), "vildmark" );
	deepEqual( Stem("vildt"), "vild" );
	deepEqual( Stem("vildvin"), "vildvin" );
	deepEqual( Stem("vildänder"), "vildänd" );
	deepEqual( Stem("vili"), "vili" );
	deepEqual( Stem("vilie"), "vili" );
	deepEqual( Stem("vilja"), "vilj" );
	deepEqual( Stem("viljan"), "viljan" );
	deepEqual( Stem("viljas"), "vilj" );
	deepEqual( Stem("viljeakt"), "viljeak" );
	deepEqual( Stem("viljes"), "vilj" );
	deepEqual( Stem("vilka"), "vilk" );
	deepEqual( Stem("vilkas"), "vilk" );
	deepEqual( Stem("vilken"), "vilk" );
	deepEqual( Stem("vilkens"), "vilk" );
	deepEqual( Stem("vilket"), "vilket" );
	deepEqual( Stem("vilkets"), "vilket" );
	deepEqual( Stem("vilkor"), "vilk" );
	deepEqual( Stem("vilkoren"), "vilkor" );
	deepEqual( Stem("vill"), "vill" );
	deepEqual( Stem("villa"), "vill" );
	deepEqual( Stem("villan"), "villan" );
	deepEqual( Stem("villande"), "vill" );
	deepEqual( Stem("villastäderna"), "villastäd" );
	deepEqual( Stem("villc"), "villc" );
	deepEqual( Stem("ville"), "vill" );
	deepEqual( Stem("villebradet"), "villebradet" );
	deepEqual( Stem("villebråd"), "villebråd" );
	deepEqual( Stem("villervalla"), "villervall" );
	deepEqual( Stem("villfarelse"), "villfar" );
	deepEqual( Stem("villfarelser"), "villfar" );
	deepEqual( Stem("villfarit"), "villfarit" );
	deepEqual( Stem("villig"), "vil" );
	deepEqual( Stem("villigt"), "vil" );
	deepEqual( Stem("villkor"), "villk" );
	deepEqual( Stem("villkoren"), "villkor" );
	deepEqual( Stem("villkoret"), "villkoret" );
	deepEqual( Stem("villor"), "vill" );
	deepEqual( Stem("villornas"), "vill" );
	deepEqual( Stem("villovägar"), "villoväg" );
	deepEqual( Stem("villrådig"), "villråd" );
	deepEqual( Stem("villrådiga"), "villråd" );
	deepEqual( Stem("viloplats"), "viloplat" );
	deepEqual( Stem("vilse"), "vils" );
	deepEqual( Stem("vilsekommen"), "vilsekomm" );
	deepEqual( Stem("vilsen"), "vils" );
	deepEqual( Stem("vilsna"), "vilsn" );
	deepEqual( Stem("vilt"), "vilt" );
	deepEqual( Stem("vimla"), "viml" );
	deepEqual( Stem("vimlad"), "viml" );
	deepEqual( Stem("vimlade"), "viml" );
	deepEqual( Stem("vimmelkantig"), "vimmelkant" );
	deepEqual( Stem("vin"), "vin" );
	deepEqual( Stem("vinberg"), "vinberg" );
	deepEqual( Stem("vinbuteljen"), "vinbutelj" );
	deepEqual( Stem("vinbären"), "vinbär" );
	deepEqual( Stem("vind"), "vind" );
	deepEqual( Stem("vindande"), "vind" );
	deepEqual( Stem("vindar"), "vind" );
	deepEqual( Stem("vindarnas"), "vind" );
	deepEqual( Stem("vindarne"), "vind" );
	deepEqual( Stem("vinddrag"), "vinddrag" );
	deepEqual( Stem("vinddraget"), "vinddraget" );
	deepEqual( Stem("vinden"), "vind" );
	deepEqual( Stem("vindens"), "vind" );
	deepEqual( Stem("vindfläkt"), "vindfläk" );
	deepEqual( Stem("vindil"), "vindil" );
	deepEqual( Stem("vindlar"), "vindl" );
	deepEqual( Stem("vindsdörr"), "vindsdörr" );
	deepEqual( Stem("vindsdörren"), "vindsdörr" );
	deepEqual( Stem("vindsgluggen"), "vindsglugg" );
	deepEqual( Stem("vindskamma"), "vindskamm" );
	deepEqual( Stem("vindskammare"), "vindskamm" );
	deepEqual( Stem("vindskammaren"), "vindskamm" );
	deepEqual( Stem("vindskupa"), "vindskup" );
	deepEqual( Stem("vindskupans"), "vindskupan" );
	deepEqual( Stem("vindslitet"), "vindslitet" );
	deepEqual( Stem("vindsrummet"), "vindsrummet" );
	deepEqual( Stem("vindstilla"), "vindstill" );
	deepEqual( Stem("vindstrappan"), "vindstrappan" );
	deepEqual( Stem("vindstöt"), "vindstöt" );
	deepEqual( Stem("vinens"), "vin" );
	deepEqual( Stem("viner"), "vin" );
	deepEqual( Stem("vinet"), "vinet" );
	deepEqual( Stem("vinets"), "vinet" );
	deepEqual( Stem("vinflaskan"), "vinflaskan" );
	deepEqual( Stem("ving"), "ving" );
	deepEqual( Stem("vingar"), "ving" );
	deepEqual( Stem("vingarna"), "ving" );
	deepEqual( Stem("vingarnas"), "ving" );
	deepEqual( Stem("vingarne"), "ving" );
	deepEqual( Stem("vingars"), "vingar" );
	deepEqual( Stem("vingen"), "ving" );
	deepEqual( Stem("vinglade"), "vingl" );
	deepEqual( Stem("vingslag"), "vingslag" );
	deepEqual( Stem("vingsus"), "vingsus" );
	deepEqual( Stem("vinhandeln"), "vinhandeln" );
	deepEqual( Stem("vink"), "vink" );
	deepEqual( Stem("vinka"), "vink" );
	deepEqual( Stem("vinkade"), "vink" );
	deepEqual( Stem("vinkades"), "vink" );
	deepEqual( Stem("vinkande"), "vink" );
	deepEqual( Stem("vinkar"), "vink" );
	deepEqual( Stem("vinkat"), "vink" );
	deepEqual( Stem("vinkel"), "vinkel" );
	deepEqual( Stem("vinkeln"), "vinkeln" );
	deepEqual( Stem("vinken"), "vink" );
	deepEqual( Stem("vinklar"), "vinkl" );
	deepEqual( Stem("vinklarna"), "vinkl" );
	deepEqual( Stem("vinkning"), "vinkning" );
	deepEqual( Stem("vinlistan"), "vinlistan" );
	deepEqual( Stem("vinn"), "vinn" );
	deepEqual( Stem("vinna"), "vinn" );
	deepEqual( Stem("vinnas"), "vinn" );
	deepEqual( Stem("vinner"), "vinn" );
	deepEqual( Stem("vinning"), "vinning" );
	deepEqual( Stem("vinnlaggandet"), "vinnlagg" );
	deepEqual( Stem("vinslankar"), "vinslank" );
	deepEqual( Stem("vinst"), "vinst" );
	deepEqual( Stem("vinsten"), "vinst" );
	deepEqual( Stem("vinstgivandc"), "vinstgivandc" );
	deepEqual( Stem("vinter"), "vint" );
	deepEqual( Stem("vinteraftnarna"), "vinteraftn" );
	deepEqual( Stem("vintergatans"), "vintergatan" );
	deepEqual( Stem("vinterhvila"), "vinterhvil" );
	deepEqual( Stem("vinterhvilan"), "vinterhvilan" );
	deepEqual( Stem("vinterkusen"), "vinterkus" );
	deepEqual( Stem("vinterkväll"), "vinterkväll" );
	deepEqual( Stem("vinterkvällar"), "vinterkväll" );
	deepEqual( Stem("vinterlig"), "vinter" );
	deepEqual( Stem("vinterliggare"), "vinterligg" );
	deepEqual( Stem("vintermat"), "vinterm" );
	deepEqual( Stem("vintermånaderna"), "vintermånad" );
	deepEqual( Stem("vintern"), "vint" );
	deepEqual( Stem("vinternatt"), "vinternat" );
	deepEqual( Stem("vinterns"), "vint" );
	deepEqual( Stem("vinterorgel"), "vinterorgel" );
	deepEqual( Stem("vinterqvarter"), "vinterqvart" );
	deepEqual( Stem("vinterresa"), "vinterres" );
	deepEqual( Stem("vinterskymning"), "vinterskymning" );
	deepEqual( Stem("vintersnön"), "vintersnön" );
	deepEqual( Stem("vintertiden"), "vintertid" );
	deepEqual( Stem("vintervärld"), "vintervärld" );
	deepEqual( Stem("vintrar"), "vintr" );
	deepEqual( Stem("vintrarna"), "vintr" );
	deepEqual( Stem("vintras"), "vintr" );
	deepEqual( Stem("vintriga"), "vintr" );
	deepEqual( Stem("vintrigt"), "vintr" );
	deepEqual( Stem("viola"), "viol" );
	deepEqual( Stem("violas"), "viol" );
	deepEqual( Stem("violbrun"), "violbrun" );
	deepEqual( Stem("viole"), "viol" );
	deepEqual( Stem("violer"), "viol" );
	deepEqual( Stem("violerna"), "viol" );
	deepEqual( Stem("violernas"), "viol" );
	deepEqual( Stem("violett"), "violet" );
	deepEqual( Stem("violetta"), "violet" );
	deepEqual( Stem("violiner"), "violin" );
	deepEqual( Stem("violoncell"), "violoncell" );
	deepEqual( Stem("vippade"), "vipp" );
	deepEqual( Stem("vippstjärten"), "vippstjärt" );
	deepEqual( Stem("vips"), "vip" );
	deepEqual( Stem("vira"), "vir" );
	deepEqual( Stem("virade"), "vir" );
	deepEqual( Stem("virriga"), "virr" );
	deepEqual( Stem("virrvarr"), "virrvarr" );
	deepEqual( Stem("virvel"), "virvel" );
	deepEqual( Stem("virvlade"), "virvl" );
	deepEqual( Stem("virvlande"), "virvl" );
	deepEqual( Stem("virvlar"), "virvl" );
	deepEqual( Stem("virvlat"), "virvl" );
	deepEqual( Stem("vis"), "vis" );
	deepEqual( Stem("visa"), "vis" );
	deepEqual( Stem("visad"), "vis" );
	deepEqual( Stem("visade"), "vis" );
	deepEqual( Stem("visan"), "visan" );
	deepEqual( Stem("visande"), "vis" );
	deepEqual( Stem("visans"), "visan" );
	deepEqual( Stem("visar"), "vis" );
	deepEqual( Stem("visare"), "vis" );
	deepEqual( Stem("visarna"), "vis" );
	deepEqual( Stem("visat"), "vis" );
	deepEqual( Stem("visdom"), "visdom" );
	deepEqual( Stem("visdomens"), "visdom" );
	deepEqual( Stem("visdomstiden"), "visdomstid" );
	deepEqual( Stem("vise"), "vis" );
	deepEqual( Stem("vises"), "vis" );
	deepEqual( Stem("viset"), "viset" );
	deepEqual( Stem("vishet"), "vis" );
	deepEqual( Stem("vishetsspråk"), "vishetsspråk" );
	deepEqual( Stem("vision"), "vision" );
	deepEqual( Stem("visit"), "visit" );
	deepEqual( Stem("visitationer"), "visitation" );
	deepEqual( Stem("visiten"), "visit" );
	deepEqual( Stem("visiter"), "visit" );
	deepEqual( Stem("visiterna"), "visit" );
	deepEqual( Stem("visitkort"), "visitkort" );
	deepEqual( Stem("visitkortet"), "visitkortet" );
	deepEqual( Stem("viska"), "visk" );
	deepEqual( Stem("viskadc"), "viskadc" );
	deepEqual( Stem("viskade"), "visk" );
	deepEqual( Stem("viskades"), "visk" );
	deepEqual( Stem("viskande"), "visk" );
	deepEqual( Stem("viskar"), "visk" );
	deepEqual( Stem("viskas"), "visk" );
	deepEqual( Stem("viskat"), "visk" );
	deepEqual( Stem("viskning"), "viskning" );
	deepEqual( Stem("viskningar"), "viskning" );
	deepEqual( Stem("viskningarna"), "viskning" );
	deepEqual( Stem("viskningen"), "viskning" );
	deepEqual( Stem("visky"), "visky" );
	deepEqual( Stem("visligen"), "vis" );
	deepEqual( Stem("visor"), "vis" );
	deepEqual( Stem("visorna"), "vis" );
	deepEqual( Stem("vispa"), "visp" );
	deepEqual( Stem("vispade"), "visp" );
	deepEqual( Stem("vispen"), "visp" );
	deepEqual( Stem("viss"), "viss" );
	deepEqual( Stem("vissa"), "viss" );
	deepEqual( Stem("vissen"), "viss" );
	deepEqual( Stem("visserligen"), "visser" );
	deepEqual( Stem("visset"), "visset" );
	deepEqual( Stem("visshet"), "viss" );
	deepEqual( Stem("vissheten"), "viss" );
	deepEqual( Stem("visslade"), "vissl" );
	deepEqual( Stem("visslande"), "vissl" );
	deepEqual( Stem("visslar"), "vissl" );
	deepEqual( Stem("visslet"), "visslet" );
	deepEqual( Stem("vissling"), "vissling" );
	deepEqual( Stem("visslingen"), "vissling" );
	deepEqual( Stem("vissna"), "vissn" );
	deepEqual( Stem("vissnade"), "vissn" );
	deepEqual( Stem("vissnande"), "vissn" );
	deepEqual( Stem("vissnar"), "vissn" );
	deepEqual( Stem("vissnat"), "vissn" );
	deepEqual( Stem("vissne"), "vissn" );
	deepEqual( Stem("visso"), "visso" );
	deepEqual( Stem("visst"), "visst" );
	deepEqual( Stem("visstc"), "visstc" );
	deepEqual( Stem("visste"), "visst" );
	deepEqual( Stem("vissten"), "visst" );
	deepEqual( Stem("visstump"), "visstump" );
	deepEqual( Stem("visstumpar"), "visstump" );
	deepEqual( Stem("vist"), "vist" );
	deepEqual( Stem("vistades"), "vist" );
	deepEqual( Stem("vistande"), "vist" );
	deepEqual( Stem("vistandet"), "vist" );
	deepEqual( Stem("vistas"), "vist" );
	deepEqual( Stem("vistats"), "vistat" );
	deepEqual( Stem("vistelse"), "vist" );
	deepEqual( Stem("vistelseort"), "vistelseort" );
	deepEqual( Stem("visthusdörren"), "visthusdörr" );
	deepEqual( Stem("visthuset"), "visthuset" );
	deepEqual( Stem("vit"), "vit" );
	deepEqual( Stem("vita"), "vit" );
	deepEqual( Stem("vitalis"), "vitalis" );
	deepEqual( Stem("vitas"), "vit" );
	deepEqual( Stem("vitdukat"), "vitduk" );
	deepEqual( Stem("vithet"), "vit" );
	deepEqual( Stem("vithårig"), "vithår" );
	deepEqual( Stem("vitklädda"), "vitkläd" );
	deepEqual( Stem("vitnade"), "vitn" );
	deepEqual( Stem("vitnande"), "vitn" );
	deepEqual( Stem("vitprickig"), "vitprick" );
	deepEqual( Stem("vitriol"), "vitriol" );
	deepEqual( Stem("vitskimrande"), "vitskimr" );
	deepEqual( Stem("vitskurade"), "vitskur" );
	deepEqual( Stem("vitsord"), "vitsord" );
	deepEqual( Stem("vitt"), "vitt" );
	deepEqual( Stem("vitten"), "vitt" );
	deepEqual( Stem("vittert"), "vittert" );
	deepEqual( Stem("vittna"), "vittn" );
	deepEqual( Stem("vittnade"), "vittn" );
	deepEqual( Stem("vittnande"), "vittn" );
	deepEqual( Stem("vittnar"), "vittn" );
	deepEqual( Stem("vittne"), "vittn" );
	deepEqual( Stem("vittnen"), "vittn" );
	deepEqual( Stem("vittnesmål"), "vittnesmål" );
	deepEqual( Stem("vittutseende"), "vittutseend" );
	deepEqual( Stem("vivant"), "vivant" );
	deepEqual( Stem("vivendi"), "vivendi" );
	deepEqual( Stem("vivo"), "vivo" );
	deepEqual( Stem("vivör"), "vivör" );
	deepEqual( Stem("vjta"), "vjta" );
	deepEqual( Stem("vlsst"), "vlsst" );
	deepEqual( Stem("vo"), "vo" );
	deepEqual( Stem("voa"), "voa" );
	deepEqual( Stem("voila"), "voil" );
	deepEqual( Stem("voix"), "voix" );
	deepEqual( Stem("voll"), "voll" );
	deepEqual( Stem("volym"), "volym" );
	deepEqual( Stem("volymer"), "volym" );
	deepEqual( Stem("von"), "von" );
	deepEqual( Stem("vor"), "vor" );
	deepEqual( Stem("vorden"), "vord" );
	deepEqual( Stem("vore"), "vor" );
	deepEqual( Stem("voro"), "voro" );
	deepEqual( Stem("vot"), "vot" );
	deepEqual( Stem("vou"), "vou" );
	deepEqual( Stem("vous"), "vous" );
	deepEqual( Stem("vov"), "vov" );
	deepEqual( Stem("vox"), "vox" );
	deepEqual( Stem("vpa"), "vpa" );
	deepEqual( Stem("vraarna"), "vraarn" );
	deepEqual( Stem("vrak"), "vrak" );
	deepEqual( Stem("vraket"), "vraket" );
	deepEqual( Stem("vrakplundraren"), "vrakplundr" );
	deepEqual( Stem("vred"), "vred" );
	deepEqual( Stem("vrede"), "vred" );
	deepEqual( Stem("vreden"), "vred" );
	deepEqual( Stem("vredens"), "vred" );
	deepEqual( Stem("vredgade"), "vredg" );
	deepEqual( Stem("vredo"), "vredo" );
	deepEqual( Stem("vresig"), "vres" );
	deepEqual( Stem("vresigheten"), "vres" );
	deepEqual( Stem("vresigt"), "vres" );
	deepEqual( Stem("vrestörnets"), "vrestörnet" );
	deepEqual( Stem("vret"), "vret" );
	deepEqual( Stem("vreten"), "vret" );
	deepEqual( Stem("vrida"), "vrid" );
	deepEqual( Stem("vridande"), "vrid" );
	deepEqual( Stem("vriden"), "vrid" );
	deepEqual( Stem("vrider"), "vrid" );
	deepEqual( Stem("vridit"), "vridit" );
	deepEqual( Stem("vridning"), "vridning" );
	deepEqual( Stem("vristen"), "vrist" );
	deepEqual( Stem("vristerna"), "vrist" );
	deepEqual( Stem("vroks"), "vrok" );
	deepEqual( Stem("vräka"), "vräk" );
	deepEqual( Stem("vräker"), "vräk" );
	deepEqual( Stem("vräkte"), "vräkt" );
	deepEqual( Stem("vrå"), "vrå" );
	deepEqual( Stem("vrål"), "vrål" );
	deepEqual( Stem("vrålade"), "vrål" );
	deepEqual( Stem("vrån"), "vrån" );
	deepEqual( Stem("vrår"), "vrår" );
	deepEqual( Stem("vudare"), "vud" );
	deepEqual( Stem("vulgär"), "vulgär" );
	deepEqual( Stem("vulgära"), "vulgär" );
	deepEqual( Stem("vulkan"), "vulkan" );
	deepEqual( Stem("vunna"), "vunn" );
	deepEqual( Stem("vunne"), "vunn" );
	deepEqual( Stem("vunnet"), "vunnet" );
	deepEqual( Stem("vunnit"), "vunnit" );
	deepEqual( Stem("vurm"), "vurm" );
	deepEqual( Stem("vurmerier"), "vurmeri" );
	deepEqual( Stem("vuxen"), "vux" );
	deepEqual( Stem("vuxit"), "vuxit" );
	deepEqual( Stem("vuxna"), "vuxn" );
	deepEqual( Stem("vuxne"), "vuxn" );
	deepEqual( Stem("vyssa"), "vyss" );
	deepEqual( Stem("vyssjat"), "vyssj" );
	deepEqual( Stem("vä"), "vä" );
	deepEqual( Stem("väck"), "väck" );
	deepEqual( Stem("väcka"), "väck" );
	deepEqual( Stem("väckarklocka"), "väckarklock" );
	deepEqual( Stem("väckarklockan"), "väckarklockan" );
	deepEqual( Stem("väckas"), "väck" );
	deepEqual( Stem("väckelse"), "väck" );
	deepEqual( Stem("väckelsen"), "väck" );
	deepEqual( Stem("väcker"), "väck" );
	deepEqual( Stem("väckes"), "väck" );
	deepEqual( Stem("väckt"), "väck" );
	deepEqual( Stem("väckta"), "väck" );
	deepEqual( Stem("väckte"), "väck" );
	deepEqual( Stem("väcktes"), "väck" );
	deepEqual( Stem("väder"), "väd" );
	deepEqual( Stem("väderbitet"), "väderbitet" );
	deepEqual( Stem("väderbitna"), "väderbitn" );
	deepEqual( Stem("väderhanen"), "väderhan" );
	deepEqual( Stem("väderhorn"), "väderhorn" );
	deepEqual( Stem("väderil"), "väderil" );
	deepEqual( Stem("väderkistan"), "väderkistan" );
	deepEqual( Stem("väderkorn"), "väderkorn" );
	deepEqual( Stem("väderkvarn"), "väderkvarn" );
	deepEqual( Stem("väderkvarns"), "väderkvarn" );
	deepEqual( Stem("väderstreck"), "väderstreck" );
	deepEqual( Stem("vädja"), "vädj" );
	deepEqual( Stem("vädjande"), "vädj" );
	deepEqual( Stem("vädra"), "vädr" );
	deepEqual( Stem("vädrade"), "vädr" );
	deepEqual( Stem("vädrande"), "vädr" );
	deepEqual( Stem("vädrars"), "vädrar" );
	deepEqual( Stem("vädras"), "vädr" );
	deepEqual( Stem("vädret"), "vädret" );
	deepEqual( Stem("vädring"), "vädring" );
	deepEqual( Stem("vädur"), "vädur" );
	deepEqual( Stem("väfen"), "väf" );
	deepEqual( Stem("väfnaden"), "väfnad" );
	deepEqual( Stem("väfva"), "väfv" );
	deepEqual( Stem("väg"), "väg" );
	deepEqual( Stem("väga"), "väg" );
	deepEqual( Stem("vägar"), "väg" );
	deepEqual( Stem("vägarna"), "väg" );
	deepEqual( Stem("vägde"), "vägd" );
	deepEqual( Stem("vägdes"), "vägd" );
	deepEqual( Stem("vägen"), "väg" );
	deepEqual( Stem("väger"), "väg" );
	deepEqual( Stem("vägfolk"), "vägfolk" );
	deepEqual( Stem("vägg"), "vägg" );
	deepEqual( Stem("väggar"), "vägg" );
	deepEqual( Stem("väggarna"), "vägg" );
	deepEqual( Stem("väggarne"), "vägg" );
	deepEqual( Stem("väggen"), "vägg" );
	deepEqual( Stem("väggfast"), "väggf" );
	deepEqual( Stem("väggklockan"), "väggklockan" );
	deepEqual( Stem("väggskåp"), "väggskåp" );
	deepEqual( Stem("väggskåpet"), "väggskåpet" );
	deepEqual( Stem("vägkanten"), "vägkant" );
	deepEqual( Stem("vägnar"), "vägn" );
	deepEqual( Stem("vägra"), "vägr" );
	deepEqual( Stem("vägrade"), "vägr" );
	deepEqual( Stem("vägran"), "vägran" );
	deepEqual( Stem("vägrat"), "vägr" );
	deepEqual( Stem("vägt"), "vägt" );
	deepEqual( Stem("vägvill"), "vägvill" );
	deepEqual( Stem("väi"), "väi" );
	deepEqual( Stem("väja"), "väj" );
	deepEqual( Stem("väjde"), "väjd" );
	deepEqual( Stem("väkt"), "väkt" );
	deepEqual( Stem("väktar"), "väkt" );
	deepEqual( Stem("väl"), "väl" );
	deepEqual( Stem("välan"), "välan" );
	deepEqual( Stem("välartad"), "välart" );
	deepEqual( Stem("välbefinnande"), "välbefin" );
	deepEqual( Stem("välbehag"), "välbehag" );
	deepEqual( Stem("välbehagligt"), "välbehag" );
	deepEqual( Stem("välbehållen"), "välbehåll" );
	deepEqual( Stem("välbehövlig"), "välbehöv" );
	deepEqual( Stem("välbekant"), "välbekant" );
	deepEqual( Stem("välbekanta"), "välbekant" );
	deepEqual( Stem("välbestäld"), "välbestäld" );
	deepEqual( Stem("välbetänkta"), "välbetänk" );
	deepEqual( Stem("välbildad"), "välbild" );
	deepEqual( Stem("välborstade"), "välborst" );
	deepEqual( Stem("välbärgad"), "välbärg" );
	deepEqual( Stem("välde"), "väld" );
	deepEqual( Stem("väldig"), "väld" );
	deepEqual( Stem("väldiga"), "väld" );
	deepEqual( Stem("väldige"), "väld" );
	deepEqual( Stem("väldigt"), "väld" );
	deepEqual( Stem("välfägnad"), "välfägn" );
	deepEqual( Stem("välfärd"), "välfärd" );
	deepEqual( Stem("välförhållande"), "välförhåll" );
	deepEqual( Stem("välförståndiga"), "välförstånd" );
	deepEqual( Stem("välgerning"), "välgerning" );
	deepEqual( Stem("välgerningar"), "välgerning" );
	deepEqual( Stem("välgerningen"), "välgerning" );
	deepEqual( Stem("välgrundade"), "välgrund" );
	deepEqual( Stem("välgärning"), "välgärning" );
	deepEqual( Stem("välgång"), "välgång" );
	deepEqual( Stem("välgörande"), "välgör" );
	deepEqual( Stem("välgörare"), "välgör" );
	deepEqual( Stem("välgörares"), "välgörar" );
	deepEqual( Stem("välgörenheten"), "välgören" );
	deepEqual( Stem("välgörenhetsinrättning"), "välgörenhetsinrättning" );
	deepEqual( Stem("välja"), "välj" );
	deepEqual( Stem("väljande"), "välj" );
	deepEqual( Stem("välklädd"), "välkläd" );
	deepEqual( Stem("välkommande"), "välkomm" );
	deepEqual( Stem("välkommen"), "välkomm" );
	deepEqual( Stem("välkomna"), "välkomn" );
	deepEqual( Stem("välkomnade"), "välkomn" );
	deepEqual( Stem("välkomnande"), "välkomn" );
	deepEqual( Stem("välkänd"), "välkänd" );
	deepEqual( Stem("välkända"), "välkänd" );
	deepEqual( Stem("väll"), "väll" );
	deepEqual( Stem("välla"), "väll" );
	deepEqual( Stem("vällagade"), "vällag" );
	deepEqual( Stem("vällde"), "välld" );
	deepEqual( Stem("välling"), "välling" );
	deepEqual( Stem("vällingen"), "välling" );
	deepEqual( Stem("välljudande"), "välljud" );
	deepEqual( Stem("vällukt"), "välluk" );
	deepEqual( Stem("vällust"), "vällust" );
	deepEqual( Stem("vällusten"), "vällust" );
	deepEqual( Stem("vällustens"), "vällust" );
	deepEqual( Stem("välmanikurefade"), "välmanikuref" );
	deepEqual( Stem("välmanikurerade"), "välmanikurer" );
	deepEqual( Stem("välmenade"), "välmen" );
	deepEqual( Stem("välmenande"), "välmen" );
	deepEqual( Stem("välmening"), "välmening" );
	deepEqual( Stem("välmeningen"), "välmening" );
	deepEqual( Stem("välmenings"), "välmening" );
	deepEqual( Stem("välment"), "välment" );
	deepEqual( Stem("välmenta"), "välment" );
	deepEqual( Stem("välmående"), "välmåend" );
	deepEqual( Stem("välmåga"), "välmåg" );
	deepEqual( Stem("välsigna"), "välsign" );
	deepEqual( Stem("välsignad"), "välsign" );
	deepEqual( Stem("välsignade"), "välsign" );
	deepEqual( Stem("välsignande"), "välsign" );
	deepEqual( Stem("välsignar"), "välsign" );
	deepEqual( Stem("välsignat"), "välsign" );
	deepEqual( Stem("välsigne"), "välsign" );
	deepEqual( Stem("välsignelse"), "välsign" );
	deepEqual( Stem("välsignelsen"), "välsign" );
	deepEqual( Stem("välstånd"), "välstånd" );
	deepEqual( Stem("välståndet"), "välståndet" );
	deepEqual( Stem("vält"), "vält" );
	deepEqual( Stem("välta"), "vält" );
	deepEqual( Stem("vältalare"), "vältal" );
	deepEqual( Stem("vältalig"), "välta" );
	deepEqual( Stem("vältaliga"), "välta" );
	deepEqual( Stem("vältalighet"), "välta" );
	deepEqual( Stem("vältra"), "vältr" );
	deepEqual( Stem("vältrade"), "vältr" );
	deepEqual( Stem("vältrat"), "vältr" );
	deepEqual( Stem("vältänkande"), "vältänk" );
	deepEqual( Stem("välva"), "välv" );
	deepEqual( Stem("välvand"), "välvand" );
	deepEqual( Stem("välvda"), "välvd" );
	deepEqual( Stem("välvde"), "välvd" );
	deepEqual( Stem("välvilja"), "välvilj" );
	deepEqual( Stem("välviljans"), "välviljan" );
	deepEqual( Stem("välvillig"), "välvil" );
	deepEqual( Stem("välvilliga"), "välvil" );
	deepEqual( Stem("välvilligt"), "välvil" );
	deepEqual( Stem("välvt"), "välvt" );
	deepEqual( Stem("välvägnad"), "välvägn" );
	deepEqual( Stem("välväxt"), "välväxt" );
	deepEqual( Stem("väm"), "väm" );
	deepEqual( Stem("vämjelse"), "vämj" );
	deepEqual( Stem("vämjelsen"), "vämj" );
	deepEqual( Stem("vän"), "vän" );
	deepEqual( Stem("vänd"), "vänd" );
	deepEqual( Stem("vända"), "vänd" );
	deepEqual( Stem("vändande"), "vänd" );
	deepEqual( Stem("vände"), "vänd" );
	deepEqual( Stem("vänder"), "vänd" );
	deepEqual( Stem("vändes"), "vänd" );
	deepEqual( Stem("vändning"), "vändning" );
	deepEqual( Stem("vändningar"), "vändning" );
	deepEqual( Stem("vändningen"), "vändning" );
	deepEqual( Stem("vändpunkten"), "vändpunk" );
	deepEqual( Stem("vändt"), "vänd" );
	deepEqual( Stem("vänfasta"), "vänfast" );
	deepEqual( Stem("väninna"), "vänin" );
	deepEqual( Stem("väninnas"), "vänin" );
	deepEqual( Stem("väninnor"), "vänin" );
	deepEqual( Stem("vänja"), "vänj" );
	deepEqual( Stem("vänjer"), "vänj" );
	deepEqual( Stem("vänlig"), "vän" );
	deepEqual( Stem("vänliga"), "vän" );
	deepEqual( Stem("vänligare"), "vän" );
	deepEqual( Stem("vänligaste"), "vän" );
	deepEqual( Stem("vänlige"), "vän" );
	deepEqual( Stem("vänlighet"), "vän" );
	deepEqual( Stem("vänligheten"), "vän" );
	deepEqual( Stem("vänligt"), "vän" );
	deepEqual( Stem("vännen"), "vänn" );
	deepEqual( Stem("vännens"), "vänn" );
	deepEqual( Stem("vänner"), "vänn" );
	deepEqual( Stem("vännerna"), "vänn" );
	deepEqual( Stem("vännernas"), "vänn" );
	deepEqual( Stem("vänners"), "vänner" );
	deepEqual( Stem("väns"), "vän" );
	deepEqual( Stem("vänskap"), "vänskap" );
	deepEqual( Stem("vänskapens"), "vänskap" );
	deepEqual( Stem("vänskaplig"), "vänskap" );
	deepEqual( Stem("vänskapliga"), "vänskap" );
	deepEqual( Stem("vänskapligaste"), "vänskap" );
	deepEqual( Stem("vänskapligt"), "vänskap" );
	deepEqual( Stem("vänskaps"), "vänskap" );
	deepEqual( Stem("vänskapsbefattning"), "vänskapsbefattning" );
	deepEqual( Stem("vänskapsfulla"), "vänskapsfull" );
	deepEqual( Stem("vänskapsfullt"), "vänskapsfull" );
	deepEqual( Stem("vänskapsförbindelse"), "vänskapsförbind" );
	deepEqual( Stem("vänskapsförhållande"), "vänskapsförhåll" );
	deepEqual( Stem("vänskapstjänsten"), "vänskapstjänst" );
	deepEqual( Stem("vänster"), "vänst" );
	deepEqual( Stem("vänstra"), "vänstr" );
	deepEqual( Stem("vänt"), "vänt" );
	deepEqual( Stem("vänta"), "vänt" );
	deepEqual( Stem("väntade"), "vänt" );
	deepEqual( Stem("väntades"), "vänt" );
	deepEqual( Stem("väntan"), "väntan" );
	deepEqual( Stem("väntande"), "vänt" );
	deepEqual( Stem("väntans"), "väntan" );
	deepEqual( Stem("väntar"), "vänt" );
	deepEqual( Stem("väntat"), "vänt" );
	deepEqual( Stem("väntetiden"), "väntetid" );
	deepEqual( Stem("väntjenst"), "väntjenst" );
	deepEqual( Stem("väntpengar"), "väntpeng" );
	deepEqual( Stem("väntrummet"), "väntrummet" );
	deepEqual( Stem("vär"), "vär" );
	deepEqual( Stem("värd"), "värd" );
	deepEqual( Stem("värda"), "värd" );
	deepEqual( Stem("värdat"), "värd" );
	deepEqual( Stem("värde"), "värd" );
	deepEqual( Stem("värdefull"), "värdefull" );
	deepEqual( Stem("värdefulla"), "värdefull" );
	deepEqual( Stem("värdefullare"), "värdefull" );
	deepEqual( Stem("värdelös"), "värdelös" );
	deepEqual( Stem("värdelöst"), "värdelös" );
	deepEqual( Stem("värden"), "värd" );
	deepEqual( Stem("värdepapper"), "värdepapp" );
	deepEqual( Stem("värdera"), "värder" );
	deepEqual( Stem("värderad"), "värder" );
	deepEqual( Stem("värderade"), "värder" );
	deepEqual( Stem("värderar"), "värder" );
	deepEqual( Stem("värdet"), "värdet" );
	deepEqual( Stem("värdfolket"), "värdfolket" );
	deepEqual( Stem("värdig"), "värd" );
	deepEqual( Stem("värdiga"), "värd" );
	deepEqual( Stem("värdige"), "värd" );
	deepEqual( Stem("värdighet"), "värd" );
	deepEqual( Stem("värdigllet"), "värdigllet" );
	deepEqual( Stem("värdigt"), "värd" );
	deepEqual( Stem("värdinna"), "värdin" );
	deepEqual( Stem("värdinnan"), "värdinnan" );
	deepEqual( Stem("värdinnans"), "värdinnan" );
	deepEqual( Stem("värdshus"), "värdshus" );
	deepEqual( Stem("värdshusen"), "värdshus" );
	deepEqual( Stem("värdshuset"), "värdshuset" );
	deepEqual( Stem("värdskapet"), "värdskapet" );
	deepEqual( Stem("värdslig"), "värds" );
	deepEqual( Stem("värdt"), "värd" );
	deepEqual( Stem("värja"), "värj" );
	deepEqual( Stem("värjan"), "värjan" );
	deepEqual( Stem("värjde"), "värjd" );
	deepEqual( Stem("värk"), "värk" );
	deepEqual( Stem("värka"), "värk" );
	deepEqual( Stem("värkarna"), "värk" );
	deepEqual( Stem("värken"), "värk" );
	deepEqual( Stem("värkte"), "värk" );
	deepEqual( Stem("värld"), "värld" );
	deepEqual( Stem("världarna"), "värld" );
	deepEqual( Stem("världarnas"), "värld" );
	deepEqual( Stem("världen"), "värld" );
	deepEqual( Stem("världenes"), "världen" );
	deepEqual( Stem("världens"), "värld" );
	deepEqual( Stem("världsberömdhet"), "världsberömd" );
	deepEqual( Stem("världshaven"), "världshav" );
	deepEqual( Stem("världshistoria"), "världshistori" );
	deepEqual( Stem("världshistoriens"), "världshistori" );
	deepEqual( Stem("världslig"), "världs" );
	deepEqual( Stem("världsliga"), "världs" );
	deepEqual( Stem("världslighet"), "världs" );
	deepEqual( Stem("världsmannens"), "världsman" );
	deepEqual( Stem("världsmaskineriet"), "världsmaskineriet" );
	deepEqual( Stem("världsmedborgaren"), "världsmedborg" );
	deepEqual( Stem("världsordningen"), "världsordning" );
	deepEqual( Stem("världsvimlet"), "världsvimlet" );
	deepEqual( Stem("världsåskådning"), "världsåskådning" );
	deepEqual( Stem("värma"), "värm" );
	deepEqual( Stem("värmande"), "värm" );
	deepEqual( Stem("värmas"), "värm" );
	deepEqual( Stem("värmc"), "värmc" );
	deepEqual( Stem("värmde"), "värmd" );
	deepEqual( Stem("värmdes"), "värmd" );
	deepEqual( Stem("värme"), "värm" );
	deepEqual( Stem("värmen"), "värm" );
	deepEqual( Stem("värmens"), "värm" );
	deepEqual( Stem("värmer"), "värm" );
	deepEqual( Stem("värmt"), "värmt" );
	deepEqual( Stem("värn"), "värn" );
	deepEqual( Stem("värna"), "värn" );
	deepEqual( Stem("värnande"), "värn" );
	deepEqual( Stem("värnlösa"), "värnlös" );
	deepEqual( Stem("värr"), "värr" );
	deepEqual( Stem("värre"), "värr" );
	deepEqual( Stem("värst"), "värst" );
	deepEqual( Stem("värsta"), "värst" );
	deepEqual( Stem("värt"), "värt" );
	deepEqual( Stem("värv"), "värv" );
	deepEqual( Stem("värvar"), "värv" );
	deepEqual( Stem("värvas"), "värv" );
	deepEqual( Stem("väsande"), "väs" );
	deepEqual( Stem("väsen"), "väs" );
	deepEqual( Stem("väsende"), "väsend" );
	deepEqual( Stem("väsendet"), "väsendet" );
	deepEqual( Stem("väsens"), "väs" );
	deepEqual( Stem("väsentlig"), "väsent" );
	deepEqual( Stem("väsentliga"), "väsent" );
	deepEqual( Stem("väsentligen"), "väsent" );
	deepEqual( Stem("väsentligt"), "väsent" );
	deepEqual( Stem("väska"), "väsk" );
	deepEqual( Stem("väskan"), "väskan" );
	deepEqual( Stem("väsnades"), "väsn" );
	deepEqual( Stem("vässade"), "väss" );
	deepEqual( Stem("väst"), "väst" );
	deepEqual( Stem("västar"), "väst" );
	deepEqual( Stem("väste"), "väst" );
	deepEqual( Stem("västen"), "väst" );
	deepEqual( Stem("väster"), "väst" );
	deepEqual( Stem("västergötland"), "västergötland" );
	deepEqual( Stem("västerns"), "väst" );
	deepEqual( Stem("västficka"), "västfick" );
	deepEqual( Stem("västfickan"), "västfickan" );
	deepEqual( Stem("västgötaturen"), "västgötatur" );
	deepEqual( Stem("västkustprästens"), "västkustpräst" );
	deepEqual( Stem("väta"), "vät" );
	deepEqual( Stem("vätte"), "vätt" );
	deepEqual( Stem("vättern"), "vätt" );
	deepEqual( Stem("väva"), "väv" );
	deepEqual( Stem("vävarna"), "väv" );
	deepEqual( Stem("vävd"), "vävd" );
	deepEqual( Stem("väven"), "väv" );
	deepEqual( Stem("väver"), "väv" );
	deepEqual( Stem("väverskan"), "väverskan" );
	deepEqual( Stem("vävning"), "vävning" );
	deepEqual( Stem("vävsalen"), "vävsal" );
	deepEqual( Stem("vävstol"), "vävstol" );
	deepEqual( Stem("vävstolar"), "vävstol" );
	deepEqual( Stem("vävstolen"), "vävstol" );
	deepEqual( Stem("vävstycken"), "vävstyck" );
	deepEqual( Stem("vävts"), "vävt" );
	deepEqual( Stem("växa"), "väx" );
	deepEqual( Stem("växande"), "väx" );
	deepEqual( Stem("växel"), "växel" );
	deepEqual( Stem("växelmyntet"), "växelmyntet" );
	deepEqual( Stem("växelomsättning"), "växelomsättning" );
	deepEqual( Stem("växelvis"), "växelvis" );
	deepEqual( Stem("växer"), "väx" );
	deepEqual( Stem("växla"), "växl" );
	deepEqual( Stem("växlad"), "växl" );
	deepEqual( Stem("växlade"), "växl" );
	deepEqual( Stem("växlades"), "växl" );
	deepEqual( Stem("växlande"), "växl" );
	deepEqual( Stem("växlar"), "växl" );
	deepEqual( Stem("växlat"), "växl" );
	deepEqual( Stem("växlingar"), "växling" );
	deepEqual( Stem("växt"), "växt" );
	deepEqual( Stem("växte"), "växt" );
	deepEqual( Stem("växten"), "växt" );
	deepEqual( Stem("växter"), "växt" );
	deepEqual( Stem("växtslag"), "växtslag" );
	deepEqual( Stem("vådlig"), "våd" );
	deepEqual( Stem("vådliga"), "våd" );
	deepEqual( Stem("våg"), "våg" );
	deepEqual( Stem("våga"), "våg" );
	deepEqual( Stem("vågade"), "våg" );
	deepEqual( Stem("vågar"), "våg" );
	deepEqual( Stem("vågat"), "våg" );
	deepEqual( Stem("vågform"), "vågform" );
	deepEqual( Stem("våghalsiga"), "våghals" );
	deepEqual( Stem("vågigt"), "våg" );
	deepEqual( Stem("vågor"), "våg" );
	deepEqual( Stem("vågorna"), "våg" );
	deepEqual( Stem("vågornas"), "våg" );
	deepEqual( Stem("vågsamma"), "vågsamm" );
	deepEqual( Stem("vågskalen"), "vågskal" );
	deepEqual( Stem("vågskålar"), "vågskål" );
	deepEqual( Stem("vågskålen"), "vågskål" );
	deepEqual( Stem("vågspel"), "vågspel" );
	deepEqual( Stem("vågstycke"), "vågstyck" );
	deepEqual( Stem("våknade"), "våkn" );
	deepEqual( Stem("våld"), "våld" );
	deepEqual( Stem("våldföra"), "våldför" );
	deepEqual( Stem("våldsam"), "våldsam" );
	deepEqual( Stem("våldsamma"), "våldsamm" );
	deepEqual( Stem("våldsamt"), "våldsamt" );
	deepEqual( Stem("våldsmannen"), "våldsman" );
	deepEqual( Stem("våldtäkt"), "våldtäk" );
	deepEqual( Stem("vållat"), "våll" );
	deepEqual( Stem("vålnad"), "våln" );
	deepEqual( Stem("vålnader"), "vålnad" );
	deepEqual( Stem("vånda"), "vånd" );
	deepEqual( Stem("våndades"), "vånd" );
	deepEqual( Stem("våndas"), "vånd" );
	deepEqual( Stem("våning"), "våning" );
	deepEqual( Stem("våningar"), "våning" );
	deepEqual( Stem("våningen"), "våning" );
	deepEqual( Stem("vånnar"), "vånn" );
	deepEqual( Stem("våpet"), "våpet" );
	deepEqual( Stem("vår"), "vår" );
	deepEqual( Stem("våra"), "vår" );
	deepEqual( Stem("vårar"), "vår" );
	deepEqual( Stem("vårarna"), "vår" );
	deepEqual( Stem("vårars"), "vårar" );
	deepEqual( Stem("våras"), "vår" );
	deepEqual( Stem("vårblommor"), "vårblomm" );
	deepEqual( Stem("vårbäcken"), "vårbäck" );
	deepEqual( Stem("vård"), "vård" );
	deepEqual( Stem("vårda"), "vård" );
	deepEqual( Stem("vårdad"), "vård" );
	deepEqual( Stem("vårdade"), "vård" );
	deepEqual( Stem("vårdai"), "vårdai" );
	deepEqual( Stem("vårdande"), "vård" );
	deepEqual( Stem("vårdanstalt"), "vårdanstalt" );
	deepEqual( Stem("vårdar"), "vård" );
	deepEqual( Stem("vårdarinna"), "vårdarin" );
	deepEqual( Stem("vårdarinnans"), "vårdarinnan" );
	deepEqual( Stem("vårdarinnas"), "vårdarin" );
	deepEqual( Stem("vårdat"), "vård" );
	deepEqual( Stem("vården"), "vård" );
	deepEqual( Stem("vårdman"), "vårdman" );
	deepEqual( Stem("vårdmans"), "vårdman" );
	deepEqual( Stem("vårdslös"), "vårdslös" );
	deepEqual( Stem("vårdslösa"), "vårdslös" );
	deepEqual( Stem("vårdslösad"), "vårdslös" );
	deepEqual( Stem("vårdslösat"), "vårdslös" );
	deepEqual( Stem("vårdslöshet"), "vårdslös" );
	deepEqual( Stem("vårdslösheten"), "vårdslös" );
	deepEqual( Stem("vårdslöst"), "vårdslös" );
	deepEqual( Stem("vårdtecken"), "vårdteck" );
	deepEqual( Stem("våren"), "vår" );
	deepEqual( Stem("vårens"), "vår" );
	deepEqual( Stem("vårfloder"), "vårflod" );
	deepEqual( Stem("vårfrusälg"), "vårfrusälg" );
	deepEqual( Stem("vårhimmel"), "vårhimmel" );
	deepEqual( Stem("vårhimmeln"), "vårhimmeln" );
	deepEqual( Stem("vårkvällar"), "vårkväll" );
	deepEqual( Stem("vårkök"), "vårkök" );
	deepEqual( Stem("vårliga"), "vår" );
	deepEqual( Stem("vårluften"), "vårluft" );
	deepEqual( Stem("vårlöksgul"), "vårlöksgul" );
	deepEqual( Stem("vårmorgon"), "vårmorgon" );
	deepEqual( Stem("vårsidan"), "vårsidan" );
	deepEqual( Stem("vårskuggor"), "vårskugg" );
	deepEqual( Stem("vårsälg"), "vårsälg" );
	deepEqual( Stem("vårt"), "vårt" );
	deepEqual( Stem("vårtid"), "vårtid" );
	deepEqual( Stem("vårvind"), "vårvind" );
	deepEqual( Stem("våt"), "våt" );
	deepEqual( Stem("våta"), "våt" );
	deepEqual( Stem("vått"), "vått" );
	deepEqual( Stem("vörda"), "vörd" );
	deepEqual( Stem("vördad"), "vörd" );
	deepEqual( Stem("vördade"), "vörd" );
	deepEqual( Stem("vördig"), "vörd" );
	deepEqual( Stem("vördnad"), "vördn" );
	deepEqual( Stem("vördnaden"), "vördnad" );
	deepEqual( Stem("vördnadsbjudande"), "vördnadsbjud" );
	deepEqual( Stem("vördnadsfull"), "vördnadsfull" );
	deepEqual( Stem("vördnadsfulla"), "vördnadsfull" );
	deepEqual( Stem("vördnadsfulle"), "vördnadsfull" );
	deepEqual( Stem("vördsam"), "vördsam" );
	deepEqual( Stem("vörtbrödsskivor"), "vörtbrödsskiv" );
	deepEqual( Stem("vösa"), "vös" );
	deepEqual( Stem("w"), "w" );
	deepEqual( Stem("wagnerian"), "wagnerian" );
	deepEqual( Stem("wahl"), "wahl" );
	deepEqual( Stem("wahlbom"), "wahlbom" );
	deepEqual( Stem("wahlboms"), "wahlbom" );
	deepEqual( Stem("wahlhom"), "wahlhom" );
	deepEqual( Stem("waller"), "wall" );
	deepEqual( Stem("wallin"), "wallin" );
	deepEqual( Stem("wenden"), "wend" );
	deepEqual( Stem("wendens"), "wend" );
	deepEqual( Stem("westervik"), "westervik" );
	deepEqual( Stem("wette"), "wett" );
	deepEqual( Stem("wetterkranz"), "wetterkranz" );
	deepEqual( Stem("wetterkvist"), "wetterkvist" );
	deepEqual( Stem("wetterkvists"), "wetterkvist" );
	deepEqual( Stem("wetzmann"), "wetzman" );
	deepEqual( Stem("wetzmanns"), "wetzman" );
	deepEqual( Stem("whisky"), "whisky" );
	deepEqual( Stem("whiskytoddar"), "whiskytod" );
	deepEqual( Stem("wie"), "wie" );
	deepEqual( Stem("wien"), "wien" );
	deepEqual( Stem("wienervalsen"), "wienervals" );
	deepEqual( Stem("wilhelm"), "wilhelm" );
	deepEqual( Stem("willblad"), "willbl" );
	deepEqual( Stem("wille"), "will" );
	deepEqual( Stem("winblad"), "winbl" );
	deepEqual( Stem("winblads"), "winblad" );
	deepEqual( Stem("winters"), "winter" );
	deepEqual( Stem("wuhlbom"), "wuhlbom" );
	deepEqual( Stem("wunderhorn"), "wunderhorn" );
	deepEqual( Stem("wålbergs"), "wålberg" );
	deepEqual( Stem("x"), "x" );
	deepEqual( Stem("xerxes"), "xerx" );
	deepEqual( Stem("xi"), "xi" );
	deepEqual( Stem("xii"), "xii" );
	deepEqual( Stem("xiii"), "xiii" );
	deepEqual( Stem("xiv"), "xiv" );
	deepEqual( Stem("xix"), "xix" );
	deepEqual( Stem("xolvet"), "xolvet" );
	deepEqual( Stem("xv"), "xv" );
	deepEqual( Stem("xvi"), "xvi" );
	deepEqual( Stem("xvii"), "xvii" );
	deepEqual( Stem("xviii"), "xviii" );
	deepEqual( Stem("xx"), "xx" );
	deepEqual( Stem("xxi"), "xxi" );
	deepEqual( Stem("xxii"), "xxii" );
	deepEqual( Stem("xxiii"), "xxiii" );
	deepEqual( Stem("xxiv"), "xxiv" );
	deepEqual( Stem("xxix"), "xxix" );
	deepEqual( Stem("xxv"), "xxv" );
	deepEqual( Stem("xxvi"), "xxvi" );
	deepEqual( Stem("xxvii"), "xxvii" );
	deepEqual( Stem("xxviii"), "xxviii" );
	deepEqual( Stem("xxx"), "xxx" );
	deepEqual( Stem("xxxi"), "xxxi" );
	deepEqual( Stem("xxxii"), "xxxii" );
	deepEqual( Stem("xxxiii"), "xxxiii" );
	deepEqual( Stem("y"), "y" );
	deepEqual( Stem("yaket"), "yaket" );
	deepEqual( Stem("yankees"), "yanke" );
	deepEqual( Stem("yar"), "yar" );
	deepEqual( Stem("yarta"), "yart" );
	deepEqual( Stem("ydre"), "ydr" );
	deepEqual( Stem("yfdes"), "yfd" );
	deepEqual( Stem("yfviga"), "yfv" );
	deepEqual( Stem("yktan"), "yktan" );
	deepEqual( Stem("ylldes"), "ylld" );
	deepEqual( Stem("ylle"), "yll" );
	deepEqual( Stem("yllestrumpor"), "yllestrump" );
	deepEqual( Stem("ympas"), "ymp" );
	deepEqual( Stem("yngling"), "yngling" );
	deepEqual( Stem("ynglingar"), "yngling" );
	deepEqual( Stem("ynglingaår"), "ynglingaår" );
	deepEqual( Stem("ynglingen"), "yngling" );
	deepEqual( Stem("ynglingens"), "yngling" );
	deepEqual( Stem("ynglings"), "yngling" );
	deepEqual( Stem("yngre"), "yngr" );
	deepEqual( Stem("yngs"), "yng" );
	deepEqual( Stem("yngst"), "yngst" );
	deepEqual( Stem("yngsta"), "yngst" );
	deepEqual( Stem("yngste"), "yngst" );
	deepEqual( Stem("ynk"), "ynk" );
	deepEqual( Stem("ynklig"), "ynk" );
	deepEqual( Stem("ynkliga"), "ynk" );
	deepEqual( Stem("ynkligt"), "ynk" );
	deepEqual( Stem("ynnest"), "ynnest" );
	deepEqual( Stem("ynnestbevis"), "ynnestbevis" );
	deepEqual( Stem("yppa"), "ypp" );
	deepEqual( Stem("yppat"), "ypp" );
	deepEqual( Stem("ypperlig"), "ypper" );
	deepEqual( Stem("ypperligt"), "ypper" );
	deepEqual( Stem("yppersta"), "ypperst" );
	deepEqual( Stem("yppig"), "ypp" );
	deepEqual( Stem("yppigt"), "ypp" );
	deepEqual( Stem("ypplyfte"), "ypplyft" );
	deepEqual( Stem("yr"), "yr" );
	deepEqual( Stem("yra"), "yra" );
	deepEqual( Stem("yrade"), "yrad" );
	deepEqual( Stem("yrar"), "yrar" );
	deepEqual( Stem("yraste"), "yrast" );
	deepEqual( Stem("yrde"), "yrd" );
	deepEqual( Stem("yrke"), "yrk" );
	deepEqual( Stem("yrken"), "yrk" );
	deepEqual( Stem("yrkesförbindlighet"), "yrkesförbind" );
	deepEqual( Stem("yrket"), "yrket" );
	deepEqual( Stem("yrsel"), "yrsel" );
	deepEqual( Stem("yrseln"), "yrseln" );
	deepEqual( Stem("yrvaken"), "yrvak" );
	deepEqual( Stem("yrvaket"), "yrvaket" );
	deepEqual( Stem("yrvakna"), "yrvakn" );
	deepEqual( Stem("ys"), "ys" );
	deepEqual( Stem("yt"), "yt" );
	deepEqual( Stem("yta"), "yta" );
	deepEqual( Stem("ytan"), "ytan" );
	deepEqual( Stem("ytlig"), "ytl" );
	deepEqual( Stem("ytliga"), "ytl" );
	deepEqual( Stem("ytligt"), "ytl" );
	deepEqual( Stem("ytter"), "ytt" );
	deepEqual( Stem("ytterkläder"), "ytterkläd" );
	deepEqual( Stem("ytterliga"), "ytter" );
	deepEqual( Stem("ytterligarc"), "ytterligarc" );
	deepEqual( Stem("ytterligare"), "ytter" );
	deepEqual( Stem("ytterlighet"), "ytter" );
	deepEqual( Stem("ytterst"), "ytterst" );
	deepEqual( Stem("yttersta"), "ytterst" );
	deepEqual( Stem("yttra"), "yttr" );
	deepEqual( Stem("yttrade"), "yttr" );
	deepEqual( Stem("yttrades"), "yttr" );
	deepEqual( Stem("yttrande"), "yttr" );
	deepEqual( Stem("yttranden"), "yttr" );
	deepEqual( Stem("yttrandet"), "yttr" );
	deepEqual( Stem("yttrar"), "yttr" );
	deepEqual( Stem("yttras"), "yttr" );
	deepEqual( Stem("yttrat"), "yttr" );
	deepEqual( Stem("yttre"), "yttr" );
	deepEqual( Stem("yttryckte"), "yttryck" );
	deepEqual( Stem("yuvaste"), "yuv" );
	deepEqual( Stem("yvas"), "yvas" );
	deepEqual( Stem("yvig"), "yvig" );
	deepEqual( Stem("yviga"), "yvig" );
	deepEqual( Stem("yvigt"), "yvig" );
	deepEqual( Stem("yxa"), "yxa" );
	deepEqual( Stem("yände"), "yänd" );
	deepEqual( Stem("yå"), "yå" );
	deepEqual( Stem("z"), "z" );
	deepEqual( Stem("zarathustra"), "zarathustr" );
	deepEqual( Stem("zolo"), "zolo" );
	deepEqual( Stem("zuaver"), "zuav" );
	deepEqual( Stem("ä"), "ä" );
	deepEqual( Stem("äckel"), "äckel" );
	deepEqual( Stem("äcken"), "äck" );
	deepEqual( Stem("äckliga"), "äck" );
	deepEqual( Stem("ädel"), "ädel" );
	deepEqual( Stem("ädelboren"), "ädelbor" );
	deepEqual( Stem("ädelmod"), "ädelmod" );
	deepEqual( Stem("ädelmodig"), "ädelmod" );
	deepEqual( Stem("ädelstenar"), "ädelsten" );
	deepEqual( Stem("ädelt"), "ädelt" );
	deepEqual( Stem("ädla"), "ädl" );
	deepEqual( Stem("ädlingarna"), "ädling" );
	deepEqual( Stem("ädlingen"), "ädling" );
	deepEqual( Stem("äfven"), "äfv" );
	deepEqual( Stem("äfvensom"), "äfvensom" );
	deepEqual( Stem("äfventyr"), "äfventyr" );
	deepEqual( Stem("äfventyra"), "äfventyr" );
	deepEqual( Stem("äfventyret"), "äfventyret" );
	deepEqual( Stem("äga"), "äga" );
	deepEqual( Stem("äganderätten"), "äganderät" );
	deepEqual( Stem("ägare"), "ägar" );
	deepEqual( Stem("ägaren"), "ägar" );
	deepEqual( Stem("ägarens"), "ägar" );
	deepEqual( Stem("ägarinna"), "ägarin" );
	deepEqual( Stem("ägarinnan"), "ägarinnan" );
	deepEqual( Stem("ägde"), "ägd" );
	deepEqual( Stem("ägdes"), "ägd" );
	deepEqual( Stem("äger"), "äger" );
	deepEqual( Stem("ägg"), "ägg" );
	deepEqual( Stem("ägghyllor"), "ägghyll" );
	deepEqual( Stem("äggklyftorna"), "äggklyft" );
	deepEqual( Stem("ägna"), "ägn" );
	deepEqual( Stem("ägnade"), "ägn" );
	deepEqual( Stem("ägnades"), "ägn" );
	deepEqual( Stem("ägnat"), "ägn" );
	deepEqual( Stem("ägo"), "ägo" );
	deepEqual( Stem("ägodelar"), "ägodel" );
	deepEqual( Stem("ägor"), "ägor" );
	deepEqual( Stem("ägorna"), "ägorn" );
	deepEqual( Stem("ägrett"), "ägret" );
	deepEqual( Stem("ägt"), "ägt" );
	deepEqual( Stem("äh"), "äh" );
	deepEqual( Stem("äidre"), "äidr" );
	deepEqual( Stem("äintligen"), "äint" );
	deepEqual( Stem("äkta"), "äkt" );
	deepEqual( Stem("äktenskap"), "äktenskap" );
	deepEqual( Stem("äktenskapet"), "äktenskapet" );
	deepEqual( Stem("äktenskapets"), "äktenskapet" );
	deepEqual( Stem("äktenskapliga"), "äktenskap" );
	deepEqual( Stem("äktenskapsförbindelse"), "äktenskapsförbind" );
	deepEqual( Stem("äktenskapsskillnad"), "äktenskapsskilln" );
	deepEqual( Stem("äl"), "äl" );
	deepEqual( Stem("äldre"), "äldr" );
	deepEqual( Stem("äldsta"), "äldst" );
	deepEqual( Stem("äldste"), "äldst" );
	deepEqual( Stem("älghuvud"), "älghuvud" );
	deepEqual( Stem("älghuvudet"), "älghuvudet" );
	deepEqual( Stem("älsk"), "älsk" );
	deepEqual( Stem("älska"), "älsk" );
	deepEqual( Stem("älskad"), "älsk" );
	deepEqual( Stem("älskade"), "älsk" );
	deepEqual( Stem("älskades"), "älsk" );
	deepEqual( Stem("älskadt"), "älskad" );
	deepEqual( Stem("älskande"), "älsk" );
	deepEqual( Stem("älskar"), "älsk" );
	deepEqual( Stem("älskare"), "älsk" );
	deepEqual( Stem("älskaren"), "älsk" );
	deepEqual( Stem("älskarens"), "älsk" );
	deepEqual( Stem("älskares"), "älskar" );
	deepEqual( Stem("älskarinna"), "älskarin" );
	deepEqual( Stem("älskat"), "älsk" );
	deepEqual( Stem("älsklig"), "älsk" );
	deepEqual( Stem("älskliga"), "älsk" );
	deepEqual( Stem("älsklige"), "älsk" );
	deepEqual( Stem("älskligt"), "älsk" );
	deepEqual( Stem("älskling"), "älskling" );
	deepEqual( Stem("älsklingar"), "älskling" );
	deepEqual( Stem("älsklingsbarn"), "älsklingsbarn" );
	deepEqual( Stem("älsklingsbarnet"), "älsklingsbarnet" );
	deepEqual( Stem("älsklingsdotter"), "älsklingsdot" );
	deepEqual( Stem("älsklingsdryck"), "älsklingsdryck" );
	deepEqual( Stem("älsklingsdräkt"), "älsklingsdräk" );
	deepEqual( Stem("älsklingsplats"), "älsklingsplat" );
	deepEqual( Stem("älsklingsrock"), "älsklingsrock" );
	deepEqual( Stem("älsklingssång"), "älsklingssång" );
	deepEqual( Stem("älsklingssånger"), "älsklingssång" );
	deepEqual( Stem("älsklingsväg"), "älsklingsväg" );
	deepEqual( Stem("älskogs"), "älskog" );
	deepEqual( Stem("älskogskrank"), "älskogskrank" );
	deepEqual( Stem("älskogssälle"), "älskogssäll" );
	deepEqual( Stem("älskvärd"), "älskvärd" );
	deepEqual( Stem("älskvärda"), "älskvärd" );
	deepEqual( Stem("älskvärdare"), "älskvärd" );
	deepEqual( Stem("älskvärdhet"), "älskvärd" );
	deepEqual( Stem("ältandet"), "ält" );
	deepEqual( Stem("ältar"), "ält" );
	deepEqual( Stem("älvarna"), "älv" );
	deepEqual( Stem("äm"), "äm" );
	deepEqual( Stem("ämabla"), "ämabl" );
	deepEqual( Stem("ämade"), "ämad" );
	deepEqual( Stem("ämar"), "ämar" );
	deepEqual( Stem("ämbetets"), "ämbetet" );
	deepEqual( Stem("ämbets"), "ämbet" );
	deepEqual( Stem("ämbetsberk"), "ämbetsberk" );
	deepEqual( Stem("ämbetsbroders"), "ämbetsbroder" );
	deepEqual( Stem("ämbetsbröderna"), "ämbetsbröd" );
	deepEqual( Stem("ämbetsmanna"), "ämbetsman" );
	deepEqual( Stem("ämbetsmannabanan"), "ämbetsmannabanan" );
	deepEqual( Stem("ämbetsmän"), "ämbetsmän" );
	deepEqual( Stem("ämbetsmännen"), "ämbetsmän" );
	deepEqual( Stem("ämbetsverk"), "ämbetsverk" );
	deepEqual( Stem("ämbetsåligganden"), "ämbetsåligg" );
	deepEqual( Stem("ämnad"), "ämn" );
	deepEqual( Stem("ämnade"), "ämn" );
	deepEqual( Stem("ämnar"), "ämn" );
	deepEqual( Stem("ämnat"), "ämn" );
	deepEqual( Stem("ämne"), "ämn" );
	deepEqual( Stem("ämnen"), "ämn" );
	deepEqual( Stem("ämnet"), "ämnet" );
	deepEqual( Stem("ämret"), "ämret" );
	deepEqual( Stem("ämrnet"), "ämrnet" );
	deepEqual( Stem("än"), "än" );
	deepEqual( Stem("ända"), "änd" );
	deepEqual( Stem("ändalmål"), "ändalmål" );
	deepEqual( Stem("ändamål"), "ändamål" );
	deepEqual( Stem("ändamålet"), "ändamålet" );
	deepEqual( Stem("ändamålets"), "ändamålet" );
	deepEqual( Stem("ändamålslös"), "ändamålslös" );
	deepEqual( Stem("ändan"), "ändan" );
	deepEqual( Stem("ändas"), "änd" );
	deepEqual( Stem("ände"), "änd" );
	deepEqual( Stem("änden"), "änd" );
	deepEqual( Stem("änder"), "änd" );
	deepEqual( Stem("änderna"), "änd" );
	deepEqual( Stem("ändlös"), "ändlös" );
	deepEqual( Stem("ändlösa"), "ändlös" );
	deepEqual( Stem("ändock"), "ändock" );
	deepEqual( Stem("ändra"), "ändr" );
	deepEqual( Stem("ändrad"), "ändr" );
	deepEqual( Stem("ändrade"), "ändr" );
	deepEqual( Stem("ändrades"), "ändr" );
	deepEqual( Stem("ändrar"), "ändr" );
	deepEqual( Stem("ändras"), "ändr" );
	deepEqual( Stem("ändrat"), "ändr" );
	deepEqual( Stem("ändring"), "ändring" );
	deepEqual( Stem("ändtligen"), "ändt" );
	deepEqual( Stem("ändå"), "ändå" );
	deepEqual( Stem("äng"), "äng" );
	deepEqual( Stem("ängar"), "äng" );
	deepEqual( Stem("ängarna"), "äng" );
	deepEqual( Stem("ängarnas"), "äng" );
	deepEqual( Stem("ängars"), "ängar" );
	deepEqual( Stem("ängd"), "ängd" );
	deepEqual( Stem("ängden"), "ängd" );
	deepEqual( Stem("ängderna"), "ängd" );
	deepEqual( Stem("ängel"), "ängel" );
	deepEqual( Stem("ängeln"), "ängeln" );
	deepEqual( Stem("ängen"), "äng" );
	deepEqual( Stem("ängens"), "äng" );
	deepEqual( Stem("änglar"), "ängl" );
	deepEqual( Stem("änglarna"), "ängl" );
	deepEqual( Stem("änglars"), "änglar" );
	deepEqual( Stem("änglavingar"), "änglaving" );
	deepEqual( Stem("ängslade"), "ängsl" );
	deepEqual( Stem("ängslan"), "ängslan" );
	deepEqual( Stem("ängslande"), "ängsl" );
	deepEqual( Stem("ängslas"), "ängsl" );
	deepEqual( Stem("ängslig"), "ängs" );
	deepEqual( Stem("ängsliga"), "ängs" );
	deepEqual( Stem("ängslige"), "ängs" );
	deepEqual( Stem("ängsligt"), "ängs" );
	deepEqual( Stem("änka"), "änk" );
	deepEqual( Stem("änkan"), "änkan" );
	deepEqual( Stem("änkefru"), "änkefru" );
	deepEqual( Stem("änkenåd"), "änkenåd" );
	deepEqual( Stem("änkestand"), "änkestand" );
	deepEqual( Stem("änkling"), "änkling" );
	deepEqual( Stem("änklingen"), "änkling" );
	deepEqual( Stem("änklingstid"), "änklingstid" );
	deepEqual( Stem("änkor"), "änk" );
	deepEqual( Stem("ännu"), "ännu" );
	deepEqual( Stem("änrlå"), "änrlå" );
	deepEqual( Stem("änsande"), "äns" );
	deepEqual( Stem("änt"), "änt" );
	deepEqual( Stem("äntligen"), "änt" );
	deepEqual( Stem("äntligt"), "änt" );
	deepEqual( Stem("äppelgårdens"), "äppelgård" );
	deepEqual( Stem("äpple"), "äppl" );
	deepEqual( Stem("äppleansikte"), "äppleansik" );
	deepEqual( Stem("äppleansiktet"), "äppleansiktet" );
	deepEqual( Stem("äpplen"), "äppl" );
	deepEqual( Stem("äppleträd"), "äppleträd" );
	deepEqual( Stem("är"), "är" );
	deepEqual( Stem("ära"), "ära" );
	deepEqual( Stem("ärade"), "ärad" );
	deepEqual( Stem("äran"), "äran" );
	deepEqual( Stem("ärans"), "äran" );
	deepEqual( Stem("äras"), "äras" );
	deepEqual( Stem("ärat"), "ärat" );
	deepEqual( Stem("ärbar"), "ärb" );
	deepEqual( Stem("ärbara"), "ärbar" );
	deepEqual( Stem("ärbarhet"), "ärbar" );
	deepEqual( Stem("ärbart"), "ärbart" );
	deepEqual( Stem("äregirighet"), "äregir" );
	deepEqual( Stem("äregirigheten"), "äregir" );
	deepEqual( Stem("ärelysten"), "ärelyst" );
	deepEqual( Stem("ärelystna"), "ärelystn" );
	deepEqual( Stem("ärelystnad"), "ärelystn" );
	deepEqual( Stem("ärende"), "ärend" );
	deepEqual( Stem("ärenden"), "ärend" );
	deepEqual( Stem("ärendet"), "ärendet" );
	deepEqual( Stem("ärft"), "ärft" );
	deepEqual( Stem("ärg"), "ärg" );
	deepEqual( Stem("ärgigt"), "ärg" );
	deepEqual( Stem("ärgstrimmor"), "ärgstrimm" );
	deepEqual( Stem("äring"), "äring" );
	deepEqual( Stem("ärkebiskop"), "ärkebiskop" );
	deepEqual( Stem("ärkenarr"), "ärkenarr" );
	deepEqual( Stem("ärlig"), "ärl" );
	deepEqual( Stem("ärliga"), "ärl" );
	deepEqual( Stem("ärlige"), "ärl" );
	deepEqual( Stem("ärligen"), "ärl" );
	deepEqual( Stem("ärligt"), "ärl" );
	deepEqual( Stem("ärm"), "ärm" );
	deepEqual( Stem("ärmar"), "ärm" );
	deepEqual( Stem("ärmarne"), "ärm" );
	deepEqual( Stem("ärmu"), "ärmu" );
	deepEqual( Stem("ärna"), "ärn" );
	deepEqual( Stem("ärnade"), "ärn" );
	deepEqual( Stem("ärnar"), "ärn" );
	deepEqual( Stem("ärnat"), "ärn" );
	deepEqual( Stem("äro"), "äro" );
	deepEqual( Stem("ärones"), "äron" );
	deepEqual( Stem("ärr"), "ärr" );
	deepEqual( Stem("ärter"), "ärt" );
	deepEqual( Stem("ärtskidor"), "ärtskid" );
	deepEqual( Stem("ärtsängarna"), "ärtsäng" );
	deepEqual( Stem("ärva"), "ärv" );
	deepEqual( Stem("ärvd"), "ärvd" );
	deepEqual( Stem("ärvda"), "ärvd" );
	deepEqual( Stem("ärvde"), "ärvd" );
	deepEqual( Stem("ärver"), "ärv" );
	deepEqual( Stem("ärvt"), "ärvt" );
	deepEqual( Stem("äsch"), "äsch" );
	deepEqual( Stem("äskade"), "äsk" );
	deepEqual( Stem("äskar"), "äsk" );
	deepEqual( Stem("ät"), "ät" );
	deepEqual( Stem("äta"), "äta" );
	deepEqual( Stem("ätbart"), "ätbart" );
	deepEqual( Stem("äter"), "äter" );
	deepEqual( Stem("ätit"), "ätit" );
	deepEqual( Stem("ätlt"), "ätlt" );
	deepEqual( Stem("ätningen"), "ätning" );
	deepEqual( Stem("ätt"), "ätt" );
	deepEqual( Stem("ätten"), "ätt" );
	deepEqual( Stem("ättika"), "ättik" );
	deepEqual( Stem("ättikan"), "ättikan" );
	deepEqual( Stem("äu"), "äu" );
	deepEqual( Stem("ävcn"), "ävcn" );
	deepEqual( Stem("även"), "även" );
	deepEqual( Stem("ävensom"), "ävensom" );
	deepEqual( Stem("äventyr"), "äventyr" );
	deepEqual( Stem("äventyrens"), "äventyr" );
	deepEqual( Stem("äventyret"), "äventyret" );
	deepEqual( Stem("äventyrligheter"), "äventyr" );
	deepEqual( Stem("äventyrslysten"), "äventyrslyst" );
	deepEqual( Stem("ävlan"), "ävlan" );
	deepEqual( Stem("å"), "å" );
	deepEqual( Stem("åar"), "åar" );
	deepEqual( Stem("åberopa"), "åberop" );
	deepEqual( Stem("åberopade"), "åberop" );
	deepEqual( Stem("ådagalade"), "ådagal" );
	deepEqual( Stem("ådagalagt"), "ådagalag" );
	deepEqual( Stem("ådagalägger"), "ådagalägg" );
	deepEqual( Stem("åder"), "åder" );
	deepEqual( Stem("åderman"), "åderman" );
	deepEqual( Stem("ådermans"), "åderman" );
	deepEqual( Stem("ådraga"), "ådrag" );
	deepEqual( Stem("ådragit"), "ådragit" );
	deepEqual( Stem("ådrog"), "ådrog" );
	deepEqual( Stem("ådror"), "ådr" );
	deepEqual( Stem("ådrorna"), "ådr" );
	deepEqual( Stem("åg"), "åg" );
	deepEqual( Stem("åh"), "åh" );
	deepEqual( Stem("åhörande"), "åhör" );
	deepEqual( Stem("åhörare"), "åhör" );
	deepEqual( Stem("åhörarinna"), "åhörarin" );
	deepEqual( Stem("åhörarinnan"), "åhörarinnan" );
	deepEqual( Stem("åhörarna"), "åhör" );
	deepEqual( Stem("åhörarnas"), "åhör" );
	deepEqual( Stem("åhörarskaran"), "åhörarskaran" );
	deepEqual( Stem("åhörde"), "åhörd" );
	deepEqual( Stem("åhört"), "åhört" );
	deepEqual( Stem("åj"), "åj" );
	deepEqual( Stem("åja"), "åja" );
	deepEqual( Stem("åjo"), "åjo" );
	deepEqual( Stem("åka"), "åka" );
	deepEqual( Stem("åkdon"), "åkdon" );
	deepEqual( Stem("åkdonet"), "åkdonet" );
	deepEqual( Stem("åker"), "åker" );
	deepEqual( Stem("åkermans"), "åkerman" );
	deepEqual( Stem("åkern"), "åkern" );
	deepEqual( Stem("åkerns"), "åkern" );
	deepEqual( Stem("åklagare"), "åklag" );
	deepEqual( Stem("åkomma"), "åkomm" );
	deepEqual( Stem("åkomman"), "åkomman" );
	deepEqual( Stem("åkrar"), "åkr" );
	deepEqual( Stem("åkrarna"), "åkr" );
	deepEqual( Stem("åkrarnas"), "åkr" );
	deepEqual( Stem("åkt"), "åkt" );
	deepEqual( Stem("åkte"), "åkt" );
	deepEqual( Stem("ål"), "ål" );
	deepEqual( Stem("ålade"), "ålad" );
	deepEqual( Stem("ålande"), "åland" );
	deepEqual( Stem("ålder"), "åld" );
	deepEqual( Stem("ålderdom"), "ålderdom" );
	deepEqual( Stem("ålderdomen"), "ålderdom" );
	deepEqual( Stem("ålderdoms"), "ålderdom" );
	deepEqual( Stem("åldern"), "åld" );
	deepEqual( Stem("ålders"), "ålder" );
	deepEqual( Stem("ålderstigna"), "ålderstign" );
	deepEqual( Stem("åldrad"), "åldr" );
	deepEqual( Stem("åldrade"), "åldr" );
	deepEqual( Stem("åldrades"), "åldr" );
	deepEqual( Stem("åldrat"), "åldr" );
	deepEqual( Stem("åldrats"), "åldrat" );
	deepEqual( Stem("åldrig"), "åldr" );
	deepEqual( Stem("åldrigaste"), "åldr" );
	deepEqual( Stem("åldring"), "åldring" );
	deepEqual( Stem("åliggande"), "åligg" );
	deepEqual( Stem("åliggandet"), "åligg" );
	deepEqual( Stem("ålägger"), "ålägg" );
	deepEqual( Stem("ån"), "ån" );
	deepEqual( Stem("ånga"), "ång" );
	deepEqual( Stem("ångade"), "ång" );
	deepEqual( Stem("ångan"), "ångan" );
	deepEqual( Stem("ångande"), "ång" );
	deepEqual( Stem("ångares"), "ångar" );
	deepEqual( Stem("ångbåten"), "ångbåt" );
	deepEqual( Stem("ångbåtsfärd"), "ångbåtsfärd" );
	deepEqual( Stem("ångbåtslustfärder"), "ångbåtslustfärd" );
	deepEqual( Stem("ånger"), "ång" );
	deepEqual( Stem("ångerfulle"), "ångerfull" );
	deepEqual( Stem("ångerfullt"), "ångerfull" );
	deepEqual( Stem("ångern"), "ång" );
	deepEqual( Stem("ångerns"), "ång" );
	deepEqual( Stem("ångest"), "ångest" );
	deepEqual( Stem("ångesten"), "ångest" );
	deepEqual( Stem("ångestfull"), "ångestfull" );
	deepEqual( Stem("ångestfulla"), "ångestfull" );
	deepEqual( Stem("ångestfullt"), "ångestfull" );
	deepEqual( Stem("ångfartyg"), "ångfartyg" );
	deepEqual( Stem("ångfartygen"), "ångfartyg" );
	deepEqual( Stem("ångor"), "ång" );
	deepEqual( Stem("ångra"), "ångr" );
	deepEqual( Stem("ångrade"), "ångr" );
	deepEqual( Stem("ångrar"), "ångr" );
	deepEqual( Stem("ångrat"), "ångr" );
	deepEqual( Stem("ångslup"), "ångslup" );
	deepEqual( Stem("ångst"), "ångst" );
	deepEqual( Stem("ångsten"), "ångst" );
	deepEqual( Stem("ånyo"), "ånyo" );
	deepEqual( Stem("år"), "år" );
	deepEqual( Stem("åratal"), "åratal" );
	deepEqual( Stem("åren"), "åren" );
	deepEqual( Stem("årens"), "åren" );
	deepEqual( Stem("året"), "året" );
	deepEqual( Stem("årets"), "året" );
	deepEqual( Stem("århundrade"), "århundr" );
	deepEqual( Stem("århundrades"), "århundr" );
	deepEqual( Stem("århundradets"), "århundradet" );
	deepEqual( Stem("årlig"), "årl" );
	deepEqual( Stem("årliga"), "årl" );
	deepEqual( Stem("årligen"), "årl" );
	deepEqual( Stem("årligt"), "årl" );
	deepEqual( Stem("årorna"), "årorn" );
	deepEqual( Stem("års"), "års" );
	deepEqual( Stem("årspremierna"), "årspremi" );
	deepEqual( Stem("årsuppköp"), "årsuppköp" );
	deepEqual( Stem("årtag"), "årtag" );
	deepEqual( Stem("årtal"), "årtal" );
	deepEqual( Stem("årtionden"), "årtiond" );
	deepEqual( Stem("årtusenden"), "årtusend" );
	deepEqual( Stem("åsar"), "åsar" );
	deepEqual( Stem("åse"), "åse" );
	deepEqual( Stem("åsen"), "åsen" );
	deepEqual( Stem("åsett"), "åset" );
	deepEqual( Stem("åsigt"), "åsig" );
	deepEqual( Stem("åsigter"), "åsig" );
	deepEqual( Stem("åsikt"), "åsik" );
	deepEqual( Stem("åsikten"), "åsik" );
	deepEqual( Stem("åsikter"), "åsik" );
	deepEqual( Stem("åska"), "åsk" );
	deepEqual( Stem("åskan"), "åskan" );
	deepEqual( Stem("åskor"), "åsk" );
	deepEqual( Stem("åskstråle"), "åskstrål" );
	deepEqual( Stem("åskådandets"), "åskådandet" );
	deepEqual( Stem("åskådare"), "åskåd" );
	deepEqual( Stem("åskådareplatsen"), "åskådareplats" );
	deepEqual( Stem("åskådares"), "åskådar" );
	deepEqual( Stem("åskådarna"), "åskåd" );
	deepEqual( Stem("åskådarnas"), "åskåd" );
	deepEqual( Stem("åskådlig"), "åskåd" );
	deepEqual( Stem("åskådliga"), "åskåd" );
	deepEqual( Stem("åstad"), "åst" );
	deepEqual( Stem("åstadkomma"), "åstadkomm" );
	deepEqual( Stem("åstadkommit"), "åstadkommit" );
	deepEqual( Stem("åstundar"), "åstund" );
	deepEqual( Stem("åsyftade"), "åsyft" );
	deepEqual( Stem("åsyn"), "åsyn" );
	deepEqual( Stem("åsynen"), "åsyn" );
	deepEqual( Stem("åt"), "åt" );
	deepEqual( Stem("åtaga"), "åtag" );
	deepEqual( Stem("åtager"), "åtag" );
	deepEqual( Stem("åtagit"), "åtagit" );
	deepEqual( Stem("åtar"), "åtar" );
	deepEqual( Stem("åtbörd"), "åtbörd" );
	deepEqual( Stem("åtbörder"), "åtbörd" );
	deepEqual( Stem("åtcr"), "åtcr" );
	deepEqual( Stem("åtdragen"), "åtdrag" );
	deepEqual( Stem("åter"), "åter" );
	deepEqual( Stem("återbetalningen"), "återbetalning" );
	deepEqual( Stem("återbjudande"), "återbjud" );
	deepEqual( Stem("återbringa"), "återbring" );
	deepEqual( Stem("återbud"), "återbud" );
	deepEqual( Stem("återfalla"), "återfall" );
	deepEqual( Stem("återfann"), "återfan" );
	deepEqual( Stem("återfick"), "återfick" );
	deepEqual( Stem("återfingo"), "återfingo" );
	deepEqual( Stem("återfinna"), "återfin" );
	deepEqual( Stem("återfinner"), "återfin" );
	deepEqual( Stem("återfunnit"), "återfunnit" );
	deepEqual( Stem("återfärden"), "återfärd" );
	deepEqual( Stem("återfå"), "återfå" );
	deepEqual( Stem("återfår"), "återfår" );
	deepEqual( Stem("återfått"), "återfåt" );
	deepEqual( Stem("återfödd"), "återföd" );
	deepEqual( Stem("återföll"), "återföll" );
	deepEqual( Stem("återföra"), "återför" );
	deepEqual( Stem("återförsätta"), "återförsät" );
	deepEqual( Stem("återgaf"), "återgaf" );
	deepEqual( Stem("återgav"), "återgav" );
	deepEqual( Stem("återgavs"), "återgav" );
	deepEqual( Stem("återgivit"), "återgivit" );
	deepEqual( Stem("återglansen"), "återglans" );
	deepEqual( Stem("återgälda"), "återgäld" );
	deepEqual( Stem("återgäldade"), "återgäld" );
	deepEqual( Stem("återgåvo"), "återgåvo" );
	deepEqual( Stem("återgåvos"), "återgåvo" );
	deepEqual( Stem("återhålla"), "återhåll" );
	deepEqual( Stem("återhållen"), "återhåll" );
	deepEqual( Stem("återhållsam"), "återhållsam" );
	deepEqual( Stem("återigen"), "åter" );
	deepEqual( Stem("återkalla"), "återkall" );
	deepEqual( Stem("återkallade"), "återkall" );
	deepEqual( Stem("återkallandet"), "återkall" );
	deepEqual( Stem("återklingat"), "återkling" );
	deepEqual( Stem("återkom"), "återkom" );
	deepEqual( Stem("återkomma"), "återkomm" );
	deepEqual( Stem("återkommande"), "återkomm" );
	deepEqual( Stem("återkommen"), "återkomm" );
	deepEqual( Stem("återkommer"), "återkomm" );
	deepEqual( Stem("återkommo"), "återkommo" );
	deepEqual( Stem("återkomst"), "återkomst" );
	deepEqual( Stem("återkomsten"), "återkomst" );
	deepEqual( Stem("återkomsteu"), "återkomsteu" );
	deepEqual( Stem("återräckte"), "återräck" );
	deepEqual( Stem("återse"), "åters" );
	deepEqual( Stem("återseende"), "återseend" );
	deepEqual( Stem("återseendet"), "återseendet" );
	deepEqual( Stem("återsett"), "återset" );
	deepEqual( Stem("återsken"), "återsk" );
	deepEqual( Stem("återspeglade"), "återspegl" );
	deepEqual( Stem("återstar"), "återst" );
	deepEqual( Stem("återstod"), "återstod" );
	deepEqual( Stem("återstoden"), "återstod" );
	deepEqual( Stem("återstodo"), "återstodo" );
	deepEqual( Stem("återställa"), "återställ" );
	deepEqual( Stem("återställande"), "återställ" );
	deepEqual( Stem("återställt"), "återställt" );
	deepEqual( Stem("återstå"), "återstå" );
	deepEqual( Stem("återståen"), "återstå" );
	deepEqual( Stem("återstående"), "återståend" );
	deepEqual( Stem("återstår"), "återstår" );
	deepEqual( Stem("återsvar"), "återsv" );
	deepEqual( Stem("återsågo"), "återsågo" );
	deepEqual( Stem("återtaga"), "återtag" );
	deepEqual( Stem("återtagen"), "återtag" );
	deepEqual( Stem("återtagit"), "återtagit" );
	deepEqual( Stem("återtog"), "återtog" );
	deepEqual( Stem("återtogo"), "återtogo" );
	deepEqual( Stem("återtogs"), "återtog" );
	deepEqual( Stem("återuppliva"), "återuppliv" );
	deepEqual( Stem("återupprepandet"), "återupprep" );
	deepEqual( Stem("återuppstå"), "återuppstå" );
	deepEqual( Stem("återupptages"), "återupptag" );
	deepEqual( Stem("återupptagit"), "återupptagit" );
	deepEqual( Stem("återvaknat"), "återvakn" );
	deepEqual( Stem("återvanda"), "återvand" );
	deepEqual( Stem("återvann"), "återvan" );
	deepEqual( Stem("återvunna"), "återvun" );
	deepEqual( Stem("återväcka"), "återväck" );
	deepEqual( Stem("återvägen"), "återväg" );
	deepEqual( Stem("återvända"), "återvänd" );
	deepEqual( Stem("återvändande"), "återvänd" );
	deepEqual( Stem("återvände"), "återvänd" );
	deepEqual( Stem("återvänder"), "återvänd" );
	deepEqual( Stem("återvändo"), "återvändo" );
	deepEqual( Stem("återvänt"), "återvänt" );
	deepEqual( Stem("återväntades"), "återvänt" );
	deepEqual( Stem("åtfölja"), "åtfölj" );
	deepEqual( Stem("åtföljas"), "åtfölj" );
	deepEqual( Stem("åtföljd"), "åtföljd" );
	deepEqual( Stem("åtföljda"), "åtföljd" );
	deepEqual( Stem("åtföljde"), "åtföljd" );
	deepEqual( Stem("åtföljdes"), "åtföljd" );
	deepEqual( Stem("åtgick"), "åtgick" );
	deepEqual( Stem("åtgingo"), "åtgingo" );
	deepEqual( Stem("åtgå"), "åtgå" );
	deepEqual( Stem("åtgångna"), "åtgångn" );
	deepEqual( Stem("åtknäppt"), "åtknäppt" );
	deepEqual( Stem("åtlutade"), "åtlut" );
	deepEqual( Stem("åtlydd"), "åtlyd" );
	deepEqual( Stem("åtlydde"), "åtlyd" );
	deepEqual( Stem("åtlöje"), "åtlöj" );
	deepEqual( Stem("åtminstone"), "åtminston" );
	deepEqual( Stem("åtnjutande"), "åtnjut" );
	deepEqual( Stem("åtnjutit"), "åtnjutit" );
	deepEqual( Stem("åtnjutna"), "åtnjutn" );
	deepEqual( Stem("åtnjöt"), "åtnjöt" );
	deepEqual( Stem("åtnöj"), "åtnöj" );
	deepEqual( Stem("åto"), "åto" );
	deepEqual( Stem("åtog"), "åtog" );
	deepEqual( Stem("åtrå"), "åtrå" );
	deepEqual( Stem("åtrådda"), "åtråd" );
	deepEqual( Stem("åtråfyllt"), "åtråfyllt" );
	deepEqual( Stem("åtrån"), "åtrån" );
	deepEqual( Stem("åtsittande"), "åtsit" );
	deepEqual( Stem("åtskildes"), "åtskild" );
	deepEqual( Stem("åtskilliga"), "åtskil" );
	deepEqual( Stem("åtskilligt"), "åtskil" );
	deepEqual( Stem("åtsmetat"), "åtsmet" );
	deepEqual( Stem("åtsnurrade"), "åtsnurr" );
	deepEqual( Stem("åtstramade"), "åtstram" );
	deepEqual( Stem("åtstruket"), "åtstruket" );
	deepEqual( Stem("ått"), "ått" );
	deepEqual( Stem("åtta"), "ått" );
	deepEqual( Stem("åttiofjerde"), "åttiofjerd" );
	deepEqual( Stem("åttkantigt"), "åttkant" );
	deepEqual( Stem("åttonde"), "åttond" );
	deepEqual( Stem("åtvridna"), "åtvridn" );
	deepEqual( Stem("ö"), "ö" );
	deepEqual( Stem("öar"), "öar" );
	deepEqual( Stem("öd"), "öd" );
	deepEqual( Stem("öda"), "öda" );
	deepEqual( Stem("ödas"), "ödas" );
	deepEqual( Stem("ödda"), "ödd" );
	deepEqual( Stem("öde"), "öde" );
	deepEqual( Stem("öden"), "öden" );
	deepEqual( Stem("ödesbestämda"), "ödesbestämd" );
	deepEqual( Stem("ödesbestämt"), "ödesbestämt" );
	deepEqual( Stem("ödesdigert"), "ödesdigert" );
	deepEqual( Stem("ödeshemman"), "ödeshemman" );
	deepEqual( Stem("ödeshemmanet"), "ödeshemmanet" );
	deepEqual( Stem("ödet"), "ödet" );
	deepEqual( Stem("ödets"), "ödet" );
	deepEqual( Stem("ödipus"), "ödipus" );
	deepEqual( Stem("ödmjaka"), "ödmjak" );
	deepEqual( Stem("ödmjuk"), "ödmjuk" );
	deepEqual( Stem("ödmjuka"), "ödmjuk" );
	deepEqual( Stem("ödmjukas"), "ödmjuk" );
	deepEqual( Stem("ödmjukast"), "ödmjuk" );
	deepEqual( Stem("ödmjukaste"), "ödmjuk" );
	deepEqual( Stem("ödmjukat"), "ödmjuk" );
	deepEqual( Stem("ödmjukhet"), "ödmjuk" );
	deepEqual( Stem("ödmjukt"), "ödmjuk" );
	deepEqual( Stem("ödsla"), "ödsl" );
	deepEqual( Stem("ödslig"), "öds" );
	deepEqual( Stem("ödsliga"), "öds" );
	deepEqual( Stem("ödsligare"), "öds" );
	deepEqual( Stem("ödslighet"), "öds" );
	deepEqual( Stem("ödslighetens"), "öds" );
	deepEqual( Stem("ödsligt"), "öds" );
	deepEqual( Stem("öfriga"), "öfr" );
	deepEqual( Stem("öfrigt"), "öfr" );
	deepEqual( Stem("öfvade"), "öfv" );
	deepEqual( Stem("öfvadt"), "öfvad" );
	deepEqual( Stem("öfvat"), "öfv" );
	deepEqual( Stem("öfver"), "öfv" );
	deepEqual( Stem("öfverallt"), "öfverallt" );
	deepEqual( Stem("öfverbrytande"), "öfverbryt" );
	deepEqual( Stem("öfverdrag"), "öfverdrag" );
	deepEqual( Stem("öfverdrifven"), "öfverdrifv" );
	deepEqual( Stem("öfverdrifvet"), "öfverdrifvet" );
	deepEqual( Stem("öfverdrogs"), "öfverdrog" );
	deepEqual( Stem("öfverduktig"), "öfverdukt" );
	deepEqual( Stem("öfverdådig"), "öfverdåd" );
	deepEqual( Stem("öfverdådiga"), "öfverdåd" );
	deepEqual( Stem("öfverenskommit"), "öfverenskommit" );
	deepEqual( Stem("öfverensstämde"), "öfverensstämd" );
	deepEqual( Stem("öfverensstämmande"), "öfverensstämm" );
	deepEqual( Stem("öfverensstämmelse"), "öfverensstämm" );
	deepEqual( Stem("öfverflyttade"), "öfverflyt" );
	deepEqual( Stem("öfverflödiga"), "öfverflöd" );
	deepEqual( Stem("öfverflödigt"), "öfverflöd" );
	deepEqual( Stem("öfvergaf"), "öfvergaf" );
	deepEqual( Stem("öfverge"), "öfverg" );
	deepEqual( Stem("öfvergifna"), "öfvergifn" );
	deepEqual( Stem("öfvergifnas"), "öfvergifn" );
	deepEqual( Stem("öfvergifva"), "öfvergifv" );
	deepEqual( Stem("öfvergifven"), "öfvergifv" );
	deepEqual( Stem("öfvergifver"), "öfvergifv" );
	deepEqual( Stem("öfvergåfvo"), "öfvergåfvo" );
	deepEqual( Stem("öfvergår"), "öfvergår" );
	deepEqual( Stem("öfvergått"), "öfvergåt" );
	deepEqual( Stem("öfverhalning"), "öfverhalning" );
	deepEqual( Stem("öfverhufvud"), "öfverhufvud" );
	deepEqual( Stem("öfverhängande"), "öfverhäng" );
	deepEqual( Stem("öfverlade"), "öfverl" );
	deepEqual( Stem("öfverlagt"), "öfverlag" );
	deepEqual( Stem("öfverlastad"), "öfverlast" );
	deepEqual( Stem("öfverlefva"), "öfverlefv" );
	deepEqual( Stem("öfverlefvat"), "öfverlefv" );
	deepEqual( Stem("öfverlemna"), "öfverlemn" );
	deepEqual( Stem("öfverlemnade"), "öfverlemn" );
	deepEqual( Stem("öfverlemnar"), "öfverlemn" );
	deepEqual( Stem("öfverlemnas"), "öfverlemn" );
	deepEqual( Stem("öfverlyckliga"), "öfverlyck" );
	deepEqual( Stem("öfverlägga"), "öfverlägg" );
	deepEqual( Stem("öfverläggning"), "öfverläggning" );
	deepEqual( Stem("öfverläggningar"), "öfverläggning" );
	deepEqual( Stem("öfverlägsenhet"), "öfverlägsen" );
	deepEqual( Stem("öfverlät"), "öfverlät" );
	deepEqual( Stem("öfverlåtande"), "öfverlåt" );
	deepEqual( Stem("öfverman"), "öfverman" );
	deepEqual( Stem("öfvermod"), "öfvermod" );
	deepEqual( Stem("öfvermorgon"), "öfvermorgon" );
	deepEqual( Stem("öfvermåttan"), "öfvermåttan" );
	deepEqual( Stem("öfverraska"), "öfverrask" );
	deepEqual( Stem("öfverraskad"), "öfverrask" );
	deepEqual( Stem("öfverraskade"), "öfverrask" );
	deepEqual( Stem("öfverraskades"), "öfverrask" );
	deepEqual( Stem("öfverraskat"), "öfverrask" );
	deepEqual( Stem("öfverraskning"), "öfverraskning" );
	deepEqual( Stem("öfverraskningen"), "öfverraskning" );
	deepEqual( Stem("öfverräknat"), "öfverräkn" );
	deepEqual( Stem("öfversittare"), "öfversit" );
	deepEqual( Stem("öfverslogo"), "öfverslogo" );
	deepEqual( Stem("öfversta"), "öfverst" );
	deepEqual( Stem("öfversteg"), "öfversteg" );
	deepEqual( Stem("öfverstånden"), "öfverstånd" );
	deepEqual( Stem("öfverståndna"), "öfverståndn" );
	deepEqual( Stem("öfvertaga"), "öfvertag" );
	deepEqual( Stem("öfvertala"), "öfvertal" );
	deepEqual( Stem("öfvertalat"), "öfvertal" );
	deepEqual( Stem("öfvertyga"), "öfvertyg" );
	deepEqual( Stem("öfvertygad"), "öfvertyg" );
	deepEqual( Stem("öfvertygade"), "öfvertyg" );
	deepEqual( Stem("öfvertygande"), "öfvertyg" );
	deepEqual( Stem("öfvertygar"), "öfvertyg" );
	deepEqual( Stem("öfvertygas"), "öfvertyg" );
	deepEqual( Stem("öfvertygat"), "öfvertyg" );
	deepEqual( Stem("öfvertygelse"), "öfvertyg" );
	deepEqual( Stem("öfvertygelsen"), "öfvertyg" );
	deepEqual( Stem("öfvertänkt"), "öfvertänk" );
	deepEqual( Stem("öfvertänkte"), "öfvertänk" );
	deepEqual( Stem("öfvervann"), "öfvervan" );
	deepEqual( Stem("öfvervinna"), "öfvervin" );
	deepEqual( Stem("öfvervunnen"), "öfvervun" );
	deepEqual( Stem("öfverväg"), "öfverväg" );
	deepEqual( Stem("öfvervägande"), "öfverväg" );
	deepEqual( Stem("öfverändakastar"), "öfverändakast" );
	deepEqual( Stem("öga"), "öga" );
	deepEqual( Stem("ögat"), "ögat" );
	deepEqual( Stem("ögats"), "ögat" );
	deepEqual( Stem("ögmlell"), "ögmlell" );
	deepEqual( Stem("ögna"), "ögn" );
	deepEqual( Stem("ögnade"), "ögn" );
	deepEqual( Stem("ögo"), "ögo" );
	deepEqual( Stem("ögon"), "ögon" );
	deepEqual( Stem("ögona"), "ögon" );
	deepEqual( Stem("ögonblick"), "ögonblick" );
	deepEqual( Stem("ögonblicken"), "ögonblick" );
	deepEqual( Stem("ögonblicket"), "ögonblicket" );
	deepEqual( Stem("ögonblickets"), "ögonblicket" );
	deepEqual( Stem("ögonblickliga"), "ögonblick" );
	deepEqual( Stem("ögonblickligen"), "ögonblick" );
	deepEqual( Stem("ögonblickligt"), "ögonblick" );
	deepEqual( Stem("ögonblicks"), "ögonblick" );
	deepEqual( Stem("ögonbryn"), "ögonbryn" );
	deepEqual( Stem("ögonbrynen"), "ögonbryn" );
	deepEqual( Stem("ögonbrynens"), "ögonbryn" );
	deepEqual( Stem("ögonbryrl"), "ögonbryrl" );
	deepEqual( Stem("ögoncn"), "ögoncn" );
	deepEqual( Stem("ögonem"), "ögonem" );
	deepEqual( Stem("ögonen"), "ögon" );
	deepEqual( Stem("ögonens"), "ögon" );
	deepEqual( Stem("ögonfransar"), "ögonfrans" );
	deepEqual( Stem("ögonfägnad"), "ögonfägn" );
	deepEqual( Stem("ögonhar"), "ögonh" );
	deepEqual( Stem("ögonhålorna"), "ögonhål" );
	deepEqual( Stem("ögonhår"), "ögonhår" );
	deepEqual( Stem("ögonhåren"), "ögonhår" );
	deepEqual( Stem("ögonkast"), "ögonk" );
	deepEqual( Stem("ögonkastet"), "ögonkastet" );
	deepEqual( Stem("ögonlock"), "ögonlock" );
	deepEqual( Stem("ögonlocken"), "ögonlock" );
	deepEqual( Stem("ögonmick"), "ögonmick" );
	deepEqual( Stem("ögonmyster"), "ögonmyst" );
	deepEqual( Stem("ögonsigte"), "ögons" );
	deepEqual( Stem("ögonsikte"), "ögonsik" );
	deepEqual( Stem("ögonskenligen"), "ögonsken" );
	deepEqual( Stem("ögonsten"), "ögonst" );
	deepEqual( Stem("ögonsvärta"), "ögonsvärt" );
	deepEqual( Stem("ögonvatten"), "ögonvat" );
	deepEqual( Stem("ögonvitor"), "ögonvit" );
	deepEqual( Stem("öjan"), "öjan" );
	deepEqual( Stem("ök"), "ök" );
	deepEqual( Stem("öka"), "öka" );
	deepEqual( Stem("ökad"), "ökad" );
	deepEqual( Stem("ökade"), "ökad" );
	deepEqual( Stem("ökades"), "ökad" );
	deepEqual( Stem("ökar"), "ökar" );
	deepEqual( Stem("öken"), "öken" );
	deepEqual( Stem("ökentorrt"), "ökentorrt" );
	deepEqual( Stem("ökn"), "ökn" );
	deepEqual( Stem("öknamn"), "öknamn" );
	deepEqual( Stem("öknen"), "ökn" );
	deepEqual( Stem("öknens"), "ökn" );
	deepEqual( Stem("ökniga"), "ökn" );
	deepEqual( Stem("öl"), "öl" );
	deepEqual( Stem("ölet"), "ölet" );
	deepEqual( Stem("ölost"), "ölost" );
	deepEqual( Stem("ölostskålen"), "ölostskål" );
	deepEqual( Stem("ölsupa"), "ölsup" );
	deepEqual( Stem("öltunnor"), "öltun" );
	deepEqual( Stem("öm"), "öm" );
	deepEqual( Stem("ömhet"), "ömhet" );
	deepEqual( Stem("ömhjärtade"), "ömhjärt" );
	deepEqual( Stem("ömkade"), "ömk" );
	deepEqual( Stem("ömkande"), "ömk" );
	deepEqual( Stem("ömkilig"), "ömki" );
	deepEqual( Stem("ömklig"), "ömk" );
	deepEqual( Stem("ömkliga"), "ömk" );
	deepEqual( Stem("ömkligt"), "ömk" );
	deepEqual( Stem("ömma"), "ömm" );
	deepEqual( Stem("ömmade"), "ömm" );
	deepEqual( Stem("ömmande"), "ömm" );
	deepEqual( Stem("ömmare"), "ömm" );
	deepEqual( Stem("ömmaste"), "ömm" );
	deepEqual( Stem("ömme"), "ömm" );
	deepEqual( Stem("ömse"), "öms" );
	deepEqual( Stem("ömsesidig"), "ömsesid" );
	deepEqual( Stem("ömsesidiga"), "ömsesid" );
	deepEqual( Stem("ömsesidigt"), "ömsesid" );
	deepEqual( Stem("ömsinta"), "ömsint" );
	deepEqual( Stem("ömsom"), "ömsom" );
	deepEqual( Stem("ömt"), "ömt" );
	deepEqual( Stem("ömtålig"), "ömtå" );
	deepEqual( Stem("ömtåliga"), "ömtå" );
	deepEqual( Stem("ön"), "ön" );
	deepEqual( Stem("öns"), "öns" );
	deepEqual( Stem("önska"), "önsk" );
	deepEqual( Stem("önskade"), "önsk" );
	deepEqual( Stem("önskan"), "önskan" );
	deepEqual( Stem("önskar"), "önsk" );
	deepEqual( Stem("önskat"), "önsk" );
	deepEqual( Stem("önskligt"), "önsk" );
	deepEqual( Stem("önskningar"), "önskning" );
	deepEqual( Stem("önskningarna"), "önskning" );
	deepEqual( Stem("önskningars"), "önskningar" );
	deepEqual( Stem("önskvärd"), "önskvärd" );
	deepEqual( Stem("önskvärdt"), "önskvärd" );
	deepEqual( Stem("önskvärt"), "önskvärt" );
	deepEqual( Stem("öpp"), "öpp" );
	deepEqual( Stem("öppen"), "öpp" );
	deepEqual( Stem("öppenhet"), "öppen" );
	deepEqual( Stem("öppenhjertig"), "öppenhjert" );
	deepEqual( Stem("öppenhjärtig"), "öppenhjärt" );
	deepEqual( Stem("öppenhjärtigt"), "öppenhjärt" );
	deepEqual( Stem("öppet"), "öppet" );
	deepEqual( Stem("öppna"), "öppn" );
	deepEqual( Stem("öppnad"), "öppn" );
	deepEqual( Stem("öppnade"), "öppn" );
	deepEqual( Stem("öppnades"), "öppn" );
	deepEqual( Stem("öppnar"), "öppn" );
	deepEqual( Stem("öppnas"), "öppn" );
	deepEqual( Stem("öppnat"), "öppn" );
	deepEqual( Stem("öppnats"), "öppnat" );
	deepEqual( Stem("öppnen"), "öppn" );
	deepEqual( Stem("öppningar"), "öppning" );
	deepEqual( Stem("öppningen"), "öppning" );
	deepEqual( Stem("ör"), "ör" );
	deepEqual( Stem("öra"), "öra" );
	deepEqual( Stem("örat"), "örat" );
	deepEqual( Stem("öre"), "öre" );
	deepEqual( Stem("öregrund"), "öregrund" );
	deepEqual( Stem("öresund"), "öresund" );
	deepEqual( Stem("örfilar"), "örfil" );
	deepEqual( Stem("örhinnor"), "örhin" );
	deepEqual( Stem("örklarligt"), "örklar" );
	deepEqual( Stem("örmåga"), "örmåg" );
	deepEqual( Stem("örn"), "örn" );
	deepEqual( Stem("örnar"), "örn" );
	deepEqual( Stem("örnens"), "örn" );
	deepEqual( Stem("örnungen"), "örnung" );
	deepEqual( Stem("öro"), "öro" );
	deepEqual( Stem("öron"), "öron" );
	deepEqual( Stem("öronen"), "öron" );
	deepEqual( Stem("örsnibbarna"), "örsnibb" );
	deepEqual( Stem("örtagård"), "örtagård" );
	deepEqual( Stem("örter"), "ört" );
	deepEqual( Stem("örternas"), "ört" );
	deepEqual( Stem("örvitlig"), "örvit" );
	deepEqual( Stem("ösa"), "ösa" );
	deepEqual( Stem("ösregn"), "ösregn" );
	deepEqual( Stem("ösregna"), "ösregn" );
	deepEqual( Stem("östan"), "östan" );
	deepEqual( Stem("östanvinden"), "östanvind" );
	deepEqual( Stem("öste"), "öst" );
	deepEqual( Stem("öster"), "öst" );
	deepEqual( Stem("östergötland"), "östergötland" );
	deepEqual( Stem("österlandet"), "österl" );
	deepEqual( Stem("östermalm"), "östermalm" );
	deepEqual( Stem("österrike"), "österrik" );
	deepEqual( Stem("östersjön"), "östersjön" );
	deepEqual( Stem("östersjöprovinsernas"), "östersjöprovins" );
	deepEqual( Stem("östligt"), "öst" );
	deepEqual( Stem("östra"), "östr" );
	deepEqual( Stem("öt"), "öt" );
	deepEqual( Stem("öva"), "öva" );
	deepEqual( Stem("övade"), "övad" );
	deepEqual( Stem("övar"), "övar" );
	deepEqual( Stem("övat"), "övat" );
	deepEqual( Stem("övcr"), "övcr" );
	deepEqual( Stem("över"), "över" );
	deepEqual( Stem("överallt"), "överallt" );
	deepEqual( Stem("överbefolkades"), "överbefolk" );
	deepEqual( Stem("överbevisa"), "överbevis" );
	deepEqual( Stem("överbevisar"), "överbevis" );
	deepEqual( Stem("överblivna"), "överblivn" );
	deepEqual( Stem("överbryggad"), "överbrygg" );
	deepEqual( Stem("överdrag"), "överdrag" );
	deepEqual( Stem("överdraget"), "överdraget" );
	deepEqual( Stem("överdriven"), "överdriv" );
	deepEqual( Stem("överdriver"), "överdriv" );
	deepEqual( Stem("överdrivet"), "överdrivet" );
	deepEqual( Stem("överdrivna"), "överdrivn" );
	deepEqual( Stem("överdrogs"), "överdrog" );
	deepEqual( Stem("överdådig"), "överdåd" );
	deepEqual( Stem("överdådigt"), "överdåd" );
	deepEqual( Stem("överens"), "över" );
	deepEqual( Stem("överenskommelse"), "överenskomm" );
	deepEqual( Stem("överenskommelsen"), "överenskomm" );
	deepEqual( Stem("överenskommet"), "överenskommet" );
	deepEqual( Stem("överenskommit"), "överenskommit" );
	deepEqual( Stem("överensstämde"), "överensstämd" );
	deepEqual( Stem("överensstämma"), "överensstämm" );
	deepEqual( Stem("överensstämmande"), "överensstämm" );
	deepEqual( Stem("överensstämmelse"), "överensstämm" );
	deepEqual( Stem("överensstämmer"), "överensstämm" );
	deepEqual( Stem("överfallit"), "överfallit" );
	deepEqual( Stem("överfarten"), "överfart" );
	deepEqual( Stem("överfarter"), "överfart" );
	deepEqual( Stem("överflyglad"), "överflygl" );
	deepEqual( Stem("överflöd"), "överflöd" );
	deepEqual( Stem("överflödande"), "överflöd" );
	deepEqual( Stem("överflödig"), "överflöd" );
	deepEqual( Stem("överflödiga"), "överflöd" );
	deepEqual( Stem("överflödigt"), "överflöd" );
	deepEqual( Stem("överfor"), "överf" );
	deepEqual( Stem("överfull"), "överfull" );
	deepEqual( Stem("överfullt"), "överfull" );
	deepEqual( Stem("överfölls"), "överföll" );
	deepEqual( Stem("övergav"), "övergav" );
	deepEqual( Stem("överge"), "överg" );
	deepEqual( Stem("överger"), "överg" );
	deepEqual( Stem("övergick"), "övergick" );
	deepEqual( Stem("övergiva"), "övergiv" );
	deepEqual( Stem("övergiven"), "övergiv" );
	deepEqual( Stem("övergivet"), "övergivet" );
	deepEqual( Stem("övergivit"), "övergivit" );
	deepEqual( Stem("övergivna"), "övergivn" );
	deepEqual( Stem("övergjutas"), "övergjut" );
	deepEqual( Stem("övergjutits"), "övergjutit" );
	deepEqual( Stem("övergula"), "övergul" );
	deepEqual( Stem("övergå"), "övergå" );
	deepEqual( Stem("övergångar"), "övergång" );
	deepEqual( Stem("övergår"), "övergår" );
	deepEqual( Stem("övergått"), "övergåt" );
	deepEqual( Stem("överhopad"), "överhop" );
	deepEqual( Stem("överhopades"), "överhop" );
	deepEqual( Stem("överhopar"), "överhop" );
	deepEqual( Stem("överhängande"), "överhäng" );
	deepEqual( Stem("överhöljda"), "överhöljd" );
	deepEqual( Stem("överhöljt"), "överhöljt" );
	deepEqual( Stem("överkäken"), "överkäk" );
	deepEqual( Stem("överkörd"), "överkörd" );
	deepEqual( Stem("överlagt"), "överlag" );
	deepEqual( Stem("överlapp"), "överlapp" );
	deepEqual( Stem("överlastad"), "överlast" );
	deepEqual( Stem("överleva"), "överlev" );
	deepEqual( Stem("överlyckliga"), "överlyck" );
	deepEqual( Stem("överlägga"), "överlägg" );
	deepEqual( Stem("överläggning"), "överläggning" );
	deepEqual( Stem("överläggningar"), "överläggning" );
	deepEqual( Stem("överlägsenhet"), "överlägsen" );
	deepEqual( Stem("överlägsna"), "överlägsn" );
	deepEqual( Stem("överläkarens"), "överläk" );
	deepEqual( Stem("överlämna"), "överlämn" );
	deepEqual( Stem("överlämnad"), "överlämn" );
	deepEqual( Stem("överlämnade"), "överlämn" );
	deepEqual( Stem("överlämnar"), "överlämn" );
	deepEqual( Stem("överlämnat"), "överlämn" );
	deepEqual( Stem("överlämnats"), "överlämnat" );
	deepEqual( Stem("överläpp"), "överläpp" );
	deepEqual( Stem("överläppen"), "överläpp" );
	deepEqual( Stem("överlåtit"), "överlåtit" );
	deepEqual( Stem("överman"), "överman" );
	deepEqual( Stem("övermannad"), "överman" );
	deepEqual( Stem("övermod"), "övermod" );
	deepEqual( Stem("övermäktiga"), "övermäkt" );
	deepEqual( Stem("övermäktigt"), "övermäkt" );
	deepEqual( Stem("övermålat"), "övermål" );
	deepEqual( Stem("övermåttan"), "övermåttan" );
	deepEqual( Stem("överordnade"), "överordn" );
	deepEqual( Stem("överraska"), "överrask" );
	deepEqual( Stem("överraskad"), "överrask" );
	deepEqual( Stem("överraskadc"), "överraskadc" );
	deepEqual( Stem("överraskade"), "överrask" );
	deepEqual( Stem("överraskades"), "överrask" );
	deepEqual( Stem("överraskande"), "överrask" );
	deepEqual( Stem("överraskat"), "överrask" );
	deepEqual( Stem("överraskning"), "överraskning" );
	deepEqual( Stem("överraskningar"), "överraskning" );
	deepEqual( Stem("överraskningen"), "överraskning" );
	deepEqual( Stem("överraskningspappor"), "överraskningspapp" );
	deepEqual( Stem("överrock"), "överrock" );
	deepEqual( Stem("överräknade"), "överräkn" );
	deepEqual( Stem("överräknandet"), "överräkn" );
	deepEqual( Stem("överrösta"), "överröst" );
	deepEqual( Stem("översatta"), "översat" );
	deepEqual( Stem("överseendets"), "överseendet" );
	deepEqual( Stem("översh"), "översh" );
	deepEqual( Stem("översittarmin"), "översittarmin" );
	deepEqual( Stem("överskattar"), "överskat" );
	deepEqual( Stem("överskott"), "överskot" );
	deepEqual( Stem("överskrider"), "överskrid" );
	deepEqual( Stem("överskridit"), "överskridit" );
	deepEqual( Stem("överskrift"), "överskrift" );
	deepEqual( Stem("överskådande"), "överskåd" );
	deepEqual( Stem("översta"), "överst" );
	deepEqual( Stem("översteg"), "översteg" );
	deepEqual( Stem("överstelöjtnant"), "överstelöjtnant" );
	deepEqual( Stem("överstelöjtnanten"), "överstelöjtnant" );
	deepEqual( Stem("överstiger"), "överst" );
	deepEqual( Stem("överstinnan"), "överstinnan" );
	deepEqual( Stem("överströmmande"), "överströmm" );
	deepEqual( Stem("överstrött"), "överströt" );
	deepEqual( Stem("översvalla"), "översvall" );
	deepEqual( Stem("översvallande"), "översvall" );
	deepEqual( Stem("översvämmades"), "översvämm" );
	deepEqual( Stem("översvämning"), "översvämning" );
	deepEqual( Stem("översättning"), "översättning" );
	deepEqual( Stem("övertaga"), "övertag" );
	deepEqual( Stem("övertala"), "övertal" );
	deepEqual( Stem("övertalade"), "övertal" );
	deepEqual( Stem("övertalande"), "övertal" );
	deepEqual( Stem("överträffar"), "överträff" );
	deepEqual( Stem("övertvgade"), "övertvg" );
	deepEqual( Stem("övertvgelse"), "övertvg" );
	deepEqual( Stem("övertyg"), "övertyg" );
	deepEqual( Stem("övertyga"), "övertyg" );
	deepEqual( Stem("övertygad"), "övertyg" );
	deepEqual( Stem("övertygade"), "övertyg" );
	deepEqual( Stem("övertygat"), "övertyg" );
	deepEqual( Stem("övertygelse"), "övertyg" );
	deepEqual( Stem("övertygelsen"), "övertyg" );
	deepEqual( Stem("övertänkt"), "övertänk" );
	deepEqual( Stem("övervann"), "övervan" );
	deepEqual( Stem("övervar"), "överv" );
	deepEqual( Stem("övervikt"), "övervik" );
	deepEqual( Stem("övervinna"), "övervin" );
	deepEqual( Stem("övervinnande"), "övervin" );
	deepEqual( Stem("övervunna"), "övervun" );
	deepEqual( Stem("övervunnen"), "övervun" );
	deepEqual( Stem("övervunnit"), "övervunnit" );
	deepEqual( Stem("överväga"), "överväg" );
	deepEqual( Stem("övervägande"), "överväg" );
	deepEqual( Stem("övervägde"), "överväg" );
	deepEqual( Stem("övervägt"), "överväg" );
	deepEqual( Stem("överväldigad"), "överväld" );
	deepEqual( Stem("överändakastad"), "överändakast" );
	deepEqual( Stem("överändakastade"), "överändakast" );
	deepEqual( Stem("övning"), "övning" );
	deepEqual( Stem("övningen"), "övning" );
	deepEqual( Stem("övre"), "övr" );
	deepEqual( Stem("övriga"), "övr" );
	deepEqual( Stem("övrigt"), "övr" );
	deepEqual( Stem("öändligt"), "öänd" );
});
